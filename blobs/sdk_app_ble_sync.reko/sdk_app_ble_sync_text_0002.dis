void l2cap_recv(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 s8, word32 s9, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
l2cap_recv_entry:
l2302031A:
	word32 a0_1084
	word32 sp_1205 = fp + -80<i32>
	branch CONVERT(Mem25[a1 + 12<i32>:uint16], uint16, word32) >u 3<32> l2302034A
l2302034A:
	word32 a4_2302
	word32 a0_34 = net_buf_simple_pull_mem(a1 + 8<i32>, 4<32>, out a4_2302)
	word32 a5_43 = CONVERT(Mem25[a1 + 12<i32>:uint16], uint16, word32)
	branch (CONVERT(Mem25[a0_34 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem25[a0_34 + 2<i32>:byte], byte, word32)) == a5_43 l23020398
l23020398:
	word32 s1_1271 = CONVERT(Mem25[a0_34 + 1<i32>:byte], byte, word32)
	branch s1_1271 != 0<32> l230203A8
l230203A8:
	word32 a5_1251
	word32 a3_1079
	word32 s2_1114
	word32 ra_1270
	word32 a4_1078
	word32 a0_1082
	a3 = 0x15<32>
	word32 a4_48 = CONVERT(Mem25[a0_34:byte], byte, word32) + -1<i32> & 255<i32>
	branch a4_48 >u 0x15<32> l230208C0
l230203BA:
	word32 a4_1094
	word32 a5_1095
	word32 a0_1092
	word32 mstatus_1126
	word32 a5_1168
	word32 ra_1127
	word32 a0_1187
	word32 a2_1185
	word32 s1_1171
	a3 = 0x2307503C<32>
	switch (Mem25[(a4_48 << 2<i32>) + 0x2307503C<32>:word32]) { l23020802 l230208C0 l230208C0 l230208C0 l230208C0 l2302069C l23020732 l230208C0 l230208C0 l230208C0 l230208C0 l230208C0 l230208C0 l230208C0 l230208C0 l230208C0 l230208C0 l23020810 l230203CA l230203DA l2302058E l2302075C }
l2302075C:
	branch a5_43 >u 3<32> l2302076C
l2302076C:
	word32 a0_61 = bt_l2cap_le_lookup_tx_cid(Mem25[a0:int32], CONVERT(Mem25[s1_1271:byte], byte, word32) | CONVERT(Mem25[s1_1271 + 1<i32>:byte], byte, word32) << 8<i32>)
	branch a0_61 != 0<32> l23020790
l23020790:
	word32 a1_68 = CONVERT(Mem25[s1_1271 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem25[s1_1271 + 2<i32>:byte], byte, word32)
	word32 a3_73
	word32 a4_74
	word32 a2_2363
	branch k_sem_count_get(a0_61 + 92<i32>, 0x2307503C<32>, 3<32>, mstatus, out a2_2363, out a3_73, out a4_74) + a1_68 <u 0x10000000<32> l230207C4
l230207C4:
	word32 s0_89
	word32 a5_2453
	word32 mstatus_108
	word32 a4_118
	word32 a0_110
	word32 s2_130
	word32 s6_153
	word32 s5_155
	word32 a3_119
	word32 ra_116 = l2cap_chan_tx_give_credits(ra, s1_1271, a0_61, a1_68, a3_73, a4_74, 0x10000000<32>, mstatus, dwLoc50, dwLoc4C, dwLoc28, dwLoc10, dwLoc0C, dwArg24, dwArg3C, dwArg98, dwArgD8, dwArg0118, out s0_89, out a0_110, out a3_119, out a4_118, out a5_2453, out s2_130, out s5_155, out s6_153, out mstatus_108)
	word32 s1_109 = s0_89 + 104<i32>
l230207CE:
	word32 s0_112 = Mem111[a0_110 + 116<i32>:word32]
	branch a0_110 == 0<32> l230207F8
l230207F8:
	word32 a1_2476
	word32 s3_2480
	word32 s4_2481
	word32 a5_2479
	word32 a4_2478
	word32 a2_2477
	net_buf_get(ra_116, s0_112, s1_109, 0<32>, a3_119, a4_118, mstatus_108, dwLoc18, dwArg98, dwArgD8, out a0_110, out a1_2476, out a2_2477, out a3_119, out a4_2478, out a5_2479, out s2_130, out s3_2480, out s4_2481)
l230207D2:
	Mem141[s0_112 + 116<i32>:word32] = 0<32>
l230207D6:
	branch a0_110 == 0<32> l2302037C
l230207DC:
	word32 s0_163
	ra_116 = l2cap_chan_le_send_sdu(ra_116, s0_112, s0_112, CONVERT(Mem144[a0_110 + 20<i32>:uint16], uint16, word32), a3_119, s2_130, s5_155, s6_153, mstatus_108, dwLoc50, dwLoc4C, dwLoc48, s0, dwLoc28, dwLoc24, dwLoc18, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s0_163, out s1_109, out a0_110, out a3_119, out a4_118, out s2_130, out s5_155, out s6_153, out mstatus_108)
	branch a0_110 >= 0<32> l230207CE
l230207EC:
	branch a0_110 != 0xFFFFFFF5<32> l2302037C
l230207F2:
	Mem189[0x69<32>:word32] = s0_163
l230207B0:
	word32 a5_193
	word32 a3_197
	word32 s2_204
	word32 s5_207
	word32 a1_2456
	word32 a4_2458
	word32 a0_2455
	word32 s1_2454
	word32 a2_2457
	word32 s3_2460
	word32 s4_2461
	word32 s6_2462
	word32 s9_2465
	word32 a7_2459
	word32 s8_2464
	word32 s7_2463
	word32 s11_2467
	word32 s10_2466
	word32 s1_2469
	word32 t4_2468
	word32 a4_2471
	word32 a1_2470
	word32 s7_2473
	word32 s2_2472
	word32 mstatus_2475
	word32 s9_2474
	bt_l2cap_chan_disconnect(printf(ra, 0x23075320<32>, a3_73, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_2454, out a0_2455, out a1_2456, out a2_2457, out a3_197, out a4_2458, out a5_193, out a7_2459, out s2_204, out s3_2460, out s4_2461, out s5_207, out s6_2462, out s7_2463, out s8_2464, out s9_2465, out s10_2466, out s11_2467, out t4_2468), a3_197, a5_193, s2_204, s5_207, mstatus, dwLoc4C, dwLoc40, s8, s2, s0, dwLoc28, dwLoc20, dwLoc1C, dwLoc18, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg28, dwArg2C, a1_68, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s1_2469, out a1_2470, out a4_2471, out s2_2472, out s7_2473, out s9_2474, out mstatus_2475)
l23020786:
	a0_1084 = 0x230752F0<32>
l23020762:
	a0_1084 = 0x230752CC<32>
l2302058E:
	branch a5_43 >u 9<32> l2302059E
l2302059E:
	word32 a2_260
	word32 s0_249 = Mem25[a5_43 + 8<i32>:word32]
	word32 s2_252 = CONVERT(Mem25[a5_43 + 8<i32>:uint16], uint16, word32)
	word32 s7_253 = CONVERT(Mem25[a5_43:uint16], uint16, word32)
	word32 a1_258 = CONVERT(SLICE(s1_1271, word16, 0), word16, word32)
	branch (s2_252 & -9<i32>) == 0<32> l230205CC
l230205C4:
	a2_260 = 1<32>
	branch s2_252 != 5<32> l230205CE
l230205CC:
	a2_260 = 0<32>
l230205CE:
	word32 a4_273
	word32 a5_2362
	word32 a0_270 = __l2cap_lookup_ident(s0_249, a1_258, a2_260, out a4_273, out a5_2362)
	word32 s0_275 = a0_270
	branch a0_270 != 0<32> l230205E8
l230205E8:
	word32 a0_285
	word32 s2_291
	word32 a1_293
	word32 s3_296
	word32 s5_298
	word32 s6_299
	word32 s8_300
	word32 a5_2386
	word32 a2_2385
	word32 s4_297
	word32 a3_287
	word32 s1_290 = k_delayed_work_cancel(a0_270 + 0x10<32>, 0x2307503C<32>, a4_273, mstatus, dwLoc1C, dwLoc18, dwArg58, dwArg68, dwArg98, dwArgD8, out a0_285, out a1_293, out a2_2385, out a3_287, out a4_1094, out a5_2386, out s2_291, out s3_296, out s4_297, out s5_298, out s6_299, out s8_300)
	Mem308[a0_270 + 60<i32>:byte] = 0<8>
	branch s2_291 == 5<32> l23020644
l230205F8:
	a5_1095 = 8<32>
	branch s2_291 == 8<32> l23020644
l23020644:
	word32 a5_314
	word32 a5_318
	branch s2_291 == 5<32> l2302067E
l2302067E:
	a5_314 = CONVERT(Mem308[a0_270 + 61<i32>:byte], byte, word32)
	branch a5_314 <=u 1<32> l2302065A
l23020688:
	branch a5_314 != 2<32> l23020692
l23020692:
	branch a5_314 != 3<32> l2302066E
l23020698:
	a5_318 = 4<32>
l2302068E:
	a5_318 = 3<32>
l2302064A:
	a5_314 = 8<32>
	branch s2_291 != 8<32> l2302066E
l23020650:
	a5_314 = 1<32>
	branch CONVERT(Mem308[a0_270 + 61<i32>:byte], byte, word32) >u 1<32> l2302066E
l2302065A:
	a5_318 = 2<32>
l2302065C:
	Mem327[a0_270 + 61<i32>:byte] = SLICE(a5_318, byte, 0)
	s0_275 = Mem327[a0_285:word32]
	word32 a0_352
	word32 s1_2482
	word32 a4_2484
	word32 s3_2486
	word32 s2_2485
	word32 a3_2483
	word32 s5_2487
	ra = bt_conn_set_security(ra, s0_275, a0_285, CONVERT(Mem327[a0_270 + 61<i32>:byte], byte, word32), a3_287, s2_291, s3_296, mstatus, dwLoc50, dwLoc4C, dwLoc48, dwLoc44, dwLoc40, s8, s6, s4, s2, s0, dwLoc28, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwLoc0C, dwLoc08, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg2C, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, out s1_2482, out a0_352, out a3_2483, out a4_2484, out a5_314, out s2_2485, out s3_2486, out s5_2487, out mstatus)
	branch a0_352 == 0<32> l2302037C
l2302066E:
	a4_1094 = bt_l2cap_chan_remove(s0_275, a5_314, out a5_1095)
l230205FE:
	branch s2_291 != 0<32> l23020676
l23020676:
l23020602:
	Mem393[a0_270 + 56<i32>:byte] = 3<8>
	word32 s0_394 = Mem393[7<32>:word32]
	Mem397[s0_394 + 84<i32>:word16] = SLICE(s7_253, word16, 0)
	Mem398[s0_394 + 86<i32>:word16] = SLICE(s6_299, word16, 0)
	Mem399[s0_394 + 88<i32>:word16] = SLICE(s5_298, word16, 0)
	word32 a5_400 = Mem399[3<32>:word32]
	branch a5_400 == 0<32> l2302061E
l2302061A:
	word32 a7_427
	word32 s10_428
	word32 s11_429
	word32 t1_430
	word32 t4_431
	word32 t5_432
	word32 t6_433
	call a5_400 (retsize: 0;)
		uses: a0:s0_394,a1:a1_293,a3:a3_421,a7:a7_427,mstatus:mstatus,ra:ra,s0:s0_394,s1:s1_290,s10:s10_428,s11:s11_429,s2:s2_291,s3:s3_296,s4:s4_297,s5:s5_298,s6:s6_299,s7:s7_253,s8:s8_300,s9:s9,Stack +0000:dwLoc50,Stack +0004:dwLoc4C,Stack +0008:dwLoc48,Stack +000C:dwLoc44,Stack +0010:dwLoc40,Stack +0028:dwLoc28,Stack +002C:dwLoc24,Stack +0030:dwLoc20,Stack +0034:dwLoc1C,Stack +0038:dwLoc18,Stack +003C:dwLoc14,Stack +0040:dwLoc10,Stack +0044:dwLoc0C,Stack +0048:dwLoc08,Stack +004C:dwLoc04,Stack +0050:dwArg00,Stack +0054:dwArg04,Stack +0058:dwArg08,Stack +005C:dwArg0C,Stack +0064:dwArg14,Stack +0068:dwArg18,Stack +006C:dwArg1C,Stack +0070:dwArg20,Stack +0074:dwArg24,Stack +0078:dwArg28,Stack +007C:dwArg2C,Stack +0088:dwArg38,Stack +008C:dwArg3C,Stack +00A8:dwArg58,Stack +00B8:dwArg68,Stack +00BC:dwArg6C,Stack +00C8:dwArg78,Stack +00D4:dwArg84,Stack +00D8:dwArg88,Stack +00E4:dwArg94,Stack +00E8:dwArg98,Stack +00F8:dwArgA8,Stack +0108:dwArgB8,Stack +0118:dwArgC8,Stack +0128:dwArgD8,Stack +0138:dwArgE8,Stack +0148:dwArgF8,Stack +0158:dwArg0108,Stack +0168:dwArg0118,t1:t1_430,t4:t4_431,t5:t5_432,t6:t6_433
		defs: a3:a3_421,a4:a4_416,a5:a5_418,a7:a7_427,mstatus:mstatus_426,ra:ra_405,s0:s0_406,s1:s1_407,s10:s10_428,s11:s11_429,s4:s4_410,sp:sp_404,t1:t1_430,t4:t4_431,t5:t5_432,t6:t6_433
l2302061E:
	word32 s0_456
	word32 s2_460
	word32 mstatus_475
	word32 s5_2407
	word32 s6_2408
	word32 a0_2406
	word32 a4_451
	word32 a5_452
	word32 a3_450
	word32 ra_455 = l2cap_chan_tx_give_credits(ra, s1_290, s0_394, s4_297, a3_287, a4_1094, a5_400, mstatus, Mem399[sp_1205:word32], Mem399[sp_1205 + 4<i32>:word32], Mem399[sp_1205 + 40<i32>:word32], Mem399[sp_1205 + 64<i32>:word32], Mem399[sp_1205 + 68<i32>:word32], Mem399[sp_1205 + 116<i32>:word32], Mem399[sp_1205 + 140<i32>:word32], Mem399[sp_1205 + 232<i32>:word32], Mem399[sp_1205 + 296<i32>:word32], Mem399[sp_1205 + 360<i32>:word32], out s0_456, out a0_2406, out a3_450, out a4_451, out a5_452, out s2_460, out s5_2407, out s6_2408, out mstatus_475)
	word32 s2_476 = s2_460 + 0xFFFFFFFF<32>
	word32 s1_477 = CONVERT(Mem399[s0_456 + 70<i32>:uint16], uint16, word32)
	word32 s0_478 = s0_456 + 72<i32>
l23020632:
	branch CONVERT(SLICE(s1_477 + 0xFFFFFFFF<32>, word16, 0), word16, word32) == s2_476 l2302037C
l2302063C:
	word32 a0_2432
	word32 a1_2433
	word32 s4_2436
	word32 s5_2437
	word32 s3_2435
	word32 s11_2442
	word32 s6_2438
	word32 s7_2439
	word32 s9_2440
	word32 a2_2434
	word32 s10_2441
	ra_455 = k_sem_give(ra_455, s0_478, a3_450, a4_451, a5_452, mstatus_475, Mem399[sp_1205 + 20<i32>:word32], Mem399[sp_1205 + 24<i32>:word32], Mem399[sp_1205 + 96<i32>:word32], Mem399[sp_1205 + 100<i32>:word32], Mem399[sp_1205 + 136<i32>:word32], Mem399[sp_1205 + 148<i32>:word32], Mem399[sp_1205 + 172<i32>:word32], Mem399[sp_1205 + 264<i32>:word32], Mem399[sp_1205 + 328<i32>:word32], Mem399[sp_1205 + 392<i32>:word32], out s0_478, out s1_477, out a0_2432, out a1_2433, out a2_2434, out a3_450, out a4_451, out a5_452, out s2_476, out s3_2435, out s4_2436, out s5_2437, out s6_2438, out s7_2439, out s9_2440, out s10_2441, out s11_2442)
l230205D8:
	word32 a2_2390
	word32 s1_2387
	word32 a7_2394
	word32 a3_2391
	word32 a4_2392
	word32 a0_2388
	word32 a1_2389
	word32 s4_2397
	word32 s5_2398
	word32 s2_2395
	word32 s3_2396
	word32 a5_2393
	word32 s6_2399
	word32 s8_2401
	word32 s7_2400
	word32 s11_2404
	word32 t4_2405
	word32 s10_2403
	word32 s9_2402
	printf(ra, 0x23075280<32>, 0x2307503C<32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_2387, out a0_2388, out a1_2389, out a2_2390, out a3_2391, out a4_2392, out a5_2393, out a7_2394, out s2_2395, out s3_2396, out s4_2397, out s5_2398, out s6_2399, out s7_2400, out s8_2401, out s9_2402, out s10_2403, out s11_2404, out t4_2405)
l23020594:
	a0_1084 = 0x2307525C<32>
l230203DA:
	branch a5_43 >u 9<32> l230203EA
l230203EA:
	branch (CONVERT(Mem25[a5_43 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem25[a5_43 + 4<i32>:byte], byte, word32)) <=u 0x16<32> l23020412
l23020400:
	a3 = CONVERT(Mem25[a5_43 + 6<i32>:byte], byte, word32)
	word32 s5_560 = CONVERT(Mem25[a5_43 + 7<i32>:byte], byte, word32) << 8<i32> | a3
	branch s5_560 >u 0x16<32> l2302041C
l2302041C:
	word32 a0_577
	word32 a4_581
	word32 s0_587
	word32 s2_591
	word32 s3_592
	word32 s4_593
	word32 s5_594
	word32 s7_596
	word32 s1_2357
	word32 a1_2358
	word32 s9_2361
	word32 a5_2360
	word32 a3_2359
	word32 s6_595
	word32 ra_586 = l2cap_create_le_sig_pdu.isra.7(ra, a3, CONVERT(Mem25[a5_43 + 8<i32>:byte], byte, word32), a5_43, CONVERT(Mem25[a5_43 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem25[a5_43 + 2<i32>:byte], byte, word32), s5_560, mstatus, dwLoc48, dwLoc20, dwLoc1C, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, s3, dwArg78, dwArg98, out s0_587, out s1_2357, out a0_577, out a1_2358, out a3_2359, out a4_581, out a5_2360, out s2_591, out s3_592, out s4_593, out s5_594, out s6_595, out s7_596, out s9_2361, out mstatus_1126)
	word32 s9_606 = a0_577
	branch a0_577 == 0<32> l2302037C
l23020456:
	word32 a1_2376
	word32 a5_2377
	word32 a0_609 = net_buf_simple_add(a0_577 + 8<32>, 0xA<32>, a4_581, out a1_2376, out a5_2377)
	word32 a2_2381
	word32 t1_2378
	word32 a0_2379
	word32 a3_2382
	word32 a4_2383
	word32 a1_2380
	word32 a5_2384
	ra_1127 = memset(ra_586, a0_609, 0<32>, 0xA<32>, out t1_2378, out a0_2379, out a1_2380, out a2_2381, out a3_2382, out a4_2383, out a5_2384)
	s1_1171 = a0_609
	word32 a0_625 = l2cap_server_lookup_psm(s0_587)
	a5_1168 = 2<32>
	branch a0_625 == 0<32> l23020482
l23020474:
	branch CONVERT(Mem25[s6_595 + 9<i32>:byte], byte, word32) >=u CONVERT(Mem25[a0_625 + 2<i32>:byte], byte, word32) l23020488
l23020488:
	word32 a5_633 = s2_591 + -64<i32> << 16<i32>
	a5_1168 = a5_633 >>u 16<i32>
	branch a5_633 >>u 16<i32> <=u 63<i32> l230204A8
l230204A8:
	word32 a0_638 = bt_l2cap_le_lookup_tx_cid(s6_595, s2_591)
	a5_1168 = 0xA<32>
	branch a0_638 != 0<32> l23020482
l230204B6:
	word32 s2_649
	word32 s8_655
	word32 a4_657
	word32 a1_658
	word32 a0_660
	word32 a3_662
	word32 a7_668
	word32 s10_669
	word32 s11_670
	word32 t1_671
	word32 t4_672
	word32 t5_673
	word32 t6_674
	call Mem640[a0_625 + 4<i32>:int32] (retsize: 0;)
		uses: a0:s6_595,a1:fp + -56<i32>,a3:a3_662,a7:a7_668,mstatus:mstatus_585,ra:ra_621,s0:s0_587,s1:a0_609,s10:s10_669,s11:s11_670,s2:s2_591,s3:s3_592,s4:s4_593,s5:s5_594,s6:s6_595,s7:s7_596,s8:a0_625,s9:a0_577,Stack +0000:dwLoc50,Stack +0004:dwLoc4C,Stack +0008:dwLoc48,Stack +000C:a0_638,Stack +0010:dwLoc40,Stack +0028:dwLoc28,Stack +002C:dwLoc24,Stack +0030:dwLoc20,Stack +0034:dwLoc1C,Stack +0038:dwLoc18,Stack +003C:dwLoc14,Stack +0040:dwLoc10,Stack +0044:dwLoc0C,Stack +0048:dwLoc08,Stack +004C:dwLoc04,Stack +0050:dwArg00,Stack +0054:dwArg04,Stack +0058:dwArg08,Stack +005C:dwArg0C,Stack +0064:dwArg14,Stack +0068:dwArg18,Stack +006C:dwArg1C,Stack +0070:dwArg20,Stack +0074:dwArg24,Stack +0078:dwArg28,Stack +007C:dwArg2C,Stack +0088:dwArg38,Stack +008C:dwArg3C,Stack +00A8:dwArg58,Stack +00B8:dwArg68,Stack +00BC:dwArg6C,Stack +00C8:dwArg78,Stack +00D4:dwArg84,Stack +00D8:dwArg88,Stack +00E4:dwArg94,Stack +00E8:dwArg98,Stack +00F8:dwArgA8,Stack +0108:dwArgB8,Stack +0118:dwArgC8,Stack +0128:dwArgD8,Stack +0138:dwArgE8,Stack +0148:dwArgF8,Stack +0158:dwArg0108,Stack +0168:dwArg0118,t1:t1_671,t4:t4_672,t5:t5_673,t6:t6_674
		defs: a0:a0_660,a1:a1_658,a3:a3_662,a4:a4_657,a7:a7_668,mstatus:mstatus_667,ra:ra_646,s1:s1_648,s10:s10_669,s11:s11_670,s2:s2_649,s6:s6_653,s8:s8_655,s9:s9_656,sp:sp_645,t1:t1_671,t4:t4_672,t5:t5_673,t6:t6_674
	branch a0_660 >= 0<32> l230204EE
l230204EE:
	Mem679[a1_658 + 61<i32>:byte] = SLICE(CONVERT(Mem640[s8_655 + 2<i32>:byte], byte, word32), byte, 0)
	word32 a0_681
	word32 s0_690
	word32 a5_2430
	word32 s2_2431
	word32 a3_2428
	word32 a4_2429
	ra_1127 = l2cap_chan_add(ra_1127, s6_595, a1_658, a3_662, a4_657, s2_649, mstatus_1126, Mem679[sp_1205 + 8<i32>:word32], Mem679[sp_1205 + 80<i32>:word32], Mem679[sp_1205 + 84<i32>:word32], Mem679[sp_1205 + 116<i32>:word32], Mem679[sp_1205 + 120<i32>:word32], Mem679[sp_1205 + 156<i32>:word32], Mem679[sp_1205 + 168<i32>:word32], Mem679[sp_1205 + 200<i32>:word32], Mem679[sp_1205 + 232<i32>:word32], Mem679[sp_1205 + 264<i32>:word32], Mem679[sp_1205 + 296<i32>:word32], out s0_690, out s1_1171, out a0_681, out a3_2428, out a4_2429, out a5_2430, out s2_2431, out s6_595, out s9_606)
	a5_1168 = 4<32>
	branch a0_681 == 0<32> l23020482
l2302050A:
	word32 a3_712
	word32 a4_713
	word32 a5_714
	word32 s1_718
	word32 s2_721
	word32 s3_722
	word32 s4_723
	word32 s5_724
	word32 ra_717 = l2cap_chan_tx_init(ra_1127, s0_690, mstatus_1126, Mem679[sp_1205 + 8<i32>:word32], Mem679[sp_1205 + 16<i32>:word32], Mem679[sp_1205 + 20<i32>:word32], Mem679[sp_1205 + 80<i32>:word32], Mem679[sp_1205 + 84<i32>:word32], Mem679[sp_1205 + 120<i32>:word32], Mem679[sp_1205 + 156<i32>:word32], Mem679[sp_1205 + 216<i32>:word32], Mem679[sp_1205 + 264<i32>:word32], Mem679[sp_1205 + 280<i32>:word32], Mem679[sp_1205 + 328<i32>:word32], out s1_718, out a3_712, out a4_713, out a5_714, out s2_721, out s3_722, out s4_723, out s5_724)
	Mem735[s0_690 + 84<i32>:word16] = SLICE(s2_721, word16, 0)
	Mem736[s0_690 + 86<i32>:word16] = SLICE(s4_723, word16, 0)
	Mem737[s0_690 + 90<i32>:word16] = SLICE(s3_722, word16, 0)
	Mem739[s0_690 + 88<i32>:word16] = SLICE(s5_724, word16, 0)
	word32 a4_2445
	word32 a5_2446
	word32 a0_2443
	word32 a3_2444
	word32 s2_2447
	word32 s5_2448
	word32 s6_2449
	word32 a4_774
	word32 a5_775
	word32 a3_773
	word32 a0_770
	word32 s5_785
	word32 s7_787
	word32 a1_771
	word32 s0_749
	ra_1127 = l2cap_chan_rx_init(l2cap_chan_tx_give_credits(ra_717, s1_718, s0_690, s3_722, a3_712, a4_713, a5_714, mstatus_1126, Mem739[sp_1205:word32], Mem739[sp_1205 + 4<i32>:word32], Mem739[sp_1205 + 40<i32>:word32], Mem739[sp_1205 + 64<i32>:word32], Mem739[sp_1205 + 68<i32>:word32], Mem739[sp_1205 + 116<i32>:word32], Mem739[sp_1205 + 140<i32>:word32], Mem739[sp_1205 + 232<i32>:word32], Mem739[sp_1205 + 296<i32>:word32], Mem739[sp_1205 + 360<i32>:word32], out s0_749, out a0_2443, out a3_2444, out a4_2445, out a5_2446, out s2_2447, out s5_2448, out s6_2449, out mstatus_1126), s0_749, s0_749, mstatus_1126, Mem739[sp_1205 + 24<i32>:word32], Mem739[sp_1205 + 96<i32>:word32], Mem739[sp_1205 + 100<i32>:word32], Mem739[sp_1205 + 136<i32>:word32], Mem739[sp_1205 + 172<i32>:word32], Mem739[sp_1205 + 232<i32>:word32], Mem739[sp_1205 + 296<i32>:word32], out s1_1171, out a0_770, out a1_771, out a3_773, out a4_774, out a5_775, out s5_785, out s6_595, out s7_787, out s9_606)
	word32 s2_794 = CONVERT(Mem739[s0_749 + 70<i32>:uint16], uint16, word32)
	word32 s3_796 = 0xFFFFFFF<32>
	word32 s4_797 = s0_749 + 72<i32>
l2302053C:
	word32 s2_799 = s2_794 + 0xFFFFFFFF<32>
	branch CONVERT(SLICE(s2_799, word16, 0), word16, word32) != s3_796 l23020586
l23020586:
	word32 s10_2451
	word32 a2_2450
	word32 s11_2452
	ra_1127 = k_sem_give(ra_1127, s4_797, a3_773, a4_774, a5_775, mstatus_1126, Mem739[sp_1205 + 20<i32>:word32], Mem739[sp_1205 + 24<i32>:word32], Mem739[sp_1205 + 96<i32>:word32], Mem739[sp_1205 + 100<i32>:word32], Mem739[sp_1205 + 136<i32>:word32], Mem739[sp_1205 + 148<i32>:word32], Mem739[sp_1205 + 172<i32>:word32], Mem739[sp_1205 + 264<i32>:word32], Mem739[sp_1205 + 328<i32>:word32], Mem739[sp_1205 + 392<i32>:word32], out s0_749, out s1_1171, out a0_770, out a1_771, out a2_2450, out a3_773, out a4_774, out a5_775, out s2_794, out s3_796, out s4_797, out s5_785, out s6_595, out s7_787, out s9_606, out s10_2451, out s11_2452)
l23020548:
	word32 s8_840 = Mem739[sp_1205 + 68<i32>:word32]
	Mem843[a0_770 + 58<i32>:word16] = SLICE(CONVERT(Mem739[s8_840:uint16], uint16, word32), word16, 0)
	Mem845[a0_770 + 56<i32>:byte] = 3<8>
	word32 a0_846 = Mem845[7<32>:word32]
	word32 a5_847 = Mem845[3<32>:word32]
	branch a5_847 == 0<32> l23020560
l2302055E:
	word32 a3_872
	word32 a7_878
	word32 s10_879
	word32 s11_880
	word32 t1_881
	word32 t4_882
	word32 t5_883
	word32 t6_884
	call a5_847 (retsize: 0;)
		uses: a0:a0_846,a1:a1_854,a3:a3_872,a7:a7_878,mstatus:mstatus_768,ra:ra_805,s0:s0_848,s1:s1_849,s10:s10_879,s11:s11_880,s2:CONVERT(SLICE(s2_799, word16, 0), word16, word32),s3:s3_802,s4:s4_803,s5:s5_850,s6:s6_851,s7:s7_852,s8:s8_840,s9:s9_853,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +000C:dwArg0C,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +001C:dwArg1C,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +002C:dwArg2C,Stack +0038:dwArg38,Stack +003C:dwArg3C,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0078:dwArg78,Stack +0084:dwArg84,Stack +0088:dwArg88,Stack +0094:dwArg94,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,Stack +0118:dwArg0118,Stack +FFFFFFB0:dwLoc50,Stack +FFFFFFB4:dwLoc4C,Stack +FFFFFFB8:dwLoc48,Stack +FFFFFFBC:a0_638,Stack +FFFFFFC0:dwLoc40,Stack +FFFFFFD8:dwLoc28,Stack +FFFFFFDC:dwLoc24,Stack +FFFFFFE0:dwLoc20,Stack +FFFFFFE4:dwLoc1C,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFEC:dwLoc14,Stack +FFFFFFF0:dwLoc10,Stack +FFFFFFF4:dwLoc0C,Stack +FFFFFFF8:dwLoc08,Stack +FFFFFFFC:dwLoc04,t1:t1_881,t4:t4_882,t5:t5_883,t6:t6_884
		defs: a3:a3_872,a7:a7_878,mstatus:mstatus_877,ra:ra_856,s0:s0_857,s1:s1_858,s10:s10_879,s11:s11_880,s6:s6_863,s9:s9_866,sp:sp_855,t1:t1_881,t4:t4_882,t5:t5_883,t6:t6_884
l23020560:
	Mem889[s1_1171:word16] = SLICE(CONVERT(Mem845[s0_749 + 64<i32>:uint16], uint16, word32), word16, 0)
	Mem891[s1_1171 + 4<i32>:word16] = SLICE(CONVERT(Mem889[s0_749 + 68<i32>:uint16], uint16, word32), word16, 0)
	Mem893[s1_1171 + 2<i32>:word16] = SLICE(CONVERT(Mem891[s0_749 + 66<i32>:uint16], uint16, word32), word16, 0)
	a5_1168 = CONVERT(Mem893[s0_749 + 70<i32>:uint16], uint16, word32)
	Mem895[s1_1171 + 8<i32>:word16] = 0<16>
	Mem896[s1_1171 + 6<i32>:word16] = SLICE(a5_1168, word16, 0)
l230204C4:
	a5_1168 = 6<32>
	branch a0_660 == 0xFFFFFFF3<32> l23020482
l230204CC:
	word32 a4_902
	branch a0_660 > 0xFFFFFFF3<32> l230204E0
l230204E0:
	a5_1168 = 4<32>
	branch a0_660 == 0xFFFFFFF4<32> l23020482
l230204E8:
	a4_902 = 0xFFFFFFFF<32>
	a5_1168 = 7<32>
l230204D2:
	a4_902 = -35<i32>
	a5_1168 = 2<32>
l230204D8:
	branch a0_660 == a4_902 l23020482
l230204DC:
	a5_1168 = 0xB<32>
l23020498:
	Mem909[a0_609 + 8<i32>:word16] = SLICE(s7_596, word16, 0)
l23020480:
	a5_1168 = 5<32>
l23020482:
	Mem915[s1_1171 + 8<i32>:word16] = SLICE(a5_1168, word16, 0)
l2302049C:
	a2_1185 = s9_606
	a0_1187 = s6_595
l23020412:
	a0_1084 = 0x2307523C<32>
l230203CA:
	branch a5_43 >u 1<32> l2302037C
l230203D0:
	a0_1084 = 0x230751F8<32>
l23020810:
	branch a5_43 >u 7<32> l23020820
l23020820:
	s2_1114 = Mem25[a0:int32]
	a5_1251 = CONVERT(Mem25[s2_1114 + 3<i32>:byte], byte, word32)
	branch a5_1251 == 0<32> l23020836
l23020836:
	word32 a4_954 = CONVERT(Mem953[a5_1251 + 6<i32>:byte], byte, word32)
	word32 a0_959
	word32 mstatus_967
	word32 s2_973
	word32 a3_2367
	word32 s0_2364
	word32 s1_2365
	word32 s3_2370
	word32 s4_2371
	word32 a4_2368
	word32 a5_2369
	word32 a1_2366
	word32 s9_2375
	word32 s5_2372
	word32 s6_2373
	word32 s7_2374
	word32 ra_968 = l2cap_create_le_sig_pdu.isra.7(ra, CONVERT(Mem948[a5_1251 + 4<i32>:byte], byte, word32), a4_954, CONVERT(Mem953[a5_1251 + 7<i32>:byte], byte, word32) << 8<i32> | a4_954, s2_1114, s5, mstatus, dwLoc48, dwLoc20, dwLoc1C, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, s3, dwArg78, dwArg98, out s0_2364, out s1_2365, out a0_959, out a1_2366, out a3_2367, out a4_2368, out a5_2369, out s2_973, out s3_2370, out s4_2371, out s5_2372, out s6_2373, out s7_2374, out s9_2375, out mstatus_967)
	branch a0_959 == 0<32> l2302037C
l23020888:
	word32 a4_994
	word32 s0_997
	word32 s2_999
	word32 a0_1004
	word32 s1_2409
	word32 a5_2411
	word32 s3_2412
	word32 a3_2410
	word32 ra_1005 = le_param_req(ra_968, s2_973, fp + -56<i32>, out s0_997, out s1_2409, out a0_1004, out a3_2410, out a4_994, out a5_2411, out s2_999, out s3_2412)
	word32 a1_2413
	word32 a5_2414
	word32 a0_1009 = net_buf_simple_add(s0_997 + 8<i32>, 2<32>, a4_994, out a1_2413, out a5_2414)
	Mem1013[a0_1009:byte] = SLICE(a0_1004 ^ 1<i32>, byte, 0)
	Mem1014[a0_1009 + 1<i32>:byte] = 0<8>
	word32 a3_1021
	word32 a4_1022
	word32 a5_1023
	word32 mstatus_1026
	word32 s1_1029
	word32 a1_2416
	word32 s2_2417
	word32 s0_2415
	word32 s6_2420
	word32 s7_2421
	word32 s3_2418
	word32 s5_2419
	word32 s9_2422
	word32 ra_1027 = bt_l2cap_send(ra_1005, a0_1004, s2_999, 5<32>, s0_997, a0_1004 ^ 1<i32>, mstatus_967, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg2C, dwArg38, dwArg3C, ra, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_2415, out s1_1029, out a1_2416, out a3_1021, out a4_1022, out a5_1023, out s2_2417, out s3_2418, out s5_2419, out s6_2420, out s7_2421, out s9_2422, out mstatus_1026)
	branch s1_1029 == 0<32> l2302037C
l230208B6:
	word32 s1_2423
	word32 a0_2424
	word32 a4_2426
	word32 a3_2425
	word32 mstatus_2427
	bt_conn_le_conn_update(ra_1027, s1_1029, a3_1021, a4_1022, a5_1023, mstatus_1026, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_2423, out a0_2424, out a3_2425, out a4_2426, out mstatus_2427)
l2302082A:
	a4_1078 = 0<32>
	a3_1079 = 0<32>
	a0_1082 = s2_1114
	ra_1270 = ra
l23020816:
	a0_1084 = 0x23075334<32>
l23020732:
	branch a5_43 >u 3<32> l23020742
l23020742:
	a0_1092 = l2cap_remove_rx_cid(CONVERT(Mem25[a5_43 + 2<i32>:byte], byte, word32) | CONVERT(Mem25[a5_43 + 3<i32>:byte], byte, word32) << 8<i32>, out a4_1094, out a5_1095)
l23020738:
	a0_1084 = 0x230752A4<32>
l2302069C:
	branch a5_43 <=u 3<32> l230203E0
l230203E0:
	a0_1084 = 0x23075218<32>
l230206A2:
	word32 s0_1102 = Mem25[a1 + 8<i32>:word32]
	word32 s3_1103 = Mem25[a0:int32]
	word32 a4_1111
	word32 a5_1112
	word32 a0_1109 = l2cap_remove_rx_cid(CONVERT(Mem25[s0_1102:byte], byte, word32) | CONVERT(Mem25[s0_1102 + 1<i32>:byte], byte, word32) << 8<i32>, out a4_1111, out a5_1112)
	s2_1114 = a0_1109
	branch a0_1109 != 0<32> l230206EE
l230206EE:
	word32 a0_1118
	word32 a4_1122
	word32 s2_1132
	word32 s0_2488
	word32 a1_2490
	word32 a3_2491
	word32 s1_2489
	word32 s6_2496
	word32 s5_2495
	word32 s9_2498
	word32 s7_2497
	word32 s4_2494
	word32 s3_2493
	word32 a5_2492
	ra_1127 = l2cap_create_le_sig_pdu.isra.7(ra, 0x2307503C<32>, a4_1111, a5_1112, a0_1109, s5, mstatus, dwLoc48, dwLoc20, dwLoc1C, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, s3, dwArg78, dwArg98, out s0_2488, out s1_2489, out a0_1118, out a1_2490, out a3_2491, out a4_1122, out a5_2492, out s2_1132, out s3_2493, out s4_2494, out s5_2495, out s6_2496, out s7_2497, out s9_2498, out mstatus_1126)
	branch a0_1118 == 0<32> l2302037C
l230206FE:
	word32 a1_2506
	word32 a5_2507
	word32 a0_1151 = net_buf_simple_add(a0_1118 + 8<32>, 4<32>, a4_1122, out a1_2506, out a5_2507)
	word32 a5_1154 = CONVERT(Mem1150[s2_1132 + 64<i32>:uint16], uint16, word32)
	Mem1155[a0_1151:byte] = SLICE(a5_1154, byte, 0)
	Mem1157[a0_1151 + 1<i32>:byte] = SLICE(a5_1154 >>u 8<i32>, byte, 0)
	word32 a5_1158 = CONVERT(Mem1157[s2_1132 + 84<i32>:uint16], uint16, word32)
	Mem1159[a0_1151 + 2<i32>:byte] = SLICE(a5_1158, byte, 0)
	Mem1161[a0_1151 + 3<i32>:byte] = SLICE(a5_1158 >>u 8<i32>, byte, 0)
	word32 s3_1173
	word32 a0_2508
	word32 a3_2509
	word32 s5_2512
	word32 s2_2511
	word32 a4_2510
	s1_1171 = bt_l2cap_chan_del(ra_1127, a4_1122, a5_1158 >>u 8<i32>, mstatus_1126, dwLoc1C, dwArg58, dwArg68, dwArg98, dwArgD8, out a0_2508, out a3_2509, out a4_2510, out a5_1168, out s2_2511, out s3_1173, out s5_2512)
	a2_1185 = a0_1118
	a0_1187 = s3_1173
l230204A2:
	word32 a3_2516
	word32 s7_2523
	word32 s5_2521
	word32 s3_2520
	word32 s6_2522
	word32 a1_2515
	word32 s0_2513
	word32 s1_2514
	word32 a4_2517
	word32 a5_2518
	word32 s2_2519
	word32 mstatus_2525
	word32 s9_2524
	bt_l2cap_send(ra_1127, s1_1171, a0_1187, 5<32>, a2_1185, a5_1168, mstatus_1126, Mem1210[sp_1205 + 48<i32>:word32], Mem1210[sp_1205 + 52<i32>:word32], Mem1210[sp_1205 + 64<i32>:word32], Mem1210[sp_1205 + 68<i32>:word32], Mem1210[sp_1205 + 72<i32>:word32], Mem1210[sp_1205 + 84<i32>:word32], Mem1210[sp_1205 + 88<i32>:word32], Mem1210[sp_1205 + 116<i32>:word32], Mem1210[sp_1205 + 124<i32>:word32], Mem1210[sp_1205 + 136<i32>:word32], Mem1210[sp_1205 + 140<i32>:word32], Mem1210[sp_1205 + 164<i32>:word32], Mem1210[sp_1205 + 168<i32>:word32], Mem1210[sp_1205 + 184<i32>:word32], Mem1210[sp_1205 + 200<i32>:word32], Mem1210[sp_1205 + 216<i32>:word32], Mem1210[sp_1205 + 232<i32>:word32], Mem1210[sp_1205 + 248<i32>:word32], Mem1210[sp_1205 + 264<i32>:word32], Mem1210[sp_1205 + 280<i32>:word32], Mem1210[sp_1205 + 296<i32>:word32], Mem1210[sp_1205 + 312<i32>:word32], Mem1210[sp_1205 + 328<i32>:word32], Mem1210[sp_1205 + 344<i32>:word32], out s0_2513, out s1_2514, out a1_2515, out a3_2516, out a4_2517, out a5_2518, out s2_2519, out s3_2520, out s5_2521, out s6_2522, out s7_2523, out s9_2524, out mstatus_2525)
l230206BE:
	a3_1079 = fp + -56<i32>
	a5_1251 = CONVERT(Mem1246[s0_1102 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem1246[s0_1102:byte], byte, word32)
	a4_1078 = 4<32>
	a0_1082 = s3_1103
	ra_1270 = ra
l230208C0:
	word32 a0_2341
	word32 a1_2342
	word32 s4_2348
	word32 a4_2345
	word32 a7_2346
	word32 a2_2343
	word32 a3_2344
	word32 s5_2349
	word32 s7_2351
	word32 s6_2350
	word32 s3_2347
	word32 s11_2355
	word32 t4_2356
	word32 s9_2353
	word32 s10_2354
	word32 s8_2352
	ra_1270 = printf(ra, 0x2307535C<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_1271, out a0_2341, out a1_2342, out a2_2343, out a3_2344, out a4_2345, out a5_1251, out a7_2346, out s2_1114, out s3_2347, out s4_2348, out s5_2349, out s6_2350, out s7_2351, out s8_2352, out s9_2353, out s10_2354, out s11_2355, out t4_2356)
	a4_1078 = 0<32>
	a3_1079 = 0<32>
	a0_1082 = Mem25[s2_1114:int32]
l230206E8:
	l2cap_send_reject(ra_1270, s1_1271, a0_1082, a3_1079, a4_1078, a5_1251, s2_1114, mstatus, dwLoc40, s8, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg24, dwArg2C, dwArg38, dwArg3C, ra, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108)
l23020802:
	a0_1092 = __l2cap_lookup_ident(a1, s1_1271, 1<32>, out a4_1094, out a5_1095)
l23020758:
	branch a0_1092 != 0<32> l23020678
l23020678:
	word32 a3_2500
	word32 a5_2502
	word32 a4_2501
	word32 a0_2499
	word32 s3_2504
	word32 s2_2503
	word32 s5_2505
	bt_l2cap_chan_del(ra, a4_1094, a5_1095, mstatus, dwLoc1C, dwArg58, dwArg68, dwArg98, dwArgD8, out a0_2499, out a3_2500, out a4_2501, out a5_2502, out s2_2503, out s3_2504, out s5_2505)
l2302075A:
l2302039E:
	a0_1084 = 0x230751D4<32>
l2302036E:
	word32 a3_2307
	word32 a4_2308
	word32 a1_2305
	word32 a2_2306
	word32 s2_2311
	word32 s3_2312
	word32 a7_2310
	word32 s1_2303
	word32 a0_2304
	word32 s5_2314
	word32 s6_2315
	word32 a5_2309
	word32 s7_2316
	word32 s8_2317
	word32 s4_2313
	word32 s11_2320
	word32 t4_2321
	word32 s9_2318
	word32 s10_2319
	printf(ra, 0x230751B0<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_2303, out a0_2304, out a1_2305, out a2_2306, out a3_2307, out a4_2308, out a5_2309, out a7_2310, out s2_2311, out s3_2312, out s4_2313, out s5_2314, out s6_2315, out s7_2316, out s8_2317, out s9_2318, out s10_2319, out s11_2320, out t4_2321)
l2302033C:
	a0_1084 = 0x23075190<32>
l23020344:
	word32 a0_2323
	word32 a1_2324
	word32 a3_2326
	word32 a2_2325
	word32 s1_2322
	word32 s2_2330
	word32 s3_2331
	word32 s7_2335
	word32 a5_2328
	word32 a7_2329
	word32 s4_2332
	word32 s5_2333
	word32 s11_2339
	word32 t4_2340
	word32 s6_2334
	word32 s8_2336
	word32 s9_2337
	word32 s10_2338
	word32 a4_2327
	printf(ra, a0_1084, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_2322, out a0_2323, out a1_2324, out a2_2325, out a3_2326, out a4_2327, out a5_2328, out a7_2329, out s2_2330, out s3_2331, out s4_2332, out s5_2333, out s6_2334, out s7_2335, out s8_2336, out s9_2337, out s10_2338, out s11_2339, out t4_2340)
l2302037C:
	return
l2cap_recv_exit:


word32 sys_memcpy_swap(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_sign_buf
//      smp_f4
//      smp_f5
//      smp_f6
//      smp_g2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a5
// Preserved: sp
sys_memcpy_swap_entry:
l230208DC:
	word32 a1_10 = a1 + (a2 + -1<i32>)
	word32 a2_8 = a2 + a0
l230208E4:
	a1_10 = a1_10 + 0xFFFFFFFF<32>
	word32 a5_12 = CONVERT(Mem11[a1_10 + 1<i32>:byte], byte, word32)
	a0 = a0 + 1<32>
	Mem15[a0 + 4095<i32>:byte] = SLICE(a5_12, byte, 0)
	branch a2_8 != a0 l230208E4
l230208F4:
	return a5_12
sys_memcpy_swap_exit:


word32 sys_mem_swap(word32 a0, word32 a1, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_sign_buf
//      smp_f4
//      smp_f5
//      smp_f6
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a1 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
sys_mem_swap_entry:
l230208F6:
	word32 a5_16 = a0 + a1
	word32 a1_7 = (a1 >>u 1<i32>) + a0
l230208FE:
	word32 a4_12 = CONVERT(Mem9[a0:byte], byte, word32)
	a0 = a0 + 1<32>
	Mem14[a0 + 4095<i32>:byte] = SLICE(CONVERT(Mem9[a5_16 + -1<i32>:byte], byte, word32), byte, 0)
	Mem15[a5_16 + 4095<i32>:byte] = SLICE(a4_12, byte, 0)
	a5_16 = a5_16 + 0xFFFFFFFF<32>
	branch a0 != a1_7 l230208FE
l23020916:
	a4Out = a4_12
	a5Out = a5_16
	return a1_7
sys_mem_swap_exit:


word32 get_io_capa(word32 a3, word32 a4, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_auth.isra.0
//      sec_level_reachable.isra.1
//      get_pair_method
//      smp_security_request
//      smp_pairing_req
//      bt_smp_start_security
// MayUse:  a3:[0..31] a4:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a3 a5
// Preserved: sp
get_io_capa_entry:
l23020918:
	word32 a0_16 = 3<32>
	branch Mem0[0x4201A4D4<32>:int32] == 0<32> l2302095C
l23020924:
	word32 a5_10 = Mem0[a4:word32]
	branch a4 == 0<32> l2302093E
l23020928:
	a5_10 = Mem0[a3 + 4<i32>:word32]
	branch a3 == 0<32> l2302093E
l2302093E:
	a3 = CONVERT(Mem0[0x4200E18C<32>:byte], byte, word32)
	branch a3 == 0<32> l23020950
l23020948:
	branch a4 == 0<32> l23020950
l2302094A:
	a5_10 = Mem0[a3 + 8<i32>:word32]
	a0_16 = 1<32>
	branch a3 != 0<32> l2302095C
l2302092C:
	a5_10 = Mem0[a3 + 8<i32>:word32]
	a0_16 = 4<32>
	branch a3 != 0<32> l2302095C
l23020932:
	a3 = CONVERT(Mem0[0x4200E18C<32>:byte], byte, word32)
	branch a3 != 0<32> l23020950
l23020950:
	a0_16 = 2<32>
	branch Mem0[a5_10 + 4<i32>:word32] != 0<32> l2302095C
l23020956:
	a0_16 = 3<32>
	branch a4 == 0<32> l2302095C
l2302095A:
	a0_16 = 0<32>
l2302095C:
	a3Out = a3
	return a0_16
l2302093C:
	a3Out = a3
	return 4<32>
get_io_capa_exit:


word32 smp_chan_get(word32 ra, word32 a0, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_request_ltk
//      bt_smp_auth_passkey_entry
//      bt_smp_start_security
//      bt_smp_update_keys
//      bt_conn_auth_passkey_confirm
//      bt_conn_auth_cancel
//      bt_conn_auth_pairing_confirm
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a4 a5 ra s1 s2 s3 s4 s5
// Trashed: a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
smp_chan_get_entry:
l2302095E:
	word32 a5_11
	branch bt_l2cap_le_lookup_rx_cid(a0, 6<32>, out a5_11) != 0<32> l2302097A
l2302096E:
	word32 a0_100
	word32 a1_101
	word32 a2_102
	word32 a7_103
	word32 s6_104
	word32 s7_105
	word32 s8_106
	word32 s9_107
	word32 s10_108
	word32 s11_109
	word32 t4_110
	ra = printf(ra, 0x23075840<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_100, out a1_101, out a2_102, out a3, out a4, out a5_11, out a7_103, out s2, out s3, out s4, out s5, out s6_104, out s7_105, out s8_106, out s9_107, out s10_108, out s11_109, out t4_110)
l2302097A:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5_11
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return ra
smp_chan_get_exit:


word32 atomic_set_bit(word32 s0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_complete
//      display_passkey
//      smp_timeout
//      smp_ident_info
//      smp_encrypt_info
//      legacy_request_tk
//      smp_create_pdu.isra.7
//      smp_dhkey_check
//      smp_master_ident
//      smp_init
//      smp_security_request
//      smp_pairing_req
//      bt_smp_dhkey_ready
//      bt_smp_encrypt_change
//      legacy_pairing_confirm
//      smp_pairing_confirm
//      smp_pairing_rsp
//      smp_ident_addr_info
//      smp_public_key
//      bt_smp_pkey_ready
//      smp_pairing_random
//      bt_smp_request_ltk
//      bt_smp_auth_passkey_entry
//      bt_smp_start_security
//      bt_conn_auth_passkey_confirm
//      bt_conn_auth_pairing_confirm
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3
// Preserved: sp
atomic_set_bit_entry:
l23020984:
	word32 a1_5 = 1<32> << a1
l2302098A_thunk_atomic_or:
	word32 a0_10
	word32 a2_12
	word32 a3_13
	word32 a4_14
	word32 a5_15
	word32 s4_17
	word32 a1_26
	word32 s1_16 = atomic_or(s0, a1_5, a3, a4, mstatus, out a0_10, out a1_26, out a2_12, out a3_13, out a4_14, out a5_15, out s4_17)
	a0Out = a0_10
	a2Out = a2_12
	a3Out = a3_13
	a4Out = a4_14
	a5Out = a5_15
	s4Out = s4_17
	return s1_16
atomic_set_bit_exit:


word32 atomic_test_bit(word32 a0, word32 a1, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_complete
//      update_keys_check
//      smp_pairing_failed
//      smp_timeout
//      smp_ident_info
//      smp_encrypt_info
//      get_pair_method
//      smp_create_pdu.isra.7
//      smp_dhkey_check
//      bt_smp_distribute_keys
//      smp_signing_info
//      smp_master_ident
//      smp_security_request
//      smp_pairing_req
//      bt_smp_dhkey_ready
//      bt_smp_recv
//      bt_smp_encrypt_change
//      legacy_pairing_confirm
//      smp_pairing_confirm
//      smp_pairing_rsp
//      smp_ident_addr_info
//      bt_smp_pkey_ready
//      smp_pairing_random
//      bt_smp_request_ltk
//      bt_smp_auth_passkey_entry
//      bt_smp_start_security
//      bt_smp_update_keys
//      bt_conn_auth_passkey_confirm
//      bt_conn_auth_pairing_confirm
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a2
// Trashed: a0 a2 t3
// Preserved: sp
atomic_test_bit_entry:
l2302098E:
	word32 a0_13 = atomic_get(a0) >> a1 & 1<32>
	a2Out = dwArg44
	return a0_13
atomic_test_bit_exit:


word32 smp_reset(word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_complete
//      bt_smp_connected
//      bt_smp_encrypt_change
//      bt_smp_request_ltk
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 a5 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_reset_entry:
l230209A6:
	word32 a3_21
	word32 a4_22
	word32 s5_32
	word32 s6_151
	word32 s8_152
	word32 s3_149
	word32 s4_150
	word32 a5_147
	word32 s2_148
	word32 a1_145
	word32 a2_146
	word32 a0_144
	word32 s1_24 = k_delayed_work_cancel(Mem11[s1:word32] + 388<i32>, a3, a4, mstatus, dwArg24, dwArg28, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_144, out a1_145, out a2_146, out a3_21, out a4_22, out a5_147, out s2_148, out s3_149, out s4_150, out s5_32, out s6_151, out s8_152)
	Mem43[a0 + 160<i32>:byte] = 0<8>
	word32 a3_47
	word32 a4_48
	word32 s4_154
	word32 a0_153
	atomic_set(s1_24, 0<32>, a3_21, a4_22, mstatus, out a0_153, out a3_47, out a4_48, out s4_154)
	word32 a3_58
	word32 a0_155
	word32 a4_156
	word32 s4_157
	atomic_set(s1_24, 0<32>, a3_47, a4_48, mstatus, out a0_155, out a3_58, out a4_156, out s4_157)
	word32 a5_65 = CONVERT(Mem43[s1_24 + 9<i32>:byte], byte, word32)
	word32 a4_66 = CONVERT(Mem43[s1_24 + 10<i32>:byte], byte, word32)
	branch a4_66 == a5_65 l230209E6
l230209E2:
	Mem67[s1_24 + 10<i32>:byte] = SLICE(a5_65, byte, 0)
l230209E6:
	word32 a1_71 = 0xB<32>
	branch CONVERT(Mem69[s1_24 + 3<i32>:byte], byte, word32) == 0<32> l230209F0
l230209EE:
	a1_71 = 1<32>
l230209F0:
	0<32> = dwArg38
l230209FC_thunk_atomic_set_bit:
	word32 a3_93
	word32 a4_94
	word32 a5_95
	word32 a0_158
	word32 a2_159
	word32 s4_160
	atomic_set_bit(s0, a1_71, a3_58, a4_66, mstatus, out a0_158, out a2_159, out a3_93, out a4_94, out a5_95, out s4_160)
	a4Out = a4_94
	a5Out = a5_95
	s5Out = s5_32
	return a3_93
smp_reset_exit:


word32 smp_pairing_complete(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_failed
//      smp_timeout
//      smp_signing_info
//      smp_master_ident
//      smp_error
//      bt_smp_encrypt_change
//      smp_ident_sent
//      smp_ident_addr_info
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 a5 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 sp
smp_pairing_complete_entry:
l23020A00:
	word32 a1_52
	word32 a5_50
	word32 a0_27
	word32 s0_13 = a0
	word32 s2_14 = 0x4201A000<32>
	branch a1 != 0<32> l23020A3A
l23020A3A:
	word32 a1_18 = a1 + 0xFFFFFFFF<32> & 255<i32>
	s1 = 8<32>
	branch a1_18 >u 0xD<32> l23020A56
l23020A48:
	s1 = CONVERT(Mem11[a1_18 + 0x230754C4<32>:byte], byte, word32)
l23020A56:
	word32 a2_206
	a0_27 = atomic_test_bit(a0 + 156<i32>, 2<32>, out a2_206)
	branch a0_27 != 0<32> l23020A66
l23020A5E:
	s0_13 = Mem11[a0_27:word32]
	ra = bt_conn_security_changed(ra, a0_27, s1, dwArg18, dwArg28, out s1, out a0_27, out a3, out a4, out s2_14)
l23020A66:
	word32 a5_49 = Mem11[s2_14 + 1236<i32>:int32]
	branch a5_49 == 0<32> l23020A2A
l23020A6C:
	a5_50 = Mem11[a5_49 + 28<i32>:word32]
	branch a5_50 == 0<32> l23020A2A
l23020A70:
	a1_52 = s1
l23020A16:
	word32 a2_205
	a0_27 = atomic_test_bit(a0 + 156<i32>, 0xC<32>, out a2_205)
	word32 a5_57 = Mem11[0x4201A4D4<32>:int32]
	branch a5_57 == 0<32> l23020A2A
l23020A22:
	a5_50 = Mem11[a5_57 + 24<i32>:word32]
	a1_52 = CONVERT(a0_27 != 0<32>, bool, word32)
	branch a5_50 != 0<32> l23020A72
l23020A72:
	call a5_50 (retsize: 0;)
		uses: a0:a0_60,a1:a1_69,a3:a3_84,a4:a4_82,mstatus:mstatus,ra:ra_66,s0:Mem11[a0_60:word32],s1:s1_68,s2:s2_65,Stack +0028:dwArg18,Stack +0038:dwArg28
		defs: a3:a3_84,a4:a4_82,s0:s0_73,s1:s1_76
l23020A2A:
	0<32> = dwArg38
l23020A36_thunk_smp_reset:
	word32 a4_113
	word32 a5_114
	word32 s5_121
	word32 a3_112 = smp_reset(s0, s1, s0_13, a3, a4, mstatus, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_113, out a5_114, out s5_121)
	a4Out = a4_113
	a5Out = a5_114
	s5Out = s5_121
	return a3_112
smp_pairing_complete_exit:


word32 bt_smp_aes_cmac(word32 ra, word32 a0, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_sign_buf
//      smp_f4
//      smp_f5
//      smp_f6
//      smp_g2
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 sp
bt_smp_aes_cmac_entry:
l23020A78:
	word32 a5_104
	word32 a0_22
	word32 a5_23
	word32 s1_31
	word32 s2_32
	word32 a4_126
	word32 a3_124
	word32 a1_120
	word32 s3_132
	word32 s4_134
	word32 s5_136
	word32 ra_30 = tc_cmac_setup(ra, fp + -280<i32>, a0, fp + -192<i32>, dwLocE8, out s1_31, out a0_22, out a1_120, out a3_124, out a4_126, out a5_23, out s2_32, out s3_132, out s4_134, out s5_136)
	branch a0_22 == 0<32> l23020AB4
l23020A9C:
	word32 a0_47
	word32 s0_50
	word32 ra_61 = tc_cmac_update(ra_30, fp + -280<i32>, s1_31, s2_32, a4_126, a5_23, out s0_50, out a0_47, out a1_120, out a3_124, out a4_126, out s3_132, out s4_134, out s5_136)
	branch a0_47 == 0<32> l23020AB4
l23020AA8:
	a5_104 = 0<32>
	branch tc_cmac_final(ra_61, s0_50, fp + -280<i32>, out a1_120, out a3_124, out a4_126, out s3_132, out s4_134, out s5_136) != 0<32> l23020AB6
l23020AB4:
	a5_104 = 0xFFFFFFFB<32>
l23020AB6:
	a1Out = a1_120
	a3Out = a3_124
	a4Out = a4_126
	a5Out = a5_104
	s3Out = s3_132
	s4Out = s4_134
	s5Out = s5_136
	return a5_104
bt_smp_aes_cmac_exit:


word32 smp_sign_buf(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg6C, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_sign_verify
//      bt_smp_sign
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +006C:[0..31]
// LiveOut: a0 a1 a3 a5 ra s0 s11 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_sign_buf_entry:
l23020ACC:
	word32 a1_106
	word32 a5_104
	word32 a4_205
	word32 a5_206
	sys_mem_swap(a1, a2 + 4<i32>, out a4_205, out a5_206)
	sys_memcpy_swap(fp + -64<i32>, a0, 0x10<32>)
	word32 a3_53
	word32 a1_207
	word32 a4_208
	word32 a5_209
	word32 s3_210
	word32 s4_211
	word32 s5_212
	word32 a0_50 = bt_smp_aes_cmac(ra, fp + -64<i32>, out a1_207, out a3_53, out a4_208, out a5_209, out s3_210, out s4_211, out s5_212)
	word32 s1_14 = a1 + a2
	word32 s2_130 = a1
	word32 s3_131 = a0_50
	branch a0_50 == 0<32> l23020B40
l23020B40:
	word32 a4_213
	word32 a5_214
	sys_mem_swap(fp + -48<i32>, 0x10<32>, out a4_213, out a5_214)
	word32 a2_215
	word32 a3_216
	word32 a4_217
	word32 a5_218
	word32 a6_219
	word32 a7_220
	memcpy(fp + -44<i32>, fp + -68<i32>, 4<32>, out a2_215, out a3_216, out a4_217, out a5_218, out a6_219, out a7_220)
	word32 a4_221
	word32 a5_222
	sys_mem_swap(a1, a2 + 4<i32>, out a4_221, out a5_222)
	word32 a2_223
	word32 a3_224
	word32 a4_225
	word32 a6_226
	word32 a7_227
	a1_106 = memcpy(s1_14, fp + -44<i32>, 0xC<32>, out a2_223, out a3_224, out a4_225, out a5_104, out a6_226, out a7_227)
l23020B24:
	word32 s1_228
	word32 a0_229
	word32 a2_230
	word32 a3_231
	word32 a4_232
	word32 a7_233
	word32 s4_234
	word32 s5_235
	word32 s7_236
	word32 s8_237
	word32 s9_238
	word32 s10_239
	word32 t4_240
	printf(ra, 0x23075904<32>, a3_53, dwLoc48, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C, out s1_228, out a0_229, out a1_106, out a2_230, out a3_231, out a4_232, out a5_104, out a7_233, out s2_130, out s3_131, out s4_234, out s5_235, out s6, out s7_236, out s8_237, out s9_238, out s10_239, out s11, out t4_240)
l23020B30:
	s0Out = a2 + 4<i32>
	a0Out = s3_131
	a1Out = a1_106
	a3Out = s2
	a5Out = a5_104
	s2Out = s2_130
	s3Out = s3_131
	s6Out = s6
	s11Out = s11
	return dwLoc08
smp_sign_buf_exit:


word32 smp_f4(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_send_pairing_confirm
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] ra:[0..31]
// LiveOut: a1 a4 a5 s1 s2
// Trashed: a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_f4_entry:
l23020B66:
	sys_memcpy_swap(fp + -84<i32>, a0, 32<i32>)
	sys_memcpy_swap(fp + -52<i32>, a1, 32<i32>)
	sys_memcpy_swap(fp + -100<i32>, a2, 0x10<32>)
	word32 s5_123
	word32 s4_122
	word32 s3_121
	word32 a3_120
	word32 a4_102
	word32 a1_49
	word32 a5_103
	branch bt_smp_aes_cmac(ra, fp + -100<i32>, out a1_49, out a3_120, out a4_102, out a5_103, out s3_121, out s4_122, out s5_123) != 0<32> l23020BBA
l23020BB2:
	a1_49 = sys_mem_swap(a4, 0x10<32>, out a4_102, out a5_103)
l23020BBA:
	a1Out = a1_49
	a4Out = a4_102
	a5Out = a5_103
	s2Out = a1
	return a4
smp_f4_exit:


word32 sc_smp_check_confirm(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_random
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
sc_smp_check_confirm_entry:
l23020BC8:
	word32 a5_5 = CONVERT(Mem0[a0 + 160<i32>:byte], byte, word32)
	branch a5_5 >u 5<32> l23020BE2
l23020BE2:
	return 8<32>
l23020BD2:
	word32 a5_13 = Mem0[(a5_5 << 2<i32>) + 0x230753EC<32>:word32]
	word32 a0_16
	call a5_13 (retsize: 0;)
		uses: a0:a0,a4:0x230753EC<32>,a5:a5_13
		defs: a0:a0_16
	return a0_16
sc_smp_check_confirm_exit:


void smp_f5(word32 ra, word32 a0, word32 a1, word32 a2, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a6:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s2 sp
smp_f5_entry:
l23020C44:
	word32 a1_247
	word32 a0_246
	word32 t1_245
	word32 a2_248
	word32 a3_249
	word32 a4_250
	word32 a5_251
	word32 ra_45 = memset(ra, fp + -104<i32>, 0<32>, 53<i32>, out t1_245, out a0_246, out a1_247, out a2_248, out a3_249, out a4_250, out a5_251)
	sys_memcpy_swap(fp + -136<i32>, a0, 32<i32>)
	word32 s4_78
	word32 s5_79
	word32 a1_252
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 s3_256
	branch bt_smp_aes_cmac(ra_45, 0x230757F0<32>, out a1_252, out a3_253, out a4_254, out a5_255, out s3_256, out s4_78, out s5_79) != 0<32> l23020D32
l23020CB6:
	sys_memcpy_swap(fp + -99<i32>, a1, 0x10<32>)
	sys_memcpy_swap(fp + -83<i32>, a2, 0x10<32>)
	sys_memcpy_swap(fp + -66<i32>, s5_79 + 1<i32>, 6<32>)
	sys_memcpy_swap(fp + -59<i32>, s4_78 + 1<i32>, 6<32>)
	word32 s3_133
	word32 a1_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	word32 s4_261
	word32 s5_262
	branch bt_smp_aes_cmac(ra_45, fp + -152<i32>, out a1_257, out a3_258, out a4_259, out a5_260, out s3_133, out s4_261, out s5_262) != 0<32> l23020D32
l23020D0C:
	word32 a4_263
	word32 a5_264
	sys_mem_swap(s3_133, 0x10<32>, out a4_263, out a5_264)
	word32 a1_265
	word32 a3_266
	word32 a4_267
	word32 a5_268
	word32 s3_269
	word32 s4_270
	word32 s5_271
	branch bt_smp_aes_cmac(ra_45, fp + -152<i32>, out a1_265, out a3_266, out a4_267, out a5_268, out s3_269, out s4_270, out s5_271) != 0<32> l23020D32
l23020D2A:
	word32 a4_272
	word32 a5_273
	sys_mem_swap(a6, 0x10<32>, out a4_272, out a5_273)
l23020D32:
	return
smp_f5_exit:


void smp_f6(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_f6_entry:
l23020D4A:
	sys_memcpy_swap(fp + -84<i32>, a1, 0x10<32>)
	sys_memcpy_swap(fp + -68<i32>, a2, 0x10<32>)
	sys_memcpy_swap(fp + -52<i32>, a3, 0x10<32>)
	word32 a5_55 = sys_memcpy_swap(fp + -36<i32>, a4, 3<32>)
	word32 a6_69
	word32 a7_199
	word32 a5_198
	word32 a4_197
	word32 a3_196
	word32 a2_195
	memcpy(fp + -32<i32>, a5_55 + 1<i32>, 6<32>, out a2_195, out a3_196, out a4_197, out a5_198, out a6_69, out a7_199)
	sys_memcpy_swap(fp + -32<i32>, a5_55 + 1<i32>, 6<32>)
	0<32> = dwLoc78
	word32 a7_205
	word32 a6_204
	word32 a5_203
	word32 a4_202
	word32 a3_201
	word32 a2_200
	memcpy(fp + -25<i32>, a6_69 + 1<i32>, 6<32>, out a2_200, out a3_201, out a4_202, out a5_203, out a6_204, out a7_205)
	sys_memcpy_swap(fp + -25<i32>, a6_69 + 1<i32>, 6<32>)
	sys_memcpy_swap(fp + -100<i32>, a0, 0x10<32>)
	word32 a3_207
	word32 a1_206
	word32 a4_208
	word32 a5_209
	word32 s3_210
	word32 s4_211
	word32 s5_212
	branch bt_smp_aes_cmac(ra, fp + -100<i32>, out a1_206, out a3_207, out a4_208, out a5_209, out s3_210, out s4_211, out s5_212) != 0<32> l23020DF8
l23020DF0:
	word32 a4_213
	word32 a5_214
	sys_mem_swap(a7, 0x10<32>, out a4_213, out a5_214)
l23020DF8:
	return
smp_f6_exit:


void smp_g2(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_g2_entry:
l23020E06:
	sys_memcpy_swap(fp + -96<i32>, a0, 32<i32>)
	sys_memcpy_swap(fp + -64<i32>, a1, 32<i32>)
	sys_memcpy_swap(fp + -32<i32>, a3, 0x10<32>)
	sys_memcpy_swap(fp + -112<i32>, a2, 0x10<32>)
	word32 s3_151
	word32 a5_150
	word32 a4_149
	word32 a3_148
	word32 a1_147
	word32 s4_152
	word32 s5_153
	branch bt_smp_aes_cmac(ra, fp + -112<i32>, out a1_147, out a3_148, out a4_149, out a5_150, out s3_151, out s4_152, out s5_153) != 0<32> l23020E94
l23020E58:
	word32 a3_82
	word32 a2_154
	word32 a4_155
	word32 a5_156
	word32 a6_157
	word32 a7_158
	memcpy(a4, fp + -100<i32>, 4<32>, out a2_154, out a3_82, out a4_155, out a5_156, out a6_157, out a7_158)
	Mem106[(a3_82 >>u 0x18<u32> | a3_82 << 0x18<u32> | a3_82 >>u 8<u32> & 0xFFFFF00<32> | a3_82 << 8<i32> & 0xFF0000<32>) & 0xF4240<32>:word32] = Mem21[a3_82:word32]
l23020E94:
	return
smp_g2_exit:


word32 atomic_test_and_clear_bit(word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_failed
//      bt_smp_dhkey_ready
//      bt_smp_recv
//      bt_smp_auth_passkey_entry
//      bt_conn_auth_passkey_confirm
//      bt_conn_auth_cancel
//      bt_conn_auth_pairing_confirm
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3
// Preserved: s0 sp
atomic_test_and_clear_bit_entry:
l23020EA2:
	word32 s0_8 = 1<32> << a1
	word32 a0_19
	word32 a1_20
	word32 a3_22
	word32 a4_23
	word32 a5_24
	word32 s4_26
	word32 a2_43
	word32 s1_25 = atomic_and(s0_8, ~s0_8, a3, a4, mstatus, out a0_19, out a1_20, out a2_43, out a3_22, out a4_23, out a5_24, out s4_26)
	a0Out = CONVERT((a0_19 & s0_8) != 0<32>, bool, word32)
	a1Out = a1_20
	a3Out = a3_22
	a4Out = a4_23
	a5Out = a5_24
	s4Out = s4_26
	return s1_25
atomic_test_and_clear_bit_exit:


void display_passkey(word32 ra, word32 a0, word32 a2, word32 mstatus, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s1 s2 s4 s8 t3 tp
// Preserved: s0 sp
display_passkey_entry:
l23020ECC:
	word32 a0_17
	word32 a3_20
	word32 s4_103
	word32 a5_102
	word32 a4_101
	bt_rand(a0 + 368<i32>, 4<32>, a2, out a0_17, out a3_20, out a4_101, out a5_102, out s4_103)
	branch a0_17 != 0<32> l23020F26
l23020EE6:
	word32 a5_29 = Mem15[a0 + 368<i32>:int32]
	Mem34[a0 + 372<i32>:byte] = 0<8>
	Mem36[a0 + 368<i32>:word32] = a5_29 & 0xF4240<32>
	word32 a5_37 = Mem36[0x4201A4D4<32>:int32]
	branch a5_37 == 0<32> l23020F26
l23020F0A:
	branch Mem36[a5_37:word32] == 0<32> l23020F26
l23020F0E:
	word32 a0_42
	word32 a2_44
	word32 a3_104
	word32 a4_105
	word32 a5_106
	word32 s4_107
	word32 s1_48 = atomic_set_bit(a0, 0xA<32>, a3_20, 0xF4240<32>, mstatus, out a0_42, out a2_44, out a3_104, out a4_105, out a5_106, out s4_107)
	word32 a5_55 = Mem36[Mem36[0x4201A4D4<32>:int32]:word32]
	call a5_55 (retsize: 0;)
		uses: a0:a0_42,a1:Mem36[a0 + 368<i32>:int32],a2:a2_44,a5:a5_55,mstatus:mstatus,ra:ra,s0:Mem36[a0_42:word32],s1:s1_48,s2:0x4201A000<32>
l23020F26:
	0<32> = dwArg38
	return
display_passkey_exit:


word32 update_keys_check(word32 ra, word32 s0, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      smp_pairing_rsp
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 s1 t3 tp
// Preserved: a6 a7 mstatus ra s0 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t0 t1 t4 t5 t6
update_keys_check_entry:
l23020F34:
	word32 s1_11 = Mem9[s0:word32]
	branch Mem9[s0 + 156<i32>:int32] != 0<32> l23020F56
l23020F46:
	word32 a0_19
	word32 s3_309
	word32 s5_311
	word32 mstatus_312
	word32 s4_310
	word32 a3_306
	word32 a5_307
	word32 s2_308
	bt_keys_get_addr(ra, s0, CONVERT(Mem9[s0 + 8<i32>:byte], byte, word32), s0 + 112<i32>, s2, s3, s4, mstatus, dwLoc10, s0, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0, out s1_11, out a0_19, out a3_306, out a4, out a5_307, out s2_308, out s3_309, out s4_310, out s5_311, out mstatus_312)
	Mem48[s0 + 156<i32>:word32] = a0_19
l23020F56:
	word32 a0_144
	word32 a3_152 = Mem50[s0 + 156<i32>:int32]
	branch a3_152 != 0<32> l23020F68
l23020F68:
	a4 = CONVERT(Mem50[a3_152 + 10<i32>:uint16], uint16, word32)
	branch (a4 & 36<i32>) == 0<32> l23020F5C
l23020F72:
	word32 a2_55 = CONVERT(Mem50[s1_11 + 165<i32>:byte], byte, word32)
	word32 a5_56 = CONVERT(Mem50[s1_11 + 172<i32>:byte], byte, word32)
	branch a2_55 >=u a5_56 l23020F80
l23020F7E:
	a5_56 = a2_55
l23020F80:
	a3_152 = CONVERT(Mem50[a3_152 + 8<i32>:byte], byte, word32)
	branch (a5_56 & 255<i32>) >=u a3_152 l23020F90
l23020F90:
	a4 = a4 & 32<i32>
	branch (a4 & 32<i32>) != 0<32> l23020FAC
l23020FAC:
	word32 a2_313
	branch atomic_test_bit(s1_11 + 156<i32>, 5<32>, out a2_313) != 0<32> l23020F96
l23020FB8:
l23020F96:
	branch (CONVERT(Mem50[Mem50[s0 + 156<i32>:int32] + 9<i32>:byte], byte, word32) & 1<32>) == 0<32> l23020F5C
l23020FA2:
	a0_144 = CONVERT(CONVERT(Mem50[s1_11 + 160<i32>:byte], byte, word32) != 0<32>, bool, word32)
l23020F8C:
	a0_144 = 0<32>
l23020F5C:
	a0_144 = 1<32>
l23020F5E:
	a3Out = a3_152
	a4Out = a4
	return a0_144
update_keys_check_exit:


void smp_pairing_failed(word32 ra, word32 s1, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus sp
smp_pairing_failed_entry:
l23020FBA:
	word32 a5_117
	word32 a3_28
	word32 a4_29
	word32 t4_324
	word32 s11_323
	word32 s10_322
	word32 s9_321
	word32 s8_320
	word32 s7_319
	word32 s6_318
	word32 s5_317
	word32 s4_316
	word32 a2_313
	word32 a5_314
	word32 a7_315
	word32 a1_312
	word32 a0_311
	word32 s1_310
	word32 s2_122
	word32 s3_123
	word32 ra_121 = printf(ra, 0x230758A0<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_310, out a0_311, out a1_312, out a2_313, out a3_28, out a4_29, out a5_314, out a7_315, out s2_122, out s3_123, out s4_316, out s5_317, out s6_318, out s7_319, out s8_320, out s9_321, out s10_322, out s11_323, out t4_324)
	word32 s0_119 = a0
	word32 a0_49
	word32 a5_325
	word32 a1_50
	word32 s4_124
	word32 a4_100
	word32 a3_127
	word32 s1_112 = atomic_test_and_clear_bit(9<32>, a3_28, a4_29, mstatus, out a0_49, out a1_50, out a3_127, out a4_100, out a5_325, out s4_124)
	branch a0_49 == 0<32> l23021028
l23021028:
	word32 a0_61
	s1_112 = atomic_test_and_clear_bit(0xA<32>, a3_127, a4_100, mstatus, out a0_61, out a1_50, out a3_127, out a4_100, out a5_117, out s4_124)
	branch a0_61 != 0<32> l23020FEE
l23021032:
l23020FEE:
	a5_117 = Mem13[0x4201A4D4<32>:int32]
	branch a5_117 != 0<32> l23021034
l23021034:
	a5_117 = Mem13[a5_117 + 16<i32>:word32]
	branch a5_117 == 0<32> l23020FF8
l23021038:
	call a5_117 (retsize: 0;)
		uses: a0:s3_36,a1:a1_81,a3:a3_82,mstatus:mstatus,ra:ra_31,s0:a0,s1:s1_78,s2:s2_35,s3:s3_36,Stack +0028:dwArg08,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0098:dwArg78,Stack +00BC:dwArg9C
		defs: a3:a3_99,a4:a4_100,a5:a5_93,mstatus:mstatus_110,ra:ra_88,s0:s0_86,s1:s1_87,s2:s2_89,s3:s3_90,s4:s4_96
l23020FF8:
	word32 a2_326
	branch atomic_test_bit(s1_112, 2<32>, out a2_326) == 0<32> l2302100E
l23021002:
	s0_119 = Mem13[a5_117:word32]
	word32 a0_120 = Mem13[a5_117 + 156<i32>:int32]
	branch a0_120 == 0<32> l2302100E
l2302100A:
	ra_121 = bt_keys_clear(ra_121, s0_119, s1_112, a0_120, a3_127, s2_122, s3_123, s4_124, mstatus, dwLoc20, dwLoc1C, s2, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg58, s1, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out a3_127, out a4_100)
l2302100E:
	word32 a5_328
	word32 s5_329
	word32 a4_327
	smp_pairing_complete(ra_121, s0_119, s1_112, s0_119, CONVERT(Mem13[s2_122:byte], byte, word32), a3_127, a4_100, mstatus, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArgB8, dwArgF8, out a4_327, out a5_328, out s5_329)
	return
smp_pairing_failed_exit:


void smp_timeout(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg54, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_timeout_entry:
l2302103E:
	word32 s1_28
	word32 s2_31
	word32 s3_32
	word32 s4_33
	word32 s10_169
	word32 s9_168
	word32 s8_167
	word32 s7_166
	word32 s6_165
	word32 s5_164
	word32 a7_163
	word32 a0_159
	word32 a1_160
	word32 a2_161
	word32 a5_162
	word32 s11_170
	word32 t4_171
	word32 a4_25
	word32 a3_24
	word32 ra_27 = printf(ra, 0x2307591C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_28, out a0_159, out a1_160, out a2_161, out a3_24, out a4_25, out a5_162, out a7_163, out s2_31, out s3_32, out s4_33, out s5_164, out s6_165, out s7_166, out s8_167, out s9_168, out s10_169, out s11_170, out t4_171)
	word32 a2_172
	branch atomic_test_bit(s1_28, 2<32>, out a2_172) == 0<32> l23021076
l23021068:
	word32 a0_47 = Mem16[Mem16[a0 + -388<i32>:int32] + 156<i32>:int32]
	branch a0_47 == 0<32> l23021076
l23021072:
	ra_27 = bt_keys_clear(ra_27, a0, s1_28, a0_47, a3_24, s2_31, s3_32, s4_33, mstatus, s2, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg54, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out a3_24, out a4_25)
l23021076:
	word32 a3_68
	word32 a4_69
	word32 a0_173
	word32 a2_174
	word32 a5_175
	word32 s4_176
	word32 s1_71 = atomic_set_bit(a0, 4<32>, a3_24, a4_25, mstatus, out a0_173, out a2_174, out a3_68, out a4_69, out a5_175, out s4_176)
	0<32> = dwArg38
l2302108C_thunk_smp_pairing_complete:
	word32 a4_177
	word32 a5_178
	word32 s5_179
	smp_pairing_complete(ra_27, s0, s1_71, s2_31, 8<32>, a3_68, a4_69, mstatus, dwArg18, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_177, out a5_178, out s5_179)
	return
smp_timeout_exit:


void smp_ident_info(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_ident_info_entry:
l23021090:
	word32 s0_22 = a0
	word32 a2_251
	branch atomic_test_bit(a0 + 156<i32>, 0xC<32>, out a2_251) == 0<32> l230210F0
l230210AA:
	s0_22 = Mem17[a5:word32]
	word32 a0_29
	word32 s1_36
	word32 s2_37
	word32 a3_258
	word32 s3_259
	word32 s4_260
	word32 s5_261
	word32 ra_45 = bt_keys_get_type(ra, s0_22, 2<32>, CONVERT(Mem17[a5 + 8<i32>:byte], byte, word32), a5 + 112<i32>, Mem17[a1 + 8<i32>:int32], mstatus, s2, s0, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_36, out a0_29, out a3_258, out s2_37, out s3_259, out s4_260, out s5_261, out mstatus)
	branch a0_29 != 0<32> l230210E4
l230210E4:
	word32 a2_262
	word32 a5_263
	word32 a6_264
	word32 a7_265
	memcpy(a0_29 + 38<i32>, s2_37, 0x10<32>, out a2_262, out a3, out a4, out a5_263, out a6_264, out a7_265)
l230210F0:
	word32 a0_252
	word32 a2_253
	word32 a3_254
	word32 a4_255
	word32 a5_256
	word32 s4_257
	atomic_set_bit(s0_22, 9<32>, a3, a4, mstatus, out a0_252, out a2_253, out a3_254, out a4_255, out a5_256, out s4_257)
l230210C2:
	word32 a3_96
	word32 s0_266
	word32 s1_267
	word32 a0_268
	word32 a1_269
	word32 a2_270
	word32 a3_271
	word32 a4_272
	word32 a5_273
	word32 a7_274
	word32 s2_275
	word32 s3_276
	word32 s4_277
	word32 s5_278
	word32 s6_279
	word32 s7_280
	word32 s8_281
	word32 s9_282
	word32 s10_283
	word32 s11_284
	word32 t4_285
	printf(bt_addr_le_str_real(ra_45, s1_36, dwLoc08, dwArg24, dwArg40, dwArg44, dwArg68, dwArg8C, dwArg0118, out s0_266, out a3_96), 0x23075884<32>, a3_96, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_267, out a0_268, out a1_269, out a2_270, out a3_271, out a4_272, out a5_273, out a7_274, out s2_275, out s3_276, out s4_277, out s5_278, out s6_279, out s7_280, out s8_281, out s9_282, out s10_283, out s11_284, out t4_285)
l230210D8:
	0<32> = dwArg38
	return
smp_ident_info_exit:


void smp_encrypt_info(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_encrypt_info_entry:
l230210FE:
	word32 s0_22 = a0
	word32 a2_251
	branch atomic_test_bit(a0 + 156<i32>, 0xC<32>, out a2_251) == 0<32> l2302115C
l23021118:
	s0_22 = Mem17[a5:word32]
	word32 a0_29
	word32 s1_36
	word32 s2_37
	word32 a3_258
	word32 s3_259
	word32 s4_260
	word32 s5_261
	word32 ra_45 = bt_keys_get_type(ra, s0_22, 4<32>, CONVERT(Mem17[a5 + 8<i32>:byte], byte, word32), a5 + 112<i32>, Mem17[a1 + 8<i32>:int32], mstatus, s2, s0, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_36, out a0_29, out a3_258, out s2_37, out s3_259, out s4_260, out s5_261, out mstatus)
	branch a0_29 != 0<32> l23021152
l23021152:
	word32 a2_262
	word32 a5_263
	word32 a6_264
	word32 a7_265
	memcpy(a0_29 + 0x16<32>, s2_37, 0x10<32>, out a2_262, out a3, out a4, out a5_263, out a6_264, out a7_265)
l2302115C:
	word32 a0_252
	word32 a2_253
	word32 a3_254
	word32 a4_255
	word32 a5_256
	word32 s4_257
	atomic_set_bit(s0_22, 7<32>, a3, a4, mstatus, out a0_252, out a2_253, out a3_254, out a4_255, out a5_256, out s4_257)
l23021130:
	word32 a3_96
	word32 s0_266
	word32 s1_267
	word32 a0_268
	word32 a1_269
	word32 a2_270
	word32 a3_271
	word32 a4_272
	word32 a5_273
	word32 a7_274
	word32 s2_275
	word32 s3_276
	word32 s4_277
	word32 s5_278
	word32 s6_279
	word32 s7_280
	word32 s8_281
	word32 s9_282
	word32 s10_283
	word32 s11_284
	word32 t4_285
	printf(bt_addr_le_str_real(ra_45, s1_36, dwLoc08, dwArg24, dwArg40, dwArg44, dwArg68, dwArg8C, dwArg0118, out s0_266, out a3_96), 0x23075884<32>, a3_96, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_267, out a0_268, out a1_269, out a2_270, out a3_271, out a4_272, out a5_273, out a7_274, out s2_275, out s3_276, out s4_277, out s5_278, out s6_279, out s7_280, out s8_281, out s9_282, out s10_283, out s11_284, out t4_285)
l23021146:
	0<32> = dwArg38
	return
smp_encrypt_info_exit:


word32 legacy_request_tk(word32 ra, word32 s1, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgC4, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      smp_pairing_rsp
// MayUse:  mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00C4:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s2 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
legacy_request_tk_entry:
l2302116A:
	word32 a4_104
	word32 a1_111
	word32 a0_12 = Mem11[s1:word32]
	word32 a0_16
	word32 a2_18
	word32 a5_378
	word32 a4_377
	word32 a3_103
	word32 s2_116
	bt_keys_find_addr(CONVERT(Mem11[s1 + 8<i32>:byte], byte, word32), s1 + 112<i32>, dwArg18, out a0_16, out a2_18, out a3_103, out a4_377, out a5_378, out s2_116)
	word32 s0_13 = a0_12
	word32 a5_25 = CONVERT(Mem11[a0_12 + 160<i32>:byte], byte, word32)
	branch a0_16 == 0<32> l230211A4
l2302118A:
	branch (CONVERT(Mem11[a0_16 + 9<i32>:byte], byte, word32) & 1<32>) == 0<32> l230211A4
l23021192:
	branch a5_25 != 0<32> l230211A4
l230211A4:
	a4_104 = 1<32>
	a1_111 = a5_25
	branch a5_25 == 1<32> l23021222
l23021222:
	word32 a0_394
	word32 a2_395
	word32 a3_396
	word32 a4_397
	word32 a5_398
	word32 s4_399
	word32 s1_43 = atomic_set_bit(a0_12, 9<32>, a3_103, 1<32>, mstatus, out a0_394, out a2_395, out a3_396, out a4_397, out a5_398, out s4_399)
	word32 a5_51 = Mem11[Mem11[0x4201A4D4<32>:int32] + 4<i32>:word32]
	word32 s6_227
	word32 s3_225
	word32 s11_224
	word32 s10_223
	word32 a7_222
	word32 s7_228
	word32 s9_229
	word32 t0_230
	word32 t4_231
	call a5_51 (retsize: 0;)
		uses: a0:s1_43,a5:a5_51,a7:a7_222,mstatus:mstatus,ra:ra,s0:a0_12,s1:s1_43,s10:s10_223,s11:s11_224,s2:s2_23,s3:s3_225,s5:s5_226,s6:s6_227,s7:s7_228,s9:s9_229,Stack +0028:dwArg08,Stack +0038:dwArg18,Stack +0064:dwArg44,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0098:dwArg78,Stack +00BC:dwArg9C,Stack +00E4:dwArgC4,t0:t0_230,t4:t4_231
		defs: a3:a3_69,a4:a4_63,a7:a7_222,mstatus:mstatus_71,ra:ra_57,s0:s0_56,s10:s10_223,s11:s11_224,s2:s2_59,s3:s3_225,s5:s5_226,s6:s6_227,s7:s7_228,s9:s9_229,t0:t0_230,t4:t4_231
l230211AC:
	branch a5_25 == 0<32> l23021214
l230211AE:
	branch a5_25 != 2<32> l2302123C
l2302123C:
	word32 s1_400
	word32 a0_401
	word32 a1_402
	word32 a2_403
	word32 a5_404
	word32 a7_405
	word32 s3_406
	word32 s4_407
	word32 s6_408
	word32 s7_409
	word32 s8_410
	word32 s9_411
	word32 s10_412
	word32 s11_413
	word32 t4_414
	ra = printf(ra, 0x230757D0<32>, a3_103, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_400, out a0_401, out a1_402, out a2_403, out a3_103, out a4_104, out a5_404, out a7_405, out s2_116, out s3_406, out s4_407, out s5, out s6_408, out s7_409, out s8_410, out s9_411, out s10_412, out s11_413, out t4_414)
l230211B4:
	word32 a0_100
	word32 a5_415
	word32 s4_416
	bt_rand(fp + 0xFFFFFFEC<32>, 4<32>, a2_18, out a0_100, out a3_103, out a4_104, out a5_415, out s4_416)
	a1_111 = 8<32>
	branch a0_100 != 0<32> l23021214
l230211C0:
	s2_116 = 0x4201A000<32>
	word32 a5_118 = Mem117[0x4201A4D4<32>:int32]
	branch a5_118 == 0<32> l230211F4
l230211DA:
	a5_118 = Mem117[a5_118:word32]
	branch a5_118 == 0<32> l230211F4
l230211DE:
	word32 a0_417
	word32 a2_418
	word32 a3_419
	word32 a4_420
	word32 a5_421
	word32 s4_422
	word32 s1_128 = atomic_set_bit(a0_12, 0xA<32>, a3_103, 0xF4240<32>, mstatus, out a0_417, out a2_418, out a3_419, out a4_420, out a5_421, out s4_422)
	word32 a5_135 = Mem117[Mem117[0x4201A4D4<32>:int32]:word32]
	word32 a7_153
	word32 s10_154
	word32 s11_155
	word32 s3_156
	word32 s6_158
	word32 s7_159
	word32 s9_160
	word32 t0_161
	word32 t4_162
	call a5_135 (retsize: 0;)
		uses: a0:s1_128,a2:dwArg44,a5:a5_135,a7:a7_153,mstatus:mstatus,ra:ra,s0:a0_12,s1:s1_128,s10:s10_154,s11:s11_155,s2:0x4201A000<32>,s3:s3_156,s5:s5_157,s6:s6_158,s7:s7_159,s9:s9_160,Stack +0028:dwArg08,Stack +0038:dwArg18,Stack +0064:dwArg44,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0098:dwArg78,Stack +00BC:dwArg9C,Stack +00E4:dwArgC4,t0:t0_161,t4:t4_162
		defs: a3:a3_150,a5:a5_143,a7:a7_153,mstatus:mstatus_152,ra:ra_138,s0:s0_137,s10:s10_154,s11:s11_155,s2:s2_140,s3:s3_156,s5:s5_157,s6:s6_158,s7:s7_159,s9:s9_160,t0:t0_161,t4:t4_162
l230211F4:
	Mem169[s0_13 + 223<i32>:byte] = SLICE(a5_118, byte, 0)
	word32 a4_167 = a5_118 << 0x10<u32>
	word32 a5_171 = a5_118 >>u 16<i32>
	Mem173[s0_13 + 225<i32>:byte] = SLICE(a5_171, byte, 0)
	Mem175[s0_13 + 224<i32>:byte] = SLICE(a4_167 >>u 24<i32>, byte, 0)
	Mem176[s0_13 + 226<i32>:byte] = SLICE(a5_171 >>u 8<i32>, byte, 0)
	a4_104 = a4_167 >>u 24<i32>
l23021212:
	a1_111 = 0<32>
l23021194:
	word32 s1_379
	word32 a2_382
	word32 a1_381
	word32 a5_383
	word32 a7_384
	word32 a0_380
	word32 s6_387
	word32 s4_386
	word32 s7_388
	word32 s8_389
	word32 s3_385
	word32 s9_390
	word32 s10_391
	word32 s11_392
	word32 t4_393
	ra = printf(ra, 0x230757A0<32>, a3_103, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_379, out a0_380, out a1_381, out a2_382, out a3_103, out a4_104, out a5_383, out a7_384, out s2_116, out s3_385, out s4_386, out s5, out s6_387, out s7_388, out s8_389, out s9_390, out s10_391, out s11_392, out t4_393)
l230211A0:
	a1_111 = 8<32>
l23021214:
	s0Out = s0_13
	a0Out = a1_111
	a3Out = a3_103
	a4Out = a4_104
	s2Out = s2_116
	s5Out = s5
	mstatusOut = mstatus
	return ra
legacy_request_tk_exit:


void bt_smp_disconnected(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_smp_disconnected_entry:
l2302124A:
	word32 a0_13 = Mem11[a5:word32]
	word32 a1_328
	word32 a0_327
	word32 a5_330
	word32 s6_332
	word32 a2_329
	word32 s5_331
	word32 s8_333
	word32 a4_24
	word32 s2_110
	word32 s3_113
	word32 s4_116
	word32 a3_121
	word32 s1_26 = k_delayed_work_cancel(a0_13 + 388<i32>, a3, a4, mstatus, dwArg24, dwArg28, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_327, out a1_328, out a2_329, out a3_121, out a4_24, out a5_330, out s2_110, out s3_113, out s4_116, out s5_331, out s6_332, out s8_333)
	word32 a5_43 = Mem11[a0_13 + 404<i32>:int32]
	branch a5_43 == 0<32> l23021272
l2302126C:
	word32 a0_334
	word32 s5_335
	s1_26 = k_delayed_work_del_timer(s2_110, a4_24, a5_43, mstatus, dwArg24, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_334, out a3_121, out a4_24, out a5_43, out s2_110, out s3_113, out s4_116, out s5_335)
l23021272:
	word32 s0_69 = Mem11[a5_43 + 32<i32>:word32]
	branch a5_43 == 0<32> l2302127E
l23021276:
	word32 a0_336
	word32 a5_338
	word32 a4_337
	word32 s5_339
	s1_26 = k_delayed_work_del_timer(s0_69 + 16<i32>, a4_24, a5_43, mstatus, dwArg24, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_336, out a3_121, out a4_337, out a5_338, out s2_110, out s3_113, out s4_116, out s5_339)
l2302127E:
	branch s1_26 == 0<32> l23021294
l23021280:
	branch CONVERT(Mem11[s1_26 + 10<i32>:uint16], uint16, word32) == 0<32> l2302128E
l23021286:
	branch (CONVERT(Mem11[s1_26 + 9<i32>:byte], byte, word32) & 2<32>) == 0<32> l23021294
l2302128E:
	word32 a3_340
	word32 a4_341
	ra = bt_keys_clear(ra, s0_69, s1_26, s1_26, a3_121, s2_110, s3_113, s4_116, mstatus, s2, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg54, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out a3_340, out a4_341)
l23021294:
	0<32> = dwArg38
l230212A6_thunk_memset:
	word32 t1_342
	word32 a3_346
	word32 a1_344
	word32 a0_343
	word32 a2_345
	word32 a5_348
	word32 a4_347
	memset(ra, s0_69, 0<32>, 424<i32>, out t1_342, out a0_343, out a1_344, out a2_345, out a3_346, out a4_347, out a5_348)
	return
bt_smp_disconnected_exit:


void bt_smp_connected(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg84, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0084:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_smp_connected_entry:
l230212AA:
	word32 a3_19
	word32 a4_20
	word32 a0_69
	word32 a5_70
	word32 s2_71
	word32 s3_72
	word32 s5_73
	word32 s1_23 = k_delayed_work_init(ra, a0, a0 + 388<i32>, a3, a4, mstatus, dwArg84, dwArgB8, dwArgD8, dwArg0118, out a0_69, out a3_19, out a4_20, out a5_70, out s2_71, out s3_72, out s5_73)
l230212CA_thunk_smp_reset:
	word32 a4_74
	word32 a5_75
	word32 s5_76
	smp_reset(s0, s1_23, a0, a3_19, a4_20, mstatus, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_74, out a5_75, out s5_76)
	return
bt_smp_connected_exit:


word32 get_auth.isra.0(word32 a0, word32 a1, word32 a3, word32 a4, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      bt_smp_start_security
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
get_auth.isra.0_entry:
l230212CE:
	word32 s0_16 = a1 & 15<i32>
	branch CONVERT(Mem0[0x4200E18C<32>:byte], byte, word32) != 0<32> l230212EA
l230212E6:
	s0_16 = a1 & 7<i32>
l230212EA:
	word32 a5_31
	word32 a3_24
	branch get_io_capa(a3, a4, out a3_24) == 3<32> l23021302
l230212F4:
	a3_24 = CONVERT(Mem12[a0:byte], byte, word32)
	a5_31 = s0_16 | 4<i32>
	branch a3_24 >u 2<32> l23021306
l23021302:
	a5_31 = s0_16 & 11<i32>
l23021306:
	word32 a4_37 = CONVERT(Mem12[0x4200DBB6<32>:byte], byte, word32)
	word32 a0_39 = a5_31 & 254<i32>
	branch a4_37 == 0<32> l23021318
l23021314:
	a0_39 = a5_31 | 1<i32>
l23021318:
	a0Out = a0_39
	a3Out = a3_24
	a4Out = a4_37
	a5Out = a5_31
	return a0
get_auth.isra.0_exit:


word32 sec_level_reachable.isra.1(word32 a0, word32 a3, word32 a4, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_start_security
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
sec_level_reachable.isra.1_entry:
l23021322:
	word32 a0_26
	branch a0 == 3<32> l23021370
l23021370:
	a5 = 1<32>
	branch get_io_capa(a3, a4, out a3) != a0 l23021392
l2302137A:
	a4 = Mem9[0x4201A4D4<32>:int32]
	a5 = 0<32>
	branch a4 == 0<32> l23021392
l23021386:
	a4 = Mem9[a4 + 12<i32>:word32]
	branch a4 == 0<32> l23021392
l2302138A:
	a5 = CONVERT(Mem9[0x4200E184<32>:byte], byte, word32)
l23021392:
	a0_26 = a5 & 1<i32>
l23021332:
	a0_26 = CONVERT(a0 != 0<32>, bool, word32)
	branch a0 <=u 3<32> l23021396
l2302133A:
	a5 = 4<32>
	a0_26 = 0<32>
	branch a0 != 4<32> l23021396
l23021342:
	word32 a0_35
	branch get_io_capa(a3, a4, out a3) != 3<32> l23021364
l2302134A:
	a5 = Mem9[0x4201A4D4<32>:int32]
	a0_35 = 0<32>
	branch a5 == 0<32> l2302136C
l23021356:
	a5 = Mem9[a5 + 12<i32>:word32]
	branch a5 == 0<32> l2302136C
l2302135A:
	a5 = CONVERT(Mem9[0x4200E184<32>:byte], byte, word32)
	branch a5 == 0<32> l2302136C
l23021364:
	a5 = 0x4200E000<32>
	a0_35 = CONVERT(Mem9[0x4200E18C<32>:byte], byte, word32)
l2302136C:
	a0_26 = a0_35 & 1<32>
l23021396:
	a0Out = a0_26
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return 3<32>
sec_level_reachable.isra.1_exit:


void bt_smp_accept(word32 ra, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bt_smp_accept_entry:
l230213A0:
	word32 a4_10
	word32 a4_6 = Mem0[a3:word32]
	branch a3 == 0<32> l230213D0
l230213D0:
	a4_10 = 0<32>
l230213B0:
	branch Mem0[a4_6 + 424<i32>:int32] == 0<32> l230213EC
l230213EC:
	a4_10 = 1<32>
l230213D2:
	word32 a4_13 = a4_10 + 424<i32>
	Mem19[0x4200D4A0<32>:word32] = a4_13 + 0x420119EC<32>
	Mem22[a4_13 + 0x420119EC<32>:word32] = a1
	return
l230213B6:
	word32 s11_137
	word32 s10_136
	word32 s9_135
	word32 s8_134
	word32 s7_133
	word32 s6_132
	word32 s5_131
	word32 s4_130
	word32 s3_129
	word32 s2_128
	word32 a7_127
	word32 a5_126
	word32 a4_125
	word32 a3_124
	word32 a2_123
	word32 a1_122
	word32 a0_121
	word32 s1_120
	word32 t4_138
	printf(ra, 0x230754D4<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_120, out a0_121, out a1_122, out a2_123, out a3_124, out a4_125, out a5_126, out a7_127, out s2_128, out s3_129, out s4_130, out s5_131, out s6_132, out s7_133, out s8_134, out s9_135, out s10_136, out s11_137, out t4_138)
	return
bt_smp_accept_exit:


word32 smp_keys_check.part.5(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_start_security
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5 tp
// Preserved: a1 a6 s0 s1 s2 s3 s4 s8 sp t3
smp_keys_check.part.5_entry:
l230213F0:
	word32 s0_12 = a0
	branch Mem9[a0 + 156<i32>:int32] != 0<32> l23021428
l23021400:
	word32 a0_17
	word32 s1_25
	word32 s4_116
	word32 s3_115
	word32 s2_114
	word32 a5_113
	s0_12 = bt_keys_find(32<i32>, CONVERT(Mem9[a0 + 8<i32>:byte], byte, word32), a0 + 112<i32>, out s1_25, out a0_17, out a3, out a4, out a5_113, out s2_114, out s3_115, out s4_116)
	Mem31[s0_12 + 156<i32>:word32] = a0_17
	branch a0_17 != 0<32> l23021428
l23021418:
	word32 a0_35
	word32 a5_118
	word32 s1_117
	word32 s2_119
	word32 s3_120
	word32 s4_121
	s0_12 = bt_keys_find(4<32>, CONVERT(Mem31[s0_12 + 8<i32>:byte], byte, word32), s1_25, out s1_117, out a0_35, out a3, out a4, out a5_118, out s2_119, out s3_120, out s4_121)
	Mem49[s0_12 + 156<i32>:word32] = a0_35
l23021428:
	word32 a5_52 = Mem51[s0_12 + 156<i32>:int32]
	word32 a0_53 = 0<32>
	branch a5_52 == 0<32> l2302144C
l23021430:
	word32 a4_54 = CONVERT(Mem51[a5_52 + 10<i32>:uint16], uint16, word32)
	a4 = a4_54 & 36<i32>
	branch (a4_54 & 36<i32>) == 0<32> l2302144C
l2302143A:
	a3 = CONVERT(Mem51[s0_12 + 10<i32>:byte], byte, word32)
	a4 = 2<32>
	a0_53 = 1<32>
	branch a3 <=u 2<32> l2302144C
l23021446:
	a0_53 = CONVERT(Mem51[a5_52 + 9<i32>:byte], byte, word32) & 1<32>
l2302144C:
	a3Out = a3
	a4Out = a4
	a5Out = a5_52
	return a0_53
smp_keys_check.part.5_exit:


word32 get_pair_method(word32 a0, word32 a1, word32 a3, word32 a4, word32 dwArg38, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      smp_pairing_rsp
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] Stack +0038:[0..31]
// LiveOut: a0 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 t3 tp
// Preserved: s0 sp
get_pair_method_entry:
l23021456:
	word32 a2_104
	word32 a0_18 = atomic_test_bit(a0 + 156<i32>, 5<32>, out a2_104)
	branch a0_18 != 0<32> l230214BA
l230214BA:
	word32 a4_21 = CONVERT(Mem17[a0 + 164<i32>:byte], byte, word32)
	word32 a3_22 = CONVERT(Mem17[a0 + 171<i32>:byte], byte, word32)
	branch (a4_21 & a3_22 & 8<32>) == 0<32> l230214DA
l230214CA:
	a0_18 = 5<32>
	branch ((CONVERT(Mem17[a0 + 163<i32>:byte], byte, word32) | CONVERT(Mem17[a0 + 170<i32>:byte], byte, word32)) & 1<32>) != 0<32> l230214AE
l230214DA:
	a0_18 = 0<32>
	branch a1 >u 4<32> l230214AE
l230214E2:
	word32 a0_35 = a4_21 | a3_22
	a0_18 = a0_35 & 4<32>
	branch (a0_35 & 4<32>) == 0<32> l230214AE
l230214EA:
	word32 a3_106
	a0_18 = CONVERT(Mem17[get_io_capa(a3_22, a4_21, out a3_106) + (a1 + 0x23075719<32>):byte], byte, word32)
l23021470:
	s2 = 4<32>
	branch a1 >u 4<32> l230214AE
l23021476:
	word32 a0_51 = CONVERT(Mem17[a0 + 164<i32>:byte], byte, word32) | CONVERT(Mem17[a0 + 171<i32>:byte], byte, word32)
	a0_18 = a0_51 & 4<32>
	branch (a0_51 & 4<32>) == 0<32> l230214AE
l23021484:
	word32 a3_105
	a0_18 = CONVERT(Mem17[get_io_capa(a3, a4, out a3_105) + (a1 + 0x230756FD<32>):byte], byte, word32)
	branch a0_18 != 4<32> l230214AE
l230214A2:
	a0_18 = CONVERT(CONVERT(Mem17[a1 + 0x23075700<32>:byte], byte, word32) <u 1<i32>, bool, word32) + 1<32>
l230214AE:
	0<32> = dwArg38
	s2Out = s2
	return a0_18
get_pair_method_exit:


word32 smp_create_pdu.isra.7(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg84, word32 dwArg8C, word32 dwArg98, word32 dwArgD8, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sc_smp_send_dhkey_check
//      smp_send_pairing_random
//      sc_send_public_key
//      send_pairing_rsp
//      bt_smp_distribute_keys
//      smp_error
//      smp_send_pairing_confirm
//      legacy_send_pairing_confirm
//      bt_smp_start_security
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0084:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_create_pdu.isra.7_entry:
l23021506:
	word32 a2_21 = 0<32>
	word32 a2_163
	branch atomic_test_bit(a0 + 156<i32>, 4<32>, out a2_163) != 0<32> l23021528
l23021522:
	a2_21 = 0x7000530<32>
l23021528:
	word32 a5_131
	word32 mstatus_47
	word32 s2_53
	word32 s3_54
	word32 s5_56
	word32 a2_164
	word32 s6_165
	word32 s11_166
	word32 s1_136
	word32 a4_130
	word32 a3_129
	word32 ra_48 = bt_l2cap_create_pdu_timeout(ra, 0<32>, a2_21, a3, a4, a5, s5, mstatus, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg84, dwArg8C, dwArg98, dwArgD8, dwArgF8, out s1_136, out a2_164, out a3_129, out a4_130, out s2_53, out s3_54, out s5_56, out s6_165, out s11_166, out mstatus_47)
	branch false l2302154A
l2302154A:
	word32 a1_167
	Mem74[net_buf_simple_add(8<32>, 1<32>, a4_130, out a1_167, out a5_131):byte] = SLICE(s2_53, byte, 0)
l23021534:
	word32 a2_169
	word32 a0_168
	word32 s4_170
	s1_136 = atomic_set_bit(0<32>, 4<32>, a3_129, a4_130, mstatus_47, out a0_168, out a2_169, out a3_129, out a4_130, out a5_131, out s4_170)
l2302153C:
	0<32> = dwArg38
	s1Out = s1_136
	a0Out = 0<32>
	a2Out = dwArg10
	a3Out = a3_129
	a4Out = a4_130
	a5Out = a5_131
	s2Out = s2_53
	s3Out = s3_54
	s5Out = s5_56
	mstatusOut = mstatus_47
	return ra_48
smp_create_pdu.isra.7_exit:


word32 smp_send.isra.9(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg64, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sc_smp_send_dhkey_check
//      smp_send_pairing_random
//      sc_send_public_key
//      send_pairing_rsp
//      bt_smp_distribute_keys
//      smp_send_pairing_confirm
//      legacy_send_pairing_confirm
//      bt_smp_start_security
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_send.isra.9_entry:
l23021558:
	word32 a3_23
	word32 a4_24
	word32 mstatus_28
	word32 s0_117
	word32 s1_118
	word32 a0_119
	word32 a1_120
	word32 a5_121
	word32 s2_122
	word32 s3_123
	word32 s5_124
	word32 s6_125
	word32 s7_126
	word32 s9_127
	word32 ra_29 = bt_l2cap_send_cb(ra, s1, Mem7[a0:word32], 6<32>, a1, a2, a5, mstatus, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg44, dwArg48, dwArg64, dwArg6C, dwArg78, dwArg7C, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s0_117, out s1_118, out a0_119, out a1_120, out a3_23, out a4_24, out a5_121, out s2_122, out s3_123, out s5_124, out s6_125, out s7_126, out s9_127, out mstatus_28)
l2302157E_thunk_k_delayed_work_submit:
	word32 a3_57
	word32 a4_58
	word32 a5_59
	word32 s1_61
	word32 s2_62
	word32 s3_63
	word32 s5_71
	word32 a0_128
	word32 s4_129
	word32 s6_130
	word32 s8_131
	s0Out = k_delayed_work_submit(0x7000530<32>, a3_23, a4_24, mstatus_28, dwArg04, dwArg08, dwArg24, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, out s1_61, out a0_128, out a3_57, out a4_58, out a5_59, out s2_62, out s3_63, out s4_129, out s5_71, out s6_130, out s8_131)
	s1Out = s1_61
	a3Out = a3_57
	a4Out = a4_58
	a5Out = a5_59
	s2Out = s2_62
	s3Out = s3_63
	s5Out = s5_71
	mstatusOut = mstatus_28
	return ra_29
smp_send.isra.9_exit:


void sc_smp_send_dhkey_check(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
sc_smp_send_dhkey_check_entry:
l23021582:
	word32 a0_22
	word32 a4_26
	word32 mstatus_30
	word32 s1_32
	word32 s2_35
	word32 a2_174
	word32 a3_175
	word32 a5_176
	word32 s3_177
	word32 s5_178
	word32 ra_31 = smp_create_pdu.isra.7(ra, a0, a3, a4, a5, s5, mstatus, dwArg28, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1_32, out a0_22, out a2_174, out a3_175, out a4_26, out a5_176, out s2_35, out s3_177, out s5_178, out mstatus_30)
	branch a0_22 == 0<32> l230215C2
l230215C2:
l23021598:
	word32 a5_60
	word32 a1_179
	word32 a5_180
	word32 a2_181
	word32 a3_182
	word32 a4_183
	word32 a6_184
	word32 a7_185
	memcpy(net_buf_simple_add(a0_22 + 8<32>, 0x10<32>, a4_26, out a1_179, out a5_180), s2_35, 0x10<32>, out a2_181, out a3_182, out a4_183, out a5_60, out a6_184, out a7_185)
	word32 s0_186
	word32 s1_187
	word32 a3_188
	word32 a4_189
	word32 a5_190
	word32 s2_191
	word32 s3_192
	word32 s5_193
	word32 mstatus_194
	smp_send.isra.9(ra_31, s1_32, s1_32, a0_22, 0<32>, a5_60, mstatus_30, s0, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_186, out s1_187, out a3_188, out a4_189, out a5_190, out s2_191, out s3_192, out s5_193, out mstatus_194)
l230215B6:
	0<32> = dwArg38
	return
sc_smp_send_dhkey_check_exit:


word32 compute_and_send_master_dhcheck(word32 ra, word32 s1, word32 a0, word32 s2, word32 s3, word32 dwArgD4, word32 dwArgF0, word32 dwArgF4, word32 dwArg0118, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_dhkey_ready
//      bt_conn_auth_passkey_confirm
// MayUse:  a0:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +00D4:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3
// Preserved: sp
compute_and_send_master_dhcheck_entry:
l230215C6:
	word32 a0_19
	word32 a3_22
	word32 t1_95
	word32 a1_96
	word32 a2_97
	word32 a4_98
	word32 a5_99
	word32 ra_25 = memset(ra, fp + -48<i32>, 0<32>, 0x10<32>, out t1_95, out a0_19, out a1_96, out a2_97, out a3_22, out a4_98, out a5_99)
	word32 a5_28 = CONVERT(Mem18[a0 + 160<i32>:byte], byte, word32)
	branch a5_28 >u 5<32> l2302162E
l2302162E:
l2302166C:
	s0Out = a0
	s1Out = s1
	a0Out = 8<32>
	a3Out = a3_22
	a4Out = 5<32>
	s2Out = s2
	return ra_25
l230215E8:
	word32 a5_41 = Mem18[(a5_28 << 2<i32>) + 0x23075404<32>:word32]
	word32 s0_43
	word32 a0_45
	word32 ra_47
	word32 s1_48
	word32 s2_49
	word32 a4_52
	word32 a3_57
	call a5_41 (retsize: 0;)
		uses: a0:a0_19,a4:0x23075404<32>,a5:a5_41,ra:ra_25,s0:a0,s1:s1,s2:s2,s3:s3,Stack +0114:dwArgD4,Stack +0130:dwArgF0,Stack +0134:dwArgF4,Stack +0158:dwArg0118,Stack +0178:dwArg0138
		defs: a0:a0_45,a3:a3_57,a4:a4_52,ra:ra_47,s0:s0_43,s1:s1_48,s2:s2_49
	s0Out = s0_43
	s1Out = s1_48
	a0Out = a0_45
	a3Out = a3_57
	a4Out = a4_52
	s2Out = s2_49
	return ra_47
compute_and_send_master_dhcheck_exit:


word32 compute_and_check_and_send_slave_dhcheck(word32 ra, word32 s1, word32 a0, word32 s2, word32 s3, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_dhkey_check
//      bt_smp_dhkey_ready
//      bt_conn_auth_passkey_confirm
// MayUse:  a0:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 t0 t1 t3
// Preserved: sp
compute_and_check_and_send_slave_dhcheck_entry:
l2302167A:
	word32 a0_19
	word32 t1_88
	word32 a1_89
	word32 a2_90
	word32 a3_91
	word32 a4_92
	word32 a5_93
	word32 ra_25 = memset(ra, fp + -48<i32>, 0<32>, 0x10<32>, out t1_88, out a0_19, out a1_89, out a2_90, out a3_91, out a4_92, out a5_93)
	word32 a5_28 = CONVERT(Mem18[a0 + 160<i32>:byte], byte, word32)
	branch a5_28 >u 5<32> l230216E2
l230216E2:
l2302176C:
	s0Out = a0
	s1Out = dwLoc4C
	a0Out = dwLoc4C
	a3Out = s2
	a4Out = 5<32>
	s2Out = s2
	return dwLoc08
l2302169C:
	word32 a5_42 = Mem18[(a5_28 << 2<i32>) + 0x2307541C<32>:word32]
	word32 s0_44
	word32 a0_46
	word32 ra_48
	word32 s1_49
	word32 s2_50
	word32 a4_53
	word32 a3_54
	call a5_42 (retsize: 0;)
		uses: a0:a0_19,a4:0x2307541C<32>,a5:a5_42,ra:ra_25,s0:a0,s1:s1,s2:s2,s3:s3,Stack +0004:dwLoc4C,Stack +0048:dwLoc08,Stack +0178:dwArg0128
		defs: a0:a0_46,a3:a3_54,a4:a4_53,ra:ra_48,s0:s0_44,s1:s1_49,s2:s2_50
	s0Out = s0_44
	s1Out = s1_49
	a0Out = a0_46
	a3Out = a3_54
	a4Out = a4_53
	s2Out = s2_50
	return ra_48
compute_and_check_and_send_slave_dhcheck_exit:


void smp_dhkey_check(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
smp_dhkey_check_entry:
l23021786:
	word32 a0_13 = Mem11[a5:word32]
	word32 s2_16 = Mem11[a1 + 8<i32>:int32]
	word32 s1_17 = CONVERT(Mem11[a5 + 3<i32>:byte], byte, word32)
	branch s1_17 != 0<32> l23021866
l23021866:
	branch s1_17 != 1<32> l23021898
l2302186C:
	word32 s4_258
	word32 a5_257
	word32 a3_255
	word32 a4_256
	word32 a2_254
	word32 a0_252
	word32 a1_253
	word32 s1_32 = atomic_and(a0_13, 0xF7FFFFFF<32>, a3, a4, mstatus, out a0_252, out a1_253, out a2_254, out a3_255, out a4_256, out a5_257, out s4_258)
	word32 a4_39
	word32 a3_44
	word32 a2_259
	word32 a5_260
	word32 a6_261
	word32 a7_262
	memcpy(a0_13 + 335<i32>, s2_16, 0x10<32>, out a2_259, out a3_44, out a4_39, out a5_260, out a6_261, out a7_262)
	word32 a2_263
	branch atomic_test_bit(s1_32, 7<32>, out a2_263) == 0<32> l2302189C
l2302189C:
	word32 a2_264
	branch atomic_test_bit(s1_32, 9<32>, out a2_264) != 0<32> l23021890
l230218A6:
	word32 s0_271
	word32 s1_272
	word32 a0_273
	word32 a3_274
	word32 a4_275
	word32 s2_276
	compute_and_check_and_send_slave_dhcheck(ra, s1_32, a0_13, s2_16, s3, dwArgD8, out s0_271, out s1_272, out a0_273, out a3_274, out a4_275, out s2_276)
l23021890:
	word32 a0_265
	word32 a2_266
	word32 a3_267
	word32 a4_268
	word32 a5_269
	word32 s4_270
	atomic_set_bit(a0_13, 8<32>, a3_44, a4_39, mstatus, out a0_265, out a2_266, out a3_267, out a4_268, out a5_269, out s4_270)
l23021898:
l2302179E:
	word32 a1_101
	word32 a3_103
	word32 a4_250
	word32 a5_251
	word32 a2_249
	word32 a0_248
	word32 t1_247
	word32 ra_106 = memset(ra, fp + -32<i32>, 0<32>, 0x10<32>, out t1_247, out a0_248, out a1_101, out a2_249, out a3_103, out a4_250, out a5_251)
	word32 a5_109 = CONVERT(Mem11[a0_13 + 160<i32>:byte], byte, word32)
	branch a5_109 >u 5<32> l230217F4
l230217F4:
l23021854:
	return
l230217B2:
	word32 a5_128 = Mem11[(a5_109 << 2<i32>) + 0x23075434<32>:word32]
	word32 a2_137
	word32 s4_142
	word32 s8_143
	word32 t3_144
	word32 a7_145
	word32 a6_146
	word32 t1_147
	word32 t4_148
	word32 t5_149
	word32 t6_150
	call a5_128 (retsize: 0;)
		uses: a1:a1_101,a2:a2_137,a3:a3_103,a4:0x23075434<32>,a5:a5_128,a6:a6_146,a7:a7_145,mstatus:mstatus,ra:ra_106,s0:a0_13,s1:s1_17,s2:s2_16,s3:s3,s4:s4_142,s8:s8_143,Stack +0004:dwLoc4C,Stack +0048:dwLoc08,Stack +0128:dwArgD8,t1:t1_147,t3:t3_144,t4:t4_148,t5:t5_149,t6:t6_150
		defs: a2:a2_137,a6:a6_146,a7:a7_145,s4:s4_142,s8:s8_143,t1:t1_147,t3:t3_144,t4:t4_148,t5:t5_149,t6:t6_150
	return
smp_dhkey_check_exit:


void smp_send_pairing_random(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_confirm
//      smp_pairing_random
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_send_pairing_random_entry:
l230218B0:
	word32 a0_18
	word32 a4_22
	word32 mstatus_26
	word32 s1_28
	word32 a2_168
	word32 a3_169
	word32 a5_170
	word32 s2_171
	word32 s3_172
	word32 s5_173
	word32 ra_27 = smp_create_pdu.isra.7(ra, a0, a3, a4, a5, s5, mstatus, dwArg28, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1_28, out a0_18, out a2_168, out a3_169, out a4_22, out a5_170, out s2_171, out s3_172, out s5_173, out mstatus_26)
	branch a0_18 == 0<32> l230218EC
l230218EC:
l230218C2:
	word32 a5_56
	word32 a1_174
	word32 a5_175
	word32 a2_176
	word32 a3_177
	word32 a4_178
	word32 a6_179
	word32 a7_180
	memcpy(net_buf_simple_add(a0_18 + 8<32>, 0x10<32>, a4_22, out a1_174, out a5_175), s1_28 + 191<i32>, 0x10<32>, out a2_176, out a3_177, out a4_178, out a5_56, out a6_179, out a7_180)
	word32 s0_181
	word32 s1_182
	word32 a3_183
	word32 a4_184
	word32 a5_185
	word32 s2_186
	word32 s3_187
	word32 s5_188
	word32 mstatus_189
	smp_send.isra.9(ra_27, s1_28, s1_28, a0_18, 0<32>, a5_56, mstatus_26, s0, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_181, out s1_182, out a3_183, out a4_184, out a5_185, out s2_186, out s3_187, out s5_188, out mstatus_189)
l230218E2:
	return
smp_send_pairing_random_exit:


word32 sc_send_public_key(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_rsp
//      smp_public_key
//      bt_smp_pkey_ready
//      bt_conn_auth_pairing_confirm
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sc_send_public_key_entry:
l230218F0:
	word32 a0_123
	word32 a0_22
	word32 a2_202
	word32 a5_203
	word32 a4_172
	word32 a3_171
	word32 mstatus_102
	word32 s1_105
	word32 s2_108
	word32 s3_109
	word32 s5_111
	word32 ra_103 = smp_create_pdu.isra.7(ra, a0, a3, a4, a5, s5, mstatus, dwArg18, dwArg20, dwArg24, dwArg48, s3, ra, dwArg78, dwArgB8, dwArgD8, out s1_105, out a0_22, out a2_202, out a3_171, out a4_172, out a5_203, out s2_108, out s3_109, out s5_111, out mstatus_102)
	branch a0_22 == 0<32> l23021952
l23021952:
	a0_123 = 8<32>
l23021906:
	word32 a1_56
	word32 a5_204
	word32 a0_55 = net_buf_simple_add(a0_22 + 8<32>, 64<i32>, a4_172, out a1_56, out a5_204)
	word32 a5_79
	word32 a2_205
	word32 a3_206
	word32 a4_207
	word32 a5_208
	word32 a6_209
	word32 a7_210
	word32 a2_211
	word32 a3_212
	word32 a4_213
	word32 a6_214
	word32 a7_215
	memcpy(a0_55 + 32<i32>, memcpy(a0_55, a1_56, 32<i32>, out a2_205, out a3_206, out a4_207, out a5_208, out a6_209, out a7_210) + 32<i32>, 32<i32>, out a2_211, out a3_212, out a4_213, out a5_79, out a6_214, out a7_215)
	word32 a5_216
	ra_103 = smp_send.isra.9(ra_103, a0_22, s2_108, a0_22, 0<32>, a5_79, mstatus_102, dwLoc1C, s2, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg44, dwArg4C, dwArg58, dwArg5C, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0, out s1_105, out a3_171, out a4_172, out a5_216, out s2_108, out s3_109, out s5_111, out mstatus_102)
	a0_123 = 0<32>
l23021944:
	s0Out = s0
	s1Out = s1_105
	a0Out = a0_123
	a3Out = a3_171
	a4Out = a4_172
	s2Out = s2_108
	s3Out = s3_109
	s5Out = s5_111
	mstatusOut = mstatus_102
	return ra_103
sc_send_public_key_exit:


word32 send_pairing_rsp(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      bt_conn_auth_pairing_confirm
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
send_pairing_rsp_entry:
l23021956:
	word32 a0_100
	word32 a0_18
	word32 s1_28
	word32 a2_173
	word32 a5_174
	word32 s3_175
	word32 s5_176
	word32 a3_144
	word32 a4_145
	word32 mstatus_149
	word32 s2_154
	word32 ra_150 = smp_create_pdu.isra.7(ra, a0, a3, a4, a5, s5, mstatus, dwArg28, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1_28, out a0_18, out a2_173, out a3_144, out a4_145, out a5_174, out s2_154, out s3_175, out s5_176, out mstatus_149)
	branch a0_18 == 0<32> l23021992
l23021992:
	a0_100 = 8<32>
l23021968:
	word32 a5_56
	word32 a1_177
	word32 a5_178
	word32 a2_179
	word32 a3_180
	word32 a4_181
	word32 a6_182
	word32 a7_183
	memcpy(net_buf_simple_add(a0_18 + 8<32>, 6<32>, a4_145, out a1_177, out a5_178), s1_28 + 169<i32>, 6<32>, out a2_179, out a3_180, out a4_181, out a5_56, out a6_182, out a7_183)
	word32 s0_184
	word32 s1_185
	word32 a5_186
	word32 s3_187
	word32 s5_188
	ra_150 = smp_send.isra.9(ra_150, s1_28, s1_28, a0_18, 0<32>, a5_56, mstatus_149, s0, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_184, out s1_185, out a3_144, out a4_145, out a5_186, out s2_154, out s3_187, out s5_188, out mstatus_149)
	a0_100 = 0<32>
l23021988:
	a0Out = a0_100
	a3Out = a3_144
	a4Out = a4_145
	s2Out = s2_154
	mstatusOut = mstatus_149
	return ra_150
send_pairing_rsp_exit:


word32 bt_smp_distribute_keys(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 s3, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_signing_info
//      smp_master_ident
//      bt_smp_encrypt_change
//      smp_ident_addr_info
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_distribute_keys_entry:
l23021996:
	word32 a0_347
	word32 s1_237
	word32 a0_20 = Mem17[a0:word32]
	word32 s0_134 = a0
	branch Mem17[a0_20 + 156<i32>:int32] != 0<32> l230219DC
l230219DC:
	s1_237 = s1
	word32 a2_26
	branch atomic_test_bit(a0 + 156<i32>, 5<32>, out a2_26) != 0<32> l23021A18
l230219EA:
	word32 a5_28 = CONVERT(Mem17[a0 + 384<i32>:byte], byte, word32)
	a5 = a5_28 & 1<32>
	s1_237 = s1
	branch (a5_28 & 1<32>) == 0<32> l23021A18
l230219F2:
	word32 a0_313
	s0_134 = Mem17[a5_28 & 1<32>:word32]
	word32 a3_37
	word32 a4_38
	word32 a5_39
	word32 a0_881
	word32 s4_882
	bt_rand(fp + -60<i32>, 0x1A<32>, a2_26, out a0_881, out a3_37, out a4_38, out a5_39, out s4_882)
	word32 a0_48
	word32 a4_52
	word32 s1_58
	word32 s3_886
	word32 s5_887
	word32 a2_883
	word32 a5_884
	word32 s2_885
	word32 a3_158
	word32 ra_110 = smp_create_pdu.isra.7(ra, s0_134, a3_37, a4_38, a5_39, s5, mstatus, dwLoc08, dwArg00, dwArg04, dwArg28, dwArg44, dwArg4C, s1, dwArg98, dwArgB8, out s1_58, out a0_48, out a2_883, out a3_158, out a4_52, out a5_884, out s2_885, out s3_886, out s5_887, out mstatus)
	branch a0_48 != 0<32> l23021A3A
l23021A3A:
	word32 a5_889
	word32 a1_888
	word32 a0_79 = net_buf_simple_add(a0_48 + 8<32>, 0x10<32>, a4_52, out a1_888, out a5_889)
	word32 a7_895
	word32 a4_892
	word32 a5_893
	word32 a6_894
	word32 a2_890
	word32 a3_891
	memcpy(a0_79, fp + -60<i32>, CONVERT(Mem17[s1_58 + 8<i32>:byte], byte, word32), out a2_890, out a3_891, out a4_892, out a5_893, out a6_894, out a7_895)
	word32 a0_98 = CONVERT(Mem17[s1_58 + 8<i32>:byte], byte, word32)
	word32 a5_109 = 0xF<32>
	branch a0_98 >u 0xF<32> l23021A64
l23021A58:
	word32 a4_934
	word32 a3_933
	word32 a2_932
	word32 a1_931
	word32 a0_930
	word32 t1_929
	ra_110 = memset(ra_110, a0_98 + a0_79, 0<32>, 0x10<32> - a0_98, out t1_929, out a0_930, out a1_931, out a2_932, out a3_933, out a4_934, out a5_109)
l23021A64:
	word32 a3_127
	word32 a4_128
	word32 a5_129
	word32 mstatus_132
	word32 s5_141
	word32 a0_155
	word32 a4_159
	word32 s1_165
	word32 s3_927
	word32 s5_928
	word32 a5_925
	word32 s2_926
	word32 a2_924
	word32 s3_923
	word32 s1_921
	word32 s2_922
	ra_110 = smp_create_pdu.isra.7(smp_send.isra.9(ra_110, s1_58, s0_134, a0_48, 0<32>, a5_109, mstatus, dwLoc3C, dwLoc38, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg2C, dwArg38, dwArg3C, dwArg48, s3, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_134, out s1_921, out a3_127, out a4_128, out a5_129, out s2_922, out s3_923, out s5_141, out mstatus_132), s0_134, a3_127, a4_128, a5_129, s5_141, mstatus_132, dwLoc08, dwArg00, dwArg04, dwArg28, dwArg44, dwArg4C, s1, dwArg98, dwArgB8, out s1_165, out a0_155, out a2_924, out a3_158, out a4_159, out a5_925, out s2_926, out s3_927, out s5_928, out mstatus)
	branch a0_155 != 0<32> l23021A84
l23021A84:
	word32 a5_946
	word32 a1_945
	word32 a0_186 = net_buf_simple_add(a0_155 + 8<32>, 0xA<32>, a4_159, out a1_945, out a5_946)
	word32 a7_952
	word32 a6_951
	word32 a5_950
	word32 a4_949
	word32 a3_948
	word32 a2_947
	memcpy(a0_186 + 2<32>, fp + -44<i32>, 8<32>, out a2_947, out a3_948, out a4_949, out a5_950, out a6_951, out a7_952)
	word32 a5_210
	word32 a7_957
	word32 a6_956
	word32 a4_955
	word32 a3_954
	word32 a2_953
	memcpy(a0_186, fp + -36<i32>, 2<32>, out a2_953, out a3_954, out a4_955, out a5_210, out a6_956, out a7_957)
	word32 s2_958
	word32 s3_241
	ra = smp_send.isra.9(ra_110, s1_165, s0_134, a0_155, 0x23022512<32>, a5_210, mstatus, dwLoc3C, dwLoc38, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg2C, dwArg38, dwArg3C, dwArg48, s3, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_134, out s1_237, out a3, out a4, out a5, out s2_958, out s3_241, out s5, out mstatus)
	word32 a2_959
	branch atomic_test_bit(s3_241, 0xC<32>, out a2_959) == 0<32> l23021A18
l23021ABC:
	bt_keys_add_type(s1_237, 1<32>)
	word32 a2_974
	word32 a3_975
	word32 a4_976
	word32 a5_977
	word32 a6_978
	word32 a7_979
	memcpy(s1_237 + 110<i32>, fp + -60<i32>, 0x10<32>, out a2_974, out a3_975, out a4_976, out a5_977, out a6_978, out a7_979)
	word32 a2_980
	word32 a3_981
	word32 a4_982
	word32 a5_983
	word32 a6_984
	word32 a7_985
	memcpy(s1_237 + 100<i32>, fp + -44<i32>, 8<32>, out a2_980, out a3_981, out a4_982, out a5_983, out a6_984, out a7_985)
	word32 a2_986
	word32 a6_987
	word32 a7_988
	memcpy(s1_237 + 108<i32>, fp + -36<i32>, 2<32>, out a2_986, out a3, out a4, out a5, out a6_987, out a7_988)
l23021A7A:
	a0_313 = 0x23075540<32>
l23021A0C:
	a0_313 = 0x23075514<32>
l23021A14:
	word32 a0_960
	word32 a1_961
	word32 a2_962
	word32 a7_963
	word32 s2_964
	word32 s3_965
	word32 s4_966
	word32 s6_967
	word32 s7_968
	word32 s8_969
	word32 s9_970
	word32 s10_971
	word32 s11_972
	word32 t4_973
	ra = printf(ra_110, a0_313, a3_158, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_237, out a0_960, out a1_961, out a2_962, out a3, out a4, out a5, out a7_963, out s2_964, out s3_965, out s4_966, out s5, out s6_967, out s7_968, out s8_969, out s9_970, out s10_971, out s11_972, out t4_973)
l23021A18:
	word32 a0_346 = CONVERT(Mem17[s0_134 + 384<i32>:byte], byte, word32)
	a0_347 = a0_346 & 4<32>
	branch (a0_346 & 4<32>) == 0<32> l230219CA
l23021A20:
	word32 a0_361
	word32 a2_363
	word32 a3_364
	word32 a4_365
	word32 s2_374
	word32 s3_375
	word32 s1_896
	word32 a5_897
	word32 s5_898
	word32 ra_370 = smp_create_pdu.isra.7(ra, s0_134, a3, a4, a5, s5, mstatus, dwLoc08, dwArg00, dwArg04, dwArg28, dwArg44, dwArg4C, s1, dwArg98, dwArgB8, out s1_896, out a0_361, out a2_363, out a3_364, out a4_365, out a5_897, out s2_374, out s3_375, out s5_898, out mstatus)
	branch a0_361 != 0<32> l23021AEA
l23021AEA:
	word32 s4_404
	word32 a3_902
	word32 a4_903
	word32 a1_899
	word32 a5_900
	word32 a0_901
	word32 a5_402
	word32 s1_403 = bt_rand(net_buf_simple_add(a0_361 + 8<32>, 0x10<32>, a4_365, out a1_899, out a5_900), 0x10<32>, a2_363, out a0_901, out a3_902, out a4_903, out a5_402, out s4_404)
	word32 a2_904
	branch atomic_test_bit(s3_375, 0xC<32>, out a2_904) == 0<32> l23021B1C
l23021B04:
	bt_keys_add_type(s2_374, 8<32>)
	word32 a7_944
	word32 a6_943
	word32 a4_942
	word32 a3_941
	word32 a2_940
	memcpy(s2_374 + 60<i32>, s4_404, 0x10<32>, out a2_940, out a3_941, out a4_942, out a5_402, out a6_943, out a7_944)
	Mem433[s2_374 + 76<i32>:word32] = 0<32>
l23021B1C:
	word32 s5_939
	word32 s3_938
	word32 s2_937
	word32 a5_936
	word32 s0_935
	ra = smp_send.isra.9(ra_370, s1_403, s0_134, s1_403, 0x2302215A<32>, a5_402, mstatus, dwLoc3C, dwLoc38, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg2C, dwArg38, dwArg3C, dwArg48, s3, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_935, out s1_237, out a3, out a4, out a5_936, out s2_937, out s3_938, out s5_939, out mstatus)
	a0_347 = 0<32>
l23021A2C:
	word32 s11_919
	word32 t4_920
	word32 s10_918
	word32 s8_916
	word32 s9_917
	word32 s6_914
	word32 s7_915
	word32 s4_912
	word32 s5_913
	word32 s2_910
	word32 s3_911
	word32 a5_908
	word32 a7_909
	word32 a1_906
	word32 a2_907
	word32 a0_905
	ra = printf(ra_370, 0x2307556C<32>, a3_364, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_237, out a0_905, out a1_906, out a2_907, out a3, out a4, out a5_908, out a7_909, out s2_910, out s3_911, out s4_912, out s5_913, out s6_914, out s7_915, out s8_916, out s9_917, out s10_918, out s11_919, out t4_920)
l230219B2:
	word32 a3_503
	word32 t4_880
	word32 s9_877
	word32 s10_878
	word32 s11_879
	word32 s6_874
	word32 s7_875
	word32 s8_876
	word32 s3_871
	word32 s4_872
	word32 s5_873
	word32 a5_868
	word32 a7_869
	word32 s2_870
	word32 a0_865
	word32 a1_866
	word32 a2_867
	word32 s0_864
	ra = printf(bt_addr_le_str_real(ra, a0_20 + 112<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_864, out a3_503), 0x230754FC<32>, a3_503, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_237, out a0_865, out a1_866, out a2_867, out a3, out a4, out a5_868, out a7_869, out s2_870, out s3_871, out s4_872, out s5_873, out s6_874, out s7_875, out s8_876, out s9_877, out s10_878, out s11_879, out t4_880)
l230219C8:
	a0_347 = 8<32>
l230219CA:
	s0Out = dwArg0158
	s1Out = s1_237
	a0Out = a0_347
	a3Out = a3
	a4Out = a4
	mstatusOut = mstatus
	return ra
bt_smp_distribute_keys_exit:


void smp_signing_info(word32 ra, word32 s1, word32 a0, word32 a3, word32 s2, word32 s3, word32 s5, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_signing_info_entry:
l23021B30:
	word32 s1_108
	word32 s0_120 = a0
	s1_108 = s1
	word32 a2_399
	branch atomic_test_bit(Mem13[s1:word32] + 156<i32>, 0xC<32>, out a2_399) == 0<32> l23021B94
l23021B4E:
	word32 a0_30
	word32 s2_38
	word32 a3_400
	word32 s4_401
	ra = bt_keys_get_type(ra, a0, 0x10<32>, CONVERT(Mem13[s1 + 8<i32>:byte], byte, word32), s1 + 112<i32>, s1 + 112<i32>, mstatus, dwLoc20, dwLoc1C, s2, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1_108, out a0_30, out a3_400, out s2_38, out s3, out s4_401, out s5, out mstatus)
	branch a0_30 != 0<32> l23021B88
l23021B88:
	word32 a2_402
	word32 a4_403
	word32 a5_404
	word32 a6_405
	word32 a7_406
	memcpy(a0_30 + 80<i32>, s3, 0x10<32>, out a2_402, out a3, out a4_403, out a5_404, out a6_405, out a7_406)
l23021B94:
	word32 a5_76 = CONVERT(Mem13[a0 + 385<i32>:byte], byte, word32)
	Mem78[a0 + 385<i32>:byte] = SLICE(a5_76 & 251<i32>, byte, 0)
	word32 a4_103 = CONVERT(Mem78[s1_108 + 3<i32>:byte], byte, word32)
	word32 a5_81 = a5_76 & 251<i32> | a4_103
	branch a5_81 == 0<32> l23021BB2
l23021BB2:
	word32 a0_91
	ra = bt_smp_distribute_keys(ra, s1_108, a0, a3, a4_103, a5_81, s3, s5, mstatus, dwLoc20, dwLoc1C, s2, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_120, out s1_108, out a0_91, out a3, out a4_103, out mstatus)
	branch a0_91 == 0<32> l23021BA8
l23021BBA:
l23021BA8:
	branch CONVERT(Mem78[s0_120 + 384<i32>:uint16], uint16, word32) == 0<32> l23021BBC
l23021BBC:
	word32 a4_427
	word32 a5_428
	word32 s5_429
	smp_pairing_complete(ra, s0_120, s1_108, s0_120, 0<32>, a3, a4_103, mstatus, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArgB8, dwArgF8, out a4_427, out a5_428, out s5_429)
l23021BAE:
l23021B64:
	word32 a3_158
	word32 s0_407
	word32 s1_408
	word32 a0_409
	word32 a1_410
	word32 a2_411
	word32 a3_412
	word32 a4_413
	word32 a5_414
	word32 a7_415
	word32 s2_416
	word32 s3_417
	word32 s4_418
	word32 s5_419
	word32 s6_420
	word32 s7_421
	word32 s8_422
	word32 s9_423
	word32 s10_424
	word32 s11_425
	word32 t4_426
	printf(bt_addr_le_str_real(ra, s2_38, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_407, out a3_158), 0x23075884<32>, a3_158, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_408, out a0_409, out a1_410, out a2_411, out a3_412, out a4_413, out a5_414, out a7_415, out s2_416, out s3_417, out s4_418, out s5_419, out s6_420, out s7_421, out s8_422, out s9_423, out s10_424, out s11_425, out t4_426)
l23021B7A:
	return
smp_signing_info_exit:


void smp_master_ident(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_master_ident_entry:
l23021BC6:
	word32 s1_118
	word32 s0_150 = a0
	s1_118 = s1
	word32 a2_542
	branch atomic_test_bit(Mem15[s1:word32] + 156<i32>, 0xC<32>, out a2_542) == 0<32> l23021C46
l23021BE6:
	word32 a0_32
	word32 s4_42
	word32 a3_543
	word32 s2_544
	ra = bt_keys_get_type(ra, a0, 4<32>, CONVERT(Mem15[s1 + 8<i32>:byte], byte, word32), s1 + 112<i32>, a1, mstatus, dwLoc20, s4, s2, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1_118, out a0_32, out a3_543, out s2_544, out s3, out s4_42, out s5, out mstatus)
	branch a0_32 != 0<32> l23021C24
l23021C24:
	word32 a2_545
	word32 a4_547
	word32 a3_546
	word32 a6_549
	word32 a5_548
	word32 a7_550
	memcpy(a0_32 + 0x14<32>, s3, 2<32>, out a2_545, out a3_546, out a4_547, out a5_548, out a6_549, out a7_550)
	word32 a2_551
	word32 a5_553
	word32 a4_552
	word32 a7_555
	word32 a6_554
	memcpy(a0_32 + 12<i32>, s3 + 2<i32>, 8<32>, out a2_551, out a3, out a4_552, out a5_553, out a6_554, out a7_555)
	Mem95[a0 + 385<i32>:byte] = SLICE(CONVERT(Mem15[a0 + 385<i32>:byte], byte, word32) & 0xFFFFFFFE<32>, byte, 0)
l23021C46:
	word32 a5_98 = CONVERT(Mem97[a0 + 385<i32>:byte], byte, word32)
	word32 a1_102 = 8<32>
	word32 a4_100 = a5_98 & 2<i32>
	branch (a5_98 & 2<i32>) != 0<32> l23021C58
l23021C52:
	branch (a5_98 & 4<32>) == 0<32> l23021C60
l23021C56:
	a1_102 = 0xA<32>
l23021C58:
	word32 a0_576
	word32 a2_577
	word32 a5_578
	word32 s4_579
	s1_118 = atomic_set_bit(a0, a1_102, a3, a5_98 & 2<i32>, mstatus, out a0_576, out a2_577, out a3, out a4_100, out a5_578, out s4_579)
l23021C60:
	branch CONVERT(Mem97[s1_118 + 3<i32>:byte], byte, word32) == 0<32> l23021C70
l23021C70:
	word32 a5_128 = CONVERT(Mem97[a0 + 385<i32>:byte], byte, word32)
	branch a5_128 != 0<32> l23021C66
l23021C76:
	word32 a0_146
	ra = bt_smp_distribute_keys(ra, s1_118, a0, a3, a4_100, a5_128, s3, s5, mstatus, dwLoc20, s4, s2, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_150, out s1_118, out a0_146, out a3, out a4_100, out mstatus)
	branch a0_146 == 0<32> l23021C66
l23021C7E:
l23021C66:
	branch CONVERT(Mem97[s0_150 + 384<i32>:uint16], uint16, word32) == 0<32> l23021C80
l23021C80:
	word32 a4_580
	word32 a5_581
	word32 s5_582
	smp_pairing_complete(ra, s0_150, s1_118, s0_150, 0<32>, a3, a4_100, mstatus, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArgB8, dwArgF8, out a4_580, out a5_581, out s5_582)
l23021C6C:
l23021BFE:
	word32 a3_213
	word32 t4_575
	word32 s11_574
	word32 s0_556
	word32 a1_559
	word32 s1_557
	word32 a0_558
	word32 a3_561
	word32 a2_560
	word32 a5_563
	word32 a4_562
	word32 s3_566
	word32 s2_565
	word32 s6_569
	word32 a7_564
	word32 s5_568
	word32 s4_567
	word32 s7_570
	word32 s9_572
	word32 s10_573
	word32 s8_571
	printf(bt_addr_le_str_real(ra, s4_42, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_556, out a3_213), 0x23075884<32>, a3_213, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_557, out a0_558, out a1_559, out a2_560, out a3_561, out a4_562, out a5_563, out a7_564, out s2_565, out s3_566, out s4_567, out s5_568, out s6_569, out s7_570, out s8_571, out s9_572, out s10_573, out s11_574, out t4_575)
l23021C14:
	return
smp_master_ident_exit:


word32 smp_init(word32 ra, word32 a0, word32 mstatus, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      bt_smp_start_security
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 a5 ra s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
smp_init_entry:
l23021C8A:
	word32 a2_18
	word32 t1_152
	word32 a0_153
	word32 a1_154
	word32 a3_155
	word32 a4_156
	word32 a5_157
	word32 ra_119 = memset(ra, a0 + 152<i32>, 0<32>, 236<i32>, out t1_152, out a0_153, out a1_154, out a2_18, out a3_155, out a4_156, out a5_157)
	word32 a0_27
	word32 s4_158
	word32 a4_113
	word32 a3_112
	word32 a5_114
	word32 s1_120 = bt_rand(a0 + 191<i32>, 0x10<32>, a2_18, out a0_27, out a3_112, out a4_113, out a5_114, out s4_158)
	word32 s0_38 = 8<32>
	branch a0_27 != 0<32> l23021CD8
l23021CB2:
	word32 a3_46
	word32 a4_47
	word32 a0_159
	word32 a2_160
	word32 a5_161
	word32 s4_162
	atomic_set_bit(a0_27, 5<32>, a3_112, a4_113, mstatus, out a0_159, out a2_160, out a3_46, out a4_47, out a5_161, out s4_162)
	Mem59[0x4200E188<32>:word32] = bt_pub_key_get()
	s0_38 = a0_27
	word32 a0_163
	word32 a1_164
	word32 s4_165
	word32 s6_166
	word32 s7_167
	word32 s8_168
	word32 s9_169
	ra_119 = k_sem_init(ra_119, a0_27, 0x4201A458<32>, 0<32>, 1<32>, a3_46, a4_47, 0x4200E000<32>, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgD8, dwArg0118, out s1_120, out a0_163, out a1_164, out a3_112, out a4_113, out a5_114, out s2, out s3, out s4_165, out s5, out s6_166, out s7_167, out s8_168, out s9_169)
l23021CD8:
	s1Out = s1_120
	a0Out = s0_38
	a3Out = a3_112
	a4Out = a4_113
	a5Out = a5_114
	s2Out = s2
	s3Out = s3
	s5Out = s5
	return ra_119
smp_init_exit:


word32 smp_send_pairing_req(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_security_request
//      bt_smp_start_security
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_send_pairing_req_entry:
l23021CE4:
	word32 s1_480
	word32 s4_481
	word32 s5_100
	word32 s3_130
	word32 s2_129
	word32 a5_116
	word32 a4_115
	word32 a3_114
	word32 ra_107 = smp_chan_get(ra, a0, a3, dwLoc08, dwArg40, dwArg44, s1, dwArg8C, out s1_480, out a3_114, out a4_115, out a5_116, out s2_129, out s3_130, out s4_481, out s5_100)
	word32 s1_282 = -57<i32>
	branch a0 == 0<32> l23021D1E
l23021D00:
	word32 s0_105 = a0
	s1_282 = 0xFFFFFFFB<32>
	word32 a2_482
	branch atomic_test_bit(a0 + 156<i32>, 4<32>, out a2_482) != 0<32> l23021D1E
l23021D12:
	word32 a2_483
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_483) == 0<32> l23021D32
l23021D32:
	word32 a2_484
	branch atomic_test_bit(a0 + 156<i32>, 1<32>, out a2_484) != 0<32> l23021D1C
l23021D3C:
	word32 a0_63
	s1_282 = sec_level_reachable.isra.1(CONVERT(Mem17[s3_130 + 10<i32>:byte], byte, word32), a3_114, a4_115, out a0_63, out a3_114, out a4_115, out a5_116)
	branch a0_63 == 0<32> l23021D1E
l23021D48:
	branch Mem17[s3_130 + 156<i32>:int32] == 0<32> l23021D5E
l23021D5E:
	word32 a0_75
	word32 s4_511
	ra_107 = bt_keys_get_addr(ra_107, a0, CONVERT(Mem17[s3_130 + 8<i32>:byte], byte, word32), s3_130 + 112<i32>, s2_129, s3_130, a0 + 156<i32>, mstatus, dwLoc20, s4, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_105, out s1_282, out a0_75, out a3_114, out a4_115, out a5_116, out s2_129, out s3_130, out s4_511, out s5_100, out mstatus)
	Mem104[s3_130 + 156<i32>:word32] = a0_75
	branch a0_75 != 0<32> l23021D4E
l23021D72:
l23021D4E:
	word32 a0_111
	word32 s1_485
	ra_107 = smp_init(ra_107, s0_105, mstatus, s2, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgB8, dwArgF8, out s1_485, out a0_111, out a3_114, out a4_115, out a5_116, out s2_129, out s3_130, out s5_100)
	branch a0_111 == 0<32> l23021D74
l23021D74:
	word32 a0_139
	word32 s1_486
	word32 a2_487
	word32 s5_488
	ra_107 = smp_create_pdu.isra.7(ra_107, s0_105, a3_114, a4_115, a5_116, s5_100, mstatus, dwArg18, dwArg20, dwArg24, dwArg48, s3, ra, dwArg78, dwArgB8, dwArgD8, out s1_486, out a0_139, out a2_487, out a3_114, out a4_115, out a5_116, out s2_129, out s3_130, out s5_488, out mstatus)
	s5_100 = a0_139
	branch a0_139 == 0<32> l23021D58
l23021D80:
	word32 a1_489
	word32 a5_490
	word32 a0_170 = net_buf_simple_add(a0_139 + 8<32>, 6<32>, a4_115, out a1_489, out a5_490)
	word32 a0_176
	word32 a3_178
	word32 a4_179
	word32 a5_491
	word32 s1_181 = get_auth.isra.0(s3_130 + 10<i32>, 9<32>, a3_114, a4_115, out a0_176, out a3_178, out a4_179, out a5_491)
	Mem183[a0_170 + 2<i32>:byte] = SLICE(a0_176, byte, 0)
	word32 a3_492
	word32 a0_184 = get_io_capa(a3_178, a4_179, out a3_492)
	word32 a5_188 = CONVERT(Mem183[0x4200E184<32>:byte], byte, word32)
	Mem189[a0_170:byte] = SLICE(a0_184, byte, 0)
	Mem191[a0_170 + 1<i32>:byte] = SLICE(a5_188, byte, 0)
	Mem193[a0_170 + 3<i32>:byte] = 0x10<8>
	Mem195[a0_170 + 4<i32>:byte] = 5<8>
	Mem197[a0_170 + 5<i32>:byte] = 7<8>
	Mem199[s0_105 + 384<i32>:word16] = 0x705<16>
	Mem201[s0_105 + 161<i32>:byte] = 1<8>
	word32 a5_205
	word32 a2_493
	word32 a3_494
	word32 a4_495
	word32 a6_496
	word32 a7_497
	memcpy(s0_105 + 162<i32>, a0_170, 6<32>, out a2_493, out a3_494, out a4_495, out a5_205, out a6_496, out a7_497)
	word32 a3_223
	word32 a4_224
	word32 s0_230
	word32 s1_498
	word32 a5_499
	ra_107 = smp_send.isra.9(ra_107, s1_181, s0_105, a0_139, 0<32>, a5_205, mstatus, s4, s2, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg44, dwArg4C, dwArg58, dwArg5C, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_230, out s1_498, out a3_223, out a4_224, out a5_499, out s2_129, out s3_130, out s5_100, out mstatus)
	word32 a3_255
	word32 a4_256
	word32 a0_500
	word32 a2_501
	word32 a5_502
	word32 s4_503
	atomic_set_bit(s0_230 + 152<i32>, 2<32>, a3_223, a4_224, mstatus, out a0_500, out a2_501, out a3_255, out a4_256, out a5_502, out s4_503)
	word32 a3_267
	word32 a4_268
	word32 a0_504
	word32 a2_505
	word32 a5_506
	word32 s4_507
	atomic_set_bit(s0_230 + 152<i32>, 0xB<32>, a3_255, a4_256, mstatus, out a0_504, out a2_505, out a3_267, out a4_268, out a5_506, out s4_507)
	word32 a0_508
	word32 a2_509
	word32 s4_510
	s1_282 = atomic_set_bit(s0_230 + 152<i32>, 3<32>, a3_267, a4_268, mstatus, out a0_508, out a2_509, out a3_114, out a4_115, out a5_116, out s4_510)
l23021D58:
	s1_282 = -55<i32>
l23021D1C:
	s1_282 = 0xFFFFFFF0<32>
l23021D1E:
	s0Out = s1
	s1Out = s1_282
	a0Out = s1_282
	a3Out = a3_114
	a4Out = a4_115
	a5Out = a5_116
	s2Out = s2_129
	s3Out = s3_130
	s5Out = s5_100
	mstatusOut = mstatus
	return ra_107
smp_send_pairing_req_exit:


void smp_security_request(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_security_request_entry:
l23021E00:
	word32 s2_18 = Mem13[a1 + 8<i32>:int32]
	word32 s1_101 = a0 + 156<i32>
	word32 a2_615
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_615) == 0<32> l23021E24
l23021E24:
	word32 a2_616
	branch atomic_test_bit(a0 + 156<i32>, 1<32>, out a2_616) != 0<32> l23021E20
l23021E2E:
	word32 a5_30 = CONVERT(Mem13[s2_18:byte], byte, word32)
	word32 a4_148 = CONVERT(Mem13[0x4200E18C<32>:byte], byte, word32)
	word32 s2_172 = a5_30 & 7<i32>
	branch a4_148 == 0<32> l23021E44
l23021E40:
	s2_172 = a5_30 & 15<i32>
l23021E44:
	word32 a3_121
	word32 a4_122
	word32 mstatus_126
	word32 s0_128
	word32 a1_147
	word32 ra_168
	word32 s0_182
	word32 a5_36 = Mem13[s0 + 156<i32>:int32]
	branch a5_36 == 0<32> l23021E68
l23021E68:
	word32 a0_41
	word32 a5_617
	s0_182 = bt_keys_find(32<i32>, CONVERT(Mem13[s0 + 8<i32>:byte], byte, word32), s0 + 112<i32>, out s1_101, out a0_41, out a3, out a4_148, out a5_617, out s2_172, out s3, out s4)
	Mem55[s0_182 + 156<i32>:word32] = a0_41
	branch a0_41 != 0<32> l23021E90
l23021E80:
	word32 a0_59
	word32 a5_637
	s0_182 = bt_keys_find(4<32>, CONVERT(Mem55[s0_182 + 8<i32>:byte], byte, word32), s3, out s1_101, out a0_59, out a3, out a4_148, out a5_637, out s2_172, out s3, out s4)
	Mem73[s0_182 + 156<i32>:word32] = a0_59
l23021E4A:
	s0_182 = s0
	s0_182 = s0
	ra_168 = ra
	branch (CONVERT(Mem13[a5_36 + 10<i32>:uint16], uint16, word32) & 36<i32>) != 0<32> l23021E90
l23021E90:
	word32 a1_78 = Mem77[s0_182 + 156<i32>:int32]
	ra_168 = ra
	branch a1_78 == 0<32> l23021E54
l23021E96:
	word32 a5_107 = s2_172 & 4<i32>
	branch a5_107 == 0<32> l23021EBE
l23021E9C:
	word32 a5_82 = CONVERT(Mem77[a1_78 + 9<i32>:byte], byte, word32)
	a5_107 = a5_82 & 1<32>
	branch (a5_82 & 1<32>) != 0<32> l23021EBE
l23021EBE:
	s2_172 = s2_172 & 8<i32>
	branch s2_172 == 0<32> l23021ED0
l23021EC6:
	word32 a5_88 = CONVERT(Mem77[a1_78 + 10<i32>:uint16], uint16, word32)
	a5_107 = a5_88 & 32<i32>
	ra_168 = ra
	branch (a5_88 & 32<i32>) == 0<32> l23021E54
l23021ED0:
	word32 a0_118
	word32 s5_641
	word32 a5_638
	word32 s2_639
	word32 s3_640
	bt_conn_le_start_encryption(ra, s1_101, a1_78 + 22<i32>, CONVERT(Mem77[a1_78 + 8<i32>:byte], byte, word32), a5_107, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_128, out a0_118, out a3_121, out a4_122, out a5_638, out s2_639, out s3_640, out s5_641, out mstatus_126)
	a1_147 = 1<32>
	branch a0_118 >= 0<32> l23021E60
l23021EA4:
	ra_168 = ra
	branch get_io_capa(a3, a4_148, out a3) != 3<32> l23021E54
l23021EAE:
	word32 s9_633
	word32 s10_634
	word32 s11_635
	word32 t4_636
	word32 s5_629
	word32 s6_630
	word32 s7_631
	word32 s8_632
	word32 a5_627
	word32 a7_628
	word32 a2_625
	word32 a4_626
	word32 a0_623
	word32 a1_624
	ra_168 = printf(ra, 0x230758D0<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_101, out a0_623, out a1_624, out a2_625, out a3, out a4_626, out a5_627, out a7_628, out s2_172, out s3, out s4, out s5_629, out s6_630, out s7_631, out s8_632, out s9_633, out s10_634, out s11_635, out t4_636)
l23021E54:
	word32 a0_201
	word32 s3_621
	word32 s5_622
	word32 a5_619
	word32 s2_620
	word32 s1_618
	smp_send_pairing_req(ra_168, s0_182, s1_101, s0_182, a3, s2_172, s3, s4, mstatus, dwLoc20, dwLoc1C, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_128, out s1_618, out a0_201, out a3_121, out a4_122, out a5_619, out s2_620, out s3_621, out s5_622, out mstatus_126)
	branch a0_201 < 0<32> l23021EEA
l23021EEA:
l23021E5E:
	a1_147 = 0xE<32>
l23021E60:
	word32 a4_645
	word32 a5_646
	word32 s4_647
	word32 a0_642
	word32 a2_643
	word32 a3_644
	atomic_set_bit(s0_128, a1_147, a3_121, a4_122, mstatus_126, out a0_642, out a2_643, out a3_644, out a4_645, out a5_646, out s4_647)
l23021E20:
l23021EEC:
	return
smp_security_request_exit:


void smp_pairing_req(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s4, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_pairing_req_entry:
l23021EFA:
	branch (CONVERT(Mem15[s1 + 3<i32>:byte], byte, word32) + 0xFFFFFFF9<32> & 255<i32>) <=u 9<32> l23021F2E
l23021F2E:
	word32 ra_260
	word32 s1_101
	word32 s3_121 = Mem15[a0:int32]
	word32 s0_23 = a0
	ra_260 = ra
	s1_101 = s1
	branch Mem15[s3_121 + 156<i32>:int32] == 0<32> l23022036
l23022036:
	word32 a0_28
	word32 a3_1161
	word32 s4_1165
	word32 s2_1164
	word32 a5_1163
	word32 a4_1162
	ra_260 = bt_keys_get_addr(ra, a0, CONVERT(Mem15[s3_121 + 8<i32>:byte], byte, word32), s3_121 + 112<i32>, s2, s3_121, s4, mstatus, dwLoc20, s4, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_23, out s1_101, out a0_28, out a3_1161, out a4_1162, out a5_1163, out s2_1164, out s3_121, out s4_1165, out s5, out mstatus)
	Mem57[s3_121 + 156<i32>:word32] = a0_28
	branch a0_28 != 0<32> l23021F3C
l2302204A:
l23021F3C:
	word32 a2_1166
	branch atomic_test_bit(s0_23 + 156<i32>, 0xE<32>, out a2_1166) == 0<32> l2302204E
l2302204E:
	word32 a0_71
	word32 a4_1168
	word32 s2_1170
	word32 a5_1169
	word32 a3_1167
	ra_260 = smp_init(ra_260, s0_23, mstatus, s2, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgB8, dwArgF8, out s1_101, out a0_71, out a3_1167, out a4_1168, out a5_1169, out s2_1170, out s3_121, out s5)
	branch a0_71 == 0<32> l23021F4C
l23022058:
l23021F4C:
	Mem100[s0_23 + 161<i32>:byte] = 1<8>
	word32 a4_105
	word32 a3_110
	word32 a7_1174
	word32 a6_1173
	word32 a5_1172
	word32 a2_1171
	memcpy(s0_23 + 162<i32>, s1_101, 6<32>, out a2_1171, out a3_110, out a4_105, out a5_1172, out a6_1173, out a7_1174)
	Mem119[s0_23 + 168<i32>:byte] = 2<8>
	word32 a0_124
	word32 a3_126
	word32 a5_1175
	word32 a4_127
	word32 s1_129 = get_auth.isra.0(s3_121 + 10<i32>, CONVERT(Mem119[s1_101 + 2<i32>:byte], byte, word32), a3_110, a4_105, out a0_124, out a3_126, out a4_127, out a5_1175)
	Mem131[s0_23 + 171<i32>:byte] = SLICE(a0_124, byte, 0)
	word32 a3_135
	word32 a0_133 = get_io_capa(a3_126, a4_127, out a3_135)
	word32 a5_137 = CONVERT(Mem131[0x4200E184<32>:byte], byte, word32)
	Mem138[s0_23 + 169<i32>:byte] = SLICE(a0_133, byte, 0)
	Mem140[s0_23 + 170<i32>:byte] = SLICE(a5_137, byte, 0)
	Mem142[s0_23 + 172<i32>:byte] = 0x10<8>
	Mem145[s0_23 + 173<i32>:byte] = SLICE(CONVERT(Mem142[s1_129 + 4<i32>:byte], byte, word32) & 7<32>, byte, 0)
	Mem148[s0_23 + 174<i32>:byte] = SLICE(CONVERT(Mem145[s1_129 + 5<i32>:byte], byte, word32) & 5<32>, byte, 0)
	branch (a0_124 & 8<i32>) == 0<32> l23021FD0
l23021FAC:
	branch (CONVERT(Mem148[s1_129 + 2<i32>:byte], byte, word32) & 8<32>) == 0<32> l23021FD0
l23021FB4:
	word32 a5_1178
	word32 s4_1179
	word32 a2_1177
	word32 a0_1176
	s1_129 = atomic_set_bit(s0_23, 5<32>, a3_135, a4_127, mstatus, out a0_1176, out a2_1177, out a3_135, out a4_127, out a5_1178, out s4_1179)
	Mem167[s0_23 + 173<i32>:byte] = SLICE(CONVERT(Mem148[s0_23 + 173<i32>:byte], byte, word32) & 6<32>, byte, 0)
	Mem170[s0_23 + 174<i32>:byte] = SLICE(CONVERT(Mem167[s0_23 + 174<i32>:byte], byte, word32) & 4<32>, byte, 0)
l23021FD0:
	branch (CONVERT(Mem172[s0_23 + 171<i32>:byte], byte, word32) & 32<i32>) == 0<32> l23021FEC
l23021FDA:
	branch (CONVERT(Mem172[s1_129 + 2<i32>:byte], byte, word32) & 32<i32>) == 0<32> l23021FEC
l23021FE4:
	word32 a0_1180
	word32 a5_1182
	word32 a2_1181
	word32 s4_1183
	s1_129 = atomic_set_bit(s0_23, 0x13<32>, a3_135, a4_127, mstatus, out a0_1180, out a2_1181, out a3_135, out a4_127, out a5_1182, out s4_1183)
l23021FEC:
	Mem197[s0_23 + 384<i32>:byte] = SLICE(CONVERT(Mem172[s0_23 + 174<i32>:byte], byte, word32), byte, 0)
	Mem199[s0_23 + 385<i32>:byte] = SLICE(CONVERT(Mem197[s0_23 + 173<i32>:byte], byte, word32), byte, 0)
	branch (CONVERT(Mem199[s0_23 + 171<i32>:byte], byte, word32) & 1<32>) == 0<32> l23022014
l23022004:
	branch (CONVERT(Mem199[s1_129 + 2<i32>:byte], byte, word32) & 1<32>) == 0<32> l23022014
l2302200C:
	word32 a0_1187
	word32 a2_1188
	word32 a5_1189
	word32 s4_1190
	atomic_set_bit(s0_23, 0xC<32>, a3_135, a4_127, mstatus, out a0_1187, out a2_1188, out a3_135, out a4_127, out a5_1189, out s4_1190)
l23022014:
	word32 a3_231
	word32 a4_232
	word32 s4_235
	word32 s2_254
	word32 a0_1184
	word32 a2_1185
	word32 a5_1186
	Mem255[s0_23 + 160<i32>:byte] = SLICE(get_pair_method(s0_23, CONVERT(Mem199[atomic_set_bit(s0_23, 3<32>, a3_135, a4_127, mstatus, out a0_1184, out a2_1185, out a3_231, out a4_232, out a5_1186, out s4_235):byte], byte, word32), a3_231, a4_232, dwArg18, out s2_254), byte, 0)
	word32 a4_268
	word32 a3_267
	branch update_keys_check(ra_260, s0_23, s2_254, s3_121, s4_235, mstatus, dwLoc20, s4, s2, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out a3_267, out a4_268) != 0<32> l2302205E
l2302205E:
	word32 a2_1191
	word32 a0_275 = atomic_test_bit(s2_254, 5<32>, out a2_1191)
	word32 a5_278 = CONVERT(Mem255[s0_23 + 160<i32>:byte], byte, word32)
	branch a0_275 != 0<32> l230220C6
l230220C6:
	a3_267 = CONVERT(Mem255[s3_121 + 10<i32>:byte], byte, word32)
	a4_268 = 4<32>
	branch a3_267 != 4<32> l23022108
l23022108:
	branch a5_278 != 0<32> l230220EA
l2302210A:
	word32 a2_1205
	branch atomic_test_bit(s2_254, 0xE<32>, out a2_1205) != 0<32> l230220EA
l23022114:
	word32 a5_288 = Mem255[0x4201A4D4<32>:int32]
	branch a5_288 == 0<32> l230220EA
l2302211E:
	branch Mem255[a5_288 + 20<i32>:word32] == 0<32> l230220EA
l23022122:
l230220D0:
	branch a5_278 == 0<32> l23022032
l230220D2:
	word32 a4_290 = CONVERT(Mem255[s0_23 + 172<i32>:byte], byte, word32)
	word32 a5_291 = CONVERT(Mem255[s0_23 + 165<i32>:byte], byte, word32)
	branch a4_290 >=u a5_291 l230220E0
l230220DE:
	a5_291 = a4_290
l230220E0:
	a4_268 = 0x10<32>
	branch (a5_291 & 255<i32>) != 0x10<32> l23021F1A
l230220EA:
	word32 a3_308
	word32 a4_309
	word32 a5_310
	word32 a0_1197
	word32 a2_1198
	word32 s4_1199
	atomic_set_bit(s0_23, 0xC<32>, a3_267, a4_268, mstatus, out a0_1197, out a2_1198, out a3_308, out a4_309, out a5_310, out s4_1199)
l23022104_thunk_send_pairing_rsp:
	word32 a4_1202
	word32 a3_1201
	word32 a0_1200
	word32 s2_1203
	word32 mstatus_1204
	send_pairing_rsp(ra_260, s1, s0_23, a3_308, a4_309, a5_310, s5, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out a0_1200, out a3_1201, out a4_1202, out s2_1203, out mstatus_1204)
	return
l2302206E:
	branch a5_278 != 0<32> l2302209C
l23022070:
	word32 a2_1192
	branch atomic_test_bit(s2_254, 0xE<32>, out a2_1192) != 0<32> l2302209C
l2302207A:
	a5_278 = Mem255[0x4201A4D4<32>:int32]
	branch a5_278 == 0<32> l2302209C
l23022084:
	a5_278 = Mem255[a5_278 + 20<i32>:word32]
	branch a5_278 == 0<32> l2302209C
l2302209C:
	word32 a0_383
	word32 a3_386
	word32 a4_387
	word32 mstatus_391
	word32 s2_396
	word32 ra_392 = send_pairing_rsp(ra_260, s0_23, s0_23, a3_267, a4_268, a5_278, s5, mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg58, dwArg5C, s3, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out a0_383, out a3_386, out a4_387, out s2_396, out mstatus_391)
	branch a0_383 != 0<32> l23021F1C
l230220A8:
	word32 a3_1208
	word32 a2_1207
	word32 a0_1206
	word32 a4_1209
	word32 a5_1210
	word32 s4_1211
	word32 s1_420 = atomic_set_bit(s0_23, 3<32>, a3_386, a4_387, mstatus_391, out a0_1206, out a2_1207, out a3_1208, out a4_1209, out a5_1210, out s4_1211)
l230220C2_thunk_legacy_request_tk:
	word32 s0_1212
	word32 a0_1213
	word32 s5_1217
	word32 s2_1216
	word32 a3_1214
	word32 a4_1215
	word32 mstatus_1218
	legacy_request_tk(ra_392, s1_420, s2_396, mstatus_391, dwArg08, dwArg18, dwArg44, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgC4, out s0_1212, out a0_1213, out a3_1214, out a4_1215, out s2_1216, out s5_1217, out mstatus_1218)
	return
l23022088:
	word32 a0_465
	word32 s4_472
	word32 a5_1196
	word32 a2_1193
	word32 a4_1195
	word32 a3_1194
	word32 s1_471 = atomic_set_bit(s0_23, 9<32>, a3_267, a4_268, mstatus, out a0_465, out a2_1193, out a3_1194, out a4_1195, out a5_1196, out s4_472)
	word32 a5_479 = Mem255[Mem255[0x4201A4D4<32>:int32] + 20<i32>:word32]
	word32 a3_498
	word32 a7_500
	word32 t0_501
	word32 t1_502
	word32 t4_503
	word32 t5_504
	word32 t6_505
	word32 tp_506
	word32 s10_507
	word32 s11_508
	word32 s6_510
	word32 s7_511
	word32 s9_512
	call a5_479 (retsize: 0;)
		uses: a0:a0_465,a3:a3_498,a5:a5_479,a7:a7_500,mstatus:mstatus_68,ra:ra_260,s0:Mem255[a0_465:word32],s1:s1_471,s10:s10_507,s11:s11_508,s2:s2_254,s3:0x4201A000<32>,s4:s4_472,s5:s5_334,s6:s6_510,s7:s7_511,s9:s9_512,Stack +0000:dwLoc20,Stack +0010:dwLoc10,Stack +0014:dwLoc0C,Stack +0018:dwLoc08,Stack +001C:dwLoc04,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0028:dwArg08,Stack +002C:dwArg0C,Stack +0030:dwArg10,Stack +0034:dwArg14,Stack +0038:dwArg18,Stack +003C:dwArg1C,Stack +0040:dwArg20,Stack +0044:dwArg24,Stack +0048:dwArg28,Stack +004C:dwArg2C,Stack +0050:dwArg30,Stack +0054:dwArg34,Stack +0058:dwArg38,Stack +005C:dwArg3C,Stack +0064:dwArg44,Stack +0068:dwArg48,Stack +006C:dwArg4C,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0078:dwArg58,Stack +007C:dwArg5C,Stack +0098:dwArg78,Stack +009C:dwArg7C,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +00B8:dwArg98,Stack +00BC:dwArg9C,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00E4:dwArgC4,Stack +00E8:dwArgC8,Stack +00F8:dwArgD8,Stack +0108:dwArgE8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,Stack +0138:dwArg0118,Stack +0148:dwArg0128,Stack +0158:dwArg0138,t0:t0_501,t1:t1_502,t4:t4_503,t5:t5_504,t6:t6_505,tp:tp_506
		defs: a3:a3_498,a7:a7_500,s10:s10_507,s11:s11_508,s6:s6_510,s7:s7_511,s9:s9_512,t0:t0_501,t1:t1_502,t4:t4_503,t5:t5_504,t6:t6_505,tp:tp_506
l23022032:
l23021F1A:
l23021F1C:
	return
smp_pairing_req_exit:


void smp_check_complete.part.16(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_sign_info_sent
//      smp_ident_sent
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_check_complete.part.16_entry:
l23022124:
	word32 a0_12 = bt_l2cap_le_lookup_tx_cid(a0, 6<32>)
	word32 a4_14 = CONVERT(Mem10[a0_12 + 384<i32>:byte], byte, word32)
	Mem17[a0_12 + 384<i32>:byte] = SLICE(~a1 & a4_14, byte, 0)
	branch CONVERT(Mem17[a0_12 + 384<i32>:uint16], uint16, word32) != 0<32> l23022152
l23022152:
	return
l23022146:
l2302214E_thunk_smp_pairing_complete:
	word32 a4_101
	word32 a5_102
	word32 s5_103
	smp_pairing_complete(ra, s0, s1, a0_12, 0<32>, a3, a4_14, mstatus, dwArg18, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_101, out a5_102, out s5_103)
	return
smp_check_complete.part.16_exit:


void smp_sign_info_sent(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_sign_info_sent_entry:
l2302215A:
	branch CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) != 1<32> l2302216A
l2302216A:
	return
l23022164:
l23022166_thunk_smp_check_complete.part.16:
	smp_check_complete.part.16(ra, s0, s1, a0, 4<32>, a3, mstatus, dwArg18, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118)
	return
smp_sign_info_sent_exit:


void le_sc_oob_config_set.isra.3.constprop.19(word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
le_sc_oob_config_set.isra.3.constprop.19_entry:
l2302216C:
	word32 a5_11
	word32 a0_5 = Mem0[a5:word32]
	word32 a3_6 = CONVERT(Mem0[a0_5 + 163<i32>:byte], byte, word32)
	word32 a4_7 = CONVERT(Mem0[a0_5 + 170<i32>:byte], byte, word32)
	branch CONVERT(Mem0[a5 + 3<i32>:byte], byte, word32) != 0<32> l2302218E
l2302218E:
	a5_11 = (a4_7 & 1<32>) << 1<u32>
	branch (a3_6 & 1<32>) == 0<32> l2302219A
l2302219A:
	a5_11 = 3<32>
	branch (a4_7 & 1<32>) == 0<32> l23022194
l2302219E:
	a5_11 = 1<32>
l23022180:
	a5_11 = (a4_7 & 1<32>) + 1<i32>
	branch (a3_6 & 1<32>) != 0<32> l23022194
l23022186:
	a5_11 = 3<32>
	branch (a4_7 & 1<32>) == 0<32> l23022194
l2302218A:
	a5_11 = 0<32>
l23022194:
	Mem20[a1:byte] = SLICE(a5_11, byte, 0)
	return
le_sc_oob_config_set.isra.3.constprop.19_exit:


word32 smp_error(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg5C, word32 dwArg64, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_dhkey_ready
//      bt_smp_recv
//      bt_smp_pkey_ready
//      bt_smp_auth_passkey_entry
//      bt_smp_update_keys
//      bt_conn_auth_passkey_confirm
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s1 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_error_entry:
l230221A2:
	word32 s0_11 = a0
	word32 a4_21
	word32 a5_22
	word32 s5_29
	word32 a0_41
	word32 a2_190
	word32 a5_191
	word32 s2_192
	word32 a3_160
	word32 a4_161
	word32 mstatus_165
	word32 s1_168
	word32 s3_172
	word32 s5_100
	word32 ra_166 = smp_create_pdu.isra.7(ra, a0, smp_pairing_complete(ra, a0, a1, a0, a1, a3, a4, mstatus, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArgB8, dwArgF8, out a4_21, out a5_22, out s5_29), a4_21, a5_22, s5_29, mstatus, dwArg18, dwArg20, dwArg24, dwArg48, dwArg64, ra, dwArg78, dwArgB8, dwArgD8, out s1_168, out a0_41, out a2_190, out a3_160, out a4_161, out a5_191, out s2_192, out s3_172, out s5_100, out mstatus_165)
	branch a0_41 == 0<32> l230221E6
l230221E6:
l230221BC:
	word32 a5_76
	word32 a1_193
	word32 a0_74 = net_buf_simple_add(a0_41 + 8<32>, 1<32>, a4_161, out a1_193, out a5_76)
	Mem77[a0_74:byte] = SLICE(s1_168, byte, 0)
	word32 a0_194
	word32 a1_195
	word32 a5_196
	word32 s2_197
	word32 s6_198
	word32 s7_199
	word32 s9_200
	ra_166 = bt_l2cap_send_cb(ra_166, s1_168, a0_74, 6<32>, a0_41, 0<32>, a5_76, mstatus_165, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, s1, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_11, out s1_168, out a0_194, out a1_195, out a3_160, out a4_161, out a5_196, out s2_197, out s3_172, out s5_100, out s6_198, out s7_199, out s9_200, out mstatus_165)
l230221DC:
	s0Out = s0_11
	s1Out = s1_168
	a3Out = a3_160
	a4Out = a4_161
	s3Out = s3_172
	s5Out = s5_100
	mstatusOut = mstatus_165
	return ra_166
smp_error_exit:


void bt_smp_dhkey_ready(word32 ra, word32 a0, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg5C, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_dhkey_ready_entry:
l230221EC:
	word32 s1_34
	word32 a0_23
	word32 s4_465
	word32 a1_463
	word32 a5_464
	word32 a4_100
	word32 a3_113
	atomic_test_and_clear_bit(7<32>, a3, a4, mstatus, out a0_23, out a1_463, out a3_113, out a4_100, out a5_464, out s4_465)
	branch a0_23 != 0<32> l23022222
l23022222:
	s1_34 = 0<32>
l23022212:
	word32 a0_37
	word32 s4_468
	word32 a5_467
	word32 a1_466
	atomic_test_and_clear_bit(7<32>, a3_113, a4_100, mstatus, out a0_37, out a1_466, out a3_113, out a4_100, out a5_467, out s4_468)
	branch a0_37 == 0<32> l230222AA
l2302221E:
	s1_34 = 1<32>
l23022224:
	word32 s1_104 = s1_34 + 424<i32>
	word32 a1_128 = 0xB<32>
	word32 s2_108 = s1_104 + 0x420119EC<32>
	branch a0 == 0<32> l23022292
l23022236:
	word32 a4_60
	word32 a3_65
	word32 a2_469
	word32 a5_470
	word32 a6_471
	word32 a7_472
	memcpy(s1_104 + 0x42011B1B<32>, a0, 32<i32>, out a2_469, out a3_65, out a4_60, out a5_470, out a6_471, out a7_472)
	word32 a2_473
	branch atomic_test_bit(s1_104 + 0x42011A88<32>, 9<32>, out a2_473) != 0<32> l23022264
l23022258:
	word32 a2_474
	branch atomic_test_bit(s1_104 + 0x42011A88<32>, 0xF<32>, out a2_474) == 0<32> l23022276
l23022276:
	word32 a2_475
	branch atomic_test_bit(s1_104 + 0x42011A88<32>, 8<32>, out a2_475) == 0<32> l230222AA
l2302227E:
	word32 a0_110
	branch CONVERT(Mem19[Mem19[s1_104 + 0x420119EC<32>:int32] + 3<i32>:byte], byte, word32) != 0<32> l230222A4
l230222A4:
	word32 s0_489
	ra = compute_and_check_and_send_slave_dhcheck(ra, s1_104 + 156<i32>, s1_104 + 0x420119EC<32>, s1_104 + 0x420119EC<32>, a0, dwArg0108, out s0_489, out s1_104, out a0_110, out a3_113, out a4_100, out s2_108)
l2302228A:
	word32 s0_490
	ra = compute_and_send_master_dhcheck(ra, s1_104 + 156<i32>, s1_104 + 0x420119EC<32>, s1_104 + 0x420119EC<32>, a0, dwArgB4, dwArgD0, dwArgD4, dwArgF8, dwArg0118, out s0_490, out s1_104, out a0_110, out a3_113, out a4_100, out s2_108)
l2302228E:
	a1_128 = a0_110
	branch a0_110 == 0<32> l230222AA
l230222AA:
	return
l23022292:
l230222A0_thunk_smp_error:
	word32 s0_482
	word32 a3_484
	word32 s1_483
	word32 s3_486
	word32 a4_485
	word32 mstatus_488
	word32 s5_487
	smp_error(ra, s1_104, s2_108, a1_128, a3_113, a4_100, mstatus, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, dwArg54, dwArg5C, s3, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_482, out s1_483, out a3_484, out a4_485, out s3_486, out s5_487, out mstatus_488)
	return
l23022264:
l23022272_thunk_atomic_set_bit:
	word32 a0_476
	word32 a2_477
	word32 a3_478
	word32 a5_480
	word32 a4_479
	word32 s4_481
	atomic_set_bit(s1_104 + 0x42011A88<32>, 8<32>, a3_65, a4_60, mstatus, out a0_476, out a2_477, out a3_478, out a4_479, out a5_480, out s4_481)
	return
bt_smp_dhkey_ready_exit:


void bt_smp_recv(word32 ra, word32 a0, word32 a1, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_recv_entry:
l230222B8:
	word32 sp_169 = fp + 0xFFFFFFE0<32>
	branch CONVERT(Mem13[a1 + 12<i32>:uint16], uint16, word32) != 0<32> l230222E6
l230222E6:
	word32 a4_23
	word32 a0_21 = net_buf_simple_pull_mem(a1 + 8<i32>, 1<32>, out a4_23)
	word32 a2_333
	word32 a0_28 = atomic_test_bit(a0 + 156<i32>, 4<32>, out a2_333)
	word32 s0_159 = a0
	word32 a1_31 = CONVERT(Mem13[a0_21:byte], byte, word32)
	branch a0_28 == 0<32> l23022314
l23022314:
	word32 a3_110
	word32 a4_127
	word32 a1_101
	word32 ra_113
	word32 s1_114
	branch a1_31 >u 0xD<32> l2302232C
l2302231A:
	branch Mem13[(a1_31 << 3<u32>) + 0x23075730<32>:word32] != 0<32> l23022342
l23022342:
	word32 a0_41
	word32 a3_44
	word32 a1_388
	word32 a4_389
	word32 a5_390
	word32 s4_391
	word32 s1_47 = atomic_test_and_clear_bit(a1_31, a3, a4_23, mstatus, out a0_41, out a1_388, out a3_44, out a4_389, out a5_390, out s4_391)
	word32 a2_51 = CONVERT(Mem13[a0_21:byte], byte, word32)
	branch a0_41 != 0<32> l2302236C
l2302236C:
	word32 a5_55 = CONVERT(Mem13[s1_47 + (a2_51 << 3<u32>) + 4<i32>:byte], byte, word32)
	branch a5_55 == CONVERT(Mem13[a1 + 12<i32>:uint16], uint16, word32) l2302238E
l2302238E:
	word32 a0_67
	word32 t1_271
	word32 t5_272
	word32 t6_273
	word32 tp_274
	call a5_55 (retsize: 0;)
		uses: a0:a0,a1:a1,a3:a3_44,mstatus:mstatus,ra:ra,s0:a0,s1:Mem13[a5_55:word32],s2:a1,s3:a0_21,Stack +0028:dwArg08,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0098:dwArg78,Stack +00BC:dwArg9C,t1:t1_271,t5:t5_272,t6:t6_273,tp:tp_274
		defs: a0:a0_67,a3:a3_75,a4:a4_73,mstatus:mstatus_74,ra:ra_60,s0:s0_61,s1:s1_62,sp:sp_59,t1:t1_271,t5:t5_272,t6:t6_273,tp:tp_274
	a1_101 = a0_67
	branch a0_67 == 0<32> l230222D6
l2302239A:
l2302237E:
	word32 a0_415
	word32 a1_416
	word32 a2_417
	word32 a5_418
	word32 a7_419
	word32 s2_420
	word32 s3_421
	word32 s4_422
	word32 s5_423
	word32 s6_424
	word32 s7_425
	word32 s8_426
	word32 s9_427
	word32 s10_428
	word32 s11_429
	word32 t4_430
	ra_113 = printf(ra, 0x23075644<32>, a3_44, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_114, out a0_415, out a1_416, out a2_417, out a3_110, out a4_127, out a5_418, out a7_419, out s2_420, out s3_421, out s4_422, out s5_423, out s6_424, out s7_425, out s8_426, out s9_427, out s10_428, out s11_429, out t4_430)
	a1_101 = 0xA<32>
l23022350:
	word32 s3_118
	word32 a0_392
	word32 a1_393
	word32 a2_394
	word32 a4_395
	word32 a5_396
	word32 a7_397
	word32 s2_398
	word32 s4_399
	word32 s5_400
	word32 s6_401
	word32 s7_402
	word32 s8_403
	word32 s9_404
	word32 s10_405
	word32 s11_406
	word32 t4_407
	ra_113 = printf(ra, 0x23075624<32>, a3_44, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_114, out a0_392, out a1_393, out a2_394, out a3_110, out a4_395, out a5_396, out a7_397, out s2_398, out s3_118, out s4_399, out s5_400, out s6_401, out s7_402, out s8_403, out s9_404, out s10_405, out s11_406, out t4_407)
	a4_127 = CONVERT(Mem13[s3_118:byte], byte, word32)
	a1_101 = 8<32>
	branch a4_127 == 5<32> l230222D6
l2302236A:
l2302232C:
	word32 a0_372
	word32 a1_373
	word32 a2_374
	word32 a5_375
	word32 a7_376
	word32 s2_377
	word32 s3_378
	word32 s4_379
	word32 s5_380
	word32 s6_381
	word32 s7_382
	word32 s8_383
	word32 s9_384
	word32 s10_385
	word32 s11_386
	word32 t4_387
	ra_113 = printf(ra, 0x23075608<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_114, out a0_372, out a1_373, out a2_374, out a3_110, out a4_127, out a5_375, out a7_376, out s2_377, out s3_378, out s4_379, out s5_380, out s6_381, out s7_382, out s8_383, out s9_384, out s10_385, out s11_386, out t4_387)
	a1_101 = 7<32>
l2302233A:
	word32 s0_408
	word32 s1_409
	word32 a3_410
	word32 a4_411
	word32 s3_412
	word32 s5_413
	word32 mstatus_414
	smp_error(ra_113, s1_114, s0_159, a1_101, a3_110, a4_127, mstatus, Mem13[sp_169 + 4<i32>:word32], Mem13[sp_169 + 8<i32>:word32], Mem13[sp_169 + 16<i32>:word32], Mem13[sp_169 + 20<i32>:word32], Mem13[sp_169 + 24<i32>:word32], Mem13[sp_169 + 32<i32>:word32], Mem13[sp_169 + 36<i32>:word32], Mem13[sp_169 + 40<i32>:word32], Mem13[sp_169 + 52<i32>:word32], Mem13[sp_169 + 56<i32>:word32], Mem13[sp_169 + 72<i32>:word32], Mem13[sp_169 + 84<i32>:word32], Mem13[sp_169 + 92<i32>:word32], Mem13[sp_169 + 100<i32>:word32], Mem13[sp_169 + 120<i32>:word32], Mem13[sp_169 + 132<i32>:word32], Mem13[sp_169 + 136<i32>:word32], Mem13[sp_169 + 152<i32>:word32], Mem13[sp_169 + 168<i32>:word32], Mem13[sp_169 + 184<i32>:word32], Mem13[sp_169 + 200<i32>:word32], Mem13[sp_169 + 216<i32>:word32], Mem13[sp_169 + 232<i32>:word32], Mem13[sp_169 + 248<i32>:word32], Mem13[sp_169 + 264<i32>:word32], Mem13[sp_169 + 280<i32>:word32], Mem13[sp_169 + 296<i32>:word32], Mem13[sp_169 + 312<i32>:word32], out s0_408, out s1_409, out a3_410, out a4_411, out s3_412, out s5_413, out mstatus_414)
l23022306:
	word32 s1_353
	word32 a0_354
	word32 a1_355
	word32 a2_356
	word32 a3_357
	word32 a4_358
	word32 a5_359
	word32 a7_360
	word32 s2_361
	word32 s3_362
	word32 s4_363
	word32 s5_364
	word32 s6_365
	word32 s7_366
	word32 s8_367
	word32 s9_368
	word32 s10_369
	word32 s11_370
	word32 t4_371
	printf(ra, 0x230755D4<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_353, out a0_354, out a1_355, out a2_356, out a3_357, out a4_358, out a5_359, out a7_360, out s2_361, out s3_362, out s4_363, out s5_364, out s6_365, out s7_366, out s8_367, out s9_368, out s10_369, out s11_370, out t4_371)
l230222CA:
	word32 s5_345
	word32 s6_346
	word32 s7_347
	word32 s2_342
	word32 s3_343
	word32 s4_344
	word32 a4_339
	word32 a5_340
	word32 a7_341
	word32 a1_336
	word32 a2_337
	word32 a3_338
	word32 s1_334
	word32 a0_335
	word32 s8_348
	word32 s9_349
	word32 s10_350
	word32 s11_351
	word32 t4_352
	printf(ra, 0x230755B4<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_334, out a0_335, out a1_336, out a2_337, out a3_338, out a4_339, out a5_340, out a7_341, out s2_342, out s3_343, out s4_344, out s5_345, out s6_346, out s7_347, out s8_348, out s9_349, out s10_350, out s11_351, out t4_352)
l230222D6:
	return
bt_smp_recv_exit:


void bt_smp_encrypt_change(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s5, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_encrypt_change_entry:
l2302239C:
	word32 s2_19 = Mem13[a0:int32]
	word32 a4_29
	word32 a0_553
	word32 a2_555
	word32 a1_554
	word32 a5_556
	word32 s4_557
	word32 a3_106
	word32 s1_31 = atomic_and(a0, 0xFFFFFFFD<32>, a3, a4, mstatus, out a0_553, out a1_554, out a2_555, out a3_106, out a4_29, out a5_556, out s4_557)
	branch a1 != 0<32> l2302246C
l230223C0:
	branch CONVERT(Mem13[s2_19 + 11<i32>:byte], byte, word32) == 0<32> l2302246C
l230223C6:
	word32 a2_558
	branch atomic_test_bit(s1_31, 3<32>, out a2_558) != 0<32> l230223E2
l230223E2:
	word32 a2_559
	branch atomic_test_bit(s1_31, 5<32>, out a2_559) == 0<32> l23022414
l230223EC:
	branch (CONVERT(Mem13[a0 + 384<i32>:byte], byte, word32) & 8<32>) == 0<32> l23022404
l230223F4:
	branch (CONVERT(Mem13[a0 + 385<i32>:byte], byte, word32) & 8<32>) == 0<32> l23022404
l230223FC:
	word32 a2_564
	word32 a0_563
	word32 s4_567
	word32 a5_566
	word32 a4_565
	atomic_set_bit(a0, 0x10<32>, a3_106, a4_29, mstatus, out a0_563, out a2_564, out a3_106, out a4_565, out a5_566, out s4_567)
l23022404:
	Mem68[a0 + 384<i32>:word16] = SLICE(CONVERT(Mem13[a0 + 384<i32>:uint16], uint16, word32) & 0xFF0007F7<32>, word16, 0)
l23022414:
	word32 a5_71 = CONVERT(Mem70[a0 + 385<i32>:byte], byte, word32)
	word32 a1_72 = 6<32>
	word32 a4_105 = a5_71 & 1<i32>
	branch (a5_71 & 1<i32>) != 0<32> l2302242E
l23022420:
	a4_105 = a5_71 & 2<i32>
	a1_72 = 8<32>
	branch (a5_71 & 2<i32>) != 0<32> l2302242E
l23022428:
	branch (a5_71 & 4<32>) == 0<32> l23022436
l2302242C:
	a1_72 = 0xA<32>
l2302242E:
	word32 a0_568
	word32 a2_569
	word32 a5_570
	word32 s4_571
	atomic_set_bit(a0, a1_72, a3_106, a4_105, mstatus, out a0_568, out a2_569, out a3_106, out a4_105, out a5_570, out s4_571)
l23022436:
	word32 a3_110
	word32 a4_111
	word32 a0_572
	word32 s4_575
	word32 a5_574
	word32 a2_573
	word32 s1_113 = atomic_set_bit(a0, 2<32>, a3_106, a4_105, mstatus, out a0_572, out a2_573, out a3_110, out a4_111, out a5_574, out s4_575)
	word32 a5_123 = CONVERT(Mem70[s2_19 + 3<i32>:byte], byte, word32)
	branch a5_123 != 0<32> l2302244A
l23022444:
	a5_123 = CONVERT(Mem70[a0 + 385<i32>:byte], byte, word32)
	branch a5_123 != 0<32> l2302246C
l2302244A:
	word32 a0_154
	word32 s0_158
	word32 a3_165
	word32 a4_166
	word32 mstatus_169
	word32 s1_171
	word32 ra_170 = bt_smp_distribute_keys(ra, s1_113, a0, a3_110, a4_111, a5_123, a1, s5, mstatus, dwLoc20, dwLoc1C, s2, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_158, out s1_171, out a0_154, out a3_165, out a4_166, out mstatus_169)
	branch a0_154 != 0<32> l2302246C
l23022452:
	branch CONVERT(Mem70[s0_158 + 384<i32>:uint16], uint16, word32) != 0<32> l2302246C
l2302246C:
	return
l23022458:
l23022468_thunk_smp_pairing_complete:
	word32 a4_576
	word32 a5_577
	word32 s5_578
	smp_pairing_complete(ra_170, s0_158, s1_171, s0_158, 0<32>, a3_165, a4_166, mstatus_169, dwArg18, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_576, out a5_577, out s5_578)
	return
l230223D0:
l230223DE_thunk_smp_reset:
	word32 a4_560
	word32 a5_561
	word32 s5_562
	smp_reset(a0, s1_31, a0, a3_106, a4_29, mstatus, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_560, out a5_561, out s5_562)
	return
bt_smp_encrypt_change_exit:


word32 smp_send_pairing_confirm(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_confirm
//      bt_smp_auth_passkey_entry
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_send_pairing_confirm_entry:
l2302247A:
	word32 a0_154
	word32 a5_13 = CONVERT(Mem11[a0 + 160<i32>:byte], byte, word32)
	word32 a4_14 = 2<32>
	branch a5_13 >u 2<32> l23022494
l23022494:
	a4_14 = 3<32>
	branch a5_13 == 3<32> l23022490
l2302248E:
	branch a5_13 != 0<32> l230224A8
l230224A8:
	a3 = CONVERT(Mem11[a0 + 372<i32>:byte], byte, word32)
l23022490:
l230224BE:
	word32 a2_380
	word32 s2_382
	word32 a5_381
	word32 s5_384
	word32 s3_383
	word32 a0_46
	ra = smp_create_pdu.isra.7(ra, a0, a3, a4_14, a5_13, s5, mstatus, dwArg28, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1, out a0_46, out a2_380, out a3, out a4_14, out a5_381, out s2_382, out s3_383, out s5_384, out mstatus)
	a0_154 = 8<32>
	branch a0_46 == 0<32> l2302249C
l230224CE:
	word32 a1_385
	word32 a5_386
	word32 a0_78 = net_buf_simple_add(a0_46 + 8<i32>, 0x10<32>, a4_14, out a1_385, out a5_386)
	word32 a0_83 = Mem11[0x4200E188<32>:int32]
	word32 a1_88
	word32 a4_91
	word32 a5_92
	word32 s2_97
	word32 s1_96 = smp_f4(ra, a0_83, s1 + 239<i32>, s1 + 191<i32>, a0_78, out a1_88, out a4_91, out a5_92, out s2_97)
	branch a0_83 == 0<32> l230224FA
l230224FA:
	word32 a3_116
	word32 a4_117
	word32 s0_123
	word32 s1_387
	word32 a5_388
	word32 s2_389
	word32 s3_390
	word32 s5_391
	ra = smp_send.isra.9(ra, s1_96, s1_96, s2_97, 0<32>, a5_92, mstatus, s0, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_123, out s1_387, out a3_116, out a4_117, out a5_388, out s2_389, out s3_390, out s5_391, out mstatus)
	word32 a0_392
	word32 a1_393
	word32 a2_394
	word32 a5_395
	word32 s4_396
	s1 = atomic_and(s0_123, 0xFFFFFFFE<32>, a3_116, a4_117, mstatus, out a0_392, out a1_393, out a2_394, out a3, out a4_14, out a5_395, out s4_396)
	a0_154 = 0<32>
l230224F2:
	word32 s0_397
	word32 a0_398
	word32 a1_399
	word32 a5_400
	word32 s2_401
	word32 s3_402
	word32 s4_403
	word32 s5_404
	word32 s6_405
	word32 s8_406
	ra = net_buf_unref(ra, s1_96, s2_97, a1_88, a4_91, mstatus, s2, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_397, out s1, out a0_398, out a1_399, out a3, out a4_14, out a5_400, out s2_401, out s3_402, out s4_403, out s5_404, out s6_405, out s8_406, out mstatus)
l2302249A:
	a0_154 = 8<32>
l2302249C:
	0<32> = dwArg38
	s1Out = s1
	a0Out = a0_154
	a3Out = a3
	a4Out = a4_14
	mstatusOut = mstatus
	return ra
smp_send_pairing_confirm_exit:


void smp_ident_sent(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_ident_sent_entry:
l23022512:
	branch CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) != 1<32> l23022522
l23022522:
	return
l2302251C:
l2302251E_thunk_smp_check_complete.part.16:
	smp_check_complete.part.16(ra, s0, s1, a0, 1<32>, a3, mstatus, dwArg18, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118)
	return
smp_ident_sent_exit:


word32 smp_c1(word32 ra, word32 a0, word32 a1, word32 a2, word32 a6, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      legacy_send_pairing_confirm
//      smp_pairing_random
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a6:[0..31] ra:[0..31]
// LiveOut: a0 a1 a4 a5 ra s0 s1 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
smp_c1_entry:
l23022524:
	word32 a3_41
	word32 a2_270
	word32 a4_271
	word32 a5_272
	word32 a6_273
	word32 a7_274
	memcpy(fp + -62<i32>, a2, 7<32>, out a2_270, out a3_41, out a4_271, out a5_272, out a6_273, out a7_274)
	word32 a2_275
	word32 a3_276
	word32 a4_277
	word32 a5_278
	word32 a6_279
	word32 a7_280
	memcpy(fp + -55<i32>, a3_41, 7<32>, out a2_275, out a3_276, out a4_277, out a5_278, out a6_279, out a7_280)
	word32 a3_66 = 0<32>
l2302256C:
	Mem81[a6 + a3_66:byte] = SLICE(CONVERT(Mem74[a1 + a3_66:byte], byte, word32) ^ CONVERT(Mem74[(fp + -64<i32>) + a3_66:byte], byte, word32), byte, 0)
	a3_66 = a3_66 + 1<32>
	branch a3_66 != 0x10<32> l2302256C
l2302258C:
	word32 s1_98
	word32 s2_99
	word32 s5_111
	word32 s4_100
	word32 s3_110
	word32 s0_185
	word32 a4_180
	word32 a5_181
	word32 a0_176
	word32 a1_177
	word32 ra_109 = bt_encrypt_le(ra, a0, out s0_185, out s1_98, out a0_176, out a1_177, out a4_180, out a5_181, out s2_99, out s3_110, out s4_100, out s5_111)
	branch a0_176 != 0<32> l230225D2
l23022598:
	word32 a2_281
	word32 a3_282
	word32 a4_283
	word32 a5_284
	word32 a6_285
	word32 a7_286
	memcpy(fp + -48<i32>, s3_110 + 1<i32>, 6<32>, out a2_281, out a3_282, out a4_283, out a5_284, out a6_285, out a7_286)
	word32 a2_287
	word32 a3_288
	word32 a4_289
	word32 a5_290
	word32 a6_291
	word32 a7_292
	memcpy(fp + -42<i32>, s2_99 + 1<i32>, 6<32>, out a2_287, out a3_288, out a4_289, out a5_290, out a6_291, out a7_292)
	word32 t1_293
	word32 a0_294
	word32 a1_295
	word32 a2_296
	word32 a3_297
	word32 a4_298
	word32 a5_299
	word32 ra_154 = memset(ra_109, fp + -36<i32>, 0<32>, 4<32>, out t1_293, out a0_294, out a1_295, out a2_296, out a3_297, out a4_298, out a5_299)
	word32 a5_157 = fp + -48<i32>
	word32 a4_159 = s0_185
l230225C4:
	branch s0_185 + 16<i32> != a4_159 l230225E2
l230225E2:
	a4_159 = a4_159 + 1<32>
	Mem169[a4_159 + 4095<i32>:byte] = SLICE(CONVERT(Mem163[a4_159 + -1<i32>:byte], byte, word32) ^ CONVERT(Mem163[a5_157:byte], byte, word32), byte, 0)
	a5_157 = a5_157 + 1<32>
l230225C8:
	word32 s1_300
	word32 s2_301
	bt_encrypt_le(ra_154, s1_98, out s0_185, out s1_300, out a0_176, out a1_177, out a4_180, out a5_181, out s2_301, out s3_110, out s4_100, out s5_111)
l230225D2:
	s0Out = s0_185
	s1Out = dwLoc4C
	a0Out = a0_176
	a1Out = a1_177
	a4Out = a4_180
	a5Out = a5_181
	s3Out = s3_110
	s4Out = s4_100
	s5Out = s5_111
	return dwLoc08
smp_c1_exit:


word32 legacy_send_pairing_confirm(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      legacy_pairing_confirm
//      smp_pairing_rsp
//      bt_conn_auth_pairing_confirm
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
legacy_send_pairing_confirm_entry:
l230225F6:
	word32 a0_131
	word32 a0_21
	word32 a2_275
	word32 s2_276
	word32 s3_277
	word32 s5_278
	word32 a4_125
	word32 a3_124
	word32 a5_126
	word32 mstatus_141
	word32 s1_127
	word32 ra_142 = smp_create_pdu.isra.7(ra, a0, a3, a4, a5, s5, mstatus, dwArg28, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1_127, out a0_21, out a2_275, out a3_124, out a4_125, out a5_126, out s2_276, out s3_277, out s5_278, out mstatus_141)
	branch a0_21 == 0<32> l2302263E
l2302260E:
	word32 a0_62
	word32 a1_63
	word32 a4_66
	word32 a5_67
	word32 s0_72
	word32 s1_73
	word32 a1_279
	word32 a5_280
	word32 s3_281
	word32 s4_282
	word32 s5_283
	word32 ra_71 = smp_c1(ra_142, a0 + 223<i32>, a0 + 191<i32>, a0 + 161<i32>, net_buf_simple_add(a0_21 + 8<32>, 0x10<32>, a4_125, out a1_279, out a5_280), out s0_72, out s1_73, out a0_62, out a1_63, out a4_66, out a5_67, out s3_281, out s4_282, out s5_283)
	branch a0_62 == 0<32> l23022642
l23022642:
	word32 a3_93
	word32 a4_94
	word32 s0_100
	word32 s1_284
	word32 a5_285
	word32 s2_286
	word32 s3_287
	word32 s5_288
	ra_142 = smp_send.isra.9(ra_71, s1_73, s0_72, s1_73, 0<32>, a5_67, mstatus_141, s0, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_100, out s1_284, out a3_93, out a4_94, out a5_285, out s2_286, out s3_287, out s5_288, out mstatus_141)
	word32 a0_289
	word32 a1_290
	word32 a2_291
	word32 s4_292
	s1_127 = atomic_and(s0_100, 0xFFFFFFFE<32>, a3_93, a4_94, mstatus_141, out a0_289, out a1_290, out a2_291, out a3_124, out a4_125, out a5_126, out s4_292)
	a0_131 = 0<32>
l23022638:
	word32 s0_293
	word32 a0_294
	word32 a1_295
	word32 s2_296
	word32 s3_297
	word32 s4_298
	word32 s5_299
	word32 s6_300
	word32 s8_301
	ra_142 = net_buf_unref(ra_71, s1_73, s1_73, a1_63, a4_66, mstatus_141, s2, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_293, out s1_127, out a0_294, out a1_295, out a3_124, out a4_125, out a5_126, out s2_296, out s3_297, out s4_298, out s5_299, out s6_300, out s8_301, out mstatus_141)
l2302263E:
	a0_131 = 8<32>
l23022658:
	0<32> = dwArg38
	s1Out = s1_127
	a0Out = a0_131
	a3Out = a3_124
	a4Out = a4_125
	a5Out = a5_126
	mstatusOut = mstatus_141
	return ra_142
legacy_send_pairing_confirm_exit:


word32 legacy_pairing_confirm(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_confirm
//      bt_smp_auth_passkey_entry
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
legacy_pairing_confirm_entry:
l23022664:
	word32 a0_11 = Mem9[a5:word32]
	word32 a1_13 = 3<32>
	branch CONVERT(Mem9[a5 + 3<i32>:byte], byte, word32) == 0<32> l23022688
l23022678:
	word32 a2_224
	branch atomic_test_bit(a0_11 + 156<i32>, 9<32>, out a2_224) != 0<32> l2302269E
l2302269E:
	word32 a3_29
	word32 a4_30
	word32 a5_31
	word32 a0_225
	word32 a2_226
	word32 s4_227
	s1Out = atomic_set_bit(a0_11, 0<32>, a3, a4, mstatus, out a0_225, out a2_226, out a3_29, out a4_30, out a5_31, out s4_227)
	a0Out = 0<32>
	a3Out = a3_29
	a4Out = a4_30
	a5Out = a5_31
	mstatusOut = mstatus
	return ra
l23022686:
	a1_13 = 4<32>
l23022688:
	word32 a3_51
	word32 a4_52
	word32 a5_53
	word32 a0_221
	word32 a2_222
	word32 s4_223
	atomic_set_bit(a0_11, a1_13, a3, a4, mstatus, out a0_221, out a2_222, out a3_51, out a4_52, out a5_53, out s4_223)
l2302269A_thunk_legacy_send_pairing_confirm:
	word32 a0_70
	word32 a3_73
	word32 a4_74
	word32 a5_75
	word32 mstatus_78
	word32 s1_80
	word32 ra_79 = legacy_send_pairing_confirm(ra, s0, a0_11, a3_51, a4_52, a5_53, s2, s5, mstatus, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s1_80, out a0_70, out a3_73, out a4_74, out a5_75, out mstatus_78)
	s1Out = s1_80
	a0Out = a0_70
	a3Out = a3_73
	a4Out = a4_74
	a5Out = a5_75
	mstatusOut = mstatus_78
	return ra_79
legacy_pairing_confirm_exit:


void smp_pairing_confirm(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_pairing_confirm_entry:
l230226B2:
	word32 s2_13 = Mem11[a1 + 8<i32>:int32]
	word32 s4_367
	word32 a5_366
	word32 a4_365
	word32 a3_364
	word32 a2_363
	word32 a1_362
	word32 a0_361
	word32 s1_28 = atomic_and(a0, -1025<i32>, a3, a4, mstatus, out a0_361, out a1_362, out a2_363, out a3_364, out a4_365, out a5_366, out s4_367)
	word32 a4_35
	word32 a5_36
	word32 a3_40
	word32 a7_370
	word32 a6_369
	word32 a2_368
	memcpy(a0 + 175<i32>, s2_13, 0x10<32>, out a2_368, out a3_40, out a4_35, out a5_36, out a6_369, out a7_370)
	word32 s0_48 = Mem11[a5_36:word32]
	word32 a5_49 = CONVERT(Mem11[a5_36 + 3<i32>:byte], byte, word32)
	branch a5_49 != 0<32> l230226FE
l230226FE:
	word32 a2_371
	branch atomic_test_bit(s1_28, 5<32>, out a2_371) != 0<32> l23022718
l23022718:
	word32 a5_55 = CONVERT(Mem11[s0_48 + 160<i32>:byte], byte, word32)
	word32 a4_56 = 1<32>
	branch a5_55 == 1<32> l23022742
l23022742:
	word32 a2_381
	branch atomic_test_bit(s1_28, 9<32>, out a2_381) == 0<32> l23022728
l2302274C:
	word32 a0_392
	word32 a2_393
	word32 a3_394
	word32 a4_395
	word32 a5_396
	word32 s4_397
	atomic_set_bit(s0_48, 0<32>, a3_40, 1<32>, mstatus, out a0_392, out a2_393, out a3_394, out a4_395, out a5_396, out s4_397)
l23022722:
	a4_56 = 2<32>
	branch a5_55 != 2<32> l23022762
l23022762:
l23022756:
	0<32> = dwArg38
	return
l23022728:
	word32 a3_92
	word32 a0_382
	word32 a2_383
	word32 a4_384
	word32 a5_385
	word32 s4_386
	atomic_set_bit(s0_48, 4<32>, a3_40, a4_56, mstatus, out a0_382, out a2_383, out a3_92, out a4_384, out a5_385, out s4_386)
	0<32> = dwArg38
l2302273E_thunk_smp_send_pairing_confirm:
	word32 s1_387
	word32 a0_388
	word32 a3_389
	word32 a4_390
	word32 mstatus_391
	smp_send_pairing_confirm(ra, s0, s0_48, a3_92, s2_13, s5, mstatus, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s1_387, out a0_388, out a3_389, out a4_390, out mstatus_391)
	return
l23022708:
	0<32> = dwArg38
l23022714_thunk_legacy_pairing_confirm:
	word32 s1_375
	word32 a0_376
	word32 a3_377
	word32 a4_378
	word32 a5_379
	word32 mstatus_380
	legacy_pairing_confirm(ra, s0, a3_40, a4_35, a5_49, s2_13, s5, mstatus, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s1_375, out a0_376, out a3_377, out a4_378, out a5_379, out mstatus_380)
	return
l230226E4:
	word32 a2_373
	word32 a0_372
	word32 a3_178
	word32 a4_179
	word32 a5_180
	word32 s4_374
	atomic_set_bit(s0_48, 4<32>, a3_40, a4_35, mstatus, out a0_372, out a2_373, out a3_178, out a4_179, out a5_180, out s4_374)
	0<32> = dwArg38
l230226FA_thunk_smp_send_pairing_random:
	smp_send_pairing_random(ra, s0, s0_48, a3_178, a4_179, a5_180, s5, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138)
	return
smp_pairing_confirm_exit:


void smp_pairing_rsp(word32 ra, word32 s1, word32 a0, word32 s2, word32 s4, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
smp_pairing_rsp_entry:
l23022766:
	branch (CONVERT(Mem13[s1 + 3<i32>:byte], byte, word32) + 0xFFFFFFF9<32> & 255<i32>) <=u 9<32> l23022796
l23022796:
	word32 s1_105
	word32 s3_183 = Mem13[a0:int32]
	Mem25[a0 + 384<i32>:byte] = SLICE(CONVERT(Mem13[a0 + 384<i32>:byte], byte, word32) & CONVERT(Mem13[s1 + 4<i32>:byte], byte, word32), byte, 0)
	Mem31[a0 + 385<i32>:byte] = SLICE(CONVERT(Mem25[a0 + 385<i32>:byte], byte, word32) & CONVERT(Mem25[s1 + 5<i32>:byte], byte, word32), byte, 0)
	Mem33[a0 + 168<i32>:byte] = 2<8>
	word32 a7_1075
	word32 a6_1074
	word32 a5_1073
	word32 a2_1072
	word32 a4_103
	word32 a3_102
	memcpy(a0 + 169<i32>, s1, 6<32>, out a2_1072, out a3_102, out a4_103, out a5_1073, out a6_1074, out a7_1075)
	s1_105 = s1
	branch (CONVERT(Mem33[s1 + 2<i32>:byte], byte, word32) & 8<32>) == 0<32> l230227E4
l230227D2:
	s1_105 = s1
	branch (CONVERT(Mem33[a0 + 164<i32>:byte], byte, word32) & 8<32>) == 0<32> l230227E4
l230227DA:
	word32 a2_1077
	word32 a0_1076
	word32 a5_1078
	s1_105 = atomic_set_bit(a0, 5<32>, a3_102, a4_103, mstatus, out a0_1076, out a2_1077, out a3_102, out a4_103, out a5_1078, out s4)
l230227E4:
	branch (CONVERT(Mem33[s1_105 + 2<i32>:byte], byte, word32) & 32<i32>) == 0<32> l23022802
l230227EE:
	branch (CONVERT(Mem33[a0 + 164<i32>:byte], byte, word32) & 32<i32>) == 0<32> l23022802
l230227F8:
	word32 a5_1081
	word32 a2_1080
	word32 a0_1079
	s1_105 = atomic_set_bit(a0, 0x13<32>, a3_102, a4_103, mstatus, out a0_1079, out a2_1080, out a3_102, out a4_103, out a5_1081, out s4)
l23022802:
	branch (CONVERT(Mem33[s1_105 + 2<i32>:byte], byte, word32) & 1<32>) == 0<32> l2302281C
l2302280A:
	branch (CONVERT(Mem33[a0 + 164<i32>:byte], byte, word32) & 1<32>) == 0<32> l2302281C
l23022812:
	word32 a2_1084
	word32 a5_1085
	word32 a0_1083
	s1_105 = atomic_set_bit(a0, 0xC<32>, a3_102, a4_103, mstatus, out a0_1083, out a2_1084, out a3_102, out a4_103, out a5_1085, out s4)
l2302281C:
	word32 s2_128
	Mem129[a0 + 160<i32>:byte] = SLICE(get_pair_method(a0, CONVERT(Mem33[s1_105:byte], byte, word32), a3_102, a4_103, dwArg18, out s2_128), byte, 0)
	word32 a4_1082
	word32 a3_145
	branch update_keys_check(ra, a0, s2_128, s3_183, s4, mstatus, dwLoc20, dwLoc1C, s2, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out a3_145, out a4_1082) != 0<32> l23022836
l23022836:
	word32 a2_1086
	word32 a0_154 = atomic_test_bit(a0 + 156<i32>, 5<32>, out a2_1086)
	word32 a4_157 = CONVERT(Mem129[a0 + 160<i32>:byte], byte, word32)
	branch a0_154 != 0<32> l230228B4
l230228B4:
	a3_145 = CONVERT(Mem129[s3_183 + 10<i32>:byte], byte, word32)
	branch a3_145 != 4<32> l230228D8
l230228BE:
	branch a4_157 == 0<32> l23022832
l230228C0:
	word32 a3_161 = CONVERT(Mem129[a0 + 165<i32>:byte], byte, word32)
	word32 a5_162 = CONVERT(Mem129[a0 + 172<i32>:byte], byte, word32)
	branch a3_161 >=u a5_162 l230228CE
l230228CC:
	a5_162 = a3_161
l230228CE:
	a3_145 = 0x10<32>
	branch (a5_162 & 255<i32>) != 0x10<32> l23022784
l230228D8:
	Mem173[a0 + 384<i32>:word16] = SLICE(CONVERT(Mem129[a0 + 384<i32>:uint16], uint16, word32) & 1540<i32>, word16, 0)
	branch a4_157 != 0<32> l230228FE
l230228E6:
	word32 a2_1092
	branch atomic_test_bit(a0 + 156<i32>, 0xE<32>, out a2_1092) == 0<32> l230228FE
l230228F0:
	s3_183 = 0x4201A000<32>
	word32 a5_184 = Mem173[0x4201A4D4<32>:int32]
	branch a5_184 == 0<32> l230228FE
l230228FA:
	branch Mem173[a5_184 + 20<i32>:word32] != 0<32> l23022864
l230228FE:
	branch Mem173[0x4200E188<32>:int32] != 0<32> l23022914
l23022914:
	word32 a3_202
	word32 a4_203
	word32 s4_1096
	word32 a2_1094
	word32 a0_1093
	word32 a5_1095
	atomic_set_bit(a0, 0xC<32>, a3_145, a4_157, mstatus, out a0_1093, out a2_1094, out a3_202, out a4_203, out a5_1095, out s4_1096)
	word32 a3_215
	word32 a4_216
	word32 a5_217
	word32 a0_1097
	word32 a1_1098
	word32 s4_1100
	word32 a2_1099
	word32 s1_218 = atomic_and(a0, 0xFF0007FF<32>, a3_202, a4_203, mstatus, out a0_1097, out a1_1098, out a2_1099, out a3_215, out a4_216, out a5_217, out s4_1100)
l2302293A_thunk_sc_send_public_key:
	word32 s0_1107
	word32 a0_1109
	word32 a3_1110
	word32 s1_1108
	word32 a4_1111
	word32 s2_1112
	word32 s3_1113
	word32 s5_1114
	word32 mstatus_1115
	sc_send_public_key(ra, s1_218, a0, a3_215, a4_216, a5_217, a0 + 156<i32>, s3_183, s5, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_1107, out s1_1108, out a0_1109, out a3_1110, out a4_1111, out s2_1112, out s3_1113, out s5_1114, out mstatus_1115)
	return
l23022908:
	word32 a0_1101
	word32 s4_1106
	word32 a2_1102
	word32 a4_1104
	word32 a5_1105
	word32 a3_1103
	atomic_set_bit(a0, 6<32>, a3_145, a4_157, mstatus, out a0_1101, out a2_1102, out a3_1103, out a4_1104, out a5_1105, out s4_1106)
l2302284A:
	branch a4_157 != 0<32> l23022878
l2302284C:
	word32 a2_1087
	branch atomic_test_bit(a0 + 156<i32>, 0xE<32>, out a2_1087) == 0<32> l23022878
l23022856:
	word32 a5_294 = Mem129[0x4201A4D4<32>:int32]
	branch a5_294 == 0<32> l23022878
l23022860:
	branch Mem129[a5_294 + 20<i32>:word32] == 0<32> l23022878
l23022878:
	word32 a0_304
	word32 a3_307
	word32 a4_308
	word32 mstatus_312
	word32 s0_314
	word32 s2_318
	word32 s5_321
	word32 ra_313 = legacy_request_tk(ra, a4_157, a0 + 156<i32>, mstatus, s2, dwLoc08, dwArg24, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgA4, out s0_314, out a0_304, out a3_307, out a4_308, out s2_318, out s5_321, out mstatus_312)
	branch a0_304 != 0<32> l23022786
l23022884:
	word32 a2_1116
	branch atomic_test_bit(s2_318, 9<32>, out a2_1116) != 0<32> l230228AA
l230228AA:
	word32 a0_1117
	word32 a4_1120
	word32 a5_1121
	word32 s4_1122
	word32 a2_1118
	word32 a3_1119
	atomic_set_bit(s0_314, 0<32>, a3_307, a4_308, mstatus_312, out a0_1117, out a2_1118, out a3_1119, out a4_1120, out a5_1121, out s4_1122)
l2302288E:
	word32 a3_353
	word32 a4_354
	word32 a5_355
	word32 a2_1124
	word32 a0_1123
	word32 s4_1125
	atomic_set_bit(s0_314, 3<32>, a3_307, a4_308, mstatus_312, out a0_1123, out a2_1124, out a3_353, out a4_354, out a5_355, out s4_1125)
l230228A6_thunk_legacy_send_pairing_confirm:
	word32 a5_1130
	word32 a4_1129
	word32 a3_1128
	word32 a0_1127
	word32 s1_1126
	word32 mstatus_1131
	legacy_send_pairing_confirm(ra_313, s0_314, s0_314, a3_353, a4_354, a5_355, s2_318, s5_321, mstatus_312, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s1_1126, out a0_1127, out a3_1128, out a4_1129, out a5_1130, out mstatus_1131)
	return
l23022864:
	word32 a0_404
	word32 s4_411
	word32 a4_1090
	word32 a5_1091
	word32 a2_1088
	word32 a3_1089
	word32 s1_410 = atomic_set_bit(a0, 9<32>, a3_145, a4_157, mstatus, out a0_404, out a2_1088, out a3_1089, out a4_1090, out a5_1091, out s4_411)
	word32 a5_418 = Mem415[Mem415[0x4201A4D4<32>:int32] + 20<i32>:word32]
	word32 a3_437
	word32 a7_438
	word32 t0_439
	word32 t1_440
	word32 t4_441
	word32 t5_442
	word32 t6_443
	word32 tp_445
	word32 s10_447
	word32 s11_448
	word32 s6_449
	word32 s7_450
	word32 s9_451
	word32 gp_452
	word32 t2_453
	call a5_418 (retsize: 0;)
		uses: a0:a0_404,a3:a3_437,a5:a5_418,a7:a7_438,gp:gp_452,mstatus:mstatus,ra:ra,s0:Mem415[a0_404:word32],s1:s1_410,s10:s10_447,s11:s11_448,s2:a0 + 156<i32>,s3:0x4201A000<32>,s4:s4_411,s5:s5,s6:s6_449,s7:s7_450,s9:s9_451,Stack +0000:dwLoc20,Stack +0004:dwLoc1C,Stack +0014:dwLoc0C,Stack +0018:dwLoc08,Stack +001C:dwLoc04,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0030:dwArg10,Stack +0034:dwArg14,Stack +0038:dwArg18,Stack +003C:dwArg1C,Stack +0040:dwArg20,Stack +0044:dwArg24,Stack +0048:dwArg28,Stack +0050:dwArg30,Stack +0054:dwArg34,Stack +0058:dwArg38,Stack +0064:dwArg44,Stack +0068:dwArg48,Stack +006C:dwArg4C,Stack +0074:dwArg54,Stack +0078:dwArg58,Stack +007C:dwArg5C,Stack +0094:dwArg74,Stack +0098:dwArg78,Stack +009C:dwArg7C,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +00B4:dwArg94,Stack +00B8:dwArg98,Stack +00C4:dwArgA4,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00E8:dwArgC8,Stack +00F8:dwArgD8,Stack +0108:dwArgE8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,Stack +0138:dwArg0118,Stack +0148:dwArg0128,Stack +0158:dwArg0138,Stack +0168:dwArg0148,Stack +0188:dwArg0168,t0:t0_439,t1:t1_440,t2:t2_453,t4:t4_441,t5:t5_442,t6:t6_443,tp:tp_445
		defs: a3:a3_437,a7:a7_438,gp:gp_452,s10:s10_447,s11:s11_448,s6:s6_449,s7:s7_450,s9:s9_451,t0:t0_439,t1:t1_440,t2:t2_453,t4:t4_441,t5:t5_442,t6:t6_443,tp:tp_445
l23022832:
l23022784:
l23022786:
	return
smp_pairing_rsp_exit:


void smp_ident_addr_info(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_ident_addr_info_entry:
l2302293E:
	word32 s2_17 = Mem15[a1 + 8<i32>:int32]
	word32 s1_178 = a0
	branch CONVERT(Mem15[s2_17:byte], byte, word32) == 0<32> l230229A6
l2302295A:
	branch (CONVERT(Mem15[s2_17 + 6<i32>:byte], byte, word32) & 192<i32>) == 192<i32> l230229A6
l230229A6:
	word32 a2_819
	branch atomic_test_bit(a0 + 156<i32>, 0xC<32>, out a2_819) == 0<32> l23022A4A
l230229B2:
	word32 a0_42
	word32 s4_52
	word32 mstatus_57
	word32 s5_861
	word32 s1_859
	word32 s3_860
	word32 s2_147
	word32 a3_129
	word32 ra_144 = bt_keys_get_type(ra, s0, 2<32>, CONVERT(Mem15[s0 + 8<i32>:byte], byte, word32), s0 + 112<i32>, s2_17, mstatus, dwLoc20, s4, s2, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1_859, out a0_42, out a3_129, out s2_147, out s3_860, out s4_52, out s5_861, out mstatus_57)
	word32 s3_148 = a0_42
	branch a0_42 != 0<32> l230229DE
l230229DE:
	word32 a1_72 = s0 + 119<i32>
	branch CONVERT(Mem15[s0 + 3<i32>:byte], byte, word32) != 0<32> l230229EC
l230229E8:
	a1_72 = s0 + 126<i32>
l230229EC:
	branch CONVERT(Mem15[a1_72:byte], byte, word32) != 1<32> l23022A44
l230229F6:
	branch (CONVERT(Mem15[a1_72 + 6<i32>:byte], byte, word32) & 192<i32>) != 64<i32> l23022A44
l23022A06:
	word32 a7_890
	word32 a5_888
	word32 a6_889
	word32 a2_886
	word32 a4_887
	memcpy(a0_42 + 54<i32>, a1_72 + 1<32>, 6<32>, out a2_886, out a3_129, out a4_887, out a5_888, out a6_889, out a7_890)
	branch CONVERT(Mem15[s0 + 112<i32>:byte], byte, word32) == 0<32> l23022A44
l23022A18:
	branch (CONVERT(Mem15[s0 + 118<i32>:byte], byte, word32) & 192<i32>) == 192<i32> l23022A44
l23022A28:
	word32 a6_895
	word32 a7_896
	word32 a4_893
	word32 a5_894
	word32 a2_891
	word32 a3_892
	memcpy(a0_42 + 1<i32>, s2_147, 7<32>, out a2_891, out a3_892, out a4_893, out a5_894, out a6_895, out a7_896)
	word32 a5_899
	word32 a6_900
	word32 a7_901
	word32 a2_897
	word32 a4_898
	memcpy(s4_52, s2_147, 7<32>, out a2_897, out a3_129, out a4_898, out a5_899, out a6_900, out a7_901)
	ra_144 = bt_conn_identity_resolved(ra_144, s0, out s0, out s2_147, out s3_148)
l23022A44:
	ra = bt_id_add(ra_144, s0, a3_129, s2_147, s3_148, mstatus_57, dwLoc20, s4, s2, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg48, dwArg58, s1, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0, out s1_178, out a3, out s3, out s5, out mstatus)
l23022A4A:
	word32 a5_195 = CONVERT(Mem15[s1_178 + 385<i32>:byte], byte, word32)
	Mem197[s1_178 + 385<i32>:byte] = SLICE(a5_195 & -3<i32>, byte, 0)
	word32 a4_196 = a5_195 & -3<i32>
	branch (a5_195 & 4<32>) == 0<32> l23022A64
l23022A5A:
	word32 a5_884
	word32 s4_885
	word32 a0_882
	word32 a2_883
	s1_178 = atomic_set_bit(s0, 0xA<32>, a3, a5_195 & -3<i32>, mstatus, out a0_882, out a2_883, out a3, out a4_196, out a5_884, out s4_885)
l23022A64:
	branch CONVERT(Mem197[s0 + 3<i32>:byte], byte, word32) == 0<32> l23022A74
l23022A74:
	word32 a5_220 = CONVERT(Mem197[s1_178 + 385<i32>:byte], byte, word32)
	branch a5_220 != 0<32> l23022A6A
l23022A7A:
	word32 a0_236
	ra = bt_smp_distribute_keys(ra, s1_178, s1_178, a3, a4_196, a5_220, s3, s5, mstatus, dwLoc20, s4, s2, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0, out s1_178, out a0_236, out a3, out a4_196, out mstatus)
	branch a0_236 == 0<32> l23022A6A
l23022A82:
l23022A6A:
	branch CONVERT(Mem197[s1_178 + 384<i32>:uint16], uint16, word32) == 0<32> l23022A84
l23022A84:
	word32 s5_904
	word32 a4_902
	word32 a5_903
	smp_pairing_complete(ra, s0, s1_178, s1_178, 0<32>, a3, a4_196, mstatus, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArgB8, dwArgF8, out a4_902, out a5_903, out s5_904)
l23022A70:
l230229C6:
	word32 a3_303
	word32 s11_880
	word32 t4_881
	word32 s9_878
	word32 s10_879
	word32 s7_876
	word32 s8_877
	word32 s5_874
	word32 s6_875
	word32 s3_872
	word32 s4_873
	word32 a7_870
	word32 s2_871
	word32 a4_868
	word32 a5_869
	word32 a2_866
	word32 a3_867
	word32 a0_864
	word32 a1_865
	word32 s0_862
	word32 s1_863
	printf(bt_addr_le_str_real(ra_144, s4_52, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_862, out a3_303), 0x23075884<32>, a3_303, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_863, out a0_864, out a1_865, out a2_866, out a3_867, out a4_868, out a5_869, out a7_870, out s2_871, out s3_872, out s4_873, out s5_874, out s6_875, out s7_876, out s8_877, out s9_878, out s10_879, out s11_880, out t4_881)
l2302296A:
	word32 a3_355
	word32 s0_361
	word32 a3_406
	word32 s10_856
	word32 s11_857
	word32 t4_858
	word32 s7_853
	word32 s8_854
	word32 s9_855
	word32 s5_851
	word32 s6_852
	word32 s4_850
	word32 s1_820
	word32 a0_821
	word32 a1_822
	word32 a3_824
	word32 a2_823
	word32 a5_826
	word32 a4_825
	word32 s2_828
	word32 a7_827
	word32 s4_830
	word32 s3_829
	word32 s7_833
	word32 s5_831
	word32 s6_832
	word32 s10_836
	word32 s9_835
	word32 s8_834
	word32 s11_837
	word32 t4_838
	word32 s0_839
	word32 a0_841
	word32 a1_842
	word32 s1_840
	word32 a4_845
	word32 a3_844
	word32 a2_843
	word32 a5_846
	word32 s2_848
	word32 s3_849
	word32 a7_847
	printf(bt_addr_le_str_real(printf(bt_addr_le_str_real(ra, s2_17, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_361, out a3_355), 0x23075860<32>, a3_355, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_820, out a0_821, out a1_822, out a2_823, out a3_824, out a4_825, out a5_826, out a7_827, out s2_828, out s3_829, out s4_830, out s5_831, out s6_832, out s7_833, out s8_834, out s9_835, out s10_836, out s11_837, out t4_838), s0_361 + 112<i32>, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_839, out a3_406), 0x23075878<32>, a3_406, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_840, out a0_841, out a1_842, out a2_843, out a3_844, out a4_845, out a5_846, out a7_847, out s2_848, out s3_849, out s4_850, out s5_851, out s6_852, out s7_853, out s8_854, out s9_855, out s10_856, out s11_857, out t4_858)
l23022996:
	return
smp_ident_addr_info_exit:


word32 smp_public_key_slave.part.15(word32 ra, word32 s0, word32 a0, ptr32 & a0Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_public_key
//      bt_smp_pkey_ready
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 a4 ra
// Trashed: a0 a4 a5 ra s0
// Preserved: sp
smp_public_key_slave.part.15_entry:
l23022A8E:
	word32 a5_5 = CONVERT(Mem0[a0 + 160<i32>:byte], byte, word32)
	branch a5_5 >u 5<32> l23022B2E
l23022B2E:
	a0Out = 8<32>
	a4Out = 5<32>
	return ra
l23022A98:
	word32 a5_13 = Mem0[(a5_5 << 2<i32>) + 0x2307544C<32>:word32]
	word32 a0_22
	word32 a4_23
	word32 ra_25
	call a5_13 (retsize: 0;)
		uses: a0:a0,a4:0x2307544C<32>,a5:a5_13,ra:ra,s0:a0,Stack +0004:s0,Stack +0084:ra
		defs: a0:a0_22,a4:a4_23,ra:ra_25
	a0Out = a0_22
	a4Out = a4_23
	return ra_25
smp_public_key_slave.part.15_exit:


void smp_public_key(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_public_key_entry:
l23022B34:
	word32 s1_106
	word32 a2_419
	word32 a3_420
	word32 a4_421
	word32 a5_422
	word32 a6_423
	word32 a7_424
	memcpy(a0 + 239<i32>, s1, 32<i32>, out a2_419, out a3_420, out a4_421, out a5_422, out a6_423, out a7_424)
	word32 a2_425
	word32 a3_426
	word32 a4_427
	word32 a5_428
	word32 a6_429
	word32 a7_430
	memcpy(a0 + 271<i32>, s1 + 32<i32>, 32<i32>, out a2_425, out a3_426, out a4_427, out a5_428, out a6_429, out a7_430)
	word32 s2_128 = a0 + 239<i32>
	word32 a1_431
	word32 a2_432
	word32 a5_108
	word32 a4_110
	word32 a3_177
	word32 a0_112 = memcmp(a0 + 239<i32>, 0x23075800<32>, 64<i32>, out a1_431, out a2_432, out a3_177, out a4_110, out a5_108)
	s1_106 = s1
	branch a0_112 == 0<32> l23022B8E
l23022B8E:
	word32 s4_68
	word32 a2_433
	word32 a5_434
	s1_106 = atomic_set_bit(a0, 0xD<32>, a3_177, a4_110, mstatus, out a0_112, out a2_433, out a3_177, out a4_110, out a5_434, out s4_68)
	word32 s0_71 = Mem11[s1_106:word32]
	branch Mem11[s1_106 + 156<i32>:int32] != 0<32> l23022BB0
l23022BA0:
	word32 s0_448
	word32 a5_449
	word32 s4_450
	ra = bt_keys_get_addr(ra, s0_71, CONVERT(Mem11[s1_106 + 8<i32>:byte], byte, word32), s1_106 + 112<i32>, a0 + 239<i32>, s3, s4_68, mstatus, dwLoc20, dwLoc1C, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_448, out s1_106, out a0_112, out a3_177, out a4_110, out a5_449, out s2_128, out s3, out s4_450, out s5, out mstatus)
	Mem105[s1_106 + 156<i32>:word32] = a0_112
l23022BB0:
	a5_108 = Mem107[s1_106 + 156<i32>:int32]
	branch a5_108 == 0<32> l23022B76
l23022BB6:
	word32 a4_109 = CONVERT(Mem107[a5_108 + 10<i32>:uint16], uint16, word32)
	a4_110 = a4_109 & 36<i32>
	branch (a4_109 & 36<i32>) == 0<32> l23022B76
l23022BC0:
	word32 a5_111 = CONVERT(Mem107[a5_108 + 9<i32>:byte], byte, word32)
	a0_112 = 3<32>
	a5_108 = a5_111 & 2<32>
	branch (a5_111 & 2<32>) == 0<32> l23022B76
l23022B76:
	word32 s0_116 = Mem115[a5_108:word32]
	branch CONVERT(Mem115[a5_108 + 3<i32>:byte], byte, word32) == 0<32> l23022BD6
l23022BD6:
	word32 a5_118 = CONVERT(Mem115[s0_116 + 160<i32>:byte], byte, word32)
	branch a5_118 >u 5<32> l23022C5A
l23022C5A:
l23022BE0:
	word32 a5_125 = Mem115[(a5_118 << 2<i32>) + 0x23075464<32>:word32]
	word32 tp_162
	word32 s10_163
	word32 s11_164
	word32 s5_165
	word32 s6_166
	word32 s7_167
	word32 s9_168
	call a5_125 (retsize: 0;)
		uses: a0:a0_131,a4:0x23075464<32>,a5:a5_125,mstatus:mstatus_133,ra:ra_126,s0:s0_116,s1:s1_130,s10:s10_163,s11:s11_164,s2:s2_128,s3:s3_135,s5:s5_165,s6:s6_166,s7:s7_167,s9:s9_168,Stack +0000:dwLoc20,Stack +0004:dwLoc1C,Stack +0010:dwLoc10,Stack +0014:dwLoc0C,Stack +0018:dwLoc08,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0028:dwArg08,Stack +002C:dwArg0C,Stack +0034:dwArg14,Stack +0044:dwArg24,Stack +0048:dwArg28,Stack +004C:dwArg2C,Stack +0058:dwArg38,Stack +005C:dwArg3C,Stack +0068:dwArg48,Stack +0074:dwArg54,Stack +0078:dwArg58,Stack +0098:dwArg78,Stack +00A8:dwArg88,Stack +00B8:dwArg98,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00E8:dwArgC8,Stack +00F8:dwArgD8,Stack +0108:dwArgE8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,tp:tp_162
		defs: s10:s10_163,s11:s11_164,s5:s5_165,s6:s6_166,s7:s7_167,s9:s9_168,tp:tp_162
	return
l23022B7E:
	word32 a5_170 = Mem115[0x4200E188<32>:int32]
	branch a5_170 != 0<32> l23022CA0
l23022CA0:
	word32 a0_179
	word32 s0_207
	word32 s1_435
	word32 a3_436
	word32 a4_437
	word32 s2_438
	word32 s3_439
	word32 s5_440
	word32 mstatus_441
	word32 ra_188 = sc_send_public_key(ra, s1_106, s0_116, a3_177, a4_110, a5_170, s2_128, s3, s5, mstatus, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg54, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_207, out s1_435, out a0_179, out a3_436, out a4_437, out s2_438, out s3_439, out s5_440, out mstatus_441)
	branch a0_179 != 0<32> l23022BCA
l23022CAA:
	word32 a0_451
	word32 a4_452
	smp_public_key_slave.part.15(ra_188, s0_207, s0_207, out a0_451, out a4_452)
l23022B8A:
l23022C0C:
	word32 a0_442
	word32 a2_443
	word32 a3_444
	word32 a4_445
	word32 a5_446
	word32 s4_447
	atomic_set_bit(s0_116, 6<32>, a3_177, a4_110, mstatus, out a0_442, out a2_443, out a3_444, out a4_445, out a5_446, out s4_447)
l23022BCA:
	return
smp_public_key_exit:


void bt_smp_pkey_ready(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg5C, word32 dwArg64, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_pkey_ready_entry:
l23022CB2:
	Mem5[0x4200E188<32>:word32] = a0
	branch a0 != 0<32> l23022CC8
l23022CC8:
	word32 a5_26
	word32 s0_29
	word32 s11_736
	word32 s9_734
	word32 s10_735
	word32 s6_732
	word32 s7_733
	word32 s2_730
	word32 s4_731
	word32 a1_728
	word32 a2_729
	word32 s1_726
	word32 a0_727
	word32 s3_106
	word32 s5_108
	word32 a4_131
	word32 a3_130
	word32 ra_100 = k_sem_give(ra, 0x4201A458<32>, a3, a4, 0x4200E000<32>, mstatus, dwArg04, dwArg08, dwArg50, dwArg54, dwArg78, dwArg84, dwArg9C, dwArgF8, dwArg0138, dwArg0178, out s0_29, out s1_726, out a0_727, out a1_728, out a2_729, out a3_130, out a4_131, out a5_26, out s2_730, out s3_106, out s4_731, out s5_108, out s6_732, out s7_733, out s9_734, out s10_735, out s11_736)
	word32 s1_133 = s0_29 + -1556<i32>
	word32 a2_737
	branch atomic_test_bit(s0_29 + -1400<i32>, 6<32>, out a2_737) == 0<32> l23022D14
l23022CF8:
	word32 s1_57 = Mem17[a5_26:word32]
	word32 a5_58 = CONVERT(Mem17[a5_26 + 3<i32>:byte], byte, word32)
	branch a5_58 == 0<32> l23022D66
l23022D66:
	word32 a0_60
	word32 s1_70
	word32 s2_758
	word32 s0_101
	word32 a4_125
	word32 a3_126
	ra_100 = sc_send_public_key(ra_100, s1_57, s0_29 + -1556<i32>, a3_130, a4_131, a5_58, s0_29, s3_106, s5_108, mstatus, s2, s0, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_101, out s1_70, out a0_60, out a3_126, out a4_125, out s2_758, out s3_106, out s5_108, out mstatus)
	branch a0_60 != 0<32> l23022D7E
l23022D7E:
	word32 s1_769
	ra_100 = smp_error(ra_100, s1_70, s0_101 + -1556<i32>, a0_60, a3_126, a4_125, mstatus, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg38, dwArg44, dwArg4C, dwArg54, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_101, out s1_769, out a3_126, out a4_125, out s3_106, out s5_108, out mstatus)
l23022D72:
	word32 a0_770
	word32 a2_771
	word32 a5_772
	word32 s4_773
	s1_133 = atomic_set_bit(s0_101, 0xC<32>, a3_126, a4_125, mstatus, out a0_770, out a2_771, out a3_130, out a4_131, out a5_772, out s4_773)
l23022D00:
	word32 s2_151
	word32 s0_166
	word32 a0_138
	ra_100 = sc_send_public_key(ra_100, s1_57, s0_29 + -1556<i32>, a3_130, a4_131, a5_58, s0_29, s3_106, s5_108, mstatus, s2, s0, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_166, out s1_133, out a0_138, out a3_130, out a4_131, out s2_151, out s3_106, out s5_108, out mstatus)
	branch a0_138 == 0<32> l23022D5A
l23022D5A:
	ra_100 = smp_public_key_slave.part.15(ra_100, s0_166, s0_166 + -1556<i32>, out a0_138, out a4_131)
	branch a0_138 == 0<32> l23022D14
l23022D64:
l23022D0A:
	word32 s0_759
	ra_100 = smp_error(ra_100, s1_133, s2_151 + -1556<i32>, a0_138, a3_130, a4_131, mstatus, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg38, dwArg44, dwArg4C, dwArg54, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_759, out s1_133, out a3_130, out a4_131, out s3_106, out s5_108, out mstatus)
l23022D14:
	word32 a2_757
	branch atomic_test_bit(s1_133 + 580<i32>, 6<32>, out a2_757) == 0<32> l23022DAA
l23022D20:
	word32 a5_224 = CONVERT(Mem17[Mem17[s1_133 + 424<i32>:int32] + 3<i32>:byte], byte, word32)
	branch a5_224 != 0<32> l23022D88
l23022D88:
	word32 a3_240
	word32 mstatus_245
	word32 s1_247
	word32 s2_250
	word32 s0_265
	word32 s5_761
	word32 s3_760
	word32 a0_237
	word32 a4_241
	word32 ra_246 = sc_send_public_key(ra_100, s1_133, 0x42011B94<32>, a3_130, a4_131, a5_224, 0x42011B94<32>, s3_106, s5_108, mstatus, s2, s0, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_265, out s1_247, out a0_237, out a3_240, out a4_241, out s2_250, out s3_760, out s5_761, out mstatus_245)
	branch a0_237 != 0<32> l23022D98
l23022D8E:
	ra_246 = smp_public_key_slave.part.15(ra_246, s0_265, s0_265 + -1132<i32>, out a0_237, out a4_241)
	branch a0_237 == 0<32> l23022DAA
l23022DAA:
	0<32> = dwArg38
	return
l23022D98:
	0<32> = dwArg38
l23022DA6_thunk_smp_error:
	word32 s0_774
	word32 s1_775
	word32 a3_776
	word32 a4_777
	word32 s3_778
	word32 s5_779
	word32 mstatus_780
	smp_error(ra_246, s1_247, s2_250, a0_237, a3_240, a4_241, mstatus_245, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, dwArg54, dwArg5C, dwArg64, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_774, out s1_775, out a3_776, out a4_777, out s3_778, out s5_779, out mstatus_780)
	return
l23022D36:
	word32 a0_322
	word32 s1_332
	word32 s0_350
	word32 s5_764
	word32 s3_763
	word32 s2_762
	word32 mstatus_330
	word32 a4_326
	word32 a3_325
	word32 ra_331 = sc_send_public_key(ra_100, s1_133, 0x42011B94<32>, a3_130, a4_131, a5_224, 0x42011B94<32>, s3_106, s5_108, mstatus, s2, s0, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_350, out s1_332, out a0_322, out a3_325, out a4_326, out s2_762, out s3_763, out s5_764, out mstatus_330)
	branch a0_322 == 0<32> l23022D46
l23022D3E:
	word32 s3_767
	word32 s1_766
	word32 s0_765
	word32 s5_768
	smp_error(ra_331, s1_332, s0_350 + -1132<i32>, a0_322, a3_325, a4_326, mstatus_330, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg38, dwArg44, dwArg4C, dwArg54, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_765, out s1_766, out a3_325, out a4_326, out s3_767, out s5_768, out mstatus_330)
l23022D46:
	0<32> = dwArg38
l23022D56_thunk_atomic_set_bit:
	word32 a0_781
	word32 a2_782
	word32 a3_783
	word32 a4_784
	word32 a5_785
	word32 s4_786
	atomic_set_bit(s0, 0xC<32>, a3_325, a4_326, mstatus_330, out a0_781, out a2_782, out a3_783, out a4_784, out a5_785, out s4_786)
	return
l23022CBC:
l23022CC4_thunk_printf:
	word32 t4_756
	word32 s11_755
	word32 s10_754
	word32 s9_753
	word32 s8_752
	word32 s7_751
	word32 s6_750
	word32 s5_749
	word32 s4_748
	word32 s3_747
	word32 s2_746
	word32 a7_745
	word32 a5_744
	word32 a4_743
	word32 a3_742
	word32 a2_741
	word32 a1_740
	word32 s1_738
	word32 a0_739
	printf(ra, 0x23075598<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_738, out a0_739, out a1_740, out a2_741, out a3_742, out a4_743, out a5_744, out a7_745, out s2_746, out s3_747, out s4_748, out s5_749, out s6_750, out s7_751, out s8_752, out s9_753, out s10_754, out s11_755, out t4_756)
	return
bt_smp_pkey_ready_exit:


void smp_pairing_random(word32 ra, word32 s1, word32 a0, word32 a1, word32 s4, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF0, word32 dwArgF4, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
smp_pairing_random_entry:
l23022DB6:
	word32 a2_661
	word32 a3_662
	word32 a4_663
	word32 a5_664
	word32 a6_665
	word32 a7_666
	memcpy(a0 + 207<i32>, Mem19[a1 + 8<i32>:word32], 0x10<32>, out a2_661, out a3_662, out a4_663, out a5_664, out a6_665, out a7_666)
	word32 a2_667
	word32 a0_43 = atomic_test_bit(a0 + 156<i32>, 5<32>, out a2_667)
	word32 s4_46 = Mem19[a0:int32]
	branch a0_43 != 0<32> l23022EE4
l23022EE4:
	branch CONVERT(Mem19[s4_46 + 3<i32>:byte], byte, word32) != 0<32> l23022F9A
l23022F9A:
	word32 a5_48 = CONVERT(Mem19[a0 + 160<i32>:byte], byte, word32)
	branch a5_48 >u 5<32> l23022E0E
l23022FA4:
	word32 a5_54 = Mem19[(a5_48 << 2<i32>) + 0x23075494<32>:word32]
	word32 t2_469
	word32 gp_468
	word32 s10_471
	word32 s11_472
	word32 s7_473
	word32 s9_474
	call a5_54 (retsize: 0;)
		uses: a0:a0_43,a1:5<32>,a4:0x23075494<32>,a5:a5_54,gp:gp_468,mstatus:mstatus,ra:ra,s0:a0,s1:s1,s10:s10_471,s11:s11_472,s2:a0 + 156<i32>,s3:a0 + 207<i32>,s4:s4_46,s5:s5,s6:s6,s7:s7_473,s9:s9_474,Stack +0008:dwLoc38,Stack +0020:dwLoc20,Stack +0024:dwLoc1C,Stack +0028:dwLoc18,Stack +0030:dwLoc10,Stack +0034:dwLoc0C,Stack +0038:dwLoc08,Stack +0040:dwArg00,Stack +0044:dwArg04,Stack +0048:dwArg08,Stack +0054:dwArg14,Stack +0058:dwArg18,Stack +005C:dwArg1C,Stack +0068:dwArg28,Stack +006C:dwArg2C,Stack +0070:dwArg30,Stack +0074:dwArg34,Stack +0078:dwArg38,Stack +007C:dwArg3C,Stack +0084:dwArg44,Stack +0088:dwArg48,Stack +008C:dwArg4C,Stack +00A8:dwArg68,Stack +00B8:dwArg78,Stack +00BC:dwArg7C,Stack +00C8:dwArg88,Stack +00D8:dwArg98,Stack +00E8:dwArgA8,Stack +00F8:dwArgB8,Stack +0108:dwArgC8,Stack +0114:dwArgD4,Stack +0118:dwArgD8,Stack +0128:dwArgE8,Stack +0130:dwArgF0,Stack +0134:dwArgF4,Stack +0138:dwArgF8,Stack +0148:dwArg0108,Stack +0158:dwArg0118,Stack +0178:dwArg0138,Stack +0198:dwArg0158,Stack +01B8:dwArg0178,Stack +01D8:dwArg0198,t2:t2_469
		defs: gp:gp_468,s10:s10_471,s11:s11_472,s7:s7_473,s9:s9_474,t2:t2_469
	return
l23022EEA:
	word32 a0_81 = sc_smp_check_confirm(a0)
	branch a0_81 != 0<32> l23022E10
l23022EF6:
	word32 a5_85 = CONVERT(Mem19[a0 + 160<i32>:byte], byte, word32)
	branch a5_85 >u 5<32> l23022E0E
l23022F00:
	word32 a5_91 = Mem19[(a5_85 << 2<i32>) + 0x2307547C<32>:word32]
	word32 gp_475
	word32 t2_476
	word32 s10_478
	word32 s11_479
	word32 s7_480
	word32 s9_481
	call a5_91 (retsize: 0;)
		uses: a0:a0_81,a1:5<32>,a4:0x2307547C<32>,a5:a5_91,gp:gp_475,mstatus:mstatus,ra:ra,s0:a0,s1:a0_81,s10:s10_478,s11:s11_479,s2:a0 + 156<i32>,s3:a0 + 207<i32>,s4:s4_46,s5:s5,s6:s6,s7:s7_480,s9:s9_481,Stack +0008:dwLoc38,Stack +0020:dwLoc20,Stack +0024:dwLoc1C,Stack +0028:dwLoc18,Stack +0030:dwLoc10,Stack +0034:dwLoc0C,Stack +0038:dwLoc08,Stack +0040:dwArg00,Stack +0044:dwArg04,Stack +0048:dwArg08,Stack +0054:dwArg14,Stack +0058:dwArg18,Stack +005C:dwArg1C,Stack +0068:dwArg28,Stack +006C:dwArg2C,Stack +0070:dwArg30,Stack +0074:dwArg34,Stack +0078:dwArg38,Stack +007C:dwArg3C,Stack +0084:dwArg44,Stack +0088:dwArg48,Stack +008C:dwArg4C,Stack +00A8:dwArg68,Stack +00B8:dwArg78,Stack +00BC:dwArg7C,Stack +00C8:dwArg88,Stack +00D8:dwArg98,Stack +00E8:dwArgA8,Stack +00F8:dwArgB8,Stack +0108:dwArgC8,Stack +0114:dwArgD4,Stack +0118:dwArgD8,Stack +0128:dwArgE8,Stack +0130:dwArgF0,Stack +0134:dwArgF4,Stack +0138:dwArgF8,Stack +0148:dwArg0108,Stack +0158:dwArg0118,Stack +0178:dwArg0138,Stack +0198:dwArg0158,Stack +01B8:dwArg0178,Stack +01D8:dwArg0198,t2:t2_476
		defs: gp:gp_475,s10:s10_478,s11:s11_479,s7:s7_480,s9:s9_481,t2:t2_476
	return
l23022DEC:
	word32 a0_125
	word32 s0_135
	word32 s3_138
	word32 s4_139
	word32 s5_140
	word32 s1_668
	word32 a1_669
	word32 a4_670
	word32 a5_671
	word32 ra_134 = smp_c1(ra, a0 + 223<i32>, a0 + 207<i32>, a0 + 161<i32>, fp + -48<i32>, out s0_135, out s1_668, out a0_125, out a1_669, out a4_670, out a5_671, out s3_138, out s4_139, out s5_140)
	branch a0_125 == 0<32> l23022E26
l23022E26:
	word32 a1_672
	word32 a2_673
	word32 a3_674
	word32 a4_675
	word32 a5_676
	branch memcmp(s0_135 + 175<i32>, fp + -48<i32>, 0x10<32>, out a1_672, out a2_673, out a3_674, out a4_675, out a5_676) != 0<32> l23022E10
l23022E36:
	branch CONVERT(Mem19[s4_139 + 3<i32>:byte], byte, word32) != 0<32> l23022EAC
l23022EAC:
	word32 a2_677
	word32 a3_678
	word32 a4_679
	word32 a5_680
	word32 a6_681
	word32 a7_682
	memcpy(fp + -48<i32>, s3_138, 8<32>, out a2_677, out a3_678, out a4_679, out a5_680, out a6_681, out a7_682)
	word32 a2_683
	word32 a3_684
	word32 a4_685
	word32 a5_686
	word32 a6_687
	word32 a7_688
	memcpy(fp + -40<i32>, s0_135 + 191<i32>, 8<32>, out a2_683, out a3_684, out a4_685, out a5_686, out a6_687, out a7_688)
	word32 a0_197
	word32 s0_206
	word32 s5_220
	word32 s1_689
	word32 a1_690
	word32 a4_691
	word32 a5_692
	word32 s2_693
	word32 s3_694
	word32 s4_695
	word32 ra_218 = bt_encrypt_le(ra_134, s5_140, out s0_206, out s1_689, out a0_197, out a1_690, out a4_691, out a5_692, out s2_693, out s3_694, out s4_695, out s5_220)
	branch a0_197 != 0<32> l23022E0E
l23022ECA:
	word32 a4_225
	word32 a3_230
	word32 a2_733
	word32 a5_734
	word32 a6_735
	word32 a7_736
	memcpy(s5_220, fp + -48<i32>, 0x10<32>, out a2_733, out a3_230, out a4_225, out a5_734, out a6_735, out a7_736)
	word32 a3_244
	word32 a4_245
	word32 a5_246
	word32 a0_737
	word32 a2_738
	word32 s4_739
	atomic_set_bit(s0_206, 1<32>, a3_230, a4_225, mstatus, out a0_737, out a2_738, out a3_244, out a4_245, out a5_246, out s4_739)
	smp_send_pairing_random(ra_218, s0_206, s0_206, a3_244, a4_245, a5_246, s5_220, mstatus, s6, s4, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg44, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8)
l23022F80:
l23022E42:
	word32 a2_696
	word32 a3_697
	word32 a4_698
	word32 a5_699
	word32 a6_700
	word32 a7_701
	memcpy(fp + -48<i32>, s0_135 + 191<i32>, 8<32>, out a2_696, out a3_697, out a4_698, out a5_699, out a6_700, out a7_701)
	word32 a2_702
	word32 a3_703
	word32 a4_704
	word32 a5_705
	word32 a6_706
	word32 a7_707
	memcpy(fp + -40<i32>, s3_138, 8<32>, out a2_702, out a3_703, out a4_704, out a5_705, out a6_706, out a7_707)
	word32 a0_315
	word32 s0_324
	word32 s1_325
	word32 a1_708
	word32 a4_709
	word32 a5_710
	word32 s2_711
	word32 s3_712
	word32 s4_713
	word32 s5_714
	word32 ra_336 = bt_encrypt_le(ra_134, s5_140, out s0_324, out s1_325, out a0_315, out a1_708, out a4_709, out a5_710, out s2_711, out s3_712, out s4_713, out s5_714)
	branch a0_315 != 0<32> l23022E0E
l23022E60:
	word32 t1_715
	word32 a0_716
	word32 a1_717
	word32 a2_718
	word32 a3_719
	word32 a4_720
	word32 a5_721
	word32 t1_722
	word32 a0_723
	word32 a1_724
	word32 a2_725
	word32 a3_726
	word32 a4_727
	word32 a5_728
	word32 ra_361 = memset(memset(ra_336, fp + -60<i32>, 0<32>, 2<32>, out t1_715, out a0_716, out a1_717, out a2_718, out a3_719, out a4_720, out a5_721), fp + -56<i32>, 0<32>, 8<32>, out t1_722, out a0_723, out a1_724, out a2_725, out a3_726, out a4_727, out a5_728)
	word32 a5_364 = CONVERT(Mem19[s0_324 + 165<i32>:byte], byte, word32)
	word32 a4_365 = CONVERT(Mem19[s0_324 + 172<i32>:byte], byte, word32)
	branch a5_364 >=u a4_365 l23022E82
l23022E80:
	a4_365 = a5_364
l23022E82:
	word32 a0_380
	word32 a3_383
	word32 a4_384
	word32 mstatus_388
	word32 s0_390
	word32 a5_729
	word32 s2_730
	word32 s3_731
	word32 s5_732
	word32 ra_389 = bt_conn_le_start_encryption(ra_361, s1_325, fp + -48<i32>, a4_365 & 255<i32>, a5_364, mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_390, out a0_380, out a3_383, out a4_384, out a5_729, out s2_730, out s3_731, out s5_732, out mstatus_388)
	branch a0_380 == 0<32> l23022EA2
l23022EA2:
	word32 a0_740
	word32 a2_741
	word32 a3_742
	word32 a4_743
	word32 a5_744
	word32 s4_745
	atomic_set_bit(s0_390, 1<32>, a3_383, a4_384, mstatus_388, out a0_740, out a2_741, out a3_742, out a4_743, out a5_744, out s4_745)
l23022E94:
	word32 s1_746
	word32 a0_747
	word32 a1_748
	word32 a2_749
	word32 a3_750
	word32 a4_751
	word32 a5_752
	word32 a7_753
	word32 s2_754
	word32 s3_755
	word32 s4_756
	word32 s5_757
	word32 s6_758
	word32 s7_759
	word32 s8_760
	word32 s9_761
	word32 s10_762
	word32 s11_763
	word32 t4_764
	printf(ra_389, 0x230758B0<32>, a3_383, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_746, out a0_747, out a1_748, out a2_749, out a3_750, out a4_751, out a5_752, out a7_753, out s2_754, out s3_755, out s4_756, out s5_757, out s6_758, out s7_759, out s8_760, out s9_761, out s10_762, out s11_763, out t4_764)
l23022E0E:
l23022E10:
	0<32> = dwArg0198
	return
smp_pairing_random_exit:


word32 bt_smp_request_ltk(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArgA8, word32 dwArgB4, word32 dwArgE8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      le_ltk_request
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_request_ltk_entry:
l2302309E:
	word32 s0_217
	word16 wLoc2A_381 = SLICE(a3, word16, 0)
	word32 s5_659
	word32 s4_658
	word32 s3_657
	word32 s1_105
	word32 s2_220
	word32 a5_200
	word32 a4_109
	word32 a3_127
	word32 ra_168 = smp_chan_get(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_105, out a3_127, out a4_109, out a5_200, out s2_220, out s3_657, out s4_658, out s5_659)
	branch a0 == 0<32> l2302321C
l230230BE:
	word32 a3_232
	word32 a4_227
	word32 a5_45 = CONVERT(wLoc2A_381, word16, word32)
	word32 s0_107 = a0
	branch a5_45 != 0<32> l23023124
l230230C6:
	s0_107 = dwArgB4
	branch (a5_45 | a4_109) != 0<32> l23023124
l230230CE:
	word32 a2_660
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_660) == 0<32> l23023124
l230230DC:
	word32 a2_661
	branch atomic_test_bit(a0 + 156<i32>, 1<32>, out a2_661) == 0<32> l23023124
l23023124:
	branch Mem23[s1_105 + 156<i32>:int32] != 0<32> l23023152
l2302312A:
	word32 a0_68
	word32 s3_78
	word32 s4_672
	word32 a5_671
	s0_107 = bt_keys_find(32<i32>, CONVERT(Mem23[s1_105 + 8<i32>:byte], byte, word32), s1_105 + 112<i32>, out s1_105, out a0_68, out a3_127, out a4_109, out a5_671, out s2_220, out s3_78, out s4_672)
	Mem82[s1_105 + 156<i32>:word32] = a0_68
	branch a0_68 != 0<32> l23023152
l23023142:
	word32 a0_86
	word32 a5_673
	word32 s3_674
	word32 s4_675
	s0_107 = bt_keys_find(1<32>, CONVERT(Mem82[s1_105 + 8<i32>:byte], byte, word32), s3_78, out s1_105, out a0_86, out a3_127, out a4_109, out a5_673, out s2_220, out s3_674, out s4_675)
	Mem100[s1_105 + 156<i32>:word32] = a0_86
l23023152:
	word32 a5_104 = CONVERT(wLoc2A_381, word16, word32)
	word32 a0_106 = Mem103[s1_105 + 156<i32>:int32]
	branch a5_104 != 0<32> l230231A6
l2302315C:
	s0_107 = dwArgB4
	branch (a5_104 | a4_109) != 0<32> l230231A6
l230231A6:
	branch a0_106 == 0<32> l23023202
l23023164:
	branch a0_106 == 0<32> l23023202
l23023166:
	branch (CONVERT(Mem103[a0_106 + 10<i32>:uint16], uint16, word32) & 32<i32>) == 0<32> l230231A8
l230231A8:
	branch (CONVERT(Mem103[a0_106 + 10<i32>:uint16], uint16, word32) & 1<32>) == 0<32> l23023202
l230231B0:
	word32 a1_685
	word32 a5_687
	word32 a2_686
	branch memcmp(a0_106 + 100<i32>, fp + -40<i32>, 8<32>, out a1_685, out a2_686, out a3_127, out a4_109, out a5_687) != 0<32> l23023202
l230231BE:
	word32 a1_688
	word32 a2_689
	word32 a5_690
	branch memcmp(Mem103[s1_105 + 156<i32>:int32] + 108<i32>, fp + -42<i32>, 2<32>, out a1_688, out a2_689, out a3_127, out a4_109, out a5_690) != 0<32> l23023202
l23023202:
	word32 a2_676
	word32 a0_150 = atomic_test_bit(s0_107 + 156<i32>, 0xE<32>, out a2_676)
	branch a0_150 == 0<32> l23023216
l2302320E:
	s0_107 = Mem103[a0_150:word32]
	word32 s2_705
	word32 a0_704
	ra_168 = bt_conn_security_changed(ra_168, a0_150, 2<32>, dwLoc08, dwArg08, out s1_105, out a0_704, out a3_127, out a4_109, out s2_705)
l23023216:
	word32 s5_703
	a3_127 = smp_reset(s0_107, s1_105, s0_107, a3_127, a4_109, mstatus, dwLoc0C, dwLoc08, dwArg08, dwArg68, dwArg78, dwArgA8, dwArgE8, out a4_109, out a5_200, out s5_703)
l2302321C:
	s0_217 = 0<32>
l230231D2:
	word32 a1_218 = Mem103[s1_105 + 156<i32>:int32]
	word32 s1_224 = CONVERT(Mem103[a1_218 + 8<i32>:byte], byte, word32)
	word32 a5_692
	word32 a7_694
	word32 a6_693
	word32 a2_691
	memcpy(s2_220, a1_218 + 110<i32>, s1_224, out a2_691, out a3_232, out a4_227, out a5_692, out a6_693, out a7_694)
	branch s1_224 >u 0xF<32> l230231FA
l230231EC:
	word32 t1_695
	word32 a1_697
	word32 a0_696
	word32 a2_698
	word32 a5_699
	ra_168 = memset(ra_168, s2_220 + s1_224, 0<32>, 0x10<32> - s1_224, out t1_695, out a0_696, out a1_697, out a2_698, out a3_232, out a4_227, out a5_699)
l230231FA:
l23023170:
	word32 s1_257 = CONVERT(Mem103[a0_106 + 8<i32>:byte], byte, word32)
	word32 a2_677
	word32 a6_679
	word32 a5_678
	word32 a7_680
	memcpy(s2_220, a0_106 + 22<i32>, s1_257, out a2_677, out a3_127, out a4_109, out a5_678, out a6_679, out a7_680)
	a5_200 = 0xF<32>
	s0_217 = 1<32>
	branch s1_257 >u 0xF<32> l23023196
l23023188:
	word32 a2_684
	word32 a1_683
	word32 t1_681
	word32 a0_682
	ra_168 = memset(ra_168, s2_220 + s1_257, 0<32>, 0x10<32> - s1_257, out t1_681, out a0_682, out a1_683, out a2_684, out a3_127, out a4_109, out a5_200)
l230230E6:
	word32 a5_289 = CONVERT(Mem23[dwArgB4 + 165<i32>:byte], byte, word32)
	word32 s1_290 = CONVERT(Mem23[dwArgB4 + 172<i32>:byte], byte, word32)
	branch a5_289 >=u s1_290 l230230F4
l230230F2:
	s1_290 = a5_289
l230230F4:
	word32 s1_293 = s1_290 & 255<i32>
	word32 a6_664
	word32 a7_665
	word32 a2_662
	word32 a5_663
	memcpy(s2_220, dwArgB4 + 223<i32>, s1_293, out a2_662, out a3_232, out a4_227, out a5_663, out a6_664, out a7_665)
	branch s1_293 >u 0xF<32> l23023118
l2302310A:
	word32 t1_666
	word32 a2_669
	word32 a5_670
	word32 a0_667
	word32 a1_668
	ra_168 = memset(ra_168, s2_220 + s1_293, 0<32>, 0x10<32> - s1_293, out t1_666, out a0_667, out a1_668, out a2_669, out a3_232, out a4_227, out a5_670)
l23023118:
l2302311C:
	word32 s4_702
	word32 a0_700
	word32 a2_701
	atomic_set_bit(s0_107, 1<32>, a3_232, a4_227, mstatus, out a0_700, out a2_701, out a3_127, out a4_109, out a5_200, out s4_702)
	s0_217 = 1<32>
l23023196:
	0<32> = dwArg0128
	a0Out = s0_217
	a3Out = a3_127
	a4Out = a4_109
	a5Out = a5_200
	return ra_168
bt_smp_request_ltk_exit:


word32 bt_smp_sign_verify(word32 ra, word32 a0, word32 a1, word32 s2, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg9C, word32 dwArg0108, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_signed_write_cmd
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +009C:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 ra s0 s11 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_sign_verify_entry:
l23023220:
	word32 s6_106
	word32 s3_166
	word32 s2_165
	word32 s11_105
	word32 s0_110
	word32 ra_161
	word32 a4_118
	word32 a0_115
	word32 a3_117
	word32 a2_344
	word32 a3_345
	word32 a4_346
	word32 a5_347
	word32 a6_348
	word32 a7_349
	memcpy(fp + 0xFFFFFFE4<32>, Mem11[a1 + 8<i32>:word32] + (CONVERT(Mem11[a1 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>), 0xC<32>, out a2_344, out a3_345, out a4_346, out a5_347, out a6_348, out a7_349)
	word32 a0_39
	word32 a5_44
	word32 s2_48
	word32 s1_350
	word32 a3_351
	word32 a4_352
	word32 s3_353
	word32 s4_354
	bt_keys_find(0x10<32>, CONVERT(Mem11[a0 + 8<i32>:byte], byte, word32), a0 + 112<i32>, out s1_350, out a0_39, out a3_351, out a4_352, out a5_44, out s2_48, out s3_353, out s4_354)
	branch a0_39 != 0<32> l23023274
l23023274:
	word32 a0_53 = Mem11[a5_44 + 96<i32>:word32]
	word32 s0_55 = Mem11[a0_53 + 8<i32>:word32]
	word32 a1_81
	word32 s0_89
	word32 a0_103
	word32 a2_355
	word32 a3_356
	word32 a4_357
	word32 a5_358
	word32 a6_359
	word32 a7_360
	word32 a3_361
	word32 a5_362
	ra_161 = smp_sign_buf(ra, a0_53 + 80<i32>, memcpy(a0_53 + (CONVERT(Mem56[s0_55 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>), fp + 0xFFFFFFE0<32>, 4<32>, out a2_355, out a3_356, out a4_357, out a5_358, out a6_359, out a7_360), CONVERT(SLICE(CONVERT(Mem56[s0_55 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>, word16, 0), word16, word32), dwArg00, dwArg04, dwArg28, dwArg4C, out s0_89, out a0_103, out a1_81, out a3_361, out a5_362, out s2_165, out s3_166, out s6_106, out s11_105)
	branch a0_103 == 0<32> l230232BA
l230232BA:
	s0_110 = Mem56[a1_81 + 8<i32>:word32]
	word32 a5_116
	word32 a1_376
	word32 a2_377
	a0_115 = memcmp(fp + 0xFFFFFFE4<32>, a1_81 + (CONVERT(Mem56[s0_89 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>), 0xC<32>, out a1_376, out a2_377, out a3_117, out a4_118, out a5_116)
	branch a0_115 == 0<32> l230232E8
l230232E8:
	Mem123[a5_116 + 0x61<32>:word32] = Mem56[a5_116 + 96<i32>:word32]
l230232CE:
	word32 a3_128
	word32 s1_391
	word32 a0_392
	word32 a1_393
	word32 a2_394
	word32 a5_395
	word32 a7_396
	word32 s4_397
	word32 s5_398
	word32 s7_399
	word32 s8_400
	word32 s9_401
	word32 s10_402
	word32 t4_403
	ra_161 = printf(bt_addr_le_str_real(ra_161, s2_165, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_110, out a3_128), 0x230756D4<32>, a3_128, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_391, out a0_392, out a1_393, out a2_394, out a3_117, out a4_118, out a5_395, out a7_396, out s2_165, out s3_166, out s4_397, out s5_398, out s6_106, out s7_399, out s8_400, out s9_401, out s10_402, out s11_105, out t4_403)
	a0_115 = -77<i32>
l230232A2:
	word32 a3_180
	word32 s1_378
	word32 a0_379
	word32 a1_380
	word32 a2_381
	word32 a5_382
	word32 a7_383
	word32 s4_384
	word32 s5_385
	word32 s7_386
	word32 s8_387
	word32 s9_388
	word32 s10_389
	word32 t4_390
	ra_161 = printf(bt_addr_le_str_real(ra_161, s2_165, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_110, out a3_180), 0x230756B0<32>, a3_180, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_378, out a0_379, out a1_380, out a2_381, out a3_117, out a4_118, out a5_382, out a7_383, out s2_165, out s3_166, out s4_384, out s5_385, out s6_106, out s7_386, out s8_387, out s9_388, out s10_389, out s11_105, out t4_390)
	a0_115 = 0xFFFFFFFB<32>
l23023252:
	word32 a3_232
	word32 s1_363
	word32 a0_364
	word32 a1_365
	word32 a2_366
	word32 a5_367
	word32 a7_368
	word32 s4_369
	word32 s5_370
	word32 s7_371
	word32 s8_372
	word32 s9_373
	word32 s10_374
	word32 t4_375
	ra_161 = printf(bt_addr_le_str_real(ra, s2_48, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_110, out a3_232), 0x2307568C<32>, a3_232, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_363, out a0_364, out a1_365, out a2_366, out a3_117, out a4_118, out a5_367, out a7_368, out s2_165, out s3_166, out s4_369, out s5_370, out s6_106, out s7_371, out s8_372, out s9_373, out s10_374, out s11_105, out t4_375)
	a0_115 = 0xFFFFFFFE<32>
l23023268:
	s0Out = s0_110
	a0Out = a0_115
	a3Out = a3_117
	a4Out = a4_118
	s2Out = s2_165
	s3Out = s3_166
	s6Out = s6_106
	s11Out = s11_105
	return ra_161
bt_smp_sign_verify_exit:


word32 bt_smp_sign(word32 ra, word32 a0, word32 s2, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg9C, word32 dwArg0108, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_send
// MayUse:  a0:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +009C:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a5 ra s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_sign_entry:
l230232F0:
	word32 s2_138
	word32 s0_107
	word32 ra_134
	word32 a5_127
	word32 a0_148
	word32 a3_131
	word32 a0_19
	word32 a4_23
	word32 s1_27
	word32 s2_28
	word32 a3_265
	word32 a5_266
	word32 s3_267
	word32 s4_268
	bt_keys_find(8<32>, CONVERT(Mem11[a0 + 8<i32>:byte], byte, word32), a0 + 112<i32>, out s1_27, out a0_19, out a3_265, out a4_23, out a5_266, out s2_28, out s3_267, out s4_268)
	branch a0_19 != 0<32> l23023330
l23023330:
	word32 a5_38
	word32 a1_269
	word32 a0_36 = net_buf_simple_add(s1_27 + 8<i32>, 0xC<32>, a4_23, out a1_269, out a5_38)
	word32 s1_40 = Mem11[a0_36 + 8<i32>:word32]
	word32 a5_70
	word32 a2_270
	word32 a3_271
	word32 a4_272
	word32 a5_273
	word32 a6_274
	word32 a7_275
	word32 s0_276
	word32 a1_277
	word32 s3_278
	word32 s6_279
	word32 s11_280
	ra_134 = smp_sign_buf(ra, Mem11[a5_38 + 76<i32>:word32] + 60<i32>, memcpy(a0_36 + (CONVERT(Mem42[s1_40 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>), fp + 0xFFFFFFEC<32>, 4<32>, out a2_270, out a3_271, out a4_272, out a5_273, out a6_274, out a7_275), CONVERT(SLICE(CONVERT(Mem42[s1_40 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>, word16, 0), word16, word32), dwArg00, dwArg04, dwArg28, dwArg4C, out s0_276, out a0_148, out a1_277, out a3_131, out a5_70, out s2_138, out s3_278, out s6_279, out s11_280)
	branch a0_148 == 0<32> l23023380
l23023380:
	s0_107 = Mem42[a5_70 + 76<i32>:word32]
	Mem96[a5_70 + 0x4D<32>:word32] = s0_107
	a5_127 = a5_70 + 1<32>
l23023368:
	word32 a3_101
	word32 s1_297
	word32 a0_298
	word32 a1_299
	word32 a2_300
	word32 a4_301
	word32 a7_302
	word32 s3_303
	word32 s4_304
	word32 s5_305
	word32 s6_306
	word32 s7_307
	word32 s8_308
	word32 s9_309
	word32 s10_310
	word32 s11_311
	word32 t4_312
	ra_134 = printf(bt_addr_le_str_real(ra_134, s2_138, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_107, out a3_101), 0x230756B0<32>, a3_101, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_297, out a0_298, out a1_299, out a2_300, out a3_131, out a4_301, out a5_127, out a7_302, out s2_138, out s3_303, out s4_304, out s5_305, out s6_306, out s7_307, out s8_308, out s9_309, out s10_310, out s11_311, out t4_312)
	a0_148 = 0xFFFFFFFB<32>
l2302330E:
	word32 a3_153
	word32 s1_281
	word32 a0_282
	word32 a1_283
	word32 a2_284
	word32 a4_285
	word32 a7_286
	word32 s3_287
	word32 s4_288
	word32 s5_289
	word32 s6_290
	word32 s7_291
	word32 s8_292
	word32 s9_293
	word32 s10_294
	word32 s11_295
	word32 t4_296
	ra_134 = printf(bt_addr_le_str_real(ra, s2_28, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_107, out a3_153), 0x23075668<32>, a3_153, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_281, out a0_282, out a1_283, out a2_284, out a3_131, out a4_285, out a5_127, out a7_286, out s2_138, out s3_287, out s4_288, out s5_289, out s6_290, out s7_291, out s8_292, out s9_293, out s10_294, out s11_295, out t4_296)
	a0_148 = 0xFFFFFFFE<32>
l23023324:
	s0Out = s0_107
	a0Out = a0_148
	a3Out = a3_131
	a5Out = a5_127
	s2Out = s2_138
	return ra_134
bt_smp_sign_exit:


void bt_smp_auth_passkey_entry(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_auth_passkey_entry
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_auth_passkey_entry_entry:
l23023388:
	word32 a3_21
	word32 a4_22
	word32 s3_29
	word32 s5_31
	word32 s4_539
	word32 s2_538
	word32 a5_537
	word32 s1_536
	word32 ra_24 = smp_chan_get(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_536, out a3_21, out a4_22, out a5_537, out s2_538, out s3_29, out s4_539, out s5_31)
	branch a0 != 0<32> l230233AE
l230233AE:
	word32 a0_44
	word32 a3_47
	word32 a5_49
	word32 s4_542
	word32 a4_541
	word32 a1_540
	atomic_test_and_clear_bit(9<32>, a3_21, a4_22, mstatus, out a0_44, out a1_540, out a3_47, out a4_541, out a5_49, out s4_542)
	branch a0_44 == 0<32> l2302339C
l230233BE:
	word32 a2_543
	branch atomic_test_bit(a0 + 156<i32>, 5<32>, out a2_543) != 0<32> l2302340A
l2302340A:
	word32 a3_103
	word32 a4_104
	word32 mstatus_108
	word32 ra_109
	word32 s1_110
	word32 a1_128
	word32 s0_60 = Mem13[a5_49:word32]
	Mem61[s0_60 + 368<i32>:word32] = s3_29
	branch CONVERT(Mem61[a5_49 + 3<i32>:byte], byte, word32) != 0<32> l23023436
l23023436:
	word32 a2_563
	branch atomic_test_bit(a0 + 156<i32>, 0<32>, out a2_563) == 0<32> l2302339E
l23023442:
	word32 a0_70
	ra_109 = smp_send_pairing_confirm(ra_24, s0_60, s0_60, a3_47, a0 + 156<i32>, s5_31, mstatus, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg54, dwArg58, ra, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s1_110, out a0_70, out a3_103, out a4_104, out mstatus_108)
	a1_128 = 4<32>
	branch a0_70 == 0<32> l2302342C
l2302344C:
l23023416:
	word32 a0_100
	ra_109 = smp_send_pairing_confirm(ra_24, s0_60, s0_60, a3_47, a0 + 156<i32>, s5_31, mstatus, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg54, dwArg58, ra, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s1_110, out a0_100, out a3_103, out a4_104, out mstatus_108)
	branch a0_100 == 0<32> l2302342A
l2302342A:
	a1_128 = 3<32>
l2302342C:
	word32 a3_573
	word32 a0_571
	word32 a2_572
	word32 a5_575
	word32 a4_574
	word32 s4_576
	atomic_set_bit(s0_60, a1_128, a3_103, a4_104, mstatus_108, out a0_571, out a2_572, out a3_573, out a4_574, out a5_575, out s4_576)
l2302341E:
	word32 s0_564
	word32 s1_565
	word32 a3_566
	word32 a4_567
	word32 s3_568
	word32 mstatus_570
	word32 s5_569
	smp_error(ra_109, s1_110, s0_60, 1<32>, a3_103, a4_104, mstatus_108, dwLoc2C, dwLoc28, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg24, dwArg2C, dwArg34, dwArg48, dwArg54, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_564, out s1_565, out a3_566, out a4_567, out s3_568, out s5_569, out mstatus_570)
l23023426:
l230233CA:
	word32 a4_189
	word32 a3_194
	word32 a7_547
	word32 a6_546
	word32 a5_545
	word32 a2_544
	memcpy(a0 + 223<i32>, fp + -36<i32>, 4<32>, out a2_544, out a3_194, out a4_189, out a5_545, out a6_546, out a7_547)
	word32 a0_204
	word32 a3_207
	word32 a4_208
	word32 a5_209
	word32 s4_549
	word32 a1_548
	atomic_test_and_clear_bit(0<32>, a3_194, a4_189, mstatus, out a0_204, out a1_548, out a3_207, out a4_208, out a5_209, out s4_549)
	branch a0_204 == 0<32> l2302339E
l230233E2:
	word32 a0_215
	word32 a3_218
	word32 a4_219
	word32 a5_220
	word32 mstatus_224
	word32 s1_226
	word32 ra_225 = legacy_pairing_confirm(ra_24, a0, a3_207, a4_208, a5_209, a0 + 156<i32>, s5_31, mstatus, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg48, dwArg4C, s3_29, dwArg58, ra, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s1_226, out a0_215, out a3_218, out a4_219, out a5_220, out mstatus_224)
	branch a0_215 == 0<32> l230233F4
l230233F4:
	word32 s0_245 = Mem188[a5_220:word32]
	word32 a1_247 = 3<32>
	branch CONVERT(Mem188[a5_220 + 3<i32>:byte], byte, word32) == 0<32> l23023404
l23023402:
	a1_247 = 4<32>
l23023404:
	word32 a3_559
	word32 a4_560
	word32 a5_561
	word32 s4_562
	word32 a2_558
	word32 a0_557
	atomic_set_bit(s0_245, a1_247, a3_218, a4_219, mstatus_224, out a0_557, out a2_558, out a3_559, out a4_560, out a5_561, out s4_562)
l230233EA:
	word32 mstatus_556
	word32 s5_555
	word32 s3_554
	word32 a4_553
	word32 a3_552
	word32 s1_551
	word32 s0_550
	smp_error(ra_225, s1_226, a0, 1<32>, a3_218, a4_219, mstatus_224, dwLoc2C, dwLoc28, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg24, dwArg2C, dwArg34, dwArg48, s3_29, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_550, out s1_551, out a3_552, out a4_553, out s3_554, out s5_555, out mstatus_556)
l2302339C:
l2302339E:
	0<32> = dwArg0128
	return
bt_smp_auth_passkey_entry_exit:


void bt_smp_auth_passkey_confirm(word32 ra, word32 s0, word32 a0, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE0, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_auth_passkey_confirm
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_smp_auth_passkey_confirm_entry:
l2302344E:
	word32 a3_17
	word32 a4_18
	word32 s3_25
	word32 s5_336
	word32 s4_335
	word32 s2_334
	word32 a5_333
	word32 s1_332
	word32 ra_20 = smp_chan_get(ra, a0, a3, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_332, out a3_17, out a4_18, out a5_333, out s2_334, out s3_25, out s4_335, out s5_336)
	branch a0 != 0<32> l2302346E
l2302346E:
	word32 a0_40
	word32 a3_43
	word32 a4_44
	word32 a5_45
	word32 s4_338
	word32 a1_337
	word32 s1_46 = atomic_test_and_clear_bit(9<32>, a3_17, a4_18, mstatus, out a0_40, out a1_337, out a3_43, out a4_44, out a5_45, out s4_338)
	branch a0_40 == 0<32> l2302345E
l2302347E:
	word32 a2_339
	branch atomic_test_bit(s1_46, 7<32>, out a2_339) == 0<32> l23023494
l23023494:
	word32 a2_346
	word32 a0_57 = atomic_test_bit(s1_46, 0xF<32>, out a2_346)
	branch a0_57 != 0<32> l2302348C
l230234A6:
	word32 a2_347
	branch atomic_test_bit(s1_46, 8<32>, out a2_347) == 0<32> l23023460
l230234AC:
	word32 a3_108
	word32 a4_107
	word32 ra_105
	word32 s1_104
	word32 s0_102
	word32 a0_100
	word32 s0_66 = Mem11[a5_45:word32]
	branch CONVERT(Mem11[a5_45 + 3<i32>:byte], byte, word32) != 0<32> l230234C6
l230234C6:
	word32 s2_356
	ra_105 = compute_and_check_and_send_slave_dhcheck(ra_20, s1_46, s0_66, a0_57, s3_25, dwArg0118, out s0_102, out s1_104, out a0_100, out a3_108, out a4_107, out s2_356)
l230234B6:
	word32 s2_348
	ra_105 = compute_and_send_master_dhcheck(ra_20, s1_46, s0_66, a0_57, s3_25, dwArgC4, dwArgE0, dwArgE4, dwArg0108, dwArg0128, out s0_102, out s1_104, out a0_100, out a3_108, out a4_107, out s2_348)
l230234BA:
	branch a0_100 == 0<32> l23023460
l230234BE:
	word32 mstatus_355
	word32 s5_354
	word32 s3_353
	word32 a4_352
	word32 a3_351
	word32 s1_350
	word32 s0_349
	smp_error(ra_105, s1_104, s0_102, a0_100, a3_108, a4_107, mstatus, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg38, dwArg44, dwArg4C, dwArg54, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_349, out s1_350, out a3_351, out a4_352, out s3_353, out s5_354, out mstatus_355)
l23023488:
l2302348C:
	word32 s4_345
	word32 a5_344
	word32 a4_343
	word32 a3_342
	word32 a2_341
	word32 a0_340
	atomic_set_bit(a0, 8<32>, a3_43, a4_44, mstatus, out a0_340, out a2_341, out a3_342, out a4_343, out a5_344, out s4_345)
l2302345E:
l23023460:
	0<32> = dwArg38
	return
bt_smp_auth_passkey_confirm_exit:


void bt_smp_auth_cancel(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_auth_cancel
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bt_smp_auth_cancel_entry:
l230234CC:
	word32 a3_13
	word32 a4_14
	word32 s5_172
	word32 s3_170
	word32 s4_171
	word32 a5_168
	word32 s2_169
	word32 s1_167
	word32 ra_16 = smp_chan_get(ra, a0, a3, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_167, out a3_13, out a4_14, out a5_168, out s2_169, out s3_170, out s4_171, out s5_172)
	branch a0 != 0<32> l230234E2
l230234E2:
	word32 a0_35
	word32 a3_38
	word32 s4_176
	word32 a4_174
	word32 a5_175
	word32 a1_173
	atomic_test_and_clear_bit(9<32>, a3_13, a4_14, mstatus, out a0_35, out a1_173, out a3_38, out a4_174, out a5_175, out s4_176)
	branch a0_35 == 0<32> l230234D8
l230234F0:
	word32 a5_45 = CONVERT(Mem7[a0 + 160<i32>:byte], byte, word32)
	branch a5_45 >u 5<32> l23023524
l23023524:
l230234FA:
	word32 a5_52 = Mem7[(a5_45 << 2<i32>) + 0x230754AC<32>:word32]
	call a5_52 (retsize: 0;)
		uses: a0:a0_35,a3:a3_38,a4:0x230754AC<32>,a5:a5_52,mstatus:mstatus,ra:ra_16,s0:a0,Stack +0018:dwArg08,Stack +0020:dwArg10,Stack +0060:dwArg50,Stack +0064:dwArg54,Stack +0088:dwArg78,Stack +00AC:dwArg9C
	return
l230234D8:
l230234DA:
	return
bt_smp_auth_cancel_exit:


void bt_smp_auth_pairing_confirm(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_auth_pairing_confirm
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_smp_auth_pairing_confirm_entry:
l23023528:
	word32 a3_18
	word32 a4_19
	word32 s2_25
	word32 s3_26
	word32 s5_28
	word32 s4_400
	word32 a5_399
	word32 s1_398
	word32 ra_21 = smp_chan_get(ra, a0, a3, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_398, out a3_18, out a4_19, out a5_399, out s2_25, out s3_26, out s4_400, out s5_28)
	branch a0 != 0<32> l2302354A
l2302354A:
	word32 a0_41
	word32 a3_44
	word32 a4_45
	word32 s4_403
	word32 a5_402
	word32 a1_401
	word32 s1_47 = atomic_test_and_clear_bit(9<32>, a3_18, a4_19, mstatus, out a0_41, out a1_401, out a3_44, out a4_45, out a5_402, out s4_403)
	branch a0_41 == 0<32> l2302353A
l2302355A:
	branch CONVERT(Mem11[s2_25 + 3<i32>:byte], byte, word32) != 0<32> l230235A6
l230235A6:
	word32 a2_432
	branch atomic_test_bit(s1_47, 5<32>, out a2_432) != 0<32> l230235C0
l230235C0:
	word32 a3_63
	word32 a4_64
	word32 a5_65
	word32 a0_441
	word32 a2_442
	word32 s4_443
	atomic_set_bit(a0, 0xC<32>, a3_44, a4_45, mstatus, out a0_441, out a2_442, out a3_63, out a4_64, out a5_65, out s4_443)
	word32 a0_71
	word32 a3_444
	word32 a4_445
	word32 s2_446
	word32 mstatus_447
	send_pairing_rsp(ra_21, a0, a0, a3_63, a4_64, a5_65, s5_28, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg6C, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out a0_71, out a3_444, out a4_445, out s2_446, out mstatus_447)
	branch a0_71 == 0<32> l2302353C
l230235D2:
l230235B0:
	word32 a3_106
	word32 a4_107
	word32 a5_108
	word32 a0_433
	word32 a2_434
	word32 s4_435
	atomic_set_bit(a0, 3<32>, a3_44, a4_45, mstatus, out a0_433, out a2_434, out a3_106, out a4_107, out a5_108, out s4_435)
	word32 a0_436
	word32 a3_437
	word32 a4_438
	word32 s2_439
	word32 mstatus_440
	send_pairing_rsp(ra_21, a0, a0, a3_106, a4_107, a5_108, s5_28, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg6C, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out a0_436, out a3_437, out a4_438, out s2_439, out mstatus_440)
l23023564:
	word32 a2_404
	branch atomic_test_bit(s1_47, 5<32>, out a2_404) != 0<32> l2302357E
l2302357E:
	branch Mem11[0x4200E188<32>:int32] != 0<32> l23023594
l23023594:
	word32 a3_152
	word32 a4_153
	word32 a5_154
	word32 a0_420
	word32 a2_421
	word32 s4_422
	word32 s0_423
	word32 s1_424
	word32 a0_425
	word32 a3_426
	word32 a4_427
	word32 s2_428
	word32 s3_429
	word32 s5_430
	word32 mstatus_431
	sc_send_public_key(ra_21, atomic_set_bit(a0, 0xC<32>, a3_44, a4_45, mstatus, out a0_420, out a2_421, out a3_152, out a4_153, out a5_154, out s4_422), a0, a3_152, a4_153, a5_154, s2_25, s3_26, s5_28, mstatus, s2, s0, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_423, out s1_424, out a0_425, out a3_426, out a4_427, out s2_428, out s3_429, out s5_430, out mstatus_431)
l23023588:
	word32 a3_416
	word32 a2_415
	word32 a0_414
	word32 a4_417
	word32 a5_418
	word32 s4_419
	atomic_set_bit(a0, 6<32>, a3_44, a4_45, mstatus, out a0_414, out a2_415, out a3_416, out a4_417, out a5_418, out s4_419)
l2302356A:
	word32 a3_207
	word32 a4_208
	word32 a5_209
	word32 s4_407
	word32 a2_406
	word32 a0_405
	atomic_set_bit(a0, 3<32>, a3_44, a4_45, mstatus, out a0_405, out a2_406, out a3_207, out a4_208, out a5_209, out s4_407)
	word32 mstatus_413
	word32 a5_412
	word32 a4_411
	word32 a3_410
	word32 a0_409
	word32 s1_408
	legacy_send_pairing_confirm(ra_21, a0, a0, a3_207, a4_208, a5_209, s2_25, s5_28, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg6C, ra, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0158, out s1_408, out a0_409, out a3_410, out a4_411, out a5_412, out mstatus_413)
l2302357A:
l2302353A:
l2302353C:
	0<32> = dwArg38
	return
bt_smp_auth_pairing_confirm_exit:


word32 bt_smp_start_security(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_set_security
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_start_security_entry:
l230235D6:
	word32 a4_162
	word32 s1_101
	word32 a3_107
	word32 a4_108
	word32 s0_362
	word32 a5_165 = CONVERT(Mem15[a0 + 3<i32>:byte], byte, word32)
	word32 s0_18 = a0
	branch a5_165 == 0<32> l230235F6
l230235F6:
	word32 s1_27
	word32 s4_32
	word32 s3_825
	ra = smp_chan_get(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_27, out a3, out a4_162, out a5_165, out s2, out s3_825, out s4_32, out s5)
	s3 = a0
	branch a0 != 0<32> l23023614
l23023614:
	word32 a2_828
	branch atomic_test_bit(a0 + 4<i32>, 0xB<32>, out a2_828) == 0<32> l23023634
l23023634:
	branch smp_keys_check.part.5(a0, out a3, out a4_162, out a5_165) == 0<32> l23023620
l2302363C:
	s2 = a0 + 156<i32>
	word32 a2_837
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_837) == 0<32> l2302364E
l2302364E:
	word32 a2_838
	branch atomic_test_bit(a0 + 156<i32>, 1<32>, out a2_838) != 0<32> l2302364A
l23023658:
	word32 a1_65 = Mem15[a0 + 156<i32>:int32]
	word32 a0_72
	ra = bt_conn_le_start_encryption(ra, s1_27, a1_65 + 22<i32>, CONVERT(Mem15[a1_65 + 8<i32>:byte], byte, word32), a5_165, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg44, dwArg48, dwArg4C, dwArg58, s3, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_362, out a0_72, out a3, out a4_162, out a5_165, out s2, out s3, out s5, out mstatus)
	s1_101 = a0_72
	branch a0_72 != 0<32> l23023602
l23023674:
	word32 a0_839
	word32 a2_840
	word32 a5_841
	word32 s4_842
	atomic_set_bit(s0_362, 0xB<32>, a3, a4_162, mstatus, out a0_839, out a2_840, out a3_107, out a4_108, out a5_841, out s4_842)
l23023620:
	0<32> = dwArg0128
l23023630_thunk_smp_send_pairing_req:
	word32 a0_133
	word32 a3_136
	word32 a4_137
	word32 a5_138
	word32 s0_142
	word32 s1_143
	word32 s2_146
	word32 s3_147
	word32 s5_149
	word32 mstatus_158
	word32 ra_141 = smp_send_pairing_req(ra, dwArgE4, s1_27, a0, a3, s2, a0, s4_32, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg58, s3, dwArg74, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_142, out s1_143, out a0_133, out a3_136, out a4_137, out a5_138, out s2_146, out s3_147, out s5_149, out mstatus_158)
	s0Out = s0_142
	s1Out = s1_143
	a0Out = a0_133
	a3Out = a3_136
	a4Out = a4_137
	a5Out = a5_138
	s2Out = s2_146
	s3Out = s3_147
	s5Out = s5_149
	mstatusOut = mstatus_158
	return ra_141
l230235EC:
	a4_162 = 1<32>
	branch a5_165 == 1<32> l23023688
l23023688:
	word32 s4_175
	word32 s1_826
	word32 s2_827
	ra = smp_chan_get(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_826, out a3, out a4_162, out a5_165, out s2_827, out s3, out s4_175, out s5)
	s2 = a0
	branch a0 == 0<32> l230235FE
l230235FE:
	s1_101 = -57<i32>
l23023690:
	s3 = a0 + 156<i32>
	s1_101 = 0xFFFFFFFB<32>
	word32 a2_829
	branch atomic_test_bit(a0 + 156<i32>, 4<32>, out a2_829) != 0<32> l23023602
l230236A0:
	word32 a2_830
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_830) != 0<32> l2302364A
l230236AA:
	word32 a2_831
	branch atomic_test_bit(a0 + 156<i32>, 1<32>, out a2_831) != 0<32> l2302364A
l2302364A:
	s1_101 = 0xFFFFFFF0<32>
l230236B4:
	word32 a0_205
	sec_level_reachable.isra.1(CONVERT(Mem15[a0 + 10<i32>:byte], byte, word32), a3, a4_162, out a0_205, out a3, out a4_162, out a5_165)
	branch a0_205 == 0<32> l230236E8
l230236E8:
	word32 a2_832
	branch atomic_test_bit(a0 + 4<i32>, 0xB<32>, out a2_832) != 0<32> l230235F2
l230236F6:
	branch smp_keys_check.part.5(a0, out a3, out a4_162, out a5_165) != 0<32> l230236BE
l230236FE:
l230236BE:
	branch Mem15[a0 + 156<i32>:int32] != 0<32> l230236D8
l230236C4:
	word32 a0_236
	word32 s4_834
	ra = bt_keys_get_addr(ra, a0, CONVERT(Mem15[a0 + 8<i32>:byte], byte, word32), a0 + 112<i32>, a0, a0 + 156<i32>, s4_175, mstatus, dwLoc30, dwLoc2C, dwLoc28, s4, s2, s0, dwLoc18, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s0_18, out s1_101, out a0_236, out a3, out a4_162, out a5_165, out s2, out s3, out s4_834, out s5, out mstatus)
	Mem265[s0_18 + 156<i32>:word32] = a0_236
	branch a0_236 == 0<32> l23023602
l230236D8:
	word32 a0_272
	word32 s1_833
	ra = smp_init(ra, s2, mstatus, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgA8, dwArgE8, out s1_833, out a0_272, out a3, out a4_162, out a5_165, out s2, out s3, out s5)
	branch a0_272 == 0<32> l23023700
l23023700:
	word32 a0_300
	word32 s1_835
	word32 a2_836
	ra = smp_create_pdu.isra.7(ra, s2, a3, a4_162, a5_165, s5, mstatus, dwArg08, dwArg10, dwArg14, dwArg38, dwArg54, s3, dwArg68, dwArgA8, dwArgC8, out s1_835, out a0_300, out a2_836, out a3, out a4_162, out a5_165, out s2, out s3, out s5, out mstatus)
	branch a0_300 == 0<32> l230236E2
l2302370C:
	word32 a1_843
	word32 a5_844
	word32 a0_332 = net_buf_simple_add(a0_300 + 8<32>, 1<32>, a4_162, out a1_843, out a5_844)
	word32 a0_339
	word32 a5_343
	word32 a3_845
	word32 a4_846
	word32 s1_344 = get_auth.isra.0(s0_18 + 10<i32>, 9<32>, a3, a4_162, out a0_339, out a3_845, out a4_846, out a5_343)
	Mem347[a0_332:byte] = SLICE(a0_339, byte, 0)
	word32 a3_355
	word32 a4_356
	word32 s1_847
	word32 a0_848
	word32 a1_849
	word32 a5_850
	word32 s6_851
	word32 s7_852
	word32 s9_853
	ra = bt_l2cap_send_cb(ra, s1_344, s0_18, 6<32>, a0_300, 0<32>, a5_343, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg44, dwArg4C, dwArg58, s3, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_362, out s1_847, out a0_848, out a1_849, out a3_355, out a4_356, out a5_850, out s2, out s3, out s5, out s6_851, out s7_852, out s9_853, out mstatus)
	word32 a0_854
	word32 a2_855
	word32 a5_856
	word32 s4_857
	atomic_set_bit(s0_362, 0xE<32>, a3_355, a4_356, mstatus, out a0_854, out a2_855, out a3_107, out a4_108, out a5_856, out s4_857)
l23023682:
	word32 a0_858
	word32 a2_859
	word32 s4_860
	s1_101 = atomic_set_bit(s0_362, 1<32>, a3_107, a4_108, mstatus, out a0_858, out a2_859, out a3, out a4_162, out a5_165, out s4_860)
l230236E2:
	s1_101 = -55<i32>
l230235F2:
	s1_101 = 0xFFFFFFEA<32>
l23023602:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_101
	a0Out = s1_101
	a3Out = a3
	a4Out = a4_162
	a5Out = a5_165
	s2Out = s2
	s3Out = s3
	s5Out = s5
	mstatusOut = mstatus
	return ra
bt_smp_start_security_exit:


word32 bt_smp_update_keys(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 s2, word32 s3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & a3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_encrypt_key_refresh_complete
//      hci_encrypt_change
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a3 mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_update_keys_entry:
l23023744:
	word32 s0_15 = a0
	word32 s3_28
	word32 s4_29
	word32 a4_552
	word32 a5_553
	word32 s5_555
	word32 s2_554
	word32 s1_551
	word32 a3_128
	word32 ra_23 = smp_chan_get(ra, a0, a3, dwLoc08, dwArg40, dwArg44, s1, dwArg8C, out s1_551, out a3_128, out a4_552, out a5_553, out s2_554, out s3_28, out s4_29, out s5_555)
	branch a0 == 0<32> l23023874
l2302375A:
	word32 a2_556
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_556) == 0<32> l23023874
l2302376C:
	word32 a0_45 = Mem13[a0 + 156<i32>:int32]
	branch a0_45 == 0<32> l23023774
l23023772:
	word32 a4_563
	word32 a3_562
	ra_23 = bt_keys_clear(ra_23, a0, a0, a0_45, a3_128, a0 + 156<i32>, s3_28, s4_29, mstatus, dwLoc20, dwLoc1C, s2, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg58, s1, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out a3_562, out a4_563)
l23023774:
	word32 a0_66
	word32 s1_75
	word32 s2_76
	word32 s3_77
	word32 s4_560
	word32 s5_561
	word32 a3_557
	word32 a5_559
	word32 a4_558
	ra_23 = bt_keys_get_addr(ra_23, a0, CONVERT(Mem13[a0 + 8<i32>:byte], byte, word32), a0 + 112<i32>, a0 + 156<i32>, a0 + 112<i32>, s4_29, mstatus, dwLoc20, dwLoc1C, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_15, out s1_75, out a0_66, out a3_557, out a4_558, out a5_559, out s2_76, out s3_77, out s4_560, out s5_561, out mstatus)
	Mem95[s0_15 + 156<i32>:word32] = a0_66
	branch a0_66 != 0<32> l230237AE
l230237AE:
	word32 a2_564
	branch atomic_test_bit(s2_76, 0xD<32>, out a2_564) == 0<32> l230237C8
l230237B8:
	word32 a4_101 = Mem95[s0_15 + 156<i32>:int32]
	Mem104[a4_101 + 9<i32>:byte] = SLICE(CONVERT(Mem95[a4_101 + 9<i32>:byte], byte, word32) | 2<i32>, byte, 0)
l230237C8:
	word32 a5_116
	word32 a3_107 = Mem106[s0_15 + 156<i32>:int32]
	word32 a2_109 = CONVERT(Mem106[s1_75 + 160<i32>:byte], byte, word32)
	word32 a5_111 = CONVERT(Mem106[a3_107 + 9<i32>:byte], byte, word32)
	branch a2_109 >u 5<32> l2302386A
l230237DA:
	branch (1<32> << a2_109 & 46<i32>) == 0<32> l2302386A
l2302386A:
	a5_116 = a5_111 & 0xFFFFFFFE<32>
l230237E6:
	a5_116 = a5_111 | 1<i32>
l230237EA:
	Mem121[a3_107 + 9<i32>:byte] = SLICE(a5_116, byte, 0)
	word32 a4_124 = CONVERT(Mem121[s1_75 + 172<i32>:byte], byte, word32)
	word32 a5_125 = CONVERT(Mem121[s1_75 + 165<i32>:byte], byte, word32)
	a3_128 = Mem121[s0_15 + 156<i32>:int32]
	branch a4_124 >=u a5_125 l23023800
l230237FE:
	a5_125 = a4_124
l23023800:
	Mem132[a3_128 + 8<i32>:byte] = SLICE(a5_125, byte, 0)
	word32 a2_586
	word32 a0_139 = atomic_test_bit(s2_76, 5<32>, out a2_586)
	word32 a5_143 = Mem132[s0_15 + 156<i32>:int32]
	word32 a4_144 = CONVERT(Mem132[a5_143 + 9<i32>:byte], byte, word32)
	branch a0_139 == 0<32> l2302386E
l2302386E:
	Mem146[a5_143 + 9<i32>:byte] = SLICE(a4_144 & 0xFFFFFFEF<32>, byte, 0)
l23023816:
	Mem148[a5_143 + 9<i32>:byte] = SLICE(a4_144 | 16<i32>, byte, 0)
	word32 a2_587
	branch atomic_test_bit(s2_76, 0xC<32>, out a2_587) == 0<32> l23023874
l23023874:
	s0Out = s0_15
	a3Out = a3_128
	mstatusOut = mstatus
	return ra_23
l23023828:
	bt_keys_add_type(Mem148[s0_15 + 156<i32>:int32], 32<i32>)
	word32 a4_590
	word32 a5_591
	word32 a3_589
	word32 a2_588
	word32 a7_593
	word32 a6_592
	memcpy(Mem148[s0_15 + 156<i32>:int32] + 0x16<32>, s1_75 + 223<i32>, 0x10<32>, out a2_588, out a3_589, out a4_590, out a5_591, out a6_592, out a7_593)
	word32 t1_594
	word32 a3_598
	word32 a0_595
	word32 a1_596
	word32 a4_599
	word32 a2_597
	word32 a5_600
	word32 ra_202 = memset(ra_23, Mem148[s0_15 + 156<i32>:int32] + 0xC<32>, 0<32>, 8<32>, out t1_594, out a0_595, out a1_596, out a2_597, out a3_598, out a4_599, out a5_600)
	word32 a0_205 = Mem148[s0_15 + 156<i32>:int32]
l23023866_thunk_memset:
	word32 a3_218
	word32 t1_601
	word32 a1_603
	word32 a0_602
	word32 a4_605
	word32 a5_606
	word32 a2_604
	word32 ra_221 = memset(ra_202, a0_205 + 0x14<32>, 0<32>, 2<32>, out t1_601, out a0_602, out a1_603, out a2_604, out a3_218, out a4_605, out a5_606)
	s0Out = s0_15
	a3Out = a3_218
	mstatusOut = mstatus
	return ra_221
l23023786:
	word32 a3_228
	word32 a3_258
	word32 a4_259
	word32 s1_262
	word32 s9_578
	word32 s10_579
	word32 s8_577
	word32 s7_576
	word32 t4_581
	word32 s11_580
	word32 s3_572
	word32 s4_573
	word32 s6_575
	word32 s5_574
	word32 a2_568
	word32 a5_569
	word32 s2_571
	word32 a7_570
	word32 s0_565
	word32 a1_567
	word32 a0_566
	word32 ra_261 = printf(bt_addr_le_str_real(ra_23, s3_77, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_565, out a3_228), 0x23075884<32>, a3_228, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_262, out a0_566, out a1_567, out a2_568, out a3_258, out a4_259, out a5_569, out a7_570, out s2_571, out s3_572, out s4_573, out s5_574, out s6_575, out s7_576, out s8_577, out s9_578, out s10_579, out s11_580, out t4_581)
l230237AA_thunk_smp_error:
	word32 a3_286
	word32 mstatus_291
	word32 s0_293
	word32 s1_582
	word32 a4_583
	word32 s5_585
	word32 s3_584
	word32 ra_292 = smp_error(ra_261, s1_262, s1_262, 8<32>, a3_258, a4_259, mstatus, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, dwArg54, dwArg5C, s3, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_293, out s1_582, out a3_286, out a4_583, out s3_584, out s5_585, out mstatus_291)
	s0Out = s0_293
	a3Out = a3_286
	mstatusOut = mstatus_291
	return ra_292
bt_smp_update_keys_exit:


word32 bt_smp_init(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_init
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_init_entry:
l23023882:
	word32 a3_18
	word32 s5_33
	word32 s1_115
	word32 a0_116
	word32 a1_117
	word32 a4_118
	word32 a5_119
	word32 s2_120
	word32 s3_121
	word32 s4_122
	word32 s6_123
	word32 s7_124
	word32 s8_125
	word32 s9_126
	word32 ra_30 = k_sem_init(ra, s0, 0x4201A458<32>, 0<32>, 1<32>, a3, a4, a5, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgD8, dwArg0118, out s1_115, out a0_116, out a1_117, out a3_18, out a4_118, out a5_119, out s2_120, out s3_121, out s4_122, out s5_33, out s6_123, out s7_124, out s8_125, out s9_126)
	Mem47[0x4200E18C<32>:byte] = SLICE(CONVERT((CONVERT(Mem9[0x4200D39A<32>:byte], byte, word32) & 6<32>) <u 0xFFFFFFF9<32>, bool, word32), byte, 0)
	word32 a3_51
	word32 a4_52
	word32 s1_54
	word32 mstatus_62
	word32 s3_66
	word32 s5_67
	word32 ra_63 = bt_pub_key_gen(ra_30, 0x4200DBB8<32>, a3_18, s5_33, mstatus, dwArg08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg48, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s1_54, out a3_51, out a4_52, out s3_66, out s5_67, out mstatus_62)
	s1Out = s1_54
	a0Out = 0<32>
	a3Out = a3_51
	a4Out = a4_52
	s3Out = s3_66
	s5Out = s5_67
	mstatusOut = mstatus_62
	return ra_63
bt_smp_init_exit:


word32 bt_keys_find_addr.part.2(word32 a0, word32 a1, word32 dwArg38, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_keys_find_addr
//      bt_conn_security_changed
// MayUse:  a0:[0..31] a1:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
bt_keys_find_addr.part.2_entry:
l230238C2:
	word32 a5_29
	word32 a0_41
	word32 a0_21
	branch CONVERT(Mem5[0x42011D3C<32>:byte], byte, word32) == a0 l230238FA
l230238FA:
	word32 a1_113
	word32 a2_114
	word32 a5_115
	a0_21 = memcmp(0x42011D3D<32>, a1, 7<32>, out a1_113, out a2_114, out a3, out a4, out a5_115)
	branch a0_21 != 0<32> l230238E0
l230238E0:
	a5_29 = CONVERT(Mem13[0x42011DC0<32>:byte], byte, word32)
	branch a5_29 != a0 l23023912
l230238E8:
	word32 a1_111
	word32 a2_112
	branch memcmp(0x42011DC1<32>, a1, 7<32>, out a1_111, out a2_112, out a3, out a4, out a5_29) != 0<32> l23023912
l23023912:
	a0_41 = 0<32>
l230238F6:
	a0_21 = 1<32>
l23023906:
	a5_29 = 132<i32>
	a0_41 = a0_21 + 0x42011DC0<32>
l23023914:
	0<32> = dwArg38
	a0Out = a0_41
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_29
	s2Out = a1
	return a0
bt_keys_find_addr.part.2_exit:


word32 bt_keys_find.part.1(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_keys_find
//      bt_keys_get_type
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
bt_keys_find.part.1_entry:
l23023920:
	word32 a0_101
	word32 a0_35
	word32 a5_116 = CONVERT(Mem15[0x42011D46<32>:uint16], uint16, word32) & a0
	branch a5_116 == 0<32> l2302395C
l23023946:
	a5_116 = CONVERT(Mem15[0x42011D3C<32>:byte], byte, word32)
	branch a5_116 != a1 l2302395C
l2302394E:
	word32 a2_140
	word32 a1_139
	branch memcmp(0x42011D3D<32>, a2, 7<32>, out a1_139, out a2_140, out a3, out a4, out a5_116) == 0<32> l23023990
l23023990:
	a0_35 = 0<32>
l2302395C:
	branch (CONVERT(Mem15[0x42011DCA<32>:uint16], uint16, word32) & a0) == 0<32> l23023994
l23023966:
	a5_116 = CONVERT(Mem15[0x42011DC0<32>:byte], byte, word32)
	branch a5_116 != a1 l23023994
l2302396E:
	word32 a1_141
	word32 a2_142
	branch memcmp(0x42011DC1<32>, a2, 7<32>, out a1_141, out a2_142, out a3, out a4, out a5_116) != 0<32> l23023994
l23023994:
	a0_101 = 0<32>
l2302397C:
	a0_35 = 132<i32>
l23023980:
	a0_101 = a0_35 + 0x42011D3C<32>
l23023982:
	s1Out = a2
	a0Out = a0_101
	a3Out = a3
	a4Out = a4
	a5Out = a5_116
	s2Out = a1
	s3Out = a0
	s4Out = dwArg04
	return 0x42011D3C<32>
bt_keys_find.part.1_exit:


word32 bt_keys_get_addr(word32 ra, word32 s0, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      update_keys_check
//      smp_pairing_req
//      smp_public_key
//      bt_smp_start_security
//      bt_smp_update_keys
//      bt_keys_get_type
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_keys_get_addr_entry:
l23023998:
	word32 a3_152
	word32 a4_153
	word32 a5_151
	word32 s2_156
	word32 s2_33
	word32 s3_130 = a0
	word32 s4_131 = a1
	word32 s1_126 = 0x42011D3C<32>
	branch CONVERT(Mem5[0x42011D3C<32>:byte], byte, word32) != a0 l230239CE
l230239C2:
	word32 a1_584
	word32 a2_585
	branch memcmp(0x42011D3D<32>, a1, 7<32>, out a1_584, out a2_585, out a3_152, out a4_153, out a5_151) == 0<32> l23023AB2
l23023AB2:
	s2_33 = 0<32>
l230239CE:
	word32 s0_161 = 0<32>
	word32 a1_579
	word32 a2_580
	word32 a3_581
	word32 a4_582
	word32 a5_583
	branch memcmp(0x42011D3D<32>, fp + -48<i32>, 7<32>, out a1_579, out a2_580, out a3_581, out a4_582, out a5_583) == 0<32> l230239F0
l230239E6:
	s0_161 = CONVERT(CONVERT(Mem41[0x42011D44<32>:byte], byte, word32) != 0<32>, bool, word32) << 1<i32>
l230239F0:
	branch CONVERT(Mem41[0x42011DC0<32>:byte], byte, word32) != a0 l23023A06
l230239F8:
	word32 a1_586
	word32 a2_587
	branch memcmp(0x42011DC1<32>, a1, 7<32>, out a1_586, out a2_587, out a3_152, out a4_153, out a5_151) == 0<32> l23023AC8
l23023AC8:
	s2_33 = 132<i32>
l23023AB4:
	s2_156 = s2_33 + 0x42011D3C<32>
l23023A06:
	branch s0_161 != 2<32> l23023A78
l23023A0C:
	word32 dwLoc2C_397 = SEQ(bLoc29, 0<8>, 0<16>)
	word32 a1_592
	word32 a3_594
	word32 a2_593
	word32 a4_595
	word32 a5_596
	branch memcmp(0x42011DC1<32>, fp + -48<i32>, 7<32>, out a1_592, out a2_593, out a3_594, out a4_595, out a5_596) == 0<32> l23023ACE
l23023A24:
	branch CONVERT(Mem84[0x42011DC8<32>:byte], byte, word32) == 0<32> l23023ACE
l23023ACE:
	s0_161 = 1<32>
l23023A2A:
	word32 s0_95 = 0x42011DC0<32>
	branch Mem84[0x42011E40<32>:int32] <u Mem84[0x42011DBC<32>:int32] l23023A3C
l23023A3A:
	s0_95 = 0x42011D3C<32>
l23023A3C:
	word32 s2_100 = s0_95 + 1<i32>
	word32 s0_125
	word32 s2_129
	word32 a0_597
	word32 a3_598
	ra = bt_unpair(ra, s0_95, 0x42011D3C<32>, CONVERT(Mem84[s0_95:byte], byte, word32), s2_100, s2_100, a1, mstatus, dwLoc2C_397, dwLoc28, s4, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg44, dwArg48, dwArg4C, dwArg58, s3, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_125, out s1_126, out a0_597, out a3_598, out s2_129, out s3_130, out s4_131, out s5, out mstatus)
	s2_156 = 0<32>
	word32 a1_599
	word32 a2_600
	branch memcmp(s2_129, fp + -40<i32>, 7<32>, out a1_599, out a2_600, out a3_152, out a4_153, out a5_151) != 0<32> l23023AB6
l23023A62:
	s0_161 = (s0_125 - s1_126 >> 2<i32>) + 0x3E0F83E1<32>
	a5_151 = 1<32>
	branch s0_161 >u 1<32> l23023AB6
l23023A78:
	word32 s0_165 = s0_161 + 132<i32>
	s2_156 = s1_126 + s0_165
	Mem177[s2_156:byte] = SLICE(s3_130, byte, 0)
	word32 a5_180
	word32 a4_589
	word32 a2_588
	word32 a6_590
	word32 a7_591
	memcpy(s1_126 + (s0_165 + 1<32>), s4_131, 7<32>, out a2_588, out a3_152, out a4_589, out a5_180, out a6_590, out a7_591)
	a4_153 = Mem177[a5_180:word32]
	Mem195[a5_180 + 1<32>:word32] = a4_153
	Mem196[s2_156 + 128<i32>:word32] = a5_180 + 1<32>
	Mem198[0x4200E194<32>:word32] = s2_156
	a5_151 = 0x4200E000<32>
l23023AB6:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_126
	a0Out = s2_156
	a3Out = a3_152
	a4Out = a4_153
	a5Out = a5_151
	s2Out = s2_156
	s3Out = s3_130
	s4Out = s4_131
	s5Out = s5
	mstatusOut = mstatus
	return ra
bt_keys_get_addr_exit:


word32 bt_keys_foreach(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg00, word32 dwArg04, word32 dwArg28, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_id_del
//      enh_conn_complete
//      bt_keys_clear_all
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31]
// LiveOut: ra s0 s1 s2 s4
// Trashed: a0 a1 a2 a5 a6 ra s0 s1 s2 s4 s8 t1 t3
// Preserved: sp
bt_keys_foreach_entry:
l23023AD2:
	word32 s2_26 = a0
	word32 s0_18 = a1
	word32 s1_19 = 0x42011D3C<32>
	branch (CONVERT(Mem14[0x42011D46<32>:uint16], uint16, word32) & a0) == 0<32> l23023B02
l23023AF6:
	word32 sp_25
	word32 t1_34
	call a1 (retsize: 0;)
		uses: a0:0x42011D3C<32>,a1:a2,a2:a2,ra:ra,s0:a1,s1:0x42011D3C<32>,s2:a0,Stack +0084:a2,t1:t1_34
		defs: ra:ra_30,s0:s0_28,s1:s1_29,s2:s2_26,sp:sp_25,t1:t1_34
	a2 = Mem24[sp_25 + 132<i32>:word32]
l23023B02:
	branch (CONVERT(Mem41[s1_19 + 142<i32>:uint16], uint16, word32) & s2_26) == 0<32> l23023B20
l23023B20:
	s0Out = s0_18
	s1Out = s1_19
	s2Out = s2_26
	s4Out = dwArg04
	return ra
l23023B0C:
	word32 s2_63
	word32 s0_65
	word32 s1_66
	word32 ra_67
	word32 t1_71
	word32 s4_75
	call s0_18 (retsize: 0;)
		uses: a0:s1_40 + 132<i32>,a1:a2_58,a2:a2_58,a6:dwArg28,ra:ra_61,s0:s0_51,s1:s1_40,s2:s2_43,s4:dwArg04,s8:dwLoc1C,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +FFFFFFE4:dwLoc1C,t1:t1_71,t3:dwArg00
		defs: ra:ra_67,s0:s0_65,s1:s1_66,s2:s2_63,s4:s4_75,t1:t1_71
	s0Out = s0_65
	s1Out = s1_66
	s2Out = s2_63
	s4Out = s4_75
	return ra_67
bt_keys_foreach_exit:


word32 bt_keys_find(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_keys_check.part.5
//      smp_security_request
//      bt_smp_request_ltk
//      bt_smp_sign_verify
//      bt_smp_sign
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
bt_keys_find_entry:
l23023B2C:
l23023B2C_thunk_bt_keys_find.part.1:
	word32 a0_6
	word32 a5_8
	word32 s1_11
	word32 s2_12
	word32 s3_13
	word32 s4_14
	word32 a3_18
	word32 a4_19
	word32 s0_10 = bt_keys_find.part.1(a0, a1, a2, out s1_11, out a0_6, out a3_18, out a4_19, out a5_8, out s2_12, out s3_13, out s4_14)
	s1Out = s1_11
	a0Out = a0_6
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_8
	s2Out = s2_12
	s3Out = s3_13
	s4Out = s4_14
	return s0_10
bt_keys_find_exit:


word32 bt_keys_get_type(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_ident_info
//      smp_encrypt_info
//      smp_signing_info
//      smp_master_ident
//      smp_ident_addr_info
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_keys_get_type_entry:
l23023B30:
	word32 a4_154
	word32 a5_155
	word32 a3_110
	word32 a0_108
	word32 s1_118
	word32 s2_123
	word32 s3_124
	word32 s4_125
	word32 s0_22 = bt_keys_find.part.1(a0, a1, a2, out s1_118, out a0_108, out a3_110, out a4_154, out a5_155, out s2_123, out s3_124, out s4_125)
	branch a0_108 != 0<32> l23023B5A
l23023B46:
	word32 s0_43
	word32 a4_156
	word32 a5_157
	ra = bt_keys_get_addr(ra, s0_22, s1_118, s2_123, s2_123, s3_124, s4_125, mstatus, s2, s0, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_43, out s1_118, out a0_108, out a3_110, out a4_156, out a5_157, out s2_123, out s3_124, out s4_125, out s5, out mstatus)
	branch a0_108 == 0<32> l23023B5A
l23023B50:
	Mem66[a0_108 + 10<i32>:word16] = SLICE(s0_43 | CONVERT(Mem11[a0_108 + 10<i32>:uint16], uint16, word32), word16, 0)
l23023B5A:
	0<32> = dwArg38
	s1Out = s1_118
	a0Out = a0_108
	a3Out = a3_110
	s2Out = s2_123
	s3Out = s3_124
	s4Out = s4_125
	s5Out = s5
	mstatusOut = mstatus
	return ra
bt_keys_get_type_exit:


word32 bt_keys_find_irk(word32 ra, word32 a0, word32 a1, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_lookup_id_addr
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a0 ra s0 s1 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bt_keys_find_irk_entry:
l23023B66:
	branch CONVERT(Mem0[a1:byte], byte, word32) == 1<32> l23023B74
l23023B74:
	branch (CONVERT(Mem0[a1 + 6<i32>:byte], byte, word32) & 192<i32>) != 64<i32> l23023B70
l23023B84:
	word32 a0_151
	word32 a0_153
	word32 s1_100 = a1
	word32 s2_117 = a0
	word32 s0_115 = 0x42011D3C<32>
	branch (CONVERT(Mem22[0x42011D46<32>:uint16], uint16, word32) & 2<32>) == 0<32> l23023BC0
l23023BA8:
	branch CONVERT(Mem22[0x42011D3C<32>:byte], byte, word32) != a0 l23023BC0
l23023BB0:
	word32 a5_404
	word32 a4_403
	word32 a2_401
	word32 a3_402
	word32 a1_400
	branch memcmp(a1 + 1<i32>, 0x42011D72<32>, 6<32>, out a1_400, out a2_401, out a3_402, out a4_403, out a5_404) == 0<32> l23023BE8
l23023BE8:
	a0_153 = 0<32>
l23023BC0:
	branch (CONVERT(Mem22[0x42011DCA<32>:uint16], uint16, word32) & 2<32>) == 0<32> l23023BEC
l23023BC8:
	branch CONVERT(Mem22[0x42011DC0<32>:byte], byte, word32) != a0 l23023BEC
l23023BD0:
	word32 a5_409
	word32 a4_408
	word32 a3_407
	word32 a1_405
	word32 a2_406
	branch memcmp(a1 + 1<i32>, 0x42011DF6<32>, 6<32>, out a1_405, out a2_406, out a3_407, out a4_408, out a5_409) != 0<32> l23023BEC
l23023BEC:
	branch (CONVERT(Mem22[0x42011D46<32>:uint16], uint16, word32) & 2<32>) == 0<32> l23023C0C
l23023BF4:
	branch CONVERT(Mem22[0x42011D3C<32>:byte], byte, word32) != a0 l23023C0C
l23023BFC:
	word32 a0_68
	ra = bt_rpa_irk_matches(ra, 0x42011D62<32>, a1 + 1<i32>, out s0_115, out s1_100, out a0_68, out s2_117, out s3, out s5)
	branch a0_68 != 0<32> l23023C40
l23023C40:
	s1_100 = 0<32>
l23023C0C:
	branch (CONVERT(Mem22[s0_115 + 142<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l23023C30
l23023C14:
	branch CONVERT(Mem22[s0_115 + 132<i32>:byte], byte, word32) != s2_117 l23023C30
l23023C1C:
	word32 a0_105
	word32 s1_410
	ra = bt_rpa_irk_matches(ra, s0_115 + 170<i32>, s1_100 + 1<i32>, out s0_115, out s1_410, out a0_105, out s2_117, out s3, out s5)
	s1_100 = 132<i32>
	branch a0_105 != 0<32> l23023C42
l23023C42:
	word32 a7_416
	word32 a5_414
	word32 a6_415
	word32 a4_413
	word32 a3_412
	word32 a2_411
	memcpy(s1_100 + 54<i32> + s0_115, s3, 6<32>, out a2_411, out a3_412, out a4_413, out a5_414, out a6_415, out a7_416)
	a0_151 = s0_115 + s1_100
l23023C30:
	a0_151 = 0<32>
l23023BE0:
	a0_153 = 132<i32>
l23023BE4:
	a0_151 = a0_153 + 0x42011D3C<32>
l23023C32:
	s0Out = s0_115
	s1Out = s1_100
	a0Out = a0_151
	s2Out = s2_117
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s8Out = dwLoc1C
	return ra
l23023B70:
	s0Out = s0
	s1Out = s1
	a0Out = 0<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	return ra
bt_keys_find_irk_exit:


word32 bt_keys_find_addr(word32 a0, word32 a1, word32 dwArg38, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_unpair
//      bt_addr_le_is_bonded
//      legacy_request_tk
// MayUse:  a0:[0..31] a1:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: sp
bt_keys_find_addr_entry:
l23023C56:
l23023C56_thunk_bt_keys_find_addr.part.2:
	word32 a0_6
	word32 a2_8
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 s2_13
	word32 s1_12 = bt_keys_find_addr.part.2(a0, a1, dwArg38, out a0_6, out a2_8, out a3_9, out a4_10, out a5_11, out s2_13)
	a0Out = a0_6
	a2Out = a2_8
	a3Out = a3_9
	a4Out = a4_10
	a5Out = a5_11
	s2Out = s2_13
	return s1_12
bt_keys_find_addr_exit:


void bt_keys_add_type(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_distribute_keys
//      bt_smp_update_keys
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a1 a5
// Preserved: sp
bt_keys_add_type_entry:
l23023C5A:
	Mem8[a0 + 10<i32>:word16] = SLICE(a1 | CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32), word16, 0)
	return
bt_keys_add_type_exit:


word32 bt_keys_clear(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_unpair
//      smp_pairing_failed
//      smp_timeout
//      bt_smp_disconnected
//      bt_smp_update_keys
//      keys_clear_id
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: a6 a7 mstatus s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t3 t4 t5 t6 tp
bt_keys_clear_entry:
l23023C66:
	word32 s0_10 = a0
	branch (CONVERT(Mem7[a0 + 10<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l23023C7A
l23023C76:
	ra = bt_id_del(ra, s1, a3, s2, s3, s4, mstatus, dwLoc10, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_10)
l23023C7A:
l23023C88_thunk_memset:
	word32 a3_60
	word32 a4_61
	word32 t1_137
	word32 a0_138
	word32 a1_139
	word32 a2_140
	word32 a5_141
	word32 ra_63 = memset(ra, s0_10, 0<32>, 132<i32>, out t1_137, out a0_138, out a1_139, out a2_140, out a3_60, out a4_61, out a5_141)
	a3Out = a3_60
	a4Out = a4_61
	return ra_63
bt_keys_clear_exit:


void keys_clear_id(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
keys_clear_id_entry:
l23023C8C:
	branch CONVERT(Mem0[a1:byte], byte, word32) != CONVERT(Mem0[a0:byte], byte, word32) l23023C9C
l23023C9C:
	return
l23023C98:
l23023C98_thunk_bt_keys_clear:
	word32 a3_68
	word32 a4_69
	bt_keys_clear(ra, s0, s1, a0, a3, s2, s3, s4, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out a3_68, out a4_69)
	return
keys_clear_id_exit:


word32 bt_keys_clear_all(word32 ra, word32 dwArg08, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_unpair
// MayUse:  ra:[0..31] Stack +0008:[0..31]
// LiveOut: ra s0 s1 s2
// Trashed: a0 a1 a2 a5 a6 ra s0 s1 s2 s4 s8 t1 t3
// Preserved: sp
bt_keys_clear_all_entry:
l23023C9E:
	word32 s0_15
	word32 s1_16
	word32 s2_17
	word32 s4_36
	word32 ra_23 = bt_keys_foreach(ra, 63<i32>, 0x23023C8C<32>, fp + 0xFFFFFFEF<32>, dwLoc20, dwLoc1C, dwArg08, out s0_15, out s1_16, out s2_17, out s4_36)
	s0Out = s0_15
	s1Out = s1_16
	s2Out = s2_17
	return ra_23
bt_keys_clear_all_exit:


word32 bt_keys_update_usage(word32 a0, word32 a1, word32 dwArg28, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_security_changed
// MayUse:  a0:[0..31] a1:[0..31] Stack +0028:[0..31]
// LiveOut: a0 a3 a4 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: sp
bt_keys_update_usage_entry:
l23023CC0:
	word32 a0_8
	word32 s2_15
	word32 a2_45
	word32 a5_46
	word32 a3_11
	word32 a4_12
	word32 s1_14 = bt_keys_find_addr.part.2(a0, a1, dwArg28, out a0_8, out a2_45, out a3_11, out a4_12, out a5_46, out s2_15)
	branch a0_8 == 0<32> l23023CEC
l23023CCA:
	word32 a5_18 = Mem5[a4_12:word32]
	branch a4_12 == a0_8 l23023CEC
l23023CD8:
	a3_11 = Mem5[a4_12:word32]
	Mem21[a0_8:word32] = a5_18
	Mem23[a4_12 + 1<32>:word32] = a3_11
	Mem24[a0_8 + 128<i32>:word32] = a4_12 + 1<32>
	a4_12 = a4_12 + 1<32>
l23023CEC:
	a0Out = a0_8
	a3Out = a3_11
	a4Out = a4_12
	s2Out = s2_15
	return s1_14
bt_keys_update_usage_exit:


void notify_func(word32 ra, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
notify_func_entry:
l23023CF2:
	branch CONVERT(Mem7[a1 + 40<i32>:uint16], uint16, word32) != 0<32> l23023D1A
l23023D1A:
	word32 s1_101
	word32 a0_102
	word32 a1_103
	word32 a2_104
	word32 a3_105
	word32 a4_106
	word32 a5_107
	word32 a7_108
	word32 s2_109
	word32 s3_110
	word32 s4_111
	word32 s5_112
	word32 s6_113
	word32 s7_114
	word32 s8_115
	word32 s9_116
	word32 s10_117
	word32 s11_118
	word32 t4_119
	printf(ra, 0x23076490<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_101, out a0_102, out a1_103, out a2_104, out a3_105, out a4_106, out a5_107, out a7_108, out s2_109, out s3_110, out s4_111, out s5_112, out s6_113, out s7_114, out s8_115, out s9_116, out s10_117, out s11_118, out t4_119)
l23023CFE:
	word32 s1_120
	word32 a0_121
	word32 a1_122
	word32 a2_123
	word32 a3_124
	word32 a4_125
	word32 a5_126
	word32 a7_127
	word32 s2_128
	word32 s3_129
	word32 s4_130
	word32 s5_131
	word32 s6_132
	word32 s7_133
	word32 s8_134
	word32 s9_135
	word32 s10_136
	word32 s11_137
	word32 t4_138
	printf(ra, 0x23076480<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_120, out a0_121, out a1_122, out a2_123, out a3_124, out a4_125, out a5_126, out a7_127, out s2_128, out s3_129, out s4_130, out s5_131, out s6_132, out s7_133, out s8_134, out s9_135, out s10_136, out s11_137, out t4_138)
	Mem63[a1 + 36<i32>:word16] = 0<16>
l23023D12:
	return
notify_func_exit:


void le_param_updated(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
le_param_updated_entry:
l23023D2C:
l23023D34_thunk_printf:
	word32 s1_36
	word32 a0_37
	word32 a1_38
	word32 a2_39
	word32 a3_40
	word32 a4_41
	word32 a5_42
	word32 a7_43
	word32 s2_44
	word32 s3_45
	word32 s4_46
	word32 s5_47
	word32 s6_48
	word32 s7_49
	word32 s8_50
	word32 s9_51
	word32 s10_52
	word32 s11_53
	word32 t4_54
	printf(ra, 0x2307644C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_36, out a0_37, out a1_38, out a2_39, out a3_40, out a4_41, out a5_42, out a7_43, out s2_44, out s3_45, out s4_46, out s5_47, out s6_48, out s7_49, out s8_50, out s9_51, out s10_52, out s11_53, out t4_54)
	return
le_param_updated_exit:


void ble_set_tx_pwr(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_set_tx_pwr_entry:
l23023D38:
	word32 a0_113
	branch a2 == 2<32> l23023D50
l23023D50:
	word32 a3_15
	word32 a0_221
	get_uint8_from_string(s0, a3 + 4<i32>, fp + 0xFFFFFFEF<32>, out a0_221, out a3_15)
	word32 a0_24 = CONVERT(bLoc11, byte, word32)
	branch a0_24 <=u 0x14<32> l23023D7C
l23023D7C:
	word32 a0_30
	ra = bt_set_tx_pwr(ra, s1, CONVERT(SLICE(a0_24, byte, 0), byte, int32), mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg28, dwArg34, dwArg38, dwArg3C, dwArg54, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out a0_30, out a3)
	branch a0_30 == 0<32> l23023D96
l23023D96:
	a0_113 = 0x23075F30<32>
l23023D88:
	word32 s1_241
	word32 a0_242
	word32 a1_243
	word32 a2_244
	word32 a3_245
	word32 a4_246
	word32 a5_247
	word32 a7_248
	word32 s2_249
	word32 s3_250
	word32 s4_251
	word32 s5_252
	word32 s6_253
	word32 s7_254
	word32 s8_255
	word32 s9_256
	word32 s10_257
	word32 s11_258
	word32 t4_259
	printf(ra, 0x23075F00<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_241, out a0_242, out a1_243, out a2_244, out a3_245, out a4_246, out a5_247, out a7_248, out s2_249, out s3_250, out s4_251, out s5_252, out s6_253, out s7_254, out s8_255, out s9_256, out s10_257, out s11_258, out t4_259)
l23023D66:
	word32 s1_222
	word32 a0_223
	word32 a1_224
	word32 a2_225
	word32 a3_226
	word32 a4_227
	word32 a5_228
	word32 a7_229
	word32 s2_230
	word32 s3_231
	word32 s4_232
	word32 s5_233
	word32 s6_234
	word32 s7_235
	word32 s8_236
	word32 s9_237
	word32 s10_238
	word32 s11_239
	word32 t4_240
	printf(ra, 0x23075EBC<32>, a3_15, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_222, out a0_223, out a1_224, out a2_225, out a3_226, out a4_227, out a5_228, out a7_229, out s2_230, out s3_231, out s4_232, out s5_233, out s6_234, out s7_235, out s8_236, out s9_237, out s10_238, out s11_239, out t4_240)
l23023D42:
	a0_113 = 0x23075E94<32>
l23023D4A:
	word32 s1_260
	word32 a0_261
	word32 a1_262
	word32 a2_263
	word32 a3_264
	word32 a4_265
	word32 a5_266
	word32 a7_267
	word32 s2_268
	word32 s3_269
	word32 s4_270
	word32 s5_271
	word32 s6_272
	word32 s7_273
	word32 s8_274
	word32 s9_275
	word32 s10_276
	word32 s11_277
	word32 t4_278
	printf(ra, a0_113, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_260, out a0_261, out a1_262, out a2_263, out a3_264, out a4_265, out a5_266, out a7_267, out s2_268, out s3_269, out s4_270, out s5_271, out s6_272, out s7_273, out s8_274, out s9_275, out s10_276, out s11_277, out t4_278)
l23023D76:
	return
ble_set_tx_pwr_exit:


void ble_unsubscribe(word32 ra, word32 s1, word32 a3, word32 s2, word32 s3, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg6C, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgB8, word32 dwArgBC, word32 dwArgC4, word32 dwArgD8, word32 dwArgE0, word32 dwArgE4, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C4:[0..31] Stack +00D8:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_unsubscribe_entry:
l23023DA0:
	word32 a0_51
	word32 a0_5 = Mem0[0x4200E19C<32>:int32]
	branch a0_5 != 0<32> l23023DB6
l23023DB6:
	branch CONVERT(Mem0[0x420120D8<32>:uint16], uint16, word32) != 0<32> l23023DCE
l23023DCE:
	dwArg74 = ra
	word32 a0_19
	word32 s0_211
	word32 s1_212
	word32 a5_213
	word32 s2_214
	word32 s3_215
	word32 s4_216
	word32 s5_217
	word32 s6_218
	word32 mstatus_219
	ra = bt_gatt_unsubscribe(ra, s1, a0_5, 0x420120B4<32>, a3, s2, s3, s6, mstatus, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg38, dwArg58, dwArg6C, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgB8, dwArgC4, dwArgD8, dwArgE0, dwArgE4, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s0_211, out s1_212, out a0_19, out a3, out a5_213, out s2_214, out s3_215, out s4_216, out s5_217, out s6_218, out mstatus_219)
	branch a0_19 == 0<32> l23023DEE
l23023DEE:
	a0_51 = 0x23076164<32>
l23023DDE:
l23023DEA_thunk_printf:
	word32 s1_220
	word32 a0_221
	word32 a1_222
	word32 a2_223
	word32 a3_224
	word32 a4_225
	word32 a5_226
	word32 a7_227
	word32 s2_228
	word32 s3_229
	word32 s4_230
	word32 s5_231
	word32 s6_232
	word32 s7_233
	word32 s8_234
	word32 s9_235
	word32 s10_236
	word32 s11_237
	word32 t4_238
	printf(ra, 0x23076144<32>, a3, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_220, out a0_221, out a1_222, out a2_223, out a3_224, out a4_225, out a5_226, out a7_227, out s2_228, out s3_229, out s4_230, out s5_231, out s6_232, out s7_233, out s8_234, out s9_235, out s10_236, out s11_237, out t4_238)
	return
l23023DC4:
	a0_51 = 0x2307612C<32>
l23023DAA:
	a0_51 = 0x2307611C<32>
l23023DB2:
l23023DB2_thunk_printf:
	word32 s1_192
	word32 a0_193
	word32 a1_194
	word32 a2_195
	word32 a3_196
	word32 a4_197
	word32 a5_198
	word32 a7_199
	word32 s2_200
	word32 s3_201
	word32 s4_202
	word32 s5_203
	word32 s6_204
	word32 s7_205
	word32 s8_206
	word32 s9_207
	word32 s10_208
	word32 s11_209
	word32 t4_210
	printf(ra, a0_51, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_192, out a0_193, out a1_194, out a2_195, out a3_196, out a4_197, out a5_198, out a7_199, out s2_200, out s3_201, out s4_202, out s5_203, out s6_204, out s7_205, out s8_206, out s9_207, out s10_208, out s11_209, out t4_210)
	return
ble_unsubscribe_exit:


void write_func(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
write_func_entry:
l23023DFC:
	word32 s1_54
	word32 a0_55
	word32 a1_56
	word32 a2_57
	word32 a3_58
	word32 a4_59
	word32 a5_60
	word32 a7_61
	word32 s2_62
	word32 s3_63
	word32 s4_64
	word32 s5_65
	word32 s6_66
	word32 s7_67
	word32 s8_68
	word32 s9_69
	word32 s10_70
	word32 s11_71
	word32 t4_72
	word32 ra_17 = printf(ra, 0x23076730<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_54, out a0_55, out a1_56, out a2_57, out a3_58, out a4_59, out a5_60, out a7_61, out s2_62, out s3_63, out s4_64, out s5_65, out s6_66, out s7_67, out s8_68, out s9_69, out s10_70, out s11_71, out t4_72)
l23023E1E_thunk_memset:
	word32 t1_73
	word32 a0_74
	word32 a1_75
	word32 a2_76
	word32 a3_77
	word32 a4_78
	word32 a5_79
	memset(ra_17, 0x420120E8<32>, 0<32>, 40<i32>, out t1_73, out a0_74, out a1_75, out a2_76, out a3_77, out a4_78, out a5_79)
	return
write_func_exit:


void ble_exchange_mtu(word32 ra, word32 s1, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgBC, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_exchange_mtu_entry:
l23023E22:
	word32 a0_48
	word32 a0_5 = Mem0[0x4200E19C<32>:int32]
	branch a0_5 != 0<32> l23023E38
l23023E38:
	Mem14[0x23023E90<32>:word32] = 0x42011E70<32>
	dwArg74 = ra
	word32 a0_17
	ra = bt_gatt_exchange_mtu(ra, s1, a0_5, mstatus, dwArg08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg9C, dwArgA8, dwArgC8, out a0_17, out a3)
	branch a0_17 == 0<32> l23023E6A
l23023E6A:
	a0_48 = 0x23075BD4<32>
l23023E5A:
l23023E66_thunk_printf:
	word32 s1_196
	word32 a0_197
	word32 a1_198
	word32 a2_199
	word32 a3_200
	word32 a4_201
	word32 a5_202
	word32 a7_203
	word32 s2_204
	word32 s3_205
	word32 s4_206
	word32 s5_207
	word32 s6_208
	word32 s7_209
	word32 s8_210
	word32 s9_211
	word32 s10_212
	word32 s11_213
	word32 t4_214
	printf(ra, 0x23075BB8<32>, a3, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_196, out a0_197, out a1_198, out a2_199, out a3_200, out a4_201, out a5_202, out a7_203, out s2_204, out s3_205, out s4_206, out s5_207, out s6_208, out s7_209, out s8_210, out s9_211, out s10_212, out s11_213, out t4_214)
	return
l23023E2C:
	a0_48 = 0x2307611C<32>
l23023E34:
l23023E34_thunk_printf:
	word32 s1_177
	word32 a0_178
	word32 a1_179
	word32 a2_180
	word32 a3_181
	word32 a4_182
	word32 a5_183
	word32 a7_184
	word32 s2_185
	word32 s3_186
	word32 s4_187
	word32 s5_188
	word32 s6_189
	word32 s7_190
	word32 s8_191
	word32 s9_192
	word32 s10_193
	word32 s11_194
	word32 t4_195
	printf(ra, a0_48, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_177, out a0_178, out a1_179, out a2_180, out a3_181, out a4_182, out a5_183, out a7_184, out s2_185, out s3_186, out s4_187, out s5_188, out s6_189, out s7_190, out s8_191, out s9_192, out s10_193, out s11_194, out t4_195)
	return
ble_exchange_mtu_exit:


void exchange_func(word32 ra, word32 a0, word32 a1, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg70, word32 dwArg74, word32 dwArg7C, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
exchange_func_entry:
l23023E78:
	branch a1 == 0<32> l23023EA0
l23023EA0:
l23023E7E:
l23023E86:
	word32 a3_22
	word32 a0_116
	word32 s2_117
	word32 s10_118
	word32 ra_26 = bt_gatt_get_mtu(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out a0_116, out a3_22, out s2_117, out s10_118)
l23023E9C_thunk_printf:
	word32 s6_109
	word32 s5_108
	word32 s4_107
	word32 s3_106
	word32 s2_105
	word32 a7_104
	word32 a5_103
	word32 a4_102
	word32 a3_101
	word32 a2_100
	word32 a1_99
	word32 a0_98
	word32 s1_97
	word32 s7_110
	word32 s8_111
	word32 s9_112
	word32 s10_113
	word32 s11_114
	word32 t4_115
	printf(ra_26, 0x23076410<32>, a3_22, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_97, out a0_98, out a1_99, out a2_100, out a3_101, out a4_102, out a5_103, out a7_104, out s2_105, out s3_106, out s4_107, out s5_108, out s6_109, out s7_110, out s8_111, out s9_112, out s10_113, out s11_114, out t4_115)
	return
exchange_func_exit:


void ble_auth_pairing_confirm(word32 ra, word32 s0, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_auth_pairing_confirm_entry:
l23023EAA:
	word32 a0_5 = Mem0[0x4200E19C<32>:int32]
	branch a0_5 != 0<32> l23023EC0
l23023EC0:
l23023EC0_thunk_bt_conn_auth_pairing_confirm:
	bt_conn_auth_pairing_confirm(ra, s0, a0_5, a3, s2, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg64, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0158)
	return
l23023EB4:
l23023EBC_thunk_printf:
	word32 s1_144
	word32 a0_145
	word32 a1_146
	word32 a2_147
	word32 a3_148
	word32 a4_149
	word32 a5_150
	word32 a7_151
	word32 s2_152
	word32 s3_153
	word32 s4_154
	word32 s5_155
	word32 s6_156
	word32 s7_157
	word32 s8_158
	word32 s9_159
	word32 s10_160
	word32 s11_161
	word32 t4_162
	printf(ra, 0x2307611C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_144, out a0_145, out a1_146, out a2_147, out a3_148, out a4_149, out a5_150, out a7_151, out s2_152, out s3_153, out s4_154, out s5_155, out s6_156, out s7_157, out s8_158, out s9_159, out s10_160, out s11_161, out t4_162)
	return
ble_auth_pairing_confirm_exit:


void ble_auth_passkey_confirm(word32 ra, word32 s0, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE0, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_auth_passkey_confirm_entry:
l23023EC4:
	word32 a0_5 = Mem0[0x4200E19C<32>:int32]
	branch a0_5 != 0<32> l23023EDA
l23023EDA:
l23023EDA_thunk_bt_conn_auth_passkey_confirm:
	bt_conn_auth_passkey_confirm(ra, s0, a0_5, a3, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg38, dwArg44, dwArg4C, dwArg50, dwArg54, dwArg68, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgE0, dwArgE4, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128)
	return
l23023ECE:
l23023ED6_thunk_printf:
	word32 s1_129
	word32 a0_130
	word32 a1_131
	word32 a2_132
	word32 a3_133
	word32 a4_134
	word32 a5_135
	word32 a7_136
	word32 s2_137
	word32 s3_138
	word32 s4_139
	word32 s5_140
	word32 s6_141
	word32 s7_142
	word32 s8_143
	word32 s9_144
	word32 s10_145
	word32 s11_146
	word32 t4_147
	printf(ra, 0x2307611C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_129, out a0_130, out a1_131, out a2_132, out a3_133, out a4_134, out a5_135, out a7_136, out s2_137, out s3_138, out s4_139, out s5_140, out s6_141, out s7_142, out s8_143, out s9_144, out s10_145, out s11_146, out t4_147)
	return
ble_auth_passkey_confirm_exit:


void ble_auth_cancel(word32 ra, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg98, word32 dwArg9C, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ble_auth_cancel_entry:
l23023EDE:
	word32 a0_5 = Mem0[0x4200E19C<32>:int32]
	branch a0_5 != 0<32> l23023EF4
l23023EF4:
l23023EF4_thunk_bt_conn_auth_cancel:
	bt_conn_auth_cancel(ra, a0_5, a3, mstatus, dwArg08, dwArg10, dwArg50, dwArg54, dwArg78, dwArg9C)
	return
l23023EE8:
l23023EF0_thunk_printf:
	word32 s1_94
	word32 a0_95
	word32 a1_96
	word32 a2_97
	word32 a3_98
	word32 a4_99
	word32 a5_100
	word32 a7_101
	word32 s2_102
	word32 s3_103
	word32 s4_104
	word32 s5_105
	word32 s6_106
	word32 s7_107
	word32 s8_108
	word32 s9_109
	word32 s10_110
	word32 s11_111
	word32 t4_112
	printf(ra, 0x2307611C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_94, out a0_95, out a1_96, out a2_97, out a3_98, out a4_99, out a5_100, out a7_101, out s2_102, out s3_103, out s4_104, out s5_105, out s6_106, out s7_107, out s8_108, out s9_109, out s10_110, out s11_111, out t4_112)
	return
ble_auth_cancel_exit:


void ble_auth(word32 ra, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ble_auth_entry:
l23023EF8:
	word32 a0_13
	word32 a3_9
	branch bt_conn_auth_cb_register(0x4200D4C8<32>, out a3_9) == 0<32> l23023F1A
l23023F1A:
	a0_13 = 0x23075A18<32>
l23023F0A:
	a0_13 = 0x230759EC<32>
l23023F12:
l23023F16_thunk_printf:
	word32 a4_64
	word32 a5_65
	word32 a3_63
	word32 a2_62
	word32 a1_61
	word32 a0_60
	word32 s1_59
	word32 a7_66
	word32 s2_67
	word32 s3_68
	word32 s4_69
	word32 s5_70
	word32 s6_71
	word32 s7_72
	word32 s8_73
	word32 s9_74
	word32 s10_75
	word32 s11_76
	word32 t4_77
	printf(ra, a0_13, a3_9, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_59, out a0_60, out a1_61, out a2_62, out a3_63, out a4_64, out a5_65, out a7_66, out s2_67, out s3_68, out s4_69, out s5_70, out s6_71, out s7_72, out s8_73, out s9_74, out s10_75, out s11_76, out t4_77)
	return
ble_auth_exit:


void ble_security(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_security_entry:
l23023F24:
	word32 a0_100
	byte bLoc11_137 = SLICE(s0, byte, 24)
	branch Mem5[0x4200E19C<32>:int32] != 0<32> l23023F48
l23023F48:
	branch a2 != 2<32> l23023F5E
l23023F52:
	get_uint8_from_string(0x4200E19C<32>, a3 + 4<i32>, fp + 0xFFFFFFEF<32>, out a0, out a3)
l23023F5E:
	word32 mstatus_270
	word32 a0_44
	word32 s5_269
	word32 s3_268
	word32 s2_267
	word32 a5_266
	word32 a4_265
	word32 s1_264
	ra = bt_conn_set_security(ra, Mem11[a0:word32], a0, CONVERT(bLoc11_137, byte, word32), a3, s2, s3, mstatus, dwLoc20, dwLoc1C, dwLoc18, s0, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1_264, out a0_44, out a3, out a4_265, out a5_266, out s2_267, out s3_268, out s5_269, out mstatus_270)
	branch a0_44 == 0<32> l23023F80
l23023F80:
	a0_100 = 0x23075D68<32>
l23023F6C:
	word32 s1_271
	word32 a0_272
	word32 a1_273
	word32 a2_274
	word32 a3_275
	word32 a4_276
	word32 a5_277
	word32 a7_278
	word32 s2_279
	word32 s3_280
	word32 s4_281
	word32 s5_282
	word32 s6_283
	word32 s7_284
	word32 s8_285
	word32 s9_286
	word32 s10_287
	word32 s11_288
	word32 t4_289
	printf(ra, 0x23075D40<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_271, out a0_272, out a1_273, out a2_274, out a3_275, out a4_276, out a5_277, out a7_278, out s2_279, out s3_280, out s4_281, out s5_282, out s6_283, out s7_284, out s8_285, out s9_286, out s10_287, out s11_288, out t4_289)
l23023F3A:
	a0_100 = 0x23075D00<32>
l23023F42:
	word32 s1_290
	word32 a0_291
	word32 a1_292
	word32 a2_293
	word32 a3_294
	word32 a4_295
	word32 a5_296
	word32 a7_297
	word32 s2_298
	word32 s3_299
	word32 s4_300
	word32 s5_301
	word32 s6_302
	word32 s7_303
	word32 s8_304
	word32 s9_305
	word32 s10_306
	word32 s11_307
	word32 t4_308
	printf(ra, a0_100, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_290, out a0_291, out a1_292, out a2_293, out a3_294, out a4_295, out a5_296, out a7_297, out s2_298, out s3_299, out s4_300, out s5_301, out s6_302, out s7_303, out s8_304, out s9_305, out s10_306, out s11_307, out t4_308)
l23023F78:
	return
ble_security_exit:


void ble_select_conn(word32 ra, word32 s0, word32 a2, word32 a3, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_select_conn_entry:
l23023F8A:
	word32 a0_92
	branch a2 == 3<32> l23023FAE
l23023FAE:
	word32 a3_226
	word32 a0_225
	get_uint8_from_string(s0, a3 + 4<i32>, fp + -24<i32>, out a0_225, out a3_226)
	word32 s3_231
	word32 s2_230
	word32 a3_229
	word32 a0_228
	word32 s1_227
	get_bytearray_from_string(fp + -32<i32>, 6<32>, dwArgF8, out s1_227, out a0_228, out a3_229, out s2_230, out s3_231)
	reverse_bytearray(fp + -32<i32>, fp + -23<i32>, 6<32>)
	word32 a0_61
	word32 a4_73
	word32 s8_238
	word32 s5_237
	word32 s4_236
	word32 s3_235
	word32 s2_234
	word32 a2_233
	word32 s1_232
	bt_conn_lookup_addr_le(0<32>, fp + -24<i32>, mstatus, out s1_232, out a0_61, out a2_233, out a3, out a4_73, out s2_234, out s3_235, out s4_236, out s5_237, out s8_238)
	word32 s1_77 = a0_61
	branch a0_61 != 0<32> l23023FEA
l23023FEA:
	branch Mem15[0x4200E19C<32>:int32] == 0<32> l23023FFC
l23023FF8:
	word32 a3_258
	word32 a4_259
	word32 a5_260
	s1_77 = bt_conn_unref(0x4200E19C<32>, a3, a4_73, mstatus, out a3_258, out a4_259, out a5_260)
l23023FFC:
	Mem90[s1_77:word32] = 0x4200E19C<32>
l23023FE0:
	a0_92 = 0x23075D88<32>
l23023F98:
	a0_92 = 0x23075E94<32>
l23023FA0:
	word32 a4_244
	word32 a5_245
	word32 a3_243
	word32 a2_242
	word32 a1_241
	word32 a0_240
	word32 s1_239
	word32 a7_246
	word32 s2_247
	word32 s3_248
	word32 s4_249
	word32 s5_250
	word32 s6_251
	word32 s7_252
	word32 s8_253
	word32 s9_254
	word32 s10_255
	word32 s11_256
	word32 t4_257
	printf(ra, a0_92, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_239, out a0_240, out a1_241, out a2_242, out a3_243, out a4_244, out a5_245, out a7_246, out s2_247, out s3_248, out s4_249, out s5_250, out s6_251, out s7_252, out s8_253, out s9_254, out s10_255, out s11_256, out t4_257)
l23023FA4:
	return
ble_select_conn_exit:


void ble_disconnect(word32 ra, word32 s0, word32 a2, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_disconnect_entry:
l23024000:
	word32 a0_152
	word32 dwLoc18_224
	byte bLoc21_193 = SLICE(s0, byte, 24)
	branch a2 == 3<32> l23024026
l23024026:
	word32 a3_311
	word32 a0_310
	get_uint8_from_string(s0, a3 + 4<i32>, fp + -33<i32>, out a0_310, out a3_311)
	word32 a3_314
	word32 s2_315
	word32 a0_313
	word32 s1_312
	word32 s3_316
	get_bytearray_from_string(fp + -32<i32>, 6<32>, dwArgE8, out s1_312, out a0_313, out a3_314, out s2_315, out s3_316)
	reverse_bytearray(fp + -32<i32>, fp + -23<i32>, 6<32>)
	word32 a0_63
	word32 s1_67
	word32 s2_68
	word32 s3_69
	word32 a2_317
	word32 a4_318
	word32 s4_319
	word32 s5_320
	word32 s8_321
	bt_conn_lookup_addr_le(0<32>, fp + -24<i32>, mstatus, out s1_67, out a0_63, out a2_317, out a3, out a4_318, out s2_68, out s3_69, out s4_319, out s5_320, out s8_321)
	dwLoc18_224 = SEQ(nLoc17, SLICE(CONVERT(bLoc21_193, byte, word32), byte, 0)) (alias)
	branch a0_63 != 0<32> l2302406C
l2302406C:
	word32 a0_111
	word32 a0_81
	word32 s0_90
	word32 a3_93
	word32 mstatus_95
	word32 s1_322
	word32 a4_323
	word32 s2_324
	word32 s3_325
	word32 s4_326
	word32 s5_327
	word32 ra_96 = bt_conn_disconnect(ra, a0_63, s1_67, a0_63, 0x13<32>, a3, s2_68, s3_69, mstatus, dwLoc40, dwLoc3C, dwLoc38, dwLoc34, dwLoc30, dwLoc2C, dwLoc28, s0, dwLoc1C, dwLoc18_224, dwLoc14, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg34, dwArg38, dwArg3C, a3, dwArg48, dwArg4C, dwArg54, dwArg58, ra, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_90, out s1_322, out a0_81, out a3_93, out a4_323, out s2_324, out s3_325, out s4_326, out s5_327, out mstatus_95)
	branch a0_81 == 0<32> l23024088
l23024088:
	a0_111 = 0x23075B50<32>
l23024074:
	a0_111 = 0x23075B38<32>
l2302407C:
	word32 a3_124
	word32 a4_125
	word32 s1_347
	word32 a0_348
	word32 a1_349
	word32 a2_350
	word32 a5_351
	word32 a7_352
	word32 s2_353
	word32 s3_354
	word32 s4_355
	word32 s5_356
	word32 s6_357
	word32 s7_358
	word32 s8_359
	word32 s9_360
	word32 s10_361
	word32 s11_362
	word32 t4_363
	printf(ra_96, a0_111, a3_93, dwLoc38, dwLoc18_224, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_347, out a0_348, out a1_349, out a2_350, out a3_124, out a4_125, out a5_351, out a7_352, out s2_353, out s3_354, out s4_355, out s5_356, out s6_357, out s7_358, out s8_359, out s9_360, out s10_361, out s11_362, out t4_363)
	word32 a3_364
	word32 a4_365
	word32 a5_366
	bt_conn_unref(s0_90, a3_124, a4_125, mstatus_95, out a3_364, out a4_365, out a5_366)
l23024062:
	a0_152 = 0x2307611C<32>
l23024012:
	a0_152 = 0x23075E94<32>
l2302401A:
	word32 s1_328
	word32 a0_329
	word32 a1_330
	word32 a2_331
	word32 a3_332
	word32 a4_333
	word32 a5_334
	word32 a7_335
	word32 s2_336
	word32 s3_337
	word32 s4_338
	word32 s5_339
	word32 s6_340
	word32 s7_341
	word32 s8_342
	word32 s9_343
	word32 s10_344
	word32 s11_345
	word32 t4_346
	printf(ra, a0_152, a3, dwLoc38, dwLoc18_224, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_328, out a0_329, out a1_330, out a2_331, out a3_332, out a4_333, out a5_334, out a7_335, out s2_336, out s3_337, out s4_338, out s5_339, out s6_340, out s7_341, out s8_342, out s9_343, out s10_344, out s11_345, out t4_346)
l2302401E:
	return
ble_disconnect_exit:


void ble_connect(word32 ra, word32 s0, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_connect_entry:
l23024092:
	word32 a0_155
	word24 nLoc1F_255 = SLICE(s2, word24, 8)
	word32 a4_301
	word32 a5_302
	word32 a1_299
	word32 a2_300
	word32 t1_297
	word32 a0_298
	word32 a3_126
	word32 ra_133 = memset(ra, fp + -40<i32>, 0<32>, 6<32>, out t1_297, out a0_298, out a1_299, out a2_300, out a3_126, out a4_301, out a5_302)
	branch a2 == 3<32> l230240DE
l230240DE:
	word32 a0_303
	word32 a3_304
	get_uint8_from_string(a3, a3 + 4<i32>, fp + -41<i32>, out a0_303, out a3_304)
	word32 s3_308
	word32 s2_307
	word32 a0_306
	word32 s1_305
	word32 a3_60
	word32 s0_65 = get_bytearray_from_string(fp + -40<i32>, 6<32>, dwArgF8, out s1_305, out a0_306, out a3_60, out s2_307, out s3_308)
	word32 s2_103 = 0x23076000<32>
	word32 dwLoc2C_224 = SEQ(0xFF<8>, nLoc2C)
	word32 dwLoc20_256 = SEQ(nLoc1F_255, 0xFF<8>)
l23024106:
	s0_65 = s0_65 + 1<32>
	word32 s1_100
	word32 t4_324
	word32 s11_323
	word32 s10_322
	word32 s9_321
	word32 s8_320
	word32 s7_319
	word32 s6_318
	word32 s5_317
	word32 s4_316
	word32 s3_315
	word32 a7_314
	word32 a5_313
	word32 a4_312
	word32 a2_311
	word32 a1_310
	word32 a0_309
	ra_133 = printf(ra_133, s2_103 + -1376<i32>, a3_60, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_100, out a0_309, out a1_310, out a2_311, out a3_60, out a4_312, out a5_313, out a7_314, out s2_103, out s3_315, out s4_316, out s5_317, out s6_318, out s7_319, out s8_320, out s9_321, out s10_322, out s11_323, out t4_324)
	branch s0_65 != s1_100 l23024106
l2302411E:
	reverse_bytearray(fp + -40<i32>, fp + -31<i32>, 6<32>)
	word32 a0_123
	ra_133 = bt_conn_create_le(ra_133, s0_65, s1_100, fp + -32<i32>, fp + -24<i32>, s2_103, mstatus, dwLoc30, dwLoc2C_224, dwLoc28, a4, dwLoc20_256, s0, dwLoc18, dwLoc14, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out a0_123, out a3_126)
	branch a0_123 != 0<32> l2302413E
l2302413E:
	a0_155 = 0x23075AC8<32>
l23024134:
	a0_155 = 0x23075AB4<32>
l230240C6:
	a0_155 = 0x23075E94<32>
l230240CE:
	word32 a7_332
	word32 a5_331
	word32 a4_330
	word32 a3_329
	word32 a2_328
	word32 a1_327
	word32 a0_326
	word32 s1_325
	word32 s2_333
	word32 s3_334
	word32 s4_335
	word32 s5_336
	word32 s6_337
	word32 s7_338
	word32 s8_339
	word32 s9_340
	word32 s10_341
	word32 s11_342
	word32 t4_343
	printf(ra_133, a0_155, a3_126, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_325, out a0_326, out a1_327, out a2_328, out a3_329, out a4_330, out a5_331, out a7_332, out s2_333, out s3_334, out s4_335, out s5_336, out s6_337, out s7_338, out s8_339, out s9_340, out s10_341, out s11_342, out t4_343)
	0<32> = dwArg0128
	return
ble_connect_exit:


void ble_stop_advertise(word32 ra, word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg70, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_stop_advertise_entry:
l23024148:
	word32 a0_39
	word32 a3_12
	word32 a0_37
	word32 mstatus_121
	word32 s1_115
	word32 a4_116
	word32 s2_117
	word32 s3_118
	word32 s4_119
	word32 s5_120
	word32 ra_18 = bt_le_adv_stop(ra, s0, a3, a4, mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg54, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s1_115, out a0_37, out a3_12, out a4_116, out s2_117, out s3_118, out s4_119, out s5_120, out mstatus_121)
	branch a0_37 == 0<32> l23024162
l23024162:
	a0_39 = 0x23076068<32>
l23024152:
	a0_39 = 0x23076048<32>
l2302415A:
l2302415E_thunk_printf:
	word32 s1_122
	word32 a0_123
	word32 a1_124
	word32 a2_125
	word32 a3_126
	word32 a4_127
	word32 a5_128
	word32 a7_129
	word32 s2_130
	word32 s3_131
	word32 s4_132
	word32 s5_133
	word32 s6_134
	word32 s7_135
	word32 s8_136
	word32 s9_137
	word32 s10_138
	word32 s11_139
	word32 t4_140
	printf(ra_18, a0_39, a3_12, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_122, out a0_123, out a1_124, out a2_125, out a3_126, out a4_127, out a5_128, out a7_129, out s2_130, out s3_131, out s4_132, out s5_133, out s6_134, out s7_135, out s8_136, out s9_137, out s10_138, out s11_139, out t4_140)
	return
ble_stop_advertise_exit:


void ble_get_device_name(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ble_get_device_name_entry:
l2302416C:
	branch bt_get_name() == 0<32> l23024188
l23024188:
l23024194_thunk_printf:
	word32 s1_110
	word32 a0_111
	word32 a1_112
	word32 a2_113
	word32 a3_114
	word32 a4_115
	word32 a5_116
	word32 a7_117
	word32 s2_118
	word32 s3_119
	word32 s4_120
	word32 s5_121
	word32 s6_122
	word32 s7_123
	word32 s8_124
	word32 s9_125
	word32 s10_126
	word32 s11_127
	word32 t4_128
	printf(ra, 0x23075C54<32>, a3, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_110, out a0_111, out a1_112, out a2_113, out a3_114, out a4_115, out a5_116, out a7_117, out s2_118, out s3_119, out s4_120, out s5_121, out s6_122, out s7_123, out s8_124, out s9_125, out s10_126, out s11_127, out t4_128)
	return
l23024176:
l23024184_thunk_printf:
	word32 s1_91
	word32 a0_92
	word32 a1_93
	word32 a2_94
	word32 a3_95
	word32 a4_96
	word32 a5_97
	word32 a7_98
	word32 s2_99
	word32 s3_100
	word32 s4_101
	word32 s5_102
	word32 s6_103
	word32 s7_104
	word32 s8_105
	word32 s9_106
	word32 s10_107
	word32 s11_108
	word32 t4_109
	printf(ra, 0x23075C40<32>, a3, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_91, out a0_92, out a1_93, out a2_94, out a3_95, out a4_96, out a5_97, out a7_98, out s2_99, out s3_100, out s4_101, out s5_102, out s6_103, out s7_104, out s8_105, out s9_106, out s10_107, out s11_108, out t4_109)
	return
ble_get_device_name_exit:


void ble_start_advertise(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArg0124)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[16..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +0124:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_start_advertise_entry:
l23024198:
	word32 a0_127
	byte bLoc2A_385 = SLICE(s4, byte, 16)
	byte bLoc29_395 = SLICE(s4, byte, 24)
	branch (a2 + -3<i32> & 0xFFFFFFFD<32>) == 0<32> l230241BC
l230241BC:
	word16 wLoc28_430
	word32 a5_72
	word32 a3_32
	word32 a0_654
	word32 s0_37 = get_uint8_from_string(s0, a3 + 4<i32>, fp + -42<i32>, out a0_654, out a3_32)
	word32 s2_56
	word32 s11_670
	word32 t4_671
	word32 s10_669
	word32 s9_668
	word32 s8_667
	word32 s7_666
	word32 s6_665
	word32 s5_664
	word32 s1_655
	word32 a5_660
	word32 a7_661
	word32 s3_662
	word32 s4_663
	word32 a0_656
	word32 a1_657
	word32 a2_658
	word32 a4_659
	ra = printf(ra, 0x23075F5C<32>, a3_32, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_655, out a0_656, out a1_657, out a2_658, out a3, out a4_659, out a5_660, out a7_661, out s2_56, out s3_662, out s4_663, out s5_664, out s6_665, out s7_666, out s8_667, out s9_668, out s10_669, out s11_670, out t4_671)
	word32 a5_66 = CONVERT(bLoc2A_385, byte, word32)
	branch a5_66 != 0<32> l230242D0
l230242D0:
	branch a5_66 != 1<32> l230242DA
l230242DA:
	branch a5_66 != 2<32> l230242E6
l230242E6:
	a0_127 = 0x23075F6C<32>
l230242E0:
	wLoc28_430 = 0<16> (alias)
l230242D6:
	a5_72 = 8<32>
l230241F8:
	a5_72 = 0xB<32>
l230241FA:
	wLoc28_430 = SEQ(SLICE(a5_72, byte, 0), 0<8>) (alias)
l230241FE:
	word32 a3_87
	word32 a0_756
	get_uint8_from_string(s0_37, s2_56 + 8<i32>, fp + -41<i32>, out a0_756, out a3_87)
	word32 s3_115
	word32 s10_767
	word32 s11_768
	word32 t4_769
	word32 a5_762
	word32 a7_763
	word32 s4_764
	word32 s6_765
	word32 s9_766
	word32 a2_760
	word32 a4_761
	word32 s1_757
	word32 a0_758
	word32 a1_759
	word32 s2_114
	word32 s7_119
	word32 s5_117
	word32 s8_120
	ra = printf(ra, 0x23075F80<32>, a3_87, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_757, out a0_758, out a1_759, out a2_760, out a3, out a4_761, out a5_762, out a7_763, out s2_114, out s3_115, out s4_764, out s5_117, out s6_765, out s7_119, out s8_120, out s9_766, out s10_767, out s11_768, out t4_769)
	word32 a5_124 = CONVERT(bLoc29_395, byte, word32)
	branch a5_124 >u 2<32> l2302431A
l2302431A:
	a0_127 = 0x23075F8C<32>
l23024224:
	word32 a5_135
	word32 dwLoc34_507
	word32 s1_128 = 0x4200D000<32>
	word32 s0_129 = 0x4200D4B8<32>
	branch a5_124 != 0<32> l230242F0
l230242F0:
	branch a5_124 != 1<32> l23024308
l23024308:
	Mem134[0x4200D4B8<32>:word16] = 0x101<16>
	a5_135 = fp + -44<i32>
l230242F6:
	Mem139[0x4200D4B8<32>:word16] = 0x101<16>
	a5_135 = fp + -48<i32>
l2302422E:
	Mem144[0x4200D4B8<32>:word16] = 0x101<16>
	a5_135 = fp + -52<i32>
	dwLoc34_507 = SEQ(nLoc33, 6<8>) (alias)
l2302423E:
	word32 dwLoc28_434
	Mem148[a5_135 + 4<i32>:word32] = 0x4200D4B8<32>
	word32 a0_149 = bt_get_name()
	word32 a4_735
	word32 a5_736
	word32 a2_733
	word32 a3_734
	word32 a1_732
	word32 a0_151 = strlen(a0_149, out a1_732, out a2_733, out a3_734, out a4_735, out a5_736)
	Mem158[0x4200D4C0<32>:byte] = 9<8>
	Mem159[0x4200D4C1<32>:byte] = SLICE(a0_151, byte, 0)
	Mem160[0x4200D4C4<32>:word32] = a0_149
	branch s3_115 != 5<32> l23024294
l2302425E:
	word32 a3_184
	word32 a5_676
	word32 a0_677
	word32 a2_678
	word32 a4_679
	word32 a5_680
	word32 a3_674
	word32 a4_675
	word32 a0_672
	word32 a2_673
	s0_129 = get_uint16_from_string(get_uint16_from_string(0x4200D4B8<32>, s2_114 + 12<i32>, fp + -38<i32>, out a0_672, out a2_673, out a3_674, out a4_675, out a5_676), s2_114 + 16<i32>, fp + -36<i32>, out a0_677, out a2_678, out a3_184, out a4_679, out a5_680)
	word32 a3_202
	word32 s11_711
	word32 t4_712
	word32 s3_706
	word32 s4_707
	word32 s6_708
	word32 s9_709
	word32 s10_710
	word32 a2_701
	word32 a3_702
	word32 a4_703
	word32 a5_704
	word32 a7_705
	word32 s10_696
	word32 s11_697
	word32 t4_698
	word32 a0_699
	word32 a1_700
	word32 s5_691
	word32 s6_692
	word32 s7_693
	word32 s8_694
	word32 s9_695
	word32 a5_686
	word32 a7_687
	word32 s2_688
	word32 s3_689
	word32 s4_690
	word32 s1_681
	word32 a0_682
	word32 a1_683
	word32 a2_684
	word32 a4_685
	ra = printf(printf(ra, 0x23075FA0<32>, a3_184, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_681, out a0_682, out a1_683, out a2_684, out a3_202, out a4_685, out a5_686, out a7_687, out s2_688, out s3_689, out s4_690, out s5_691, out s6_692, out s7_693, out s8_694, out s9_695, out s10_696, out s11_697, out t4_698), 0x23075FB4<32>, a3_202, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_128, out a0_699, out a1_700, out a2_701, out a3_702, out a4_703, out a5_704, out a7_705, out s2_114, out s3_706, out s4_707, out s5_117, out s6_708, out s7_119, out s8_120, out s9_709, out s10_710, out s11_711, out t4_712)
	dwLoc28_434 = SEQ(0xA0<16>, wLoc28_430) (alias)
l23024294:
	word32 a3_249
	branch CONVERT(bLoc2A_385, byte, word32) >u 1<32> l23024324
l23024324:
	a3_249 = 0<32>
l2302429E:
	a3_249 = s1_128 + 1208<i32>
l230242A4:
	word32 a0_282
	ra = bt_le_adv_start(ra, s0_129, fp + -40<i32>, a3_249, s2_114, s5_117, s7_119, s8_120, mstatus, dwLoc3C, dwLoc38, dwLoc34_507, dwLoc28_434, dwLoc1C, dwLoc18, dwLoc14, dwLoc08, dwLoc04, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArg0124, out a0_282, out a3)
	branch a0_282 == 0<32> l2302432A
l2302432A:
	a0_127 = 0x23075FF0<32>
l230242B2:
	word32 s9_728
	word32 s10_729
	word32 s11_730
	word32 t4_731
	word32 s4_723
	word32 s5_724
	word32 s6_725
	word32 s7_726
	word32 s8_727
	word32 s2_721
	word32 s3_722
	word32 a2_716
	word32 a3_717
	word32 a4_718
	word32 a5_719
	word32 a7_720
	word32 s1_713
	word32 a0_714
	word32 a1_715
	printf(ra, 0x23075FC8<32>, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_713, out a0_714, out a1_715, out a2_716, out a3_717, out a4_718, out a5_719, out a7_720, out s2_721, out s3_722, out s4_723, out s5_724, out s6_725, out s7_726, out s8_727, out s9_728, out s10_729, out s11_730, out t4_731)
l230241AE:
	a0_127 = 0x23075E94<32>
l230241B6:
	word32 t4_755
	word32 s7_750
	word32 s8_751
	word32 s9_752
	word32 s10_753
	word32 s11_754
	word32 s2_745
	word32 s3_746
	word32 s4_747
	word32 s5_748
	word32 s6_749
	word32 a2_740
	word32 a3_741
	word32 a4_742
	word32 a5_743
	word32 a7_744
	word32 s1_737
	word32 a0_738
	word32 a1_739
	printf(ra, a0_127, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_737, out a0_738, out a1_739, out a2_740, out a3_741, out a4_742, out a5_743, out a7_744, out s2_745, out s3_746, out s4_747, out s5_748, out s6_749, out s7_750, out s8_751, out s9_752, out s10_753, out s11_754, out t4_755)
l230242C0:
	return
ble_start_advertise_exit:


void ble_set_adv_channel(word32 ra, word32 s0, word32 a2, word32 a3, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
ble_set_adv_channel_entry:
l23024334:
	word32 a0_31
	branch a2 == 2<32> l23024356
l23024356:
	word32 a0_86
	get_uint8_from_string(s0, a3 + 4<i32>, fp + 0xFFFFFFEF<32>, out a0_86, out a3)
	branch set_adv_channel_map(7<32>) != 0<32> l23024376
l23024376:
	a0_31 = 0x23075DC4<32>
l2302436C:
	a0_31 = 0x23075DA8<32>
l23024344:
	a0_31 = 0x23075E94<32>
l2302434C:
	word32 s1_87
	word32 a0_88
	word32 a1_89
	word32 a2_90
	word32 a3_91
	word32 a4_92
	word32 a5_93
	word32 a7_94
	word32 s2_95
	word32 s3_96
	word32 s4_97
	word32 s5_98
	word32 s6_99
	word32 s7_100
	word32 s8_101
	word32 s9_102
	word32 s10_103
	word32 s11_104
	word32 t4_105
	printf(ra, a0_31, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_87, out a0_88, out a1_89, out a2_90, out a3_91, out a4_92, out a5_93, out a7_94, out s2_95, out s3_96, out s4_97, out s5_98, out s6_99, out s7_100, out s8_101, out s9_102, out s10_103, out s11_104, out t4_105)
	return
ble_set_adv_channel_exit:


void ble_stop_scan(word32 ra, word32 s0, word32 a3, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg70, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_stop_scan_entry:
l23024380:
	word32 a0_12
	word32 a3_15
	word32 ra_25 = bt_le_scan_stop(ra, s0, a3, a4, s2, s3, mstatus, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg44, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out a0_12, out a3_15)
	branch a0_12 == 0<32> l2302439C
l2302439C:
l230243A8_thunk_printf:
	word32 s1_183
	word32 a0_184
	word32 a1_185
	word32 a2_186
	word32 a3_187
	word32 a4_188
	word32 a5_189
	word32 a7_190
	word32 s2_191
	word32 s3_192
	word32 s4_193
	word32 s5_194
	word32 s6_195
	word32 s7_196
	word32 s8_197
	word32 s9_198
	word32 s10_199
	word32 s11_200
	word32 t4_201
	printf(ra_25, 0x230760A4<32>, a3_15, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_183, out a0_184, out a1_185, out a2_186, out a3_187, out a4_188, out a5_189, out a7_190, out s2_191, out s3_192, out s4_193, out s5_194, out s6_195, out s7_196, out s8_197, out s9_198, out s10_199, out s11_200, out t4_201)
	return
l2302438A:
l23024398_thunk_printf:
	word32 a5_170
	word32 a4_169
	word32 a3_168
	word32 a2_167
	word32 a1_166
	word32 a0_165
	word32 s1_164
	word32 a7_171
	word32 s2_172
	word32 s3_173
	word32 s4_174
	word32 s5_175
	word32 s6_176
	word32 s7_177
	word32 s8_178
	word32 s9_179
	word32 s10_180
	word32 s11_181
	word32 t4_182
	printf(ra_25, 0x23076080<32>, a3_15, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_164, out a0_165, out a1_166, out a2_167, out a3_168, out a4_169, out a5_170, out a7_171, out s2_172, out s3_173, out s4_174, out s5_175, out s6_176, out s7_177, out s8_178, out s9_179, out s10_180, out s11_181, out t4_182)
	return
ble_stop_scan_exit:


void ble_disable(word32 ra, word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg70, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_disable_entry:
l230243AC:
	word32 a0_39
	word32 a0_10
	word32 a3_15
	word32 ra_20 = bt_disable(ra, s0, a3, a4, mstatus, dwLoc08, dwArg08, dwArg40, dwArg44, dwArg48, dwArg50, dwArg54, dwArg68, ra, dwArg78, dwArg88, dwArg8C, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, out a0_10, out a3_15)
	branch a0_10 == 0<32> l230243C6
l230243C6:
	a0_39 = 0x23075B1C<32>
l230243B6:
	a0_39 = 0x23075AE0<32>
l230243BE:
l230243C2_thunk_printf:
	word32 a5_121
	word32 s1_115
	word32 a0_116
	word32 a1_117
	word32 a2_118
	word32 a3_119
	word32 a4_120
	word32 a7_122
	word32 s2_123
	word32 s3_124
	word32 s4_125
	word32 s5_126
	word32 s6_127
	word32 s7_128
	word32 s8_129
	word32 s9_130
	word32 s10_131
	word32 s11_132
	word32 t4_133
	printf(ra_20, a0_39, a3_15, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_115, out a0_116, out a1_117, out a2_118, out a3_119, out a4_120, out a5_121, out a7_122, out s2_123, out s3_124, out s4_125, out s5_126, out s6_127, out s7_128, out s8_129, out s9_130, out s10_131, out s11_132, out t4_133)
	return
ble_disable_exit:


void discover_func(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
discover_func_entry:
l230243D0:
	branch a1 != 0<32> l23024402
l23024402:
	word32 a5_13 = CONVERT(Mem9[a2 + 40<i32>:byte], byte, word32)
	branch a5_13 == 2<32> l2302452A
l2302452A:
	word32 s1_31
	word32 s2_868
	word32 a7_867
	word32 a5_866
	word32 a4_865
	word32 a3_864
	word32 a2_863
	word32 a1_862
	word32 a3_859
	word32 s1_860
	word32 a0_861
	word32 s3_869
	word32 s4_870
	word32 s5_871
	word32 s6_872
	word32 s7_873
	word32 s8_874
	word32 s9_875
	word32 s10_876
	word32 s11_877
	word32 t4_878
	printf(bt_uuid_to_str(ra, a0, fp + -56<i32>, 37<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s1_31, out a3_859), 0x230763A8<32>, CONVERT(Mem9[s1_31 + 4<i32>:uint16], uint16, word32), dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_860, out a0_861, out a1_862, out a2_863, out a3_864, out a4_865, out a5_866, out a7_867, out s2_868, out s3_869, out s4_870, out s5_871, out s6_872, out s7_873, out s8_874, out s9_875, out s10_876, out s11_877, out t4_878)
l2302440E:
	branch a5_13 <u 2<32> l23024438
l23024438:
	word32 s1_91
	word32 a3_879
	word32 s1_880
	word32 a0_881
	word32 a1_882
	word32 a2_883
	word32 a3_884
	word32 a4_885
	word32 a5_886
	word32 a7_887
	word32 s2_888
	word32 s3_889
	word32 s4_890
	word32 s5_891
	word32 s6_892
	word32 s7_893
	word32 s8_894
	word32 s9_895
	word32 s10_896
	word32 s11_897
	word32 t4_898
	printf(bt_uuid_to_str(ra, a0, fp + -56<i32>, 37<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s1_91, out a3_879), 0x230762B8<32>, CONVERT(Mem9[s1_91 + 4<i32>:uint16], uint16, word32), dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_880, out a0_881, out a1_882, out a2_883, out a3_884, out a4_885, out a5_886, out a7_887, out s2_888, out s3_889, out s4_890, out s5_891, out s6_892, out s7_893, out s8_894, out s9_895, out s10_896, out s11_897, out t4_898)
l23024412:
	branch a5_13 == 3<32> l23024460
l23024460:
	word32 s1_151
	word32 a3_180
	word32 s1_184
	word32 a3_899
	word32 a0_900
	word32 a1_901
	word32 a2_902
	word32 a4_903
	word32 a5_904
	word32 a7_905
	word32 s2_906
	word32 s3_907
	word32 s4_908
	word32 s5_909
	word32 s6_910
	word32 s7_911
	word32 s8_912
	word32 s9_913
	word32 s10_914
	word32 s11_915
	word32 t4_916
	word32 ra_183 = printf(bt_uuid_to_str(ra, a0, fp + -56<i32>, 37<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s1_151, out a3_899), 0x230762EC<32>, CONVERT(Mem9[s1_151 + 4<i32>:uint16], uint16, word32), dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_184, out a0_900, out a1_901, out a2_902, out a3_180, out a4_903, out a5_904, out a7_905, out s2_906, out s3_907, out s4_908, out s5_909, out s6_910, out s7_911, out s8_912, out s9_913, out s10_914, out s11_915, out t4_916)
	word32 s0_198 = CONVERT(Mem9[s1_184 + 6<i32>:byte], byte, word32)
	word32 s1_917
	word32 a0_918
	word32 a1_919
	word32 a2_920
	word32 a4_921
	word32 a5_922
	word32 a7_923
	word32 s2_924
	word32 s3_925
	word32 s4_926
	word32 s5_927
	word32 s6_928
	word32 s7_929
	word32 s8_930
	word32 s9_931
	word32 s10_932
	word32 s11_933
	word32 t4_934
	word32 a3_205
	word32 ra_208 = printf(ra_183, 0x2307632C<32>, a3_180, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_917, out a0_918, out a1_919, out a2_920, out a3_205, out a4_921, out a5_922, out a7_923, out s2_924, out s3_925, out s4_926, out s5_927, out s6_928, out s7_929, out s8_930, out s9_931, out s10_932, out s11_933, out t4_934)
	branch (s0_198 & 1<i32>) == 0<32> l230244A6
l2302449A:
	word32 s1_955
	word32 a0_956
	word32 a1_957
	word32 a2_958
	word32 a4_959
	word32 a5_960
	word32 a7_961
	word32 s2_962
	word32 s3_963
	word32 s4_964
	word32 s5_965
	word32 s6_966
	word32 s7_967
	word32 s8_968
	word32 s9_969
	word32 s10_970
	word32 s11_971
	word32 t4_972
	ra_208 = printf(ra_208, 0x2307633C<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_955, out a0_956, out a1_957, out a2_958, out a3_205, out a4_959, out a5_960, out a7_961, out s2_962, out s3_963, out s4_964, out s5_965, out s6_966, out s7_967, out s8_968, out s9_969, out s10_970, out s11_971, out t4_972)
l230244A6:
	branch (s0_198 & 2<i32>) == 0<32> l230244B8
l230244AC:
	word32 s1_973
	word32 a0_974
	word32 a1_975
	word32 a2_976
	word32 a4_977
	word32 a5_978
	word32 a7_979
	word32 s2_980
	word32 s3_981
	word32 s4_982
	word32 s5_983
	word32 s6_984
	word32 s7_985
	word32 s8_986
	word32 s9_987
	word32 s10_988
	word32 s11_989
	word32 t4_990
	ra_208 = printf(ra_208, 0x23076348<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_973, out a0_974, out a1_975, out a2_976, out a3_205, out a4_977, out a5_978, out a7_979, out s2_980, out s3_981, out s4_982, out s5_983, out s6_984, out s7_985, out s8_986, out s9_987, out s10_988, out s11_989, out t4_990)
l230244B8:
	branch (s0_198 & 8<i32>) == 0<32> l230244CA
l230244BE:
	word32 s1_991
	word32 a0_992
	word32 a1_993
	word32 a2_994
	word32 a4_995
	word32 a5_996
	word32 a7_997
	word32 s2_998
	word32 s3_999
	word32 s4_1000
	word32 s5_1001
	word32 s6_1002
	word32 s7_1003
	word32 s8_1004
	word32 s9_1005
	word32 s10_1006
	word32 s11_1007
	word32 t4_1008
	ra_208 = printf(ra_208, 0x23076354<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_991, out a0_992, out a1_993, out a2_994, out a3_205, out a4_995, out a5_996, out a7_997, out s2_998, out s3_999, out s4_1000, out s5_1001, out s6_1002, out s7_1003, out s8_1004, out s9_1005, out s10_1006, out s11_1007, out t4_1008)
l230244CA:
	branch (s0_198 & 4<i32>) == 0<32> l230244DC
l230244D0:
	word32 s1_1009
	word32 a0_1010
	word32 a1_1011
	word32 a2_1012
	word32 a4_1013
	word32 a5_1014
	word32 a7_1015
	word32 s2_1016
	word32 s3_1017
	word32 s4_1018
	word32 s5_1019
	word32 s6_1020
	word32 s7_1021
	word32 s8_1022
	word32 s9_1023
	word32 s10_1024
	word32 s11_1025
	word32 t4_1026
	ra_208 = printf(ra_208, 0x23076360<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_1009, out a0_1010, out a1_1011, out a2_1012, out a3_205, out a4_1013, out a5_1014, out a7_1015, out s2_1016, out s3_1017, out s4_1018, out s5_1019, out s6_1020, out s7_1021, out s8_1022, out s9_1023, out s10_1024, out s11_1025, out t4_1026)
l230244DC:
	branch (s0_198 & 16<i32>) == 0<32> l230244EE
l230244E2:
	word32 s1_1027
	word32 a0_1028
	word32 a1_1029
	word32 a2_1030
	word32 a4_1031
	word32 a5_1032
	word32 a7_1033
	word32 s2_1034
	word32 s3_1035
	word32 s4_1036
	word32 s5_1037
	word32 s6_1038
	word32 s7_1039
	word32 s8_1040
	word32 s9_1041
	word32 s10_1042
	word32 s11_1043
	word32 t4_1044
	ra_208 = printf(ra_208, 0x23076374<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_1027, out a0_1028, out a1_1029, out a2_1030, out a3_205, out a4_1031, out a5_1032, out a7_1033, out s2_1034, out s3_1035, out s4_1036, out s5_1037, out s6_1038, out s7_1039, out s8_1040, out s9_1041, out s10_1042, out s11_1043, out t4_1044)
l230244EE:
	branch (s0_198 & 32<i32>) == 0<32> l23024500
l230244F4:
	word32 s1_1045
	word32 a0_1046
	word32 a1_1047
	word32 a2_1048
	word32 a4_1049
	word32 a5_1050
	word32 a7_1051
	word32 s2_1052
	word32 s3_1053
	word32 s4_1054
	word32 s5_1055
	word32 s6_1056
	word32 s7_1057
	word32 s8_1058
	word32 s9_1059
	word32 s10_1060
	word32 s11_1061
	word32 t4_1062
	ra_208 = printf(ra_208, 0x23076380<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_1045, out a0_1046, out a1_1047, out a2_1048, out a3_205, out a4_1049, out a5_1050, out a7_1051, out s2_1052, out s3_1053, out s4_1054, out s5_1055, out s6_1056, out s7_1057, out s8_1058, out s9_1059, out s10_1060, out s11_1061, out t4_1062)
l23024500:
	branch (s0_198 & 64<i32>) == 0<32> l23024512
l23024506:
	word32 s1_1063
	word32 a0_1064
	word32 a1_1065
	word32 a2_1066
	word32 a4_1067
	word32 a5_1068
	word32 a7_1069
	word32 s2_1070
	word32 s3_1071
	word32 s4_1072
	word32 s5_1073
	word32 s6_1074
	word32 s7_1075
	word32 s8_1076
	word32 s9_1077
	word32 s10_1078
	word32 s11_1079
	word32 t4_1080
	ra_208 = printf(ra_208, 0x2307638C<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_1063, out a0_1064, out a1_1065, out a2_1066, out a3_205, out a4_1067, out a5_1068, out a7_1069, out s2_1070, out s3_1071, out s4_1072, out s5_1073, out s6_1074, out s7_1075, out s8_1076, out s9_1077, out s10_1078, out s11_1079, out t4_1080)
l23024512:
	branch CONVERT(SLICE(s0_198, byte, 0), byte, int32) >= 0<32> l230243F6
l2302451C:
	word32 s1_1081
	word32 a0_1082
	word32 a1_1083
	word32 a2_1084
	word32 a3_1085
	word32 a4_1086
	word32 a5_1087
	word32 a7_1088
	word32 s2_1089
	word32 s3_1090
	word32 s4_1091
	word32 s5_1092
	word32 s6_1093
	word32 s7_1094
	word32 s8_1095
	word32 s9_1096
	word32 s10_1097
	word32 s11_1098
	word32 t4_1099
	printf(ra_208, 0x23076398<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_1081, out a0_1082, out a1_1083, out a2_1084, out a3_1085, out a4_1086, out a5_1087, out a7_1088, out s2_1089, out s3_1090, out s4_1091, out s5_1092, out s6_1093, out s7_1094, out s8_1095, out s9_1096, out s10_1097, out s11_1098, out t4_1099)
l23024418:
	word32 a3_465
	word32 s1_935
	word32 s1_936
	word32 a0_937
	word32 a1_938
	word32 a2_939
	word32 a3_940
	word32 a4_941
	word32 a5_942
	word32 a7_943
	word32 s2_944
	word32 s3_945
	word32 s4_946
	word32 s5_947
	word32 s6_948
	word32 s7_949
	word32 s8_950
	word32 s9_951
	word32 s10_952
	word32 s11_953
	word32 t4_954
	printf(bt_uuid_to_str(ra, a0, fp + -56<i32>, 37<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s1_935, out a3_465), 0x230763D8<32>, a3_465, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_936, out a0_937, out a1_938, out a2_939, out a3_940, out a4_941, out a5_942, out a7_943, out s2_944, out s3_945, out s4_946, out s5_947, out s6_948, out s7_949, out s8_950, out s9_951, out s10_952, out s11_953, out t4_954)
l2302445C:
l230243DC:
	word32 s1_529
	word32 a2_855
	word32 a3_856
	word32 a4_857
	word32 a5_858
	word32 s9_848
	word32 s10_849
	word32 s11_850
	word32 t4_851
	word32 t1_852
	word32 a0_853
	word32 a1_854
	word32 s2_841
	word32 s3_842
	word32 s4_843
	word32 s5_844
	word32 s6_845
	word32 s7_846
	word32 s8_847
	word32 a0_834
	word32 a1_835
	word32 a2_836
	word32 a3_837
	word32 a4_838
	word32 a5_839
	word32 a7_840
	memset(printf(ra, 0x230762A4<32>, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_529, out a0_834, out a1_835, out a2_836, out a3_837, out a4_838, out a5_839, out a7_840, out s2_841, out s3_842, out s4_843, out s5_844, out s6_845, out s7_846, out s8_847, out s9_848, out s10_849, out s11_850, out t4_851), s1_529, 0<32>, 44<i32>, out t1_852, out a0_853, out a1_854, out a2_855, out a3_856, out a4_857, out a5_858)
l230243F6:
	return
discover_func_exit:


void ble_set_data_len(word32 ra, word32 s1, word32 a2, word32 a3, word32 s2, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_set_data_len_entry:
l23024554:
	word32 a0_107
	branch a2 == 3<32> l2302456E
l2302456E:
	word32 s0_11 = Mem7[3<32>:word32]
	branch true l23024584
l23024584:
	word32 a3_19
	word32 a3_34
	word32 a4_35
	word32 a5_36
	word32 a0_227
	word32 a2_228
	word32 a4_229
	word32 a5_230
	word32 a0_231
	word32 a2_232
	get_uint16_from_string(get_uint16_from_string(s0_11, a3 + 4<i32>, fp + -20<i32>, out a0_227, out a2_228, out a3_19, out a4_229, out a5_230), a3_19 + 8<i32>, fp + -18<i32>, out a0_231, out a2_232, out a3_34, out a4_35, out a5_36)
	word32 a0_50
	word32 mstatus_233
	ra = bt_le_set_data_len(ra, s1, a3_34, a4_35, a5_36, s2, s3, mstatus, dwLoc2C, dwLoc28, dwLoc18, dwArg08, dwArg20, dwArg24, dwArg30, dwArg44, dwArg48, a3, dwArg58, ra, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out a0_50, out a3, out mstatus_233)
	branch a0_50 == 0<32> l230245C4
l230245C4:
	a0_107 = 0x23075E10<32>
l230245B0:
	word32 s1_253
	word32 a0_254
	word32 a1_255
	word32 a2_256
	word32 a3_257
	word32 a4_258
	word32 a5_259
	word32 a7_260
	word32 s2_261
	word32 s3_262
	word32 s4_263
	word32 s5_264
	word32 s6_265
	word32 s7_266
	word32 s8_267
	word32 s9_268
	word32 s10_269
	word32 s11_270
	word32 t4_271
	printf(ra, 0x23075DE0<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_253, out a0_254, out a1_255, out a2_256, out a3_257, out a4_258, out a5_259, out a7_260, out s2_261, out s3_262, out s4_263, out s5_264, out s6_265, out s7_266, out s8_267, out s9_268, out s10_269, out s11_270, out t4_271)
l2302457A:
	a0_107 = 0x2307611C<32>
l23024560:
	a0_107 = 0x23075E94<32>
l23024568:
	word32 s1_234
	word32 a0_235
	word32 a1_236
	word32 a2_237
	word32 a3_238
	word32 a4_239
	word32 a5_240
	word32 a7_241
	word32 s2_242
	word32 s3_243
	word32 s4_244
	word32 s5_245
	word32 s6_246
	word32 s7_247
	word32 s8_248
	word32 s9_249
	word32 s10_250
	word32 s11_251
	word32 t4_252
	printf(ra, a0_107, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_234, out a0_235, out a1_236, out a2_237, out a3_238, out a4_239, out a5_240, out a7_241, out s2_242, out s3_243, out s4_244, out s5_245, out s6_246, out s7_247, out s8_248, out s9_249, out s10_250, out s11_251, out t4_252)
l230245BC:
	return
ble_set_data_len_exit:


void ble_subscribe(word32 ra, word32 s1, word32 a2, word32 a3, word32 s4, word32 s5, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg3C, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +003C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_subscribe_entry:
l230245CE:
	word32 a0_103
	branch a2 == 4<32> l230245E0
l230245E0:
	branch true l2302460E
l2302460E:
	word32 a0_284
	word32 a2_285
	word32 a3_286
	word32 a4_287
	word32 a5_288
	word32 s0_32 = get_uint16_from_string(a3, a3 + 4<i32>, 0x420120DA<32>, out a0_284, out a2_285, out a3_286, out a4_287, out a5_288)
	word32 a0_289
	word32 a2_290
	word32 a3_291
	word32 a4_292
	word32 a5_293
	word32 s0_46 = get_uint16_from_string(s0_32, s0_32 + 8<i32>, 0x420120D8<32>, out a0_289, out a2_290, out a3_291, out a4_292, out a5_293)
	word32 a0_52
	word32 a2_294
	word32 a3_295
	word32 a4_296
	word32 a5_297
	get_uint16_from_string(s0_46, s0_46 + 12<i32>, 0x420120DC<32>, out a0_52, out a2_294, out a3_295, out a4_296, out a5_297)
	word32 s1_64 = Mem17[a0_52:word32]
	Mem68[0x420120D4<32>:word32] = 0x23023CF2<32>
	word32 a0_72
	ra = bt_gatt_subscribe(ra, s1_64, a0_52, 0x420120B4<32>, s4, s5, mstatus, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg14, dwArg18, dwArg1C, dwArg3C, s1, ra, dwArg88, out a0_72, out a3)
	branch a0_72 == 0<32> l2302466E
l2302466E:
	a0_103 = 0x230760E0<32>
l23024656:
l2302466A_thunk_printf:
	word32 s1_298
	word32 a0_299
	word32 a1_300
	word32 a2_301
	word32 a3_302
	word32 a4_303
	word32 a5_304
	word32 a7_305
	word32 s2_306
	word32 s3_307
	word32 s4_308
	word32 s5_309
	word32 s6_310
	word32 s7_311
	word32 s8_312
	word32 s9_313
	word32 s10_314
	word32 s11_315
	word32 t4_316
	printf(ra, 0x230760C4<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_298, out a0_299, out a1_300, out a2_301, out a3_302, out a4_303, out a5_304, out a7_305, out s2_306, out s3_307, out s4_308, out s5_309, out s6_310, out s7_311, out s8_312, out s9_313, out s10_314, out s11_315, out t4_316)
	return
l230245F8:
	a0_103 = 0x2307611C<32>
l23024600:
l230245D4:
	a0_103 = 0x23075E94<32>
l230245DC:
l230245DC_thunk_printf:
	word32 s1_265
	word32 a0_266
	word32 a1_267
	word32 a2_268
	word32 a3_269
	word32 a4_270
	word32 a5_271
	word32 a7_272
	word32 s2_273
	word32 s3_274
	word32 s4_275
	word32 s5_276
	word32 s6_277
	word32 s7_278
	word32 s8_279
	word32 s9_280
	word32 s10_281
	word32 s11_282
	word32 t4_283
	printf(ra, a0_103, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_265, out a0_266, out a1_267, out a2_268, out a3_269, out a4_270, out a5_271, out a7_272, out s2_273, out s3_274, out s4_275, out s5_276, out s6_277, out s7_278, out s8_279, out s9_280, out s10_281, out s11_282, out t4_283)
	return
ble_subscribe_exit:


void ble_write(word32 ra, word32 s1, word32 a2, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg5C, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgBC, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +005C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00BC:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_write_entry:
l23024678:
	word32 a0_147
	branch a2 == 5<32> l2302468A
l2302468A:
	branch Mem0[0x4200E19C<32>:int32] != 0<32> l230246C2
l230246C2:
	branch Mem22[0x42012100<32>:word32] == 0<32> l230246DC
l230246DC:
	word32 a0_370
	word32 a2_371
	word32 a3_372
	word32 a4_373
	word32 a5_374
	word32 s0_40 = get_uint16_from_string(0x420120E8<32>, a3 + 4<i32>, 0x42012104<32>, out a0_370, out a2_371, out a3_372, out a4_373, out a5_374)
	word32 a0_375
	word32 a2_376
	word32 a3_377
	word32 a4_378
	word32 a5_379
	word32 s0_54 = get_uint16_from_string(s0_40, a3 + 8<i32>, s0_40 + 30<i32>, out a0_375, out a2_376, out a3_377, out a4_378, out a5_379)
	word32 a0_380
	word32 a2_381
	word32 a3_382
	word32 a4_383
	word32 a5_384
	word32 s3_72 = CONVERT(Mem22[get_uint16_from_string(s0_54, a3 + 12<i32>, s0_54 + 36<i32>, out a0_380, out a2_381, out a3_382, out a4_383, out a5_384) + 36<i32>:uint16], uint16, word32)
	branch s3_72 <=u 512<i32> l23024712
l2302470E:
	s3_72 = 512<i32>
l23024712:
	word32 a3_88
	word32 s1_94
	word32 s2_95
	word32 s3_96
	word32 a0_385
	word32 s0_93 = get_bytearray_from_string(0x42011E8C<32>, CONVERT(SLICE(s3_72, word16, 0), word16, word32), dwArg0108, out s1_94, out a0_385, out a3_88, out s2_95, out s3_96)
	word32 a0_106 = Mem22[0x4200E19C<32>:int32]
	Mem110[s0_93 + 32<i32>:word32] = 0x42011E8C<32>
	Mem111[s0_93 + 36<i32>:word16] = SLICE(s3_96, word16, 0)
	Mem112[0x23023E14<32>:word32] = s0_93
	word32 a0_116
	ra = bt_gatt_write(ra, s1_94, a0_106, s2_95 + 232<i32>, a3_88, s2_95, s3_96, mstatus, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg28, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg5C, s1, dwArg88, dwArg8C, dwArgA8, out a0_116, out a3)
	branch a0_116 == 0<32> l2302476A
l2302476A:
	a0_147 = 0x230761A4<32>
l2302474E:
l23024766_thunk_printf:
	word32 s1_386
	word32 a0_387
	word32 a1_388
	word32 a2_389
	word32 a3_390
	word32 a4_391
	word32 a5_392
	word32 a7_393
	word32 s2_394
	word32 s3_395
	word32 s4_396
	word32 s5_397
	word32 s6_398
	word32 s7_399
	word32 s8_400
	word32 s9_401
	word32 s10_402
	word32 s11_403
	word32 t4_404
	printf(ra, 0x2307618C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_386, out a0_387, out a1_388, out a2_389, out a3_390, out a4_391, out a5_392, out a7_393, out s2_394, out s3_395, out s4_396, out s5_397, out s6_398, out s7_399, out s8_400, out s9_401, out s10_402, out s11_403, out t4_404)
	return
l230246D2:
	a0_147 = 0x2307617C<32>
l230246A8:
	a0_147 = 0x2307611C<32>
l230246B0:
l2302467E:
	a0_147 = 0x23075E94<32>
l23024686:
l23024686_thunk_printf:
	word32 s1_351
	word32 a0_352
	word32 a1_353
	word32 a2_354
	word32 a3_355
	word32 a4_356
	word32 a5_357
	word32 a7_358
	word32 s2_359
	word32 s3_360
	word32 s4_361
	word32 s5_362
	word32 s6_363
	word32 s7_364
	word32 s8_365
	word32 s9_366
	word32 s10_367
	word32 s11_368
	word32 t4_369
	printf(ra, a0_147, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_351, out a0_352, out a1_353, out a2_354, out a3_355, out a4_356, out a5_357, out a7_358, out s2_359, out s3_360, out s4_361, out s5_362, out s6_363, out s7_364, out s8_365, out s9_366, out s10_367, out s11_368, out t4_369)
	return
ble_write_exit:


void ble_read(word32 ra, word32 s1, word32 a2, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg5C, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +005C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_read_entry:
l23024774:
	word32 a0_121
	branch a2 == 3<32> l23024786
l23024786:
	word32 s0_9 = Mem7[3<32>:word32]
	branch true l230247B4
l230247B4:
	word32 a0_38
	word32 a2_40
	word32 a3_41
	word32 a0_275
	word32 a2_276
	word32 a3_277
	word32 a4_278
	word32 a5_279
	word32 a4_280
	word32 a5_281
	get_uint16_from_string(get_uint16_from_string(s0_9, a3 + 4<i32>, 0x420120AC<32>, out a0_275, out a2_276, out a3_277, out a4_278, out a5_279), a3 + 8<i32>, 0x420120AE<32>, out a0_38, out a2_40, out a3_41, out a4_280, out a5_281)
	Mem53[0x2302482C<32>:word32] = 0x4201208C<32>
	Mem56[0x1D<32>:word32] = 0x4201208C<32>
	word32 a0_58
	word32 s0_282
	word32 s1_283
	word32 s2_284
	word32 s3_285
	word32 mstatus_286
	ra = bt_gatt_read(ra, 0x4201208C<32>, a0_38, a2_40, a3_41, a3, 0x42012000<32>, mstatus, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg28, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg5C, s1, dwArg88, dwArg8C, dwArgA8, out s0_282, out s1_283, out a0_58, out a3, out s2_284, out s3_285, out mstatus_286)
	branch a0_58 == 0<32> l2302480A
l2302480A:
	a0_121 = 0x23075CB8<32>
l230247F2:
l23024806_thunk_printf:
	word32 s1_287
	word32 a0_288
	word32 a1_289
	word32 a2_290
	word32 a3_291
	word32 a4_292
	word32 a5_293
	word32 a7_294
	word32 s2_295
	word32 s3_296
	word32 s4_297
	word32 s5_298
	word32 s6_299
	word32 s7_300
	word32 s8_301
	word32 s9_302
	word32 s10_303
	word32 s11_304
	word32 t4_305
	printf(ra, 0x23075CA0<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_287, out a0_288, out a1_289, out a2_290, out a3_291, out a4_292, out a5_293, out a7_294, out s2_295, out s3_296, out s4_297, out s5_298, out s6_299, out s7_300, out s8_301, out s9_302, out s10_303, out s11_304, out t4_305)
	return
l2302479E:
	a0_121 = 0x2307611C<32>
l230247A6:
l2302477A:
	a0_121 = 0x23075E94<32>
l23024782:
l23024782_thunk_printf:
	word32 s1_256
	word32 a0_257
	word32 a1_258
	word32 a2_259
	word32 a3_260
	word32 a4_261
	word32 a5_262
	word32 a7_263
	word32 s2_264
	word32 s3_265
	word32 s4_266
	word32 s5_267
	word32 s6_268
	word32 s7_269
	word32 s8_270
	word32 s9_271
	word32 s10_272
	word32 s11_273
	word32 t4_274
	printf(ra, a0_121, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_256, out a0_257, out a1_258, out a2_259, out a3_260, out a4_261, out a5_262, out a7_263, out s2_264, out s3_265, out s4_266, out s5_267, out s6_268, out s7_269, out s8_270, out s9_271, out s10_272, out s11_273, out t4_274)
	return
ble_read_exit:


void read_func(word32 ra, word32 s1, word32 a3, word32 dwArg30, word32 dwArg34, word32 dwArg7C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
read_func_entry:
l23024814:
	word32 s1_34
	word32 s9_277
	word32 s10_278
	word32 s11_279
	word32 t4_280
	word32 s8_276
	word32 s7_275
	word32 s6_274
	word32 s5_273
	word32 s4_272
	word32 a7_271
	word32 a5_270
	word32 a4_269
	word32 a2_267
	word32 a3_268
	word32 a0_265
	word32 a1_266
	word32 t1_281
	word32 a0_282
	word32 a1_283
	word32 a2_284
	word32 a3_285
	word32 a4_286
	word32 a5_287
	word32 s2_108
	word32 s3_131
	word32 ra_115 = memset(printf(ra, 0x230764B0<32>, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_34, out a0_265, out a1_266, out a2_267, out a3_268, out a4_269, out a5_270, out a7_271, out s2_108, out s3_131, out s4_272, out s5_273, out s6_274, out s7_275, out s8_276, out s9_277, out s10_278, out s11_279, out t4_280), fp + -56<i32>, 0<32>, 0xF<32>, out t1_281, out a0_282, out a1_283, out a2_284, out a3_285, out a4_286, out a5_287)
	branch CONVERT(SLICE(s1_34 + -1<i32>, word16, 0), word16, word32) <=u 0x15<32> l23024872
l23024872:
	word32 a3_71
	word32 a2_288
	word32 a4_289
	word32 a5_290
	word32 a6_291
	word32 a7_292
	memcpy(fp + -56<i32>, s2_108, s1_34, out a2_288, out a3_71, out a4_289, out a5_290, out a6_291, out a7_292)
	word32 a0_293
	word32 a1_294
	word32 a2_295
	word32 a4_296
	word32 a5_297
	word32 a7_298
	word32 s4_299
	word32 s5_300
	word32 s6_301
	word32 s7_302
	word32 s8_303
	word32 s9_304
	word32 s10_305
	word32 s11_306
	word32 t4_307
	word32 s1_107
	word32 a3_116
	ra_115 = printf(ra_115, 0x230764D4<32>, a3_71, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_107, out a0_293, out a1_294, out a2_295, out a3_116, out a4_296, out a5_297, out a7_298, out s2_108, out s3_131, out s4_299, out s5_300, out s6_301, out s7_302, out s8_303, out s9_304, out s10_305, out s11_306, out t4_307)
	word32 s0_104 = 0<32>
	word32 s4_105 = 0x23076000<32>
l23024890:
	branch s0_104 >= s1_107 l2302484E
l23024894:
	s0_104 = s0_104 + 1<32>
	word32 a0_315
	word32 a1_316
	word32 a2_317
	word32 a4_318
	word32 a5_319
	word32 a7_320
	word32 s5_321
	word32 s6_322
	word32 s7_323
	word32 s8_324
	word32 s9_325
	word32 s10_326
	word32 s11_327
	word32 t4_328
	ra_115 = printf(ra_115, s4_105 + 1256<i32>, a3_116, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_107, out a0_315, out a1_316, out a2_317, out a3_116, out a4_318, out a5_319, out a7_320, out s2_108, out s3_131, out s4_105, out s5_321, out s6_322, out s7_323, out s8_324, out s9_325, out s10_326, out s11_327, out t4_328)
l2302484E:
	branch s2_108 != 0<32> l23024862
l23024854:
	word32 t1_308
	word32 a0_309
	word32 a1_310
	word32 a2_311
	word32 a3_312
	word32 a4_313
	word32 a5_314
	memset(ra_115, s3_131, 0<32>, 40<i32>, out t1_308, out a0_309, out a1_310, out a2_311, out a3_312, out a4_313, out a5_314)
l23024862:
	return
read_func_exit:


void data_cb(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
data_cb_entry:
l230248A8:
	branch CONVERT(Mem0[a0:byte], byte, word32) >u 0xFFFFFFF7<32> l230248DA
l230248DA:
	return
l230248B4:
	word32 a2_12 = CONVERT(Mem11[a0 + 1<i32>:byte], byte, word32)
	branch a2_12 <=u 0x1D<32> l230248C6
l230248C4:
	a2_12 = 0x1D<32>
l230248C6:
	word32 a2_68
	word32 a3_69
	word32 a4_70
	word32 a5_71
	word32 a6_72
	word32 a7_73
	memcpy(a1, a1, a2_12 & 255<i32>, out a2_68, out a3_69, out a4_70, out a5_71, out a6_72, out a7_73)
	return
data_cb_exit:


void ble_discover(word32 ra, word32 s0, word32 a2, word32 a3, word32 s4, word32 dwArg00, word32 dwArg04, word32 dwArg40, word32 dwArg44, word32 dwArg4C, word32 dwArg68, word32 dwArg8C, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] ra:[0..31] s0:[0..31] s4:[24..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ble_discover_entry:
l230248DE:
	word32 a0_155
	byte bLoc21_227 = SLICE(s4, byte, 24)
	branch a2 == 5<32> l23024902
l23024902:
	branch Mem17[0x4200E19C<32>:int32] != 0<32> l2302491A
l2302491A:
	Mem27[0x230243EC<32>:word32] = 0x42011E44<32>
	Mem33[0x42011E64<32>:word16] = 1<16>
	Mem34[0x42011E6A<32>:word16] = 0xFFFF<16>
	word32 a0_355
	get_uint8_from_string(s0, a3 + 4<i32>, fp + -33<i32>, out a0_355, out a3)
	word32 a5_48 = CONVERT(bLoc21_227, byte, word32)
	branch a5_48 != 0<32> l230249BE
l230249BE:
	branch a5_48 != 1<32> l230249C8
l230249C8:
	branch a5_48 == 2<32> l230249C2
l230249CE:
	branch a5_48 == 3<32> l230249C2
l230249D4:
	branch a5_48 == 4<32> l230249C2
l230249DA:
	a0_155 = 0x23075B6C<32>
l230249C2:
	Mem57[0x42011E6C<32>:byte] = SLICE(a5_48, byte, 0)
l23024950:
	Mem58[0x42011E6C<32>:byte] = 0<8>
l23024954:
	word32 a3_390
	word32 a4_391
	word32 a5_392
	word32 a0_388
	word32 a2_389
	word32 s0_74 = get_uint16_from_string(0x42011E44<32>, a3 + 8<i32>, 0x4200E1A2<32>, out a0_388, out a2_389, out a3_390, out a4_391, out a5_392)
	word32 s2_80 = 0x4200E1A0<32>
	branch CONVERT(Mem78[0x4200E1A2<32>:uint16], uint16, word32) != 0<32> l23024974
l23024972:
	s2_80 = 0<32>
l23024974:
	Mem87[s0_74 + 24<i32>:word32] = s2_80
	word32 a4_378
	word32 a5_379
	word32 a0_375
	word32 a2_376
	word32 a3_377
	word32 s0_96 = get_uint16_from_string(s0_74, a3 + 12<i32>, s0_74 + 32<i32>, out a0_375, out a2_376, out a3_377, out a4_378, out a5_379)
	word32 a3_105
	word32 a2_381
	word32 a4_382
	word32 a5_383
	word32 a0_380
	get_uint16_from_string(s0_96, a3 + 16<i32>, s0_96 + 38<i32>, out a0_380, out a2_381, out a3_105, out a4_382, out a5_383)
	word32 a0_129
	word32 s3_387
	word32 s0_384
	word32 s1_385
	word32 s2_386
	ra = bt_gatt_discover(ra, 0x42012000<32>, Mem87[0x4200E19C<32>:int32], 0x42011E44<32>, a3_105, s2_80, 0x4200E1A0<32>, dwArg00, dwArg04, dwArg4C, dwArgA4, dwArgC0, dwArgC4, dwArgE8, dwArg0108, out s0_384, out s1_385, out a0_129, out a3, out s2_386, out s3_387)
	branch a0_129 == 0<32> l230249E4
l230249E4:
	a0_155 = 0x23075BA4<32>
l230249A0:
	word32 s4_403
	word32 s3_402
	word32 s8_407
	word32 s7_406
	word32 s6_405
	word32 s11_410
	word32 s9_408
	word32 s10_409
	word32 t4_411
	word32 s5_404
	word32 a5_399
	word32 a7_400
	word32 s2_401
	word32 a2_396
	word32 a3_397
	word32 a4_398
	word32 s1_393
	word32 a0_394
	word32 a1_395
	printf(ra, 0x23075B88<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_393, out a0_394, out a1_395, out a2_396, out a3_397, out a4_398, out a5_399, out a7_400, out s2_401, out s3_402, out s4_403, out s5_404, out s6_405, out s7_406, out s8_407, out s9_408, out s10_409, out s11_410, out t4_411)
l23024910:
	a0_155 = 0x2307611C<32>
l230248F4:
	a0_155 = 0x23075E94<32>
l230248FC:
	word32 s10_372
	word32 s11_373
	word32 t4_374
	word32 s9_371
	word32 s8_370
	word32 s7_369
	word32 s6_368
	word32 s5_367
	word32 s4_366
	word32 a4_361
	word32 a5_362
	word32 a7_363
	word32 s2_364
	word32 s3_365
	word32 s1_356
	word32 a0_357
	word32 a1_358
	word32 a2_359
	word32 a3_360
	printf(ra, a0_155, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_356, out a0_357, out a1_358, out a2_359, out a3_360, out a4_361, out a5_362, out a7_363, out s2_364, out s3_365, out s4_366, out s5_367, out s6_368, out s7_369, out s8_370, out s9_371, out s10_372, out s11_373, out t4_374)
l230249AC:
	0<32> = dwArg0128
	return
ble_discover_exit:


void ble_auth_passkey(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_auth_passkey_entry:
l230249EE:
	word32 a0_70
	branch a2 == 2<32> l23024A00
l23024A00:
	dwArg74 = ra
	branch true l23024A22
l23024A22:
	word32 a4_234
	word32 a0_14 = atoi(a0, out a3, out a4_234)
	branch a0_14 <=u 0xF423F<32> l23024A40
l23024A40:
l23024A48_thunk_bt_conn_auth_passkey_entry:
	bt_conn_auth_passkey_entry(ra, s0, a0_14, s2, mstatus, dwArg08, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128)
	return
l23024A36:
	a0_70 = 0x23075A40<32>
l23024A12:
	a0_70 = 0x2307611C<32>
l23024A1A:
l230249F4:
	a0_70 = 0x23075E94<32>
l230249FC:
l230249FC_thunk_printf:
	word32 a3_219
	word32 a4_220
	word32 a1_217
	word32 a2_218
	word32 s1_215
	word32 a0_216
	word32 a5_221
	word32 a7_222
	word32 s2_223
	word32 s3_224
	word32 s4_225
	word32 s5_226
	word32 s6_227
	word32 s7_228
	word32 s8_229
	word32 s9_230
	word32 s10_231
	word32 s11_232
	word32 t4_233
	printf(ra, a0_70, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_215, out a0_216, out a1_217, out a2_218, out a3_219, out a4_220, out a5_221, out a7_222, out s2_223, out s3_224, out s4_225, out s5_226, out s6_227, out s7_228, out s8_229, out s9_230, out s10_231, out s11_232, out t4_233)
	return
ble_auth_passkey_exit:


void ble_conn_update(word32 ra, word32 s1, word32 a2, word32 a3, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_conn_update_entry:
l23024A4C:
	word32 a0_105
	branch a2 == 5<32> l23024A66
l23024A66:
	word32 a0_241
	word32 a2_242
	word32 a3_243
	word32 a4_244
	word32 a5_245
	word32 s0_22 = get_uint16_from_string(a3, a3 + 4<i32>, fp + 0xFFFFFFE8<32>, out a0_241, out a2_242, out a3_243, out a4_244, out a5_245)
	word32 a0_246
	word32 a2_247
	word32 a3_248
	word32 a4_249
	word32 a5_250
	word32 s0_36 = get_uint16_from_string(s0_22, s0_22 + 8<i32>, fp + 0xFFFFFFEA<32>, out a0_246, out a2_247, out a3_248, out a4_249, out a5_250)
	word32 a0_251
	word32 a2_252
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 s0_50 = get_uint16_from_string(s0_36, s0_36 + 12<i32>, fp + 0xFFFFFFEC<32>, out a0_251, out a2_252, out a3_253, out a4_254, out a5_255)
	word32 a3_59
	word32 a0_256
	word32 a2_257
	word32 a4_258
	word32 a5_259
	get_uint16_from_string(s0_50, s0_50 + 16<i32>, fp + 0xFFFFFFEE<32>, out a0_256, out a2_257, out a3_59, out a4_258, out a5_259)
	word32 a0_87
	ra = bt_conn_le_param_update(ra, s1, Mem7[0x4200E19C<32>:int32], fp + 0xFFFFFFE8<32>, a3_59, s3, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out a0_87, out a3)
	branch a0_87 == 0<32> l23024ABA
l23024ABA:
	a0_105 = 0x23075A88<32>
l23024AA6:
	word32 s1_260
	word32 a0_261
	word32 a1_262
	word32 a2_263
	word32 a3_264
	word32 a4_265
	word32 a5_266
	word32 a7_267
	word32 s2_268
	word32 s3_269
	word32 s4_270
	word32 s5_271
	word32 s6_272
	word32 s7_273
	word32 s8_274
	word32 s9_275
	word32 s10_276
	word32 s11_277
	word32 t4_278
	printf(ra, 0x23075A68<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_260, out a0_261, out a1_262, out a2_263, out a3_264, out a4_265, out a5_266, out a7_267, out s2_268, out s3_269, out s4_270, out s5_271, out s6_272, out s7_273, out s8_274, out s9_275, out s10_276, out s11_277, out t4_278)
l23024A58:
	a0_105 = 0x23075E94<32>
l23024A60:
	word32 s1_279
	word32 a0_280
	word32 a1_281
	word32 a2_282
	word32 a3_283
	word32 a4_284
	word32 a5_285
	word32 a7_286
	word32 s2_287
	word32 s3_288
	word32 s4_289
	word32 s5_290
	word32 s6_291
	word32 s7_292
	word32 s8_293
	word32 s9_294
	word32 s10_295
	word32 s11_296
	word32 t4_297
	printf(ra, a0_105, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_279, out a0_280, out a1_281, out a2_282, out a3_283, out a4_284, out a5_285, out a7_286, out s2_287, out s3_288, out s4_289, out s5_290, out s6_291, out s7_292, out s8_293, out s9_294, out s10_295, out s11_296, out t4_297)
l23024AB2:
	return
ble_conn_update_exit:


void ble_unpair(word32 ra, word32 s0, word32 a2, word32 a3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_unpair_entry:
l23024AC4:
	word32 a0_89
	branch a2 == 3<32> l23024AE0
l23024AE0:
	word32 a0_189
	word32 a3_190
	get_uint8_from_string(s0, a3 + 4<i32>, fp + -24<i32>, out a0_189, out a3_190)
	word32 s1_38
	word32 s2_39
	word32 a0_191
	word32 a3_192
	word32 s3_193
	word32 s0_37 = get_bytearray_from_string(fp + -32<i32>, 6<32>, dwArgF8, out s1_38, out a0_191, out a3_192, out s2_39, out s3_193)
	reverse_bytearray(fp + -32<i32>, fp + -23<i32>, 6<32>)
	word32 a0_59
	word32 s0_194
	word32 s1_195
	word32 s2_196
	word32 s3_197
	word32 s4_198
	word32 s5_199
	word32 mstatus_200
	ra = bt_unpair(ra, s0_37, s1_38, 0<32>, fp + -24<i32>, s2_39, s4, mstatus, dwLoc2C, dwLoc28, dwLoc24, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_194, out s1_195, out a0_59, out a3, out s2_196, out s3_197, out s4_198, out s5_199, out mstatus_200)
	branch a0_59 == 0<32> l23024B1A
l23024B1A:
	a0_89 = 0x23076104<32>
l23024B10:
	a0_89 = 0x230760F0<32>
l23024ACE:
	a0_89 = 0x23075E94<32>
l23024AD6:
	word32 s1_201
	word32 a0_202
	word32 a1_203
	word32 a2_204
	word32 a3_205
	word32 a4_206
	word32 a5_207
	word32 a7_208
	word32 s2_209
	word32 s3_210
	word32 s4_211
	word32 s5_212
	word32 s6_213
	word32 s7_214
	word32 s8_215
	word32 s9_216
	word32 s10_217
	word32 s11_218
	word32 t4_219
	printf(ra, a0_89, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_201, out a0_202, out a1_203, out a2_204, out a3_205, out a4_206, out a5_207, out a7_208, out s2_209, out s3_210, out s4_211, out s5_212, out s6_213, out s7_214, out s8_215, out s9_216, out s10_217, out s11_218, out t4_219)
	return
ble_unpair_exit:


void ble_start_scan(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 s2, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_start_scan_entry:
l23024B24:
	word32 a0_106
	branch a2 == 5<32> l23024B3E
l23024B3E:
	word32 a0_247
	word32 a3_248
	word32 s0_22 = get_uint8_from_string(a3, a3 + 4<i32>, fp + 0xFFFFFFE8<32>, out a0_247, out a3_248)
	word32 a0_249
	word32 a3_250
	word32 s0_36 = get_uint8_from_string(s0_22, s0_22 + 8<i32>, fp + 0xFFFFFFE9<32>, out a0_249, out a3_250)
	word32 a0_251
	word32 a2_252
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 s0_50 = get_uint16_from_string(s0_36, s0_36 + 12<i32>, fp + 0xFFFFFFEA<32>, out a0_251, out a2_252, out a3_253, out a4_254, out a5_255)
	word32 a0_75
	word32 a0_256
	word32 a2_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	ra = bt_le_scan_start(ra, get_uint16_from_string(s0_50, s0_50 + 16<i32>, fp + 0xFFFFFFEC<32>, out a0_256, out a2_257, out a3_258, out a4_259, out a5_260), s1, fp + 0xFFFFFFE8<32>, s2, s4, mstatus, dwLoc20, dwLoc1C, dwLoc18, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out a0_75, out a3)
	branch a0_75 == 0<32> l23024B92
l23024B92:
	a0_106 = 0x2307602C<32>
l23024B7E:
	word32 s1_261
	word32 a0_262
	word32 a1_263
	word32 a2_264
	word32 a3_265
	word32 a4_266
	word32 a5_267
	word32 a7_268
	word32 s2_269
	word32 s3_270
	word32 s4_271
	word32 s5_272
	word32 s6_273
	word32 s7_274
	word32 s8_275
	word32 s9_276
	word32 s10_277
	word32 s11_278
	word32 t4_279
	printf(ra, 0x23076008<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_261, out a0_262, out a1_263, out a2_264, out a3_265, out a4_266, out a5_267, out a7_268, out s2_269, out s3_270, out s4_271, out s5_272, out s6_273, out s7_274, out s8_275, out s9_276, out s10_277, out s11_278, out t4_279)
l23024B30:
	a0_106 = 0x23075E94<32>
l23024B38:
	word32 s1_280
	word32 a0_281
	word32 a1_282
	word32 a2_283
	word32 a3_284
	word32 a4_285
	word32 a5_286
	word32 a7_287
	word32 s2_288
	word32 s3_289
	word32 s4_290
	word32 s5_291
	word32 s6_292
	word32 s7_293
	word32 s8_294
	word32 s9_295
	word32 s10_296
	word32 s11_297
	word32 t4_298
	printf(ra, a0_106, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_280, out a0_281, out a1_282, out a2_283, out a3_284, out a4_285, out a5_286, out a7_287, out s2_288, out s3_289, out s4_290, out s5_291, out s6_292, out s7_293, out s8_294, out s9_295, out s10_296, out s11_297, out t4_298)
l23024B8A:
	return
ble_start_scan_exit:


void ble_set_device_name(word32 ra, word32 s0, word32 s1, word32 a0, word32 s4, word32 s6, word32 s7, word32 s8, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg70, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
ble_set_device_name_entry:
l23024B9C:
	word32 a5_239
	word32 a4_238
	word32 a3_237
	word32 a2_236
	word32 a1_235
	word32 a0_12 = strlen(a0, out a1_235, out a2_236, out a3_237, out a4_238, out a5_239)
	branch a0_12 == 0<32> l23024BDC
l23024BAC:
	word32 a2_245
	word32 a3_246
	word32 a4_247
	word32 a5_248
	word32 a1_244
	a0_12 = strlen(a0_12, out a1_244, out a2_245, out a3_246, out a4_247, out a5_248)
	branch a0_12 >u 0x1D<32> l23024BDC
l23024BDC:
	word32 a3_30
	word32 a5_243
	word32 a4_242
	word32 a2_241
	word32 a1_240
	strlen(a0_12, out a1_240, out a2_241, out a3_30, out a4_242, out a5_243)
l23024BF2_thunk_printf:
	word32 s1_272
	word32 a0_273
	word32 a1_274
	word32 a2_275
	word32 a3_276
	word32 a4_277
	word32 a5_278
	word32 a7_279
	word32 s2_280
	word32 s3_281
	word32 s4_282
	word32 s5_283
	word32 s6_284
	word32 s7_285
	word32 s8_286
	word32 s9_287
	word32 s10_288
	word32 s11_289
	word32 t4_290
	printf(ra, 0x23075E80<32>, a3_30, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_272, out a0_273, out a1_274, out a2_275, out a3_276, out a4_277, out a5_278, out a7_279, out s2_280, out s3_281, out s4_282, out s5_283, out s6_284, out s7_285, out s8_286, out s9_287, out s10_288, out s11_289, out t4_290)
	return
l23024BB8:
	word32 a0_103
	word32 a0_72
	word32 a3_75
	word32 s0_249
	word32 s1_250
	word32 s3_251
	word32 mstatus_252
	word32 ra_85 = bt_set_name(ra, s1, a0_12, s4, s6, s7, s8, mstatus, dwLoc10, s0, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_249, out s1_250, out a0_72, out a3_75, out s3_251, out mstatus_252)
	branch a0_72 == 0<32> l23024BD2
l23024BD2:
	a0_103 = 0x23075E5C<32>
l23024BC0:
	a0_103 = 0x23075E40<32>
l23024BC8:
l23024BCE_thunk_printf:
	word32 s1_253
	word32 a0_254
	word32 a1_255
	word32 a2_256
	word32 a3_257
	word32 a4_258
	word32 a5_259
	word32 a7_260
	word32 s2_261
	word32 s3_262
	word32 s4_263
	word32 s5_264
	word32 s6_265
	word32 s7_266
	word32 s8_267
	word32 s9_268
	word32 s10_269
	word32 s11_270
	word32 t4_271
	printf(ra_85, a0_103, a3_75, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_253, out a0_254, out a1_255, out a2_256, out a3_257, out a4_258, out a5_259, out a7_260, out s2_261, out s3_262, out s4_263, out s5_264, out s6_265, out s7_266, out s8_267, out s9_268, out s10_269, out s11_270, out t4_271)
	return
ble_set_device_name_exit:


void ble_init(word32 ra, word32 a3, word32 a4, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
ble_init_entry:
l23024BF6:
	word32 a0_20
	branch CONVERT(Mem5[0x4200E198<32>:byte], byte, word32) == 0<32> l23024C1C
l23024C1C:
	Mem14[0x4200E19C<32>:word32] = 0<32>
	bt_conn_cb_register(0x4200D4E8<32>, a4)
	Mem19[0x4200E198<32>:byte] = 1<8>
	a0_20 = 0x23075C88<32>
l23024C0A:
	a0_20 = 0x23075C74<32>
l23024C12:
l23024C18_thunk_printf:
	word32 a7_77
	word32 a5_76
	word32 a4_75
	word32 a3_74
	word32 a2_73
	word32 a1_72
	word32 a0_71
	word32 s1_70
	word32 s2_78
	word32 s3_79
	word32 s4_80
	word32 s5_81
	word32 s6_82
	word32 s7_83
	word32 s8_84
	word32 s9_85
	word32 s10_86
	word32 s11_87
	word32 t4_88
	printf(ra, a0_20, a3, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_70, out a0_71, out a1_72, out a2_73, out a3_74, out a4_75, out a5_76, out a7_77, out s2_78, out s3_79, out s4_80, out s5_81, out s6_82, out s7_83, out s8_84, out s9_85, out s10_86, out s11_87, out t4_88)
	return
ble_init_exit:


word32 bt_addr_le_to_str.constprop.14(word32 ra, word32 a0, word32 a1, word32 dwArg08, word32 dwArg34, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      device_found
//      ble_read_local_address
//      connected
//      disconnected
//      security_changed
//      auth_passkey_display
//      auth_passkey_entry
//      auth_passkey_confirm
//      auth_cancel
//      auth_pairing_confirm
//      auth_pairing_complete
//      auth_pairing_failed
//      identity_resolved
//      ble_get_all_conn_info
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0034:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 ra s0 s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bt_addr_le_to_str.constprop.14_entry:
l23024C40:
	word32 a1_20
	word32 a3_13 = CONVERT(Mem11[a0:byte], byte, word32)
	word32 s2_17 = a1
	word32 s1_18 = fp + -28<i32>
	branch a3_13 == 1<32> l23024CC0
l23024CC0:
	a1_20 = 0x230761D8<32>
l23024C5A:
	branch a3_13 == 0<32> l23024C7A
l23024C7A:
	a1_20 = 0x230761D0<32>
l23024C5C:
	branch a3_13 == 2<32> l23024CCA
l23024CCA:
	a1_20 = 0x230761E0<32>
l23024C62:
	branch a3_13 == 3<32> l23024CD4
l23024CD4:
	a1_20 = 0x230761EC<32>
l23024C82:
	word32 a4_182
	word32 a5_183
	strcpy(fp + -28<i32>, a1_20, out a4_182, out a5_183)
l23024C68:
	word32 s11_167
	word32 s9_165
	word32 s10_166
	word32 s7_163
	word32 s8_164
	word32 s5_161
	word32 s6_162
	word32 s3_159
	word32 s4_160
	word32 a4_157
	word32 a5_158
	word32 a2_155
	word32 a3_156
	word32 s0_153
	word32 a0_154
	ra = snprintf(ra, fp + -28<i32>, 0xA<32>, 0x230761F8<32>, dwLoc18, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C, out s0_153, out s1_18, out a0_154, out a2_155, out a3_156, out a4_157, out a5_158, out s2_17, out s3_159, out s4_160, out s5_161, out s6_162, out s7_163, out s8_164, out s9_165, out s10_166, out s11_167)
l23024C88:
	word32 a3_88
	word32 s1_94
	word32 s3_98
	word32 s0_168
	word32 a0_169
	word32 a2_170
	word32 a4_171
	word32 a5_172
	word32 s2_173
	word32 s4_174
	word32 s5_175
	word32 s6_176
	word32 s7_177
	word32 s8_178
	word32 s9_179
	word32 s10_180
	word32 s11_181
	word32 ra_92 = snprintf(ra, s2_17, 0x1E<32>, 0x23076200<32>, dwLoc18, dwArg08, dwArg34, s1_18, dwArg54, dwArg78, dwArg9C, out s0_168, out s1_94, out a0_169, out a2_170, out a3_88, out a4_171, out a5_172, out s2_173, out s3_98, out s4_174, out s5_175, out s6_176, out s7_177, out s8_178, out s9_179, out s10_180, out s11_181)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_94
	a3Out = a3_88
	s3Out = s3_98
	return ra_92
bt_addr_le_to_str.constprop.14_exit:


void device_found(word32 ra, word32 s2, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg5C, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +005C:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
device_found_entry:
l23024CDE:
	word32 a3_26
	word32 s2_40
	word32 s1_73
	word32 t1_142
	word32 a0_143
	word32 a1_144
	word32 a2_145
	word32 a4_146
	word32 a5_147
	word32 s0_148
	word32 a3_149
	word32 s3_150
	word32 s1_151
	word32 a0_152
	word32 a1_153
	word32 a2_154
	word32 a3_155
	word32 a4_156
	word32 a5_157
	word32 a7_158
	word32 s2_159
	word32 s3_160
	word32 s4_161
	word32 s5_162
	word32 s6_163
	word32 s7_164
	word32 s8_165
	word32 s9_166
	word32 s10_167
	word32 s11_168
	word32 t4_169
	printf(bt_addr_le_to_str.constprop.14(bt_data_parse(memset(ra, fp + -48<i32>, 0<32>, 0x1E<32>, out t1_142, out a0_143, out a1_144, out a2_145, out a3_26, out a4_146, out a5_147), a3_26, 0x230248A8<32>, fp + -48<i32>, a3_26, dwArgC8, out s2_40), s2_40, fp + -80<i32>, dwLoc58, dwLoc2C, dwLoc10, dwLoc0C, dwArg18, dwArg3C, dwArgC8, out s0_148, out s1_73, out a3_149, out s3_150), 0x23076258<32>, s1_73, dwLoc58, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_151, out a0_152, out a1_153, out a2_154, out a3_155, out a4_156, out a5_157, out a7_158, out s2_159, out s3_160, out s4_161, out s5_162, out s6_163, out s7_164, out s8_165, out s9_166, out s10_167, out s11_168, out t4_169)
	return
device_found_exit:


void ble_read_local_address(word32 ra, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_read_local_address_entry:
l23024D34:
	bt_get_local_public_address(fp + -64<i32>)
	word32 a3_26
	word32 s0_155
	word32 s1_156
	word32 s3_157
	word32 s1_158
	word32 a0_159
	word32 a1_160
	word32 a2_161
	word32 a3_162
	word32 a4_163
	word32 a5_164
	word32 a7_165
	word32 s2_166
	word32 s3_167
	word32 s4_168
	word32 s5_169
	word32 s6_170
	word32 s7_171
	word32 s8_172
	word32 s9_173
	word32 s10_174
	word32 s11_175
	word32 t4_176
	word32 ra_59 = printf(bt_addr_le_to_str.constprop.14(ra, fp + -64<i32>, fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_155, out s1_156, out a3_26, out s3_157), 0x23075CC8<32>, a3_26, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_158, out a0_159, out a1_160, out a2_161, out a3_162, out a4_163, out a5_164, out a7_165, out s2_166, out s3_167, out s4_168, out s5_169, out s6_170, out s7_171, out s8_172, out s9_173, out s10_174, out s11_175, out t4_176)
	bt_get_local_ramdon_address(fp + -56<i32>)
	word32 a3_93
	word32 s0_177
	word32 s1_178
	word32 s3_179
	word32 s1_180
	word32 a0_181
	word32 a1_182
	word32 a2_183
	word32 a3_184
	word32 a4_185
	word32 a5_186
	word32 a7_187
	word32 s2_188
	word32 s3_189
	word32 s4_190
	word32 s5_191
	word32 s6_192
	word32 s7_193
	word32 s8_194
	word32 s9_195
	word32 s10_196
	word32 s11_197
	word32 t4_198
	printf(bt_addr_le_to_str.constprop.14(ra_59, fp + -56<i32>, fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_177, out s1_178, out a3_93, out s3_179), 0x23075CE4<32>, a3_93, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_180, out a0_181, out a1_182, out a2_183, out a3_184, out a4_185, out a5_186, out a7_187, out s2_188, out s3_189, out s4_190, out s5_191, out s6_192, out s7_193, out s8_194, out s9_195, out s10_196, out s11_197, out t4_198)
	return
ble_read_local_address_exit:


void connected(word32 ra, word32 a0, word32 a1, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
connected_entry:
l23024D76:
	word32 a3_17
	word32 s0_23
	word32 s3_139
	word32 s1_138
	word32 ra_22 = bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_23, out s1_138, out a3_17, out s3_139)
	branch a1 == 0<32> l23024DA4
l23024DA4:
	word32 a4_49
	word32 s1_140
	word32 a0_141
	word32 a1_142
	word32 a2_143
	word32 a3_144
	word32 a5_145
	word32 a7_146
	word32 s2_147
	word32 s3_148
	word32 s4_149
	word32 s5_150
	word32 s6_151
	word32 s7_152
	word32 s8_153
	word32 s9_154
	word32 s10_155
	word32 s11_156
	word32 t4_157
	printf(ra_22, 0x23076244<32>, a3_17, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_140, out a0_141, out a1_142, out a2_143, out a3_144, out a4_49, out a5_145, out a7_146, out s2_147, out s3_148, out s4_149, out s5_150, out s6_151, out s7_152, out s8_153, out s9_154, out s10_155, out s11_156, out t4_157)
	word32 a5_66 = Mem9[a4_49:word32]
	branch a4_49 != 0<32> l23024D9C
l23024DBC:
	Mem67[s0_23:word32] = a5_66
l23024D90:
	word32 s1_158
	word32 a0_159
	word32 a1_160
	word32 a2_161
	word32 a3_162
	word32 a4_163
	word32 a5_164
	word32 a7_165
	word32 s2_166
	word32 s3_167
	word32 s4_168
	word32 s5_169
	word32 s6_170
	word32 s7_171
	word32 s8_172
	word32 s9_173
	word32 s10_174
	word32 s11_175
	word32 t4_176
	printf(ra_22, 0x23076224<32>, a3_17, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_158, out a0_159, out a1_160, out a2_161, out a3_162, out a4_163, out a5_164, out a7_165, out s2_166, out s3_167, out s4_168, out s5_169, out s6_170, out s7_171, out s8_172, out s9_173, out s10_174, out s11_175, out t4_176)
l23024D9C:
	return
connected_exit:


void disconnected(word32 ra, word32 a0, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
disconnected_entry:
l23024DC0:
	word32 a3_17
	word32 s0_23
	word32 a4_49
	word32 t4_133
	word32 s11_132
	word32 s10_131
	word32 s9_130
	word32 s8_129
	word32 s7_128
	word32 s6_127
	word32 s5_126
	word32 s4_125
	word32 s3_124
	word32 s2_123
	word32 a7_122
	word32 a5_121
	word32 a3_120
	word32 a2_119
	word32 a1_118
	word32 a0_117
	word32 s1_116
	word32 s3_115
	word32 s1_114
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_23, out s1_114, out a3_17, out s3_115), 0x23076284<32>, a3_17, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_116, out a0_117, out a1_118, out a2_119, out a3_120, out a4_49, out a5_121, out a7_122, out s2_123, out s3_124, out s4_125, out s5_126, out s6_127, out s7_128, out s8_129, out s9_130, out s10_131, out s11_132, out t4_133)
	word32 a5_66 = Mem9[a4_49:word32]
	branch a4_49 != s0_23 l23024DF6
l23024DF2:
	Mem67[a5_66:word32] = 0<32>
l23024DF6:
	return
disconnected_exit:


void security_changed(word32 ra, word32 a0, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
security_changed_entry:
l23024DFE:
	word32 a3_14
	word32 s0_78
	word32 s1_79
	word32 s3_80
	word32 s1_81
	word32 a0_82
	word32 a1_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a7_88
	word32 s2_89
	word32 s3_90
	word32 s4_91
	word32 s5_92
	word32 s6_93
	word32 s7_94
	word32 s8_95
	word32 s9_96
	word32 s10_97
	word32 s11_98
	word32 t4_99
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_78, out s1_79, out a3_14, out s3_80), 0x230764F8<32>, a3_14, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_81, out a0_82, out a1_83, out a2_84, out a3_85, out a4_86, out a5_87, out a7_88, out s2_89, out s3_90, out s4_91, out s5_92, out s6_93, out s7_94, out s8_95, out s9_96, out s10_97, out s11_98, out t4_99)
	return
security_changed_exit:


void auth_passkey_display(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_passkey_display_entry:
l23024E24:
	word32 a3_16
	word32 s0_82
	word32 s1_83
	word32 s3_84
	word32 s1_85
	word32 a0_86
	word32 a1_87
	word32 a2_88
	word32 a3_89
	word32 a4_90
	word32 a5_91
	word32 a7_92
	word32 s2_93
	word32 s3_94
	word32 s4_95
	word32 s5_96
	word32 s6_97
	word32 s7_98
	word32 s8_99
	word32 s9_100
	word32 s10_101
	word32 s11_102
	word32 t4_103
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_82, out s1_83, out a3_16, out s3_84), 0x230759BC<32>, a3_16, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_85, out a0_86, out a1_87, out a2_88, out a3_89, out a4_90, out a5_91, out a7_92, out s2_93, out s3_94, out s4_95, out s5_96, out s6_97, out s7_98, out s8_99, out s9_100, out s10_101, out s11_102, out t4_103)
	return
auth_passkey_display_exit:


void auth_passkey_entry(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_passkey_entry_entry:
l23024E4C:
	word32 a3_12
	word32 s0_75
	word32 s1_76
	word32 s3_77
	word32 s1_78
	word32 a0_79
	word32 a1_80
	word32 a2_81
	word32 a3_82
	word32 a4_83
	word32 a5_84
	word32 a7_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s5_89
	word32 s6_90
	word32 s7_91
	word32 s8_92
	word32 s9_93
	word32 s10_94
	word32 s11_95
	word32 t4_96
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_75, out s1_76, out a3_12, out s3_77), 0x230759D4<32>, a3_12, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_78, out a0_79, out a1_80, out a2_81, out a3_82, out a4_83, out a5_84, out a7_85, out s2_86, out s3_87, out s4_88, out s5_89, out s6_90, out s7_91, out s8_92, out s9_93, out s10_94, out s11_95, out t4_96)
	return
auth_passkey_entry_exit:


void auth_passkey_confirm(word32 ra, word32 a0, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_passkey_confirm_entry:
l23024E6E:
	word32 a3_14
	word32 s0_78
	word32 s1_79
	word32 s3_80
	word32 s1_81
	word32 a0_82
	word32 a1_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a7_88
	word32 s2_89
	word32 s3_90
	word32 s4_91
	word32 s5_92
	word32 s6_93
	word32 s7_94
	word32 s8_95
	word32 s9_96
	word32 s10_97
	word32 s11_98
	word32 t4_99
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_78, out s1_79, out a3_14, out s3_80), 0x2307599C<32>, a3_14, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_81, out a0_82, out a1_83, out a2_84, out a3_85, out a4_86, out a5_87, out a7_88, out s2_89, out s3_90, out s4_91, out s5_92, out s6_93, out s7_94, out s8_95, out s9_96, out s10_97, out s11_98, out t4_99)
	return
auth_passkey_confirm_exit:


void auth_cancel(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_cancel_entry:
l23024E94:
	word32 a3_12
	word32 s0_75
	word32 s1_76
	word32 s3_77
	word32 s1_78
	word32 a0_79
	word32 a1_80
	word32 a2_81
	word32 a3_82
	word32 a4_83
	word32 a5_84
	word32 a7_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s5_89
	word32 s6_90
	word32 s7_91
	word32 s8_92
	word32 s9_93
	word32 s10_94
	word32 s11_95
	word32 t4_96
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_75, out s1_76, out a3_12, out s3_77), 0x2307592C<32>, a3_12, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_78, out a0_79, out a1_80, out a2_81, out a3_82, out a4_83, out a5_84, out a7_85, out s2_86, out s3_87, out s4_88, out s5_89, out s6_90, out s7_91, out s8_92, out s9_93, out s10_94, out s11_95, out t4_96)
	return
auth_cancel_exit:


void auth_pairing_confirm(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_pairing_confirm_entry:
l23024EB6:
	word32 a3_12
	word32 s0_75
	word32 s1_76
	word32 s3_77
	word32 s1_78
	word32 a0_79
	word32 a1_80
	word32 a2_81
	word32 a3_82
	word32 a4_83
	word32 a5_84
	word32 a7_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s5_89
	word32 s6_90
	word32 s7_91
	word32 s8_92
	word32 s9_93
	word32 s10_94
	word32 s11_95
	word32 t4_96
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_75, out s1_76, out a3_12, out s3_77), 0x23075964<32>, a3_12, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_78, out a0_79, out a1_80, out a2_81, out a3_82, out a4_83, out a5_84, out a7_85, out s2_86, out s3_87, out s4_88, out s5_89, out s6_90, out s7_91, out s8_92, out s9_93, out s10_94, out s11_95, out t4_96)
	return
auth_pairing_confirm_exit:


void auth_pairing_complete(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_pairing_complete_entry:
l23024ED8:
	word32 a3_16
	word32 s0_22
	word32 s1_100
	word32 s3_101
	word32 ra_21 = bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_22, out s1_100, out a3_16, out s3_101)
	branch s0_22 != 0<32> l23024F0A
l23024F0A:
l23024EEC:
l23024EF4:
	word32 a4_107
	word32 a3_106
	word32 a2_105
	word32 a1_104
	word32 a0_103
	word32 s1_102
	word32 a5_108
	word32 a7_109
	word32 s2_110
	word32 s3_111
	word32 s4_112
	word32 s5_113
	word32 s6_114
	word32 s7_115
	word32 s8_116
	word32 s9_117
	word32 s10_118
	word32 s11_119
	word32 t4_120
	printf(ra_21, 0x23075954<32>, a3_16, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_102, out a0_103, out a1_104, out a2_105, out a3_106, out a4_107, out a5_108, out a7_109, out s2_110, out s3_111, out s4_112, out s5_113, out s6_114, out s7_115, out s8_116, out s9_117, out s10_118, out s11_119, out t4_120)
	return
auth_pairing_complete_exit:


void auth_pairing_failed(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_pairing_failed_entry:
l23024F14:
	word32 a3_12
	word32 s0_75
	word32 s1_76
	word32 s3_77
	word32 s1_78
	word32 a0_79
	word32 a1_80
	word32 a2_81
	word32 a3_82
	word32 a4_83
	word32 a5_84
	word32 a7_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s5_89
	word32 s6_90
	word32 s7_91
	word32 s8_92
	word32 s9_93
	word32 s10_94
	word32 s11_95
	word32 t4_96
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_75, out s1_76, out a3_12, out s3_77), 0x23075980<32>, a3_12, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_78, out a0_79, out a1_80, out a2_81, out a3_82, out a4_83, out a5_84, out a7_85, out s2_86, out s3_87, out s4_88, out s5_89, out s6_90, out s7_91, out s8_92, out s9_93, out s10_94, out s11_95, out t4_96)
	return
auth_pairing_failed_exit:


void identity_resolved(word32 ra, word32 a2, word32 dwArg00, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg4C, word32 dwArg6C, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +006C:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
identity_resolved_entry:
l23024F36:
	word32 s0_22
	word32 a3_43
	word32 s1_110
	word32 a3_111
	word32 s3_112
	word32 s0_113
	word32 s1_114
	word32 s3_115
	word32 s1_116
	word32 a0_117
	word32 a1_118
	word32 a2_119
	word32 a3_120
	word32 a4_121
	word32 a5_122
	word32 a7_123
	word32 s2_124
	word32 s3_125
	word32 s4_126
	word32 s5_127
	word32 s6_128
	word32 s7_129
	word32 s8_130
	word32 s9_131
	word32 s10_132
	word32 s11_133
	word32 t4_134
	printf(bt_addr_le_to_str.constprop.14(bt_addr_le_to_str.constprop.14(ra, a2, fp + -80<i32>, dwLoc48, dwLoc1C, dwArg00, dwArg04, dwArg28, dwArg4C, dwArgD8, out s0_22, out s1_110, out a3_111, out s3_112), s0_22, fp + -48<i32>, dwLoc48, dwLoc1C, dwArg00, dwArg04, dwArg28, dwArg4C, dwArgD8, out s0_113, out s1_114, out a3_43, out s3_115), 0x2307642C<32>, a3_43, dwLoc48, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C, out s1_116, out a0_117, out a1_118, out a2_119, out a3_120, out a4_121, out a5_122, out a7_123, out s2_124, out s3_125, out s4_126, out s5_127, out s6_128, out s7_129, out s8_130, out s9_131, out s10_132, out s11_133, out t4_134)
	return
identity_resolved_exit:


void ble_get_all_conn_info(word32 ra, word32 dwArg18, word32 dwArg1C, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +00A8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
ble_get_all_conn_info_entry:
l23024F66:
	word32 ra_68
	word32 a3_26
	word32 a0_24 = bt_conn_get_remote_dev_info(fp + -88<i32>, out a3_26)
	ra_68 = ra
	branch a0_24 <= 0<32> l23024F94
l23024F7E:
	word32 a3_35
	word32 s0_274
	word32 s1_275
	word32 s3_276
	word32 s1_277
	word32 a0_278
	word32 a1_279
	word32 a2_280
	word32 a4_281
	word32 a5_282
	word32 a7_283
	word32 s2_284
	word32 s3_285
	word32 s4_286
	word32 s5_287
	word32 s6_288
	word32 s7_289
	word32 s8_290
	word32 s9_291
	word32 s10_292
	word32 s11_293
	word32 t4_294
	ra_68 = printf(bt_addr_le_to_str.constprop.14(ra, a0_24, fp + -120<i32>, dwLoc78, dwLoc4C, dwLoc30, dwLoc2C, dwLoc08, dwArg1C, dwArgA8, out s0_274, out s1_275, out a3_35, out s3_276), 0x23075BE8<32>, a3_35, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_277, out a0_278, out a1_279, out a2_280, out a3_26, out a4_281, out a5_282, out a7_283, out s2_284, out s3_285, out s4_286, out s5_287, out s6_288, out s7_289, out s8_290, out s9_291, out s10_292, out s11_293, out t4_294)
l23024F94:
	word32 s9_270
	word32 s8_269
	word32 s7_268
	word32 s6_267
	word32 s5_266
	word32 s4_265
	word32 a7_263
	word32 s3_264
	word32 a4_261
	word32 a5_262
	word32 a2_259
	word32 a3_260
	word32 a0_257
	word32 a1_258
	word32 s1_256
	word32 s10_271
	word32 s11_272
	word32 t4_273
	word32 s2_102
	word32 ra_123 = printf(ra_68, 0x23075C08<32>, a3_26, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_256, out a0_257, out a1_258, out a2_259, out a3_260, out a4_261, out a5_262, out a7_263, out s2_102, out s3_264, out s4_265, out s5_266, out s6_267, out s7_268, out s8_269, out s9_270, out s10_271, out s11_272, out t4_273)
	word32 s0_112 = fp + -88<i32>
	word32 s1_113 = 0<32>
l23024FAA:
	word32 s0_116 = s0_112 + 0x1C<32>
	branch s1_113 < s2_102 l23024FBE
l23024FBE:
	word32 a3_127
	word32 s3_138
	word32 s1_161
	word32 s1_295
	word32 a0_296
	word32 a1_297
	word32 a2_298
	word32 a3_299
	word32 a4_300
	word32 a5_301
	word32 a7_302
	word32 s3_303
	word32 s4_304
	word32 s5_305
	word32 s6_306
	word32 s7_307
	word32 s8_308
	word32 s9_309
	word32 s10_310
	word32 s11_311
	word32 t4_312
	ra_123 = printf(bt_addr_le_to_str.constprop.14(ra_123, Mem14[s0_116 + -12<i32>:int32], fp + -120<i32>, dwLoc78, dwLoc4C, dwLoc30, dwLoc2C, dwLoc08, dwArg1C, dwArgA8, out s0_112, out s1_295, out a3_127, out s3_138), s3_138 + -980<i32>, a3_127, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_161, out a0_296, out a1_297, out a2_298, out a3_299, out a4_300, out a5_301, out a7_302, out s2_102, out s3_303, out s4_304, out s5_305, out s6_306, out s7_307, out s8_308, out s9_309, out s10_310, out s11_311, out t4_312)
	s1_113 = s1_161 + 1<32>
l23024FB0:
	return
ble_get_all_conn_info_exit:


void ble_write_without_rsp(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 s2, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB0, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[16..31] s1:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B0:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_write_without_rsp_entry:
l23024FD8:
	word32 a0_162
	uint16 wLoc12_203 = SLICE(s0, uint16, 16)
	byte bLoc15_210 = SLICE(s2, byte, 24)
	branch a2 == 5<32> l23025000
l23025000:
	branch Mem11[0x4200E19C<32>:int32] != 0<32> l23025018
l23025018:
	word32 a5_350
	word32 a4_349
	word32 a3_348
	word32 a2_347
	word32 a0_346
	word32 a5_345
	word32 a0_339
	word32 a3_340
	word32 a0_341
	word32 a2_342
	word32 a3_343
	word32 a4_344
	get_uint16_from_string(get_uint16_from_string(get_uint8_from_string(0x4200E19C<32>, a3 + 4<i32>, fp + 0xFFFFFFEB<32>, out a0_339, out a3_340), a3 + 8<i32>, fp + 0xFFFFFFEC<32>, out a0_341, out a2_342, out a3_343, out a4_344, out a5_345), a3 + 12<i32>, fp + 0xFFFFFFEE<32>, out a0_346, out a2_347, out a3_348, out a4_349, out a5_350)
	word32 a2_61 = CONVERT(wLoc12_203, uint16, word32)
	branch a2_61 <=u 512<i32> l2302504C
l23025048:
	a2_61 = 512<i32>
l2302504C:
	word32 a0_73
	word32 s3_84
	word32 s1_370
	word32 a3_371
	word32 s2_372
	get_bytearray_from_string(0x42011E8C<32>, CONVERT(SLICE(a2_61, word16, 0), word16, word32), dwArg0108, out s1_370, out a0_73, out a3_371, out s2_372, out s3_84)
	word32 a3_112
	word32 s1_373
	word32 a0_374
	word32 a1_375
	word32 a2_376
	word32 a3_377
	word32 a4_378
	word32 a5_379
	word32 a7_380
	word32 s2_381
	word32 s3_382
	word32 s4_383
	word32 s5_384
	word32 s6_385
	word32 s7_386
	word32 s8_387
	word32 s9_388
	word32 s10_389
	word32 s11_390
	word32 t4_391
	printf(bt_gatt_write_without_response_cb(ra, a0_73, CONVERT(SLICE(a2_61, word16, 0), word16, word32), CONVERT(bLoc15_210, byte, word32), s3_84, s5, s6, mstatus, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg4C, dwArg54, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB0, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out a3_112), 0x230761B4<32>, a3_112, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_373, out a0_374, out a1_375, out a2_376, out a3_377, out a4_378, out a5_379, out a7_380, out s2_381, out s3_382, out s4_383, out s5_384, out s6_385, out s7_386, out s8_387, out s9_388, out s10_389, out s11_390, out t4_391)
l2302500E:
	a0_162 = 0x2307611C<32>
l23024FE8:
	a0_162 = 0x23075E94<32>
l23024FF0:
	word32 a7_358
	word32 s2_359
	word32 s3_360
	word32 a5_357
	word32 a4_356
	word32 a3_355
	word32 a2_354
	word32 a1_353
	word32 a0_352
	word32 s1_351
	word32 s4_361
	word32 s5_362
	word32 s6_363
	word32 s7_364
	word32 s8_365
	word32 s9_366
	word32 s10_367
	word32 s11_368
	word32 t4_369
	printf(ra, a0_162, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_351, out a0_352, out a1_353, out a2_354, out a3_355, out a4_356, out a5_357, out a7_358, out s2_359, out s3_360, out s4_361, out s5_362, out s6_363, out s7_364, out s8_365, out s9_366, out s10_367, out s11_368, out t4_369)
l23024FF4:
	return
ble_write_without_rsp_exit:


void ble_cli_register()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blsync_ble_start
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
ble_cli_register_entry:
l2302508E:
	return
ble_cli_register_exit:


word32 k_queue_init(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0148, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_driver_open
//      bt_enable
//      l2cap_chan_tx_init
//      l2cap_chan_add
//      k_work_q_start
//      bl_onchiphci_interface_init
//      bt_conn_init
//      bt_att_connected
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a3 a4 a5 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
k_queue_init_entry:
l23025092:
	word32 a0_18
	word32 a3_21
	word32 a4_22
	word32 s1_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 a5_72
	word32 a2_71
	word32 a1_70
	word32 s0_25 = xQueueGenericCreate(ra, a1, 5<32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s1_26, out a0_18, out a1_70, out a2_71, out a3_21, out a4_22, out a5_72, out s2_27, out s3_28, out s4_29)
	Mem33[a0_18:word32] = s0_25
	branch a0_18 != 0<32> l230250AC
l230250A8:
	word32 a5_73
	user_vAssertCalled(a4_22, mstatus, out a5_73)
l230250AC:
	Mem38[s0_25 + 8<i32>:word32] = s0_25
	Mem39[s0_25 + 12<i32>:word32] = s0_25
	a3Out = a3_21
	a4Out = a4_22
	a5Out = s0_25 + 4<i32>
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	return s1_26
k_queue_init_exit:


word32 k_queue_insert(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_queue_append
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
k_queue_insert_entry:
l230250BC:
	word32 a0_16
	word32 a1_17
	word32 a3_19
	word32 a4_20
	word32 s1_25
	word32 s2_26
	word32 s3_27
	word32 s4_28
	word32 s5_29
	word32 s6_30
	word32 s8_92
	word32 a7_91
	word32 a5_90
	word32 a2_18
	word32 s0_24 = xQueueGenericSend(Mem5[a0:word32], fp + 0xFFFFFFEC<32>, 0<32>, a4, a5, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_25, out a0_16, out a1_17, out a2_18, out a3_19, out a4_20, out a5_90, out a7_91, out s2_26, out s3_27, out s4_28, out s5_29, out s6_30, out s8_92)
	word32 a5_39 = 1<32>
	branch a0_16 == 1<32> l230250D8
l230250D4:
	a2_18 = user_vAssertCalled(a4_20, mstatus, out a5_39)
l230250D8:
	s1Out = s1_25
	a0Out = a0_16
	a1Out = a1_17
	a2Out = a2_18
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_39
	s2Out = s2_26
	s3Out = s3_27
	s4Out = s4_28
	s5Out = s5_29
	s6Out = s6_30
	return s0_24
k_queue_insert_exit:


word32 k_queue_append(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_queue_prepend
//      net_buf_put
//      k_work_submit_to_queue
//      bl_onchiphci_rx_packet_handler
//      tx_free
//      bt_conn_init
//      bt_att_send
//      bt_att_req_send
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
k_queue_append_entry:
l230250DE:
l230250E2_thunk_k_queue_insert:
	word32 a0_11
	word32 a1_12
	word32 a2_13
	word32 a3_14
	word32 a4_15
	word32 a5_16
	word32 s1_20
	word32 s2_21
	word32 s3_22
	word32 s4_23
	word32 s5_24
	word32 s6_25
	word32 s0_19 = k_queue_insert(a0, a4, a5, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_20, out a0_11, out a1_12, out a2_13, out a3_14, out a4_15, out a5_16, out s2_21, out s3_22, out s4_23, out s5_24, out s6_25)
	s1Out = s1_20
	a0Out = a0_11
	a1Out = a1_12
	a2Out = a2_13
	a3Out = a3_14
	a4Out = a4_15
	a5Out = a5_16
	s2Out = s2_21
	s3Out = s3_22
	s4Out = s4_23
	s5Out = s5_24
	s6Out = s6_25
	return s0_19
k_queue_append_exit:


word32 k_queue_free(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, word32 dwArg0148, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_delete_queue
//      bt_disable
//      bl_onchiphci_interface_deinit
//      bt_conn_process_tx
//      bt_att_disconnected
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
k_queue_free_entry:
l230250E6:
	branch a0 == 0<32> l230250EC
l230250E8:
	branch a5 != 0<32> l230250F8
l230250F8:
	word32 a3_20
	word32 a4_21
	word32 a5_22
	word32 s1_124
	word32 a0_125
	word32 a1_126
	word32 a2_127
	word32 s4_128
	Mem29[vQueueDelete(a5, a3, a4, mstatus, dwArg0148, dwArg0188, out s1_124, out a0_125, out a1_126, out a2_127, out a3_20, out a4_21, out a5_22, out s4_128):word32] = 0<32>
	a3Out = a3_20
	a4Out = a4_21
	a5Out = a5_22
	return ra
l230250EC:
l230250F4_thunk_printf:
	word32 a5_40
	word32 a3_44
	word32 a4_45
	word32 s1_129
	word32 a0_130
	word32 a1_131
	word32 a2_132
	word32 a7_133
	word32 s2_134
	word32 s3_135
	word32 s4_136
	word32 s5_137
	word32 s6_138
	word32 s7_139
	word32 s8_140
	word32 s9_141
	word32 s10_142
	word32 s11_143
	word32 t4_144
	word32 ra_47 = printf(ra, 0x2307674C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_129, out a0_130, out a1_131, out a2_132, out a3_44, out a4_45, out a5_40, out a7_133, out s2_134, out s3_135, out s4_136, out s5_137, out s6_138, out s7_139, out s8_140, out s9_141, out s10_142, out s11_143, out t4_144)
	a3Out = a3_44
	a4Out = a4_45
	a5Out = a5_40
	return ra_47
k_queue_free_exit:


word32 k_queue_prepend(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_buf_alloc_len
//      net_buf_unref
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
k_queue_prepend_entry:
l23025112:
l23025112_thunk_k_queue_append:
	word32 a0_8
	word32 a1_9
	word32 a3_11
	word32 a4_12
	word32 a5_13
	word32 s1_17
	word32 s2_18
	word32 s3_19
	word32 s4_20
	word32 s5_21
	word32 s6_22
	word32 a2_47
	word32 s0_16 = k_queue_append(a0, a4, a5, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_17, out a0_8, out a1_9, out a2_47, out a3_11, out a4_12, out a5_13, out s2_18, out s3_19, out s4_20, out s5_21, out s6_22)
	s1Out = s1_17
	a0Out = a0_8
	a1Out = a1_9
	a3Out = a3_11
	a4Out = a4_12
	a5Out = a5_13
	s2Out = s2_18
	s3Out = s3_19
	s4Out = s4_20
	s5Out = s5_21
	s6Out = s6_22
	return s0_16
k_queue_prepend_exit:


word32 k_queue_append_list(word32 ra, word32 s0, word32 a0, word32 a1, word32 a4, word32 a5, word32 mstatus, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_buf_put
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
k_queue_append_list_entry:
l23025116:
	word32 s1_11 = a0
	word32 s0_13 = a1
l23025122:
	branch s0_13 != 0<32> l2302512E
l2302512E:
	word32 a0_103
	word32 a1_104
	word32 a2_105
	word32 s2_106
	word32 s3_107
	word32 s4_108
	word32 s5_109
	word32 s6_110
	s0_13 = Mem9[k_queue_append(s1_11, a4, a5, mstatus, s0, ra, dwArgE8, dwArg0128, dwArg0168, out s1_11, out a0_103, out a1_104, out a2_105, out a3, out a4, out a5, out s2_106, out s3_107, out s4_108, out s5_109, out s6_110):word32]
l23025124:
	a4Out = a4
	a5Out = a5
	return a3
k_queue_append_list_exit:


word32 k_queue_get(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_l2cap_send
//      net_buf_alloc_len
//      net_buf_get
//      net_buf_unref
//      work_queue_main
//      bl_onchiphci_interface_deinit
//      att_reset
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
k_queue_get_entry:
l2302513A:
	word32 a2_10 = a1
	branch a1 != 0xFFFFFFFF<32> l2302514A
l23025148:
	a2_10 = 0xFFFFFFFF<32>
l2302514A:
	word32 a5_101
	word32 a0_25
	word32 a1_26
	word32 a3_28
	word32 s1_34
	word32 s2_35
	word32 s3_36
	word32 s4_37
	word32 a4_100
	word32 a2_27
	word32 s0_33 = xQueueReceive(Mem6[a0:word32], fp + 0xFFFFFFEC<32>, a2_10, a3, a4, 0xFFFFFFFF<32>, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_34, out a0_25, out a1_26, out a2_27, out a3_28, out a4_100, out a5_101, out s2_35, out s3_36, out s4_37)
	branch a0_25 != 1<32> l2302515C
l2302515A:
	a2_27 = dwArgC4
l2302515C:
	s1Out = s1_34
	a0Out = 0<32>
	a1Out = a1_26
	a2Out = a2_27
	a3Out = a3_28
	a4Out = 1<32>
	a5Out = 0<32>
	s2Out = s2_35
	s3Out = s3_36
	s4Out = s4_37
	return s0_33
k_queue_get_exit:


word32 k_queue_is_empty(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_buf_unref
//      polling_events.constprop.1
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
k_queue_is_empty_entry:
l23025164:
	word32 a3_13
	word32 a4_14
	word32 a5_15
	word32 a2_25
	word32 a0_17 = CONVERT(uxQueueMessagesWaiting(Mem5[a0:word32], a3, a4, mstatus, out a2_25, out a3_13, out a4_14, out a5_15) <u 1<i32>, bool, word32)
	a2Out = dwArg10
	a3Out = a3_13
	a4Out = a4_14
	a5Out = a5_15
	return a0_17
k_queue_is_empty_exit:


word32 k_queue_get_cnt(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_buf_get_rx_avail_cnt
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
k_queue_get_cnt_entry:
l23025178:
	word32 a0_5 = Mem0[a0:word32]
l2302517A_thunk_uxQueueMessagesWaiting:
	word32 a3_11
	word32 a4_12
	word32 a2_16
	word32 a5_17
	word32 a0_9 = uxQueueMessagesWaiting(a0_5, a3, a4, mstatus, out a2_16, out a3_11, out a4_12, out a5_17)
	a3Out = a3_11
	a4Out = a4_12
	return a0_9
k_queue_get_cnt_exit:


word32 k_sem_init(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, word32 dwArgE8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_hci_cmd_send_sync
//      bt_enable
//      init_work
//      l2cap_chan_tx_init
//      l2cap_chan_rx_init
//      smp_init
//      bt_smp_init
//      bt_att_accept
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
k_sem_init_entry:
l2302517E:
	word32 s8_105
	word32 s4_28
	word32 s3_27
	word32 s2_26
	word32 s1_25
	word32 a5_32
	word32 a4_21
	word32 a3_20
	word32 a0_36
	word32 a1_18
	branch a0 != 0<32> l2302519C
l2302519C:
	word32 a0_17
	word32 s0_24 = xQueueCreateCountingSemaphore(ra, a2, a1, a3, a4, a5, mstatus, dwLoc10, s0, dwArgE8, dwArg0128, out s1_25, out a0_17, out a1_18, out a3_20, out a4_21, out s2_26, out s3_27, out s4_28, out s8_105)
	Mem33[a0_17:word32] = s0_24
	Mem34[s0_24 + 8<i32>:word32] = s0_24
	Mem35[s0_24 + 12<i32>:word32] = s0_24
	a5_32 = s0_24 + 4<i32>
	a0_36 = 0<32>
l23025186:
	word32 a0_129
	word32 a2_130
	word32 a7_131
	word32 s10_132
	word32 s11_133
	word32 t4_134
	ra = printf(ra, 0x23076760<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_25, out a0_129, out a1_18, out a2_130, out a3_20, out a4_21, out a5_32, out a7_131, out s2_26, out s3_27, out s4_28, out s5, out s6, out s7, out s8_105, out s9, out s10_132, out s11_133, out t4_134)
	a0_36 = 0xFFFFFFEA<32>
l23025194:
	s1Out = s1_25
	a0Out = a0_36
	a1Out = a1_18
	a3Out = a3_20
	a4Out = a4_21
	a5Out = a5_32
	s2Out = s2_26
	s3Out = s3_27
	s4Out = s4_28
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8_105
	s9Out = s9
	return ra
k_sem_init_exit:


word32 k_sem_take(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_hci_cmd_send_sync
//      hci_tx_thread
//      l2cap_chan_le_send
//      l2cap_rx_process
//      k_poll
//      send_frag
//      bt_att_encrypt_change
//      bt_att_send
//      bt_att_req_send
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
k_sem_take_entry:
l230251B2:
	branch a0 == 0<32> l230251CE
l230251CE:
	s1Out = s1
	a0Out = 0xFFFFFFFF<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return s0
l230251B4:
	word32 a0_15
	word32 a1_16
	word32 a3_18
	word32 a4_19
	word32 a5_20
	word32 s1_23
	word32 s2_24
	word32 s3_25
	word32 s4_26
	word32 s8_27
	word32 a2_77
	word32 s0_22 = xQueueSemaphoreTake(Mem7[a0:word32], a1, a2, a3, a4, a5, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_23, out a0_15, out a1_16, out a2_77, out a3_18, out a4_19, out a5_20, out s2_24, out s3_25, out s4_26, out s8_27)
	s1Out = s1_23
	a0Out = 0<32> - CONVERT(a0_15 != 0xFFFFFFFF<32>, bool, word32)
	a1Out = a1_16
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_20
	s2Out = s2_24
	s3Out = s3_25
	s4Out = s4_26
	s8Out = s8_27
	return s0_22
k_sem_take_exit:


word32 k_sem_give(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg94, word32 dwArgAC, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_num_completed_packets
//      hci_cmd_done
//      hci_cmd_status
//      hci_cmd_complete
//      bt_hci_cmd_send_sync
//      bt_le_set_data_len
//      hci_tx_thread
//      l2cap_chan_tx_give_credits
//      bt_l2cap_send
//      l2cap_chan_send_credits.isra.10
//      l2cap_recv
//      bt_smp_pkey_ready
//      k_poll_signal_raise
//      send_frag
//      att_reset
//      bt_att_encrypt_change
//      att_rsp_sent
//      bt_att_send
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00AC:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
k_sem_give_entry:
l230251D2:
	word32 s6_104
	word32 s5_103
	word32 s4_102
	word32 s3_101
	word32 s2_100
	word32 s1_23
	word32 a5_19
	word32 a4_18
	word32 a3_17
	word32 a1_15
	word32 a0_39
	branch a0 != 0<32> l230251EC
l230251EC:
	word32 a0_14
	word32 a2_138
	word32 a7_139
	word32 s8_140
	s0 = xQueueGenericSend(Mem5[a0:word32], 0<32>, 0<32>, a4, a5, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_23, out a0_14, out a1_15, out a2_138, out a3_17, out a4_18, out a5_19, out a7_139, out s2_100, out s3_101, out s4_102, out s5_103, out s6_104, out s8_140)
	a0_39 = 0<32> - CONVERT(a0_14 != 0xFFFFFFFF<32>, bool, word32)
l230251D8:
	word32 a0_141
	word32 a2_142
	word32 a7_143
	word32 s8_144
	word32 t4_145
	ra = printf(ra, 0x23076760<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_23, out a0_141, out a1_15, out a2_142, out a3_17, out a4_18, out a5_19, out a7_143, out s2_100, out s3_101, out s4_102, out s5_103, out s6_104, out s7, out s8_144, out s9, out s10, out s11, out t4_145)
	a0_39 = 0xFFFFFFEA<32>
l230251E6:
	s0Out = s0
	s1Out = s1_23
	a0Out = a0_39
	a1Out = a1_15
	a2Out = dwArg10
	a3Out = a3_17
	a4Out = a4_18
	a5Out = a5_19
	s2Out = s2_100
	s3Out = s3_101
	s4Out = s4_102
	s5Out = s5_103
	s6Out = s6_104
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
k_sem_give_exit:


word32 k_sem_delete(word32 ra, word32 a0, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_hci_cmd_send_sync
//      bt_disable
//      bt_att_disconnected
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a1 a3 ra s1 s10 s11 s2 s3 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
k_sem_delete_entry:
l23025204:
	branch a0 == 0<32> l23025212
l2302520C:
	branch Mem7[a0:word32] != 0<32> l23025228
l23025228:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg344 = <invalid>
	word32 stackArg408 = <invalid>
	word32 s1_128
	word32 a0_129
	word32 a1_130
	word32 a2_131
	word32 a3_132
	word32 a4_133
	word32 a5_134
	word32 s4_135
	vQueueDelete(a0, a3, a4, mstatus, stackArg344, stackArg408, out s1_128, out a0_129, out a1_130, out a2_131, out a3_132, out a4_133, out a5_134, out s4_135)
	Mem12[a0:word32] = 0<32>
l23025212:
	word32 a0_117
	word32 a2_118
	word32 a4_119
	word32 a5_120
	word32 a7_121
	word32 s4_122
	word32 s8_123
	word32 t4_124
	ra = printf(ra, 0x23076760<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_117, out a1, out a2_118, out a3, out a4_119, out a5_120, out a7_121, out s2, out s3, out s4_122, out s5, out s6, out s7, out s8_123, out s9, out s10, out s11, out t4_124)
l23025220:
	s1Out = s1
	a1Out = a1
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
k_sem_delete_exit:


word32 k_sem_count_get(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_le_send
//      l2cap_chan_le_recv_seg
//      l2cap_recv
//      polling_events.constprop.1
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
k_sem_count_get_entry:
l23025234:
	word32 a0_5 = Mem0[a0:word32]
l23025236_thunk_uxQueueMessagesWaiting:
	word32 a2_10
	word32 a3_11
	word32 a4_12
	word32 a5_17
	word32 a0_9 = uxQueueMessagesWaiting(a0_5, a3, a4, mstatus, out a2_10, out a3_11, out a4_12, out a5_17)
	a2Out = a2_10
	a3Out = a3_11
	a4Out = a4_12
	return a0_9
k_sem_count_get_exit:


word32 k_thread_create(word32 ra, word32 s1, word32 a0, word32 a2, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_driver_open
//      bt_enable
//      k_work_q_start
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 a5 ra s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: s0 sp
k_thread_create_entry:
l2302523A:
	word32 a0_22
	word32 a3_25
	word32 a4_26
	word32 s1_30
	word32 s2_31
	word32 s3_32
	word32 ra_40 = xTaskCreate(ra, s1, CONVERT(SLICE(a2 >>u 2<i32>, word16, 0), word16, word32), 0<32>, a4, a0, s3, mstatus, dwArg00, dwArg04, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s1_30, out a0_22, out a3_25, out a4_26, out s2_31, out s3_32)
	s1Out = s1_30
	a0Out = 0<32> - CONVERT(a0_22 <u 1<i32>, bool, word32)
	a3Out = a3_25
	a4Out = a4_26
	a5Out = a5_27
	s2Out = s2_31
	s3Out = s3_32
	return ra_40
k_thread_create_exit:


void k_thread_delete(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_disable
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
k_thread_delete_entry:
l23025264:
	branch a0 == 0<32> l2302526A
l23025266:
	branch a5 != 0<32> l23025276
l23025276:
	word32 a4_121
	word32 a3_120
	word32 a5_122
	Mem32[vTaskDelete(a5, a2, a3, a4, a5, mstatus, dwArg0118, dwArg0128, dwArg0158, dwArg0168, out a3_120, out a4_121, out a5_122):word32] = 0<32>
	return
l2302526A:
l23025272_thunk_printf:
	word32 s1_123
	word32 a0_124
	word32 a1_125
	word32 a2_126
	word32 a3_127
	word32 a4_128
	word32 a5_129
	word32 a7_130
	word32 s2_131
	word32 s3_132
	word32 s4_133
	word32 s5_134
	word32 s6_135
	word32 s7_136
	word32 s8_137
	word32 s9_138
	word32 s10_139
	word32 s11_140
	word32 t4_141
	printf(ra, 0x23076770<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_123, out a0_124, out a1_125, out a2_126, out a3_127, out a4_128, out a5_129, out a7_130, out s2_131, out s3_132, out s4_133, out s5_134, out s6_135, out s7_136, out s8_137, out s9_138, out s10_139, out s11_140, out t4_141)
	return
k_thread_delete_exit:


void k_yield()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      recv_thread
//      hci_tx_thread
//      work_queue_main
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
k_yield_entry:
l23025290:
	__syscall()
	return
k_yield_exit:


word32 irq_lock(word32 a4, word32 mstatus, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_num_completed_packets
//      bt_buf_get_cmd_complete
//      atomic_cas
//      atomic_inc
//      atomic_set
//      atomic_clear
//      atomic_or
//      atomic_and
//      net_buf_alloc_len
//      polling_events.constprop.1
//      k_poll
//      k_poll_signal_raise
//      k_delayed_work_cancel
//      k_delayed_work_submit
//      send_frag
//      tx_notify
//      sc_indicate
// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a2 a4 a5
// Preserved: sp
irq_lock_entry:
l23025298:
	word32 a5_8
	word32 a4_9 = vTaskEnterCritical(a4, mstatus, out a5_8)
	a2Out = dwArg10
	a4Out = a4_9
	a5Out = a5_8
	return 1<32>
irq_lock_exit:


word32 irq_unlock(word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_num_completed_packets
//      bt_buf_get_cmd_complete
//      atomic_cas
//      atomic_inc
//      atomic_set
//      atomic_clear
//      atomic_or
//      atomic_and
//      net_buf_alloc_len
//      polling_events.constprop.1
//      k_poll
//      k_poll_signal_raise
//      k_delayed_work_cancel
//      k_delayed_work_submit
//      send_frag
//      tx_notify
//      sc_indicate
// MayUse:  a3:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
irq_unlock_entry:
l230252A8:
l230252A8_thunk_vTaskExitCritical:
	word32 a5_5
	word32 a4_7
	word32 a3_6 = vTaskExitCritical(a3, mstatus, out a4_7, out a5_5)
	a4Out = a4_7
	a5Out = a5_5
	return a3_6
irq_unlock_exit:


word32 k_timer_init(word32 ra, word32 a0, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArgA4, word32 dwArgD8, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +00A4:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
k_timer_init_entry:
l230252AC:
	word32 s0_19 = a0
	branch a0 != 0<32> l230252C4
l230252B8:
	user_vAssertCalled(a1, mstatus, out a5)
	s0_19 = dwArgA4
l230252C4:
	Mem23[a2 + 8<i32>:word32] = s0_19
	Mem25[a1 + 4<i32>:word32] = s0_19
	word32 a3_37
	word32 a4_38
	word32 a5_39
	word32 s1_42
	word32 s2_43
	word32 s3_44
	word32 s5_46
	Mem50[0x23076780<32>:word32] = xTimerCreate(ra, 0x23076780<32>, 1000<i32>, 0<32>, a1, a5, mstatus, dwLoc08, dwArg00, dwArg04, dwArgD8, dwArgF8, dwArg0138, out s1_42, out a3_37, out a4_38, out a5_39, out s2_43, out s3_44, out s5_46)
	branch true l230252EA
l230252EA:
	s1Out = <invalid>
	a0Out = <invalid>
	a3Out = <invalid>
	a4Out = <invalid>
	a5Out = a5_39
	s2Out = <invalid>
	s3Out = <invalid>
	s5Out = <invalid>
	return <invalid>
l230252E0:
l230252E6_thunk_user_vAssertCalled:
	word32 a5_58
	user_vAssertCalled(a4_38, mstatus, out a5_58)
	s1Out = <invalid>
	a0Out = <invalid>
	a3Out = <invalid>
	a4Out = <invalid>
	a5Out = a5_58
	s2Out = <invalid>
	s3Out = <invalid>
	s5Out = <invalid>
	return <invalid>
k_timer_init_exit:


word32 k_timer_stop(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg44, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_delayed_work_cancel
//      work_timeout
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0044:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a3 a4 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
k_timer_stop_entry:
l230252F2:
	branch a0 != 0<32> l23025300
l230252F8:
	user_vAssertCalled(a4, mstatus, out a5)
l23025300:
	word32 a0_24
	word32 s1_29
	word32 s2_30
	word32 s3_31
	word32 s4_32
	word32 s8_33
	word32 a1_35
	word32 a3_36
	word32 a4_37
	word32 s5_45
	word32 s6_46
	word32 a5_104
	xTimerGenericCommand(Mem14[a0:word32], 3<32>, 0<32>, 0<32>, a5, mstatus, dwArg44, dwArgB8, dwArgC8, dwArgF8, dwArg0138, out s1_29, out a0_24, out a1_35, out a3_36, out a4_37, out a5_104, out s2_30, out s3_31, out s4_32, out s5_45, out s6_46, out s8_33)
	branch a0_24 == 1<32> l2302531C
l2302531C:
	return
l23025314:
l23025318_thunk_user_vAssertCalled:
	word32 a5_105
	user_vAssertCalled(a4_37, mstatus, out a5_105)
	return
k_timer_stop_exit:


word32 k_timer_delete(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg44, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_delayed_work_del_timer
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0044:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
k_timer_delete_entry:
l23025322:
	branch a0 != 0<32> l23025330
l23025328:
	user_vAssertCalled(a4, mstatus, out a5)
l23025330:
	word32 a0_24
	word32 s1_29
	word32 s2_30
	word32 s3_31
	word32 s4_32
	word32 a3_36
	word32 a4_37
	word32 s5_45
	word32 s8_105
	word32 s6_104
	word32 a5_103
	word32 a1_102
	xTimerGenericCommand(Mem14[a0:word32], 5<32>, 0<32>, 0<32>, a5, mstatus, dwArg44, dwArgB8, dwArgC8, dwArgF8, dwArg0138, out s1_29, out a0_24, out a1_102, out a3_36, out a4_37, out a5_103, out s2_30, out s3_31, out s4_32, out s5_45, out s6_104, out s8_105)
	branch a0_24 == 1<32> l2302534C
l2302534C:
	s1Out = <invalid>
	a0Out = <invalid>
	a3Out = <invalid>
	a4Out = <invalid>
	a5Out = 1<32>
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	return <invalid>
l23025344:
l23025348_thunk_user_vAssertCalled:
	word32 a5_53
	user_vAssertCalled(a4_37, mstatus, out a5_53)
	s1Out = <invalid>
	a0Out = <invalid>
	a3Out = <invalid>
	a4Out = <invalid>
	a5Out = a5_53
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	return <invalid>
k_timer_delete_exit:


word32 k_now_ms(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_uptime_get_32
//      k_timer_start
// MayUse: 
// LiveOut: a0 a1 a5
// Trashed: a0 a1 a2 a5
// Preserved: sp
k_now_ms_entry:
l23025352:
	word32 a5_18
	word32 a0_13 = xTaskGetTickCount(out a5_18) + 1000<i32> >>u 1000<i32>
	a1Out = 0<32>
	a5Out = 1000<i32>
	return a0_13
k_now_ms_exit:


word32 k_uptime_get_32(ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_buf_alloc_len
// MayUse: 
// LiveOut: a0 a1
// Trashed: a0 a1 a2 a5
// Preserved: sp
k_uptime_get_32_entry:
l2302536E:
	word32 a1_7
	word32 a5_15
	word32 a0_6 = k_now_ms(out a1_7, out a5_15)
	a1Out = a1_7
	return a0_6
k_uptime_get_32_exit:


word32 k_timer_start(word32 a0, word32 a1, word32 a4, word32 mstatus, word32 dwArg54, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0148, ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_delayed_work_submit
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] Stack +0054:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a2 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
k_timer_start_entry:
l2302537C:
	branch a0 != 0<32> l2302538E
l2302538A:
	word32 a5_219
	user_vAssertCalled(a4, mstatus, out a5_219)
l2302538E:
	Mem20[a1 + 12<i32>:word32] = a0
	word32 a5_24
	word32 a1_208
	word32 a0_21 = k_now_ms(out a1_208, out a5_24)
	Mem25[a0_21 + 16<i32>:word32] = a0
	word32 a0_33
	word32 a4_46
	word32 s1_209
	word32 a1_210
	word32 a3_211
	word32 a5_212
	word32 s2_213
	word32 s3_214
	word32 s5_216
	word32 s4_215
	word32 s8_218
	word32 s6_217
	xTimerGenericCommand(a0_21, 3<32>, 0<32>, 0<32>, a5_24, mstatus, dwArg54, dwArgC8, dwArgD8, dwArg0108, dwArg0148, out s1_209, out a0_33, out a1_210, out a3_211, out a4_46, out a5_212, out s2_213, out s3_214, out s4_215, out s5_216, out s6_217, out s8_218)
	word32 a5_56 = 1<32>
	branch a0_33 == 1<32> l230253AE
l230253AA:
	user_vAssertCalled(a4_46, mstatus, out a5_56)
l230253AE:
	word32 a0_72
	word32 a4_85
	word32 s1_220
	word32 a1_221
	word32 a3_222
	word32 a5_223
	word32 s2_224
	word32 s3_225
	word32 s4_226
	word32 s5_227
	word32 s6_228
	word32 s8_229
	word32 s0_76 = xTimerGenericCommand(a0_33, 4<32>, 0<32>, 0<32>, a5_56, mstatus, dwArg54, dwArgC8, dwArgD8, dwArg0108, dwArg0148, out s1_220, out a0_72, out a1_221, out a3_222, out a4_85, out a5_223, out s2_224, out s3_225, out s4_226, out s5_227, out s6_228, out s8_229)
	branch a0_72 == 1<32> l230253D0
l230253CC:
	word32 a5_234
	user_vAssertCalled(a4_85, mstatus, out a5_234)
l230253D0:
	word32 s0_100 = Mem25[s0_76:word32]
	word32 a5_102
	xTaskGetTickCount(out a5_102)
	word32 a0_110
	word32 s1_115
	word32 s2_116
	word32 s3_117
	word32 s4_118
	word32 a4_123
	word32 s5_131
	word32 s6_132
	word32 a1_230
	word32 a3_231
	word32 a5_232
	word32 s8_233
	xTimerGenericCommand(s0_100, 1<32>, 0<32>, 0<32>, a5_102, mstatus, dwArg54, dwArgC8, dwArgD8, dwArg0108, dwArg0148, out s1_115, out a0_110, out a1_230, out a3_231, out a4_123, out a5_232, out s2_116, out s3_117, out s4_118, out s5_131, out s6_132, out s8_233)
	branch a0_110 == 1<32> l230253F6
l230253F6:
	a2Out = dwArg10
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	s6Out = <invalid>
	return <invalid>
l230253EA:
l230253F2_thunk_user_vAssertCalled:
	word32 a5_235
	a2Out = user_vAssertCalled(a4_123, mstatus, out a5_235)
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	s6Out = <invalid>
	return <invalid>
k_timer_start_exit:


word32 k_get_random_byte_array(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_rand
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
k_get_random_byte_array_entry:
l23025400:
	word32 s0_11 = a0
	word32 s1_13 = a0 + a1
l2302540E:
	branch s0_11 != s1_13 l2302541C
l2302541C:
	word32 a1_63
	word32 s8_64
	s1_13 = bl_rand(a0, a2, out a0, out a1_63, out a2, out a3, out a4, out a5, out s4, out s8_64)
	Mem29[s0_11:byte] = SLICE(a0, byte, 0)
	s0_11 = s0_11 + 1<32>
l23025412:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	return s1_13
k_get_random_byte_array_exit:


word32 k_malloc(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg8C, word32 dwArg0138, word32 dwArg0178, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_onchiphci_rx_packet_handler
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +008C:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
k_malloc_entry:
l23025428:
l23025428_thunk_pvPortMalloc:
	word32 a0_11
	word32 s2_20
	word32 s3_21
	word32 s4_22
	word32 s1_34
	word32 a1_35
	word32 a2_36
	word32 a3_37
	word32 a4_38
	word32 a5_39
	word32 a6_40
	word32 s8_41
	pvPortMalloc(ra, s1, a0, a3, a4, a5, mstatus, dwArg40, dwArg44, dwArg8C, dwArg0138, dwArg0178, out s1_34, out a0_11, out a1_35, out a2_36, out a3_37, out a4_38, out a5_39, out a6_40, out s2_20, out s3_21, out s4_22, out s8_41)
	s2Out = s2_20
	s3Out = s3_21
	s4Out = s4_22
	return a0_11
k_malloc_exit:


word32 k_free(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_buf_unref
//      bl_onchiphci_interface_deinit
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a3 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
k_free_entry:
l2302542C:
l2302542C_thunk_vPortFree:
	word32 a3_9
	word32 a4_10
	word32 s0_17
	word32 s1_24
	word32 a0_25
	word32 a1_26
	word32 a2_27
	word32 a5_28
	word32 a6_29
	word32 s4_30
	word32 t3_31
	vPortFree(a0, a2, a5, mstatus, dwArg0158, dwArg0198, out s0_17, out s1_24, out a0_25, out a1_26, out a2_27, out a3_9, out a4_10, out a5_28, out a6_29, out s4_30, out t3_31)
	a3Out = a3_9
	a4Out = a4_10
	return s0_17
k_free_exit:


word32 atomic_cas(word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg44, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_init
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a3 a4 a5 s0
// Trashed: a0 a2 a3 a4 a5 s0 s8 t3
// Preserved: sp
atomic_cas_entry:
l23025430:
	word32 s0_23
	word32 a5_19
	word32 a2_52
	word32 a4_53
	irq_lock(a4, mstatus, out a2_52, out a4_53, out a5_19)
	branch a5_19 != a1 l2302545C
l2302545C:
	s0_23 = 0<32>
l2302544A:
	Mem24[dwArg44:word32] = a1
	s0_23 = 1<32>
l2302544E:
	word32 a4_30
	word32 a5_31
	word32 a3_29 = irq_unlock(a3, mstatus, out a4_30, out a5_31)
	a0Out = s0_23
	a3Out = a3_29
	a4Out = a4_30
	a5Out = a5_31
	return s0_23
atomic_cas_exit:


word32 atomic_inc(word32 s0, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_set_state
//      bt_conn_lookup_handle
//      bt_conn_lookup_addr_le
//      bt_conn_lookup_state_le
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a0 a3 a4 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
atomic_inc_entry:
l23025460:
	word32 a2_38
	word32 a4_39
	word32 a5_40
	irq_lock(a4, mstatus, out a2_38, out a4_39, out a5_40)
	word32 s1_18 = Mem11[s0:word32]
	Mem20[s0 + 1<i32>:word32] = s1_18
	word32 a4_23
	word32 a5_41
	word32 a3_22 = irq_unlock(a3, mstatus, out a4_23, out a5_41)
	a0Out = s0
	a3Out = a3_22
	a4Out = a4_23
	return s1_18
atomic_inc_exit:


word32 atomic_dec(word32 s0, word32 a3, word32 a4, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_unref
//      bt_conn_create_le
//      conn_update_timeout
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
atomic_dec_entry:
l23025486:
	word32 a2_38
	word32 a4_39
	word32 a5_40
	irq_lock(a4, mstatus, out a2_38, out a4_39, out a5_40)
	word32 s1_18 = Mem11[s0:word32]
	Mem20[s0 + -1<i32>:word32] = s1_18
	word32 a4_23
	word32 a5_24
	a3Out = irq_unlock(a3, mstatus, out a4_23, out a5_24)
	a4Out = a4_23
	a5Out = a5_24
	return s1_18
atomic_dec_exit:


word32 atomic_get(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      atomic_test_bit
//      init_work
//      atomic_test_bit
//      k_delayed_work_cancel
//      atomic_test_bit
//      le_check_valid_conn
//      bt_conn_prepare_events
//      bt_conn_add_le
//      bt_conn_lookup_handle
//      bt_conn_lookup_addr_le
//      bt_conn_lookup_state_le
//      bt_conn_foreach
//      bt_conn_get_remote_dev_info
//      bt_conn_init
//      sc_indicate_rsp
//      sc_indicate
//      bt_gatt_unsubscribe
//      bt_gatt_disconnected
//      bt_att_encrypt_change
//      att_chan_get
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
atomic_get_entry:
l230254AC:
	return Mem0[a0:word32]
atomic_get_exit:


word32 atomic_set(word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      init_work
//      smp_pairing_complete
//      bt_conn_add_le
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31]
// LiveOut: a0 a3 a4 s0 s4
// Trashed: a0 a2 a3 a4 a5 s0 s4 s8 t3
// Preserved: sp
atomic_set_entry:
l230254B0:
	word32 a2_44
	word32 a4_45
	word32 a5_46
	irq_lock(a4, mstatus, out a2_44, out a4_45, out a5_46)
	word32 s0_21 = Mem13[s1:word32]
	Mem22[a1:word32] = s0_21
	word32 a4_25
	word32 a5_47
	word32 a3_24 = irq_unlock(a3, mstatus, out a4_25, out a5_47)
	a0Out = s1
	a3Out = a3_24
	a4Out = a4_25
	s4Out = dwArg04
	return s0_21
atomic_set_exit:


word32 atomic_clear(word32 s1, word32 a3, word32 a4, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_disconn_complete
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a2 a3 a4 a5 tp
// Preserved: s0 sp
atomic_clear_entry:
l230254D6:
	word32 a2_36
	word32 a4_37
	word32 a5_38
	irq_lock(a4, mstatus, out a2_36, out a4_37, out a5_38)
	Mem19[Mem11[s1:word32]:word32] = 0<32>
	word32 a4_22
	word32 a5_23
	word32 a3_21 = irq_unlock(a3, mstatus, out a4_22, out a5_23)
	a4Out = a4_22
	a5Out = a5_23
	return a3_21
atomic_clear_exit:


word32 atomic_or(word32 s0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      le_pkey_complete
//      atomic_set_bit_to
//      le_conn_update_complete
//      bt_id_add
//      bt_id_del
//      bt_finalize_init
//      bt_enable
//      bt_setup_id_addr
//      bt_le_scan_start
//      bt_pub_key_gen
//      l2cap_chan_tx_give_credits
//      bt_l2cap_connected
//      atomic_set_bit
//      k_work_submit_to_queue
//      bt_conn_set_security
//      conn_update_timeout
//      bt_conn_le_param_update
//      sc_indicate
//      sc_process
//      bt_gatt_unsubscribe
//      att_reset
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3
// Preserved: sp
atomic_or_entry:
l230254FA:
	word32 a2_48
	word32 a4_49
	word32 a5_50
	irq_lock(a4, mstatus, out a2_48, out a4_49, out a5_50)
	word32 s1_21 = Mem11[s0:word32]
	word32 a1_22 = a1 | s0
	Mem23[a1_22:word32] = s1_21
	word32 a4_26
	word32 a5_27
	word32 a3_25 = irq_unlock(a3, mstatus, out a4_26, out a5_27)
	a0Out = s0
	a1Out = a1_22
	a2Out = dwArg44
	a3Out = a3_25
	a4Out = a4_26
	a5Out = a5_27
	s4Out = dwArg04
	return s1_21
atomic_or_exit:


word32 atomic_and(word32 s0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      le_pkey_complete
//      atomic_set_bit_to
//      bt_le_scan_update
//      enh_conn_complete
//      bt_disable
//      bt_le_adv_start
//      bt_le_scan_start
//      bt_le_scan_stop
//      bt_pub_key_gen
//      l2cap_chan_le_send
//      atomic_test_and_clear_bit
//      smp_dhkey_check
//      bt_smp_encrypt_change
//      smp_send_pairing_confirm
//      legacy_send_pairing_confirm
//      smp_pairing_confirm
//      smp_pairing_rsp
//      work_queue_main
//      k_work_init
//      notify_le_param_updated
//      bt_conn_set_security
//      bt_conn_prepare_events
//      bt_conn_disconnect
//      conn_update_timeout
//      bt_conn_le_param_update
//      bt_conn_process_tx
//      gatt_write_ccc_rsp
//      sc_indicate_rsp
//      sc_process
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3
// Preserved: sp
atomic_and_entry:
l23025522:
	word32 a2_48
	word32 a4_49
	word32 a5_50
	irq_lock(a4, mstatus, out a2_48, out a4_49, out a5_50)
	word32 s1_21 = Mem11[s0:word32]
	word32 a1_22 = a1 & s0
	Mem23[a1_22:word32] = s1_21
	word32 a4_26
	word32 a5_27
	word32 a3_25 = irq_unlock(a3, mstatus, out a4_26, out a5_27)
	a0Out = s0
	a1Out = a1_22
	a2Out = dwArg44
	a3Out = a3_25
	a4Out = a4_26
	a5Out = a5_27
	s4Out = dwArg04
	return s1_21
atomic_and_exit:


void fixed_data_unref()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fixed_data_unref_entry:
l2302554A:
	return
fixed_data_unref_exit:


word32 net_buf_pool_get(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_cmd_done
//      l2cap_chan_le_send
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
net_buf_pool_get_entry:
l2302554C:
	a5Out = 0x4200DD30<32>
	return a0 + 0x4200DD4C<32>
net_buf_pool_get_exit:


word32 net_buf_id(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_cmd_done
//      bt_hci_cmd_create
//      bt_hci_cmd_send_sync
//      set_le_scan_enable
//      set_advertise_enable
//      hci_tx_thread
//      fixed_data_alloc
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
net_buf_id_entry:
l2302555E:
	word32 a4_5 = CONVERT(Mem0[a0 + 6<i32>:byte], byte, word32)
	word32 a5_11 = Mem0[a4_5 + 0x4200DD64<32>:word32]
	a3Out = 0x1C<32>
	a4Out = a4_5 + 0x1C<32>
	a5Out = a5_11
	return a0 - a5_11 >> 5<i32>
net_buf_id_exit:


void fixed_data_alloc(word32 s0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] s0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: s0 sp
fixed_data_alloc_entry:
l2302557A:
	word32 a5_16 = Mem7[s0 + 4<i32>:word32]
	word32 a4_9 = CONVERT(Mem7[a0 + 6<i32>:byte], byte, word32)
	word32 a1_17 = Mem7[a5_16:word32]
	branch a4_9 + 0x1C<32> >=u a5_16 l230255A2
l230255A0:
	a5_16 = a4_9 + 0x1C<32>
l230255A2:
	Mem22[a5_16:word32] = a1_17
	word32 a4_42
	word32 a3_41
	word32 a5_43
	net_buf_id(a0, out a3_41, out a4_42, out a5_43)
	return
fixed_data_alloc_exit:


word32 net_buf_alloc_len(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s5, word32 mstatus, word32 dwArgB4, word32 dwArgC8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_buf_alloc_fixed
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
net_buf_alloc_len_entry:
l230255BA:
	word32 s0_106
	word32 a3_116
	word32 s4_165
	word32 a4_100
	word32 a5_112
	word32 a1_184
	word32 s3_134 = k_uptime_get_32(out a1_184)
	word32 a4_407
	word32 a5_408
	word32 a2_406
	word32 a0_31 = irq_lock(a4, mstatus, out a2_406, out a4_407, out a5_408)
	word32 s1_113 = a0
	word32 s2_126 = a2
	word32 a5_35 = CONVERT(Mem23[a0 + 14<i32>:uint16], uint16, word32)
	branch a5_35 == 0<32> l23025696
l23025696:
	word32 a4_38
	word32 a0_42
	word32 a5_409
	word32 a2_410
	k_queue_get(a0, a2, irq_unlock(a3, mstatus, out a4_38, out a5_409), a4_38, mstatus, dwLoc2C, a1, dwArgC8, dwArg0108, out s1_113, out a0_42, out a1_184, out a2_410, out a3_116, out a4_100, out a5_112, out s2_126, out s3_134, out s4_165)
	s0_106 = a0_42
	branch a0_42 != 0<32> l230255FC
l230255E0:
	word32 a4_64 = CONVERT(Mem23[a0 + 12<i32>:uint16], uint16, word32)
	s5 = a0_31
	branch a5_35 >=u a4_64 l23025656
l230255EA:
	word32 a0_68
	word32 a4_413
	word32 a5_414
	word32 a2_412
	k_queue_get(a0, 0<32>, a3, a4_64, mstatus, dwLoc2C, a1, dwArgC8, dwArg0108, out s1_113, out a0_68, out a1_184, out a2_412, out a3, out a4_413, out a5_414, out s2_126, out s3_134, out s4_165)
	s0_106 = a0_68
	branch a0_68 == 0<32> l23025656
l23025656:
	s4_165 = CONVERT(Mem23[s1_113 + 14<i32>:uint16], uint16, word32)
	Mem96[s1_113 + 14<i32>:word16] = SLICE(s4_165 + -1<i32>, word16, 0)
	word32 a5_411
	a3_116 = irq_unlock(a3, mstatus, out a4_100, out a5_411)
	word32 s0_103 = CONVERT(Mem96[s1_113 + 12<i32>:uint16], uint16, word32) - s4_165
	word32 s1_111 = Mem96[s0_103 + 24<i32>:word32] - 0x4200DD30<32> >> 2<i32>
	Mem114[s0_103 * 0x21<32> + 6<i32>:byte] = SLICE(s1_111 + 0xB6DB6DB7<32>, byte, 0)
	s0_106 = s0_103 * 0x21<32>
	a5_112 = 0xB6DB6DB7<32>
	s1_113 = s1_111 + 0xB6DB6DB7<32>
l230255F6:
	a3_116 = irq_unlock(a3, mstatus, out a4_100, out a5_112)
l230255FC:
	branch a5_112 == 0<32> l230256BA
l230256BA:
	Mem125[s0_106 + 16<i32>:word32] = 0<32>
l23025600:
	branch s2_126 <=u 0<32> l2302561C
l2302560A:
	word32 a1_415
	word32 a0_136 = k_uptime_get_32(out a1_415) - s3_134
	branch s2_126 >=u a0_136 l23025618
l23025616:
	a0_136 = s2_126
l23025618:
	s2_126 = s2_126 - a0_136
l2302561C:
	word32 a5_159 = Mem121[Mem121[Mem121[CONVERT(Mem121[s0_106 + 6<i32>:byte], byte, word32) + 0x4200DD60<32>:word32]:word32]:word32]
	word32 sp_178
	word32 a0_183
	word32 a5_189
	word32 a6_196
	word32 a7_197
	word32 t0_198
	word32 t1_199
	word32 t4_200
	word32 t5_201
	word32 t6_202
	call a5_159 (retsize: 0;)
		uses: a0:s0_124,a1:fp + -36<i32>,a2:s2_150,a3:a3_176,a4:1<32>,a5:a5_159,a6:a6_196,a7:a7_197,mstatus:mstatus,ra:ra,s0:s0_124,s1:0x4200DD30<32>,s2:s2_150,s3:0x1C<32>,s4:s4_165,s5:s5_168,s6:s6_281,Stack +0004:dwLoc2C,Stack +00E4:dwArgB4,Stack +00F8:dwArgC8,Stack +0138:dwArg0108,t0:t0_198,t1:t1_199,t4:t4_200,t5:t5_201,t6:t6_202
		defs: a0:a0_183,a1:a1_184,a3:a3_195,a4:a4_190,a5:a5_189,a6:a6_196,a7:a7_197,mstatus:mstatus_194,ra:ra_179,s0:s0_186,s1:s1_180,s2:s2_181,s3:s3_182,s5:s5_188,s6:s6_281,sp:sp_178,t0:t0_198,t1:t1_199,t4:t4_200,t5:t5_201,t6:t6_202
	Mem203[a0_183 + 16<i32>:word32] = s0_106
	branch a0_183 != 0<32> l230256BE
l230256BE:
	Mem206[s0_106:word32] = 0<32>
	Mem207[s0_106 + 4<i32>:word16] = 1<16>
	Mem210[s0_106 + 12<i32>:word16] = 0<16>
	Mem211[s0_106 + 14<i32>:word16] = 1<16>
	s0_106 = Mem211[0x11<32>:word32]
	Mem213[9<32>:word32] = s0_106
	a5_112 = 1<32>
l23025642:
	word32 s4_417
	word32 a0_416
	s0_106 = k_queue_prepend(CONVERT(Mem203[s0_106 + 6<i32>:byte], byte, word32) + s3_134 + s1_113, a4_100, a5_189, mstatus, Mem203[sp_178 + 4<i32>:word32], Mem203[sp_178 + 132<i32>:word32], Mem203[sp_178 + 248<i32>:word32], Mem203[sp_178 + 312<i32>:word32], Mem203[sp_178 + 376<i32>:word32], out s1_113, out a0_416, out a1_184, out a3_116, out a4_100, out a5_112, out s2_126, out s3_134, out s4_417, out s5, out s6)
l230256A6:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_113
	a0Out = s0_106
	a1Out = a1_184
	a3Out = a3_116
	a4Out = a4_100
	a5Out = a5_112
	s2Out = s2_126
	s3Out = s3_134
	s4Out = dwArg78
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
net_buf_alloc_len_exit:


word32 net_buf_alloc_fixed(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArgB4, word32 dwArgC8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_hci_cmd_create
//      bt_buf_get_rx
//      l2cap_chan_le_send
//      bt_conn_create_pdu_timeout
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
net_buf_alloc_fixed_entry:
l230256D8:
	word32 a0_5 = Mem0[a5 + 20<i32>:word32]
l230256E0_thunk_net_buf_alloc_len:
	word32 a0_15
	word32 a1_16
	word32 a3_18
	word32 a4_19
	word32 a5_20
	word32 mstatus_23
	word32 s0_25
	word32 s1_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 ra_24 = net_buf_alloc_len(ra, a0_5, a1, a1, a3, a4, s5, mstatus, dwArgB4, dwArgC8, dwArg0108, dwArg0128, out s0_25, out s1_26, out a0_15, out a1_16, out a3_18, out a4_19, out a5_20, out s2_27, out s3_28, out s4_29, out s5_30, out s6_31, out mstatus_23)
	s0Out = s0_25
	s1Out = s1_26
	a0Out = a0_15
	a1Out = a1_16
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_20
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	mstatusOut = mstatus_23
	return ra_24
net_buf_alloc_fixed_exit:


word32 net_buf_get(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg38, word32 dwArgE8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      recv_thread
//      hci_tx_thread
//      bt_delete_queue
//      l2cap_chan_destroy
//      l2cap_rx_process
//      l2cap_recv
//      bt_conn_process_tx
//      att_rsp_sent
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0038:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
net_buf_get_entry:
l230256E4:
	word32 a0_18
	word32 s1_145
	word32 a2_146
	word32 a5_112
	word32 a4_111
	word32 a3_110
	word32 s2_117
	word32 a1_108
	word32 s3_118
	word32 s4_120
	k_queue_get(a0, a1, a3, a4, mstatus, s0, ra, dwArgE8, dwArg0128, out s1_145, out a0_18, out a1_108, out a2_146, out a3_110, out a4_111, out a5_112, out s2_117, out s3_118, out s4_120)
	word32 s1_39 = a0_18
	word32 s0_40 = a0_18
	branch a0_18 != 0<32> l2302571E
l2302571E:
	word32 a5_43 = CONVERT(Mem42[s0_40 + 5<i32>:byte], byte, word32)
	a5_112 = a5_43 & 1<32>
	branch (a5_43 & 1<32>) != 0<32> l23025708
l23025708:
	word32 a0_52
	word32 a2_147
	word32 a5_148
	word32 s0_60 = k_queue_get(s2_117, 0<32>, a3_110, a4_111, mstatus, s0, ra, dwArgE8, dwArg0128, out s1_39, out a0_52, out a1_108, out a2_147, out a3_110, out a4_111, out a5_148, out s2_117, out s3_118, out s4_120)
	word32 a5_73 = CONVERT(Mem42[s0_60 + 5<i32>:byte], byte, word32)
	Mem74[a0_52:word32] = s0_60
	Mem76[s0_60 + 5<i32>:byte] = SLICE(a5_73 & 0xFFFFFFFE<32>, byte, 0)
	s0_40 = a0_52
l23025726:
	Mem78[s0_40:word32] = 0<32>
l230256FA:
	0<32> = dwArg38
	a0Out = s1_39
	a1Out = a1_108
	a2Out = dwArg10
	a3Out = a3_110
	a4Out = a4_111
	a5Out = a5_112
	s2Out = s2_117
	s3Out = s3_118
	s4Out = s4_120
	return s1_39
net_buf_get_exit:


word32 net_buf_simple_reserve(word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_hci_cmd_create
//      bt_buf_get_rx
//      bt_buf_get_cmd_complete
//      l2cap_chan_le_send
//      bt_conn_create_pdu_timeout
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a1
// Trashed: a0 a1
// Preserved: sp
net_buf_simple_reserve_entry:
l2302572C:
	word32 a1_7 = a1 + a5
	Mem8[a1_7:word32] = Mem0[a5 + 8<i32>:word32]
	return a1_7
net_buf_simple_reserve_exit:


word32 net_buf_put(word32 ra, word32 s0, word32 a0, word32 a1, word32 a4, word32 a5, word32 mstatus, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_driver_enque_recvq
//      bt_hci_cmd_send_sync
//      bt_le_set_data_len
//      bt_l2cap_send
//      bt_conn_recv
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
net_buf_put_entry:
l23025734:
l23025736:
	word32 a2_7 = Mem6[a4:word32]
	branch a4 != 0<32> l2302573E
l2302573E:
	word32 a5_8 = CONVERT(Mem6[a2_7 + 5<i32>:byte], byte, word32)
	Mem10[a2_7 + 5<i32>:byte] = SLICE(a5_8 | 1<i32>, byte, 0)
	a5 = a5_8 | 1<i32>
l2302573A:
l2302573A_thunk_k_queue_append_list:
	word32 a4_28
	word32 a5_29
	word32 a3_27 = k_queue_append_list(ra, s0, a0, a1, a4, a5, mstatus, dwArgE8, dwArg0128, dwArg0168, out a4_28, out a5_29)
	a4Out = a4_28
	a5Out = a5_29
	return a3_27
net_buf_put_exit:


word32 net_buf_unref(word32 ra, word32 s1, word32 a0, word32 a1, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg28, word32 dwArg78, word32 dwArg84, word32 dwArg98, word32 dwArgA4, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_driver_send
//      bt_hci_cmd_send_sync
//      set_ad
//      bt_le_set_data_len
//      hci_tx_thread
//      bt_recv
//      bt_recv_prio
//      bt_delete_queue
//      init_work
//      l2cap_chan_destroy
//      bt_l2cap_send
//      l2cap_chan_le_send
//      l2cap_chan_le_send_sdu
//      l2cap_chan_le_recv_seg
//      l2cap_rx_process
//      smp_send_pairing_confirm
//      legacy_send_pairing_confirm
//      net_buf_frag_del
//      send_frag
//      bt_conn_reset_rx_state
//      bt_conn_recv
//      create_frag.isra.11
//      bt_conn_process_tx
//      att_send
//      att_reset
//      bt_att_encrypt_change
//      att_read_group_req
//      att_read_mult_req
//      att_read_req
//      att_read_type_req
//      att_find_type_req
//      att_find_info_req
//      att_signed_write_cmd
//      bt_att_send
//      bt_att_req_send
//      bt_att_req_cancel
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
net_buf_unref_entry:
l2302574E:
	word32 s0_148 = a0
	word32 s2_113 = 0x4200DD30<32>
	word32 s4_101 = 0x1C<32>
	word32 s3_100 = 0x4200DD68<32>
	s1_127 = s1
l23025772:
	word32 s1_127
	word32 sp_48 = fp - 32<i32>
	branch s0_148 != 0<32> l23025786
l23025786:
	s5 = Mem26[s0_148:int32]
	a5 = CONVERT(Mem26[s0_148 + 4<i32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem31[s0_148 + 4<i32>:byte] = SLICE(a5, byte, 0)
	branch a5 != 0<32> l23025774
l2302579A:
	word32 s0_33 = Mem31[a1 + 16<i32>:word32]
	branch a1 == 0<32> l230257BE
l2302579E:
	word32 a5_34 = CONVERT(Mem31[s0_33 + 5<i32>:byte], byte, word32)
	a5 = a5_34 & 2<32>
	branch (a5_34 & 2<32>) != 0<32> l230257BA
l230257A6:
	word32 a5_44 = Mem31[Mem31[Mem31[CONVERT(Mem31[s0_33 + 6<i32>:byte], byte, word32) + s4_101 + s2_113 + 20<i32>:word32]:word32] + 8<i32>:word32]
	word32 a1_64
	word32 a3_65
	word32 a7_215
	word32 s6_216
	word32 t0_217
	word32 t1_218
	word32 t4_219
	word32 t5_220
	word32 t6_221
	call a5_44 (retsize: 0;)
		uses: a0:s0_33,a1:a1_64,a3:a3_65,a4:a4_85,a5:a5_44,a7:a7_215,mstatus:mstatus_82,ra:ra_46,s0:s0_33,s1:s1_47,s2:s2_40,s3:s3_45,s4:s4_38,s5:s5_28,s6:s6_216,t0:t0_217,t1:t1_218,t4:t4_219,t5:t5_220,t6:t6_221
		defs: a1:a1_64,a3:a3_65,a5:a5_63,a7:a7_215,ra:ra_54,s0:s0_52,s2:s2_50,s3:s3_51,s4:s4_53,s5:s5_56,s6:s6_216,sp:sp_49,t0:t0_217,t1:t1_218,t4:t4_219,t5:t5_220,t6:t6_221
l230257BA:
	Mem67[s0_33 + 16<i32>:word32] = 0<32>
l230257BE:
	word32 s6_141
	word32 a4_139
	word32 mstatus_138
	word32 a3_137
	word32 a1_136
	word32 a5_135
	Mem71[s0_33 + 8<i32>:word32] = 0<32>
	Mem72[s0_33:word32] = 0<32>
	word32 s1_78 = Mem72[a5 + 16<i32>:word32]
	branch a5 == 0<32> l230257F2
l230257F2:
	k_queue_prepend(s1_78, a4, a5, mstatus, Mem72[sp_48 + 4<i32>:word32], Mem72[sp_48 + 132<i32>:word32], Mem72[sp_48 + 248<i32>:word32], Mem72[sp_48 + 312<i32>:word32], Mem72[sp_48 + 376<i32>:word32], out s1_127, out a0, out a1, out a3, out a4, out a5, out s2_113, out s3_100, out s4_101, out s5, out s6)
l230257D4:
	word32 a7_140
	word32 t0_142
	word32 t1_143
	word32 t4_144
	word32 t5_145
	word32 t6_146
	call a5 (retsize: 0;)
		uses: a0:s0_68,a1:a1_136,a3:a3_137,a4:a4_139,a5:a5_135,a7:a7_140,mstatus:mstatus_138,ra:ra_117,s0:s0_68,s1:s1_78,s2:s2_113,s3:s3_115,s4:s4_73,s5:s5_119,s6:s6_141,t0:t0_142,t1:t1_143,t4:t4_144,t5:t5_145,t6:t6_146
		defs: a0:a0_129,a1:a1_136,a3:a3_137,a4:a4_139,a5:a5_135,a7:a7_140,mstatus:mstatus_138,ra:ra_126,s1:s1_127,s2:s2_122,s3:s3_123,s4:s4_125,s5:s5_128,s6:s6_141,t0:t0_142,t1:t1_143,t4:t4_144,t5:t5_145,t6:t6_146
	mstatus = mstatus_138
	a4 = a4_139
	a3 = a3_137
	a1 = a1_136
	a5 = a5_135
	s6 = s6_141
l230257D8:
	s0_148 = s5
	branch s1_127 != s3_100 l23025772
l230257DE:
l230257EE_thunk_bl_handle_queued_msg:
	word32 a0_165
	word32 a3_167
	word32 a4_168
	word32 a5_169
	word32 s0_170
	word32 s8_171
	word32 a1_173
	word32 mstatus_176
	word32 s1_178
	word32 s2_179
	word32 s3_180
	word32 s4_181
	word32 s5_182
	word32 s6_183
	word32 ra_177 = bl_handle_queued_msg(ra, a3, a4, s5, mstatus, dwArg00, dwArg04, dwArg08, dwArg28, s1, dwArg78, dwArg84, dwArg98, dwArgA4, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out s0_170, out s1_178, out a0_165, out a1_173, out a3_167, out a4_168, out a5_169, out s2_179, out s3_180, out s4_181, out s5_182, out s6_183, out s8_171, out mstatus_176)
	s0Out = s0_170
	s1Out = s1_178
	a0Out = a0_165
	a1Out = a1_173
	a3Out = a3_167
	a4Out = a4_168
	a5Out = a5_169
	s2Out = s2_179
	s3Out = s3_180
	s4Out = s4_181
	s5Out = s5_182
	s6Out = s6_183
	s8Out = s8_171
	mstatusOut = mstatus_176
	return ra_177
l23025774:
	s0Out = s1
	s1Out = s1_127
	a0Out = a0
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2_113
	s3Out = s3_100
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s8Out = s4
	mstatusOut = mstatus
	return ra
net_buf_unref_exit:


word32 net_buf_ref(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_hci_cmd_send_sync
//      hci_tx_thread
//      l2cap_chan_le_send
//      bt_conn_recv
//      bt_att_req_send
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
net_buf_ref_entry:
l230257FC:
	word32 a5_5 = CONVERT(Mem0[a0 + 4<i32>:byte], byte, word32)
	Mem7[a0 + 4<i32>:byte] = SLICE(a5_5 + 1<32>, byte, 0)
	return a5_5 + 1<32>
net_buf_ref_exit:


void net_buf_frag_insert(word32 a1, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_buf_frag_add
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
net_buf_frag_insert_entry:
l23025808:
	word32 a0_5 = Mem0[a4:word32]
	branch a4 != 0<32> l23025814
l23025814:
	word32 a5_10 = Mem0[a3:word32]
	branch a3 != 0<32> l23025812
l23025812:
l23025818:
	Mem13[a4:word32] = a5_10
l2302580E:
	Mem18[a1:word32] = a0_5
	return
net_buf_frag_insert_exit:


void net_buf_frag_add(word32 a0, word32 a1, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_buf_append_bytes
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a2 a5
// Preserved: s0 sp
net_buf_frag_add_entry:
l2302581C:
	branch a0 != 0<32> l23025840
l23025840:
l2302582E:
	branch a4 != 0<32> l2302582C
l2302582C:
l23025832:
	net_buf_frag_insert(a1, a3, a4)
	return
l2302581E:
	Mem30[a1 + 4<i32>:byte] = SLICE(CONVERT(Mem0[a1 + 4<i32>:byte], byte, word32) + 1<32>, byte, 0)
	return
net_buf_frag_add_exit:


word32 net_buf_frag_del(word32 ra, word32 s0, word32 s1, word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_le_send_sdu
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
net_buf_frag_del_entry:
l2302584A:
	branch a0 == 0<32> l23025856
l23025852:
	Mem11[a5:word32] = a0
l23025856:
	word32 a1_14 = Mem13[s0:word32]
	Mem16[a1_14:word32] = 0<32>
	word32 a3_28
	word32 a4_29
	word32 a5_30
	word32 mstatus_33
	word32 s1_36
	word32 s2_37
	word32 s3_38
	word32 s4_39
	word32 s5_40
	word32 s6_41
	word32 s8_101
	word32 a1_100
	word32 a0_99
	word32 s0_98
	word32 ra_34 = net_buf_unref(ra, s1, a1_14, a1_14, a4, mstatus, dwLoc10, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_98, out s1_36, out a0_99, out a1_100, out a3_28, out a4_29, out a5_30, out s2_37, out s3_38, out s4_39, out s5_40, out s6_41, out s8_101, out mstatus_33)
	s1Out = s1_36
	a3Out = a3_28
	a4Out = a4_29
	a5Out = a5_30
	s2Out = s2_37
	s3Out = s3_38
	s4Out = s4_39
	s5Out = s5_40
	s6Out = s6_41
	mstatusOut = mstatus_33
	return ra_34
net_buf_frag_del_exit:


word32 net_buf_simple_add(word32 a0, word32 a1, word32 a4, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_hci_cmd_create
//      set_le_scan_enable
//      hci_id_add
//      set_ad
//      bt_id_del
//      bt_le_set_data_len
//      le_adv_report
//      le_ltk_request
//      le_conn_param_neg_reply
//      le_conn_param_req
//      enh_conn_complete
//      init_work
//      bt_dh_key_gen
//      l2cap_create_le_sig_pdu.isra.7
//      l2cap_chan_send_credits.isra.10
//      l2cap_le_conn_req
//      l2cap_send_reject
//      bt_l2cap_chan_disconnect
//      l2cap_recv
//      smp_create_pdu.isra.7
//      sc_smp_send_dhkey_check
//      smp_send_pairing_random
//      sc_send_public_key
//      send_pairing_rsp
//      bt_smp_distribute_keys
//      smp_error
//      smp_send_pairing_confirm
//      legacy_send_pairing_confirm
//      bt_smp_sign
//      bt_smp_start_security
//      bt_conn_le_start_encryption
//      bt_conn_disconnect
//      bt_conn_le_conn_update
//      bt_conn_le_param_update
//      gatt_notify
//      gatt_indicate
//      bt_gatt_exchange_mtu
//      gatt_read_type_rsp
//      bt_gatt_read
//      bt_gatt_write_without_response_cb
//      gatt_prepare_write_rsp
//      bt_gatt_unsubscribe
//      read_group_cb
//      read_type_cb
//      find_type_cb
//      find_info_cb
//      read_cb
//      bt_att_create_pdu
//      att_mtu_req
//      send_err_rsp.part.7
//      att_read_group_req
//      att_read_type_req
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a1 a5
// Trashed: a0 a1 a5
// Preserved: sp
net_buf_simple_add_entry:
l2302586C:
	word32 a5_5 = CONVERT(Mem0[a0 + 4<i32>:uint16], uint16, word32)
	word32 a1_9 = a1 + a5_5
	Mem10[Mem0[a4:word32] + 4<i32>:word16] = SLICE(a1_9, word16, 0)
	a1Out = a1_9
	a5Out = a5_5
	return a4 + a5_5
net_buf_simple_add_exit:


word32 net_buf_simple_add_mem(word32 a0, word32 a1, word32 a2, word32 a4, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_random_address
//      bt_id_add
//      bt_le_scan_update
//      bt_le_adv_start
//      bt_set_tx_pwr
//      l2cap_send_reject
//      l2cap_chan_le_send
//      net_buf_append_bytes
//      bt_conn_recv
//      create_frag.isra.11
//      bt_gatt_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
net_buf_simple_add_mem_entry:
l2302587E:
	word32 a5_5 = CONVERT(Mem0[a0 + 4<i32>:uint16], uint16, word32)
	Mem10[Mem0[a4:word32] + 4<i32>:word16] = SLICE(a5_5 + a2, word16, 0)
	word32 a0_11 = a4 + a5_5
l23025890_thunk_memcpy:
	word32 a4_13
	word32 a5_14
	word32 a2_17
	word32 a3_18
	word32 a6_30
	word32 a7_31
	word32 a1_16 = memcpy(a0_11, a1, a2, out a2_17, out a3_18, out a4_13, out a5_14, out a6_30, out a7_31)
	a2Out = a2_17
	a3Out = a3_18
	a4Out = a4_13
	a5Out = a5_14
	return a1_16
net_buf_simple_add_mem_exit:


word32 net_buf_simple_add_u8(word32 a0, word32 a1, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      addr_res_enable
//      set_advertise_enable
// MayUse:  a0:[0..31] a1:[0..7] a5:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
net_buf_simple_add_u8_entry:
l23025894:
	word32 a4_5 = CONVERT(Mem0[a0 + 4<i32>:uint16], uint16, word32)
	Mem10[Mem0[a5:word32] + 4<i32>:word16] = SLICE(a4_5 + 1<32>, word16, 0)
	word32 a5_8 = a5 + a4_5
	Mem12[a5_8:byte] = SLICE(a1, byte, 0)
	a5Out = a5_8
	return a4_5 + 1<32>
net_buf_simple_add_u8_exit:


word32 net_buf_simple_add_le16(word32 a0, word32 a1, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_le_send
//      bt_gatt_read
//      bt_gatt_unsubscribe
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
net_buf_simple_add_le16_entry:
l230258AA:
	word32 a4_5 = CONVERT(Mem0[a0 + 4<i32>:uint16], uint16, word32)
	Mem10[Mem0[a5:word32] + 4<i32>:word16] = SLICE(a4_5 + 2<32>, word16, 0)
	word32 a5_8 = a5 + a4_5
	Mem12[a5_8:byte] = SLICE(a1, byte, 0)
	Mem14[a5_8 + 1<i32>:byte] = SLICE(a1 >>u 8<i32>, byte, 0)
	a5Out = a5_8
	return a4_5 + 2<32>
net_buf_simple_add_le16_exit:


word32 net_buf_simple_push(word32 a1, word32 a5, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_l2cap_send
//      send_frag
//      att_signed_write_cmd
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a4 a5
// Preserved: sp
net_buf_simple_push_entry:
l230258C4:
	word32 a0_5 = Mem0[a5:word32]
	word32 a4_6 = CONVERT(Mem0[a0_5 + 4<i32>:uint16], uint16, word32)
	word32 a5_8 = a5 - a1
	Mem10[a5_8:word32] = a0_5
	Mem11[a0_5 + 4<i32>:word16] = SLICE(a1 + a4_6, word16, 0)
	a4Out = a4_6
	return a5_8
net_buf_simple_push_exit:


word32 net_buf_simple_push_le16(word32 a1, word32 a5, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_le_send
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a1 a4
// Trashed: a0 a1 a4
// Preserved: sp
net_buf_simple_push_le16_entry:
l230258D8:
	word32 a0_5 = Mem0[a5:word32]
	Mem7[a5 + -2<i32>:word32] = a0_5
	word32 a4_8 = CONVERT(Mem7[a0_5 + 4<i32>:uint16], uint16, word32)
	Mem10[a0_5 + 4<i32>:word16] = SLICE(a4_8 + 2<32>, word16, 0)
	Mem12[a5 + 4094<i32>:byte] = SLICE(a1, byte, 0)
	Mem14[a5 + 4095<i32>:byte] = SLICE(a1 >>u 8<i32>, byte, 0)
	a4Out = a4_8 + 2<32>
	return a1 >>u 8<i32>
net_buf_simple_push_le16_exit:


word32 net_buf_simple_pull(word32 a0, word32 a1, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_data_parse
//      le_adv_report
//      l2cap_chan_le_send
//      net_buf_simple_pull_u8
//      net_buf_simple_pull_le16
//      bl_onchiphci_send_2_controller
//      create_frag.isra.11
//      att_signed_write_cmd
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a1 a5
// Trashed: a0 a1 a5
// Preserved: sp
net_buf_simple_pull_entry:
l230258F6:
	word32 a5_7 = CONVERT(Mem0[a0 + 4<i32>:uint16], uint16, word32) - a1
	Mem8[a0 + 4<i32>:word16] = SLICE(a5_7, word16, 0)
	word32 a1_10 = a1 + a5_7
	Mem11[a1_10:word32] = Mem8[a5_7:word32]
	a5Out = a5_7
	return a1_10
net_buf_simple_pull_exit:


word32 net_buf_simple_pull_mem(word32 a0, word32 a1, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_le_meta_event
//      hci_cmd_status
//      hci_cmd_complete
//      le_adv_report
//      bt_recv
//      bt_recv_prio
//      l2cap_recv
//      bt_smp_recv
//      bt_conn_recv
//      bt_att_recv
//      att_read_group_req
//      att_read_type_req
//      att_find_type_req
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a4 a5
// Preserved: sp
net_buf_simple_pull_mem_entry:
l2302590A:
	word32 a0_7 = Mem0[a0:word32]
	word32 a4_9 = CONVERT(Mem0[a0 + 4<i32>:uint16], uint16, word32) - a1
	Mem11[a0 + 4<i32>:word16] = SLICE(a4_9, word16, 0)
	Mem12[a1 + a0_7:word32] = a0
	a4Out = a4_9
	return a0_7
net_buf_simple_pull_mem_exit:


word32 net_buf_simple_pull_u8(word32 a5, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_data_parse
//      le_adv_report
// MayUse:  a5:[0..31]
// LiveOut: a0 a2 a5
// Trashed: a0 a1 a2 a5
// Preserved: s0 sp
net_buf_simple_pull_u8_entry:
l2302591E:
	word32 s0_11 = CONVERT(Mem7[a5:byte], byte, word32)
	word32 a5_14
	net_buf_simple_pull(Mem7[a5:word32], 1<32>, out a5_14)
	a2Out = dwArg10
	a5Out = a5_14
	return s0_11
net_buf_simple_pull_u8_exit:


word32 net_buf_simple_pull_le16(word32 a5, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_rx_process
//      att_notify
//      att_indicate
//      att_read_mult_req
//      att_write_req
//      att_write_cmd
// MayUse:  a5:[0..31]
// LiveOut: a0 a1 a4
// Trashed: a0 a1 a2 a4 a5
// Preserved: s0 sp
net_buf_simple_pull_le16_entry:
l2302593A:
	word32 a4_12 = CONVERT(Mem7[a5:byte], byte, word32)
	word32 s0_14 = CONVERT(Mem7[a5 + 1<i32>:byte], byte, word32) << 8<i32> | a4_12
	word32 a5_27
	a1Out = net_buf_simple_pull(Mem7[a5:word32], 2<32>, out a5_27)
	a4Out = a4_12
	return s0_14
net_buf_simple_pull_le16_exit:


word32 net_buf_simple_headroom(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_vendor_event
//      le_adv_report
//      l2cap_chan_le_send
//      att_rsp_sent
//      bt_att_req_send
// MayUse:  a4:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
net_buf_simple_headroom_entry:
l2302595E:
	return a4 - Mem0[Mem0[a4:word32] + 8<i32>:word32]
net_buf_simple_headroom_exit:


word32 net_buf_simple_tailroom(word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_le_send
//      net_buf_append_bytes
//      bt_conn_recv
//      create_frag.isra.11
// MayUse:  a0:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
net_buf_simple_tailroom_entry:
l23025968:
	word32 a5_5 = CONVERT(Mem0[a0 + 4<i32>:uint16], uint16, word32)
	word32 a4_7 = CONVERT(Mem0[a0 + 6<i32>:uint16], uint16, word32) - a5_5
	word32 a0_11 = a4_7 - (a5_5 - Mem0[Mem0[a5_5:word32] + 8<i32>:word32])
	a4Out = a4_7
	return a0_11
net_buf_simple_tailroom_exit:


word32 net_buf_append_bytes(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_le_recv_seg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 ra s1 s2 s3 s5 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
net_buf_append_bytes_entry:
l23025980:
	word32 s5_168 = a0
	word32 s2_167 = a1
	word32 s4_29 = a2
	word32 s6_31 = a3
	word32 s7_100 = a4
	word32 s8_101 = a5
l230259A4:
	word32 s0_120 = Mem23[a5:word32]
	branch a5 != 0<32> l230259EA
l230259EA:
l230259A8:
	word32 s3_104 = 0<32>
l230259AA:
	word32 s0_43 = s0_120 + 8<32>
	word32 a4_46
	word32 a0_45 = net_buf_simple_tailroom(s0_43, out a4_46)
	word32 s1_48 = a0_45 << 0x10<u32>
	branch s2_167 >=u a0_45 l230259BE
l230259BA:
	s1_48 = s2_167 << 0x10<u32>
l230259BE:
	word32 s1_103 = s1_48 >>u 16<i32>
	s2_167 = s2_167 - s1_103
	word32 a2_64
	word32 a4_66
	word32 a5_67
	word32 a3_108
	word32 a1_106 = net_buf_simple_add_mem(s0_43, s4_29, s1_103, a4_46, out a2_64, out a3_108, out a4_66, out a5_67)
	s3_104 = s3_104 + s1_103
	word32 s4_79 = s4_29 + s1_103
	branch s2_167 == 0<32> l230259EE
l230259D6:
	word32 a0_105
	word32 a4_109
	call s7_100 (retsize: 0;)
		uses: a0:s6_84,a1:s8_81,a2:a2_64,a3:a3_65,a4:a4_66,a5:a5_67,ra:ra_91,s0:s0_43,s1:s1_52,s2:s2_60,s3:s3_78,s4:s4_79,s5:s5_89,s6:s6_84,s7:s7_87,s8:s8_81
		defs: a0:a0_105,a1:a1_106,a3:a3_108,a4:a4_109,ra:ra_102,s1:s1_103,s2:s2_96,s3:s3_104,s4:s4_97,s5:s5_98,s6:s6_99,s7:s7_100,s8:s8_101
	s0_120 = a0_105
	branch a0_105 == 0<32> l230259EE
l230259EE:
	0<32> = dwArg0128
	s1Out = s1_103
	a0Out = s3_104
	a1Out = a1_106
	a3Out = a3_108
	s2Out = s2_167
	s3Out = s3_104
	s5Out = s5_168
	s7Out = s7_100
	return ra
net_buf_append_bytes_exit:
l230259E0:
	net_buf_frag_add(s5_168, a0_105, a3_108, a4_109)


word32 bt_hex_real(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      handle_event
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
bt_hex_real_entry:
l23025A08:
	branch a1 <=u 63<i32> l23025A14
l23025A10:
	a1 = 63<i32>
l23025A14:
	word32 a3_19 = 0x42012110<32>
	word32 a7_12 = a0 + a1
l23025A2C:
	branch a0 != a7_12 l23025A3E
l23025A3E:
	a3_19 = a3_19 + 2<32>
	Mem26[a3_19 + 4094<i32>:byte] = SLICE(CONVERT(Mem17[(CONVERT(Mem17[a0:byte], byte, word32) >>u 4<i32>) + 0x23076794<32>:byte], byte, word32), byte, 0)
	a0 = a0 + 1<32>
	Mem31[a3_19 + 4095<i32>:byte] = SLICE(CONVERT(Mem26[(CONVERT(Mem26[a0 + -1<i32>:byte], byte, word32) & 0xF<32>) + 0x23076794<32>:byte], byte, word32), byte, 0)
l23025A30:
	Mem36[(a1 << 1<i32>) + 0x42012110<32>:byte] = 0<8>
	return 0x42012110<32>
bt_hex_real_exit:


word32 bt_addr_le_str_real(word32 ra, word32 a0, word32 dwArg08, word32 dwArg34, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0128, ptr32 & s0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_ident_info
//      smp_encrypt_info
//      bt_smp_distribute_keys
//      smp_signing_info
//      smp_master_ident
//      smp_ident_addr_info
//      bt_smp_sign_verify
//      bt_smp_sign
//      bt_smp_update_keys
// MayUse:  a0:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0034:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bt_addr_le_str_real_entry:
l23025A64:
	word32 a1_18
	word32 a3_13 = CONVERT(Mem11[a0:byte], byte, word32)
	word32 s1_16 = fp + -28<i32>
	branch a3_13 == 1<32> l23025AEC
l23025AEC:
	a1_18 = 0x230761D8<32>
l23025A7C:
	branch a3_13 == 0<32> l23025A9C
l23025A9C:
	a1_18 = 0x230761D0<32>
l23025A7E:
	branch a3_13 == 2<32> l23025AF6
l23025AF6:
	a1_18 = 0x230761E0<32>
l23025A84:
	branch a3_13 == 3<32> l23025B00
l23025B00:
	a1_18 = 0x230761EC<32>
l23025AA4:
	word32 a4_181
	word32 a5_182
	strcpy(fp + -28<i32>, a1_18, out a4_181, out a5_182)
l23025A8A:
	word32 s10_163
	word32 s11_164
	word32 s8_161
	word32 s9_162
	word32 s6_159
	word32 s7_160
	word32 s4_157
	word32 s5_158
	word32 s2_155
	word32 s3_156
	word32 a4_153
	word32 a5_154
	word32 a2_151
	word32 a3_152
	word32 s0_149
	word32 a0_150
	ra = snprintf(ra, fp + -28<i32>, 0xA<32>, 0x230761F8<32>, dwLoc18, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C, out s0_149, out s1_16, out a0_150, out a2_151, out a3_152, out a4_153, out a5_154, out s2_155, out s3_156, out s4_157, out s5_158, out s6_159, out s7_160, out s8_161, out s9_162, out s10_163, out s11_164)
l23025AAA:
	word32 a3_85
	word32 s0_165
	word32 s1_166
	word32 a0_167
	word32 a2_168
	word32 a4_169
	word32 a5_170
	word32 s2_171
	word32 s3_172
	word32 s4_173
	word32 s5_174
	word32 s6_175
	word32 s7_176
	word32 s8_177
	word32 s9_178
	word32 s10_179
	word32 s11_180
	word32 ra_89 = snprintf(ra, 0x42012190<32>, 0x1E<32>, 0x23076200<32>, dwLoc18, dwArg08, dwArg34, s1_16, dwArg54, dwArg78, dwArg9C, out s0_165, out s1_166, out a0_167, out a2_168, out a3_85, out a4_169, out a5_170, out s2_171, out s3_172, out s4_173, out s5_174, out s6_175, out s7_176, out s8_177, out s9_178, out s10_179, out s11_180)
	0<32> = dwArg0128
	s0Out = dwArgE4
	a3Out = a3_85
	return ra_89
bt_addr_le_str_real_exit:


word32 polling_events.constprop.1(word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg010C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_poll
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +010C:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s1 s7
// Trashed: a0 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 tp
// Preserved: sp
polling_events.constprop.1_entry:
l23025B0A:
	word32 s9_170 = a0
	word32 s0_168 = 0<32>
	word32 s2_102 = 1<32>
	a3_121 = a3
l23025B40:
	word32 a3_121
	branch s0_168 < a5 l23025B66
l23025B66:
	word32 a4_343
	word32 a5_344
	word32 a2_133
	irq_lock(a4, mstatus, out a2_133, out a4_343, out a5_344)
	word32 a4_62 = Mem48[s9_170 + 12<i32>:int32] >>u 8<i32> & 0xF<32>
	branch a4_62 == 2<32> l23025BC0
l23025BC0:
	word32 a4_345
	branch k_sem_count_get(Mem48[s9_170 + 16<i32>:int32], a3_121, a4_62, mstatus, out a2_133, out a3_121, out a4_345) == 0<32> l23025B8A
l23025BCA:
	a2_133 = 3<32>
l23025B78:
	branch a4_62 == 3<32> l23025BF6
l23025BF6:
	word32 a5_347
	word32 a4_346
	branch k_queue_is_empty(Mem48[s9_170 + 16<i32>:int32], a3_121, a4_62, mstatus, out a2_133, out a3_121, out a4_346, out a5_347) != 0<32> l23025B8A
l23025C00:
	a2_133 = 4<32>
l23025B7C:
	branch a4_62 != 1<32> l23025B8A
l23025B80:
	a2_133 = 2<32>
	branch Mem48[Mem48[s9_170 + 16<i32>:int32] + 8<i32>:word32] != 0<32> l23025BCC
l23025BCC:
	word32 a3_86 = Mem48[s9_170 + 12<i32>:int32]
	Mem87[s9_170 + 8<i32>:word32] = 0<32>
	Mem98[s9_170 + 12<i32>:word32] = (a3_86 >>u 0xC<u32> & 0xF<32> | a2_133) << 12<i32> | a3_86 & 0xF0FFFFFF<32>
	s2_102 = 0<32>
	a3_121 = a3_86 & 0xF0FFFFFF<32>
l23025B8A:
	branch a2 == 0<32> l23025BEA
l23025B8E:
	branch s2_102 == 0<32> l23025BEA
l23025B92:
	word32 a4_107 = Mem48[s9_170 + 12<i32>:int32] >>u 8<i32> & 0xF<32>
	branch a4_107 == 2<32> l23025C04
l23025B9E:
	branch a4_107 == 3<32> l23025C04
l23025C04:
	word32 a3_118 = Mem48[s9_170 + 16<i32>:int32]
	Mem120[s9_170:word32] = a3_118 + 4<i32>
	a3_121 = Mem120[a3_118 + 12<i32>:word32]
	Mem122[s9_170 + 4<i32>:word32] = a3_118 + 4<i32>
	word32 a4_126 = s0_168 + 0x14<32> + a0
	Mem127[a4_126:word32] = a3_118 + 4<i32>
	Mem128[a4_126 + 8<i32>:word32] = a3_121
l23025BA2:
	branch a4_107 != 1<32> l23025C20
l23025BA6:
	Mem132[s9_170:word32] = Mem48[s9_170 + 16<i32>:int32]
	a3_121 = Mem132[a2_133 + 4<i32>:word32]
	Mem135[s9_170 + 4<i32>:word32] = a2_133
	word32 a4_136 = s0_168 + 0x14<32> + a0
	Mem137[a4_136:word32] = a2_133
	Mem138[a4_136 + 4<i32>:word32] = a3_121
l23025C20:
	Mem140[s9_170 + 8<i32>:word32] = 0<32>
	Mem147[a3:word32] = Mem140[a3:int32] + 1<32>
l23025BEA:
	a3_121 = irq_unlock(a3_121, mstatus, out a4, out a5)
	s0_168 = s0_168 + 1<32>
	s9_170 = s9_170 + 0x14<32>
l23025B46:
	0<32> = dwArg010C
	s1Out = dwLoc4C
	a0Out = s2_102
	a2Out = dwArg01A8
	a3Out = s2
	a4Out = a4
	a5Out = a5
	s7Out = 3<32>
	return dwLoc08
polling_events.constprop.1_exit:


word32 k_poll_event_init(word32 a1, word32 a2, word32 a3, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_prepare_events
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
k_poll_event_init_entry:
l23025C30:
	word32 a0_7 = Mem0[(a1 & 0xF<32>) + 12<i32>:word32]
	Mem22[a0_7 + 8<i32>:word32] = 0<32>
	Mem23[(((a1 & 0xF<32> & 0xFF0000FF<32> | (a1 & 0xF<32>) << 8<u32>) & 0xEFFFFFFF<32> | (a2 & 1<32>) << 16<i32>) & 0x10FFFFFF<32>) + 12<i32>:word32] = a0_7
	Mem25[a3 + 16<i32>:word32] = a0_7
	a5Out = 0xEFFFFFFF<32>
	return 0xFF0000FF<32>
k_poll_event_init_exit:


word32 k_poll(word32 ra, word32 s0, word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArgD8, word32 dwArgDC, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_tx_thread
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 ra s0 s1 s3 s4 s7 s8
// Trashed: a0 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 tp
// Preserved: a1 sp
k_poll_entry:
l23025C5E:
	word32 a0_30
	word32 a2_31
	word32 a5_34
	word32 a4_33
	word32 s1_108
	word32 s7_251
	word32 a3_135
	word32 ra_235 = polling_events.constprop.1(a0, a2, fp + -36<i32>, a4, a5, mstatus, dwArgDC, out s1_108, out a0_30, out a2_31, out a3_135, out a4_33, out a5_34, out s7_251)
	branch a0_30 == 0<32> l23025C9C
l23025C80:
	word32 a4_59
	word32 a5_60
	word32 s1_63
	word32 a3_276
	word32 a0_274
	word32 a1_275
	word32 s2_277
	word32 s4_279
	word32 s3_278
	word32 s8_280
	word32 a2_282
	word32 a0_281
	word32 a5_283
	ra_235 = polling_events.constprop.1(k_sem_take(0x4201A464<32>, s1_108, a2_31, a3_135, a4_33, a5_34, mstatus, s0, ra, dwArgD8, dwArg0118, out s1_63, out a0_274, out a1_275, out a3_276, out a4_59, out a5_60, out s2_277, out s3_278, out s4_279, out s8_280), s1_63, fp + -36<i32>, a4_59, a5_60, mstatus, dwArgDC, out s1_108, out a0_281, out a2_282, out a3_135, out a4_33, out a5_283, out s7_251)
l23025C9C:
	word32 a2_272
	word32 a5_273
	word32 a4_101
	irq_lock(a4_33, mstatus, out a2_272, out a4_101, out a5_273)
	word32 a5_109 = s1_108 + 0x14<32>
l23025CB2:
	branch s1_108 >= 0<32> l23025CD0
l23025CD0:
	Mem119[Mem117[a5_109 + 12<i32>:word32] + 8<i32>:word32] = 0<32>
	word32 a5_120 = a5_109 >>u 8<i32>
	branch (a5_120 & 0xF<32>) == 2<32> l23025CE6
l23025CDE:
	branch (a5_120 & 0xF<32>) == 3<32> l23025CE6
l23025CE2:
	branch (a5_120 & 0xF<32>) != 1<32> l23025CF0
l23025CE6:
	Mem131[a5_120 & 0xF<32>:word32] = a4_101
	Mem133[a4_101 + 4<i32>:word32] = a5_120 & 0xF<32>
l23025CF0:
	word32 a4_141
	word32 a5_284
	a3_135 = irq_unlock(a3_135, mstatus, out a4_141, out a5_284)
	word32 a2_285
	irq_lock(a4_141, mstatus, out a2_285, out a4_101, out a5_109)
	s1_108 = s1_108 + 0xFFFFFFFF<32>
l23025CB6:
	word32 a4_157
	word32 a5_158
	word32 a3_156 = irq_unlock(a3_135, mstatus, out a4_157, out a5_158)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_108
	a0Out = 0<32>
	a3Out = a3_156
	a4Out = a4_157
	a5Out = a5_158
	s3Out = 2<32>
	s4Out = dwArg78
	s7Out = s7_251
	s8Out = s5
	return ra_235
k_poll_exit:


void k_poll_signal_raise(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg74, word32 dwArg8C, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
k_poll_signal_raise_entry:
l23025CFE:
	word32 a4_18
	word32 a2_136
	word32 a5_137
	irq_lock(a4, mstatus, out a2_136, out a4_18, out a5_137)
	Mem22[9<32>:word32] = a0
	word32 s0_23 = Mem22[1<32>:word32]
	Mem24[a1 + 12<i32>:word32] = s0_23
	branch s0_23 != 1<32> l23025D2C
l23025D2C:
	Mem30[a4_18:word32] = a3
	Mem33[a3 + 4<i32>:word32] = a4_18
	word32 a5_34 = Mem33[a4_18 + 12<i32>:word32]
	Mem36[a5_34 + 8<i32>:word32] = 0<32>
	Mem38[(a4_18 | 0x2000000<32>) + 12<i32>:word32] = a5_34
	word32 s0_138
	word32 s1_139
	word32 a0_140
	word32 a1_141
	word32 a2_142
	word32 a4_143
	word32 a5_144
	word32 s2_145
	word32 s3_146
	word32 s4_147
	word32 s5_148
	word32 s6_149
	word32 s7_150
	word32 s9_151
	word32 s10_152
	word32 s11_153
	k_sem_give(ra, 0x4201A464<32>, 0x2000000<32>, a4_18 | 0x2000000<32>, a5_34, mstatus, dwLoc0C, dwLoc08, dwArg40, dwArg44, s1, dwArg74, dwArg8C, dwArgE8, dwArg0128, dwArg0168, out s0_138, out s1_139, out a0_140, out a1_141, out a2_142, out a3, out a4_143, out a5_144, out s2_145, out s3_146, out s4_147, out s5_148, out s6_149, out s7_150, out s9_151, out s10_152, out s11_153)
l23025D1C:
	word32 a4_154
	word32 a5_155
	irq_unlock(a3, mstatus, out a4_154, out a5_155)
	return
k_poll_signal_raise_exit:


word32 bt_rpa_irk_matches(word32 ra, word32 a0, word32 a1, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_keys_find_irk
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a0 ra s0 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bt_rpa_irk_matches_entry:
l23025D54:
	word32 a0_112
	word32 a4_142
	word32 a3_141
	word32 a2_140
	word32 a5_143
	word32 a6_144
	word32 a7_145
	memcpy(fp + -32<i32>, a1 + 3<32>, 3<32>, out a2_140, out a3_141, out a4_142, out a5_143, out a6_144, out a7_145)
	word32 a0_45
	word32 s0_54
	word32 s1_55
	word32 s2_56
	word32 s3_67
	word32 s5_68
	word32 t1_146
	word32 a0_147
	word32 a1_148
	word32 a2_149
	word32 a3_150
	word32 a4_151
	word32 a5_152
	word32 a1_153
	word32 a4_154
	word32 a5_155
	word32 s4_156
	word32 ra_66 = bt_encrypt_le(memset(ra, fp + -29<i32>, 0<32>, 0xD<32>, out t1_146, out a0_147, out a1_148, out a2_149, out a3_150, out a4_151, out a5_152), a0, out s0_54, out s1_55, out a0_45, out a1_153, out a4_154, out a5_155, out s2_56, out s3_67, out s4_156, out s5_68)
	branch a0_45 != 0<32> l23025DA4
l23025DA4:
	a0_112 = 0<32>
l23025D82:
	word32 a2_157
	word32 a3_158
	word32 a4_159
	word32 a5_160
	word32 a6_161
	word32 a7_162
	memcpy(fp + -36<i32>, fp + -32<i32>, 3<32>, out a2_157, out a3_158, out a4_159, out a5_160, out a6_161, out a7_162)
	word32 a1_163
	word32 a2_164
	word32 a3_165
	word32 a4_166
	word32 a5_167
	a0_112 = CONVERT(memcmp(s0_54, fp + -36<i32>, 3<32>, out a1_163, out a2_164, out a3_165, out a4_166, out a5_167) <u 1<i32>, bool, word32)
l23025D9A:
	s0Out = dwArgE4
	s1Out = s1_55
	a0Out = a0_112
	s2Out = s2_56
	s3Out = s3_67
	s5Out = s5_68
	return ra_66
bt_rpa_irk_matches_exit:


word32 k_work_submit_to_queue(word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_delayed_work_submit
//      work_timeout
//      bt_conn_recv
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
k_work_submit_to_queue_entry:
l23025DA8:
	word32 a0_19
	word32 a3_22
	word32 a4_23
	word32 a5_24
	word32 s4_26
	word32 a1_115
	word32 a2_116
	word32 s1_25 = atomic_or(a1, 1<32>, a3, a4, mstatus, out a0_19, out a1_115, out a2_116, out a3_22, out a4_23, out a5_24, out s4_26)
	branch (a0_19 & 1<32>) != 0<32> l23025DD2
l23025DD2:
	s1Out = s1_25
	a3Out = a3_22
	s2Out = s2
	s3Out = s3
	s4Out = s4_26
	s5Out = s5
	s6Out = s6
	return s0
l23025DC2:
l23025DCE_thunk_k_queue_append:
	word32 a3_43
	word32 s1_49
	word32 s2_50
	word32 s3_51
	word32 s4_52
	word32 s5_53
	word32 s6_54
	word32 a0_117
	word32 a1_118
	word32 a2_119
	word32 a4_120
	word32 a5_121
	word32 s0_48 = k_queue_append(s1_25, a4_23, a5_24, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_49, out a0_117, out a1_118, out a2_119, out a3_43, out a4_120, out a5_121, out s2_50, out s3_51, out s4_52, out s5_53, out s6_54)
	s1Out = s1_49
	a3Out = a3_43
	s2Out = s2_50
	s3Out = s3_51
	s4Out = s4_52
	s5Out = s5_53
	s6Out = s6_54
	return s0_48
k_work_submit_to_queue_exit:


void work_queue_main(word32 ra, word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArgE8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
work_queue_main_exit:
work_queue_main_entry:
l23025DDC:
	word32 s1_10 = 0x4201A000<32>
l23025DE8:
	word32 s2_93
	word32 a0_19
	word32 a3_22
	word32 a4_23
	word32 a2_91
	word32 s4_95
	word32 s1_89
	word32 s3_94
	word32 a5_92
	word32 a1_90
	k_queue_get(s1_10 + 1136<i32>, 0xFFFFFFFF<32>, a3, a4, mstatus, s0, ra, dwArgE8, dwArg0128, out s1_89, out a0_19, out a1_90, out a2_91, out a3_22, out a4_23, out a5_92, out s2_93, out s3_94, out s4_95)
	word32 a0_43
	word32 a1_44
	word32 a5_48
	word32 a2_96
	word32 s4_97
	s1_10 = atomic_and(a0_19, 0xFFFFFFFE<32>, a3_22, a4_23, mstatus, out a0_43, out a1_44, out a2_96, out a3, out a4, out a5_48, out s4_97)
	branch (a0_43 & 1<32>) == 0<32> l23025E06
l23025E00:
	call a5_48 (retsize: 0;)
		uses: a1:a1_44,a3:a3_46,a4:a4_47,mstatus:mstatus,s0:Mem9[a5_48 + 4<i32>:word32]
		defs: a3:a3_59,a4:a4_60,s1:s1_62
l23025E06:
	k_yield()


word32 k_work_q_start(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_enable
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
k_work_q_start_entry:
l23025E0C:
	Mem11[0x420121B0<32>:word32] = 0<32>
	Mem12[0x420121B4<32>:word32] = 0<32>
	Mem13[0x420121B8<32>:word32] = 0<32>
	Mem14[0x420121BC<32>:word32] = 0<32>
	Mem15[0x420121C0<32>:word32] = 0<32>
	Mem16[0x420121C4<32>:word32] = 0<32>
	Mem17[0x420121C8<32>:word32] = 0<32>
	Mem18[0x420121CC<32>:word32] = 0<32>
	Mem19[0x420121D0<32>:word32] = 0<32>
	Mem20[0x420121D4<32>:word32] = 0<32>
	word32 s3_33
	word32 a3_80
	word32 a4_81
	word32 a5_82
	word32 s2_83
	word32 s4_84
	word32 s1_31 = k_queue_init(ra, 0x14<32>, a3, a4, 0x420121B0<32>, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out a3_80, out a4_81, out a5_82, out s2_83, out s3_33, out s4_84)
l23025E70_thunk_k_thread_create:
	word32 a3_51
	word32 a4_52
	word32 a5_53
	word32 s1_85
	word32 a0_86
	word32 s2_87
	word32 s3_88
	word32 ra_55 = k_thread_create(ra, s1_31, 0x4201A47C<32>, 1536<i32>, 0x1E<32>, s3_33, mstatus, dwArg00, dwArg04, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s1_85, out a0_86, out a3_51, out a4_52, out a5_53, out s2_87, out s3_88)
	a3Out = a3_51
	a4Out = a4_52
	a5Out = a5_53
	return ra_55
k_work_q_start_exit:


word32 k_work_init(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_enable
//      l2cap_chan_add
//      bt_conn_add_le
//      bt_gatt_init
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
k_work_init_entry:
l23025E74:
	word32 a3_22
	word32 a4_23
	word32 a5_24
	word32 a0_43
	word32 a1_44
	word32 a2_45
	word32 s4_46
	word32 s1_25 = atomic_and(a0, 0xFFFFFFFE<32>, a3, a4, mstatus, out a0_43, out a1_44, out a2_45, out a3_22, out a4_23, out a5_24, out s4_46)
	Mem30[s1_25 + 4<i32>:word32] = a0
	a3Out = a3_22
	a4Out = a4_23
	a5Out = a5_24
	return s1_25
k_work_init_exit:


void k_work_submit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_num_completed_packets
//      bt_enable
//      bt_conn_recv
// MayUse: 
// LiveOut:
// Trashed: a0 a1
// Preserved: sp
k_work_submit_entry:
l23025E96:
l23025EA0_thunk_k_work_submit_to_queue:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 stackArg132 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg312 = <invalid>
	word32 stackArg376 = <invalid>
	word32 s1_16
	word32 a3_17
	word32 s2_18
	word32 s3_19
	word32 s4_20
	word32 s5_21
	word32 s6_22
	k_work_submit_to_queue(a1, a3, a4, mstatus, stackArg4, stackArg132, stackArg248, stackArg312, stackArg376, out s1_16, out a3_17, out s2_18, out s3_19, out s4_20, out s5_21, out s6_22)
	return
k_work_submit_exit:


word32 k_delayed_work_init(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_add
//      bt_smp_connected
//      bt_conn_add_le
//      bt_gatt_init
//      bt_att_connected
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: s0 sp
k_delayed_work_init_entry:
l23025EA4:
	word32 a5_18
	word32 a3_63
	word32 a4_64
	k_work_init(a0, a3, a4, mstatus, out a3_63, out a4_64, out a5_18)
	word32 a0_28
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 s1_36
	word32 s2_37
	word32 s3_38
	word32 s5_40
	Mem45[k_timer_init(ra, a0 + 16<i32>, 0x23026072<32>, a0, a5_18, mstatus, dwLoc10, s0, dwArg94, dwArgC8, dwArgE8, dwArg0128, out s1_36, out a0_28, out a3_31, out a4_32, out a5_33, out s2_37, out s3_38, out s5_40) + 12<i32>:word32] = 0<32>
	a0Out = a0_28
	a3Out = a3_31
	a4Out = a4_32
	a5Out = a5_33
	s2Out = s2_37
	s3Out = s3_38
	s5Out = s5_40
	return s1_36
k_delayed_work_init_exit:


word32 k_delayed_work_del_timer(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg34, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_l2cap_chan_del
//      bt_smp_disconnected
//      bt_conn_process_tx
//      bt_gatt_deinit
//      bt_att_disconnected
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0034:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
k_delayed_work_del_timer_entry:
l23025ECE:
	branch a0 == 0<32> l23025EEE
l23025ED0:
	a0 = Mem0[a5 + 16<i32>:word32]
	branch a5 == 0<32> l23025EEE
l23025EEE:
	a0Out = a0
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return s1
l23025ED4:
	word32 a0_16
	word32 a3_19
	word32 a4_20
	word32 a5_21
	word32 s1_25
	word32 s2_26
	word32 s3_27
	word32 s4_28
	word32 s5_29
	Mem39[k_timer_delete(a0 + 0x10<32>, a4, a5, mstatus, dwArg34, dwArgA8, dwArgB8, dwArgE8, dwArg0128, out s1_25, out a0_16, out a3_19, out a4_20, out a5_21, out s2_26, out s3_27, out s4_28, out s5_29) + 16<i32>:word32] = 0<32>
	a0Out = a0_16
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_21
	s2Out = s2_26
	s3Out = s3_27
	s4Out = s4_28
	s5Out = s5_29
	return s1_25
k_delayed_work_del_timer_exit:


word32 add_timer_record(word32 a2, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_delayed_work_submit
// MayUse:  a2:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a3 a4 a5 a6
// Preserved: sp
add_timer_record_entry:
l23025EF0:
	word32 a0_6 = Mem0[a2 + 16<i32>:word32]
	word32 a3_19 = 0x420121B0<32>
	word32 a4_11 = 0x420121B0<32>
l23025F06:
	branch Mem0[a4_11:int32] == a2 l23025F28
l23025F0E:
	a4_11 = a4_11 + 8<32>
	branch a4_11 != 0x420121D8<32> l23025F06
l23025F14:
	word32 a4_17 = 0<32>
l23025F18:
	branch Mem0[a3_19:int32] != 0<32> l23025F2C
l23025F2C:
	a4_17 = a4_17 + 1<32>
	a3_19 = a3_19 + 8<32>
	branch a4_17 != 5<32> l23025F18
l23025F34:
	a3Out = a3_19
	a4Out = a4_17
	return 0xFFFFFFFF<32>
l23025F20:
	a4_11 = a4_17 << 3<i32>
	Mem32[a2:word32] = a4_11 + 0x420121B0<32>
	Mem35[a0_6 + 4<i32>:word32] = a4_11 + 0x420121B0<32>
l23025F28:
	a3Out = a3_19
	a4Out = a4_11
	return 0<32>
add_timer_record_exit:


word32 remv_timer_record(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_delayed_work_cancel
// MayUse:  a1:[0..31]
// LiveOut: a3
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
remv_timer_record_entry:
l23025F38:
	word32 a0_5 = Mem0[a1 + 16<i32>:word32]
	word32 a5_15 = 0<32>
l23025F4A:
	word32 a3_13 = Mem0[a0_5:word32]
	branch a0_5 != a1 l23025F5C
l23025F5C:
	a5_15 = a5_15 + 1<32>
	a3_13 = a3_13 + 8<32>
	branch a5_15 != 5<32> l23025F4A
l23025F64:
l23025F50:
	Mem22[(a5_15 << 3<i32>) + 0x420121B0<32>:word32] = 0<32>
l23025F58:
	return a3_13
remv_timer_record_exit:


word32 k_delayed_work_cancel(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg38, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_destroy
//      l2cap_recv
//      smp_pairing_complete
//      bt_smp_disconnected
//      k_delayed_work_submit
//      bt_conn_set_state
//      bt_conn_disconnect
//      bt_att_encrypt_change
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
k_delayed_work_cancel_entry:
l23025F66:
	word32 s1_24
	word32 a4_18
	word32 a5_19
	word32 a2_132
	word32 s2_20 = irq_lock(a4, mstatus, out a2_132, out a4_18, out a5_19)
	branch (atomic_get(a0 + 8<i32>) & 1<i32>) != 0<32> l23025FB8
l23025FB8:
	s1_24 = -68<i32>
l23025F86:
	word32 s0_25 = Mem11[a5_19 + 12<i32>:word32]
	branch a5_19 == 0<32> l23025FBE
l23025FBE:
	s1_24 = 0xFFFFFFEA<32>
l23025F8A:
	word32 a0_133
	word32 a3_134
	word32 a4_135
	word32 s0_36 = k_timer_stop(s0_25 + 16<i32>, a4_18, a5_19, mstatus, dwArg34, dwArgA8, dwArgB8, dwArgE8, dwArg0128, out s1_24, out a0_133, out a1, out a3_134, out a4_135, out s2_20, out s3, out s4, out s5, out s6, out s8)
	a3 = remv_timer_record(a1)
	Mem57[s0_36 + 12<i32>:word32] = 0<32>
	Mem58[s0_36 + 28<i32>:word32] = 0<32>
	Mem59[s0_36 + 32<i32>:word32] = 0<32>
l23025FA4:
	word32 a4_66
	word32 a5_67
	word32 a3_65 = irq_unlock(a3, mstatus, out a4_66, out a5_67)
	0<32> = dwArg38
	a0Out = s1_24
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3_65
	a4Out = a4_66
	a5Out = a5_67
	s2Out = s2_20
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	return s1_24
k_delayed_work_cancel_exit:


word32 k_delayed_work_submit(word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg24, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      slave_update_conn_param
//      l2cap_le_conn_req
//      bt_l2cap_chan_disconnect
//      smp_send.isra.9
//      bt_conn_process_tx
//      sc_indicate_rsp
//      sc_indicate
//      att_req_sent
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
k_delayed_work_submit_entry:
l23025FC2:
	word32 s0_124
	word32 a1_43
	word32 a5_25
	word32 a2_254
	word32 a4_24
	word32 a0_22 = irq_lock(a4, mstatus, out a2_254, out a4_24, out a5_25)
	word32 s1_103 = Mem19[a5_25 + 12<i32>:word32]
	word32 s2_104 = 0x4201A000<32>
	word32 s4_106 = a0_22
	word32 s3_105 = 0x4201A470<32>
	a1_43 = a1
	branch a5_25 != 0<32> l23026006
l23026006:
	s0_124 = -48<i32>
	branch a5_25 != 0x4201A470<32> l2302601E
l23026010:
	word32 a0_35
	word32 a2_256
	word32 a5_257
	word32 s8_258
	s1_103 = k_delayed_work_cancel(s1_103, a3, a4_24, mstatus, dwArg04, dwArg08, dwArg78, dwArg88, dwArgB8, dwArgF8, out a0_35, out a1_43, out a2_256, out a3, out a4_24, out a5_257, out s2_104, out s3_105, out s4_106, out s5, out s6, out s8_258)
	s0_124 = a0_35
	branch a0_35 >= 0<32> l23025FE8
l23025FE8:
	Mem61[s1_103 + 12<i32>:word32] = s3_105
	branch a1_43 == 0<32> l23026036
l23026036:
	k_work_submit_to_queue(s1_103, a3, a4_24, mstatus, dwLoc2C, a1, dwArgC8, dwArg0108, dwArg0148, out s1_103, out a3, out s2_104, out s3_105, out s4_106, out s5, out s6)
	Mem93[s1_103 + 12<i32>:word32] = 0<32>
l23025FEE:
	word32 a2_97
	s1_103 = k_timer_start(s1_103 + 16<i32>, a1_43, a4_24, mstatus, dwArg24, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a2_97, out s2_104, out s3_105, out s4_106, out s5, out s6)
	word32 a4_121
	word32 a0_118 = add_timer_record(a2_97, out a3, out a4_121)
	s0_124 = a0_118
	branch a0_118 == 0<32> l2302601E
l23026000:
	word32 a5_255
	user_vAssertCalled(a4_121, mstatus, out a5_255)
l23026044:
	s0_124 = 0<32>
l2302601E:
	word32 a4_136
	word32 a5_137
	word32 a3_135 = irq_unlock(a3, mstatus, out a4_136, out a5_137)
	0<32> = dwArg0128
	s1Out = s1_103
	a0Out = s0_124
	a3Out = a3_135
	a4Out = a4_136
	a5Out = a5_137
	s2Out = s2_104
	s3Out = s3_105
	s4Out = s4_106
	s5Out = s5
	s6Out = s6
	s8Out = dwArg58
	return dwArgE4
k_delayed_work_submit_exit:


word32 get_timer_record(word32 a0, word32 a1, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      work_timeout
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
get_timer_record_entry:
l23026048:
	word32 a4_12 = 0<32>
l23026058:
	branch a1 != a0 l23026066
l23026066:
	a4_12 = a4_12 + 1<32>
	branch a4_12 != 5<32> l23026058
l2302606E:
	a4Out = a4_12
	a5Out = <invalid>
	return 0<32>
l2302605E:
	a4Out = a4_12
	a5Out = <invalid>
	return (a4_12 << 3<u32>) + 0x420121B0<32>
get_timer_record_exit:


void work_timeout(word32 ra, word32 s0, word32 a0, word32 a1, word32 mstatus, word32 dwArg34, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0034:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
work_timeout_entry:
l23026072:
	word32 a4_15
	word32 a5_16
	branch get_timer_record(a0, a1, out a4_15, out a5_16) != 0<32> l23026086
l23026082:
	user_vAssertCalled(a4_15, mstatus, out a5_16)
l23026086:
	word32 a0_29
	word32 a3_32
	word32 a4_33
	word32 s8_111
	word32 s6_110
	word32 s5_109
	word32 s4_108
	word32 s3_107
	word32 s2_106
	word32 a1_105
	word32 s1_104
	k_timer_stop(s0 + 16<i32>, a4_15, a5_16, mstatus, dwArg34, dwArgA8, dwArgB8, dwArgE8, dwArg0128, out s1_104, out a0_29, out a1_105, out a3_32, out a4_33, out s2_106, out s3_107, out s4_108, out s5_109, out s6_110, out s8_111)
	word32 s2_113
	word32 s1_60
	word32 a3_112
	word32 s3_114
	word32 s4_115
	word32 s5_116
	word32 s6_117
	Mem77[k_work_submit_to_queue(Mem9[a0_29 + 12<i32>:word32], a3_32, a4_33, mstatus, s0, ra, dwArgE8, dwArg0128, dwArg0168, out s1_60, out a3_112, out s2_113, out s3_114, out s4_115, out s5_116, out s6_117) + 12<i32>:word32] = 0<32>
	Mem78[s1_60:word32] = 0<32>
	return
work_timeout_exit:


void reverse_bytearray(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_select_conn
//      ble_disconnect
//      ble_connect
//      ble_unpair
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a1 a4 a5
// Preserved: sp
reverse_bytearray_entry:
l230260AA:
	word32 a1_5 = a1 + a2
	word32 a5_15 = 0<32>
l230260AE:
	a1_5 = a1_5 + 0xFFFFFFFF<32>
	branch a5_15 < a2 l230260B6
l230260B6:
	Mem16[a1_5:byte] = SLICE(CONVERT(Mem13[a0 + a5_15:byte], byte, word32), byte, 0)
	a5_15 = a5_15 + 1<32>
l230260B4:
	return
reverse_bytearray_exit:


void gf_double(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_cmac_setup
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
gf_double_entry:
l230260C6:
	word32 a4_11 = a1 + 15<i32>
	word32 a0_14 = a0 + 0xF<32>
	word32 a5_10 = CONVERT(Mem0[a1:int8], int8, int32) >> 31<i32> & 135<i32>
l230260D6:
	a0_14 = a0_14 + 0xFFFFFFFF<32>
	Mem19[a0_14 + 1<i32>:byte] = SLICE(a5_10 ^ CONVERT(Mem12[a4_11:byte], byte, word32) << 1<i32>, byte, 0)
	branch a4_11 == a1 l230260F2
l230260F2:
	return
gf_double_exit:
l230260E8:
	a4_11 = a4_11 + 0xFFFFFFFF<32>
	a5_10 = CONVERT(Mem19[a4_11 + 1<i32>:byte], byte, word32) >>u 7<i32>


word32 tc_cmac_erase(word32 ra, word32 a0, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_cmac_final
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a1 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
tc_cmac_erase_entry:
l230260F4:
	branch a0 == 0<32> l2302610A
l2302610A:
	a3Out = a3
	a4Out = a4
	return a1
l230260F6:
	word32 a1_11
	word32 a3_13
	word32 a4_14
	word32 a2_43
	word32 a5_44
	_set(ra, a0, 0<32>, 88<i32>, out a1_11, out a2_43, out a3_13, out a4_14, out a5_44)
	a3Out = a3_13
	a4Out = a4_14
	return a1_11
tc_cmac_erase_exit:


word32 tc_cmac_init(word32 ra, word32 a0, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_cmac_setup
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
tc_cmac_init_entry:
l2302610E:
	branch a0 == 0<32> l2302613E
l2302613E:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	return ra
l23026110:
	word32 a1_26
	word32 a3_28
	word32 a1_67
	word32 a2_68
	word32 a3_69
	word32 a4_70
	word32 a5_71
	word32 a2_72
	word32 a4_73
	word32 a5_74
	word32 ra_31 = _set(_set(ra, a0, 0<32>, 0x10<32>, out a1_67, out a2_68, out a3_69, out a4_70, out a5_71), a0 + 48<i32>, 0<32>, 0x10<32>, out a1_26, out a2_72, out a3_28, out a4_73, out a5_74)
	Mem36[a0 + 68<i32>:word32] = 0<32>
	Mem37[80<i32>:word32] = a0
	Mem38[0x10000054<32>:word32] = a0
	a1Out = a1_26
	a3Out = a3_28
	a4Out = 0<32>
	return ra_31
tc_cmac_init_exit:


word32 tc_cmac_setup(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg38, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_aes_cmac
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tc_cmac_setup_entry:
l23026142:
	branch a0 == 0<32> l230261A8
l23026146:
	branch a1 == 0<32> l230261A8
l230261A8:
	s1Out = s1
	a0Out = 0<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = 0<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return ra
l23026148:
	word32 a5_202
	word32 a4_201
	word32 a3_200
	word32 a2_199
	word32 a1_198
	word32 ra_29 = _set(ra, a0, 0<32>, 88<i32>, out a1_198, out a2_199, out a3_200, out a4_201, out a5_202)
	Mem33[a2 + 72<i32>:word32] = a0
	word32 a2_58
	word32 a4_209
	word32 a3_208
	word32 a1_207
	word32 s4_206
	word32 a4_205
	word32 a0_204
	word32 s1_203
	word32 a5_210
	word32 ra_62 = _set(ra_29, tc_aes128_set_encrypt_key(a2, a1, out s1_203, out a0_204, out a4_205, out s4_206), 0<32>, 0x10<32>, out a1_207, out a2_58, out a3_208, out a4_209, out a5_210)
	word32 s0_65 = Mem33[a2_58 + 72<i32>:word32]
	word32 s0_77
	word32 s2_79
	word32 s3_80
	word32 s4_81
	word32 s5_82
	word32 s1_211
	word32 a0_212
	word32 a1_213
	word32 a3_214
	word32 a4_215
	word32 ra_76 = tc_aes_encrypt(ra_62, s0_65, s0_65, a2_58, out s0_77, out s1_211, out a0_212, out a1_213, out a3_214, out a4_215, out s2_79, out s3_80, out s4_81, out s5_82)
	gf_double(s0_77 + 16<i32>, s0_77)
	gf_double(s0_77 + 32<i32>, s0_77 + 16<i32>)
	word32 a1_106
	word32 a3_108
	word32 a4_109
	word32 ra_111 = tc_cmac_init(ra_76, s0_77, out a1_106, out a3_108, out a4_109)
	0<32> = dwArg38
	s1Out = s0_77 + 16<i32>
	a0Out = 1<32>
	a1Out = a1_106
	a3Out = a3_108
	a4Out = a4_109
	a5Out = 1<32>
	s2Out = s2_79
	s3Out = s3_80
	s4Out = s4_81
	s5Out = s5_82
	return ra_111
tc_cmac_setup_exit:


word32 tc_cmac_update(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_aes_cmac
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 ra s0 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tc_cmac_update_entry:
l230261AC:
	branch a0 == 0<32> l2302629A
l2302629A:
	s0Out = s0
	a0Out = 0<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return ra
l230261B0:
	word32 a0_189
	word32 s1_103 = a2
	branch a2 != 0<32> l230261D4
l230261D4:
	word32 s2_22 = a1
	a0_189 = 0<32>
	branch a1 == 0<32> l230261C4
l230261DC:
	word32 s0_133 = Mem17[a4 + 84<i32>:word32]
	a3 = a5 | a4
	branch a3 == 0<32> l230261C4
l230261E6:
	word32 s4_32 = Mem17[s0_133 + 68<i32>:int32]
	Mem34[a5 + 79<i32>:word32] = s0_133
	Mem35[CONVERT(a5 + -1<i32> <u a5, bool, word32) + (a4 + 0xFFFFFFFF<32>) + 84<i32>:word32] = s0_133
	a3 = a5 + -1<i32>
	a4 = a4 + 0xFFFFFFFF<32>
	branch s4_32 == 0<32> l23026254
l230261FE:
	s3 = 0x10<32> - s4_32
	word32 a0_39 = s4_32 + 48<i32> + s0_133
	branch a2 >=u s3 l2302621E
l2302621E:
	word32 a3_377
	word32 a4_378
	word32 a5_379
	_copy(a0_39, s3, a1, s3, out a3_377, out a4_378, out a5_379)
	Mem60[s0_133 + 68<i32>:word32] = 0<32>
	word32 a5_61 = s0_133
l23026236:
	word32 a2_66 = CONVERT(Mem64[a5_61 + 48<i32>:byte], byte, word32)
	a5_61 = a5_61 + 1<32>
	Mem69[a5_61 + 4095<i32>:byte] = SLICE(CONVERT(Mem64[a5_61:byte], byte, word32) ^ a2_66, byte, 0)
	branch s0_133 + 16<i32> != a5_61 l23026236
l2302624A:
	word32 s0_71 = Mem69[a2_66 + 72<i32>:word32]
	word32 a0_381
	word32 s3_382
	word32 s4_383
	ra = tc_aes_encrypt(ra, s0_71, s0_71, a2_66, out s0_133, out s1_103, out a0_381, out a1, out a3, out a4, out s2_22, out s3_382, out s4_383, out s5)
l23026254:
	word32 s2_100 = s2_22 + s1_103
	s3 = 0x10<32>
l23026258:
	word32 a2_104 = s2_100 - s1_103
	branch s3 <u s1_103 l2302626E
l2302626E:
	word32 a5_106 = 0<32>
l23026270:
	word32 a3_109 = s0_133 + a5_106
	Mem117[a3_109:byte] = SLICE(CONVERT(Mem112[a2_104 + a5_106:byte], byte, word32) ^ CONVERT(Mem112[a3_109:byte], byte, word32), byte, 0)
	a5_106 = a5_106 + 1<32>
	branch a5_106 != s3 l23026270
l2302628C:
	word32 s0_119 = Mem117[a2_104 + 72<i32>:word32]
	word32 s1_134
	word32 a0_384
	word32 s4_385
	ra = tc_aes_encrypt(ra, s0_119, s0_119, a2_104, out s0_133, out s1_134, out a0_384, out a1, out a3, out a4, out s2_100, out s3, out s4_385, out s5)
	s1_103 = s1_134 + 0xFFFFFFF0<32>
l23026260:
	branch s1_103 == 0<32> l230261C2
l23026262:
	word32 a5_380
	a1 = _copy(s0_133 + 48<i32>, s1_103, a2_104, s1_103, out a3, out a4, out a5_380)
l2302620E:
	word32 a5_175
	a1 = _copy(a0_39, a2, a1, a2, out a3, out a4, out a5_175)
	s0_133 = Mem35[a5_175 + 68<i32>:word32]
	s1_103 = a2 + a5_175
l2302621A:
	Mem188[s1_103 + 68<i32>:word32] = s0_133
l230261C2:
	a0_189 = 1<32>
l230261C4:
	s0Out = s1
	a0Out = a0_189
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	return ra
tc_cmac_update_exit:


word32 tc_cmac_final(word32 ra, word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_aes_cmac
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tc_cmac_final_entry:
l2302629E:
	branch a0 == 0<32> l2302631E
l230262A2:
	branch a1 == 0<32> l2302631E
l2302631E:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return 0<32>
l230262A4:
	word32 a2_105
	word32 a1_15 = Mem14[0x44<32>:word32]
	word32 s0_17 = a1_15
	branch true l23026300
l23026300:
	word32 a5_28
	word32 a4_189
	word32 a3_188
	word32 a2_187
	word32 a1_186
	ra = _set(ra, a1_15 + 48<i32>, 0<32>, 0x10<32>, out a1_186, out a2_187, out a3_188, out a4_189, out a5_28)
	s0_17 = Mem14[a5_28 + 68<i32>:word32]
	Mem36[a5_28 + s0_17 + 48<i32>:byte] = 0x80<8>
	a2_105 = s0_17 + 32<i32>
l230262B8:
	a2_105 = a1_15 + 16<i32>
l230262BC:
	word32 a5_39 = s0_17
	word32 a3_40 = 0<32>
l230262C2:
	a5_39 = a5_39 + 1<32>
	Mem54[a5_39 + 4095<i32>:byte] = SLICE(CONVERT(Mem43[a5_39:byte], byte, word32) ^ CONVERT(Mem43[a5_39 + 48<i32>:byte], byte, word32) ^ CONVERT(Mem43[a2_105 + a3_40:byte], byte, word32), byte, 0)
	a3_40 = a3_40 + 1<32>
	branch a3_40 != 0x10<32> l230262C2
l230262E2:
	word32 s0_72
	word32 s3_75
	word32 s4_76
	word32 s5_77
	word32 a3_90
	word32 a4_91
	word32 s2_195
	word32 a4_194
	word32 a3_193
	word32 a1_192
	word32 a0_191
	word32 s1_190
	a1Out = tc_cmac_erase(tc_aes_encrypt(ra, a0, Mem54[a2_105 + 72<i32>:word32], a2_105, out s0_72, out s1_190, out a0_191, out a1_192, out a3_193, out a4_194, out s2_195, out s3_75, out s4_76, out s5_77), s0_72, out a3_90, out a4_91)
	a3Out = a3_90
	a4Out = a4_91
	s3Out = s3_75
	s4Out = s4_76
	s5Out = s5_77
	return 1<32>
tc_cmac_final_exit:


word32 _copy(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_cmac_update
//      shift_rows
//      tc_aes_encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
_copy_entry:
l23026322:
	branch a1 <u a3 l23026340
l23026340:
	a3Out = 0<32>
	a4Out = a4
	a5Out = a5
	return a1
l23026326:
	word32 a4_16
	word32 a5_17
	word32 a3_21
	word32 a2_65
	word32 a6_66
	word32 a7_67
	word32 a1_19 = memcpy(a0, a2, a3, out a2_65, out a3_21, out a4_16, out a5_17, out a6_66, out a7_67)
	a3Out = a3_21
	a4Out = a4_16
	a5Out = a5_17
	return a1_19
_copy_exit:


word32 _set(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_cmac_erase
//      tc_cmac_init
//      tc_cmac_setup
//      tc_cmac_final
//      tc_aes_encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a1 a2 a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
_set_entry:
l23026346:
l23026346_thunk_memset:
	word32 a1_8
	word32 a2_9
	word32 a3_10
	word32 a4_11
	word32 a5_12
	word32 t1_21
	word32 a0_22
	word32 ra_13 = memset(ra, a0, a1, a2, out t1_21, out a0_22, out a1_8, out a2_9, out a3_10, out a4_11, out a5_12)
	a1Out = a1_8
	a2Out = a2_9
	a3Out = a3_10
	a4Out = a4_11
	a5Out = a5_12
	return ra_13
_set_exit:


word32 _double_byte(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mult_row_column
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
_double_byte_entry:
l2302634A:
	return (a0 << 1<i32> ^ (a0 >>u 7<u32>) + 0x1B<32>) & 255<i32>
_double_byte_exit:


word32 bl_find_valid_queued_entry(word32 ra, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_onchiphci_rx_packet_handler
// MayUse:  ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 t0 t1 t3 tp
// Preserved: sp
bl_find_valid_queued_entry_entry:
l2302635E:
	word32 s1_18 = 0<32>
	word32 t1_97
	word32 a1_99
	word32 a0_98
	word32 a3_101
	word32 a2_100
	word32 a4_102
	word32 a5_103
	word32 ra_25 = memset(ra, fp + -40<i32>, 0<32>, 8<32>, out t1_97, out a0_98, out a1_99, out a2_100, out a3_101, out a4_102, out a5_103)
l23026380:
	word32 s0_31 = s1_18 << 3<u32>
	word32 s0_33 = s0_31 + 0x4201A480<32>
	word32 a5_39
	word32 a3_40
	word32 a4_41
	word32 a1_104
	word32 a2_105
	branch memcmp(s0_31 + 0x4201A480<32>, fp + -40<i32>, 8<32>, out a1_104, out a2_105, out a3_40, out a4_41, out a5_39) == 0<32> l2302639A
l23026392:
	s1_18 = s1_18 + 1<32>
	branch s1_18 != 9<32> l23026380
l23026398:
	s0_33 = 0<32>
l2302639A:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_18
	a0Out = s0_33
	a3Out = a3_40
	a4Out = a4_41
	a5Out = a5_39
	s2Out = 0x4201A480<32>
	return ra_25
bl_find_valid_queued_entry_exit:


word32 bl_onchiphci_rx_packet_handler(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & a2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_buf_unref
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a2 mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_onchiphci_rx_packet_handler_entry:
l230263AA:
	word32 s0_136 = a0
	word32 s1_21 = a1
	word32 s4_102 = a2
	word32 s2_100 = a3
	word32 s3_113 = a4
	branch a4 != 0<32> l230263EE
l230263C6:
	word32 a0_111
	s5 = 0x4200E1A4<32>
	branch a0 == 1<32> l230264CA
l230264CA:
	a0_111 = 3<32>
l230263D4:
	branch (a0 + -2<i32> & 255<i32>) >u 1<32> l23026414
l23026414:
	a5 = 4<32>
	branch a0 == 4<32> l23026424
l23026424:
	a4 = CONVERT(Mem17[a2:byte], byte, word32)
	a5 = 2<32>
	branch a4 != 2<32> l2302641A
l2302642E:
	branch bt_buf_get_rx_avail_cnt(a3, a4, mstatus, out a3, out a4, out a5) > 1<32> l2302641A
l2302641A:
	a0_111 = 1<32>
l2302641C:
	ra = bt_buf_get_rx(ra, 0<32>, a3, a4, a5, 0x4200E1A4<32>, mstatus, dwArg84, dwArg98, dwArgD8, dwArgF8, out s1_21, out a1, out a2, out a3, out a4, out s2_100, out s4_102, out s5, out mstatus)
l230263E0:
	ra = bt_buf_get_cmd_complete(ra, a1, a3, a4, 0x4200E1A4<32>, mstatus, dwArg84, dwArg98, dwArgD8, dwArgF8, out s0_136, out s1_21, out a0_111, out a1, out a2, out a3, out a4, out s2_100, out s4_102, out s5, out mstatus)
l230263E6:
	s3_113 = a0_111
	branch a0_111 == 0<32> l23026436
l23026436:
	word32 a5_118 = Mem17[s5:int32]
	Mem120[s5:word32] = a5_118 + 1<32>
	branch (a5_118 + 1<32> & 255<i32>) != 0<32> l23026452
l23026446:
	word32 a1_596
	word32 a0_595
	word32 a2_597
	word32 a4_598
	word32 s8_600
	word32 a5_599
	puts(0x230767CC<32>, out a0_595, out a1_596, out a2_597, out a4_598, out a5_599, out s4_102, out s8_600)
l23026452:
	branch s0_136 != 4<32> l23026462
l23026458:
	branch CONVERT(Mem120[s4_102:byte], byte, word32) == 2<32> l230265BE
l23026462:
	word32 a0_155
	word32 a3_158
	word32 s0_162
	word32 s1_163
	word32 s2_164
	word32 a4_159
	word32 a5_160
	ra = bl_find_valid_queued_entry(ra, dwArg0108, out s0_162, out s1_163, out a0_155, out a3_158, out a4_159, out a5_160, out s2_164)
	word32 s3_170 = a0_155
	branch a0_155 == 0<32> l230265BE
l2302646C:
	Mem171[a0_155 + 1<i32>:byte] = SLICE(s1_163, byte, 0)
	Mem173[a0_155:byte] = SLICE(s0_162, byte, 0)
	Mem174[a0_155 + 2<i32>:byte] = SLICE(s1_163 >>u 8<i32>, byte, 0)
	branch s2_164 == 0<32> l230264A8
l2302647E:
	word32 s4_191
	word32 a0_180 = k_malloc(ra, s1_163 >>u 8<i32>, s2_164, a3_158, a4_159, a5_160, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s2_164, out s3_170, out s4_191)
	Mem196[s3_170 + 4<i32>:byte] = SLICE(a0_180 >>u 8<u32>, byte, 0)
	Mem199[s3_170 + 3<i32>:byte] = SLICE(a0_180, byte, 0)
	Mem200[s3_170 + 5<i32>:byte] = SLICE(a0_180 >>u 0x10<u32>, byte, 0)
	Mem201[s3_170 + 6<i32>:byte] = SLICE(a0_180 >>u 0x18<u32>, byte, 0)
	word32 a3_602
	word32 a2_601
	word32 a6_603
	word32 a7_604
	memcpy(a0_180, s4_191, s2_164, out a2_601, out a3_602, out a4_159, out a5_160, out a6_603, out a7_604)
l230264A8:
	Mem219[s3_170 + 7<i32>:byte] = SLICE(s2_164, byte, 0)
l230264C6_thunk_k_queue_append:
	word32 a2_237
	word32 a5_610
	word32 s2_611
	word32 s3_612
	word32 s4_613
	word32 s5_614
	word32 s6_615
	word32 a4_609
	word32 s1_605
	word32 a0_606
	word32 a1_607
	word32 a3_608
	s0Out = k_queue_append(0x4201A4C8<32>, a4_159, a5_160, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_605, out a0_606, out a1_607, out a2_237, out a3_608, out a4_609, out a5_610, out s2_611, out s3_612, out s4_613, out s5_614, out s6_615)
	a2Out = a2_237
	mstatusOut = mstatus
	return ra
l230263EA:
	Mem258[s5:word32] = 0<32>
l230263EE:
	word32 a0_266 = CONVERT(Mem260[s3_113 + 12<i32>:uint16], uint16, word32) + Mem260[s3_113 + 8<i32>:int32]
	branch (s0_136 + 0xFFFFFFFF<32> & 255<i32>) >u 4<32> l230265BE
l230265BE:
	s0Out = s1
	a2Out = dwArg48
	mstatusOut = mstatus
	return ra
l23026404:
	word32 s0_300
	word32 ra_305
	word32 a2_309
	word32 mstatus_317
	word32 a7_318
	word32 s6_319
	word32 t0_320
	word32 t1_321
	word32 t4_322
	word32 t5_323
	word32 t6_324
	call 0x230767B8<32> (retsize: 0;)
		uses: a0:a0_266,a1:a1_290,a2:a2_292,a3:a3_294,a4:a4_296,a5:0x230767B8<32>,a7:a7_318,mstatus:mstatus_298,ra:ra_288,s0:Mem260[0x230767B8<32>:word32],s1:s1_283,s2:s2_285,s3:s3_259,s4:s4_287,s5:s5_289,s6:s6_319,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0040:dwArg20,Stack +0044:dwArg24,Stack +0048:dwArg28,Stack +0068:dwArg48,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +00B8:dwArg98,Stack +00F8:dwArgD8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,Stack +0138:dwArg0118,Stack +0158:dwArg0138,Stack +0178:dwArg0158,Stack +0198:dwArg0178,t0:t0_320,t1:t1_321,t4:t4_322,t5:t5_323,t6:t6_324
		defs: a2:a2_309,a7:a7_318,mstatus:mstatus_317,ra:ra_305,s0:s0_300,s6:s6_319,t0:t0_320,t1:t1_321,t4:t4_322,t5:t5_323,t6:t6_324
	s0Out = s0_300
	a2Out = a2_309
	mstatusOut = mstatus_317
	return ra_305
bl_onchiphci_rx_packet_handler_exit:


word32 bl_handle_queued_msg(word32 ra, word32 a3, word32 a4, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg28, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg98, word32 dwArgA4, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_buf_unref
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_handle_queued_msg_entry:
l230265D0:
	word32 a2_272
	word32 a3_15
	word32 a4_16
	word32 a5_17
	word32 a0_13 = k_queue_is_empty(0x4201A4C8<32>, a3, a4, mstatus, out a2_272, out a3_15, out a4_16, out a5_17)
	branch a0_13 != 0<32> l23026664
l230265E4:
	a0_13 = 3<32>
	word32 a2_273
	ra = bt_buf_get_rx(ra, 0<32>, a3_15, a4_16, a5_17, s5, mstatus, dwArg84, dwArg98, dwArgD8, dwArgF8, out s1, out a1, out a2_273, out a3_15, out a4_16, out s2, out s4, out s5, out mstatus)
	branch false l23026664
l23026664:
	s0Out = 0x4201A000<32>
	s1Out = s1
	a0Out = a0_13
	a1Out = a1
	a3Out = a3_15
	a4Out = a4_16
	a5Out = a5_17
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = <invalid>
	mstatusOut = mstatus
	return ra
l230265F0:
	word32 a0_52
	word32 a4_56
	word32 s1_274
	word32 a1_275
	word32 a2_276
	word32 a3_277
	word32 a5_278
	word32 s2_279
	word32 s3_280
	word32 s4_281
	k_queue_get(0x4201A4C8<32>, 0<32>, a3_15, a4_16, mstatus, dwLoc1C, 3<32>, dwArgD8, dwArg0118, out s1_274, out a0_52, out a1_275, out a2_276, out a3_277, out a4_56, out a5_278, out s2_279, out s3_280, out s4_281)
	word32 a5_81 = CONVERT(Mem44[a0_52 + 5<i32>:byte], byte, word32) << 16<i32> | dwArgA4
	word32 a2_91
	word32 mstatus_106
	word32 s0_132
	word32 ra_107 = bl_onchiphci_rx_packet_handler(ra, CONVERT(Mem44[a0_52:byte], byte, word32), CONVERT(Mem44[a0_52 + 2<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem44[a0_52 + 1<i32>:byte], byte, word32), CONVERT(Mem44[a0_52 + 6<i32>:byte], byte, word32) << 24<i32> | a5_81, CONVERT(Mem44[a0_52 + 7<i32>:byte], byte, word32), a4_56, a5_81, s5, mstatus, dwLoc20, dwLoc1C, dwArg00, dwArg04, dwArg08, dwArg28, 3<32>, dwArg68, dwArg78, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_132, out a2_91, out mstatus_106)
	word32 a5_121 = CONVERT(Mem44[s0_132 + 4<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem44[s0_132 + 3<i32>:byte], byte, word32) | CONVERT(Mem44[s0_132 + 5<i32>:byte], byte, word32) << 16<i32>
	word32 a0_124 = CONVERT(Mem44[s0_132 + 6<i32>:byte], byte, word32) << 24<i32> | a5_121
	branch a0_124 == 0<32> l23026654
l23026650:
	word32 a3_282
	word32 a4_283
	s0_132 = k_free(a0_124, a2_91, a5_121, mstatus_106, dwArg0138, dwArg0178, out a3_282, out a4_283)
l23026654:
	word32 s4_134
	word32 s1_133
l23026660_thunk_memset:
	word32 a0_147
	word32 a1_148
	word32 a3_150
	word32 a4_151
	word32 a5_152
	word32 t1_284
	word32 a2_285
	word32 ra_153 = memset(ra_107, s0_132, 0<32>, 8<32>, out t1_284, out a0_147, out a1_148, out a2_285, out a3_150, out a4_151, out a5_152)
	s0Out = s0_132
	s1Out = s1_133
	a0Out = a0_147
	a1Out = a1_148
	a3Out = a3_150
	a4Out = a4_151
	a5Out = a5_152
	s2Out = s2_96
	s3Out = s3_97
	s4Out = s4_134
	s5Out = s5_108
	s6Out = s6_109
	s8Out = <invalid>
	mstatusOut = mstatus_106
	return ra_153
bl_handle_queued_msg_exit:


void bl_onchiphci_interface_deinit(word32 ra, word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg98, word32 dwArgBC, word32 dwArgE8, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_disable
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bl_onchiphci_interface_deinit_entry:
l2302666C:
	word32 s0_10 = 0x4201A000<32>
l23026676:
	word32 a0_17
	word32 a2_19
	word32 a4_21
	word32 a5_22
	word32 s4_120
	word32 s3_119
	word32 s2_118
	word32 a1_117
	word32 s1_116
	s0_10 = k_queue_get(s0_10 + 1224<i32>, 0<32>, a3, a4, mstatus, s0, ra, dwArgE8, dwArg0128, out s1_116, out a0_17, out a1_117, out a2_19, out a3, out a4_21, out a5_22, out s2_118, out s3_119, out s4_120)
	branch a0_17 == 0<32> l230266A6
l230266A6:
l230266B0_thunk_k_queue_free:
	word32 a5_123
	word32 a4_122
	word32 a3_121
	k_queue_free(ra, s0_10 + 1224<i32>, a3, a4_21, a5_22, mstatus, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, dwArg0148, dwArg0188, out a3_121, out a4_122, out a5_123)
	return
bl_onchiphci_interface_deinit_exit:
l23026682:
	a4 = CONVERT(Mem7[a0_17 + 3<i32>:byte], byte, word32) | CONVERT(Mem7[a0_17 + 4<i32>:byte], byte, word32) << 8<i32>
	word32 a5_74 = CONVERT(Mem7[a0_17 + 5<i32>:byte], byte, word32) << 16<i32> | a4
	word32 a0_76 = CONVERT(Mem7[a0_17 + 6<i32>:byte], byte, word32) << 24<i32> | a5_74
	branch a0_76 == 0<32> l23026676
l230266A0:
	s0_10 = k_free(a0_76, a2_19, a5_74, mstatus, dwArg0148, dwArg0188, out a3, out a4)


word32 bl_onchiphci_interface_init(word32 ra, word32 s0, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      init_work
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
bl_onchiphci_interface_init_entry:
l230266B4:
	word32 a3_13
	word32 a4_14
	word32 a5_15
	word32 t1_67
	word32 a0_68
	word32 a1_69
	word32 a2_70
	word32 ra_16 = memset(ra, 0x4201A480<32>, 0<32>, 72<i32>, out t1_67, out a0_68, out a1_69, out a2_70, out a3_13, out a4_14, out a5_15)
	word32 s2_31
	word32 a3_71
	word32 a4_72
	word32 a5_73
	word32 s3_74
	word32 s4_75
	word32 s1_30 = k_queue_init(ra_16, 9<32>, a3_13, a4_14, a5_15, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out a3_71, out a4_72, out a5_73, out s2_31, out s3_74, out s4_75)
l230266E4_thunk_bt_onchiphci_interface_init:
	word32 a0_42
	word32 a3_45
	word32 a4_46
	word32 mstatus_48
	word32 s1_51
	word32 ra_49 = bt_onchiphci_interface_init(ra_16, s0, s1_30, 0x230263AA<32>, out s1_51, out a0_42, out a3_45, out a4_46, out mstatus_48)
	s1Out = s1_51
	a0Out = a0_42
	a3Out = a3_45
	a4Out = a4_46
	s2Out = s2_31
	mstatusOut = mstatus_48
	return ra_49
bl_onchiphci_interface_init_exit:


word32 bl_onchiphci_send_2_controller(word32 ra, word32 a0, word32 a3, word32 s3, word32 dwArgAC, word32 dwArgC8, word32 dwArgF8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_driver_send
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] s3:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a1 a4 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_onchiphci_send_2_controller_entry:
l230266E8:
	word32 a1_38
	word32 s1_26
	word32 s2_15 = CONVERT(Mem13[a0 + 20<i32>:byte], byte, word32)
	branch s2_15 == 0<32> l23026714
l23026714:
	word32 a5_17 = CONVERT(Mem13[a0 + 12<i32>:uint16], uint16, word32)
	a4 = 2<32>
	branch a5_17 <=u 2<32> l23026704
l2302671E:
	s3 = Mem13[a0 + 8<i32>:int32]
	a4 = CONVERT(Mem13[s3 + 2<i32>:byte], byte, word32)
	branch a5_17 <u a4 l23026704
l2302672A:
	s1_26 = CONVERT(Mem13[s3 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem13[s3:byte], byte, word32)
	word32 a5_246
	net_buf_simple_pull(a0 + 8<32>, 3<32>, out a5_246)
	word32 a5_33 = s1_26 + 0xFDFFFFED<32> << 16<i32>
	a1_38 = 0<32>
	branch a5_33 >>u 16<i32> >u 0x1F<32> l2302676A
l23026752:
	a1_38 = s2_15
	branch (1<32> << (a5_33 >>u 16<i32>) & 0xA000E1CD<32>) == 0<32> l2302676A
l23026766:
	a1_38 = CONVERT(Mem13[a3:byte], byte, word32)
l2302676A:
l230266FE:
	branch s2_15 == 2<32> l23026782
l23026782:
	a4 = CONVERT(Mem13[a0 + 12<i32>:uint16], uint16, word32)
	branch a4 <=u 3<32> l23026704
l2302678C:
	a4 = CONVERT(Mem13[3<32>:byte], byte, word32)
	word32 s2_65 = CONVERT(Mem13[6<32>:byte], byte, word32) << 8<i32> | CONVERT(Mem13[5<32>:byte], byte, word32)
	s1 = CONVERT(Mem13[4<32>:byte], byte, word32) << 8<i32> | a4
	word32 a5_247
	a1 = net_buf_simple_pull(Mem13[0xB<32>:word32] + 8<32>, 4<32>, out a5_247)
	branch CONVERT(Mem13[a0 + 12<i32>:uint16], uint16, word32) <u s2_65 l23026704
l230267B8:
	a1_38 = CONVERT(SLICE(s1, word12, 0), word12, word32)
	s1_26 = s1 >>u 12<i32>
	s2_15 = 1<32>
l23026778:
	ra = bt_onchiphci_send(ra, s1_26, s2_15, a1_38, fp + -44<i32>, s3, dwArgAC, dwArgC8, dwArgF8, out s1, out a1, out a4, out mstatus)
l23026704:
l23026706:
	0<32> = dwArg0128
	s1Out = s1
	a1Out = a1
	a4Out = a4
	mstatusOut = mstatus
	return ra
bl_onchiphci_send_2_controller_exit:


word32 atomic_test_bit(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      notify_le_param_updated
//      bt_conn_create_le
//      bt_conn_le_param_update
//      bt_conn_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a2 t3
// Preserved: sp
atomic_test_bit_entry:
l230267D4:
	return atomic_get(a0) >> a1 & 1<32>
atomic_test_bit_exit:


word32 tx_free(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_l2cap_send
//      send_frag
//      tx_notify
//      bt_conn_process_tx
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a1 a3 a4 a5 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tx_free_entry:
l230267EC:
	Mem5[a0 + 4<i32>:word32] = 0<32>
	Mem6[a0 + 8<i32>:word32] = 0<32>
	Mem7[a0 + 12<i32>:word32] = 0<32>
l23026802_thunk_k_queue_append:
	word32 a1_14
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 s1_22
	word32 s2_23
	word32 s3_24
	word32 s4_25
	word32 s5_26
	word32 s6_27
	word32 a0_50
	word32 a2_51
	k_queue_append(0x4200DD24<32>, a4, a5, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_22, out a0_50, out a1_14, out a2_51, out a3_16, out a4_17, out a5_18, out s2_23, out s3_24, out s4_25, out s5_26, out s6_27)
	a1Out = a1_14
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_18
	s2Out = s2_23
	s3Out = s3_24
	s4Out = s4_25
	s5Out = s5_26
	s6Out = s6_27
	return s1_22
tx_free_exit:


word32 send_frag(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 s6, word32 mstatus, word32 dwArg08, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_process_tx
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
send_frag_entry:
l23026806:
	word32 a5_103
	word32 a4_191
	word32 a3_190
	word32 a1_105
	word32 s2_197
	word32 s6_201
	word32 s4_106
	word32 s2_43
	word32 a0_639
	word32 a1_640
	word32 a4_641
	word32 s8_644
	word32 a5_642
	word32 s4_643
	word32 a3_165
	word32 s3_198
	word32 s1_196
	word32 s0_41 = k_sem_take(0x4200D3DC<32>, 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_196, out a0_639, out a1_640, out a3_165, out a4_641, out a5_642, out s2_43, out s3_198, out s4_643, out s8_644)
	word32 s5_128 = 0x4200D000<32>
	word32 a4_166 = CONVERT(Mem19[s0_41 + 13<i32>:byte], byte, word32)
	word32 a5_167 = 4<32>
	branch a4_166 != 4<32> l230268CA
l2302683A:
	word32 a4_55
	word32 a0_53 = net_buf_simple_push(4<32>, 4<32>, out a4_55)
	s2_197 = CONVERT(Mem19[s0_41:uint16], uint16, word32)
	word32 a2_61 = CONVERT(SLICE(s2_43 << 0xC<u32> | s2_197, word16, 0), word16, word32)
	Mem62[a0_53:byte] = SLICE(a2_61, byte, 0)
	Mem64[a0_53 + 1<i32>:byte] = SLICE(a2_61 >>u 8<i32>, byte, 0)
	word32 a5_67 = CONVERT(Mem64[s3_198 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFFC<32> << 16<i32>
	Mem69[a0_53 + 2<i32>:byte] = SLICE(a5_67 >>u 16<i32>, byte, 0)
	Mem71[a0_53 + 3<i32>:byte] = SLICE(a5_67 >>u 24<i32>, byte, 0)
	word32 a2_650
	word32 a4_651
	word32 a5_75
	irq_lock(a4_55, mstatus, out a2_650, out a4_651, out a5_75)
	branch s1_196 == 0<32> l23026902
l23026902:
	word32 s0_76 = Mem71[a5_75 + 24<i32>:word32]
	branch a5_75 == 0<32> l23026914
l23026914:
	s6_201 = s0_76 + 28<i32>
l23026906:
	s6_201 = a5_75 + 12<i32>
	a5_75 = Mem71[a5_75 + 12<i32>:word32]
l2302690C:
	Mem84[s6_201:word32] = a5_75 + 1<32>
l23026878:
	Mem85[s1_196:word32] = 0<32>
	word32 s0_86 = Mem85[a5_75 + 24<i32>:word32]
	branch a5_75 != 0<32> l230268FC
l230268FC:
	Mem87[s1_196:word32] = a5_75
	Mem88[s1_196 + 24<i32>:word32] = s0_86
	s6_201 = s6
l23026880:
	Mem89[s1_196 + 24<i32>:word32] = s0_86
	Mem90[s1_196 + 20<i32>:word32] = s0_86
	s6_201 = s6
l23026884:
	word32 a5_672
	a3_190 = irq_unlock(a3_165, mstatus, out a4_191, out a5_672)
	Mem101[s3_198 + 20<i32>:byte] = 2<8>
	a5_103 = bt_send()
	a1_105 = s3_198
	branch s3_198 == 0<32> l2302693A
l2302693A:
	s4_106 = 1<32>
l23026898:
	word32 a3_118
	word32 a4_119
	word32 s1_122
	word32 s6_129
	word32 s8_661
	word32 s9_662
	word32 s10_663
	word32 s11_664
	word32 t4_665
	word32 a2_654
	word32 a5_655
	word32 a7_656
	word32 s2_657
	word32 s3_658
	word32 s4_659
	word32 s7_660
	word32 a0_652
	word32 a1_653
	ra = printf(ra, 0x23074A04<32>, a3_190, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_122, out a0_652, out a1_653, out a2_654, out a3_118, out a4_119, out a5_655, out a7_656, out s2_657, out s3_658, out s4_659, out s5_128, out s6_129, out s7_660, out s8_661, out s9_662, out s10_663, out s11_664, out t4_665)
	word32 a2_666
	word32 a4_667
	word32 a5_138
	irq_lock(a4_119, mstatus, out a2_666, out a4_667, out a5_138)
	branch s1_122 == 0<32> l2302692E
l2302692E:
	Mem141[s6_129:word32] = Mem101[s6_129:int32] + 0xFFFFFFFF<32>
l230268AA:
	word32 a4_143 = 0<32>
l230268AE:
	branch a5_138 == 0<32> l230268C6
l230268B0:
	branch s1_122 != a5_138 l23026928
l23026928:
	a4_143 = a5_138
	a5_138 = Mem101[a5_138:word32]
l230268B4:
	word32 s1_149 = Mem101[a5_138:word32]
	branch a4_143 != 0<32> l2302691C
l2302691C:
	Mem151[a5_138:word32] = a4_143
	word32 s0_152 = Mem151[a5_138 + 24<i32>:word32]
	branch s1_149 != a5_138 l230268C2
l23026924:
	Mem153[a4_143 + 24<i32>:word32] = s0_152
l230268B8:
	word32 s0_154 = Mem101[a4_143 + 24<i32>:word32]
	Mem155[a5_138 + 20<i32>:word32] = s0_154
	branch s1_149 != a4_143 l230268C2
l230268C0:
	Mem156[a5_138 + 24<i32>:word32] = s0_154
l230268C2:
	Mem158[s1_149:word32] = 0<32>
l230268C6:
	a3_165 = irq_unlock(a3_118, mstatus, out a4_166, out a5_167)
l230268CA:
	word32 s0_645
	word32 a0_646
	word32 a2_647
	word32 s10_648
	word32 s11_649
	ra = k_sem_give(ra, s5_128 + 988<i32>, a3_165, a4_166, a5_167, mstatus, dwLoc0C, dwLoc08, dwArg40, dwArg44, s1, dwArg74, dwArg8C, dwArgE8, dwArg0128, dwArg0168, out s0_645, out s1_196, out a0_646, out a1_105, out a2_647, out a3_190, out a4_191, out a5_103, out s2_197, out s3_198, out s4_106, out s5_128, out s6_201, out s7, out s9, out s10_648, out s11_649)
	branch s1_196 == 0<32> l230268DA
l230268D4:
	s1_196 = tx_free(s1_196, a4_191, a5_103, mstatus, s4, s3, dwArgD8, dwArg0118, dwArg0158, out a1_105, out a3_190, out a4_191, out a5_103, out s2_197, out s3_198, out s4_106, out s5_128, out s6_201)
l230268DA:
	branch s4_106 == 0<32> l230268E6
l230268DE:
	word32 s0_668
	word32 a0_669
	word32 s4_670
	word32 s8_671
	ra = net_buf_unref(ra, s1_196, s3_198, a1_105, a4_191, mstatus, s6, s4, s2, dwArg08, dwArg58, s3, dwArg78, dwArg84, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_668, out s1_196, out a0_669, out a1_105, out a3_190, out a4_191, out a5_103, out s2_197, out s3_198, out s4_670, out s5_128, out s6_201, out s8_671, out mstatus)
	s4_106 = 0<32>
l230268E6:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_196
	a0Out = s4_106
	a1Out = a1_105
	a3Out = a3_190
	a4Out = a4_191
	a5Out = a5_103
	s2Out = s2_197
	s3Out = s3_198
	s4Out = dwArg04
	s5Out = s5_128
	s6Out = s6_201
	s7Out = s7
	s9Out = s9
	mstatusOut = mstatus
	return ra
send_frag_exit:


void notify_connected(word32 ra, word32 s0, word32 a0, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg2C, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s11:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
notify_connected_entry:
l2302693E:
	word32 a5_18 = 0x4200E000<32>
	word32 s0_17 = Mem6[0x4200E1A8<32>:int32]
	word32 s1_13 = a0
l23026950:
	word32 a1_16 = CONVERT(Mem11[s1_13 + 12<i32>:byte], byte, word32)
	branch s0_17 != 0<32> l23026966
l23026966:
	word32 s0_19 = Mem11[a5_18:word32]
	branch a5_18 == 0<32> l2302696E
l2302696A:
	word32 a3_88
	word32 a4_89
	word32 a6_90
	word32 a7_91
	word32 s10_92
	word32 s2_93
	word32 s3_94
	word32 s4_95
	word32 s5_96
	word32 s6_97
	word32 s7_98
	word32 s8_99
	word32 s9_100
	word32 t0_101
	word32 t1_102
	word32 t3_103
	word32 t4_104
	word32 t5_105
	word32 t6_106
	call a5_18 (retsize: 0;)
		uses: a0:s1_14,a3:a3_88,a4:a4_89,a6:a6_90,a7:a7_91,mstatus:mstatus,ra:ra_21,s0:s0_19,s1:s1_14,s10:s10_92,s11:s11,s2:s2_93,s3:s3_94,s4:s4_95,s5:s5_96,s6:s6_97,s7:s7_98,s8:s8_99,s9:s9_100,t0:t0_101,t1:t1_102,t3:t3_103,t4:t4_104,t5:t5_105,t6:t6_106
		defs: a3:a3_88,a4:a4_89,a5:a5_24,a6:a6_90,a7:a7_91,ra:ra_27,s0:s0_25,s1:s1_26,s10:s10_92,s2:s2_93,s3:s3_94,s4:s4_95,s5:s5_96,s6:s6_97,s7:s7_98,s8:s8_99,s9:s9_100,t0:t0_101,t1:t1_102,t3:t3_103,t4:t4_104,t5:t5_105,t6:t6_106
l2302696E:
	s0_17 = Mem11[s0_19 + 24<i32>:word32]
l23026956:
	branch a1_16 != 0<32> l23026972
l23026972:
	return
l23026958:
l23026962_thunk_bt_gatt_connected:
	bt_gatt_connected(ra, s0, s1_13, s11, mstatus, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8)
	return
notify_connected_exit:


word32 bt_conn_reset_rx_state(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_recv
//      bt_conn_process_tx
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a1 a3 a4 mstatus ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_conn_reset_rx_state_entry:
l2302697C:
	branch CONVERT(Mem0[a0 + 14<i32>:uint16], uint16, word32) == 0<32> l230269A0
l230269A0:
	s1Out = s1
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	mstatusOut = mstatus
	return ra
l23026982:
	word32 a1_18
	word32 a3_20
	word32 a4_21
	word32 mstatus_25
	word32 s0_27
	word32 s1_28
	word32 s2_29
	word32 a0_113
	word32 a5_114
	word32 s3_115
	word32 s4_116
	word32 s5_117
	word32 s6_118
	word32 s8_119
	word32 ra_26 = net_buf_unref(ra, s1, Mem10[a0 + 16<i32>:word32], a1, a4, mstatus, dwLoc10, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_27, out s1_28, out a0_113, out a1_18, out a3_20, out a4_21, out a5_114, out s2_29, out s3_115, out s4_116, out s5_117, out s6_118, out s8_119, out mstatus_25)
	Mem42[s0_27 + 16<i32>:word32] = 0<32>
	Mem43[s0_27 + 14<i32>:word16] = 0<16>
	s1Out = s1_28
	a1Out = a1_18
	a3Out = a3_20
	a4Out = a4_21
	s2Out = s2_29
	mstatusOut = mstatus_25
	return ra_26
bt_conn_reset_rx_state_exit:


word32 conn_cleanup(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_prepare_events
//      bt_conn_process_tx
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
conn_cleanup_entry:
l230269A2:
	word32 s0_13 = a0
	word32 s2_14 = a0 + 52<i32>
	ra_19 = ra
	mstatus_20 = mstatus
	a4_21 = a4
	a3_22 = a3
l230269B2:
	word32 a3_22
	word32 a4_21
	word32 mstatus_20
	word32 ra_19
	word32 a0_25
	word32 a5_30
	word32 s3_325
	word32 s4_326
	word32 a3_323
	word32 s2_324
	word32 a2_322
	word32 a1_26
	word32 a4_29
	net_buf_get(ra_19, s0_13, s2_14, 0<32>, a3_22, a4_21, mstatus_20, dwArg28, dwArgD8, dwArg0118, out a0_25, out a1_26, out a2_322, out a3_323, out a4_29, out a5_30, out s2_324, out s3_325, out s4_326)
	branch a0_25 != 0<32> l230269EE
l230269EE:
	word32 s1_46 = Mem11[a0_25 + 20<i32>:word32]
	branch a0_25 == 0<32> l230269F6
l230269F2:
	word32 s4_348
	word32 s3_347
	word32 s2_346
	word32 a5_345
	word32 a3_344
	word32 s5_349
	word32 s6_350
	s1_46 = tx_free(a0_25, a4_29, a5_30, mstatus_20, s0, ra, dwArgE8, dwArg0128, dwArg0168, out a1_26, out a3_344, out a4_29, out a5_345, out s2_346, out s3_347, out s4_348, out s5_349, out s6_350)
l230269F6:
	word32 s1_351
	word32 a0_352
	word32 a1_353
	word32 a5_354
	word32 s3_355
	word32 s4_356
	word32 s5_357
	word32 s6_358
	word32 s8_359
	ra_19 = net_buf_unref(ra_19, s1_46, s1_46, a1_26, a4_29, mstatus_20, s2, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_13, out s1_351, out a0_352, out a1_353, out a3_22, out a4_21, out a5_354, out s2_14, out s3_355, out s4_356, out s5_357, out s6_358, out s8_359, out mstatus_20)
l230269BE:
	word32 a3_108
	word32 a4_109
	word32 mstatus_112
	word32 s2_329
	word32 s1_327
	word32 a1_328
	bt_conn_reset_rx_state(ra_19, s0_13, a0_25, s0_13, a1_26, a4_29, mstatus_20, dwArg08, dwArg58, dwArg78, dwArg84, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s1_327, out a1_328, out a3_108, out a4_109, out s2_329, out mstatus_112)
	word32 a3_133
	word32 a4_134
	word32 a5_135
	word32 s1_137
	word32 s2_138
	word32 s3_139
	word32 s4_140
	word32 s8_141
	word32 s5_147
	word32 s6_148
	word32 a0_330
	k_delayed_work_submit(0<32>, a3_108, a4_109, mstatus_112, s0, dwLoc08, dwArg14, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s1_137, out a0_330, out a3_133, out a4_134, out a5_135, out s2_138, out s3_139, out s4_140, out s5_147, out s6_148, out s8_141)
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg8 = <invalid>
	word32 stackArg40 = <invalid>
	word32 stackArg112 = <invalid>
	word32 stackArg116 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg188 = <invalid>
	word32 stackArg328 = <invalid>
	word32 stackArg392 = <invalid>
	word32 a5_342
	word32 a4_341
	word32 a3_340
	k_queue_free(ra, a0, a3, a4, a5, mstatus, stackArg8, stackArg40, stackArg112, stackArg116, stackArg152, stackArg188, stackArg328, stackArg392, out a3_340, out a4_341, out a5_342)
	Mem156[Mem11[a5_135 + 92<i32>:word32] + 52<i32>:word32] = 0<32>
	branch a5_135 == 0<32> l230269FE
l230269FE:
	0<32> = dwArg38
	s1Out = s1_137
	a3Out = a3_133
	a4Out = a4_134
	a5Out = a5_135
	s2Out = s2_138
	s3Out = s3_139
	s4Out = s4_140
	s5Out = s5_147
	s6Out = s6_148
	s8Out = s8_141
	mstatusOut = <invalid>
	return <invalid>
l230269DE:
	0<32> = dwArg38
l230269EA_thunk_k_delayed_work_del_timer:
	word32 a3_169
	word32 a4_170
	word32 a5_171
	word32 s2_175
	word32 s3_176
	word32 s4_177
	word32 s5_178
	word32 a0_343
	s1Out = k_delayed_work_del_timer(s1_137, a4_134, a5_135, mstatus_112, dwArg34, dwArgA8, dwArgB8, dwArgE8, dwArg0128, out a0_343, out a3_169, out a4_170, out a5_171, out s2_175, out s3_176, out s4_177, out s5_178)
	a3Out = a3_169
	a4Out = a4_170
	a5Out = a5_171
	s2Out = s2_175
	s3Out = s3_176
	s4Out = s4_177
	s5Out = s5_178
	s6Out = s6_179
	s8Out = s8_180
	mstatusOut = <invalid>
	return <invalid>
conn_cleanup_exit:


word32 tx_notify(word32 s0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tx_complete_work
//      bt_conn_recv
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tx_notify_entry:
l23026A0A:
l23026A16:
	word32 a5_19
	word32 a2_167
	word32 a4_168
	word32 a0_16 = irq_lock(a4, mstatus, out a2_167, out a4_168, out a5_19)
	word32 s1_22 = Mem21[s0 + 32<i32>:word32]
	branch s0 != 0<32> l23026A2E
l23026A2E:
	word32 s0_24 = Mem21[a5_19:word32]
	word32 s1_26 = Mem21[a3 + 36<i32>:word32]
	Mem27[a5_19 + 32<i32>:word32] = s1_26
	branch s0_24 != a3 l23026A3A
l23026A38:
	Mem28[a5_19 + 36<i32>:word32] = s1_26
l23026A3A:
	word32 a4_34
	word32 a5_35
	irq_unlock(a3, mstatus, out a4_34, out a5_35)
	word32 a4_49
	word32 a5_50
	word32 s2_55
	call s2_55 (retsize: 0;)
		uses: a0:tx_free(Mem38[a1_37 + 8<i32>:word32], a4_34, a5_35, mstatus, dwLoc1C, a1_37, dwArgD8, dwArg0118, dwArg0158, out a1_161, out a3_162, out a4_49, out a5_50, out s2_55, out s3_163, out s4_164, out s5_165, out s6_166),a4:a4_49,a5:a5_50,mstatus:mstatus,Stack +0004:dwLoc1C,Stack +0084:a1_37,Stack +00F8:dwArgD8,Stack +0138:dwArg0118,Stack +0178:dwArg0158
		defs: a1:a1_71,a3:a3_73,a4:a4_74,s0:s0_78
l23026A20:
l23026A2A_thunk_irq_unlock:
	word32 a4_99
	word32 a5_160
	word32 a3_98 = irq_unlock(a3, mstatus, out a4_99, out a5_160)
	s1Out = s1_22
	a0Out = a0_16
	a1Out = a1
	a3Out = a3_98
	a4Out = a4_99
	return s0
tx_notify_exit:


void tx_complete_work(word32 s0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tx_complete_work_entry:
l23026A56:
l23026A5A_thunk_tx_notify:
	word32 s1_37
	word32 a0_38
	word32 a1_39
	word32 a3_40
	word32 a4_41
	tx_notify(s0, a1, a3, a4, mstatus, dwArgD8, dwArg0118, dwArg0158, out s1_37, out a0_38, out a1_39, out a3_40, out a4_41)
	return
tx_complete_work_exit:


word32 bt_conn_get_pkts()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_num_completed_packets
// MayUse: 
// LiveOut: a0
// Trashed: a0
// Preserved: sp
bt_conn_get_pkts_entry:
l23026A5E:
	return 0x4200D3DC<32>
bt_conn_get_pkts_exit:


word32 notify_le_param_updated(word32 ra, word32 a0, word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      le_conn_update_complete
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a3 a4 mstatus
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s1 s4 s8 t3 tp
// Preserved: s0 sp
notify_le_param_updated_entry:
l23026A68:
	word32 s0_11 = a0
	branch atomic_test_bit(a0 + 4<i32>, 9<32>) == 0<32> l23026AAA
l23026A80:
	word32 a5_18 = CONVERT(Mem14[a0 + 134<i32>:uint16], uint16, word32)
	a4 = CONVERT(Mem14[a0 + 136<i32>:uint16], uint16, word32)
	branch a5_18 <u a4 l23026AAA
l23026A8C:
	a4 = CONVERT(Mem14[a0 + 138<i32>:uint16], uint16, word32)
	branch a4 <u a5_18 l23026AAA
l23026A94:
	a4 = Mem14[a0 + 140<i32>:int32]
	branch a4 != Mem14[a0 + 144<i32>:int32] l23026AAA
l23026AA0:
	word32 s4_127
	word32 a1_124
	word32 a5_126
	word32 a2_125
	word32 a0_123
	atomic_and(a0, -513<i32>, a3, a4, mstatus, out a0_123, out a1_124, out a2_125, out a3, out a4, out a5_126, out s4_127)
l23026AAA:
	word32 a5_37 = 0x4200E000<32>
	word32 s1_39 = Mem14[0x4200E1A8<32>:int32]
l23026AB2:
	branch s1_39 != 0<32> l23026ABE
l23026ABE:
	word32 a4_59
	word32 s1_43 = Mem14[a5_37 + 12<i32>:word32]
	branch a5_37 == 0<32> l23026AD2
l23026AC2:
	word32 s4_65
	word32 s8_66
	call a5_37 (retsize: 0;)
		uses: a0:s0_44,a1:CONVERT(Mem14[s0_44 + 134<i32>:uint16], uint16, word32),a2:CONVERT(Mem14[s0_44 + 140<i32>:uint16], uint16, word32),a3:CONVERT(Mem14[s0_44 + 142<i32>:uint16], uint16, word32),a4:a4_59,mstatus:mstatus_50,ra:ra_49,s0:s0_44,s1:s1_43,s4:s4_65,s8:s8_66
		defs: a3:a3_62,a4:a4_59,a5:a5_58,mstatus:mstatus_64,ra:ra_57,s0:s0_55,s1:s1_53,s4:s4_65,s8:s8_66
	a4 = a4_59
l23026AD2:
	s1_39 = Mem14[s1_43 + 24<i32>:word32]
l23026AB4:
	a4Out = a4
	mstatusOut = mstatus
	return a3
notify_le_param_updated_exit:


word32 le_param_req(word32 ra, word32 a0, word32 a1, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      le_conn_param_req
//      l2cap_recv
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a0 a3 a4 a5 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
le_param_req_entry:
l23026AD6:
	word32 s1_27
	word32 s3_109 = a0
	word32 s2_107 = a1
	word32 a3_23
	word32 a4_100
	word32 a5_101
	word32 a0_19 = bt_le_conn_params_valid(a1, out a3_23, out a4_100, out a5_101)
	branch a0_19 != 0<32> l23026B00
l23026B00:
	a5_101 = 0x4200E000<32>
	s0 = Mem17[0x4200E1A8<32>:int32]
	s1_27 = a0_19
l23026B0A:
	branch s0 == 0<32> l23026AF0
l23026B0C:
	s0 = Mem17[a5_101 + 8<i32>:word32]
	branch a5_101 != 0<32> l23026B14
l23026B14:
	word32 a0_41
	call a5_101 (retsize: 0;)
		uses: a0:s3_34,a1:s2_32,ra:ra_36,s0:s0_31,s1:s1_37,s2:s2_32,s3:s3_34
		defs: a0:a0_41,a3:a3_54,a4:a4_53,a5:a5_52,ra:ra_44,s0:s0_45,s1:s1_46,s2:s2_43,s3:s3_40
	branch a0_41 == 0<32> l23026AEE
l23026B1C:
	branch bt_le_conn_params_valid(s2_107, out a3_23, out a4_100, out a5_101) != 0<32> l23026B10
l23026B24:
l23026B10:
	s0 = Mem17[s0 + 24<i32>:word32]
l23026AEE:
	s1_27 = 0<32>
l23026AF0:
	s0Out = s0
	s1Out = s1_27
	a0Out = s1_27
	a3Out = a3_23
	a4Out = a4_100
	a5Out = a5_101
	s2Out = s2_107
	s3Out = s3_109
	return ra
le_param_req_exit:


word32 le_check_valid_conn()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_disable
// MayUse: 
// LiveOut: a0
// Trashed: a0 a2 a5
// Preserved: s0 sp
le_check_valid_conn_entry:
l23026B26:
	word32 a5_12 = 1<32>
	branch atomic_get(0x420122C0<32>) != 0<32> l23026B4C
l23026B40:
	a5_12 = CONVERT(atomic_get(0x42012360<32>) != 0<32>, bool, word32)
l23026B4C:
	return a5_12
le_check_valid_conn_exit:


word32 bt_conn_identity_resolved(word32 ra, word32 a0, ptr32 & s0Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_ident_addr_info
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: ra s0 s2 s3
// Trashed: a0 a1 a2 a5 a6 ra s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
bt_conn_identity_resolved_entry:
l23026B56:
	word32 s0_16 = a0
	word32 s2_17 = a0 + 126<i32>
	branch CONVERT(Mem13[a0 + 3<i32>:byte], byte, word32) == 0<32> l23026B72
l23026B6E:
	s2_17 = a0 + 119<i32>
l23026B72:
	word32 a5_19 = 0x4200E000<32>
	word32 s1_21 = Mem13[0x4200E1A8<32>:int32]
	word32 s3_23 = a0 + 112<i32>
l23026B7E:
	branch s1_21 != 0<32> l23026B8E
l23026B8E:
	word32 s1_27 = Mem13[a5_19 + 16<i32>:word32]
	branch a5_19 == 0<32> l23026B9A
l23026B92:
	call a5_19 (retsize: 0;)
		uses: a0:s0_32,a1:s2_30,a2:s3_28,ra:ra_34,s0:s0_32,s1:s1_27,s2:s2_30,s3:s3_28
		defs: a5:a5_42,ra:ra_39,s0:s0_37,s1:s1_40,s2:s2_38,s3:s3_41
l23026B9A:
	s1_21 = Mem13[s1_27 + 24<i32>:word32]
l23026B80:
	s0Out = s0_16
	s2Out = s2_17
	s3Out = s3_23
	return ra
bt_conn_identity_resolved_exit:


word32 bt_conn_le_start_encryption(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_security_request
//      smp_pairing_random
//      bt_smp_start_security
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_le_start_encryption_entry:
l23026B9E:
	word32 a3_37
	word32 a4_38
	word32 a5_39
	word32 mstatus_42
	word32 s1_45
	word32 s2_46
	word32 s3_47
	word32 s4_48
	word32 s5_49
	word32 s6_50
	word32 s0_297
	word32 a1_298
	word32 s8_299
	word32 ra_139 = bt_hci_cmd_create(ra, 0x1C<32>, a3, a4, a5, mstatus, dwArg74, dwArg88, dwArgC8, dwArgE8, out s0_297, out s1_45, out a1_298, out a3_37, out a4_38, out a5_39, out s2_46, out s3_47, out s4_48, out s5_49, out s6_50, out s8_299, out mstatus_42)
	branch false l23026C34
l23026C34:
	0<32> = dwArgA8
	s0Out = s1
	a0Out = -55<i32>
	a3Out = a3_37
	a4Out = a4_38
	a5Out = a5_39
	s2Out = s2_46
	s3Out = s3_47
	s5Out = s5_49
	mstatusOut = mstatus_42
	return ra_139
l23026BC6:
	word32 a1_300
	word32 a5_301
	word32 a0_71 = net_buf_simple_add(0x2000021<32>, 0x1C<32>, a4_38, out a1_300, out a5_301)
	word32 a5_74 = CONVERT(Mem26[s6_50:uint16], uint16, word32)
	Mem77[a0_71:byte] = SLICE(a5_74, byte, 0)
	Mem79[a0_71 + 1<i32>:byte] = SLICE(a5_74 >>u 8<i32>, byte, 0)
	word32 a2_302
	word32 a3_303
	word32 a4_304
	word32 a5_305
	word32 a6_306
	word32 a7_307
	memcpy(a0_71 + 2<32>, s5_49, 8<32>, out a2_302, out a3_303, out a4_304, out a5_305, out a6_306, out a7_307)
	word32 a2_308
	word32 a3_309
	word32 a4_310
	word32 a5_311
	word32 a6_312
	word32 a7_313
	memcpy(a0_71 + 10<i32>, s4_48, 2<32>, out a2_308, out a3_309, out a4_310, out a5_311, out a6_312, out a7_313)
	word32 a2_314
	word32 a5_315
	word32 a6_316
	word32 a7_317
	word32 a4_115
	word32 a3_120
	memcpy(a0_71 + 0xC<32>, s3_47, s1_45, out a2_314, out a3_120, out a4_115, out a5_315, out a6_316, out a7_317)
	word32 a5_128 = 0xF<32>
	branch s1_45 >u 0xF<32> l23026C16
l23026C08:
	word32 t1_318
	word32 a0_319
	word32 a1_320
	word32 a2_321
	ra_139 = memset(ra_139, a0_71 + 0xC<32> + s1_45, 0<32>, 0x10<32> - s1_45, out t1_318, out a0_319, out a1_320, out a2_321, out a3_120, out a4_115, out a5_128)
l23026C16:
	0<32> = dwArgA8
l23026C30_thunk_bt_hci_cmd_send_sync:
	word32 a0_163
	word32 a3_166
	word32 a4_167
	word32 a5_168
	word32 mstatus_171
	word32 s0_173
	word32 s2_177
	word32 s3_178
	word32 s5_180
	word32 s1_322
	word32 a1_323
	word32 a2_324
	word32 s4_325
	word32 s6_326
	word32 s7_327
	word32 s8_328
	word32 s9_329
	word32 s10_330
	word32 s11_331
	word32 ra_172 = bt_hci_cmd_send_sync(ra_139, s1, 0x2000019<32>, 0x2000019<32>, a3_120, a4_115, a5_128, s5_49, mstatus_42, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg54, s1, dwArg74, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_173, out s1_322, out a0_163, out a1_323, out a2_324, out a3_166, out a4_167, out a5_168, out s2_177, out s3_178, out s4_325, out s5_180, out s6_326, out s7_327, out s8_328, out s9_329, out s10_330, out s11_331, out mstatus_171)
	s0Out = s0_173
	a0Out = a0_163
	a3Out = a3_166
	a4Out = a4_167
	a5Out = a5_168
	s2Out = s2_177
	s3Out = s3_178
	s5Out = s5_180
	mstatusOut = mstatus_171
	return ra_172
bt_conn_le_start_encryption_exit:


word32 bt_conn_security_changed(word32 ra, word32 a0, word32 a1, word32 dwArg28, word32 dwArg38, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_encrypt_key_refresh_complete
//      hci_encrypt_change
//      smp_pairing_complete
//      bt_smp_request_ltk
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0028:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a3 a4 ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 s2 tp
// Preserved: s0 sp
bt_conn_security_changed_entry:
l23026C4C:
	word32 a5_19 = 0x4200E000<32>
	word32 s1_18 = Mem6[0x4200E1A8<32>:int32]
	word32 s0_15 = a0
	word32 s2_17 = a1
l23026C62:
	branch s1_18 != 0<32> l23026C88
l23026C88:
	word32 a3_40
	word32 a4_37
	word32 s1_21 = Mem13[a5_19 + 20<i32>:word32]
	branch a5_19 == 0<32> l23026C96
l23026C8C:
	call a5_19 (retsize: 0;)
		uses: a0:s0_22,a1:CONVERT(Mem13[s0_22 + 9<i32>:byte], byte, word32),a2:s2_24,a3:a3_40,a4:a4_37,ra:ra_27,s0:s0_22,s1:s1_21,s2:s2_24
		defs: a0:a0_35,a3:a3_40,a4:a4_37,a5:a5_30,ra:ra_34,s0:s0_32,s1:s1_31,s2:s2_33
	a3 = a3_40
	a4 = a4_37
l23026C96:
	s1_18 = Mem13[s1_21 + 24<i32>:word32]
l23026C64:
	branch s2_17 != 0<32> l23026C9A
l23026C68:
	a4 = CONVERT(Mem13[s0_15 + 9<i32>:byte], byte, word32)
	branch a4 <=u 1<32> l23026C9A
l23026C9A:
	0<32> = dwArg38
	s1Out = s1_18
	a0Out = a0
	a3Out = a3
	a4Out = a4
	s2Out = s2_17
	return <invalid>
l23026C72:
	word32 a0_52 = CONVERT(Mem13[s0_15 + 8<i32>:byte], byte, word32)
	0<32> = dwArg38
	word32 a1_53 = s0_15 + 112<i32>
l23026C84_thunk_bt_keys_update_usage:
	word32 a0_58
	word32 a3_61
	word32 a4_62
	word32 s2_65
	s1Out = bt_keys_update_usage(a0_52, a1_53, dwArg28, out a0_58, out a3_61, out a4_62, out s2_65)
	a0Out = a0_58
	a3Out = a3_61
	a4Out = a4_62
	s2Out = s2_65
	return <invalid>
bt_conn_security_changed_exit:


word32 bt_conn_set_security(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_recv
//      ble_security
//      bt_gatt_connected
//      att_error_rsp
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_conn_set_security_entry:
l23026CA6:
	word32 a4_193 = CONVERT(Mem0[a0 + 13<i32>:byte], byte, word32)
	branch a4_193 != 4<32> l23026D14
l23026D14:
	s1Out = s1
	a0Out = -57<i32>
	a3Out = a3
	a4Out = a4_193
	a5Out = 4<32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	mstatusOut = mstatus
	return ra
l23026CB0:
	word32 a5_15 = CONVERT(Mem14[a0 + 9<i32>:byte], byte, word32)
	word32 a0_17 = 0<32>
	branch a5_15 >=u a1 l23026CFE
l23026CC4:
	a5_15 = CONVERT(Mem14[a0 + 10<i32>:byte], byte, word32)
	branch a5_15 >=u a1 l23026CFE
l23026CCC:
	word32 a3_31
	word32 s4_35
	word32 s1_34
	branch CONVERT(SLICE(a1, byte, 0), byte, int32) >= 0<32> l23026D08
l23026D08:
	word32 a0_267
	word32 a1_268
	word32 a2_269
	word32 a4_270
	word32 a5_271
	s1_34 = atomic_and(a0, 0xFF0007FF<32>, a3, a4_193, mstatus, out a0_267, out a1_268, out a2_269, out a3_31, out a4_270, out a5_271, out s4_35)
l23026CDC:
	word32 a0_272
	word32 a1_273
	word32 a2_274
	word32 a4_275
	word32 a5_276
	s1_34 = atomic_or(a0, 0xFFF800<32>, a3, a4_193, mstatus, out a0_272, out a1_273, out a2_274, out a3_31, out a4_275, out a5_276, out s4_35)
l23026CE6:
	Mem53[a0 + 10<i32>:byte] = SLICE(s1_34 & 127<i32>, byte, 0)
	word32 s0_73
	ra = bt_smp_start_security(ra, a0, a0, a3_31, s2, s3, s4_35, mstatus, dwLoc10, s0, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg5C, dwArg64, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_73, out s1, out a0_17, out a3, out a4_193, out a5_15, out s2, out s3, out s5, out mstatus)
	branch a0_17 == 0<32> l23026CFE
l23026CF6:
	a5_15 = CONVERT(Mem53[s0_73 + 9<i32>:byte], byte, word32)
	Mem94[s0_73 + 10<i32>:byte] = SLICE(a5_15, byte, 0)
l23026CFE:
	s1Out = s1
	a0Out = a0_17
	a3Out = a3
	a4Out = a4_193
	a5Out = a5_15
	s2Out = s2
	s3Out = s3
	s5Out = s5
	mstatusOut = mstatus
	return ra
bt_conn_set_security_exit:


word32 bt_conn_get_security(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_check_perm
//      update_ccc
//      bt_gatt_connected
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
bt_conn_get_security_entry:
l23026D1A:
	return CONVERT(Mem0[a0 + 9<i32>:byte], byte, word32)
bt_conn_get_security_exit:


void bt_conn_cb_register(word32 a0, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_init
//      bl_ble_sync_start
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
bt_conn_cb_register_entry:
l23026D20:
	Mem8[a0:word32] = Mem0[a4:word32]
	Mem9[a4 + 24<i32>:word32] = a0
	return
bt_conn_cb_register_exit:


word32 bt_conn_recv(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg60, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA4, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_recv_entry:
l23026D30:
	word32 a4_180
	word32 a1_177
	word32 ra_184
	word32 s1_185
	word32 a5_101
	word32 a4_122
	word32 a1_119
	word32 s1_125
	word32 ra_124
	word32 a0_21
	word32 a1_22
	word32 s1_30
	word32 a4_235
	word32 a3_234
	word32 s0_102 = tx_notify(a0, a1, a3, a4, mstatus, dwArgB8, dwArgF8, dwArg0138, out s1_30, out a0_21, out a1_22, out a3_234, out a4_235)
	branch a2 == 1<32> l23026D9C
l23026D9C:
	word32 a0_106
	word32 a5_46 = CONVERT(Mem13[s0_102 + 14<i32>:uint16], uint16, word32)
	branch a5_46 != 0<32> l23026DC4
l23026DC4:
	word32 s2_47 = CONVERT(Mem13[s1_30 + 12<i32>:uint16], uint16, word32)
	branch a5_46 >=u s2_47 l23026DD6
l23026DD6:
	s0_102 = Mem13[a0_21 + 16<i32>:word32]
	word32 a4_51
	word32 a0_50 = net_buf_simple_tailroom(a0_21 + 8<32>, out a4_51)
	branch a0_50 >=u s2_47 l23026DEC
l23026DEC:
	word32 s0_53 = Mem13[a0_50 + 16<i32>:word32]
	word32 s1_55 = Mem13[a1_22 + 8<i32>:word32]
	word32 a2_733
	word32 a3_734
	word32 a4_735
	word32 a5_736
	word32 a1_58 = net_buf_simple_add_mem(a0_50 + 8<32>, a1_22, CONVERT(Mem13[s1_30 + 12<i32>:uint16], uint16, word32), a4_51, out a2_733, out a3_734, out a4_735, out a5_736)
	word32 a4_72 = CONVERT(Mem13[s1_55 + 12<i32>:uint16], uint16, word32)
	Mem75[s0_53 + 14<i32>:word16] = SLICE(CONVERT(Mem13[s0_53 + 14<i32>:uint16], uint16, word32) - a4_72, word16, 0)
	word32 s1_87
	word32 a0_737
	word32 a1_738
	word32 a5_739
	word32 s2_740
	word32 s3_741
	word32 s4_742
	word32 s5_743
	word32 s6_744
	word32 s8_745
	ra = net_buf_unref(ra, s1_55, s1_55, a1_58, a4_72, mstatus, dwLoc20, dwLoc1C, s2, dwArg08, dwArg58, a2, dwArg78, dwArg84, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_102, out s1_87, out a0_737, out a1_738, out a3_234, out a4_235, out a5_739, out s2_740, out s3_741, out s4_742, out s5_743, out s6_744, out s8_745, out mstatus)
	a5_101 = CONVERT(Mem75[s0_102 + 14<i32>:uint16], uint16, word32)
	branch a5_101 != 0<32> l23026D90
l23026E14:
	s0_102 = Mem75[s1_87 + 16<i32>:word32]
	Mem103[s0_102 + 14<i32>:word16] = 0<16>
	Mem104[s0_102 + 16<i32>:word32] = 0<32>
l23026DE2:
	a0_106 = 0x230768C4<32>
l23026DCC:
	a0_106 = 0x230768AC<32>
l23026DA2:
	a0_106 = 0x2307688C<32>
l23026DAA:
	word32 a7_703
	word32 a5_702
	word32 a3_701
	word32 a2_700
	word32 a0_699
	word32 s2_704
	word32 s3_705
	word32 s4_706
	word32 s5_707
	word32 s6_708
	word32 s7_709
	word32 s8_710
	word32 s9_711
	word32 s10_712
	word32 s11_713
	word32 t4_714
	ra_124 = printf(ra, a0_106, a3_234, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_125, out a0_699, out a1_119, out a2_700, out a3_701, out a4_122, out a5_702, out a7_703, out s2_704, out s3_705, out s4_706, out s5_707, out s6_708, out s7_709, out s8_710, out s9_711, out s10_712, out s11_713, out t4_714)
l23026D4C:
	branch a2 != 2<32> l23026E46
l23026E46:
	word32 s11_670
	word32 t4_671
	word32 s9_668
	word32 s10_669
	word32 s7_666
	word32 s8_667
	word32 s5_664
	word32 s6_665
	word32 s3_662
	word32 s4_663
	word32 a7_660
	word32 s2_661
	word32 a3_658
	word32 a5_659
	word32 a0_656
	word32 a2_657
	ra_124 = printf(ra, 0x230768F0<32>, a3_234, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_125, out a0_656, out a1_119, out a2_657, out a3_658, out a4_122, out a5_659, out a7_660, out s2_661, out s3_662, out s4_663, out s5_664, out s6_665, out s7_666, out s8_667, out s9_668, out s10_669, out s11_670, out t4_671)
l23026DAE:
	word32 a3_715
	word32 s2_716
	ra_184 = bt_conn_reset_rx_state(ra_124, s0_102, s1_125, s0_102, a1_119, a4_122, mstatus, dwLoc08, dwArg48, s1, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s1_185, out a1_177, out a3_715, out a4_180, out s2_716, out mstatus)
l23026D52:
	word32 s1_199 = Mem13[a4_235 + 8<i32>:word32]
	word32 s2_203 = CONVERT(Mem13[a4_235 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem13[a4_235:byte], byte, word32)
	branch CONVERT(Mem13[s0_102 + 14<i32>:uint16], uint16, word32) == 0<32> l23026D7A
l23026D68:
	word32 a1_210
	word32 a4_213
	word32 s1_216
	word32 a1_688
	word32 s11_686
	word32 t4_687
	word32 s9_684
	word32 s10_685
	word32 s7_682
	word32 s8_683
	word32 s5_680
	word32 s6_681
	word32 s3_678
	word32 s4_679
	word32 a7_676
	word32 s2_677
	word32 a3_674
	word32 a5_675
	word32 a0_672
	word32 a2_673
	ra = bt_conn_reset_rx_state(printf(ra, 0x2307686C<32>, a3_234, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_216, out a0_672, out a1_210, out a2_673, out a3_674, out a4_213, out a5_675, out a7_676, out s2_677, out s3_678, out s4_679, out s5_680, out s6_681, out s7_682, out s8_683, out s9_684, out s10_685, out s11_686, out t4_687), s0_102, s1_216, s0_102, a1_210, a4_213, mstatus, dwLoc08, dwArg48, s1, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s1_199, out a1_688, out a3_234, out a4_235, out s2_203, out mstatus)
l23026D7A:
	word32 a5_260 = s2_203 - CONVERT(Mem13[s1_199 + 12<i32>:uint16], uint16, word32) + 4<32> << 16<i32>
	Mem263[s0_102 + 14<i32>:word16] = SLICE(a5_260 >>u 16<i32>, word16, 0)
	a5_101 = a5_260 >>u 16<i32>
	branch a5_260 >>u 16<i32> == 0<32> l23026E1E
l23026E1E:
	word32 s1_266 = Mem265[a5_101 + 8<i32>:word32]
	branch (CONVERT(Mem265[a5_101 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem265[a5_101:byte], byte, word32)) + 4<i32> == CONVERT(Mem265[s1_266 + 12<i32>:uint16], uint16, word32) l23026E56
l23026E56:
l23026E64_thunk_bt_l2cap_recv:
	word32 a3_292
	word32 a4_293
	word32 mstatus_297
	word32 s0_299
	word32 ra_298 = bt_l2cap_recv(ra, s0_102, s1_266, a3_234, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg28, dwArg38, dwArg60, a2, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA4, dwArgAC, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out s0_299, out a3_292, out a4_293, out mstatus_297)
	s0Out = s0_299
	a3Out = a3_292
	a4Out = a4_293
	mstatusOut = mstatus_297
	return ra_298
l23026E38:
	word32 a0_717
	word32 a2_718
	word32 a3_719
	word32 a5_720
	word32 a7_721
	word32 s2_722
	word32 s3_723
	word32 s4_724
	word32 s5_725
	word32 s6_726
	word32 s7_727
	word32 s8_728
	word32 s9_729
	word32 s10_730
	word32 s11_731
	word32 t4_732
	ra_184 = printf(ra, 0x23076910<32>, a3_234, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_185, out a0_717, out a1_177, out a2_718, out a3_719, out a4_180, out a5_720, out a7_721, out s2_722, out s3_723, out s4_724, out s5_725, out s6_726, out s7_727, out s8_728, out s9_729, out s10_730, out s11_731, out t4_732)
l23026DB4:
l23026DC0_thunk_net_buf_unref:
	word32 a3_358
	word32 a4_359
	word32 mstatus_363
	word32 s0_365
	word32 s8_698
	word32 s5_696
	word32 s6_697
	word32 s3_694
	word32 s4_695
	word32 a5_692
	word32 s2_693
	word32 a0_690
	word32 a1_691
	word32 s1_689
	word32 ra_364 = net_buf_unref(ra_184, s1_185, s1_185, a1_177, a4_180, mstatus, dwArg00, dwArg04, dwArg08, dwArg28, dwArg78, dwArg84, dwArg98, dwArgA4, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out s0_365, out s1_689, out a0_690, out a1_691, out a3_358, out a4_359, out a5_692, out s2_693, out s3_694, out s4_695, out s5_696, out s6_697, out s8_698, out mstatus_363)
	s0Out = s0_365
	a3Out = a3_358
	a4Out = a4_359
	mstatusOut = mstatus_363
	return ra_364
l23026D8E:
	Mem380[s1_199 + 16<i32>:word32] = s0_102
l23026D90:
	s0Out = s0_102
	a3Out = a3_234
	a4Out = a4_235
	mstatusOut = mstatus
	return ra
bt_conn_recv_exit:


word32 bt_conn_send_cb(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg74, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_l2cap_send_cb
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s2 s3 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_send_cb_entry:
l23026E68:
	word32 s9_120
	word32 s7_119
	word32 s6_107
	word32 s5_106
	word32 a1_174
	word32 a0_121
	word32 a3_176
	word32 a4_177
	word32 a5_178
	word32 ra_116
	word32 s1_102
	word32 s2_103
	word32 s3_104
	word32 a5_16 = 4<32>
	word32 s0_18 = a1
	branch CONVERT(Mem13[a0 + 13<i32>:byte], byte, word32) == 4<32> l23026E98
l23026E98:
	word32 s2_23 = a0
	branch a2 == 0<32> l23026F20
l23026F20:
	Mem24[a1 + 20<i32>:word32] = 0<32>
l23026EA0:
	word32 a0_30
	word32 a3_33
	word32 s3_41
	word32 s1_456
	word32 a1_457
	word32 a2_458
	word32 a5_459
	word32 s4_460
	k_queue_get(0x4200DD24<32>, 0xFFFFFFFF<32>, a3, a4, mstatus, a2, a3, dwArgC8, dwArg0108, out s1_456, out a0_30, out a1_457, out a2_458, out a3_33, out a4, out a5_459, out s2_23, out s3_41, out s4_460)
	s0_18 = a3
	branch a0_30 != 0<32> l23026EDA
l23026EDA:
	a5_16 = CONVERT(Mem22[s2_23 + 13<i32>:byte], byte, word32)
	branch a5_16 == s3_41 l23026EFC
l23026EFC:
	Mem55[dwArg74 + 4<i32>:word32] = a0_30
	Mem56[a3_33 + 8<i32>:word32] = a0_30
	Mem57[a0_30 + 12<i32>:word32] = 0<32>
	Mem58[a0_30 + 20<i32>:word32] = a3
l23026F06:
	word32 a4_73
	word32 a5_74
	word32 s0_504
	word32 a0_505
	word32 a2_506
	word32 s4_507
	word32 s10_508
	word32 s11_509
	ra_116 = k_sem_give(ra, 0x4201A464<32>, net_buf_put(ra, s0_18, s2_23 + 52<i32>, s0_18, a4, a5_16, mstatus, dwArgB8, dwArgF8, dwArg0138, out a4_73, out a5_74), a4_73, a5_74, mstatus, s0, dwLoc18, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArgD8, dwArg0118, dwArg0158, out s0_504, out s1_102, out a0_505, out a1_174, out a2_506, out a3_176, out a4_177, out a5_178, out s2_103, out s3_104, out s4_507, out s5_106, out s6_107, out s7_119, out s9_120, out s10_508, out s11_509)
	a0_121 = 0<32>
l23026EE2:
	word32 a1_127
	word32 a4_130
	word32 s1_133
	word32 a4_151
	word32 a5_152
	word32 s1_158
	word32 a0_479
	word32 a2_480
	word32 a3_481
	word32 a5_482
	word32 a7_483
	word32 s2_484
	word32 s3_485
	word32 s4_486
	word32 s5_487
	word32 s6_488
	word32 s8_489
	word32 s10_490
	word32 s11_491
	word32 t4_492
	word32 s0_493
	word32 a0_494
	word32 a1_495
	word32 a3_496
	word32 s2_497
	word32 s3_498
	word32 s4_499
	word32 s5_500
	word32 s6_501
	word32 s8_502
	ra_116 = net_buf_unref(printf(ra, 0x23076964<32>, a3_33, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_133, out a0_479, out a1_127, out a2_480, out a3_481, out a4_130, out a5_482, out a7_483, out s2_484, out s3_485, out s4_486, out s5_487, out s6_488, out s7_119, out s8_489, out s9_120, out s10_490, out s11_491, out t4_492), s1_133, a3, a1_127, a4_130, mstatus, dwLoc30, a2, dwLoc28, dwLoc08, dwArg48, a3, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_493, out s1_158, out a0_494, out a1_495, out a3_496, out a4_151, out a5_152, out s2_497, out s3_498, out s4_499, out s5_500, out s6_501, out s8_502, out mstatus)
	word32 s4_503
	s1_102 = tx_free(s1_158, a4_151, a5_152, mstatus, a2, a3, dwArgC8, dwArg0108, dwArg0148, out a1_174, out a3_176, out a4_177, out a5_178, out s2_103, out s3_104, out s4_503, out s5_106, out s6_107)
l23026EB6:
	word32 a1_201
	word32 a4_204
	word32 s1_207
	word32 a0_461
	word32 a2_462
	word32 a3_463
	word32 a5_464
	word32 a7_465
	word32 s2_466
	word32 s3_467
	word32 s4_468
	word32 s5_469
	word32 s6_470
	word32 s8_471
	word32 s10_472
	word32 s11_473
	word32 t4_474
	word32 s0_475
	word32 a0_476
	word32 s4_477
	word32 s8_478
	ra_116 = net_buf_unref(printf(ra, 0x23076944<32>, a3_33, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_207, out a0_461, out a1_201, out a2_462, out a3_463, out a4_204, out a5_464, out a7_465, out s2_466, out s3_467, out s4_468, out s5_469, out s6_470, out s7_119, out s8_471, out s9_120, out s10_472, out s11_473, out t4_474), s1_207, a3, a1_201, a4_204, mstatus, dwLoc30, a2, dwLoc28, dwLoc08, dwArg48, a3, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_475, out s1_102, out a0_476, out a1_174, out a3_176, out a4_177, out a5_178, out s2_103, out s3_104, out s4_477, out s5_106, out s6_107, out s8_478, out mstatus)
	a0_121 = -55<i32>
l23026E80:
	word32 a1_252
	word32 a4_255
	word32 s1_258
	word32 a0_438
	word32 a2_439
	word32 a3_440
	word32 a5_441
	word32 a7_442
	word32 s2_443
	word32 s3_444
	word32 s4_445
	word32 s5_446
	word32 s6_447
	word32 s8_448
	word32 s10_449
	word32 s11_450
	word32 t4_451
	word32 s0_452
	word32 a0_453
	word32 s4_454
	word32 s8_455
	ra_116 = net_buf_unref(printf(ra, 0x23076930<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_258, out a0_438, out a1_252, out a2_439, out a3_440, out a4_255, out a5_441, out a7_442, out s2_443, out s3_444, out s4_445, out s5_446, out s6_447, out s7_119, out s8_448, out s9_120, out s10_449, out s11_450, out t4_451), s1_258, a1, a1_252, a4_255, mstatus, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_452, out s1_102, out a0_453, out a1_174, out a3_176, out a4_177, out a5_178, out s2_103, out s3_104, out s4_454, out s5_106, out s6_107, out s8_455, out mstatus)
l23026E92:
	a0_121 = -57<i32>
l23026ECC:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_102
	a0Out = a0_121
	a1Out = a1_174
	a3Out = a3_176
	a4Out = a4_177
	a5Out = a5_178
	s2Out = s2_103
	s3Out = s3_104
	s5Out = s5_106
	s6Out = s6_107
	s7Out = s7_119
	s9Out = s9_120
	mstatusOut = mstatus
	return ra_116
bt_conn_send_cb_exit:


word32 bt_conn_prepare_events(word32 ra, word32 s1, word32 a0, word32 s2, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_tx_thread
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a4 a5 mstatus ra s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_prepare_events_entry:
l23026F26:
	Mem21[0x4200D50C<32>:word32] = 0<32>
	word32 a5_117
	word32 a4_100 = k_poll_event_init(1<32>, 0<32>, 0x4200D504<32>, out a5_117)
	word32 a3_101 = 0x4200D504<32>
	word32 s2_127 = a0
	word32 s1_109 = 1<32>
	branch atomic_get(0x420122C0<32>) == 0<32> l23026F8C
l23026F64:
	branch CONVERT(Mem21[0x42012285<32>:byte], byte, word32) == 0<32> l23026FC6
l23026FC6:
	word32 a0_37
	word32 a4_41
	word32 a1_348
	word32 a2_349
	word32 a5_350
	word32 s4_351
	atomic_and(0x42012278<32>, -65<i32>, 0x4200D504<32>, a4_100, mstatus, out a0_37, out a1_348, out a2_349, out a3_101, out a4_41, out a5_350, out s4_351)
	branch (a0_37 & 64<i32>) == 0<32> l23026F6A
l23026FD8:
	word32 s6_368
	word32 s8_369
	word32 s4_366
	word32 s5_367
	word32 s3_365
	word32 s1_364
	ra = conn_cleanup(ra, 0x42012278<32>, 0x42012278<32>, a3_101, a4_41, a0, mstatus, s2, dwLoc0C, dwLoc08, dwArg08, dwArg14, dwArg18, dwArg38, dwArg48, dwArg58, s3, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s1_364, out a3_101, out a4_100, out a5_117, out s2_127, out s3_365, out s4_366, out s5_367, out s6_368, out s8_369, out mstatus)
	s1_109 = 1<32>
l23026F6A:
	a4_100 = CONVERT(Mem21[0x42012285<32>:byte], byte, word32)
	a5_117 = 4<32>
	s1_109 = 1<32>
	branch a4_100 != 4<32> l23026F8C
l23026F76:
	a4_100 = k_poll_event_init(3<32>, 0<32>, 0x420122AC<32>, out a5_117)
	Mem89[a0 + 32<i32>:byte] = 1<8>
	a3_101 = 0x420122AC<32>
	s1_109 = 2<32>
l23026F8C:
	branch atomic_get(0x42012360<32>) == 0<32> l23026FB6
l23026F96:
	branch CONVERT(Mem94[0x42012325<32>:byte], byte, word32) != 0<32> l23026FE4
l23026F9C:
	word32 a0_103
	word32 a3_106
	word32 a4_107
	word32 a1_352
	word32 a2_353
	word32 a5_354
	word32 s4_355
	s1_109 = atomic_and(0x42012278<32>, -65<i32>, a3_101, a4_100, mstatus, out a0_103, out a1_352, out a2_353, out a3_106, out a4_107, out a5_354, out s4_355)
	branch (a0_103 & 64<i32>) == 0<32> l23026FE4
l23026FE4:
	a4_100 = CONVERT(Mem94[0x42012325<32>:byte], byte, word32)
	a5_117 = 4<32>
	branch a4_100 != 4<32> l23026FB6
l23026FEE:
	word32 a5_363
	a4_100 = k_poll_event_init(3<32>, 0<32>, 0x4201234C<32>, out a5_363)
	Mem136[s2_127 + (s1_109 + 0x14<32>) + 12<i32>:byte] = 1<8>
	s1_109 = s1_109 + 1<32>
	a5_117 = 1<32>
l23026FAE:
	word32 a3_356
	word32 s2_357
	word32 s3_358
	word32 s5_360
	word32 s4_359
	word32 s6_361
	word32 s8_362
	ra = conn_cleanup(ra, 0x42012278<32>, 0x42012318<32>, a3_106, a4_107, s2_127, mstatus, s2, dwLoc0C, dwLoc08, dwArg08, dwArg14, dwArg18, dwArg38, dwArg48, dwArg58, s3, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s1_109, out a3_356, out a4_100, out a5_117, out s2_357, out s3_358, out s4_359, out s5_360, out s6_361, out s8_362, out mstatus)
l23026FB6:
	s0Out = 0x42012278<32>
	s1Out = s1_109
	a4Out = a4_100
	a5Out = a5_117
	mstatusOut = mstatus
	return ra
bt_conn_prepare_events_exit:


word32 bt_conn_add_le(word32 ra, word32 mstatus, word32 dwArg74, word32 dwArgA8, word32 dwArgC8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      enh_conn_complete
//      bt_conn_create_le
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0074:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_add_le_entry:
l2302700E:
	word32 s2_126
	word32 s3_174 = a1
	word32 a0_23 = atomic_get(0x420122C0<32>)
	word32 s1_173 = 0x42012278<32>
	branch a0_23 == 0<32> l23027044
l23027036:
	s2_126 = 0<32>
	branch atomic_get(0x42012360<32>) != 0<32> l230270B6
l23027042:
	a0_23 = 1<32>
l23027044:
	word32 s0_31 = a0_23 + 160<i32>
	word32 a3_41
	word32 a4_42
	word32 t1_196
	word32 a0_197
	word32 a1_198
	word32 a2_199
	word32 a5_200
	ra = memset(ra, s0_31 + 0x42012278<32>, 0<32>, 160<i32>, out t1_196, out a0_197, out a1_198, out a2_199, out a3_41, out a4_42, out a5_200)
	word32 a3_58
	word32 a4_59
	word32 a3_77
	word32 a4_78
	word32 a0_201
	word32 a5_202
	word32 s5_203
	word32 a5_204
	s1_173 = k_work_init(s0_31 + 40<i32> + k_delayed_work_init(ra, s0_31, s0_31 + 0x420122C4<32>, a3_41, a4_42, mstatus, dwArg74, dwArgA8, dwArgC8, dwArg0108, out a0_201, out a3_58, out a4_59, out a5_202, out s2_126, out s3_174, out s5_203), a3_58, a4_59, mstatus, out a3_77, out a4_78, out a5_204)
	word32 s4_94
	word32 a0_205
	word32 a3_206
	word32 a4_207
	word32 s0_93 = atomic_set(s1_173, 1<32>, a3_77, a4_78, mstatus, out a0_205, out a3_206, out a4_207, out s4_94)
	Mem98[s2_126 + 8<i32>:byte] = SLICE(s4_94, byte, 0)
	word32 a2_208
	word32 a5_209
	word32 a6_210
	word32 a7_211
	memcpy(s0_93 + 112<i32> + s1_173, s3_174, 7<32>, out a2_208, out a3, out a4, out a5_209, out a6_210, out a7_211)
	Mem116[s2_126 + 9<i32>:byte] = 1<8>
	Mem117[s2_126 + 10<i32>:byte] = 1<8>
	Mem118[s2_126 + 2<i32>:byte] = 1<8>
	Mem121[s2_126 + 136<i32>:word32] = 0x280018<32>
l230270B6:
	s1Out = s1_173
	a0Out = s2_126
	a3Out = a3
	a4Out = a4
	s2Out = s2_126
	s3Out = s3_174
	s4Out = dwArg04
	return ra
bt_conn_add_le_exit:


word32 bt_conn_set_state(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgA8, word32 dwArgBC, word32 dwArgD8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_disconn_complete
//      le_adv_report
//      enh_conn_complete
//      bt_conn_disconnect
//      bt_conn_create_le
//      bt_conn_init
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00BC:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_set_state_entry:
l230270C8:
	word32 s1_13 = CONVERT(Mem11[a0 + 13<i32>:byte], byte, word32)
	branch s1_13 != a1 l230270F0
l230270F0:
	word32 a0_22
	Mem16[a0 + 13<i32>:byte] = SLICE(a1, byte, 0)
	word32 s2_17 = a1
	branch s1_13 == 0<32> l2302711A
l2302711A:
	word32 a4_248
	s1_13 = atomic_inc(a0, a3, a4, mstatus, out a0_22, out a3, out a4_248)
l230270FA:
	a0_22 = a0
	branch s1_13 == 3<32> l23027124
l23027124:
	word32 a4_30 = CONVERT(Mem16[a0 + 2<i32>:byte], byte, word32)
	a0_22 = a0
	branch a4_30 != 1<32> l23027100
l2302712E:
	word32 a2_249
	word32 a4_250
	word32 a5_251
	word32 s3_252
	word32 s4_253
	word32 s5_254
	word32 s6_255
	word32 s8_256
	s1_13 = k_delayed_work_cancel(a0 + 76<i32>, a3, a4_30, mstatus, dwArg24, dwArg28, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_22, out a1, out a2_249, out a3, out a4_250, out a5_251, out s2_17, out s3_252, out s4_253, out s5_254, out s6_255, out s8_256)
l23027100:
	word32 a5_57 = CONVERT(Mem16[a0 + 13<i32>:byte], byte, word32)
	branch a5_57 >u 5<32> l2302727C
l2302727C:
	0<32> = dwArg38
l23027290_thunk_printf:
	word32 a5_71
	word32 a3_75
	word32 a4_76
	word32 s1_79
	word32 s2_82
	word32 s3_83
	word32 s4_84
	word32 s5_85
	word32 s6_86
	word32 s8_88
	word32 a0_257
	word32 a1_258
	word32 a2_259
	word32 a7_260
	word32 s7_261
	word32 s9_262
	word32 s10_263
	word32 s11_264
	word32 t4_265
	word32 ra_78 = printf(ra, 0x2307699C<32>, a3, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_79, out a0_257, out a1_258, out a2_259, out a3_75, out a4_76, out a5_71, out a7_260, out s2_82, out s3_83, out s4_84, out s5_85, out s6_86, out s7_261, out s8_88, out s9_262, out s10_263, out s11_264, out t4_265)
	s0Out = s0
	s1Out = s1_79
	a3Out = a3_75
	a4Out = a4_76
	a5Out = a5_71
	s2Out = s2_82
	s3Out = s3_83
	s4Out = s4_84
	s5Out = s5_85
	s6Out = s6_86
	s8Out = s8_88
	mstatusOut = mstatus
	return ra_78
l2302710A:
	word32 a5_96 = Mem16[(a5_57 << 2<i32>) + 0x230767EC<32>:word32]
	word32 ra_102
	word32 s0_103
	word32 s1_104
	word32 s2_105
	word32 a5_110
	word32 a4_111
	word32 mstatus_112
	word32 a3_113
	word32 a6_114
	word32 s3_116
	word32 s4_117
	word32 s5_118
	word32 s6_119
	word32 s8_120
	word32 t1_122
	word32 t5_125
	word32 t6_126
	call a5_96 (retsize: 0;)
		uses: a0:a0_98,a1:a1_99,a3:a3_69,a4:0x230767EC<32>,a5:a5_96,a6:a6_114,mstatus:mstatus,ra:ra,s0:a0,s1:s1_97,s2:s2_63,Stack +0018:dwArg08,Stack +0020:dwArg10,Stack +0024:dwArg14,Stack +0034:dwArg24,Stack +0038:dwArg28,Stack +0048:dwArg38,Stack +00A8:dwArg98,Stack +00B8:dwArgA8,Stack +00CC:dwArgBC,Stack +00E8:dwArgD8,Stack +0128:dwArg0118,t1:t1_122,t5:t5_125,t6:t6_126
		defs: a3:a3_113,a4:a4_111,a5:a5_110,a6:a6_114,mstatus:mstatus_112,ra:ra_102,s0:s0_103,s1:s1_104,s2:s2_105,s3:s3_116,s4:s4_117,s5:s5_118,s6:s6_119,s8:s8_120,t1:t1_122,t5:t5_125,t6:t6_126
	s0Out = s0_103
	s1Out = s1_104
	a3Out = a3_113
	a4Out = a4_111
	a5Out = a5_110
	s2Out = s2_105
	s3Out = s3_116
	s4Out = s4_117
	s5Out = s5_118
	s6Out = s6_119
	s8Out = s8_120
	mstatusOut = mstatus_112
	return ra_102
l230270DA:
	0<32> = dwArg38
l230270EC_thunk_printf:
	word32 a5_138
	word32 a3_142
	word32 a4_143
	word32 s1_146
	word32 s2_149
	word32 s3_150
	word32 s4_151
	word32 s5_152
	word32 s6_153
	word32 s8_155
	word32 a0_239
	word32 a1_240
	word32 a2_241
	word32 a7_242
	word32 s7_243
	word32 s9_244
	word32 s10_245
	word32 s11_246
	word32 t4_247
	word32 ra_145 = printf(ra, 0x2307698C<32>, a3, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_146, out a0_239, out a1_240, out a2_241, out a3_142, out a4_143, out a5_138, out a7_242, out s2_149, out s3_150, out s4_151, out s5_152, out s6_153, out s7_243, out s8_155, out s9_244, out s10_245, out s11_246, out t4_247)
	s0Out = s0
	s1Out = s1_146
	a3Out = a3_142
	a4Out = a4_143
	a5Out = a5_138
	s2Out = s2_149
	s3Out = s3_150
	s4Out = s4_151
	s5Out = s5_152
	s6Out = s6_153
	s8Out = s8_155
	mstatusOut = mstatus
	return ra_145
bt_conn_set_state_exit:


word32 bt_conn_lookup_handle(word32 a0, word32 a3, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      le_remote_feat_complete
//      le_conn_update_complete
//      hci_num_completed_packets
//      hci_encrypt_key_refresh_complete
//      hci_encrypt_change
//      hci_disconn_complete
//      le_ltk_request
//      le_conn_param_req
//      bt_recv
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bt_conn_lookup_handle_entry:
l23027294:
	word32 s2_32
	word32 s2_27
	word32 s0_10 = 0x420122C0<32>
	word32 s1_106 = 0x42012278<32>
	branch atomic_get(0x420122C0<32>) == 0<32> l230272D2
l230272BA:
	a4 = 1<32>
	branch (CONVERT(Mem19[0x42012285<32>:byte], byte, word32) + 0xFFFFFFFC<32> & 255<i32>) >u 1<32> l230272D2
l230272CA:
	branch CONVERT(Mem19[0x42012278<32>:uint16], uint16, word32) == a0 l23027314
l23027314:
	s2_27 = 0<32>
l230272D2:
	s0_10 = 0x42012360<32>
	s2_32 = 0<32>
	branch atomic_get(0x42012360<32>) == 0<32> l23027304
l230272E0:
	a4 = 1<32>
	branch (CONVERT(Mem19[0x42012325<32>:byte], byte, word32) + 0xFFFFFFFC<32> & 255<i32>) >u 1<32> l23027304
l230272F0:
	branch CONVERT(Mem19[0x42012318<32>:uint16], uint16, word32) != a0 l23027304
l230272F8:
	s2_27 = 160<i32>
l230272FC:
	s2_32 = s2_27 + 0x42012278<32>
	word32 a0_119
	s1_106 = atomic_inc(s0_10, a3, 1<32>, mstatus, out a0_119, out a3, out a4)
l23027304:
	s1Out = s1_106
	a0Out = s2_32
	a3Out = a3
	a4Out = a4
	s2Out = s2_32
	s3Out = a0
	s4Out = dwArg04
	return s0_10
bt_conn_lookup_handle_exit:


word32 bt_conn_addr_le_cmp(word32 a0, word32 a1, word32 dwArg10, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_lookup_addr_le
//      bt_conn_lookup_state_le
//      find_ccc_cfg
//      disconnected_cb
//      update_ccc
//      bt_gatt_subscribe
//      bt_gatt_unsubscribe
//      bt_gatt_notification
//      bt_gatt_connected
//      bt_gatt_disconnected
// MayUse:  a0:[0..31] a1:[0..31] Stack +0010:[0..31]
// LiveOut: a0 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
bt_conn_addr_le_cmp_entry:
l23027318:
	word32 a5_18
	word32 a3_19
	word32 a4_20
	word32 a1_68
	word32 a2_69
	word32 a0_17 = memcmp(a1, a0 + 112<i32>, 7<32>, out a1_68, out a2_69, out a3_19, out a4_20, out a5_18)
	branch a0_17 == 0<32> l23027350
l23027350:
	a0Out = a0_17
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_18
	return <invalid>
l23027332:
	word32 a1_29 = a0 + 126<i32>
	branch CONVERT(Mem16[a0 + 3<i32>:byte], byte, word32) == 0<32> l23027342
l2302733E:
	a1_29 = a0 + 119<i32>
l23027342:
l2302734C_thunk_memcmp:
	word32 a5_41
	word32 a3_42
	word32 a4_43
	word32 a1_70
	word32 a2_71
	a0Out = memcmp(a1, a1_29, dwArg10, out a1_70, out a2_71, out a3_42, out a4_43, out a5_41)
	a3Out = a3_42
	a4Out = a4_43
	a5Out = a5_41
	return <invalid>
bt_conn_addr_le_cmp_exit:


word32 bt_conn_lookup_state_le.part.7(word32 a0, word32 a1, word32 a3, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_lookup_state_le
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bt_conn_lookup_state_le.part.7_entry:
l2302735A:
	word32 s1_179
	word32 s0_71
	word32 a5_44
	branch atomic_get(0x420122C0<32>) == 0<32> l230273A8
l23027382:
	a4 = CONVERT(Mem20[0x4201227A<32>:byte], byte, word32)
	a5 = 1<32>
	branch a4 != 1<32> l230273A8
l2302738C:
	branch a0 == 0<32> l230273A0
l23027394:
	word32 a0_30
	bt_conn_addr_le_cmp(0x42012278<32>, a0, dwLoc10, out a0_30, out a3, out a4, out a5)
	branch a0_30 != 0<32> l230273A8
l230273A0:
	a5 = CONVERT(Mem20[0x42012285<32>:byte], byte, word32)
	branch a5 == a1 l230273E6
l230273E6:
	a5_44 = 0<32>
l230273A8:
	s1_179 = 0x42012000<32>
	branch atomic_get(0x42012360<32>) == 0<32> l230273E2
l230273B6:
	a4 = CONVERT(Mem20[0x4201231A<32>:byte], byte, word32)
	a5 = 1<32>
	branch a4 != 1<32> l230273E2
l230273C0:
	branch a0 != 0<32> l230273D6
l230273D6:
	word32 a0_58
	s1_179 = bt_conn_addr_le_cmp(0x42012318<32>, a0, dwLoc10, out a0_58, out a3, out a4, out a5)
	branch a0_58 == 0<32> l230273C4
l230273C4:
	a5 = CONVERT(Mem20[0x42012325<32>:byte], byte, word32)
	branch a5 != a1 l230273E2
l230273E2:
	s0_71 = 0<32>
l230273CC:
	a5_44 = 160<i32>
l230273EC:
	s0_71 = a5_44 + 0x42012278<32>
	word32 a0_206
	s1_179 = atomic_inc(s0_71, a3, a4, mstatus, out a0_206, out a3, out a4)
l230273F2:
	s1Out = s1_179
	a0Out = s0_71
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = a0
	s3Out = 0x42012000<32>
	s4Out = dwArg04
	s8Out = s4
	return s1
bt_conn_lookup_state_le.part.7_exit:


word32 bt_conn_lookup_addr_le(word32 a0, word32 a1, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_unpair
//      ble_select_conn
//      ble_disconnect
//      bt_conn_create_le
//      disconnected_cb
//      notify_cb
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 s0 s1 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
bt_conn_lookup_addr_le_entry:
l23027404:
	word32 s1_154
	word32 s0_41
	branch atomic_get(0x420122C0<32>) == 0<32> l2302744E
l23027430:
	a4 = CONVERT(Mem23[0x4201227A<32>:byte], byte, word32)
	branch a4 != 1<32> l2302744E
l2302743A:
	branch CONVERT(Mem23[0x42012280<32>:byte], byte, word32) != a0 l2302744E
l23027442:
	word32 a0_33
	word32 a5_176
	bt_conn_addr_le_cmp(0x42012278<32>, a1, dwLoc10, out a0_33, out a3, out a4, out a5_176)
	branch a0_33 == 0<32> l23027494
l23027494:
	s0_41 = 0x42012278<32>
l2302744E:
	s1_154 = 0x42012360<32>
	branch atomic_get(0x42012360<32>) == 0<32> l2302749A
l2302745A:
	a4 = CONVERT(Mem23[0x4201231A<32>:byte], byte, word32)
	branch a4 != 1<32> l2302749A
l23027464:
	branch CONVERT(Mem23[0x42012320<32>:byte], byte, word32) != a0 l2302749A
l2302746C:
	s0_41 = 0x42012318<32>
	word32 a0_56
	word32 a5_177
	s1_154 = bt_conn_addr_le_cmp(0x42012318<32>, a1, dwLoc10, out a0_56, out a3, out a4, out a5_177)
	branch a0_56 != 0<32> l2302749A
l2302749A:
	s0_41 = 0<32>
l2302747A:
	word32 a0_178
	s1_154 = atomic_inc(s0_41, a3, a4, mstatus, out a0_178, out a3, out a4)
l23027480:
	s1Out = s1_154
	a0Out = s0_41
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	s2Out = 0x42012278<32>
	s3Out = 0x42012278<32>
	s4Out = dwArg04
	s5Out = a0
	s8Out = s4
	return s1
bt_conn_lookup_addr_le_exit:


word32 bt_conn_lookup_state_le(word32 a0, word32 a1, word32 a3, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      find_pending_connect
//      bt_id_add
//      bt_id_del
//      bt_le_scan_update
//      le_adv_report
//      notify_cb
//      sc_indicate
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bt_conn_lookup_state_le_entry:
l2302749E:
l2302749E_thunk_bt_conn_lookup_state_le.part.7:
	word32 a0_7
	word32 s1_11
	word32 s2_12
	word32 s3_13
	word32 s4_14
	word32 s8_15
	word32 a4_17
	word32 a5_18
	word32 a3_20
	word32 s0_10 = bt_conn_lookup_state_le.part.7(a0, a1, a3, mstatus, out s1_11, out a0_7, out a3_20, out a4_17, out a5_18, out s2_12, out s3_13, out s4_14, out s8_15)
	s1Out = s1_11
	a0Out = a0_7
	a3Out = a3_20
	a4Out = a4_17
	a5Out = a5_18
	s2Out = s2_12
	s3Out = s3_13
	s4Out = s4_14
	s8Out = s8_15
	return s0_10
bt_conn_lookup_state_le_exit:


word32 bt_conn_foreach(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s4, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg48, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_disconnect_all
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0048:[0..31]
// LiveOut: ra s3
// Trashed: a0 a1 a2 a5 a6 ra s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
bt_conn_foreach_entry:
l230274A2:
	word32 s1_32 = 0x42012000<32>
	word32 s4_10 = a0
	word32 s2_22 = a1
	word32 s3_24 = a2
	word32 s0_26 = 0x42012278<32>
	branch atomic_get(0x420122C0<32>) == 0<32> l230274DE
l230274CC:
	branch (CONVERT(Mem20[0x4201227A<32>:byte], byte, word32) & a0) == 0<32> l230274DE
l230274D6:
	word32 a5_41
	word32 t1_44
	call a1 (retsize: 0;)
		uses: a0:0x42012278<32>,a1:a2,a2:a2,a5:a5_41,ra:ra,s0:0x42012278<32>,s1:0x42012000<32>,s2:a1,s3:a2,s4:a0,t1:t1_44
		defs: a5:a5_41,ra:ra_38,s0:s0_35,s1:s1_32,s2:s2_36,s3:s3_37,s4:s4_33,t1:t1_44
l230274DE:
	branch atomic_get(s0_26 + 232<i32>) == 0<32> l2302750A
l230274E8:
	branch (CONVERT(Mem20[s0_26 + 162<i32>:byte], byte, word32) & s4_10) == 0<32> l2302750A
l2302750A:
	s3Out = s3_24
	return ra
l230274F2:
	word32 s3_83
	word32 ra_84
	word32 a5_87
	word32 t1_90
	call s2_22 (retsize: 0;)
		uses: a0:s0_46 + 160<i32>,a1:s3_68,a2:dwArg48,a5:a5_87,a6:dwArg28,ra:ra_76,s0:s1,s1:s1_75,s2:s2_70,s3:s3_68,s4:dwArg04,s8:s4,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +0048:dwArg48,t1:t1_90,t3:dwArg00
		defs: a5:a5_87,ra:ra_84,s3:s3_83,t1:t1_90
	s3Out = s3_83
	return ra_84
bt_conn_foreach_exit:


word32 bt_conn_disconnect_all(word32 ra, word32 s1, word32 s4, word32 dwArg08, word32 dwArg28, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_unpair
// MayUse:  ra:[0..31] s1:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0028:[0..31]
// LiveOut: ra s3
// Trashed: a0 a1 a2 a5 a6 ra s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
bt_conn_disconnect_all_entry:
l2302751A:
	word32 s3_20
	word32 ra_26 = bt_conn_foreach(ra, s1, 7<32>, 0x230276F0<32>, fp + 0xFFFFFFEF<32>, s4, dwLoc20, dwLoc1C, dwArg08, dwArg28, out s3_20)
	s3Out = s3_20
	return ra_26
bt_conn_disconnect_all_exit:


word32 bt_conn_unref(word32 s0, word32 a3, word32 a4, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      le_remote_feat_complete
//      le_conn_update_complete
//      hci_num_completed_packets
//      hci_encrypt_key_refresh_complete
//      hci_encrypt_change
//      hci_disconn_complete
//      bt_unpair
//      bt_id_add
//      bt_id_del
//      bt_le_scan_update
//      le_adv_report
//      le_ltk_request
//      le_conn_param_req
//      enh_conn_complete
//      bt_recv
//      ble_select_conn
//      ble_disconnect
//      disconnected_cb
//      notify_cb
//      sc_indicate
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: sp
bt_conn_unref_entry:
l2302753A:
l2302753E_thunk_atomic_dec:
	word32 a3_11
	word32 a4_12
	word32 a5_13
	word32 s1_14 = atomic_dec(s0, a3, a4, mstatus, out a3_11, out a4_12, out a5_13)
	a3Out = a3_11
	a4Out = a4_12
	a5Out = a5_13
	return s1_14
bt_conn_unref_exit:


word32 bt_conn_get_dst(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      connected
//      disconnected
//      security_changed
//      auth_passkey_display
//      auth_passkey_entry
//      auth_passkey_confirm
//      auth_cancel
//      auth_pairing_confirm
//      auth_pairing_complete
//      auth_pairing_failed
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
bt_conn_get_dst_entry:
l23027542:
	return a0 + 112<i32>
bt_conn_get_dst_exit:


word32 bt_conn_get_info(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_get_remote_dev_info
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
bt_conn_get_info_entry:
l23027548:
	Mem7[a1:byte] = SLICE(CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32), byte, 0)
	Mem9[a1 + 1<i32>:byte] = SLICE(CONVERT(Mem7[a0 + 3<i32>:byte], byte, word32), byte, 0)
	Mem11[a1 + 2<i32>:byte] = SLICE(CONVERT(Mem9[a0 + 8<i32>:byte], byte, word32), byte, 0)
	branch CONVERT(Mem11[a0 + 2<i32>:byte], byte, word32) != 1<32> l230275BA
l230275BA:
	return a3
l2302756A:
	Mem16[a0 + 120<i32>:word32] = a1
	Mem23[CONVERT(Mem16[a0 + 8<i32>:byte], byte, word32) + 0x4200D363<32>:word32] = a1
	word32 a3_24 = CONVERT(Mem23[a0 + 3<i32>:byte], byte, word32)
	branch a3_24 != 0<32> l230275B4
l230275B4:
	Mem27[a0 + 138<i32>:word32] = a1
	Mem28[a0 + 135<i32>:word32] = a1
l23027594:
	Mem29[a0 + 131<i32>:word32] = a1
	Mem30[a0 + 142<i32>:word32] = a1
l23027598:
	Mem35[a1 + 20<i32>:word16] = SLICE(CONVERT(Mem32[a0 + 134<i32>:uint16], uint16, word32), word16, 0)
	Mem37[a1 + 22<i32>:word16] = SLICE(CONVERT(Mem35[a0 + 140<i32>:uint16], uint16, word32), word16, 0)
	Mem40[a1 + 24<i32>:word16] = SLICE(CONVERT(Mem37[a0 + 142<i32>:uint16], uint16, word32), word16, 0)
	return a3_24
bt_conn_get_info_exit:


word32 bt_conn_get_remote_dev_info(word32 a0, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_get_all_conn_info
// MayUse:  a0:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
bt_conn_get_remote_dev_info_entry:
l230275BE:
	word32 a0_19 = atomic_get(0x420122C0<32>)
	word32 s0_21 = a0_19
	branch a0_19 == 0<32> l230275F0
l230275E4:
	a3 = bt_conn_get_info(0x42012278<32>, a0)
	s0_21 = 1<32>
l230275F0:
	branch atomic_get(0x42012360<32>) == 0<32> l2302760C
l230275FA:
	s0_21 = s0_21 + 1<32>
	a3 = bt_conn_get_info(0x42012318<32>, s0_21 + 0x1C<32> + a0)
l2302760C:
	a3Out = a3
	return s0_21
bt_conn_get_remote_dev_info_exit:


word32 bt_conn_disconnect(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg60, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg94, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      update_sec_level
//      bt_unpair
//      ble_disconnect
//      disconnect_all
// MayUse:  a0:[0..31] a1:[0..7] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_disconnect_entry:
l2302761C:
	word32 s1_109
	word32 a4_105 = 4<32>
	word32 a5_18 = CONVERT(Mem13[a0 + 13<i32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	branch a5_18 >u 4<32> l2302764C
l2302764C:
	s1_109 = -57<i32>
l23027638:
	a4_105 = 0x23076804<32>
	word32 a5_24 = Mem13[(a5_18 << 2<i32>) + 0x23076804<32>:word32]
	s2 = a1
	s0 = a0
	switch (a5_24) { l23027660 l23027674 l2302768E l230276AC l23027670 }
l230276AC:
	word32 s1_520
	word32 a1_521
	word32 a5_522
	word32 s3_523
	word32 s4_524
	word32 s6_525
	word32 s8_526
	ra = bt_hci_cmd_create(ra, 3<32>, a3, 0x23076804<32>, a5_24, mstatus, dwArg74, dwArg88, dwArgC8, dwArgE8, out s0, out s1_520, out a1_521, out a3, out a4_105, out a5_522, out s2, out s3_523, out s4_524, out s5, out s6_525, out s8_526, out mstatus)
	s3 = 1030<i32>
	s1_109 = -55<i32>
	branch false l23027650
l230276BE:
	word32 a1_527
	word32 a5_528
	word32 a0_60 = net_buf_simple_add(0x40E<32>, 3<32>, a4_105, out a1_527, out a5_528)
	word32 a5_63 = CONVERT(Mem13[s0:uint16], uint16, word32)
	Mem65[a0_60 + 2<i32>:byte] = SLICE(s2, byte, 0)
	Mem66[a0_60:byte] = SLICE(a5_63, byte, 0)
	Mem68[a0_60 + 1<i32>:byte] = SLICE(a5_63 >>u 8<i32>, byte, 0)
	word32 a0_70
	word32 s1_529
	word32 a5_530
	word32 s4_531
	ra = bt_hci_cmd_send(ra, s0, 1030<i32>, 1030<i32>, a3, a4_105, a5_63 >>u 8<i32>, s2, mstatus, dwLoc1C, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg58, s3, s1, dwArg74, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s1_529, out a0_70, out a3, out a4_105, out a5_530, out s2, out s3, out s4_531, out s5, out mstatus)
	s1_109 = a0_70
	branch a0_70 != 0<32> l23027650
l230276E6:
	word32 a5_532
	word32 s4_533
	word32 s6_534
	word32 s8_535
	ra = bt_conn_set_state(ra, a0_70, s0, 5<32>, a3, a4_105, mstatus, s2, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArg9C, dwArgB8, dwArgF8, out s0, out s1_109, out a3, out a4_105, out a5_532, out s2, out s3, out s4_533, out s5, out s6_534, out s8_535, out mstatus)
l2302768E:
	word32 a3_133
	word32 a4_134
	word32 a5_135
	word32 s2_137
	word32 a0_512
	word32 a1_513
	word32 a2_514
	word32 s3_515
	word32 s4_516
	word32 s5_517
	word32 s6_518
	word32 s8_519
	k_delayed_work_cancel(a0 + 76<i32>, a3, 0x23076804<32>, mstatus, dwArg14, dwArg18, dwArg88, dwArg98, dwArgC8, dwArg0108, out a0_512, out a1_513, out a2_514, out a3_133, out a4_134, out a5_135, out s2_137, out s3_515, out s4_516, out s5_517, out s6_518, out s8_519)
l230276A8_thunk_bt_hci_cmd_send:
	word32 a0_162
	word32 a3_165
	word32 a4_166
	word32 s1_171
	word32 s2_174
	word32 s3_175
	word32 s4_176
	word32 s5_177
	word32 mstatus_189
	word32 a5_536
	word32 ra_170 = bt_hci_cmd_send(ra, a0, 0x200000E<32>, 0<32>, a3_133, a4_134, a5_135, s2_137, mstatus, dwArg04, dwArg08, dwArg18, dwArg38, dwArg50, dwArg54, dwArg60, s3, s1, dwArg78, dwArg84, dwArg88, dwArg94, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, dwArg0178, out s1_171, out a0_162, out a3_165, out a4_166, out a5_536, out s2_174, out s3_175, out s4_176, out s5_177, out mstatus_189)
	s0Out = a0
	s1Out = s1_171
	a0Out = a0_162
	a3Out = a3_165
	a4Out = a4_166
	s2Out = s2_174
	s3Out = s3_175
	s4Out = s4_176
	s5Out = s5_177
	mstatusOut = mstatus_189
	return ra_170
l23027674:
	Mem190[a0 + 12<i32>:byte] = SLICE(a1, byte, 0)
	word32 a3_195
	word32 a4_196
	word32 mstatus_216
	word32 s0_217
	word32 s1_504
	word32 a5_505
	word32 s2_506
	word32 s3_507
	word32 s4_508
	word32 s5_509
	word32 s6_510
	word32 s8_511
	word32 ra_199 = bt_conn_set_state(ra, s1, a0, 0<32>, a3, 0x23076804<32>, mstatus, s2, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArg9C, dwArgB8, dwArgF8, out s0_217, out s1_504, out a3_195, out a4_196, out a5_505, out s2_506, out s3_507, out s4_508, out s5_509, out s6_510, out s8_511, out mstatus_216)
l2302768A_thunk_bt_le_adv_stop:
	word32 a3_229
	word32 a4_230
	word32 mstatus_234
	word32 s1_236
	word32 s2_239
	word32 s3_240
	word32 s4_241
	word32 s5_242
	word32 a0_254
	word32 ra_235 = bt_le_adv_stop(ra_199, s0_217, a3_195, a4_196, mstatus_216, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s1_236, out a0_254, out a3_229, out a4_230, out s2_239, out s3_240, out s4_241, out s5_242, out mstatus_234)
	s0Out = s0_217
	s1Out = s1_236
	a0Out = a0_254
	a3Out = a3_229
	a4Out = a4_230
	s2Out = s2_239
	s3Out = s3_240
	s4Out = s4_241
	s5Out = s5_242
	mstatusOut = mstatus_234
	return ra_235
l23027660:
	Mem255[a0 + 12<i32>:byte] = SLICE(a1, byte, 0)
	word32 a3_260
	word32 a4_261
	word32 a5_262
	word32 s2_268
	word32 s3_269
	word32 mstatus_281
	word32 s0_282
	word32 s1_494
	word32 s4_495
	word32 s5_496
	word32 s6_497
	word32 s8_498
	word32 s1_499
	word32 a0_500
	word32 s4_501
	word32 s6_502
	word32 s8_503
	ra = bt_le_scan_update(bt_conn_set_state(ra, s1, a0, 0<32>, a3, 0x23076804<32>, mstatus, s2, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArg9C, dwArgB8, dwArgF8, out s0_282, out s1_494, out a3_260, out a4_261, out a5_262, out s2_268, out s3_269, out s4_495, out s5_496, out s6_497, out s8_498, out mstatus_281), s0_282, a3_260, a4_261, a5_262, s2_268, s3_269, mstatus_281, dwLoc20, dwLoc1C, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, dwArg4C, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0, out s1_499, out a0_500, out a3, out a4_105, out s2, out s3, out s4_501, out s5, out s6_502, out s8_503, out mstatus)
l23027670:
	s1_109 = 0<32>
l23027650:
	s0Out = s0
	s1Out = s1_109
	a0Out = s1_109
	a3Out = a3
	a4Out = a4_105
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	mstatusOut = mstatus
	return ra
bt_conn_disconnect_exit:


void disconnect_all(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg60, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg94, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
disconnect_all_entry:
l230276F0:
	word32 a3_5 = CONVERT(Mem0[a0 + 8<i32>:byte], byte, word32)
	branch a3_5 != CONVERT(Mem0[a1:byte], byte, word32) l2302770C
l230276FC:
	branch CONVERT(Mem0[a0 + 13<i32>:byte], byte, word32) != 4<32> l2302770C
l2302770C:
	return
l23027706:
l23027708_thunk_bt_conn_disconnect:
	word32 mstatus_181
	word32 s4_179
	word32 s5_180
	word32 s3_178
	word32 s2_177
	word32 a4_176
	word32 a3_175
	word32 a0_174
	word32 s1_173
	word32 s0_172
	bt_conn_disconnect(ra, s0, s1, a0, 0x13<32>, a3_5, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg60, dwArg74, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg8C, dwArg94, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, dwArg0178, out s0_172, out s1_173, out a0_174, out a3_175, out a4_176, out s2_177, out s3_178, out s4_179, out s5_180, out mstatus_181)
	return
disconnect_all_exit:


word32 bt_conn_create_le(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_connect
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_create_le_entry:
l2302770E:
	word32 s0_151
	byte bLoc18_289 = SLICE(s2, byte, 0)
	word24 nLoc17_301 = SLICE(s2, word24, 8)
	branch atomic_test_bit(0x4200D3C4<32>, 1<32>) != 0<32> l23027730
l23027730:
	word32 a5_497
	word32 a4_496
	branch bt_le_conn_params_valid(a1, out a3, out a4_496, out a5_497) == 0<32> l2302772C
l23027738:
	branch atomic_test_bit(0x4200D3C4<32>, 0xB<32>) != 0<32> l2302772C
l23027744:
	word32 a0_36 = atomic_test_bit(0x4200D3C4<32>, 0xF<32>)
	branch a0_36 != 0<32> l2302772C
l23027750:
	word32 a4_132
	word32 s1_138
	word32 a0_41
	word32 s1_45
	word32 s2_46
	word32 a4_499
	word32 a2_498
	word32 s4_501
	word32 s3_500
	word32 s8_503
	word32 s5_502
	bt_conn_lookup_addr_le(a0_36, a0, mstatus, out s1_45, out a0_41, out a2_498, out a3, out a4_499, out s2_46, out s3_500, out s4_501, out s5_502, out s8_503)
	s0_151 = a0_41
	word32 dwLoc18_302 = s2
	branch a0_41 == 0<32> l230277E6
l230277E6:
	branch (CONVERT(Mem18[s2_46:byte], byte, word32) + 0xFFFFFFFE<32> & 255<i32>) >u 1<32> l23027818
l23027818:
	word32 a0_63
	word32 s1_522
	word32 s2_523
	word32 s3_524
	word32 s4_525
	word32 s5_526
	word32 s8_527
	ra = bt_lookup_id_addr(ra, a0_41, s2_46, out s1_522, out a0_63, out s2_523, out s3_524, out s4_525, out s5_526, out s8_527)
	word32 a2_528
	word32 a3_529
	word32 a4_530
	word32 a5_531
	word32 a6_532
	word32 a7_533
	memcpy(fp + 0xFFFFFFE8<32>, a0_63, 7<32>, out a2_528, out a3_529, out a4_530, out a5_531, out a6_532, out a7_533)
l230277F6:
	word32 a2_534
	word32 a3_535
	word32 a4_536
	word32 a5_537
	word32 a6_538
	word32 a7_539
	memcpy(fp + 0xFFFFFFE8<32>, s2_46, 7<32>, out a2_534, out a3_535, out a4_536, out a5_537, out a6_538, out a7_539)
	dwLoc18_302 = SEQ(nLoc17_301, SLICE(CONVERT(bLoc18_289, byte, word32) + 0xFFFFFFFE<32>, byte, 0)) (alias)
l2302780A:
	word32 a0_128
	word32 s2_555
	word32 s3_556
	word32 s4_557
	ra = bt_conn_add_le(ra, mstatus, dwArg54, dwArg88, dwArgA8, dwArgE8, out s1_138, out a0_128, out a3, out a4_132, out s2_555, out s3_556, out s4_557)
	s0_151 = a0_128
	branch a0_128 != 0<32> l230277AC
l23027816:
l2302775A:
	word32 a5_152 = CONVERT(Mem18[a0_41 + 13<i32>:byte], byte, word32)
	branch a5_152 == 1<32> l2302777E
l2302777E:
	Mem155[a0_41 + 136<i32>:word16] = SLICE(CONVERT(Mem18[s1_45:uint16], uint16, word32), word16, 0)
	Mem157[a0_41 + 138<i32>:word16] = SLICE(CONVERT(Mem155[s1_45 + 2<i32>:uint16], uint16, word32), word16, 0)
	Mem159[a0_41 + 140<i32>:word16] = SLICE(CONVERT(Mem157[s1_45 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem161[a0_41 + 142<i32>:word16] = SLICE(CONVERT(Mem159[s1_45 + 6<i32>:uint16], uint16, word32), word16, 0)
l23027764:
	branch a5_152 == 0<32> l230277A0
l230277A0:
	word32 s2_509
	word32 a7_508
	word32 a5_507
	word32 a2_506
	word32 a1_505
	word32 a0_504
	word32 s3_510
	word32 s4_511
	word32 s5_512
	word32 s6_513
	word32 s7_514
	word32 s8_515
	word32 s9_516
	word32 s10_517
	word32 s11_518
	word32 t4_519
	ra = printf(ra, 0x23076818<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_138, out a0_504, out a1_505, out a2_506, out a3, out a4_132, out a5_507, out a7_508, out s2_509, out s3_510, out s4_511, out s5_512, out s6_513, out s7_514, out s8_515, out s9_516, out s10_517, out s11_518, out t4_519)
l230277AC:
	Mem192[s0_151 + 136<i32>:word16] = SLICE(CONVERT(Mem187[s1_138:uint16], uint16, word32), word16, 0)
	Mem194[s0_151 + 138<i32>:word16] = SLICE(CONVERT(Mem192[s1_138 + 2<i32>:uint16], uint16, word32), word16, 0)
	Mem196[s0_151 + 140<i32>:word16] = SLICE(CONVERT(Mem194[s1_138 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem198[s0_151 + 142<i32>:word16] = SLICE(CONVERT(Mem196[s1_138 + 6<i32>:uint16], uint16, word32), word16, 0)
	word32 a3_207
	word32 a4_208
	word32 a5_209
	word32 s2_215
	word32 s3_216
	word32 mstatus_228
	word32 s0_229
	word32 s1_540
	word32 s4_541
	word32 s5_542
	word32 s6_543
	word32 s8_544
	word32 s1_545
	word32 a0_546
	word32 a4_547
	word32 s2_548
	word32 s3_549
	word32 s4_550
	word32 s5_551
	word32 s6_552
	word32 s8_553
	word32 mstatus_554
	ra = bt_le_scan_update(bt_conn_set_state(ra, s1_138, s0_151, 1<32>, a3, a4_132, mstatus, dwLoc18_302, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArg9C, dwArgB8, dwArgF8, out s0_229, out s1_540, out a3_207, out a4_208, out a5_209, out s2_215, out s3_216, out s4_541, out s5_542, out s6_543, out s8_544, out mstatus_228), s0_229, a3_207, a4_208, a5_209, s2_215, s3_216, mstatus_228, dwLoc20, dwLoc1C, dwLoc18_302, s0, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, dwArg4C, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_151, out s1_545, out a0_546, out a3, out a4_547, out s2_548, out s3_549, out s4_550, out s5_551, out s6_552, out s8_553, out mstatus_554)
l23027766:
	branch (a5_152 + 0xFFFFFFFD<32> & 255<i32>) >u 1<32> l230277DC
l230277DC:
	word32 a4_520
	word32 a5_521
	atomic_dec(a0_41, a3, 1<32>, mstatus, out a3, out a4_520, out a5_521)
l2302772C:
	s0_151 = 0<32>
l23027770:
	a0Out = s0_151
	a3Out = a3
	return ra
bt_conn_create_le_exit:


word32 bt_conn_le_conn_update(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_recv
//      bt_conn_le_param_update
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 mstatus s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_le_conn_update_entry:
l2302782A:
	word32 a3_29
	word32 a4_30
	word32 mstatus_34
	word32 s1_37
	word32 s2_38
	word32 s4_40
	word32 s5_41
	word32 s0_206
	word32 a1_207
	word32 a5_208
	word32 s3_209
	word32 s6_210
	word32 s8_211
	word32 ra_35 = bt_hci_cmd_create(ra, 0xE<32>, a3, a4, a5, mstatus, dwArg74, dwArg88, dwArgC8, dwArgE8, out s0_206, out s1_37, out a1_207, out a3_29, out a4_30, out a5_208, out s2_38, out s3_209, out s4_40, out s5_41, out s6_210, out s8_211, out mstatus_34)
	branch false l230278BE
l230278BE:
	s1Out = s1_37
	a0Out = -55<i32>
	a3Out = a3_29
	a4Out = a4_30
	mstatusOut = mstatus_34
	return s1
l2302784A:
	word32 a1_212
	word32 a5_213
	word32 a0_62 = net_buf_simple_add(0x200001B<32>, 0xE<32>, a4_30, out a1_212, out a5_213)
	word32 a3_71
	word32 a4_72
	word32 t1_214
	word32 a0_215
	word32 a1_216
	word32 a2_217
	word32 a5_218
	word32 ra_74 = memset(ra_35, a0_62, 0<32>, 0xE<32>, out t1_214, out a0_215, out a1_216, out a2_217, out a3_71, out a4_72, out a5_218)
	word32 a5_77 = CONVERT(Mem22[s4_40:uint16], uint16, word32)
	Mem80[a0_62:byte] = SLICE(a5_77, byte, 0)
	Mem82[a0_62 + 1<i32>:byte] = SLICE(a5_77 >>u 8<i32>, byte, 0)
	word32 a5_83 = CONVERT(Mem82[s1_37:uint16], uint16, word32)
	Mem84[a0_62 + 2<i32>:byte] = SLICE(a5_83, byte, 0)
	Mem86[a0_62 + 3<i32>:byte] = SLICE(a5_83 >>u 8<i32>, byte, 0)
	word32 a5_87 = CONVERT(Mem86[s1_37 + 2<i32>:uint16], uint16, word32)
	Mem88[a0_62 + 4<i32>:byte] = SLICE(a5_87, byte, 0)
	Mem90[a0_62 + 5<i32>:byte] = SLICE(a5_87 >>u 8<i32>, byte, 0)
	word32 a5_91 = CONVERT(Mem90[s1_37 + 4<i32>:uint16], uint16, word32)
	Mem92[a0_62 + 6<i32>:byte] = SLICE(a5_91, byte, 0)
	Mem94[a0_62 + 7<i32>:byte] = SLICE(a5_91 >>u 8<i32>, byte, 0)
	word32 a5_95 = CONVERT(Mem94[s1_37 + 6<i32>:uint16], uint16, word32)
	Mem96[a0_62 + 8<i32>:byte] = SLICE(a5_95, byte, 0)
	Mem98[a0_62 + 9<i32>:byte] = SLICE(a5_95 >>u 8<i32>, byte, 0)
l230278BA_thunk_bt_hci_cmd_send_sync:
	word32 a0_106
	word32 a3_109
	word32 a4_110
	word32 mstatus_114
	word32 s0_116
	word32 s1_117
	word32 a1_219
	word32 a2_220
	word32 a5_221
	word32 s2_222
	word32 s3_223
	word32 s4_224
	word32 s5_225
	word32 s6_226
	word32 s7_227
	word32 s8_228
	word32 s9_229
	word32 s10_230
	word32 s11_231
	bt_hci_cmd_send_sync(ra_74, s1, s2_38 + 19<i32>, 0x2000013<32>, a3_71, a4_72, a5_95 >>u 8<i32>, s5_41, mstatus_34, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg54, s1, dwArg74, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_116, out s1_117, out a0_106, out a1_219, out a2_220, out a3_109, out a4_110, out a5_221, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_227, out s8_228, out s9_229, out s10_230, out s11_231, out mstatus_114)
	s1Out = s1_117
	a0Out = a0_106
	a3Out = a3_109
	a4Out = a4_110
	mstatusOut = mstatus_114
	return s0_116
bt_conn_le_conn_update_exit:


word32 send_conn_le_param_update(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      conn_update_timeout
//      bt_conn_le_param_update
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
send_conn_le_param_update_entry:
l230278D2:
	word32 a5_19
	branch (CONVERT(Mem0[0x4200D3C8<32>:byte], byte, word32) & 2<32>) != 0<32> l23027900
l23027900:
	word32 a5_18 = CONVERT(Mem12[a0 + 148<i32>:byte], byte, word32)
	a5_19 = a5_18 & 2<32>
	branch (a5_18 & 2<32>) == 0<32> l230278EA
l23027908:
	branch atomic_test_bit(a0 + 4<32>, 0xA<32>) != 0<32> l230278EA
l230278EA:
	a5_19 = CONVERT(Mem12[a0 + 3<i32>:byte], byte, word32)
	branch a5_19 == 0<32> l23027912
l23027912:
	word32 a0_48
	word32 a3_51
	word32 a4_52
	word32 mstatus_56
	word32 s1_59
	word32 s0_58 = bt_conn_le_conn_update(ra, a1, a3, a4, a5_19, mstatus, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg44, dwArg64, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s1_59, out a0_48, out a3_51, out a4_52, out mstatus_56)
	branch a0_48 != 0<32> l2302792C
l2302791C:
	Mem78[s0_58 + 144<i32>:word16] = SLICE(CONVERT(Mem12[s1_59 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem80[s0_58 + 146<i32>:word16] = SLICE(CONVERT(Mem78[s1_59 + 6<i32>:uint16], uint16, word32), word16, 0)
l2302792C:
	s0Out = s0
	a0Out = a0_48
	a3Out = a3_51
	a4Out = a4_52
	mstatusOut = mstatus_56
	return ra_57
l230278F0:
l230278FC_thunk_bt_l2cap_update_conn_param:
	word32 a0_93
	s0Out = bt_l2cap_update_conn_param(a1, a4, out a0_93)
	a0Out = a0_93
	a3Out = a3
	a4Out = a4
	mstatusOut = mstatus
	return ra
send_conn_le_param_update_exit:


void conn_update_timeout(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg5C, word32 dwArg64, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
conn_update_timeout_entry:
l23027936:
	word32 a5_13 = CONVERT(Mem11[a0 + -63<i32>:byte], byte, word32)
	word32 s0_14 = a0
	branch a5_13 != 0<32> l23027986
l23027986:
	word32 a4_16 = CONVERT(Mem11[a0 + -74<i32>:byte], byte, word32)
	branch a4_16 != 1<32> l23027966
l23027990:
	word32 a5_18 = CONVERT(Mem11[a0 + -73<i32>:byte], byte, word32)
	branch a5_18 != 0<32> l230279A2
l230279A2:
	word32 a1_38
	word32 a0_24
	word32 a3_27
	word32 a4_28
	word32 s4_440
	word32 a1_437
	word32 a2_438
	word32 a5_439
	word32 s1_30 = atomic_and(a0, -513<i32>, a3, a4_16, mstatus, out a0_24, out a1_437, out a2_438, out a3_27, out a4_28, out a5_439, out s4_440)
	branch (a0_24 & 512<i32>) == 0<32> l230279D2
l230279D2:
	a1_38 = fp + 0xFFFFFFE8<32>
l230279B6:
	a1_38 = fp + 0xFFFFFFE0<32>
l230279C0:
	word32 a3_58
	word32 a4_59
	word32 mstatus_63
	word32 s0_83
	word32 a0_451
	send_conn_le_param_update(ra, s1_30, a1_38, a3_27, a4_28, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_83, out a0_451, out a3_58, out a4_59, out mstatus_63)
	word32 a2_454
	word32 a1_453
	word32 a0_452
	word32 a3_455
	word32 a4_456
	word32 a5_457
	word32 s4_458
	atomic_or(s0_83, 256<i32>, a3_58, a4_59, mstatus_63, out a0_452, out a1_453, out a2_454, out a3_455, out a4_456, out a5_457, out s4_458)
l23027996:
	word32 mstatus_450
	word32 s5_449
	word32 s4_448
	word32 s3_447
	word32 s2_446
	word32 a5_445
	word32 a4_444
	word32 a3_443
	word32 a0_442
	word32 s1_441
	bt_hci_cmd_send(ra, a0, 0x200000E<32>, 0<32>, a3, a4_16, a5_18, s2, mstatus, dwLoc1C, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg58, dwArg64, s1, dwArg74, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s1_441, out a0_442, out a3_443, out a4_444, out a5_445, out s2_446, out s3_447, out s4_448, out s5_449, out mstatus_450)
l2302794C:
	word32 a3_132
	word32 a4_133
	word32 s1_137 = bt_l2cap_disconnected(ra, a0, a4, a5_13, mstatus, dwArg04, dwArg78, dwArg88, dwArgB8, dwArgF8, out a3_132, out a4_133)
	word32 s2_152 = Mem11[0x4200E1A8<32>:int32]
l2302795A:
	branch s2_152 != 0<32> l23027972
l23027972:
	word32 a5_155 = Mem11[s2_152 + 4<i32>:int32]
	branch a5_155 == 0<32> l23027980
l23027978:
	word32 a2_180
	word32 a7_181
	word32 s10_182
	word32 s11_183
	word32 s3_184
	word32 s5_185
	word32 s6_186
	word32 s7_187
	word32 s9_188
	word32 t0_189
	word32 t1_190
	word32 t4_191
	word32 t5_192
	word32 t6_193
	word32 tp_194
	call a5_155 (retsize: 0;)
		uses: a0:s1_158,a1:CONVERT(Mem11[s0_156 + -64<i32>:byte], byte, word32),a2:a2_180,a3:a3_162,a4:a4_163,a7:a7_181,mstatus:mstatus_161,ra:ra_160,s0:s0_156,s1:s1_158,s10:s10_182,s11:s11_183,s2:s2_153,s3:s3_184,s5:s5_185,s6:s6_186,s7:s7_187,s9:s9_188,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +0024:dwArg24,Stack +0030:dwArg30,Stack +0034:dwArg34,Stack +0040:dwArg40,Stack +0044:dwArg44,Stack +0048:dwArg48,Stack +004C:dwArg4C,Stack +0058:dwArg58,Stack +005C:dwArg5C,Stack +0064:dwArg64,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,Stack +0118:dwArg0118,Stack +0128:dwArg0128,Stack +0138:dwArg0138,Stack +0148:dwArg0148,Stack +0158:dwArg0158,Stack +FFFFFFE4:dwLoc1C,Stack +FFFFFFF8:dwLoc08,t0:t0_189,t1:t1_190,t4:t4_191,t5:t5_192,t6:t6_193,tp:tp_194
		defs: a2:a2_180,a3:a3_179,a4:a4_176,a7:a7_181,mstatus:mstatus_178,ra:ra_168,s0:s0_166,s1:s1_167,s10:s10_182,s11:s11_183,s2:s2_169,s3:s3_184,s5:s5_185,s6:s6_186,s7:s7_187,s9:s9_188,t0:t0_189,t1:t1_190,t4:t4_191,t5:t5_192,t6:t6_193,tp:tp_194
l23027980:
	s2_152 = Mem11[s2_152 + 24<i32>:int32]
l2302795E:
	word32 a4_435
	word32 a5_436
	word32 a3_434
	atomic_dec(s0_14, a3_132, a4_133, mstatus, out a3_434, out a4_435, out a5_436)
l23027966:
	return
conn_update_timeout_exit:


word32 bt_conn_le_param_update(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s3, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg78, word32 dwArg7C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_conn_update
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_le_param_update_entry:
l230279E6:
	word32 a3_113
	word32 s2_120
	word32 a5_15 = CONVERT(Mem13[a0 + 134<i32>:uint16], uint16, word32)
	word32 a4_17 = CONVERT(Mem13[a1:uint16], uint16, word32)
	branch a5_15 <u a4_17 l23027A40
l23027A02:
	a4_17 = CONVERT(Mem13[a1 + 2<i32>:uint16], uint16, word32)
	branch a4_17 <u a5_15 l23027A40
l23027A0A:
	a4_17 = CONVERT(Mem13[a0 + 140<i32>:uint16], uint16, word32)
	branch a4_17 != CONVERT(Mem13[a1 + 4<i32>:uint16], uint16, word32) l23027A40
l23027A16:
	a4_17 = CONVERT(Mem13[a0 + 142<i32>:uint16], uint16, word32)
	branch a4_17 != CONVERT(Mem13[a1 + 6<i32>:uint16], uint16, word32) l23027A40
l23027A40:
	branch CONVERT(Mem13[a0 + 3<i32>:byte], byte, word32) != 0<32> l23027A5A
l23027A5A:
	word32 a0_31 = atomic_test_bit(a0 + 4<i32>, 8<32>)
	s2_120 = a0_31
	branch a0_31 != 0<32> l23027A46
l23027A6A:
	Mem39[a0 + 136<i32>:word16] = SLICE(CONVERT(Mem13[a1:uint16], uint16, word32), word16, 0)
	Mem41[a0 + 138<i32>:word16] = SLICE(CONVERT(Mem39[a1 + 2<i32>:uint16], uint16, word32), word16, 0)
	Mem43[a0 + 144<i32>:word16] = SLICE(CONVERT(Mem41[a1 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem45[a0 + 146<i32>:word16] = SLICE(CONVERT(Mem43[a1 + 6<i32>:uint16], uint16, word32), word16, 0)
	word32 a2_310
	word32 a4_311
	word32 a0_308
	word32 a1_309
	word32 s4_313
	word32 a5_312
	atomic_or(a0, 512<i32>, a3, a4_17, mstatus, out a0_308, out a1_309, out a2_310, out a3_113, out a4_311, out a5_312, out s4_313)
l23027A46:
l23027A56_thunk_send_conn_le_param_update:
	word32 a0_79
	word32 a3_82
	word32 a4_315
	word32 s0_314
	word32 mstatus_316
	word32 ra_88 = send_conn_le_param_update(ra, a0, a1, a3, a4_17, mstatus, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg44, s3, s1, ra, dwArg78, dwArg7C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s0_314, out a0_79, out a3_82, out a4_315, out mstatus_316)
	a0Out = a0_79
	a3Out = a3_82
	return ra_88
l23027A22:
	word32 a5_306
	word32 s4_307
	word32 a2_304
	word32 a4_305
	word32 a0_302
	word32 a1_303
	atomic_and(a0, -513<i32>, a3, a4_17, mstatus, out a0_302, out a1_303, out a2_304, out a3_113, out a4_305, out a5_306, out s4_307)
	s2_120 = -69<i32>
l23027A30:
	a0Out = s2_120
	a3Out = a3_113
	return ra
bt_conn_le_param_update_exit:


word32 bt_conn_create_pdu_timeout(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg94, word32 dwArg9C, word32 dwArgA8, word32 dwArgE8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_create_le_sig_pdu.isra.7
//      bt_l2cap_create_pdu_timeout
//      l2cap_chan_le_send
//      create_frag.isra.11
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a1 a2 a3 a4 mstatus ra s0 s1 s11 s2 s3 s5 s6 s7 s9
// Trashed: a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_create_pdu_timeout_entry:
l23027A96:
	branch a0 != 0<32> l23027AAA
l23027AA2:
l23027AAA:
	word32 a1_128
	word32 a0_31
	word32 a5_36
	word32 mstatus_39
	word32 s0_174
	word32 a1_175
	word32 s4_176
	word32 s1_137
	word32 a3_130
	word32 a4_131
	word32 s2_144
	word32 s3_145
	word32 s5_146
	word32 s6_147
	word32 ra_136 = net_buf_alloc_fixed(ra, a2, a3, a4, a5, s5, mstatus, dwArg94, dwArgA8, dwArgE8, dwArg0108, out s0_174, out s1_137, out a0_31, out a1_175, out a3_130, out a4_131, out a5_36, out s2_144, out s3_145, out s4_176, out s5_146, out s6_147, out mstatus_39)
	word32 a2_129 = a2
	branch a0_31 != 0<32> l23027AD2
l23027AD2:
	a1_128 = net_buf_simple_reserve(s1_137 + 5<i32>, a5_36)
l23027AB8:
	word32 a0_177
	word32 a5_178
	word32 a7_179
	word32 s4_180
	word32 s8_181
	word32 s10_182
	word32 t4_183
	ra_136 = printf(ra_136, 0x23076844<32>, a3_130, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_137, out a0_177, out a1_128, out a2_129, out a3_130, out a4_131, out a5_178, out a7_179, out s2_144, out s3_145, out s4_180, out s5_146, out s6_147, out s7, out s8_181, out s9, out s10_182, out s11, out t4_183)
l23027AC6:
	s0Out = a0_31
	s1Out = s1_137
	a1Out = a1_128
	a2Out = a2_129
	a3Out = a3_130
	a4Out = a4_131
	s2Out = s2_144
	s3Out = s3_145
	s5Out = s5_146
	s6Out = s6_147
	s7Out = s7
	s9Out = s9
	s11Out = s11
	mstatusOut = mstatus_39
	return ra_136
bt_conn_create_pdu_timeout_exit:


word32 create_frag.isra.11(word32 ra, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 s5, word32 mstatus, word32 dwArg08, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_process_tx
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a4 a5 mstatus ra s1 s2 s3 s4 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
create_frag.isra.11_entry:
l23027ADE:
	word32 s2_114
	word32 a5_101
	word32 a4_106
	word32 s1_113
	word32 a1_28
	word32 s1_37
	word32 s7_54
	word32 s9_55
	word32 s0_224
	word32 a2_225
	word32 a3_226
	word32 a4_227
	word32 s2_228
	word32 s5_229
	word32 s11_230
	word32 mstatus_110
	word32 s3_115
	word32 s6_118
	word32 ra_111 = bt_conn_create_pdu_timeout(ra, 0<32>, 0xFFFFFFFF<32>, a3, a4, a5, s5, mstatus, s2, dwArg30, dwArg34, dwArg58, dwArg74, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s0_224, out s1_37, out a1_28, out a2_225, out a3_226, out a4_227, out s2_228, out s3_115, out s5_229, out s6_118, out s7_54, out s9_55, out s11_230, out mstatus_110)
	word32 a4_56 = CONVERT(Mem22[s1_37:byte], byte, word32)
	branch a4_56 == 4<32> l23027B1C
l23027B1C:
	Mem59[20<i32>:word32] = 0<32>
	s2_114 = 8<i32>
	word32 a4_66
	branch CONVERT(Mem59[0x4200D3D8<32>:uint16], uint16, word32) >=u net_buf_simple_tailroom(8<i32>, out a4_66) l23027B58
l23027B58:
	s1_113 = CONVERT(SLICE(net_buf_simple_tailroom(8<i32>, out a4_66), word16, 0), word16, word32)
l23027B3C:
	s1_113 = CONVERT(Mem59[0x4200D3D8<32>:uint16], uint16, word32)
l23027B40:
	word32 a2_238
	word32 a3_239
	word32 a5_240
	net_buf_simple_add_mem(8<i32>, Mem59[s3_115 + 8<i32>:int32], s1_113, a4_66, out a2_238, out a3_239, out a4_106, out a5_240)
	net_buf_simple_pull(s3_115 + 8<i32>, s1_113, out a5_101)
l23027B04:
	word32 s0_231
	word32 a0_232
	word32 a1_233
	word32 a3_234
	word32 s4_235
	word32 s5_236
	word32 s8_237
	ra_111 = net_buf_unref(ra_111, s1_37, 0<32>, a1_28, a4_56, mstatus_110, dwLoc20, s4, s2, dwArg08, dwArg58, s3, dwArg78, dwArg84, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_231, out s1_113, out a0_232, out a1_233, out a3_234, out a4_106, out a5_101, out s2_114, out s3_115, out s4_235, out s5_236, out s6_118, out s8_237, out mstatus_110)
l23027B0A:
	s1Out = s1_113
	a0Out = 0<32>
	a4Out = a4_106
	a5Out = a5_101
	s2Out = s2_114
	s3Out = s3_115
	s4Out = dwArg04
	s6Out = s6_118
	s7Out = s7_54
	s9Out = s9_55
	mstatusOut = mstatus_110
	return ra_111
create_frag.isra.11_exit:


word32 bt_conn_process_tx(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_tx_thread
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_process_tx_entry:
l23027B66:
	branch CONVERT(Mem13[a0 + 13<i32>:byte], byte, word32) != 0<32> l23027B9C
l23027B7A:
	word32 a0_22
	word32 a1_591
	word32 s4_594
	word32 a2_592
	word32 a5_593
	atomic_and(a0, -65<i32>, a3, a4, mstatus, out a0_22, out a1_591, out a2_592, out a3, out a4, out a5_593, out s4_594)
	branch (a0_22 & 64<i32>) == 0<32> l23027B9C
l23027B9C:
	word32 a0_42
	word32 a4_46
	word32 a5_589
	word32 a2_587
	word32 s2_590
	word32 a3_588
	word32 a1_586
	word32 s3_144
	word32 s4_145
	net_buf_get(ra, a0, a0 + 52<i32>, 0<32>, a3, a4, mstatus, dwArg18, dwArgC8, dwArg0108, out a0_42, out a1_586, out a2_587, out a3_588, out a4_46, out a5_589, out s2_590, out s3_144, out s4_145)
	word32 s1_121 = a0_42
	branch a0_42 != 0<32> l23027BAE
l23027BAA:
	word32 a5_595
	user_vAssertCalled(a4_46, mstatus, out a5_595)
l23027BAE:
	word32 s9_104
	word32 s7_102
	word32 a4_126
	word32 a1_112
	word32 ra_120
	word32 a2_196
	word32 a5_160 = 0x4200D000<32>
	word32 a3_69 = CONVERT(Mem13[a0_42 + 12<i32>:uint16], uint16, word32)
	word32 a4_159 = CONVERT(Mem13[0x4200D3D8<32>:uint16], uint16, word32)
	word32 s2_143 = 0x4200D358<32>
	branch a4_159 <u a3_69 l23027BE2
l23027BE2:
	word32 a0_83
	word32 s2_117
	word32 s3_118
	word32 s4_119
	word32 s6_101
	word32 a5_127
	ra_120 = create_frag.isra.11(ra, a3_69, a4_159, 0x4200D000<32>, 0x4200D358<32>, a0 + 13<i32>, s4_145, s5, mstatus, s2, dwArg10, dwArg14, dwArg38, dwArg54, dwArg58, dwArg5C, s3, s1, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s1_121, out a0_83, out a4_126, out a5_127, out s2_117, out s3_118, out s4_119, out s6_101, out s7_102, out s9_104, out mstatus)
	a1_112 = a0_83
	branch a0_83 != 0<32> l23027C04
l23027C04:
	word32 a2_114 = 0<32>
l23027C08:
	word32 a0_130
	word32 a3_133
	word32 s5_146
	word32 s0_599
	word32 a5_600
	ra_120 = send_frag(ra_120, s1_121, a2_114, 1<32>, a4_126, a5_127, s2_117, s3_118, s4_119, s6_101, mstatus, s2, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, s3, ra, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0148, out s0_599, out s1_121, out a0_130, out a1_112, out a3_133, out a4_126, out a5_600, out s2_143, out s3_144, out s4_145, out s5_146, out s6, out s7_102, out s9_104, out mstatus)
	branch a0_130 == 0<32> l23027BF2
l23027C10:
	a4_159 = CONVERT(Mem13[s1_121 + 12<i32>:uint16], uint16, word32)
	a5_160 = CONVERT(Mem13[s2_143 + 128<i32>:uint16], uint16, word32)
	branch a5_160 <u a4_159 l23027C22
l23027C22:
	word32 a0_163
	ra_120 = create_frag.isra.11(ra_120, a3_133, a4_159, a5_160, s2_143, s3_144, s4_145, s5_146, mstatus, s2, dwArg10, dwArg14, dwArg38, dwArg54, dwArg58, dwArg5C, s3, s1, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s1_121, out a0_163, out a4_126, out a5_127, out s2_117, out s3_118, out s4_119, out s6_101, out s7_102, out s9_104, out mstatus)
	a1_112 = a0_163
	branch a0_163 == 0<32> l23027BF2
l23027C2E:
	a2_114 = 1<32>
l23027C1C:
	a2_196 = 1<32>
l23027BC6:
	a2_196 = 0<32>
	ra_120 = ra
l23027BCA:
	word32 a0_219
	word32 a3_222
	word32 a5_224
	word32 s0_228
	word32 s2_232
	word32 s3_233
	word32 s5_235
	word32 s6_236
	word32 s4_598
	ra_120 = send_frag(ra_120, s1_121, a2_196, 0<32>, a4_159, a5_160, s2_143, s3_144, s4_145, s6, mstatus, s2, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, s3, ra, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0148, out s0_228, out s1_121, out a0_219, out a1_112, out a3_222, out a4_126, out a5_224, out s2_232, out s3_233, out s4_598, out s5_235, out s6_236, out s7_102, out s9_104, out mstatus)
	branch a0_219 == 0<32> l23027BF2
l23027BF2:
l23027C00_thunk_net_buf_unref:
	word32 a3_265
	word32 a4_266
	word32 a5_267
	word32 mstatus_270
	word32 s0_272
	word32 s1_273
	word32 s2_274
	word32 s3_275
	word32 s4_276
	word32 s5_277
	word32 s6_278
	word32 s8_279
	word32 a0_596
	word32 a1_597
	word32 ra_271 = net_buf_unref(ra_120, s1_121, s1_121, a1_112, a4_126, mstatus, dwArg00, dwArg04, dwArg08, dwArg28, dwArg78, dwArg84, dwArg98, dwArgA4, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out s0_272, out s1_273, out a0_596, out a1_597, out a3_265, out a4_266, out a5_267, out s2_274, out s3_275, out s4_276, out s5_277, out s6_278, out s8_279, out mstatus_270)
	s0Out = s0_272
	s1Out = s1_273
	a3Out = a3_265
	a4Out = a4_266
	a5Out = a5_267
	s2Out = s2_274
	s3Out = s3_275
	s4Out = s4_276
	s5Out = s5_277
	s6Out = s6_278
	s7Out = s7_102
	s8Out = s8_279
	s9Out = s9_104
	mstatusOut = mstatus_270
	return ra_271
l23027BD4:
	s0Out = s0_228
	s1Out = s1_121
	a3Out = a3_222
	a4Out = a4_126
	a5Out = a5_224
	s2Out = s2_232
	s3Out = s3_233
	s4Out = dwArg04
	s5Out = s5_235
	s6Out = s6_236
	s7Out = s7_102
	s8Out = dwLoc1C
	s9Out = s9_104
	mstatusOut = mstatus
	return ra_120
l23027B8A:
l23027B98_thunk_conn_cleanup:
	word32 a3_303
	word32 a4_304
	word32 a5_305
	word32 mstatus_308
	word32 s1_310
	word32 s2_311
	word32 s3_312
	word32 s4_313
	word32 s5_314
	word32 s6_315
	word32 s8_316
	word32 ra_309 = conn_cleanup(ra, a0, a0, a3, a4, s2, mstatus, dwArg08, dwArg14, dwArg18, dwArg28, dwArg34, dwArg38, dwArg58, s1, dwArg78, dwArg84, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, out s1_310, out a3_303, out a4_304, out a5_305, out s2_311, out s3_312, out s4_313, out s5_314, out s6_315, out s8_316, out mstatus_308)
	s0Out = a0
	s1Out = s1_310
	a3Out = a3_303
	a4Out = a4_304
	a5Out = a5_305
	s2Out = s2_311
	s3Out = s3_312
	s4Out = s4_313
	s5Out = s5_314
	s6Out = s6_315
	s7Out = s7
	s8Out = s8_316
	s9Out = s9
	mstatusOut = mstatus_308
	return ra_309
bt_conn_process_tx_exit:


word32 bt_conn_auth_cb_register(word32 a0, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_auth
// MayUse:  a0:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
bt_conn_auth_cb_register_entry:
l23027C34:
	word32 a5_10
	branch a0 != 0<32> l23027C44
l23027C44:
	a3 = Mem0[0x4201A4D4<32>:int32]
	a5_10 = -69<i32>
	branch a3 != 0<32> l23027C40
l23027C4E:
	word32 a0_13 = Mem0[-53<i32>:word32]
	branch true l23027C64
l23027C52:
	a5_10 = 0xFFFFFFEA<32>
	branch a3 != 0<32> l23027C40
l23027C58:
	branch a3 != 0<32> l23027C40
l23027C5C:
	branch a3 != 0<32> l23027C40
l23027C60:
	a0_13 = Mem0[a3 + 20<i32>:word32]
	branch a3 != 0<32> l23027C40
l23027C64:
	Mem16[0x4201A4D4<32>:word32] = a0_13
l23027C3A:
	Mem17[0x4201A4D4<32>:word32] = 0<32>
l23027C3E:
	a5_10 = 0<32>
l23027C40:
	a3Out = a3
	return a5_10
bt_conn_auth_cb_register_exit:


void bt_conn_auth_passkey_entry(word32 ra, word32 s0, word32 a0, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_auth_passkey
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_auth_passkey_entry_entry:
l23027C6A:
	branch Mem0[0x4201A4D4<32>:int32] == 0<32> l23027C92
l23027C92:
l23027C74:
	word32 a3_8 = CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32)
	branch a3_8 != 1<32> l23027C94
l23027C94:
	return
l23027C80:
	bt_smp_auth_passkey_entry(ra, s0, a0, a3_8, s2, mstatus, dwLoc10, dwLoc0C, dwLoc08, dwArg08, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128)
	return
bt_conn_auth_passkey_entry_exit:


void bt_conn_auth_passkey_confirm(word32 ra, word32 s0, word32 a0, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE0, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_auth_passkey_confirm
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_auth_passkey_confirm_entry:
l23027C98:
	branch Mem0[0x4201A4D4<32>:int32] == 0<32> l23027CB0
l23027CA2:
	branch CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) != 1<32> l23027CB0
l23027CB0:
	return
l23027CAC:
l23027CAC_thunk_bt_smp_auth_passkey_confirm:
	bt_smp_auth_passkey_confirm(ra, s0, a0, a3, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg38, dwArg44, dwArg4C, dwArg50, dwArg54, dwArg68, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgE0, dwArgE4, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128)
	return
bt_conn_auth_passkey_confirm_exit:


void bt_conn_auth_cancel(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_auth_cancel
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bt_conn_auth_cancel_entry:
l23027CB4:
	branch Mem0[0x4201A4D4<32>:int32] == 0<32> l23027CCC
l23027CBE:
	branch CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) != 1<32> l23027CCC
l23027CCC:
	return
l23027CC8:
l23027CC8_thunk_bt_smp_auth_cancel:
	bt_smp_auth_cancel(ra, a0, a3, mstatus, dwArg08, dwArg10, dwArg50, dwArg54, dwArg78, dwArg9C)
	return
bt_conn_auth_cancel_exit:


void bt_conn_auth_pairing_confirm(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_auth_pairing_confirm
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bt_conn_auth_pairing_confirm_entry:
l23027CD0:
	branch Mem0[0x4201A4D4<32>:int32] == 0<32> l23027CE8
l23027CDA:
	branch CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) != 1<32> l23027CE8
l23027CE8:
	return
l23027CE4:
l23027CE4_thunk_bt_smp_auth_pairing_confirm:
	bt_smp_auth_pairing_confirm(ra, s0, a0, a3, s2, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg64, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0158)
	return
bt_conn_auth_pairing_confirm_exit:


word32 bt_conn_index(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_recv
//      update_ccc
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
bt_conn_index_entry:
l23027CEC:
	return (a0 - 0x42012278<32> >> 5<i32>) + 0xCCCCCCCD<32> & 255<i32>
bt_conn_index_exit:


word32 bt_conn_init(word32 ra, word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      init_work
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_conn_init_entry:
l23027D0A:
	word32 a5_26 = CONVERT(Mem0[0x4200E168<32>:byte], byte, word32)
	branch a5_26 != 0<32> l23027D2C
l23027D1E:
	word32 s4_420
	word32 s2_418
	word32 s3_419
	k_queue_init(ra, 2<32>, a3, a4, a5_26, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out a3, out a4, out a5_26, out s2_418, out s3_419, out s4_420)
l23027D2C:
	word32 s3_416
	word32 s4_417
	word32 s2_415
	word32 a3_414
	word32 a4_51
	word32 a5_52
	word32 s1_54 = k_queue_init(ra, 0x14<32>, a3, a4, a5_26, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out a3_414, out a4_51, out a5_52, out s2_415, out s3_416, out s4_417)
l23027D46:
	s1_437 = s1_54
	a4_438 = a4_51
	a5_439 = a5_52
	word32 a3_75
	word32 s2_82
	word32 s5_426
	word32 s6_427
	word32 s3_424
	word32 s4_425
	word32 a1_422
	word32 a2_423
	word32 a0_421
	branch s2_82 != k_queue_append(s1_437 + -732<i32>, a4_438, a5_439, mstatus, s0, ra, dwArgE8, dwArg0128, dwArg0168, out s1_54, out a0_421, out a1_422, out a2_423, out a3_75, out a4_51, out a5_52, out s2_82, out s3_424, out s4_425, out s5_426, out s6_427) l23027D46
l23027D56:
	word32 a3_99
	word32 a4_100
	word32 a5_101
	word32 a0_112
	word32 a3_115
	word32 s5_128
	word32 s3_126
	word32 s1_122
	word32 mstatus_120
	word32 a4_116
	word32 ra_121 = bt_smp_init(ra, bt_att_init(ra, a3_75, a4_51, mstatus, dwArg24, dwArg84, dwArgB8, dwArgD8, dwArg0118, out a3_99, out a4_100, out a5_101), a3_99, a4_100, a5_101, mstatus, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s1_122, out a0_112, out a3_115, out a4_116, out s3_126, out s5_128, out mstatus_120)
	word32 s2_140 = a0_112
	branch a0_112 != 0<32> l23027DBA
l23027D62:
	bt_l2cap_init()
	s1_122 = 0x42012000<32>
	word32 s0_145 = 0x42012278<32>
	branch atomic_get(0x420122C0<32>) == 0<32> l23027D96
l23027D7C:
	branch atomic_test_bit(0x4201227C<32>, 0<32>) == 0<32> l23027D96
l23027D88:
	Mem151[0x42012280<32>:byte] = 0<8>
	word32 s6_430
	word32 s8_431
	word32 a5_428
	word32 s4_429
	ra_121 = bt_conn_set_state(ra_121, 0x42012000<32>, 0x42012278<32>, 1<32>, a3_115, a4_116, mstatus_120, dwLoc08, dwArg00, dwArg04, dwArg14, dwArg18, dwArg28, dwArg88, dwArg98, dwArgAC, dwArgC8, dwArg0108, out s0_145, out s1_122, out a3_115, out a4_116, out a5_428, out s2_140, out s3_126, out s4_429, out s5_128, out s6_430, out s8_431, out mstatus_120)
l23027D96:
	branch atomic_get(s0_145 + 232<i32>) == 0<32> l23027DBA
l23027DA0:
	branch atomic_test_bit(s0_145 + 164<i32>, 0<32>) == 0<32> l23027DBA
l23027DAC:
	Mem191[s0_145 + 168<i32>:byte] = 0<8>
	word32 s8_436
	word32 s4_434
	word32 s6_435
	word32 s0_432
	word32 a5_433
	ra_121 = bt_conn_set_state(ra_121, s1_122, s0_145 + 160<i32>, 1<32>, a3_115, a4_116, mstatus_120, dwLoc08, dwArg00, dwArg04, dwArg14, dwArg18, dwArg28, dwArg88, dwArg98, dwArgAC, dwArgC8, dwArg0108, out s0_432, out s1_122, out a3_115, out a4_116, out a5_433, out s2_140, out s3_126, out s4_434, out s5_128, out s6_435, out s8_436, out mstatus_120)
l23027DBA:
	0<32> = dwArg38
	s1Out = s1_122
	a0Out = s2_140
	a3Out = a3_115
	a4Out = a4_116
	s2Out = s2_140
	s3Out = s3_126
	s5Out = s5_128
	mstatusOut = mstatus_120
	return ra_121
bt_conn_init_exit:


word32 bt_rand(word32 a0, word32 a1, word32 a2, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      le_set_private_addr.isra.19
//      bt_addr_le_create_static
//      display_passkey
//      legacy_request_tk
//      bt_smp_distribute_keys
//      smp_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: sp
bt_rand_entry:
l23027DC8:
	word32 a3_12
	word32 a4_13
	word32 a5_14
	word32 s4_16
	word32 s1_15 = k_get_random_byte_array(a0, a1, a2, out a3_12, out a4_13, out a5_14, out s4_16)
	a0Out = 0<32>
	a3Out = a3_12
	a4Out = a4_13
	a5Out = a5_14
	s4Out = s4_16
	return s1_15
bt_rand_exit:


word32 bt_encrypt_le(word32 ra, word32 a0, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_c1
//      smp_pairing_random
//      bt_rpa_irk_matches
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a0 a1 a4 a5 ra s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bt_encrypt_le_entry:
l23027DD8:
	word32 a4_25 = fp + -208<i32>
	word32 a5_12 = a0 + 15<i32>
	word32 s2_168 = fp + -208<i32>
l23027DF0:
	a5_12 = a5_12 + 0xFFFFFFFF<32>
	a4_25 = a4_25 + 1<32>
	Mem27[a4_25 + 4095<i32>:byte] = SLICE(CONVERT(Mem23[a5_12 + 1<i32>:byte], byte, word32), byte, 0)
	branch a0 + 0xFFFFFFFF<32> != a5_12 l23027DF0
l23027E00:
	word32 a0_107
	word32 a0_33
	word32 a4_151
	word32 s1_165
	word32 s4_176
	word32 s0_162 = tc_aes128_set_encrypt_key(fp + -192<i32>, fp + -208<i32>, out s1_165, out a0_33, out a4_151, out s4_176)
	branch a0_33 == 0<32> l23027E5E
l23027E0A:
	word32 a5_51 = s1_165 + 15<i32>
	word32 a4_52 = fp + -208<i32>
l23027E12:
	a5_51 = a5_51 + 0xFFFFFFFF<32>
	a4_52 = a4_52 + 1<32>
	Mem60[a4_52 + 4095<i32>:byte] = SLICE(CONVERT(Mem56[a5_51 + 1<i32>:byte], byte, word32), byte, 0)
	branch a5_51 != s1_165 + 0xFFFFFFFF<32> l23027E12
l23027E22:
	word32 a0_70
	word32 a3_221
	word32 a1_220
	ra = tc_aes_encrypt(ra, s0_162, fp + -208<i32>, fp + -192<i32>, out s0_162, out s1_165, out a0_70, out a1_220, out a3_221, out a4_151, out s2_168, out s3, out s4_176, out s5)
	branch a0_70 == 0<32> l23027E5E
l23027E5E:
	a0_107 = 0xFFFFFFEA<32>
l23027E2E:
	word32 a2_100 = s0_162
	word32 a5_102 = s0_162 + 15<i32>
	a4_151 = s0_162 + 7<i32>
l23027E38:
	word32 a3_101 = CONVERT(Mem98[a2_100:byte], byte, word32)
	Mem103[a2_100:byte] = SLICE(CONVERT(Mem98[a5_102:byte], byte, word32), byte, 0)
	a5_102 = a5_102 + 0xFFFFFFFF<32>
	Mem104[a5_102 + 1<i32>:byte] = SLICE(a3_101, byte, 0)
	a2_100 = a2_100 + 1<32>
	branch s0_162 + 7<i32> != a5_102 l23027E38
l23027E50:
	a0_107 = 0<32>
l23027E52:
	s0Out = s0_162
	s1Out = s1_165
	a0Out = a0_107
	a1Out = dwLocCC
	a4Out = a4_151
	a5Out = dwLocB0
	s2Out = s2_168
	s3Out = s3
	s4Out = s4_176
	s5Out = s5
	return ra
bt_encrypt_le_exit:


void sys_slist_remove(word32 a1, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gatt_subscription_remove
//      bt_gatt_service_unregister
//      bt_gatt_unsubscribe
// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a2
// Preserved: sp
sys_slist_remove_entry:
l23027E62:
	word32 a2_5 = Mem0[a5:word32]
	branch a1 != 0<32> l23027E76
l23027E76:
	Mem7[a5:word32] = a1
	word32 a0_8 = Mem7[a5 + 4<i32>:word32]
	branch a5 != a2_5 l23027E70
l23027E7E:
	Mem9[a1 + 4<i32>:word32] = a0_8
l23027E66:
	word32 a0_11 = Mem0[a4 + 4<i32>:word32]
	Mem12[a5:word32] = a0_11
	branch a4 != a2_5 l23027E70
l23027E6E:
	Mem13[a5 + 4<i32>:word32] = a0_11
l23027E70:
	Mem15[a2_5:word32] = 0<32>
	return
sys_slist_remove_exit:


void found_attr(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
found_attr_entry:
l23027E82:
	Mem5[a0:word32] = a1
	return
found_attr_exit:


word32 find_static_attr(word32 a0, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_attr_value_handle
//      bt_gatt_indicate
// MayUse:  a0:[0..31]
// LiveOut: a0 a1 a2 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
find_static_attr_entry:
l23027E88:
	word32 a5_31 = 0x4200DDA0<32>
	word32 a7_32 = 1<32>
l23027E9C:
	word32 a4_11
	branch a5_31 >=u 0x4200DDB0<32> l23027ECA
l23027ECA:
	a4_11 = 0<32>
l23027EA0:
	word32 t1_13 = Mem0[a5_31 + 4<i32>:int32]
	a3 = 0<32>
l23027EB8:
	a4_11 = CONVERT(SLICE(a7_32 + a3, word16, 0), word16, word32)
	branch a3 != t1_13 l23027EA8
l23027EA8:
	a1 = a3 + 0x14<32> + Mem0[a5_31:int32]
	branch a0 == a1 l23027ECC
l23027ECC:
	a1Out = a1
	a2Out = 0x4200DDB0<32>
	a3Out = a3
	a4Out = a4_11
	return a4_11
find_static_attr_exit:
l23027EB6:
	a3 = a3 + 1<32>
l23027EC4:
	a5_31 = a5_31 + 8<32>
	a7_32 = a4_11


void gatt_ccc_changed(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_attr_write_ccc
//      update_ccc
// MayUse:  a1:[0..31]
// LiveOut:
// Trashed: a1 a3 a4 a5 t1
// Preserved: sp
gatt_ccc_changed_entry:
l23027ED0:
	word32 a3_5 = CONVERT(Mem0[a1 + 18<i32>:uint16], uint16, word32)
	word32 a4_12 = CONVERT(Mem0[a1 + 8<i32>:uint16], uint16, word32)
	branch a4_12 >=u a3_5 l23027EE0
l23027EDE:
	a4_12 = a3_5
l23027EE0:
	word32 a1_13 = a4_12 << 0x10<u32>
	branch CONVERT(Mem0[a1 + 20<i32>:uint16], uint16, word32) == a1_13 >>u 16<i32> l23027EFC
l23027EEE:
	word32 t1_15 = Mem0[a1 + 24<i32>:int32]
	Mem16[a1 + 20<i32>:word16] = SLICE(a4_12, word16, 0)
	branch t1_15 == 0<32> l23027EFC
l23027EFC:
	return
l23027EFA:
	word32 t1_23
	call t1_15 (retsize: 0;)
		uses: a1:a1_13 >>u 16<i32>,t1:t1_23
		defs: t1:t1_23
	return
gatt_ccc_changed_exit:


void gatt_indicate_rsp(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a1 a2 a4 t1
// Preserved: sp
gatt_indicate_rsp_entry:
l23027EFE:
	call Mem0[a4 + 32<i32>:int32] (retsize: 0;)
		uses: a1:a1,a2:a1,a4:Mem0[a1 + 28<i32>:word32]
	return
gatt_indicate_rsp_exit:


void sc_restore_rsp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
sc_restore_rsp_entry:
l23027F08:
	return
sc_restore_rsp_exit:


word32 gatt_subscription_remove(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 dwArg10, word32 dwArg14, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gatt_write_ccc_rsp
//      bt_gatt_disconnected
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: a3 a4 a5 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 t1 tp
// Preserved: sp
gatt_subscription_remove_entry:
l23027F0A:
	sys_slist_remove(a1, a4, a5)
	word32 s1_32
	word32 ra_36
	word32 a3_40
	word32 a5_41
	word32 a4_42
	call Mem16[a2 + 32<i32>:int32] (retsize: 0;)
		uses: a0:a0,a1:a2,a2:0<32>,a3:0<32>,a4:a4,a5:a5,ra:ra,s0:s0,s1:a0,Stack +0010:dwArg10,Stack +0014:dwArg14,tp:dwArg14
		defs: a3:a3_40,a4:a4_42,a5:a5_41,ra:ra_36,s1:s1_32
	s1Out = s1_32
	a3Out = a3_40
	a4Out = a4_42
	a5Out = a5_41
	return ra_36
gatt_subscription_remove_exit:


void gatt_mtu_rsp(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a2 a4 t1
// Preserved: sp
gatt_mtu_rsp_entry:
l23027F3C:
	call Mem0[a4 + 24<i32>:int32] (retsize: 0;)
		uses: a2:a4,a4:a4
	return
gatt_mtu_rsp_exit:


void gatt_write_rsp(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a2 a4 t1
// Preserved: sp
gatt_write_rsp_entry:
l23027F44:
	call Mem0[a4 + 24<i32>:int32] (retsize: 0;)
		uses: a2:a4,a4:a4
	return
gatt_write_rsp_exit:


word32 find_ccc_cfg(word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_attr_read_ccc
//      bt_gatt_attr_write_ccc
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s4 s8 t3 tp
// Preserved: sp
find_ccc_cfg_entry:
l23027F4C:
	word32 a4_141
	word32 a0_120
	word32 a0_67
	word32 a0_33
	branch a0 != 0<32> l23027F7E
l23027F7E:
	s1 = a0
	branch CONVERT(Mem9[a0 + 8<i32>:byte], byte, word32) != CONVERT(Mem9[a1:byte], byte, word32) l23027F94
l23027F8C:
	word32 a0_17
	word32 a5_175
	s1 = bt_conn_addr_le_cmp(a0, a1 + 1<32>, dwLoc10, out a0_17, out a3, out a4_141, out a5_175)
	branch a0_17 == 0<32> l23027F70
l23027F94:
	a4_141 = CONVERT(Mem9[s1 + 8<i32>:byte], byte, word32)
	branch a4_141 != CONVERT(Mem9[a1 + 10<i32>:byte], byte, word32) l23027FB0
l23027FA0:
	word32 a5_176
	s1 = bt_conn_addr_le_cmp(s1, a1 + 11<i32>, dwLoc10, out a0_33, out a3, out a4_141, out a5_176)
l23027F58:
	word32 a1_169
	word32 a2_170
	word32 a5_171
	branch memcmp(a1 + 1<i32>, fp + 0xFFFFFFE8<32>, 7<32>, out a1_169, out a2_170, out a3, out a4_141, out a5_171) != 0<32> l23027FB4
l23027FB4:
	word32 a1_172
	word32 a2_173
	word32 a5_174
	a0_33 = memcmp(a1 + 11<i32>, fp + 0xFFFFFFE8<32>, 7<32>, out a1_172, out a2_173, out a3, out a4_141, out a5_174)
l23027FAA:
	branch a0_33 != 0<32> l23027FB0
l23027FB0:
	a0_120 = 0<32>
l23027FAC:
	a0_67 = 0xA<32>
l23027F70:
	a0_67 = 0<32>
l23027F72:
	a0_120 = a0_67 + a1
l23027F74:
	a0Out = a0_120
	a3Out = a3
	a4Out = a4_141
	s4Out = dwArg04
	return s1
find_ccc_cfg_exit:


word32 gatt_notify(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      notify_cb
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
gatt_notify_entry:
l23027FCC:
	word32 a3_31
	word32 a4_32
	word32 s0_36
	word32 s1_37
	word32 s5_43
	word32 a0_51
	word32 mstatus_53
	word32 a2_247
	word32 a5_248
	word32 s2_249
	word32 s3_250
	word32 s4_251
	word32 s6_252
	word32 s11_253
	word32 ra_35 = bt_att_create_pdu(ra, a1, a0, CONVERT(Mem17[a2 + 12<i32>:uint16], uint16, word32) + 2<32>, a3, mstatus, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg7C, dwArgA8, dwArgC8, out s0_36, out s1_37, out a0_51, out a2_247, out a3_31, out a4_32, out a5_248, out s2_249, out s3_250, out s4_251, out s5_43, out s6_252, out s11_253, out mstatus_53)
	branch a0_51 == 0<32> l2302803E
l2302803E:
	word32 a3_65
	word32 a4_66
	word32 s6_76
	word32 s7_77
	word32 s1_254
	word32 a0_255
	word32 a1_256
	word32 a2_257
	word32 a5_258
	word32 a7_259
	word32 s2_260
	word32 s3_261
	word32 s4_262
	word32 s5_263
	word32 s8_264
	word32 s9_265
	word32 s10_266
	word32 s11_267
	word32 t4_268
	word32 ra_68 = printf(ra_35, 0x23076B6C<32>, a3_31, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_254, out a0_255, out a1_256, out a2_257, out a3_65, out a4_66, out a5_258, out a7_259, out s2_260, out s3_261, out s4_262, out s5_263, out s6_76, out s7_77, out s8_264, out s9_265, out s10_266, out s11_267, out t4_268)
	s0Out = s1
	a0Out = 0xFFFFFFF4<32>
	a3Out = a3_65
	a4Out = a4_66
	s6Out = s6_76
	s7Out = s7_77
	mstatusOut = mstatus_53
	return ra_68
l23027FF0:
	word32 a1_269
	word32 a5_270
	word32 a0_95 = net_buf_simple_add(a0_51 + 8<i32>, 2<32>, a4_32, out a1_269, out a5_270)
	Mem98[a0_95:byte] = SLICE(s1_37, byte, 0)
	Mem100[a0_95 + 1<i32>:byte] = SLICE(s1_37 >>u 8<i32>, byte, 0)
	word32 a1_105
	word32 a5_271
	net_buf_simple_add(a0_51 + 8<i32>, CONVERT(Mem100[s0_36 + 12<i32>:uint16], uint16, word32), a4_32, out a1_105, out a5_271)
	word32 a3_115
	word32 a2_272
	word32 a4_273
	word32 a5_274
	word32 a6_275
	word32 a7_276
	memcpy(a0_95 + 2<i32>, a1_105, CONVERT(Mem100[s0_36 + 12<i32>:uint16], uint16, word32), out a2_272, out a3_115, out a4_273, out a5_274, out a6_275, out a7_276)
l2302803A_thunk_bt_att_send:
	word32 a3_137
	word32 a4_138
	word32 mstatus_142
	word32 s0_144
	word32 s6_152
	word32 s7_153
	word32 a0_163
	word32 ra_143 = bt_att_send(ra_35, s1, s5_43, a0_51, a3_115, a0_95, mstatus_53, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, dwArg58, s1, dwArg74, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0158, out s0_144, out a0_163, out a3_137, out a4_138, out s6_152, out s7_153, out mstatus_142)
	s0Out = s0_144
	a0Out = a0_163
	a3Out = a3_137
	a4Out = a4_138
	s6Out = s6_152
	s7Out = s7_153
	mstatusOut = mstatus_142
	return ra_143
gatt_notify_exit:


void gatt_read_multiple_rsp(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a6 ra s0 s1 t1 tp
// Preserved: sp
gatt_read_multiple_rsp_entry:
l2302805E:
	word32 a1_38
	word32 sp_22 = fp + 0xFFFFFFF0<32>
	word32 s1_11 = a0
	word32 t1_16 = Mem9[a4 + 24<i32>:int32]
	branch a1 != 0<32> l23028074
l23028072:
	branch a3 != 0<32> l23028088
l23028088:
	word32 s0_23
	call t1_16 (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a4,a3:a2,a4:a3,ra:ra,s0:a4,s1:a0
		defs: ra:ra_25,s0:s0_23,s1:s1_24,sp:sp_22
	t1_16 = Mem9[s0_23 + 24<i32>:int32]
	a1_38 = 0<32>
l23028074:
	a1_38 = a1
l2302807C:
	call t1_16 (retsize: 0;)
		uses: a0:s1_51,a1:a1_60,a2:Mem9[sp_45 + 32<i32>:word32],a3:0<32>,a4:0<32>,ra:ra_58,s0:Mem9[sp_45 + 4<i32>:word32],s1:s1_51,tp:Mem9[sp_45 + 36<i32>:word32]
	return
gatt_read_multiple_rsp_exit:


void gatt_write_ccc_rsp(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArgA4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +00A4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s4 s8 t1 t3 tp
// Preserved: sp
gatt_write_ccc_rsp_entry:
l2302809E:
	word32 a4_24
	word32 a5_151
	word32 s4_152
	word32 a2_149
	word32 a3_150
	word32 a0_148
	word32 a1_21
	word32 s1_26 = atomic_and(a0, 0xFFFFFFFD<32>, a3, a4, mstatus, out a0_148, out a1_21, out a2_149, out a3_150, out a4_24, out a5_151, out s4_152)
	branch s1_26 == 0<32> l230280E6
l230280E6:
	word32 t1_53
	word32 tp_100
	call Mem17[a4_24 + 32<i32>:int32] (retsize: 0;)
		uses: a0:a0,a1:a4_24,a2:0<32>,a3:0<32>,a4:a4_24,mstatus:mstatus,ra:ra,s0:a0,s1:s1_26,s4:dwArg04,s8:dwLoc1C,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +00A4:dwArgA4,Stack +FFFFFFE4:dwLoc1C,t1:t1_53,t3:dwArg00,tp:tp_100
		defs: t1:t1_53,tp:tp_100
	return
l230280BA:
	branch Mem17[0x4200E1BC<32>:int32] == 0<32> l230280FC
l230280C4:
	word32 a5_57 = Mem17[a1_21:word32]
l230280CA:
	branch a5_57 != a4_24 + 48<i32> l230280DE
l230280DE:
	branch a1_21 == 0<32> l230280FC
l230280FC:
	return
l230280E0:
	a5_57 = a1_21
	a1_21 = Mem17[a1_21:word32]
l230280CE:
l230280DA_thunk_gatt_subscription_remove:
	word32 a5_156
	word32 a4_155
	word32 a3_154
	word32 s1_153
	gatt_subscription_remove(ra, a0, a0, a1_21, a4_24, a4_24, a5_57, dwArg10, dwArg14, out s1_153, out a3_154, out a4_155, out a5_156)
	return
gatt_write_ccc_rsp_exit:


word32 gatt_send.constprop.28(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gatt_indicate
//      bt_gatt_exchange_mtu
//      gatt_read_type_rsp
//      bt_gatt_read
//      gatt_prepare_write_rsp
//      bt_gatt_unsubscribe
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a4 a5 ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: a0 s0 sp
gatt_send.constprop.28_entry:
l23028106:
	branch a3 == 0<32> l2302813A
l2302813A:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg16 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg24 = <invalid>
	word32 stackArg28 = <invalid>
	word32 stackArg36 = <invalid>
	word32 stackArg40 = <invalid>
	word32 stackArg48 = <invalid>
	word32 stackArg52 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg60 = <invalid>
	word32 stackArg68 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg76 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg116 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg124 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg208 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg280 = <invalid>
	word32 stackArg296 = <invalid>
	word32 stackArg328 = <invalid>
	word32 stackArg344 = <invalid>
	word32 s0_215
	word32 a0_216
	word32 a3_217
	word32 a4_218
	word32 s6_219
	word32 s7_220
	word32 mstatus_221
	bt_att_send(ra, s0, a0, a1, a3, s3, mstatus, stackArg0, stackArg4, stackArg16, stackArg20, stackArg24, stackArg28, stackArg36, stackArg40, stackArg48, stackArg52, stackArg56, stackArg60, stackArg68, stackArg72, stackArg76, stackArg88, stackArg104, stackArg116, stackArg120, stackArg124, stackArg136, stackArg152, stackArg168, stackArg184, stackArg200, stackArg208, stackArg216, stackArg232, stackArg248, stackArg264, stackArg280, stackArg296, stackArg328, stackArg344, out s0_215, out a0_216, out a3_217, out a4_218, out s6_219, out s7_220, out mstatus_221)
l2302810E:
	Mem12[a1 + 16<i32>:word32] = a3
	Mem14[a2 + 4<i32>:word32] = a3
	Mem15[a3 + 8<i32>:word32] = 0<32>
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg8 = <invalid>
	word32 stackArg16 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg32 = <invalid>
	word32 stackArg36 = <invalid>
	word32 stackArg40 = <invalid>
	word32 stackArg52 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg68 = <invalid>
	word32 stackArg84 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg92 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg116 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg132 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg140 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg280 = <invalid>
	word32 stackArg296 = <invalid>
	word32 stackArg312 = <invalid>
	word32 stackArg344 = <invalid>
	bt_att_req_send(ra, a0, a1, a3, mstatus, stackArg8, stackArg16, stackArg20, stackArg32, stackArg36, stackArg40, stackArg52, stackArg56, stackArg64, stackArg68, stackArg84, stackArg88, stackArg92, stackArg104, stackArg116, stackArg120, stackArg132, stackArg136, stackArg140, stackArg152, stackArg168, stackArg184, stackArg200, stackArg216, stackArg232, stackArg248, stackArg264, stackArg280, stackArg296, stackArg312, stackArg344)
	a5 = a3
l2302811E:
	branch a0 == 0<32> l23028130
l23028122:
	word32 a0_172
	word32 a1_173
	word32 a2_174
	word32 a7_175
	word32 s8_176
	word32 s9_177
	word32 s10_178
	word32 s11_179
	word32 t4_180
	ra = printf(ra, 0x23076BC4<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_172, out a1_173, out a2_174, out a3, out a4, out a5, out a7_175, out s2, out s3, out s4, out s5, out s6, out s7, out s8_176, out s9_177, out s10_178, out s11_179, out t4_180)
l23028130:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	return ra
gatt_send.constprop.28_exit:


word32 gatt_indicate(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 s2, word32 s3, word32 s5, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgC8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      notify_cb
//      bt_gatt_indicate
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
gatt_indicate_entry:
l23028142:
	word32 a3_31
	word32 a4_32
	word32 s0_36
	word32 s3_41
	word32 s5_43
	word32 a0_51
	word32 mstatus_53
	word32 s1_250
	word32 a2_251
	word32 a5_252
	word32 s2_253
	word32 s4_254
	word32 s6_255
	word32 s11_256
	word32 ra_35 = bt_att_create_pdu(ra, s1, a0, CONVERT(Mem17[a2 + 40<i32>:uint16], uint16, word32) + 2<32>, a3, mstatus, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg7C, dwArgA8, dwArgC8, out s0_36, out s1_250, out a0_51, out a2_251, out a3_31, out a4_32, out a5_252, out s2_253, out s3_41, out s4_254, out s5_43, out s6_255, out s11_256, out mstatus_53)
	branch a0_51 == 0<32> l230281C6
l230281C6:
	word32 a3_65
	word32 a4_66
	word32 s1_69
	word32 s6_76
	word32 s7_77
	word32 a0_257
	word32 a1_258
	word32 a2_259
	word32 a5_260
	word32 a7_261
	word32 s2_262
	word32 s3_263
	word32 s4_264
	word32 s5_265
	word32 s8_266
	word32 s9_267
	word32 s10_268
	word32 s11_269
	word32 t4_270
	word32 ra_68 = printf(ra_35, 0x23076B40<32>, a3_31, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_69, out a0_257, out a1_258, out a2_259, out a3_65, out a4_66, out a5_260, out a7_261, out s2_262, out s3_263, out s4_264, out s5_265, out s6_76, out s7_77, out s8_266, out s9_267, out s10_268, out s11_269, out t4_270)
	s0Out = <invalid>
	s1Out = s1_69
	a0Out = 0xFFFFFFF4<32>
	a3Out = a3_65
	a4Out = a4_66
	s6Out = s6_76
	s7Out = s7_77
	mstatusOut = <invalid>
	return ra_68
l23028166:
	word32 a3_125
	word32 a1_271
	word32 a5_272
	word32 a0_95 = net_buf_simple_add(a0_51 + 8<i32>, 2<32>, a4_32, out a1_271, out a5_272)
	Mem98[a0_95:byte] = SLICE(s3_41, byte, 0)
	Mem100[a0_95 + 1<i32>:byte] = SLICE(s3_41 >>u 8<u32>, byte, 0)
	word32 a1_105
	word32 a5_273
	net_buf_simple_add(a0_51 + 8<i32>, CONVERT(Mem100[s0_36 + 40<i32>:uint16], uint16, word32), a4_32, out a1_105, out a5_273)
	word32 a5_111
	word32 a2_274
	word32 a3_275
	word32 a4_276
	word32 a6_277
	word32 a7_278
	memcpy(a0_95 + 2<i32>, a1_105, CONVERT(Mem100[s0_36 + 40<i32>:uint16], uint16, word32), out a2_274, out a3_275, out a4_276, out a5_111, out a6_277, out a7_278)
	word32 s0_123 = Mem100[a5_111 + 32<i32>:word32]
	branch a5_111 != 0<32> l230281BA
l230281BA:
	a3_125 = s0_123
l2302819E:
	a3_125 = 0<32>
l230281A2:
l230281B6_thunk_gatt_send.constprop.28:
	word32 a3_147
	word32 a4_148
	word32 s1_152
	word32 s6_159
	word32 s7_160
	word32 a5_279
	word32 s2_280
	word32 s3_281
	word32 s4_282
	word32 s5_283
	word32 ra_151 = gatt_send.constprop.28(ra_35, s5_43, a0_51, dwArg48, a3_125, dwArg18, s5, s3, dwArg88, dwArgAC, out s1_152, out a3_147, out a4_148, out a5_279, out s2_280, out s3_281, out s4_282, out s5_283, out s6_159, out s7_160)
	s0Out = <invalid>
	s1Out = s1_152
	a0Out = s5_43
	a3Out = a3_147
	a4Out = a4_148
	s6Out = s6_159
	s7Out = s7_160
	mstatusOut = <invalid>
	return ra_151
gatt_indicate_exit:


void match_uuid(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
match_uuid_entry:
l230281E6:
	Mem5[a0:word32] = a1
	return
match_uuid_exit:


void sc_indicate_rsp(word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg24, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sc_indicate_rsp_entry:
l230281EC:
	word32 a3_21
	word32 a4_22
	word32 a0_119
	word32 a1_120
	word32 a2_121
	word32 a5_122
	word32 s4_123
	branch (atomic_get(atomic_and(0x420125F8<32>, 0xFFFFFFFD<32>, a3, a4, mstatus, out a0_119, out a1_120, out a2_121, out a3_21, out a4_22, out a5_122, out s4_123)) & 1<32>) == 0<32> l23028224
l23028224:
	return
l23028212:
l23028220_thunk_k_delayed_work_submit:
	word32 s1_124
	word32 a0_125
	word32 a3_126
	word32 a4_127
	word32 a5_128
	word32 s2_129
	word32 s3_130
	word32 s4_131
	word32 s5_132
	word32 s6_133
	word32 s8_134
	k_delayed_work_submit(0<32>, a3_21, a4_22, mstatus, dwArg04, dwArg08, dwArg24, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, out s1_124, out a0_125, out a3_126, out a4_127, out a5_128, out s2_129, out s3_130, out s4_131, out s5_132, out s6_133, out s8_134)
	return
sc_indicate_rsp_exit:


void disconnected_cb(word32 ra, word32 a1, word32 a4, word32 s6, word32 mstatus, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s6:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
disconnected_cb_entry:
l2302822E:
	word32 a0_5 = Mem0[a4 + 8<i32>:word32]
	branch a4 != 0x230287F8<32> l2302830E
l2302830E:
	return
l2302823C:
	word32 s3_28 = Mem27[a0_5 + 12<i32>:int32]
	branch CONVERT(Mem27[s3_28 + 20<i32>:uint16], uint16, word32) == 0<32> l230282A6
l2302825A:
	word32 s1_114 = a1
	word32 s2_115 = a0_5
	word32 s0_113 = s3_28 + 1<i32>
	word32 s4_117 = 0<32>
	word32 s5_118 = a1 + 112<i32>
	s3_116 = s3_28
l2302826E:
	word32 s3_116
	branch CONVERT(Mem39[s0_113 + 7<i32>:uint16], uint16, word32) == 0<32> l2302828C
l23028274:
	branch CONVERT(Mem39[s1_114 + 8<i32>:byte], byte, word32) == CONVERT(Mem39[s0_113 + -1<i32>:byte], byte, word32) l230282BE
l230282BE:
	word32 a0_47
	word32 a3_379
	word32 a4_380
	word32 a5_381
	word32 s1_53 = bt_conn_addr_le_cmp(s1_114, s0_113, s6, out a0_47, out a3_379, out a4_380, out a5_381)
	branch a0_47 != 0<32> l23028280
l230282C8:
	word32 a0_58
	word32 a5_388
	word32 a3_386
	word32 a4_387
	s1_114 = bt_addr_le_is_bonded(CONVERT(Mem39[s1_53 + 8<i32>:byte], byte, word32), s5_118, dwLoc18, out a0_58, out a3_386, out a4_387, out a5_388, out s2_115)
	branch a0_58 != 0<32> l23028302
l23028302:
	word32 a2_389
	word32 a3_390
	word32 a7_393
	word32 a5_391
	word32 a6_392
	memcpy(s0_113, s5_118, 7<32>, out a2_389, out a3_390, out a4, out a5_391, out a6_392, out a7_393)
l230282D4:
	word32 a2_394
	word32 a3_395
	word32 a7_398
	word32 a5_396
	word32 a6_397
	memcpy(s0_113, fp + -56<i32>, 7<32>, out a2_394, out a3_395, out a4, out a5_396, out a6_397, out a7_398)
	Mem102[s0_113 + 4095<i32>:byte] = 0<8>
	Mem103[s0_113 + 7<i32>:word16] = 0<16>
l23028280:
	word32 a0_110
	word32 a3_125
	word32 s8_383
	word32 a2_382
	s0_113 = bt_conn_lookup_addr_le(CONVERT(Mem39[s0_113 + -1<i32>:byte], byte, word32), s0_113, mstatus, out s1_114, out a0_110, out a2_382, out a3_125, out a4, out s2_115, out s3_116, out s4_117, out s5_118, out s8_383)
	branch a0_110 != 0<32> l230282F2
l230282F2:
	branch CONVERT(Mem39[a0_110 + 13<i32>:byte], byte, word32) != 4<32> l230282FC
l230282FA:
	s4_117 = 1<32>
l230282FC:
	word32 a3_384
	word32 a5_385
	s1_114 = bt_conn_unref(s0_113, a3_125, a4, mstatus, out a3_384, out a4, out a5_385)
l2302828C:
	s0_113 = s0_113 + 0xA<32>
	branch s0_113 != s3_28 + 21<i32> l2302826E
l23028292:
	branch s4_117 != 0<32> l230282A6
l23028296:
	word32 a5_155 = Mem153[s3_116 + 24<i32>:int32]
	Mem156[s3_116 + 20<i32>:word16] = 0<16>
	branch a5_155 == 0<32> l230282A6
l230282A0:
	word32 a2_190
	word32 t3_191
	word32 s8_192
	word32 a6_193
	word32 tp_194
	word32 a3_195
	word32 a7_196
	word32 t0_197
	word32 t1_198
	word32 t4_199
	word32 t5_200
	word32 t6_201
	word32 mstatus_202
	call a5_155 (retsize: 0;)
		uses: a0:s2_158,a1:0<32>,a2:a2_190,a3:a3_195,a4:a4_162,a6:a6_193,a7:a7_196,mstatus:mstatus_202,ra:ra,s0:s0_142,s1:s1_168,s2:s2_158,s3:s3_150,s4:s4_147,s5:s5_169,s6:s3_28 + 21<i32>,s7:4<32>,s8:s8_192,Stack +0028:dwLoc18,t0:t0_197,t1:t1_198,t3:t3_191,t4:t4_199,t5:t5_200,t6:t6_201,tp:tp_194
		defs: a2:a2_190,a3:a3_195,a6:a6_193,a7:a7_196,mstatus:mstatus_202,s8:s8_192,t0:t0_197,t1:t1_198,t3:t3_191,t4:t4_199,t5:t5_200,t6:t6_201,tp:tp_194
l230282A6:
	0<32> = dwArg0198
	return
disconnected_cb_exit:


word32 find_sc_cfg(word32 a0, word32 a1, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sc_save
//      sc_ccc_cfg_write
//      update_ccc
// MayUse:  a0:[0..31] a1:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
find_sc_cfg_entry:
l23028312:
	word32 s2_135 = 0x42012650<32>
	word32 s1_134 = 0<32>
l2302833C:
	word32 a0_120
	branch CONVERT(Mem24[s2_135:byte], byte, word32) != a0 l23028370
l23028344:
	word32 s7_42 = s1_134 + 0xC<32>
	word32 a1_150
	word32 a2_151
	word32 a4_152
	word32 a5_153
	branch memcmp(s2_135 + 1<i32>, a1, 7<32>, out a1_150, out a2_151, out a3, out a4_152, out a5_153) != 0<32> l23028370
l23028370:
	s1_134 = s1_134 + 1<32>
	s2_135 = s2_135 + 0xC<32>
	branch s1_134 != 4<32> l2302833C
l23028378:
	a0_120 = 0<32>
l23028356:
	a0_120 = s7_42 + 0x42012650<32>
l2302835A:
	0<32> = dwArg0128
	s1Out = s1_134
	a0Out = a0_120
	a2Out = dwArgB8
	a3Out = a3
	s2Out = s2_135
	s3Out = 4<32>
	s4Out = dwArg78
	s5Out = a1
	return dwArgE4
find_sc_cfg_exit:


word32 gatt_write_ccc.constprop.21(word32 ra, word32 s1, word32 a0, word32 a3, word32 s2, word32 s3, word32 s5, word32 mstatus, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg7C, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgC8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_subscribe
//      bt_gatt_unsubscribe
//      bt_gatt_connected
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31]
// LiveOut: a0 a3 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
gatt_write_ccc.constprop.21_entry:
l2302837C:
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 s0_36
	word32 s1_37
	word32 s2_40
	word32 s3_41
	word32 s5_43
	word32 s6_44
	word32 a0_51
	word32 mstatus_53
	word32 a2_197
	word32 s4_198
	word32 s11_199
	word32 ra_35 = bt_att_create_pdu(ra, s1, a0, 4<32>, a3, mstatus, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg7C, dwArgA8, dwArgC8, out s0_36, out s1_37, out a0_51, out a2_197, out a3_31, out a4_32, out a5_33, out s2_40, out s3_41, out s4_198, out s5_43, out s6_44, out s11_199, out mstatus_53)
	branch a0_51 == 0<32> l230283EA
l230283EA:
	s0Out = <invalid>
	s1Out = s1_37
	a0Out = 0xFFFFFFF4<32>
	a3Out = a3_31
	a5Out = a5_33
	s2Out = s2_40
	s3Out = s3_41
	s4Out = dwArg04
	s5Out = s5_43
	s6Out = s6_44
	mstatusOut = <invalid>
	return ra_35
l2302839E:
	word32 a5_73
	word32 a1_200
	word32 a0_71 = net_buf_simple_add(a0_51 + 8<i32>, 2<32>, a4_32, out a1_200, out a5_73)
	Mem74[a0_71:byte] = SLICE(s0_36, byte, 0)
	Mem76[a0_71 + 1<i32>:byte] = SLICE(s0_36 >>u 8<i32>, byte, 0)
	word32 a5_201
	word32 a0_202
	word32 a1_203
	word32 a2_204
	word32 a3_205
	word32 a4_206
	word32 a5_207
	word32 s4_208
	word32 s1_91 = atomic_or(s0_36 >>u 8<i32>, 2<32>, a3_31, net_buf_simple_add_le16(a0_51 + 8<i32>, s5_43, a5_73, out a5_201), mstatus_53, out a0_202, out a1_203, out a2_204, out a3_205, out a4_206, out a5_207, out s4_208)
l230283E6_thunk_gatt_send.constprop.28:
	word32 a3_110
	word32 a5_112
	word32 s1_115
	word32 s2_118
	word32 s3_119
	word32 s4_120
	word32 s5_121
	word32 s6_122
	word32 a4_209
	word32 s7_210
	word32 ra_114 = gatt_send.constprop.28(ra_35, dwArg04, s1_91, 0x2302809E<32>, s2_40, dwArg18, s5, s3, dwArg88, dwArgAC, out s1_115, out a3_110, out a4_209, out a5_112, out s2_118, out s3_119, out s4_120, out s5_121, out s6_122, out s7_210)
	s0Out = <invalid>
	s1Out = s1_115
	a0Out = dwArg04
	a3Out = a3_110
	a5Out = a5_112
	s2Out = s2_118
	s3Out = s3_119
	s4Out = s4_120
	s5Out = s5_121
	s6Out = s6_122
	mstatusOut = <invalid>
	return ra_114
gatt_write_ccc.constprop.21_exit:


void read_appearance(word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
read_appearance_entry:
l230283FE:
	branch a4 >u 2<32> l2302842E
l23028414:
	word32 s0_13 = 2<32> - a4
	branch a3 >= s0_13 l2302841E
l2302841C:
	s0_13 = a3
l2302841E:
	word32 a2_75
	word32 a3_76
	word32 a4_77
	word32 a5_78
	word32 a6_79
	word32 a7_80
	memcpy(a2, fp + 0xFFFFFFEE<32> + a4, s0_13, out a2_75, out a3_76, out a4_77, out a5_78, out a6_79, out a7_80)
l2302842E:
	return
read_appearance_exit:


void read_ppcp(word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
read_ppcp_entry:
l23028438:
	branch a4 >u 8<32> l2302846C
l23028454:
	word32 s0_16 = 8<32> - a4
	branch a3 >= s0_16 l2302845E
l2302845C:
	s0_16 = a3
l2302845E:
	word32 a2_78
	word32 a3_79
	word32 a4_80
	word32 a5_81
	word32 a6_82
	word32 a7_83
	memcpy(a2, fp + 0xFFFFFFE8<32> + a4, s0_16, out a2_78, out a3_79, out a4_80, out a5_81, out a6_82, out a7_83)
l2302846C:
	return
read_ppcp_exit:


void read_name(word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
read_name_entry:
l23028476:
	word32 a0_18 = bt_get_name()
	word32 a3_21
	word32 a4_22
	word32 a2_108
	word32 a1_107
	word32 a5_109
	word32 a0_20 = strlen(a0_18, out a1_107, out a2_108, out a3_21, out a4_22, out a5_109)
	branch CONVERT(SLICE(a0_20, word16, 0), word16, word32) <u a4_22 l230284BE
l2302849E:
	word32 s0_34 = (a0_20 & 0xFFFFFFF<32>) - a4_22
	branch a3_21 >= s0_34 l230284B0
l230284AE:
	s0_34 = a3_21
l230284B0:
	word32 a2_110
	word32 a3_111
	word32 a4_112
	word32 a5_113
	word32 a6_114
	word32 a7_115
	memcpy(a2, a0_18 + a4_22, s0_34 & 0xFFFFFFF<32>, out a2_110, out a3_111, out a4_112, out a5_113, out a6_114, out a7_115)
l230284BE:
	return
read_name_exit:


void bt_gatt_attr_read_ccc(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_attr_read_ccc_entry:
l230284CC:
	word32 a0_19
	word32 a4_20
	word32 a3_29
	word32 s4_130
	word32 s1_23 = find_ccc_cfg(a0, Mem9[a1 + 12<i32>:word32], out a0_19, out a3_29, out a4_20, out s4_130)
	branch a0_19 == 0<32> l230284EC
l230284E8:
l230284EC:
	branch a4_20 >u 2<32> l23028512
l230284F8:
	word32 s0_41 = 2<32> - a4_20
	branch a3_29 >= s0_41 l23028502
l23028500:
	s0_41 = a3_29
l23028502:
	word32 a7_136
	word32 a6_135
	word32 a5_134
	word32 a4_133
	word32 a3_132
	word32 a2_131
	memcpy(s1_23, fp + -18<i32> + a4_20, s0_41, out a2_131, out a3_132, out a4_133, out a5_134, out a6_135, out a7_136)
l23028512:
	return
bt_gatt_attr_read_ccc_exit:


void bt_gatt_attr_read_service(word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_gatt_attr_read_service_entry:
l2302851E:
	word32 a2_21
	word32 a1_24
	word32 a1_9 = Mem7[a1 + 12<i32>:word32]
	branch CONVERT(Mem7[a1_9:byte], byte, word32) != 0<32> l23028560
l23028560:
	branch a4 >u 0x10<32> l23028556
l2302856A:
	word32 s0_17 = 0x10<32> - a4
	branch a3 >= s0_17 l23028574
l23028572:
	s0_17 = a3
l23028574:
	a2_21 = s0_17
	a1_24 = a1_9 + 1<32> + a4
l2302852E:
	branch a4 >u 2<32> l23028556
l2302853E:
	word32 s0_29 = 2<32> - a4
	branch a3 >= s0_29 l23028548
l23028546:
	s0_29 = a3
l23028548:
	a2_21 = s0_29
	a1_24 = fp + 0xFFFFFFEE<32> + a4
l23028552:
	word32 a2_100
	word32 a3_101
	word32 a4_102
	word32 a5_103
	word32 a6_104
	word32 a7_105
	memcpy(a2, a1_24, a2_21, out a2_100, out a3_101, out a4_102, out a5_103, out a6_104, out a7_105)
l23028556:
	return
bt_gatt_attr_read_service_exit:


word32 sc_save(word32 ra, word32 a0, word32 a1, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sc_ccc_cfg_write
//      notify_cb
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: ra s0 s1 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sc_save_entry:
l2302857A:
	word32 a0_24
	word32 s3_279
	word32 a3_278
	word32 a2_277
	word32 s2_30
	word32 s1_108
	word32 s4_113
	word32 s5_114
	find_sc_cfg(a0, a1, dwArgF8, out s1_108, out a0_24, out a2_277, out a3_278, out s2_30, out s3_279, out s4_113, out s5_114)
	word32 s0_42 = a0_24
	branch a0_24 != 0<32> l230285D6
l23028598:
	word32 a0_47
	word32 s3_54
	word32 a3_62
	word32 a2_280
	find_sc_cfg(a0_24, fp + -40<i32>, dwArgF8, out s1_108, out a0_47, out a2_280, out a3_62, out s2_30, out s3_54, out s4_113, out s5_114)
	s0_42 = a0_47
	branch a0_47 != 0<32> l230285C8
l230285C8:
	Mem66[a0_47:byte] = SLICE(s4_113, byte, 0)
	word32 a7_286
	word32 a5_284
	word32 a6_285
	word32 a4_283
	word32 a3_282
	word32 a2_281
	memcpy(a0_47 + 1<32>, s3_54, 7<32>, out a2_281, out a3_282, out a4_283, out a5_284, out a6_285, out a7_286)
l230285D6:
	word32 a4_85 = CONVERT(Mem84[s0_42 + 8<i32>:uint16], uint16, word32)
	word32 a5_86 = CONVERT(Mem84[s0_42 + 10<i32>:uint16], uint16, word32)
	branch a4_85 != 0<32> l230285EC
l230285EC:
	branch s2_30 <u a4_85 l230285F6
l230285F6:
	Mem88[s0_42 + 8<i32>:word16] = SLICE(s2_30, word16, 0)
l230285E0:
	branch a5_86 != 0<32> l230285F0
l230285F0:
	branch a5_86 >=u s1_108 l230285B8
l230285F4:
l230285E2:
	Mem92[s0_42 + 8<i32>:word16] = SLICE(s2_30, word16, 0)
l230285E6:
	Mem96[s0_42 + 10<i32>:word16] = SLICE(s1_108, word16, 0)
l230285AC:
	word32 t4_302
	word32 s11_301
	word32 s9_299
	word32 s10_300
	word32 s8_298
	word32 s7_297
	word32 s6_296
	word32 s3_295
	word32 s2_294
	word32 a7_293
	word32 a5_292
	word32 a4_291
	word32 a3_290
	word32 a2_289
	word32 a1_288
	word32 a0_287
	ra = printf(ra, 0x23076BE0<32>, a3_62, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_108, out a0_287, out a1_288, out a2_289, out a3_290, out a4_291, out a5_292, out a7_293, out s2_294, out s3_295, out s4_113, out s5_114, out s6_296, out s7_297, out s8_298, out s9_299, out s10_300, out s11_301, out t4_302)
l230285B8:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_108
	s4Out = s4_113
	s5Out = s5_114
	return ra
sc_save_exit:


void sc_ccc_cfg_write(word32 ra, word32 a0, word32 a2, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, word32 dwArgE8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sc_ccc_cfg_write_entry:
l230285FC:
	word32 a0_9 = CONVERT(Mem7[a0 + 8<i32>:byte], byte, word32)
	branch a2 != 2<32> l23028620
l23028620:
	word32 a0_12
	word32 s1_120
	word32 a2_121
	word32 a3_122
	word32 s2_123
	word32 s3_124
	word32 s4_125
	word32 s5_126
	find_sc_cfg(a0_9, a0 + 112<i32>, dwArg0118, out s1_120, out a0_12, out a2_121, out a3_122, out s2_123, out s3_124, out s4_125, out s5_126)
	branch a0_12 == 0<32> l23028618
l23028626:
	word32 t1_131
	word32 a0_132
	word32 a1_133
	word32 a2_134
	word32 a3_135
	word32 a4_136
	word32 a5_137
	memset(ra, a0_12, 0<32>, 0xC<32>, out t1_131, out a0_132, out a1_133, out a2_134, out a3_135, out a4_136, out a5_137)
l23028610:
	word32 s0_127
	word32 s1_128
	word32 s4_129
	word32 s5_130
	sc_save(ra, a0_9, a0 + 112<i32>, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgE8, dwArg0118, out s0_127, out s1_128, out s4_129, out s5_130)
l23028618:
	return
sc_ccc_cfg_write_exit:


void notify_cb(word32 ra, word32 a1, word32 a4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArgB8, word32 dwArgE8, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
notify_cb_entry:
l23028630:
	word32 a0_5 = Mem0[a4 + 8<i32>:word32]
	branch a4 == 0x230287F8<32> l23028642
l23028642:
	word32 sp_161 = fp + -64<i32>
	word32 s4_102 = Mem28[a0_5 + 12<i32>:int32]
	word32 s1_133 = a1
	branch s4_102 == 0x4200D514<32> l230286BE
l230286BE:
	word32 s0_119 = 0x42012650<32>
	word32 s5_103 = 0x42012680<32>
l230286CA:
	word32 s3_39 = s0_119 + 1<i32>
	word32 a3_49
	word32 a1_673
	word32 a2_674
	word32 a4_675
	word32 a5_676
	branch memcmp(s3_39, fp + -56<i32>, 7<32>, out a1_673, out a2_674, out a3_49, out a4_675, out a5_676) == 0<32> l23028714
l230286E4:
	word32 a0_56
	word32 a3_59
	word32 a4_60
	word32 s3_66
	word32 s2_667
	word32 s8_668
	word32 a5_666
	word32 s1_665
	s0_119 = bt_conn_lookup_state_le(s3_39, 4<32>, a3_49, mstatus, out s1_665, out a0_56, out a3_59, out a4_60, out a5_666, out s2_667, out s3_66, out s4_102, out s8_668)
	branch a0_56 != 0<32> l2302871C
l2302871C:
	word32 a5_671
	word32 a3_669
	word32 a4_670
	s1_133 = bt_conn_unref(s0_119, a3_59, a4_60, mstatus, out a3_669, out a4_670, out a5_671)
l230286EE:
	ra = sc_save(ra, CONVERT(Mem46[s0_119:byte], byte, word32), s3_66, dwArg00, dwArg04, dwArg28, s7, dwArgB8, dwArgE8, out s0_119, out s1_133, out s4_102, out s5_103)
l23028714:
	s0_119 = s0_119 + 0xC<32>
	branch s0_119 != s5_103 l230286CA
l2302871A:
l2302866C:
	word32 s0_126 = s4_102 + 1<i32>
	word32 s6_127 = s4_102 + 21<i32>
	word32 s7_128 = 4<32>
l23028678:
	branch CONVERT(Mem131[s0_126 + 7<i32>:uint16], uint16, word32) != CONVERT(Mem131[s1_133 + 4<i32>:uint16], uint16, word32) l2302869E
l23028684:
	word32 a0_138
	word32 s4_145
	word32 s3_661
	word32 s2_143
	word32 a2_139
	word32 s8_147
	word32 s5_146
	word32 a4_150
	word32 a3_153
	s0_126 = bt_conn_lookup_addr_le(CONVERT(Mem131[s0_126 + -1<i32>:byte], byte, word32), s0_126, mstatus, out s1_133, out a0_138, out a2_139, out a3_153, out a4_150, out s2_143, out s3_661, out s4_145, out s5_146, out s8_147)
	word32 s3_154 = a0_138
	branch a0_138 == 0<32> l2302869E
l23028692:
	word32 mstatus_182
	word32 a3_178
	branch CONVERT(Mem131[a0_138 + 13<i32>:byte], byte, word32) == s7_128 l23028722
l23028722:
	word32 a2_177
	word32 a5_157 = Mem131[s4_145 + 32<i32>:int32]
	branch a5_157 == 0<32> l23028732
l23028728:
	word32 a0_163
	word32 t3_179
	word32 a6_180
	word32 tp_181
	word32 a7_183
	word32 s10_184
	word32 s11_185
	word32 s9_186
	word32 t0_187
	word32 t1_188
	word32 t4_189
	word32 t5_190
	word32 t6_191
	call a5_157 (retsize: 0;)
		uses: a1:s2_143,a2:a2_177,a3:a3_178,a4:a4_150,a6:a6_180,a7:a7_183,mstatus:mstatus_182,ra:ra_159,s0:s0_141,s1:s1_142,s10:s10_184,s11:s11_185,s2:s2_143,s3:a0_138,s4:s4_145,s5:s5_146,s6:s6_160,s7:s7_156,s8:s8_147,s9:s9_186,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +00B8:dwArgB8,Stack +00E8:dwArgE8,t0:t0_187,t1:t1_188,t3:t3_179,t4:t4_189,t5:t5_190,t6:t6_191,tp:tp_181
		defs: a0:a0_163,a2:a2_177,a3:a3_178,a4:a4_164,a6:a6_180,a7:a7_183,mstatus:mstatus_182,ra:ra_168,s0:s0_169,s1:s1_166,s10:s10_184,s11:s11_185,s2:s2_167,s3:s3_170,s5:s5_172,s6:s6_173,s7:s7_174,s8:s8_175,s9:s9_186,sp:sp_162,t0:t0_187,t1:t1_188,t3:t3_179,t4:t4_189,t5:t5_190,t6:t6_191,tp:tp_181
	a2_139 = a2_177
	a3_153 = a3_178
	mstatus = mstatus_182
	branch a0_163 != 0<32> l23028732
l23028732:
	word32 a3_212
	word32 a4_213
	word32 a0_209
	word32 s1_198 = Mem131[a2_139 + 8<i32>:word32]
	word32 a1_200 = CONVERT(Mem131[s2_143 + 16<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32> << 16<i32>
	branch CONVERT(Mem131[s1_133 + 4<i32>:uint16], uint16, word32) != s8_147 l2302875E
l2302875E:
	ra = gatt_notify(ra, s1_198, s3_154, a1_200 >>u 16<i32>, a2_139, a3_153, s2_143, mstatus, Mem131[sp_161:word32], Mem131[sp_161 + 4<i32>:word32], Mem131[sp_161 + 8<i32>:word32], Mem131[sp_161 + 16<i32>:word32], Mem131[sp_161 + 20<i32>:word32], Mem131[sp_161 + 24<i32>:word32], Mem131[sp_161 + 28<i32>:word32], Mem131[sp_161 + 32<i32>:word32], Mem131[sp_161 + 36<i32>:word32], Mem131[sp_161 + 40<i32>:word32], Mem131[sp_161 + 48<i32>:word32], Mem131[sp_161 + 52<i32>:word32], Mem131[sp_161 + 56<i32>:word32], Mem131[sp_161 + 60<i32>:word32], Mem131[sp_161 + 68<i32>:word32], Mem131[sp_161 + 72<i32>:word32], Mem131[sp_161 + 76<i32>:word32], Mem131[sp_161 + 80<i32>:word32], Mem131[sp_161 + 84<i32>:word32], Mem131[sp_161 + 88<i32>:word32], Mem131[sp_161 + 92<i32>:word32], Mem131[sp_161 + 116<i32>:word32], Mem131[sp_161 + 120<i32>:word32], Mem131[sp_161 + 124<i32>:word32], Mem131[sp_161 + 136<i32>:word32], Mem131[sp_161 + 152<i32>:word32], Mem131[sp_161 + 156<i32>:word32], Mem131[sp_161 + 168<i32>:word32], Mem131[sp_161 + 184<i32>:word32], Mem131[sp_161 + 200<i32>:word32], Mem131[sp_161 + 208<i32>:word32], Mem131[sp_161 + 216<i32>:word32], Mem131[sp_161 + 232<i32>:word32], Mem131[sp_161 + 248<i32>:word32], Mem131[sp_161 + 264<i32>:word32], Mem131[sp_161 + 280<i32>:word32], Mem131[sp_161 + 296<i32>:word32], Mem131[sp_161 + 328<i32>:word32], Mem131[sp_161 + 344<i32>:word32], out s0_126, out a0_209, out a3_212, out a4_213, out s6_127, out s7_128, out mstatus)
l23028748:
	word32 s1_672
	ra = gatt_indicate(ra, s1_198, s3_154, a2_139, a3_153, s2_143, s3_154, s5_146, mstatus, Mem131[sp_161 + 8<i32>:word32], Mem131[sp_161 + 16<i32>:word32], Mem131[sp_161 + 20<i32>:word32], Mem131[sp_161 + 24<i32>:word32], Mem131[sp_161 + 32<i32>:word32], Mem131[sp_161 + 36<i32>:word32], Mem131[sp_161 + 48<i32>:word32], Mem131[sp_161 + 52<i32>:word32], Mem131[sp_161 + 56<i32>:word32], Mem131[sp_161 + 72<i32>:word32], Mem131[sp_161 + 80<i32>:word32], Mem131[sp_161 + 84<i32>:word32], Mem131[sp_161 + 88<i32>:word32], Mem131[sp_161 + 92<i32>:word32], Mem131[sp_161 + 120<i32>:word32], Mem131[sp_161 + 124<i32>:word32], Mem131[sp_161 + 136<i32>:word32], Mem131[sp_161 + 156<i32>:word32], Mem131[sp_161 + 168<i32>:word32], Mem131[sp_161 + 172<i32>:word32], Mem131[sp_161 + 200<i32>:word32], out s0_126, out s1_672, out a0_209, out a3_212, out a4_213, out s6_127, out s7_128, out mstatus)
l2302874C:
	word32 a5_679
	word32 a4_678
	word32 a3_677
	s1_133 = bt_conn_unref(s0_126, a3_212, a4_213, mstatus, out a3_677, out a4_678, out a5_679)
	branch a0_209 < 0<32> l23028764
l23028764:
l23028758:
	Mem284[s1_133:word32] = 0<32>
l2302872E:
	mstatus = mstatus_182
	a3_153 = a3_178
l2302869A:
	word32 a3_662
	word32 a4_663
	word32 a5_664
	s1_133 = bt_conn_unref(s0_126, a3_153, a4_150, mstatus, out a3_662, out a4_663, out a5_664)
l2302869E:
	s0_126 = s0_126 + 0xA<32>
	branch s6_127 != s0_126 l23028678
l230286A4:
l230286A6:
	0<32> = dwArg0198
	return
l2302863E:
	return
notify_cb_exit:


word32 sc_indicate(word32 s1, word32 a3, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_service_unregister
//      bt_gatt_service_register
// MayUse:  a3:[0..31] mstatus:[0..31] s1:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sc_indicate_entry:
l23028768:
	word32 a4_46
	word32 a0_23
	word32 a4_27
	word32 s3_33
	word32 a5_297
	word32 s2_298
	word32 s4_299
	word32 s8_300
	word32 s1_31
	word32 a3_221
	word32 s0_30 = bt_conn_lookup_state_le(0<32>, 4<32>, a3, mstatus, out s1_31, out a0_23, out a3_221, out a4_27, out a5_297, out s2_298, out s3_33, out s4_299, out s8_300)
	branch a0_23 == 0<32> l230287D0
l2302878C:
	word32 a0_42
	word32 a1_301
	word32 a2_302
	word32 a5_303
	word32 s4_304
	s1_31 = atomic_or(s0_30 + 1528<i32>, 1<32>, a3_221, a4_27, mstatus, out a0_42, out a1_301, out a2_302, out a3_221, out a4_46, out a5_303, out s4_304)
	branch (a0_42 & 1<32>) != 0<32> l230287D0
l230287D0:
	a4_46 = CONVERT(Mem19[s0_30 + 1572<i32>:uint16], uint16, word32)
	word32 a5_56 = CONVERT(Mem19[s0_30 + 1574<i32>:uint16], uint16, word32)
	branch s3_33 <u a4_46 l230287EE
l230287EE:
	Mem58[s0_30 + 1572<i32>:word16] = SLICE(s3_33, word16, 0)
	branch a5_56 >=u s1_31 l230287A2
l230287F6:
l230287DC:
	branch a5_56 <u s1_31 l2302879E
l2302879A:
	Mem60[s0_30 + 1572<i32>:word16] = SLICE(s3_33, word16, 0)
l2302879E:
	Mem63[s0_30 + 1574<i32>:word16] = SLICE(s1_31, word16, 0)
l230287A2:
	branch (atomic_get(s0_30 + 1612<i32>) >> 1<i32> & 1<32>) != 0<32> l230287E0
l230287B0:
	branch a0_23 == 0<32> l230287E0
l230287E0:
	return a3_221
l230287B4:
	word32 s8_313
	word32 a3_96
	word32 a4_97
	word32 s3_309
	word32 s4_310
	word32 s5_311
	word32 s6_312
	word32 s1_305
	word32 a0_306
	word32 a5_307
	word32 s2_308
	word32 s0_99 = k_delayed_work_submit(0xA<32>, a3_221, a4_46, mstatus, dwLoc1C, s2, dwArg04, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s1_305, out a0_306, out a3_96, out a4_97, out a5_307, out s2_308, out s3_309, out s4_310, out s5_311, out s6_312, out s8_313)
l230287CC_thunk_bt_conn_unref:
	word32 a4_314
	word32 a3_126
	word32 a5_315
	bt_conn_unref(s0_99, a3_96, a4_97, mstatus, out a3_126, out a4_314, out a5_315)
	return a3_126
sc_indicate_exit:


void bt_gatt_attr_write_ccc(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] ra:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_attr_write_ccc_entry:
l230287F8:
	word32 sp_107 = fp + -48<i32>
	word32 s5_114 = Mem17[a1 + 12<i32>:int32]
	branch a4 != 0<32> l23028856
l23028810:
	branch CONVERT(SLICE(a3 + -1<i32>, word16, 0), word16, word32) >u 1<32> l23028856
l23028820:
	branch a3 != 1<32> l2302886A
l2302886A:
l23028828:
l2302882C:
	word32 a0_44
	word32 s4_49
	word32 a4_103
	word32 a3_104
	word32 s1_111 = find_ccc_cfg(a0, s5_114, out a0_44, out a3_104, out a4_103, out s4_49)
	word32 s0_102 = a0_44
	branch a0_44 != 0<32> l23028888
l2302883C:
	branch s1_111 == 0<32> l23028856
l2302883E:
	word32 a0_58
	word32 a3_68
	word32 a4_374
	s1_111 = find_ccc_cfg(a0_44, s5_114, out a0_58, out a3_68, out a4_374, out s4_49)
	s0_102 = a0_58
	branch a0_58 != 0<32> l23028874
l23028874:
	word32 a7_378
	word32 a2_375
	word32 a5_376
	word32 a6_377
	memcpy(a0_58 + 1<32>, a0 + 112<i32>, 7<32>, out a2_375, out a3_104, out a4_103, out a5_376, out a6_377, out a7_378)
	Mem89[a0_58:byte] = SLICE(CONVERT(Mem17[a0 + 8<i32>:byte], byte, word32), byte, 0)
l23028888:
	word32 a5_92 = Mem91[s5_114 + 28<i32>:int32]
	branch a5_92 != 0<32> l230288C4
l230288C4:
	word32 s9_220
	word32 s7_219
	word32 s6_218
	word32 s10_216
	word32 s11_217
	word32 a6_118
	word32 a0_120
	word32 a5_124
	word32 a7_125
	word32 t0_126
	word32 t1_127
	word32 t4_128
	word32 t5_129
	word32 t6_130
	call a5_92 (retsize: 0;)
		uses: a0:a0,a1:s4_95,a2:s1_93,a3:a3_104,a4:a4_103,a5:a5_124,a6:a6_118,a7:a7_125,ra:ra,s0:s0_102,s1:s1_93,s10:s10_216,s11:s11_217,s2:a3,s3:a0,s4:s4_95,s5:s5_19,s6:s6_218,s7:s7_219,s9:s9_220,Stack +0008:dwLoc28,Stack +0028:dwLoc08,Stack +0070:dwArg40,Stack +0074:dwArg44,Stack +0098:dwArg68,Stack +00BC:dwArg8C,t0:t0_126,t1:t1_127,t4:t4_128,t5:t5_129,t6:t6_130
		defs: a0:a0_120,a5:a5_124,a6:a6_118,a7:a7_125,s0:s0_110,s1:s1_111,s10:s10_216,s11:s11_217,s5:s5_114,s6:s6_218,s7:s7_219,s9:s9_220,sp:sp_107,t0:t0_126,t1:t1_127,t4:t4_128,t5:t5_129,t6:t6_130
	branch a0_120 != 0<32> l2302888E
l230288CE:
l2302888E:
	Mem134[s0_102 + 8<i32>:word16] = SLICE(s1_111, word16, 0)
	branch CONVERT(Mem134[s5_114 + 20<i32>:uint16], uint16, word32) == s1_111 l230288A2
l2302889A:
	gatt_ccc_changed(s5_114)
l230288A2:
	branch s1_111 != 0<32> l23028856
l230288A4:
	Mem152[sp_107 + 4<i32>:word32] = 0<32>
	Mem153[sp_107 + 12<i32>:word16] = 0<16>
	Mem154[sp_107 + 14<i32>:byte] = 0<8>
	word32 a2_398
	word32 a6_402
	word32 a4_400
	word32 a5_401
	word32 a7_403
	word32 a3_399
	memcpy(s0_102 + 1<i32>, sp_107 + 8<i32>, 7<32>, out a2_398, out a3_399, out a4_400, out a5_401, out a6_402, out a7_403)
	Mem168[s0_102:byte] = 0<8>
	Mem169[s0_102 + 8<i32>:word16] = 0<16>
l23028848:
	word32 a4_384
	word32 s7_392
	word32 s6_391
	word32 s5_390
	word32 s8_393
	word32 t4_397
	word32 s4_389
	word32 s11_396
	word32 s10_395
	word32 s9_394
	word32 s3_388
	word32 a5_385
	word32 a7_386
	word32 s2_387
	word32 s1_379
	word32 a3_383
	word32 a0_380
	word32 a1_381
	word32 a2_382
	printf(ra, 0x23076AB0<32>, a3_68, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_379, out a0_380, out a1_381, out a2_382, out a3_383, out a4_384, out a5_385, out a7_386, out s2_387, out s3_388, out s4_389, out s5_390, out s6_391, out s7_392, out s8_393, out s9_394, out s10_395, out s11_396, out t4_397)
l23028856:
	0<32> = dwArg0128
	return
bt_gatt_attr_write_ccc_exit:


word32 bt_gatt_init(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_service_register
//      bt_att_init
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s2 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
bt_gatt_init_entry:
l230288D2:
	word32 a0_13
	word32 a3_15
	word32 a4_16
	word32 a5_17
	word32 s0_18 = atomic_cas(0<32>, a3, a4, mstatus, dwArg34, out a0_13, out a3_15, out a4_16, out a5_17)
	branch a0_13 == 0<32> l23028936
l23028936:
	a0Out = a0_13
	a3Out = a3_15
	a4Out = a4_16
	a5Out = a5_17
	s2Out = s2
	s5Out = s5
	return <invalid>
l230288E8:
	word32 a4_26 = CONVERT(Mem9[0x4200E1B8<32>:uint16], uint16, word32)
	word32 a1_27 = 0<32>
	word32 a5_28 = 0x4200DDA0<32>
l23028906:
	branch a5_28 <u 0x4200DDB0<32> l23028928
l23028928:
	a5_28 = Mem9[a1_27 + 4<i32>:word32] + 8<32>
	a4_26 = CONVERT(SLICE(a4_26 + a1_27, word16, 0), word16, word32)
	a1_27 = 1<32>
l2302890A:
	branch a1_27 == 0<32> l23028910
l2302890C:
	Mem43[0x4200E1B8<32>:word16] = SLICE(a4_26, word16, 0)
l23028910:
l23028924_thunk_k_delayed_work_init:
	word32 a0_61
	word32 a3_64
	word32 a4_65
	word32 a5_66
	word32 s2_69
	word32 s5_72
	word32 s3_123
	k_delayed_work_init(ra, s0_18, 0x42012628<32>, 0x4200E1B8<32>, a4_26, mstatus, dwArg94, dwArgC8, dwArgE8, dwArg0128, out a0_61, out a3_64, out a4_65, out a5_66, out s2_69, out s3_123, out s5_72)
	a0Out = a0_61
	a3Out = a3_64
	a4Out = a4_65
	a5Out = a5_66
	s2Out = s2_69
	s5Out = s5_72
	return <invalid>
bt_gatt_init_exit:


void bt_gatt_deinit(word32 a4, word32 a5, word32 mstatus, word32 dwArg34, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_disable
// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0034:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_deinit_entry:
l2302893C:
l23028944_thunk_k_delayed_work_del_timer:
	word32 a0_36
	word32 a3_37
	word32 a4_38
	word32 a5_39
	word32 s2_40
	word32 s3_41
	word32 s4_42
	word32 s5_43
	k_delayed_work_del_timer(0x42012628<32>, a4, a5, mstatus, dwArg34, dwArgA8, dwArgB8, dwArgE8, dwArg0128, out a0_36, out a3_37, out a4_38, out a5_39, out s2_40, out s3_41, out s4_42, out s5_43)
	return
bt_gatt_deinit_exit:


word32 bt_gatt_service_unregister(word32 s0, word32 s1, word32 a0, word32 s2, word32 mstatus, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_ble_sync_stop
// MayUse:  a0:[0..31] mstatus:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut: a2 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_gatt_service_unregister_entry:
l23028948:
	word32 a5_13 = Mem0[0x4200E1AC<32>:int32]
	word32 a1_11 = 0<32>
l23028956:
	branch a5_13 != 0<32> l2302895C
l2302895C:
	branch a0 + 8<i32> != a5_13 l23028992
l23028992:
	a1_11 = a5_13
	a5_13 = Mem0[a5_13:word32]
l23028960:
	sys_slist_remove(a1_11, 0x4200E000<32>, a5_13)
	a3Out = sc_indicate(s1, 0x14<32>, s2, mstatus, s0, dwArg48, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118)
	return dwArg10
l23028958:
	a3Out = a3
	return a0 + 8<i32>
bt_gatt_service_unregister_exit:


word32 bt_gatt_attr_read(word32 a2, word32 a3, word32 a4, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_data
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: s0 sp
bt_gatt_attr_read_entry:
l23028998:
	branch a6 <u a4 l230289BE
l230289A4:
	word32 s0_11 = a6 - a4
	branch a3 >= s0_11 l230289AE
l230289AC:
	s0_11 = a3
l230289AE:
	word32 a2_74
	word32 a3_75
	word32 a4_76
	word32 a6_77
	word32 a7_78
	memcpy(a2, a5 + a4, CONVERT(SLICE(s0_11, word16, 0), word16, word32), out a2_74, out a3_75, out a4_76, out a5, out a6_77, out a7_78)
l230289BE:
	return a5
bt_gatt_attr_read_exit:


word32 bt_gatt_attr_value_handle(word32 a0, word32 a2, ptr32 & a1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_attr_read_chrc
//      bt_gatt_indicate
// MayUse:  a0:[0..31] a2:[0..31]
// LiveOut: a0 a1 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
bt_gatt_attr_value_handle_entry:
l230289C8:
	word32 a5_10
	branch a0 == 0<32> l23028A0A
l23028A0A:
	a5_10 = 0<32>
l230289CA:
	a3 = 0x23028A0E<32>
	a5_10 = 0<32>
	branch a2 != 0x23028A0E<32> l230289EE
l230289DA:
	word32 a0_11 = Mem0[0xC<32>:word32]
	a5_10 = CONVERT(Mem0[4<32>:uint16], uint16, word32)
	branch a5_10 != 0<32> l230289EE
l230289E2:
	word32 a5_13 = CONVERT(Mem0[a0_11 + 16<i32>:uint16], uint16, word32)
	branch a5_13 == 0<32> l230289F2
l230289F2:
	word32 a1_23
	word32 a3_24
	word32 a4_70
	word32 a2_69
	word32 a0_31 = CONVERT(SLICE(find_static_attr(a0_11, out a1_23, out a2_69, out a3_24, out a4_70) + 1<32>, word16, 0), word16, word32)
	a1Out = a1_23
	a3Out = a3_24
	return a0_31
l230289E8:
	a5_10 = CONVERT(SLICE(a5_13 + 1<32>, word16, 0), word16, word32)
l230289EE:
	a1Out = a1
	a3Out = a3
	return a5_10
bt_gatt_attr_value_handle_exit:


void bt_gatt_attr_read_chrc(word32 s0, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] s0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_gatt_attr_read_chrc_entry:
l23028A0E:
	word32 a5_55
	word32 a1_27
	word32 a3_161
	bt_gatt_attr_value_handle(Mem13[s0 + 12<i32>:word32], a2, out a1_27, out a3_161)
	branch CONVERT(Mem36[a1_27:byte], byte, word32) != 0<32> l23028A84
l23028A84:
	word32 a4_164
	word32 a3_163
	word32 a2_162
	word32 a5_165
	word32 a6_166
	word32 a7_167
	memcpy(fp + -49<i32>, a1_27 + 1<32>, 0x10<32>, out a2_162, out a3_163, out a4_164, out a5_165, out a6_166, out a7_167)
	a5_55 = 0x13<32>
l23028A42:
	a5_55 = 5<32>
l23028A52:
	branch a5_55 <u a4 l23028A74
l23028A58:
	word32 s0_64 = a5_55 - a4
	branch a3 >= s0_64 l23028A62
l23028A60:
	s0_64 = a3
l23028A62:
	word32 a2_168
	word32 a3_169
	word32 a4_170
	word32 a5_171
	word32 a6_172
	word32 a7_173
	memcpy(a2, fp + -52<i32> + a4, CONVERT(SLICE(s0_64, word16, 0), word16, word32), out a2_168, out a3_169, out a4_170, out a5_171, out a6_172, out a7_173)
l23028A74:
	return
bt_gatt_attr_read_chrc_exit:


word32 bt_gatt_foreach_attr_type(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s11, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_foreach_attr
//      bt_gatt_indicate
//      bt_gatt_foreach_attr
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31] s11:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s0 s1 s11 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_gatt_foreach_attr_type_entry:
l23028A94:
	word32 sp_164 = fp + -96<i32>
	word32 s2_166 = a0
	word32 s7_169 = a1
	word32 s3_167 = a2
	word32 s4_114 = a3
	word32 s8_103 = a5
	word32 s9_127 = a6
	word32 s0_102 = a4
	branch a4 != 0<32> l23028AC4
l23028AC0:
	s0_102 = 0xFFFFFFF<32>
l23028AC4:
	word32 a5_101
	branch CONVERT(Mem29[0x4200E1B8<32>:uint16], uint16, word32) >=u a0 l23028B92
l23028B92:
	s11 = 0x4200DDA0<32>
	s6 = 1<32>
	word32 s5_148 = 0x4200DDB0<32>
l23028B0E:
	branch s11 <u s5_148 l23028AFC
l23028AFC:
	word32 s1_195
	word32 s1_60 = Mem57[s11 + 4<i32>:int32] + s6
	branch s1_60 >=u s2_166 l23028B8E
l23028B8E:
	word32 s10_176 = 0<32>
l23028B20:
	a4 = Mem64[s11 + 4<i32>:int32]
	s1_195 = CONVERT(SLICE(s6 + s10_176, word16, 0), word16, word32)
	branch s10_176 >=u a4 l23028B0A
l23028B30:
	a0 = sp_164 + 12<i32>
	word32 a7_823
	a1 = memcpy(a0, s10_176 + 0x14<32> + Mem64[s11:int32], 0x14<32>, out a2, out a3, out a4, out a5_101, out a6, out a7_823)
	Mem91[sp_164 + 28<i32>:word16] = SLICE(s1_195, word16, 0)
	branch s7_169 <u s1_195 l23028B68
l23028B4C:
	branch s1_195 <u s2_166 l23028B1E
l23028B50:
	branch s3_167 != 0<32> l23028B14
l23028B14:
	s0_102 = bt_uuid_cmp(s3_167, a1, out a0, out a1, out a2, out a3, out a4, out a5_101, out a6, out s8_103)
	branch a0 == 0<32> l23028B54
l23028B54:
	branch s4_114 != 0<32> l23028B86
l23028B86:
	s8_103 = Mem91[sp_164 + 196<i32>:word32]
	branch s4_114 != a4 l23028B1E
l23028B8C:
l23028B58:
	word32 t1_189
	word32 t5_190
	word32 t6_191
	call s8_103 (retsize: 0;)
		uses: a0:sp_75 + 12<i32>,a1:s9_127,a2:a2_156,a3:a3_158,a4:a4_118,a5:a5_160,a6:a6_162,ra:ra_143,s0:CONVERT(SLICE(s0_120 + 0xFFFFFFFF<32>, word16, 0), word16, word32),s1:s1_70,s10:s10_67,s11:s11_63,s2:s2_93,s3:s3_94,s4:s4_114,s5:s5_148,s6:s6_66,s7:s7_92,s8:s8_131,s9:s9_127,t1:t1_189,t5:t5_190,t6:t6_191
		defs: a0:a0_178,a1:a1_179,a2:a2_180,a3:a3_181,a4:a4_184,a5:a5_182,a6:a6_183,ra:ra_172,s0:s0_165,s10:s10_176,s11:s11_177,s2:s2_166,s3:s3_167,s4:s4_168,s5:s5_174,s6:s6_175,s7:s7_169,s8:s8_170,s9:s9_171,sp:sp_164,t1:t1_189,t5:t5_190,t6:t6_191
	branch s0_102 == 0<32> l23028B68
l23028B66:
	branch a0 != 0<32> l23028B1E
l23028B1E:
	s10_176 = s10_176 + 1<32>
l23028B06:
	s1_195 = CONVERT(SLICE(s1_60, word16, 0), word16, word32)
l23028B0A:
	s11 = s11 + 8<32>
	s6 = s1_195
l23028B12:
l23028AD0:
	a5_101 = Mem201[0x4200E1AC<32>:int32]
	word32 s10_203 = 0x14<32>
	word32 s1_204 = a5_101 + -8<i32>
	branch a5_101 == 0<32> l23028B68
l23028AE0:
	branch s1_204 == 0<32> l23028B68
l23028AE2:
	word32 s1_208 = Mem201[a5_101 + 8<i32>:word32]
	branch a5_101 == 0<32> l23028AF8
l23028AE6:
	a4 = a5_101 + -8<i32>
	branch a4 == 0<32> l23028AF8
l23028AEC:
	a5_101 = CONVERT(Mem201[Mem201[a5_101 + -8<i32>:int32] + 16<i32>:uint16], uint16, word32)
	branch s2_166 >=u a5_101 l23028BE8
l23028AF8:
	word32 s5_213 = 0<32>
l23028BE2:
	s1_208 = Mem201[a5_101 + 4<i32>:word32]
	branch s5_213 <u a5_101 l23028BA6
l23028BA6:
	s6 = s5_213 + s10_203 + a5_101
	word32 s1_220 = Mem201[a5_101:word32]
	a5_101 = CONVERT(Mem201[s6 + 16<i32>:uint16], uint16, word32)
	branch s7_169 <u a5_101 l23028B68
l23028BB6:
	branch a5_101 <u s2_166 l23028BE0
l23028BBA:
	branch s3_167 != 0<32> l23028BD4
l23028BD4:
	s0_102 = bt_uuid_cmp(s3_167, Mem201[s6:int32], out a0, out a1, out a2, out a3, out a4, out a5_101, out a6, out s8_103)
	branch a0 == 0<32> l23028BBE
l23028BBE:
	branch s4_114 != 0<32> l23028BF0
l23028BF0:
	a5_101 = Mem201[s6 + 12<i32>:int32]
	branch s4_114 != a5_101 l23028BE0
l23028BF8:
l23028BC2:
	word32 t1_325
	word32 t5_326
	word32 t6_327
	call s8_103 (retsize: 0;)
		uses: a0:s6_221,a1:s9_257,a2:a2_284,a3:a3_287,a4:a4_295,a5:a5_289,a6:a6_292,ra:ra_273,s0:CONVERT(SLICE(s0_250 + 0xFFFFFFFF<32>, word16, 0), word16, word32),s1:s1_220,s10:s10_218,s11:s11_282,s2:s2_224,s3:s3_225,s4:s4_245,s5:s5_217,s6:s6_221,s7:s7_223,s8:s8_262,s9:s9_257,t1:t1_325,t5:t5_326,t6:t6_327
		defs: a0:a0_314,a1:a1_315,a2:a2_316,a3:a3_317,a4:a4_320,a5:a5_318,a6:a6_319,ra:ra_308,s0:s0_301,s10:s10_312,s11:s11_313,s2:s2_302,s3:s3_303,s4:s4_304,s5:s5_310,s6:s6_311,s7:s7_305,s8:s8_306,s9:s9_307,t1:t1_325,t5:t5_326,t6:t6_327
	branch s0_102 == 0<32> l23028B68
l23028BD0:
	branch a0 != 0<32> l23028BE0
l23028BE0:
	s5_213 = s5_213 + 1<32>
l23028BD2:
l23028BE8:
	word32 s1_332 = Mem201[s1_208 + 8<i32>:word32]
	branch s1_332 == 0<32> l23028B68
l23028B68:
	s0Out = s0_102
	s1Out = dwArg28
	a0Out = a0
	a1Out = a1
	a2Out = dwArg011C
	a3Out = dwArg08
	a4Out = a4
	a5Out = a5_101
	s2Out = s2_166
	s3Out = s3_167
	s4Out = dwArgDC
	s5Out = s4
	s6Out = s6
	s11Out = s11
	return dwArg68
bt_gatt_foreach_attr_type_exit:
l23028BEC:
	s1_204 = s1_332 + 0xFFFFFFF8<32>


word32 bt_gatt_foreach_attr(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s11, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_service_register
//      bt_gatt_connected
//      bt_gatt_encrypt_change
//      bt_gatt_disconnected
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s11:[0..31]
// LiveOut: a2 a3 a4 a5 ra s0 s1 s11 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_gatt_foreach_attr_entry:
l23028BFA:
l23028C04_thunk_bt_gatt_foreach_attr_type:
	word32 a2_16
	word32 a3_17
	word32 a4_18
	word32 a5_19
	word32 s0_23
	word32 s1_24
	word32 s11_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 a0_53
	word32 a1_54
	word32 ra_22 = bt_gatt_foreach_attr_type(ra, a0, a1, 0<32>, 0<32>, 0<32>, a2, a3, s11, out s0_23, out s1_24, out a0_53, out a1_54, out a2_16, out a3_17, out a4_18, out a5_19, out s2_27, out s3_28, out s4_29, out s5_30, out s6_31, out s11_26)
	s0Out = s0_23
	s1Out = s1_24
	a2Out = a2_16
	a3Out = a3_17
	a4Out = a4_18
	a5Out = a5_19
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	s11Out = s11_26
	return ra_22
bt_gatt_foreach_attr_exit:


word32 bt_gatt_service_register(word32 ra, word32 a3, word32 a4, word32 s5, word32 s6, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_ble_sync_start
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s11:[0..31] s5:[0..31] s6:[8..15] Stack +0004:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: mstatus ra s0 sp
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t0 t1 t3 t4 t5 t6 tp
// Preserved:
bt_gatt_service_register_entry:
l23028C08:
	word32 a0_25
	word32 s2_36
	word32 s5_39
	word32 a4_721
	word32 a5_722
	word32 a3_720
	bt_gatt_init(ra, a3, a4, mstatus, dwArg04, ra, dwArg98, dwArgB8, dwArgF8, out a0_25, out a3_720, out a4_721, out a5_722, out s2_36, out s5_39)
	byte bLoc27_378 = SLICE(s6, byte, 8)
	word32 a0_48
	word32 a5_52
	word32 a1_723
	word32 a2_724
	word32 a3_725
	word32 a6_727
	word32 a4_726
	word32 s8_728
	word32 s0_53 = bt_uuid_cmp(a0_25, fp + -44<i32>, out a0_48, out a1_723, out a2_724, out a3_725, out a4_726, out a5_52, out a6_727, out s8_728)
	word32 dwLoc2C_383 = SEQ(0xF800<16>, bLoc2B, 0<8>)
	branch a0_48 != 0<32> l23028C52
l23028C52:
	word32 s1_157 = Mem47[a5_52:word32]
	word32 a0_70
	word32 a2_78
	word32 a5_729
	word32 a6_730
	word32 s8_731
	word32 a3_124
	word32 a4_126
	word32 a1_137
	bt_uuid_cmp(a0_48, fp + -40<i32>, out a0_70, out a1_137, out a2_78, out a3_124, out a4_126, out a5_729, out a6_730, out s8_731)
	word32 dwLoc28_379 = SEQ(SLICE(s0_53 + -2047<i32>, word16, 0), bLoc27_378, 0<8>)
	branch a0_70 == 0<32> l23028C3A
l23028C6A:
	word32 s2_128
	word32 a5_127
	word32 s5_129
	word32 a5_87 = Mem69[0x4200E1AC<32>:int32]
	word32 s3_134 = Mem69[s1_157:int32]
	word32 s4_135 = CONVERT(Mem69[s1_157 + 4<i32>:uint16], uint16, word32)
	branch a5_87 != 0<32> l23028C90
l23028C90:
	word32 s0_91 = Mem69[a5_87 + 4<i32>:word32]
	branch a5_87 == 0<32> l23028D7C
l23028D7C:
	__ebreak()
l23028D80_thunk_bt_gatt_indicate:
	word32 s0_103
	word32 mstatus_122
	word32 a3_755
	word32 a0_754
	word32 a4_756
	word32 s1_753
	word32 ra_102 = bt_gatt_indicate(ra, s0_91, a0_70, a2_78, a4_126, s2_36, s3_134, s5_39, s11, mstatus, dwLoc30, dwLoc2C_383, dwLoc28_379, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg18, dwArg1C, dwArg28, dwArg3C, dwArg48, dwArg4C, dwArg68, dwArgF8, out s0_103, out s1_753, out a0_754, out a3_755, out a4_756, out mstatus_122)
	s0Out = s0_103
	mstatusOut = mstatus_122
	return ra_102
l23028C94:
	word32 a4_123 = Mem69[a5_87 + -4<i32>:int32]
	a5_127 = Mem69[a5_87 + -8<i32>:int32] + (a4_123 + 0x14<32>)
	s2_128 = CONVERT(Mem69[a5_127 + -4<i32>:uint16], uint16, word32)
	a3_124 = 0x14<32>
	a4_126 = a4_123 + 0x14<32>
	s5_129 = s2_128
l23028C80:
	a5_127 = 0x4200E000<32>
	s2_128 = CONVERT(Mem69[0x4200E1B8<32>:uint16], uint16, word32)
	s5_129 = 0<32>
l23028C8A:
	word32 s6_133 = 0x23028000<32>
l23028CCA:
	branch s3_134 == 0<32> l23028CD2
l23028CCE:
	branch s4_135 != 0<32> l23028CAC
l23028CAC:
	a1_137 = CONVERT(Mem136[s3_134 + 16<i32>:uint16], uint16, word32)
	branch a1_137 != 0<32> l23028D0C
l23028D0C:
	branch s2_128 <u a1_137 l23028CBE
l23028D10:
	word32 s2_160
	word32 s0_732
	word32 a2_733
	ra = bt_gatt_foreach_attr(ra, a1_137, a1_137, s6_133 + -382<i32>, fp + -36<i32>, s11, out s0_732, out s1_157, out a2_733, out a3_124, out a4_126, out a5_127, out s2_160, out s3_134, out s4_135, out s5_129, out s6_133, out s11)
	branch a5_127 == 0<32> l23028D36
l23028D36:
	a1_137 = s2_160
l23028D22:
	word32 s1_734
	word32 a2_737
	word32 a0_735
	word32 a1_736
	word32 s6_746
	word32 s4_744
	word32 a5_740
	word32 s2_742
	word32 s3_743
	word32 a4_739
	word32 a7_741
	word32 a3_738
	word32 s8_748
	word32 t4_752
	word32 s5_745
	word32 s9_749
	word32 s10_750
	word32 s11_751
	word32 s7_747
	ra = printf(ra, 0x23076B08<32>, a3_124, dwLoc28_379, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_734, out a0_735, out a1_736, out a2_737, out a3_738, out a4_739, out a5_740, out a7_741, out s2_742, out s3_743, out s4_744, out s5_745, out s6_746, out s7_747, out s8_748, out s9_749, out s10_750, out s11_751, out t4_752)
l23028CB2:
	a1_137 = CONVERT(SLICE(s2_128 + 1<32>, word16, 0), word16, word32)
	Mem205[s3_134 + 16<i32>:word16] = SLICE(a1_137, word16, 0)
l23028CBE:
	s3_134 = s3_134 + 0x14<32>
	s4_135 = CONVERT(SLICE(s4_135 + 0xFFFFFFFF<32>, word16, 0), word16, word32)
	s2_128 = a1_137
l23028CD2:
	word32 a5_242
	word32 s0_244
	branch s5_129 == 0<32> l23028CE0
l23028CD6:
	s1_157 = Mem136[a5_127:word32]
	word32 a2_224 = CONVERT(Mem136[a5_127 + 16<i32>:uint16], uint16, word32)
	branch s5_129 >=u a2_224 l23028D3A
l23028D3A:
	branch a3_124 == 0<32> l23028CF0
l23028D3E:
	word32 a5_230 = a3_124 + -8<i32>
	a4_126 = 0<32>
l23028D44:
	branch a5_230 == 0<32> l23028CF0
l23028D46:
	a1_137 = CONVERT(Mem136[a1_137 + 16<i32>:uint16], uint16, word32)
	branch a2_224 >=u a1_137 l23028D70
l23028D70:
	word32 a5_238 = Mem136[a1_137 + 8<i32>:word32]
	branch a1_137 == 0<32> l23028CF0
l23028D74:
	a4_126 = a5_238
	a5_230 = a1_137 + -8<i32>
l23028D50:
	a5_242 = s1_157 + 8<i32>
	branch a4_126 == 0<32> l23028D66
l23028D66:
	s0_244 = Mem136[a4_126 + 4<i32>:word32]
	Mem246[a3_124 + 8<i32>:word32] = s1_157
	Mem247[s1_157 + 8<i32>:word32] = s0_244
	branch a4_126 != 0<32> l23028CF0
l23028D6E:
l23028D56:
	a4_126 = Mem136[a3_124 + 8<i32>:word32]
	branch a3_124 == 0<32> l23028CE4
l23028D5A:
	Mem249[a3_124 + 8<i32>:word32] = s1_157
	Mem250[s1_157 + 16<i32>:word32] = a4_126
l23028CE0:
	a5_242 = s1_157 + 8<i32>
l23028CE4:
	s0_244 = Mem136[a4_126 + 4<i32>:word32]
	Mem267[s1_157 + 8<i32>:word32] = 0<32>
	branch a4_126 != 0<32> l23028D60
l23028D60:
	Mem269[a5_242:word32] = a4_126
l23028D62:
	Mem272[a5_242 + 4<i32>:word32] = s0_244
l23028CEC:
	Mem273[a5_242 + 4<i32>:word32] = s0_244
	Mem274[a5_242:word32] = s0_244
l23028CF0:
	sc_indicate(Mem276[a4_126:word32], 0x14<32>, s2_128, mstatus, dwLoc2C_383, dwArg28, dwArg48, s5, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8)
l23028C3A:
l23028C3E:
	0<32> = dwArg0128
	s0Out = dwArgE4
	mstatusOut = mstatus
	return ra
bt_gatt_service_register_exit:


word32 bt_gatt_indicate(word32 ra, word32 s0, word32 a0, word32 a2, word32 a4, word32 s2, word32 s3, word32 s5, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg98, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_service_register
//      sc_process
//      update_ccc
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_indicate_entry:
l23028D82:
	word32 a3_113
	word32 a5_130
	word32 a1_13 = Mem11[a4 + 28<i32>:word32]
	branch a0 == 0<32> l23028DA0
l23028D92:
	a2 = CONVERT(Mem14[a0 + 13<i32>:byte], byte, word32)
	a3_113 = 4<32>
	a5_130 = -57<i32>
	branch a2 != 4<32> l23028DB6
l23028DA0:
	word32 s0_21 = CONVERT(Mem14[a4 + 16<i32>:uint16], uint16, word32)
	s1 = a1_13
	word32 s2_144 = a0
	branch s0_21 != 0<32> l23028DC4
l23028DAA:
	word32 a1_501
	a0 = find_static_attr(a4, out a1_501, out a2, out a3_113, out a4)
	s0_21 = a0
	branch a0 != 0<32> l23028DC4
l23028DC4:
	s1 = Mem14[a2 + 24<i32>:word32]
	branch a2 == 0<32> l23028DF6
l23028DC8:
	word32 s6_511
	word32 a1_507
	word32 s0_506
	word32 a5_509
	word32 a2_508
	word32 s4_510
	ra = bt_gatt_foreach_attr_type(ra, s0_21, 0xFFFFFFF<32>, a2, 0<32>, 1<32>, 0x230281E6<32>, fp + -40<i32>, s11, out s0_506, out s1, out a0, out a1_507, out a2_508, out a3_113, out a4, out a5_509, out s2_144, out s3, out s4_510, out s5, out s6_511, out s11)
	branch a0 == 0<32> l23028DB4
l23028DE8:
	branch CONVERT(Mem54[a0 + 16<i32>:uint16], uint16, word32) != 0<32> l23028DF6
l23028DEE:
	word32 a2_513
	word32 a1_512
	a0 = find_static_attr(a0, out a1_512, out a2_513, out a3_113, out a4)
	branch a0 == 0<32> l23028DB4
l23028DF6:
	word32 a0_111
	word32 a5_115
	word32 a2_119
	word32 a1_502
	word32 a4_503
	word32 s8_505
	word32 a6_504
	word32 s0_116 = bt_uuid_cmp(a0, fp + -36<i32>, out a0_111, out a1_502, out a2_119, out a3_113, out a4_503, out a5_115, out a6_504, out s8_505)
	branch a0_111 != 0<32> l23028E26
l23028E10:
	word32 a4_129 = CONVERT(Mem110[a5_115 + 6<i32>:byte], byte, word32)
	s1 = Mem110[a0_111 + 28<i32>:word32]
	word32 a0_128 = Mem110[a5_115 + 12<i32>:word32]
	a5_130 = 0xFFFFFFEA<32>
	a4 = a4_129 & 32<i32>
	branch (a4_129 & 32<i32>) == 0<32> l23028DB6
l23028E20:
	word32 a1_514
	s0_116 = bt_gatt_attr_value_handle(a0_128, a2_119, out a1_514, out a3_113)
l23028E26:
	branch s2_144 == 0<32> l23028E38
l23028E38:
	word32 s4_521
	word32 s5_522
	word32 s6_523
	word32 s11_524
	word32 a1_517
	word32 a2_518
	word32 s2_519
	word32 s3_520
	word32 s0_515
	word32 a0_516
	ra = bt_gatt_foreach_attr_type(ra, s0_116, 0xFFFFFFF<32>, fp + -32<i32>, 0<32>, 1<32>, 0x23028630<32>, fp + -28<i32>, s11, out s0_515, out s1, out a0_516, out a1_517, out a2_518, out a3_113, out a4, out a5_130, out s2_519, out s3_520, out s4_521, out s5_522, out s6_523, out s11_524)
l23028E2A:
	word32 a0_220
	word32 s0_525
	word32 s6_526
	word32 s7_527
	ra = gatt_indicate(ra, s1, s2_144, s1, a3_113, s2_144, s3, s5, mstatus, dwLoc28, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg4C, dwArg58, dwArg6C, dwArg78, dwArg7C, dwArg98, out s0_525, out s1, out a0_220, out a3_113, out a4, out s6_526, out s7_527, out mstatus)
	a5_130 = a0_220
l23028DB4:
	a5_130 = 0xFFFFFFFE<32>
l23028DB6:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a0Out = a5_130
	a3Out = a3_113
	a4Out = a4
	mstatusOut = mstatus
	return ra
bt_gatt_indicate_exit:


void sc_process(word32 ra, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s5, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg4C, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sc_process_entry:
l23028E74:
	word32 a2_25
	word32 a4_27
	word32 s4_151
	word32 a5_150
	word32 a3_149
	word32 a1_148
	word32 a0_147
	atomic_and(a0, 0xFFFFFFFE<32>, a3, a4, mstatus, out a0_147, out a1_148, out a2_25, out a3_149, out a4_27, out a5_150, out s4_151)
	Mem35[a0 + 4076<i32>:word32] = 0x230769FC<32>
	Mem38[a0 + 4080<i32>:word32] = 0x230281EC<32>
	Mem40[a0 + 4084<i32>:word32] = fp + 0xFFFFFFEC<32>
	Mem42[a0 + 4092<i32>:word16] = 0<16>
	Mem43[a0 + 4094<i32>:word16] = 0<16>
	Mem44[a0 + 4088<i32>:word16] = 4<16>
	word32 a0_50
	word32 a3_53
	word32 a4_54
	word32 s0_59
	word32 mstatus_78
	word32 s1_152
	bt_gatt_indicate(ra, a0, 0<32>, a2_25, a4_27, a0 + -48<i32>, s3, s5, s11, mstatus, dwLoc20, dwLoc1C, s2, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg28, dwArg2C, dwArg38, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg0108, out s0_59, out s1_152, out a0_50, out a3_53, out a4_54, out mstatus_78)
	branch a0_50 != 0<32> l23028ED4
l23028ECC:
	word32 s4_159
	word32 a5_158
	word32 a4_157
	word32 a3_156
	word32 a2_155
	word32 a1_154
	word32 a0_153
	atomic_or(s0_59, 2<32>, a3_53, a4_54, mstatus_78, out a0_153, out a1_154, out a2_155, out a3_156, out a4_157, out a5_158, out s4_159)
l23028ED4:
	return
sc_process_exit:


word32 bt_gatt_get_mtu(word32 ra, word32 a0, word32 a3, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      exchange_func
//      __bl_ble_sync_task
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a3 ra s10 s2
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bt_gatt_get_mtu_entry:
l23028EE0:
l23028EE0_thunk_bt_att_get_mtu:
	word32 a0_7
	word32 a3_10
	word32 s10_16
	word32 s2_18
	word32 s1_38
	word32 a2_39
	word32 s3_40
	word32 ra_14 = bt_att_get_mtu(ra, a0, a3, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_38, out a0_7, out a2_39, out a3_10, out s2_18, out s3_40, out s10_16)
	a0Out = a0_7
	a3Out = a3_10
	s2Out = s2_18
	s10Out = s10_16
	return ra_14
bt_gatt_get_mtu_exit:


word32 bt_gatt_check_perm(word32 a0, word32 a1, word32 a2, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      update_ccc
//      read_type_cb
//      write_cb
//      read_cb
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a1 a2 a4 a5 s1 tp
// Preserved: s0 sp
bt_gatt_check_perm_entry:
l23028EE4:
	word32 a5_15
	word32 s0_13 = CONVERT(Mem9[a1 + 18<i32>:byte], byte, word32)
	branch (a2 & 1<i32>) == 0<32> l23028F02
l23028EF6:
	a4 = s0_13 & 21<i32>
	a5_15 = 2<32>
	branch (s0_13 & 21<i32>) == 0<32> l23028F24
l23028EFE:
	branch (s0_13 & 21<i32>) == 0<32> l23028F24
l23028F02:
	branch (a2 & 2<i32>) == 0<32> l23028F14
l23028F08:
	a4 = s0_13 & 42<i32>
	a5_15 = 3<32>
	branch (s0_13 & 42<i32>) == 0<32> l23028F24
l23028F10:
	branch (s0_13 & 42<i32>) == 0<32> l23028F24
l23028F14:
	word32 s0_26 = s0_13 & a2
	branch (s0_26 & 48<i32>) != 0<32> l23028F30
l23028F30:
	a4 = 2<32>
	a5_15 = 5<32>
	branch bt_conn_get_security(a0) >u 2<32> l23028F1E
l23028F3C:
l23028F1E:
	a5_15 = s0_26 & 12<i32>
	branch (s0_26 & 12<i32>) != 0<32> l23028F3E
l23028F3E:
	a4 = CONVERT(Mem9[a0 + 11<i32>:byte], byte, word32)
	a5_15 = 0<32>
	branch a4 != 0<32> l23028F24
l23028F46:
	a5_15 = 0xF<32>
l23028F24:
	a2Out = dwArg10
	a4Out = a4
	a5Out = a5_15
	return a5_15
bt_gatt_check_perm_exit:


void update_ccc(word32 ra, word32 s0, word32 s1, word32 a4, word32 s2, word32 s6, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg7C, word32 dwArgE8, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s11:[0..31] s2:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
update_ccc_entry:
l23028F4A:
	word32 a0_5 = Mem0[a4 + 8<i32>:word32]
	branch a4 != 0x230287F8<32> l2302908A
l2302908A:
	return
l23028F58:
	word32 s5_238 = Mem31[a0_5 + 12<i32>:int32]
	word32 s4_217 = Mem31[s0:word32]
	word32 s2_235 = s5_238 + 1<i32>
	word32 s6_239 = s5_238 + 21<i32>
	word32 s7_240 = 3<32>
	word32 s8_241 = 5<32>
	word32 s9_221 = 0x23077000<32>
l23028F8A:
	word32 a0_47
	word32 a3_50
	word32 a5_635
	word32 a4_634
	word32 s1_53 = bt_conn_addr_le_cmp(s0, s2_235, s6, out a0_47, out a3_50, out a4_634, out a5_635)
	branch a0_47 != 0<32> l23028FB0
l23028F94:
	word32 a2_589
	word32 a5_591
	word32 a4_590
	word32 a0_58 = bt_gatt_check_perm(s0, s1_53, 42<i32>, out a2_589, out a4_590, out a5_591)
	branch a0_58 == 0<32> l23028FD8
l23028FA2:
	branch a0_58 != s7_240 l23028FB8
l23028FB8:
	word32 s3_66 = 2<32>
	branch a0_58 != s8_241 l23028FC0
l23028FBE:
	s3_66 = 3<32>
l23028FC0:
	branch bt_conn_get_security(s0) >=u s3_66 l23028FD8
l23028FD8:
	branch CONVERT(Mem46[s2_235 + 7<i32>:uint16], uint16, word32) == 0<32> l23028FB0
l23028FDE:
	gatt_ccc_changed(s5_238)
	branch s5_238 != 0x4200D514<32> l2302906E
l23028FF2:
	word32 a0_97
	word32 a2_98
	word32 s2_103
	word32 s3_104
	word32 s5_106
	word32 a3_604
	word32 s1_603
	word32 s4_605
	word32 s0_101 = find_sc_cfg(CONVERT(Mem46[s0 + 8<i32>:byte], byte, word32), s0 + 112<i32>, dwArgE8, out s1_603, out a0_97, out a2_98, out a3_604, out s2_103, out s3_104, out s4_605, out s5_106)
	branch a0_97 == 0<32> l2302906E
l23029002:
	word32 a4_116 = CONVERT(Mem46[a0_97 + 8<i32>:uint16], uint16, word32)
	branch (a4_116 | CONVERT(Mem46[a0_97 + 10<i32>:uint16], uint16, word32)) == 0<32> l2302906E
l23029010:
	word32 a0_122 = bt_conn_index(s0_101)
	Mem131[0x23076A18<32>:word32] = a0_122 + 0x420126AC<32>
	Mem134[0x23027F28<32>:word32] = a0_122 + 0x420126AC<32>
	Mem138[a0_122 + 0x420126D4<32>:word16] = 4<16>
	word32 a0_149
	word32 a3_152
	word32 a4_607
	word32 s0_606
	word32 mstatus_608
	word32 s1_159
	word32 ra_157 = bt_gatt_indicate(ra, s0_101, s0_101, a2_98, a4_116, s2_103, s3_104, s5_106, s11, mstatus, dwLoc40, dwLoc3C, dwLoc38, s2, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwArg08, dwArg0C, dwArg18, dwArg2C, dwArg38, dwArg3C, s1, dwArgE8, out s0_606, out s1_159, out a0_149, out a3_152, out a4_607, out mstatus_608)
	branch a0_149 == 0<32> l23029062
l23029056:
	word32 s3_624
	word32 s6_627
	word32 s8_629
	word32 s5_626
	word32 s7_628
	word32 s10_631
	word32 s9_630
	word32 t4_633
	word32 s11_632
	word32 s4_625
	word32 a7_622
	word32 s2_623
	word32 a4_620
	word32 a5_621
	word32 a2_618
	word32 a3_619
	word32 a1_617
	word32 a0_616
	ra_157 = printf(ra_157, 0x23076C1C<32>, a3_152, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_159, out a0_616, out a1_617, out a2_618, out a3_619, out a4_620, out a5_621, out a7_622, out s2_623, out s3_624, out s4_625, out s5_626, out s6_627, out s7_628, out s8_629, out s9_630, out s10_631, out s11_632, out t4_633)
l23029062:
	word32 a0_610
	word32 a2_612
	word32 a5_615
	word32 t1_609
	word32 a1_611
	word32 a3_613
	word32 a4_614
	memset(ra_157, s1_159 + 8<i32>, 0<32>, 4<32>, out t1_609, out a0_610, out a1_611, out a2_612, out a3_613, out a4_614, out a5_615)
l23028FCA:
	branch CONVERT(Mem46[s4_217 + 4<i32>:byte], byte, word32) >=u s3_66 l23028FB0
l23028FD2:
	Mem219[s4_217 + 4<i32>:byte] = SLICE(s3_66, byte, 0)
l23028FA6:
	word32 a0_593
	word32 s1_592
	word32 a5_598
	word32 a1_594
	word32 a4_597
	word32 a3_596
	word32 a2_595
	word32 s3_600
	word32 a7_599
	word32 t4_602
	word32 s10_601
	ra = printf(ra, s9_221 + -1020<i32>, a3_50, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_592, out a0_593, out a1_594, out a2_595, out a3_596, out a4_597, out a5_598, out a7_599, out s2_235, out s3_600, out s4_217, out s5_238, out s6_239, out s7_240, out s8_241, out s9_221, out s10_601, out s11, out t4_602)
l23028FB0:
	s2_235 = s2_235 + 0xA<32>
	branch s2_235 == s6_239 l2302906E
l2302906E:
	0<32> = dwArg0198
	return
update_ccc_exit:
l23028FB6:


word32 bt_gatt_exchange_mtu(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgAC, word32 dwArgB8, word32 dwArgD8, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_exchange_mtu
//      blsync_connected
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_gatt_exchange_mtu_entry:
l2302908E:
	word32 a3_5 = CONVERT(Mem0[a0 + 13<i32>:byte], byte, word32)
	branch a3_5 != 4<32> l230290E0
l230290E0:
	a0Out = -57<i32>
	a3Out = a3_5
	return ra
l23029098:
	word32 a3_25
	word32 a4_26
	word32 s0_30
	word32 s2_34
	word32 a0_45
	word32 s1_175
	word32 a2_176
	word32 a5_177
	word32 s3_178
	word32 s4_179
	word32 s5_180
	word32 s6_181
	word32 s11_182
	word32 mstatus_183
	word32 ra_29 = bt_att_create_pdu(ra, s1, a0, 2<32>, a3_5, mstatus, dwLoc08, dwArg20, dwArg24, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg64, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg8C, dwArgB8, dwArgD8, out s0_30, out s1_175, out a0_45, out a2_176, out a3_25, out a4_26, out a5_177, out s2_34, out s3_178, out s4_179, out s5_180, out s6_181, out s11_182, out mstatus_183)
	branch a0_45 == 0<32> l230290E6
l230290E6:
	0<32> = dwArg38
	a0Out = 0xFFFFFFF4<32>
	a3Out = a3_25
	return ra_29
l230290B2:
	word32 a1_184
	word32 a5_185
	word32 a0_60 = net_buf_simple_add(a0_45 + 8<32>, 2<32>, a4_26, out a1_184, out a5_185)
	Mem64[a0_60:byte] = 0xF7<8>
	Mem65[a0_60 + 1<i32>:byte] = 0<8>
	0<32> = dwArg38
l230290DC_thunk_gatt_send.constprop.28:
	word32 a3_77
	word32 s1_186
	word32 a4_187
	word32 a5_188
	word32 s2_189
	word32 s3_190
	word32 s4_191
	word32 s5_192
	word32 s6_193
	word32 s7_194
	word32 ra_81 = gatt_send.constprop.28(ra_29, s0_30, a0_45, 0x23027F3C<32>, s2_34, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_186, out a3_77, out a4_187, out a5_188, out s2_189, out s3_190, out s4_191, out s5_192, out s6_193, out s7_194)
	a0Out = s0_30
	a3Out = a3_77
	return ra_81
bt_gatt_exchange_mtu_exit:


word32 bt_gatt_discover(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArgD4, word32 dwArgF0, word32 dwArgF4, word32 dwArg0118, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_discover
//      gatt_discover_next
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +00D4:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bt_gatt_discover_entry:
l230290F4:
	branch CONVERT(Mem0[a0 + 13<i32>:byte], byte, word32) != 4<32> l2302935E
l2302935E:
	s0Out = s0
	s1Out = s1
	a0Out = -57<i32>
	a3Out = a3
	s2Out = s2
	s3Out = s3
	return ra
l230290FE:
	branch CONVERT(Mem18[a1 + 40<i32>:byte], byte, word32) >u 5<32> l23029350
l23029350:
	word32 a3_32
	word32 s1_36
	word32 s2_39
	word32 s3_40
	word32 a0_146
	word32 a1_147
	word32 a2_148
	word32 a4_149
	word32 a5_150
	word32 a7_151
	word32 s4_152
	word32 s5_153
	word32 s6_154
	word32 s7_155
	word32 s8_156
	word32 s9_157
	word32 s10_158
	word32 s11_159
	word32 t4_160
	word32 ra_35 = printf(ra, 0x23076AE8<32>, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_36, out a0_146, out a1_147, out a2_148, out a3_32, out a4_149, out a5_150, out a7_151, out s2_39, out s3_40, out s4_152, out s5_153, out s6_154, out s7_155, out s8_156, out s9_157, out s10_158, out s11_159, out t4_160)
l230291B4:
l2302913A:
	s0Out = a1
	s1Out = s1_36
	a0Out = 0xFFFFFFEA<32>
	a3Out = a3_32
	s2Out = s2_39
	s3Out = s3_40
	return ra_35
l23029118:
	word32 a0_62
	word32 s0_64
	word32 s1_65
	word32 ra_66
	word32 s2_67
	word32 s3_68
	word32 t3_70
	word32 s8_71
	word32 s4_72
	word32 a6_73
	word32 a2_74
	word32 a3_75
	word32 a7_76
	word32 s10_77
	word32 s11_78
	word32 s5_79
	word32 s6_80
	word32 s7_81
	word32 s9_82
	word32 t0_83
	word32 t4_84
	call 0x230769BC<32> (retsize: 0;)
		uses: a0:a0,a1:Mem18[0x230769BC<32>:word32],a2:a2_74,a3:a3,a5:0x230769BC<32>,a6:a6_73,a7:a7_76,ra:ra,s0:a1,s1:a0,s10:s10_77,s11:s11_78,s2:s2,s3:s3,s4:s4_72,s5:s5_79,s6:s6_80,s7:s7_81,s8:s8_71,s9:s9_82,Stack +0008:dwLoc38,Stack +0028:dwLoc18,Stack +0070:dwArg30,Stack +0074:dwArg34,Stack +00BC:dwArg7C,Stack +0114:dwArgD4,Stack +0130:dwArgF0,Stack +0134:dwArgF4,Stack +0158:dwArg0118,Stack +0178:dwArg0138,t0:t0_83,t3:t3_70,t4:t4_84
		defs: a0:a0_62,a2:a2_74,a3:a3_75,a6:a6_73,a7:a7_76,ra:ra_66,s0:s0_64,s1:s1_65,s10:s10_77,s11:s11_78,s2:s2_67,s3:s3_68,s4:s4_72,s5:s5_79,s6:s6_80,s7:s7_81,s8:s8_71,s9:s9_82,t0:t0_83,t3:t3_70,t4:t4_84
	s0Out = s0_64
	s1Out = s1_65
	a0Out = a0_62
	a3Out = a3_75
	s2Out = s2_67
	s3Out = s3_68
	return ra_66
bt_gatt_discover_exit:


void gatt_discover_next(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 s3, word32 dwArg00, word32 dwArg10, word32 dwArg14, word32 dwArg5C, word32 dwArgB4, word32 dwArgD0, word32 dwArgD4, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gatt_find_type_rsp
//      gatt_read_group_rsp
//      gatt_read_type_rsp
//      read_included_uuid_cb
//      gatt_find_info_rsp
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +005C:[0..31] Stack +00B4:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
gatt_discover_next_entry:
l23029364:
	word32 s0_45 = a0
	branch a1 != 0<32> l23029384
l23029384:
	branch a1 != 0xFFFFFFF<32> l230293A2
l230293A2:
	word32 a1_14 = a1 + 1<32> << 16<i32>
	word32 a5_16 = CONVERT(Mem7[a2 + 38<i32>:uint16], uint16, word32)
	Mem18[a2 + 32<i32>:word16] = SLICE(a1_14 >>u 16<i32>, word16, 0)
	branch a5_16 >=u a1_14 >>u 16<i32> l2302936E
l230293B4:
l2302938C:
	Mem20[a2 + 32<i32>:word16] = 0xFFFF<16>
l2302936E:
	word32 a0_36
	ra = bt_gatt_discover(ra, s1, a0, a2, a3, s2, s3, dwArg10, dwArg14, dwArg5C, dwArgB4, dwArgD0, dwArgD4, dwArgF8, dwArg0118, out s0_45, out s1, out a0_36, out a3, out s2, out s3)
	branch a0_36 != 0<32> l23029392
l23029392:
	word32 t1_85
	call Mem64[a2 + 28<i32>:int32] (retsize: 0;)
		uses: a0:s0_61,a1:0<32>,a2:a2,a3:a3_75,ra:ra_71,s0:s0_61,s1:s1_72,s2:s2_73,s3:s3_74,s8:dwLoc1C,Stack +0000:dwArg00,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +005C:dwArg5C,Stack +00B4:dwArgB4,Stack +00D0:dwArgD0,Stack +00D4:dwArgD4,Stack +00F8:dwArgF8,Stack +0118:dwArg0118,Stack +FFFFFFE4:dwLoc1C,t1:t1_85,t3:dwArg00
		defs: t1:t1_85
	return
l2302937C:
	return
gatt_discover_next_exit:


void gatt_find_type_rsp(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s9:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: s5 sp
gatt_find_type_rsp_entry:
l230293B6:
	word32 sp_101 = fp + -112<i32>
	word32 s8_102 = a0
	branch a1 != 0<32> l2302948A
l230293D2:
	a5 = 0x3000000<32>
	s4 = a1
	s9 = a2
	s0 = 0<32>
	s5 = 3<32>
	s6 = 0x2FFF801<32>
	s7 = fp + -80<i32>
	s1 = 0x2FFF800<32>
	s2 = fp + -84<i32>
	s3 = fp + -76<i32>
l230293F0:
	word32 a5_115
	branch s5 <u a3 l2302941A
l2302941A:
	word32 a5_45 = (s4 << 2<u32>) + s9
	word32 s0_49 = CONVERT(Mem46[a5_45 + 3<i32>:byte], byte, word32)
	word32 a2_51 = CONVERT(Mem46[a5_45 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem46[a5_45:byte], byte, word32)
	word32 a1_52 = CONVERT(Mem46[a5_45 + 2<i32>:byte], byte, word32)
	word32 a5_54 = CONVERT(Mem46[a4 + 40<i32>:byte], byte, word32)
	Mem57[sp_101 + 24<i32>:word32] = 0<32>
	Mem58[sp_101 + 152<i32>:word32] = 0<32>
	Mem59[sp_101 + 156<i32>:word32] = 0<32>
	word32 s0_60 = s0_49 << 8<i32> | a1_52
	branch a5_54 != 0<32> l2302947E
l2302947E:
	Mem61[sp_101 + 32<i32>:byte] = 0<8>
	Mem63[sp_101 + 34<i32>:word16] = SLICE(s6, word16, 0)
	Mem65[sp_101 + 148<i32>:word32] = s7
l23029444:
	Mem66[sp_101 + 28<i32>:byte] = 0<8>
	Mem68[sp_101 + 30<i32>:word16] = SLICE(s1, word16, 0)
	Mem70[sp_101 + 148<i32>:word32] = s2
l2302944E:
	Mem76[sp_101 + 60<i32>:word16] = SLICE(a2_51, word16, 0)
	Mem78[sp_101 + 40<i32>:word16] = SLICE(s0_60, word16, 0)
	Mem79[sp_101 + 144<i32>:word32] = a5_54
	word32 a4_80 = Mem79[a5_54 + 28<i32>:word32]
	Mem83[sp_101 + 28<i32>:word32] = s3
	Mem90[sp_101 + 132<i32>:word32] = a3
	Mem91[sp_101 + 4<i32>:word32] = a4_80
	word32 s4_108
	word32 a0_113
	word32 a3_117
	call a5_54 (retsize: 0;)
		uses: a0:s8_87,a1:sp_56 + 44<i32>,a2:a4_80,a3:a3_117,a4:a4_80,a5:a5_115,ra:ra_93,s0:s0_60,s1:s1_67,s2:s2_69,s3:s3_82,s4:s4_42,s5:s5_40,s6:s6_62,s7:s7_64,s8:s8_87,s9:s9_44
		defs: a0:a0_113,a3:a3_117,a4:a4_118,a5:a5_115,ra:ra_103,s1:s1_105,s2:s2_106,s3:s3_107,s4:s4_108,s5:s5_109,s6:s6_110,s7:s7_111,s8:s8_102,s9:s9_112,sp:sp_101
	branch a0_113 == 0<32> l23029400
l2302946C:
	s4 = s4_108 + 1<32> & 255<i32>
	a3 = CONVERT(SLICE(a3_117 + 0xFFFFFFFC<32>, word16, 0), word16, word32)
	s0 = Mem91[sp_101 + 196<i32>:word32]
	a5 = a5_115
l230293F4:
	branch a3 != 0<32> l2302948A
l2302948A:
	word32 a4_133 = Mem132[a5 + 28<i32>:word32]
	word32 a3_166
	call a5 (retsize: 0;)
		uses: a0:s8_136,a1:0<32>,a2:a4_133,a3:a3_166,a4:a4_133,a5:a5_129,ra:ra_138,s0:s0_139,s1:s1_141,s2:s2_142,s3:s3_143,s4:s4_144,s5:s5_145,s6:s6_146,s7:s7_147,s8:s8_136,s9:s9_148
		defs: a3:a3_166
l230293F6:
	gatt_discover_next(ra, s1, s8_102, s0, a4, a3, s2, s3, Mem46[sp_101:word32], Mem46[sp_101 + 16<i32>:word32], Mem46[sp_101 + 20<i32>:word32], Mem46[sp_101 + 92<i32>:word32], Mem46[sp_101 + 180<i32>:word32], Mem46[sp_101 + 208<i32>:word32], Mem46[sp_101 + 212<i32>:word32], Mem46[sp_101 + 248<i32>:word32], Mem46[sp_101 + 280<i32>:word32])
l23029400:
	return
gatt_find_type_rsp_exit:


void gatt_read_group_rsp(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s10, word32 s11, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
gatt_read_group_rsp_entry:
l23029496:
	word32 a2_263
	word32 sp_174 = fp + -128<i32>
	word32 s2_102 = a4
	branch a1 == 0<32> l230294DC
l230294DC:
	word32 a1_34 = CONVERT(Mem29[a2:byte], byte, word32)
	s5 = a0
	s3 = a2
	branch a1_34 == 6<32> l23029508
l23029508:
l230294EA:
	branch a1_34 == 0x14<32> l23029548
l23029548:
l2302950C:
	a3 = a3 + 0xFFFFFFFF<32>
	s6 = 0x2FFF801<32>
	s1 = CONVERT(SLICE(a3 + 0xFFFFFFFF<32>, word16, 0), word16, word32)
	s10 = a2 + 1<i32>
	s0 = 0<32>
	s7 = fp + -120<i32>
	s4 = 0x2FFF800<32>
	s8 = fp + -116<i32>
	s9 = fp + -104<i32>
l23029530:
	branch s1 >=u CONVERT(Mem59[s3:byte], byte, word32) l23029550
l23029550:
	word32 s11_63 = CONVERT(Mem59[s10 + 1<i32>:byte], byte, word32)
	word32 a5_64 = CONVERT(Mem59[s10:byte], byte, word32)
	Mem66[sp_174 + 148<i32>:word32] = 0<32>
	Mem68[sp_174 + 24<i32>:word32] = 0<32>
	Mem69[sp_174 + 152<i32>:word32] = 0<32>
	Mem70[sp_174 + 28<i32>:word32] = 0<32>
	Mem71[sp_174 + 156<i32>:word32] = 0<32>
	s11 = s11_63 << 8<i32> | a5_64
	branch s11 == 0<32> l230294FC
l2302956C:
	s0 = CONVERT(Mem71[s10 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem71[s10 + 2<i32>:byte], byte, word32)
	branch s0 == 0<32> l230294FC
l2302957A:
	branch s0 <u s11 l230294FC
l2302957E:
	word32 a4_170
	word32 a2_78
	word32 a0_80
	word32 a1_79
	word32 a5_77 = CONVERT(Mem71[sp_174 + 24<i32>:byte], byte, word32)
	branch a5_77 == 0<32> l230295C4
l230295C4:
	a2_78 = 2<32>
	a1_79 = s10 + 4<i32>
	a0_80 = sp_174 + 26<i32>
l23029584:
	a4_170 = 2<32>
	branch a5_77 == 2<32> l230295D4
l230295D4:
	a2_78 = 0x10<32>
	a1_79 = s10 + 4<i32>
	a0_80 = sp_174 + 25<i32>
l230295CE:
	word32 a6_554
	word32 a7_555
	word32 a5_553
	word32 a2_552
	memcpy(a0_80, a1_79, a2_78, out a2_552, out a3, out a4_170, out a5_553, out a6_554, out a7_555)
l2302958A:
	branch CONVERT(Mem71[s2_102 + 40<i32>:byte], byte, word32) != 0<32> l230295E0
l230295E0:
	Mem109[sp_174 + 8<i32>:byte] = 0<8>
	Mem113[sp_174 + 10<i32>:word16] = SLICE(s6, word16, 0)
	Mem117[sp_174 + 148<i32>:word32] = s7
l23029590:
	Mem118[sp_174 + 12<i32>:byte] = 0<8>
	Mem122[sp_174 + 14<i32>:word16] = SLICE(s4, word16, 0)
	Mem126[sp_174 + 148<i32>:word32] = s8
l2302959A:
	Mem129[sp_174 + 28<i32>:word32] = sp_174 + 16<i32>
	word32 a5_131 = Mem129[s2_102 + 28<i32>:int32]
	Mem135[sp_174 + 20<i32>:word16] = SLICE(s0, word16, 0)
	Mem140[sp_174 + 8<i32>:word32] = s9
	Mem144[sp_174 + 60<i32>:word16] = SLICE(s11, word16, 0)
	word32 s1_178
	word32 s10_186
	word32 a0_196
	word32 t5_200
	word32 t6_201
	call a5_131 (retsize: 0;)
		uses: a0:s5_149,a1:sp_65 + 44<i32>,a2:s2_102,a3:a3_172,a4:a4_170,a5:a5_131,ra:ra_154,s0:s0_76,s1:s1_61,s10:s10_62,s11:s11_72,s2:s2_102,s3:s3_58,s4:s4_120,s5:s5_149,s6:s6_111,s7:s7_115,s8:s8_124,s9:s9_138,Stack +0018:dwArg18,Stack +FFFFFF88:dwLoc78,Stack +FFFFFFF0:dwLoc10,Stack +FFFFFFF4:dwLoc0C,t5:t5_200,t6:t6_201
		defs: a0:a0_196,a3:a3_194,a4:a4_188,ra:ra_176,s0:s0_177,s1:s1_178,s10:s10_186,s11:s11_187,s2:s2_175,s3:s3_179,s4:s4_180,s5:s5_181,s6:s6_182,s7:s7_183,s8:s8_184,s9:s9_185,sp:sp_174,t5:t5_200,t6:t6_201
	branch a0_196 == 0<32> l230294BE
l230295B6:
	word32 a5_202 = CONVERT(Mem144[s3:byte], byte, word32)
	s1 = CONVERT(SLICE(s1_178 - a5_202, word16, 0), word16, word32)
	s10 = s10_186 + a5_202
l23029538:
	branch s1 != 0<32> l230294FC
l2302953A:
	branch s0 == 0<32> l230294FC
l2302953C:
	gatt_discover_next(ra, s1, s5, s0, s2_102, a3, s2_102, s3, Mem59[sp_174:word32], Mem59[sp_174 + 16<i32>:word32], Mem59[sp_174 + 20<i32>:word32], Mem59[sp_174 + 92<i32>:word32], Mem59[sp_174 + 180<i32>:word32], Mem59[sp_174 + 208<i32>:word32], Mem59[sp_174 + 212<i32>:word32], Mem59[sp_174 + 248<i32>:word32], Mem59[sp_174 + 280<i32>:word32])
l230294F0:
	word32 a0_546
	word32 a1_547
	word32 a2_548
	word32 a5_549
	word32 a7_550
	word32 t4_551
	ra = printf(ra, 0x23076B98<32>, a3, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18, ra, out s1, out a0_546, out a1_547, out a2_548, out a3, out a4, out a5_549, out a7_550, out s2_102, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4_551)
l230294FC:
	a5 = Mem261[s2_102 + 28<i32>:int32]
	a2_263 = s2_102
	a0 = s5
l230294B6:
	a4 = Mem29[a5 + 28<i32>:word32]
	a2_263 = a4
l230294BC:
	word32 t5_335
	word32 t6_336
	call a5 (retsize: 0;)
		uses: a0:a0_304,a1:0<32>,a2:a2_303,a3:a3_305,a4:a4_298,a5:a5_271,ra:ra_273,s0:s0_275,s1:s1_277,s10:s10_292,s11:s11_294,s2:s2_272,s3:s3_279,s4:s4_281,s5:s5_283,s6:s6_284,s7:s7_286,s8:s8_288,s9:s9_290,Stack +0018:dwArg18,Stack +FFFFFF88:dwLoc78,Stack +FFFFFFF0:dwLoc10,Stack +FFFFFFF4:dwLoc0C,t5:t5_335,t6:t6_336
		defs: t5:t5_335,t6:t6_336
l230294BE:
	return
gatt_read_group_rsp_exit:


void gatt_read_type_rsp(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg4C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +004C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s5 sp
gatt_read_type_rsp_entry:
l230295EC:
	word32 a2_475
	word32 a4_101
	word32 sp_169 = fp + -112<i32>
	word32 s3_170 = a4
	branch a1 == 0<32> l23029614
l23029614:
	a4_101 = CONVERT(Mem27[a4 + 40<i32>:byte], byte, word32)
	s4 = a0
	s5 = a2
	word32 a1_37 = CONVERT(Mem27[a2:byte], byte, word32)
	branch a4_101 != 2<32> l23029778
l23029778:
	a4_101 = 7<32>
	branch a1_37 == 7<32> l2302979C
l2302979C:
l2302977E:
	a4_101 = 0x15<32>
	branch a1_37 == 0x15<32> l23029842
l23029842:
l230297A0:
	s1 = CONVERT(SLICE(a3 + -1<i32>, word16, 0), word16, word32)
	s2 = a2 + 1<i32>
	s0 = 0<32>
	s8 = fp + -88<i32>
	s6 = 0x2FFF803<32>
	s9 = fp + -100<i32>
	s7 = 0x23028A0E<32>
	s10 = fp + -96<i32>
l230297C8:
	branch s1 <u CONVERT(Mem59[s5:byte], byte, word32) l23029660
l230297D0:
	s0 = CONVERT(Mem59[s2 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem59[s2:byte], byte, word32)
	branch s0 == 0<32> l23029790
l230297DE:
	word32 a5_68 = CONVERT(Mem59[sp_169 + 24<i32>:byte], byte, word32)
	branch a5_68 == 0<32> l23029848
l23029848:
	Mem73[sp_169 + 26<i32>:word16] = SLICE(CONVERT(Mem59[s2 + 6<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem59[s2 + 5<i32>:byte], byte, word32), word16, 0)
l230297E4:
	branch a5_68 == 2<32> l2302985A
l2302985A:
	word32 a4_1033
	word32 a5_1034
	word32 a6_1035
	word32 a7_1036
	word32 a2_1032
	memcpy(sp_169 + 25<i32>, s2 + 5<i32>, 0x10<32>, out a2_1032, out a3, out a4_1033, out a5_1034, out a6_1035, out a7_1036)
l230297EA:
	word32 a1_94 = Mem93[s3_170 + 24<i32>:int32]
	branch a1_94 != 0<32> l2302986A
l2302986A:
	word32 a0_98
	word32 a1_1037
	word32 a2_1038
	word32 a5_1039
	word32 a6_1040
	s0 = bt_uuid_cmp(s8, a1_94, out a0_98, out a1_1037, out a2_1038, out a3, out a4_101, out a5_1039, out a6_1040, out s8)
	branch a0_98 == 0<32> l230297F0
l23029872:
l230297F0:
	Mem116[sp_169 + 156<i32>:word32] = 0<32>
	Mem117[sp_169 + 152<i32>:word32] = 0<32>
	Mem118[sp_169 + 12<i32>:byte] = 0<8>
	Mem122[sp_169 + 14<i32>:word16] = SLICE(s6, word16, 0)
	Mem126[sp_169 + 148<i32>:word32] = s9
	Mem130[sp_169 + 24<i32>:word32] = s7
	Mem132[sp_169 + 8<i32>:word32] = s8
	word32 a5_135 = CONVERT(Mem132[s2 + 4<i32>:byte], byte, word32)
	word32 a4_136 = CONVERT(Mem132[s2 + 3<i32>:byte], byte, word32)
	Mem140[sp_169 + 28<i32>:word32] = s10
	Mem143[sp_169 + 20<i32>:word16] = SLICE(a5_135 << 8<i32> | a4_136, word16, 0)
	word32 a5_144 = CONVERT(Mem143[s2 + 2<i32>:byte], byte, word32)
	Mem147[sp_169 + 60<i32>:word16] = SLICE(s0, word16, 0)
	Mem150[sp_169 + 22<i32>:byte] = SLICE(a5_144, byte, 0)
	Mem152[sp_169 + 62<i32>:byte] = 1<8>
	word32 a5_153 = Mem152[s3_170 + 28<i32>:int32]
	word32 a0_186
	word32 t5_194
	word32 t6_195
	word32 tp_669
	call a5_153 (retsize: 0;)
		uses: a0:s4_157,a1:sp_67 + 44<i32>,a2:s3_92,a3:a3_166,a4:a4_136,a5:a5_153,mstatus:mstatus_666,ra:ra_161,s0:s0_145,s1:s1_61,s10:s10_139,s2:s2_62,s3:s3_92,s4:s4_157,s5:s5_58,s6:s6_121,s7:s7_129,s8:s8_131,s9:s9_125,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +004C:dwArg4C,Stack +FFFFFF98:dwLoc68,t5:t5_194,t6:t6_195,tp:tp_669
		defs: a0:a0_186,a3:a3_187,a4:a4_182,mstatus:mstatus_668,ra:ra_171,s0:s0_172,s1:s1_173,s10:s10_181,s2:s2_174,s3:s3_170,s4:s4_175,s5:s5_176,s6:s6_177,s7:s7_178,s8:s8_179,s9:s9_180,sp:sp_169,t5:t5_194,t6:t6_195,tp:tp_669
	branch a0_186 == 0<32> l23029740
l23029834:
	word32 a5_198 = CONVERT(Mem197[s5:byte], byte, word32)
	s1 = CONVERT(SLICE(s1 - a5_198, word16, 0), word16, word32)
	s2 = s2 + a5_198
l23029626:
	branch a1_37 == 6<32> l2302966A
l2302966A:
l2302962C:
	branch a1_37 != 8<32> l23029784
l23029784:
	word32 a0_1007
	word32 a7_1011
	word32 s11_1012
	word32 t4_1013
	word32 a1_1008
	word32 a2_1009
	word32 a5_1010
	ra = printf(ra, 0x23076B98<32>, a3, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1, out a0_1007, out a1_1008, out a2_1009, out a3, out a4_101, out a5_1010, out a7_1011, out s2, out s3_170, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11_1012, out t4_1013)
l23029632:
l23029636:
	s1 = CONVERT(SLICE(a3 + -1<i32>, word16, 0), word16, word32)
	s2 = a2 + 1<i32>
	s0 = 0<32>
	s7 = fp + -68<i32>
	s8 = 2<32>
	s6 = 0x2FFF802<32>
	s9 = fp + -104<i32>
	s10 = fp + -96<i32>
l23029658:
	branch s1 >=u CONVERT(Mem252[s5:byte], byte, word32) l23029670
l23029670:
	s0 = CONVERT(Mem252[s2 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem252[s2:byte], byte, word32)
	branch s0 == 0<32> l23029790
l23029680:
	a4_101 = CONVERT(Mem252[s2 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem252[s2 + 2<i32>:byte], byte, word32)
	Mem265[sp_169 + 20<i32>:word16] = SLICE(a4_101, word16, 0)
	word32 a5_269 = CONVERT(Mem265[s2 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem265[s2 + 4<i32>:byte], byte, word32)
	a3 = CONVERT(Mem265[sp_169 + 44<i32>:byte], byte, word32)
	Mem271[sp_169 + 22<i32>:word16] = SLICE(a5_269, word16, 0)
	branch a3 == 0<32> l230296E2
l230296E2:
	Mem273[sp_169 + 8<i32>:word32] = s7
	a4_101 = CONVERT(Mem273[s2 + 6<i32>:byte], byte, word32)
	Mem278[sp_169 + 46<i32>:word16] = SLICE(CONVERT(Mem273[s2 + 7<i32>:byte], byte, word32) << 8<i32> | a4_101, word16, 0)
l230296A6:
	branch a3 == s8 l230296F6
l230296F6:
	Mem281[s3_170 + 32<i32>:word16] = SLICE(s0, word16, 0)
	Mem282[s3_170 + 34<i32>:word16] = SLICE(a4_101, word16, 0)
	Mem283[s3_170 + 36<i32>:word16] = SLICE(a5_269, word16, 0)
	word32 a4_293
	word32 a0_312
	word32 s6_1018
	word32 mstatus_1020
	word32 s11_1019
	word32 a2_1015
	word32 a5_1016
	word32 s5_1017
	word32 s0_1014
	ra = bt_att_create_pdu(ra, s1, s4, 2<32>, a3, mstatus, Mem283[sp_169 + 8<i32>:word32], Mem283[sp_169 + 48<i32>:word32], Mem283[sp_169 + 52<i32>:word32], Mem283[sp_169 + 64<i32>:word32], Mem283[sp_169 + 68<i32>:word32], Mem283[sp_169 + 80<i32>:word32], Mem283[sp_169 + 84<i32>:word32], Mem283[sp_169 + 88<i32>:word32], Mem283[sp_169 + 116<i32>:word32], Mem283[sp_169 + 120<i32>:word32], Mem283[sp_169 + 124<i32>:word32], Mem283[sp_169 + 136<i32>:word32], Mem283[sp_169 + 140<i32>:word32], Mem283[sp_169 + 156<i32>:word32], Mem283[sp_169 + 200<i32>:word32], Mem283[sp_169 + 232<i32>:word32], out s0_1014, out s1, out a0_312, out a2_1015, out a3, out a4_293, out a5_1016, out s2, out s3_170, out s4, out s5_1017, out s6_1018, out s11_1019, out mstatus_1020)
	branch a0_312 == 0<32> l2302975C
l2302975C:
	s0 = 0xFFF4<32>
l23029710:
	word32 a5_1026
	word32 a1_1025
	word32 a0_325 = net_buf_simple_add(a0_312 + 8<32>, 2<32>, a4_293, out a1_1025, out a5_1026)
	word32 a5_328 = CONVERT(Mem283[s3_170 + 34<i32>:uint16], uint16, word32)
	Mem331[a0_325:byte] = SLICE(a5_328, byte, 0)
	Mem333[a0_325 + 1<i32>:byte] = SLICE(a5_328 >>u 8<i32>, byte, 0)
	word32 s5_1029
	word32 s6_1030
	word32 s7_1031
	word32 a4_1027
	word32 a5_1028
	ra = gatt_send.constprop.28(ra, s4, a0_312, 0x23029874<32>, s3_170, Mem333[sp_169 + 24<i32>:word32], Mem333[sp_169 + 96<i32>:word32], Mem333[sp_169 + 100<i32>:word32], Mem333[sp_169 + 136<i32>:word32], Mem333[sp_169 + 172<i32>:word32], out s1, out a3, out a4_1027, out a5_1028, out s2, out s3_170, out s4, out s5_1029, out s6_1030, out s7_1031)
	s0 = CONVERT(SLICE(s4, word16, 0), word16, word32)
	branch s0 != 0<32> l23029762
l230296AA:
	word32 mstatus_453
	word32 a1_362 = Mem361[s3_170 + 24<i32>:int32]
	branch a1_362 != 0<32> l2302976E
l2302976E:
	word32 a0_365
	word32 a6_1024
	word32 a5_1023
	word32 a1_1021
	word32 a2_1022
	s0 = bt_uuid_cmp(s7, a1_362, out a0_365, out a1_1021, out a2_1022, out a3, out a4_101, out a5_1023, out a6_1024, out s8)
	branch a0_365 == 0<32> l230296B0
l23029776:
l230296B0:
	word32 a5_383 = Mem361[s3_170 + 28<i32>:int32]
	Mem386[sp_169 + 20<i32>:word32] = 0<32>
	Mem387[sp_169 + 140<i32>:word32] = 0<32>
	Mem388[sp_169 + 16<i32>:word32] = 0<32>
	Mem389[sp_169 + 8<i32>:byte] = 0<8>
	Mem393[sp_169 + 10<i32>:word16] = SLICE(s6, word16, 0)
	Mem397[sp_169 + 12<i32>:word32] = s9
	Mem401[sp_169 + 144<i32>:word32] = s10
	Mem404[sp_169 + 40<i32>:word16] = SLICE(s0, word16, 0)
	word32 a5_440
	word32 a0_442
	word32 t5_450
	word32 t6_451
	word32 tp_454
	call a5_383 (retsize: 0;)
		uses: a0:s4_286,a1:sp_264 + 24<i32>,a2:s3_280,a3:a3_423,a4:a4_421,a5:a5_440,mstatus:mstatus_453,ra:ra_288,s0:s0_402,s1:s1_254,s10:s10_400,s2:s2_255,s3:s3_280,s4:s4_286,s5:s5_251,s6:s6_392,s7:s7_272,s8:s8_419,s9:s9_396,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +004C:dwArg4C,Stack +FFFFFF98:dwLoc68,t5:t5_450,t6:t6_451,tp:tp_454
		defs: a0:a0_442,a3:a3_443,a4:a4_438,a5:a5_440,mstatus:mstatus_453,ra:ra_427,s0:s0_428,s1:s1_429,s10:s10_437,s2:s2_430,s3:s3_426,s4:s4_431,s5:s5_432,s6:s6_433,s7:s7_434,s8:s8_435,s9:s9_436,sp:sp_425,t5:t5_450,t6:t6_451,tp:tp_454
	mstatus = mstatus_453
	branch a0_442 == 0<32> l23029740
l230296D4:
	word32 a5_457 = CONVERT(Mem456[s5:byte], byte, word32)
	s1 = CONVERT(SLICE(s1 - a5_457, word16, 0), word16, word32)
	s2 = s2 + a5_457
l23029660:
	branch s1 != 0<32> l23029790
l23029664:
	branch s0 == 0<32> l23029790
l23029790:
	a5 = Mem472[s3_170 + 28<i32>:int32]
	a2_475 = s3_170
	a0 = s4
l23029668:
l23029762:
	gatt_discover_next(ra, s1, s4, s0, s3_170, a3, s2, s3_170, Mem497[sp_169:word32], Mem497[sp_169 + 16<i32>:word32], Mem497[sp_169 + 20<i32>:word32], Mem497[sp_169 + 92<i32>:word32], Mem497[sp_169 + 180<i32>:word32], Mem497[sp_169 + 208<i32>:word32], Mem497[sp_169 + 212<i32>:word32], Mem497[sp_169 + 248<i32>:word32], Mem497[sp_169 + 280<i32>:word32])
l2302960A:
	a4_101 = Mem27[a5 + 28<i32>:word32]
	a2_475 = a4_101
l23029610:
	word32 t5_598
	word32 t6_599
	word32 mstatus_601
	word32 tp_602
	call a5 (retsize: 0;)
		uses: a0:a0_567,a1:0<32>,a2:a2_568,a3:a3_569,a4:a4_557,a5:a5_527,mstatus:mstatus_601,ra:ra_529,s0:s0_531,s1:s1_534,s10:s10_554,s2:s2_536,s3:s3_528,s4:s4_538,s5:s5_539,s6:s6_542,s7:s7_545,s8:s8_548,s9:s9_551,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +004C:dwArg4C,Stack +FFFFFF98:dwLoc68,t5:t5_598,t6:t6_599,tp:tp_602
		defs: mstatus:mstatus_601,t5:t5_598,t6:t6_599,tp:tp_602
l23029740:
	return
gatt_read_type_rsp_exit:


void read_included_uuid_cb(word32 ra, word32 a0, word32 a2, word32 a3, word32 s3, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg6C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s3:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +006C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
read_included_uuid_cb_entry:
l23029874:
	word32 sp_117 = fp + -80<i32>
	word32 s1_109 = a0
	branch a3 == 0x10<32> l230298AC
l230298AC:
	word32 a7_282
	word32 a2_279
	word32 a6_281
	word32 a5_280
	word32 a4_30
	word32 a3_116
	word32 a1_33 = memcpy(fp + -55<i32>, a2, 0x10<32>, out a2_279, out a3_116, out a4_30, out a5_280, out a6_281, out a7_282)
	word32 s2_112 = fp + -56<i32>
	word32 s0_105 = Mem29[a1_33 + 24<i32>:word32]
	branch a1_33 != 0<32> l23029916
l23029916:
	word32 a0_45
	word32 a1_299
	word32 a2_300
	word32 a5_301
	word32 a6_302
	word32 s8_303
	s0_105 = bt_uuid_cmp(fp + -56<i32>, a1_33, out a0_45, out a1_299, out a2_300, out a3_116, out a4_30, out a5_301, out a6_302, out s8_303)
	branch a0_45 == 0<32> l230298D8
l2302991E:
l230298D8:
	word32 a5_70 = CONVERT(Mem68[s0_105 + 32<i32>:uint16], uint16, word32)
	word32 s0_74 = Mem73[a5_70 + 28<i32>:word32]
	word32 a0_91
	word32 a6_98
	word32 t1_99
	word32 t5_102
	word32 t6_103
	call a5_70 (retsize: 0;)
		uses: a0:a0,a1:fp + -36<i32>,a2:s0_74,a3:a3_84,a4:a4_83,a5:a5_70,a6:a6_98,ra:ra,s0:s0_74,s1:a0,s2:fp + -56<i32>,s3:s3,Stack +0008:fp + -56<i32>,Stack +000C:0<8>,Stack +000E:0xF802<16>,Stack +0018:0<32>,Stack +001C:fp + -64<i32>,Stack +0028:dwLoc28,Stack +003C:SLICE(a5_70, word16, 0),Stack +0070:dwArg20,Stack +0074:dwArg24,Stack +0094:fp + -68<i32>,Stack +0098:0<32>,Stack +009C:0<32>,Stack +00BC:dwArg6C,t1:t1_99,t5:t5_102,t6:t6_103
		defs: a0:a0_91,a3:a3_93,a6:a6_98,ra:ra_88,s0:s0_86,s1:s1_87,s2:s2_89,sp:sp_85,t1:t1_99,t5:t5_102,t6:t6_103
	branch a0_91 == 0<32> l230298A0
l23029908:
	gatt_discover_next(ra, s1_109, s1_109, CONVERT(Mem106[s0_105 + 32<i32>:uint16], uint16, word32), s0_105, a3_116, s2_112, s3, Mem106[sp_117:word32], Mem106[sp_117 + 16<i32>:word32], Mem106[sp_117 + 20<i32>:word32], Mem106[sp_117 + 92<i32>:word32], Mem106[sp_117 + 180<i32>:word32], Mem106[sp_117 + 208<i32>:word32], Mem106[sp_117 + 212<i32>:word32], Mem106[sp_117 + 248<i32>:word32], Mem106[sp_117 + 280<i32>:word32])
l23029888:
	word32 a5_147
	word32 a3_151
	word32 s1_155
	call a5_147 (retsize: 0;)
		uses: a0:s1_155,a3:a3_151,ra:printf(ra, 0x23076B98<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C, out s1_155, out a0_283, out a1_284, out a2_285, out a3_151, out a4_286, out a5_147, out a7_287, out s2_288, out s3_289, out s4_290, out s5_291, out s6_292, out s7_293, out s8_294, out s9_295, out s10_296, out s11_297, out t4_298),Stack +0008:dwLoc48,Stack +0028:dwLoc28,Stack +0070:dwArg20,Stack +0074:dwArg24,Stack +0098:dwArg48,Stack +00BC:dwArg6C
l230298A0:
	return
read_included_uuid_cb_exit:


void gatt_find_info_rsp(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 s3, word32 s5, word32 s6, word32 s8, word32 s9, word32 s10, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg4C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +004C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: s5 sp
gatt_find_info_rsp_entry:
l23029920:
	word32 sp_257 = fp + -112<i32>
	word32 s7_232 = a0
	word32 s4_258 = a4
	branch a1 != 0<32> l2302995C
l23029940:
	word32 a1_34 = CONVERT(Mem27[a2:byte], byte, word32)
	branch a1_34 == 1<32> l2302996A
l2302996A:
	s5 = 4<32>
l2302994A:
	branch a1_34 == 2<32> l230299A8
l230299A8:
	s5 = 0x12<32>
l23029970:
	word32 s0_44 = a3 + -1<i32> << 16<i32>
	s0 = s0_44 >>u 16<i32>
	branch s0_44 >>u 16<i32> <u s5 l2302995C
l2302997C:
	word32 s0_102 = s0_44 >>u 16<i32> >>u s5
	word32 s6_191 = 0x3000000<32>
	word32 s1_262 = a2 + 1<i32>
	word32 a5_284 = 0<32>
	word32 s2_263 = 0<32>
	word32 s3_264 = fp + -88<i32>
	word32 s8_103 = 0x2FFF800<32>
	word32 s9_148 = 0x2FFF801<32>
	word32 s10_171 = 0x2FFF802<32>
l2302999A:
	branch s0_102 != 0<32> l230299B0
l230299B0:
	s2_263 = CONVERT(Mem60[s1_262 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem60[s1_262:byte], byte, word32)
	branch a5_284 == 0<32> l230299C8
l230299C8:
	word32 a5_67 = CONVERT(Mem60[sp_257 + 24<i32>:byte], byte, word32)
	branch a5_67 == 0<32> l23029A34
l23029A34:
	Mem72[sp_257 + 26<i32>:word16] = SLICE(CONVERT(Mem60[s1_262 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem60[s1_262 + 2<i32>:byte], byte, word32), word16, 0)
l230299CE:
	branch a5_67 == 2<32> l23029A46
l23029A46:
	word32 a5_663
	word32 a6_664
	word32 a7_665
	word32 a2_661
	word32 a4_662
	memcpy(sp_257 + 25<i32>, s1_262 + 2<i32>, 0x10<32>, out a2_661, out a3, out a4_662, out a5_663, out a6_664, out a7_665)
l230299D4:
	word32 a1_93 = Mem92[s4_258 + 24<i32>:int32]
	branch a1_93 != 0<32> l23029A56
l23029A56:
	word32 a1_666
	word32 a0_97
	word32 a5_669
	word32 a6_670
	word32 a2_667
	word32 a4_668
	s0_102 = bt_uuid_cmp(s3_264, a1_93, out a0_97, out a1_666, out a2_667, out a3, out a4_668, out a5_669, out a6_670, out s8_103)
	branch a0_97 == 0<32> l230299DA
l23029A5E:
l230299DA:
	word32 a4_115 = CONVERT(Mem92[s4_258 + 40<i32>:byte], byte, word32)
	branch a4_115 != 4<32> l23029A60
l230299E4:
	Mem122[sp_257 + 8<i32>:byte] = 0<8>
	Mem126[sp_257 + 10<i32>:word16] = SLICE(s8_103, word16, 0)
	word32 a0_127
	word32 a1_671
	word32 a2_672
	word32 a5_674
	word32 a6_675
	word32 a4_673
	s0_102 = bt_uuid_cmp(s3_264, sp_257 + 8<i32>, out a0_127, out a1_671, out a2_672, out a3, out a4_673, out a5_674, out a6_675, out s8_103)
	branch a0_127 == 0<32> l230299C0
l230299F6:
	Mem145[sp_257 + 12<i32>:byte] = 0<8>
	Mem149[sp_257 + 14<i32>:word16] = SLICE(s9_148, word16, 0)
	word32 a0_150
	word32 a4_678
	word32 a5_679
	word32 a6_680
	word32 a1_676
	word32 a2_677
	s0_102 = bt_uuid_cmp(s3_264, sp_257 + 12<i32>, out a0_150, out a1_676, out a2_677, out a3, out a4_678, out a5_679, out a6_680, out s8_103)
	branch a0_150 == 0<32> l230299C0
l23029A08:
	Mem168[sp_257 + 16<i32>:byte] = 0<8>
	Mem172[sp_257 + 18<i32>:word16] = SLICE(s10_171, word16, 0)
	word32 a0_173
	word32 a6_685
	word32 a1_681
	word32 a4_683
	word32 a5_684
	word32 a2_682
	s0_102 = bt_uuid_cmp(s3_264, sp_257 + 16<i32>, out a0_173, out a1_681, out a2_682, out a3, out a4_683, out a5_684, out a6_685, out s8_103)
	branch a0_173 == 0<32> l230299C0
l23029A1A:
	Mem195[sp_257 + 20<i32>:byte] = 0<8>
	Mem196[sp_257 + 22<i32>:word16] = SLICE(s6_191 + -2045<i32>, word16, 0)
	word32 a0_197
	word32 a2_687
	word32 a5_688
	word32 a6_689
	word32 a1_686
	s0_102 = bt_uuid_cmp(s3_264, sp_257 + 20<i32>, out a0_197, out a1_686, out a2_687, out a3, out a4_115, out a5_688, out a6_689, out s8_103)
	branch a0_197 != 0<32> l23029A60
l23029A60:
	word32 a5_215 = Mem214[s4_258 + 28<i32>:int32]
	Mem217[sp_257 + 156<i32>:word32] = 0<32>
	Mem218[sp_257 + 24<i32>:word32] = 0<32>
	Mem219[sp_257 + 152<i32>:word32] = 0<32>
	Mem220[sp_257 + 28<i32>:word32] = 0<32>
	Mem222[sp_257 + 148<i32>:word32] = s3_264
	Mem226[sp_257 + 60<i32>:word16] = SLICE(s2_263, word16, 0)
	word32 a0_270
	word32 t5_282
	word32 t6_283
	call a5_215 (retsize: 0;)
		uses: a0:s7_232,a1:sp_66 + 44<i32>,a2:s4_91,a3:a3_253,a4:a4_252,ra:ra_237,s0:s0_238,s1:s1_59,s10:s10_171,s2:s2_64,s3:s3_95,s4:s4_91,s5:s5_247,s6:s6_191,s7:s7_232,s8:s8_249,s9:s9_148,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +004C:dwArg4C,Stack +FFFFFF98:dwLoc68,t5:t5_282,t6:t6_283
		defs: a0:a0_270,a3:a3_275,ra:ra_260,s0:s0_261,s1:s1_262,s10:s10_269,s2:s2_263,s3:s3_264,s4:s4_258,s5:s5_265,s6:s6_266,s7:s7_259,s8:s8_267,s9:s9_268,sp:sp_257,t5:t5_282,t6:t6_283
	branch a0_270 != 0<32> l230299C0
l23029A30:
	a5_284 = 1<32>
l230299C0:
	a5_284 = 0<32>
l230299C2:
	s0_102 = s0_102 + 0xFFFFFFFF<32>
	s1_262 = s1_262 + s5
l2302999C:
	gatt_discover_next(ra, s1_262, s7_232, s2_263, s4_258, a3, s2_263, s3_264, Mem60[sp_257:word32], Mem60[sp_257 + 16<i32>:word32], Mem60[sp_257 + 20<i32>:word32], Mem60[sp_257 + 92<i32>:word32], Mem60[sp_257 + 180<i32>:word32], Mem60[sp_257 + 208<i32>:word32], Mem60[sp_257 + 212<i32>:word32], Mem60[sp_257 + 248<i32>:word32], Mem60[sp_257 + 280<i32>:word32])
l23029950:
	word32 t4_660
	word32 a5_657
	word32 a0_654
	word32 a7_658
	word32 s11_659
	word32 a1_655
	word32 a2_656
	ra = printf(ra, 0x23076B2C<32>, a3, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1, out a0_654, out a1_655, out a2_656, out a3, out a4, out a5_657, out a7_658, out s2, out s3, out s4_258, out s5, out s6, out s7_232, out s8, out s9, out s10, out s11_659, out t4_660)
l2302995C:
	word32 t5_406
	word32 t6_407
	call Mem351[s4_258 + 28<i32>:int32] (retsize: 0;)
		uses: a0:s7_356,a1:0<32>,a2:s4_349,a3:a3_379,a4:a4_377,ra:ra_359,s0:s0_361,s1:s1_362,s10:s10_375,s2:s2_364,s3:s3_366,s4:s4_349,s5:s5_368,s6:s6_369,s7:s7_356,s8:s8_371,s9:s9_373,Stack +0008:dwLoc68,Stack +0070:dwArg00,Stack +0074:dwArg04,Stack +0098:dwArg28,Stack +00BC:dwArg4C,t5:t5_406,t6:t6_407
		defs: t5:t5_406,t6:t6_407
l23029A7C:
	return
gatt_find_info_rsp_exit:


word32 bt_gatt_read(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 s2, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg60, word32 dwArg7C, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgC8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_read
//      gatt_read_rsp
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_read_entry:
l23029A98:
	branch CONVERT(Mem0[a0 + 13<i32>:byte], byte, word32) != 4<32> l23029BE0
l23029BE0:
	s0Out = s0
	s1Out = s1
	a0Out = -57<i32>
	a3Out = a3
	s2Out = s2
	s3Out = s3
	mstatusOut = mstatus
	return ra
l23029AA2:
	word32 a3_119
	word32 mstatus_141
	word32 ra_123
	word32 s1_125
	word32 s3_146
	word32 s2_101
	word32 a1_169
	word32 a3_166
	word32 s0_216
	word32 a1_22 = Mem20[a2 + 28<i32>:word32]
	branch a2 != 0<32> l23029B2A
l23029B2A:
	branch a2 <=u 1<32> l23029B82
l23029B82:
	branch CONVERT(Mem20[a1_22 + 34<i32>:uint16], uint16, word32) == 0<32> l23029BBA
l23029BBA:
	word32 a4_34
	word32 a0_53
	word32 a2_483
	word32 a5_484
	word32 s2_485
	word32 s4_486
	word32 s5_487
	word32 s6_488
	word32 s11_489
	ra_123 = bt_att_create_pdu(ra, a0, a0, 2<32>, a3, mstatus, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg7C, dwArgA8, dwArgC8, out s0_216, out s1_125, out a0_53, out a2_483, out a3_119, out a4_34, out a5_484, out s2_485, out s3_146, out s4_486, out s5_487, out s6_488, out s11_489, out mstatus_141)
	s2_101 = a0_53
	branch a0_53 == 0<32> l23029AC4
l23029BC8:
	word32 a1_499
	word32 a5_500
	word32 a0_63 = net_buf_simple_add(a0_53 + 8<32>, 2<32>, a4_34, out a1_499, out a5_500)
	word32 a5_66 = CONVERT(Mem20[s0_216 + 32<i32>:uint16], uint16, word32)
	Mem67[a0_63:byte] = SLICE(a5_66, byte, 0)
	Mem69[a0_63 + 1<i32>:byte] = SLICE(a5_66 >>u 8<i32>, byte, 0)
l23029B88:
	word32 a4_75
	word32 a0_94
	word32 a2_490
	word32 a5_491
	word32 s2_492
	word32 s4_493
	word32 s5_494
	word32 s6_495
	word32 s11_496
	ra_123 = bt_att_create_pdu(ra, a0, a0, 4<32>, a3, mstatus, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg7C, dwArgA8, dwArgC8, out s0_216, out s1_125, out a0_94, out a2_490, out a3_119, out a4_75, out a5_491, out s2_492, out s3_146, out s4_493, out s5_494, out s6_495, out s11_496, out mstatus_141)
	s2_101 = a0_94
	branch a0_94 == 0<32> l23029AC4
l23029B94:
	word32 a1_497
	word32 a5_498
	word32 a0_104 = net_buf_simple_add(a0_94 + 8<32>, 4<32>, a4_75, out a1_497, out a5_498)
	word32 a5_107 = CONVERT(Mem20[s0_216 + 32<i32>:uint16], uint16, word32)
	Mem108[a0_104:byte] = SLICE(a5_107, byte, 0)
	Mem110[a0_104 + 1<i32>:byte] = SLICE(a5_107 >>u 8<i32>, byte, 0)
	word32 a5_111 = CONVERT(Mem110[s0_216 + 34<i32>:uint16], uint16, word32)
	Mem112[a0_104 + 2<i32>:byte] = SLICE(a5_111, byte, 0)
	Mem114[a0_104 + 3<i32>:byte] = SLICE(a5_111 >>u 8<i32>, byte, 0)
l23029B30:
	word32 a0_139
	word32 s0_469
	word32 a2_470
	word32 a4_471
	word32 s3_472
	word32 s4_473
	word32 s5_474
	word32 s6_475
	word32 s11_476
	word32 a5_121
	ra_123 = bt_att_create_pdu(ra, a0, a0, a2 << 1<i32>, a3, mstatus, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg7C, dwArgA8, dwArgC8, out s0_469, out s1_125, out a0_139, out a2_470, out a3_119, out a4_471, out a5_121, out s2_101, out s3_472, out s4_473, out s5_474, out s6_475, out s11_476, out mstatus_141)
	s3_146 = a0_139
	branch a0_139 == 0<32> l23029AC4
l23029B3C:
	word32 s2_147 = 0<32>
l23029B42:
	word32 s0_151 = Mem20[a5_121 + 28<i32>:word32]
	branch s2_147 <u a5_121 l23029B68
l23029B68:
	word32 a5_157 = a5_121 + (s2_147 << 1<u32>)
	net_buf_simple_add_le16(a0_139 + 8<i32>, CONVERT(Mem20[a5_157:uint16], uint16, word32), a5_157, out a5_121)
	s2_147 = s2_147 + 1<32> & 255<i32>
l23029B48:
	a3_166 = s0_151
	a1_169 = a0_139
l23029AB8:
	word32 a4_175
	word32 s0_179
	word32 a0_194
	word32 a2_456
	word32 a5_457
	word32 s2_458
	word32 s4_459
	word32 s5_460
	word32 s6_461
	word32 s11_462
	ra_123 = bt_att_create_pdu(ra, a0, a0, 4<32>, a3, mstatus, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg7C, dwArgA8, dwArgC8, out s0_179, out s1_125, out a0_194, out a2_456, out a3_119, out a4_175, out a5_457, out s2_458, out s3_146, out s4_459, out s5_460, out s6_461, out s11_462, out mstatus_141)
	s2_101 = a0_194
	branch a0_194 != 0<32> l23029AD6
l23029AD6:
	word32 a1_206
	word32 a5_463
	word32 a0_205 = net_buf_simple_add(a0_194 + 8<i32>, 4<32>, a4_175, out a1_206, out a5_463)
	word32 a5_208 = CONVERT(Mem20[s0_179 + 32<i32>:uint16], uint16, word32)
	Mem209[a0_205:byte] = SLICE(a5_208, byte, 0)
	Mem211[a0_205 + 1<i32>:byte] = SLICE(a5_208 >>u 8<i32>, byte, 0)
	word32 a5_212 = CONVERT(Mem211[s0_179 + 34<i32>:uint16], uint16, word32)
	Mem213[a0_205 + 2<i32>:byte] = SLICE(a5_212, byte, 0)
	Mem215[a0_205 + 3<i32>:byte] = SLICE(a5_212 >>u 8<i32>, byte, 0)
	s0_216 = Mem215[a1_206 + 36<i32>:word32]
	word32 a5_217 = CONVERT(Mem215[a1_206:byte], byte, word32)
	branch a5_217 != 0<32> l23029B1E
l23029B1E:
	word32 a2_464
	word32 a3_465
	word32 a4_466
	word32 a5_467
	net_buf_simple_add_mem(a0_194 + 8<i32>, a1_206 + 1<32>, 0x10<32>, a4_175, out a2_464, out a3_465, out a4_466, out a5_467)
l23029B06:
	word32 a5_468
	net_buf_simple_add_le16(a0_194 + 8<i32>, CONVERT(Mem215[a1_206 + 2<i32>:uint16], uint16, word32), a5_217, out a5_468)
l23029B10:
	a3_166 = s0_216
	a1_169 = s2_101
l23029B54:
l23029B64_thunk_gatt_send.constprop.28:
	word32 a3_270
	word32 s1_275
	word32 s2_278
	word32 s3_279
	word32 a4_477
	word32 a5_478
	word32 s4_479
	word32 s5_480
	word32 s6_481
	word32 s7_482
	word32 ra_274 = gatt_send.constprop.28(ra_123, s1_125, a1_169, dwArg48, a3_166, dwArg18, dwArg60, s3, dwArg88, dwArgAC, out s1_275, out a3_270, out a4_477, out a5_478, out s2_278, out s3_279, out s4_479, out s5_480, out s6_481, out s7_482)
	s0Out = s1
	s1Out = s1_275
	a0Out = s1_125
	a3Out = a3_270
	s2Out = s2_278
	s3Out = s3_279
	mstatusOut = mstatus_141
	return ra_274
l23029AC4:
	s0Out = s1
	s1Out = s1_125
	a0Out = 0xFFFFFFF4<32>
	a3Out = a3_119
	s2Out = s2_101
	s3Out = s3_146
	mstatusOut = mstatus_141
	return ra_123
bt_gatt_read_exit:


void gatt_read_rsp(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg28, word32 dwArg48, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
gatt_read_rsp_entry:
l23029BE6:
	word32 a1_153
	word32 t1_149
	word32 sp_110 = fp + 0xFFFFFFE0<32>
	word32 s2_103 = a0
	word32 s0_112 = a4
	branch a1 != 0<32> l23029BFE
l23029BFC:
	branch a3 != 0<32> l23029C1C
l23029C1C:
	s3 = a2
	branch a1 != 0<32> l23029CD2
l23029CD2:
	word32 s2_33
	word32 ra_34
	word32 a0_38
	word32 a3_42
	word32 t1_43
	word32 tp_332
	word32 t6_331
	word32 t5_330
	call a1 (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a4,a3:a2,a4:a3,mstatus:mstatus,ra:ra,s0:a4,s1:a3,s2:a0,s3:a2,s4:s4,t1:t1_43,t5:t5_330,t6:t6_331,tp:tp_332
		defs: a0:a0_38,a3:a3_42,ra:ra_34,s0:s0_32,s2:s2_33,sp:sp_31,t1:t1_43,t5:t5_330,t6:t6_331,tp:tp_332
	branch a0_38 == 0<32> l23029CF6
l23029CDE:
	word32 a0_49
	word32 a3_494
	word32 s10_495
	ra = bt_att_get_mtu(ra_34, s2_33, a3_42, Mem15[sp_110 + 8<i32>:word32], Mem15[sp_110 + 80<i32>:word32], Mem15[sp_110 + 84<i32>:word32], Mem15[sp_110 + 120<i32>:word32], Mem15[sp_110 + 156<i32>:word32], out s1, out a0_49, out a2, out a3_494, out s2_103, out s3, out s10_495)
	branch s1 < a0_49 + 0xFFFFFFFF<32> l23029CB0
l23029CEA:
	a3 = CONVERT(Mem15[s0_112 + 34<i32>:uint16], uint16, word32)
	s1 = s1 + a3
	Mem74[s0_112 + 34<i32>:word16] = SLICE(s1, word16, 0)
l23029C24:
	s1 = CONVERT(SLICE(a3 + -1<i32>, word16, 0), word16, word32)
	word32 s4_146 = a2 + 1<i32>
l23029C30:
	sp_110 = fp - 32<i32>
	branch s1 == 0<32> l23029C86
l23029C32:
	word32 a5_85 = CONVERT(Mem81[s4_146 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem81[s4_146:byte], byte, word32)
	branch a5_85 != 0<32> l23029C5A
l23029C5A:
	word32 a4_88
	word32 a4_87 = CONVERT(Mem81[s3:byte], byte, word32)
	branch s1 >=u a4_87 l23029CA0
l23029CA0:
	a4_88 = a4_87 + 0xFFFFFFFE<32>
l23029C62:
	a4_88 = s1 + -2<i32>
l23029C66:
	Mem93[s0_112 + 32<i32>:word16] = SLICE(a5_85, word16, 0)
	word32 s0_94 = Mem93[a5_85 + 24<i32>:word32]
	word32 t5_334
	word32 s4_117
	word32 a0_118
	word32 t1_123
	word32 t6_335
	word32 tp_336
	call a5_85 (retsize: 0;)
		uses: a0:s2_103,a1:0<32>,a2:s0_94,a3:s4_80 + 2<i32>,a4:CONVERT(SLICE(a4_95, word16, 0), word16, word32),mstatus:mstatus,ra:ra_106,s0:s0_94,s1:s1_79,s2:s2_103,s3:s3_86,s4:s4_80,t1:t1_123,t5:t5_334,t6:t6_335,tp:tp_336
		defs: a0:a0_118,a2:a2_124,a3:a3_122,ra:ra_114,s0:s0_112,s1:s1_115,s2:s2_113,s3:s3_116,s4:s4_117,sp:sp_111,t1:t1_123,t5:t5_334,t6:t6_335,tp:tp_336
	branch a0_118 == 0<32> l23029CF6
l23029C7E:
	branch s1 >=u CONVERT(Mem93[s3:byte], byte, word32) l23029CA4
l23029CA4:
	word32 a5_138 = CONVERT(Mem93[s0_112 + 32<i32>:uint16], uint16, word32)
	branch CONVERT(Mem93[s0_112 + 34<i32>:uint16], uint16, word32) != a5_138 l23029CBE
l23029CBE:
	Mem141[s0_112 + 32<i32>:word16] = SLICE(a5_138 + 1<32>, word16, 0)
	word32 a5_142 = CONVERT(Mem141[s3:byte], byte, word32)
	s1 = CONVERT(SLICE(s1 - a5_142, word16, 0), word16, word32)
	s4_146 = s4_117 + a5_142
l23029CB0:
	t1_149 = Mem148[s0_112 + 24<i32>:int32]
	a1_153 = 0<32>
l23029C86:
	word32 a0_171
	word32 s0_181
	word32 a3_474
	ra = bt_gatt_read(ra, s1, s2_103, a2, a3, s2_103, s3, mstatus, Mem170[sp_110 + 16<i32>:word32], Mem170[sp_110 + 20<i32>:word32], Mem170[sp_110 + 24<i32>:word32], Mem170[sp_110 + 32<i32>:word32], Mem170[sp_110 + 36<i32>:word32], Mem170[sp_110 + 48<i32>:word32], Mem170[sp_110 + 52<i32>:word32], Mem170[sp_110 + 56<i32>:word32], Mem170[sp_110 + 72<i32>:word32], Mem170[sp_110 + 84<i32>:word32], Mem170[sp_110 + 88<i32>:word32], Mem170[sp_110 + 92<i32>:word32], Mem170[sp_110 + 96<i32>:word32], Mem170[sp_110 + 124<i32>:word32], Mem170[sp_110 + 136<i32>:word32], Mem170[sp_110 + 168<i32>:word32], Mem170[sp_110 + 172<i32>:word32], Mem170[sp_110 + 200<i32>:word32], out s0_181, out s1, out a0_171, out a3_474, out s2_103, out s3, out mstatus)
	branch a0_171 >= 0<32> l23029CF6
l23029CF6:
	return
l23029C92:
	t1_149 = Mem170[s0_181 + 24<i32>:int32]
	a1_153 = 0xE<32>
l23029C40:
l23029C56_thunk_printf:
	word32 s9_490
	word32 t4_493
	word32 s11_492
	word32 s10_491
	word32 s5_486
	word32 s8_489
	word32 s7_488
	word32 s6_487
	word32 a7_482
	word32 s4_485
	word32 s3_484
	word32 s2_483
	word32 a2_478
	word32 a5_481
	word32 a4_480
	word32 a3_479
	word32 a1_477
	word32 a0_476
	word32 s1_475
	printf(ra, 0x23076BB0<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_475, out a0_476, out a1_477, out a2_478, out a3_479, out a4_480, out a5_481, out a7_482, out s2_483, out s3_484, out s4_485, out s5_486, out s6_487, out s7_488, out s8_489, out s9_490, out s10_491, out s11_492, out t4_493)
	return
l23029BFE:
	t1_149 = Mem15[a4 + 24<i32>:int32]
	a1_153 = a1
l23029C0A:
	word32 t1_296
	word32 t5_311
	word32 t6_312
	word32 tp_313
	call t1_149 (retsize: 0;)
		uses: a0:s2_262,a1:a1_278,a2:Mem256[sp_253 + 104<i32>:word32],a3:0<32>,a4:0<32>,a6:Mem256[sp_253 + 72<i32>:word32],mstatus:mstatus_281,ra:ra_269,s0:Mem256[sp_253 + 136<i32>:word32],s1:s1_272,s2:s2_262,s3:s3_275,s4:Mem256[sp_253 + 36<i32>:word32],s8:Mem256[sp_253 + 4<i32>:word32],Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0028:dwArg28,Stack +0048:dwArg48,Stack +0070:dwArg70,Stack +0074:dwArg74,Stack +0098:dwArg98,Stack +00BC:dwArgBC,t1:t1_296,t3:Mem256[sp_253 + 32<i32>:word32],t5:t5_311,t6:t6_312,tp:tp_313
		defs: t1:t1_296,t5:t5_311,t6:t6_312,tp:tp_313
	return
gatt_read_rsp_exit:


word32 bt_gatt_write_without_response_cb(word32 ra, word32 a0, word32 a3, word32 a4, word32 s3, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_write_without_rsp
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_write_without_response_cb_entry:
l23029D06:
	branch CONVERT(Mem0[a0 + 13<i32>:byte], byte, word32) != 4<32> l23029D9E
l23029D9E:
	a3Out = a3
	return ra
l23029D10:
	word32 a2_41
	branch CONVERT(Mem26[a0 + 11<i32>:byte], byte, word32) != 0<32> l23029D92
l23029D36:
	branch a4 == 0<32> l23029D92
l23029D92:
	a2_41 = a3 + 2<i32>
l23029D38:
	a2_41 = a3 + 14<i32>
l23029D40:
	word32 a3_63
	word32 a4_64
	word32 s0_68
	word32 s1_69
	word32 s2_72
	word32 s5_75
	word32 s6_76
	word32 a0_83
	word32 mstatus_85
	word32 s11_362
	word32 s3_360
	word32 s4_361
	word32 a2_358
	word32 a5_359
	word32 ra_67 = bt_att_create_pdu(ra, a3, a0, a2_41, a3, mstatus, s6, dwArg00, dwArg04, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, s5, s3, dwArg6C, dwArg98, dwArgB8, out s0_68, out s1_69, out a0_83, out a2_358, out a3_63, out a4_64, out a5_359, out s2_72, out s3_360, out s4_361, out s5_75, out s6_76, out s11_362, out mstatus_85)
	branch a0_83 == 0<32> l23029DA4
l23029DA4:
	0<32> = dwArg0128
	a3Out = a3_63
	return ra_67
l23029D48:
	word32 a5_344
	word32 a1_343
	word32 a0_104 = net_buf_simple_add(a0_83 + 8<i32>, 2<32>, a4_64, out a1_343, out a5_344)
	Mem107[a0_104:byte] = SLICE(s2_72, byte, 0)
	Mem110[a0_104 + 1<i32>:byte] = SLICE(s2_72 >>u 8<u32>, byte, 0)
	word32 a4_113
	word32 a6_348
	word32 a7_349
	word32 a3_346
	word32 a5_347
	word32 a2_345
	memcpy(a0_104 + 2<32>, s6_76, s1_69, out a2_345, out a3_346, out a4_113, out a5_347, out a6_348, out a7_349)
	word32 a1_350
	word32 a5_351
	net_buf_simple_add(a0_83 + 8<i32>, s1_69, a4_113, out a1_350, out a5_351)
	0<32> = dwArg0128
l23029D8E_thunk_bt_att_send:
	word32 a3_146
	word32 s7_356
	word32 mstatus_357
	word32 a4_354
	word32 s6_355
	word32 s0_352
	word32 a0_353
	word32 ra_152 = bt_att_send(ra_67, dwArgE4, s0_68, a0_83, s5_75, a0_83, mstatus_85, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, s5, dwArg68, dwArg74, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0158, out s0_352, out a0_353, out a3_146, out a4_354, out s6_355, out s7_356, out mstatus_357)
	a3Out = a3_146
	return ra_152
bt_gatt_write_without_response_cb_exit:


word32 bt_gatt_write(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg60, word32 dwArg7C, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgC8, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_write
//      gatt_prepare_write_rsp
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_write_entry:
l23029DBC:
	branch CONVERT(Mem0[a0 + 13<i32>:byte], byte, word32) != 4<32> l23029EFA
l23029EFA:
	a0Out = -57<i32>
	a3Out = a3
	return ra
l23029DC6:
	word32 a3_191
	word32 ra_195
	word32 a1_119
	word32 a3_117
	word32 s1_197
	word32 ra_125
	word32 s1_123 = a0
	ra_125 = ra
	branch CONVERT(Mem20[a1 + 30<i32>:uint16], uint16, word32) == 0<32> l23029E00
l23029E00:
	word32 a0_27
	word32 s2_38
	word32 a2_516
	word32 s3_517
	word32 s10_518
	ra_125 = bt_att_get_mtu(ra, a0, a3, s2, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_123, out a0_27, out a2_516, out a3, out s2_38, out s3_517, out s10_518)
	branch a0_27 + 0xFFFFFFFD<32> <u s2_38 l23029DDE
l23029E0E:
	word32 a4_58
	word32 s0_62
	word32 a0_77
	word32 a2_519
	word32 a5_520
	word32 s2_521
	word32 s3_522
	word32 s4_523
	word32 s5_524
	word32 s6_525
	word32 s11_526
	word32 mstatus_527
	ra_195 = bt_att_create_pdu(ra_125, s1_123, s1_123, CONVERT(Mem20[a1 + 36<i32>:uint16], uint16, word32) + 2<32>, a3, mstatus, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg7C, dwArgA8, dwArgC8, out s0_62, out s1_197, out a0_77, out a2_519, out a3_191, out a4_58, out a5_520, out s2_521, out s3_522, out s4_523, out s5_524, out s6_525, out s11_526, out mstatus_527)
	branch a0_77 == 0<32> l23029E72
l23029E20:
	word32 a1_89
	word32 a5_528
	word32 a0_88 = net_buf_simple_add(a0_77 + 8<i32>, 2<32>, a4_58, out a1_89, out a5_528)
	word32 a5_91 = CONVERT(Mem20[s0_62 + 28<i32>:uint16], uint16, word32)
	Mem93[a0_88 + 0x1000<32>:byte] = SLICE(a5_91, byte, 0)
	Mem95[a0_88 + 0x1001<32>:byte] = SLICE(a5_91 >>u 8<i32>, byte, 0)
	word32 s0_97 = Mem95[a1_89 + 32<i32>:word32]
	word32 a4_98
	word32 a2_529
	word32 a3_530
	word32 a5_531
	word32 a6_532
	word32 a7_533
	memcpy(a0_88 + 2<32>, a1_89, CONVERT(Mem95[s0_62 + 36<i32>:uint16], uint16, word32), out a2_529, out a3_530, out a4_98, out a5_531, out a6_532, out a7_533)
	word32 a1_534
	word32 a5_535
	net_buf_simple_add(a0_77 + 8<i32>, CONVERT(Mem95[s0_97 + 36<i32>:uint16], uint16, word32), a4_98, out a1_534, out a5_535)
	a3_117 = s0_97
	a1_119 = a0_77
l23029DDE:
	word32 s2_151
	word32 a0_128
	word32 s2_139
	word32 a2_484
	word32 s3_485
	word32 s10_486
	word32 s1_136
	word32 a3_131
	word32 ra_135 = bt_att_get_mtu(ra_125, s1_123, a3, s2, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_136, out a0_128, out a2_484, out a3_131, out s2_139, out s3_485, out s10_486)
	branch s2_139 <u a0_128 + 0xFFFFFFFB<32> l23029E5E
l23029E5E:
	s2_151 = CONVERT(Mem20[a1 + 36<i32>:uint16], uint16, word32)
l23029DEE:
	word32 a0_153
	word32 a2_487
	word32 s2_488
	word32 s3_489
	word32 s10_490
	ra_135 = bt_att_get_mtu(ra_135, s1_136, a3_131, s2, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_136, out a0_153, out a2_487, out a3_131, out s2_488, out s3_489, out s10_490)
	s2_151 = CONVERT(SLICE(a0_153 + 0xFFFFFFFB<32>, word16, 0), word16, word32)
l23029E62:
	word32 a4_192
	word32 s0_196
	word32 s2_200
	word32 a0_211
	word32 a2_491
	word32 a5_492
	word32 s3_493
	word32 s4_494
	word32 s5_495
	word32 s6_496
	word32 s11_497
	word32 mstatus_498
	ra_195 = bt_att_create_pdu(ra_135, s1_136, s1_136, s2_151 + 4<i32>, a3_131, mstatus, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg7C, dwArgA8, dwArgC8, out s0_196, out s1_197, out a0_211, out a2_491, out a3_191, out a4_192, out a5_492, out s2_200, out s3_493, out s4_494, out s5_495, out s6_496, out s11_497, out mstatus_498)
	branch a0_211 != 0<32> l23029E84
l23029E84:
	word32 a1_223
	word32 a5_499
	word32 a0_222 = net_buf_simple_add(a0_211 + 8<i32>, 4<32>, a4_192, out a1_223, out a5_499)
	word32 a5_225 = CONVERT(Mem20[s0_196 + 28<i32>:uint16], uint16, word32)
	Mem228[a0_222 + 0x1000<32>:byte] = SLICE(a5_225, byte, 0)
	Mem230[a0_222 + 0x1001<32>:byte] = SLICE(a5_225 >>u 8<i32>, byte, 0)
	word32 a5_231 = CONVERT(Mem230[s0_196 + 30<i32>:uint16], uint16, word32)
	Mem232[a0_222 + 0x1002<32>:byte] = SLICE(a5_231, byte, 0)
	Mem234[a0_222 + 0x1003<32>:byte] = SLICE(a5_231 >>u 8<i32>, byte, 0)
	word32 s0_235 = Mem234[a1_223 + 32<i32>:word32]
	word32 a4_236
	word32 a2_500
	word32 a3_501
	word32 a5_502
	word32 a6_503
	word32 a7_504
	memcpy(a0_222 + 4<32>, a1_223, s2_200, out a2_500, out a3_501, out a4_236, out a5_502, out a6_503, out a7_504)
	word32 a1_505
	word32 a5_506
	net_buf_simple_add(a0_211 + 8<i32>, s2_200, a4_236, out a1_505, out a5_506)
	word32 a0_255 = CONVERT(Mem234[s0_235 + 36<i32>:uint16], uint16, word32)
	word32 a5_257 = CONVERT(Mem234[s0_235 + 30<i32>:uint16], uint16, word32) + s2_200
	Mem258[s0_235 + 30<i32>:word16] = SLICE(a5_257, word16, 0)
	word32 s0_259 = Mem258[a5_257 + 32<i32>:word32]
	Mem264[a5_257 + s2_200 + 32<i32>:word32] = s0_259
	Mem265[s0_259 + 36<i32>:word16] = SLICE(a0_255 - s2_200, word16, 0)
	a3_117 = s0_259
	a1_119 = a0_211
l23029EE6:
l23029EF6_thunk_gatt_send.constprop.28:
	word32 a3_283
	word32 s1_507
	word32 a4_508
	word32 a5_509
	word32 s2_510
	word32 s3_511
	word32 s4_512
	word32 s5_513
	word32 s6_514
	word32 s7_515
	word32 ra_287 = gatt_send.constprop.28(ra_195, s1_197, a1_119, dwArg48, a3_117, dwArg18, dwArg60, s3, dwArg88, dwArgAC, out s1_507, out a3_283, out a4_508, out a5_509, out s2_510, out s3_511, out s4_512, out s5_513, out s6_514, out s7_515)
	a0Out = s1_197
	a3Out = a3_283
	return ra_287
l23029E72:
	a0Out = 0xFFFFFFF4<32>
	a3Out = a3_191
	return ra_195
bt_gatt_write_exit:


void gatt_prepare_write_rsp(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
gatt_prepare_write_rsp_entry:
l23029F00:
	branch a1 == 0<32> l23029F0A
l23029F0A:
	branch CONVERT(Mem0[a4 + 36<i32>:uint16], uint16, word32) != 0<32> l23029F54
l23029F54:
l23029F56_thunk_bt_gatt_write:
	word32 a0_242
	word32 a3_243
	bt_gatt_write(ra, s1, a0, a4, a3, s2, s3, mstatus, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg48, dwArg54, dwArg58, dwArg5C, dwArg60, dwArg7C, dwArg88, dwArgA8, dwArgAC, dwArgC8, out a0_242, out a3_243)
	return
l23029F10:
	word32 a4_57
	word32 s0_61
	word32 s1_62
	word32 a0_76
	word32 a2_220
	word32 a3_221
	word32 a5_222
	word32 s2_223
	word32 s3_224
	word32 s4_225
	word32 s5_226
	word32 s6_227
	word32 s11_228
	word32 mstatus_229
	word32 ra_60 = bt_att_create_pdu(ra, a0, a0, 1<32>, a3, mstatus, dwLoc08, dwArg20, dwArg24, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg64, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg8C, dwArgB8, dwArgD8, out s0_61, out s1_62, out a0_76, out a2_220, out a3_221, out a4_57, out a5_222, out s2_223, out s3_224, out s4_225, out s5_226, out s6_227, out s11_228, out mstatus_229)
	branch a0_76 == 0<32> l23029F5A
l23029F5A:
	0<32> = dwArg38
	return
l23029F2A:
	word32 a1_230
	word32 a5_231
	Mem94[net_buf_simple_add(a0_76 + 8<32>, 1<32>, a4_57, out a1_230, out a5_231):byte] = 1<8>
	0<32> = dwArg38
l23029F50_thunk_gatt_send.constprop.28:
	word32 s1_232
	word32 a3_233
	word32 a4_234
	word32 a5_235
	word32 s2_236
	word32 s3_237
	word32 s4_238
	word32 s5_239
	word32 s6_240
	word32 s7_241
	gatt_send.constprop.28(ra_60, s1_62, a0_76, 0x23027F44<32>, s0_61, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_232, out a3_233, out a4_234, out a5_235, out s2_236, out s3_237, out s4_238, out s5_239, out s6_240, out s7_241)
	return
l23029F02:
	call Mem0[a4 + 24<i32>:int32] (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a4,a3:a3,a4:a4,mstatus:mstatus,ra:ra,s0:s0,s1:s1,s2:s2,s3:s3,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0030:dwArg30,Stack +0034:dwArg34,Stack +0038:dwArg38,Stack +0040:dwArg40,Stack +0044:dwArg44,Stack +0048:dwArg48,Stack +0054:dwArg54,Stack +0058:dwArg58,Stack +005C:dwArg5C,Stack +0060:dwArg60,Stack +0064:dwArg64,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +00A8:dwArgA8,Stack +00AC:dwArgAC,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +FFFFFFF8:dwLoc08
	return
gatt_prepare_write_rsp_exit:


word32 bt_gatt_subscribe(word32 ra, word32 s1, word32 a0, word32 a1, word32 s4, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg5C, word32 dwArg88, word32 dwArg8C, word32 dwArgA8, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_subscribe
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +005C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_subscribe_entry:
l23029F66:
	branch CONVERT(Mem0[a0 + 13<i32>:byte], byte, word32) != 4<32> l2302A024
l2302A024:
	a0Out = -57<i32>
	a3Out = a3
	return ra
l23029F70:
	word32 s0_14 = Mem13[0x4200E1BC<32>:int32]
	word32 s2_103 = 0x4200E1BC<32>
	branch s0_14 == 0<32> l23029F90
l23029F8C:
	s0_14 = s0_14 + -48<i32>
l23029F90:
	word32 s1_100 = a1
	word32 s3_104 = a0
	word32 s4_30 = 0<32>
l23029F96:
	word32 a0_144
	branch s0_14 != 0<32> l23029FC2
l23029FC2:
	branch s0_14 == s1_100 l2302A02A
l2302A02A:
	a0_144 = -69<i32>
l23029FC6:
	word32 a0_39
	word32 a5_444
	word32 a4_443
	s1_100 = bt_conn_addr_le_cmp(a0, s0_14 + 24<i32>, dwLoc10, out a0_39, out a3, out a4_443, out a5_444)
	branch a0_39 != 0<32> l23029FEC
l23029FD2:
	branch CONVERT(Mem22[s0_14 + 36<i32>:uint16], uint16, word32) != CONVERT(Mem22[s1_100 + 36<i32>:uint16], uint16, word32) l23029FEC
l23029FDE:
	branch CONVERT(Mem22[s0_14 + 40<i32>:uint16], uint16, word32) <u CONVERT(Mem22[s1_100 + 40<i32>:uint16], uint16, word32) l23029FEC
l23029FEA:
	s4_30 = 1<32>
l23029FEC:
	branch s0_14 == 0x30<32> l23029F98
l23029FF2:
	word32 s0_55 = Mem22[s0_14 + 48<i32>:word32]
	branch s0_55 == 0<32> l23029F98
l23029FF6:
	s0_14 = s0_55 + -48<i32>
l23029F98:
	branch s4_30 == 0<32> l23029FFC
l23029FFC:
	word32 mstatus_437
	word32 s6_436
	word32 a5_433
	word32 s5_435
	word32 s4_434
	word32 s0_432
	ra = gatt_write_ccc.constprop.21(ra, s1_100, a0, s1_100, 0x4200E1BC<32>, a0, s5, mstatus, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg5C, s1, dwArg88, dwArg8C, dwArgA8, out s0_432, out s1_100, out a0_144, out a3, out a5_433, out s2_103, out s3_104, out s4_434, out s5_435, out s6_436, out mstatus_437)
	branch a0_144 == 0<32> l23029F9C
l23029F9C:
	word32 a6_441
	word32 a7_442
	word32 a5_440
	word32 a4_439
	word32 a2_438
	memcpy(s1_100 + 24<i32>, s3_104 + 112<i32>, 7<32>, out a2_438, out a3, out a4_439, out a5_440, out a6_441, out a7_442)
	word32 a4_138 = Mem22[s2_103:int32]
	word32 a5_139 = s1_100 + 48<i32>
	Mem140[s2_103:word32] = a5_139
	Mem141[a4_138 + 48<i32>:word32] = s1_100
	branch Mem141[s2_103 + 4<i32>:int32] == 0<32> l2302A01E
l2302A01E:
	Mem143[s2_103 + 4<i32>:word32] = a5_139
l23029FBE:
	a0_144 = 0<32>
l2302A00E:
	a0Out = a0_144
	a3Out = a3
	return ra
bt_gatt_subscribe_exit:


word32 bt_gatt_unsubscribe(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s6, word32 mstatus, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgC8, word32 dwArgD4, word32 dwArgE8, word32 dwArgF0, word32 dwArgF4, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_unsubscribe
//      bt_gatt_notification
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s6:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00E8:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a3 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_unsubscribe_entry:
l2302A030:
	word32 a4_243 = CONVERT(Mem0[a0 + 13<i32>:byte], byte, word32)
	branch a4_243 != 4<32> l2302A136
l2302A136:
	s0Out = s0
	s1Out = s1
	a0Out = -57<i32>
	a3Out = a3
	a5Out = 4<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
l2302A03A:
	word32 a5_111 = 0x4200E000<32>
	word32 s0_116 = Mem11[0x4200E1BC<32>:int32]
	word32 s7_101 = 0x4200E000<32>
	word32 s2_119 = 0<32>
	branch s0_116 == 0<32> l2302A06E
l2302A05E:
	s2_119 = s0_116 + -48<i32>
	branch s0_116 == 0xFFFFFFD0<32> l2302A0AE
l2302A0AE:
	s0_116 = 0<32>
l2302A066:
	s0_116 = Mem30[s0_116:word32]
	branch s0_116 == 0<32> l2302A06E
l2302A06A:
	s0_116 = s0_116 + -48<i32>
l2302A06E:
	word32 s1_190 = a1
	word32 s3_191 = a0
	word32 s4_108 = 0<32>
	word32 s5_110 = 0<32>
	word32 s6_100 = 0<32>
	word32 s8_102 = a1 + 44<i32>
	ra_189 = ra
l2302A07C:
	word32 ra_189
	branch s2_119 != 0<32> l2302A0B2
l2302A0B2:
	word32 a2_109
	word32 a2_47 = s2_119 + 48<i32>
	branch s2_119 != s1_190 l2302A0DC
l2302A0DC:
	word32 a0_54
	word32 a5_621
	s1_190 = bt_conn_addr_le_cmp(s3_191, s2_119 + 24<i32>, s6, out a0_54, out a3, out a4_243, out a5_621)
	a2_109 = a2_47
	branch a0_54 != 0<32> l2302A0FA
l2302A0EC:
	a4_243 = CONVERT(Mem53[s2_119 + 36<i32>:uint16], uint16, word32)
	branch a4_243 != CONVERT(Mem53[s1_190 + 36<i32>:uint16], uint16, word32) l2302A0FA
l2302A0F8:
	s6_100 = 1<32>
l2302A0BA:
	sys_slist_remove(s4_108, a4_243, a5_111)
	branch (atomic_get(s8_102) & 2<32>) == 0<32> l2302A0D6
l2302A0CE:
	ra_189 = bt_att_req_cancel(ra_189, s0_116, s3_191, s1_190, a3, mstatus, dwLoc38, s2, dwArg10, dwArg14, dwArg28, dwArg38, dwArg48, s3, ra, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out s1_190, out a3, out a4_243, out s3_191, out s4_108, out s6_100, out s7_101, out s8_102)
l2302A0D6:
	a2_109 = s4_108
	s5_110 = 1<32>
l2302A0FA:
	a5_111 = 0<32>
	branch s0_116 == 0<32> l2302A106
l2302A0FE:
	s0_116 = Mem114[0x30<32>:word32]
	branch true l2302A106
l2302A102:
	a5_111 = -48<i32>
l2302A106:
	s2_119 = s0_116
	s4_108 = a2_109
	s0_116 = a5_111
l2302A080:
	word32 a0_128
	branch s5_110 == 0<32> l2302A13C
l2302A13C:
	a0_128 = 0xFFFFFFEA<32>
l2302A084:
	branch s6_100 == 0<32> l2302A10E
l2302A10E:
	Mem133[s1_190 + 40<i32>:word16] = 0<16>
	0<32> = dwArg0198
l2302A132_thunk_gatt_write_ccc.constprop.21:
	word32 a0_148
	word32 a3_151
	word32 a5_153
	word32 mstatus_156
	word32 s0_158
	word32 s1_159
	word32 s2_162
	word32 s3_163
	word32 s4_164
	word32 s5_165
	word32 s6_166
	word32 ra_157 = gatt_write_ccc.constprop.21(ra_189, s1_190, s3_191, s1_190, s2_119, s3_191, s5_110, mstatus, dwArg04, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, s3, s1, ra, dwArg7C, dwArg88, dwArgA8, dwArgAC, dwArgC8, out s0_158, out s1_159, out a0_148, out a3_151, out a5_153, out s2_162, out s3_163, out s4_164, out s5_165, out s6_166, out mstatus_156)
	s0Out = s0_158
	s1Out = s1_159
	a0Out = a0_148
	a3Out = a3_151
	a5Out = a5_153
	s2Out = s2_162
	s3Out = s3_163
	s4Out = s4_164
	s5Out = s5_165
	s6Out = s6_166
	mstatusOut = mstatus_156
	return ra_157
l2302A088:
	word32 s1_177 = Mem84[a5_111 + 32<i32>:word32]
	word32 t3_199
	word32 a6_200
	word32 tp_201
	word32 a7_203
	word32 s10_204
	word32 s11_205
	word32 s9_206
	word32 t0_207
	word32 t4_208
	word32 t1_209
	word32 t5_210
	word32 t6_211
	call a5_111 (retsize: 0;)
		uses: a0:s3_50,a1:s1_177,a2:0<32>,a3:0<32>,a6:a6_200,a7:a7_203,mstatus:mstatus_202,ra:ra_81,s0:s0_80,s1:s1_177,s10:s10_204,s11:s11_205,s2:s2_46,s3:s3_50,s4:s4_66,s5:s5_125,s6:s6_129,s7:s7_68,s8:s8_74,s9:s9_206,Stack +0008:dwLoc38,Stack +0044:dwArg04,Stack +0050:dwArg10,Stack +0054:dwArg14,Stack +0058:dwArg18,Stack +0060:dwArg20,Stack +0064:dwArg24,Stack +0068:dwArg28,Stack +0070:dwArg30,Stack +0074:dwArg34,Stack +0078:dwArg38,Stack +0088:dwArg48,Stack +00A8:dwArg68,Stack +00BC:dwArg7C,Stack +00C8:dwArg88,Stack +00D8:dwArg98,Stack +00E8:dwArgA8,Stack +00EC:dwArgAC,Stack +0108:dwArgC8,Stack +0114:dwArgD4,Stack +0128:dwArgE8,Stack +0130:dwArgF0,Stack +0134:dwArgF4,Stack +0148:dwArg0108,Stack +0158:dwArg0118,Stack +0168:dwArg0128,Stack +0178:dwArg0138,Stack +0198:dwArg0158,Stack +01B8:dwArg0178,Stack +01D8:dwArg0198,t0:t0_207,t1:t1_209,t3:t3_199,t4:t4_208,t5:t5_210,t6:t6_211,tp:tp_201
		defs: a3:a3_197,a5:a5_185,a6:a6_200,a7:a7_203,mstatus:mstatus_202,ra:ra_189,s1:s1_190,s10:s10_204,s11:s11_205,s2:s2_187,s3:s3_191,s5:s5_193,s6:s6_194,s9:s9_206,t0:t0_207,t1:t1_209,t3:t3_199,t4:t4_208,t5:t5_210,t6:t6_211,tp:tp_201
	a0_128 = 0<32>
l2302A096:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_190
	a0Out = a0_128
	a3Out = a3
	a5Out = a5_111
	s2Out = s2_119
	s3Out = s3_191
	s4Out = dwArgF4
	s5Out = s5_110
	s6Out = s6_100
	mstatusOut = mstatus
	return ra_189
bt_gatt_unsubscribe_exit:


word32 bt_gatt_notification(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 s6, word32 mstatus, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_notify
//      att_indicate
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s6:[0..31]
// LiveOut: a3 mstatus ra s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_notification_entry:
l2302A140:
	word32 a5_5 = Mem0[0x4200E1BC<32>:int32]
	branch a5_5 == 0<32> l2302A1BC
l2302A1BC:
	s0Out = s0
	s1Out = s1
	a3Out = a3
	mstatusOut = mstatus
	return ra
l2302A14A:
	word32 sp_110 = fp + 0xFFFFFFE0<32>
	word32 s1_125 = a5_5 + -48<i32>
	branch a5_5 == 0xFFFFFFD0<32> l2302A1AA
l2302A160:
	word32 s5_135 = a3
	word32 s4_137 = a2
	word32 s3_133 = a1
	word32 s2_129 = a0
	branch s0 == 0<32> l2302A170
l2302A16C:
	s0 = s0 + -48<i32>
l2302A170:
	word32 a0_38
	word32 a4_304
	word32 a5_121
	s1_125 = bt_conn_addr_le_cmp(s2_129, s1_125 + 24<i32>, Mem20[sp_110 + 16<i32>:word32], out a0_38, out a3, out a4_304, out a5_121)
	branch a0_38 != 0<32> l2302A19A
l2302A17C:
	a5_121 = CONVERT(Mem20[s1_125 + 36<i32>:uint16], uint16, word32)
	branch a5_121 != s3_133 l2302A19A
l2302A184:
	word32 s1_48 = Mem20[a5_121 + 32<i32>:word32]
	word32 a0_69
	word32 t3_70
	word32 s8_71
	word32 a6_72
	word32 tp_73
	word32 a4_74
	word32 s11_158
	word32 s10_157
	word32 a7_156
	word32 s7_155
	word32 s9_159
	word32 t0_160
	word32 t1_161
	word32 t4_162
	word32 t5_163
	word32 t6_164
	call a5_121 (retsize: 0;)
		uses: a0:s2_34,a1:s1_48,a2:s4_51,a3:s5_49,a4:a4_74,a6:a6_72,a7:a7_156,mstatus:mstatus_78,ra:ra_55,s0:s0_56,s1:s1_48,s10:s10_157,s11:s11_158,s2:s2_34,s3:s3_47,s4:s4_51,s5:s5_49,s6:s6_77,s7:s7_155,s8:s8_71,s9:s9_159,t0:t0_160,t1:t1_161,t3:t3_70,t4:t4_162,t5:t5_163,t6:t6_164,tp:tp_73
		defs: a0:a0_69,a3:a3_66,a4:a4_74,a5:a5_58,a6:a6_72,a7:a7_156,ra:ra_60,s0:s0_61,s1:s1_59,s10:s10_157,s11:s11_158,s2:s2_62,s3:s3_63,s4:s4_64,s5:s5_65,s7:s7_155,s8:s8_71,s9:s9_159,sp:sp_57,t0:t0_160,t1:t1_161,t3:t3_70,t4:t4_162,t5:t5_163,t6:t6_164,tp:tp_73
	branch a0_69 != 0<32> l2302A19A
l2302A192:
	word32 a0_305
	ra = bt_gatt_unsubscribe(ra, s1_125, s2_129, s1_125, a3, s2_129, s3_133, s6, mstatus, Mem20[sp_110 + 4<i32>:word32], Mem20[sp_110 + 16<i32>:word32], Mem20[sp_110 + 20<i32>:word32], Mem20[sp_110 + 24<i32>:word32], Mem20[sp_110 + 32<i32>:word32], Mem20[sp_110 + 36<i32>:word32], Mem20[sp_110 + 40<i32>:word32], Mem20[sp_110 + 48<i32>:word32], Mem20[sp_110 + 52<i32>:word32], Mem20[sp_110 + 56<i32>:word32], Mem20[sp_110 + 72<i32>:word32], Mem20[sp_110 + 104<i32>:word32], Mem20[sp_110 + 124<i32>:word32], Mem20[sp_110 + 136<i32>:word32], Mem20[sp_110 + 152<i32>:word32], Mem20[sp_110 + 168<i32>:word32], Mem20[sp_110 + 172<i32>:word32], Mem20[sp_110 + 200<i32>:word32], Mem20[sp_110 + 212<i32>:word32], Mem20[sp_110 + 232<i32>:word32], Mem20[sp_110 + 240<i32>:word32], Mem20[sp_110 + 244<i32>:word32], Mem20[sp_110 + 264<i32>:word32], Mem20[sp_110 + 280<i32>:word32], Mem20[sp_110 + 296<i32>:word32], Mem20[sp_110 + 312<i32>:word32], Mem20[sp_110 + 344<i32>:word32], Mem20[sp_110 + 376<i32>:word32], Mem20[sp_110 + 408<i32>:word32], out s0, out s1_125, out a0_305, out a3, out a5_121, out s2_129, out s3_133, out s4_137, out s5_135, out s6, out mstatus)
l2302A19A:
	branch s0 == 0<32> l2302A1AA
l2302A1AA:
	s0Out = s1
	s1Out = s1_125
	a3Out = a3
	mstatusOut = mstatus
	return ra
bt_gatt_notification_exit:
l2302A19C:
	word32 s0_122 = Mem20[a5_121 + 48<i32>:word32]
	branch a5_121 == 0<32> l2302A1A4
l2302A1A0:
	a5_121 = a5_121 + -48<i32>
l2302A1A4:
	s1_125 = s0_122
	s0 = a5_121


void bt_gatt_connected(word32 ra, word32 s0, word32 a0, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg2C, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      notify_connected
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s11:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_connected_entry:
l2302A1BE:
	word32 a0_19
	word32 s2_495
	word32 a4_493
	word32 a5_494
	word32 a3_22
	bt_addr_le_is_bonded(CONVERT(Mem13[a0 + 8<i32>:byte], byte, word32), a0 + 112<i32>, dwLoc28, out a0_19, out a3_22, out a4_493, out a5_494, out s2_495)
	word32 dwLoc38_246 = SEQ(nLoc37, 1<8>)
	branch a0_19 == 0<32> l2302A206
l2302A1E2:
	word32 a4_31 = 0<32>
	branch ra == 0<32> l2302A1FA
l2302A1F0:
	a3_22 = u8_to_dec(fp + -64<i32>, 4<32>, ra)
	a4_31 = fp + -64<i32>
l2302A1FA:
	ra = bt_settings_encode_key(ra, fp + -52<i32>, 36<i32>, a3_22, a4_31, dwLoc38_246, dwLoc0C, dwArg14, a0, dwArg5C, out s11)
l2302A206:
	word32 a3_92
	word32 s0_98
	word32 s11_501
	word32 s4_499
	word32 s6_500
	word32 a4_497
	word32 a5_498
	word32 a2_496
	word32 s1_135
	word32 s5_105
	word32 s2_102
	word32 s3_103
	word32 ra_134 = bt_gatt_foreach_attr(ra, 1<32>, 0xFFFFFFF<32>, 0x23028F4A<32>, fp + -60<i32>, s11, out s0_98, out s1_135, out a2_496, out a3_92, out a4_497, out a5_498, out s2_102, out s3_103, out s4_499, out s5_105, out s6_500, out s11_501)
	word32 dwLoc38_333 = SEQ(nLoc37, 1<8>)
	branch bt_conn_get_security(s1_135) >=u 1<32> l2302A22E
l2302A228:
	word32 a5_505
	word32 a3_503
	word32 a4_504
	word32 a0_502
	ra_134 = bt_conn_set_security(ra_134, s0_98, s1_135, 1<32>, a3_92, s2_102, s3_103, mstatus, dwLoc50, dwLoc4C, dwLoc48, dwLoc44, dwLoc40, dwLoc3C, dwLoc38_333, dwLoc34, dwLoc30, s0, dwLoc28, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwLoc0C, dwLoc08, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg2C, a0, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, out s1_135, out a0_502, out a3_503, out a4_504, out a5_505, out s2_102, out s3_103, out s5_105, out mstatus)
l2302A22E:
	word32 a5_154 = Mem18[0x4200E1BC<32>:int32]
	word32 s0_155 = a5_154 + -48<i32>
	branch a5_154 != 0<32> l2302A26A
l2302A26A:
	branch s0_155 != 0<32> l2302A246
l2302A246:
	word32 a0_162
	word32 a4_507
	word32 a5_508
	word32 a3_506
	s1_135 = bt_conn_addr_le_cmp(s1_135, s0_155 + 24<i32>, dwLoc40, out a0_162, out a3_506, out a4_507, out a5_508)
	branch a0_162 != 0<32> l2302A262
l2302A252:
	word32 s6_513
	word32 a5_511
	word32 s4_512
	word32 a0_509
	word32 a3_510
	ra_134 = gatt_write_ccc.constprop.21(ra_134, s1_135, s1_135, s0_155, s2_102, s3_103, s5_105, mstatus, dwLoc4C, dwLoc40, dwLoc3C, dwLoc38_333, dwLoc30, s0, dwLoc20, dwLoc1C, dwLoc18, dwArg04, dwArg08, dwArg0C, dwArg2C, a0, dwArg58, dwArg5C, dwArg78, out s0_155, out s1_135, out a0_509, out a3_510, out a5_511, out s2_102, out s3_103, out s4_512, out s5_105, out s6_513, out mstatus)
l2302A262:
	word32 s0_210 = Mem18[s0_155 + 48<i32>:word32]
	branch s0_210 == 0<32> l2302A23C
l2302A266:
	s0_155 = s0_210 + -48<i32>
l2302A26C:
l2302A23C:
	return
bt_gatt_connected_exit:


word32 bt_gatt_encrypt_change(word32 ra, word32 s11, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_att_encrypt_change
// MayUse:  ra:[0..31] s11:[0..31]
// LiveOut: a2 a3 ra s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_gatt_encrypt_change_entry:
l2302A26E:
	word32 a2_19
	word32 a3_20
	word32 s0_26
	word32 s1_27
	word32 a4_54
	word32 a5_55
	word32 s2_56
	word32 s3_57
	word32 s4_58
	word32 s5_59
	word32 s6_60
	word32 s11_61
	word32 ra_25 = bt_gatt_foreach_attr(ra, 1<32>, 0xFFFFFFF<32>, 0x23028F4A<32>, fp + 0xFFFFFFE8<32>, s11, out s0_26, out s1_27, out a2_19, out a3_20, out a4_54, out a5_55, out s2_56, out s3_57, out s4_58, out s5_59, out s6_60, out s11_61)
	s0Out = s0_26
	s1Out = s1_27
	a2Out = a2_19
	a3Out = a3_20
	return ra_25
bt_gatt_encrypt_change_exit:


word32 bt_gatt_change_aware()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_read_req
//      att_signed_write_cmd
// MayUse: 
// LiveOut: a0
// Trashed: a0
// Preserved: sp
bt_gatt_change_aware_entry:
l2302A294:
	return 1<32>
bt_gatt_change_aware_exit:


word32 bt_gatt_disconnected(word32 ra, word32 a0, word32 s11, word32 dwArg08, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_att_disconnected
//      att_timeout
// MayUse:  a0:[0..31] ra:[0..31] s11:[0..31] Stack +0008:[0..31]
// LiveOut: a3 a4 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_gatt_disconnected_entry:
l2302A298:
	word32 s1_37
	word32 s2_40
	word32 s11_366
	word32 s6_365
	word32 s5_364
	word32 s4_363
	word32 s3_362
	word32 a5_361
	word32 a2_360
	word32 s0_359
	word32 a4_126
	word32 a3_101
	word32 ra_118 = bt_gatt_foreach_attr(ra, 1<32>, 0xFFFFFFF<32>, 0x2302822E<32>, a0, s11, out s0_359, out s1_37, out a2_360, out a3_101, out a4_126, out a5_361, out s2_40, out s3_362, out s4_363, out s5_364, out s6_365, out s11_366)
	word32 a5_55 = Mem25[0x4200E1BC<32>:int32]
	branch a5_55 == 0<32> l2302A338
l2302A2C8:
	word32 s0_156 = a5_55 + -48<i32>
	branch a5_55 == 0xFFFFFFD0<32> l2302A338
l2302A2CE:
	branch s1_37 == 0<32> l2302A2D6
l2302A2D2:
l2302A2D6:
	word32 s3_113 = 0<32>
	s2_161 = s2_40
l2302A2DC:
	word32 s2_161
	word32 s5_63 = s0_156 + 24<i32>
	word32 a0_69
	word32 a5_127
	word32 s1_130 = bt_conn_addr_le_cmp(s2_161, s5_63, dwLoc10, out a0_69, out a3_101, out a4_126, out a5_127)
	branch a0_69 == 0<32> l2302A2F0
l2302A2F0:
	word32 a0_80
	word32 a5_85
	s1_130 = bt_addr_le_is_bonded(CONVERT(Mem68[s2_161 + 8<i32>:byte], byte, word32), s2_40 + 112<i32>, dwArg08, out a0_80, out a3_101, out a4_126, out a5_85, out s2_161)
	branch a0_80 != 0<32> l2302A31A
l2302A31A:
	branch (atomic_get(s0_156 + 44<i32>) & 1<32>) != 0<32> l2302A2FC
l2302A326:
	a5_127 = CONVERT(Mem68[s0_156 + 24<i32>:byte], byte, word32)
	branch a5_127 == 0<32> l2302A2EA
l2302A32C:
	word32 a7_369
	word32 a6_368
	word32 a2_367
	memcpy(s5_63, s2_40 + 112<i32>, 7<32>, out a2_367, out a3_101, out a4_126, out a5_127, out a6_368, out a7_369)
l2302A2FC:
	Mem110[s0_156 + 40<i32>:word16] = 0<16>
	ra_118 = gatt_subscription_remove(ra_118, s0_156, s2_161, s3_113, s0_156, a4_126, a5_85, dwLoc10, dwLoc0C, out s1_130, out a3_101, out a4_126, out a5_127)
l2302A2EA:
	s3_113 = s0_156 + 48<i32>
l2302A30A:
	branch s1_130 == 0<32> l2302A338
l2302A338:
	s0Out = s1
	a3Out = a3_101
	a4Out = a4_126
	return ra_118
bt_gatt_disconnected_exit:
l2302A30C:
	word32 s1_153 = Mem141[a5_127 + 48<i32>:word32]
	branch a5_127 == 0<32> l2302A314
l2302A310:
l2302A314:
	s0_156 = s1_153


word32 uuid_to_uuid128(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_uuid_cmp
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: s0 sp
uuid_to_uuid128_entry:
l2302A34A:
	word32 a4_9 = CONVERT(Mem7[a0:byte], byte, word32)
	branch a4_9 == 1<32> l2302A38E
l2302A38E:
	word32 a4_18
	word32 a2_129
	word32 a3_130
	word32 a5_131
	word32 a7_132
	memcpy(a1, 0x23076C5C<32>, 0x11<32>, out a2_129, out a3_130, out a4_18, out a5_131, out a6, out a7_132)
	Mem33[a1 + 13<i32>:byte] = SLICE(a4_18, byte, 0)
	Mem37[a1 + 15<i32>:byte] = SLICE(a4_18 >>u 16<i32>, byte, 0)
	Mem39[a1 + 14<i32>:byte] = SLICE(CONVERT(SLICE(a4_18, word16, 0), word16, word32) >>u 8<i32>, byte, 0)
	Mem40[a1 + 16<i32>:byte] = SLICE(a4_18 >>u 24<i32>, byte, 0)
l2302A35E:
	branch a4_9 == 0<32> l2302A36E
l2302A36E:
	word32 a2_133
	word32 a3_134
	word32 a4_135
	word32 a5_136
	word32 a7_137
	memcpy(a1, 0x23076C5C<32>, 0x11<32>, out a2_133, out a3_134, out a4_135, out a5_136, out a6, out a7_137)
	word32 a4_58 = CONVERT(Mem7[a0 + 2<i32>:uint16], uint16, word32)
	Mem59[a1 + 13<i32>:byte] = SLICE(a4_58, byte, 0)
	Mem61[a1 + 14<i32>:byte] = SLICE(a4_58 >>u 8<i32>, byte, 0)
l2302A360:
	branch a4_9 == 2<32> l2302A3BE
l2302A3BE:
l2302A3CA_thunk_memcpy:
	word32 a6_75
	word32 a2_138
	word32 a3_139
	word32 a4_140
	word32 a5_141
	word32 a7_142
	memcpy(a1, a0, 0x11<32>, out a2_138, out a3_139, out a4_140, out a5_141, out a6_75, out a7_142)
	return a6_75
l2302A366:
	return a6
uuid_to_uuid128_exit:


word32 bt_uuid_cmp(word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_foreach_attr
//      bt_gatt_service_register
//      bt_gatt_indicate
//      gatt_read_type_rsp
//      read_included_uuid_cb
//      gatt_find_info_rsp
//      read_group_cb
//      read_type_cb
//      find_type_cb
//      att_read_group_req
//      att_find_type_req
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_uuid_cmp_entry:
l2302A3CE:
	word32 a5_14
	word32 a3_13
	word32 a1_16
	word32 a0_21
	word32 a1_25
	word32 a0_26
	word32 a4_11 = CONVERT(Mem7[a1:byte], byte, word32)
	branch a4_11 == CONVERT(Mem7[a0:byte], byte, word32) l2302A400
l2302A400:
	word32 a0_15
	a3_13 = 1<32>
	a5_14 = a0
	branch a4_11 == 1<32> l2302A42E
l2302A42E:
	a0_15 = Mem7[a0 + 4<i32>:word32]
	a1_16 = Mem7[a0 + 4<i32>:word32]
l2302A408:
	branch a4_11 == 0<32> l2302A41C
l2302A41C:
	a0_15 = CONVERT(Mem7[a0 + 2<i32>:uint16], uint16, word32)
	a5_14 = CONVERT(Mem7[a1 + 2<i32>:uint16], uint16, word32)
	a1_16 = a1
l2302A424:
	a0_21 = a0_15 - a5_14
l2302A40A:
	a3_13 = 2<32>
	a0_21 = 0xFFFFFFEA<32>
	a1_16 = a1
	branch a4_11 != 2<32> l2302A426
l2302A412:
	a1_25 = a1 + 1<32>
	a0_26 = a0 + 1<i32>
l2302A3E2:
	uuid_to_uuid128(a0, fp + -56<i32>)
	a6 = uuid_to_uuid128(a1, fp + -36<i32>)
	a1_25 = fp + -35<i32>
	a0_26 = fp + -55<i32>
l2302A3FA:
	a0_21 = memcmp(a0_26, a1_25, 0x10<32>, out a1_16, out a2, out a3_13, out a4_11, out a5_14)
l2302A426:
	a0Out = a0_21
	a1Out = a1_16
	a2Out = a2
	a3Out = a3_13
	a4Out = a4_11
	a5Out = a5_14
	a6Out = a6
	s8Out = dwArgD4
	return a1
bt_uuid_cmp_exit:


word32 bt_uuid_create(word32 a0, word32 a1, word32 a2, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      find_type_cb
//      att_read_group_req
//      att_read_type_req
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_uuid_create_entry:
l2302A434:
	word32 a3_16
	word32 a5_46
	branch a2 == 4<32> l2302A464
l2302A464:
	Mem7[a0:byte] = 1<8>
	word32 a3_14 = CONVERT(Mem7[a1 + 1<i32>:byte], byte, word32)
	Mem19[((CONVERT(Mem7[a1 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem7[a1 + 2<i32>:byte], byte, word32)) << 16<i32> | (CONVERT(Mem7[a1:byte], byte, word32) | a3_14 << 8<i32>)) + 4<i32>:word32] = a0
	a3_16 = a3_14 << 8<i32>
l2302A43A:
	a3_16 = a2
	branch a2 == 0x10<32> l2302A48A
l2302A48A:
	Mem26[a0:byte] = 2<8>
	word32 a3_33
	word32 a6_112
	word32 a7_113
	word32 a4_110
	word32 a5_111
	word32 a2_109
	memcpy(a0 + 1<32>, a1, a2, out a2_109, out a3_33, out a4_110, out a5_111, out a6_112, out a7_113)
	a3Out = a3_33
	return 1<32>
l2302A442:
	a5_46 = 0<32>
	branch a2 != 2<32> l2302A460
l2302A44A:
	Mem47[a0:byte] = 0<8>
	Mem52[a0 + 2<i32>:word16] = SLICE(CONVERT(Mem47[a1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem47[a1:byte], byte, word32), word16, 0)
l2302A45E:
	a5_46 = 1<32>
l2302A460:
	a3Out = a3_16
	return a5_46
bt_uuid_create_exit:


word32 bt_uuid_to_str(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg08, word32 dwArg34, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0128, ptr32 & s1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      discover_func
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0034:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_uuid_to_str_entry:
l2302A4A4:
	word32 a3_166
	word32 ra_170
	word32 a5_13 = CONVERT(Mem11[a0:byte], byte, word32)
	word32 s1_17 = a1
	branch a5_13 == 1<32> l2302A4F0
l2302A4F0:
l2302A4BE:
	branch a5_13 == 0<32> l2302A4D0
l2302A4D0:
l2302A4D4:
	word32 s0_344
	word32 a0_345
	word32 a2_346
	word32 a4_347
	word32 a5_348
	word32 s2_349
	word32 s3_350
	word32 s4_351
	word32 s5_352
	word32 s6_353
	word32 s7_354
	word32 s8_355
	word32 s9_356
	word32 s10_357
	word32 s11_358
	ra_170 = snprintf(ra, a1, a2, 0x23076C54<32>, dwLoc18, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C, out s0_344, out s1_17, out a0_345, out a2_346, out a3_166, out a4_347, out a5_348, out s2_349, out s3_350, out s4_351, out s5_352, out s6_353, out s7_354, out s8_355, out s9_356, out s10_357, out s11_358)
l2302A4C0:
	branch a5_13 == 2<32> l2302A4F4
l2302A4F4:
	word32 a3_288
	word32 a2_287
	word32 a4_289
	word32 a5_290
	word32 a6_291
	word32 a7_292
	memcpy(fp + -32<i32>, a0 + 1<i32>, 2<32>, out a2_287, out a3_288, out a4_289, out a5_290, out a6_291, out a7_292)
	word32 a2_293
	word32 a3_294
	word32 a4_295
	word32 a5_296
	word32 a6_297
	word32 a7_298
	memcpy(fp + -24<i32>, a0 + 3<i32>, 4<32>, out a2_293, out a3_294, out a4_295, out a5_296, out a6_297, out a7_298)
	word32 a2_299
	word32 a3_300
	word32 a4_301
	word32 a5_302
	word32 a6_303
	word32 a7_304
	memcpy(fp + -30<i32>, a0 + 7<i32>, 2<32>, out a2_299, out a3_300, out a4_301, out a5_302, out a6_303, out a7_304)
	word32 a2_305
	word32 a3_306
	word32 a4_307
	word32 a5_308
	word32 a6_309
	word32 a7_310
	memcpy(fp + -28<i32>, a0 + 9<i32>, 2<32>, out a2_305, out a3_306, out a4_307, out a5_308, out a6_309, out a7_310)
	word32 a2_311
	word32 a3_312
	word32 a4_313
	word32 a5_314
	word32 a6_315
	word32 a7_316
	memcpy(fp + -26<i32>, a0 + 11<i32>, 2<32>, out a2_311, out a3_312, out a4_313, out a5_314, out a6_315, out a7_316)
	word32 a2_317
	word32 a3_318
	word32 a4_319
	word32 a5_320
	word32 a6_321
	word32 a7_322
	memcpy(fp + -20<i32>, a0 + 13<i32>, 4<32>, out a2_317, out a3_318, out a4_319, out a5_320, out a6_321, out a7_322)
	word32 s0_323
	word32 a0_324
	word32 a2_325
	word32 a4_326
	word32 a5_327
	word32 s2_328
	word32 s3_329
	word32 s4_330
	word32 s5_331
	word32 s6_332
	word32 s7_333
	word32 s8_334
	word32 s9_335
	word32 s10_336
	word32 s11_337
	ra_170 = snprintf(ra, a1, a2, 0x23076C3C<32>, dwLoc18, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C, out s0_323, out s1_17, out a0_324, out a2_325, out a3_166, out a4_326, out a5_327, out s2_328, out s3_329, out s4_330, out s5_331, out s6_332, out s7_333, out s8_334, out s9_335, out s10_336, out s11_337)
l2302A4C6:
	word32 t1_338
	word32 a0_339
	word32 a1_340
	word32 a2_341
	word32 a4_342
	word32 a5_343
	ra_170 = memset(ra, a1, 0<32>, a2, out t1_338, out a0_339, out a1_340, out a2_341, out a3_166, out a4_342, out a5_343)
l2302A4E4:
	0<32> = dwArg0128
	s1Out = s1_17
	a3Out = a3_166
	return ra_170
bt_uuid_to_str_exit:


word32 bt_settings_encode_key(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 dwArg18, word32 dwArg44, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_connected
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: ra s11
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
bt_settings_encode_key_entry:
l2302A568:
	word32 s11_110
	word32 ra_106
	word32 t3_14 = CONVERT(Mem5[a3 + 1<i32>:byte], byte, word32)
	branch a4 == 0<32> l2302A5AA
l2302A5AA:
	word32 s0_123
	word32 s1_124
	word32 a0_125
	word32 a2_126
	word32 a3_127
	word32 a4_128
	word32 a5_129
	word32 s2_130
	word32 s3_131
	word32 s4_132
	word32 s5_133
	word32 s6_134
	word32 s7_135
	word32 s8_136
	word32 s9_137
	word32 s10_138
	ra_106 = snprintf(ra, a0, a1, 0x23076C94<32>, dwLoc08, dwArg18, dwArg44, t3_14, dwArg64, dwArg88, dwArgAC, out s0_123, out s1_124, out a0_125, out a2_126, out a3_127, out a4_128, out a5_129, out s2_130, out s3_131, out s4_132, out s5_133, out s6_134, out s7_135, out s8_136, out s9_137, out s10_138, out s11_110)
l2302A58E:
	word32 s0_139
	word32 s1_140
	word32 a0_141
	word32 a2_142
	word32 a3_143
	word32 a4_144
	word32 a5_145
	word32 s2_146
	word32 s3_147
	word32 s4_148
	word32 s5_149
	word32 s6_150
	word32 s7_151
	word32 s8_152
	word32 s9_153
	word32 s10_154
	ra_106 = snprintf(ra, a0, a1, 0x23076C70<32>, dwLoc08, dwArg18, dwArg44, t3_14, a4, dwArg88, dwArgAC, out s0_139, out s1_140, out a0_141, out a2_142, out a3_143, out a4_144, out a5_145, out s2_146, out s3_147, out s4_148, out s5_149, out s6_150, out s7_151, out s8_152, out s9_153, out s10_154, out s11_110)
l2302A5A4:
	s11Out = s11_110
	return ra_106
bt_settings_encode_key_exit:


word32 u8_to_dec(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_connected
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
u8_to_dec_entry:
l2302A5C0:
	word32 a3_10 = 4<32>
	word32 a5_15 = 0<32>
	word32 a4_12 = 100<i32>
l2302A5CC:
	branch a1 == 0<32> l2302A5D6
l2302A5CE:
	a3_10 = a3_10 + 0xFFFFFFFF<32>
	branch a3_10 != 0<32> l2302A5DA
l2302A5DA:
	word32 a6_13 = a2 >>u a4_12
	branch a2 >=u a4_12 l2302A5E8
l2302A5E2:
	branch a4_12 == 1<32> l2302A5E8
l2302A5E6:
	branch a5_15 == 0<32> l2302A5FE
l2302A5E8:
	Mem24[a0:byte] = SLICE(a6_13 + 48<i32>, byte, 0)
	a1 = a1 + 0xFFFFFFFF<32> & 255<i32>
	a0 = a0 + 1<32>
	a5_15 = a5_15 + 1<32> & 255<i32>
l2302A5FE:
	a2 = a2 & a4_12
	a4_12 = a4_12 >>u 0xA<32>
l2302A5D2:
	Mem37[a0:byte] = 0<8>
l2302A5D6:
	return a3_10
u8_to_dec_exit:


void add_round_key(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_aes_encrypt
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a1 a4 a5
// Preserved: sp
add_round_key_entry:
l2302A608:
	Mem9[a0:byte] = SLICE(CONVERT(Mem0[a1 + 3<i32>:byte], byte, word32) ^ CONVERT(Mem0[a0:byte], byte, word32), byte, 0)
	word32 a5_12 = CONVERT(Mem9[a1 + 2<i32>:uint16], uint16, word32) ^ CONVERT(Mem9[a0 + 1<i32>:byte], byte, word32)
	Mem13[a0 + 1<i32>:byte] = SLICE(a5_12, byte, 0)
	word32 a5_17 = a5_12 >>u 8<i32> ^ CONVERT(Mem13[a0 + 2<i32>:byte], byte, word32)
	Mem18[a0 + 2<i32>:byte] = SLICE(a5_17, byte, 0)
	word32 a1_19 = Mem18[a5_17:word32]
	Mem22[a0 + 3<i32>:byte] = SLICE(a5_17 ^ CONVERT(Mem18[a0 + 3<i32>:byte], byte, word32), byte, 0)
	Mem26[a0 + 4<i32>:byte] = SLICE(CONVERT(Mem22[a1_19 + 7<i32>:byte], byte, word32) ^ CONVERT(Mem22[a0 + 4<i32>:byte], byte, word32), byte, 0)
	word32 a5_29 = CONVERT(Mem26[a1_19 + 6<i32>:uint16], uint16, word32) ^ CONVERT(Mem26[a0 + 5<i32>:byte], byte, word32)
	Mem30[a0 + 5<i32>:byte] = SLICE(a5_29, byte, 0)
	word32 a5_34 = a5_29 >>u 8<i32> ^ CONVERT(Mem30[a0 + 6<i32>:byte], byte, word32)
	Mem35[a0 + 6<i32>:byte] = SLICE(a5_34, byte, 0)
	word32 a1_36 = Mem35[a5_34 + 4<i32>:word32]
	Mem39[a0 + 7<i32>:byte] = SLICE(a5_34 ^ CONVERT(Mem35[a0 + 7<i32>:byte], byte, word32), byte, 0)
	Mem43[a0 + 8<i32>:byte] = SLICE(CONVERT(Mem39[a1_36 + 11<i32>:byte], byte, word32) ^ CONVERT(Mem39[a0 + 8<i32>:byte], byte, word32), byte, 0)
	word32 a5_46 = CONVERT(Mem43[a1_36 + 10<i32>:uint16], uint16, word32) ^ CONVERT(Mem43[a0 + 9<i32>:byte], byte, word32)
	Mem47[a0 + 9<i32>:byte] = SLICE(a5_46, byte, 0)
	word32 a5_51 = a5_46 >>u 8<i32> ^ CONVERT(Mem47[a0 + 10<i32>:byte], byte, word32)
	Mem52[a0 + 10<i32>:byte] = SLICE(a5_51, byte, 0)
	word32 a1_53 = Mem52[a5_51 + 8<i32>:word32]
	Mem56[a0 + 11<i32>:byte] = SLICE(a5_51 ^ CONVERT(Mem52[a0 + 11<i32>:byte], byte, word32), byte, 0)
	Mem60[a0 + 12<i32>:byte] = SLICE(CONVERT(Mem56[a1_53 + 15<i32>:byte], byte, word32) ^ CONVERT(Mem56[a0 + 12<i32>:byte], byte, word32), byte, 0)
	word32 a5_63 = CONVERT(Mem60[a1_53 + 14<i32>:uint16], uint16, word32) ^ CONVERT(Mem60[a0 + 13<i32>:byte], byte, word32)
	Mem64[a0 + 13<i32>:byte] = SLICE(a5_63, byte, 0)
	word32 a5_68 = a5_63 >>u 8<i32> ^ CONVERT(Mem64[a0 + 14<i32>:byte], byte, word32)
	Mem69[a0 + 14<i32>:byte] = SLICE(a5_68, byte, 0)
	Mem73[a0 + 15<i32>:byte] = SLICE(a5_68 ^ CONVERT(Mem69[a0 + 15<i32>:byte], byte, word32), byte, 0)
	return
add_round_key_exit:


void shift_rows(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_aes_encrypt
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
shift_rows_entry:
l2302A6E2:
	word32 a3_76
	word32 a4_77
	word32 a5_78
	_copy(a0, 0x10<32>, fp + 0xFFFFFFE0<32>, 0x10<32>, out a3_76, out a4_77, out a5_78)
	return
shift_rows_exit:


word32 mult_row_column(word32 a0, word32 a1, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_aes_encrypt
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: s0 s1 s2 s3 s4
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
mult_row_column_entry:
l2302A776:
	Mem34[a0:byte] = SLICE(_double_byte(CONVERT(Mem5[a1:byte], byte, word32)) ^ ((CONVERT(Mem18[a1 + 1<i32>:byte], byte, word32) ^ CONVERT(Mem18[a1 + 2<i32>:byte], byte, word32)) ^ CONVERT(Mem18[a1 + 3<i32>:byte], byte, word32)) ^ _double_byte(CONVERT(Mem18[a1 + 1<i32>:byte], byte, word32)), byte, 0)
	Mem51[a0 + 1<i32>:byte] = SLICE(_double_byte(CONVERT(Mem34[a1 + 1<i32>:byte], byte, word32)) ^ ((CONVERT(Mem34[a1:byte], byte, word32) ^ CONVERT(Mem34[a1 + 2<i32>:byte], byte, word32)) ^ CONVERT(Mem34[a1 + 3<i32>:byte], byte, word32)) ^ _double_byte(CONVERT(Mem34[a1 + 2<i32>:byte], byte, word32)), byte, 0)
	word32 s1_53 = CONVERT(Mem51[a1 + 1<i32>:byte], byte, word32)
	word32 s2_54 = CONVERT(Mem51[a1:byte], byte, word32)
	word32 a0_55 = _double_byte(CONVERT(Mem51[a1 + 2<i32>:byte], byte, word32))
	word32 a0_61 = _double_byte(CONVERT(Mem51[a1 + 3<i32>:byte], byte, word32))
	word32 s2_65 = s2_54 ^ s1_53 ^ CONVERT(Mem51[a1 + 3<i32>:byte], byte, word32)
	Mem68[a0 + 2<i32>:byte] = SLICE(a0_55 ^ s2_65 ^ a0_61, byte, 0)
	word32 s1_78 = CONVERT(Mem68[a1:byte], byte, word32) ^ CONVERT(Mem68[a1 + 1<i32>:byte], byte, word32) ^ CONVERT(Mem68[a1 + 2<i32>:byte], byte, word32) ^ _double_byte(CONVERT(Mem68[a1:byte], byte, word32))
	Mem87[a0 + 3<i32>:byte] = SLICE(_double_byte(CONVERT(Mem68[a1 + 3<i32>:byte], byte, word32)) ^ s1_78 & 255<i32>, byte, 0)
	s1Out = s1_78 & 255<i32>
	s2Out = s2_65
	s3Out = a0
	s4Out = dwArg04
	return a1
mult_row_column_exit:


word32 tc_aes128_set_encrypt_key(word32 a0, word32 a1, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_cmac_setup
//      bt_encrypt_le
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a4 s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
tc_aes128_set_encrypt_key_entry:
l2302A84A:
	word32 a7_180
	word32 a2_176
	word32 a3_177
	word32 a5_178
	word32 a6_179
	word32 a4_137
	memcpy(fp + -60<i32>, 0x23076CB8<32>, 44<i32>, out a2_176, out a3_177, out a4_137, out a5_178, out a6_179, out a7_180)
	word32 a0_103 = 0<32>
	branch a0 == 0<32> l2302A91A
l2302A86C:
	branch a1 == 0<32> l2302A91A
l2302A86E:
	word32 a1_32 = a1
	word32 a4_35 = a0
l2302A878:
	a1_32 = a1_32 + 4<32>
	a4_35 = a4_35 + 4<32>
	word32 a5_50 = CONVERT(Mem37[a1_32:byte], byte, word32) << 24<i32> | CONVERT(Mem37[a1_32 + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem37[a1_32 + -1<i32>:byte], byte, word32) | CONVERT(Mem37[a1_32 + -2<i32>:byte], byte, word32) << 8<i32>
	Mem51[a4_35 + 4092<i32>:word32] = a5_50
	branch a1 + 16<i32> != a1_32 l2302A878
l2302A8A0:
	word32 a1_54 = 4<32>
l2302A8AE:
	a4_137 = a1_54 & 3<i32>
	branch a4_137 != 0<32> l2302A90A
l2302A8B6:
	word32 a5_64 = a5_50 >>u 24<i32> | a5_50 << 8<u32>
	a4_137 = CONVERT(Mem60[(a5_64 >>u 0x10<u32> & 255<i32>) + 0x23076CE4<32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem60[(a5_64 >>u 0x18<u32>) + 0x23076CE4<32>:byte], byte, word32) << 24<i32> | CONVERT(Mem60[(a5_64 & 255<i32>) + 0x23076CE4<32>:byte], byte, word32)) | CONVERT(Mem60[(a5_64 >>u 8<u32> & 255<i32>) + 0x23076CE4<32>:byte], byte, word32) << 8<i32>
	a5_50 = Mem60[(a1_54 & -4<i32>) + (fp + -16<i32>) + -44<i32>:int32] ^ a4_137
l2302A90A:
	a5_50 = a5_50 ^ a4_137
	Mem100[a5_50 + 12<i32>:word32] = Mem60[a4_137:word32] + 4<32>
	a1_54 = a1_54 + 1<32>
	branch a1_54 != 44<i32> l2302A8AE
l2302A918:
	a0_103 = 1<32>
l2302A91A:
	s1Out = a0
	a0Out = a0_103
	a4Out = a4_137
	s4Out = dwArgF4
	return a1
tc_aes128_set_encrypt_key_exit:


word32 tc_aes_encrypt(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_cmac_setup
//      tc_cmac_update
//      tc_cmac_final
//      bt_encrypt_le
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 ra s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tc_aes_encrypt_entry:
l2302A924:
	branch a0 == 0<32> l2302AA14
l2302A92A:
	branch a1 == 0<32> l2302AA14
l2302A92E:
	branch a2 == 0<32> l2302AA14
l2302AA14:
	s0Out = s0
	s1Out = s1
	a0Out = 0<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return ra
l2302A932:
	word32 a5_348
	word32 a4_347
	word32 a3_346
	_copy(fp + -64<i32>, 0x10<32>, a1, 0x10<32>, out a3_346, out a4_347, out a5_348)
	add_round_key(fp + -64<i32>, a2)
	word32 s5_157 = a2 + 16<i32>
	word32 s3_134 = fp + -48<i32>
	word32 s4_135 = 0x23076CE4<32>
l2302A96E:
	word32 a5_56 = fp + -64<i32>
l2302A972:
	a5_56 = a5_56 + 1<32>
	Mem64[a5_56 + 4095<i32>:byte] = SLICE(CONVERT(Mem58[CONVERT(Mem58[a5_56:byte], byte, word32) + s4_135:byte], byte, word32), byte, 0)
	branch a5_56 != s3_134 l2302A972
l2302A986:
	shift_rows(fp + -64<i32>)
	word32 s4_352
	word32 s3_351
	word32 s2_350
	word32 s1_349
	mult_row_column(s3_134, fp + -64<i32>, out s1_349, out s2_350, out s3_351, out s4_352)
	word32 s1_353
	word32 s2_354
	word32 s3_355
	word32 s4_356
	mult_row_column(fp + -44<i32>, fp + -60<i32>, out s1_353, out s2_354, out s3_355, out s4_356)
	word32 s1_357
	word32 s2_358
	word32 s3_359
	word32 s4_360
	mult_row_column(fp + -40<i32>, fp + -56<i32>, out s1_357, out s2_358, out s3_359, out s4_360)
	word32 s2_133
	word32 s1_132
	word32 s0_131 = mult_row_column(fp + -36<i32>, fp + -52<i32>, out s1_132, out s2_133, out s3_134, out s4_135)
	word32 a3_361
	word32 a4_362
	word32 a5_363
	_copy(fp + -64<i32>, 0x10<32>, s3_134, 0x10<32>, out a3_361, out a4_362, out a5_363)
	add_round_key(fp + -64<i32>, s5_157)
	s5_157 = s5_157 + 0x10<32>
	branch s5_157 != s0_131 l2302A96E
l2302A9C6:
	s1_132 = s1_132 + 1<32>
	Mem171[s1_132 + 4095<i32>:byte] = SLICE(CONVERT(Mem165[CONVERT(Mem165[s1_132:byte], byte, word32) + s4_135:byte], byte, word32), byte, 0)
	branch s3_134 != s1_132 l2302A9C6
l2302A9DA:
	shift_rows(fp + -64<i32>)
	add_round_key(fp + -64<i32>, s0_131)
	word32 a3_364
	word32 a4_365
	word32 a5_366
	_copy(s2_133, 0x10<32>, fp + -64<i32>, 0x10<32>, out a3_364, out a4_365, out a5_366)
	word32 a1_221
	word32 a3_223
	word32 a4_224
	word32 a2_367
	word32 a5_368
	word32 ra_226 = _set(ra, fp + -64<i32>, 0<32>, 0x10<32>, out a1_221, out a2_367, out a3_223, out a4_224, out a5_368)
	s0Out = dwArg0158
	s1Out = s1_132
	a0Out = 1<32>
	a1Out = a1_221
	a3Out = a3_223
	a4Out = a4_224
	s2Out = s2_133
	s3Out = s3_134
	s4Out = dwArgF4
	s5Out = s5_157
	return ra_226
tc_aes_encrypt_exit:


void att_prepare_write_req()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
att_prepare_write_req_entry:
l2302AA18:
	return
att_prepare_write_req_exit:


word32 att_op_get_type(word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_cb.isra.3
//      bt_att_create_pdu
//      bt_att_recv
// MayUse:  a0:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
att_op_get_type_entry:
l2302AA1C:
	word32 a0_11
	word32 a4_10 = 0xE<32>
	branch a0 == 0xE<32> l2302AA56
l2302AA24:
	branch a0 >u 0xE<32> l2302AA82
l2302AA82:
	a4_10 = 0x17<32>
	a0_11 = 2<32>
	branch a0 == 0x17<32> l2302AA58
l2302AA8A:
	branch a0 >u 0x17<32> l2302AABE
l2302AABE:
	a4_10 = 0x1D<32>
	a0_11 = 5<32>
	branch a0 == 0x1D<32> l2302AA58
l2302AAC6:
	branch a0 >u 0x1D<32> l2302AAEC
l2302AAEC:
	a4_10 = 82<i32>
	a0_11 = 0<32>
	branch a0 == 82<i32> l2302AA58
l2302AAF6:
	a4_10 = 210<i32>
	branch a0 == 210<i32> l2302AA58
l2302AAFE:
	a4_10 = 0x1E<32>
	a0_11 = 4<32>
l2302AACA:
	a4_10 = 0x19<32>
	a0_11 = 2<32>
	branch a0 == 0x19<32> l2302AA58
l2302AAD2:
	a0_11 = 1<32>
	branch a0 <u 0x19<32> l2302AA58
l2302AAD8:
	a4_10 = 0x1B<32>
	a0_11 = 3<32>
l2302AADC:
	branch a0 == a4_10 l2302AA58
l2302AA8E:
	a4_10 = 0x11<32>
	branch a0 == 0x11<32> l2302AA58
l2302AA94:
	branch a0 >u 0x11<32> l2302AAA8
l2302AAA8:
	a4_10 = 0x13<32>
	a0_11 = 2<32>
	branch a0 == 0x13<32> l2302AA58
l2302AAB0:
	a0_11 = 1<32>
	branch a0 <u 0x13<32> l2302AA58
l2302AAB6:
	a4_10 = 0x16<32>
	branch a0 != 0x16<32> l2302AAE0
l2302AABC:
	a4Out = 0x16<32>
	return 1<32>
l2302AA98:
	a4_10 = 0xF<32>
	branch a0 == 0xF<32> l2302AA58
l2302AA9E:
	a4_10 = 0x10<32>
	branch a0 != 0x10<32> l2302AAE0
l2302AAA6:
	a4Out = 0x10<32>
	return 1<32>
l2302AA28:
	a4_10 = 7<32>
	a0_11 = 2<32>
	branch a0 == 7<32> l2302AA58
l2302AA30:
	branch a0 >u 7<32> l2302AA5A
l2302AA5A:
	a4_10 = 0xA<32>
	a0_11 = 1<32>
	branch a0 == 0xA<32> l2302AA58
l2302AA62:
	branch a0 >u 0xA<32> l2302AA76
l2302AA76:
	a4_10 = 0xC<32>
	a0_11 = 1<32>
	branch a0 == 0xC<32> l2302AA58
l2302AA7E:
	a4Out = 0xC<32>
	return 2<32>
l2302AA66:
	a4_10 = 8<32>
	branch a0 == 8<32> l2302AA58
l2302AA6C:
	a4_10 = 9<32>
	branch a0 != 9<32> l2302AAE0
l2302AA74:
	a4Out = 9<32>
	return 2<32>
l2302AA34:
	a4_10 = 3<32>
	branch a0 == 3<32> l2302AA58
l2302AA3A:
	branch a0 >u 3<32> l2302AA4E
l2302AA4E:
	a4_10 = 5<32>
	a0_11 = 2<32>
	branch a0 == 5<32> l2302AA58
l2302AA56:
	a0_11 = 1<32>
l2302AA3E:
	a4_10 = 1<32>
	branch a0 == 1<32> l2302AA58
l2302AA44:
	a4_10 = 2<32>
	branch a0 != 2<32> l2302AAE0
l2302AAE0:
	a0_11 = 6<32>
	branch (a0 & 64<i32>) == 0<32> l2302AA58
l2302AA58:
	a4Out = a4_10
	return a0_11
l2302AAE8:
	a4Out = a4_10
	return 0<32>
l2302AA4C:
	a4Out = 2<32>
	return 1<32>
att_op_get_type_exit:


word32 att_req_destroy(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_reset
//      bt_att_encrypt_change
//      bt_att_req_cancel
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: a6 a7 mstatus s0 s1 s2 s3 s4 s5 s6 s8 sp t3 t4 t5 t6 tp
att_req_destroy_entry:
l2302AB04:
	word32 a0_10 = Mem7[a0 + 16<i32>:word32]
	branch a0_10 == 0<32> l2302AB14
l2302AB10:
	word32 s0_178
	word32 a0_179
	word32 a3_180
	word32 s2_181
	word32 s3_182
	word32 s4_183
	word32 s5_184
	word32 s6_185
	word32 s8_186
	ra = net_buf_unref(ra, s1, a0_10, a1, a4, mstatus, dwLoc10, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_178, out s1, out a0_179, out a1, out a3_180, out a4, out a5, out s2_181, out s3_182, out s4_183, out s5_184, out s6_185, out s8_186, out mstatus)
l2302AB14:
	word32 s0_43 = Mem7[a5 + 8<i32>:word32]
	branch a5 == 0<32> l2302AB1C
l2302AB18:
	word32 a6_62
	word32 a7_63
	word32 s2_64
	word32 s3_65
	word32 s4_66
	word32 s5_67
	word32 s6_68
	word32 s8_69
	word32 t3_72
	word32 t4_73
	word32 t5_74
	word32 t6_75
	word32 tp_76
	call a5 (retsize: 0;)
		uses: a0:s0_43,a1:a1_47,a4:a4_49,a5:a5_40,a6:a6_62,a7:a7_63,mstatus:mstatus_48,ra:ra_45,s0:s0_43,s1:s1_46,s2:s2_64,s3:s3_65,s4:s4_66,s5:s5_67,s6:s6_68,s8:s8_69,Stack +0000:dwLoc10,Stack +0008:dwLoc08,Stack +0028:dwArg18,Stack +0078:dwArg68,Stack +0098:dwArg88,Stack +00A4:dwArg94,Stack +00B8:dwArgA8,Stack +00D8:dwArgC8,Stack +00E8:dwArgD8,Stack +00F8:dwArgE8,Stack +0118:dwArg0108,Stack +0138:dwArg0128,Stack +0158:dwArg0148,Stack +0178:dwArg0168,t3:t3_72,t4:t4_73,t5:t5_74,t6:t6_75,tp:tp_76
		defs: a6:a6_62,a7:a7_63,ra:ra_53,s0:s0_52,s2:s2_64,s3:s3_65,s4:s4_66,s5:s5_67,s6:s6_68,s8:s8_69,t3:t3_72,t4:t4_73,t5:t5_74,t6:t6_75,tp:tp_76
l2302AB1C:
l2302AB28_thunk_memset:
	word32 a0_87
	word32 a1_88
	word32 a2_89
	word32 a3_90
	word32 a4_91
	word32 a5_92
	word32 t1_187
	word32 ra_93 = memset(ra, s0_43, 0<32>, 0x18<32>, out t1_187, out a0_87, out a1_88, out a2_89, out a3_90, out a4_91, out a5_92)
	a0Out = a0_87
	a1Out = a1_88
	a2Out = a2_89
	a3Out = a3_90
	a4Out = a4_91
	a5Out = a5_92
	return ra_93
att_req_destroy_exit:


void att_notify(word32 ra, word32 s0, word32 a5, word32 s6, word32 mstatus, word32 dwArg44)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s6:[0..31] Stack +0044:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_notify_entry:
l2302AB2C:
	word32 a1_14
	word32 a4_64
	word32 s0_65
	word32 s1_66
	word32 a3_67
	word32 mstatus_68
	bt_gatt_notification(ra, s0, s0, net_buf_simple_pull_le16(a5, out a1_14, out a4_64), dwArg44, CONVERT(Mem11[a1_14 + 12<i32>:uint16], uint16, word32), s6, mstatus, out s0_65, out s1_66, out a3_67, out mstatus_68)
	return
att_notify_exit:


word32 bt_gatt_foreach_attr(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s11, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_read_group_req
//      att_read_mult_req
//      att_read_req
//      att_read_type_req
//      att_find_type_req
//      att_find_info_req
//      att_signed_write_cmd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s11:[0..31]
// LiveOut: a0 a1 a2 a4 a5 ra s0 s1 s11 s2 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_gatt_foreach_attr_entry:
l2302AB58:
l2302AB62_thunk_bt_gatt_foreach_attr_type:
	word32 a0_14
	word32 a1_15
	word32 a2_16
	word32 a4_18
	word32 a5_19
	word32 s0_23
	word32 s1_24
	word32 s11_26
	word32 s2_27
	word32 s4_29
	word32 s5_30
	word32 a3_52
	word32 s3_53
	word32 s6_54
	word32 ra_22 = bt_gatt_foreach_attr_type(ra, a0, a1, 0<32>, 0<32>, 0<32>, a2, a3, s11, out s0_23, out s1_24, out a0_14, out a1_15, out a2_16, out a3_52, out a4_18, out a5_19, out s2_27, out s3_53, out s4_29, out s5_30, out s6_54, out s11_26)
	s0Out = s0_23
	s1Out = s1_24
	a0Out = a0_14
	a1Out = a1_15
	a2Out = a2_16
	a4Out = a4_18
	a5Out = a5_19
	s2Out = s2_27
	s4Out = s4_29
	s5Out = s5_30
	s11Out = s11_26
	return ra_22
bt_gatt_foreach_attr_exit:


void read_group_cb(word32 ra, word32 a0, word32 a1, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
read_group_cb_entry:
l2302AB66:
	word32 s3_17 = Mem15[a1:int32]
	word32 s4_25 = Mem15[s3_17:int32]
	word32 a2_314
	word32 a5_317
	word32 s8_319
	word32 a6_318
	word32 a3_315
	word32 a4_316
	word32 a1_29
	word32 a0_28
	bt_uuid_cmp(Mem15[a0:word32], fp + -40<i32>, out a0_28, out a1_29, out a2_314, out a3_315, out a4_316, out a5_317, out a6_318, out s8_319)
	word32 s2_128 = 0x3000000<32>
	branch a0_28 == 0<32> l2302ABE2
l2302AB98:
	word32 s1_44 = Mem27[a0_28:word32]
	word32 a5_53
	word32 a3_326
	word32 s8_329
	word32 a4_327
	word32 a6_328
	word32 a2_325
	bt_uuid_cmp(a0_28, fp + -36<i32>, out a0_28, out a1_29, out a2_325, out a3_326, out a4_327, out a5_53, out a6_328, out s8_329)
	s2_128 = 0x2FFF801<32>
	branch a0_28 == 0<32> l2302ABE2
l2302ABE2:
	word32 s1_69 = Mem66[a0_28:word32]
	word32 a0_70
	word32 a5_74
	word32 a2_78
	word32 a1_320
	word32 a6_323
	word32 s8_324
	word32 a3_321
	word32 a4_322
	word32 s0_75 = bt_uuid_cmp(a0_28, a1_29, out a0_70, out a1_320, out a2_78, out a3_321, out a4_322, out a5_74, out a6_323, out s8_324)
	branch a0_70 == 0<32> l2302ABF4
l2302ABF4:
	word32 s0_87 = Mem66[a0_70 + 8<i32>:word32]
	word32 a4_88 = CONVERT(Mem66[a5_74:byte], byte, word32)
	branch a4_88 == 0<32> l2302AC10
l2302ABFE:
	branch CONVERT(Mem66[s3_17 + 86<i32>:uint16] - Mem66[a0_70 + 12<i32>:uint16], uint16, uint16) >= a4_88 l2302AC10
l2302AC10:
	word32 a5_331
	word32 a1_330
	word32 a0_97 = net_buf_simple_add(a0_70 + 8<32>, 4<32>, a4_88, out a1_330, out a5_331)
	Mem101[a0_97 + 16<i32>:word32] = s0_87
	word32 a5_103 = CONVERT(Mem101[s1_69 + 16<i32>:uint16], uint16, word32)
	Mem107[a0_97:byte] = SLICE(a5_103 & 255<i32>, byte, 0)
	Mem108[a0_97 + 1<i32>:byte] = SLICE(a5_103 >>u 8<i32>, byte, 0)
	Mem113[a4_88 + 3<i32>:byte] = SLICE(a5_103 >>u 8<i32>, byte, 0)
	Mem114[a4_88 + 2<i32>:byte] = SLICE(a5_103 & 255<i32>, byte, 0)
	word32 a5_119 = CONVERT(Mem114[a4_88 + 12<i32>:uint16], uint16, word32)
	word32 a0_141
	word32 a3_143
	call Mem114[s1_69 + 4<i32>:int32] (retsize: 0;)
		uses: a0:s4_25,a1:s1_69,a2:a2_78 + a5_119,a3:CONVERT(SLICE(CONVERT(Mem114[s3_17 + 86<i32>:uint16], uint16, word32) - a5_119, word16, 0), word16, word32),a4:0<32>,a5:a5_119,ra:ra,s0:Mem114[a4_88 + 8<i32>:word32],s1:s1_69,s2:s2_128,s3:s3_17,s4:s4_25
		defs: a0:a0_141,a3:a3_143
	branch a0_141 < 0<32> l2302AC0C
l2302AC5C:
	word32 a4_159 = CONVERT(Mem114[a3_143:byte], byte, word32)
	branch a4_159 != 0<32> l2302AC76
l2302AC76:
	branch a4_159 == a0_141 + 4<i32> l2302AC6C
l2302AC7A:
	Mem163[a4_159 + 12<i32>:word16] = SLICE(CONVERT(Mem114[a4_159 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFFC<32>, word16, 0)
l2302AC68:
	Mem164[a3_143:byte] = SLICE(a0_141 + 4<i32>, byte, 0)
l2302AC6C:
	word32 a1_332
	word32 a5_333
	net_buf_simple_add(a0_141 + 8<32>, a0_141, a4_159, out a1_332, out a5_333)
l2302AC0C:
l2302ABEC:
	Mem175[s0_75 + 16<i32>:word32] = 0<32>
l2302ABF0:
l2302ABAE:
	branch a5_53 == 0<32> l2302ABD2
l2302ABB4:
	word32 a4_181 = CONVERT(Mem48[s1_44 + 16<i32>:uint16], uint16, word32)
	branch (CONVERT(Mem48[a5_53 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem48[a5_53 + 2<i32>:byte], byte, word32)) >=u a4_181 l2302ABD2
l2302ABC8:
	Mem184[a5_53 + 2<i32>:byte] = SLICE(a4_181, byte, 0)
	Mem186[a5_53 + 3<i32>:byte] = SLICE(a4_181 >>u 8<i32>, byte, 0)
l2302ABD2:
	0<32> = dwArg0128
	return
read_group_cb_exit:


void read_type_cb(word32 ra, word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
read_type_cb_entry:
l2302AC88:
	word32 s3_17 = Mem15[a1:int32]
	word32 s4_23 = Mem15[s3_17:int32]
	word32 a0_25
	word32 a2_219
	word32 a3_220
	word32 a1_218
	word32 a5_222
	word32 a6_223
	word32 a4_221
	word32 s8_224
	word32 s0_30 = bt_uuid_cmp(Mem15[a0:word32], Mem15[a1 + 4<i32>:word32], out a0_25, out a1_218, out a2_219, out a3_220, out a4_221, out a5_222, out a6_223, out s8_224)
	branch a0_25 != 0<32> l2302ACCE
l2302ACAE:
	word32 a2_45
	word32 a4_46
	word32 a5_47
	word32 a0_44 = bt_gatt_check_perm(s4_23, a0, 0x15<32>, out a2_45, out a4_46, out a5_47)
	Mem51[s0_30 + 20<i32>:byte] = SLICE(a0_44, byte, 0)
	branch a0_44 == 0<32> l2302ACE0
l2302ACE0:
	word32 s0_53 = Mem51[a0_44 + 8<i32>:word32]
	word32 a1_225
	word32 a5_226
	word32 a0_56 = net_buf_simple_add(a0_44 + 8<32>, 2<32>, a4_46, out a1_225, out a5_226)
	Mem59[a0_56 + 16<i32>:word32] = s0_53
	word32 a5_60 = CONVERT(Mem59[a0 + 16<i32>:uint16], uint16, word32)
	Mem62[a0_56:byte] = SLICE(a5_60, byte, 0)
	Mem64[a0_56 + 1<i32>:byte] = SLICE(a5_60 >>u 8<i32>, byte, 0)
	word32 a5_68 = CONVERT(Mem64[a4_46 + 12<i32>:uint16], uint16, word32)
	word32 s0_77
	word32 a0_84
	word32 a3_91
	word32 tp_98
	call Mem64[a0 + 4<i32>:int32] (retsize: 0;)
		uses: a0:s4_23,a1:a0,a2:a2_45 + a5_68,a3:CONVERT(SLICE(CONVERT(Mem64[s3_17 + 86<i32>:uint16], uint16, word32) - a5_68, word16, 0), word16, word32),a4:0<32>,a5:a5_68,ra:ra,s0:Mem64[a4_46 + 8<i32>:word32],s1:a0_44,s2:a0,s3:s3_17,s4:s4_23,tp:tp_98
		defs: a0:a0_84,a3:a3_91,s0:s0_77,tp:tp_98
	branch a0_84 >= 0<32> l2302AD3C
l2302AD3C:
	word32 a4_102 = CONVERT(Mem64[a3_91:byte], byte, word32)
	branch a4_102 != 0<32> l2302AD6C
l2302AD6C:
	branch a4_102 == a0_84 + 2<i32> l2302AD4C
l2302AD70:
	Mem106[a4_102 + 12<i32>:word16] = SLICE(CONVERT(Mem64[a4_102 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFFE<32>, word16, 0)
l2302AD48:
	Mem107[a3_91:byte] = SLICE(a0_84 + 2<i32>, byte, 0)
l2302AD4C:
	word32 a5_228
	word32 a1_227
	net_buf_simple_add(a0_84 + 8<32>, a0_84, a4_102, out a1_227, out a5_228)
l2302AD20:
	word32 a0_127 = 0xE<32>
	branch a0_84 >u 1<i32> l2302AD36
l2302AD2E:
	a0_127 = 0<32> - a0_84 & 255<i32>
l2302AD36:
	Mem132[s0_77 + 20<i32>:byte] = SLICE(a0_127, byte, 0)
l2302ACC0:
	word32 s0_133 = Mem51[a5_47 + 12<i32>:word32]
	branch CONVERT(Mem51[a5_47:byte], byte, word32) == 0<32> l2302ACCE
l2302ACC8:
	Mem135[s0_133 + 20<i32>:byte] = 0<8>
l2302ACCE:
	return
read_type_cb_exit:


void find_type_cb(word32 ra, word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
find_type_cb_entry:
l2302AD7E:
	word32 s3_17 = Mem15[a1:int32]
	word32 s4_25 = Mem15[s3_17:int32]
	word32 a0_28
	word32 a6_384
	word32 s8_385
	word32 a1_379
	word32 a2_380
	word32 a3_381
	word32 a5_383
	word32 a4_382
	word32 s0_103 = bt_uuid_cmp(Mem15[a0:word32], fp + -96<i32>, out a0_28, out a1_379, out a2_380, out a3_381, out a4_382, out a5_383, out a6_384, out s8_385)
	branch a0_28 == 0<32> l2302AE46
l2302ADB0:
	word32 s1_44 = Mem27[a0_28:word32]
	word32 a0_49
	word32 a4_52
	word32 a5_53
	word32 a6_389
	word32 s8_390
	word32 a1_386
	word32 a3_388
	word32 a2_387
	bt_uuid_cmp(a0_28, fp + -92<i32>, out a0_49, out a1_386, out a2_387, out a3_388, out a4_52, out a5_53, out a6_389, out s8_390)
	branch a0_49 == 0<32> l2302ADFA
l2302ADFA:
	word32 s0_65 = Mem48[a4_52 + 4<i32>:word32]
	word32 a5_69 = CONVERT(Mem48[s3_17 + 86<i32>:uint16] - Mem48[a4_52 + 12<i32>:uint16], uint16, uint16)
	branch a5_69 <=u 3<32> l2302ADEA
l2302AE0E:
	word32 s1_71 = Mem48[a5_69 + 4<i32>:word32]
	word32 sp_77
	word32 s1_79
	word32 ra_81
	word32 a0_85
	word32 s10_253
	word32 s11_254
	word32 s6_255
	word32 s7_256
	call a5_69 (retsize: 0;)
		uses: a0:s4_25,a1:s1_71,a2:fp + -88<i32>,a3:0x10<32>,a4:0<32>,ra:ra,s0:s0_65,s1:s1_71,s10:s10_253,s11:s11_254,s2:0x2FFF800<32>,s3:s3_17,s4:s4_25,s6:s6_255,s7:s7_256
		defs: a0:a0_85,ra:ra_81,s0:s0_78,s1:s1_79,s10:s10_253,s11:s11_254,s6:s6_255,s7:s7_256,sp:sp_77
	branch a0_85 < 0<32> l2302AE46
l2302AE22:
	word32 a4_108
	word32 a0_105
	word32 a2_102 = CONVERT(Mem48[s0_103 + 16<i32>:byte], byte, word32)
	s0_103 = Mem48[a0_85 + 12<i32>:word32]
	branch a2_102 == a0_85 l2302AEA0
l2302AEA0:
	word32 a5_394
	word32 a1_391
	word32 a3_393
	word32 a2_392
	a0_105 = memcmp(a0_85, sp_77 + 8<i32>, a2_102, out a1_391, out a2_392, out a3_393, out a4_108, out a5_394)
l2302AE2C:
	word32 a0_184
	word32 a3_114
	branch bt_uuid_create(sp_77 + 44<i32>, a0_85, a2_102, out a3_114) != 0<32> l2302AE4C
l2302AE4C:
	branch bt_uuid_create(sp_77 + 24<i32>, sp_77 + 8<i32>, a0_85 & 255<i32>, out a3_114) != 0<32> l2302AE66
l2302AE66:
	word32 a6_399
	word32 s8_400
	word32 a1_395
	word32 a2_396
	word32 a5_398
	word32 a3_397
	s0_103 = bt_uuid_cmp(sp_77 + 44<i32>, sp_77 + 24<i32>, out a0_105, out a1_395, out a2_396, out a3_397, out a4_108, out a5_398, out a6_399, out s8_400)
l2302AE6E:
	branch a0_105 != 0<32> l2302AE46
l2302AE70:
	word32 s0_164 = Mem48[a0_105 + 4<i32>:word32]
	Mem165[s0_164 + 17<i32>:byte] = 0<8>
	word32 a1_420
	word32 a5_421
	word32 a0_169 = net_buf_simple_add(a0_105 + 8<32>, 4<32>, a4_108, out a1_420, out a5_421)
	Mem172[a0_169 + 8<i32>:word32] = s0_164
	word32 a5_174 = CONVERT(Mem172[s1_79 + 16<i32>:uint16], uint16, word32)
	Mem177[a0_169:byte] = SLICE(a5_174 & 255<i32>, byte, 0)
	Mem178[a0_169 + 1<i32>:byte] = SLICE(a5_174 >>u 8<i32>, byte, 0)
	Mem180[a4_108 + 2<i32>:byte] = SLICE(a5_174 & 255<i32>, byte, 0)
	Mem181[a4_108 + 3<i32>:byte] = SLICE(a5_174 >>u 8<i32>, byte, 0)
l2302AE5A:
	a0_184 = 0x23076F5C<32>
l2302AE36:
	a0_184 = 0x23076F38<32>
l2302AE42:
	word32 a5_407
	word32 a7_408
	word32 a4_406
	word32 a3_405
	word32 a2_404
	word32 s1_401
	word32 a1_403
	word32 a0_402
	word32 s2_409
	word32 s3_410
	word32 s4_411
	word32 s5_412
	word32 s6_413
	word32 s7_414
	word32 s8_415
	word32 s9_416
	word32 s10_417
	word32 s11_418
	word32 t4_419
	printf(ra_81, a0_184, a3_114, Mem48[sp_77 + 8<i32>:word32], Mem48[sp_77 + 40<i32>:word32], Mem48[sp_77 + 112<i32>:word32], Mem48[sp_77 + 116<i32>:word32], Mem48[sp_77 + 152<i32>:word32], Mem48[sp_77 + 188<i32>:word32], out s1_401, out a0_402, out a1_403, out a2_404, out a3_405, out a4_406, out a5_407, out a7_408, out s2_409, out s3_410, out s4_411, out s5_412, out s6_413, out s7_414, out s8_415, out s9_416, out s10_417, out s11_418, out t4_419)
l2302AE46:
	Mem218[s0_103 + 8<i32>:word32] = 0<32>
l2302AE9C:
l2302ADC6:
	branch a5_53 == 0<32> l2302ADEA
l2302ADCC:
	word32 a4_224 = CONVERT(Mem48[s1_44 + 16<i32>:uint16], uint16, word32)
	branch (CONVERT(Mem48[a5_53 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem48[a5_53 + 2<i32>:byte], byte, word32)) >=u a4_224 l2302ADEA
l2302ADE0:
	Mem227[a5_53 + 2<i32>:byte] = SLICE(a4_224, byte, 0)
	Mem229[a5_53 + 3<i32>:byte] = SLICE(a4_224 >>u 8<i32>, byte, 0)
l2302ADEA:
	return
find_type_cb_exit:


void find_info_cb(word32 a0, word32 a4, word32 a5, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
find_info_cb_entry:
l2302AEA8:
	word32 a1_13 = Mem11[a5 + 8<i32>:word32]
	branch a5 != 0<32> l2302AEDA
l2302AEBE:
	word32 a5_24
	word32 a1_180
	word32 a0_22 = net_buf_simple_add(a0 + 8<32>, 1<32>, a4, out a1_180, out a5_24)
	Mem25[a0_22 + 8<i32>:word32] = a1_13
	word32 a5_28 = CONVERT(CONVERT(Mem25[a5_24:byte], byte, word32) != 0<32>, bool, word32)
	Mem30[a0_22:byte] = SLICE(a5_28 + 1<32>, byte, 0)
	a5 = a5_28 + 1<32>
l2302AEDA:
	word32 a5_35 = CONVERT(Mem32[a5:byte], byte, word32)
	branch a5_35 == 1<32> l2302AF34
l2302AF34:
	word32 s1_36 = Mem32[a5_35:word32]
	branch CONVERT(Mem32[a5_35:byte], byte, word32) != 0<32> l2302AF7E
l2302AF3E:
	word32 s0_39 = Mem32[4<32>:word32]
	word32 a5_189
	word32 a1_188
	word32 a0_42 = net_buf_simple_add(8<32>, 4<32>, 1<32>, out a1_188, out a5_189)
	Mem45[a0_42 + 12<i32>:word32] = s0_39
	word32 a5_46 = CONVERT(Mem45[s1_36 + 16<i32>:uint16], uint16, word32)
	Mem47[a0_42:byte] = SLICE(a5_46, byte, 0)
	Mem49[a0_42 + 1<i32>:byte] = SLICE(a5_46 >>u 8<i32>, byte, 0)
	word32 a5_52 = CONVERT(Mem49[(a5_46 >>u 8<i32>) + 2<i32>:uint16], uint16, word32)
	Mem53[3<32>:byte] = SLICE(a5_52, byte, 0)
	Mem55[4<32>:byte] = SLICE(a5_52 >>u 8<i32>, byte, 0)
l2302AEE6:
	branch a5_35 != 2<32> l2302AF7E
l2302AEEE:
	word32 s1_64 = Mem32[2<32>:word32]
	word32 a4_66 = CONVERT(Mem32[2<32>:byte], byte, word32)
	branch a4_66 != a5_35 l2302AF7E
l2302AEFA:
	word32 s0_67 = Mem32[4<32>:word32]
	word32 a1_71
	word32 a5_181
	word32 a0_70 = net_buf_simple_add(8<32>, 0x12<32>, a4_66, out a1_71, out a5_181)
	Mem73[a0_70 + 12<i32>:word32] = s0_67
	word32 a5_74 = CONVERT(Mem73[s1_64 + 16<i32>:uint16], uint16, word32)
	Mem76[a0_70:byte] = SLICE(a5_74, byte, 0)
	Mem78[a0_70 + 1<i32>:byte] = SLICE(a5_74 >>u 8<i32>, byte, 0)
	word32 a6_186
	word32 a7_187
	word32 a5_185
	word32 a4_184
	word32 a3_183
	word32 a2_182
	memcpy(a0_70 + 2<32>, a1_71 + 1<32>, 0x10<32>, out a2_182, out a3_183, out a4_184, out a5_185, out a6_186, out a7_187)
l2302AF7A:
l2302AF7E:
	0<32> = dwArg38
	return
find_info_cb_exit:


void bt_att_connected(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg84, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: s0 sp
bt_att_connected_entry:
l2302AF8A:
	word32 a3_19
	word32 a4_20
	word32 a5_67
	word32 s2_68
	word32 s3_69
	word32 s4_70
	k_queue_init(ra, 0x14<32>, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out a3_19, out a4_20, out a5_67, out s2_68, out s3_69, out s4_70)
	Mem32[a0 + 86<i32>:word16] = 0x17<16>
	Mem33[a0 + 66<i32>:word16] = 0x17<16>
	word32 a0_71
	word32 a3_72
	word32 a4_73
	word32 a5_74
	word32 s2_75
	word32 s3_76
	word32 s5_77
	k_delayed_work_init(ra, a0, a0 + 168<i32>, a3_19, a4_20, mstatus, dwArg84, dwArgB8, dwArgD8, dwArg0118, out a0_71, out a3_72, out a4_73, out a5_74, out s2_75, out s3_76, out s5_77)
	Mem52[a0 + 160<i32>:word32] = 0<32>
	Mem53[a0 + 164<i32>:word32] = 0<32>
	return
bt_att_connected_exit:


word32 att_cb.isra.3(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_send
//      bt_att_encrypt_change
//      bt_att_req_send
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a4 a5
// Preserved: sp
att_cb.isra.3_entry:
l2302AFC6:
	word32 a0_15
	word32 a4_32
	word32 a0_12 = att_op_get_type(CONVERT(Mem5[a0:byte], byte, word32), out a4_32) + 0xFFFFFFFF<32> & 255<i32>
	word32 a5_13 = 4<32>
	branch a0_12 >u 4<32> l2302AFF2
l2302AFF2:
	a0_15 = 0x2302B4FC<32>
l2302AFDE:
	a5_13 = 0x23076DE4<32>
	a0_15 = Mem5[(a0_12 << 2<i32>) + 0x23076DE4<32>:word32]
l2302AFEC:
	a5Out = a5_13
	return a0_15
att_cb.isra.3_exit:


word32 att_send(word32 ra, word32 s0, word32 s1, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0100, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_rsp_sent
//      bt_att_send
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_send_entry:
l2302AFFC:
	word32 s2_133 = a0
	word32 a5_119 = 210<i32>
	branch CONVERT(Mem13[a5:byte], byte, word32) != 210<i32> l2302B028
l2302B01C:
	dwArg54 = a2
	word32 a3_28
	word32 s0_34
	ra = bt_smp_sign(ra, a0, a0, dwLoc30, dwLoc2C, dwLoc28, s0, dwLoc08, dwArg00, dwArg04, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg48, dwArg4C, dwArg6C, dwArgD8, out s0_34, out a0, out a3_28, out a5_119, out s2_133)
	s1 = a0
	branch a0 != 0<32> l2302B04C
l2302B04C:
	word32 a1_60
	word32 a4_63
	word32 s1_66
	word32 s7_74
	word32 a3_84
	word32 a4_85
	word32 a5_86
	word32 mstatus_89
	word32 s1_92
	word32 s2_93
	word32 s6_97
	word32 s11_331
	word32 t4_332
	word32 s9_329
	word32 s10_330
	word32 s6_327
	word32 s8_328
	word32 s4_325
	word32 s5_326
	word32 s2_323
	word32 s3_324
	word32 a5_321
	word32 a7_322
	word32 a2_319
	word32 a3_320
	word32 a0_318
	word32 s0_333
	word32 a0_334
	word32 a1_335
	word32 s3_336
	word32 s4_337
	word32 s5_338
	word32 s8_339
	word32 ra_90 = net_buf_unref(printf(ra, 0x23076E5C<32>, a3_28, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_66, out a0_318, out a1_60, out a2_319, out a3_320, out a4_63, out a5_321, out a7_322, out s2_323, out s3_324, out s4_325, out s5_326, out s6_327, out s7_74, out s8_328, out s9_329, out s10_330, out s11_331, out t4_332), s1_66, s0_34, a1_60, a4_63, mstatus, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, a2, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_333, out s1_92, out a0_334, out a1_335, out a3_84, out a4_85, out a5_86, out s2_93, out s3_336, out s4_337, out s5_338, out s6_97, out s8_339, out mstatus_89)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_92
	a0Out = s1_92
	a3Out = a3_84
	a4Out = a4_85
	a5Out = a5_86
	s2Out = s2_93
	s6Out = s6_97
	s7Out = s7_74
	mstatusOut = mstatus_89
	return ra_90
l2302B028:
	word32 a2_112 = a2
	branch a2 != 0<32> l2302B032
l2302B02A:
	a2_112 = att_cb.isra.3(a0, out a5_119)
l2302B032:
	0<32> = dwArg0128
l2302B048_thunk_bt_l2cap_send_cb:
	word32 a0_146
	word32 a3_149
	word32 a4_150
	word32 a5_151
	word32 mstatus_154
	word32 s0_156
	word32 s1_157
	word32 s2_160
	word32 s6_164
	word32 s7_165
	word32 a1_340
	word32 s3_341
	word32 s5_342
	word32 s9_343
	word32 ra_155 = bt_l2cap_send_cb(ra, s1, s2_133, 4<32>, dwArg0100, a2_112, a5_119, mstatus, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg54, dwArg58, dwArg74, dwArg7C, dwArg88, dwArg8C, dwArgA4, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_156, out s1_157, out a0_146, out a1_340, out a3_149, out a4_150, out a5_151, out s2_160, out s3_341, out s5_342, out s6_164, out s7_165, out s9_343, out mstatus_154)
	s0Out = s0_156
	s1Out = s1_157
	a0Out = a0_146
	a3Out = a3_149
	a4Out = a4_150
	a5Out = a5_151
	s2Out = s2_160
	s6Out = s6_164
	s7Out = s7_165
	mstatusOut = mstatus_154
	return ra_155
att_send_exit:


void att_send_req(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg64, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_att_encrypt_change
//      bt_att_req_send
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_send_req_entry:
l2302B06E:
	Mem12[a0 + 156<i32>:word32] = a1
	word32 a0_22
	word32 a1_23
	word32 a4_26
	word32 a5_27
	word32 s1_30
	word32 a3_221
	word32 s2_222
	word32 s3_223
	word32 s4_224
	word32 s8_225
	k_sem_take(a0 + 204<i32>, 0<32>, a2, a3, a4, a5, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_30, out a0_22, out a1_23, out a3_221, out a4_26, out a5_27, out s2_222, out s3_223, out s4_224, out s8_225)
	word32 s0_37 = Mem12[a1_23 + 16<i32>:word32]
	branch a0_22 >= 0<32> l2302B0A4
l2302B0A4:
	word32 a0_40 = net_buf_simple_headroom(a4_26)
	Mem42[s0_37 + 12<i32>:word16] = SLICE(a0_40, word16, 0)
	Mem45[Mem42[a0_40 + 16<i32>:word32] + 14<i32>:word16] = SLICE(CONVERT(Mem42[a1_23 + 12<i32>:uint16], uint16, word32), word16, 0)
	word32 s1_46 = Mem45[s1_30:word32]
	net_buf_ref(a0_40)
	word32 a5_54
	word32 a0_60
	word32 a1_61
	word32 a4_64
	word32 mstatus_68
	word32 s0_238
	word32 s1_239
	word32 a3_240
	word32 a5_241
	word32 s2_242
	word32 s3_243
	word32 s5_244
	word32 s6_245
	word32 s7_246
	word32 s9_247
	word32 ra_69 = bt_l2cap_send_cb(ra, s1_46, s1_46, 4<32>, a0_40, att_cb.isra.3(a0_40, out a5_54), a5_54, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, s1, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_238, out s1_239, out a0_60, out a1_61, out a3_240, out a4_64, out a5_241, out s2_242, out s3_243, out s5_244, out s6_245, out s7_246, out s9_247, out mstatus_68)
	branch a0_60 == 0<32> l2302B098
l2302B0E0:
	word32 s0_101
	word32 s1_248
	word32 a0_249
	word32 a1_250
	word32 a3_251
	word32 a4_252
	word32 a5_253
	word32 s2_254
	word32 s3_255
	word32 s4_256
	word32 s5_257
	word32 s6_258
	word32 s8_259
	word32 mstatus_260
	net_buf_unref(ra_69, a0_60, a0_60, a1_61, a4_64, mstatus_68, dwLoc20, dwLoc1C, dwLoc18, dwArg08, dwArg58, a0_40, dwArg78, dwArg84, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_101, out s1_248, out a0_249, out a1_250, out a3_251, out a4_252, out a5_253, out s2_254, out s3_255, out s4_256, out s5_257, out s6_258, out s8_259, out mstatus_260)
	Mem116[s0_101 + 16<i32>:word32] = 0<32>
l2302B08E:
	word32 s1_226
	word32 a0_227
	word32 a1_228
	word32 a2_229
	word32 a3_230
	word32 a4_231
	word32 a5_232
	word32 s2_233
	word32 s3_234
	word32 s4_235
	word32 s5_236
	word32 s6_237
	k_queue_append(s1_30 + 216<i32>, a4_26, a5_27, mstatus, dwLoc1C, dwArg64, dwArgD8, dwArg0118, dwArg0158, out s1_226, out a0_227, out a1_228, out a2_229, out a3_230, out a4_231, out a5_232, out s2_233, out s3_234, out s4_235, out s5_236, out s6_237)
l2302B098:
	return
att_send_req_exit:


word32 att_handle_rsp(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_confirm
//      att_error_rsp
//      att_mtu_rsp
//      att_reset
//      bt_att_encrypt_change
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 mstatus ra s0 s11
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_rsp_entry:
l2302B0EC:
	word32 a1_33
	word32 a5_469
	word32 s5_471
	word32 s6_472
	word32 s8_473
	word32 s4_470
	word32 a4_468
	word32 s3_36
	word32 s2_31
	word32 a0_25
	word32 a3_104
	word32 a2_103
	word32 s1_145 = k_delayed_work_cancel(a0 + 168<i32>, a3, a4, mstatus, dwArg14, dwArg18, dwArg88, dwArg98, dwArgC8, dwArg0108, out a0_25, out a1_33, out a2_103, out a3_104, out a4_468, out a5_469, out s2_31, out s3_36, out s4_470, out s5_471, out s6_472, out s8_473)
	word32 s0_132 = a0
	word32 a5_105 = Mem16[a0 + 156<i32>:int32]
	branch a5_105 != 0<32> l2302B148
l2302B148:
	branch a5_105 != 0x420128A0<32> l2302B15A
l2302B15A:
	branch a0_25 == 0<32> l2302B16A
l2302B15E:
	word32 s6_494
	word32 s8_495
	word32 a5_491
	word32 s4_492
	word32 s5_493
	word32 a1_488
	word32 a3_489
	word32 a4_490
	ra = net_buf_unref(ra, s1_145, a0_25, a1_33, 0x420128A0<32>, mstatus, dwLoc20, dwLoc1C, s2, dwArg08, dwArg58, s3, dwArg78, dwArg84, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_132, out s1_145, out a0_25, out a1_488, out a3_489, out a4_490, out a5_491, out s2_31, out s3_36, out s4_492, out s5_493, out s6_494, out s8_495, out mstatus)
	Mem77[Mem16[s0_132 + 156<i32>:int32] + 16<i32>:word32] = 0<32>
l2302B16A:
	word32 a5_80 = Mem79[s0_132 + 156<i32>:int32]
	word32 a6_85 = Mem79[a5_80 + 4<i32>:int32]
	Mem86[a5_80 + 4<i32>:word32] = 0<32>
	word32 s0_88 = Mem86[a0_25:word32]
	word32 sp_95
	word32 a1_102
	word32 a4_106
	word32 s10_270
	word32 s7_272
	word32 s9_273
	call a6_85 (retsize: 0;)
		uses: a0:a0_87,a1:s1_90,a2:s2_83,a3:s3_81,a4:Mem86[s0_88 + 156<i32>:int32],a5:a5_80,mstatus:mstatus_93,ra:ra_92,s0:s0_88,s1:s1_90,s10:s10_270,s11:s11_271,s2:s2_83,s3:s3_81,s7:s7_272,s9:s9_273,Stack +0000:dwLoc20,Stack +0004:dwLoc1C,Stack +0028:dwArg08,Stack +0034:dwArg14,Stack +0038:dwArg18,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0078:dwArg58,Stack +0098:dwArg78,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +00B8:dwArg98,Stack +00BC:dwArg9C,Stack +00D8:dwArgB8,Stack +00E8:dwArgC8,Stack +00F8:dwArgD8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,Stack +0138:dwArg0118,Stack +0158:dwArg0138,Stack +0178:dwArg0158
		defs: a1:a1_102,a2:a2_103,a3:a3_104,a4:a4_106,a5:a5_105,mstatus:mstatus_111,ra:ra_101,s0:s0_96,s1:s1_98,s10:s10_270,s11:s11_271,s7:s7_272,s9:s9_273,sp:sp_95
	word32 a0_122 = Mem86[a5_105 + 4<i32>:word32]
	branch a5_105 != 0<32> l2302B154
l2302B18C:
	word32 a4_498
	word32 a0_496
	word32 a1_497
	ra = att_req_destroy(ra, s0_132, s1_145, a0_122, a1_102, a4_106, a5_105, mstatus, Mem86[sp_95 + 24<i32>:word32], Mem86[sp_95 + 104<i32>:word32], Mem86[sp_95 + 136<i32>:word32], Mem86[sp_95 + 148<i32>:word32], Mem86[sp_95 + 168<i32>:word32], Mem86[sp_95 + 200<i32>:word32], Mem86[sp_95 + 216<i32>:word32], Mem86[sp_95 + 232<i32>:word32], Mem86[sp_95 + 264<i32>:word32], Mem86[sp_95 + 296<i32>:word32], Mem86[sp_95 + 328<i32>:word32], Mem86[sp_95 + 360<i32>:word32], out a0_496, out a1_497, out a2_103, out a3_104, out a4_498, out a5_105)
l2302B154:
	Mem133[s0_132 + 156<i32>:word32] = 0<32>
l2302B10E:
	word32 t4_487
	word32 s8_484
	word32 s9_485
	word32 s10_486
	word32 s4_480
	word32 s5_481
	word32 s6_482
	word32 s7_483
	word32 s3_479
	word32 a1_475
	word32 a7_477
	word32 s2_478
	word32 a4_476
	word32 a0_474
	ra = printf(ra, 0x23076E40<32>, a3_104, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_145, out a0_474, out a1_475, out a2_103, out a3_104, out a4_476, out a5_105, out a7_477, out s2_478, out s3_479, out s4_480, out s5_481, out s6_482, out s7_483, out s8_484, out s9_485, out s10_486, out s11, out t4_487)
l2302B11A:
	branch Mem159[s0_132 + 160<i32>:int32] == 0<32> l2302B138
l2302B120:
	word32 a1_163 = Mem159[a5_105:word32]
	word32 a4_164 = Mem159[s0_132 + 164<i32>:int32]
	Mem165[s0_132 + 160<i32>:word32] = a5_105
	branch a1_163 != a4_164 l2302B132
l2302B12E:
	Mem166[s0_132 + 164<i32>:word32] = a5_105
l2302B132:
	att_send_req(ra, s1_145, s0_132, a1_163, a2_103, a3_104, a4_164, a5_105, mstatus, s2, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg54, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138)
l2302B138:
	s0Out = s0_132
	a0Out = 0<32>
	s11Out = s11
	mstatusOut = mstatus
	return ra
att_handle_rsp_exit:


void att_handle_find_info_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_handle_find_type_rsp
//      att_handle_read_type_rsp
//      att_handle_read_rsp
//      att_handle_read_blob_rsp
//      att_handle_read_mult_rsp
//      att_handle_read_group_rsp
//      att_handle_write_rsp
//      att_handle_prepare_write_rsp
//      att_handle_exec_write_rsp
//      att_confirm
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_find_info_rsp_entry:
l2302B192:
l2302B19A_thunk_att_handle_rsp:
	word32 s0_71
	word32 a0_72
	word32 s11_73
	word32 mstatus_74
	att_handle_rsp(ra, s1, a0, 0<32>, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s0_71, out a0_72, out s11_73, out mstatus_74)
	return
att_handle_find_info_rsp_exit:


void att_handle_find_type_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_find_type_rsp_entry:
l2302B19E:
l2302B19E_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_find_type_rsp_exit:


void att_handle_read_type_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_read_type_rsp_entry:
l2302B1A2:
l2302B1A2_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_read_type_rsp_exit:


void att_handle_read_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_read_rsp_entry:
l2302B1A6:
l2302B1A6_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_read_rsp_exit:


void att_handle_read_blob_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_read_blob_rsp_entry:
l2302B1AA:
l2302B1AA_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_read_blob_rsp_exit:


void att_handle_read_mult_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_read_mult_rsp_entry:
l2302B1AE:
l2302B1AE_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_read_mult_rsp_exit:


void att_handle_read_group_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_read_group_rsp_entry:
l2302B1B2:
l2302B1B2_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_read_group_rsp_exit:


void att_handle_write_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_write_rsp_entry:
l2302B1B6:
l2302B1B6_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_write_rsp_exit:


void att_handle_prepare_write_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_prepare_write_rsp_entry:
l2302B1BA:
l2302B1BA_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_prepare_write_rsp_exit:


void att_handle_exec_write_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_exec_write_rsp_entry:
l2302B1BE:
l2302B1BE_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_exec_write_rsp_exit:


void att_confirm(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_confirm_entry:
l2302B1C2:
l2302B1C2_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_confirm_exit:


void att_error_rsp(word32 ra, word32 s0, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_error_rsp_entry:
l2302B1C6:
	word32 a3_120
	word32 a5_9 = Mem7[a0 + 156<i32>:int32]
	word32 s0_10 = a0
	branch a5_9 == 0<32> l2302B268
l2302B1D4:
	a4 = 0x420128A0<32>
	branch a5_9 == 0x420128A0<32> l2302B268
l2302B268:
	a3_120 = 0xE<32>
l2302B1E0:
	word32 a5_14 = Mem7[0x420128B0<32>:word32]
	branch false l2302B1F8
l2302B1E6:
	a4 = Mem7[a3 + 16<i32>:word32]
	Mem21[a3 + CONVERT(Mem7[a5_14 + 12<i32>:uint16], uint16, word32) + 8<i32>:word32] = a4
	Mem23[a4 + 12<i32>:word16] = SLICE(CONVERT(Mem21[a5_14 + 14<i32>:uint16], uint16, word32), word16, 0)
l2302B1F8:
	a3_120 = CONVERT(Mem25[a2 + 3<i32>:byte], byte, word32)
	branch CONVERT(Mem25[Mem25[a0 + 156<i32>:int32] + 20<i32>:byte], byte, word32) != 0<32> l2302B254
l2302B206:
	word32 a1_36
	s0_10 = Mem25[a0:word32]
	branch a3_120 == 5<32> l2302B23C
l2302B23C:
	word32 a5_33 = CONVERT(Mem25[a0 + 9<i32>:byte], byte, word32)
	branch a5_33 <=u 1<32> l2302B21E
l2302B246:
	branch a5_33 == 2<32> l2302B264
l2302B264:
	a1_36 = 3<32>
l2302B24C:
	a4 = 3<32>
	a1_36 = 4<32>
	branch a5_33 == 3<32> l2302B220
l2302B20E:
	branch a3_120 != 0xF<32> l2302B254
l2302B214:
	a4 = CONVERT(Mem25[a0 + 9<i32>:byte], byte, word32)
	branch a4 >u 1<32> l2302B254
l2302B21E:
	a1_36 = 2<32>
l2302B220:
	word32 a0_69
	word32 s5_431
	word32 a5_430
	ra = bt_conn_set_security(ra, s0_10, a0, a1_36, a3_120, s2, s3, mstatus, dwLoc20, dwLoc1C, dwLoc18, s0, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1, out a0_69, out a3_120, out a4, out a5_430, out s2, out s3, out s5_431, out mstatus)
	branch a0_69 != 0<32> l2302B254
l2302B254:
l2302B260_thunk_att_handle_rsp:
	word32 s11_428
	word32 mstatus_429
	word32 a0_427
	word32 s0_426
	att_handle_rsp(ra, s1, s0_10, a3_120, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s0_426, out a0_427, out s11_428, out mstatus_429)
	return
l2302B22A:
	Mem158[Mem48[s0_10 + 156<i32>:int32] + 20<i32>:byte] = 1<8>
	return
att_error_rsp_exit:


void bt_att_accept(word32 ra, word32 s1, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg8C, word32 dwArg9C, word32 dwArgC8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
bt_att_accept_entry:
l2302B26C:
	word32 s0_21
	word32 a0_20
	word32 a4_16 = Mem14[a3:word32]
	branch a3 == 0<32> l2302B2AE
l2302B2AE:
	a0_20 = 0x420126D8<32>
	s0_21 = 0<32>
l2302B28A:
	branch Mem14[a4_16 + 228<i32>:int32] == 0<32> l2302B2EE
l2302B2EE:
	a0_20 = 0x420127BC<32>
	s0_21 = 1<32>
l2302B2B4:
	word32 a3_32
	word32 a4_33
	word32 t1_194
	word32 a0_195
	word32 a1_196
	word32 a2_197
	word32 a5_198
	word32 ra_35 = memset(ra, a0_20, 0<32>, 228<i32>, out t1_194, out a0_195, out a1_196, out a2_197, out a3_32, out a4_33, out a5_198)
	word32 s0_40 = s0_21 + 228<i32>
	Mem48[s0_40 + 0x420126DC<32>:word32] = 0x4200D538<32>
	word32 s2_61
	word32 s3_62
	word32 s1_199
	word32 a0_200
	word32 a1_201
	word32 a3_202
	word32 a4_203
	word32 a5_204
	word32 s4_205
	word32 s5_206
	word32 s6_207
	word32 s7_208
	word32 s8_209
	word32 s9_210
	k_sem_init(ra_35, s0_40 + 204<i32>, s0_40 + 0x420127A4<32>, 0xA<32>, 0xA<32>, a3_32, a4_33, 0x4200D538<32>, mstatus, dwLoc08, dwArg40, dwArg44, s1, dwArg8C, dwArgC8, dwArg0108, out s1_199, out a0_200, out a1_201, out a3_202, out a4_203, out a5_204, out s2_61, out s3_62, out s4_205, out s5_206, out s6_207, out s7_208, out s8_209, out s9_210)
	Mem78[s3_62:word32] = s2_61
l2302B290:
	word32 s1_175
	word32 a0_176
	word32 a1_177
	word32 a2_178
	word32 a3_179
	word32 a4_180
	word32 a5_181
	word32 a7_182
	word32 s2_183
	word32 s3_184
	word32 s4_185
	word32 s5_186
	word32 s6_187
	word32 s7_188
	word32 s8_189
	word32 s9_190
	word32 s10_191
	word32 s11_192
	word32 t4_193
	printf(ra, 0x23076E9C<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_175, out a0_176, out a1_177, out a2_178, out a3_179, out a4_180, out a5_181, out a7_182, out s2_183, out s3_184, out s4_185, out s5_186, out s6_187, out s7_188, out s8_189, out s9_190, out s10_191, out s11_192, out t4_193)
l2302B2A0:
	return
bt_att_accept_exit:


void att_mtu_rsp(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_mtu_rsp_entry:
l2302B2F6:
	branch a0 == 0<32> l2302B33A
l2302B33A:
	return
l2302B2FC:
	word32 a3_23
	word32 a1_8 = Mem0[a1 + 8<i32>:word32]
	word32 a5_12 = CONVERT(Mem0[a1_8 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem0[a1_8:byte], byte, word32)
	branch a5_12 >u 0x16<32> l2302B31A
l2302B31A:
	word32 a3_15 = a5_12
	branch a5_12 <=u 247<i32> l2302B328
l2302B324:
	a3_15 = 247<i32>
l2302B328:
	Mem19[a0 + 66<i32>:word16] = SLICE(a3_15, word16, 0)
	Mem20[a0 + 86<i32>:word16] = SLICE(a3_15, word16, 0)
	a3_23 = 0<32>
l2302B310:
	a3_23 = 4<32>
l2302B316:
l2302B316_thunk_att_handle_rsp:
	word32 s11_211
	word32 a0_210
	word32 mstatus_212
	word32 s0_209
	att_handle_rsp(ra, s1, a0, a3_23, a0, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s0_209, out a0_210, out s11_211, out mstatus_212)
	return
att_mtu_rsp_exit:


word32 att_reset(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_att_disconnected
//      att_timeout
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a0 mstatus ra s0 s11
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_reset_entry:
l2302B33C:
	word32 sp_136 = fp + 0xFFFFFFF0<32>
	word32 s1_14 = a0 + 216<i32>
	ra_118 = ra
l2302B34C:
	word32 ra_118
	word32 a0_23
	word32 a1_24
	word32 a3_26
	word32 a4_27
	word32 s1_32
	word32 s4_570
	word32 a5_567
	word32 s3_569
	word32 s2_568
	word32 a2_566
	word32 s0_31 = k_queue_get(s1_14, 0<32>, a3, a4, mstatus, s0, ra, dwArgE8, dwArg0128, out s1_32, out a0_23, out a1_24, out a2_566, out a3_26, out a4_27, out a5_567, out s2_568, out s3_569, out s4_570)
	branch a0_23 != 0<32> l2302B390
l2302B390:
	word32 s6_553
	word32 s4_551
	word32 s2_549
	word32 a1_547
	word32 s0_545
	word32 a0_546
	word32 s3_550
	word32 a5_548
	word32 s5_552
	word32 s8_554
	ra_118 = net_buf_unref(ra_118, s1_32, a0_23, a1_24, a4_27, mstatus, s2, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_545, out s1_14, out a0_546, out a1_547, out a3, out a4, out a5_548, out s2_549, out s3_550, out s4_551, out s5_552, out s6_553, out s8_554, out mstatus)
l2302B356:
	word32 a2_557
	word32 a0_555
	word32 s4_558
	word32 a1_556
	word32 a3_75
	word32 a5_100
	word32 a4_148
	atomic_or(s0_31, 4<32>, a3_26, a4_27, mstatus, out a0_555, out a1_556, out a2_557, out a3_75, out a4_148, out a5_100, out s4_558)
	word32 s2_105 = s0_31 + 204<i32>
l2302B366:
	word32 s1_104
	word32 s9_564
	word32 s5_561
	word32 a2_559
	word32 s4_560
	word32 s10_565
	word32 s7_563
	word32 s6_562
	word32 a1_143
	word32 s0_103
	word32 s3_106
	word32 s11_120
	word32 a0_180
	ra_118 = k_sem_give(ra_118, s2_105, a3_75, a4_148, a5_100, mstatus, dwArg04, dwArg08, dwArg50, dwArg54, dwArg78, dwArg84, dwArg9C, dwArgF8, dwArg0138, dwArg0178, out s0_103, out s1_104, out a0_180, out a1_143, out a2_559, out a3_75, out a4_148, out a5_100, out s2_105, out s3_106, out s4_560, out s5_561, out s6_562, out s7_563, out s9_564, out s10_565, out s11_120)
	branch s1_104 != 0<32> l2302B366
l2302B370:
	word32 s1_123 = Mem11[s0_103 + 160<i32>:int32]
	branch s1_123 != 0<32> l2302B396
l2302B396:
	s2_105 = Mem11[s1_123:int32]
l2302B39A:
	word32 mstatus_149
	s1_123 = Mem11[a5_100 + 4<i32>:word32]
	branch a5_100 == 0<32> l2302B3AA
l2302B39E:
	call a5_100 (retsize: 0;)
		uses: a0:0<32>,a1:0xE<32>,a2:0<32>,a3:0<32>,a4:s1_127,mstatus:mstatus_149,ra:ra_134,s0:s0_133,s1:s1_127,s2:s2_135,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0050:dwArg50,Stack +0054:dwArg54,Stack +0068:dwArg68,Stack +0078:dwArg78,Stack +0084:dwArg84,Stack +0088:dwArg88,Stack +0094:dwArg94,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,Stack +0128:dwArg0128,Stack +0138:dwArg0138,Stack +0148:dwArg0148,Stack +0168:dwArg0168,Stack +0178:dwArg0178,Stack +FFFFFFF8:dwLoc08
		defs: a1:a1_143,a4:a4_148,a5:a5_144,mstatus:mstatus_149,ra:ra_140,s0:s0_138,s1:s1_139,s11:s11_164,s2:s2_141,s3:s3_152,sp:sp_137
	mstatus = mstatus_149
l2302B3AA:
	word32 a3_572
	word32 a2_571
	ra_118 = att_req_destroy(ra_118, s0_103, s1_123, s1_123, a1_143, a4_148, a5_100, mstatus, Mem11[sp_136 + 24<i32>:word32], Mem11[sp_136 + 104<i32>:word32], Mem11[sp_136 + 136<i32>:word32], Mem11[sp_136 + 148<i32>:word32], Mem11[sp_136 + 168<i32>:word32], Mem11[sp_136 + 200<i32>:word32], Mem11[sp_136 + 216<i32>:word32], Mem11[sp_136 + 232<i32>:word32], Mem11[sp_136 + 264<i32>:word32], Mem11[sp_136 + 296<i32>:word32], Mem11[sp_136 + 328<i32>:word32], Mem11[sp_136 + 360<i32>:word32], out a0_180, out a1_143, out a2_571, out a3_572, out a4_148, out a5_100)
	branch s2_105 == 0<32> l2302B376
l2302B3B4:
	s2_105 = Mem11[s2_105:int32]
l2302B376:
	word32 a5_194 = Mem11[s0_103 + 156<i32>:int32]
	Mem195[s0_103 + 160<i32>:word32] = 0<32>
	Mem196[s0_103 + 164<i32>:word32] = 0<32>
	branch a5_194 != 0<32> l2302B3BC
l2302B3BC:
	0<32> = dwArg38
l2302B3CE_thunk_att_handle_rsp:
	word32 a0_214
	word32 mstatus_222
	word32 s0_224
	word32 s11_227
	word32 ra_223 = att_handle_rsp(ra_118, s1_123, s0_103, 0xE<32>, a4_148, s2_105, s3_106, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s0_224, out a0_214, out s11_227, out mstatus_222)
	s0Out = s0_224
	a0Out = a0_214
	s11Out = s11_227
	mstatusOut = mstatus_222
	return ra_223
l2302B384:
	0<32> = dwArg38
	s0Out = s0
	a0Out = a0_180
	s11Out = s11_120
	mstatusOut = mstatus
	return ra_118
att_reset_exit:


void bt_att_disconnected(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_att_disconnected_entry:
l2302B3D2:
	word32 a0_14
	word32 mstatus_22
	word32 s11_27
	word32 s0_53
	word32 s0_297
	word32 a4_102
	word32 a3_103
	word32 ra_112 = bt_gatt_disconnected(att_reset(ra, a0, a0, a3, a4, s2, mstatus, dwLoc10, s0, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg40, dwArg44, dwArg48, dwArg58, dwArg68, ra, dwArg78, dwArg84, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, out s0_297, out a0_14, out s11_27, out mstatus_22), a0_14, s11_27, dwLoc08, out s0_53, out a3_103, out a4_102)
	word32 a5_72 = Mem7[s0_53 + 184<i32>:int32]
	branch a5_72 == 0<32> l2302B3F2
l2302B3EA:
	word32 s4_302
	word32 s5_303
	word32 s2_300
	word32 s3_301
	word32 a0_298
	word32 a5_299
	k_delayed_work_del_timer(s0_53 + 168<i32>, a4_102, a5_72, mstatus_22, dwArg24, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_298, out a3_103, out a4_102, out a5_299, out s2_300, out s3_301, out s4_302, out s5_303)
l2302B3F2:
	word32 a5_98 = Mem7[s0_53 + 216<i32>:int32]
	branch a5_98 == 0<32> l2302B404
l2302B3F8:
	word32 a5_305
	word32 a4_304
	ra_112 = k_queue_free(ra_112, s0_53 + 216<i32>, a3_103, a4_102, a5_98, mstatus_22, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, dwArg0138, dwArg0178, out a3_103, out a4_304, out a5_305)
	Mem129[s0_53 + 216<i32>:word32] = 0<32>
l2302B404:
	branch Mem131[s0_53 + 204<i32>:int32] == 0<32> l2302B418
l2302B418:
	return
l2302B40A:
l2302B414_thunk_k_sem_delete:
	word32 s3_310
	word32 a3_308
	word32 s2_309
	word32 a1_307
	word32 s1_306
	word32 s5_311
	word32 s6_312
	word32 s7_313
	word32 s9_314
	word32 s10_315
	word32 s11_316
	k_sem_delete(ra_112, s0_53 + 204<i32>, a3_103, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_306, out a1_307, out a3_308, out s2_309, out s3_310, out s5_311, out s6_312, out s7_313, out s9_314, out s10_315, out s11_316)
	return
bt_att_disconnected_exit:


void att_timeout(word32 ra, word32 s0, word32 a0, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
att_timeout_entry:
l2302B420:
	word32 a3_18
	word32 a4_19
	word32 s2_25
	word32 s0_47
	word32 s11_50
	word32 s0_76
	word32 s1_137
	word32 a0_138
	word32 a1_139
	word32 a2_140
	word32 a5_141
	word32 a7_142
	word32 s3_143
	word32 s4_144
	word32 s5_145
	word32 s6_146
	word32 s7_147
	word32 s8_148
	word32 s9_149
	word32 s10_150
	word32 s11_151
	word32 t4_152
	word32 a0_153
	word32 mstatus_154
	word32 a3_155
	word32 a4_156
	bt_gatt_disconnected(att_reset(printf(ra, 0x23076E8C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_137, out a0_138, out a1_139, out a2_140, out a3_18, out a4_19, out a5_141, out a7_142, out s2_25, out s3_143, out s4_144, out s5_145, out s6_146, out s7_147, out s8_148, out s9_149, out s10_150, out s11_151, out t4_152), a0, a0 + -168<i32>, a3_18, a4_19, s2_25, mstatus, dwLoc10, s0, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg40, dwArg44, dwArg48, dwArg58, dwArg68, ra, dwArg78, dwArg84, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, out s0_47, out a0_153, out s11_50, out mstatus_154), Mem11[s0_47 + -168<i32>:int32], s11_50, dwLoc08, out s0_76, out a3_155, out a4_156)
	Mem96[s0_76 + 3928<i32>:word32] = 0<32>
	return
att_timeout_exit:


void bt_att_encrypt_change(word32 ra, word32 s1, word32 a0, word32 a1, word32 a4, word32 s2, word32 s3, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_att_encrypt_change_entry:
l2302B450:
	branch a1 == 0<32> l2302B45C
l2302B45C:
	word32 a2_19
	word32 a3_20
	word32 s0_26
	word32 s1_27
	word32 ra_25 = bt_gatt_encrypt_change(ra, s11, out s0_26, out s1_27, out a2_19, out a3_20)
	word32 a4_44 = CONVERT(Mem12[s1_27 + 9<i32>:byte], byte, word32)
	branch a4_44 == 1<32> l2302B4EC
l2302B47A:
	word32 a5_46 = Mem12[s0_26 + 156<i32>:int32]
	branch a5_46 == 0<32> l2302B4EC
l2302B480:
	word32 a5_47 = CONVERT(Mem12[a5_46 + 20<i32>:byte], byte, word32)
	branch a5_47 == 0<32> l2302B4EC
l2302B486:
	word32 a3_55
	word32 a5_57
	word32 s1_60
	word32 a1_361
	word32 a4_362
	word32 s2_363
	word32 s3_364
	word32 s4_365
	word32 s8_366
	word32 a0_52
	k_sem_take(s0_26 + 204<i32>, 0xFFFFFFFF<32>, a2_19, a3_20, a4_44, a5_47, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_60, out a0_52, out a1_361, out a3_55, out a4_362, out a5_57, out s2_363, out s3_364, out s4_365, out s8_366)
	word32 s0_67 = Mem12[a5_57:word32]
	branch CONVERT(Mem12[a5_57 + 13<i32>:byte], byte, word32) != 4<32> l2302B4C8
l2302B49E:
	a0_52 = atomic_get(s0_67 + 152<i32>) >> 2<i32> & 1<32>
	branch a0_52 == 0<32> l2302B4C8
l2302B4C8:
	word32 a5_86
	word32 s0_105
	word32 s1_367
	word32 a0_368
	word32 a1_369
	word32 a3_370
	word32 a4_371
	word32 a5_372
	word32 s2_373
	word32 s3_374
	word32 s5_375
	word32 s6_376
	word32 s7_377
	word32 s9_378
	word32 mstatus_379
	bt_l2cap_send_cb(ra_25, s1_60, s1_60, 4<32>, Mem12[a0_52 + 8<i32>:word32], att_cb.isra.3(a0_52, out a5_86), a5_86, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, s1, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_105, out s1_367, out a0_368, out a1_369, out a3_370, out a4_371, out a5_372, out s2_373, out s3_374, out s5_375, out s6_376, out s7_377, out s9_378, out mstatus_379)
	Mem125[Mem82[s0_105 + 156<i32>:int32] + 16<i32>:word32] = 0<32>
l2302B4EC:
	return
l2302B4AC:
	word32 a5_136
	word32 a3_140
	word32 a4_141
	word32 s2_147
	word32 s1_380
	word32 a0_381
	word32 a1_382
	word32 a2_383
	word32 a7_384
	word32 s3_385
	word32 s4_386
	word32 s5_387
	word32 s6_388
	word32 s7_389
	word32 s8_390
	word32 s9_391
	word32 s10_392
	word32 s11_393
	word32 t4_394
	word32 ra_143 = printf(ra_25, 0x23076EEC<32>, a3_55, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_380, out a0_381, out a1_382, out a2_383, out a3_140, out a4_141, out a5_136, out a7_384, out s2_147, out s3_385, out s4_386, out s5_387, out s6_388, out s7_389, out s8_390, out s9_391, out s10_392, out s11_393, out t4_394)
l2302B4C4_thunk_k_sem_give:
	word32 s0_395
	word32 s1_396
	word32 a0_397
	word32 a1_398
	word32 a2_399
	word32 a3_400
	word32 a4_401
	word32 a5_402
	word32 s2_403
	word32 s3_404
	word32 s4_405
	word32 s5_406
	word32 s6_407
	word32 s7_408
	word32 s9_409
	word32 s10_410
	word32 s11_411
	k_sem_give(ra_143, s2_147, a3_140, a4_141, a5_136, mstatus, dwArg14, dwArg18, dwArg60, dwArg64, dwArg88, dwArg94, dwArgAC, dwArg0108, dwArg0148, dwArg0188, out s0_395, out s1_396, out a0_397, out a1_398, out a2_399, out a3_400, out a4_401, out a5_402, out s2_403, out s3_404, out s4_405, out s5_406, out s6_407, out s7_408, out s9_409, out s10_410, out s11_411)
	return
l2302B452:
l2302B458_thunk_att_handle_rsp:
	word32 s0_412
	word32 a0_413
	word32 s11_414
	word32 mstatus_415
	att_handle_rsp(ra, s1, a0, 5<32>, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s0_412, out a0_413, out s11_414, out mstatus_415)
	return
bt_att_encrypt_change_exit:


void att_exec_write_req()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
att_exec_write_req_entry:
l2302B4F8:
	return
att_exec_write_req_exit:


void att_pdu_sent(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg4C, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_req_sent
//      att_cfm_sent
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_pdu_sent_entry:
l2302B4FC:
	word32 s2_20 = bt_l2cap_le_lookup_tx_cid(a0, 4<32>) + 216<i32>
	ra_25 = ra
l2302B516:
	word32 ra_25
	word32 a0_31
	word32 a3_34
	word32 a4_35
	word32 s3_41
	word32 s2_313
	word32 a2_312
	word32 a1_311
	word32 s4_314
	word32 a5_36
	word32 s1_39 = net_buf_get(ra_25, s0, s2_20, 0<32>, a3, a4, mstatus, dwArg08, dwArgB8, dwArgF8, out a0_31, out a1_311, out a2_312, out a3_34, out a4_35, out a5_36, out s2_313, out s3_41, out s4_314)
	branch a0_31 != 0<32> l2302B536
l2302B536:
	word32 s0_52 = Mem30[s1_39 + 156<i32>:int32]
	branch s0_52 == 0<32> l2302B55A
l2302B53C:
	s0_52 = Mem30[a5_36 + 16<i32>:word32]
	branch a5_36 != a0_31 l2302B55A
l2302B542:
	Mem58[s0_52 + 12<i32>:word16] = SLICE(net_buf_simple_headroom(a4_35), word16, 0)
	a5_36 = CONVERT(Mem58[a0_31 + 12<i32>:uint16], uint16, word32)
	Mem60[s0_52 + 14<i32>:word16] = SLICE(a5_36, word16, 0)
l2302B55A:
	word32 a0_72
	word32 s7_335
	word32 a5_333
	word32 s6_334
	word32 s1_332
	ra_25 = att_send(ra_25, s0_52, s1_39, s3_41, 0<32>, a5_36, mstatus, dwLoc30, dwLoc2C, dwLoc14, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg4C, dwArg58, s3, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0, out s1_332, out a0_72, out a3, out a4, out a5_333, out s2_20, out s6_334, out s7_335, out mstatus)
	branch a0_72 != 0<32> l2302B516
l2302B566:
	0<32> = dwArg0128
	return
l2302B522:
	0<32> = dwArg0128
l2302B532_thunk_k_sem_give:
	word32 a1_318
	word32 a0_317
	word32 s0_315
	word32 s11_331
	word32 s9_329
	word32 s10_330
	word32 s6_327
	word32 s7_328
	word32 s4_325
	word32 s5_326
	word32 s2_323
	word32 s3_324
	word32 a4_321
	word32 a5_322
	word32 a2_319
	word32 a3_320
	word32 s1_316
	k_sem_give(ra_25, s1_39 + 204<i32>, a3_34, a4_35, a5_36, mstatus, dwArg14, dwArg18, s1, ra, dwArg88, dwArg94, dwArgAC, dwArg0108, dwArg0148, dwArg0188, out s0_315, out s1_316, out a0_317, out a1_318, out a2_319, out a3_320, out a4_321, out a5_322, out s2_323, out s3_324, out s4_325, out s5_326, out s6_327, out s7_328, out s9_329, out s10_330, out s11_331)
	return
att_pdu_sent_exit:


word32 att_chan_get(word32 ra, word32 a0, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_get_mtu
//      bt_att_create_pdu
//      bt_att_send
//      bt_att_req_send
//      bt_att_req_cancel
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
att_chan_get_entry:
l2302B574:
	word32 a1_102
	word32 a5_105
	word32 s0_14
	word32 a0_20
	word32 a4_104 = CONVERT(Mem7[a0 + 13<i32>:byte], byte, word32)
	branch a4_104 == 4<32> l2302B594
l2302B594:
	word32 a0_12 = bt_l2cap_le_lookup_rx_cid(a0, 4<32>, out a5_105)
	a1_102 = 4<32>
	s0_14 = a0_12
	branch a0_12 != 0<32> l2302B5B4
l2302B5B4:
	branch (atomic_get(a0_12 + 152<i32>) >> 2<i32> & 1<32>) == 0<32> l2302B5AA
l2302B5C2:
	a0_20 = 0x23076E18<32>
l2302B59E:
	word32 a0_153
	word32 a2_154
	word32 a7_155
	word32 s9_156
	word32 t4_157
	ra = printf(ra, 0x23076DF8<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_153, out a1_102, out a2_154, out a3, out a4_104, out a5_105, out a7_155, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9_156, out s10, out s11, out t4_157)
l2302B584:
	a0_20 = 0x2307611C<32>
l2302B58C:
	word32 a0_158
	word32 a2_159
	word32 a7_160
	word32 s9_161
	word32 t4_162
	ra = printf(ra, a0_20, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_158, out a1_102, out a2_159, out a3, out a4_104, out a5_105, out a7_160, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9_161, out s10, out s11, out t4_162)
	s0_14 = 0<32>
l2302B5AA:
	s1Out = s1
	a0Out = s0_14
	a1Out = a1_102
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_104
	a5Out = a5_105
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s10Out = s10
	s11Out = s11
	return ra
att_chan_get_exit:


void att_req_sent(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg4C, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_req_sent_entry:
l2302B5CC:
	word32 s1_30 = a1
	word32 s0_14 = a0
	branch Mem12[bt_l2cap_le_lookup_tx_cid(a0, 4<32>) + 156<i32>:int32] == 0<32> l2302B5F2
l2302B5E4:
	word32 s8_168
	word32 s6_167
	word32 s5_166
	word32 s4_165
	word32 s2_164
	word32 a5_163
	word32 a0_162
	s0_14 = k_delayed_work_submit(0x7000530<32>, a3, a4, mstatus, s0, dwLoc08, dwArg14, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s1_30, out a0_162, out a3, out a4, out a5_163, out s2_164, out s3, out s4_165, out s5_166, out s6_167, out s8_168)
l2302B5F2:
l2302B5FE_thunk_att_pdu_sent:
	att_pdu_sent(ra, s0, s1_30, s0_14, a3, a4, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg4C, dwArg58, ra, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0188)
	return
att_req_sent_exit:


void att_cfm_sent(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg4C, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_rsp_sent
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_cfm_sent_entry:
l2302B602:
	bt_l2cap_le_lookup_tx_cid(a0, 4<32>)
l2302B620_thunk_att_pdu_sent:
	att_pdu_sent(ra, s0, a1, a0, a3, a4, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg4C, dwArg58, ra, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0188)
	return
att_cfm_sent_exit:


void att_rsp_sent(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg4C, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_rsp_sent_entry:
l2302B624:
l2302B624_thunk_att_cfm_sent:
	att_cfm_sent(ra, s0, a0, a1, a3, a4, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg4C, dwArg58, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0188)
	return
att_rsp_sent_exit:


void write_cb(word32 ra, word32 a0, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 tp
// Preserved: s0 sp
write_cb_entry:
l2302B628:
	word32 s0_11 = Mem7[a0:word32]
	word32 a5_103
	word32 a2_101
	word32 a4_102
	word32 a0_17 = bt_gatt_check_perm(a0, a0, 42<i32>, out a2_101, out a4_102, out a5_103)
	Mem24[s0_11 + 20<i32>:byte] = SLICE(a0_17, byte, 0)
	branch a0_17 != 0<32> l2302B698
l2302B64A:
	word32 a5_51
	word32 s0_37
	word32 a0_40
	word32 a6_45
	call Mem24[a0 + 8<i32>:int32] (retsize: 0;)
		uses: a0:a0_17,a1:a0,a3:CONVERT(Mem24[s0_11 + 16<i32>:uint16], uint16, word32),a4:CONVERT(Mem24[s0_11 + 18<i32>:uint16], uint16, word32),a5:CONVERT(CONVERT(Mem24[s0_11 + 8<i32>:byte], byte, word32) <u 1<i32>, bool, word32) << 1<i32>,a6:a6_45,ra:ra,s0:Mem24[a0_17:word32],s1:a0_17,s2:a0
		defs: a0:a0_40,a6:a6_45,s0:s0_37
	branch a0_40 < 0<32> l2302B67E
l2302B67E:
	a5_51 = 0xE<32>
	branch a0_40 >u 1<i32> l2302B694
l2302B68C:
	a5_51 = 0<32> - a0_40 & 255<i32>
l2302B66E:
	branch a0_40 != CONVERT(Mem24[s0_37 + 16<i32>:uint16], uint16, word32) l2302B6A6
l2302B6A6:
	a5_51 = 0xE<32>
l2302B694:
	Mem58[s0_37 + 20<i32>:byte] = SLICE(a5_51, byte, 0)
l2302B676:
	Mem59[s0_37 + 20<i32>:byte] = 0<8>
l2302B698:
	0<32> = dwArg38
	return
write_cb_exit:


void read_cb(word32 ra, word32 a0, word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
read_cb_entry:
l2302B6AA:
	word32 s4_17 = Mem15[a1:int32]
	word32 a1_20 = Mem15[a0 + 8<i32>:word32]
	word32 s3_21 = Mem15[s4_17:int32]
	word32 a1_140
	word32 a5_141
	Mem29[net_buf_simple_add(a0 + 8<32>, 0<32>, a4, out a1_140, out a5_141) + 12<i32>:word32] = a1_20
	Mem30[a1_20 + 16<i32>:byte] = 0<8>
	word32 a2_35
	word32 a4_36
	word32 a5_142
	word32 a0_34 = bt_gatt_check_perm(s3_21, a0, 0x15<32>, out a2_35, out a4_36, out a5_142)
	Mem41[a1_20 + 16<i32>:byte] = SLICE(a0_34, byte, 0)
	branch a0_34 != 0<32> l2302B72A
l2302B6E6:
	word32 s0_43 = Mem41[a4_36 + 8<i32>:word32]
	word32 a5_46 = CONVERT(Mem41[a4_36 + 12<i32>:uint16], uint16, word32)
	word32 s0_58
	word32 a0_64
	word32 a4_66
	call Mem41[a0 + 4<i32>:int32] (retsize: 0;)
		uses: a0:s3_21,a1:a0,a2:a2_35 + a5_46,a3:CONVERT(SLICE(CONVERT(Mem41[s4_17 + 86<i32>:uint16], uint16, word32) - a5_46, word16, 0), word16, word32),a4:CONVERT(Mem41[s0_43 + 4<i32>:uint16], uint16, word32),a5:a5_46,ra:ra,s0:s0_43,s1:a0_34,s2:a0,s3:s3_21,s4:s4_17
		defs: a0:a0_64,a4:a4_66,s0:s0_58
	branch a0_64 >= 0<32> l2302B73C
l2302B73C:
	word32 a5_144
	word32 a1_143
	net_buf_simple_add(a0_64 + 8<32>, a0_64, a4_66, out a1_143, out a5_144)
l2302B710:
	word32 a0_82 = 0xE<32>
	branch a0_64 >u 1<i32> l2302B726
l2302B71E:
	a0_82 = 0<32> - a0_64 & 255<i32>
l2302B726:
	Mem87[s0_58 + 16<i32>:byte] = SLICE(a0_82, byte, 0)
l2302B72A:
	return
read_cb_exit:


word32 bt_att_create_pdu(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg9C, word32 dwArgC8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gatt_notify
//      gatt_indicate
//      bt_gatt_exchange_mtu
//      gatt_read_type_rsp
//      bt_gatt_read
//      bt_gatt_write_without_response_cb
//      gatt_prepare_write_rsp
//      bt_gatt_unsubscribe
//      att_indicate
//      att_mtu_req
//      send_err_rsp.part.7
//      att_read_group_req
//      att_read_mult_req
//      att_read_req
//      att_read_type_req
//      att_find_type_req
//      att_find_info_req
//      att_signed_write_cmd
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s11 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_att_create_pdu_entry:
l2302B748:
	word32 a0_20
	word32 a1_269
	word32 s4_270
	word32 s7_271
	word32 s8_272
	word32 s10_273
	word32 s5_124
	word32 s6_125
	word32 s2_121
	word32 s3_122
	word32 s11_120
	word32 s1_118
	word32 a4_115
	word32 a5_104
	word32 a2_113
	word32 a3_114
	word32 ra_117 = att_chan_get(ra, a0, a3, dwLoc08, dwArg40, dwArg44, s1, dwArg8C, out s1_118, out a0_20, out a1_269, out a2_113, out a3_114, out a4_115, out a5_104, out s2_121, out s3_122, out s4_270, out s5_124, out s6_125, out s7_271, out s8_272, out s10_273, out s11_120)
	word32 s0_155 = a0_20
	branch a0_20 == 0<32> l2302B776
l2302B75C:
	branch CONVERT(Mem13[a0_20 + 86<i32>:uint16], uint16, word32) >=u a2 + 1<32> l2302B782
l2302B782:
	word32 a2_48
	word32 a4_44
	word32 a0_43 = att_op_get_type(s1_118, out a4_44)
	word32 a5_46 = 2<32>
	branch a0_43 == 2<32> l2302B796
l2302B78E:
	a5_46 = 4<32>
	a2_48 = 0xFFFFFFFF<32>
	branch a0_43 != 4<32> l2302B79C
l2302B796:
	a2_48 = 0x7000530<32>
l2302B79C:
	ra_117 = bt_l2cap_create_pdu_timeout(ra_117, 0<32>, a2_48, a3_114, a4_44, a5_46, s5_124, mstatus, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg74, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1_118, out a2_113, out a3_114, out a4_115, out s2_121, out s3_122, out s5_124, out s6_125, out s11_120, out mstatus)
	s0_155 = 0<32>
	branch false l2302B7B8
l2302B7B8:
	word32 a1_283
	Mem105[net_buf_simple_add(8<32>, 1<32>, a4_115, out a1_283, out a5_104):byte] = SLICE(s1_118, byte, 0)
l2302B7A8:
	word32 a0_284
	word32 a1_285
	word32 a7_286
	word32 s4_287
	word32 s7_288
	word32 s8_289
	word32 s9_290
	word32 s10_291
	word32 t4_292
	ra_117 = printf(ra_117, 0x23075164<32>, a3_114, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_118, out a0_284, out a1_285, out a2_113, out a3_114, out a4_115, out a5_104, out a7_286, out s2_121, out s3_122, out s4_287, out s5_124, out s6_125, out s7_288, out s8_289, out s9_290, out s10_291, out s11_120, out t4_292)
l2302B768:
	word32 a0_274
	word32 a1_275
	word32 a7_276
	word32 s4_277
	word32 s7_278
	word32 s8_279
	word32 s9_280
	word32 s10_281
	word32 t4_282
	ra_117 = printf(ra_117, 0x23076EC4<32>, a3_114, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_118, out a0_274, out a1_275, out a2_113, out a3_114, out a4_115, out a5_104, out a7_276, out s2_121, out s3_122, out s4_277, out s5_124, out s6_125, out s7_278, out s8_279, out s9_280, out s10_281, out s11_120, out t4_282)
	s0_155 = 0<32>
l2302B776:
	s0Out = s0_155
	s1Out = s1_118
	a0Out = s0_155
	a2Out = a2_113
	a3Out = a3_114
	a4Out = a4_115
	a5Out = a5_104
	s2Out = s2_121
	s3Out = s3_122
	s4Out = dwArg04
	s5Out = s5_124
	s6Out = s6_125
	s11Out = s11_120
	mstatusOut = mstatus
	return ra_117
bt_att_create_pdu_exit:


void att_indicate(word32 ra, word32 s0, word32 a5, word32 s6, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_indicate_entry:
l2302B7C6:
	word32 s0_28
	word32 s1_29
	word32 a3_36
	word32 mstatus_52
	word32 a5_61
	word32 s0_64
	word32 s1_65
	word32 a0_79
	word32 mstatus_81
	word32 a1_188
	word32 a4_189
	word32 a2_190
	word32 a3_191
	word32 a4_192
	word32 s2_193
	word32 s3_194
	word32 s4_195
	word32 s5_196
	word32 s6_197
	word32 s11_198
	word32 ra_63 = bt_att_create_pdu(bt_gatt_notification(ra, s0, s0, net_buf_simple_pull_le16(a5, out a1_188, out a4_189), dwArg44, CONVERT(Mem11[Mem11[dwArg44 + 8<i32>:word32] + 12<i32>:uint16], uint16, word32), s6, mstatus, out s0_28, out s1_29, out a3_36, out mstatus_52), s1_29, s0_28, 0<32>, a3_36, mstatus_52, dwLoc18, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, ra, dwArg7C, dwArgA8, dwArgC8, out s0_64, out s1_65, out a0_79, out a2_190, out a3_191, out a4_192, out a5_61, out s2_193, out s3_194, out s4_195, out s5_196, out s6_197, out s11_198, out mstatus_81)
	branch a0_79 == 0<32> l2302B808
l2302B7F4:
	word32 s0_199
	word32 s1_200
	word32 a0_201
	word32 a1_202
	word32 a3_203
	word32 a4_204
	word32 a5_205
	word32 s2_206
	word32 s3_207
	word32 s5_208
	word32 s6_209
	word32 s7_210
	word32 s9_211
	word32 mstatus_212
	bt_l2cap_send_cb(ra_63, s1_65, s0_64, 4<32>, a0_79, 0x2302B602<32>, a5_61, mstatus_81, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_199, out s1_200, out a0_201, out a1_202, out a3_203, out a4_204, out a5_205, out s2_206, out s3_207, out s5_208, out s6_209, out s7_210, out s9_211, out mstatus_212)
l2302B808:
	return
att_indicate_exit:


void att_mtu_req(word32 ra, word32 s1, word32 a0, word32 a3, word32 a5, word32 s2, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_mtu_req_entry:
l2302B812:
	branch (CONVERT(Mem11[a5 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem11[a5:byte], byte, word32)) <=u 0x16<32> l2302B894
l2302B894:
l2302B830:
	word32 a4_31
	word32 s1_36
	word32 s2_39
	word32 a0_50
	word32 mstatus_52
	word32 s11_230
	word32 s6_229
	word32 s5_228
	word32 s4_227
	word32 s3_226
	word32 a5_225
	word32 a3_224
	word32 a2_223
	word32 s0_222
	word32 ra_34 = bt_att_create_pdu(ra, a0, Mem11[a0:int32], 2<32>, a3, mstatus, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg7C, dwArgA8, dwArgC8, out s0_222, out s1_36, out a0_50, out a2_223, out a3_224, out a4_31, out a5_225, out s2_39, out s3_226, out s4_227, out s5_228, out s6_229, out s11_230, out mstatus_52)
	branch a0_50 == 0<32> l2302B888
l2302B846:
	word32 a5_232
	word32 a1_231
	word32 a0_62 = net_buf_simple_add(a0_50 + 8<i32>, 2<32>, a4_31, out a1_231, out a5_232)
	Mem68[a0_62:byte] = 0xF7<8>
	Mem69[a0_62 + 1<i32>:byte] = 0<8>
	word32 s0_84
	word32 s1_85
	word32 s6_241
	word32 s7_242
	word32 s9_243
	word32 s5_240
	word32 s3_239
	word32 s2_238
	word32 a5_237
	word32 a4_236
	word32 a3_235
	word32 a1_234
	word32 a0_233
	word32 mstatus_244
	bt_l2cap_send_cb(ra_34, s1_36, s2_39, 4<32>, a0_50, 0x2302B624<32>, 0xFFFFFFF7<32>, mstatus_52, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, s1, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_84, out s1_85, out a0_233, out a1_234, out a3_235, out a4_236, out a5_237, out s2_238, out s3_239, out s5_240, out s6_241, out s7_242, out s9_243, out mstatus_244)
	word32 a5_104 = s0_84
	branch s0_84 <=u 247<i32> l2302B87E
l2302B87A:
	a5_104 = 247<i32>
l2302B87E:
	Mem108[s1_85 + 66<i32>:word16] = SLICE(a5_104, word16, 0)
	Mem109[s1_85 + 86<i32>:word16] = SLICE(a5_104, word16, 0)
l2302B888:
	return
att_mtu_req_exit:


void send_err_rsp.part.7(word32 ra, word32 a0, word32 a3, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg6C, word32 dwArg74, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0100, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_att_recv
//      att_read_group_req
//      att_read_mult_req
//      att_read_req
//      att_read_type_req
//      att_find_type_req
//      att_find_info_req
//      att_signed_write_cmd
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
send_err_rsp.part.7_entry:
l2302B898:
	word32 a4_28
	word32 s0_32
	word32 s1_33
	word32 s2_36
	word32 s3_37
	word32 a0_47
	word32 mstatus_49
	word32 a2_185
	word32 a3_186
	word32 a5_187
	word32 s4_188
	word32 s5_189
	word32 s6_190
	word32 s11_191
	word32 ra_31 = bt_att_create_pdu(ra, a0, a0, 4<32>, a3, mstatus, dwLoc28, dwArg00, dwArg04, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, s3, dwArg6C, dwArg98, dwArgB8, out s0_32, out s1_33, out a0_47, out a2_185, out a3_186, out a4_28, out a5_187, out s2_36, out s3_37, out s4_188, out s5_189, out s6_190, out s11_191, out mstatus_49)
	branch a0_47 == 0<32> l2302B8F4
l2302B8F4:
	0<32> = dwArg0128
	return
l2302B8B6:
	word32 a5_65
	word32 a1_192
	word32 a0_63 = net_buf_simple_add(a0_47 + 8<32>, 4<32>, a4_28, out a1_192, out a5_65)
	Mem66[a0_63 + 1<i32>:byte] = SLICE(s0_32, byte, 0)
	Mem68[a0_63:byte] = SLICE(s3_37, byte, 0)
	Mem69[a0_63 + 2<i32>:byte] = SLICE(s0_32 >>u 8<i32>, byte, 0)
	Mem70[a0_63 + 3<i32>:byte] = SLICE(s2_36, byte, 0)
	0<32> = dwArg0128
l2302B8F0_thunk_bt_l2cap_send_cb:
	word32 s0_193
	word32 s1_194
	word32 a0_195
	word32 a1_196
	word32 a3_197
	word32 a4_198
	word32 a5_199
	word32 s2_200
	word32 s3_201
	word32 s5_202
	word32 s6_203
	word32 s7_204
	word32 s9_205
	word32 mstatus_206
	bt_l2cap_send_cb(ra_31, s1_33, s1_33, 4<32>, dwArg0100, 0x2302B624<32>, a5_65, mstatus_49, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, a0_47, dwArg58, dwArg74, dwArg7C, dwArg88, dwArg8C, dwArgA4, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_193, out s1_194, out a0_195, out a1_196, out a3_197, out a4_198, out a5_199, out s2_200, out s3_201, out s5_202, out s6_203, out s7_204, out s9_205, out mstatus_206)
	return
send_err_rsp.part.7_exit:


void bt_att_recv(word32 ra, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_att_recv_entry:
l2302B902:
	word32 sp_161 = fp + -48<i32>
	branch CONVERT(Mem15[a1 + 12<i32>:uint16], uint16, word32) != 0<32> l2302B934
l2302B934:
	word32 a4_328
	word32 a0_23 = net_buf_simple_pull_mem(a1 + 8<i32>, 1<32>, out a4_328)
	word32 a2_27 = CONVERT(Mem15[a0_23:byte], byte, word32)
	word32 a4_29 = 0x23076F80<32>
	word32 a5_31 = 0<32>
	word32 s0_139 = 0x23076F80<32>
l2302B958:
	word32 a3_113
	word32 ra_124
	word32 s3_129
	word32 s4_130
	branch CONVERT(Mem15[a4_29:byte], byte, word32) != a2_27 l2302B998
l2302B998:
	a5_31 = a5_31 + 1<32>
	a4_29 = a4_29 + 8<32>
	branch a5_31 != 0x1C<32> l2302B958
l2302B9A0:
	word32 s1_364
	word32 a0_365
	word32 a1_366
	word32 a2_367
	word32 a3_368
	word32 a4_369
	word32 a5_370
	word32 a7_371
	word32 s2_372
	word32 s5_373
	word32 s6_374
	word32 s7_375
	word32 s8_376
	word32 s9_377
	word32 s10_378
	word32 s11_379
	word32 t4_380
	ra_124 = printf(ra, 0x23076F1C<32>, 0x1C<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_364, out a0_365, out a1_366, out a2_367, out a3_368, out a4_369, out a5_370, out a7_371, out s2_372, out s3_129, out s4_130, out s5_373, out s6_374, out s7_375, out s8_376, out s9_377, out s10_378, out s11_379, out t4_380)
	word32 a1_69 = CONVERT(Mem15[s3_129:byte], byte, word32)
	word32 a4_381
	branch att_op_get_type(a1_69, out a4_381) == 0<32> l2302B922
l2302B9BE:
	a3_113 = 6<32>
	branch a1_69 == 0<32> l2302B922
l2302B960:
	word32 s1_125
	word32 s1_77 = a5_31 << 3<u32>
	branch CONVERT(Mem15[a1 + 12<i32>:uint16], uint16, word32) >=u CONVERT(Mem15[s1_77 + 0x23076F81<32>:byte], byte, word32) l2302B9CE
l2302B9CE:
	word32 a0_97
	word32 a6_248
	word32 t1_249
	word32 t5_250
	word32 t6_251
	call Mem15[s1_77 + 0x23076F84<32>:word32] (retsize: 0;)
		uses: a0:a0,a1:a1,a3:a0_97,a6:a6_248,mstatus:mstatus,ra:ra,s0:0x23076F80<32>,s1:s1_77,s2:a1,s3:a0_23,s4:a0,Stack +0008:dwLoc28,Stack +0028:dwLoc08,Stack +0064:dwArg34,Stack +0070:dwArg40,Stack +0074:dwArg44,Stack +0098:dwArg68,Stack +00BC:dwArg8C,t1:t1_249,t5:t5_250,t6:t6_251
		defs: a0:a0_97,a6:a6_248,ra:ra_89,s0:s0_90,s1:s1_91,s3:s3_93,s4:s4_94,sp:sp_88,t1:t1_249,t5:t5_250,t6:t6_251
	a3_113 = a0_97
l2302B974:
	word32 a3_351
	word32 a2_350
	word32 a0_348
	word32 a1_349
	word32 a4_352
	word32 a5_353
	word32 a7_354
	word32 s2_355
	word32 s5_356
	word32 s6_357
	word32 s7_358
	word32 s8_359
	word32 s9_360
	word32 s10_361
	word32 s11_362
	word32 t4_363
	ra_124 = printf(ra, 0x23075644<32>, 0x1C<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_125, out a0_348, out a1_349, out a2_350, out a3_351, out a4_352, out a5_353, out a7_354, out s2_355, out s3_129, out s4_130, out s5_356, out s6_357, out s7_358, out s8_359, out s9_360, out s10_361, out s11_362, out t4_363)
	a3_113 = 4<32>
l2302B982:
	branch CONVERT(Mem15[s0_139 + s1_125 + 2<i32>:byte], byte, word32) != 1<32> l2302B922
l2302B98E:
	branch a3_113 == 0<32> l2302B922
l2302B990:
	branch CONVERT(Mem15[s3_129:byte], byte, word32) == 0<32> l2302B922
l2302B996:
l2302B9C2:
	send_err_rsp.part.7(ra_124, Mem150[s4_130:int32], a3_113, s3_129, mstatus, Mem150[sp_161:word32], Mem150[sp_161 + 4<i32>:word32], Mem150[sp_161 + 16<i32>:word32], Mem150[sp_161 + 20<i32>:word32], Mem150[sp_161 + 32<i32>:word32], Mem150[sp_161 + 36<i32>:word32], Mem150[sp_161 + 40<i32>:word32], Mem150[sp_161 + 48<i32>:word32], Mem150[sp_161 + 52<i32>:word32], Mem150[sp_161 + 64<i32>:word32], Mem150[sp_161 + 68<i32>:word32], Mem150[sp_161 + 72<i32>:word32], Mem150[sp_161 + 76<i32>:word32], Mem150[sp_161 + 88<i32>:word32], Mem150[sp_161 + 108<i32>:word32], Mem150[sp_161 + 116<i32>:word32], Mem150[sp_161 + 124<i32>:word32], Mem150[sp_161 + 136<i32>:word32], Mem150[sp_161 + 140<i32>:word32], Mem150[sp_161 + 152<i32>:word32], Mem150[sp_161 + 164<i32>:word32], Mem150[sp_161 + 168<i32>:word32], Mem150[sp_161 + 184<i32>:word32], Mem150[sp_161 + 200<i32>:word32], Mem150[sp_161 + 216<i32>:word32], Mem150[sp_161 + 232<i32>:word32], Mem150[sp_161 + 248<i32>:word32], Mem150[sp_161 + 256<i32>:word32], Mem150[sp_161 + 264<i32>:word32], Mem150[sp_161 + 280<i32>:word32], Mem150[sp_161 + 296<i32>:word32], Mem150[sp_161 + 312<i32>:word32], Mem150[sp_161 + 328<i32>:word32], Mem150[sp_161 + 344<i32>:word32])
l2302B916:
	word32 s9_344
	word32 s11_346
	word32 t4_347
	word32 s10_345
	word32 s5_340
	word32 s7_342
	word32 s8_343
	word32 s6_341
	word32 a7_336
	word32 s3_338
	word32 s4_339
	word32 s2_337
	word32 a2_332
	word32 a4_334
	word32 a5_335
	word32 a3_333
	word32 a0_330
	word32 a1_331
	word32 s1_329
	printf(ra, 0x23076EFC<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_329, out a0_330, out a1_331, out a2_332, out a3_333, out a4_334, out a5_335, out a7_336, out s2_337, out s3_338, out s4_339, out s5_340, out s6_341, out s7_342, out s8_343, out s9_344, out s10_345, out s11_346, out t4_347)
l2302B922:
	0<32> = dwArg0128
	return
bt_att_recv_exit:


void att_read_group_req(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_group_req_entry:
l2302B9DA:
	word32 a2_22 = CONVERT(Mem17[a1 + 12<i32>:byte], byte, word32) + 0xFFFFFFFC<32> & 255<i32>
	branch a2_22 == 2<32> l2302BA02
l2302B9FA:
	branch a2_22 != 0x10<32> l2302BAC6
l2302BA02:
	word32 s5_30 = Mem17[a0:int32]
	word32 a4_658
	word32 a0_37 = net_buf_simple_pull_mem(a1 + 8<i32>, 4<32>, out a4_658)
	word32 s0_45 = CONVERT(Mem36[a0_37 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem36[a0_37:byte], byte, word32)
	word32 s2_52 = CONVERT(Mem36[a0_37 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem36[a0_37 + 2<i32>:byte], byte, word32)
	word32 a3_659
	branch bt_uuid_create(fp + -72<i32>, a0_37 + 4<i32>, a2_22, out a3_659) == 0<32> l2302BAC6
l2302BA44:
	word32 a3_113
	word32 dwLoc50_385
	word32 dwLoc4C_390
	branch s0_45 == 0<32> l2302BADC
l2302BA46:
	branch s2_52 == 0<32> l2302BADA
l2302BADA:
l2302BA4A:
	branch s2_52 <u s0_45 l2302BADC
l2302BADC:
	a3_113 = 1<32>
l2302BA4E:
	word32 a0_76
	word32 s8_666
	word32 a6_665
	word32 a5_664
	word32 a1_660
	word32 a2_661
	word32 a3_662
	word32 a4_663
	bt_uuid_cmp(fp + -72<i32>, fp + -80<i32>, out a0_76, out a1_660, out a2_661, out a3_662, out a4_663, out a5_664, out a6_665, out s8_666)
	word32 s1_184 = 0x3000000<32>
	dwLoc50_385 = SEQ(0xF800<16>, bLoc4F, 0<8>) (alias)
	branch a0_76 != 0<32> l2302BAEC
l2302BAEC:
	word32 a0_97
	word32 a6_672
	word32 s8_673
	word32 a5_671
	word32 a4_670
	word32 a3_669
	word32 a2_668
	word32 a1_667
	bt_uuid_cmp(fp + -72<i32>, fp + -76<i32>, out a0_97, out a1_667, out a2_668, out a3_669, out a4_670, out a5_671, out a6_672, out s8_673)
	s1_184 = 0x2FFF801<32>
	dwLoc4C_390 = SEQ(0xF801<16>, bLoc4B, 0<8>) (alias)
	branch a0_97 == 0<32> l2302BA66
l2302BB02:
	a3_113 = 0x10<32>
l2302BADE:
	send_err_rsp.part.7(ra, s5_30, a3_113, a0, mstatus, dwLoc60, dwLoc5C, dwLoc50_385, dwLoc4C_390, dwLoc40, s4, s2, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwLoc08, dwArg0C, dwArg14, dwArg1C, dwArg28, dwArg2C, dwArg38, s3, s1, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA0, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8)
l2302BA66:
	word32 a3_175
	word32 a4_189
	word32 s0_193
	word32 s11_196
	word32 s2_197
	word32 a0_208
	word32 mstatus_210
	word32 s6_687
	word32 s3_684
	word32 s5_686
	word32 s4_685
	word32 a2_681
	word32 a5_683
	word32 a3_682
	word32 a4_678
	word32 s1_680
	word32 a5_679
	word32 a0_675
	word32 a2_677
	word32 a1_676
	word32 t1_674
	word32 ra_192 = bt_att_create_pdu(memset(ra, fp + -52<i32>, 0<32>, 0x14<32>, out t1_674, out a0_675, out a1_676, out a2_677, out a3_175, out a4_678, out a5_679), s1_184, Mem165[a0:int32], 1<32>, a3_175, mstatus, dwLoc58, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg2C, dwArg3C, dwArg68, dwArg88, out s0_193, out s1_680, out a0_208, out a2_681, out a3_682, out a4_189, out a5_683, out s2_197, out s3_684, out s4_685, out s5_686, out s6_687, out s11_196, out mstatus_210)
	branch a0_208 == 0<32> l2302BAC6
l2302BA84:
	word32 a5_689
	word32 a1_688
	Mem226[net_buf_simple_add(a0_208 + 8<32>, 1<32>, a4_189, out a1_688, out a5_689):byte] = 0<8>
	word32 a1_233
	word32 a2_234
	word32 a4_236
	word32 a5_237
	word32 s5_248
	word32 s2_693
	word32 s11_695
	word32 s4_694
	word32 s0_690
	word32 a0_692
	word32 s1_691
	word32 ra_240 = bt_gatt_foreach_attr(ra_192, s0_193, s2_197, 0x2302AB66<32>, fp + -52<i32>, s11_196, out s0_690, out s1_691, out a0_692, out a1_233, out a2_234, out a4_236, out a5_237, out s2_693, out s4_694, out s5_248, out s11_695)
	word32 s1_261 = CONVERT(Mem231[a5_237:byte], byte, word32)
	branch s1_261 != 0<32> l2302BB06
l2302BB06:
	word32 s9_708
	word32 mstatus_709
	word32 s5_705
	word32 s7_707
	word32 s6_706
	word32 a5_702
	word32 s3_704
	word32 s2_703
	word32 a1_699
	word32 a4_701
	word32 a3_700
	word32 s0_696
	word32 a0_698
	word32 s1_697
	bt_l2cap_send_cb(ra_240, s1_261, s5_248, 4<32>, a2_234, 0x2302B624<32>, a5_237, mstatus_210, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc18, dwLoc0C, dwLoc08, dwArg14, dwArg1C, dwArg28, dwArg2C, s3, s1, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s0_696, out s1_697, out a0_698, out a1_699, out a3_700, out a4_701, out a5_702, out s2_703, out s3_704, out s5_705, out s6_706, out s7_707, out s9_708, out mstatus_709)
l2302BAE8:
l2302BAB4:
	word32 mstatus_306
	word32 s3_311
	word32 s5_313
	word32 s8_720
	word32 s2_717
	word32 s6_719
	word32 s4_718
	word32 a3_714
	word32 a5_716
	word32 a4_715
	word32 s1_711
	word32 a1_713
	word32 a0_712
	word32 s0_710
	send_err_rsp.part.7(net_buf_unref(ra_240, s1_261, a2_234, a1_233, a4_236, mstatus_210, dwLoc60, dwLoc5C, dwLoc58, s2, dwArg18, a2_22, a0_208, s3, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0118, out s0_710, out s1_711, out a0_712, out a1_713, out a3_714, out a4_715, out a5_716, out s2_717, out s3_311, out s4_718, out s5_313, out s6_719, out s8_720, out mstatus_306), s5_313, 0xA<32>, s3_311, mstatus_306, dwLoc60, dwLoc5C, dwLoc50_385, dwLoc4C_390, dwLoc40, s4, s2, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwLoc08, dwArg0C, dwArg14, dwArg1C, dwArg28, dwArg2C, a0_208, s3, s1, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA0, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8)
l2302BAC6:
	return
att_read_group_req_exit:


void att_read_mult_req(word32 ra, word32 s0, word32 s1, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_mult_req_entry:
l2302BB1A:
	word32 a3_28
	word32 s1_46
	word32 a0_60
	word32 mstatus_62
	word32 s6_396
	word32 s5_395
	word32 s4_394
	word32 s3_393
	word32 a5_392
	word32 a4_391
	word32 a3_390
	word32 a5_389
	word32 a4_388
	word32 a2_387
	word32 a1_386
	word32 a0_385
	word32 t1_384
	word32 s2_106
	word32 s11_105
	word32 s0_102
	word32 a2_188
	word32 ra_101 = bt_att_create_pdu(memset(ra, fp + -52<i32>, 0<32>, 0x14<32>, out t1_384, out a0_385, out a1_386, out a2_387, out a3_28, out a4_388, out a5_389), Mem17[s0:word32], s0, 0<32>, a3_28, mstatus, dwLoc38, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, ra, dwArg88, dwArgA8, out s0_102, out s1_46, out a0_60, out a2_188, out a3_390, out a4_391, out a5_392, out s2_106, out s3_393, out s4_394, out s5_395, out s6_396, out s11_105, out mstatus_62)
	branch a0_60 == 0<32> l2302BBB8
l2302BBB8:
l2302BB48:
	word32 s1_103 = 1<32>
	word32 s5_109 = 0x2302B000<32>
l2302BB54:
	word32 a5_75 = CONVERT(Mem74[s2_106 + 12<i32>:uint16], uint16, word32)
	branch s1_103 <u a5_75 l2302BB72
l2302BB72:
	word32 a4_398
	word32 a1_397
	word32 a0_79 = net_buf_simple_pull_le16(a5_75, out a1_397, out a4_398)
	byte bLoc24_255 = SLICE(s1_103, byte, 0)
	word32 a0_93
	word32 a1_94
	word32 a4_97
	word32 a5_399
	word32 s4_400
	ra_101 = bt_gatt_foreach_attr(ra_101, a0_79, a0_79, s5_109 + 1706<i32>, fp + -52<i32>, s11_105, out s0_102, out s1_103, out a0_93, out a1_94, out a2_188, out a4_97, out a5_399, out s2_106, out s4_400, out s5_109, out s11_105)
	branch CONVERT(bLoc24_255, byte, word32) == 0<32> l2302BB54
l2302BB90:
	word32 mstatus_131
	word32 s0_133
	word32 s3_136
	word32 s1_415
	word32 a0_416
	word32 a1_417
	word32 a3_418
	word32 a4_419
	word32 a5_420
	word32 s2_421
	word32 s4_422
	word32 s5_423
	word32 s6_424
	word32 s8_425
	send_err_rsp.part.7(net_buf_unref(ra_101, s1_103, a0_93, a1_94, a4_97, mstatus_62, dwLoc40, dwLoc3C, dwLoc38, dwLoc18, dwArg38, s1_46, s1, dwArg64, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s0_133, out s1_415, out a0_416, out a1_417, out a3_418, out a4_419, out a5_420, out s2_421, out s3_136, out s4_422, out s5_423, out s6_424, out s8_425, out mstatus_131), s0_133, CONVERT(bLoc24_255, byte, word32), s3_136, mstatus_131, dwLoc40, dwLoc3C, dwLoc30, s4, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg2C, dwArg34, dwArg3C, a0_60, dwArg4C, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118)
l2302BB5C:
	word32 s0_401
	word32 s1_402
	word32 a0_403
	word32 a1_404
	word32 a3_405
	word32 a4_406
	word32 a5_407
	word32 s2_408
	word32 s3_409
	word32 s5_410
	word32 s6_411
	word32 s7_412
	word32 s9_413
	word32 mstatus_414
	bt_l2cap_send_cb(ra_101, s1_103, s0_102, 4<32>, a2_188, 0x2302B624<32>, a5_75, mstatus_62, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg3C, a0_60, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_401, out s1_402, out a0_403, out a1_404, out a3_405, out a4_406, out a5_407, out s2_408, out s3_409, out s5_410, out s6_411, out s7_412, out s9_413, out mstatus_414)
l2302BBA4:
l2302BBA6:
	return
att_read_mult_req_exit:


void att_read_rsp(word32 ra, word32 s1, word32 a3, word32 s4, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_read_blob_req
//      att_read_req
// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s6:[16..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_rsp_entry:
l2302BBBC:
	word16 wLoc2E_268 = SLICE(s6, word16, 16)
	branch bt_gatt_change_aware() == 0<32> l2302BC3E
l2302BBE6:
	branch a3 == 0<32> l2302BC3E
l2302BBEC:
	word32 a3_41
	word32 s0_58
	word32 s11_61
	word32 s2_62
	word32 s3_63
	word32 s5_65
	word32 a0_73
	word32 mstatus_75
	word32 t1_321
	word32 a0_322
	word32 a1_323
	word32 a2_324
	word32 a4_325
	word32 a5_326
	word32 s1_327
	word32 a2_328
	word32 a3_329
	word32 a4_330
	word32 a5_331
	word32 s4_332
	word32 s6_333
	word32 ra_57 = bt_att_create_pdu(memset(ra, fp + -52<i32>, 0<32>, 0x14<32>, out t1_321, out a0_322, out a1_323, out a2_324, out a3_41, out a4_325, out a5_326), s1, s1, 0<32>, a3_41, mstatus, dwLoc38, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, ra, dwArg88, dwArgA8, out s0_58, out s1_327, out a0_73, out a2_328, out a3_329, out a4_330, out a5_331, out s2_62, out s3_63, out s4_332, out s5_65, out s6_333, out s11_61, out mstatus_75)
	branch a0_73 == 0<32> l2302BC68
l2302BC68:
l2302BC04:
	byte bLoc24_249 = SLICE(s0_58, byte, 0)
	word32 a1_91
	word32 a2_92
	word32 a4_94
	word32 a5_95
	word32 s1_100
	word32 s0_334
	word32 a0_335
	word32 s2_336
	word32 s4_337
	word32 s5_338
	word32 s11_339
	word32 ra_98 = bt_gatt_foreach_attr(ra_57, s2_62, s2_62, 0x2302B6AA<32>, fp + -52<i32>, s11_61, out s0_334, out s1_100, out a0_335, out a1_91, out a2_92, out a4_94, out a5_95, out s2_336, out s4_337, out s5_338, out s11_339)
	word32 dwLoc30_269 = SEQ(wLoc2E_268, SLICE(s5_65, word16, 0))
	branch CONVERT(bLoc24_249, byte, word32) == 0<32> l2302BC54
l2302BC54:
	word32 s0_351
	word32 s1_352
	word32 a0_353
	word32 a1_354
	word32 a3_355
	word32 a4_356
	word32 a5_357
	word32 s2_358
	word32 s3_359
	word32 s5_360
	word32 s6_361
	word32 s7_362
	word32 s9_363
	word32 mstatus_364
	bt_l2cap_send_cb(ra_98, s1_100, s1_100, 4<32>, a2_92, 0x2302B624<32>, a5_95, mstatus_75, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg3C, a0_73, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_351, out s1_352, out a0_353, out a1_354, out a3_355, out a4_356, out a5_357, out s2_358, out s3_359, out s5_360, out s6_361, out s7_362, out s9_363, out mstatus_364)
l2302BC28:
	word32 mstatus_162
	word32 s1_165
	word32 s3_167
	word32 s0_340
	word32 a0_341
	word32 a1_342
	word32 a3_343
	word32 a4_344
	word32 a5_345
	word32 s2_346
	word32 s4_347
	word32 s5_348
	word32 s6_349
	word32 s8_350
	send_err_rsp.part.7(net_buf_unref(ra_98, s1_100, a2_92, a1_91, a4_94, mstatus_75, dwLoc40, dwLoc3C, dwLoc38, dwLoc18, dwArg38, s3_63, s1, dwArg64, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s0_340, out s1_165, out a0_341, out a1_342, out a3_343, out a4_344, out a5_345, out s2_346, out s3_167, out s4_347, out s5_348, out s6_349, out s8_350, out mstatus_162), s1_165, CONVERT(bLoc24_249, byte, word32), s3_167, mstatus_162, dwLoc40, dwLoc3C, dwLoc30_269, s4, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg2C, dwArg34, dwArg3C, a0_73, dwArg4C, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118)
l2302BC3E:
	0<32> = dwArg0198
	return
att_read_rsp_exit:


void att_read_blob_req(word32 ra, word32 s1, word32 a5, word32 s4, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_blob_req_entry:
l2302BC6C:
	word32 a3_14 = CONVERT(Mem0[a5:byte], byte, word32) | CONVERT(Mem0[a5 + 1<i32>:byte], byte, word32) << 8<i32>
l2302BC8A_thunk_att_read_rsp:
	att_read_rsp(ra, s1, a3_14, s4, s6, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0198)
	return
att_read_blob_req_exit:


void att_read_req(word32 ra, word32 s1, word32 a5, word32 s4, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_req_entry:
l2302BC8E:
	word32 a3_12 = CONVERT(Mem0[a5:byte], byte, word32) | CONVERT(Mem0[a5 + 1<i32>:byte], byte, word32) << 8<i32>
l2302BCA2_thunk_att_read_rsp:
	att_read_rsp(ra, s1, a3_12, s4, s6, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0198)
	return
att_read_req_exit:


void att_read_type_req(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_type_req_entry:
l2302BCA6:
	word32 a2_22 = CONVERT(Mem17[a1 + 12<i32>:byte], byte, word32) + 0xFFFFFFFC<32> & 255<i32>
	branch a2_22 == 2<32> l2302BCCE
l2302BCC6:
	branch a2_22 != 0x10<32> l2302BD36
l2302BCCE:
	word32 s4_213 = Mem17[a0:int32]
	word32 a4_494
	word32 a0_37 = net_buf_simple_pull_mem(a1 + 8<i32>, 4<32>, out a4_494)
	word32 s0_45 = CONVERT(Mem36[a0_37 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem36[a0_37:byte], byte, word32)
	word32 s2_52 = CONVERT(Mem36[a0_37 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem36[a0_37 + 2<i32>:byte], byte, word32)
	word32 s3_212 = a0
	word32 a3_495
	branch bt_uuid_create(fp + -76<i32>, a0_37 + 4<i32>, a2_22, out a3_495) == 0<32> l2302BD36
l2302BD10:
	word32 a3_224
	branch s0_45 == 0<32> l2302BD4C
l2302BD12:
	branch s2_52 == 0<32> l2302BD4A
l2302BD4A:
l2302BD16:
	branch s2_52 <u s0_45 l2302BD4C
l2302BD4C:
	a3_224 = 1<32>
l2302BD1A:
	word32 a3_78
	word32 a4_92
	word32 s0_96
	word32 s11_99
	word32 s2_100
	word32 s3_101
	word32 a0_111
	word32 mstatus_113
	word32 s5_507
	word32 s6_508
	word32 a5_505
	word32 s4_506
	word32 a2_503
	word32 a3_504
	word32 a5_501
	word32 s1_502
	word32 a4_500
	word32 t1_496
	word32 a0_497
	word32 a1_498
	word32 a2_499
	word32 ra_95 = bt_att_create_pdu(memset(ra, fp + -56<i32>, 0<32>, 0x18<32>, out t1_496, out a0_497, out a1_498, out a2_499, out a3_78, out a4_500, out a5_501), 0xE<32>, Mem36[a0:int32], 1<32>, a3_78, mstatus, dwLoc58, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg2C, dwArg3C, dwArg68, dwArg88, out s0_96, out s1_502, out a0_111, out a2_503, out a3_504, out a4_92, out a5_505, out s2_100, out s3_101, out s4_506, out s5_507, out s6_508, out s11_99, out mstatus_113)
	branch a0_111 != 0<32> l2302BD5C
l2302BD5C:
	word32 a1_509
	word32 a5_510
	word32 a0_123 = net_buf_simple_add(a0_111 + 8<32>, 1<32>, a4_92, out a1_509, out a5_510)
	Mem128[a0_123:byte] = 0<8>
	dwLoc4C = s3_101
	dwArg38 = a0_123
	word32 a1_136
	word32 a2_137
	word32 a4_139
	word32 a5_140
	word32 s4_150
	word32 s5_515
	word32 s11_516
	word32 s1_512
	word32 s2_514
	word32 a0_513
	word32 s0_511
	word32 ra_143 = bt_gatt_foreach_attr(ra_95, s0_96, s2_100, 0x2302AC88<32>, fp + -56<i32>, s11_99, out s0_511, out s1_512, out a0_513, out a1_136, out a2_137, out a4_139, out a5_140, out s2_514, out s4_150, out s5_515, out s11_516)
	branch false l2302BD9A
l2302BD9A:
	word32 mstatus_530
	word32 s7_528
	word32 s9_529
	word32 s5_526
	word32 s6_527
	word32 a5_523
	word32 s3_525
	word32 s2_524
	word32 a1_520
	word32 a4_522
	word32 a3_521
	word32 s0_517
	word32 a0_519
	word32 s1_518
	bt_l2cap_send_cb(ra_143, 0xA<32>, s4_150, 4<32>, a2_137, 0x2302B624<32>, a5_140, mstatus_113, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc18, dwLoc0C, dwLoc08, dwArg14, dwArg1C, dwArg28, dwArg2C, s3, s1, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s0_517, out s1_518, out a0_519, out a1_520, out a3_521, out a4_522, out a5_523, out s2_524, out s3_525, out s5_526, out s6_527, out s7_528, out s9_529, out mstatus_530)
l2302BD8E:
	word32 s6_540
	word32 s8_541
	word32 s2_538
	word32 s5_539
	word32 a4_536
	word32 a5_537
	word32 a1_534
	word32 a3_535
	word32 s1_532
	word32 a0_533
	word32 s0_531
	ra = net_buf_unref(ra_143, 0xA<32>, a2_137, a1_136, a4_139, mstatus_113, dwLoc60, dwLoc5C, dwLoc58, s2, dwArg18, a2_22, a0_123, s3, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0118, out s0_531, out s1_532, out a0_533, out a1_534, out a3_535, out a4_536, out a5_537, out s2_538, out s3_212, out s4_213, out s5_539, out s6_540, out s8_541, out mstatus)
	a3_224 = 0xA<32>
l2302BD4E:
	send_err_rsp.part.7(ra, s4_213, a3_224, s3_212, mstatus, dwLoc60, dwLoc5C, dwLoc50, dwLoc4C, dwLoc40, s4, s2, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwLoc08, dwArg0C, dwArg14, dwArg1C, dwArg28, dwArg2C, dwArg38, s3, s1, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA0, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8)
l2302BD36:
	return
att_read_type_req_exit:


void att_find_type_req(word32 ra, word32 s1, word32 a0, word32 a1, word32 s4, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_find_type_req_entry:
l2302BDAE:
	word32 a3_219
	word32 a0_222
	word32 dwLoc3C_339
	word32 s2_23 = Mem19[a0:int32]
	word32 a4_504
	word32 a0_27 = net_buf_simple_pull_mem(a1 + 8<i32>, 6<32>, out a4_504)
	word32 s3_207 = a0
	word32 s0_34 = CONVERT(Mem19[a0_27 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem19[a0_27:byte], byte, word32)
	branch s0_34 == 0<32> l2302BE28
l2302BDE0:
	word32 s1_38 = CONVERT(Mem19[a0_27 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem19[a0_27 + 2<i32>:byte], byte, word32)
	branch s1_38 == 0<32> l2302BE26
l2302BE26:
l2302BDEE:
	branch s1_38 <u s0_34 l2302BE28
l2302BE28:
	a3_219 = 1<32>
l2302BDF2:
	word16 wLoc3A_299 = SLICE(CONVERT(Mem19[a0_27 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem19[a0_27 + 4<i32>:byte], byte, word32), word16, 0)
	word32 a0_54
	word32 a5_509
	word32 a6_510
	word32 s8_511
	word32 a1_505
	word32 a2_506
	word32 a3_507
	word32 a4_508
	bt_uuid_cmp(fp + -60<i32>, fp + -56<i32>, out a0_54, out a1_505, out a2_506, out a3_507, out a4_508, out a5_509, out a6_510, out s8_511)
	word32 dwLoc38_318 = SEQ(0xF800<16>, bLoc37, 0<8>)
	dwLoc3C_339 = SEQ(wLoc3A_299, bLoc3B, 0<8>) (alias)
	branch a0_54 == 0<32> l2302BE4C
l2302BE4C:
	word32 a3_78
	word32 s0_95
	word32 s1_96
	word32 s11_98
	word32 s3_100
	word32 a0_110
	word32 mstatus_112
	word32 s5_524
	word32 s6_525
	word32 a5_521
	word32 s2_522
	word32 s4_523
	word32 a2_518
	word32 a3_519
	word32 a4_520
	word32 a4_516
	word32 a5_517
	word32 a0_513
	word32 a1_514
	word32 a2_515
	word32 t1_512
	word32 ra_94 = bt_att_create_pdu(memset(ra, fp + -52<i32>, 0<32>, 0x14<32>, out t1_512, out a0_513, out a1_514, out a2_515, out a3_78, out a4_516, out a5_517), s1_38, Mem53[a0:int32], 0<32>, a3_78, mstatus, dwLoc38_318, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, ra, dwArg88, dwArgA8, out s0_95, out s1_96, out a0_110, out a2_518, out a3_519, out a4_520, out a5_521, out s2_522, out s3_100, out s4_523, out s5_524, out s6_525, out s11_98, out mstatus_112)
	branch a0_110 == 0<32> l2302BE36
l2302BE6E:
	dwArg48 = 0<32>
	word32 a1_131
	word32 a2_132
	word32 a4_134
	word32 a5_135
	word32 s1_140
	word32 s4_145
	word32 s11_530
	word32 a0_527
	word32 s2_528
	word32 s5_529
	word32 s0_526
	word32 ra_138 = bt_gatt_foreach_attr(ra_94, s0_95, s1_96, 0x2302AD7E<32>, fp + -52<i32>, s11_98, out s0_526, out s1_140, out a0_527, out a1_131, out a2_132, out a4_134, out a5_135, out s2_528, out s4_145, out s5_529, out s11_530)
	branch false l2302BEAC
l2302BEAC:
	word32 s7_542
	word32 s9_543
	word32 mstatus_544
	word32 s3_539
	word32 s5_540
	word32 s6_541
	word32 a4_536
	word32 a5_537
	word32 s2_538
	word32 a0_533
	word32 a1_534
	word32 a3_535
	word32 s0_531
	word32 s1_532
	bt_l2cap_send_cb(ra_138, s1_140, s4_145, 4<32>, a2_132, 0x2302B624<32>, a5_135, mstatus_112, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg3C, 0<32>, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_531, out s1_532, out a0_533, out a1_534, out a3_535, out a4_536, out a5_537, out s2_538, out s3_539, out s5_540, out s6_541, out s7_542, out s9_543, out mstatus_544)
l2302BE9A:
	word32 s4_208
	word32 s6_554
	word32 s8_555
	word32 a5_551
	word32 s2_552
	word32 s5_553
	word32 a1_548
	word32 a3_549
	word32 a4_550
	word32 s0_545
	word32 s1_546
	word32 a0_547
	ra = net_buf_unref(ra_138, s1_140, a2_132, a1_131, a4_134, mstatus_112, dwLoc40, dwLoc3C_339, a0_110, dwLoc18, dwArg38, s3_100, s1, dwArg64, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s0_545, out s1_546, out a0_547, out a1_548, out a3_549, out a4_550, out a5_551, out s2_552, out s3_207, out s4_208, out s5_553, out s6_554, out s8_555, out mstatus)
	a3_219 = 0xA<32>
	a0_222 = s4_208
l2302BE22:
	a3_219 = 0xA<32>
l2302BE2A:
	a0_222 = s2_23
l2302BE30:
	send_err_rsp.part.7(ra, a0_222, a3_219, s3_207, mstatus, dwLoc40, dwLoc3C_339, s6, s4, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg2C, dwArg34, dwArg3C, dwArg48, dwArg4C, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118)
l2302BE36:
	0<32> = dwArg0198
	return
att_find_type_req_exit:


void att_find_info_req(word32 ra, word32 s0, word32 a0, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_find_info_req_entry:
l2302BEC0:
	word32 a3_171
	word32 s3_159
	word32 s2_158 = Mem13[a0:int32]
	word32 s0_21 = CONVERT(Mem13[a5 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem13[a5:byte], byte, word32)
	branch s0_21 == 0<32> l2302BF20
l2302BEE0:
	word32 s1_25 = CONVERT(Mem13[a5 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem13[a5 + 2<i32>:byte], byte, word32)
	branch s1_25 == 0<32> l2302BF1E
l2302BF1E:
l2302BEEE:
	branch s1_25 <u s0_21 l2302BF20
l2302BF20:
	a3_171 = 1<32>
	s3_159 = s3
l2302BEF2:
	word32 a3_35
	word32 s0_52
	word32 s1_53
	word32 s11_55
	word32 s3_57
	word32 a0_67
	word32 mstatus_69
	word32 s5_425
	word32 s6_426
	word32 s2_423
	word32 s4_424
	word32 a4_421
	word32 a5_422
	word32 a2_419
	word32 a3_420
	word32 a4_417
	word32 a5_418
	word32 a1_415
	word32 a2_416
	word32 t1_413
	word32 a0_414
	word32 ra_51 = bt_att_create_pdu(memset(ra, fp + -48<i32>, 0<32>, 0x10<32>, out t1_413, out a0_414, out a1_415, out a2_416, out a3_35, out a4_417, out a5_418), s1_25, s2_158, 0<32>, a3_35, mstatus, dwLoc28, dwArg00, dwArg04, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, s3, dwArg6C, dwArg98, dwArgB8, out s0_52, out s1_53, out a0_67, out a2_419, out a3_420, out a4_421, out a5_422, out s2_423, out s3_57, out s4_424, out s5_425, out s6_426, out s11_55, out mstatus_69)
	branch a0_67 != 0<32> l2302BF30
l2302BF30:
	dwLoc30 = s3_57
	word32 a1_83
	word32 a2_84
	word32 a4_86
	word32 a5_87
	word32 s1_92
	word32 s2_95
	word32 s11_431
	word32 s4_429
	word32 s5_430
	word32 s0_427
	word32 a0_428
	word32 ra_90 = bt_gatt_foreach_attr(ra_51, s0_52, s1_53, 0x2302AEA8<32>, fp + -48<i32>, s11_55, out s0_427, out s1_92, out a0_428, out a1_83, out a2_84, out a4_86, out a5_87, out s2_95, out s4_429, out s5_430, out s11_431)
	branch a5_87 != 0<32> l2302BF54
l2302BF54:
	word32 s9_444
	word32 mstatus_445
	word32 s6_442
	word32 s7_443
	word32 s3_440
	word32 s5_441
	word32 s2_439
	word32 a4_437
	word32 a5_438
	word32 a1_435
	word32 a3_436
	word32 s1_433
	word32 a0_434
	word32 s0_432
	bt_l2cap_send_cb(ra_90, s1_92, s2_95, 4<32>, a2_84, 0x2302B624<32>, a5_87, mstatus_69, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg44, dwArg4C, dwArg58, s3, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_432, out s1_433, out a0_434, out a1_435, out a3_436, out a4_437, out a5_438, out s2_439, out s3_440, out s5_441, out s6_442, out s7_443, out s9_444, out mstatus_445)
l2302BF4A:
	word32 a3_450
	word32 a4_451
	word32 a0_448
	word32 a1_449
	word32 s0_446
	word32 s1_447
	word32 a5_452
	word32 s4_453
	word32 s5_454
	word32 s6_455
	word32 s8_456
	ra = net_buf_unref(ra_90, s1_92, a2_84, a1_83, a4_86, mstatus_69, s3_57, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_446, out s1_447, out a0_448, out a1_449, out a3_450, out a4_451, out a5_452, out s2_158, out s3_159, out s4_453, out s5_454, out s6_455, out s8_456, out mstatus)
	a3_171 = 0xA<32>
l2302BF22:
	send_err_rsp.part.7(ra, s2_158, a3_171, s3_159, mstatus, dwLoc30, dwLoc2C, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg3C, dwArg44, dwArg4C, dwArg58, s3, dwArg68, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128)
l2302BF2C:
l2302BF0E:
	0<32> = dwArg0128
	return
att_find_info_req_exit:


void att_write_rsp.constprop.10(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 s6, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_write_req
//      att_write_cmd
//      att_signed_write_cmd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s11:[0..31] s4:[0..31] s6:[8..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_write_rsp.constprop.10_entry:
l2302BF68:
	word32 s2_63 = a1
	word24 nLoc2F_319 = SLICE(s6, word24, 8)
	word32 s1_24 = a0
	word32 s3_28 = a3
	word32 s5_30 = a4
	branch bt_gatt_change_aware() == 0<32> l2302BFEC
l2302BF92:
	branch a3 == 0<32> l2302BFEC
l2302BF98:
	word32 a3_42
	word32 a5_416
	word32 a4_415
	word32 a2_414
	word32 a1_413
	word32 a0_412
	word32 t1_411
	word32 ra_101 = memset(ra, fp + -56<i32>, 0<32>, 0x18<32>, out t1_411, out a0_412, out a1_413, out a2_414, out a3_42, out a4_415, out a5_416)
	branch a2 != 0<32> l2302BFDC
l2302BFDC:
	word32 a0_74
	word32 s0_446
	word32 a2_447
	word32 a3_448
	word32 a4_449
	word32 a5_450
	word32 s4_451
	word32 s6_452
	ra_101 = bt_att_create_pdu(ra_101, a0, a0, 0<32>, a3_42, mstatus, dwLoc38, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, ra, dwArg88, dwArgA8, out s0_446, out s1_24, out a0_74, out a2_447, out a3_448, out a4_449, out a5_450, out s2_63, out s3_28, out s4_451, out s5_30, out s6_452, out s11, out mstatus)
	dwArg44 = a0_74
	branch a0_74 != 0<32> l2302BFA6
l2302BFA6:
	word32 a0_104
	word32 a1_105
	word32 a4_108
	word32 a5_109
	word32 s1_114
	word32 s4_119
	word32 s0_417
	word32 a2_418
	word32 s2_419
	word32 s5_420
	word32 s11_421
	word32 ra_112 = bt_gatt_foreach_attr(ra_101, s3_28, s3_28, 0x2302B628<32>, fp + -56<i32>, s11, out s0_417, out s1_114, out a0_104, out a1_105, out a2_418, out a4_108, out a5_109, out s2_419, out s4_119, out s5_420, out s11_421)
	word32 dwLoc30_320 = SEQ(nLoc2F_319, SLICE(s2_63, byte, 0))
	branch false l2302C01C
l2302C01C:
	branch dwArg44 == 0<32> l2302BFD8
l2302C020:
	word32 s0_432
	word32 s1_433
	word32 a0_434
	word32 a1_435
	word32 a3_436
	word32 a4_437
	word32 a5_438
	word32 s2_439
	word32 s3_440
	word32 s5_441
	word32 s6_442
	word32 s7_443
	word32 s9_444
	word32 mstatus_445
	bt_l2cap_send_cb(ra_112, s1_114, s1_114, 4<32>, dwArg44, 0x2302B624<32>, a5_109, mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg3C, s5_30, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_432, out s1_433, out a0_434, out a1_435, out a3_436, out a4_437, out a5_438, out s2_439, out s3_440, out s5_441, out s6_442, out s7_443, out s9_444, out mstatus_445)
l2302BFD4:
	branch s4_119 != 0<32> l2302C002
l2302C002:
	word32 mstatus_177
	word32 s1_180
	word32 s2_181
	word32 s3_182
	word32 s0_422
	word32 a0_423
	word32 a1_424
	word32 a3_425
	word32 a4_426
	word32 a5_427
	word32 s4_428
	word32 s5_429
	word32 s6_430
	word32 s8_431
	word32 ra_178 = net_buf_unref(ra_112, s1_114, a0_104, a1_105, a4_108, mstatus, dwLoc40, s1_24, dwLoc38, dwLoc18, dwArg38, dwArg44, s1, dwArg64, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s0_422, out s1_180, out a0_423, out a1_424, out a3_425, out a4_426, out a5_427, out s2_181, out s3_182, out s4_428, out s5_429, out s6_430, out s8_431, out mstatus_177)
	branch s2_181 == 0<32> l2302BFD8
l2302C00C:
	send_err_rsp.part.7(ra_178, s1_180, 1<32>, s3_182, mstatus_177, dwLoc40, s1_24, dwLoc30_320, s4, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg2C, dwArg34, dwArg3C, s5_30, dwArg4C, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118)
l2302BFD8:
l2302BFEC:
	0<32> = dwArg0198
	return
att_write_rsp.constprop.10_exit:


void att_write_req(word32 ra, word32 s0, word32 s1, word32 a1, word32 a5, word32 s4, word32 s6, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s11:[0..31] s4:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_write_req_entry:
l2302C034:
	word32 a4_16
	word32 a1_95
	word32 a0_13 = net_buf_simple_pull_le16(a5, out a1_95, out a4_16)
l2302C05C_thunk_att_write_rsp.constprop.10:
	att_write_rsp.constprop.10(ra, s1, s0, 0x12<32>, 0x13<32>, a0_13, a4_16, s4, s6, s11, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, a1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0198)
	return
att_write_req_exit:


void att_write_cmd(word32 ra, word32 s0, word32 s1, word32 a1, word32 a5, word32 s4, word32 s6, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s11:[0..31] s4:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_write_cmd_entry:
l2302C060:
	word32 a4_16
	word32 a1_95
	word32 a0_13 = net_buf_simple_pull_le16(a5, out a1_95, out a4_16)
l2302C088_thunk_att_write_rsp.constprop.10:
	att_write_rsp.constprop.10(ra, s1, s0, 0<32>, 0<32>, a0_13, a4_16, s4, s6, s11, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, a1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0198)
	return
att_write_cmd_exit:


void att_signed_write_cmd(word32 ra, word32 s1, word32 a0, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_signed_write_cmd_entry:
l2302C08C:
	word32 a1_15 = Mem13[a5 + 8<i32>:word32]
	word32 s3_17 = Mem13[a0:int32]
	word32 a4_220
	net_buf_simple_push(1<32>, a5, out a4_220)
	word32 a0_32
	word32 a3_35
	word32 a4_36
	word32 s0_41
	word32 s11_44
	word32 s2_45
	word32 s3_46
	word32 s6_49
	word32 ra_40 = bt_smp_sign_verify(ra, s3_17, a1_15, a1_15 + 8<i32>, dwLoc20, dwLoc1C, s2, dwLoc0C, dwArg08, dwArg10, dwArg14, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg58, dwArg5C, dwArg7C, dwArgE8, out s0_41, out a0_32, out a3_35, out a4_36, out s2_45, out s3_46, out s6_49, out s11_44)
	branch a0_32 != 0<32> l2302C0F6
l2302C0F6:
	word32 s1_221
	word32 a0_222
	word32 a1_223
	word32 a2_224
	word32 a3_225
	word32 a4_226
	word32 a5_227
	word32 a7_228
	word32 s2_229
	word32 s3_230
	word32 s4_231
	word32 s5_232
	word32 s6_233
	word32 s7_234
	word32 s8_235
	word32 s9_236
	word32 s10_237
	word32 s11_238
	word32 t4_239
	printf(ra_40, 0x23076E74<32>, a3_35, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_221, out a0_222, out a1_223, out a2_224, out a3_225, out a4_226, out a5_227, out a7_228, out s2_229, out s3_230, out s4_231, out s5_232, out s6_233, out s7_234, out s8_235, out s9_236, out s10_237, out s11_238, out t4_239)
	return
l2302C0C2:
	word32 a5_240
	net_buf_simple_pull(s2_45, 1<32>, out a5_240)
	word32 a5_241
	net_buf_simple_pull(s2_45, 2<32>, out a5_241)
	word32 s1_104 = Mem13[a4_36 + 8<i32>:word32]
l2302C0F2_thunk_att_write_rsp.constprop.10:
	att_write_rsp.constprop.10(ra_40, s1_104, s3_46, 0<32>, 0<32>, s0_41, a4_36, dwArg04, s6_49, s11_44, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, s3, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0198)
	return
att_signed_write_cmd_exit:


word32 bt_att_init(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_init
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
bt_att_init_entry:
l2302C112:
l2302C112_thunk_bt_gatt_init:
	word32 a3_11
	word32 a4_12
	word32 a5_13
	word32 a0_32
	word32 s2_33
	word32 s5_34
	word32 s0_14 = bt_gatt_init(ra, a3, a4, mstatus, dwArg34, dwArg94, dwArgC8, dwArgE8, dwArg0128, out a0_32, out a3_11, out a4_12, out a5_13, out s2_33, out s5_34)
	a3Out = a3_11
	a4Out = a4_12
	a5Out = a5_13
	return s0_14
bt_att_init_exit:


word32 bt_att_get_mtu(word32 ra, word32 a0, word32 a3, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_get_mtu
//      gatt_read_rsp
//      gatt_prepare_write_rsp
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a2 a3 ra s1 s10 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bt_att_get_mtu_entry:
l2302C116:
	word32 a0_30
	word32 a0_12
	word32 a3_13
	word32 s1_16
	word32 s10_17
	word32 s2_19
	word32 s3_20
	word32 s11_81
	word32 s8_80
	word32 s7_79
	word32 s6_78
	word32 s5_77
	word32 s4_76
	word32 a5_75
	word32 a4_74
	word32 a2_73
	word32 a1_72
	word32 ra_15 = att_chan_get(ra, a0, a3, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_16, out a0_12, out a1_72, out a2_73, out a3_13, out a4_74, out a5_75, out s2_19, out s3_20, out s4_76, out s5_77, out s6_78, out s7_79, out s8_80, out s10_17, out s11_81)
	branch a0_12 == 0<32> l2302C12A
l2302C12A:
	a0_30 = 0<32>
l2302C120:
	a0_30 = CONVERT(Mem5[a0_12 + 86<i32>:uint16], uint16, word32)
l2302C124:
	s1Out = s1_16
	a0Out = a0_30
	a2Out = dwArg10
	a3Out = a3_13
	s2Out = s2_19
	s3Out = s3_20
	s10Out = s10_17
	return ra_15
bt_att_get_mtu_exit:


word32 bt_att_send(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gatt_notify
//      bt_gatt_exchange_mtu
//      bt_gatt_write_without_response_cb
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_att_send_entry:
l2302C12E:
	word32 a3_112
	word32 a4_113
	word32 s6_123
	word32 s0_107
	word32 s0_19 = a1
	word32 a1_22
	word32 a4_24
	word32 a0_26
	word32 a3_27
	word32 s1_30
	word32 s11_337
	word32 s10_336
	word32 s8_335
	word32 s6_334
	word32 s5_333
	word32 s4_332
	word32 a2_331
	word32 s2_33
	word32 s3_34
	word32 a5_25
	word32 s7_135
	word32 ra_132 = att_chan_get(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_30, out a0_26, out a1_22, out a2_331, out a3_27, out a4_24, out a5_25, out s2_33, out s3_34, out s4_332, out s5_333, out s6_334, out s7_135, out s8_335, out s10_336, out s11_337)
	branch a0_26 != 0<32> l2302C164
l2302C164:
	word32 s1_45 = a0_26
	branch s2_33 != 0<32> l2302C18A
l2302C16A:
	word32 a0_50
	word32 a4_54
	word32 a1_349
	word32 a3_350
	word32 s4_351
	word32 s8_352
	s0_19 = k_sem_take(a0_26 + 204<i32>, 0<32>, dwArg74, a3_27, a4_24, a5_25, mstatus, s0, ra, dwArgD8, dwArg0118, out s1_45, out a0_50, out a1_349, out a3_350, out a4_54, out a5_25, out s2_33, out s3_34, out s4_351, out s8_352)
	branch a0_50 >= 0<32> l2302C18A
l2302C18A:
	word32 a0_78
	word32 a5_83
	word32 s1_89
	word32 s2_92
	word32 s0_348
	ra_132 = att_send(ra_132, s0_19, s1_45, s3_34, s2_33, a5_25, mstatus, dwLoc30, dwLoc2C, dwLoc14, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg4C, dwArg58, s3, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_348, out s1_89, out a0_78, out a3_112, out a4_113, out a5_83, out s2_92, out s6_123, out s7_135, out mstatus)
	s0_107 = a0_78
	branch a0_78 == 0<32> l2302C154
l2302C198:
	branch s2_92 != 0<32> l2302C154
l2302C19C:
	word32 s1_362
	word32 a0_363
	word32 a1_364
	word32 a2_365
	word32 a5_366
	word32 s2_367
	word32 s3_368
	word32 s4_369
	word32 s5_370
	word32 s9_371
	word32 s10_372
	word32 s11_373
	ra_132 = k_sem_give(ra_132, s1_89 + 204<i32>, a3_112, a4_113, a5_83, mstatus, s0, dwLoc18, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArgD8, dwArg0118, dwArg0158, out s0_107, out s1_362, out a0_363, out a1_364, out a2_365, out a3_112, out a4_113, out a5_366, out s2_367, out s3_368, out s4_369, out s5_370, out s6_123, out s7_135, out s9_371, out s10_372, out s11_373)
l2302C17C:
	word32 s1_353
	word32 a0_354
	word32 a1_355
	word32 a2_356
	word32 a5_357
	word32 s2_358
	word32 s3_359
	word32 s4_360
	word32 s5_361
	k_queue_append(s1_45 + 216<i32>, a4_54, a5_25, mstatus, dwLoc2C, a3_27, dwArgC8, dwArg0108, dwArg0148, out s1_353, out a0_354, out a1_355, out a2_356, out a3_112, out a4_113, out a5_357, out s2_358, out s3_359, out s4_360, out s5_361, out s6_123)
	s0_107 = 0<32>
l2302C14A:
	word32 s8_347
	word32 s5_346
	word32 s4_345
	word32 s3_344
	word32 s2_343
	word32 a5_342
	word32 a1_341
	word32 a0_340
	word32 s1_339
	word32 s0_338
	ra_132 = net_buf_unref(ra_132, s1_30, a1, a1_22, a4_24, mstatus, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, a3, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_338, out s1_339, out a0_340, out a1_341, out a3_112, out a4_113, out a5_342, out s2_343, out s3_344, out s4_345, out s5_346, out s6_123, out s8_347, out mstatus)
	s0_107 = -57<i32>
l2302C154:
	0<32> = dwArg0128
	s0Out = dwArgE4
	a0Out = s0_107
	a3Out = a3_112
	a4Out = a4_113
	s6Out = s6_123
	s7Out = s7_135
	mstatusOut = mstatus
	return ra_132
bt_att_send_exit:


void bt_att_req_send(word32 ra, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_exchange_mtu
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_att_req_send_entry:
l2302C1A6:
	word32 a1_10
	word32 a4_12
	word32 a5_13
	word32 a0_14
	word32 a3_15
	word32 s1_18
	word32 s11_248
	word32 s10_247
	word32 s7_245
	word32 s8_246
	word32 s6_244
	word32 s5_243
	word32 s4_242
	word32 s3_241
	word32 s2_240
	word32 a2_239
	word32 ra_17 = att_chan_get(ra, a0, a3, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_18, out a0_14, out a1_10, out a2_239, out a3_15, out a4_12, out a5_13, out s2_240, out s3_241, out s4_242, out s5_243, out s6_244, out s7_245, out s8_246, out s10_247, out s11_248)
	branch a0_14 != 0<32> l2302C1CA
l2302C1CA:
	word32 a4_33 = Mem7[a0_14 + 156<i32>:int32]
	branch a4_33 == 0<32> l2302C1EE
l2302C1EE:
l2302C1F2_thunk_att_send_req:
	att_send_req(ra_17, s1_18, a0_14, a1_10, dwArg44, a3_15, a4_33, a5_13, mstatus, dwArg08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, a1, dwArg74, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0158)
	return
l2302C1D0:
	Mem66[a1_10:word32] = 0<32>
	word32 a4_67 = Mem66[a0_14 + 164<i32>:int32]
	branch a4_67 != 0<32> l2302C1E6
l2302C1E6:
	Mem68[a1_10:word32] = a4_67
	Mem69[a0_14 + 164<i32>:word32] = a1_10
l2302C1DA:
	Mem70[a0_14 + 164<i32>:word32] = a1_10
	Mem71[a0_14 + 160<i32>:word32] = a1_10
l2302C1E2:
l2302C1B4:
	word32 a1_75
	word32 mstatus_261
	word32 s8_260
	word32 s6_259
	word32 s4_257
	word32 s5_258
	word32 s2_255
	word32 s3_256
	word32 a5_254
	word32 a4_253
	word32 a3_252
	word32 a0_251
	word32 s1_250
	word32 s0_249
	net_buf_unref(ra_17, s1_18, a0_14, Mem7[a0_14 + 16<i32>:word32], a4_12, mstatus, dwLoc20, dwLoc1C, dwLoc18, dwArg08, dwArg58, a1, dwArg78, dwArg84, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_249, out s1_250, out a0_251, out a1_75, out a3_252, out a4_253, out a5_254, out s2_255, out s3_256, out s4_257, out s5_258, out s6_259, out s8_260, out mstatus_261)
	Mem101[a1_75 + 16<i32>:word32] = 0<32>
l2302C1C4:
	return
bt_att_req_send_exit:


word32 bt_att_req_cancel(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg9C, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_unsubscribe
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 ra s1 s3 s4 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: s0 sp
bt_att_req_cancel_entry:
l2302C1F6:
	branch a0 == 0<32> l2302C26C
l2302C1F8:
	branch a1 == 0<32> l2302C26C
l2302C26C:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	s6Out = s6
	s7Out = s7
	s8Out = s8
	return ra
l2302C1FA:
	word32 s0_10 = a1
	word32 a1_12
	word32 a0_16
	word32 a3_17
	word32 s1_20
	word32 s3_24
	word32 s4_25
	word32 s6_27
	word32 s7_28
	word32 s8_29
	word32 s5_275
	word32 s10_276
	word32 s11_277
	word32 s2_274
	word32 a5_273
	word32 a2_272
	word32 a4_14
	word32 ra_19 = att_chan_get(ra, a0, a3, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_20, out a0_16, out a1_12, out a2_272, out a3_17, out a4_14, out a5_273, out s2_274, out s3_24, out s4_25, out s5_275, out s6_27, out s7_28, out s8_29, out s10_276, out s11_277)
	branch a0_16 == 0<32> l2302C264
l2302C264:
	s1Out = s1_20
	a3Out = a3_17
	a4Out = a4_14
	s3Out = s3_24
	s4Out = s4_25
	s6Out = s6_27
	s7Out = s7_28
	s8Out = s8_29
	return ra_19
l2302C208:
	word32 a5_38
	branch Mem9[a0_16 + 156<i32>:int32] != a1 l2302C228
l2302C228:
	a5_38 = Mem9[a0_16 + 160<i32>:int32]
	a4_14 = 0<32>
l2302C22E:
	branch a5_38 == 0<32> l2302C21C
l2302C230:
	branch a1 != a5_38 l2302C25E
l2302C25E:
	a4_14 = a5_38
	a5_38 = Mem9[a5_38:word32]
l2302C234:
	s0_10 = Mem9[a5_38:word32]
	branch a4_14 != 0<32> l2302C24E
l2302C24E:
	Mem47[a5_38:word32] = a4_14
	a5_38 = Mem47[a0_16 + 164<i32>:int32]
	branch s0_10 != a5_38 l2302C248
l2302C258:
	Mem50[a0_16 + 164<i32>:word32] = a4_14
l2302C238:
	a4_14 = Mem9[a0_16 + 164<i32>:int32]
	Mem52[a0_16 + 160<i32>:word32] = a5_38
	branch s0_10 != a4_14 l2302C248
l2302C244:
	Mem53[a0_16 + 164<i32>:word32] = a5_38
l2302C248:
	Mem55[s0_10:word32] = 0<32>
l2302C210:
	Mem58[a0_16 + 156<i32>:word32] = 0x420128A0<32>
	a5_38 = 0x420128A0<32>
l2302C21C:
l2302C224_thunk_att_req_destroy:
	word32 a3_88
	word32 a4_89
	word32 a1_279
	word32 a2_280
	word32 a5_281
	word32 a0_278
	word32 ra_91 = att_req_destroy(ra_19, s0, s1_20, s0_10, a1_12, a4_14, a5_38, mstatus, dwArg18, dwArg68, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out a0_278, out a1_279, out a2_280, out a3_88, out a4_89, out a5_281)
	s1Out = s1_20
	a3Out = a3_88
	a4Out = a4_89
	s3Out = s3_24
	s4Out = s4_25
	s6Out = s6_27
	s7Out = s7_28
	s8Out = s8_29
	return ra_91
bt_att_req_cancel_exit:


word32 fdt32_ld(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_by_offset_
//      fdt_get_string
//      fdt_get_name
//      fdt_get_property_namelen_
//      fdt_getprop
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_ld_entry:
l2302C26E:
	word32 a4_10 = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32)
	word32 a5_12 = CONVERT(Mem0[a0:byte], byte, word32) << 24<i32> | CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) << 16<i32> | a4_10
	word32 a0_14 = CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) << 8<i32> | a5_12
	a4Out = a4_10
	a5Out = a5_12
	return a0_14
fdt32_ld_exit:


word32 nextprop_.part.0(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg18, word32 dwArg58, word32 dwArg78, word32 dwArg0128, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_first_property_offset
//      fdt_next_property_offset
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 a5 ra s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
nextprop_.part.0_entry:
l2302C28C:
	word32 s2_17 = a0
	word32 s0_19 = a1
l2302C2A4:
	word32 a0_33
	word32 a4_36
	word32 a5_37
	word32 s1_41
	word32 s3_43
	word32 s4_44
	ra = fdt_next_tag(ra, s2_17, s0_19, fp + -36<i32>, s5, s6, dwLoc30, dwLoc2C, dwLoc08, dwArg18, dwArg58, dwArg78, out s0_19, out s1_41, out a0_33, out a4_36, out a5_37, out s2_17, out s3_43, out s4_44, out s5, out s6)
	branch a0_33 == s3_43 l2302C2C4
l2302C2B0:
	branch a0_33 != s4_44 l2302C2BE
l2302C2BE:
	branch a0_33 == s1_41 l2302C2A4
l2302C2C2:
	s0_19 = 0xFFFFFFFF<32>
l2302C2B6:
	branch s0_19 < 0<32> l2302C2C4
l2302C2BA:
	s0_19 = 0xFFFFFFF5<32>
l2302C2C4:
	0<32> = dwArg0128
	a0Out = s0_19
	a4Out = a4_36
	a5Out = a5_37
	s2Out = s2_17
	s3Out = s3_43
	s5Out = s5
	s6Out = s6
	return ra
nextprop_.part.0_exit:


word32 fdt_get_property_by_offset_(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg18, word32 dwArg38, word32 dwArg58, word32 dwArg78, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_namelen_
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0078:[0..31]
// LiveOut: a0 a4 a5 ra s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: s0 sp
fdt_get_property_by_offset__entry:
l2302C2D6:
	word32 s0_42
	word32 s0_27
	word32 s1_28
	word32 s2_29
	word32 s3_30
	word32 s5_32
	word32 s6_33
	word32 a0_20
	word32 a5_24
	word32 a4_23
	word32 ra_26 = fdt_check_prop_offset_(ra, a0, a1, s5, s6, dwLoc08, dwArg18, dwArg58, dwArg78, out s0_27, out s1_28, out a0_20, out a4_23, out a5_24, out s2_29, out s3_30, out s5_32, out s6_33)
	branch a0_20 >= 0<32> l2302C300
l2302C300:
	s0_42 = s0_27 + (fdt32_ld(s0_27 + 8<i32>, out a4_23, out a5_24) + s2_29)
	branch s1_28 == 0<32> l2302C2F2
l2302C30E:
	a0_20 = fdt32_ld(s0_42 + 4<i32>, out a4_23, out a5_24)
l2302C2EC:
	s0_42 = 0<32>
	branch s1_28 == 0<32> l2302C2F2
l2302C2F0:
	Mem50[a0_20:word32] = s1_28
l2302C2F2:
	0<32> = dwArg38
	a0Out = s0_42
	a4Out = a4_23
	a5Out = a5_24
	s2Out = s2_29
	s3Out = s3_30
	s5Out = s5_32
	s6Out = s6_33
	return ra_26
fdt_get_property_by_offset__exit:


word32 fdt_get_string(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_namelen_
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
fdt_get_string_entry:
l2302C318:
	word32 s0_68
	word32 a4_198
	word32 a5_199
	word32 a0_23 = fdt32_ld(a0 + 0xC<32>, out a4_198, out a5_199)
	word32 s1_173 = a1
	word32 s3_182 = a0_23
	word32 a5_164
	word32 a0_28 = fdt_ro_probe_(a0, out a5_164)
	branch a0_28 != 0<32> l2302C3D8
l2302C33A:
	s3_182 = a0_23 + a1
	word32 a4_200
	word32 a0_34 = fdt32_ld(a0 + 4<i32>, out a4_200, out a5_164)
	branch s3_182 >=u a0_34 l2302C3E4
l2302C348:
	s2 = a0_34 - s3_182
	word32 a4_201
	word32 a5_202
	word32 a0_39 = fdt32_ld(a0, out a4_201, out a5_202)
	a5_164 = 0xD00DFEED<32>
	branch a0_39 != 0xD00DFEED<32> l2302C3AA
l2302C3AA:
	a5_164 = 0x2FF20112<32>
	branch a0_39 != 0x2FF20112<32> l2302C3D6
l2302C3D6:
	a0_28 = 0xFFFFFFF3<32>
l2302C3B6:
	branch a1 >= 0<32> l2302C3E4
l2302C3BA:
	word32 a4_206
	branch a1 <u 0<32> - fdt32_ld(a0 + 32<i32>, out a4_206, out a5_164) l2302C3E4
l2302C3CA:
	s1_173 = 0<32> - a1
	branch s1_173 >=u s2 l2302C384
l2302C3D2:
	s2 = s1_173
l2302C35E:
	branch a1 < 0<32> l2302C3E4
l2302C362:
	word32 a4_203
	word32 a5_204
	branch fdt32_ld(a0 + 20<i32>, out a4_203, out a5_204) <=u 0x10<32> l2302C384
l2302C370:
	word32 a4_205
	word32 a0_60 = fdt32_ld(a0 + 32<i32>, out a4_205, out a5_164)
	branch a1 >=u a0_60 l2302C3E4
l2302C3E4:
	a0_28 = 0xFFFFFFFC<32>
l2302C37C:
	word32 a0_64 = a0_60 - a1
	branch a0_64 >=u s2 l2302C384
l2302C382:
	s2 = a0_64
l2302C384:
	s0_68 = a0 + s3_182
	word32 a0_81 = memchr(s0_68, 0<32>, s2, out a3, out a5_164)
	branch a0_81 == 0<32> l2302C3E8
l2302C3E8:
	a0_28 = 0xFFFFFFF8<32>
l2302C3D8:
	s0_68 = 0<32>
	branch a2 == 0<32> l2302C398
l2302C392:
	a0_28 = a0_81 - s0_68
	branch a2 != 0<32> l2302C3DE
l2302C3DE:
	Mem91[a2:word32] = a0_28
l2302C398:
	s1Out = s1_173
	a0Out = s0_68
	a3Out = a3
	a5Out = a5_164
	s2Out = s2
	s3Out = s3_182
	s4Out = dwArg04
	return s1
fdt_get_string_exit:


word32 fdt_get_name(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 s5, word32 s6, word32 dwArg08, word32 dwArg48, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_subnode_offset
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0048:[0..31]
// LiveOut: a0 a5 ra s0 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_get_name_entry:
l2302C3EC:
	word32 s0_58
	word32 a4_195
	word32 a5_196
	word32 s3_165 = fdt32_ld(a0 + 8<32>, out a4_195, out a5_196)
	word32 s2_164 = a2
	word32 a5_147
	word32 a0_26 = fdt_ro_probe_(a0, out a5_147)
	branch a0_26 != 0<32> l2302C44C
l2302C40C:
	word32 s0_41
	word32 s1_42
	word32 a4_197
	ra = fdt_check_node_offset_(ra, a0, a1, s5, s6, s2, dwArg08, dwArg48, s1, out s0_41, out s1_42, out a0_26, out a4_197, out a5_147, out s2_164, out s3_165, out s5, out s6)
	branch a0_26 < 0<32> l2302C44C
l2302C416:
	word32 s0_56 = s0_41 + s3_165 + s1_42
	a5_147 = 0xF<32>
	s0_58 = s0_56 + 4<32>
	word32 a4_198
	word32 a5_199
	branch fdt32_ld(s1_42 + 20<i32>, out a4_198, out a5_199) >u 0xF<32> l2302C43A
l2302C42A:
	word32 a0_61 = strrchr(s0_56 + 4<32>, 47<i32>, out a5_147)
	branch a0_61 == 0<32> l2302C44A
l2302C44A:
	a0_26 = 0xFFFFFFF5<32>
l2302C44C:
	s0_58 = 0<32>
	branch s2_164 != 0<32> l2302C444
l2302C436:
	s0_58 = a0_61 + 1<i32>
l2302C43A:
	branch s2_164 == 0<32> l2302C452
l2302C43E:
	word32 a1_200
	word32 a2_201
	word32 a3_202
	word32 a4_203
	a0_26 = strlen(s0_58, out a1_200, out a2_201, out a3_202, out a4_203, out a5_147)
l2302C444:
	Mem86[s2_164:word32] = a0_26
l2302C452:
	s0Out = s0_58
	a0Out = s0_58
	a5Out = a5_147
	s2Out = s2_164
	s3Out = s3_165
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	return ra
fdt_get_name_exit:


word32 fdt_subnode_offset_namelen(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s6, word32 dwArg08, word32 dwArg38, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_subnode_offset
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a3 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_subnode_offset_namelen_entry:
l2302C462:
	word32 a5_108
	word32 a0_26 = fdt_ro_probe_(a0, out a5_108)
	word32 s3_114 = a0
	word32 s2_113 = a3
	word32 s0_122 = a0_26
	branch a0_26 != 0<32> l2302C4EA
l2302C480:
	s5 = 1<32>
	s0_122 = a1
l2302C488:
	branch s0_122 < 0<32> l2302C4E6
l2302C4E6:
	branch a5_108 < 0<32> l2302C492
l2302C48E:
	branch a5_108 >= 0<32> l2302C496
l2302C496:
	branch a5_108 != s5 l2302C4DA
l2302C49A:
	word32 a0_49
	word32 a5_52
	word32 s4_58
	ra = fdt_get_name(ra, s1, s3_114, s0_122, fp + -36<i32>, s2_113, s5, s6, dwLoc38, dwArg08, out s0_122, out a0_49, out a5_52, out s2_113, out s3_114, out s4_58, out s5, out s6)
	a3 = a3_66
	branch a0_49 == 0<32> l2302C4DA
l2302C4A8:
	a3 = a3_66
	branch a5_52 < s2_113 l2302C4DA
l2302C4AE:
	word32 a1_248
	word32 a2_249
	word32 a4_250
	word32 a5_251
	branch memcmp(a0_49, s4_58, s2_113, out a1_248, out a2_249, out a3, out a4_250, out a5_251) != 0<32> l2302C4DA
l2302C4B8:
	s1 = a0_49 + s2_113
	a5_108 = CONVERT(Mem32[s1:byte], byte, word32)
	branch a5_108 == 0<32> l2302C4EA
l2302C4C0:
	word32 a5_252
	branch memchr(s4_58, 64<i32>, s2_113, out a3, out a5_252) != 0<32> l2302C4DA
l2302C4CE:
	a5_108 = 64<i32>
	branch CONVERT(Mem32[s1:byte], byte, word32) == 64<i32> l2302C4EA
l2302C4DA:
	word32 a0_121
	ra = fdt_next_node(ra, s0_122, s3_114, s0_122, s5, s6, s2, dwLoc08, dwArg38, dwArgE8, out s1, out a0_121, out a5_108, out s2_113, out s3_114, out s5, out s6)
	s0_122 = a0_121
l2302C492:
	s0_122 = 0xFFFFFFFF<32>
l2302C4EA:
	s0Out = dwArg0158
	s1Out = s1
	a0Out = s0_122
	a3Out = a3
	a5Out = a5_108
	s2Out = s2_113
	s3Out = s3_114
	s4Out = dwArgF4
	s5Out = s5
	s6Out = s6
	return ra
fdt_subnode_offset_namelen_exit:


word32 fdt_subnode_offset(word32 ra, word32 s1, word32 a0, word32 a2, word32 s2, word32 s6, word32 dwArg08, word32 dwArg38, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      hal_board_cfg
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a3 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_subnode_offset_entry:
l2302C4FE:
	word32 a1_19
	word32 a2_70
	word32 a3_71
	word32 a4_72
	word32 a5_73
	word32 a0_15 = strlen(a2, out a1_19, out a2_70, out a3_71, out a4_72, out a5_73)
l2302C51E_thunk_fdt_subnode_offset_namelen:
	word32 a5_33
	word32 s0_35
	word32 s2_36
	word32 s3_37
	word32 s4_38
	word32 a0_42
	word32 s5_43
	word32 a3_45
	word32 s1_48
	word32 s6_49
	word32 ra_47 = fdt_subnode_offset_namelen(ra, s1, a0, a1_19, a0_15, s2, s6, dwArg08, dwArg38, dwArgE8, out s0_35, out s1_48, out a0_42, out a3_45, out a5_33, out s2_36, out s3_37, out s4_38, out s5_43, out s6_49)
	s0Out = s0_35
	s1Out = s1_48
	a0Out = a0_42
	a3Out = a3_45
	a5Out = a5_33
	s2Out = s2_36
	s3Out = s3_37
	s4Out = s4_38
	s5Out = s5_43
	s6Out = s6_49
	return ra_47
fdt_subnode_offset_exit:


word32 fdt_first_property_offset(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg18, word32 dwArg58, word32 dwArg78, word32 dwArg0128, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_namelen_
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 a5 ra s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_first_property_offset_entry:
l2302C522:
	word32 a0_13
	word32 a4_16
	word32 a5_17
	word32 s0_20
	word32 s2_22
	word32 s3_23
	word32 s5_25
	word32 s6_26
	word32 s1_88
	word32 ra_19 = fdt_check_node_offset_(ra, a0, a1, s5, s6, dwLoc08, dwArg18, dwArg58, dwArg78, out s0_20, out s1_88, out a0_13, out a4_16, out a5_17, out s2_22, out s3_23, out s5_25, out s6_26)
	branch a0_13 < 0<32> l2302C53E
l2302C53E:
	a0Out = a0_13
	a4Out = a4_16
	a5Out = a5_17
	s2Out = s2_22
	s3Out = s3_23
	s5Out = s5_25
	s6Out = s6_26
	return ra_19
l2302C530:
l2302C53A_thunk_nextprop_.part.0:
	word32 a0_38
	word32 a4_41
	word32 a5_42
	word32 s2_47
	word32 s3_48
	word32 s5_50
	word32 s6_51
	word32 ra_44 = nextprop_.part.0(ra_19, s0_20, a0_13, s5_25, s6_26, dwArg18, dwArg58, dwArg78, dwArg0128, out a0_38, out a4_41, out a5_42, out s2_47, out s3_48, out s5_50, out s6_51)
	a0Out = a0_38
	a4Out = a4_41
	a5Out = a5_42
	s2Out = s2_47
	s3Out = s3_48
	s5Out = s5_50
	s6Out = s6_51
	return ra_44
fdt_first_property_offset_exit:


word32 fdt_next_property_offset(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg18, word32 dwArg58, word32 dwArg78, word32 dwArg0128, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_namelen_
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 a5 ra s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_next_property_offset_entry:
l2302C546:
	word32 a0_13
	word32 a4_16
	word32 a5_17
	word32 s0_20
	word32 s2_22
	word32 s3_23
	word32 s5_25
	word32 s6_26
	word32 s1_88
	word32 ra_19 = fdt_check_prop_offset_(ra, a0, a1, s5, s6, dwLoc08, dwArg18, dwArg58, dwArg78, out s0_20, out s1_88, out a0_13, out a4_16, out a5_17, out s2_22, out s3_23, out s5_25, out s6_26)
	branch a0_13 < 0<32> l2302C562
l2302C562:
	a0Out = a0_13
	a4Out = a4_16
	a5Out = a5_17
	s2Out = s2_22
	s3Out = s3_23
	s5Out = s5_25
	s6Out = s6_26
	return ra_19
l2302C554:
l2302C55E_thunk_nextprop_.part.0:
	word32 a0_38
	word32 a4_41
	word32 a5_42
	word32 s2_47
	word32 s3_48
	word32 s5_50
	word32 s6_51
	word32 ra_44 = nextprop_.part.0(ra_19, s0_20, a0_13, s5_25, s6_26, dwArg18, dwArg58, dwArg78, dwArg0128, out a0_38, out a4_41, out a5_42, out s2_47, out s3_48, out s5_50, out s6_51)
	a0Out = a0_38
	a4Out = a4_41
	a5Out = a5_42
	s2Out = s2_47
	s3Out = s3_48
	s5Out = s5_50
	s6Out = s6_51
	return ra_44
fdt_next_property_offset_exit:


word32 fdt_get_property_namelen_(word32 ra, word32 a0, word32 a1, word32 a2, word32 a5, word32 dwArg08, word32 dwArg28, word32 dwArg48, word32 dwArgF8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_getprop
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 ra s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_get_property_namelen__entry:
l2302C56A:
	word32 a0_120
	word32 s6_132
	word32 s2_128
	word32 s3_129
	word32 s5_131
	word32 a4_107
	word32 a5_105
	word32 ra_126 = fdt_first_property_offset(ra, a0, a1, a5, a2, dwLoc18, dwArg28, dwArg48, dwArgF8, out a0_120, out a4_107, out a5_105, out s2_128, out s3_129, out s5_131, out s6_132)
l2302C58A:
	word32 s1_137
	word32 s0_139 = a0_120
	branch a0_120 >= 0<32> l2302C59C
l2302C59C:
	word32 a0_60
	ra_126 = fdt_get_property_by_offset_(ra_126, s3_129, a0_120, s5_131, s6_132, dwLoc18, dwArg08, dwArg28, dwArg48, out a0_60, out a4_107, out a5_105, out s2_128, out s3_129, out s5_131, out s6_132)
	branch a0_60 == 0<32> l2302C5F4
l2302C5F4:
	s0_139 = 0xFFFFFFF3<32>
l2302C5AA:
	word32 a0_85
	word32 a5_88
	word32 s4_93
	word32 a4_261
	word32 a5_262
	word32 s0_90 = fdt_get_string(s3_129, fdt32_ld(a0_60 + 8<32>, out a4_261, out a5_262), fp + -36<i32>, out s1_137, out a0_85, out a3, out a5_88, out s2_128, out s3_129, out s4_93)
	branch a0_85 != 0<32> l2302C5C6
l2302C5C6:
	branch s4_93 != a5_88 l2302C5BC
l2302C5CC:
	word32 a1_263
	word32 a2_264
	branch memcmp(a0_85, s6_132, s4_93, out a1_263, out a2_264, out a3, out a4_107, out a5_105) != 0<32> l2302C5BC
l2302C5D6:
	branch s5_131 == 0<32> l2302C5DE
l2302C5DA:
	Mem110[s5_131:word32] = s0_90
l2302C5BC:
	ra_126 = fdt_next_property_offset(ra_126, s3_129, s0_90, s5_131, s6_132, dwLoc18, dwArg28, dwArg48, dwArgF8, out a0_120, out a4_107, out a5_105, out s2_128, out s3_129, out s5_131, out s6_132)
l2302C590:
	s1_137 = 0<32>
	branch s2_128 == 0<32> l2302C5DE
l2302C596:
	Mem140[s2_128:word32] = s0_139
l2302C5DE:
	0<32> = dwArg0128
	s1Out = s1_137
	a0Out = s1_137
	a3Out = a3
	a4Out = a4_107
	a5Out = a5_105
	s2Out = s2_128
	s3Out = s3_129
	s5Out = s5_131
	s6Out = s6_132
	return ra_126
fdt_get_property_namelen__exit:


word32 fdt_getprop_namelen(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg08, word32 dwArg28, word32 dwArgD8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_getprop
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_getprop_namelen_entry:
l2302C5F8:
	word32 a0_15
	word32 a3_18
	word32 s1_25
	word32 s2_26
	word32 s3_27
	word32 s5_29
	word32 s6_30
	word32 a4_19
	word32 a5_20
	word32 ra_23 = fdt_get_property_namelen_(ra, a0, a1, a2, fp + 0xFFFFFFEC<32>, dwLoc18, dwArg08, dwArg28, dwArgD8, dwArg0108, out s1_25, out a0_15, out a3_18, out a4_19, out a5_20, out s2_26, out s3_27, out s5_29, out s6_30)
	word32 s0_35 = a0_15
	branch a0_15 == 0<32> l2302C632
l2302C60C:
	a5_20 = 0xF<32>
	word32 a5_123
	branch fdt32_ld(s1_25 + 20<i32>, out a4_19, out a5_123) >u 0xF<32> l2302C63E
l2302C61A:
	a5_20 = 3<32>
	branch false l2302C63E
l2302C622:
	a5_20 = 7<32>
	word32 a5_124
	branch fdt32_ld(a0_15 + 4<i32>, out a4_19, out a5_124) <=u 7<32> l2302C63E
l2302C63E:
	s0_35 = a0_15 + 0xC<32>
l2302C630:
	s0_35 = a0_15 + 0x10<32>
l2302C632:
	s0Out = s0_35
	s1Out = s1_25
	a0Out = s0_35
	a1Out = a1_16
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_20
	s2Out = s2_26
	s3Out = s3_27
	s4Out = dwArg04
	s5Out = s5_29
	s6Out = s6_30
	s8Out = dwLoc1C
	return ra_23
fdt_getprop_namelen_exit:


word32 fdt_getprop(word32 ra, word32 a0, word32 a2, word32 dwArg08, word32 dwArg28, word32 dwArg44, word32 dwArgD8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_stringlist_count
//      fdt_stringlist_get
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      hal_board_cfg
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_getprop_entry:
l2302C642:
	word32 a1_21
	word32 a2_76
	word32 a3_77
	word32 a4_78
	word32 a5_79
	strlen(a2, out a1_21, out a2_76, out a3_77, out a4_78, out a5_79)
l2302C666_thunk_fdt_getprop_namelen:
	word32 a1_31
	word32 a3_33
	word32 a4_34
	word32 a5_35
	word32 s0_39
	word32 s1_40
	word32 s2_41
	word32 s3_42
	word32 s4_43
	word32 s5_44
	word32 s6_45
	word32 s8_46
	word32 a0_50
	word32 ra_38 = fdt_getprop_namelen(ra, a0, a1_21, dwArg44, dwArg08, dwArg28, dwArgD8, dwArg0108, out s0_39, out s1_40, out a0_50, out a1_31, out a3_33, out a4_34, out a5_35, out s2_41, out s3_42, out s4_43, out s5_44, out s6_45, out s8_46)
	s0Out = s0_39
	s1Out = s1_40
	a0Out = a0_50
	a1Out = a1_31
	a3Out = a3_33
	a4Out = a4_34
	a5Out = a5_35
	s2Out = s2_41
	s3Out = s3_42
	s4Out = s4_43
	s5Out = s5_44
	s6Out = s6_45
	s8Out = s8_46
	return ra_38
fdt_getprop_exit:


word32 fdt_stringlist_count(word32 ra, word32 a0, word32 a2, word32 s2, word32 dwArg08, word32 dwArg24, word32 dwArgB8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_init
//      hal_board_cfg
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_stringlist_count_entry:
l2302C66A:
	word32 a0_15
	word32 s3_27
	word32 s5_29
	word32 s6_30
	word32 s8_126
	word32 a5_124
	word32 s4_125
	word32 a3_122
	word32 a4_123
	word32 a1_121
	word32 s0_24
	word32 s1_100
	word32 s2_101
	word32 ra_23 = fdt_getprop(ra, a0, a2, s2, dwArg08, dwArg24, dwArgB8, dwArgE8, out s0_24, out s1_100, out a0_15, out a1_121, out a3_122, out a4_123, out a5_124, out s2_101, out s3_27, out s4_125, out s5_29, out s6_30, out s8_126)
	branch a0_15 == 0<32> l2302C68A
l2302C67E:
	s2_101 = a0_15 + s0_24
	s1_100 = a0_15
	s0_24 = 0<32>
l2302C686:
	branch s1_100 <u s2_101 l2302C698
l2302C698:
	word32 a1_127
	word32 a3_128
	word32 a4_129
	word32 a5_130
	s1_100 = s1_100 + (strnlen(s1_100, s2_101 - s1_100, out a1_127, out a3_128, out a4_129, out a5_130) + 1<32>)
	branch s2_101 <u s1_100 l2302C6B0
l2302C6B0:
	s0_24 = 0xFFFFFFF1<32>
l2302C6AC:
	s0_24 = s0_24 + 1<32>
l2302C68A:
	s0Out = s0_24
	s1Out = s1_100
	a0Out = s0_24
	s2Out = s2_101
	s3Out = s3_27
	s4Out = dwArg04
	s5Out = s5_29
	s6Out = s6_30
	s8Out = dwLoc1C
	return ra_23
fdt_stringlist_count_exit:


word32 fdt_stringlist_get(word32 ra, word32 a0, word32 a2, word32 dwArg14, word32 dwArgA8, word32 dwArgD8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      hal_board_cfg
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_stringlist_get_entry:
l2302C6B4:
	word32 a0_21
	word32 s1_31
	word32 s4_34
	word32 s5_35
	word32 s6_36
	word32 s0_189
	word32 s8_190
	word32 a5_133
	word32 a4_129
	word32 a3_125
	word32 a1_121
	word32 s2_150
	word32 s3_153
	word32 ra_29 = fdt_getprop(ra, a0, a2, dwLoc28, dwLoc08, dwArg14, dwArgA8, dwArgD8, out s0_189, out s1_31, out a0_21, out a1_121, out a3_125, out a4_129, out a5_133, out s2_150, out s3_153, out s4_34, out s5_35, out s6_36, out s8_190)
	word32 s0_41 = a0_21
	branch a0_21 != 0<32> l2302C6E8
l2302C6E8:
	s2_150 = s2_150 + a0_21
l2302C6EC:
	branch s0_41 <u s2_150 l2302C6F6
l2302C6F6:
	word32 a5_191
	word32 a0_48 = strnlen(s0_41, s2_150 - s0_41, out a1_121, out a3_125, out a4_129, out a5_191)
	a5_133 = a0_48 + 1<i32> + s0_41
	branch s2_150 >=u a5_133 l2302C714
l2302C714:
	branch s3_153 != 0<32> l2302C71E
l2302C71E:
	s3_153 = s3_153 + 0xFFFFFFFF<32>
	s0_41 = a5_133
l2302C718:
	branch s1_31 == 0<32> l2302C6D8
l2302C71A:
	Mem61[a0_48:word32] = s1_31
l2302C70C:
	a5_133 = 0xFFFFFFF1<32>
	branch s1_31 == 0<32> l2302C6D0
l2302C6F0:
	branch s1_31 == 0<32> l2302C6D0
l2302C6F2:
	a5_133 = 0xFFFFFFFF<32>
l2302C710:
	Mem66[a5_133:word32] = s1_31
l2302C6CE:
	branch s1_31 != 0<32> l2302C6D4
l2302C6D4:
	Mem68[a5_133:word32] = s1_31
l2302C6D0:
	s0_41 = 0<32>
l2302C6D8:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_31
	a0Out = s0_41
	a1Out = a1_121
	a2Out = dwArg0100
	a3Out = a3_125
	a4Out = a4_129
	a5Out = a5_133
	s2Out = s2_150
	s3Out = s3_153
	s4Out = s4_34
	s5Out = s5_35
	s6Out = s6_36
	return ra_29
fdt_stringlist_get_exit:


word32 fdt32_ld(word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_ro_probe_
//      fdt_offset_ptr
// MayUse:  a0:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_ld_entry:
l2302C724:
	word32 a4_10 = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32)
	word32 a0_14 = CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) << 8<i32> | ((CONVERT(Mem0[a0:byte], byte, word32) << 24<i32> | CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) << 16<i32>) | a4_10)
	a4Out = a4_10
	return a0_14
fdt32_ld_exit:


word32 fdt_ro_probe_(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_string
//      fdt_get_name
//      fdt_subnode_offset
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
fdt_ro_probe__entry:
l2302C742:
	word32 a5_17
	word32 a4_51
	word32 a0_10 = fdt32_ld(a0, out a4_51)
	branch a0_10 != 0xD00DFEED<32> l2302C786
l2302C786:
	a5_17 = 0xFFFFFFF7<32>
	branch a0_10 != 0x2FF20112<32> l2302C77C
l2302C794:
	a5_17 = 0<32>
	word32 a4_54
	branch fdt32_ld(a0 + 36<i32>, out a4_54) != 0<32> l2302C77C
l2302C7A0:
	a5_17 = 0xFFFFFFF9<32>
l2302C75A:
	a5_17 = 0xFFFFFFF6<32>
	word32 a4_52
	branch fdt32_ld(a0 + 20<i32>, out a4_52) <=u 1<32> l2302C77C
l2302C76A:
	a5_17 = 0<32>
	word32 a4_53
	branch fdt32_ld(a0 + 24<i32>, out a4_53) <=u 0x11<32> l2302C77C
l2302C77A:
	a5_17 = 0xFFFFFFF6<32>
l2302C77C:
	a5Out = a5_17
	return a5_17
fdt_ro_probe__exit:


word32 fdt_offset_ptr(word32 a0, word32 a1, word32 a2, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_next_tag
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 a5 s2 s3 s4
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
fdt_offset_ptr_entry:
l2302C7A4:
	word32 a4_24
	word32 s2_26 = fdt32_ld(a0 + 8<32>, out a4_24) + a1
	word32 a5_27 = 0<32>
	branch s2_26 <u a1 l2302C808
l2302C7C8:
	word32 s4_28 = s2_26 + a2
	a5_27 = 0<32>
	branch s4_28 <u s2_26 l2302C808
l2302C7D2:
	a5_27 = 0<32>
	branch fdt32_ld(a0 + 4<i32>, out a4_24) <u s4_28 l2302C808
l2302C7E0:
	branch fdt32_ld(a0 + 20<i32>, out a4_24) <=u 0x10<32> l2302C804
l2302C7EE:
	word32 s1_40 = a2 + a1
	a5_27 = 0<32>
	branch s1_40 <u a1 l2302C808
l2302C7F6:
	a5_27 = 0<32>
	branch fdt32_ld(a0 + 36<i32>, out a4_24) <u s1_40 l2302C808
l2302C804:
	a5_27 = a0 + s2_26
l2302C808:
	a2Out = dwArg48
	a4Out = a4_24
	a5Out = a5_27
	s2Out = s2_26
	s3Out = a1
	s4Out = dwArg04
	return a5_27
fdt_offset_ptr_exit:


word32 fdt_next_tag(word32 ra, word32 a0, word32 a1, word32 a2, word32 s5, word32 s6, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg48, word32 dwArg88, word32 dwArgA8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_first_property_offset
//      fdt_check_node_offset_
//      fdt_check_prop_offset_
//      fdt_next_node
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a4 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_next_tag_entry:
l2302C81A:
	Mem23[0xFFFFFFF8<32>:word32] = a2
	word32 a2_30
	word32 s2_36
	word32 s3_37
	word32 s4_38
	word32 a5_122
	word32 a4_120
	branch fdt_offset_ptr(a0, a1, 4<32>, out a2_30, out a4_120, out a5_122, out s2_36, out s3_37, out s4_38) != 0<32> l2302C842
l2302C842:
	word32 a0_41 = Mem23[a5_122:word32]
	Mem55[s2_36:word32] = 0xFFFFFFF5<32>
	word32 s1_53 = a5_122 << 0x18<u32> | a5_122 >>u 0x18<u32> | (a5_122 >>u 8<u32> & 255<i32>) << 16<i32> | (a5_122 >>u 16<i32> & 255<i32>) << 8<i32>
	a4_120 = 8<32>
	a5_122 = s1_53 + -1<i32>
	branch s1_53 >u 0xFFFFFFF7<32> l2302C83E
l2302C878:
	word32 a5_62 = Mem55[(s1_53 + -1<i32> << 2<i32>) + 0x23077060<32>:word32]
	word32 s2_64
	word32 s3_65
	word32 s4_66
	word32 ra_67
	word32 s0_68
	word32 s1_69
	word32 s5_70
	word32 s6_71
	word32 a5_72
	word32 a0_74
	word32 a4_76
	call a5_62 (retsize: 0;)
		uses: a0:a0_41,a1:a1,a2:a2_30,a4:0x23077060<32>,a5:a5_62,ra:ra,s0:s4_38 + 4<i32>,s1:s1_53,s2:s2_36,s3:s3_37,s4:s4_38,s5:s5,s6:s6,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0048:dwArg28,Stack +0068:dwArg48,Stack +00A8:dwArg88,Stack +00C8:dwArgA8
		defs: a0:a0_74,a4:a4_76,a5:a5_72,ra:ra_67,s0:s0_68,s1:s1_69,s2:s2_64,s3:s3_65,s4:s4_66,s5:s5_70,s6:s6_71
	s0Out = s0_68
	s1Out = s1_69
	a0Out = a0_74
	a4Out = a4_76
	a5Out = a5_72
	s2Out = s2_64
	s3Out = s3_65
	s4Out = s4_66
	s5Out = s5_70
	s6Out = s6_71
	return ra_67
l2302C83E:
l2302C8B6:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = 9<32>
	a0Out = 9<32>
	a4Out = a4_120
	a5Out = a5_122
	s2Out = s2_36
	s3Out = s3_37
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	return ra
fdt_next_tag_exit:


word32 fdt_check_node_offset_(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg08, word32 dwArg28, word32 dwArg68, word32 dwArg88, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_name
//      fdt_first_property_offset
//      fdt_next_node
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0088:[0..31]
// LiveOut: a0 a4 a5 ra s0 s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_check_node_offset__entry:
l2302C928:
	word32 a0_13
	branch a1 >= 0<32> l2302C93A
l2302C93A:
	a5 = a1 & 3<i32>
	branch (a1 & 3<i32>) != 0<32> l2302C932
l2302C940:
	word32 a5_102
	word32 s4_103
	ra = fdt_next_tag(ra, a0, a1, fp + 0xFFFFFFEC<32>, s5, s6, dwLoc20, dwLoc1C, dwArg08, dwArg28, dwArg68, dwArg88, out s0, out s1, out a0_13, out a4, out a5_102, out s2, out s3, out s4_103, out s5, out s6)
	a5 = 1<32>
	branch a0_13 != 1<32> l2302C932
l2302C94C:
l2302C932:
	a0_13 = 0xFFFFFFFC<32>
l2302C934:
	s0Out = s0
	s1Out = s1
	a0Out = a0_13
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return ra
fdt_check_node_offset__exit:


word32 fdt_check_prop_offset_(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg08, word32 dwArg28, word32 dwArg68, word32 dwArg88, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_by_offset_
//      fdt_next_property_offset
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0088:[0..31]
// LiveOut: a0 a4 a5 ra s0 s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_check_prop_offset__entry:
l2302C950:
	word32 a0_13
	branch a1 >= 0<32> l2302C962
l2302C962:
	a5 = a1 & 3<i32>
	branch (a1 & 3<i32>) != 0<32> l2302C95A
l2302C968:
	word32 a5_102
	word32 s4_103
	ra = fdt_next_tag(ra, a0, a1, fp + 0xFFFFFFEC<32>, s5, s6, dwLoc20, dwLoc1C, dwArg08, dwArg28, dwArg68, dwArg88, out s0, out s1, out a0_13, out a4, out a5_102, out s2, out s3, out s4_103, out s5, out s6)
	a5 = 3<32>
	branch a0_13 != 3<32> l2302C95A
l2302C974:
l2302C95A:
	a0_13 = 0xFFFFFFFC<32>
l2302C95C:
	s0Out = s0
	s1Out = s1
	a0Out = a0_13
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return ra
fdt_check_prop_offset__exit:


word32 fdt_next_node(word32 ra, word32 s0, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg18, word32 dwArg38, word32 dwArg78, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_subnode_offset
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a5 ra s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_next_node_entry:
l2302C978:
	word32 a5_164
	word32 s3_174
	word32 s5_176
	word32 s1_170
	word32 s2_100 = a0
	branch a1 >= 0<32> l2302C9BA
l2302C9BA:
	word32 a0_25
	word32 s0_187
	word32 a4_188
	ra = fdt_check_node_offset_(ra, a0, a1, s5, s6, dwLoc28, dwLoc08, dwArg38, s5, out s0_187, out s1_170, out a0_25, out a4_188, out a5_164, out s2_100, out s3_174, out s5_176, out s6)
	s0 = a0_25
	branch a0_25 >= 0<32> l2302C992
l2302C992:
	s5_176 = 1<32>
l2302C998:
	word32 a0_58
	word32 s4_69
	word32 a4_189
	ra = fdt_next_tag(ra, s2_100, s0, fp + -36<i32>, s5_176, s6, dwLoc30, dwLoc2C, dwLoc08, dwArg18, s5, dwArg78, out s0, out s1_170, out a0_58, out a4_189, out a5_164, out s2_100, out s3_174, out s4_69, out s5_176, out s6)
	branch a0_58 == s3_174 l2302C9DA
l2302C9DA:
	branch s1_170 == 0<32> l2302C998
l2302C9DC:
	s1_170 = Mem48[a5_164:word32]
	Mem77[a5_164 + 0xFFFFFFFF<32>:word32] = s1_170
	a5_164 = a5_164 + 0xFFFFFFFF<32>
	branch a5_164 >= 0xFFFFFFFF<32> l2302C998
l2302C9E6:
l2302C9A8:
	branch a0_58 == s4_69 l2302C9EA
l2302C9EA:
	branch s0 >= 0<32> l2302C9F8
l2302C9F0:
	a5_164 = 0xFFFFFFF8<32>
	branch s0 != 0xFFFFFFF8<32> l2302C9C6
l2302C9F6:
	branch s1_170 != 0<32> l2302C9C6
l2302C9F8:
	s0 = 0xFFFFFFFF<32>
l2302C9AC:
	branch a0_58 != s5_176 l2302C998
l2302C9B0:
	branch s1_170 == 0<32> l2302C9C6
l2302C9B2:
	s1_170 = Mem48[a5_164:word32]
	Mem84[a5_164 + 1<32>:word32] = s1_170
	a5_164 = a5_164 + 1<32>
l2302C9C6:
	0<32> = dwArg0128
	s1Out = s1_170
	a0Out = s0
	a5Out = a5_164
	s2Out = s2_100
	s3Out = s3_174
	s5Out = s5_176
	s6Out = s6
	return ra
fdt_next_node_exit:


void cmd_blog_info_dump(word32 ra, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5
// Preserved: a6 sp
cmd_blog_info_dump_entry:
l2302C9FC:
	word32 a3_32
	word32 a3_49
	word32 a3_77
	word32 s3_113
	word32 a2_642
	word32 a4_643
	word32 s3_652
	word32 a4_649
	word32 a1_641
	word32 a0_646
	word32 a1_647
	word32 s2_651
	word32 a2_648
	word32 a5_650
	word32 a5_644
	word32 s1_645
	word32 a0_640
	word32 t1_639
	word32 s4_653
	word32 s5_654
	word32 s6_655
	word32 s7_656
	word32 s8_657
	word32 s9_658
	word32 s10_659
	word32 s11_660
	word32 s1_661
	word32 a0_662
	word32 a1_663
	word32 a2_664
	word32 a4_665
	word32 a5_666
	word32 s2_667
	word32 s3_668
	word32 s4_669
	word32 s5_670
	word32 s6_671
	word32 s7_672
	word32 s8_673
	word32 s9_674
	word32 s10_675
	word32 s11_676
	word32 s1_677
	word32 a1_678
	word32 a2_679
	word32 a3_680
	word32 a4_681
	word32 a5_682
	word32 s2_683
	word32 s4_684
	word32 s5_685
	word32 s6_686
	word32 s7_687
	word32 s8_688
	word32 s9_689
	word32 s10_690
	word32 s11_691
	word32 a0_102
	word32 ra_108 = bl_printk(bl_printk(bl_printk(memset(ra, fp + -176<i32>, 0<32>, 128<i32>, out t1_639, out a0_640, out a1_641, out a2_642, out a3_32, out a4_643, out a5_644), 0x230770E4<32>, a3_32, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_645, out a0_646, out a1_647, out a2_648, out a3_49, out a4_649, out a5_650, out s2_651, out s3_652, out s4_653, out s5_654, out s6_655, out s7_656, out s8_657, out s9_658, out s10_659, out s11_660), 0x230770FC<32>, a3_49, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_661, out a0_662, out a1_663, out a2_664, out a3_77, out a4_665, out a5_666, out s2_667, out s3_668, out s4_669, out s5_670, out s6_671, out s7_672, out s8_673, out s9_674, out s10_675, out s11_676), 0x23077114<32>, a3_77, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_677, out a0_102, out a1_678, out a2_679, out a3_680, out a4_681, out a5_682, out s2_683, out s3_113, out s4_684, out s5_685, out s6_686, out s7_687, out s8_688, out s9_689, out s10_690, out s11_691)
	word32 s0_122 = 0x23082D4C<32>
	word32 s3_123 = s3_113 + -580<i32>
	word32 s8_124 = 128<i32>
	word32 s7_125 = 0x23077000<32>
l2302CA8C:
	branch s0_122 >=u s3_123 l2302CAA6
l2302CA90:
	word32 a1_137
	word32 a2_692
	word32 a4_693
	word32 a5_694
	word32 a3_134
	branch s8_124 >=u strlen(a0_102, out a1_137, out a2_692, out a3_134, out a4_693, out a5_694) l2302CAC0
l2302CAC0:
	word32 s0_142
	branch CONVERT(bLocB0, byte, word32) == 0<32> l2302CAE4
l2302CAC6:
	s0_142 = Mem28[a1_137 + 4<i32>:word32]
	word32 a1_722
	word32 a2_723
	word32 a3_724
	word32 a4_725
	word32 a5_726
	a0_102 = strcmp(fp + -176<i32>, a1_137, out a1_722, out a2_723, out a3_724, out a4_725, out a5_726)
	branch a0_102 != 0<32> l2302CAD4
l2302CAD4:
	word32 a1_727
	word32 a2_728
	word32 a3_729
	word32 a4_730
	word32 a5_731
	word32 t1_732
	word32 a0_733
	word32 a1_734
	word32 a2_735
	word32 a4_736
	word32 a5_737
	ra_108 = memset(ra_108, fp + -176<i32>, 0<32>, strlen(fp + -176<i32>, out a1_727, out a2_728, out a3_729, out a4_730, out a5_731), out t1_732, out a0_733, out a1_734, out a2_735, out a3_134, out a4_736, out a5_737)
l2302CAE4:
	word32 a0_187
	word32 s4_199
	word32 s1_712
	word32 a2_713
	word32 a3_714
	word32 a4_715
	word32 a5_716
	word32 s2_717
	word32 s5_718
	word32 s9_719
	word32 s10_720
	word32 s11_721
	word32 a1_188
	word32 s6_201
	ra_108 = bl_printk(ra_108, s7_125 + 320<i32>, a3_134, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_712, out a0_187, out a1_188, out a2_713, out a3_714, out a4_715, out a5_716, out s2_717, out s3_123, out s4_199, out s5_718, out s6_201, out s7_125, out s8_124, out s9_719, out s10_720, out s11_721)
	branch CONVERT(bLocB0, byte, word32) != 0<32> l2302CB1E
l2302CB1E:
	s0_142 = Mem28[a0_187 + 4<i32>:word32]
	word32 a2_738
	word32 a3_739
	word32 a4_740
	word32 a5_741
	a0_102 = strcmp(a0_187, fp + -176<i32>, out a1_188, out a2_738, out a3_739, out a4_740, out a5_741)
	branch a0_102 == 0<32> l2302CAD0
l2302CB28:
l2302CAFA:
	s0_142 = Mem28[a1_188 + 4<i32>:word32]
	a0_102 = fp + -176<i32>
	word32 s1_225 = s4_199 + -580<i32>
	word32 a4_742
	word32 a5_743
	word32 a1_226 = strcpy(fp + -176<i32>, a1_188, out a4_742, out a5_743)
l2302CB06:
	branch s1_225 >=u s6_201 l2302CAD0
l2302CB0A:
	s0_142 = Mem28[a1_226 + 4<i32>:word32]
	word32 a3_240
	word32 a5_242
	a0_102 = strstr(ra_108, a0_102, a1_226, out a3_240, out a5_242)
	word32 s1_247 = Mem28[a5_242 + 4<i32>:word32]
	a1_226 = a0_102
	branch a0_102 == a5_242 l2302CB2A
l2302CB2A:
	word32 a2_744
	word32 a3_745
	word32 a4_746
	word32 a5_747
	word32 s4_748
	word32 s5_749
	word32 s10_750
	word32 s11_751
	word32 s2_268
	word32 s9_275
	ra_108 = bl_printk(ra_108, s7_125 + 320<i32>, a3_240, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_247, out a0_102, out a1_226, out a2_744, out a3_745, out a4_746, out a5_747, out s2_268, out s3_123, out s4_748, out s5_749, out s6_201, out s7_125, out s8_124, out s9_275, out s10_750, out s11_751)
l2302CB3C:
	branch s2_268 >=u s9_275 l2302CB1A
l2302CB40:
	s1_247 = Mem28[a1_226 + 4<i32>:word32]
	word32 a3_288
	word32 a5_752
	a0_102 = strstr(ra_108, Mem28[s2_268 + 4<i32>:int32], a1_226, out a3_288, out a5_752)
	a1_226 = a0_102
	branch a0_102 != Mem28[s2_268 + 4<i32>:int32] l2302CB64
l2302CB54:
	word32 a2_753
	word32 a3_754
	word32 a4_755
	word32 a5_756
	word32 s4_757
	word32 s5_758
	word32 s10_759
	word32 s11_760
	ra_108 = bl_printk(ra_108, s7_125 + 320<i32>, a3_288, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_247, out a0_102, out a1_226, out a2_753, out a3_754, out a4_755, out a5_756, out s2_268, out s3_123, out s4_757, out s5_758, out s6_201, out s7_125, out s8_124, out s9_275, out s10_759, out s11_760)
l2302CB64:
	s2_268 = s2_268 + 8<32>
l2302CB1A:
	s1_225 = s1_247 + 8<32>
l2302CAD0:
	s0_122 = s0_142 + 8<32>
l2302CA9A:
	word32 s1_695
	word32 a0_696
	word32 a1_697
	word32 a2_698
	word32 a3_699
	word32 a4_700
	word32 a5_701
	word32 s2_702
	word32 s3_703
	word32 s4_704
	word32 s5_705
	word32 s6_706
	word32 s7_707
	word32 s8_708
	word32 s9_709
	word32 s10_710
	word32 s11_711
	bl_printk(ra_108, 0x2307712C<32>, a3_134, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_695, out a0_696, out a1_697, out a2_698, out a3_699, out a4_700, out a5_701, out s2_702, out s3_703, out s4_704, out s5_705, out s6_706, out s7_707, out s8_708, out s9_709, out s10_710, out s11_711)
l2302CAA6:
	return
cmd_blog_info_dump_exit:


word32 blog_strcpy.part.0(word32 a0, word32 a1, word32 a2, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blog_hexdump_out
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a3 a4 a5 a6
// Preserved: sp
blog_strcpy.part.0_entry:
l2302CB68:
	word32 a5_16 = a2
	word32 a0_6 = a0 - a2
l2302CB70:
	word32 a4_10 = CONVERT(Mem9[a5_16:byte], byte, word32)
	branch a4_10 != 0<32> l2302CB7C
l2302CB7C:
	branch a5_16 + a0_6 >u 255<i32> l2302CB76
l2302CB84:
	a1 = a1 + 1<32>
	Mem17[a1 + 4095<i32>:byte] = SLICE(a4_10, byte, 0)
	a5_16 = a5_16 + 1<32>
l2302CB76:
	a3Out = 255<i32>
	return a5_16 - a2
blog_strcpy.part.0_exit:


void cmd_blog_set_level(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 s2, word32 dwArg08, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 tp
// Preserved: sp
cmd_blog_set_level_entry:
l2302CB8E:
	word32 a3_249
	word32 ra_252
	branch a2 == 3<32> l2302CBD0
l2302CBD0:
	word32 s3_101
	word32 a0_222
	word32 a3_108
	word32 a2_529
	word32 a1_528
	word32 a3_530
	word32 a4_531
	word32 a5_532
	word32 a0_27 = strcmp(a0, 0x23077164<32>, out a1_528, out a2_529, out a3_530, out a4_531, out a5_532)
	branch a0_27 == 0<32> l2302CC5E
l2302CC5E:
	s3_101 = 0<32>
l2302CBE2:
	word32 a4_569
	word32 a5_570
	word32 a1_566
	word32 a3_568
	word32 a2_567
	word32 a0_40 = strcmp(a0_27, 0x23077168<32>, out a1_566, out a2_567, out a3_568, out a4_569, out a5_570)
	s3_101 = 1<32>
	branch a0_40 == 0<32> l2302CC60
l2302CBF4:
	word32 a4_578
	word32 a5_579
	word32 a1_575
	word32 a3_577
	word32 a2_576
	word32 a0_53 = strcmp(a0_40, 0x23077170<32>, out a1_575, out a2_576, out a3_577, out a4_578, out a5_579)
	s3_101 = 2<32>
	branch a0_53 == 0<32> l2302CC60
l2302CC06:
	word32 a5_584
	word32 a2_581
	word32 a4_583
	word32 a3_582
	word32 a1_580
	word32 a0_66 = strcmp(a0_53, 0x23077178<32>, out a1_580, out a2_581, out a3_582, out a4_583, out a5_584)
	s3_101 = 3<32>
	branch a0_66 == 0<32> l2302CC60
l2302CC18:
	word32 a3_587
	word32 a4_588
	word32 a5_589
	word32 a2_586
	word32 a1_585
	word32 a0_79 = strcmp(a0_66, 0x23077180<32>, out a1_585, out a2_586, out a3_587, out a4_588, out a5_589)
	s3_101 = 4<32>
	branch a0_79 == 0<32> l2302CC60
l2302CC2A:
	word32 a4_593
	word32 a5_594
	word32 a1_590
	word32 a3_592
	word32 a2_591
	word32 a0_92 = strcmp(a0_79, 0x23077188<32>, out a1_590, out a2_591, out a3_592, out a4_593, out a5_594)
	s3_101 = 5<32>
	branch a0_92 == 0<32> l2302CC60
l2302CC3C:
	s3_101 = 6<32>
	word32 a2_596
	word32 a5_598
	word32 a4_597
	word32 a1_595
	branch strcmp(a0_92, 0x23077190<32>, out a1_595, out a2_596, out a3_108, out a4_597, out a5_598) == 0<32> l2302CC60
l2302CC60:
	word32 a3_572
	word32 a5_574
	word32 a4_573
	word32 a2_571
	word32 a1_123
	word32 a0_119 = strlen(s0, out a1_123, out a2_571, out a3_572, out a4_573, out a5_574)
	word32 a5_125 = 0<32>
	word32 a4_126 = 0<32>
	a3_108 = 46<i32>
l2302CC70:
	branch a4_126 < a0_119 l2302CC8E
l2302CC8E:
	branch CONVERT(Mem19[s0 + a4_126:byte], byte, word32) != 46<i32> l2302CC9C
l2302CC9A:
	a5_125 = a5_125 + 1<32>
l2302CC9C:
	a4_126 = a4_126 + 1<32>
l2302CC74:
	word32 s2_142
	word32 s0_141
	branch a5_125 == 0<32> l2302CCA0
l2302CCA0:
	s0_141 = 0x23082DBC<32>
	s2_142 = 0x23082D4C<32>
l2302CC76:
	branch a5_125 == 1<32> l2302CCCA
l2302CCCA:
	s0_141 = 0x23082E2C<32>
	s2_142 = 0x23082DBC<32>
l2302CC7C:
	branch a5_125 == 2<32> l2302CCDC
l2302CCDC:
	s0_141 = 0x23082E2C<32>
	s2_142 = 0x23082E2C<32>
l2302CCB0:
	word32 s0_157 = (s0_141 - s2_142 >> 3<i32>) + 0xFFFFFFFF<32>
	word32 s6_158 = 0<32>
l2302CCBA:
	branch s0_157 >= s6_158 l2302CCEE
l2302CCEE:
	word32 s5_164 = s6_158 + s0_157
	word32 s4_168 = (s5_164 >> 1<u32> << 3<u32>) + s2_142
	word32 a2_615
	word32 a4_616
	word32 a5_617
	word32 a0_170 = strcmp(Mem19[s4_168 + 4<i32>:int32], a1_123, out a1_123, out a2_615, out a3_108, out a4_616, out a5_617)
	branch a0_170 >= 0<32> l2302CD0E
l2302CD0E:
	branch a0_170 == 0<32> l2302CD16
l2302CD16:
	Mem183[Mem19[s4_168:int32]:byte] = SLICE(s3_101, byte, 0)
	0<32> = dwArgA8
l2302CD44_thunk_bl_printk:
	word32 s1_618
	word32 a0_619
	word32 a1_620
	word32 a2_621
	word32 a3_622
	word32 a4_623
	word32 a5_624
	word32 s2_625
	word32 s3_626
	word32 s4_627
	word32 s5_628
	word32 s6_629
	word32 s7_630
	word32 s8_631
	word32 s9_632
	word32 s10_633
	word32 s11_634
	bl_printk(ra, 0x23077208<32>, a3_108, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_618, out a0_619, out a1_620, out a2_621, out a3_622, out a4_623, out a5_624, out s2_625, out s3_626, out s4_627, out s5_628, out s6_629, out s7_630, out s8_631, out s9_632, out s10_633, out s11_634)
	return
l2302CD10:
	s0_157 = (s5_164 >> 1<u32>) + -1<i32>
l2302CD08:
	s6_158 = (s5_164 >> 1<u32>) + 1<i32>
l2302CCC0:
	a0_222 = 0x230771EC<32>
l2302CC82:
	a0_222 = 0x230771B8<32>
l2302CC4E:
	a0_222 = 0x23077198<32>
l2302CC58:
	word32 s5_608
	word32 s2_605
	word32 a1_601
	word32 a4_603
	word32 a0_600
	word32 a5_604
	word32 a2_602
	word32 s1_599
	word32 s6_609
	word32 s4_607
	word32 s3_606
	word32 s7_610
	word32 s8_611
	word32 s9_612
	word32 s10_613
	word32 s11_614
	ra_252 = bl_printk(ra, a0_222, a3_108, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_599, out a0_600, out a1_601, out a2_602, out a3_249, out a4_603, out a5_604, out s2_605, out s3_606, out s4_607, out s5_608, out s6_609, out s7_610, out s8_611, out s9_612, out s10_613, out s11_614)
l2302CBA6:
	word32 a5_538
	word32 a0_534
	word32 s3_540
	word32 s2_539
	word32 a2_536
	word32 a1_535
	word32 s1_533
	word32 s11_548
	word32 s8_545
	word32 s10_547
	word32 s9_546
	word32 s5_542
	word32 s7_544
	word32 s6_543
	word32 s4_541
	word32 a4_537
	ra_252 = bl_printk(ra, 0x23077154<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_533, out a0_534, out a1_535, out a2_536, out a3_249, out a4_537, out a5_538, out s2_539, out s3_540, out s4_541, out s5_542, out s6_543, out s7_544, out s8_545, out s9_546, out s10_547, out s11_548)
l2302CBB2:
	0<32> = dwArgA8
l2302CBCC_thunk_bl_printk:
	word32 s9_563
	word32 s11_565
	word32 s10_564
	word32 s6_560
	word32 s8_562
	word32 s7_561
	word32 s3_557
	word32 s5_559
	word32 s4_558
	word32 a4_554
	word32 s2_556
	word32 a5_555
	word32 a1_551
	word32 a3_553
	word32 a2_552
	word32 a0_550
	word32 s1_549
	bl_printk(ra_252, 0x230771D8<32>, a3_249, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_549, out a0_550, out a1_551, out a2_552, out a3_553, out a4_554, out a5_555, out s2_556, out s3_557, out s4_558, out s5_559, out s6_560, out s7_561, out s8_562, out s9_563, out s10_564, out s11_565)
	return
cmd_blog_set_level_exit:


word32 blog_port_output(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, ptr32 & a0Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blog_hexdump_out
// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 ra s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
blog_port_output_entry:
l2302CD48:
l2302CD52_thunk_bl_printk:
	word32 a0_12
	word32 s6_26
	word32 s7_27
	word32 s1_41
	word32 a1_42
	word32 a2_43
	word32 a3_44
	word32 a4_45
	word32 a5_46
	word32 s2_47
	word32 s3_48
	word32 s4_49
	word32 s5_50
	word32 s8_51
	word32 s9_52
	word32 s10_53
	word32 s11_54
	word32 ra_18 = bl_printk(ra, 0x230770DC<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_41, out a0_12, out a1_42, out a2_43, out a3_44, out a4_45, out a5_46, out s2_47, out s3_48, out s4_49, out s5_50, out s6_26, out s7_27, out s8_51, out s9_52, out s10_53, out s11_54)
	a0Out = a0_12
	s6Out = s6_26
	s7Out = s7_27
	return ra_18
blog_port_output_exit:


word32 blog_hexdump_out(word32 ra, word32 s1, word32 a0, word32 a3, word32 s2, word32 s9, word32 s10, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg5C, word32 dwArg6C, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      write_data
//      __ble_bytes_send
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +005C:[0..31] Stack +006C:[0..31]
// LiveOut: a0 a3 ra s0 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
blog_hexdump_out_entry:
l2302CD56:
	word32 s6_330 = a3
	word32 s0_337 = 0<32>
	word32 s7_331 = 0x42013000<32>
	a0_315 = a0
l2302CD88:
	word32 a0_315
	branch s0_337 <u s6_330 l2302CDAA
l2302CDAA:
	word32 s7_75
	word32 s8_76
	word32 a2_681
	word32 a4_683
	word32 s3_686
	word32 s10_689
	word32 s1_680
	word32 a5_684
	word32 s4_687
	word32 s5_688
	word32 s2_685
	word32 a3_682
	word32 a0_58
	word32 s11_135
	word32 s0_132
	word32 s6_100
	word32 s9_115
	word32 ra_123 = snprintf(ra, s7_331 + -1864<i32>, 256<i32>, 0x23077084<32>, s10, dwLoc28, dwArg04, dwArg20, a0, s1, dwArg6C, out s0_132, out s1_680, out a0_58, out a2_681, out a3_682, out a4_683, out a5_684, out s2_685, out s3_686, out s4_687, out s5_688, out s6_100, out s7_75, out s8_76, out s9_115, out s10_689, out s11_135)
	branch a0_58 <=u 256<i32> l2302CDD4
l2302CDD0:
	a0_58 = 256<i32>
l2302CDD4:
	word32 s10_134 = CONVERT(SLICE(a0_58, word16, 0), word16, word32)
	word32 s3_137 = s0_132
	word32 s5_139 = s0_132
	word32 s4_138 = 0<32>
	word32 s1_133 = CONVERT(SLICE(s8_76, word16, 0), word16, word32)
	word32 s2_136 = s7_75 + -1864<i32>
l2302CDEC:
	branch CONVERT(SLICE(s4_138, word16, 0), word16, word32) <u s1_133 l2302CE78
l2302CE78:
	branch s5_139 >= s6_100 l2302CECA
l2302CECA:
	word32 a3_701
	word32 a4_702
	word32 a5_703
	strncpy(fp + -72<i32>, 0x230770A0<32>, 8<32>, out a3_701, out a4_702, out a5_703)
l2302CE7C:
	word32 a2_705
	word32 s7_709
	word32 s8_710
	word32 a5_708
	word32 a3_706
	word32 a4_707
	word32 a0_704
	ra_123 = snprintf(ra_123, fp + -72<i32>, 8<32>, 0x23077098<32>, s10, dwLoc28, dwArg04, dwArg20, a0, s1, dwArg6C, out s0_132, out s1_133, out a0_704, out a2_705, out a3_706, out a4_707, out a5_708, out s2_136, out s3_137, out s4_138, out s5_139, out s6_100, out s7_709, out s8_710, out s9_115, out s10_134, out s11_135)
l2302CE94:
	word32 a3_722
	word32 s10_161 = s10_134 + blog_strcpy.part.0(s10_134, s2_136 + s10_134, fp + -72<i32>, out a3_722)
	s4_138 = s4_138 + 1<32>
	s10_134 = CONVERT(SLICE(s10_161, word16, 0), word16, word32)
	branch (s4_138 & 7<i32>) != 0<32> l2302CEC6
l2302CEB0:
	word32 a3_711
	s10_134 = CONVERT(SLICE(CONVERT(SLICE(s10_161, word16, 0), word16, word32) + blog_strcpy.part.0(CONVERT(SLICE(s10_161, word16, 0), word16, word32), s2_136 + CONVERT(SLICE(s10_161, word16, 0), word16, word32), s11_135 + 148<i32>, out a3_711), word16, 0), word16, word32)
l2302CEC6:
	s5_139 = s5_139 + 1<32>
l2302CDF6:
	word32 a3_690
	word32 s4_196 = CONVERT(SLICE(blog_strcpy.part.0(s10_134, s2_136 + s10_134, 0x230770A4<32>, out a3_690) + s10_134, word16, 0), word16, word32)
	word32 s5_197 = 94<i32>
	word32 a4_198 = 0x23077000<32>
l2302CE1A:
	branch CONVERT(SLICE(s3_137 - s0_132, word16, 0), word16, word32) <u s1_133 l2302CEDC
l2302CEDC:
	branch s3_137 >= s6_100 l2302CF18
l2302CEE0:
	branch s5_197 >=u CONVERT(Mem39[s9_115 + s3_137:byte], byte, word32) + -32<i32> l2302CEF4
l2302CEF0:
l2302CEF4:
	word32 s4_237
	word32 a2_713
	word32 s11_720
	word32 s10_719
	word32 s8_718
	word32 s7_717
	word32 a5_716
	word32 a3_714
	word32 a4_715
	word32 a0_712
	ra_123 = snprintf(ra_123, fp + -72<i32>, 8<32>, a4_198 + 168<i32>, s10, dwLoc28, dwArg04, dwArg20, a0, s1, dwArg6C, out s0_132, out s1_133, out a0_712, out a2_713, out a3_714, out a4_715, out a5_716, out s2_136, out s3_137, out s4_237, out s5_197, out s6_100, out s7_717, out s8_718, out s9_115, out s10_719, out s11_720)
	word32 a3_721
	s4_196 = CONVERT(SLICE(s4_237 + blog_strcpy.part.0(s4_237, s2_136 + s4_237, fp + -72<i32>, out a3_721), word16, 0), word16, word32)
	a4_198 = 0x23077000<32>
l2302CF18:
	s3_137 = s3_137 + 1<32>
l2302CE26:
	word32 a3_693
	word32 a4_694
	word32 a5_695
	word32 a2_692
	word32 a1_691
	branch strlen(0x2307676C<32>, out a1_691, out a2_692, out a3_693, out a4_694, out a5_695) + s4_196 <=u 256<i32> l2302CE52
l2302CE3C:
	word32 a2_697
	word32 a5_700
	word32 a3_698
	word32 a4_699
	word32 a1_696
	s4_196 = CONVERT(SLICE(256<i32> - strlen(0x2307676C<32>, out a1_696, out a2_697, out a3_698, out a4_699, out a5_700), word16, 0), word16, word32)
l2302CE52:
	word32 a3_294
	blog_strcpy.part.0(s4_196, s2_136 + s4_196, 0x2307676C<32>, out a3_294)
	ra = blog_port_output(ra_123, a3_294, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out a0_315, out s6_330, out s7_331)
	s0_337 = CONVERT(SLICE(s0_132 + s1_133, word16, 0), word16, word32)
l2302CD8C:
	s0Out = s0_337
	a0Out = a0_315
	a3Out = dwArg08
	s5Out = s4
	return dwArg68
blog_hexdump_out_exit:


word32 blog_init(word32 ra, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
blog_init_entry:
l2302CF1C:
	word32 a2_15
	word32 s11_157
	word32 s8_154
	word32 s9_155
	word32 s10_156
	word32 s5_151
	word32 s6_152
	word32 s7_153
	word32 s2_148
	word32 s3_149
	word32 s4_150
	word32 a3_145
	word32 a4_146
	word32 a5_147
	word32 s1_142
	word32 a0_143
	word32 a1_144
	word32 ra_19 = bl_printk(ra, 0x230770AC<32>, 2<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_142, out a0_143, out a1_144, out a2_15, out a3_145, out a4_146, out a5_147, out s2_148, out s3_149, out s4_150, out s5_151, out s6_152, out s7_153, out s8_154, out s9_155, out s10_156, out s11_157)
	word32 a5_35 = 0x23082D4C<32>
l2302CF44:
	branch a5_35 <u 0x23082DBC<32> l2302CF7A
l2302CF7A:
	a5_35 = Mem41[a2_15:word32] + 8<32>
	Mem45[a2_15:byte] = 2<8>
l2302CF48:
	word32 a5_48 = 0x23082DBC<32>
l2302CF5A:
	branch a5_48 <u 0x23082E2C<32> l2302CF84
l2302CF84:
	a5_48 = Mem54[a2_15:word32] + 8<32>
	Mem58[a2_15:byte] = 2<8>
l2302CF5E:
	word32 a5_61 = 0x23082E2C<32>
l2302CF70:
	branch a5_61 <u 0x23082E2C<32> l2302CF8E
l2302CF8E:
	a5_61 = Mem67[a2_15:word32] + 8<32>
	Mem71[a2_15:byte] = 2<8>
l2302CF74:
	return ra_19
blog_init_exit:


void wifiprov_ccc_cfg_changed()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
wifiprov_ccc_cfg_changed_entry:
l2302CF98:
	return
wifiprov_ccc_cfg_changed_exit:


void __bl_ble_sync_task(word32 ra, word32 s0, word32 a0, word32 a5, word32 s4, word32 s8, word32 s10, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s4:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 sp
__bl_ble_sync_task_entry:
l2302CF9A:
	cJSON_InitHooks(0x23082764<32>, a5)
	word32 a0_40
	word32 ra_141 = pro_trans_init(ra, a0 + 0xFFFEF0<32>, 0x2308276C<32>, mstatus, dwLoc0108, s8, out a0_40)
	Mem57[a0 + 1036<i32>:word32] = a0_40
	Mem58[a0 + 1566<i32>:byte] = 1<8>
	word32 a0_64
	word32 s3_485
	word32 a5_483
	word32 a3_481
	word32 s4_486
	word32 s2_484
	word32 s1_479
	word32 a2_480
	word32 a4_482
	word32 s0_67 = xQueueGenericCreateStatic(1<32>, 0<32>, 0<32>, a0 + 4<i32>, 3<32>, mstatus, s4, out s1_479, out a0_64, out a2_480, out a3_481, out a4_482, out a5_483, out s2_484, out s3_485, out s4_486)
	Mem78[a0_64:word32] = s0_67
	word32 a0_84
	word32 s4_491
	word32 s2_489
	word32 s1_487
	word32 s3_490
	word32 a5_488
	word32 a4_116
	word32 a3_117
	word32 a2_144
	word32 s0_107 = xQueueGenericCreateStatic(2<32>, 260<i32>, s0_67 + 256<i32>, s0_67 + 176<i32>, 0<32>, mstatus, s4, out s1_487, out a0_84, out a2_144, out a3_117, out a4_116, out a5_488, out s2_489, out s3_490, out s4_491)
	Mem98[s0_107 + 172<i32>:word32] = a0_84
	word32 s2_100 = 0x2000000<32>
l2302D038:
	word32 a5_109 = CONVERT(Mem98[s0_107 + 1568<i32>:byte], byte, word32)
	branch a5_109 == 0<32> l2302D07A
l2302D07A:
	word32 a0_118
	word32 a3_121
	word32 s4_497
	word32 a5_495
	word32 a2_493
	word32 s3_496
	word32 a4_494
	word32 a1_492
	word32 s1_127
	s0_107 = xQueueReceive(Mem98[s0_107 + 172<i32>:int32], fp + -308<i32>, s2_100 + 1808<i32>, a3_117, a4_116, a5_109, mstatus, dwLoc0138, dwLoc011C, dwLoc9C, s8, dwArg18, out s1_127, out a0_118, out a1_492, out a2_493, out a3_121, out a4_494, out a5_495, out s2_100, out s3_496, out s4_497)
	branch a0_118 != 1<32> l2302D0EC
l2302D0EC:
	a2_144 = pro_trans_reset(ra_141, Mem98[s0_107 + 1036<i32>:int32], 1<32>, mstatus, dwLoc0140, dwLoc0138, dwLocF0, dwLocEC, dwLocC8, dwLocA4, dwArg08, dwArg48, out a3_117, out a4_116)
l2302D08E:
	word32 a0_153 = Mem98[s0_107 + 1668<i32>:int32]
	branch a0_153 == 0<32> l2302D0A0
l2302D094:
	word32 a0_154
	word32 a3_501
	ra_141 = bt_gatt_get_mtu(ra_141, a0_153, a3_121, dwLoc0138, dwLocF0, dwLocEC, dwLocC8, dwLocA4, out a0_154, out a3_501, out s2_100, out s10)
	s1_127 = CONVERT(SLICE(a0_154 + 0xFFFFFFFD<32>, word16, 0), word16, word32)
l2302D0A0:
	word32 a0_192
	word32 s4_196
	word32 s8_197
	word32 s3_206
	word32 s5_217
	word32 s6_218
	ra_141 = pro_trans_read(ra_141, s1_127, Mem98[s0_107 + 1036<i32>:int32], fp + -308<i32>, dwLoc34, s1_127, s2_100, s10, mstatus, dwLoc0130, dwLoc012C, dwLoc0120, dwLoc011C, dwLoc0110, dwLoc010C, dwLoc0108, dwLoc0104, dwLocF8, dwLocD4, dwLocC4, dwLoc58, dwLoc38, s4, dwArg08, out s0_107, out a0_192, out a2_144, out a3_117, out a4_116, out s2_100, out s3_206, out s4_196, out s5_217, out s6_218, out s8_197, out s10, out mstatus)
	branch a0_192 == 0<32> l2302D038
l2302D0B2:
	a4_116 = CONVERT(Mem98[s3_206 + 1240<i32>:byte], byte, word32)
	branch a4_116 >u 2<32> l2302D038
l2302D0BC:
	a4_116 = CONVERT(Mem98[s4_196 + 1241<i32>:byte], byte, word32)
	branch a4_116 >u 2<32> l2302D038
l2302D0C4:
	branch Mem98[s5_217 + 580<i32>:int32] == 0<32> l2302D0E6
l2302D0E6:
	word32 a5_502
	xTaskGetTickCount(out a5_502)
l2302D0CA:
	word32 a5_503
	xTaskGetTickCountFromISR(out a5_503)
l2302D0CE:
	word32 s9_514
	word32 s6_511
	word32 s3_508
	word32 a0_505
	word32 s11_515
	word32 s8_513
	word32 s7_512
	word32 s5_510
	word32 s4_509
	word32 a5_507
	word32 a1_506
	word32 s1_504
	ra_141 = bl_printk(ra_141, s8_197 + 652<i32>, s6_218 + 636<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_504, out a0_505, out a1_506, out a2_144, out a3_117, out a4_116, out a5_507, out s2_100, out s3_508, out s4_509, out s5_510, out s6_511, out s7_512, out s8_513, out s9_514, out s10, out s11_515)
l2302D03E:
	Mem264[s0_107 + 1566<i32>:byte] = 0<8>
	word32 a5_500
	word32 a4_499
	word32 a3_498
	vTaskDelete(Mem264[s0_107 + 0xFFFEE8<32>:int32], a2_144, a3_117, a4_116, 0x1000000<32>, mstatus, s4, s0, dwArg28, dwArg38, out a3_498, out a4_499, out a5_500)
	return
__bl_ble_sync_task_exit:


void scan_complete_cb(word32 a0, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
scan_complete_cb_entry:
l2302D0F6:
	Mem14[a4 + 1567<i32>:byte] = 0<8>
	word32 a5_16 = CONVERT(Mem14[a4 + 0x1FFF900<32>:byte], byte, word32)
	branch a5_16 >u 49<i32> l2302D148
l2302D11E:
	word32 a5_28
	word32 a2_82
	word32 a3_83
	word32 a4_84
	word32 a6_85
	word32 a7_86
	memcpy(a5_16 + 0xFFFFD0<32> + a4, a0, 48<i32>, out a2_82, out a3_83, out a4_84, out a5_28, out a6_85, out a7_86)
	Mem44[a5_28 + 0x2000900<32>:byte] = SLICE(CONVERT(Mem14[a5_28 + 0x1FFF900<32>:byte], byte, word32) + 1<32>, byte, 0)
l2302D148:
	return
scan_complete_cb_exit:


void __recv_event(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArgD4, word32 dwArgF0, word32 dwArgF4, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +00D4:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
__recv_event_entry:
l2302D152:
	word32 a1_54
	word32 s1_6 = 0x4201A000<32>
	a1_54 = a1
	branch CONVERT(Mem5[0x4201A4D8<32>:byte], byte, word32) >u 2<32> l2302D1C0
l2302D17C:
	a1_54 = a1
	branch CONVERT(Mem24[0x4201A4D9<32>:byte], byte, word32) >u 2<32> l2302D1C0
l2302D188:
	branch Mem24[0x4200E244<32>:int32] == 0<32> l2302D1E2
l2302D1E2:
	word32 a5_400
	xTaskGetTickCount(out a5_400)
l2302D192:
	word32 a5_401
	xTaskGetTickCountFromISR(out a5_401)
l2302D196:
	word32 s11_418
	word32 s7_414
	word32 s10_417
	word32 s8_415
	word32 s9_416
	word32 a2_410
	word32 s6_413
	word32 a4_411
	word32 a5_412
	ra = bl_printk(ra, 0x230772F8<32>, 0x2307727C<32>, 0<32>, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_6, out a0, out a1_54, out a2_410, out a3, out a4_411, out a5_412, out s2, out s3, out s4, out s5, out s6_413, out s7_414, out s8_415, out s9_416, out s10_417, out s11_418)
l2302D1C0:
	word32 a4_75 = CONVERT(Mem24[a1:byte], byte, word32)
	branch a4_75 != 1<32> l2302D24C
l2302D24C:
	branch a4_75 != 0<32> l2302D212
l2302D24E:
	word32 s0_77 = Mem24[5<32>:word32]
	branch true l2302D1DE
l2302D258:
	word32 a5_84 = Mem24[0x23077248<32>:word32]
	word32 a3_105
	word32 a0_107
	word32 a7_111
	word32 s10_112
	word32 s11_113
	word32 s6_114
	word32 s7_115
	word32 s9_116
	word32 t0_117
	word32 t4_118
	word32 t1_226
	word32 t5_227
	word32 t6_228
	call a5_84 (retsize: 0;)
		uses: a0:a0_107,a1:a1_91,a3:a3_105,a4:0x23077250<32>,a5:a5_84,a7:a7_111,ra:ra_86,s0:s0_77,s1:s1_85,s10:s10_112,s11:s11_113,s2:s2_87,s3:s3_88,s4:s4_89,s5:s5_90,s6:s6_114,s7:s7_115,s9:s9_116,Stack +0028:dwLoc18,Stack +0070:dwArg30,Stack +0074:dwArg34,Stack +00BC:dwArg7C,Stack +0114:dwArgD4,Stack +0130:dwArgF0,Stack +0134:dwArgF4,Stack +0158:dwArg0118,Stack +0178:dwArg0138,Stack +0198:dwArg0158,Stack +01B8:dwArg0178,t0:t0_117,t1:t1_226,t4:t4_118,t5:t5_227,t6:t6_228
		defs: a0:a0_107,a3:a3_105,a7:a7_111,s10:s10_112,s11:s11_113,s6:s6_114,s7:s7_115,s9:s9_116,t0:t0_117,t1:t1_226,t4:t4_118,t5:t5_227,t6:t6_228
	return
l2302D1CA:
	word32 a2_132
	word32 a0_143
	word32 a1_131
	branch a3 == 2<32> l2302D1E8
l2302D1E8:
	word32 a0_130
	word32 a5_405
	word32 a3_403
	word32 a4_404
	word32 t1_402
	memset(ra, a0 + 1569<i32>, 0<32>, 32<i32>, out t1_402, out a0_130, out a1_131, out a2_132, out a3_403, out a4_404, out a5_405)
	Mem140[a0_130 + 1601<i32>:byte] = 0<8>
	a0_143 = a0_130 + 1569<i32>
l2302D1D2:
	branch a3 == 3<32> l2302D228
l2302D228:
	word32 a0_150
	word32 a5_409
	word32 a3_407
	word32 a4_408
	word32 t1_406
	memset(ra, a0 + 1602<i32>, 0<32>, 64<i32>, out t1_406, out a0_150, out a1_131, out a2_132, out a3_407, out a4_408, out a5_409)
	a0_143 = a0_150 + 1602<i32>
l2302D20E:
	word32 a5_422
	word32 a6_423
	word32 a7_424
	word32 a4_421
	word32 a2_419
	word32 a3_420
	memcpy(a0_143, a1_131, a2_132, out a2_419, out a3_420, out a4_421, out a5_422, out a6_423, out a7_424)
l2302D212:
l2302D1D8:
	branch a3 == a4_75 l2302D214
l2302D1DE:
l2302D214:
	return
__recv_event_exit:


void wifi_state_get_cb(word32 a0, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
wifi_state_get_cb_entry:
l2302D5D2:
	word32 s0_7 = Mem6[0x4200E1C8<32>:int32]
	word32 a4_14
	word32 a5_15
	word32 a2_67
	word32 a3_68
	word32 a6_69
	word32 a7_70
	memcpy(s0_7 + 84<i32>, a0, 88<i32>, out a2_67, out a3_68, out a4_14, out a5_15, out a6_69, out a7_70)
l2302D5FC_thunk_xQueueGenericSend:
	word32 s1_71
	word32 a0_72
	word32 a1_73
	word32 a2_74
	word32 a3_75
	word32 a4_76
	word32 a5_77
	word32 a7_78
	word32 s2_79
	word32 s3_80
	word32 s4_81
	word32 s5_82
	word32 s6_83
	word32 s8_84
	xQueueGenericSend(s0_7 + 84<i32>, 0<32>, 0<32>, a4_14, a5_15, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_71, out a0_72, out a1_73, out a2_74, out a3_75, out a4_76, out a5_77, out a7_78, out s2_79, out s3_80, out s4_81, out s5_82, out s6_83, out s8_84)
	return
wifi_state_get_cb_exit:


void write_data(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 s2, word32 s6, word32 mstatus, word32 dwArg2C, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg74, word32 dwArg8C, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s6:[0..31] Stack +002C:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
write_data_entry:
l2302D600:
	word32 a3_13 = CONVERT(Mem10[0x4201A4D8<32>:byte], byte, word32)
	Mem29[Mem5[0x4200E1C8<32>:int32] + 1668<i32>:word32] = a0
	word32 s0_12 = a3
	word32 s5_147 = a2
	branch a3_13 >u 2<32> l2302D644
l2302D636:
	branch CONVERT(Mem29[0x4201A4D9<32>:byte], byte, word32) <=u 2<32> l2302D680
l2302D680:
	branch Mem29[0x4200E244<32>:int32] == 0<32> l2302D706
l2302D706:
	word32 a5_341
	xTaskGetTickCount(out a5_341)
l2302D68C:
	word32 a5_342
	xTaskGetTickCountFromISR(out a5_342)
l2302D690:
	word32 s3_71
	word32 s4_72
	word32 s6_74
	word32 s7_75
	word32 s11_355
	word32 s8_352
	word32 s10_354
	word32 s9_353
	word32 a4_349
	word32 s2_351
	word32 a5_350
	word32 a1_346
	word32 a3_348
	word32 a2_347
	word32 s1_345
	word32 ra_66 = bl_printk(ra, 0x230774F0<32>, 0x2307727C<32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_345, out a0, out a1_346, out a2_347, out a3_348, out a4_349, out a5_350, out s2_351, out s3_71, out s4_72, out s5_147, out s6_74, out s7_75, out s8_352, out s9_353, out s10_354, out s11_355)
	branch CONVERT(Mem29[s4_72 + 1240<i32>:byte], byte, word32) >u 2<32> l2302D644
l2302D6C2:
	branch CONVERT(Mem29[s7_75 + 1241<i32>:byte], byte, word32) >u 2<32> l2302D644
l2302D6CA:
	branch Mem29[s6_74 + 580<i32>:int32] == 0<32> l2302D70C
l2302D70C:
	word32 a5_343
	xTaskGetTickCount(out a5_343)
l2302D6D0:
	word32 a5_344
	xTaskGetTickCountFromISR(out a5_344)
l2302D6D4:
	word32 s1_113
	word32 s10_114
	word32 s2_116
	word32 s9_123
	word32 a3_369
	word32 s11_368
	word32 s8_367
	word32 s6_365
	word32 s7_366
	word32 s4_363
	word32 s5_364
	word32 a5_361
	word32 s3_362
	word32 a3_359
	word32 a4_360
	word32 a1_357
	word32 a2_358
	word32 a0_356
	blog_hexdump_out(bl_printk(ra_66, 0x23077520<32>, s3_71 + 636<i32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_113, out a0_356, out a1_357, out a2_358, out a3_359, out a4_360, out a5_361, out s2_116, out s3_362, out s4_363, out s5_364, out s6_365, out s7_366, out s8_367, out s9_123, out s10_114, out s11_368), s1_113, s2_116 + 1304<i32>, a3, s2_116, s9_123, s10_114, dwLoc2C, s2, s0, dwLoc10, dwArg2C, dwArg3C, out s0_12, out a0, out a3_369, out s5_147)
l2302D644:
	Mem163[a0 + 1032<i32>:word32] = s0_12
	word32 a4_165
	word32 a5_166
	word32 a3_324
	word32 a7_326
	word32 a6_325
	word32 a2_323
	memcpy(a0 + 776<i32>, s5_147, s0_12, out a2_323, out a3_324, out a4_165, out a5_166, out a6_325, out a7_326)
	word32 s8_340
	word32 s6_339
	word32 s3_336
	word32 s5_338
	word32 s4_337
	word32 a5_333
	word32 s2_335
	word32 a7_334
	word32 a2_330
	word32 a4_332
	word32 a3_331
	word32 s1_327
	word32 a1_329
	word32 a0_328
	xQueueGenericSend(Mem163[a5_166 + 172<i32>:int32], a5_166 + 776<i32>, 0<32>, a4_165, a5_166, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_327, out a0_328, out a1_329, out a2_330, out a3_331, out a4_332, out a5_333, out a7_334, out s2_335, out s3_336, out s4_337, out s5_338, out s6_339, out s8_340)
	0<32> = dwArg0128
	return
write_data_exit:


void __ble_bytes_send(word32 ra, word32 a1, word32 a2, word32 a5, word32 s2, word32 s4, word32 dwArg00, word32 dwArg08, word32 dwArg3C, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] ra:[0..31] s2:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +003C:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
__ble_bytes_send_entry:
l2302D712:
	branch Mem20[a5 + 1668<i32>:int32] == 0<32> l2302D782
l2302D736:
	branch a2 >u 255<i32> l2302D782
l2302D740:
	word32 a5_32
	word32 a4_333
	word32 a3_332
	word32 a2_331
	word32 a7_335
	word32 a6_334
	memcpy(a5 + 1052<i32>, a1, a2, out a2_331, out a3_332, out a4_333, out a5_32, out a6_334, out a7_335)
	word32 a3_149 = CONVERT(Mem20[0x4201A4D8<32>:byte], byte, word32)
	Mem49[a5_32 + 1564<i32>:word16] = SLICE(CONVERT(SLICE(a2, word16, 0), word16, word32), word16, 0)
	branch a3_149 >u 2<32> l2302D774
l2302D768:
	branch CONVERT(Mem49[0x4201A4D9<32>:byte], byte, word32) <=u 2<32> l2302D796
l2302D796:
	branch Mem49[0x4200E244<32>:int32] == 0<32> l2302D81A
l2302D81A:
	word32 a5_355
	xTaskGetTickCount(out a5_355)
l2302D7A2:
	word32 a5_356
	xTaskGetTickCountFromISR(out a5_356)
l2302D7A6:
	word32 s1_84
	word32 s2_87
	word32 s5_90
	word32 s6_91
	word32 a0_374
	word32 a1_375
	word32 a2_376
	word32 a4_377
	word32 a5_378
	word32 s3_379
	word32 s4_380
	word32 s7_381
	word32 s8_382
	word32 s9_383
	word32 s10_384
	word32 s11_385
	ra = bl_printk(ra, 0x230772BC<32>, 0x2307727C<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_84, out a0_374, out a1_375, out a2_376, out a3_149, out a4_377, out a5_378, out s2_87, out s3_379, out s4_380, out s5_90, out s6_91, out s7_381, out s8_382, out s9_383, out s10_384, out s11_385)
	branch CONVERT(Mem49[s2_87 + 1240<i32>:byte], byte, word32) >u 2<32> l2302D774
l2302D7D6:
	branch CONVERT(Mem49[s6_91 + 1241<i32>:byte], byte, word32) >u 2<32> l2302D774
l2302D7DE:
	branch Mem49[s5_90 + 580<i32>:int32] == 0<32> l2302D820
l2302D820:
	word32 a5_357
	xTaskGetTickCount(out a5_357)
l2302D7E4:
	word32 a5_358
	xTaskGetTickCountFromISR(out a5_358)
l2302D7E8:
	word32 s1_129
	word32 s10_130
	word32 s2_132
	word32 s4_134
	word32 s9_139
	word32 a0_359
	word32 a1_360
	word32 a2_361
	word32 a3_362
	word32 a4_363
	word32 a5_364
	word32 s3_365
	word32 s5_366
	word32 s6_367
	word32 s7_368
	word32 s8_369
	word32 s11_370
	word32 s0_371
	word32 a0_372
	word32 s5_373
	ra = blog_hexdump_out(bl_printk(ra, 0x23077520<32>, s1_84 + 636<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_129, out a0_359, out a1_360, out a2_361, out a3_362, out a4_363, out a5_364, out s2_132, out s3_365, out s4_134, out s5_366, out s6_367, out s7_368, out s8_369, out s9_139, out s10_130, out s11_370), s1_129, s1_129 + 1304<i32>, s4_134, s2_132, s9_139, s10_130, s4, dwLoc10, dwLoc0C, dwArg00, dwArg3C, dwArg4C, out s0_371, out a0_372, out a3_149, out s5_373)
l2302D774:
	word32 t4_354
	word32 s11_353
	word32 s10_352
	word32 s9_351
	word32 s8_350
	word32 s7_349
	word32 s6_348
	word32 s5_347
	word32 s4_346
	word32 s3_345
	word32 s2_344
	word32 a5_342
	word32 a7_343
	word32 a3_340
	word32 a4_341
	word32 a1_338
	word32 a2_339
	word32 s1_336
	word32 a0_337
	printf(ra, 0x2307676C<32>, a3_149, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_336, out a0_337, out a1_338, out a2_339, out a3_340, out a4_341, out a5_342, out a7_343, out s2_344, out s3_345, out s4_346, out s5_347, out s6_348, out s7_349, out s8_350, out s9_351, out s10_352, out s11_353, out t4_354)
l2302D782:
	0<32> = dwArgA8
	return
__ble_bytes_send_exit:


void blsync_disconnected(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
blsync_disconnected_entry:
l2302D826:
	word32 s1_43
	word32 a0_44
	word32 a1_45
	word32 a2_46
	word32 a3_47
	word32 a4_48
	word32 a5_49
	word32 a7_50
	word32 s2_51
	word32 s3_52
	word32 s4_53
	word32 s5_54
	word32 s6_55
	word32 s7_56
	word32 s8_57
	word32 s9_58
	word32 s10_59
	word32 s11_60
	word32 t4_61
	printf(ra, 0x2307746C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_43, out a0_44, out a1_45, out a2_46, out a3_47, out a4_48, out a5_49, out a7_50, out s2_51, out s3_52, out s4_53, out s5_54, out s6_55, out s7_56, out s8_57, out s9_58, out s10_59, out s11_60, out t4_61)
	Mem33[0x4200E1C4<32>:word32] = 0<32>
	return
blsync_disconnected_exit:


void blsync_exchange_func(word32 ra, word32 a1, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
blsync_exchange_func_entry:
l2302D844:
	branch a1 == 0<32> l2302D85A
l2302D85A:
l2302D846:
l2302D84E:
l2302D856_thunk_printf:
	word32 a3_55
	word32 a4_56
	word32 a2_54
	word32 a1_53
	word32 a0_52
	word32 s1_51
	word32 a5_57
	word32 a7_58
	word32 s2_59
	word32 s3_60
	word32 s4_61
	word32 s5_62
	word32 s6_63
	word32 s7_64
	word32 s8_65
	word32 s9_66
	word32 s10_67
	word32 s11_68
	word32 t4_69
	printf(ra, 0x2307748C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_51, out a0_52, out a1_53, out a2_54, out a3_55, out a4_56, out a5_57, out a7_58, out s2_59, out s3_60, out s4_61, out s5_62, out s6_63, out s7_64, out s8_65, out s9_66, out s10_67, out s11_68, out t4_69)
	return
blsync_exchange_func_exit:


void read_data(word32 ra, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg74, word32 dwArg78, word32 dwArg9C, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
read_data_entry:
l2302D864:
	branch CONVERT(Mem19[Mem5[0x4200E1C8<32>:int32] + 1564<i32>:uint16], uint16, word32) == 0<32> l2302D91E
l2302D91E:
l2302D882:
	word32 a4_25 = CONVERT(Mem19[0x4201A4D8<32>:byte], byte, word32)
	word32 a5_26 = 2<32>
	branch a4_25 >u 2<32> l2302D8E0
l2302D89E:
	a4_25 = CONVERT(Mem19[0x4201A4D9<32>:byte], byte, word32)
	branch a4_25 >u 2<32> l2302D8E0
l2302D8AA:
	branch Mem19[0x4200E244<32>:int32] == 0<32> l2302D918
l2302D918:
	word32 a5_243
	xTaskGetTickCount(out a5_243)
l2302D8B4:
	word32 a5_244
	xTaskGetTickCountFromISR(out a5_244)
l2302D8B8:
	word32 s1_245
	word32 a0_246
	word32 a1_247
	word32 a2_248
	word32 a3_249
	word32 s2_250
	word32 s3_251
	word32 s4_252
	word32 s5_253
	word32 s6_254
	word32 s7_255
	word32 s8_256
	word32 s9_257
	word32 s10_258
	word32 s11_259
	bl_printk(ra, 0x2307749C<32>, 0x2307727C<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_245, out a0_246, out a1_247, out a2_248, out a3_249, out a4_25, out a5_26, out s2_250, out s3_251, out s4_252, out s5_253, out s6_254, out s7_255, out s8_256, out s9_257, out s10_258, out s11_259)
l2302D8E0:
	word32 s3_101
	word32 s4_102
	word32 s5_103
	word32 a5_95 = pro_trans_ack(Mem19[a5_26 + 1036<i32>:int32], a4_25, a5_26, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s3_101, out s4_102, out s5_103)
	Mem136[bt_gatt_attr_read(s3_101, s4_102, s5_103, a5_95 + 1052<i32>, CONVERT(Mem19[a5_95 + 1564<i32>:uint16], uint16, word32)) + 1564<i32>:word16] = 0<16>
l2302D906:
	return
read_data_exit:


void blsync_connected(word32 ra, word32 s0, word32 s1, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
blsync_connected_entry:
l2302D922:
	word32 ra_111
	word32 s1_112
	word32 a0_103
	word32 a5_18
	word32 a3_22
	word32 a4_23
	word32 s1_26
	word32 s2_29
	word32 s3_30
	word32 a2_326
	word32 a7_327
	word32 s4_328
	word32 a1_325
	word32 a0_324
	word32 s5_329
	word32 s6_330
	word32 s7_331
	word32 s8_332
	word32 s9_333
	word32 s10_334
	word32 s11_335
	word32 t4_336
	word32 ra_25 = printf(ra, 0x2307E93C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_26, out a0_324, out a1_325, out a2_326, out a3_22, out a4_23, out a5_18, out a7_327, out s2_29, out s3_30, out s4_328, out s5_329, out s6_330, out s7_331, out s8_332, out s9_333, out s10_334, out s11_335, out t4_336)
	Mem44[0x4200E1C4<32>:word32] = s1_26
	word32 a0_46
	word32 a3_49
	word32 mstatus_54
	word32 ra_55 = bt_le_set_data_len(ra_25, s1_26, a3_22, a4_23, a5_18, s2_29, s3_30, mstatus, s0, dwLoc08, dwArg08, dwArg28, dwArg40, dwArg44, dwArg50, dwArg64, dwArg68, ra, dwArg78, dwArg84, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, out a0_46, out a3_49, out mstatus_54)
	branch a0_46 != 0<32> l2302D99E
l2302D99E:
	word32 a1_337
	word32 a2_338
	word32 a3_339
	word32 a4_340
	word32 a5_341
	word32 a7_342
	word32 s2_343
	word32 s3_344
	word32 s4_345
	word32 s5_346
	word32 s6_347
	word32 s7_348
	word32 s8_349
	word32 s9_350
	word32 s10_351
	word32 s11_352
	word32 t4_353
	ra_111 = printf(ra_55, 0x23077408<32>, a3_49, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_112, out a0_103, out a1_337, out a2_338, out a3_339, out a4_340, out a5_341, out a7_342, out s2_343, out s3_344, out s4_345, out s5_346, out s6_347, out s7_348, out s8_349, out s9_350, out s10_351, out s11_352, out t4_353)
l2302D95E:
	word32 a1_354
	word32 a2_355
	word32 a3_356
	word32 a4_357
	word32 a5_358
	word32 a7_359
	word32 s2_360
	word32 s3_361
	word32 s4_362
	word32 s5_363
	word32 s6_364
	word32 s7_365
	word32 s8_366
	word32 s9_367
	word32 s10_368
	word32 s11_369
	word32 t4_370
	ra_111 = printf(ra_55, 0x230773EC<32>, a3_49, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_112, out a0_103, out a1_354, out a2_355, out a3_356, out a4_357, out a5_358, out a7_359, out s2_360, out s3_361, out s4_362, out s5_363, out s6_364, out s7_365, out s8_366, out s9_367, out s10_368, out s11_369, out t4_370)
l2302D96A:
	Mem133[0x2302D85C<32>:word32] = 0x4201A4DC<32>
	word32 a0_138
	word32 a3_139
	word32 ra_147 = bt_gatt_exchange_mtu(ra_111, s1_112, a0_103, mstatus_54, dwArg08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg9C, dwArgA8, dwArgC8, out a0_138, out a3_139)
	branch a0_138 != 0<32> l2302D9AE
l2302D9AE:
l2302D9BE_thunk_printf:
	word32 s1_390
	word32 a0_391
	word32 a1_392
	word32 a2_393
	word32 a3_394
	word32 a4_395
	word32 a5_396
	word32 a7_397
	word32 s2_398
	word32 s3_399
	word32 s4_400
	word32 s5_401
	word32 s6_402
	word32 s7_403
	word32 s8_404
	word32 s9_405
	word32 s10_406
	word32 s11_407
	word32 t4_408
	printf(ra_147, 0x23077448<32>, a3_139, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_390, out a0_391, out a1_392, out a2_393, out a3_394, out a4_395, out a5_396, out a7_397, out s2_398, out s3_399, out s4_400, out s5_401, out s6_402, out s7_403, out s8_404, out s9_405, out s10_406, out s11_407, out t4_408)
	return
l2302D98A:
l2302D99A_thunk_printf:
	word32 s1_371
	word32 a0_372
	word32 a1_373
	word32 a2_374
	word32 a3_375
	word32 a4_376
	word32 a5_377
	word32 a7_378
	word32 s2_379
	word32 s3_380
	word32 s4_381
	word32 s5_382
	word32 s6_383
	word32 s7_384
	word32 s8_385
	word32 s9_386
	word32 s10_387
	word32 s11_388
	word32 t4_389
	printf(ra_147, 0x2307742C<32>, a3_139, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_371, out a0_372, out a1_373, out a2_374, out a3_375, out a4_376, out a5_377, out a7_378, out s2_379, out s3_380, out s4_381, out s5_382, out s6_383, out s7_384, out s8_385, out s9_386, out s10_387, out s11_388, out t4_389)
	return
blsync_connected_exit:


void bl_ble_sync_start(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 s5, word32 s6, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blsync_ble_start
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s11:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_ble_sync_start_entry:
l2302D9C2:
	branch a0 == 0<32> l2302D9D2
l2302D9CE:
	branch a1 != 0<32> l2302DA32
l2302DA32:
	word32 a3_26
	word32 a1_325
	word32 a0_324
	word32 t1_323
	word32 a5_327
	word32 a2_326
	word32 a4_27
	word32 ra_29 = memset(ra, a0, 0<32>, 0x1FFF908<32>, out t1_323, out a0_324, out a1_325, out a2_326, out a3_26, out a4_27, out a5_327)
	Mem33[0x4200E1C8<32>:word32] = a0
	word32 a5_36 = Mem33[a4_27:word32]
	Mem37[a0 + 1048<i32>:word32] = a1
	Mem38[a0 + 1040<i32>:word32] = a2
	Mem39[a0 + 1044<i32>:word32] = a3_26
	Mem40[a0 + 1566<i32>:word16] = 0<16>
	Mem41[a0 + 1568<i32>:byte] = 0<8>
	branch a4_27 != 0<32> l2302DA7E
l2302DA6E:
	Mem45[1<32>:word32] = a5_36
	bt_conn_cb_register(0x4200D5F0<32>, 1<32>)
	a4_27 = 1<32>
l2302DA7E:
	word32 sp_84 = <invalid>
	word32 mstatus_70
	word32 s0_72
	word32 a0_103
	word32 s0_107
	word32 s1_108
	word32 tp_347
	word32 t0_348
	word32 a2_349
	word32 a3_350
	word32 a4_351
	word32 a5_352
	word32 s2_353
	word32 s5_354
	word32 s6_355
	word32 s7_356
	xTaskCreateStatic(bt_gatt_service_register(ra_29, a3_26, a4_27, s5, s6, s11, mstatus, dwLoc1C, dwLoc08, dwLoc04, dwArg08, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg58, s1, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArg0108, out s0_72, out mstatus_70), 0x2302CF9A<32>, 0x230773E8<32>, 512<i32>, s0_72, 0xA<32>, s0_72 + 1672<i32>, s0_72 + 0xFFFE88<32>, mstatus_70, Mem61[sp_84 + 4<i32>:word32], Mem61[sp_84 + 36<i32>:word32], Mem61[sp_84 + 232<i32>:word32], Mem61[sp_84 + 436<i32>:word32], out tp_347, out t0_348, out s0_107, out s1_108, out a0_103, out a2_349, out a3_350, out a4_351, out a5_352, out s2_353, out s5_354, out s6_355, out s7_356)
	Mem126[s0_107 + s1_108 + 3816<i32>:word32] = a0_103
l2302D9D2:
	branch CONVERT(Mem11[0x4201A4D8<32>:byte], byte, word32) >u 2<32> l2302DA20
l2302D9E2:
	branch CONVERT(Mem11[0x4201A4D9<32>:byte], byte, word32) >u 2<32> l2302DA20
l2302D9EE:
	branch Mem11[0x4200E244<32>:int32] == 0<32> l2302DA2C
l2302DA2C:
	word32 a5_328
	xTaskGetTickCount(out a5_328)
l2302D9F8:
	word32 a5_329
	xTaskGetTickCountFromISR(out a5_329)
l2302D9FC:
	word32 s2_337
	word32 s3_338
	word32 s4_339
	word32 s5_340
	word32 s6_341
	word32 s7_342
	word32 s8_343
	word32 s9_344
	word32 s10_345
	word32 s11_346
	word32 a0_331
	word32 a1_332
	word32 s1_330
	word32 a3_334
	word32 a4_335
	word32 a5_336
	word32 a2_333
	bl_printk(ra, 0x230773BC<32>, 0x2307727C<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_330, out a0_331, out a1_332, out a2_333, out a3_334, out a4_335, out a5_336, out s2_337, out s3_338, out s4_339, out s5_340, out s6_341, out s7_342, out s8_343, out s9_344, out s10_345, out s11_346)
l2302DA20:
	return
bl_ble_sync_start_exit:


word32 bl_ble_sync_stop(word32 s1, word32 a0, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blesync_complete_cb
//      blsync_ble_stop
// MayUse:  a0:[0..31] mstatus:[0..31] s1:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bl_ble_sync_stop_entry:
l2302DABC:
	branch a0 == 0<32> l2302DB40
l2302DB40:
	a2Out = a2
	a5Out = a5
	return 0xFFFFFFFF<32>
l2302DABE:
	word32 a5_121
	word32 a3_100
	word32 a2_20 = bt_gatt_service_unregister(a0, s1, 0x230774E4<32>, s2, mstatus, dwArg38, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out a3_100)
	Mem41[a0 + 1568<i32>:byte] = 1<8>
	word32 a5_280
	word32 a0_42 = xTaskGetCurrentTaskHandle(out a5_280)
	word32 s0_104 = a0
	word32 a4_101 = 0x1000000<32>
	word32 a5_102 = Mem41[Mem41[0x4200E1C8<32>:int32] + 0xFFFEE8<32>:int32]
	word32 s2_106 = 1<32>
	branch a5_102 != a0_42 l2302DB2C
l2302DB2C:
	a5_121 = CONVERT(Mem41[a5_102 + 1567<i32>:byte], byte, word32)
	branch a5_121 == s2_106 l2302DB26
l2302DB36:
	a5_121 = CONVERT(Mem41[s0_104 + 1566<i32>:byte], byte, word32)
	branch a5_121 == s2_106 l2302DB26
l2302DB26:
	word32 a1_290
	word32 s3_291
	word32 s4_292
	word32 a0_289
	word32 s1_288
	s0_104 = vTaskDelay(0xA<32>, a2_20, a3_100, a4_101, a5_121, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_288, out a0_289, out a1_290, out a2_20, out a3_100, out a4_101, out a5_102, out s2_106, out s3_291, out s4_292)
l2302DB3E:
l2302DAFA:
	word32 a5_89 = CONVERT(Mem41[a5_102 + 1567<i32>:byte], byte, word32)
	branch a5_89 == s2_106 l2302DB1E
l2302DB1E:
	word32 a0_282
	word32 s4_285
	word32 a1_283
	word32 s3_284
	word32 s1_281
	s0_104 = vTaskDelay(0xA<32>, a2_20, a3_100, a4_101, a5_89, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_281, out a0_282, out a1_283, out a2_20, out a3_100, out a4_101, out a5_102, out s2_106, out s3_284, out s4_285)
l2302DB04:
	word32 a3_286
	word32 a4_287
	vTaskDelete(Mem41[s0_104 + 0xFFFEE8<32>:int32], a2_20, a3_100, a4_101, a5_89, mstatus, dwArg0118, dwArg0128, dwArg0158, dwArg0168, out a3_286, out a4_287, out a5_121)
l2302DB10:
	0<32> = dwArg38
	a2Out = dwArg10
	a5Out = a5_121
	return 0<32>
bl_ble_sync_stop_exit:


word32 __malloc(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg60, word32 dwArg64, word32 dwArg7C, word32 dwArg88, word32 dwArgAC, word32 dwArg0128, word32 dwArg0168, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __protocol_send
//      pro_trans_read
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a2 a3 a4 a5 ra s1 s10 s11 s2 s3 s4 s5 s6
// Trashed: a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
__malloc_entry:
l2302DB44:
	word32 a0_14
	word32 a1_153
	word32 a2_154
	word32 a6_155
	word32 s8_156
	word32 s1_117
	word32 a4_110
	word32 a5_111
	word32 a3_109
	word32 s2_122
	word32 s3_123
	word32 s4_124
	pvPortMalloc(ra, s1, a0, a3, a4, a5, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_117, out a0_14, out a1_153, out a2_154, out a3_109, out a4_110, out a5_111, out a6_155, out s2_122, out s3_123, out s4_124, out s8_156)
	branch a0_14 == 0<32> l2302DB9C
l2302DB52:
	a4_110 = CONVERT(Mem7[0x4201A4D8<32>:byte], byte, word32)
	a5_111 = 2<32>
	branch a4_110 >u 2<32> l2302DB9C
l2302DB60:
	a4_110 = CONVERT(Mem7[0x4201A4F8<32>:byte], byte, word32)
	branch a4_110 >u 2<32> l2302DB9C
l2302DB6C:
	branch Mem7[0x4200E244<32>:int32] == 0<32> l2302DBA6
l2302DBA6:
	word32 a5_157
	xTaskGetTickCount(out a5_157)
l2302DB76:
	word32 a5_158
	xTaskGetTickCountFromISR(out a5_158)
l2302DB7A:
	word32 a0_159
	word32 a1_160
	word32 a2_161
	word32 s7_162
	word32 s8_163
	word32 s9_164
	ra = bl_printk(ra, 0x23077568<32>, 0x2307755C<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_117, out a0_159, out a1_160, out a2_161, out a3_109, out a4_110, out a5_111, out s2_122, out s3_123, out s4_124, out s5, out s6, out s7_162, out s8_163, out s9_164, out s10, out s11)
l2302DB9C:
	s1Out = s1_117
	a2Out = dwArg10
	a3Out = a3_109
	a4Out = a4_110
	a5Out = a5_111
	s2Out = s2_122
	s3Out = s3_123
	s4Out = s4_124
	s5Out = s5
	s6Out = s6
	s10Out = s10
	s11Out = s11
	return ra
__malloc_exit:


word32 __free(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __protocol_send
//      pro_trans_read
//      pro_trans_reset
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: a7 ra s10 s11 s2 s3 s5 s6 s7 s8 s9 sp t0 t4
__free_entry:
l2302DBAC:
	branch a0 == 0<32> l2302DC00
l2302DBB6:
	a5 = 2<32>
	branch CONVERT(Mem7[0x4201A4D8<32>:byte], byte, word32) >u 2<32> l2302DC00
l2302DBC4:
	branch CONVERT(Mem7[0x4201A4F8<32>:byte], byte, word32) >u 2<32> l2302DC00
l2302DBD0:
	branch Mem7[0x4200E244<32>:int32] == 0<32> l2302DC0C
l2302DC0C:
	word32 a5_136
	xTaskGetTickCount(out a5_136)
l2302DBDA:
	word32 a5_137
	xTaskGetTickCountFromISR(out a5_137)
l2302DBDE:
	word32 s1_143
	word32 a0_144
	word32 a1_145
	word32 a2_146
	word32 a3_147
	word32 a4_148
	word32 s2_149
	word32 s3_150
	word32 s4_151
	word32 s5_152
	word32 s6_153
	word32 s7_154
	word32 s8_155
	word32 s9_156
	word32 s10_157
	word32 s11_158
	bl_printk(ra, 0x2307753C<32>, 0x2307755C<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_143, out a0_144, out a1_145, out a2_146, out a3_147, out a4_148, out a5, out s2_149, out s3_150, out s4_151, out s5_152, out s6_153, out s7_154, out s8_155, out s9_156, out s10_157, out s11_158)
l2302DC00:
l2302DC08_thunk_vPortFree:
	word32 a3_70
	word32 a4_71
	word32 a5_72
	word32 s1_73
	word32 a0_75
	word32 s0_78
	word32 a1_138
	word32 a2_139
	word32 a6_140
	word32 s4_141
	word32 t3_142
	vPortFree(a0, dwArg10, a5, mstatus, dwArg0158, dwArg0198, out s0_78, out s1_73, out a0_75, out a1_138, out a2_139, out a3_70, out a4_71, out a5_72, out a6_140, out s4_141, out t3_142)
	s1Out = s1_73
	a0Out = a0_75
	a3Out = a3_70
	a4Out = a4_71
	a5Out = a5_72
	return s0_78
__free_exit:


word32 __clear_dev(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pro_trans_read
//      pro_trans_reset
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
__clear_dev_entry:
l2302DC12:
	Mem10[a0 + 56<i32>:word32] = 0<32>
	word32 a0_14
	word32 a3_17
	word32 a4_18
	word32 a5_19
	word32 s1_22
	Mem27[__free(ra, Mem10[a0 + 36<i32>:word32], a5, mstatus, dwArg00, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, dwArg0148, dwArg0188, out s1_22, out a0_14, out a3_17, out a4_18, out a5_19) + 36<i32>:word32] = 0<32>
	a0Out = a0_14
	a2Out = dwArg10
	a3Out = a3_17
	a4Out = a4_18
	a5Out = a5_19
	return s1_22
__clear_dev_exit:


word32 __protocol_send(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg1C, word32 dwArg28, word32 dwArgC8, word32 dwArg0108, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pro_trans_read
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a5 mstatus ra s10 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
__protocol_send_entry:
l2302DC30:
	word32 sp_160 = fp + -96<i32>
	byte bLoc44_376 = 0<8>
	branch a2 == 0<32> l2302DC68
l2302DC62:
	bLoc44_376 = 8<8>
l2302DC68:
	word32 a0_49 = CONVERT(Mem46[a0 + 60<i32>:uint16], uint16, word32)
	word32 s1_567
	word32 a3_568
	word32 a4_569
	word32 s5_570
	word32 a5_335
	word32 s11_270
	word32 s10_173
	word32 s4_146
	word32 a2_157
	word32 s3_151
	word32 s6_108
	word32 s2_111
	word32 ra_148 = __malloc(ra, s1, a0_49, a3, a4, CONVERT(bLoc44_376, byte, word32) & 0xF<32> | 16<i32>, mstatus, s10, dwLoc30, dwLoc2C, dwArg00, dwArg04, dwArg1C, dwArg28, ra, dwArgC8, dwArg0108, out s1_567, out a2_157, out a3_568, out a4_569, out a5_335, out s2_111, out s3_151, out s4_146, out s5_570, out s6_108, out s10_173, out s11_270)
	word32 s8_100 = a0_49
	branch a0_49 == 0<32> l2302DD98
l2302DC86:
	s10_173 = 0<32>
	word32 s1_314 = s4_146 & 255<i32>
	s6_108 = a0_49 + 6<i32>
	s2_111 = 1<32>
	word32 s7_116 = a0_49 + 4<i32>
l2302DCA2:
	word32 s9_113
	word32 s5_109
	word32 a7_110
	Mem95[sp_160 + 27<i32>:byte] = 4<8>
	word32 a7_97 = CONVERT(Mem95[s11_270 + 60<i32>:uint16], uint16, word32)
	branch s10_173 == 0<32> l2302DDB8
l2302DDB8:
	0<32> = Mem95[sp_160 + 228<i32>:word32]
	Mem101[s8_100 + 4<i32>:byte] = SLICE(s1_314, byte, 0)
	Mem103[s8_100 + 5<i32>:byte] = 4<8>
	Mem105[sp_160 + 27<i32>:byte] = 6<8>
	Mem112[Mem105[s11_270:int32] + 16<i32>:byte] = SLICE(s2_111, byte, 0)
	s5_109 = s6_108
	a7_110 = CONVERT(SLICE(a7_97 + 0xFFFFFFFA<32>, word16, 0), word16, int32)
	s9_113 = 6<32>
l2302DCB0:
	s5_109 = s7_116
	a7_110 = CONVERT(SLICE(a7_97 + 0xFFFFFFFC<32>, word16, 0), word16, int32)
	s9_113 = 4<32>
l2302DCBC:
	word32 a5_122 = CONVERT(Mem121[sp_160 + 27<i32>:byte], byte, word32)
	Mem128[sp_160 + 27<i32>:byte] = SLICE(a5_122 + 1<32>, byte, 0)
	word32 s4_161
	word32 s11_162
	word32 s0_164
	word32 s1_165
	word32 s5_168
	word32 s7_170
	word32 s9_172
	word32 a0_177
	word32 t1_417
	word32 t5_418
	word32 t6_419
	word32 a5_178
	call Mem128[a5_122 + 5<32>:int32] (retsize: 0;)
		uses: a0:Mem128[Mem128[a5_122 + 0x15<32>:word32] + 24<i32>:word32],a1:1<32>,a2:a2_157,a3:s5_142 + 1<i32>,a4:sp_94 + 27<i32>,a5:a5_122 + 1<32> + s10_98,a6:s1_99 - s10_98 & 255<i32>,a7:CONVERT(SLICE(a7_125 + 0xFFFFFFFF<32>, word16, 0), word16, int32),mstatus:mstatus_159,ra:ra_148,s0:Mem128[sp_94 + 228<i32>:word32],s1:s1_99,s10:s10_98,s11:s11_96,s2:s2_111,s3:s3_151,s4:s4_146,s5:s5_142,s6:s6_108,s7:s7_116,s8:s8_100,s9:s9_155,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +001C:dwArg1C,Stack +0028:dwArg28,Stack +00C8:dwArgC8,Stack +0108:dwArg0108,Stack +FFFFFFD0:dwLoc30,Stack +FFFFFFD4:dwLoc2C,t1:t1_417,t5:t5_418,t6:t6_419,tp:Mem128[sp_94 + 132<i32>:word32]
		defs: a0:a0_177,a5:a5_178,mstatus:mstatus_186,ra:ra_163,s0:s0_164,s1:s1_165,s10:s10_173,s11:s11_162,s2:s2_166,s4:s4_161,s5:s5_168,s6:s6_169,s7:s7_170,s8:s8_171,s9:s9_172,sp:sp_160,t1:t1_417,t5:t5_418,t6:t6_419
	Mem189[Mem128[s11_162:int32] + 16<i32>:byte] = 0<8>
	s3_151 = a0_177
	branch a0_177 < 0<32> l2302DD92
l2302DD02:
	word32 a3_194
	s10_173 = CONVERT(SLICE(s10_173 + (a0_177 & 255<i32>), word16, 0), word16, word32)
	branch s10_173 <u s4_161 l2302DDDE
l2302DDDE:
	a3_194 = 0<32>
l2302DD12:
	branch s4_161 != s10_173 l2302DDE2
l2302DDE2:
	s3_151 = 0xFFFFFFFE<32>
l2302DD16:
	Mem199[sp_160 + 30<i32>:word16] = SLICE(CONVERT(Mem189[sp_160 + 30<i32>:uint16], uint16, word32) | 0xF8000000<32>, word16, 0)
	a3_194 = 1<32>
l2302DD24:
	branch (a0_177 & 255<i32>) >=u s4_161 l2302DD34
l2302DD28:
	Mem207[sp_160 + 28<i32>:byte] = SLICE(CONVERT(Mem204[sp_160 + 28<i32>:byte], byte, word32) | 2<i32>, byte, 0)
l2302DD34:
	Mem216[sp_160 + 132<i32>:word32] = a3_194
	word32 a5_218
	word32 a3_222
	word32 a2_575
	word32 a4_576
	word32 a6_577
	word32 a7_578
	memcpy(s8_100, sp_160 + 28<i32>, 2<32>, out a2_575, out a3_222, out a4_576, out a5_218, out a6_577, out a7_578)
	word32 a4_230 = CONVERT(Mem216[sp_160 + 30<i32>:uint16], uint16, word32)
	Mem233[s8_100 + 2<i32>:byte] = SLICE(a4_230, byte, 0)
	Mem235[s8_100 + 3<i32>:byte] = SLICE(a4_230 >>u 8<i32>, byte, 0)
	word32 s9_240 = CONVERT(Mem235[sp_160 + 27<i32>:byte], byte, word32) + 0xFFFFFFFF<32> - s9_172
	Mem243[s5_168:byte] = SLICE(s9_240, byte, 0)
	word32 a4_248 = Mem243[Mem243[s11_162 + 164<i32>:int32]:word32]
	word32 s0_272
	word32 a3_282
	word32 a5_286
	word32 a2_287
	word32 t1_295
	word32 t5_296
	word32 t6_297
	call a4_248 (retsize: 0;)
		uses: a0:0<32>,a1:s8_171,a2:CONVERT(Mem243[sp_160 + 27<i32>:byte], byte, word32),a3:a3_222,a4:a4_248,a5:a5_218,mstatus:mstatus_186,ra:ra_163,s0:s0_164,s1:s1_165,s10:s10_193,s11:s11_162,s2:s2_166,s3:a0_177,s4:s4_161,s5:s5_168,s6:s6_169,s7:s7_170,s8:s8_171,s9:s9_240,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +001C:dwArg1C,Stack +0028:dwArg28,Stack +00C8:dwArgC8,Stack +0108:dwArg0108,Stack +FFFFFFD0:dwLoc30,Stack +FFFFFFD4:dwLoc2C,t1:t1_295,t5:t5_296,t6:t6_297
		defs: a2:a2_287,a3:a3_282,a5:a5_286,mstatus:mstatus_294,ra:ra_271,s0:s0_272,s10:s10_281,s11:s11_270,s6:s6_277,s7:s7_278,sp:sp_268,t1:t1_295,t5:t5_296,t6:t6_297
	word32 a0_299 = Mem243[s11_270 + 80<i32>:int32]
	Mem302[sp_160 + 29<i32>:byte] = SLICE(CONVERT(Mem243[sp_160 + 29<i32>:byte], byte, word32) + 1<32>, byte, 0)
	word32 a4_303 = CONVERT(Mem302[sp_160 + 30<i32>:uint16], uint16, word32)
	Mem305[sp_160 + 30<i32>:word16] = SLICE(a4_303 + 1<32>, word16, 0)
	word32 a0_306
	word32 a3_309
	word32 a2_580
	word32 a4_581
	word32 a1_579
	xQueueSemaphoreTake(a0_299, s0_272, a2_287, a3_282, a4_303 + 1<32>, a5_286, mstatus, Mem305[sp_160 + 8<i32>:word32], Mem305[sp_160 + 36<i32>:word32], Mem305[sp_160 + 164<i32>:word32], Mem305[sp_160 + 280<i32>:word32], Mem305[sp_160 + 344<i32>:word32], out s1_314, out a0_306, out a1_579, out a2_580, out a3_309, out a4_581, out a5_178, out s2_111, out s3_151, out s4_146, out s8_100)
	branch a0_306 != s2_111 l2302DDE6
l2302DDE6:
	s3_151 = 0xFFFFFFFC<32>
l2302DD8E:
	a2_157 = Mem305[sp_160 + 164<i32>:word32]
	branch a3_309 == 0<32> l2302DCA2
l2302DD92:
	word32 a3_573
	word32 a4_574
	word32 a0_572
	word32 s1_571
	__free(ra_148, s8_100, a5_178, mstatus, Mem329[sp_160 + 16<i32>:word32], Mem329[sp_160 + 24<i32>:word32], Mem329[sp_160 + 96<i32>:word32], Mem329[sp_160 + 100<i32>:word32], Mem329[sp_160 + 136<i32>:word32], Mem329[sp_160 + 172<i32>:word32], Mem329[sp_160 + 344<i32>:word32], Mem329[sp_160 + 408<i32>:word32], out s1_571, out a0_572, out a3_573, out a4_574, out a5_335)
l2302DD98:
	a0Out = s3_151
	a5Out = a5_335
	s2Out = s2_111
	s3Out = s3_151
	s5Out = s4
	s6Out = s6_108
	s10Out = s10_173
	mstatusOut = mstatus
	return dwArg68
__protocol_send_exit:


word32 pro_trans_read(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 s10, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg6C, word32 dwArg7C, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __bl_ble_sync_task
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..15] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s0 s10 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pro_trans_read_entry:
l2302DDEA:
	word32 sp_188 = fp + -64<i32>
	word32 s2_14 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l2302DEB6
l2302DDFA:
	s2_14 = 0xFFFFFFFE<32>
	branch a1 == 0<32> l2302DEB6
l2302DE00:
	Mem20[a0 + 60<i32>:word16] = SLICE(a3, word16, 0)
	word32 a4_26
	word32 a5_935
	word32 a6_936
	word32 a7_937
	word32 a2_934
	word32 a3_104
	memcpy(fp + -52<i32>, a1, 2<32>, out a2_934, out a3_104, out a4_26, out a5_935, out a6_936, out a7_937)
	s0 = a0
	word32 a0_114 = fp + -52<i32>
	branch (CONVERT(bLoc34, byte, word32) & 1<32>) == 0<32> l2302DECC
l2302DE18:
	s3 = CONVERT(bLoc33, byte, word32)
	word32 a5_42 = CONVERT(Mem20[a0 + 32<i32>:byte], byte, word32)
	branch a5_42 == s3 l2302DE32
l2302DE24:
	a0_114 = xTaskGetTickCount(out a5_42)
	Mem45[a0_114 + 72<i32>:word32] = a0
	Mem46[a0 + 76<i32>:word32] = 0<32>
	Mem47[a0 + 32<i32>:byte] = SLICE(s3, byte, 0)
l2302DE32:
	s0 = Mem49[a4_26 + 76<i32>:word32]
	branch (a5_42 | a4_26) == 0<32> l2302DECC
l2302DE3A:
	word32 a5_55
	word32 a0_54 = xTaskGetTickCount(out a5_55)
	word32 a4_58 = a0_54 - a4_26
	word32 a5_435 = 0<32> - a5_55
	s0 = Mem49[a5_55 + 76<i32>:word32]
	a0_114 = a5_435 - CONVERT(a0_54 <u a4_58, bool, word32)
	branch a0_114 > 0<32> l2302DE62
l2302DE56:
	branch a0_114 != 0<32> l2302DECC
l2302DE58:
	a5_435 = 0x2000710<32>
	branch a4_58 <=u 0x2000710<32> l2302DECC
l2302DECC:
	word32 s1_108
	word32 a5_106
	word32 a4_105 = CONVERT(Mem66[a1 + 2<i32>:byte], byte, word32)
	word32 a2_103 = a2 + -4<i32>
	s3 = CONVERT(bLoc34, byte, word32) >>u 4<u32> & 3<i32>
	word32 s2_131 = CONVERT(Mem74[a1 + 4<i32>:byte], byte, word32)
	branch (CONVERT(Mem66[a1 + 3<i32>:byte], byte, word32) << 8<i32> | a4_105) << 17<i32> != 0<32> l2302DF94
l2302DF94:
	a5_106 = s2_131 + 1<i32>
	s1_108 = a1 + 5<32>
	branch a2 + -4<i32> != s2_131 + 1<i32> l2302DF10
l2302DF9E:
	Mem85[s2_131 + 17<i32>:byte] = 0<8>
l2302DEF4:
	Mem91[s0 + 58<i32>:word16] = SLICE(CONVERT(Mem74[a1 + 5<i32>:byte], byte, word32) << 8<i32> | s2_131, word16, 0)
	s2_131 = CONVERT(Mem91[a1 + 6<32>:byte], byte, word32)
	s1_108 = a1 + 7<32>
	a5_106 = s2_131 + 3<i32>
	branch a2 + -4<i32> == s2_131 + 3<i32> l2302DF14
l2302DF14:
	word32 s0_94 = Mem91[s2_131 + 39<i32>:word32]
	branch s2_131 == 3<32> l2302DF1E
l2302DF18:
	word32 a0_958
	s1_108 = __clear_dev(ra, s0_94, s2_131 + 3<i32>, mstatus, dwLoc40, dwLoc38, dwArg10, dwArg14, dwArg38, ra, dwArg0108, dwArg0148, out a0_958, out a2_103, out a3_104, out a4_105, out a5_106)
l2302DF1E:
	a0_114 = CONVERT(Mem91[s0_94 + 58<i32>:uint16], uint16, word32)
	branch a0_114 != 0<32> l2302DF5A
l2302DF5A:
	word32 s11_961
	word32 s4_960
	word32 a3_959
	ra = __malloc(ra, s1_108, a0_114, a3_104, a4_105, a5_106, mstatus, s2, dwLoc10, dwLoc0C, dwArg20, dwArg24, dwArg3C, dwArg48, dwArg6C, dwArgE8, dwArg0128, out s1_108, out a2_103, out a3_959, out a4_105, out a5_106, out s2_131, out s3, out s4_960, out s5, out s6, out s10, out s11_961)
	Mem147[a0_114 + 36<i32>:word32] = s0_94
	branch a0_114 != 0<32> l2302DF24
l2302DF24:
	Mem152[a5_106 + 16<i32>:byte] = 1<8>
l2302DF2C:
	word32 s0_162 = Mem157[a2_103 + 36<i32>:word32]
	word32 a3_196
	word32 a7_204
	word32 t0_205
	word32 t1_206
	word32 t4_207
	word32 t5_208
	word32 t6_209
	word32 tp_211
	word32 s11_213
	word32 s7_216
	word32 s9_217
	word32 s0_191
	word32 a5_198
	call Mem157[a5_106:int32] (retsize: 0;)
		uses: a0:Mem157[Mem157[a5_164 + 20<i32>:word32] + 24<i32>:word32],a1:s3_180,a2:fp + -53<i32>,a3:CONVERT(Mem157[s0_162 + 56<i32>:uint16], uint16, word32) + a2_159,a4:fp + -54<i32>,a5:s1_173,a6:s2_167,a7:a7_204,mstatus:mstatus,ra:ra_184,s0:s0_162,s1:s1_173,s10:s10_212,s11:s11_213,s2:s2_167,s3:s3_180,s5:s5_214,s6:s6_215,s7:s7_216,s9:s9_217,Stack +0000:dwLoc40,Stack +0008:dwLoc38,Stack +000C:bLoc34,Stack +000D:bLoc33,Stack +0028:dwLoc18,Stack +0030:dwLoc10,Stack +0034:dwLoc0C,Stack +0050:dwArg10,Stack +0054:dwArg14,Stack +0060:dwArg20,Stack +0064:dwArg24,Stack +0070:dwArg30,Stack +0074:dwArg34,Stack +0078:dwArg38,Stack +007C:dwArg3C,Stack +0088:dwArg48,Stack +00AC:dwArg6C,Stack +00BC:dwArg7C,Stack +0128:dwArgE8,Stack +0148:dwArg0108,Stack +0168:dwArg0128,Stack +0188:dwArg0148,t0:t0_205,t1:t1_206,t4:t4_207,t5:t5_208,t6:t6_209,tp:tp_211
		defs: a0:a0_194,a3:a3_196,a5:a5_198,a7:a7_204,mstatus:mstatus_210,ra:ra_190,s0:s0_191,s1:s1_192,s10:s10_212,s11:s11_213,s3:s3_193,s5:s5_214,s6:s6_215,s7:s7_216,s9:s9_217,sp:sp_188,t0:t0_205,t1:t1_206,t4:t4_207,t5:t5_208,t6:t6_209,tp:tp_211
	s2_14 = a0_114
	branch a0_114 == 0<32> l2302DFA6
l2302DFA6:
	word32 a4_222 = CONVERT(Mem157[sp_188 + 12<i32>:byte], byte, word32)
	word32 a5_224 = CONVERT(SLICE(CONVERT(Mem157[s0_191 + 56<i32>:uint16], uint16, word32) + CONVERT(Mem157[sp_188 + 10<i32>:byte], byte, word32), word16, 0), word16, word32)
	Mem225[s0_191 + 56<i32>:word16] = SLICE(a5_224, word16, 0)
	branch (a4_222 & 2<32>) == 0<32> l2302DFC8
l2302DFC0:
	a4_105 = CONVERT(Mem225[sp_188 + 14<i32>:int16], int16, int32)
	branch a4_105 >= 0<32> l2302DF64
l2302DFC8:
	branch CONVERT(Mem225[s0_191 + 58<i32>:uint16], uint16, word32) == a5_224 l2302DFD8
l2302DFD8:
	word32 a4_233 = CONVERT(Mem225[sp_188 + 11<i32>:byte], byte, word32)
	Mem234[sp_188 + 140<i32>:word32] = a5_224
	word32 a5_235 = Mem234[s0_191 + 164<i32>:int32]
	Mem236[sp_188 + 136<i32>:word32] = a4_233
	s0_191 = Mem236[a4_233 + 36<i32>:word32]
	Mem239[sp_188 + 16<i32>:byte] = SLICE(s3, byte, 0)
	Mem240[sp_188 + 12<i32>:word32] = a4_233
	a5_198 = Mem240[a5_235 + 4<i32>:word32]
	branch a5_198 == 0<32> l2302DF52
l2302DFF0:
	word32 a2_248
	word32 a3_249
	word32 s2_254
	word32 a5_968
	word32 s4_969
	word32 s11_970
	ra = __malloc(ra, s1_108, 256<i32>, a3_196, a4_233, a5_198, mstatus, Mem240[sp_188 + 24<i32>:word32], Mem240[sp_188 + 48<i32>:word32], Mem240[sp_188 + 52<i32>:word32], Mem240[sp_188 + 96<i32>:word32], Mem240[sp_188 + 100<i32>:word32], Mem240[sp_188 + 124<i32>:word32], Mem240[sp_188 + 136<i32>:word32], Mem240[sp_188 + 172<i32>:word32], Mem240[sp_188 + 296<i32>:word32], Mem240[sp_188 + 360<i32>:word32], out s1_108, out a2_248, out a3_249, out a4_105, out a5_968, out s2_254, out s3, out s4_969, out s5, out s6, out s10, out s11_970)
	Mem270[0x140<32>:word32] = s0_191
	a0_114 = 256<i32>
	branch false l2302DF62
l2302DF62:
	s2_14 = 0xFFFFFFFD<32>
l2302DFFC:
	word32 a5_275 = Mem270[Mem270[s0_191 + 164<i32>:int32] + 4<i32>:word32]
	word32 a0_282
	word32 a4_291
	word32 a7_292
	word32 t0_293
	word32 t1_294
	word32 t4_295
	word32 t5_296
	word32 t6_297
	word32 tp_299
	word32 s11_301
	word32 s7_304
	word32 s9_305
	call a5_275 (retsize: 0;)
		uses: a0:Mem270[s0_237 + 168<i32>:int32],a1:sp_188 + 16<i32>,a2:a2_248,a3:a3_249,a4:a4_291,a5:a5_275,a7:a7_292,mstatus:mstatus_210,ra:ra_261,s0:s0_237,s1:s1_253,s10:s10_300,s11:s11_301,s2:s2_254,s3:s3_255,s5:s5_302,s6:s6_303,s7:s7_304,s9:s9_305,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0030:dwArg30,Stack +0034:dwArg34,Stack +0038:dwArg38,Stack +003C:dwArg3C,Stack +0048:dwArg48,Stack +006C:dwArg6C,Stack +007C:dwArg7C,Stack +00E8:dwArgE8,Stack +0108:dwArg0108,Stack +0128:dwArg0128,Stack +0148:dwArg0148,Stack +FFFFFFC0:dwLoc40,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:bLoc34,Stack +FFFFFFCD:bLoc33,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF0:dwLoc10,Stack +FFFFFFF4:dwLoc0C,t0:t0_293,t1:t1_294,t4:t4_295,t5:t5_296,t6:t6_297,tp:tp_299
		defs: a0:a0_282,a4:a4_291,a5:a5_286,a7:a7_292,mstatus:mstatus_298,ra:ra_278,s0:s0_279,s10:s10_300,s11:s11_301,s3:s3_281,s5:s5_302,s6:s6_303,s7:s7_304,s9:s9_305,sp:sp_276,t0:t0_293,t1:t1_294,t4:t4_295,t5:t5_296,t6:t6_297,tp:tp_299
	s2_14 = a0_282
l2302DFD0:
	word32 a2_965
	word32 a5_967
	word32 a3_966
	s1_108 = __clear_dev(ra, s0_191, a5_224, mstatus, Mem225[sp_188:word32], Mem225[sp_188 + 8<i32>:word32], Mem225[sp_188 + 80<i32>:word32], Mem225[sp_188 + 84<i32>:word32], Mem225[sp_188 + 120<i32>:word32], Mem225[sp_188 + 156<i32>:word32], Mem225[sp_188 + 328<i32>:word32], Mem225[sp_188 + 392<i32>:word32], out a0_114, out a2_965, out a3_966, out a4_105, out a5_967)
l2302DF52:
	word32 a3_963
	word32 a5_964
	word32 a2_962
	s1_108 = __clear_dev(ra, s0_191, a5_198, mstatus, Mem325[sp_188:word32], Mem325[sp_188 + 8<i32>:word32], Mem325[sp_188 + 80<i32>:word32], Mem325[sp_188 + 84<i32>:word32], Mem325[sp_188 + 120<i32>:word32], Mem325[sp_188 + 156<i32>:word32], Mem325[sp_188 + 328<i32>:word32], Mem325[sp_188 + 392<i32>:word32], out a0_114, out a2_962, out a3_963, out a4_105, out a5_964)
l2302DF10:
	s2_14 = 0xFFFFFFFE<32>
l2302DF64:
	word32 a5_346 = CONVERT(Mem341[sp_188 + 12<i32>:byte], byte, word32) >>u 3<i32> & 1<32>
	branch a5_346 != 0<32> l2302DF84
l2302DF6E:
	ra = __protocol_send(ra, s1_108, Mem341[a4_105 + 64<i32>:word32], 1<32>, s2_14 & 255<i32>, a4_105, s10, mstatus, Mem341[sp_188:word32], Mem341[sp_188 + 4<i32>:word32], Mem341[sp_188 + 28<i32>:word32], Mem341[sp_188 + 40<i32>:word32], Mem341[sp_188 + 200<i32>:word32], Mem341[sp_188 + 264<i32>:word32], out a0_114, out a5_346, out s2_14, out s3, out s5, out s6, out s10, out mstatus)
l2302DF84:
	Mem414[Mem341[a0_114 + 64<i32>:word32] + 62<i32>:word16] = 0<16>
	word32 a5_946
	word32 a0_945
	word32 s1_944
	s0 = __free(ra, a0_114, a5_346, mstatus, Mem414[sp_188 + 16<i32>:word32], Mem414[sp_188 + 24<i32>:word32], Mem414[sp_188 + 96<i32>:word32], Mem414[sp_188 + 100<i32>:word32], Mem414[sp_188 + 136<i32>:word32], Mem414[sp_188 + 172<i32>:word32], Mem414[sp_188 + 344<i32>:word32], Mem414[sp_188 + 408<i32>:word32], out s1_944, out a0_945, out a3, out a4, out a5_946)
	Mem431[s0 + 64<i32>:word32] = 0<32>
l2302DE62:
	word32 a4_940
	word32 a5_941
	word32 a2_939
	word32 a0_938
	__clear_dev(ra, s0, a5_435, mstatus, dwLoc40, dwLoc38, dwArg10, dwArg14, dwArg38, ra, dwArg0108, dwArg0148, out a0_938, out a2_939, out a3, out a4_940, out a5_941)
	a4 = CONVERT(Mem49[0x4201A4D8<32>:byte], byte, word32)
	s2_14 = 0xFFFFFFFC<32>
	branch a4 >u 2<32> l2302DEB6
l2302DE78:
	a4 = CONVERT(Mem49[0x4201A4F8<32>:byte], byte, word32)
	branch a4 >u 2<32> l2302DEB6
l2302DE84:
	branch Mem49[0x4200E244<32>:int32] == 0<32> l2302DEC6
l2302DEC6:
	word32 a5_942
	xTaskGetTickCount(out a5_942)
l2302DE8E:
	word32 a5_943
	xTaskGetTickCountFromISR(out a5_943)
l2302DE92:
	word32 a1_949
	word32 a2_950
	word32 a5_951
	word32 s7_954
	word32 s8_955
	word32 s9_956
	word32 s11_957
	word32 s4_953
	word32 s2_952
	word32 s1_947
	word32 a0_948
	ra = bl_printk(ra, 0x23077588<32>, 0x2307755C<32>, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_947, out a0_948, out a1_949, out a2_950, out a3, out a4, out a5_951, out s2_952, out s3, out s4_953, out s5, out s6, out s7_954, out s8_955, out s9_956, out s10, out s11_957)
	s2_14 = 0xFFFFFFFC<32>
l2302DEB6:
	s0Out = s0
	a0Out = s2_14
	a2Out = dwArg0138
	a3Out = a3
	a4Out = a4
	s2Out = s2_14
	s3Out = s3
	s4Out = dwArgF4
	s5Out = s5
	s6Out = s6
	s8Out = dwArgD4
	s10Out = s10
	mstatusOut = mstatus
	return ra
pro_trans_read_exit:


word32 pro_trans_ack(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_data
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a5 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pro_trans_ack_entry:
l2302E00E:
	word32 a0_14
	word32 s3_25
	word32 s4_26
	word32 s5_27
	word32 s8_87
	word32 s6_86
	word32 s2_85
	word32 a7_84
	word32 a5_83
	word32 a4_82
	word32 a3_81
	word32 a2_80
	word32 a1_79
	word32 s1_78
	xQueueGenericSend(Mem5[a0 + 80<i32>:word32], 0<32>, 0<32>, a4, a5, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_78, out a0_14, out a1_79, out a2_80, out a3_81, out a4_82, out a5_83, out a7_84, out s2_85, out s3_25, out s4_26, out s5_27, out s6_86, out s8_87)
	branch a0_14 == 1<32> l2302E02C
l2302E02C:
l2302E024:
l2302E026:
	s3Out = s3_25
	s4Out = s4_26
	s5Out = s5_27
	return 1<32>
pro_trans_ack_exit:


void pro_trans_layer_ack_read(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
pro_trans_layer_ack_read_entry:
l2302E030:
	branch a0 == 0<32> l2302E068
l2302E068:
l2302E032:
	branch a1 == 0<32> l2302E06A
l2302E06A:
	return
l2302E036:
	branch a2 >u 256<i32> l2302E05C
l2302E048:
	word32 a0_19 = Mem15[320<i32>:word32]
	branch false l2302E05C
l2302E04E:
	word32 a7_116
	word32 a6_115
	word32 a5_114
	word32 a4_113
	word32 a3_112
	word32 a2_111
	memcpy(256<i32>, a1, a2, out a2_111, out a3_112, out a4_113, out a5_114, out a6_115, out a7_116)
	Mem37[a0_19 + 62<i32>:word16] = SLICE(a2, word16, 0)
l2302E05C:
	return
pro_trans_layer_ack_read_exit:


word32 pro_trans_init(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg38, word32 dwArg0118, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __bl_ble_sync_task
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0118:[0..31]
// LiveOut: a0 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
pro_trans_init_entry:
l2302E06E:
	word32 t1_74
	word32 a0_75
	word32 a1_76
	word32 a2_77
	word32 a3_78
	word32 a4_79
	word32 a5_80
	word32 ra_26 = memset(ra, a0, 0<32>, 176<i32>, out t1_74, out a0_75, out a1_76, out a2_77, out a3_78, out a4_79, out a5_80)
	word32 s1_34 = pro_encrypt_init(a0 + 4<i32>, a0 + 4<i32>)
	Mem36[a0 + 4<i32>:word32] = a0
	Mem37[a0 + 164<i32>:word32] = a1
	Mem38[a0 + 168<i32>:word32] = s1_34
	word32 a0_45
	word32 s1_81
	word32 a2_82
	word32 a3_83
	word32 a4_84
	word32 a5_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s0_48 = xQueueGenericCreateStatic(1<32>, 0<32>, 0<32>, a0 + 84<i32>, 3<32>, mstatus, dwArg0118, out s1_81, out a0_45, out a2_82, out a3_83, out a4_84, out a5_85, out s2_86, out s3_87, out s4_88)
	Mem59[a0_45 + 80<i32>:word32] = s0_48
	0<32> = dwArg38
	a0Out = s0_48
	return ra_26
pro_trans_init_exit:


word32 pro_trans_reset(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0148, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __bl_ble_sync_task
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a2 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: sp
pro_trans_reset_entry:
l2302E0BA:
l2302E0BA_thunk___clear_dev:
	word32 a2_10
	word32 a3_11
	word32 a4_12
	word32 a0_29
	word32 a5_30
	__clear_dev(ra, a0, a5, mstatus, dwArg00, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, dwArg0148, dwArg0188, out a0_29, out a2_10, out a3_11, out a4_12, out a5_30)
	a3Out = a3_11
	a4Out = a4_12
	return a2_10
pro_trans_reset_exit:


void __pack_encrypt_read(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31]
// LiveOut:
// Trashed: a0 a1 a3 a4 a5 a6 a7 t1
// Preserved: sp
__pack_encrypt_read_entry:
l2302E0BE:
	word32 a4_11
	word32 a6_13
	branch CONVERT(Mem0[a0 + 16<i32>:byte], byte, word32) == 0<32> l2302E0E8
l2302E0E8:
	a4_11 = a5 + 1<i32>
	a6_13 = a6 + 0xFFFFFFFF<32>
l2302E0C8:
	a4_11 = a5 + 9<i32>
	a6_13 = a6 + 0xFFFFFFF7<32>
l2302E0CE:
	word32 a5_18 = CONVERT(a1 != 0<32>, bool, word32)
	Mem20[a0 + 12<i32>:byte] = SLICE(a5_18, byte, 0)
	call Mem20[a5_18:int32] (retsize: 0;)
		uses: a0:Mem20[Mem20[a5_18:word32] + 4<i32>:word32],a1:a3,a3:a4,a4:a4_30,a5:a6_27 & 255<i32>,a6:a6_27
	return
__pack_encrypt_read_exit:


void __pack_encrypt_write(word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..15]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
__pack_encrypt_write_entry:
l2302E0F0:
	word32 a7_20
	Mem4[a3:byte] = 0<8>
	word32 a7_11 = CONVERT(SLICE(a7, word16, 0), word16, word32)
	branch CONVERT(Mem4[a0 + 16<i32>:byte], byte, word32) == 0<32> l2302E154
l2302E154:
	Mem22[a4:byte] = SLICE(CONVERT(Mem4[a4:byte], byte, word32) + 1<32>, byte, 0)
	a7_20 = a7_11 + 0xFFFFFFFF<32>
l2302E108:
	Mem23[a3 + 1<i32>:byte] = 0<8>
	Mem24[a3 + 2<i32>:byte] = 0<8>
	Mem25[a3 + 3<i32>:byte] = 0<8>
	Mem26[a3 + 4<i32>:byte] = 0<8>
	Mem27[a3 + 5<i32>:byte] = 0<8>
	Mem28[a3 + 6<i32>:byte] = 0<8>
	Mem29[a3 + 7<i32>:byte] = 0<8>
	Mem30[a3 + 8<i32>:byte] = 0<8>
	Mem35[a4:byte] = SLICE(CONVERT(Mem30[a4:byte], byte, word32) + 9<32>, byte, 0)
	a7_20 = a7_11 + 0xFFFFFFF7<32>
l2302E138:
	Mem38[a0 + 12<i32>:byte] = 1<8>
	call Mem38[5<32>:int32] (retsize: 0;)
		uses: a0:Mem38[Mem38[1<32>:word32] + 4<i32>:word32],a2:a4,a3:a2,a4:a5,a5:a6,a6:CONVERT(SLICE(a7_40, word16, 0), word16, int32),a7:a7_40
	return
__pack_encrypt_write_exit:


word32 pro_encrypt_init(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pro_trans_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: s1
// Trashed: a1 a2 a5 s1 tp
// Preserved: a0 s0 sp
pro_encrypt_init_entry:
l2302E166:
	pro_payload_init(a0 + 4<i32>, a0 + 4<i32>)
	Mem19[a0 + 4<i32>:word32] = a0
	Mem20[a1 + 24<i32>:word32] = a0
	Mem21[0x23082788<32>:word32] = a0
	return a1
pro_encrypt_init_exit:


void __payload_write(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..7] a4:[0..31] a5:[0..31] a6:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
__payload_write_entry:
l2302E194:
	branch a6 < 0<32> l2302E21E
l2302E21E:
	return
l2302E198:
	word32 a5_53
	word32 a6_21 = CONVERT(SLICE(a6, word16, 0), word16, word32)
	branch CONVERT(Mem11[a0 + 8<i32>:byte], byte, word32) != 0<32> l2302E1F0
l2302E1F0:
	word32 a6_23 = a6_21 + 0xFFFFFFFE<32> << 16<i32>
	word32 a6_24 = a6_23 >> 0x10<u32>
	branch a5 >= a6_23 >> 0x10<u32> l2302E1FE
l2302E1FC:
	a6_24 = a5
l2302E1FE:
	word32 s0_28 = a6_24 & 255<i32>
	Mem30[a1:byte] = SLICE(s0_28, byte, 0)
	Mem33[a1 + 1<i32>:byte] = SLICE(a3, byte, 0)
	word32 a3_181
	word32 a2_180
	word32 a4_182
	word32 a5_183
	word32 a6_184
	word32 a7_185
	memcpy(a1 + 2<i32>, a4, s0_28, out a2_180, out a3_181, out a4_182, out a5_183, out a6_184, out a7_185)
	a5_53 = CONVERT(Mem33[a2:byte], byte, word32) + 2<32> + s0_28
l2302E1B2:
	word32 a6_55 = a6_21 + 0xFFFFFFFF<32> << 16<i32>
	word32 a6_56 = a6_55 >> 0x10<u32>
	branch a5 >= a6_55 >> 0x10<u32> l2302E1C0
l2302E1BE:
	a6_56 = a5
l2302E1C0:
	branch (a6_56 & 255<i32>) != 4<32> l2302E1E6
l2302E1CC:
	Mem64[a1:byte] = SLICE(a3, byte, 0)
	word32 a7_179
	word32 a6_178
	word32 a5_177
	word32 a4_176
	word32 a3_175
	word32 a2_174
	memcpy(a1 + 1<i32>, a4, 4<32>, out a2_174, out a3_175, out a4_176, out a5_177, out a6_178, out a7_179)
	a5_53 = CONVERT(Mem64[a2:byte], byte, word32) + 5<32>
l2302E1E0:
	Mem86[a2:byte] = SLICE(a5_53, byte, 0)
l2302E1E6:
	return
__payload_write_exit:


void __payload_read(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
__payload_read_entry:
l2302E222:
	word32 a2_21
	word32 a1_18
	branch CONVERT(Mem5[a0 + 8<i32>:byte], byte, word32) != 0<32> l2302E25A
l2302E25A:
	branch a5 + 0xFFFFFFFE<32> != CONVERT(Mem5[a4:byte], byte, word32) l2302E254
l2302E266:
	Mem16[a3:byte] = SLICE(a5 + 0xFFFFFFFE<32>, byte, 0)
	Mem20[a2:byte] = SLICE(CONVERT(Mem16[a4 + 1<i32>:byte], byte, word32), byte, 0)
	a1_18 = a4 + 2<i32>
	a2_21 = CONVERT(Mem20[a3:byte], byte, word32)
l2302E22E:
	branch a5 != 5<32> l2302E254
l2302E236:
	Mem25[a3:byte] = 4<8>
	Mem28[a2:byte] = SLICE(CONVERT(Mem25[a4:byte], byte, word32), byte, 0)
	a1_18 = a4 + 1<i32>
	a2_21 = CONVERT(Mem28[a3:byte], byte, word32)
l2302E24C:
	word32 a2_78
	word32 a3_79
	word32 a4_80
	word32 a5_81
	word32 a6_82
	word32 a7_83
	memcpy(a1, a1_18, a2_21, out a2_78, out a3_79, out a4_80, out a5_81, out a6_82, out a7_83)
l2302E254:
	return
__payload_read_exit:


void pro_payload_init(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pro_encrypt_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
pro_payload_init_entry:
l2302E27C:
	Mem6[0x2308277C<32>:word32] = a0
	Mem8[a1 + 4<i32>:word32] = a0
	return
pro_payload_init_exit:


word32 cJSON_New_Item(word32 ra, word32 s0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cJSON_CreateNumber
//      cJSON_CreateString
//      cJSON_CreateObject
// MayUse:  ra:[0..31] s0:[0..31]
// LiveOut: ra
// Trashed: a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
cJSON_New_Item_entry:
l2302E28A:
	word32 a5_5 = Mem0[0x4200DC60<32>:int32]
	word32 a0_16
	word32 ra_15
	call a5_5 (retsize: 0;)
		uses: a0:40<i32>,a5:a5_5,ra:ra,s0:s0,Stack +0004:s0,Stack +0084:ra
		defs: a0:a0_16,ra:ra_15
	branch a0_16 == 0<32> l2302E2AC
l2302E2A2:
	word32 a0_56
	word32 t1_55
	word32 a1_57
	word32 a2_58
	word32 a3_59
	word32 a4_60
	word32 a5_61
	ra_15 = memset(ra_15, a0_16, 0<32>, 40<i32>, out t1_55, out a0_56, out a1_57, out a2_58, out a3_59, out a4_60, out a5_61)
l2302E2AC:
	return ra_15
cJSON_New_Item_exit:


word32 ensure(word32 ra, word32 a0, word32 a1, word32 a4, word32 a5, word32 s3, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_number
//      print_string_ptr
//      print_array.isra.4
//      print_object.isra.3
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s3:[0..31]
// LiveOut: a0 a1 a4 a5 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
ensure_entry:
l2302E2B6:
	word32 s2_102 = 0<32>
	branch a0 == 0<32> l2302E32C
l2302E2C6:
	s2_102 = Mem13[a0:int32]
	branch s2_102 == 0<32> l2302E32C
l2302E2CE:
	word32 a0_20 = Mem13[a4 + 4<i32>:word32]
	a1 = a1 + a5
	branch a4 < a1 l2302E2DC
l2302E2DC:
	word32 s0_25 = a1 + -1<i32> | a1 + -1<i32> >> 1<u32>
	word32 s0_27 = s0_25 | s0_25 >> 2<u32>
	word32 s0_29 = s0_27 | s0_27 >> 4<u32>
	word32 s0_31 = s0_29 | s0_29 >> 8<u32>
	word32 s0_33 = s0_31 | s0_31 >> 0x10<u32>
	word32 a5_35 = Mem13[0x4200DC60<32>:int32]
	word32 ra_41
	word32 s0_42
	word32 a0_45
	word32 a4_47
	word32 a1_48
	word32 a2_53
	word32 a7_145
	word32 a3_146
	word32 t0_147
	word32 t1_148
	word32 t4_149
	word32 t5_150
	word32 t6_151
	call a5_35 (retsize: 0;)
		uses: a0:s0_33 + 1<32>,a1:s0_27 >> 4<u32>,a3:a3_146,a4:a4,a5:a5_35,a7:a7_145,ra:ra,s0:s0_33 + 1<32>,s1:a0_20,s2:s2_16,s3:s3,t0:t0_147,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151
		defs: a0:a0_45,a1:a1_48,a2:a2_53,a3:a3_146,a4:a4_47,a7:a7_145,ra:ra_41,s0:s0_42,t0:t0_147,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151
	word32 s1_56 = Mem13[a1_48:word32]
	branch a0_45 != 0<32> l2302E33C
l2302E33C:
	word32 a4_59
	word32 a2_211
	word32 a3_212
	word32 a5_213
	word32 a6_214
	word32 a7_215
	word32 a1_62 = memcpy(a0_45, a1_48, a2_53, out a2_211, out a3_212, out a4_59, out a5_213, out a6_214, out a7_215)
	word32 a5_72 = Mem13[0x4200DC5C<32>:int32]
	word32 a7_89
	word32 a3_90
	word32 t0_91
	word32 t1_92
	word32 t4_93
	word32 t5_94
	word32 t6_95
	call a5_72 (retsize: 0;)
		uses: a0:a0_45,a1:a1_62,a3:a3_90,a4:a4_59,a5:a5_72,a7:a7_89,ra:ra_41,s0:s0_42,s1:Mem13[a0_45:word32],s2:a0_45,s3:0x4200DC5C<32>,t0:t0_91,t1:t1_92,t4:t4_93,t5:t5_94,t6:t6_95
		defs: a1:a1_83,a3:a3_90,a4:a4_82,a5:a5_81,a7:a7_89,ra:ra_76,s0:s0_77,s2:s2_75,s3:s3_79,t0:t0_91,t1:t1_92,t4:t4_93,t5:t5_94,t6:t6_95
	s1 = Mem13[a5 + 8<i32>:word32]
	Mem97[s0 + 4<i32>:word32] = s1
	Mem98[s1:word32] = s2_102
l2302E31C:
	word32 a5_99 = Mem13[0x4200DC5C<32>:int32]
	word32 a7_116
	word32 a3_117
	word32 t0_118
	word32 t1_119
	word32 t4_120
	word32 t5_121
	word32 t6_122
	call a5_99 (retsize: 0;)
		uses: a0:a1_48,a1:a1_48,a3:a3_117,a4:a4_47,a5:a5_99,a7:a7_116,ra:ra_41,s0:s0_42,s1:s1_56,s2:a0_45,s3:0x4200DC5C<32>,t0:t0_118,t1:t1_119,t4:t4_120,t5:t5_121,t6:t6_122
		defs: a1:a1_110,a3:a3_117,a4:a4_109,a5:a5_108,a7:a7_116,ra:ra_103,s0:s0_104,s1:s1_105,s2:s2_102,s3:s3_106,t0:t0_118,t1:t1_119,t4:t4_120,t5:t5_121,t6:t6_122
	Mem123[s1 + 4<i32>:word32] = 0<32>
	Mem124[s1:word32] = 0<32>
l2302E2D8:
	s2_102 = s2_102 + a5
l2302E32C:
	s0Out = s0
	s1Out = s1
	a0Out = s2_102
	a1Out = a1
	a4Out = a4
	a5Out = a5
	s2Out = s2_102
	s3Out = s3
	s4Out = dwArg04
	s8Out = dwLoc1C
	return ra
ensure_exit:


word32 cJSON_strdup(word32 ra, word32 s0, word32 a0, word32 dwArg44, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cJSON_AddItemToObject
//      cJSON_CreateString
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a4 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
cJSON_strdup_entry:
l2302E354:
	word32 a1_87
	word32 a2_88
	word32 a3_89
	word32 a4_90
	word32 a5_91
	word32 a0_10 = strlen(a0, out a1_87, out a2_88, out a3_89, out a4_90, out a5_91)
	word32 a5_17 = Mem9[0x4200DC60<32>:int32]
	word32 a0_24
	word32 a1_31
	word32 a4_30
	word32 a5_25
	call a5_17 (retsize: 0;)
		uses: a0:a0_10 + 1<i32>,a2:a0_10 + 1<i32>,a5:a5_17,ra:ra,s0:s0,Stack +0004:a0_10 + 1<i32>
		defs: a0:a0_24,a1:a1_31,a4:a4_30,a5:a5_25
	word32 s0_32 = a0_24
	branch a0_24 == 0<32> l2302E37E
l2302E376:
	word32 a2_92
	word32 a3_93
	word32 a6_94
	word32 a7_95
	memcpy(a0_24, a1_31, dwArg44, out a2_92, out a3_93, out a4_30, out a5_25, out a6_94, out a7_95)
	s0_32 = a0
l2302E37E:
	a0Out = s0_32
	a4Out = a4_30
	a5Out = a5_25
	return s0_32
cJSON_strdup_exit:


word32 update(word32 a0, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_array.isra.4
//      print_object.isra.3
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: s0 sp
update_entry:
l2302E388:
	word32 s0_12 = 0<32>
	branch a0 == 0<32> l2302E3A4
l2302E392:
	s0_12 = 0<32>
	branch a4 == 0<32> l2302E3A4
l2302E398:
	word32 a1_43
	word32 a2_44
	word32 a3_45
	s0_12 = strlen(a4, out a1_43, out a2_44, out a3_45, out a4, out a5)
l2302E3A4:
	a4Out = a4
	a5Out = a5
	return s0_12
update_exit:


void print_number(word32 ra, word32 s1, word32 a0, word32 a1, word32 fflags, word32 frm)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
print_number_entry:
l2302E3AE:
	word32 s3_17 = Mem15[a0 + 28<i32>:int32]
	word32 s2_18 = Mem15[a0 + 24<i32>:int32]
	word32 sp_117 = fp + 0xFFFFFFE0<32>
	word32 a1_29
	word32 a4_31
	word32 a5_32
	branch __eqdf2(s2_18, s3_17, 0<32>, 0<32>, fflags, frm, out a1_29, out a4_31, out a5_32) != 0<32> l2302E410
l2302E410:
	word32 a1_42
	word32 a1_48
	word32 a1_113
	word32 a5_140
	word32 a4_141
	branch __ledf2(__subdf3(ra, __floatsidf(Mem15[a0 + 20<i32>:int32], out a1_42), a1_42, s2_18, s3_17, fflags, frm, out a1_48), fabs(a1_48), Mem15[0x23077618<32>:int32], Mem15[0x2307761C<32>:int32], fflags, frm, out a1_113, out a4_141, out a5_140) > 0<32> l2302E496
l2302E438:
	branch __ledf2(s2_18, s3_17, Mem15[0x23077620<32>:int32], Mem15[0x23077624<32>:int32], fflags, frm, out a1_113, out a4_141, out a5_140) > 0<32> l2302E496
l2302E450:
	branch __gedf2(s2_18, s3_17, Mem15[0x23077628<32>:int32], Mem15[0x2307762C<32>:int32], fflags, frm, out a1_113, out a4_141, out a5_140) < 0<32> l2302E496
l2302E496:
	word32 s1_121
	word32 ra_120
	word32 s3_123
	word32 s2_122
	word32 a0_124
	branch a1 == 0<32> l2302E4FA
l2302E4FA:
	word32 a5_106 = Mem15[0x4200DC60<32>:int32]
	word32 s9_496
	word32 s5_493
	word32 s6_494
	word32 s7_495
	word32 s10_491
	word32 s11_492
	call a5_106 (retsize: 0;)
		uses: a0:64<i32>,a1:a1_113,a5:a5_106,fflags:fflags,frm:frm,ra:ra,s0:a1,s1:0x23077000<32>,s10:s10_491,s11:s11_492,s2:s2_18,s3:s3_17,s4:a0,s5:s5_493,s6:s6_494,s7:s7_495,s9:s9_496
		defs: a0:a0_124,fflags:fflags_133,frm:frm_132,ra:ra_120,s1:s1_121,s10:s10_491,s11:s11_492,s2:s2_122,s3:s3_123,s5:s5_493,s6:s6_494,s7:s7_495,s9:s9_496,sp:sp_117
l2302E498:
	word32 s0_690
	word32 a1_691
	word32 a4_692
	word32 a5_693
	word32 s8_695
	word32 s4_694
	ra_120 = ensure(ra, a1, 64<i32>, a4_141, a5_140, s3_17, out s0_690, out s1_121, out a0_124, out a1_691, out a4_692, out a5_693, out s2_122, out s3_123, out s4_694, out s8_695)
l2302E4A2:
	branch a0_124 == 0<32> l2302E3F0
l2302E4A6:
	word32 a1_270
	word32 a1_182
	word32 a1_186
	word32 a4_697
	word32 a1_696
	word32 a5_698
	branch __ledf2(__subdf3(ra_120, floor(ra_120, s2_122, s3_123, fflags, frm, out a1_182), a1_182, s2_122, s3_123, fflags, frm, out a1_186), fabs(a1_186), Mem15[s1_121 + 1560<i32>:int32], Mem15[s1_121 + 1564<i32>:int32], fflags, frm, out a1_696, out a4_697, out a5_698) > 0<32> l2302E50A
l2302E4CA:
	word32 a1_702
	word32 a4_703
	word32 a5_704
	branch __ledf2(s2_122, fabs(s3_123), Mem15[0x23077630<32>:int32], Mem15[0x23077634<32>:int32], fflags, frm, out a1_702, out a4_703, out a5_704) >= 0<32> l2302E50A
l2302E50A:
	word32 a4_700
	word32 a1_699
	word32 a5_701
	branch __ledf2(s2_122, fabs(s3_123), Mem15[0x23077638<32>:int32], Mem15[0x2307763C<32>:int32], fflags, frm, out a1_699, out a4_700, out a5_701) >= 0<32> l2302E534
l2302E534:
	word32 a1_705
	word32 a4_706
	word32 a5_707
	branch __gedf2(s2_122, fabs(s3_123), Mem15[0x23077640<32>:int32], Mem15[0x23077644<32>:int32], fflags, frm, out a1_705, out a4_706, out a5_707) > 0<32> l2302E526
l2302E550:
	a1_270 = 0x23077658<32>
l2302E526:
	a1_270 = 0x23077654<32>
l2302E4E6:
	a1_270 = 0x2307764C<32>
l2302E4F2:
	word32 s0_708
	word32 s1_709
	word32 a0_710
	word32 a1_711
	word32 a4_712
	word32 a5_713
	word32 s2_714
	word32 s3_715
	word32 s4_716
	word32 s5_717
	word32 s6_718
	word32 s7_719
	word32 s8_720
	word32 s9_721
	word32 s10_722
	word32 s11_723
	sprintf(ra_120, a0_124, a1_270, Mem15[sp_117 + 24<i32>:word32], Mem15[sp_117 + 56<i32>:word32], Mem15[sp_117 + 100<i32>:word32], Mem15[sp_117 + 128<i32>:word32], Mem15[sp_117 + 132<i32>:word32], Mem15[sp_117 + 168<i32>:word32], Mem15[sp_117 + 204<i32>:word32], out s0_708, out s1_709, out a0_710, out a1_711, out a4_712, out a5_713, out s2_714, out s3_715, out s4_716, out s5_717, out s6_718, out s7_719, out s8_720, out s9_721, out s10_722, out s11_723)
l2302E468:
	word32 ra_324
	word32 a0_328
	branch a1 == 0<32> l2302E488
l2302E488:
	word32 a5_319 = Mem15[0x4200DC60<32>:int32]
	word32 s10_345
	word32 s11_346
	word32 s5_347
	word32 s6_348
	word32 s7_349
	word32 s9_350
	call a5_319 (retsize: 0;)
		uses: a0:0x15<32>,a1:a1_93,a5:a5_319,fflags:fflags,frm:frm,ra:ra,s0:a1,s1:0x23077000<32>,s10:s10_345,s11:s11_346,s2:s2_18,s3:s3_17,s4:a0,s5:s5_347,s6:s6_348,s7:s7_349,s9:s9_350
		defs: a0:a0_328,ra:ra_324,s10:s10_345,s11:s11_346,s5:s5_347,s6:s6_348,s7:s7_349,s9:s9_350,sp:sp_321
l2302E46A:
	word32 s2_670
	word32 s3_671
	word32 s4_672
	word32 s8_673
	word32 a5_669
	word32 a4_668
	word32 s1_666
	word32 a1_667
	word32 s0_665
	ra_324 = ensure(ra, a1, 0x15<32>, a4_141, a5_140, s3_17, out s0_665, out s1_666, out a0_328, out a1_667, out a4_668, out a5_669, out s2_670, out s3_671, out s4_672, out s8_673)
l2302E472:
	branch a0_328 == 0<32> l2302E3F0
l2302E476:
	word32 s9_687
	word32 s10_688
	word32 s8_686
	word32 s11_689
	word32 a4_678
	word32 s7_685
	word32 s6_684
	word32 s4_682
	word32 s5_683
	word32 a5_679
	word32 s2_680
	word32 s3_681
	word32 a1_677
	word32 a0_676
	word32 s0_674
	word32 s1_675
	sprintf(ra_324, a0_328, 0x23077648<32>, Mem15[sp_117 + 24<i32>:word32], Mem15[sp_117 + 56<i32>:word32], Mem15[sp_117 + 100<i32>:word32], Mem15[sp_117 + 128<i32>:word32], Mem15[sp_117 + 132<i32>:word32], Mem15[sp_117 + 168<i32>:word32], Mem15[sp_117 + 204<i32>:word32], out s0_674, out s1_675, out a0_676, out a1_677, out a4_678, out a5_679, out s2_680, out s3_681, out s4_682, out s5_683, out s6_684, out s7_685, out s8_686, out s9_687, out s10_688, out s11_689)
l2302E3D6:
	word32 a0_416
	branch a1 == 0<32> l2302E402
l2302E402:
	word32 a5_407 = Mem15[0x4200DC60<32>:int32]
	word32 s10_433
	word32 s11_434
	word32 s5_435
	word32 s6_436
	word32 s7_437
	word32 s9_438
	call a5_407 (retsize: 0;)
		uses: a0:2<32>,a1:a1_29,a5:a5_407,fflags:fflags,frm:frm,ra:ra,s0:a1,s1:s1,s10:s10_433,s11:s11_434,s2:s2_18,s3:s3_17,s4:a0,s5:s5_435,s6:s6_436,s7:s7_437,s9:s9_438
		defs: a0:a0_416,s10:s10_433,s11:s11_434,s5:s5_435,s6:s6_436,s7:s7_437,s9:s9_438
l2302E3D8:
	word32 s8_662
	word32 s0_654
	word32 s4_661
	word32 s3_660
	word32 a5_658
	word32 s2_659
	word32 s1_655
	word32 a1_656
	word32 a4_657
	ensure(ra, a1, 2<32>, a4_31, a5_32, s3_17, out s0_654, out s1_655, out a0_416, out a1_656, out a4_657, out a5_658, out s2_659, out s3_660, out s4_661, out s8_662)
l2302E3E0:
	branch a0_416 == 0<32> l2302E3F0
l2302E3E4:
	word32 a4_663
	word32 a5_664
	strcpy(a0_416, 0x2307CDB4<32>, out a4_663, out a5_664)
l2302E3F0:
	return
print_number_exit:


word32 print_string_ptr(word32 ra, word32 a0, word32 a1, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s10, word32 dwArg1C, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_object.isra.3
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s10:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +001C:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a4 a5 a6 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
print_string_ptr_entry:
l2302E55E:
	word32 sp_3 = fp + -48<i32>
	word32 s0_14 = a0
	word32 a4_100 = 0<32>
l2302E586:
	word32 a5_226 = CONVERT(Mem32[s0_14:byte], byte, word32)
	branch a5_226 != 0<32> l2302E5C2
l2302E5C2:
	word32 a2_41 = 1<32>
	branch (a5_226 + -1<i32> & 255<i32>) <=u 0x1E<32> l2302E5DC
l2302E5D0:
	branch a5_226 == 34<i32> l2302E5DC
l2302E5D4:
	a2_41 = CONVERT(a5_226 <u -93<i32>, bool, word32)
l2302E5DC:
	a4_100 = a4_100 | a2_41
	s0_14 = s0_14 + 1<32>
l2302E58C:
	word32 ra_113
	word32 s3_116
	word32 s2_104
	word32 a1_108
	word32 a4_110
	word32 s1_123
	word32 a5_111
	word32 s0_125
	branch a4_100 != 0<32> l2302E5F0
l2302E5F0:
	branch a0 != 0<32> l2302E65E
l2302E65E:
	word32 s3_236 = a0
	word32 s0_232 = 0<32>
	s5 = 0x23077000<32>
	s6 = 0x1F<32>
l2302E63E:
	word32 s4_60 = CONVERT(Mem32[s3_236:byte], byte, word32)
	branch s4_60 == 0<32> l2302E66A
l2302E66A:
	word32 a0_101
	word32 a1_62 = s0_232 + 3<i32>
	branch a1 == 0<32> l2302E6B0
l2302E6B0:
	word32 a5_65 = Mem32[0x4200DC60<32>:int32]
	call a5_65 (retsize: 0;)
		uses: a0:a1_62,a1:a1_62,a5:a5_65,ra:ra,s0:s0_61,s1:a1,s10:s10,s11:s11_481,s2:a0,s3:s3_58,s4:s4_60,s5:0x23077000<32>,s6:0x1F<32>,s7:s7,s8:s8,s9:s9
		defs: a0:a0_81,a1:a1_80,a4:a4_91,a5:a5_92,ra:ra_82,s10:s10_90,s11:s11_481,s2:s2_79,s3:s3_83,s5:s5_85,s6:s6_86,s7:s7_87,s9:s9_89,sp:sp_76
l2302E670:
	word32 s8_827
	word32 s0_824
	word32 s1_825
	word32 s4_826
	ra_113 = ensure(ra, a1, a1_62, a4_100, a5_226, s3_236, out s0_824, out s1_825, out a0_101, out a1_108, out a4_110, out a5_111, out s2_104, out s3_116, out s4_826, out s8_827)
l2302E676:
	s1_123 = a0_101
	branch a0_101 == 0<32> l2302E60E
l2302E67A:
	Mem126[a0_101:byte] = 0x22<8>
	s0_125 = a0_101 + 1<i32>
	s6 = 0x1F<32>
	s3_116 = 92<i32>
	s5 = 0xC<32>
	s7 = 102<i32>
	word32 s8_131 = 0x23077000<32>
	word32 s4_132 = 34<i32>
	s9 = 0xD<32>
	s10 = 114<i32>
l2302E6A0:
	word32 a5_137 = CONVERT(Mem136[s2_104:byte], byte, word32)
	branch a5_137 != 0<32> l2302E6BE
l2302E6BE:
	word32 a0_139 = s0_125 + 1<i32>
	s2_104 = s2_104 + 1<32>
	branch s6 >=u a5_137 l2302E6D8
l2302E6C8:
	branch a5_137 == s4_132 l2302E6D8
l2302E6CC:
	branch a5_137 == s3_116 l2302E6D8
l2302E6D8:
	Mem146[s0_125:byte] = SLICE(s3_116, byte, 0)
	word32 a2_148 = CONVERT(Mem146[s2_104 + -1<i32>:byte], byte, word32)
	branch a2_148 == s5 l2302E732
l2302E732:
	Mem154[s0_125 + 1<i32>:byte] = SLICE(s7, byte, 0)
	a0_139 = s0_125 + 2<i32>
l2302E6E4:
	branch s5 <u a2_148 l2302E708
l2302E708:
	branch a2_148 == s4_132 l2302E728
l2302E728:
	Mem157[s0_125 + 1<i32>:byte] = SLICE(s4_132, byte, 0)
	a0_139 = s0_125 + 2<i32>
l2302E70C:
	branch a2_148 == s3_116 l2302E71E
l2302E71E:
	Mem159[s0_125 + 1<i32>:byte] = SLICE(s3_116, byte, 0)
	a0_139 = s0_125 + 2<i32>
l2302E710:
	branch a2_148 != s9 l2302E750
l2302E714:
	Mem165[s0_125 + 1<i32>:byte] = SLICE(s10, byte, 0)
	a0_139 = s0_125 + 2<i32>
l2302E6E8:
	word32 a5_168
	branch a2_148 == 9<32> l2302E746
l2302E746:
	a0_139 = s0_125 + 2<i32>
	a5_168 = 116<i32>
l2302E6EE:
	branch a2_148 == 0xA<32> l2302E73C
l2302E73C:
	a0_139 = s0_125 + 2<i32>
	a5_168 = 110<i32>
l2302E6F4:
	branch a2_148 != 8<32> l2302E750
l2302E750:
	word32 s0_194
	word32 a0_828
	word32 a5_829
	ra_113 = sprintf(ra_113, a0_139, s8_131 + 1640<i32>, Mem146[sp_3 + 24<i32>:word32], Mem146[sp_3 + 56<i32>:word32], Mem146[sp_3 + 100<i32>:word32], Mem146[sp_3 + 128<i32>:word32], Mem146[sp_3 + 132<i32>:word32], Mem146[sp_3 + 168<i32>:word32], Mem146[sp_3 + 204<i32>:word32], out s0_194, out s1_123, out a0_828, out a1_108, out a4_110, out a5_829, out s2_104, out s3_116, out s4_132, out s5, out s6, out s7, out s8_131, out s9, out s10, out s11)
	a0_139 = s0_194 + 6<i32>
l2302E6FA:
	a0_139 = s0_125 + 2<i32>
	a5_168 = 98<i32>
l2302E702:
	Mem214[s0_125 + 1<i32>:byte] = SLICE(a5_168, byte, 0)
l2302E6D0:
	Mem215[s0_125:byte] = SLICE(a5_137, byte, 0)
l2302E6D4:
	s0_125 = a0_139
l2302E6A6:
	Mem220[s0_125:byte] = 0x22<8>
	a5_111 = 34<i32>
l2302E646:
	word32 a3_823
	word32 a2_822
	branch strchr(0x23077660<32>, s4_60, out a2_822, out a3_823, out a4_100, out a5_226) != 0<32> l2302E63A
l2302E63A:
	s0_232 = s0_232 + 2<32>
l2302E652:
	branch s4_60 <=u 0x1F<32> l2302E65A
l2302E65A:
	s0_232 = s0_232 + 6<32>
l2302E656:
	s0_232 = s0_232 + 1<32>
l2302E63C:
	s3_236 = s3_236 + 1<32>
l2302E5F4:
	word32 a0_267
	branch a1 == 0<32> l2302E62C
l2302E62C:
	word32 a5_240 = Mem32[0x4200DC60<32>:int32]
	call a5_240 (retsize: 0;)
		uses: a0:3<32>,a1:0x1E<32>,a5:a5_240,ra:ra,s0:s0_36,s1:a1,s10:s10,s11:s11_290,s2:a0,s3:s3,s4:s4,s5:s5,s6:s6,s7:s7,s8:s8,s9:s9
		defs: a0:a0_267,a1:a1_266,a4:a4_277,a5:a5_278,ra:ra_268,s10:s10_276,s11:s11_290,s2:s2_265,s3:s3_269,s5:s5_271,s6:s6_272,s7:s7_273,s9:s9_275
l2302E5F6:
	word32 s4_820
	word32 s8_821
	word32 s1_819
	word32 s0_818
	ra_113 = ensure(ra, a1, 3<32>, a4_100, a5_226, s3, out s0_818, out s1_819, out a0_267, out a1_108, out a4_110, out a5_111, out s2_104, out s3_116, out s4_820, out s8_821)
l2302E5FE:
	s1_123 = a0_267
	branch a0_267 == 0<32> l2302E60E
l2302E602:
	a1_108 = strcpy(a0_267, 0x2307765C<32>, out a4_110, out a5_111)
l2302E58E:
	word32 a0_331
	word32 s3_321 = s0_14 - a0
	branch a1 == 0<32> l2302E5E2
l2302E5E2:
	word32 a5_324 = Mem32[0x4200DC60<32>:int32]
	call a5_324 (retsize: 0;)
		uses: a0:s3_321 + 3<i32>,a1:s3_321 + 3<i32>,a5:a5_324,ra:ra,s0:s0_36,s1:a1,s10:s10,s11:s11_354,s2:a0,s3:s3_321,s4:s4,s5:s5,s6:s6,s7:s7,s8:s8,s9:s9
		defs: a0:a0_331,a1:a1_330,a4:a4_341,a5:a5_342,ra:ra_332,s10:s10_340,s11:s11_354,s2:s2_329,s3:s3_333,s5:s5_335,s6:s6_336,s7:s7_337,s9:s9_339
l2302E598:
	word32 s0_814
	word32 s1_815
	word32 s4_816
	word32 s8_817
	ra_113 = ensure(ra, a1, s3_321 + 3<i32>, a4_100, a5_226, s3_321, out s0_814, out s1_815, out a0_331, out a1_108, out a4_110, out a5_111, out s2_104, out s3_116, out s4_816, out s8_817)
l2302E59E:
	s1_123 = a0_331
	branch a0_331 == 0<32> l2302E60E
l2302E5A2:
	Mem381[a0_331:byte] = 0x22<8>
	word32 s0_379 = a0_331 + 1<i32>
	s0_125 = s0_379 + s3_116
	a1_108 = strcpy(s0_379, s2_104, out a4_110, out a5_111)
	Mem390[s0_125:byte] = 0x22<8>
l2302E5BC:
	Mem392[s0_125 + 1<i32>:byte] = 0<8>
l2302E60E:
	0<32> = dwArg0128
	0<32> = dwArg1C
	s1Out = s1_123
	a0Out = s1_123
	a1Out = a1_108
	a4Out = a4_110
	a5Out = a5_111
	a6Out = dwArg98
	s2Out = s2_104
	s3Out = s3_116
	s4Out = dwArg78
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra_113
print_string_ptr_exit:


void print_array.isra.4(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s4, word32 s7, word32 s8, word32 s9, word32 s10, word32 s11, word32 dwArg010C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s4:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +010C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
print_array.isra.4_entry:
l2302E75E:
	word32 a0_30 = Mem29[s0:word32]
	word32 s3_38 = 0<32>
l2302E786:
	branch s0 != 0<32> l2302E7C6
l2302E7C6:
	s3_38 = s3_38 + 1<32>
	s0 = Mem29[s0:word32]
l2302E788:
	branch s3_38 != 0<32> l2302E7DA
l2302E7DA:
	branch a3 == 0<32> l2302E876
l2302E876:
	word32 a2_47 = s3_38 << 2<u32>
	word32 sp_63
	word32 s2_65
	word32 s6_68
	word32 ra_69
	word32 a0_77
	word32 a5_85
	word32 s3_130
	word32 s5_131
	word32 s11_140
	call Mem29[0x4200DC60<32>:int32] (retsize: 0;)
		uses: a0:a2_47,a1:a1,a2:a2_47,a3:a3,a4:a4,a5:a5_85,ra:ra,s0:s0_39,s1:0x4200E000<32>,s10:s10,s11:s11,s2:a0_30,s3:s3_40,s4:s4,s5:a2,s6:a1,s7:s7,s8:s8,s9:s9,Stack +0084:a2_47
		defs: a0:a0_77,a5:a5_85,ra:ra_69,s11:s11_76,s2:s2_65,s3:s3_66,s5:s5_67,s6:s6_68,sp:sp_63
	word32 s4_135 = a0_77
	branch a0_77 == 0<32> l2302E7A6
l2302E890:
	word32 t1_1000
	word32 a4_1001
	word32 a5_109
	word32 a0_141
	word32 a1_123
	word32 a2_124
	word32 a3_125
	word32 ra_117 = memset(ra_69, a0_77, 0<32>, Mem50[sp_63 + 132<i32>:word32], out t1_1000, out a0_141, out a1_123, out a2_124, out a3_125, out a4_1001, out a5_109)
	word32 s10_90 = CONVERT(s5_131 != 0<32>, bool, word32)
	word32 s7_100 = a0_77
	word32 s8_101 = Mem50[s2_65:int32]
	word32 s9_102 = a0_77
	word32 s2_103 = 0<32>
	word32 s0_104 = 5<32>
	word32 s6_105 = s6_68 + 1<32>
	word32 s10_106 = s10_90 + 2<32>
l2302E8AC:
	branch s8_101 == 0<32> l2302E904
l2302E904:
	branch s2_103 != 0<32> l2302E8B4
l2302E908:
	word32 a5_149
	word32 a4_150
	call a5_109 (retsize: 0;)
		uses: a0:s0_112,a1:a1_123,a2:a2_124,a3:a3_125,a4:a4_150,a5:a5_149,ra:ra_117,s0:s0_112,s1:Mem110[a5_109:word32],s10:s10_90 + 2<32>,s11:s11_76,s2:s2_108,s3:s3_66,s4:a0_77,s5:s5_67,s6:s6_68 + 1<32>,s7:a0_77,s8:s8_107,s9:s9_120
		defs: a0:a0_141,a1:a1_142,a2:a2_143,a3:a3_144,a4:a4_150,a5:a5_149,ra:ra_133,s10:s10_139,s11:s11_140,s2:s2_129,s3:s3_130,s4:s4_135,s5:s5_131,s6:s6_132,s7:s7_136,s8:s8_137,s9:s9_138
	word32 s0_152 = a0_141
	branch a0_141 == 0<32> l2302E8B4
l2302E912:
	Mem154[a0_141:byte] = 0x5B<8>
	Mem156[a0_141 + 1<i32>:byte] = 0<8>
	word32 s1_155 = a0_141 + 1<i32>
	word32 s9_157 = s3_130 + -1<i32>
	word32 s10_158 = 44<i32>
	word32 s11_159 = 32<i32>
	word32 s8_160 = 0x4200E000<32>
l2302E932:
	word32 a4_1007
	word32 a5_1008
	word32 a1_1004
	word32 a2_1005
	word32 a3_1006
	word32 a0_164 = strlen(Mem162[s7_100:int32], out a1_1004, out a2_1005, out a3_1006, out a4_1007, out a5_1008)
	word32 a2_179
	word32 a3_180
	word32 a4_1009
	word32 a5_1010
	word32 a7_1012
	word32 a6_1011
	word32 a1_178 = memcpy(s1_155, Mem162[s7_100:int32], a0_164, out a2_179, out a3_180, out a4_1009, out a5_1010, out a6_1011, out a7_1012)
	word32 s1_188 = s1_155 + a0_164
	branch s9_157 == s2_103 l2302E95C
l2302E94E:
	Mem192[s1_188:byte] = SLICE(s10_158, byte, 0)
	branch s5_131 != 0<32> l2302E988
l2302E988:
	Mem195[s1_188 + 1<i32>:byte] = SLICE(s11_159, byte, 0)
	s1_188 = s1_188 + 2<32>
l2302E956:
	s1_188 = s1_188 + 1<32>
l2302E958:
	Mem199[s1_188:byte] = 0<8>
l2302E95C:
	word32 s6_203 = s8_160 + -932<i32>
	word32 s6_248
	word32 a1_258
	word32 a2_259
	word32 a3_260
	word32 a5_265
	word32 a4_266
	call Mem206[s6_203:int32] (retsize: 0;)
		uses: a0:Mem206[s7_161:int32],a1:a1_178,a2:a2_179,a3:a3_180,a4:a4_266,a5:a5_265,ra:ra_221,s0:s0_224,s1:s1_213,s10:s10_191,s11:s11_194,s2:s2_190 + 1<32>,s3:s3_216,s4:s4_227,s5:s5_193,s6:s6_203,s7:s7_161 + 4<32>,s8:s8_202,s9:s9_189
		defs: a1:a1_258,a2:a2_259,a3:a3_260,a4:a4_266,a5:a5_265,ra:ra_249,s0:s0_250,s1:s1_244,s10:s10_255,s11:s11_256,s2:s2_245,s3:s3_246,s4:s4_251,s5:s5_247,s6:s6_248,s7:s7_252,s8:s8_253,s9:s9_254
	branch s3_130 != s2_103 l2302E932
l2302E972:
	word32 s1_275
	word32 a4_297
	call Mem206[s6_248:int32] (retsize: 0;)
		uses: a0:s4_251,a1:a1_258,a2:a2_259,a3:a3_260,a4:a4_297,a5:93<i32>,ra:ra_249,s0:s0_250,s1:s1_244,s10:s10_255,s11:s11_256,s2:s2_245,s3:s3_246,s4:s4_251,s5:s5_247,s6:s6_248,s7:s7_252,s8:s8_253,s9:s9_254
		defs: a4:a4_297,s1:s1_275
	Mem304[s1_275:byte] = 0x5D<8>
	Mem305[s1_275 + 1<i32>:byte] = 0<8>
l2302E8B0:
	branch s2_103 == 0<32> l2302E8E0
l2302E8E0:
	word32 a4_1002
	ra_117 = print_value(ra_117, s8_101, 0<32>, Mem110[sp_63 + 16<i32>:word32], out s0_104, out a0_141, out a2_124, out a3_125, out a4_1002, out a5_109)
	Mem317[s9_102:word32] = a0_141
	a1_123 = s6_68 + 1<32>
	branch a0_141 == 0<32> l2302E900
l2302E900:
	s2_103 = 1<32>
l2302E8F0:
	word32 a4_1003
	a0_141 = strlen(a0_141, out a1_123, out a2_124, out a3_125, out a4_1003, out a5_109)
	s0_104 = s0_104 + (s10_90 + 2<32>) + a0_141
l2302E8F8:
	s8_101 = Mem317[s8_101:int32]
	s9_102 = s9_102 + 4<32>
l2302E8B4:
	word32 s0_332 = 0<32>
	word32 s1_333 = 0x4200E000<32>
l2302E8BA:
	branch a0_141 == 0<32> l2302E8CA
l2302E8C4:
	word32 a5_378
	word32 a4_379
	call Mem110[s1_333 + -932<i32>:int32] (retsize: 0;)
		uses: a1:a1_352,a2:a2_353,a3:a3_354,a4:a4_379,a5:a5_378,ra:ra_345,s0:s0_334,s1:s1_339,s10:s10_350,s11:s11_351,s2:s2_341,s3:s3_342,s4:s4_346,s5:s5_343,s6:s6_344,s7:s7_347,s8:s8_348,s9:s9_349
		defs: a0:a0_370,a1:a1_371,a2:a2_372,a3:a3_373,a4:a4_379,a5:a5_378,ra:ra_362,s0:s0_363,s1:s1_357,s10:s10_368,s11:s11_369,s2:s2_358,s3:s3_359,s4:s4_364,s5:s5_360,s6:s6_361,s7:s7_365,s8:s8_366,s9:s9_367
l2302E8CA:
	s0_332 = s0_332 + 1<32>
	branch s3_130 != s0_332 l2302E8BA
l2302E8D0:
	word32 a5_390 = Mem110[0x4200DC5C<32>:int32]
	word32 a4_431
	call a5_390 (retsize: 0;)
		uses: a0:s4_391,a1:a1_404,a2:a2_405,a3:a3_406,a4:a4_431,a5:a5_390,ra:ra_398,s0:0<32>,s1:s1_394,s10:s10_402,s11:s11_403,s2:s2_395,s3:s3_387,s4:s4_391,s5:s5_396,s6:s6_397,s7:s7_399,s8:s8_400,s9:s9_401
		defs: a4:a4_431
l2302E7DC:
	word32 a0_444
	word32 s2_447
	word32 a5_981
	word32 s3_982
	word32 s8_984
	word32 s4_983
	word32 s1_979
	word32 a1_980
	word32 s0_978
	word32 a4_453
	word32 ra_456 = ensure(ra, a3, 1<32>, a4, a5, s3_38, out s0_978, out s1_979, out a0_444, out a1_980, out a4_453, out a5_981, out s2_447, out s3_982, out s4_983, out s8_984)
	branch a0_444 == 0<32> l2302E7A6
l2302E7EA:
	Mem466[a0_444:byte] = 0x5B<8>
	word32 s3_468 = CONVERT(a2 != 0<32>, bool, word32)
	word32 s1_467 = Mem466[99<i32>:word32]
	Mem471[0x64<32>:word32] = s1_467
	word32 s3_469 = s3_468 + 1<32>
	word32 a5_470 = 0x5C<32>
	word32 s2_472 = Mem471[s2_447:int32]
l2302E810:
	branch s2_472 != 0<32> l2302E830
l2302E830:
	word32 a4_490
	word32 s0_985
	word32 a0_986
	word32 a2_987
	word32 a3_988
	word32 a5_989
	ra_456 = print_value(ra_456, s2_472, s1_467, s10, out s0_985, out a0_986, out a2_987, out a3_988, out a4_490, out a5_989)
	word32 a5_990
	Mem502[update(s1_467, a4_490, out a4_453, out a5_990) + 8<i32>:word32] = s1_467
	a5_470 = Mem502[s2_472:int32]
	branch a5_470 == 0<32> l2302E870
l2302E848:
	word32 a0_508
	word32 s8_513
	word32 s0_1013
	word32 s1_1014
	word32 a1_1015
	word32 a5_1016
	word32 s4_1017
	ra_456 = ensure(ra_456, s1_467, s3_468 + 2<32>, a4_453, a5_470, s3_469, out s0_1013, out s1_1014, out a0_508, out a1_1015, out a4_453, out a5_1016, out s2_472, out s3_469, out s4_1017, out s8_513)
	branch a0_508 == 0<32> l2302E7A6
l2302E852:
	Mem529[a0_508:byte] = SLICE(s8_513, byte, 0)
	word32 a5_530 = a0_508 + 1<i32>
	branch a2 == 0<32> l2302E866
l2302E85E:
	Mem533[a0_508 + 1<i32>:byte] = 0x20<8>
	a5_530 = a0_508 + 2<i32>
l2302E866:
	Mem535[a5_530:byte] = 0<8>
	s1_467 = Mem535[a5_530 + 8<i32>:word32]
	a5_470 = a5_530 + s3_469
	Mem539[a5_470 + 8<i32>:word32] = s1_467
l2302E870:
	s2_472 = Mem542[s2_472:int32]
l2302E814:
	word32 a0_551
	word32 a5_995
	word32 s8_999
	word32 s2_996
	word32 s4_998
	word32 s3_997
	word32 a1_993
	word32 a4_994
	word32 s0_991
	word32 s1_992
	ensure(ra_456, s1_467, 2<32>, a4_453, a5_470, s3_469, out s0_991, out s1_992, out a0_551, out a1_993, out a4_994, out a5_995, out s2_996, out s3_997, out s4_998, out s8_999)
	branch a0_551 == 0<32> l2302E7A6
l2302E81E:
	Mem573[a0_551:byte] = 0x5D<8>
	Mem574[a0_551 + 1<i32>:byte] = 0<8>
l2302E78C:
	word32 a0_595
	branch a3 == 0<32> l2302E7CC
l2302E7CC:
	word32 a5_578 = Mem29[0x4200DC60<32>:int32]
	call a5_578 (retsize: 0;)
		uses: a0:3<32>,a1:a1,a2:a2,a3:a3,a4:a4,a5:a5_578,ra:ra,s0:s0_39,s1:a3,s10:s10,s11:s11,s2:a0_30,s3:s3_40,s4:s4,s5:a2,s6:a1,s7:s7,s8:s8,s9:s9
		defs: a0:a0_595
l2302E78E:
	word32 s0_967
	word32 a5_971
	word32 s2_972
	word32 s3_973
	word32 s4_974
	word32 s8_975
	word32 s1_968
	word32 a4_970
	word32 a1_969
	ensure(ra, a3, 3<32>, a4, a5, s3_38, out s0_967, out s1_968, out a0_595, out a1_969, out a4_970, out a5_971, out s2_972, out s3_973, out s4_974, out s8_975)
l2302E796:
	branch a0_595 == 0<32> l2302E7A6
l2302E79A:
	word32 a4_976
	word32 a5_977
	strcpy(a0_595, 0x23077610<32>, out a4_976, out a5_977)
l2302E7A6:
	0<32> = dwArg010C
	return
print_array.isra.4_exit:


word32 print_value(word32 ra, word32 a0, word32 a3, word32 dwArg10, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_array.isra.4
//      print_object.isra.3
//      cJSON_Print
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0
// Trashed: a0 a2 a3 a4 a5 ra s0
// Preserved: sp
print_value_entry:
l2302E990:
	word32 s0_26 = a0
	branch a0 == 0<32> l2302E9CE
l2302E99A:
	a5 = CONVERT(Mem7[a0 + 12<i32>:byte], byte, word32)
	a4 = 6<32>
	branch a3 == 0<32> l2302EA20
l2302EA20:
	branch a5 >u 6<32> l2302EA80
l2302EA24:
	word32 a5_17 = Mem7[(a5 << 2<i32>) + 0x230775EC<32>:word32]
	word32 s0_19
	word32 ra_20
	word32 a0_21
	word32 a5_22
	word32 a4_23
	word32 a3_24
	word32 a2_25
	call a5_17 (retsize: 0;)
		uses: a0:a0,a3:a3,a4:0x230775EC<32>,a5:a5_17,ra:ra,s0:a0,Stack +0020:dwArg10
		defs: a0:a0_21,a2:a2_25,a3:a3_24,a4:a4_23,a5:a5_22,ra:ra_20,s0:s0_19
	s0Out = s0_19
	a0Out = a0_21
	a2Out = a2_25
	a3Out = a3_24
	a4Out = a4_23
	a5Out = a5_22
	return ra_20
l2302E9A2:
	branch a5 >u 6<32> l2302EA80
l2302EA80:
	s0_26 = 0<32>
l2302E9CE:
	s0Out = s0
	a0Out = s0_26
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return ra
l2302E9A6:
	word32 a5_40 = Mem7[(a5 << 2<i32>) + 0x230775D0<32>:word32]
	word32 s0_42
	word32 ra_43
	word32 a0_44
	word32 a5_45
	word32 a4_46
	word32 a3_47
	word32 a2_48
	call a5_40 (retsize: 0;)
		uses: a0:a0,a3:a3,a4:0x230775D0<32>,a5:a5_40,ra:ra,s0:a0,Stack +0020:dwArg10
		defs: a0:a0_44,a2:a2_48,a3:a3_47,a4:a4_46,a5:a5_45,ra:ra_43,s0:s0_42
	s0Out = s0_42
	a0Out = a0_44
	a2Out = a2_48
	a3Out = a3_47
	a4Out = a4_46
	a5Out = a5_45
	return ra_43
print_value_exit:


void print_object.isra.3(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 s8, word32 s9, word32 s10, word32 s11, word32 dwArg84, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0084:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
print_object.isra.3_entry:
l2302EA84:
	word32 a0_31 = Mem29[a5:word32]
	word32 s5_39 = 0<32>
l2302EAAC:
	branch a5 != 0<32> l2302EACC
l2302EACC:
	s5_39 = s5_39 + 1<32>
	a5 = Mem29[a5:word32]
l2302EAAE:
	branch s5_39 != 0<32> l2302EB42
l2302EB42:
	branch a3 == 0<32> l2302ECA0
l2302ECA0:
	word32 a5_48 = Mem29[0x4200DC60<32>:int32]
	word32 s8_49 = s5_39 << 2<u32>
	word32 sp_63
	word32 s0_64
	word32 s1_65
	word32 s5_67
	word32 s6_68
	word32 ra_69
	word32 s3_70
	word32 s4_71
	word32 s7_72
	word32 s8_73
	word32 s9_74
	word32 s10_75
	word32 s11_76
	word32 a0_77
	word32 a1_79
	word32 a2_80
	word32 a3_81
	word32 a4_87
	word32 tp_1399
	call a5_48 (retsize: 0;)
		uses: a0:s8_49,a1:a1,a2:a2,a3:a3,a4:a4_87,a5:a5_48,ra:ra,s0:a2,s1:a1,s10:s10,s11:s11,s2:a3,s3:0x4200DC60<32>,s4:0x4200E000<32>,s5:s5_41,s6:a0_31,s7:s7,s8:s8_49,s9:s9,Stack +0010:dwLoc50,Stack +00E4:dwArg84,Stack +0128:dwArgC8,tp:tp_1399
		defs: a0:a0_77,a1:a1_79,a2:a2_80,a3:a3_81,a4:a4_87,ra:ra_69,s0:s0_64,s1:s1_65,s10:s10_75,s11:s11_76,s3:s3_70,s4:s4_71,s5:s5_67,s6:s6_68,s7:s7_72,s8:s8_73,s9:s9_74,sp:sp_63,tp:tp_1399
	Mem89[sp_63 + 8<i32>:word32] = s4_71 + -928<i32>
	branch a0_77 == 0<32> l2302EAC8
l2302ECC0:
	word32 a5_763
	word32 a5_91 = Mem89[s3_70:int32]
	word32 sp_93
	word32 a0_107
	word32 a4_117
	word32 tp_1403
	word32 s0_246
	word32 s1_185
	word32 s6_753
	word32 ra_754
	word32 s3_100
	word32 s7_102
	word32 s9_104
	word32 s10_105
	word32 s11_106
	word32 a1_109
	word32 a2_110
	word32 a3_111
	word32 s2_1342
	word32 s5_1343
	word32 s8_103
	call a5_91 (retsize: 0;)
		uses: a0:s8_73,a1:a1_79,a2:a2_80,a3:a3_81,a4:a4_117,a5:a5_91,ra:ra_69,s0:s0_64,s1:s1_65,s10:s10_75,s11:s11_76,s2:a0_77,s3:s3_70,s4:s4_71,s5:s5_67,s6:s6_68,s7:s7_72,s8:s8_73,s9:s9_74,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_1403
		defs: a0:a0_107,a1:a1_109,a2:a2_110,a3:a3_111,a4:a4_117,ra:ra_99,s0:s0_94,s1:s1_95,s10:s10_105,s11:s11_106,s2:s2_96,s3:s3_100,s5:s5_97,s6:s6_98,s7:s7_102,s8:s8_103,s9:s9_104,sp:sp_93,tp:tp_1403
	word32 s4_118 = a0_107
	branch a0_107 != 0<32> l2302ECDA
l2302ECDA:
	word32 s11_1352
	word32 s9_1350
	word32 a2_2151
	word32 a0_2149
	word32 a4_2153
	word32 a5_2154
	word32 t1_2155
	word32 a5_2156
	word32 a3_2152
	word32 a1_2150
	word32 t1_2148
	word32 a4_138
	word32 a0_1335
	word32 a1_135
	word32 a2_1354
	word32 a3_1355
	word32 ra_1345 = memset(memset(ra_754, s2_1342, 0<32>, s8_103, out t1_2148, out a0_2149, out a1_2150, out a2_2151, out a3_2152, out a4_2153, out a5_2154), a0_107, 0<32>, s8_103, out t1_2155, out a0_1335, out a1_135, out a2_1354, out a3_1355, out a4_138, out a5_2156)
	Mem144[sp_93 + 132<i32>:word32] = s1_185 + 1<i32>
	word32 s10_1351 = Mem144[s6_753:int32]
	branch s0_246 == 0<32> l2302ED54
l2302ED54:
	s11_1352 = 7<32>
	s9_1350 = 0<32>
l2302ECFA:
	s11_1352 = s1_185 + 8<i32>
	s9_1350 = s1_185 + 3<i32>
l2302ED02:
	Mem158[sp_93 + 4<i32>:word32] = a0_107
	Mem160[sp_93 + 136<i32>:word32] = s9_1350 + 2<i32>
	word32 s7_1348 = a0_107
	word32 s6_1344 = s2_1342
	word32 a6_156 = s2_1342
	word32 s3_1310 = 0<32>
l2302ED12:
	branch s10_1351 != 0<32> l2302ED5A
l2302ED5A:
	word32 a0_163 = Mem162[s10_1351 + 32<i32>:int32]
	Mem167[sp_93 + 12<i32>:word32] = a6_156
	word32 a5_180
	word32 a6_181
	word32 s10_186
	word32 a0_203
	word32 a4_2164
	word32 s9_2165
	word32 ra_183 = print_string_ptr(ra_1345, a0_163, 0<32>, s3_1310, s4_118, s5_1343, s6_1344, s7_1348, s8_103, s9_1350, s10_1351, Mem167[sp_93 + 28<i32>:word32], Mem167[sp_93 + 296<i32>:word32], out s1_185, out a0_203, out a1_135, out a4_2164, out a5_180, out a6_181, out s2_1342, out s3_1310, out s4_118, out s5_1343, out s6_1344, out s7_1348, out s9_2165, out s10_186, out s11_1352)
	Mem207[a0_203:word32] = a5_180
	word32 s0_2166
	word32 a5_214
	ra_1345 = print_value(ra_183, s10_186, 0<32>, Mem207[sp_93 + 16<i32>:word32], out s0_2166, out a0_1335, out a2_1354, out a3_1355, out a4_138, out a5_214)
	s8_103 = Mem207[sp_93 + 8<i32>:word32]
	Mem219[a6_181:word32] = a0_1335
	s9_1350 = a0_203
	branch a0_203 == 0<32> l2302EDAE
l2302ED82:
	branch a0_1335 == 0<32> l2302EDAE
l2302EDAE:
	s3_1310 = 1<32>
l2302ED84:
	Mem221[sp_93 + 140<i32>:word32] = a6_181
	word32 a3_2169
	word32 a4_2170
	word32 a5_2171
	word32 a1_2167
	word32 a2_2168
	Mem228[sp_93 + 12<i32>:word32] = strlen(a0_1335, out a1_2167, out a2_2168, out a3_2169, out a4_2170, out a5_2171)
	word32 a5_233
	a0_1335 = strlen(a0_203, out a1_135, out a2_1354, out a3_1355, out a4_138, out a5_233)
	a5_214 = a5_233 + s11_1352 + a3_1355
	s4_118 = Mem228[sp_93 + 228<i32>:word32]
	s8_103 = Mem228[sp_93 + 164<i32>:word32]
	s11_1352 = a5_214 + a0_1335
l2302EDA0:
	s0_246 = Mem244[sp_93 + 228<i32>:word32]
	s10_1351 = Mem244[s10_186:int32]
	Mem256[sp_93 + 4<i32>:word32] = a5_214 + 4<32>
	a6_156 = a6_181 + 4<32>
l2302ED16:
	branch s3_1310 == 0<32> l2302EDB2
l2302EDB2:
	word32 a4_313
	word32 tp_317
	word32 s0_290
	word32 sp_289
	word32 s1_291
	call a4_138 (retsize: 0;)
		uses: a0:s11_258,a1:a1_277,a2:a2_281,a3:a3_285,a4:a4_313,a5:Mem162[a4_263:word32],a6:Mem162[sp_93 + 228<i32>:word32],ra:ra_168,s0:s0_268,s1:s1_270,s10:s10_161,s11:s11_258,s2:s2_274,s3:s3_169,s4:s4_170,s5:s5_171,s6:s6_172,s7:s7_173,s8:s8_174,s9:s9_175,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_317
		defs: a0:a0_303,a1:a1_305,a2:a2_306,a3:a3_307,a4:a4_313,ra:ra_295,s0:s0_290,s1:s1_291,s11:s11_302,s2:s2_292,s3:s3_296,s4:s4_297,s5:s5_293,s6:s6_294,s7:s7_298,s8:s8_299,s9:s9_300,sp:sp_289,tp:tp_317
	s10_1351 = a0_1335
	branch a0_1335 == 0<32> l2302ED1A
l2302EDBE:
	Mem320[a0_1335:byte] = 0x7B<8>
	word32 s9_321 = a0_1335 + 1<i32>
	branch s0_290 == 0<32> l2302EDD6
l2302EDCC:
	Mem324[a0_1335 + 1<i32>:byte] = 0xA<8>
	s9_321 = a0_1335 + 2<i32>
l2302EDD6:
	Mem328[s9_321:byte] = 0<8>
	Mem331[sp_289 + 4<i32>:word32] = s5_1343 + -1<i32>
	word32 a5_1326 = s5_1343 + -1<i32>
	word32 s8_329 = 0<32>
l2302EDE2:
	branch s0_290 == 0<32> l2302EDFC
l2302EDE4:
	word32 a3_333 = 0<32>
l2302EDF0:
	word32 a2_339 = s9_321 + a3_333
	branch a3_333 < a5_1326 l2302EDE8
l2302EDE8:
	Mem342[a2_339:byte] = 9<8>
	a5_1326 = 9<32>
	a3_333 = a3_333 + 1<32>
l2302EDFA:
	s9_321 = a2_339
l2302EDFC:
	word32 a2_2173
	word32 a1_2172
	word32 a3_2174
	word32 a4_2175
	word32 a5_2176
	word32 a0_351 = strlen(Mem348[s7_1348:int32], out a1_2172, out a2_2173, out a3_2174, out a4_2175, out a5_2176)
	word32 a4_2179
	word32 a5_2180
	word32 a6_2181
	word32 a7_2182
	word32 a2_2177
	word32 a3_2178
	memcpy(s9_321, Mem348[s7_1348:int32], a0_351, out a2_2177, out a3_2178, out a4_2179, out a5_2180, out a6_2181, out a7_2182)
	word32 a0_376 = s9_321 + a0_351
	Mem378[a0_376:byte] = 0x3A<8>
	word32 s9_379 = a0_376 + 1<i32>
	branch s0_290 == 0<32> l2302EE2E
l2302EE24:
	Mem384[a0_376 + 1<i32>:byte] = 9<8>
	s9_379 = a0_376 + 2<i32>
l2302EE2E:
	word32 a4_2183
	word32 a5_2184
	strcpy(s9_379, Mem389[s6_1344:int32], out a4_2183, out a5_2184)
	word32 a3_398
	word32 a5_400
	word32 a1_401
	word32 a4_2186
	word32 a2_2185
	word32 a0_397 = strlen(Mem389[s6_1344:int32], out a1_401, out a2_2185, out a3_398, out a4_2186, out a5_400)
	word32 s0_406 = Mem389[sp_289 + 228<i32>:word32]
	word32 s9_407 = s9_379 + a0_397
	branch a5_400 == s8_329 l2302EE52
l2302EE48:
	Mem413[s9_407:byte] = 0x2C<8>
	s9_407 = s9_407 + 1<32>
l2302EE52:
	branch s0_406 == 0<32> l2302EE5C
l2302EE54:
	Mem418[s9_407:byte] = 0xA<8>
	s9_407 = s9_407 + 1<32>
l2302EE5C:
	Mem423[s9_407:byte] = 0<8>
	word32 a2_428 = Mem423[0x4200DC5C<32>:int32]
	word32 s0_485
	word32 s1_486
	word32 s2_487
	word32 s5_488
	word32 s6_489
	word32 ra_490
	word32 s3_491
	word32 s4_492
	word32 s7_493
	word32 s8_494
	word32 s9_495
	word32 s10_496
	word32 s11_497
	word32 a5_499
	word32 a1_500
	word32 a3_502
	call a2_428 (retsize: 0;)
		uses: a0:Mem423[s7_347:int32],a1:a1_401,a2:a2_428,a3:a3_398,a4:a4_540,a5:0x4200E000<32>,ra:ra_459,s0:s0_406,s1:s1_439,s10:s10_477,s11:0x4200DC5C<32>,s2:s2_445,s3:s3_465,s4:s4_471,s5:s5_451,s6:s6_388,s7:s7_347 + 4<32>,s8:s8_411 + 1<32>,s9:s9_422,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_544
		defs: a1:a1_500,a3:a3_502,a5:a5_499,ra:ra_490,s0:s0_485,s1:s1_486,s10:s10_496,s11:s11_497,s2:s2_487,s3:s3_491,s4:s4_492,s5:s5_488,s6:s6_489,s7:s7_493,s8:s8_494,s9:s9_495
	word32 a2_514 = Mem423[s11_497:int32]
	word32 s11_529
	word32 a1_532
	word32 a3_534
	word32 a4_540
	word32 tp_544
	call a2_514 (retsize: 0;)
		uses: a0:Mem423[s6_489:int32],a1:a1_500,a2:a2_514,a3:a3_502,a4:a4_540,a5:a5_499,ra:ra_490,s0:s0_485,s1:s1_486,s10:s10_496,s11:s11_497,s2:s2_487,s3:s3_491,s4:s4_492,s5:s5_488,s6:s6_489 + 4<32>,s7:s7_493,s8:s8_494,s9:s9_495,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_544
		defs: a1:a1_532,a3:a3_534,a4:a4_540,a5:a5_531,ra:ra_522,s0:s0_517,s1:s1_518,s10:s10_528,s11:s11_529,s2:s2_519,s3:s3_523,s4:s4_524,s5:s5_520,s6:s6_521,s7:s7_525,s8:s8_526,s9:s9_527,sp:sp_516,tp:tp_544
	branch s5_1343 != s8_329 l2302EDE2
l2302EE86:
	word32 a2_545 = Mem423[s11_529:int32]
	word32 s0_548
	word32 s1_549
	word32 s2_550
	word32 s5_551
	word32 s6_552
	word32 ra_553
	word32 s3_554
	word32 s4_555
	word32 s7_556
	word32 s8_557
	word32 s9_558
	word32 s10_559
	word32 s11_560
	word32 a5_562
	word32 a1_563
	word32 a2_564
	call a2_545 (retsize: 0;)
		uses: a0:s4_524,a1:a1_532,a2:a2_545,a3:a3_534,a4:a4_602,a5:a5_531,ra:ra_522,s0:s0_517,s1:s1_518,s10:s10_528,s11:s11_529,s2:s2_519,s3:s3_523,s4:s4_524,s5:s5_520,s6:s6_521,s7:s7_525,s8:s8_526,s9:s9_527,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_606
		defs: a1:a1_563,a2:a2_564,a5:a5_562,ra:ra_553,s0:s0_548,s1:s1_549,s10:s10_559,s11:s11_560,s2:s2_550,s3:s3_554,s4:s4_555,s5:s5_551,s6:s6_552,s7:s7_556,s8:s8_557,s9:s9_558
	word32 a3_576 = Mem423[s11_560:int32]
	word32 s0_579
	word32 a4_602
	word32 tp_606
	word32 s3_585
	word32 s1_580
	word32 s9_589
	call a3_576 (retsize: 0;)
		uses: a0:s2_550,a1:a1_563,a2:a2_564,a3:a3_576,a4:a4_602,a5:a5_562,ra:ra_553,s0:s0_548,s1:s1_549,s10:s10_559,s11:s11_560,s2:s2_550,s3:s3_554,s4:s4_555,s5:s5_551,s6:s6_552,s7:s7_556,s8:s8_557,s9:s9_558,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_606
		defs: a4:a4_602,s0:s0_579,s1:s1_580,s3:s3_585,s9:s9_589,tp:tp_606
	branch s0_579 != 0<32> l2302EEB2
l2302EEB2:
	branch s3_585 < s1_580 l2302EEA8
l2302EEA8:
	Mem613[s9_589 + s3_585:byte] = 9<8>
	s3_585 = s3_585 + 1<32>
l2302EEB6:
	branch s1_580 >= 0<32> l2302EEBC
l2302EEBA:
	s1_580 = 0<32>
l2302EEBC:
	s9_589 = s9_589 + s1_580
l2302EE9A:
	Mem621[s9_589:byte] = 0x7D<8>
	Mem622[s9_589 + 1<i32>:byte] = 0<8>
l2302ED1A:
	word32 s0_623 = 0<32>
	word32 s1_624 = 0x4200E000<32>
l2302ED20:
	branch a0_1335 == 0<32> l2302ED2E
l2302ED28:
	word32 a5_629 = Mem162[s1_624 + -932<i32>:int32]
	word32 a4_670
	word32 tp_674
	call a5_629 (retsize: 0;)
		uses: a1:a1_642,a2:a2_643,a3:a3_644,a4:a4_670,a5:a5_629,ra:ra_634,s0:s0_630,s1:s1_628,s10:s10_640,s11:s11_641,s2:s2_631,s3:s3_635,s4:s4_636,s5:s5_632,s6:s6_633,s7:s7_637,s8:s8_638,s9:s9_639,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_674
		defs: a0:a0_660,a1:a1_662,a2:a2_663,a3:a3_664,a4:a4_670,ra:ra_652,s0:s0_647,s1:s1_648,s10:s10_658,s11:s11_659,s2:s2_649,s3:s3_653,s4:s4_654,s5:s5_650,s6:s6_651,s7:s7_655,s8:s8_656,s9:s9_657,tp:tp_674
l2302ED2E:
	word32 a5_677 = Mem162[a0_1335:word32]
	branch a0_1335 == 0<32> l2302ED3C
l2302ED36:
	word32 a5_679 = Mem162[s1_624 + -932<i32>:int32]
	word32 a4_720
	word32 tp_724
	call a5_679 (retsize: 0;)
		uses: a1:a1_692,a2:a2_693,a3:a3_694,a4:a4_720,a5:a5_679,ra:ra_684,s0:s0_680,s1:s1_678,s10:s10_690,s11:s11_691,s2:s2_681,s3:s3_685,s4:s4_686,s5:s5_682,s6:s6_683,s7:s7_687,s8:s8_688,s9:s9_689,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_724
		defs: a0:a0_710,a1:a1_712,a2:a2_713,a3:a3_714,a4:a4_720,a5:a5_711,ra:ra_702,s0:s0_697,s1:s1_698,s10:s10_708,s11:s11_709,s2:s2_699,s3:s3_703,s4:s4_704,s5:s5_700,s6:s6_701,s7:s7_705,s8:s8_706,s9:s9_707,tp:tp_724
l2302ED3C:
	s0_623 = s0_623 + 4<32>
	branch s8_103 != s0_623 l2302ED20
l2302ED42:
	word32 a4_772
	word32 tp_776
	call a5_677 (retsize: 0;)
		uses: a0:s4_732,a1:a1_744,a2:a2_745,a3:a3_746,a4:a4_772,a5:a5_729,ra:ra_738,s0:Mem162[a5_729:word32],s1:s1_734,s10:s10_742,s11:s11_743,s2:s2_735,s3:s3_739,s4:s4_732,s5:s5_736,s6:s6_737,s7:s7_740,s8:s8_727,s9:s9_741,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_776
		defs: a1:a1_764,a2:a2_765,a3:a3_766,a4:a4_772,a5:a5_763,ra:ra_754,s1:s1_750,s10:s10_760,s11:s11_761,s2:s2_751,s3:s3_755,s4:s4_756,s5:s5_752,s6:s6_753,s7:s7_757,s8:s8_758,s9:s9_759,tp:tp_776
	s0_246 = Mem162[a5_763:word32]
l2302ECCC:
	a5_763 = Mem89[0x4200DC5C<32>:int32]
l2302ECD4:
	word32 a4_823
	word32 tp_827
	call a5_763 (retsize: 0;)
		uses: a0:s2_780,a1:a1_795,a2:a2_796,a3:a3_797,a4:a4_823,a5:a5_782,ra:ra_787,s0:s0_783,s1:s1_784,s10:s10_793,s11:s11_794,s2:s2_780,s3:s3_788,s4:s4_789,s5:s5_785,s6:s6_786,s7:s7_790,s8:s8_791,s9:s9_792,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_827
		defs: a4:a4_823,tp:tp_827
l2302EB46:
	word32 s3_828 = CONVERT(a2 != 0<32>, bool, word32)
	word32 a0_835
	word32 s8_2147
	word32 a1_2145
	word32 a5_2146
	word32 s0_1075
	word32 s2_1056
	word32 s3_1068
	word32 s4_1057
	word32 s1_1067
	word32 a4_1089
	word32 ra_1065 = ensure(ra, a3, s3_828 + 2<32>, a4, a5, s3_828 + 1<32>, out s0_1075, out s1_1067, out a0_835, out a1_2145, out a4_1089, out a5_2146, out s2_1056, out s3_1068, out s4_1057, out s8_2147)
	branch a0_835 == 0<32> l2302EAC8
l2302EB5C:
	Mem857[a0_835:byte] = 0x7B<8>
	word32 a5_858 = a0_835 + 1<i32>
	branch s0_1075 == 0<32> l2302EB74
l2302EB6A:
	Mem861[a0_835 + 1<i32>:byte] = 0xA<8>
	a4_1089 = 0xA<32>
	a5_858 = a0_835 + 2<i32>
l2302EB74:
	Mem863[a5_858:byte] = 0<8>
	word32 a5_1092 = Mem863[s2_1056 + 8<i32>:int32] + s3_1068
	Mem871[s2_1056 + 8<i32>:word32] = a5_1092
	word32 s5_867 = s1_1067 + 1<i32>
	word32 s7_868 = 58<i32>
	word32 s11_1096 = Mem871[a0_31:int32]
	word32 s8_1058 = CONVERT(s0_1075 != 0<32>, bool, word32)
	word32 s6_876 = 9<32>
	word32 s9_877 = 44<i32>
	word32 s10_878 = 0xA<32>
l2302EB9A:
	branch s11_1096 != 0<32> l2302EBC8
l2302EBC8:
	branch s0_1075 == 0<32> l2302EBE6
l2302EBCA:
	word32 a0_889
	word32 a5_2202
	word32 s0_2198
	word32 s1_2199
	word32 a1_2200
	word32 a4_2201
	ra_1065 = ensure(ra_1065, s2_1056, s5_867, a4_1089, a5_1092, s3_1068, out s0_2198, out s1_2199, out a0_889, out a1_2200, out a4_2201, out a5_2202, out s2_1056, out s3_1068, out s4_1057, out s8_1058)
	branch a0_889 == 0<32> l2302EAC8
l2302EBD6:
	word32 a5_910 = 0<32>
l2302EBD8:
	branch a5_910 < s5_867 l2302EC74
l2302EC74:
	Mem916[a0_889 + a5_910:byte] = SLICE(s6_876, byte, 0)
	a5_910 = a5_910 + 1<32>
l2302EBDC:
	Mem923[s2_1056 + 8<i32>:word32] = Mem919[s2_1056 + 8<i32>:int32] + s5_867
l2302EBE6:
	word32 a4_958
	word32 s11_966
	word32 s2_967
	word32 s3_968
	word32 a6_2191
	word32 s4_2192
	word32 s1_2187
	word32 a1_2189
	word32 a5_2190
	word32 a0_2188
	word32 ra_962 = print_string_ptr(ra_1065, Mem926[s11_1096 + 32<i32>:int32], s2_1056, s3_1068, s4_1057, s5_867, s6_876, s7_868, s8_1058, s9_877, s10_878, s8, dwArgC8, out s1_2187, out a0_2188, out a1_2189, out a4_958, out a5_2190, out a6_2191, out s2_967, out s3_968, out s4_2192, out s5_867, out s6_876, out s7_868, out s9_877, out s10_878, out s11_966)
	word32 a4_988
	word32 a5_989
	Mem990[s2_967 + 8<i32>:word32] = update(s2_967, a4_958, out a4_988, out a5_989)
	word32 a0_993
	word32 s2_996
	word32 s8_998
	word32 s0_1006
	word32 s3_1008
	word32 a4_2195
	word32 s4_2197
	word32 a5_2196
	word32 s1_2193
	word32 a1_2194
	word32 ra_1005 = ensure(ra_962, s2_967, s3_968, a4_988, a5_989, s3_968, out s0_1006, out s1_2193, out a0_993, out a1_2194, out a4_2195, out a5_2196, out s2_996, out s3_1008, out s4_2197, out s8_998)
	branch a0_993 == 0<32> l2302EAC8
l2302EC06:
	Mem1014[a0_993:byte] = SLICE(s7_868, byte, 0)
	branch s0_1006 == 0<32> l2302EC10
l2302EC0C:
	Mem1015[a0_993 + 1<i32>:byte] = SLICE(s6_876, byte, 0)
l2302EC10:
	Mem1024[s2_996 + 8<i32>:word32] = Mem1017[s2_996 + 8<i32>:int32] + s3_1008
	word32 a4_1033
	word32 a5_2207
	word32 a2_2205
	word32 a3_2206
	word32 s0_2203
	word32 a0_2204
	word32 ra_1036 = print_value(ra_1005, s11_966, s2_996, dwLoc50, out s0_2203, out a0_2204, out a2_2205, out a3_2206, out a4_1033, out a5_2207)
	word32 a4_1043
	word32 a5_2208
	Mem1045[s2_996 + 8<i32>:word32] = update(s2_996, a4_1033, out a4_1043, out a5_2208)
	word32 a5_1050 = CONVERT(Mem1045[s11_966:int32] != 0<32>, bool, word32) + s8_998
	word32 a5_1063
	word32 s0_2209
	word32 a4_2211
	word32 a1_2210
	word32 a0_1053
	ra_1065 = ensure(ra_1036, s2_996, a5_1050 + 1<i32>, a4_1043, a5_1050, s3_1008, out s0_2209, out s1_1067, out a0_1053, out a1_2210, out a4_2211, out a5_1063, out s2_1056, out s3_1068, out s4_1057, out s8_1058)
	branch a0_1053 == 0<32> l2302EAC8
l2302EC4A:
	s0_1075 = dwArg84
	branch Mem1052[s11_966:int32] == 0<32> l2302EC58
l2302EC52:
	Mem1077[a0_1053:byte] = SLICE(s9_877, byte, 0)
	a0_1053 = a0_1053 + 1<32>
l2302EC58:
	branch dwArg84 == 0<32> l2302EC60
l2302EC5A:
	Mem1083[a0_1053:byte] = SLICE(s10_878, byte, 0)
	a0_1053 = a0_1053 + 1<32>
l2302EC60:
	Mem1086[a0_1053:byte] = 0<8>
	a4_1089 = Mem1086[s2_1056 + 8<i32>:int32]
	a5_1092 = a5_1063 + a4_1089
	Mem1093[s2_1056 + 8<i32>:word32] = a5_1092
	s11_1096 = Mem1093[s11_966:int32]
l2302EB9E:
	word32 a1_1097 = 2<32>
	branch s0_1075 == 0<32> l2302EBA6
l2302EBA2:
	a1_1097 = s1_1067 + 2<i32>
l2302EBA6:
	word32 s0_1122
	word32 s1_1123
	word32 a1_2157
	word32 a5_2159
	word32 s2_2160
	word32 s3_2161
	word32 s4_2162
	word32 a4_2158
	word32 s8_2163
	word32 a0_1109
	ensure(ra_1065, s2_1056, a1_1097, a4_1089, a5_1092, s3_1068, out s0_1122, out s1_1123, out a0_1109, out a1_2157, out a4_2158, out a5_2159, out s2_2160, out s3_2161, out s4_2162, out s8_2163)
	branch a0_1109 == 0<32> l2302EAC8
l2302EBAE:
	branch s0_1122 != 0<32> l2302EC9A
l2302EC9A:
	word32 a5_1130 = 0<32>
l2302EC8A:
	branch a5_1130 < s1_1123 l2302EC80
l2302EC80:
	Mem1137[a0_1109 + a5_1130:byte] = 9<8>
	a5_1130 = a5_1130 + 1<32>
l2302EC8E:
	word32 s4_1139 = s1_1123
	branch s1_1123 >= 0<32> l2302EC96
l2302EC94:
	s4_1139 = 0<32>
l2302EC96:
	a0_1109 = a0_1109 + s4_1139
l2302EBB2:
	Mem1146[a0_1109:byte] = 0x7D<8>
	Mem1147[a0_1109 + 1<i32>:byte] = 0<8>
l2302EAB2:
	word32 s1_1182
	word32 s0_1181
	word32 a0_1194
	branch a3 == 0<32> l2302EAD2
l2302EAD2:
	word32 a5_1155 = Mem29[0x4200DC60<32>:int32]
	branch a2 == 0<32> l2302EAE2
l2302EADE:
l2302EAE2:
	word32 tp_1208
	call a5_1155 (retsize: 0;)
		uses: a1:a1,a2:a2,a3:a3,a4:a4,a5:a5_1155,ra:ra,s0:a2,s1:a1,s10:s10,s11:s11,s2:a3,s3:s3,s4:s4,s5:s5_41,s6:a0_31,s7:s7,s8:s8,s9:s9,Stack +0010:dwLoc50,Stack +00E4:dwArg84,Stack +0128:dwArgC8,tp:tp_1208
		defs: a0:a0_1194,s0:s0_1181,s1:s1_1182,tp:tp_1208
l2302EAB6:
	word32 a1_1209 = 3<32>
	branch a2 == 0<32> l2302EABE
l2302EABA:
	a1_1209 = a1 + 4<i32>
l2302EABE:
	word32 s8_2144
	word32 a1_2138
	word32 s2_2141
	word32 a4_2139
	word32 s3_2142
	word32 s4_2143
	word32 a5_2140
	ensure(ra, a3, a1_1209, a4, a5, s3, out s0_1181, out s1_1182, out a0_1194, out a1_2138, out a4_2139, out a5_2140, out s2_2141, out s3_2142, out s4_2143, out s8_2144)
l2302EAC4:
	branch a0_1194 != 0<32> l2302EAE6
l2302EAE6:
	Mem1242[a0_1194:byte] = 0x7B<8>
	word32 a5_1243 = a0_1194 + 1<i32>
	branch s0_1181 == 0<32> l2302EB0E
l2302EAF4:
	Mem1246[a0_1194 + 1<i32>:byte] = 0xA<8>
	a5_1243 = a0_1194 + 2<i32>
	word32 s1_1250 = s1_1182 + 0xFFFFFFFF<32>
	word32 a3_1251 = 0xFFFFFFFE<32> - a0_1194
l2302EB06:
	branch a5_1243 + a3_1251 < s1_1250 l2302EB3A
l2302EB3A:
	a5_1243 = a5_1243 + 1<32>
	Mem1259[a5_1243 + 4095<i32>:byte] = 9<8>
l2302EB0E:
	Mem1262[a5_1243:byte] = 0x7D<8>
	Mem1263[a5_1243 + 1<i32>:byte] = 0<8>
l2302EAC8:
l2302EB1A:
	return
print_object.isra.3_exit:


void cJSON_InitHooks(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __bl_ble_sync_task
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
cJSON_InitHooks_entry:
l2302EEC0:
	branch a0 != 0<32> l2302EEE6
l2302EEE6:
	branch a5 != 0<32> l2302EEF2
l2302EEEA:
	a5 = 0x23002884<32>
l2302EEF2:
	Mem15[a5:word32] = 0x4200DC60<32>
	branch a5 == 0<32> l2302EEDC
l2302EED2:
	Mem19[0x23002884<32>:word32] = 0x4200DC60<32>
l2302EEDC:
	a5 = 0x2300287C<32>
l2302EEF8:
	Mem26[a5:word32] = 0x4200DC5C<32>
	return
cJSON_InitHooks_exit:


word32 cJSON_Delete(word32 ra, word32 a0, word32 a5, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cJSON_Delete
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a0 a5 ra s2 s3
// Trashed: a0 a2 a5 a6 ra s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
cJSON_Delete_entry:
l2302EEFC:
	word32 s0_101 = a0
	word32 s2_102 = 0x4200E000<32>
l2302EF0E:
	word32 a5_112
	branch s0_101 != 0<32> l2302EF1E
l2302EF1E:
	word32 a5_65
	word32 s3_21 = Mem13[Mem13[a5 + 12<i32>:word32]:int32]
	word32 a5_24 = a5 & 256<i32>
	branch a5_24 != 0<32> l2302EF36
l2302EF2E:
	branch a0 != 0<32> l2302EF50
l2302EF50:
	word32 a5_41
	ra = cJSON_Delete(ra, a0, a5_41 & 256<i32>, out a0, out a5_41, out s2_102, out s3_21)
	a5_24 = a5_41 & 256<i32>
	branch (a5_41 & 256<i32>) == 0<32> l2302EF32
l2302EF5A:
l2302EF32:
	word32 s0_46 = Mem13[a0 + 16<i32>:word32]
	branch a0 != 0<32> l2302EF5C
l2302EF5C:
	call a5_24 (retsize: 0;)
		uses: a0:a0_44,a5:a5_65,ra:ra_50,s0:s0_46,s1:Mem13[a5_47:word32],s2:s2_49,s3:s3_51
		defs: a0:a0_59,a5:a5_65,ra:ra_56,s2:s2_55,s3:s3_58
	a5_24 = a5_65
l2302EF36:
	word32 a5_89
	word32 s0_68 = Mem13[a5_24 + 12<i32>:word32]
	word32 a5_69 = a5_24 & 512<i32>
	branch a5_69 != 0<32> l2302EF46
l2302EF3E:
	s0_68 = Mem13[a0 + 32<i32>:word32]
	branch a0 == 0<32> l2302EF46
l2302EF42:
	call a5_69 (retsize: 0;)
		uses: a0:a0_70,a5:a5_89,ra:ra_74,s0:s0_71,s1:Mem13[a5_69:word32],s2:s2_73,s3:s3_75
		defs: a5:a5_89,ra:ra_80,s0:s0_78,s2:s2_79,s3:s3_82
	a5_69 = a5_89
l2302EF46:
	call a5_69 (retsize: 0;)
		uses: a0:s0_93,a5:a5_112,ra:ra_98,s0:s3_95,s1:Mem13[a5_90:word32],s2:s2_97,s3:s3_95
		defs: a0:a0_106,a5:a5_112,ra:ra_103,s0:s0_101,s2:s2_102,s3:s3_105
	a5 = a5_112
l2302EF10:
	a0Out = a0
	a5Out = a5
	s2Out = s2_102
	s3Out = s3
	return ra
cJSON_Delete_exit:


void cJSON_Print(word32 ra, word32 a0, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra s0
// Preserved: sp
cJSON_Print_entry:
l2302EF62:
l2302EF68_thunk_print_value:
	word32 s0_17
	word32 a0_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	print_value(ra, a0, 0<32>, dwArg10, out s0_17, out a0_18, out a2_19, out a3_20, out a4_21, out a5_22)
	return
cJSON_Print_exit:


void cJSON_AddItemToArray(word32 a1, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cJSON_AddItemToObject
// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 a5 sp
cJSON_AddItemToArray_entry:
l2302EF6C:
	branch a1 == 0<32> l2302EF80
l2302EF6E:
	word32 a0_6 = Mem0[a5 + 8<i32>:word32]
	branch a5 != 0<32> l2302EF78
l2302EF78:
	word32 a5_9 = Mem0[a4:word32]
	branch a4 != 0<32> l2302EF76
l2302EF76:
l2302EF7C:
	Mem12[a1:word32] = a5_9
	Mem13[a5_9 + 4<i32>:word32] = a1
l2302EF80:
	return
l2302EF72:
	Mem14[a1 + 8<i32>:word32] = a0_6
	return
cJSON_AddItemToArray_exit:


void cJSON_AddItemToObject(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg34, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s8 sp t0 t1 t3 t4 t5 t6 tp
cJSON_AddItemToObject_entry:
l2302EF82:
	branch a2 == 0<32> l2302EFBC
l2302EFBC:
	return
l2302EF84:
	word32 a2_9 = Mem6[a0 + 32<i32>:word32]
	word32 s0_16 = a2_9
	word32 s2_18 = a1
	branch a0 == 0<32> l2302EFA2
l2302EF98:
	word32 a5_20 = Mem15[0x4200DC5C<32>:int32]
	word32 tp_30
	word32 a4_31
	word32 a3_67
	word32 a6_68
	word32 a7_69
	word32 s8_70
	word32 t0_71
	word32 t1_72
	word32 t3_73
	word32 t4_74
	word32 t5_75
	word32 t6_76
	call a5_20 (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2_9,a3:a3_67,a4:a4_31,a5:a5_20,a6:a6_68,a7:a7_69,ra:ra,s0:a2_9,s1:a0,s2:a1,s8:s8_70,t0:t0_71,t1:t1_72,t3:t3_73,t4:t4_74,t5:t5_75,t6:t6_76,tp:tp_30
		defs: a3:a3_67,a4:a4_31,a6:a6_68,a7:a7_69,ra:ra_27,s0:s0_25,s2:s2_26,s8:s8_70,t0:t0_71,t1:t1_72,t3:t3_73,t4:t4_74,t5:t5_75,t6:t6_76,tp:tp_30
l2302EFA2:
	word32 a4_41
	word32 a5_42
	word32 a0_54
	word32 s0_46 = cJSON_strdup(ra, s0_16, s2_18, dwArg34, out a0_54, out a4_41, out a5_42)
	Mem55[a0_54 + 32<i32>:word32] = s0_46
	0<32> = dwArg38
l2302EFB8_thunk_cJSON_AddItemToArray:
	cJSON_AddItemToArray(s0_46, a4_41, a5_42)
	return
cJSON_AddItemToObject_exit:


void cJSON_CreateNumber(word32 ra, word32 s0, word32 a0, word32 a1, word32 fflags, word32 frm, word32 dwArg58)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s0:[0..31] Stack +0058:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 ra s2 s3 t0 t1 tp
// Preserved: a0 s0 sp
cJSON_CreateNumber_entry:
l2302EFBE:
	word32 ra_21 = cJSON_New_Item(ra, s0)
	branch a0 == 0<32> l2302EFEA
l2302EFD4:
	Mem26[0xF<32>:word32] = a0
	Mem27[a0 + 24<i32>:word32] = a0
	Mem28[a0 + 28<i32>:word32] = a1
	word32 a5_74
	word32 a4_73
	word32 a3_72
	word32 a1_71
	Mem40[__fixdfsi(ra_21, a0, a1, fflags, frm, out a1_71, out a3_72, out a4_73, out a5_74) + 20<i32>:word32] = a0
l2302EFEA:
	0<32> = dwArg58
	return
cJSON_CreateNumber_exit:


void cJSON_CreateString(word32 ra, word32 s0, word32 a0, word32 dwArg34)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] Stack +0034:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
cJSON_CreateString_entry:
l2302EFF8:
	word32 ra_17 = cJSON_New_Item(ra, s0)
	branch a0 == 0<32> l2302F016
l2302F00A:
	Mem22[0x10<32>:word32] = a0
	word32 a0_40
	word32 a4_81
	word32 a5_82
	Mem41[a0_40 + 16<i32>:word32] = cJSON_strdup(ra_17, a0, a0, dwArg34, out a0_40, out a4_81, out a5_82)
l2302F016:
	return
cJSON_CreateString_exit:


void cJSON_CreateObject(word32 ra, word32 s0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
cJSON_CreateObject_entry:
l2302F022:
	cJSON_New_Item(ra, s0)
	branch a0 == 0<32> l2302F030
l2302F02C:
	Mem17[0x12<32>:word32] = a0
l2302F030:
	return
cJSON_CreateObject_exit:


word32 cli_command_get(word32 a0, word32 a1, word32 a3, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      proc_onecmd
//      help_cmd
//      aos_cli_input_direct
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a2 a4 a5
// Preserved: sp
cli_command_get_entry:
l2302F036:
	word32 a5_28 = 0xFFFFFFFF<32>
	branch a0 < 0<32> l2302F064
l2302F03C:
	a5_28 = 0xFFFFFFFF<32>
	a4 = Mem0[a3 + 44<i32>:word32]
	a2 = a3 + 8<i32>
	branch a0 >=u a3 + 8<i32> l2302F064
l2302F050:
	branch a0 >=u a3 l2302F068
l2302F068:
	branch a1 == 0<32> l2302F06E
l2302F06A:
	Mem13[a1:word32] = 0<32>
l2302F06E:
	a4 = Mem15[0x2B<32>:word32]
l2302F054:
	branch a1 == 0<32> l2302F05A
l2302F056:
	Mem22[1<32>:word32] = a1
l2302F05A:
	a4 = Mem26[0x14<32>:word32]
	a5_28 = a0 + 0x18<32>
l2302F064:
	a2Out = a2
	a4Out = a4
	a5Out = a5_28
	return a5_28
cli_command_get_exit:


void exit_cmd()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
exit_cmd_entry:
l2302F07A:
	Mem5[0x4200E1D4<32>:word32] = 1<32>
	return
exit_cmd_exit:


void cb_idnoe(word32 ra, word32 a1, word32 a3, word32 a5, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a5:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
cb_idnoe_entry:
l2302F086:
	word32 a0_7 = Mem5[a5:word32]
	branch a5 != 0<32> l2302F0AE
l2302F08E:
	Mem9[1<32>:word32] = a0_7
	word32 a3_20
	word32 s1_174
	word32 a0_175
	word32 a2_176
	word32 s10_171
	word32 s11_172
	word32 t4_173
	word32 s7_168
	word32 s8_169
	word32 s9_170
	word32 s4_165
	word32 s5_166
	word32 s6_167
	word32 a7_162
	word32 s2_163
	word32 s3_164
	word32 a2_159
	word32 a4_160
	word32 a5_161
	word32 s1_156
	word32 a0_157
	word32 a1_158
	word32 a3_177
	word32 a4_178
	word32 a5_179
	word32 a7_180
	word32 s2_181
	word32 s3_182
	word32 s4_183
	word32 s5_184
	word32 s6_185
	word32 s7_186
	word32 s8_187
	word32 s9_188
	word32 s10_189
	word32 s11_190
	word32 t4_191
	ra = printf(printf(ra, 0x230776C4<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_156, out a0_157, out a1_158, out a2_159, out a3_20, out a4_160, out a5_161, out a7_162, out s2_163, out s3_164, out s4_165, out s5_166, out s6_167, out s7_168, out s8_169, out s9_170, out s10_171, out s11_172, out t4_173), 0x230776E4<32>, a3_20, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_174, out a0_175, out a1, out a2_176, out a3_177, out a4_178, out a5_179, out a7_180, out s2_181, out s3_182, out s4_183, out s5_184, out s6_185, out s7_186, out s8_187, out s9_188, out s10_189, out s11_190, out t4_191)
l2302F0AE:
	word32 a5_64 = CONVERT(Mem63[a1 + 16<i32>:byte], byte, word32)
	branch (a5_64 + -1<i32> & 255<i32>) <=u 1<32> l2302F0CE
l2302F0C2:
	branch a5_64 == 3<32> l2302F0CE
l2302F0CC:
l2302F0CE:
	word32 a3_78
	branch a5_64 == 1<32> l2302F100
l2302F100:
	a3_78 = 0x230776A8<32>
l2302F0D6:
	branch a5_64 == 2<32> l2302F10A
l2302F10A:
	a3_78 = 0x230776B4<32>
l2302F0DC:
	branch a5_64 == 3<32> l2302F114
l2302F114:
	a3_78 = 0x2307769C<32>
l2302F0E2:
	a3_78 = 0x2306FCA8<32>
l2302F0EA:
	word32 s1_192
	word32 a0_193
	word32 a1_194
	word32 a2_195
	word32 a3_196
	word32 a4_197
	word32 a5_198
	word32 a7_199
	word32 s2_200
	word32 s3_201
	word32 s4_202
	word32 s5_203
	word32 s6_204
	word32 s7_205
	word32 s8_206
	word32 s9_207
	word32 s10_208
	word32 s11_209
	word32 t4_210
	printf(ra, 0x2307773C<32>, a3_78, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_192, out a0_193, out a1_194, out a2_195, out a3_196, out a4_197, out a5_198, out a7_199, out s2_200, out s3_201, out s4_202, out s5_203, out s6_204, out s7_205, out s8_206, out s9_207, out s10_208, out s11_209, out t4_210)
	return
cb_idnoe_exit:


void ota_cmd(word32 ra, word32 s1, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
ota_cmd_entry:
l2302F11E:
l2302F132_thunk_aos_task_new:
	aos_task_new(ra, s1, 0x2302F136<32>, 0<32>, 0x1000000<32>, a4, a5, s4, mstatus, dwArg04, dwArg20, dwArg24, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
ota_cmd_exit:


void tftp_ota_thread(word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
tftp_ota_thread_entry:
l2302F136:
l2302F138_thunk_aos_task_exit:
	aos_task_exit(a2, a3, a4, a5, mstatus, dwArg0128, dwArg0138, dwArg0168, dwArg0178)
	return
tftp_ota_thread_exit:


void cat_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg50, word32 dwArg54, word32 dwArg64, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cat_cmd_entry:
l2302F13C:
	branch a2 == 2<32> l2302F158
l2302F14C:
	word32 a5_290
	word32 a4_289
	word32 a3_288
	word32 a2_287
	word32 a1_286
	word32 s1_285
	word32 a7_291
	word32 s3_292
	word32 s4_293
	word32 s5_294
	word32 s6_295
	word32 s7_296
	word32 s8_297
	word32 s9_298
	word32 s10_299
	word32 s11_300
	word32 t4_301
	ra = printf(ra, 0x23077670<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_285, out a0, out a1_286, out a2_287, out a3_288, out a4_289, out a5_290, out a7_291, out s2, out s3_292, out s4_293, out s5_294, out s6_295, out s7_296, out s8_297, out s9_298, out s10_299, out s11_300, out t4_301)
l2302F158:
	word32 a0_49
	word32 mstatus_73
	word32 s3_283
	word32 a5_282
	word32 s6_284
	word32 a4_108
	word32 a3_122
	word32 ra_107 = aos_open(ra, a0, s2, mstatus, dwLoc1C, dwArg64, s1, dwArgD8, dwArg0118, dwArg0158, out a0_49, out a3_122, out a4_108, out a5_282, out s3_283, out s6_284, out mstatus_73)
	word32 s0_105 = a0_49
	branch a0_49 < 0<32> l2302F18A
l2302F18A:
	word32 s1_302
	word32 a0_303
	word32 a1_304
	word32 a2_305
	word32 a3_306
	word32 a4_307
	word32 a5_308
	word32 a7_309
	word32 s2_310
	word32 s3_311
	word32 s4_312
	word32 s5_313
	word32 s6_314
	word32 s7_315
	word32 s8_316
	word32 s9_317
	word32 s10_318
	word32 s11_319
	word32 t4_320
	printf(ra_107, 0x23077688<32>, a3_122, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_302, out a0_303, out a1_304, out a2_305, out a3_306, out a4_307, out a5_308, out a7_309, out s2_310, out s3_311, out s4_312, out s5_313, out s6_314, out s7_315, out s8_316, out s9_317, out s10_318, out s11_319, out t4_320)
l2302F166:
	word32 s1_101 = 0x23077000<32>
l2302F16A:
	word32 a0_110
	word32 a1_352
	word32 ra_118 = aos_read(ra_107, s0_105, fp + 0xFFFFFFEF<32>, a4_108, dwLoc20, dwArg24, out s0_105, out a0_110, out a1_352)
	branch a0_110 != 1<32> l2302F1A2
l2302F1A2:
	word32 a2_127
	word32 a3_128
	word32 a4_129
	word32 s2_135
	word32 s1_321
	word32 a0_322
	word32 a1_323
	word32 a5_324
	word32 a7_325
	word32 s3_326
	word32 s4_327
	word32 s5_328
	word32 s6_329
	word32 s7_330
	word32 s8_331
	word32 s9_332
	word32 s10_333
	word32 s11_334
	word32 t4_335
	aos_close(printf(ra_118, 0x2307676C<32>, a3_122, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_321, out a0_322, out a1_323, out a2_127, out a3_128, out a4_129, out a5_324, out a7_325, out s2_135, out s3_326, out s4_327, out s5_328, out s6_329, out s7_330, out s8_331, out s9_332, out s10_333, out s11_334, out t4_335), s0_105, a2_127, a3_128, a4_129, s2_135, mstatus_73, dwArg18)
l2302F198:
	return
cat_cmd_exit:
l2302F17C:
	word32 a0_336
	word32 a1_337
	word32 a2_338
	word32 a5_339
	word32 a7_340
	word32 s2_341
	word32 s3_342
	word32 s4_343
	word32 s5_344
	word32 s6_345
	word32 s7_346
	word32 s8_347
	word32 s9_348
	word32 s10_349
	word32 s11_350
	word32 t4_351
	ra_107 = printf(ra_118, s1_101 + 168<i32>, a3_122, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_101, out a0_336, out a1_337, out a2_338, out a3_122, out a4_108, out a5_339, out a7_340, out s2_341, out s3_342, out s4_343, out s5_344, out s6_345, out s7_346, out s8_347, out s9_348, out s10_349, out s11_350, out t4_351)


void hexdump_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg50, word32 dwArg54, word32 dwArg5C, word32 dwArg64, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
hexdump_cmd_entry:
l2302F1B6:
	branch a2 == 2<32> l2302F1D2
l2302F1C6:
	word32 s1_290
	word32 a1_291
	word32 a2_292
	word32 a3_293
	word32 a4_294
	word32 a5_295
	word32 a7_296
	word32 s3_297
	word32 s4_298
	word32 s5_299
	word32 s6_300
	word32 s7_301
	word32 s8_302
	word32 s9_303
	word32 s10_304
	word32 s11_305
	word32 t4_306
	ra = printf(ra, 0x23077670<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_290, out a0, out a1_291, out a2_292, out a3_293, out a4_294, out a5_295, out a7_296, out s2, out s3_297, out s4_298, out s5_299, out s6_300, out s7_301, out s8_302, out s9_303, out s10_304, out s11_305, out t4_306)
l2302F1D2:
	word32 a0_49
	word32 a3_57
	word32 mstatus_73
	word32 a4_286
	word32 a5_287
	word32 s3_288
	word32 s6_289
	word32 ra_74 = aos_open(ra, a0, s2, mstatus, dwLoc1C, dwArg64, s1, dwArgD8, dwArg0118, dwArg0158, out a0_49, out a3_57, out a4_286, out a5_287, out s3_288, out s6_289, out mstatus_73)
	branch a0_49 >= 0<32> l2302F1F8
l2302F1F8:
	word32 a4_83
	word32 a3_94
	word32 a1_109
	word32 a3_111
	word32 s1_115
	word32 s10_116
	word32 a2_132
	word32 a3_133
	word32 a4_134
	word32 s0_139
	word32 s2_143
	word32 t1_307
	word32 a0_308
	word32 a1_309
	word32 a2_310
	word32 a3_311
	word32 a5_312
	word32 a0_313
	word32 a2_314
	word32 a4_315
	word32 a5_316
	word32 a7_317
	word32 s2_318
	word32 s3_319
	word32 s4_320
	word32 s5_321
	word32 s6_322
	word32 s7_323
	word32 s8_324
	word32 s9_325
	word32 s11_326
	word32 t4_327
	aos_close(utils_hexdump(printf(aos_ioctl(memset(ra_74, fp + 0xFFFFFFE8<32>, 0<32>, 8<32>, out t1_307, out a0_308, out a1_309, out a2_310, out a3_311, out a4_83, out a5_312), a0_49, 1<32>, fp + 0xFFFFFFE8<32>, a4_83, dwLoc20, dwArg24, out a3_94), 0x2307791C<32>, a3_94, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_115, out a0_313, out a1_109, out a2_314, out a3_111, out a4_315, out a5_316, out a7_317, out s2_318, out s3_319, out s4_320, out s5_321, out s6_322, out s7_323, out s8_324, out s9_325, out s10_116, out s11_326, out t4_327), s1_115, a1_109, a3_111, s10_116, dwArg10, dwArg14, dwArg5C, dwArg0178, out s0_139, out a2_132, out a3_133, out a4_134, out s2_143), s0_139, a2_132, a3_133, a4_134, s2_143, mstatus_73, dwArg18)
l2302F1E0:
	word32 s1_328
	word32 a0_329
	word32 a1_330
	word32 a2_331
	word32 a3_332
	word32 a4_333
	word32 a5_334
	word32 a7_335
	word32 s2_336
	word32 s3_337
	word32 s4_338
	word32 s5_339
	word32 s6_340
	word32 s7_341
	word32 s8_342
	word32 s9_343
	word32 s10_344
	word32 s11_345
	word32 t4_346
	printf(ra_74, 0x23077688<32>, a3_57, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_328, out a0_329, out a1_330, out a2_331, out a3_332, out a4_333, out a5_334, out a7_335, out s2_336, out s3_337, out s4_338, out s5_339, out s6_340, out s7_341, out s8_342, out s9_343, out s10_344, out s11_345, out t4_346)
l2302F1EE:
	return
hexdump_cmd_exit:


word32 aos_cli_init(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArg0128, word32 dwArg0168, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
aos_cli_init_entry:
l2302F22E:
	word32 a0_16
	word32 s3_26
	word32 s4_100
	word32 s2_99
	word32 a5_98
	word32 a4_97
	word32 a3_96
	word32 s1_95
	Mem31[a0_16:word32] = aos_malloc(ra, s1, 580<i32>, a3, a4, a5, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_95, out a0_16, out a3_96, out a4_97, out a5_98, out s2_99, out s3_26, out s4_100)
	branch a0_16 == 0<32> l2302F286
l2302F24A:
	word32 a4_39
	word32 t1_101
	word32 a0_102
	word32 a1_103
	word32 a2_104
	word32 a3_105
	word32 a5_106
	ra = memset(ra, a0_16, 0<32>, 580<i32>, out t1_101, out a0_102, out a1_103, out a2_104, out a3_105, out a4_39, out a5_106)
	Mem50[0x230828BC<32>:word32] = a4_39
	Mem55[a4_39 + 4<i32>:word32] = 0<32>
	Mem56[0xAAAAABE8<32>:word32] = a4_39
	Mem57[0xAAAAABEC<32>:word32] = a4_39
	Mem59[1<32>:word32] = a4_39
l2302F286:
	s3Out = s3_26
	return ra
aos_cli_init_exit:


word32 aos_cli_event_cb_read_get()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut: a0
// Trashed: a0
// Preserved: sp
aos_cli_event_cb_read_get_entry:
l2302F290:
	return 0x230304AC<32>
aos_cli_event_cb_read_get_exit:


word32 cli_putstr(word32 ra, word32 a0, word32 dwArg24, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ps_cmd
//      aos_cli_printf
// MayUse:  a0:[0..31] ra:[0..31] Stack +0024:[0..31]
// LiveOut: a1 a2 a3 a4 a5 s1 s2 s3 s4 s8 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
cli_putstr_entry:
l2302F29A:
	word32 a3_17
	word32 a2_104
	word32 a1_20
	word32 a4_18
	word32 a5_19
	word32 a0_16 = strlen(a0, out a1_20, out a2_104, out a3_17, out a4_18, out a5_19)
	word32 s0_23 = 0<32>
l2302F2B4:
	branch s0_23 < a0_16 l2302F2C8
l2302F2C8:
	word32 a0_36
	word32 s0_40
	ra = aos_write(ra, Mem13[0x4200E1DC<32>:int32], a0 + s0_23, a4_18, dwLoc20, dwArg24, out t1, out s0_40, out a0_36, out a1_20, out a4_18, out a5_19)
	branch a0_36 < 0<32> l2302F2B8
l2302F2DC:
	s0_23 = s0_40 + a0_36
l2302F2B8:
	s1Out = a0_16
	a1Out = a1_20
	a2Out = dwArg48
	a3Out = a3_17
	a4Out = a4_18
	a5Out = a5_19
	s2Out = a0
	s3Out = 0x4200E000<32>
	s4Out = dwArg04
	s8Out = dwLoc1C
	return t1
cli_putstr_exit:


void ps_cmd(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 s5, word32 s7, word32 s9, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg68, word32 dwArg7C, word32 dwArg8C, word32 dwArgA8, word32 dwArgB8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0188, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s7:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
ps_cmd_entry:
l2302F2E0:
	word32 a0_17
	word32 s3_27
	word32 s1_213
	word32 a1_214
	word32 a2_215
	word32 a3_216
	word32 a4_217
	word32 a5_218
	word32 a6_219
	word32 s2_220
	word32 s4_221
	word32 s8_222
	pvPortMalloc(ra, s1, 1536<i32>, a3, a4, a5, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_213, out a0_17, out a1_214, out a2_215, out a3_216, out a4_217, out a5_218, out a6_219, out s2_220, out s3_27, out s4_221, out s8_222)
	branch a0_17 == 0<32> l2302F362
l2302F362:
	0<32> = dwArg38
	return
l2302F2F4:
	word32 a4_223
	word32 a5_224
	strcpy(a0_17, 0x23077B8C<32>, out a4_223, out a5_224)
	word32 a1_225
	word32 a2_226
	word32 a3_227
	word32 a4_228
	word32 a5_229
	word32 s0_49 = a0_17 + strlen(a0_17, out a1_225, out a2_226, out a3_227, out a4_228, out a5_229)
	word32 a1_230
	word32 a2_231
	word32 a3_232
	word32 a4_233
	word32 a5_234
	word32 a0_57 = strlen(0x23077B8C<32>, out a1_230, out a2_231, out a3_232, out a4_233, out a5_234) - s0_49
l2302F31C:
	branch s0_49 + a0_57 <= 0xC<32> l2302F356
l2302F356:
	Mem65[s0_49:byte] = 0x20<8>
	s0_49 = s0_49 + 1<32>
	Mem67[s0_49:byte] = 0<8>
l2302F324:
	word32 a4_235
	word32 a5_236
	strcpy(s0_49, 0x23077B94<32>, out a4_235, out a5_236)
	word32 a3_76
	word32 a4_77
	word32 a5_117
	word32 s1_121
	word32 a1_237
	word32 a2_238
	word32 a5_239
	word32 a1_240
	word32 a2_241
	word32 a3_242
	word32 a4_243
	word32 s2_244
	word32 s3_245
	word32 s4_246
	word32 s8_247
	cli_putstr(ra, vTaskList(ra, a0_17, strlen(0x23077B94<32>, out a1_237, out a2_238, out a3_76, out a4_77, out a5_239) + s0_49, a3_76, a4_77, s3_27, s5, s7, s9, mstatus, dwLoc08, dwArg00, dwArg04, dwArg24, dwArg68, dwArg8C, dwArgA8, dwArgB8, dwArgF8, dwArg0118, dwArg0138, dwArg0148, dwArg0188), dwArg14, out s1_121, out a1_240, out a2_241, out a3_242, out a4_243, out a5_117, out s2_244, out s3_245, out s4_246, out s8_247)
	0<32> = dwArg38
l2302F352_thunk_vPortFree:
	word32 s0_248
	word32 s1_249
	word32 a0_250
	word32 a1_251
	word32 a2_252
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 a6_256
	word32 s4_257
	word32 t3_258
	vPortFree(s1_121, dwArg10, a5_117, mstatus, dwArg0158, dwArg0198, out s0_248, out s1_249, out a0_250, out a1_251, out a2_252, out a3_253, out a4_254, out a5_255, out a6_256, out s4_257, out t3_258)
	return
ps_cmd_exit:


word32 aos_cli_printf(word32 ra, word32 a0, ptr32 & t1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      proc_onecmd
//      ls_cmd
//      uptime_cmd
//      reset_cmd
//      poweroff_cmd
//      reboot_cmd
//      version_cmd
//      devname_cmd
//      echo_cmd
//      mmem_cmd
//      pmem_cmd
//      help_cmd
//      aos_cli_input_direct
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a1 a2 a3 a4 a5 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: ra s0 s1 sp
aos_cli_printf_entry:
l2302F36E:
	word32 a0_186
	word32 a1_187
	word32 a2_188
	word32 a3_189
	word32 a4_190
	word32 a5_191
	word32 t1_103
	word32 ra_35 = memset(ra, fp + -304<i32>, 0<32>, 256<i32>, out t1_103, out a0_186, out a1_187, out a2_188, out a3_189, out a4_190, out a5_191)
	word32 a0_40 = 0<32>
	branch CONVERT(Mem28[0x4200E1D9<32>:byte], byte, word32) == 0<32> l2302F3C8
l2302F3B2:
	word32 a4_194
	word32 a5_195
	strcpy(fp + -304<i32>, 0x42012AB8<32>, out a4_194, out a5_195)
	word32 a1_196
	word32 a2_197
	word32 a3_198
	word32 a4_199
	word32 a5_200
	a0_40 = strlen(0x42012AB8<32>, out a1_196, out a2_197, out a3_198, out a4_199, out a5_200)
l2302F3C8:
	word32 a0_65
	word32 a7_68
	word32 s10_72
	word32 s11_73
	word32 s6_77
	word32 s7_78
	word32 s9_80
	word32 t0_81
	word32 t4_83
	word32 s5_87
	word32 s0_192
	word32 s1_193
	word32 s4_101
	word32 s3_100
	word32 s2_155
	word32 a5_149
	word32 a3_147
	word32 a4_148
	word32 a1_145
	word32 a2_146
	word32 s8_102
	word32 ra_69 = vsnprintf(ra_35, a0_40 + (fp + -304<i32>), 256<i32> - a0_40, a0, fp + -28<i32>, dwLocE8, dwLocC8, dwLoc9C, dwLoc80, dwLoc7C, dwLoc58, dwLoc34, out t0_81, out s0_192, out s1_193, out a0_65, out a1_145, out a2_146, out a3_147, out a4_148, out a5_149, out a7_68, out s2_155, out s3_100, out s4_101, out s5_87, out s6_77, out s7_78, out s8_102, out s9_80, out s10_72, out s11_73, out t4_83)
	branch a0_65 <= 0<32> l2302F3E6
l2302F3E0:
	word32 s1_201
	t1_103 = cli_putstr(ra_69, fp + -304<i32>, dwLoc011C, out s1_201, out a1_145, out a2_146, out a3_147, out a4_148, out a5_149, out s2_155, out s3_100, out s4_101, out s8_102)
l2302F3E6:
	t1Out = t1_103
	a1Out = a1_145
	a2Out = a2_146
	a3Out = a3_147
	a4Out = a4_148
	a5Out = a5_149
	a7Out = a7_68
	s2Out = s2_155
	s3Out = s3_100
	s4Out = s4_101
	s5Out = s5_87
	s6Out = s6_77
	s7Out = s7_78
	s8Out = s8_102
	s9Out = s9_80
	s10Out = s10_72
	s11Out = s11_73
	t4Out = t4_83
	return t0_81
aos_cli_printf_exit:


word32 proc_onecmd(word32 ra, word32 a0, word32 a3, word32 s3, word32 s6, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_cli_input_direct
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 tp
// Preserved: sp
proc_onecmd_entry:
l2302F3F8:
	branch a0 <= 0<32> l2302F4E0
l2302F4E0:
	s0Out = s0
	a0Out = 0<32>
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
l2302F3FC:
	word32 s2_212 = a0
	branch Mem25[Mem7[0x4200E1D0<32>:int32] + 4<i32>:word32] != 0<32> l2302F430
l2302F424:
	word32 t4_613
	word32 s5_606
	word32 s6_607
	word32 s7_608
	word32 s10_611
	word32 s11_612
	word32 s8_609
	word32 s9_610
	word32 a2_599
	word32 a3_600
	word32 a4_601
	word32 s3_604
	word32 s4_605
	word32 a5_602
	word32 a7_603
	word32 s1_597
	word32 a1_598
	ra = printf(ra, 0x2307676C<32>, a3, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_597, out a0, out a1_598, out a2_599, out a3_600, out a4_601, out a5_602, out a7_603, out s2_212, out s3_604, out s4_605, out s5_606, out s6_607, out s7_608, out s8_609, out s9_610, out s10_611, out s11_612, out t4_613)
l2302F430:
	word32 s1_58 = Mem25[a0:word32]
	word32 a2_595
	word32 a4_596
	word32 a5_101
	word32 a3_108
	word32 a0_65 = strchr(a0, 46<i32>, out a2_595, out a3_108, out a4_596, out a5_101)
	word32 s5_215 = 0<32>
	word32 s6_216 = Mem25[s1_58:int32]
	branch a0_65 == 0<32> l2302F446
l2302F442:
	s5_215 = a0_65 - s6_216
l2302F446:
	word32 s3_213 = 0<32>
	word32 s4_267 = 0<32>
l2302F44A:
	word32 a0_240
	word32 a5_79 = a5_101 + 8<32>
	branch s3_213 >=u a5_79 l2302F45A
l2302F454:
	branch s4_267 <u a5_79 l2302F45E
l2302F45E:
	word32 a2_614
	word32 a4_615
	word32 a0_86 = cli_command_get(s3_213, 0<32>, a3_108, out a2_614, out a4_615, out a5_101)
	word32 a0_91 = Mem25[a0_86:word32]
	branch a0_91 == 0<32> l2302F47C
l2302F46C:
	word32 a4_109
	word32 a0_106
	branch s5_215 == 0<32> l2302F480
l2302F480:
	word32 a1_616
	word32 a2_617
	a0_106 = strcmp(a0_91, s6_216, out a1_616, out a2_617, out a3_108, out a4_109, out a5_101)
l2302F470:
	a0_106 = strncmp(a0_91, s6_216, s5_215, out a3_108, out a4_109, out a5_101)
l2302F478:
	branch a0_106 == 0<32> l2302F4E4
l2302F4E4:
	word32 a0_132
	word32 a5_137
	word32 s1_140
	word32 s2_141
	word32 s3_142
	word32 s4_143
	word32 a3_618
	word32 a4_619
	aos_malloc(ra, s1_58, 512<i32>, a3_108, a4_109, a5_101, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_140, out a0_132, out a3_618, out a4_619, out a5_137, out s2_141, out s3_142, out s4_143)
	Mem148[s3_142 + 312<i32>:word32] = a0_132
	word32 a0_149 = Mem148[a5_137 + 312<i32>:int32]
	branch a0_149 != 0<32> l2302F488
l2302F488:
	word32 a4_156
	word32 sp_170
	word32 t2_197
	call Mem148[a0_86 + 8<i32>:int32] (retsize: 0;)
		uses: a0:Mem148[a4_156 + 312<i32>:int32],a1:512<i32>,a2:s2_141,a3:s1_140,a4:a4_231,a5:a5_232,a6:a6_233,a7:a7_209,mstatus:mstatus_198,ra:memset(ra_301, a0_149, 0<32>, 512<i32>, out t1_620, out a0_621, out a1_622, out a2_623, out a3_624, out a4_156, out a5_625),s0:Mem148[a4_156:word32],s1:s1_140,s10:s10_210,s11:s11_211,s2:s2_141,s3:s3_142,s4:s4_143,s5:s5_294,s6:s6_70,s7:a0_86,s8:s8_218,s9:s9_219,Stack +0028:dwLoc08,Stack +0040:dwArg10,Stack +0044:dwArg14,Stack +0070:dwArg40,Stack +0074:dwArg44,Stack +0098:dwArg68,Stack +00BC:dwArg8C,Stack +0138:dwArg0108,Stack +0178:dwArg0148,t0:t0_220,t1:t1_221,t2:t2_197,t3:t3_237,t4:t4_223,tp:tp_238
		defs: mstatus:mstatus_198,ra:ra_176,sp:sp_170,t2:t2_197
	word32 a2_205
	word32 a5_208
	word32 a7_209
	word32 s10_210
	word32 s11_211
	word32 s8_218
	word32 s9_219
	word32 t1_221
	word32 t4_223
	word32 s7_630
	word32 a1_626
	word32 s4_629
	word32 a4_628
	word32 a3_627
	word32 t0_220 = aos_cli_printf(ra, 0x23077770<32>, out t1_221, out a1_626, out a2_205, out a3_627, out a4_628, out a5_208, out a7_209, out s2_212, out s3_213, out s4_629, out s5_215, out s6_216, out s7_630, out s8_218, out s9_219, out s10_210, out s11_211, out t4_223)
	word32 s1_631
	word32 a4_231
	word32 a5_232
	word32 a6_233
	word32 t3_237
	word32 a0_632
	word32 a2_633
	word32 tp_238 = aos_free(Mem148[a5_208 + 312<i32>:int32], a2_205, a5_208, mstatus, Mem148[sp_170 + 344<i32>:word32], Mem148[sp_170 + 408<i32>:word32], out s1_631, out a0_632, out a2_633, out a3_108, out a4_231, out a5_232, out a6_233, out t3_237)
	Mem241[a5_232 + 312<i32>:word32] = 0<32>
	a0_240 = 0<32>
l2302F4FC:
	word32 a4_637
	word32 a5_638
	word32 s4_640
	word32 t1_634
	word32 a7_639
	word32 a1_635
	word32 a2_636
	word32 s11_645
	word32 s10_644
	word32 s7_641
	word32 t4_646
	word32 s8_642
	word32 s9_643
	aos_cli_printf(ra, 0x23077B6C<32>, out t1_634, out a1_635, out a2_636, out a3_108, out a4_637, out a5_638, out a7_639, out s2_212, out s3_213, out s4_640, out s5_215, out s6_216, out s7_641, out s8_642, out s9_643, out s10_644, out s11_645, out t4_646)
l2302F47A:
	s4_267 = s4_267 + 1<32>
l2302F47C:
	s3_213 = s3_213 + 1<32>
l2302F45A:
	a0_240 = 1<32>
l2302F4CA:
	0<32> = dwArg0128
	s0Out = dwArgE4
	a0Out = a0_240
	a3Out = a3_108
	s2Out = s2_212
	s3Out = s3_213
	s4Out = dwArg78
	s5Out = s5_215
	s6Out = s6_216
	s8Out = s5
	mstatusOut = mstatus
	return ra
proc_onecmd_exit:


void ls_cmd(word32 ra, word32 a2, word32 a3, word32 a4, word32 a5, word32 s7, word32 mstatus, word32 dwArg38, word32 dwArg78, word32 dwArg98, word32 dwArgB8, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ls_cmd_entry:
l2302F50A:
	word32 a2_127
	word32 a5_130
	word32 a5_118
	word32 a0_122
	word32 a0_33
	word32 s1_41
	word32 s2_42
	word32 a2_987
	word32 a3_988
	word32 a5_990
	word32 a6_991
	word32 s3_992
	word32 s4_993
	word32 s8_994
	word32 a1_986
	word32 a4_989
	pvPortMalloc(ra, a2, 88<i32>, a3, a4, a5, mstatus, dwLoc80, dwLoc7C, dwLoc34, dwArg78, dwArgB8, out s1_41, out a0_33, out a1_986, out a2_987, out a3_988, out a4_989, out a5_990, out a6_991, out s2_42, out s3_992, out s4_993, out s8_994)
	word32 s0_156 = a0_33
	word32 a5_1008
	word32 a4_1007
	word32 a2_1005
	word32 a1_1004
	word32 a0_1003
	word32 a5_1001
	word32 a4_1000
	word32 a3_999
	word32 a1_997
	word32 a0_996
	word32 t1_995
	word32 a3_1006
	word32 t1_1002
	word32 a2_998
	word32 ra_71 = memset(memset(ra, 0x2306E1FC<32>, 0<32>, 88<i32>, out t1_995, out a0_996, out a1_997, out a2_998, out a3_999, out a4_1000, out a5_1001), fp + -176<i32>, 0<32>, 128<i32>, out t1_1002, out a0_1003, out a1_1004, out a2_1005, out a3_1006, out a4_1007, out a5_1008)
	branch s1_41 != 2<32> l2302F730
l2302F730:
	a5_118 = 1<32>
	branch s1_41 == 1<32> l2302F712
l2302F736:
	a0_122 = 0x23077670<32>
l2302F554:
	word32 a0_263
	word32 s2_234
	word32 ra_261
	word32 a0_195
	word32 a3_169
	word32 ra_175
	word32 a2_83
	word32 a3_84
	word32 a4_85
	word32 a5_87
	word32 a1_1009
	branch strcmp(Mem29[s2_42 + 4<i32>:int32], 0x23077944<32>, out a1_1009, out a2_83, out a3_84, out a4_85, out a5_87) != 0<32> l2302F60A
l2302F60A:
	word32 a3_104
	word32 a4_105
	word32 a2_107
	word32 a5_1016
	word32 a5_1014
	word32 a2_1011
	word32 a3_1012
	word32 a1_1015
	word32 a4_1013
	word32 a1_1010
	word32 a0_102 = memcmp(Mem29[s2_42 + 4<i32>:int32], 0x230779A4<32>, strlen(0x230779A4<32>, out a1_1010, out a2_1011, out a3_1012, out a4_1013, out a5_1014), out a1_1015, out a2_107, out a3_104, out a4_105, out a5_1016)
	word32 a5_108 = Mem29[s2_42 + 4<i32>:int32]
	branch a0_102 != 0<32> l2302F702
l2302F702:
	word32 a4_1113
	word32 a2_1111
	word32 a3_1112
	word32 a1_1110
	branch strcmp(a5_108, 0x230779C4<32>, out a1_1110, out a2_1111, out a3_1112, out a4_1113, out a5_118) != 0<32> l2302F722
l2302F722:
	a0_122 = 0x230779C8<32>
l2302F72A:
	word32 t4_1098
	word32 s11_1097
	word32 s10_1096
	word32 s9_1095
	word32 s6_1092
	word32 s8_1094
	word32 s7_1093
	word32 s5_1091
	word32 s4_1090
	word32 s3_1089
	word32 a4_1086
	word32 s2_1088
	word32 a7_1087
	word32 a3_1085
	word32 a1_1084
	word32 t1_1083
	aos_cli_printf(ra_71, a0_122, out t1_1083, out a1_1084, out a2_127, out a3_1085, out a4_1086, out a5_130, out a7_1087, out s2_1088, out s3_1089, out s4_1090, out s5_1091, out s6_1092, out s7_1093, out s8_1094, out s9_1095, out s10_1096, out s11_1097, out t4_1098)
l2302F712:
	s0_156 = inode_forearch_name(ra_71, 0x2302F086<32>, fp + -180<i32>, a5_118, out a2_127, out a5_130)
l2302F62E:
	word32 a0_192
	ra_175 = aos_opendir(ra_71, a5_108, a2_107, a3_104, a4_105, a5_108, s2_42, mstatus, dwLocBC, 0<32>, dwLoc38, dwArg38, dwArg78, dwArgB8, out s0_156, out a0_192, out a3_169, out mstatus)
	branch a0_192 == 0<32> l2302F6F8
l2302F6F8:
	a0_195 = 0x230779AC<32>
l2302F638:
	word32 a3_203
	word32 s1_1132
	word32 t4_1131
	word32 s11_1130
	word32 s10_1129
	word32 s9_1128
	word32 s8_1127
	word32 s7_1126
	word32 s6_1125
	word32 s5_1124
	word32 s4_1123
	word32 s3_1122
	word32 s2_1121
	word32 a5_1119
	word32 a7_1120
	word32 a2_1117
	word32 a4_1118
	word32 a0_1115
	word32 a1_1116
	word32 s1_1114
	word32 a0_1133
	word32 a1_1134
	word32 a2_1135
	word32 a3_1136
	word32 a4_1137
	word32 a5_1138
	word32 a7_1139
	word32 s4_1140
	word32 s5_1141
	word32 s6_1142
	word32 s7_1143
	word32 s8_1144
	word32 s9_1145
	word32 s10_1146
	word32 s11_1147
	word32 t4_1148
	word32 s3_235
	word32 ra_230 = printf(printf(ra_175, 0x230776C4<32>, a3_169, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1114, out a0_1115, out a1_1116, out a2_1117, out a3_203, out a4_1118, out a5_1119, out a7_1120, out s2_1121, out s3_1122, out s4_1123, out s5_1124, out s6_1125, out s7_1126, out s8_1127, out s9_1128, out s10_1129, out s11_1130, out t4_1131), 0x230776E4<32>, a3_203, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1132, out a0_1133, out a1_1134, out a2_1135, out a3_1136, out a4_1137, out a5_1138, out a7_1139, out s2_234, out s3_235, out s4_1140, out s5_1141, out s6_1142, out s7_1143, out s8_1144, out s9_1145, out s10_1146, out s11_1147, out t4_1148)
	word32 s4_244 = 0x23077000<32>
l2302F660:
	word32 a0_253
	ra_261 = aos_readdir(ra_230, s3_235, dwLocC0, dwLoc7C, out a0_253)
	branch a0_253 == 0<32> l2302F6F4
l2302F6F4:
	a0_263 = s3_235
l2302F66A:
	word32 s4_296
	word32 s5_297
	word32 t1_1149
	word32 a0_1150
	word32 a1_1151
	word32 a2_1152
	word32 a3_1153
	word32 a4_1154
	word32 a5_1155
	word32 s0_1156
	word32 s1_1157
	word32 a0_1158
	word32 a2_1159
	word32 a3_1160
	word32 a4_1161
	word32 a5_1162
	word32 s2_1163
	word32 s3_1164
	word32 s6_1165
	word32 s7_1166
	word32 s8_1167
	word32 s9_1168
	word32 s10_1169
	word32 s11_1170
	word32 ra_289 = snprintf(memset(ra_261, fp + -176<i32>, 0<32>, 128<i32>, out t1_1149, out a0_1150, out a1_1151, out a2_1152, out a3_1153, out a4_1154, out a5_1155), fp + -176<i32>, 127<i32>, s4_244 + 1904<i32>, dwLocA8, dwLoc88, dwLoc5C, dwLoc40, 0<32>, dwLoc18, s7, out s0_1156, out s1_1157, out a0_1158, out a2_1159, out a3_1160, out a4_1161, out a5_1162, out s2_1163, out s3_1164, out s4_296, out s5_297, out s6_1165, out s7_1166, out s8_1167, out s9_1168, out s10_1169, out s11_1170)
	word32 a1_1171
	word32 a2_1172
	word32 a3_1173
	word32 a4_1174
	word32 a5_1175
	branch CONVERT(Mem252[strlen(fp + -176<i32>, out a1_1171, out a2_1172, out a3_1173, out a4_1174, out a5_1175) + (fp + -48<i32>) + -129<i32>:byte], byte, word32) == s5_297 l2302F6A8
l2302F69A:
	word32 a1_1198
	word32 a2_1199
	word32 a3_1200
	word32 a4_1201
	word32 a5_1202
	Mem324[strlen(fp + -176<i32>, out a1_1198, out a2_1199, out a3_1200, out a4_1201, out a5_1202) + (fp + -48<i32>) + 3968<i32>:byte] = SLICE(s5_297, byte, 0)
l2302F6A8:
	word32 a2_354
	word32 a3_355
	word32 a4_356
	word32 a5_357
	word32 s2_364
	word32 s7_369
	word32 a0_379
	word32 a3_388
	word32 a5_390
	word32 s6_396
	word32 a1_1176
	word32 a2_1177
	word32 a3_1178
	word32 a4_1179
	word32 a5_1180
	word32 a1_1181
	word32 a2_1182
	word32 a3_1183
	word32 a4_1184
	word32 a5_1185
	word32 s0_1186
	word32 s1_1187
	word32 a0_1188
	word32 s3_1189
	word32 s4_1190
	word32 s5_1191
	word32 s6_1192
	word32 s8_1193
	word32 s9_1194
	word32 s10_1195
	word32 s11_1196
	word32 s5_1197
	ra_230 = aos_stat(snprintf(ra_289, fp + -176<i32> + strlen(fp + -176<i32>, out a1_1176, out a2_1177, out a3_1178, out a4_1179, out a5_1180), 127<i32> - strlen(fp + -176<i32>, out a1_1181, out a2_1182, out a3_1183, out a4_1184, out a5_1185), s4_296 + 1904<i32>, dwLocA8, dwLoc88, dwLoc5C, dwLoc40, 0<32>, dwLoc18, s7, out s0_1186, out s1_1187, out a0_1188, out a2_354, out a3_355, out a4_356, out a5_357, out s2_364, out s3_1189, out s4_1190, out s5_1191, out s6_1192, out s7_369, out s8_1193, out s9_1194, out s10_1195, out s11_1196), fp + -176<i32>, a2_354, a3_355, a4_356, a5_357, s2_364, mstatus, dwLocBC, 0<32>, dwLoc38, dwArg38, dwArg78, dwArgB8, out a0_379, out a3_388, out a5_390, out s2_234, out s3_235, out s4_244, out s5_1197, out s6_396, out mstatus)
	branch a0_379 != 0<32> l2302F660
l2302F6D8:
	word32 a0_409 = s7_369 + -1704<i32>
	branch a5_390 << 0x11<u32> < 0<32> l2302F6EE
l2302F6EA:
	a0_409 = s6_396 + -1676<i32>
l2302F6EE:
	word32 s1_1203
	word32 a0_1204
	word32 a1_1205
	word32 a2_1206
	word32 a3_1207
	word32 a4_1208
	word32 a5_1209
	word32 a7_1210
	word32 s5_1211
	word32 s6_1212
	word32 s7_1213
	word32 s8_1214
	word32 s9_1215
	word32 s10_1216
	word32 s11_1217
	word32 t4_1218
	ra_230 = printf(ra_230, a0_409, a3_388, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1203, out a0_1204, out a1_1205, out a2_1206, out a3_1207, out a4_1208, out a5_1209, out a7_1210, out s2_234, out s3_235, out s4_244, out s5_1211, out s6_1212, out s7_1213, out s8_1214, out s9_1215, out s10_1216, out s11_1217, out t4_1218)
l2302F566:
	word32 a0_464
	ra_175 = aos_opendir(ra_71, 0x23077944<32>, a2_83, a3_84, a4_85, a5_87, s2_42, mstatus, dwLocBC, 0<32>, dwLoc38, dwArg38, dwArg78, dwArgB8, out s0_156, out a0_464, out a3_169, out mstatus)
	branch a0_464 == 0<32> l2302F5FC
l2302F5FC:
	a0_195 = 0x2307798C<32>
l2302F604:
	word32 s1_1219
	word32 a0_1220
	word32 a1_1221
	word32 a3_1222
	word32 a4_1223
	word32 a7_1224
	word32 s2_1225
	word32 s3_1226
	word32 s4_1227
	word32 s5_1228
	word32 s6_1229
	word32 s7_1230
	word32 s8_1231
	word32 s9_1232
	word32 s10_1233
	word32 s11_1234
	word32 t4_1235
	printf(ra_175, a0_195, a3_169, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1219, out a0_1220, out a1_1221, out a2_127, out a3_1222, out a4_1223, out a5_130, out a7_1224, out s2_1225, out s3_1226, out s4_1227, out s5_1228, out s6_1229, out s7_1230, out s8_1231, out s9_1232, out s10_1233, out s11_1234, out t4_1235)
l2302F572:
	word32 a2_1038
	word32 a4_1040
	word32 a7_1042
	word32 s4_1044
	word32 s6_1046
	word32 s9_1049
	word32 a3_502
	word32 a0_1036
	word32 t4_1034
	word32 s10_1032
	word32 s8_1030
	word32 s6_1028
	word32 s4_1026
	word32 s2_1024
	word32 a5_1022
	word32 a4_1021
	word32 a2_1020
	word32 a1_1019
	word32 a0_1018
	word32 s1_1017
	word32 t4_1052
	word32 s11_1051
	word32 s10_1050
	word32 s8_1048
	word32 s7_1047
	word32 s5_1045
	word32 s3_1043
	word32 a5_1041
	word32 a3_1039
	word32 a1_1037
	word32 s1_1035
	word32 s11_1033
	word32 s9_1031
	word32 s7_1029
	word32 s5_1027
	word32 s3_1025
	word32 a7_1023
	word32 ra_529 = printf(printf(ra_175, 0x230776C4<32>, a3_169, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1017, out a0_1018, out a1_1019, out a2_1020, out a3_502, out a4_1021, out a5_1022, out a7_1023, out s2_1024, out s3_1025, out s4_1026, out s5_1027, out s6_1028, out s7_1029, out s8_1030, out s9_1031, out s10_1032, out s11_1033, out t4_1034), 0x230776E4<32>, a3_502, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1035, out a0_1036, out a1_1037, out a2_1038, out a3_1039, out a4_1040, out a5_1041, out a7_1042, out s2_234, out s3_1043, out s4_1044, out s5_1045, out s6_1046, out s7_1047, out s8_1048, out s9_1049, out s10_1050, out s11_1051, out t4_1052)
	word32 s4_543 = 0x23078000<32>
l2302F596:
	word32 a0_551
	ra_261 = aos_readdir(ra_529, s2_234, dwLocC0, dwLoc7C, out a0_551)
	branch a0_551 == 0<32> l2302F5D8
l2302F5D8:
	a0_263 = s2_234
l2302F5DA:
	s0_156 = aos_closedir(ra_261, a0_263, s2_234, mstatus, dwLoc7C, out a2_127, out a5_130)
l2302F5DE:
	word32 t3_1109
	word32 s4_1108
	word32 a6_1107
	word32 a5_1106
	word32 a4_1105
	word32 a3_1104
	word32 a2_1103
	word32 a1_1102
	word32 a0_1101
	word32 s1_1100
	word32 s0_1099
	vPortFree(s0_156, a2_127, a5_130, mstatus, dwArg98, dwArgD8, out s0_1099, out s1_1100, out a0_1101, out a1_1102, out a2_1103, out a3_1104, out a4_1105, out a5_1106, out a6_1107, out s4_1108, out t3_1109)
	return
ls_cmd_exit:
l2302F59E:
	word32 a2_637
	word32 a3_638
	word32 a4_639
	word32 a5_640
	word32 s2_647
	word32 a0_660
	word32 a3_669
	word32 a5_671
	word32 s3_675
	word32 s5_676
	word32 s6_1065
	word32 s11_1064
	word32 s10_1063
	word32 s9_1062
	word32 s6_1059
	word32 s8_1061
	word32 s7_1060
	word32 s5_1058
	word32 s4_1057
	word32 s3_1056
	word32 a0_1055
	word32 s1_1054
	word32 s0_1053
	ra_529 = aos_stat(snprintf(ra_261, fp + -176<i32>, 127<i32>, s4_543 + -1716<i32>, dwLocA8, dwLoc88, dwLoc5C, dwLoc40, 0<32>, dwLoc18, s7, out s0_1053, out s1_1054, out a0_1055, out a2_637, out a3_638, out a4_639, out a5_640, out s2_647, out s3_1056, out s4_1057, out s5_1058, out s6_1059, out s7_1060, out s8_1061, out s9_1062, out s10_1063, out s11_1064), fp + -176<i32>, a2_637, a3_638, a4_639, a5_640, s2_647, mstatus, dwLocBC, 0<32>, dwLoc38, dwArg38, dwArg78, dwArgB8, out a0_660, out a3_669, out a5_671, out s2_234, out s3_675, out s4_543, out s5_676, out s6_1065, out mstatus)
	branch a0_660 != 0<32> l2302F596
l2302F5BC:
	word32 a0_690 = s5_676 + -1704<i32>
	branch a5_671 << 0x11<u32> < 0<32> l2302F5D2
l2302F5CE:
	a0_690 = s3_675 + -1676<i32>
l2302F5D2:
	word32 s10_1080
	word32 t4_1082
	word32 s11_1081
	word32 s9_1079
	word32 s8_1078
	word32 s7_1077
	word32 s3_1074
	word32 s6_1076
	word32 s5_1075
	word32 a7_1073
	word32 a5_1072
	word32 a4_1071
	word32 a3_1070
	word32 a2_1069
	word32 a1_1068
	word32 a0_1067
	word32 s1_1066
	ra_529 = printf(ra_529, a0_690, a3_669, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1066, out a0_1067, out a1_1068, out a2_1069, out a3_1070, out a4_1071, out a5_1072, out a7_1073, out s2_234, out s3_1074, out s4_543, out s5_1075, out s6_1076, out s7_1077, out s8_1078, out s9_1079, out s10_1080, out s11_1081, out t4_1082)


void uptime_cmd(word32 ra, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
uptime_cmd_entry:
l2302F740:
	word32 a0_15
	word32 a1_16
	word32 a2_211
	word32 a4_212
	word32 a5_213
	aos_now_ms(a3, out a0_15, out a1_16, out a2_211, out a4_212, out a5_213)
	word32 t1_214
	word32 a1_215
	word32 a2_216
	word32 a3_217
	word32 a4_218
	word32 a5_219
	word32 a7_220
	word32 s2_221
	word32 s3_222
	word32 s4_223
	word32 s5_224
	word32 s6_225
	word32 s7_226
	word32 s8_227
	word32 s9_228
	word32 s10_229
	word32 s11_230
	word32 t4_231
	aos_cli_printf(ra, 0x23077D5C<32>, out t1_214, out a1_215, out a2_216, out a3_217, out a4_218, out a5_219, out a7_220, out s2_221, out s3_222, out s4_223, out s5_224, out s6_225, out s7_226, out s8_227, out s9_228, out s10_229, out s11_230, out t4_231)
	word32 a1_56
	__moddi3(__divdi3(a0_15, a1_16, 0xEFFFA60<32>, 0<32>, out a1_56), a1_56, 60<i32>, 0<32>)
	word32 a1_85
	__moddi3(__divdi3(a0_15, a1_16, 0x36EE80<32>, 0<32>, out a1_85), a1_85, 0x18<32>, 0<32>)
	word32 a1_232
	__divdi3(a0_15, a1_16, 0x5265C00<32>, 0<32>, out a1_232)
	word32 a1_133
	__moddi3(__divdi3(a0_15, a1_16, 1000<i32>, 0<32>, out a1_133), a1_133, 60<i32>, 0<32>)
	word32 t1_233
	word32 a1_234
	word32 a2_235
	word32 a3_236
	word32 a4_237
	word32 a5_238
	word32 a7_239
	word32 s2_240
	word32 s3_241
	word32 s4_242
	word32 s5_243
	word32 s6_244
	word32 s7_245
	word32 s8_246
	word32 s9_247
	word32 s10_248
	word32 s11_249
	word32 t4_250
	aos_cli_printf(ra, 0x23077D74<32>, out t1_233, out a1_234, out a2_235, out a3_236, out a4_237, out a5_238, out a7_239, out s2_240, out s3_241, out s4_242, out s5_243, out s6_244, out s7_245, out s8_246, out s9_247, out s10_248, out s11_249, out t4_250)
	return
uptime_cmd_exit:


void reset_cmd(word32 ra, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
reset_cmd_exit:
reset_cmd_entry:
l2302F7F8:
	word32 t1_35
	word32 a1_36
	word32 a2_37
	word32 a3_38
	word32 a4_39
	word32 a5_40
	word32 a7_41
	word32 s2_42
	word32 s3_43
	word32 s4_44
	word32 s5_45
	word32 s6_46
	word32 s7_47
	word32 s8_48
	word32 s9_49
	word32 s10_50
	word32 s11_51
	word32 t4_52
	aos_cli_printf(ra, 0x23077C08<32>, out t1_35, out a1_36, out a2_37, out a3_38, out a4_39, out a5_40, out a7_41, out s2_42, out s3_43, out s4_44, out s5_45, out s6_46, out s7_47, out s8_48, out s9_49, out s10_50, out s11_51, out t4_52)
l2302F80C_thunk_hal_sys_reset:
	hal_sys_reset(mstatus)


void poweroff_cmd(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
poweroff_cmd_entry:
l2302F810:
	word32 t1_34
	word32 a1_35
	word32 a2_36
	word32 a3_37
	word32 a4_38
	word32 a5_39
	word32 a7_40
	word32 s2_41
	word32 s3_42
	word32 s4_43
	word32 s5_44
	word32 s6_45
	word32 s7_46
	word32 s8_47
	word32 s9_48
	word32 s10_49
	word32 s11_50
	word32 t4_51
	aos_cli_printf(ra, 0x23077B60<32>, out t1_34, out a1_35, out a2_36, out a3_37, out a4_38, out a5_39, out a7_40, out s2_41, out s3_42, out s4_43, out s5_44, out s6_45, out s7_46, out s8_47, out s9_48, out s10_49, out s11_50, out t4_51)
l2302F824_thunk_hal_poweroff:
	hal_poweroff()
	return
poweroff_cmd_exit:


void reboot_cmd(word32 ra, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
reboot_cmd_exit:
reboot_cmd_entry:
l2302F828:
	word32 t1_35
	word32 a1_36
	word32 a2_37
	word32 a3_38
	word32 a4_39
	word32 a5_40
	word32 a7_41
	word32 s2_42
	word32 s3_43
	word32 s4_44
	word32 s5_45
	word32 s6_46
	word32 s7_47
	word32 s8_48
	word32 s9_49
	word32 s10_50
	word32 s11_51
	word32 t4_52
	aos_cli_printf(ra, 0x23077BFC<32>, out t1_35, out a1_36, out a2_37, out a3_38, out a4_39, out a5_40, out a7_41, out s2_42, out s3_43, out s4_44, out s5_45, out s6_46, out s7_47, out s8_48, out s9_49, out s10_50, out s11_51, out t4_52)
l2302F83C_thunk_hal_reboot:
	hal_reboot(mstatus)


void version_cmd(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
version_cmd_entry:
l2302F840:
	word32 a7_233
	word32 s2_234
	word32 a4_231
	word32 a5_232
	word32 a2_229
	word32 a3_230
	word32 t1_227
	word32 a1_228
	word32 s3_235
	word32 s4_236
	word32 s5_237
	word32 s6_238
	word32 s7_239
	word32 s8_240
	word32 s9_241
	word32 s10_242
	word32 s11_243
	word32 t4_244
	aos_cli_printf(ra, 0x23077DB4<32>, out t1_227, out a1_228, out a2_229, out a3_230, out a4_231, out a5_232, out a7_233, out s2_234, out s3_235, out s4_236, out s5_237, out s6_238, out s7_239, out s8_240, out s9_241, out s10_242, out s11_243, out t4_244)
	word32 t1_245
	word32 a1_246
	word32 a2_247
	word32 a3_248
	word32 a4_249
	word32 a5_250
	word32 a7_251
	word32 s2_252
	word32 s3_253
	word32 s4_254
	word32 s5_255
	word32 s6_256
	word32 s7_257
	word32 s8_258
	word32 s9_259
	word32 s10_260
	word32 s11_261
	word32 t4_262
	aos_cli_printf(ra, 0x2306EB1C<32>, out t1_245, out a1_246, out a2_247, out a3_248, out a4_249, out a5_250, out a7_251, out s2_252, out s3_253, out s4_254, out s5_255, out s6_256, out s7_257, out s8_258, out s9_259, out s10_260, out s11_261, out t4_262)
	word32 a4_68
	word32 t1_263
	word32 a1_264
	word32 a2_265
	word32 a3_266
	word32 a5_267
	word32 a7_268
	word32 s2_269
	word32 s3_270
	word32 s4_271
	word32 s5_272
	word32 s6_273
	word32 s7_274
	word32 s8_275
	word32 s9_276
	word32 s10_277
	word32 s11_278
	word32 t4_279
	aos_cli_printf(ra, 0x2307676C<32>, out t1_263, out a1_264, out a2_265, out a3_266, out a4_68, out a5_267, out a7_268, out s2_269, out s3_270, out s4_271, out s5_272, out s6_273, out s7_274, out s8_275, out s9_276, out s10_277, out s11_278, out t4_279)
	word32 a0_90 = bl_chip_memory_ram(fp + -72<i32>, fp + -56<i32>, fp + -40<i32>, a4_68, dwLoc18)
	branch a0_90 == 0<32> l2302F89E
l2302F89E:
	word32 t1_280
	word32 a1_281
	word32 a2_282
	word32 a3_283
	word32 a4_284
	word32 a7_285
	word32 s2_286
	word32 s3_287
	word32 s4_288
	word32 s5_289
	word32 s6_290
	word32 s7_291
	word32 s8_292
	word32 s9_293
	word32 s10_294
	word32 s11_295
	word32 t4_296
	word32 a5_107
	aos_cli_printf(ra, 0x23077DE4<32>, out t1_280, out a1_281, out a2_282, out a3_283, out a4_284, out a5_107, out a7_285, out s2_286, out s3_287, out s4_288, out s5_289, out s6_290, out s7_291, out s8_292, out s9_293, out s10_294, out s11_295, out t4_296)
	word32 s0_129 = a0_90
	word32 s2_125 = 0x23078000<32>
l2302F8B4:
	branch s0_129 >= a5_107 l2302F880
l2302F8BA:
	word32 t1_315
	word32 a1_316
	word32 a2_317
	word32 a3_318
	word32 a4_319
	word32 a7_320
	word32 s3_321
	word32 s4_322
	word32 s5_323
	word32 s6_324
	word32 s7_325
	word32 s8_326
	word32 s9_327
	word32 s10_328
	word32 s11_329
	word32 t4_330
	aos_cli_printf(ra, s2_125 + -504<i32>, out t1_315, out a1_316, out a2_317, out a3_318, out a4_319, out a5_107, out a7_320, out s2_125, out s3_321, out s4_322, out s5_323, out s6_324, out s7_325, out s8_326, out s9_327, out s10_328, out s11_329, out t4_330)
	s0_129 = s0_129 + 1<32>
l2302F880:
	xPortGetFreeHeapSize()
	word32 t1_297
	word32 a1_298
	word32 a2_299
	word32 a3_300
	word32 a4_301
	word32 a5_302
	word32 a7_303
	word32 s2_304
	word32 s3_305
	word32 s4_306
	word32 s5_307
	word32 s6_308
	word32 s7_309
	word32 s8_310
	word32 s9_311
	word32 s10_312
	word32 s11_313
	word32 t4_314
	aos_cli_printf(ra, 0x23077DCC<32>, out t1_297, out a1_298, out a2_299, out a3_300, out a4_301, out a5_302, out a7_303, out s2_304, out s3_305, out s4_306, out s5_307, out s6_308, out s7_309, out s8_310, out s9_311, out s10_312, out s11_313, out t4_314)
	return
version_cmd_exit:


void devname_cmd(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
devname_cmd_entry:
l2302F8E2:
l2302F8F2_thunk_aos_cli_printf:
	word32 t1_30
	word32 a1_31
	word32 a2_32
	word32 a3_33
	word32 a4_34
	word32 a5_35
	word32 a7_36
	word32 s2_37
	word32 s3_38
	word32 s4_39
	word32 s5_40
	word32 s6_41
	word32 s7_42
	word32 s8_43
	word32 s9_44
	word32 s10_45
	word32 s11_46
	word32 t4_47
	aos_cli_printf(ra, 0x23077838<32>, out t1_30, out a1_31, out a2_32, out a3_33, out a4_34, out a5_35, out a7_36, out s2_37, out s3_38, out s4_39, out s5_40, out s6_41, out s7_42, out s8_43, out s9_44, out s10_45, out s11_46, out t4_47)
	return
devname_cmd_exit:


void echo_cmd(word32 ra, word32 a0, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 tp
// Preserved: s0 sp
echo_cmd_entry:
l2302F8F6:
	branch a2 != 1<32> l2302F936
l2302F936:
	word32 a2_215
	word32 a4_217
	word32 a3_216
	word32 a1_214
	word32 a5_218
	word32 a0_17 = strcmp(a0, 0x23070678<32>, out a1_214, out a2_215, out a3_216, out a4_217, out a5_218)
	branch a0_17 != 0<32> l2302F96A
l2302F96A:
	word32 a1_237
	word32 a2_238
	word32 a3_239
	word32 a4_240
	word32 a5_241
	branch strcmp(a0_17, 0x230706A8<32>, out a1_237, out a2_238, out a3_239, out a4_240, out a5_241) != 0<32> l2302F960
l2302F97A:
	word32 t1_260
	word32 a1_261
	word32 a2_262
	word32 a3_263
	word32 a4_264
	word32 a5_265
	word32 a7_266
	word32 s2_267
	word32 s3_268
	word32 s4_269
	word32 s5_270
	word32 s6_271
	word32 s7_272
	word32 s8_273
	word32 s9_274
	word32 s10_275
	word32 s11_276
	word32 t4_277
	aos_cli_printf(ra, 0x2307789C<32>, out t1_260, out a1_261, out a2_262, out a3_263, out a4_264, out a5_265, out a7_266, out s2_267, out s3_268, out s4_269, out s5_270, out s6_271, out s7_272, out s8_273, out s9_274, out s10_275, out s11_276, out t4_277)
	Mem64[5<32>:word32] = Mem9[0x4200E1D0<32>:int32]
l2302F948:
	word32 t1_242
	word32 a1_243
	word32 a2_244
	word32 a3_245
	word32 a4_246
	word32 a5_247
	word32 a7_248
	word32 s2_249
	word32 s3_250
	word32 s4_251
	word32 s5_252
	word32 s6_253
	word32 s7_254
	word32 s8_255
	word32 s9_256
	word32 s10_257
	word32 s11_258
	word32 t4_259
	aos_cli_printf(ra, 0x2307788C<32>, out t1_242, out a1_243, out a2_244, out a3_245, out a4_246, out a5_247, out a7_248, out s2_249, out s3_250, out s4_251, out s5_252, out s6_253, out s7_254, out s8_255, out s9_256, out s10_257, out s11_258, out t4_259)
	Mem91[Mem9[0x4200E1D0<32>:int32] + 4<i32>:word32] = 0<32>
l2302F960:
	return
l2302F904:
	branch Mem9[Mem9[0x4200E1D0<32>:int32] + 4<i32>:word32] != 0<32> l2302F92C
l2302F92C:
l2302F910:
l2302F918:
l2302F928_thunk_aos_cli_printf:
	word32 t1_219
	word32 a1_220
	word32 a2_221
	word32 a3_222
	word32 a4_223
	word32 a5_224
	word32 a7_225
	word32 s2_226
	word32 s3_227
	word32 s4_228
	word32 s5_229
	word32 s6_230
	word32 s7_231
	word32 s8_232
	word32 s9_233
	word32 s10_234
	word32 s11_235
	word32 t4_236
	aos_cli_printf(ra, 0x23077860<32>, out t1_219, out a1_220, out a2_221, out a3_222, out a4_223, out a5_224, out a7_225, out s2_226, out s3_227, out s4_228, out s5_229, out s6_230, out s7_231, out s8_232, out s9_233, out s10_234, out s11_235, out t4_236)
	return
echo_cmd_exit:


void mmem_cmd(word32 ra, word32 a0, word32 a2, word32 a3, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
mmem_cmd_entry:
l2302F992:
	word32 s0_58
	word32 s1_16
	branch a2 == 3<32> l2302F9F6
l2302F9F6:
	s1_16 = 4<32>
l2302F9A4:
	branch a2 == 4<32> l2302F9B6
l2302F9B6:
	word32 a4_238
	word32 a3_237
	word32 a2_236
	word32 a1_235
	word32 a5_239
	s1_16 = strtol(a0, 0<32>, 0<32>, out a1_235, out a2_236, out a3_237, out a4_238, out a5_239)
l2302F9C2:
	word32 a1_244
	word32 a2_245
	word32 a3_246
	word32 a4_247
	word32 a5_248
	s0_58 = strtol(Mem11[a3 + 8<i32>:int32], 0<32>, 0<32>, out a1_244, out a2_245, out a3_246, out a4_247, out a5_248)
l2302F9AA:
	branch a2 != 2<32> l2302F9E0
l2302F9B0:
	s0_58 = 0<32>
	s1_16 = 4<32>
l2302F9D0:
	word32 a2_69
	word32 a1_240
	word32 a3_241
	word32 a4_242
	word32 a5_243
	word32 a0_67 = strtol(Mem11[a3 + 4<i32>:int32], 0<32>, 0<32>, out a1_240, out a2_69, out a3_241, out a4_242, out a5_243)
	branch a0_67 != 0<32> l2302F9FA
l2302F9FA:
	branch s1_16 == 1<32> l2302FA0E
l2302FA0E:
	Mem89[a0_67:byte] = SLICE(s0_58 & 255<i32>, byte, 0)
l2302FA00:
	branch s1_16 == 2<32> l2302FA3C
l2302FA3C:
	Mem97[a0_67:word16] = SLICE(CONVERT(SLICE(s0_58, word16, 0), word16, word32), word16, 0)
l2302FA06:
	Mem104[s0_58:word32] = Mem11[a2_69:word32]
l2302FA26:
	0<32> = dwArg38
l2302FA38_thunk_aos_cli_printf:
	word32 t1_267
	word32 a1_268
	word32 a2_269
	word32 a3_270
	word32 a4_271
	word32 a5_272
	word32 a7_273
	word32 s2_274
	word32 s3_275
	word32 s4_276
	word32 s5_277
	word32 s6_278
	word32 s7_279
	word32 s8_280
	word32 s9_281
	word32 s10_282
	word32 s11_283
	word32 t4_284
	aos_cli_printf(ra, 0x23077A6C<32>, out t1_267, out a1_268, out a2_269, out a3_270, out a4_271, out a5_272, out a7_273, out s2_274, out s3_275, out s4_276, out s5_277, out s6_278, out s7_279, out s8_280, out s9_281, out s10_282, out s11_283, out t4_284)
	return
l2302F9E0:
	0<32> = dwArg38
l2302F9F2_thunk_aos_cli_printf:
	word32 t1_249
	word32 a1_250
	word32 a2_251
	word32 a3_252
	word32 a4_253
	word32 a5_254
	word32 a7_255
	word32 s2_256
	word32 s3_257
	word32 s4_258
	word32 s5_259
	word32 s6_260
	word32 s7_261
	word32 s8_262
	word32 s9_263
	word32 s10_264
	word32 s11_265
	word32 t4_266
	aos_cli_printf(ra, 0x230779E4<32>, out t1_249, out a1_250, out a2_251, out a3_252, out a4_253, out a5_254, out a7_255, out s2_256, out s3_257, out s4_258, out s5_259, out s6_260, out s7_261, out s8_262, out s9_263, out s10_264, out s11_265, out t4_266)
	return
mmem_cmd_exit:


void pmem_cmd(word32 ra, word32 a0, word32 a2, word32 a3, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s8 sp
pmem_cmd_entry:
l2302FA56:
	word32 s1_437
	word32 s2_108
	word32 a5_104
	branch a2 == 3<32> l2302FAEE
l2302FAEE:
	s2_108 = 4<32>
l2302FA76:
	branch a2 == 4<32> l2302FAC6
l2302FAC6:
	word32 a1_795
	word32 a5_799
	word32 a2_796
	word32 a3_797
	word32 a4_798
	s2_108 = strtol(a0, 0<32>, 0<32>, out a1_795, out a2_796, out a3_797, out a4_798, out a5_799)
l2302FAD2:
	word32 a3_806
	word32 a4_807
	word32 a5_808
	word32 a2_805
	word32 a1_804
	word32 a0_56 = strtol(Mem24[a3 + 8<i32>:int32], 0<32>, 0<32>, out a1_804, out a2_805, out a3_806, out a4_807, out a5_808)
	s1_437 = a0_56
	branch a0_56 <= 1024<i32> l2302FA88
l2302FAE8:
	s1_437 = 1024<i32>
l2302FA7C:
	a5_104 = 2<32>
	s2_108 = 4<32>
	s1_437 = 0x10<32>
	branch a2 != 2<32> l2302FA96
l2302FA88:
	word32 a3_802
	word32 a4_803
	word32 a1_800
	word32 a2_801
	strtol(Mem24[a3 + 4<i32>:int32], fp + -52<i32>, 0<32>, out a1_800, out a2_801, out a3_802, out a4_803, out a5_104)
l2302FA96:
	branch a5_104 == 0<32> l2302FAA2
l2302FA9A:
	branch a5_104 != Mem24[a3 + 4<i32>:int32] l2302FAF2
l2302FAF2:
	branch s2_108 == 1<32> l2302FB76
l2302FB76:
	word32 s2_111 = 0<32>
	word32 s5_112 = 0x23078000<32>
	word32 s6_113 = 0x23078000<32>
l2302FB70:
	branch s2_111 < s1_437 l2302FB40
l2302FB40:
	branch (s2_111 & 15<i32>) != 0<32> l2302FB56
l2302FB4C:
	word32 t1_883
	word32 a1_884
	word32 a2_885
	word32 a3_886
	word32 a4_887
	word32 a5_888
	word32 a7_889
	word32 s2_890
	word32 s3_891
	word32 s4_892
	word32 s5_893
	word32 s7_894
	word32 s8_895
	word32 s9_896
	word32 s10_897
	word32 s11_898
	word32 t4_899
	aos_cli_printf(ra, s5_112 + -1216<i32>, out t1_883, out a1_884, out a2_885, out a3_886, out a4_887, out a5_888, out a7_889, out s2_890, out s3_891, out s4_892, out s5_893, out s6_113, out s7_894, out s8_895, out s9_896, out s10_897, out s11_898, out t4_899)
l2302FB56:
	word32 s3_165
	word32 s7_169
	word32 s8_170
	word32 t1_871
	word32 a1_872
	word32 a2_873
	word32 a3_874
	word32 a4_875
	word32 a5_876
	word32 a7_877
	word32 s4_878
	word32 s9_879
	word32 s10_880
	word32 s11_881
	word32 t4_882
	word32 s2_164
	aos_cli_printf(ra, s6_113 + -1208<i32>, out t1_871, out a1_872, out a2_873, out a3_874, out a4_875, out a5_876, out a7_877, out s2_164, out s3_165, out s4_878, out s5_112, out s6_113, out s7_169, out s8_170, out s9_879, out s10_880, out s11_881, out t4_882)
	branch s3_165 != s7_169 l2302FB6E
l2302FB66:
	word32 t1_929
	word32 a1_930
	word32 a2_931
	word32 a3_932
	word32 a4_933
	word32 a5_934
	word32 a7_935
	word32 s3_936
	word32 s4_937
	word32 s7_938
	word32 s8_939
	word32 s9_940
	word32 s10_941
	word32 s11_942
	word32 t4_943
	aos_cli_printf(ra, s8_170 + 1900<i32>, out t1_929, out a1_930, out a2_931, out a3_932, out a4_933, out a5_934, out a7_935, out s2_164, out s3_936, out s4_937, out s5_112, out s6_113, out s7_938, out s8_939, out s9_940, out s10_941, out s11_942, out t4_943)
l2302FB6E:
	s2_111 = s2_164 + 1<32>
l2302FB74:
l2302FAF8:
	branch s2_108 == 2<32> l2302FBBC
l2302FBBC:
	word32 s2_203 = 0<32>
	word32 s4_204 = 0x23078000<32>
	word32 s5_205 = 0x23078000<32>
l2302FBB6:
	branch s2_203 < s1_437 l2302FB88
l2302FB88:
	branch (s2_203 & 7<i32>) != 0<32> l2302FB9A
l2302FB90:
	word32 t1_912
	word32 a1_913
	word32 a2_914
	word32 a3_915
	word32 a4_916
	word32 a5_917
	word32 a7_918
	word32 s2_919
	word32 s3_920
	word32 s4_921
	word32 s6_922
	word32 s7_923
	word32 s8_924
	word32 s9_925
	word32 s10_926
	word32 s11_927
	word32 t4_928
	aos_cli_printf(ra, s4_204 + -1216<i32>, out t1_912, out a1_913, out a2_914, out a3_915, out a4_916, out a5_917, out a7_918, out s2_919, out s3_920, out s4_921, out s5_205, out s6_922, out s7_923, out s8_924, out s9_925, out s10_926, out s11_927, out t4_928)
l2302FB9A:
	word32 s3_257
	word32 s6_260
	word32 s7_261
	word32 t1_900
	word32 a1_901
	word32 a2_902
	word32 a3_903
	word32 a4_904
	word32 a5_905
	word32 a7_906
	word32 s8_907
	word32 s9_908
	word32 s10_909
	word32 s11_910
	word32 t4_911
	word32 s2_256
	aos_cli_printf(ra, s5_205 + -1200<i32>, out t1_900, out a1_901, out a2_902, out a3_903, out a4_904, out a5_905, out a7_906, out s2_256, out s3_257, out s4_204, out s5_205, out s6_260, out s7_261, out s8_907, out s9_908, out s10_909, out s11_910, out t4_911)
	branch s3_257 != s6_260 l2302FBB4
l2302FBAC:
	word32 t1_944
	word32 a1_945
	word32 a2_946
	word32 a3_947
	word32 a4_948
	word32 a5_949
	word32 a7_950
	word32 s3_951
	word32 s6_952
	word32 s7_953
	word32 s8_954
	word32 s9_955
	word32 s10_956
	word32 s11_957
	word32 t4_958
	aos_cli_printf(ra, s7_261 + 1900<i32>, out t1_944, out a1_945, out a2_946, out a3_947, out a4_948, out a5_949, out a7_950, out s2_256, out s3_951, out s4_204, out s5_205, out s6_952, out s7_953, out s8_954, out s9_955, out s10_956, out s11_957, out t4_958)
l2302FBB4:
	s2_203 = s2_256 + 1<32>
l2302FBBA:
l2302FAFE:
	word32 s2_294 = 0<32>
	word32 s4_295 = 0x23078000<32>
	word32 s5_296 = 0x23078000<32>
l2302FB0E:
	branch s2_294 >= s1_437 l2302FAAE
l2302FB12:
	branch (s2_294 & 3<i32>) != 0<32> l2302FB24
l2302FB1A:
	word32 t1_839
	word32 a1_840
	word32 a2_841
	word32 a3_842
	word32 a4_843
	word32 a5_844
	word32 a7_845
	word32 s2_846
	word32 s3_847
	word32 s4_848
	word32 s6_849
	word32 s7_850
	word32 s8_851
	word32 s9_852
	word32 s10_853
	word32 s11_854
	word32 t4_855
	aos_cli_printf(ra, s4_295 + -1216<i32>, out t1_839, out a1_840, out a2_841, out a3_842, out a4_843, out a5_844, out a7_845, out s2_846, out s3_847, out s4_848, out s5_296, out s6_849, out s7_850, out s8_851, out s9_852, out s10_853, out s11_854, out t4_855)
l2302FB24:
	word32 s3_349
	word32 s6_352
	word32 s7_353
	word32 t1_827
	word32 a3_830
	word32 a1_828
	word32 a2_829
	word32 a5_832
	word32 a7_833
	word32 a4_831
	word32 s9_835
	word32 s10_836
	word32 s8_834
	word32 s11_837
	word32 t4_838
	word32 s2_348
	aos_cli_printf(ra, s5_296 + -1192<i32>, out t1_827, out a1_828, out a2_829, out a3_830, out a4_831, out a5_832, out a7_833, out s2_348, out s3_349, out s4_295, out s5_296, out s6_352, out s7_353, out s8_834, out s9_835, out s10_836, out s11_837, out t4_838)
	branch s3_349 != s6_352 l2302FB3C
l2302FB34:
	word32 t1_856
	word32 a1_857
	word32 a2_858
	word32 a3_859
	word32 a4_860
	word32 a5_861
	word32 a7_862
	word32 s3_863
	word32 s6_864
	word32 s7_865
	word32 s8_866
	word32 s9_867
	word32 s10_868
	word32 s11_869
	word32 t4_870
	aos_cli_printf(ra, s7_353 + 1900<i32>, out t1_856, out a1_857, out a2_858, out a3_859, out a4_860, out a5_861, out a7_862, out s2_348, out s3_863, out s4_295, out s5_296, out s6_864, out s7_865, out s8_866, out s9_867, out s10_868, out s11_869, out t4_870)
l2302FB3C:
	s2_294 = s2_348 + 1<32>
l2302FAA2:
	word32 s6_820
	word32 s3_817
	word32 s4_818
	word32 s7_821
	word32 s11_825
	word32 t4_826
	word32 s5_819
	word32 s10_824
	word32 s9_823
	word32 s8_822
	word32 s2_816
	word32 a4_813
	word32 a5_814
	word32 a7_815
	word32 a1_810
	word32 a2_811
	word32 a3_812
	word32 t1_809
	aos_cli_printf(ra, 0x23077AA4<32>, out t1_809, out a1_810, out a2_811, out a3_812, out a4_813, out a5_814, out a7_815, out s2_816, out s3_817, out s4_818, out s5_819, out s6_820, out s7_821, out s8_822, out s9_823, out s10_824, out s11_825, out t4_826)
l2302FAAE:
	0<32> = dwArg0198
	return
pmem_cmd_exit:


void help_cmd(word32 ra, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +00A8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
help_cmd_entry:
l2302FBCE:
	word32 s5_410
	word32 s6_411
	word32 a4_404
	word32 a2_402
	word32 s2_407
	word32 a5_405
	word32 t1_400
	word32 a1_401
	word32 a3_403
	word32 s4_409
	word32 a7_406
	word32 s3_408
	word32 t4_417
	word32 s10_415
	word32 s8_413
	word32 s7_412
	word32 s9_414
	word32 s11_416
	aos_cli_printf(ra, 0x230778AC<32>, out t1_400, out a1_401, out a2_402, out a3_403, out a4_404, out a5_405, out a7_406, out s2_407, out s3_408, out s4_409, out s5_410, out s6_411, out s7_412, out s8_413, out s9_414, out s10_415, out s11_416, out t4_417)
	word32 s7_428
	word32 s6_427
	word32 s5_426
	word32 s8_429
	word32 s10_431
	word32 s4_425
	word32 s9_430
	word32 s11_432
	word32 t4_433
	word32 a5_421
	word32 a3_419
	word32 t1_418
	word32 a4_420
	word32 s3_424
	word32 a7_422
	word32 s2_423
	word32 a1_249
	word32 a2_252
	aos_cli_printf(ra, 0x230778C8<32>, out t1_418, out a1_249, out a2_252, out a3_419, out a4_420, out a5_421, out a7_422, out s2_423, out s3_424, out s4_425, out s5_426, out s6_427, out s7_428, out s8_429, out s9_430, out s10_431, out s11_432, out t4_433)
	word32 s4_101 = 0x23082CF8<32>
	word32 s5_102 = 0x23078000<32>
l2302FC1E:
	word32 s0_112 = Mem21[a1_249:word32]
	branch a1_249 == 0<32> l2302FC30
l2302FC22:
	s0_112 = Mem21[a2_252 + 4<i32>:word32]
	branch a2_252 != 0<32> l2302FC28
l2302FC26:
l2302FC28:
	word32 s7_442
	word32 t1_434
	word32 a7_438
	word32 a5_437
	word32 s2_439
	word32 s6_441
	word32 s3_440
	word32 a3_435
	word32 a4_436
	word32 s8_443
	word32 s9_444
	word32 s10_445
	word32 s11_446
	word32 t4_447
	aos_cli_printf(ra, s5_102 + -1800<i32>, out t1_434, out a1_249, out a2_252, out a3_435, out a4_436, out a5_437, out a7_438, out s2_439, out s3_440, out s4_101, out s5_102, out s6_441, out s7_442, out s8_443, out s9_444, out s10_445, out s11_446, out t4_447)
l2302FC30:
	branch s0_112 + 0xC<32> != s4_101 l2302FC1E
l2302FC36:
	word32 t1_448
	word32 a1_449
	word32 a2_450
	word32 a3_451
	word32 a4_452
	word32 a5_453
	word32 a7_454
	word32 s2_455
	word32 s3_456
	word32 s4_457
	word32 s5_458
	word32 s6_459
	word32 s7_460
	word32 s8_461
	word32 s9_462
	word32 s10_463
	word32 s11_464
	word32 t4_465
	aos_cli_printf(ra, 0x2307676C<32>, out t1_448, out a1_449, out a2_450, out a3_451, out a4_452, out a5_453, out a7_454, out s2_455, out s3_456, out s4_457, out s5_458, out s6_459, out s7_460, out s8_461, out s9_462, out s10_463, out s11_464, out t4_465)
	word32 t1_466
	word32 a1_467
	word32 a2_468
	word32 a4_469
	word32 a7_470
	word32 s2_471
	word32 s4_472
	word32 s5_473
	word32 s6_474
	word32 s7_475
	word32 s8_476
	word32 s9_477
	word32 s10_478
	word32 s11_479
	word32 t4_480
	word32 a5_150
	word32 a3_148
	word32 s3_155
	aos_cli_printf(ra, 0x23077904<32>, out t1_466, out a1_467, out a2_468, out a3_148, out a4_469, out a5_150, out a7_470, out s2_471, out s3_155, out s4_472, out s5_473, out s6_474, out s7_475, out s8_476, out s9_477, out s10_478, out s11_479, out t4_480)
	word32 s2_167 = 0x10<32>
	word32 s0_168 = 0<32>
	word32 s6_170 = 0x23078000<32>
l2302FC62:
	word32 a5_177 = a5_150 + 8<32>
	branch s0_168 >=u a5_177 l2302FC74
l2302FC6E:
	branch s2_167 <u a5_177 l2302FC88
l2302FC88:
	word32 a2_186
	word32 a4_481
	word32 a0_184 = cli_command_get(s0_168, 0<32>, a3_148, out a2_186, out a4_481, out a5_150)
	branch a0_184 <u 0x23082C38<32> l2302FC98
l2302FC94:
	branch a0_184 <u s3_155 l2302FCAC
l2302FC98:
	branch true l2302FCAC
l2302FC9C:
	branch a2_186 != 0<32> l2302FCA2
l2302FCA0:
l2302FCA2:
	word32 s2_214
	word32 t1_482
	word32 a1_483
	word32 a2_484
	word32 a4_485
	word32 a7_486
	word32 s4_487
	word32 s5_488
	word32 s7_489
	word32 s8_490
	word32 s9_491
	word32 s10_492
	word32 s11_493
	word32 t4_494
	aos_cli_printf(ra, s6_170 + -1800<i32>, out t1_482, out a1_483, out a2_484, out a3_148, out a4_485, out a5_150, out a7_486, out s2_214, out s3_155, out s4_487, out s5_488, out s6_170, out s7_489, out s8_490, out s9_491, out s10_492, out s11_493, out t4_494)
	s2_167 = s2_214 + 1<32>
l2302FCAC:
	s0_168 = s0_168 + 1<32>
l2302FC74:
	0<32> = dwArgA8
	return
help_cmd_exit:


word32 cli_getchar(word32 ra, word32 a0, word32 dwArg34, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_cli_input_direct
// MayUse:  a0:[0..31] ra:[0..31] Stack +0034:[0..31]
// LiveOut: a0 ra s0 s1 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s4 s8 t0 t1 t3 tp
// Preserved: sp
cli_getchar_entry:
l2302FCB0:
	word32 a0_39
	word32 a5_82
	word32 a4_81
	word32 a3_80
	word32 a2_79
	word32 a1_78
	word32 a0_77
	word32 t1_76
	word32 ra_20 = memset(ra, fp + -76<i32>, 0<32>, 60<i32>, out t1_76, out a0_77, out a1_78, out a2_79, out a3_80, out a4_81, out a5_82)
	word32 a0_29
	word32 s4_32
	word32 s8_33
	word32 a2_83
	word32 a4_84
	word32 a5_85
	word32 s0_30 = hal_uart_recv_II(fp + -76<i32>, a0, 1<32>, fp + -80<i32>, dwArg34, out a0_29, out a2_83, out a4_84, out a5_85, out s4_32, out s8_33)
	word32 dwLoc4C_57 = SEQ(nLoc4B, 0<8>)
	branch a0_29 != 0<32> l2302FCEA
l2302FCEA:
	a0_39 = 0<32>
l2302FCDA:
	0<32> = dwLoc0C
	a0_39 = CONVERT(a0_29 <u 0xFFFFFFFE<32>, bool, word32)
l2302FCE2:
	s0Out = s0_30
	s1Out = dwLoc4C_57
	a0Out = a0_39
	s4Out = s4_32
	s8Out = s8_33
	return ra_20
cli_getchar_exit:


word32 cli_main_input(word32 ra, word32 s0, word32 a0, word32 a5, word32 s6, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg1C, word32 dwArg28, word32 dwArg4C, word32 dwArg54, word32 dwArg74, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      console_cb_read
//      aos_cli_input_direct
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..7] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 mstatus ra s1 s10 s2 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s5 sp
cli_main_input_entry:
l2302FCEE:
	word32 s6_110
	word32 a0_1252
	word32 s9_113 = Mem8[0x4200E1D0<32>:int32]
	byte bLoc50_1465 = SLICE(s10, byte, 0)
	branch s9_113 == 0x38<32> l2302FDFC
l2302FDFC:
	a0_1252 = 0x23077750<32>
l2302FD1A:
	word32 s7_111 = a0
	word32 s1_103 = 0x4200E1D0<32>
	word32 s4_108 = 0<32>
	word32 s8_112 = 0x23076000<32>
	s6_110 = s6
l2302FD26:
	word32 s0_54
	branch s7_111 == 0<32> l2303024A
l2303024A:
	ra = cli_getchar(ra, fp + -80<i32>, s0, out s0_54, out s1_103, out a0, out s4_108, out s8_112)
	branch a0 == 1<32> l2302FD3E
l23030256:
l2302FD2A:
	s0_54 = dwArg74
	branch s4_108 >= a5 l2303022C
l2302FD30:
	s4_108 = s4_108 + 1<32>
	bLoc50_1465 = SLICE(CONVERT(Mem46[s7_111 + s4_108:byte], byte, word32), byte, 0)
l2302FD3E:
	word32 a4_72 = CONVERT(bLoc50_1465, byte, word32)
	branch a4_72 == 0xA<32> l2302FD4E
l2302FD48:
	branch a4_72 != 0xD<32> l2302FE0A
l2302FE0A:
	a5 = 0x4200E000<32>
	a0 = 0x1B<32>
	s2 = 0x4200E1D8<32>
	branch a4_72 != 0x1B<32> l2302FE32
l2302FE32:
	branch CONVERT(Mem71[0x4200E1D8<32>:int8], int8, int32) == 0<32> l230300B0
l230300B0:
	Mem84[Mem71[s9_113 + 52<i32>:int32] + s0_54:byte] = SLICE(a4_72, byte, 0)
	word32 a3_413 = 8<32>
	branch a4_72 == 8<32> l230300C8
l230300C0:
	a3_413 = 127<i32>
	branch a4_72 != 127<i32> l230300F0
l230300F0:
	branch a4_72 != 9<32> l230301EA
l230301EA:
	s1_103 = Mem84[9<32>:word32]
	word32 a3_89 = Mem84[0xD<32>:word32]
	branch a3_89 != 0<32> l230301FE
l230301F0:
	word32 a7_3104
	word32 s5_3106
	word32 s11_3107
	word32 t4_3108
	word32 s3_3105
	word32 a3_3102
	word32 a4_3103
	word32 a2_3101
	word32 a1_3100
	ra = printf(ra, 0x230770A8<32>, a3_89, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0, out a1_3100, out a2_3101, out a3_3102, out a4_3103, out a5, out a7_3104, out s2, out s3_3105, out s4_108, out s5_3106, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_3107, out t4_3108)
l230301FE:
	word32 a4_118 = Mem84[s9_113 + 52<i32>:int32]
	Mem121[s9_113 + 52<i32>:word32] = a4_118 + 1<32>
	branch a4_118 <=u 0xFFFFFF02<32> l2302FD26
l23030210:
	word32 a4_3113
	word32 s8_3122
	word32 s10_3124
	word32 s11_3125
	word32 t4_3126
	word32 s9_3123
	word32 s6_3120
	word32 s7_3121
	word32 a7_3115
	word32 s2_3116
	word32 s3_3117
	word32 s4_3118
	word32 s5_3119
	word32 a5_3114
	word32 a2_3111
	word32 a3_3112
	word32 t1_3109
	word32 a1_3110
	aos_cli_printf(ra, 0x230777B8<32>, out t1_3109, out a1_3110, out a2_3111, out a3_3112, out a4_3113, out a5_3114, out a7_3115, out s2_3116, out s3_3117, out s4_3118, out s5_3119, out s6_3120, out s7_3121, out s8_3122, out s9_3123, out s10_3124, out s11_3125, out t4_3126)
	word32 s9_165
	word32 t4_3140
	word32 a4_3131
	word32 s8_3138
	word32 s11_3139
	word32 a7_3133
	word32 s3_3134
	word32 s4_3135
	word32 s5_3136
	word32 s7_3137
	word32 a5_3132
	word32 a2_3129
	word32 a3_3130
	word32 t1_3127
	word32 a1_3128
	aos_cli_printf(ra, 0x230777AC<32>, out t1_3127, out a1_3128, out a2_3129, out a3_3130, out a4_3131, out a5_3132, out a7_3133, out s2, out s3_3134, out s4_3135, out s5_3136, out s6_110, out s7_3137, out s8_3138, out s9_165, out s10, out s11_3139, out t4_3140)
	Mem171[s9_165 + 52<i32>:word32] = 0<32>
l230300F6:
	Mem178[Mem84[s9_113 + 52<i32>:int32] + s0_54:byte] = 0<8>
	word32 s2_3034
	word32 s11_3040
	word32 t4_3041
	word32 a7_3033
	word32 a1_3030
	word32 t1_3029
	word32 a2_3031
	word32 a5_3032
	word32 s5_3036
	word32 s4_3035
	word32 s6_3037
	word32 s7_3038
	word32 s10_3039
	word32 s8_194
	word32 a3_1331
	word32 a4_1335
	word32 s9_1340
	word32 s3_1352
	aos_cli_printf(ra, s8_112 + 1900<i32>, out t1_3029, out a1_3030, out a2_3031, out a3_1331, out a4_1335, out a5_3032, out a7_3033, out s2_3034, out s3_1352, out s4_3035, out s5_3036, out s6_3037, out s7_3038, out s8_194, out s9_1340, out s10_3039, out s11_3040, out t4_3041)
	word32 s2_1344 = 0<32>
	word32 s6_1337 = 0<32>
	word32 s5_203 = 0<32>
	word32 s10_1346 = 1<32>
	word32 s11_1348 = 2<32>
l23030114:
	s1_103 = Mem207[a3_1331:word32]
	word32 a4_211 = a4_1335 + 8<32>
	branch s5_203 >=u a4_211 l23030124
l2303011E:
	a3_1331 = Mem207[a4_211 + 48<i32>:word32]
	branch s6_1337 <u a4_211 l2303018C
l2303018C:
	word32 a5_3082
	word32 a2_3081
	cli_command_get(s5_203, 0<32>, a3_1331, out a2_3081, out a4_1335, out a5_3082)
	branch true l230301C4
l2303019A:
	word32 a5_3083
	branch strncmp(s0_54, 0<32>, Mem223[s9_1340 + 52<i32>:int32], out a3_1331, out a4_1335, out a5_3083) != 0<32> l230301C2
l230301A6:
	s2_1344 = s2_1344 + 1<32>
	a4_1335 = Mem223[dwArg54:word32]
	branch s2_1344 == s10_1346 l230301D8
l230301D8:
	s3_1352 = dwArg54
l230301B0:
	branch s2_1344 != s11_1348 l230301C8
l230301C8:
	word32 a1_3093
	word32 s7_3098
	word32 t4_3099
	word32 a2_3094
	word32 a5_3095
	word32 s4_3097
	word32 a7_3096
	word32 t1_3092
	aos_cli_printf(ra, 0x230777A8<32>, out t1_3092, out a1_3093, out a2_3094, out a3_1331, out a4_1335, out a5_3095, out a7_3096, out s2_1344, out s3_1352, out s4_3097, out s5_203, out s6_1337, out s7_3098, out s8_194, out s9_1340, out s10_1346, out s11_1348, out t4_3099)
l230301B4:
	word32 a2_3086
	word32 t4_3091
	word32 s7_3090
	word32 a7_3088
	word32 s4_3089
	word32 a5_3087
	word32 t1_3084
	word32 a1_3085
	aos_cli_printf(ra, 0x230777A0<32>, out t1_3084, out a1_3085, out a2_3086, out a3_1331, out a4_1335, out a5_3087, out a7_3088, out s2_1344, out s3_1352, out s4_3089, out s5_203, out s6_1337, out s7_3090, out s8_194, out s9_1340, out s10_1346, out s11_1348, out t4_3091)
l230301C2:
	s6_1337 = s6_1337 + 1<32>
l230301C4:
	s5_203 = s5_203 + 1<32>
l23030124:
	branch s2_1344 != 1<32> l230301DC
l230301DC:
	branch s2_1344 <= 1<32> l23030174
l230301E0:
	word32 a7_3069
	word32 t4_3080
	word32 s3_3071
	word32 s8_3076
	word32 s9_3077
	word32 s11_3079
	word32 s10_3078
	word32 s4_3072
	word32 s5_3073
	word32 s7_3075
	word32 s6_3074
	word32 s2_3070
	word32 a5_3068
	word32 t1_3063
	word32 a1_3064
	word32 a2_3065
	word32 a3_3066
	word32 a4_3067
	aos_cli_printf(ra, s8_194 + 1900<i32>, out t1_3063, out a1_3064, out a2_3065, out a3_3066, out a4_3067, out a5_3068, out a7_3069, out s2_3070, out s3_3071, out s4_3072, out s5_3073, out s6_3074, out s7_3075, out s8_3076, out s9_3077, out s10_3078, out s11_3079, out t4_3080)
l2303012A:
	branch s3_1352 == 0<32> l23030174
l2303012E:
	word32 a2_3043
	word32 a4_3045
	word32 a5_3046
	word32 a3_3044
	word32 a1_3042
	word32 a0_334 = strlen(s3_1352, out a1_3042, out a2_3043, out a3_3044, out a4_3045, out a5_3046)
	branch a0_334 >u 255<i32> l23030174
l2303013C:
	word32 a4_343 = Mem207[s9_1340 + 52<i32>:int32]
	word32 s2_344 = a0_334 - a4_343
	word32 a5_3050
	word32 a6_3051
	word32 a7_3052
	word32 a2_3047
	word32 a4_3049
	word32 a3_3048
	memcpy(s0_54 + a4_343, s3_1352 + a4_343, s2_344, out a2_3047, out a3_3048, out a4_3049, out a5_3050, out a6_3051, out a7_3052)
	word32 s2_363 = s2_344 + Mem207[s9_1340 + 52<i32>:int32]
	Mem365[s9_1340 + 52<i32>:word32] = s2_363 + 1<i32>
	Mem368[s2_363 + s0_54:byte] = 0x20<8>
	Mem371[Mem368[s9_1340 + 52<i32>:int32] + s0_54:byte] = 0<8>
l23030174:
	word32 a3_3056
	word32 s3_3059
	word32 s5_3060
	word32 s11_3061
	word32 t4_3062
	word32 a4_3057
	word32 a7_3058
	word32 a1_3054
	word32 a2_3055
	word32 t1_3053
	aos_cli_printf(ra, 0x230777B0<32>, out t1_3053, out a1_3054, out a2_3055, out a3_3056, out a4_3057, out a5, out a7_3058, out s2, out s3_3059, out s4_108, out s5_3060, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_3061, out t4_3062)
	a0 = a0_379
l230300C8:
	word32 a4_403 = Mem84[s9_113 + 52<i32>:int32]
	branch a4_403 == 0<32> l2302FD26
l230300D0:
	Mem405[s9_113 + 52<i32>:word32] = a4_403 + 0xFFFFFFFF<32>
	s1_103 = Mem405[a4_403 + 0xFFFFFFFF<32>:word32]
	branch Mem405[a4_403 + 3<32>:word32] != 0<32> l2302FD26
l230300DE:
	word32 a2_3021
	word32 a1_3020
	word32 a4_3023
	word32 a3_3022
	word32 s11_3027
	word32 t4_3028
	word32 a7_3024
	word32 s3_3025
	word32 s5_3026
	ra = printf(ra, 0x23077798<32>, a3_413, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0, out a1_3020, out a2_3021, out a3_3022, out a4_3023, out a5, out a7_3024, out s2, out s3_3025, out s4_108, out s5_3026, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_3027, out t4_3028)
l2302FE3A:
	word32 a0_632
	word32 a3_628
	word32 a1_439 = CONVERT(Mem71[0x4200DC64<32>:int8], int8, int32)
	branch a1_439 >= 0<32> l2302FE98
l2302FE98:
	branch CONVERT(Mem71[0x4200DC65<32>:int8], int8, int32) >= 0<32> l2302FED4
l2302FEA8:
	word32 a2_444 = CONVERT(SLICE(a4_72, byte, 0), byte, int32)
	Mem445[0x4200DC65<32>:byte] = SLICE(a2_444, byte, 0)
	branch a2_444 != 116<i32> l2302FED4
l2302FEBA:
	Mem449[0x42012AB8<32>:byte] = 0x1B<8>
	Mem450[0x42012AB9<32>:byte] = SLICE(a1_439, byte, 0)
	Mem453[0x4200E1D9<32>:byte] = 2<8>
l2302FED4:
	word32 a2_456 = CONVERT(Mem455[0x4200DC65<32>:int8], int8, int32)
	a0 = a2_456 & 255<i32>
	branch ((a2_456 & 255<i32>) + -65<i32> & 255<i32>) <=u 1<32> l2302FF54
l2302FF54:
	word32 a3_464
	word32 a4_492
	branch a2_456 != 65<i32> l2302FFF4
l2302FFF4:
	a3_464 = Mem455[a2_456 + 316<i32>:int32]
	word32 a4_465 = a3_464
l23030000:
	branch CONVERT(Mem455[a2_456 + a4_465 + 324<i32>:byte], byte, word32) != 0<32> l23030044
l23030044:
	a4_465 = a4_465 + 1<32> | 256<i32>
l2303000A:
	branch a3_464 == a4_465 l23030022
l2303000E:
l23030012:
	word32 a4_477 = a4_465 + 1<32>
	a4_465 = a4_477 | 256<i32>
	branch CONVERT(Mem455[a2_456 + (a4_477 | 256<i32>) + 324<i32>:byte], byte, word32) == 0<32> l23030012
l23030022:
	Mem486[a2_456 + 316<i32>:word32] = a4_465
	a4_492 = s0_54
l2303002C:
	word32 a1_497 = CONVERT(Mem496[a2_456 + a3_464 + 324<i32>:byte], byte, word32)
	branch a1_497 == 0<32> l2302FF90
l23030036:
	a4_492 = a4_492 + 1<32>
	Mem501[a4_492 + 4095<i32>:byte] = SLICE(a1_497, byte, 0)
	a3_464 = a3_464 + 1<32> | 256<i32>
l2302FF5C:
	a3_464 = Mem455[(a2_456 & 255<i32>) + 316<i32>:int32]
	word32 a4_507 = a3_464 + 255<i32>
l2302FF6A:
	word32 a4_510 = a4_507 | 256<i32>
	branch CONVERT(Mem455[(a2_456 & 255<i32>) + a4_510 + 324<i32>:byte], byte, word32) != 0<32> l2302FFC4
l2302FFC4:
	branch a3_464 == a4_510 l2302FF7C
l2302FFC8:
l2302FFCC:
	word32 a4_518 = a4_510 + 255<i32>
	a4_510 = a4_518 | 256<i32>
	branch CONVERT(Mem455[(a2_456 & 255<i32>) + (a4_518 | 256<i32>) + 324<i32>:byte], byte, word32) != 0<32> l2302FFCC
l2302FFDE:
	a4_510 = (a4_518 | 256<i32>) + 1<32> | 256<i32>
l2302FF78:
	branch a3_464 != a4_510 l2302FFBE
l2302FFBE:
	a4_507 = a4_510 + 255<i32>
l2302FF7C:
	Mem530[(a2_456 & 255<i32>) + 316<i32>:word32] = a4_510
	a4_492 = s0_54
l2302FF86:
	word32 a2_540 = CONVERT(Mem539[(a2_456 & 255<i32>) + a3_464 + 324<i32>:byte], byte, word32)
	branch a2_540 != 0<32> l2302FFE6
l2302FFE6:
	a4_492 = a4_492 + 1<32>
	Mem544[a4_492 + 4095<i32>:byte] = SLICE(a2_540, byte, 0)
	a3_464 = a3_464 + 1<32> | 256<i32>
l2302FF90:
	Mem549[a4_492:byte] = 0<8>
	word32 a3_3008
	word32 a1_3006
	word32 a0_3005
	word32 a2_3007
	word32 a5_3010
	word32 a4_3009
	word32 a7_3011
	word32 s3_3012
	word32 s5_3013
	word32 s11_3014
	word32 t4_3015
	ra = printf(ra, 0x2307776C<32>, a3_464, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0_3005, out a1_3006, out a2_3007, out a3_3008, out a4_3009, out a5_3010, out a7_3011, out s2, out s3_3012, out s4_108, out s5_3013, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_3014, out t4_3015)
	word32 a1_3016
	word32 a2_3017
	word32 a3_3018
	word32 a4_3019
	a0 = strlen(s0_54, out a1_3016, out a2_3017, out a3_3018, out a4_3019, out a5)
	Mem606[s9_113 + 52<i32>:word32] = a0
	Mem607[0x42013AB8<32>:byte] = 0<8>
	Mem609[0x4200E1D9<32>:byte] = 0<8>
l2302FEEA:
	word32 s5_613 = 0x42012AB8<32>
	word32 s3_614 = 0x4200E1D9<32>
	branch a2_456 == 116<i32> l2303004C
l2303004C:
	word32 a3_615 = CONVERT(Mem455[0x4200E1D9<32>:byte], byte, word32)
	branch a3_615 <=u 63<i32> l23030072
l23030072:
	Mem621[a3_615 + 0x42012AB8<32>:byte] = SLICE(a4_72, byte, 0)
	word32 a2_619 = a3_615 + 1<i32> & 255<i32>
	Mem622[0x4200E1D9<32>:byte] = SLICE(a2_619, byte, 0)
	branch a4_72 != 109<i32> l2302FD26
l2303008E:
	s1_103 = Mem622[a4_72:word32]
	Mem626[a2_619 + 0x42012AB8<32>:byte] = 0<8>
	word32 a4_627 = Mem626[a4_72 + 4<i32>:word32]
	Mem629[0x4200E1D9<32>:byte] = SLICE(a3_615 + 2<32>, byte, 0)
	a3_628 = a3_615 + 2<32>
	branch a4_627 != 0<32> l2302FE92
l230300A2:
	a0_632 = 0x23077770<32>
l23030058:
	Mem635[0x42012AB8<32>:byte] = 0<8>
	Mem636[0x4200E1D9<32>:byte] = 0<8>
	Mem638[0x4200E1D8<32>:byte] = 0<8>
	word32 a3_2998
	word32 a4_2999
	word32 s5_3002
	word32 s3_3001
	word32 a2_2997
	word32 a7_3000
	word32 s11_3003
	word32 t4_3004
	word32 a1_2996
	ra = printf(ra, 0x23077774<32>, a3_615, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0, out a1_2996, out a2_2997, out a3_2998, out a4_2999, out a5, out a7_3000, out s2, out s3_3001, out s4_108, out s5_3002, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_3003, out t4_3004)
l2302FF02:
	Mem665[Mem455[s9_113 + 52<i32>:int32] + s0_54:byte] = 0x1B<8>
	word32 a4_666 = Mem665[s9_113 + 52<i32>:int32]
	Mem668[s9_113 + 52<i32>:word32] = a4_666 + 1<32>
	Mem671[a4_666 + 1<32> + s0_54:byte] = SLICE(a1_439, byte, 0)
	word32 a4_672 = Mem671[s9_113 + 52<i32>:int32]
	Mem674[s9_113 + 52<i32>:word32] = a4_672 + 1<32>
	Mem676[a4_672 + 1<32> + s0_54:byte] = SLICE(a2_456 & 255<i32>, byte, 0)
	word32 a4_677 = Mem676[s9_113 + 52<i32>:int32]
	Mem679[s9_113 + 52<i32>:word32] = a4_677 + 1<32>
	s1_103 = Mem679[a4_677 + 1<32>:word32]
	branch Mem679[a4_677 + 5<32>:word32] != 0<32> l2302FF4A
l2302FF3E:
	word32 a7_2993
	word32 a1_2989
	word32 a2_2990
	word32 a3_2991
	word32 a4_2992
	word32 t4_2995
	word32 s11_2994
	ra = printf(ra, 0x23077764<32>, 0x1B<32>, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0, out a1_2989, out a2_2990, out a3_2991, out a4_2992, out a5, out a7_2993, out s2, out s3_614, out s4_108, out s5_613, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_2994, out t4_2995)
l2302FF4A:
	Mem707[s5_613:byte] = 0<8>
	Mem709[s3_614:byte] = 0<8>
l2302FE4A:
	word32 a1_711 = CONVERT(SLICE(a4_72, byte, 0), byte, int32)
	Mem712[0x4200DC64<32>:byte] = SLICE(a1_711, byte, 0)
	branch a1_711 == 91<i32> l2302FD26
l2302FE5C:
	Mem716[Mem712[s9_113 + 52<i32>:int32] + s0_54:byte] = 0x1B<8>
	word32 a3_717 = Mem716[s9_113 + 52<i32>:int32]
	Mem719[s9_113 + 52<i32>:word32] = a3_717 + 1<32>
	a3_628 = a3_717 + 1<32> + s0_54
	Mem721[a3_628:byte] = SLICE(a4_72, byte, 0)
	word32 a4_722 = Mem721[s9_113 + 52<i32>:int32]
	Mem724[s9_113 + 52<i32>:word32] = a4_722 + 1<32>
	s1_103 = Mem724[a4_722 + 1<32>:word32]
	branch Mem724[a4_722 + 5<32>:word32] != 0<32> l2302FE92
l2302FE86:
	a0_632 = 0x23077760<32>
l2302FE8E:
	word32 s5_2986
	word32 s3_2985
	word32 a2_2981
	word32 a4_2983
	word32 a7_2984
	word32 s11_2987
	word32 t4_2988
	word32 a1_2980
	word32 a3_2982
	ra = printf(ra, a0_632, a3_628, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0, out a1_2980, out a2_2981, out a3_2982, out a4_2983, out a5, out a7_2984, out s2, out s3_2985, out s4_108, out s5_2986, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_2987, out t4_2988)
l2302FE92:
	Mem758[s2:byte] = 0<8>
l2302FE18:
	Mem761[0x4200E1D8<32>:byte] = 1<8>
	Mem763[0x4200EC64<32>:byte] = 0xFF<8>
	Mem765[0x4200EC65<32>:byte] = 0xFF<8>
l2302FD4E:
	word32 s2_779 = Mem71[s1_103:int32]
	Mem782[s0_54 + Mem71[s9_113 + 52<i32>:int32]:byte] = 0<8>
	Mem784[s9_113 + 52<i32>:word32] = 0<32>
	word32 a5_2870
	word32 a3_2868
	word32 a2_2867
	word32 a1_2866
	word32 a4_2869
	branch strlen(s2_779 + 56<i32>, out a1_2866, out a2_2867, out a3_2868, out a4_2869, out a5_2870) != 0<32> l23030258
l23030258:
	word32 s6_815
	word32 a2_826
	word32 a1_827
	word32 s3_792 = Mem784[s1_103:int32]
	word32 a5_798
	word32 a3_2973
	word32 a1_2971
	word32 a4_2974
	word32 a2_2972
	word32 a0_795 = strlen(s3_792 + 56<i32>, out a1_2971, out a2_2972, out a3_2973, out a4_2974, out a5_798)
	word32 s0_804 = Mem784[a5_798 + 320<i32>:int32]
	Mem807[a5_798 + 316<i32>:word32] = s0_804
	word32 s0_808 = s0_804 + (a0_795 + 1<i32>)
	word32 s4_806 = 256<i32> - s0_804
	word32 a0_809 = s0_804 + 324<i32> + a5_798
	word32 s0_810 = s0_808 + 0xFFFFFFFF<32>
	branch s4_806 < a0_795 + 1<i32> l230302C8
l230302C8:
	s0_810 = s0_808 + 0xFFFFFFFF<32> | 256<i32>
	s6_815 = CONVERT(Mem807[a5_798 + s0_810 + 324<i32>:byte], byte, word32)
	word32 a5_2979
	word32 a4_2978
	word32 a3_2977
	strncpy(a0_809, s3_792 + 56<i32>, s4_806, out a3_2977, out a4_2978, out a5_2979)
	a2_826 = a0_795 + 1<i32> - s4_806
	a1_827 = s3_792 + 56<i32> + s4_806
	a0_809 = a0_809 + 324<i32>
l2303028A:
	s6_815 = CONVERT(Mem807[a5_798 + (s0_808 + 0xFFFFFFFF<32>) + 324<i32>:byte], byte, word32)
	a2_826 = a0_795 + 1<i32>
	a1_827 = s3_792 + 56<i32>
l23030294:
	word32 a4_836
	word32 a5_2976
	word32 a3_2975
	strncpy(a0_809, a1_827, a2_826, out a3_2975, out a4_836, out a5_2976)
	word32 s0_846 = s0_810 + 1<32>
	Mem852[a4_836 + 320<i32>:word32] = s0_846 | 256<i32>
	word32 s0_848 = s0_846 | 256<i32>
	branch s6_815 == 0<32> l2302FD6E
l230302B0:
	word32 a5_856 = a4_836 + s0_848
	branch CONVERT(Mem857[a5_856 + 324<i32>:byte], byte, word32) == 0<32> l2302FD6E
l230302BC:
	Mem860[a5_856 + 324<i32>:byte] = 0<8>
	s0_848 = s0_848 + 1<32> | 256<i32>
l2302FD6E:
	word32 a2_2881
	word32 a1_2886
	word32 a1_2873
	word32 t1_2871
	word32 a0_2872
	word32 a0_2879
	word32 a2_2874
	word32 a3_2882
	word32 t1_2878
	word32 a5_2877
	word32 a4_2876
	word32 a1_2880
	word32 a3_2875
	word32 a5_2890
	word32 a2_2887
	word32 a5_2884
	word32 t1_2885
	word32 a4_2889
	word32 a3_2888
	word32 a4_2883
	word32 a0_1013
	ra = memset(memset(memset(ra, 0x420129B8<32>, 0<32>, 256<i32>, out t1_2871, out a0_2872, out a1_2873, out a2_2874, out a3_2875, out a4_2876, out a5_2877), fp + -80<i32>, 0<32>, 0x10<32>, out t1_2878, out a0_2879, out a1_2880, out a2_2881, out a3_2882, out a4_2883, out a5_2884), fp + -84<i32>, 0<32>, 4<32>, out t1_2885, out a0_1013, out a1_2886, out a2_2887, out a3_2888, out a4_2889, out a5_2890)
	word32 a5_1028 = 0<32>
	word32 s11_1048 = fp + -80<i32>
	word32 s8_1044 = 0<32>
	word32 s6_1123 = 32<i32>
l2302FDBA:
	word32 a7_1002
	word32 a3_943
	word32 s0_924 = s2_779 + 56<i32> + a5_1028
	word32 a3_926 = CONVERT(Mem925[s0_924:byte], byte, word32)
	branch a3_926 == 32<i32> l2303046E
l2303046E:
	branch a5_1028 == 0<32> l23030488
l23030470:
	a7_1002 = s2_779 + 56<i32> + (a5_1028 + -1<i32>)
	a3_926 = CONVERT(Mem925[a7_1002:byte], byte, word32)
	branch a3_926 != 92<i32> l23030488
l23030480:
	word32 a3_933 = CONVERT(bLoc54, byte, word32)
	a3_926 = a3_933 & 1<32>
	branch (a3_933 & 1<32>) != 0<32> l23030400
l23030488:
	branch (a3_926 & 3<32>) != 1<32> l23030358
l23030490:
	a3_943 = CONVERT(bLoc54, byte, word32) & 0xFFFFFFFE<32>
l2302FDC6:
	branch a3_926 >u 32<i32> l230302EA
l230302EA:
	branch a3_926 == 34<i32> l230303E6
l230303E6:
	branch a5_1028 == 0<32> l2303041E
l230303E8:
	a7_1002 = s2_779 + 56<i32> + (a5_1028 + -1<i32>)
	a3_926 = CONVERT(Mem925[a7_1002:byte], byte, word32)
	branch a3_926 != 92<i32> l2303041E
l230303F8:
	word32 a3_948 = CONVERT(bLoc54, byte, word32)
	a3_926 = a3_948 & 1<32>
	branch (a3_948 & 1<32>) == 0<32> l2303041E
l2303041E:
	word32 a3_954 = a3_926 & 3<32>
	branch a3_954 == 1<32> l23030358
l23030426:
	branch a3_954 == 2<32> l2303049E
l2303042A:
	branch a3_954 != 0<32> l2303045A
l2303045A:
	branch a3_954 != 3<32> l23030358
l2303045E:
	a3_943 = CONVERT(bLoc54, byte, word32) & 0xFFFFFFFC<32>
l23030464:
	Mem968[s0_924:byte] = 0<8>
	bLoc54 = SLICE(a3_943, byte, 0)
l2303042C:
	word32 a2_972 = Mem925[s11_1048:int32]
	Mem977[s11_1048:word32] = a2_972 + 1<i32>
	Mem990[a5_1028 + 1<i32> + (s2_779 + 56<i32>):word32] = ((s8_1044 << 4<u32>) + a2_972 << 2<i32>) + 0x420129B8<32>
	bLoc54 = SLICE(CONVERT(bLoc54, byte, word32) & 0xFFFFFFFC<32> | 3<i32>, byte, 0)
l230302F2:
	branch a3_926 != 59<i32> l2302FDCE
l230302F6:
	word32 a3_992 = CONVERT(bLoc54, byte, word32)
	branch a5_1028 == 0<32> l23030312
l230302FC:
	a7_1002 = s2_779 + 56<i32> + (a5_1028 + -1<i32>)
	branch CONVERT(Mem925[a7_1002:byte], byte, word32) != 92<i32> l23030312
l2303030C:
	branch (a3_992 & 1<i32>) != 0<32> l23030400
l23030400:
	word32 a6_1020
	word32 a3_2967
	word32 a3_2963
	word32 a2_2962
	word32 a1_2961
	word32 a4_2964
	word32 a4_2968
	word32 a5_2969
	word32 a2_2966
	word32 a5_2965
	word32 a7_2970
	memcpy(a7_1002, s6, strlen(s0_924, out a1_2961, out a2_2962, out a3_2963, out a4_2964, out a5_2965) + 1<i32>, out a2_2966, out a3_2967, out a4_2968, out a5_2969, out a6_1020, out a7_2970)
	a0_1013 = a7_1002
	a5_1028 = a6_1020
l23030312:
	branch (a3_992 & 2<32>) != 0<32> l2303049E
l23030318:
	branch (a3_992 & 2<32> & 3<32>) != 1<32> l23030358
l23030320:
	Mem1040[s0_924:byte] = 0<8>
	bLoc54 = SLICE(CONVERT(bLoc54, byte, word32) & 0xFFFFFFFE<32>, byte, 0)
	branch Mem1040[s11_1048:int32] == 0<32> l23030358
l23030334:
	s8_1044 = s8_1044 + 1<32>
	branch s8_1044 > 3<32> l23030358
l2303033A:
	s11_1048 = (s8_1044 << 2<u32>) + (fp + -80<i32>)
l2302FDCA:
	branch a3_926 == 0<32> l23030344
l23030344:
	word32 a3_1049 = CONVERT(bLoc54, byte, word32)
	branch (a3_1049 & 2<i32>) != 0<32> l2303049E
l23030350:
	bLoc54 = SLICE(a3_1049 | 4<i32>, byte, 0)
l2302FDCE:
	word32 a3_1055 = CONVERT(bLoc54, byte, word32)
	branch (a3_1055 & 1<i32>) != 0<32> l23030358
l2302FDDA:
	word32 a2_1058 = Mem925[s11_1048:int32]
	Mem1062[s11_1048:word32] = a2_1058 + 1<i32>
	Mem1070[s0_924:word32] = ((s8_1044 << 4<u32>) + a2_1058 << 2<i32>) + 0x420129B8<32>
	bLoc54 = SLICE(a3_1055 | 1<i32>, byte, 0)
l23030358:
	word32 a3_1073 = CONVERT(bLoc54, byte, word32)
	branch (a3_1073 & 4<i32>) != 0<32> l2303037A
l23030362:
	a5_1028 = a5_1028 + 1<32>
	branch a5_1028 > 255<i32> l2303037A
l2303036C:
	branch s8_1044 > 3<32> l2303037A
l23030370:
	branch Mem1072[s11_1048:int32] <= 0xF<32> l2302FDBA
l2303037A:
	word32 a3_1098 = a3_1073 & 2<32>
	branch (a3_1073 & 2<32>) != 0<32> l2303049E
l23030380:
	word32 s3_1111 = 0<32>
l2303038C:
	word32 s2_1137
	word32 s3_1138
	word32 s4_1139
	word32 s5_1140
	word32 s8_1142
	word32 s0_2891
	ra = proc_onecmd(ra, a0_1013, a3_1098, s3_1111, s6_1123, mstatus, 0<32>, 0<32>, dwLoc30, dwLoc2C, dwLoc08, dwArg1C, dwArg98, dwArgB8, dwArgD8, out s0_2891, out a0_1013, out a3_1098, out s2_1137, out s3_1138, out s4_1139, out s5_1140, out s6_1123, out s8_1142, out mstatus)
	s3_1111 = s3_1138 | a0_1013
	branch s8_1142 < s4_1139 l230303A8
l2303039E:
	branch s4_1139 != s5_1140 l2303038C
l230303A8:
	branch s3_1111 != 1<32> l23030498
l23030498:
	branch s3_1111 != 2<32> l230303C0
l2303049E:
	word32 s2_2950
	word32 s4_2952
	word32 a5_2948
	word32 a4_2947
	word32 s5_2953
	word32 s6_2954
	word32 a7_2949
	word32 a2_2945
	word32 t1_2943
	word32 s11_2959
	word32 a3_2946
	word32 s3_2951
	word32 s9_2957
	word32 a1_2944
	word32 s8_2956
	word32 s7_2955
	word32 s10_2958
	word32 t4_2960
	aos_cli_printf(ra, 0x230777F4<32>, out t1_2943, out a1_2944, out a2_2945, out a3_2946, out a4_2947, out a5_2948, out a7_2949, out s2_2950, out s3_2951, out s4_2952, out s5_2953, out s6_2954, out s7_2955, out s8_2956, out s9_2957, out s10_2958, out s11_2959, out t4_2960)
l230303AE:
	branch s2_1137 == 0<32> l230303C0
l230303B2:
	word32 t1_2892
	word32 a1_2893
	word32 s10_2907
	word32 s9_2906
	word32 s5_2902
	word32 s6_2903
	word32 a7_2898
	word32 s7_2904
	word32 s3_2900
	word32 a5_2897
	word32 s2_2899
	word32 s8_2905
	word32 a2_2894
	word32 a3_2895
	word32 a4_2896
	word32 s4_2901
	word32 s11_2908
	word32 t4_2909
	aos_cli_printf(ra, 0x230777D8<32>, out t1_2892, out a1_2893, out a2_2894, out a3_2895, out a4_2896, out a5_2897, out a7_2898, out s2_2899, out s3_2900, out s4_2901, out s5_2902, out s6_2903, out s7_2904, out s8_2905, out s9_2906, out s10_2907, out s11_2908, out t4_2909)
l230303C0:
	word32 s5_2920
	word32 s7_2922
	word32 s6_2921
	word32 a5_2915
	word32 t1_2910
	word32 a1_2911
	word32 a3_2913
	word32 s2_2917
	word32 a7_2916
	word32 s3_2918
	word32 t4_2927
	word32 a4_2914
	word32 s4_2919
	word32 s10_2925
	word32 a2_2912
	word32 s9_2924
	word32 s8_2923
	word32 s11_2926
	aos_cli_printf(ra, 0x2307676C<32>, out t1_2910, out a1_2911, out a2_2912, out a3_2913, out a4_2914, out a5_2915, out a7_2916, out s2_2917, out s3_2918, out s4_2919, out s5_2920, out s6_2921, out s7_2922, out s8_2923, out s9_2924, out s10_2925, out s11_2926, out t4_2927)
	Mem1248[0x42013AB8<32>:byte] = 0<8>
	Mem1251[0x4200E1D9<32>:byte] = 0<8>
	a0_1252 = 0x230777AC<32>
l2302FE04:
	word32 s7_2938
	word32 t1_2928
	word32 a3_2931
	word32 a2_2930
	word32 a1_2929
	word32 a4_2932
	word32 a7_2934
	word32 s5_2937
	word32 s3_2935
	word32 s4_2936
	word32 a5_2933
	word32 t4_2942
	word32 s11_2941
	word32 s9_2940
	word32 s8_2939
	aos_cli_printf(ra, a0_1252, out t1_2928, out a1_2929, out a2_2930, out a3_2931, out a4_2932, out a5_2933, out a7_2934, out s2, out s3_2935, out s4_2936, out s5_2937, out s6_110, out s7_2938, out s8_2939, out s9_2940, out s10, out s11_2941, out t4_2942)
l2303022C:
	s1Out = dwLoc64
	a0Out = a0
	s2Out = s2
	s6Out = s6_110
	s10Out = s10
	mstatusOut = mstatus
	return dwLoc24
cli_main_input_exit:


