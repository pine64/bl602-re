word32 ke_malloc(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg38, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ke_msg_alloc
//      ke_timer_set
//      GetTxEAPOLBuffer
//      ipc_emb_msg_evt
//      apm_start_req_handler
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a2 a5 s1 s2
// Trashed: a0 a2 a5 s1 s2 tp
// Preserved: s0 sp
ke_malloc_entry:
l2305030E:
	word32 s1_8 = a0 + 3<32> & -4<i32>
	branch s1_8 >u 0xFFFFFFFD<32> l23050340
l23050340:
	word32 a5_23 = Mem14[0x4201EEF8<32>:int32]
	__csrrc(mstatus, 8<32>)
	word32 s0_25 = 0<32>
l23050350:
	branch a5_23 != 0<32> l2305038C
l2305038C:
	word32 a5_30 = Mem14[a4 + 4<i32>:word32]
	branch a4 <u s1_8 + 0xC<32> l2305039A
l23050392:
	branch s0_25 == 0<32> l2305039E
l23050394:
	s0_25 = Mem14[a3 + 4<i32>:word32]
	branch a4 <u a3 l2305039E
l2305039E:
	s0_25 = a5_30
l2305039A:
	a5_23 = Mem14[a5_30:word32]
l23050352:
	branch s0_25 != 0<32> l2305036C
l2305036C:
	word32 s0_49 = Mem14[a0 + 7<32>:word32]
	word32 a0_53 = a0 + 3<32> - (s1_8 + 4<i32>)
	Mem54[a0_53 + 4<i32>:word32] = s0_49
	word32 a0_55 = a0_53 + s0_49
	Mem56[a0_55:word32] = s1_8 + 4<i32>
	__csrrs(mstatus, 8<32>)
	0<32> = dwArg38
	a0Out = a0_55 + 4<32>
	a2Out = dwArg10
	a5Out = a5_23
	s2Out = s1_8 + 4<i32>
	return s1_8 + 0xC<32>
ke_malloc_exit:
l23050354:
	assert_err()
l23050328:
	assert_err()


word32 ke_free(word32 a0, word32 mstatus, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_bcn_set
//      ke_msg_send
//      ke_msg_free
//      ke_timer_clear
//      ke_timer_schedule
//      UpdateEAPOLWcbLenAndTransmit
// MayUse:  a0:[0..31] mstatus:[0..31]
// LiveOut: a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
ke_free_entry:
l230503A2:
	word32 a5_118 = 0x4201F000<32>
	word32 s0_29 = Mem6[0x4201EEF8<32>:int32]
	word32 s2_121 = a0 + -4<i32>
	word32 s3_21 = Mem17[a0 + -4<i32>:int32]
	branch s0_29 <u a0 l230503DE
l230503DE:
	__csrrc(mstatus, 8<32>)
	word32 s4_28 = 0<32>
l230503E4:
	branch s0_29 != 0<32> l230503F0
l230503F0:
	word32 s0_32 = Mem17[0x4201F004<32>:word32]
	a4 = s0_32 + 0x4201F000<32>
	branch s0_32 + 0x4201F000<32> != a0 + -4<i32> l23050426
l23050426:
	branch a0 + -4<i32> >=u s0_32 l2305046E
l2305046E:
	s4_28 = s0_32
	s0_29 = Mem17[s0_32:word32]
l2305042A:
	branch s4_28 != 0<32> l23050446
l23050446:
	Mem43[s4_28:word32] = a0 + -4<i32>
	a5_118 = a0 + -4<i32> + s3_21
	branch s0_32 != a5_118 l23050464
l23050464:
	Mem47[a0 + 4092<i32>:word32] = s0_32
l23050452:
	Mem49[a0 + 4092<i32>:word32] = a5_118
	s2_121 = a5_118 - (a0 + -4<i32>)
	Mem53[Mem49[a5_118 + 4<i32>:word32] + s2_121:word32] = a0
l2305042E:
	assert_err()
l230503FA:
	word32 s0_54 = Mem17[s0_32 + 0x4201F000<32>:word32]
	Mem56[s3_21 + 0x4201F004<32>:word32] = s0_54
	a5_118 = s3_21 + 0x4201F000<32>
	a3 = s0_54 + (s3_21 + 0x4201F000<32>)
	branch s0_32 + 0x4201F000<32> != a3 l23050412
l23050408:
	a5_118 = s3_21 + 0x4201F000<32> + a3
	Mem60[a5_118 + 4<i32>:word32] = s0_54
	a4 = Mem60[a5_118:word32]
	Mem62[a5_118:word32] = s0_54
l230503E6:
	Mem63[s4_28:word32] = a0 + -4<i32>
	Mem64[a0 + 4092<i32>:word32] = 0<32>
l23050468:
	Mem67[a0:word32] = s3_21
l23050412:
	__csrrs(mstatus, 8<32>)
	s1Out = a0
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	a5Out = a5_118
	s2Out = s2_121
	s3Out = s3_21
	s4Out = dwArg04
	s8Out = s4
	return s1
ke_free_exit:
l230503C6:
	assert_err()


word32 ke_msg_alloc(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_monitor_channel_req_handler
//      mm_monitor_enable_req_handler
//      mm_remain_on_channel_req_handler
//      mm_sta_add_req_handler
//      mm_key_add_req_handler
//      mm_set_power_req_handler
//      mm_version_req_handler
//      mm_hw_config_handler
//      mm_ps_change_ind
//      rxl_cntrl_evt
//      rxu_mgt_frame_check
//      rxu_cntrl_frame_handle
//      scanu_confirm
//      scanu_raw_send_cfm
//      scanu_scan_next
//      sm_delete_resources
//      sm_scan_bss
//      sm_join_bss
//      sm_set_bss_param
//      sm_disconnect
//      sm_assoc_done
//      apm_start_cfm
//      apm_set_bss_param
//      apm_stop
//      apm_tx_int_ps_postpone
//      apm_tx_int_ps_get_postpone
//      apm_tx_int_ps_clear
//      apm_sta_add
//      apm_bcn_set
//      apm_assoc_req_handler
//      apm_sta_remove
//      ke_msg_send_basic
//      chan_switch_start
//      mm_sta_del
//      mm_send_connection_loss_ind
//      mm_check_rssi
//      mm_send_csa_traffic_ind
//      mm_sta_tbtt
//      mm_bcn_transmit
//      mm_bcn_transmitted
//      scan_send_cancel_cfm
//      scan_start_req_handler
//      me_rc_stats_req_handler
//      me_traffic_ind_req_handler
//      me_sta_del_req_handler
//      me_set_control_port_req_handler
//      me_config_req_handler
//      me_set_ps_disable_req_handler
//      me_set_active_req_handler
//      me_sta_add_req_handler
//      me_beacon_check
//      scanu_join_cfm_handler
//      sm_connect_req_handler
//      mm_set_vif_state_cfm_handler
//      apm_sta_del_req_handler
//      apm_start_cac_req_handler
//      apm_start_req_handler
//      cfg_start_req_handler
//      dbg_get_sys_stat_req_handler
//      dbg_mem_write_req_handler
//      dbg_mem_read_req_handler
// MayUse:  a0:[0..15] a1:[0..15] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
ke_msg_alloc_entry:
l23050474:
	word32 a0_27
	word32 s2_31
	word32 a2_89
	word32 a5_90
	word32 s1_30 = ke_malloc(a3 + 12<i32>, a3, a4, mstatus, dwArg18, out a0_27, out a2_89, out a5_90, out s2_31)
	branch a0_27 != 0<32> l230504AE
l230504AE:
	Mem39[a0_27 + 4<i32>:word16] = SLICE(a0, word16, 0)
	Mem40[a0_27 + 6<i32>:word16] = SLICE(a1, word16, 0)
	Mem41[a0_27 + 8<i32>:word16] = SLICE(s2_31, word16, 0)
	Mem42[a0_27 + 10<i32>:word16] = SLICE(s1_30, word16, 0)
	Mem43[a0_27:word32] = 0<32>
	word32 a1_49
	word32 a3_51
	word32 a4_52
	word32 a5_53
	word32 t1_91
	word32 a0_92
	word32 a2_93
	word32 ra_54 = memset(ra, a0_27 + 0xC<32>, 0<32>, s1_30, out t1_91, out a0_92, out a1_49, out a2_93, out a3_51, out a4_52, out a5_53)
	s0Out = s1
	s1Out = s1_30
	a0Out = a0_27 + 0xC<32>
	a1Out = a1_49
	a2Out = dwArg48
	a3Out = a3_51
	a4Out = a4_52
	a5Out = a5_53
	a6Out = dwArg28
	s2Out = s2_31
	s3Out = a1
	s4Out = dwArg04
	s8Out = s4
	return ra_54
ke_msg_alloc_exit:
l23050496:
	assert_err()


word32 ke_msg_send(word32 a0, word32 a2, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_monitor_channel_req_handler
//      mm_monitor_enable_req_handler
//      mm_remain_on_channel_req_handler
//      mm_sta_add_req_handler
//      mm_key_add_req_handler
//      mm_set_power_req_handler
//      mm_version_req_handler
//      mm_hw_config_handler
//      mm_ps_change_ind
//      rxl_cntrl_evt
//      rxu_mgt_frame_check
//      rxu_cntrl_frame_handle
//      scanu_confirm
//      scanu_raw_send_cfm
//      scanu_scan_next
//      sm_delete_resources
//      sm_scan_bss
//      sm_join_bss
//      sm_send_next_bss_param
//      sm_disconnect
//      sm_connect_ind
//      sm_assoc_done
//      apm_tx_cfm_handler
//      apm_start_cfm
//      apm_send_next_bss_param
//      apm_stop
//      apm_tx_int_ps_postpone
//      apm_tx_int_ps_get_postpone
//      apm_tx_int_ps_clear
//      apm_sta_add
//      apm_bcn_set
//      apm_sta_remove
//      ke_msg_send_basic
//      ke_msg_forward_and_change_id
//      ipc_emb_msg_evt
//      chan_switch_start
//      mm_sta_del
//      mm_send_connection_loss_ind
//      mm_check_rssi
//      mm_send_csa_traffic_ind
//      mm_sta_tbtt
//      mm_bcn_transmit
//      mm_bcn_transmitted
//      scan_send_cancel_cfm
//      scan_start_req_handler
//      me_rc_stats_req_handler
//      me_traffic_ind_req_handler
//      me_sta_del_req_handler
//      me_set_control_port_req_handler
//      me_config_req_handler
//      me_set_ps_disable_req_handler
//      me_set_active_req_handler
//      me_sta_add_req_handler
//      me_beacon_check
//      scanu_join_cfm_handler
//      sm_connect_req_handler
//      mm_set_vif_state_cfm_handler
//      apm_sta_del_req_handler
//      apm_start_cac_req_handler
//      apm_start_req_handler
//      cfg_start_req_handler
//      dbg_get_sys_stat_req_handler
//      dbg_mem_write_req_handler
//      dbg_mem_read_req_handler
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t1 t3 tp
// Preserved: sp
ke_msg_send_entry:
l230504E0:
	word32 a5_11 = CONVERT(Mem9[a0 + -6<i32>:byte], byte, word32)
	branch a5_11 <=u 0xE<32> l23050526
l23050526:
	branch a5_11 >u 0xC<32> l23050510
l23050510:
	word32 a1_35 = bl_rx_e2a_handler(a0 + -8<i32>, a2)
l23050522_thunk_ke_free:
	word32 a2_46
	word32 a4_47
	word32 a5_48
	word32 s1_51
	word32 s2_52
	word32 s3_53
	word32 s4_54
	word32 s8_55
	word32 a3_57
	word32 s0_50 = ke_free(a0 + -12<i32>, mstatus, out s1_51, out a2_46, out a3_57, out a4_47, out a5_48, out s2_52, out s3_53, out s4_54, out s8_55)
	s1Out = s1_51
	a0Out = a0 + -12<i32>
	a1Out = a1_35
	a2Out = a2_46
	a3Out = a3_57
	a4Out = a4_47
	a5Out = a5_48
	s2Out = s2_52
	s3Out = s3_53
	s4Out = s4_54
	s8Out = s8_55
	return s0_50
l2305052C:
	word32 a2_101
	co_list_push_back(a1, a5, out a2_101)
l23050546_thunk_ke_evt_set:
	word32 a5_26
	word32 a4_25 = ke_evt_set(0x1000000<32>, 0xC<32>, mstatus, out a5_26)
	s1Out = a0 + -12<i32>
	a0Out = 0x1000000<32>
	a1Out = a0 + -12<i32>
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_25
	a5Out = a5_26
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return s0
ke_msg_send_exit:
l230504F8:
	assert_err()


word32 ke_msg_send_basic(word32 ra, word32 a0, word32 a1, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg10, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_set_ps_options_req_handler
//      mm_sta_del_req_handler
//      mm_key_del_req_handler
//      mm_set_idle_req_handler
//      mm_reset_req_handler
//      mm_start_req_handler
//      mm_set_ps_mode_req_handler
//      mm_hw_config_handler
//      ps_enable_cfm
//      ps_disable_cfm
//      ke_timer_schedule
//      chan_tx_cfm
//      chan_ctxt_op_evt
//      mm_tim_update_proceed
//      mm_bcn_change
//      mm_scan_channel_end_ind_handler
//      me_traffic_ind_req_handler
//      me_sta_del_req_handler
//      me_set_control_port_req_handler
//      me_chan_config_req_handler
//      mm_set_ps_mode_cfm_handler
//      mm_set_idle_cfm_handler
//      me_config_req_handler
//      me_set_ps_disable_req_handler
//      me_set_active_req_handler
//      sm_disconnect_req_handler
//      apm_stop_cac_req_handler
//      apm_conf_max_sta_req_handler
//      apm_stop_req_handler
//      dbg_set_sev_filter_req_handler
//      dbg_set_mod_filter_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31]
// LiveOut: a0 a2 a3 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
ke_msg_send_basic_entry:
l2305054A:
	word32 a0_11
	word32 s0_59
	word32 s1_60
	word32 a1_61
	word32 a2_62
	word32 a3_63
	word32 a4_64
	word32 a5_65
	word32 a6_66
	word32 s2_67
	word32 s3_68
	word32 s4_69
	word32 s8_70
	word32 ra_18 = ke_msg_alloc(ra, a0, a1, 0<32>, a4, mstatus, dwArg08, out s0_59, out s1_60, out a0_11, out a1_61, out a2_62, out a3_63, out a4_64, out a5_65, out a6_66, out s2_67, out s3_68, out s4_69, out s8_70)
l23050558_thunk_ke_msg_send:
	word32 a0_31
	word32 a2_33
	word32 a3_34
	word32 s1_39
	word32 s2_40
	word32 s3_41
	word32 s4_42
	word32 s8_43
	word32 a1_71
	word32 a4_72
	word32 a5_73
	s0Out = ke_msg_send(a0_11, dwArg10, mstatus, out s1_39, out a0_31, out a1_71, out a2_33, out a3_34, out a4_72, out a5_73, out s2_40, out s3_41, out s4_42, out s8_43)
	s1Out = s1_39
	a0Out = a0_31
	a2Out = a2_33
	a3Out = a3_34
	s2Out = s2_40
	s3Out = s3_41
	s4Out = s4_42
	s8Out = s8_43
	return ra_18
ke_msg_send_basic_exit:


void ke_msg_forward_and_change_id(word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..15] a2:[0..31] a3:[0..15] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t1 t3 tp
// Preserved: sp
ke_msg_forward_and_change_id_entry:
l2305055C:
	Mem5[a0 + 4088<i32>:word16] = SLICE(a1, word16, 0)
	Mem7[a0 + 4090<i32>:word16] = SLICE(a2, word16, 0)
	Mem9[a0 + 4092<i32>:word16] = SLICE(a3, word16, 0)
l23050568_thunk_ke_msg_send:
	word32 s1_27
	word32 a0_28
	word32 a1_29
	word32 a2_30
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 s2_34
	word32 s3_35
	word32 s4_36
	word32 s8_37
	ke_msg_send(a0, a2, mstatus, out s1_27, out a0_28, out a1_29, out a2_30, out a3_31, out a4_32, out a5_33, out s2_34, out s3_35, out s4_36, out s8_37)
	return
ke_msg_forward_and_change_id_exit:


word32 ke_msg_free(word32 a0, word32 mstatus, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scanu_confirm
//      sm_connect_ind
//      apm_tx_cfm_handler
//      apm_start_cfm
//      ke_task_schedule
//      mm_tim_update_proceed
//      mm_bcn_change
//      mm_scan_channel_end_ind_handler
// MayUse:  a0:[0..31] mstatus:[0..31]
// LiveOut: a2 a3 a4 a5 s0 s1 s2 s4
// Trashed: a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
ke_msg_free_entry:
l2305056C:
l2305056C_thunk_ke_free:
	word32 a2_5
	word32 a4_6
	word32 a5_7
	word32 s1_10
	word32 s2_11
	word32 s4_13
	word32 a3_16
	word32 s3_24
	word32 s8_25
	word32 s0_9 = ke_free(a0, mstatus, out s1_10, out a2_5, out a3_16, out a4_6, out a5_7, out s2_11, out s3_24, out s4_13, out s8_25)
	s1Out = s1_10
	a2Out = a2_5
	a3Out = a3_16
	a4Out = a4_6
	a5Out = a5_7
	s2Out = s2_11
	s4Out = s4_13
	return s0_9
ke_msg_free_exit:


void cmp_dest_id()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
cmp_dest_id_entry:
l23050570:
	return
cmp_dest_id_exit:


word32 ke_task_local(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_bcn_set
//      ke_state_get
//      ke_task_schedule
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a5
// Preserved: s0 sp
ke_task_local_entry:
l2305057C:
	branch a0 <=u 0xE<32> l230505A2
l230505A2:
	return CONVERT(a0 <u 13<i32>, bool, word32)
ke_task_local_exit:
l2305058A:
	assert_err()


word32 ke_handler_search(word32 a0, word32 a1, word32 a4, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ke_task_schedule
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a1 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
ke_handler_search_entry:
l230505AE:
	word32 a5_5 = CONVERT(Mem0[a1 + 4<i32>:uint16], uint16, word32)
	word32 a5_18 = a5_5 + 0xFFFFFFFF<32>
	branch a5_5 != 0<32> l230505C8
l230505C8:
l230505D0:
	word32 s1_19 = a5_18 << 3<u32>
	a4 = a4 + s1_19
	word32 a1_17 = Mem14[a4:word32]
	branch CONVERT(Mem14[a4:uint16], uint16, word32) != a0 l230505BE
l230505BE:
	a5_18 = a5_18 + 0xFFFFFFFF<32>
	branch a5_18 != 0xFFFFFFFF<32> l230505D0
l230505C4:
	a0 = 0<32>
l230505E0:
	a4 = Mem14[a5_18 + 4<i32>:word32]
	branch a5_18 != 0<32> l230505FE
l230505FE:
l23050604:
	a0Out = a0
	a1Out = a1_17
	a4Out = a4
	return s1_19
l230505E6:
	assert_err()
l230505BA:
	a0Out = 0<32>
	a1Out = a1
	a4Out = a4
	return s1
ke_handler_search_exit:


word32 ke_state_set(word32 a0, word32 a1, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_set_idle_req_handler
//      mm_reset_req_handler
//      mm_start_req_handler
//      mm_force_idle_req_handler
//      mm_hw_config_handler
//      me_init
//      scanu_confirm
//      scanu_init
//      scanu_start
//      sm_init
//      sm_scan_bss
//      sm_join_bss
//      sm_set_bss_param
//      sm_disconnect
//      sm_connect_ind
//      sm_auth_send
//      sm_assoc_req_send
//      sm_assoc_done
//      apm_init
//      apm_start_cfm
//      apm_set_bss_param
//      apm_bcn_set
//      mm_reset
//      mm_hw_idle_evt
//      mm_back_to_host_idle
//      mm_force_idle_req
//      scan_init
//      scan_set_channel_request
//      mm_scan_channel_end_ind_handler
//      mm_scan_channel_start_ind_handler
//      bam_init
//      mm_set_ps_mode_cfm_handler
//      mm_set_idle_cfm_handler
//      me_config_req_handler
//      me_set_ps_disable_req_handler
//      me_set_active_req_handler
//      mm_connection_loss_ind_handler
//      scanu_join_cfm_handler
//      sm_connect_req_handler
//      rxu_mgt_ind_handler
//      me_set_active_cfm_handler
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a2 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
ke_state_set_entry:
l2305060E:
	branch (a0 & 255<i32>) <=u 0xD<32> l23050646
l23050646:
	ke_task_local(a0)
	word32 a0_110 = a0 & 255<i32>
	branch (a0 & 255<i32>) != 0<32> l23050666
l23050666:
	word32 s1_114 = (a0 & 255<i32>) << 4<i32>
	word32 a4_112 = CONVERT(Mem15[s1_114 + 0x2307C1E2<32>:uint16], uint16, word32)
	branch a0 >>u 8<u32> <u a4_112 l23050696
l23050696:
	word32 s2_115 = a0 >>u 8<u32> << 1<i32>
	branch s2_115 != 0x2307C1D4<32> l230506BA
l230506BA:
	word32 a5_113 = CONVERT(Mem15[s2_115 + 0x2307C1D4<32>:uint16], uint16, word32)
	branch a5_113 == a1 l230506FE
l230506C2:
	Mem54[s2_115 + 0x2307C1D4<32>:word16] = SLICE(a1, word16, 0)
	s1_114 = 0x23050000<32>
	s2_115 = 0x4201F000<32>
l230506D2:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg296 = <invalid>
	word32 s0_131
	word32 s1_132
	word32 a0_133
	word32 s2_134
	ke_queue_extract(ra, s0, a1, a2, stackArg296, out s0_131, out s1_132, out a0_133, out s2_134)
	a0_110 = 0x4201EEE8<32>
	a1 = 0x4201EEE8<32>
	branch false l230506FE
l230506FE:
	s1Out = s1_114
	a0Out = a0_110
	a1Out = a1
	a2Out = dwArg48
	a4Out = a4_112
	a5Out = a5_113
	s2Out = s2_115
	s3Out = a0
	s4Out = dwArg04
	return s1
ke_state_set_exit:
l230506E4:
	__csrrc(mstatus, 8<32>)
	word32 a2_135
	s1_114 = co_list_push_back(0x4201EEE8<32>, a5_113, out a2_135)
	__csrrs(mstatus, 8<32>)
	a4_112 = ke_evt_set(0x1000000<32>, a4_112, mstatus, out a5_113)
l230506A2:
	assert_err()
l2305067E:
	assert_err()
l2305064E:
	assert_err()
l2305062E:
	assert_err()


word32 ke_state_get(word32 a0, word32 dwArg38, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_set_idle_req_handler
//      mm_start_req_handler
//      mm_force_idle_req_handler
//      mm_hw_config_handler
//      rxu_mgt_frame_check
//      sm_frame_tx_cfm_handler
//      mm_reset
//      mm_back_to_host_idle
//      bl_sleep
//      scan_cancel_req_handler
//      scan_start_req_handler
//      mm_scan_channel_end_ind_handler
//      mm_scan_channel_start_ind_handler
//      mm_set_ps_mode_cfm_handler
//      mm_set_idle_cfm_handler
//      me_set_ps_disable_req_handler
//      me_set_active_req_handler
//      rxu_mgt_ind_handler
//      me_set_ps_disable_cfm_handler
//      mm_bss_param_setting_handler
//      sm_rsp_timeout_ind_handler
//      scanu_start_cfm_handler
//      mm_connection_loss_ind_handler
//      scanu_join_cfm_handler
//      sm_connect_req_handler
//      rxu_mgt_ind_handler
//      mm_set_vif_state_cfm_handler
//      me_set_active_cfm_handler
//      mm_sta_add_cfm_handler
//      sm_disconnect_req_handler
//      apm_stop_cac_req_handler
//      apm_start_cac_req_handler
//      me_set_ps_disable_cfm_handler
//      mm_bss_param_setting_handler
//      mm_bcn_change_cfm_handler
//      apm_stop_req_handler
//      apm_start_req_handler
//      me_set_active_cfm_handler
//      hostapd_mgt_ind_handler
// MayUse:  a0:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a2 a4 s1 s2
// Trashed: a0 a2 a4 a5 s1 s2 tp
// Preserved: s0 sp
ke_state_get_entry:
l2305070E:
	branch (a0 & 255<i32>) <=u 0xD<32> l2305073E
l2305073E:
	branch ke_task_local(a0 & 255<i32>) != 0<32> l2305075E
l2305075E:
	word32 a4_34 = CONVERT(Mem11[((a0 & 255<i32>) << 4<i32>) + 0x2307C1E2<32>:uint16], uint16, word32)
	branch a0 >>u 8<u32> <u a4_34 l2305078E
l2305078E:
	word32 s2_44 = a0 >>u 8<u32> << 1<i32>
	word32 a0_46 = CONVERT(Mem11[s2_44 + 0x2307C000<32>:uint16], uint16, word32)
	0<32> = dwArg38
	a0Out = a0_46
	a2Out = dwArg10
	a4Out = a4_34
	s2Out = s2_44 + 0x2307C000<32>
	return 0x2307C1D4<32>
ke_state_get_exit:
l23050776:
	assert_err()
l23050746:
	assert_err()
l23050726:
	assert_err()


void ke_task_schedule(word32 ra, word32 a1, word32 a4, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 a6 s0 s4 s8 t3
// Preserved: a1 a3 a4 mstatus ra s1 s2 s3 sp tp
ke_task_schedule_entry:
l230507A6:
	__csrrc(mstatus, 8<32>)
	word32 a5_245
	word32 a0_21 = co_list_pop_front(a4, a5, out a5_245)
	__csrrs(mstatus, 8<32>)
	branch a0_21 == 0<32> l23050874
l230507CA:
	word32 s2_23 = CONVERT(Mem15[a0_21 + 6<i32>:uint16], uint16, word32)
	word32 s0_116 = a0_21
	word32 s4_27 = CONVERT(Mem15[a0_21 + 4<i32>:uint16], uint16, word32)
	word32 s2_104 = s2_23 >>u 8<u32>
	branch (s2_23 & 255<i32>) <=u 0xD<32> l230507FA
l230507FA:
	branch ke_task_local(s2_23 & 255<i32>) != 0<32> l2305081A
l2305081A:
	word32 s3_45 = (s2_23 & 255<i32>) << 4<i32>
	word32 a4_111 = CONVERT(Mem15[s3_45 + 0x2307C1E2<32>:uint16], uint16, word32)
	branch s2_23 >>u 8<u32> <u a4_111 l2305084A
l2305084A:
	branch s3_45 != 0x2307C1D4<32> l23050866
l23050866:
	word32 s1_103
	word32 a5_100
	branch a1 != 0<32> l2305089E
l2305089E:
	word32 s2_63 = s2_23 >>u 8<u32> << 1<i32>
	s2_104 = s2_63 + 0x2307C000<32>
	word32 a0_69
	s1_103 = ke_handler_search(s4_27, a1 + (CONVERT(Mem15[s2_63 + 0x2307C000<32>:uint16], uint16, word32) << 3<i32>), a4_111, out a0_69, out a1, out a4_111)
	a5_100 = a0_69
	branch a0_69 == 0<32> l2305086A
l2305086A:
	branch a1 != 0<32> l230508F0
l230508F0:
	word32 a0_84
	word32 a1_246
	s1_103 = ke_handler_search(s4_27, a1, a4_111, out a0_84, out a1_246, out a4_111)
	a5_100 = a0_84
	branch a0_84 != 0<32> l230508B6
l230508B6:
	word32 a0_122
	word32 tp_131
	call a5_100 (retsize: 0;)
		uses: a0:CONVERT(Mem15[a0_21 + 4<i32>:uint16], uint16, word32),a1:a0_21 + 12<i32>,a2:CONVERT(Mem15[a0_21 + 6<i32>:uint16], uint16, word32),a3:CONVERT(Mem15[a0_21 + 8<i32>:uint16], uint16, word32),a4:a4_111,a5:a5_100,mstatus:mstatus,ra:ra,s0:a0_21,s1:s1_103,s2:s2_104,s3:s3_45,s4:s4_27,tp:tp_131
		defs: a0:a0_122,a4:a4_129,mstatus:mstatus_121,s0:s0_116,tp:tp_131
	branch a0_122 == 1<32> l23050874
l230508CE:
	branch a0_122 == 2<32> l230508FC
l230508FC:
	word32 a2_253
	co_list_push_back(s0_116, 2<32>, out a2_253)
l230508D4:
	branch a0_122 == 0<32> l2305086E
l230508D6:
	assert_err()
l230508FA:
l2305086E:
	word32 a5_250
	word32 s2_251
	word32 s4_252
	word32 s1_247
	word32 a3_249
	word32 a2_248
	ke_msg_free(s0_116, mstatus, out s1_247, out a2_248, out a3_249, out a4, out a5_250, out s2_251, out s4_252)
l23050874:
	__csrrc(mstatus, 8<32>)
	branch Mem15[0x4201EEE0<32>:int32] != 0<32> l2305088A
l23050882:
	ke_evt_clear(0x1000000<32>, a4, mstatus)
l2305088A:
	__csrrs(mstatus, 8<32>)
	return
ke_task_schedule_exit:
l2305084E:
	assert_err()
l23050832:
	assert_err()
l23050802:
	assert_err()
l230507E2:
	assert_err()


void ke_msg_discard()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
ke_msg_discard_entry:
l2305090C:
	return
ke_msg_discard_exit:


void ke_msg_save()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
ke_msg_save_entry:
l23050910:
	return
ke_msg_save_exit:


word32 ke_timer_hw_set(word32 a0, word32 a4, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ke_timer_set
//      ke_timer_clear
//      ke_timer_schedule
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
ke_timer_hw_set_entry:
l23050914:
	word32 a5_14
	__csrrc(mstatus, 8<32>)
	branch a0 == 0<32> l23050948
l23050948:
	a5_14 = Mem0[0x44B0808C<32>:int32] & -257<i32>
l2305091A:
	Mem12[0x44B00148<32>:word32] = a4
	a5_14 = Mem12[0x44B0808C<32>:int32]
	branch (a5_14 & 256<i32>) != 0<32> l23050942
l23050932:
	Mem17[0x44B08088<32>:word32] = 256<i32>
	a5_14 = a5_14 | 256<i32>
l2305093E:
	Mem21[0x44B0808C<32>:word32] = a5_14
l23050942:
	__csrrs(mstatus, 8<32>)
	a5Out = a5_14
	return 0x44B08000<32>
ke_timer_hw_set_exit:


void cmp_abs_time()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
cmp_abs_time_entry:
l23050956:
	return
cmp_abs_time_exit:


void cmp_timer_id(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a4 a5
// Preserved: sp
cmp_timer_id_entry:
l2305096E:
	branch CONVERT(Mem0[a0 + 4<i32>:uint16], uint16, word32) != a1 >>u 0x10<u32> l2305098A
l2305098A:
	return
l2305097A:
	return
cmp_timer_id_exit:


word32 ke_timer_set(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArgA8, word32 dwArg0108, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_auth_send
//      sm_assoc_req_send
//      apm_start_cfm
//      apm_sta_connect_timeout_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +00A8:[0..31] Stack +0108:[0..31]
// LiveOut: a2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
ke_timer_set_entry:
l2305098E:
	branch a2 != 0<32> l23050A8C
l23050A8C:
	branch a2 <=u 0x11E1A2FF<32> l230509C2
l230509C2:
	word32 a5_40 = Mem19[0x4201EEF0<32>:word32]
	branch a5_40 == 0<32> l230509E8
l230509D4:
	a4 = CONVERT(Mem19[a5_40 + 4<i32>:uint16], uint16, word32)
	branch a4 != a0 l230509E8
l230509DC:
l230509E8:
	word32 a0_59
	word32 s0_61
	word32 s1_244
	word32 s2_245
	word32 ra_69 = ke_queue_extract(ra, a2, 0x2305096E<32>, a0 << 0x10<u32> | a1, dwArg0108, out s0_61, out s1_244, out a0_59, out s2_245)
	word32 s1_70 = a0_59
	branch a0_59 != 0<32> l23050A32
l23050A08:
	word32 a2_247
	word32 a5_248
	word32 a0_78
	word32 s2_249
	ke_malloc(0xC<32>, a3, a4, mstatus, dwArg18, out a0_78, out a2_247, out a5_248, out s2_249)
	s1_70 = a0_78
	branch a0_78 != 0<32> l23050A2A
l23050A2A:
	Mem90[a0_78 + 4<i32>:word16] = SLICE(a0, word16, 0)
	Mem91[a0_78 + 6<i32>:word16] = SLICE(a1, word16, 0)
l23050A32:
	word32 s0_98 = s0_61 + Mem93[0x44B00120<32>:int32]
	Mem100[s0_98 + 8<i32>:word32] = s1_70
	word32 a0_246
	word32 s1_109
	word32 s2_110
	word32 s3_111
	word32 s0_108 = co_list_insert(ra_69, s0_98, s1_70, 0x23050956<32>, dwArg0108, out s1_109, out a0_246, out s2_110, out s3_111)
	branch s2_110 != 0<32> l23050A5C
l23050A54:
	branch Mem100[s3_111 + 20<i32>:int32] != s1_109 l23050A64
l23050A5C:
	word32 a5_250
	a4 = ke_timer_hw_set(Mem100[s3_111 + 20<i32>:int32], a4, mstatus, out a5_250)
l23050A64:
	branch s0_108 - Mem100[0x44B00120<32>:int32] >= 0<32> l23050AAE
l23050AAE:
	0<32> = dwArgA8
	return
l23050A72:
	0<32> = dwArgA8
l23050A88_thunk_ke_evt_set:
	word32 a5_251
	ke_evt_set(0x4000000<32>, a4, mstatus, out a5_251)
	return
ke_timer_set_exit:
l23050A12:
	assert_err()
l23050A98:
l230509AA:
l230509BE:
	assert_err()


word32 ke_timer_clear(word32 ra, word32 s0, word32 a0, word32 a1, word32 mstatus, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_auth_handler
//      sm_assoc_rsp_handler
//      apm_stop
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0118:[0..31]
// LiveOut: a2 a3 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
ke_timer_clear_entry:
l23050AC2:
	word32 s1_11 = Mem10[s0 + 20<i32>:word32]
	branch s0 == 0<32> l23050B4C
l23050AD6:
	branch CONVERT(Mem10[s0 + 4<i32>:uint16], uint16, word32) != a0 l23050B32
l23050AE2:
	word32 a4_15 = CONVERT(Mem10[s0 + 6<i32>:uint16], uint16, word32)
	branch a4_15 != a1 l23050B32
l23050B32:
	word32 a0_29
	word32 s0_155
	ra = ke_queue_extract(ra, s0, 0x2305096E<32>, a0 << 0x10<u32> | a1, dwArg0118, out s0_155, out s1_11, out a0_29, out s2)
	s0 = a0_29
	branch a0_29 != 0<32> l23050B24
l23050B4C:
	s0Out = s0
	s1Out = s1_11
	a2Out = dwArg10
	a3Out = a3
	s2Out = s2
	return ra
l23050AEA:
	word32 a5_156
	co_list_pop_front(a4_15, 0x4201F000<32>, out a5_156)
	word32 s1_50 = Mem10[s1_11 + 20<i32>:word32]
	word32 a5_157
	ke_timer_hw_set(s1_50, a4_15, mstatus, out a5_157)
	branch s1_50 == 0<32> l23050B24
l23050AFC:
	branch Mem10[0x44B00120<32>:int32] <= 0x44B00000<32> l23050B24
l23050B24:
l23050B2E_thunk_ke_free:
	word32 a2_76
	word32 s1_81
	word32 s2_82
	word32 a3_87
	word32 a4_158
	word32 a5_159
	word32 s3_160
	word32 s4_161
	word32 s8_162
	s0Out = ke_free(s0, mstatus, out s1_81, out a2_76, out a3_87, out a4_158, out a5_159, out s2_82, out s3_160, out s4_161, out s8_162)
	s1Out = s1_81
	a2Out = a2_76
	a3Out = a3_87
	s2Out = s2_82
	return ra
ke_timer_clear_exit:
l23050B0C:
	assert_err()


void ke_timer_schedule(word32 ra, word32 s0, word32 a4, word32 s2, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
ke_timer_schedule_entry:
l23050B56:
	word32 s2_16 = 0x44B00000<32>
l23050B72:
	word32 a5_22 = ke_evt_clear(0x4000000<32>, a4, mstatus)
	branch s0 != 0<32> l23050B90
l23050B90:
	word32 a4_27 = Mem14[s2_16 + 288<i32>:int32]
	word32 a5_29 = a5_22 - a4_27
	word32 s0_28 = Mem14[a5_22 + 8<i32>:word32]
	word32 a5_30 = a5_29 + -50<i32>
	branch a5_29 >= 0xFFFFFFCE<32> l23050BC2
l23050BC2:
	word32 a5_33
	ke_timer_hw_set(s0_28, a4_27, mstatus, out a5_33)
	a4_27 = Mem14[s2_16 + 288<i32>:int32]
	a5_30 = a5_33 - a4_27
	branch a5_30 < 0<32> l23050BA0
l23050BD4:
	return
l23050BA0:
	word32 a5_159
	word32 a0_51 = co_list_pop_front(a4_27, a5_30, out a5_159)
	word32 s0_70
	word32 a0_161
	word32 s3_165
	word32 a2_162
	word32 a3_163
	word32 s2_164
	word32 s1_160
	word32 s4_166
	word32 s8_167
	ra = ke_msg_send_basic(ra, CONVERT(Mem14[a0_51 + 4<i32>:uint16], uint16, word32), CONVERT(Mem14[a0_51 + 6<i32>:uint16], uint16, word32), a4_27, mstatus, s2, dwLoc10, out s0_70, out s1_160, out a0_161, out a2_162, out a3_163, out s2_164, out s3_165, out s4_166, out s8_167)
	word32 s1_168
	word32 a2_169
	word32 a3_170
	word32 a5_171
	word32 s3_172
	word32 s4_173
	word32 s8_174
	s0 = ke_free(s0_70, mstatus, out s1_168, out a2_169, out a3_170, out a4, out a5_171, out s2_16, out s3_172, out s4_173, out s8_174)
l23050B7E:
l23050B8C_thunk_ke_timer_hw_set:
	word32 a5_158
	ke_timer_hw_set(0<32>, a4, mstatus, out a5_158)
	return
ke_timer_schedule_exit:


word32 bl60x_current_time_us(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_check_rssi
// MayUse:  a0:[0..31]
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
bl60x_current_time_us_entry:
l23050BE2:
	word32 a4_5 = Mem0[0x44B080A4<32>:int32]
	word32 a5_6 = Mem0[0x44B080A8<32>:int32]
	Mem8[a4_5:word32] = a0
	Mem9[a5_6 + 4<i32>:word32] = a0
	a5Out = a5_6
	return a4_5
bl60x_current_time_us_exit:


word32 mac_ie_find(word32 a0, word32 a1, word32 a2, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rx_scanu_result_ind
//      apm_probe_req_handler
//      apm_assoc_req_handler
//      scan_search_ds
//      me_extract_rate_set
//      me_extract_power_constraint
//      me_extract_country_reg
//      me_extract_mobility_domain
//      me_extract_csa
//      me_beacon_check
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a5
// Preserved: sp
mac_ie_find_entry:
l23050BF4:
	word32 a1_5 = a1 + a0
l23050BF6:
	branch a0 <u a1_5 l23050BFE
l23050BFE:
	a5 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5 == a2 l23050BFC
l23050C06:
	word32 a5_11 = CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32)
	a5 = a5_11 + 2<32>
	a0 = a0 + (a5_11 + 2<32>)
l23050BFA:
	a0 = 0<32>
l23050BFC:
	a5Out = a5
	return a0
mac_ie_find_exit:


word32 mac_vsie_find(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rx_scanu_result_ind
//      apm_assoc_req_handler
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a2 a4 s1 s4 s8
// Trashed: a0 a1 a2 a4 a5 a6 a7 s1 s4 s8 t1 t3 tp
// Preserved: sp
mac_vsie_find_entry:
l23050C10:
	word32 a1_5 = a1 + a0
l23050C16:
	branch a0 <u a1_5 l23050C36
l23050C36:
	branch CONVERT(Mem0[a0:byte], byte, word32) != 221<i32> l23050C60
l23050C3E:
	word32 a6_12 = a0 + 2<i32>
	word32 a5_13 = 0<32>
l23050C44:
	branch a3 != a5_127 l23050C4A
l23050C4A:
	a5_13 = a5_127 + 1<32>
	a5_127 = a5_13
	branch CONVERT(Mem0[a2 + a5_13 + -1<i32>:byte], byte, word32) == CONVERT(Mem0[a6_12 + a5_127:byte], byte, word32) l23050C44
l23050C60:
	a0 = a0 + (CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) + 2<32>)
l23050C48:
	a0Out = a0
	a2Out = a2
	a4Out = 221<i32>
	s4Out = s4
	s8Out = s8
	return s1
l23050C1A:
	branch a0 == a1_5 l23050C6A
l23050C6A:
	a0Out = 0<32>
	a2Out = a2
	a4Out = 221<i32>
	s4Out = s4
	s8Out = s8
	return s1
l23050C1E:
	word32 a4_47
	word32 s4_49
	word32 s8_50
	word32 a1_124
	word32 a5_126
	word32 a2_125
	word32 a0_123
	word32 s1_48 = puts(0x2307C3A4<32>, out a0_123, out a1_124, out a2_125, out a4_47, out a5_126, out s4_49, out s8_50)
	a0Out = 0<32>
	a2Out = dwArg10
	a4Out = a4_47
	s4Out = s4_49
	s8Out = s8_50
	return s1_48
mac_vsie_find_exit:


word32 GetTxEAPOLBuffer(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg2
//      GenerateGrpMsg2
//      GeneratePWKMsg4
//      PrepDefaultEapolMsg
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a4 a5 ra s1 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
GetTxEAPOLBuffer_entry:
l23050C6E:
	word32 s1_156
	word32 s0_102
	word32 s3_38
	word32 s1_183
	word32 a2_184
	word32 a6_185
	word32 s4_186
	word32 s6_187
	word32 s7_188
	word32 s8_189
	word32 s2_37
	word32 a5_151
	word32 s5_162
	branch dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_183, out a2_184, out a5_151, out a6_185, out s2_37, out s3_38, out s4_186, out s5_162, out s6_187, out s7_188, out s8_189) != 0<32> l23050CD6
l23050CA6:
	word32 a0_46
	word32 a2_198
	word32 s2_199
	s1_156 = ke_malloc(0xC<32>, a3, a4, mstatus, dwArg18, out a0_46, out a2_198, out a5_151, out s2_199)
	branch a0_46 != 0<32> l23050CC2
l23050CC2:
	word32 a3_58
	word32 t1_200
	word32 a0_201
	word32 a1_202
	word32 a2_203
	word32 a5_204
	ra = memset(ra, a0_46, 0<32>, 0xC<32>, out t1_200, out a0_201, out a1_202, out a2_203, out a3_58, out a4, out a5_204)
	word32 a0_65
	word32 a2_205
	s1_156 = ke_malloc(512<i32>, a3_58, a4, mstatus, dwArg18, out a0_65, out a2_205, out a5_151, out s2_37)
	Mem71[a0_65 + 8<i32>:word32] = a0_46
	branch a0_65 == 0<32> l23050CB0
l23050CD6:
	Mem76[Mem73[a5_151 + 8<i32>:word32]:word32] = s3_38
	Mem79[s2_37:word32] = a5_151
	word32 a2_190
	word32 a6_191
	word32 s2_192
	word32 s3_193
	word32 s4_194
	word32 s6_195
	word32 s7_196
	word32 s8_197
	s0_102 = dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_156, out a2_190, out a5_151, out a6_191, out s2_192, out s3_193, out s4_194, out s5_162, out s6_195, out s7_196, out s8_197)
l23050CB0:
	s0_102 = 0<32>
l23050CB2:
	s1Out = s1_156
	a0Out = s0_102
	a4Out = a4
	a5Out = a5_151
	s5Out = s5_162
	return ra
GetTxEAPOLBuffer_exit:


word32 UpdateEAPOLWcbLenAndTransmit(word32 ra, word32 fflags, word32 frm, word32 mstatus, word32 dwArg28, word32 dwArg54, word32 dwArg5C, word32 dwArg78, word32 dwArg98, word32 dwArgB8, word32 dwArg0158, word32 dwArg0178, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg2
//      GenerateGrpMsg2
//      GeneratePWKMsg4
//      GeneratePWKMsg1
//      GeneratePWKMsg3
// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0028:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a4 ra s1 s10 s3 s5 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
UpdateEAPOLWcbLenAndTransmit_entry:
l23050D02:
	word32 a5_29
	word32 s4_33
	word32 s1_156
	word32 a2_157
	word32 a6_158
	word32 s2_159
	word32 s3_160
	word32 s5_161
	word32 s6_162
	word32 s7_163
	word32 s8_164
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_156, out a2_157, out a5_29, out a6_158, out s2_159, out s3_160, out s4_33, out s5_161, out s6_162, out s7_163, out s8_164)
	word32 a0_53
	word32 s10_79
	word32 ra_61 = txl_frame_send_eapol_frame(ra, CONVERT(Mem15[a5_29 + 1<i32>:byte], byte, word32), 0<32>, s4_33 + 4<i32>, fflags, frm, mstatus, dwLoc08, dwArg28, dwArg54, dwArg5C, dwArg78, dwArg98, dwArgB8, out a0_53, out s10_79)
	word32 a4_95
	word32 s1_165
	word32 a2_166
	word32 a3_167
	word32 a4_168
	word32 a5_169
	word32 s2_170
	word32 s3_171
	word32 s4_172
	word32 s8_173
	word32 s1_174
	word32 a2_175
	word32 a3_176
	word32 a5_177
	word32 s2_178
	word32 s3_179
	word32 s4_180
	word32 s8_181
	ke_free(ke_free(a0_53, mstatus, out s1_165, out a2_166, out a3_167, out a4_168, out a5_169, out s2_170, out s3_171, out s4_172, out s8_173), mstatus, out s1_174, out a2_175, out a3_176, out a4_95, out a5_177, out s2_178, out s3_179, out s4_180, out s8_181)
l23050D7C_thunk_dbg_test_print:
	word32 s1_122
	word32 s3_128
	word32 s5_129
	word32 s7_131
	word32 a2_182
	word32 a5_183
	word32 a6_184
	word32 s2_185
	word32 s4_186
	word32 s6_187
	word32 s8_188
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_122, out a2_182, out a5_183, out a6_184, out s2_185, out s3_128, out s4_186, out s5_129, out s6_187, out s7_131, out s8_188)
	s1Out = s1_122
	a4Out = a4_95
	s3Out = s3_128
	s5Out = s5_129
	s7Out = s7_131
	s10Out = s10_79
	return ra_61
UpdateEAPOLWcbLenAndTransmit_exit:


word32 keyMgmtProcessMsgExt(word32 dwArg38, word32 dwArg0168, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessRxEAPOL_PwkMsg3
//      ProcessRxEAPOL_GrpMsg1
// MayUse:  Stack +0038:[0..31] Stack +0168:[0..31]
// LiveOut: a0 s1 s2 s7
// Trashed: a0 a1 a2 a5 a6 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: s0 sp
keyMgmtProcessMsgExt_entry:
l23050D80:
	word32 s1_69
	word32 a2_70
	word32 a5_71
	word32 a6_72
	word32 s2_73
	word32 s3_74
	word32 s4_75
	word32 s5_76
	word32 s6_77
	word32 s7_78
	word32 s8_79
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_69, out a2_70, out a5_71, out a6_72, out s2_73, out s3_74, out s4_75, out s5_76, out s6_77, out s7_78, out s8_79)
	word32 s1_43
	word32 s2_48
	word32 s7_52
	word32 a2_80
	word32 a5_81
	word32 a6_82
	word32 s3_83
	word32 s4_84
	word32 s5_85
	word32 s6_86
	word32 s8_87
	dbg_test_print(0x2307C3D0<32>, dwArg0168, out s1_43, out a2_80, out a5_81, out a6_82, out s2_48, out s3_83, out s4_84, out s5_85, out s6_86, out s7_52, out s8_87)
	0<32> = dwArg38
	a0Out = 1<32>
	s2Out = s2_48
	s7Out = s7_52
	return s1_43
keyMgmtProcessMsgExt_exit:


word32 KeyMgmtInitSta(word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s2Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantInitSession
// MayUse:  Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a0 s2 s5
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
KeyMgmtInitSta_entry:
l23050DD4:
	word32 s1_96
	word32 a2_97
	word32 a5_98
	word32 a6_99
	word32 s2_100
	word32 s3_101
	word32 s4_102
	word32 s5_103
	word32 s6_104
	word32 s7_105
	word32 s8_106
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_96, out a2_97, out a5_98, out a6_99, out s2_100, out s3_101, out s4_102, out s5_103, out s6_104, out s7_105, out s8_106)
	word32 s2_107
	KeyMgmtSta_InitSession(dwArg0138, dwArg0158, out s2_107)
l23050E32_thunk_dbg_test_print:
	word32 s2_76
	word32 s5_78
	word32 s1_108
	word32 a2_109
	word32 a5_110
	word32 a6_111
	word32 s3_112
	word32 s4_113
	word32 s6_114
	word32 s7_115
	word32 s8_116
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_108, out a2_109, out a5_110, out a6_111, out s2_76, out s3_112, out s4_113, out s5_78, out s6_114, out s7_115, out s8_116)
	s2Out = s2_76
	s5Out = s5_78
	return 0x2307C3D0<32>
KeyMgmtInitSta_exit:


void keyMgmtSta_StartSession(word32 ra, word32 mstatus, word32 dwArgA8, word32 dwArgC8, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantInitSession
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
keyMgmtSta_StartSession_entry:
l23050E36:
	word32 s5_45
	word32 s6_46
	word32 s1_149
	word32 a2_150
	word32 a5_151
	word32 a6_152
	word32 s2_153
	word32 s3_154
	word32 s4_155
	word32 s7_156
	word32 s8_157
	word32 s0_37 = dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_149, out a2_150, out a5_151, out a6_152, out s2_153, out s3_154, out s4_155, out s5_45, out s6_46, out s7_156, out s8_157)
	Mem51[Mem19[s0_37 + 8<i32>:int32] + 364<i32>:word32] = s0_37
	word32 a2_158
	word32 a3_159
	word32 a4_160
	word32 a5_161
	word32 a6_162
	word32 a7_163
	memcpy(0x2307C3E8<32>, s6_46, 6<32>, out a2_158, out a3_159, out a4_160, out a5_161, out a6_162, out a7_163)
	word32 a4_71
	word32 a2_164
	word32 a3_165
	word32 a5_166
	word32 a6_167
	word32 a7_168
	memcpy(0x2307C40E<32>, s5_45, 6<32>, out a2_164, out a3_165, out a4_71, out a5_166, out a6_167, out a7_168)
	word32 s3_169
	keyMgmtSta_StartSession_internal(ra, a4_71, mstatus, dwArgC8, dwArg0138, dwArg0158, out s3_169)
	0<32> = dwArgA8
l23050ECC_thunk_dbg_test_print:
	word32 s1_170
	word32 a2_171
	word32 a5_172
	word32 a6_173
	word32 s2_174
	word32 s3_175
	word32 s4_176
	word32 s5_177
	word32 s6_178
	word32 s7_179
	word32 s8_180
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_170, out a2_171, out a5_172, out a6_173, out s2_174, out s3_175, out s4_176, out s5_177, out s6_178, out s7_179, out s8_180)
	return
keyMgmtSta_StartSession_exit:


word32 init_customApp_mibs(word32 ra, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantDisable
//      supplicantInit
// MayUse:  ra:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: ra s0 s1 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
init_customApp_mibs_entry:
l23050ED0:
	word32 s1_105
	word32 a2_106
	word32 a5_107
	word32 a6_108
	word32 s2_109
	word32 s3_110
	word32 s4_111
	word32 s5_112
	word32 s6_113
	word32 s7_114
	word32 s8_115
	word32 s0_27 = dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_105, out a2_106, out a5_107, out a6_108, out s2_109, out s3_110, out s4_111, out s5_112, out s6_113, out s7_114, out s8_115)
	word32 t1_116
	word32 a0_117
	word32 a1_118
	word32 a2_119
	word32 a3_120
	word32 a4_121
	word32 a5_122
	word32 t1_123
	word32 a0_124
	word32 a1_125
	word32 a2_126
	word32 a3_127
	word32 a4_128
	word32 a5_129
	word32 ra_59 = memset(memset(ra, s0_27 + 50<i32>, 0<32>, 3<32>, out t1_116, out a0_117, out a1_118, out a2_119, out a3_120, out a4_121, out a5_122), s0_27 + 53<i32>, 0<32>, 0x1C<32>, out t1_123, out a0_124, out a1_125, out a2_126, out a3_127, out a4_128, out a5_129)
	Mem65[s0_27 + 54<i32>:word16] = SLICE(CONVERT(Mem13[s0_27 + 54<i32>:uint16], uint16, word32) | 1<i32>, word16, 0)
l23050F46_thunk_dbg_test_print:
	word32 s1_79
	word32 s4_80
	word32 s3_85
	word32 a2_130
	word32 a5_131
	word32 a6_132
	word32 s2_133
	word32 s5_134
	word32 s6_135
	word32 s7_136
	word32 s8_137
	s0Out = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_79, out a2_130, out a5_131, out a6_132, out s2_133, out s3_85, out s4_80, out s5_134, out s6_135, out s7_136, out s8_137)
	s1Out = s1_79
	s3Out = s3_85
	s4Out = s4_80
	return ra_59
init_customApp_mibs_exit:


word32 supplicantIsEnabled(word32 dwArg0158, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantInitSession
//      supplicantDisable
// MayUse:  Stack +0158:[0..31]
// LiveOut: a0 s2
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
supplicantIsEnabled_entry:
l23050F4A:
	word32 a5_25
	word32 s1_99
	word32 a2_100
	word32 a6_101
	word32 s3_102
	word32 s4_103
	word32 s5_104
	word32 s6_105
	word32 s7_106
	word32 s8_107
	word32 s2_33
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_99, out a2_100, out a5_25, out a6_101, out s2_33, out s3_102, out s4_103, out s5_104, out s6_105, out s7_106, out s8_107)
	word32 a0_39 = 0<32>
	branch a5_25 == 0<32> l23050FA2
l23050F82:
	word32 s1_108
	word32 a2_109
	word32 a5_110
	word32 a6_111
	word32 s3_112
	word32 s4_113
	word32 s5_114
	word32 s6_115
	word32 s7_116
	word32 s8_117
	dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_108, out a2_109, out a5_110, out a6_111, out s2_33, out s3_112, out s4_113, out s5_114, out s6_115, out s7_116, out s8_117)
	a0_39 = 1<32>
l23050FA2:
	s2Out = s2_33
	return a0_39
supplicantIsEnabled_exit:


void supplicantInitSession(word32 ra, word32 mstatus, word32 dwArg88, word32 dwArgA8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_assoc_rsp_handler
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a3 a4 a7 sp t0 t1 t4 t5 t6
supplicantInitSession_entry:
l23050FB0:
	word32 s1_202
	word32 a2_203
	word32 a5_204
	word32 a6_205
	word32 s2_206
	word32 s3_207
	word32 s4_208
	word32 s5_209
	word32 s6_210
	word32 s7_211
	word32 s8_212
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_202, out a2_203, out a5_204, out a6_205, out s2_206, out s3_207, out s4_208, out s5_209, out s6_210, out s7_211, out s8_212)
	word32 s2_213
	branch supplicantIsEnabled(dwArg0138, out s2_213) == 0<32> l23051018
l23050FF6:
	word32 s2_75
	word32 s5_78
	word32 a5_89
	word32 a2_214
	word32 a3_215
	word32 a4_216
	word32 a6_217
	word32 a7_218
	memcpy(KeyMgmtInitSta(dwArg0118, dwArg0138, dwArg0158, out s2_75, out s5_78) + 6<32>, s5_78, s2_75, out a2_214, out a3_215, out a4_216, out a5_89, out a6_217, out a7_218)
	Mem104[a5_89 + 5<i32>:byte] = SLICE(s2_75, byte, 0)
	keyMgmtSta_StartSession(ra, mstatus, dwArg88, dwArgA8, dwArg0118, dwArg0138, dwArg0158)
l23051018:
l23051044_thunk_dbg_test_print:
	word32 s1_219
	word32 a2_220
	word32 a5_221
	word32 a6_222
	word32 s2_223
	word32 s3_224
	word32 s4_225
	word32 s5_226
	word32 s6_227
	word32 s7_228
	word32 s8_229
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_219, out a2_220, out a5_221, out a6_222, out s2_223, out s3_224, out s4_225, out s5_226, out s6_227, out s7_228, out s8_229)
	return
supplicantInitSession_exit:


word32 supplicantDisable(word32 ra, word32 a4, word32 mstatus, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_del
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
supplicantDisable_entry:
l23051048:
	word32 s1_163
	word32 a2_164
	word32 a5_165
	word32 a6_166
	word32 s2_167
	word32 s3_168
	word32 s4_169
	word32 s5_170
	word32 s6_171
	word32 s7_172
	word32 s8_173
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_163, out a2_164, out a5_165, out a6_166, out s2_167, out s3_168, out s4_169, out s5_170, out s6_171, out s7_172, out s8_173)
	word32 s2_46
	word32 a0_39 = supplicantIsEnabled(dwArg0138, out s2_46)
	branch a0_39 == 0<32> l230510C2
l230510C2:
	s2Out = s2_46
	return ra
l23051082:
	word32 a4_72
	word32 a1_174
	word32 a2_175
	word32 a3_176
	word32 a5_177
	mm_timer_clear(a0_39 + 348<i32>, a4, mstatus, out a1_174, out a2_175, out a3_176, out a4_72, out a5_177)
	Mem76[a4_72 + 53<i32>:byte] = SLICE(CONVERT(Mem13[a4_72 + 53<i32>:byte], byte, word32) & 0xFFFFFFFE<32>, byte, 0)
	word32 s0_178
	word32 s1_179
	word32 s3_180
	word32 s4_181
	word32 ra_85 = init_customApp_mibs(ra, dwArg0138, dwArg0158, out s0_178, out s1_179, out s3_180, out s4_181)
l230510BE_thunk_dbg_test_print:
	word32 s2_119
	word32 s1_182
	word32 a2_183
	word32 a5_184
	word32 a6_185
	word32 s3_186
	word32 s4_187
	word32 s5_188
	word32 s6_189
	word32 s7_190
	word32 s8_191
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_182, out a2_183, out a5_184, out a6_185, out s2_119, out s3_186, out s4_187, out s5_188, out s6_189, out s7_190, out s8_191)
	s2Out = s2_119
	return ra_85
supplicantDisable_exit:


word32 supplicantEnable(word32 a4, word32 dwArgA8, word32 dwArg0158, word32 dwArg0178, ptr32 & s1Out, ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_add
// MayUse:  a4:[0..31] Stack +00A8:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a2 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a3 a4 a7 sp t0 t1 t4 t5 t6
supplicantEnable_entry:
l230510D0:
	word32 a1_102
	word32 s4_44
	word32 s2_48
	word32 s3_49
	word32 s5_50
	word32 s6_51
	word32 s8_280
	word32 a5_277
	word32 a6_278
	word32 s7_279
	word32 s1_275
	word32 a2_276
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_275, out a2_276, out a5_277, out a6_278, out s2_48, out s3_49, out s4_44, out s5_50, out s6_51, out s7_279, out s8_280)
	Mem56[a4 + 53<i32>:byte] = SLICE(CONVERT(Mem19[a4 + 53<i32>:byte], byte, word32) | 1<i32>, byte, 0)
	branch s2_48 <u s6_51 + -4<i32> l230511C6
l230511C6:
	branch s6_51 != 3<32> l2305118E
l230511CC:
	Mem64[a4 + 54<i32>:word16] = SLICE(CONVERT(Mem56[a4 + 54<i32>:uint16], uint16, word32) | 8<i32>, word16, 0)
	word32 a2_298
	word32 a3_299
	word32 a4_300
	word32 a5_301
	word32 a6_302
	word32 a7_303
	memcpy(0x2307C3F4<32>, s5_50, 1<32>, out a2_298, out a3_299, out a4_300, out a5_301, out a6_302, out a7_303)
	word32 a5_85
	word32 a2_304
	word32 a3_305
	word32 a4_306
	word32 a6_307
	word32 a7_308
	memcpy(0x2307C42D<32>, s3_49, 1<32>, out a2_304, out a3_305, out a4_306, out a5_85, out a6_307, out a7_308)
	Mem100[a5_85 + 61<i32>:byte] = SLICE(s2_48, byte, 0)
	a1_102 = 0x23082814<32>
l23051128:
	Mem108[a4 + 54<i32>:word16] = SLICE(CONVERT(Mem56[a4 + 54<i32>:uint16], uint16, word32) | 32<i32>, word16, 0)
	Mem112[a4 + 53<i32>:byte] = SLICE(CONVERT(Mem108[a4 + 53<i32>:byte], byte, word32) | 4<i32>, byte, 0)
	Mem116[a4 + 78<i32>:word16] = SLICE(CONVERT(Mem112[a4 + 78<i32>:uint16], uint16, word32) | 1<i32>, word16, 0)
	word32 a2_281
	word32 a3_282
	word32 a4_283
	word32 a5_284
	word32 a6_285
	word32 a7_286
	memcpy(0x2307C3F4<32>, s5_50, 1<32>, out a2_281, out a3_282, out a4_283, out a5_284, out a6_285, out a7_286)
	word32 a5_137
	word32 a2_287
	word32 a3_288
	word32 a4_289
	word32 a6_290
	word32 a7_291
	memcpy(0x2307C42D<32>, s3_49, 1<32>, out a2_287, out a3_288, out a4_289, out a5_137, out a6_290, out a7_291)
	branch s4_44 == 0<32> l230511C0
l230511C0:
	Mem150[a5_137 + 61<i32>:byte] = SLICE(s2_48, byte, 0)
l23051174:
	Mem152[a5_137 + 61<i32>:byte] = 6<8>
l2305117A:
	a1_102 = 0x230827F8<32>
l23051186:
	word32 a2_309
	word32 a3_310
	word32 a4_311
	word32 a5_312
	word32 a6_313
	word32 a7_314
	memcpy(0x2307C467<32>, a1_102, 3<32>, out a2_309, out a3_310, out a4_311, out a5_312, out a6_313, out a7_314)
l2305118E:
	0<32> = dwArgA8
l230511BC_thunk_dbg_test_print:
	word32 a2_199
	word32 s1_203
	word32 s4_204
	word32 s2_208
	word32 s3_209
	word32 a5_292
	word32 a6_293
	word32 s5_294
	word32 s6_295
	word32 s7_296
	word32 s8_297
	word32 s0_202 = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_203, out a2_199, out a5_292, out a6_293, out s2_208, out s3_209, out s4_204, out s5_294, out s6_295, out s7_296, out s8_297)
	s1Out = s1_203
	a2Out = a2_199
	s2Out = s2_208
	s3Out = s3_209
	s4Out = s4_204
	return s0_202
supplicantEnable_exit:


word32 keyMgmtFormatWpaRsnIe(word32 dwArg04, word32 dwArg0158, ptr32 & a0Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg2
// MayUse:  Stack +0004:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
keyMgmtFormatWpaRsnIe_entry:
l2305120A:
	word32 s1_97
	word32 a2_98
	word32 a5_99
	word32 a6_100
	word32 s2_101
	word32 s3_102
	word32 s4_103
	word32 s5_104
	word32 s6_105
	word32 s7_106
	word32 s8_107
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_97, out a2_98, out a5_99, out a6_100, out s2_101, out s3_102, out s4_103, out s5_104, out s6_105, out s7_106, out s8_107)
	word32 s3_57
	word32 s1_108
	word32 a2_109
	word32 a5_110
	word32 a6_111
	word32 s2_112
	word32 s4_113
	word32 s5_114
	word32 s6_115
	word32 s7_116
	word32 s8_117
	dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_108, out a2_109, out a5_110, out a6_111, out s2_112, out s3_57, out s4_113, out s5_114, out s6_115, out s7_116, out s8_117)
	word32 a0_62 = CONVERT(Mem15[s3_57 + 1<i32>:byte], byte, word32)
l2305126C_thunk_mm_get_rsn_wpa_ie:
	word32 a4_74
	a0Out = mm_get_rsn_wpa_ie(a0_62, dwArg04, out a4_74)
	a4Out = a4_74
	return s1
keyMgmtFormatWpaRsnIe_exit:


word32 GeneratePWKMsg2(word32 ra, word32 s1, word32 a3, word32 a4, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg14, word32 dwArg1C, word32 dwArg38, word32 dwArg78, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
// MayUse:  a3:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +001C:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a4 s1 s10
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
GeneratePWKMsg2_entry:
l23051270:
	word32 a0_242
	word32 s1_339
	word32 a2_340
	word32 a5_341
	word32 a6_342
	word32 s2_343
	word32 s3_344
	word32 s4_345
	word32 s5_346
	word32 s6_347
	word32 s7_348
	word32 s8_349
	dbg_test_print(0x2307C3BC<32>, dwArg0138, out s1_339, out a2_340, out a5_341, out a6_342, out s2_343, out s3_344, out s4_345, out s5_346, out s6_347, out s7_348, out s8_349)
	word32 a0_57
	word32 a5_350
	word32 s5_351
	word32 s1_232
	word32 a4_197
	word32 ra_75 = GetTxEAPOLBuffer(ra, a3, a4, mstatus, s2, dwArg0118, out s1_232, out a0_57, out a4_197, out a5_350, out s5_351)
	branch a0_57 == 0<32> l23051350
l23051350:
	a0_242 = 1<32>
l230512C2:
	word32 s0_91
	word32 a4_352
	word32 ra_105 = KeyMgmtSta_PrepareEAPOLFrame(ra_75, dwArgF8, dwArg0118, dwArg0138, out s0_91, out a4_352)
	word32 a4_113 = CONVERT(Mem21[s0_91 + 18<i32>:byte], byte, word32)
	branch a4_113 == 1<32> l23051306
l230512E4:
	word32 a0_121
	word32 s0_129 = keyMgmtFormatWpaRsnIe(dwLoc3C, dwArg0118, out a0_121, out a4_113)
	Mem145[s0_129 + 111<i32>:byte] = SLICE(a0_121, byte, 0)
	Mem147[s0_129 + 112<i32>:byte] = SLICE(a0_121 >>u 8<i32>, byte, 0)
l23051306:
	word32 s1_353
	word32 s3_354
	word32 s5_355
	word32 s7_356
	UpdateEAPOLWcbLenAndTransmit(KeyMgmtSta_PopulateEAPOLLengthMic(ra_105, a4_113, dwArgE8, dwArg0108), fflags, frm, mstatus, dwLoc18, dwArg14, dwArg1C, dwArg38, s1, dwArg78, dwArg0118, dwArg0138, out s1_353, out a4_197, out s3_354, out s5_355, out s7_356, out s10)
	word32 a2_357
	word32 a5_358
	word32 a6_359
	word32 s2_360
	word32 s3_361
	word32 s4_362
	word32 s5_363
	word32 s6_364
	word32 s7_365
	word32 s8_366
	dbg_test_print(0x2307C3D0<32>, dwArg0138, out s1_232, out a2_357, out a5_358, out a6_359, out s2_360, out s3_361, out s4_362, out s5_363, out s6_364, out s7_365, out s8_366)
	a0_242 = 0<32>
l2305133C:
	0<32> = dwArg0198
	a0Out = a0_242
	a4Out = a4_197
	s10Out = s10
	return s1_232
GeneratePWKMsg2_exit:


word32 KeyMgmtStaHsk_Recvd_PWKMsg1(word32 ra, word32 s0, word32 s1, word32 s2, word32 s4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg0C, word32 dwArg18, word32 dwArg38, word32 dwArg44, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0198, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessKeyMgmtDataSta
// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a4 s10
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s8 sp
KeyMgmtStaHsk_Recvd_PWKMsg1_entry:
l23051354:
	word32 s1_449
	word32 a2_450
	word32 a5_451
	word32 a6_452
	word32 s2_453
	word32 s3_454
	word32 s4_455
	word32 s5_456
	word32 s7_458
	word32 s6_457
	word32 s8_459
	dbg_test_print(0x2307C3BC<32>, dwArg0138, out s1_449, out a2_450, out a5_451, out a6_452, out s2_453, out s3_454, out s4_455, out s5_456, out s6_457, out s7_458, out s8_459)
	word32 a0_57
	word32 a3_461
	word32 s1_460
	word32 s7_463
	word32 s2_462
	word32 s9_464
	word32 s10_234
	word32 a4_113
	word32 ra_65 = GetKeyMsgNonceFromEAPOL(ra, dwLoc40, dwLoc3C, dwLoc18, dwLoc08, dwArg0C, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s1_460, out a0_57, out a3_461, out a4_113, out s2_462, out s7_463, out s9_464, out s10_234)
	branch a0_57 != 0<32> l230513C6
l230513C6:
	word32 a0_88
	word32 s3_465
	word32 s4_466
	word32 s2_160
	word32 a4_186
	supplicantAkmIsWpaWpa2(dwArg0118, out a0_88, out a4_186, out s2_160, out s3_465, out s4_466)
	word32 s1_106 = a0_88
	branch a0_88 == 0<32> l23051424
l230513D8:
	branch supplicantAkmIsWpaWpa2Psk(dwArgF8, dwArg0118, out a4_113) == 0<32> l230513AA
l230513E6:
	branch pmkCacheFindPSK(ra_65, mstatus, s2, dwArg18, s1, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out a4_113) == 0<32> l230513AA
l230513F8:
	s2_160 = supplicantAkmUsesKdf(dwArg0108, dwArg0128)
	a4_186 = KeyMgmtSta_DeriveKeys(ra_65)
	s1_106 = 1<32>
l23051424:
	word32 a0_212
	word32 s1_221 = GeneratePWKMsg2(ra_65, s1_106, 0<32>, a4_186, s2_160, fflags, frm, mstatus, s4, s0, dwLoc08, dwArg38, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0158, out a0_212, out a4_113, out s10_234)
	branch a0_212 != 0<32> l2305146C
l2305146C:
l23051436:
	branch s1_221 != 1<32> l2305144A
l2305143C:
	word32 s3_478
	word32 s5_479
	Mem269[updateApReplayCounter(dwArg44, dwArg0118, out a4_113, out s3_478, out s5_479) + 204<i32>:word32] = 0<32>
l2305144A:
	word32 s1_467
	word32 a2_468
	word32 a5_469
	word32 a6_470
	word32 s2_471
	word32 s3_472
	word32 s4_473
	word32 s5_474
	word32 s6_475
	word32 s7_476
	word32 s8_477
	dbg_test_print(0x2307C3D0<32>, dwArg0138, out s1_467, out a2_468, out a5_469, out a6_470, out s2_471, out s3_472, out s4_473, out s5_474, out s6_475, out s7_476, out s8_477)
l230513AA:
l230513AC:
	0<32> = dwArg0198
	s10Out = s10_234
	return a4_113
KeyMgmtStaHsk_Recvd_PWKMsg1_exit:


word32 supplicantInit(word32 ra, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0178, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_init
// MayUse:  ra:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
supplicantInit_entry:
l23051470:
	word32 s1_149
	word32 a2_150
	word32 a5_151
	word32 a6_152
	word32 s2_153
	word32 s3_154
	word32 s4_155
	word32 s5_156
	word32 s6_157
	word32 s7_158
	word32 s8_159
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_149, out a2_150, out a5_151, out a6_152, out s2_153, out s3_154, out s4_155, out s5_156, out s6_157, out s7_158, out s8_159)
	word32 s0_50
	word32 s4_54
	word32 s1_160
	word32 s3_161
	word32 t1_162
	word32 a0_163
	word32 a1_164
	word32 a2_165
	word32 a3_166
	word32 a4_167
	word32 a5_168
	word32 t1_169
	word32 a0_170
	word32 a1_171
	word32 a2_172
	word32 a3_173
	word32 a4_174
	word32 a5_175
	memset(memset(init_customApp_mibs(ra, dwArg0138, dwArg0158, out s0_50, out s1_160, out s3_161, out s4_54), s0_50 + 408<i32>, 255<i32>, 4<32>, out t1_162, out a0_163, out a1_164, out a2_165, out a3_166, out a4_167, out a5_168), s4_54, 0<32>, 324<i32>, out t1_169, out a0_170, out a1_171, out a2_172, out a3_173, out a4_174, out a5_175)
	Mem89[s0_50 + 344<i32>:word32] = 0<32>
	Mem90[s0_50 + 340<i32>:word32] = 1<32>
	Mem91[s0_50 + 336<i32>:byte] = 0<8>
	word32 s3_176
	KeyMgmtResetCounter(dwArg0148, dwArg0158, out s3_176)
l230514FE_thunk_dbg_test_print:
	word32 s1_124
	word32 s2_129
	word32 a2_177
	word32 a5_178
	word32 a6_179
	word32 s3_180
	word32 s4_181
	word32 s5_182
	word32 s6_183
	word32 s7_184
	word32 s8_185
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_124, out a2_177, out a5_178, out a6_179, out s2_129, out s3_180, out s4_181, out s5_182, out s6_183, out s7_184, out s8_185)
	s2Out = s2_129
	return s1_124
supplicantInit_exit:


word32 allocSupplicantData(word32 ra, word32 dwArg38, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, word32 dwArg0178, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_init
// MayUse:  ra:[0..31] Stack +0038:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a2 a3 ra s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
allocSupplicantData_entry:
l23051502:
	word32 s2_31
	word32 s3_32
	word32 s1_149
	word32 a2_150
	word32 a5_151
	word32 a6_152
	word32 s4_153
	word32 s5_154
	word32 s6_155
	word32 s7_156
	word32 s8_157
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_149, out a2_150, out a5_151, out a6_152, out s2_31, out s3_32, out s4_153, out s5_154, out s6_155, out s7_156, out s8_157)
	branch Mem11[s2_31 + 8<i32>:int32] != 0<32> l23051586
l23051586:
	0<32> = dwArg38
	s0Out = s0
	a0Out = 0x2307C3BC<32>
	a2Out = dwArg10
	a3Out = a3
	s2Out = s2_31
	s3Out = s3_32
	return ra
l23051538:
	word32 a5_41 = CONVERT(Mem11[s2_31:byte], byte, word32)
	branch a5_41 == 0<32> l23051568
l23051568:
	word32 s1_43 = Mem11[a5_41:word32]
	branch a5_41 != 0<32> l2305153E
l23051574:
	Mem46[1<32>:word32] = s1_43
	word32 s2_57
	Mem68[s2_57 + 8<i32>:word32] = supplicantInit(ra, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s2_57)
l2305153E:
	0<32> = dwArg38
l23051564_thunk_dbg_test_print:
	word32 a2_81
	word32 s2_90
	word32 s3_91
	word32 s1_158
	word32 a5_159
	word32 a6_160
	word32 s4_161
	word32 s5_162
	word32 s6_163
	word32 s7_164
	word32 s8_165
	s0Out = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_158, out a2_81, out a5_159, out a6_160, out s2_90, out s3_91, out s4_161, out s5_162, out s6_163, out s7_164, out s8_165)
	a0Out = 0x2307C3D0<32>
	a2Out = a2_81
	a3Out = a3
	s2Out = s2_90
	s3Out = s3_91
	return ra
allocSupplicantData_exit:


word32 keyMgmtGetKeySize(word32 dwArg38, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      add_key_to_mac
//      add_mfp_key_to_mac
// MayUse:  Stack +0038:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 s0 s1 s2
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
keyMgmtGetKeySize_entry:
l23051592:
	word32 s1_103
	word32 a2_104
	word32 a5_105
	word32 a6_106
	word32 s2_107
	word32 s3_108
	word32 s4_109
	word32 s5_110
	word32 s6_111
	word32 s7_112
	word32 s8_113
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_103, out a2_104, out a5_105, out a6_106, out s2_107, out s3_108, out s4_109, out s5_110, out s6_111, out s7_112, out s8_113)
	word32 s1_114
	word32 a2_115
	word32 a5_116
	word32 a6_117
	word32 s2_118
	word32 s3_119
	word32 s4_120
	word32 s5_121
	word32 s6_122
	word32 s7_123
	word32 s8_124
	dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_114, out a2_115, out a5_116, out a6_117, out s2_118, out s3_119, out s4_120, out s5_121, out s6_122, out s7_123, out s8_124)
l230515F8_thunk_keyMgmtGetKeySize_internal:
	word32 a0_71
	word32 s2_78
	s1Out = keyMgmtGetKeySize_internal(dwArg38, dwArg0168, out a0_71, out s2_78)
	a0Out = a0_71
	s2Out = s2_78
	return s1
keyMgmtGetKeySize_exit:


word32 add_key_to_mac(word32 ra, word32 s1, word32 a0, word32 a1, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArgC8, word32 dwArg0118, word32 dwArg0128, word32 dwArg01B4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      keyMgmtKeyGroupTxDone.isra.1
//      keyMgmtPlumbPairwiseKey
//      ProcessPWKMsg4
//      InitGroupKey
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +01B4:[0..31]
// LiveOut: a0 a3 a4 a5 ra s1 s10 s2 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
add_key_to_mac_entry:
l230515FC:
	word32 s1_14 = a0
	word32 s2_16 = a1
	word32 s0_17 = 0x10<32>
	branch CONVERT(Mem11[a0:byte], byte, word32) != 0<32> l2305161A
l23051612:
	word32 a0_18
	keyMgmtGetKeySize(dwLoc08, dwArg0118, dwArg0128, out s1_14, out a0_18, out s2_16)
	s0_17 = a0_18 & 255<i32>
l2305161A:
	word32 a1_66
	word32 a1_42
	word32 a4_302
	word32 a5_303
	word32 t1_298
	word32 a2_300
	word32 a3_301
	word32 a0_299
	word32 ra_47 = memset(ra, fp + -60<i32>, 0<32>, 44<i32>, out t1_298, out a0_299, out a1_42, out a2_300, out a3_301, out a4_302, out a5_303)
	word32 a5_55 = CONVERT(Mem52[s1_14:byte], byte, word32)
	branch s2_16 == 0<32> l23051670
l23051670:
	branch a5_55 != 0<32> l2305168E
l2305168E:
	word32 a4_326
	word32 a5_327
	word32 a0_60 = cm_GetApInfo(s1_14, out a4_326, out a5_327)
	a1_66 = a0_60 + 204<i32>
	bLoc3C = SLICE(CONVERT(Mem58[a0_60 + 242<i32>:uint16], uint16, word32), byte, 0)
l2305167C:
	a1_66 = a1_42 + 256<i32>
	bLoc3C = SLICE(CONVERT(Mem58[a1_42 + 294<i32>:uint16], uint16, word32), byte, 0)
l2305163A:
	branch a5_55 != 0<32> l23051668
l23051668:
	a1_66 = s1_14 + 196<i32>
l23051648:
	a1_66 = a1_42 + 216<i32>
l23051650:
	word32 a4_330
	word32 a6_332
	word32 a7_333
	word32 a5_331
	word32 a2_328
	word32 a3_329
	memcpy(fp + -52<i32>, a1_66, s0_17, out a2_328, out a3_329, out a4_330, out a5_331, out a6_332, out a7_333)
	byte bLoc38_201 = SLICE(s0_17, byte, 0)
	branch s0_17 != 0x10<32> l230516A4
l230516A4:
	branch s0_17 != 32<i32> l230516F8
l230516F8:
	branch s0_17 != 0xD<32> l23051702
l23051702:
	branch s0_17 != 5<32> l2305170E
l2305170E:
	assert_err()
l23051708:
l230516FE:
l230516AC:
	branch s2_16 == 0<32> l230516C6
l230516B6:
	0<32> = dwArg01B4
l23051660:
l23051662:
l230516C6:
	word32 s10_147
	word32 a0_160
	word32 a3_163
	word32 a4_164
	word32 a5_165
	word32 s1_170
	word32 s2_171
	word32 s5_174
	word32 s0_322
	word32 s3_324
	word32 s4_325
	word32 a2_323
	word32 s8_318
	word32 s11_320
	word32 t4_321
	word32 s9_319
	word32 s4_314
	word32 s6_316
	word32 s7_317
	word32 s5_315
	word32 a5_310
	word32 s2_312
	word32 s3_313
	word32 a7_311
	word32 a1_306
	word32 a3_308
	word32 a4_309
	word32 a2_307
	word32 s1_304
	word32 a0_305
	word32 ra_168 = mm_sec_machwkey_wr(printf(ra_47, 0x2307C63C<32>, CONVERT(bLoc3C, byte, word32), SEQ(nLoc37, bLoc38_201), dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_304, out a0_305, out a1_306, out a2_307, out a3_308, out a4_309, out a5_310, out a7_311, out s2_312, out s3_313, out s4_314, out s5_315, out s6_316, out s7_317, out s8_318, out s9_319, out s10_147, out s11_320, out t4_321), fp + -60<i32>, dwArgC8, out s0_322, out s1_170, out a0_160, out a2_323, out a3_163, out a4_164, out a5_165, out s2_171, out s3_324, out s4_325, out s5_174)
	s1Out = s1_170
	a0Out = a0_160
	a3Out = a3_163
	a4Out = a4_164
	a5Out = a5_165
	s2Out = s2_171
	s5Out = s5_174
	s10Out = s10_147
	return ra_168
add_key_to_mac_exit:


word32 keyMgmtKeyGroupTxDone.isra.1(word32 ra, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg6C, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0168, word32 dwArg01A4, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GenerateGrpMsg2
//      GeneratePWKMsg4
// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0168:[0..31] Stack +01A4:[0..31]
// LiveOut: a4 ra s10 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
keyMgmtKeyGroupTxDone.isra.1_entry:
l23051728:
	word32 s1_24
	word32 s8_234
	word32 s7_233
	word32 s6_232
	word32 s5_231
	word32 s4_230
	word32 s3_229
	word32 s2_228
	word32 a6_227
	word32 a5_226
	word32 a2_225
	word32 s0_34 = Mem9[dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_24, out a2_225, out a5_226, out a6_227, out s2_228, out s3_229, out s4_230, out s5_231, out s6_232, out s7_233, out s8_234):word32]
	word32 a0_36 = CONVERT(Mem9[s0_34 + 3<i32>:byte], byte, word32)
	branch a0_36 == 255<i32> l23051768
l23051764:
	word32 a4_237
	mm_sec_machwkey_del(a0_36, out a4_237)
l23051768:
	word32 a0_52
	word32 a5_57
	word32 s1_62
	word32 s2_65
	word32 s5_68
	word32 a4_236
	word32 a3_235
	word32 s10_106
	word32 ra_103 = add_key_to_mac(ra, s1_24, s0_34, 0<32>, dwArg20, dwArg24, dwArg6C, dwArgB8, dwArg0108, dwArg0118, dwArg01A4, out s1_62, out a0_52, out a3_235, out a4_236, out a5_57, out s2_65, out s5_68, out s10_106)
	Mem81[Mem9[a5_57 + 8<i32>:word32] + 3<i32>:byte] = SLICE(a0_52, byte, 0)
	Mem83[a5_57 + 200<i32>:word32] = 1<32>
	word32 a4_211 = 1<32>
	word32 s0_84 = Mem83[a5_57 + 8<i32>:word32]
	word32 a3_85 = Mem83[a5_57 + 204<i32>:int32]
	branch a3_85 != 0<32> l23051792
l23051784:
	Mem86[a5_57 + 204<i32>:word32] = 1<32>
	ra_103 = sm_handle_supplicant_result(ra_103, s1_62, CONVERT(Mem86[s0_84 + 1<i32>:byte], byte, word32), 0<32>, a3_85, s2_65, s5_68, fflags, frm, mstatus, dwLoc08, dwArg08, dwArg30, dwArg34, dwArg40, dwArg44, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgD8, dwArgF8, dwArg0118, out a4_211, out s10_106)
l23051792:
	word32 s1_238
	word32 a2_239
	word32 s3_143
	word32 a5_240
	word32 a6_241
	word32 s2_242
	word32 s4_243
	word32 s5_244
	word32 s6_245
	word32 s7_246
	word32 s8_247
	dbg_test_print(0x2307C3D0<32>, dwArg0168, out s1_238, out a2_239, out a5_240, out a6_241, out s2_242, out s3_143, out s4_243, out s5_244, out s6_245, out s7_246, out s8_247)
	a4Out = a4_211
	s3Out = s3_143
	s10Out = s10_106
	return ra_103
keyMgmtKeyGroupTxDone.isra.1_exit:


word32 GenerateGrpMsg2(word32 ra, word32 s1, word32 a3, word32 a4, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg14, word32 dwArg1C, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0164, word32 dwArg0198, ptr32 & a4Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_GrpMsg1
// MayUse:  a3:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0164:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a4 s10
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
GenerateGrpMsg2_entry:
l230517BE:
	word32 a0_220
	word32 s1_317
	word32 a2_318
	word32 a5_319
	word32 a6_320
	word32 s2_321
	word32 s3_322
	word32 s4_323
	word32 s5_324
	word32 s6_325
	word32 s7_326
	word32 s8_327
	dbg_test_print(0x2307C3BC<32>, dwArg0138, out s1_317, out a2_318, out a5_319, out a6_320, out s2_321, out s3_322, out s4_323, out s5_324, out s6_325, out s7_326, out s8_327)
	word32 a0_54
	word32 s1_328
	word32 a5_329
	word32 s5_330
	word32 a4_177
	word32 ra_72 = GetTxEAPOLBuffer(ra, a3, a4, mstatus, s2, dwArg0118, out s1_328, out a0_54, out a4_177, out a5_329, out s5_330)
	branch a0_54 == 0<32> l23051870
l23051870:
	a0_220 = 1<32>
l2305180C:
	word32 a4_100
	word32 s0_331
	word32 a4_332
	word32 s3_333
	word32 s10_334
	word32 s1_335
	word32 s3_336
	word32 s5_337
	word32 s7_338
	UpdateEAPOLWcbLenAndTransmit(keyMgmtKeyGroupTxDone.isra.1(KeyMgmtSta_PopulateEAPOLLengthMic(KeyMgmtSta_PrepareEAPOLFrame(ra_72, dwArgF8, dwArg0118, dwArg0138, out s0_331, out a4_100), a4_100, dwArgE8, dwArg0108), fflags, frm, mstatus, dwLoc38, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg28, dwArg2C, dwArg3C, dwArg48, dwArg4C, s1, dwArg68, dwArg78, dwArg7C, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArg0128, dwArg0164, out a4_332, out s3_333, out s10_334), fflags, frm, mstatus, dwLoc18, dwArg14, dwArg1C, dwArg38, s1, dwArg78, dwArg0118, dwArg0138, out s1_335, out a4_177, out s3_336, out s5_337, out s7_338, out s10)
	word32 s1_339
	word32 a2_340
	word32 a5_341
	word32 a6_342
	word32 s2_343
	word32 s3_344
	word32 s4_345
	word32 s5_346
	word32 s6_347
	word32 s7_348
	word32 s8_349
	dbg_test_print(0x2307C3D0<32>, dwArg0138, out s1_339, out a2_340, out a5_341, out a6_342, out s2_343, out s3_344, out s4_345, out s5_346, out s6_347, out s7_348, out s8_349)
	a0_220 = 0<32>
l2305185C:
	0<32> = dwArg0198
	a4Out = a4_177
	s10Out = s10
	return a0_220
GenerateGrpMsg2_exit:


word32 KeyMgmtStaHsk_Recvd_GrpMsg1(word32 ra, word32 s2, word32 s3, word32 s4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg2C, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0144, word32 dwArg0158, word32 dwArg0178, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessKeyMgmtDataSta
// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0144:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a4 s10
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtStaHsk_Recvd_GrpMsg1_entry:
l23051874:
	word32 s1_263
	word32 a2_264
	word32 a5_265
	word32 a6_266
	word32 s2_267
	word32 s3_268
	word32 s4_269
	word32 s5_270
	word32 s6_271
	word32 s7_272
	word32 s8_273
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_263, out a2_264, out a5_265, out a6_266, out s2_267, out s3_268, out s4_269, out s5_270, out s6_271, out s7_272, out s8_273)
	word32 a0_48
	word32 a3_51
	word32 s2_61
	word32 s10_104
	word32 a4_117
	word32 ra_56 = ProcessRxEAPOL_GrpMsg1(ra, mstatus, s2, dwLoc04, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out a0_48, out a3_51, out a4_117, out s2_61, out s10_104)
	branch a0_48 != 0<32> l230518D2
l230518D2:
	branch GenerateGrpMsg2(ra_56, a0_48, a3_51, a4_117, s2_61, fflags, frm, mstatus, dwLoc20, s4, dwLoc0C, dwLoc04, dwArg08, dwArg0C, dwArg18, dwArg1C, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg5C, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0144, dwArg0178, out a4_117, out s10_104) != 0<32> l230518BC
l230518DE:
	word32 s3_274
	word32 s5_275
	updateApReplayCounter(s3, dwArg0138, out a4_117, out s3_274, out s5_275)
	word32 s1_276
	word32 a2_277
	word32 a5_278
	word32 a6_279
	word32 s2_280
	word32 s3_281
	word32 s4_282
	word32 s5_283
	word32 s6_284
	word32 s7_285
	word32 s8_286
	dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_276, out a2_277, out a5_278, out a6_279, out s2_280, out s3_281, out s4_282, out s5_283, out s6_284, out s7_285, out s8_286)
l230518BC:
l230518BE:
	s10Out = s10_104
	return a4_117
KeyMgmtStaHsk_Recvd_GrpMsg1_exit:


word32 add_mfp_key_to_mac(word32 ra, word32 s1, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArgC8, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      keyMgmtPlumbPairwiseKey
// MayUse:  ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: ra s0 s10
// Trashed: a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
add_mfp_key_to_mac_entry:
l23051902:
	word32 a1_56
	word32 a0_16
	word32 s2_24
	word32 s1_227
	word32 s0_22 = keyMgmtGetKeySize(dwLoc08, dwArg0118, dwArg0128, out s1_227, out a0_16, out s2_24)
	word32 a1_38
	word32 a5_233
	word32 a3_231
	word32 a4_232
	word32 a0_229
	word32 a2_230
	word32 t1_228
	word32 ra_43 = memset(ra, fp + -60<i32>, 0<32>, 44<i32>, out t1_228, out a0_229, out a1_38, out a2_230, out a3_231, out a4_232, out a5_233)
	byte bLoc38_173 = SLICE(a0_16 & 255<i32>, byte, 0)
	word32 a5_53 = CONVERT(Mem52[s0_22:byte], byte, word32)
	branch s2_24 == 0<32> l2305199A
l2305199A:
	branch a5_53 != 0<32> l23051956
l2305199C:
	a1_56 = a1_38 + 256<i32>
l23051946:
	branch a5_53 != 0<32> l23051956
l23051948:
	a1_56 = a1_38 + 216<i32>
l23051950:
	word32 a2_280
	word32 a3_281
	word32 a4_282
	word32 a5_283
	word32 a6_284
	word32 a7_285
	memcpy(fp + -52<i32>, a1_56, a0_16 & 255<i32>, out a2_280, out a3_281, out a4_282, out a5_283, out a6_284, out a7_285)
l23051956:
	word32 dwLoc38_200 = SEQ(nLoc37, bLoc38_173)
	word32 a0_112
	word32 a3_115
	word32 s10_148
	word32 s11_251
	word32 t4_252
	word32 s9_249
	word32 s10_250
	word32 s7_247
	word32 s8_248
	word32 s5_245
	word32 s6_246
	word32 s3_243
	word32 s4_244
	word32 a7_241
	word32 s2_242
	word32 a4_239
	word32 a5_240
	word32 a2_237
	word32 a3_238
	word32 a0_235
	word32 a1_236
	word32 s1_234
	word32 s0_253
	word32 s1_254
	word32 a2_255
	word32 a4_256
	word32 a5_257
	word32 s2_258
	word32 s3_259
	word32 s4_260
	word32 s5_261
	word32 s1_262
	word32 a0_263
	word32 a1_264
	word32 a2_265
	word32 a3_266
	word32 a4_267
	word32 a5_268
	word32 a7_269
	word32 s2_270
	word32 s3_271
	word32 s4_272
	word32 s5_273
	word32 s6_274
	word32 s7_275
	word32 s8_276
	word32 s9_277
	word32 s11_278
	word32 t4_279
	word32 ra_146 = printf(mm_sec_machwkey_wr(printf(ra_43, 0x2307C688<32>, 4<32>, dwLoc38_200, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_234, out a0_235, out a1_236, out a2_237, out a3_238, out a4_239, out a5_240, out a7_241, out s2_242, out s3_243, out s4_244, out s5_245, out s6_246, out s7_247, out s8_248, out s9_249, out s10_250, out s11_251, out t4_252), fp + -60<i32>, dwArgC8, out s0_253, out s1_254, out a0_112, out a2_255, out a3_115, out a4_256, out a5_257, out s2_258, out s3_259, out s4_260, out s5_261), 0x2307C6D8<32>, a3_115, dwLoc38_200, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_262, out a0_263, out a1_264, out a2_265, out a3_266, out a4_267, out a5_268, out a7_269, out s2_270, out s3_271, out s4_272, out s5_273, out s6_274, out s7_275, out s8_276, out s9_277, out s10_148, out s11_278, out t4_279)
	s0Out = a0_112
	s10Out = s10_148
	return ra_146
add_mfp_key_to_mac_exit:


word32 keyMgmtPlumbPairwiseKey(word32 ra, word32 dwArg20, word32 dwArg24, word32 dwArg6C, word32 dwArgB8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0168, word32 dwArg0178, word32 dwArg01A4, ptr32 & s0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      keyMgmtKeyPairwiseTxDone.isra.2
// MayUse:  ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +006C:[0..31] Stack +00B8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +01A4:[0..31]
// LiveOut: ra s0 s10 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
keyMgmtPlumbPairwiseKey_entry:
l230519A6:
	word32 s1_24
	word32 a2_177
	word32 a5_178
	word32 a6_179
	word32 s2_180
	word32 s3_181
	word32 s4_182
	word32 s5_183
	word32 s6_184
	word32 s7_185
	word32 s8_186
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_24, out a2_177, out a5_178, out a6_179, out s2_180, out s3_181, out s4_182, out s5_183, out s6_184, out s7_185, out s8_186)
	word32 s0_34 = Mem9[0x2307C3C4<32>:word32]
	word32 a2_187
	word32 a3_188
	word32 a4_189
	word32 a5_190
	word32 a6_191
	word32 a7_192
	memcpy(0x2307C494<32>, 0x2307C4E4<32>, 40<i32>, out a2_187, out a3_188, out a4_189, out a5_190, out a6_191, out a7_192)
	word32 a0_53
	word32 a5_58
	word32 s1_63
	word32 a3_193
	word32 a4_194
	word32 s2_195
	word32 s5_196
	word32 s10_165
	word32 ra_164 = add_key_to_mac(ra, s1_24, s0_34, 1<32>, dwArg20, dwArg24, dwArg6C, dwArgB8, dwArg0108, dwArg0118, dwArg01A4, out s1_63, out a0_53, out a3_193, out a4_194, out a5_58, out s2_195, out s5_196, out s10_165)
	word32 s0_81 = Mem9[a5_58 + 8<i32>:word32]
	Mem82[s0_81 + 4<i32>:byte] = SLICE(a0_53, byte, 0)
	branch CONVERT(Mem82[a5_58 + 61<i32>:byte], byte, word32) != 6<32> l23051A0A
l230519FE:
	word32 s0_95
	ra_164 = add_mfp_key_to_mac(ra_164, s1_63, dwArg20, dwArg24, dwArg6C, dwArgB8, dwArg0108, dwArg0118, out s0_95, out s10_165)
	Mem114[s0_95 + 5<i32>:byte] = SLICE(s0_81, byte, 0)
l23051A0A:
l23051A2E_thunk_dbg_test_print:
	word32 s2_138
	word32 s3_139
	word32 s1_197
	word32 a2_198
	word32 a5_199
	word32 a6_200
	word32 s4_201
	word32 s5_202
	word32 s6_203
	word32 s7_204
	word32 s8_205
	s0Out = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_197, out a2_198, out a5_199, out a6_200, out s2_138, out s3_139, out s4_201, out s5_202, out s6_203, out s7_204, out s8_205)
	s2Out = s2_138
	s3Out = s3_139
	s10Out = s10_165
	return ra_164
keyMgmtPlumbPairwiseKey_exit:


word32 keyMgmtKeyPairwiseTxDone.isra.2(word32 ra, word32 dwArg00, word32 dwArg04, word32 dwArg4C, word32 dwArg98, word32 dwArgE8, word32 dwArgF8, word32 dwArg0148, word32 dwArg0158, word32 dwArg0184, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg4
// MayUse:  ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +004C:[0..31] Stack +0098:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0184:[0..31]
// LiveOut: a4 ra s10 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
keyMgmtKeyPairwiseTxDone.isra.2_entry:
l23051A32:
	word32 s1_117
	word32 a2_118
	word32 a5_119
	word32 a6_120
	word32 s2_121
	word32 s3_122
	word32 s4_123
	word32 s5_124
	word32 s6_125
	word32 s7_126
	word32 s8_127
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_117, out a2_118, out a5_119, out a6_120, out s2_121, out s3_122, out s4_123, out s5_124, out s6_125, out s7_126, out s8_127)
	word32 s10_51
	word32 s3_54
	word32 s0_128
	word32 s2_129
	word32 ra_48 = keyMgmtPlumbPairwiseKey(ra, dwArg00, dwArg04, dwArg4C, dwArg98, dwArgE8, dwArgF8, dwArg0148, dwArg0158, dwArg0184, out s0_128, out s2_129, out s3_54, out s10_51)
	Mem71[Mem13[s3_54 + 8<i32>:int32] + 208<i32>:word32] = 1<32>
	word32 s3_86
	word32 s1_130
	word32 a2_131
	word32 a5_132
	word32 a6_133
	word32 s2_134
	word32 s4_135
	word32 s5_136
	word32 s6_137
	word32 s7_138
	word32 s8_139
	dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_130, out a2_131, out a5_132, out a6_133, out s2_134, out s3_86, out s4_135, out s5_136, out s6_137, out s7_138, out s8_139)
	a4Out = 1<32>
	s3Out = s3_86
	s10Out = s10_51
	return ra_48
keyMgmtKeyPairwiseTxDone.isra.2_exit:


word32 GeneratePWKMsg4(word32 ra, word32 s1, word32 a3, word32 a4, word32 s2, word32 s7, word32 s9, word32 fflags, word32 frm, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg0C, word32 dwArg14, word32 dwArg1C, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0144, word32 dwArg0164, word32 dwArg0198, ptr32 & a4Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg3
// MayUse:  a3:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s7:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0144:[0..31] Stack +0164:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a4 s10
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s8 sp
GeneratePWKMsg4_entry:
l23051AA0:
	word32 a0_328
	word32 s1_459
	word32 a2_460
	word32 a5_461
	word32 a6_462
	word32 s2_463
	word32 s3_464
	word32 s4_465
	word32 s5_466
	word32 s6_467
	word32 s7_468
	word32 s8_469
	dbg_test_print(0x2307C3BC<32>, dwArg0138, out s1_459, out a2_460, out a5_461, out a6_462, out s2_463, out s3_464, out s4_465, out s5_466, out s6_467, out s7_468, out s8_469)
	word32 a0_62
	word32 s1_470
	word32 a5_471
	word32 s5_472
	word32 a4_186
	word32 ra_80 = GetTxEAPOLBuffer(ra, a3, a4, mstatus, s2, dwArg0118, out s1_470, out a0_62, out a4_186, out a5_471, out s5_472)
	branch a0_62 == 0<32> l23051BA4
l23051BA4:
	a0_328 = 1<32>
l23051AF6:
	word32 s3_196
	word32 a4_108
	word32 s5_168
	word32 s7_170
	word32 s0_473
	word32 s1_474
	word32 a4_475
	word32 s3_476
	word32 s10_477
	word32 ra_160 = UpdateEAPOLWcbLenAndTransmit(KeyMgmtSta_PopulateEAPOLLengthMic(KeyMgmtSta_PrepareEAPOLFrame(ra_80, dwArgF8, dwArg0118, dwArg0138, out s0_473, out a4_108), a4_108, dwArgE8, dwArg0108), fflags, frm, mstatus, dwLoc18, dwArg14, dwArg1C, dwArg38, s1, dwArg78, dwArg0118, dwArg0138, out s1_474, out a4_475, out s3_476, out s5_168, out s7_170, out s10_477)
	branch s7_170 == 0<32> l23051B9C
l23051B9C:
	keyMgmtKeyPairwiseTxDone.isra.2(ra_160, dwLoc40, dwLoc3C, dwArg0C, s1, dwArgA8, dwArgB8, dwArg0108, dwArg0118, dwArg0144, out a4_186, out s3_196, out s10)
l23051B2C:
	word32 s1_478
	word32 a2_479
	word32 a5_480
	word32 a6_481
	word32 s2_482
	word32 s3_483
	word32 s4_484
	word32 s5_485
	word32 s6_486
	word32 s7_487
	word32 s8_488
	dbg_test_print(s5_168 + 956<i32>, dwArg0138, out s1_478, out a2_479, out a5_480, out a6_481, out s2_482, out s3_483, out s4_484, out s5_485, out s6_486, out s7_487, out s8_488)
	word32 s3_272
	word32 a4_489
	word32 s3_490
	word32 s10_491
	keyMgmtKeyGroupTxDone.isra.1(keyMgmtKeyPairwiseTxDone.isra.2(ra_160, dwLoc40, dwLoc3C, dwArg0C, s1, dwArgA8, dwArgB8, dwArg0108, dwArg0118, dwArg0144, out a4_489, out s3_490, out s10_491), fflags, frm, mstatus, dwLoc38, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg28, dwArg2C, dwArg3C, s9, s7, s1, dwArg68, dwArg78, dwArg7C, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArg0128, dwArg0164, out a4_186, out s3_272, out s10)
	word32 s1_492
	word32 a2_493
	word32 a5_494
	word32 a6_495
	word32 s2_496
	word32 s4_497
	word32 s5_498
	word32 s6_499
	word32 s7_500
	word32 s8_501
	dbg_test_print(s3_272 + 976<i32>, dwArg0138, out s1_492, out a2_493, out a5_494, out a6_495, out s2_496, out s3_196, out s4_497, out s5_498, out s6_499, out s7_500, out s8_501)
l23051B64:
	word32 s1_502
	word32 a2_503
	word32 a5_504
	word32 a6_505
	word32 s2_506
	word32 s3_507
	word32 s4_508
	word32 s5_509
	word32 s6_510
	word32 s7_511
	word32 s8_512
	dbg_test_print(s3_196 + 976<i32>, dwArg0138, out s1_502, out a2_503, out a5_504, out a6_505, out s2_506, out s3_507, out s4_508, out s5_509, out s6_510, out s7_511, out s8_512)
	a0_328 = 0<32>
l23051B82:
	0<32> = dwArg0198
	a4Out = a4_186
	s10Out = s10
	return a0_328
GeneratePWKMsg4_exit:


word32 KeyMgmtStaHsk_Recvd_PWKMsg3(word32 ra, word32 s0, word32 s2, word32 s3, word32 s4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg1C, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0124, word32 dwArg0128, word32 dwArg0138, word32 dwArg0144, word32 dwArg0158, word32 dwArg0178, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessKeyMgmtDataSta
// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0124:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0144:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a4 s10
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtStaHsk_Recvd_PWKMsg3_entry:
l23051BA8:
	word32 s1_237
	word32 a2_238
	word32 a5_239
	word32 a6_240
	word32 s2_241
	word32 s3_242
	word32 s4_243
	word32 s5_244
	word32 s6_245
	word32 s7_246
	word32 s8_247
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_237, out a2_238, out a5_239, out a6_240, out s2_241, out s3_242, out s4_243, out s5_244, out s6_245, out s7_246, out s8_247)
	word32 a0_47
	word32 a3_50
	word32 s1_57
	word32 s2_60
	word32 s7_65
	word32 s9_67
	word32 a4_118
	word32 s10_106
	word32 ra_55 = ProcessRxEAPOL_PwkMsg3(ra, mstatus, s2, dwLoc08, dwArg0C, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s1_57, out a0_47, out a3_50, out a4_118, out s2_60, out s7_65, out s9_67, out s10_106)
	branch a0_47 == 0<32> l23051C2A
l23051BF2:
	branch GeneratePWKMsg4(ra_55, s1_57, a3_50, a4_118, s2_60, s7_65, s9_67, fflags, frm, mstatus, dwLoc20, s4, s0, dwLoc0C, dwLoc04, dwArg08, dwArg0C, dwArg18, dwArg1C, dwArg48, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0124, dwArg0144, dwArg0178, out a4_118, out s10_106) != 0<32> l23051C2A
l23051C06:
	word32 s3_248
	word32 s5_249
	updateApReplayCounter(s3, dwArg0138, out a4_118, out s3_248, out s5_249)
	word32 s1_250
	word32 a2_251
	word32 a5_252
	word32 a6_253
	word32 s2_254
	word32 s3_255
	word32 s4_256
	word32 s5_257
	word32 s6_258
	word32 s7_259
	word32 s8_260
	dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_250, out a2_251, out a5_252, out a6_253, out s2_254, out s3_255, out s4_256, out s5_257, out s6_258, out s7_259, out s8_260)
l23051C2A:
	s10Out = s10_106
	return a4_118
KeyMgmtStaHsk_Recvd_PWKMsg3_exit:


word32 ProcessKeyMgmtDataSta(word32 ra, word32 s0, word32 s1, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0118, word32 dwArg0124, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessEAPoLPkt
// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0124:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a4 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ProcessKeyMgmtDataSta_entry:
l23051C3E:
	word32 a4_117
	word32 s10_124
	word32 s1_35
	word32 s4_36
	word32 s2_40
	word32 s3_41
	word32 a2_229
	word32 a5_230
	word32 a6_231
	word32 s5_232
	word32 s6_233
	word32 s7_234
	word32 s8_235
	word32 s0_34 = dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_35, out a2_229, out a5_230, out a6_231, out s2_40, out s3_41, out s4_36, out s5_232, out s6_233, out s7_234, out s8_235)
	branch (CONVERT(Mem15[s2_40 + 6<i32>:byte], byte, word32) & 8<32>) == 0<32> l23051CCA
l23051CCA:
	a4_117 = KeyMgmtStaHsk_Recvd_GrpMsg1(ra, s2_40, s3_41, s4_36, fflags, frm, mstatus, s2, s0, dwLoc08, dwLoc04, dwArg08, dwArg0C, dwArg28, dwArg38, dwArg3C, dwArg58, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0124, dwArg0138, dwArg0158, out s10_124)
l23051C82:
	branch (CONVERT(Mem15[s2_40 + 5<i32>:byte], byte, word32) & 1<32>) == 0<32> l23051CBE
l23051CBE:
	a4_117 = KeyMgmtStaHsk_Recvd_PWKMsg1(ra, s0_34, s1_35, s2_40, s4_36, fflags, frm, mstatus, s0, dwLoc08, dwArg18, dwArg24, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0178, out s10_124)
l23051C8A:
	a4_117 = KeyMgmtStaHsk_Recvd_PWKMsg3(ra, s0_34, s2_40, s3_41, s4_36, fflags, frm, mstatus, s2, s0, dwLoc08, dwLoc04, dwArg28, dwArg38, dwArg3C, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0104, dwArg0108, dwArg0118, dwArg0124, dwArg0138, dwArg0158, out s10_124)
l23051C90:
l23051CBA_thunk_dbg_test_print:
	word32 s5_169
	word32 s1_236
	word32 a2_237
	word32 a5_238
	word32 a6_239
	word32 s2_240
	word32 s3_241
	word32 s4_242
	word32 s6_243
	word32 s7_244
	word32 s8_245
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_236, out a2_237, out a5_238, out a6_239, out s2_240, out s3_241, out s4_242, out s5_169, out s6_243, out s7_244, out s8_245)
	s5Out = s5_169
	s10Out = s10_124
	return a4_117
ProcessKeyMgmtDataSta_exit:


word32 ProcessEAPoLPkt(word32 ra, word32 s4, word32 s5, word32 s6, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg1C, word32 dwArg28, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF4, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0154, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_cntrl_frame_handle
// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F4:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0154:[0..31]
// LiveOut: a1 a4 s1 s10 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ProcessEAPoLPkt_entry:
l23051CD2:
	word32 a5_38
	word32 s2_46
	word32 s1_304
	word32 a2_305
	word32 a6_306
	word32 s3_307
	word32 s4_308
	word32 s6_309
	word32 s7_310
	word32 s8_311
	word32 s5_164
	dbg_test_print(0x2307C3BC<32>, dwArg0148, out s1_304, out a2_305, out a5_38, out a6_306, out s2_46, out s3_307, out s4_308, out s5_164, out s6_309, out s7_310, out s8_311)
	word32 a4_117 = CONVERT(Mem21[a5_38 + 1<i32>:byte], byte, word32)
	branch a4_117 != 3<32> l23051DA8
l23051DA8:
l23051D20:
	word32 s5_129
	word32 a5_61
	word32 s2_69
	word32 s1_312
	word32 a2_313
	word32 a6_314
	word32 s3_315
	word32 s4_316
	word32 s5_317
	word32 s6_318
	word32 s7_319
	word32 s8_320
	word32 s0_63 = dbg_test_print(s2_46 + 956<i32>, dwArg0148, out s1_312, out a2_313, out a5_61, out a6_314, out s2_69, out s3_315, out s4_316, out s5_317, out s6_318, out s7_319, out s8_320)
	word32 s1_74 = Mem21[a5_61:word32]
	branch CONVERT(Mem21[a5_61:byte], byte, word32) != 2<32> l23051D9C
l23051D9C:
	a4_117 = ProcessKeyMgmtDataSta(ra, s0_63, s1_74, s2_69, fflags, frm, mstatus, s6, s4, dwLoc18, dwLoc0C, dwLoc08, dwArg08, dwArg0C, dwArg28, dwArg48, s5, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF4, dwArg0108, dwArg0128, dwArg0148, out s5_129, out s10)
l23051D44:
	a4_117 = ProcessKeyMgmtDataAp(ra, s0_63, s1_74, fflags, frm, mstatus, dwLoc30, dwLoc2C, s6, dwLoc18, dwLoc0C, dwLoc08, dwArg1C, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0128, dwArg0154, out s5_129, out s10)
l23051D4A:
	word32 s1_328
	word32 a2_329
	word32 a5_330
	word32 a6_331
	word32 s2_332
	word32 s3_333
	word32 s4_334
	word32 s6_335
	word32 s7_336
	word32 s8_337
	dbg_test_print(s5_129 + 976<i32>, dwArg0148, out s1_328, out a2_329, out a5_330, out a6_331, out s2_332, out s3_333, out s4_334, out s5_164, out s6_335, out s7_336, out s8_337)
l23051D68:
	word32 a1_173 = Mem21[0x44B00120<32>:int32] >>u 1000<i32>
	word32 s1_181
	word32 s5_188
	word32 s6_189
	word32 s7_190
	word32 a2_321
	word32 a5_322
	word32 a6_323
	word32 s2_324
	word32 s3_325
	word32 s4_326
	word32 s8_327
	dbg_test_print(s5_164 + 976<i32>, dwArg0148, out s1_181, out a2_321, out a5_322, out a6_323, out s2_324, out s3_325, out s4_326, out s5_188, out s6_189, out s7_190, out s8_327)
	0<32> = dwArg0128
	a1Out = a1_173
	a4Out = a4_117
	s5Out = s5_188
	s6Out = s6_189
	s7Out = s7_190
	s10Out = s10
	return s1_181
ProcessEAPoLPkt_exit:


word32 process_rsn_ie(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rx_scanu_result_ind
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] Stack +010C:[0..31]
// LiveOut: a0 ra s0 s1 s3 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
process_rsn_ie_entry:
l23051DAC:
	branch (CONVERT(Mem29[a0 + 9<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem29[a0 + 8<i32>:byte], byte, word32)) != 2<32> l23051E2A
l23051DEE:
	word32 a5_49 = CONVERT(Mem29[a0 + 1<i32>:byte], byte, word32)
	Mem51[a0 + 9<i32>:byte] = 0<8>
	Mem53[a0 + 1<i32>:byte] = SLICE(a5_49 + 0xFFFFFFFC<32>, byte, 0)
	Mem55[a0 + 8<i32>:byte] = 1<8>
	word32 a1_746
	word32 a2_747
	word32 a3_748
	word32 a4_749
	word32 a5_750
	branch memcmp(a0 + 14<i32>, 0x23082804<32>, 4<32>, out a1_746, out a2_747, out a3_748, out a4_749, out a5_750) != 0<32> l23051E1E
l23051E14:
	word32 a6_761
	word32 a2_757
	word32 a3_758
	word32 a5_760
	word32 a7_762
	word32 a4_759
	memcpy(a0 + 10<i32>, a0 + 14<i32>, 4<32>, out a2_757, out a3_758, out a4_759, out a5_760, out a6_761, out a7_762)
l23051E1E:
	word32 a2_751
	word32 a4_753
	word32 a6_755
	word32 a7_756
	word32 a5_754
	word32 a3_752
	memcpy(a0 + 14<i32>, a0 + 18<i32>, 0xC<32>, out a2_751, out a3_752, out a4_753, out a5_754, out a6_755, out a7_756)
l23051E2A:
	word32 a6_744
	word32 a7_745
	word32 a5_743
	word32 a3_741
	word32 a4_742
	word32 a2_740
	memcpy(fp + -66<i32>, a0 + 14<i32>, 2<32>, out a2_740, out a3_741, out a4_742, out a5_743, out a6_744, out a7_745)
	word32 a5_118 = 0<32>
l23051E40:
	word32 a4_123 = CONVERT(wLoc42, uint16, word32)
	branch a5_118 <u a4_123 l23051F4E
l23051F4E:
	word32 s3_125 = a5_118 + 1<i32>
	word32 s11_129 = (s3_125 << 2<u32>) + 2<32> + (a0 + 10<i32>)
	word32 a2_764
	word32 a3_765
	word32 a4_766
	word32 a1_763
	word32 a5_767
	branch memcmp(s11_129, 0x23082800<32>, 4<32>, out a1_763, out a2_764, out a3_765, out a4_766, out a5_767) != 0<32> l23051F7A
l23051F7A:
	word32 a2_787
	word32 a4_789
	word32 a5_790
	word32 a1_786
	word32 a3_788
	branch memcmp(s11_129, 0x23082810<32>, 4<32>, out a1_786, out a2_787, out a3_788, out a4_789, out a5_790) != 0<32> l23051F74
l23051F88:
	Mem153[a4 + 1<i32>:byte] = SLICE(CONVERT(Mem122[a4 + 1<i32>:byte], byte, word32) | 1<i32>, byte, 0)
l23051F68:
	Mem156[a4:byte] = SLICE(CONVERT(Mem122[a4:byte], byte, word32) | 32<i32>, byte, 0)
l23051F74:
	a5_118 = s3_125 & 255<i32>
l23051E48:
	branch a4_123 != 2<32> l23051E98
l23051E4E:
	word32 a1_192
	Mem164[a0 + 1<i32>:byte] = 0x14<8>
	word32 a2_768
	word32 a5_771
	word32 a6_772
	word32 a4_770
	word32 a3_769
	word32 a7_773
	memcpy(a0 + 14<i32>, fp + -66<i32>, 2<32>, out a2_768, out a3_769, out a4_770, out a5_771, out a6_772, out a7_773)
	branch a5 == 0<32> l23051F96
l23051F96:
	a1_192 = 0x23082810<32>
l23051E70:
	a1_192 = 0x23082800<32>
l23051E78:
	word32 a3_793
	word32 a1_791
	word32 a2_792
	word32 a4_794
	word32 a5_795
	branch memcmp(a0 + 20<i32>, a1_192, 4<32>, out a1_791, out a2_792, out a3_793, out a4_794, out a5_795) != 0<32> l23051E8C
l23051E80:
	word32 a5_783
	word32 a2_780
	word32 a3_781
	word32 a4_782
	word32 a7_785
	word32 a6_784
	memcpy(a0 + 16<i32>, a0 + 20<i32>, 6<32>, out a2_780, out a3_781, out a4_782, out a5_783, out a6_784, out a7_785)
l23051E8C:
	word32 a2_774
	word32 a3_775
	word32 a4_776
	word32 a5_777
	word32 a7_779
	word32 a6_778
	memcpy(a0 + 20<i32>, a0 + 24<i32>, 2<32>, out a2_774, out a3_775, out a4_776, out a5_777, out a6_778, out a7_779)
l23051E98:
	branch (CONVERT(Mem243[a4 + 1<i32>:byte], byte, word32) & 1<32>) == 0<32> l23051EEA
l23051EA0:
	branch (CONVERT(Mem243[a4:byte], byte, word32) & 32<i32>) == 0<32> l23051EAE
l23051EAA:
	branch a5 != 0<32> l23051EEA
l23051EAE:
	Mem262[a3:byte] = 1<8>
	Mem266[a0 + 20<i32>:byte] = 0xC0<8>
	word32 a5_267 = CONVERT(Mem266[a0 + 1<i32>:byte], byte, word32)
	Mem269[a0 + 22<i32>:byte] = 0<8>
	Mem271[a0 + 1<i32>:byte] = SLICE(a5_267 + 2<32>, byte, 0)
	Mem272[a0 + 23<i32>:byte] = 0<8>
	word32 a3_802
	word32 a4_803
	word32 a5_804
	word32 a2_801
	word32 a6_805
	word32 a7_806
	memcpy(a0 + 24<i32>, 0x2308280C<32>, 4<32>, out a2_801, out a3_802, out a4_803, out a5_804, out a6_805, out a7_806)
	Mem291[a0 + 1<i32>:byte] = SLICE(CONVERT(Mem272[a0 + 1<i32>:byte], byte, word32) + 4<32>, byte, 0)
l23051EEA:
	word32 a5_328
	word32 a4_799
	word32 a1_796
	word32 a3_798
	word32 a5_800
	word32 a2_797
	branch memcmp(a0 + 10<i32>, 0x23082804<32>, 4<32>, out a1_796, out a2_797, out a3_798, out a4_799, out a5_800) != 0<32> l23051FA0
l23051FA0:
	word32 a5_811
	word32 a3_809
	word32 a4_810
	word32 a2_808
	word32 a1_807
	branch memcmp(a0 + 10<i32>, 0x23082800<32>, 4<32>, out a1_807, out a2_808, out a3_809, out a4_810, out a5_811) != 0<32> l23051F08
l23051FB2:
	a5_328 = CONVERT(Mem326[a2:byte], byte, word32) | 4<i32>
l23051EFC:
	a5_328 = CONVERT(Mem326[a2:byte], byte, word32) | 8<i32>
l23051F04:
	Mem333[a2:byte] = SLICE(a5_328, byte, 0)
l23051F08:
	word32 a5_392
	word32 a2_818
	word32 a5_821
	word32 a4_820
	word32 a3_819
	word32 a1_817
	branch memcmp(a0 + 4<i32>, 0x23082804<32>, 4<32>, out a1_817, out a2_818, out a3_819, out a4_820, out a5_821) != 0<32> l23051FBC
l23051FBC:
	word32 a4_815
	word32 a2_813
	word32 a3_814
	word32 a5_816
	word32 a1_812
	branch memcmp(a0 + 4<i32>, 0x23082800<32>, 4<32>, out a1_812, out a2_813, out a3_814, out a4_815, out a5_816) != 0<32> l23051FD8
l23051FD8:
	word32 a4_825
	word32 a2_823
	word32 a3_824
	word32 a1_822
	word32 a5_826
	branch memcmp(a0 + 4<i32>, 0x23082808<32>, 4<32>, out a1_822, out a2_823, out a3_824, out a4_825, out a5_826) != 0<32> l23051FF4
l23051FF4:
	word32 a5_831
	word32 a3_829
	word32 a2_828
	word32 a4_830
	word32 a1_827
	branch memcmp(a0 + 4<i32>, 0x230827FC<32>, 4<32>, out a1_827, out a2_828, out a3_829, out a4_830, out a5_831) != 0<32> l23051F26
l23052006:
	a5_392 = CONVERT(Mem390[a1:byte], byte, word32) | 1<i32>
l23051FEA:
	a5_392 = CONVERT(Mem390[a1:byte], byte, word32) | 2<i32>
l23051FCE:
	a5_392 = CONVERT(Mem390[a1:byte], byte, word32) | 4<i32>
l23051F1A:
	a5_392 = CONVERT(Mem390[a1:byte], byte, word32) | 8<i32>
l23051F22:
	Mem401[a1:byte] = SLICE(a5_392, byte, 0)
l23051F26:
	word32 a0_405 = CONVERT(Mem404[a0 + 1<i32>:byte], byte, word32)
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = a0_405 + 2<32> & 255<i32>
	s3Out = 0x23083000<32>
	s4Out = dwArg0168
	s9Out = 0x23083000<32>
	return dwLoc08
process_rsn_ie_exit:


word32 process_wpa_ie(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rx_scanu_result_ind
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: a7 s5 sp t0 t1 t4 t5 t6
process_wpa_ie_entry:
l23052010:
	branch (CONVERT(Mem17[a0 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem17[a0 + 12<i32>:byte], byte, word32)) != 2<32> l23052078
l23052040:
	Mem32[a0 + 1<i32>:byte] = 0x16<8>
	Mem35[a0 + 12<i32>:byte] = 1<8>
	Mem36[a0 + 13<i32>:byte] = 0<8>
	word32 a1_314
	word32 a3_316
	word32 a4_317
	word32 a2_315
	word32 a5_318
	branch memcmp(a0 + 18<i32>, 0x23082820<32>, 4<32>, out a1_314, out a2_315, out a3_316, out a4_317, out a5_318) != 0<32> l2305206C
l23052062:
	word32 a2_325
	word32 a7_330
	word32 a5_328
	word32 a3_326
	word32 a4_327
	word32 a6_329
	memcpy(a0 + 14<i32>, a0 + 18<i32>, 4<32>, out a2_325, out a3_326, out a4_327, out a5_328, out a6_329, out a7_330)
l2305206C:
	word32 a5_322
	word32 a4_321
	word32 a2_319
	word32 a3_320
	word32 a6_323
	word32 a7_324
	memcpy(a0 + 18<i32>, a0 + 22<i32>, 8<32>, out a2_319, out a3_320, out a4_321, out a5_322, out a6_323, out a7_324)
l23052078:
	word32 a5_108
	word32 a2_310
	word32 a5_313
	word32 a4_312
	word32 a3_311
	word32 a1_309
	branch memcmp(a0 + 14<i32>, 0x23082820<32>, 4<32>, out a1_309, out a2_310, out a3_311, out a4_312, out a5_313) != 0<32> l230520CC
l230520CC:
	word32 a4_334
	word32 a1_331
	word32 a2_332
	word32 a3_333
	word32 a5_335
	branch memcmp(a0 + 14<i32>, 0x2308281C<32>, 4<32>, out a1_331, out a2_332, out a3_333, out a4_334, out a5_335) != 0<32> l23052092
l230520DE:
	a5_108 = CONVERT(Mem105[a2:byte], byte, word32) | 4<i32>
l23052086:
	a5_108 = CONVERT(Mem105[a2:byte], byte, word32) | 8<i32>
l2305208E:
	Mem113[a2:byte] = SLICE(a5_108, byte, 0)
l23052092:
	word32 a5_165
	word32 a1_340
	word32 a2_341
	word32 a3_342
	word32 a5_343
	word32 a4_126
	branch memcmp(a0 + 8<i32>, 0x23082820<32>, 4<32>, out a1_340, out a2_341, out a3_342, out a4_126, out a5_343) != 0<32> l230520E8
l230520E8:
	word32 a1_336
	word32 a2_337
	word32 a3_338
	word32 a5_339
	branch memcmp(a0 + 8<i32>, 0x2308281C<32>, 4<32>, out a1_336, out a2_337, out a3_338, out a4_126, out a5_339) != 0<32> l23052104
l23052104:
	word32 a1_344
	word32 a2_345
	word32 a3_346
	word32 a5_347
	branch memcmp(a0 + 8<i32>, 0x23082824<32>, 4<32>, out a1_344, out a2_345, out a3_346, out a4_126, out a5_347) != 0<32> l23052120
l23052120:
	word32 a1_348
	word32 a2_349
	word32 a3_350
	word32 a5_351
	branch memcmp(a0 + 8<i32>, 0x23082818<32>, 4<32>, out a1_348, out a2_349, out a3_350, out a4_126, out a5_351) != 0<32> l230520B0
l23052132:
	a5_165 = CONVERT(Mem163[a1:byte], byte, word32) | 1<i32>
l23052116:
	a5_165 = CONVERT(Mem163[a1:byte], byte, word32) | 2<i32>
l230520FA:
	a5_165 = CONVERT(Mem163[a1:byte], byte, word32) | 4<i32>
l230520A4:
	a5_165 = CONVERT(Mem163[a1:byte], byte, word32) | 8<i32>
l230520AC:
	Mem174[a1:byte] = SLICE(a5_165, byte, 0)
l230520B0:
	word32 a0_193 = CONVERT(Mem177[a0 + 1<i32>:byte], byte, word32) + 2<32> & 255<i32>
	s1Out = a1
	a0Out = a0_193
	a2Out = dwArg48
	a4Out = a4_126
	s2Out = a0 + 8<i32>
	s3Out = 0x23083000<32>
	s4Out = dwArg04
	return s1
process_wpa_ie_exit:


void keyMgmtStaRsnSecuredTimeoutHandler(word32 ra, word32 a3, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a3 a4 a7 ra s10 s11 s9 sp t0 t1 t4 t5 t6
keyMgmtStaRsnSecuredTimeoutHandler_entry:
l2305213C:
	word32 a5_21
	word32 s1_24
	word32 s2_29
	word32 s5_31
	word32 a2_146
	word32 a6_147
	word32 s3_148
	word32 s4_149
	word32 s6_150
	word32 s7_151
	word32 s8_152
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_24, out a2_146, out a5_21, out a6_147, out s2_29, out s3_148, out s4_149, out s5_31, out s6_150, out s7_151, out s8_152)
	branch s1_24 == 0<32> l2305217E
l2305216C:
	word32 s1_34 = Mem9[a5_21 + 120<i32>:word32]
	branch a5_21 != 0<32> l2305217E
l23052170:
	word32 a4_153
	word32 s10_154
	sm_handle_supplicant_result(ra, s1_34, CONVERT(Mem9[Mem9[s1_34 + 280<i32>:int32] + 1<i32>:byte], byte, word32), 0xF<32>, a3, s2_29, s5_31, fflags, frm, mstatus, dwLoc08, dwArg08, dwArg30, dwArg34, dwArg40, dwArg44, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgD8, dwArgF8, dwArg0118, out a4_153, out s10_154)
l2305217E:
l230521A2_thunk_dbg_test_print:
	word32 s1_155
	word32 a2_156
	word32 a5_157
	word32 a6_158
	word32 s2_159
	word32 s3_160
	word32 s4_161
	word32 s5_162
	word32 s6_163
	word32 s7_164
	word32 s8_165
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_155, out a2_156, out a5_157, out a6_158, out s2_159, out s3_160, out s4_161, out s5_162, out s6_163, out s7_164, out s8_165)
	return
keyMgmtStaRsnSecuredTimeoutHandler_exit:


word32 supplicantGenerateRand(word32 ra, word32 dwArg10, word32 dwArg14, word32 dwArg5C, word32 dwArg0108, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GetKeyMsgNonceFromEAPOL
//      GeneratePWKMsg1
//      GenerateGTK_internal
// MayUse:  ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +005C:[0..31] Stack +0108:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s10 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
supplicantGenerateRand_entry:
l230521A6:
	word32 a2_28
	word32 s4_33
	word32 s3_38
	word32 s5_39
	word32 s1_121
	word32 a5_122
	word32 a6_123
	word32 s2_124
	word32 s6_125
	word32 s7_126
	word32 s8_127
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_121, out a2_28, out a5_122, out a6_123, out s2_124, out s3_38, out s4_33, out s5_39, out s6_125, out s7_126, out s8_127)
	word32 a3_47
	word32 a4_48
	word32 s10_55
	word32 s9_64
	word32 s0_128
	word32 s2_129
	word32 ra_52 = bl_rand_stream(ra, s3_38, s4_33, a2_28, s5_39, dwArg10, dwArg14, dwArg5C, dwArg0108, out s0_128, out a3_47, out a4_48, out s2_129, out s9_64, out s10_55)
l23052206_thunk_dbg_test_print:
	word32 s1_88
	word32 a2_130
	word32 a5_131
	word32 a6_132
	word32 s2_133
	word32 s3_134
	word32 s4_135
	word32 s5_136
	word32 s6_137
	word32 s7_138
	word32 s8_139
	s0Out = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_88, out a2_130, out a5_131, out a6_132, out s2_133, out s3_134, out s4_135, out s5_136, out s6_137, out s7_138, out s8_139)
	s1Out = s1_88
	a0Out = 0x2307C3D0<32>
	a3Out = a3_47
	a4Out = a4_48
	s9Out = s9_64
	s10Out = s10_55
	return ra_52
supplicantGenerateRand_exit:


word32 ComputeEAPOL_MIC(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      IsEAPOL_MICValid
//      KeyMgmtSta_PopulateEAPOLLengthMic
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] ra:[0..31]
// LiveOut: ra s1 s10 s2 s3 s4 s5 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ComputeEAPOL_MIC_entry:
l2305220A:
	branch a4 != 0<32> l2305221C
l23052216:
	a4 = CONVERT(Mem9[a0 + 6<i32>:byte], byte, word32) & 7<32>
l2305221C:
	branch a4 == 1<32> l2305223A
l2305223A:
	Bl_hmac_md5(ra, a0, a1, a2, a3)
l23052226:
	branch a4 == 2<32> l23052248
l23052248:
	Bl_hmac_sha1(ra, 1<32>, a2, a3, a0 + 81<i32>, 0x10<32>)
l2305222C:
	ra = bl_aes_cmac(ra, a2, out s1, out s2, out s3, out s4, out s5, out s7, out s9, out s10)
l23052242:
	s1Out = s1
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s7Out = s7
	s9Out = s9
	s10Out = s10
	return ra
ComputeEAPOL_MIC_exit:


word32 keyMgmtGetKeySize_internal(word32 dwArg38, word32 dwArg0168, ptr32 & a0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      keyMgmtGetKeySize
// MayUse:  Stack +0038:[0..31] Stack +0168:[0..31]
// LiveOut: a0 s1 s2
// Trashed: a0 a1 a2 a4 a5 a6 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: s0 sp
keyMgmtGetKeySize_internal_entry:
l2305225A:
	word32 s1_28
	word32 s2_33
	word32 a2_97
	word32 a5_98
	word32 a6_99
	word32 s3_100
	word32 s4_101
	word32 s5_102
	word32 s6_103
	word32 s7_104
	word32 s8_105
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_28, out a2_97, out a5_98, out a6_99, out s2_33, out s3_100, out s4_101, out s5_102, out s6_103, out s7_104, out s8_105)
	branch s2_33 == 0<32> l230522CE
l230522CE:
	word32 a5_39 = CONVERT(Mem11[s1_28 + 3<i32>:byte], byte, word32)
	branch (a5_39 & 8<i32>) != 0<32> l230522A0
l230522DA:
	branch (a5_39 & 2<i32>) != 0<32> l230522A0
l230522E2:
	branch (a5_39 & 1<32>) == 0<32> l230522A0
l230522EA:
l23052292:
	branch (CONVERT(Mem11[s1_28 + 4<i32>:byte], byte, word32) & 8<32>) == 0<32> l230522A0
l2305229E:
l230522A0:
	word32 s1_65
	word32 s2_70
	word32 a2_106
	word32 a5_107
	word32 a6_108
	word32 s3_109
	word32 s4_110
	word32 s5_111
	word32 s6_112
	word32 s7_113
	word32 s8_114
	word32 a0_75 = dbg_test_print(0x2307C3D0<32>, dwArg0168, out s1_65, out a2_106, out a5_107, out a6_108, out s2_70, out s3_109, out s4_110, out s5_111, out s6_112, out s7_113, out s8_114)
	0<32> = dwArg38
	a0Out = a0_75
	s2Out = s2_70
	return s1_65
keyMgmtGetKeySize_internal_exit:


word32 isApReplayCounterFresh(word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_IsRxEAPOLValid
// MayUse:  Stack +0158:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
isApReplayCounterFresh_entry:
l230522EE:
	word32 s2_33
	word32 s1_162
	word32 a2_163
	word32 a5_164
	word32 a6_165
	word32 s3_166
	word32 s4_167
	word32 s5_168
	word32 s6_169
	word32 s7_170
	word32 s8_171
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_162, out a2_163, out a5_164, out a6_165, out s2_33, out s3_166, out s4_167, out s5_168, out s6_169, out s7_170, out s8_171)
	word32 a2_172
	word32 a3_173
	word32 a4_174
	word32 a5_175
	word32 a6_176
	word32 a7_177
	memcpy(fp + 0xFFFFFFE8<32>, s2_33, 4<32>, out a2_172, out a3_173, out a4_174, out a5_175, out a6_176, out a7_177)
	word32 a4_57
	word32 a2_178
	word32 a3_179
	word32 a5_180
	word32 a6_181
	word32 a7_182
	memcpy(fp + 0xFFFFFFEC<32>, s2_33 + 4<i32>, 4<32>, out a2_178, out a3_179, out a4_57, out a5_180, out a6_181, out a7_182)
	word32 a1_81 = a4_57 >>u 8<u32> & 0xFFFFF00<32>
	word32 a4_149 = 0x10000000<32>
	word32 a3_148 = (a4_57 << 0x18<u32>) + (a4_57 >>u 0x18<u32>) + (a4_57 << 8<u32> & 0xFF0000<32>) + a1_81
	branch a1_81 <u a3_148 l230523A2
l23052368:
	branch a1_81 != a3_148 l230523A2
l2305236E:
	a3_148 = 0<32>
	a4_149 = 0x100000<32>
	branch true l230523A2
l23052392:
	branch true l230523A2
l23052398:
	branch (a1_81 | 0x100000<32>) != 0<32> l230523A2
l2305239C:
l230523A2:
	word32 s1_117
	word32 s2_122
	word32 s7_126
	word32 a2_183
	word32 a5_184
	word32 a6_185
	word32 s3_186
	word32 s4_187
	word32 s5_188
	word32 s6_189
	word32 s8_190
	word32 s0_116 = dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_117, out a2_183, out a5_184, out a6_185, out s2_122, out s3_186, out s4_187, out s5_188, out s6_189, out s7_126, out s8_190)
	s1Out = s1_117
	a0Out = s0_116
	a3Out = a3_148
	a4Out = a4_149
	s2Out = s2_122
	s7Out = s7_126
	return s0_116
isApReplayCounterFresh_exit:


word32 updateApReplayCounter(word32 dwArg84, word32 dwArg0158, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
//      KeyMgmtStaHsk_Recvd_GrpMsg1
//      KeyMgmtStaHsk_Recvd_PWKMsg3
// MayUse:  Stack +0084:[0..31] Stack +0158:[0..31]
// LiveOut: a4 s0 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
updateApReplayCounter_entry:
l230523D0:
	word32 s1_28
	word32 s2_33
	word32 a2_152
	word32 a5_153
	word32 a6_154
	word32 s3_155
	word32 s4_156
	word32 s5_157
	word32 s6_158
	word32 s7_159
	word32 s8_160
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_28, out a2_152, out a5_153, out a6_154, out s2_33, out s3_155, out s4_156, out s5_157, out s6_158, out s7_159, out s8_160)
	word32 a2_161
	word32 a3_162
	word32 a4_163
	word32 a5_164
	word32 a6_165
	word32 a7_166
	memcpy(fp + 0xFFFFFFE8<32>, s2_33, 4<32>, out a2_161, out a3_162, out a4_163, out a5_164, out a6_165, out a7_166)
	word32 a3_62
	word32 a2_167
	word32 a4_168
	word32 a5_169
	word32 a6_170
	word32 a7_171
	memcpy(fp + 0xFFFFFFEC<32>, s2_33 + 4<i32>, 4<32>, out a2_167, out a3_62, out a4_168, out a5_169, out a6_170, out a7_171)
	word32 a5_82 = (a3_62 << 0x18<u32>) + (a3_62 >>u 0x18<u32>) + (a3_62 << 8<u32> & 0xFF0000<32>) + (a3_62 >>u 8<u32> & dwArg84)
	Mem92[a5_82 + 100<i32>:word32] = s1_28
	word32 a4_91 = (dwArg84 & 0x100000<32>) + 0x10<32>
	Mem93[a4_91 + 96<i32>:word32] = s1_28
	branch (a5_82 | a4_91) != 0<32> l23052464
l23052460:
	Mem96[0x69<32>:word32] = s1_28
l23052464:
	word32 s3_117
	word32 s5_118
	word32 s1_172
	word32 a2_173
	word32 a5_174
	word32 a6_175
	word32 s2_176
	word32 s4_177
	word32 s6_178
	word32 s7_179
	word32 s8_180
	word32 s0_110 = dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_172, out a2_173, out a5_174, out a6_175, out s2_176, out s3_117, out s4_177, out s5_118, out s6_178, out s7_179, out s8_180)
	a4Out = a4_91
	s3Out = s3_117
	s5Out = s5_118
	return s0_110
updateApReplayCounter_exit:


word32 formEAPOLEthHdr(word32 dwArg0158, word32 dwArg0178, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_PrepareEAPOLFrame
//      PrepDefaultEapolMsg
// MayUse:  Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
formEAPOLEthHdr_entry:
l23052490:
	word32 s4_37
	word32 s5_43
	word32 s1_128
	word32 a2_129
	word32 a5_130
	word32 a6_131
	word32 s2_132
	word32 s3_133
	word32 s6_134
	word32 s7_135
	word32 s8_136
	word32 s0_35 = dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_128, out a2_129, out a5_130, out a6_131, out s2_132, out s3_133, out s4_37, out s5_43, out s6_134, out s7_135, out s8_136)
	word32 a2_137
	word32 a3_138
	word32 a4_139
	word32 a5_140
	word32 a6_141
	word32 a7_142
	memcpy(s0_35, s5_43, 6<32>, out a2_137, out a3_138, out a4_139, out a5_140, out a6_141, out a7_142)
	word32 a4_65
	word32 a2_143
	word32 a3_144
	word32 a5_145
	word32 a6_146
	word32 a7_147
	memcpy(s0_35 + 6<i32>, s4_37, 6<32>, out a2_143, out a3_144, out a4_65, out a5_145, out a6_146, out a7_147)
	Mem79[s0_35 + 12<i32>:byte] = 0x88<8>
	Mem81[s0_35 + 13<i32>:byte] = 0x8E<8>
l23052514_thunk_dbg_test_print:
	word32 s1_99
	word32 s4_100
	word32 s2_104
	word32 s3_105
	word32 a2_148
	word32 a5_149
	word32 a6_150
	word32 s5_151
	word32 s6_152
	word32 s7_153
	word32 s8_154
	word32 s0_98 = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_99, out a2_148, out a5_149, out a6_150, out s2_104, out s3_105, out s4_100, out s5_151, out s6_152, out s7_153, out s8_154)
	s1Out = s1_99
	a4Out = a4_65
	s2Out = s2_104
	s3Out = s3_105
	s4Out = s4_100
	return s0_98
formEAPOLEthHdr_exit:


word32 IsEAPOL_MICValid(word32 ra, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_IsRxEAPOLValid
//      ProcessPWKMsg4
//      ProcessPWKMsg2
// MayUse:  ra:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s10 s2 s5 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
IsEAPOL_MICValid_entry:
l23052518:
	word32 a0_124
	word32 s1_35
	word32 s5_42
	word32 a2_207
	word32 a5_208
	word32 a6_209
	word32 s2_210
	word32 s3_211
	word32 s4_212
	word32 s6_213
	word32 s7_214
	word32 s8_215
	word32 s0_34 = dbg_test_print(0x2307C3BC<32>, dwArg0148, out s1_35, out a2_207, out a5_208, out a6_209, out s2_210, out s3_211, out s4_212, out s5_42, out s6_213, out s7_214, out s8_215)
	word32 a2_216
	word32 a3_217
	word32 a4_218
	word32 a5_219
	word32 a6_220
	word32 a7_221
	memcpy(fp + -48<i32>, s1_35, 0x10<32>, out a2_216, out a3_217, out a4_218, out a5_219, out a6_220, out a7_221)
	word32 t1_222
	word32 a0_223
	word32 a1_224
	word32 a2_225
	word32 a3_226
	word32 a4_227
	word32 a5_228
	word32 ra_70 = memset(ra, s1_35, 0<32>, 0x10<32>, out t1_222, out a0_223, out a1_224, out a2_225, out a3_226, out a4_227, out a5_228)
	word32 a5_77 = CONVERT(Mem17[s0_34 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem17[s0_34 + 2<i32>:byte], byte, word32)
	word32 s10_106
	word32 s9_113
	word32 s3_229
	word32 s4_230
	word32 s1_105
	word32 s2_107
	word32 s5_110
	word32 s7_112
	word32 ra_103 = ComputeEAPOL_MIC(ra_70, s0_34, CONVERT(SLICE((a5_77 >>u 8<i32> | a5_77 << 8<u32>) + 4<i32>, word16, 0), word16, word32), s5_42, 0x10<32>, 0<32>, out s1_105, out s2_107, out s3_229, out s4_230, out s5_110, out s7_112, out s9_113, out s10_106)
	word32 a3_120
	word32 a4_121
	word32 a1_231
	word32 a2_232
	word32 a5_233
	branch memcmp(s1_105, fp + -48<i32>, 0x10<32>, out a1_231, out a2_232, out a3_120, out a4_121, out a5_233) != 0<32> l230525C8
l230525C8:
	a0_124 = 0<32>
l2305259C:
	word32 a2_234
	word32 a5_235
	word32 a6_236
	word32 s3_237
	word32 s4_238
	word32 s6_239
	word32 s8_240
	dbg_test_print(0x2307C3D0<32>, dwArg0148, out s1_105, out a2_234, out a5_235, out a6_236, out s2_107, out s3_237, out s4_238, out s5_110, out s6_239, out s7_112, out s8_240)
	a0_124 = 1<32>
l230525B6:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_105
	a0Out = a0_124
	a3Out = a3_120
	a4Out = a4_121
	s2Out = s2_107
	s5Out = s5_110
	s7Out = s7_112
	s9Out = s9_113
	s10Out = s10_106
	return ra_103
IsEAPOL_MICValid_exit:


word32 KeyMgmtSta_PopulateEAPOLLengthMic(word32 ra, word32 a4, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg2
//      GenerateGrpMsg2
//      GeneratePWKMsg4
//      GeneratePWKMsg3
// MayUse:  a4:[0..31] ra:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtSta_PopulateEAPOLLengthMic_entry:
l230525CC:
	word32 s5_48
	word32 s6_49
	word32 s1_199
	word32 a2_200
	word32 a5_201
	word32 a6_202
	word32 s2_203
	word32 s3_204
	word32 s4_205
	word32 s7_206
	word32 s8_207
	word32 s0_40 = dbg_test_print(0x2307C3BC<32>, dwArg0148, out s1_199, out a2_200, out a5_201, out a6_202, out s2_203, out s3_204, out s4_205, out s5_48, out s6_49, out s7_206, out s8_207)
	branch s0_40 == 0<32> l2305268C
l2305260E:
	word32 a1_55 = CONVERT(Mem21[s0_40 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem21[s0_40 + 111<i32>:byte], byte, word32)
	Mem60[s0_40 + 15<i32>:byte] = 3<8>
	word32 s4_57 = a1_55 + 95<i32> << 16<i32>
	word32 a5_65 = CONVERT(SLICE(s4_57 >>u 0x10<u32> << 8<u32> | s4_57 >>u 0x18<u32>, word16, 0), word16, word32)
	Mem66[s0_40 + 16<i32>:byte] = SLICE(a5_65, byte, 0)
	Mem69[s0_40 + 17<i32>:byte] = SLICE(a5_65 >>u 8<i32>, byte, 0)
	word32 a5_73 = CONVERT(SLICE(a1_55 << 8<u32> | a1_55 >>u 8<u32>, word16, 0), word16, word32)
	Mem75[s0_40 + 111<i32>:byte] = SLICE(a5_73, byte, 0)
	Mem81[s0_40 + 14<i32>:byte] = SLICE(s6_49, byte, 0)
	Mem82[s0_40 + 112<i32>:byte] = SLICE(a5_73 >>u 8<i32>, byte, 0)
	word32 s1_208
	word32 s2_209
	word32 s3_210
	word32 s4_211
	word32 s5_212
	word32 s7_213
	word32 s9_214
	word32 s10_215
	ra = ComputeEAPOL_MIC(ra, s0_40 + 14<i32>, CONVERT(SLICE(a1_55 + 99<i32>, word16, 0), word16, word32), s5_48, 0x10<32>, a4, out s1_208, out s2_209, out s3_210, out s4_211, out s5_212, out s7_213, out s9_214, out s10_215)
	word32 s1_216
	word32 a2_217
	word32 a5_218
	word32 a6_219
	word32 s2_220
	word32 s3_221
	word32 s4_222
	word32 s5_223
	word32 s6_224
	word32 s7_225
	word32 s8_226
	dbg_test_print(0x2307C3D0<32>, dwArg0148, out s1_216, out a2_217, out a5_218, out a6_219, out s2_220, out s3_221, out s4_222, out s5_223, out s6_224, out s7_225, out s8_226)
l2305268C:
	0<32> = dwArg0128
	return ra
KeyMgmtSta_PopulateEAPOLLengthMic_exit:


word32 parseKeyKDE(word32 dwArg0168, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      parseKeyKDE_DataType
// MayUse:  Stack +0168:[0..31]
// LiveOut: a0 a3 a4 s1 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: s0 sp
parseKeyKDE_entry:
l230526A2:
	word32 a2_119
	word32 a5_120
	word32 a6_121
	word32 s2_122
	word32 s8_123
	word32 s1_102
	word32 s3_104
	word32 s4_105
	word32 s5_106
	word32 s6_107
	word32 s7_108
	word32 s0_23 = dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_102, out a2_119, out a5_120, out a6_121, out s2_122, out s3_104, out s4_105, out s5_106, out s6_107, out s7_108, out s8_123)
	word32 a4_34 = CONVERT(Mem9[s0_23:byte], byte, word32)
	branch a4_34 == 221<i32> l2305270A
l2305270A:
	a4_34 = CONVERT(Mem9[s0_23 + 1<i32>:byte], byte, word32)
	branch a4_34 <=u 7<32> l230526DC
l23052714:
	word32 a1_129
	word32 a2_130
	word32 a5_131
	branch memcmp(s0_23 + 2<i32>, 0x230827F8<32>, 3<32>, out a1_129, out a2_130, out a3, out a4_34, out a5_131) == 0<32> l230526FE
l23052728:
l230526DC:
	word32 a2_124
	word32 a5_125
	word32 a6_126
	word32 s2_127
	word32 s8_128
	s0_23 = dbg_test_print(0x2307C3D0<32>, dwArg0168, out s1_102, out a2_124, out a5_125, out a6_126, out s2_127, out s3_104, out s4_105, out s5_106, out s6_107, out s7_108, out s8_128)
l230526FE:
	a0Out = s0_23
	a3Out = a3
	a4Out = a4_34
	s3Out = s3_104
	s4Out = s4_105
	s5Out = s5_106
	s6Out = s6_107
	s7Out = s7_108
	return s1_102
parseKeyKDE_exit:


word32 parseKeyKDE_DataType(word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      parseKeyDataGTK
// MayUse:  Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
parseKeyKDE_DataType_entry:
l2305272A:
	word32 s8_230
	word32 s4_226
	word32 s5_227
	word32 s6_228
	word32 s7_229
	word32 a2_222
	word32 a5_223
	word32 a6_224
	word32 s2_225
	word32 s1_221
	word32 s3_46
	word32 s0_111 = dbg_test_print(0x2307C3BC<32>, dwArg0148, out s1_221, out a2_222, out a5_223, out a6_224, out s2_225, out s3_46, out s4_226, out s5_227, out s6_228, out s7_229, out s8_230)
	branch s0_111 == 0<32> l2305279A
l2305276A:
	word32 s1_50 = s0_111
	word32 s4_135 = 2<32>
	word32 s6_137 = 221<i32>
	word32 s7_53 = 0xFFFFFFFE<32>
l23052774:
	branch s4_135 < s3_46 l230527B2
l230527B2:
	branch CONVERT(Mem21[s1_50:byte], byte, word32) != s6_137 l230527D4
l230527BA:
	word32 a0_62
	word32 s5_73
	s1_50 = parseKeyKDE(dwArg0138, out a0_62, out a3, out a4, out s3_46, out s4_135, out s5_73, out s6_137, out s7_53)
	s0_111 = a0_62
	branch a0_62 == 0<32> l230527CC
l230527C4:
	branch CONVERT(Mem21[a0_62 + 5<i32>:byte], byte, word32) == s5_73 l2305279A
l230527CC:
	branch CONVERT(Mem21[s1_50 + 1<i32>:byte], byte, word32) != 0<32> l230527D4
l230527D2:
	s3_46 = 2<32>
l230527D4:
	word32 a5_87 = CONVERT(Mem21[s1_50 + 1<i32>:byte], byte, word32)
	a4 = s7_53 - a5_87
	s3_46 = s3_46 + a4
	s1_50 = s1_50 + (a5_87 + 2<32>)
l23052778:
	word32 s5_238
	word32 s6_239
	word32 s7_240
	word32 s8_241
	word32 a6_234
	word32 s2_235
	word32 s3_236
	word32 s4_237
	word32 s1_231
	word32 a2_232
	word32 a5_233
	s0_111 = dbg_test_print(0x2307C3D0<32>, dwArg0148, out s1_231, out a2_232, out a5_233, out a6_234, out s2_235, out s3_236, out s4_237, out s5_238, out s6_239, out s7_240, out s8_241)
l2305279A:
	0<32> = dwArg0128
	a0Out = s0_111
	a3Out = a3
	a4Out = a4
	return dwArgE4
parseKeyKDE_DataType_exit:


word32 parseKeyDataGTK(word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessRxEAPOL_PwkMsg3
//      ProcessRxEAPOL_GrpMsg1
// MayUse:  Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
parseKeyDataGTK_entry:
l230527E4:
	word32 s1_199
	word32 a2_200
	word32 a5_201
	word32 a6_202
	word32 s2_203
	word32 s3_204
	word32 s4_205
	word32 s5_206
	word32 s6_207
	word32 s7_208
	word32 s8_209
	dbg_test_print(0x2307C3BC<32>, dwArg0148, out s1_199, out a2_200, out a5_201, out a6_202, out s2_203, out s3_204, out s4_205, out s5_206, out s6_207, out s7_208, out s8_209)
	word32 a0_45
	word32 a4_121
	word32 a3_126
	word32 s0_50 = parseKeyKDE_DataType(dwArgF8, dwArg0108, dwArg0118, out a0_45, out a3_126, out a4_121)
	branch a0_45 == 0<32> l23052866
l23052828:
	word32 a2_221
	word32 a3_222
	word32 a4_223
	word32 a5_224
	word32 a6_225
	word32 a7_226
	memcpy(s0_50, a0_45 + 8<i32>, CONVERT(Mem13[a0_45 + 1<i32>:byte], byte, word32) + 0xFFFFFFFA<32>, out a2_221, out a3_222, out a4_223, out a5_224, out a6_225, out a7_226)
	Mem85[s0_50 + 38<i32>:word16] = SLICE(CONVERT(Mem13[a0_45 + 6<i32>:byte], byte, word32) & 3<32>, word16, 0)
	word32 a2_227
	word32 a3_228
	word32 a4_229
	word32 a5_230
	word32 a6_231
	word32 a7_232
	memcpy(fp + -40<i32>, s0_50 + 24<i32>, 8<32>, out a2_227, out a3_228, out a4_229, out a5_230, out a6_231, out a7_232)
	word32 a2_233
	word32 a3_234
	word32 a4_235
	word32 a5_236
	word32 a6_237
	word32 a7_238
	memcpy(s0_50 + 24<i32>, s0_50 + 0x10<32>, 8<32>, out a2_233, out a3_234, out a4_235, out a5_236, out a6_237, out a7_238)
	word32 a2_239
	word32 a5_240
	word32 a6_241
	word32 a7_242
	memcpy(s0_50 + 0x10<32>, fp + -40<i32>, 8<32>, out a2_239, out a3_126, out a4_121, out a5_240, out a6_241, out a7_242)
l23052866:
	word32 s1_210
	word32 a2_211
	word32 a5_212
	word32 a6_213
	word32 s2_214
	word32 s3_215
	word32 s4_216
	word32 s5_217
	word32 s6_218
	word32 s7_219
	word32 s8_220
	dbg_test_print(0x2307C3D0<32>, dwArg0148, out s1_210, out a2_211, out a5_212, out a6_213, out s2_214, out s3_215, out s4_216, out s5_217, out s6_218, out s7_219, out s8_220)
	0<32> = dwArg0128
	a4Out = a4_121
	return a3_126
parseKeyDataGTK_exit:


word32 KeyMgmtSta_ApplyKEK(word32 dwArg0158, word32 dwArg0178, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessRxEAPOL_PwkMsg3
//      ProcessRxEAPOL_GrpMsg1
// MayUse:  Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 s0 s1 s10 s3 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtSta_ApplyKEK_entry:
l23052896:
	word32 a3_116
	word32 a4_117
	word32 s2_37
	word32 s3_38
	word32 s1_195
	word32 a2_196
	word32 a5_197
	word32 a6_198
	word32 s4_199
	word32 s5_200
	word32 s6_201
	word32 s7_202
	word32 s8_203
	word32 s0_31 = dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_195, out a2_196, out a5_197, out a6_198, out s2_37, out s3_38, out s4_199, out s5_200, out s6_201, out s7_202, out s8_203)
	word32 a5_42 = CONVERT(Mem13[s0_31 + 66<i32>:byte], byte, word32)
	Mem46[s2_37 + 36<i32>:word16] = SLICE(a5_42 << 8<i32>, word16, 0)
	Mem49[s2_37 + 36<i32>:word16] = SLICE(a5_42 << 8<i32> | CONVERT(Mem46[s0_31 + 65<i32>:byte], byte, word32), word16, 0)
	Mem51[s2_37 + 32<i32>:word32] = 0xFFFFFFFF<32>
	word32 a5_55 = CONVERT(Mem51[s0_31 + 98<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem51[s0_31 + 97<i32>:byte], byte, word32)
	word32 a4_60 = CONVERT(SLICE(a5_55 << 8<u32> | a5_55 >>u 8<i32>, word16, 0), word16, word32)
	Mem62[s0_31 + 98<i32>:byte] = SLICE(a4_60 >>u 8<u32>, byte, 0)
	word32 a5_63 = CONVERT(Mem62[s0_31 + 6<i32>:byte], byte, word32)
	Mem64[s0_31 + 97<i32>:byte] = SLICE(a4_60, byte, 0)
	branch (a5_63 & 7<32>) != 1<32> l23052956
l23052956:
	a3_116 = BL_AesUnWrap(s3_38, 2<32>, (a4_60 >>u 3<u32>) + 0xFFFFFFFF<32>, s0_31 + 99<i32>, s0_31 + 99<i32>, out s9, out s10)
	a4_117 = CONVERT(Mem64[s0_31 + 97<i32>:byte], byte, word32)
	word32 a5_96 = (CONVERT(Mem64[s0_31 + 98<i32>:byte], byte, word32) << 8<i32> | a4_117) + 0xFFFFFFF8<32> << 16<i32>
	Mem98[s0_31 + 97<i32>:byte] = SLICE(a5_96 >>u 16<i32>, byte, 0)
	Mem100[s0_31 + 98<i32>:byte] = SLICE(a5_96 >>u 24<i32>, byte, 0)
l2305291A:
	a3_116 = RC4_Encrypt(s3_38, s0_31 + 49<i32>, 0x10<32>, s0_31 + 99<i32>, a4_60, 256<i32>, out a4_117)
l2305292A:
l23052952_thunk_dbg_test_print:
	word32 s1_147
	word32 s3_153
	word32 a2_204
	word32 a5_205
	word32 a6_206
	word32 s2_207
	word32 s4_208
	word32 s5_209
	word32 s6_210
	word32 s7_211
	word32 s8_212
	word32 s0_146 = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_147, out a2_204, out a5_205, out a6_206, out s2_207, out s3_153, out s4_208, out s5_209, out s6_210, out s7_211, out s8_212)
	s1Out = s1_147
	a3Out = a3_116
	a4Out = a4_117
	s3Out = s3_153
	s9Out = s9
	s10Out = s10
	return s0_146
KeyMgmtSta_ApplyKEK_exit:


word32 KeyMgmtSta_IsRxEAPOLValid(word32 ra, word32 dwArg38, word32 dwArg0118, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GetKeyMsgNonceFromEAPOL
// MayUse:  ra:[0..31] Stack +0038:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 ra s1 s10 s2 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
KeyMgmtSta_IsRxEAPOLValid_entry:
l23052986:
	word32 a0_136
	word32 a2_257
	word32 a5_258
	word32 a6_259
	word32 s3_260
	word32 s4_261
	word32 s5_262
	word32 s6_263
	word32 s8_264
	word32 s1_126
	word32 s2_131
	word32 s7_101
	word32 s0_27 = dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_126, out a2_257, out a5_258, out a6_259, out s2_131, out s3_260, out s4_261, out s5_262, out s6_263, out s7_101, out s8_264)
	branch s1_126 != 0<32> l230529C8
l230529C8:
	branch s0_27 == 0<32> l230529BA
l230529CA:
	word32 a0_40
	word32 s0_48 = isApReplayCounterFresh(dwArg0148, out s1_126, out a0_40, out a3, out a4, out s2_131, out s7_101)
	branch a0_40 == 0<32> l230529BA
l230529D6:
	branch (CONVERT(Mem11[s0_48 + 5<i32>:byte], byte, word32) & 1<32>) != 0<32> l23052A02
l23052A02:
	branch (CONVERT(Mem11[s0_48 + 6<i32>:byte], byte, word32) & 8<32>) != 0<32> l23052A18
l23052A18:
	word32 a1_273
	word32 a2_274
	word32 a5_275
	branch memcmp(s0_48 + 17<i32>, s1_126, 32<i32>, out a1_273, out a2_274, out a3, out a4, out a5_275) == 0<32> l23052A0A
l23052A28:
l23052A0A:
	word32 a0_84
	word32 s0_276
	word32 s5_277
	ra = IsEAPOL_MICValid(ra, dwArg0118, dwArg0138, out s0_276, out s1_126, out a0_84, out a3, out a4, out s2_131, out s5_277, out s7_101, out s9, out s10)
	branch a0_84 != 0<32> l230529DE
l23052A16:
l230529DE:
	word32 a2_265
	word32 a5_266
	word32 a6_267
	word32 s3_268
	word32 s4_269
	word32 s5_270
	word32 s6_271
	word32 s8_272
	dbg_test_print(0x2307C3D0<32>, dwArg0168, out s1_126, out a2_265, out a5_266, out a6_267, out s2_131, out s3_268, out s4_269, out s5_270, out s6_271, out s7_101, out s8_272)
	a0_136 = 1<32>
l230529BA:
	a0_136 = 0<32>
l230529BC:
	0<32> = dwArg38
	s1Out = s1_126
	a0Out = a0_136
	a3Out = a3
	a4Out = a4
	s2Out = s2_131
	s7Out = s7_101
	s9Out = s9
	s10Out = s10
	return ra
KeyMgmtSta_IsRxEAPOLValid_exit:


word32 KeyMgmtSta_PrepareEAPOLFrame(word32 ra, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg2
//      GenerateGrpMsg2
//      GeneratePWKMsg4
// MayUse:  ra:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a4 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtSta_PrepareEAPOLFrame_entry:
l23052A2A:
	word32 s1_40
	word32 s8_302
	word32 s7_301
	word32 s6_300
	word32 s5_299
	word32 s4_298
	word32 s3_297
	word32 s2_296
	word32 a6_295
	word32 a5_294
	word32 a2_293
	word32 s0_39 = dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_40, out a2_293, out a5_294, out a6_295, out s2_296, out s3_297, out s4_298, out s5_299, out s6_300, out s7_301, out s8_302)
	branch s0_39 == 0<32> l23052B78
l23052A6C:
	branch s1_40 == 0<32> l23052B78
l23052B78:
	s0Out = s1
	a4Out = a4
	return ra
l23052A70:
	word32 a1_305
	word32 a2_306
	word32 a3_307
	word32 a4_308
	word32 a5_309
	word32 a0_304
	word32 t1_303
	word32 ra_69 = memset(ra, s0_39, 0<32>, 114<i32>, out t1_303, out a0_304, out a1_305, out a2_306, out a3_307, out a4_308, out a5_309)
	word32 s1_84
	word32 s3_86
	word32 a4_310
	word32 s2_311
	word32 s4_312
	word32 s0_83 = formEAPOLEthHdr(dwArg0138, dwArg0158, out s1_84, out a4_310, out s2_311, out s3_86, out s4_312)
	Mem100[s0_83 + 18<i32>:byte] = SLICE(CONVERT(Mem17[s1_84 + 4<i32>:byte], byte, word32), byte, 0)
	word32 a5_105 = CONVERT(Mem100[s0_83 + 20<i32>:byte], byte, word32) & 0xFFFFFFF7<32> | CONVERT(Mem100[s1_84 + 6<i32>:byte], byte, word32) & 8<i32>
	word32 a4_106 = CONVERT(Mem100[s0_83 + 19<i32>:byte], byte, word32)
	Mem107[s0_83 + 20<i32>:byte] = SLICE(a5_105, byte, 0)
	Mem110[s0_83 + 19<i32>:byte] = SLICE(a4_106 | 1<i32>, byte, 0)
	Mem115[s0_83 + 19<i32>:byte] = SLICE((a4_106 | 1<i32>) & 0xFFFFFFFD<32> | CONVERT(Mem110[s1_84 + 5<i32>:byte], byte, word32) & 2<32>, byte, 0)
	word32 a3_125 = CONVERT(Mem115[s1_84 + 12<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem115[s1_84 + 10<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem115[s1_84 + 9<i32>:byte], byte, word32)) | CONVERT(Mem115[s1_84 + 11<i32>:byte], byte, word32) << 16<i32>)
	Mem127[s0_83 + 23<i32>:byte] = SLICE(a3_125, byte, 0)
	Mem128[s0_83 + 24<i32>:byte] = SLICE(a3_125 >>u 8<u32>, byte, 0)
	Mem131[s0_83 + 25<i32>:byte] = SLICE(a3_125 >>u 0x10<u32>, byte, 0)
	Mem132[s0_83 + 26<i32>:byte] = SLICE(a3_125 >>u 24<i32>, byte, 0)
	word32 a3_142 = CONVERT(Mem132[s1_84 + 16<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem132[s1_84 + 14<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem132[s1_84 + 13<i32>:byte], byte, word32)) | CONVERT(Mem132[s1_84 + 15<i32>:byte], byte, word32) << 16<i32>)
	Mem144[s0_83 + 27<i32>:byte] = SLICE(a3_142, byte, 0)
	Mem145[s0_83 + 28<i32>:byte] = SLICE(a3_142 >>u 8<u32>, byte, 0)
	Mem148[s0_83 + 29<i32>:byte] = SLICE(a3_142 >>u 0x10<u32>, byte, 0)
	Mem149[s0_83 + 30<i32>:byte] = SLICE(a3_142 >>u 24<i32>, byte, 0)
	word32 a4_150 = CONVERT(Mem149[s1_84 + 6<i32>:byte], byte, word32)
	Mem153[s0_83 + 20<i32>:byte] = SLICE(a5_105 & 0xFFFFFFF8<32> | a4_150 & 7<32>, byte, 0)
	word32 a4_151 = a4_150 & 7<32>
	branch s3_86 == 0<32> l23052B48
l23052B3A:
	word32 a2_313
	word32 a3_314
	word32 a5_315
	word32 a6_316
	word32 a7_317
	memcpy(s0_83 + 31<i32>, s3_86, 32<i32>, out a2_313, out a3_314, out a4_151, out a5_315, out a6_316, out a7_317)
l23052B48:
l23052B74_thunk_dbg_test_print:
	word32 s1_318
	word32 a2_319
	word32 a5_320
	word32 a6_321
	word32 s2_322
	word32 s3_323
	word32 s4_324
	word32 s5_325
	word32 s6_326
	word32 s7_327
	word32 s8_328
	s0Out = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_318, out a2_319, out a5_320, out a6_321, out s2_322, out s3_323, out s4_324, out s5_325, out s6_326, out s7_327, out s8_328)
	a4Out = a4_151
	return ra_69
KeyMgmtSta_PrepareEAPOLFrame_exit:


word32 supplicantAkmIsWpaWpa2(word32 dwArg0158, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
//      supplicantAkmIsWpaWpa2Psk
// MayUse:  Stack +0158:[0..31]
// LiveOut: a0 a4 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
supplicantAkmIsWpaWpa2_entry:
l23052B8A:
	word32 a0_110
	word32 a6_142
	word32 a5_141
	word32 a2_140
	word32 s4_143
	word32 s5_144
	word32 s6_145
	word32 s7_146
	word32 s8_147
	word32 s1_121
	word32 s2_123
	word32 s3_125
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_121, out a2_140, out a5_141, out a6_142, out s2_123, out s3_125, out s4_143, out s5_144, out s6_145, out s7_146, out s8_147)
	word32 a1_148
	word32 a2_149
	word32 a3_150
	word32 a5_151
	word32 a4_115
	branch memcmp(s3_125, 0x23082814<32>, 3<32>, out a1_148, out a2_149, out a3_150, out a4_115, out a5_151) != 0<32> l23052BDE
l23052BDE:
	word32 a1_152
	word32 a2_153
	word32 a3_154
	word32 a5_155
	branch memcmp(s3_125, 0x230827F8<32>, 3<32>, out a1_152, out a2_153, out a3_154, out a4_115, out a5_155) == 0<32> l23052BCE
l23052BF0:
	word32 a2_156
	word32 a5_157
	word32 a6_158
	word32 s4_159
	word32 s5_160
	word32 s6_161
	word32 s7_162
	word32 s8_163
	dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_121, out a2_156, out a5_157, out a6_158, out s2_123, out s3_125, out s4_159, out s5_160, out s6_161, out s7_162, out s8_163)
	a0_110 = 0<32>
l23052BCE:
	a0_110 = 1<32>
l23052BD0:
	a0Out = a0_110
	a4Out = a4_115
	s2Out = s2_123
	s3Out = s3_125
	s4Out = dwArg04
	return s1_121
supplicantAkmIsWpaWpa2_exit:


word32 supplicantAkmIsWpa2(word32 dwArg0158, ptr32 & a0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantAkmUsesKdf
// MayUse:  Stack +0158:[0..31]
// LiveOut: a0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
supplicantAkmIsWpa2_entry:
l23052C0C:
	word32 a0_48
	word32 s3_34
	word32 a2_108
	word32 a5_109
	word32 a6_110
	word32 s4_111
	word32 s5_112
	word32 s6_113
	word32 s7_114
	word32 s8_115
	word32 s1_28
	word32 s2_100
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_28, out a2_108, out a5_109, out a6_110, out s2_100, out s3_34, out s4_111, out s5_112, out s6_113, out s7_114, out s8_115)
	word32 a1_116
	word32 a2_117
	word32 a3_118
	word32 a4_119
	word32 a5_120
	branch memcmp(s3_34, 0x230827F8<32>, 3<32>, out a1_116, out a2_117, out a3_118, out a4_119, out a5_120) == 0<32> l23052C78
l23052C78:
	a0_48 = 1<32>
l23052C50:
	word32 a2_121
	word32 a5_122
	word32 a6_123
	word32 s3_124
	word32 s4_125
	word32 s5_126
	word32 s6_127
	word32 s7_128
	word32 s8_129
	dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_28, out a2_121, out a5_122, out a6_123, out s2_100, out s3_124, out s4_125, out s5_126, out s6_127, out s7_128, out s8_129)
	a0_48 = 0<32>
l23052C6A:
	a0Out = a0_48
	s2Out = s2_100
	return s1_28
supplicantAkmIsWpa2_exit:


word32 supplicantAkmIsWpaWpa2Psk(word32 dwArg0138, word32 dwArg0158, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
// MayUse:  Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
supplicantAkmIsWpaWpa2Psk_entry:
l23052C7C:
	word32 s0_68
	word32 s1_126
	word32 a2_127
	word32 a5_128
	word32 a6_129
	word32 s2_130
	word32 s3_131
	word32 s4_132
	word32 s5_133
	word32 s6_134
	word32 s7_135
	word32 s8_136
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_126, out a2_127, out a5_128, out a6_129, out s2_130, out s3_131, out s4_132, out s5_133, out s6_134, out s7_135, out s8_136)
	word32 a0_41
	word32 s4_52
	word32 s2_137
	word32 s3_138
	word32 a4_116
	supplicantAkmIsWpaWpa2(dwArg0138, out a0_41, out a4_116, out s2_137, out s3_138, out s4_52)
	branch a0_41 == 0<32> l23052CE2
l23052CE2:
	word32 s1_139
	word32 a2_140
	word32 a5_141
	word32 a6_142
	word32 s2_143
	word32 s3_144
	word32 s4_145
	word32 s5_146
	word32 s6_147
	word32 s7_148
	word32 s8_149
	s0_68 = dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_139, out a2_140, out a5_141, out a6_142, out s2_143, out s3_144, out s4_145, out s5_146, out s6_147, out s7_148, out s8_149)
l23052CB8:
	word32 a5_79 = CONVERT(Mem15[s4_52 + 3<i32>:byte], byte, word32)
	a4_116 = 2<32>
	s0_68 = 1<32>
	branch (a5_79 & 251<i32>) == 2<32> l23052CD0
l23052CC8:
	s0_68 = CONVERT(a5_79 <u -5<i32>, bool, word32)
l23052CD0:
	a4Out = a4_116
	return s0_68
supplicantAkmIsWpaWpa2Psk_exit:


word32 supplicantAkmUsesKdf(word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
// MayUse:  Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: s0 sp
supplicantAkmUsesKdf_entry:
l23052CFE:
	word32 s1_120
	word32 a2_121
	word32 a5_122
	word32 a6_123
	word32 s2_124
	word32 s3_125
	word32 s4_126
	word32 s5_127
	word32 s6_128
	word32 s7_129
	word32 s8_130
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_120, out a2_121, out a5_122, out a6_123, out s2_124, out s3_125, out s4_126, out s5_127, out s6_128, out s7_129, out s8_130)
	word32 a0_35
	word32 s2_112
	word32 s1_43 = supplicantAkmIsWpa2(dwArg0148, out a0_35, out s2_112)
	branch a0_35 == 0<32> l23052D46
l23052D34:
	branch (CONVERT(Mem9[s1_43 + 3<i32>:byte], byte, word32) + 0xFFFFFFFD<32> & 255<i32>) <=u 3<32> l23052D68
l23052D46:
	word32 s1_131
	word32 a2_132
	word32 a5_133
	word32 a6_134
	word32 s3_135
	word32 s4_136
	word32 s5_137
	word32 s6_138
	word32 s7_139
	word32 s8_140
	dbg_test_print(0x2307C3D0<32>, dwArg0168, out s1_131, out a2_132, out a5_133, out a6_134, out s2_112, out s3_135, out s4_136, out s5_137, out s6_138, out s7_139, out s8_140)
l23052D68:
	return s2_112
supplicantAkmUsesKdf_exit:


word32 supplicantConstructContext(word32 dwArgA8, word32 dwArg0158, word32 dwArg0178, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmt_DerivePTK
// MayUse:  Stack +00A8:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a6 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
supplicantConstructContext_entry:
l23052D72:
	word32 a1_79
	word32 s4_44
	word32 s2_48
	word32 s3_49
	word32 s5_50
	word32 s6_51
	word32 s8_257
	word32 a6_255
	word32 s7_256
	word32 a2_253
	word32 a5_254
	word32 s1_252
	word32 s0_42 = dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_252, out a2_253, out a5_254, out a6_255, out s2_48, out s3_49, out s4_44, out s5_50, out s6_51, out s7_256, out s8_257)
	word32 a4_261
	word32 a5_262
	word32 a2_259
	word32 a3_260
	word32 a1_258
	branch memcmp(s4_44, s5_50, 6<32>, out a1_258, out a2_259, out a3_260, out a4_261, out a5_262) >= 0<32> l23052E3A
l23052E3A:
	word32 a5_266
	word32 a4_265
	word32 a2_263
	word32 a3_264
	word32 a6_267
	word32 a7_268
	memcpy(s0_42, s5_50, 6<32>, out a2_263, out a3_264, out a4_265, out a5_266, out a6_267, out a7_268)
	a1_79 = s4_44
l23052DC6:
	word32 a2_269
	word32 a3_270
	word32 a4_271
	word32 a5_272
	word32 a6_273
	word32 a7_274
	memcpy(s0_42, s4_44, 6<32>, out a2_269, out a3_270, out a4_271, out a5_272, out a6_273, out a7_274)
	a1_79 = s5_50
l23052DD2:
	word32 a1_145
	word32 a2_294
	word32 a3_295
	word32 a4_296
	word32 a5_297
	word32 a6_298
	word32 a7_299
	memcpy(s6_51, a1_79, 6<32>, out a2_294, out a3_295, out a4_296, out a5_297, out a6_298, out a7_299)
	word32 a1_300
	word32 a2_301
	word32 a3_302
	word32 a4_303
	word32 a5_304
	branch memcmp(s2_48, s3_49, 32<i32>, out a1_300, out a2_301, out a3_302, out a4_303, out a5_304) >= 0<32> l23052E48
l23052E48:
	word32 a2_275
	word32 a3_276
	word32 a4_277
	word32 a5_278
	word32 a6_279
	word32 a7_280
	memcpy(s0_42 + 12<i32>, s3_49, 32<i32>, out a2_275, out a3_276, out a4_277, out a5_278, out a6_279, out a7_280)
	a1_145 = s2_48
l23052DF4:
	word32 a2_281
	word32 a3_282
	word32 a4_283
	word32 a5_284
	word32 a6_285
	word32 a7_286
	memcpy(s0_42 + 12<i32>, s2_48, 32<i32>, out a2_281, out a3_282, out a4_283, out a5_284, out a6_285, out a7_286)
	a1_145 = s3_49
l23052E02:
	word32 a2_305
	word32 a3_306
	word32 a4_307
	word32 a5_308
	word32 a6_309
	word32 a7_310
	memcpy(s0_42 + 44<i32>, a1_145, 32<i32>, out a2_305, out a3_306, out a4_307, out a5_308, out a6_309, out a7_310)
	0<32> = dwArgA8
l23052E36_thunk_dbg_test_print:
	word32 a6_203
	word32 s1_205
	word32 s2_210
	word32 s3_211
	word32 a2_287
	word32 a5_288
	word32 s4_289
	word32 s5_290
	word32 s6_291
	word32 s7_292
	word32 s8_293
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_205, out a2_287, out a5_288, out a6_203, out s2_210, out s3_211, out s4_289, out s5_290, out s6_291, out s7_292, out s8_293)
	a6Out = a6_203
	s2Out = s2_210
	s3Out = s3_211
	return s1_205
supplicantConstructContext_exit:


word32 KeyMgmt_DerivePTK(word32 ra, word32 dwArg04, word32 dwArg78, word32 dwArg0128, word32 dwArg0148, word32 dwArg0178, ptr32 & s1Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_DeriveKeys
// MayUse:  ra:[0..31] Stack +0004:[0..31] Stack +0078:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s1 s3 s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s11 sp
KeyMgmt_DerivePTK_entry:
l23052E58:
	word32 s1_236
	word32 a2_237
	word32 a5_238
	word32 a6_239
	word32 s2_240
	word32 s3_241
	word32 s4_242
	word32 s5_243
	word32 s6_244
	word32 s7_245
	word32 s8_246
	dbg_test_print(0x2307C3BC<32>, dwArg0148, out s1_236, out a2_237, out a5_238, out a6_239, out s2_240, out s3_241, out s4_242, out s5_243, out s6_244, out s7_245, out s8_246)
	word32 a6_68
	word32 s2_72
	word32 s3_73
	word32 s1_71 = supplicantConstructContext(dwArg78, dwArg0128, dwArg0148, out a6_68, out s2_72, out s3_73)
	branch a6_68 == 0<32> l23052F04
l23052F04:
	word32 s0_247
	word32 s1_248
	word32 s4_249
	Bl_PRF(ra, s3_73, 32<i32>, 0x2307C6E8<32>, 0x16<32>, s1_71, 76<i32>, s2_72, 64<i32>, dwArg04, out s0_247, out s1_248, out s4_249)
l23052EB8:
	bl_sha256_crypto_kdf(ra, s3_73, 32<i32>, s1_71, 76<i32>, s2_72, 384<i32>)
l23052ED2:
	0<32> = dwArg0128
l23052F00_thunk_dbg_test_print:
	word32 s1_179
	word32 s4_180
	word32 s3_185
	word32 s6_187
	word32 a2_250
	word32 a5_251
	word32 a6_252
	word32 s2_253
	word32 s5_254
	word32 s7_255
	word32 s8_256
	word32 s0_178 = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_179, out a2_250, out a5_251, out a6_252, out s2_253, out s3_185, out s4_180, out s5_254, out s6_187, out s7_255, out s8_256)
	s1Out = s1_179
	s3Out = s3_185
	s4Out = s4_180
	s6Out = s6_187
	return s0_178
KeyMgmt_DerivePTK_exit:


word32 KeyMgmtSta_DeriveKeys(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
//      KeyMgmtAp_DerivePTK
// MayUse:  ra:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
KeyMgmtSta_DeriveKeys_entry:
l23052F22:
	word32 s4_55
	word32 s5_61
	word32 s1_263
	word32 a2_264
	word32 a5_265
	word32 a6_266
	word32 s2_267
	word32 s3_268
	word32 s6_269
	word32 s7_270
	word32 s8_271
	word32 s0_53 = dbg_test_print(0x2307C3BC<32>, dwLocC8, out s1_263, out a2_264, out a5_265, out a6_266, out s2_267, out s3_268, out s4_55, out s5_61, out s6_269, out s7_270, out s8_271)
	branch s5_61 == 0<32> l23052FF2
l23052F8A:
	branch s4_55 == 0<32> l23052FF2
l23052F8E:
	branch s0_53 == 0<32> l23052FF2
l23052F90:
	word32 s4_85
	word32 s6_87
	word32 s1_272
	word32 s3_273
	word32 s0_80 = KeyMgmt_DerivePTK(ra, dwLoc023C, dwLoc01C8, dwLoc0118, dwLocF8, dwLocC8, out s1_272, out s3_273, out s4_85, out s6_87)
	word32 a2_274
	word32 a3_275
	word32 a4_276
	word32 a5_277
	word32 a6_278
	word32 a7_279
	memcpy(s4_85, fp + -548<i32>, 0x10<32>, out a2_274, out a3_275, out a4_276, out a5_277, out a6_278, out a7_279)
	word32 a2_280
	word32 a3_281
	word32 a4_282
	word32 a5_283
	word32 a6_284
	word32 a7_285
	memcpy(s6_87, fp + -532<i32>, 0x10<32>, out a2_280, out a3_281, out a4_282, out a5_283, out a6_284, out a7_285)
	word32 a2_286
	word32 a3_287
	word32 a4_288
	word32 a5_289
	word32 a6_290
	word32 a7_291
	memcpy(s0_80, fp + -516<i32>, 0x10<32>, out a2_286, out a3_287, out a4_288, out a5_289, out a6_290, out a7_291)
	word32 a2_292
	word32 a3_293
	word32 a4_294
	word32 a5_295
	word32 a6_296
	word32 a7_297
	memcpy(s0_80 + 16<i32>, fp + -500<i32>, 8<32>, out a2_292, out a3_293, out a4_294, out a5_295, out a6_296, out a7_297)
	word32 a2_298
	word32 a3_299
	word32 a5_300
	word32 a6_301
	word32 a7_302
	memcpy(s0_80 + 24<i32>, fp + -492<i32>, 8<32>, out a2_298, out a3_299, out a4, out a5_300, out a6_301, out a7_302)
	word32 s1_303
	word32 a2_304
	word32 a5_305
	word32 a6_306
	word32 s2_307
	word32 s3_308
	word32 s4_309
	word32 s5_310
	word32 s6_311
	word32 s7_312
	word32 s8_313
	dbg_test_print(0x2307C3D0<32>, dwLocC8, out s1_303, out a2_304, out a5_305, out a6_306, out s2_307, out s3_308, out s4_309, out s5_310, out s6_311, out s7_312, out s8_313)
l23052FF2:
	return a4
KeyMgmtSta_DeriveKeys_exit:


word32 SetEAPOLKeyDescTypeVersion(word32 dwArg0158, word32 dwArg0178, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      PrepDefaultEapolMsg
// MayUse:  Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a5 s1 s3 s5
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
SetEAPOLKeyDescTypeVersion_entry:
l23053024:
	word32 s1_32
	word32 a2_90
	word32 a5_91
	word32 a6_92
	word32 s2_93
	word32 s3_94
	word32 s4_95
	word32 s5_96
	word32 s6_97
	word32 s7_98
	word32 s8_99
	word32 s0_31 = dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_32, out a2_90, out a5_91, out a6_92, out s2_93, out s3_94, out s4_95, out s5_96, out s6_97, out s7_98, out s8_99)
	word32 a2_42 = CONVERT(Mem15[s1_32 + 20<i32>:byte], byte, word32)
	Mem44[s1_32 + 18<i32>:byte] = 2<8>
	Mem49[s1_32 + 20<i32>:byte] = SLICE(a2_42 & 0xFFFFFFF8<32> | CONVERT(s0_31 != 0<32>, bool, word32) + 2<32>, byte, 0)
l23053094_thunk_dbg_test_print:
	word32 a5_62
	word32 s1_65
	word32 s3_71
	word32 s5_72
	word32 a2_100
	word32 a6_101
	word32 s2_102
	word32 s4_103
	word32 s6_104
	word32 s7_105
	word32 s8_106
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_65, out a2_100, out a5_62, out a6_101, out s2_102, out s3_71, out s4_103, out s5_72, out s6_104, out s7_105, out s8_106)
	a5Out = a5_62
	s3Out = s3_71
	s5Out = s5_72
	return s1_65
SetEAPOLKeyDescTypeVersion_exit:


word32 GetKeyMsgNonceFromEAPOL(word32 ra, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg4C, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
//      ProcessRxEAPOL_PwkMsg3
//      ProcessRxEAPOL_GrpMsg1
// MayUse:  ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +004C:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 ra s1 s10 s2 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
GetKeyMsgNonceFromEAPOL_entry:
l23053098:
	word32 s0_130
	word32 s1_223
	word32 a2_224
	word32 a5_225
	word32 a6_226
	word32 s2_227
	word32 s3_228
	word32 s4_229
	word32 s5_230
	word32 s6_231
	word32 s7_232
	word32 s8_233
	word32 s0_38 = Mem11[dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_223, out a2_224, out a5_225, out a6_226, out s2_227, out s3_228, out s4_229, out s5_230, out s6_231, out s7_232, out s8_233) + 8<i32>:word32]
	word32 a0_41
	word32 a4_179
	word32 a3_177
	word32 s1_131
	word32 s10_100
	word32 s2_136
	word32 s7_140
	word32 s9_109
	word32 ra_185 = KeyMgmtSta_IsRxEAPOLValid(ra, dwArg28, dwArg0108, dwArg0128, dwArg0138, dwArg0158, out s1_131, out a0_41, out a3_177, out a4_179, out s2_136, out s7_140, out s9_109, out s10_100)
	branch a0_41 == 0<32> l23053126
l23053126:
	s0_130 = 0<32>
l230530D6:
	branch (CONVERT(Mem11[s0_38 + 5<i32>:byte], byte, word32) & 1<32>) != 0<32> l230530F8
l230530DE:
	word32 a2_242
	word32 a3_243
	word32 a4_244
	word32 a5_245
	word32 a6_246
	word32 a7_247
	memcpy(s2_136, s0_38 + 17<i32>, 32<i32>, out a2_242, out a3_243, out a4_244, out a5_245, out a6_246, out a7_247)
	word32 s0_248
	word32 s1_249
	word32 a0_250
	ra_185 = supplicantGenerateRand(ra_185, dwArg00, dwArg04, dwArg4C, dwArgF8, dwArg0148, dwArg0168, out s0_248, out s1_249, out a0_250, out a3_177, out a4_179, out s9_109, out s10_100)
l230530F8:
	word32 a2_234
	word32 a5_235
	word32 a6_236
	word32 s3_237
	word32 s4_238
	word32 s5_239
	word32 s6_240
	word32 s8_241
	s0_130 = dbg_test_print(0x2307C3D0<32>, dwArg0168, out s1_131, out a2_234, out a5_235, out a6_236, out s2_136, out s3_237, out s4_238, out s5_239, out s6_240, out s7_140, out s8_241)
l23053118:
	0<32> = dwArg38
	s1Out = s1_131
	a0Out = s0_130
	a3Out = a3_177
	a4Out = a4_179
	s2Out = s2_136
	s7Out = s7_140
	s9Out = s9_109
	s10Out = s10_100
	return ra_185
GetKeyMsgNonceFromEAPOL_exit:


word32 ProcessRxEAPOL_PwkMsg3(word32 ra, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg2C, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg3
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 ra s1 s10 s2 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ProcessRxEAPOL_PwkMsg3_entry:
l2305312A:
	word32 s0_177
	word32 s1_305
	word32 a2_306
	word32 a5_307
	word32 a6_308
	word32 s2_309
	word32 s3_310
	word32 s4_311
	word32 s5_312
	word32 s6_313
	word32 s7_314
	word32 s8_315
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_305, out a2_306, out a5_307, out a6_308, out s2_309, out s3_310, out s4_311, out s5_312, out s6_313, out s7_314, out s8_315)
	word32 a0_42
	word32 a4_144
	word32 a3_143
	word32 s1_124
	word32 s10_100
	word32 s2_125
	word32 s7_130
	word32 s9_108
	word32 ra_50 = GetKeyMsgNonceFromEAPOL(ra, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg2C, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s1_124, out a0_42, out a3_143, out a4_144, out s2_125, out s7_130, out s9_108, out s10_100)
	branch a0_42 != 0<32> l2305317A
l2305317A:
	Mem71[s1_124 + 248<i32>:word16] = 1<16>
	Mem72[s1_124 + 244<i32>:word32] = 0<32>
	branch (CONVERT(Mem72[a0_42 + 5<i32>:byte], byte, word32) & 0x10<32>) == 0<32> l230531C6
l2305318E:
	word32 a1_324
	word32 a2_325
	word32 a3_326
	word32 a4_327
	word32 a5_328
	mm_timer_clear(s1_124 + 264<i32>, a4_144, mstatus, out a1_324, out a2_325, out a3_326, out a4_327, out a5_328)
	word32 s1_329
	word32 s3_330
	KeyMgmtSta_ApplyKEK(dwArg0138, dwArg0158, out s1_329, out a3_143, out a4_144, out s3_330, out s9_108, out s10_100)
	word32 a0_119
	s1_124 = keyMgmtProcessMsgExt(dwArg18, dwArg0148, out a0_119, out s2_125, out s7_130)
	branch a0_119 == 0<32> l23053168
l230531B0:
	a3_143 = parseKeyDataGTK(dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out a4_144)
l230531C6:
	word32 a2_316
	word32 a5_317
	word32 a6_318
	word32 s3_319
	word32 s4_320
	word32 s5_321
	word32 s6_322
	word32 s8_323
	s0_177 = dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_124, out a2_316, out a5_317, out a6_318, out s2_125, out s3_319, out s4_320, out s5_321, out s6_322, out s7_130, out s8_323)
l23053168:
	s0_177 = 0<32>
l2305316A:
	s1Out = s1_124
	a0Out = s0_177
	a3Out = a3_143
	a4Out = a4_144
	s2Out = s2_125
	s7Out = s7_130
	s9Out = s9_108
	s10Out = s10_100
	return ra_50
ProcessRxEAPOL_PwkMsg3_exit:


word32 ProcessRxEAPOL_GrpMsg1(word32 ra, word32 mstatus, word32 dwArg08, word32 dwArg1C, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_GrpMsg1
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 ra s10 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ProcessRxEAPOL_GrpMsg1_entry:
l230531E8:
	word32 s0_245
	word32 a0_378
	word32 s2_379
	word32 s7_380
	word32 s1_377
	word32 s9_381
	word32 a4_171
	word32 a3_176
	word32 s10_28
	word32 ra_26 = GetKeyMsgNonceFromEAPOL(ra, dwLoc30, dwLoc2C, dwLoc08, dwArg08, dwArg1C, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s1_377, out a0_378, out a3_176, out a4_171, out s2_379, out s7_380, out s9_381, out s10_28)
	word32 s1_382
	word32 a2_383
	word32 a5_384
	word32 a6_385
	word32 s3_386
	word32 s4_387
	word32 s5_388
	word32 s6_389
	word32 s7_390
	word32 s8_391
	word32 s2_223
	branch dbg_test_print(0x2307C3BC<32>, dwArg0148, out s1_382, out a2_383, out a5_384, out a6_385, out s2_223, out s3_386, out s4_387, out s5_388, out s6_389, out s7_390, out s8_391) != 0<32> l23053238
l23053238:
	word32 a4_77
	word32 s1_82
	word32 s3_85
	word32 a3_392
	word32 s9_393
	word32 s0_81 = KeyMgmtSta_ApplyKEK(dwArg0128, dwArg0148, out s1_82, out a3_392, out a4_77, out s3_85, out s9_393, out s10_28)
	Mem101[0x75<32>:word32] = s1_82
	word32 a1_394
	word32 a2_395
	word32 a3_396
	word32 a4_397
	word32 a5_398
	word32 s1_108 = mm_timer_clear(s1_82 + 264<i32>, a4_77, mstatus, out a1_394, out a2_395, out a3_396, out a4_397, out a5_398)
	word32 a5_115 = CONVERT(Mem101[s0_81 + 97<i32>:byte], byte, word32)
	word32 a2_116 = CONVERT(Mem101[s0_81 + 98<i32>:byte], byte, word32)
	branch CONVERT(Mem101[s0_81 + 4<i32>:byte], byte, word32) != 2<32> l230532A2
l230532A2:
	word32 a2_399
	word32 a3_400
	word32 a4_401
	word32 a5_402
	word32 a6_403
	word32 a7_404
	memcpy(s3_85, s0_81 + 99<i32>, a2_116 << 8<i32> | a5_115, out a2_399, out a3_400, out a4_401, out a5_402, out a6_403, out a7_404)
	word32 a2_405
	word32 a3_406
	word32 a4_407
	word32 a5_408
	word32 a6_409
	word32 a7_410
	memcpy(fp + -40<i32>, s1_108 + 196<i32>, 8<32>, out a2_405, out a3_406, out a4_407, out a5_408, out a6_409, out a7_410)
	word32 a2_411
	word32 a3_412
	word32 a4_413
	word32 a5_414
	word32 a6_415
	word32 a7_416
	memcpy(s1_108 + 196<i32>, s1_108 + 188<i32>, 8<32>, out a2_411, out a3_412, out a4_413, out a5_414, out a6_415, out a7_416)
	word32 a2_417
	word32 a5_418
	word32 a6_419
	word32 a7_420
	memcpy(s1_108 + 188<i32>, fp + -40<i32>, 8<32>, out a2_417, out a3_176, out a4_171, out a5_418, out a6_419, out a7_420)
	Mem187[s1_108 + 210<i32>:word16] = SLICE(CONVERT(Mem101[s0_81 + 6<i32>:byte], byte, word32) >>u 4<i32> & 3<32>, word16, 0)
l2305326A:
	a3_176 = parseKeyDataGTK(dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out a4_171)
	word32 a0_217
	word32 s7_421
	keyMgmtProcessMsgExt(dwArg08, dwArg0138, out a0_217, out s2_223, out s7_421)
	branch a0_217 == 0<32> l23053224
l23053280:
	word32 s1_422
	word32 a2_423
	word32 a5_424
	word32 a6_425
	word32 s3_426
	word32 s4_427
	word32 s5_428
	word32 s6_429
	word32 s7_430
	word32 s8_431
	s0_245 = dbg_test_print(0x2307C3D0<32>, dwArg0148, out s1_422, out a2_423, out a5_424, out a6_425, out s2_223, out s3_426, out s4_427, out s5_428, out s6_429, out s7_430, out s8_431)
l23053224:
	s0_245 = 0<32>
l23053226:
	0<32> = dwArg0128
	a0Out = s0_245
	a3Out = a3_176
	a4Out = a4_171
	s2Out = s2_223
	s10Out = s10_28
	return ra_26
ProcessRxEAPOL_GrpMsg1_exit:


word32 KeyMgmtResetCounter(word32 dwArg0168, word32 dwArg0178, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantInit
// MayUse:  Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: s1 s3
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
KeyMgmtResetCounter_entry:
l230532E2:
	word32 s1_24
	word32 a6_76
	word32 a5_75
	word32 a2_74
	word32 s2_77
	word32 s3_78
	word32 s4_79
	word32 s5_80
	word32 s6_81
	word32 s7_82
	word32 s8_83
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_24, out a2_74, out a5_75, out a6_76, out s2_77, out s3_78, out s4_79, out s5_80, out s6_81, out s7_82, out s8_83)
	branch s1_24 == 0<32> l2305331A
l23053312:
	Mem34[s1_24 + 112<i32>:word32] = 0<32>
	Mem35[s1_24 + 108<i32>:word32] = 0<32>
l2305331A:
l2305333E_thunk_dbg_test_print:
	word32 s1_52
	word32 s3_58
	word32 a2_84
	word32 a5_85
	word32 a6_86
	word32 s2_87
	word32 s4_88
	word32 s5_89
	word32 s6_90
	word32 s7_91
	word32 s8_92
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_52, out a2_84, out a5_85, out a6_86, out s2_87, out s3_58, out s4_88, out s5_89, out s6_90, out s7_91, out s8_92)
	s3Out = s3_58
	return s1_52
KeyMgmtResetCounter_exit:


word32 keyMgmtSta_StartSession_internal(word32 ra, word32 a4, word32 mstatus, word32 dwArgE8, word32 dwArg0158, word32 dwArg0178, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      keyMgmtSta_StartSession
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +00E8:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: s1 s3
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a3 a4 sp
keyMgmtSta_StartSession_internal_entry:
l23053342:
	word32 s2_35
	word32 s3_36
	word32 a2_118
	word32 s1_117
	word32 a5_119
	word32 a6_120
	word32 s4_121
	word32 s5_122
	word32 s6_123
	word32 s7_124
	word32 s8_125
	word32 s0_29 = dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_117, out a2_118, out a5_119, out a6_120, out s2_35, out s3_36, out s4_121, out s5_122, out s6_123, out s7_124, out s8_125)
	branch Mem13[s0_29 + 260<i32>:int32] != 0<32> l2305338A
l2305337C:
	word32 s1_126
	word32 a0_127
	word32 a1_128
	word32 a2_129
	word32 a3_130
	word32 a4_131
	word32 a5_132
	word32 s2_133
	word32 s3_134
	word32 s4_135
	word32 s8_136
	s0_29 = mm_timer_set(ra, s0_29 + 264<i32>, Mem13[s2_35 + 288<i32>:int32] + s3_36, a4, mstatus, dwArgE8, out s1_126, out a0_127, out a1_128, out a2_129, out a3_130, out a4_131, out a5_132, out s2_133, out s3_134, out s4_135, out s8_136)
l2305338A:
	Mem62[s0_29 + 96<i32>:word32] = 0<32>
	Mem63[s0_29 + 100<i32>:word32] = 0<32>
	Mem64[s0_29 + 104<i32>:word32] = 0<32>
l230533BE_thunk_dbg_test_print:
	word32 s1_84
	word32 s3_90
	word32 a2_137
	word32 a5_138
	word32 a6_139
	word32 s2_140
	word32 s4_141
	word32 s5_142
	word32 s6_143
	word32 s7_144
	word32 s8_145
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_84, out a2_137, out a5_138, out a6_139, out s2_140, out s3_90, out s4_141, out s5_142, out s6_143, out s7_144, out s8_145)
	s3Out = s3_90
	return s1_84
keyMgmtSta_StartSession_internal_exit:


word32 KeyMgmtSta_InitSession(word32 dwArg0158, word32 dwArg0178, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtInitSta
// MayUse:  Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s2
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
KeyMgmtSta_InitSession_entry:
l230533C2:
	word32 s1_84
	word32 a2_85
	word32 a5_86
	word32 a6_87
	word32 s2_88
	word32 s3_89
	word32 s4_90
	word32 s5_91
	word32 s6_92
	word32 s7_93
	word32 s8_94
	word32 s0_27 = dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_84, out a2_85, out a5_86, out a6_87, out s2_88, out s3_89, out s4_90, out s5_91, out s6_92, out s7_93, out s8_94)
	Mem40[s0_27 + 116<i32>:word32] = 0<32>
	Mem41[s0_27 + 120<i32>:word32] = 0<32>
	Mem42[s0_27 + 128<i32>:word32] = 0<32>
	Mem43[s0_27 + 124<i32>:word32] = 0<32>
	Mem44[s0_27 + 268<i32>:word32] = 0x2305213C<32>
	Mem45[s0_27 + 272<i32>:word32] = s0_27
l23053434_thunk_dbg_test_print:
	word32 s2_66
	word32 s1_95
	word32 a2_96
	word32 a5_97
	word32 a6_98
	word32 s3_99
	word32 s4_100
	word32 s5_101
	word32 s6_102
	word32 s7_103
	word32 s8_104
	word32 s0_60 = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_95, out a2_96, out a5_97, out a6_98, out s2_66, out s3_99, out s4_100, out s5_101, out s6_102, out s7_103, out s8_104)
	s2Out = s2_66
	return s0_60
KeyMgmtSta_InitSession_exit:


void bl_sha256_crypto_kdf(word32 ra, word32 a0, word32 a1, word32 a4, word32 a5, word32 a6, word32 a7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmt_DerivePTK
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_sha256_crypto_kdf_entry:
l23053438:
	word32 s2_14 = a4 + a5
	word32 s7_41 = a1
	word16 wLoc72_156 = SLICE(a7, word16, 0)
	word16 wLoc62_157 = 1<16>
	word32 s1_106 = s2_14
	word32 s0_107 = a7 + 255<i32> >> 8<i32> & 255<i32>
l23053484:
	branch s0_107 >=u CONVERT(wLoc62_157, word16, word32) l230534B8
l230534B8:
	a6 = hmac_sha256_vector(ra, a0, s7_41, 4<32>, fp + -96<i32>, fp + -80<i32>, s1_106, out s7_41)
	s1_106 = s1_106 + 32<i32>
	s0_107 = dwLoc78
	wLoc62_157 = SLICE(CONVERT(SLICE(a5, word16, 16), word16, word32) + 1<32>, word16, 0)
l2305348C:
	word32 a7_206
	word32 a6_205
	word32 a5_204
	word32 a4_203
	word32 a3_202
	word32 a2_201
	memcpy(a6, s2_14, CONVERT(wLoc72_156, word16, word32) >>u 3<i32>, out a2_201, out a3_202, out a4_203, out a5_204, out a6_205, out a7_206)
	return
bl_sha256_crypto_kdf_exit:


word32 Bl_F(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 a7, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl60x_fw_password_hash
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] a7:[0..31] ra:[0..31]
// LiveOut: ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
Bl_F_entry:
l230534EC:
	word32 a3_40
	word32 a1_258
	word32 a2_259
	word32 a4_260
	word32 a5_261
	word32 a0_39 = strlen(a2, out a1_258, out a2_259, out a3_40, out a4_260, out a5_261)
	word32 a6_59
	word32 a2_262
	word32 a3_263
	word32 a4_264
	word32 a5_265
	word32 a7_266
	memcpy(a0, a3_40, a4, out a2_262, out a3_263, out a4_264, out a5_265, out a6_59, out a7_266)
	word32 a4_67 = a0 + dwLoc48
	Mem70[a4_67:byte] = SLICE(a6_59 >> 0x18<u32>, byte, 0)
	Mem72[a4_67 + 1<i32>:byte] = SLICE(a6_59 >> 0x10<u32>, byte, 0)
	Mem74[a4_67 + 2<i32>:byte] = SLICE(a6_59 >> 8<u32>, byte, 0)
	Mem75[a4_67 + 3<i32>:byte] = SLICE(a6_59, byte, 0)
	Bl_hmac_sha1(ra, 1<32>, a2, a0_39, a1, 0x14<32>)
	word32 a2_267
	word32 a3_268
	word32 a4_269
	word32 a5_270
	word32 a6_271
	word32 a7_272
	memcpy(a7, a1, 0x14<32>, out a2_267, out a3_268, out a4_269, out a5_270, out a6_271, out a7_272)
	word32 s0_113 = 1<32>
l23053570:
	branch s0_113 < a5 l2305358A
l2305358A:
	Bl_hmac_sha1(ra, 1<32>, a2, a0_39, a0, 0x14<32>)
	word32 a2_273
	word32 a3_274
	word32 a4_275
	word32 a5_276
	word32 a6_277
	word32 a7_278
	memcpy(a1, a0, 0x14<32>, out a2_273, out a3_274, out a4_275, out a5_276, out a6_277, out a7_278)
	word32 a5_164 = 0<32>
l230535AA:
	word32 a3_167 = a7 + a5_164
	Mem175[a3_167:byte] = SLICE(CONVERT(Mem170[a0 + a5_164:byte], byte, word32) ^ CONVERT(Mem170[a3_167:byte], byte, word32), byte, 0)
	a5_164 = a5_164 + 1<32>
	branch a5_164 != 0x14<32> l230535AA
l230535C6:
	s0_113 = s0_113 + 1<32>
l23053574:
	s0Out = s0_113
	s1Out = a6
	s2Out = a1
	return dwLoc08
Bl_F_exit:


word32 Bl_PasswordHash(word32 ra, word32 a0, word32 a2, word32 a3, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl60x_fw_password_hash
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
Bl_PasswordHash_entry:
l230535CA:
	word32 a0_114
	word32 s1_147 = a2
	word32 a1_171
	word32 a2_172
	word32 a3_173
	word32 a4_174
	word32 a5_175
	branch strlen(a0, out a1_171, out a2_172, out a3_173, out a4_174, out a5_175) >u 63<i32> l23053638
l23053638:
	a0_114 = 0xFFFFFFFF<32>
l230535EA:
	a0_114 = 0xFFFFFFFF<32>
	branch a2 > 32<i32> l2305362A
l230535F4:
	word32 s0_49
	word32 s1_50
	word32 s2_51
	word32 ra_48 = Bl_F(ra, fp + -68<i32>, fp + -88<i32>, a0, a2, 0x1000000<32>, a3, out s0_49, out s1_50, out s2_51)
	word32 a2_176
	word32 a3_177
	word32 a4_178
	word32 a5_179
	word32 a6_180
	word32 a7_181
	memcpy(s0_49 + 20<i32>, s0_49, 0xC<32>, out a2_176, out a3_177, out a4_178, out a5_179, out a6_180, out a7_181)
	word32 s0_182
	word32 s2_183
	Bl_F(ra_48, fp + -68<i32>, fp + -88<i32>, s2_51, s1_50, 0x1000000<32>, s0_49, out s0_182, out s1_147, out s2_183)
	a0_114 = 0<32>
l2305362A:
	a0Out = a0_114
	return s1_147
Bl_PasswordHash_exit:


word32 bl60x_fw_password_hash(word32 ra, word32 a0, word32 a2, word32 a3, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_psk_cal
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl60x_fw_password_hash_entry:
l2305363C:
l2305363C_thunk_Bl_PasswordHash:
	word32 a0_7
	word32 s1_15 = Bl_PasswordHash(ra, a0, a2, a3, out a0_7)
	a0Out = a0_7
	return s1_15
bl60x_fw_password_hash_exit:


word32 pmkCacheFindPSK(word32 ra, word32 mstatus, word32 dwArg18, word32 dwArg58, word32 dwArg98, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
pmkCacheFindPSK_entry:
l23053640:
	word32 a6_204
	word32 a5_203
	word32 a2_202
	word32 s1_201
	word32 s2_205
	word32 s3_206
	word32 s4_207
	word32 s5_208
	word32 s6_209
	word32 s7_210
	word32 s8_211
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_201, out a2_202, out a5_203, out a6_204, out s2_205, out s3_206, out s4_207, out s5_208, out s6_209, out s7_210, out s8_211)
	word32 s3_212
	word32 s4_213
	word32 s5_214
	word32 a4_117
	branch pmkCacheFindPSKElement(dwArg0108, dwArg0118, dwArg0128, out a4_117, out s3_212, out s4_213, out s5_214) == 0<32> l230536B6
l230536B6:
	branch CONVERT(Mem15[0x42045F70<32>:byte], byte, word32) == 0<32> l23053684
l230536C0:
	pmkCacheAddPSK(ra, dwArgE8, dwArgF8, dwArg0108, dwArg0138, dwArg0158)
	word32 s4_100
	word32 a4_226
	word32 s3_227
	word32 s5_228
	word32 a0_89 = pmkCacheFindPSKElement(dwArg0108, dwArg0118, dwArg0128, out a4_226, out s3_227, out s4_100, out s5_228)
	word32 a1_229
	word32 a2_230
	word32 a3_231
	word32 a4_232
	word32 a5_233
	word32 s1_234
	word32 a5_235
	pmkCacheGeneratePSK(ra, strlen(s4_100 + -144<i32>, out a1_229, out a2_230, out a3_231, out a4_232, out a5_233) & 255<i32>, s4_100, mstatus, dwArg18, dwArg58, dwArg98, dwArgE8, dwArg0108, dwArg0128, dwArg0158, out s1_234, out a5_235)
	a4_117 = a0_89 + 32<i32>
l23053680:
l23053684:
	word32 s1_215
	word32 a2_216
	word32 a5_217
	word32 a6_218
	word32 s2_219
	word32 s3_220
	word32 s4_221
	word32 s5_222
	word32 s6_223
	word32 s7_224
	word32 s8_225
	word32 a0_163 = dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_215, out a2_216, out a5_217, out a6_218, out s2_219, out s3_220, out s4_221, out s5_222, out s6_223, out s7_224, out s8_225)
	a4Out = a4_117
	return a0_163
pmkCacheFindPSK_exit:


word32 pmkCacheSetPassphrase(word32 ra, word32 mstatus, word32 dwArg18, word32 dwArg58, word32 dwArg98, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_psk
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s2
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a3 a4 a7 sp t0 t1 t4 t5 t6
pmkCacheSetPassphrase_entry:
l230536F0:
	word32 s1_38
	word32 a2_205
	word32 a5_206
	word32 a6_207
	word32 s2_208
	word32 s3_209
	word32 s4_210
	word32 s5_211
	word32 s6_212
	word32 s7_213
	word32 s8_214
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_38, out a2_205, out a5_206, out a6_207, out s2_208, out s3_209, out s4_210, out s5_211, out s6_212, out s7_213, out s8_214)
	branch s1_38 == 0<32> l23053760
l2305372E:
	word32 a2_215
	word32 a3_216
	word32 a4_217
	word32 a5_218
	word32 a6_219
	word32 a7_220
	memcpy(0x42045F70<32>, s1_38, 64<i32>, out a2_215, out a3_216, out a4_217, out a5_218, out a6_219, out a7_220)
	pmkCacheAddPSK(ra, dwArgE8, dwArgF8, dwArg0108, dwArg0138, dwArg0158)
	word32 s3_99
	word32 s4_100
	word32 a4_221
	word32 s5_222
	pmkCacheFindPSKElement(dwArg0108, dwArg0118, dwArg0128, out a4_221, out s3_99, out s4_100, out s5_222)
	word32 s1_223
	word32 a5_224
	pmkCacheGeneratePSK(ra, s3_99, s4_100, mstatus, dwArg18, dwArg58, dwArg98, dwArgE8, dwArg0108, dwArg0128, dwArg0158, out s1_223, out a5_224)
l23053760:
l2305378C_thunk_dbg_test_print:
	word32 s2_153
	word32 s1_225
	word32 a2_226
	word32 a5_227
	word32 a6_228
	word32 s3_229
	word32 s4_230
	word32 s5_231
	word32 s6_232
	word32 s7_233
	word32 s8_234
	word32 s0_147 = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_225, out a2_226, out a5_227, out a6_228, out s2_153, out s3_229, out s4_230, out s5_231, out s6_232, out s7_233, out s8_234)
	s2Out = s2_153
	return s0_147
pmkCacheSetPassphrase_exit:


word32 pmkCacheInit(word32 ra, word32 dwArg38, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantRestoreDefaults
// MayUse:  ra:[0..31] Stack +0038:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
pmkCacheInit_entry:
l23053790:
	word32 s1_94
	word32 a2_95
	word32 a5_96
	word32 a6_97
	word32 s2_98
	word32 s3_99
	word32 s4_100
	word32 s5_101
	word32 s6_102
	word32 s7_103
	word32 s8_104
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_94, out a2_95, out a5_96, out a6_97, out s2_98, out s3_99, out s4_100, out s5_101, out s6_102, out s7_103, out s8_104)
	word32 t1_105
	word32 a0_106
	word32 a1_107
	word32 a2_108
	word32 a3_109
	word32 a4_110
	word32 a5_111
	word32 t1_112
	word32 a0_113
	word32 a1_114
	word32 a2_115
	word32 a3_116
	word32 a4_117
	word32 a5_118
	word32 ra_57 = memset(memset(ra, 0x42045EE8<32>, 0<32>, 134<i32>, out t1_105, out a0_106, out a1_107, out a2_108, out a3_109, out a4_110, out a5_111), 0x42045F70<32>, 0<32>, 64<i32>, out t1_112, out a0_113, out a1_114, out a2_115, out a3_116, out a4_117, out a5_118)
	Mem61[0x42046FB0<32>:byte] = 0<8>
	0<32> = dwArg38
l23053808_thunk_dbg_test_print:
	word32 s1_119
	word32 a2_120
	word32 a5_121
	word32 a6_122
	word32 s2_123
	word32 s3_124
	word32 s4_125
	word32 s5_126
	word32 s6_127
	word32 s7_128
	word32 s8_129
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_119, out a2_120, out a5_121, out a6_122, out s2_123, out s3_124, out s4_125, out s5_126, out s6_127, out s7_128, out s8_129)
	return ra_57
pmkCacheInit_exit:


word32 pmkCacheRomInit(word32 dwArg38, word32 dwArg0168, word32 dwArg0178, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantRestoreDefaults
// MayUse:  Stack +0038:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s2
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
pmkCacheRomInit_entry:
l2305380C:
	word32 s1_78
	word32 a2_79
	word32 a5_80
	word32 a6_81
	word32 s2_82
	word32 s3_83
	word32 s4_84
	word32 s5_85
	word32 s6_86
	word32 s7_87
	word32 s8_88
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_78, out a2_79, out a5_80, out a6_81, out s2_82, out s3_83, out s4_84, out s5_85, out s6_86, out s7_87, out s8_88)
	Mem36[0x42046FBC<32>:word32] = 2<32>
	Mem40[0x42046FB8<32>:word32] = 0x42045EE8<32>
	Mem44[0x42046FB4<32>:word32] = 0x42045F70<32>
	0<32> = dwArg38
l23053882_thunk_dbg_test_print:
	word32 s2_63
	word32 s1_89
	word32 a2_90
	word32 a5_91
	word32 a6_92
	word32 s3_93
	word32 s4_94
	word32 s5_95
	word32 s6_96
	word32 s7_97
	word32 s8_98
	word32 s0_57 = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_89, out a2_90, out a5_91, out a6_92, out s2_63, out s3_93, out s4_94, out s5_95, out s6_96, out s7_97, out s8_98)
	s2Out = s2_63
	return s0_57
pmkCacheRomInit_exit:


word32 pmkCacheNewElement(word32 ra, word32 dwArg0128, word32 dwArg0148, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheAddPSK
// MayUse:  ra:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
pmkCacheNewElement_entry:
l23053886:
	word32 s4_43
	word32 s2_47
	word32 s5_49
	word32 s6_50
	word32 a6_249
	word32 s7_250
	word32 s8_251
	word32 a5_248
	word32 s1_246
	word32 a2_247
	word32 s3_102
	word32 s0_109 = dbg_test_print(0x2307C3BC<32>, dwArg0148, out s1_246, out a2_247, out a5_248, out a6_249, out s2_47, out s3_102, out s4_43, out s5_49, out s6_50, out s7_250, out s8_251)
l230538D4:
	word32 a5_54 = Mem53[s5_49 + -68<i32>:int32]
	branch s0_109 < a5_54 l23053916
l23053916:
	branch CONVERT(Mem53[s2_47 + -80<i32>:int8], int8, int32) != a5_54 l23053932
l2305391E:
	word32 a5_62 = s0_109 + s6_50 + Mem53[s4_43 + -72<i32>:int32]
	Mem65[a5_62 + 66<i32>:byte] = SLICE(CONVERT(Mem53[a5_62 + 66<i32>:byte], byte, word32) + 0xFFFFFFFF<32>, byte, 0)
l23053932:
	branch s3_102 != 0<32> l23053974
l23053936:
	word32 s7_70 = s0_109 + s6_50
	word32 s1_74 = Mem72[s4_43 + -72<i32>:int32] + s7_70
	branch CONVERT(Mem72[s1_74 + 66<i32>:int8], int8, int32) != 0<32> l23053974
l23053946:
	word32 t1_260
	word32 a2_263
	word32 a3_264
	word32 a1_262
	word32 a0_261
	word32 a4_265
	word32 a5_266
	ra = memset(ra, s1_74, 0<32>, 67<i32>, out t1_260, out a0_261, out a1_262, out a2_263, out a3_264, out a4_265, out a5_266)
	word32 a5_91 = CONVERT(Mem72[s2_47 + -80<i32>:int8], int8, int32)
	branch a5_91 >= Mem72[s5_49 + -68<i32>:int32] l23053964
l2305395E:
	Mem95[s2_47 + 4016<i32>:byte] = SLICE(a5_91 + 1<32>, byte, 0)
l23053964:
	Mem105[Mem97[s4_43 + -72<i32>:int32] + s7_70 + 66<i32>:byte] = SLICE(CONVERT(Mem97[s2_47 + -80<i32>:byte], byte, word32), byte, 0)
	s3_102 = s1_74
l23053974:
	s0_109 = s0_109 + 1<32> & 255<i32>
l230538DC:
	word32 a2_253
	word32 s8_259
	word32 s7_258
	word32 s6_257
	word32 s2_134
	word32 s3_135
	word32 s5_136
	word32 a5_254
	word32 s4_256
	word32 a6_255
	word32 s1_252
	dbg_test_print(0x2307C3D0<32>, dwArg0148, out s1_252, out a2_253, out a5_254, out a6_255, out s2_134, out s3_135, out s4_256, out s5_136, out s6_257, out s7_258, out s8_259)
	0<32> = dwArg0128
	s2Out = s2_134
	s3Out = s3_135
	s4Out = dwArg78
	s5Out = s5_136
	return s3_135
pmkCacheNewElement_exit:


void pmkCacheUpdateReplacementRank(word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheFindPSKElement
// MayUse:  Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a3 a4 a7 sp
pmkCacheUpdateReplacementRank_entry:
l2305397C:
	word32 s1_24
	word32 a2_125
	word32 a5_126
	word32 a6_127
	word32 s2_128
	word32 s3_129
	word32 s4_130
	word32 s5_131
	word32 s6_132
	word32 s7_133
	word32 s8_134
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_24, out a2_125, out a5_126, out a6_127, out s2_128, out s3_129, out s4_130, out s5_131, out s6_132, out s7_133, out s8_134)
	branch s1_24 == 0<32> l230539DA
l230539AC:
	word32 a2_35 = CONVERT(Mem9[0x42045FB0<32>:int8], int8, int32)
	branch CONVERT(Mem9[s1_24 + 66<i32>:int8], int8, int32) == a2_35 l230539DA
l230539BC:
	word32 a1_38 = Mem9[0x42045FBC<32>:int32]
	word32 a0_40 = Mem9[0x42045FB8<32>:int32]
	word32 a5_42 = 0<32>
l230539D2:
	branch a5_42 < a1_38 l23053A02
l23053A02:
	word32 a4_51 = a5_42 + 67<i32> + a0_40
	word32 a3_52 = CONVERT(Mem48[a4_51 + 66<i32>:int8], int8, int32)
	branch CONVERT(Mem48[s1_24 + 66<i32>:int8], int8, int32) >= a3_52 l23053A1A
l23053A14:
	Mem54[a4_51 + 66<i32>:byte] = SLICE(a3_52 + 0xFFFFFFFF<32>, byte, 0)
l23053A1A:
	a5_42 = a5_42 + 1<32> & 255<i32>
l230539D6:
	Mem60[s1_24 + 66<i32>:byte] = SLICE(a2_35, byte, 0)
l230539DA:
l230539FE_thunk_dbg_test_print:
	word32 s1_135
	word32 a2_136
	word32 a5_137
	word32 a6_138
	word32 s2_139
	word32 s3_140
	word32 s4_141
	word32 s5_142
	word32 s6_143
	word32 s7_144
	word32 s8_145
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_135, out a2_136, out a5_137, out a6_138, out s2_139, out s3_140, out s4_141, out s5_142, out s6_143, out s7_144, out s8_145)
	return
pmkCacheUpdateReplacementRank_exit:


word32 pmkCacheFindPSKElement(word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheFindPSK
//      pmkCacheSetPassphrase
//      pmkCacheAddPSK
//      pmkCacheDeletePSK
// MayUse:  Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a4 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
pmkCacheFindPSKElement_entry:
l23053A22:
	word32 s8_47
	word32 s2_50
	word32 s3_51
	word32 s6_53
	word32 s7_54
	word32 s4_198
	word32 s5_199
	word32 a5_196
	word32 a6_197
	word32 s1_194
	word32 a2_195
	word32 s0_44 = dbg_test_print(0x2307C3BC<32>, dwArg0148, out s1_194, out a2_195, out a5_196, out a6_197, out s2_50, out s3_51, out s4_198, out s5_199, out s6_53, out s7_54, out s8_47)
l23053A70:
	branch s0_44 < Mem23[s7_54 + -68<i32>:int32] l23053AB8
l23053AB8:
	word32 a0_63 = Mem23[s3_51 + -72<i32>:int32] + (s0_44 + s8_47)
	branch CONVERT(Mem23[a0_63 + 66<i32>:int8], int8, int32) == 0<32> l23053AE0
l23053AC8:
	branch CONVERT(Mem23[a0_63 + 64<i32>:byte], byte, word32) != s2_50 l23053AE0
l23053AD0:
	word32 a1_208
	word32 a2_209
	word32 a3_210
	word32 a5_211
	branch memcmp(a0_63, s6_53, s2_50, out a1_208, out a2_209, out a3_210, out a4, out a5_211) != 0<32> l23053AE0
l23053ADA:
l23053AE0:
	s0_44 = s0_44 + 1<32> & 255<i32>
l23053A78:
	pmkCacheUpdateReplacementRank(dwArg0138, dwArg0148)
	word32 s4_204
	word32 s8_207
	word32 s1_113
	word32 s3_119
	word32 s5_120
	word32 s7_206
	word32 s6_205
	word32 a6_202
	word32 s2_203
	word32 a2_200
	word32 a5_201
	dbg_test_print(0x2307C3D0<32>, dwArg0148, out s1_113, out a2_200, out a5_201, out a6_202, out s2_203, out s3_119, out s4_204, out s5_120, out s6_205, out s7_206, out s8_207)
	0<32> = dwArg0128
	a4Out = a4
	s3Out = s3_119
	s4Out = dwArg78
	s5Out = s5_120
	return s1_113
pmkCacheFindPSKElement_exit:


void pmkCacheAddPSK(word32 ra, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheFindPSK
//      pmkCacheSetPassphrase
// MayUse:  ra:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a7 ra sp t0 t1 t4 t5 t6
pmkCacheAddPSK_entry:
l23053AE8:
	word32 s1_219
	word32 a2_220
	word32 a5_221
	word32 a6_222
	word32 s2_223
	word32 s3_224
	word32 s4_225
	word32 s5_226
	word32 s6_227
	word32 s7_228
	word32 s8_229
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_219, out a2_220, out a5_221, out a6_222, out s2_223, out s3_224, out s4_225, out s5_226, out s6_227, out s7_228, out s8_229)
	word32 a4_230
	word32 s4_231
	word32 s3_107
	word32 s5_125
	word32 a0_50 = pmkCacheFindPSKElement(dwArg0108, dwArg0118, dwArg0128, out a4_230, out s3_107, out s4_231, out s5_125)
	word32 s0_110 = a0_50
	branch a0_50 != 0<32> l23053B42
l23053B30:
	word32 s2_79
	word32 s4_81
	word32 a0_69 = pmkCacheNewElement(ra, dwArg0108, dwArg0128, out s2_79, out s3_107, out s4_81, out s5_125)
	word32 a2_232
	word32 a3_233
	word32 a4_234
	word32 a5_235
	word32 a6_236
	word32 a7_237
	memcpy(a0_69, s4_81, s2_79, out a2_232, out a3_233, out a4_234, out a5_235, out a6_236, out a7_237)
	Mem106[a0_69 + 64<i32>:byte] = SLICE(s2_79, byte, 0)
	s0_110 = a0_69
l23053B42:
	branch s3_107 == 0<32> l23053B58
l23053B46:
	word32 a2_238
	word32 a3_239
	word32 a4_240
	word32 a5_241
	word32 a6_242
	word32 a7_243
	memcpy(s0_110 + 32<i32>, s3_107, 32<i32>, out a2_238, out a3_239, out a4_240, out a5_241, out a6_242, out a7_243)
	Mem126[s0_110 + 65<i32>:byte] = SLICE(s5_125, byte, 0)
l23053B58:
l23053B84_thunk_dbg_test_print:
	word32 s1_244
	word32 a2_245
	word32 a5_246
	word32 a6_247
	word32 s2_248
	word32 s3_249
	word32 s4_250
	word32 s5_251
	word32 s6_252
	word32 s7_253
	word32 s8_254
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_244, out a2_245, out a5_246, out a6_247, out s2_248, out s3_249, out s4_250, out s5_251, out s6_252, out s7_253, out s8_254)
	return
pmkCacheAddPSK_exit:


word32 pmkCacheDeletePSK(word32 ra, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      remove_psk
// MayUse:  ra:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: ra sp t0 t1
pmkCacheDeletePSK_entry:
l23053B88:
	word32 a4_115
	word32 s3_116
	word32 s4_117
	word32 s5_118
	pmkCacheFindPSKElement(dwArg0118, dwArg0128, dwArg0138, out a4_115, out s3_116, out s4_117, out s5_118)
	word32 s1_41
	word32 a2_119
	word32 a5_120
	word32 a6_121
	word32 s2_122
	word32 s3_123
	word32 s4_124
	word32 s5_125
	word32 s6_126
	word32 s7_127
	word32 s8_128
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_41, out a2_119, out a5_120, out a6_121, out s2_122, out s3_123, out s4_124, out s5_125, out s6_126, out s7_127, out s8_128)
	branch s1_41 == 0<32> l23053BD6
l23053BBC:
	word32 t1_129
	word32 a0_130
	word32 a1_131
	word32 a2_132
	word32 a3_133
	word32 a4_134
	word32 a5_135
	memset(ra, s1_41, 0<32>, 67<i32>, out t1_129, out a0_130, out a1_131, out a2_132, out a3_133, out a4_134, out a5_135)
	Mem66[0x42046FB0<32>:byte] = SLICE(CONVERT(Mem9[0x42045FB0<32>:byte], byte, word32) + 0xFFFFFFFF<32>, byte, 0)
l23053BD6:
l23053BFA_thunk_dbg_test_print:
	word32 s2_88
	word32 s1_136
	word32 a2_137
	word32 a5_138
	word32 a6_139
	word32 s3_140
	word32 s4_141
	word32 s5_142
	word32 s6_143
	word32 s7_144
	word32 s8_145
	word32 s0_82 = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_136, out a2_137, out a5_138, out a6_139, out s2_88, out s3_140, out s4_141, out s5_142, out s6_143, out s7_144, out s8_145)
	s2Out = s2_88
	return s0_82
pmkCacheDeletePSK_exit:


word32 pmkCacheGetHexNibble(word32 dwArg0158, ptr32 & a0Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheGeneratePSK
// MayUse:  Stack +0158:[0..31]
// LiveOut: a0 s1 s3 s4 s5
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
pmkCacheGetHexNibble_entry:
l23053BFE:
	word32 s0_49
	word32 a2_101
	word32 a5_102
	word32 a6_103
	word32 s2_104
	word32 s4_105
	word32 s6_106
	word32 s7_107
	word32 s8_108
	word32 s3_34
	word32 s1_28
	word32 s5_35
	word32 s0_27 = dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_28, out a2_101, out a5_102, out a6_103, out s2_104, out s3_34, out s4_105, out s5_35, out s6_106, out s7_107, out s8_108)
	branch s0_27 <=u 96<i32> l23053C4E
l23053C4E:
	branch s0_27 <=u 64<i32> l23053C5C
l23053C5C:
	word32 a2_109
	word32 a5_110
	word32 a6_111
	word32 s2_112
	word32 s4_113
	word32 s6_114
	word32 s7_115
	word32 s8_116
	s0_49 = dbg_test_print(0x2307C3D0<32>, dwArg0158, out s1_28, out a2_109, out a5_110, out a6_111, out s2_112, out s3_34, out s4_113, out s5_35, out s6_114, out s7_115, out s8_116)
l23053C56:
	s0_49 = s0_27 + -55<i32>
l23053C38:
	s0_49 = s0_27 + -87<i32>
l23053C3C:
	a0Out = s0_49 & 255<i32>
	s3Out = s3_34
	s4Out = dwArg04
	s5Out = s5_35
	return s1_28
pmkCacheGetHexNibble_exit:


word32 pmkCacheGeneratePSK(word32 ra, word32 a3, word32 s4, word32 mstatus, word32 dwArg38, word32 dwArg78, word32 dwArgB8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0178, ptr32 & s1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheFindPSK
//      pmkCacheSetPassphrase
//      KeyMgmtInit
// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0178:[0..31]
// LiveOut: a5 s0 s1
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a3 a4 a7 ra s10 s11 s9 sp t0 t1 t4 t5 t6
pmkCacheGeneratePSK_entry:
l23053C7A:
	word32 s1_40
	word32 s4_41
	word32 s3_46
	word32 s5_239
	word32 s6_240
	word32 s7_241
	word32 s8_242
	word32 s2_238
	word32 a6_237
	word32 a5_236
	word32 a2_235
	word32 s0_39 = dbg_test_print(0x2307C3BC<32>, dwArg0148, out s1_40, out a2_235, out a5_236, out a6_237, out s2_238, out s3_46, out s4_41, out s5_239, out s6_240, out s7_241, out s8_242)
	branch s4_41 == 0<32> l23053CD8
l23053CBC:
	branch s0_39 == 0<32> l23053CD8
l23053CBE:
	branch a3 >u -63<i32> l23053D08
l23053D08:
	branch a3 != 64<i32> l23053CD8
l23053D10:
l23053D16:
	word32 a0_252
	word32 s3_253
	word32 s4_254
	word32 s5_255
	pmkCacheGetHexNibble(dwArg0128, out a0_252, out s3_253, out s4_254, out s5_255)
	word32 a0_79
	word32 s3_87
	word32 s4_88
	word32 s5_89
	Mem99[(s3_87 >> 1<u32>) + s4_88:byte] = SLICE(a0_79 | pmkCacheGetHexNibble(dwArg0128, out a0_79, out s3_87, out s4_88, out s5_89) << 4<u32>, byte, 0)
	branch s3_87 + 2<32> != s5_89 l23053D16
l23053D40:
l23053CCC:
	utils_wifi_psk_cal_fast_bin(ra, s0_39, s1_40, s3_46, s3_46, s4_41, mstatus, s4, dwArg38, dwArg78, dwArgB8, dwArg0108)
l23053CD8:
	0<32> = dwArg0128
l23053D04_thunk_dbg_test_print:
	word32 a5_152
	word32 s1_155
	word32 a6_244
	word32 a2_243
	word32 s2_245
	word32 s3_246
	word32 s4_247
	word32 s5_248
	word32 s6_249
	word32 s7_250
	word32 s8_251
	word32 s0_154 = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_155, out a2_243, out a5_152, out a6_244, out s2_245, out s3_246, out s4_247, out s5_248, out s6_249, out s7_250, out s8_251)
	s1Out = s1_155
	a5Out = a5_152
	return s0_154
pmkCacheGeneratePSK_exit:


void prepare_key(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      RC4_Encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
prepare_key_entry:
l23053D42:
	word32 a5_3 = 0<32>
l23053D48:
	Mem8[a2 + a5_3:byte] = SLICE(a5_3, byte, 0)
	a5_3 = a5_3 + 1<32>
	branch a5_3 != 256<i32> l23053D48
l23053D56:
	Mem11[a2 + 256<i32>:byte] = 0<8>
	Mem12[a2 + 257<i32>:byte] = 0<8>
	word32 a3_13 = a2
	word32 a7_15 = 0<32>
	word32 a4_16 = 0<32>
l23053D68:
	word32 a6_25 = CONVERT(Mem24[a3_13:byte], byte, word32)
	word32 a5_30 = CONVERT(Mem24[a0 + a4_16:byte], byte, word32) + a6_25 + a7_15
	word32 a5_34 = (a5_30 & 255<i32>) + a2
	a3_13 = a3_13 + 1<32>
	Mem36[a3_13 + 4095<i32>:byte] = SLICE(CONVERT(Mem24[a5_34:byte], byte, word32), byte, 0)
	Mem37[a5_34:byte] = SLICE(a6_25, byte, 0)
	a7_15 = a5_30 & 255<i32>
	a4_16 = (a4_16 + 1<32> | a1) & 255<i32>
	branch a2 + 256<i32> != a3_13 l23053D68
l23053D9E:
	return
prepare_key_exit:


word32 rc4(word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      RC4_Encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a4
// Trashed: a2 a4 a5 a6 a7 t1 t3 t4
// Preserved: sp
rc4_entry:
l23053DA0:
	word32 t3_5 = CONVERT(Mem0[a3 + 256<i32>:byte], byte, word32)
	word32 a4_21 = CONVERT(Mem0[a3 + 257<i32>:byte], byte, word32)
	word32 a5_26 = 0<32>
l23053DAA:
	word32 a6_10 = t3_5 + a5_26
	branch a5_26 < a2 l23053DCE
l23053DCE:
	word32 a6_16 = ((a6_10 & 255<i32>) + 1<32> & 255<i32>) + a3
	word32 t1_18 = CONVERT(Mem17[a6_16:byte], byte, word32)
	word32 a4_22 = a4_21 + t1_18
	word32 a7_24 = a3 + (a4_22 & 255<i32>)
	Mem27[a6_16:byte] = SLICE(CONVERT(Mem17[a7_24:byte], byte, word32), byte, 0)
	Mem28[a7_24:byte] = SLICE(t1_18, byte, 0)
	a4_21 = a4_22 & 255<i32>
	a5_26 = CONVERT(SLICE(a5_26 + 1<32>, word16, 0), word16, int32)
l23053DB6:
	word32 a7_29 = 0<32>
l23053DB8:
	word32 a5_32 = (a6_10 & 255<i32>) + a7_29
	branch a7_29 < a1 l23053DF8
l23053DF8:
	word32 a5_38 = ((a5_32 & 255<i32>) + 1<32> & 255<i32>) + a3
	word32 a2_40 = CONVERT(Mem39[a5_38:byte], byte, word32)
	word32 a4_42 = a4_21 + a2_40
	word32 t1_44 = a3 + (a4_42 & 255<i32>)
	Mem46[a5_38:byte] = SLICE(CONVERT(Mem39[t1_44:byte], byte, word32), byte, 0)
	Mem47[t1_44:byte] = SLICE(a2_40, byte, 0)
	word32 t1_50 = a0 + a7_29
	Mem60[t1_50:byte] = SLICE(CONVERT(Mem47[(a2_40 + CONVERT(Mem47[a5_38:byte], byte, word32) & 255<i32>) + a3:byte], byte, word32) ^ CONVERT(Mem47[t1_50:byte], byte, word32), byte, 0)
	a4_21 = a4_42 & 255<i32>
	a7_29 = CONVERT(SLICE(a7_29 + 1<32>, word16, 0), word16, int32)
l23053DC4:
	Mem61[a3 + 256<i32>:byte] = SLICE(a5_32 & 255<i32>, byte, 0)
	Mem62[a3 + 257<i32>:byte] = SLICE(a4_21, byte, 0)
	return a4_21
rc4_exit:


word32 RC4_Encrypt(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_ApplyKEK
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
RC4_Encrypt_entry:
l23053E42:
	branch a2 > -16<i32> l23053E98
l23053E5E:
	word32 a2_136
	word32 a3_137
	word32 a4_138
	word32 a5_139
	word32 a6_140
	word32 a7_141
	memcpy(fp + -64<i32>, a1, a2, out a2_136, out a3_137, out a4_138, out a5_139, out a6_140, out a7_141)
	word32 a2_142
	word32 a3_143
	word32 a4_144
	word32 a5_145
	word32 a6_146
	word32 a7_147
	memcpy(fp + -64<i32> + a2, a0, 0x10<32>, out a2_142, out a3_143, out a4_144, out a5_145, out a6_146, out a7_147)
	prepare_key(fp + -64<i32>, a2 + 16<i32>, 0x42016380<32>)
	a3 = 0x42016380<32>
	a4 = rc4(a3, a4, a5, 0x42016380<32>)
l23053E98:
	a4Out = a4
	return a3
RC4_Encrypt_exit:


word32 sha256_compress(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha256_vector
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
sha256_compress_entry:
l23053EAA:
	word32 a7_253
	word32 a2_248
	word32 a3_249
	word32 a6_252
	word32 a5_251
	word32 a4_250
	memcpy(a2 + 256<i32>, a0 + 8<i32>, 32<i32>, out a2_248, out a3_249, out a4_250, out a5_251, out a6_252, out a7_253)
	word32 s2_11 = a2 + 256<i32>
	word32 s4_20 = a1
	word32 a3_41 = a2
l23053ED8:
	word32 a5_48 = CONVERT(Mem43[s4_20 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem43[s4_20:byte], byte, word32)
	s4_20 = s4_20 + 4<32>
	a3_41 = a3_41 + 4<32>
	Mem62[a3_41 + 4092<i32>:word32] = (CONVERT(SLICE(a5_48 >>u 8<i32> | a5_48 << 8<u32>, word16, 0), word16, word32) << 8<i32> | CONVERT(Mem43[s4_20 + -2<i32>:byte], byte, word32)) << 8<i32> | CONVERT(Mem43[s4_20 + -1<i32>:byte], byte, word32)
	branch s4_20 != a1 + 64<i32> l23053ED8
l23053F0C:
	word32 a4_65 = a2 + 64<i32>
l23053F10:
	word32 a3_68 = Mem67[a4_65 + -8<i32>:int32]
	a4_65 = a4_65 + 4<32>
	word32 a2_69 = Mem67[a4_65 + -60<i32>:int32]
	Mem94[a4_65 + 4092<i32>:word32] = ((a3_68 << 0xF<u32> | a3_68 >>u 0x11<u32>) ^ (a3_68 << 0xD<u32> | a3_68 >>u 0x13<u32>) ^ a3_68 >>u 10<i32>) + (Mem67[a4_65 + -32<i32>:int32] + Mem67[a4_65 + -68<i32>:int32]) + (((a2_69 >>u 7<u32> | a2_69 << 0x19<u32>) ^ (a2_69 << 0xE<u32> | a2_69 >>u 0x12<u32>)) ^ a2_69 >>u 3<i32>)
	branch a2 + 256<i32> != a4_65 l23053F10
l23053F64:
	word32 a1_125 = 0<32>
l23053F72:
	word32 a2_102 = Mem101[a2 + 272<i32>:int32]
	word32 t3_103 = Mem101[a2 + 280<i32>:int32]
	word32 t4_104 = Mem101[a2 + 276<i32>:int32]
	word32 a3_121 = Mem101[a2 + 256<i32>:int32]
	word32 t1_122 = Mem101[a2 + 268<i32>:int32]
	word32 a7_128 = Mem101[a2 + 260<i32>:int32]
	word32 t5_129 = Mem101[a2 + 264<i32>:int32]
	word32 a5_130 = ((a2_102 >>u 6<u32> | a2_102 << 0x1A<u32>) ^ (a2_102 >>u 0xB<u32> | a2_102 << 0x15<u32>) ^ (a2_102 << 7<u32> | a2_102 >>u 0x19<u32>)) + ((t3_103 ^ t4_104) & a2_102 ^ t3_103) + Mem101[a2 + 284<i32>:int32] + Mem101[a1_125 + 0x2307CA94<32>:word32]
	word32 a4_132 = Mem101[a2 + a1_125:word32]
	Mem133[a2 + 276<i32>:word32] = a2_102
	word32 a5_135 = a5_130 + a4_132
	Mem139[a2 + 272<i32>:word32] = t1_122 + a5_135
	Mem148[a2 + 260<i32>:word32] = a3_121
	Mem155[a2 + 284<i32>:word32] = t3_103
	Mem156[a2 + 280<i32>:word32] = t4_104
	Mem157[a2 + 268<i32>:word32] = t5_129
	Mem158[a2 + 264<i32>:word32] = a7_128
	word32 a5_154 = a5_135 + ((((a3_121 >>u 2<u32> | a3_121 << 0x1E<u32>) ^ (a3_121 >>u 0xD<u32> | a3_121 << 0x13<u32>)) ^ (a3_121 << 0xA<u32> | a3_121 >>u 0x16<u32>)) + (a3_121 & a7_128 | (a3_121 | a7_128) & t5_129))
	Mem159[a2 + 256<i32>:word32] = a5_154
	a1_125 = a1_125 + 4<32>
	branch a1_125 != 256<i32> l23053F72
l23054036:
l2305403A:
	word32 s1_168 = Mem167[a5_154:word32]
	word32 a4_170 = Mem167[s2_11:int32]
	a5_154 = a5_154 + a4_170
	Mem174[s1_168 + 0x1000<32>:word32] = a5_154
	s2_11 = s2_11 + 4<32>
	branch a0 + 40<i32> != s1_168 + 4<32> l2305403A
l2305404E:
	s1Out = s1_168 + 4<32>
	a0Out = 0<32>
	a2Out = dwArg48
	a4Out = a4_170
	a5Out = a5_154
	s2Out = s2_11
	s3Out = a0 + 40<i32>
	s4Out = dwArg04
	s8Out = s4
	return s1
sha256_compress_exit:


word32 sha256_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha256_vector
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5 a6
// Preserved: sp
sha256_init_entry:
l23054060:
	Mem5[0<32>:word32] = a0
	Mem8[0x6A09E66F<32>:word32] = a0
	Mem11[0xBB67AE91<32>:word32] = a0
	Mem14[0x3C6EF382<32>:word32] = a0
	Mem17[0xA54FF54E<32>:word32] = a0
	Mem20[0x510E5297<32>:word32] = a0
	Mem23[0x9B0568A8<32>:word32] = a0
	Mem26[0x1F83D9CB<32>:word32] = a0
	Mem30[a0 + 40<i32>:word32] = 0<32>
	Mem31[a0 + 4<i32>:word32] = 0<32>
	Mem32[0x5BE0CD3D<32>:word32] = a0
	return 0x5BE0CD19<32>
sha256_init_exit:


word32 sha256_vector(word32 s1, word32 a0, word32 a2, word32 a4, word32 dwArg74, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hmac_sha256_vector
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] s1:[0..31] Stack +0074:[0..31] Stack +010C:[0..31]
// LiveOut: a6 ra s0 s1 s2 s3 s4 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sha256_vector_entry:
l230540C0:
	word32 a0_112 = a4
	word32 s2_122 = a3
	word32 s4_108 = a4 + 112<i32>
	word32 a5_103 = sha256_init(a4)
	word32 s8_125 = 0<32>
	a4_116 = a4
l23054100:
	word32 a4_116
	branch s8_125 != a0 << 2<i32> l230541F4
l230541F4:
	a2 = dwArg74
	s3 = Mem50[a4_116 + s8_125:int32]
	branch a5_103 <=u 64<i32> l2305423A
l2305423A:
	word32 s0_64 = Mem63[a0_112 + 40<i32>:word32]
	branch s1 != 0<32> l2305420C
l2305420C:
	branch a0_112 != 0<32> l23054240
l2305420E:
	branch s1 <=u 63<i32> l23054240
l23054240:
	word32 s11_70 = 64<i32> - a0_112
	branch s1 >=u s11_70 l2305424A
l23054248:
	s11_70 = s1
l2305424A:
	a0_112 = a0_112 + (a4 + 44<i32>)
	word32 a5_85
	word32 a3_611
	word32 a6_612
	word32 a7_613
	memcpy(a0_112, s3, s11_70, out a2, out a3_611, out a4_116, out a5_85, out a6_612, out a7_613)
	word32 s0_99 = Mem63[a5_85 + 40<i32>:word32]
	a5_103 = a5_85 + s11_70
	Mem104[a5_103 + 40<i32>:word32] = s0_99
	s3 = s3 + s11_70
	s1 = s1 - s11_70
	branch a5_103 != 64<i32> l2305423A
l23054264:
	sha256_compress(s0_99, a4 + 44<i32>, s4_108, out s1, out a0_112, out a2, out a4_116, out a5_103, out s2_122, out s3, out s4_108, out s8_125)
	branch a0_112 < 0<32> l23054208
l23054272:
	word32 s0_133 = Mem104[a2 + 4<i32>:word32]
	Mem134[s0_133 + 40<i32>:word32] = 0<32>
	Mem138[a5_103 + 512<i32>:word32] = s0_133
	a5_103 = CONVERT(a5_103 + 512<i32> <u a5_103, bool, word32) + a2
	Mem139[a5_103 + 4<i32>:word32] = s0_133
l23054212:
	sha256_compress(s0_64, s3, s4_108, out s1, out a0_112, out a2, out a4_116, out a5_103, out s2_122, out s3, out s4_108, out s8_125)
	branch a0_112 < 0<32> l23054208
l23054220:
	word32 s0_164 = Mem63[a2 + 4<i32>:word32]
	Mem169[a5_103 + 512<i32>:word32] = s0_164
	a5_103 = CONVERT(a5_103 + 512<i32> <u a5_103, bool, word32) + a2
	Mem170[a5_103 + 4<i32>:word32] = s0_164
	s3 = s3 + 64<i32>
	s1 = s1 + -64<i32>
l2305423E:
l23054208:
	s8_125 = s8_125 + 4<32>
l23054106:
	branch a5_103 >u 63<i32> l230541D6
l2305410E:
	word32 a3_183 = a5_103 << 3<u32>
	word32 s0_182 = Mem50[a2 + 4<i32>:word32]
	Mem187[CONVERT(a3_183 <u 0<i32>, bool, word32) + a2 + 4<i32>:word32] = s0_182
	Mem189[a3_183 + 63<i32>:word32] = s0_182
	word32 a4_188 = a5_103 + 1<i32>
	Mem191[a4_188 + 40<i32>:word32] = s0_182
	Mem193[a5_103 + s0_182 + 44<i32>:byte] = 0x80<8>
	word32 a5_194 = 56<i32>
	branch a4_188 <=u 56<i32> l23054154
l2305413A:
l2305413E:
	word32 s0_198 = Mem197[a5_194 + 40<i32>:word32]
	branch a5_194 <=u 63<i32> l2305428A
l2305428A:
	Mem201[a5_194 + 41<i32>:word32] = s0_198
	a5_194 = a5_194 + s0_198
	Mem203[a5_194 + 44<i32>:byte] = 0<8>
l23054144:
	word32 a2_599
	word32 s1_597
	word32 a4_600
	word32 s2_601
	word32 s3_602
	word32 a0_598
	word32 s8_603
	Mem230[sha256_compress(s0_198, s0_198 + 44<i32>, s4_108, out s1_597, out a0_598, out a2_599, out a4_600, out a5_194, out s2_601, out s3_602, out s4_108, out s8_603) + 40<i32>:word32] = 0<32>
l23054154:
l23054158:
	word32 s0_234 = Mem233[a5_194 + 40<i32>:word32]
	branch a5_194 <=u 55<i32> l23054298
l23054298:
	Mem237[a5_194 + 41<i32>:word32] = s0_234
	a5_194 = a5_194 + s0_234
	Mem239[a5_194 + 44<i32>:byte] = 0<8>
l2305415E:
	word32 s0_240 = Mem233[a5_194:word32]
	Mem244[s0_240 + 104<i32>:byte] = SLICE(a5_194 >>u 0x18<u32>, byte, 0)
	Mem246[s0_240 + 105<i32>:byte] = SLICE(a5_194 >>u 0x10<u32>, byte, 0)
	Mem247[s0_240 + 107<i32>:byte] = SLICE(a5_194, byte, 0)
	word32 s0_249 = Mem247[a5_194 + 4<i32>:word32]
	Mem250[s0_249 + 106<i32>:byte] = SLICE(a5_194 >>u 8<u32>, byte, 0)
	Mem255[s0_249 + 100<i32>:byte] = SLICE(a5_194 >>u 0x18<u32>, byte, 0)
	Mem257[s0_249 + 101<i32>:byte] = SLICE(a5_194 >>u 0x10<u32>, byte, 0)
	Mem259[s0_249 + 103<i32>:byte] = SLICE(a5_194, byte, 0)
	Mem260[s0_249 + 102<i32>:byte] = SLICE(a5_194 >>u 8<u32>, byte, 0)
	word32 s8_610
	word32 a0_605
	word32 a2_606
	word32 a4_607
	word32 s1_604
	word32 a5_608
	word32 s4_609
	word32 s0_269 = sha256_compress(s0_240, s0_240 + 44<i32>, s4_108, out s1_604, out a0_605, out a2_606, out a4_607, out a5_608, out s2_122, out s3, out s4_609, out s8_610)
	word32 a5_281 = s0_269 + 8<i32>
l230541AE:
	a5_281 = a5_281 + 4<32>
	word32 a4_286 = Mem285[a5_281 + -4<i32>:int32]
	s2_122 = s2_122 + 4<32>
	Mem290[s2_122 + 4092<i32>:byte] = SLICE(a4_286 >>u 0x18<u32>, byte, 0)
	Mem292[s2_122 + 4093<i32>:byte] = SLICE(a4_286 >>u 0x10<u32>, byte, 0)
	Mem294[s2_122 + 4094<i32>:byte] = SLICE(a4_286 >>u 8<u32>, byte, 0)
	Mem295[s2_122 + 4095<i32>:byte] = SLICE(a4_286, byte, 0)
	branch a5_281 != s0_269 + 40<i32> l230541AE
l230541D6:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a6Out = dwArg0188
	s2Out = s2_122
	s3Out = s3
	s4Out = dwArg0168
	s6Out = 64<i32>
	s7Out = a4 + 44<i32>
	return dwLoc08
sha256_vector_exit:


word32 hmac_sha256_vector(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sha256_crypto_kdf
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
hmac_sha256_vector_entry:
l230542A6:
	word32 s1_145 = a5
	word32 dwLoc01DC_285 = a0
	word32 s2_121 = a2
	word32 s3_274 = a3
	word32 s4_276 = a4
	branch a1 <=u 64<i32> l230542F6
l230542E0:
	word32 s0_48
	word32 a6_357
	word32 s6_358
	word32 s7_359
	ra = sha256_vector(a5, 1<32>, fp + -600<i32>, fp + -436<i32>, dwLoc01EC, dwLoc0154, out s0_48, out s1_145, out a6_357, out s2_121, out s3_274, out s4_276, out s6_358, out s7_359)
	dwLoc01DC_285 = s0_48
l230542F6:
	word32 a1_76
	word32 a3_348
	word32 a4_349
	word32 a5_350
	word32 t1_345
	word32 a0_346
	word32 a2_347
	memset(ra, fp + -532<i32>, 0<32>, 64<i32>, out t1_345, out a0_346, out a1_76, out a2_347, out a3_348, out a4_349, out a5_350)
	word32 a7_356
	word32 a3_352
	word32 a4_353
	word32 a5_354
	word32 a6_355
	word32 a2_351
	memcpy(fp + -532<i32>, a1_76, dwLoc01FC, out a2_351, out a3_352, out a4_353, out a5_354, out a6_355, out a7_356)
	word32 a4_102 = fp + -532<i32>
l23054316:
	a4_102 = a4_102 + 4<32>
	Mem110[a4_102 + 4092<i32>:word32] = Mem106[a4_102 + -4<i32>:int32] ^ 0x36363636<32>
	branch a4_102 != dwLoc01DC_285 l23054316
l23054326:
	word32 a2_115 = fp + -580<i32>
	word32 a3_117 = fp + -556<i32>
	word32 a4_119 = 0<32>
	word32 a5_122 = s2_121 << 2<u32>
l2305433E:
	a2_115 = a2_115 + 4<32>
	a3_117 = a3_117 + 4<32>
	branch a4_119 != a5_122 l230543CC
l230543CC:
	Mem135[Mem133[s3_274 + a4_119:word32]:word32] = a2_115
	Mem140[Mem135[s4_276 + a4_119:word32]:word32] = a3_117
	a4_119 = a4_119 + 4<32>
l23054346:
	word32 s1_163
	word32 s6_170
	word32 a1_185
	word32 a2_368
	word32 a3_369
	word32 a4_370
	word32 a5_371
	word32 s4_364
	word32 s7_365
	word32 t1_366
	word32 a0_367
	word32 s0_360
	word32 a6_361
	word32 s2_362
	word32 s3_363
	memset(sha256_vector(s1_145, s2_121 + 1<i32>, fp + -556<i32>, fp + -436<i32>, dwLoc01EC, dwLoc0154, out s0_360, out s1_163, out a6_361, out s2_362, out s3_363, out s4_364, out s6_170, out s7_365), fp + -532<i32>, 0<32>, 64<i32>, out t1_366, out a0_367, out a1_185, out a2_368, out a3_369, out a4_370, out a5_371)
	word32 a7_377
	word32 a6_376
	word32 a2_372
	word32 a3_373
	word32 a4_374
	word32 a5_375
	memcpy(fp + -532<i32>, a1_185, dwLoc01FC, out a2_372, out a3_373, out a4_374, out a5_375, out a6_376, out a7_377)
	word32 a4_210 = fp + -532<i32>
l23054376:
	a4_210 = a4_210 + 4<32>
	Mem218[a4_210 + 4092<i32>:word32] = Mem214[a4_210 + -4<i32>:int32] ^ 0x5C5C5C5C<32>
	branch a4_210 != dwLoc01DC_285 l23054376
l23054386:
	word32 a6_242
	word32 s7_254
	word32 s4_382
	word32 s6_383
	word32 s2_380
	word32 s3_381
	word32 s0_378
	word32 s1_379
	sha256_vector(s1_163, 2<32>, s6_170, fp + -436<i32>, dwLoc01EC, dwLoc0154, out s0_378, out s1_379, out a6_242, out s2_380, out s3_381, out s4_382, out s6_383, out s7_254)
	s7Out = s7_254
	return a6_242
hmac_sha256_vector_exit:


word32 KeyMgmtInit(word32 ra, word32 a0, word32 mstatus, word32 dwArg18, word32 dwArg58, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0158, ptr32 & s1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      InitGroupKey
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a5 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtInit_entry:
l230543E0:
	word32 a5_139
	word32 a4_138
	word32 a0_12 = cm_GetApInfo(a0, out a4_138, out a5_139)
	word32 s0_28
	word32 s4_34
	word32 s1_121
	word32 ra_27 = ROM_InitGTK(ra, a0_12 + 204<i32>, a0_12 + 244<i32>, a0 + 70<i32>, dwLoc08, dwArg58, dwArgA8, dwArgC8, out s0_28, out s1_121, out s4_34)
	word32 a5_116 = 1<32>
	branch Mem9[s0_28 + 184<i32>:int32] != 1<32> l23054434
l2305440A:
	word32 a5_144
	word32 a4_143
	word32 a3_142
	word32 a2_141
	word32 a1_140
	Mem82[pmkCacheGeneratePSK(ra_27, strlen(s0_28 + 24<i32>, out a1_140, out a2_141, out a3_142, out a4_143, out a5_144) & 255<i32>, s4_34, mstatus, dwArg18, dwArg58, dwArg98, dwArgE8, dwArg0108, dwArg0128, dwArg0158, out s1_121, out a5_116) + 184<i32>:word32] = 0<32>
l23054434:
	s1Out = s1_121
	a5Out = a5_116
	return ra_27
KeyMgmtInit_exit:


word32 PrepDefaultEapolMsg(word32 ra, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg0118, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg1
//      GeneratePWKMsg3
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a4 a5 ra s1 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
PrepDefaultEapolMsg_entry:
l2305443E:
	word32 a4_203
	word32 a5_204
	cm_GetApData(a0, out a4_203, out a5_204)
	word32 a4_28
	word32 a5_205
	cm_GetApInfo(a0, out a4_28, out a5_205)
	word32 a0_36
	word32 s1_206
	word32 a5_113
	word32 a4_170
	word32 s5_120
	word32 ra_176 = GetTxEAPOLBuffer(ra, a3, a4_28, mstatus, s2, dwArg0118, out s1_206, out a0_36, out a4_170, out a5_113, out s5_120)
	word32 s1_116 = a0_36
	branch a0_36 == 0<32> l230544B0
l2305446E:
	word32 t1_207
	word32 a0_208
	word32 a1_209
	word32 a2_210
	word32 a3_211
	word32 a4_212
	word32 a5_213
	ra_176 = memset(ra_176, a0_36, 0<32>, 114<i32>, out t1_207, out a0_208, out a1_209, out a2_210, out a3_211, out a4_212, out a5_213)
	word32 s2_83
	word32 s1_214
	word32 s3_215
	word32 s4_216
	formEAPOLEthHdr(dwArg0118, dwArg0138, out s1_214, out a4_170, out s2_83, out s3_215, out s4_216)
	branch (CONVERT(Mem19[s2_83 + 20<i32>:byte], byte, word32) & 8<32>) != 0<32> l230544A4
l2305449C:
l230544A4:
	word32 s3_118
	s1_116 = SetEAPOLKeyDescTypeVersion(dwArg0118, dwArg0138, out a5_113, out s3_118, out s5_120)
	Mem127[s3_118:word32] = a5_113
l230544B0:
	s1Out = s1_116
	a0Out = s1_116
	a4Out = a4_170
	a5Out = a5_113
	s4Out = dwArgF4
	s5Out = s5_120
	return ra_176
PrepDefaultEapolMsg_exit:


word32 GeneratePWKMsg1(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg24, word32 dwArg2C, word32 dwArg48, word32 dwArg68, word32 dwArg88, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GenerateApEapolMsg
// MayUse:  a0:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a4 s1 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
GeneratePWKMsg1_entry:
l230544C2:
	word32 a0_172
	word32 a4_254
	word32 a5_255
	cm_GetApData(a0, out a4_254, out a5_255)
	word32 a5_29
	word32 a0_45
	word32 s4_256
	word32 s5_160
	word32 s1_154
	word32 a4_148
	word32 ra_31 = PrepDefaultEapolMsg(ra, a0, a3, s2, mstatus, dwArgE8, dwArg0108, out s1_154, out a0_45, out a4_148, out a5_29, out s4_256, out s5_160)
	branch a0_45 == 0<32> l23054568
l23054568:
	a0_172 = 1<32>
l230544E2:
	Mem54[a5_29 + 0x1D<32>:word32] = Mem15[a5_29 + 28<i32>:word32]
	branch a5_29 != 1<32> l230544F2
l230544EC:
	Mem57[a4_148 + 0x21<32>:word32] = Mem54[a4_148 + 32<i32>:word32]
l230544F2:
	word32 a0_70
	word32 s0_79
	word32 s1_80
	word32 a3_257
	word32 a4_258
	word32 s9_259
	word32 s10_260
	word32 ra_78 = supplicantGenerateRand(ra_31, s2, s0, dwArg2C, dwArgD8, dwArg0128, dwArg0148, out s0_79, out s1_80, out a0_70, out a3_257, out a4_258, out s9_259, out s10_260)
	word32 a4_108
	PopulateKeyMsg(a0_70, s0_79 + 20<i32>, 0xFFF800<32>, fp + -24<i32>, s1_80, out a4_108)
	word32 a1_126 = (CONVERT(Mem68[a4_108 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem68[a4_108 + 111<i32>:byte], byte, word32)) + 95<i32> << 16<i32>
	Mem128[a4_108 + 14<i32>:byte] = SLICE(CONVERT(Mem68[s0_79 + 84<i32>:byte], byte, word32), byte, 0)
	Mem130[a4_108 + 15<i32>:byte] = 3<8>
	word32 a5_135 = CONVERT(SLICE(a1_126 >>u 16<i32> << 8<u32> | a1_126 >>u 0x18<32>, word16, 0), word16, word32)
	Mem136[a4_108 + 16<i32>:byte] = SLICE(a5_135, byte, 0)
	Mem138[a4_108 + 17<i32>:byte] = SLICE(a5_135 >>u 8<i32>, byte, 0)
	word32 s3_261
	word32 s7_262
	UpdateEAPOLWcbLenAndTransmit(ra_78, fflags, frm, mstatus, dwLoc08, dwArg24, dwArg2C, dwArg48, dwArg68, dwArg88, dwArg0128, dwArg0148, out s1_154, out a4_148, out s3_261, out s5_160, out s7_262, out s10)
	a0_172 = 0<32>
l2305455C:
	0<32> = dwArg0128
	a0Out = a0_172
	a4Out = a4_148
	s5Out = s5_160
	s10Out = s10
	return s1_154
GeneratePWKMsg1_exit:


word32 GeneratePWKMsg3(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg24, word32 dwArg2C, word32 dwArg48, word32 dwArg68, word32 dwArg88, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GenerateApEapolMsg
// MayUse:  a0:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a4 s1 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
GeneratePWKMsg3_entry:
l2305456C:
	word32 a0_272
	word32 s4_34
	word32 a0_43
	word32 a5_508
	word32 s5_184
	word32 s1_254
	word32 a4_248
	word32 ra_182 = PrepDefaultEapolMsg(ra, a0, a3, s2, mstatus, dwArgE8, dwArg0108, out s1_254, out a0_43, out a4_248, out a5_508, out s4_34, out s5_184)
	branch a0_43 == 0<32> l23054606
l23054586:
	word32 a4_509
	word32 a5_510
	cm_GetApData(s4_34, out a4_509, out a5_510)
	word32 a5_57
	word32 a4_56
	word32 a0_55 = cm_GetApInfo(s4_34, out a4_56, out a5_57)
	word32 s0_58 = Mem18[a5_57 + 28<i32>:word32]
	Mem61[a5_57 + 0x1D<32>:word32] = s0_58
	branch a5_57 != 1<32> l230545A6
l230545A0:
	s0_58 = Mem61[a4_56 + 32<i32>:word32]
	Mem64[a4_56 + 0x21<32>:word32] = s0_58
	a4_56 = a4_56 + 1<32>
l230545A6:
	word32 s0_76 = Mem70[a4_56 + 32<i32>:word32]
	word32 a4_511
	word32 a0_89 = PopulateKeyMsg(a0_55, s0_76 + 20<i32>, CONVERT(SLICE(CONVERT(Mem66[s0_58 + 18<i32>:uint16], uint16, word32) << 10<i32> & 0xF8000000<32> | 0xFFF880<32>, word16, 0), word16, word32), fp + -40<i32>, s4_34 + 164<i32>, out a4_511)
	word32 a5_103 = CONVERT(Mem82[s0_76 + 18<i32>:uint16], uint16, word32)
	word32 a3_104 = 0<32>
	branch (a5_103 & 8<i32>) != 0<32> l230545EC
l230545DE:
	branch (a5_103 & 32<i32>) == 0<32> l230545EC
l230545E4:
	a3_104 = 0x4201E1F0<32>
l230545EC:
	word32 a4_121
	word32 a5_122
	word32 a2_119
	word32 a0_117 = KeyData_UpdateKeyMaterial(a0_89, s0_76 + 18<i32>, 0<32>, a3_104, out a2_119, out a4_121, out a5_122)
	branch a0_117 != 0<32> l2305460A
l2305460A:
	branch (CONVERT(Mem82[s0_76 + 18<i32>:uint16], uint16, word32) & 32<i32>) == 0<32> l2305462C
l23054614:
	word32 s0_142
	word32 a0_146
	word32 a3_148
	word32 s1_152
	word32 s3_154
	ra_182 = Encrypt_keyData(prepareKDE(ra_182, a0_117, a0_55 + 204<i32>, a0_55 + 8<i32>, out s0_142, out s1_152, out a0_146, out a3_148, out s3_154), s1_152, a0_146, s0_142 + 68<i32>, s3_154, a3_148, s3_154, mstatus, s2, s0, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out a0_117, out a2_119, out a4_121, out a5_122, out s5_184, out s10)
	branch a0_117 == 0<32> l230545FA
l2305462C:
	word32 s3_529
	word32 s7_530
	UpdateEAPOLWcbLenAndTransmit(KeyMgmtSta_PopulateEAPOLLengthMic(ra_182, a4_121, dwArgF8, dwArg0118), fflags, frm, mstatus, dwLoc08, dwArg24, dwArg2C, dwArg48, dwArg68, dwArg88, dwArg0128, dwArg0148, out s1_254, out a4_248, out s3_529, out s5_184, out s7_530, out s10)
	a0_272 = 0<32>
l230545FA:
	word32 a2_280
	word32 a5_283
	word32 s1_284
	word32 s0_512
	word32 a0_513
	word32 a1_514
	word32 a3_515
	word32 a4_516
	word32 a6_517
	word32 s4_518
	word32 t3_519
	vPortFree(a0_117, a2_119, a5_122, mstatus, dwArg0128, dwArg0168, out s0_512, out s1_284, out a0_513, out a1_514, out a2_280, out a3_515, out a4_516, out a5_283, out a6_517, out s4_518, out t3_519)
	word32 s0_520
	word32 a0_521
	word32 a1_522
	word32 a2_523
	word32 a3_524
	word32 a5_525
	word32 a6_526
	word32 s4_527
	word32 t3_528
	vPortFree(s1_284, a2_280, a5_283, mstatus, dwArg0128, dwArg0168, out s0_520, out s1_254, out a0_521, out a1_522, out a2_523, out a3_524, out a4_248, out a5_525, out a6_526, out s4_527, out t3_528)
l23054606:
	a0_272 = 1<32>
l2305464A:
	0<32> = dwArg0128
	a0Out = a0_272
	a4Out = a4_248
	s5Out = s5_184
	s10Out = s10
	return s1_254
GeneratePWKMsg3_exit:


word32 ProcessPWKMsg4(word32 ra, word32 s0, word32 mstatus, word32 dwArg00, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg6C, word32 dwArgB8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg01A4, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessKeyMgmtDataAp
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +006C:[0..31] Stack +00B8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +01A4:[0..31]
// LiveOut: a4 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
ProcessPWKMsg4_entry:
l2305465A:
	word32 a4_174
	word32 a5_175
	cm_GetApData(s0, out a4_174, out a5_175)
	word32 a0_21
	word32 s0_30
	word32 s1_31
	word32 a3_176
	word32 s2_177
	word32 s7_178
	word32 s9_179
	word32 a4_148
	word32 s10_154
	word32 s5_160
	word32 ra_29 = IsEAPOL_MICValid(ra, dwArg0118, dwArg0138, out s0_30, out s1_31, out a0_21, out a3_176, out a4_148, out s2_177, out s5_160, out s7_178, out s9_179, out s10_154)
	branch a0_21 == 0<32> l230546CA
l230546CA:
l2305467E:
	Mem51[s0_30 + 232<i32>:byte] = 1<8>
	Mem53[s0_30 + 233<i32>:byte] = 0<8>
	Mem54[s0_30 + 228<i32>:byte] = 0<8>
	Mem55[s0_30 + 229<i32>:byte] = 0<8>
	Mem56[s0_30 + 230<i32>:byte] = 0<8>
	Mem57[s0_30 + 231<i32>:byte] = 0<8>
	word32 a4_63
	word32 s1_180
	word32 a0_181
	word32 a3_182
	word32 a5_183
	word32 s2_184
	word32 s1_99 = apm_sta_add(add_key_to_mac(ra_29, s1_31, s0_30, 1<32>, dwArg20, dwArg24, dwArg6C, dwArgB8, dwArg0108, dwArg0118, dwArg01A4, out s1_180, out a0_181, out a3_182, out a4_63, out a5_183, out s2_184, out s5_160, out s10_154), a4_63, mstatus, dwLoc08, dwArg00, dwArg28, out a4_148)
	word32 a5_111 = CONVERT(Mem57[s1_99 + 18<i32>:uint16], uint16, word32)
	Mem112[s1_99 + 24<i32>:byte] = 0<8>
	branch (a5_111 & 32<i32>) == 0<32> l230546BE
l230546B8:
	Mem116[s1_99 + 22<i32>:byte] = 0xA<8>
l230546BE:
	0<32> = dwArg38
	s5Out = s5_160
	s10Out = s10_154
	return a4_148
ProcessPWKMsg4_exit:


word32 GenerateApEapolMsg(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg0C, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0178, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessPWKMsg2
//      SendEAPOLMsgUsingBufDesc
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0178:[0..31]
// LiveOut: a4 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
GenerateApEapolMsg_entry:
l230546CE:
	word32 a5_313
	word32 a4_312
	word32 a0_18 = cm_GetApData(a0, out a4_312, out a5_313)
	word32 s0_25 = a1
	word32 s1_117 = a0_18
	branch (a1 & 1<i32>) != 0<32> l230546F2
l230546EC:
	s0_25 = a1 + 0xFFFFFFFF<32> & 255<i32>
l230546F2:
	word32 a4_111 = CONVERT(Mem17[a0_18 + 12<i32>:byte], byte, word32)
	Mem30[a0_18 + 22<i32>:byte] = SLICE(s0_25, byte, 0)
	branch a4_111 == 1<32> l23054718
l23054700:
	word32 a0_107
	branch s0_25 != 1<32> l23054726
l23054726:
	branch s0_25 != 3<32> l23054734
l23054734:
	branch a1 == 0<32> l23054748
l23054738:
	word32 a5_45
	word32 a1_49
	word32 t3_322
	word32 s4_321
	word32 a6_320
	word32 a4_319
	word32 a3_318
	word32 a2_317
	word32 a0_316
	word32 s1_315
	word32 s0_314
	vPortFree(a0_18, dwArg44, 3<32>, mstatus, dwArg0138, dwArg0178, out s0_314, out s1_315, out a0_316, out a1_49, out a2_317, out a3_318, out a4_319, out a5_45, out a6_320, out s4_321, out t3_322)
	word32 s0_323
	word32 s1_324
	word32 a0_325
	word32 a1_326
	word32 a2_327
	word32 a3_328
	word32 a5_329
	word32 a6_330
	word32 s4_331
	word32 t3_332
	vPortFree(a1_49, dwArg44, a5_45, mstatus, dwArg0138, dwArg0178, out s0_323, out s1_324, out a0_325, out a1_326, out a2_327, out a3_328, out a4_111, out a5_329, out a6_330, out s4_331, out t3_332)
l2305472C:
	s1_117 = GeneratePWKMsg3(ra, s0_25, a0, a3, a0, fflags, frm, mstatus, dwArg04, dwArg0C, dwArg28, dwArg48, s1, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, out a0_107, out a4_111, out s5, out s10)
l23054704:
	s1_117 = GeneratePWKMsg1(ra, s0_25, a0, a3, a0, fflags, frm, mstatus, dwArg04, dwArg0C, dwArg28, dwArg48, s1, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out a0_107, out a4_111, out s5, out s10)
l2305470A:
	branch a0_107 != 0<32> l23054748
l2305470E:
	Mem141[s1_117 + 22<i32>:byte] = SLICE(CONVERT(Mem30[s1_117 + 22<i32>:byte], byte, word32) + 1<32>, byte, 0)
l23054718:
	Mem147[s1_117 + 24<i32>:byte] = SLICE(CONVERT(Mem143[s1_117 + 24<i32>:byte], byte, word32) + 1<32>, byte, 0)
l23054748:
	s5Out = s5
	s10Out = s10
	return a4_111
GenerateApEapolMsg_exit:


word32 ProcessPWKMsg2(word32 ra, word32 s0, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg0C, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0178, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessKeyMgmtDataAp
// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0178:[0..31]
// LiveOut: a4 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ProcessPWKMsg2_entry:
l23054756:
	word32 a4_194
	word32 a5_195
	cm_GetApData(s0, out a4_194, out a5_195)
	word32 a4_196
	word32 a5_197
	cm_GetApInfo(s0, out a4_196, out a5_197)
	KeyMgmtAp_DerivePTK(ra, s0 + 196<i32>)
	word32 a0_56
	word32 a3_59
	word32 a4_60
	word32 s0_65
	word32 s1_66
	word32 s10_67
	word32 s2_68
	word32 s5_71
	word32 s7_198
	word32 s9_199
	word32 ra_64 = IsEAPOL_MICValid(ra, dwArgF8, dwArg0118, out s0_65, out s1_66, out a0_56, out a3_59, out a4_60, out s2_68, out s5_71, out s7_198, out s9_199, out s10_67)
	branch a0_56 == 0<32> l230547CA
l230547CA:
	0<32> = dwArg0128
	s5Out = s5_71
	s10Out = s10_67
	return a4_60
l230547A2:
	Mem90[s2_68 + 24<i32>:byte] = 0<8>
	word32 a5_91 = CONVERT(Mem90[s1_66 + 100<i32>:byte], byte, word32)
	0<32> = dwArg0128
	Mem99[0x4200E380<32>:byte] = SLICE(a5_91 + 2<32>, byte, 0)
l230547C6_thunk_GenerateApEapolMsg:
	word32 s10_122
	word32 s5_125
	word32 a4_108 = GenerateApEapolMsg(ra_64, s1_66, s0_65, 3<32>, a3_59, fflags, frm, mstatus, dwArg04, dwArg0C, dwArg28, dwArg44, dwArg48, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0178, out s5_125, out s10_122)
	s5Out = s5_125
	s10Out = s10_122
	return a4_108
ProcessPWKMsg2_exit:


void SendEAPOLMsgUsingBufDesc(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArg28, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_sta_add_cfm_handler
// MayUse:  a0:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
SendEAPOLMsgUsingBufDesc_entry:
l230547DA:
	word32 a4_126
	word32 a5_127
	word32 a1_15 = CONVERT(Mem9[cm_GetApData(a0, out a4_126, out a5_127) + 22<i32>:byte], byte, word32)
	branch (a1_15 & 1<i32>) == 0<32> l230547FC
l230547F4:
	word32 s5_128
	word32 s10_129
	GenerateApEapolMsg(ra, s1, a0, a1_15, a3, fflags, frm, mstatus, dwLoc1C, s0, dwArg08, dwArg24, dwArg28, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0158, out s5_128, out s10_129)
l230547FC:
	return
SendEAPOLMsgUsingBufDesc_exit:


word32 ProcessKeyMgmtDataAp(word32 ra, word32 s0, word32 a0, word32 fflags, word32 frm, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg4C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0184, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessEAPoLPkt
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0184:[0..31]
// LiveOut: a4 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ProcessKeyMgmtDataAp_entry:
l23054804:
	word32 a5_257
	word32 a4_119
	cm_GetApData(Mem11[a0:word32], out a4_119, out a5_257)
	word32 s2_18 = Mem11[a0 + 8<i32>:int32]
	branch (CONVERT(Mem11[s2_18 + 5<i32>:byte], byte, word32) & 4<32>) == 0<32> l2305482E
l2305482E:
	word32 a7_263
	word32 a6_262
	word32 a5_261
	word32 a4_260
	word32 a3_259
	word32 a2_258
	memcpy(fp + 0xFFFFFFE8<32>, s2_18 + 9<i32>, 4<32>, out a2_258, out a3_259, out a4_260, out a5_261, out a6_262, out a7_263)
	word32 a5_42
	word32 a3_265
	word32 a2_264
	word32 a4_266
	word32 a6_267
	word32 a7_268
	memcpy(fp + 0xFFFFFFEC<32>, s2_18 + 13<i32>, 4<32>, out a2_264, out a3_265, out a4_266, out a5_42, out a6_267, out a7_268)
	a4_119 = (a5_42 >>u 8<u32> & 0xFFFFF00<32>) + ((a5_42 << 8<u32> & 0xFF0000<32>) + ((a5_42 << 0x18<u32>) + (a5_42 >>u 0x18<u32>)))
	branch a4_119 != 0x10000000<32> l23054820
l23054874:
	a4_119 = 0x10<32>
	word32 s1_78 = Mem11[0x2C<32>:word32]
	branch (dwArgC4 & 0x100000<32>) != 0<32> l23054820
l23054894:
	word32 a5_79 = CONVERT(Mem11[s1_78 + 22<i32>:byte], byte, word32)
	branch a5_79 != 2<32> l230548A6
l230548A6:
	a4_119 = 4<32>
	branch a5_79 != 4<32> l23054820
l230548AC:
	a4_119 = ProcessPWKMsg4(ra, dwArgC4, mstatus, dwLoc20, dwArg00, dwArg04, dwArg08, dwArg18, dwArg4C, dwArg98, dwArgE8, dwArgF8, dwArg0118, dwArg0184, out s5, out s10)
l2305489E:
	a4_119 = ProcessPWKMsg2(ra, dwArgC4, fflags, frm, mstatus, dwLoc1C, s0, dwArg08, dwArg24, dwArg28, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0158, out s5, out s10)
l23054820:
l23054822:
	s5Out = s5
	s10Out = s10
	return a4_119
ProcessKeyMgmtDataAp_exit:


word32 InitStaKeyInfo(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg74, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_assoc_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0074:[0..31] Stack +0128:[0..31]
// LiveOut: ra s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
InitStaKeyInfo_entry:
l230548B4:
	word32 a4_88
	word32 a5_89
	word32 a0_23 = cm_GetApData(a0, out a4_88, out a5_89)
	word32 t1_90
	word32 a0_91
	word32 a1_92
	word32 a2_93
	word32 a3_94
	word32 a4_95
	word32 a5_96
	word32 ra_37 = memset(ra, a0_23 + 16<i32>, 0<32>, 72<i32>, out t1_90, out a0_91, out a1_92, out a2_93, out a3_94, out a4_95, out a5_96)
	word32 s1_54
	word32 s4_56
	Mem65[InitKeyMgmtInfo(a0_23 + 16<i32>, a1, a2, dwArg74, out s1_54, out s4_56) + 84<i32>:byte] = 1<8>
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_54
	s4Out = s4_56
	return ra_37
InitStaKeyInfo_exit:


word32 RemoveAPKeyInfo(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_stop_req_handler
// MayUse:  a0:[0..31]
// LiveOut: a2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
RemoveAPKeyInfo_entry:
l230548FC:
	word32 a0_5 = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32)
	branch a0_5 == 255<i32> l2305490C
l2305490C:
	return a2
l23054908:
l23054908_thunk_mm_sec_machwkey_del:
	word32 a4_30
	return mm_sec_machwkey_del(a0_5, out a4_30)
RemoveAPKeyInfo_exit:


word32 InitGroupKey(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg6C, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgBC, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg01A4, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_req_handler
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +006C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +01A4:[0..31]
// LiveOut: a4 ra s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
InitGroupKey_entry:
l2305490E:
	word32 a5_180
	word32 a4_179
	word32 a0_12 = cm_GetApInfo(a0, out a4_179, out a5_180)
	Mem16[a0_12 + 276<i32>:word32] = 0<32>
	Mem17[a0_12 + 280<i32>:word32] = 0<32>
	word32 a5_25
	word32 s1_30
	word32 ra_28 = KeyMgmtInit(ra, a0, mstatus, dwArg08, dwArg48, dwArg88, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0148, out s1_30, out a5_25)
	word32 s0_48 = Mem17[a5_25 + 20<i32>:word32]
	branch a5_25 == 0<32> l2305495E
l2305492E:
	word32 a5_188
	word32 a3_187
	word32 a1_186
	word32 a0_60 = __udivdi3(a5_25 + 0x1EFFF7CB<32>, CONVERT(a5_25 + 0x1EFFF7CB<32> <u a5_25 + 0x1EFFF848<32>, bool, word32) + (CONVERT(a5_25 <u 0x1EFFF848<32>, bool, word32) + 0xFFFFFFFF<32>), CONVERT(Mem17[s0_48 + 166<i32>:uint16], uint16, word32) << 7<i32>, 0<32>, out a1_186, out a3_187, out a5_188)
	Mem73[s0_48 + 276<i32>:word32] = a0_60 + 1<32>
	Mem74[s0_48 + 280<i32>:word32] = a0_60 + 1<32>
l2305495E:
	word32 a0_81
	word32 a3_84
	word32 s1_91
	word32 s10_185
	word32 s5_184
	word32 s2_183
	word32 a5_182
	word32 a4_181
	word32 ra_89 = add_key_to_mac(ra_28, s1_30, s1_30, 0<32>, dwArg20, dwArg24, dwArg6C, dwArgB8, dwArg0108, dwArg0118, dwArg01A4, out s1_91, out a0_81, out a3_84, out a4_181, out a5_182, out s2_183, out s5_184, out s10_185)
	Mem110[s1_91 + 3<i32>:byte] = SLICE(a0_81, byte, 0)
l2305497C_thunk_printf:
	word32 a4_123
	word32 s2_129
	word32 s4_131
	word32 a1_191
	word32 a0_190
	word32 s1_189
	word32 a2_192
	word32 a3_193
	word32 a5_194
	word32 a7_195
	word32 s3_196
	word32 s5_197
	word32 s6_198
	word32 s7_199
	word32 s8_200
	word32 s9_201
	word32 s10_202
	word32 s11_203
	word32 t4_204
	word32 ra_125 = printf(ra_89, 0x2307CB94<32>, a3_84, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_189, out a0_190, out a1_191, out a2_192, out a3_193, out a4_123, out a5_194, out a7_195, out s2_129, out s3_196, out s4_131, out s5_197, out s6_198, out s7_199, out s8_200, out s9_201, out s10_202, out s11_203, out t4_204)
	a4Out = a4_123
	s2Out = s2_129
	s4Out = s4_131
	return ra_125
InitGroupKey_exit:


word32 GenerateGTK_internal(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg18, word32 dwArg78, word32 dwArgC8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ROM_InitGTK
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: ra s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
GenerateGTK_internal_entry:
l23054980:
	word32 a2_282
	word32 a3_283
	word32 a4_284
	word32 a5_285
	word32 a6_286
	word32 a7_287
	memcpy(fp + -140<i32>, 0x2307CBA8<32>, 0x14<32>, out a2_282, out a3_283, out a4_284, out a5_285, out a6_286, out a7_287)
	word32 s1_152 = a1
	word32 s0_14 = a0
	branch a0 == 0<32> l23054A14
l230549A2:
	branch a1 == 0<32> l23054A14
l230549A4:
	word32 a2_288
	word32 a3_289
	word32 a4_290
	word32 a5_291
	word32 a6_292
	word32 a7_293
	memcpy(fp + -56<i32>, a2, 6<32>, out a2_288, out a3_289, out a4_290, out a5_291, out a6_292, out a7_293)
	word32 s1_63
	word32 s0_294
	word32 a0_295
	word32 a3_296
	word32 a4_297
	word32 s9_298
	word32 s10_299
	word32 ra_61 = supplicantGenerateRand(ra, dwLoc80, dwLoc7C, dwLoc34, dwArg78, dwArgC8, dwArgE8, out s0_294, out s1_63, out a0_295, out a3_296, out a4_297, out s9_298, out s10_299)
	word32 a2_300
	word32 a3_301
	word32 a4_302
	word32 a5_303
	word32 a6_304
	word32 a7_305
	memcpy(fp + -50<i32>, s1_63, 32<i32>, out a2_300, out a3_301, out a4_302, out a5_303, out a6_304, out a7_305)
	word32 s0_306
	word32 s1_307
	word32 a0_308
	word32 a3_309
	word32 a4_310
	word32 s9_311
	word32 s10_312
	word32 a1_313
	word32 a2_314
	word32 a3_315
	word32 a4_316
	word32 a5_317
	ra = Bl_PRF(supplicantGenerateRand(ra_61, dwLoc80, dwLoc7C, dwLoc34, dwArg78, dwArgC8, dwArgE8, out s0_306, out s1_307, out a0_308, out a3_309, out a4_310, out s9_311, out s10_312), fp + -88<i32>, 32<i32>, fp + -140<i32>, strlen(fp + -140<i32>, out a1_313, out a2_314, out a3_315, out a4_316, out a5_317), fp + -56<i32>, 38<i32>, fp + -120<i32>, 32<i32>, dwLoc5C, out s0_14, out s1_152, out s4)
	word32 a2_318
	word32 a3_319
	word32 a4_320
	word32 a5_321
	word32 a6_322
	word32 a7_323
	memcpy(s0_14, fp + -120<i32>, 0x10<32>, out a2_318, out a3_319, out a4_320, out a5_321, out a6_322, out a7_323)
	word32 a2_324
	word32 a3_325
	word32 a4_326
	word32 a5_327
	word32 a6_328
	word32 a7_329
	memcpy(s0_14 + 24<i32>, fp + -104<i32>, 8<32>, out a2_324, out a3_325, out a4_326, out a5_327, out a6_328, out a7_329)
	word32 a2_330
	word32 a3_331
	word32 a4_332
	word32 a5_333
	word32 a6_334
	word32 a7_335
	memcpy(s0_14 + 16<i32>, fp + -96<i32>, 8<32>, out a2_330, out a3_331, out a4_332, out a5_333, out a6_334, out a7_335)
l23054A14:
	s0Out = s0_14
	s1Out = s1_152
	s4Out = s4
	return ra
GenerateGTK_internal_exit:


word32 PopulateKeyMsg(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg1
//      GeneratePWKMsg3
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
PopulateKeyMsg_entry:
l23054A20:
	branch a0 == 0<32> l23054B2A
l23054A24:
	branch a1 == 0<32> l23054B2A
l23054B2A:
	a4Out = a4
	return a0
l23054A28:
	word32 a5_10
	word32 a5_6 = CONVERT(Mem0[a1:byte], byte, word32)
	branch (a5_6 & 4<i32>) == 0<32> l23054B0C
l23054B0C:
	branch (a5_6 & 8<32>) == 0<32> l23054A3E
l23054B10:
	Mem9[a0 + 21<i32>:byte] = 0<8>
	a5_10 = 0x10<32>
l23054A32:
	Mem11[a0 + 21<i32>:byte] = 0<8>
	a5_10 = 32<i32>
l23054A3A:
	Mem15[a0 + 22<i32>:byte] = SLICE(a5_10, byte, 0)
l23054A3E:
	word32 a5_29
	word32 a2_27
	word32 a1_18 = CONVERT(Mem17[a0 + 20<i32>:byte], byte, word32)
	Mem20[a0 + 20<i32>:byte] = SLICE(a1_18 | -128<i32>, byte, 0)
	branch a2 << 0x14<u32> >= 0<32> l23054B18
l23054B18:
	a2_27 = a2 >>u 15<i32> << 4<i32>
	a5_29 = CONVERT(Mem20[a0 + 19<i32>:byte], byte, word32) & 236<i32> | 3<i32>
l23054A52:
	Mem31[a0 + 20<i32>:byte] = SLICE(a1_18 | -120<i32>, byte, 0)
	branch (a2 & 128<i32>) == 0<32> l23054A84
l23054A60:
	word32 a5_33 = CONVERT(Mem31[a0 + 19<i32>:byte], byte, word32)
	Mem37[a0 + 20<i32>:byte] = SLICE(a1_18 | -56<i32>, byte, 0)
	a5_29 = (a5_33 | 1<i32>) & 237<i32> | (a2 >>u 15<i32>) << 1<u32>
	a2_27 = a2 >>u 15<i32> << 4<i32>
l23054A7E:
	Mem46[a0 + 19<i32>:byte] = SLICE(a2_27 | a5_29, byte, 0)
l23054A84:
	word32 a6_53 = Mem52[a3:int32]
	word32 a2_67 = (a6_53 << 0x18<u32>) + (a6_53 >>u 0x18<u32>) + (a6_53 << 8<u32> & 0xFF0000<32>) + (a6_53 >>u 8<u32> & 0xFFFFF00<32>)
	Mem69[a0 + 0x1017<32>:byte] = SLICE(a2_67, byte, 0)
	Mem70[a0 + 0x1018<32>:byte] = SLICE(a2_67 >>u 8<u32>, byte, 0)
	Mem73[a0 + 0x1019<32>:byte] = SLICE(a2_67 >>u 0x10<u32>, byte, 0)
	Mem74[a0 + 0x101A<32>:byte] = SLICE(a2_67 >>u 24<i32>, byte, 0)
	word32 a3_75 = Mem74[a3 + 4<i32>:word32]
	word32 a5_84 = (a3_75 << 0x18<u32>) + (a3_75 >>u 0x18<u32>) + (a3_75 << 8<u32> & 0xFF0000<32>) + (a3_75 >>u 8<i32> & 0xFFFFF00<32>)
	Mem86[a0 + 0x101B<32>:byte] = SLICE(a5_84, byte, 0)
	Mem87[a0 + 0x101C<32>:byte] = SLICE(a5_84 >>u 8<u32>, byte, 0)
	Mem90[a0 + 0x101D<32>:byte] = SLICE(a5_84 >>u 0x10<u32>, byte, 0)
	Mem91[a0 + 0x101E<32>:byte] = SLICE(a5_84 >>u 24<i32>, byte, 0)
l23054B08_thunk_memcpy:
	word32 a4_99
	word32 a7_160
	word32 a6_159
	word32 a5_158
	word32 a3_157
	word32 a2_156
	memcpy(a0 + 0x1F<32>, a4, 32<i32>, out a2_156, out a3_157, out a4_99, out a5_158, out a6_159, out a7_160)
	a4Out = a4_99
	return a0 + 0x1F<32>
PopulateKeyMsg_exit:


word32 prepareKDE(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg3
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 a3 ra s0 s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
prepareKDE_entry:
l23054B2C:
	branch a0 == 0<32> l23054C38
l23054C38:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a3Out = a3
	s3Out = s3
	return ra
l23054B30:
	word32 s0_110 = a1
	branch a1 == 0<32> l23054C2A
l23054B40:
	branch a2 == 0<32> l23054C2A
l23054B42:
	s1 = a0 + 113<i32> + CONVERT(Mem14[a0 + 111<i32>:byte], byte, word32)
	Mem23[s1:byte] = 0xDD<8>
	Mem25[s1 + 1<i32>:byte] = 0x16<8>
	Mem30[s1 + 2<i32>:byte] = SLICE(CONVERT(Mem25[0x230827F8<32>:byte], byte, word32), byte, 0)
	word32 a5_32 = CONVERT(Mem30[0x230827FA<32>:byte], byte, word32)
	Mem34[s1 + 3<i32>:byte] = SLICE(CONVERT(Mem30[0x230827F9<32>:byte], byte, word32), byte, 0)
	Mem35[s1 + 4<i32>:byte] = SLICE(a5_32, byte, 0)
	Mem37[s1 + 5<i32>:byte] = 1<8>
	Mem42[s1 + 6<i32>:byte] = SLICE(CONVERT(Mem37[s1 + 6<i32>:byte], byte, word32) & 0xFFFFFFFC<32> | 1<i32>, byte, 0)
	word32 a2_232
	word32 a4_233
	word32 a5_234
	word32 a6_235
	word32 a7_236
	memcpy(s1 + 8<i32>, a1, 0x10<32>, out a2_232, out a3, out a4_233, out a5_234, out a6_235, out a7_236)
	s3 = a2
	a0 = s1 + 24<i32>
	branch (CONVERT(Mem42[a2:byte], byte, word32) & 4<32>) == 0<32> l23054BCE
l23054BA8:
	Mem63[s1 + 1<i32>:byte] = SLICE(CONVERT(Mem42[s1 + 1<i32>:byte], byte, word32) + 0x10<32>, byte, 0)
	word32 a2_237
	word32 a3_238
	word32 a4_239
	word32 a5_240
	word32 a6_241
	word32 a7_242
	memcpy(s1 + 24<i32>, a1 + 24<i32>, 8<32>, out a2_237, out a3_238, out a4_239, out a5_240, out a6_241, out a7_242)
	word32 a2_243
	word32 a4_244
	word32 a5_245
	word32 a6_246
	word32 a7_247
	memcpy(s1 + 32<i32>, a1 + 16<i32>, 8<32>, out a2_243, out a3, out a4_244, out a5_245, out a6_246, out a7_247)
	a0 = s1 + 40<i32>
l23054BCE:
	word32 s0_105 = CONVERT(SLICE((CONVERT(Mem95[a0 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem95[a0 + 111<i32>:byte], byte, word32)) + 2<32> + CONVERT(Mem95[s1 + 1<i32>:byte], byte, word32), word16, 0), word16, word32)
	Mem107[a0 + 111<i32>:byte] = SLICE(s0_105, byte, 0)
	Mem109[a0 + 112<i32>:byte] = SLICE(s0_105 >>u 8<u32>, byte, 0)
	word32 s0_108 = 0<32> - s0_105
	s0_110 = s0_108 & 7<32>
	branch (s0_108 & 7<32>) == 0<32> l23054C2A
l23054BFA:
	Mem113[a0:byte] = 0xDD<8>
	word32 t1_248
	word32 a1_249
	word32 a2_250
	word32 a4_251
	word32 a5_252
	ra = memset(ra, a0 + 1<32>, 0<32>, (s0_108 & 7<32>) + -1<i32>, out t1_248, out a0, out a1_249, out a2_250, out a3, out a4_251, out a5_252)
	word32 s0_133 = CONVERT(SLICE((s0_108 & 7<32>) + (CONVERT(Mem113[a0 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem113[a0 + 111<i32>:byte], byte, word32)), word16, 0), word16, word32)
	Mem134[a0 + 111<i32>:byte] = SLICE(s0_133, byte, 0)
	Mem136[a0 + 112<i32>:byte] = SLICE(s0_133 >>u 8<i32>, byte, 0)
	s0_110 = s0_133 >>u 8<i32>
l23054C2A:
	s0Out = s0_110
	s1Out = s1
	a0Out = a0
	a3Out = a3
	s3Out = s3
	return ra
prepareKDE_exit:


word32 Encrypt_keyData(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg3
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a4 a5 ra s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
Encrypt_keyData_entry:
l23054C3A:
	branch a0 != 0<32> l23054C50
l23054C50:
	branch a1 == 0<32> l23054C3C
l23054C52:
	branch a2 == 0<32> l23054C3C
l23054C54:
	word32 a5_7 = CONVERT(Mem0[a2:byte], byte, word32)
	branch (a5_7 & 8<i32>) == 0<32> l23054CE6
l23054CE6:
	a0Out = a5_7 >>u 2<u32> & 1<32>
	a2Out = a2
	a4Out = a5_7 & 8<i32>
	a5Out = a5_7
	s5Out = s5
	s10Out = s10
	return ra
l23054C5E:
	word32 a0_168
	word32 a0_27
	word32 a3_30
	word32 s8_340
	word32 s4_339
	word32 s3_338
	word32 s2_337
	word32 a6_336
	word32 a2_335
	word32 a1_334
	word32 s1_333
	word32 a4_158
	word32 a5_159
	pvPortMalloc(ra, s1, 0xC<32>, a3, a5_7 & 8<i32>, a5_7, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_333, out a0_27, out a1_334, out a2_335, out a3_30, out a4_158, out a5_159, out a6_336, out s2_337, out s3_338, out s4_339, out s8_340)
	branch a0_27 == 0<32> l23054C40
l23054C78:
	word32 a0_44
	word32 s1_52
	word32 s3_54
	word32 s8_347
	word32 s4_346
	word32 s2_345
	word32 a6_344
	word32 a3_343
	word32 a2_342
	word32 a1_341
	word32 s0_51 = pvPortMalloc(ra, a0_27, 400<i32>, a3_30, a4_158, a5_159, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_52, out a0_44, out a1_341, out a2_342, out a3_343, out a4_158, out a5_159, out a6_344, out s2_345, out s3_54, out s4_346, out s8_347)
	Mem59[a0_44 + 8<i32>:word32] = s1_52
	branch a0_44 == 0<32> l23054C40
l23054C40:
	a0_168 = 0<32>
l23054C86:
	word32 a7_353
	word32 a6_352
	word32 a5_351
	word32 a4_350
	word32 a3_349
	word32 a2_348
	memcpy(fp + -48<i32>, s3_54, 0x10<32>, out a2_348, out a3_349, out a4_350, out a5_351, out a6_352, out a7_353)
	word32 s0_98
	word32 s2_101
	word32 s3_102
	ra = BL_AesWrap(fp + -48<i32>, 2<32>, (CONVERT(Mem59[s0_51 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem59[s0_51 + 111<i32>:byte], byte, word32)) >>u 3<i32>, s0_51 + 113<i32>, 0<32>, a0_44, out s0_98, out s2_101, out s3_102, out s5, out s10)
	word32 a2_123 = (CONVERT(Mem59[s0_98 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem59[s0_98 + 111<i32>:byte], byte, word32)) + 8<32> << 16<i32>
	Mem126[s0_98 + 111<i32>:byte] = SLICE(a2_123 >>u 16<i32>, byte, 0)
	Mem127[s0_98 + 112<i32>:byte] = SLICE(a2_123 >>u 0x18<32>, byte, 0)
	word32 a5_130
	word32 a2_133
	word32 a7_357
	word32 a6_356
	word32 a4_355
	word32 a3_354
	memcpy(s3_102, s2_101, a2_123 >>u 16<i32>, out a2_133, out a3_354, out a4_355, out a5_130, out a6_356, out a7_357)
	word32 a2_143
	word32 a5_146
	word32 s1_147
	word32 t3_365
	word32 s4_364
	word32 a6_363
	word32 a4_362
	word32 a3_361
	word32 a1_360
	word32 a0_359
	word32 s0_358
	vPortFree(s3_102, a2_133, a5_130, mstatus, dwArg0128, dwArg0168, out s0_358, out s1_147, out a0_359, out a1_360, out a2_143, out a3_361, out a4_362, out a5_146, out a6_363, out s4_364, out t3_365)
	word32 s0_366
	word32 s1_367
	word32 a0_368
	word32 a1_369
	word32 a2_370
	word32 a3_371
	word32 a6_372
	word32 s4_373
	word32 t3_374
	vPortFree(s1_147, a2_143, a5_146, mstatus, dwArg0128, dwArg0168, out s0_366, out s1_367, out a0_368, out a1_369, out a2_370, out a3_371, out a4_158, out a5_159, out a6_372, out s4_373, out t3_374)
	a0_168 = 1<32>
l23054C42:
	0<32> = dwArg0128
	a0Out = a0_168
	a2Out = dwArg0100
	a4Out = a4_158
	a5Out = a5_159
	s5Out = s5
	s10Out = s10
	return ra
l23054C3C:
	a0Out = 0<32>
	a2Out = a2
	a4Out = a4
	a5Out = a5
	s5Out = s5
	s10Out = s10
	return ra
Encrypt_keyData_exit:


void KeyMgmtAp_DerivePTK(word32 ra, word32 a7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessPWKMsg2
// MayUse:  a7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtAp_DerivePTK_entry:
l23054CEE:
	KeyMgmtSta_DeriveKeys(ra)
	word32 a2_94
	word32 a3_95
	word32 a4_96
	word32 a5_97
	word32 a6_98
	word32 a7_99
	memcpy(fp + -24<i32>, a7 + 16<i32>, 8<32>, out a2_94, out a3_95, out a4_96, out a5_97, out a6_98, out a7_99)
	word32 a2_100
	word32 a3_101
	word32 a4_102
	word32 a5_103
	word32 a6_104
	word32 a7_105
	memcpy(a7 + 16<i32>, a7 + 0x18<32>, 8<32>, out a2_100, out a3_101, out a4_102, out a5_103, out a6_104, out a7_105)
	word32 a2_106
	word32 a3_107
	word32 a4_108
	word32 a5_109
	word32 a6_110
	word32 a7_111
	memcpy(a7 + 0x18<32>, fp + -24<i32>, 8<32>, out a2_106, out a3_107, out a4_108, out a5_109, out a6_110, out a7_111)
	return
KeyMgmtAp_DerivePTK_exit:


word32 KeyData_CopyWPAWP2(word32 a0, word32 a1, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyData_UpdateKeyMaterial
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
KeyData_CopyWPAWP2_entry:
l23054D2E:
	branch a1 == 0<32> l23054D56
l23054D56:
	a5Out = a5
	return 0<32>
l23054D30:
	word32 a2_6 = CONVERT(Mem0[a1 + 1<i32>:byte], byte, word32)
	Mem13[a0 + 111<i32>:byte] = SLICE(a2_6 + 2<32>, byte, 0)
	Mem14[a0 + 112<i32>:byte] = SLICE(a2_6 + 2<32> >>u 8<u32>, byte, 0)
	word32 a5_17
	word32 a2_62
	word32 a3_63
	word32 a4_64
	word32 a6_65
	word32 a7_66
	memcpy(a0 + 113<i32>, a1, a2_6 + 2<32>, out a2_62, out a3_63, out a4_64, out a5_17, out a6_65, out a7_66)
	a5Out = a5_17
	return 1<32>
KeyData_CopyWPAWP2_exit:


word32 KeyData_UpdateKeyMaterial(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg3
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
KeyData_UpdateKeyMaterial_entry:
l23054D5A:
	word32 a4_12
	word32 a5_11
	word32 a5_7 = CONVERT(Mem5[a1:byte], byte, word32)
	word32 a1_14 = a2
	branch (a5_7 & 24<i32>) != 0<32> l23054D74
l23054D6A:
	a5_11 = a5_7 & 32<i32>
	a4_12 = 1<32>
	branch (a5_7 & 32<i32>) == 0<32> l23054D7C
l23054D72:
	a1_14 = a3
l23054D74:
	a4_12 = CONVERT(KeyData_CopyWPAWP2(a0, a1_14, out a5_11) != 0<32>, bool, word32)
l23054D7C:
	a2Out = dwArg10
	a4Out = a4_12
	a5Out = a5_11
	return a4_12
KeyData_UpdateKeyMaterial_exit:


word32 ROM_InitGTK(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg18, word32 dwArg78, word32 dwArgC8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtInit
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: ra s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ROM_InitGTK_entry:
l23054D84:
	Mem6[a0 + 32<i32>:word32] = 0<32>
	Mem7[0x10000025<32>:word32] = a0
l23054D8E_thunk_GenerateGTK_internal:
	word32 s0_19
	word32 s1_20
	word32 s4_32
	word32 ra_28 = GenerateGTK_internal(ra, a0, a1, a2, dwArg18, dwArg78, dwArgC8, dwArgE8, out s0_19, out s1_20, out s4_32)
	s0Out = s0_19
	s1Out = s1_20
	s4Out = s4_32
	return ra_28
ROM_InitGTK_exit:


word32 InitKeyMgmtInfo(word32 a0, word32 a1, word32 a2, word32 dwArgA4, ptr32 & s1Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      InitStaKeyInfo
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +00A4:[0..31]
// LiveOut: s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
InitKeyMgmtInfo_entry:
l23054D92:
	Mem14[a0 + 6<i32>:byte] = 1<8>
	word32 a7_105
	word32 a6_104
	word32 a5_103
	word32 a4_102
	word32 a3_101
	word32 a2_100
	memcpy(a0 + 2<32>, a1, 2<32>, out a2_100, out a3_101, out a4_102, out a5_103, out a6_104, out a7_105)
	word32 a4_42
	word32 a3_47
	word32 a7_109
	word32 a6_108
	word32 a5_107
	word32 a2_106
	memcpy(a0 + 4<i32>, a2, 1<32>, out a2_106, out a3_47, out a4_42, out a5_107, out a6_108, out a7_109)
	Mem56[dwArgA4 + 5<i32>:byte] = SLICE(a4_42, byte, 0)
	branch (CONVERT(Mem56[a1:byte], byte, word32) & 32<i32>) == 0<32> l23054DD6
l23054DD0:
	Mem60[dwArgA4:word16] = SLICE(a3_47, word16, 0)
l23054DD6:
	s1Out = a1
	s4Out = dwArg04
	return dwArgA4
InitKeyMgmtInfo_exit:


word32 cm_GetApInfo(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      add_key_to_mac
//      KeyMgmtInit
//      PrepDefaultEapolMsg
//      GeneratePWKMsg3
//      ProcessPWKMsg2
//      InitGroupKey
//      ap_setpsk
//      InitializeAp
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
cm_GetApInfo_entry:
l23054DE2:
	branch a0 == 0<32> l23054DF4
l23054DE4:
	a4 = CONVERT(Mem0[a0:byte], byte, word32)
	a5 = 2<32>
	branch a4 != 2<32> l23054DF2
l23054DF2:
	a0 = 0<32>
l23054DF4:
	a4Out = a4
	a5Out = a5
	return a0
l23054DEE:
	word32 a0_8 = Mem0[a0 + 76<i32>:word32]
	a4Out = a4
	a5Out = 2<32>
	return a0_8
cm_GetApInfo_exit:


word32 cm_GetApData(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      PrepDefaultEapolMsg
//      GeneratePWKMsg1
//      GeneratePWKMsg3
//      ProcessPWKMsg4
//      GenerateApEapolMsg
//      ProcessPWKMsg2
//      SendEAPOLMsgUsingBufDesc
//      ProcessKeyMgmtDataAp
//      InitStaKeyInfo
//      cm_AllocResources
//      cm_DeleteConnection
//      InitializeAp
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
cm_GetApData_entry:
l23054DF6:
	branch a0 == 0<32> l23054E0A
l23054DF8:
	a4 = CONVERT(Mem0[a0:byte], byte, word32)
	a5 = 2<32>
	branch a4 != 2<32> l23054E08
l23054E08:
	a0 = 0<32>
l23054E0A:
	a4Out = a4
	a5Out = a5
	return a0
l23054E02:
	a4Out = a4
	a5Out = 2<32>
	return a0 + 76<i32>
cm_GetApData_exit:


word32 cm_AllocAPResources(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg7C, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cm_AllocResources
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +007C:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
cm_AllocAPResources_entry:
l23054E0C:
	word32 a0_38
	word32 a4_15
	word32 a5_16
	cm_GetApData(a0, out a4_15, out a5_16)
	word32 s2_104 = a0
	word32 a0_17 = Mem11[a5_16 + 4<i32>:word32]
	branch a5_16 != 0<32> l23054E44
l23054E20:
	word32 a0_22
	word32 a3_25
	word32 a4_26
	word32 a5_27
	word32 a1_121
	word32 a2_122
	word32 a6_123
	word32 s3_124
	word32 s4_125
	word32 s8_126
	pvPortMalloc(ra, a0_17, 0xC<32>, a3, a4_15, a5_16, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1, out a0_22, out a1_121, out a2_122, out a3_25, out a4_26, out a5_27, out a6_123, out s2_104, out s3_124, out s4_125, out s8_126)
	a0_38 = 1<32>
	branch a0_22 == 0<32> l23054E46
l23054E2E:
	word32 a0_40
	word32 a5_45
	word32 a1_127
	word32 a2_128
	word32 a3_129
	word32 a4_130
	word32 a6_131
	word32 s3_132
	word32 s4_133
	word32 s8_134
	word32 s0_47 = pvPortMalloc(ra, s1, 288<i32>, a3_25, a4_26, a5_27, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1, out a0_40, out a1_127, out a2_128, out a3_129, out a4_130, out a5_45, out a6_131, out s2_104, out s3_132, out s4_133, out s8_134)
	Mem55[a0_40 + 8<i32>:word32] = s0_47
	Mem56[s0_47 + 4<i32>:word32] = s1
	Mem59[a5_45:word32] = s1
	InitializeAp(ra, a0)
l23054E44:
	a0_38 = 0<32>
l23054E46:
	0<32> = dwArg38
	a0Out = a0_38
	a2Out = dwArg10
	s2Out = s2_104
	return s1
cm_AllocAPResources_exit:


word32 cm_AllocResources(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg7C, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cm_InitConnection
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +007C:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
cm_AllocResources_entry:
l23054E52:
	branch CONVERT(Mem0[a0:byte], byte, word32) != 2<32> l23054E60
l23054E60:
	a0Out = 0<32>
	a2Out = a2
	s2Out = s2
	return s1
l23054E5C:
l23054E5C_thunk_cm_AllocAPResources:
	word32 a0_11
	word32 a2_12
	word32 s2_15
	word32 s1_20 = cm_AllocAPResources(ra, a0, a3, mstatus, dwArg30, dwArg34, dwArg38, dwArg7C, dwArg0128, dwArg0168, out a0_11, out a2_12, out s2_15)
	a0Out = a0_11
	a2Out = a2_12
	s2Out = s2_15
	return s1_20
cm_AllocResources_exit:


word32 cm_InitConnection(word32 ra, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg5C, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_req_handler
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +005C:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a0 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
cm_InitConnection_entry:
l23054E64:
	word32 a0_23
	word32 s3_33
	word32 a1_232
	word32 a2_233
	word32 a3_234
	word32 a4_235
	word32 a5_236
	word32 a6_237
	word32 s4_238
	word32 s8_239
	word32 s1_149
	word32 s2_210
	pvPortMalloc(ra, a3, 236<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_149, out a0_23, out a1_232, out a2_233, out a3_234, out a4_235, out a5_236, out a6_237, out s2_210, out s3_33, out s4_238, out s8_239)
	word32 s0_157 = a0_23
	branch a0_23 == 0<32> l23054EA4
l23054E82:
	word32 a3_44
	word32 t1_240
	word32 a0_241
	word32 a1_242
	word32 a2_243
	word32 a4_244
	word32 a5_245
	ra = memset(ra, a0_23, 0<32>, 236<i32>, out t1_240, out a0_241, out a1_242, out a2_243, out a3_44, out a4_244, out a5_245)
	Mem51[a0_23:byte] = SLICE(s3_33, byte, 0)
	word32 a0_52
	word32 a2_56
	s1_149 = cm_AllocResources(ra, a0_23, a3_44, mstatus, dwArg10, dwArg14, dwArg18, dwArg5C, dwArg0108, dwArg0148, out a0_52, out a2_56, out s2_210)
	branch a0_52 != 1<32> l23054EB4
l23054EB4:
	branch s2_210 == 0<32> l23054EC4
l23054EB8:
	word32 a2_270
	word32 a3_271
	word32 a4_272
	word32 a5_273
	word32 a6_274
	word32 a7_275
	memcpy(a0_23 + 64<i32>, s2_210, 6<32>, out a2_270, out a3_271, out a4_272, out a5_273, out a6_274, out a7_275)
l23054EC4:
	word32 t1_256
	word32 a0_257
	word32 a1_258
	word32 a2_259
	word32 a3_260
	word32 a4_261
	word32 a5_262
	word32 t1_263
	word32 a0_264
	word32 a1_265
	word32 a2_266
	word32 a3_267
	word32 a4_268
	word32 a5_269
	ra = memset(memset(ra, a0_23 + 48<i32>, 0<32>, 6<32>, out t1_256, out a0_257, out a1_258, out a2_259, out a3_260, out a4_261, out a5_262), a0_23 + 12<i32>, 0<32>, 32<i32>, out t1_263, out a0_264, out a1_265, out a2_266, out a3_267, out a4_268, out a5_269)
	Mem110[a0_23 + 44<i32>:byte] = 0<8>
	s2_210 = a0_23 + 48<i32>
	branch s1_149 == 0<32> l23054EA4
l23054EE6:
	word32 a2_276
	word32 a3_277
	word32 a4_278
	word32 a5_279
	word32 a6_280
	word32 a7_281
	memcpy(a0_23 + 48<i32>, s1_149, 6<32>, out a2_276, out a3_277, out a4_278, out a5_279, out a6_280, out a7_281)
	word32 a2_282
	word32 a3_283
	word32 a4_284
	word32 a5_285
	word32 a6_286
	word32 a7_287
	memcpy(a0_23 + 70<i32>, s1_149, 6<32>, out a2_282, out a3_283, out a4_284, out a5_285, out a6_286, out a7_287)
l23054E9C:
	word32 s0_246
	word32 a0_247
	word32 a1_248
	word32 a2_249
	word32 a3_250
	word32 a4_251
	word32 a5_252
	word32 a6_253
	word32 s4_254
	word32 t3_255
	vPortFree(a0_23, a2_56, 1<32>, mstatus, dwArg0138, dwArg0178, out s0_246, out s1_149, out a0_247, out a1_248, out a2_249, out a3_250, out a4_251, out a5_252, out a6_253, out s4_254, out t3_255)
	s0_157 = 0<32>
l23054EA4:
	s0Out = s0_157
	s1Out = s1_149
	a0Out = s0_157
	s2Out = s2_210
	return ra
cm_InitConnection_exit:


word32 cm_DeleteConnection(word32 a0, word32 a2, word32 mstatus, word32 dwArg10, word32 dwArg0148, word32 dwArg0158, word32 dwArg0188, word32 dwArg0198, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_stop_req_handler
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut: a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
cm_DeleteConnection_entry:
l23054EFE:
	word32 a5_12 = 2<32>
	word32 s1_13 = a0
	branch CONVERT(Mem9[a0:byte], byte, word32) != 2<32> l23054F30
l23054F12:
	word32 a4_86
	cm_GetApData(a0, out a4_86, out a5_12)
	word32 a0_17 = Mem9[a5_12 + 4<i32>:word32]
	branch a5_12 == 0<32> l23054F30
l23054F1C:
	word32 a2_22
	word32 a5_25
	word32 a0_28
	word32 a1_89
	word32 s1_88
	word32 s0_87
	word32 a3_90
	word32 a4_91
	word32 a6_92
	word32 s4_93
	word32 t3_94
	vPortFree(a0_17, a2, Mem9[a0_17 + 8<i32>:word32], mstatus, dwArg0148, dwArg0188, out s0_87, out s1_88, out a0_28, out a1_89, out a2_22, out a3_90, out a4_91, out a5_25, out a6_92, out s4_93, out t3_94)
	word32 s0_44
	word32 a0_95
	word32 a1_96
	word32 a2_97
	word32 a3_98
	word32 a4_99
	word32 a6_100
	word32 s4_101
	word32 t3_102
	vPortFree(a0_28, a2_22, a5_25, mstatus, dwArg0148, dwArg0188, out s0_44, out s1_13, out a0_95, out a1_96, out a2_97, out a3_98, out a4_99, out a5_12, out a6_100, out s4_101, out t3_102)
	Mem47[s0_44 + 4<i32>:word32] = 0<32>
	Mem48[s0_44:word32] = 0<32>
l23054F30:
l23054F3A_thunk_vPortFree:
	word32 a4_61
	word32 s0_68
	word32 s1_103
	word32 a0_104
	word32 a1_105
	word32 a2_106
	word32 a3_107
	word32 a5_108
	word32 a6_109
	word32 s4_110
	word32 t3_111
	vPortFree(s1_13, dwArg10, a5_12, mstatus, dwArg0158, dwArg0198, out s0_68, out s1_103, out a0_104, out a1_105, out a2_106, out a3_107, out a4_61, out a5_108, out a6_109, out s4_110, out t3_111)
	a4Out = a4_61
	return s0_68
cm_DeleteConnection_exit:


void cm_SetPeerAddr(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_assoc_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
cm_SetPeerAddr_entry:
l23054F3E:
	branch a1 == 0<32> l23054F56
l23054F4C:
	word32 a2_108
	word32 a3_109
	word32 a4_110
	word32 a5_111
	word32 a6_112
	word32 a7_113
	memcpy(a0 + 48<i32>, a1, 6<32>, out a2_108, out a3_109, out a4_110, out a5_111, out a6_112, out a7_113)
l23054F56:
	branch a2 == 0<32> l23054F6C
l23054F6C:
	return
l23054F58:
l23054F68_thunk_memcpy:
	word32 a2_114
	word32 a3_115
	word32 a4_116
	word32 a5_117
	word32 a6_118
	word32 a7_119
	memcpy(a0 + 64<i32>, a2, 6<32>, out a2_114, out a3_115, out a4_116, out a5_117, out a6_118, out a7_119)
	return
cm_SetPeerAddr_exit:


word32 cm_SetComData(word32 a0, word32 a1, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_req_handler
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a3 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
cm_SetComData_entry:
l23054F76:
	branch a1 == 0<32> l23054FB2
l23054FB2:
	a3Out = a3
	return s0
l23054F78:
	word32 a1_17
	word32 a5_101
	word32 a4_100
	word32 a3_99
	word32 a2_98
	Mem20[a0 + 44<i32>:byte] = SLICE(strlen(a1, out a1_17, out a2_98, out a3_99, out a4_100, out a5_101), byte, 0)
	word32 a3_28
	word32 a7_106
	word32 a6_105
	word32 a5_104
	word32 a4_103
	word32 a2_102
	memcpy(a0 + 12<i32>, a1_17, 32<i32>, out a2_102, out a3_28, out a4_103, out a5_104, out a6_105, out a7_106)
	word32 s0_38 = a0
	word32 a0_36 = CONVERT(Mem20[a0 + 44<i32>:byte], byte, word32)
	branch a0_36 >u 0x1F<32> l23054FAA
l23054FA4:
	s0_38 = a0 + a0_36
	Mem39[s0_38 + 12<i32>:byte] = 0<8>
l23054FAA:
	a3Out = a3_28
	return s0_38
cm_SetComData_exit:


word32 assert_rec(word32 a3, word32 mstatus, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_mpdu_transfer
//      rxl_timer_int_handler
//      rxl_mpdu_free
//      rxl_cntrl_evt
//      txl_payload_handle_backup
//      txl_frame_get
//      rxu_cntrl_frame_handle
//      hal_machw_idle_req
//      hal_machw_gen_handler
//      hal_machw_rx_duration
// MayUse:  a3:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
assert_rec_entry:
l23054FB4:
	word32 a4_5 = CONVERT(Mem0[0x4200E374<32>:byte], byte, word32)
	branch a4_5 != 1<32> l23054FF2
l23054FF2:
	a2Out = a2
	a3Out = a3
	a4Out = a4_5
	a5Out = 1<32>
	return a0
l23054FC2:
	__csrrc(mstatus, 8<32>)
	word32 a5_9 = Mem0[0x4201EEDC<32>:int32]
	branch a5_9 < 0<32> l23054FEC
l23054FEC:
	__csrrs(mstatus, 8<32>)
	a2Out = a2
	a3Out = a3
	a4Out = a4_5
	a5Out = a5_9
	return a0
l23054FD2:
	word32 a4_15
	word32 a3_14 = hal_machw_disable_int(a3, out a4_15)
	word32 a5_19
	word32 a4_18 = ke_evt_set(0x80000000<32>, a4_15, mstatus, out a5_19)
	__csrrs(mstatus, 8<32>)
	a2Out = dwArg10
	a3Out = a3_14
	a4Out = a4_18
	a5Out = a5_19
	return 0x80000000<32>
assert_rec_exit:


void assert_err()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_cfg_rssi_req_handler
//      mm_set_ps_options_req_handler
//      mm_key_del_req_handler
//      mm_key_add_req_handler
//      mm_set_idle_req_handler
//      mm_start_req_handler
//      mm_force_idle_req_handler
//      mm_hw_config_handler
//      mm_timer_schedule
//      rxl_hd_append
//      rxl_pd_append
//      blmac_abs_timer_set
//      txl_cntrl_halt_ac
//      txl_transmit_trigger
//      txl_frame_push
//      txl_frame_push_force
//      txl_frame_send_eapol_frame
//      me_mic_end
//      sm_send_next_bss_param
//      txu_cntrl_cfm
//      apm_send_next_bss_param
//      apm_bcn_set
//      co_list_push_back
//      co_list_remove
//      ke_evt_schedule
//      ke_malloc
//      ke_msg_alloc
//      ke_msg_send_basic
//      ke_task_local
//      ke_handler_search
//      ke_state_get
//      ke_task_schedule
//      ke_timer_set
//      ke_timer_clear
//      add_key_to_mac
//      ipc_emb_init
//      ipc_emb_msg_evt
//      mdm_txcbwmax_setf
//      phy_hw_set_channel
//      phy_init
//      intc_spurious
//      mac_irq
//      bl_irq_handler
//      blmac_pwr_mgt_setf
//      chan_get_next_chan
//      chan_tbtt_insert
//      chan_upd_ctxt_status
//      chan_conn_less_delay_evt
//      chan_tx_cfm
//      chan_scan_req
//      chan_ctxt_del
//      chan_ctxt_link
//      chan_ctxt_unlink
//      blmac_soft_reset_getf
//      hal_machw_init
//      hal_machw_sleep_check
//      blmac_encr_cntrl_pack.constprop.8
//      hal_machw_rx_duration
//      mm_tbtt_evt
//      mm_sec_machwkey_wr
//      mm_back_to_host_idle
//      mm_sta_tbtt
//      mm_bcn_transmit
//      mm_bcn_transmitted
//      scan_start_req_handler
//      mm_scan_channel_end_ind_handler
//      mm_scan_channel_start_ind_handler
//      txl_cfm_evt
//      me_extract_rate_set
//      me_rc_set_rate_req_handler
//      mm_set_ps_mode_cfm_handler
//      mm_set_idle_cfm_handler
//      me_init_bcmc_rate
//      me_beacon_check
//      me_sta_bw_nss_max_upd
//      rc_update_counters
//      rc_update_bw_nss_max
//      rc_init
//      rc_check
//      scanu_join_req_handler
//      me_set_ps_disable_cfm_handler
//      mm_bss_param_setting_handler
//      scanu_start_cfm_handler
//      scanu_join_cfm_handler
//      sm_connect_req_handler
//      me_set_active_cfm_handler
//      mm_sta_add_cfm_handler
//      me_set_ps_disable_cfm_handler
//      mm_bss_param_setting_handler
//      mm_bcn_change_cfm_handler
//      apm_start_req_handler
//      me_set_active_cfm_handler
//      dbg_test_print
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
assert_err_exit:
assert_err_entry:
l23054FF4:


void assert_warn()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mpdu_upload_and_indicate.constprop.11
//      rxu_mgt_frame_check
//      sm_auth_handler
//      apm_tx_int_ps_get_postpone
//      chan_cde_evt
//      bam_send_air_action_frame
//      me_legacy_rate_bitfield_build
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
assert_warn_entry:
l23054FF6:
	return
assert_warn_exit:


void coex_wifi_rf_forece_enable(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_coex_rf_force_off
//      cmd_wifi_coex_rf_force_on
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s0 s8 t3
// Preserved: sp
coex_wifi_rf_forece_enable_entry:
l23054FF8:
	branch a0 == 0<32> l23054FFE
l23054FFC:
	a0 = 1<32>
l23054FFE:
l23054FFE_thunk_rfc_coex_force_to:
	rfc_coex_force_to(a0, 0<32>, a5)
	return
coex_wifi_rf_forece_enable_exit:


void coex_wifi_pti_forece_enable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_coex_pti_force_off
//      cmd_wifi_coex_pti_force_on
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
coex_wifi_pti_forece_enable_entry:
l23055002:
	word32 a4_12
	word32 a4_5 = Mem0[0x44B00400<32>:int32]
	branch a0 == 0<32> l23055042
l23055042:
	a4_12 = a4_5 & 0xFFFFFFEF<32>
l2305500C:
	Mem10[0x44B00400<32>:word32] = a4_5 | 0xF0000000<32>
	a4_12 = Mem10[0x44B00400<32>:int32] | 16<i32>
l2305501E:
	word32 a4_23
	Mem15[0x44B00400<32>:word32] = a4_12
	branch Mem15[0x44B00400<32>:int32] << 4<u32> >= 0<32> l23055046
l23055046:
	a4_23 = Mem15[0x44B00400<32>:int32] & 0xFBFFFFFF<32> | 0x4000000<32>
l23055036:
	a4_23 = Mem15[0x44B00400<32>:int32] & 0xFBFFFFFF<32>
l2305503C:
	Mem28[0x44B00400<32>:word32] = a4_23
	return
coex_wifi_pti_forece_enable_exit:


word32 coex_wifi_pta_forece_enable(word32 a0, word32 a3, word32 mstatus, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_coex_pta_force_off
//      cmd_wifi_coex_pta_force_on
//      wifi_main
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 mstatus ra s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 t1 t3 tp
// Preserved: sp
coex_wifi_pta_forece_enable_entry:
l23055054:
	word32 a5_7 = Mem5[0x4200DC94<32>:int32]
	branch a5_7 == a0 l2305509E
l2305506E:
	word32 s1_110 = 0x4200DC94<32>
	s2 = a0
	word32 s0_105 = 0x4200E390<32>
	branch a5_7 != 0<32> l230550AE
l230550AE:
	branch a5_7 != 1<32> l23055094
l230550B4:
	word32 a5_25
	word32 a0_24 = xTaskGetTickCount(out a5_25)
	s0_105 = Mem17[a3:word32]
	Mem32[a5_25 - a3 + a0_24:word32] = Mem17[a5_25:word32]
	__csrrc(mstatus, 8<32>)
	word32 a0_34 = bl_nap_calculate()
	__csrrs(mstatus, 8<32>)
	s3 = 1000<i32>
	branch a0_34 <=u 1000<i32> l23055094
l230550E0:
	word32 sp_45
	word32 a5_47
	word32 s3_51
	word32 s4_52
	word32 a4_54
	word32 a3_55
	word32 a2_59
	word32 mstatus_60
	word32 tp_132
	call 0x4200C4E8<p32> (retsize: 0;)
		uses: a0:a0_34,a1:a1_97,a3:a3,a4:a4_90,a7:a7_98,mstatus:mstatus,ra:0x4200C0E0<p32>,s0:s0_29,s1:0x4200DC94<32>,s2:a0,s3:1000<i32>,s4:a0_34,t1:t1_99,tp:tp_132
		defs: a2:a2_59,a3:a3_55,a4:a4_54,a5:a5_47,mstatus:mstatus_60,s3:s3_51,s4:s4_52,sp:sp_45,tp:tp_132
	word32 a0_65
	word32 a3_68
	word32 s1_73
	word32 s2_74
	word32 s3_75
	word32 s4_76
	word32 a4_90
	word32 a1_97
	word32 a7_98
	word32 t1_99
	call 0x4200C4F2<p32> (retsize: 0;)
		uses: a0:a0_65,a1:a1_97,a3:a3_68,a4:a4_90,a7:a7_98,mstatus:mstatus_60,ra:0x4200C0F0<p32>,s0:vTaskDelay(s4_52 >>u s3_51, a2_59, a3_55, a4_54, a5_47, mstatus_60, Mem32[sp_45 + 36<i32>:word32], Mem32[sp_45 + 40<i32>:word32], Mem32[sp_45 + 312<i32>:word32], Mem32[sp_45 + 376<i32>:word32], out s1_73, out a0_65, out a1_184, out a2_185, out a3_68, out a4_186, out a5_187, out s2_74, out s3_75, out s4_76),s1:s1_73,s2:s2_74,s3:s3_75,s4:s4_76,t1:t1_99,tp:tp_132
		defs: a1:a1_97,a3:a3_91,a4:a4_90,a7:a7_98,mstatus:mstatus_96,ra:ra_84,s0:s0_85,s1:s1_82,s2:s2_86,s3:s3_87,t1:t1_99
l2305507E:
	word32 a5_102
	word32 a0_101 = xTaskGetTickCount(out a5_102)
	s0_105 = Mem17[a3:word32]
	Mem108[a5_102 - a3 + a0_101:word32] = Mem17[a5_102:word32]
l23055094:
	Mem111[s1_110:word32] = s2
	word32 a5_183
	a0 = xTaskGetTickCount(out a5_183)
	Mem115[a0:word32] = s0_105
l2305509E:
	s0Out = s1
	a0Out = a0
	a2Out = dwArg48
	a3Out = a3
	s2Out = s2
	s3Out = s3
	mstatusOut = mstatus
	return ra
coex_wifi_pta_forece_enable_exit:


void wifi_main(word32 ra, word32 s1, word32 s2, word32 s3, word32 s6, word32 s7, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg7C, word32 dwArg88, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
wifi_main_exit:
wifi_main_entry:
l230550FA:
	word32 s0_41
	word32 s2_356
	word32 s1_354
	word32 a4_355
	word32 ra_40 = rfc_init(0x44B00000<32>, s1, 0x2625A00<32>, s2, s3, s6, s7, fflags, frm, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg38, dwArg44, s3, s1, out s0_41, out s1_354, out a4_355, out s2_356)
	Mem65[s0_41 + 1024<i32>:word32] = Mem22[s0_41 + 1024<i32>:int32] | 1<i32>
	mpif_clk_init()
	sysctrl_init()
	intc_init()
	word32 s0_92
	word32 s2_129
	word32 s3_141
	word32 a3_148
	word32 a2_150
	word32 a0_153
	word32 ra_211 = bl_init(ipc_emb_init(ra_40), mstatus, s2, dwLoc10, dwLoc0C, dwLoc08, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg5C, ra, dwArg7C, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_92, out a0_153, out a2_150, out a3_148, out s2_129, out s3_141)
	Mem111[s0_92 + 1028<i32>:word32] = 0x24F037<32>
	Mem113[s0_92 + 1024<i32>:word32] = 1<32>
	Mem114[s0_92 + 1024<i32>:word32] = 0<32>
	Mem116[s0_92 + 1024<i32>:word32] = 105<i32>
	Mem121[s0_92 + 1024<i32>:word32] = Mem116[s0_92 + 1024<i32>:int32] & -33<i32>
	Mem124[0x50100023<32>:word32] = 0x44920000<32>
	word32 s0_125 = 0x44900000<32>
	word32 s5_126 = 0x40007000<32>
	word32 s6_128 = 0x5C2000<32>
l2305518C:
	word32 a5_135
	word32 a5_131 = Mem130[s2_129 + 288<i32>:int32]
	word32 a5_134 = Mem130[s0_125 + 132<i32>:int32]
	branch a5_131 << 0xC<u32> >= 0<32> l23055222
l23055222:
	a5_135 = a5_134 & 0xFFFFFFFE<32>
l2305519C:
	a5_135 = a5_134 | 1<i32>
l230551A0:
	Mem139[s0_125 + 132<i32>:word32] = a5_135
	word32 a5_143 = Mem139[s3_141 + -292<i32>:word32]
	branch a5_143 != 0<32> l230551AE
l230551AC:
	a0_153 = ipc_emb_wait(a2_150, a3_148, a5_131 << 0xC<u32>, a5_143, mstatus, s2, dwArgF8, out a5_143)
l230551AE:
	Mem169[a5_143 + 1<i32>:word32] = Mem139[a5_143:word32]
	branch (a5_143 & 0xF<32>) != 0<32> l23055210
l230551BE:
	word32 a5_174 = Mem169[s5_126 + 24<i32>:int32]
	word32 a4_176 = a5_174 >>u 24<i32> & 7<i32>
	branch a4_176 == 0<32> l230551F2
l230551CA:
	branch a4_176 == 3<32> l230551DA
l230551D0:
	Mem181[0x40017<32>:word32] = Mem169[0x17<32>:word32]
l230551DA:
	branch a4_176 == 0<32> l230551F2
l230551DC:
	branch a4_176 == 3<32> l230551F2
l230551E2:
	Mem187[64<i32>:word32] = Mem184[0x43<32>:word32]
	Mem190[68<i32>:word32] = Mem187[68<i32>:word32]
l230551F2:
	word32 a5_193 = a5_174 >>u 24<i32> & 4<32>
	branch a5_193 == 0<32> l23055210
l230551F6:
	Mem203[(a5_193 | s6_128) + 20<i32>:word32] = Mem194[a5_193 + 20<i32>:word32]
	Mem207[0x4001090C<32>:word32] = Mem203[0x4000F90C<32>:int32] & 0xFFFFFFFE<32> | 4<i32>
l23055210:
	word32 a0_255
	s5_126 = ke_evt_schedule(ra_211, a0_153, dwArg88, out s6_128)
	word32 a3_249
	branch bl_sleep(dwArg08, out a3_249) == 0<32> l23055226
l23055226:
	a0_255 = 1<32>
l2305521A:
	a0_255 = 0<32>
l2305521C:
	ra_211 = coex_wifi_pta_forece_enable(a0_255, a3_249, mstatus, out s0_125, out a0_153, out a2_150, out a3_148, out s2_129, out s3_141, out mstatus)


void ipc_emb_notify(word32 ra, word32 a0, word32 a2, word32 mstatus, word32 dwArg18, word32 dwArg38, word32 dwArgC4, word32 dwArgE0, word32 dwArgE4, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mac_irq
//      bl_irq_handler
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +00C4:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
ipc_emb_notify_entry:
l2305522A:
	word32 a4_5 = Mem0[0x4200E394<32>:int32]
	branch a4_5 != 0<32> l23055256
l23055256:
	branch Mem10[0x4200E244<32>:int32] == 0<32> l23055278
l23055278:
	word32 s0_104
	word32 s1_105
	word32 a0_106
	word32 a1_107
	word32 a2_108
	word32 a3_109
	word32 a4_110
	word32 a5_111
	word32 s2_112
	word32 s3_113
	word32 s4_114
	word32 mstatus_115
	xTaskGenericNotify(ra, a0, 0<32>, 2<32>, 0<32>, a4_5, mstatus, dwLoc0C, dwArg18, dwArg38, dwArgC4, dwArgE0, dwArgE4, dwArg0108, out s0_104, out s1_105, out a0_106, out a1_107, out a2_108, out a3_109, out a4_110, out a5_111, out s2_112, out s3_113, out s4_114, out mstatus_115)
l23055262:
	word32 a5_48
	word32 a3_46 = vTaskNotifyGiveFromISR(a0, fp + 0xFFFFFFEC<32>, a2, a4_5, mstatus, dwArg18, out a5_48)
	branch a5_48 == 0<32> l23055270
l2305526C:
	word32 a0_101
	word32 a4_102
	word32 a5_103
	vTaskSwitchContext(a3_46, mstatus, out a0_101, out a4_102, out a5_103)
l23055270:
	return
ipc_emb_notify_exit:
l2305523E:
	assert_err()


word32 ipc_emb_wait(word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg0118, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 t3 tp
// Preserved: sp
ipc_emb_wait_entry:
l23055284:
	word32 a2_34
	word32 a3_35
	word32 a4_36
	word32 s2_37
	word32 s3_38
	ulTaskNotifyTake(1<32>, 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwArg08, dwArg0118, out a2_34, out a3_35, out a4_36, out s2_37, out s3_38)
	word32 a5_24 = Mem7[0x4201E20C<32>:int32]
	Mem27[0x4201E20C<32>:word32] = a5_24 + 1<32>
	a5Out = a5_24 + 1<32>
	return 1<32>
ipc_emb_wait_exit:


word32 ipc_emb_init(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse:  ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
ipc_emb_init_entry:
l230552A4:
	word32 a5_110
	Mem12[0x4200E394<32>:word32] = xTaskGetCurrentTaskHandle(out a5_110)
	word32 t1_111
	word32 a0_112
	word32 a1_113
	word32 a2_114
	word32 a3_115
	word32 a4_116
	word32 a5_117
	word32 ra_22 = memset(ra, 0x4201E210<32>, 0<32>, 32<i32>, out t1_111, out a0_112, out a1_113, out a2_114, out a3_115, out a4_116, out a5_117)
	Mem28[0x42040220<32>:word32] = 0x4201E210<32>
	branch Mem28[0x44800140<32>:int32] == 0x49504332<32> l23055302
l23055302:
	Mem39[0x44800114<32>:word32] = 0<32>
	Mem40[0x44800118<32>:word32] = 0<32>
	Mem45[0x44800114<32>:word32] = Mem40[0x44800114<32>:int32] & 0xFFFFFFFC<32>
	Mem51[0x44800114<32>:word32] = Mem45[0x44800114<32>:int32] & 0xFFFFFFF3<32> | 4<i32>
	Mem55[0x44800114<32>:word32] = Mem51[0x44800114<32>:int32] & -769<i32> | 512<i32>
	Mem61[0x44800114<32>:word32] = Mem55[0x44800114<32>:int32] & 0xFF0003FF<32> | 0xFFF800<32>
	Mem68[0x44800114<32>:word32] = Mem61[0x44800114<32>:int32] & 0xFCFFFFFF<32> | 0x2000000<32>
	Mem74[0x44800114<32>:word32] = Mem68[0x44800114<32>:int32] & 0xFFFCFFFF<32> | 0x30000<32>
	Mem81[0x44800114<32>:word32] = Mem74[0x44800114<32>:int32] & 0xFFF3FFFF<32> | 0xC0000<32>
	Mem88[0x44800114<32>:word32] = Mem81[0x44800114<32>:int32] & 0xFFCFFFFF<32> | 0x300000<32>
	Mem95[0x44800114<32>:word32] = Mem88[0x44800114<32>:int32] & 0xFF3FFFFF<32> | 0xC00000<32>
	Mem102[0x44800114<32>:word32] = Mem95[0x44800114<32>:int32] & 0xFCFFFFFF<32> | 0x3000000<32>
	Mem103[0x4480010C<32>:word32] = 0x1FFFF03<32>
	return ra_22
ipc_emb_init_exit:
l230552EA:
	assert_err()


void ipc_emb_tx_irq(word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 s1 tp
// Preserved: s0 sp
ipc_emb_tx_irq_entry:
l230553DE:
	word32 s0_11 = Mem9[0x4480011C<32>:int32]
	branch (s0_11 & 0x1FFFF00<32>) == 0<32> l23055408
l230553F8:
	word32 a5_41
	ke_evt_set((s0_11 & 0x1FFFF00<32>) >>u 1<u32>, a4, mstatus, out a5_41)
	Mem20[0x44800110<32>:word32] = s0_11 & 0x1FFFF00<32>
	Mem21[0x44800108<32>:word32] = s0_11 & 0x1FFFF00<32>
l23055408:
	return
ipc_emb_tx_irq_exit:


void ipc_emb_tx_evt(word32 ra, word32 a0, word32 a4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg68, word32 dwArg9C, word32 dwArgAC, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0068:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ipc_emb_tx_evt_entry:
l23055412:
	word32 s2_11 = Mem10[(a0 << 2<i32>) + 0x2307CBBC<32>:int32]
	ke_evt_clear(s2_11, a4, mstatus)
	word32 s5_138 = 0xFFFFFFFF<32>
	word32 s1_127 = s2_11 & 0xFFF800<32>
	word32 s6_139 = 0x4201F000<32>
	word32 s3_128 = 0x440800<32>
	word32 s7_140 = 0x44800000<32>
l2305547A:
	word32 s0_55 = Mem54[816<i32>:word32]
	branch s5_138 == 816<i32> l230554A6
l230554A6:
	branch s1_127 != 0<32> l230554D2
l230554A8:
	branch (Mem54[s6_139 + -292<i32>:word32] & s3_128) == 0<32> l230554D2
l230554D2:
	Mem68[s7_140 + 264<i32>:word32] = 256<i32>
	word32 a4_78
	word32 t1_337
	word32 a0_338
	word32 a1_339
	word32 a2_340
	word32 a3_341
	word32 a5_342
	word32 ra_80 = memset(ra, s0_55 + 84<i32>, 0<32>, 716<i32>, out t1_337, out a0_338, out a1_339, out a2_340, out a3_341, out a4_78, out a5_342)
	Mem84[s0_55 + 196<i32>:word32] = s0_55 + 268<i32>
	Mem86[s0_55 + 192<i32>:word32] = s0_55 + 196<i32>
l230554FE:
	word32 a5_90 = Mem89[a4_78:word32]
	Mem92[a4_78 + 80<i32>:word32] = a5_90 + 4<32>
	branch s0_55 + 84<i32> != a5_90 + 4<32> l230554FE
l23055508:
	word32 a5_95 = Mem92[s0_55 + 192<i32>:int32]
	Mem96[s0_55 + 184<i32>:word32] = 0<32>
	Mem100[Mem96[a5_95:word32] + 16<i32>:word32] = 0<32>
	Mem101[s0_55 + 240<i32>:word32] = 0<32>
	Mem102[s0_55 + 244<i32>:word32] = 0<32>
	Mem103[s0_55 + 248<i32>:word32] = 0<32>
	Mem104[s0_55 + 168<i32>:word32] = 0<32>
	word32 s0_126
	word32 s8_141
	ra = txu_cntrl_push(ra_80, s0_55, s0_55 + 84<i32>, 0<32>, s6_139, fflags, frm, mstatus, dwLoc30, dwLoc10, dwLoc0C, dwLoc08, dwArg18, dwArg38, dwArg3C, dwArg68, dwArg9C, dwArgAC, dwArgF8, dwArg0138, out s0_126, out s1_127, out a4, out s2_11, out s3_128, out s5_138, out s6_139, out s7_140, out s8_141)
	Mem149[1<32>:word32] = s0_126
	Mem153[s8_141 + 24<i32>:word32] = Mem149[s8_141 + 24<i32>:int32] + 1<32>
l230554B4:
	0<32> = dwArg0128
l230554CE_thunk_ke_evt_set:
	word32 a5_343
	ke_evt_set(s2_11, a4, mstatus, out a5_343)
	return
l23055480:
	Mem175[0x4480010C<32>:word32] = 256<i32>
	0<32> = dwArg0128
	return
ipc_emb_tx_evt_exit:


void ipc_emb_cfmback_irq(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
ipc_emb_cfmback_irq_entry:
l2305554A:
	word32 s0_9 = Mem7[0x4480011C<32>:int32]
	branch (s0_9 & 32<i32>) == 0<32> l23055572
l2305555E:
	Mem12[0x44800110<32>:word32] = 32<i32>
	Mem13[0x44800108<32>:word32] = 32<i32>
	word32 a5_51
	ke_evt_set(0x40000<32>, 32<i32>, mstatus, out a5_51)
l23055572:
	branch (s0_9 & 0x10<32>) == 0<32> l23055592
l23055592:
	return
l23055576:
	Mem27[0x44800110<32>:word32] = 0x10<32>
	Mem28[0x44800108<32>:word32] = 0x10<32>
l2305558E_thunk_ke_evt_set:
	word32 a5_52
	ke_evt_set(0x80000<32>, 0x10<32>, mstatus, out a5_52)
	return
ipc_emb_cfmback_irq_exit:


word32 ipc_emb_txcfm_ind(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cfm_evt
//      txl_cfm_flush
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
ipc_emb_txcfm_ind_entry:
l2305559A:
	Mem6[0x44800100<32>:word32] = a0 << 7<i32>
	return 0x44800000<32>
ipc_emb_txcfm_ind_exit:


void ipc_emb_msg_irq(word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
ipc_emb_msg_irq_entry:
l230555A6:
	branch (Mem7[0x4480011C<32>:int32] & 2<32>) == 0<32> l230555C6
l230555B8:
	word32 a5_32
	ke_evt_set(0x2000000<32>, a4, mstatus, out a5_32)
	Mem17[0x44800110<32>:word32] = 2<32>
l230555C6:
	return
ipc_emb_msg_irq_exit:


void ipc_emb_msg_evt(word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t1 t3 tp
// Preserved: sp
ipc_emb_msg_evt_entry:
l230555CE:
	word32 a5_116 = Mem21[0x44800104<32>:int32]
	word32 s1_108 = 0x42040000<32>
l2305560A:
	branch (a5_116 & 2<32>) != 0<32> l23055636
l23055636:
	Mem36[0x44800108<32>:word32] = 2<32>
	word32 a0_43
	word32 a2_44
	word32 s2_47
	word32 a5_181
	word32 s1_46 = ke_malloc(CONVERT(Mem36[s1_108 + 10<i32>:uint16], uint16, word32) + 0xC<32>, a3, 2<32>, mstatus, dwArg08, out a0_43, out a2_44, out a5_181, out s2_47)
	branch a0_43 != 0<32> l2305565E
l2305565E:
	Mem55[a0_43:word32] = 0<32>
	Mem57[a0_43 + 4<i32>:word16] = SLICE(CONVERT(Mem55[s1_46 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem59[a0_43 + 6<i32>:word16] = SLICE(CONVERT(Mem57[s1_46 + 6<i32>:uint16], uint16, word32), word16, 0)
	Mem61[a0_43 + 8<i32>:word16] = 0xD<16>
	Mem63[a0_43 + 10<i32>:word16] = SLICE(CONVERT(Mem61[s1_46 + 10<i32>:uint16], uint16, word32), word16, 0)
	word32 a5_64 = 0xC<32>
l23055682:
	word32 a3_67 = CONVERT(Mem66[a0_43 + 10<i32>:uint16], uint16, word32)
	branch a5_64 + -12<i32> < a3_67 l230556CA
l230556CA:
	Mem73[a3_67:word32] = a0_43 + a5_64
	a5_64 = a5_64 + 4<32>
l2305568E:
	word32 a5_75 = CONVERT(Mem66[s2_47 + 21<i32>:byte], byte, word32)
	Mem77[s2_47 + 21<i32>:byte] = SLICE(a5_75 + 1<i32>, byte, 0)
	Mem79[s1_46 + 8<i32>:word16] = SLICE(a5_75, word16, 0)
	word32 a5_80 = CONVERT(Mem79[a0_43 + 6<i32>:uint16], uint16, word32)
	branch a5_80 <=u 0xE<32> l230556DA
l230556DA:
	branch a5_80 >u 0xC<32> l230556B8
l230556B8:
	assert_err()
l230556E0:
	Mem96[0x44800100<32>:word32] = 4<32>
	word32 s8_189
	word32 s3_187
	word32 s4_188
	word32 a5_185
	word32 s2_186
	word32 a1_183
	word32 a2_184
	word32 a0_182
	ke_msg_send(a0_43 + 12<i32>, a2_44, mstatus, out s1_108, out a0_182, out a1_183, out a2_184, out a3, out a4, out a5_185, out s2_186, out s3_187, out s4_188, out s8_189)
	a5_116 = Mem96[0x44800104<32>:int32]
l230556A8:
	assert_err()
l2305564E:
	assert_err()
l2305560E:
	ke_evt_clear(0x2000000<32>, a4, mstatus)
	Mem124[0x4480010C<32>:word32] = 2<32>
	0<32> = dwArg0128
	return
ipc_emb_msg_evt_exit:


void ipc_emb_msg_dma_int_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
ipc_emb_msg_dma_int_handler_entry:
l230556F8:
	return
ipc_emb_msg_dma_int_handler_exit:


void ipc_emb_dbg_dma_int_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
ipc_emb_dbg_dma_int_handler_entry:
l230556FA:
	Mem5[0xA0<32>:word32] = 0x44A00000<32>
	Mem8[0x44800100<32>:word32] = 1<32>
	return
ipc_emb_dbg_dma_int_handler_exit:


void ipc_emb_dump()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl60x_fw_dump_statistic
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
ipc_emb_dump_entry:
l23055710:
	return
ipc_emb_dump_exit:


word32 mdm_txcbwmax_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
//      phy_init
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
mdm_txcbwmax_setf_entry:
l23055712:
	branch (a0 << 0x18<u32> & 0xFC000000<32>) == 0<32> l2305573E
l2305573E:
	Mem24[0x44C01824<32>:word32] = Mem10[0x44C00824<32>:int32] & 0xFCFFFFFF<32> | a0 << 0x18<u32>
	return 0xFCFFFFFF<32>
mdm_txcbwmax_setf_exit:
l23055724:
	assert_err()


word32 phy_config_rxgain(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      agc_config
//      phy_tcal_callback
// MayUse:  a0:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
phy_config_rxgain_entry:
l2305575C:
	word32 a4_4 = 0x4200DC9C<32>
	branch CONVERT(Mem0[0x4200DC9C<32>:int8], int8, int32) == a0 l23055878
l2305576C:
	word32 a0_9 = CONVERT(SLICE(a0, byte, 0), byte, int32)
	Mem10[0x4200DC9C<32>:byte] = SLICE(a0_9, byte, 0)
	Mem17[0x44C0C080<32>:word32] = a0_9 + 3<32> & 255<i32> | Mem10[0x44C0C080<32>:int32] & -256<i32>
	Mem29[0x44C0C080<32>:word32] = CONVERT(Mem17[0x4200DC9C<32>:int8], int8, int32) + 0xB<32> << 8<i32> & 0xFFFFFFF<32> | Mem17[0x44C0C080<32>:int32] & 0xF00000FF<32>
	Mem41[0x44C0C080<32>:word32] = CONVERT(Mem29[0x4200DC9C<32>:int8], int8, int32) + 0x12<32> << 16<i32> & 0xFF0000<32> | Mem29[0x44C0C080<32>:int32] & 0xFF00FFFF<32>
	Mem49[0x44C0C080<32>:word32] = CONVERT(Mem41[0x4200DC9C<32>:int8], int8, int32) + 0x19<32> << 24<i32> | Mem41[0x44C0C080<32>:int32] & 0xFFFFFF<32>
	Mem56[0x44C0C084<32>:word32] = CONVERT(Mem49[0x4200DC9C<32>:int8], int8, int32) + 32<i32> & 255<i32> | Mem49[0x44C0C084<32>:int32] & -256<i32>
	Mem64[0x44C0C084<32>:word32] = CONVERT(Mem56[0x4200DC9C<32>:int8], int8, int32) + 39<i32> << 8<i32> & 0xFFFFFFF<32> | Mem56[0x44C0C084<32>:int32] & 0xF00000FF<32>
	Mem72[0x44C0C084<32>:word32] = CONVERT(Mem64[0x4200DC9C<32>:int8], int8, int32) + 45<i32> << 16<i32> & 0xFF0000<32> | Mem64[0x44C0C084<32>:int32] & 0xFF00FFFF<32>
	Mem79[0x44C0C084<32>:word32] = CONVERT(Mem72[0x4200DC9C<32>:int8], int8, int32) + 53<i32> << 24<i32> | Mem72[0x44C0C084<32>:int32] & 0xFFFFFF<32>
	a4_4 = CONVERT(Mem79[0x4200DC9C<32>:int8], int8, int32) + 59<i32> & 255<i32> | Mem79[0x44C0C088<32>:int32] & -256<i32>
	Mem86[0x44C0C088<32>:word32] = a4_4
l23055878:
	return a4_4
phy_config_rxgain_exit:


word32 agc_config(ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse: 
// LiveOut: a2 s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
agc_config_entry:
l2305587A:
	Mem21[0x44C0B390<32>:word32] = Mem16[0x44C0B390<32>:int32] & 0xEFFFFFFF<32>
	Mem26[0x44C0B390<32>:word32] = Mem21[0x44C0B390<32>:int32] & -1025<i32>
	Mem31[0x44C0B3A4<32>:word32] = Mem26[0x44C0B3A4<32>:int32] & -256<i32>
	Mem36[0x44C0B3A4<32>:word32] = Mem31[0x44C0B3A4<32>:int32] & 0xF00000FF<32>
	Mem42[0x44C0B394<32>:word32] = Mem36[0x44C0B394<32>:int32] & 0xFF00FFFF<32> | 0xF80000<32>
	Mem48[0x44C0B398<32>:word32] = Mem42[0x44C0B398<32>:int32] & 0xF00000FF<32> | 0x9FFFE00<32>
	Mem53[0x44C0B3C4<32>:word32] = Mem48[0x44C0B3C4<32>:int32] & -256<i32> | 206<i32>
	Mem60[0x44C0B364<32>:word32] = Mem53[0x44C0B364<32>:int32] & 0xE0FFFFFF<32> | 0x8000000<32>
	Mem67[0x44C0B364<32>:word32] = Mem60[0x44C0B364<32>:int32] & 0xFFC0FFFF<32> | 0x3C0000<32>
	Mem75[0x44C0B364<32>:word32] = Mem67[0x44C0B364<32>:int32] & 0xFC0000FF<32> | 0x3FFF800<32>
	Mem81[0x44C0B364<32>:word32] = Mem75[0x44C0B364<32>:int32] & -64<i32> | 57<i32>
	Mem86[0x44C0B368<32>:word32] = Mem81[0x44C0B368<32>:int32] & 0xFFC00FFF<32> | 0x70000<32>
	Mem90[0x44C0B368<32>:word32] = Mem86[0x44C0B368<32>:int32] & -1024<i32> | 112<i32>
	Mem94[0x44C0B36C<32>:word32] = Mem90[0x44C0B36C<32>:int32] & -256<i32> | 18<i32>
	Mem98[0x44C0B36C<32>:word32] = Mem94[0x44C0B36C<32>:int32] & -1793<i32> | 1280<i32>
	Mem103[0x44C0B36C<32>:word32] = Mem98[0x44C0B36C<32>:int32] & 0xFF00FFFF<32> | 0x280000<32>
	Mem110[0x44C0B36C<32>:word32] = Mem103[0x44C0B36C<32>:int32] & 0xF8FFFFFF<32> | 0x7000000<32>
	Mem117[0x44C0B370<32>:word32] = Mem110[0x44C0B370<32>:int32] & 0xFF80FFFF<32> | 0x580000<32>
	Mem124[0x44C0B3C0<32>:word32] = CONVERT(Mem117[0x44C0B3C0<32>:word24], word24, word32) | 0x18000000<32>
	Mem130[0x44C0B380<32>:word32] = Mem124[0x44C0B380<32>:int32] & 0xFFF03FFF<32> | 0xF8000<32>
	Mem136[0x44C0B380<32>:word32] = Mem130[0x44C0B380<32>:int32] & 0xFC0FFFFF<32> | 0x3700000<32>
	Mem140[0x44C0B380<32>:word32] = Mem136[0x44C0B380<32>:int32] & 0x3FFFFFF<32> | 0x4000000<32>
	Mem145[0x44C0B380<32>:word32] = Mem140[0x44C0B380<32>:int32] & 0xFDFFFFFF<32>
	Mem151[0x44C0B380<32>:word32] = Mem145[0x44C0B380<32>:int32] & 0xFE0003FF<32> | 1024<i32>
	Mem155[0x44C0B384<32>:word32] = Mem151[0x44C0B384<32>:int32] & 0x3FFFFFF<32> | 0xE4000000<32>
	Mem160[0x44C0B384<32>:word32] = Mem155[0x44C0B384<32>:int32] & 0xFC0FFFFF<32> | 0x3700000<32>
	Mem165[0x44C0B384<32>:word32] = Mem160[0x44C0B384<32>:int32] & 0xFFF03FFF<32> | 0x50000<32>
	Mem168[0x44C0B384<32>:word32] = Mem165[0x44C0B384<32>:int32] & 0xFDFFFFFF<32>
	Mem174[0x44C0B384<32>:word32] = Mem168[0x44C0B384<32>:int32] & 0xFE0003FF<32> | 0xFFF800<32>
	Mem179[0x44C0B388<32>:word32] = Mem174[0x44C0B388<32>:int32] & 0x3FFFFFF<32> | 0x3C000000<32>
	Mem184[0x44C0B388<32>:word32] = Mem179[0x44C0B388<32>:int32] & 0xFC0FFFFF<32> | 0x1700000<32>
	Mem189[0x44C0B388<32>:word32] = Mem184[0x44C0B388<32>:int32] & 0xFFF03FFF<32> | 0xA8000<32>
	Mem192[0x44C0B388<32>:word32] = Mem189[0x44C0B388<32>:int32] & 0xFDFFFFFF<32>
	Mem197[0x44C0B388<32>:word32] = Mem192[0x44C0B388<32>:int32] & 0xFE0003FF<32> | 0x1000400<32>
	Mem201[0x44C0B38C<32>:word32] = Mem197[0x44C0B38C<32>:int32] & 0x3FFFFFF<32> | 0x64000000<32>
	Mem205[0x44C0B38C<32>:word32] = Mem201[0x44C0B38C<32>:int32] & 0xFC0FFFFF<32>
	Mem209[0x44C0B38C<32>:word32] = Mem205[0x44C0B38C<32>:int32] & 0xFFF03FFF<32> | 0x38000<32>
	Mem213[0x44C0B38C<32>:word32] = Mem209[0x44C0B38C<32>:int32] & 0xFE0003FF<32> | 0xFFF800<32>
	Mem218[0x44C0D830<32>:word32] = Mem213[0x44C0C830<32>:int32] & 0x3FFFFFF<32> | 0xFC000000<32>
	Mem224[0x44C0D830<32>:word32] = Mem218[0x44C0C830<32>:int32] & 0xFC0FFFFF<32> | 0x100000<32>
	Mem229[0x44C0D830<32>:word32] = Mem224[0x44C0C830<32>:int32] & 0xFFF03FFF<32> | 0xD8000<32>
	word32 a4_230 = Mem229[0x44C0C830<32>:int32]
	Mem235[0x44C0D830<32>:word32] = a4_230 & 0xFE0003FF<32> | 0x1000400<32>
	Mem238[0x44C0D814<32>:word32] = Mem235[0x44C0C814<32>:int32] & 0xFFFFFFFC<32>
	Mem242[0x44C0D814<32>:word32] = Mem238[0x44C0C814<32>:int32] & -61<i32> | 8<i32>
	Mem246[0x44C0D814<32>:word32] = Mem242[0x44C0C814<32>:int32] & -61<i32> | 8<i32>
	word32 a4_250 = a4_230 & 0xFE0FFFFF<32> | 0xC00000<32>
	Mem251[a4_250 + 64<i32>:word32] = Mem246[a4_230 + 64<i32>:word32]
	word32 a4_257 = a4_250 & 0xFFF07FFF<32> | 0x18000000<32>
	Mem258[a4_257 + 64<i32>:word32] = Mem251[a4_250 + 64<i32>:word32]
	word32 a4_261 = a4_257 & 0xF00000FF<32> | 0xFFF800<32>
	Mem262[a4_261 + 68<i32>:word32] = Mem258[a4_257 + 68<i32>:word32]
	Mem265[(a4_261 & -256<i32>) + 68<i32>:word32] = Mem262[a4_261 + 68<i32>:word32]
	phy_config_rxgain(0<32>)
	Mem281[0x44C0B3A0<32>:word32] = Mem265[0x44C0B3A0<32>:int32] & -256<i32> | 158<i32>
	Mem285[0x44C0B3C0<32>:word32] = Mem281[0x44C0B3C0<32>:int32] & -256<i32> | 164<i32>
	word32 s2_288 = Mem285[0x44C0B3C0<32>:int32] & 0xF00000FF<32> | 0xA000300<32>
	Mem289[0x44C0B3C0<32>:word32] = s2_288
	Mem293[0x44C0D82C<32>:word32] = Mem289[0x44C0C82C<32>:int32] & -256<i32> | 181<i32>
	Mem298[0x44C0D82C<32>:word32] = Mem293[0x44C0C82C<32>:int32] | 256<i32>
	Mem302[0x44C0D82C<32>:word32] = Mem298[0x44C0C82C<32>:int32] & 0xFF0007FF<32> | 0xFFF800<32>
	Mem307[0x44C0D838<32>:word32] = Mem302[0x44C0C838<32>:int32] & 0x7FFFFFFF<32> | 0x80000000<32>
	Mem311[0x44C0D838<32>:word32] = Mem307[0x44C0C838<32>:int32] & 0xFFF80000<32> | 256<i32>
	Mem316[0x44C0D83C<32>:word32] = Mem311[0x44C0C83C<32>:int32] & 0x7FFFFFFF<32> | 0x80000000<32>
	Mem320[0x44C0D83C<32>:word32] = Mem316[0x44C0C83C<32>:int32] & 0xFFF00000<32> | 380<i32>
	Mem325[0x44C0D840<32>:word32] = Mem320[0x44C0C840<32>:int32] & 0x7FFFFFFF<32> | 0x80000000<32>
	Mem329[0x44C0D840<32>:word32] = Mem325[0x44C0C840<32>:int32] & 0xFFC00000<32> | 256<i32>
	Mem336[0x44C0D82C<32>:word32] = Mem329[0x44C0C82C<32>:int32] & 0xFF007FFF<32> | 0x200000<32>
	a2Out = dwArg48
	s2Out = s2_288
	s3Out = 0xFFF800<32>
	return s1
agc_config_exit:


void mdm_reset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
//      phy_init
//      phy_rc_isr
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
mdm_reset_entry:
l23055CBE:
	Mem6[0x44C01888<32>:word32] = 0x1000111<32>
	Mem7[0x44C01888<32>:word32] = 0<32>
	return
mdm_reset_exit:


void phy_powroffset_set(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
phy_powroffset_set_entry:
l23055CD2:
	word32 a5_14 = 0<32>
l23055CDE:
	Mem15[a5_14 + 0x42016484<32>:byte] = SLICE(CONVERT(Mem10[a0 + a5_14:int8], int8, int32), byte, 0)
	a5_14 = a5_14 + 1<32>
	branch a5_14 != 0xE<32> l23055CDE
l23055CF4:
	return
phy_powroffset_set_exit:


word32 phy_hw_set_channel(word32 ra, word32 a0, word32 a2, word32 a3, word32 s3, word32 fflags, word32 frm, word32 dwArg24, word32 dwArg44, word32 dwArg84, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_set_channel
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s3:[0..31] Stack +0024:[0..31] Stack +0044:[0..31] Stack +0084:[0..31] Stack +0178:[0..31]
// LiveOut: fflags frm ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
phy_hw_set_channel_entry:
l23055CF6:
	branch a3 == 0<32> l23055D28
l23055D28:
	branch a0 == 0<32> l23055D44
l23055D44:
	Mem40[0x44C0B390<32>:word32] = Mem17[0x44C0B390<32>:int32] & -257<i32>
	Mem43[0x44C01820<32>:word32] = Mem40[0x44C00820<32>:int32] | 1<i32>
	Mem44[0x44C01800<32>:word32] = 0<32>
	mdm_reset()
	Mem48[0x44C01838<32>:word32] = 180<i32>
	Mem51[0x44C0188C<32>:word32] = 0x1FFFC13<32>
	Mem54[0x44C01898<32>:word32] = 0x2D00438<32>
	Mem59[0x44C01858<32>:word32] = Mem54[0x44C00858<32>:int32] & -256<i32>
	Mem62[0x44C0181C<32>:word32] = 0xFFFF0F<32>
	Mem66[0x44C0181C<32>:word32] = Mem62[0x44C0081C<32>:int32] & -128<i32> | 7<i32>
	Mem71[0x44C01834<32>:word32] = CONVERT(Mem66[0x44C00834<32>:word24], word24, word32) | 0x6000000<32>
	Mem74[0x44C01818<32>:word32] = 0x1880C06<32>
	Mem77[0x44C01860<32>:word32] = 0x7FFFF03<32>
	Mem78[0x44C0B340<32>:word32] = 0<32>
	Mem79[0x44C0B344<32>:word32] = 0<32>
	Mem80[0x44C0B348<32>:word32] = 0<32>
	mdm_txcbwmax_setf(a3)
	branch Mem80[0x44C0B000<32>:int32] << 0xA<u32> >= 0<32> l23055DFC
l23055DF6:
	Mem88[0x44C0B118<32>:word32] = 1<32>
l23055DFC:
	word32 a0_128
	word32 a0_135
	word32 fflags_107
	word32 frm_108
	word32 s1_111
	word32 s4_114
	word32 ra_109 = rf_set_channel(ra, a2, 0x44C0B000<32>, fflags, frm, out s1_111, out s4_114, out fflags_107, out frm_108)
	branch s4_114 != 0<32> l23055E60
l23055E60:
	a0_128 = 0<32>
	branch s4_114 != 1<32> l23055E36
l23055E68:
	branch CONVERT(SLICE(s1_111 + 0xFEFFFC73<32>, word16, 0), word16, word32) >u 820<i32> l23055E36
l23055E7C:
	a0_135 = 0xFEFFFC78<32>
l23055E08:
	a0_128 = 0<32>
	branch CONVERT(SLICE(s1_111 + 0xFF000694<32>, word16, 0), word16, word32) >u 72<i32> l23055E36
l23055E1E:
	a0_128 = 0xE<32>
	branch s1_111 == 0xFFF9B4<32> l23055E36
l23055E2A:
	a0_135 = 0xFF000699<32>
l23055E2E:
	a0_128 = s1_111 + a0_135 ^ 5<32>
l23055E36:
	word32 s2_173
	word32 s3_174
	word32 s1_171 = rfc_apply_tx_power_offset(a0_128 & 255<i32>, 0x42016484<32>, dwArg24, dwArg44, s3, dwArg84, dwArg0178, out s2_173, out s3_174)
	word32 a0_195 = CONVERT(SLICE(s3_174, byte, 0), byte, int32)
l23055E5C_thunk_trpc_update_vs_channel:
	trpc_update_vs_channel(a0_195)
	s0Out = s1
	s1Out = s1_171
	s2Out = s2_173
	s3Out = s3_174
	fflagsOut = fflags_107
	frmOut = frm_108
	return ra_109
phy_hw_set_channel_exit:
l23055D2C:
	assert_err()
l23055D10:
	assert_err()


word32 phy_get_channel(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ps_send_pspoll
//      rxl_mpdu_transfer
//      txl_frame_send_qosnull_frame
//      txl_frame_send_eapol_frame
//      rxu_mgt_frame_check
//      mm_sta_tbtt
//      bam_send_air_action_frame
// MayUse:  a0:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
phy_get_channel_entry:
l23055E82:
	word32 a3_11 = CONVERT(Mem0[0x4201E23A<32>:byte], byte, word32)
	Mem14[CONVERT(Mem0[0x4201E23B<32>:byte], byte, word32) << 8<i32> | CONVERT(Mem0[0x4201E234<32>:uint16], uint16, word32) << 16<i32> | a3_11:word32] = a0
	word32 a4_15 = CONVERT(Mem14[0x4201E236<32>:uint16], uint16, word32)
	word32 a5_18 = CONVERT(Mem14[0x4201E238<32>:uint16], uint16, word32) << 16<i32> | a4_15
	Mem19[a5_18 + 4<i32>:word32] = a0
	a4Out = a4_15
	a5Out = a5_18
	return a3_11
phy_get_channel_exit:


word32 phy_set_channel(word32 ra, word32 a0, word32 a1, word32 a3, word32 s3, word32 fflags, word32 frm, word32 dwArg04, word32 dwArg24, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_monitor_channel_req_handler
//      mm_monitor_enable_req_handler
//      mm_start_req_handler
//      mm_hw_config_handler
//      chan_tx_cfm
//      chan_ctxt_update
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0158:[0..31]
// LiveOut: a2 fflags frm ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
phy_set_channel_entry:
l23055EB0:
	branch CONVERT(SLICE(a3 + 0xFF000694<32>, word16, 0), word16, word32) <=u 72<i32> l23055EC6
l23055EC4:
	branch a0 == 0<32> l23055F10
l23055EC6:
	branch a0 >u 1<32> l23055F10
l23055F10:
	s0Out = s0
	s1Out = s1
	a2Out = a2
	s2Out = s2
	s3Out = s3
	fflagsOut = fflags
	frmOut = frm
	return ra
l23055ECC:
	word32 fflags_54
	word32 frm_55
	word32 s0_57
	word32 s1_58
	word32 s2_60
	word32 s3_61
	word32 ra_56 = phy_hw_set_channel(ra, a0, a3, a1, a1, fflags, frm, dwArg04, dwArg24, s3, dwArg0158, out s0_57, out s1_58, out s2_60, out s3_61, out fflags_54, out frm_55)
	Mem78[0x4201E23A<32>:byte] = SLICE(s0_57, byte, 0)
	Mem79[0x4201E23B<32>:byte] = SLICE(s3_61, byte, 0)
	Mem80[0x4201E234<32>:word16] = SLICE(s2_60, word16, 0)
	Mem81[0x4201E236<32>:word16] = SLICE(s1_58, word16, 0)
	s0Out = s0_57
	s1Out = s1_58
	a2Out = dwArg48
	s2Out = s2_60
	s3Out = s3_61
	fflagsOut = fflags_54
	frmOut = frm_55
	return ra_56
phy_set_channel_exit:


void phy_get_version(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_version_req_handler
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
phy_get_version_entry:
l23055F12:
	Mem7[Mem0[0x44C00000<32>:word32]:word32] = a0
	Mem9[a1:word32] = 0<32>
	return
phy_get_version_exit:


word32 phy_vht_supported(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse:  a4:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a5
// Preserved: sp
phy_vht_supported_entry:
l23055F20:
	word32 a0_10 = 1<32>
	branch a4 << 9<u32> < 0<32> l23055F36
l23055F30:
	a0_10 = 0<32>
l23055F36:
	return a0_10
phy_vht_supported_exit:


word32 phy_init(word32 ra, word32 s1, word32 dwArg38, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_monitor_enable_req_handler
//      mm_start_req_handler
// MayUse:  ra:[0..31] s1:[0..31] Stack +0038:[0..31]
// LiveOut: ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
phy_init_entry:
l23055F38:
	Mem13[0x44C01800<32>:word32] = 0<32>
	mdm_reset()
	Mem19[0x44C01820<32>:word32] = 525<i32>
	branch false l23055F8A
l23055F8A:
	Mem37[0x44C01820<32>:word32] = Mem19[0x44C00820<32>:int32] & -113<i32> | 0xFF0<32>
	word32 s1_43 = (s1 >>u 12<i32> & 0xF<32>) + 0xFFFFFFFF<32> & 255<i32>
	branch (s1_43 << 12<i32> & 0xF8000<32>) == 0<32> l23055FD0
l23055FD0:
	word32 a5_53 = Mem37[0x44C00820<32>:int32]
	Mem58[0x44C01820<32>:word32] = s1_43 << 12<i32> | a5_53 & 0xF8FFFFFF<32>
	word32 a4_60 = Mem58[0x44C00820<32>:int32]
	Mem65[0x44C01820<32>:word32] = (a5_53 & 0xF8FFFFFF<32>) >>u 19<i32> & 256<i32> | a4_60 & -257<i32>
	word32 a0_66 = phy_vht_supported(a4_60 & -257<i32>)
	word32 a5_69 = Mem65[0x44C00820<32>:int32]
	word32 a0_73 = a0_66 << 1<i32> | a5_69 & 0xFFFFFFFD<32>
	Mem74[0x44C01820<32>:word32] = a0_73
	word32 a5_82 = ((a5_69 & 0xFFFFFFFD<32>) >>u 30<i32> & 1<32>) << 16<i32> | Mem74[0x44C00820<32>:int32] & 0xEFFFFFFF<32>
	Mem83[0x44C01820<32>:word32] = a5_82
	word32 a5_92 = (a5_82 >>u 30<i32> & 1<32>) << 20<i32> | Mem83[0x44C00820<32>:int32] & 0xFFEFFFFF<32>
	Mem93[0x44C01820<32>:word32] = a5_92
	Mem100[(a5_92 & 0xFFC0FFFF<32> | 0x2D0000<32>) + 36<i32>:word32] = Mem93[a5_92 + 36<i32>:word32]
	Mem102[0x44C0189C<32>:word32] = 0xFFFFFFFF<32>
	Mem104[0x44C01824<32>:word32] = 525<i32>
	word32 s1_105 = Mem104[0x44C01000<32>:word32]
	branch false l23056094
l23056094:
	Mem122[0x44C01824<32>:word32] = Mem104[0x44C00824<32>:int32] & -113<i32> | 0xFF0<32>
	word32 s1_128 = (s1_105 >>u 4<i32> & 0xF<32>) + 0xFFFFFFFF<32> & 255<i32>
	branch (s1_128 << 20<i32> & 0xF800000<32>) == 0<32> l230560DA
l230560DA:
	Mem143[0x44C01824<32>:word32] = s1_128 << 20<i32> | Mem122[0x44C00824<32>:int32] & 0xFF8FFFFF<32>
	word32 a5_150 = mdm_txcbwmax_setf(a0_73 >>u 24<i32> & 3<32>)
	word32 a4_152 = Mem143[0x44C00824<32>:int32]
	Mem157[0x44C01824<32>:word32] = a5_150 >>u 18<i32> & 256<i32> | a4_152 & -257<i32>
	word32 a0_158 = phy_vht_supported(a4_152 & -257<i32>)
	word32 a5_161 = Mem157[0x44C00824<32>:int32]
	Mem166[0x44C01824<32>:word32] = a0_158 << 1<i32> | a5_161 & 0xFFFFFFFD<32>
	Mem174[0x44C01824<32>:word32] = (a5_161 & 0xFFFFFFFD<32>) >>u 31<i32> << 16<i32> | Mem166[0x44C00824<32>:int32] & 0xEFFFFFFF<32>
	Mem179[0x44C01834<32>:word32] = Mem174[0x44C00834<32>:int32] | 1<i32>
	Mem184[0x44C01818<32>:word32] = Mem179[0x44C00818<32>:int32] & 0xFFFBFFFF<32>
	Mem191[0x44C01830<32>:word32] = Mem184[0x44C00830<32>:int32] & 0xF00000FF<32> | 0x1FFFB00<32>
	Mem196[0x44C01830<32>:word32] = Mem191[0x44C00830<32>:int32] & -256<i32> | 15<i32>
	Mem199[0x44C0183C<32>:word32] = 0x4920492<32>
	Mem203[0x44C01874<32>:word32] = Mem199[0x44C00874<32>:int32] & 0xF7FFFFFF<32> | 0x8000000<32>
	word32 a4_209 = Mem203[0x44C0B500<32>:int32] & 0xFCFFFFFF<32> | 0x2000000<32>
	Mem210[0x44C0B500<32>:word32] = a4_209
	word32 a5_211 = Mem210[a4_209:word32]
	branch a4_209 << 0xA<u32> >= 0<32> l230561EC
l230561C0:
	Mem215[a5_211 + 272<i32>:word32] = Mem210[a5_211 + 272<i32>:int32] & 0xFFFFFFF7<32>
	Mem218[a5_211 + 272<i32>:word32] = Mem215[a5_211 + 272<i32>:int32] & 0xFFFFFFFB<32>
	Mem221[a5_211 + 272<i32>:word32] = Mem218[a5_211 + 272<i32>:int32] & 0xFFFFFFFD<32>
	Mem224[a5_211 + 272<i32>:word32] = Mem221[a5_211 + 272<i32>:int32] & 0xFFFFFFFE<32>
	Mem225[a5_211 + 280<i32>:word32] = 0<32>
l230561EC:
	Mem228[5<32>:word32] = 0x44C0B000<32>
	Mem232[0x44C0B390<32>:word32] = Mem228[0x44C0B390<32>:int32] & 0xFFFFFFFC<32> | 1<i32>
	Mem235[0x44C0B3BC<32>:word32] = 0x3D0900<32>
	Mem238[0x44C0B414<32>:word32] = Mem235[0x44C0B414<32>:int32] | 256<i32>
	word32 a2_241
	word32 s2_249
	word32 s3_250
	word32 s0_247 = agc_config(out a2_241, out s2_249, out s3_250)
	Mem262[s0_247 + 912<i32>:word32] = Mem238[s0_247 + 912<i32>:int32] & 0xFEFFFFFF<32> | 0x1000000<32>
	Mem269[0x44C01874<32>:word32] = Mem262[0x44C00874<32>:int32] & 0xDFFFFFFF<32> | 0x20000000<32>
	word32 a4_273 = 0x54C0A000<32>
l2305625E:
	a4_273 = a4_273 + 4<32>
	Mem281[a4_273 + 4092<i32>:word32] = a2_241
	branch a4_273 != 0x54C0A800<32> l2305625E
l2305626C:
	Mem288[0x44C01874<32>:word32] = Mem281[0x44C00874<32>:int32] & 0xDFFFFFFF<32>
	word32 a5_290 = Mem288[0x44C0B390<32>:int32]
	Mem294[0x44C0B390<32>:word32] = a5_290 & 0xFEFFFFFF<32>
	Mem301[(a5_290 & 0xFEFFFFFF<32> & 0xFC00FFFF<32> | 0x140000<32>) + 32<i32>:word32] = Mem294[(a5_290 & 0xFEFFFFFF<32>) + 32<i32>:word32]
	Mem306[Mem301[s2_249:int32]:word32] = 0x4201E230<32>
	Mem309[0xFF0103<32>:word32] = 0x4201E230<32>
	Mem312[0x5000107<32>:word32] = 0x4201E230<32>
	trpc_init()
	pa_init()
	word32 ra_329 = phy_tcal_reset(ra)
	0<32> = dwArg38
l230562DC_thunk_phy_tcal_start:
	phy_tcal_start()
	s3Out = s3_250
	return ra_329
phy_init_exit:
l230560C0:
	assert_err()
l2305607A:
	assert_err()
l23055FB6:
	assert_err()
l23055F70:
	assert_err()


word32 phy_get_nss(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_config_req_handler
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
phy_get_nss_entry:
l230562E0:
	return (a0 >>u 8<i32> & 0xF<32>) + 0xFFFFFFFF<32> & 255<i32>
phy_get_nss_exit:


word32 phy_get_ntx(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_frame_init
//      hal_machw_init
//      txl_buffer_init
//      rc_init
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
phy_get_ntx_entry:
l230562F2:
	return (a0 >>u 4<i32> & 0xF<32>) + 0xFFFFFFFF<32> & 255<i32>
phy_get_ntx_exit:


void phy_stop()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_reset_req_handler
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
phy_stop_entry:
l23056304:
	return
phy_stop_exit:


word32 phy_ldpc_tx_supported(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_init
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
phy_ldpc_tx_supported_entry:
l23056306:
	return a0 >>u 26<i32> & 1<32>
phy_ldpc_tx_supported_exit:


word32 phy_get_mac_freq()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_init
// MayUse: 
// LiveOut: a0
// Trashed: a0
// Preserved: sp
phy_get_mac_freq_entry:
l23056312:
	return 40<i32>
phy_get_mac_freq_exit:


word32 phy_get_rf_gain_idx(word32 a0, word32 a1, word32 a3, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tpc_update_vif_tx_power
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: s0 sp
phy_get_rf_gain_idx_entry:
l23056318:
	word32 a3_19
	word32 a4_20
	word32 a0_16 = rfc_get_power_level(2<32>, CONVERT(Mem7[a0:int8], int8, int32) + 0xA<32>, a3, out a3_19, out a4_20)
	Mem23[a1:byte] = SLICE(a0_16, byte, 0)
	a3Out = a3_19
	a4Out = a4_20
	return a0_16
phy_get_rf_gain_idx_exit:


word32 phy_get_rf_gain_capab(word32 a0, word32 a1, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_associate_req
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: s0 s8
// Trashed: a0 a2 a5 s0 s8 t3
// Preserved: sp
phy_get_rf_gain_capab_entry:
l2305633C:
	Mem14[a0:byte] = SLICE(trpc_get_rf_max_power(), byte, 0)
	Mem18[a1:byte] = SLICE(trpc_get_rf_min_power(), byte, 0)
	s8Out = dwLoc1C
	return a0
phy_get_rf_gain_capab_exit:


void bz_phy_reset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_reset
// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
bz_phy_reset_entry:
l2305635C:
	Mem11[0x40003808<32>:word32] = Mem0[0x40002808<32>:int32] & 0xFF7FFFFF<32> | 0x800000<32>
	Mem18[0x40003808<32>:word32] = Mem11[0x40002808<32>:int32] & 0xFFFFFF<32> | 0x8000000<32>
	Mem23[0x4000380C<32>:word32] = Mem18[0x4000280C<32>:int32] & 0xFF7FFFFF<32> | 0x800000<32>
	Mem27[0x4000380C<32>:word32] = Mem23[0x4000280C<32>:int32] & 0xFFFFFF<32> | 0x4000000<32>
	Mem32[0x4000380C<32>:word32] = Mem27[0x4000280C<32>:int32] & -256<i32>
	Mem37[0x40003854<32>:word32] = Mem32[0x40002854<32>:int32] & 0xF00000FF<32> | 0x2000000<32>
	Mem42[0x40003854<32>:word32] = Mem37[0x40002854<32>:int32] & 0xFFFFFF<32> | 0x1E000000<32>
	Mem49[0x40003854<32>:word32] = Mem42[0x40002854<32>:int32] & 0xFF00FFFF<32> | 0xA0000<32>
	Mem53[0x40003854<32>:word32] = Mem49[0x40002854<32>:int32] & -256<i32> | 30<i32>
	Mem56[0x40003810<32>:word32] = Mem53[0x40002810<32>:int32] & 0xFFFFFFFE<32>
	Mem59[0x40003810<32>:word32] = Mem56[0x40002810<32>:int32] | 2<i32>
	Mem63[0x40003CAC<32>:word32] = Mem59[0x40002CAC<32>:int32] & 0xFFFFFFE0<32> | 4<i32>
	return
bz_phy_reset_exit:


void mpif_clk_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
mpif_clk_init_entry:
l23056428:
	return
mpif_clk_init_exit:


void phy_mdm_isr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
phy_mdm_isr_entry:
l2305642A:
	return
phy_mdm_isr_exit:


void phy_rc_isr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
phy_rc_isr_entry:
l2305642C:
	word32 a5_5 = Mem0[0x44C0B41C<32>:int32]
	Mem6[0x44C0B420<32>:word32] = a5_5
	branch (a5_5 & 256<i32>) == 0<32> l23056442
l23056442:
	return
l2305643E:
l2305643E_thunk_mdm_reset:
	mdm_reset()
	return
phy_rc_isr_exit:


void pa_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse: 
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
pa_init_entry:
l23056444:
	word32 a5_26 = 0x42016494<32>
l23056450:
	Mem7[a5_26 + 115<i32>:byte] = 0<8>
	Mem8[a5_26 + 120<i32>:word32] = 0<32>
	Mem9[a5_26 + 108<i32>:word32] = 0<32>
	Mem10[a5_26 + 104<i32>:byte] = 0<8>
	Mem11[a5_26 + 135<i32>:byte] = 0<8>
	Mem12[a5_26 + 128<i32>:word32] = 0<32>
	Mem13[a5_26 + 136<i32>:byte] = 0<8>
	Mem14[a5_26 + 137<i32>:byte] = 0<8>
	word32 a4_15 = a5_26
	word32 a3_16 = 8<32>
l23056474:
	Mem18[a4_15 + 16<i32>:byte] = 0<8>
	Mem19[a4_15 + 8<i32>:byte] = 0<8>
	Mem20[a4_15 + 9<i32>:byte] = 0<8>
	Mem21[a4_15 + 12<i32>:word32] = 0<32>
	a3_16 = a3_16 + 0xFFFFFFFF<32>
	a4_15 = a4_15 + 0xC<32>
	branch a3_16 != 0<32> l23056474
l2305648A:
	a5_26 = a5_26 + 140<i32>
	branch a5_26 != 0x420166C4<32> l23056450
l23056492:
	return
pa_init_exit:


word32 pa_input(word32 ra, word32 a0, word32 fflags, word32 frm, word32 dwArg38, ptr32 & a2Out, ptr32 & fa0Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_cntrl_evt
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut: a2 fa0 fflags frm ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fflags frm ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
pa_input_entry:
l23056494:
	branch a0 >u 3<32> l23056594
l23056594:
	a2Out = 3<32>
	fa0Out = fa0
	fflagsOut = fflags
	frmOut = frm
	return ra
l2305649A:
	word32 s1_114
	word32 s2_115
	word32 s0_113
	word32 ra_112
	word32 fflags_110
	word32 a0_132
	word32 a1_133
	word32 frm_111
	word32 a1_19 = Mem17[a0 + 32<i32>:word32]
	word32 s2_22 = CONVERT(Mem17[a0 + 0x42016588<32>:int8], int8, int32)
	Mem23[a0 + 108<i32>:word32] = a0 + 0x42016520<32>
	word32 a4_26 = s2_22 + 0xC<32> + (a0 + 140<i32>)
	Mem29[a4_26 + 0x420164A4<32>:byte] = 1<8>
	word32 a4_30 = CONVERT(Mem29[a1_19 + 51<i32>:int8], int8, int32)
	Mem31[a4_26 + 0x4201649C<32>:byte] = SLICE(a4_30, byte, 0)
	word32 a4_34 = a4_30 << 20<i32> >> 28<i32>
	Mem35[a4_26 + 0x4201649D<32>:byte] = SLICE(a4_34, byte, 0)
	word32 a1_36 = Mem35[a4_34 + 44<i32>:word32]
	branch (a4_34 & 0x70000<32>) != 0<32> l2305655A
l230564F2:
	a1_36 = Mem35[(a4_34 & 0x70000<32>) + 40<i32>:word32]
	word32 a0_40 = CONVERT(Mem35[a1_36 + 59<i32>:byte], byte, word32)
	branch ((a4_34 & 0x70000<32>) >>u 12<i32> & 0xF<32>) >u 3<32> l2305655A
l2305655A:
	word32 a1_53
	word32 a0_64
	word32 a1_65
	word32 fflags_79
	word32 frm_80
	word32 s3_329
	word32 s9_328
	word32 s8_327
	word32 s7_326
	word32 s6_325
	word32 s5_324
	word32 s4_323
	word32 s3_322
	word32 s2_321
	word32 a7_320
	word32 a5_319
	word32 a4_318
	word32 s1_317
	word32 s0_316
	ra_112 = __divdf3(__muldf3(ra, __floatsidf(0<32> - CONVERT(SLICE((CONVERT(Mem35[a1_36 + 60<i32>:byte], byte, word32) << 8<i32>) + CONVERT(Mem35[a1_36 + 59<i32>:byte], byte, word32), word16, 0), word16, int32), out a1_53), a1_53, Mem35[0x2307CDD8<32>:int32], Mem35[0x2307CDDC<32>:int32], fflags, frm, out s0_316, out s1_317, out a0_64, out a1_65, out a4_318, out a5_319, out a7_320, out s2_321, out s3_322, out s4_323, out s5_324, out s6_325, out s7_326, out s8_327, out s9_328, out fflags_79, out frm_80), a0_64, a1_65, Mem35[0x2307CDE0<32>:int32], Mem35[0x2307CDE4<32>:int32], fflags_79, frm_80, out s0_113, out s1_114, out a0_132, out a1_133, out s2_115, out s3_329, out fflags_110, out frm_111)
l23056500:
	word32 a7_332
	word32 a1_126
	word32 s3_333
	word32 s4_334
	word32 a5_331
	word32 a4_330
	word32 s5_335
	word32 s6_336
	word32 s7_337
	word32 s8_338
	word32 s9_339
	ra_112 = __muldf3(ra, __floatsidf(CONVERT(SLICE(a0_40, byte, 0), byte, int32), out a1_126), a1_126, Mem35[0x23073018<32>:int32], Mem35[0x2307301C<32>:int32], fflags, frm, out s0_113, out s1_114, out a0_132, out a1_133, out a4_330, out a5_331, out a7_332, out s2_115, out s3_333, out s4_334, out s5_335, out s6_336, out s7_337, out s8_338, out s9_339, out fflags_110, out frm_111)
l23056518:
	word32 fa0_172
	word32 a2_340
	word32 a3_341
	word32 a4_342
	word32 a5_343
	__truncdfsf2(ra_112, a0_132, a1_133, fflags_110, frm_111, out a2_340, out a3_341, out a4_342, out a5_343, out fa0_172)
	Mem183[a0_132 + 12<i32>:real32] = s2_115 + 0xC<32> + (s0_113 + 140<i32>) + s1_114
	word32 a5_185 = 0<32>
	branch s2_115 == 7<32> l23056540
l23056538:
	a5_185 = CONVERT(SLICE(s2_115 + 1<32>, byte, 0), byte, int32)
l23056540:
	Mem195[s0_113 + 140<i32> + s1_114 + 104<i32>:byte] = SLICE(a5_185, byte, 0)
	0<32> = dwArg38
	a2Out = dwArg10
	fa0Out = fa0_172
	fflagsOut = fflags_110
	frmOut = frm_111
	return ra_112
pa_input_exit:


word32 pa_adapt(word32 ra, word32 a0, word32 a2, word32 fa0, word32 fflags, word32 frm, word32 mstatus, word32 dwArgC8, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_cntrl_evt
// MayUse:  a0:[0..31] a2:[0..31] fa0:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +00C8:[0..31]
// LiveOut: a4 a5 fflags frm ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa4 fa5 fflags frm ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
pa_adapt_entry:
l23056596:
	branch a0 >u 3<32> l23056836
l23056836:
	s1Out = s1
	a4Out = a4
	a5Out = 3<32>
	fflagsOut = fflags
	frmOut = frm
	return ra
l2305659C:
	word32 a4_277
	Mem28[a2 + 1<32>:word32] = Mem22[a2:word32]
	word32 s0_251 = 0x42016494<32>
	word32 t3_33 = CONVERT(Mem28[a0 + 0x42016588<32>:int8], int8, int32)
	branch t3_33 != 0<32> l23056740
l23056740:
	a4_277 = a0 + 0x94<32> + (t3_33 + 0xB<32>) + 0x42016494<32>
l230565DA:
	a4_277 = a0 + 0x4201657C<32>
l230565E0:
	word32 a5_134 = CONVERT(Mem28[a4_277 + 8<i32>:byte], byte, word32)
	branch a5_134 == 0<32> l2305672C
l230565E8:
	word32 s2_48 = CONVERT(Mem28[a4_277:int8], int8, int32)
	word32 a1_51 = CONVERT(Mem28[a0 + 0x42016593<32>:int8], int8, int32)
	branch a1_51 == 0<32> l23056788
l23056788:
	word32 a5_52 = Mem28[a1_51 + 120<i32>:word32]
	branch a1_51 <=u 6<32> l230567F0
l230567F0:
	Mem55[a1_51 + 0x79<32>:word32] = a5_52
l23056790:
	Mem57[a5_52 + 115<i32>:byte] = 1<8>
	word32 a6_58 = 1<32>
	word32 a7_59 = 100<i32>
	word32 t1_60 = -100<i32>
	word32 a5_61 = 0<32>
l230567AA:
	word32 a3_78 = CONVERT(Mem57[(t3_33 - a6_58 | 8<32>) + 0xC<32> + (a0 + 140<i32>) + 0x4201649C<32>:int8], int8, int32)
	a5_61 = a5_61 + a3_78
	branch t1_60 >= a3_78 l230567C6
l230567C4:
	t1_60 = a3_78
l230567C6:
	branch a3_78 >= a7_59 l230567CC
l230567CA:
	a7_59 = a3_78
l230567CC:
	a6_58 = a6_58 + 1<32>
	branch a6_58 != 7<32> l230567AA
l230567D2:
	Mem110[a0 + 0x42016590<32>:byte] = SLICE(a5_61 - t1_60 - a7_59 ^ 4<32>, byte, 0)
l23056600:
	word32 a1_111 = CONVERT(Mem28[a0 + 0x42016594<32>:byte], byte, word32)
	branch a1_111 <=u 4<32> l23056754
l23056754:
	branch s2_48 >u 0<i32> l23056616
l23056760:
	word32 a6_115 = CONVERT(Mem28[a0 + 0x42016590<32>:int8], int8, int32)
	word32 a3_117 = s2_48 - a6_115
	branch a3_117 <=u 0xFFFFFFF6<32> l2305677A
l2305677A:
	Mem121[a0 + 0x42016594<32>:byte] = 0<8>
	Mem122[a0 + 0x42016590<32>:byte] = SLICE((a3_117 >> 2<i32>) + a6_115, byte, 0)
l23056772:
	Mem124[a0 + 0x42016594<32>:byte] = SLICE(a1_111 + 1<32>, byte, 0)
l2305660A:
	Mem125[a0 + 0x42016594<32>:byte] = 0<8>
	Mem126[a0 + 0x42016593<32>:byte] = 0<8>
	Mem127[a0 + 0x42016598<32>:word32] = 0<32>
l23056616:
	a5_134 = 0xF<32>
	branch (a2 + 1<32> & 0xF<32>) != 0xF<32> l2305672C
l2305661E:
	s1 = a0
	branch s2_48 - CONVERT(Mem142[a0 + 0x42016590<32>:int8], int8, int32) >u 0xFFFFFFF6<32> l230566A4
l2305663A:
	word32 a5_161
	branch CONVERT(fa0 >= 0.0F, bool, word32) == 0<32> l230567F6
l230567F6:
	a5_161 = CONVERT(fa0 < Mem142[0x2307DDB8<32>:real32], bool, word32)
l23056648:
	a5_161 = CONVERT(Mem142[0x2307B278<32>:real32] < fa0, bool, word32)
l23056654:
	branch a5_161 == 0<32> l230566A4
l23056656:
	word32 a3_210
	word32 a2_209
	word32 a1_188
	word32 a0_187 = __extendsfdf2(ra, fa0, fflags, frm, out a1_188)
	branch s2_48 >= -85<i32> l23056804
l23056804:
	word32 a1_752
	__extendsfdf2(ra, Mem142[a0 + 0x420165A0<32>:real32], fflags, frm, out a1_752)
	a2_209 = Mem142[0x2307CDD0<32>:int32]
	a3_210 = Mem142[0x2307CDD4<32>:int32]
l23056666:
	word32 a1_753
	__extendsfdf2(ra, Mem142[a0 + 0x420165A0<32>:real32], fflags, frm, out a1_753)
	a2_209 = Mem142[0x2307CDC8<32>:int32]
	a3_210 = Mem142[0x2307CDCC<32>:int32]
l23056688:
	word32 a0_233
	word32 a1_234
	word32 s6_257
	word32 s7_258
	word32 s9_762
	word32 s4_759
	word32 s8_761
	word32 s5_760
	word32 s2_757
	word32 s3_758
	word32 a4_754
	word32 a7_756
	word32 a5_755
	ra = __muldf3(ra, a0_187, a1_188, a2_209, a3_210, fflags, frm, out s0_251, out s1, out a0_233, out a1_234, out a4_754, out a5_755, out a7_756, out s2_757, out s3_758, out s4_759, out s5_760, out s6_257, out s7_258, out s8_761, out s9_762, out fflags, out frm)
	word32 a1_266
	word32 a0_265 = __adddf3(ra, s6_257, s7_258, a0_233, a1_234, fflags, frm, out a1_266)
	word32 fa0_281
	word32 a3_764
	word32 a5_765
	word32 a2_763
	__truncdfsf2(ra, a0_265, a1_266, fflags, frm, out a2_763, out a3_764, out a4_277, out a5_765, out fa0_281)
	Mem283[a0_265 + 512<i32>:real32] = fa0_281
l230566A4:
	word32 fa5_291 = Mem290[s1 + 140<i32> + s0_251 + 128<i32>:real32]
	branch CONVERT(fa5_291 >= 0.0F, bool, word32) == 0<32> l23056828
l23056828:
	a5_134 = CONVERT(Mem290[0x2307DDC0<32>:real32] < fa5_291, bool, word32)
l230566BE:
	a5_134 = CONVERT(fa5_291 < Mem290[0x2307DDBC<32>:real32], bool, word32)
l230566CA:
	branch a5_134 != 0<32> l2305672C
l230566CC:
	__csrrc(mstatus, 8<32>)
	branch CONVERT(Mem290[s1 + 140<i32> + s0_251 + 128<i32>:real32] > 0.0F, bool, word32) == 0<32> l230566F2
l230566E8:
	branch hal_get_capcode() == 0<32> l230566F2
l230566EC:
	word32 a5_766
	a4_277 = hal_set_capcode(hal_get_capcode() + 0xFFFFFFFF<32>, out a5_766)
l230566F2:
	a5_134 = CONVERT(Mem290[s1 + 140<i32> + s0_251 + 128<i32>:real32] < 0.0F, bool, word32)
	branch a5_134 == 0<32> l2305671A
l2305670A:
	a5_134 = 62<i32>
	branch hal_get_capcode() >u 62<i32> l2305671A
l23056714:
	a4_277 = hal_set_capcode(hal_get_capcode() + 1<32>, out a5_134)
l2305671A:
	s1 = s1 + 140<i32>
	Mem354[s0_251 + s1 + 128<i32>:word32] = 0<32>
	__csrrs(mstatus, 8<32>)
l2305672C:
	0<32> = dwArgC8
	s1Out = s1
	a4Out = a4_277
	a5Out = a5_134
	fflagsOut = fflags
	frmOut = frm
	return ra
pa_adapt_exit:


word32 hal_get_capcode()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pa_adapt
// MayUse: 
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
hal_get_capcode_entry:
l23056838:
	return Mem0[0x4000F884<32>:int32] >>u 22<i32> & 63<i32>
hal_get_capcode_exit:


word32 hal_set_capcode(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pa_adapt
// MayUse:  a0:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
hal_set_capcode_entry:
l23056848:
	word32 a4_5 = Mem0[0x4000F884<32>:int32]
	word32 a5_13 = a0 << 0x10<u32> | a0 << 22<i32> | a4_5 & 0xF000FFFF<32>
	Mem14[0x40010884<32>:word32] = a5_13
	a5Out = a5_13
	return a4_5 & 0xF000FFFF<32>
hal_set_capcode_exit:


word32 hal_get_temperature(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_callback
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
hal_get_temperature_entry:
l23056868:
	Mem7[a0:word16] = SLICE(CONVERT(Mem0[0x4200E39C<32>:uint16], uint16, word32), word16, 0)
	return 1<32>
hal_get_temperature_exit:


void hal_set_temperature(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_callback
// MayUse:  a0:[0..15]
// LiveOut:
// Trashed: a5
// Preserved: sp
hal_set_temperature_entry:
l23056878:
	Mem5[0x4200E39C<32>:word16] = SLICE(a0, word16, 0)
	return
hal_set_temperature_exit:


void trpc_update_power(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_update_power_table
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
trpc_update_power_entry:
l23056882:
	word32 a5_24 = 0x4200D60C<32>
	word32 a3_23 = 0<32>
l23056890:
	word32 t1_10 = a0 + a3_23
	word32 a4_11 = 0<32>
l23056896:
	Mem20[a5_24 + a4_11:byte] = SLICE(CONVERT(Mem15[t1_10 + a4_11:int8], int8, int32), byte, 0)
	a4_11 = a4_11 + 1<32>
	branch a4_11 != 8<32> l23056896
l230568AC:
	a3_23 = a3_23 + 8<32>
	a5_24 = a5_24 + 8<32>
	branch a3_23 != 0x18<32> l23056890
l230568B4:
	return
trpc_update_power_exit:


void trpc_power_get(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_power_table_get
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
trpc_power_get_entry:
l230568B6:
l230568C0_thunk_memcpy:
	word32 a2_20
	word32 a3_21
	word32 a4_22
	word32 a5_23
	word32 a6_24
	word32 a7_25
	memcpy(a0, 0x4200D60C<32>, 0x18<32>, out a2_20, out a3_21, out a4_22, out a5_23, out a6_24, out a7_25)
	return
trpc_power_get_exit:


void trpc_update_power_11b(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_update_power_rate_11b
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
trpc_update_power_11b_entry:
l230568C4:
	word32 a5_14 = 0<32>
l230568D0:
	Mem15[a5_14 + 0x4200D60C<32>:byte] = SLICE(CONVERT(Mem10[a0 + a5_14:int8], int8, int32), byte, 0)
	a5_14 = a5_14 + 1<32>
	branch a5_14 != 4<32> l230568D0
l230568E6:
	return
trpc_update_power_11b_exit:


void trpc_update_power_11g(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_update_power_rate_11g
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
trpc_update_power_11g_entry:
l230568E8:
	word32 a5_13 = 0x4200D60C<32>
	word32 a4_12 = 0<32>
l230568F4:
	a5_13 = a5_13 + 1<32>
	Mem15[a5_13 + 7<i32>:byte] = SLICE(CONVERT(Mem10[a0 + a4_12:int8], int8, int32), byte, 0)
	a4_12 = a4_12 + 1<32>
	branch a4_12 != 8<32> l230568F4
l23056908:
	return
trpc_update_power_11g_exit:


void trpc_update_power_11n(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_update_power_rate_11n
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
trpc_update_power_11n_entry:
l2305690A:
	word32 a5_13 = 0x4200D60C<32>
	word32 a4_12 = 0<32>
l23056916:
	a5_13 = a5_13 + 1<32>
	Mem15[a5_13 + 15<i32>:byte] = SLICE(CONVERT(Mem10[a0 + a4_12:int8], int8, int32), byte, 0)
	a4_12 = a4_12 + 1<32>
	branch a4_12 != 8<32> l23056916
l2305692A:
	return
trpc_update_power_11n_exit:


void trpc_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse: 
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
trpc_init_entry:
l2305692C:
	Mem12[0x4201E240<32>:word16] = 0xF98A<16>
	Mem16[0x4201E23C<32>:byte] = SLICE(rf_pri_get_txgain_max(), byte, 0)
	word32 a0_17 = rf_pri_get_txgain_min()
	Mem21[0x4201E23E<32>:byte] = 0x1E<8>
	Mem23[0x4201E23D<32>:byte] = SLICE(a0_17, byte, 0)
	Mem24[0x4201E242<32>:word16] = 0x19<16>
	return
trpc_init_exit:


word32 trpc_get_rf_max_power()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_get_rf_gain_capab
// MayUse: 
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
trpc_get_rf_max_power_entry:
l23056968:
	return CONVERT(Mem0[0x4201E23C<32>:int8], int8, int32)
trpc_get_rf_max_power_exit:


word32 trpc_get_rf_min_power()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_get_rf_gain_capab
// MayUse: 
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
trpc_get_rf_min_power_entry:
l23056972:
	return CONVERT(Mem0[0x4201E23D<32>:int8], int8, int32)
trpc_get_rf_min_power_exit:


word32 trpc_get_power_idx(word32 ra, word32 a0, word32 a1, word32 a2, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      trpc_get_default_power_idx
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: s0 sp
trpc_get_power_idx_entry:
l2305697C:
	word32 a4_11 = 2<32>
	branch a0 >u 2<32> l23056990
l2305698C:
	a4_11 = a0 & 255<i32>
l23056990:
	word32 a7_13 = 3<32>
	branch a0 == 0<32> l23056996
l23056994:
	a7_13 = 7<32>
l23056996:
	word32 a5_21 = CONVERT(Mem7[0x4201E23E<32>:byte], byte, word32)
	word32 a0_20 = CONVERT(Mem7[0x4201E23C<32>:int8], int8, int32)
	branch a0_20 >= CONVERT(SLICE(a5_21, byte, 0), byte, int32) l230569B8
l230569B6:
	a5_21 = a0_20
l230569B8:
	branch a2 >= CONVERT(SLICE(a5_21, byte, 0), byte, int32) l230569C4
l230569C2:
	a5_21 = a2
l230569C4:
	word32 a5_35 = a5_21 << 24<i32>
	branch a7_13 >= a1 l230569CE
l230569CC:
	a1 = a7_13
l230569CE:
	word32 a4_60 = CONVERT(Mem7[a1 + ((a4_11 << 3<u32>) + 0x4200D60C<32>):byte], byte, word32)
	branch a5_35 >> 24<i32> >= CONVERT(SLICE(a4_60, byte, 0), byte, int32) l230569EE
l230569EC:
	a4_60 = a5_35 >> 24<i32>
l230569EE:
	word32 a5_70 = CONVERT(Mem7[0x4201E23D<32>:byte], byte, word32)
	branch CONVERT(SLICE(a5_70, byte, 0), byte, int32) >= CONVERT(SLICE(a4_60, byte, 0), byte, int32) l23056A04
l23056A02:
	a5_70 = a4_60
l23056A04:
	word32 a1_91
	word32 a4_209
	word32 a1_122
	word32 a1_131
	word32 a3_133
	word32 a5_210
	word32 a0_130 = __fixdfsi(ra, __adddf3(ra, __floatsidf(CONVERT(SLICE(a5_70, byte, 0), byte, int32) + -510<i32> + a0_20 ^ 512<i32>, out a1_91), a1_91, Mem7[0x2307CDE8<32>:int32], Mem7[0x2307CDEC<32>:int32], fflags, frm, out a1_122), a1_122, fflags, frm, out a1_131, out a3_133, out a4_209, out a5_210)
	word32 a5_138 = 3<32>
	branch a0 == 0<32> l23056A3C
l23056A3A:
	a5_138 = 0<32>
l23056A3C:
	word32 a5_148 = a5_138 + (a0_130 & 255<i32>)
	word32 a0_151 = a5_148 & 255<i32>
	branch (a5_148 & 255<i32>) <=u 0xF<32> l23056A4C
l23056A4A:
	a0_151 = 0xF<32>
l23056A4C:
	a1Out = a1_131
	a3Out = a3_133
	a4Out = 0xF<32>
	a5Out = a5_148 & 255<i32>
	return a0_151 << 2<i32> & 252<i32>
trpc_get_power_idx_exit:


word32 trpc_get_default_power_idx(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tpc_update_vif_tx_power
//      tpc_get_vif_tx_power_vs_rate
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
trpc_get_default_power_idx_entry:
l23056A5A:
	word32 a4_18 = a0 & 255<i32>
	branch a0 <=u 2<32> l23056A66
l23056A64:
	a4_18 = 2<32>
l23056A66:
	word32 a5_10 = 3<32>
	branch a0 == 0<32> l23056A6C
l23056A6A:
	a5_10 = 7<32>
l23056A6C:
	branch a5_10 >= a1 l23056A72
l23056A70:
	a1 = a5_10
l23056A72:
	word32 a2_28 = CONVERT(Mem0[(a4_18 << 3<u32>) + 0x4200D60C<32> + a1:int8], int8, int32)
	word32 a1_29 = a1 & 255<i32>
l23056A8C_thunk_trpc_get_power_idx:
	word32 a1_44
	word32 a3_46
	word32 a4_47
	word32 a5_48
	word32 a0_43 = trpc_get_power_idx(ra, a4_18, a1_29, a2_28, fflags, frm, out a1_44, out a3_46, out a4_47, out a5_48)
	a1Out = a1_44
	a3Out = a3_46
	a4Out = a4_47
	a5Out = a5_48
	return a0_43
trpc_get_default_power_idx_exit:


void trpc_update_vs_channel(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
// MayUse:  a0:[0..15]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
trpc_update_vs_channel_entry:
l23056A90:
	Mem11[0x4201E240<32>:word16] = SLICE(a0, word16, 0)
	Mem15[0x4201E23C<32>:byte] = SLICE(rf_pri_get_txgain_max(), byte, 0)
	Mem19[0x4201E23D<32>:byte] = SLICE(rf_pri_get_txgain_min(), byte, 0)
	return
trpc_update_vs_channel_exit:


void trpc_update_vs_temperature(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_txpwr
// MayUse:  a0:[0..7]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
trpc_update_vs_temperature_entry:
l23056ABA:
	Mem11[0x4201E242<32>:byte] = SLICE(a0, byte, 0)
	Mem15[0x4201E23C<32>:byte] = SLICE(rf_pri_get_txgain_max(), byte, 0)
	Mem19[0x4201E23D<32>:byte] = SLICE(rf_pri_get_txgain_min(), byte, 0)
	return
trpc_update_vs_temperature_exit:


word32 phy_tcal_reset(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse:  ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
phy_tcal_reset_entry:
l23056AE4:
	word32 t1_36
	word32 a0_37
	word32 a1_38
	word32 a2_39
	word32 a3_40
	word32 a4_41
	word32 a5_42
	word32 ra_19 = memset(ra, 0x420166C4<32>, 0<32>, 56<i32>, out t1_36, out a0_37, out a1_38, out a2_39, out a3_40, out a4_41, out a5_42)
	Mem23[0x2D<32>:word32] = 0x420166C4<32>
	Mem24[0x31<32>:word32] = 0x420166C4<32>
	Mem25[0x35<32>:word32] = 0x420166C4<32>
	Mem26[0x39<32>:word32] = 0x420166C4<32>
	Mem27[0x420166C4<32>:word16] = 0x19<16>
	Mem29[0x420166F8<32>:byte] = 1<8>
	return ra_19
phy_tcal_reset_exit:


void phy_tcal_start()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
phy_tcal_start_entry:
l23056B1C:
	Mem5[0x420166F8<32>:byte] = 1<8>
	return
phy_tcal_start_exit:


void phy_tcal_txpwr(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_callback
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: s0 sp
phy_tcal_txpwr_entry:
l23056B28:
	rf_pri_tx_gain_comp(a0, a1, a3)
	word32 a0_23 = CONVERT(SLICE(a0, byte, 0), byte, int32)
l23056B40_thunk_trpc_update_vs_temperature:
	trpc_update_vs_temperature(a0_23)
	return
phy_tcal_txpwr_exit:


word32 phy_tcal_handle(word32 s0, word32 a1, word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_callback
// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] s0:[16..31]
// LiveOut: a4 a5 s0 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t1 t3
// Preserved: sp
phy_tcal_handle_entry:
l23056B44:
	word32 a5_14
	int16 wLoc12_95 = SLICE(s0, int16, 16)
	branch hal_get_temperature(fp + 0xFFFFFFEE<32>) == 0<32> l23056BD6
l23056B58:
	phy_tcal_txpwr(CONVERT(wLoc12_95, int16, int32), a1, a3)
	word32 a5_26 = CONVERT(wLoc12_95, int16, word32)
	branch CONVERT(SLICE(a5_26, word16, 0), word16, int32) <= 125<i32> l23056B76
l23056B72:
	a5_26 = 125<i32>
l23056B76:
	word32 a4_32 = a5_26 << 0x10<u32>
	a4 = a4_32 >> 16<i32>
	branch a4_32 >> 16<i32> >= -40<i32> l23056B88
l23056B84:
	a5_26 = -40<i32>
l23056B88:
	word32 s2_37 = a5_26 << 0x10<u32>
	int16 wLoc12_96 = SLICE(a5_26, word16, 0)
	word32 a5_43 = CONVERT(SLICE(a5_26 + 0xFFFFFFE7<32>, word16, 0), word16, int32)
	branch a5_43 > 0<32> l23056BE2
l23056BE2:
	s0 = CONVERT(SLICE(0<32> - (a5_43 + 6<32> >> 8<i32>), word16, 0), word16, int32)
l23056B9E:
	s0 = a5_43 + 0xFFFFFFFA<32> >> 8<u32>
l23056BA8:
	branch s0 == Mem40[0x420166F0<32>:word32] l23056BCE
l23056BBA:
	__csrrc(mstatus, 8<32>)
	a4 = phy_config_rxgain(s0)
	__csrrs(mstatus, 8<32>)
	Mem76[0x420166E0<32>:word32] = s2_37 >> 0x10<u32>
	Mem77[s0 + 44<i32>:word32] = 0x420166C4<32>
l23056BCE:
	a5_14 = CONVERT(wLoc12_96, int16, word32)
	Mem83[0x420166C4<32>:word16] = SLICE(a5_14, word16, 0)
l23056BD6:
	a4Out = a4
	a5Out = a5_14
	s4Out = dwArg04
	return s0
phy_tcal_handle_exit:


word32 phy_tcal_callback(word32 s0, word32 a0, word32 a1, word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a4 a5 s0 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t1 t3
// Preserved: sp
phy_tcal_callback_entry:
l23056BF4:
	hal_set_temperature(a0)
	word32 a5_9 = CONVERT(Mem5[0x420166F8<32>:byte], byte, word32)
	branch a5_9 == 0<32> l23056C0E
l23056C0E:
	a4Out = a4
	a5Out = a5_9
	s4Out = s4
	return s0
l23056C06:
l23056C0A_thunk_phy_tcal_handle:
	word32 a5_19
	word32 s4_21
	word32 a4_27
	word32 s0_29 = phy_tcal_handle(s0, a1, a3, mstatus, out a4_27, out a5_19, out s4_21)
	a4Out = a4_27
	a5Out = a5_19
	s4Out = s4_21
	return s0_29
phy_tcal_callback_exit:


word32 bl60x_check_mac_status(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateDisconnect_enter
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
bl60x_check_mac_status_entry:
l23056C14:
	word32 a3_5 = CONVERT(Mem0[0x4200E3A0<32>:byte], byte, word32)
	word32 a5_12 = 0x420166FC<32>
	word32 a4_10 = 0<32>
l23056C2A:
	branch a4_10 < a3_5 l23056C34
l23056C34:
	a5_12 = a5_12 + 40<i32>
	branch Mem0[a5_12 + -20<i32>:int32] == 0x8801E000<32> l23056C48
l23056C48:
	a4_10 = a4_10 + 1<32>
l23056C40:
	Mem21[1<32>:word32] = a0
	a5_12 = 1<32>
l23056C2E:
	Mem22[a0:word32] = 0<32>
l23056C44:
	a3Out = a3_5
	a4Out = a4_10
	a5Out = a5_12
	return 0<32>
bl60x_check_mac_status_exit:


word32 helper_record_dump(word32 ra, word32 a3, word32 s6, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg8C, word32 dwArg98, word32 dwArgBC, word32 dwArg0128, ptr32 & s0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateDisconnect_enter
// MayUse:  a3:[0..31] ra:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +0128:[0..31]
// LiveOut: a3 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
helper_record_dump_entry:
l23056C4C:
	word32 a4_282
	word32 a2_281
	word32 a1_280
	word32 a0_279
	word32 s8_285
	word32 s4_284
	word32 a5_283
	puts(0x2307CDF0<32>, out a0_279, out a1_280, out a2_281, out a4_282, out a5_283, out s4_284, out s8_285)
	word32 s1_183 = 0<32>
	word32 s6_190 = 0x4200E000<32>
	word32 s7_191 = 0x2307D000<32>
l23056C96:
	branch s1_183 < CONVERT(Mem26[s6_190 + 928<i32>:byte], byte, word32) l23056CBE
l23056CBE:
	word32 a1_61
	word32 a2_62
	word32 s4_72
	word32 s7_296
	word32 s6_295
	word32 s5_294
	word32 s3_293
	word32 s2_292
	word32 a7_291
	word32 a5_290
	word32 a4_289
	word32 a3_288
	word32 a0_287
	word32 s1_286
	word32 s8_297
	word32 s9_298
	word32 s10_299
	word32 s11_300
	word32 t4_301
	word32 ra_66 = printf(ra, s7_191 + -496<i32>, a3, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_286, out a0_287, out a1_61, out a2_62, out a3_288, out a4_289, out a5_290, out a7_291, out s2_292, out s3_293, out s4_72, out s5_294, out s6_295, out s7_296, out s8_297, out s9_298, out s10_299, out s11_300, out t4_301)
	word32 s0_82 = Mem26[a1_61 + 20<i32>:word32]
	word32 s5_102
	word32 a3_148
	word32 s1_302
	word32 a0_303
	word32 a1_304
	word32 a2_305
	word32 a3_306
	word32 a4_307
	word32 a5_308
	word32 a7_309
	word32 s2_310
	word32 s3_311
	word32 s4_312
	word32 s6_313
	word32 s7_314
	word32 s8_315
	word32 s9_316
	word32 s10_317
	word32 s11_318
	word32 t4_319
	word32 s1_320
	word32 a0_321
	word32 a1_322
	word32 a2_323
	word32 a3_324
	word32 a4_325
	word32 a5_326
	word32 a7_327
	word32 s2_328
	word32 s3_329
	word32 s4_330
	word32 s5_331
	word32 s6_332
	word32 s7_333
	word32 s8_334
	word32 s9_335
	word32 s10_336
	word32 s11_337
	word32 t4_338
	word32 s1_339
	word32 a0_340
	word32 a1_341
	word32 a2_342
	word32 a4_343
	word32 a5_344
	word32 a7_345
	word32 s2_346
	word32 s3_347
	word32 s4_348
	word32 s5_349
	word32 s6_350
	word32 s7_351
	word32 s8_352
	word32 s9_353
	word32 s10_354
	word32 s11_355
	word32 t4_356
	word32 a0_357
	word32 a1_358
	word32 a2_359
	word32 a4_360
	word32 a5_361
	word32 a7_362
	word32 s2_363
	word32 s3_364
	word32 s4_365
	word32 s5_366
	word32 s8_367
	word32 s9_368
	word32 s10_369
	word32 s11_370
	word32 t4_371
	ra = printf(printf(printf(printf(ra_66, s4_72 + -468<i32>, a2_62 >>u 8<u32> & 511<i32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_302, out a0_303, out a1_304, out a2_305, out a3_306, out a4_307, out a5_308, out a7_309, out s2_310, out s3_311, out s4_312, out s5_102, out s6_313, out s7_314, out s8_315, out s9_316, out s10_317, out s11_318, out t4_319), s5_102 + -408<i32>, CONVERT(Mem26[s0_82 + 28<i32>:uint16], uint16, word32), s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_320, out a0_321, out a1_322, out a2_323, out a3_324, out a4_325, out a5_326, out a7_327, out s2_328, out s3_329, out s4_330, out s5_331, out s6_332, out s7_333, out s8_334, out s9_335, out s10_336, out s11_337, out t4_338), 0x2307CE9C<32>, CONVERT(Mem26[s0_82 + 36<i32>:uint16], uint16, word32), s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_339, out a0_340, out a1_341, out a2_342, out a3_148, out a4_343, out a5_344, out a7_345, out s2_346, out s3_347, out s4_348, out s5_349, out s6_350, out s7_351, out s8_352, out s9_353, out s10_354, out s11_355, out t4_356), 0x2307CED8<32>, a3_148, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_183, out a0_357, out a1_358, out a2_359, out a3, out a4_360, out a5_361, out a7_362, out s2_363, out s3_364, out s4_365, out s5_366, out s6_190, out s7_191, out s8_367, out s9_368, out s10_369, out s11_370, out t4_371)
l23056C9E:
	0<32> = dwArg0128
l23056CBA_thunk_printf:
	word32 a3_212
	word32 s1_372
	word32 a0_373
	word32 a1_374
	word32 a2_375
	word32 a4_376
	word32 a5_377
	word32 a7_378
	word32 s2_379
	word32 s3_380
	word32 s4_381
	word32 s5_382
	word32 s6_383
	word32 s7_384
	word32 s8_385
	word32 s9_386
	word32 s10_387
	word32 s11_388
	word32 t4_389
	word32 ra_215 = printf(ra, 0x2307CEEC<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_372, out a0_373, out a1_374, out a2_375, out a3_212, out a4_376, out a5_377, out a7_378, out s2_379, out s3_380, out s4_381, out s5_382, out s6_383, out s7_384, out s8_385, out s9_386, out s10_387, out s11_388, out t4_389)
	s0Out = dwArgE4
	a3Out = a3_212
	return ra_215
helper_record_dump_exit:


void helper_record_rc_rf_states(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      helper_record_all_states
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
helper_record_rc_rf_states_entry:
l23056D40:
	Mem10[0x40001220<32>:word32] = Mem0[0x40001220<32>:int32] & 0xFFFFFFF<32> | 0x10000000<32>
	Mem17[0x40001220<32>:word32] = Mem10[0x40001220<32>:int32] & 0xFFFFFFF<32> | 0x20000000<32>
	word32 a5_18 = Mem17[0x40001224<32>:int32]
	Mem23[a5_18 >>u 0x1C<u32> & 7<32>:word32] = a0
	Mem26[a5_18 >>u 25<i32> & 7<32>:word32] = a1
	return
helper_record_rc_rf_states_exit:


word32 helper_record_all_states(word32 a0, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_reset
// MayUse:  a0:[0..31] Stack +0038:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
helper_record_all_states_entry:
l23056D84:
	word32 a5_8 = CONVERT(Mem5[0x4200E3A0<32>:byte], byte, word32)
	word32 a3_19 = Mem17[0x44B00120<32>:int32]
	Mem23[a0 + 4<i32>:word32] = a5_8 + 0x42016724<32>
	Mem26[a3_19:word32] = a5_8 + 0x42016724<32>
	helper_record_rc_rf_states(a5_8 + 0x4201672C<32>, a5_8 + 0x42016730<32>)
	Mem35[Mem26[0x44B00500<32>:int32] + 16<i32>:word32] = a5_8 + 0x42016724<32>
	Mem37[Mem35[0x44B00504<32>:int32] + 20<i32>:word32] = a5_8 + 0x42016724<32>
	Mem41[0x44B00510<32>:word32] = Mem37[0x44B00510<32>:int32] & -256<i32> | 49<i32>
	Mem45[0x44B00510<32>:word32] = Mem41[0x44B00510<32>:int32] & 0xF00000FF<32>
	Mem47[Mem45[0x44B0050C<32>:int32] + 24<i32>:word32] = a5_8 + 0x42016724<32>
	Mem51[0x44B00510<32>:word32] = Mem47[0x44B00510<32>:int32] & -256<i32> | 11<i32>
	Mem57[0x44B00510<32>:word32] = Mem51[0x44B00510<32>:int32] & 0xF00000FF<32> | 0x2FFFF00<32>
	Mem60[Mem57[0x44B0050C<32>:int32] + 28<i32>:word32] = a5_8 + 0x42016724<32>
	Mem62[0x3AE<32>:word32] = 0x44900000<32>
	word32 a4_63 = Mem62[930<i32>:word32]
	Mem66[0x7C<32>:word32] = a4_63
	Mem70[0x400000D0<32>:word32] = 4<32>
	Mem73[0x400000D4<32>:word32] = 0x40000004<32>
	Mem77[0x400000D8<32>:word32] = 0x80000004<32>
	Mem81[0x400000DC<32>:word32] = 0xC0000004<32>
	Mem84[0x400000E0<32>:word32] = Mem81[0x400000E0<32>:int32] & 0xFFFFFFFE<32>
	word32 a3_85 = Mem84[0x400000E0<32>:int32]
	Mem88[a5_8 + 0x42016746<32>:word16] = SLICE(a3_85 >>u 1<i32>, word16, 0)
	Mem90[a5_8 + 0x42016744<32>:word16] = SLICE(a3_85 >>u 0x11<u32>, word16, 0)
	Mem92[0xFFFB7D<32>:word32] = a4_63
	Mem95[0x400000E0<32>:word32] = Mem92[0x400000E0<32>:int32] & 0xFFFFFFFE<32>
	word32 a5_96 = Mem95[0x400000E0<32>:int32]
	Mem99[a5_8 + 0x42016748<32>:word16] = SLICE(a5_96 >>u 1<i32>, word16, 0)
	word32 a5_100 = CONVERT(Mem99[0x4200E3A0<32>:byte], byte, word32)
	Mem101[a5_8 + 0x4201674A<32>:word16] = SLICE(a5_96 >>u 0x11<u32>, word16, 0)
	Mem106[0x4200E3A0<32>:byte] = SLICE(a5_100 + 1<32> & 0xF<32>, byte, 0)
	0<32> = dwArg38
	return a5_96 >>u 0x11<u32>
helper_record_all_states_exit:


word32 rf_fsm_ctrl_en_setf(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_coex_force_to
//      rf_set_channel
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
rf_fsm_ctrl_en_setf_entry:
l23056EC6:
	word32 a4_5 = Mem0[a5 + 4<i32>:word32]
	Mem10[(a0 << 1<i32> | a5 & 0xFFFFFFFD<32>) + 4<i32>:word32] = a4_5
	a5Out = a5 & 0xFFFFFFFD<32>
	return a4_5
rf_fsm_ctrl_en_setf_exit:


word32 rf_gc_tbb_setf(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_config_power_ble
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_gc_tbb_setf_entry:
l23056ED6:
	Mem14[(a0 << 20<i32> & 0x1F00000<32> | a5 & 0xFE0FFFFF<32>) + 72<i32>:word32] = Mem0[a5 + 72<i32>:word32]
	return a5 & 0xFE0FFFFF<32>
rf_gc_tbb_setf_exit:


void rf_gc_tmx_setf(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_config_power_ble
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_gc_tmx_setf_entry:
l23056EF2:
	Mem14[(a0 << 16<i32> & 0x70000<32> | a5 & 0xFFF8FFFF<32>) + 72<i32>:word32] = Mem0[a5 + 72<i32>:word32]
	return
rf_gc_tmx_setf_exit:


word32 rf_pa_ib_fix_setf(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_config_power_ble
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_pa_ib_fix_setf_entry:
l23056F0E:
	Mem12[(a0 << 16<i32> | a5 & 0xEFFFFFFF<32>) + 100<i32>:word32] = Mem0[a5 + 100<i32>:word32]
	return a5 & 0xEFFFFFFF<32>
rf_pa_ib_fix_setf_exit:


word32 rf_pa_vbcas_setf(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_config_power_ble
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_pa_vbcas_setf_entry:
l23056F22:
	Mem12[(a0 << 12<i32> | a5 & 0xF8FFFFFF<32>) + 100<i32>:word32] = Mem0[a5 + 100<i32>:word32]
	return a5 & 0xF8FFFFFF<32>
rf_pa_vbcas_setf_exit:


word32 rf_pa_vbcore_setf(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_config_power_ble
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_pa_vbcore_setf_entry:
l23056F36:
	Mem12[(a0 << 8<i32> | a5 & 0xFF0000FF<32>) + 100<i32>:word32] = Mem0[a5 + 100<i32>:word32]
	return a5 & 0xFF0000FF<32>
rf_pa_vbcore_setf_exit:


word32 rf_tmx_cs_setf(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_config_power_ble
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a5
// Trashed: a0 a4 a5
// Preserved: sp
rf_tmx_cs_setf_entry:
l23056F4C:
	Mem9[(a0 | a5 & 0xFFFFFFF8<32>) + 108<i32>:word32] = Mem0[a5 + 108<i32>:word32]
	return a5 & 0xFFFFFFF8<32>
rf_tmx_cs_setf_exit:


word32 rf_fsm_st_dbg_en_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rf_set_channel
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a4 a5
// Preserved: sp
rf_fsm_st_dbg_en_setf_entry:
l23056F5A:
	word32 a5_5 = Mem0[0x4000126C<32>:int32]
	Mem10[0x4000126C<32>:word32] = a0 << 3<i32> | a5_5 & 0xFFFFFFF7<32>
	return a5_5 & 0xFFFFFFF7<32>
rf_fsm_st_dbg_en_setf_exit:


void rf_tx_dvga_gain_qdb_gc3_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc3_setf_entry:
l23056F6E:
	Mem14[0x40001630<32>:word32] = a0 << 24<i32> & 0x7F000000<32> | Mem0[0x40001630<32>:int32] & 0x80FFFFFF<32>
	return
rf_tx_dvga_gain_qdb_gc3_setf_exit:


void rf_tx_dvga_gain_qdb_gc2_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc2_setf_entry:
l23056F8E:
	Mem14[0x40001630<32>:word32] = a0 << 16<i32> & 0x7F0000<32> | Mem0[0x40001630<32>:int32] & 0xFF80FFFF<32>
	return
rf_tx_dvga_gain_qdb_gc2_setf_exit:


void rf_tx_dvga_gain_qdb_gc1_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc1_setf_entry:
l23056FAE:
	Mem15[0x40001630<32>:word32] = a0 << 8<i32> & 0x7FFFF00<32> | Mem0[0x40001630<32>:int32] & 0xF80000FF<32>
	return
rf_tx_dvga_gain_qdb_gc1_setf_exit:


void rf_tx_dvga_gain_qdb_gc0_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc0_setf_entry:
l23056FD0:
	Mem10[0x40001630<32>:word32] = a0 & 127<i32> | Mem0[0x40001630<32>:int32] & -128<i32>
	return
rf_tx_dvga_gain_qdb_gc0_setf_exit:


void rf_tx_dvga_gain_qdb_gc7_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc7_setf_entry:
l23056FE8:
	Mem14[0x40001634<32>:word32] = a0 << 24<i32> & 0x7F000000<32> | Mem0[0x40001634<32>:int32] & 0x80FFFFFF<32>
	return
rf_tx_dvga_gain_qdb_gc7_setf_exit:


void rf_tx_dvga_gain_qdb_gc6_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc6_setf_entry:
l23057008:
	Mem14[0x40001634<32>:word32] = a0 << 16<i32> & 0x7F0000<32> | Mem0[0x40001634<32>:int32] & 0xFF80FFFF<32>
	return
rf_tx_dvga_gain_qdb_gc6_setf_exit:


void rf_tx_dvga_gain_qdb_gc5_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc5_setf_entry:
l23057028:
	Mem15[0x40001634<32>:word32] = a0 << 8<i32> & 0x7FFFF00<32> | Mem0[0x40001634<32>:int32] & 0xF80000FF<32>
	return
rf_tx_dvga_gain_qdb_gc5_setf_exit:


void rf_tx_dvga_gain_qdb_gc4_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc4_setf_entry:
l2305704A:
	Mem10[0x40001634<32>:word32] = a0 & 127<i32> | Mem0[0x40001634<32>:int32] & -128<i32>
	return
rf_tx_dvga_gain_qdb_gc4_setf_exit:


void rf_tx_dvga_gain_qdb_gc11_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc11_setf_entry:
l23057062:
	Mem14[0x40001638<32>:word32] = a0 << 24<i32> & 0x7F000000<32> | Mem0[0x40001638<32>:int32] & 0x80FFFFFF<32>
	return
rf_tx_dvga_gain_qdb_gc11_setf_exit:


void rf_tx_dvga_gain_qdb_gc10_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc10_setf_entry:
l23057082:
	Mem14[0x40001638<32>:word32] = a0 << 16<i32> & 0x7F0000<32> | Mem0[0x40001638<32>:int32] & 0xFF80FFFF<32>
	return
rf_tx_dvga_gain_qdb_gc10_setf_exit:


void rf_tx_dvga_gain_qdb_gc9_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc9_setf_entry:
l230570A2:
	Mem15[0x40001638<32>:word32] = a0 << 8<i32> & 0x7FFFF00<32> | Mem0[0x40001638<32>:int32] & 0xF80000FF<32>
	return
rf_tx_dvga_gain_qdb_gc9_setf_exit:


void rf_tx_dvga_gain_qdb_gc8_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc8_setf_entry:
l230570C4:
	Mem10[0x40001638<32>:word32] = a0 & 127<i32> | Mem0[0x40001638<32>:int32] & -128<i32>
	return
rf_tx_dvga_gain_qdb_gc8_setf_exit:


word32 rf_tx_dvga_gain_qdb_gc15_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc15_setf_entry:
l230570DC:
	word32 a5_5 = Mem0[0x4000163C<32>:int32]
	Mem14[0x4000163C<32>:word32] = a0 << 24<i32> & 0x7F000000<32> | a5_5 & 0x80FFFFFF<32>
	return a5_5 & 0x80FFFFFF<32>
rf_tx_dvga_gain_qdb_gc15_setf_exit:


void rf_tx_dvga_gain_qdb_gc14_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc14_setf_entry:
l230570FC:
	Mem14[0x4000163C<32>:word32] = a0 << 16<i32> & 0x7F0000<32> | Mem0[0x4000163C<32>:int32] & 0xFF80FFFF<32>
	return
rf_tx_dvga_gain_qdb_gc14_setf_exit:


void rf_tx_dvga_gain_qdb_gc13_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc13_setf_entry:
l2305711C:
	Mem15[0x4000163C<32>:word32] = a0 << 8<i32> & 0x7FFFF00<32> | Mem0[0x4000163C<32>:int32] & 0xF80000FF<32>
	return
rf_tx_dvga_gain_qdb_gc13_setf_exit:


void rf_tx_dvga_gain_qdb_gc12_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc12_setf_entry:
l2305713E:
	Mem10[0x4000163C<32>:word32] = a0 & 127<i32> | Mem0[0x4000163C<32>:int32] & -128<i32>
	return
rf_tx_dvga_gain_qdb_gc12_setf_exit:


word32 wait_us(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _print_channel_info
//      rfc_init
//      rfc_coex_force_to
//      rf_set_channel
// MayUse:  a5:[0..31]
// LiveOut: a4
// Trashed: a0 a2 a4
// Preserved: sp
wait_us_entry:
l23057156:
l2305715C:
	branch a5 != 0<32> l2305715C
l23057166:
	return a5 + -1<i32>
wait_us_exit:


word32 rf_pa_etb_en_setf.constprop.16(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_config_power_ble
// MayUse:  a5:[0..31]
// LiveOut: a5
// Trashed: a4 a5
// Preserved: sp
rf_pa_etb_en_setf.constprop.16_entry:
l2305716A:
	Mem7[(a5 & 0xFFFFFFF7<32>) + 100<i32>:word32] = Mem0[a5 + 100<i32>:word32]
	return a5 & 0xFFFFFFF7<32>
rf_pa_etb_en_setf.constprop.16_exit:


word32 rf_pa_half_on_setf.constprop.17(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_config_power_ble
// MayUse:  a5:[0..31]
// LiveOut: a5
// Trashed: a3 a4 a5
// Preserved: sp
rf_pa_half_on_setf.constprop.17_entry:
l23057176:
	word32 a5_10 = a5 & 0xF7FFFFFF<32> | 0x8000000<32>
	Mem11[a5_10 + 100<i32>:word32] = Mem0[a5 + 100<i32>:word32]
	return a5_10
rf_pa_half_on_setf.constprop.17_exit:


void _print_channel_info(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a0 a2 a4
// Preserved: s0 sp
_print_channel_info_entry:
l2305718A:
	word32 s0_10 = 8<32>
l23057192:
	wait_us(a5)
	s0_10 = s0_10 + 0xFFFFFFFF<32>
	branch s0_10 != 0<32> l23057192
l2305719E:
	word32 s0_16 = 8<32>
l230571A0:
	wait_us(a5)
	s0_16 = s0_16 + 0xFFFFFFFF<32>
	branch s0_16 != 0<32> l230571A0
l230571AC:
	return
_print_channel_info_exit:


word32 rfc_init(word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s6, word32 s7, word32 fflags, word32 frm, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg58, word32 dwArg64, word32 dwArg84, word32 dwArg88, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_controller_init
//      wifi_main
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] s0:[0..31] s1:[32..63] s2:[0..31] s3:[0..31] s6:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0084:[0..31] Stack +0088:[0..31]
// LiveOut: a4 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa5 fflags frm fs0 fs1 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
rfc_init_entry:
	word32 dwLoc58 = SLICE(qwLoc58, word32, 0)
	word32 dwLoc14 = SLICE(qwLoc18, word32, 32)
l230571B4:
	word32 a0_49
	Mem37[0x40001220<32>:word32] = Mem31[0x40001220<32>:int32] & 0xFBFFFFFF<32>
	Mem44[0x40001220<32>:word32] = Mem37[0x40001220<32>:int32] & 0xF7FFFFFF<32> | 0x8000000<32>
	word32 dwLoc44_824 = SLICE(s1, word32, 32)
	branch a0 == 0x1E84800<32> l23057256
l23057256:
	a0_49 = 2<32>
l2305720C:
	branch a0 >u 0x1E84800<32> l23057230
l23057230:
	branch a0 == 0x2625A00<32> l2305722C
l2305723C:
	a0_49 = 5<32>
	branch a0 == 0x3197500<32> l23057258
l2305724A:
	branch a0 != 0x249F000<32> l2305722C
l23057252:
	a0_49 = 3<32>
l23057210:
	a0_49 = 0<32>
	branch a0 == 0x16E3600<32> l23057258
l2305721E:
	a0_49 = 1<32>
	branch a0 == 0x18CBA80<32> l23057258
l2305722C:
	a0_49 = 4<32>
l23057258:
	word32 fa0_136
	rf_pri_xtalfreq(a0_49)
	word32 fflags_97
	word32 frm_98
	word32 s1_100
	word32 s2_103
	word32 s0_119
	word32 ra_99 = rf_pri_init(a0, CONVERT(CONVERT(Mem44[0x4200E3A1<32>:byte], byte, word32) <u 1<i32>, bool, word32), 1<32>, 0x4200E000<32>, s6, fflags, frm, dwLoc60, dwLoc5C, dwLoc58, dwLoc44_824, s2, dwLoc30, dwLoc2C, dwLoc28, dwLoc14, dwLoc10, dwLoc0C, dwLoc08, dwArg18, dwArg1C, dwArg28, s7, dwArg58, dwArg88, s0, out s0_119, out s1_100, out s2_103, out fflags_97, out frm_98)
	Mem121[s0_119:byte] = 1<8>
	word32 a1_126
	Mem132[s2_103 + 3232<i32>:word32] = __floatunsidf(s1_100 >>u 0xF4240<32>, out a1_126)
	Mem133[s2_103 + 3236<i32>:word32] = a1_126
	branch s1_100 == 0x2625A00<32> l23057798
l23057798:
	fa0_136 = Mem133[0x2307D7D0<32>:real32]
l230572A2:
	fa0_136 = Mem133[0x2307D7D4<32>:real32]
l230572AA:
	Mem153[0x400011C0<32>:word32] = CONVERT(fa0_136, word32, uint32) & 0xFFFFFF<32> | Mem133[0x400011C0<32>:int32] & 0xFF000000<32>
	word32 fs0_140 = CONVERT(s1_100 >>u 0xF4240<32>, word32, real32)
	word32 fs1_161 = Mem153[0x2307D7E0<32>:real32]
	word32 a0_157 = Mem153[0x400011C4<32>:int32]
	word32 a1_175
	word32 a1_181
	word32 a4_1020
	word32 a0_189 = __fixunsdfsi(ra_99, __adddf3(ra_99, __extendsfdf2(ra_99, fa0_136 * Mem153[0x2307D7D8<32>:real32] / Mem153[0x2307D7DC<32>:real32] / fs0_140 * fs1_161, fflags_97, frm_98, out a1_175), a1_175, Mem153[0x2307CDE8<32>:int32], Mem153[0x2307CDEC<32>:int32], fflags_97, frm_98, out a1_181), a1_181, fflags_97, frm_98, out a4_1020)
	word32 fa0_199 = Mem153[0x2307D7E4<32>:real32] / fs0_140
	Mem201[0x400011C4<32>:word32] = CONVERT(SLICE(a0_189, word29, 0), word29, word32) | a0_157 & 0xE0000000<32>
	word32 a0_202 = Mem201[0x400011C8<32>:int32]
	word32 a1_208
	word32 a1_214
	word32 a4_1021
	word32 a0_222 = __fixunsdfsi(ra_99, __adddf3(ra_99, __extendsfdf2(ra_99, fa0_199 * fs1_161, fflags_97, frm_98, out a1_208), a1_208, Mem201[0x2307CDE8<32>:int32], Mem201[0x2307CDEC<32>:int32], fflags_97, frm_98, out a1_214), a1_214, fflags_97, frm_98, out a4_1021)
	word32 fa0_232 = Mem201[0x2307D7E8<32>:real32] / fs0_140
	Mem233[0x400011C8<32>:word32] = a0_222 & 0xFFFFF<32> | a0_202 & 0xFFF00000<32>
	word32 a1_239
	word32 a1_246
	word32 a4_1022
	Mem263[0x400011CC<32>:word32] = __fixunsdfsi(ra_99, __adddf3(ra_99, __extendsfdf2(ra_99, fa0_232 * fs1_161, fflags_97, frm_98, out a1_239), a1_239, Mem233[0x2307CDE8<32>:int32], Mem233[0x2307CDEC<32>:int32], fflags_97, frm_98, out a1_246), a1_246, fflags_97, frm_98, out a4_1022) & 0xFFFFF<32> | Mem233[0x400011CC<32>:int32] & 0xFFF00000<32>
	word32 s1_166 = 0xFFF964<32>
	word32 s5_235 = 0<32>
	word32 s4_244 = 0<32>
l230573B6:
	word32 a0_271 = rf_pri_get_vco_freq_cw(ra_99, s1_166, fflags_97, frm_98)
	word32 s2_281 = a0_271
	word32 a0_283 = rf_pri_get_vco_idac_cw(ra_99, s1_166, fflags_97, frm_98)
	branch s1_166 != 0xFFF964<32> l230573CA
l230573C8:
	s2_281 = a0_271 + 1<32>
l230573CA:
	word32 a0_301 = s2_281 << 8<i32> | a0_283
	branch (s4_244 & 1<i32>) == 0<32> l230577A2
l230577A2:
	s5_235 = a0_301
l230573D8:
	s5_235 = s5_235 | a0_301 << 16<i32>
	Mem312[(s4_244 >> 1<u32> << 2<i32>) + 0x4000113C<32>:word32] = s5_235
l230573EA:
	branch s1_166 != 0xFFF9B4<32> l230573FA
l230573EE:
	Mem324[(s4_244 >> 1<u32> << 2<i32>) + 0x4000113C<32>:word32] = s5_235
l230573FA:
	s1_166 = s1_166 + 4<32>
	s4_244 = s4_244 + 1<32>
	branch s1_166 != 0xFFF9B8<32> l230573B6
l23057402:
	word32 a5_1023
	word32 a0_342 = rf_pri_query_txgain_table(0<32>, fp + -88<i32>, fp + -84<i32>, out a5_1023)
	word32 a5_349 = Mem345[0x40001640<32>:int32]
	Mem358[dwArg84 + 1600<i32>:word32] = a5_349 & 7<32> | a5_349 & -8<i32>
	rf_tx_dvga_gain_qdb_gc0_setf(a0_342)
	word32 a5_1024
	word32 a0_368 = rf_pri_query_txgain_table(1<32>, fp + -88<i32>, fp + -84<i32>, out a5_1024)
	word32 a5_371 = Mem358[dwArg84 + 1600<i32>:int32]
	Mem381[dwArg84 + 1600<i32>:word32] = a5_371 << 4<i32> & 112<i32> | a5_371 & -113<i32>
	rf_tx_dvga_gain_qdb_gc1_setf(a0_368)
	word32 a5_1025
	word32 a0_392 = rf_pri_query_txgain_table(2<32>, fp + -88<i32>, fp + -84<i32>, out a5_1025)
	word32 a5_395 = Mem381[dwArg84 + 1600<i32>:int32]
	Mem409[dwArg84 + 1600<i32>:word32] = a5_395 << 8<i32> & 1792<i32> | a5_395 & -1793<i32>
	rf_tx_dvga_gain_qdb_gc2_setf(a0_392)
	word32 a5_1026
	word32 a0_418 = rf_pri_query_txgain_table(3<32>, fp + -88<i32>, fp + -84<i32>, out a5_1026)
	word32 a5_421 = Mem409[dwArg84 + 1600<i32>:int32]
	Mem427[dwArg84 + 1600<i32>:word32] = a5_421 << 12<i32> & 0x7000000<32> | a5_421 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc3_setf(a0_418)
	word32 a5_1027
	word32 a0_436 = rf_pri_query_txgain_table(4<32>, fp + -88<i32>, fp + -84<i32>, out a5_1027)
	word32 a5_439 = Mem427[dwArg84 + 1600<i32>:int32]
	Mem445[dwArg84 + 1600<i32>:word32] = a5_439 << 16<i32> & 0x70000<32> | a5_439 & 0xFFF8FFFF<32>
	rf_tx_dvga_gain_qdb_gc4_setf(a0_436)
	word32 a5_1028
	word32 a0_453 = rf_pri_query_txgain_table(5<32>, fp + -88<i32>, fp + -84<i32>, out a5_1028)
	word32 a5_456 = Mem445[dwArg84 + 1600<i32>:int32]
	Mem462[dwArg84 + 1600<i32>:word32] = a5_456 << 20<i32> & 0x700000<32> | a5_456 & 0xFF8FFFFF<32>
	rf_tx_dvga_gain_qdb_gc5_setf(a0_453)
	word32 a5_1029
	word32 a0_471 = rf_pri_query_txgain_table(6<32>, fp + -88<i32>, fp + -84<i32>, out a5_1029)
	word32 a5_474 = Mem462[dwArg84 + 1600<i32>:int32]
	Mem480[dwArg84 + 1600<i32>:word32] = a5_474 << 24<i32> & 0x7000000<32> | a5_474 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc6_setf(a0_471)
	word32 a5_491
	word32 a0_489 = rf_pri_query_txgain_table(7<32>, fp + -88<i32>, fp + -84<i32>, out a5_491)
	Mem498[dwArg84 + 1600<i32>:word32] = a5_491 << 28<i32> & 0x70000000<32> | Mem480[dwArg84 + 1600<i32>:int32] & 0x8FFFFFFF<32>
	rf_tx_dvga_gain_qdb_gc7_setf(a0_489)
	word32 a5_1030
	word32 a0_507 = rf_pri_query_txgain_table(8<32>, fp + -88<i32>, fp + -84<i32>, out a5_1030)
	word32 a5_510 = Mem498[dwArg84 + 1604<i32>:int32]
	Mem515[dwArg84 + 1604<i32>:word32] = a5_510 & 7<32> | a5_510 & -8<i32>
	rf_tx_dvga_gain_qdb_gc8_setf(a0_507)
	word32 a5_1031
	word32 a0_523 = rf_pri_query_txgain_table(9<32>, fp + -88<i32>, fp + -84<i32>, out a5_1031)
	word32 a5_526 = Mem515[dwArg84 + 1604<i32>:int32]
	Mem532[dwArg84 + 1604<i32>:word32] = a5_526 << 4<i32> & 112<i32> | a5_526 & -113<i32>
	rf_tx_dvga_gain_qdb_gc9_setf(a0_523)
	word32 a5_1032
	word32 a0_541 = rf_pri_query_txgain_table(0xA<32>, fp + -88<i32>, fp + -84<i32>, out a5_1032)
	word32 a2_544 = Mem532[dwArg84 + 1604<i32>:int32]
	Mem550[dwArg24 + 1604<i32>:word32] = a2_544 << 8<i32> & 1792<i32> | a2_544 & -1793<i32>
	rf_tx_dvga_gain_qdb_gc10_setf(a0_541)
	word32 a5_1033
	word32 a0_559 = rf_pri_query_txgain_table(0xB<32>, fp + -88<i32>, fp + -84<i32>, out a5_1033)
	word32 a2_562 = Mem550[dwArg24 + 1604<i32>:int32]
	Mem568[dwArg24 + 1604<i32>:word32] = a2_562 << 12<i32> & 0x7000000<32> | a2_562 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc11_setf(a0_559)
	word32 a5_1034
	word32 a0_577 = rf_pri_query_txgain_table(0xC<32>, fp + -88<i32>, fp + -84<i32>, out a5_1034)
	word32 a2_580 = Mem568[dwArg24 + 1604<i32>:int32]
	Mem586[dwArg24 + 1604<i32>:word32] = a2_580 << 16<i32> & 0x70000<32> | a2_580 & 0xFFF8FFFF<32>
	rf_tx_dvga_gain_qdb_gc12_setf(a0_577)
	word32 a5_1035
	word32 a0_594 = rf_pri_query_txgain_table(0xD<32>, fp + -88<i32>, fp + -84<i32>, out a5_1035)
	word32 a3_597 = Mem586[dwArg24 + 1604<i32>:int32]
	Mem603[s3 + 1604<i32>:word32] = a3_597 << 20<i32> & 0x700000<32> | a3_597 & 0xFF8FFFFF<32>
	rf_tx_dvga_gain_qdb_gc13_setf(a0_594)
	word32 a5_1036
	word32 a0_612 = rf_pri_query_txgain_table(0xE<32>, fp + -88<i32>, fp + -84<i32>, out a5_1036)
	word32 a4_615 = Mem603[s3 + 1604<i32>:int32]
	Mem621[dwArg64 + 1604<i32>:word32] = a4_615 << 24<i32> & 0x7000000<32> | a4_615 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc14_setf(a0_612)
	word32 a5_1037
	word32 a0_630 = rf_pri_query_txgain_table(0xF<32>, fp + -88<i32>, fp + -84<i32>, out a5_1037)
	word32 a5_633 = Mem621[dwArg64 + 1604<i32>:int32]
	Mem639[dwArg84 + 1604<i32>:word32] = a5_633 << 28<i32> & 0x70000000<32> | a5_633 & 0x8FFFFFFF<32>
	word32 a5_645 = rf_tx_dvga_gain_qdb_gc15_setf(a0_630)
	word32 s0_646 = Mem639[a5_645 + 4<i32>:word32]
	Mem650[(a5_645 & 0xFF0007FF<32>) + 4<i32>:word32] = s0_646
	rf_fsm_st_dbg_en_setf(0<32>)
	word32 a5_655 = Mem650[s0_646 + 616<i32>:int32]
	Mem659[s0_646 + 616<i32>:word32] = a5_655 & 0xF0000000<32> | 0x1000040<32>
	word32 a5_1038
	word32 a4_661 = rf_fsm_ctrl_en_setf(1<32>, a5_655 & 0xF0000000<32>, out a5_1038)
	word32 s0_663 = Mem659[a4_661 + 12<i32>:word32]
	Mem667[(a4_661 | 4<i32>) + 12<i32>:word32] = s0_663
	Mem672[s0_663 + 1536<i32>:word32] = Mem667[s0_663 + 1536<i32>:int32] | 0x80000000<32>
	word32 a4_673 = Mem672[s0_663 + 1536<i32>:int32]
	Mem675[s0_663 + 1536<i32>:word32] = a4_673 & 0x80FFFFFF<32>
	word32 a4_677 = a4_673 & 0x80FFFFFF<32> | 32<i32>
	Mem678[a4_677 + 12<i32>:word32] = Mem675[(a4_673 & 0x80FFFFFF<32>) + 12<i32>:word32]
	word32 s0_679 = Mem678[a4_677 + 12<i32>:word32]
	Mem681[(a4_677 | 2<i32>) + 12<i32>:word32] = s0_679
	Mem685[0x44C0C218<32>:word32] = Mem681[0x44C0C218<32>:int32] & 0xF0000000<32>
	Mem688[0x44C03030<32>:word32] = 0<32>
	Mem690[0xA027FB3<32>:word32] = 0x44C03000<32>
	Mem693[0x2328234F<32>:word32] = 0x44C03000<32>
	Mem696[0x7F020A53<32>:word32] = 0x44C03000<32>
	Mem698[0xBF<32>:word32] = 0x44C03000<32>
	word32 a5_699 = Mem698[s0_679 + 544<i32>:int32]
	Mem703[s0_679 + 544<i32>:word32] = a5_699 & 0xF7FFFFFF<32>
	Mem707[(a5_699 & 0xF7FFFFFF<32> & 0xFFFFFFF3<32>) + 4<i32>:word32] = Mem703[(a5_699 & 0xF7FFFFFF<32>) + 4<i32>:word32]
	word32 a5_708 = Mem707[0x4000E41C<32>:int32]
	Mem710[0x4000E41C<32>:word32] = a5_708 & -65<i32>
	wait_us(a5_708 & -65<i32>)
	word32 s0_714 = Mem710[(a5_708 & -65<i32>) + 4<i32>:word32]
	word32 a5_716 = a5_708 & -65<i32> & 0xFFFFFFF3<32>
	Mem718[(a5_716 | 4<i32>) + 4<i32>:word32] = s0_714
	word32 a4_721 = wait_us(a5_716 | 4<i32>)
	Mem724[0x4000E41C<32>:word32] = Mem718[0x4000E41C<32>:int32] | 64<i32>
	s0Out = s0_714
	s1Out = dwArg28
	a4Out = a4_721
	s2Out = a5_633 & 0x8FFFFFFF<32>
	return dwArg68
rfc_init_exit:


void rfc_rxdfe_set_notch0(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
rfc_rxdfe_set_notch0_entry:
l230577A6:
	Mem11[0x40001700<32>:word32] = a1 & 7<32> | Mem0[0x40001700<32>:int32] & 0xFFFFFFF8<32>
	Mem21[0x40001700<32>:word32] = a2 << 8<i32> & 0xFFFFFFF<32> | Mem11[0x40001700<32>:int32] & 0xF00000FF<32>
	Mem28[0x40001700<32>:word32] = a0 << 6<i32> & 64<i32> | Mem21[0x40001700<32>:int32] & -65<i32>
	return
rfc_rxdfe_set_notch0_exit:


word32 rfc_config_channel(word32 ra, word32 a0, word32 s2, word32 fflags, word32 frm, ptr32 & s1Out, ptr32 & s4Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s2:[24..31]
// LiveOut: fflags frm ra s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
rfc_config_channel_entry:
l230577E8:
	word32 a5_13 = Mem12[0x40001228<32>:int32]
	Mem17[0x40001228<32>:word32] = a5_13 | 8<i32>
	word32 a5_22 = a5_13 | 8<i32> | 64<i32>
	Mem23[a5_22 + 12<i32>:word32] = Mem17[(a5_13 | 8<i32>) + 12<i32>:word32]
	Mem26[(a5_22 | 512<i32>) + 12<i32>:word32] = Mem23[a5_22 + 12<i32>:word32]
	word32 s0_27 = Mem26[(a5_22 | 512<i32>) + 12<i32>:word32]
	Mem29[(a5_22 | 512<i32> | 1<i32>) + 12<i32>:word32] = s0_27
	Mem35[s0_27 + 612<i32>:word32] = CONVERT(SLICE(a0, word12, 0), word12, word32) | Mem29[s0_27 + 612<i32>:int32] & 0xFF000000<32>
	word32 a5_40 = Mem35[s0_27 + 616<i32>:int32] & 0xDFFFFFFF<32> | 0x20000<32>
	Mem41[s0_27 + 616<i32>:word32] = a5_40
	wait_us(a5_40)
	word32 a5_45 = Mem41[s0_27 + 616<i32>:int32]
	Mem48[s0_27 + 616<i32>:word32] = a5_45 & 0xDFFFFFFF<32>
	wait_us(a5_45)
	word32 a5_55
	rf_fsm_ctrl_en_setf(0<32>, a5_45, out a5_55)
	wait_us(a5_55)
	word32 a5_63
	rf_fsm_ctrl_en_setf(1<32>, a5_55, out a5_63)
	wait_us(a5_63)
	word32 a5_71 = Mem48[s0_27 + 620<i32>:int32] & 0xFFFFFFF8<32> | 1<i32>
	Mem72[s0_27 + 620<i32>:word32] = a5_71
	wait_us(a5_71)
	wait_us(rf_fsm_st_dbg_en_setf(1<32>))
	word32 a5_87 = Mem72[s0_27 + 620<i32>:int32] & 0xFFFFFFF8<32> | 2<i32>
	Mem88[s0_27 + 620<i32>:word32] = a5_87
	wait_us(a5_87)
	word32 a5_95 = rf_fsm_st_dbg_en_setf(0<32>)
	wait_us(a5_95)
	_print_channel_info(a5_95)
	rf_pri_update_param(a0)
	word32 a1_122
	word32 a0_130
	word32 a1_131
	word32 fflags_145
	word32 frm_146
	word32 a0_161
	word32 a1_162
	word32 fflags_176
	word32 frm_177
	word32 s0_179
	word32 s1_180
	word32 s0_240
	word32 s1_241
	word32 s2_242
	word32 s3_243
	word32 a4_244
	word32 a5_245
	word32 a7_246
	word32 s2_247
	word32 s3_248
	word32 s4_249
	word32 s5_250
	word32 s6_251
	word32 s7_252
	word32 s8_253
	word32 s9_254
	word32 ra_178 = __muldf3(__divdf3(ra, __floatsidf(rf_pri_get_notch_param(a0, fp + 0xFFFFFFEB<32>, fp + 0xFFFFFFEC<32>), out a1_122), a1_122, Mem88[0x2307D7C0<32>:int32], Mem88[0x2307D7C4<32>:int32], fflags, frm, out s0_240, out s1_241, out a0_130, out a1_131, out s2_242, out s3_243, out fflags_145, out frm_146), a0_130, a1_131, Mem88[0x2307D7C8<32>:int32], Mem88[0x2307D7CC<32>:int32], fflags_145, frm_146, out s0_179, out s1_180, out a0_161, out a1_162, out a4_244, out a5_245, out a7_246, out s2_247, out s3_248, out s4_249, out s5_250, out s6_251, out s7_252, out s8_253, out s9_254, out fflags_176, out frm_177)
	word32 a1_193
	word32 a1_255
	word32 a3_256
	word32 a4_257
	word32 a5_258
	rfc_rxdfe_set_notch0(CONVERT(SLICE(s2, byte, 24), byte, word32), 1<32>, CONVERT(SLICE(__fixdfsi(ra_178, __adddf3(ra_178, a0_161, a1_162, Mem88[0x2307CDE8<32>:int32], Mem88[0x2307CDEC<32>:int32], fflags_176, frm_177, out a1_193), a1_193, fflags_176, frm_177, out a1_255, out a3_256, out a4_257, out a5_258), byte, 0), byte, int32))
	Mem220[s0_179 + 552<i32>:word32] = Mem88[s0_179 + 552<i32>:int32] & 0xFFFFFFF7<32>
	s1Out = s1_180
	s4Out = dwArg04
	fflagsOut = fflags_176
	frmOut = frm_177
	return ra_178
rfc_config_channel_exit:


void rfc_coex_force_to(word32 a0, word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      coex_wifi_rf_forece_enable
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s0 s8 t3
// Preserved: sp
rfc_coex_force_to_entry:
l2305792A:
	word32 a5_16
	rf_fsm_ctrl_en_setf(0<32>, a5, out a5_16)
	wait_us(a5_16)
	Mem31[0x40001220<32>:word32] = a1 << 26<i32> & 0x4000000<32> | Mem12[0x40001220<32>:int32] & 0xFBFFFFFF<32>
	Mem39[0x40001220<32>:word32] = CONVERT(a0 != 0<32>, bool, word32) << 27<i32> | Mem31[0x40001220<32>:int32] & 0xF7FFFFFF<32>
	wait_us(0x40001000<32>)
l23057986_thunk_rf_fsm_ctrl_en_setf:
	word32 a5_57
	rf_fsm_ctrl_en_setf(1<32>, 0x40001000<32>, out a5_57)
	return
rfc_coex_force_to_exit:


word32 rfc_config_power_ble(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_txpwr_dec
//      rf_txpwr_inc
//      rf_reset
//      ble_controller_set_tx_pwr
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
rfc_config_power_ble_entry:
l2305798A:
	branch a0 >u 0xF<32> l23057AFC
l23057AFC:
	return 0<32>
l23057990:
	word32 s0_121
	branch a0 > 3<32> l23057A28
l23057A28:
	branch a0 > 6<32> l23057A60
l23057A60:
	word32 s0_119
	branch a0 > 9<32> l23057A98
l23057A98:
	branch a0 > 0xB<32> l23057ACE
l23057ACE:
	rf_gc_tmx_setf(7<32>, rf_gc_tbb_setf(6<32>, rf_tmx_cs_setf(5<32>, rf_pa_etb_en_setf.constprop.16(rf_pa_vbcore_setf(9<32>, rf_pa_vbcas_setf(4<32>, rf_pa_half_on_setf.constprop.17(rf_pa_ib_fix_setf(1<32>, 0xB<32>))))))))
	s0_119 = a0 + 0xFFFFFFF1<32>
l23057AA0:
	rf_gc_tmx_setf(7<32>, rf_gc_tbb_setf(4<32>, rf_tmx_cs_setf(5<32>, rf_pa_etb_en_setf.constprop.16(rf_pa_vbcore_setf(9<32>, rf_pa_vbcas_setf(4<32>, rf_pa_half_on_setf.constprop.17(rf_pa_ib_fix_setf(1<32>, 0xB<32>))))))))
	s0_119 = a0 + 0xFFFFFFF4<32>
l23057A66:
	rf_gc_tmx_setf(7<32>, rf_gc_tbb_setf(3<32>, rf_tmx_cs_setf(5<32>, rf_pa_etb_en_setf.constprop.16(rf_pa_vbcore_setf(9<32>, rf_pa_vbcas_setf(4<32>, rf_pa_half_on_setf.constprop.17(rf_pa_ib_fix_setf(1<32>, 9<32>))))))))
	s0_119 = a0 + 0xFFFFFFF6<32>
l23057A94:
	s0_121 = s0_119 << 2<i32>
l23057A2E:
	rf_gc_tmx_setf(7<32>, rf_gc_tbb_setf(2<32>, rf_tmx_cs_setf(5<32>, rf_pa_etb_en_setf.constprop.16(rf_pa_vbcore_setf(9<32>, rf_pa_vbcas_setf(4<32>, rf_pa_half_on_setf.constprop.17(rf_pa_ib_fix_setf(1<32>, 6<32>))))))))
	s0_121 = (a0 << 2<i32>) + 0xFFFFFFE2<32>
l2305799E:
	rf_gc_tmx_setf(5<32>, rf_gc_tbb_setf(2<32>, rf_tmx_cs_setf(5<32>, rf_pa_etb_en_setf.constprop.16(rf_pa_vbcore_setf(9<32>, rf_pa_vbcas_setf(4<32>, rf_pa_half_on_setf.constprop.17(rf_pa_ib_fix_setf(1<32>, 3<32>))))))))
	s0_121 = (a0 << 2<i32>) + 0xFFFFFFEE<32>
l230579CE:
	word32 s0_199 = s0_121 + 0xFFFFFFFF<32>
	Mem204[0x40001648<32>:word32] = s0_199 & 127<i32> | Mem10[0x40001648<32>:int32] & -128<i32>
	Mem213[0x40001648<32>:word32] = s0_199 << 8<u32> & 0x7FFFF00<32> | Mem204[0x40001648<32>:int32] & 0xF80000FF<32>
	Mem222[0x40001648<32>:word32] = s0_199 << 16<i32> & 0x7F0000<32> | Mem213[0x40001648<32>:int32] & 0xFF80FFFF<32>
	return 1<32>
rfc_config_power_ble_exit:


word32 rfc_get_power_level(word32 a0, word32 a1, word32 a3, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_get_rf_gain_idx
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
rfc_get_power_level_entry:
l23057B00:
	word32 a1_10 = 0<32>
	branch a0 == 0<32> l23057B16
l23057B0C:
	a1_10 = 1<32>
	branch a0 == 1<32> l23057B16
l23057B14:
	a1_10 = 2<32>
l23057B16:
	word32 a3_21
	word32 a4_22
	word32 a0_28 = rf_pri_get_txgain_index(a1, a1_10, a3, out a3_21, out a4_22) << 2<i32>
	a3Out = a3_21
	a4Out = a4_22
	return a0_28
rfc_get_power_level_exit:


void rfc_apply_tx_dvga(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
rfc_apply_tx_dvga_entry:
l23057B22:
	rf_tx_dvga_gain_qdb_gc0_setf(CONVERT(Mem7[a0:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc1_setf(CONVERT(Mem7[a0 + 1<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc2_setf(CONVERT(Mem7[a0 + 2<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc3_setf(CONVERT(Mem7[a0 + 3<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc4_setf(CONVERT(Mem7[a0 + 4<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc5_setf(CONVERT(Mem7[a0 + 5<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc6_setf(CONVERT(Mem7[a0 + 6<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc7_setf(CONVERT(Mem7[a0 + 7<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc8_setf(CONVERT(Mem7[a0 + 8<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc9_setf(CONVERT(Mem7[a0 + 9<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc10_setf(CONVERT(Mem7[a0 + 10<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc11_setf(CONVERT(Mem7[a0 + 11<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc12_setf(CONVERT(Mem7[a0 + 12<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc13_setf(CONVERT(Mem7[a0 + 13<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc14_setf(CONVERT(Mem7[a0 + 14<i32>:int8], int8, int32))
	word32 a0_81 = CONVERT(Mem7[a0 + 15<i32>:int8], int8, int32)
l23057BAC_thunk_rf_tx_dvga_gain_qdb_gc15_setf:
	rf_tx_dvga_gain_qdb_gc15_setf(a0_81)
	return
rfc_apply_tx_dvga_exit:


word32 rfc_apply_tx_power_offset(word32 a0, word32 a1, word32 dwArg44, word32 dwArg64, word32 dwArg84, word32 dwArgA4, word32 dwArg0198, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
// MayUse:  a0:[0..31] a1:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31] Stack +0198:[0..31]
// LiveOut: s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
rfc_apply_tx_power_offset_entry:
l23057BB0:
	rf_pri_update_tx_power_offset(a0, a1)
	word32 a5_390
	word32 a0_54 = rf_pri_query_txgain_table(0<32>, fp + -56<i32>, fp + -52<i32>, out a5_390)
	word32 a5_57 = Mem27[0x40001640<32>:int32]
	Mem66[dwArgA4 + 1600<i32>:word32] = a5_57 & 7<32> | a5_57 & -8<i32>
	rf_tx_dvga_gain_qdb_gc0_setf(a0_54)
	word32 a5_391
	word32 a0_76 = rf_pri_query_txgain_table(1<32>, fp + -56<i32>, fp + -52<i32>, out a5_391)
	word32 a5_79 = Mem66[dwArgA4 + 1600<i32>:int32]
	Mem89[dwArgA4 + 1600<i32>:word32] = a5_79 << 4<i32> & 112<i32> | a5_79 & -113<i32>
	rf_tx_dvga_gain_qdb_gc1_setf(a0_76)
	word32 a5_392
	word32 a0_100 = rf_pri_query_txgain_table(2<32>, fp + -56<i32>, fp + -52<i32>, out a5_392)
	word32 a5_103 = Mem89[dwArgA4 + 1600<i32>:int32]
	Mem112[dwArgA4 + 1600<i32>:word32] = a5_103 << 8<i32> & 1792<i32> | a5_103 & -1793<i32>
	rf_tx_dvga_gain_qdb_gc2_setf(a0_100)
	word32 a5_393
	word32 a0_121 = rf_pri_query_txgain_table(3<32>, fp + -56<i32>, fp + -52<i32>, out a5_393)
	word32 a5_124 = Mem112[dwArgA4 + 1600<i32>:int32]
	Mem130[dwArgA4 + 1600<i32>:word32] = a5_124 << 12<i32> & 0x7000000<32> | a5_124 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc3_setf(a0_121)
	word32 a5_394
	word32 a0_139 = rf_pri_query_txgain_table(4<32>, fp + -56<i32>, fp + -52<i32>, out a5_394)
	word32 a5_142 = Mem130[dwArgA4 + 1600<i32>:int32]
	Mem148[dwArgA4 + 1600<i32>:word32] = a5_142 << 16<i32> & 0x70000<32> | a5_142 & 0xFFF8FFFF<32>
	rf_tx_dvga_gain_qdb_gc4_setf(a0_139)
	word32 a5_395
	word32 a0_156 = rf_pri_query_txgain_table(5<32>, fp + -56<i32>, fp + -52<i32>, out a5_395)
	word32 a5_159 = Mem148[dwArgA4 + 1600<i32>:int32]
	Mem165[dwArgA4 + 1600<i32>:word32] = a5_159 << 20<i32> & 0x700000<32> | a5_159 & 0xFF8FFFFF<32>
	rf_tx_dvga_gain_qdb_gc5_setf(a0_156)
	word32 a5_396
	word32 a0_174 = rf_pri_query_txgain_table(6<32>, fp + -56<i32>, fp + -52<i32>, out a5_396)
	word32 a5_177 = Mem165[dwArgA4 + 1600<i32>:int32]
	Mem183[dwArgA4 + 1600<i32>:word32] = a5_177 << 24<i32> & 0x7000000<32> | a5_177 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc6_setf(a0_174)
	word32 a5_194
	word32 a0_192 = rf_pri_query_txgain_table(7<32>, fp + -56<i32>, fp + -52<i32>, out a5_194)
	Mem201[dwArgA4 + 1600<i32>:word32] = a5_194 << 28<i32> & 0x70000000<32> | Mem183[dwArgA4 + 1600<i32>:int32] & 0x8FFFFFFF<32>
	rf_tx_dvga_gain_qdb_gc7_setf(a0_192)
	word32 a5_397
	word32 a0_210 = rf_pri_query_txgain_table(8<32>, fp + -56<i32>, fp + -52<i32>, out a5_397)
	word32 a5_213 = Mem201[dwArgA4 + 1604<i32>:int32]
	Mem218[dwArgA4 + 1604<i32>:word32] = a5_213 & 7<32> | a5_213 & -8<i32>
	rf_tx_dvga_gain_qdb_gc8_setf(a0_210)
	word32 a5_398
	word32 a0_226 = rf_pri_query_txgain_table(9<32>, fp + -56<i32>, fp + -52<i32>, out a5_398)
	word32 a2_229 = Mem218[dwArgA4 + 1604<i32>:int32]
	Mem235[dwArg44 + 1604<i32>:word32] = a2_229 << 4<i32> & 112<i32> | a2_229 & -113<i32>
	rf_tx_dvga_gain_qdb_gc9_setf(a0_226)
	word32 a5_399
	word32 a0_244 = rf_pri_query_txgain_table(0xA<32>, fp + -56<i32>, fp + -52<i32>, out a5_399)
	word32 a2_247 = Mem235[dwArg44 + 1604<i32>:int32]
	Mem253[dwArg44 + 1604<i32>:word32] = a2_247 << 8<i32> & 1792<i32> | a2_247 & -1793<i32>
	rf_tx_dvga_gain_qdb_gc10_setf(a0_244)
	word32 a5_400
	word32 a0_262 = rf_pri_query_txgain_table(0xB<32>, fp + -56<i32>, fp + -52<i32>, out a5_400)
	word32 a2_265 = Mem253[dwArg44 + 1604<i32>:int32]
	Mem271[dwArg44 + 1604<i32>:word32] = a2_265 << 12<i32> & 0x7000000<32> | a2_265 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc11_setf(a0_262)
	word32 a5_401
	word32 a0_280 = rf_pri_query_txgain_table(0xC<32>, fp + -56<i32>, fp + -52<i32>, out a5_401)
	word32 a2_283 = Mem271[dwArg44 + 1604<i32>:int32]
	Mem289[dwArg44 + 1604<i32>:word32] = a2_283 << 16<i32> & 0x70000<32> | a2_283 & 0xFFF8FFFF<32>
	rf_tx_dvga_gain_qdb_gc12_setf(a0_280)
	word32 a5_402
	word32 a0_297 = rf_pri_query_txgain_table(0xD<32>, fp + -56<i32>, fp + -52<i32>, out a5_402)
	word32 a3_300 = Mem289[dwArg44 + 1604<i32>:int32]
	Mem306[dwArg64 + 1604<i32>:word32] = a3_300 << 20<i32> & 0x700000<32> | a3_300 & 0xFF8FFFFF<32>
	rf_tx_dvga_gain_qdb_gc13_setf(a0_297)
	word32 a5_403
	word32 a0_315 = rf_pri_query_txgain_table(0xE<32>, fp + -56<i32>, fp + -52<i32>, out a5_403)
	word32 a4_318 = Mem306[dwArg64 + 1604<i32>:int32]
	Mem324[dwArg84 + 1604<i32>:word32] = a4_318 << 24<i32> & 0x7000000<32> | a4_318 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc14_setf(a0_315)
	word32 a5_404
	word32 a0_333 = rf_pri_query_txgain_table(0xF<32>, fp + -56<i32>, fp + -52<i32>, out a5_404)
	word32 a5_336 = Mem324[dwArg84 + 1604<i32>:int32]
	Mem342[dwArgA4 + 1604<i32>:word32] = a5_336 << 28<i32> & 0x70000000<32> | a5_336 & 0x8FFFFFFF<32>
	rf_tx_dvga_gain_qdb_gc15_setf(a0_333)
	0<32> = dwArg0198
	s2Out = a5_336 & 0x8FFFFFFF<32>
	s3Out = 0x7000000<32>
	return 0x70000000<32>
rfc_apply_tx_power_offset_exit:


word32 rf_pri_set_gain_table_regs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_update_tx_power_offset
//      rf_pri_init
// MayUse: 
// LiveOut: a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5 t6
// Preserved: sp
rf_pri_set_gain_table_regs_entry:
l23057E7A:
	Mem51[0x40001118<32>:word32] = ((Mem0[0x42016C44<32>:int32] << 24<i32> | (Mem0[0x42016C48<32>:int32] << 16<i32> | (Mem0[0x42016C74<32>:int32] << 14<i32> | (Mem0[0x42016C78<32>:int32] << 12<i32> | (Mem0[0x42016C7C<32>:int32] << 8<i32> | (Mem0[0x40001118<32>:int32] & 0xFFFFFFE0<32> | Mem0[0x42016C80<32>:int32]) & -1793<i32>) & 0xFCFFFFFF<32>) & 0xF3FFFFFF<32>) & 0xFFE0FFFF<32>) & 0xF8FFFFFF<32>) & 0xCFFFFFFF<32> | Mem0[0x42016C40<32>:int32] << 28<i32>) & 0x3FFFFFFF<32> | Mem0[0x42016C3C<32>:int32] << 30<i32>
	word32 a3_83 = (Mem51[0x42016BD0<32>:int32] << 28<i32> | (Mem51[0x42016BD4<32>:int32] << 24<i32> | (Mem51[0x42016BD8<32>:int32] << 16<i32> | (Mem51[0x42016C04<32>:int32] << 14<i32> | (Mem51[0x42016C08<32>:int32] << 12<i32> | (Mem51[0x42016C0C<32>:int32] << 8<i32> | (Mem51[0x4000111C<32>:int32] & 0xFFFFFFE0<32> | Mem51[0x42016C10<32>:int32]) & -1793<i32>) & 0xFCFFFFFF<32>) & 0xF3FFFFFF<32>) & 0xFFE0FFFF<32>) & 0xF8FFFFFF<32>) & 0xCFFFFFFF<32>) & 0x3FFFFFFF<32> | Mem51[0x42016BCC<32>:int32] << 30<i32>
	Mem84[0x4000111C<32>:word32] = a3_83
	word32 a5_87 = Mem84[a3_83 + 112<i32>:word32]
	word32 a2_102 = Mem84[a5_87 + 168<i32>:int32] << 14<i32> | (Mem84[a5_87 + 172<i32>:int32] << 12<i32> | (Mem84[a5_87 + 176<i32>:int32] << 8<i32> | (Mem84[0x40001120<32>:int32] & 0xFFFFFFE0<32> | Mem84[0x42016BA0<32>:int32]) & -1793<i32>) & 0xFCFFFFFF<32>) & 0xF3FFFFFF<32>
	word32 a5_104 = Mem84[a2_102 + 124<i32>:word32]
	word32 a6_110 = Mem84[a5_104 + 120<i32>:int32] << 24<i32> | (a2_102 << 16<i32> | a2_102 & 0xFFE0FFFF<32>) & 0xF8FFFFFF<32>
	Mem117[0x40001120<32>:word32] = a3_83 << 30<i32> | (Mem84[a5_104 + 116<i32>:int32] << 28<i32> | a6_110 & 0xCFFFFFFF<32>) & 0x3FFFFFFF<32>
	word32 a1_126 = (Mem117[0x40001124<32>:int32] & -32<i32> | 0xFFE10000<32>) & -1793<i32> | 0xE1000000<32>
	word32 a3_141 = (a3_83 << 46<i32> | ((a1_126 & 0xFCFFFFFF<32>) << 14<i32> | (a1_126 & 0xFCFFFFFF<32>) & 0xF3FFFFFF<32>) & 0xFFE0FFFF<32>) & 0xF8FFFFFF<32> | (a6_110 & 0xCFFFFFFF<32>) << 24<i32>
	word32 a3_149 = (a3_141 << 28<i32> | a3_141 & 0xCFFFFFFF<32>) & 0x3FFFFFFF<32> | Mem117[Mem117[a3_141 + 4<i32>:word32]:word32] << 30<i32>
	Mem150[0x40001124<32>:word32] = a3_149
	return a3_149
rf_pri_set_gain_table_regs_exit:


word32 rf_pri_manu_pu(word32 a0, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
//      rf_pri_roscal
//      rf_pri_rccal
//      rf_pri_lo_acal
//      rf_pri_fcal
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a3 a5
// Trashed: a3 a4 a5
// Preserved: sp
rf_pri_manu_pu_entry:
l23058044:
	word32 a5_11
	word32 a3_21
	word32 a4_14
	word32 a3_15
	word32 a5_5 = Mem0[a4 + 4<i32>:word32]
	Mem7[(a4 & 0xFFFFFFFD<32>) + 4<i32>:word32] = a5_5
	Mem8[a5_5 + 12<i32>:word32] = 0<32>
	branch a0 == 5<32> l230580B2
l230580B2:
	a5_11 = Mem8[0x35<32>:word32]
	a4_14 = 5<32>
	a3_15 = 0xC6FF7000<32>
l23058058:
	branch a0 >u 5<32> l23058080
l23058080:
	branch a0 >u 7<32> l23058062
l23058086:
	a5_11 = Mem8[0x37<32>:word32]
	a4_14 = 7<32>
	a3_21 = 0xF00000<32>
l2305805C:
	branch a0 == 4<32> l2305809C
l2305809C:
	a5_11 = Mem8[0x34<32>:word32]
	a4_14 = 4<32>
	a3_15 = 0x24F87000<32>
l230580AC:
	a3_21 = a3_15 + -2048<i32>
l23058096:
	Mem36[(a4_14 | a3_21) + 48<i32>:word32] = a5_11
	a5Out = a5_11
	return a3_21
l23058062:
	word32 a3_39 = Mem8[a5_5 + 48<i32>:word32]
	word32 a5_45 = a5_5 & 0x2DF0FEFF<32> | 0x25F06E00<32>
	Mem46[a5_45 + 48<i32>:word32] = a3_39
	a5Out = a5_45
	return a3_39
rf_pri_manu_pu_exit:


word32 rf_pri_save_state_for_cal(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
//      rf_pri_roscal
//      rf_pri_rccal
//      rf_pri_lo_acal
//      rf_pri_fcal
// MayUse:  a3:[0..31]
// LiveOut: a4
// Trashed: a3 a4 a5
// Preserved: sp
rf_pri_save_state_for_cal_entry:
l230580C4:
	Mem7[0x4200E3DC<32>:word32] = a3
	Mem10[0x4200E3E8<32>:word32] = a3
	Mem13[0x4200E3E4<32>:word32] = a3
	word32 a5_14 = Mem13[a3 + 48<i32>:word32]
	Mem16[0x4200E3D4<32>:word32] = a3
	Mem19[0x4200E3CC<32>:word32] = Mem16[a5_14 + 184<i32>:int32]
	Mem22[0x4200E3F0<32>:word32] = Mem19[a5_14 + 192<i32>:int32]
	Mem25[0x4200E3F4<32>:word32] = Mem22[a5_14 + 196<i32>:int32]
	Mem28[0x4200E3D8<32>:word32] = Mem25[a5_14 + 132<i32>:int32]
	Mem31[0x4200E3B8<32>:word32] = Mem28[a5_14 + 140<i32>:int32]
	Mem34[0x4200E3BC<32>:word32] = Mem31[a5_14 + 1536<i32>:int32]
	Mem37[0x4200E3C0<32>:word32] = Mem34[a5_14 + 1548<i32>:int32]
	Mem40[0x4200E3C4<32>:word32] = Mem37[a5_14 + 1560<i32>:int32]
	word32 a3_41 = Mem40[a5_14 + 1564<i32>:int32]
	Mem43[0x4200E3C8<32>:word32] = a3_41
	word32 a5_44 = Mem43[a3_41 + 72<i32>:word32]
	Mem46[0x4200E418<32>:word32] = a3_41
	Mem49[0x4200E3F8<32>:word32] = Mem46[a5_44 + 524<i32>:int32]
	Mem52[0x4200E3FC<32>:word32] = Mem49[a5_44 + 532<i32>:int32]
	Mem55[0x4200E400<32>:word32] = Mem52[a5_44 + 536<i32>:int32]
	Mem58[0x4200E404<32>:word32] = Mem55[a5_44 + 572<i32>:int32]
	Mem61[0x4200E408<32>:word32] = Mem58[a5_44 + 576<i32>:int32]
	Mem64[0x4200E40C<32>:word32] = Mem61[a5_44 + 580<i32>:int32]
	word32 a3_65 = Mem64[a5_44 + 240<i32>:int32]
	Mem67[0x4200E3E0<32>:word32] = a3_65
	Mem70[0x4200E3D0<32>:word32] = a3_65
	word32 a5_71 = Mem70[a3_65 + 88<i32>:word32]
	Mem73[0x4200E414<32>:word32] = a3_65
	word32 a3_74 = Mem73[a5_71 + 544<i32>:int32]
	Mem76[0x4200E3EC<32>:word32] = a3_74
	word32 a5_77 = Mem76[a3_74 + 112<i32>:word32]
	Mem79[0x4200E410<32>:word32] = a3_74
	word32 a4_80 = Mem79[a5_77 + 164<i32>:int32]
	Mem82[0x4200E41C<32>:word32] = a4_80
	return a4_80
rf_pri_save_state_for_cal_exit:


word32 rf_pri_restore_state_for_cal()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
//      rf_pri_roscal
//      rf_pri_rccal
//      rf_pri_lo_acal
//      rf_pri_fcal
// MayUse: 
// LiveOut: a5
// Trashed: a4 a5
// Preserved: sp
rf_pri_restore_state_for_cal_entry:
l230581F2:
	Mem7[Mem0[0x4200E3DC<32>:int32] + 4<i32>:word32] = 0x40001000<32>
	Mem10[Mem7[0x4200E3E8<32>:int32] + 12<i32>:word32] = 0x40001000<32>
	Mem13[Mem10[0x4200E3E4<32>:int32] + 28<i32>:word32] = 0x40001000<32>
	Mem16[Mem13[0x4200E3D4<32>:int32] + 48<i32>:word32] = 0x40001000<32>
	Mem19[0x400010B8<32>:word32] = Mem16[0x4200E3CC<32>:int32]
	Mem22[0x400010C0<32>:word32] = Mem19[0x4200E3F0<32>:int32]
	Mem25[0x400010C4<32>:word32] = Mem22[0x4200E3F4<32>:int32]
	Mem28[0x40001084<32>:word32] = Mem25[0x4200E3D8<32>:int32]
	Mem31[0x4000108C<32>:word32] = Mem28[0x4200E3B8<32>:int32]
	Mem34[0x40001600<32>:word32] = Mem31[0x4200E3BC<32>:int32]
	Mem37[0x4000160C<32>:word32] = Mem34[0x4200E3C0<32>:int32]
	Mem40[0x40001618<32>:word32] = Mem37[0x4200E3C4<32>:int32]
	Mem43[0x4000161C<32>:word32] = Mem40[0x4200E3C8<32>:int32]
	Mem46[Mem43[0x4200E418<32>:int32] + 72<i32>:word32] = 0x40001000<32>
	Mem49[0x4000120C<32>:word32] = Mem46[0x4200E3F8<32>:int32]
	Mem52[0x40001214<32>:word32] = Mem49[0x4200E3FC<32>:int32]
	Mem55[0x40001218<32>:word32] = Mem52[0x4200E400<32>:int32]
	Mem58[0x4000123C<32>:word32] = Mem55[0x4200E404<32>:int32]
	Mem61[0x40001240<32>:word32] = Mem58[0x4200E408<32>:int32]
	Mem64[0x40001244<32>:word32] = Mem61[0x4200E40C<32>:int32]
	Mem67[0x400010F0<32>:word32] = Mem64[0x4200E3E0<32>:int32]
	Mem70[Mem67[0x4200E3D0<32>:int32] + 100<i32>:word32] = 0x40001000<32>
	Mem73[Mem70[0x4200E414<32>:int32] + 88<i32>:word32] = 0x40001000<32>
	Mem76[0x40001220<32>:word32] = Mem73[0x4200E3EC<32>:int32]
	Mem79[Mem76[0x4200E410<32>:int32] + 112<i32>:word32] = 0x40001000<32>
	Mem82[0x400010A4<32>:word32] = Mem79[0x4200E41C<32>:int32]
	return 0x40001000<32>
rf_pri_restore_state_for_cal_exit:


void rf_pri_singen_start()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_iq
//      rf_pri_txcal
// MayUse: 
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
rf_pri_singen_start_entry:
l23058320:
	Mem9[0x4000120C<32>:word32] = Mem0[0x4000120C<32>:int32] & 0x7FFFFFFF<32>
	Mem12[0x4000120C<32>:word32] = Mem9[0x4000120C<32>:int32] | 0x80000000<32>
	return
rf_pri_singen_start_exit:


word32 rf_pri_pm_pwr(ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal_search_core
//      rf_pri_rccal_iq
// MayUse: 
// LiveOut: a0 a2 a3 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
rf_pri_pm_pwr_entry:
l23058342:
	Mem9[0x40001618<32>:word32] = Mem0[0x40001618<32>:int32] & 0xDFEFFFFF<32>
	Mem13[0x40001618<32>:word32] = Mem9[0x40001618<32>:int32] | 0x20100000<32>
l23058364:
	word32 a4_16 = Mem13[0x40001618<32>:int32]
	branch a4_16 << 3<u32> >= 0<32> l23058364
l23058374:
	word32 a5_25 = Mem13[0x40001624<32>:int32] << 7<i32> >> 16<i32>
	word32 a2_21 = Mem13[a4_16:word32]
	word32 a0_24 = Mem13[0x40001620<32>:int32] << 7<i32> >> 16<i32>
	Mem30[a4_16 & 0xDFEFFFFF<32>:word32] = a2_21
	a2Out = a2_21
	a3Out = 0xDFEFFFFF<32>
	a5Out = a5_25 * 2<32>
	return a0_24 * 2<32> + a5_25 * 2<32>
rf_pri_pm_pwr_exit:


word32 rf_pri_start_txdfe(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_iq
//      rf_pri_txcal
//      rf_pri_init
// MayUse: 
// LiveOut: a3 a5
// Trashed: a3 a4 a5
// Preserved: sp
rf_pri_start_txdfe_entry:
l2305839C:
	Mem9[0x40001220<32>:word32] = Mem0[0x40001220<32>:int32] & -385<i32>
	Mem15[0x40001220<32>:word32] = Mem9[0x40001220<32>:int32] & 0xFE0007FF<32> | 0x1000082<32>
	Mem18[0x40001220<32>:word32] = Mem15[0x40001220<32>:int32] | 256<i32>
	a5Out = 0x40001000<32>
	return 0x1000082<32>
rf_pri_start_txdfe_exit:


word32 rf_pri_pm_pwr_avg(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_iq
//      rf_pri_roscal_iq.isra.3
//      rf_pri_txcal
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
rf_pri_pm_pwr_avg_entry:
l230583D2:
	Mem9[0x40001618<32>:word32] = Mem0[0x40001618<32>:int32] & 0xDFEFFFFF<32>
	Mem17[0x4000161C<32>:word32] = a1 << 16<i32> | CONVERT(Mem9[0x4000161C<32>:word16], word16, word32)
	Mem20[0x40001618<32>:word32] = Mem17[0x40001618<32>:int32] | 0x20000000<32>
l23058404:
	branch Mem20[0x40001618<32>:int32] << 3<u32> >= 0<32> l23058404
l23058410:
	word32 a0_27
	branch a0 == 0<32> l23058430
l23058430:
	a0_27 = Mem20[0x40001624<32>:int32]
l23058412:
	a0_27 = Mem20[0x40001620<32>:int32]
l23058416:
	word32 a5_31 = Mem20[0x40001618<32>:int32]
	Mem37[0x40001618<32>:word32] = a5_31 & 0xDFEFFFFF<32>
	a3Out = 0x40001000<32>
	a5Out = a5_31 & 0xDFEFFFFF<32>
	return CONVERT(SLICE(a0_27, word25, 0), word25, int32)
rf_pri_pm_pwr_avg_exit:


word32 rf_pri_txcal_config_hw(word32 a2, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
//      rf_pri_init
// MayUse:  a2:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
rf_pri_txcal_config_hw_entry:
l23058436:
	word32 a2_14 = a2 & 63<i32> | Mem0[0x40001180<32>:int32] & -64<i32>
	word32 a2_22 = (a2_14 >>u 6<i32> & 63<i32>) << 8<i32> | a2_14 & 0xFC0000FF<32>
	word32 a2_35 = ((a2_22 & 0xFFC0FFFF<32>) >>u 6<i32> & 63<i32>) << 24<i32> | (a2_22 & 0xFFC0FFFF<32>) & 0xC0FFFFFF<32>
	Mem36[0x40001180<32>:word32] = a2_35
	word32 a2_42 = a2_35 & 63<i32> | Mem36[0x40001184<32>:int32] & -64<i32>
	word32 a1_44 = Mem36[a2_42 + 120<i32>:word32]
	Mem60[0x40001184<32>:word32] = (Mem36[a1_44 + 128<i32>:int32] >>u 6<i32> & 63<i32>) << 24<i32> | (((a2_42 >>u 6<i32> & 63<i32>) << 8<i32> | a2_42 & 0xFC0000FF<32>) & 0xFFC0FFFF<32> | (Mem36[a1_44 + 128<i32>:int32] & 63<i32>) << 16<i32>) & 0xC0FFFFFF<32>
	word32 t1_61 = Mem60[0x4200DCBC<32>:int32]
	Mem84[0x40001188<32>:word32] = (Mem60[t1_61 + 144<i32>:int32] >>u 6<i32> & 63<i32>) << 24<i32> | (((Mem60[t1_61 + 136<i32>:int32] >>u 6<i32> & 63<i32>) << 8<i32> | (Mem60[t1_61 + 136<i32>:int32] & 63<i32> | Mem60[0x40001188<32>:int32] & -64<i32>) & 0xFC0000FF<32>) & 0xFFC0FFFF<32> | (Mem60[t1_61 + 144<i32>:int32] & 63<i32>) << 16<i32>) & 0xC0FFFFFF<32>
	word32 a1_86 = Mem84[0x4200DCBC<32>:int32]
	Mem108[0x4000118C<32>:word32] = (Mem84[a1_86 + 160<i32>:int32] >>u 6<i32> & 63<i32>) << 24<i32> | (((Mem84[a1_86 + 152<i32>:int32] >>u 6<i32> & 63<i32>) << 8<i32> | (Mem84[a1_86 + 152<i32>:int32] & 63<i32> | Mem84[0x4000118C<32>:int32] & -64<i32>) & 0xFC0000FF<32>) & 0xFFC0FFFF<32> | (Mem84[a1_86 + 160<i32>:int32] & 63<i32>) << 16<i32>) & 0xC0FFFFFF<32>
	word32 a3_110 = Mem108[0x40001190<32>:int32]
	Mem123[0x40001190<32>:word32] = ((a3_110 >>u 12<i32> & 2047<i32>) << 16<i32> | a3_110 & 0xF800FFFF<32>) & -1024<i32> | (a3_110 & 0xF800FFFF<32>) & 1023<i32>
	word32 a3_124 = Mem123[0x40001194<32>:int32]
	Mem136[0x40001194<32>:word32] = ((a3_124 >>u 12<i32> & 2047<i32>) << 16<i32> | a3_124 & 0xF800FFFF<32>) & -1024<i32> | (a3_124 & 0xF800FFFF<32>) & 1023<i32>
	word32 a3_137 = Mem136[0x40001198<32>:int32]
	Mem149[0x40001198<32>:word32] = ((a3_137 >>u 12<i32> & 2047<i32>) << 16<i32> | a3_137 & 0xF800FFFF<32>) & -1024<i32> | (a3_137 & 0xF800FFFF<32>) & 1023<i32>
	word32 a0_151 = Mem149[0x4200DCBC<32>:int32]
	Mem162[0x4000119C<32>:word32] = ((Mem149[a0_151 + 128<i32>:int32] >>u 12<i32> & 2047<i32>) << 16<i32> | Mem149[0x4000119C<32>:int32] & 0xF800FFFF<32>) & -1024<i32> | Mem149[a0_151 + 132<i32>:int32] & 1023<i32>
	word32 a0_164 = Mem162[0x4200DCBC<32>:int32]
	Mem175[0x400011A0<32>:word32] = ((Mem162[a0_164 + 136<i32>:int32] >>u 12<i32> & 2047<i32>) << 16<i32> | Mem162[0x400011A0<32>:int32] & 0xF800FFFF<32>) & -1024<i32> | Mem162[a0_164 + 140<i32>:int32] & 1023<i32>
	word32 a0_177 = Mem175[0x4200DCBC<32>:int32]
	Mem188[0x400011A4<32>:word32] = ((Mem175[a0_177 + 144<i32>:int32] >>u 12<i32> & 2047<i32>) << 16<i32> | Mem175[0x400011A4<32>:int32] & 0xF800FFFF<32>) & -1024<i32> | Mem175[a0_177 + 148<i32>:int32] & 1023<i32>
	word32 a0_190 = Mem188[0x4200DCBC<32>:int32]
	Mem201[0x400011A8<32>:word32] = ((Mem188[a0_190 + 152<i32>:int32] >>u 12<i32> & 2047<i32>) << 16<i32> | Mem188[0x400011A8<32>:int32] & 0xF800FFFF<32>) & -1024<i32> | Mem188[a0_190 + 156<i32>:int32] & 1023<i32>
	word32 a3_204 = Mem201[0x4200DCBC<32>:int32]
	word32 a4_213 = ((Mem201[a3_204 + 160<i32>:int32] >>u 12<i32> & 2047<i32>) << 16<i32> | Mem201[0x400011AC<32>:int32] & 0xF800FFFF<32>) & -1024<i32> | Mem201[a3_204 + 164<i32>:int32] & 1023<i32>
	Mem214[0x400011AC<32>:word32] = a4_213
	a5Out = 0x40001000<32>
	return a4_213
rf_pri_txcal_config_hw_exit:


word32 rf_pri_fcal_meas(word32 ra, word32 s0, word32 a0, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_fcal
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a2 a3 a4 a5 ra
// Preserved: s0 sp
rf_pri_fcal_meas_entry:
l230586D8:
	word32 a5_9 = Mem7[0x400010A0<32>:int32]
	Mem13[0x400010A0<32>:word32] = a0 | a5_9 & -256<i32>
	word32 s0_17
	word32 ra_18
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:100<i32>,a5:a5_9 & -256<i32>,ra:0x4200C6F4<p32>,s0:0x40001000<32>,Stack +0004:s0,Stack +0084:ra
		defs: ra:ra_18,s0:s0_17
	Mem26[s0_17 + 172<i32>:word32] = Mem13[s0_17 + 172<i32>:int32] | 16<i32>
l2305870C:
	word32 a3_30 = Mem26[0x400010AC<32>:int32]
	branch a3_30 << 0xB<u32> >= 0<32> l2305870C
l2305871C:
	word32 a0_35 = Mem26[0x400010A8<32>:int32] >>u 16<i32>
	Mem37[Mem26[0x400010AC<32>:int32] & 0xFFFFFFEF<32>:word32] = 0x400010AC<32>
	a0Out = a0_35
	a3Out = a3_30
	return ra_18
rf_pri_fcal_meas_exit:


word32 rf_pri_rccal_config.part.0(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_config
//      rf_pri_rccal
// MayUse:  a0:[0..31]
// LiveOut: a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_pri_rccal_config.part.0_entry:
l23058732:
	Mem17[0x40001080<32>:word32] = a0 << 8<i32> | (a0 << 0x18<u32> | Mem0[0x40001080<32>:int32] & 0xC0FFFFFF<32>) & 0xFC0000FF<32>
	return 0x40001000<32>
rf_pri_rccal_config.part.0_exit:


word32 rf_pri_rccal_config(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_iq
//      rf_pri_rccal
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_pri_rccal_config_entry:
l2305875A:
	branch a0 == 0<32> l23058762
l23058762:
	Mem15[0x40001080<32>:word32] = (a1 << 0x10<u32> | Mem0[0x40001080<32>:int32] & 0xFFC0FFFF<32>) & -64<i32> | a1
	return 0x40001000<32>
l2305875C:
l2305875E_thunk_rf_pri_rccal_config.part.0:
	return rf_pri_rccal_config.part.0(a1)
rf_pri_rccal_config_exit:


word32 rf_pri_txcal_config(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal_search_core
//      rf_pri_txcal
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a1 a3 a4
// Trashed: a1 a3 a4 a5
// Preserved: sp
rf_pri_txcal_config_entry:
l23058784:
	branch a0 != 2<32> l230587AA
l230587AA:
	branch a0 != 3<32> l230587D0
l230587D0:
	word32 a5_11
	word32 a1_13
	branch a0 != 0<32> l230587E8
l230587E8:
	branch a0 != 1<32> l230587E6
l230587EE:
	a3 = Mem0[0x71<32>:word32]
	a4 = 0xFFC0FFFF<32>
	a5_11 = 1<32>
	a1_13 = a1 << 16<i32>
l230587D2:
	a3 = Mem0[0x73<32>:word32]
	a4 = 0xC0FFFFFF<32>
	a5_11 = 3<32>
	a1_13 = a1 << 24<i32>
l230587E2:
	a1 = a1_13 | a5_11
	Mem23[a1 + 112<i32>:word32] = a3
l230587E6:
	a3Out = a3
	a4Out = a4
	return a1
l230587B0:
	branch a1 >= 0<32> l230587B8
l230587B4:
	a1 = a1 + 1024<i32>
l230587B8:
	word32 a1_30 = a1 | Mem0[0x40001600<32>:int32] & -1024<i32>
	Mem32[0x40001600<32>:word32] = a1_30 | 1024<i32>
	a3Out = a3
	a4Out = 0x40001000<32>
	return a1_30 | 1024<i32>
l2305878A:
	word32 a1_39 = a1 << 12<i32> | Mem0[0x40001600<32>:int32] & 0xFF800FFF<32>
	Mem42[0x40001600<32>:word32] = a1_39 | 0x800000<32>
	a3Out = 0x40001000<32>
	a4Out = 0xFF800FFF<32>
	return a1_39 | 0x800000<32>
rf_pri_txcal_config_exit:


word32 rf_pri_txcal_search_core(word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s11, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] s0:[0..31] s1:[0..31] s11:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +010C:[0..31]
// LiveOut: a0 a5 ra s0 s1 s11 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 tp
// Preserved: sp
rf_pri_txcal_search_core_entry:
l23058800:
	word32 a3_40
	word32 a3_46
	word32 s10_185
	word32 s2_203
	word32 s3_177
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a1:rf_pri_txcal_config(a0, a1, out a3_40, out a4_392),a2:a2,a3:a3_40,ra:0x4200C82A<p32>,s0:s0,s1:s1,s10:a2,s11:s11,s2:a1,s3:a0,s4:s4,s5:s5,s6:s6,s7:s7,s8:s8,s9:s9
		defs: a3:a3_46,s10:s10_56,s2:s2_47,s3:s3_48
	Mem75[0x40001618<32>:word32] = a3_46 << 10<i32> | Mem37[0x40001618<32>:int32] & 0xFFF00000<32>
	word32 a3_393
	word32 a5_394
	word32 a2_164
	word32 s11_159 = rf_pri_pm_pwr(out a2_164, out a3_393, out a5_394)
	word32 s4_179 = 1<32>
	word32 s5_180 = 2<32>
	word32 s6_181 = -512<i32>
	word32 s7_182 = 511<i32>
	word32 s8_103 = 2047<i32>
	word32 s9_108 = 63<i32>
l23058864:
	word32 s0_101 = s2_203 - s10_185
	word32 s1_100 = s2_203 + s10_185
	branch s4_179 <u s3_177 l230588DE
l230588DE:
	branch s3_177 != s5_180 l230588F2
l230588F2:
	branch s0_101 >= s6_181 l230588FA
l230588F6:
	s0_101 = -512<i32>
l230588FA:
	branch s7_182 >= s1_100 l2305887E
l230588FE:
	s1_100 = 511<i32>
l230588E2:
	branch s0_101 >= 0<32> l230588E8
l230588E6:
	s0_101 = 0<32>
l230588E8:
	branch s8_103 >= s1_100 l2305887E
l230588EC:
	s1_100 = 2047<i32>
l23058870:
	branch s0_101 >= 0<32> l23058876
l23058874:
	s0_101 = 0<32>
l23058876:
	branch s9_108 >= s1_100 l2305887E
l2305887A:
	s1_100 = 63<i32>
l2305887E:
	word32 a3_123
	word32 s2_176
	word32 s11_186
	word32 s0_189
	word32 s1_190
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a1:rf_pri_txcal_config(s3_93, s0_111, out a3_123, out a4_395),a2:a2_164,a3:a3_123,ra:0x4200C88C<p32>,s0:s0_111,s1:s1_167,s10:s10_89 >> 1<u32>,s11:s11_159,s2:s2_88,s3:s3_93,s4:s4_92,s5:s5_94,s6:s6_95,s7:s7_98,s8:s8_103,s9:s9_108
		defs: s0:s0_189,s1:s1_190,s10:s10_185,s11:s11_186,s2:s2_176,s3:s3_177,s4:s4_179,s5:s5_180,s6:s6_181,s7:s7_182,s8:s8_183,s9:s9_184
	word32 a3_396
	word32 a5_201
	word32 a0_197 = rf_pri_pm_pwr(out a2_164, out a3_396, out a5_201)
	branch a0_197 <u s11_186 l23058904
l23058904:
	s11_159 = a0_197
	s2_203 = s0_189
l2305889C:
	word32 a3_208
	word32 s1_229
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a1:rf_pri_txcal_config(s3_177, s1_190, out a3_208, out a4_397),a2:a2_198,a3:a3_208,ra:0x4200C8A6<p32>,s0:s0_189,s1:s1_190,s10:s10_185,s11:s11_186,s2:s2_176,s3:s3_177,s4:s4_179,s5:s5_180,s6:s6_181,s7:s7_182,s8:s8_183,s9:s9_184
		defs: s1:s1_229,s10:s10_224,s11:s11_225,s2:s2_215,s3:s3_216,s4:s4_218,s5:s5_219,s6:s6_220,s7:s7_221,s8:s8_222,s9:s9_223
	word32 a3_398
	word32 a0_236 = rf_pri_pm_pwr(out a2_164, out a3_398, out a5_201)
	branch a0_236 >=u s11_159 l230588BA
l230588B6:
	s11_159 = a0_236
	s2_203 = s1_229
l230588BA:
	branch s10_185 != 0<32> l23058864
l230588BE:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = s2_203
	a5Out = a5_201
	s4Out = dwArg0168
	s5Out = s5_180
	s6Out = s6_181
	s7Out = s7_182
	s8Out = dwArg0148
	s9Out = s9_108
	s11Out = s11_159
	return dwLoc08
rf_pri_txcal_search_core_exit:


word32 rf_pri_singen_config.constprop.8(word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_iq
//      rf_pri_txcal
// MayUse:  a0:[0..31]
// LiveOut: a3 a4
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
rf_pri_singen_config.constprop.8_entry:
l2305890A:
	Mem12[0x4000120C<32>:word32] = a0 << 16<i32> | Mem0[0x4000120C<32>:int32] & 0xFC00FFFF<32>
	Mem17[0x40001214<32>:word32] = Mem12[0x40001214<32>:int32] & 0x3FFFFF<32>
	word32 a4_21 = Mem17[0x40001218<32>:int32] & 0x3FFFFF<32> | 0xC0000000<32>
	Mem22[0x40001218<32>:word32] = a4_21
	a4Out = a4_21
	return 0xC0000000<32>
rf_pri_singen_config.constprop.8_exit:


word32 rf_pri_rccal_iq(word32 ra, word32 a0, word32 fflags, word32 frm, word32 dwArgA8, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a3 fflags frm ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
rf_pri_rccal_iq_entry:
l23058948:
	word32 a4_29
	word32 a4_21 = Mem19[0x4000160C<32>:int32]
	branch a0 == 0<32> l23058A86
l23058A86:
	Mem25[0x4000160C<32>:word32] = a4_21 | 1024<i32>
	a4_29 = Mem25[0x4000160C<32>:int32] & 0xFBFFFFFF<32>
l23058968:
	Mem31[0x4000160C<32>:word32] = a4_21 & -1025<i32>
	a4_29 = Mem31[0x4000160C<32>:int32] | 0x4000000<32>
l2305897A:
	Mem37[0x4000160C<32>:word32] = a4_29
	word32 s0_38 = Mem37[0x40001048<32>:word32]
	Mem46[0x43001148<32>:word32] = s0_38
	word32 a4_416
	rf_pri_singen_config.constprop.8(3<32>, out a4_416)
	Mem56[s0_38 + 532<i32>:word32] = Mem46[s0_38 + 532<i32>:int32] & -2048<i32> | 1023<i32>
	Mem60[s0_38 + 536<i32>:word32] = Mem56[s0_38 + 536<i32>:int32] & -2048<i32> | 1023<i32>
	rf_pri_singen_start()
	word32 a5_417
	rf_pri_start_txdfe(out a5_417)
	Mem73[s0_38 + 1560<i32>:word32] = Mem60[s0_38 + 1560<i32>:int32] & 0xFFF00000<32> | 0xFFFC00<32>
	word32 a3_418
	word32 a5_419
	rf_pri_pm_pwr_avg(a0, 1024<i32>, out a3_418, out a5_419)
	word32 a1_87
	word32 a0_100
	word32 a1_101
	word32 fflags_115
	word32 frm_116
	word32 s1_119
	word32 s2_120
	word32 s4_122
	word32 s6_429
	word32 s7_430
	word32 s8_431
	word32 s9_432
	word32 s0_423
	word32 a4_424
	word32 a5_425
	word32 s3_427
	word32 s5_428
	word32 a7_426
	word32 a3_421
	word32 a5_422
	word32 a2_420
	word32 ra_117 = __muldf3(ra, __floatunsidf(rf_pri_pm_pwr(out a2_420, out a3_421, out a5_422), out a1_87), a1_87, Mem73[0x2307D8F0<32>:int32], Mem73[0x2307D8F4<32>:int32], fflags, frm, out s0_423, out s1_119, out a0_100, out a1_101, out a4_424, out a5_425, out a7_426, out s2_120, out s3_427, out s4_122, out s5_428, out s6_429, out s7_430, out s8_431, out s9_432, out fflags_115, out frm_116)
	word32 a4_132
	word32 a0_128 = __fixunsdfsi(ra_117, a0_100, a1_101, fflags_115, frm_116, out a4_132)
	word32 s0_134 = Mem73[a4_132 + 72<i32>:word32]
	Mem139[(a4_132 & s1_119 | 0x6000200<32>) + 72<i32>:word32] = s0_134
	word32 a4_433
	rf_pri_singen_config.constprop.8(181<i32>, out a4_433)
	rf_pri_singen_start()
	word32 a5_434
	rf_pri_start_txdfe(out a5_434)
	Mem159[s0_134 + 1560<i32>:word32] = Mem139[s0_134 + 1560<i32>:int32] & s4_122 | 0x2D400<32>
	word32 s1_160 = 0<32>
	word32 s0_161 = 6<32>
	word32 s4_162 = 32<i32>
l23058A40:
	word32 s5_165 = s4_162 + s1_160
	rf_pri_rccal_config(s2_120, s5_165)
	word32 a2_435
	word32 a3_436
	word32 a5_437
	branch a0_128 >=u rf_pri_pm_pwr(out a2_435, out a3_436, out a5_437) l23058A56
l23058A54:
	s1_160 = s5_165
l23058A56:
	s0_161 = s0_161 + 0xFFFFFFFF<32>
	s4_162 = s4_162 >>u 1<u32>
	branch s0_161 != 0<32> l23058A40
l23058A5E:
	word32 s4_185 = 63<i32>
l23058A66:
	word32 a0_214
	rf_pri_rccal_config(s2_120, s1_160)
	word32 s0_202 = s0_161 << 1<i32>
	word32 a3_198
	word32 a5_439
	word32 a2_438
	branch a0_128 >=u rf_pri_pm_pwr(out a2_438, out a3_198, out a5_439) l23058A9C
l23058A9C:
	s0_161 = s0_202 & 0xF<32>
	s1_160 = s1_160 + 0xFFFFFFFF<32>
	branch (s0_202 & 0xF<32>) == 0xA<32> l23058A82
l23058A78:
	s0_161 = s0_202 + 1<32> & 0xF<32>
	s1_160 = s1_160 + 1<32>
	branch s0_161 != 5<32> l23058AA4
l23058AA4:
	s4_185 = s4_185 + 0xFFFFFFFF<32>
	branch s4_185 != 0<32> l23058A66
l23058AAA:
	a0_214 = 2<32>
l23058A82:
	a0_214 = 3<32>
l23058AAC:
	0<32> = dwArgA8
	a0Out = a0_214
	a3Out = a3_198
	s2Out = s2_120
	fflagsOut = fflags_115
	frmOut = frm_116
	return ra_117
rf_pri_rccal_iq_exit:


word32 rf_pri_config_channel.constprop.9(word32 s6, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg8C, word32 dwArg98, word32 dwArgBC, word32 dwArg0128, ptr32 & a5Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
//      rf_pri_roscal
// MayUse:  s6:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +0128:[0..31]
// LiveOut: a5 ra s10 s11 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
rf_pri_config_channel.constprop.9_entry:
l23058AC0:
	word32 a2_7 = Mem5[0x4200DCBC<32>:int32]
	Mem41[0x400010A0<32>:word32] = (CONVERT(Mem23[a2_7 + 46<i32>:uint16], uint16, word32) >>u 8<i32> & 0x1F<32>) << 16<i32> | (CONVERT(Mem23[a2_7 + 46<i32>:uint16], uint16, word32) & 255<i32> | Mem23[0x400010A0<32>:int32] & -256<i32>) & 0xFFE0FFFF<32>
	Mem56[0x400010BC<32>:word32] = (CONVERT(Mem41[Mem41[0x4200DCBC<32>:int32] + 46<i32>:uint16], uint16, word32) & 255<i32>) >>u 4<i32> << 20<i32> | Mem41[0x400010BC<32>:int32] & 0xFF0FFFFF<32>
	Mem65[0x400010C4<32>:word32] = Mem56[0x400010C4<32>:int32] & 0xC0000000<32> | Mem56[0x4200D674<32>:int32]
	Mem70[0x400010C0<32>:word32] = Mem65[0x400010C0<32>:int32] & 0xFEFFFFFF<32>
	word32 s1_230 = 0x4200E000<32>
	word32 s0_164 = 0x40001000<32>
	word32 s5_236 = 0x10000000<32>
	word32 s2_233 = 0xEFFFFFFF<32>
	word32 s6_237 = 0x10000000<32>
	word32 s3_234 = 0xEFFFFFFF<32>
	word32 s7_238 = 0x1100000<32>
	word32 s4_235 = 0x2307A000<32>
l23058B6E:
	word32 a5_76 = Mem72[s0_164 + 184<i32>:int32] | s5_236
	Mem77[s0_164 + 184<i32>:word32] = a5_76
	word32 s1_87
	word32 s0_89
	word32 s2_90
	word32 s3_91
	word32 s4_92
	word32 s5_93
	word32 s6_94
	word32 s7_95
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a5:a5_76,ra:0x4200CB7C<p32>,s0:s0_71,s1:s1_79,s2:s2_80,s3:s3_81,s4:s4_82,s5:s5_75,s6:s6_83,s7:s7_84
		defs: s0:s0_89,s1:s1_87,s2:s2_90,s3:s3_91,s4:s4_92,s5:s5_93,s6:s6_94,s7:s7_95
	word32 a5_108 = Mem77[s0_89 + 184<i32>:int32] & s2_90
	Mem109[s0_89 + 184<i32>:word32] = a5_108
	word32 s1_112
	word32 s0_114
	word32 s2_115
	word32 s3_116
	word32 s4_117
	word32 s5_118
	word32 s6_119
	word32 s7_120
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a5:a5_108,ra:0x4200CB94<p32>,s0:s0_89,s1:s1_87,s2:s2_90,s3:s3_91,s4:s4_92,s5:s5_93,s6:s6_94,s7:s7_95
		defs: s0:s0_114,s1:s1_112,s2:s2_115,s3:s3_116,s4:s4_117,s5:s5_118,s6:s6_119,s7:s7_120
	word32 a5_133 = Mem109[s0_114 + 176<i32>:int32] | s6_119
	Mem134[s0_114 + 176<i32>:word32] = a5_133
	word32 s1_137
	word32 s0_139
	word32 s2_140
	word32 s3_141
	word32 s4_142
	word32 s5_143
	word32 s6_144
	word32 s7_145
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a5:a5_133,ra:0x4200CBAA<p32>,s0:s0_114,s1:s1_112,s2:s2_115,s3:s3_116,s4:s4_117,s5:s5_118,s6:s6_119,s7:s7_120
		defs: s0:s0_139,s1:s1_137,s2:s2_140,s3:s3_141,s4:s4_142,s5:s5_143,s6:s6_144,s7:s7_145
	word32 a5_158 = Mem134[s0_139 + 176<i32>:int32] & s3_141
	Mem159[s0_139 + 176<i32>:word32] = a5_158
	word32 s4_167
	word32 s7_170
	word32 ra_171
	word32 a3_173
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a5:a5_158,ra:0x4200CBC2<p32>,s0:s0_139,s1:s1_137,s2:s2_140,s3:s3_141,s4:s4_142,s5:s5_143,s6:s6_144,s7:s7_145
		defs: a3:a3_173,ra:ra_171,s0:s0_164,s4:s4_167,s7:s7_170
	branch (Mem159[s0_164 + 180<i32>:int32] & s7_170) == 0<32> l23058BDE
l23058BDE:
	0<32> = dwArg0128
l23058C08_thunk_printf:
	word32 a5_199
	word32 s10_208
	word32 s11_209
	word32 s9_217
	word32 a2_334
	word32 a1_333
	word32 a0_332
	word32 s1_331
	word32 a3_335
	word32 a4_336
	word32 a7_337
	word32 s2_338
	word32 s3_339
	word32 s4_340
	word32 s5_341
	word32 s6_342
	word32 s7_343
	word32 s8_344
	word32 t4_345
	word32 ra_206 = printf(ra_171, 0x2307D834<32>, a3_173, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_331, out a0_332, out a1_333, out a2_334, out a3_335, out a4_336, out a5_199, out a7_337, out s2_338, out s3_339, out s4_340, out s5_341, out s6_342, out s7_343, out s8_344, out s9_217, out s10_208, out s11_209, out t4_345)
	a5Out = a5_199
	s9Out = s9_217
	s10Out = s10_208
	s11Out = s11_209
	return ra_206
rf_pri_config_channel.constprop.9_exit:
l23058BD4:
	word32 t4_330
	word32 s11_329
	word32 s10_328
	word32 s9_327
	word32 s8_326
	word32 a7_325
	word32 a5_324
	word32 a4_323
	word32 a3_322
	word32 a2_321
	word32 a1_320
	word32 a0_319
	printf(ra_171, s4_167 + -772<i32>, a3_173, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_230, out a0_319, out a1_320, out a2_321, out a3_322, out a4_323, out a5_324, out a7_325, out s2_233, out s3_234, out s4_235, out s5_236, out s6_237, out s7_238, out s8_326, out s9_327, out s10_328, out s11_329, out t4_330)


word32 rf_pri_roscal_iq.isra.3(word32 a0, word32 a5, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_roscal
// MayUse:  a0:[0..31] a5:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a5 s0 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
rf_pri_roscal_iq.isra.3_entry:
l23058C0C:
	word32 s0_100 = 6<32>
	word32 s2_101 = 0<32>
	word32 s4_27 = 32<i32>
l23058C34:
	word32 a5_38
	word32 s1_32 = Mem31[a5 + 124<i32>:word32]
	word32 s6_35 = s4_27 + s2_101
	branch a0 == 0<32> l23058CB8
l23058CB8:
	a5_38 = s6_35 | a5 & -64<i32>
l23058C3E:
	a5_38 = s6_35 << 8<u32> | a5 & 0xFC0000FF<32>
l23058C48:
	Mem45[a5_38 + 124<i32>:word32] = s1_32
	word32 a3_243
	branch rf_pri_pm_pwr_avg(a0, 1024<i32>, out a3_243, out a5) > 0<32> l23058C5A
l23058C58:
	s2_101 = s6_35
l23058C5A:
	s0_100 = s0_100 + 0xFFFFFFFF<32>
	s4_27 = s4_27 >>u 1<u32>
	branch s0_100 != 0<32> l23058C34
l23058C62:
	word32 s4_106 = 63<i32>
l23058C74:
	word32 a5_75
	word32 s1_71 = Mem70[a5 + 124<i32>:word32]
	branch a0 == 0<32> l23058CC2
l23058CC2:
	a5_75 = a5 & -64<i32> | s2_101
l23058C7A:
	a5_75 = s2_101 << 8<u32> | a5 & 0xFC0000FF<32>
l23058C84:
	Mem82[a5_75 + 124<i32>:word32] = s1_71
	word32 s0_93 = s0_100 << 1<i32>
	word32 a3_88
	branch rf_pri_pm_pwr_avg(a0, 1024<i32>, out a3_88, out a5) <= 0<32> l23058CCC
l23058CCC:
	s0_100 = s0_93 & 0xF<32>
	s2_101 = s2_101 + 1<32>
	branch (s0_93 & 0xF<32>) == 0xA<32> l23058CA0
l23058C96:
	s0_100 = s0_93 + 1<32> & 0xF<32>
	s2_101 = s2_101 + 0xFFFFFFFF<32>
	branch s0_100 != 5<32> l23058CD4
l23058CD4:
	s4_106 = s4_106 + 0xFFFFFFFF<32>
	branch s4_106 != 0<32> l23058C74
l23058CDA:
l23058CA0:
	0<32> = dwArg0128
	a0Out = s2_101
	a3Out = a3_88
	a5Out = a5
	s4Out = dwArg78
	s5Out = 0xFC0000FF<32>
	s8Out = s5
	return dwArgE4
rf_pri_roscal_iq.isra.3_exit:


void rf_pri_chipv(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
rf_pri_chipv_entry:
l23058CDC:
	branch a0 != 0<32> l23058DD0
l23058DD0:
	branch a0 != 1<32> l23058EC2
l23058DD6:
	Mem9[0x50005<32>:word32] = 0x4200DCB4<32>
	Mem14[0x4200DCB8<32>:word16] = 5<16>
	word32 a4_16 = 0x1C<32>
l23058E0A:
	word32 a5_21 = a4_16 + -28<i32>
l23058E0E:
	word32 a0_26 = Mem25[a5_21 + 0x2307DBFC<32>:word32]
	Mem29[a5_21 + 0x42016AEC<32>:word32] = a0_26
	Mem32[a5_21 + 0x42016CAC<32>:word32] = a0_26
	a5_21 = a5_21 + 4<32>
	branch a5_21 != a4_16 l23058E0E
l23058E2A:
	a4_16 = a5_21 + 28<i32>
	branch a5_21 != -448<i32> l23058E0A
l23058E32:
	word32 a5_40 = 0<32>
	word32 a2_43 = 56<i32>
l23058E48:
	Mem52[Mem47[a5_40 + 0x42016AB4<32>:word32]:word32] = a5_40 + 0x42016A7C<32>
	a5_40 = a5_40 + 4<32>
	branch a5_40 != 56<i32> l23058E48
l23058E5A:
	word32 a4_57 = 0x42016E6C<32>
l23058E6E:
	word32 a5_61 = Mem60[a2_43:word32]
	a4_57 = a4_57 + 0x10<32>
	Mem65[a4_57 + 4080<i32>:word32] = a2_43
	Mem67[a4_57 + 4084<i32>:word32] = Mem65[a5_61 + 4<32>:int32]
	Mem69[a4_57 + 4088<i32>:word32] = Mem67[a5_61 + 8<32>:int32]
	a2_43 = Mem69[a5_61 + 0xC<32>:int32]
	Mem71[a4_57 + 4092<i32>:word32] = a2_43
	branch a5_61 != 0xDCF82154<32> l23058E6E
l23058E94:
	word32 a5_74 = Mem71[a4_57:word32]
	Mem76[0xC<32>:word32] = a4_57
	word32 a5_77 = Mem76[a5_74:word32]
	Mem79[9<32>:word32] = a5_77
	Mem80[0x14<32>:word32] = a5_77
	Mem81[0x11<32>:word32] = a5_77
	Mem82[0x1C<32>:word32] = a5_77
	Mem83[0x19<32>:word32] = a5_77
	Mem84[0x24<32>:word32] = a5_77
	Mem85[0x21<32>:word32] = a5_77
	Mem87[0x21<32>:word32] = a5_77
	Mem88[0x25<32>:word32] = a5_77
	Mem89[0x25<32>:word32] = a5_77
	Mem90[0x2D<32>:word32] = a5_77
	Mem92[0x32<32>:word32] = a5_77
l23058EC2:
	return
l23058CDE:
	Mem97[0x60003<32>:word32] = 0x4200DCB4<32>
	Mem102[0x4200DCB8<32>:word16] = 6<16>
	word32 a4_104 = 0x1C<32>
l23058D12:
	word32 a5_109 = a4_104 + -28<i32>
l23058D16:
	word32 a0_114 = Mem113[a5_109 + 0x2307DA3C<32>:word32]
	Mem117[a5_109 + 0x42016AEC<32>:word32] = a0_114
	Mem120[a5_109 + 0x42016CAC<32>:word32] = a0_114
	a5_109 = a5_109 + 4<32>
	branch a4_104 != a5_109 l23058D16
l23058D32:
	a4_104 = a4_104 + 0x1C<32>
	branch a4_104 != 476<i32> l23058D12
l23058D38:
	word32 a5_128 = 0<32>
	word32 a2_131 = 56<i32>
l23058D4E:
	Mem140[Mem135[a5_128 + 0x2307DA04<32>:word32]:word32] = a5_128 + 0x42016A7C<32>
	a5_128 = a5_128 + 4<32>
	branch a5_128 != 56<i32> l23058D4E
l23058D60:
	word32 a4_145 = 0x42016E6C<32>
l23058D74:
	word32 a5_149 = Mem148[a2_131:word32]
	a4_145 = a4_145 + 0x10<32>
	Mem153[a4_145 + 4080<i32>:word32] = a2_131
	Mem155[a4_145 + 4084<i32>:word32] = Mem153[a5_149 + 4<32>:int32]
	Mem157[a4_145 + 4088<i32>:word32] = Mem155[a5_149 + 8<32>:int32]
	a2_131 = Mem157[a5_149 + 0xC<32>:int32]
	Mem159[a4_145 + 4092<i32>:word32] = a2_131
	branch a5_149 != 0xDCF821D4<32> l23058D74
l23058D9A:
	word32 a5_162 = Mem159[a4_145:word32]
	Mem164[0xA<32>:word32] = a4_145
	word32 a5_165 = Mem164[a5_162:word32]
	Mem167[7<32>:word32] = a5_165
	Mem168[0x12<32>:word32] = a5_165
	Mem169[0xF<32>:word32] = a5_165
	Mem170[0x1A<32>:word32] = a5_165
	Mem171[0x17<32>:word32] = a5_165
	Mem172[0x22<32>:word32] = a5_165
	Mem173[0x1F<32>:word32] = a5_165
	Mem174[a5_165 + 32<i32>:word32] = 0<32>
	Mem175[a5_165 + 36<i32>:word32] = 0<32>
	Mem176[a5_165 + 36<i32>:word32] = 0<32>
	Mem177[a5_165 + 44<i32>:word32] = 0<32>
	Mem178[a5_165 + 48<i32>:word32] = 0<32>
	return
rf_pri_chipv_exit:


void rf_pri_update_tx_power_offset(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_apply_tx_power_offset
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
rf_pri_update_tx_power_offset_entry:
l23058EC4:
	word32 s1_17 = CONVERT(Mem16[a1 + a0:int8], int8, int32)
	word32 a7_97
	word32 a6_96
	word32 a2_93
	word32 a3_94
	word32 a5_95
	word32 a4_24
	memcpy(0x42016AEC<32>, 0x42016CAC<32>, 448<i32>, out a2_93, out a3_94, out a4_24, out a5_95, out a6_96, out a7_97)
	word32 s1_40 = (s1_17 ^ 4<32>) + 0xFFFFFFF6<32>
l23058F06:
	word32 a5_45 = Mem44[a4_24 + 20<i32>:word32]
	Mem49[a5_45 + 0x1014<32>:word32] = a4_24 + (s1_17 | 4<32>)
	a4_24 = Mem49[a5_45 + 0x18<32>:int32] + s1_40
	Mem53[a5_45 + 0x1018<32>:word32] = a4_24
	branch a5_45 != 0xBDFE9370<32> l23058F06
l23058F1E:
l23058F2A_thunk_rf_pri_set_gain_table_regs:
	rf_pri_set_gain_table_regs()
	return
rf_pri_update_tx_power_offset_exit:


word32 rf_pri_get_notch_param(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
rf_pri_get_notch_param_entry:
l23058F2E:
	word32 a5_11 = 0xD<32>
	branch a0 >u 0xFFF9A8<32> l23058F48
l23058F3A:
	a5_11 = a0 + 0xFF000694<32> >>u 5<32>
l23058F48:
	word32 a5_20 = Mem0[Mem0[0xFFF9A8<32>:word32] + 4<i32>:word32]
	Mem23[a1:byte] = 0xA8<8>
	Mem26[a5_20:word32] = a2
	return a5_11 << 3<u32>
rf_pri_get_notch_param_exit:


void rf_pri_update_param(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 t1 t3 t4
// Preserved: sp
rf_pri_update_param_entry:
l23058F62:
	word32 a4_23
	word32 a5_24
	word32 a5_15
	Mem4[0x4200E3AC<32>:word32] = 0<32>
	Mem6[0x4200E3B0<32>:word32] = 0<32>
	Mem8[0x4200E3A8<32>:word32] = 0<32>
	Mem10[0x4200E428<32>:word32] = 0<32>
	branch a0 <=u 0xFFF96B<32> l23059132
l23058F8C:
	branch a0 <=u 0xFFF970<32> l23059132
l23059132:
	a5_15 = 0<32>
l23058F94:
	branch a0 <=u 0xFFF97A<32> l23059126
l23059126:
	a5_15 = 1<32>
l23058F9C:
	branch a0 <=u 0xFFF989<32> l2305912A
l2305912A:
	a5_15 = 2<32>
l23058FA4:
	branch a0 <=u 0xFFF998<32> l2305912E
l2305912E:
	a5_15 = 3<32>
l23058FAC:
	a4_23 = 8<32>
	a5_24 = 7<32>
	branch a0 >u 0xFFF9A7<32> l23059024
l23058FB8:
	a5_15 = 4<32>
l23058FBA:
	word32 a2_29 = a5_15 << 2<u32>
	word32 a7_33 = Mem10[a2_29 + 0x2307D81C<32>:int32]
	word32 a6_35 = 0<32>
	branch a7_33 == a0 l23058FDA
l23058FD6:
	a6_35 = a0 - a7_33
l23058FDA:
	word32 t1_47 = Mem10[a2_29 + 0x2307D7EC<32>:int32]
	word32 a1_60 = a2_29 + 0x2307D7EC<32> - a7_33
	word32 a2_53 = Mem10[a2_29 + 0x2307D804<32>:word32]
	a4_23 = (Mem10[a2_29 + 0x2307D7EC<32>:word32] - t1_47 + a6_35 >>u a1_60) + t1_47
	a5_24 = ((a5_15 + 1<32> << 2<i32>) - a2_53 + a6_35 >>u a1_60) + a2_53
l23059024:
	Mem70[a5_24 + 31<i32>:word32] = 0x4200D714<32>
	Mem77[55<i32> - a4_23 + 20<i32>:word32] = 0x4200D714<32>
	word32 a7_101 = 0x4200D714<32>
	word32 a6_240 = 0<32>
	word32 a3_100 = 0xA<32>
	word32 a5_80 = 0x14<32> - a5_24
l2305904E:
	word32 a1_132 = Mem83[a7_101 + 16<i32>:int32] + a6_240 - a5_80
	a6_240 = 0<32>
	branch a3_100 >= a1_132 l23059060
l2305905C:
	a6_240 = a1_132 - a3_100
l23059060:
	branch a3_100 >= a1_132 l23059066
l23059064:
	a1_132 = a3_100
l23059066:
	Mem98[a7_101 + 12<i32>:word32] = a1_132
	a3_100 = a3_100 + 0xFFFFFFFB<32>
	a7_101 = a7_101 + 0xFFFFFFFC<32>
	branch a3_100 != 0xFFFFFFF6<32> l2305904E
l23059072:
	word32 a3_110 = 56<i32>
	word32 a7_111 = 0<32>
	word32 a5_114 = 0<32> - (a4_23 ^ 4<32>)
	word32 a5_116 = 0x14<32>
	word32 a4_117 = 0x14<32> - a4_23
l23059094:
	word32 a2_120 = Mem119[a5_116 + 20<i32>:word32]
	a5_116 = a5_116 - a7_111 + a4_117
	branch a5_116 > 95<i32> l23059136
l23059136:
	a5_116 = a5_116 + (a5_114 + 5<i32>)
l230590A0:
	Mem130[a5_116 + 24<i32>:word32] = a2_120
	word32 a2_133 = Mem130[a1_132 + 24<i32>:word32]
	a7_111 = 0<32>
	branch a1_132 >= a3_110 l230590AE
l230590AA:
	a7_111 = a3_110 - a1_132
l230590AE:
	branch a1_132 >= a3_110 l230590B4
l230590B2:
	a1_132 = a3_110
l230590B4:
	Mem144[a1_132 + 24<i32>:word32] = a2_133
	a3_110 = a3_110 + 5<32>
	branch a3_110 != 91<i32> l23059094
l230590BE:
	word32 a3_177
	word32 a5_178
	Mem160[0x4200D724<32>:word32] = 0xF<32>
	Mem163[0x4200D728<32>:word32] = 51<i32>
	branch a0 >u 0xFFF985<32> l2305913A
l2305913A:
	a3_177 = Mem163[0xFFF9F1<32>:word32]
	a5_178 = CONVERT(Mem163[0x4200DCB8<32>:uint16], uint16, word32)
l230590E2:
	a3_177 = Mem163[0xFFF9F1<32>:word32]
	a5_178 = CONVERT(Mem163[0x4200DCB6<32>:uint16], uint16, word32)
l230590EA:
	word32 a5_194
	Mem187[(a5_178 | 0xFFF980<32>) + 108<i32>:word32] = a3_177
	branch a0 == 0xFFF98A<32> l230591EA
l230591EA:
	a5_194 = Mem187[0x42016A94<32>:int32]
l23059100:
	branch a0 >u 0xFFF98A<32> l23059166
l23059166:
	branch a0 == 0xFFF99E<32> l23059208
l23059208:
	a5_194 = Mem187[0x42016AA4<32>:int32]
l2305916E:
	branch a0 >u 0xFFF99E<32> l23059194
l23059194:
	branch a0 == 0xFFF9A8<32> l23059212
l23059212:
	a5_194 = Mem187[0x42016AAC<32>:int32]
l2305919C:
	branch a0 == 0xFFF9B4<32> l2305921C
l2305921C:
	a5_194 = Mem187[0x42016AB0<32>:int32]
l230591A4:
	branch a0 != 0xFFF9A3<32> l23059120
l230591AC:
	a5_194 = Mem187[0x42016AA8<32>:int32]
l23059172:
	branch a0 == 0xFFF994<32> l230591F4
l230591F4:
	a5_194 = Mem187[0x42016A9C<32>:int32]
l2305917A:
	branch a0 == 0xFFF999<32> l230591FE
l230591FE:
	a5_194 = Mem187[0x42016AA0<32>:int32]
l23059182:
	branch a0 != 0xFFF98F<32> l23059120
l2305918A:
	a5_194 = Mem187[0x42016A98<32>:int32]
l23059104:
	branch a0 == 0xFFF976<32> l230591CC
l230591CC:
	a5_194 = Mem187[0x42016A84<32>:int32]
l2305910C:
	branch a0 >u 0xFFF976<32> l23059144
l23059144:
	branch a0 == 0xFFF980<32> l230591D6
l230591D6:
	a5_194 = Mem187[0x42016A8C<32>:int32]
l2305914C:
	branch a0 == 0xFFF985<32> l230591E0
l230591E0:
	a5_194 = Mem187[0x42016A90<32>:int32]
l23059154:
	branch a0 != 0xFFF97B<32> l23059120
l2305915C:
	a5_194 = Mem187[0x42016A88<32>:int32]
l23059110:
	branch a0 == 0xFFF96C<32> l230591B6
l230591B6:
	a5_194 = Mem187[0x42016A7C<32>:int32]
l23059118:
	branch a0 == 0xFFF971<32> l230591C2
l230591C2:
	a5_194 = Mem187[0x42016A80<32>:int32]
l230591BE:
	Mem236[a5_194:word32] = 0x4200E420<32>
	return
l23059120:
	Mem238[0x4200E420<32>:word32] = 0<32>
	return
rf_pri_update_param_exit:


void rf_pri_xtalfreq(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
rf_pri_xtalfreq_entry:
l23059226:
	word32 a4_456
	branch a0 != 0<32> l2305942E
l2305942E:
	word32 a4_603
	branch a0 != 1<32> l23059650
l23059650:
	branch a0 != 2<32> l23059842
l23059842:
	branch a0 != 3<32> l23059A44
l23059A44:
	branch a0 != 4<32> l23059C48
l23059C48:
	branch a0 != 5<32> l2305964E
l23059C4E:
	Mem13[0xF690690<32>:word32] = 0x4200D650<32>
	Mem16[0xF6F96FD<32>:word32] = 0x4200D650<32>
	Mem19[0xF76276A<32>:word32] = 0x4200D650<32>
	Mem22[0xF7CB7D7<32>:word32] = 0x4200D650<32>
	Mem25[0xF834845<32>:word32] = 0x4200D650<32>
	Mem28[0xF89D8B2<32>:word32] = 0x4200D650<32>
	Mem31[0xF90691F<32>:word32] = 0x4200D650<32>
	Mem34[0xF96F98C<32>:word32] = 0x4200D650<32>
	Mem37[0xF9D89F9<32>:word32] = 0x4200D650<32>
	Mem40[0xFA41A66<32>:word32] = 0x4200D650<32>
	Mem43[0xFAAAAD3<32>:word32] = 0x4200D650<32>
	Mem46[0xFB13B40<32>:word32] = 0x4200D650<32>
	Mem49[0xFB7CBAD<32>:word32] = 0x4200D650<32>
	Mem52[0xFBE5C1A<32>:word32] = 0x4200D650<32>
	Mem55[0xFC4EC87<32>:word32] = 0x4200D650<32>
	Mem58[0xFCB7CF4<32>:word32] = 0x4200D650<32>
	Mem61[0xFD20D61<32>:word32] = 0x4200D650<32>
	Mem64[0xFD89DCE<32>:word32] = 0x4200D650<32>
	Mem67[0xFDF2E3B<32>:word32] = 0x4200D650<32>
	Mem70[0xFE5BEA8<32>:word32] = 0x4200D650<32>
	Mem73[0xFEC4F15<32>:word32] = 0x4200D650<32>
	Mem78[0xA734A6ED<32>:word32] = 0x4200D624<32>
	Mem81[0xA7C2A77F<32>:word32] = 0x4200D624<32>
	Mem84[0xA850A811<32>:word32] = 0x4200D624<32>
	Mem87[0xA8DEA8A3<32>:word32] = 0x4200D624<32>
	Mem90[0xA96DA935<32>:word32] = 0x4200D624<32>
	Mem93[0xA9FBA9C8<32>:word32] = 0x4200D624<32>
	Mem96[0xAA89AA5A<32>:word32] = 0x4200D624<32>
	Mem99[0xAB17AAEC<32>:word32] = 0x4200D624<32>
	Mem102[0xABA5AB7E<32>:word32] = 0x4200D624<32>
	Mem105[0xAC34AC10<32>:word32] = 0x4200D624<32>
	Mem108[0x4200D64C<32>:word16] = 0xFC7B<16>
	Mem114[0xA6E2A6A2<32>:word32] = 0x4200DCA8<32>
	Mem115[0x4200DCAC<32>:word16] = 0xFCE2<16>
	Mem119[0x4200ECAE<32>:word16] = 0xFAD5<16>
	Mem122[0x29<32>:word32] = 0x4200D6A4<32>
	Mem123[0x31<32>:word32] = 0x4200D6A4<32>
	Mem124[0x39<32>:word32] = 0x4200D6A4<32>
	Mem125[0x41<32>:word32] = 0x4200D6A4<32>
	Mem128[0x6ACFEC<32>:word32] = 0x4200D6A4<32>
	Mem131[0x1E84B4<32>:word32] = 0x4200D6A4<32>
	Mem134[0xFFD2397C<32>:word32] = 0x4200D6A4<32>
	Mem137[0x4200D6A4<32>:word32] = 0<32>
	Mem138[0x4200D6AC<32>:word32] = 0<32>
	Mem139[0x4200D6B4<32>:word32] = 0<32>
	Mem140[0x4200D6BC<32>:word32] = 0<32>
	Mem141[0x4200D6C4<32>:word32] = 0<32>
	Mem142[0x4200D6EC<32>:word32] = 0<32>
	Mem143[0x4200D6F4<32>:word32] = 0<32>
	Mem144[0x4200D6FC<32>:word32] = 0<32>
	Mem145[0x4200D704<32>:word32] = 0<32>
	Mem146[0x4200D70C<32>:word32] = 0<32>
	Mem147[0x4200D6A8<32>:word32] = 0<32>
	Mem148[0x4200D6B0<32>:word32] = 0<32>
	Mem149[0x4200D6B8<32>:word32] = 0<32>
	Mem150[0x4200D6C0<32>:word32] = 0<32>
	Mem151[0x4200D6C8<32>:word32] = 0<32>
	Mem152[0xFF85EE44<32>:word32] = 0x4200D6A4<32>
	Mem153[0x4200D6F0<32>:word32] = 0<32>
	Mem154[0x4200D6F8<32>:word32] = 0<32>
	Mem155[0x4200D700<32>:word32] = 0<32>
l23059A4A:
	Mem160[0x14088889<32>:word32] = 0x4200D650<32>
	Mem163[0x14111115<32>:word32] = 0x4200D650<32>
	Mem166[0x141999A2<32>:word32] = 0x4200D650<32>
	Mem169[0x1422222E<32>:word32] = 0x4200D650<32>
	Mem172[0x142AAABB<32>:word32] = 0x4200D650<32>
	Mem175[0x14333347<32>:word32] = 0x4200D650<32>
	Mem178[0x143BBBD4<32>:word32] = 0x4200D650<32>
	Mem181[0x14444460<32>:word32] = 0x4200D650<32>
	Mem184[0x144CCCED<32>:word32] = 0x4200D650<32>
	Mem187[0x14555579<32>:word32] = 0x4200D650<32>
	Mem190[0x145DDE06<32>:word32] = 0x4200D650<32>
	Mem193[0x14666692<32>:word32] = 0x4200D650<32>
	Mem196[0x146EEF1F<32>:word32] = 0x4200D650<32>
	Mem199[0x147777AB<32>:word32] = 0x4200D650<32>
	Mem201[0x14800038<32>:word32] = 0x4200D650<32>
	Mem204[0x148888C5<32>:word32] = 0x4200D650<32>
	Mem207[0x14911151<32>:word32] = 0x4200D650<32>
	Mem210[0x149999DE<32>:word32] = 0x4200D650<32>
	Mem213[0x14A2226A<32>:word32] = 0x4200D650<32>
	Mem216[0x14AAAAF7<32>:word32] = 0x4200D650<32>
	Mem219[0x14B33383<32>:word32] = 0x4200D650<32>
	Mem224[0xA732A6EB<32>:word32] = 0x4200D624<32>
	Mem227[0xA7C0A77D<32>:word32] = 0x4200D624<32>
	Mem230[0xA84FA810<32>:word32] = 0x4200D624<32>
	Mem233[0xA8DDA8A2<32>:word32] = 0x4200D624<32>
	Mem236[0xA96BA934<32>:word32] = 0x4200D624<32>
	Mem239[0xA9F9A9C6<32>:word32] = 0x4200D624<32>
	Mem242[0xAA87AA58<32>:word32] = 0x4200D624<32>
	Mem245[0xAB16AAEB<32>:word32] = 0x4200D624<32>
	Mem248[0xABA4AB7D<32>:word32] = 0x4200D624<32>
	Mem251[0xAC32AC0F<32>:word32] = 0x4200D624<32>
	Mem254[0x4200D64C<32>:word16] = 0xFC79<16>
	Mem260[0xA6E0A6A0<32>:word32] = 0x4200DCA8<32>
	Mem261[0x4200DCAC<32>:word16] = 0xFCE0<16>
	Mem265[0x4200ECAE<32>:word16] = 0xF855<16>
	Mem270[0x21<32>:word32] = 0x4200D6A4<32>
	Mem271[0x29<32>:word32] = 0x4200D6A4<32>
	Mem272[0x31<32>:word32] = 0x4200D6A4<32>
	Mem273[0x39<32>:word32] = 0x4200D6A4<32>
	Mem274[0x61<32>:word32] = 0x4200D6A4<32>
	Mem275[0x69<32>:word32] = 0x4200D6A4<32>
	Mem276[0x2DC6EC<32>:word32] = 0x4200D6A4<32>
	Mem281[0x7A1224<32>:word32] = 0x4200D6A4<32>
	Mem282[0xFFE17BB4<32>:word32] = 0x4200D6A4<32>
	Mem283[0x7A1264<32>:word32] = 0x4200D6A4<32>
	Mem288[0x4200D6A4<32>:word32] = 0<32>
	Mem289[0x4200D6AC<32>:word32] = 0<32>
	Mem290[0x4200D6B4<32>:word32] = 0<32>
	Mem291[0x4200D6BC<32>:word32] = 0<32>
	Mem292[0x4200D6E4<32>:word32] = 0<32>
	Mem293[0x4200D6EC<32>:word32] = 0<32>
	Mem294[0x4200D6F4<32>:word32] = 0<32>
	Mem295[0x4200D6FC<32>:word32] = 0<32>
	Mem296[0x4200D6A8<32>:word32] = 0<32>
	Mem297[0x4200D6B0<32>:word32] = 0<32>
	Mem298[0x4200D6B8<32>:word32] = 0<32>
	Mem299[0x4200D6C0<32>:word32] = 0<32>
	Mem300[0xFF95307C<32>:word32] = 0x4200D6A4<32>
	Mem301[0x4200D6E8<32>:word32] = 0<32>
	Mem302[0x4200D6F0<32>:word32] = 0<32>
	Mem303[0x4200D6F8<32>:word32] = 0<32>
	Mem304[0x4200D700<32>:word32] = 0<32>
	Mem305[0xFFC2F76C<32>:word32] = 0x4200D6A4<32>
	return
l23059848:
	Mem310[0x14DE38E4<32>:word32] = 0x4200D650<32>
	Mem313[0x14E71C76<32>:word32] = 0x4200D650<32>
	Mem315[0x14F00008<32>:word32] = 0x4200D650<32>
	Mem318[0x14F8E39A<32>:word32] = 0x4200D650<32>
	Mem321[0x1501C72C<32>:word32] = 0x4200D650<32>
	Mem324[0x150AAABF<32>:word32] = 0x4200D650<32>
	Mem327[0x15138E51<32>:word32] = 0x4200D650<32>
	Mem330[0x151C71E3<32>:word32] = 0x4200D650<32>
	Mem333[0x15255575<32>:word32] = 0x4200D650<32>
	Mem336[0x152E3908<32>:word32] = 0x4200D650<32>
	Mem339[0x15371C9A<32>:word32] = 0x4200D650<32>
	Mem341[0x1540002C<32>:word32] = 0x4200D650<32>
	Mem344[0x1548E3BE<32>:word32] = 0x4200D650<32>
	Mem347[0x1551C750<32>:word32] = 0x4200D650<32>
	Mem350[0x155AAAE3<32>:word32] = 0x4200D650<32>
	Mem353[0x15638E75<32>:word32] = 0x4200D650<32>
	Mem356[0x156C7207<32>:word32] = 0x4200D650<32>
	Mem359[0x15755599<32>:word32] = 0x4200D650<32>
	Mem362[0x157E392C<32>:word32] = 0x4200D650<32>
	Mem365[0x15871CBE<32>:word32] = 0x4200D650<32>
	Mem367[0x15900050<32>:word32] = 0x4200D650<32>
	Mem372[0xA739A6F2<32>:word32] = 0x4200D624<32>
	Mem375[0xA7C7A784<32>:word32] = 0x4200D624<32>
	Mem378[0xA855A816<32>:word32] = 0x4200D624<32>
	Mem381[0xA8E4A8A8<32>:word32] = 0x4200D624<32>
	Mem384[0xA972A93B<32>:word32] = 0x4200D624<32>
	Mem387[0xAA00A9CD<32>:word32] = 0x4200D624<32>
	Mem390[0xAA8EAA5F<32>:word32] = 0x4200D624<32>
	Mem393[0xAB1CAAF1<32>:word32] = 0x4200D624<32>
	Mem396[0xABABAB84<32>:word32] = 0x4200D624<32>
	Mem399[0xAC39AC16<32>:word32] = 0x4200D624<32>
	Mem402[0x4200D64C<32>:word16] = 0xFC80<16>
	Mem408[0xA6E7A6A7<32>:word32] = 0x4200DCA8<32>
	Mem409[0x4200DCAC<32>:word16] = 0xFCE7<16>
	Mem413[0x4200ECAE<32>:word16] = 0xF800<16>
	Mem416[1<32>:word32] = 0x4200D6A4<32>
	Mem417[9<32>:word32] = 0x4200D6A4<32>
	Mem418[0x11<32>:word32] = 0x4200D6A4<32>
	Mem419[0x19<32>:word32] = 0x4200D6A4<32>
	Mem420[0x41<32>:word32] = 0x4200D6A4<32>
	Mem421[0x49<32>:word32] = 0x4200D6A4<32>
	Mem422[0x51<32>:word32] = 0x4200D6A4<32>
	Mem423[0x59<32>:word32] = 0x4200D6A4<32>
	Mem426[0x6DDD04<32>:word32] = 0x4200D6A4<32>
	Mem429[0x2191CC<32>:word32] = 0x4200D6A4<32>
	Mem432[0xFFD54694<32>:word32] = 0x4200D6A4<32>
	Mem435[0xFF88FB5C<32>:word32] = 0x4200D6A4<32>
	Mem438[0x557344<32>:word32] = 0x4200D6A4<32>
	Mem441[0x9280C<32>:word32] = 0x4200D6A4<32>
	Mem444[0xFFBCDCD4<32>:word32] = 0x4200D6A4<32>
	Mem446[0x4200D6C4<32>:word32] = 0<32>
	Mem447[0x4200D6CC<32>:word32] = 0<32>
	Mem448[0x4200D6D4<32>:word32] = 0<32>
	Mem449[0x4200D6DC<32>:word32] = 0<32>
	Mem450[0x4200D704<32>:word32] = 0<32>
	Mem451[0x4200D70C<32>:word32] = 0<32>
	Mem452[0x4200D6C8<32>:word32] = 0<32>
	Mem453[0x4200D6D0<32>:word32] = 0<32>
	Mem454[0x4200D6D8<32>:word32] = 0<32>
	Mem455[0x4200D6E0<32>:word32] = 0<32>
	a4_456 = 0xFF709140<32>
l23059656:
	Mem461[0x190AAAAB<32>:word32] = 0x4200D650<32>
	Mem464[0x19155559<32>:word32] = 0x4200D650<32>
	Mem466[0x19200008<32>:word32] = 0x4200D650<32>
	Mem469[0x192AAAB7<32>:word32] = 0x4200D650<32>
	Mem472[0x19355565<32>:word32] = 0x4200D650<32>
	Mem474[0x19400014<32>:word32] = 0x4200D650<32>
	Mem477[0x194AAAC3<32>:word32] = 0x4200D650<32>
	Mem480[0x19555571<32>:word32] = 0x4200D650<32>
	Mem482[0x19600020<32>:word32] = 0x4200D650<32>
	Mem485[0x196AAACF<32>:word32] = 0x4200D650<32>
	Mem488[0x1975557D<32>:word32] = 0x4200D650<32>
	Mem490[0x1980002C<32>:word32] = 0x4200D650<32>
	Mem493[0x198AAADB<32>:word32] = 0x4200D650<32>
	Mem496[0x19955589<32>:word32] = 0x4200D650<32>
	Mem498[0x19A00038<32>:word32] = 0x4200D650<32>
	Mem501[0x19AAAAE7<32>:word32] = 0x4200D650<32>
	Mem504[0x19B55595<32>:word32] = 0x4200D650<32>
	Mem506[0x19C00044<32>:word32] = 0x4200D650<32>
	Mem509[0x19CAAAF3<32>:word32] = 0x4200D650<32>
	Mem512[0x19D555A1<32>:word32] = 0x4200D650<32>
	Mem514[0x19E00050<32>:word32] = 0x4200D650<32>
	Mem519[0xA741A6FA<32>:word32] = 0x4200D624<32>
	Mem522[0xA7D0A78C<32>:word32] = 0x4200D624<32>
	Mem525[0xA85EA81F<32>:word32] = 0x4200D624<32>
	Mem528[0xA8ECA8B1<32>:word32] = 0x4200D624<32>
	Mem531[0xA97AA943<32>:word32] = 0x4200D624<32>
	Mem534[0xAA09A9D5<32>:word32] = 0x4200D624<32>
	Mem537[0xAA97AA68<32>:word32] = 0x4200D624<32>
	Mem540[0xAB25AAFA<32>:word32] = 0x4200D624<32>
	Mem543[0xABB3AB8C<32>:word32] = 0x4200D624<32>
	Mem546[0xAC42AC1E<32>:word32] = 0x4200D624<32>
	Mem549[0x4200D64C<32>:word16] = 0xFC89<16>
	Mem555[0xA6EFA6AF<32>:word32] = 0x4200DCA8<32>
	Mem556[0x4200DCAC<32>:word16] = 0xFCF0<16>
	Mem559[0x4200ECAE<32>:word16] = 0x6AB<16>
	Mem562[0x11<32>:word32] = 0x4200D6A4<32>
	Mem563[0x19<32>:word32] = 0x4200D6A4<32>
	Mem564[0x21<32>:word32] = 0x4200D6A4<32>
	Mem565[0x29<32>:word32] = 0x4200D6A4<32>
	Mem566[0x31<32>:word32] = 0x4200D6A4<32>
	Mem567[0x49<32>:word32] = 0x4200D6A4<32>
	Mem568[0x51<32>:word32] = 0x4200D6A4<32>
	Mem569[0x59<32>:word32] = 0x4200D6A4<32>
	Mem570[0x61<32>:word32] = 0x4200D6A4<32>
	Mem573[0x989694<32>:word32] = 0x4200D6A4<32>
	Mem576[0x4C4B5C<32>:word32] = 0x4200D6A4<32>
	Mem579[0xFFB3B4EC<32>:word32] = 0x4200D6A4<32>
	Mem582[0xFF6769B4<32>:word32] = 0x4200D6A4<32>
	Mem585[0x6AD00C<32>:word32] = 0x4200D6A4<32>
	Mem588[0x1E84D4<32>:word32] = 0x4200D6A4<32>
	Mem591[0xFFD2399C<32>:word32] = 0x4200D6A4<32>
	Mem593[0x4200D6A4<32>:word32] = 0<32>
	Mem594[0x4200D6AC<32>:word32] = 0<32>
	Mem595[0x4200D6DC<32>:word32] = 0<32>
	Mem596[0x4200D6E4<32>:word32] = 0<32>
	Mem597[0x4200D70C<32>:word32] = 0<32>
	Mem598[0x4200D6A8<32>:word32] = 0<32>
	Mem599[0x4200D6B0<32>:word32] = 0<32>
	Mem600[0x4200D6C8<32>:word32] = 0<32>
	Mem601[0x4200D6E0<32>:word32] = 0<32>
	Mem602[0x4200D6E8<32>:word32] = 0<32>
	a4_603 = 0xFF85EE00<32>
l23059434:
	Mem608[0x1ED20D21<32>:word32] = 0x4200D650<32>
	Mem611[0x1EDF2DF7<32>:word32] = 0x4200D650<32>
	Mem614[0x1EEC4ECD<32>:word32] = 0x4200D650<32>
	Mem617[0x1EF96FA3<32>:word32] = 0x4200D650<32>
	Mem620[0x1F069079<32>:word32] = 0x4200D650<32>
	Mem623[0x1F13B14F<32>:word32] = 0x4200D650<32>
	Mem626[0x1F20D225<32>:word32] = 0x4200D650<32>
	Mem629[0x1F2DF2FB<32>:word32] = 0x4200D650<32>
	Mem632[0x1F3B13D1<32>:word32] = 0x4200D650<32>
	Mem635[0x1F4834A7<32>:word32] = 0x4200D650<32>
	Mem638[0x1F55557D<32>:word32] = 0x4200D650<32>
	Mem641[0x1F627653<32>:word32] = 0x4200D650<32>
	Mem644[0x1F6F9729<32>:word32] = 0x4200D650<32>
	Mem647[0x1F7CB7FF<32>:word32] = 0x4200D650<32>
	Mem650[0x1F89D8D6<32>:word32] = 0x4200D650<32>
	Mem653[0x1F96F9AC<32>:word32] = 0x4200D650<32>
	Mem656[0x1FA41A82<32>:word32] = 0x4200D650<32>
	Mem659[0x1FB13B58<32>:word32] = 0x4200D650<32>
	Mem662[0x1FBE5C2E<32>:word32] = 0x4200D650<32>
	Mem665[0x1FCB7D04<32>:word32] = 0x4200D650<32>
	Mem668[0x1FD89DDA<32>:word32] = 0x4200D650<32>
	Mem673[0xA743A6FC<32>:word32] = 0x4200D624<32>
	Mem676[0xA7D1A78E<32>:word32] = 0x4200D624<32>
	Mem679[0xA860A821<32>:word32] = 0x4200D624<32>
	Mem682[0xA8EEA8B3<32>:word32] = 0x4200D624<32>
	Mem685[0xA97CA945<32>:word32] = 0x4200D624<32>
	Mem688[0xAA0AA9D7<32>:word32] = 0x4200D624<32>
	Mem691[0xAA99AA6A<32>:word32] = 0x4200D624<32>
	Mem694[0xAB27AAFC<32>:word32] = 0x4200D624<32>
	Mem697[0xABB5AB8E<32>:word32] = 0x4200D624<32>
	Mem700[0xAC43AC20<32>:word32] = 0x4200D624<32>
	Mem703[0x4200D64C<32>:word16] = 0xFC8B<16>
	Mem709[0xA6F1A6B1<32>:word32] = 0x4200DCA8<32>
	Mem710[0x4200DCAC<32>:word16] = 0xFCF2<16>
	Mem713[0x4200ECAE<32>:word16] = 0x56B<16>
	Mem718[0x5B8D84<32>:word32] = 0x4200D6A4<32>
	Mem721[0xF424C<32>:word32] = 0x4200D6A4<32>
	Mem724[0xFFC2F714<32>:word32] = 0x4200D6A4<32>
	Mem727[0xFF76ABDC<32>:word32] = 0x4200D6A4<32>
	Mem730[0x6ACFEC<32>:word32] = 0x4200D6A4<32>
	Mem733[0x1E84B4<32>:word32] = 0x4200D6A4<32>
	Mem736[0xFFD2397C<32>:word32] = 0x4200D6A4<32>
	Mem739[0xFF85EE44<32>:word32] = 0x4200D6A4<32>
	Mem742[0x7A1254<32>:word32] = 0x4200D6A4<32>
	Mem745[0x2DC71C<32>:word32] = 0x4200D6A4<32>
	Mem747[a0:word32] = 0x4200D6A4<32>
	Mem748[a0 + 8<i32>:word32] = 0x4200D6A4<32>
	Mem749[a0 + 16<i32>:word32] = 0x4200D6A4<32>
	Mem750[a0 + 24<i32>:word32] = 0x4200D6A4<32>
	Mem751[0x4200D6C4<32>:word32] = 0<32>
	Mem752[a0 + 40<i32>:word32] = 0x4200D6A4<32>
	Mem753[a0 + 48<i32>:word32] = 0x4200D6A4<32>
	Mem754[a0 + 56<i32>:word32] = 0x4200D6A4<32>
	Mem755[a0 + 64<i32>:word32] = 0x4200D6A4<32>
	Mem756[0x4200D6EC<32>:word32] = 0<32>
	Mem757[a0 + 80<i32>:word32] = 0x4200D6A4<32>
	Mem758[a0 + 88<i32>:word32] = 0x4200D6A4<32>
	Mem759[a0 + 96<i32>:word32] = 0x4200D6A4<32>
	Mem760[0x4200D70C<32>:word32] = 0<32>
	Mem761[0x4200D6C8<32>:word32] = 0<32>
	Mem762[0x4200D6F0<32>:word32] = 0<32>
	a4_603 = 0xFFE17B80<32>
l23059648:
	Mem766[a4_603 + 100<i32>:word32] = 0x4200D6A4<32>
l2305922A:
	Mem771[0x21638E39<32>:word32] = 0x4200D650<32>
	Mem774[0x2171C720<32>:word32] = 0x4200D650<32>
	Mem776[0x21800008<32>:word32] = 0x4200D650<32>
	Mem779[0x218E38F0<32>:word32] = 0x4200D650<32>
	Mem782[0x219C71D7<32>:word32] = 0x4200D650<32>
	Mem785[0x21AAAABF<32>:word32] = 0x4200D650<32>
	Mem788[0x21B8E3A6<32>:word32] = 0x4200D650<32>
	Mem791[0x21C71C8E<32>:word32] = 0x4200D650<32>
	Mem794[0x21D55575<32>:word32] = 0x4200D650<32>
	Mem797[0x21E38E5D<32>:word32] = 0x4200D650<32>
	Mem800[0x21F1C744<32>:word32] = 0x4200D650<32>
	Mem802[0x2200002C<32>:word32] = 0x4200D650<32>
	Mem805[0x220E3914<32>:word32] = 0x4200D650<32>
	Mem808[0x221C71FB<32>:word32] = 0x4200D650<32>
	Mem811[0x222AAAE3<32>:word32] = 0x4200D650<32>
	Mem814[0x2238E3CA<32>:word32] = 0x4200D650<32>
	Mem817[0x22471CB2<32>:word32] = 0x4200D650<32>
	Mem820[0x22555599<32>:word32] = 0x4200D650<32>
	Mem823[0x22638E81<32>:word32] = 0x4200D650<32>
	Mem826[0x2271C768<32>:word32] = 0x4200D650<32>
	Mem828[0x22800050<32>:word32] = 0x4200D650<32>
	Mem833[0xA739A6F2<32>:word32] = 0x4200D624<32>
	Mem836[0xA7C7A784<32>:word32] = 0x4200D624<32>
	Mem839[0xA855A816<32>:word32] = 0x4200D624<32>
	Mem842[0xA8E4A8A8<32>:word32] = 0x4200D624<32>
	Mem845[0xA972A93B<32>:word32] = 0x4200D624<32>
	Mem848[0xAA00A9CD<32>:word32] = 0x4200D624<32>
	Mem851[0xAA8EAA5F<32>:word32] = 0x4200D624<32>
	Mem854[0xAB1CAAF1<32>:word32] = 0x4200D624<32>
	Mem857[0xABABAB84<32>:word32] = 0x4200D624<32>
	Mem860[0xAC39AC16<32>:word32] = 0x4200D624<32>
	Mem863[0x4200D64C<32>:word16] = 0xFC80<16>
	Mem869[0xA6E7A6A7<32>:word32] = 0x4200DCA8<32>
	Mem870[0x4200DCAC<32>:word16] = 0xFCE7<16>
	Mem873[0x4200ECAE<32>:word16] = 0x500<16>
	Mem877[9<32>:word32] = 0x4200D6A4<32>
	Mem878[0x11<32>:word32] = 0x4200D6A4<32>
	Mem879[0x19<32>:word32] = 0x4200D6A4<32>
	Mem880[0x21<32>:word32] = 0x4200D6A4<32>
	Mem881[0x31<32>:word32] = 0x4200D6A4<32>
	Mem882[0x39<32>:word32] = 0x4200D6A4<32>
	Mem883[0x41<32>:word32] = 0x4200D6A4<32>
	Mem884[0x49<32>:word32] = 0x4200D6A4<32>
	Mem885[0x59<32>:word32] = 0x4200D6A4<32>
	Mem886[0x61<32>:word32] = 0x4200D6A4<32>
	Mem889[0x6ACFCC<32>:word32] = 0x4200D6A4<32>
	Mem892[0x1E8494<32>:word32] = 0x4200D6A4<32>
	Mem895[0xFFD2395C<32>:word32] = 0x4200D6A4<32>
	Mem898[0xFF85EE24<32>:word32] = 0x4200D6A4<32>
	Mem901[0x5B8DB4<32>:word32] = 0x4200D6A4<32>
	Mem904[0xF427C<32>:word32] = 0x4200D6A4<32>
	Mem907[0xFFC2F744<32>:word32] = 0x4200D6A4<32>
	Mem910[0xFF76AC0C<32>:word32] = 0x4200D6A4<32>
	Mem912[0x4200D6A4<32>:word32] = 0<32>
	Mem913[0x4200D6CC<32>:word32] = 0<32>
	Mem914[0x4200D6F4<32>:word32] = 0<32>
	Mem915[0x4200D70C<32>:word32] = 0<32>
	Mem916[0x4200D6A8<32>:word32] = 0<32>
	Mem917[0x4200D6D0<32>:word32] = 0<32>
	Mem918[0x4200D6F8<32>:word32] = 0<32>
	a4_456 = 0x4C4B40<32>
l23059426:
	Mem922[a4_456 + 92<i32>:word32] = 0x4200D6A4<32>
l23059428:
	Mem924[0x4200D708<32>:word32] = 0<32>
l2305964A:
	Mem926[0x4200D710<32>:word32] = 0<32>
l2305964E:
	return
rf_pri_xtalfreq_exit:


word32 rf_pri_get_vco_freq_cw(word32 ra, word32 a0, word32 fflags, word32 frm)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
rf_pri_get_vco_freq_cw_entry:
l23059E4A:
	word32 a1_11
	word32 a1_22
	word32 a5_64
	word32 a4_63
	word32 a3_62
	word32 a1_61
	word32 a0_30 = __fixdfsi(ra, __adddf3(ra, __floatunsidf(a0 + 0xFF00069C<32> >>u 2<i32>, out a1_11), a1_11, Mem10[0x2307CDE8<32>:int32], Mem10[0x2307CDEC<32>:int32], fflags, frm, out a1_22), a1_22, fflags, frm, out a1_61, out a3_62, out a4_63, out a5_64)
	branch a0_30 <= 0x14<32> l23059E78
l23059E76:
	a0_30 = 0x14<32>
l23059E78:
	return CONVERT(Mem10[(a0_30 + 8<32> << 1<i32>) + Mem10[0x4200DCBC<32>:int32] + 12<i32>:uint16], uint16, word32) & 255<i32>
rf_pri_get_vco_freq_cw_exit:


word32 rf_pri_get_vco_idac_cw(word32 ra, word32 a0, word32 fflags, word32 frm)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
rf_pri_get_vco_idac_cw_entry:
l23059E94:
	word32 a1_11
	word32 a1_22
	word32 a5_65
	word32 a4_64
	word32 a3_63
	word32 a1_62
	word32 a0_30 = __fixdfsi(ra, __adddf3(ra, __floatunsidf(a0 + 0xFF00069C<32> >>u 2<i32>, out a1_11), a1_11, Mem10[0x2307CDE8<32>:int32], Mem10[0x2307CDEC<32>:int32], fflags, frm, out a1_22), a1_22, fflags, frm, out a1_62, out a3_63, out a4_64, out a5_65)
	branch a0_30 <= 0x14<32> l23059EC2
l23059EC0:
	a0_30 = 0x14<32>
l23059EC2:
	return CONVERT(Mem10[(a0_30 + 8<32> << 1<i32>) + Mem10[0x4200DCBC<32>:int32] + 12<i32>:uint16], uint16, word32) >>u 8<i32> & 0x1F<32>
rf_pri_get_vco_idac_cw_exit:


word32 rf_pri_get_txgain_max()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
//      trpc_init
//      phy_tcal_txpwr
// MayUse: 
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
rf_pri_get_txgain_max_entry:
l23059EDE:
	return Mem0[0x4200E424<32>:int32] + (Mem0[0x42016B04<32>:int32] + Mem0[0x4200E420<32>:int32])
rf_pri_get_txgain_max_exit:


word32 rf_pri_get_txgain_min()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
//      trpc_init
//      phy_tcal_txpwr
// MayUse: 
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
rf_pri_get_txgain_min_entry:
l23059EFC:
	return Mem0[0x4200E424<32>:int32] + (Mem0[0x42016CA8<32>:int32] + Mem0[0x4200E420<32>:int32])
rf_pri_get_txgain_min_exit:


word32 rf_pri_get_txgain_index(word32 a0, word32 a1, word32 a3, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_get_power_level
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
rf_pri_get_txgain_index_entry:
l23059F1A:
	branch a1 != 0<32> l23059F1E
l23059F1C:
	a0 = a0 + 0xFFFFFFE2<32>
l23059F1E:
	word32 a1_9 = Mem0[0x4200E420<32>:int32]
	word32 a6_12 = Mem0[0x4200E424<32>:int32]
	word32 a5_14 = 0<32>
l23059F3A:
	word32 a4_18 = Mem0[a3 + 24<i32>:word32]
	a3 = a3 + a1_9 + a6_12
	branch a0 >= a3 l23059F4E
l23059F44:
	a5_14 = a5_14 + 1<32>
	a4_18 = a4_18 + 0x1C<32>
	branch a5_14 != 0x10<32> l23059F3A
l23059F4C:
	a5_14 = 0xF<32>
l23059F4E:
	a3Out = a3
	a4Out = a4_18
	return a5_14
rf_pri_get_txgain_index_exit:


word32 rf_pri_query_txgain_table(word32 a0, word32 a1, word32 a2, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a4 a5
// Preserved: sp
rf_pri_query_txgain_table_entry:
l23059F52:
	branch a0 <=u 0xF<32> l23059F5A
l23059F58:
	a0 = 0xF<32>
l23059F5A:
	Mem12[7<32> - (a0 >>u 1<u32>):word32] = a1
	word32 a0_17 = Mem12[0x42016B00<32>:word32]
	Mem20[0x42016AEC<32>:word32] = a2
	a5Out = 0x42016AEC<32>
	return a0_17
rf_pri_query_txgain_table_exit:


void rf_pri_update_dvga_os(word32 a0, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6
// Preserved: sp
rf_pri_update_dvga_os_entry:
l23059F7A:
	word32 a4_13 = 0x4200D748<32>
l23059F8E:
	a3 = a3 + a0
	Mem18[a4_13 + 0<32>:byte] = SLICE(a3, byte, 0)
	a4_13 = a4_13 + 1<32>
	branch a4_13 != 0xBDFF28C8<32> l23059F8E
l23059FA2:
	return
rf_pri_update_dvga_os_exit:


void rf_pri_tx_gain_comp(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_txpwr
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
rf_pri_tx_gain_comp_entry:
l23059FA4:
	word32 a0_100
	word32 a5_5 = Mem0[0x4200E428<32>:int32]
	branch a5_5 != 1<32> l23059FFE
l23059FFE:
	branch a5_5 != 0xFFFFFFFF<32> l2305A016
l2305A004:
	word32 a5_13 = Mem8[0x4200E3A4<32>:int32]
	branch a5_13 >= a0 l2305A016
l2305A010:
	branch a0 < a5_13 + 5<32> l23059FCC
l23059FBA:
	word32 a5_17 = Mem8[0x4200E3A4<32>:int32]
	branch a0 >= a5_17 l2305A016
l23059FC6:
	branch a5_17 + 0xFFFFFFFB<32> >= a0 l2305A016
l2305A016:
	word32 a4_21 = 0xC<32>
l2305A026:
	branch a0 >= a1 l2305A034
l2305A02C:
	a4_21 = a4_21 + 0xFFFFFFFF<32>
	branch a4_21 != 0xFFFFFFFF<32> l2305A026
l2305A034:
	branch a4_21 >= 0<32> l2305A03A
l2305A038:
	a4_21 = 0<32>
l2305A03A:
	word32 a5_102 = a4_21 + -4<i32>
	word32 a3_45 = Mem8[(a4_21 << 2<u32>) + 0x4200D714<32>:word32]
	branch a0 <= 34<i32> l2305A0B2
l2305A0B2:
	branch a3_45 < a0 l2305A0BC
l2305A0BC:
	word32 a4_52 = Mem8[(a4_21 + 1<32> << 2<i32>) + 0x4200D714<32>:word32]
	branch a4_52 <= 34<i32> l2305A0CA
l2305A0C8:
	a4_52 = a3_45
l2305A0CA:
	Mem56[a4_52:word32] = 0x4200E3A4<32>
l2305A0B6:
	a5_102 = a4_21 + -5<i32>
l2305A056:
	branch a3_45 > 35<i32> l2305A068
l2305A05E:
	a3_45 = Mem8[(a4_21 + 1<32> << 2<u32>) + 0x4200D714<32>:word32]
l2305A068:
	Mem65[a3_45:word32] = 0x4200E3A4<32>
l2305A06A:
	a3 = Mem67[0x4200E3B0<32>:int32]
	branch a3 >= a5_102 l2305A0CE
l2305A0CE:
	branch a5_102 >= a3 l2305A080
l2305A0D2:
	a3 = 0xFFFFFFFF<32>
l2305A07A:
	a3 = 1<32>
l2305A07C:
	Mem84[0x4200E428<32>:word32] = a3
l2305A080:
	Mem89[a5_102:word32] = 0x4200E3B0<32>
	branch a5_102 <= 0<32> l2305A0D6
l2305A0D6:
	a0_100 = 0<32>
	branch a5_102 == 0<32> l2305A092
l2305A0DA:
	a0_100 = 0xFFFFFFFF<32>
	branch (a5_102 & 1<i32>) == 0<32> l2305A0E4
l2305A0E2:
	a0_100 = 1<32>
l2305A0E4:
	a5_102 = a5_102 + 0xFFFFFFFF<32> ^ 2<32>
l2305A086:
	word32 a5_98 = a5_102 + 1<32>
	a0_100 = a5_98 & 1<i32>
	branch (a5_98 & 1<i32>) != 0<32> l2305A090
l2305A08E:
	a0_100 = 0xFFFFFFFF<32>
l2305A090:
	a5_102 = a5_98 >> 1<i32>
l2305A092:
	Mem105[0x4200E3AC<32>:word32] = a5_102
	Mem110[0x4200E3A8<32>:word32] = a0_100
	Mem114[0x4200E424<32>:word32] = a5_102 + 0xFFFFFFF6<32>
l23059FCC:
	Mem121[0x4200E424<32>:word32] = Mem8[0x4200E3AC<32>:int32] + 0xFFFFFFF6<32>
	a0_100 = CONVERT(Mem121[0x4200E3A8<32>:int8], int8, int32)
l23059FEA:
	rf_pri_update_dvga_os(a0_100, a3)
l23059FFA_thunk_rfc_apply_tx_dvga:
	rfc_apply_tx_dvga(0x4200D748<32>)
	return
rf_pri_tx_gain_comp_exit:


word32 rf_pri_txcal(word32 a3, word32 a5, word32 s2, word32 s6, word32 s9, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg2C, word32 dwArg5C, word32 dwArgAC, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a3:[0..31] a5:[0..31] s2:[0..31] s6:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +002C:[0..31] Stack +005C:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
rf_pri_txcal_entry:
l2305A0EE:
	Mem37[(a5 & 0xFF0FFFFF<32> | 0x500000<32>) + 20<i32>:word32] = Mem29[a5 + 20<i32>:word32]
	word32 a5_829
	rf_pri_manu_pu(5<32>, rf_pri_save_state_for_cal(a3), out a5_829)
	word32 a5_51
	word32 s9_156
	word32 s10_157
	word32 s11_158
	rf_pri_config_channel.constprop.9(s6, dwLoc58, s2, dwLoc20, dwLoc1C, dwArg08, dwArg10, dwArg14, dwArg2C, s9, dwArg5C, dwArgC8, out a5_51, out s9_156, out s10_157, out s11_158)
	word32 s0_71 = Mem37[a5_51 + 28<i32>:word32]
	Mem75[(a5_51 | 0x3000000<32>) + 28<i32>:word32] = s0_71
	word32 a5_76 = Mem75[s0_71 + 132<i32>:int32]
	Mem80[s0_71 + 132<i32>:word32] = a5_76 | 0x80000000<32>
	word32 a5_84 = a5_76 | 0x80000000<32> | 0x400000<32>
	Mem85[a5_84 + 100<i32>:word32] = Mem80[(a5_76 | 0x80000000<32>) + 100<i32>:word32]
	Mem95[(CONVERT(Mem85[0x4200DCB4<32>:uint16], uint16, word32) | a5_84 & -8<i32>) + 108<i32>:word32] = Mem85[a5_84 + 108<i32>:word32]
	word32 sp_116 = fp + -96<i32>
	word32 s2_155 = 7<32>
	word32 a4_119
	word32 a3_159 = rf_pri_singen_config.constprop.8(61<i32>, out a4_119)
	word32 a5_104 = 0xFFFFFFF<32>
	word32 s3_105 = 0x42016E6C<32>
	word32 s8_106 = 0x42016AEC<32>
	word32 s4_108 = 0xFFC3FFFF<32>
	word32 s5_109 = 0xFFF8FFFF<32>
	word32 s6_110 = 0xCFFFFFFF<32>
	word32 s7_111 = 0xFE08FFFF<32>
	word32 s1_112 = 0xFFC0FFFF<32>
l2305A1A0:
	word32 a2_117 = Mem114[sp_116 + 196<i32>:word32]
	word32 a5_129 = (Mem114[s3_105:int32] << 28<i32> | a4_119 & a5_104) & s4_108 | Mem114[s3_105 + 8<i32>:int32] << 18<i32>
	Mem130[a5_129 + 100<i32>:word32] = Mem114[a5_104 + 100<i32>:word32]
	word32 a5_136 = Mem130[s3_105 + 4<i32>:int32] << 16<i32> | a5_129 & s5_109
	Mem137[a5_136 + 88<i32>:word32] = Mem130[a5_129 + 88<i32>:word32]
	word32 s0_138 = Mem137[a5_136 + 72<i32>:word32]
	word32 a5_149 = (Mem137[s8_106:int32] << 28<i32> | a5_136 & s6_110) & s7_111 | Mem137[s8_106 + 12<i32>:int32] << 20<i32>
	Mem152[(a5_149 | 0x70000<32>) + 72<i32>:word32] = s0_138
	word32 s0_162
	word32 s1_163
	word32 s2_164
	word32 s3_165
	word32 s4_166
	word32 s5_167
	word32 s6_168
	word32 s7_169
	word32 s8_170
	word32 s11_173
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a2:a2_117,a3:a3_159,a4:0x70000<32>,a5:a5_149 | 0x70000<32>,ra:0x4200C1F0<p32>,s0:s0_138,s1:s1_154,s10:s10_157,s11:s11_158,s2:s2_155,s3:s3_121,s4:s4_126,s5:s5_132,s6:s6_139,s7:s7_146,s8:s8_141,s9:s9_156,Stack +0008:dwArg08,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +002C:dwArg2C,Stack +005C:dwArg5C,Stack +00C8:dwArgC8,Stack +FFFFFFA8:dwLoc58,Stack +FFFFFFE0:dwLoc20,Stack +FFFFFFE4:dwLoc1C
		defs: s0:s0_162,s1:s1_163,s11:s11_173,s2:s2_164,s3:s3_165,s4:s4_166,s5:s5_167,s6:s6_168,s7:s7_169,s8:s8_170
	word32 s9_187 = Mem152[s3_165 + 12<i32>:int32]
	word32 s10_188 = s9_187 >>u 1<u32>
l2305A200:
	Mem195[s0_162 + 532<i32>:word32] = s9_187 | Mem190[s0_162 + 532<i32>:int32] & -2048<i32>
	Mem199[s0_162 + 536<i32>:word32] = s9_187 | Mem195[s0_162 + 536<i32>:int32] & -2048<i32>
	rf_pri_singen_start()
	word32 a5_206
	word32 ra_221
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a3:rf_pri_start_txdfe(out a5_206),a5:a5_206,ra:0x4200C22A<p32>,s0:s0_189,s1:s1_209,s10:s10_217,s11:s11_218,s2:s2_210,s3:s3_211,s4:s4_212,s5:s5_213,s6:s6_214,s7:s7_215,s8:s8_216,s9:s9_193,Stack +0008:dwArg08,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +002C:dwArg2C,Stack +005C:dwArg5C,Stack +00C8:dwArgC8,Stack +FFFFFFA8:dwLoc58,Stack +FFFFFFE0:dwLoc20,Stack +FFFFFFE4:dwLoc1C
		defs: ra:ra_221,s0:s0_222
	word32 s10_270
	word32 t4_281
	word32 a5_873
	word32 a7_874
	word32 a3_871
	word32 a4_872
	word32 a1_869
	word32 a2_870
	word32 a5_867
	word32 a0_868
	word32 a3_866
	printf(ra_221, 0x2307D998<32>, rf_pri_pm_pwr_avg(1<32>, 1024<i32>, out a3_866, out a5_867) >> 0xA<u32>, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_163, out a0_868, out a1_869, out a2_870, out a3_871, out a4_872, out a5_873, out a7_874, out s2_164, out s3_165, out s4_166, out s5_167, out s6_168, out s7_169, out s8_170, out s9_187, out s10_270, out s11_173, out t4_281)
	sp_116 = fp - 96<i32>
	branch s11_173 <= 320<i32> l2305A26C
l2305A26C:
	branch s11_173 > 191<i32> l2305A274
l2305A270:
	s9_187 = s9_187 + s10_270
l2305A25E:
	s9_187 = s9_187 - s10_270
l2305A262:
	branch s10_270 == 0<32> l2305A274
l2305A274:
	word32 a5_831
	word32 a3_830
	rf_pri_pm_pwr_avg(1<32>, 0x1000000<32>, out a3_830, out a5_831)
	word32 a0_320
	word32 s0_328
	word32 s1_329
	word32 s11_331
	word32 s4_334
	word32 s5_335
	word32 s6_336
	word32 s7_337
	word32 s8_338
	word32 s9_833
	word32 a5_832
	rf_pri_txcal_search_core(s0_162, s1_163, 0<32>, 32<i32>, 0x10<32>, s4_166, s5_167, s6_168, s7_169, s8_170, s9_187, s11_173, dwArgAC, out s0_328, out s1_329, out a0_320, out a5_832, out s4_334, out s5_335, out s6_336, out s7_337, out s8_338, out s9_833, out s11_331)
	word32 a4_835
	word32 a3_834
	rf_pri_txcal_config(0<32>, a0_320, out a3_834, out a4_835)
	word32 a0_354
	word32 a5_359
	word32 s1_363
	word32 s11_365
	word32 s4_368
	word32 s5_369
	word32 s6_370
	word32 s7_371
	word32 s8_372
	word32 s9_373
	word32 s0_836
	rf_pri_txcal_search_core(s0_328, s1_329, 1<32>, 32<i32>, 0x10<32>, s4_334, s5_335, s6_336, s7_337, s8_338, a0_320, s11_331, dwArgAC, out s0_836, out s1_363, out a0_354, out a5_359, out s4_368, out s5_369, out s6_370, out s7_371, out s8_372, out s9_373, out s11_365)
	word32 s0_377 = Mem199[a5_359 + 112<i32>:word32]
	Mem383[(a0_354 << 0x10<u32> | a5_359 & s1_363) + 112<i32>:word32] = s0_377
	word32 a0_387
	word32 s0_395
	word32 s1_396
	word32 s11_398
	word32 s4_401
	word32 s5_402
	word32 s6_403
	word32 s7_404
	word32 s8_405
	word32 s9_406
	word32 a5_837
	rf_pri_txcal_search_core(s0_377, s1_363, 0<32>, s9_373, 2<32>, s4_368, s5_369, s6_370, s7_371, s8_372, s9_373, s11_365, dwArgAC, out s0_395, out s1_396, out a0_387, out a5_837, out s4_401, out s5_402, out s6_403, out s7_404, out s8_405, out s9_406, out s11_398)
	word32 a4_839
	word32 a3_838
	rf_pri_txcal_config(0<32>, a0_387, out a3_838, out a4_839)
	word32 a0_421
	word32 s0_429
	word32 s1_430
	word32 s11_432
	word32 s4_435
	word32 s5_436
	word32 s6_437
	word32 s7_438
	word32 s8_439
	word32 s9_841
	word32 a5_840
	rf_pri_txcal_search_core(s0_395, s1_396, 2<32>, 1024<i32>, 128<i32>, s4_401, s5_402, s6_403, s7_404, s8_405, s9_406, s11_398, dwArgAC, out s0_429, out s1_430, out a0_421, out a5_840, out s4_435, out s5_436, out s6_437, out s7_438, out s8_439, out s9_841, out s11_432)
	word32 a4_843
	word32 a3_842
	rf_pri_txcal_config(2<32>, a0_421, out a3_842, out a4_843)
	word32 a0_455
	word32 s0_463
	word32 s1_464
	word32 s11_466
	word32 s4_469
	word32 s5_470
	word32 s6_471
	word32 s7_472
	word32 s8_473
	word32 s9_474
	word32 a5_844
	rf_pri_txcal_search_core(s0_429, s1_430, 3<32>, 0<32>, 64<i32>, s4_435, s5_436, s6_437, s7_438, s8_439, a0_421, s11_432, dwArgAC, out s0_463, out s1_464, out a0_455, out a5_844, out s4_469, out s5_470, out s6_471, out s7_472, out s8_473, out s9_474, out s11_466)
	word32 a3_845
	word32 a4_846
	rf_pri_txcal_config(3<32>, a0_455, out a3_845, out a4_846)
	word32 a0_488
	word32 s0_496
	word32 s1_497
	word32 s11_499
	word32 s4_502
	word32 s5_503
	word32 s6_504
	word32 s7_505
	word32 s8_506
	word32 s9_507
	word32 a5_847
	rf_pri_txcal_search_core(s0_463, s1_464, 2<32>, s9_474, 64<i32>, s4_469, s5_470, s6_471, s7_472, s8_473, s9_474, s11_466, dwArgAC, out s0_496, out s1_497, out a0_488, out a5_847, out s4_502, out s5_503, out s6_504, out s7_505, out s8_506, out s9_507, out s11_499)
	word32 a4_849
	word32 a3_848
	rf_pri_txcal_config(2<32>, a0_488, out a3_848, out a4_849)
	word32 s6_855
	word32 s1_851
	word32 a0_522
	word32 s4_853
	word32 s8_857
	word32 s11_859
	word32 s9_858
	word32 s7_856
	word32 s5_854
	word32 a5_852
	word32 s0_850
	word32 ra_529 = rf_pri_txcal_search_core(s0_496, s1_497, 3<32>, 0<32>, 32<i32>, s4_502, s5_503, s6_504, s7_505, s8_506, s9_507, s11_499, dwArgAC, out s0_850, out s1_851, out a0_522, out a5_852, out s4_853, out s5_854, out s6_855, out s7_856, out s8_857, out s9_858, out s11_859)
	word32 a4_551
	word32 a3_860
	rf_pri_txcal_config(3<32>, a0_522, out a3_860, out a4_551)
	word32 a3_553 = Mem546[0x4200DCBC<32>:int32]
	word32 a3_563 = a3_553 & -64<i32> | 0x3F<32>
	Mem564[a3_563 + 8<i32>:word32] = Mem546[a3_553 + 8<i32>:word32]
	word32 a3_571 = a3_563 & 0xFF00003F<32> | (a0_354 & 63<i32>) << 6<i32>
	Mem572[a3_571 + 8<i32>:word32] = Mem564[a3_563 + 8<i32>:word32]
	word32 a3_582 = a3_571 & 0xFF800FFF<32> | (t4_281 & 2047<i32>) << 12<i32>
	Mem583[a3_582 + 8<i32>:word32] = Mem572[a3_571 + 8<i32>:word32]
	Mem590[(a3_582 & -1024<i32> | a4_551 & 1023<i32>) + 12<i32>:word32] = Mem583[a3_582 + 12<i32>:word32]
	word32 a2_599
	word32 s2_607
	word32 s3_608
	word32 s8_613
	word32 a0_861
	word32 t4_865
	word32 a5_863
	word32 a7_864
	word32 a1_862
	printf(ra_529, 0x2307D9BC<32>, t4_281, a0_522, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_112, out a0_861, out a1_862, out a2_599, out a3_159, out a4_119, out a5_863, out a7_864, out s2_607, out s3_608, out s4_108, out s5_109, out s6_110, out s7_111, out s8_613, out s9_156, out s10_157, out s11_158, out t4_865)
	s2_155 = s2_607 + 0xFFFFFFFF<32>
	a5_104 = 0xFFFFFFFF<32>
	s3_105 = s3_608 + 0x10<32>
	s8_106 = s8_613 + 56<i32>
	branch s2_607 != 0<32> l2305A1A0
l2305A3B4:
	word32 a5_626
	rf_pri_txcal_config_hw(a2_599, out a5_626)
	Mem634[(a5_626 & 0xFCFFFFFF<32>) + 28<i32>:word32] = Mem590[a5_626 + 28<i32>:word32]
	word32 a5_636 = rf_pri_restore_state_for_cal()
	Mem640[(a5_636 | 0xF00000<32>) + 20<i32>:word32] = Mem634[a5_636 + 20<i32>:word32]
	word32 a3_642 = Mem640[s11_158 + -836<i32>:int32]
	word32 s0_641 = Mem640[(a5_636 | 0xF00000<32>) + 112<i32>:word32]
	Mem657[((Mem640[a3_642 + 128<i32>:int32] >>u 6<i32> & 63<i32>) << 16<i32> | ((Mem640[a3_642 + 128<i32>:int32] & 63<i32>) << 24<i32> | (a5_636 | 0xF00000<32>) & 0xC0FFFFFF<32>) & s1_112) + 112<i32>:word32] = s0_641
	word32 a4_659 = Mem657[s11_158 + -836<i32>:int32]
	word32 a5_664 = Mem657[a4_659 + 132<i32>:int32]
	Mem668[s0_641 + 1536<i32>:word32] = a5_664 & 1023<i32> | (Mem657[a4_659 + 128<i32>:int32] & 0x7FF000<32> | Mem657[s0_641 + 1536<i32>:int32] & s9_156) & -1024<i32>
	return a5_664 & 1023<i32>
rf_pri_txcal_exit:
l2305A266:
	s10_188 = s10_270 >>u 1<u32>


word32 rf_pri_roscal(word32 a3, word32 s3, word32 s6, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a3:[0..31] s3:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
rf_pri_roscal_entry:
l2305A44A:
	word32 s0_28 = Mem23[0xF4000014<32>:word32]
	word32 a5_30 = 0xF0000000<32>
	branch (a3 & 256<i32>) != 0<32> l2305A490
l2305A490:
	Mem33[0xF4000014<32>:word32] = s0_28
	word32 a5_40
	rf_pri_manu_pu(3<32>, rf_pri_save_state_for_cal(a3 & 256<i32>), out a5_40)
	Mem45[(a5_40 | 512<i32>) + 28<i32>:word32] = Mem33[a5_40 + 28<i32>:word32]
	word32 a5_51
	word32 s9_484
	word32 s10_485
	word32 s11_486
	word32 ra_54 = rf_pri_config_channel.constprop.9(s6, s6, dwLoc08, dwArg10, dwArg14, dwArg38, dwArg40, dwArg44, s3, dwArg68, dwArg8C, dwArgF8, out a5_51, out s9_484, out s10_485, out s11_486)
	word32 a5_77 = a5_51 & 0xF8FFFFFF<32> | 0x6000300<32>
	Mem78[a5_77 + 72<i32>:word32] = Mem45[a5_51 + 72<i32>:word32]
	word32 a0_80
	word32 a3_83
	word32 a5_85
	word32 s5_92
	word32 s4_487
	word32 s8_488
	word32 s0_87 = rf_pri_roscal_iq.isra.3(1<32>, a5_77, dwArgF8, out a0_80, out a3_83, out a5_85, out s4_487, out s5_92, out s8_488)
	Mem106[(a5_85 & -64<i32> | a0_80 & 63<i32>) + 96<i32>:word32] = Mem78[a5_85 + 96<i32>:word32]
	Mem112[s0_87 + 364<i32>:word32] = Mem106[s0_87 + 364<i32>:int32] & s5_92 + 0xFFFFFFFF<32> | a0_80 << 0x10<u32>
	word32 a5_115
	word32 a3_119
	word32 s2_126
	word32 s3_127
	word32 s1_489
	word32 a0_490
	word32 a1_491
	word32 a2_492
	word32 a4_493
	word32 a7_494
	word32 s4_495
	word32 s5_496
	word32 s6_497
	word32 s7_498
	word32 s8_499
	word32 s9_500
	word32 s10_501
	word32 s11_502
	word32 t4_503
	word32 ra_122 = printf(ra_54, 0x2307D8F8<32>, a3_83, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_489, out a0_490, out a1_491, out a2_492, out a3_119, out a4_493, out a5_115, out a7_494, out s2_126, out s3_127, out s4_495, out s5_496, out s6_497, out s7_498, out s8_499, out s9_500, out s10_501, out s11_502, out t4_503)
	Mem144[(a5_115 & -64<i32> | s3_127) + 88<i32>:word32] = Mem112[a5_115 + 88<i32>:word32]
	Mem150[s0_87 + 364<i32>:word32] = s2_126 | Mem144[s0_87 + 364<i32>:int32] & -64<i32>
	word32 a5_152
	word32 a3_156
	word32 s3_164
	word32 s4_165
	word32 s5_166
	word32 s1_504
	word32 a0_505
	word32 a1_506
	word32 a2_507
	word32 a4_508
	word32 a7_509
	word32 s2_510
	word32 s6_511
	word32 s7_512
	word32 s8_513
	word32 s9_514
	word32 s10_515
	word32 s11_516
	word32 t4_517
	word32 ra_159 = printf(ra_122, 0x2307D90C<32>, a3_119, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_504, out a0_505, out a1_506, out a2_507, out a3_156, out a4_508, out a5_152, out a7_509, out s2_510, out s3_164, out s4_165, out s5_166, out s6_511, out s7_512, out s8_513, out s9_514, out s10_515, out s11_516, out t4_517)
	Mem181[(a5_152 & -64<i32> | s3_164) + 80<i32>:word32] = Mem150[a5_152 + 80<i32>:word32]
	Mem185[s0_87 + 360<i32>:word32] = s4_165 | Mem181[s0_87 + 360<i32>:int32] & s5_166
	word32 a5_187
	word32 a3_191
	word32 s2_198
	word32 s3_199
	word32 s1_518
	word32 a0_519
	word32 a1_520
	word32 a2_521
	word32 a4_522
	word32 a7_523
	word32 s4_524
	word32 s5_525
	word32 s6_526
	word32 s7_527
	word32 s8_528
	word32 s9_529
	word32 s10_530
	word32 s11_531
	word32 t4_532
	word32 ra_194 = printf(ra_159, 0x2307D920<32>, a3_156, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_518, out a0_519, out a1_520, out a2_521, out a3_191, out a4_522, out a5_187, out a7_523, out s2_198, out s3_199, out s4_524, out s5_525, out s6_526, out s7_527, out s8_528, out s9_529, out s10_530, out s11_531, out t4_532)
	Mem216[(a5_187 & -64<i32> | s3_199) + 72<i32>:word32] = Mem185[a5_187 + 72<i32>:word32]
	Mem221[s0_87 + 360<i32>:word32] = s2_198 | Mem216[s0_87 + 360<i32>:int32] & -64<i32>
	word32 a5_223
	word32 s1_533
	word32 a0_534
	word32 a1_535
	word32 a2_536
	word32 a3_537
	word32 a4_538
	word32 a7_539
	word32 s2_540
	word32 s3_541
	word32 s4_542
	word32 s5_543
	word32 s6_544
	word32 s7_545
	word32 s8_546
	word32 s9_547
	word32 s10_548
	word32 s11_549
	word32 t4_550
	word32 ra_230 = printf(ra_194, 0x2307D934<32>, a3_191, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_533, out a0_534, out a1_535, out a2_536, out a3_537, out a4_538, out a5_223, out a7_539, out s2_540, out s3_541, out s4_542, out s5_543, out s6_544, out s7_545, out s8_546, out s9_547, out s10_548, out s11_549, out t4_550)
	word32 a0_245
	word32 a3_248
	word32 a5_250
	word32 s4_256
	word32 s8_260
	word32 s5_551
	word32 s0_252 = rf_pri_roscal_iq.isra.3(0<32>, a5_223, dwArgF8, out a0_245, out a3_248, out a5_250, out s4_256, out s5_551, out s8_260)
	Mem271[(a5_250 & s4_256 | (a0_245 & 63<i32>) << 6<i32>) + 96<i32>:word32] = Mem221[a5_250 + 96<i32>:word32]
	Mem277[s0_252 + 364<i32>:word32] = Mem271[s0_252 + 364<i32>:int32] & s8_260 | a0_245 << 0x18<u32>
	word32 a5_280
	word32 a3_284
	word32 s2_291
	word32 s3_292
	word32 s4_293
	word32 s6_295
	word32 s1_552
	word32 a0_553
	word32 a1_554
	word32 a2_555
	word32 a4_556
	word32 a7_557
	word32 s5_558
	word32 s7_559
	word32 s8_560
	word32 s9_561
	word32 s10_562
	word32 s11_563
	word32 t4_564
	word32 ra_287 = printf(ra_230, 0x2307D948<32>, a3_248, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_552, out a0_553, out a1_554, out a2_555, out a3_284, out a4_556, out a5_280, out a7_557, out s2_291, out s3_292, out s4_293, out s5_558, out s6_295, out s7_559, out s8_560, out s9_561, out s10_562, out s11_563, out t4_564)
	Mem309[(a5_280 & s4_293 | s3_292) + 88<i32>:word32] = Mem277[a5_280 + 88<i32>:word32]
	Mem313[s0_252 + 364<i32>:word32] = Mem309[s0_252 + 364<i32>:int32] & s6_295 | s2_291 << 8<u32>
	word32 a5_315
	word32 a3_319
	word32 s3_327
	word32 s4_328
	word32 s7_331
	word32 s8_332
	word32 s1_565
	word32 a0_566
	word32 a1_567
	word32 a2_568
	word32 a4_569
	word32 a7_570
	word32 s2_571
	word32 s5_572
	word32 s6_573
	word32 s9_574
	word32 s10_575
	word32 s11_576
	word32 t4_577
	word32 ra_322 = printf(ra_287, 0x2307D95C<32>, a3_284, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_565, out a0_566, out a1_567, out a2_568, out a3_319, out a4_569, out a5_315, out a7_570, out s2_571, out s3_327, out s4_328, out s5_572, out s6_573, out s7_331, out s8_332, out s9_574, out s10_575, out s11_576, out t4_577)
	Mem343[(a5_315 & s4_328 | s3_327) + 80<i32>:word32] = Mem313[a5_315 + 80<i32>:word32]
	Mem347[s0_252 + 360<i32>:word32] = s7_331 | Mem343[s0_252 + 360<i32>:int32] & s8_332
	word32 a5_349
	word32 a3_353
	word32 s3_361
	word32 s4_362
	word32 s5_363
	word32 s6_364
	word32 s1_578
	word32 a0_579
	word32 a1_580
	word32 a2_581
	word32 a4_582
	word32 a7_583
	word32 s2_584
	word32 s7_585
	word32 s8_586
	word32 s9_587
	word32 s10_588
	word32 s11_589
	word32 t4_590
	word32 ra_356 = printf(ra_322, 0x2307D970<32>, a3_319, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_578, out a0_579, out a1_580, out a2_581, out a3_353, out a4_582, out a5_349, out a7_583, out s2_584, out s3_361, out s4_362, out s5_363, out s6_364, out s7_585, out s8_586, out s9_587, out s10_588, out s11_589, out t4_590)
	Mem377[Mem347[a5_349 + 72<i32>:word32] + 72<i32>:word32] = a5_349 & s4_362 | s3_361
	Mem381[s0_252 + 360<i32>:word32] = s5_363 | Mem377[s0_252 + 360<i32>:int32] & s6_364
	word32 s1_591
	word32 a0_592
	word32 a1_593
	word32 a2_594
	word32 a3_595
	word32 a4_596
	word32 a5_597
	word32 a7_598
	word32 s2_599
	word32 s3_600
	word32 s4_601
	word32 s5_602
	word32 s6_603
	word32 s7_604
	word32 s8_605
	word32 s9_606
	word32 s10_607
	word32 s11_608
	word32 t4_609
	ra = printf(ra_356, 0x2307D984<32>, a3_353, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_591, out a0_592, out a1_593, out a2_594, out a3_595, out a4_596, out a5_597, out a7_598, out s2_599, out s3_600, out s4_601, out s5_602, out s6_603, out s7_604, out s8_605, out s9_606, out s10_607, out s11_608, out t4_609)
	word32 a5_405 = rf_pri_restore_state_for_cal()
	s0_28 = Mem381[a5_405 + 20<i32>:word32]
	a5_30 = a5_405 | 0xC000000<32>
l2305A476:
	Mem411[a5_30 + 20<i32>:word32] = s0_28
	0<32> = dwArg0128
	return ra
rf_pri_roscal_exit:


word32 rf_pri_rccal(word32 ra, word32 fflags, word32 frm, word32 dwArg18, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg98, word32 dwArgAC, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s6Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  fflags:[0..31] frm:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a5 s2 s6 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
rf_pri_rccal_entry:
l2305A67E:
	word32 a3_13 = Mem11[0x40001020<32>:int32]
	word32 a5_16 = Mem11[0x40001014<32>:int32]
	word32 s2_12 = 0x40001000<32>
	word32 a3_17 = a3_13 & 1024<i32>
	word32 a5_18 = a5_16 & 0xFFF3FFFF<32>
	branch (a3_13 & 1024<i32>) != 0<32> l2305A6B4
l2305A6B4:
	Mem21[0x40001014<32>:word32] = a5_16 & 0xFFF3FFFF<32> | 0x40000<32>
	word32 a5_518
	rf_pri_manu_pu(4<32>, rf_pri_save_state_for_cal(a3_13 & 1024<i32>), out a5_518)
	Mem35[0x40001084<32>:word32] = Mem21[0x40001084<32>:int32] & 0xFCFFFFFF<32> | 0x2000000<32>
	Mem40[0x4000108C<32>:word32] = Mem35[0x4000108C<32>:int32] | 0x1000000<32>
	Mem44[0x4000101C<32>:word32] = Mem40[0x4000101C<32>:int32] | 0xFFF800<32>
	word32 fflags_55
	word32 frm_56
	word32 a0_78
	word32 a3_81
	word32 s2_91
	word32 a0_519
	word32 a3_520
	word32 s2_521
	word32 fflags_522
	word32 frm_523
	word32 ra_88 = rf_pri_rccal_iq(rf_pri_rccal_iq(ra, 1<32>, fflags, frm, dwArg98, out a0_519, out a3_520, out s2_521, out fflags_55, out frm_56), 0<32>, fflags_55, frm_56, dwArg98, out a0_78, out a3_81, out s2_91, out fflags_522, out frm_523)
	word32 a4_107 = Mem44[s2_91 + 128<i32>:int32]
	word32 a3_116 = a3_81 & -64<i32> | a4_107 >>u 0x18<u32> & 63<i32>
	Mem117[a3_116 + 8<i32>:word32] = Mem44[a3_81 + 8<i32>:word32]
	word32 a3_123 = a3_116 & 0xFF00003F<32> | (a4_107 >>u 0x10<u32> & 63<i32>) << 6<i32>
	Mem124[a3_123 + 8<i32>:word32] = Mem117[a3_116 + 8<i32>:word32]
	word32 a3_132 = a3_123 & 0xFFFC0FFF<32> | (a4_107 >>u 8<u32> & 63<i32>) << 12<i32>
	Mem133[a3_132 + 8<i32>:word32] = Mem124[a3_123 + 8<i32>:word32]
	Mem141[((a4_107 & 63<i32>) << 18<i32> | a3_132 & 0xFF03FFFF<32>) + 8<i32>:word32] = Mem133[a3_132 + 8<i32>:word32]
	word32 a0_156
	word32 a5_157
	word32 a3_161
	word32 t4_539
	word32 s11_538
	word32 s10_537
	word32 s9_536
	word32 s4_531
	word32 s5_532
	word32 s6_533
	word32 s7_534
	word32 s8_535
	word32 a2_526
	word32 a4_527
	word32 a7_528
	word32 s2_529
	word32 s3_530
	word32 a1_525
	word32 s1_524
	word32 ra_164 = printf(ra_88, 0x2307D8A4<32>, (a3_132 & 0xFF03FFFF<32>) >>u 6<i32> & 63<i32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_524, out a0_156, out a1_525, out a2_526, out a3_161, out a4_527, out a5_157, out a7_528, out s2_529, out s3_530, out s4_531, out s5_532, out s6_533, out s7_534, out s8_535, out s9_536, out s10_537, out s11_538, out t4_539)
	word32 a5_181 = a5_157 & 63<i32>
	word32 a3_183 = a3_161 >>u 6<i32> & 63<i32>
	branch (a5_157 & 63<i32>) >=u a3_183 l2305A7B2
l2305A7AA:
	a5_181 = (a5_157 & 63<i32>) >>u 6<i32> & 63<i32>
l2305A7B2:
	word32 a3_191 = a3_183 >>u 12<i32> & 63<i32>
	branch a5_181 >=u a3_191 l2305A7C6
l2305A7BE:
	a5_181 = a5_181 >>u 12<i32> & 63<i32>
l2305A7C6:
	branch a5_181 >=u (a3_191 >>u 18<i32> & 63<i32>) l2305A7DA
l2305A7D2:
	a5_181 = a5_181 >>u 18<i32> & 63<i32>
l2305A7DA:
	word32 a3_206 = 0x18<32>
	branch a5_181 <= 39<i32> l2305A7EA
l2305A7E4:
	a3_206 = 63<i32> - a5_181
l2305A7EA:
	word32 a3_217 = a3_206 & 255<i32>
	word32 a2_219 = a3_217 + 39<i32> & 63<i32>
	word32 a5_221 = a5_181 & -64<i32> | a2_219
	Mem222[a5_221 + 8<i32>:word32] = Mem141[a5_181 + 8<i32>:word32]
	word32 a5_232 = ((a5_221 >>u 6<i32>) + a3_217 & 63<i32>) << 6<i32> | a2_219 & 0xFF00003F<32>
	Mem233[a5_232 + 8<i32>:word32] = Mem222[a2_219 + 8<i32>:word32]
	word32 a5_243 = ((a5_232 >>u 12<i32>) + a3_217 & 63<i32>) << 12<i32> | (a2_219 & 0xFF00003F<32>) & 0xFFFC0FFF<32>
	Mem244[a5_243 + 8<i32>:word32] = Mem233[(a2_219 & 0xFF00003F<32>) + 8<i32>:word32]
	Mem255[(((a5_243 >>u 18<i32>) + a3_217 & 63<i32>) << 18<i32> | a3_217 & 0xFF03FFFF<32>) + 8<i32>:word32] = Mem244[a3_217 + 8<i32>:word32]
	rf_pri_rccal_config.part.0(a0_156 & 63<i32>)
	word32 s11_553
	word32 s10_552
	word32 s8_551
	word32 s3_547
	word32 a7_546
	word32 s4_548
	word32 a4_544
	word32 a3_543
	word32 a5_545
	word32 s1_310
	word32 s5_549
	word32 s7_550
	word32 t4_554
	word32 a2_542
	word32 a1_541
	word32 a0_540
	printf(ra_164, 0x2307D8A0<32>, rf_pri_rccal_config(0<32>, 0x3F<32>) >>u 6<i32> & 63<i32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_310, out a0_540, out a1_541, out a2_542, out a3_543, out a4_544, out a5_545, out a7_546, out s2_12, out s3_547, out s4_548, out s5_549, out s6, out s7_550, out s8_551, out s9, out s10_552, out s11_553, out t4_554)
	rf_pri_restore_state_for_cal()
	branch s1_310 == 2<32> l2305A8A6
l2305A8A2:
	branch a0_78 != 2<32> l2305A8BE
l2305A8BE:
	Mem333[0xC0016<32>:word32] = Mem255[0x16<32>:word32]
	a3_17 = 0xC0000<32>
	a5_18 = 0xC0002<32>
l2305A8A6:
	a3_17 = Mem255[0x16<32>:word32]
	Mem342[0x80016<32>:word32] = a3_17
	a5_18 = 0x80002<32>
l2305A6A4:
	Mem343[0x40001014<32>:word32] = a5_16 & 0xFFF3FFFF<32>
l2305A6A8:
	0<32> = dwArg38
	a5Out = a5_18
	s2Out = s2_12
	s6Out = s6
	s9Out = s9
	return a3_17
rf_pri_rccal_exit:


word32 rf_pri_lo_acal(word32 a3, word32 a5, word32 s6, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a3:[0..31] a5:[0..31] s6:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
rf_pri_lo_acal_entry:
l2305A8CE:
	Mem32[(a5 & -193<i32> | 64<i32>) + 20<i32>:word32] = Mem25[a5 + 20<i32>:word32]
	word32 a5_225
	rf_pri_manu_pu(6<32>, rf_pri_save_state_for_cal(a3), out a5_225)
	word32 s3_226 = 0x4200D650<32>
	word32 s2_224 = 0<32>
	word32 s4_216 = 0xFFE0FFFF<32>
	word32 s6_218 = 0x4200E000<32>
	word32 s5_217 = 0xFE0000FF<32>
l2305A91E:
	word32 s0_50 = Mem49[a5_225 + 28<i32>:word32]
	Mem55[(a5_225 | 16<i32>) + 28<i32>:word32] = s0_50
	Mem61[s0_50 + 164<i32>:word32] = Mem55[s0_50 + 164<i32>:int32] & -1793<i32> | 1024<i32>
	Mem68[s0_50 + 160<i32>:word32] = Mem61[s0_50 + 160<i32>:int32] & s4_216 | 0x100000<32>
	word32 s7_53 = s2_224 + 8<i32>
	word32 a5_69 = Mem68[s0_50 + 160<i32>:int32]
	Mem78[s0_50 + 160<i32>:word32] = CONVERT(Mem68[Mem68[s6_218 + -836<i32>:int32] + (s7_53 << 1<u32>) + 12<i32>:uint16], uint16, word32) & 255<i32> | a5_69 & -256<i32>
	word32 a5_80 = Mem78[s3_226:int32]
	Mem81[s0_50 + 196<i32>:word32] = a5_80
	word32 s0_106
	word32 s4_112
	word32 s8_116
	word32 s9_117
	word32 s2_119
	word32 s3_120
	word32 s5_121
	word32 s6_122
	word32 s7_123
	word32 s1_109
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:1<32>,a3:s7_53 << 1<u32>,a4:a5_69 & -256<i32>,a5:a5_80,ra:0x4200C97C<p32>,s0:s0_50,s1:0x10<32>,s2:s2_52,s3:s3_79,s4:s4_65,s5:s5_83,s6:s6_72,s7:s7_53,s8:3<32>,s9:0xFFFFFFFF<32>
		defs: s0:s0_87,s1:s1_94,s2:s2_88,s3:s3_89,s4:s4_90,s5:s5_91,s6:s6_92,s7:s7_95,s8:s8_96,s9:s9_97
l2305A984:
	word32 a3_110 = s1_109 << 0x10<u32>
	word32 a5_114 = Mem107[s0_106 + 160<i32>:int32] & s4_112 | a3_110
	Mem115[s0_106 + 160<i32>:word32] = a5_114
	branch s8_116 != s9_117 l2305AA18
l2305AA18:
	word32 s1_134
	word32 s8_136
	call 0x4200C506<p32> (retsize: 0;)
		uses: a3:a3_110,a5:a5_114,ra:0x4200CA18<p32>,s0:s0_106,s1:s1_109,s2:s2_119,s3:s3_120,s4:s4_112,s5:s5_121,s6:s6_122,s7:s7_123,s8:s8_116,s9:s9_117
		defs: s0:s0_127,s1:s1_134,s2:s2_128,s3:s3_129,s4:s4_130,s5:s5_131,s6:s6_132,s7:s7_135,s8:s8_136,s9:s9_137
	word32 a5_148 = 1<32> << s8_136
	branch Mem115[s0_106 + 164<i32>:int32] << 0x13<u32> >= 0<32> l2305AA38
l2305AA38:
	s1_109 = s1_134 + a5_148
l2305AA32:
	s1_109 = s1_134 - a5_148
l2305AA34:
	s8_116 = s8_136 + 0xFFFFFFFF<32>
l2305A99C:
	word32 ra_156
	word32 s0_157
	word32 s5_161
	word32 s6_162
	word32 s7_165
	word32 a3_170
	word32 s1_164
	call 0x4200C506<p32> (retsize: 0;)
		uses: a3:a3_110,a5:a5_114,ra:0x4200C99C<p32>,s0:s0_106,s1:s1_109,s2:s2_119,s3:s3_120,s4:s4_112,s5:s5_121,s6:s6_122,s7:s7_123,s8:s8_116,s9:s9_117
		defs: a3:a3_170,ra:ra_156,s0:s0_157,s1:s1_164,s5:s5_161,s6:s6_162,s7:s7_165
	branch Mem115[s0_157 + 164<i32>:int32] << 0x13<u32> < 0<32> l2305A9B8
l2305A9B0:
	branch s1_164 >u 0x1E<32> l2305A9B8
l2305A9B6:
	s1_164 = s1_164 + 1<32>
l2305A9B8:
	word32 s7_187 = (s7_165 << 1<i32>) + Mem115[s6_162 + -836<i32>:int32]
	Mem194[s7_187 + 12<i32>:word16] = SLICE(CONVERT(Mem115[s7_187 + 12<i32>:uint16], uint16, word32) & s5_161 | (s1_164 & 31<i32>) << 8<i32>, word16, 0)
	word32 a3_207
	word32 s2_214
	word32 s3_215
	word32 a2_368
	word32 a1_367
	word32 a0_366
	word32 s1_365
	word32 t4_377
	word32 s8_373
	word32 s10_375
	word32 s11_376
	word32 s9_374
	word32 a4_369
	word32 a7_371
	word32 s7_372
	word32 a5_370
	printf(ra_156, 0x2307D880<32>, a3_170, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_365, out a0_366, out a1_367, out a2_368, out a3_207, out a4_369, out a5_370, out a7_371, out s2_214, out s3_215, out s4_216, out s5_217, out s6_218, out s7_372, out s8_373, out s9_374, out s10_375, out s11_376, out t4_377)
	s2_224 = s2_214 + 1<32>
	a5_225 = 0x15<32>
	s3_226 = s3_215 + 4<32>
	branch s2_214 != 0xFFFFFFEC<32> l2305A91E
l2305A9EE:
	word32 a5_228 = rf_pri_restore_state_for_cal()
	Mem231[(a5_228 | 192<i32>) + 20<i32>:word32] = Mem194[a5_228 + 20<i32>:word32]
	0<32> = dwArg0128
	s3Out = s3_215 + 4<32>
	s6Out = s6_218
	return a3_207
rf_pri_lo_acal_exit:


word32 rf_pri_fcal(word32 a3, word32 s6, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128, ptr32 & a5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a3:[0..31] s6:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
rf_pri_fcal_entry:
l2305AA3C:
	word32 s4_28 = CONVERT(Mem26[0x4200DCA8<32>:uint16], uint16, word32)
	word32 s5_29 = CONVERT(Mem26[0x4200DCAA<32>:uint16], uint16, word32)
	word32 s3_30 = CONVERT(Mem26[0x4200DCAC<32>:uint16], uint16, word32)
	Mem36[0x4200DCAC<32>:word32] = Mem26[0x4200DCBC<32>:word32]
	word32 a5_44
	word32 a3_42 = rf_pri_manu_pu(7<32>, rf_pri_save_state_for_cal(a3), out a5_44)
	word32 s0_45 = Mem36[a5_44 + 28<i32>:word32]
	Mem49[(a5_44 | 8<i32>) + 28<i32>:word32] = s0_45
	Mem55[s0_45 + 160<i32>:word32] = Mem49[s0_45 + 160<i32>:int32] & -256<i32> | 128<i32>
	Mem60[s0_45 + 184<i32>:word32] = Mem55[s0_45 + 184<i32>:int32] & 0xFCFFFFFF<32>
	Mem68[s0_45 + 168<i32>:word32] = CONVERT(Mem60[0x4200DCAE<32>:uint16], uint16, word32) | Mem60[s0_45 + 168<i32>:int32] & 0xF0000000<32>
	Mem70[s0_45 + 196<i32>:word32] = 0x1000000<32>
	Mem74[s0_45 + 192<i32>:word32] = Mem70[s0_45 + 192<i32>:int32] | 0x1000000<32>
	word32 a5_75 = Mem74[s0_45 + 192<i32>:int32]
	Mem77[s0_45 + 192<i32>:word32] = a5_75 & 0xEFFFFFFF<32>
	word32 a4_78 = Mem77[s0_45 + 184<i32>:int32]
	Mem80[s0_45 + 184<i32>:word32] = a4_78 | 0x10000000<32>
	word32 s0_85
	word32 s1_86
	word32 s2_87
	word32 s6_88
	word32 s7_89
	word32 s8_90
	word32 s9_91
	word32 s3_92
	word32 s4_93
	word32 s5_94
	word32 a3_98
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a3:a3_42,a4:a4_78 | 0x10000000<32>,a5:a5_75 & 0xEFFFFFFF<32>,ra:0x4200CAFA<p32>,s0:s0_45,s1:0xEFFFFFFF<32>,s2:0x10000000<32>,s3:s3_30,s4:s4_28,s5:s5_29,s6:1<32>,s7:0x2307E000<32>,s8:0xE<32>,s9:0xFFFFFFFF<32>
		defs: a3:a3_98,s0:s0_85,s1:s1_86,s2:s2_87,s3:s3_92,s4:s4_93,s5:s5_94,s6:s6_88,s7:s7_89,s8:s8_90,s9:s9_91
	Mem106[s0_85 + 192<i32>:word32] = Mem80[s0_85 + 192<i32>:int32] | s2_87
	word32 a5_108 = Mem106[s0_85 + 184<i32>:int32] & s1_86
	Mem109[s0_85 + 184<i32>:word32] = a5_108
	word32 s0_114
	word32 s1_115
	word32 s2_116
	word32 s6_117
	word32 s7_118
	word32 s8_119
	word32 s9_120
	word32 s3_121
	word32 s4_122
	word32 s5_123
	word32 a3_127
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a3:a3_98,a5:a5_108,ra:0x4200CB1C<p32>,s0:s0_85,s1:s1_86,s2:s2_87,s3:s3_92,s4:s4_93,s5:s5_94,s6:s6_88,s7:s7_89,s8:s8_90,s9:s9_91
		defs: a3:a3_127,s0:s0_114,s1:s1_115,s2:s2_116,s3:s3_121,s4:s4_122,s5:s5_123,s6:s6_117,s7:s7_118,s8:s8_119,s9:s9_120
	word32 a5_135 = Mem109[s0_114 + 164<i32>:int32] & 0xFFFFFFFC<32> | 2<i32>
	Mem136[s0_114 + 164<i32>:word32] = a5_135
	word32 s8_146
	word32 s7_145
	word32 a3_154
	word32 s9_147
	word32 ra_140
	word32 s4_149
	word32 s6_144
	word32 s5_150
	word32 s3_148
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a3:a3_127,a5:a5_135,ra:0x4200CB36<p32>,s0:s0_114,s1:s1_115,s2:s2_116,s3:s3_121,s4:s4_122,s5:s5_123,s6:s6_117,s7:s7_118,s8:s8_119,s9:s9_120
		defs: a3:a3_154,ra:ra_140,s3:s3_148,s4:s4_149,s5:s5_150,s6:s6_144,s7:s7_145,s8:s8_146,s9:s9_147
l2305AB3E:
	word32 s2_159 = 6<32>
	word32 s0_160 = 128<i32>
l2305AB44:
	branch s2_159 == s9_147 l2305AB56
l2305AB48:
	word32 s0_175
	word32 a0_166
	ra_140 = rf_pri_fcal_meas(ra_140, s0_160, s0_160, out a0_166, out a3_154)
	branch a0_166 <u s4_149 l2305ABC0
l2305ABC0:
	s0_175 = s0_160 - (s6_144 << s2_159)
l2305AB52:
	branch s5_150 <u a0_166 l2305ABCE
l2305ABCE:
	s0_175 = s0_160 + (s6_144 << s2_159)
l2305ABC6:
	s0_160 = CONVERT(SLICE(s0_175, word16, 0), word16, word32)
	s2_159 = s2_159 + 0xFFFFFFFF<32>
l2305AB56:
	branch s8_146 >=u s0_160 l2305ABD6
l2305ABD6:
	word32 a5_693
	word32 a3_214
	word32 s1_218
	word32 s3_222
	word32 s4_223
	word32 s5_224
	word32 s6_225
	word32 s7_226
	word32 s8_227
	word32 s9_228
	word32 a7_694
	word32 s10_696
	word32 s2_695
	word32 s11_697
	word32 t4_698
	word32 a1_690
	word32 a0_689
	word32 a2_691
	word32 a4_692
	printf(ra_140, s7_145 + -1976<i32>, a3_154, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_218, out a0_689, out a1_690, out a2_691, out a3_214, out a4_692, out a5_693, out a7_694, out s2_695, out s3_222, out s4_223, out s5_224, out s6_225, out s7_226, out s8_227, out s9_228, out s10_696, out s11_697, out t4_698)
	word32 a5_234 = Mem207[0x400010C0<32>:int32] & s1_218
	Mem235[0x400010C0<32>:word32] = a5_234
	word32 a4_236 = Mem235[0x400010B8<32>:int32]
	Mem238[0x400010B8<32>:word32] = a4_236 | 0x10000000<32>
	word32 s0_243
	word32 s1_244
	word32 s2_245
	word32 s6_246
	word32 s7_247
	word32 s8_248
	word32 s9_249
	word32 s3_250
	word32 s4_251
	word32 s5_252
	word32 a3_256
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a3:a3_214,a4:a4_236 | 0x10000000<32>,a5:a5_234,ra:0x4200CC00<p32>,s0:0x40001000<32>,s1:s1_218,s2:0x10000000<32>,s3:s3_222,s4:s4_223,s5:s5_224,s6:s6_225,s7:s7_226,s8:s8_227,s9:s9_228
		defs: a3:a3_256,s0:s0_243,s1:s1_244,s2:s2_245,s3:s3_250,s4:s4_251,s5:s5_252,s6:s6_246,s7:s7_247,s8:s8_248,s9:s9_249
	Mem269[s0_243 + 192<i32>:word32] = Mem238[s0_243 + 192<i32>:int32] | s2_245
	word32 a5_271 = Mem269[s0_243 + 184<i32>:int32] & s1_244
	Mem272[s0_243 + 184<i32>:word32] = a5_271
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a3:a3_256,a5:a5_271,ra:0x4200CC22<p32>,s0:s0_243,s1:s1_244,s2:s2_245,s3:s3_250,s4:s4_251,s5:s5_252,s6:s6_246,s7:s7_247,s8:s8_248,s9:s9_249
		defs: a3:a3_290,ra:ra_276,s3:s3_284,s4:s4_285,s5:s5_286,s6:s6_280,s7:s7_281,s8:s8_282,s9:s9_283
l2305AB5A:
	word32 s1_302 = CONVERT(SLICE(s0_160 + 1<i32>, word16, 0), word16, word32)
	word32 a3_699
	word32 a0_304
	word32 ra_309 = rf_pri_fcal_meas(ra_140, s0_160, s1_302, out a0_304, out a3_699)
	Mem313[0x420179CC<32>:word16] = SLICE(a0_304, word16, 0)
	word32 s4_314 = 0x420169CE<32>
	word32 s2_315 = CONVERT(SLICE(s0_160 + -38<i32>, word16, 0), word16, word32)
l2305AB82:
	word32 s1_318 = s1_302 + 0xFFFFFFFF<32>
	s1_302 = CONVERT(SLICE(s1_318, word16, 0), word16, word32)
	word32 a0_324
	word32 a3_700
	ra_309 = rf_pri_fcal_meas(ra_309, s0_160, s1_302, out a0_324, out a3_700)
	Mem331[s4_314 + 0<i32>:word16] = SLICE(a0_324, word16, 0)
	branch s3_148 <u a0_324 l2305AB9C
l2305AB96:
	s4_314 = s4_314 + 2<32>
	branch CONVERT(SLICE(s1_318, word16, 0), word16, word32) != s2_315 l2305AB82
l2305AB9C:
	word32 a3_337 = 0<32>
	word32 a5_338 = 0<32>
	word32 s0_342 = s0_160 + 2<32>
l2305ABB6:
	word32 a0_348 = CONVERT(Mem347[a3_337 + 0x4200D624<32>:uint16], uint16, word32)
l2305AC34:
	word32 a4_355 = a5_338 << 0x10<u32>
	branch CONVERT(Mem347[(a5_338 << 1<u32>) + 0x420169CC<32>:uint16], uint16, word32) <u a0_348 l2305AC2C
l2305AC2C:
	a5_338 = CONVERT(SLICE((a4_355 >>u 16<i32>) + 1<i32>, word16, 0), word16, int32)
l2305AC48:
	Mem368[a3_337 + 0x42016A1C<32>:word16] = SLICE(s0_342 - (a4_355 >>u 16<i32>), word16, 0)
	branch a5_338 <= 0<32> l2305ACD2
l2305ACD2:
	a5_338 = 0<32>
l2305AC58:
	a5_338 = CONVERT(SLICE((a4_355 >>u 16<i32>) + -1<i32>, word16, 0), word16, int32)
l2305AC60:
	a3_337 = a3_337 + 2<32>
	branch a3_337 != 42<i32> l2305ABB6
l2305AC66:
	rf_pri_restore_state_for_cal()
	word32 s0_379 = 0x42016A1C<32>
	word32 s1_382 = 0<32>
	word32 s4_383 = 0x4200E000<32>
	word32 s3_384 = 0x2307E000<32>
l2305AC78:
	word32 a4_392 = Mem387[s4_383 + -836<i32>:int32] + (s1_382 + 8<i32> << 1<i32>)
	word32 a2_394 = CONVERT(Mem387[s0_379:uint16], uint16, word32)
	Mem400[a4_392 + 12<i32>:word16] = SLICE(CONVERT(Mem387[a4_392 + 12<i32>:uint16], uint16, word32) & -256<i32> | a2_394 & 255<i32>, word16, 0)
	word32 a7_705
	word32 s11_711
	word32 a5_407
	word32 a3_411
	word32 s2_418
	word32 s6_422
	word32 t4_712
	word32 s5_706
	word32 s8_708
	word32 s7_707
	word32 s9_709
	word32 s10_710
	word32 a1_702
	word32 a0_701
	word32 a2_703
	word32 a4_704
	ra_309 = printf(ra_309, s3_384 + -1956<i32>, a2_394 & 255<i32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_382, out a0_701, out a1_702, out a2_703, out a3_411, out a4_704, out a5_407, out a7_705, out s2_418, out s3_384, out s4_383, out s5_706, out s6_422, out s7_707, out s8_708, out s9_709, out s10_710, out s11_711, out t4_712)
	s0_379 = s0_379 + 2<32>
	branch s1_382 != s2_418 l2305AC78
l2305ACAC:
	Mem431[(a5_407 | 48<i32>) + 20<i32>:word32] = Mem400[a5_407 + 20<i32>:word32]
	0<32> = dwArg0128
	a5Out = a5_407 | 48<i32>
	s6Out = s6_422
	return a3_411
rf_pri_fcal_exit:


word32 rf_pri_full_cal(word32 s6, word32 fflags, word32 frm, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg1C, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg9C, word32 dwArgB8, word32 dwArgE8, word32 dwArg0118, ptr32 & s1Out, ptr32 & s2Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  fflags:[0..31] frm:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: fflags frm ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
rf_pri_full_cal_entry:
l2305ACD6:
	Mem11[0x40001220<32>:word32] = Mem7[0x40001220<32>:int32] & -97<i32>
	Mem14[0x40001220<32>:word32] = Mem11[0x40001220<32>:int32] | 33<i32>
	Mem17[0x40001220<32>:word32] = Mem14[0x40001220<32>:int32] | 64<i32>
	word32 a5_27
	word32 s6_39
	word32 s3_61
	word32 s6_64
	word32 a5_104
	word32 s2_113
	word32 s6_117
	word32 s9_120
	word32 a5_195
	word32 a5_134 = rf_pri_txcal(rf_pri_rccal(rf_pri_roscal(rf_pri_lo_acal(rf_pri_fcal(rf_pri_start_txdfe(out a5_195), s6, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0118, out a5_27, out s6_39), a5_27, s6_39, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0118, out s3_61, out s6_64), s3_61, s6_64, dwArg00, dwArg04, dwArg28, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgE8, dwArg0118), fflags, frm, dwArg08, dwArg28, dwArg50, dwArg54, dwArg78, dwArg88, dwArg9C, out a5_104, out s2_113, out s6_117, out s9_120), a5_104, s2_113, s6_117, s9_120, dwLoc08, dwArg00, dwArg04, dwArg1C, dwArg4C, dwArg9C, dwArgB8)
	word32 s0_155 = Mem17[a5_134 + 12<i32>:word32]
	Mem159[(a5_134 | 6<i32>) + 12<i32>:word32] = s0_155
	Mem162[s0_155 + 544<i32>:word32] = Mem159[s0_155 + 544<i32>:int32] & -98<i32>
	Mem165[s0_155 + 544<i32>:word32] = Mem162[s0_155 + 544<i32>:int32] & 0xFE00067D<32>
	s1Out = s1_139
	s2Out = s2_142
	fflagsOut = fflags_107
	frmOut = frm_108
	return ra_137
rf_pri_full_cal_exit:


word32 rf_pri_restore_cal_reg(word32 a3, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a3:[0..31]
// LiveOut: s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
rf_pri_restore_cal_reg_entry:
l2305AD48:
	word32 a3_24 = a3 & 63<i32> | Mem15[0x40001168<32>:int32] & -64<i32>
	word32 a3_32 = (a3_24 >>u 6<i32> & 63<i32>) << 8<i32> | a3_24 & 0xFC0000FF<32>
	word32 a2_41 = Mem15[(a3_32 & 0xFFC0FFFF<32>) + 80<i32>:word32]
	word32 a3_45 = ((a3_32 & 0xFFC0FFFF<32>) >>u 6<i32> & 63<i32>) << 24<i32> | (a3_32 & 0xFFC0FFFF<32>) & 0xC0FFFFFF<32>
	Mem46[0x40001168<32>:word32] = a3_45
	word32 a3_52 = a3_45 & 63<i32> | Mem46[0x4000116C<32>:int32] & -64<i32>
	word32 a3_63 = ((a3_52 >>u 6<i32> & 63<i32>) << 8<i32> | a3_52 & 0xFC0000FF<32>) & 0xFFC0FFFF<32> | (a2_41 & 63<i32>) << 16<i32>
	Mem70[0x4000116C<32>:word32] = (a3_63 >>u 6<i32> & 63<i32>) << 24<i32> | a3_63 & 0xC0FFFFFF<32>
	word32 a4_71 = Mem70[0x40001080<32>:int32]
	word32 a4_77 = (a4_71 & 63<i32>) << 24<i32> | a4_71 & 0xC0FFFFFF<32>
	word32 a4_84 = a4_77 & 0xFC0000FF<32> & 0xFFC0FFFF<32>
	Mem95[0x40001080<32>:word32] = (((a4_77 & 0xFC0000FF<32>) >>u 6<i32> & 63<i32>) << 16<i32> | a4_84) & -64<i32> | a4_84 >>u 18<i32> & 63<i32>
	word32 a5_151
	word32 a4_100 = rf_pri_txcal_config_hw(a4_71 & 0xC0FFFFFF<32>, out a5_151)
	word32 a3_105 = Mem95[0x4200DCBC<32>:int32]
	word32 s0_106 = Mem95[a4_100 + 112<i32>:word32]
	Mem119[((Mem95[a3_105 + 128<i32>:int32] >>u 6<i32> & 63<i32>) << 16<i32> | ((Mem95[a3_105 + 128<i32>:int32] & 63<i32>) << 24<i32> | a4_100 & 0xC0FFFFFF<32>) & 0xFFC0FFFF<32>) + 112<i32>:word32] = s0_106
	word32 a3_121 = Mem119[0x4200DCBC<32>:int32]
	Mem132[s0_106 + 1536<i32>:word32] = (Mem119[a3_121 + 128<i32>:int32] & 0x7FF000<32> | Mem119[s0_106 + 1536<i32>:int32] & 0xFF800FFF<32>) & -1024<i32> | Mem119[a3_121 + 132<i32>:int32] & 1023<i32>
	s1Out = 0x4200E000<32>
	s2Out = 0xFFC0FFFF<32>
	return s0_106
rf_pri_restore_cal_reg_exit:


word32 rf_pri_init(word32 s1, word32 a0, word32 a1, word32 s2, word32 s6, word32 fflags, word32 frm, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg1C, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg9C, word32 dwArgB8, word32 dwArgE8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] s1:[0..31] s2:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: fflags frm ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
rf_pri_init_entry:
l2305AEAC:
	rf_pri_chipv(a1)
	Mem27[CONVERT(a0 <u 1<i32>, bool, word32):word32] = 0x4200E3B4<32>
	word32 a5_33 = Mem27[0x4000F814<32>:int32] & 0xFF0000FF<32> | 768<i32>
	Mem34[0x40010814<32>:word32] = a5_33
	word32 a5_40 = a5_33 & 0xF0FFFFFF<32> | 0x8000000<32>
	Mem41[a5_40 + 48<i32>:word32] = Mem34[a5_33 + 48<i32>:word32]
	word32 a1_42 = Mem41[a5_40 + 48<i32>:word32]
	Mem46[(a5_40 | 0x1000001<32>) + 48<i32>:word32] = a1_42
	word32 a5_47 = Mem46[0x4000F884<32>:int32]
	Mem49[0x40010884<32>:word32] = a5_47 | 4<i32>
	word32 s0_207 = a0
	word32 a5_48 = a5_47 | 4<i32>
	branch (a5_47 | 4<i32>) != 0<32> l2305AF22
l2305AF18:
	word32 s10_279
	word32 s11_280
	word32 s5_281
	word32 s7_282
	word32 s9_283
	word32 t0_284
	word32 t2_285
	call 0x4200C510<p32> (retsize: 0;)
		uses: a0:0xA<32>,a1:a1_42,fflags:fflags,frm:frm,ra:0x4200BF1A<p32>,s0:a0,s1:s1,s10:s10_279,s11:s11_280,s2:s2,s5:s5_281,s6:s6,s7:s7_282,s9:s9_283,t0:t0_284,t2:t2_285
		defs: a1:a1_56,a5:a5_61,ra:ra_57,s0:s0_54,s10:s10_279,s11:s11_280,s5:s5_281,s7:s7_282,s9:s9_283,t0:t0_284,t2:t2_285
l2305AF22:
	word32 a1_84 = a1_42 << 8<i32>
	word32 a3_77 = Mem49[a5_48 + 100<i32>:word32]
	word32 a5_88 = (a5_48 & 0xF80000FF<32> | a1_84) & -248<i32> | Mem49[Mem49[a1_42:word32] + 4<i32>:word32] << 4<i32>
	Mem92[(a5_88 | 0x4000002<32>) + 100<i32>:word32] = a3_77
	word32 a2_93 = Mem92[a5_88 | 0x4000002<32>:word32]
	Mem109[a3_77 + 296<i32>:word32] = (Mem92[a3_77 + 296<i32>:int32] & 0xFF80FFFF<32> | a1_84 << 0x10<u32>) & 0xF0FFFFFF<32> | Mem92[Mem92[a1_84 + 8<i32>:word32] + 12<i32>:int32] << 0xC<u32> | 0x400000<32>
	word32 a6_110 = Mem109[a2_93:int32]
	Mem129[a3_77 + 300<i32>:word32] = ((Mem109[a3_77 + 300<i32>:int32] & -2048<i32> | Mem109[a6_110 + 16<i32>:int32] << 4<i32> | Mem109[a6_110 + 20<i32>:int32]) & 0xFF80FFFF<32> | 1024<i32> | Mem109[a6_110 + 24<i32>:int32] << 0x10<u32>) & 0xF0FFFFFF<32> | Mem109[a6_110 + 28<i32>:int32] << 0xC<u32> | 0x400000<32>
	Mem133[a3_77 + 144<i32>:word32] = Mem129[a3_77 + 144<i32>:int32] | 0x10000000<32>
	word32 a5_134 = Mem133[a3_77 + 184<i32>:int32]
	Mem140[a3_77 + 184<i32>:word32] = Mem133[a5_134 + 32<i32>:word32] << 4<i32> | a5_134 & -17<i32>
	word32 a4_145 = (a5_134 & -17<i32>) << 1<i32>
	Mem149[a3_77 + 312<i32>:word32] = Mem140[a3_77 + 312<i32>:int32] & 0xFFFFFFFC<32> | a4_145 | a4_145
	Mem155[a3_77 + 312<i32>:word32] = Mem149[a3_77 + 312<i32>:int32] & 0xFFFCFFF7<32> | 768<i32>
	Mem160[a3_77 + 304<i32>:word32] = Mem155[a3_77 + 304<i32>:int32] & 0xEFFFFFFE<32>
	word32 a5_161 = Mem160[0x4000E400<32>:int32]
	Mem167[0x4000E400<32>:word32] = Mem160[a5_161 + 44<i32>:word32] << 1<i32> | a5_161 & -3<i32>
	word32 a5_168 = Mem167[0x4000E418<32>:int32]
	Mem176[0x4000E418<32>:word32] = Mem167[a5_168 + 48<i32>:word32] << 24<i32> | a5_168 & 0xFCFFFFFF<32>
	word32 a5_181 = Mem176[a3_77 + 140<i32>:int32] & 0xFFFFFFFC<32> | 2<i32>
	Mem182[a3_77 + 140<i32>:word32] = a5_181
	Mem187[(a5_181 & 0xFFF0FFFF<32> | 0xC0000<32>) + 48<i32>:word32] = Mem182[a5_181 + 48<i32>:word32]
	word32 a3_191 = rf_pri_set_gain_table_regs()
	Mem203[0x4000E404<32>:word32] = Mem187[0x4000E404<32>:int32] | 0x10000000<32>
	Mem206[0x4000E41C<32>:word32] = Mem203[0x4000E41C<32>:int32] | 255<i32>
	branch s0_207 != 0<32> l2305B0A2
l2305B0A2:
	0<32> = dwArg38
l2305B0AC_thunk_rf_pri_full_cal:
	word32 fflags_227
	word32 frm_228
	word32 s1_230
	word32 s2_233
	word32 ra_229 = rf_pri_full_cal(s6, fflags, frm, dwArg00, dwArg04, dwArg08, dwArg1C, dwArg28, dwArg30, dwArg34, dwArg4C, dwArg50, dwArg54, dwArg58, dwArg78, dwArg7C, dwArg88, dwArg9C, dwArgB8, dwArgE8, dwArg0118, out s1_230, out s2_233, out fflags_227, out frm_228)
	s0Out = s0
	s1Out = s1_230
	s2Out = s2_233
	fflagsOut = fflags_227
	frmOut = frm_228
	return ra_229
l2305B094:
	0<32> = dwArg38
l2305B09E_thunk_rf_pri_restore_cal_reg:
	word32 s1_262
	word32 s2_263
	s0Out = rf_pri_restore_cal_reg(a3_191, out s1_262, out s2_263)
	s1Out = s1_262
	s2Out = s2_263
	fflagsOut = fflags
	frmOut = frm
	return ra
rf_pri_init_exit:


void rf_pri_update_power_offset(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_update_power_table
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6
// Preserved: sp
rf_pri_update_power_offset_entry:
l2305B0B0:
	word32 a5_10 = 0<32>
l2305B0C6:
	word32 a2_13 = Mem12[a0 + a5_10:word32]
	Mem16[a5_10 + 0x42016AB4<32>:word32] = a2_13
	Mem19[a5_10 + 0x42016A7C<32>:word32] = a2_13
	a5_10 = a5_10 + 4<32>
	branch a5_10 != 56<i32> l2305B0C6
l2305B0E2:
	return
rf_pri_update_power_offset_exit:


word32 phyif_utils_decode(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_frame_check
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a1 fflags frm ra s2 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa5 fflags frm ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: s0 sp
phyif_utils_decode_entry:
l2305B0E4:
	word32 a0_59
	word32 a4_9 = CONVERT(Mem7[a0 + 6<i32>:uint16], uint16, word32)
	word32 s0_12 = a1
	word32 a5_14 = CONVERT(Mem7[a0 + 19<i32>:byte], byte, word32)
	branch (a4_9 & 7<32>) <=u 1<32> l2305B126
l2305B126:
	a0 = Mem7[a4_9 & 7<32>:word32]
	branch ((a4_9 & 7<32>) >>u 12<i32> & 0xF<32>) >u 3<32> l2305B0FC
l2305B132:
	word32 a1_23
	word32 a0_31
	word32 a1_32
	word32 s9_177
	word32 s8_176
	word32 s7_175
	word32 s4_174
	word32 s3_173
	word32 a7_172
	word32 a5_171
	word32 a4_170
	word32 s1_169
	ra = __muldf3(ra, __floatsidf(0<32> - CONVERT(SLICE(a5_14, byte, 0), byte, int32), out a1_23), a1_23, Mem7[0x23073018<32>:int32], Mem7[0x2307301C<32>:int32], fflags, frm, out s0_12, out s1_169, out a0_31, out a1_32, out a4_170, out a5_171, out a7_172, out s2, out s3_173, out s4_174, out s5, out s6, out s7_175, out s8_176, out s9_177, out fflags, out frm)
	word32 a5_180
	word32 a4_179
	word32 a3_178
	a0_59 = __fixdfsi(ra, a0_31, a1_32, fflags, frm, out a1, out a3_178, out a4_179, out a5_180)
l2305B0FC:
	a0_59 = CONVERT(SLICE(CONVERT(Mem7[a0 + 20<i32>:byte], byte, word32) << 8<i32> | a5_14, word16, 0), word16, int32) ^ 122<i32>
l2305B110:
	Mem85[s0_12:byte] = SLICE(CONVERT(CONVERT(a0_59, word32, real32), real32, int32), byte, 0)
	a1Out = a1
	s2Out = s2
	s5Out = s5
	s6Out = s6
	fflagsOut = fflags
	frmOut = frm
	return ra
phyif_utils_decode_exit:


void sysctrl_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse: 
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
sysctrl_init_entry:
l2305B156:
	Mem6[0x80000074<32>:word32] = 0x44900000<32>
	Mem11[0x449000E0<32>:word32] = Mem6[0x449000E0<32>:int32] | 0x1FF00<32>
	return
sysctrl_init_exit:


void intc_spurious()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
intc_spurious_exit:
intc_spurious_entry:
l2305B176:
l2305B18A_thunk_assert_err:
	assert_err()


void intc_enable_irq(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      intc_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
intc_enable_irq_entry:
l2305B18E:
	Mem11[1<32> << a0:word32] = (a0 >> 5<i32>) + 0x11244004<32> << 2<i32>
	return
intc_enable_irq_exit:


void intc_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse: 
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: sp
intc_init_entry:
l2305B1A4:
	intc_enable_irq(63<i32>)
	intc_enable_irq(62<i32>)
	intc_enable_irq(61<i32>)
	intc_enable_irq(0x18<32>)
	intc_enable_irq(0x19<32>)
	intc_enable_irq(0x1A<32>)
	intc_enable_irq(0x1B<32>)
	intc_enable_irq(0x1C<32>)
	intc_enable_irq(0x1D<32>)
	intc_enable_irq(0x1E<32>)
	intc_enable_irq(0x1F<32>)
	intc_enable_irq(32<i32>)
	intc_enable_irq(33<i32>)
	intc_enable_irq(35<i32>)
	intc_enable_irq(55<i32>)
	intc_enable_irq(53<i32>)
	intc_enable_irq(50<i32>)
	intc_enable_irq(52<i32>)
	intc_enable_irq(54<i32>)
	intc_enable_irq(0xA<32>)
l2305B23C_thunk_intc_enable_irq:
	intc_enable_irq(0xB<32>)
	return
intc_init_exit:


void mac_irq(word32 ra, word32 s0, word32 a4, word32 mstatus, word32 dwArg10, word32 dwArg18, word32 dwArg38, word32 dwArgC4, word32 dwArgE0, word32 dwArgE4, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +00C4:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mac_irq_entry:
l2305B240:
	word32 a5_5 = Mem0[a4:word32]
	branch a4 != 0<32> l2305B24C
l2305B248:
	branch Mem0[a5_5 + 4<i32>:word32] == 0<32> l2305B28E
l2305B28E:
	return
l2305B24C:
	word32 a5_16 = Mem14[0x44910040<32>:word32]
	branch s0 != 0<32> l2305B282
l2305B282:
	word32 a3_59
	word32 ra_30
	word32 a1_31
	word32 a0_32
	word32 s1_60
	word32 s2_61
	word32 s3_62
	word32 s4_63
	word32 s8_64
	word32 t3_65
	word32 tp_66
	word32 a6_67
	call s0 (retsize: 0;)
		uses: a0:a0_32,a1:a1_31,a2:dwArg10,a3:a3_59,a4:a5_16 << 2<u32>,a6:a6_67,mstatus:mstatus,ra:ra,s0:s0,s1:s1_60,s2:s2_61,s3:s3_62,s4:s4_63,s8:s8_64,t3:t3_65,tp:tp_66
		defs: a0:a0_32,a1:a1_31,a3:a3_59,a6:a6_67,ra:ra_30,s1:s1_60,s2:s2_61,s3:s3_62,s4:s4_63,s8:s8_64,t3:t3_65,tp:tp_66
l2305B28A_thunk_ipc_emb_notify:
	ipc_emb_notify(ra_30, a0_32, dwArg10, mstatus, dwArg18, dwArg38, dwArgC4, dwArgE0, dwArgE4, dwArg0108)
	return
mac_irq_exit:
l2305B26A:
	assert_err()


void bl_irq_handler(word32 ra, word32 mstatus, word32 dwArg10, word32 dwArg18, word32 dwArg38, word32 dwArgC4, word32 dwArgE0, word32 dwArgE4, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_output
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +00C4:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bl_irq_handler_entry:
l2305B290:
	word32 a5_39
	ke_evt_set(0x40000000<32>, ipc_host_disable_irq_e2a(), mstatus, out a5_39)
l2305B2A4_thunk_ipc_emb_notify:
	ipc_emb_notify(ra, 0x40000000<32>, dwArg10, mstatus, dwArg18, dwArg38, dwArgC4, dwArgE0, dwArgE4, dwArg0108)
	return
bl_irq_handler_exit:


word32 blmac_pwr_mgt_setf(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_goto_idle_cb
//      chan_tx_cfm
//      chan_ctxt_op_evt
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a5
// Preserved: s0 sp
blmac_pwr_mgt_setf_entry:
l2305B2A8:
	branch (a0 << 2<u32> & -5<i32>) == 0<32> l2305B2D2
l2305B2D2:
	word32 a5_17 = Mem9[a0 + 76<i32>:word32]
	word32 a0_19 = a0 & 0xFFFFFFFB<32> | a0 << 2<u32>
	Mem20[a0_19 + 76<i32>:word32] = a5_17
	a5Out = a5_17
	return a0_19
blmac_pwr_mgt_setf_exit:
l2305B2B8:
	assert_err()


word32 chan_get_next_chan(word32 s0, word32 s1, word32 a4, word32 dwArg38, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_cde_evt
//      chan_ctxt_op_evt
//      chan_bcn_to_evt
// MayUse:  a4:[0..31] s0:[0..31] s1:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2
// Trashed: a0 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
chan_get_next_chan_entry:
l2305B2E6:
	word32 a5_15 = 0x44B00000<32>
	word32 s2_16 = Mem12[0x44B00120<32>:int32]
	word32 a3_159 = 0x4201E2D0<32>
	branch s0 == 0<32> l2305B330
l2305B30A:
	branch s1 == 0<32> l2305B316
l2305B30C:
	a4 = CONVERT(Mem12[s1 + 10<i32>:byte], byte, word32)
	a5_15 = 2<32>
	branch a4 == 2<32> l2305B3FA
l2305B316:
	a3_159 = Mem12[a5_15 + 68<i32>:word32]
	a4 = s2_16 + 0x1000400<32> - a5_15
	branch a4 >= 0<32> l2305B3FA
l2305B326:
	a4 = CONVERT(Mem12[s0 + 22<i32>:byte], byte, word32)
	a5_15 = 4<32>
	branch a4 == 4<32> l2305B3FA
l2305B330:
	branch s1 == 0<32> l2305B3A2
l2305B332:
	s1 = Mem12[a5_15 + 4<i32>:word32]
	branch a5_15 - a4 >= 0<32> l2305B3A2
l2305B33C:
	word32 a5_40 = CONVERT(Mem12[s1 + 8<i32>:byte], byte, word32)
	a3_159 = 1496<i32>
	a5_15 = a5_40 + 1496<i32>
	branch s0 != 0<32> l2305B36E
l2305B36E:
	s1 = Mem12[a5_40 + 1500<i32>:word32]
	a4 = s2_16 + 0x1000400<32> - (a5_40 + 1496<i32>)
	branch a4 >= 0<32> l2305B3E0
l2305B37E:
	a4 = CONVERT(Mem12[s0 + 18<i32>:uint16], uint16, word32)
	word32 a2_59 = CONVERT(Mem12[s0 + 20<i32>:uint16], uint16, word32)
	a3_159 = 0<32>
	branch a2_59 >=u a4 l2305B394
l2305B38C:
	a4 = a4 - a2_59
	a3_159 = CONVERT(SLICE(a4, word16, 0), word16, word32)
l2305B394:
	word32 a5_68 = a5_40 + 1496<i32> - s2_16 >>u 10<i32> << 16<i32>
	a5_15 = a5_68 >>u 16<i32>
	branch a3_159 >=u a5_68 >>u 16<i32> l2305B3FA
l2305B3A2:
	a5_15 = 0x4201E244<32>
	a4 = 0<32>
	branch CONVERT(Mem12[0x4201E25A<32>:byte], byte, word32) == 0<32> l2305B3BA
l2305B3B2:
	a4 = CONVERT(Mem12[0x4201E256<32>:uint16], uint16, word32)
	s0 = 0x4201E244<32>
l2305B3BA:
	branch CONVERT(Mem12[0x4201E276<32>:byte], byte, word32) == 0<32> l2305B3D2
l2305B3C0:
	word32 a3_82 = CONVERT(Mem12[0x4201E272<32>:uint16], uint16, word32)
	branch a3_82 <u a4 l2305B3D2
l2305B3C8:
	a4 = a3_82
	s0 = 0x4201E260<32>
l2305B3D2:
	a3_159 = CONVERT(Mem12[0x4201E292<32>:byte], byte, word32)
	branch a3_159 == 0<32> l2305B3E0
l2305B3D8:
	a5_15 = CONVERT(Mem12[0x4201E28E<32>:uint16], uint16, word32)
	branch a5_15 >=u a4 l2305B408
l2305B408:
	s0 = 0x4201E27C<32>
l2305B3E0:
	branch s0 != 0<32> l2305B3FA
l2305B3FA:
	0<32> = dwArg38
	a0Out = s0
	a3Out = a3_159
	a4Out = a4
	a5Out = a5_15
	s2Out = s2_16
	return s1
chan_get_next_chan_exit:
l2305B3E2:
	assert_err()
l2305B356:
	assert_err()


word32 chan_conn_less_delay_prog(word32 ra, word32 mstatus, word32 dwArg0108, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_ctxt_op_evt
//      chan_scan_req
//      chan_roc_req
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
chan_conn_less_delay_prog_entry:
l2305B412:
	word32 a4_6 = CONVERT(Mem0[0x4201E340<32>:byte], byte, word32)
	Mem10[0x4201E340<32>:byte] = SLICE(a4_6 | 16<i32>, byte, 0)
	word32 a1_12 = Mem10[0x44B00120<32>:int32]
l2305B43E_thunk_mm_timer_set:
	word32 a0_18
	word32 a1_19
	word32 a3_21
	word32 a4_22
	word32 s1_38
	word32 a2_39
	word32 a5_40
	word32 s2_41
	word32 s3_42
	word32 s4_43
	word32 s8_44
	word32 s0_25 = mm_timer_set(ra, 0x4201E328<32>, a1_12 + 0x7000530<32>, a4_6 | 16<i32>, mstatus, dwArg0108, out s1_38, out a0_18, out a1_19, out a2_39, out a3_21, out a4_22, out a5_40, out s2_41, out s3_42, out s4_43, out s8_44)
	a0Out = a0_18
	a1Out = a1_19
	a3Out = a3_21
	a4Out = a4_22
	return s0_25
chan_conn_less_delay_prog_exit:


word32 chan_upd_nb_rem_slots.isra.3(word32 a0, word32 a1, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tbtt_schedule
//      chan_ctxt_op_evt
//      chan_bcn_to_evt
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a1 a4 a5
// Trashed: a1 a4 a5
// Preserved: sp
chan_upd_nb_rem_slots.isra.3_entry:
l2305B442:
	word32 a5_5 = Mem0[0x4201E33C<32>:int32]
	word32 a1_11 = a1 - a5_5 >>u 10<i32> << 16<i32>
	word32 a4_7 = CONVERT(Mem0[a0:uint16], uint16, word32)
	word32 a1_12 = a1_11 >>u 16<i32>
	branch a4_7 >=u a1_11 >>u 16<i32> l2305B45C
l2305B45A:
	a1_12 = a4_7
l2305B45C:
	word32 a1_16 = a4_7 - a1_12
	Mem18[a0:word16] = SLICE(a1_16, word16, 0)
	a4Out = a4_7
	a5Out = a5_5
	return a1_16
chan_upd_nb_rem_slots.isra.3_exit:


word32 chan_tbtt_detect_conflict.isra.8(word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tbtt_insert
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
chan_tbtt_detect_conflict.isra.8_entry:
l2305B466:
	word32 a0_11
	word32 a4_5 = a0 - a1
	branch a4_5 < 0<32> l2305B480
l2305B470:
	a5 = a1 + 0x2FFF800<32> - a0
	a0_11 = 1<32>
	branch a5 >= 0<32> l2305B496
l2305B480:
	a1 = a1 - a0
	a0_11 = 0<32>
	branch a1 < 0<32> l2305B496
l2305B488:
	a0_11 = ~(a4_5 + 0x2FFF800<32>) >>u 31<i32>
l2305B496:
	a1Out = a1
	a3Out = a0
	a4Out = a4_5
	a5Out = a5
	return a0_11
chan_tbtt_detect_conflict.isra.8_exit:


word32 chan_tbtt_insert(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0138, word32 dwArg0198, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tbtt_schedule
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s1 s10 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t3 tp
// Preserved: s8 sp
chan_tbtt_insert_entry:
l2305B498:
	word32 a5_131 = 0x4201E000<32>
	word32 s2_40 = Mem6[0x4201E2E0<32>:int32]
	word32 s6_187 = 0<32>
	word32 s0_145 = 0<32>
	word32 s1_141 = 0<32>
	a0_137 = a0
l2305B4CE:
	word32 s2_147
	word32 a0_137
	branch s2_40 != 0<32> l2305B4F0
l2305B4F0:
	branch s2_40 != a0 l2305B504
l2305B504:
	a5_131 = CONVERT(Mem31[s2_40 + 10<i32>:byte], byte, word32)
	word32 s4_49 = Mem31[a0 + 4<i32>:int32]
	word32 s5_50 = Mem31[s2_40 + 4<i32>:int32]
	branch a5_131 == 2<32> l2305B542
l2305B542:
	branch s4_49 <u s5_50 l2305B550
l2305B546:
	a0_137 = chan_tbtt_detect_conflict.isra.8(s4_49, s5_50, out a1, out a3, out a4, out a5_131)
	branch a0_137 == 0<32> l2305B53E
l2305B514:
	a0_137 = chan_tbtt_detect_conflict.isra.8(s4_49, s5_50, out a1, out a3, out a4, out a5_131)
	branch a0_137 == 0<32> l2305B53A
l2305B53A:
	branch s4_49 <u s5_50 l2305B4D2
l2305B53E:
	s6_187 = s2_40
l2305B51E:
	a4 = CONVERT(Mem31[a0 + 9<i32>:byte], byte, word32)
	a5_131 = CONVERT(Mem31[s2_40 + 9<i32>:byte], byte, word32)
	branch a5_131 >=u a4 l2305B550
l2305B550:
	s0_145 = a0
	s1_141 = 1<32>
	s2_147 = 0<32>
l2305B52A:
	branch s0_145 != 0<32> l2305B52E
l2305B52C:
	s0_145 = s2_40
l2305B52E:
	s1_141 = s1_141 + 1<32> & 255<i32>
l2305B534:
	s2_40 = Mem31[s2_40:int32]
l2305B4F4:
	assert_err()
l2305B4D2:
	s2_147 = 1<32>
l2305B4D4:
l2305B598:
	word32 s1_95 = s1_141 + 0xFFFFFFFF<32>
	branch (s1_95 & 255<i32>) != 255<i32> l2305B558
l2305B558:
	branch s0_145 != 0<32> l2305B56A
l2305B56A:
	branch s0_145 == a0 l2305B58C
l2305B56E:
	word32 a5_106 = CONVERT(Mem105[s0_145 + 10<i32>:byte], byte, word32)
	branch a5_106 != 1<32> l2305B582
l2305B576:
	word32 a1_490
	word32 a2_491
	mm_timer_clear(0x4201E2F8<32>, a4, mstatus, out a1_490, out a2_491, out a3, out a4, out a5_106)
	Mem120[s0_145 + 10<i32>:byte] = 0<8>
l2305B582:
	word32 a2_489
	co_list_extract(0x4201E2E0<32>, s0_145, a4, a5_106, out a2_489, out a5_131)
l2305B58C:
	word32 a2_488
	s1_141 = co_list_push_back(s0_145, a5_131, out a2_488)
	a1 = s0_145
	a0_137 = 0x4201E2E8<32>
	s0_145 = Mem143[s0_145:word32]
l2305B55A:
	assert_err()
l2305B5A2:
	branch s2_147 == 0<32> l2305B5D2
l2305B5D2:
	0<32> = dwArg0198
	a0Out = a0_137
	a1Out = a1
	a3Out = <invalid>
	a4Out = a4
	a5Out = a5_131
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s9Out = <invalid>
	s10Out = <invalid>
	return s1_95 & 255<i32>
l2305B5A6:
	0<32> = dwArg0198
l2305B5CE_thunk_co_list_insert_after:
	word32 a0_209
	word32 a4_211
	word32 a5_212
	word32 a1_213
	word32 s1_214 = co_list_insert_after(0x4201E2E0<32>, s6_187, dwArg0138, a3, a5_131, out a0_209, out a1_213, out a4_211, out a5_212)
	a0Out = a0_209
	a1Out = a1_213
	a3Out = <invalid>
	a4Out = a4_211
	a5Out = a5_212
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s9Out = <invalid>
	s10Out = <invalid>
	return s1_214
chan_tbtt_insert_exit:


word32 chan_upd_ctxt_status(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg0108, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_switch_start
//      chan_cde_evt
//      chan_goto_idle_cb
//      chan_tx_cfm
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0108:[0..31]
// LiveOut: a1 a2 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
chan_upd_ctxt_status_entry:
l2305B5F0:
	word32 a5_27
	word32 a5_13
	word32 a3_5 = Mem0[0x44B00120<32>:int32]
	word32 a4_17 = 2<32>
	branch a1 != 2<32> l2305B628
l2305B628:
	a2 = 4<32>
	a5_27 = 0<32>
	branch a1 != 4<32> l2305B610
l2305B630:
	a2 = CONVERT(Mem0[a0 + 23<i32>:byte], byte, word32)
	branch a2 >u 2<32> l2305B66A
l2305B66A:
	a5_13 = CONVERT(Mem0[a0 + 18<i32>:uint16], uint16, word32) << 10<i32>
l2305B638:
	a2 = 0x4201E2D0<32>
	a4_17 = 1<32>
	branch CONVERT(Mem0[0x4201E342<32>:byte], byte, word32) <=u 1<32> l2305B672
l2305B64A:
	a4_17 = CONVERT(Mem0[a0 + 18<i32>:uint16], uint16, word32)
	word32 a6_19 = CONVERT(Mem0[a0 + 20<i32>:uint16], uint16, word32)
	branch a6_19 >=u a4_17 l2305B672
l2305B656:
	a4_17 = CONVERT(SLICE(a4_17 - a6_19, word16, 0), word16, word32)
	branch a1 >=u a4_17 l2305B672
l2305B672:
	a1 = 5<32>
l2305B662:
	Mem24[a3_5 + 108<i32>:word32] = 0x4201E2D0<32>
	a5_13 = a4_17 << 0xA<u32>
l2305B5FE:
	a4_17 = CONVERT(Mem0[a0 + 23<i32>:byte], byte, word32)
	a5_27 = 0<32>
	branch a1 <u a4_17 l2305B610
l2305B608:
	a5_13 = 0xFFFFA0<32>
l2305B60E:
	a5_27 = a5_13 + a3_5
l2305B610:
	Mem38[a0 + 22<i32>:byte] = SLICE(a1, byte, 0)
	branch a5_27 != 0<32> l2305B676
l2305B676:
	Mem42[0x4201E320<32>:word32] = a0
l2305B688_thunk_mm_timer_set:
	word32 a1_58
	word32 a2_59
	word32 a3_60
	word32 a4_61
	word32 a5_62
	word32 s1_65
	word32 s2_66
	word32 s3_67
	word32 s4_68
	word32 s8_158
	word32 a0_157
	word32 s0_64 = mm_timer_set(ra, 0x4201E318<32>, a5_27, 0x4201E000<32>, mstatus, dwArg0108, out s1_65, out a0_157, out a1_58, out a2_59, out a3_60, out a4_61, out a5_62, out s2_66, out s3_67, out s4_68, out s8_158)
	s1Out = s1_65
	a1Out = a1_58
	a2Out = a2_59
	a3Out = a3_60
	a4Out = a4_61
	a5Out = a5_62
	s2Out = s2_66
	s3Out = s3_67
	s4Out = s4_68
	return s0_64
l2305B616:
	branch a1 == 3<32> l2305B68C
l2305B68C:
	s1Out = s1
	a1Out = a1
	a2Out = a2
	a3Out = a3_5
	a4Out = a4_17
	a5Out = 3<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s0
l2305B61C:
l2305B624_thunk_mm_timer_clear:
	word32 a1_79
	word32 a2_80
	word32 a5_81
	word32 a3_84
	word32 a4_85
	s1Out = mm_timer_clear(0x4201E318<32>, a4_17, mstatus, out a1_79, out a2_80, out a3_84, out a4_85, out a5_81)
	a1Out = a1_79
	a2Out = a2_80
	a3Out = a3_84
	a4Out = a4_85
	a5Out = a5_81
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s0
chan_upd_ctxt_status_exit:


word32 chan_switch_start(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArgF8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_conn_less_delay_evt
//      chan_tbtt_schedule
//      chan_cde_evt
//      chan_ctxt_op_evt
//      chan_roc_req
//      chan_bcn_to_evt
//      chan_ctxt_link
//      chan_ctxt_unlink
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
chan_switch_start_entry:
l2305B68E:
	word32 a5_112
	word32 a5_6 = Mem0[a3 + 32<i32>:word32]
	branch a3 != a0 l2305B6B6
l2305B6B6:
	a5_112 = Mem0[a3 + 36<i32>:word32]
	branch a3 != 0<32> l2305B6E8
l2305B6BA:
	Mem13[a0 + 36<i32>:word32] = a5_112
	word32 a4_19
	word32 s3_166
	word32 s2_165
	word32 a5_164
	word32 a3_163
	word32 a2_162
	word32 a1_161
	word32 s1_160
	word32 s4_167
	chan_upd_ctxt_status(ra, a0, 2<32>, mstatus, dwArgF8, out s1_160, out a1_161, out a2_162, out a3_163, out a4_19, out a5_164, out s2_165, out s3_166, out s4_167)
	word32 a0_34
	word32 s0_168
	word32 s1_169
	word32 a1_170
	word32 a2_171
	word32 a3_172
	word32 a4_173
	word32 a5_174
	word32 a6_175
	word32 s2_176
	word32 s3_177
	word32 s4_178
	word32 s8_179
	word32 ra_41 = ke_msg_alloc(ra, 96<i32>, 0<32>, 4<32>, a4_19, mstatus, dwArg08, out s0_168, out s1_169, out a0_34, out a1_170, out a2_171, out a3_172, out a4_173, out a5_174, out a6_175, out s2_176, out s3_177, out s4_178, out s8_179)
	Mem54[0x2305BCD8<32>:word32] = a0_34
l2305B6E4_thunk_ke_msg_send:
	word32 a1_58
	word32 a2_59
	word32 a3_60
	word32 a4_61
	word32 a5_62
	word32 s1_65
	word32 s2_66
	word32 s3_67
	word32 s4_68
	word32 a0_180
	word32 s8_181
	s0Out = ke_msg_send(a0_34, dwArg10, mstatus, out s1_65, out a0_180, out a1_58, out a2_59, out a3_60, out a4_61, out a5_62, out s2_66, out s3_67, out s4_68, out s8_181)
	s1Out = s1_65
	a1Out = a1_58
	a2Out = a2_59
	a3Out = a3_60
	a4Out = a4_61
	a5Out = a5_62
	s2Out = s2_66
	s3Out = s3_67
	s4Out = s4_68
	return ra_41
l2305B69C:
	a4 = CONVERT(Mem0[a5_6 + 114<i32>:byte], byte, word32)
	a5_112 = 1<32>
	branch a4 <=u 1<32> l2305B6E8
l2305B6A6:
	a4 = CONVERT(Mem0[a3 + 23<i32>:byte], byte, word32)
	a5_112 = 2<32>
	branch a4 >u 2<32> l2305B6E8
l2305B6E8:
	s0Out = s0
	s1Out = s1
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_112
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return ra
l2305B6B0:
l2305B6B2_thunk_chan_upd_ctxt_status:
	word32 a1_79
	word32 a2_80
	word32 a3_81
	word32 a4_82
	word32 a5_83
	word32 s1_86
	word32 s2_87
	word32 s3_88
	word32 s4_89
	s0Out = chan_upd_ctxt_status(ra, a0, 4<32>, mstatus, dwArg0108, out s1_86, out a1_79, out a2_80, out a3_81, out a4_82, out a5_83, out s2_87, out s3_88, out s4_89)
	s1Out = s1_86
	a1Out = a1_79
	a2Out = a2_80
	a3Out = a3_81
	a4Out = a4_82
	a5Out = a5_83
	s2Out = s2_87
	s3Out = s3_88
	s4Out = s4_89
	return ra
chan_switch_start_exit:


void chan_conn_less_delay_evt(word32 ra, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
chan_conn_less_delay_evt_entry:
l2305B6EA:
	word32 a0_22
	word32 a5_24
	word32 a5_10 = CONVERT(Mem9[0x4201E340<32>:byte], byte, word32)
	branch (a5_10 & 1<i32>) == 0<32> l2305B746
l2305B746:
	branch (a5_10 & 2<i32>) == 0<32> l2305B780
l2305B74C:
	branch (a5_10 & 8<32>) == 0<32> l2305B768
l2305B768:
	a5_24 = CONVERT(Mem9[0x4201E340<32>:byte], byte, word32) & 0xFFFFFFFD<32> | 8<i32>
	Mem25[0x4201E340<32>:byte] = SLICE(a5_24, byte, 0)
	a0_22 = 0x4201E298<32>
l2305B750:
	assert_err()
l2305B706:
	branch (a5_10 & 4<32>) == 0<32> l2305B722
l2305B722:
	a5_24 = CONVERT(Mem9[0x4201E340<32>:byte], byte, word32) & 0xFFFFFFFE<32> | 4<i32>
	Mem37[0x4201E340<32>:byte] = SLICE(a5_24, byte, 0)
	a0_22 = 0x4201E2B4<32>
l2305B738:
	branch a5_24 != 0<32> l2305B780
l2305B780:
	return
l2305B73C:
l2305B742_thunk_chan_switch_start:
	word32 s3_154
	word32 s4_155
	word32 a5_152
	word32 s2_153
	word32 a3_150
	word32 a4_151
	word32 a1_148
	word32 a2_149
	word32 s0_146
	word32 s1_147
	chan_switch_start(ra, a0_22, a3, mstatus, dwArg08, dwArg10, dwArgF8, dwArg0108, out s0_146, out s1_147, out a1_148, out a2_149, out a3_150, out a4_151, out a5_152, out s2_153, out s3_154, out s4_155)
	return
chan_conn_less_delay_evt_exit:
l2305B70A:
	assert_err()


word32 chan_tbtt_switch_evt(word32 ra, word32 a0, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArgF8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tbtt_schedule
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a1 a2 a3 a4 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
chan_tbtt_switch_evt_entry:
l2305B788:
	word32 s0_15 = 0x4201E000<32>
	word32 s3_16 = Mem13[0x44B00120<32>:int32]
	word32 a4_149 = CONVERT(Mem13[0x4201E342<32>:byte], byte, word32)
	branch a4_149 <=u 1<32> l2305B820
l2305B7AE:
	s0_15 = 0x4201E2D0<32>
	branch (CONVERT(Mem13[0x4201E340<32>:byte], byte, word32) & 0xC<32>) != 0<32> l2305B820
l2305B7BA:
	word32 a4_24 = CONVERT(Mem13[a0 + 8<i32>:byte], byte, word32)
	a3 = 1496<i32>
	a4_149 = a4_24 + 1496<i32>
	s2 = Mem13[a4_24 + 0x4201C310<32>:int32]
	s0_15 = Mem13[a4_24 + 0x4201C2F4<32>:word32]
	branch a4_24 == 0x4201C2D0<32> l2305B7DC
l2305B7D8:
	branch a4_24 + 0x4201C2D0<32> != s2 l2305B820
l2305B7DC:
	Mem33[a0 + 9<i32>:byte] = 0<8>
	word32 s0_35 = Mem33[a0 + 32<i32>:word32]
	word32 a5_192
	word32 a4_191
	a1 = chan_upd_nb_rem_slots.isra.3(a0 + 0x12<32>, s3_16, out a4_191, out a5_192)
	word32 a5_43 = CONVERT(Mem33[s2 + 20<i32>:uint16], uint16, word32)
	s1 = a0
	a3 = 0xA<32>
	a4_149 = a5_43
	branch a5_43 <=u 0xA<32> l2305B7FA
l2305B7F8:
	a4_149 = 0xA<32>
l2305B7FA:
	Mem51[s2 + 20<i32>:word16] = SLICE(a5_43 - a4_149, word16, 0)
	Mem54[s0_35 + 108<i32>:word32] = s3_16
	Mem57[a0 + 10<i32>:byte] = 2<8>
	s0_15 = Mem57[0x26<32>:word32]
	branch true l2305B820
l2305B820:
	s0Out = s0_15
	s1Out = s1
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4_149
	s2Out = s2
	s3Out = s3_16
	s4Out = dwArg04
	return ra
l2305B80E:
l2305B81C_thunk_chan_switch_start:
	word32 a1_84
	word32 a2_85
	word32 a3_86
	word32 a4_87
	word32 s0_90
	word32 s1_91
	word32 s2_92
	word32 s3_93
	word32 s4_94
	word32 a5_193
	word32 ra_89 = chan_switch_start(ra, s2, 0xA<32>, mstatus, dwArg08, dwArg10, dwArgF8, dwArg0108, out s0_90, out s1_91, out a1_84, out a2_85, out a3_86, out a4_87, out a5_193, out s2_92, out s3_93, out s4_94)
	s0Out = s0_90
	s1Out = s1_91
	a1Out = a1_84
	a2Out = a2_85
	a3Out = a3_86
	a4Out = a4_87
	s2Out = s2_92
	s3Out = s3_93
	s4Out = s4_94
	return ra_89
chan_tbtt_switch_evt_exit:


word32 chan_tbtt_schedule(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArgA8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tbtt_switch_update
//      chan_bcn_to_evt
//      chan_ctxt_unlink
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +00A8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0178:[0..31]
// LiveOut: a1 a2 a3 a4 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: sp
chan_tbtt_schedule_entry:
l2305B82E:
	word32 s1_107
	s1_107 = s1
	branch a0 != 0<32> l2305B862
l2305B862:
	s3 = 0x4201E000<32>
	word32 s10_37
	word32 s2_39
	word32 s7_44
	word32 s9_45
	word32 s3_372
	word32 s4_373
	word32 s5_374
	word32 s6_375
	word32 a5_104
	s1_107 = chan_tbtt_insert(a0, a3, a4, mstatus, dwArg0118, dwArg0178, out a0, out a1, out a3, out a4, out a5_104, out s2_39, out s3_372, out s4_373, out s5_374, out s6_375, out s7_44, out s9_45, out s10_37) + -776<i32>
	word32 s4_112 = 1496<i32>
	s2 = s2_39 + -2040<i32>
	word32 s5_113 = 432<i32>
	word32 s6_114 = 4<32>
l2305B884:
	branch a5_104 == 0<32> l2305B84A
l2305B888:
	word32 a5_69
	word32 a5_376
	word32 a5_66 = CONVERT(Mem55[co_list_pop_front(a4, a5_104, out a5_376) + 8<i32>:byte], byte, word32) + s4_112 + s1_107
	word32 a4_67 = CONVERT(Mem55[a5_66 + 86<i32>:byte], byte, word32)
	branch a4_67 != 0<32> l2305B8C6
l2305B8C6:
	a5_69 = CONVERT(Mem55[a5_66 + 830<i32>:uint16], uint16, word32) << 10<i32>
l2305B8A0:
	a5_69 = Mem55[CONVERT(Mem55[a5_66 + 96<i32>:byte], byte, word32) + s5_113 + s2 + 4<i32>:word32]
l2305B8AC:
	word32 a0_78 = Mem55[a4_67 + 4<i32>:word32]
	Mem81[a5_69 + a4_67 + 4<i32>:word32] = a0_78
	word32 a5_82 = CONVERT(Mem81[a0_78 + 9<i32>:byte], byte, word32)
	branch s6_114 <u a5_82 l2305B8C0
l2305B8BA:
	Mem86[a0_78 + 9<i32>:byte] = SLICE(a5_82 + 1<32>, byte, 0)
l2305B8C0:
	word32 s10_108
	word32 s7_115
	word32 s9_116
	s1_107 = chan_tbtt_insert(a0_78, a3, a4_67, mstatus, dwArg0118, dwArg0178, out a0, out a1, out a3, out a4, out a5_104, out s2, out s3, out s4_112, out s5_113, out s6_114, out s7_115, out s9_116, out s10_108)
l2305B84A:
	word32 s0_122 = Mem121[a0 + 16<i32>:word32]
	branch a0 != 0<32> l2305B8CE
l2305B8CE:
	branch CONVERT(Mem121[a0 + 10<i32>:byte], byte, word32) != 0<32> l2305B84E
l2305B8D4:
	word32 a4_125 = Mem121[0x44B00120<32>:int32]
	word32 a0_126 = Mem121[0x44B00004<32>:word32]
	branch 0x44B00000<32> - a4_125 >= 0xFFFFF830<32> l2305B8FE
l2305B8FE:
	Mem129[a0_126 + 48<i32>:word32] = s0_122
	Mem131[a0_126 + 10<i32>:byte] = 1<8>
	0<32> = dwArgA8
l2305B922_thunk_mm_timer_set:
	word32 a1_153
	word32 a2_154
	word32 a3_155
	word32 a4_156
	word32 s1_160
	word32 s2_161
	word32 s3_162
	word32 s4_163
	word32 a0_377
	word32 a5_378
	word32 s8_379
	s0Out = mm_timer_set(ra, 0x4201E2F8<32>, a1, a4_125, mstatus, dwArg0108, out s1_160, out a0_377, out a1_153, out a2_154, out a3_155, out a4_156, out a5_378, out s2_161, out s3_162, out s4_163, out s8_379)
	s1Out = s1_160
	a1Out = a1_153
	a2Out = a2_154
	a3Out = a3_155
	a4Out = a4_156
	s2Out = s2_161
	s3Out = s3_162
	s4Out = s4_163
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s9Out = <invalid>
	s10Out = <invalid>
	return ra
l2305B8E8:
	0<32> = dwArgA8
l2305B8FA_thunk_chan_tbtt_switch_evt:
	word32 a2_175
	word32 a4_176
	word32 s0_179
	word32 s3_180
	word32 s4_181
	word32 a1_185
	word32 a3_186
	word32 s1_187
	word32 s2_188
	word32 ra_189 = chan_tbtt_switch_evt(ra, a0_126, mstatus, dwArg08, dwArg10, dwArgF8, dwArg0108, out s0_179, out s1_187, out a1_185, out a2_175, out a3_186, out a4_176, out s2_188, out s3_180, out s4_181)
	s0Out = s0_179
	s1Out = s1_187
	a1Out = a1_185
	a2Out = a2_175
	a3Out = a3_186
	a4Out = a4_176
	s2Out = s2_188
	s3Out = s3_180
	s4Out = s4_181
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s9Out = <invalid>
	s10Out = <invalid>
	return ra_189
l2305B84E:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_107
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s9Out = <invalid>
	s10Out = <invalid>
	return ra
chan_tbtt_schedule_exit:


word32 chan_cde_evt(word32 ra, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tx_cfm
//      chan_ctxt_op_evt
//      chan_ctxt_link
//      chan_ctxt_unlink
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a1 a3 a4 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
chan_cde_evt_entry:
l2305B926:
	word32 s1_276
	word32 s2_17 = 0x4201E000<32>
	word32 s3_18 = Mem15[0x44B00120<32>:int32]
	word32 a4_20 = CONVERT(Mem15[0x4201E342<32>:byte], byte, word32)
	s1_276 = s1
	branch a4_20 <=u 1<32> l2305BAD4
l2305B94E:
	s2_17 = 0x4201E2D0<32>
	s1_276 = s1
	branch (CONVERT(Mem15[0x4201E340<32>:byte], byte, word32) & 44<i32>) != 0<32> l2305BAD4
l2305B95E:
	word32 a2_34
	word32 s2_41
	word32 s3_42
	word32 s8_626
	word32 s4_625
	word32 a5_624
	word32 a0_620
	word32 a3_622
	word32 a4_623
	word32 a1_621
	word32 s1_244
	word32 s0_315 = mm_timer_set(ra, 0x4201E308<32>, Mem15[0x4201E338<32>:int32] + s3_18, a4_20, mstatus, dwArgE8, out s1_244, out a0_620, out a1_621, out a2_34, out a3_622, out a4_623, out a5_624, out s2_41, out s3_42, out s4_625, out s8_626)
	word32 a5_49 = Mem15[0x4201C8B0<32>:word32]
	Mem51[s2_41 + 108<i32>:word32] = s3_42
	s3_18 = 0<32>
l2305B992:
	branch a5_49 != 0<32> l2305BA24
l2305BA24:
	word32 a5_59 = Mem58[a2_34 + 64<i32>:word32]
	branch a2_34 == 0<32> l2305BA54
l2305BA28:
	s0_315 = s0_315 + 1<32> & 255<i32>
	branch (CONVERT(Mem58[CONVERT(Mem58[a5_59 + 87<i32>:byte], byte, word32) + 0x4201BC8D<32>:byte], byte, word32) & 3<32>) != 0<32> l2305BA46
l2305BA40:
	branch CONVERT(Mem58[a5_59 + 88<i32>:byte], byte, word32) != 0<32> l2305BA4C
l2305BA46:
	s3_18 = s3_18 + 1<32> & 255<i32>
l2305BA4C:
	Mem77[a2_34 + 16<i32>:word16] = 0<16>
	Mem78[a2_34 + 20<i32>:word16] = 0<16>
l2305BA54:
	a5_49 = Mem82[a5_59:word32]
l2305B994:
	branch s0_315 == Mem58[s2_41 + 104<i32>:int32] >>u 0xCFFF800<32> l2305B9BE
l2305B9A6:
	assert_warn()
l2305B9BE:
	word32 s0_107
	branch s3_18 == 0<32> l2305BA58
l2305B9C2:
	branch s0_315 == s3_18 l2305BA58
l2305BA58:
	s0_107 = 0<32>
	a1 = 50<i32>
l2305B9C6:
	a1 = 0xA<32>
	s0_107 = CONVERT(SLICE(s0_315 - s3_18 + 40<i32>, word16, 0), word16, word32) ^ s3_18
l2305B9DC:
	word32 a4_118 = Mem58[0x4201C8B0<32>:int32]
	word32 s0_127 = s0_107 + 50<i32>
l2305B9FE:
	branch a4_118 != 0<32> l2305BA60
l2305BA60:
	word32 a4_131 = Mem130[0x4201BC88<32>:word32]
	branch false l2305BABE
l2305BA64:
	word32 a5_142
	word32 a2_138 = CONVERT(Mem130[CONVERT(Mem130[a4_131 + 87<i32>:byte], byte, word32) + 0x4201BC8D<32>:byte], byte, word32)
	word32 a5_133 = CONVERT(Mem130[0x4201BC58<32>:uint16], uint16, word32)
	word32 a2_139 = a2_138 & 3<32>
	branch (a2_138 & 3<32>) != 0<32> l2305BA80
l2305BA7A:
	a2_139 = CONVERT(Mem130[a4_131 + 88<i32>:byte], byte, word32)
	branch a2_139 != 0<32> l2305BAC2
l2305BAC2:
	a5_142 = a5_133 + a1
l2305BA80:
	a5_142 = a5_133 + s0_127
l2305BA82:
	word32 a5_148 = a5_142 << 16<i32>
	Mem152[0x4201BC58<32>:word16] = SLICE(a5_148 >>u 16<i32>, word16, 0)
	Mem153[0x4201BC5A<32>:word16] = SLICE(a5_148 >>u 16<i32>, word16, 0)
	branch CONVERT(Mem153[a4_131 + 86<i32>:byte], byte, word32) != 0<32> l2305BAC6
l2305BAC6:
	a2_139 = CONVERT(Mem153[a4_131 + 830<i32>:uint16], uint16, word32) << 0xA<u32>
l2305BA94:
l2305BAA0:
	word32 a5_174 = Mem153[s2_41 + 104<i32>:int32] >>u a2_139
	branch a5_174 != 0<32> l2305BAAC
l2305BAAA:
	a5_174 = 1<32>
l2305BAAC:
	Mem189[0x4201BC5C<32>:word16] = SLICE((a5_174 & 255<i32>) + 0xA<32> + CONVERT(Mem153[0x4201BC5C<32>:uint16], uint16, word32), word16, 0)
l2305BABE:
	a4_118 = Mem193[a4_131:word32]
l2305BA00:
	word32 a0_195 = Mem130[s2_41 + 32<i32>:int32]
	branch a0_195 == 0<32> l2305BA0C
l2305BA06:
	word32 a3_629
	word32 a2_628
	word32 a5_630
	word32 s2_631
	word32 s4_632
	s0_127 = chan_upd_ctxt_status(ra, a0_195, 1<32>, mstatus, dwArgE8, out s1_244, out a1, out a2_628, out a3_629, out a4_118, out a5_630, out s2_631, out s3_18, out s4_632)
l2305BA0C:
	word32 a5_627
	word32 a0_269
	s1_276 = chan_get_next_chan(s0_127, s1_244, a4_118, dwArg18, out a0_269, out a3, out a4_20, out a5_627, out s2_17)
	branch s1_276 != 0<32> l2305BAD0
l2305BAD0:
	Mem277[s2_17 + 36<i32>:word32] = a0_269
l2305BAD4:
	s0Out = s1
	s1Out = s1_276
	a1Out = a1
	a3Out = a3
	a4Out = a4_20
	s2Out = s2_17
	s3Out = s3_18
	return ra
l2305BA12:
l2305BA20_thunk_chan_switch_start:
	word32 a2_633
	word32 a1_298
	word32 a3_300
	word32 a4_301
	word32 s0_304
	word32 s1_305
	word32 s2_306
	word32 s3_307
	word32 a5_634
	word32 s4_635
	word32 ra_303 = chan_switch_start(ra, a0_269, a3, mstatus, dwArg08, dwArg10, dwArgF8, dwArg0108, out s0_304, out s1_305, out a1_298, out a2_633, out a3_300, out a4_301, out a5_634, out s2_306, out s3_307, out s4_635)
	s0Out = s0_304
	s1Out = s1_305
	a1Out = a1_298
	a3Out = a3_300
	a4Out = a4_301
	s2Out = s2_306
	s3Out = s3_307
	return ra_303
chan_cde_evt_exit:


void chan_pre_switch_channel(word32 ra, word32 a4, word32 s2, word32 s3, word32 s4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg8C, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_goto_idle_cb
//      chan_tx_cfm
// MayUse:  a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s11 sp
chan_pre_switch_channel_entry:
l2305BAE4:
	word32 a1_891
	word32 a2_892
	word32 a3_893
	word32 a5_894
	word32 a4_30
	word32 s1_27 = mm_timer_clear(0x4201E318<32>, a4, mstatus, out a1_891, out a2_892, out a3_893, out a4_30, out a5_894)
	word32 s0_33 = 0x4201E2D0<32>
	branch (CONVERT(Mem20[0x4201E340<32>:byte], byte, word32) & 32<i32>) == 0<32> l2305BB38
l2305BB16:
	word32 a5_35 = CONVERT(Mem20[0x4201E342<32>:byte], byte, word32)
	a4_30 = 1<32>
	branch a5_35 <=u 1<32> l2305BB2C
l2305BB20:
	s0_33 = Mem20[a5_35 + 36<i32>:word32]
	branch a5_35 == 0<32> l2305BB2C
l2305BB24:
	Mem38[a5_35 + 22<i32>:byte] = 1<8>
	Mem39[s0_33 + 36<i32>:word32] = 0<32>
l2305BB2C:
	Mem44[s0_33 + 112<i32>:byte] = SLICE(CONVERT(Mem41[s0_33 + 112<i32>:byte], byte, word32) & -33<i32>, byte, 0)
l2305BB38:
	word32 a5_53
	word32 a5_47 = CONVERT(Mem46[s0_33 + 112<i32>:byte], byte, word32)
	word32 s0_50 = Mem46[a4_30 + 36<i32>:word32]
	branch (a5_47 & 8<i32>) != 0<32> l2305BB5C
l2305BB5C:
	a5_53 = 0x4201E298<32>
l2305BB44:
	branch (a5_47 & 4<32>) == 0<32> l2305BB66
l2305BB66:
	branch a4_30 != 0<32> l2305BB78
l2305BB68:
	word32 a4_55 = CONVERT(Mem46[s0_50 + 114<i32>:byte], byte, word32)
	a5_53 = 1<32>
	branch a4_55 <=u 1<32> l2305BC14
l2305BC14:
	branch a4_55 != 1<32> l2305BB78
l2305BC18:
	s0_50 = Mem46[9<32>:word32]
l2305BB72:
	word32 a1_925
	word32 a3_926
	word32 s2_928
	word32 a4_927
	word32 s0_924
	ra = chan_cde_evt(ra, mstatus, s2, dwLoc10, dwLoc08, dwArgC8, dwArgD8, dwArgE8, out s0_924, out s1_27, out a1_925, out a3_926, out a4_927, out s2_928, out s3)
l2305BB48:
	a5_53 = 0x4201E2B4<32>
l2305BB50:
	branch a4_30 == 0<32> l2305BB58
l2305BB52:
	Mem88[a4_30 + 22<i32>:byte] = 1<8>
l2305BB58:
	Mem93[a5_53 + 36<i32>:word32] = s0_50
l2305BB78:
	branch s1_27 == 0<32> l2305BCC6
l2305BCC6:
	return
l2305BB7E:
	word32 a4_228
	word32 fflags_147
	word32 frm_148
	word32 s0_150
	word32 s1_151
	word32 s2_153
	word32 s3_896
	word32 a2_895
	word32 ra_149 = phy_set_channel(ra, CONVERT(Mem99[s1_27 + 4<i32>:byte], byte, word32), CONVERT(Mem99[s1_27 + 5<i32>:byte], byte, word32), CONVERT(Mem99[s1_27 + 8<i32>:uint16], uint16, word32), s3, fflags, frm, s4, dwArg04, dwArg0138, out s0_150, out s1_151, out a2_895, out s2_153, out s3_896, out fflags_147, out frm_148)
	word32 a5_899
	word32 a4_898
	word32 a3_897
	tpc_update_tx_power(ra_149, fflags_147, frm_148, out a3_897, out a4_898, out a5_899)
	Mem181[s2_153 + 220<i32>:word32] = 0x10<32>
	Mem184[s1_151 + 32<i32>:word32] = s0_150
	Mem185[s0_150 + 36<i32>:word32] = 0<32>
	word32 s2_198
	word32 s4_906
	word32 a5_904
	word32 s3_905
	word32 a1_900
	word32 a2_901
	word32 a3_902
	word32 a4_903
	word32 s1_197
	word32 s0_196 = chan_upd_ctxt_status(ra_149, s1_151, 4<32>, mstatus, dwArgE8, out s1_197, out a1_900, out a2_901, out a3_902, out a4_903, out a5_904, out s2_198, out s3_905, out s4_906)
	word32 a5_204 = CONVERT(Mem185[s1_197 + 23<i32>:byte], byte, word32)
	branch a5_204 == 3<32> l2305BCB2
l2305BCB2:
	Mem206[s2_198 + 544<i32>:word32] = 0<32>
	word32 s2_920
	word32 s3_921
	word32 s4_922
	word32 s8_923
	word32 a0_917
	word32 a2_918
	word32 a3_919
	ke_msg_send_basic(ra_149, 97<i32>, 2<32>, 3<32>, mstatus, s2, dwLoc10, out s0_196, out s1_197, out a0_917, out a2_918, out a3_919, out s2_920, out s3_921, out s4_922, out s8_923)
l2305BBC2:
	a4_228 = 4<32>
	branch a5_204 == 4<32> l2305BBE6
l2305BBC8:
	branch CONVERT(Mem185[0x4201A7B8<32>:byte], byte, word32) == 0<32> l2305BC1C
l2305BBD6:
	branch (Mem185[0x4201A7BC<32>:word32] & 8<32>) != 0<32> l2305BC1C
l2305BC1C:
	word32 s2_237 = Mem185[0x4201C8B0<32>:int32]
	word32 s3_239 = Mem185[s0_196 + 32<i32>:int32]
	word32 a5_908
	blmac_pwr_mgt_setf(0<32>, out a5_908)
l2305BC2E:
	branch s2_237 == 0<32> l2305BBDC
l2305BC32:
	branch s3_239 != Mem185[s2_237 + 64<i32>:int32] l2305BC52
l2305BC3A:
	branch CONVERT(Mem185[s2_237 + 86<i32>:byte], byte, word32) != 0<32> l2305BC52
l2305BC40:
	branch CONVERT(Mem185[s2_237 + 88<i32>:byte], byte, word32) == 0<32> l2305BC52
l2305BC46:
	word32 s6_915
	word32 s7_916
	word32 s5_914
	word32 a5_912
	word32 s4_913
	word32 a0_909
	word32 a3_910
	word32 a4_911
	ra_149 = txl_frame_send_null_frame(ra_149, CONVERT(Mem185[s2_237 + 96<i32>:byte], byte, word32), 0<32>, fflags_147, frm_148, mstatus, dwArg28, dwArg58, dwArg8C, dwArgA8, dwArgC8, dwArgE8, dwArg0178, out s0_196, out s1_197, out a0_909, out a3_910, out a4_911, out a5_912, out s2_237, out s3_239, out s4_913, out s5_914, out s6_915, out s7_916)
l2305BC52:
	s2_237 = Mem185[s2_237:int32]
l2305BBDC:
	a4_228 = CONVERT(Mem185[s1_197 + 23<i32>:byte], byte, word32)
	branch a4_228 <=u 2<32> l2305BC58
l2305BC58:
	word32 s2_296 = Mem185[0x4201C8B0<32>:int32]
	word32 s3_298 = 0x4201BC48<32>
	word32 s4_299 = 36<i32>
	word32 s5_300 = 1<32>
l2305BC6E:
	branch s2_296 != 0<32> l2305BC90
l2305BC90:
	branch s1_197 != Mem302[s2_296 + 64<i32>:int32] l2305BCAC
l2305BC98:
	Mem312[CONVERT(Mem302[s2_296 + 87<i32>:byte], byte, word32) + s4_299 + s3_298 + 35<i32>:byte] = SLICE(s5_300, byte, 0)
	ra_149 = vif_mgmt_send_postponed_frame(ra_149, s2_296, s5_300, mstatus, dwArg48, dwArg58, dwArg8C, dwArgF8, out s1_197, out s2_296, out s3_298, out s4_299, out s5_300)
l2305BCAC:
	s2_296 = Mem340[s2_296:int32]
l2305BC72:
	a4_228 = CONVERT(Mem343[s1_197 + 23<i32>:byte], byte, word32)
	branch a4_228 >u 2<32> l2305BBE6
l2305BBE6:
	__csrrc(mstatus, 8<32>)
	Mem354[(a4_228 | 2<i32>) + 4<i32>:word32] = Mem351[a4_228 + 4<i32>:word32]
	__csrrs(mstatus, 8<32>)
	Mem367[s0_196 + 115<i32>:byte] = SLICE(Mem354[0x44B0004C<32>:word32] >>u 2<i32> & 1<32>, byte, 0)
	word32 a5_907
	blmac_pwr_mgt_setf(0<32>, out a5_907)
l2305BC7C:
l2305BC8C_thunk_mm_active:
	mm_active()
	return
chan_pre_switch_channel_exit:


void chan_goto_idle_cb(word32 ra, word32 a4, word32 s5, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg28, word32 dwArg3C, word32 dwArg48, word32 dwArg78, word32 dwArg7C, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
chan_goto_idle_cb_entry:
l2305BCD8:
	word32 s1_35
	word32 s2_475
	word32 s4_476
	word32 s3_104
	word32 a4_151
	word32 ra_116 = mm_force_idle_req(ra, a4, mstatus, dwLoc18, dwLoc10, dwLoc0C, dwArg18, dwArg3C, dwArgD8, dwArgE8, out s1_35, out a4_151, out s2_475, out s3_104, out s4_476)
	word32 s2_103 = Mem21[s1_35 + 752<i32>:int32]
	branch s2_103 == 0<32> l2305BDA2
l2305BD00:
	word32 s1_102 = s1_35 + 720<i32>
	branch (CONVERT(Mem21[s1_35 + 832<i32>:byte], byte, word32) & 32<i32>) != 0<32> l2305BDA2
l2305BD0E:
	a4_151 = CONVERT(Mem21[0x4201A7B8<32>:byte], byte, word32)
	branch a4_151 == 0<32> l2305BD22
l2305BD1C:
	branch (Mem21[0x4201A7BC<32>:word32] & 8<32>) == 0<32> l2305BDA2
l2305BD22:
	word32 s0_128 = Mem21[0x4201C8B0<32>:int32]
	s3_104 = 0<32>
	word32 a5_224
	word32 a0_191 = blmac_pwr_mgt_setf(1<32>, out a5_224)
	word32 s4_105 = 255<i32>
	word32 s5_106 = 6<32>
	word32 s6_107 = 0x2305C000<32>
l2305BD3C:
	branch s0_128 != 0<32> l2305BD66
l2305BD66:
	word32 s0_101 = Mem74[a5_224 + 64<i32>:word32]
	branch s2_103 != a5_224 l2305BD9E
l2305BD6C:
	a5_224 = CONVERT(Mem74[s0_101 + 86<i32>:byte], byte, word32)
	branch a5_224 != 0<32> l2305BD9E
l2305BD72:
	a5_224 = CONVERT(Mem74[s0_101 + 88<i32>:byte], byte, word32)
	branch a5_224 == 0<32> l2305BD9E
l2305BD78:
	a5_224 = CONVERT(Mem74[s0_101 + 96<i32>:byte], byte, word32)
	branch a5_224 == s4_105 l2305BD9E
l2305BD80:
	Mem83[s2_103 + 22<i32>:byte] = SLICE(s5_106, byte, 0)
	word32 s7_119
	word32 a3_486
	ra_116 = txl_frame_send_null_frame(ra_116, CONVERT(Mem83[s0_101 + 96<i32>:byte], byte, word32), s6_107 + -582<i32>, fflags, frm, mstatus, dwArg18, dwArg48, dwArg7C, dwArg98, dwArgB8, dwArgD8, dwArg0168, out s0_101, out s1_102, out a0_191, out a3_486, out a4_151, out a5_224, out s2_103, out s3_104, out s4_105, out s5_106, out s6_107, out s7_119)
	branch a0_191 != 0<32> l2305BD9A
l2305BD98:
	s3_104 = s3_104 + 1<32>
l2305BD9A:
	Mem124[s2_103 + 22<i32>:byte] = SLICE(s7_119, byte, 0)
l2305BD9E:
	s0_128 = Mem127[s0_101:word32]
l2305BD3E:
	Mem136[s1_102 + 113<i32>:byte] = SLICE(s3_104, byte, 0)
	branch s3_104 == 0<32> l2305BDA2
l2305BDA2:
	0<32> = dwArg0128
l2305BDB6_thunk_chan_pre_switch_channel:
	chan_pre_switch_channel(ra_116, a4_151, s2_103, s3_104, dwArg78, fflags, frm, mstatus, dwArg04, dwArg28, dwArg48, s5, dwArg8C, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, dwArg0178)
	return
l2305BD46:
	word32 a1_478
	word32 s1_477
	word32 a3_480
	word32 a2_479
	word32 a5_482
	word32 s2_483
	word32 s4_485
	word32 s3_484
	word32 a4_481
	chan_upd_ctxt_status(ra_116, a0_191, 3<32>, mstatus, dwArgD8, out s1_477, out a1_478, out a2_479, out a3_480, out a4_481, out a5_482, out s2_483, out s3_484, out s4_485)
	0<32> = dwArg0128
l2305BD62_thunk_mm_active:
	mm_active()
	return
chan_goto_idle_cb_exit:


void chan_tx_cfm(word32 ra, word32 a4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg8C, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
chan_tx_cfm_entry:
l2305BDBA:
	branch CONVERT(Mem9[0x4201E341<32>:byte], byte, word32) != 0<32> l2305BDEA
l2305BDEA:
	word32 a5_19 = CONVERT(Mem9[0x4201E341<32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem20[0x4201E341<32>:byte] = SLICE(a5_19, byte, 0)
	branch a5_19 != 0<32> l2305BE08
l2305BE08:
	return
l2305BDFA:
	word32 a4_30
	word32 s2_39
	word32 s3_40
	word32 s4_41
	word32 s1_163
	word32 ra_34 = mm_force_idle_req(ra, a4, mstatus, dwArg08, dwArg10, dwArg14, dwArg38, dwArg5C, dwArgF8, dwArg0108, out s1_163, out a4_30, out s2_39, out s3_40, out s4_41)
l2305BE04_thunk_chan_pre_switch_channel:
	chan_pre_switch_channel(ra_34, a4_30, s2_39, s3_40, s4_41, fflags, frm, mstatus, dwArg04, dwArg28, dwArg48, dwArg58, dwArg8C, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, dwArg0178)
	return
chan_tx_cfm_exit:
l2305BDD2:
	assert_err()


word32 chan_ctxt_op_evt(word32 ra, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArg28, word32 dwArg4C, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_roc_req
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: ra s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
chan_ctxt_op_evt_entry:
l2305BE10:
	word32 s2_15 = CONVERT(Mem13[a0 + 22<i32>:byte], byte, word32)
	branch s2_15 <u 2<32> l2305BE32
l2305BE26:
	branch s2_15 <=u 3<32> l2305BE40
l2305BE40:
	Mem22[0x4201E340<32>:byte] = SLICE(CONVERT(Mem13[0x4201E340<32>:byte], byte, word32) | 32<i32>, byte, 0)
l2305BE2C:
	branch s2_15 == 4<32> l2305BE56
l2305BE56:
	word32 a0_181
	word32 a4_24 = CONVERT(Mem13[a0 + 23<i32>:byte], byte, word32)
	word32 s1_204 = a0
	word32 s0_102 = 0x4201E2D0<32>
	branch a4_24 >u 2<32> l2305BEAA
l2305BEAA:
	__csrrc(mstatus, 8<32>)
	Mem32[(a4_24 & 0xFFFFFFFD<32>) + 4<i32>:word32] = Mem13[a4_24 + 4<i32>:word32]
	__csrrs(mstatus, 8<32>)
	word32 a5_439
	a0_181 = blmac_pwr_mgt_setf(CONVERT(Mem32[0x4201E343<32>:byte], byte, word32), out a5_439)
	Mem37[0x4201E2F0<32>:word32] = 0<32>
	word32 a5_38 = CONVERT(Mem37[a0 + 23<i32>:byte], byte, word32)
	branch a5_38 != 3<32> l2305BF0E
l2305BF0E:
	branch a5_38 != s2_15 l2305BEEC
l2305BF12:
	branch CONVERT(Mem37[a0 + 14<i32>:uint16], uint16, word32) != 0<32> l2305BF24
l2305BF18:
	Mem42[0x4201E340<32>:byte] = SLICE(CONVERT(Mem37[0x4201E340<32>:byte], byte, word32) & -65<i32>, byte, 0)
l2305BF24:
	Mem47[0x4201E340<32>:byte] = SLICE(CONVERT(Mem44[0x4201E340<32>:byte], byte, word32) & 0xFFFFFFFB<32>, byte, 0)
l2305BED4:
	Mem53[0x4201E340<32>:byte] = SLICE(CONVERT(Mem37[0x4201E340<32>:byte], byte, word32) & 0xFFFFFFF7<32>, byte, 0)
	word32 s8_452
	word32 s4_451
	word32 a2_448
	word32 s2_449
	word32 s3_450
	ra = ke_msg_send_basic(ra, 98<i32>, 2<32>, a4_24 & 0xFFFFFFFD<32>, mstatus, s2, dwLoc10, out s0_102, out s1_204, out a0_181, out a2_448, out a3, out s2_449, out s3_450, out s4_451, out s8_452)
l2305BEEC:
	Mem75[s1_204 + 23<i32>:byte] = 0xFF<8>
	word32 a5_77 = CONVERT(Mem75[s0_102 + 112<i32>:byte], byte, word32)
	branch (a5_77 & 3<i32>) == 0<32> l2305BF30
l2305BF30:
	Mem80[s0_102 + 112<i32>:byte] = SLICE(a5_77 & 0xFFFFFFEF<32>, byte, 0)
l2305BEFC:
	word32 a4_454
	word32 a1_453
	s0_102 = chan_conn_less_delay_prog(ra, mstatus, dwArgE8, out a0_181, out a1_453, out a3, out a4_454)
l2305BF00:
	word32 a4_104 = CONVERT(Mem103[s0_102 + 114<i32>:byte], byte, word32)
	branch a4_104 != 1<32> l2305BF38
l2305BF38:
	branch a4_104 <=u 1<32> l2305BF4E
l2305BF4E:
	word32 s4_463
	word32 a4_460
	word32 s2_461
	word32 s3_462
	word32 s1_459
	word32 ra_117 = mm_force_idle_req(ra, a4_104, mstatus, dwLoc08, dwArg00, dwArg04, dwArg28, dwArg4C, dwArgE8, dwArgF8, out s1_459, out a4_460, out s2_461, out s3_462, out s4_463)
l2305BF5E_thunk_mm_back_to_host_idle:
	word32 s2_149
	s0Out = mm_back_to_host_idle(mstatus, dwArg28, out s2_149)
	s2Out = s2_149
	return ra_117
l2305BF3C:
l2305BF4A_thunk_chan_cde_evt:
	word32 a1_465
	word32 a4_467
	word32 s3_468
	word32 s0_166
	word32 s2_167
	word32 s1_464
	word32 a3_466
	word32 ra_176 = chan_cde_evt(ra, mstatus, dwArg08, dwArg10, dwArg18, dwArgE8, dwArgF8, dwArg0108, out s0_166, out s1_464, out a1_465, out a3_466, out a4_467, out s2_167, out s3_468)
	s0Out = s0_166
	s2Out = s2_167
	return ra_176
l2305BF0A:
l2305BE68:
	Mem186[a0 + 22<i32>:byte] = 1<8>
	word32 a4_187 = CONVERT(Mem186[0x4201E342<32>:byte], byte, word32)
	branch a4_187 != 1<32> l2305BE8A
l2305BE8A:
	branch a4_187 <=u 1<32> l2305BE78
l2305BE8E:
	word32 s2_189 = Mem186[0x44B00120<32>:int32]
	word32 a4_193
	word32 a5_455
	chan_upd_nb_rem_slots.isra.3(a0 + 0x12<32>, s2_189, out a4_193, out a5_455)
	Mem195[0x4201E33C<32>:word32] = s2_189
	word32 a0_196
	word32 s2_458
	word32 a5_457
	word32 a4_456
	chan_get_next_chan(0x4201E2D0<32>, a0, a4_193, dwArg18, out a0_196, out a3, out a4_456, out a5_457, out s2_458)
	s1_204 = a0_196
l2305BE76:
l2305BE78:
	a0_181 = s1_204
l2305BE7A:
l2305BE86_thunk_chan_switch_start:
	word32 s0_237
	word32 s2_239
	word32 s3_446
	word32 s4_447
	word32 a5_445
	word32 a4_444
	word32 a3_443
	word32 s1_440
	word32 a1_441
	word32 a2_442
	word32 ra_236 = chan_switch_start(ra, a0_181, a3, mstatus, dwArg08, dwArg10, dwArgF8, dwArg0108, out s0_237, out s1_440, out a1_441, out a2_442, out a3_443, out a4_444, out a5_445, out s2_239, out s3_446, out s4_447)
	s0Out = s0_237
	s2Out = s2_239
	return ra_236
l2305BE32:
	s0Out = s0
	s2Out = s2_15
	return ra
chan_ctxt_op_evt_exit:


word32 chan_init(word32 ra, word32 dwArg0128, ptr32 & s0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_init
// MayUse:  ra:[0..31] Stack +0128:[0..31]
// LiveOut: ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
chan_init_entry:
l2305BF62:
	word32 s1_29 = 0x4201E244<32>
	word32 a4_164
	word32 a5_165
	word32 a2_162
	word32 a3_163
	word32 a1_161
	word32 a0_160
	word32 t1_159
	word32 ra_36 = memset(ra, 0x4201E2D0<32>, 0<32>, 116<i32>, out t1_159, out a0_160, out a1_161, out a2_162, out a3_163, out a4_164, out a5_165)
	word32 s2_39 = 0<32>
l2305BFA4:
	word32 a5_56
	word32 a3_171
	word32 a2_170
	word32 a4_172
	word32 a0_168
	word32 a1_169
	word32 t1_167
	ra_36 = memset(ra_36, s1_29, 0<32>, 0x1C<32>, out t1_167, out a0_168, out a1_169, out a2_170, out a3_171, out a4_172, out a5_56)
	Mem61[s1_29 + 14<i32>:word16] = 0xFF<16>
	Mem63[s1_29 + 23<i32>:byte] = 0xFF<8>
	branch s2_39 > 2<32> l2305C014
l2305C014:
	branch s2_39 != 3<32> l2305BFC4
l2305C018:
	Mem68[0x4201E2A2<32>:word16] = 0<16>
	Mem69[0x4201E29D<32>:byte] = 0<8>
l2305BFBA:
	word32 a2_166
	s1_29 = co_list_push_back(s1_29, a5_56, out a2_166)
l2305BFC4:
	s2_39 = s2_39 + 1<32>
	s1_29 = s1_29 + 0x1C<32>
	branch s2_39 != 5<32> l2305BFA4
l2305BFCC:
	Mem86[0x2305B7B4<32>:word32] = 0x4201E2D0<32>
	Mem89[0x2305B962<32>:word32] = 0x4201E2D0<32>
	Mem92[0x2305BE5C<32>:word32] = 0x4201E2D0<32>
	Mem95[0x4201E310<32>:word32] = 0<32>
	Mem96[0x2305B746<32>:word32] = 0x4201E2D0<32>
	0<32> = dwArg0128
	s0Out = s4
	return ra_36
chan_init_exit:


word32 chan_scan_req(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg0108, word32 dwArg0128, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scan_set_channel_request
// MayUse:  a0:[0..7] a1:[0..15] a2:[0..7] a3:[0..15] a4:[0..7] mstatus:[0..31] ra:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a1 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
chan_scan_req_entry:
l2305C022:
	branch CONVERT(Mem15[0x4201E2AF<32>:byte], byte, word32) == 255<i32> l2305C06E
l2305C06E:
	Mem36[0x4201E2B1<32>:byte] = SLICE(a4, byte, 0)
	Mem39[0x4201E2A6<32>:word16] = 0xFF<16>
	Mem41[0x4201E2AE<32>:word16] = 0x301<16>
	word32 a5_42 = CONVERT(Mem41[0x4201E340<32>:byte], byte, word32)
	Mem44[0x4201E2AA<32>:word16] = SLICE(a3 >>u 10<i32>, word16, 0)
	Mem46[0x4201E29C<32>:byte] = SLICE(a0, byte, 0)
	Mem47[0x4201E2A0<32>:word16] = SLICE(a1, word16, 0)
	Mem48[0x4201E29E<32>:word16] = SLICE(a1, word16, 0)
	Mem49[0x4201E2A4<32>:byte] = SLICE(a2, byte, 0)
	Mem50[0x4201E340<32>:byte] = SLICE(a5_42 | 2<i32>, byte, 0)
	branch (a5_42 & 0x10<32>) != 0<32> l2305C0C0
l2305C0C0:
	0<32> = dwArg0128
	a1Out = a1
	return dwArgE4
l2305C0B0:
	0<32> = dwArg0128
l2305C0BC_thunk_chan_conn_less_delay_prog:
	word32 a1_64
	word32 a0_111
	word32 a3_112
	word32 a4_113
	word32 s0_70 = chan_conn_less_delay_prog(ra, mstatus, dwArg0108, out a0_111, out a1_64, out a3_112, out a4_113)
	a1Out = a1_64
	return s0_70
chan_scan_req_exit:
l2305C04C:
	assert_err()


word32 chan_roc_req(word32 ra, word32 s0, word32 a0, word32 a1, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_remain_on_channel_req_handler
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31]
// LiveOut: a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
chan_roc_req_entry:
l2305C0CE:
	word32 s1_13 = CONVERT(Mem11[a0:byte], byte, word32)
	branch s1_13 == 0<32> l2305C0E8
l2305C0E8:
	word32 a3_16 = CONVERT(Mem11[0x4201E2CB<32>:byte], byte, word32)
	a4 = 255<i32>
	branch a3_16 != 255<i32> l2305C0E4
l2305C0FC:
	Mem19[0x4201E2CB<32>:byte] = 4<8>
	Mem21[0x4201E2B8<32>:byte] = SLICE(CONVERT(Mem19[a0 + 2<i32>:byte], byte, word32), byte, 0)
	Mem23[0x4201E2B9<32>:byte] = SLICE(CONVERT(Mem21[a0 + 3<i32>:byte], byte, word32), byte, 0)
	Mem25[0x4201E2BA<32>:word16] = SLICE(CONVERT(Mem23[a0 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem27[0x4201E2BC<32>:word16] = SLICE(CONVERT(Mem25[a0 + 6<i32>:uint16], uint16, word32), word16, 0)
	word32 a4_28 = CONVERT(Mem27[a0 + 8<i32>:uint16], uint16, word32)
	Mem30[0x4201E2C2<32>:word16] = SLICE(a1, word16, 0)
	Mem31[0x4201E2BE<32>:word16] = SLICE(a4_28, word16, 0)
	Mem33[0x4201E2CA<32>:byte] = 1<8>
	word32 a0_34 = Mem33[a3_16 + 12<i32>:word32]
	Mem38[0x4201E2C6<32>:word16] = SLICE(a3_16 + 1000<i32> >>u 10<i32>, word16, 0)
	Mem40[0x4201E2CD<32>:byte] = SLICE(CONVERT(Mem38[a0_34 + 1<i32>:byte], byte, word32), byte, 0)
	Mem42[0x4201E2C0<32>:byte] = SLICE(CONVERT(Mem40[a0_34 + 16<i32>:int8], int8, int32), byte, 0)
	a4 = CONVERT(Mem42[0x4201E340<32>:byte], byte, word32)
	branch a1 != 0<32> l2305C18C
l2305C18C:
	Mem47[0x4201E340<32>:byte] = SLICE(a4 | 1<i32>, byte, 0)
	branch (a4 & 16<i32>) != 0<32> l2305C16E
l2305C19A:
	word32 a3_323
	word32 a1_322
	word32 a0_321
	chan_conn_less_delay_prog(ra, mstatus, dwArgF8, out a0_321, out a1_322, out a3_323, out a4)
l2305C162:
	Mem66[0x4201E340<32>:byte] = SLICE(a4 | 4<i32>, byte, 0)
	a4 = a4 | 4<i32>
	branch Mem66[0x4201E2F4<32>:word32] == 0<32> l2305C172
l2305C172:
	word32 s4_320
	word32 s3_319
	word32 s2_318
	word32 a5_317
	word32 a3_316
	word32 a2_315
	word32 a1_314
	word32 s1_313
	word32 s0_312
	ra = chan_switch_start(ra, 0x4201E2B4<32>, a3_16, mstatus, dwLoc08, dwArg00, dwArgE8, dwArgF8, out s0_312, out s1_313, out a1_314, out a2_315, out a3_316, out a4, out a5_317, out s2_318, out s3_319, out s4_320)
l2305C0DE:
	branch s1_13 == 1<32> l2305C1A0
l2305C1A0:
	a4 = CONVERT(Mem11[0x4201E2CB<32>:byte], byte, word32)
	word32 s2_114 = 0x4201E244<32>
	branch a4 == 255<i32> l2305C16E
l2305C1B8:
	word32 a5_94 = CONVERT(Mem11[0x4201E2CA<32>:byte], byte, word32)
	word32 s0_125 = 0x4201E2D0<32>
	branch a5_94 >u 3<32> l2305C206
l2305C206:
	branch a5_94 != 4<32> l2305C1D4
l2305C20C:
	word32 a3_107
	word32 a1_328
	word32 a2_329
	word32 a4_330
	word32 a5_331
	mm_timer_clear(0x4201E318<32>, 4<32>, mstatus, out a1_328, out a2_329, out a3_107, out a4_330, out a5_331)
	ra = chan_ctxt_op_evt(ra, 0x4201E2B4<32>, a3_107, 0x4201E244<32>, mstatus, s2, s0, dwLoc08, dwArg00, dwArg08, dwArg18, dwArg3C, dwArgD8, dwArgE8, dwArgF8, out s0_125, out s2_114)
l2305C1CA:
	branch a5_94 >=u 2<32> l2305C232
l2305C232:
	word32 a5_138 = CONVERT(Mem11[0x4201E340<32>:byte], byte, word32)
	Mem139[0x4201E2F4<32>:word32] = 0<32>
	Mem141[0x4201E340<32>:byte] = SLICE(a5_138 & 0xFFFFFFFB<32>, byte, 0)
l2305C1D0:
	branch a5_94 == s1_13 l2305C226
l2305C226:
	Mem144[0x4201E340<32>:byte] = SLICE(CONVERT(Mem11[0x4201E340<32>:byte], byte, word32) & 0xFFFFFFFE<32>, byte, 0)
l2305C1D4:
	Mem147[s2_114 + 135<i32>:byte] = 0xFF<8>
	word32 a5_149 = CONVERT(Mem147[s0_125 + 112<i32>:byte], byte, word32)
	a4 = 0x10<32>
	branch (a5_149 & 18<i32>) != 0x10<32> l2305C16E
l2305C1E8:
	Mem155[s0_125 + 112<i32>:byte] = SLICE(a5_149 & 0xFFFFFFEF<32>, byte, 0)
	word32 a5_327
	word32 a3_326
	word32 a2_325
	word32 a1_324
	mm_timer_clear(0x4201E328<32>, 0x10<32>, mstatus, out a1_324, out a2_325, out a3_326, out a4, out a5_327)
	Mem167[s0_125 + 112<i32>:byte] = SLICE(CONVERT(Mem155[s0_125 + 112<i32>:byte], byte, word32) & 0xFFFFFFEF<32>, byte, 0)
l2305C16E:
l2305C0E4:
l2305C17E:
	0<32> = dwArg38
	a4Out = a4
	return ra
chan_roc_req_exit:


word32 chan_ctxt_add(word32 a0, word32 a1, word32 a4, word32 dwArgA8, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_add_chan_ctx
//      mm_bcn_transmitted
//      me_add_chan_ctx
//      apm_start_cac_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a4 s0 s2 s3 s5 s6
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: a1 a3 sp
chan_ctxt_add_entry:
l2305C242:
	word32 s3_152 = 0x4201E244<32>
	word32 s2_151 = 0<32>
l2305C26C:
	word32 a0_140
	word32 a5_32 = CONVERT(Mem20[s3_152 + 23<i32>:byte], byte, word32)
	branch a5_32 == 255<i32> l2305C29A
l2305C274:
	word32 a3_163
	word32 a1_161
	word32 a2_162
	a0_140 = memcmp(a0, s3_152 + 4<i32>, 8<32>, out a1_161, out a2_162, out a3_163, out a4, out a5_32)
	branch a0_140 != 0<32> l2305C29A
l2305C29A:
	s2_151 = s2_151 + 1<32>
	s3_152 = s3_152 + 0x1C<32>
	branch s2_151 != 3<32> l2305C26C
l2305C2A2:
	word32 a5_164
	word32 a0_57 = co_list_pop_front(a4, a5_32, out a5_164)
	a4 = a0_57
	a0_140 = 1<32>
	branch a0_57 == 0<32> l2305C286
l2305C2B4:
	word32 a5_69 = (a0_57 - 0x4201E244<32> >> 2<i32>) + 0xB6DB6DB7<32> & 255<i32>
	Mem70[a0_57 + 23<i32>:byte] = SLICE(a5_69, byte, 0)
	Mem73[a1:byte] = SLICE(a5_69, byte, 0)
	Mem76[a0_57 + 4<i32>:byte] = SLICE(CONVERT(Mem73[a0:byte], byte, word32), byte, 0)
	Mem78[a0_57 + 5<i32>:byte] = SLICE(CONVERT(Mem76[a0 + 1<i32>:byte], byte, word32), byte, 0)
	Mem80[a0_57 + 8<i32>:word16] = SLICE(CONVERT(Mem78[a0 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem82[a0_57 + 10<i32>:word16] = SLICE(CONVERT(Mem80[a0 + 6<i32>:uint16], uint16, word32), word16, 0)
	Mem84[a0_57 + 6<i32>:word16] = SLICE(CONVERT(Mem82[a0 + 2<i32>:uint16], uint16, word32), word16, 0)
	Mem86[a0_57 + 12<i32>:byte] = SLICE(CONVERT(Mem84[a0 + 8<i32>:int8], int8, int32), byte, 0)
	a0_140 = 0<32>
l2305C282:
	Mem87[a1:byte] = SLICE(s2_151, byte, 0)
l2305C286:
	0<32> = dwArgA8
	a0Out = a0_140
	a4Out = a4
	s2Out = s2_151
	s3Out = s3_152
	s5Out = 3<32>
	s6Out = 255<i32>
	return s1
chan_ctxt_add_exit:


word32 chan_ctxt_del(word32 ra, word32 a0, word32 dwArg38, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_ctxt_unlink
// MayUse:  a0:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut: a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 s2 t0 t1 tp
// Preserved: s0 sp
chan_ctxt_del_entry:
l2305C306:
	branch CONVERT(Mem16[a0 + 0x4201E277<32>:byte], byte, word32) != 255<i32> l2305C34C
l2305C34C:
	word32 a5_31 = CONVERT(Mem16[a0 + 0x4201E278<32>:byte], byte, word32)
	branch a5_31 == 0<32> l2305C374
l2305C374:
	word32 a1_48
	word32 a3_50
	word32 a4_51
	word32 a2_77
	word32 t1_78
	word32 a0_79
	word32 a2_80
	word32 a5_81
	word32 ra_53 = memset(ra, co_list_push_back(a0 + 0x4201E260<32>, a5_31, out a2_77), 0<32>, 0x1C<32>, out t1_78, out a0_79, out a1_48, out a2_80, out a3_50, out a4_51, out a5_81)
	Mem60[a0 + 0x4201E26E<32>:word16] = 0xFF<16>
	Mem62[a0 + 0x4201E277<32>:byte] = 0xFF<8>
	0<32> = dwArg38
	a1Out = a1_48
	a3Out = a3_50
	a4Out = a4_51
	return ra_53
chan_ctxt_del_exit:
l2305C35A:
	assert_err()
l2305C332:
	assert_err()


word32 chan_ctxt_update(word32 ra, word32 s0, word32 a0, word32 a1, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 fflags, word32 frm, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, ptr32 & a4Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_hw_config_handler
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut: a4 ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa5 fflags frm ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
chan_ctxt_update_entry:
l2305C3AE:
	word32 a4_11 = CONVERT(Mem9[a0:byte], byte, word32)
	word32 a3_13 = CONVERT(Mem9[a0 + 1<i32>:byte], byte, word32)
	Mem18[a4_11 + 0x4201E264<32>:byte] = SLICE(a3_13, byte, 0)
	Mem20[a4_11 + 0x4201E265<32>:byte] = SLICE(CONVERT(Mem18[a0 + 2<i32>:byte], byte, word32), byte, 0)
	Mem22[a4_11 + 0x4201E268<32>:word16] = SLICE(CONVERT(Mem20[a0 + 6<i32>:uint16], uint16, word32), word16, 0)
	Mem24[a4_11 + 0x4201E26A<32>:word16] = SLICE(CONVERT(Mem22[a0 + 8<i32>:uint16], uint16, word32), word16, 0)
	Mem26[a4_11 + 0x4201E266<32>:word16] = SLICE(CONVERT(Mem24[a0 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem28[a4_11 + 0x4201E26C<32>:byte] = SLICE(CONVERT(Mem26[a0 + 10<i32>:int8], int8, int32), byte, 0)
	branch Mem28[0x4201E2F0<32>:int32] != a4_11 + 0x4201E260<32> l2305C444
l2305C444:
	a4Out = 0x4201E000<32>
	s3Out = s3
	return ra
l2305C406:
	__csrrc(mstatus, 8<32>)
	word32 a4_39
	word32 s3_45
	word32 s4_46
	word32 s8_47
	word32 s0_63
	word32 fflags_76
	word32 frm_77
	word32 s3_81
	word32 ra_62 = rxl_cntrl_evt(ra, rxl_timer_int_handler(a0, a1, mstatus, out a4_39, out s3_45, out s4_46, out s8_47), a1, a3_13, a4_39, s3_45, s4_46, s5, s6, s7, s8_47, s10, s11, fflags, frm, mstatus, s0, dwLoc08, dwArg14, dwArg18, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg64, dwArg68, dwArg78, dwArg84, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, out s0_63, out s3_81, out fflags_76, out frm_77)
	__csrrs(mstatus, 8<32>)
	word32 fflags_103
	word32 frm_104
	word32 s3_110
	word32 s0_215
	word32 s1_216
	word32 a2_217
	word32 s2_218
	word32 ra_105 = phy_set_channel(ra_62, CONVERT(Mem28[s0_63 + 1<i32>:byte], byte, word32), CONVERT(Mem28[s0_63 + 2<i32>:byte], byte, word32), CONVERT(Mem28[s0_63 + 6<i32>:uint16], uint16, word32), s3_81, fflags_76, frm_77, s0, dwArg14, dwArg0148, out s0_215, out s1_216, out a2_217, out s2_218, out s3_110, out fflags_103, out frm_104)
l2305C440_thunk_tpc_update_tx_power:
	word32 a4_134
	word32 a3_219
	word32 a5_220
	tpc_update_tx_power(ra_105, fflags_103, frm_104, out a3_219, out a4_134, out a5_220)
	a4Out = a4_134
	s3Out = s3_110
	return ra_105
chan_ctxt_update_exit:


word32 chan_tbtt_switch_update(word32 ra, word32 a1, word32 a3, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArgA8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_cntrl_evt
//      mm_tbtt_evt
//      mm_sta_tbtt
// MayUse:  a1:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +00A8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0178:[0..31]
// LiveOut: a1 a2 a3 a4 ra s0 s1 s10 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: sp
chan_tbtt_switch_update_entry:
l2305C44E:
	branch a5 == 0<32> l2305C4A8
l2305C452:
	branch CONVERT(Mem0[a5 + 22<i32>:byte], byte, word32) == 0<32> l2305C4A8
l2305C458:
	a1 = a1 + 0xFF00063C<32>
	word32 a0_11 = Mem0[0xFF000684<32>:word32]
	branch a1 == 0<32> l2305C4A8
l2305C466:
	Mem13[a1 + 0xFF000684<32>:word32] = a0_11
	a4 = CONVERT(Mem13[0x4201E342<32>:byte], byte, word32)
	branch a4 <=u 1<32> l2305C4A8
l2305C476:
	a4 = CONVERT(Mem13[a0_11 + 78<i32>:byte], byte, word32)
	branch a4 == 2<32> l2305C4A8
l2305C4A8:
	s0Out = s0
	s1Out = s1
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	return ra
l2305C480:
	Mem24[a0_11 + 78<i32>:byte] = 0<8>
	word32 a5_153
	word32 a2_152
	co_list_extract(0x4201E2E0<32>, a0_11 + 68<i32>, a4, 2<32>, out a2_152, out a5_153)
l2305C4A4_thunk_chan_tbtt_schedule:
	word32 a1_39
	word32 a2_40
	word32 a3_41
	word32 a4_42
	word32 s0_45
	word32 s1_46
	word32 s10_47
	word32 s3_50
	word32 s4_51
	word32 s5_52
	word32 s6_53
	word32 s7_54
	word32 s9_56
	word32 s2_154
	word32 ra_59 = chan_tbtt_schedule(ra, a0_11 + 68<i32>, a0_11 + 68<i32>, a3, a4, mstatus, dwArg08, dwArg10, dwArgA8, dwArgF8, dwArg0108, dwArg0118, dwArg0178, out s0_45, out s1_46, out a1_39, out a2_40, out a3_41, out a4_42, out s2_154, out s3_50, out s4_51, out s5_52, out s6_53, out s7_54, out s9_56, out s10_47)
	s0Out = s0_45
	s1Out = s1_46
	a1Out = a1_39
	a2Out = a2_40
	a3Out = a3_41
	a4Out = a4_42
	s3Out = s3_50
	s4Out = s4_51
	s5Out = s5_52
	s6Out = s6_53
	s7Out = s7_54
	s9Out = s9_56
	s10Out = s10_47
	return ra_59
chan_tbtt_switch_update_exit:


word32 chan_bcn_to_evt(word32 ra, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArg88, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0158, ptr32 & s0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vif_mgmt_bcn_recv
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0088:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0158:[0..31]
// LiveOut: a1 a2 a3 a4 a5 ra s0 s10 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: sp
chan_bcn_to_evt_entry:
l2305C4AA:
	word32 a4_18 = CONVERT(Mem15[a0 + 78<i32>:byte], byte, word32)
	word32 a5_199 = 2<32>
	branch a4_18 != 2<32> l2305C554
l2305C4CA:
	Mem23[a0 + 78<i32>:byte] = 0<8>
	word32 a2_271
	word32 a5_272
	co_list_extract(0x4201E2E0<32>, a0 + 68<i32>, a4_18, 2<32>, out a2_271, out a5_272)
	a1 = a0 + 68<i32>
	a4_18 = CONVERT(Mem23[0x4201E342<32>:byte], byte, word32)
	a5_199 = 1<32>
	branch a4_18 <=u 1<32> l2305C554
l2305C4FA:
	word32 s0_46
	word32 s1_47
	word32 s2_50
	word32 s4_275
	word32 a2_273
	word32 s3_274
	ra = chan_tbtt_schedule(ra, a0 + 68<i32>, a0 + 68<i32>, a3, a4_18, mstatus, s2, dwLoc10, dwArg88, dwArgD8, dwArgE8, dwArgF8, dwArg0158, out s0_46, out s1_47, out a1, out a2_273, out a3, out a4_18, out s2_50, out s3_274, out s4_275, out s5, out s6, out s7, out s9, out s10)
	word32 a5_63 = CONVERT(Mem23[s0_46 + 112<i32>:byte], byte, word32)
	a5_199 = a5_63 & 0xC<32>
	branch (a5_63 & 0xC<32>) != 0<32> l2305C554
l2305C508:
	word32 s0_65 = Mem23[(a5_63 & 0xC<32>) + 36<i32>:word32]
	branch (a5_63 & 0xC<32>) != 0<32> l2305C554
l2305C50C:
	word32 a5_70
	word32 a4_276
	a1 = chan_upd_nb_rem_slots.isra.3(s2_50 + 18<i32>, s1_47, out a4_276, out a5_70)
	word32 a4_71 = CONVERT(Mem23[s2_50 + 20<i32>:uint16], uint16, word32)
	branch a4_71 == 0<32> l2305C536
l2305C51C:
	word32 a5_75 = s1_47 - a5_70 >>u 10<i32> << 16<i32>
	s0_65 = Mem23[a5_70 + 108<i32>:word32]
	word32 a5_76 = a5_75 >>u 16<i32>
	branch a4_71 >=u a5_75 >>u 16<i32> l2305C52E
l2305C52C:
	a5_76 = a4_71
l2305C52E:
	Mem82[s2_50 + 20<i32>:word16] = SLICE(a4_71 - a5_76, word16, 0)
l2305C536:
	Mem87[s1_47 + 108<i32>:word32] = s0_65
	word32 a0_91
	word32 s2_277
	chan_get_next_chan(s0_65, s1_47, a4_71, dwArg18, out a0_91, out a3, out a4_18, out a5_199, out s2_277)
	branch a5_199 == a0_91 l2305C554
l2305C554:
	s0Out = s1
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4_18
	a5Out = a5_199
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	return ra
l2305C542:
l2305C550_thunk_chan_switch_start:
	word32 a5_120
	word32 a1_122
	word32 a2_123
	word32 a3_124
	word32 a4_125
	word32 s0_128
	word32 s4_132
	word32 s1_278
	word32 s2_279
	word32 s3_280
	word32 ra_127 = chan_switch_start(ra, a0_91, a3, mstatus, dwArg08, dwArg10, dwArgF8, dwArg0108, out s0_128, out s1_278, out a1_122, out a2_123, out a3_124, out a4_125, out a5_120, out s2_279, out s3_280, out s4_132)
	s0Out = s0_128
	a1Out = a1_122
	a2Out = a2_123
	a3Out = a3_124
	a4Out = a4_125
	a5Out = a5_120
	s4Out = s4_132
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	return ra_127
chan_bcn_to_evt_exit:


word32 chan_bcn_detect_start(word32 ra, word32 s0, word32 mstatus, ptr32 & s0Out, ptr32 & a3Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_hw_config_handler
//      mm_sta_tbtt
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a3 ra s0 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
chan_bcn_detect_start_entry:
l2305C564:
	word32 s3_134 = Mem13[s0 + 64<i32>:word32]
	branch s0 != 0<32> l2305C590
l2305C590:
	branch (CONVERT(Mem13[0x4201E340<32>:byte], byte, word32) & 64<i32>) != 0<32> l2305C630
l2305C5A2:
	word32 a4_26 = CONVERT(Mem13[0x4201E342<32>:byte], byte, word32)
	branch a4_26 <=u 1<32> l2305C630
l2305C5AC:
	word32 a0_34
	word32 a2_36
	word32 s0_42
	word32 s2_44
	word32 s3_45
	word32 s1_144
	word32 a1_145
	word32 a3_146
	word32 a4_147
	word32 a5_148
	word32 a6_149
	word32 s4_150
	word32 s8_151
	ra = ke_msg_alloc(ra, 70<i32>, 0<32>, 0x14<32>, a4_26, mstatus, dwLoc08, out s0_42, out s1_144, out a0_34, out a1_145, out a2_36, out a3_146, out a4_147, out a5_148, out a6_149, out s2_44, out s3_45, out s4_150, out s8_151)
	Mem52[a0_34:byte] = 0<8>
	Mem56[a0_34 + 1<i32>:byte] = SLICE(CONVERT(Mem52[s3_45 + 87<i32>:byte], byte, word32), byte, 0)
	Mem60[a0_34 + 2<i32>:byte] = SLICE(CONVERT(Mem56[s0_42 + 4<i32>:byte], byte, word32), byte, 0)
	Mem62[a0_34 + 3<i32>:byte] = SLICE(CONVERT(Mem60[s0_42 + 5<i32>:byte], byte, word32), byte, 0)
	Mem64[a0_34 + 4<i32>:word16] = SLICE(CONVERT(Mem62[s0_42 + 6<i32>:uint16], uint16, word32), word16, 0)
	Mem66[a0_34 + 6<i32>:word16] = SLICE(CONVERT(Mem64[s0_42 + 8<i32>:uint16], uint16, word32), word16, 0)
	Mem68[a0_34 + 8<i32>:word16] = SLICE(CONVERT(Mem66[s0_42 + 10<i32>:uint16], uint16, word32), word16, 0)
	Mem76[(Mem68[s2_44 + 0x4201A9BC<32>:word32] + 0xFEFFFC78<32> >>u 1000<i32>) + 12<i32>:word32] = a0_34
	Mem78[a0_34 + 16<i32>:byte] = SLICE(CONVERT(Mem76[s0_42 + 12<i32>:int8], int8, int32), byte, 0)
	word32 s1_87
	word32 a0_152
	word32 a1_153
	word32 a2_154
	word32 a4_155
	word32 a5_156
	word32 s2_157
	word32 s4_158
	word32 s8_159
	s0 = ke_msg_send(a0_34, a2_36, mstatus, out s1_87, out a0_152, out a1_153, out a2_154, out a3, out a4_155, out a5_156, out s2_157, out s3_134, out s4_158, out s8_159)
	Mem97[s1_87 + 112<i32>:byte] = SLICE(CONVERT(Mem78[s1_87 + 112<i32>:byte], byte, word32) | 64<i32>, byte, 0)
l2305C630:
	s0Out = s0
	a3Out = a3
	s3Out = s3_134
	return ra
chan_bcn_detect_start_exit:
l2305C576:
	assert_err()


word32 chan_is_on_channel(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ps_uapsd_timer_handle
//      ps_disable_cfm
//      ps_traffic_status_update
//      tpc_update_vif_tx_power
//      txl_cntrl_tx_check
//      mm_sta_tbtt
//      bl_sleep
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
chan_is_on_channel_entry:
l2305C63E:
	word32 a5_25 = Mem0[0x4201E2F0<32>:int32]
	branch a5_25 == 0<32> l2305C66A
l2305C66A:
	a3Out = a3
	a4Out = a4
	a5Out = a5_25
	return 0<32>
l2305C648:
	word32 a0_12
	word32 a3_7 = CONVERT(Mem0[a5_25 + 23<i32>:byte], byte, word32)
	branch a3_7 >u 2<32> l2305C65C
l2305C65C:
	a5_25 = CONVERT(Mem0[a5_25 + 25<i32>:byte], byte, word32)
	a0_12 = a5_25 - CONVERT(Mem0[a0 + 87<i32>:byte], byte, word32)
l2305C652:
	a0_12 = Mem0[a0 + 64<i32>:word32] - a5_25
l2305C656:
	a3Out = a3_7
	a4Out = 2<32>
	a5Out = a5_25
	return CONVERT(a0_12 <u 1<i32>, bool, word32)
chan_is_on_channel_exit:


word32 chan_is_tx_allowed(word32 a0, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_tx_check
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
chan_is_tx_allowed_entry:
l2305C66E:
	word32 a3_9
	word32 a4_10
	word32 a5_30
	word32 a0_16 = chan_is_on_channel(a0, out a3_9, out a4_10, out a5_30)
	branch a0_16 == 0<32> l2305C690
l2305C678:
	word32 a5_12 = Mem5[a4_10 + 36<i32>:word32]
	branch a4_10 == 0<32> l2305C690
l2305C684:
	a0_16 = CONVERT(CONVERT(Mem5[Mem5[a5_12 + 32<i32>:word32] + 22<i32>:byte], byte, word32) <u 0xFFFFFFF9<32>, bool, word32)
l2305C690:
	a3Out = a3_9
	a4Out = a4_10
	return a0_16
chan_is_tx_allowed_exit:


word32 chan_is_on_operational_channel(ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_bcn_transmit
// MayUse: 
// LiveOut: a0 a4
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
chan_is_on_operational_channel_entry:
l2305C696:
	word32 a4_5 = Mem0[0x4201E2F0<32>:int32]
	word32 a5_12 = 0<32>
	branch a4_5 == 0<32> l2305C6B6
l2305C6A2:
	a5_12 = 0<32>
	branch CONVERT(Mem0[a4_5 + 23<i32>:byte], byte, word32) >u 2<32> l2305C6B6
l2305C6AE:
	a5_12 = CONVERT(0<32> - a4_5 <u 1<i32>, bool, word32)
l2305C6B6:
	a4Out = a4_5
	return a5_12
chan_is_on_operational_channel_exit:


word32 chan_update_tx_power(word32 a0, word32 a3, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tpc_update_vif_tx_power
//      chan_ctxt_link
//      chan_ctxt_unlink
// MayUse:  a0:[0..31] a3:[0..31]
// LiveOut: a2 a4
// Trashed: a2 a3 a4 a5
// Preserved: a1 sp
chan_update_tx_power_entry:
l2305C6BA:
	branch CONVERT(Mem0[a0 + 24<i32>:byte], byte, word32) == 0<32> l2305C72A
l2305C6C0:
	word32 a5_10 = 127<i32>
	branch a0 != a3 l2305C6F4
l2305C6D6:
	word32 a3_11 = CONVERT(Mem0[0x4201BD51<32>:byte], byte, word32)
	word32 a5_12 = CONVERT(Mem0[0x4201BD52<32>:byte], byte, word32)
	a2 = CONVERT(SLICE(a3_11, byte, 0), byte, int32)
	branch a2 >= CONVERT(SLICE(a5_12, byte, 0), byte, int32) l2305C6F0
l2305C6EE:
	a5_12 = a3_11
l2305C6F0:
	a5_10 = CONVERT(SLICE(a5_12, byte, 0), byte, int32)
l2305C6F4:
	branch a0 != Mem0[0x4201C310<32>:int32] l2305C71A
l2305C6FC:
	word32 a3_28 = CONVERT(Mem0[0x4201C32A<32>:byte], byte, word32)
	a2 = CONVERT(SLICE(a3_28, byte, 0), byte, int32)
	branch a5_10 >= a2 l2305C70C
l2305C70A:
	a3_28 = a5_10
l2305C70C:
	word32 a5_37 = a3_28 << 0x18<u32>
	a4 = CONVERT(Mem0[0x4201C329<32>:int8], int8, int32)
	a5_10 = a5_37 >> 24<i32>
	branch a4 < a5_37 >> 24<i32> l2305C724
l2305C724:
	a5_10 = a4
l2305C71A:
	a4 = 127<i32>
	branch a5_10 != 127<i32> l2305C726
l2305C726:
	Mem46[a0 + 12<i32>:byte] = SLICE(a5_10, byte, 0)
l2305C72A:
	a4Out = a4
	return a2
l2305C722:
	a4Out = 127<i32>
	return a2
chan_update_tx_power_exit:


word32 chan_ctxt_link(word32 ra, word32 a0, word32 a1, word32 a3, word32 s2, word32 mstatus, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_bcn_transmitted
//      scanu_join_cfm_handler
//      apm_start_cac_req_handler
//      apm_start_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a7 ra sp t0 t1 tp
chan_ctxt_link_entry:
l2305C72C:
	word32 s3_118 = a0
	word32 s2_117 = a1 + 0x4201E260<32>
	branch Mem28[a0 + 0x4201C310<32>:word32] == 0<32> l2305C786
l2305C786:
	branch CONVERT(Mem28[a1 + 0x4201E277<32>:byte], byte, word32) != 255<i32> l2305C7B4
l2305C7B4:
	word32 s0_59 = Mem28[359<i32>:word32]
	word32 s1_101 = CONVERT(Mem28[a1 + 0x4201E278<32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem63[0xCFFF967<32>:word32] = s0_59
	Mem65[a0 + 0x4201C310<32>:word32] = a1 + 0x4201E260<32>
	Mem66[a1 + 0x4201E278<32>:byte] = SLICE(s1_101, byte, 0)
	branch s1_101 != 1<32> l2305C828
l2305C7F2:
	word32 a5_68 = CONVERT(Mem66[s0_59 + 114<i32>:byte], byte, word32)
	Mem70[a1 + 0x4201E276<32>:byte] = SLICE(s1_101, byte, 0)
	Mem74[s0_59 + 114<i32>:byte] = SLICE(a5_68 + 1<32>, byte, 0)
	word32 a2_179
	s1_101 = co_list_push_back(a1 + 0x4201E260<32>, a5_68 + 1<32>, out a2_179)
	word32 s0_78 = Mem74[a5_68 + 0x25<32>:word32]
	branch a5_68 != 1<32> l2305C844
l2305C844:
	Mem79[a5_68 + 0x17<32>:byte] = SLICE(s1_101, byte, 0)
	Mem80[s0_78 + 36<i32>:word32] = 0<32>
l2305C812:
	branch (CONVERT(Mem74[s0_78 + 112<i32>:byte], byte, word32) & 0xC<32>) != 0<32> l2305C828
l2305C81A:
	branch CONVERT(Mem74[s0_78 + 114<i32>:byte], byte, word32) != s1_101 l2305C83C
l2305C83C:
	word32 s0_180
	word32 a1_181
	word32 a4_182
	chan_cde_evt(ra, mstatus, s2, dwLoc10, dwLoc08, dwArgC8, dwArgD8, dwArgE8, out s0_180, out s1_101, out a1_181, out a3, out a4_182, out s2_117, out s3_118)
l2305C822:
	word32 s0_183
	word32 a1_184
	word32 a2_185
	word32 a4_186
	word32 a5_187
	word32 s4_188
	chan_switch_start(ra, a1 + 0x4201E260<32>, a3, mstatus, s2, dwLoc10, dwArgD8, dwArgE8, out s0_183, out s1_101, out a1_184, out a2_185, out a3, out a4_186, out a5_187, out s2_117, out s3_118, out s4_188)
l2305C828:
l2305C838_thunk_chan_update_tx_power:
	word32 a4_139
	chan_update_tx_power(s2_117, a3, out a4_139)
	s1Out = s1_101
	a4Out = a4_139
	s2Out = s2_117
	s3Out = s3_118
	s4Out = dwArg04
	return s1
chan_ctxt_link_exit:
l2305C79A:
	assert_err()
l2305C76C:
	assert_err()


word32 chan_ctxt_unlink(word32 ra, word32 s0, word32 a0, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0168, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s6Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_delete_resources
//      apm_stop
//      mm_bcn_transmitted
//      apm_stop_cac_req_handler
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0168:[0..31]
// LiveOut: a2 a4 ra s1 s10 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: a7 s0 sp
chan_ctxt_unlink_entry:
l2305C84E:
	word32 a4_104 = a0 + 1496<i32>
	branch s0 != 0<32> l2305C88E
l2305C88E:
	word32 a2_272
	word32 a5_273
	word32 s1_34 = co_list_extract(0x4201E2E0<32>, a0 + 0x4201C314<32>, a0 + 1496<i32>, 1496<i32>, out a2_272, out a5_273)
	Mem37[s1_34 + 78<i32>:byte] = 0<8>
	Mem38[s1_34 + 64<i32>:word32] = 0<32>
	Mem41[s0 + 24<i32>:byte] = SLICE(CONVERT(Mem38[s0 + 24<i32>:byte], byte, word32) + 0xFFFFFFFF<32>, byte, 0)
	word32 a1_114 = a0 + 0x4201C314<32>
	word32 a5_42 = CONVERT(Mem41[s0 + 22<i32>:byte], byte, word32)
	branch a5_42 == 0<32> l2305C934
l2305C8C2:
	a3 = Mem41[a5_42 + 104<i32>:word32]
	Mem48[a5_42 + 0xF3FFF868<32>:word32] = a3
	a4_104 = 0xF3FFF800<32>
	word32 a5_49 = CONVERT(Mem48[s0 + 24<i32>:byte], byte, word32)
	branch a5_49 != 0<32> l2305C942
l2305C8E0:
	word32 s2_54 = Mem48[0x4201E2F4<32>:int32]
	word32 a2_283
	word32 a5_284
	word32 s1_56 = co_list_extract(0x4201E2D8<32>, s0, 0xF3FFF800<32>, a5_49, out a2_283, out a5_284)
	Mem59[s0 + 22<i32>:byte] = 0<8>
	word32 s1_61 = Mem59[0xF3FFF820<32>:word32]
	word32 a5_63 = CONVERT(Mem59[s1_56 + 114<i32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem64[s1_61 + 114<i32>:byte] = SLICE(a5_63, byte, 0)
	a1_114 = s0
	branch s0 != 0xF3FFF800<32> l2305C920
l2305C920:
	branch s2_54 != s0 l2305C90E
l2305C924:
	Mem65[s1_61 + 36<i32>:word32] = 0<32>
l2305C90A:
	Mem66[s1_61 + 32<i32>:word32] = 0<32>
l2305C90E:
	branch s2_54 != 0<32> l2305C928
l2305C928:
	Mem74[s1_61 + 112<i32>:byte] = SLICE(CONVERT(Mem70[s1_61 + 112<i32>:byte], byte, word32) | 32<i32>, byte, 0)
l2305C912:
	a4_104 = 1<32>
	branch a5_63 <=u 1<32> l2305C958
l2305C958:
	branch a5_63 != 1<32> l2305C934
l2305C95C:
	word32 s3_292
	word32 s4_293
	word32 a2_289
	word32 a5_290
	word32 s2_291
	word32 s1_288
	ra = chan_switch_start(ra, 0x4201E2D8<32>, a3, mstatus, dwLoc08, dwArg00, dwArgE8, dwArgF8, out s0, out s1_288, out a1_114, out a2_289, out a3, out a4_104, out a5_290, out s2_291, out s3_292, out s4_293)
l2305C918:
	word32 s2_286
	word32 s3_287
	word32 s1_285
	ra = chan_cde_evt(ra, mstatus, dwLoc08, dwArg00, dwArg08, dwArgD8, dwArgE8, dwArgF8, out s0, out s1_285, out a1_114, out a3, out a4_104, out s2_286, out s3_287)
l2305C934:
	branch CONVERT(Mem125[s0 + 24<i32>:byte], byte, word32) != 0<32> l2305C942
l2305C93A:
	ra = chan_ctxt_del(ra, CONVERT(Mem125[s0 + 23<i32>:byte], byte, word32), dwArg28, out a1_114, out a3, out a4_104)
l2305C942:
	word32 a3_166
	word32 s0_170
	word32 s1_171
	word32 s10_172
	word32 s6_178
	word32 s5_280
	word32 s7_281
	word32 s9_282
	word32 a4_276
	word32 s2_277
	word32 s4_279
	word32 s3_278
	word32 a2_275
	word32 a1_274
	word32 ra_184 = chan_tbtt_schedule(ra, 0<32>, a1_114, a3, a4_104, mstatus, dwLoc08, dwArg00, dwArg98, dwArgE8, dwArgF8, dwArg0108, dwArg0168, out s0_170, out s1_171, out a1_274, out a2_275, out a3_166, out a4_276, out s2_277, out s3_278, out s4_279, out s5_280, out s6_178, out s7_281, out s9_282, out s10_172)
	0<32> = dwArg38
l2305C954_thunk_chan_update_tx_power:
	word32 a4_194
	word32 a2_195 = chan_update_tx_power(s0_170, a3_166, out a4_194)
	s1Out = s1_171
	a2Out = a2_195
	a4Out = a4_194
	s6Out = s6_178
	s10Out = s10_172
	return ra_184
chan_ctxt_unlink_exit:
l2305C874:
	assert_err()


void hal_dma_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_init
// MayUse: 
// LiveOut:
// Trashed: a0 a2 a5 s1 tp
// Preserved: s0 sp
hal_dma_init_entry:
l2305C964:
	co_list_init(0x4201E344<32>)
	Mem17[0x4201E35C<32>:word16] = Mem11[0x44A000A4<32>:word16]
	co_list_init(0x4201E34C<32>)
	Mem21[0x4201E35E<32>:word16] = Mem17[0x44A000AC<32>:word16]
	return
hal_dma_init_exit:


void hal_dma_push(word32 s0, word32 a1, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scanu_start
// MayUse:  a1:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
hal_dma_push_entry:
l2305C9A6:
	word32 s1_13 = a1
	word32 a0_14 = Mem9[s0 + 4<i32>:word32]
	branch a5 == 0<32> l2305CA1A
l2305CA1A:
	Mem15[s0 + 10<i32>:word16] = 0<16>
l2305C9B6:
	word32 a5_19 = CONVERT(Mem9[a1 + 0x2308282C<32>:byte], byte, word32)
	Mem25[s0 + 10<i32>:word16] = SLICE(a5_19 << 8<i32> | (a5_19 | 16<i32>) | 0x1000000<32>, word16, 0)
	__csrrc(mstatus, 8<32>)
	word32 a2_139
	s1_13 = co_list_push_back(a0_14, a1 << 3<u32>, out a2_139)
	__csrrs(mstatus, 8<32>)
	a1 = a0_14
	a0_14 = (a1 << 3<u32>) + 0x4201E344<32>
l2305C9F0:
	word32 a0_56
	word32 a6_141
	word32 a7_142
	word32 a5_140
	word32 a4_102
	word32 a3_47
	word32 a2_46
	memcpy(a0_14, a1, CONVERT(Mem36[s0 + 8<i32>:uint16], uint16, word32), out a2_46, out a3_47, out a4_102, out a5_140, out a6_141, out a7_142)
	branch s1_13 == 0<32> l2305CA20
l2305CA20:
	a0_56 = 64<i32>
l2305C9FE:
	word32 a5_57 = 1<32>
	branch s1_13 == 1<32> l2305CA30
l2305CA30:
	a0_56 = 0x10000000<32>
l2305CA24:
l2305CA2C_thunk_ke_evt_set:
	word32 a5_156
	ke_evt_set(a0_56, a4_102, mstatus, out a5_156)
	return
hal_dma_push_exit:
l2305CA04:
l2305CA08:
	word32 s4_151
	word32 s3_150
	word32 s1_143
	word32 a1_145
	word32 a4_147
	word32 s2_149
	word32 a0_144
	word32 a2_146
	word32 a5_148
	word32 a0_152
	word32 a1_153
	word32 s4_154
	word32 s8_155
	puts(vTaskDelay(1000<i32>, a2_46, a3_47, a4_102, a5_57, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_143, out a0_144, out a1_145, out a2_146, out a3_47, out a4_147, out a5_148, out s2_149, out s3_150, out s4_151) + 480<i32>, out a0_152, out a1_153, out a2_46, out a4_102, out a5_57, out s4_154, out s8_155)


void hal_dma_evt(word32 a0, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 s1 tp
// Preserved: s0 sp
hal_dma_evt_entry:
l2305CA36:
	word32 a0_12
	branch a0 != 0<32> l2305CA72
l2305CA72:
	a0_12 = 0x10000000<32>
l2305CA42:
	a0_12 = 64<i32>
l2305CA46:
	ke_evt_clear(a0_12, a4, mstatus)
	__csrrc(mstatus, 8<32>)
	word32 a5_24 = 0x4201E344<32>
l2305CA5C:
	word32 a0_30 = co_list_pop_front(a4, a5_24, out a5_24)
	__csrrs(mstatus, 8<32>)
	branch a0_30 != 0<32> l2305CA78
l2305CA78:
	branch a5_24 == 0<32> l2305CA82
l2305CA7C:
	call a5_24 (retsize: 0;)
		uses: a4:a4,a5:a5_31
		defs: a5:a5_39
l2305CA82:
	__csrrc(mstatus, 8<32>)
l2305CA68:
	return
hal_dma_evt_exit:


word32 blmac_soft_reset_getf(word32 s0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_stop
//      hal_machw_init
// MayUse:  s0:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a5
// Preserved: s0 sp
blmac_soft_reset_getf_entry:
l2305CA88:
	branch (s0 & -2<i32>) == 0<32> l2305CAB2
l2305CAB2:
	return s0 & 255<i32>
blmac_soft_reset_getf_exit:
l2305CA9A:
	assert_err()


void blmac_wt_2_crypt_clk_ratio_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
blmac_wt_2_crypt_clk_ratio_setf_entry:
l2305CABE:
	Mem9[0x44B000F0<32>:word32] = a0 | Mem0[0x44B000F0<32>:int32] & 0xFFFFFFFC<32>
	return
blmac_wt_2_crypt_clk_ratio_setf_exit:


word32 blmac_rx_flow_cntrl_en_setf.constprop.9(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_init
//      hal_machw_reset
// MayUse:  a5:[0..31]
// LiveOut: a3
// Trashed: a3 a4 a5
// Preserved: sp
blmac_rx_flow_cntrl_en_setf.constprop.9_entry:
l2305CAD0:
	word32 a3_5 = Mem0[a5 + 84<i32>:word32]
	Mem11[(a5 & 0xEFFFFFFF<32> | 0x10000000<32>) + 84<i32>:word32] = a3_5
	return a3_5
blmac_rx_flow_cntrl_en_setf.constprop.9_exit:


word32 blmac_key_sto_ram_reset_setf.constprop.12(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_init
//      hal_machw_monitor_mode
// MayUse:  a5:[0..31]
// LiveOut: a4
// Trashed: a3 a4 a5
// Preserved: sp
blmac_key_sto_ram_reset_setf.constprop.12_entry:
l2305CAE4:
	Mem11[(a5 & 0xFDFFFFFF<32> | 0x2000000<32>) + 76<i32>:word32] = Mem0[a5 + 76<i32>:word32]
	return 0x2000000<32>
blmac_key_sto_ram_reset_setf.constprop.12_exit:


void hal_machw_idle_req(word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_set_idle_req_handler
//      mm_start_req_handler
//      mm_force_idle_req_handler
//      mm_hw_config_handler
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
hal_machw_idle_req_entry:
l2305CAF8:
	word32 a5_5 = Mem0[a4 + 56<i32>:word32]
	branch (a4 & 0xF<32>) != 0<32> l2305CB1A
l2305CB1A:
	__csrrc(mstatus, 8<32>)
	Mem12[a5_5 + 316<i32>:word32] = Mem0[a5_5 + 288<i32>:int32] + 0xC000350<32>
	Mem15[0x44B08088<32>:word32] = 32<i32>
	Mem18[0x44B0808C<32>:word32] = Mem15[0x44B0808C<32>:int32] | 32<i32>
	Mem19[a5_5 + 56<i32>:word32] = 0<32>
	Mem23[0x44B08008<32>:word32] = Mem19[0x44B08004<32>:word32]
	__csrrs(mstatus, 8<32>)
	return
l2305CB02:
l2305CB16_thunk_assert_rec:
	word32 a2_45
	word32 a3_46
	word32 a4_47
	word32 a5_48
	assert_rec(a3, mstatus, out a2_45, out a3_46, out a4_47, out a5_48)
	return
hal_machw_idle_req_exit:


void hal_machw_stop(word32 s0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_reset_req_handler
// MayUse:  s0:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: sp
hal_machw_stop_entry:
l2305CB60:
	Mem8[0x51<32>:word32] = 0x44B08000<32>
l2305CB6C:
	branch blmac_soft_reset_getf(s0) != 0<32> l2305CB6C
l2305CB72:
	return
hal_machw_stop_exit:


word32 hal_machw_init(word32 ra, word32 s0, word32 dwArg18, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_init
// MayUse:  ra:[0..31] s0:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
hal_machw_init_entry:
l2305CB78:
	Mem14[0x51<32>:word32] = 0x44B08000<32>
l2305CB8A:
	branch blmac_soft_reset_getf(s0) != 0<32> l2305CB8A
l2305CB90:
	Mem22[0x44B00404<32>:word32] = 0x24F637<32>
	Mem24[0x44B00400<32>:word32] = 1<32>
	Mem25[0x44B00400<32>:word32] = 0<32>
	Mem27[0x44B00400<32>:word32] = 105<i32>
	Mem31[0x44B00400<32>:word32] = Mem27[0x44B00400<32>:int32] & -33<i32>
	Mem34[0x50100023<32>:word32] = 0x44920000<32>
	word32 a0_35 = phy_get_mac_freq()
	word32 s0_36 = Mem34[0x44B000E4<32>:int32]
	Mem42[0x44B000E4<32>:word32] = Mem34[0x44B000E4<32>:int32] & -256<i32> | 40<i32>
	word32 a5_50 = (Mem42[0x44B000E4<32>:int32] >>u 8<i32> & 1023<i32>) + a0_35 >>u (s0_36 & 255<i32>)
	word32 s2_52 = a5_50 << 8<i32> & 0xFFFF00<32>
	branch (a5_50 << 8<i32> & 0xFC0000<32>) == 0<32> l2305CC2A
l2305CC2A:
	Mem66[0x44B000E4<32>:word32] = Mem42[0x44B000E4<32>:int32] & 0xFFFC00FF<32> | s2_52
	Mem73[0x44B000E4<32>:word32] = Mem66[0x44B000E4<32>:int32] & 0xF003FFFF<32> | 0x2200000<32>
	Mem91[0x44B000E8<32>:word32] = CONVERT(SLICE(Mem73[0x44B000E8<32>:int32] >>u 8<i32>, word16, 0), word16, word32) + a0_35 >>u (s0_36 & 255<i32>) << 8<i32> & 0xFFFF00<32> | Mem73[0x44B000E8<32>:int32] & 0xFF0000FF<32>
	Mem98[0x44B000EC<32>:word32] = Mem91[0x44B000EC<32>:int32] & 0xC00FFFFF<32> | 0x2700000<32>
	word32 a5_104 = (Mem98[0x44B000EC<32>:int32] >>u 10<i32> & 1023<i32>) + a0_35 >>u (s0_36 & 255<i32>)
	word32 s2_106 = a5_104 << 10<i32> & 0x3FFFC00<32>
	branch (a5_104 << 10<i32> & 0x3F00000<32>) == 0<32> l2305CCE4
l2305CCE4:
	Mem120[0x44B000EC<32>:word32] = Mem98[0x44B000EC<32>:int32] & 0xFFF003FF<32> | s2_106
	Mem125[0x44B000EC<32>:word32] = Mem120[0x44B000EC<32>:int32] & -1024<i32> | 180<i32>
	word32 a0_122 = 3<32>
	branch a0_35 <=u 0x1D<32> l2305CD22
l2305CD16:
	a0_122 = 2<32>
	branch a0_35 <=u 59<i32> l2305CD22
l2305CD20:
	a0_122 = 1<32>
l2305CD22:
	blmac_wt_2_crypt_clk_ratio_setf(a0_122)
	Mem154[0x44B000F4<32>:word32] = (Mem125[0x44B000F4<32>:int32] >>u 8<i32> & 0xFFFFFFF<32>) + a0_35 >>u (s0_36 & 255<i32>) << 8<i32> & 0xFFFF00<32> | Mem125[0x44B000F4<32>:int32] & 0xFF0000FF<32>
	Mem165[0x44B000F8<32>:word32] = (Mem154[0x44B000F8<32>:int32] >>u 8<i32> & 0xFFFFFFF<32>) + a0_35 >>u (s0_36 & 255<i32>) << 8<i32> & 0xFFFF00<32> | Mem154[0x44B000F8<32>:int32] & 0xFF0000FF<32>
	word32 s2_171 = (Mem165[0x44B00104<32>:int32] >>u 0x14<u32> & 1023<i32>) + a0_35 >>u (s0_36 & 255<i32>)
	branch (s2_171 << 20<i32> & 0xC0000000<32>) == 0<32> l2305CDBC
l2305CDBC:
	Mem186[0x44B00104<32>:word32] = Mem165[0x44B00104<32>:int32] & 0xC00FFFFF<32> | s2_171 << 20<i32>
	word32 a5_194 = (Mem186[0x44B00104<32>:int32] >>u 10<i32> & 1023<i32>) + a0_35 >>u (s0_36 & 255<i32>)
	word32 s2_196 = a5_194 << 10<i32> & 0x3FFFC00<32>
	branch (a5_194 << 10<i32> & 0x3F00000<32>) == 0<32> l2305CE16
l2305CE16:
	Mem210[0x44B00104<32>:word32] = Mem186[0x44B00104<32>:int32] & 0xFFF003FF<32> | s2_196
	word32 s0_214 = (Mem210[0x44B00104<32>:int32] & 1023<i32>) + a0_35 >>u (s0_36 & 255<i32>)
	word32 s2_219 = CONVERT(SLICE(s0_214, word16, 0), word16, word32)
	branch (s0_214 & 0xFFFFC00<32>) == 0<32> l2305CE6C
l2305CE6C:
	Mem231[0x44B00104<32>:word32] = Mem210[0x44B00104<32>:int32] & -1024<i32> | s2_219
	Mem234[0x8373F1C0<32>:word32] = 0x44B08000<32>
	word32 a5_235 = Mem234[0x8373F198<32>:word32]
	Mem239[0x83000198<32>:word32] = a5_235
	branch Mem239[a5_235 + 216<i32>:int32] >>u 24<i32> >u 0x10<32> l2305CEBE
l2305CEBE:
	word32 s11_402
	word32 a0_257
	word32 t4_403
	word32 s9_400
	word32 s10_401
	word32 s7_398
	word32 s8_399
	word32 s5_396
	word32 s6_397
	word32 s3_394
	word32 s4_395
	word32 a7_392
	word32 s2_393
	word32 a4_390
	word32 a5_391
	word32 a2_388
	word32 a3_389
	word32 s1_386
	word32 a1_387
	word32 ra_265 = printf(ra, 0x2307E750<32>, 8<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_386, out a0_257, out a1_387, out a2_388, out a3_389, out a4_390, out a5_391, out a7_392, out s2_393, out s3_394, out s4_395, out s5_396, out s6_397, out s7_398, out s8_399, out s9_400, out s10_401, out s11_402, out t4_403)
	Mem282[0x44B000D8<32>:word32] = 0x21108<32>
	Mem286[0x44B08080<32>:word32] = 0x800A07C0<32>
	word32 s0_287 = Mem286[0x800A080C<32>:word32]
	Mem291[0x840A080C<32>:word32] = s0_287
	blmac_rx_flow_cntrl_en_setf.constprop.9(0x840A07C0<32>)
	Mem297[0x8000003E<32>:word32] = s0_287
	Mem300[s0_287 + 276<i32>:word32] = 0x3010A<32>
	Mem303[0xFF9000C8<32>:word32] = s0_287
	Mem305[s0_287 + 336<i32>:word32] = 0x1000000<32>
	Mem307[s0_287 + 548<i32>:word32] = 0<32>
	Mem309[s0_287 + 160<i32>:word32] = 0x2000020<32>
	word32 s0_310 = Mem309[0x200006C<32>:word32]
	Mem315[0x300006C<32>:word32] = s0_310
	blmac_key_sto_ram_reset_setf.constprop.12(0x3000020<32>)
	Mem320[s0_310 + 1296<i32>:word32] = 0x1FFFC25<32>
	Mem323[s0_310 + 784<i32>:word32] = Mem320[s0_310 + 784<i32>:int32] | 128<i32>
	word32 s0_327 = phy_get_ntx(a0_257) + 1<32> << 0x1A<u32>
	branch (s0_327 & 0xE0000000<32>) == 0<32> l2305CF86
l2305CF86:
	Mem341[0x44B0009C<32>:word32] = Mem323[0x44B0009C<32>:int32] & 0xE3FFFFFF<32> | s0_327
	Mem348[0xE400004B<32>:word32] = Mem341[0xE400004B<32>:word32]
	0<32> = dwArg38
	return ra_265
hal_machw_init_exit:
l2305CF6E:
	assert_err()
l2305CEA6:
	assert_err()
l2305CE52:
	assert_err()
l2305CDFC:
	assert_err()
l2305CDA2:
	assert_err()
l2305CCCA:
	assert_err()
l2305CC10:
	assert_err()


word32 hal_machw_disable_int(word32 a3, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      assert_rec
// MayUse:  a3:[0..31]
// LiveOut: a3 a4
// Trashed: a3 a4 a5
// Preserved: sp
hal_machw_disable_int_entry:
l2305CFBA:
	word32 a5_5 = Mem0[a3 + 116<i32>:word32]
	Mem9[(a3 & 0x7FFFFFFF<32>) + 116<i32>:word32] = a5_5
	word32 a3_10 = Mem9[a5_5 + 128<i32>:int32]
	Mem12[a5_5 + 128<i32>:word32] = a3_10 & 0x7FFFFFFF<32>
	a4Out = a3_10 & 0x7FFFFFFF<32>
	return a3_10
hal_machw_disable_int_exit:


word32 hal_machw_reset(word32 a4, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_force_idle_req
//      bl_reset_evt
// MayUse:  a4:[0..31] Stack +0028:[0..31]
// LiveOut: a4
// Trashed: a1 a2 a3 a4 a5
// Preserved: a0 s0 s1 s2 sp tp
hal_machw_reset_entry:
l2305CFD8:
	branch (Mem7[0x44B00038<32>:word32] & 0xF<32>) == 0<32> l2305CFF4
l2305CFE8:
	a4 = helper_record_all_states(0x2307E208<32>, dwArg28)
l2305CFF4:
	word32 a5_25 = Mem7[a4 + 76<i32>:word32]
	Mem28[(a4 & -129<i32>) + 76<i32>:word32] = a5_25
	Mem29[a5_25 + 56<i32>:word32] = 0<32>
	Mem31[0xD0<32>:word32] = a5_25
l2305D00E:
	a5_25 = a5_25 & 0xF<32>
	branch a5_25 != 0<32> l2305D00E
l2305D014:
	word32 a5_38 = Mem31[128<i32>:word32]
	Mem40[0x7C<32>:word32] = a5_38
	word32 a3_41 = blmac_rx_flow_cntrl_en_setf.constprop.9(a5_38)
	Mem49[0x44B0808C<32>:word32] = Mem40[0x44B0808C<32>:int32] & -64<i32>
	Mem51[0x7B<32>:word32] = 0x44B08000<32>
	Mem54[0x37FF1F7<32>:word32] = 0x44B08000<32>
	word32 a5_55 = Mem54[a3_41 + 116<i32>:word32]
	Mem58[(a3_41 & 0x7FFFFFFF<32> | 0x80000000<32>) + 116<i32>:word32] = a5_55
	word32 a4_61 = Mem58[a5_55 + 128<i32>:int32] & 0x7FFFFFFF<32> | 0x80000000<32>
	Mem62[a5_55 + 128<i32>:word32] = a4_61
	Mem65[(a5_55 | 128<i32>) + 76<i32>:word32] = Mem62[a5_55 + 76<i32>:word32]
	return a4_61
hal_machw_reset_exit:


word32 hal_machw_search_addr(word32 a0, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_cntrl_frame_handle
//      apm_auth_handler
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
hal_machw_search_addr_entry:
l2305D070:
	Mem16[0x44B000BC<32>:word32] = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem0[a0:byte], byte, word32)) | CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) << 16<i32>)
	Mem21[0x44B000C0<32>:word32] = CONVERT(Mem16[a0 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem16[a0 + 4<i32>:byte], byte, word32)
	Mem23[0x44B000C4<32>:word32] = 0x20000000<32>
l2305D0AC:
	word32 a5_26 = Mem23[0x44B000C4<32>:int32]
	branch a5_26 << 2<u32> < 0<32> l2305D0AC
l2305D0B8:
	word32 a0_29 = 255<i32>
	branch a5_26 << 3<u32> < 0<32> l2305D0CE
l2305D0C4:
	a0_29 = (a5_26 >>u 0x10<u32>) + 0xFFFFFFF8<32> & 255<i32>
l2305D0CE:
	a3Out = a5_26 << 2<u32>
	a4Out = a5_26 << 3<u32>
	return a0_29
hal_machw_search_addr_exit:


word32 hal_machw_monitor_mode(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_hw_config_handler
// MayUse:  a4:[0..31]
// LiveOut: a4
// Trashed: a3 a4 a5
// Preserved: sp
hal_machw_monitor_mode_entry:
l2305D0D0:
	Mem9[(a4 & 0xFFFFFFFE<32>) + 116<i32>:word32] = Mem0[a4 + 116<i32>:word32]
	word32 a4_11 = a4 & 0xFFFFFFFE<32> & 0xFFFFFFFD<32>
	Mem12[a4_11 + 116<i32>:word32] = Mem9[(a4 & 0xFFFFFFFE<32>) + 116<i32>:word32]
	word32 a5_13 = Mem12[a4_11 + 76<i32>:word32]
	Mem15[(a4_11 | 1792<i32>) + 76<i32>:word32] = a5_13
	Mem18[0x7FFFFFDE<32>:word32] = 0x4201E360<32>
	word32 a3_19 = Mem18[0x4201E364<32>:word32]
	Mem21[(a3_19 | 0x7FFFFFDE<32>) + 96<i32>:word32] = a5_13
	word32 a5_22 = Mem21[(a3_19 | 0x7FFFFFDE<32>) + 76<i32>:word32]
	Mem28[((a3_19 | 0x7FFFFFDE<32>) & 0xE3FFFFFF<32> | 0xC000000<32>) + 76<i32>:word32] = a5_22
l2305D112_thunk_blmac_key_sto_ram_reset_setf.constprop.12:
	return blmac_key_sto_ram_reset_setf.constprop.12(a5_22)
hal_machw_monitor_mode_exit:


word32 hal_machw_sleep_check(ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sleep
// MayUse: 
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t4
// Preserved: s0 sp
hal_machw_sleep_check_entry:
l2305D116:
	word32 a0_10 = Mem8[0x44B0808C<32>:int32]
	word32 a5_12 = 0<32>
l2305D136:
	word32 s0_35
	branch (1<32> << a5_12 & a0_10) == 0<32> l2305D18E
l2305D13E:
	word32 a3_21 = a5_12 << 2<u32>
	a3 = a3_21 + 0x44B00128<32>
	word32 a4_30 = -2000<i32> - Mem8[0x44B00120<32>:int32] + Mem8[a3_21 + 0x44B00128<32>:int32]
	branch a4_30 >= 0<32> l2305D18E
l2305D18E:
	a5_12 = a5_12 + 1<32>
	branch a5_12 != 9<32> l2305D136
l2305D194:
	s0_35 = 1<32>
l2305D156:
	a3 = Mem8[0x44B00120<32>:int32]
	s0_35 = 0<32>
	branch 0x1000388<32> - a3 + a4_30 >= 0<32> l2305D184
l2305D184:
	a3Out = a3
	return s0_35
hal_machw_sleep_check_exit:
l2305D16C:
	assert_err()


void hal_machw_gen_handler(word32 s0, word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 tp
// Preserved: s0 s1 sp
hal_machw_gen_handler_entry:
l2305D198:
	word32 s0_13 = s0 & a4
	Mem14[s0_13 + 112<i32>:word32] = Mem9[s0 + 116<i32>:word32]
	branch (s0_13 & 0x40001<32>) == 0<32> l2305D1BE
l2305D1B6:
	word32 a5_338
	a4 = ke_evt_set(0x400000<32>, a4, mstatus, out a5_338)
l2305D1BE:
	branch (s0_13 & 0x80002<32>) == 0<32> l2305D1D0
l2305D1C8:
	word32 a5_339
	a4 = ke_evt_set(0x200000<32>, a4, mstatus, out a5_339)
l2305D1D0:
	branch (s0_13 & 4<i32>) == 0<32> l2305D1F8
l2305D1D6:
	branch (Mem14[0x44B00038<32>:word32] & 0xF<32>) == 0<32> l2305D292
l2305D292:
	Mem42[0x44B0808C<32>:word32] = Mem14[0x44B0808C<32>:int32] & -33<i32>
	Mem46[0x44B08004<32>:word32] = Mem42[0x44B08004<32>:word32]
	word32 a5_340
	a4 = ke_evt_set(0x800000<32>, 0x44B08000<32>, mstatus, out a5_340)
l2305D1E0:
	word32 a5_342
	word32 a2_341
	assert_rec(a3, mstatus, out a2_341, out a3, out a4, out a5_342)
l2305D1F8:
	branch (s0_13 & 8<i32>) == 0<32> l2305D26C
l2305D1FE:
	word32 s1_67 = Mem66[0x44B08084<32>:int32]
	Mem68[0x44B08088<32>:word32] = s1_67
	branch (s1_67 & 256<i32>) == 0<32> l2305D218
l2305D210:
	word32 a5_343
	a4 = ke_evt_set(0x4000000<32>, a4, mstatus, out a5_343)
l2305D218:
	branch (s1_67 & 64<i32>) == 0<32> l2305D222
l2305D21E:
	a4 = rxl_timeout_int_handler()
l2305D222:
	branch (s1_67 & 128<i32>) == 0<32> l2305D230
l2305D228:
	word32 a5_348
	ke_evt_set(0x8000000<32>, a4, mstatus, out a5_348)
l2305D230:
	branch (s1_67 & 1<i32>) == 0<32> l2305D24E
l2305D236:
	word32 a5_351
	word32 a4_350
	word32 a2_349
	assert_rec(a3, mstatus, out a2_349, out a3, out a4_350, out a5_351)
l2305D24E:
	branch (s1_67 & 2<i32>) == 0<32> l2305D2BA
l2305D2BA:
	branch (s1_67 & 4<i32>) == 0<32> l2305D2D6
l2305D2D6:
	branch (s1_67 & 8<i32>) == 0<32> l2305D2F2
l2305D2F2:
	branch (s1_67 & 16<i32>) == 0<32> l2305D30E
l2305D30E:
	branch (s1_67 & 32<i32>) == 0<32> l2305D26C
l2305D314:
l2305D2F8:
l2305D2DC:
l2305D2C0:
l2305D254:
l2305D268:
	word32 a2_352
	word32 a4_353
	word32 a5_354
	assert_rec(a3, mstatus, out a2_352, out a3, out a4_353, out a5_354)
l2305D26C:
	branch (s0_13 & 128<i32>) == 0<32> l2305D32A
l2305D32A:
	branch (s0_13 & 256<i32>) == 0<32> l2305D346
l2305D346:
	branch s0_13 << 0x13<u32> >= 0<32> l2305D364
l2305D364:
	branch s0_13 << 0x12<u32> >= 0<32> l2305D382
l2305D382:
	branch s0_13 << 0x11<u32> >= 0<32> l2305D3A0
l2305D3A0:
	branch s0_13 << 0x10<u32> >= 0<32> l2305D3BE
l2305D3BE:
	branch s0_13 << 0xF<u32> >= 0<32> l2305D3DC
l2305D3DC:
	branch s0_13 << 0xE<u32> >= 0<32> l2305D3FA
l2305D3FA:
	branch s0_13 << 0xA<u32> >= 0<32> l2305D418
l2305D418:
	branch s0_13 << 9<u32> >= 0<32> l2305D436
l2305D436:
	branch s0_13 << 7<u32> >= 0<32> l2305D454
l2305D454:
	branch s0_13 << 6<u32> >= 0<32> l2305D472
l2305D472:
	branch s0_13 << 0xB<u32> >= 0<32> l2305D490
l2305D490:
	return
l2305D47A:
l2305D45C:
l2305D43E:
l2305D420:
l2305D402:
l2305D3E4:
l2305D3C6:
l2305D3A8:
l2305D38A:
l2305D36C:
l2305D34E:
l2305D330:
l2305D272:
l2305D286:
l2305D28E_thunk_assert_rec:
	word32 a5_347
	word32 a2_344
	word32 a4_346
	word32 a3_345
	assert_rec(a3, mstatus, out a2_344, out a3_345, out a4_346, out a5_347)
	return
hal_machw_gen_handler_exit:


word32 mm_rx_filter_set(word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_env_init
//      mm_hw_info_set
//      mm_hw_ap_info_set
//      mm_hw_ap_info_reset
// MayUse:  a4:[0..31]
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
mm_rx_filter_set_entry:
l2305D49A:
	word32 a5_8 = Mem0[Mem0[a4:word32] + 4<i32>:word32] | a4
	Mem10[a5_8 + 96<i32>:word32] = 0x44B00000<32>
	a5Out = a5_8
	return 0x44B00000<32>
mm_rx_filter_set_exit:


void element_notify_status_enabled()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
element_notify_status_enabled_entry:
l2305D4B0:
	return
element_notify_status_enabled_exit:


word32 blmac_ap_setf(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_hw_info_set
//      mm_hw_ap_info_set
//      mm_hw_ap_info_reset
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a4
// Trashed: a0 a4 a5
// Preserved: sp
blmac_ap_setf_entry:
l2305D4B4:
	word32 a4_5 = Mem0[a5 + 76<i32>:word32]
	Mem10[(a0 << 1<i32> | a5 & 0xFFFFFFFD<32>) + 76<i32>:word32] = a4_5
	return a4_5
blmac_ap_setf_exit:


word32 ascii_to_hex(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_add
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
ascii_to_hex_entry:
l2305D4C4:
	word32 a0_13 = a0 + -48<i32> & 255<i32>
	branch a0_13 <=u 9<32> l2305D4EA
l2305D4D4:
	word32 a5_14
	branch (a0 + -97<i32> & 255<i32>) >u 5<32> l2305D4EC
l2305D4EC:
	a0_13 = 0<32>
	branch (a0 + -65<i32> & 255<i32>) >u 5<32> l2305D4EA
l2305D4FA:
	a5_14 = a0 + -55<i32>
l2305D4E2:
	a5_14 = a0 + -87<i32>
l2305D4E6:
	a0_13 = a5_14 & 255<i32>
l2305D4EA:
	return a0_13
ascii_to_hex_exit:


void element_notify_time_last_received_set()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
element_notify_time_last_received_set_entry:
l2305D500:
	return
element_notify_time_last_received_set_exit:


word32 blmac_encr_cntrl_pack.constprop.8(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 dwArg0128, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      RemoveAPKeyInfo
//      mm_sec_machwaddr_wr
//      mm_sec_machwkey_wr
//      mm_sec_machwaddr_del
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] Stack +0128:[0..31]
// LiveOut: s0 s1 s2 s3 s4 s5
// Trashed: a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
blmac_encr_cntrl_pack.constprop.8_entry:
l2305D504:
	branch (a4 << 4<u32> & -241<i32>) == 0<32> l2305D550
l2305D550:
	branch (a5 << 2<i32> & -13<i32>) == 0<32> l2305D572
l2305D572:
	Mem63[0x44B000C4<32>:word32] = a0 << 31<i32> | a7 | a6 << 1<u32> | a5 << 2<i32> | a4 << 4<u32> | a3 << 8<u32> | a2 << 0x10<u32> | a1 << 0x1E<u32>
	0<32> = dwArg0128
	s1Out = a5 << 2<i32>
	s2Out = a6
	s3Out = a1 << 0x1E<u32>
	s4Out = dwArg78
	s5Out = a3 << 8<u32>
	return dwArgE4
blmac_encr_cntrl_pack.constprop.8_exit:
l2305D558:
	assert_err()
l2305D536:
	assert_err()


void element_notify_keepalive_received()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
element_notify_keepalive_received_entry:
l2305D5B0:
	return
element_notify_keepalive_received_exit:


word32 hal_machw_rx_duration(word32 a1, word32 a4, word32 mstatus, word32 dwArg38, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_check_beacon
// MayUse:  a1:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a4 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
hal_machw_rx_duration_entry:
l2305D5B4:
	word32 a0_13 = Mem11[a4 + 40<i32>:word32]
	word32 s1_19 = CONVERT(Mem11[(a4 >>u 12<i32> & 0xF<32>) + 0x2307E7FC<32>:byte], byte, word32)
	branch (s1_19 & -128<i32>) == 0<32> l2305D5F6
l2305D5F6:
	Mem31[0x44B08164<32>:word32] = s1_19
	Mem38[0x44B08160<32>:word32] = (a1 >>u 15<i32> & 1<32>) << 24<i32> | a1
	Mem39[0x44B08168<32>:word32] = 0x80000000<32>
	word32 a4_40 = 0x44B08000<32>
l2305D61A:
	branch Mem39[0x44B08168<32>:int32] << 1<u32> >= 0<32> l2305D61A
l2305D62A:
	word32 a0_51
	branch true l2305D65C
l2305D65C:
	a0_51 = CONVERT(SLICE(a0_13, word16, 0), word16, word32)
l2305D634:
	word32 a2_100
	word32 a3_101
	word32 a5_102
	assert_rec(0x89610000<32>, mstatus, out a2_100, out a3_101, out a4_40, out a5_102)
	a0_51 = 500<i32>
l2305D650:
	0<32> = dwArg38
	a0Out = a0_51
	a4Out = a4_40
	s2Out = a1
	return s1_19
hal_machw_rx_duration_exit:
l2305D5DC:
	assert_err()


word32 mm_env_max_ampdu_duration_set()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_hw_config_handler
//      mm_env_init
// MayUse: 
// LiveOut: a4
// Trashed: a2 a3 a4 a5
// Preserved: sp
mm_env_max_ampdu_duration_set_entry:
l2305D664:
	word32 a5_17 = 150<i32>
	branch CONVERT(SLICE(Mem0[0x44B00200<32>:int32] >>u 12<i32>, word16, 0), word16, word32) == 0<32> l2305D690
l2305D678:
	branch CONVERT(SLICE(Mem0[0x44B00200<32>:int32] >>u 12<i32>, word16, 0), word16, word32) >u 150<i32> l2305D690
l2305D686:
	a5_17 = CONVERT(SLICE(Mem0[0x44B00200<32>:int32] >>u 12<i32>, word16, 0), word16, word32)
l2305D690:
	Mem21[0x4201E368<32>:word16] = SLICE(a5_17, word16, 0)
	word32 a5_25 = 150<i32>
	branch CONVERT(SLICE(Mem21[0x44B00204<32>:int32] >>u 12<i32>, word16, 0), word16, word32) == 0<32> l2305D6CC
l2305D6B4:
	branch CONVERT(SLICE(Mem21[0x44B00204<32>:int32] >>u 12<i32>, word16, 0), word16, word32) >u 150<i32> l2305D6CC
l2305D6C2:
	a5_25 = CONVERT(SLICE(Mem21[0x44B00204<32>:int32] >>u 12<i32>, word16, 0), word16, word32)
l2305D6CC:
	Mem39[0x4201E36A<32>:word16] = SLICE(a5_25, word16, 0)
	word32 a5_42 = 150<i32>
	branch CONVERT(SLICE(Mem39[0x44B00208<32>:int32] >>u 12<i32>, word16, 0), word16, word32) == 0<32> l2305D6FC
l2305D6E4:
	branch CONVERT(SLICE(Mem39[0x44B00208<32>:int32] >>u 12<i32>, word16, 0), word16, word32) >u 150<i32> l2305D6FC
l2305D6F2:
	a5_42 = CONVERT(SLICE(Mem39[0x44B00208<32>:int32] >>u 12<i32>, word16, 0), word16, word32)
l2305D6FC:
	Mem56[0x4201E36C<32>:word16] = SLICE(a5_42, word16, 0)
	word32 a5_59 = 150<i32>
	branch CONVERT(SLICE(Mem56[0x44B0020C<32>:int32] >>u 12<i32>, word16, 0), word16, word32) == 0<32> l2305D72C
l2305D714:
	branch CONVERT(SLICE(Mem56[0x44B0020C<32>:int32] >>u 12<i32>, word16, 0), word16, word32) >u 150<i32> l2305D72C
l2305D722:
	a5_59 = CONVERT(SLICE(Mem56[0x44B0020C<32>:int32] >>u 12<i32>, word16, 0), word16, word32)
l2305D72C:
	Mem73[0x4201E36E<32>:word16] = SLICE(a5_59, word16, 0)
	Mem74[0x4201E370<32>:word16] = SLICE(a5_59, word16, 0)
	return 0x4201E360<32>
mm_env_max_ampdu_duration_set_exit:


word32 mm_env_init(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_init
// MayUse:  ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
mm_env_init_entry:
l2305D736:
	word32 t1_41
	word32 a0_42
	word32 a1_43
	word32 a2_44
	word32 a3_45
	word32 a4_46
	word32 a5_47
	word32 ra_18 = memset(ra, 0x4201E360<32>, 0<32>, 44<i32>, out t1_41, out a0_42, out a1_43, out a2_44, out a3_45, out a4_46, out a5_47)
	Mem23[0x4201E382<32>:word16] = 0x101<16>
	Mem26[0x4201E372<32>:word16] = 0<16>
	Mem27[0x4201E364<32>:word32] = 0<32>
	Mem28[0x7FFFFFDE<32>:word32] = 0x4201E360<32>
	word32 a5_48
	mm_rx_filter_set(0x7FFFFFDE<32>, out a5_48)
l2305D776_thunk_mm_env_max_ampdu_duration_set:
	mm_env_max_ampdu_duration_set()
	return ra_18
mm_env_init_exit:


word32 mm_init(word32 ra, word32 s0, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg9C, word32 dwArgAC, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0168, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_reset_req_handler
//      bl_init
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mm_init_entry:
l2305D77A:
	word32 a4_44
	word32 s2_50
	word32 a3_62
	word32 a0_110
	word32 a4_123
	word32 ra_151 = rxl_init(txl_cntrl_init(ps_init(td_init(sta_mgmt_init(vif_mgmt_init(mm_env_init(hal_machw_init(ra, s0, dwArg08, dwArg28, dwArg50, dwArg54, dwArg78, dwArg9C)), out a4_44, out s2_50), a4_44, s2_50, dwLoc08, dwArg18, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg88, dwArg8C, dwArgAC, out a3_62), a3_62, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg40, dwArg44, dwArg50, dwArg54, dwArg68, dwArg78, dwArg8C, dwArg9C), out a0_110), a0_110, dwArgF8, dwArg0168, out a4_123), a4_123, mstatus, dwArg20, dwArg24, dwArg48, dwArg6C, dwArg0108)
	mm_timer_init()
	word32 s0_195
	word32 ra_194 = chan_init(scan_init(ra_151, mstatus), dwArg0118, out s0_195)
	hal_dma_init()
l2305D7B2_thunk_mm_bcn_init:
	word32 a3_218
	word32 a4_219
	word32 ra_221 = mm_bcn_init(ra_194, out a3_218, out a4_219)
	s0Out = s0_195
	a3Out = a3_218
	a4Out = a4_219
	return ra_221
mm_init_exit:


word32 mm_active()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_monitor_enable_req_handler
//      mm_set_idle_req_handler
//      mm_start_req_handler
//      chan_goto_idle_cb
//      chan_tx_cfm
//      mm_reset
//      mm_back_to_host_idle
// MayUse: 
// LiveOut: a4
// Trashed: a0 a1 a4 a5
// Preserved: sp
mm_active_entry:
l2305D7B6:
	Mem5[0x68<32>:word32] = 0x44B00000<32>
l2305D7C4_thunk_ke_state_set:
	word32 s1_11
	word32 a0_12
	word32 a1_13
	word32 a2_14
	word32 a4_15
	word32 a5_16
	word32 s2_17
	word32 s3_18
	word32 s4_19
	ke_state_set(a0, a1, mstatus, out s1_11, out a0_12, out a1_13, out a2_14, out a4_15, out a5_16, out s2_17, out s3_18, out s4_19)
	return 48<i32>
mm_active_exit:


void mm_reset(word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_reset_evt
// MayUse:  mstatus:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mm_reset_entry:
l2305D7C8:
	word32 a0_7
	word32 a2_64
	word32 a4_65
	word32 s2_66
	ke_state_get(0<32>, dwArg28, out a0_7, out a2_64, out a4_65, out s2_66)
	branch a0_7 != 1<32> l2305D7E0
l2305D7E0:
l2305D7E8_thunk_ke_state_set:
	word32 s1_67
	word32 a0_68
	word32 a1_69
	word32 a2_70
	word32 a4_71
	word32 a5_72
	word32 s2_73
	word32 s3_74
	word32 s4_75
	ke_state_set(0<32>, 0<32>, mstatus, out s1_67, out a0_68, out a1_69, out a2_70, out a4_71, out a5_72, out s2_73, out s3_74, out s4_75)
	return
l2305D7D8:
l2305D7DC_thunk_mm_active:
	mm_active()
	return
mm_reset_exit:


void mm_tbtt_evt(word32 ra, word32 a4, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg48, word32 dwArg88, word32 dwArg8C, word32 dwArgBC, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0048:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00BC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: sp
mm_tbtt_evt_entry:
l2305D7EC:
	word32 s0_7 = Mem6[0x4201EEDC<32>:int32]
	branch (s0_7 & 0x600000<32>) != 0x600000<32> l2305D822
l2305D822:
	ke_evt_clear(s0_7 & 0x600000<32>, a4, mstatus)
	__csrrc(mstatus, 8<32>)
	txl_cntrl_halt_ac(4<32>)
	word32 s2_220
	word32 a1_218
	word32 mstatus_221
	word32 a5_219
	word32 s5_110
	word32 a4_163
	word32 s0_103 = txl_cntrl_flush_ac(4<32>, dwArg88, out a1_218, out a4_163, out a5_219, out s2_220, out s5_110, out mstatus_221)
	__csrrs(mstatus, 8<32>)
	word32 s1_104 = 2<32>
l2305D852:
	branch s0_103 != 0<32> l2305D864
l2305D864:
	branch CONVERT(Mem57[s0_103 + 86<i32>:byte], byte, word32) != s1_104 l2305D8A8
l2305D86C:
	word32 a5_62 = CONVERT(Mem57[s0_103 + 833<i32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem63[s0_103 + 833<i32>:byte] = SLICE(a5_62, byte, 0)
	branch a5_62 != 0<32> l2305D8A8
l2305D87C:
	Mem66[s0_103 + 833<i32>:byte] = SLICE(CONVERT(Mem63[s0_103 + 832<i32>:byte], byte, word32), byte, 0)
	word32 a3_74
	word32 s2_80
	word32 s3_81
	word32 a5_223
	s1_104 = vif_mgmt_bcn_to_prog(ra, s0_103, a4_163, mstatus, dwArgE8, out a3_74, out a5_223, out s2_80, out s3_81)
	s0_103 = Mem66[a3_74 + 64<i32>:word32]
	a4_163 = Mem66[s2_80 + 288<i32>:int32]
	word32 a5_88 = Mem66[s3_81 + 64<i32>:int32]
	branch a3_74 == 0<32> l2305D8A8
l2305D896:
	word32 a5_91 = (a5_88 << 5<i32>) + a4_163
	word32 s7_230
	word32 s4_228
	word32 a3_226
	word32 a1_224
	word32 s10_232
	word32 s9_231
	word32 s6_229
	word32 s3_227
	word32 a2_225
	ra = chan_tbtt_switch_update(ra, (CONVERT(Mem66[s0_103 + 830<i32>:uint16], uint16, word32) << 10<i32>) + a5_91, a3_74, a5_91, mstatus, s2, dwLoc10, dwArg88, dwArgD8, dwArgE8, dwArgF8, dwArg0158, out s0_103, out s1_104, out a1_224, out a2_225, out a3_226, out a4_163, out s3_227, out s4_228, out s5_110, out s6_229, out s7_230, out s9_231, out s10_232)
l2305D8A8:
	s0_103 = Mem120[s0_103:word32]
l2305D854:
l2305D860_thunk_mm_bcn_transmit:
	word32 s8_222
	mm_bcn_transmit(ra, s5_110, fflags, frm, mstatus, dwArg08, dwArg48, dwArg88, dwArg8C, dwArgBC, dwArgF8, dwArg0128, out s8_222)
	return
mm_tbtt_evt_exit:
l2305D80A:
	assert_err()


word32 mm_sec_machwaddr_wr(word32 a0, word32 a1, word32 dwArg0118, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_add
// MayUse:  a0:[0..31] a1:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a2 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: s0 sp
mm_sec_machwaddr_wr_entry:
l2305D8AC:
	Mem25[0x44B000BC<32>:word32] = CONVERT(Mem13[a0 + 0x4201A9D8<32>:uint16], uint16, word32) << 16<i32> | CONVERT(Mem13[a0 + 0x4201A9D6<32>:uint16], uint16, word32)
	Mem28[0x44B000C0<32>:word32] = CONVERT(Mem25[a0 + 0x4201A9DA<32>:uint16], uint16, word32)
	Mem29[0x44B000AC<32>:word32] = 0<32>
	Mem30[0x44B000B0<32>:word32] = 0<32>
	Mem31[0x44B000B4<32>:word32] = 0<32>
	Mem34[0x44B000B8<32>:word32] = 0<32>
	word32 s1_42
	word32 s2_43
	word32 s3_44
	word32 s4_45
	word32 s5_87
	word32 s0_41 = blmac_encr_cntrl_pack.constprop.8(0<32>, 1<32>, a0 + 8<i32> & 255<i32>, 0<32>, a1, 0<32>, 1<32>, 0<32>, dwArg0118, out s1_42, out s2_43, out s3_44, out s4_45, out s5_87)
l2305D910:
	branch Mem34[0x44B000C4<32>:int32] << 1<u32> < 0<32> l2305D910
l2305D91C:
	a0Out = s0_41
	a2Out = dwArg10
	s2Out = s2_43
	s3Out = s3_44
	s4Out = s4_45
	return s1_42
mm_sec_machwaddr_wr_exit:


word32 mm_sec_machwkey_wr(word32 ra, word32 a0, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_key_add_req_handler
//      add_key_to_mac
//      add_mfp_key_to_mac
//      mm_sta_add
// MayUse:  a0:[0..31] ra:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
mm_sec_machwkey_wr_entry:
l2305D926:
	word32 ra_176
	word32 s3_119
	word32 s0_109
	word32 s1_38
	word32 s2_15 = CONVERT(Mem13[a0 + 1<i32>:byte], byte, word32)
	word32 s3_18 = CONVERT(Mem13[a0 + 41<i32>:byte], byte, word32)
	branch s2_15 != 255<i32> l2305D9DA
l2305D9DA:
	branch s2_15 <=u 0xB<32> l2305D9F8
l2305D9F8:
	word32 s2_39
	ra_176 = sta_mgmt_add_key(ra, a0, s2_15 + 8<i32> & 255<i32>, out s0_109, out s1_38, out s2_39, out s3_119)
	Mem56[0x44B000BC<32>:word32] = CONVERT(Mem13[s2_39 + 0x4201A9D8<32>:uint16], uint16, word32) << 16<i32> | CONVERT(Mem13[s2_39 + 0x4201A9D6<32>:uint16], uint16, word32)
	Mem58[0x44B000C0<32>:word32] = CONVERT(Mem56[s2_39 + 0x4201A9DA<32>:uint16], uint16, word32)
l2305D9E0:
	assert_err()
l2305D944:
	word32 s0_62 = (s3_18 << 2<u32>) + CONVERT(Mem13[a0:byte], byte, word32)
	Mem65[0x44B000BC<32>:word32] = 0xFFFFFFFF<32>
	Mem66[0x44B000C0<32>:word32] = 0xFFFFFFFF<32>
	ra_176 = vif_mgmt_add_key(ra, a0, s0_62 & 255<i32>, out s0_109, out s1_38, out s3_119)
l2305D966:
	word32 a3_89 = CONVERT(Mem88[s1_38 + 40<i32>:byte], byte, word32)
	branch a3_89 >u 3<32> l2305DA38
l2305DA38:
	assert_err()
l2305D970:
	word32 a7_102 = CONVERT(Mem88[a3_89 + 0x23082830<32>:byte], byte, word32)
	word32 a3_103 = CONVERT(Mem88[a3_89 + 0x23082834<32>:byte], byte, word32)
l2305D98C:
	Mem107[0x44B000AC<32>:word32] = a3_89 + 0x23082830<32>
	Mem112[0x44B000B0<32>:word32] = a3_89 + 0x23082830<32>
	Mem115[0x44B000B4<32>:word32] = a3_89 + 0x23082830<32>
	word32 s1_116 = Mem115[a3_89 + 0x23082844<32>:word32]
	Mem117[0x44B000B8<32>:word32] = a3_89 + 0x23082830<32>
	word32 s1_127
	word32 s2_128
	word32 s3_129
	word32 s5_131
	word32 s4_199
	word32 s0_126 = blmac_encr_cntrl_pack.constprop.8(0<32>, 1<32>, s0_109, a3_103, s3_119, CONVERT(Mem117[s1_116 + 42<i32>:byte], byte, word32), 0<32>, a7_102, dwArg0108, out s1_127, out s2_128, out s3_129, out s4_199, out s5_131)
l2305D9BE:
	word32 a5_140 = Mem117[0x44B000C4<32>:int32]
	branch a5_140 << 1<u32> < 0<32> l2305D9BE
l2305D9CA:
	s0Out = s0_126
	s1Out = s1_127
	a0Out = s0_126
	a2Out = dwArg48
	a3Out = a5_140 << 1<u32>
	a4Out = 0x44B00000<32>
	a5Out = a5_140
	s2Out = s2_128
	s3Out = s3_129
	s4Out = dwArg04
	s5Out = s5_131
	return ra_176
mm_sec_machwkey_wr_exit:


word32 mm_sec_machwkey_del(word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_key_del_req_handler
//      apm_sta_remove
//      keyMgmtKeyGroupTxDone.isra.1
//      RemoveAPKeyInfo
//      mm_sta_del
// MayUse:  a0:[0..31]
// LiveOut: a2 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: s0 sp
mm_sec_machwkey_del_entry:
l2305DA56:
	branch a0 <=u 7<32> l2305DADE
l2305DADE:
	Mem13[0x44B000BC<32>:word32] = 0xFFFFFFFF<32>
	Mem14[0x44B000C0<32>:word32] = 0xFFFFFFFF<32>
	vif_mgmt_del_key(a0, a1)
l2305DA64:
	word32 a5_24 = a0 + -8<i32> & 255<i32>
	Mem34[0x44B000BC<32>:word32] = CONVERT(Mem7[a5_24 + 0x4201A9D8<32>:uint16], uint16, word32) << 16<i32> | CONVERT(Mem7[a5_24 + 0x4201A9D6<32>:uint16], uint16, word32)
	Mem36[0x44B000C0<32>:word32] = CONVERT(Mem34[a5_24 + 0x4201A9DA<32>:uint16], uint16, word32)
	sta_mgmt_del_key(a0)
l2305DA9E:
	Mem38[0x44B000AC<32>:word32] = 0<32>
	Mem39[0x44B000B0<32>:word32] = 0<32>
	Mem40[0x44B000B4<32>:word32] = 0<32>
	Mem41[0x44B000B8<32>:word32] = 0<32>
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg296 = <invalid>
	word32 s1_81
	word32 s2_82
	word32 s3_83
	word32 s4_84
	word32 s5_85
	blmac_encr_cntrl_pack.constprop.8(a0, a1, a2, a3, a4, a5, a6, a7, stackArg296, out s1_81, out s2_82, out s3_83, out s4_84, out s5_85)
l2305DACA:
	branch Mem41[0x44B000C4<32>:int32] << 1<u32> < 0<32> l2305DACA
l2305DAD6:
	a4Out = 0x44B00000<32>
	return dwArg10
mm_sec_machwkey_del_exit:


word32 mm_sec_machwaddr_del(word32 a0, word32 dwArg0118, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_del
// MayUse:  a0:[0..31] Stack +0118:[0..31]
// LiveOut: a4 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
mm_sec_machwaddr_del_entry:
l2305DB0C:
	Mem8[0x44B000BC<32>:word32] = 0xFFFFFFFF<32>
	Mem9[0x44B000C0<32>:word32] = 0xFFFFFFFF<32>
	Mem10[0x44B000AC<32>:word32] = 0<32>
	Mem11[0x44B000B0<32>:word32] = 0<32>
	Mem12[0x44B000B4<32>:word32] = 0<32>
	Mem15[0x44B000B8<32>:word32] = 0<32>
	word32 s3_31
	word32 s5_70
	word32 s4_69
	word32 s2_68
	word32 s1_67
	blmac_encr_cntrl_pack.constprop.8(0<32>, 1<32>, a0 + 8<i32> & 255<i32>, 0<32>, 0<32>, 0<32>, 0<32>, 0<32>, dwArg0118, out s1_67, out s2_68, out s3_31, out s4_69, out s5_70)
l2305DB4C:
	branch Mem15[0x44B000C4<32>:int32] << 1<u32> < 0<32> l2305DB4C
l2305DB58:
	s3Out = s3_31
	return 0x44B00000<32>
mm_sec_machwaddr_del_exit:


void mm_hw_idle_evt(word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mm_hw_idle_evt_entry:
l2305DB5E:
	ke_evt_clear(0x800000<32>, a4, mstatus)
l2305DB72_thunk_ke_state_set:
	word32 s1_31
	word32 a0_32
	word32 a1_33
	word32 a2_34
	word32 a4_35
	word32 a5_36
	word32 s2_37
	word32 s3_38
	word32 s4_39
	ke_state_set(0<32>, 0<32>, mstatus, out s1_31, out a0_32, out a1_33, out a2_34, out a4_35, out a5_36, out s2_37, out s3_38, out s4_39)
	return
mm_hw_idle_evt_exit:


word32 mm_hw_info_set(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vif_mgmt_register
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
mm_hw_info_set_entry:
l2305DB76:
	word32 a4_13 = blmac_ap_setf(0<32>, a5)
	word32 a5_15 = Mem10[a4_13 + 76<i32>:word32]
	Mem17[(a4_13 | 1<i32>) + 76<i32>:word32] = a5_15
	Mem19[0x11C<32>:word32] = a5_15
	Mem21[0x44B080A4<32>:word32] = 0<32>
	Mem22[0x44B080A8<32>:word32] = 0<32>
	Mem33[(CONVERT(Mem22[a0 + 3<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem22[a0 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem22[a0:byte], byte, word32)) | CONVERT(Mem22[a0 + 2<i32>:byte], byte, word32) << 16<i32>)) + 16<i32>:word32] = a5_15
	word32 a4_37 = CONVERT(Mem33[a0 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem33[a0 + 4<i32>:byte], byte, word32)
	Mem38[a4_37 + 20<i32>:word32] = a5_15
	Mem41[(a4_37 & -1793<i32>) + 76<i32>:word32] = Mem38[a4_37 + 76<i32>:word32]
	Mem47[0x4201E360<32>:word32] = 0x3503858C<32>
l2305DBEC_thunk_mm_rx_filter_set:
	word32 a5_50
	word32 a4_49 = mm_rx_filter_set(0x4201E000<32>, out a5_50)
	a5Out = a5_50
	return a4_49
mm_hw_info_set_exit:


void mm_hw_ap_info_set(word32 a3, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vif_mgmt_register
// MayUse:  a3:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: sp
mm_hw_ap_info_set_entry:
l2305DBF0:
	blmac_ap_setf(1<32>, a5)
	Mem14[0x4201E360<32>:word32] = 0x3507A58C<32>
	word32 a5_29
	mm_rx_filter_set(0x4201E000<32>, out a5_29)
	Mem20[0x40071<32>:word32] = 0x44B08000<32>
	Mem24[(a3 | 0x40001<32>) + 116<i32>:word32] = Mem20[a3 + 116<i32>:word32]
	return
mm_hw_ap_info_set_exit:


void mm_hw_ap_info_reset(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vif_mgmt_unregister
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
mm_hw_ap_info_reset_entry:
l2305DC26:
	blmac_ap_setf(0<32>, a5)
	Mem14[0x4201E360<32>:word32] = 0x3503858C<32>
	word32 a5_30
	mm_rx_filter_set(0x4201E000<32>, out a5_30)
	Mem20[0x40071<32>:word32] = 0x44B08000<32>
	Mem25[116<i32>:word32] = Mem20[0x40075<32>:word32]
	return
mm_hw_ap_info_reset_exit:


word32 mm_back_to_host_idle(word32 mstatus, word32 dwArg28, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_ctxt_op_evt
// MayUse:  mstatus:[0..31] Stack +0028:[0..31]
// LiveOut: s0 s2
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mm_back_to_host_idle_entry:
l2305DC62:
	word32 a0_7
	word32 s2_12
	word32 a2_72
	word32 a4_73
	ke_state_get(0<32>, dwArg28, out a0_7, out a2_72, out a4_73, out s2_12)
	branch a0_7 == 3<32> l2305DC8A
l2305DC8A:
	branch CONVERT(Mem6[0x4201E382<32>:byte], byte, word32) != 0<32> l2305DC9C
l2305DC9C:
l2305DCA4_thunk_ke_state_set:
	word32 s2_34
	word32 s1_74
	word32 a0_75
	word32 a1_76
	word32 a2_77
	word32 a4_78
	word32 a5_79
	word32 s3_80
	word32 s4_81
	word32 s0_32 = ke_state_set(0<32>, 0<32>, mstatus, out s1_74, out a0_75, out a1_76, out a2_77, out a4_78, out a5_79, out s2_34, out s3_80, out s4_81)
	s2Out = s2_34
	return s0_32
l2305DC94:
l2305DC98_thunk_mm_active:
	mm_active()
	s2Out = s2_12
	return s0
mm_back_to_host_idle_exit:
l2305DC72:
	assert_err()


word32 mm_force_idle_req(word32 ra, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg6C, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_goto_idle_cb
//      chan_tx_cfm
//      chan_ctxt_op_evt
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +006C:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a4 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mm_force_idle_req_entry:
l2305DCA8:
	__csrrc(mstatus, 8<32>)
	word32 a4_17
	word32 s5_95
	word32 ra_46 = txl_reset(rxl_reset(ra, hal_machw_reset(a4, dwArg18), mstatus, dwArg20, dwArg24, dwArg48, dwArg6C, dwArg0108, out a4_17), a4_17, mstatus, dwArg0118, out s5_95)
	word32 a4_65
	word32 s1_69
	word32 s2_70
	word32 s3_71
	word32 s4_72
	word32 a0_96
	word32 a1_97
	word32 a2_98
	word32 a5_99
	ke_state_set(0<32>, 3<32>, mstatus, out s1_69, out a0_96, out a1_97, out a2_98, out a4_65, out a5_99, out s2_70, out s3_71, out s4_72)
	Mem78[0x4201E372<32>:word16] = 0<16>
	__csrrs(mstatus, 8<32>)
	s1Out = s1_69
	a4Out = a4_65
	s2Out = s2_70
	s3Out = s3_71
	s4Out = s4_72
	return ra_46
mm_force_idle_req_exit:


word32 mm_sta_add(word32 ra, word32 s1, word32 a0, word32 a1, word32 a4, word32 a5, word32 s2, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_add_req_handler
//      me_sta_add_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a2 ra s0 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mm_sta_add_entry:
	word24 nLoc57_450 = SLICE(dwLoc58, word24, 8)
l2305DCD6:
	word32 a0_32
	word32 s3_38
	word32 s7_52
	word32 s4_187
	word32 s0_294
	word32 a2_199
	word32 ra_46 = sta_mgmt_register(ra, a0, a1, a4, a5, s2, dwLoc58, dwLoc10, dwLoc0C, dwArg18, s7, out s0_294, out a0_32, out a2_199, out s3_38, out s4_187, out s7_52)
	word32 s2_196 = a0_32
	branch a0_32 != 0<32> l2305DD42
l2305DCFA:
	word32 a0_64
	word32 s3_297
	word32 s1_295 = mm_sec_machwaddr_wr(CONVERT(Mem23[s3_38:byte], byte, word32), CONVERT(Mem23[s7_52 + 17<i32>:byte], byte, word32), dwArgB8, out a0_64, out a2_199, out s2_196, out s3_297, out s4_187)
	Mem82[s0_294:byte] = SLICE(a0_64, byte, 0)
	s0_294 = 0x4201BCF8<32>
	branch CONVERT(Mem82[s1_295 + 0x4201C326<32>:byte], byte, word32) != 0<32> l2305DD42
l2305DD28:
	branch CONVERT(Mem82[s1_295 + 0x4201C6B8<32>:byte], byte, word32) != 0<32> l2305DD5C
l2305DD5C:
	Mem94[0x4201C9F1<32>:byte] = SLICE(CONVERT(Mem82[s3_297:byte], byte, word32), byte, 0)
	s4_187 = 0x4201D000<32>
	branch (Mem94[s1_295 + 0x4201C6B8<32>:int32] & 0x12FFF800<32>) == 0<32> l2305DDE4
l2305DDE4:
	branch (CONVERT(Mem94[s1_295 + 0x4201C6B9<32>:byte], byte, word32) & 2<32>) == 0<32> l2305DD9A
l2305DDEC:
	word32 a3_107
	word32 a1_716
	word32 a5_719
	word32 a2_717
	word32 a4_718
	strlen(Mem94[0x4201CCF0<32>:int32] + 321<i32>, out a1_716, out a2_717, out a3_107, out a4_718, out a5_719)
	word32 s5_132
	word32 s6_133
	word32 s1_720
	word32 a1_722
	word32 a2_723
	word32 a0_721
	word32 a5_726
	word32 a3_724
	word32 a4_725
	word32 s2_728
	word32 s8_732
	word32 s9_733
	word32 s7_731
	word32 a4_742
	word32 a2_740
	word32 t1_737
	word32 a7_727
	word32 s4_730
	word32 s3_729
	word32 s10_734
	word32 s11_735
	word32 a3_741
	word32 t4_736
	word32 a1_739
	word32 a0_738
	word32 a5_743
	word32 ra_148 = memset(printf(ra_46, 0x2307E928<32>, a3_107, dwLoc58, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_720, out a0_721, out a1_722, out a2_723, out a3_724, out a4_725, out a5_726, out a7_727, out s2_728, out s3_729, out s4_730, out s5_132, out s6_133, out s7_731, out s8_732, out s9_733, out s10_734, out s11_735, out t4_736), fp + -92<i32>, 0<32>, 44<i32>, out t1_737, out a0_738, out a1_739, out a2_740, out a3_741, out a4_742, out a5_743)
	word32 a3_158
	word32 a5_747
	word32 a2_745
	word32 a4_746
	word32 a1_744
	word32 a0_157 = strlen(Mem94[s6_133:int32] + 321<i32>, out a1_744, out a2_745, out a3_158, out a4_746, out a5_747)
	word32 dwLoc58_451 = SEQ(nLoc57_450, SLICE(a0_157 & 255<i32>, byte, 0))
	branch (a0_157 & 255<i32>) == 5<32> l2305DE5E
l2305DE5E:
l2305DE50:
	branch (a0_157 & 255<i32>) != 0xD<32> l2305DE84
l2305DE84:
	branch (a0_157 & 255<i32>) == 0xA<32> l2305DEB4
l2305DEB4:
l2305DE8A:
	branch (a0_157 & 255<i32>) != 0x1A<32> l2305DEEE
l2305DEEE:
	word32 a4_179
	word32 s3_186
	word32 a3_770
	word32 a4_771
	word32 a3_758
	word32 a5_759
	word32 a7_760
	word32 s5_762
	word32 t4_769
	word32 s6_763
	word32 s11_768
	word32 s7_764
	word32 s9_766
	word32 s10_767
	word32 s8_765
	word32 s2_761
	word32 a2_757
	word32 a1_756
	word32 s1_754
	word32 a0_755
	sta_mgmt_unregister(printf(ra_148, 0x2307E940<32>, a3_158, dwLoc58_451, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_754, out a0_755, out a1_756, out a2_757, out a3_758, out a4_179, out a5_759, out a7_760, out s2_761, out s3_186, out s4_187, out s5_762, out s6_763, out s7_764, out s8_765, out s9_766, out s10_767, out s11_768, out t4_769), 0x4201BCF8<32>, CONVERT(Mem164[s3_186:byte], byte, word32), a4_179, out a2_199, out a3_770, out a4_771)
	s2_196 = 1<32>
l2305DE90:
l2305DE92:
	word32 s8_214 = a0_157 & 255<i32>
	branch (a0_157 & 1<i32>) == 0<32> l2305DEA4
l2305DEA0:
	s8_214 = a0_157 & 254<i32>
l2305DEA4:
	branch s8_214 != 0<32> l2305DEB8
l2305DEB8:
	word32 s7_221 = 0<32>
	word32 s5_222 = Mem211[s5_132:int32] + 321<i32>
l2305DEC2:
	s5_222 = s5_222 + 2<32>
	Mem244[(s7_221 >> 1<u32>) + (fp + -48<i32>) + 4060<i32>:byte] = SLICE((ascii_to_hex(CONVERT(Mem224[s5_222:byte], byte, word32)) << 4<i32>) + ascii_to_hex(CONVERT(Mem224[s5_222 + -1<i32>:byte], byte, word32)), byte, 0)
	s7_221 = s7_221 + 2<32>
	branch s7_221 < s8_214 l2305DEC2
l2305DEEC:
l2305DEA8:
l2305DE56:
l2305DE62:
	word32 a3_749
	word32 a5_751
	word32 a6_752
	word32 a7_753
	word32 a4_750
	word32 a2_748
	memcpy(fp + -84<i32>, Mem256[s5_132:int32] + 321<i32>, a0_157 & 255<i32>, out a2_748, out a3_749, out a4_750, out a5_751, out a6_752, out a7_753)
l2305DE74:
	word32 a0_285
	word32 a2_772
	word32 a3_773
	word32 a5_775
	word32 s5_776
	word32 a4_774
	mm_sec_machwkey_wr(ra_148, fp + -92<i32>, dwArgA8, out s0_294, out s1_295, out a0_285, out a2_772, out a3_773, out a4_774, out a5_775, out s2_196, out s3_297, out s4_187, out s5_776)
	Mem308[0x4200ECC0<32>:byte] = SLICE(a0_285, byte, 0)
l2305DD7A:
	branch CONVERT(Mem94[Mem94[0x4201CCF0<32>:int32] + 385<i32>:byte], byte, word32) == 0<32> l2305DDDE
l2305DDDE:
l2305DD92:
l2305DD96:
	s0_294 = set_psk(ra_46, mstatus, dwLoc28, dwArg18, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0118, out s1_295, out s2_196, out s3_297, out s4_187)
l2305DD9A:
	word32 a4_356
	a2_199 = s1_295 + 1496<i32>
	word32 a5_348 = s0_294 + a2_199
	branch (Mem349[a5_348 + 1000<i32>:int32] & 0x12000000<32>) == 0<32> l2305DF06
l2305DF06:
	branch (CONVERT(Mem349[a5_348 + 1001<i32>:byte], byte, word32) & 8<32>) == 0<32> l2305DDCC
l2305DF10:
	a4_356 = CONVERT(Mem349[a5_348 + 1007<i32>:byte], byte, word32)
l2305DDB2:
	a4_356 = CONVERT(Mem349[a5_348 + 1007<i32>:byte], byte, word32)
l2305DDC4:
	s0_294 = supplicantEnable(a4_356, s1, dwArgF8, dwArg0118, out s1_295, out a2_199, out s2_196, out s3_297, out s4_187)
l2305DDCC:
	branch CONVERT(Mem349[s1_295 + 1496<i32> + s0_294 + 86<i32>:byte], byte, word32) == 0<32> l2305DD2E
l2305DDDC:
l2305DD2E:
	s0_294 = s0_294 + (s1_295 + 1496<i32>)
	Mem407[s0_294 + 96<i32>:byte] = SLICE(CONVERT(Mem402[s3_297:byte], byte, word32), byte, 0)
	s2_196 = 0<32>
l2305DD42:
	s0Out = s0_294
	a0Out = s2_196
	a2Out = a2_199
	s4Out = s4_187
	s5Out = s4
	return dwArg68
mm_sta_add_exit:


word32 mm_sta_del(word32 ra, word32 s1, word32 a0, word32 s2, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg8C, word32 dwArgA8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_del_req_handler
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: s10 s11 s9 sp
mm_sta_del_entry:
l2305DF24:
	word32 s6_216 = CONVERT(Mem24[a0 + 0x4201A9D2<32>:byte], byte, word32)
	word32 s3_103 = a0
	branch CONVERT(Mem24[s6_216 + 0x4201C326<32>:byte], byte, word32) != 0<32> l2305E014
l2305E014:
	word32 a4_34 = CONVERT(Mem24[a0 + 0x4201A9D4<32>:byte], byte, word32)
	branch a4_34 != 1<32> l2305DFD8
l2305E01E:
	word32 a5_38 = CONVERT(Mem24[s6_216 + 0x4201C61A<32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem39[s6_216 + 0x4201C61A<32>:byte] = SLICE(a5_38, byte, 0)
	branch a5_38 != 0<32> l2305DFD8
l2305E02E:
	word32 s1_44 = CONVERT(Mem39[s6_216 + 0x4201C327<32>:byte], byte, word32) + 0xA<32> & 255<i32>
	word32 a0_49
	word32 a2_51
	word32 s1_58
	word32 s2_59
	word32 s0_337
	word32 a1_338
	word32 a3_339
	word32 a4_340
	word32 a5_341
	word32 a6_342
	word32 s3_343
	word32 s4_344
	word32 s8_345
	word32 ra_56 = ke_msg_alloc(ra, 73<i32>, 0xD<32>, 2<32>, a4_34, mstatus, dwLoc08, out s0_337, out s1_58, out a0_49, out a1_338, out a2_51, out a3_339, out a4_340, out a5_341, out a6_342, out s2_59, out s3_343, out s4_344, out s8_345)
	Mem68[s2_59 + (s1_44 + 432<i32>) + 28<i32>:byte] = 0<8>
	Mem69[a0_49:byte] = SLICE(s1_58, byte, 0)
	Mem70[a0_49 + 1<i32>:byte] = 0<8>
	word32 s1_346
	word32 a0_347
	word32 a1_348
	word32 a2_349
	word32 a3_350
	word32 a4_351
	word32 a5_352
	word32 s2_353
	word32 s3_354
	word32 s4_355
	word32 s8_356
	word32 s0_78 = ke_msg_send(a0_49, a2_51, mstatus, out s1_346, out a0_347, out a1_348, out a2_349, out a3_350, out a4_351, out a5_352, out s2_353, out s3_354, out s4_355, out s8_356)
	word32 s0_357
	word32 s1_358
	word32 a1_359
	word32 a2_360
	word32 a4_361
	word32 s4_362
	word32 s5_363
	word32 s6_364
	word32 s7_365
	word32 s9_366
	word32 s10_367
	word32 s11_368
	ra = apm_tx_int_ps_clear(ra_56, s0_78, CONVERT(Mem70[s0_78 + 87<i32>:byte], byte, word32) + 0xA<32> & 255<i32>, s1_44 + 432<i32>, mstatus, s2, dwLoc10, dwArg48, dwArg58, dwArg8C, dwArgF8, out s0_357, out s1_358, out a1_359, out a2_360, out a4_361, out s3_103, out s4_362, out s5_363, out s6_364, out s7_365, out s9_366, out s10_367, out s11_368)
l2305DF66:
	Mem116[s6_216 + 0x4201C330<32>:byte] = 0xFF<8>
	branch CONVERT(Mem116[s6_216 + 0x4201C6B8<32>:byte], byte, word32) == 0<32> l2305DFD8
l2305DF72:
	word32 s1_122 = 0x4201BCF8<32>
	branch (Mem116[s6_216 + 0x4201C6B8<32>:int32] & 0x12FFF800<32>) == 0<32> l2305DFF6
l2305DFF6:
	branch (CONVERT(Mem116[s6_216 + 0x4201C6B9<32>:byte], byte, word32) & 2<32>) == 0<32> l2305DFCA
l2305DFFE:
	word32 a0_126 = CONVERT(Mem116[0x4200DCC0<32>:byte], byte, word32)
	branch a0_126 == 255<i32> l2305DFCA
l2305E00E:
	word32 a4_369
	mm_sec_machwkey_del(a0_126, out a4_369)
l2305DF84:
	word32 a4_328
	mm_sec_machwkey_del(CONVERT(Mem116[0x4201C9F4<32>:byte], byte, word32), out a4_328)
	word32 a4_329
	mm_sec_machwkey_del(CONVERT(Mem116[0x4201C9F3<32>:byte], byte, word32), out a4_329)
	word32 a4_161
	mm_sec_machwkey_del(CONVERT(Mem116[0x4201C9F5<32>:byte], byte, word32), out a4_161)
	word32 s2_173
	word32 a5_336
	word32 a3_334
	word32 a4_335
	word32 a1_332
	word32 a2_333
	word32 t1_330
	word32 a0_331
	ra = memset(supplicantDisable(ra, a4_161, mstatus, dwArg0118, dwArg0138, dwArg0158, out s2_173), Mem116[s2_173 + 8<i32>:int32] + 4<32>, 0<32>, 34<i32>, out t1_330, out a0_331, out a1_332, out a2_333, out a3_334, out a4_335, out a5_336)
	s1_122 = remove_psk(ra, dwArgD8, dwArgE8, dwArgF8, dwArg0128, dwArg0138, dwArg0158, out s3_103, out s6_216)
l2305DFCA:
	Mem226[s1_122 + (s6_216 + 1496<i32>) + 1000<i32>:byte] = 0<8>
l2305DFD8:
	word32 s3_244
	word32 a4_237 = mm_sec_machwaddr_del(s3_103, dwArgF8, out s3_244)
	0<32> = dwArgA8
l2305DFF2_thunk_sta_mgmt_unregister:
	word32 a3_266
	word32 a4_267
	word32 a2_370
	word32 ra_269 = sta_mgmt_unregister(ra, s1, s3_244, a4_237, out a2_370, out a3_266, out a4_267)
	a3Out = a3_266
	a4Out = a4_267
	return ra_269
mm_sta_del_exit:


word32 mm_cfg_element_keepalive_timestamp_update(word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_cntrl_frame_handle
// MayUse:  a4:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a2 a4 a5
// Preserved: sp
mm_cfg_element_keepalive_timestamp_update_entry:
l2305E06E:
	word32 a5_19
	word32 a0_6 = xTaskGetTickCount(out a5_19)
	word32 a5_10 = Mem5[a4 + 36<i32>:word32]
	Mem11[a0_6 + 40<i32>:word32] = a5_10
	Mem13[a4 + 0x25<32>:word32] = a5_10
	a5Out = a5_10
	return a4 + 1<32>
mm_cfg_element_keepalive_timestamp_update_exit:


word32 mm_send_connection_loss_ind(word32 ra, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg10, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ps_enable_cfm
//      ps_disable_cfm
//      mm_ap_probe_cfm
//      mm_bcn_transmitted
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31]
// LiveOut: a2 a4 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
mm_send_connection_loss_ind_entry:
l2305E08C:
	word32 a0_16
	word32 s0_24
	word32 s1_62
	word32 a1_63
	word32 a2_64
	word32 a3_65
	word32 a4_66
	word32 a5_67
	word32 a6_68
	word32 s2_69
	word32 s3_70
	word32 s4_71
	word32 s8_72
	word32 ra_23 = ke_msg_alloc(ra, 67<i32>, 6<32>, 1<32>, a4, mstatus, dwArg08, out s0_24, out s1_62, out a0_16, out a1_63, out a2_64, out a3_65, out a4_66, out a5_67, out a6_68, out s2_69, out s3_70, out s4_71, out s8_72)
	Mem35[a0_16:byte] = SLICE(CONVERT(Mem13[s0_24 + 87<i32>:byte], byte, word32), byte, 0)
l2305E0B0_thunk_ke_msg_send:
	word32 a2_41
	word32 a4_43
	word32 s1_47
	word32 a0_73
	word32 a1_74
	word32 a3_75
	word32 a5_76
	word32 s2_77
	word32 s3_78
	word32 s4_79
	word32 s8_80
	ke_msg_send(a0_16, dwArg10, mstatus, out s1_47, out a0_73, out a1_74, out a2_41, out a3_75, out a4_43, out a5_76, out s2_77, out s3_78, out s4_79, out s8_80)
	s1Out = s1_47
	a2Out = a2_41
	a4Out = a4_43
	return ra_23
mm_send_connection_loss_ind_exit:


void mm_ap_probe_cfm(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg08, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
mm_ap_probe_cfm_entry:
l2305E0B4:
	branch a1 << 8<u32> >= 0<32> l2305E0C2
l2305E0C2:
l2305E0C2_thunk_mm_send_connection_loss_ind:
	word32 s1_63
	word32 a2_64
	word32 a4_65
	mm_send_connection_loss_ind(ra, a1 << 8<u32>, mstatus, dwArg08, dwArg10, out s1_63, out a2_64, out a4_65)
	return
l2305E0BC:
	Mem27[a0 + 116<i32>:byte] = 0<8>
	return
mm_ap_probe_cfm_exit:


word32 mm_check_rssi(word32 ra, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg74, word32 dwArgB4, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_check_beacon
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0074:[0..31] Stack +00B4:[0..31] Stack +0128:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 tp
// Preserved: sp
mm_check_rssi_entry:
l2305E0C6:
	word32 s0_116
	word32 s6_21 = CONVERT(Mem19[a0 + 117<i32>:int8], int8, int32)
	word32 s1_101 = CONVERT(Mem19[a0 + 118<i32>:int8], int8, int32)
	word32 s5_23 = CONVERT(Mem19[a0 + 119<i32>:byte], byte, word32)
	word32 s2_106 = CONVERT(Mem19[a0 + 120<i32>:byte], byte, word32)
	Mem28[a0 + 117<i32>:byte] = SLICE(a1, byte, 0)
	word32 s3_109 = a1
	word32 a5_37
	word32 a4_130 = bl60x_current_time_us(fp + -40<i32>, out a5_37)
	branch s6_21 == 0<32> l2305E134
l2305E10A:
	a4_130 = a3 - Mem34[0x4200E430<32>:int32]
	s0_116 = dwArg74
	word32 a5_46 = a5_37 - dwArgB4 - CONVERT(a3 <u a4_130, bool, word32)
	branch a5_46 > 0<32> l2305E134
l2305E126:
	branch a5_46 != 0<32> l2305E162
l2305E128:
	branch a4_130 <=u 0x1E8480<32> l2305E162
l2305E134:
	word32 a6_305
	word32 s8_306
	word32 a0_59
	word32 a5_64
	word32 s0_67
	word32 s2_69
	word32 s3_70
	word32 s4_71
	word32 a1_301
	word32 s1_300
	word32 a2_302
	word32 a3_303
	word32 a4_304
	ra = ke_msg_alloc(ra, 87<i32>, 0xD<32>, 3<32>, a4_130, mstatus, dwLoc18, out s0_67, out s1_300, out a0_59, out a1_301, out a2_302, out a3_303, out a4_304, out a5_64, out a6_305, out s2_69, out s3_70, out s4_71, out s8_306)
	word32 a4_77 = CONVERT(Mem34[s0_67 + 87<i32>:byte], byte, word32)
	Mem78[a0_59 + 1<i32>:byte] = SLICE(s2_69, byte, 0)
	Mem79[a0_59 + 2<i32>:byte] = SLICE(s3_70, byte, 0)
	Mem80[a0_59:byte] = SLICE(a4_77, byte, 0)
	Mem83[s4_71:word32] = a4_77
	Mem84[s4_71 + 4<i32>:word32] = a5_64
	word32 a0_307
	word32 a1_308
	word32 a2_309
	word32 a3_310
	word32 a5_311
	word32 s4_312
	word32 s8_313
	s0_116 = ke_msg_send(a0_59, dwArgB4, mstatus, out s1_101, out a0_307, out a1_308, out a2_309, out a3_310, out a4_130, out a5_311, out s2_106, out s3_109, out s4_312, out s8_313)
l2305E162:
	branch s1_101 == 0<32> l2305E1A6
l2305E164:
	word32 a5_105 = CONVERT(SLICE(s5_23, byte, 0), byte, int32)
	branch s2_106 != 0<32> l2305E1BA
l2305E1BA:
	branch s6_21 >= s3_109 l2305E178
l2305E1BE:
	s1_101 = CONVERT(s1_101 + a5_105 < s3_109, bool, word32)
	s2_106 = s1_101 ^ 1<i32>
l2305E16E:
	branch s3_109 >= s6_21 l2305E178
l2305E172:
	s1_101 = s1_101 - a5_105
	s2_106 = CONVERT(s3_109 < s1_101, bool, word32)
l2305E178:
	branch CONVERT(Mem118[s0_116 + 120<i32>:byte], byte, word32) == s2_106 l2305E1A2
l2305E180:
	word32 a0_133
	word32 a2_135
	word32 s0_141
	word32 s2_143
	word32 s3_144
	word32 s1_314
	word32 a1_315
	word32 a3_316
	word32 a4_317
	word32 a5_318
	word32 a6_319
	word32 s4_320
	word32 s8_321
	ra = ke_msg_alloc(ra, 87<i32>, 0xD<32>, 3<32>, a4_130, mstatus, dwLoc18, out s0_141, out s1_314, out a0_133, out a1_315, out a2_135, out a3_316, out a4_317, out a5_318, out a6_319, out s2_143, out s3_144, out s4_320, out s8_321)
	word32 a4_151 = CONVERT(Mem118[s0_141 + 87<i32>:byte], byte, word32)
	Mem152[a0_133 + 1<i32>:byte] = SLICE(s2_143, byte, 0)
	Mem153[a0_133 + 2<i32>:byte] = SLICE(s3_144, byte, 0)
	Mem154[a0_133:byte] = SLICE(a4_151, byte, 0)
	word32 a0_322
	word32 a1_323
	word32 a2_324
	word32 a3_325
	word32 a4_326
	word32 a5_327
	word32 s4_328
	word32 s8_329
	s0_116 = ke_msg_send(a0_133, a2_135, mstatus, out s1_101, out a0_322, out a1_323, out a2_324, out a3_325, out a4_326, out a5_327, out s2_106, out s3_109, out s4_328, out s8_329)
l2305E1A2:
	Mem173[s0_116 + 120<i32>:byte] = SLICE(s2_106, byte, 0)
l2305E1A6:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_101
	s2Out = s2_106
	s3Out = s3_109
	s4Out = dwArg78
	s5Out = s5_23
	s6Out = s6_21
	return ra
mm_check_rssi_exit:


word32 mm_send_csa_traffic_ind(word32 ra, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg10, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_check_beacon
//      mm_sta_tbtt
//      me_beacon_check
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31]
// LiveOut: a3 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
mm_send_csa_traffic_ind_entry:
l2305E1CA:
	word32 a0_20
	word32 s0_28
	word32 s1_29
	word32 a1_73
	word32 a2_74
	word32 a3_75
	word32 a4_76
	word32 a5_77
	word32 a6_78
	word32 s2_79
	word32 s3_80
	word32 s4_81
	word32 s8_82
	word32 ra_27 = ke_msg_alloc(ra, 89<i32>, 0xD<32>, 2<32>, a4, mstatus, dwArg08, out s0_28, out s1_29, out a0_20, out a1_73, out a2_74, out a3_75, out a4_76, out a5_77, out a6_78, out s2_79, out s3_80, out s4_81, out s8_82)
	Mem38[a0_20:byte] = SLICE(s1_29, byte, 0)
	Mem39[a0_20 + 1<i32>:byte] = SLICE(s0_28, byte, 0)
l2305E1F4_thunk_ke_msg_send:
	word32 a3_47
	word32 s1_52
	word32 s2_53
	word32 s3_54
	word32 s4_55
	word32 s8_56
	word32 a0_83
	word32 a1_84
	word32 a2_85
	word32 a4_86
	word32 a5_87
	s0Out = ke_msg_send(a0_20, dwArg10, mstatus, out s1_52, out a0_83, out a1_84, out a2_85, out a3_47, out a4_86, out a5_87, out s2_53, out s3_54, out s4_55, out s8_56)
	s1Out = s1_52
	a3Out = a3_47
	s2Out = s2_53
	s3Out = s3_54
	s4Out = s4_55
	s8Out = s8_56
	return ra_27
mm_send_csa_traffic_ind_exit:


word32 mm_check_beacon(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 s10, word32 fflags, word32 frm, word32 mstatus, word32 dwArg24, word32 dwArg28, word32 dwArg5C, word32 dwArg64, word32 dwArg78, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, word32 dwArg010C, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_cntrl_evt
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +010C:[0..31] Stack +0148:[0..31]
// LiveOut: a0 ra s1 s10 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 tp
// Preserved: sp t6
mm_check_beacon_entry:
l2305E1F8:
	word32 a0_31 = Mem29[a5 + 8<i32>:word32]
	word32 s7_117 = CONVERT(Mem29[a0_31 + 28<i32>:uint16], uint16, word32)
	word32 a5_37 = Mem29[a4:word32]
	Mem39[a1 + 116<i32>:byte] = 0<8>
	Mem42[a4 + 1<32>:word32] = a5_37
	word32 s5_104 = a0_31
	branch CONVERT(Mem42[a1 + 122<i32>:byte], byte, word32) == 0<32> l2305E250
l2305E242:
	word32 s0_60
	word32 s1_678
	word32 s2_679
	word32 s3_680
	word32 s8_682
	word32 s4_681
	ra = mm_send_csa_traffic_ind(ra, a4 + 1<32>, mstatus, dwLoc48, s10, out s0_60, out s1_678, out a3, out s2_679, out s3_680, out s4_681, out s8_682)
	Mem70[s0_60 + 122<i32>:byte] = 0<8>
l2305E250:
	word32 a4_73 = Mem72[0x44B00120<32>:int32]
	word32 s0_125 = Mem72[a4_73 + 108<i32>:word32]
	branch 0x1C9C380<32> - a4_73 + a4_73 >= 0<32> l2305E288
l2305E26A:
	branch CONVERT(Mem72[0x4201E383<32>:byte], byte, word32) == 0<32> l2305E288
l2305E274:
	word32 a0_91
	word32 s1_100
	word32 s4_688
	word32 s6_689
	word32 a4_684
	word32 a5_685
	word32 s2_686
	word32 s3_687
	ra = txl_frame_send_null_frame(ra, CONVERT(Mem72[s0_125 + 96<i32>:byte], byte, word32), 0<32>, fflags, frm, mstatus, dwLoc08, dwArg28, dwArg5C, dwArg78, dwArg98, dwArgB8, dwArg0148, out s0_125, out s1_100, out a0_91, out a3, out a4_684, out a5_685, out s2_686, out s3_687, out s4_688, out s5_104, out s6_689, out s7_117)
	branch a0_91 != 0<32> l2305E288
l2305E282:
	Mem120[Mem72[s1_100 + 288<i32>:int32] + 108<i32>:word32] = s0_125
l2305E288:
	word32 s0_143
	word32 s1_144
	word32 s2_145
	word32 s3_146
	word32 s5_148
	word32 s6_149
	word32 s4_147
	word32 ra_142 = mm_check_rssi(ra, s0_125, CONVERT(Mem123[s5_104 + 51<i32>:int8], int8, int32), a3, mstatus, dwArg24, dwArg64, dwArgD8, out s0_143, out s1_144, out s2_145, out s3_146, out s4_147, out s5_148, out s6_149)
	word32 a4_683
	word32 a0_158 = co_crc32(s2_145 + 32<i32>, 4<32>, 0<32>, out a4_683)
	Mem167[s6_149:word32] = 0<32>
	word32 s8_165 = s2_145 + 36<i32>
	word32 s1_166 = CONVERT(SLICE(s1_144, word16, 0), word16, word32)
	word32 a5_169 = 5<32>
	word32 a4_170 = 0xFFFFFFFE<32>
l2305E2B4:
	branch s1_166 >u 1<32> l2305E3FC
l2305E3FC:
	word32 s9_175 = CONVERT(Mem174[s8_165 + 1<i32>:byte], byte, word32)
	word32 a3_176 = CONVERT(Mem174[s8_165:byte], byte, word32)
	word32 s10_177 = s8_165 + 2<i32>
	branch s9_175 + 1<i32> >= s1_166 l2305E2B8
l2305E410:
	branch a3_176 != a5_169 l2305E428
l2305E428:
	a0_158 = co_crc32(s10_177, s9_175, a0_158, out a4_170)
	a5_169 = 5<32>
l2305E414:
	Mem196[s6_149:word32] = s8_165
l2305E418:
	s1_166 = CONVERT(SLICE(s1_166 + (a4_170 - s9_175), word16, 0), word16, word32)
	s8_165 = s10_177 + s9_175
l2305E2B8:
	Mem210[a0_158 + 112<i32>:word32] = s0_143
	word32 a4_243 = CONVERT(Mem210[s2_145 + 30<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem210[s2_145 + 29<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem210[s2_145 + 28<i32>:byte], byte, word32))
	word32 s9_218 = CONVERT(Mem210[s3_146 + 22<i32>:uint16], uint16, word32)
	word32 s3_232 = CONVERT(Mem210[s2_145 + 27<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem210[s2_145 + 26<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem210[s2_145 + 25<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem210[s2_145 + 24<i32>:byte], byte, word32)))
	word32 s10_237 = Mem210[s5_148 + 32<i32>:int32]
	word32 s8_247 = CONVERT(Mem210[s2_145 + 31<i32>:byte], byte, word32) << 24<i32> | a4_243
	branch CONVERT(Mem210[s0_143 + 92<i32>:uint16], uint16, word32) != 0<32> l2305E330
l2305E31C:
	word32 a5_249 = Mem210[s6_149:int32]
	branch a5_249 == 0<32> l2305E330
l2305E324:
	branch CONVERT(Mem210[a5_249 + 2<i32>:byte], byte, word32) != 0<32> l2305E330
l2305E32C:
l2305E330:
	word32 a0_268
	word32 a4_272
	word32 s2_690
	hal_machw_rx_duration(s7_117, a4_243, mstatus, dwLoc18, out a0_268, out a4_272, out s2_690)
	word32 a0_280
	word32 s2_287
	word32 a4_691
	word32 s1_286 = hal_machw_rx_duration(0x18<32>, a4_272, mstatus, dwLoc18, out a0_280, out a4_691, out s2_287)
	word32 a1_297
	word32 a3_692
	word32 a5_693
	word32 a0_296 = __udivdi3(s3_232, s8_247, s1_286, s1_286 >> 0x1F<u32>, out a1_297, out a3_692, out a5_693)
	word32 a5_309 = s3_232 - a0_280
	word32 a0_313 = CONVERT(a0_296 <u s1_286, bool, word32)
	word32 s8_311 = s8_247 - CONVERT(s3_232 <u a5_309, bool, word32)
	word32 a4_312 = a0_296 + s1_286
	word32 a1_314 = a1_297 + s1_286 + a0_313
	branch a1_314 <u s8_311 l2305E378
l2305E370:
	branch s8_311 != a1_314 l2305E37A
l2305E374:
	branch a4_312 >=u a5_309 l2305E37A
l2305E378:
	a5_309 = a4_312
l2305E37A:
	word32 a5_348 = a5_309 + (s2_287 + s1_286) - ((s3_232 - s10_237) + (a0_268 - a0_280)) - (s9_218 + s2_287)
	word32 a4_347 = 0xFF000380<32> - Mem210[0x44B00120<32>:int32]
	word32 a3_349 = a5_348 + -400<i32>
	branch a5_348 + a4_347 >= 0<32> l2305E3B2
l2305E3B0:
	a3_349 = a5_348 + -400<i32> + s1_286
l2305E3B2:
	word32 a5_356 = Mem210[0x44B080A4<32>:int32]
	word32 s0_358 = Mem210[a5_356 + 36<i32>:word32]
	word32 a1_360 = Mem210[0x44B00120<32>:int32] - a5_356 + a3_349
	branch a1_360 == a5_356 l2305E3D4
l2305E3CC:
	word32 a4_698
	word32 a5_699
	word32 s2_700
	word32 a2_696
	word32 s1_694
	word32 a1_695
	word32 s8_702
	word32 a3_697
	word32 s3_701
	mm_timer_set(ra_142, s0_358 + 24<i32>, a1_360, a4_347, mstatus, dwArgB8, out s1_694, out a0_313, out a1_695, out a2_696, out a3_697, out a4_698, out a5_699, out s2_700, out s3_701, out s4_147, out s8_702)
l2305E3D4:
	0<32> = dwArg010C
	s1Out = dwLoc4C
	a0Out = CONVERT(a0_313 - s4_147 != 0<32>, bool, word32)
	s9Out = s9_218
	s10Out = s10_237
	return dwLoc08
mm_check_beacon_exit:


void mm_sta_tbtt(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg48, word32 dwArg78, word32 dwArg98, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0148, word32 dwArg0168, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mm_sta_tbtt_entry:
l2305E43A:
	branch CONVERT(Mem0[a0 + 88<i32>:byte], byte, word32) == 0<32> l2305E50C
l2305E50C:
	return
l2305E440:
	word32 a5_13 = CONVERT(Mem12[a0 + 121<i32>:byte], byte, word32)
	word32 s0_14 = a0
	branch a5_13 == 0<32> l2305E47C
l2305E450:
	word32 a5_16 = a5_13 + 0xFFFFFFFF<32> & 255<i32>
	Mem17[a0 + 121<i32>:byte] = SLICE(a5_16, byte, 0)
	branch a5_16 >u 1<32> l2305E46C
l2305E46C:
	branch a5_16 != 2<32> l2305E47C
l2305E472:
	word32 a3_370
	word32 s2_371
	word32 s3_372
	word32 s4_373
	word32 s8_374
	ra = mm_send_csa_traffic_ind(ra, 2<32>, mstatus, dwLoc08, dwArg00, out s0_14, out s1, out a3_370, out s2_371, out s3_372, out s4_373, out s8_374)
l2305E47C:
	word32 a4_61
	word32 a3_76
	word32 a5_78
	word32 s0_98
	word32 s10_367
	word32 s7_365
	word32 s9_366
	word32 s6_364
	word32 s5_363
	word32 s4_362
	word32 s3_361
	word32 a4_360
	word32 a3_359
	word32 a2_358
	word32 a1_357
	word32 s1_356
	word32 s3_355
	word32 s2_354
	word32 s8_353
	word32 s4_352
	word32 s3_351
	word32 s2_350
	word32 a3_348
	word32 a5_349
	word32 a1_346
	word32 a2_347
	word32 s1_344
	word32 a0_345
	word32 ra_97 = chan_tbtt_switch_update(ra, vif_mgmt_bcn_to_prog(ra, mm_timer_set(ra, s0_14 + 24<i32>, s1 + Mem42[s1 + 4<i32>:word32], CONVERT(Mem42[s0_14 + 96<i32>:byte], byte, word32) + 432<i32>, mstatus, dwArgF8, out s1_344, out a0_345, out a1_346, out a2_347, out a3_348, out a4_61, out a5_349, out s2_350, out s3_351, out s4_352, out s8_353), a4_61, mstatus, dwArgF8, out a3_76, out a5_78, out s2_354, out s3_355), a3_76, a5_78, mstatus, dwLoc08, dwArg00, dwArg98, dwArgE8, dwArgF8, dwArg0108, dwArg0168, out s0_98, out s1_356, out a1_357, out a2_358, out a3_359, out a4_360, out s3_361, out s4_362, out s5_363, out s6_364, out s7_365, out s9_366, out s10_367)
	word32 a5_116
	word32 a3_368
	word32 a4_369
	branch chan_is_on_channel(s0_98, out a3_368, out a4_369, out a5_116) == 0<32> l2305E502
l2305E4B8:
	word32 s0_119 = Mem42[a5_116 + 4<i32>:word32]
	Mem122[(a5_116 | 1<i32>) + 4<i32>:word32] = s0_119
	word32 a5_125 = CONVERT(Mem122[s0_119 + 116<i32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem126[s0_119 + 116<i32>:byte] = SLICE(a5_125, byte, 0)
	branch a5_125 <=u 100<i32> l2305E4F0
l2305E4F0:
	branch a5_125 != 100<i32> l2305E502
l2305E502:
	return
l2305E4F4:
l2305E4FE_thunk_chan_bcn_detect_start:
	word32 s0_387
	word32 a3_388
	word32 s3_389
	chan_bcn_detect_start(ra_97, s0, mstatus, out s0_387, out a3_388, out s3_389)
	return
l2305E4D6:
	word32 a0_156 = CONVERT(Mem126[s0_119 + 96<i32>:byte], byte, word32)
l2305E4EC_thunk_txl_frame_send_null_frame:
	word32 s0_375
	word32 s1_376
	word32 a0_377
	word32 a3_378
	word32 a4_379
	word32 a5_380
	word32 s2_381
	word32 s3_382
	word32 s4_383
	word32 s5_384
	word32 s6_385
	word32 s7_386
	txl_frame_send_null_frame(ra_97, a0_156, 0x2305E0B4<32>, fflags, frm, mstatus, dwArg48, dwArg78, dwArgAC, dwArgC8, dwArgE8, dwArg0108, dwArg0198, out s0_375, out s1_376, out a0_377, out a3_378, out a4_379, out a5_380, out s2_381, out s3_382, out s4_383, out s5_384, out s6_385, out s7_386)
	return
l2305E460:
l2305E468_thunk_vif_mgmt_switch_channel:
	vif_mgmt_switch_channel(ra, 1<32>, s2, mstatus, dwArg08, dwArg18, dwArg78, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0148)
	return
mm_sta_tbtt_exit:


word32 mm_get_rsn_wpa_ie(word32 a0, word32 a1, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      keyMgmtFormatWpaRsnIe
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: s0 sp
mm_get_rsn_wpa_ie_entry:
l2305E50E:
	word32 a5_19 = CONVERT(Mem12[a0 + 0x4201A9D2<32>:byte], byte, word32)
	word32 a4_26
	word32 a2_47
	word32 a3_48
	word32 a5_49
	word32 a6_50
	word32 a7_51
	memcpy(a1, a5_19 + 0x4201C6C1<32>, CONVERT(Mem12[a5_19 + 0x4201C6E1<32>:byte], byte, word32), out a2_47, out a3_48, out a4_26, out a5_49, out a6_50, out a7_51)
	word32 a0_39 = CONVERT(Mem12[a5_19 + 0x4201C6E1<32>:byte], byte, word32)
	a4Out = a4_26
	return a0_39
mm_get_rsn_wpa_ie_exit:


word32 mm_tim_update_proceed(word32 ra, word32 a0, word32 mstatus, word32 dwArg00, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_tim_update
//      mm_bcn_transmitted
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31]
// LiveOut: a4 a5 ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
mm_tim_update_proceed_entry:
l2305E55C:
	word32 a4_18
	word32 a3_9 = CONVERT(Mem7[a0:uint16], uint16, word32)
	word32 a5_11 = CONVERT(Mem7[a0 + 3<i32>:byte], byte, word32)
	word32 t3_12 = CONVERT(Mem7[a0 + 2<i32>:byte], byte, word32)
	branch a3_9 != 0<32> l2305E5B0
l2305E5B0:
	word32 a6_22 = a3_9 >>u 3<u32> & 255<i32>
	word32 a7_24 = a6_22 + (a5_11 + 0x42045264<32>)
	word32 a1_26 = CONVERT(Mem7[a7_24:byte], byte, word32)
	word32 a3_28 = 1<32> << (a3_9 & 7<i32>)
	a4_18 = (a5_11 << 3<u32>) + 0x42045360<32>
	word32 t1_30 = a3_28 & 255<i32> & a1_26
	branch t3_12 == 0<32> l2305E6B0
l2305E6B0:
	branch t1_30 == 0<32> l2305E58E
l2305E6B4:
	Mem36[a7_24:byte] = SLICE(~a3_28 & a1_26, byte, 0)
	word32 a7_42 = CONVERT(Mem36[a5_11 + 0x4201C60C<32>:uint16], uint16, word32) + 0xFFFFFFFF<32> << 16<i32>
	Mem44[a5_11 + 0x4201C60C<32>:word16] = SLICE(a7_42 >>u 0x10<u32>, word16, 0)
	branch a7_42 >>u 0x10<u32> == 0<32> l2305E7AC
l2305E7AC:
	Mem46[a5_11 + 0x4201C60A<32>:word16] = 6<16>
	Mem51[a5_11 + 0x4201C614<32>:word16] = 0xFF<16>
	word32 a2_54 = CONVERT(Mem51[a5_11 + 0x4201C60A<32>:byte], byte, word32)
	Mem56[a4_18 + 0x1004<32>:byte] = 0<8>
	Mem58[a4_18 + 0x1001<32>:byte] = SLICE(a2_54 + 0xFFFFFFFE<32>, byte, 0)
	Mem62[a4_18 + 0x11<32>:word32] = a5_11 + 0x42045AB8<32>
	Mem69[CONVERT(Mem62[a0 + 3<i32>:byte], byte, word32) + 0x42045A80<32>:word32] = a5_11 + 0x42045AB8<32>
	a4_18 = CONVERT(Mem69[a5_11 + 0x4201C615<32>:byte], byte, word32)
	Mem72[a5_11 + 0x42045264<32> + a4_18 + 32<i32>:word32] = a5_11 + 0x42045AB8<32>
l2305E6E8:
	branch CONVERT(Mem44[a5_11 + 0x4201C614<32>:byte], byte, word32) == (a6_22 & 254<i32>) l2305E766
l2305E766:
	word32 a2_78 = CONVERT(Mem77[a5_11 + 0x4201C614<32>:byte], byte, word32)
	branch a2_78 == 251<i32> l2305E77A
l2305E76E:
	branch CONVERT(Mem77[a2_78 + (a5_11 + 0x42045264<32>):byte], byte, word32) == 0<32> l2305E760
l2305E760:
	Mem84[a5_11 + 0x4201C614<32>:byte] = SLICE(a2_78 + 1<32>, byte, 0)
l2305E77A:
	Mem96[a5_11 + 0x4201C614<32>:byte] = SLICE(a2_78 & 254<i32>, byte, 0)
	Mem102[(a2_78 & 254<i32>) + (a5_11 + 0x42045264<32>) + 28<i32>:word32] = a5_11 + 0x42045AB8<32>
l2305E6F8:
	branch CONVERT(Mem108[a5_11 + 0x4201C615<32>:byte], byte, word32) != a6_22 l2305E732
l2305E70A:
	word32 a2_115 = CONVERT(Mem114[a5_11 + 0x4201C615<32>:byte], byte, word32)
	word32 a6_117 = a2_115 + (a5_11 + 0x42045264<32>)
	branch a2_115 == 0<32> l2305E71C
l2305E714:
	branch CONVERT(Mem114[a6_117:byte], byte, word32) == 0<32> l2305E7A4
l2305E7A4:
	Mem120[a5_11 + 0x4201C615<32>:byte] = SLICE(a2_115 + 0xFFFFFFFF<32>, byte, 0)
l2305E71C:
	Mem129[a5_11 + 0x42045AD8<32>:word32] = a6_117
l2305E732:
	word32 a3_143 = CONVERT(SLICE(CONVERT(Mem137[a5_11 + 0x4201C615<32>:byte], byte, word32) + 6<32> - CONVERT(Mem137[a5_11 + 0x4201C614<32>:byte], byte, word32), word16, 0), word16, word32)
	Mem144[a5_11 + 0x4201C60A<32>:word16] = SLICE(a3_143, word16, 0)
	Mem152[a4_18 + 1<i32>:byte] = SLICE(a3_143 + 0xFFFFFFFE<32>, byte, 0)
	Mem154[a4_18 + 4<i32>:byte] = SLICE(CONVERT(Mem152[a5_11 + 0x4201C614<32>:byte], byte, word32), byte, 0)
l2305E5F6:
	branch t1_30 != 0<32> l2305E58E
l2305E5FA:
	Mem159[a7_24:byte] = SLICE(a3_28 & 255<i32> | a1_26, byte, 0)
	word32 t1_164 = CONVERT(Mem159[a5_11 + 0x4201C614<32>:byte], byte, word32)
	Mem166[a5_11 + 0x4201C60C<32>:word16] = SLICE(CONVERT(Mem159[a5_11 + 0x4201C60C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	branch a6_22 >=u t1_164 l2305E646
l2305E630:
	Mem170[a5_11 + 0x4201C614<32>:byte] = SLICE(a6_22 & 254<i32>, byte, 0)
	Mem175[a5_11 + 0x42045264<32> + (a6_22 & 254<i32>) + 28<i32>:word32] = a5_11 + 0x42045AB8<32>
l2305E646:
	branch CONVERT(Mem181[a5_11 + 0x4201C615<32>:byte], byte, word32) >=u a6_22 l2305E66A
l2305E658:
	Mem184[a5_11 + 0x4201C615<32>:byte] = SLICE(a6_22, byte, 0)
	Mem190[a5_11 + 0x42045AD8<32>:word32] = a7_24
l2305E66A:
	word32 a2_202 = CONVERT(SLICE(CONVERT(Mem196[a5_11 + 0x4201C615<32>:byte], byte, word32) + 6<32> - CONVERT(Mem196[a5_11 + 0x4201C614<32>:byte], byte, word32), word16, 0), word16, word32)
	Mem203[a5_11 + 0x4201C60A<32>:word16] = SLICE(a2_202, word16, 0)
	Mem207[a4_18 + 1<i32>:byte] = SLICE(a2_202 + 0xFFFFFFFE<32>, byte, 0)
	Mem210[a4_18 + 4<i32>:byte] = SLICE(CONVERT(Mem207[a5_11 + 0x4201C614<32>:byte], byte, word32), byte, 0)
	Mem217[a4_18 + 16<i32>:word32] = a5_11 + 0x42045AB8<32>
	Mem218[a5_11 + 0x42045AD0<32>:word32] = a5_11 + 0x42045AB8<32>
	a4_18 = a5_11 + 0x42045AB8<32>
l2305E572:
	a4_18 = a5_11 + 0x4201C2D0<32>
	branch t3_12 == 0<32> l2305E5AA
l2305E5AA:
	Mem224[a5_11 + 0x4201C616<32>:byte] = 0<8>
l2305E588:
	Mem226[a5_11 + 0x4201C616<32>:byte] = 1<8>
l2305E58E:
	word32 s2_363
	word32 a2_361
	word32 s1_359
	word32 a0_360
	word32 a3_362
	word32 s4_365
	word32 s8_366
	word32 s3_364
	word32 s0_277
	word32 ra_276 = ke_msg_send_basic(ra, 66<i32>, CONVERT(Mem236[a0 + -4<i32>:uint16], uint16, word32), a4_18, mstatus, dwLoc08, dwArg00, out s0_277, out s1_359, out a0_360, out a2_361, out a3_362, out s2_363, out s3_364, out s4_365, out s8_366)
l2305E5A6_thunk_ke_msg_free:
	word32 a2_356
	word32 a3_357
	word32 s4_358
	word32 a4_293
	word32 a5_294
	word32 s1_297
	word32 s2_298
	ke_msg_free(s0_277 + -12<i32>, mstatus, out s1_297, out a2_356, out a3_357, out a4_293, out a5_294, out s2_298, out s4_358)
	s1Out = s1_297
	a4Out = a4_293
	a5Out = a5_294
	s2Out = s2_298
	return ra_276
mm_tim_update_proceed_exit:


word32 mm_bcn_init(word32 ra, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_init
// MayUse:  ra:[0..31]
// LiveOut: a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
mm_bcn_init_entry:
l2305E808:
	word32 a3_15
	word32 a4_16
	word32 t1_38
	word32 a0_39
	word32 a1_40
	word32 a2_41
	word32 a5_42
	word32 ra_18 = memset(ra, 0x4201E38C<32>, 0<32>, 36<i32>, out t1_38, out a0_39, out a1_40, out a2_41, out a3_15, out a4_16, out a5_42)
	Mem24[0x42044120<32>:word32] = 0x4201E38C<32>
	Mem27[0x2305EC08<32>:word32] = 0x4201E38C<32>
l2305E846_thunk_co_list_init:
	co_list_init(0x4201E3A8<32>)
	a3Out = a3_15
	a4Out = a4_16
	return ra_18
mm_bcn_init_exit:


word32 mm_bcn_init_vif(word32 ra, word32 a0, word32 dwArg38, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vif_mgmt_register
// MayUse:  a0:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
mm_bcn_init_vif_entry:
l2305E84A:
	word32 a1_13 = CONVERT(Mem11[a0 + 87<i32>:byte], byte, word32)
	word32 s0_40
	word32 s2_42
	word32 ra_39 = txl_frame_init_desc(ra, a0 + 96<i32>, a1_13 + 0x420456B8<32>, a1_13 + 0x42045C98<32>, out s0_40, out s2_42)
	Mem57[s2_42:word32] = CONVERT(Mem11[s0_40 + 87<i32>:byte], byte, word32) + 0x42045A18<32>
	word32 s1_58 = CONVERT(Mem57[s0_40 + 87<i32>:byte], byte, word32)
	Mem66[s0_40 + 835<i32>:byte] = 0<8>
	Mem67[s0_40 + 828<i32>:word16] = 0<16>
	Mem68[s0_40 + 838<i32>:byte] = 0<8>
	Mem74[s0_40 + 826<i32>:word16] = 6<16>
	Mem76[s0_40 + 836<i32>:word16] = 0xFF<16>
	word32 a4_63 = (s1_58 << 3<u32>) + 0x42045360<32>
	Mem82[a4_63 + 17<i32>:word32] = s1_58 + 0x42045AB8<32>
	Mem85[s1_58 + 0x42045AB8<32>:word32] = 0xCAFEFADE<32>
	Mem86[a4_63 + 8<i32>:word32] = s1_58 + 0x42045AB8<32>
	Mem87[s1_58 + 0x42045AC8<32>:word32] = 0<32>
	Mem91[s1_58 + 0x42045A80<32>:word32] = s1_58 + 0x42045AB8<32>
	Mem92[a4_63:byte] = 5<8>
	Mem94[a4_63 + 1<i32>:byte] = 4<8>
	word32 a3_95 = CONVERT(Mem94[s0_40 + 835<i32>:byte], byte, word32)
	Mem96[a4_63 + 4<i32>:byte] = 0<8>
	Mem97[a4_63 + 2<i32>:byte] = SLICE(a3_95, byte, 0)
	Mem99[a4_63 + 3<i32>:byte] = 1<8>
	Mem101[a4_63 + 5<i32>:byte] = 0xFF<8>
	Mem102[s1_58 + 0x42045ACC<32>:word32] = 0xCAFEFADE<32>
	word32 a4_103 = CONVERT(Mem102[s0_40 + 837<i32>:byte], byte, word32)
	Mem104[s1_58 + 0x42045A94<32>:word32] = s1_58 + 0x42045AB8<32>
	Mem106[a4_103 + (s1_58 + 0x42045264<32>) + 32<i32>:word32] = s1_58 + 0x42045AB8<32>
	word32 a3_110
	word32 t1_139
	word32 a0_140
	word32 a1_141
	word32 a2_142
	word32 a4_143
	word32 a5_144
	word32 ra_113 = memset(ra_39, s1_58 + 0x42045264<32>, 0<32>, 252<i32>, out t1_139, out a0_140, out a1_141, out a2_142, out a3_110, out a4_143, out a5_144)
	Mem116[s1_58 + 0x42045A7C<32>:word32] = 0xCAFEFADE<32>
	Mem117[s1_58 + 0x42045A80<32>:word32] = 0<32>
	Mem118[s1_58 + 0x42045A8C<32>:word32] = 0<32>
	word32 a5_119 = Mem118[s0_40 + 204<i32>:int32]
	Mem120[a5_119 + 36<i32>:word32] = 0<32>
	Mem121[a5_119 + 60<i32>:word32] = 0<32>
	Mem122[a5_119 + 16<i32>:word32] = 0<32>
	Mem125[s0_40 + 812<i32>:word32] = 0x2305EDBC<32>
	Mem126[s0_40 + 816<i32>:word32] = s0_40
	0<32> = dwArg38
	a3Out = a3_110
	return ra_113
mm_bcn_init_vif_exit:


void mm_tim_update(word32 ra, word32 a0, word32 mstatus, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_tim_update_req_handler
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
mm_tim_update_entry:
l2305E99E:
	word32 a5_5 = Mem0[0x4201E390<32>:int32]
	branch a5_5 == 0<32> l2305E9B8
l2305E9B8:
l2305E9B8_thunk_mm_tim_update_proceed:
	word32 s1_68
	word32 a4_69
	word32 a5_70
	word32 s2_71
	mm_tim_update_proceed(ra, a0, mstatus, dwArg00, out s1_68, out a4_69, out a5_70, out s2_71)
	return
l2305E9A8:
l2305E9B4_thunk_co_list_push_back:
	word32 a2_67
	co_list_push_back(a0 + -12<i32>, a5_5, out a2_67)
	return
mm_tim_update_exit:


word32 mm_bcn_transmit(word32 ra, word32 s5, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg48, word32 dwArg88, word32 dwArg8C, word32 dwArgBC, word32 dwArgF8, word32 dwArg0128, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_tbtt_evt
//      mm_bcn_change
// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0048:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00BC:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: s2 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: sp
mm_bcn_transmit_entry:
l2305E9BC:
	word32 s0_173 = Mem25[0x4201C8B0<32>:int32]
	word32 s2_175 = 0x4201E38C<32>
	branch Mem25[0x4201E390<32>:word32] == 0<32> l2305EA02
l2305EA02:
	branch CONVERT(Mem25[0x4201E395<32>:byte], byte, word32) == 0<32> l2305EA26
l2305EA26:
	Mem40[0x4201E394<32>:byte] = 0<8>
	word32 s5_297 = 0x42045360<32>
	word32 s3_176 = 0x4201BC90<32>
	word32 s4_177 = 0x4201E210<32>
l2305EA4A:
	branch s0_173 == 0<32> l2305EA0E
l2305EA4C:
	branch CONVERT(Mem46[s0_173 + 86<i32>:byte], byte, word32) != 2<32> l2305EBB8
l2305EA56:
	branch CONVERT(Mem46[s0_173 + 834<i32>:byte], byte, word32) == 0<32> l2305EBB8
l2305EA5E:
	branch CONVERT(Mem46[s0_173 + 833<i32>:byte], byte, word32) != CONVERT(Mem46[s0_173 + 832<i32>:byte], byte, word32) l2305EBB8
l2305EA6A:
	word32 a4_100
	word32 a5_59 = (CONVERT(Mem46[s0_173 + 87<i32>:byte], byte, word32) << 3<i32>) + s5_297
	word32 a1_52 = CONVERT(Mem46[s0_173 + 826<i32>:uint16], uint16, word32)
	word32 a2_61 = CONVERT(Mem46[a5_59 + 4<i32>:byte], byte, word32)
	Mem62[CONVERT(Mem46[s0_173 + 824<i32>:uint16], uint16, word32) + a1_52 + 0x20<32>:word32] = Mem46[s0_173 + 204<i32>:int32]
	word32 a4_68 = CONVERT(Mem62[s3_176 + 84<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem70[s3_176 + 84<i32>:word16] = SLICE(a4_68 >>u 16<i32>, word16, 0)
	Mem72[a1_52 + 22<i32>:word16] = SLICE(a4_68 >>u 16<i32> << 4<i32>, word16, 0)
	word32 a4_73 = CONVERT(Mem72[s0_173 + 835<i32>:byte], byte, word32)
	Mem74[a5_59 + 2<i32>:byte] = SLICE(a4_73, byte, 0)
	branch a4_73 != 0<32> l2305EBBC
l2305EBBC:
	a4_100 = a2_61 & 254<i32>
	branch (CONVERT(Mem74[s0_173 + 838<i32>:byte], byte, word32) & 2<32>) == 0<32> l2305EAE4
l2305EBC8:
	a4_100 = a2_61 | 1<i32>
l2305EAAE:
	branch CONVERT(Mem74[s0_173 + 838<i32>:byte], byte, word32) != 0<32> l2305EAD8
l2305EAB4:
	a4_100 = a2_61 & 254<i32>
	branch Mem74[s4_177 + 28<i32>:int32] == 0<32> l2305EADC
l2305EAD8:
	a4_100 = a2_61 | 1<i32>
l2305EADC:
	Mem99[s0_173 + 835<i32>:byte] = SLICE(CONVERT(Mem74[a5_59 + 3<i32>:byte], byte, word32), byte, 0)
l2305EAE4:
	word32 a4_102 = a4_100 | 1<i32>
	Mem104[a5_59 + 4<i32>:byte] = SLICE(a4_102, byte, 0)
	Mem108[s0_173 + 835<i32>:byte] = SLICE(CONVERT(Mem104[s0_173 + 835<i32>:byte], byte, word32) + 0xFFFFFFFF<32>, byte, 0)
	word32 a5_109 = CONVERT(Mem108[s0_173 + 839<i32>:byte], byte, word32)
	branch a5_109 == 0<32> l2305EB34
l2305EAFC:
	word32 a2_111 = CONVERT(Mem108[s0_173 + 840<i32>:byte], byte, word32)
	word32 a5_112 = a5_109 + 0xFFFFFFFF<32> & 255<i32>
	Mem113[s0_173 + 839<i32>:byte] = SLICE(a5_112, byte, 0)
	branch a2_111 == 0<32> l2305EB26
l2305EB0C:
	Mem116[a4_102 + a2_111:byte] = SLICE(a5_112, byte, 0)
	a4_102 = CONVERT(Mem116[s0_173 + 841<i32>:byte], byte, word32)
	branch a4_102 == 0<32> l2305EB26
l2305EB1A:
	Mem121[a5_112 + a4_102:byte] = SLICE(CONVERT(Mem116[s0_173 + 839<i32>:byte], byte, word32), byte, 0)
l2305EB26:
	word32 s7_124 = CONVERT(Mem123[s0_173 + 839<i32>:byte], byte, word32)
	branch s7_124 != 0<32> l2305EBCE
l2305EBCE:
	word32 a3_707
	word32 a1_706
	word32 a0_146
	word32 a2_148
	word32 s8_159
	word32 s0_704
	word32 a6_710
	word32 s2_711
	word32 s1_705
	word32 a4_708
	word32 a5_709
	word32 s3_712
	word32 s4_713
	ra = ke_msg_alloc(ra, 78<i32>, 0xD<32>, 2<32>, a4_102, mstatus, dwLoc18, out s0_704, out s1_705, out a0_146, out a1_706, out a2_148, out a3_707, out a4_708, out a5_709, out a6_710, out s2_711, out s3_712, out s4_713, out s8_159)
	Mem164[a0_146:byte] = SLICE(s8_159, byte, 0)
	Mem165[a0_146 + 1<i32>:byte] = SLICE(s7_124, byte, 0)
	word32 s1_714
	word32 a4_719
	word32 a1_716
	word32 a0_715
	word32 s8_721
	word32 a2_717
	word32 a3_718
	word32 a5_720
	s0_173 = ke_msg_send(a0_146, a2_148, mstatus, out s1_714, out a0_715, out a1_716, out a2_717, out a3_718, out a4_719, out a5_720, out s2_175, out s3_176, out s4_177, out s8_721)
	branch CONVERT(Mem165[s0_173 + 839<i32>:byte], byte, word32) != 0<32> l2305EB34
l2305EBF2:
l2305EB2E:
	Mem185[s0_173 + 839<i32>:byte] = 1<8>
l2305EB34:
	word32 a4_703
	tpc_update_frame_tx_power(ra, s0_173, fflags, frm, out a4_703)
	word32 a4_223
	branch chan_is_on_operational_channel(out a4_223) == 0<32> l2305EBB8
l2305EB44:
	word32 s7_228 = CONVERT(Mem227[s0_173 + 87<i32>:byte], byte, word32)
	word32 a0_238
	word32 a2_240
	word32 a1_724
	word32 a3_725
	word32 s0_722
	word32 a5_727
	word32 a4_726
	word32 s1_723
	word32 s4_731
	word32 a6_728
	word32 s2_729
	word32 s3_730
	word32 s8_732
	word32 ra_245 = ke_msg_alloc(ra, 74<i32>, 0xD<32>, 3<32>, a4_223, mstatus, dwLoc18, out s0_722, out s1_723, out a0_238, out a1_724, out a2_240, out a3_725, out a4_726, out a5_727, out a6_728, out s2_729, out s3_730, out s4_731, out s8_732)
	Mem257[a0_238:byte] = SLICE(s7_228 + 0xA<32> & 255<i32>, byte, 0)
	Mem258[a0_238 + 1<i32>:byte] = 0<8>
	Mem259[a0_238 + 2<i32>:byte] = 0<8>
	word32 a3_263
	word32 s1_733
	word32 a0_734
	word32 s4_741
	word32 a5_738
	word32 a1_735
	word32 a2_736
	word32 a4_737
	word32 s3_740
	word32 s2_739
	word32 s8_742
	word32 s0_267 = ke_msg_send(a0_238, a2_240, mstatus, out s1_733, out a0_734, out a1_735, out a2_736, out a3_263, out a4_737, out a5_738, out s2_739, out s3_740, out s4_741, out s8_742)
	Mem279[s0_267 + 143<i32>:byte] = SLICE(CONVERT(Mem259[s0_267 + 87<i32>:byte], byte, word32), byte, 0)
	Mem281[s0_267 + 144<i32>:byte] = 0xFF<8>
	word32 s10_750
	word32 s11_751
	word32 s9_749
	word32 s7_748
	word32 a0_282
	word32 s6_298
	word32 s1_743
	word32 a1_744
	word32 a3_745
	word32 a4_746
	word32 a5_747
	ra = txl_frame_push(ra_245, s0_267, 4<32>, a3_263, 0xFFFFFFFF<32>, mstatus, dwArg08, s5, dwArg88, dwArgBC, out s0_173, out s1_743, out a0_282, out a1_744, out a3_745, out a4_746, out a5_747, out s2_175, out s3_176, out s4_177, out s5_297, out s6_298, out s7_748, out s9_749, out s10_750, out s11_751)
	branch a0_282 == 0<32> l2305EB8E
l2305EB84:
	Mem308[s2_175 + 4<i32>:word32] = Mem281[s2_175 + 4<i32>:int32] + 1<32>
l2305EB8E:
	word32 s1_316 = CONVERT(Mem310[s0_173 + 87<i32>:byte], byte, word32) + 0x1BA<32> + s6_298
	branch (CONVERT(Mem310[s1_316 + 50<i32>:byte], byte, word32) & 2<32>) == 0<32> l2305EBB8
l2305EBA6:
	Mem320[0x3D<32>:word32] = s1_316
	word32 a2_754
	word32 a1_753
	word32 s6_757
	word32 a6_756
	word32 a0_752
	word32 a3_755
	word32 s10_760
	word32 s11_761
	word32 s7_758
	word32 s9_759
	word32 s1_331
	ra = sta_mgmt_send_postponed_frame(ra, s0_173, s1_316, s5_297, mstatus, dwArg48, s5, dwArg8C, dwArgF8, out s0_173, out s1_331, out a0_752, out a1_753, out a2_754, out a3_755, out a6_756, out s2_175, out s3_176, out s4_177, out s5_297, out s6_757, out s7_758, out s9_759, out s10_760, out s11_761)
	Mem352[s1_331 + 52<i32>:word32] = 0<32>
l2305EBB8:
	s0_173 = Mem354[s0_173:word32]
l2305EA08:
	Mem357[0x4201E394<32>:byte] = 1<8>
l2305EA0E:
	0<32> = dwArg0128
	s8Out = s5
	return s2_175
mm_bcn_transmit_exit:
l2305E9EA:
	assert_err()


word32 mm_bcn_updated(word32 ra, word32 a4, word32 a5, word32 s2, word32 s3, word32 s5, word32 s6, word32 fflags, word32 frm, word32 mstatus, word32 dwArg18, word32 dwArg38, word32 dwArg8C, word32 dwArgC8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0168, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_bcn_update
// MayUse:  a4:[0..31] a5:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +008C:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a4 a5 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: a7 s10 s11 sp
mm_bcn_updated_entry:
l2305EBF4:
	word32 a5_119
	word32 a2_39
	word32 s0_45
	word32 s1_46
	word32 s2_47
	word32 s8_50
	word32 a0_338
	word32 a3_339
	word32 s3_340
	word32 s4_341
	word32 ra_44 = ke_msg_send_basic(ra, 64<i32>, CONVERT(Mem26[a5 + -4<i32>:uint16], uint16, word32), a4, mstatus, s6, s2, out s0_45, out s1_46, out a0_338, out a2_39, out a3_339, out s2_47, out s3_340, out s4_341, out s8_50)
	word32 s3_56 = Mem26[s1_46:int32]
	word32 s7_55 = CONVERT(Mem26[s0_45 + 87<i32>:byte], byte, word32)
	word32 s6_64 = CONVERT(Mem26[s3_56 + 6<i32>:uint16], uint16, word32)
	word32 s9_65 = CONVERT(Mem26[s3_56 + 4<i32>:uint16], uint16, word32) - CONVERT(Mem26[s3_56 + 8<i32>:byte], byte, word32)
	Mem67[s0_45 + 824<i32>:word16] = SLICE(s9_65, word16, 0)
	word32 a5_79
	word32 s3_84
	word32 s4_85
	word32 s5_86
	word32 s6_87
	word32 s7_88
	word32 s8_89
	word32 a3_342
	word32 a4_343
	word32 s2_181
	word32 ra_196 = me_beacon_check(ra_44, s7_55, CONVERT(Mem67[s3_56 + 4<i32>:uint16], uint16, word32), a2_39, s2_47, s6_64 + 3<32>, s8_50, fflags, frm, mstatus, dwArg38, dwArg0168, out a3_342, out a4_343, out a5_79, out s2_181, out s3_84, out s4_85, out s5_86, out s6_87, out s7_88, out s8_89)
	word32 s1_96 = Mem67[a5_79 + 20<i32>:word32]
	word32 a5_99 = a5_79 + (CONVERT(Mem67[s3_84 + 6<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>)
	Mem100[a5_99 + 24<i32>:word32] = s1_96
	word32 a4_105 = CONVERT(Mem100[s3_84 + 8<i32>:byte], byte, word32) + 1<32> + a5_99
	Mem109[a4_105 + 8<i32>:word32] = s7_88 + 0x42045A7C<32>
	word32 a5_110 = CONVERT(Mem109[s3_84 + 6<i32>:uint16], uint16, word32)
	Mem111[s7_88 + 0x42045A8C<32>:word32] = 0<32>
	word32 a5_114 = ~a5_110 + s9_65 + a4_105
	Mem115[a5_114 + 12<i32>:word32] = s7_88 + 0x42045A7C<32>
	word32 s8_103 = s8_89 + 908<i32>
	word32 s0_116 = Mem115[a5_114 + 64<i32>:word32]
	branch CONVERT(Mem115[a5_114 + 4<i32>:byte], byte, word32) == 0<32> l2305ED56
l2305ED56:
	a5_119 = 0x420450B4<32>
l2305ECAE:
	a5_119 = 0x42045A2C<32>
l2305ECB6:
	Mem130[(Mem115[0x44B000A0<32>:int32] & 255<i32>) + 36<i32>:word32] = a5_119
	Mem132[a5_119 + 40<i32>:word32] = s1_96
	Mem133[s1_96 + 36<i32>:word32] = 0<32>
	Mem134[s1_96 + 60<i32>:word32] = 0<32>
	Mem142[CONVERT(Mem134[s0_116 + 87<i32>:byte], byte, word32) + 0x42045AC8<32>:word32] = s1_96
	Mem144[s0_116 + 834<i32>:byte] = 1<8>
	word32 s5_127 = s5_86 + s6_87
	Mem147[s4_85 + 3<i32>:byte] = SLICE(CONVERT(Mem144[s5_127:byte], byte, word32), byte, 0)
	word32 a5_149 = Mem147[s8_89 + 908<i32>:int32]
	Mem150[s0_116 + 839<i32>:byte] = 0<8>
	Mem153[s0_116 + 840<i32>:byte] = SLICE(CONVERT(Mem150[a5_149 + 10<i32>:byte], byte, word32), byte, 0)
	Mem155[s0_116 + 841<i32>:byte] = SLICE(CONVERT(Mem153[a5_149 + 11<i32>:byte], byte, word32), byte, 0)
	word32 a4_156 = CONVERT(Mem155[a5_149 + 10<i32>:byte], byte, word32)
	branch a4_156 == 0<32> l2305ED26
l2305ED18:
	Mem161[s0_116 + 839<i32>:byte] = SLICE(CONVERT(Mem155[a5_149 + a4_156:byte], byte, word32) + 1<32>, byte, 0)
l2305ED26:
	word32 a5_164 = CONVERT(Mem163[s8_89 + 916<i32>:byte], byte, word32)
	Mem165[s8_89 + 917<i32>:byte] = 0<8>
	branch a5_164 == 0<32> l2305ED34
l2305ED30:
	s2_181 = mm_bcn_transmit(ra_196, s5_127, fflags, frm, mstatus, s6, dwArg18, s5, s3, dwArg8C, dwArgC8, dwArgF8, out s8_103)
l2305ED34:
	Mem206[s8_103:word32] = 0<32>
	0<32> = dwArg0128
l2305ED52_thunk_ke_msg_free:
	word32 a4_224
	word32 a5_225
	word32 s1_228
	word32 a2_344
	word32 a3_345
	word32 s2_346
	word32 s4_347
	ke_msg_free(s2_181, mstatus, out s1_228, out a2_344, out a3_345, out a4_224, out a5_225, out s2_346, out s4_347)
	s1Out = s1_228
	a4Out = a4_224
	a5Out = a5_225
	return ra_196
mm_bcn_updated_exit:


word32 mm_bcn_update(word32 ra, word32 a0, word32 s2, word32 s3, word32 s5, word32 s6, word32 fflags, word32 frm, word32 mstatus, word32 dwArg18, word32 dwArg38, word32 dwArg8C, word32 dwArgC8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0168, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_bcn_transmitted
//      mm_bcn_change
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +008C:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a4 a5 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mm_bcn_update_entry:
l2305ED60:
	word32 a2_87
	word32 a3_88
	word32 a4_89
	word32 a5_90
	word32 a6_91
	word32 a7_92
	memcpy(CONVERT(Mem7[a0 + 9<i32>:byte], byte, word32) + 0x42045804<32>, a0 + 12<i32>, CONVERT(Mem7[a0 + 4<i32>:uint16], uint16, word32), out a2_87, out a3_88, out a4_89, out a5_90, out a6_91, out a7_92)
	Mem37[0x4201E396<32>:byte] = 0<8>
	Mem38[0x4201E395<32>:byte] = 1<8>
l2305EDB8_thunk_mm_bcn_updated:
	word32 a4_56
	word32 a5_57
	word32 s1_61
	word32 ra_59 = mm_bcn_updated(ra, 1<32>, 0x4201E38C<32>, s2, s3, s5, s6, fflags, frm, mstatus, dwArg18, dwArg38, dwArg8C, dwArgC8, dwArgF8, dwArg0128, dwArg0168, out s1_61, out a4_56, out a5_57)
	s1Out = s1_61
	a4Out = a4_56
	a5Out = a5_57
	return ra_59
mm_bcn_update_exit:


void mm_bcn_transmitted(word32 ra, word32 a0, word32 a4, word32 s2, word32 s3, word32 s5, word32 s6, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg78, word32 dwArg7C, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: sp t4 t5 t6
mm_bcn_transmitted_entry:
l2305EDBC:
	word32 a5_14 = Mem13[0x4201E390<32>:word32]
	word32 s1_16 = a0
	branch a5_14 != 0<32> l2305EDF0
l2305EDF0:
	word32 s0_23 = Mem13[a5_14 + 4<i32>:word32]
	Mem25[a5_14 + 3<32>:word32] = s0_23
	branch a5_14 != 0xFFFFFFFF<32> l2305EE36
l2305EDF8:
	word32 a5_131 = CONVERT(Mem25[s0_23 + 10<i32>:byte], byte, word32)
	branch a5_131 == 0<32> l2305EE04
l2305EDFE:
	ra = mm_bcn_update(ra, a0, s2, s3, s5, s6, fflags, frm, mstatus, dwArg08, dwArg28, dwArg7C, dwArgB8, dwArgE8, dwArg0118, dwArg0158, out s1_16, out a4, out a5_131)
l2305EE04:
	word32 s2_60 = 0x4201E000<32>
l2305EE08:
	branch a5_131 != 0<32> l2305EE26
l2305EE26:
	word32 a5_297
	ra = mm_tim_update_proceed(ra, co_list_pop_front(a4, a5_131, out a5_297) + 0xC<32>, mstatus, s2, out s1_16, out a4, out a5_131, out s2_60)
l2305EE0C:
	word32 a4_94 = CONVERT(Mem25[s1_16 + 839<i32>:byte], byte, word32)
	branch a4_94 != 1<32> l2305EE36
l2305EE36:
	0<32> = dwArg38
	return
l2305EE16:
	0<32> = dwArg38
l2305EE22_thunk_vif_mgmt_switch_channel:
	vif_mgmt_switch_channel(ra, a4_94, s2_60, mstatus, dwArg08, dwArg18, dwArg78, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0148)
	return
mm_bcn_transmitted_exit:
l2305EDD8:
	assert_err()


void mm_bcn_change(word32 ra, word32 a0, word32 a4, word32 s2, word32 s3, word32 s5, word32 s6, word32 fflags, word32 frm, word32 mstatus, word32 dwArg18, word32 dwArg38, word32 dwArg8C, word32 dwArgC8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_bcn_change_req_handler
// MayUse:  a0:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +008C:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mm_bcn_change_entry:
l2305EE42:
	word32 a5_6 = Mem0[a4 + 4<i32>:word32]
	Mem8[a0:word32] = a5_6
	branch a4 == 0<32> l2305EE58
l2305EE58:
l2305EE58_thunk_mm_bcn_update:
	word32 s1_97
	word32 a4_98
	word32 a5_99
	mm_bcn_update(ra, a0, s2, s3, s5, s6, fflags, frm, mstatus, dwArg18, dwArg38, dwArg8C, dwArgC8, dwArgF8, dwArg0128, dwArg0168, out s1_97, out a4_98, out a5_99)
	return
l2305EE50:
	Mem44[a5_6 + 10<i32>:byte] = 1<8>
	return
mm_bcn_change_exit:


word32 bl_init(word32 ra, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg8C, word32 dwArg9C, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a2 a3 ra s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
bl_init_entry:
l2305EE5C:
	Mem7[0x4200E438<32>:word32] = 0x4201E3B8<32>
	Mem13[0x4201E3B4<32>:word32] = 0<32>
	word32 s0_33
	word32 a4_47
	word32 s0_52
	word32 a3_172
	word32 ra_51 = mm_init(me_init(dbg_init(ra), mstatus, out s0_33), s0_33, mstatus, dwLoc08, dwArg08, dwArg10, dwArg14, dwArg18, dwArg30, dwArg34, dwArg38, dwArg40, dwArg44, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg7C, dwArg8C, dwArg9C, dwArgE8, dwArgF8, dwArg0108, dwArg0158, out s0_52, out a3_172, out a4_47)
	ke_init(a4_47, mstatus)
	word32 t1_173
	word32 a0_174
	word32 a1_175
	word32 a2_176
	word32 a3_177
	word32 a4_178
	word32 a5_179
	word32 ra_81 = memset(ra_51, s0_52 + -1552<i32>, 0<32>, 236<i32>, out t1_173, out a0_174, out a1_175, out a2_176, out a3_177, out a4_178, out a5_179)
	Mem86[s0_52 + -1548<i32>:word16] = 0xFFFF<16>
	Mem87[s0_52 + -1552<i32>:byte] = 0<8>
	Mem88[s0_52 + -1549<i32>:byte] = 0xFF<8>
	word32 ra_96 = supplicantFuncInit(ra_81, dwArg08, dwArg18, dwArg28, dwArg0138, dwArg0148, dwArg0158, dwArg0168)
l2305EEBC_thunk_allocSupplicantData:
	word32 a0_114
	word32 a2_116
	word32 s2_120
	word32 s3_121
	word32 a3_129
	word32 s0_132
	word32 ra_131 = allocSupplicantData(ra_96, dwArg38, dwArg0128, dwArg0138, dwArg0148, dwArg0168, dwArg0178, out s0_132, out a0_114, out a2_116, out a3_129, out s2_120, out s3_121)
	s0Out = s0_132
	a0Out = a0_114
	a2Out = a2_116
	a3Out = a3_129
	s2Out = s2_120
	s3Out = s3_121
	return ra_131
bl_init_exit:


void bl_reset_evt(word32 ra, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg58, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
bl_reset_evt_entry:
l2305EEC0:
	__csrrc(mstatus, 8<32>)
	ke_evt_clear(0x80000000<32>, a4, mstatus)
	word32 a4_20
	word32 s5_55
	word32 ra_49 = txl_reset(rxl_reset(ra, hal_machw_reset(a4, dwArg18), mstatus, dwArg20, dwArg24, dwArg48, dwArg6C, dwArg0108, out a4_20), a4_20, mstatus, dwArg0118, out s5_55)
	mm_reset(mstatus, dwArg18)
	vif_mgmt_reset(ra_49, s5_55, mstatus, dwArg48, dwArg58, dwArg8C, dwArgF8)
	__csrrs(mstatus, 8<32>)
	return
bl_reset_evt_exit:


word32 bl_sleep(word32 dwArg28, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse:  Stack +0028:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 t1 t4 tp
// Preserved: s0 sp
bl_sleep_entry:
l2305EEEE:
	branch Mem0[0x4201EEDC<32>:int32] == 0<32> l2305EF06
l2305EF06:
	word32 a0_38
	word32 a0_12
	word32 a4_142
	word32 s2_143
	word32 a2_141
	ke_state_get(4<32>, dwArg28, out a0_12, out a2_141, out a4_142, out s2_143)
	branch a0_12 != 0<32> l2305EEFC
l2305EF14:
	branch CONVERT(Mem11[0x4201A7B8<32>:byte], byte, word32) == 0<32> l2305EEFC
l2305EF22:
	branch Mem11[0x4201A7BC<32>:word32] != 0<32> l2305EEFC
l2305EF26:
	word32 s0_24 = Mem11[0x4201C8B0<32>:int32]
l2305EF2E:
	branch s0_24 != 0<32> l2305EF40
l2305EF40:
	word32 a5_28
	word32 a4_144
	branch chan_is_on_channel(s0_24, out a3, out a4_144, out a5_28) == 0<32> l2305EF4C
l2305EF48:
	s0_24 = Mem11[a5_28 + 4<i32>:word32]
	branch a5_28 != 0<32> l2305EEFC
l2305EF4C:
	s0_24 = Mem11[s0_24:word32]
l2305EF30:
	branch Mem11[0x4201BCE0<32>:int32] != 0<32> l2305EEFC
l2305EEFC:
	a0_38 = 0<32>
l2305EF3A:
	a0_38 = hal_machw_sleep_check(out a3)
l2305EEFE:
	a3Out = a3
	return a0_38
l2305EEF8:
	a3Out = a3
	return 0<32>
bl_sleep_exit:


word32 bl_nap_calculate()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      coex_wifi_pta_forece_enable
// MayUse: 
// LiveOut: a0
// Trashed: a0 a1 a2 a4 a5 a6 a7 t1
// Preserved: a3 sp
bl_nap_calculate_entry:
l2305EF50:
	word32 a6_5 = Mem0[0x44B0808C<32>:int32]
	word32 a4_13 = 0<32>
	word32 a0_29 = 0xFFFFFFFF<32>
l2305EF68:
	branch (1<32> << a4_13 & a6_5) == 0<32> l2305EF8A
l2305EF72:
	word32 a5_25
	word32 a5_21 = Mem0[(a4_13 << 2<u32>) + 0x44B00128<32>:word32]
	word32 a3_23 = Mem0[0x44B00120<32>:int32]
	branch a3_23 >=u a5_21 l2305EF92
l2305EF92:
	a5_25 = a3_23 + 0xFFFFFFFF<32> - a5_21
l2305EF82:
	a5_25 = a5_21 - a3_23
l2305EF84:
	branch a5_25 >=u a0_29 l2305EF8A
l2305EF88:
	a0_29 = a5_25
l2305EF8A:
	a4_13 = a4_13 + 1<32>
	branch a4_13 != 9<32> l2305EF68
l2305EF90:
	return a0_29
bl_nap_calculate_exit:


void rx_swdesc_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_init
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
rx_swdesc_init_entry:
l2305EF9A:
	Mem7[0x42041004<32>:word32] = 0x4201E3C4<32>
	Mem10[0x42041088<32>:word32] = 0x4201E3C4<32>
	Mem13[0x4204110C<32>:word32] = 0x4201E3C4<32>
	Mem16[0x42041190<32>:word32] = 0x4201E3C4<32>
	Mem19[0x4201E448<32>:word32] = 0x42041190<32>
	Mem22[0x4201E468<32>:word32] = 0x420411F4<32>
	Mem25[0x4201E488<32>:word32] = 0x42041258<32>
	Mem28[0x4201E4A8<32>:word32] = 0x420412BC<32>
	Mem31[0x4201E4C8<32>:word32] = 0x42041320<32>
	Mem34[0x4201E4E8<32>:word32] = 0x42041384<32>
	Mem37[0x4201E508<32>:word32] = 0x420413E8<32>
	Mem40[0x4201E528<32>:word32] = 0x4204144C<32>
	Mem43[0x4201E548<32>:word32] = 0x420414B0<32>
	return
rx_swdesc_init_exit:


word32 scan_search_ds(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dma_cb
//      scan_ie_download
// MayUse:  a5:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a5
// Preserved: s0 sp
scan_search_ds_entry:
l2305F038:
	word32 a5_16
	Mem18[mac_ie_find(0x42045D04<32>, CONVERT(Mem10[a5 + 332<i32>:uint16], uint16, word32), 3<32>, out a5_16) + 20<i32>:word32] = Mem5[a5 + 16<i32>:word32]
	return a5_16
scan_search_ds_exit:


word32 scan_init(word32 ra, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_init
// MayUse:  mstatus:[0..31] ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
scan_init_entry:
l2305F064:
	word32 t1_61
	word32 a0_62
	word32 a1_63
	word32 a2_64
	word32 a3_65
	word32 a4_66
	word32 a5_67
	word32 ra_18 = memset(ra, 0x4201E564<32>, 0<32>, 0x1C<32>, out t1_61, out a0_62, out a1_63, out a2_64, out a3_65, out a4_66, out a5_67)
	word32 s1_68
	word32 a0_69
	word32 a1_70
	word32 a2_71
	word32 a4_72
	word32 a5_73
	word32 s2_74
	word32 s3_75
	word32 s4_76
	word32 s0_29 = ke_state_set(2<32>, 0<32>, mstatus, out s1_68, out a0_69, out a1_70, out a2_71, out a4_72, out a5_73, out s2_74, out s3_75, out s4_76)
	Mem41[0x2305F176<32>:word32] = s0_29 + 1380<i32>
	Mem44[s0_29 + 1392<i32>:word32] = 0<32>
	Mem45[0x42045CE4<32>:word32] = s0_29 + 1380<i32>
	Mem48[0x42045D08<32>:word32] = 0x42045CE0<32>
	Mem49[0x42045D1C<32>:word32] = 0x42045CE0<32>
	Mem52[0x42045D00<32>:word32] = 0<32>
	Mem53[0xCAFEFAEE<32>:word32] = 0x42045CE0<32>
	Mem54[0x42045CF4<32>:word32] = 0<32>
	return ra_18
scan_init_exit:


word32 scan_set_channel_request(word32 ra, word32 a5, word32 mstatus, word32 dwArgF8, word32 dwArg0118, ptr32 & a0Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dma_cb
//      scan_ie_download
//      mm_scan_channel_end_ind_handler
// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
scan_set_channel_request_entry:
l2305F0C4:
	word32 s0_20 = CONVERT(Mem9[0x4201E57E<32>:byte], byte, word32) + 6<32> + a5
	word32 a1_36
	word32 s0_29 = chan_scan_req(ra, CONVERT(Mem16[s0_20 + 2<i32>:byte], byte, word32), CONVERT(Mem16[s0_20:uint16], uint16, word32), CONVERT(Mem16[s0_20 + 4<i32>:int8], int8, int32), 0x1AFFFDB0<32>, CONVERT(Mem16[a5 + 334<i32>:byte], byte, word32), mstatus, dwArgF8, dwArg0118, out a1_36)
	branch a1_36 == 0<32> l2305F13C
l2305F100:
	word32 a5_44
	word32 a5_51
	word32 a3_41 = CONVERT(Mem16[s0_29 + 2<i32>:byte], byte, word32)
	word32 a4_42 = CONVERT(Mem16[s0_29:uint16], uint16, word32)
	branch a3_41 != 0<32> l2305F14C
l2305F14C:
	a5_44 = 0<32>
	branch a3_41 != 1<32> l2305F138
l2305F154:
	branch CONVERT(SLICE(a4_42 + 0xFEFFFC73<32>, word16, 0), word16, word32) >u 820<i32> l2305F138
l2305F168:
	a5_51 = 0xFEFFFC78<32>
l2305F10A:
	a5_44 = 0<32>
	branch CONVERT(SLICE(a4_42 + 0xFF000694<32>, word16, 0), word16, word32) >u 72<i32> l2305F138
l2305F120:
	a5_44 = 0xE<32>
	branch a4_42 == 0xFFF9B4<32> l2305F138
l2305F12C:
	a5_51 = 0xFF000699<32>
l2305F130:
	a5_44 = a4_42 + a5_51 ^ 5<32>
l2305F138:
	Mem71[a1_36 + 2<i32>:byte] = SLICE(a5_44, byte, 0)
l2305F13C:
l2305F148_thunk_ke_state_set:
	word32 a2_122
	word32 a5_123
	word32 a1_121
	word32 a0_85
	word32 a4_87
	word32 s1_120
	word32 s2_124
	word32 s3_125
	word32 s4_126
	word32 s0_90 = ke_state_set(2<32>, 2<32>, mstatus, out s1_120, out a0_85, out a1_121, out a2_122, out a4_87, out a5_123, out s2_124, out s3_125, out s4_126)
	a0Out = a0_85
	a4Out = a4_87
	return s0_90
scan_set_channel_request_exit:


void dma_cb(word32 ra, word32 a5, word32 mstatus, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
dma_cb_entry:
l2305F16E:
	word32 a5_10 = scan_search_ds(a5)
l2305F17A_thunk_scan_set_channel_request:
	word32 a0_33
	word32 a4_34
	scan_set_channel_request(ra, a5_10, mstatus, dwArgF8, dwArg0118, out a0_33, out a4_34)
	return
dma_cb_exit:


word32 scan_ie_download(word32 ra, word32 a5, word32 mstatus, word32 dwArgD8, word32 dwArgF8, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scan_start_req_handler
// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31]
// LiveOut: a2 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
scan_ie_download_entry:
l2305F17E:
	word32 a0_14
	word32 a4_18
	word32 s0_21 = scan_set_channel_request(ra, scan_search_ds(a5), mstatus, dwArgD8, dwArgF8, out a0_14, out a4_18)
	word32 a5_31 = Mem7[a4_18 + 24<i32>:word32]
	word32 a3_32 = CONVERT(Mem7[a0_14 + 332<i32>:uint16], uint16, word32)
	Mem33[a5_31 + 32<i32>:word32] = 0<32>
	Mem36[a4_18 + 0xFFFFFFFF<32> + a3_32 + 28<i32>:word32] = a5_31
	a2Out = dwArg24
	return s0_21
scan_ie_download_exit:


void scan_probe_req_tx(word32 ra, word32 s1, word32 s5, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg88, word32 dwArgBC, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_scan_channel_start_ind_handler
// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0088:[0..31] Stack +00BC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scan_probe_req_tx_entry:
l2305F1AC:
	word32 s5_213 = CONVERT(Mem24[Mem24[s1 + 16<i32>:word32] + 26<i32>:byte], byte, word32)
	word32 a4_202 = 1496<i32>
	word32 s7_215 = s1 + 253<i32>
	word32 s4_212 = 0<32>
l2305F1F8:
	branch s4_212 < CONVERT(Mem39[s1 + 336<i32>:byte], byte, word32) l2305F218
l2305F218:
	word32 a0_45 = 1<32>
	branch CONVERT(Mem39[s5_213 + 6<32> + s1 + 2<i32>:byte], byte, word32) != 0<32> l2305F22C
l2305F228:
	a0_45 = CONVERT(Mem39[s1 + 337<i32>:byte], byte, word32)
l2305F22C:
	word32 a5_52 = CONVERT(Mem39[s7_215 + -1<i32>:byte], byte, word32)
	word32 a4_379
	word32 a3_378
	word32 s0_74
	word32 s1_75
	word32 a0_80
	word32 s2_84
	word32 s3_85
	word32 a1_377
	word32 s4_381
	word32 s5_382
	word32 a5_380
	word32 s6_383
	word32 s7_384
	word32 s9_386
	word32 s11_388
	word32 s8_385
	word32 s10_387
	txl_frame_get(ra, a0_45, CONVERT(Mem39[s1 + 332<i32>:uint16], uint16, word32) + (a5_52 + 0x1A<32>), a4_202, a5_52 + 0x1A<32>, fflags, frm, mstatus, dwArgD8, dwArgF8, dwArg0118, out s0_74, out s1_75, out a0_80, out a1_377, out a3_378, out a4_379, out a5_380, out s2_84, out s3_85, out s4_381, out s5_382, out s6_383, out s7_384, out s8_385, out s9_386, out s10_387, out s11_388)
	branch a0_80 == 0<32> l2305F200
l2305F240:
	word32 s8_95 = Mem39[Mem39[s0_74 + 104<i32>:word32] + 108<i32>:int32]
	Mem97[s0_74 + 332<i32>:byte] = 0x40<8>
	Mem99[s0_74 + 333<i32>:byte] = 0<8>
	Mem100[s0_74 + 334<i32>:byte] = 0<8>
	Mem101[s0_74 + 335<i32>:byte] = 0<8>
	word32 a4_391
	word32 a5_392
	word32 a3_390
	word32 a2_389
	word32 a6_393
	word32 a7_394
	memcpy(s0_74 + 336<i32>, 0x230827F0<32>, 6<32>, out a2_389, out a3_390, out a4_391, out a5_392, out a6_393, out a7_394)
	word32 a2_395
	word32 a3_396
	word32 a4_397
	word32 a5_398
	word32 a6_399
	word32 a7_400
	memcpy(s0_74 + 342<i32>, s2_84, 6<32>, out a2_395, out a3_396, out a4_397, out a5_398, out a6_399, out a7_400)
	word32 a2_401
	word32 a4_402
	word32 a5_403
	word32 a6_404
	word32 a7_405
	word32 a3_140
	memcpy(s0_74 + 348<i32>, s1_75 + 320<i32>, 6<32>, out a2_401, out a3_140, out a4_402, out a5_403, out a6_404, out a7_405)
	word32 a5_148 = CONVERT(Mem101[s3_85 + 84<i32>:uint16], uint16, word32)
	Mem149[s0_74 + 356<i32>:byte] = 0<8>
	word32 a5_151 = a5_148 + 1<32> << 16<i32>
	Mem153[s3_85 + 84<i32>:word16] = SLICE(a5_151 >>u 16<i32>, word16, 0)
	word32 a5_156 = CONVERT(SLICE(a5_151 >>u 16<i32> << 4<i32>, word16, 0), word16, word32)
	Mem157[s0_74 + 354<i32>:byte] = SLICE(a5_156, byte, 0)
	Mem159[s0_74 + 355<i32>:byte] = SLICE(a5_156 >>u 8<i32>, byte, 0)
	word32 a4_160 = CONVERT(Mem159[s7_215 + -1<i32>:byte], byte, word32)
	Mem162[s0_74 + 357<i32>:byte] = SLICE(a4_160, byte, 0)
	word32 a5_161 = 0<32>
l2305F2B2:
	branch a4_160 != a5_161 l2305F2F6
l2305F2F6:
	a3_140 = s0_74 + a5_161
	Mem172[a3_140 + 358<i32>:byte] = SLICE(CONVERT(Mem167[s7_215 + a5_161:byte], byte, word32), byte, 0)
	a5_161 = a5_161 + 1<32>
l2305F2B6:
	Mem176[s8_95 + 16<i32>:word32] = 0x42045CF0<32>
	Mem184[s8_95 + 24<i32>:word32] = Mem176[s8_95 + 24<i32>:int32] - CONVERT(Mem176[s1_75 + 332<i32>:uint16], uint16, word32)
	Mem185[a0_80 + 716<i32>:word32] = 0<32>
	Mem186[a0_80 + 720<i32>:word32] = 0<32>
	Mem191[a0_80 + 47<i32>:byte] = SLICE(CONVERT(Mem186[s1_75 + 334<i32>:byte], byte, word32), byte, 0)
	Mem193[a0_80 + 48<i32>:byte] = 0xFF<8>
	word32 s0_406
	word32 a0_407
	word32 a1_408
	word32 a3_409
	word32 a5_410
	word32 s2_411
	word32 s3_412
	word32 s6_413
	word32 s9_414
	word32 s10_415
	word32 s11_416
	ra = txl_frame_push(ra, s0_74, 3<32>, a3_140, 0xFFFFFFFF<32>, mstatus, dwArg08, s5, dwArg88, dwArgBC, out s0_406, out s1, out a0_407, out a1_408, out a3_409, out a4_202, out a5_410, out s2_411, out s3_412, out s4_212, out s5_213, out s6_413, out s7_215, out s9_414, out s10_415, out s11_416)
l2305F200:
	0<32> = dwArg0128
	return
scan_probe_req_tx_exit:


word32 scan_send_cancel_cfm(word32 ra, word32 a1, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scan_cancel_req_handler
//      mm_scan_channel_end_ind_handler
// MayUse:  a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31]
// LiveOut: s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
scan_send_cancel_cfm_entry:
l2305F30A:
	word32 a0_17
	word32 s0_25
	word32 s1_59
	word32 a1_60
	word32 a2_61
	word32 a3_62
	word32 a4_63
	word32 a5_64
	word32 a6_65
	word32 s2_66
	word32 s3_67
	word32 s4_68
	word32 s8_69
	ke_msg_alloc(ra, 0xFFF804<32>, a1, 1<32>, a4, mstatus, dwArg08, out s0_25, out s1_59, out a0_17, out a1_60, out a2_61, out a3_62, out a4_63, out a5_64, out a6_65, out s2_66, out s3_67, out s4_68, out s8_69)
	Mem35[a0_17:byte] = SLICE(s0_25, byte, 0)
l2305F32A_thunk_ke_msg_send:
	word32 s1_70
	word32 a0_71
	word32 a1_72
	word32 a2_73
	word32 a3_74
	word32 a4_75
	word32 a5_76
	word32 s2_77
	word32 s3_78
	word32 s4_79
	word32 s8_80
	return ke_msg_send(a0_17, dwArg10, mstatus, out s1_70, out a0_71, out a1_72, out a2_73, out a3_74, out a4_75, out a5_76, out s2_77, out s3_78, out s4_79, out s8_80)
scan_send_cancel_cfm_exit:


void scan_cancel_req_handler(word32 ra, word32 a3, word32 mstatus, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
scan_cancel_req_handler_entry:
l2305F32E:
	word32 a0_9
	word32 a4_11
	word32 a2_78
	word32 s2_79
	ke_state_get(2<32>, dwArg18, out a0_9, out a2_78, out a4_11, out s2_79)
	branch a0_9 == 0<32> l2305F350
l2305F350:
	scan_send_cancel_cfm(ra, a3, a4_11, mstatus, dwLoc18, dwLoc10)
l2305F33E:
	Mem40[0x4201E57F<32>:byte] = 1<8>
l2305F348:
	return
scan_cancel_req_handler_exit:


void scan_start_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg38, word32 dwArgC8, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
scan_start_req_handler_entry:
l2305F35A:
	word32 a0_22
	word32 a2_128
	word32 a1_127
	word32 s0_125
	word32 s1_126
	word32 a3_129
	word32 a4_130
	word32 a5_131
	word32 a6_132
	word32 s2_133
	word32 s3_134
	word32 s4_135
	word32 s8_136
	word32 ra_29 = ke_msg_alloc(ra, 0xFFF801<32>, a3, 1<32>, a4, mstatus, dwArg08, out s0_125, out s1_126, out a0_22, out a1_127, out a2_128, out a3_129, out a4_130, out a5_131, out a6_132, out s2_133, out s3_134, out s4_135, out s8_136)
	word32 s0_40 = a0_22
	word32 a0_42
	word32 s2_47
	word32 a4_137
	word32 a2_43
	word32 s1_46 = ke_state_get(2<32>, dwArg28, out a0_42, out a2_43, out a4_137, out s2_47)
	branch a0_42 != 0<32> l2305F3D0
l2305F3D0:
	Mem50[a0_22:byte] = 8<8>
l2305F380:
	branch CONVERT(Mem19[s1_46 + 335<i32>:byte], byte, word32) != 0<32> l2305F39E
l2305F39E:
	Mem59[a0_22:byte] = 0<8>
	Mem62[s1_46 + 16<i32>:word32] = 0x4201E564<32>
	Mem63[0x4201E57E<32>:byte] = 0<8>
	Mem64[0x4201E57C<32>:word16] = SLICE(s2_47, word16, 0)
	s0_40 = scan_ie_download(ra_29, 0x4201E564<32>, mstatus, dwArgC8, dwArgE8, out a2_43)
l2305F3BC:
	word32 s1_138
	word32 a0_139
	word32 a1_140
	word32 a2_141
	word32 a3_142
	word32 a4_143
	word32 a5_144
	word32 s2_145
	word32 s3_146
	word32 s4_147
	word32 s8_148
	ke_msg_send(s0_40, a2_43, mstatus, out s1_138, out a0_139, out a1_140, out a2_141, out a3_142, out a4_143, out a5_144, out s2_145, out s3_146, out s4_147, out s8_148)
	0<32> = dwArg38
	return
scan_start_req_handler_exit:
l2305F386:
	assert_err()


void mm_scan_channel_end_ind_handler(word32 ra, word32 mstatus, word32 dwArg00, word32 dwArg28, word32 dwArgE8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0028:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
mm_scan_channel_end_ind_handler_entry:
l2305F3DA:
	word32 a0_9
	word32 a2_181
	word32 a4_182
	word32 s2_183
	ke_state_get(2<32>, dwArg28, out a0_9, out a2_181, out a4_182, out s2_183)
	branch a0_9 == 3<32> l2305F404
l2305F404:
	word32 a4_23 = Mem8[7<32>:word32]
	Mem27[7<32>:word32] = a4_23
	Mem32[(Mem27[a4_23:word32] | 3<32>) + 96<i32>:word32] = 0x44B00000<32>
	word32 a4_35 = Mem32[a0_9 + 16<i32>:word32]
	word32 a3_38 = CONVERT(Mem32[a0_9 + 335<i32>:byte], byte, word32)
	word32 a5_39 = CONVERT(Mem32[0x4201E57E<32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem40[a4_35 + 26<i32>:byte] = SLICE(a5_39, byte, 0)
	branch a5_39 >=u a3_38 l2305F45A
l2305F446:
	word32 a5_41 = CONVERT(Mem40[a4_35 + 27<i32>:byte], byte, word32)
	branch a5_41 != 0<32> l2305F45A
l2305F45A:
	word32 a4_48
	word32 s1_184
	word32 a2_185
	word32 a3_186
	word32 a5_187
	word32 s2_188
	word32 s4_189
	word32 s0_51 = ke_msg_free(a0_9 + 0xFFFFFFF4<32>, mstatus, out s1_184, out a2_185, out a3_186, out a4_48, out a5_187, out s2_188, out s4_189)
	word32 a1_60 = CONVERT(Mem40[s0_51 + 24<i32>:uint16], uint16, word32)
	branch CONVERT(Mem40[s0_51 + 27<i32>:byte], byte, word32) == 0<32> l2305F47E
l2305F47E:
	word32 s0_192
	word32 s1_193
	word32 a0_194
	word32 a2_195
	word32 a3_196
	word32 s2_197
	word32 s3_198
	word32 s4_199
	word32 s8_200
	ke_msg_send_basic(ra, 0xFFF802<32>, a1_60, a4_48, mstatus, dwLoc08, dwArg00, out s0_192, out s1_193, out a0_194, out a2_195, out a3_196, out s2_197, out s3_198, out s4_199, out s8_200)
l2305F46A:
	Mem103[scan_send_cancel_cfm(ra, a1_60, a4_48, mstatus, dwLoc08, dwArg00) + 27<i32>:byte] = 0<8>
l2305F474:
	word32 s1_201
	word32 a0_202
	word32 a1_203
	word32 a2_204
	word32 a4_205
	word32 a5_206
	word32 s2_207
	word32 s3_208
	word32 s4_209
	ke_state_set(2<32>, 0<32>, mstatus, out s1_201, out a0_202, out a1_203, out a2_204, out a4_205, out a5_206, out s2_207, out s3_208, out s4_209)
l2305F44C:
	word32 a0_190
	word32 a4_191
	scan_set_channel_request(ra, a5_41, mstatus, dwArgE8, dwArg0108, out a0_190, out a4_191)
l2305F450:
	return
mm_scan_channel_end_ind_handler_exit:
l2305F3EC:
	assert_err()


void mm_scan_channel_start_ind_handler(word32 ra, word32 s0, word32 s5, word32 fflags, word32 frm, word32 mstatus, word32 dwArg28, word32 dwArg78, word32 dwArgAC, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] Stack +0028:[0..31] Stack +0078:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mm_scan_channel_start_ind_handler_entry:
l2305F48C:
	word32 a0_14
	word32 a2_139
	word32 a4_140
	word32 s2_141
	word32 s1_18 = ke_state_get(2<32>, dwArg28, out a0_14, out a2_139, out a4_140, out s2_141)
	branch a0_14 == 2<32> l2305F4C6
l2305F4C6:
	word32 a4_28 = Mem10[6<32>:word32]
	Mem32[0x2000206<32>:word32] = a4_28
	Mem36[(Mem32[a4_28:word32] | 0x2000202<32>) + 96<i32>:word32] = 0x44B00000<32>
	branch (CONVERT(Mem36[s0 + (s1_18 + 6<32>) + 3<i32>:byte], byte, word32) & 1<32>) != 0<32> l2305F4F8
l2305F4F4:
	scan_probe_req_tx(ra, s1_18 + 6<32>, s5, fflags, frm, mstatus, dwLoc08, dwArg78, dwArgAC, dwArgC8, dwArgE8, dwArg0108, dwArg0118)
l2305F4F8:
	word32 s1_142
	word32 a0_143
	word32 a1_144
	word32 a2_145
	word32 a4_146
	word32 a5_147
	word32 s2_148
	word32 s3_149
	word32 s4_150
	ke_state_set(2<32>, 3<32>, mstatus, out s1_142, out a0_143, out a1_144, out a2_145, out a4_146, out a5_147, out s2_148, out s3_149, out s4_150)
	return
mm_scan_channel_start_ind_handler_exit:
l2305F4AE:
	assert_err()


void txl_buffer_reinit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_reset
//      txl_buffer_init
// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: sp
txl_buffer_reinit_entry:
l2305F50C:
	Mem5[0x4201E638<32>:word32] = 0<32>
	Mem6[0x4201E63C<32>:word32] = 0<32>
	return
txl_buffer_reinit_exit:


void txl_buffer_init(word32 a0, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_init
// MayUse:  a0:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
txl_buffer_init_entry:
l2305F51E:
	txl_buffer_reinit()
	word32 s0_13 = 0x4204443C<32>
l2305F560:
	Mem37[s0_13:word32] = 0xBADCAB1E<32>
	word32 a0_39 = phy_get_ntx(a0)
	Mem42[(a0_39 << 14<i32>) + 4<i32>:word32] = s0_13
	word32 a0_47 = 1<32> << phy_get_ntx(a0_39 << 14<i32>) + 1<32>
	Mem49[a0_47 + 7<32>:word32] = s0_13
	Mem50[s0_13 + 12<i32>:word32] = 0<32>
	Mem52[s0_13 + 16<i32>:word32] = 0xF0000704<32>
	Mem53[s0_13 + 20<i32>:word32] = 0<32>
	Mem54[s0_13 + 24<i32>:word32] = 0<32>
	Mem55[s0_13 + 28<i32>:word32] = 0<32>
	Mem56[s0_13 + 32<i32>:word32] = 0<32>
	s0_13 = s0_13 + 60<i32>
	Mem61[s0_13 + 4072<i32>:word32] = Mem56[0x44B000A0<32>:int32] & 255<i32>
	Mem64[s0_13 + 4076<i32>:word32] = Mem61[0x44B000A0<32>:int32] & 255<i32>
	Mem67[s0_13 + 4080<i32>:word32] = Mem64[0x44B000A0<32>:int32] & 255<i32>
	word32 a5_68 = Mem67[0x44B000A0<32>:int32]
	Mem70[s0_13 + 4088<i32>:word32] = 0x2000200<32>
	Mem72[s0_13 + 4092<i32>:word32] = 0x3F0000<32>
	Mem74[s0_13 + 4084<i32>:word32] = a5_68 & 255<i32>
	a0 = a0_47 + 0xFFFFFFFF<32>
	branch s0_13 != 0x42044694<32> l2305F560
l2305F5D2:
	word32 s0_110 = 0x420443C4<32>
l2305F5F6:
	Mem88[s0_110:word32] = 0xBADCAB1E<32>
	word32 a0_90 = phy_get_ntx(a0)
	Mem93[(a0_90 << 14<i32>) + 4<i32>:word32] = s0_110
	word32 a0_98 = 1<32> << phy_get_ntx(a0_90 << 14<i32>) + 1<32>
	Mem100[a0_98 + 7<32>:word32] = s0_110
	Mem101[s0_110 + 12<i32>:word32] = 0<32>
	Mem103[0xF0000714<32>:word32] = s0_110
	Mem104[s0_110 + 20<i32>:word32] = 0<32>
	Mem105[s0_110 + 24<i32>:word32] = 0<32>
	Mem106[s0_110 + 28<i32>:word32] = 0<32>
	Mem107[s0_110 + 32<i32>:word32] = 0<32>
	word32 a5_109 = Mem107[0x44B000A0<32>:int32]
	s0_110 = s0_110 + 60<i32>
	Mem111[s0_110 + 4076<i32>:word32] = 0<32>
	Mem113[s0_110 + 4072<i32>:word32] = a5_109 & 255<i32>
	Mem114[s0_110 + 4080<i32>:word32] = 0<32>
	Mem115[s0_110 + 4084<i32>:word32] = 0<32>
	Mem116[s0_110 + 4088<i32>:word32] = 0<32>
	Mem118[s0_110 + 4092<i32>:word32] = 0x3F0000<32>
	a0 = a0_98 + 0xFFFFFFFF<32>
	branch s0_110 != 0x4204443C<32> l2305F5F6
l2305F64E:
	0<32> = dwArg0128
	return
txl_buffer_init_exit:


void txl_buffer_reset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_flush_ac
// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: sp
txl_buffer_reset_entry:
l2305F664:
	Mem5[0x4201E638<32>:word32] = 0<32>
	Mem6[0x4201E63C<32>:word32] = 0<32>
	return
txl_buffer_reset_exit:


word32 txl_buffer_alloc(word32 a0, word32 a1, word32 a2, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_push
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a3 a5
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: a1 a6 a7 s0 sp t1 t3
txl_buffer_alloc_entry:
l2305F676:
	word32 a4_11 = CONVERT(Mem9[a0 + 94<i32>:byte], byte, word32)
	Mem13[a0 + 440<i32>:byte] = SLICE(a2, byte, 0)
	Mem18[a0 + 212<i32>:word32] = (a4_11 + 15<i32> & 0xFFFFFFF0<32>) - a4_11
	Mem21[a0 + 260<i32>:word32] = 0xCAFEFADE<32>
	word32 a5_22 = CONVERT(Mem21[a0 + 50<i32>:uint16], uint16, word32)
	Mem23[a0 + 208<i32>:word32] = a4_11
	branch (a5_22 & 8<32>) != 0<32> l2305F6BA
l2305F6B0:
	a1 = txu_cntrl_frame_build(a0, a0 + 536<i32> + a4_11, out a2)
l2305F6BA:
	word32 s0_41 = Mem23[a1 + 84<i32>:word32]
	word32 a5_42 = 0<32>
l2305F6C2:
	word32 a3_49 = s0_41 + a5_42
	Mem51[a3_49 + 444<i32>:word32] = a2
	a5_42 = a5_42 + 4<32>
	branch a5_42 != 60<i32> l2305F6C2
l2305F6D6:
	branch Mem51[0x4201E638<32>:int32] != 0<32> l2305F700
l2305F700:
	Mem60[a0 + 220<i32>:word32] = Mem51[0x4201E63C<32>:int32]
l2305F6E8:
	Mem61[0x4201E638<32>:word32] = a0 + 204<i32>
l2305F6EC:
	Mem64[0x4201E63C<32>:word32] = a0 + 204<i32>
	Mem66[s0_41 + 220<i32>:word32] = 0<32>
	a2Out = dwArg10
	a3Out = a3_49
	a5Out = 0x4201E584<32>
	return a0 + 204<i32>
txl_buffer_alloc_exit:


word32 txl_buffer_update_thd(word32 ra, word32 a2, word32 a3, word32 a5, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_push
// MayUse:  a2:[0..31] a3:[0..31] a5:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
txl_buffer_update_thd_entry:
l2305F708:
	word32 a7_7 = Mem0[Mem0[a5 + 104<i32>:word32] + 108<i32>:int32]
	word32 a4_17 = a5 + 76<i32>
	word32 a1_10 = 0<32>
l2305F722:
	branch a3 != 0<32> l2305F742
l2305F742:
	Mem18[a4_17:word32] = 0xCAFEFADE<32>
	word32 a0_19 = Mem18[a3:word32]
	a4_17 = a4_17 + 0x14<32>
	Mem22[a4_17 + 4084<i32>:word32] = a3
	word32 t3_23 = Mem22[a0_19 + 16<i32>:int32]
	Mem24[a4_17 + 4092<i32>:word32] = 0<32>
	word32 a3_27 = a3 + t3_23
	Mem29[a4_17 + 4088<i32>:word32] = a3_27 + 0xFFFFFFFF<32>
	Mem30[a4_17 + 4<i32>:word32] = a4_17
	a2 = a4_17
	a1_10 = a1_10 + 1<32>
	a3 = a3_27 + 0xFFFFFFFF<32>
l2305F726:
	branch a1_10 != 0<32> l2305F768
l2305F768:
	word32 a5_32 = Mem14[a4_17 + 4<i32>:word32]
	Mem38[0xCAFEFB16<32>:word32] = a5_32
	Mem39[a5_32 + 396<i32>:word32] = a5_32
	Mem40[a4_17 + 0xFFFFFFFF<32> + (a5_32 + 332<i32>) + 68<i32>:word32] = a5_32
	Mem42[a5_32 + 60<i32>:word32] = a5 + 76<i32>
	Mem43[a5_32 + 72<i32>:word32] = 0<32>
	Mem46[a7_7 + 16<i32>:word32] = a5_32 + 56<i32>
	Mem49[a2 + 16<i32>:word32] = 0<32>
	Mem51[a7_7 + 60<i32>:word32] = 256<i32>
	Mem52[a2 + 4<i32>:word32] = 0<32>
	a5Out = 256<i32>
	return 0xCAFEFADE<32>
txl_buffer_update_thd_exit:
l2305F728:
	word32 a0_102
	word32 a1_103
	word32 s1_101
	word32 a2_104
	word32 a3_105
	word32 a4_106
	word32 a5_107
	word32 a7_108
	word32 s2_109
	word32 s3_110
	word32 s4_111
	word32 s5_112
	word32 s6_113
	word32 s7_114
	word32 s8_115
	word32 s9_116
	word32 s10_117
	word32 s11_118
	word32 t4_119
	printf(ra, 0x2307EAB4<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_101, out a0_102, out a1_103, out a2_104, out a3_105, out a4_106, out a5_107, out a7_108, out s2_109, out s3_110, out s4_111, out s5_112, out s6_113, out s7_114, out s8_115, out s9_116, out s10_117, out s11_118, out t4_119)
l2305F740:


word32 txl_cfm_init(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_init
//      txl_reset
// MayUse:  ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
txl_cfm_init_entry:
l2305F7A2:
	word32 t1_36
	word32 a0_37
	word32 a1_38
	word32 a2_39
	word32 a3_40
	word32 a4_41
	word32 a5_42
	word32 ra_18 = memset(ra, 0x4201E660<32>, 0<32>, 40<i32>, out t1_36, out a0_37, out a1_38, out a2_39, out a3_40, out a4_41, out a5_42)
	co_list_init(0x4201E660<32>)
	co_list_init(0x4201E668<32>)
	co_list_init(0x4201E670<32>)
	co_list_init(0x4201E678<32>)
l2305F7F4_thunk_co_list_init:
	co_list_init(0x4201E680<32>)
	return ra_18
txl_cfm_init_exit:


word32 txl_cfm_push(word32 a1, word32 a2, word32 a5, word32 mstatus, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_transmit_trigger
//      txu_cntrl_push
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a4 s1
// Trashed: a0 a1 a2 a4 a5 s1 t3 tp
// Preserved: sp
txl_cfm_push_entry:
l2305F7F8:
	word32 a0_7 = Mem5[a5 + 108<i32>:word32]
	Mem13[a1 + 16<i32>:word32] = Mem10[a5:word32]
	word32 a0_17 = (a2 << 3<u32>) + 0x4201E660<32>
	word32 a2_35
	word32 s1_19 = co_list_push_back(a0_7, 0x4201E660<32>, out a2_35)
l2305F830_thunk_ke_evt_set:
	word32 a5_36
	a4Out = ke_evt_set(a0_17, a2 << 3<u32>, mstatus, out a5_36)
	return s1_19
txl_cfm_push_exit:


void txl_cfm_evt(word32 s0, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a1 a3 s10 s5 s6 s7 s9 sp tp
txl_cfm_evt_entry:
l2305F834:
	word32 a4_5 = a0 << 2<u32>
	word32 s1_16 = (a0 << 3<u32>) + 0x4201E660<32>
	branch (Mem14[0x4201EEDC<32>:int32] & s0) != 0<32> l2305F888
l2305F888:
	word32 a5_37 = ke_evt_clear(s0, a0 << 2<u32>, mstatus)
l2305F896:
	branch Mem40[s1_16:int32] == 0<32> l2305F8C6
l2305F8C6:
	return
txl_cfm_evt_exit:
l2305F89E:
	__csrrc(mstatus, 8<32>)
	word32 a5_54
	co_list_pop_front(a4_5, a5_37, out a5_54)
	__csrrs(mstatus, 8<32>)
	word32 a5_81
	word32 s2_83
	word32 a1_131
	word32 s3_132
	word32 s4_133
	word32 s5_134
	word32 mstatus_135
	txu_cntrl_cfm(me_tx_cfm_singleton(a5_54, dwLoc04, dwArg04, dwArg0108), dwArg18, out s1_16, out a1_131, out a4_5, out a5_81, out s2_83, out s3_132, out s4_133, out s5_134, out mstatus_135)
	Mem88[a5_81 + 0x4F<32>:word32] = Mem40[a5_81 + 80<i32>:word32]
	a5_37 = ipc_emb_txcfm_ind(s2_83)
l2305F870:
	assert_err()


word32 txl_cfm_flush(word32 ra, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_flush_ac
//      txl_reset
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a1 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a2 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: a1 a4 mstatus ra sp
txl_cfm_flush_entry:
l2305F8D4:
	word32 s5_22 = a1
	word32 s4_24 = a2
	word32 s3_27 = a2 | 0x3C000000<32>
l2305F8FE:
	word32 a5_34
	branch co_list_pop_front(a4, a5, out a5_34) == 0<32> l2305F940
l2305F940:
	word32 s2_45
	word32 s3_46
	word32 s1_44 = txl_frame_evt(ra, a1, a4, mstatus, out s2_45, out s3_46)
l2305F956_thunk_ipc_emb_txcfm_ind:
	word32 a5_62 = ipc_emb_txcfm_ind(s2_45)
	s0Out = s1
	s1Out = s1_44
	a1Out = <invalid>
	a4Out = <invalid>
	a5Out = a5_62
	s2Out = s2_45
	s3Out = s3_46
	s4Out = dwArg04
	s5Out = s5_22
	s6Out = <invalid>
	s8Out = s4
	return <invalid>
txl_cfm_flush_exit:
l2305F908:
	word32 a5_65 = Mem51[a5_34:word32]
	branch a4 == 0<32> l2305F920
l2305F920:
	a5_65 = Mem51[a4 + 16<i32>:word32]
	branch a4 < 0<32> l2305F914
l2305F926:
	Mem68[a5_65 + 16<i32>:word32] = s4_24
l2305F910:
	Mem70[a5_65 + 16<i32>:word32] = s3_27
l2305F914:
	word32 s0_73 = Mem72[a5_65 + 8<i32>:word32]
	branch a5_65 != 0<32> l2305F92C
l2305F92C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg56 = <invalid>
	word32 s1_161
	word32 a5_98
	word32 s2_162
	ra = txu_cntrl_cfm(a5_98 + 0xFFFFFFFF<32>, stackArg56, out s1_161, out a1, out a4, out a5_98, out s2_162, out s3_27, out s4_24, out s5_22, out mstatus)
	Mem107[a5_98 + 0x4F<32>:word32] = Mem72[a5_98 + 80<i32>:word32]
	a5 = a5_98 + 0xFFFFFFFF<32>
	word32 s0_108 = Mem107[a5_98 + 0x67<32>:word32]
	branch a5_98 == 0xFFFFFFFF<32> l2305F8FE
l2305F93A:
	Mem109[s0_108 + 104<i32>:word32] = 0<32>
l2305F91A:
	a1 = txl_frame_cfm(s0_73, a4, a5_65, mstatus, out a4, out a5)


void txl_cfm_dma_int_handler(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
txl_cfm_dma_int_handler_entry:
l2305F95A:
	word32 a4_5 = Mem0[a5 + 36<i32>:word32]
	Mem7[(a5 & 256<i32>) + 32<i32>:word32] = a4_5
	Mem11[(a4_5 & 0xFFFFFFFE<32>) + 4<i32>:word32] = Mem7[a4_5 + 4<i32>:word32]
	return
txl_cfm_dma_int_handler_exit:


void txl_cfm_dump(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl60x_fw_dump_statistic
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 s1 tp
// Preserved: s0 sp
txl_cfm_dump_entry:
l2305F976:
	word32 s0_13 = 0x4201E660<32>
l2305F98A:
	branch co_list_cnt(a5, out a5) == 0<32> l2305F996
l2305F992:
	s0_13 = Mem11[a5:word32]
l2305F994:
	branch a5 != 0<32> l2305F9A6
l2305F9A6:
	a5 = Mem11[a5:word32]
l2305F996:
	s0_13 = s0_13 + 8<32>
	branch s0_13 != 0x4201E688<32> l2305F98A
l2305F99C:
	return
txl_cfm_dump_exit:


word32 bam_init(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_init
// MayUse:  mstatus:[0..31]
// LiveOut: s0
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bam_init_entry:
l2305F9AA:
	Mem7[0x4201E694<32>:byte] = 0xFF<8>
l2305F9B8_thunk_ke_state_set:
	word32 s1_23
	word32 a0_24
	word32 a1_25
	word32 a2_26
	word32 a4_27
	word32 a5_28
	word32 s2_29
	word32 s3_30
	word32 s4_31
	return ke_state_set(8<32>, 0<32>, mstatus, out s1_23, out a0_24, out a1_25, out a2_26, out a4_27, out a5_28, out s2_29, out s3_30, out s4_31)
bam_init_exit:


void bam_send_air_action_frame(word32 ra, word32 a0, word32 a2, word32 a5, word32 s10, word32 fflags, word32 frm, word32 mstatus, word32 dwArg28, word32 dwArg58, word32 dwArg64, word32 dwArg8C, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..7] Stack +0028:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bam_send_air_action_frame_entry:
l2305F9BC:
	word32 a4_53
	word32 a5_54
	phy_get_channel(fp + -72<i32>, out a4_53, out a5_54)
	word32 s1_66
	word32 s4_67
	word32 s8_68
	word32 a0_71
	word32 s2_75
	word32 s3_76
	word32 s0_449
	word32 a1_450
	word32 a3_451
	word32 a4_452
	word32 a5_453
	word32 s5_454
	word32 s6_455
	word32 s7_456
	word32 s9_457
	word32 s10_458
	word32 s11_459
	txl_frame_get(ra, CONVERT(CONVERT(SLICE(s10, byte, 0), byte, word32) != 0<32>, bool, word32), 256<i32>, a4_53, a5_54, fflags, frm, mstatus, dwArgA8, dwArgC8, dwArgE8, out s0_449, out s1_66, out a0_71, out a1_450, out a3_451, out a4_452, out a5_453, out s2_75, out s3_76, out s4_67, out s5_454, out s6_455, out s7_456, out s8_68, out s9_457, out s10_458, out s11_459)
	branch a0_71 == 0<32> l2305FB6C
l2305FA1A:
	word32 a5_132
	word32 a4_97
	word32 a3_193 = tpc_update_frame_tx_power(ra, s4_67 + 0x4201C2D0<32>, fflags, frm, out a4_97)
	word32 a1_103 = Mem92[a0_71 + 104<i32>:int32]
	Mem106[a1_103 + 332<i32>:byte] = 0xD0<8>
	Mem107[a1_103 + 333<i32>:byte] = 0<8>
	Mem108[a1_103 + 334<i32>:byte] = 0<8>
	Mem109[a1_103 + 335<i32>:byte] = 0<8>
	word32 s8_89 = s8_68 + (a0 + 0x1CE<32>)
	Mem113[a1_103 + 336<i32>:word16] = SLICE(CONVERT(Mem109[s8_89:uint16], uint16, word32), word16, 0)
	Mem115[a1_103 + 338<i32>:word16] = SLICE(CONVERT(Mem113[s8_89 + 2<i32>:uint16], uint16, word32), word16, 0)
	Mem117[a1_103 + 340<i32>:word16] = SLICE(CONVERT(Mem115[s8_89 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem121[a1_103 + 342<i32>:word16] = SLICE(CONVERT(Mem117[s4_67 + 0x4201C320<32>:uint16], uint16, word32), word16, 0)
	Mem123[a1_103 + 344<i32>:word16] = SLICE(CONVERT(Mem121[s4_67 + 0x4201C322<32>:uint16], uint16, word32), word16, 0)
	Mem125[a1_103 + 346<i32>:word16] = SLICE(CONVERT(Mem123[s4_67 + 0x4201C324<32>:uint16], uint16, word32), word16, 0)
	branch CONVERT(Mem125[a4_97 + 86<i32>:byte], byte, word32) != 2<32> l2305FB16
l2305FB16:
	Mem129[a1_103 + 348<i32>:word16] = SLICE(CONVERT(Mem125[s8_89:uint16], uint16, word32), word16, 0)
	Mem131[a1_103 + 350<i32>:word16] = SLICE(CONVERT(Mem129[s8_89 + 2<i32>:uint16], uint16, word32), word16, 0)
	a5_132 = CONVERT(Mem131[s8_89 + 4<i32>:uint16], uint16, word32)
l2305FA9E:
	Mem134[a1_103 + 348<i32>:word16] = SLICE(CONVERT(Mem125[s4_67 + 0x4201C320<32>:uint16], uint16, word32), word16, 0)
	Mem136[a1_103 + 350<i32>:word16] = SLICE(CONVERT(Mem134[s4_67 + 0x4201C322<32>:uint16], uint16, word32), word16, 0)
	a5_132 = CONVERT(Mem136[s4_67 + 0x4201C324<32>:uint16], uint16, word32)
l2305FAB2:
	word32 s0_181
	word32 a0_185
	word32 a5_173
	word32 a0_170
	Mem140[a1_103 + 352<i32>:word16] = SLICE(a5_132, word16, 0)
	word32 a6_145 = CONVERT(Mem140[0x4201BCE4<32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem147[0x4201BCE4<32>:word16] = SLICE(a6_145 >>u 0x10<u32>, word16, 0)
	word32 a6_150 = CONVERT(SLICE(a6_145 >>u 0x10<u32> << 4<i32>, word16, 0), word16, word32)
	Mem151[a1_103 + 354<i32>:byte] = SLICE(a6_150, byte, 0)
	Mem153[a1_103 + 355<i32>:byte] = SLICE(a6_150 >>u 8<u32>, byte, 0)
	Mem156[a0_71 + 47<i32>:byte] = SLICE(s4_67, byte, 0)
	Mem158[a0_71 + 48<i32>:byte] = SLICE(s3_76, byte, 0)
	branch a2 == 1<32> l2305FB8A
l2305FB8A:
	a0_170 = me_build_add_ba_rsp(a1_103 + 0x164<32>, dwArg64, a3_193, a5, out a5_173)
l2305FAF0:
	branch a2 == 0<32> l2305FB2C
l2305FB2C:
	s0_181 = CONVERT(Mem158[(dwArg64 >> 2<i32> & 0xF<32>) + 0x2307C398<32>:byte], byte, word32)
	a0_185 = me_build_add_ba_req(a1_103 + 0x164<32>, s1_66, out a5_173) + 0x18<32>
l2305FAF4:
	a5_173 = 2<32>
	branch a2 == 2<32> l2305FB9C
l2305FB9C:
	a0_170 = me_build_del_ba(a1_103 + 0x164<32>, s1_66, a5, out a3_193, out a5_173)
l2305FB96:
	a0_185 = a0_170 + 0x18<32>
l2305FAFA:
	assert_warn()
	a0_185 = 0x18<32>
l2305FB98:
	s0_181 = 3<32>
l2305FB48:
	word32 a4_215 = Mem158[a5_173 + 20<i32>:word32]
	word32 a5_219 = a5_173 + 0xFFFFFFFF<32> + a0_185
	Mem221[a5_219 + 24<i32>:word32] = a4_215
	Mem222[a0_185 + 0x20<32>:word32] = a4_215
	branch s2_75 == 0<32> l2305FB64
l2305FB5C:
	Mem227[a0_71 + 716<i32>:word32] = s2_75
	Mem231[a0_71 + 720<i32>:word32] = s1_66
l2305FB64:
	word32 s7_472
	word32 s9_473
	word32 s10_474
	word32 s11_475
	word32 a5_466
	word32 s2_467
	word32 s3_468
	word32 s4_469
	word32 s6_471
	word32 s5_470
	word32 s1_461
	word32 a0_462
	word32 a1_463
	word32 a4_465
	word32 a3_464
	word32 s0_460
	txl_frame_push(ra, s0_181, s0_181, a3_193, a5_219, mstatus, dwLoc28, dwArg28, dwArg58, dwArg8C, out s0_460, out s1_461, out a0_462, out a1_463, out a3_464, out a4_465, out a5_466, out s2_467, out s3_468, out s4_469, out s5_470, out s6_471, out s7_472, out s9_473, out s10_474, out s11_475)
l2305FB6C:
	return
bam_send_air_action_frame_exit:


void rxu_mgt_ind_handler(word32 ra, word32 a1, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg38, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg88, word32 dwArg9C, word32 dwArgA8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rxu_mgt_ind_handler_entry:
l2305FBA8:
	branch CONVERT(Mem0[a1 + 29<i32>:byte], byte, word32) != 0<32> l2305FC7C
l2305FC7C:
	return
l2305FBAE:
	word32 s0_26 = CONVERT(Mem21[a1 + 32<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem21[a1 + 31<i32>:byte], byte, word32)
	branch (s0_26 & 1<i32>) == 0<32> l2305FBE8
l2305FBE0:
l2305FBE8:
	branch (s0_26 & 2<i32>) != 0<32> l2305FBFE
l2305FBF6:
l2305FBFE:
	word32 s1_301
	word32 s3_65
	word32 a1_303
	word32 a0_302
	word32 a3_305
	word32 a2_304
	word32 a4_306
	word32 a5_307
	word32 a7_308
	word32 s2_309
	word32 s4_310
	word32 s5_311
	word32 s6_312
	word32 s7_313
	word32 s8_314
	word32 s9_315
	word32 s10_316
	word32 s11_317
	word32 t4_318
	word32 ra_60 = printf(ra, 0x2307EB3C<32>, s0_26 >> 2<u32> & 0xF<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_301, out a0_302, out a1_303, out a2_304, out a3_305, out a4_306, out a5_307, out a7_308, out s2_309, out s3_65, out s4_310, out s5_311, out s6_312, out s7_313, out s8_314, out s9_315, out s10_316, out s11_317, out t4_318)
	word32 a3_75 = s3_65
	branch s3_65 <=u 8<32> l2305FC20
l2305FC1E:
	a3_75 = 8<32>
l2305FC20:
	word32 s1_110
	word32 s10_111
	word32 a0_319
	word32 a1_320
	word32 a2_321
	word32 a3_322
	word32 a4_323
	word32 a5_324
	word32 a7_325
	word32 s2_326
	word32 s3_327
	word32 s4_328
	word32 s5_329
	word32 s6_330
	word32 s7_331
	word32 s8_332
	word32 s9_333
	word32 s11_334
	word32 t4_335
	bam_send_air_action_frame(printf(ra_60, 0x2307EBB4<32>, CONVERT(SLICE(CONVERT(SLICE(a3_75, word16, 0), word16, word32) << 6<i32> | (s0_26 & 62<i32> | 2<i32>), word16, 0), word16, int32) >> 2<i32> & 0xF<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_110, out a0_319, out a1_320, out a2_321, out a3_322, out a4_323, out a5_324, out a7_325, out s2_326, out s3_327, out s4_328, out s5_329, out s6_330, out s7_331, out s8_332, out s9_333, out s10_111, out s11_334, out t4_335), s1_110, 1<32>, 0<32>, s10_111, fflags, frm, mstatus, dwArg08, dwArg38, dwArg44, ra, dwArg88, dwArgA8, dwArgC8)
	return
rxu_mgt_ind_handler_exit:


word32 co_pack8p(word32 a0, word32 a1, word32 a2, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_add_ie_ssid
//      me_add_ie_supp_rates
//      me_add_ie_ext_supp_rates
//      me_add_ie_ht_capa
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
co_pack8p_entry:
l2305FC80:
	word32 a5_12 = 0<32>
l2305FC82:
	branch a2 != a5_12 l2305FC88
l2305FC88:
	a3 = CONVERT(Mem8[a1 + a5_12:byte], byte, word32)
	a4 = a0 + a5_12
	Mem13[a4:byte] = SLICE(a3, byte, 0)
	a5_12 = a5_12 + 1<32>
l2305FC86:
	a4Out = a4
	a5Out = a5_12
	return a3
co_pack8p_exit:


word32 phy_freq_to_channel(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_add_ie_ht_oper
//      me_build_associate_req
//      me_extract_country_reg
//      me_build_probe_rsp
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
phy_freq_to_channel_entry:
l2305FC9C:
	word32 a4_11
	word32 a5_20
	word32 a5_13
	branch a0 != 0<32> l2305FCD0
l2305FCD0:
	a4_11 = 1<32>
	a5_20 = 0<32>
	branch a0 != 1<32> l2305FCCC
l2305FCD8:
	word32 a4_10 = a1 + 0xFEFFFC73<32> << 16<i32>
	a4_11 = a4_10 >>u 16<i32>
	a3 = 820<i32>
	branch a4_10 >>u 16<i32> >u 820<i32> l2305FCCC
l2305FCEC:
	a5_13 = 0xFEFFFC78<32>
l2305FC9E:
	word32 a4_17 = a1 + 0xFF000694<32> << 16<i32>
	a4_11 = a4_17 >>u 16<i32>
	a3 = 72<i32>
	a5_20 = 0<32>
	branch a4_17 >>u 16<i32> >u 72<i32> l2305FCCC
l2305FCB4:
	a4_11 = 0xFFF9B4<32>
	a5_20 = 0xE<32>
	branch a1 == 0xFFF9B4<32> l2305FCCC
l2305FCC0:
	a5_13 = 0xFF000699<32>
l2305FCC4:
	a5_20 = a1 + a5_13 ^ 5<32>
l2305FCCC:
	a3Out = a3
	a4Out = a4_11
	a5Out = a5_20
	return a5_20
phy_freq_to_channel_exit:


word32 phy_channel_to_freq(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_extract_csa
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a4 a5
// Preserved: sp
phy_channel_to_freq_entry:
l2305FCF2:
	word32 a1_10
	branch a0 != 0<32> l2305FD18
l2305FD18:
	branch a1 >u -165<i32> l2305FD36
l2305FD20:
	a1_10 = 0x1000388<32>
l2305FCF8:
	branch a1 >u 0xFFFFFFF2<32> l2305FD36
l2305FD36:
	return 0xFFFFFFF<32>
l2305FCFE:
	branch a1 == 0xE<32> l2305FD2E
l2305FD2E:
	return 0xFFF9B4<32>
l2305FD04:
	a1_10 = 0xFFF967<32>
l2305FD10:
	return CONVERT(SLICE(a1 + 5<32> + a1_10, word16, 0), word16, word32)
phy_channel_to_freq_exit:


word32 me_add_ie_ssid(word32 a1, word32 a2, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
me_add_ie_ssid_entry:
l2305FD3C:
	Mem15[a4:byte] = 0<8>
	word32 a0_16 = Mem15[a4:word32]
	Mem18[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	word32 a5_14 = a1
	branch a1 == 0<32> l2305FD66
l2305FD5A:
	word32 a4_51
	co_pack8p(Mem18[a0_16:word32] + 2<32>, a2, a1, out a4_51, out a5_14)
l2305FD66:
	Mem35[a5_14 + (a1 + 2<i32>):word32] = Mem18[a5_14:word32]
	return a1 + 2<i32>
me_add_ie_ssid_exit:


word32 me_add_ie_supp_rates(word32 a1, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
// MayUse:  a1:[0..31]
// LiveOut: a0 a3 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
me_add_ie_supp_rates_entry:
l2305FD78:
	word32 a5_11 = CONVERT(Mem9[a1:byte], byte, word32)
	word32 a2_15 = 8<32>
	branch a5_11 >u 8<32> l2305FD90
l2305FD8E:
	a2_15 = a5_11
l2305FD90:
	Mem22[8<32>:byte] = 1<8>
	word32 s1_24 = a2_15 + 2<i32>
	word32 a4_27 = a5_11
	branch a5_11 <=u 8<32> l2305FDA8
l2305FDA6:
	a4_27 = 8<32>
l2305FDA8:
	Mem31[2<32>:byte] = SLICE(a4_27, byte, 0)
	word32 a4_66
	word32 a5_41
	word32 a3_39 = co_pack8p(0xA<32>, a1 + 1<32>, a2_15, out a4_66, out a5_41)
	Mem49[a5_41 + s1_24:word32] = Mem31[a5_41:word32]
	a0Out = s1_24
	a3Out = a3_39
	return s1_24
me_add_ie_supp_rates_exit:


word32 me_add_ie_ext_supp_rates(word32 a1, word32 a5, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a0 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
me_add_ie_ext_supp_rates_entry:
l2305FDC8:
	word32 a2_14 = CONVERT(Mem9[a1:byte], byte, word32)
	Mem15[a5:byte] = 0x32<8>
	word32 a0_16 = Mem15[a5:word32]
	Mem19[a5 + 1<i32>:byte] = SLICE(a2_14 + 0xFFFFFFF8<32>, byte, 0)
	word32 a4_25
	word32 a5_26
	word32 a3_24 = co_pack8p(Mem19[a0_16:word32] + 2<32>, a1 + 9<32>, a2_14 + 0xFFFFFFF8<32>, out a4_25, out a5_26)
	word32 a5_30 = a5_26 + (a2_14 + -6<i32>)
	Mem31[a5_30:word32] = Mem19[a5_26:word32]
	a0Out = a2_14 + -6<i32>
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_30
	return a2_14 + -6<i32>
me_add_ie_ext_supp_rates_exit:


word32 me_add_ie_ds(word32 a1, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
//      me_build_probe_rsp
// MayUse:  a1:[0..7] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
me_add_ie_ds_entry:
l2305FE08:
	Mem7[a5:byte] = 3<8>
	Mem10[a5 + 1<i32>:byte] = 1<8>
	Mem13[a5 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem16[a5 + 3<32>:word32] = Mem13[a5:word32]
	a4Out = 1<32>
	a5Out = a5 + 3<32>
	return 3<32>
me_add_ie_ds_exit:


word32 me_add_ie_erp(word32 a1, word32 a5, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
//      me_build_probe_rsp
// MayUse:  a1:[0..7] a5:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
me_add_ie_erp_entry:
l2305FE28:
	Mem7[a5:byte] = 0x2A<8>
	Mem10[a5 + 1<i32>:byte] = 1<8>
	Mem13[a5 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem16[a5 + 3<32>:word32] = Mem13[a5:word32]
	a4Out = 1<32>
	return 3<32>
me_add_ie_erp_exit:


word32 me_add_ie_rsn(word32 a1, word32 a4, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
//      me_build_probe_rsp
// MayUse:  a1:[0..31] a4:[0..31]
// LiveOut: a0 a2 a5
// Trashed: a0 a2 a3 a4 a5 a6
// Preserved: sp
me_add_ie_rsn_entry:
l2305FE4A:
	word32 a0_11
	branch a1 != 1<32> l2305FED6
l2305FED6:
	a0_11 = 0<32>
	branch a1 != 2<32> l2305FECE
l2305FEDE:
	Mem13[a4:byte] = 0x30<8>
	Mem17[a4 + 1<i32>:byte] = 0x18<8>
	Mem21[a4 + 2<i32>:byte] = 1<8>
	Mem22[a4 + 3<i32>:byte] = 0<8>
	Mem24[a4 + 4<i32>:byte] = 0<8>
	Mem25[a4 + 5<i32>:byte] = 0xF<8>
	Mem26[a4 + 6<i32>:byte] = 0xAC<8>
	Mem27[a4 + 7<i32>:byte] = SLICE(a1, byte, 0)
	Mem29[a4 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem30[a4 + 9<i32>:byte] = 0<8>
	Mem32[a4 + 10<i32>:byte] = 0<8>
	Mem33[a4 + 11<i32>:byte] = 0xF<8>
	Mem34[a4 + 12<i32>:byte] = 0xAC<8>
	Mem35[a4 + 13<i32>:byte] = SLICE(a1, byte, 0)
	Mem37[a4 + 17<i32>:byte] = 4<8>
	Mem38[a4 + 14<i32>:byte] = 0<8>
	Mem39[a4 + 15<i32>:byte] = 0xF<8>
	Mem40[a4 + 16<i32>:byte] = 0xAC<8>
	Mem43[a4 + 18<i32>:byte] = 1<8>
	Mem44[a4 + 19<i32>:byte] = 0<8>
	Mem46[a4 + 20<i32>:byte] = 0<8>
	Mem47[a4 + 21<i32>:byte] = 0xF<8>
	Mem48[a4 + 22<i32>:byte] = 0xAC<8>
	Mem49[a4 + 23<i32>:byte] = SLICE(a1, byte, 0)
	Mem51[a4 + 24<i32>:byte] = 0<8>
	Mem52[a4 + 25<i32>:byte] = 0<8>
	a2 = 0xF<32>
	a0_11 = 0x1A<32>
l2305FE54:
	Mem54[a4:byte] = 0x30<8>
	Mem58[a4 + 1<i32>:byte] = 0x14<8>
	Mem61[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem62[a4 + 3<i32>:byte] = 0<8>
	Mem65[a4 + 6<i32>:byte] = 0xAC<8>
	Mem66[a4 + 7<i32>:byte] = 4<8>
	Mem67[a4 + 4<i32>:byte] = 0<8>
	Mem68[a4 + 5<i32>:byte] = 0xF<8>
	Mem70[a4 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem71[a4 + 9<i32>:byte] = 0<8>
	Mem73[a4 + 12<i32>:byte] = 0xAC<8>
	Mem74[a4 + 13<i32>:byte] = 4<8>
	Mem75[a4 + 10<i32>:byte] = 0<8>
	Mem76[a4 + 11<i32>:byte] = 0xF<8>
	Mem79[a4 + 14<i32>:byte] = SLICE(a1, byte, 0)
	Mem80[a4 + 15<i32>:byte] = 0<8>
	Mem82[a4 + 18<i32>:byte] = 0xAC<8>
	Mem84[a4 + 16<i32>:byte] = 0<8>
	Mem85[a4 + 17<i32>:byte] = 0xF<8>
	Mem86[a4 + 19<i32>:byte] = 2<8>
	Mem88[a4 + 20<i32>:byte] = 0<8>
	Mem89[a4 + 21<i32>:byte] = 0<8>
	a2 = 0xF<32>
	a0_11 = 0x16<32>
l2305FECE:
	word32 a5_92 = Mem91[a4:word32]
	Mem95[a4 + a0_11:word32] = a5_92
	a2Out = a2
	a5Out = a5_92
	return a0_11
me_add_ie_rsn_exit:


word32 me_add_ie_wpa(word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
//      me_build_probe_rsp
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a3 a4 a5 a6
// Preserved: sp
me_add_ie_wpa_entry:
l2305FF6A:
	word32 a4_20 = 2<32>
	word32 a0_50 = 0<32>
	branch a1 != 2<32> l2306000A
l2305FF74:
	Mem12[2<32>:byte] = 0xDD<8>
	Mem16[3<32>:byte] = 0x1C<8>
	Mem21[a2 + 5<i32>:byte] = 1<8>
	Mem22[a2 + 2<i32>:byte] = 0<8>
	Mem23[a2 + 3<i32>:byte] = 0x50<8>
	Mem24[a2 + 4<i32>:byte] = 0xF2<8>
	Mem26[a2 + 6<i32>:byte] = 1<8>
	Mem27[a2 + 7<i32>:byte] = 0<8>
	Mem29[a2 + 8<i32>:byte] = 0<8>
	Mem30[a2 + 9<i32>:byte] = 0x50<8>
	Mem31[a2 + 10<i32>:byte] = 0xF2<8>
	Mem32[a2 + 11<i32>:byte] = SLICE(a1, byte, 0)
	Mem34[a2 + 12<i32>:byte] = SLICE(a1, byte, 0)
	Mem35[a2 + 13<i32>:byte] = 0<8>
	Mem37[a2 + 14<i32>:byte] = 0<8>
	Mem38[a2 + 15<i32>:byte] = 0x50<8>
	Mem39[a2 + 16<i32>:byte] = 0xF2<8>
	Mem40[a2 + 17<i32>:byte] = SLICE(a1, byte, 0)
	Mem42[a2 + 18<i32>:byte] = 0<8>
	Mem43[a2 + 19<i32>:byte] = 0x50<8>
	Mem44[a2 + 20<i32>:byte] = 0xF2<8>
	Mem45[a2 + 21<i32>:byte] = 4<8>
	Mem47[a2 + 22<i32>:byte] = 1<8>
	Mem48[a2 + 23<i32>:byte] = 0<8>
	Mem51[a2 + 24<i32>:byte] = 0<8>
	Mem52[a2 + 25<i32>:byte] = 0x50<8>
	Mem53[a2 + 26<i32>:byte] = 0xF2<8>
	Mem54[a2 + 27<i32>:byte] = SLICE(a1, byte, 0)
	a3 = 80<i32>
	a4_20 = 0xFFFFFFF2<32>
	a0_50 = 0x1E<32>
l2306000A:
	word32 a4_59 = a4_20 + a0_50
	Mem60[a4_59:word32] = Mem56[a4_20:word32]
	a3Out = a3
	a4Out = a4_59
	return a0_50
me_add_ie_wpa_exit:


word32 me_add_ie_tim(word32 a1, word32 a5, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
// MayUse:  a1:[0..7] a5:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
me_add_ie_tim_entry:
l23060012:
	Mem7[a5:byte] = 5<8>
	Mem10[a5 + 1<i32>:byte] = 4<8>
	Mem13[a5 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem16[a5 + 6<32>:word32] = Mem13[a5:word32]
	a4Out = 4<32>
	return 6<32>
me_add_ie_tim_exit:


word32 me_add_ie_ht_capa(word32 a4, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
// MayUse:  a4:[0..31]
// LiveOut: a0 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
me_add_ie_ht_capa_entry:
l23060032:
	word32 a5_15 = CONVERT(Mem9[0x4201C8C8<32>:uint16], uint16, word32)
	Mem16[a4:byte] = 0x2D<8>
	Mem20[a4 + 1<i32>:byte] = 0x1A<8>
	word32 a5_22 = a5_15 & 0xFFFFFFF3<32> | 12<i32>
	Mem24[a4 + 2<i32>:byte] = SLICE(a5_22, byte, 0)
	Mem26[a4 + 3<i32>:byte] = SLICE(a5_22 >>u 8<i32>, byte, 0)
	word32 a0_28 = Mem26[a5_22 >>u 8<i32>:word32]
	Mem31[(a5_22 >>u 8<i32>) + 4<i32>:byte] = SLICE(CONVERT(Mem26[0x4201C8CA<32>:byte], byte, word32), byte, 0)
	word32 a0_32 = Mem31[a0_28:word32]
	word32 a4_36
	word32 a5_69
	co_pack8p(a0_32 + 5<32>, 0x4201C8CB<32>, 0x10<32>, out a4_36, out a5_69)
	word32 a5_38 = CONVERT(Mem31[0x4201C8DC<32>:uint16], uint16, word32)
	Mem42[a4_36 + 21<i32>:byte] = SLICE(a5_38, byte, 0)
	Mem44[a4_36 + 22<i32>:byte] = SLICE(a5_38 >>u 8<i32>, byte, 0)
	word32 a5_50
	word32 a4_70
	co_pack8p(a0_32 + 0x1C<32>, 0x4201C8E0<32>, 4<32>, out a4_70, out a5_50)
	Mem54[a5_50 + 27<i32>:byte] = SLICE(CONVERT(Mem44[0x4201C8E4<32>:byte], byte, word32), byte, 0)
	Mem59[a5_50 + 0x1C<32>:word32] = Mem54[a5_50:word32]
	a0Out = 0x1C<32>
	a5Out = a5_50 + 0x1C<32>
	return 0x4201C8BC<32>
me_add_ie_ht_capa_exit:


word32 me_add_ie_ht_oper(word32 s1, word32 a5, ptr32 & a2Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
// MayUse:  a5:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3
// Trashed: a0 a1 a2 a3 a4 a5 tp
// Preserved: s0 sp
me_add_ie_ht_oper_entry:
l230600C6:
	Mem14[a5:byte] = 0x3D<8>
	Mem18[a5 + 1<i32>:byte] = 0x16<8>
	word32 a5_23
	word32 a4_22
	word32 a3_24
	Mem27[a5_23 + 2<i32>:byte] = SLICE(phy_freq_to_channel(CONVERT(Mem18[s1 + 4<i32>:byte], byte, word32), CONVERT(Mem18[s1 + 6<i32>:uint16], uint16, word32), out a3_24, out a4_22, out a5_23), byte, 0)
	word32 a5_28 = CONVERT(Mem27[s1 + 5<i32>:byte], byte, word32)
	branch a5_28 == 0<32> l2306010C
l230600FC:
	a3_24 = CONVERT(Mem27[s1 + 6<i32>:uint16], uint16, word32)
	a4_22 = CONVERT(Mem27[s1 + 8<i32>:uint16], uint16, word32)
	a5_28 = 7<32>
	branch a4_22 <u a3_24 l2306010C
l2306010A:
	a5_28 = 5<32>
l2306010C:
	Mem38[a4_22 + 3<i32>:byte] = SLICE(a5_28, byte, 0)
	Mem41[a5_28 + 4<i32>:byte] = 3<8>
	Mem42[a5_28 + 5<i32>:byte] = 0<8>
	Mem45[a5_28 + 6<i32>:byte] = 0<8>
	Mem46[a5_28 + 7<i32>:byte] = 0<8>
	Mem48[a5_28 + 8<i32>:byte] = 0xFF<8>
	Mem54[a5_28 + 0x18<32>:word32] = Mem48[a5_28:word32]
	a2Out = dwArg10
	a3Out = a3_24
	return 0x18<32>
me_add_ie_ht_oper_exit:


word32 me_build_authenticate(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_auth_send
//      apm_send_mlme
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a5
// Preserved: sp
me_build_authenticate_entry:
l23060142:
	Mem5[a0:byte] = SLICE(a1, byte, 0)
	Mem7[a0 + 2<i32>:byte] = SLICE(a2, byte, 0)
	Mem11[a0 + 4<i32>:byte] = SLICE(a3, byte, 0)
	Mem13[a0 + 1<i32>:byte] = SLICE(a1 >>u 8<i32>, byte, 0)
	Mem14[a0 + 3<i32>:byte] = SLICE(a2 >>u 8<i32>, byte, 0)
	Mem15[a0 + 5<i32>:byte] = SLICE(a3 >>u 8<i32>, byte, 0)
	branch a4 == 0<32> l23060194
l23060194:
	a3Out = a3 >>u 8<i32>
	a5Out = a5
	return 6<32>
l23060162:
	Mem19[a0 + 6<i32>:byte] = 0x10<8>
	Mem21[a0 + 7<i32>:byte] = 0x80<8>
	word32 a5_24 = 0<32>
l23060178:
	Mem33[a0 + 8<32> + a5_24:byte] = SLICE(CONVERT(Mem28[a4 + a5_24:byte], byte, word32), byte, 0)
	a5_24 = a5_24 + 1<32>
	branch a5_24 != 128<i32> l23060178
l2306018E:
	a3Out = 128<i32>
	a5Out = a5_24
	return 136<i32>
me_build_authenticate_exit:


word32 me_build_deauthenticate(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_disconnect
//      sm_handle_supplicant_result
//      apm_send_mlme
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a1
// Preserved: sp
me_build_deauthenticate_entry:
l23060198:
	Mem5[a0:byte] = SLICE(a1, byte, 0)
	Mem7[a0 + 1<i32>:byte] = SLICE(a1 >>u 8<i32>, byte, 0)
	return 2<32>
me_build_deauthenticate_exit:


word32 me_build_associate_req(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 a6, word32 s6, word32 s8, word32 s10, word32 s11, word32 dwArg04, word32 dwArg40, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_assoc_req_send
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s6:[0..7] s8:[24..31] Stack +0004:[0..31] Stack +0040:[0..31]
// LiveOut: a0 a3 a4 ra s2 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s10 sp t1
me_build_associate_req_entry:
l230601A6:
	int8 bLoc50_515 = SLICE(s6, int8, 0)
	byte bLoc51_523 = SLICE(s8, byte, 24)
	word32 s0_31 = CONVERT(Mem29[a6 + 56<i32>:uint16], uint16, word32)
	word32 s5_41 = CONVERT(Mem33[a6 + 54<i32>:uint16], uint16, word32)
	word32 s8_154 = CONVERT(Mem33[a6 + 60<i32>:byte], byte, word32)
	branch s0_31 != 0<32> l230601DC
l230601DA:
	s0_31 = 5<32>
l230601DC:
	word32 a2_52
	word32 a5_55
	word32 a4_835
	word32 a3_834
	word32 a0_51 = me_build_capability(a3, out a2_52, out a3_834, out a4_835, out a5_55)
	0<32> = dwArg04
	Mem58[a5_55:byte] = SLICE(a0_51, byte, 0)
	Mem59[a5_55 + 1<i32>:byte] = SLICE(a0_51 >>u 8<u32>, byte, 0)
	Mem63[a5_55 + 2<i32>:byte] = SLICE(s0_31, byte, 0)
	Mem65[a5_55 + 3<i32>:byte] = SLICE(s0_31 >>u 8<i32>, byte, 0)
	word32 a4_57 = a0_51 >>u 8<u32>
	word32 s0_66 = 4<32>
	branch a2_52 == 0<32> l23060226
l23060206:
	Mem70[a5_55 + 4<i32>:word16] = SLICE(CONVERT(Mem65[a2_52:uint16], uint16, word32), word16, 0)
	Mem73[a5_55 + 6<i32>:word16] = SLICE(CONVERT(Mem70[a2_52 + 2<i32>:uint16], uint16, word32), word16, 0)
	a4_57 = CONVERT(Mem73[a2_52 + 4<i32>:uint16], uint16, word32)
	Mem76[a5_55 + 8<i32>:word16] = SLICE(a4_57, word16, 0)
	s0_66 = 0xA<32>
l23060226:
	Mem89[a4:word32] = a5_55 + s0_66
	word32 a0_94 = me_add_ie_ssid(CONVERT(Mem89[a1 + 38<i32>:byte], byte, word32), a1 + 39<i32>, a4_57)
	word32 a0_105
	word32 a3_108
	word32 s1_111 = me_add_ie_supp_rates(a1 + 88<i32>, out a0_105, out a3_108)
	word32 a5_117 = 8<32>
	word32 s0_118 = CONVERT(SLICE(s0_66 + (a0_105 + a0_94), word16, 0), word16, word32)
	branch CONVERT(Mem91[a1 + 88<i32>:byte], byte, word32) <=u 8<32> l2306026C
l2306025E:
	word32 a0_121
	word32 a4_836
	s1_111 = me_add_ie_ext_supp_rates(a1 + 88<i32>, 8<32>, out a0_121, out a3_108, out a4_836, out a5_117)
	s0_118 = CONVERT(SLICE(s0_118 + a0_121, word16, 0), word16, word32)
l2306026C:
	word32 s2_134 = a0_51 & 256<i32>
	branch (a0_51 & 256<i32>) == 0<32> l23060344
l23060274:
	Mem144[a5_117:byte] = 0x21<8>
	Mem149[a5_117:byte] = 2<8>
	word32 s0_153 = phy_get_rf_gain_capab(fp + -80<i32>, fp + -81<i32>, out s8_154)
	word32 a5_159 = CONVERT(Mem149[Mem149[a1 + 76<i32>:int32] + 4<i32>:int8], int8, int32)
	branch a5_159 >= CONVERT(bLoc50_515, int8, int32) l230602B0
l230602AC:
	bLoc50_515 = SLICE(a5_159, byte, 0)
l230602B0:
	word32 a6_190
	Mem168[a5_159:byte] = SLICE(CONVERT(bLoc51_523, byte, word32), byte, 0)
	Mem173[a5_159:byte] = SLICE(CONVERT(bLoc50_515, int8, word32), byte, 0)
	Mem178[a5_159:byte] = 0x24<8>
	word32 dwArg0C_531 = a3_108 + 1<i32>
	branch CONVERT(Mem183[Mem183[a1 + 76<i32>:int32] + 2<i32>:byte], byte, word32) != 0<32> l23060410
l23060410:
	a6_190 = CONVERT(Mem183[0x4201C9E9<32>:byte], byte, word32)
	s2_134 = 0x4201C940<32>
l230602FC:
	a6_190 = CONVERT(Mem183[0x4201C9E8<32>:byte], byte, word32)
	s2_134 = 0x4201C8EC<32>
l2306030A:
	word32 a7_197 = 0<32>
	word32 s4_198 = 0<32>
	word32 s10_199 = 0<32>
	word32 t1_200 = 0<32>
	a5_117 = 0<32>
l23060314:
	word32 s9_206 = a7_197 + 2<i32>
	branch s10_199 != a6_190 l23060420
l23060420:
	branch (CONVERT(Mem203[s2_134 + 3<i32>:byte], byte, word32) & 2<32>) != 0<32> l2306048C
l2306042A:
	word32 a5_847
	word32 a4_846
	word32 a0_227 = phy_freq_to_channel(CONVERT(Mem214[s2_134 + 2<i32>:byte], byte, word32), CONVERT(Mem214[s2_134:uint16], uint16, word32), out a3_108, out a4_846, out a5_847)
	0<32> = s11
	a6_190 = s10
	word32 s4_235 = a7_197
	a5_117 = a0_227 & 255<i32>
	branch a7_197 == 0<32> l23060482
l23060454:
	s0_153 = dwArg40
	branch (a0_227 & 255<i32>) - t1_200 == dwLoc14 l23060482
l23060464:
	Mem245[s11:byte] = SLICE(a0_227 & 255<i32>, byte, 0)
	Mem249[dwArg0C_531:byte] = SLICE(a7_197, byte, 0)
	s8_154 = dwLoc14
	a7_197 = s9_206 & 255<i32>
	dwArg0C_531 = dwArg0C_531 + 1<i32>
	s4_235 = a7_197 + 1<i32> & 255<i32>
l23060482:
	s4_198 = s4_235 + 1<32> & 255<i32>
	s2_134 = s2_134 + 6<32>
	t1_200 = a0_227 & 255<i32>
l2306048C:
	s10_199 = s10_199 + 1<32> & 255<i32>
l23060326:
	Mem263[s11:byte] = SLICE(a5_117, byte, 0)
	Mem276[a5_117:byte] = SLICE(s4_198, byte, 0)
	Mem278[a3_108:byte] = SLICE(s9_206 & 255<i32>, byte, 0)
	s0_118 = CONVERT(SLICE(s0_153 + 6<32> + (s9_206 & 255<i32>), word16, 0), word16, word32)
l23060344:
	word32 a4_299 = s1_111 + s5_41
	word32 a6_300 = s1_111
	word32 a5_302 = a5_117 - s1_111
l2306034E:
	branch a4_299 != a6_300 l23060494
l23060494:
	Mem310[a5_302 + a6_300:byte] = SLICE(CONVERT(Mem305[a6_300 + 64<i32>:byte], byte, word32), byte, 0)
	a6_300 = a6_300 + 1<32>
l23060352:
	word32 s5_319 = s5_41 + a5_302
	word32 s0_328 = CONVERT(SLICE(s0_118 + s5_41, word16, 0), word16, word32)
	branch (Mem305[a1 + 136<i32>:int32] & 1<32>) == 0<32> l230603C6
l23060366:
	word32 a3_841
	word32 a4_842
	word32 a1_839
	word32 t1_837
	word32 a0_838
	word32 a5_843
	word32 a2_840
	memset(ra, fp + -78<i32>, 0<32>, 0xE<32>, out t1_837, out a0_838, out a1_839, out a2_840, out a3_841, out a4_842, out a5_843)
	branch Mem359[0x4201A7D8<32>:int32] == 0<32> l230603A6
l2306039A:
	branch CONVERT(Mem359[a1 + 104<i32>:int8], int8, int32) >= 0<32> l230603A6
l230603A2:
l230603A6:
	word32 a4_844
	word32 a5_845
	co_pack8p(s5_319, fp + -80<i32>, 9<32>, out a4_844, out a5_845)
	a4_299 = 7<32>
	s0_328 = CONVERT(SLICE(s0_328 + 9<32>, word16, 0), word16, word32)
l230603C6:
	word32 a5_396 = Mem395[a1 + 136<i32>:int32]
	word32 a5_397 = a5_396 & 2<32>
	branch (a5_396 & 2<32>) == 0<32> l230603E4
l230603CE:
	a5_397 = CONVERT(Mem395[0x4201C8EA<32>:byte], byte, word32)
	branch a5_397 == 0<32> l230603E4
l230603D8:
	word32 a0_403
	me_add_ie_ht_capa(a4_299, out a0_403, out a5_397)
	s0_328 = CONVERT(SLICE(s0_328 + a0_403, word16, 0), word16, word32)
l230603E4:
	word32 a4_427 = Mem395[a4:int32]
	Mem449[a5:word16] = SLICE(a5_397 - a4_427, word16, 0)
	a0Out = s0_328
	a3Out = dwLoc14
	a4Out = a4_427
	s2Out = s2_134
	s8Out = s8_154
	return dwArg0158
me_build_associate_req_exit:


