void console_cb_read(word32 ra, word32 a0, word32 a3, word32 a4, word32 s6, word32 s10, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArg2C, word32 dwArg34, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg98, word32 dwArg9C, word32 dwArgB8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
console_cb_read_entry:
l230304AC:
	word32 a0_13
	word32 s0_17
	word32 a1_152
	word32 ra_21 = aos_read(ra, a0, fp + 0xFFFFFFE0<32>, a4, dwLoc20, dwArg24, out s0_17, out a0_13, out a1_152)
	branch a0_13 <= 0<32> l230304D6
l230304C0:
	branch a0_13 > 0x10<32> l230304DE
l230304DE:
	word32 s1_153
	word32 a0_154
	word32 a1_155
	word32 a2_156
	word32 a3_157
	word32 a4_158
	word32 a5_159
	word32 a7_160
	word32 s2_161
	word32 s3_162
	word32 s4_163
	word32 s5_164
	word32 s6_165
	word32 s7_166
	word32 s8_167
	word32 s9_168
	word32 s10_169
	word32 s11_170
	word32 t4_171
	printf(ra_21, 0x23077804<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_153, out a0_154, out a1_155, out a2_156, out a3_157, out a4_158, out a5_159, out a7_160, out s2_161, out s3_162, out s4_163, out s5_164, out s6_165, out s7_166, out s8_167, out s9_168, out s10_169, out s11_170, out t4_171)
l230304C8:
	Mem51[0x4200E1DC<32>:word32] = s0_17
	word32 s1_172
	word32 a0_173
	word32 s2_174
	word32 s6_175
	word32 s10_176
	word32 mstatus_177
	cli_main_input(ra_21, s0_17, fp + 0xFFFFFFE0<32>, 0x4200E000<32>, s6, s10, mstatus, dwLoc20, dwLoc1C, dwLoc04, dwArg08, dwArg2C, dwArg34, dwArg54, dwArg78, dwArg98, dwArgB8, out s1_172, out a0_173, out s2_174, out s6_175, out s10_176, out mstatus_177)
l230304D6:
	return
console_cb_read_exit:


word32 aos_cli_input_direct(word32 ra, word32 s0, word32 a0, word32 a5, word32 s6, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg1C, word32 dwArg28, word32 dwArg4C, word32 dwArg54, word32 dwArg74, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      app_delayed_action_bleadv
//      event_cb_cli
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 mstatus ra s1 s10 s2 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aos_cli_input_direct_entry:
l230304EC:
l230304EC_thunk_cli_main_input:
	word32 a0_11
	word32 s1_21
	word32 s10_22
	word32 s2_24
	word32 s6_27
	word32 mstatus_36
	word32 ra_19 = cli_main_input(ra, s0, a0, a5, s6, s10, mstatus, dwArg00, dwArg04, dwArg1C, dwArg28, dwArg4C, dwArg54, dwArg74, dwArg98, dwArgB8, dwArgD8, out s1_21, out a0_11, out s2_24, out s6_27, out s10_22, out mstatus_36)
	s1Out = s1_21
	a0Out = a0_11
	s2Out = s2_24
	s6Out = s6_27
	s10Out = s10_22
	mstatusOut = mstatus_36
	return ra_19
aos_cli_input_direct_exit:


void get_dns_request(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..15] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
get_dns_request_entry:
	uint16 wLoc4C = SLICE(dwLoc4C, uint16, 0)
l230304F0:
	Mem22[a0 + 264<i32>:word32] = a1
	Mem24[a0 + 268<i32>:word32] = a3
	Mem26[a0 + 272<i32>:word16] = SLICE(a4, word16, 0)
	word32 a4_101 = CONVERT(Mem26[a2 + 8<i32>:uint16], uint16, word32)
	word32 s1_117 = a2
	branch a4_101 <=u 0xB<32> l2303058E
l2303051C:
	word32 s1_43
	word32 s3_736
	word32 s8_738
	word32 s4_737
	word32 a0_730
	word32 a3_732
	word32 a2_731
	word32 a4_733
	word32 s2_735
	word32 a5_734
	word32 s0_39 = pbuf_copy_partial(a2, fp + -76<i32>, 0xC<32>, 0<32>, out s1_43, out a0_730, out a2_731, out a3_732, out a4_733, out a5_734, out s2_735, out s3_736, out s4_737, out s8_738)
	word32 a5_739
	Mem59[s0_39 + 256<i32>:word16] = SLICE(lwip_htons(CONVERT(wLoc4C, uint16, word32), out a5_739), word16, 0)
	word32 a5_740
	Mem63[s0_39 + 258<i32>:word16] = SLICE(lwip_htons(CONVERT(wLoc48, uint16, word32), out a5_740), word16, 0)
	word32 a2_64 = CONVERT(Mem63[s1_43 + 8<i32>:uint16], uint16, word32)
	branch a2_64 <=u 255<i32> l23030550
l2303054C:
	a2_64 = 255<i32>
l23030550:
	word32 a2_742
	word32 a5_744
	word32 a4_743
	word32 s2_745
	word32 s8_747
	word32 s3_746
	word32 a0_741
	word32 s0_80 = pbuf_copy_partial(s1_43, s0_39, CONVERT(SLICE(a2_64, word16, 0), word16, word32), 0xC<32>, out s1_117, out a0_741, out a2_742, out a3, out a4_743, out a5_744, out s2_745, out s3_746, out s4, out s8_747)
	word32 a5_102
	branch utils_dns_domain_get(s0_80, s0_80, fp + -80<i32>, out a4_101, out a5_102) != 0<32> l2303058E
l2303056C:
	0<32> = dwArg94
	branch a5_102 <= 0<32> l23030586
l23030572:
	a5_102 = a5_102 + 0xFFFFFFFF<32>
	a3 = CONVERT(Mem76[s0_80 + (a5_102 + 0xFFFFFFFF<32>):byte], byte, word32)
	a4_101 = 46<i32>
	branch a3 != 46<i32> l23030586
l23030584:
l23030586:
	0<32> = dwArg94
	Mem116[a5_102 + s0_80:byte] = 0<8>
l2303058E:
	word32 s0_137
	word32 a3_141
	word32 a4_142
	word32 s1_144
	word32 mstatus_158
	word32 a0_163
	word32 s0_168
	word32 mstatus_179
	word32 s5_727
	word32 s8_729
	word32 s6_728
	word32 s2_724
	word32 s4_726
	word32 s3_725
	word32 a4_721
	word32 a7_723
	word32 a5_722
	word32 s1_717
	word32 a1_718
	word32 a3_720
	word32 a2_719
	word32 s5_714
	word32 s8_716
	word32 s6_715
	word32 s4_713
	word32 s3_712
	word32 s2_711
	word32 a7_710
	word32 a0_706
	word32 a1_707
	word32 a5_709
	word32 a2_708
	word32 ra_180 = pbuf_alloc(pbuf_free(ra, s1_117, a3, a4_101, s4, mstatus, dwArgD8, out s0_137, out s1_144, out a0_706, out a1_707, out a2_708, out a3_141, out a4_142, out a5_709, out a7_710, out s2_711, out s3_712, out s4_713, out s5_714, out s6_715, out s8_716, out mstatus_158), s0_137, s1_144, 182<i32>, 512<i32>, 640<i32>, a3_141, a4_142, mstatus_158, dwLoc4C, dwLoc0C, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_168, out s1_717, out a0_163, out a1_718, out a2_719, out a3_720, out a4_721, out a5_722, out a7_723, out s2_724, out s3_725, out s4_726, out s5_727, out s6_728, out s8_729, out mstatus_179)
	branch a0_163 == 0<32> l230306EE
l230305AA:
	word32 a5_754
	word32 t1_748
	word32 a1_750
	word32 a0_749
	word32 a2_751
	word32 a4_753
	word32 a3_752
	word32 ra_198 = memset(ra_180, fp + -64<i32>, 0<32>, 0xC<32>, out t1_748, out a0_749, out a1_750, out a2_751, out a3_752, out a4_753, out a5_754)
	word32 a5_755
	lwip_htons(CONVERT(Mem134[s0_168 + 256<i32>:uint16], uint16, word32), out a5_755)
	word32 a5_756
	lwip_htons(0x8000180<32>, out a5_756)
	word32 a5_757
	lwip_htons(1<32>, out a5_757)
	word32 a5_758
	lwip_htons(1<32>, out a5_758)
	word32 a5_759
	lwip_htons(0<32>, out a5_759)
	word32 a5_760
	lwip_htons(0<32>, out a5_760)
	word32 a4_762
	word32 a3_761
	word32 s4_763
	word32 s8_764
	word32 s3_245
	word32 s2_244
	word32 s1_235
	word32 s0_234 = pbuf_take(a0_163, fp + -64<i32>, 0xC<32>, out s1_235, out a3_761, out a4_762, out s2_244, out s3_245, out s4_763, out s8_764)
l2303060A:
	word32 s3_253 = s3_245 + 1<32>
	word32 s4_255 = 0<32>
	s3_256 = s3_253
l23030610:
	word32 s3_256
	word32 a5_258 = CONVERT(Mem227[s3_256:byte], byte, word32)
	branch a5_258 != 46<i32> l23030702
l23030702:
	branch a5_258 == 0<32> l23030618
l23030706:
	s4_255 = s4_255 + 1<32> & 255<i32>
	s3_256 = s3_256 + 1<32>
l23030618:
	pbuf_put_at(s0_234, s1_235, s2_244, s4_255)
	word32 s4_320
	word32 a4_766
	word32 s8_767
	word32 a3_765
	s0_234 = pbuf_take_at(s1_235, s3_253, CONVERT(SLICE(s3_256 - s3_253, word16, 0), word16, word32), CONVERT(SLICE(s2_244 + 1<i32>, word16, 0), word16, word32), dwArgD8, out s1_235, out a3_765, out a4_766, out s3_245, out s4_320, out s8_767)
	s2_244 = CONVERT(SLICE((s4_320 >>u 0x10<u32>) + 1<i32>, word16, 0), word16, word32)
	branch CONVERT(Mem227[s3_245:byte], byte, word32) != 0<32> l2303060A
l23030654:
	pbuf_put_at(s0_234, s1_235, s2_244, 0<32>)
	word32 a5_768
	lwip_htons(1<32>, out a5_768)
	word32 a5_769
	lwip_htons(1<32>, out a5_769)
	word32 a5_770
	lwip_htons(0xC00000C<32>, out a5_770)
	word32 a5_771
	lwip_htons(1<32>, out a5_771)
	word32 a5_772
	lwip_htons(1<32>, out a5_772)
	word32 a5_773
	lwip_htons(0<32>, out a5_773)
	word32 a3_774
	word32 a5_776
	word32 a4_775
	word32 a0_364 = lwip_htonl(0x3C0004<32>, out a3_774, out a4_775, out a5_776)
	word32 a3_777
	word32 a5_779
	word32 a4_778
	lwip_htonl(0xC0A8A901<32>, out a3_777, out a4_778, out a5_779)
	word32 a3_389
	word32 a4_390
	word32 s1_392
	word32 s4_401
	word32 s3_780
	word32 s8_781
	word32 s0_385 = pbuf_take_at(s1_235, fp + -52<i32>, 0x14<32>, CONVERT(SLICE((s4_320 >>u 0x10<u32>) + 2<i32>, word16, 0), word16, word32), dwArgD8, out s1_392, out a3_389, out a4_390, out s3_780, out s4_401, out s8_781)
	word32 a4_784
	word32 a5_785
	word32 a3_783
	word32 s3_787
	word32 s5_788
	word32 s2_786
	word32 s8_790
	word32 a0_791
	word32 s6_789
	word32 s1_793
	word32 a0_794
	word32 s0_792
	word32 a3_797
	word32 a2_796
	word32 a1_795
	word32 a5_799
	word32 a7_800
	word32 s2_801
	word32 a4_798
	word32 s3_802
	word32 s1_417
	word32 mstatus_423
	word32 s4_427
	word32 a3_444
	word32 a4_445
	word32 mstatus_449
	word32 s1_452
	word32 s4_455
	word32 a2_782
	word32 s4_803
	word32 s5_804
	word32 s6_805
	word32 s8_806
	word32 mstatus_807
	pbuf_free(udp_sendto(pbuf_realloc(ra_198, s1_392, CONVERT(SLICE(s4_401 + 22<i32>, word16, 0), word16, word32), a3_389, a4_390, s4_401, mstatus_179, dwArgC8, out s1_417, out a2_782, out a3_783, out a4_784, out a5_785, out s2_786, out s3_787, out s4_427, out s5_788, out s6_789, out s8_790, out mstatus_423), Mem379[s0_385 + 264<i32>:int32], s1_417, Mem379[s0_385 + 268<i32>:int32], CONVERT(Mem379[s0_385 + 272<i32>:uint16], uint16, word32), s4_427, mstatus_423, a0_364, dwLoc28, dwLoc08, dwArg28, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgD8, out s1_452, out a0_791, out a3_444, out a4_445, out s4_455, out mstatus_449), s1_452, a3_444, a4_445, s4_455, mstatus_449, dwArgD8, out s0_792, out s1_793, out a0_794, out a1_795, out a2_796, out a3_797, out a4_798, out a5_799, out a7_800, out s2_801, out s3_802, out s4_803, out s5_804, out s6_805, out s8_806, out mstatus_807)
l230306EE:
	return
get_dns_request_exit:


word32 dns_server_init(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArg0128, word32 dwArg0168, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateGlobalGuard_AP
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 t0 t1 t3 tp
// Preserved: s0 s2 s3 s4 s8 sp
dns_server_init_entry:
l23030710:
	word32 a4_15
	word32 s1_17
	word32 a5_142
	word32 a3_141
	word32 ra_20 = udp_new(ra, s1, a3, a4, mstatus, out s1_17, out a3_141, out a4_15, out a5_142)
	branch a0 == 0<32> l2303076C
l2303076C:
	a4Out = a4_15
	return ra_20
l2303071E:
	word32 s0_31 = a0
	word32 a4_33
	word32 a5_35
	word32 a3_34
	branch udp_bind(a0, 0x230827AC<32>, 53<i32>, out a3_34, out a4_33, out a5_35) != 0<32> l2303075E
l23030732:
	word32 a0_40
	word32 s1_143
	word32 a1_144
	word32 a2_145
	word32 a4_146
	word32 a5_147
	word32 a6_148
	word32 s2_149
	word32 s3_150
	word32 s4_151
	word32 s8_152
	s0_31 = pvPortMalloc(ra_20, s1_17, 276<i32>, a3_34, a4_33, a5_35, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_143, out a0_40, out a1_144, out a2_145, out a3_34, out a4_146, out a5_147, out a6_148, out s2_149, out s3_150, out s4_151, out s8_152)
	branch a0_40 == 0<32> l2303075E
l2303075E:
l23030768_thunk_udp_remove:
	word32 a4_70
	word32 a3_159
	word32 a5_160
	udp_remove(s0_31, a3_34, mstatus, out a3_159, out a4_70, out a5_160)
	a4Out = a4_70
	return ra_20
l2303073E:
	word32 a4_80
	word32 t1_153
	word32 a0_154
	word32 a1_155
	word32 a2_156
	word32 a3_157
	word32 a5_158
	word32 ra_82 = memset(ra_20, a0_40, 0<32>, 4<32>, out t1_153, out a0_154, out a1_155, out a2_156, out a3_157, out a4_80, out a5_158)
l2303075A_thunk_udp_recv:
	udp_recv(s0_31, 0x230304F0<32>, a0_40)
	a4Out = a4_80
	return ra_82
dns_server_init_exit:


word32 easyflash_init(word32 ra, word32 s0, word32 s1, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: ra s10
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
easyflash_init_entry:
l23030776:
	word32 a0_83
	word32 a0_19
	word32 a1_20
	word32 a3_22
	word32 ra_27 = ef_port_init(ra, s0, a3, a4, a5, s2, s3, mstatus, dwLoc10, dwLoc0C, dwArg18, dwArg20, dwArg24, dwArg3C, dwArg48, dwArg64, ra, dwArg78, dwArgB8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out a0_19, out a1_20, out a3_22)
	branch a0_19 != 0<32> l230307C4
l23030790:
	word32 a0_52
	ra_27 = ef_env_init(ra_27, a0_19, a1_20, mstatus, 0<32>, dwLoc08, dwLoc04, dwArg08, dwArg18, dwArg38, dwArg40, dwArg44, dwArg48, dwArg58, s1, dwArg88, dwArg8C, dwArg98, dwArgD8, out a0_52, out a3_22)
	branch a0_52 != 0<32> l230307C4
l230307C4:
	a0_83 = 0x23077E58<32>
l2303079C:
	a0_83 = 0x23077E30<32>
l230307A8:
	word32 a3_99
	word32 s10_129
	word32 a5_219
	word32 s2_220
	word32 a2_217
	word32 a4_218
	word32 a0_215
	word32 a1_216
	word32 s1_214
	word32 s3_221
	word32 s4_222
	word32 s5_223
	word32 s6_224
	word32 s7_225
	word32 s10_226
	word32 s1_227
	word32 a0_228
	word32 a1_229
	word32 a2_230
	word32 a3_231
	word32 a4_232
	word32 a5_233
	word32 s2_234
	word32 s3_235
	word32 s4_236
	word32 s5_237
	word32 s6_238
	word32 s7_239
	word32 ra_127 = ef_log_info(ef_log_info(ra_27, a0_83, a3_22, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_214, out a0_215, out a1_216, out a2_217, out a3_99, out a4_218, out a5_219, out s2_220, out s3_221, out s4_222, out s5_223, out s6_224, out s7_225, out s10_226), 0x23077E7C<32>, a3_99, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_227, out a0_228, out a1_229, out a2_230, out a3_231, out a4_232, out a5_233, out s2_234, out s3_235, out s4_236, out s5_237, out s6_238, out s7_239, out s10_129)
	s10Out = s10_129
	return ra_127
easyflash_init_exit:


word32 get_status(word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_env
//      read_sector_meta_data
//      del_env
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a3 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
get_status_entry:
l230307D2:
	word32 a1_13 = a1 + 0xFFFFFFFF<32>
l230307D6:
	word32 a5_7 = a1_13 + -1<i32>
	branch a5_7 != 0xFFFFFFFF<32> l230307E2
l230307E2:
	a3 = CONVERT(Mem0[a0 + a5_7:byte], byte, word32)
	branch a3 == 0<32> l230307DE
l230307EC:
	a1_13 = a5_7
l230307DE:
	a1Out = a1_13
	a3Out = a3
	a5Out = a5_7
	return a1_13
get_status_exit:


word32 update_sector_cache(word32 a0, word32 a1, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      update_sec_status
//      format_sector.constprop.16
//      read_sector_meta_data
//      move_env
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
update_sector_cache_entry:
l230307F0:
	word32 a2_13 = 0x42012BE8<32>
	word32 a3_30 = 4<32>
	word32 a4_22 = 0<32>
	word32 a5_44 = 0x42012BE8<32>
l23030808:
	word32 a7_15 = Mem0[a2_13:int32]
	branch a0 >=u a1 l2303083E
l23030810:
	branch a1 >=u a0 + 0x1000000<32> l2303083E
l2303083E:
	branch a0 != a7_15 l2303082A
l23030842:
	word32 a4_23 = a4_22 << 3<i32>
	Mem28[0xFFFFFFFF<32>:word32] = a4_23 + 0x42012BE8<32>
	a4Out = 0xFFFFFFFF<32>
	a5Out = a4_23 + 0x42012BE8<32>
	return a3_30
l23030814:
	branch a0 != a7_15 l23030820
l23030820:
	branch a7_15 != 0xFFFFFFFF<32> l2303082A
l23030824:
	branch a3_30 != 4<32> l2303082A
l23030828:
	a3_30 = a4_22
l2303082A:
	a4_22 = a4_22 + 1<32>
	a2_13 = a2_13 + 8<32>
	branch a4_22 != 4<32> l23030808
l23030832:
	branch a3_30 == a4_22 l2303081E
l23030836:
	a3_30 = a3_30 << 3<i32>
	Mem46[a0:word32] = a3_30 + 0x42012BE8<32>
	a5_44 = a3_30 + 0x42012BE8<32>
l23030818:
	a4_22 = a4_22 << 3<i32>
	a5_44 = a4_22 + 0x42012BE8<32>
l2303081C:
	Mem53[a1 + 4<i32>:word32] = a5_44
l2303081E:
	a4Out = a4_22
	a5Out = a5_44
	return a3_30
update_sector_cache_exit:


word32 get_next_sector_addr(word32 a5, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sector_iterator
//      env_iterator
// MayUse:  a5:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
get_next_sector_addr_entry:
l2303084C:
	word32 a0_15
	word32 a0_5 = Mem0[a5 + 4<i32>:word32]
	word32 a4_18 = Mem0[0x4200E1E8<32>:int32]
	branch a5 == 0xFFFFFFFF<32> l23030876
l23030876:
	a0_15 = a4_18
l2303085C:
	word32 a0_11
	word32 a0_10 = Mem0[a0_5 + 12<i32>:word32]
	branch a0_10 != 0xFFFFFFFF<32> l23030872
l23030872:
	a0_11 = a0_10 << 12<i32>
l23030862:
	a0_11 = 0x1000000<32>
l23030864:
	a0_15 = a0_11 + a5
	a5 = 0x8000000<32>
	a4_18 = a4_18 + 0x8000000<32>
	branch a0_15 <u a4_18 + 0x8000000<32> l23030878
l23030878:
	a3Out = <invalid>
	a4Out = a4_18
	a5Out = a5
	return a0_15
l2303086E:
	a3Out = <invalid>
	a4Out = a4_18 + 0x8000000<32>
	a5Out = 0x8000000<32>
	return 0xFFFFFFFF<32>
get_next_sector_addr_exit:


void gc_check_cb(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
gc_check_cb_entry:
l2303087A:
	word32 a5_5 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_5 == 0<32> l23030886
l23030880:
	Mem8[a5_5 + 1<32>:word32] = Mem0[a5_5:word32]
l23030886:
	return
gc_check_cb_exit:


word32 update_env_cache(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      find_env
//      del_env
//      move_env
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: s0 sp
update_env_cache_entry:
l2303088A:
	word32 a4_146
	word32 a5_147
	word32 a2_145
	word32 a0_15 = ef_calc_crc32(0<32>, a0, a1, out a2_145, out a4_146, out a5_147)
	word32 a2_23 = 0x42012B50<32>
	word32 a7_101 = 0xFFFFFFF<32>
	word32 a6_25 = 0x10<32>
	word32 a1_119 = 0x10<32>
	word32 a3_122 = 0<32>
	word32 a5_129 = 0x42012B50<32>
l230308B8:
	word32 a4_125 = CONVERT(Mem32[a2_23:uint16], uint16, word32)
	branch a2 == 0xFFFFFFFF<32> l23030910
l23030910:
	branch a4_125 != a0_15 >>u 16<i32> l230308F8
l23030914:
	a3_122 = a3_122 << 3<i32>
	Mem41[a2 + 4<i32>:word32] = a3_122 + 0x42012B50<32>
	a5_129 = a3_122 + 0x42012B50<32>
l230308C0:
	branch a4_125 != a0_15 >>u 16<i32> l230308D2
l230308D2:
	a2_23 = Mem32[a4_125 + 4<i32>:word32]
	branch a4_125 != 0xFFFFFFFF<32> l230308E0
l230308E0:
	word32 a4_43 = CONVERT(Mem32[a2_23 + 2<i32>:uint16], uint16, word32)
	branch a4_43 == 0<32> l230308EC
l230308E6:
	Mem45[a2_23 + 2<i32>:word16] = SLICE(a4_43 + 0xFFFFFFFF<32>, word16, 0)
l230308EC:
	a4_125 = CONVERT(Mem47[a2_23 + 2<i32>:uint16], uint16, word32)
	branch a4_125 >=u a7_101 l230308F8
l230308F4:
	a7_101 = a4_125
	a6_25 = a3_122
l230308D8:
	branch a1_119 != 0x10<32> l230308F8
l230308DC:
	a1_119 = a3_122
l230308F8:
	a3_122 = a3_122 + 1<32>
	a2_23 = a2_23 + 8<32>
	branch a3_122 != 0x10<32> l230308B8
l23030900:
	branch a1_119 == a3_122 l23030920
l23030920:
	branch a6_25 == a1_119 l230308CA
l23030924:
	a5_129 = (a6_25 << 3<i32>) + 0x42012B50<32>
l23030904:
	a1_119 = a1_119 << 3<i32>
	a5_129 = a1_119 + 0x42012B50<32>
l23030908:
	Mem78[a2 + 4<i32>:word32] = a5_129
	Mem82[a5_129:word16] = SLICE(a0_15 >>u 16<i32>, word16, 0)
l2303091A:
	Mem84[a5_129 + 2<i32>:word16] = 0<16>
l230308C4:
	a3_122 = a3_122 << 3<i32>
	Mem87[a2 + 4<i32>:word32] = a3_122 + 0x42012B50<32>
	a5_129 = a3_122 + 0x42012B50<32>
l230308CA:
	a3Out = a3_122
	a4Out = a4_125
	a5Out = a5_129
	return a1_119
update_env_cache_exit:


void find_env_cb(word32 a0, word32 a1, word32 a2, word32 dwArg44)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0044:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t1 t3
// Preserved: sp
find_env_cb_entry:
l2303092A:
	word32 a1_23
	word32 a4_95
	word32 a5_96
	word32 a2_93
	word32 a3_94
	branch dwArg44 == strlen(a1, out a1_23, out a2_93, out a3_94, out a4_95, out a5_96) l2303095A
l2303095A:
	branch CONVERT(Mem18[a0 + 1<i32>:byte], byte, word32) == 0<32> l2303094A
l23030960:
	branch CONVERT(Mem18[a0:byte], byte, word32) != 2<32> l2303094A
l2303096A:
	word32 a3_97
	word32 a4_98
	word32 a5_99
	branch strncmp(a0 + 16<i32>, a1_23, dwArg44, out a3_97, out a4_98, out a5_99) != 0<32> l2303094A
l23030974:
	Mem42[a2:byte] = 1<8>
l2303094A:
l2303094C:
	return
find_env_cb_exit:


void sector_statistics_cb(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
sector_statistics_cb_entry:
l2303097C:
	branch CONVERT(Mem0[a0:byte], byte, word32) == 0<32> l23030992
l23030982:
	word32 a5_6 = CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32)
	branch a5_6 != 1<32> l23030996
l23030996:
	branch a5_6 != 2<32> l23030992
l2303099C:
	Mem11[a5_6 + 1<32>:word32] = Mem0[a5_6:word32]
l2303098C:
	Mem14[a5_6 + 1<32>:word32] = Mem0[a5_6:word32]
l23030992:
	return
sector_statistics_cb_exit:


void alloc_env_cb(word32 a0, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
alloc_env_cb_entry:
l230309A4:
	branch CONVERT(Mem0[a0:byte], byte, word32) == 0<32> l230309D0
l230309AA:
	word32 a0_7 = Mem0[a3 + 16<i32>:word32]
	branch a4 >=u a3 l230309D4
l230309B2:
	word32 a4_10 = CONVERT(Mem0[a0_7 + 2<i32>:byte], byte, word32)
	branch a4_10 == 1<32> l230309CC
l230309BC:
	branch a4_10 != 2<32> l230309D4
l230309C2:
	a4_10 = CONVERT(Mem0[0x4200E1EC<32>:byte], byte, word32)
	branch a4_10 != 0<32> l230309D4
l230309D4:
l230309CC:
	Mem21[a4_10:word32] = a2
l230309D0:
	return
alloc_env_cb_exit:


word32 write_status(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg28, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_env
//      update_sec_status
//      del_env
//      move_env
//      check_and_recovery_env_cb
//      do_gc
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
write_status_entry:
l230309D8:
	branch a3 <u a2 l23030A0E
l23030A0E:
	branch a1 != 0<32> l23030A3C
l23030A3C:
	word32 a3_25
	word32 t1_169
	word32 a0_170
	word32 a1_171
	word32 a2_172
	word32 a4_173
	word32 a5_174
	word32 ra_28 = memset(ra, a1, 255<i32>, (a2 << 3<i32>) + 0xFFFFFFFF<32> >>u 3<i32>, out t1_169, out a0_170, out a1_171, out a2_172, out a3_25, out a4_173, out a5_174)
	word32 a1_34 = a1 + (a3_25 + 0xFFFFFFFF<32>)
	Mem35[a1_34:byte] = 0<8>
	word32 a0_38 = a0 + (a3_25 + 0xFFFFFFFF<32>)
l23030A6A_thunk_ef_port_write:
	word32 a0_42
	word32 a1_43
	word32 a3_45
	word32 a4_46
	word32 a5_47
	word32 s0_51
	word32 s1_52
	word32 s2_55
	word32 s3_56
	word32 s4_57
	word32 s6_59
	word32 s7_60
	word32 s5_185
	word32 ra_50 = ef_port_write(ra_28, a0, a0_38, a1_34, 1<32>, s2, dwArg00, dwArg04, dwArg28, dwArg4C, out s0_51, out s1_52, out a0_42, out a1_43, out a3_45, out a4_46, out a5_47, out s2_55, out s3_56, out s4_57, out s5_185, out s6_59, out s7_60)
	s0Out = s0_51
	s1Out = s1_52
	a0Out = a0_42
	a1Out = a1_43
	a3Out = a3_45
	a4Out = a4_46
	a5Out = a5_47
	s2Out = s2_55
	s3Out = s3_56
	s4Out = s4_57
	s6Out = s6_59
	s7Out = s7_60
	return ra_50
write_status_exit:
l23030A12:
	word32 s1_175
	word32 a0_176
	word32 a1_177
	word32 a3_178
	word32 a4_179
	word32 s2_180
	word32 s3_181
	word32 s4_182
	word32 s5_183
	word32 s6_184
	ef_log_debug(ra, 0x230783F0<32>, 0x2307845C<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_175, out a0_176, out a1_177, out a3_178, out a4_179, out s2_180, out s3_181, out s4_182, out s5_183, out s6_184)
l23030A3A:
l230309E4:
	word32 s1_159
	word32 a0_160
	word32 a1_161
	word32 a3_162
	word32 a4_163
	word32 s2_164
	word32 s3_165
	word32 s4_166
	word32 s5_167
	word32 s6_168
	ef_log_debug(ra, 0x230783F0<32>, 0x230783D4<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_159, out a0_160, out a1_161, out a3_162, out a4_163, out s2_164, out s3_165, out s4_166, out s5_167, out s6_168)
l23030A0C:


word32 read_env(word32 ra, word32 a0, word32 s2, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg5C, word32 dwArg84, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_sector_meta_data
//      env_iterator
//      find_env
//      do_gc
// MayUse:  a0:[0..31] ra:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +005C:[0..31] Stack +0084:[0..31]
// LiveOut: a3 a4 a5 ra s0 s2 s3 s4 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
read_env_entry:
l23030A6E:
	word32 a5_104
	word32 a4_363
	word32 a1_361
	word32 a3_362
	word32 a0_360
	word32 ra_103 = ef_port_read(ra, Mem15[a0 + 80<i32>:word32], fp + -92<i32>, 0x1C<32>, out a0_360, out a1_361, out a3_362, out a4_363)
	word32 a3_32
	word32 a5_34
	word32 a1_364
	word32 a0_30 = get_status(fp + -92<i32>, 6<32>, out a1_364, out a3_32, out a5_34)
	Mem38[a0:byte] = SLICE(a0_30 & 255<i32>, byte, 0)
	Mem39[a5_34 + 8<i32>:word32] = a0
	word32 s0_17 = a0
	word32 a0_36 = a0_30 & 255<i32>
	word32 s2_191 = a5_34 + -20<i32>
	word32 a4_101 = 0x7FFFFEC<32>
	branch a5_34 <=u 0xF8000000<32> l23030AF2
l23030AF2:
	a5_104 = a5_34 + 0xFF000013<32>
	a4_101 = 0x7000012<32>
	branch a5_34 >u 0xF8000001<32> l23030B8C
l23030B8C:
	word32 s1_47 = 0<32>
	word32 s4_48 = 0<32>
l23030B56:
	branch s1_47 <u a5_34 + -20<i32> l23030B2A
l23030B2A:
	s3 = 32<i32>
	branch s1_47 + 32<i32> <u a5_34 + -20<i32> l23030B3A
l23030B36:
	s3 = a5_34 + -20<i32> - s1_47
l23030B3A:
	s0_17 = Mem39[a0_36 + 80<i32>:word32]
	word32 a0_390
	word32 a1_391
	word32 a3_392
	word32 a4_393
	ra_103 = ef_port_read(ra_103, a0_36 + 0x14<32> + s1_47, fp + -64<i32>, s3, out a0_390, out a1_391, out a3_392, out a4_393)
	word32 a2_394
	a0_36 = ef_calc_crc32(s4_48, fp + -64<i32>, s3, out a2_394, out a4_101, out a5_104)
	s4_48 = a0_36
	s1_47 = s1_47 + s3
l23030B5A:
	s4 = dwArg84
	branch a5_104 != dwArg84 l23030ADC
l23030B60:
	s0_17 = Mem39[s1_47 + 80<i32>:word32]
	Mem94[s0_17 + 1<i32>:byte] = 1<8>
	word32 s1_93 = s1_47 + 0x1C<32>
	a5_104 = CONVERT(bLoc48, byte, word32)
	word32 a0_387
	word32 a1_388
	word32 a3_389
	ra_103 = ef_port_read(ra_103, s1_93, s0_17 + 16<i32>, CONVERT(bLoc48, byte, word32), out a0_387, out a1_388, out a3_389, out a4_101)
	Mem108[s1_93 + a5_104 + 84<i32>:word32] = s0_17
	Mem109[a4_101 + 12<i32>:word32] = s0_17
	Mem110[s0_17 + 2<i32>:byte] = SLICE(a5_104, byte, 0)
l23030B00:
	word32 s1_377
	word32 a0_378
	word32 a1_379
	word32 a3_380
	word32 a4_381
	word32 s2_382
	word32 s3_383
	word32 s4_384
	word32 s5_385
	word32 s6_386
	ef_log_debug(ra_103, 0x230783F0<32>, 0x2307CDB4<32>, dwLoc58, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_377, out a0_378, out a1_379, out a3_380, out a4_381, out s2_382, out s3_383, out s4_384, out s5_385, out s6_386)
l23030B28:
l23030AA8:
	Mem143[0x24<32>:word32] = a0
	a5_104 = 5<32>
	branch (a0_30 & 255<i32>) == 5<32> l23030ADC
l23030AB2:
	Mem151[Mem143[a3_32 + 80<i32>:word32]:byte] = 5<8>
	word32 a4_368
	word32 a0_152
	word32 s2_163
	word32 a3_367
	word32 s3_369
	word32 s4_370
	word32 s6_372
	word32 s5_371
	word32 s1_365
	word32 a1_366
	word32 s1_373
	word32 a0_374
	word32 a1_375
	word32 a3_376
	ra_103 = write_status(ef_log_debug(ra_103, 0x23078374<32>, a3_32, dwLoc58, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_365, out a0_152, out a1_366, out a3_367, out a4_368, out s2_163, out s3_369, out s4_370, out s5_371, out s6_372), a0_152, fp + -92<i32>, 6<32>, 5<32>, s2_163, dwLoc60, dwLoc5C, dwLoc58, s2, dwLoc14, dwLoc10, dwLoc0C, dwArg18, dwArg3C, out s0_17, out s1_373, out a0_374, out a1_375, out a3_376, out a4_101, out a5_104, out s2_191, out s3, out s4, out s6, out s7)
l23030ADC:
	Mem207[s0_17 + 1<i32>:byte] = 0<8>
l23030AE2:
	s0Out = s0_17
	a3Out = dwArg08
	a4Out = a4_101
	a5Out = a5_104
	s2Out = s2_191
	s3Out = s3
	s4Out = s4
	s6Out = s6
	s7Out = s7
	return ra_103
read_env_exit:


word32 update_sec_status(word32 ra, word32 a0, word32 a1, word32 a2, word32 s2, word32 dwArg08, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      move_env
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31]
// LiveOut: a0 a1 a3 a4 ra s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
update_sec_status_entry:
l23030B92:
	word32 s2_106
	word32 a4_13 = CONVERT(Mem11[a0 + 1<i32>:byte], byte, word32)
	branch a4_13 != 1<32> l23030BC4
l23030BC4:
	s2_106 = 0<32>
	branch a4_13 != 2<32> l23030BB6
l23030BCC:
	word32 a0_18 = Mem11[0x12<32>:word32]
	a4_13 = 91<i32>
	s1 = a2
	branch true l23030BDE
l23030BD8:
	branch 2<32> - a1 >u 91<i32> l23030C00
l23030C00:
	branch a2 == 0<32> l23030BB6
l23030C02:
	Mem24[a2:byte] = 0<8>
l23030BDE:
	word32 a0_34
	word32 s0_195
	word32 a1_196
	word32 a3_197
	word32 a4_198
	word32 a5_199
	word32 s2_200
	word32 s4_201
	word32 s7_202
	ra = write_status(ra, a0_18, fp + 0xFFFFFFEC<32>, 4<32>, 3<32>, 0<32>, dwLoc20, dwLoc1C, s2, dwArg08, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg7C, out s0_195, out s1, out a0_34, out a1_196, out a3_197, out a4_198, out a5_199, out s2_200, out s3, out s4_201, out s6, out s7_202)
	s2_106 = a0_34
	a1 = a0_34 + 0x1000000<32>
	word32 a5_203
	a3 = update_sector_cache(a0_34, a0_34 + 0x1000000<32>, out a4_13, out a5_203)
	branch s1 == 0<32> l23030BB6
l23030BF8:
	Mem74[s1:byte] = 1<8>
l23030BA8:
	word32 a0_79
	word32 s0_190
	word32 a5_191
	word32 s2_192
	word32 s4_193
	word32 s7_194
	ra = write_status(ra, Mem11[a0 + 4<i32>:word32], fp + 0xFFFFFFEC<32>, 4<32>, 2<32>, s2, dwLoc20, dwLoc1C, s2, dwArg08, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg7C, out s0_190, out s1, out a0_79, out a1, out a3, out a4_13, out a5_191, out s2_192, out s3, out s4_193, out s6, out s7_194)
	s2_106 = a0_79
l23030BB6:
	s1Out = s1
	a0Out = s2_106
	a1Out = a1
	a3Out = a3
	a4Out = a4_13
	s2Out = s2_106
	s3Out = s3
	s6Out = s6
	return ra
update_sec_status_exit:


word32 format_sector.constprop.16(word32 ra, word32 a0, word32 s2, word32 dwArg1C, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg58, word32 dwArg68, word32 dwArg7C, word32 dwArg8C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      check_sec_hdr_cb
//      do_gc
//      ef_env_set_default
// MayUse:  a0:[0..31] ra:[0..31] s2:[0..31] Stack +001C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +008C:[0..31]
// LiveOut: a0 a1 a3 a4 ra s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
format_sector.constprop.16_entry:
l23030C08:
	branch a0 << 0x14<u32> == 0<32> l23030C40
l23030C40:
	word32 a0_14
	word32 a1_15
	word32 a4_102
	word32 ra_184 = ef_port_erase(ra, a0, 0x1000000<32>, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out a0_14, out a1_15, out a4_102)
	word32 s1_112 = a0_14
	branch a0_14 != 0<32> l23030CA0
l23030C4C:
	word32 a0_69
	word32 s0_78
	word32 t1_235
	word32 a0_236
	word32 a1_237
	word32 a2_238
	word32 a3_239
	word32 a4_240
	word32 a5_241
	word32 t1_242
	word32 a0_243
	word32 a1_244
	word32 a2_245
	word32 a3_246
	word32 a4_247
	word32 a5_248
	word32 t1_249
	word32 a0_250
	word32 a1_251
	word32 a2_252
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 s1_256
	word32 a1_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	word32 s6_261
	word32 s7_262
	ra_184 = ef_port_write(memset(memset(memset(ra_184, fp + -36<i32>, 255<i32>, 0x14<32>, out t1_235, out a0_236, out a1_237, out a2_238, out a3_239, out a4_240, out a5_241), fp + -36<i32>, 255<i32>, 3<32>, out t1_242, out a0_243, out a1_244, out a2_245, out a3_246, out a4_247, out a5_248), fp + -33<i32>, 255<i32>, 3<32>, out t1_249, out a0_250, out a1_251, out a2_252, out a3_253, out a4_254, out a5_255), a0_14, a0, fp + -36<i32>, 0x14<32>, s2, dwLoc30, dwLoc2C, dwLoc08, dwArg1C, out s0_78, out s1_256, out a0_69, out a1_257, out a3_258, out a4_259, out a5_260, out s2, out s3, out s4, out s5, out s6_261, out s7_262)
	s1_112 = a0_69
	a1_15 = s0_78 + 0x1000000<32>
	word32 a5_263
	a3 = update_sector_cache(s0_78, s0_78 + 0x1000000<32>, out a4_102, out a5_263)
l23030CA0:
	s1Out = s1_112
	a0Out = s1_112
	a1Out = a1_15
	a3Out = a3
	a4Out = a4_102
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return ra_184
format_sector.constprop.16_exit:
l23030C16:
	word32 s1_225
	word32 a0_226
	word32 a1_227
	word32 a3_228
	word32 a4_229
	word32 s2_230
	word32 s3_231
	word32 s4_232
	word32 s5_233
	word32 s6_234
	ef_log_debug(ra, 0x230783F0<32>, 0x230782A4<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_225, out a0_226, out a1_227, out a3_228, out a4_229, out s2_230, out s3_231, out s4_232, out s5_233, out s6_234)
l23030C3E:


void check_sec_hdr_cb(word32 ra, word32 a0, word32 a3, word32 dwArg0C, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg6C, word32 dwArg7C, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
check_sec_hdr_cb_entry:
l23030CAC:
	branch CONVERT(Mem0[a0:byte], byte, word32) != 0<32> l23030CE4
l23030CE4:
	return
l23030CB2:
	word32 a0_21
	word32 a5_26
	word32 s2_32
	word32 s1_150
	word32 a1_151
	word32 a2_152
	word32 a3_153
	word32 a4_154
	word32 s3_155
	word32 s4_156
	word32 s5_157
	word32 s6_158
	word32 s7_159
	word32 s10_160
	word32 ra_28 = ef_log_info(ra, 0x23078018<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_150, out a0_21, out a1_151, out a2_152, out a3_153, out a4_154, out a5_26, out s2_32, out s3_155, out s4_156, out s5_157, out s6_158, out s7_159, out s10_160)
	Mem45[a5_26 + 1<32>:word32] = Mem13[a5_26:word32]
	word32 s1_161
	word32 a0_162
	word32 a1_163
	word32 a3_164
	word32 a4_165
	word32 s2_166
	word32 s3_167
	word32 s4_168
	word32 s5_169
	format_sector.constprop.16(ra_28, a0_21, s2_32, dwArg0C, dwArg20, dwArg24, dwArg30, dwArg34, dwArg48, dwArg58, dwArg6C, dwArg7C, out s1_161, out a0_162, out a1_163, out a3_164, out a4_165, out s2_166, out s3_167, out s4_168, out s5_169)
	return
check_sec_hdr_cb_exit:


word32 get_next_env_addr(word32 ra, word32 a0, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_sector_meta_data
//      env_iterator
//      do_gc
// MayUse:  a0:[0..31] ra:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a5 ra s0 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
get_next_env_addr_entry:
l23030CE8:
	word32 a4_5 = CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32)
	branch a4_5 != 1<32> l23030CF6
l23030CF6:
	a1 = Mem0[a4_5 + 80<i32>:word32]
	word32 a0_9 = Mem0[5<32>:word32]
	branch a4_5 != 0xFFFFFFFF<32> l23030D06
l23030D06:
	branch a4_5 >u 0x1000001<32> l23030CF2
l23030D0E:
	word32 s0_30 = a4_5 + 1<i32>
	branch CONVERT(Mem28[a1 + 1<i32>:byte], byte, word32) == 0<32> l23030D2E
l23030D2A:
	a1 = Mem28[a4_5 + 9<i32>:word32]
	s0_30 = a4_5 + 1<i32> + a4_5
l23030D2E:
	word32 a2_41 = 0x42012BE8<32>
	word32 a1_298 = s0_30 & 0xFF000000<32>
	word32 a4_46 = 0<32>
l23030D4C:
	word32 a0_105
	word32 s1_113
	branch a1_298 != Mem28[a2_41:int32] l23030D8A
l23030D8A:
	a4_46 = a4_46 + 1<32>
	a2_41 = a2_41 + 8<32>
	branch a4_46 != 4<32> l23030D4C
l23030D92:
l23030D54:
	s1_113 = s0_30
	branch s0_30 != Mem28[(a4_46 << 3<i32>) + 0x42012BEC<32>:word32] l23030D94
l23030D94:
	s1_113 = s0_30
	s2 = 0xFFFFE5<32>
l23030DEC:
	branch s1_113 <u 0xFFFFED<32> l23030DA4
l23030DA4:
	word32 a3_392
	word32 a0_391
	word32 a4_393
	ra = ef_port_read(ra, s1_113, fp + -64<i32>, 32<i32>, out a0_391, out a1_298, out a3_392, out a4_393)
	word32 a4_107 = fp + -64<i32>
	a0_105 = s1_113 + -8<i32>
	word32 a2_87 = s1_113 + 20<i32>
l23030DBA:
	branch a0_105 == 0xFFFFE5<32> l23030DEA
l23030DBE:
	branch (CONVERT(Mem28[a4_107 + 1<i32>:byte], byte, word32) << 8<i32>) + CONVERT(Mem28[a4_107:byte], byte, word32) + (CONVERT(Mem28[a4_107 + 2<i32>:byte], byte, word32) << 16<i32>) + (CONVERT(Mem28[a4_107 + 3<i32>:byte], byte, word32) << 24<i32>) != 0x3034564B<32> l23030DE2
l23030DDE:
	branch a0_105 >=u s0_30 l23030D62
l23030DE2:
	a0_105 = a0_105 + 1<32>
	a4_107 = a4_107 + 1<32>
	branch a2_87 != a0_105 l23030DBA
l23030DEA:
	s1_113 = s1_113 + 0x1C<32>
l23030DF0:
l23030D60:
	a0_105 = 0xFFFFFFFF<32>
l23030D62:
	word32 a4_129 = Mem28[a0_9 + 4<i32>:int32]
	word32 a5_131 = a4_129 + 0x1000000<32>
	branch a4_129 + 0x1000000<32> <u a0_105 l23030D74
l23030D6E:
	a5_131 = Mem28[a1 + 8<i32>:int32]
	branch a5_131 != 0<32> l23030D76
l23030D74:
	a0_105 = 0xFFFFFFFF<32>
l23030D76:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_113
	a0Out = a0_105
	a1Out = a1_298
	a5Out = a5_131
	s2Out = s2
	s3Out = a0_9
	s5Out = a1
	return ra
l23030D00:
	s0Out = s0
	s1Out = s1
	a0Out = 0x15<32>
	a1Out = a1
	a5Out = 1<32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	return ra
l23030CF2:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFFF<32>
	a1Out = a1
	a5Out = 1<32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	return ra
get_next_env_addr_exit:


word32 read_sector_meta_data(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 dwArgD8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sector_iterator
//      env_iterator
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
read_sector_meta_data_entry:
l23030DF2:
	branch a0 << 0x14<u32> == 0<32> l23030E3A
l23030E3A:
	word32 a5_277
	word32 s1_173
	word32 a4_39
	word32 a0_696
	word32 a1_101
	word32 a3_275
	word32 ra_107 = ef_port_read(ra, a0, fp + -188<i32>, 0x14<32>, out a0_696, out a1_101, out a3_275, out a4_39)
	Mem44[a1 + 4<i32>:word32] = a0
	Mem45[a4_39 + 8<i32>:word32] = a1
	word32 s0_156 = a1
	word32 s4_198 = a2
	branch a4_39 == 0x30344645<32> l23030E82
l23030E82:
	Mem50[0x30344651<32>:word32] = a1
	Mem51[a1:byte] = 1<8>
	word32 a1_707
	word32 a5_709
	word32 a3_708
	word32 a0_53 = get_status(fp + -188<i32>, 4<32>, out a1_707, out a3_708, out a5_709)
	Mem59[a1 + 1<i32>:byte] = SLICE(a0_53 & 255<i32>, byte, 0)
	Mem67[a1 + 2<i32>:byte] = SLICE(get_status(fp + -185<i32>, 4<32>, out a1_101, out a3_275, out a5_277), byte, 0)
	s3 = 1<32>
	branch a2 != 0<32> l23030EB2
l23030EB2:
	Mem69[a1 + 16<i32>:word32] = 0<32>
	Mem70[a0 + 40<i32>:word32] = a1
	branch (a0_53 & 255<i32>) != 1<32> l23030EC8
l23030EC8:
	a5_277 = 2<32>
	branch (a0_53 & 255<i32>) != 2<32> l23030EAE
l23030ECE:
	word32 a5_74 = 0<32>
l23030EDE:
	a3_275 = Mem70[a1_101:word32]
	branch a0 != a1_101 l23030EFA
l23030EFA:
	a5_74 = a5_74 + 1<32>
	branch a5_74 != 4<32> l23030EDE
l23030F02:
	Mem88[0xFFFFFC<32>:word32] = a1
l23030F10:
	byte bLoc87_391 = SLICE(dwLoc88, byte, 8)
	byte bLoc88_392 = SLICE(dwLoc88, byte, 0)
	word32 s2_110
	word32 s3_725
	word32 s5_726
	word32 s1_724
	word32 s0_723
	word32 a5_105
	word32 a0_100
	ra_107 = get_next_env_addr(ra_107, s0_156, dwArgD8, out s0_723, out s1_724, out a0_100, out a1_101, out a5_105, out s2_110, out s3_725, out s5_726)
	branch a0_100 != s2_110 l23030F22
l23030F22:
	word32 a3_123
	word32 a4_124
	word32 s0_129
	word32 s3_132
	word32 a5_710
	word32 s2_711
	word32 s4_712
	word32 s6_713
	word32 ra_128 = read_env(ra_107, fp + -136<i32>, s2_110, dwLocB0, dwLocAC, dwLocA8, dwLoc88, dwLoc84, s0, dwLoc3C, out s0_129, out a3_123, out a4_124, out a5_710, out s2_711, out s3_132, out s4_712, out s6_713, out s7)
	word32 a5_147 = CONVERT(bLoc87_391, byte, word32)
	branch a5_147 != 0<32> l23030F94
l23030F2E:
	word32 a5_148 = CONVERT(bLoc88_392, byte, word32)
	a5_147 = a5_148 & 251<i32>
	branch (a5_148 & 251<i32>) == s3_132 l23030F94
l23030F94:
	s0_156 = Mem118[a5_147 + 16<i32>:word32]
	Mem160[a4_124 + a3_123 + 20<i32>:word32] = s0_156
	Mem161[a5_147 - a3_123 + 16<i32>:word32] = s0_156
	ra_107 = dwLoc1C
l23030F3A:
	word32 s4_719
	word32 a4_716
	word32 s5_720
	word32 s3_718
	word32 a3_715
	word32 s2_717
	word32 a2_714
	word32 s6_721
	word32 s10_722
	ra_107 = ef_log_info(ra_128, 0x230783A4<32>, a3_123, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_173, out a0_100, out a1_101, out a2_714, out a3_715, out a4_716, out a5_105, out s2_717, out s3_718, out s4_719, out s5_720, out s6_721, out s7, out s10_722)
	Mem187[s0_129 + 16<i32>:word32] = 0<32>
l23030F1E:
	s1_173 = 0<32>
l23030F4C:
	word32 s2_192 = Mem190[Mem190[a5_105 + 4<i32>:word32] + 20<i32>:int32]
	s5 = a5_105 + 0x1000000<32>
	s3 = s2_192
	word32 s6_197 = 0<32>
	s4_198 = a5_105 + 0x1000020<32>
l23030F66:
	branch s3 <u s5 l23030FA4
l23030FA4:
	s7 = s3 + 32<i32>
	word32 s8_203 = 32<i32>
	branch s7 <u s5 l23030FB4
l23030FB0:
	s8_203 = s4_198 - s7
l23030FB4:
	word32 a3_728
	word32 a4_729
	ra_107 = ef_port_read(ra_107, s3, fp + -168<i32>, s8_203, out a0_100, out a1_101, out a3_728, out a4_729)
	word32 a5_222 = 0<32>
l23030FC0:
	branch s8_203 != a5_222 l23030FC8
l23030FC8:
	word32 a4_229 = CONVERT(Mem190[fp + -168<i32> + a5_222:byte], byte, word32)
	branch s6_197 == 255<i32> l23030FDC
l23030FD4:
	branch a4_229 != 255<i32> l23030FDC
l23030FD8:
	s2_192 = s3 + a5_222
l23030FDC:
	a5_222 = a5_222 + 1<32>
	s6_197 = a4_229
l23030FC4:
	s3 = s7
l23030F6A:
	branch s6_197 == 255<i32> l23030F74
l23030F72:
	s2_192 = s5
l23030F74:
	word32 s0_254 = Mem190[a0_100 + 4<i32>:word32]
	branch s2_192 == 255<i32> l23030F8C
l23030F7C:
	Mem262[s0_254 + 20<i32>:word32] = s2_192
	Mem264[s0_254 + 16<i32>:word32] = a0_100 + 0x1000000<32> - s2_192
l23030F8C:
	s0_156 = Mem271[a1_101 + 20<i32>:word32]
	word32 a4_727
	a3_275 = update_sector_cache(a0_100, a1_101, out a4_727, out a5_277)
l23030EE4:
	a5_277 = Mem70[(a5_74 << 3<i32>) + 0x42012BEC<32>:word32]
	Mem289[a5_277 + 20<i32>:word32] = a1
	Mem290[a1 + 16<i32>:word32] = a0 + 0x1000000<32> - a5_277
l23030EC0:
	Mem293[0xFFFFFC<32>:word32] = a1
	a5_277 = 0xFFFFEC<32>
l23030EAE:
	s1_173 = 0<32>
l23030E5C:
	Mem296[a1:byte] = 0<8>
	Mem297[0xB<32>:word32] = a1
	a5_277 = 0xFFFFFFFF<32>
	s1_173 = 7<32>
l23030E66:
	word32 s6_315 = Mem303[dwArg0118 + 44<i32>:word32]
	s0Out = s0_156
	s1Out = s1_173
	a0Out = dwArgD8
	a1Out = a1_101
	a3Out = a3_275
	a4Out = dwArgB8
	a5Out = a5_277
	s2Out = dwArg98
	s3Out = s3
	s4Out = s4_198
	s5Out = s5
	s6Out = s6_315
	s7Out = s7
	return ra_107
read_sector_meta_data_exit:
l23030E10:
	word32 a3_700
	word32 s5_705
	word32 s6_706
	word32 s4_704
	word32 a0_698
	word32 s1_697
	word32 a1_699
	word32 a4_701
	word32 s2_702
	word32 s3_703
	ef_log_debug(ra, 0x230783F0<32>, 0x230782A4<32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_697, out a0_698, out a1_699, out a3_700, out a4_701, out s2_702, out s3_703, out s4_704, out s5_705, out s6_706)
l23030E38:


word32 sector_iterator(word32 ra, word32 a0, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      alloc_env
//      gc_collect
//      ef_load_env
// MayUse:  a0:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sector_iterator_entry:
l23030FE2:
	Mem35[3<32>:word32] = a0
	word32 sp_141 = fp + -48<i32>
	word32 s6_106 = a5
	word32 a5_134 = 0xFFFFFFFF<32>
	word32 s0_123 = a0
	word32 s1_127 = a1
	word32 s5_105 = a3
	word32 s3_103 = a4
	word32 s7_107 = 0xFFFFFFFF<32>
l23031008:
	word32 a4_156
	word32 a3_155
	word32 a0_152 = get_next_sector_addr(a5_134, out a3_155, out a4_156, out a5_134)
	word32 s2_150 = a0_152
	branch a0_152 != s7_107 l2303102A
l2303102A:
	word32 a0_291
	word32 s4_104
	word32 s2_102
	word32 a3_136
	word32 a4_138
	ra = read_sector_meta_data(ra, s0_123, a0_152, s0_123, 0<32>, Mem35[sp_141 + 216<i32>:word32], Mem35[sp_141 + 280<i32>:word32], out s0_123, out s1_127, out a0_291, out a1, out a3_136, out a4_138, out a5_134, out s2_102, out s3_103, out s4_104, out s5_105, out s6_106, out s7_107)
	branch s1_127 == 0<32> l2303103C
l23031034:
	a5_134 = CONVERT(Mem35[s0_123 + 1<i32>:byte], byte, word32)
	branch a5_134 != s1_127 l23031008
l2303103C:
	branch s6_106 == 0<32> l2303104A
l23031040:
	word32 a0_292
	word32 a1_293
	ra = read_sector_meta_data(ra, s0_123, s2_102, s0_123, 1<32>, Mem35[sp_141 + 216<i32>:word32], Mem35[sp_141 + 280<i32>:word32], out s0_123, out s1_127, out a0_292, out a1_293, out a3_136, out a4_138, out a5_134, out s2_102, out s3_103, out s4_104, out s5_105, out s6_106, out s7_107)
l2303104A:
	word32 a7_161
	word32 s10_162
	word32 s11_163
	word32 s9_164
	word32 t0_165
	word32 t1_166
	word32 t4_167
	word32 t5_168
	word32 t6_169
	call s3_103 (retsize: 0;)
		uses: a0:s0_123,a1:s4_120,a2:s5_117,a3:a3_136,a4:a4_138,a5:a5_134,a7:a7_161,ra:ra_132,s0:s0_123,s1:s1_127,s10:s10_162,s11:s11_163,s2:s2_133,s3:s3_125,s4:s4_120,s5:s5_117,s6:s6_129,s7:s7_130,s9:s9_164,t0:t0_165,t1:t1_166,t4:t4_167,t5:t5_168,t6:t6_169
		defs: a0:a0_152,a1:a1_153,a3:a3_155,a4:a4_156,a5:a5_151,a7:a7_161,ra:ra_149,s0:s0_142,s1:s1_143,s10:s10_162,s11:s11_163,s2:s2_150,s3:s3_144,s5:s5_146,s6:s6_147,s7:s7_148,s9:s9_164,sp:sp_141,t0:t0_165,t1:t1_166,t4:t4_167,t5:t5_168,t6:t6_169
	branch a0_152 == 0<32> l23031008
l23031054:
l23031014:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_127
	a0Out = a0_152
	a1Out = a1
	a3Out = a3_155
	a4Out = a4_156
	a5Out = a5_134
	s2Out = s2_150
	s3Out = s3_103
	s4Out = dwArg78
	s5Out = s5_105
	s6Out = s6_106
	return ra
sector_iterator_exit:


word32 alloc_env(word32 ra, word32 a0, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      new_env
//      move_env
// MayUse:  a0:[0..31] ra:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
alloc_env_entry:
l23031056:
	word32 s0_278
	word32 s4_279
	word32 a5_31
	word32 s5_121
	word32 s3_119
	word32 s2_118
	word32 s1_115
	word32 a4_111
	word32 a3_110
	word32 a1_108
	word32 a0_107
	word32 s6_122
	word32 ra_106 = sector_iterator(ra, a0, dwArgF8, out s0_278, out s1_115, out a0_107, out a1_108, out a3_110, out a4_111, out a5_31, out s2_118, out s3_119, out s4_279, out s5_121, out s6_122)
	branch a5_31 == 0<32> l2303109A
l23031084:
	word32 s0_280
	word32 s4_281
	ra_106 = sector_iterator(ra_106, s2_118, dwArgF8, out s0_280, out s1_115, out a0_107, out a1_108, out a3_110, out a4_111, out a5_31, out s2_118, out s3_119, out s4_281, out s5_121, out s6_122)
l2303109A:
	branch a5_31 == 0<32> l230310D0
l2303109E:
	a4_111 = 0xFFFFFFFF<32>
	branch a3_110 != 0xFFFFFFFF<32> l230310D0
l230310A6:
	branch a5_31 >u 1<32> l230310BA
l230310AC:
	branch CONVERT(Mem25[0x4200E1EC<32>:byte], byte, word32) == 0<32> l230310DE
l230310DE:
	word32 s4_285
	ra_106 = ef_log_debug(ra_106, 0x23077F2C<32>, a3_110, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_115, out a0_107, out a1_108, out a3_110, out a4_111, out s2_118, out s3_119, out s4_285, out s5_121, out s6_122)
	Mem129[0x4200E1EC<32>:byte] = SLICE(s1_115, byte, 0)
l230310BA:
	word32 s0_282
	word32 a5_283
	word32 s4_284
	ra_106 = sector_iterator(ra_106, s2_118, dwArgF8, out s0_282, out s1_115, out a0_107, out a1_108, out a3_110, out a4_111, out a5_283, out s2_118, out s3_119, out s4_284, out s5_121, out s6_122)
l230310D0:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_115
	a0Out = a0_107
	a1Out = a1_108
	a3Out = a3_110
	a4Out = a4_111
	s2Out = s2_118
	s3Out = s3_119
	s4Out = dwArg14
	s5Out = s5_121
	s6Out = s6_122
	return ra_106
alloc_env_exit:


word32 gc_collect(word32 ra, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgF8, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      new_env
//      check_and_recovery_gc_cb
//      ef_set_env
//      ef_load_env
// MayUse:  ra:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut: a4 ra s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
gc_collect_entry:
l230310FC:
	word32 a3_17
	word32 s0_157
	word32 s1_158
	word32 a0_159
	word32 a1_160
	word32 a4_161
	word32 a5_162
	word32 s2_163
	word32 s3_164
	word32 s4_165
	word32 s5_166
	word32 s6_167
	word32 a0_168
	word32 a1_169
	word32 a3_170
	word32 s3_171
	word32 s5_172
	word32 s6_173
	word32 a4_130
	word32 s1_135
	word32 s2_138
	word32 s4_140
	word32 ra_133 = ef_log_debug(sector_iterator(ra, fp + -40<i32>, dwArgF8, out s0_157, out s1_158, out a0_159, out a1_160, out a3_17, out a4_161, out a5_162, out s2_163, out s3_164, out s4_165, out s5_166, out s6_167), 0x230782BC<32>, a3_17, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_135, out a0_168, out a1_169, out a3_170, out a4_130, out s2_138, out s3_171, out s4_140, out s5_172, out s6_173)
	branch a4_130 >u 1<32> l23031152
l2303113C:
	word32 s0_174
	word32 a0_175
	word32 a1_176
	word32 a3_177
	word32 a5_178
	word32 s3_179
	word32 s5_180
	word32 s6_181
	ra_133 = sector_iterator(ra_133, fp + -40<i32>, dwArgF8, out s0_174, out s1_135, out a0_175, out a1_176, out a3_177, out a4_130, out a5_178, out s2_138, out s3_179, out s4_140, out s5_180, out s6_181)
l23031152:
	Mem112[0x4200E1EC<32>:byte] = 0<8>
	s1Out = s1_135
	a4Out = a4_130
	s2Out = s2_138
	s4Out = s4_140
	return ra_133
gc_collect_exit:


word32 new_env(word32 ra, word32 a0, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg7C, word32 dwArg88, word32 dwArgAC, word32 dwArgE8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      create_env_blob
//      ef_set_env
// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a3 a4 ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
new_env_entry:
l23031160:
	word32 s0_23
	word32 a3_106
	word32 a1_104
	word32 a0_103
	word32 a4_107
	word32 s1_113
	word32 s2_116
	word32 s3_117
	word32 s4_118
	word32 s5_119
	word32 s6_120
	word32 ra_111 = alloc_env(ra, a0, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgE8, dwArg0118, out s0_23, out s1_113, out a0_103, out a1_104, out a3_106, out a4_107, out s2_116, out s3_117, out s4_118, out s5_119, out s6_120)
	branch a0_103 != 0xFFFFFFFF<32> l230311A6
l23031176:
	branch CONVERT(Mem9[0x4200E1EC<32>:byte], byte, word32) == 0<32> l230311A6
l23031180:
	word32 s1_83
	word32 s1_192
	word32 a0_193
	word32 a1_194
	word32 a3_195
	word32 a4_196
	word32 s2_197
	word32 s3_198
	word32 s4_199
	word32 s5_200
	word32 s6_201
	word32 a4_202
	word32 s2_203
	word32 s4_204
	word32 s0_205
	ra_111 = alloc_env(gc_collect(ef_log_debug(ra_111, 0x23078324<32>, s0_23, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_192, out a0_193, out a1_194, out a3_195, out a4_196, out s2_197, out s3_198, out s4_199, out s5_200, out s6_201), dwArg30, dwArg34, dwArg58, dwArg7C, dwArgE8, out s1_83, out a4_202, out s2_203, out s4_204), s1_83, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgE8, dwArg0118, out s0_205, out s1_113, out a0_103, out a1_104, out a3_106, out a4_107, out s2_116, out s3_117, out s4_118, out s5_119, out s6_120)
l230311A6:
	s1Out = s1_113
	a0Out = a0_103
	a1Out = a1_104
	a3Out = a3_106
	a4Out = a4_107
	s2Out = s2_116
	s3Out = s3_117
	s4Out = s4_118
	s5Out = s5_119
	s6Out = s6_120
	return ra_111
new_env_exit:


void check_and_recovery_gc_cb(word32 ra, word32 a0, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
check_and_recovery_gc_cb_entry:
l230311B0:
	branch CONVERT(Mem0[a0:byte], byte, word32) == 0<32> l230311DA
l230311B6:
	branch CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) != 3<32> l230311DA
l230311DA:
	return
l230311C0:
	Mem14[0x4200E1EC<32>:byte] = 1<8>
	word32 s4_138
	word32 s2_137
	word32 a4_136
	word32 s1_135
	gc_collect(ra, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgE8, out s1_135, out a4_136, out s2_137, out s4_138)
	return
check_and_recovery_gc_cb_exit:


word32 env_iterator(word32 ra, word32 a0, word32 s2, word32 s4, word32 dwArg1C, word32 dwArg98, word32 dwArgD8, word32 dwArg0158, ptr32 & s0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      find_env
//      move_env
//      ef_load_env
// MayUse:  a0:[0..31] ra:[0..31] s2:[0..31] s4:[0..31] Stack +001C:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +0158:[0..31]
// LiveOut: a4 a5 ra s0 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
env_iterator_entry:
l230311DE:
	word32 a5_32 = 0xFFFFFFFF<32>
	word32 s0_20 = a0
	word32 s2_142 = a1
	word32 s3_143 = a2
	word32 s1_28 = 0xFFFFFFFF<32>
	word32 s5_145 = 1<32>
l230311FE:
	word32 a3_300
	word32 a4_135
	word32 a5_136
	word32 a0_33 = get_next_sector_addr(a5_32, out a3_300, out a4_135, out a5_136)
	branch a0_33 == s1_28 l23031240
l23031208:
	word32 a0_43
	word32 a1_294
	word32 a3_295
	word32 a4_296
	word32 s4_297
	word32 s6_298
	word32 s7_299
	ra = read_sector_meta_data(ra, s0_20, a0_33, fp + -56<i32>, 0<32>, dwArg98, dwArgD8, out s0_20, out s1_28, out a0_43, out a1_294, out a3_295, out a4_296, out a5_32, out s2_142, out s3_143, out s4_297, out s5_145, out s6_298, out s7_299)
	branch a0_43 != 0<32> l230311FE
l23031212:
	a5_32 = CONVERT(bLoc37, byte, word32) + 0xFFFFFFFE<32> & 255<i32>
	branch s5_145 <u a5_32 l230311FE
l23031220:
	Mem74[s1_28 + 80<i32>:word32] = s0_20
l23031222:
	word32 a0_81
	word32 a1_307
	ra = get_next_env_addr(ra, fp + -56<i32>, dwArg0158, out s0_20, out s1_28, out a0_81, out a1_307, out a5_32, out s2_142, out s3_143, out s5_145)
	Mem99[a0_81 + 80<i32>:word32] = s0_20
	branch a0_81 == s1_28 l230311FE
l23031230:
	word32 s0_110
	word32 s2_112
	word32 s4_114
	word32 a0_131
	call s4_114 (retsize: 0;)
		uses: a0:s0_110,ra:read_env(ra_88, s0_89, s2_91, dwLoc30, s4, s2, dwLoc08, dwLoc04, dwArg1C, 0xFFFFFFFF<32>, out s0_110, out a3_301, out a4_302, out a5_303, out s2_112, out s3_304, out s4_114, out s6_305, out s7_306),s2:s2_112,Stack +0010:dwLoc30,Stack +0014:s4,Stack +0018:s2,Stack +0038:dwLoc08,Stack +003C:dwLoc04,Stack +005C:dwArg1C,Stack +0084:0xFFFFFFFF<32>
		defs: a0:a0_131,a4:a4_135,a5:a5_136,ra:ra_139,s2:s2_142,s3:s3_143,s5:s5_145
	branch a0_131 == 0<32> l23031222
l23031240:
	s0Out = dwArg0158
	a4Out = a4_135
	a5Out = a5_136
	s2Out = s2_142
	s3Out = s3_143
	s5Out = s5_145
	return ra
env_iterator_exit:


word32 find_env(word32 ra, word32 a0, word32 a1, word32 dwArg14, word32 dwArg28, word32 dwArg68, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      del_env
//      ef_get_env_blob
//      ef_set_env
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a4 a5 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s5 sp
find_env_entry:
l23031252:
	word32 a5_342
	word32 a1_338
	word32 a3_340
	word32 a4_341
	word32 a2_339
	word32 a0_28 = strlen(a0, out a1_338, out a2_339, out a3_340, out a4_341, out a5_342)
	word32 a4_344
	word32 a5_345
	word32 a2_343
	word32 a0_39 = ef_calc_crc32(0<32>, a0, a0_28, out a2_343, out a4_344, out a5_345)
	word32 s4_44 = 0x42012B50<32>
	word32 s0_46 = 0<32>
l23031292:
	word32 a5_105
	word32 a4_104
	word32 s2_109
	word32 s3_110
	word32 s0_129
	word32 a0_52 = Mem23[s4_44 + 4<i32>:int32]
	branch a0_52 == 0xFFFFFFFF<32> l23031306
l2303129A:
	branch CONVERT(Mem23[s4_44:uint16], uint16, word32) != a0_39 >>u 0x10<u32> l23031306
l230312A2:
	word32 a0_346
	word32 a3_348
	word32 a4_349
	word32 a1_347
	ra = ef_port_read(ra, a0_52 + 0x1C<32>, fp + -112<i32>, 64<i32>, out a0_346, out a1_347, out a3_348, out a4_349)
	word32 a4_76
	word32 a3_350
	word32 a5_351
	branch strncmp(a0, fp + -112<i32>, a0_28, out a3_350, out a4_76, out a5_351) != 0<32> l23031306
l23031306:
	s0_46 = s0_46 + 1<32>
	s4_44 = s4_44 + 8<32>
	branch s0_46 != 0x10<32> l23031292
l2303130E:
	word32 s5_112
	word32 s0_357
	env_iterator(ra, a1, a0, s4_44, dwLoc54, dwArg28, dwArg68, dwArgE8, out s0_357, out a4_104, out a5_105, out s2_109, out s3_110, out s5_112)
	s0_129 = 0<32>
	branch true l230312EC
l2303132A:
	word32 a3_358
	update_env_cache(s2_109, s5_112, Mem99[s3_110 + 80<i32>:int32], out a3_358, out a4_104, out a5_105)
l230312BA:
	word32 a5_144 = Mem23[a4_76 + 4<i32>:word32]
	Mem145[a1 + 80<i32>:word32] = a4_76
	word32 s0_143 = s0_46 << 3<i32>
	word32 a4_146 = CONVERT(Mem145[a5_144 + 2<i32>:uint16], uint16, word32)
	word32 a5_149 = 0xFFFFFFF<32>
	branch a4_146 >u 0xFFFFFEE<32> l230312DE
l230312D6:
	a5_149 = CONVERT(SLICE(a4_146 + 16<i32>, word16, 0), word16, word32)
l230312DE:
	Mem159[s0_143 + 0x42012B52<32>:word16] = SLICE(a5_149, word16, 0)
	word32 s7_356
	word32 a3_353
	word32 s4_354
	word32 s6_355
	word32 s0_352
	read_env(ra, a1, a0, dwLoc60, dwLoc5C, dwLoc58, dwLoc38, dwLoc34, dwLoc14, dwArg14, out s0_352, out a3_353, out a4_104, out a5_105, out s2_109, out s3_110, out s4_354, out s6_355, out s7_356)
	s0_129 = 1<32>
l230312EC:
	s0Out = s0_129
	s1Out = dwLoc64
	a0Out = s0_129
	a4Out = a4_104
	a5Out = a5_105
	s2Out = s2_109
	s3Out = s3_110
	return dwArgE8
find_env_exit:


word32 del_env(word32 ra, word32 a0, word32 a1, word32 a2, word32 s3, word32 dwArg08, word32 dwArg0C, word32 dwArg58, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      move_env
//      ef_set_env
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0058:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
del_env_entry:
l23031338:
	word32 a3_138
	word32 ra_159
	word32 s0_160
	word32 s3_104
	word32 s2_103
	word32 s4_105
	word32 s1_118
	branch a1 != 0<32> l23031358
l2303134A:
	word32 s3_35
	word32 s2_418
	word32 a4_416
	word32 a5_417
	word32 s1_415
	ra = find_env(ra, a0, fp + -120<i32>, dwLoc7C, dwLoc68, dwLoc28, dwArg58, out s0_160, out s1_415, out a0, out a4_416, out a5_417, out s2_418, out s3_35)
	branch a0 == 0<32> l230313A8
l230313A8:
	word32 s5_423
	word32 a4_422
	word32 s6_424
	word32 a0_420
	word32 a1_421
	word32 s1_419
	ra_159 = ef_log_debug(ra, 0x230780D8<32>, s3_35, dwLoc88, dwLoc68, dwLoc20, dwLoc1C, dwArg08, s3, out s1_419, out a0_420, out a1_421, out a3_138, out a4_422, out s2_103, out s3_104, out s4_105, out s5_423, out s6_424)
	s1_118 = 4<32>
l23031354:
l23031358:
	word32 a5_117
	branch a2 != 0<32> l230313D4
l230313D4:
	word32 a0_90
	word32 s1_425
	word32 a1_426
	word32 a4_427
	word32 a5_428
	word32 s6_429
	word32 s7_430
	ra_159 = write_status(ra, a0, fp + -128<i32>, 6<32>, 4<32>, 0x4200E1EF<32>, dwLoc90, dwLoc8C, dwLoc88, dwLoc68, dwLoc44, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s0_160, out s1_425, out a0_90, out a1_426, out a3_138, out a4_427, out a5_428, out s2_103, out s3_104, out s4_105, out s6_429, out s7_430)
	a5_117 = CONVERT(Mem81[s2_103:byte], byte, word32)
	s1_118 = a0_90
	branch a5_117 != 0<32> l230313FC
l230313E6:
	branch a0_90 != 0<32> l230313FC
l230313E8:
	word32 a0_121
	word32 a1_120
	branch s3_104 == 0<32> l23031402
l23031402:
	a1_120 = CONVERT(Mem81[s0_160 + 2<i32>:byte], byte, word32)
	a0_121 = s0_160 + 16<i32>
l230313EC:
	word32 a1_449
	word32 a2_450
	word32 a3_451
	word32 a4_452
	word32 a5_453
	a1_120 = strlen(s3_104, out a1_449, out a2_450, out a3_451, out a4_452, out a5_453)
	a0_121 = s3_104
l230313F8:
	word32 a4_454
	update_env_cache(a0_121, a1_120, 0xFFFFFFFF<32>, out a3_138, out a4_454, out a5_117)
l230313FC:
	Mem147[s2_103:byte] = 0<8>
l23031364:
	word32 a0_151
	word32 s1_431
	word32 a1_432
	word32 a4_433
	word32 s6_435
	word32 a5_434
	word32 s7_436
	ra_159 = write_status(ra, a0, fp + -128<i32>, 6<32>, 3<32>, 0x4200E1EF<32>, dwLoc90, dwLoc8C, dwLoc88, dwLoc68, dwLoc44, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s0_160, out s1_431, out a0_151, out a1_432, out a3_138, out a4_433, out a5_434, out s2_103, out s3_104, out s4_105, out s6_435, out s7_436)
	Mem180[s2_103:byte] = 1<8>
	a5_117 = 1<32>
	s1_118 = a0_151
l23031376:
	branch s1_118 != 0<32> l230313C4
l23031378:
	word32 s0_190 = a5_117 & 0xFF000000<32>
	word32 a0_437
	word32 a1_438
	word32 a3_439
	word32 a4_440
	ra_159 = ef_port_read(ra_159, s0_190 + 3<32>, fp + -128<i32>, 3<32>, out a0_437, out a1_438, out a3_439, out a4_440)
	s0_160 = s0_190 + 3<32>
	word32 a1_441
	word32 a5_442
	branch get_status(fp + -128<i32>, 4<32>, out a1_441, out a3_138, out a5_442) != 1<32> l230313C4
l23031398:
	word32 a0_220
	word32 s1_443
	word32 a1_444
	word32 a4_445
	word32 a5_446
	word32 s6_447
	word32 s7_448
	ra_159 = write_status(ra_159, s0_190 + 3<32>, fp + -128<i32>, 4<32>, 2<32>, s2_103, dwLoc90, dwLoc8C, dwLoc88, dwLoc68, dwLoc44, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s0_160, out s1_443, out a0_220, out a1_444, out a3_138, out a4_445, out a5_446, out s2_103, out s3_104, out s4_105, out s6_447, out s7_448)
	s1_118 = a0_220
l230313C4:
	s0Out = s0_160
	s1Out = s1_118
	a0Out = s1_118
	a3Out = a3_138
	a4Out = dwLoc70
	s2Out = s2_103
	s3Out = s3_104
	s4Out = s4_105
	return ra_159
del_env_exit:


word32 move_env(word32 ra, word32 s0, word32 a0, word32 s2, word32 s3, word32 s6, word32 dwArg08, word32 dwArg38, word32 dwArg68, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      check_and_recovery_env_cb
//      do_gc
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0068:[0..31]
// LiveOut: a0 a3 ra s0 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
move_env_entry:
	word24 nLocE8_466 = SLICE(dwLocE8, word24, 0)
l2303140E:
	branch CONVERT(Mem21[a0:byte], byte, word32) != 2<32> l23031438
l2303142E:
	word32 a3_640
	word32 a4_641
	word32 s2_642
	word32 s4_644
	word32 s3_643
	word32 s0_637
	word32 a0_639
	word32 s1_638
	ra = del_env(ra, 0<32>, a0, 0<32>, s3, dwLocE8, dwLocE4, dwLoc98, out s0_637, out s1_638, out a0_639, out a3_640, out a4_641, out s2_642, out s3_643, out s4_644)
l23031438:
	word32 a0_65
	word32 s5_635
	word32 s6_636
	word32 s3_634
	word32 s1_631
	word32 a4_633
	word32 a1_632
	word32 s2_136
	word32 s4_404
	word32 a3_392
	word32 s0_134
	word32 ra_145 = alloc_env(ra, fp + -228<i32>, dwLocB0, dwLocAC, s6, dwLoc64, dwArg08, dwArg38, out s0_134, out s1_631, out a0_65, out a1_632, out a3_392, out a4_633, out s2_136, out s3_634, out s4_404, out s5_635, out s6_636)
	branch a0_65 == 0xFFFFFFFF<32> l23031510
l2303144A:
	word32 s3_137
	branch CONVERT(Mem21[0x4200E1ED<32>:byte], byte, word32) == 0<32> l23031490
l23031458:
	word32 a2_663
	word32 a3_664
	word32 a5_666
	word32 a4_665
	word32 a1_662
	word32 a0_661
	word32 t1_660
	word32 ra_107 = memset(ra_145, fp + -204<i32>, 0<32>, 65<i32>, out t1_660, out a0_661, out a1_662, out a2_663, out a3_664, out a4_665, out a5_666)
	word32 a4_668
	word32 a5_669
	word32 a3_667
	strncpy(fp + -204<i32>, s0_134 + 16<i32>, CONVERT(Mem21[s0_134 + 2<i32>:byte], byte, word32), out a3_667, out a4_668, out a5_669)
	word32 a5_671
	word32 s5_672
	word32 a4_670
	ra_145 = env_iterator(ra_107, fp + -136<i32>, s2_136, s4_404, dwLocD4, dwLoc58, dwLoc18, dwArg68, out s0_134, out a4_670, out a5_671, out s2_136, out s3_137, out s5_672)
	dwLocE8 = CONVERT(nLocE8_466, word24, uint32) (alias)
	branch false l23031506
l23031490:
	word32 s2_172
	word32 s1_181
	word32 s3_212
	word32 s4_657
	word32 s6_658
	word32 s7_659
	word32 s0_651
	word32 s2_656
	word32 a1_652
	word32 a3_653
	word32 a5_655
	word32 a4_654
	word32 a0_645
	word32 s6_650
	word32 a1_646
	word32 a3_647
	word32 s3_649
	word32 a4_648
	word32 a0_198
	word32 s1_208
	word32 ra_206 = write_status(update_sec_status(ra_145, fp + -228<i32>, Mem159[s0_134 + 8<i32>:int32], 0<32>, s2_136, dwLocE8, dwLocC4, dwLocC0, dwLocBC, dwLoc98, dwLoc74, out s1_181, out a0_645, out a1_646, out a3_647, out a4_648, out s2_172, out s3_649, out s6_650), s1_181, fp + -204<i32>, 6<32>, 1<32>, s2_172, dwLocF0, dwLocEC, dwLocE8, dwLocC8, dwLocA4, dwLocA0, dwLoc9C, dwLoc78, dwLoc54, out s0_651, out s1_208, out a0_198, out a1_652, out a3_653, out a4_654, out a5_655, out s2_656, out s3_212, out s4_657, out s6_658, out s7_659)
	word32 s3_225 = s3_212 + 0xFFFFFFF8<32>
	word32 s2_226 = 0<32>
	word32 s7_228 = s1_208 + 8<i32>
l230314B4:
	branch s2_226 <u s3_225 l23031528
l23031528:
	word32 s5_232 = 32<i32>
	branch s2_226 + 32<i32> <u s3_225 l23031538
l23031534:
	s5_232 = s3_225 - s2_226
l23031538:
	word32 s2_276
	word32 s5_279
	word32 s6_710
	word32 a5_708
	word32 s4_709
	word32 a3_706
	word32 a4_707
	word32 s0_704
	word32 a1_705
	word32 a3_702
	word32 a4_703
	word32 a0_700
	word32 a1_701
	ra_206 = ef_port_write(ef_port_read(ra_206, a0_198 + 8<32> + s2_226, fp + -136<i32>, s5_232, out a0_700, out a1_701, out a3_702, out a4_703), s1_208, s7_228 + s2_226, fp + -136<i32>, s5_232, s2_226, dwLocF0, dwLocEC, dwLocC8, dwLocA4, out s0_704, out s1_208, out a0_198, out a1_705, out a3_706, out a4_707, out a5_708, out s2_276, out s3_225, out s4_709, out s5_279, out s6_710, out s7_228)
	s2_226 = s2_276 + s5_279
l230314B8:
	word32 a1_297
	word32 s1_306
	word32 s6_313
	word32 s7_686
	word32 a5_682
	word32 s3_684
	word32 s4_685
	word32 s2_683
	word32 s0_678
	word32 a3_680
	word32 a4_681
	word32 a0_679
	word32 ra_304 = write_status(ra_206, s1_208, fp + -204<i32>, 6<32>, 2<32>, s2_226, dwLocF0, dwLocEC, dwLocE8, dwLocC8, dwLocA4, dwLocA0, dwLoc9C, dwLoc78, dwLoc54, out s0_678, out s1_306, out a0_679, out a1_297, out a3_680, out a4_681, out a5_682, out s2_683, out s3_684, out s4_685, out s6_313, out s7_686)
	word32 s0_323 = Mem159[a1_297 + 12<i32>:word32]
	word32 a5_688
	word32 a4_687
	update_sector_cache(s1_306 & 0xFF000000<32>, a1_297 + 0x1C<32> + CONVERT(Mem159[s0_323 + 2<i32>:byte], byte, word32) + s1_306, out a4_687, out a5_688)
	word32 a5_346
	word32 a4_690
	word32 a3_689
	update_env_cache(s6_313, CONVERT(Mem159[s0_323 + 2<i32>:byte], byte, word32), s1_306, out a3_689, out a4_690, out a5_346)
	s0_134 = Mem159[a5_346 + 80<i32>:word32]
	word32 s6_699
	word32 s5_698
	word32 s4_697
	word32 s2_696
	word32 a3_694
	word32 a4_695
	word32 a0_692
	word32 a1_693
	word32 s1_691
	ra_145 = ef_log_debug(ra_304, 0x230782F4<32>, CONVERT(Mem159[s0_134 + 2<i32>:byte], byte, word32), dwLocE8, dwLocC8, s2, s0, dwLoc58, dwLoc34, out s1_691, out a0_692, out a1_693, out a3_694, out a4_695, out s2_696, out s3_137, out s4_697, out s5_698, out s6_699)
l23031506:
	word32 a4_675
	word32 s3_677
	word32 s2_676
	word32 s1_673
	word32 a0_674
	ra_145 = del_env(ra_145, 0<32>, s0_134, 1<32>, s3_137, dwLocE8, dwLocE4, dwLoc98, out s0_134, out s1_673, out a0_674, out a3_392, out a4_675, out s2_676, out s3_677, out s4_404)
l23031510:
	s0Out = s0_134
	a0Out = s4_404
	a3Out = a3_392
	s3Out = dwLoc28
	return ra_145
move_env_exit:


void check_and_recovery_env_cb(word32 ra, word32 a0, word32 a3, word32 s2, word32 dwArg08, word32 dwArg18, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
check_and_recovery_env_cb_entry:
l23031558:
	word32 a5_13 = CONVERT(Mem9[a0:byte], byte, word32)
	branch CONVERT(Mem9[a0 + 1<i32>:byte], byte, word32) == 0<32> l230315CC
l2303156C:
	branch a5_13 != 3<32> l230315CC
l230315CC:
	branch a5_13 != 1<32> l230315A8
l230315D4:
	word32 s0_309
	word32 s1_310
	word32 a0_311
	word32 a1_312
	word32 a3_313
	word32 a4_314
	word32 a5_315
	word32 s2_316
	word32 s3_317
	word32 s4_318
	word32 s6_319
	word32 s7_320
	write_status(ra, a0, fp + 0xFFFFFFE8<32>, 6<32>, 5<32>, s2, dwLoc20, dwLoc1C, dwLoc18, dwArg08, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg7C, out s0_309, out s1_310, out a0_311, out a1_312, out a3_313, out a4_314, out a5_315, out s2_316, out s3_317, out s4_318, out s6_319, out s7_320)
l23031572:
	word32 s2_72
	word32 s3_73
	word32 s6_76
	word32 a0_84
	word32 a3_87
	word32 s3_288
	word32 s0_287
	word32 s10_286
	word32 s7_285
	word32 s5_284
	word32 s4_283
	word32 a5_282
	word32 a4_281
	word32 a3_280
	word32 a2_279
	word32 a1_278
	word32 a0_277
	word32 s1_276
	word32 ra_93 = move_env(ef_log_info(ra, 0x23077F5C<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_276, out a0_277, out a1_278, out a2_279, out a3_280, out a4_281, out a5_282, out s2_72, out s3_73, out s4_283, out s5_284, out s6_76, out s7_285, out s10_286), a0, a0, s2_72, s3_73, s6_76, dwLoc18, dwArg18, dwArg48, out s0_287, out a0_84, out a3_87, out s3_288)
	branch a0_84 != 0<32> l230315B4
l230315B4:
	word32 a4_293
	word32 s2_294
	word32 s3_295
	word32 s4_296
	word32 a3_292
	word32 a1_291
	word32 a0_290
	word32 s1_289
	word32 s5_297
	word32 s6_298
	ef_log_debug(ra_93, 0x23077FC8<32>, a3_87, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_289, out a0_290, out a1_291, out a3_292, out a4_293, out s2_294, out s3_295, out s4_296, out s5_297, out s6_298)
l23031592:
	word32 s1_299
	word32 a0_300
	word32 a1_301
	word32 a3_302
	word32 a4_303
	word32 s2_304
	word32 s3_305
	word32 s4_306
	word32 s5_307
	word32 s6_308
	ef_log_debug(ra_93, 0x23077FA8<32>, a3_87, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_299, out a0_300, out a1_301, out a3_302, out a4_303, out s2_304, out s3_305, out s4_306, out s5_307, out s6_308)
l230315A8:
	return
check_and_recovery_env_cb_exit:


void do_gc(word32 ra, word32 s0, word32 a0, word32 s2, word32 s4, word32 dwArg04, word32 dwArg0C, word32 dwArg18, word32 dwArg1C, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
do_gc_entry:
	byte bLoc78_269 = SLICE(dwLoc78, byte, 0)
l230315E4:
	branch CONVERT(Mem0[a0:byte], byte, word32) == 0<32> l230316A2
l230315EA:
	branch (CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) + 0xFFFFFFFE<32> & 255<i32>) >u 1<32> l230316A2
l230316A2:
	return
l230315FA:
	word32 s7_429
	word32 s6_428
	word32 s4_427
	word32 s3_426
	word32 s2_425
	word32 a5_424
	word32 a4_423
	word32 a3_422
	word32 a1_421
	word32 a0_420
	word32 s1_419
	word32 s0_131
	word32 ra_130 = write_status(ra, Mem23[a0 + 4<i32>:word32] + 3<32>, fp + -124<i32>, 4<32>, 3<32>, s2, dwLoc80, dwLoc7C, dwLoc78, dwLoc58, dwLoc34, dwLoc30, dwLoc2C, dwLoc08, dwArg1C, out s0_131, out s1_419, out a0_420, out a1_421, out a3_422, out a4_423, out a5_424, out s2_425, out s3_426, out s4_427, out s6_428, out s7_429)
l23031628:
	word32 dwLoc78_272
	byte bLoc77_268 = SLICE(nLoc77_470, byte, 0)
	word32 a0_69
	word32 s1_78
	word32 s2_79
	word32 s0_453
	word32 a1_454
	word32 a5_455
	word32 s3_456
	word32 s5_457
	word32 ra_76 = get_next_env_addr(ra_130, s0_131, dwArg0118, out s0_453, out s1_78, out a0_69, out a1_454, out a5_455, out s2_79, out s3_456, out s5_457)
	branch a0_69 != s1_78 l23031668
l23031668:
	word32 s2_100
	word32 s3_101
	word32 s6_109
	word32 s7_434
	word32 s4_433
	word32 a5_432
	word32 a4_431
	word32 a3_430
	ra_130 = read_env(ra_76, fp + -120<i32>, s2_79, dwLoc70, dwLoc6C, dwLoc68, s2, s0, dwLoc24, dwArg04, out s0_131, out a3_430, out a4_431, out a5_432, out s2_100, out s3_101, out s4_433, out s6_109, out s7_434)
	dwLoc78 = nLoc77_470 (alias)
	nLoc77_470 = dwLoc78
	branch CONVERT(bLoc77_268, byte, word32) == 0<32> l23031628
l23031674:
	dwLoc78_272 = SEQ(nLoc77_470, bLoc78_469) (alias)
	word16 wLoc78_278 = SLICE(dwLoc78_272, word16, 0)
	byte bLoc77_317 = SLICE(wLoc78_278, byte, 8)
	bLoc78_269 = bLoc78_469 (alias)
	bLoc78_269 = SLICE(wLoc78_278, byte, 0) (alias)
	word16 wLoc76_323 = SLICE(dwLoc78_272, word16, 16)
	dwLoc78 = nLoc77_470 (alias)
	branch s2_100 <u (CONVERT(bLoc78_469, byte, word32) + 0xFFFFFFFE<32> & 255<i32>) l23031628
l23031682:
	word32 a0_121
	word32 s3_136
	word32 a3_458
	ra_130 = move_env(ra_130, s0_131, fp + -120<i32>, s2_100, s3_101, s6_109, dwLoc78_272, s2, dwLoc18, out s0_131, out a0_121, out a3_458, out s3_136)
	dwLoc78 = SEQ(wLoc76_323, bLoc78_469) (alias)
	bLoc78_469 = bLoc78_269
	branch a0_121 == 0<32> l23031628
l2303168A:
	word32 s1_459
	word32 a0_460
	word32 a1_461
	word32 a3_462
	word32 a4_463
	word32 s2_464
	word32 s3_465
	word32 s4_466
	word32 s5_467
	word32 s6_468
	ra_130 = ef_log_debug(ra_130, s3_136 + 244<i32>, CONVERT(bLoc78_469, byte, word32), SEQ(bLoc78_469, bLoc78_469, wLoc78_278), dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_459, out a0_460, out a1_461, out a3_462, out a4_463, out s2_464, out s3_465, out s4_466, out s5_467, out s6_468)
	dwLoc78 = SEQ(SEQ(bLoc78_469, bLoc78_469), bLoc77_317) (alias)
l23031636:
	word32 a3_188
	word32 s2_439
	word32 s3_440
	word32 s4_441
	word32 s1_435
	word32 a0_436
	word32 a1_437
	word32 a4_438
	word32 s5_442
	word32 s1_443
	word32 a0_444
	word32 a1_445
	word32 a3_446
	word32 a4_447
	word32 s2_448
	word32 s3_449
	word32 s4_450
	word32 s5_451
	word32 s6_452
	ef_log_debug(format_sector.constprop.16(ra_76, a0_69, s2_79, dwLoc64, dwLoc50, s4, dwLoc40, dwLoc3C, dwLoc28, dwLoc18, dwLoc04, dwArg0C, out s1_435, out a0_436, out a1_437, out a3_188, out a4_438, out s2_439, out s3_440, out s4_441, out s5_442), 0x23078124<32>, a3_188, dwLoc78_272, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_443, out a0_444, out a1_445, out a3_446, out a4_447, out s2_448, out s3_449, out s4_450, out s5_451, out s6_452)
	return
do_gc_exit:


word32 create_env_blob(word32 ra, word32 s1, word32 a1, word32 a3, word32 s2, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg6C, word32 dwArg7C, word32 dwArgA8, word32 dwArgD8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_set_env
//      ef_env_set_default
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[8..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a1 a3 a4 ra s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
create_env_blob_entry:
l230316A6:
	word32 a3_116
	word32 a4_106
	word32 a1_104
	word32 ra_102
	word32 s1_119
	word32 s3_122
	word32 s6_124
	word32 s0_132
	word32 a0_18 = Mem17[s1 + 20<i32>:word32]
	word32 dwLoc40_512 = CONVERT(nLoc40, word24, uint32)
	word24 nLoc27_493 = SLICE(s2, word24, 8)
	word32 s4_100 = a0_18
	word32 s2_103 = a1
	byte bLoc3D_526 = SLICE(dwLoc40_512, byte, 24)
	word32 a3_29
	word32 a5_624
	word32 a4_623
	word32 a1_621
	word32 a2_622
	branch strlen(a1, out a1_621, out a2_622, out a3_29, out a4_623, out a5_624) <=u 64<i32> l230316F8
l230316F8:
	word32 a5_631
	word32 a4_630
	word32 a2_628
	word32 a3_629
	word32 a1_627
	word32 a0_626
	word32 t1_625
	ra_102 = memset(ra, fp + -60<i32>, 255<i32>, 0x1C<32>, out t1_625, out a0_626, out a1_627, out a2_628, out a3_629, out a4_630, out a5_631)
	word32 a3_52
	word32 a5_635
	word32 a4_634
	word32 a2_633
	word32 a1_632
	word32 a0_51 = strlen(a1, out a1_632, out a2_633, out a3_52, out a4_634, out a5_635)
	byte bLoc28_481 = SLICE(a0_51, byte, 0)
	word32 a1_60 = a3 + 28<i32> + (a0_51 & 255<i32>)
	word32 dwLoc28_494 = SEQ(nLoc27_493, bLoc28_481)
	branch a1_60 <=u 0xFFFFEC<32> l2303173E
l2303173E:
	a1_104 = a1_60
	branch s1 != 0xFFFFFFFF<32> l23031752
l23031744:
	word32 a0_67
	word32 s5_82
	word32 s1_650
	ra_102 = new_env(ra_102, a0_18, dwLoc28_494, dwLoc10, dwLoc0C, dwArg18, dwArg20, dwArg24, dwArg3C, dwArg48, dwArg6C, dwArgA8, dwArgD8, out s1_650, out a0_67, out a1_104, out a3_116, out a4_106, out s2_103, out s3_122, out s4_100, out s5_82, out s6_124)
	s1_119 = a0_67
	s0_132 = 6<32>
	branch a0_67 == s5_82 l230316E4
l23031752:
	word32 a0_105
	ra_102 = update_sec_status(ra_102, s4_100, a1_104, fp + -61<i32>, s2_103, a1_60, dwLoc14, dwLoc10, dwLoc0C, dwArg18, dwArg3C, out s1_119, out a0_105, out a1_104, out a3_116, out a4_106, out s2_103, out s3_122, out s6_124)
	s0_132 = a0_105
	branch a0_105 != 0<32> l230316E4
l23031762:
	word32 a2_145
	word32 a2_651
	word32 a4_652
	word32 a5_653
	word32 a4_654
	word32 a5_655
	word32 a2_656
	word32 a4_657
	word32 a5_658
	ef_calc_crc32(ef_calc_crc32(ef_calc_crc32(a0_105, fp + -40<i32>, 8<32>, out a2_651, out a4_652, out a5_653), s2_103, CONVERT(bLoc28_481, byte, word32), out a2_145, out a4_654, out a5_655), s3_122, a2_145, out a2_656, out a4_657, out a5_658)
	word32 a0_161
	word32 s0_659
	word32 a5_660
	word32 s4_661
	word32 s7_662
	ra_102 = write_status(ra_102, s1_119, fp + -60<i32>, 6<32>, 1<32>, s2_103, dwLoc40_512, dwLoc3C, a1_60, dwLoc18, dwArg0C, dwArg10, dwArg14, dwArg38, ra, out s0_659, out s1_119, out a0_161, out a1_104, out a3_116, out a4_106, out a5_660, out s2_103, out s3_122, out s4_661, out s6_124, out s7_662)
	s0_132 = a0_161
	branch a0_161 != 0<32> l230316E4
l23031792:
	word32 a0_192
	word32 s0_663
	word32 a5_664
	word32 s4_665
	word32 s5_666
	word32 s7_667
	ra_102 = ef_port_write(ra_102, s1_119, s1_119 + 8<i32>, fp + -52<i32>, 0x14<32>, s2_103, dwLoc40_512, dwLoc3C, dwLoc18, dwArg0C, out s0_663, out s1_119, out a0_192, out a1_104, out a3_116, out a4_106, out a5_664, out s2_103, out s3_122, out s4_665, out s5_666, out s6_124, out s7_667)
	s0_132 = a0_192
	branch a0_192 != 0<32> l230316E4
l230317A0:
	word32 a0_236
	word32 a1_237
	word32 s4_251
	word32 t1_668
	word32 a0_669
	word32 a1_670
	word32 a2_671
	word32 a3_672
	word32 a4_673
	word32 a5_674
	word32 s0_675
	word32 a3_676
	word32 a4_677
	word32 a5_678
	word32 s5_679
	word32 s7_680
	ra_102 = ef_port_write(memset(ra_102, fp + -64<i32>, 255<i32>, 1<32>, out t1_668, out a0_669, out a1_670, out a2_671, out a3_672, out a4_673, out a5_674), s1_119, s1_119 + 28<i32>, s2_103, CONVERT(bLoc28_481, byte, word32), s2_103, dwLoc40_512, dwLoc3C, dwLoc18, dwArg0C, out s0_675, out s1_119, out a0_236, out a1_237, out a3_676, out a4_677, out a5_678, out s2_103, out s3_122, out s4_251, out s5_679, out s6_124, out s7_680)
	s0_132 = a0_236
	branch CONVERT(bLoc3D_526, byte, word32) != 0<32> l230317D6
l230317C2:
	word32 a4_682
	word32 a5_683
	update_sector_cache(Mem156[s4_251 + 4<i32>:int32], a1_237 + 0x1C<32> + CONVERT(bLoc28_481, byte, word32) + s1_119, out a4_682, out a5_683)
l230317D6:
	word32 a5_681
	a1_104 = update_env_cache(s2_103, CONVERT(bLoc28_481, byte, word32), s1_119, out a3_116, out a4_106, out a5_681)
	branch a0_236 != 0<32> l230316E4
l230317E6:
	word32 a0_318
	word32 t1_684
	word32 a0_685
	word32 a1_686
	word32 a2_687
	word32 a3_688
	word32 a4_689
	word32 a5_690
	word32 s0_691
	word32 a5_692
	word32 s4_693
	word32 s5_694
	word32 s7_695
	ra_102 = ef_port_write(memset(ra_102, fp + -64<i32>, 255<i32>, 1<32>, out t1_684, out a0_685, out a1_686, out a2_687, out a3_688, out a4_689, out a5_690), s1_119, CONVERT(bLoc28_481, byte, word32) + 0x1C<32> + s1_119, s3_122, s2_103, s2_103, dwLoc40_512, dwLoc3C, dwLoc18, dwArg0C, out s0_691, out s1_119, out a0_318, out a1_104, out a3_116, out a4_106, out a5_692, out s2_103, out s3_122, out s4_693, out s5_694, out s6_124, out s7_695)
	s0_132 = a0_318
	branch a0_318 != 0<32> l230316E4
l2303180A:
	word32 a0_350
	word32 s0_696
	word32 a5_697
	word32 s4_698
	word32 s7_699
	ra_102 = write_status(ra_102, s1_119, fp + -60<i32>, 6<32>, 2<32>, s2_103, dwLoc40_512, dwLoc3C, a1_60, dwLoc18, dwArg0C, dwArg10, dwArg14, dwArg38, ra, out s0_696, out s1_119, out a0_350, out a1_104, out a3_116, out a4_106, out a5_697, out s2_103, out s3_122, out s4_698, out s6_124, out s7_699)
	s0_132 = a0_350
	branch a0_350 != 0<32> l230316E4
l2303181C:
	branch CONVERT(bLoc3D_526, byte, word32) == 0<32> l230316E4
l23031824:
	word32 a0_700
	word32 a4_701
	word32 s4_702
	word32 s5_703
	ra_102 = ef_log_debug(ra_102, 0x230780B0<32>, a3_116, a1_60, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_119, out a0_700, out a1_104, out a3_116, out a4_701, out s2_103, out s3_122, out s4_702, out s5_703, out s6_124)
	Mem408[0x4200E1EC<32>:byte] = 1<8>
	a4_106 = 1<32>
l2303172E:
	word32 s5_647
	word32 s4_646
	word32 a5_645
	word32 a2_644
	word32 a0_643
	word32 s7_648
	word32 s10_649
	ra_102 = ef_log_info(ra_102, 0x2307808C<32>, a3_52, a1_60, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_119, out a0_643, out a1_104, out a2_644, out a3_116, out a4_106, out a5_645, out s2_103, out s3_122, out s4_646, out s5_647, out s6_124, out s7_648, out s10_649)
	s0_132 = 6<32>
l230316D2:
	word32 s10_642
	word32 s7_641
	word32 s5_640
	word32 s4_639
	word32 a5_638
	word32 a2_637
	word32 a0_636
	ra_102 = ef_log_info(ra, 0x2307805C<32>, a3_29, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_119, out a0_636, out a1_104, out a2_637, out a3_116, out a4_106, out a5_638, out s2_103, out s3_122, out s4_639, out s5_640, out s6_124, out s7_641, out s10_642)
	s0_132 = 4<32>
l230316E4:
	s1Out = s1_119
	a0Out = s0_132
	a1Out = a1_104
	a3Out = a3_116
	a4Out = a4_106
	s2Out = s2_103
	s3Out = s3_122
	s6Out = s6_124
	return ra_102
create_env_blob_exit:


void ef_get_env_blob(word32 ra, word32 a0, word32 a1, word32 a3, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg58, word32 dwArg88, word32 dwArgC8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_cb_wifi_event
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0058:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_get_env_blob_entry:
l23031846:
	branch CONVERT(Mem0[0x4200E1EE<32>:byte], byte, word32) != 0<32> l23031878
l23031878:
	word32 a0_159
	branch a0 == 0<32> l23031880
l2303187E:
	branch a1 != 0<32> l230318BE
l230318BE:
	word32 a3_26
	word32 a4_27
	word32 a2_30
	word32 a1_416
	word32 a5_417
	branch strlen(a0, out a1_416, out a2_30, out a3_26, out a4_27, out a5_417) <=u 64<i32> l23031910
l23031910:
	word32 a0_50
	word32 a5_55
	word32 s1_60
	word32 s2_63
	word32 s3_64
	word32 s0_426
	word32 a3_423
	word32 s1_420
	word32 a1_422
	word32 a0_421
	word32 a4_424
	word32 s2_425
	word32 a4_102
	word32 ra_58 = find_env(ra, ef_port_env_lock(a2_30, a3_26, a4_27, mstatus, dwLoc88, dwLoc6C, dwArg14, dwArg88, dwArgC8, out s1_420, out a0_421, out a1_422, out a3_423, out a4_424, out s2_425), fp + -120<i32>, dwLoc7C, dwLoc68, dwLoc28, dwArg58, out s0_426, out s1_60, out a0_50, out a4_102, out a5_55, out s2_63, out s3_64)
	branch a0_50 == 0<32> l23031938
l2303191E:
	branch s2_63 == 0<32> l23031928
l23031924:
	Mem79[s2_63:word32] = a5_55
l23031928:
	word32 s0_81 = s3_64
	branch a5_55 >=u s3_64 l23031930
l2303192E:
	s0_81 = a5_55
l23031930:
	word32 a0_453
	word32 a1_454
	word32 a3_455
	ef_port_read(ra_58, a0_50, s1_60, s0_81, out a0_453, out a1_454, out a3_455, out a4_102)
l23031938:
	word32 a3_451
	word32 a4_452
	ef_port_env_unlock(a4_102, mstatus, dwLoc88, dwLoc6C, dwArg14, dwArg88, dwArgC8, dwArg0108, out a3_451, out a4_452)
l230318CE:
	branch Mem16[0x4200E244<32>:int32] == 0<32> l2303190A
l2303190A:
	word32 a5_427
	xTaskGetTickCount(out a5_427)
l230318D8:
	word32 a5_428
	xTaskGetTickCountFromISR(out a5_428)
l230318DC:
	word32 a1_446
	word32 a2_447
	word32 a3_448
	word32 a4_449
	word32 a5_450
	strlen(a0, out a1_446, out a2_447, out a3_448, out a4_449, out a5_450)
	a0_159 = 0x230781F4<32>
l23031880:
	branch Mem16[0x4200E244<32>:int32] == 0<32> l230318B8
l230318B8:
	word32 a5_418
	xTaskGetTickCount(out a5_418)
l2303188A:
	word32 a5_419
	xTaskGetTickCountFromISR(out a5_419)
l2303188E:
	a0_159 = 0x230781C4<32>
l230318B0:
	word32 a4_434
	word32 a3_433
	word32 a2_432
	word32 s3_437
	word32 a5_435
	word32 s2_436
	word32 s5_439
	word32 s6_440
	word32 s9_443
	word32 s4_438
	word32 s7_441
	word32 s8_442
	word32 s11_445
	word32 s10_444
	word32 s1_429
	word32 a0_430
	word32 a1_431
	bl_printk(ra, a0_159, 0x230781A8<32>, dwLoc88, dwLoc68, dwLoc20, dwLoc1C, dwArg08, s3, out s1_429, out a0_430, out a1_431, out a2_432, out a3_433, out a4_434, out a5_435, out s2_436, out s3_437, out s4_438, out s5_439, out s6_440, out s7_441, out s8_442, out s9_443, out s10_444, out s11_445)
l2303185C:
	word32 a0_403
	word32 a1_404
	word32 a2_405
	word32 s1_402
	word32 a5_408
	word32 a4_407
	word32 s2_409
	word32 s4_411
	word32 a3_406
	word32 s5_412
	word32 s6_413
	word32 s3_410
	word32 s7_414
	word32 s10_415
	ef_log_info(ra, 0x2307821C<32>, a3, dwLoc88, dwLoc68, dwLoc20, dwLoc1C, dwArg08, s3, out s1_402, out a0_403, out a1_404, out a2_405, out a3_406, out a4_407, out a5_408, out s2_409, out s3_410, out s4_411, out s5_412, out s6_413, out s7_414, out s10_415)
l23031868:
	return
ef_get_env_blob_exit:


void ef_set_env_blob(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg4C, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg8C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_set_env
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_set_env_blob_entry:
l2303193C:
	branch CONVERT(Mem0[0x4200E1EE<32>:byte], byte, word32) != 0<32> l2303197A
l2303197A:
	word32 a0_311
	branch a0 == 0<32> l23031982
l23031980:
	branch a1 != 0<32> l230319C0
l230319C0:
	word32 a3_30
	word32 a4_31
	word32 a2_34
	word32 a5_699
	word32 a1_698
	branch strlen(a0, out a1_698, out a2_34, out a3_30, out a4_31, out a5_699) <=u 64<i32> l23031A10
l23031A10:
	branch a2 <=u 0xFFFF8C<32> l23031A56
l23031A56:
	word32 s1_47
	word32 a0_709
	word32 a4_712
	word32 s2_713
	word32 a3_711
	word32 a1_710
	ef_port_env_lock(a2_34, a3_30, a4_31, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_47, out a0_709, out a1_710, out a3_711, out a4_712, out s2_713)
	word32 a1_714
	word32 a4_717
	word32 a5_718
	word32 a3_716
	word32 a2_715
	strlen(s1_47, out a1_714, out a2_715, out a3_716, out a4_717, out a5_718)
	word32 a0_65
	word32 s1_74
	word32 s5_724
	word32 s6_725
	word32 a1_719
	word32 s3_722
	word32 s4_723
	word32 s2_721
	word32 a3_720
	word32 a4_131
	word32 ra_73 = new_env(ra, 0x42012BD0<32>, dwLoc18, dwArg00, dwArg04, dwArg28, dwArg30, dwArg34, dwArg4C, s5, dwArg7C, dwArgB8, dwArgE8, out s1_74, out a0_65, out a1_719, out a3_720, out a4_131, out s2_721, out s3_722, out s4_723, out s5_724, out s6_725)
	branch a0_65 == 0xFFFFFFFF<32> l23031ACE
l23031A78:
	word32 a0_97
	word32 a4_727
	word32 a5_728
	word32 s0_726
	word32 s3_111
	word32 s1_107
	word32 s2_110
	word32 ra_105 = find_env(ra_73, s1_74, 0x42012AF8<32>, s0, dwLoc08, dwArg38, dwArgB8, out s0_726, out s1_107, out a0_97, out a4_727, out a5_728, out s2_110, out s3_111)
	branch a0_97 != 0<32> l23031AB0
l23031AB0:
	word32 a0_154
	word32 s0_743
	word32 a3_744
	word32 s4_745
	ra_105 = del_env(ra_105, s1_107, s2_110 + -1288<i32>, 0<32>, s3_111, s6, s4, dwArg28, out s0_743, out s1_107, out a0_154, out a3_744, out a4_131, out s2_110, out s3_111, out s4_745)
	branch a0_154 == 0<32> l23031A8A
l23031A8A:
	word32 s1_178
	word32 s2_181
	word32 s3_182
	word32 s6_185
	word32 a0_196
	word32 a3_730
	word32 a1_729
	ra_105 = create_env_blob(ra_105, s1_107, s1_107, s3_111, s2_110, s4, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg3C, dwArg4C, dwArg78, dwArgA8, out s1_178, out a0_196, out a1_729, out a3_730, out a4_131, out s2_181, out s3_182, out s6_185)
	branch s6_185 == 0<32> l23031AC0
l23031A9E:
	branch a0_196 != 0<32> l23031AC0
l23031AA0:
	word32 s4_737
	word32 a3_734
	word32 s2_735
	word32 s3_736
	word32 s1_732
	word32 a0_733
	word32 s0_731
	ra_105 = del_env(ra_105, s1_178, s2_181 + -1288<i32>, 1<32>, s3_182, s6, s4, dwArg28, out s0_731, out s1_732, out a0_733, out a3_734, out a4_131, out s2_735, out s3_736, out s4_737)
l23031AC0:
	branch CONVERT(Mem22[0x4200E1EC<32>:byte], byte, word32) == 0<32> l23031ACE
l23031ACA:
	word32 s4_740
	word32 s1_738
	word32 s2_739
	gc_collect(ra_105, dwArg10, dwArg14, dwArg38, s3, dwArgC8, out s1_738, out a4_131, out s2_739, out s4_740)
l23031ACE:
	word32 a3_741
	word32 a4_742
	ef_port_env_unlock(a4_131, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out a3_741, out a4_742)
l23031A1A:
	branch Mem22[0x4200E244<32>:int32] == 0<32> l23031A50
l23031A50:
	word32 a5_708
	xTaskGetTickCount(out a5_708)
l23031A24:
	word32 a5_707
	xTaskGetTickCountFromISR(out a5_707)
l23031A28:
	a0_311 = 0x23078278<32>
l230319CE:
	branch Mem22[0x4200E244<32>:int32] == 0<32> l23031A0A
l23031A0A:
	word32 a5_706
	xTaskGetTickCount(out a5_706)
l230319D8:
	word32 a5_700
	xTaskGetTickCountFromISR(out a5_700)
l230319DC:
	word32 a4_704
	word32 a5_705
	word32 a2_702
	word32 a3_703
	word32 a1_701
	strlen(a0, out a1_701, out a2_702, out a3_703, out a4_704, out a5_705)
	a0_311 = 0x230781F4<32>
l23031982:
	branch Mem22[0x4200E244<32>:int32] == 0<32> l230319BA
l230319BA:
	word32 a5_697
	xTaskGetTickCount(out a5_697)
l2303198C:
	word32 a5_679
	xTaskGetTickCountFromISR(out a5_679)
l23031990:
	a0_311 = 0x230781C4<32>
l230319B2:
	word32 s5_690
	word32 s9_694
	word32 s11_696
	word32 s10_695
	word32 s6_691
	word32 s7_692
	word32 s8_693
	word32 a0_681
	word32 a4_685
	word32 s3_688
	word32 s4_689
	word32 s2_687
	word32 a5_686
	word32 a1_682
	word32 a2_683
	word32 a3_684
	word32 s1_680
	bl_printk(ra, a0_311, 0x230781A8<32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_680, out a0_681, out a1_682, out a2_683, out a3_684, out a4_685, out a5_686, out s2_687, out s3_688, out s4_689, out s5_690, out s6_691, out s7_692, out s8_693, out s9_694, out s10_695, out s11_696)
l23031958:
	word32 a5_671
	word32 a2_668
	word32 a0_666
	word32 a1_667
	word32 a3_669
	word32 s1_665
	word32 s4_674
	word32 s2_672
	word32 s3_673
	word32 a4_670
	word32 s10_678
	word32 s6_676
	word32 s7_677
	word32 s5_675
	ef_log_info(ra, 0x2307821C<32>, a3, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_665, out a0_666, out a1_667, out a2_668, out a3_669, out a4_670, out a5_671, out s2_672, out s3_673, out s4_674, out s5_675, out s6_676, out s7_677, out s10_678)
l23031964:
	0<32> = dwArg0128
	return
ef_set_env_blob_exit:


void ef_set_env(word32 ra, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg4C, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg8C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_cb_wifi_event
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_set_env_entry:
l23031AD2:
	word32 a3_14
	word32 a1_17
	word32 a2_88
	word32 a4_89
	word32 a5_90
	strlen(a1, out a1_17, out a2_88, out a3_14, out a4_89, out a5_90)
l23031AEE_thunk_ef_set_env_blob:
	ef_set_env_blob(ra, a0, a0, a1_17, dwArg44, a3_14, s2, s3, s4, s5, s6, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg28, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg4C, dwArg68, dwArg74, dwArg78, dwArg7C, dwArg8C, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0128, dwArg0168)
	return
ef_set_env_exit:


void ef_save_env()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_cb_wifi_event
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
ef_save_env_entry:
l23031AF2:
	return
ef_save_env_exit:


word32 ef_env_set_default(word32 ra, word32 s0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s4, word32 s5, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg2C, word32 dwArg3C, word32 dwArg58, word32 dwArg6C, word32 dwArg88, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_load_env
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s4:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a2 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_env_set_default_entry:
l23031AF6:
	branch Mem5[0x4200E1E0<32>:int32] != 0<32> l23031B38
l23031B38:
	branch Mem19[0x4200E1E4<32>:int32] != 0<32> l23031B6E
l23031B6E:
	word32 s1_422
	word32 s2_142
	word32 a4_133
	word32 a3_108
	word32 a0_100
	word32 a1_106
	ef_port_env_lock(a2, a3, a4, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, out s1_422, out a0_100, out a1_106, out a3_108, out a4_133, out s2_142)
	word32 s1_43 = Mem19[0x4200E1E8<32>:int32]
	word32 s3_45 = 0x4200E1E8<32>
	word32 s4_46 = 0x8000000<32>
	ra_128 = ra
l23031B84:
	word32 ra_128
	branch s1_43 <u Mem19[s3_45:int32] + s4_46 l23031BB6
l23031BB6:
	word32 s1_64
	word32 s5_75
	ra_128 = format_sector.constprop.16(ra_128, s1_43, s2_142, s4, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwArg08, dwArg18, dwArg2C, dwArg3C, out s1_64, out a0_100, out a1_106, out a3_108, out a4_133, out s2_142, out s3_45, out s4_46, out s5_75)
	branch a0_100 != 0<32> l23031B9E
l23031BBE:
	s1_43 = s1_64 + s5_75
l23031B8E:
	word32 s1_139 = 0<32>
l23031B94:
	branch s1_139 <u Mem91[s2_142:int32] l23031BC2
l23031BC2:
	branch a3_108 != 0<32> l23031BD6
l23031BCE:
	word32 a4_438
	word32 a5_439
	word32 a3_437
	word32 a2_436
	a3_108 = strlen(a0_100, out a1_106, out a2_436, out a3_437, out a4_438, out a5_439)
l23031BD6:
	word32 s3_434
	word32 s6_435
	ra_128 = create_env_blob(ra_128, s1_139 + 1<32>, a1_106, a3_108, s2_142, dwLoc44, dwLoc40, dwLoc3C, dwLoc38, s2, s0, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwLoc08, dwArg1C, dwArg2C, dwArg58, dwArg88, out s1_139, out a0_100, out a1_106, out a3_108, out a4_133, out s2_142, out s3_434, out s6_435)
l23031B9C:
l23031B9E:
	word32 a4_171
	word32 a3_433
	ef_port_env_unlock(a4_133, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, dwArg0148, out a3_433, out a4_171)
	a2Out = dwLoc0C
	a3Out = s2
	a4Out = a4_171
	return dwLoc08
ef_env_set_default_exit:
l23031B46:
	word32 a1_425
	word32 a3_426
	word32 a4_427
	word32 s2_428
	word32 a0_424
	word32 s1_423
	word32 s3_429
	word32 s4_430
	word32 s6_432
	word32 s5_431
	ef_log_debug(ra, 0x230783F0<32>, 0x23078190<32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_423, out a0_424, out a1_425, out a3_426, out a4_427, out s2_428, out s3_429, out s4_430, out s5_431, out s6_432)
l23031B6C:
l23031B10:
	word32 s6_421
	word32 s5_420
	word32 s3_418
	word32 a4_416
	word32 a1_414
	word32 s1_412
	word32 s4_419
	word32 s2_417
	word32 a3_415
	word32 a0_413
	ef_log_debug(ra, 0x230783F0<32>, 0x23078180<32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_412, out a0_413, out a1_414, out a3_415, out a4_416, out s2_417, out s3_418, out s4_419, out s5_420, out s6_421)
l23031B36:


word32 ef_load_env(word32 ra, word32 s0, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg2C, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArg0108, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_env_init
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_load_env_entry:
l23031BEA:
	Mem9[0x4200E1ED<32>:byte] = 1<8>
	word32 s0_32
	word32 s5_343
	word32 s3_341
	word32 a5_339
	word32 a0_337
	word32 s6_344
	word32 s4_342
	word32 s2_340
	word32 a1_338
	word32 s1_336
	word32 a4_108
	word32 a3_109
	word32 ra_135 = sector_iterator(ra, fp + -128<i32>, dwArg98, out s0_32, out s1_336, out a0_337, out a1_338, out a3_109, out a4_108, out a5_339, out s2_340, out s3_341, out s4_342, out s5_343, out s6_344)
	word32 a2_110 = ra
	branch a4_108 != 8<32> l23031C30
l23031C22:
	word32 a2_58
	word32 a3_59
	word32 a4_60
	word32 s2_67
	word32 s4_69
	word32 s5_70
	word32 s6_367
	word32 s3_366
	word32 a5_365
	word32 a1_364
	word32 a0_363
	word32 s1_362
	word32 s7_368
	word32 s10_369
	ra_135 = ef_env_set_default(ef_log_info(ra_135, 0x23078238<32>, a3_109, dwLoc88, dwLoc68, dwLoc20, dwLoc1C, dwArg08, dwArg2C, out s1_362, out a0_363, out a1_364, out a2_58, out a3_59, out a4_60, out a5_365, out s2_67, out s3_366, out s4_69, out s5_70, out s6_367, out s7_368, out s10_369), s0_32 + 493<i32>, a2_58, a3_59, a4_60, s2_67, s4_69, s5_70, mstatus, dwLoc88, dwLoc78, dwLoc74, dwLoc70, dwLoc6C, dwLoc64, dwLoc54, dwLoc38, dwLoc24, dwLoc08, dwArg38, dwArg78, dwArgB8, out a2_110, out a3_109, out a4_108)
l23031C30:
	word32 s2_350
	word32 a4_349
	word32 a1_347
	word32 s1_345
	word32 a3_348
	word32 a0_346
	ef_port_env_lock(a2_110, a3_109, a4_108, mstatus, dwLoc88, dwLoc6C, dwArg14, dwArg88, dwArgC8, out s1_345, out a0_346, out a1_347, out a3_348, out a4_349, out s2_350)
	word32 s6_361
	word32 s3_359
	word32 a5_357
	word32 a3_355
	word32 a1_354
	word32 a0_353
	word32 s0_351
	word32 s5_360
	word32 s2_358
	word32 a4_356
	word32 s1_352
	word32 s4_151
	word32 ra_144 = sector_iterator(ra_135, fp + -128<i32>, dwArg98, out s0_351, out s1_352, out a0_353, out a1_354, out a3_355, out a4_356, out a5_357, out s2_358, out s3_359, out s4_151, out s5_360, out s6_361)
	word32 s2_165 = 0x4200E000<32>
l23031C50:
	word32 a4_179
	word32 s0_182
	word32 s2_184
	word32 a5_373
	word32 s3_374
	word32 s5_375
	word32 ra_193 = env_iterator(ra_144, fp + -104<i32>, s2_165, s4_151, dwLoc74, dwArg08, dwArg48, dwArgC8, out s0_182, out a4_179, out a5_373, out s2_184, out s3_374, out s5_375)
	branch CONVERT(Mem22[s2_184 + 492<i32>:byte], byte, word32) == 0<32> l23031C6A
l23031C6A:
	Mem205[s0_182:byte] = 0<8>
	word32 a3_210
	word32 a4_370
	s0Out = ef_port_env_unlock(a4_179, mstatus, dwLoc88, dwLoc6C, dwArg14, dwArg88, dwArgC8, dwArg0108, out a3_210, out a4_370)
	a0Out = 0<32>
	a3Out = a3_210
	return ra_193
ef_load_env_exit:
l23031C64:
	word32 s1_371
	word32 a4_372
	ra_144 = gc_collect(ra_193, s2, s0, dwLoc28, dwLoc04, dwArg68, out s1_371, out a4_372, out s2_165, out s4_151)


word32 ef_env_init(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgF8, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      easyflash_init
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
ef_env_init_entry:
l23031C7E:
	branch a0 != 0<32> l23031CAE
l23031CAE:
	word32 a3_11 = a0
	word32 a0_13 = 0<32>
	branch CONVERT(Mem7[0x4200E1EE<32>:byte], byte, word32) != 0<32> l23031D26
l23031CC0:
	Mem17[0xFFFFFFFF<32>:word32] = 0x42012BE8<32>
	Mem18[7<32>:word32] = 0x42012BE8<32>
	Mem19[0xF<32>:word32] = 0x42012BE8<32>
	Mem20[0x17<32>:word32] = 0x42012BE8<32>
	word32 a5_22 = 0x42012B50<32>
l23031CE0:
	Mem27[3<32>:word32] = a5_22
	a5_22 = a5_22 + 8<32>
	branch a5_22 != 0x42012BD0<32> l23031CE0
l23031CE8:
	Mem31[0x4200E1E8<32>:word32] = 0<32>
	Mem34[0x4200E1E0<32>:word32] = a0
	Mem40[0x4200E1E4<32>:word32] = a1
	word32 s2_59
	word32 s0_82
	word32 s1_236
	word32 a0_237
	word32 a1_238
	word32 a3_239
	word32 a4_240
	word32 s3_241
	word32 s4_242
	word32 s5_243
	word32 s6_244
	ra = ef_load_env(ef_log_debug(ra, 0x2307814C<32>, 0<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_236, out a0_237, out a1_238, out a3_239, out a4_240, out s2_59, out s3_241, out s4_242, out s5_243, out s6_244), 0x4200E1EE<32>, s2_59, mstatus, dwLoc08, dwArg04, dwArg1C, dwArg28, dwArg38, dwArg58, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgF8, out s0_82, out a0_13, out a3_11)
	branch a0_13 != 0<32> l23031D26
l23031D20:
	Mem102[s0_82:byte] = 1<8>
l23031D26:
	a0Out = a0_13
	a3Out = a3_11
	return ra
ef_env_init_exit:
l23031C86:
	word32 s1_226
	word32 a0_227
	word32 a1_228
	word32 a3_229
	word32 a4_230
	word32 s2_231
	word32 s3_232
	word32 s4_233
	word32 s5_234
	word32 s6_235
	ef_log_debug(ra, 0x230783F0<32>, 0x23078140<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_226, out a0_227, out a1_228, out a3_229, out a4_230, out s2_231, out s3_232, out s4_233, out s5_234, out s6_235)
l23031CAC:


word32 ef_port_read(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_env
//      get_next_env_addr
//      read_sector_meta_data
//      find_env
//      del_env
//      move_env
//      ef_get_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra
// Preserved: sp
ef_port_read_entry:
l23031D2E:
	word32 a0_14
	word32 a1_15
	word32 a3_17
	word32 a4_18
	word32 ra_20 = bl_mtd_read(ra, Mem0[0x4200E1F4<32>:int32], a0, a2, a1, out a0_14, out a1_15, out a3_17, out a4_18)
	a0Out = CONVERT(a0_14 < 0<i32>, bool, word32) << 1<i32>
	a1Out = a1_15
	a3Out = a3_17
	a4Out = a4_18
	return ra_20
ef_port_read_exit:


word32 ef_port_write(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg4C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      write_status
//      format_sector.constprop.16
//      move_env
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +004C:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
ef_port_write_entry:
l23031D4E:
	word32 a0_43
	word32 a0_16
	word32 a1_17
	word32 a3_19
	word32 a4_20
	word32 a5_21
	word32 s0_24
	word32 s1_25
	word32 s2_26
	word32 s5_27
	word32 s3_33
	word32 s4_34
	word32 s6_35
	word32 s7_36
	word32 ra_23 = bl_mtd_write(ra, s1, a0, a2, a1, s2, dwArg00, dwArg04, dwArg28, dwArg4C, out s0_24, out s1_25, out a0_16, out a1_17, out a3_19, out a4_20, out a5_21, out s2_26, out s3_33, out s4_34, out s5_27, out s6_35, out s7_36)
	branch a0_16 >= 0<32> l23031D6E
l23031D6E:
	a0_43 = 0<32>
l23031D66:
	a0_43 = 3<32>
l23031D68:
	s0Out = s0_24
	s1Out = s1_25
	a0Out = a0_43
	a1Out = a1_17
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_21
	s2Out = s2_26
	s3Out = s3_33
	s4Out = s4_34
	s5Out = s5_27
	s6Out = s6_35
	s7Out = s7_36
	return ra_23
ef_port_write_exit:


word32 ef_port_env_lock(word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_get_env_blob
//      ef_set_env
//      ef_env_set_default
//      ef_load_env
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
ef_port_env_lock_entry:
l23031D72:
	word32 a0_5 = Mem0[0x4200E1F0<32>:int32]
l23031D7C_thunk_xQueueSemaphoreTake:
	word32 a0_11
	word32 a1_12
	word32 a3_14
	word32 a4_15
	word32 s1_19
	word32 s2_20
	word32 a2_37
	word32 a5_38
	word32 s3_39
	word32 s4_40
	word32 s8_41
	word32 s0_18 = xQueueSemaphoreTake(a0_5, 0xFFFFFFFF<32>, a2, a3, a4, 0x4200E000<32>, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, out s1_19, out a0_11, out a1_12, out a2_37, out a3_14, out a4_15, out a5_38, out s2_20, out s3_39, out s4_40, out s8_41)
	s1Out = s1_19
	a0Out = a0_11
	a1Out = a1_12
	a3Out = a3_14
	a4Out = a4_15
	s2Out = s2_20
	return s0_18
ef_port_env_lock_exit:


word32 ef_port_env_unlock(word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_get_env_blob
//      ef_set_env
//      ef_env_set_default
//      ef_load_env
// MayUse:  a4:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a3 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_port_env_unlock_entry:
l23031D80:
	word32 a0_5 = Mem0[0x4200E1F0<32>:int32]
l23031D8E_thunk_xQueueGenericSend:
	word32 a3_14
	word32 a4_15
	word32 s1_42
	word32 a0_43
	word32 a1_44
	word32 a2_45
	word32 a5_46
	word32 a7_47
	word32 s2_48
	word32 s3_49
	word32 s4_50
	word32 s5_51
	word32 s6_52
	word32 s8_53
	word32 s0_19 = xQueueGenericSend(a0_5, 0<32>, 0<32>, a4, 0x4200E000<32>, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_42, out a0_43, out a1_44, out a2_45, out a3_14, out a4_15, out a5_46, out a7_47, out s2_48, out s3_49, out s4_50, out s5_51, out s6_52, out s8_53)
	a3Out = a3_14
	a4Out = a4_15
	return s0_19
ef_port_env_unlock_exit:


word32 ef_log_debug(word32 ra, word32 a2, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      write_status
//      read_env
//      format_sector.constprop.16
//      read_sector_meta_data
//      alloc_env
//      gc_collect
//      new_env
//      del_env
//      move_env
//      check_and_recovery_env_cb
//      do_gc
//      create_env_blob
//      ef_env_set_default
//      ef_env_init
//      ef_port_erase
// MayUse:  a2:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a1 a3 a4 ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ef_log_debug_entry:
l23031D92:
	word32 a0_21
	word32 a1_22
	word32 a3_24
	word32 a4_25
	word32 s1_28
	word32 s2_31
	word32 s3_32
	word32 s4_33
	word32 s5_34
	word32 s6_35
	word32 a2_68
	word32 a5_69
	word32 a7_70
	word32 s7_71
	word32 s8_72
	word32 s9_73
	word32 s10_74
	word32 s11_75
	word32 t4_76
	word32 ra_27 = vprint(ra, a2, fp + -20<i32>, dwArg08, dwArg28, a3, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_28, out a0_21, out a1_22, out a2_68, out a3_24, out a4_25, out a5_69, out a7_70, out s2_31, out s3_32, out s4_33, out s5_34, out s6_35, out s7_71, out s8_72, out s9_73, out s10_74, out s11_75, out t4_76)
	s1Out = s1_28
	a0Out = a0_21
	a1Out = a1_22
	a3Out = a3_24
	a4Out = a4_25
	s2Out = s2_31
	s3Out = s3_32
	s4Out = s4_33
	s5Out = s5_34
	s6Out = s6_35
	return ra_27
ef_log_debug_exit:


word32 ef_port_erase(word32 ra, word32 a0, word32 a1, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      format_sector.constprop.16
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a1 a4 ra
// Trashed: a0 a1 a2 a4 a5 ra
// Preserved: sp
ef_port_erase_entry:
l23031DB0:
	branch a0 << 0x14<u32> == 0<32> l23031DE4
l23031DE4:
	word32 a0_13
	word32 a1_14
	word32 a4_16
	word32 ra_18 = bl_mtd_erase(ra, Mem5[0x4200E1F4<32>:int32], a0, a1, out a0_13, out a1_14, out a4_16)
	a0Out = a0_13 >>u 31<i32>
	a1Out = a1_14
	a4Out = a4_16
	return ra_18
ef_port_erase_exit:
l23031DBA:
	word32 s1_64
	word32 a0_65
	word32 a1_66
	word32 a3_67
	word32 a4_68
	word32 s2_69
	word32 s3_70
	word32 s4_71
	word32 s5_72
	word32 s6_73
	ef_log_debug(ra, 0x230783F0<32>, 0x23078488<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_64, out a0_65, out a1_66, out a3_67, out a4_68, out s2_69, out s3_70, out s4_71, out s5_72, out s6_73)
l23031DE2:


word32 ef_log_info(word32 ra, word32 a0, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      easyflash_init
//      check_sec_hdr_cb
//      read_sector_meta_data
//      check_and_recovery_env_cb
//      create_env_blob
//      ef_get_env_blob
//      ef_set_env
//      ef_load_env
//      ef_port_init
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s1 s10 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ef_log_info_entry:
l23031DFC:
	word32 a5_23
	word32 a0_24
	word32 a1_25
	word32 a2_26
	word32 a3_27
	word32 a4_28
	word32 s1_31
	word32 s10_32
	word32 s2_34
	word32 s3_35
	word32 s4_36
	word32 s5_37
	word32 s6_38
	word32 s7_39
	word32 a7_77
	word32 s8_78
	word32 s9_79
	word32 s11_80
	word32 t4_81
	word32 ra_30 = vprint(ra, a0, fp + -28<i32>, dwArg08, dwArg28, a3, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_31, out a0_24, out a1_25, out a2_26, out a3_27, out a4_28, out a5_23, out a7_77, out s2_34, out s3_35, out s4_36, out s5_37, out s6_38, out s7_39, out s8_78, out s9_79, out s10_32, out s11_80, out t4_81)
	s1Out = s1_31
	a0Out = a0_24
	a1Out = a1_25
	a2Out = a2_26
	a3Out = a3_27
	a4Out = a4_28
	a5Out = a5_23
	s2Out = s2_34
	s3Out = s3_35
	s4Out = s4_36
	s5Out = s5_37
	s6Out = s6_38
	s7Out = s7_39
	s10Out = s10_32
	return ra_30
ef_log_info_exit:


word32 ef_port_init(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg5C, word32 dwArg68, word32 dwArg84, word32 dwArg8C, word32 dwArg98, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      easyflash_init
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0084:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ef_port_init_entry:
l23031E1C:
	word32 a0_27
	word32 a3_30
	word32 s0_34
	word32 s2_36
	word32 s5_227
	word32 s6_228
	word32 ra_43 = bl_mtd_open(ra, 0x230784F4<32>, a3, a4, a5, s3, mstatus, s2, s0, dwArg10, dwArg14, dwArg38, dwArg5C, dwArg84, dwArg98, dwArgD8, dwArgF8, dwArg0118, out s0_34, out a0_27, out a3_30, out s2_36, out s5_227, out s6_228)
	branch a0_27 >= 0<32> l23031E64
l23031E64:
	word32 a3_60
	word32 t1_229
	word32 a0_230
	word32 a1_231
	word32 a2_232
	word32 a4_233
	word32 a5_234
	word32 ra_63 = memset(ra_43, fp + -44<i32>, 0<32>, 0x1C<32>, out t1_229, out a0_230, out a1_231, out a2_232, out a3_60, out a4_233, out a5_234)
	bl_mtd_info(Mem21[s2_36:int32], fp + -44<i32>)
	word32 a3_82
	word32 s1_87
	word32 a0_235
	word32 a1_236
	word32 a2_237
	word32 a4_238
	word32 a5_239
	word32 s2_240
	word32 s3_241
	word32 s4_242
	word32 s5_243
	word32 s6_244
	word32 s7_245
	word32 s10_246
	word32 ra_86 = ef_log_info(ra_63, 0x23078570<32>, a3_60, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_87, out a0_235, out a1_236, out a2_237, out a3_82, out a4_238, out a5_239, out s2_240, out s3_241, out s4_242, out s5_243, out s6_244, out s7_245, out s10_246)
	Mem103[0x2307847C<32>:word32] = s1_87
	Mem106[1<32>:word32] = s0_34
	word32 a5_110
	word32 a3_114
	word32 a4_115
	word32 s1_247
	word32 a0_248
	word32 a1_249
	word32 a2_250
	word32 a7_251
	word32 s2_252
	word32 s3_253
	word32 s4_254
	word32 s5_255
	word32 s6_256
	word32 s7_257
	word32 s8_258
	word32 s9_259
	word32 s10_260
	word32 s11_261
	word32 t4_262
	word32 ra_117 = printf(ra_86, 0x230785B4<32>, a3_82, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_247, out a0_248, out a1_249, out a2_250, out a3_114, out a4_115, out a5_110, out a7_251, out s2_252, out s3_253, out s4_254, out s5_255, out s6_256, out s7_257, out s8_258, out s9_259, out s10_260, out s11_261, out t4_262)
	word32 a1_132
	word32 a3_134
	word32 a0_145
	word32 a4_263
	word32 s2_264
	xQueueCreateMutex(ra_117, a3_114, a4_115, a5_110, mstatus, s2, s0, ra, dwArgD8, dwArg0118, dwArg0158, out a0_145, out a1_132, out a3_134, out a4_263, out s2_264)
	Mem157[0x4200E1F0<32>:word32] = a0_145
	0<32> = dwArg0128
	a0Out = 0<32>
	a1Out = a1_132
	a3Out = a3_134
	return ra_117
ef_port_init_exit:
l23031E48:
	word32 s1_265
	word32 a0_266
	word32 a1_267
	word32 a2_268
	word32 a3_269
	word32 a4_270
	word32 a5_271
	word32 s2_272
	word32 s3_273
	word32 s4_274
	word32 s5_275
	word32 s6_276
	word32 s7_277
	word32 s10_278
	ef_log_info(ra_43, 0x230784F8<32>, a3_30, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_265, out a0_266, out a1_267, out a2_268, out a3_269, out a4_270, out a5_271, out s2_272, out s3_273, out s4_274, out s5_275, out s6_276, out s7_277, out s10_278)
	word32 a0_279
	word32 a1_280
	word32 a2_281
	word32 a4_282
	word32 a5_283
	word32 s4_284
	word32 s8_285
	puts(0x2307852C<32>, out a0_279, out a1_280, out a2_281, out a4_282, out a5_283, out s4_284, out s8_285)
l23031E62:


word32 ef_calc_crc32(word32 a0, word32 a1, word32 a2, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      update_env_cache
//      read_env
//      find_env
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
ef_calc_crc32_entry:
l23031EC0:
	word32 a0_15 = ~a0
	word32 a2_8 = a2 + a1
l23031ECE:
	branch a1 != a2_8 l23031ED8
l23031ED8:
	a1 = a1 + 1<32>
	a5 = Mem0[(((CONVERT(Mem0[a1 + -1<i32>:byte], byte, word32) ^ a0_15) & 255<i32>) << 2<i32>) + 0x230785E0<32>:word32]
	a0_15 = a0_15 >>u 8<i32> ^ a5
l23031ED2:
	a2Out = a2_8
	a4Out = 0x230785E0<32>
	a5Out = a5
	return ~a0_15
ef_calc_crc32_exit:


word32 xEventGroupCreateStatic(word32 a0, word32 a4, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_mgr_queue
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a4 a5 s0
// Trashed: a2 a4 a5 s0 s8 t3
// Preserved: a0 sp
xEventGroupCreateStatic_entry:
l23031EF0:
	word32 a5_14
	branch a0 == 0<32> l23031F26
l23031F26:
	word32 a5_56
	user_vAssertCalled(a4, mstatus, out a5_56)
	a5_14 = 32<i32>
	branch a4 == 32<i32> l23031F16
l23031F36:
	user_vAssertCalled(a4, mstatus, out a5_14)
l23031EFA:
	branch a4 != 32<i32> l23031F20
l23031F20:
	word32 a5_57
	user_vAssertCalled(a4, mstatus, out a5_57)
l23031F06:
	Mem25[a0:word32] = 0<32>
	a4 = vListInitialise(a0 + 4<i32>)
	Mem30[a0 + 28<i32>:byte] = 1<8>
	a5_14 = 1<32>
l23031F16:
	a4Out = a4
	a5Out = a5_14
	return a0
xEventGroupCreateStatic_exit:


word32 xEventGroupWaitBits(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg0128, word32 dwArg0168, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_mgr_queue
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0018:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
xEventGroupWaitBits_entry:
l23031F3C:
	word32 s3_146 = a4
	branch a0 == 0<32> l23032010
l23032010:
	word32 a5_467
	user_vAssertCalled(a4, mstatus, out a5_467)
l23031F58:
	word32 a3_165
	word32 a5_167
	word32 a4_160
	word32 s0_201
	word32 s0_229
	word32 a4_114
	word32 a5_203
	branch (a1 & 0xFF000000<32>) != 0<32> l23031FA0
l23031F60:
	branch a1 == 0<32> l23031FA0
l23031FA0:
	word32 a5_468
	user_vAssertCalled(a4, mstatus, out a5_468)
	word32 a5_469
	branch xTaskGetSchedulerState(out a5_469) != 0<32> l23031F68
l23031FAA:
l23031F62:
	word32 a5_470
	branch xTaskGetSchedulerState(out a5_470) == 0<32> l23031FE8
l23031FE8:
	branch a4 == 0<32> l23031F68
l23031FEC:
	word32 a5_490
	user_vAssertCalled(a4, mstatus, out a5_490)
	word32 a5_491
	a4_114 = vTaskSuspendAll(a4, out a5_491)
	s0_229 = Mem17[a0:int32]
	a5_203 = a1 & s0_229
	branch a3 != 0<32> l23031FAC
l23032000:
l23031F68:
	word32 a5_471
	a4_114 = vTaskSuspendAll(a4, out a5_471)
	s0_229 = Mem17[a0:int32]
	a5_203 = a1 & s0_229
	branch a3 != 0<32> l23031FAC
l23031FAC:
	branch a1 == a5_203 l23031F7A
l23031F78:
	branch a5_203 == 0<32> l23031FB0
l23031FB0:
	branch a4 == 0<32> l23032002
l23031FB4:
	word32 a1_89 = CONVERT(a2 != 0<32>, bool, word32)
	word32 a1_90 = a1_89 << 24<i32>
	branch a3 != 0<32> l23032008
l23032008:
	a1_90 = a1_89 << 24<i32> | 0x4000000<32>
l23031FBE:
	word32 a5_141
	word32 s2_145
	word32 s1_155
	word32 s4_156
	word32 a3_159
	word32 s0_484
	word32 a5_486
	word32 a2_485
	word32 a6_487
	word32 t3_488
	word32 a0_150
	xTaskResumeAll(a3, vTaskPlaceOnUnorderedEventList(a0 + 4<i32>, a1_90 | a1, a4, a3, a4_114, mstatus, dwLoc0C, dwArg18, out a5_141, out s2_145, out s3_146), a5_141, mstatus, dwArg0128, dwArg0168, out s0_484, out s1_155, out a0_150, out a2_485, out a3_159, out a4_160, out a5_486, out a6_487, out s4_156, out t3_488)
	branch a0_150 != 0<32> l23031FD4
l23031FD0:
	__syscall()
l23031FD4:
	a3_165 = uxTaskResetEventItemValue(a3_159, a4_160)
	a5_167 = a0_150 << 6<u32>
	branch a0_150 << 6<u32> >= 0<32> l23032016
l23032016:
	word32 a5_489
	vTaskEnterCritical(a4_160, mstatus, out a5_489)
	a0_150 = Mem17[s2_145:int32]
	word32 a5_175 = s1_155 & a0_150
	branch s4_156 != 0<32> l23032040
l23032040:
	branch s1_155 != a5_175 l23032036
l23032044:
l23032026:
	branch a5_175 == 0<32> l23032036
l23032028:
	branch a2 == 0<32> l23032036
l2303202C:
	Mem185[s2_145:word32] = ~s1_155 & a0_150
l23032036:
	a3_165 = vTaskExitCritical(a3_165, mstatus, out a4_160, out a5_167)
l23031FE0:
	s0_201 = CONVERT(SLICE(a0_150, word24, 0), word24, word32)
l23031F7A:
	branch a2 == 0<32> l23032002
l23032002:
	word32 s1_472
	word32 a0_473
	word32 s4_476
	word32 a2_474
	word32 t3_477
	word32 a6_475
	xTaskResumeAll(a3, a4_114, a5_203, mstatus, dwArg0128, dwArg0168, out s0_201, out s1_472, out a0_473, out a2_474, out a3_165, out a4_160, out a5_167, out a6_475, out s4_476, out t3_477)
l23031F7E:
	Mem234[a0:word32] = ~a1 & s0_229
	word32 s1_478
	word32 t3_483
	word32 a0_479
	word32 s4_482
	word32 a2_480
	word32 a6_481
	xTaskResumeAll(a3, a4_114, a5_203, mstatus, dwArg0128, dwArg0168, out s0_201, out s1_478, out a0_479, out a2_480, out a3_165, out a4_160, out a5_167, out a6_481, out s4_482, out t3_483)
l23031F8C:
	0<32> = dwArg0128
	a2Out = dwArg0100
	a3Out = a3_165
	a4Out = a4_160
	a5Out = a5_167
	s3Out = s3_146
	return s0_201
xEventGroupWaitBits_exit:


word32 xEventGroupSetBits(word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_complete.isra.1
//      cmd_mgr_drain
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
xEventGroupSetBits_entry:
l23032046:
	word32 s2_156 = a1
	branch a0 == 0<32> l230320EE
l230320EE:
	word32 a5_270
	user_vAssertCalled(a4, mstatus, out a5_270)
l2303205C:
	branch (a1 & 0xFF000000<32>) != 0<32> l230320E8
l230320E8:
	word32 a5_271
	user_vAssertCalled(a4, mstatus, out a5_271)
l23032066:
	word32 s1_101
	word32 a5_119
	word32 a4_126 = vTaskSuspendAll(a4, out a5_119)
	word32 s1_44 = Mem17[s0 + 16<i32>:word32]
	word32 a3_110 = a1 | a3
	Mem48[a3_110:word32] = s1_44
	s1_101 = s1_44
	branch s1_44 + 12<i32> == s0 l230320C4
l2303207C:
	word32 s5_106 = 0<32>
	s2_156 = 0xFFFFFF<32>
	word32 s4_155 = 0x2000000<32>
	s1_101 = s1_44
l23032088:
	word32 a2_61 = a4_126 & s2_156
	word32 a1_59 = a3_110 | s4_155
	a5_119 = a4_126 << 5<u32>
	word32 a6_63 = a2_61 & a3_110
	word32 s0_105 = Mem48[Mem48[a4_126:word32] + 4<i32>:word32]
	branch a5_119 < 0<32> l230320DE
l230320DE:
	branch a2_61 == a6_63 l230320A6
l230320E2:
	branch s1_44 + 12<i32> != s0_105 l23032088
l230320E6:
l230320A2:
	branch a6_63 == 0<32> l230320B8
l230320A6:
	branch a4_126 << 7<u32> >= 0<32> l230320B2
l230320AE:
	s5_106 = s5_106 | a2_61
l230320B2:
	word32 s1_278
	word32 a0_279
	word32 a2_280
	s0_105 = vTaskRemoveFromUnorderedEventList(s0_105, a1_59, a2_61, a3_110, a4_126, mstatus, dwArg04, dwArg24, out s1_278, out a0_279, out a2_280, out a3_110, out a4_126, out a5_119, out s2_156, out s4_155)
	s1_101 = Mem48[a3_110:word32]
l230320B8:
	branch s1_44 + 12<i32> != s0_105 l23032088
l230320BC:
	a3_110 = a3_110 & ~s5_106
l230320C4:
	Mem118[a3_110:word32] = s1_101
	word32 a0_134
	word32 a5_136
	word32 a3_143
	word32 a4_144
	word32 s4_276
	word32 t3_277
	word32 s0_272
	word32 s1_273
	word32 a2_274
	word32 a6_275
	xTaskResumeAll(a3_110, a4_126, a5_119, mstatus, dwArg0138, dwArg0178, out s0_272, out s1_273, out a0_134, out a2_274, out a3_143, out a4_144, out a5_136, out a6_275, out s4_276, out t3_277)
	s1Out = Mem118[a0_134:word32]
	a0Out = a0_134
	a3Out = a3_143
	a4Out = a4_144
	a5Out = a5_136
	s2Out = s2_156
	s3Out = s1_44 + 12<i32>
	s4Out = dwArg04
	return s1
xEventGroupSetBits_exit:


void vEventGroupDelete(word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg34, word32 dwArg0148, word32 dwArg0158, word32 dwArg0188, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_mgr_queue
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3 tp
// Preserved: sp
vEventGroupDelete_entry:
l230320F4:
	word32 a5_14
	word32 a4_13 = vTaskSuspendAll(a4, out a5_14)
	word32 s0_15 = Mem11[a5_14 + 4<i32>:word32]
	word32 s1_16 = s0_15 + 12<i32>
	branch a5_14 != 0<32> l23032118
l23032118:
	word32 s0_19 = Mem11[a0 + 16<i32>:word32]
	branch a0 != s1_16 l2303210C
l2303210C:
	word32 a5_32
	word32 s4_160
	word32 s2_159
	vTaskRemoveFromUnorderedEventList(s0_19, 0x2000000<32>, a2, a3, a4_13, mstatus, dwArg14, dwArg34, out s1_16, out a0, out a2, out a3, out a4_13, out a5_32, out s2_159, out s4_160)
	s0_15 = Mem11[a5_32 + 4<i32>:word32]
	branch a5_32 == 0<32> l23032130
l2303211E:
	word32 a5_50
	word32 a5_161
	word32 s2_162
	word32 s4_163
	vTaskRemoveFromUnorderedEventList(Mem11[a0 + 16<i32>:word32], 0x2000000<32>, user_vAssertCalled(a4_13, mstatus, out a5_161), a3, a4_13, mstatus, dwArg14, dwArg34, out s1_16, out a0, out a2, out a3, out a4_13, out a5_50, out s2_162, out s4_163)
	s0_15 = Mem11[a5_50 + 4<i32>:word32]
	branch a5_50 != 0<32> l23032118
l2303210A:
l23032130:
	word32 a5_61 = CONVERT(Mem11[s0_15 + 28<i32>:byte], byte, word32)
	branch a5_61 == 0<32> l23032142
l23032142:
	word32 a3_69
	word32 a4_70
	word32 a5_71
	word32 s0_164
	word32 s1_165
	word32 a0_166
	word32 a1_167
	word32 a2_168
	word32 a6_169
	word32 s4_170
	word32 t3_171
	vPortFree(s0_15, a2, a5_61, mstatus, dwArg0148, dwArg0188, out s0_164, out s1_165, out a0_166, out a1_167, out a2_168, out a3_69, out a4_70, out a5_71, out a6_169, out s4_170, out t3_171)
l23032150_thunk_xTaskResumeAll:
	word32 s0_182
	word32 s1_183
	word32 a0_184
	word32 a2_185
	word32 a3_186
	word32 a4_187
	word32 a5_188
	word32 a6_189
	word32 s4_190
	word32 t3_191
	xTaskResumeAll(a3_69, a4_70, a5_71, mstatus, dwArg0158, dwArg0198, out s0_182, out s1_183, out a0_184, out a2_185, out a3_186, out a4_187, out a5_188, out a6_189, out s4_190, out t3_191)
	return
l23032136:
l2303213E_thunk_xTaskResumeAll:
	word32 s0_172
	word32 s1_173
	word32 a0_174
	word32 a2_175
	word32 a3_176
	word32 a4_177
	word32 a5_178
	word32 a6_179
	word32 s4_180
	word32 t3_181
	xTaskResumeAll(a3, a4_13, a5_61, mstatus, dwArg0158, dwArg0198, out s0_172, out s1_173, out a0_174, out a2_175, out a3_176, out a4_177, out a5_178, out a6_179, out s4_180, out t3_181)
	return
vEventGroupDelete_exit:


word32 vListInitialise(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupCreateStatic
//      xQueueGenericReset
//      prvAddNewTaskToReadyList
//      prvCheckForValidListAndQueue
// MayUse:  a0:[0..31]
// LiveOut: a4
// Trashed: a4 a5
// Preserved: sp
vListInitialise_entry:
l23032154:
	Mem6[a0 + 12<i32>:word32] = a0
	Mem7[7<32>:word32] = a0
	Mem8[a0 + 20<i32>:word32] = a0
	Mem9[a0 + 24<i32>:word32] = a0
	Mem10[a0:word32] = 0<32>
	return 0xFFFFFFFF<32>
vListInitialise_exit:


void vListInitialiseItem(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvInitialiseNewTask.isra.2
//      xTimerCreate
//      xTimerCreateStatic
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
vListInitialiseItem_entry:
l23032168:
	Mem4[a0 + 16<i32>:word32] = 0<32>
	return
vListInitialiseItem_exit:


word32 vListInsertEnd(word32 a1, word32 a4, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvAddNewTaskToReadyList
//      vTaskDelete
//      xTaskIncrementTick
//      xTaskResumeAll
//      vTaskPlaceOnEventList
//      vTaskPlaceOnUnorderedEventList
//      vTaskPlaceOnEventListRestricted
//      xTaskRemoveFromEventList
//      vTaskRemoveFromUnorderedEventList
//      xTaskPriorityInherit
//      xTaskPriorityDisinherit
//      vTaskPriorityDisinheritAfterTimeout
//      xTaskGenericNotifyFromISR
//      vTaskNotifyGiveFromISR
//      bloop_evt_set_async
// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
vListInsertEnd_entry:
l2303216E:
	word32 a0_5 = Mem0[a5 + 4<i32>:word32]
	Mem7[a5 + 4<i32>:word32] = a1
	word32 a5_9 = Mem7[a4 + 8<i32>:word32]
	Mem10[a4 + 8<i32>:word32] = a1
	Mem11[a1 + 4<i32>:word32] = a4
	Mem12[a1 + 8<i32>:word32] = a5_9
	Mem13[a0_5 + 16<i32>:word32] = a1
	word32 a0_14 = Mem13[a5_9:word32]
	Mem16[a5_9 + 1<32>:word32] = a0_14
	a5Out = a5_9 + 1<32>
	return a0_14
vListInsertEnd_exit:


word32 vListInsert(word32 a0, word32 a2, word32 a3, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskPlaceOnEventList
//      prvInsertTimerInActiveList
//      prvSwitchTimerLists
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
vListInsert_entry:
l23032184:
	word32 a4_11
	word32 a1_5 = Mem0[a2:word32]
	word32 a5_13 = 0xFFFFFFFF<32>
	branch a2 != 0xFFFFFFFF<32> l23032194
l23032194:
	a4_11 = Mem0[a5_13 + 4<i32>:word32]
	a5_13 = Mem0[a3:word32]
	branch a2 >=u a3 l23032192
l23032192:
l23032190:
l230321AE:
	a0 = Mem0[a0 + 24<i32>:word32]
	a4_11 = Mem0[3<32>:word32]
l2303219C:
	Mem21[a5_13 + 4<i32>:word32] = a1_5
	Mem22[a1_5 + 8<i32>:word32] = a5_13
	Mem24[a4_11 + 8<i32>:word32] = a1_5
	Mem25[a1_5 + 4<i32>:word32] = a4_11
	Mem28[a0 + 16<i32>:word32] = a1_5
	word32 a0_29 = Mem28[a5_13:word32]
	word32 a5_30 = a5_13 + 1<32>
	Mem31[a5_30:word32] = a0_29
	a4Out = a4_11
	a5Out = a5_30
	return a0_29
vListInsert_exit:


word32 uxListRemove(word32 a3, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvIdleTask
//      vTaskDelete
//      xTaskIncrementTick
//      xTaskResumeAll
//      vTaskPlaceOnEventList
//      xTaskRemoveFromEventList
//      vTaskRemoveFromUnorderedEventList
//      xTaskPriorityInherit
//      xTaskPriorityDisinherit
//      vTaskPriorityDisinheritAfterTimeout
//      xTaskGenericNotifyFromISR
//      vTaskNotifyGiveFromISR
//      prvSwitchTimerLists
//      prvTimerTask
//      bloop_evt_set_async
// MayUse:  a3:[0..31] a4:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
uxListRemove_entry:
l230321B4:
	Mem10[a4 + 8<i32>:word32] = a3
	word32 a0_11 = Mem10[a3 + 4<i32>:word32]
	Mem12[a3 + 4<i32>:word32] = a4
	word32 a5_13 = Mem12[a4 + 4<i32>:word32]
	branch a4 == a0_11 l230321D4
l230321D4:
	word32 a0_14 = Mem12[a4 + 8<i32>:word32]
	Mem15[a4 + 4<i32>:word32] = a5_13
	Mem16[a0_14 + 16<i32>:word32] = 0<32>
	Mem19[a4 + 0xFFFFFFFF<32>:word32] = Mem16[a4:word32]
	word32 a5_20 = Mem19[a0_14:word32]
	a4Out = <invalid>
	a5Out = a5_20
	return a0_14
l230321C6:
	Mem21[a0_11 + 16<i32>:word32] = 0<32>
	Mem24[a4 + 0xFFFFFFFF<32>:word32] = Mem21[a4:word32]
	word32 a5_25 = Mem24[a0_11:word32]
	a4Out = <invalid>
	a5Out = a5_25
	return a0_11
uxListRemove_exit:


word32 prvCopyDataToQueue(word32 s1, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueGenericSendFromISR
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
prvCopyDataToQueue_entry:
l230321E6:
	word32 a0_126
	word32 a0_14 = Mem11[s1 + 56<i32>:word32]
	word32 s0_102 = a0_14
	branch a5 != 0<32> l2303220E
l2303220E:
	s2 = a2
	branch a2 != 0<32> l2303223E
l2303223E:
	word32 a4_21
	word32 a5_22
	word32 a6_186
	word32 a2_185
	a1 = memcpy(Mem11[a0_14 + 12<i32>:word32], a1, a5, out a2_185, out a3, out a4_21, out a5_22, out a6_186, out a7)
	a4 = 0<32> - a4_21
	s0_102 = Mem11[a3:word32]
	word32 a5_38 = a5_22 + a4
	Mem39[a5_38 + 12<i32>:word32] = s0_102
	branch a5_38 >=u a3 l2303225E
l23032258:
	s0_102 = Mem39[a5_38 + 8<i32>:word32]
	a4 = a4 + a5_38
	Mem42[a4 + 12<i32>:word32] = s0_102
l2303225E:
	a5 = 2<32>
	branch a2 == 2<32> l23032282
l23032282:
	a0_126 = 0<32>
	branch s1 != 0<32> l23032200
l23032286:
	s1 = 1<32>
l23032264:
	Mem50[s1 + 0x39<32>:word32] = s0_102
	0<32> = dwArg38
	a0Out = 0<32>
	a1Out = a1
	a2Out = <invalid>
	a3Out = a3
	a4Out = a4
	a5Out = 2<32>
	a7Out = a7
	s2Out = a2
	return s1 + 1<32>
l23032212:
	word32 a5_61
	word32 a2_187
	word32 a6_188
	a1 = memcpy(Mem11[a0_14 + 4<i32>:word32], a1, a5, out a2_187, out a3, out a4, out a5_61, out a6_188, out a7)
	s0_102 = Mem11[a4 + 8<i32>:word32]
	a5 = a5_61 + a3
	Mem78[a5 + 4<i32>:word32] = s0_102
	s1 = s1 + 1<32>
	a0_126 = 0<32>
	branch a5 <u a4 l23032200
l2303222C:
	word32 s0_79 = Mem78[a5:word32]
	Mem80[s1 + 0x39<32>:word32] = s0_79
	Mem81[a5 + 4<i32>:word32] = s0_79
	0<32> = dwArg38
	a0Out = 0<32>
	a1Out = a1
	a2Out = <invalid>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = a2
	return s1 + 1<32>
l230321F8:
	s1 = s1 + 1<32>
	a0_126 = 0<32>
	branch a5 == 0<32> l23032276
l23032276:
	s0_102 = Mem11[8<32>:word32]
	s1 = xTaskPriorityDisinherit(0<32>, a1, a3, a4, mstatus, out a0_126, out a1, out a4, out a5)
	Mem101[s0_102 + 8<i32>:word32] = 0<32>
l23032200:
	Mem104[s1 + 56<i32>:word32] = s0_102
	0<32> = dwArg38
	a0Out = a0_126
	a1Out = a1
	a2Out = <invalid>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = s2
	return s1
prvCopyDataToQueue_exit:


word32 prvCopyDataFromQueue(word32 a1, word32 a2, word32 a4, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueReceive
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
prvCopyDataFromQueue_entry:
l2303228A:
	branch a2 == 0<32> l230322A6
l230322A6:
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a1
	return a1
l23032290:
	word32 a1_11 = a1 + a2
	Mem12[a1_11 + 12<i32>:word32] = Mem0[a4 + 8<i32>:word32]
	branch a1_11 <u a4 l230322A0
l2303229C:
	Mem14[a1_11 + 12<i32>:word32] = Mem12[a1_11:word32]
l230322A0:
l230322A2_thunk_memcpy:
	word32 a4_19
	word32 a5_20
	word32 a2_23
	word32 a3_24
	word32 a6_61
	word32 a7_62
	word32 a1_22 = memcpy(a1, a1_11, a2, out a2_23, out a3_24, out a4_19, out a5_20, out a6_61, out a7_62)
	a2Out = a2_23
	a3Out = a3_24
	a4Out = a4_19
	a5Out = a5_20
	return a1_22
prvCopyDataFromQueue_exit:


word32 prvUnlockQueue(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg38, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      vQueueWaitForMessageRestricted
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a2 a3 a4 a5 s1 tp
// Preserved: a0 a1 s0 s2 sp
prvUnlockQueue_entry:
l230322A8:
	word32 a5_16
	word32 a4_123 = vTaskEnterCritical(a4, mstatus, out a5_16)
	word32 s1_100 = a0
	word32 s0_122 = CONVERT(SLICE(CONVERT(Mem13[a0 + 69<i32>:byte], byte, word32), byte, 0), byte, int32)
	branch s0_122 <= 0<32> l230322FA
l230322C4:
	s1_100 = Mem13[a5_16 + 36<i32>:word32]
	branch a5_16 == 0<32> l230322FA
l230322C8:
l230322E0:
	word32 a0_31
	word32 a5_176
	s1_100 = xTaskRemoveFromEventList(s0_122, a1, a2, a3, a4_123, mstatus, out a0_31, out a1, out a2, out a3, out a4_123, out a5_176)
	branch a0_31 == 0<32> l230322CE
l230322CE:
	word32 s0_39 = s0_122 + 0xFFFFFFFF<32>
	s0_122 = CONVERT(SLICE(s0_39 & 255<i32>, byte, 0), byte, int32)
	branch (s0_39 & 255<i32>) == 0<32> l230322FA
l230322E8:
	word32 s0_43 = s0_122 + 0xFFFFFFFF<32>
	a4_123 = vTaskMissedYield()
	s0_122 = CONVERT(SLICE(s0_43 & 255<i32>, byte, 0), byte, int32)
	branch (s0_43 & 255<i32>) != 0<32> l230322DC
l230322DC:
	word32 a5_49 = s0_122 + 0xFFFFFFFF<32> & 255<i32>
	s1_100 = Mem13[a5_49 + 36<i32>:word32]
	branch a5_49 == 0<32> l230322FA
l230322FA:
	Mem55[s1_100 + 69<i32>:byte] = 0xFF<8>
	word32 a4_63
	word32 a5_175
	word32 a3_114 = vTaskExitCritical(a3, mstatus, out a4_63, out a5_175)
	word32 a5_64
	word32 a4_130 = vTaskEnterCritical(a4_63, mstatus, out a5_64)
	word32 s0_129 = CONVERT(SLICE(CONVERT(Mem55[s1_100 + 68<i32>:byte], byte, word32), byte, 0), byte, int32)
	branch s0_129 <= 0<32> l2303234A
l23032314:
	s1_100 = Mem55[a5_64 + 16<i32>:word32]
	branch a5_64 == 0<32> l2303234A
l23032318:
l23032330:
	word32 a0_79
	word32 a5_177
	s1_100 = xTaskRemoveFromEventList(s0_129, a1, a2, a3_114, a4_130, mstatus, out a0_79, out a1, out a2, out a3_114, out a4_130, out a5_177)
	branch a0_79 == 0<32> l2303231E
l2303231E:
	word32 s0_87 = s0_129 + 0xFFFFFFFF<32>
	s0_129 = CONVERT(SLICE(s0_87 & 255<i32>, byte, 0), byte, int32)
	branch (s0_87 & 255<i32>) == 0<32> l2303234A
l23032338:
	word32 s0_91 = s0_129 + 0xFFFFFFFF<32>
	a4_130 = vTaskMissedYield()
	s0_129 = CONVERT(SLICE(s0_91 & 255<i32>, byte, 0), byte, int32)
	branch (s0_91 & 255<i32>) != 0<32> l2303232C
l2303232C:
	word32 a5_97 = s0_129 + 0xFFFFFFFF<32> & 255<i32>
	s1_100 = Mem55[a5_97 + 16<i32>:word32]
	branch a5_97 == 0<32> l2303234A
l2303234A:
	Mem103[s1_100 + 68<i32>:byte] = 0xFF<8>
	0<32> = dwArg38
l2303235A_thunk_vTaskExitCritical:
	word32 a5_118
	word32 a4_120
	word32 a3_119 = vTaskExitCritical(a3_114, mstatus, out a4_120, out a5_118)
	a4Out = a4_120
	a5Out = a5_118
	return a3_119
prvUnlockQueue_exit:


word32 xQueueGenericReset(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericCreateStatic
//      xQueueGenericCreate
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a1 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
xQueueGenericReset_entry:
l2303235E:
	word32 s1_106 = a1
	branch a0 == 0<32> l230323EA
l230323EA:
	word32 a5_113
	user_vAssertCalled(a4, mstatus, out a5_113)
l2303236C:
	word32 a5_20
	word32 a4_21 = vTaskEnterCritical(a4, mstatus, out a5_20)
	word32 s0_27 = Mem9[a4_21:word32]
	Mem28[s0_27 + 56<i32>:word32] = 0<32>
	Mem31[s0_27 + 68<i32>:byte] = 0xFF<8>
	Mem32[a4_21 + 4<i32>:word32] = s0_27
	Mem33[s0_27 + 69<i32>:byte] = 0xFF<8>
	word32 a5_29 = a3 + a5_20
	word32 a3_34 = a5_29 - a3
	word32 a5_35 = a5_29 + a4_21
	Mem37[a5_35 + 8<i32>:word32] = s0_27
	word32 a4_36 = a4_21 + a3_34
	Mem38[a4_36 + 12<i32>:word32] = s0_27
	branch a1 != 0<32> l230323CA
l230323CA:
	vListInitialise(s0_27 + 16<i32>)
	vListInitialise(s0_27 + 36<i32>)
	word32 a5_46
	word32 a4_48
	word32 a3_47 = vTaskExitCritical(a3_34, mstatus, out a4_48, out a5_46)
	a1Out = a1
	a3Out = a3_47
	a4Out = a4_48
	a5Out = a5_46
	return a1
l23032398:
	word32 s0_55 = Mem38[a5_35 + 16<i32>:word32]
	branch a5_35 != 0<32> l230323AC
l230323AC:
	word32 a0_58
	word32 a2_114
	word32 a4_115
	word32 a5_116
	s1_106 = xTaskRemoveFromEventList(s0_55, a1, 0xFFFFFFFF<32>, a3_34, a4_36, mstatus, out a0_58, out a1, out a2_114, out a3_34, out a4_115, out a5_116)
	branch a0_58 == 0<32> l2303239C
l230323B6:
	__syscall()
	word32 a5_66
	word32 a4_68
	word32 a3_67 = vTaskExitCritical(a3_34, mstatus, out a4_68, out a5_66)
	a1Out = a1
	a3Out = a3_67
	a4Out = a4_68
	a5Out = a5_66
	return s1_106
l2303239C:
	word32 a5_76
	word32 a4_78
	word32 a3_77 = vTaskExitCritical(a3_34, mstatus, out a4_78, out a5_76)
	a1Out = a1
	a3Out = a3_77
	a4Out = a4_78
	a5Out = a5_76
	return s1_106
xQueueGenericReset_exit:


word32 xQueueGenericCreateStatic(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __bl_ble_sync_task
//      pro_trans_init
//      xQueueCreateMutexStatic
//      prvCheckForValidListAndQueue
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
xQueueGenericCreateStatic_entry:
l230323F0:
	word32 s1_100 = a1
	word32 s2_198 = a2
	branch a0 == 0<32> l2303245A
l2303245A:
	word32 a5_210
	user_vAssertCalled(a4, mstatus, out a5_210)
	branch a3 != 0<32> l2303240C
l23032460:
l2303240A:
	branch a3 == 0<32> l2303246A
l2303246A:
	word32 a5_211
	user_vAssertCalled(a4, mstatus, out a5_211)
l2303240C:
	branch a2 == 0<32> l23032462
l23032462:
	branch a1 == 0<32> l23032412
l23032410:
	branch a1 == 0<32> l23032464
l23032464:
	word32 a5_212
	user_vAssertCalled(a4, mstatus, out a5_212)
l23032412:
	word32 a5_195 = 80<i32>
	branch a4 == 80<i32> l23032422
l2303241E:
	user_vAssertCalled(a4, mstatus, out a5_195)
l23032422:
	word32 a3_193
	word32 a4_194
	a4_194 = a4
	a3_193 = a3
	branch a3 == 0<32> l23032444
l23032426:
	Mem63[a3 + 70<i32>:byte] = 1<8>
	branch a1 == 0<32> l23032456
l23032456:
	s2_198 = a3
l2303242E:
	Mem73[a3:word32] = s2_198
	Mem80[a3 + 60<i32>:word32] = a0
	Mem82[a1 + 64<i32>:word32] = a3
	word32 a1_213
	s1_100 = xQueueGenericReset(a3, 1<32>, a3, a4, mstatus, out a1_213, out a3_193, out a4_194, out a5_195)
	Mem109[a3 + 76<i32>:byte] = SLICE(a4, byte, 0)
l23032444:
	0<32> = dwArg0128
	s1Out = s1_100
	a0Out = a3
	a2Out = dwArg0100
	a3Out = a3_193
	a4Out = a4_194
	a5Out = a5_195
	s2Out = s2_198
	s3Out = a0
	s4Out = a4
	return dwArgE4
xQueueGenericCreateStatic_exit:


word32 xQueueGenericCreate(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_controller_init
//      k_queue_init
//      xQueueCreateCountingSemaphore
//      xQueueCreateMutex
//      sys_mbox_new
//      sys_sem_new
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
xQueueGenericCreate_entry:
l23032470:
	branch a0 == 0<32> l230324D8
l230324D8:
	user_vAssertCalled(a4, mstatus, out a5)
l23032484:
	word32 a1_149
	word32 a3_152
	word32 a4_154
	word32 a5_156
	word32 s1_160
	word32 s2_162
	word32 s3_103
	word32 s0_51
	branch a1 == 0<32> l230324A4
l230324A4:
	word32 a0_36
	word32 a2_181
	word32 a6_182
	word32 s4_183
	word32 s8_184
	pvPortMalloc(ra, a0, 80<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_160, out a0_36, out a1_149, out a2_181, out a3_152, out a4_154, out a5_156, out a6_182, out s2_162, out s3_103, out s4_183, out s8_184)
	s0_51 = a0_36
	branch a0_36 == 0<32> l230324DE
l230324B0:
	Mem52[a0_36 + 70<i32>:byte] = 0<8>
	Mem53[a0_36:word32] = a0_36
l23032488:
	word32 a0_56
	word32 a2_185
	word32 a6_186
	word32 s4_187
	word32 s8_188
	pvPortMalloc(ra, a0, a0 + a1 + 80<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_160, out a0_56, out a1_149, out a2_185, out a3_152, out a4_154, out a5_156, out a6_186, out s2_162, out s3_103, out s4_187, out s8_188)
	s0_51 = a0_56
	branch a0_56 == 0<32> l230324DE
l230324DE:
	s1Out = s1_160
	a0Out = 0<32>
	a1Out = a1_149
	a2Out = <invalid>
	a3Out = a3_152
	a4Out = a4_154
	a5Out = a5_156
	s2Out = s2_162
	s3Out = s3_103
	s4Out = <invalid>
	return 0<32>
l23032498:
	Mem83[a0_56 + 70<i32>:byte] = 0<8>
	Mem84[a0_56 + 80<i32>:word32] = a0_56
l230324B6:
	Mem87[s1_160 + 60<i32>:word32] = s0_51
	Mem89[s0_51 + 64<i32>:word32] = s2_162
	word32 a3_97
	word32 a4_98
	word32 a5_99
	word32 a1_102
	word32 s1_100 = xQueueGenericReset(s0_51, 1<32>, a3_152, a4_154, mstatus, out a1_102, out a3_97, out a4_98, out a5_99)
	Mem104[s0_51 + 76<i32>:byte] = SLICE(s3_103, byte, 0)
	s1Out = s1_100
	a0Out = s0_51
	a1Out = a1_102
	a2Out = <invalid>
	a3Out = a3_97
	a4Out = a4_98
	a5Out = a5_99
	s2Out = s2_162
	s3Out = s3_103
	s4Out = <invalid>
	return s0_51
xQueueGenericCreate_exit:


word32 xQueueCreateCountingSemaphore(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_sem_new
//      k_sem_init
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a3 a4 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
xQueueCreateCountingSemaphore_entry:
l230324F0:
	branch a0 == 0<32> l23032512
l23032512:
	user_vAssertCalled(a4, mstatus, out a5)
	branch a0 >=u a1 l230324FE
l230324FA:
	branch a0 <u a1 l2303251E
l2303251E:
	user_vAssertCalled(a4, mstatus, out a5)
l230324FE:
	word32 a0_39
	word32 a1_40
	word32 a3_42
	word32 a4_43
	word32 s1_47
	word32 s2_48
	word32 s3_49
	word32 s4_50
	word32 a2_105
	word32 a5_106
	word32 s0_46 = xQueueGenericCreate(ra, a0, 0<32>, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out s1_47, out a0_39, out a1_40, out a2_105, out a3_42, out a4_43, out a5_106, out s2_48, out s3_49, out s4_50)
	branch a0_39 == 0<32> l2303250A
l23032508:
	Mem54[s0_46 + 56<i32>:word32] = a0_39
l2303250A:
	s1Out = s1_47
	a0Out = a0_39
	a1Out = a1_40
	a3Out = a3_42
	a4Out = a4_43
	s2Out = s2_48
	s3Out = s3_49
	s4Out = s4_50
	s8Out = dwLoc1C
	return s0_46
xQueueCreateCountingSemaphore_exit:


word32 xQueueGenericSend(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_open
//      aos_close
//      aos_stat
//      aos_opendir
//      aos_closedir
//      aos_mutex_unlock
//      aos_sem_signal
//      cmd_mgr_print
//      cmd_mgr_msgind
//      cmd_mgr_llind
//      cmd_mgr_queue
//      cmd_mgr_drain
//      rw_main_task_post
//      k_queue_insert
//      k_sem_give
//      wifi_state_get_cb
//      write_data
//      pro_trans_ack
//      ef_port_env_unlock
//      xQueueCreateMutexStatic
//      xQueueCreateMutex
//      xTimerGenericCommand
//      sys_mbox_post
//      sys_mbox_trypost
//      sys_sem_new
//      sys_mutex_unlock
//      aos_register_driver
//      aos_register_fs
//      bl_sha_mutex_give
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xQueueGenericSend_entry:
l23032528:
	word32 s2_137 = a3
	branch a0 == 0<32> l23032674
l23032674:
	user_vAssertCalled(a4, mstatus, out a5)
l23032546:
	branch a1 == 0<32> l23032652
l23032652:
	branch a5 == 0<32> l2303254A
l23032658:
	word32 a5_675
	user_vAssertCalled(a4, mstatus, out a5_675)
l2303254A:
	branch a3 == 2<32> l23032644
l23032644:
	branch a4 == 1<32> l23032550
l2303264C:
	word32 a5_674
	user_vAssertCalled(a4, mstatus, out a5_674)
l23032550:
	word32 a5_52
	branch xTaskGetSchedulerState(out a5_52) != 0<32> l2303255C
l23032556:
	branch a5_52 != 0<32> l2303267A
l2303267A:
	word32 a5_644
	user_vAssertCalled(a4, mstatus, out a5_644)
l2303255C:
	word32 a1_124
	word32 a5_151
	word32 a4_159
	word32 a3_158
	word32 a0_160
	word32 a5_228
	word32 a4_229 = vTaskEnterCritical(a4, mstatus, out a5_228)
	word32 s0_233 = Mem21[a5_228 + 60<i32>:word32]
	word32 s6_326 = 0<32>
	word32 s3_179 = 2<32>
	word32 s1_105 = 0xFFFFFFFF<32>
	a1_124 = a1
	branch a4_229 <u a5_228 l230325E2
l23032572:
	branch s2_137 == s3_179 l230325E2
l23032576:
	branch a5_228 == 0<32> l2303265E
l2303265E:
	a3_158 = vTaskExitCritical(a3, mstatus, out a4_159, out a5_151)
	a0_160 = 0<32>
l2303257C:
	branch s6_326 == 0<32> l2303262C
l2303262C:
	vTaskInternalSetTimeOutState(fp + -40<i32>)
l23032580:
	word32 a4_93
	word32 a5_645
	word32 a3_92 = vTaskExitCritical(a3, mstatus, out a4_93, out a5_645)
	word32 a5_646
	word32 a5_647
	vTaskEnterCritical(vTaskSuspendAll(a4_93, out a5_646), mstatus, out a5_647)
	branch CONVERT(SLICE(CONVERT(Mem76[s0_233 + 68<i32>:byte], byte, word32), byte, 0), byte, int32) != s1_105 l2303259C
l23032598:
	Mem106[s0_233 + 68<i32>:byte] = 0<8>
l2303259C:
	branch CONVERT(SLICE(CONVERT(Mem108[s0_233 + 69<i32>:byte], byte, word32), byte, 0), byte, int32) != s1_105 l230325AC
l230325A8:
	Mem113[s0_233 + 69<i32>:byte] = 0<8>
l230325AC:
	word32 a5_118
	word32 a4_120
	vTaskExitCritical(a3_92, mstatus, out a4_120, out a5_118)
	a1_124 = fp + -52<i32>
	word32 a0_129
	word32 a2_130
	word32 a3_131
	word32 a4_132
	word32 s4_138
	word32 s1_648
	word32 a5_649
	word32 s0_135 = xTaskCheckForTimeOut(fp + -40<i32>, fp + -52<i32>, dwArgA4, a4_120, a5_118, mstatus, out s1_648, out a0_129, out a2_130, out a3_131, out a4_132, out a5_649, out s2_137, out s4_138)
	branch a0_129 != 0<32> l23032666
l23032666:
	word32 a4_145
	word32 a5_146
	word32 a2_652
	word32 a6_653
	word32 s0_650
	word32 a0_651
	word32 s4_654
	word32 t3_655
	xTaskResumeAll(prvUnlockQueue(s0_135, fp + -52<i32>, a2_130, a3_131, a4_132, mstatus, dwLoc08, out a4_145, out a5_146), a4_145, a5_146, mstatus, dwArg0118, dwArg0158, out s0_650, out s1_105, out a0_651, out a2_652, out a3_158, out a4_159, out a5_151, out a6_653, out s4_654, out t3_655)
	a0_160 = 0<32>
l230325BA:
	word32 a4_200
	word32 a1_171
	word32 a5_161
	word32 a4_162 = vTaskEnterCritical(a4_132, mstatus, out a5_161)
	word32 s0_164 = Mem142[a5_161 + 60<i32>:word32]
	branch a4_162 == a5_161 l2303260C
l2303260C:
	word32 a4_167
	word32 a5_656
	word32 a3_166 = vTaskExitCritical(a3_131, mstatus, out a4_167, out a5_656)
	word32 a2_172
	word32 a4_173
	word32 a4_186
	word32 a5_187
	word32 a0_190
	word32 a6_660
	word32 s4_661
	word32 s0_657
	word32 a2_658
	word32 a5_659
	word32 t3_662
	xTaskResumeAll(prvUnlockQueue(vTaskPlaceOnEventList(s4_138, fp + -52<i32>, dwArg24, a3_166, a4_167, mstatus, dwLoc1C, dwArg08, out a1_171, out a2_172, out a4_173, out s2_137, out s3_179), a1_171, a2_172, a3_166, a4_173, mstatus, dwLoc08, out a4_186, out a5_187), a4_186, a5_187, mstatus, dwArg0118, dwArg0158, out s0_657, out s1_105, out a0_190, out a2_658, out a3, out a4_200, out a5_659, out a6_660, out s4_661, out t3_662)
	a1_124 = a1_171
	branch a0_190 != 0<32> l230325D4
l23032624:
	__syscall()
	a1_124 = a1_171
l230325C6:
	word32 a4_204
	word32 a4_208
	word32 a5_209
	word32 a5_663
	word32 s0_664
	word32 a0_665
	word32 a5_667
	word32 a2_666
	word32 s4_669
	word32 t3_670
	word32 a6_668
	xTaskResumeAll(prvUnlockQueue(s0_164, fp + -52<i32>, a2_130, vTaskExitCritical(a3_131, mstatus, out a4_204, out a5_663), a4_204, mstatus, dwLoc08, out a4_208, out a5_209), a4_208, a5_209, mstatus, dwArg0118, dwArg0158, out s0_664, out s1_105, out a0_665, out a2_666, out a3, out a4_200, out a5_667, out a6_668, out s4_669, out t3_670)
l230325D4:
l230325D6:
	a4_229 = vTaskEnterCritical(a4_200, mstatus, out a5_228)
	s6_326 = 1<32>
	s0_233 = Mem142[a5_228 + 60<i32>:word32]
	branch a4_229 >=u a5_228 l23032572
l230325E2:
	word32 a0_272
	word32 a2_274
	word32 a4_276
	word32 a5_277
	word32 a3_275
	s1_105 = prvCopyDataToQueue(s1_105, a1, s2_137, a3, a4_229, a5_228, mstatus, dwLoc08, out a0_272, out a1_124, out a2_274, out a3_275, out a4_276, out a5_277, out a7, out s2_137)
	word32 s0_289 = Mem271[a5_277 + 36<i32>:word32]
	branch a5_277 != 0<32> l23032634
l23032634:
	word32 a0_291
	word32 a4_672
	word32 a5_673
	word32 a2_671
	s1_105 = xTaskRemoveFromEventList(s0_289, a1_124, a2_274, a3_275, a4_276, mstatus, out a0_291, out a1_124, out a2_671, out a3_275, out a4_672, out a5_673)
	branch a0_291 == 0<32> l230325F2
l230325F0:
	branch a0_272 != 0<32> l2303263E
l2303263E:
	__syscall()
l230325F2:
	a3_158 = vTaskExitCritical(a3_275, mstatus, out a4_159, out a5_151)
	a0_160 = 1<32>
l230325F8:
	0<32> = dwArg0198
	s1Out = s1_105
	a0Out = a0_160
	a1Out = a1_124
	a2Out = dwArg0138
	a3Out = a3_158
	a4Out = a4_159
	a5Out = a5_151
	a7Out = a7
	s2Out = s2_137
	s3Out = s3_179
	s4Out = dwArgF4
	s5Out = a1
	s6Out = s6_326
	s8Out = dwArgD4
	return dwArg0158
xQueueGenericSend_exit:


word32 xQueueCreateMutexStatic(word32 a0, word32 a1, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_init
//      bl_sec_init
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
xQueueCreateMutexStatic_entry:
l23032680:
	word32 a0_16
	word32 a5_18
	word32 a2_112
	word32 s2_113
	word32 s3_114
	word32 s4_115
	word32 a3_28
	word32 a4_29
	word32 s1_20
	xQueueGenericCreateStatic(1<32>, 0<32>, 0<32>, a1, a0, mstatus, dwArg0118, out s1_20, out a0_16, out a2_112, out a3_28, out a4_29, out a5_18, out s2_113, out s3_114, out s4_115)
	word32 s0_30 = a0_16
	branch a0_16 == 0<32> l230326AE
l23032698:
	Mem31[a0_16 + 8<i32>:word32] = 0<32>
	Mem32[a0_16:word32] = 0<32>
	Mem33[a0_16 + 12<i32>:word32] = 0<32>
	word32 a0_116
	word32 a1_117
	word32 a2_118
	word32 a5_119
	word32 a7_120
	word32 s2_121
	word32 s3_122
	word32 s4_123
	word32 s5_124
	word32 s6_125
	word32 s8_126
	s0_30 = xQueueGenericSend(a0_16, 0<32>, 0<32>, a4_29, a5_18, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_20, out a0_116, out a1_117, out a2_118, out a3_28, out a4_29, out a5_119, out a7_120, out s2_121, out s3_122, out s4_123, out s5_124, out s6_125, out s8_126)
l230326AE:
	a0Out = s0_30
	a2Out = dwArg10
	a3Out = a3_28
	a4Out = a4_29
	return s1_20
xQueueCreateMutexStatic_exit:


word32 xQueueCreateMutex(word32 ra, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_mutex_new
//      bl_cmd_mgr_init
//      ef_port_init
//      mem_init
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a3 a4 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
xQueueCreateMutex_entry:
l230326B8:
	word32 a0_16
	word32 a5_21
	word32 a2_112
	word32 s3_113
	word32 s4_114
	word32 a3_19
	word32 a1_17
	word32 a4_20
	word32 s1_24
	word32 s2_25
	xQueueGenericCreate(ra, 1<32>, 0<32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s1_24, out a0_16, out a1_17, out a2_112, out a3_19, out a4_20, out a5_21, out s2_25, out s3_113, out s4_114)
	word32 s0_31 = a0_16
	branch a0_16 == 0<32> l230326E2
l230326CC:
	Mem32[a0_16 + 8<i32>:word32] = 0<32>
	Mem33[a0_16:word32] = 0<32>
	Mem34[a0_16 + 12<i32>:word32] = 0<32>
	word32 a0_115
	word32 a2_116
	word32 a5_117
	word32 a7_118
	word32 s3_119
	word32 s4_120
	word32 s5_121
	word32 s6_122
	word32 s8_123
	s0_31 = xQueueGenericSend(a0_16, 0<32>, 0<32>, a4_20, a5_21, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_24, out a0_115, out a1_17, out a2_116, out a3_19, out a4_20, out a5_117, out a7_118, out s2_25, out s3_119, out s4_120, out s5_121, out s6_122, out s8_123)
l230326E2:
	a0Out = s0_31
	a1Out = a1_17
	a3Out = a3_19
	a4Out = a4_20
	s2Out = s2_25
	return s1_24
xQueueCreateMutex_exit:


word32 xQueueGenericSendFromISR(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rw_main_task_post_from_fw
//      xTimerGenericCommand
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xQueueGenericSendFromISR_entry:
l230326EC:
	branch a0 == 0<32> l23032784
l23032784:
	user_vAssertCalled(a4, mstatus, out a5)
l23032700:
	branch a1 == 0<32> l23032762
l23032762:
	branch a5 == 0<32> l23032702
l23032766:
	user_vAssertCalled(a4, mstatus, out a5)
l23032702:
	word32 s0_55
	word32 a4_39 = 2<32>
	branch a3 == 2<32> l23032720
l23032720:
	a4_39 = 1<32>
	branch a5 == 1<32> l2303272E
l23032726:
	user_vAssertCalled(1<32>, mstatus, out a5)
l2303272E:
	s0_55 = Mem54[a5 + 56<i32>:word32]
l2303270A:
	s0_55 = Mem41[0x3A<32>:word32]
	branch a5 >u 2<32> l23032730
l23032730:
	word32 a2_79
	word32 s2_85
	word32 a5_273
	word32 a7_274
	word32 a0_271
	word32 a4_272
	word32 a3_102
	word32 a1_100
	word32 s1_105 = prvCopyDataToQueue(CONVERT(Mem58[s0_55 + 69<i32>:byte], byte, word32), a1, a3, a3, a4_39, a5, mstatus, dwArg08, out a0_271, out a1_100, out a2_79, out a3_102, out a4_272, out a5_273, out a7_274, out s2_85)
	word32 a4_103 = CONVERT(SLICE(s1_105, byte, 0), byte, int32)
	word32 a5_104 = 0xFFFFFFFF<32>
	branch a4_103 == 0xFFFFFFFF<32> l23032770
l23032770:
	word32 s0_97 = Mem58[0x23<32>:word32]
	branch true l2303278E
l2303278E:
	word32 a0_99
	word32 a2_275
	s1_105 = xTaskRemoveFromEventList(s0_97, a1_100, a2_79, a3_102, a4_103, mstatus, out a0_99, out a1_100, out a2_275, out a3_102, out a4_103, out a5_104)
	branch a0_99 == 0<32> l23032774
l23032798:
	branch a2 == 0<32> l23032774
l2303279C:
	Mem112[a2:word32] = 1<32>
	a5_104 = 1<32>
l23032774:
l23032776:
	0<32> = dwArg0128
	s1Out = s1_105
	a0Out = 1<32>
	a1Out = a1_100
	a3Out = a3_102
	a4Out = a4_103
	a5Out = a5_104
	s2Out = s2_85
	s3Out = <invalid>
	return <invalid>
l23032748:
	word32 s1_125 = s1_105 + 1<32> << 24<i32>
	Mem127[s0_55 + 69<i32>:byte] = SLICE(s1_125 >> 24<i32>, byte, 0)
	0<32> = dwArg0128
	s1Out = s1_125 >> 24<i32>
	a0Out = 1<32>
	a1Out = a1_100
	a3Out = a3_102
	a4Out = a4_103
	a5Out = 0xFFFFFFFF<32>
	s2Out = s2_85
	s3Out = <invalid>
	return <invalid>
l23032710:
	0<32> = dwArg0128
	s1Out = s1
	a0Out = 0<32>
	a1Out = a1
	a3Out = a3
	a4Out = 2<32>
	a5Out = a5
	s2Out = a3
	s3Out = <invalid>
	return <invalid>
xQueueGenericSendFromISR_exit:


word32 xQueueGiveFromISR(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_sem_signal
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
xQueueGiveFromISR_entry:
l230327A6:
	branch a0 == 0<32> l23032802
l23032802:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
l230327B4:
	branch a5 != 0<32> l230327F0
l230327F0:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
	branch a5 != 0<32> l230327BC
l230327B8:
	branch a5 == 0<32> l230327F8
l230327F8:
	branch a5 == 0<32> l230327BC
l230327FC:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
l230327BC:
	word32 s0_39 = Mem9[a4 + 60<i32>:word32]
	branch a5 >=u a4 l230327E6
l230327C6:
	word32 a4_41 = CONVERT(Mem9[s0_39 + 69<i32>:byte], byte, word32)
	Mem43[a5 + 0x39<32>:word32] = s0_39
	a3 = CONVERT(SLICE(a4_41, byte, 0), byte, int32)
	a5 = 0xFFFFFFFF<32>
	branch a3 == 0xFFFFFFFF<32> l23032808
l23032808:
	word32 s0_47 = Mem43[0x23<32>:word32]
	branch false l230327E4
l2303280C:
	word32 a4_125
	word32 a0_57
	word32 a2_124
	word32 a1_123
	word32 s1_63 = xTaskRemoveFromEventList(s0_47, a1, a2, a3, a4_41, mstatus, out a0_57, out a1_123, out a2_124, out a3, out a4_125, out a5)
	branch a0_57 == 0<32> l230327E4
l23032816:
	branch s1_63 == 0<32> l230327E4
l23032818:
	Mem66[1<32>:word32] = s1_63
	a5 = 1<32>
l230327DA:
	Mem71[s0_39 + 69<i32>:byte] = SLICE(CONVERT(SLICE(a4_41 + 1<32>, byte, 0), byte, int32), byte, 0)
l230327E4:
l230327E6:
	a5Out = a5
	return a3
xQueueGiveFromISR_exit:


word32 xQueueReceive(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blecontroller_main
//      ble_controller_deinit
//      k_queue_get
//      __bl_ble_sync_task
//      prvTimerTask
//      sys_arch_mbox_fetch
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xQueueReceive_entry:
l23032820:
	word32 s0_132 = a0
	word32 s3_153 = a1
	branch a0 == 0<32> l23032956
l23032956:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
l23032838:
	branch a1 == 0<32> l2303294A
l2303294A:
	s0_132 = Mem17[a5 + 64<i32>:word32]
	branch a5 == 0<32> l2303283C
l23032950:
	word32 a5_574
	a2 = user_vAssertCalled(a4, mstatus, out a5_574)
l2303283C:
	word32 a5_36
	branch xTaskGetSchedulerState(out a5_36) == 0<32> l2303293E
l2303293E:
	a2 = dwArgA4
	branch a5_36 == 0<32> l23032844
l23032944:
	word32 a5_573
	a2 = user_vAssertCalled(a4, mstatus, out a5_573)
l23032844:
	word32 a5_47
	word32 a4_178 = vTaskEnterCritical(a4, mstatus, out a5_47)
	word32 s2_107 = Mem17[s0_132 + 56<i32>:int32]
	branch s2_107 != 0<32> l230328F8
l23032850:
	branch a5_47 == 0<32> l230328C0
l23032854:
	vTaskInternalSetTimeOutState(fp + -40<i32>)
	s1 = 0xFFFFFFFF<32>
l23032860:
	word32 a4_65
	word32 a5_569
	word32 a3_64 = vTaskExitCritical(a3, mstatus, out a4_65, out a5_569)
	word32 a5_571
	word32 a5_570
	vTaskEnterCritical(vTaskSuspendAll(a4_65, out a5_570), mstatus, out a5_571)
	branch CONVERT(SLICE(CONVERT(Mem71[s0_132 + 68<i32>:byte], byte, word32), byte, 0), byte, int32) != s1 l2303287C
l23032878:
	Mem76[s0_132 + 68<i32>:byte] = 0<8>
l2303287C:
	branch CONVERT(SLICE(CONVERT(Mem78[s0_132 + 69<i32>:byte], byte, word32), byte, 0), byte, int32) != s1 l2303288C
l23032888:
	Mem83[s0_132 + 69<i32>:byte] = 0<8>
l2303288C:
	word32 a5_177
	word32 a4_135
	word32 a1_145
	word32 a5_88
	word32 a4_90
	vTaskExitCritical(a3_64, mstatus, out a4_90, out a5_88)
	a1 = fp + -52<i32>
	word32 a0_99
	word32 a2_100
	word32 a3_101
	word32 a4_102
	word32 s4_108
	word32 a5_547
	word32 s1_546
	word32 s0_105 = xTaskCheckForTimeOut(fp + -40<i32>, fp + -52<i32>, dwArgA4, a4_90, a5_88, mstatus, out s1_546, out a0_99, out a2_100, out a3_101, out a4_102, out a5_547, out s2_107, out s4_108)
	branch a0_99 != 0<32> l230328D6
l230328D6:
	word32 t3_556
	word32 s0_551
	word32 a0_552
	word32 s4_555
	word32 a6_554
	word32 a5_553
	word32 a4_115
	word32 a5_116
	word32 a4_129
	xTaskResumeAll(prvUnlockQueue(s0_105, fp + -52<i32>, a2_100, a3_101, a4_102, mstatus, dwLoc08, out a4_115, out a5_116), a4_115, a5_116, mstatus, dwArg0118, dwArg0158, out s0_551, out s1, out a0_552, out a2, out a3, out a4_129, out a5_553, out a6_554, out s4_555, out t3_556)
	word32 a5_130
	vTaskEnterCritical(a4_129, mstatus, out a5_130)
	s0_132 = Mem112[a5_130 + 56<i32>:word32]
	branch a5_130 == 0<32> l230328C0
l230328E8:
	word32 a5_572
	a3 = vTaskExitCritical(a3, mstatus, out a4_135, out a5_572)
l2303289A:
	word32 a5_136
	vTaskEnterCritical(a4_102, mstatus, out a5_136)
	word32 s0_138 = Mem112[a5_136 + 56<i32>:word32]
	branch a5_136 == 0<32> l23032920
l23032920:
	word32 a5_557
	word32 a4_141
	word32 a3_140 = vTaskExitCritical(a3_101, mstatus, out a4_141, out a5_557)
	word32 a5_559
	word32 s2_558
	word32 a2_146
	word32 a4_147
	word32 a4_160
	word32 a5_161
	word32 a0_164
	word32 t3_562
	word32 a6_560
	word32 s4_561
	xTaskResumeAll(prvUnlockQueue(vTaskPlaceOnEventList(s4_108, fp + -52<i32>, dwArg24, a3_140, a4_141, mstatus, dwLoc1C, dwArg08, out a1_145, out a2_146, out a4_147, out s2_558, out s3_153), a1_145, a2_146, a3_140, a4_147, mstatus, dwLoc08, out a4_160, out a5_161), a4_160, a5_161, mstatus, dwArg0118, dwArg0158, out s0_132, out s1, out a0_164, out a2, out a3, out a4_135, out a5_559, out a6_560, out s4_561, out t3_562)
	a1 = a1_145
	branch a0_164 != 0<32> l230328EC
l23032938:
	__syscall()
	a1 = a1_145
l230328EC:
	a4_178 = vTaskEnterCritical(a4_135, mstatus, out a5_177)
	s2_107 = Mem112[s0_132 + 56<i32>:int32]
	branch s2_107 == 0<32> l230328BC
l230328A2:
	word32 a5_563
	word32 a5_565
	word32 a4_184
	word32 a4_188
	word32 a5_189
	word32 a4_202
	word32 a0_564
	word32 s4_567
	word32 t3_568
	word32 a6_566
	xTaskResumeAll(prvUnlockQueue(s0_138, fp + -52<i32>, a2_100, vTaskExitCritical(a3_101, mstatus, out a4_184, out a5_563), a4_184, mstatus, dwLoc08, out a4_188, out a5_189), a4_188, a5_189, mstatus, dwArg0118, dwArg0158, out s0_132, out s1, out a0_564, out a2, out a3, out a4_202, out a5_565, out a6_566, out s4_567, out t3_568)
	a4_178 = vTaskEnterCritical(a4_202, mstatus, out a5_177)
	s2_107 = Mem112[s0_132 + 56<i32>:int32]
	branch s2_107 != 0<32> l230328F8
l230328F8:
	word32 s2_217 = s2_107 + 0xFFFFFFFF<32>
	word32 a5_225
	word32 a2_227
	word32 a4_229
	word32 a3_228
	word32 a1_226 = prvCopyDataFromQueue(s3_153, a2, a4_178, out a2_227, out a3_228, out a4_229, out a5_225)
	Mem238[s0_132 + 56<i32>:word32] = s2_217
	word32 s0_239 = Mem238[a5_225 + 16<i32>:word32]
	branch a5_225 != 0<32> l2303295C
l2303295C:
	word32 a5_550
	word32 a4_549
	word32 a2_548
	word32 a0_242
	s1 = xTaskRemoveFromEventList(s0_239, a1_226, a2_227, a3_228, a4_229, mstatus, out a0_242, out a1_226, out a2_548, out a3_228, out a4_549, out a5_550)
	branch a0_242 == 0<32> l2303290A
l23032966:
	__syscall()
l2303290A:
	word32 a5_252
	word32 a4_254
	word32 a3_253 = vTaskExitCritical(a3_228, mstatus, out a4_254, out a5_252)
	s1Out = s1
	a0Out = 1<32>
	a1Out = a1_226
	a2Out = <invalid>
	a3Out = a3_253
	a4Out = a4_254
	a5Out = a5_252
	s2Out = s2_217
	s3Out = s3_153
	s4Out = <invalid>
	return <invalid>
l230328BC:
	branch a5_177 != 0<32> l23032860
l230328C0:
	word32 a5_280
	word32 a4_282
	word32 a3_281 = vTaskExitCritical(a3, mstatus, out a4_282, out a5_280)
	s1Out = s1
	a0Out = 0<32>
	a1Out = a1
	a2Out = <invalid>
	a3Out = a3_281
	a4Out = a4_282
	a5Out = a5_280
	s2Out = s2_107
	s3Out = s3_153
	s4Out = <invalid>
	return <invalid>
xQueueReceive_exit:


word32 xQueueSemaphoreTake(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_open
//      aos_close
//      aos_stat
//      aos_opendir
//      aos_closedir
//      aos_mutex_lock
//      aos_sem_wait
//      cmd_mgr_print
//      cmd_mgr_msgind
//      cmd_mgr_llind
//      cmd_mgr_queue
//      cmd_mgr_drain
//      k_sem_take
//      __protocol_send
//      ef_port_env_lock
//      sys_sem_new
//      sys_mutex_lock
//      aos_register_driver
//      aos_register_fs
//      bl_sha_mutex_take
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
xQueueSemaphoreTake_entry:
l2303296C:
	branch a0 == 0<32> l23032AB0
l23032AB0:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
l23032982:
	branch a5 != 0<32> l23032A8A
l23032A8A:
	word32 a5_584
	a2 = user_vAssertCalled(a4, mstatus, out a5_584)
l23032988:
	word32 a5_33
	word32 a0_132 = xTaskGetSchedulerState(out a5_33)
	branch a0_132 == 0<32> l23032A7E
l23032A7E:
	a2 = dwArgA4
	branch a5_33 == 0<32> l23032990
l23032A84:
	word32 a5_614
	a2 = user_vAssertCalled(a4, mstatus, out a5_614)
l23032990:
	word32 a4_148
	word32 a3_147
	word32 a5_146
	word32 a5_280
	word32 a4_281 = vTaskEnterCritical(a4, mstatus, out a5_280)
	word32 s0_284 = Mem17[a5_280 + 56<i32>:word32]
	word32 s3_162 = 0<32>
	word32 s2_120 = 0<32>
	word32 s1_137 = 0xFFFFFFFF<32>
	branch a5_280 != 0<32> l23032A06
l230329A2:
	branch a5_280 == 0<32> l23032AC8
l23032AC8:
	branch s3_162 != 0<32> l23032AE6
l23032AE6:
	word32 a5_590
	user_vAssertCalled(a4_281, mstatus, out a5_590)
l23032ACC:
	a3_147 = vTaskExitCritical(a3, mstatus, out a4_148, out a5_146)
	s3_162 = 0<32>
l230329A8:
	branch s2_120 == 0<32> l23032A38
l23032A38:
	vTaskInternalSetTimeOutState(fp + -40<i32>)
l230329AC:
	word32 a4_76
	word32 a5_585
	word32 a3_75 = vTaskExitCritical(a3, mstatus, out a4_76, out a5_585)
	word32 a5_586
	word32 a5_587
	vTaskEnterCritical(vTaskSuspendAll(a4_76, out a5_586), mstatus, out a5_587)
	branch CONVERT(SLICE(CONVERT(Mem53[s0_284 + 68<i32>:byte], byte, word32), byte, 0), byte, int32) != s1_137 l230329C8
l230329C4:
	Mem89[s0_284 + 68<i32>:byte] = 0<8>
l230329C8:
	branch CONVERT(SLICE(CONVERT(Mem91[s0_284 + 69<i32>:byte], byte, word32), byte, 0), byte, int32) != s1_137 l230329D8
l230329D4:
	Mem96[s0_284 + 69<i32>:byte] = 0<8>
l230329D8:
	word32 a4_184
	word32 a1_223
	word32 a5_101
	word32 a4_103
	vTaskExitCritical(a3_75, mstatus, out a4_103, out a5_101)
	a1 = fp + -52<i32>
	word32 a0_112
	word32 a2_113
	word32 a3_114
	word32 a4_115
	word32 a5_589
	word32 s1_588
	word32 s4_121
	word32 s0_118 = xTaskCheckForTimeOut(fp + -40<i32>, fp + -52<i32>, dwArgA4, a4_103, a5_101, mstatus, out s1_588, out a0_112, out a2_113, out a3_114, out a4_115, out a5_589, out s2_120, out s4_121)
	branch a0_112 != 0<32> l23032A1E
l23032A1E:
	word32 a4_128
	word32 a5_129
	word32 a3_141
	word32 a4_142
	word32 a5_592
	word32 a6_593
	word32 s4_594
	word32 t3_595
	word32 s0_591
	xTaskResumeAll(prvUnlockQueue(s0_118, fp + -52<i32>, a2_113, a3_114, a4_115, mstatus, dwLoc08, out a4_128, out a5_129), a4_128, a5_129, mstatus, dwArg0118, dwArg0158, out s0_591, out s1_137, out a0_132, out a2, out a3_141, out a4_142, out a5_592, out a6_593, out s4_594, out t3_595)
	word32 a5_143
	vTaskEnterCritical(a4_142, mstatus, out a5_143)
	branch a5_143 == 0<32> l23032A64
l23032A64:
	a3_147 = vTaskExitCritical(a3_141, mstatus, out a4_148, out a5_146)
	branch s3_162 != 0<32> l23032A90
l23032A90:
	word32 a5_152
	word32 a4_153 = vTaskEnterCritical(a4_148, mstatus, out a5_152)
	branch fp == 0xFFFFFFCC<32> l23032AA2
l23032A98:
	a5_152 = Mem125[a5_152:word32]
	a1 = 32<i32> - a5_152
l23032AA2:
	word32 a3_177
	s1_137 = vTaskPriorityDisinheritAfterTimeout(a0_132, a1, a2, a3_147, a4_153, a5_152, mstatus, dwLoc08, out a1, out a3_177, out s2_120)
	s3_162 = 0<32>
	a3_147 = vTaskExitCritical(a3_177, mstatus, out a4_148, out a5_146)
l23032A30:
	word32 a5_605
	a3 = vTaskExitCritical(a3_141, mstatus, out a4_184, out a5_605)
l230329E6:
	word32 a5_186
	vTaskEnterCritical(a4_115, mstatus, out a5_186)
	word32 s0_188 = Mem125[a5_186 + 56<i32>:word32]
	branch a5_186 == 0<32> l23032A40
l23032A40:
	word32 a5_189
	word32 a4_191
	word32 a3_190 = vTaskExitCritical(a3_114, mstatus, out a4_191, out a5_189)
	branch a5_189 == 0<32> l23032AB6
l23032AB6:
	word32 a5_606
	a1 = xTaskPriorityInherit(a0_112, a2_113, a3_190, vTaskEnterCritical(a4_191, mstatus, out a5_606), out s4_121)
	word32 a5_607
	a3_190 = vTaskExitCritical(a3_190, mstatus, out a4_191, out a5_607)
l23032A48:
	word32 a2_224
	word32 a4_225
	word32 a4_238
	word32 a5_239
	word32 s0_609
	word32 a6_611
	word32 s4_612
	word32 t3_613
	word32 a5_610
	word32 s2_608
	xTaskResumeAll(prvUnlockQueue(vTaskPlaceOnEventList(s4_121, a1, dwArg24, a3_190, a4_191, mstatus, dwLoc1C, dwArg08, out a1_223, out a2_224, out a4_225, out s2_608, out s3_162), a1_223, a2_224, a3_190, a4_225, mstatus, dwLoc08, out a4_238, out a5_239), a4_238, a5_239, mstatus, dwArg0118, dwArg0158, out s0_609, out s1_137, out a0_132, out a2, out a3, out a4_184, out a5_610, out a6_611, out s4_612, out t3_613)
	a1 = a1_223
	branch a0_132 != 0<32> l230329FC
l23032A5C:
	__syscall()
	a1 = a1_223
l230329EE:
	word32 a4_256
	word32 a4_260
	word32 a5_261
	word32 t3_601
	word32 s4_600
	word32 a6_599
	word32 a5_596
	word32 s0_597
	word32 a5_598
	xTaskResumeAll(prvUnlockQueue(s0_188, fp + -52<i32>, a2_113, vTaskExitCritical(a3_114, mstatus, out a4_256, out a5_596), a4_256, mstatus, dwLoc08, out a4_260, out a5_261), a4_260, a5_261, mstatus, dwArg0118, dwArg0158, out s0_597, out s1_137, out a0_132, out a2, out a3, out a4_184, out a5_598, out a6_599, out s4_600, out t3_601)
l230329FC:
l230329FE:
	a4_281 = vTaskEnterCritical(a4_184, mstatus, out a5_280)
	s2_120 = 1<32>
	s0_284 = Mem125[a5_280 + 56<i32>:word32]
	branch a5_280 == 0<32> l230329A2
l23032A06:
	word32 s0_287 = Mem286[a4_281:word32]
	word32 a5_289 = a5_280 + 0xFFFFFFFF<32>
	Mem290[a5_289 + 56<i32>:word32] = s0_287
	branch a4_281 == 0<32> l23032AEC
l23032AEC:
	a3 = pvTaskIncrementMutexHeldCount(a0_132, a4_281, out a4_281, out a5_289)
	Mem298[a0_132 + 8<i32>:word32] = s0_287
l23032A10:
	word32 s0_301 = Mem300[a5_289 + 16<i32>:word32]
	branch a5_289 != 0<32> l23032AD4
l23032AD4:
	word32 a0_329
	word32 a2_602
	word32 a4_603
	word32 a5_604
	s1_137 = xTaskRemoveFromEventList(s0_301, a1, a2, a3, a4_281, mstatus, out a0_329, out a1, out a2_602, out a3, out a4_603, out a5_604)
	branch a0_329 == 0<32> l23032A16
l23032AE0:
	__syscall()
l23032A16:
	a3_147 = vTaskExitCritical(a3, mstatus, out a4_148, out a5_146)
	s3_162 = 1<32>
l23032A6C:
	s1Out = s1_137
	a0Out = s3_162
	a1Out = a1
	a2Out = dwArg0138
	a3Out = a3_147
	a4Out = a4_148
	a5Out = a5_146
	s2Out = s2_120
	s3Out = s3_162
	s4Out = dwArgF4
	s8Out = dwArgD4
	return dwArg0158
xQueueSemaphoreTake_exit:


word32 uxQueueMessagesWaiting(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_queue_is_empty
//      k_queue_get_cnt
//      k_sem_count_get
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
uxQueueMessagesWaiting_entry:
l23032AF4:
	branch a0 == 0<32> l23032B12
l23032B12:
	word32 a5_40
	user_vAssertCalled(a4, mstatus, out a5_40)
l23032AFE:
	word32 a5_41
	vTaskEnterCritical(a4, mstatus, out a5_41)
	word32 s0_20 = Mem7[a0 + 56<i32>:word32]
	word32 a5_23
	word32 a4_25
	word32 a3_24 = vTaskExitCritical(a3, mstatus, out a4_25, out a5_23)
	a2Out = dwArg10
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_23
	return s0_20
uxQueueMessagesWaiting_exit:


word32 vQueueDelete(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_mutex_free
//      aos_sem_free
//      ble_controller_deinit
//      k_queue_free
//      bt_att_disconnected
//      sys_sem_free
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
vQueueDelete_entry:
l23032B18:
	branch a0 == 0<32> l23032B52
l23032B52:
	word32 a5_168
	user_vAssertCalled(a4, mstatus, out a5_168)
	word32 a4_121 = 0<32>
l23032B6E:
	branch a0 == a3 l23032B90
l23032B90:
	word32 a4_24 = a4_121 << 3<i32>
	Mem27[a4_24 + 0x4201A4FC<32>:word32] = 0<32>
	Mem28[a4_24 + 0x4201A500<32>:word32] = 0<32>
	a4_121 = a4_24 + 0x4201A4FC<32>
l23032B76:
	a4_121 = a4_121 + 1<32>
	branch a4_121 != 8<32> l23032B6E
l23032B7C:
	word32 a5_33 = CONVERT(Mem32[a0 + 70<i32>:byte], byte, word32)
	branch a5_33 == 0<32> l23032B88
l23032B88:
l23032B8C_thunk_vPortFree:
	word32 a2_41
	word32 a3_42
	word32 a4_43
	word32 a5_44
	word32 s1_45
	word32 a0_47
	word32 a1_48
	word32 s0_50
	word32 s4_51
	word32 t3_170
	word32 a6_169
	vPortFree(a0, 8<32>, a5_33, mstatus, dwArg0158, dwArg0198, out s0_50, out s1_45, out a0_47, out a1_48, out a2_41, out a3_42, out a4_43, out a5_44, out a6_169, out s4_51, out t3_170)
	s1Out = s1_45
	a0Out = a0_47
	a1Out = a1_48
	a2Out = a2_41
	a3Out = a3_42
	a4Out = a4_43
	a5Out = a5_44
	s4Out = s4_51
	return s0_50
l23032B82:
	s1Out = s1
	a0Out = a0
	a1Out = 0x4201A4FC<32>
	a2Out = 8<32>
	a3Out = a3
	a4Out = a4_121
	a5Out = a5_33
	s4Out = s4
	return s0
l23032B1A:
	word32 a4_120 = 0<32>
l23032B2A:
	branch a0 == a3 l23032B44
l23032B44:
	word32 a4_66 = a4_120 << 3<i32>
	Mem69[a4_66 + 0x4201A4FC<32>:word32] = 0<32>
	Mem70[a4_66 + 0x4201A500<32>:word32] = 0<32>
	a4_120 = a4_66 + 0x4201A4FC<32>
l23032B32:
	a4_120 = a4_120 + 1<32>
	branch a4_120 != 8<32> l23032B2A
l23032B38:
	word32 a5_75 = CONVERT(Mem74[a0 + 70<i32>:byte], byte, word32)
	branch a5_75 == 0<32> l23032B40
l23032B40:
l23032B40_thunk_vPortFree:
	word32 a2_81
	word32 a3_82
	word32 a4_83
	word32 a5_84
	word32 s1_85
	word32 a0_87
	word32 a1_88
	word32 s0_90
	word32 s4_91
	word32 a6_166
	word32 t3_167
	vPortFree(a0, 8<32>, a5_75, mstatus, dwArg0158, dwArg0198, out s0_90, out s1_85, out a0_87, out a1_88, out a2_81, out a3_82, out a4_83, out a5_84, out a6_166, out s4_91, out t3_167)
	s1Out = s1_85
	a0Out = a0_87
	a1Out = a1_88
	a2Out = a2_81
	a3Out = a3_82
	a4Out = a4_83
	a5Out = a5_84
	s4Out = s4_91
	return s0_90
l23032B3E:
	s1Out = s1
	a0Out = a0
	a1Out = 0x4201A4FC<32>
	a2Out = 8<32>
	a3Out = a3
	a4Out = a4_120
	a5Out = a5_75
	s4Out = s4
	return s0
vQueueDelete_exit:


word32 vQueueAddToRegistry(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvCheckForValidListAndQueue
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut: a6
// Trashed: a2 a4 a5 a6
// Preserved: sp
vQueueAddToRegistry_entry:
l23032B9E:
	word32 a4_12 = 0<32>
l23032BAE:
	branch a3 == 0<32> l23032BBC
l23032BBC:
	word32 a4_13 = a4_12 << 3<i32>
	Mem17[a1:word32] = a4_13 + 0x4201A4FC<32>
	Mem19[a0 + 4<i32>:word32] = a4_13 + 0x4201A4FC<32>
	return
l23032BB4:
	a4_12 = a4_12 + 1<32>
	branch a4_12 != 8<32> l23032BAE
l23032BBA:
	return
vQueueAddToRegistry_exit:


word32 vQueueWaitForMessageRestricted(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg38, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvTimerTask
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31]
// LiveOut: a3 a4 a5 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
vQueueWaitForMessageRestricted_entry:
l23032BC6:
	word32 a5_139
	vTaskEnterCritical(a4, mstatus, out a5_139)
	branch CONVERT(SLICE(CONVERT(Mem13[a0 + 68<i32>:byte], byte, word32), byte, 0), byte, int32) != 0xFFFFFFFF<32> l23032BEC
l23032BE8:
	Mem26[a0 + 68<i32>:byte] = 0<8>
l23032BEC:
	branch CONVERT(SLICE(CONVERT(Mem28[a0 + 69<i32>:byte], byte, word32), byte, 0), byte, int32) != 0xFFFFFFFF<32> l23032BFE
l23032BFA:
	Mem33[a0 + 69<i32>:byte] = 0<8>
l23032BFE:
	word32 a5_39
	word32 a4_41
	word32 a3_40 = vTaskExitCritical(a3, mstatus, out a4_41, out a5_39)
	word32 s0_43 = Mem42[a5_39 + 56<i32>:word32]
	branch a5_39 == 0<32> l23032C16
l23032C16:
	word32 a1_54
	word32 a4_56
	word32 s3_62
	word32 s0_59 = vTaskPlaceOnEventListRestricted(s0_43 + 36<i32>, a1, a2, a3_40, a4_41, mstatus, dwArg14, dwArg38, out a1_54, out a4_56, out s3_62)
	0<32> = dwArg38
l23032C2E_thunk_prvUnlockQueue:
	word32 a4_73
	word32 a5_74
	word32 a3_72 = prvUnlockQueue(s0_59, a1_54, dwArg10, a3_40, a4_56, mstatus, dwArg38, out a4_73, out a5_74)
	a4Out = a4_73
	a5Out = a5_74
	s3Out = s3_62
	return a3_72
l23032C06:
	0<32> = dwArg38
l23032C12_thunk_prvUnlockQueue:
	word32 a4_86
	word32 a5_87
	word32 a3_85 = prvUnlockQueue(s0_43, a1, dwArg10, a3_40, a4_41, mstatus, dwArg38, out a4_86, out a5_87)
	a4Out = a4_86
	a5Out = a5_87
	s3Out = s3
	return a3_85
vQueueWaitForMessageRestricted_exit:


word32 prvInitialiseNewStreamBuffer(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferGenericCreate
//      xStreamBufferGenericCreateStatic
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..7] mstatus:[0..31] ra:[0..31]
// LiveOut: a3 a4 a5 ra s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3
// Preserved: sp
prvInitialiseNewStreamBuffer_entry:
l23032C32:
	word32 a0_28
	word32 a4_32
	word32 t1_93
	word32 a1_94
	word32 a2_95
	word32 a3_96
	word32 a5_97
	word32 ra_34 = memset(ra, a1, 85<i32>, a2, out t1_93, out a0_28, out a1_94, out a2_95, out a3_96, out a4_32, out a5_97)
	branch a1 == a0_28 l23032C5C
l23032C58:
	word32 a5_102
	user_vAssertCalled(a4_32, mstatus, out a5_102)
l23032C5C:
	word32 a3_48
	word32 a4_49
	word32 a5_50
	word32 t1_98
	word32 a0_99
	word32 a1_100
	word32 a2_101
	word32 ra_51 = memset(ra_34, a0, 0<32>, 36<i32>, out t1_98, out a0_99, out a1_100, out a2_101, out a3_48, out a4_49, out a5_50)
	Mem55[a1 + 24<i32>:word32] = a0
	Mem57[a0 + 8<i32>:word32] = a2
	Mem59[a0 + 12<i32>:word32] = a3
	Mem61[a0 + 28<i32>:byte] = SLICE(a4, byte, 0)
	s0Out = s1
	s1Out = a1
	a3Out = a3_48
	a4Out = a4_49
	a5Out = a5_50
	s2Out = a4
	s4Out = dwArg04
	return ra_51
prvInitialiseNewStreamBuffer_exit:


word32 prvWriteBytesToBuffer(word32 s0, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg0128, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
//      xStreamBufferSendFromISR
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
prvWriteBytesToBuffer_entry:
l23032C86:
	word32 a3_104
	word32 a1_102
	word32 a5_100
	word32 a4_114
	word32 s0_132
	word32 s1_129
	branch a2 == 0<32> l23032D06
l23032D06:
	word32 a5_25
	user_vAssertCalled(a4, mstatus, out a5_25)
	branch a5_25 <u s0 l23032CFE
l23032CFE:
	s3 = 0<32>
l23032D12:
	word32 a2_251
	word32 a6_252
	word32 a7_253
	a1_102 = memcpy(a0 + s0, a1, 0<32>, out a2_251, out a3_104, out a4_114, out a5_100, out a6_252, out a7_253)
	s1_129 = Mem15[a5_100 + 8<i32>:word32]
	s0_132 = s0 + a2
	branch s0_132 <u a5_100 l23032CDE
l23032D26:
l23032C9C:
	a0 = Mem15[a5 + 8<i32>:word32]
	s3 = a5 - s0
	branch a2 <u s3 l23032CF2
l23032CF2:
	s3 = a2
	a4 = s0 + a2
	branch a5 >=u a4 l23032CB0
l23032CFC:
l23032CA8:
	a4 = s0 + s3
	branch a5 <u a4 l23032D00
l23032D00:
	word32 a5_240
	user_vAssertCalled(a4, mstatus, out a5_240)
l23032CB0:
	word32 a0_72 = a0 + s0
	word32 a2_241
	word32 a6_242
	word32 a7_243
	a1_102 = memcpy(a0_72, a1, s3, out a2_241, out a3_104, out a4_114, out a5_100, out a6_242, out a7_243)
	branch s3 >=u a2 l23032CD4
l23032CC0:
	word32 a2_89 = a2 - s3
	branch a5_100 <u a2_89 l23032D28
l23032D28:
	word32 a5_244
	user_vAssertCalled(a4_114, mstatus, out a5_244)
	word32 a2_245
	word32 a6_246
	word32 a7_247
	a1_102 = memcpy(a0_72, a1 + s3, a2_89, out a2_245, out a3_104, out a4_114, out a5_100, out a6_246, out a7_247)
l23032CCA:
	word32 a2_248
	word32 a6_249
	word32 a7_250
	a1_102 = memcpy(a0_72, a1 + s3, a2_89, out a2_248, out a3_104, out a4_114, out a5_100, out a6_249, out a7_250)
l23032CD4:
	s1_129 = Mem128[a5_100 + 8<i32>:word32]
	s0_132 = s0 + a2
	branch s0_132 <u a5_100 l23032CDE
l23032CDC:
	s0_132 = s0_132 - a5_100
l23032CDE:
	Mem139[s0_132 + 4<i32>:word32] = s1_129
	0<32> = dwArg0128
	a0Out = a2
	a1Out = a1_102
	a2Out = dwArg0100
	a3Out = a3_104
	a4Out = a4_114
	a5Out = a5_100
	s2Out = a2
	s3Out = s3
	return dwArgE4
prvWriteBytesToBuffer_exit:


word32 prvReadBytesFromBuffer(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferReceive
//      xStreamBufferReceiveFromISR
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
prvReadBytesFromBuffer_entry:
l23032D3C:
	word32 s0_19 = a3
	branch a3 <u a2 l23032D54
l23032D52:
	s0_19 = a2
l23032D54:
	word32 s1_129
	s1_129 = s1
	branch s0_19 == 0<32> l23032DA8
l23032D56:
	word32 a4_53
	word32 s3_26 = Mem17[a0:int32]
	word32 s4_30 = a5 - s3_26
	branch s0_19 <u s4_30 l23032DBC
l23032DBC:
	s4_30 = s0_19
	branch a2 >=u s0_19 l23032D6E
l23032D64:
	branch a2 <u s4_30 l23032DC8
l23032DC8:
	word32 a5_48
	user_vAssertCalled(a4, mstatus, out a5_48)
	a4_53 = s3_26 + s4_30
	branch a5_48 >=u a4_53 l23032D76
l23032D6E:
	a4_53 = s3_26 + s4_30
	branch a5 <u a4_53 l23032DD6
l23032DD6:
	word32 a5_299
	user_vAssertCalled(a4_53, mstatus, out a5_299)
l23032D76:
	s2 = a2
	s5 = a1
	word32 a2_300
	word32 a6_301
	word32 a7_302
	a1 = memcpy(a1, a1 + s3_26, s4_30, out a2_300, out a3, out a4, out a5, out a6_301, out a7_302)
	branch s4_30 >=u s0_19 l23032D98
l23032D86:
	branch a2 <u s0_19 l23032DDC
l23032DDC:
	word32 a5_303
	user_vAssertCalled(a4, mstatus, out a5_303)
l23032D8A:
	word32 a7_306
	word32 a2_304
	word32 a6_305
	a1 = memcpy(a1 + s4_30, a1, s0_19 - s4_30, out a2_304, out a3, out a4, out a5, out a6_305, out a7_306)
l23032D98:
	s1_129 = Mem17[a5 + 8<i32>:word32]
	s3 = s3_26 + s0_19
	branch s3 <u a5 l23032DA4
l23032DA0:
	s3 = s3 - a5
l23032DA4:
	Mem137[s1_129:word32] = s3
l23032DA8:
	s1Out = s1_129
	a0Out = s0_19
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	return s1
prvReadBytesFromBuffer_exit:


word32 xStreamBufferGenericCreate(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg0118, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 a5 ra s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
xStreamBufferGenericCreate_entry:
l23032DE2:
	word32 a5_14 = 1<32>
	word32 s1_18 = a1
	branch a2 == 1<32> l23032E46
l23032E46:
	a5_14 = 4<32>
	branch a0 >u 4<32> l23032DFC
l23032E4E:
	user_vAssertCalled(a4, mstatus, out a5_14)
	branch a0 >=u a1 l23032E00
l23032E56:
l23032DF8:
	branch a0 == 0<32> l23032E3A
l23032E3A:
	user_vAssertCalled(a4, mstatus, out a5_14)
	branch a0 >=u a1 l23032E00
l23032E44:
l23032DFC:
	branch a0 <u a1 l23032E32
l23032E32:
	user_vAssertCalled(a4, mstatus, out a5_14)
	branch a1 != 0<32> l23032E02
l23032E38:
l23032E00:
	branch a1 == 0<32> l23032E2E
l23032E2E:
	s1_18 = 1<32>
l23032E02:
	word32 a0_78
	word32 s3_88
	word32 s8_228
	word32 a2_224
	word32 a6_225
	word32 s2_226
	word32 s4_227
	word32 a1_223
	word32 s1_107
	word32 a3_101
	word32 a4_102
	word32 a5_103
	word32 s0_106 = pvPortMalloc(ra, s1_18, a0 + 37<i32>, a3, a4, a5_14, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_107, out a0_78, out a1_223, out a2_224, out a3_101, out a4_102, out a5_103, out a6_225, out s2_226, out s3_88, out s4_227, out s8_228)
	word32 s2_108 = a0_78
	branch a0_78 == 0<32> l23032E1E
l23032E0E:
	word32 s4_229
	ra = prvInitialiseNewStreamBuffer(ra, a0_78, a0_78 + 36<i32>, s0_106 + 1<i32>, s1_107, s3_88, mstatus, out s0_106, out s1_107, out a3_101, out a4_102, out a5_103, out s2_108, out s4_229)
l23032E1E:
	s0Out = s0_106
	s1Out = s1_107
	a0Out = s2_108
	a3Out = a3_101
	a4Out = a4_102
	a5Out = a5_103
	return ra
xStreamBufferGenericCreate_exit:


word32 xStreamBufferGenericCreateStatic(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg0128, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 ra s0 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
xStreamBufferGenericCreateStatic_entry:
l23032E58:
	word32 s1_114
	word32 s4_161 = a0
	word32 s2_120 = a1
	word32 s0_102 = a4
	branch a3 == 0<32> l23032F04
l23032F04:
	word32 a5_377
	user_vAssertCalled(a4, mstatus, out a5_377)
	branch a4 != 0<32> l23032E74
l23032F0A:
l23032E72:
	branch a4 == 0<32> l23032EFA
l23032EFA:
	word32 a5_378
	user_vAssertCalled(a4, mstatus, out a5_378)
	branch a0 >=u a1 l23032E78
l23032F02:
l23032E74:
	branch a0 <u a1 l23032EF0
l23032EF0:
	word32 a5_379
	user_vAssertCalled(a4, mstatus, out a5_379)
	branch a1 != 0<32> l23032E7C
l23032EF8:
l23032E78:
	branch a1 == 0<32> l23032EC6
l23032EC6:
	s2_120 = 1<32>
	s1_114 = CONVERT(a2 != 0<32>, bool, word32) + 2<32>
	branch a0 >u 4<32> l23032E88
l23032E7C:
	s1_114 = CONVERT(a2 != 0<32>, bool, word32) + 2<32>
	branch a0 <=u 4<32> l23032ED4
l23032ED4:
	word32 a5_380
	user_vAssertCalled(a4, mstatus, out a5_380)
	branch a4 == 36<i32> l23032E94
l23032E88:
	branch a4 != 36<i32> l23032EE4
l23032EE4:
	word32 a5_381
	user_vAssertCalled(a4, mstatus, out a5_381)
	branch a3 != 0<32> l23032E98
l23032E94:
	branch a3 == 0<32> l23032EEC
l23032EEC:
	s0_102 = 0<32>
l23032E98:
	branch a4 == 0<32> l23032EB4
l23032E9A:
	word32 a3_383
	word32 s2_386
	word32 a5_385
	word32 a4_384
	word32 s1_382
	ra = prvInitialiseNewStreamBuffer(ra, a4, a3, a0, s2_120, s1_114, mstatus, out s0_102, out s1_382, out a3_383, out a4_384, out a5_385, out s2_386, out s4_161)
	Mem171[s0_102 + 28<i32>:byte] = SLICE(CONVERT(Mem166[s0_102 + 28<i32>:byte], byte, word32) | 2<i32>, byte, 0)
l23032EB4:
	0<32> = dwArg0128
	s0Out = dwArgE4
	a0Out = s0_102
	s4Out = s4_161
	return ra
xStreamBufferGenericCreateStatic_exit:


word32 vStreamBufferDelete(word32 ra, word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_close
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0024:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a4 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s4 t0 t1 t3 tp
// Preserved: sp
vStreamBufferDelete_entry:
l23032F0C:
	branch a0 == 0<32> l23032F24
l23032F24:
	word32 a5_103
	user_vAssertCalled(a4, mstatus, out a5_103)
	word32 a5_13 = CONVERT(Mem7[a0 + 28<i32>:byte], byte, word32)
	branch (a5_13 & 2<32>) != 0<32> l23032F40
l23032F40:
l23032F4A_thunk_memset:
	word32 a0_19
	word32 a2_21
	word32 a4_23
	word32 t1_118
	word32 a1_119
	word32 a3_120
	word32 a5_121
	word32 ra_25 = memset(ra, a0, 0<32>, 36<i32>, out t1_118, out a0_19, out a1_119, out a2_21, out a3_120, out a4_23, out a5_121)
	s1Out = s1
	a0Out = a0_19
	a2Out = a2_21
	a4Out = a4_23
	return ra_25
l23032F38:
l23032F3C_thunk_vPortFree:
	word32 a2_30
	word32 a4_32
	word32 s1_34
	word32 a0_36
	word32 s0_111
	word32 a1_112
	word32 a3_113
	word32 a5_114
	word32 a6_115
	word32 s4_116
	word32 t3_117
	vPortFree(a0, dwArg24, a5_13 & 2<32>, mstatus, dwArg0158, dwArg0198, out s0_111, out s1_34, out a0_36, out a1_112, out a2_30, out a3_113, out a4_32, out a5_114, out a6_115, out s4_116, out t3_117)
	s1Out = s1_34
	a0Out = a0_36
	a2Out = a2_30
	a4Out = a4_32
	return ra
l23032F0E:
	word32 a5_43 = CONVERT(Mem0[a0 + 28<i32>:byte], byte, word32)
	branch (a5_43 & 2<32>) != 0<32> l23032F1A
l23032F1A:
l23032F20_thunk_memset:
	word32 a0_47
	word32 a2_49
	word32 a4_51
	word32 t1_122
	word32 a1_123
	word32 a3_124
	word32 a5_125
	word32 ra_53 = memset(ra, a0, 0<32>, 36<i32>, out t1_122, out a0_47, out a1_123, out a2_49, out a3_124, out a4_51, out a5_125)
	s1Out = s1
	a0Out = a0_47
	a2Out = a2_49
	a4Out = a4_51
	return ra_53
l23032F16:
l23032F16_thunk_vPortFree:
	word32 a2_57
	word32 a4_59
	word32 s1_61
	word32 a0_63
	word32 s0_104
	word32 a1_105
	word32 a3_106
	word32 a5_107
	word32 a6_108
	word32 s4_109
	word32 t3_110
	vPortFree(a0, a2, a5_43 & 2<32>, mstatus, dwArg0158, dwArg0198, out s0_104, out s1_61, out a0_63, out a1_105, out a2_57, out a3_106, out a4_59, out a5_107, out a6_108, out s4_109, out t3_110)
	s1Out = s1_61
	a0Out = a0_63
	a2Out = a2_57
	a4Out = a4_59
	return ra
vStreamBufferDelete_exit:


word32 xStreamBufferSpacesAvailable(word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
//      xStreamBufferSendFromISR
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a5 t3
// Preserved: sp
xStreamBufferSpacesAvailable_entry:
l23032F4E:
	branch a0 == 0<32> l23032F68
l23032F68:
	word32 a5_11
	user_vAssertCalled(a4, mstatus, out a5_11)
	word32 a0_19 = a4 + a5_11 + 0xFFFFFFFF<32> - a3
	branch a0_19 <u a4 l23032F88
l23032F86:
	a0_19 = a0_19 - a4
l23032F88:
	a5Out = a5_11
	return a0_19
l23032F50:
	word32 a0_32 = a4 + a5 + 0xFFFFFFFF<32> - a3
	branch a0_32 <u a4 l23032F66
l23032F66:
	a5Out = a5
	return a0_32
l23032F62:
	a5Out = a5
	return a0_32 - a4
xStreamBufferSpacesAvailable_exit:


word32 xStreamBufferSend(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_event_notify
//      vfs_uart_write
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xStreamBufferSend_entry:
l23032F8E:
	word32 s4_135 = a1
	word32 s0_132 = a0
	word32 s3_116 = a2
	branch a1 == 0<32> l23033096
l23033096:
	word32 a5_711
	user_vAssertCalled(a4, mstatus, out a5_711)
	branch a0 != 0<32> l23032FAC
l23032FA8:
	branch a0 == 0<32> l2303309E
l2303309E:
	word32 a5_712
	user_vAssertCalled(a4, mstatus, out a5_712)
l23032FAC:
	word32 a3_128
	word32 s1_180
	word32 s1_133
	word32 a5_36 = CONVERT(Mem17[a0 + 28<i32>:byte], byte, word32)
	word32 s2_134 = a2
	word32 a5_130 = a5_36 & 1<32>
	branch (a5_36 & 1<32>) == 0<32> l23032FBE
l23032FB6:
	s2_134 = a2 + 4<i32>
	branch a2 >=u a2 + 4<i32> l230330A4
l230330A4:
	user_vAssertCalled(a4, mstatus, out a5_130)
	branch a5_130 != 0<32> l23032FC2
l230330AE:
	a3_128 = a3
l23032FBE:
	a3_128 = a3
	branch (a5_36 & 1<32>) == 0<32> l23033064
l23032FC2:
	a3_128 = vTaskSetTimeOutState(fp + -40<i32>, a4, a5_130, mstatus, out a4)
l23032FFA:
	word32 a5_68
	word32 a4_69 = vTaskEnterCritical(a4, mstatus, out a5_68)
	word32 a5_75
	word32 a0_73 = xStreamBufferSpacesAvailable(s0_132, a3_128, a4_69, a5_68, mstatus, out a5_75)
	s1_133 = a0_73
	branch a0_73 <u s2_134 l23032FCA
l23032FCA:
	word32 a4_81
	word32 a5_82
	word32 a3_89 = xTaskNotifyStateClear(0<32>, a3_128, a4_69, a5_75, mstatus, out a4_81, out a5_82)
	word32 s0_91 = Mem90[a5_82 + 20<i32>:word32]
	branch a5_82 == 0<32> l23032FD6
l23032FD2:
	word32 a5_721
	user_vAssertCalled(a4_81, mstatus, out a5_721)
l23032FD6:
	word32 a5_714
	Mem97[xTaskGetCurrentTaskHandle(out a5_714) + 20<i32>:word32] = s0_91
	word32 a4_102
	word32 a2_110
	word32 a4_111
	word32 a5_112
	word32 s2_717
	word32 s1_716
	word32 a5_715
	word32 s4_718
	word32 s5_719
	Mem124[xTaskNotifyWait(0<32>, 0<32>, 0<32>, vTaskExitCritical(a3_89, mstatus, out a4_102, out a5_715), a4_102, mstatus, s2, dwArgE8, out s1_716, out a2_110, out a4_111, out a5_112, out s2_717, out s3_116, out s4_718, out s5_719) + 20<i32>:word32] = 0<32>
	a1 = fp + -52<i32>
	word32 a0_126
	word32 a2_720
	s0_132 = xTaskCheckForTimeOut(fp + -40<i32>, fp + -52<i32>, a2_110, a4_111, a5_112, mstatus, out s1_133, out a0_126, out a2_720, out a3_128, out a4, out a5_130, out s2_134, out s4_135)
	branch a0_126 != 0<32> l23033010
l2303300C:
	a3_128 = vTaskExitCritical(a3_128, mstatus, out a4, out a5_130)
l23033010:
	branch s1_133 == 0<32> l23033064
l23033064:
	word32 a5_713
	word32 a0_157 = xStreamBufferSpacesAvailable(s0_132, a3_128, a4, a5_130, mstatus, out a5_713)
	s1_133 = a0_157
	branch a0_157 != 0<32> l23033014
l23033012:
l23033014:
	word32 a2_189
	word32 a5_173 = CONVERT(Mem172[s0_132 + 28<i32>:byte], byte, word32)
	word32 a5_174 = a5_173 & 1<32>
	branch (a5_173 & 1<32>) != 0<32> l23033084
l23033084:
	branch s1_133 <u s2_134 l23033070
l23033070:
	s1_180 = 0<32>
l23033088:
	word32 a3_736
	word32 s2_737
	word32 s3_738
	word32 a1_735
	word32 a0_734
	s0_132 = prvWriteBytesToBuffer(s0_132, s0_132, fp + -44<i32>, 4<32>, a4, a5_173 & 1<32>, mstatus, dwArgE8, out a0_734, out a1_735, out a2_189, out a3_736, out a4, out a5_174, out s2_737, out s3_738)
	s4_135 = a3
l2303301C:
	a2_189 = s3_116
	branch s1_133 <u s3_116 l230330B0
l230330B0:
	a2_189 = s1_133
l23033022:
l23033024:
	word32 a0_238
	word32 a5_243
	word32 s2_740
	word32 a2_739
	prvWriteBytesToBuffer(s0_132, s0_132, s4_135, a2_189, a4, a5_174, mstatus, dwArgE8, out a0_238, out a1, out a2_739, out a3_128, out a4, out a5_243, out s2_740, out s3_116)
	s1_180 = a0_238
	branch a0_238 == 0<32> l23033072
l23033030:
	word32 a5_264 = a5_243 + a4 - a3_128
	branch a5_264 <u a4 l23033040
l2303303E:
	a5_264 = a5_264 - a4
l23033040:
	branch a5_264 <u a4 l23033072
l23033046:
	word32 a5_271
	word32 a4_270 = vTaskSuspendAll(a4, out a5_271)
	branch a5_271 == 0<32> l2303305E
l2303304E:
	word32 s0_297
	word32 s1_729
	word32 a0_730
	word32 a2_731
	word32 s4_733
	word32 s2_732
	ra = xTaskGenericNotify(ra, a0_238, 0<32>, 0<32>, 0<32>, a4_270, mstatus, s4, dwLoc08, dwArg18, dwArgA4, dwArgC0, dwArgC4, dwArgE8, out s0_297, out s1_729, out a0_730, out a1, out a2_731, out a3_128, out a4_270, out a5_271, out s2_732, out s3_116, out s4_733, out mstatus)
	Mem308[s0_297 + 16<i32>:word32] = 0<32>
l2303305E:
	word32 s0_722
	word32 a2_724
	word32 s4_727
	word32 a0_723
	word32 a5_725
	word32 t3_728
	word32 a6_726
	xTaskResumeAll(a3_128, a4_270, a5_271, mstatus, dwArg0118, dwArg0158, out s0_722, out s1_180, out a0_723, out a2_724, out a3_128, out a4, out a5_725, out a6_726, out s4_727, out t3_728)
l23033072:
	s1Out = s1_180
	a0Out = s1_180
	a1Out = a1
	a3Out = a3_128
	a4Out = a4
	s3Out = s3_116
	mstatusOut = mstatus
	return ra
xStreamBufferSend_exit:


word32 xStreamBufferSendFromISR(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArgF8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __uart_rx_irq
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xStreamBufferSendFromISR_entry:
l230330B4:
	word32 s2_17 = a1
	word32 s0_100 = a0
	branch a1 == 0<32> l23033156
l23033156:
	word32 a5_371
	user_vAssertCalled(a4, mstatus, out a5_371)
	branch a0 != 0<32> l230330CE
l230330CC:
	branch a0 == 0<32> l2303315C
l2303315C:
	word32 a5_372
	user_vAssertCalled(a4, mstatus, out a5_372)
l230330CE:
	word32 a5_36 = CONVERT(Mem15[a0 + 28<i32>:byte], byte, word32)
	word32 s4_39 = a2
	branch (a5_36 & 1<32>) == 0<32> l230330DC
l230330D8:
	s4_39 = a2 + 4<i32>
l230330DC:
	word32 s1_133
	word32 a5_108
	word32 a0_52 = xStreamBufferSpacesAvailable(a0, a3, a4, a5_36 & 1<32>, mstatus, out a5_108)
	word32 dwArg54_197 = a2
	branch a0_52 != 0<32> l230330FA
l230330FA:
	word32 a2_103
	word32 a5_61 = CONVERT(Mem60[a0 + 28<i32>:byte], byte, word32)
	a5_108 = a5_61 & 1<32>
	branch (a5_61 & 1<32>) != 0<32> l23033144
l23033144:
	branch a0_52 <u s4_39 l230330E6
l23033148:
	word32 s3_377
	word32 a0_373
	word32 a3_376
	word32 a2_375
	word32 a1_374
	s0_100 = prvWriteBytesToBuffer(a0, a0, fp + -36<i32>, 4<32>, a4, a5_61 & 1<32>, mstatus, dwArgF8, out a0_373, out a1_374, out a2_375, out a3_376, out a4, out a5_108, out s2_17, out s3_377)
	a2_103 = a2
l23033102:
	a2_103 = a2
	branch a0_52 <u a2 l23033162
l23033162:
	a2_103 = a0_52
l23033108:
	dwArg54_197 = a2_103
l2303310A:
	word32 a2_379
	word32 a1_378
	word32 s2_380
	word32 a0_112
	word32 s3_123
	prvWriteBytesToBuffer(s0_100, s0_100, s2_17, a2_103, a4, a5_108, mstatus, dwArgF8, out a0_112, out a1_378, out a2_379, out a3, out a4, out a5_108, out s2_380, out s3_123)
	s1_133 = a0_112
	branch a0_112 == 0<32> l230330E8
l23033116:
	a5_108 = a5_108 + a4 - a3
	branch a5_108 <u a4 l23033126
l23033124:
	a5_108 = a5_108 - a4
l23033126:
	branch a5_108 <u a4 l230330E8
l2303312C:
	branch a5_108 == 0<32> l230330E8
l23033130:
	word32 s0_167
	ra = xTaskGenericNotifyFromISR(ra, a0_112, 0<32>, 0<32>, 0<32>, s3_123, a5_108, mstatus, dwLoc30, dwLoc2C, dwLoc08, dwArg14, dwArg54_197, out s0_167, out s1_133, out a3, out a4, out a5_108, out mstatus)
	Mem176[s0_167 + 16<i32>:word32] = 0<32>
l230330E6:
	s1_133 = 0<32>
l230330E8:
	0<32> = dwArg0128
	a0Out = s1_133
	a3Out = a3
	a4Out = a4
	a5Out = a5_108
	mstatusOut = mstatus
	return ra
xStreamBufferSendFromISR_exit:


word32 xStreamBufferReceive(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArgB4, word32 dwArgD0, word32 dwArgD4, word32 dwArgF8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start
//      vfs_uart_read
//      uart_ioctl_cmd_waimode
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +00B4:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a2 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xStreamBufferReceive_entry:
l23033166:
	word32 s3_104 = a1
	word32 s4_105 = a2
	word32 s5_106 = a3
	branch a1 == 0<32> l23033208
l23033208:
	user_vAssertCalled(a4, mstatus, out a5)
	branch a0 != 0<32> l23033182
l23033180:
	branch a0 == 0<32> l2303320E
l2303320E:
	user_vAssertCalled(a4, mstatus, out a5)
l23033182:
	word32 s1_123
	word32 s0_269
	word32 s0_125
	word32 s0_101
	word32 s2_103 = (CONVERT(Mem17[a0 + 28<i32>:byte], byte, word32) & 1<i32>) << 2<i32>
	s0_101 = s0
	branch a3 != 0<32> l230331BA
l230331BA:
	word32 a5_45
	word32 a4_46 = vTaskEnterCritical(a4, mstatus, out a5_45)
	s1_123 = Mem17[a4_46:word32]
	s0_125 = s0 + a5_45 - a4_46
	branch s0_125 <u a5_45 l230331CE
l230331CC:
	s0_125 = s0_125 - a5_45
l230331CE:
	branch s2_103 >=u s0_125 l23033236
l23033236:
	word32 a4_65
	word32 a5_66
	word32 a3_73 = xTaskNotifyStateClear(0<32>, a3, a4_46, a5_45, mstatus, out a4_65, out a5_66)
	word32 s1_75 = Mem17[a5_66 + 16<i32>:word32]
	branch a5_66 == 0<32> l23033244
l23033240:
	word32 a5_589
	user_vAssertCalled(a4_65, mstatus, out a5_589)
l23033244:
	word32 a5_586
	Mem81[xTaskGetCurrentTaskHandle(out a5_586) + 16<i32>:word32] = s1_75
	word32 a4_86
	word32 a5_587
	vTaskExitCritical(a3_73, mstatus, out a4_86, out a5_587)
	word32 s1_102
	word32 a2_588
	s0_101 = xTaskNotifyWait(0<32>, 0<32>, 0<32>, a3, a4_86, mstatus, dwLoc18, dwArgF8, out s1_102, out a2_588, out a4, out a5, out s2_103, out s3_104, out s4_105, out s5_106)
	Mem111[s1_102 + 16<i32>:word32] = 0<32>
	a1 = 0<32>
l230331D2:
	vTaskExitCritical(a3, mstatus, out a4, out a5)
l23033190:
	s1_123 = Mem116[a4:word32]
	s0_125 = s0_101 + a5 - a4
	branch s0_125 <u a5 l230331A0
l2303319E:
	s0_125 = s0_125 - a5
l230331A0:
	branch s2_103 <u s0_125 l230331D6
l230331D6:
	branch s2_103 != 0<32> l23033214
l23033214:
	word32 s4_156
	word32 s2_166
	word32 s5_168
	word32 a0_572
	word32 a1_573
	word32 a3_574
	s0_125 = prvReadBytesFromBuffer(s1_123, fp + -36<i32>, s2_103, s0_125, a4, a5, mstatus, out s1_123, out a0_572, out a1_573, out a3_574, out a4, out a5, out s2_166, out s3_104, out s4_156, out s5_168) - s2_166
	branch s4_156 >=u a5 l23033260
l23033260:
	s4_105 = a5
l2303322E:
	Mem177[s1_123:word32] = s5_168
	s4_105 = 0<32>
l230331DA:
	word32 a0_202
	word32 s4_575
	word32 a3_211
	prvReadBytesFromBuffer(s1_123, s3_104, s4_105, s0_125, a4, a5, mstatus, out s1_123, out a0_202, out a1, out a3_211, out a4, out a5, out s2_103, out s3_104, out s4_575, out s5_106)
	branch a0_202 == 0<32> l230331A4
l230331EA:
	word32 a5_226
	word32 a4_225 = vTaskSuspendAll(a4, out a5_226)
	branch a5_226 == 0<32> l23033202
l230331F2:
	word32 s1_248
	word32 a0_583
	word32 a2_584
	word32 s4_585
	word32 s0_582
	ra = xTaskGenericNotify(ra, a0_202, 0<32>, 0<32>, 0<32>, a4_225, mstatus, s0, dwArg08, dwArg28, dwArgB4, dwArgD0, dwArgD4, dwArgF8, out s0_582, out s1_248, out a0_583, out a1, out a2_584, out a3_211, out a4_225, out a5_226, out s2_103, out s3_104, out s4_585, out mstatus)
	Mem258[s1_248 + 20<i32>:word32] = 0<32>
l23033202:
	word32 a6_579
	word32 a0_576
	word32 a2_577
	word32 s4_580
	word32 a3_578
	word32 t3_581
	xTaskResumeAll(a3_211, a4_225, a5_226, mstatus, dwArg0128, dwArg0168, out s0_269, out s1_123, out a0_576, out a2_577, out a3_578, out a4, out a5, out a6_579, out s4_580, out t3_581)
l230331A4:
	s0_269 = 0<32>
l230331A6:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_123
	a0Out = s0_269
	a1Out = a1
	a2Out = dwArg0100
	a4Out = a4
	a5Out = a5
	s2Out = s2_103
	s3Out = s3_104
	s4Out = dwArg78
	s5Out = s5_106
	s8Out = s5
	mstatusOut = mstatus
	return ra
xStreamBufferReceive_exit:


word32 xStreamBufferReceiveFromISR(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg54, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __uart_tx_irq
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0014:[0..31] Stack +0054:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xStreamBufferReceiveFromISR_entry:
l23033264:
	word32 s3_102 = a1
	word32 s4_25 = a2
	branch a1 == 0<32> l230332E4
l230332E4:
	user_vAssertCalled(a4, mstatus, out a5)
	branch a0 != 0<32> l23033282
l23033280:
	branch a0 == 0<32> l230332EA
l230332EA:
	user_vAssertCalled(a4, mstatus, out a5)
l23033282:
	word32 s1_107 = Mem19[a4:word32]
	word32 s0_49 = s0 + a5 - a4
	word32 s2_50 = (CONVERT(Mem19[Mem19[a5 + 8<i32>:word32] + 28<i32>:byte], byte, word32) & 1<i32>) << 2<i32>
	branch s0_49 <u a5 l2303329C
l2303329A:
	s0_49 = s0_49 - a5
l2303329C:
	word32 s0_134
	branch s2_50 <u s0_49 l230332B8
l230332B8:
	branch s2_50 != 0<32> l230332F0
l230332F0:
	word32 s6_63 = Mem19[s1_107:int32]
	word32 s5_350
	word32 a3_349
	word32 s4_72
	word32 s2_82
	word32 a0_347
	word32 a1_348
	s0_49 = prvReadBytesFromBuffer(s1_107, fp + -36<i32>, s2_50, s0_49, a4, a5, mstatus, out s1_107, out a0_347, out a1_348, out a3_349, out a4, out a5, out s2_82, out s3_102, out s4_72, out s5_350) - s2_82
	branch s4_72 >=u a5 l23033312
l23033312:
	s4_25 = a5
l2303330A:
	Mem93[s1_107:word32] = s6_63
	s4_25 = 0<32>
l230332BC:
	word32 s2_353
	word32 a0_112
	word32 s5_128
	word32 s1_351
	word32 a1_352
	word32 s3_354
	word32 s4_355
	prvReadBytesFromBuffer(s1_107, s3_102, s4_25, s0_49, a4, a5, mstatus, out s1_351, out a0_112, out a1_352, out a3, out a4, out a5, out s2_353, out s3_354, out s4_355, out s5_128)
	s0_134 = a0_112
	branch a0_112 == 0<32> l230332A0
l230332CC:
	branch a5 == 0<32> l230332A2
l230332D0:
	word32 s1_155
	xTaskGenericNotifyFromISR(ra, a0_112, 0<32>, 0<32>, 0<32>, s5_128, a5, mstatus, dwLoc30, dwLoc2C, dwLoc08, dwArg14, dwArg54, out s0_134, out s1_155, out a3, out a4, out a5, out mstatus)
	Mem163[s1_155 + 20<i32>:word32] = 0<32>
l230332A0:
	s0_134 = 0<32>
l230332A2:
	0<32> = dwArg0128
	a0Out = s0_134
	a3Out = a3
	a4Out = a4
	a5Out = a5
	mstatusOut = mstatus
	return dwArgE4
xStreamBufferReceiveFromISR_exit:


word32 xStreamBufferIsEmpty(word32 a0, word32 a4, word32 a5, word32 mstatus, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_poll
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a2
// Trashed: a0 a2 a5 t3
// Preserved: sp
xStreamBufferIsEmpty_entry:
l23033316:
	branch a0 == 0<32> l23033324
l23033324:
	word32 a5_11
	user_vAssertCalled(a4, mstatus, out a5_11)
	word32 a0_18 = CONVERT(Mem7[Mem7[a5_11:word32] + 4<i32>:word32] - a5_11 <u 1<i32>, bool, word32)
	a2Out = dwArg24
	return a0_18
l23033318:
	word32 a0_24 = CONVERT(Mem0[Mem0[a5:word32] + 4<i32>:word32] - a5 <u 1<i32>, bool, word32)
	a2Out = a2
	return a0_24
xStreamBufferIsEmpty_exit:


word32 prvResetNextTaskUnblockTime.part.0(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskDelete
//      xTaskIncrementTick
//      xTaskResumeAll
// MayUse: 
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
prvResetNextTaskUnblockTime.part.0_entry:
l23033340:
	word32 a4_9 = Mem0[Mem0[Mem0[Mem0[0x4200E1FC<32>:int32] + 12<i32>:word32] + 12<i32>:word32] + 4<i32>:word32]
	Mem10[0x4200E21C<32>:word32] = a4_9
	a5Out = 0x4200E000<32>
	return a4_9
prvResetNextTaskUnblockTime.part.0_exit:


word32 prvInitialiseNewTask.isra.2(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 mstatus, word32 dwArg0128, ptr32 & t0Out, ptr32 & s0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskCreateStatic
//      xTaskCreate
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a4 a5 ra s0 s6 s7 t0
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
prvInitialiseNewTask.isra.2_entry:
l23033358:
	word32 a2_230
	word32 a1_229
	word32 a0_228
	word32 t1_227
	word32 a5_233
	word32 a3_231
	word32 a4_232
	word32 ra_45 = memset(ra, Mem5[a6 + 48<i32>:int32], 165<i32>, a2 << 2<u32>, out t1_227, out a0_228, out a1_229, out a2_230, out a3_231, out a4_232, out a5_233)
	word32 s7_49 = (a2 << 2<u32>) + 0xFFFFFFFC<32>
	word32 s2_36 = a4
	word32 s3_50 = Mem32[a6 + 48<i32>:int32] + s7_49
	branch a1 == 0<32> l23033420
l23033420:
	Mem52[a6 + 52<i32>:byte] = 0<8>
l23033398:
	word32 a1_53 = a1
	word32 a5_54 = a6 + 52<i32>
l230333A2:
	word32 a3_58 = CONVERT(Mem57[a1_53:byte], byte, word32)
	a5_54 = a5_54 + 1<32>
	Mem62[a5_54 + 4095<i32>:byte] = SLICE(a3_58, byte, 0)
	a1_53 = a1_53 + 1<32>
	branch a3_58 == 0<32> l230333B4
l230333B0:
	branch a1_53 != a1 + 16<i32> l230333A2
l230333B4:
	Mem66[a6 + 67<i32>:byte] = 0<8>
l230333B8:
	branch a4 <=u 0x1F<32> l230333C0
l230333BE:
	s2_36 = 0x1F<32>
l230333C0:
	Mem76[a6 + 44<i32>:word32] = s2_36
	Mem77[a6 + 80<i32>:word32] = s2_36
	Mem78[a6 + 84<i32>:word32] = 0<32>
	vListInitialiseItem(a6 + 4<i32>)
	vListInitialiseItem(a6 + 24<i32>)
	Mem82[a6 + 88<i32>:word32] = 0<32>
	Mem83[a6 + 16<i32>:word32] = a6
	Mem84[32<i32> - s2_36 + 24<i32>:word32] = a6
	Mem85[a6 + 36<i32>:word32] = a6
	Mem86[a6 + 68<i32>:word32] = 0<32>
	Mem87[a6 + 92<i32>:byte] = 0<8>
	word32 a0_108
	word32 t0_109 = fn23035800(s3_50 & -8<i32>, a0, a3, mstatus, out a0_108)
	Mem111[a0_108:word32] = a6
	branch a5 == 0<32> l2303340A
l23033406:
	Mem116[a5:word32] = a6
l2303340A:
	0<32> = dwArg0128
	t0Out = t0_109
	s0Out = dwArgE4
	a2Out = dwArgB8
	a4Out = 32<i32>
	a5Out = 0x1F<32>
	s6Out = a3
	s7Out = s7_49
	return ra_45
prvInitialiseNewTask.isra.2_exit:


word32 prvDeleteTCB(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg0148, word32 dwArg0158, word32 dwArg0188, word32 dwArg0198, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvIdleTask
//      vTaskDelete
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut: a2 a3 a4 a5 s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
prvDeleteTCB_entry:
l23033426:
	word32 a4_5 = CONVERT(Mem0[a0 + 93<i32>:byte], byte, word32)
	branch a4_5 == 0<32> l2303343E
l2303343E:
	word32 a5_19
	word32 s0_25
	word32 s1_93
	word32 a0_94
	word32 a1_95
	word32 a2_96
	word32 a3_97
	word32 a4_98
	word32 a6_99
	word32 s4_100
	word32 t3_101
	vPortFree(Mem10[a0 + 48<i32>:word32], a2, a5, mstatus, dwArg0148, dwArg0188, out s0_25, out s1_93, out a0_94, out a1_95, out a2_96, out a3_97, out a4_98, out a5_19, out a6_99, out s4_100, out t3_101)
l23033454_thunk_vPortFree:
	word32 a2_32
	word32 a3_33
	word32 a4_34
	word32 a5_35
	word32 s1_36
	word32 s0_41
	word32 s4_42
	word32 a0_102
	word32 a1_103
	word32 a6_104
	word32 t3_105
	vPortFree(s0_25, dwArg10, a5_19, mstatus, dwArg0158, dwArg0198, out s0_41, out s1_36, out a0_102, out a1_103, out a2_32, out a3_33, out a4_34, out a5_35, out a6_104, out s4_42, out t3_105)
	s1Out = s1_36
	a2Out = a2_32
	a3Out = a3_33
	a4Out = a4_34
	a5Out = a5_35
	s4Out = s4_42
	return s0_41
l2303342C:
	branch a4_5 == 1<32> l23033458
l23033458:
l23033458_thunk_vPortFree:
	word32 a2_45
	word32 a3_46
	word32 a4_47
	word32 a5_48
	word32 s1_49
	word32 s0_54
	word32 s4_55
	word32 a0_106
	word32 a1_107
	word32 a6_108
	word32 t3_109
	vPortFree(a0, a2, 1<32>, mstatus, dwArg0158, dwArg0198, out s0_54, out s1_49, out a0_106, out a1_107, out a2_45, out a3_46, out a4_47, out a5_48, out a6_108, out s4_55, out t3_109)
	s1Out = s1_49
	a2Out = a2_45
	a3Out = a3_46
	a4Out = a4_47
	a5Out = a5_48
	s4Out = s4_55
	return s0_54
l23033432:
	branch a4_5 != 2<32> l2303343A
l2303343A:
l2303343A_thunk_user_vAssertCalled:
	word32 a5_59
	word32 a2_58 = user_vAssertCalled(a4_5, mstatus, out a5_59)
	s1Out = s1
	a2Out = a2_58
	a3Out = a3
	a4Out = a4_5
	a5Out = a5_59
	s4Out = s4
	return s0
l23033438:
	s1Out = s1
	a2Out = a2
	a3Out = a3
	a4Out = a4_5
	a5Out = 2<32>
	s4Out = s4
	return s0
prvDeleteTCB_exit:


word32 prvAddCurrentTaskToDelayedList(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg48, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskDelay
//      vTaskPlaceOnEventList
//      vTaskPlaceOnUnorderedEventList
//      vTaskPlaceOnEventListRestricted
//      ulTaskNotifyTake
//      xTaskNotifyWait
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] Stack +0048:[0..31]
// LiveOut: a0 a1 a2 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
prvAddCurrentTaskToDelayedList_entry:
l2303345C:
	word32 s2_10 = Mem9[0x4200E228<32>:int32]
	word32 a5_161
	word32 a4_26
	branch uxListRemove(a3, a4, out a4_26, out a5_161) != 0<32> l230334A4
l23033488:
	a4_26 = Mem20[a3:word32]
	Mem37[~(1<32> << a2) & a3:word32] = a4_26
l230334A4:
	branch a0 == 0xFFFFFFFF<32> l230334FE
l230334FE:
	branch a1 == 0<32> l230334AA
l23033502:
	word32 s0_43 = Mem42[a1:word32]
l2303351A_thunk_vListInsertEnd:
	word32 a5_56
	word32 a0_55 = vListInsertEnd(a1 + 4<32>, a4_26, 0xFFFFFFFF<32>, out a5_56)
	s1Out = a0
	a0Out = a0_55
	a1Out = a1 + 4<32>
	a2Out = <invalid>
	a4Out = a4_26
	a5Out = a5_56
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_43
l230334AA:
	word32 s1_63 = a0 + s2_10
	Mem64[s1_63 + 4<i32>:word32] = 0xFFFFFFFF<32>
	branch s1_63 <u s2_10 l230334E2
l230334E2:
	word32 a0_66 = Mem64[0x4200E200<32>:int32]
	word32 s0_68 = Mem64[a1:word32]
l230334FA_thunk_vListInsert:
	word32 a4_81
	word32 a5_82
	word32 a0_79 = vListInsert(a0_66, dwArg48, a3, out a4_81, out a5_82)
	s1Out = s1_63
	a0Out = a0_79
	a1Out = a1_80
	a2Out = <invalid>
	a4Out = a4_81
	a5Out = a5_82
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_68
l230334B4:
	word32 s0_85 = Mem64[a1:word32]
	word32 a4_91
	word32 a5_162
	word32 a0_89 = vListInsert(Mem64[0x4200E1FC<32>:int32], a2, a3, out a4_91, out a5_162)
	word32 a5_94 = Mem64[a4_91:word32]
	branch s1_63 >=u a4_91 l230334D4
l230334D2:
	Mem95[s1_63:word32] = a5_94
l230334D4:
	s1Out = s1_63
	a0Out = a0_89
	a1Out = a1_90
	a2Out = <invalid>
	a4Out = a4_91
	a5Out = a5_94
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_85
prvAddCurrentTaskToDelayedList_exit:


word32 vTaskEnterCritical.part.7(word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvAddNewTaskToReadyList
//      prvIdleTask
//      vTaskDelete
//      eTaskGetState
//      xTaskResumeAll
//      vTaskSetTimeOutState
//      xTaskCheckForTimeOut
//      vTaskEnterCritical
//      ulTaskNotifyTake
//      xTaskNotifyWait
//      xTaskNotifyStateClear
//      bloop_evt_set_async
// MayUse:  a4:[0..31]
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
vTaskEnterCritical.part.7_entry:
l2303351E:
	word32 a5_7 = Mem0[Mem0[a4:word32]:word32]
	word32 a4_8 = Mem0[a5_7 + 68<i32>:word32]
	Mem10[a5_7 + 0x45<32>:word32] = a4_8
	a5Out = a5_7 + 1<32>
	return a4_8
vTaskEnterCritical.part.7_exit:


word32 vTaskExitCritical.part.8(word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvAddNewTaskToReadyList
//      prvIdleTask
//      vTaskDelete
//      eTaskGetState
//      xTaskResumeAll
//      vTaskSetTimeOutState
//      xTaskCheckForTimeOut
//      vTaskExitCritical
//      ulTaskNotifyTake
//      xTaskNotifyWait
//      xTaskNotifyStateClear
//      bloop_evt_set_async
// MayUse:  a3:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
vTaskExitCritical.part.8_entry:
l23033532:
	word32 a5_8 = Mem0[a3:word32]
	word32 a4_9 = Mem0[a5_8 + 68<i32>:word32]
	Mem11[a5_8 + 0x43<32>:word32] = a4_9
	word32 a3_12 = Mem11[a5_8 + 0x43<32>:word32]
	branch a5_8 != 0xFFFFFFFF<32> l2303354C
l23033548:
	__csrrs(mstatus, 8<32>)
l2303354C:
	a4Out = a4_9
	a5Out = a5_8 + 0xFFFFFFFF<32>
	return a3_12
vTaskExitCritical.part.8_exit:


word32 prvAddNewTaskToReadyList(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskCreateStatic
//      xTaskCreate
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s2 s3 s5 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
prvAddNewTaskToReadyList_entry:
l2303354E:
	__csrrc(mstatus, 8<32>)
	branch a5 == 0<32> l23033574
l23033570:
	word32 a5_235
	a4 = vTaskEnterCritical.part.7(a4, out a5_235)
l23033574:
	word32 a1_76
	word32 a5_30 = Mem17[a4:word32]
	word32 a4_32 = a4 + 1<32>
	Mem33[a4_32:word32] = a5_30
	word32 s1_120 = Mem33[a4_32:word32]
	branch a4_32 == 0<32> l2303361E
l2303361E:
	Mem36[s1_120:word32] = a0
	branch a4_32 == 1<32> l23033638
l23033638:
	word32 s4_42 = 0x42012C08<32>
l23033648:
	vListInitialise(s4_42)
	s4_42 = s4_42 + 0x14<32>
	branch s4_42 != 0x42012E88<32> l23033648
l23033654:
	vListInitialise(0x42012E88<32>)
	vListInitialise(0x42012E9C<32>)
	vListInitialise(0x42012EB0<32>)
	vListInitialise(0x42012ED8<32>)
	vListInitialise(0x42012EC4<32>)
	Mem73[0x4200E1FC<32>:word32] = 0x42012E88<32>
	Mem74[0x4200E200<32>:word32] = 0x42012E9C<32>
	s5 = 0x42012E88<32>
	a1_76 = Mem74[a0 + 44<i32>:int32]
l2303362A:
	a1_76 = Mem36[a0 + 44<i32>:int32]
l2303358E:
	a1_76 = Mem33[a0 + 44<i32>:int32]
	branch a5_30 == 0<32> l2303360A
l2303360A:
	s1_120 = Mem33[a5_30:word32]
	branch a1_76 <u Mem33[a5_30 + 44<i32>:word32] l23033596
l23033612:
	Mem84[s1_120:word32] = a0
l23033596:
l2303359E:
	word32 a3_126 = Mem94[a2:word32]
	word32 a5_107 = 1<32> << a1_76 | Mem94[0x4200E218<32>:int32]
	Mem110[a0 + 72<i32>:word32] = a2 + 1<32>
	Mem115[a5_107:word32] = 0x4200E218<32>
	Mem116[a2 + 1<32>:word32] = a3_126
	word32 a5_118
	vListInsertEnd(a0 + 4<i32>, 0x4200E218<32>, a5_107, out a5_118)
	word32 a4_127 = 0x4200E218<32>
	branch a5_118 == 0<32> l230335E4
l230335DE:
	s1_120 = Mem116[a5_118:word32]
	a5_118 = Mem116[a5_118 + 68<i32>:word32]
	branch a5_118 != 0<32> l23033618
l23033618:
	a3_126 = vTaskExitCritical.part.8(a3_126, mstatus, out a4_127, out a5_118)
l230335E4:
	branch a5_118 == 0<32> l230335F8
l230335E8:
	s1_120 = Mem116[a4_127:word32]
	a5_118 = Mem116[a0 + 44<i32>:int32]
	a4_127 = Mem116[a4_127 + 44<i32>:word32]
	branch a4_127 >=u a5_118 l230335F8
l230335F4:
	__syscall()
l230335F8:
	s0Out = s1
	s1Out = s1_120
	a3Out = a3_126
	a4Out = a4_127
	a5Out = a5_118
	s2Out = a0
	s3Out = 0x42012C08<32>
	s5Out = s5
	return dwArg88
prvAddNewTaskToReadyList_exit:


void prvIdleTask(word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] s2:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
prvIdleTask_exit:
prvIdleTask_entry:
l230336AE:
	word32 s4_33 = 0x42012C08<32>
l2303373A:
	branch a5 != 0<32> l230336F6
l230336F6:
	__csrrc(mstatus, 8<32>)
	branch Mem36[0x4200E224<32>:int32] == 0<32> l23033704
l23033700:
	word32 a5_162
	a4 = vTaskEnterCritical.part.7(a4, out a5_162)
l23033704:
	word32 a4_160
	word32 a5_161
	uxListRemove(a3, a4, out a4_160, out a5_161)
	word32 a5_60 = Mem36[0x4200E204<32>:int32]
	Mem62[0x4200E204<32>:word32] = a5_60 + 0xFFFFFFFF<32>
	Mem65[a5_60 + 0xFFFFFFFE<32>:word32] = Mem62[a5_60 + 0xFFFFFFFF<32>:word32]
	word32 a5_67 = Mem65[0x4200E224<32>:int32]
	branch a5_67 == 0<32> l23033734
l23033728:
	a5_67 = Mem65[Mem65[0x4200E1F8<32>:int32] + 68<i32>:word32]
	branch a5_67 == 0<32> l23033734
l23033730:
	word32 a4_163
	vTaskExitCritical.part.8(a3, mstatus, out a4_163, out a5_67)
l23033734:
	prvDeleteTCB(s1, a2, a5_67, mstatus, s2, dwArg0118, dwArg0128, dwArg0158, dwArg0168, out s1, out a2, out a3, out a4, out a5, out s4_33)
l2303373E:
	a5 = Mem36[s4_33:int32]
	branch a5 <=u 1<32> l2303374A
l23033746:
	__syscall()
l2303374A:
	vApplicationIdleHook()


word32 xTaskCreateStatic(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArgE8, word32 dwArg01B4, ptr32 & tpOut, ptr32 & t0Out, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
//      bl_ble_sync_start
//      ota_cmd
//      vTaskStartScheduler
//      xTimerCreateTimerTask
//      hal_wifi_start_firmware_task
//      looprt_start
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +00E8:[0..31] Stack +01B4:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s5 s6 s7 t0 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
xTaskCreateStatic_entry:
l23033750:
	word32 s1_11 = a5
	branch a5 == 0<32> l230337B2
l230337B2:
	word32 a5_306
	user_vAssertCalled(a4, mstatus, out a5_306)
	a6 = dwArg24
	a2 = dwArg04
	branch a6 != 0<32> l23033760
l2303375E:
	branch a6 == 0<32> l230337CC
l230337CC:
	word32 a5_307
	word32 a2_201 = user_vAssertCalled(a4, mstatus, out a5_307)
	branch a4 == 96<i32> l230337E0
l230337DC:
	word32 a5_310
	a2_201 = user_vAssertCalled(a4, mstatus, out a5_310)
l230337E0:
	tpOut = tp
	t0Out = t0
	s0Out = dwArg01B4
	s1Out = a5
	a0Out = 0<32>
	a2Out = a2_201
	a3Out = a3
	a4Out = a4
	a5Out = 0<32>
	s2Out = s2
	s5Out = s5
	s6Out = s6
	s7Out = s7
	return ra
l23033760:
	branch a6 != 96<i32> l23033796
l23033796:
	word32 a5_308
	user_vAssertCalled(a4, mstatus, out a5_308)
	a2 = dwArg04
l2303376C:
l2303376E:
	word32 s0_123 = dwArg01B4
	word32 a5_121 = 0<32>
	branch a5 == 0<32> l2303378A
l23033772:
	Mem84[dwArg01B4 + 93<i32>:byte] = 2<8>
	Mem85[a5 + 48<i32>:word32] = dwArg01B4
	word32 a2_96
	word32 a4_98
	word32 a5_99
	word32 s0_102
	ra = prvInitialiseNewTask.isra.2(ra, a0, a1, a2, a3, a4, fp + -20<i32>, dwArg01B4, mstatus, dwArgE8, out t0, out s0_102, out a2_96, out a4_98, out a5_99, out s6, out s7)
	word32 s3_309
	tp = prvAddNewTaskToReadyList(s0_102, a2_96, a4_98, a5_99, mstatus, out s0_123, out s1_11, out a3, out a4, out a5_121, out s2, out s3_309, out s5)
	a2 = dwArg01B4
l2303378A:
	tpOut = tp
	t0Out = t0
	s0Out = s0_123
	s1Out = s1_11
	a0Out = a5_121
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_121
	s2Out = s2
	s5Out = s5
	s6Out = s6
	s7Out = s7
	return ra
xTaskCreateStatic_exit:


word32 xTaskCreate(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start_background
//      ble_controller_init
//      k_work_q_start
//      tcpip_init
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 ra s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
xTaskCreate_entry:
l230337F0:
	word32 a0_131
	word32 a0_36
	word32 a5_41
	word32 a1_197
	word32 a2_198
	word32 a6_199
	word32 s4_200
	word32 s8_201
	word32 s3_125
	word32 s2_124
	word32 s1_123
	word32 a4_119
	word32 a3_118
	pvPortMalloc(ra, s1, a2 << 2<u32>, a3, a4, a5, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_123, out a0_36, out a1_197, out a2_198, out a3_118, out a4_119, out a5_41, out a6_199, out s2_124, out s3_125, out s4_200, out s8_201)
	branch a0_36 == 0<32> l2303385E
l2303385E:
	a0_131 = 0xFFFFFFFF<32>
l2303381A:
	word32 a0_54
	word32 a2_56
	word32 a5_59
	word32 s1_62
	word32 s4_65
	word32 a1_202
	word32 a3_203
	word32 a4_204
	word32 a6_205
	word32 s8_206
	pvPortMalloc(ra, a0_36, 96<i32>, a3_118, a4_119, a5_41, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_62, out a0_54, out a1_202, out a2_56, out a3_203, out a4_204, out a5_59, out a6_205, out s2_124, out s3_125, out s4_65, out s8_206)
	branch a0_54 == 0<32> l23033862
l23033862:
	word32 s0_207
	word32 a0_208
	word32 a1_209
	word32 a2_210
	word32 a5_211
	word32 a6_212
	word32 s4_213
	word32 t3_214
	vPortFree(s1_62, a2_56, a5_59, mstatus, dwArg0128, dwArg0168, out s0_207, out s1_123, out a0_208, out a1_209, out a2_210, out a3_118, out a4_119, out a5_211, out a6_212, out s4_213, out t3_214)
	a0_131 = 0xFFFFFFFF<32>
l23033828:
	Mem90[s1_62 + 48<i32>:word32] = a0_54
	Mem91[a0_54 + 93<i32>:byte] = 0<8>
	word32 a2_95
	word32 a4_97
	word32 a5_98
	word32 s0_101
	word32 t0_215
	word32 s6_216
	word32 s7_217
	ra = prvInitialiseNewTask.isra.2(ra, s3_125, s4_65, s2_124, a3, a4, a5, a0_54, mstatus, dwArgF8, out t0_215, out s0_101, out a2_95, out a4_97, out a5_98, out s6_216, out s7_217)
	word32 s0_218
	word32 a5_219
	word32 s5_220
	prvAddNewTaskToReadyList(s0_101, a2_95, a4_97, a5_98, mstatus, out s0_218, out s1_123, out a3_118, out a4_119, out a5_219, out s2_124, out s3_125, out s5_220)
	a0_131 = 1<32>
l23033848:
	0<32> = dwArg0128
	s1Out = s1_123
	a0Out = a0_131
	a3Out = a3_118
	a4Out = a4_119
	s2Out = s2_124
	s3Out = s3_125
	return ra
xTaskCreate_exit:


word32 vTaskDelete(word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
//      dfl_entry
//      ble_controller_deinit
//      k_thread_delete
//      __bl_ble_sync_task
//      bl_ble_sync_stop
//      tftp_ota_thread
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp tp
vTaskDelete_entry:
l2303386C:
	__csrrc(mstatus, 8<32>)
	word32 s0_15 = a0
	branch a5 == 0<32> l2303388E
l2303388A:
	word32 a5_295
	a4 = vTaskEnterCritical.part.7(a4, out a5_295)
l2303388E:
	branch a0 == 0<32> l23033972
l23033972:
	s0_15 = Mem13[0x4200E1F8<32>:int32]
l23033898:
	word32 s3_29 = s0_15 + 4<i32>
	word32 a5_38
	word32 a4_37
	branch uxListRemove(a3, a4, out a4_37, out a5_38) != 0<32> l230338BE
l230338A4:
	a4_37 = a3 * 0x14<32>
	a5_38 = Mem13[a3 * 0x14<32> + 0x42012C08<32>:word32]
	branch a5_38 == 0<32> l2303393A
l2303393A:
	a4_37 = Mem13[a2:word32]
	a5_38 = ~(1<32> << a3) & a2
	Mem57[a5_38:word32] = a4_37
l230338BE:
	word32 s0_111 = Mem59[a5_38 + 40<i32>:word32]
	branch a5_38 == 0<32> l230338CA
l230338C2:
	word32 a5_296
	uxListRemove(a3, a4_37, out a4_37, out a5_296)
l230338CA:
	word32 a5_119
	word32 a4_120
	word32 a5_70 = Mem59[a4_37:word32]
	word32 a3_107 = Mem59[0x4200E1F8<32>:int32]
	word32 a4_75 = a4_37 + 1<32>
	Mem76[a4_75:word32] = a5_70
	branch a3_107 == s0_111 l23033954
l23033954:
	word32 a5_297
	vListInsertEnd(s3_29, a4_75, a5_70, out a5_297)
	a5_119 = Mem76[a4_75:word32]
	Mem88[a4_75 + 1<32>:word32] = a5_119
	a4_120 = a4_75 + 1<32>
l230338E0:
	word32 a5_90 = Mem76[a4_75:word32]
	Mem93[a4_75 + 0xFFFFFFFF<32>:word32] = a5_90
	word32 a5_301
	word32 s1_298
	word32 a2_299
	word32 a4_300
	word32 s4_302
	s0_111 = prvDeleteTCB(s0_111, a2, a5_90, mstatus, dwLoc10, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out s1_298, out a2_299, out a3_107, out a4_300, out a5_301, out s4_302)
	branch Mem93[Mem93[0x4200E1FC<32>:int32]:word32] == 0<32> l2303392E
l2303392E:
	Mem121[0x4200E21C<32>:word32] = 0xFFFFFFFF<32>
	a5_119 = 0x4200E000<32>
	a4_120 = 0xFFFFFFFF<32>
l23033900:
	a4_120 = prvResetNextTaskUnblockTime.part.0(out a5_119)
l23033904:
	branch a5_119 == 0<32> l23033914
l23033908:
	a5_119 = Mem125[Mem125[0x4200E1F8<32>:int32] + 68<i32>:word32]
	branch a5_119 == 0<32> l23033914
l23033910:
	vTaskExitCritical.part.8(a3_107, mstatus, out a4_120, out a5_119)
l23033914:
	branch a5_119 == 0<32> l23033920
l23033918:
	a5_119 = Mem125[0x4200E1F8<32>:int32]
	branch a5_119 == s0_111 l23033978
l23033978:
	word32 a5_143 = Mem125[0x4200E210<32>:int32]
	branch a5_143 != 0<32> l23033994
l23033994:
	user_vAssertCalled(a4_120, mstatus, out a5_143)
	__syscall()
l23033982:
	__syscall()
l23033986:
	a3Out = <invalid>
	a4Out = <invalid>
	a5Out = a5_143
	return <invalid>
l23033920:
	a3Out = <invalid>
	a4Out = <invalid>
	a5Out = a5_119
	return <invalid>
vTaskDelete_exit:


word32 eTaskGetState(word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskGetInfo
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
eTaskGetState_entry:
l2303399E:
	branch a0 == 0<32> l23033A4A
l23033A4A:
	user_vAssertCalled(a4, mstatus, out a5)
l230339B0:
	word32 s1_166 = Mem15[a4:word32]
	word32 a0_146 = 0<32>
	branch a4 == a0 l23033A1A
l230339C0:
	__csrrc(mstatus, 8<32>)
	branch a5 == 0<32> l230339D4
l230339D0:
	word32 a5_190
	vTaskEnterCritical.part.7(a4, out a5_190)
l230339D4:
	word32 a5_160 = 0x4200E000<32>
	a4 = 0x4200E000<32>
	s3 = Mem15[0x4200E1FC<32>:int32]
	word32 s4_39 = Mem15[0x4200E200<32>:int32]
	word32 s0_42 = Mem15[a0 + 20<i32>:int32]
	branch true l23033A2A
l23033A2A:
	s1_166 = Mem15[0x4200E000<32>:word32]
	a5_160 = Mem15[0x4200E044<32>:word32]
	branch a5_160 == 0<32> l230339EC
l23033A30:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_160)
	branch s0_42 != s3 l230339F0
l230339EC:
	branch s0_42 == s3 l23033A38
l230339F0:
	branch s0_42 == s4_39 l23033A38
l23033A38:
	a0Out = 2<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5_160
	s2Out = <invalid>
	s3Out = s3
	s4Out = <invalid>
	return s1_166
l230339F4:
	a5 = 0x42012EC4<32>
	branch s0_42 == 0x42012EC4<32> l23033A50
l23033A50:
	a4 = Mem15[a0 + 40<i32>:int32]
	a0_146 = 2<32>
	branch a4 != 0<32> l23033A1A
l23033A58:
	a5 = CONVERT(CONVERT(Mem15[a0 + 92<i32>:byte], byte, word32) != 0xFFFFFFFF<32>, bool, word32)
	a0_146 = a5 + 2<i32>
l23033A00:
	a5 = 0x42012ED8<32>
	branch s0_42 == 0x42012ED8<32> l23033A68
l23033A68:
	a0_146 = 4<32>
l23033A0C:
	a5 = 0<32> - CONVERT(s0_42 <u 1<i32>, bool, word32)
	a0_146 = (a5 & 3<i32>) + 1<32>
l23033A1A:
	a0Out = a0_146
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = <invalid>
	s3Out = s3
	s4Out = <invalid>
	return s1_166
eTaskGetState_exit:


void vTaskStartScheduler(word32 ra, word32 gp, word32 a6, word32 fcsr, word32 mstatus, word32 mie, word32 mtvec, word32 dwArg04, word32 dwArg44, word32 dwArg64, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0174, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a6:[0..31] fcsr:[0..31] gp:[0..31] mie:[0..31] mstatus:[0..31] mtvec:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0174:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
vTaskStartScheduler_entry:
l23033A6C:
	word32 a0_23
	word32 a3_33
	word32 a4_34
	word32 tp_174
	word32 t0_175
	word32 s0_176
	word32 s1_177
	word32 a2_178
	word32 a5_179
	word32 s2_180
	word32 s5_181
	word32 s6_182
	word32 s7_183
	word32 ra_36 = xTaskCreateStatic(ra, 0x230336AE<32>, 0x2307B61C<32>, dwArg64, 0<32>, 0<32>, vApplicationGetIdleTaskMemory(fp + 0xFFFFFFE4<32>, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>), a6, mstatus, 0<32>, dwArg04, dwArgC8, dwArg0194, out tp_174, out t0_175, out s0_176, out s1_177, out a0_23, out a2_178, out a3_33, out a4_34, out a5_179, out s2_180, out s5_181, out s6_182, out s7_183)
	branch a0_23 == 0<32> l23033ACA
l23033A9E:
	word32 a0_45
	word32 a4_49
	word32 t0_65
	word32 tp_58 = xTimerCreateTimerTask(ra_36, a3_33, a4_34, mstatus, 0<32>, dwLoc08, dwArg44, dwArgA8, dwArgD8, dwArg0174, out t0_65, out a0_45, out a4_49)
	branch a0_45 != 1<32> l23033AD0
l23033AD0:
	branch a0_45 != 0xFFFFFFFF<32> l23033ACA
l23033AD6:
	word32 a5_184
	user_vAssertCalled(a4_49, mstatus, out a5_184)
	return
l23033AA8:
	__csrrc(mstatus, 8<32>)
	Mem75[0x4200E21C<32>:word32] = 0xFFFFFFFF<32>
	Mem78[0x4200E224<32>:word32] = a0_45
	Mem79[0x4200E228<32>:word32] = 0<32>
	xPortStartScheduler(gp, tp_58, t0_65, 0x4200E000<32>, fcsr, mstatus, mie, mtvec)
l23033ACA:
	return
vTaskStartScheduler_exit:


word32 vTaskSuspendAll(word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
//      xEventGroupSetBits
//      vEventGroupDelete
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      xStreamBufferSend
//      xStreamBufferReceive
//      prvTimerTask
//      pvPortMalloc
//      vPortFree
// MayUse:  a4:[0..31]
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
vTaskSuspendAll_entry:
l23033AE0:
	word32 a5_6 = Mem0[a4:word32]
	Mem8[a4 + 1<32>:word32] = a5_6
	a5Out = a5_6
	return a4 + 1<32>
vTaskSuspendAll_exit:


word32 xTaskGetTickCount(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_init
//      bl_flash_config_update
//      log_buf_out
//      stateConnectedIPNoEnter
//      stateGlobalGuard_scan_beacon
//      stateDisconnect_enter
//      wifi_mgmr_start
//      sniffer_cb
//      wifi_mgmr_cli_scanlist
//      wifi_mgmr_scan_ap_all
//      bl_send_cfg_task_req
//      tcpip_stack_input
//      wifi_tx
//      bl_irq_bottomhalf
//      k_now_ms
//      k_timer_start
//      __bl_ble_sync_task
//      __recv_event
//      write_data
//      __ble_bytes_send
//      read_data
//      bl_ble_sync_start
//      __malloc
//      __free
//      pro_trans_read
//      ef_get_env_blob
//      ef_set_env
//      prvTimerTask
//      bl_dma_IRQHandler
//      bl_dma_irq_register
//      bl_dma_init
//      _irq_num_check.part.0
//      bl_irq_register
//      bl_irq_unregister
//      wait_trng4feed
//      sec_trng_IRQHandler
//      dev_uart_init
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      hal_board_cfg
//      bl_tsen_adc_get
//      _cb_led_trigger
//      _led_bloop_msg
//      _led_bloop_evt
//      loopset_led_trigger
//      sys_arch_mbox_fetch
//      sys_mutex_lock
//      sys_now
//      file_info
//      dirent_file
//      romfs_opendir
//      romfs_stat
//      romfs_open
//      romfs_register
//      rxl_cntrl_evt
//      coex_wifi_pta_forece_enable
//      mm_cfg_element_keepalive_timestamp_update
//      apm_sta_connect_timeout_ind_handler
//      bl_mtd_write
//      bloop_timer_configure
//      bloop_timer_repeat_reconfigure
//      bloop_run
//      bloop_status_dump
//      bl_sys_time_sync_state
//      bl_sha_mutex_take
//      bl_sha_mutex_give
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
xTaskGetTickCount_entry:
l23033AF0:
	word32 a0_5 = Mem0[0x4200E228<32>:int32]
	a5Out = 0x4200E000<32>
	return a0_5
xTaskGetTickCount_exit:


word32 xTaskGetTickCount2(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_now_ms
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
xTaskGetTickCount2_entry:
l23033AFA:
	word32 a5_7 = Mem0[0x4200E220<32>:int32]
	Mem9[Mem0[0x4200E228<32>:int32]:word32] = a0
	Mem12[a5_7:word32] = a1
	return 1<32>
xTaskGetTickCount2_exit:


word32 xTaskGetTickCountFromISR(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_init
//      bl_flash_config_update
//      log_buf_out
//      bl_send_cfg_task_req
//      __bl_ble_sync_task
//      __recv_event
//      write_data
//      __ble_bytes_send
//      read_data
//      bl_ble_sync_start
//      __malloc
//      __free
//      pro_trans_read
//      ef_get_env_blob
//      ef_set_env
//      bl_dma_IRQHandler
//      bl_dma_irq_register
//      bl_dma_init
//      _irq_num_check.part.0
//      bl_irq_register
//      bl_irq_unregister
//      wait_trng4feed
//      sec_trng_IRQHandler
//      dev_uart_init
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      hal_board_cfg
//      bl_tsen_adc_get
//      _cb_led_trigger
//      _led_bloop_msg
//      _led_bloop_evt
//      loopset_led_trigger
//      file_info
//      dirent_file
//      romfs_opendir
//      romfs_stat
//      romfs_open
//      romfs_register
//      bl_mtd_write
//      bloop_run
//      bl_sha_mutex_take
//      bl_sha_mutex_give
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
xTaskGetTickCountFromISR_entry:
l23033B12:
	word32 a0_5 = Mem0[0x4200E228<32>:int32]
	a5Out = 0x4200E000<32>
	return a0_5
xTaskGetTickCountFromISR_exit:


word32 xTaskIncrementTick(word32 s0, word32 a4, word32 mstatus, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskResumeAll
// MayUse:  a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s9 t3 tp
// Preserved: s8 sp
xTaskIncrementTick_entry:
l23033B1C:
	word32 a2_32
	word32 a4_114
	word32 s2_37
	word32 a3_162
	word32 a0_29 = bl_sys_time_sync_state(fp + -52<i32>, a4, mstatus, dwLoc08, out a2_32, out a3_162, out a4_114, out s2_37)
	word32 s1_150 = a0_29
	branch a0_29 == 0<32> l23033B64
l23033B3E:
	branch Mem26[0x4200E210<32>:int32] == 0<32> l23033B80
l23033B80:
	word32 s3_45 = Mem26[0x4200E228<32>:int32]
	Mem47[0x4200E228<32>:word32] = s3_45 + 1<32>
	s3 = s3_45 + 1<32>
	branch s3_45 != 1<32> l23033BE6
l23033B96:
	s2_37 = 0x4200E1FC<32>
	branch Mem47[Mem47[0x4200E1FC<32>:int32]:word32] != 0<32> l23033CB6
l23033CB6:
	word32 a5_410
	a2_32 = user_vAssertCalled(a4_114, mstatus, out a5_410)
l23033BA8:
	a3_162 = Mem47[0x4200E1FC<32>:int32]
	word32 a4_59 = Mem47[a2_32:word32]
	Mem61[0x4200E1FC<32>:word32] = a2_32
	Mem62[a3_162:word32] = a4_59
	Mem65[a4_59 + 1<32>:word32] = Mem62[a4_59:word32]
	a4_114 = a4_59 + 1<32>
	branch Mem65[Mem65[0x4200E1FC<32>:int32]:word32] != 0<32> l23033BE2
l23033BE2:
	word32 a5_411
	a4_114 = prvResetNextTaskUnblockTime.part.0(out a5_411)
l23033BE6:
l23033BD2:
	Mem75[0x4200E21C<32>:word32] = 0xFFFFFFFF<32>
l23033BEE:
	branch s3_45 + 1<32> <u Mem77[0x4200E21C<32>:int32] l23033C80
l23033C80:
	s1_150 = 0<32>
l23033BF6:
	s1_150 = 0<32>
	s2_37 = 0x4200E1FC<32>
l23033C16:
	branch Mem98[Mem98[0x4200E1FC<32>:int32]:word32] == 0<32> l23033C78
l23033C1E:
	word32 a5_106 = Mem102[s0 + 12<i32>:word32]
	word32 s0_107 = Mem102[a5_106 + 4<i32>:word32]
	branch s3_45 + 1<32> <u a5_106 l23033CB0
l23033CB0:
	Mem112[0x4200E21C<32>:word32] = a5_106
l23033C32:
	word32 a4_116
	word32 a5_117
	uxListRemove(a3_162, a4_114, out a4_116, out a5_117)
	branch a5_117 == 0<32> l23033C42
l23033C3E:
	word32 a4_413
	uxListRemove(a3_162, a4_116, out a4_413, out a5_117)
l23033C42:
	a4_114 = Mem102[a3_162:word32]
	word32 a5_134 = 1<32> << a5_117 | a3_162
	Mem140[a5_134:word32] = a4_114
	word32 a5_412
	vListInsertEnd(s0_107 + 4<i32>, a4_114, a5_134, out a5_412)
	s0 = Mem140[a4_114 + 44<i32>:word32]
	branch a4_114 <u Mem140[Mem140[0x4200E1F8<32>:int32] + 44<i32>:word32] l23033C16
l23033C6E:
	s1_150 = 1<32>
	branch Mem140[Mem140[0x4200E1FC<32>:int32]:word32] != 0<32> l23033C1E
l23033C78:
	Mem156[0x4200E21C<32>:word32] = 0xFFFFFFFF<32>
l23033C92:
	a3_162 = 1<32>
	branch Mem160[a4_114 * 0x14<32> + 0x42012C08<32>:int32] <=u 1<32> l23033B58
l23033CAC:
	s1_150 = 1<32>
l23033B48:
	Mem182[a4_114 + 1<32>:word32] = Mem26[a4_114:word32]
	s1_150 = 0<32>
	a4_114 = a4_114 + 1<32>
l23033B58:
	branch Mem184[0x4200E22C<32>:int32] == 0<32> l23033B64
l23033B62:
	s1_150 = 1<32>
l23033B64:
	0<32> = dwArg0198
	s1Out = s1_150
	a0Out = s1_150
	a3Out = a3_162
	a4Out = a4_114
	s2Out = s2_37
	s3Out = s3
	s4Out = dwLoc14
	return dwArg0158
xTaskIncrementTick_exit:


word32 xTaskResumeAll(word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s4Out, ptr32 & t3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
//      xEventGroupSetBits
//      vEventGroupDelete
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      xStreamBufferSend
//      xStreamBufferReceive
//      vTaskDelay
//      vTaskGetInfo
//      uxTaskGetSystemState
//      prvTimerTask
//      pvPortMalloc
//      vPortFree
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: a1 s2 s3 s5 s6 s7 s8 s9 sp
xTaskResumeAll_entry:
l23033CBC:
	branch a5 == 0<32> l23033DFC
l23033DFC:
	user_vAssertCalled(a4, mstatus, out a5)
l23033CE0:
	__csrrc(mstatus, 8<32>)
	word32 s0_113 = Mem24[a5:word32]
	branch a5 == 0<32> l23033CF4
l23033CF0:
	a4 = vTaskEnterCritical.part.7(a4, out a5)
l23033CF4:
	word32 a0_148
	word32 a5_147 = a5 + 0xFFFFFFFF<32>
	Mem43[a5_147:word32] = Mem24[a5:word32]
	word32 s1_111 = Mem43[a5_147:word32]
	branch a5_147 != 0<32> l23033DCA
l23033CFE:
	a5_147 = Mem43[0x4200E204<32>:int32]
	branch a5_147 == 0<32> l23033DCA
l23033D08:
	word32 s6_50 = 0<32>
	word32 s3_131 = 0x4200E22C<32>
l23033D2C:
	branch Mem58[0x42012EB0<32>:int32] == 0<32> l23033D88
l23033D32:
	s6_50 = Mem61[Mem61[0x42012EBC<32>:int32] + 12<i32>:int32]
	word32 a4_68
	word32 a5_456
	uxListRemove(a3, a4, out a4_68, out a5_456)
	word32 a4_457
	word32 a5_458
	uxListRemove(a3, a4_68, out a4_457, out a5_458)
	word32 a4_76 = Mem61[a3:word32]
	word32 a5_82 = 1<32> << Mem61[s6_50 + 44<i32>:int32] | a3
	Mem86[a5_82:word32] = a4_76
	word32 a5_459
	vListInsertEnd(s6_50 + 4<i32>, a4_76, a5_82, out a5_459)
	a4 = Mem86[s6_50 + 44<i32>:int32]
	branch a4 <u Mem86[Mem86[0x4200E1F8<32>:word32] + 44<i32>:word32] l23033D2C
l23033D7E:
	Mem95[0x4200E22C<32>:word32] = 1<32>
	branch Mem95[0x42012EB0<32>:int32] != 0<32> l23033D32
l23033D88:
	branch s6_50 == 0<32> l23033DA2
l23033D8C:
	branch Mem100[Mem100[0x4200E1FC<32>:int32]:word32] != 0<32> l23033E0A
l23033E0A:
	word32 a5_460
	a4 = prvResetNextTaskUnblockTime.part.0(out a5_460)
l23033D98:
	Mem107[0x4200E21C<32>:word32] = 0xFFFFFFFF<32>
	a4 = 0xFFFFFFFF<32>
l23033DA2:
	s1_111 = Mem110[0x4200E20C<32>:int32]
	branch s1_111 == 0<32> l23033DC4
l23033DB0:
l23033DB2:
	word32 s1_125
	word32 s2_126
	word32 s4_127
	word32 a0_130
	s0_113 = xTaskIncrementTick(s0_113, a4, mstatus, dwArg0158, out s1_125, out a0_130, out a3, out a4, out s2_126, out s3_131, out s4_127)
	s1_111 = s1_125 + 0xFFFFFFFF<32>
	branch a0_130 == 0<32> l23033DBE
l23033DBA:
	Mem137[s3_131:word32] = s4_127
l23033DBE:
	branch s1_125 != 0xFFFFFFFF<32> l23033DB2
l23033DC0:
	Mem140[s2_126:word32] = 0<32>
l23033DC4:
	a5_147 = Mem146[s3_131:int32]
	branch a5_147 != 0<32> l23033E02
l23033E02:
	__syscall()
	a0_148 = 1<32>
l23033DCA:
	a0_148 = 0<32>
l23033DCC:
	branch a5_147 == 0<32> l23033DE4
l23033DD0:
	a5_147 = Mem152[Mem152[0x4200E1F8<32>:int32] + 68<i32>:word32]
	branch a5_147 == 0<32> l23033DE4
l23033DDC:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_147)
l23033DE4:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_111
	a0Out = a0_148
	a2Out = dwArg0138
	a3Out = a3
	a4Out = a4
	a5Out = a5_147
	a6Out = dwArg0118
	s4Out = dwArgF4
	t3Out = dwArgA8
	return dwArg0178
xTaskResumeAll_exit:


word32 vTaskDelay(word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg24, word32 dwArg28, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_blsync_ble_start
//      wifi_mgmr_event_notify
//      wifi_disconnect_cmd
//      bl_main_rtthread_start
//      bl_ble_sync_stop
//      proc_entry_looprt
//      txl_frame_get
//      scanu_start
//      coex_wifi_pta_forece_enable
//      bloop_wait_startup
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
vTaskDelay_entry:
l23033E10:
	branch a0 != 0<32> l23033E18
l23033E18:
	branch a5 != 0<32> l23033E48
l23033E48:
	user_vAssertCalled(a4, mstatus, out a5)
	a2 = dwArg24
l23033E2A:
	Mem22[a5 + 1<32>:word32] = Mem19[a5:word32]
	word32 s1_125
	word32 a1_32
	word32 a4_34
	word32 a5_35
	word32 s2_39
	word32 s3_40
	word32 a0_126
	word32 a2_127
	word32 s4_128
	prvAddCurrentTaskToDelayedList(a0, 0<32>, a2, a3, a4, dwArg28, out s1_125, out a0_126, out a1_32, out a2_127, out a4_34, out a5_35, out s2_39, out s3_40, out s4_128)
	word32 a0_45
	word32 a2_46
	word32 a5_47
	word32 s0_49
	word32 s1_50
	word32 s4_51
	word32 a3_54
	word32 a4_55
	word32 a6_129
	word32 t3_130
	xTaskResumeAll(a3, a4_34, a5_35, mstatus, dwArg0138, dwArg0178, out s0_49, out s1_50, out a0_45, out a2_46, out a3_54, out a4_55, out a5_47, out a6_129, out s4_51, out t3_130)
	branch a0_45 != 0<32> l23033E40
l23033E3C:
	__syscall()
l23033E40:
	s1Out = s1_50
	a0Out = a0_45
	a1Out = a1_32
	a2Out = a2_46
	a3Out = a3_54
	a4Out = a4_55
	a5Out = a5_47
	s2Out = s2_39
	s3Out = s3_40
	s4Out = s4_51
	return s0_49
l23033E12:
	__syscall()
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s0
vTaskDelay_exit:


word32 vTaskSwitchContext(word32 a3, word32 mstatus, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_sem_signal
//      rw_main_task_post_from_fw
//      __uart_rx_irq
//      __uart_tx_irq
//      bl_irq_handler
// MayUse:  a3:[0..31] mstatus:[0..31]
// LiveOut: a0 a4 a5 s0
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskSwitchContext_entry:
l23033E52:
	branch Mem0[0x4200E210<32>:int32] == 0<32> l23033E68
l23033E68:
	Mem11[0x4200E22C<32>:word32] = 0<32>
	branch a3 != 0xA5A5A5A5<32> l23033E9E
l23033E98:
	branch a3 == 0xA5A5A5A5<32> l23033F02
l23033F02:
	branch a3 != 0xA5A5A5A5<32> l23033E9E
l23033F08:
	branch a3 != 0xA5A5A5A5<32> l23033E9E
l23033F0E:
l23033EAE:
	word32 a4_40
	word32 a0_39 = __clzsi2(Mem21[0x4200E218<32>:int32], out a4_40)
	word32 s3_42 = 0x1F<32> - a0_39
	word32 a5_48 = Mem21[s3_42 * 0x14<32> + 0x42012C08<32>:word32]
	branch a5_48 == 0<32> l23033F10
l23033F10:
	user_vAssertCalled(a4_40, mstatus, out a5_48)
l23033ED8:
	word32 s0_59 = s3_42 * 0x14<32> + 8<32>
	word32 a4_58 = Mem21[a5_48 + 4<i32>:word32]
	word32 a5_62 = Mem21[a5_48 + 4<i32>:word32]
	Mem63[a5_62 + 4<i32>:word32] = a4_58
	branch a5_62 == s0_59 + 0x42012C08<32> l23033F16
l23033F16:
	a5_62 = Mem63[a5_62 + 4<i32>:word32]
	Mem65[a5_62 + 4<i32>:word32] = a4_58
l23033EEE:
	word32 a5_68 = Mem67[a5_62 + 12<i32>:word32]
	Mem75[0x4200E1F8<32>:word32] = a5_68
	a0Out = a0_39
	a4Out = a4_58
	a5Out = a5_68
	return s0_59 + 0x42012C08<32>
l23033E9E:
	vApplicationStackOverflowHook()
l23033E5C:
	Mem82[0x4200E22C<32>:word32] = 1<32>
	a0Out = a0
	a4Out = 1<32>
	a5Out = 0x4200E000<32>
	return s0
vTaskSwitchContext_exit:


word32 vTaskPlaceOnEventList(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg48, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0048:[0..31]
// LiveOut: a1 a2 a4 s0 s2 s3
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskPlaceOnEventList_entry:
l23033F1C:
	branch a0 == 0<32> l23033F42
l23033F42:
	word32 a5_65
	user_vAssertCalled(a4, mstatus, out a5_65)
	a2 = dwArg24
l23033F26:
	word32 a4_28
	word32 a5_66
	vListInsert(a0, a2, a3, out a4_28, out a5_66)
l23033F3E_thunk_prvAddCurrentTaskToDelayedList:
	word32 a1_38
	word32 a2_39
	word32 a4_40
	word32 s2_45
	word32 s3_46
	word32 s1_67
	word32 a0_68
	word32 a5_69
	word32 s4_70
	word32 s0_43 = prvAddCurrentTaskToDelayedList(a1, 1<32>, a2, a3, a4_28, dwArg48, out s1_67, out a0_68, out a1_38, out a2_39, out a4_40, out a5_69, out s2_45, out s3_46, out s4_70)
	a1Out = a1_38
	a2Out = a2_39
	a4Out = a4_40
	s2Out = s2_45
	s3Out = s3_46
	return s0_43
vTaskPlaceOnEventList_exit:


word32 vTaskPlaceOnUnorderedEventList(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg48, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0048:[0..31]
// LiveOut: a4 a5 s2 s3
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskPlaceOnUnorderedEventList_entry:
l23033F4C:
	word32 a2_20
	a2_20 = a2
	branch a0 == 0<32> l23033F98
l23033F98:
	word32 a5_96
	user_vAssertCalled(a4, mstatus, out a5_96)
	a2_20 = dwArg24
l23033F5A:
	branch Mem22[0x4200E210<32>:int32] == 0<32> l23033F8E
l23033F8E:
	word32 a5_97
	user_vAssertCalled(a4, mstatus, out a5_97)
	a2_20 = dwArg24
l23033F64:
	Mem44[(a1 | 0x80000000<32>) + 24<i32>:word32] = a4
	word32 a5_98
	vListInsertEnd(a1 + 0x18<32>, a4, a1 | 0x80000000<32>, out a5_98)
l23033F8A_thunk_prvAddCurrentTaskToDelayedList:
	word32 s1_99
	word32 a0_100
	word32 a1_101
	word32 a4_64
	word32 a5_65
	word32 s2_69
	word32 s3_70
	word32 a2_102
	word32 s4_103
	prvAddCurrentTaskToDelayedList(a2, 1<32>, a2_20, a3, a4, dwArg48, out s1_99, out a0_100, out a1_101, out a2_102, out a4_64, out a5_65, out s2_69, out s3_70, out s4_103)
	a5Out = a5_65
	s2Out = s2_69
	s3Out = s3_70
	return a4_64
vTaskPlaceOnUnorderedEventList_exit:


word32 vTaskPlaceOnEventListRestricted(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg48, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vQueueWaitForMessageRestricted
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0048:[0..31]
// LiveOut: a1 a4 s0 s3
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskPlaceOnEventListRestricted_entry:
l23033FA2:
	word32 a2_20
	word32 s1_11 = a1
	a2_20 = a2
	branch a0 == 0<32> l23033FD2
l23033FD2:
	word32 a5_81
	user_vAssertCalled(a4, mstatus, out a5_81)
	a2_20 = dwArg24
l23033FB0:
	word32 a5_82
	vListInsertEnd(Mem22[0x4200E1F8<32>:int32] + 0x18<32>, a4, 0x4200E000<32>, out a5_82)
	branch a2 == 0<32> l23033FC2
l23033FC0:
	s1_11 = 0xFFFFFFFF<32>
l23033FC2:
l23033FCE_thunk_prvAddCurrentTaskToDelayedList:
	word32 s1_83
	word32 a2_85
	word32 a0_84
	word32 a1_49
	word32 a4_51
	word32 s3_57
	word32 a5_86
	word32 s2_87
	word32 s4_88
	word32 s0_54 = prvAddCurrentTaskToDelayedList(s1_11, a2, a2_20, a3, a4, dwArg48, out s1_83, out a0_84, out a1_49, out a2_85, out a4_51, out a5_86, out s2_87, out s3_57, out s4_88)
	a1Out = a1_49
	a4Out = a4_51
	s3Out = s3_57
	return s0_54
vTaskPlaceOnEventListRestricted_exit:


word32 xTaskRemoveFromEventList(word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvUnlockQueue
//      xQueueGenericReset
//      xQueueGenericSend
//      xQueueGenericSendFromISR
//      xQueueGiveFromISR
//      xQueueReceive
//      xQueueSemaphoreTake
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
xTaskRemoveFromEventList_entry:
l23033FDC:
	branch s0 == 0<32> l2303406E
l2303406E:
	word32 a5_107
	a2 = user_vAssertCalled(a4, mstatus, out a5_107)
l23033FEA:
	word32 a1_50
	word32 a5_108
	word32 a4_24
	uxListRemove(a3, a4, out a4_24, out a5_108)
	word32 s1_100 = s0 + 24<i32>
	word32 a5_28 = Mem9[0x4200E210<32>:int32]
	branch a5_28 == 0<32> l23034034
l23034034:
	word32 a4_109
	word32 a5_110
	uxListRemove(a3, a4_24, out a4_109, out a5_110)
	a3 = Mem9[a1:word32]
	word32 a5_48 = 1<32> << a2 | a1
	Mem51[a5_48:word32] = a3
	word32 a4_42 = a2 * 5<32>
	word32 a5_111
	vListInsertEnd(s0 + 4<i32>, a4_42 << 2<i32>, a5_48, out a5_111)
	s1_100 = s0 + 4<i32>
	a4_24 = a4_42 << 2<i32>
	a1_50 = s0 + 4<i32>
l23033FFE:
	word32 a5_112
	vListInsertEnd(s0 + 24<i32>, a4_24, a5_28, out a5_112)
	a1_50 = s0 + 24<i32>
l2303400C:
	word32 a0_64 = 0<32>
	word32 a5_65 = Mem60[Mem60[0x4200E1F8<32>:int32] + 44<i32>:word32]
	branch a5_65 >=u a4_24 l2303402A
l2303401E:
	Mem68[0x4200E22C<32>:word32] = 1<32>
	a5_65 = 0x4200E000<32>
	a4_24 = 1<32>
	a0_64 = 1<32>
l2303402A:
	a0Out = a0_64
	a1Out = a1_50
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_24
	a5Out = a5_65
	return s1_100
xTaskRemoveFromEventList_exit:


word32 vTaskRemoveFromUnorderedEventList(word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupSetBits
//      vEventGroupDelete
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0024:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3
// Preserved: sp
vTaskRemoveFromUnorderedEventList_entry:
l23034074:
	branch Mem0[0x4200E210<32>:int32] == 0<32> l230340F4
l230340F4:
	word32 a5_129
	user_vAssertCalled(a4, mstatus, out a5_129)
	Mem28[a1 | 0x80000000<32>:word32] = Mem18[dwArg24 + 12<i32>:word32]
	s0 = dwArg24
	a2 = dwArg44
	branch dwArg24 != 0<32> l23034094
l23034088:
	Mem32[a1 | 0x80000000<32>:word32] = Mem14[s0 + 12<i32>:word32]
	branch s0 == 0<32> l2303410C
l2303410C:
	word32 a5_130
	a2 = user_vAssertCalled(a4, mstatus, out a5_130)
	s0 = dwArg24
l23034094:
	word32 a4_46
	word32 a5_131
	uxListRemove(a3, a4, out a4_46, out a5_131)
	word32 a5_53
	word32 a4_132
	uxListRemove(a3, a4_46, out a4_132, out a5_53)
	word32 a3_59 = Mem54[a2:word32]
	word32 a5_67 = 1<32> << a5_53 | a2
	Mem70[a5_67:word32] = a3_59
	word32 s1_49 = s0 + 4<i32>
	word32 a5_133
	word32 a0_71 = vListInsertEnd(s1_49, a5_53 * 0x14<32>, a5_67, out a5_133)
	word32 s0_75 = Mem70[a5_53 * 0x14<32> + 44<i32>:word32]
	word32 a5_117 = Mem70[Mem70[0x4200E1F8<32>:int32] + 44<i32>:word32]
	branch a5_117 >=u a5_53 * 0x14<32> l230340E8
l230340E0:
	Mem78[0x4200E22C<32>:word32] = 1<32>
	a5_117 = 0x4200E000<32>
l230340E8:
	s1Out = s1_49
	a0Out = a0_71
	a2Out = a2
	a3Out = a3_59
	a4Out = a5_53 * 0x14<32>
	a5Out = a5_117
	s2Out = 1<32>
	s4Out = dwArg04
	return s0_75
vTaskRemoveFromUnorderedEventList_exit:


word32 vTaskSetTimeOutState(word32 a0, word32 a4, word32 a5, word32 mstatus, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a3 a4
// Trashed: a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
vTaskSetTimeOutState_entry:
l23034116:
	branch a0 == 0<32> l23034170
l23034170:
	user_vAssertCalled(a4, mstatus, out a5)
l23034122:
	__csrrc(mstatus, 8<32>)
	branch a5 == 0<32> l23034136
l23034132:
	word32 a5_81
	vTaskEnterCritical.part.7(a4, out a5_81)
l23034136:
	word32 a3_28 = Mem9[0x4200E220<32>:int32]
	word32 a4_29 = Mem9[0x4200E228<32>:int32]
	Mem33[a3_28:word32] = a0
	Mem34[a4_29 + 4<i32>:word32] = a0
	branch false l23034166
l2303414E:
	branch Mem34[Mem34[0x4200E1F8<32>:int32] + 68<i32>:word32] == 0<32> l23034166
l23034166:
	a4Out = a4_29
	return a3_28
l2303415A:
l23034162_thunk_vTaskExitCritical.part.8:
	word32 a5_82
	word32 a4_52
	word32 a3_51 = vTaskExitCritical.part.8(a3_28, mstatus, out a4_52, out a5_82)
	a4Out = a4_52
	return a3_51
vTaskSetTimeOutState_exit:


void vTaskInternalSetTimeOutState(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
vTaskInternalSetTimeOutState_entry:
l23034176:
	word32 a5_7 = Mem0[0x4200E228<32>:int32]
	Mem9[Mem0[0x4200E220<32>:int32]:word32] = a0
	Mem10[a5_7 + 4<i32>:word32] = a0
	return
vTaskInternalSetTimeOutState_exit:


word32 xTaskCheckForTimeOut(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      xStreamBufferSend
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3
// Preserved: sp
xTaskCheckForTimeOut_entry:
l2303418C:
	word32 s1_13 = a0
	branch a0 == 0<32> l23034230
l23034230:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
	branch a1 != 0<32> l230341A0
l2303419C:
	branch a1 == 0<32> l23034238
l23034238:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
l230341A0:
	__csrrc(mstatus, 8<32>)
	branch a5 != 0<32> l2303421E
l2303421E:
	word32 a5_179
	vTaskEnterCritical.part.7(a4, out a5_179)
l230341B0:
	word32 s0_163
	word32 a4_100 = Mem11[a1:int32]
	word32 a5_101 = Mem11[a2:word32]
	word32 a3_158 = 0xFFFFFFFF<32>
	word32 a0_154 = 0<32>
	branch a4_100 == 0xFFFFFFFF<32> l230341FA
l230341C6:
	a3_158 = Mem11[0<32>:word32]
	s1_13 = Mem11[a1 + 4<i32>:word32]
	branch Mem11[a0:int32] == 0<32> l230341E0
l230341DA:
	a0_154 = 1<32>
	branch a2 >=u a1 l230341FA
l230341E0:
	branch a2 - a1 >=u a4_100 l23034224
l23034224:
	s0_163 = Mem11[a5_101:word32]
	Mem65[a1:word32] = 0<32>
	a0_154 = 1<32>
	branch a5_101 == 0<32> l23034212
l2303422E:
l230341E8:
	a3_158 = Mem11[a3_158:word32]
	a5_101 = Mem11[a5_101:word32]
	a4_100 = a4_100 - a2 + a1
	Mem72[a1:word32] = a4_100
	Mem74[a3_158:word32] = s1_13
	Mem75[a5_101 + 4<i32>:word32] = s1_13
	a0_154 = 0<32>
l230341FA:
	s0_163 = Mem78[a5_101:word32]
	branch a5_101 == 0<32> l23034212
l230341FE:
	a5_101 = Mem81[Mem81[0x4200E1F8<32>:int32] + 68<i32>:word32]
	branch a5_101 == 0<32> l23034212
l2303420A:
	a3_158 = vTaskExitCritical.part.8(a3_158, mstatus, out a4_100, out a5_101)
	a2 = dwArg24
l23034212:
	s1Out = s1_13
	a0Out = a0_154
	a2Out = a2
	a3Out = a3_158
	a4Out = a4_100
	a5Out = a5_101
	s2Out = a1
	s4Out = dwArg04
	return s0_163
xTaskCheckForTimeOut_exit:


word32 vTaskMissedYield()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvUnlockQueue
// MayUse: 
// LiveOut: a4
// Trashed: a4 a5
// Preserved: sp
vTaskMissedYield_entry:
l2303423E:
	Mem5[0x4200E22C<32>:word32] = 1<32>
	return 1<32>
vTaskMissedYield_exit:


word32 vTaskGetInfo(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvListTasksWithinSingleList.part.11
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp tp
vTaskGetInfo_entry:
l2303424A:
	word32 s0_11 = a0
	branch a0 == 0<32> l230342CE
l230342CE:
	s0_11 = Mem7[0x4200E1F8<32>:int32]
l23034254:
	word32 a5_164
	Mem16[s0_11 + 56<i32>:word32] = a1
	Mem17[s0_11:word32] = a1
	Mem22[a4 + 16<i32>:word32] = a1
	Mem24[a4 + 28<i32>:word32] = a1
	Mem26[a4 + 8<i32>:word32] = a1
	word32 s0_174 = Mem26[a4 + 80<i32>:word32]
	Mem28[a1 + 24<i32>:word32] = 0<32>
	Mem29[a4 + 20<i32>:word32] = a1
	branch a3 == 5<32> l230342DE
l230342DE:
	word32 a0_40
	word32 s2_46
	word32 s4_47
	word32 s3_52
	eTaskGetState(s0_174, a3, a4, 5<32>, mstatus, out a0_40, out a3, out a4, out a5_164, out s2_46, out s3_52, out s4_47)
	Mem55[a1 + 12<i32>:byte] = SLICE(a0_40, byte, 0)
	s0_174 = dwArg44
l23034276:
	a5_164 = Mem29[0x4200E1F8<32>:int32]
	branch a5_164 == s0_174 l230342D8
l230342D8:
	Mem58[a1 + 12<i32>:byte] = 0<8>
l23034282:
	Mem59[a1 + 12<i32>:byte] = SLICE(a3, byte, 0)
	a5_164 = 3<32>
	branch a3 == 3<32> l230342F2
l230342F2:
	word32 a5_62 = Mem59[a4:word32]
	Mem64[a4 + 1<32>:word32] = a5_62
	branch a5_62 == 0<32> l2303430A
l23034304:
	Mem67[a1 + 12<i32>:byte] = 2<8>
	a5_62 = 2<32>
l2303430A:
	word32 s1_82
	word32 s4_83
	word32 a0_218
	word32 a2_219
	word32 a6_220
	word32 t3_221
	word32 s0_217
	xTaskResumeAll(a3, a4 + 1<32>, a5_62, mstatus, dwArg0138, dwArg0178, out s0_217, out s1_82, out a0_218, out a2_219, out a3, out a4, out a5_164, out a6_220, out s4_83, out t3_221)
	s0_174 = dwArg44
l2303428C:
	branch a2 == 0<32> l230342C2
l230342C2:
	Mem92[a1 + 32<i32>:word16] = 0<16>
	s1Out = <invalid>
	a3Out = <invalid>
	a4Out = a4
	a5Out = a5_164
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_174
l2303428E:
	word32 a5_102
	word32 s0_99 = Mem98[a3 + 48<i32>:word32]
	word32 a4_101 = CONVERT(Mem98[a3:byte], byte, word32)
	branch a4_101 != 165<i32> l23034318
l23034318:
	Mem103[a1 + 32<i32>:word16] = 0<16>
	a5_102 = 0<32>
l2303429C:
	word32 a5_104 = 0<32>
l230342A2:
	a5_104 = a5_104 + 1<32>
	a4_101 = CONVERT(Mem98[a3 + a5_104:byte], byte, word32)
	branch a4_101 == 165<i32> l230342A2
l230342B0:
	word32 a5_114 = a5_104 >>u 2<i32> << 16<i32>
	Mem117[a1 + 32<i32>:word16] = SLICE(a5_114 >>u 16<i32>, word16, 0)
	a5_102 = a5_114 >>u 16<i32>
l230342BA:
	s1Out = <invalid>
	a3Out = <invalid>
	a4Out = a4_101
	a5Out = a5_102
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_99
vTaskGetInfo_exit:


word32 prvListTasksWithinSingleList.part.11(word32 s1, word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArgA8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      uxTaskGetSystemState
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
prvListTasksWithinSingleList.part.11_entry:
l23034320:
	word32 a1_21 = Mem19[a5 + 4<i32>:word32]
	word32 a5_24 = Mem19[a5 + 4<i32>:word32]
	Mem27[a5_24 + 4<i32>:word32] = a1_21
	word32 s4_110 = a1_21 + 8<i32>
	word32 s2_182 = a1_21
	branch a5_24 == a1_21 + 8<i32> l230343A4
l230343A4:
	Mem29[a5_24 + 4<i32>:word32] = Mem27[a5_24 + 12<i32>:word32]
l23034344:
	word32 s5_32 = Mem31[a5_24 + 12<i32>:int32]
	word32 s0_105 = a0
	s1_112 = s1
l23034364:
	word32 a3_178
	word32 a5_180
	word32 s3_65
	word32 s1_112
	word32 a5_39 = Mem38[a5_24 + 4<i32>:word32]
	Mem45[s2_182 + 4<i32>:word32] = a5_39
	branch s4_110 != a5_39 l2303434E
l2303434E:
	s0_105 = vTaskGetInfo(s1_112, s0_105, 1<32>, a2, a4, mstatus, dwArg0118, dwArg0158, out s1_112, out a3_178, out a4, out a5_180, out s2_182, out s3_65, out s4_110)
	branch s5_32 == s1_112 l2303438E
l23034374:
	Mem74[s2_182 + 4<i32>:word32] = Mem45[s4_110 + 4<i32>:int32]
	s0_105 = vTaskGetInfo(s1_112, s0_105, 1<32>, a2, a4, mstatus, dwArg0118, dwArg0158, out s1_112, out a3_178, out a4, out a5_180, out s2_182, out s3_65, out s4_110)
	branch s5_32 != s1_112 l23034360
l23034360:
	a5_24 = Mem91[s2_182 + 4<i32>:int32]
l2303438E:
	0<32> = dwArgA8
	s1Out = s1_112
	a0Out = s3_65
	a1Out = s0_105
	a3Out = a3_178
	a4Out = a4
	a5Out = a5_180
	s2Out = s2_182
	s3Out = s3_65
	s4Out = dwArg04
	return s1
prvListTasksWithinSingleList.part.11_exit:


word32 uxTaskGetSystemState(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg88, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskList
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0088:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a5 s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
uxTaskGetSystemState_entry:
l230343AA:
	Mem22[a4 + 1<32>:word32] = Mem18[a4:word32]
	word32 a4_181 = a4 + 1<32>
	word32 a5_112 = Mem22[0x4200E204<32>:int32]
	word32 s2_108 = 0<32>
	branch a1 <u a5_112 l230344A6
l230343D6:
	word32 s4_259 = a0
	word32 s0_130 = a2
	word32 s1_120 = 32<i32>
	s2_108 = 0<32>
	word32 a4_258 = 0<32>
l230343EE:
	s1_120 = s1_120 + 0xFFFFFFFF<32>
	a5_112 = (a4_258 + s2_108 << 2<i32>) + s4_259
	branch a3 == 0<32> l2303441E
l2303440C:
	s2_108 = s2_66 + a0_57
	word32 a0_57
	word32 s2_66
	word32 a1_378
	word32 a4_379
	word32 a5_380
	word32 s3_381
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 1<32>, a4_258, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_57, out a1_378, out a3, out a4_379, out a5_380, out s2_66, out s3_381, out s4_259)
	a4_258 = s2_108 << 3<u32>
	a5_112 = s2_108 * 0x24<32> + s4_259
l2303441E:
	branch s1_120 != 0<32> l230343EE
l23034422:
	branch false l23034442
l2303442E:
	s2_108 = s2_100 + a0_91
	word32 a0_91
	word32 s2_100
	word32 s4_102
	word32 a5_384
	word32 s3_385
	word32 a1_382
	word32 a4_383
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 2<32>, 0x4200E000<32>, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_91, out a1_382, out a3, out a4_383, out a5_384, out s2_100, out s3_385, out s4_102)
	a5_112 = s2_108 * 0x24<32> + s4_102
l23034442:
	branch false l23034462
l2303444E:
	s2_108 = s2_132 + a0_123
	word32 a0_123
	word32 s2_132
	word32 s4_134
	word32 a1_386
	word32 a4_387
	word32 a5_388
	word32 s3_389
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 2<32>, 0x4200E000<32>, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_123, out a1_386, out a3, out a4_387, out a5_388, out s2_132, out s3_389, out s4_134)
	a5_112 = s2_108 * 0x24<32> + s4_134
l23034462:
	word32 a4_148 = Mem22[0x42012ED8<32>:word32]
	branch a4_148 == 0<32> l23034486
l2303446E:
	s2_108 = s2_165 + a0_156
	word32 a0_156
	word32 s2_165
	word32 s4_167
	word32 a4_391
	word32 a5_392
	word32 s3_393
	word32 a1_390
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 4<32>, a4_148, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_156, out a1_390, out a3, out a4_391, out a5_392, out s2_165, out s3_393, out s4_167)
	a5_112 = s2_108 * 0x24<32> + s4_167
l23034486:
	a1 = 0x42013000<32>
	a4_181 = Mem22[0x42012EC4<32>:word32]
	branch a4_181 == 0<32> l230344A0
l23034492:
	word32 a0_189
	word32 s2_198
	word32 s1_394
	word32 s3_395
	word32 s4_396
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 3<32>, a4_181, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_394, out a0_189, out a1, out a3, out a4_181, out a5_112, out s2_198, out s3_395, out s4_396)
	s2_108 = s2_198 + a0_189
l230344A0:
	branch s0_130 == 0<32> l230344A6
l230344A2:
	Mem213[s0_130:word32] = 0<32>
l230344A6:
	word32 a5_234
	word32 t3_377
	word32 s1_370
	word32 a0_371
	word32 a2_372
	word32 a3_373
	word32 a4_374
	word32 a6_375
	word32 s4_376
	word32 s0_369
	xTaskResumeAll(a3, a4_181, a5_112, mstatus, dwArg0138, dwArg0178, out s0_369, out s1_370, out a0_371, out a2_372, out a3_373, out a4_374, out a5_234, out a6_375, out s4_376, out t3_377)
	a0Out = s2_108
	a1Out = a1
	a5Out = a5_234
	s8Out = s4
	return s1
uxTaskGetSystemState_exit:


word32 xTaskGetCurrentTaskHandle(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_task_key_create
//      aos_task_setspecific
//      aos_task_getspecific
//      bl_output
//      bl_ble_sync_stop
//      xStreamBufferSend
//      xStreamBufferReceive
//      ipc_emb_init
//      bloop_run
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
xTaskGetCurrentTaskHandle_entry:
l230344BE:
	word32 a0_5 = Mem0[0x4200E1F8<32>:int32]
	a5Out = 0x4200E000<32>
	return a0_5
xTaskGetCurrentTaskHandle_exit:


word32 xTaskGetSchedulerState(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      xTimerGenericCommand
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
xTaskGetSchedulerState_entry:
l230344C8:
	word32 a5_12 = Mem0[0x4200E224<32>:int32]
	word32 a0_10 = 1<32>
	branch a5_12 == 0<32> l230344E2
l230344D4:
	a5_12 = 0x4200E000<32>
	a0_10 = CONVERT(Mem0[0x4200E210<32>:int32] <u 1<i32>, bool, word32) << 1<i32>
l230344E2:
	a5Out = a5_12
	return a0_10
xTaskGetSchedulerState_exit:


word32 xTaskPriorityInherit(word32 a0, word32 a2, word32 a3, word32 a4, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a1 s4
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
xTaskPriorityInherit_entry:
l230344E4:
	branch a0 == 0<32> l2303455E
l2303455E:
	s4Out = s4
	return a1
l230344E6:
	word32 a4_21 = Mem18[a4 + 44<i32>:word32]
	branch a3 >=u a4_21 l23034546
l23034546:
l23034506:
	word32 a0_28 = Mem18[a4_21 + 24<i32>:word32]
	branch a4_21 < 0<32> l23034518
l2303450C:
	Mem34[32<i32> - a2 + 24<i32>:word32] = a0_28
l23034518:
	word32 s0_40 = Mem39[a3 + 20<i32>:word32]
	word32 a4_43 = a3 * 0x14<32> + 0x42012C08<32>
	branch a3 == a4_43 l23034562
l23034562:
	word32 s0_51
	word32 a4_165
	word32 a5_166
	branch uxListRemove(a3, a4_43, out a4_165, out a5_166) != 0<32> l23034598
l23034598:
	s0_51 = s0_40
l2303456E:
	s0_51 = Mem39[a3 + 44<i32>:word32]
	branch Mem39[a3 * 0x14<32> + 0x42012C08<32>:word32] != 0<32> l230345A0
l23034586:
	Mem65[~(1<32> << a3) & a2:word32] = Mem39[a2:word32]
l230345A0:
	word32 a4_70 = Mem67[a2:word32]
	Mem84[a3 + 44<i32>:word32] = s0_51
	word32 a5_80 = 1<32> << a3 | a2
	Mem85[a5_80:word32] = a4_70
	word32 a5_167
	vListInsertEnd(s0_40 + 4<i32>, a4_70, a5_80, out a5_167)
	a1 = s0_40 + 4<i32>
l23034550:
	s4Out = dwArg04
	return a1
l23034530:
	Mem102[Mem39[a4_43 + 44<i32>:word32] + 44<i32>:word32] = s0_40
	s4Out = dwArg04
	return a1
xTaskPriorityInherit_exit:


word32 xTaskPriorityDisinherit(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvCopyDataToQueue
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a4 a5 s1
// Trashed: a0 a1 a2 a4 a5 a6 s1 tp
// Preserved: s0 sp
xTaskPriorityDisinherit_entry:
l230345C6:
	branch a0 == 0<32> l23034614
l23034614:
	a0Out = 0<32>
	a1Out = a1
	a4Out = a4
	a5Out = a5
	return s1
l230345C8:
	word32 a5_19 = Mem0[0x4200E1F8<32>:int32]
	branch a5_19 == a0 l230345E2
l230345DE:
	user_vAssertCalled(a4, mstatus, out a5_19)
l230345E2:
	word32 a5_134
	word32 s0_31
	branch a5_19 == 0<32> l23034600
l23034600:
	word32 a5_26
	user_vAssertCalled(a4, mstatus, out a5_26)
	s0_31 = Mem14[a4 + 80<i32>:word32]
	Mem33[a5_26 + 0x53<32>:word32] = s0_31
	a5_134 = a5_26 + 0xFFFFFFFF<32>
	branch a3 != a4 l230345F2
l23034612:
l230345E6:
	s0_31 = Mem14[a4 + 80<i32>:word32]
	a5_134 = a5_19 + 0xFFFFFFFF<32>
	Mem37[a5_134 + 84<i32>:word32] = s0_31
	branch a3 == a4 l230345F4
l230345F2:
	branch a5_134 == 0<32> l23034618
l23034618:
	word32 s1_40 = s0_31 + 4<i32>
	word32 a4_45
	word32 a5_152
	branch uxListRemove(a3, a4, out a4_45, out a5_152) == 0<32> l2303466C
l2303466C:
	branch Mem47[a4_45 * 0x14<32> + 0x42012C08<32>:word32] != 0<32> l23034634
l2303468C:
	Mem63[~(1<32> << a4_45) & a3:word32] = Mem47[a3:word32]
l23034624:
l23034634:
	word32 s0_70 = Mem69[a3 + 80<i32>:word32]
	word32 a2_75 = Mem69[a1:word32]
	Mem84[a3 + 44<i32>:word32] = s0_70
	Mem85[s0_70 + 24<i32>:word32] = 32<i32> - a3
	word32 a5_83 = 1<32> << a3 | a1
	Mem90[a5_83:word32] = a2_75
	word32 a5_92
	vListInsertEnd(s1_40, a3 * 0x14<32>, a5_83, out a5_92)
	a0Out = 1<32>
	a1Out = s1_40
	a4Out = a3 * 0x14<32>
	a5Out = a5_92
	return s1_40
l230345F4:
	a0Out = 0<32>
	a1Out = a1
	a4Out = a4
	a5Out = a5_134
	return s1
xTaskPriorityDisinherit_exit:


word32 vTaskPriorityDisinheritAfterTimeout(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, ptr32 & a1Out, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a1 a3 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
vTaskPriorityDisinheritAfterTimeout_entry:
l2303469E:
	branch a0 == 0<32> l230346EC
l230346EC:
	a1Out = a1
	a3Out = a3
	s2Out = s2
	return s1
l230346A0:
	word32 s2_198
	word32 a0_14 = Mem12[a5 + 84<i32>:word32]
	word32 s1_16 = a1
	branch a5 == 0<32> l230346DE
l230346DE:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
	s2_198 = Mem12[a0_14 + 80<i32>:int32]
	branch s2_198 >=u a1 l230346BA
l230346EA:
l230346B2:
	s2_198 = Mem12[a0_14 + 80<i32>:int32]
	branch s2_198 <u a1 l230346D4
l230346D4:
	s2_198 = a1
	branch a5 != a1 l230346C0
l230346DC:
l230346BA:
	branch a5 == s2_198 l230346C8
l230346C0:
	word32 s0_38 = Mem12[a3 + 84<i32>:word32]
	branch a3 == 1<32> l230346EE
l230346EE:
	word32 a4_41 = Mem12[0x4200E1F8<32>:int32]
	branch a4_41 == s0_38 l23034766
l23034766:
	a2 = user_vAssertCalled(a4_41, mstatus, out a5)
l230346FA:
	word32 s0_50 = Mem12[a4_41 + 24<i32>:word32]
	Mem53[s0_50 + 44<i32>:word32] = s2_198
	branch a4_41 < 0<32> l23034710
l23034704:
	s2_198 = 32<i32> - s2_198
	Mem56[s0_50 + 24<i32>:word32] = s2_198
l23034710:
	word32 a4_60 = a5 << 2<u32>
	word32 s0_64 = Mem63[a4_60 + 20<i32>:word32]
	s1_16 = 0x42012C08<32>
	branch a4_60 != (a5 + a4_60 << 2<i32>) + 0x42012C08<32> l230346C8
l23034728:
	word32 a3_114
	word32 a4_206
	word32 a5_207
	word32 a0_72 = uxListRemove(a3, a4_60, out a4_206, out a5_207)
	branch a0_72 == 0<32> l2303476E
l2303476E:
	a3_114 = 1<32> << a0_72
	branch Mem63[a0_72 * 0x14<32> + 0x42012C08<32>:word32] == 0<32> l23034790
l23034790:
	a2 = ~a3_114 & a1
	Mem92[a2:word32] = Mem63[a1:word32]
l23034786:
l23034734:
	a3_114 = 1<32> << a0_72
l23034748:
	word32 a4_109 = Mem108[a2:word32]
	word32 a3_115 = a3_114 | a2
	Mem116[a3_115:word32] = a4_109
	0<32> = dwArg38
l23034762_thunk_vListInsertEnd:
	word32 a5_208
	vListInsertEnd(s0_64 + 4<i32>, a4_109, a0_72 * 5<32>, out a5_208)
	a1Out = s0_64 + 4<i32>
	a3Out = a3_115
	s2Out = s0_64 + 4<i32>
	return 0x42012C08<32>
l230346C8:
	0<32> = dwArg38
	a1Out = a1
	a3Out = a3
	s2Out = s2_198
	return s1_16
vTaskPriorityDisinheritAfterTimeout_exit:


word32 vTaskEnterCritical(word32 a4, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoEnter
//      cmd_wifi_dump
//      wifi_mgmr_sta_ip_unset
//      wifi_mgmr_scan_filter_hidden_ssid
//      bl_tx_resend
//      bl_output
//      irq_lock
//      xEventGroupWaitBits
//      prvUnlockQueue
//      xQueueGenericReset
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      uxQueueMessagesWaiting
//      vQueueWaitForMessageRestricted
//      xStreamBufferSend
//      xStreamBufferReceive
//      prvCheckForValidListAndQueue
//      pvTimerGetTimerID
//      loopset_led_trigger
//      sys_arch_protect
//      vfs_uart_poll
//      rxl_mpdu_free
//      bl60x_firmwre_mpdu_free
//      rxl_hwdesc_init
//      txl_frame_get
//      rxu_swdesc_upload_evt
//      bl_event_handle
//      bloop_evt_set_async
//      bloop_run
//      bl_sys_time_sync_state
// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
vTaskEnterCritical_entry:
l230347A4:
	__csrrc(mstatus, 8<32>)
	word32 a5_6 = Mem0[0x4200E224<32>:int32]
	branch a5_6 == 0<32> l230347B6
l230347B6:
	a5Out = a5_6
	return a4
l230347B2:
l230347B2_thunk_vTaskEnterCritical.part.7:
	word32 a5_9
	word32 a4_8 = vTaskEnterCritical.part.7(a4, out a5_9)
	a5Out = a5_9
	return a4_8
vTaskEnterCritical_exit:


word32 vTaskExitCritical(word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoEnter
//      cmd_wifi_dump
//      wifi_mgmr_sta_ip_unset
//      wifi_mgmr_scan_filter_hidden_ssid
//      bl_tx_resend
//      bl_output
//      irq_unlock
//      xEventGroupWaitBits
//      prvUnlockQueue
//      xQueueGenericReset
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      uxQueueMessagesWaiting
//      vQueueWaitForMessageRestricted
//      xStreamBufferSend
//      xStreamBufferReceive
//      prvCheckForValidListAndQueue
//      pvTimerGetTimerID
//      loopset_led_trigger
//      sys_arch_unprotect
//      vfs_uart_poll
//      rxl_mpdu_free
//      bl60x_firmwre_mpdu_free
//      rxl_hwdesc_init
//      txl_frame_get
//      rxu_swdesc_upload_evt
//      bl_event_handle
//      bloop_evt_set_async
//      bloop_run
//      bl_sys_time_sync_state
// MayUse:  a3:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
vTaskExitCritical_entry:
l230347B8:
	word32 a5_20 = Mem0[0x4200E224<32>:int32]
	branch a5_20 == 0<32> l230347D2
l230347C2:
	a5_20 = Mem0[Mem0[0x4200E1F8<32>:int32] + 68<i32>:word32]
	branch a5_20 == 0<32> l230347D2
l230347D2:
	a4Out = a4
	a5Out = a5_20
	return a3
l230347CE:
l230347CE_thunk_vTaskExitCritical.part.8:
	word32 a4_12
	word32 a5_13
	word32 a3_11 = vTaskExitCritical.part.8(a3, mstatus, out a4_12, out a5_13)
	a4Out = a4_12
	a5Out = a5_13
	return a3_11
vTaskExitCritical_exit:


word32 vTaskList(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s3, word32 s5, word32 s7, word32 s9, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg34, word32 dwArg78, word32 dwArg9C, word32 dwArgB8, word32 dwArgC8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ps_cmd
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s5:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: a7 ra s10 s11 s7 s9 sp t0 t4
vTaskList_entry:
l230347D4:
	word32 a5_28 = Mem26[Mem26[s1:word32]:word32]
	Mem31[a0:byte] = 0<8>
	word32 a0_38
	word32 a3_41
	word32 a4_42
	word32 s1_46
	word32 s3_396
	word32 s4_397
	word32 s8_398
	word32 a1_391
	word32 a2_392
	word32 s2_395
	word32 a5_393
	word32 a6_394
	pvPortMalloc(ra, s1, a5_28 * 0x24<32>, a3, a4, a5_28, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_46, out a0_38, out a1_391, out a2_392, out a3_41, out a4_42, out a5_393, out a6_394, out s2_395, out s3_396, out s4_397, out s8_398)
	branch a0_38 == 0<32> l230348B8
l230348B8:
	0<32> = dwArg0128
	return s1_46
l2303480C:
	word32 a0_67
	word32 s8_77
	word32 a1_104
	word32 a5_189
	word32 s0_108 = uxTaskGetSystemState(a0_38, s1_46, 0<32>, a3_41, a4_42, mstatus, s5, dwArgC8, dwArg0108, dwArg0148, out a0_67, out a1_104, out a5_189, out s8_77)
	branch a0_67 == 0<32> l2303489A
l23034818:
	word32 s1_192 = s8_77
	word32 s6_150 = 0x23079000<32>
	word32 s5_177 = 4<32>
	word32 s4_121 = 0xE<32>
	word32 s3_175 = 32<i32>
l23034838:
	branch s5_177 <u CONVERT(Mem96[s1_192 + 12<i32>:byte], byte, word32) l23034848
l23034842:
l23034848:
	word32 a5_400
	word32 a4_399
	strcpy(s0_108, a1_104, out a4_399, out a5_400)
	word32 a1_401
	word32 a2_402
	word32 a5_405
	word32 a3_403
	word32 a4_404
	word32 a0_114 = strlen(s0_108, out a1_401, out a2_402, out a3_403, out a4_404, out a5_405)
	branch s4_121 <u a0_114 l2303486C
l2303485A:
	word32 a0_122 = a0_114 + s0_108
	word32 a5_123 = s0_108 + 15<i32>
l23034860:
	Mem126[a0_122:byte] = SLICE(s3_175, byte, 0)
	a0_122 = a0_122 + 1<32>
	branch a5_123 != a0_122 l23034860
l2303486A:
	a0_114 = 0xF<32>
l2303486C:
	word32 s0_133 = s0_108 + a0_114
	Mem134[s0_133:byte] = 0<8>
	word32 s0_170
	word32 s1_171
	word32 s2_174
	word32 s8_411
	word32 s9_412
	word32 s10_413
	word32 s11_414
	word32 a0_406
	word32 a1_407
	word32 s7_410
	word32 a4_408
	word32 a5_409
	ra = sprintf(ra, s0_133, s6_150 + -1528<i32>, dwLoc18, dwArg08, dwArg34, s9, s7, dwArg78, dwArg9C, out s0_170, out s1_171, out a0_406, out a1_407, out a4_408, out a5_409, out s2_174, out s3_175, out s4_121, out s5_177, out s6_150, out s7_410, out s8_411, out s9_412, out s10_413, out s11_414)
	s1_192 = s1_171 + 36<i32>
	word32 a3_416
	word32 a4_417
	word32 a2_415
	s0_108 = s0_170 + strlen(s0_170, out a1_104, out a2_415, out a3_416, out a4_417, out a5_189)
	branch s1_171 + 36<i32> != s2_174 l23034838
l2303489A:
	0<32> = dwArg0128
l230348B4_thunk_vPortFree:
	word32 s1_218
	word32 a6_425
	word32 t3_427
	word32 s4_426
	word32 a3_422
	word32 a5_424
	word32 a4_423
	word32 a0_419
	word32 a2_421
	word32 a1_420
	word32 s0_418
	vPortFree(s5, dwArgB8, a5_189, mstatus, dwArg0158, dwArg0198, out s0_418, out s1_218, out a0_419, out a1_420, out a2_421, out a3_422, out a4_423, out a5_424, out a6_425, out s4_426, out t3_427)
	return s1_218
vTaskList_exit:


word32 uxTaskResetEventItemValue(word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
// MayUse:  a3:[0..31] a4:[0..31]
// LiveOut: a3
// Trashed: a2 a3 a5
// Preserved: sp
uxTaskResetEventItemValue_entry:
l230348D2:
	word32 a3_12 = Mem0[a3 + 44<i32>:word32]
	Mem16[32<i32> - a3_12 + 24<i32>:word32] = a4
	return a3_12
uxTaskResetEventItemValue_exit:


word32 pvTaskIncrementMutexHeldCount(word32 a0, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
pvTaskIncrementMutexHeldCount_entry:
l230348EE:
	branch a4 == 0<32> l23034902
l230348FA:
	a3 = Mem0[a4 + 84<i32>:word32]
	Mem11[a4 + 0x55<32>:word32] = a3
	a4 = a4 + 1<32>
l23034902:
	word32 a5_15 = Mem14[a0:word32]
	a4Out = a4
	a5Out = a5_15
	return a3
pvTaskIncrementMutexHeldCount_exit:


word32 ulTaskNotifyTake(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg0128, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipc_emb_wait
//      bloop_run
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0018:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a3 a4 s1 s2 s3
// Trashed: a2 a3 a4 a5 s0 s1 s2 s3 t3 tp
// Preserved: a0 a1 a6 s4 s8 sp
ulTaskNotifyTake_entry:
l23034906:
	__csrrc(mstatus, 8<32>)
	word32 s2_15 = a0
	word32 s3_17 = a1
	branch a5 == 0<32> l2303492A
l23034926:
	a4 = vTaskEnterCritical.part.7(a4, out a5)
l2303492A:
	word32 a5_29 = Mem13[a5 + 88<i32>:word32]
	branch a5_29 != 0<32> l23034944
l23034938:
	Mem32[a5_29 + 92<i32>:byte] = 1<8>
	a4 = 1<32>
	branch a1 != 0<32> l2303499E
l2303499E:
	word32 a2_216
	word32 a1_215
	word32 s1_214
	word32 s4_217
	prvAddCurrentTaskToDelayedList(a1, 1<32>, a2, a3, 1<32>, dwArg18, out s1_214, out a0, out a1_215, out a2_216, out a4, out a5_29, out s2_15, out s3_17, out s4_217)
	__syscall()
l23034944:
	branch a5_29 == 0<32> l2303494E
l23034948:
	a5_29 = Mem55[a5_29 + 68<i32>:word32]
	branch a5_29 != 0<32> l23034998
l23034998:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_29)
l2303494E:
	__csrrc(mstatus, 8<32>)
	branch a5_29 == 0<32> l2303495A
l23034956:
	word32 a5_218
	a4 = vTaskEnterCritical.part.7(a4, out a5_218)
l2303495A:
	word32 a5_81 = Mem55[a0 + 88<i32>:word32]
	branch a0 == 0<32> l2303496A
l23034960:
	branch s2_15 == 0<32> l23034990
l23034990:
	a4 = a0 + -1<i32>
	Mem88[a4 + 88<i32>:word32] = a5_81
l23034966:
	Mem89[a5_81 + 88<i32>:word32] = 0<32>
l2303496A:
	Mem93[a5_81 + 92<i32>:byte] = 0<8>
	word32 s1_94 = Mem93[a5_81:word32]
	branch a5_81 == 0<32> l23034982
l23034974:
	branch Mem93[a5_81 + 68<i32>:word32] == 0<32> l23034982
l2303497A:
	word32 a5_219
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_219)
l23034982:
	0<32> = dwArg0128
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	s2Out = s2_15
	s3Out = s3_17
	return s1_94
ulTaskNotifyTake_exit:


word32 xTaskNotifyWait(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg0128, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
//      xStreamBufferReceive
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0018:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a4 a5 s0 s1 s2 s3 s4 s5
// Trashed: a0 a2 a3 a4 a5 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: a1 a6 sp
xTaskNotifyWait_entry:
l230349AC:
	__csrrc(mstatus, 8<32>)
	word32 s1_19 = a0
	word32 s2_107 = a1
	word32 s4_23 = a2
	word32 s3_28 = 0x4200E224<32>
	word32 a5_29 = Mem17[0x4200E224<32>:int32]
	branch a5_29 == 0<32> l230349DA
l230349D6:
	vTaskEnterCritical.part.7(a4, out a5_29)
l230349DA:
	word32 a4_37 = 2<32>
	branch CONVERT(Mem17[a5_29 + 92<i32>:byte], byte, word32) == 2<32> l23034A06
l230349EE:
	word32 a5_44 = Mem17[a0 + 88<i32>:word32]
	s1_19 = ~a0 & a0
	Mem46[s1_19 + 88<i32>:word32] = a5_44
	Mem48[a5_44 + 92<i32>:byte] = 1<8>
	a4_37 = 1<32>
	branch a3 != 0<32> l23034A7E
l23034A7E:
	word32 a1_267
	word32 a2_268
	word32 a5_269
	word32 a0_266
	prvAddCurrentTaskToDelayedList(a3, 1<32>, a2, a3, 1<32>, dwArg18, out s1_19, out a0_266, out a1_267, out a2_268, out a4_37, out a5_269, out s2_107, out s3_28, out s4_23)
	__syscall()
l23034A06:
	word32 a3_134
	word32 a5_71 = Mem70[s3_28:int32]
	a3_134 = a3
	branch a5_71 == 0<32> l23034A12
l23034A0C:
	a3_134 = a3
	branch Mem70[a5_71 + 68<i32>:word32] != 0<32> l23034A78
l23034A78:
	word32 a5_270
	a3_134 = vTaskExitCritical.part.8(a3, mstatus, out a4_37, out a5_270)
l23034A12:
	__csrrc(mstatus, 8<32>)
	word32 a5_83 = Mem70[s3_28:int32]
	branch a5_83 == 0<32> l23034A20
l23034A1C:
	vTaskEnterCritical.part.7(a4_37, out a5_83)
l23034A20:
	branch s4_23 == 0<32> l23034A2C
l23034A24:
	a5_83 = Mem70[a5_83 + 88<i32>:word32]
	Mem96[s4_23:word32] = a5_83
l23034A2C:
	word32 a4_100 = 2<32>
	word32 a5_102 = CONVERT(Mem98[a5_83 + 92<i32>:byte], byte, word32)
	branch a5_102 != 2<32> l23034A4C
l23034A3A:
	word32 s2_109 = ~s2_107
	a5_102 = Mem98[0x5A<32>:word32]
	Mem113[a5_102 + 88<i32>:word32] = s2_109 & 2<32>
	s2_107 = s2_109 & 2<32>
l23034A4C:
	Mem117[a5_102 + 92<i32>:byte] = 0<8>
	word32 a5_121 = Mem117[s3_28:int32]
	branch a5_121 == 0<32> l23034A66
l23034A58:
	a5_121 = Mem117[a5_121 + 68<i32>:word32]
	branch a5_121 == 0<32> l23034A66
l23034A5E:
	vTaskExitCritical.part.8(a3_134, mstatus, out a4_100, out a5_121)
l23034A66:
	0<32> = dwArg0128
	s1Out = s1_19
	a2Out = dwArg0100
	a4Out = a4_100
	a5Out = a5_121
	s2Out = s2_107
	s3Out = s3_28
	s4Out = dwArg78
	s5Out = a3
	return dwArgE4
xTaskNotifyWait_exit:


word32 xTaskGenericNotify(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg38, word32 dwArg58, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tx_notify
//      xStreamBufferSend
//      xStreamBufferReceive
//      bl_irq_handler
//      bloop_evt_set_async
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
xTaskGenericNotify_entry:
l23034A8C:
	word32 a2_26
	word32 s0_17 = a0
	word32 s1_21 = a2
	a2_26 = a2
	branch a0 == 0<32> l23034BB4
l23034BB4:
	word32 a5_294
	a2_26 = user_vAssertCalled(a4, mstatus, out a5_294)
l23034AA6:
	__csrrc(mstatus, 8<32>)
	word32 a5_32 = Mem15[0x4200E224<32>:int32]
	branch a5_32 != 0<32> l23034B24
l23034B24:
	a4 = vTaskEnterCritical.part.7(a4, out a5_32)
l23034AB8:
	branch a3 == 0<32> l23034AC2
l23034ABC:
	s0_17 = Mem15[a5_32 + 88<i32>:word32]
	Mem41[a3:word32] = a5_32
l23034AC2:
	word32 s2_46 = CONVERT(Mem45[s0_17 + 92<i32>:byte], byte, word32)
	Mem48[s0_17 + 92<i32>:byte] = 2<8>
	word32 s2_264 = s2_46 & 255<i32>
	branch a2 >u 4<32> l23034AE6
l23034AE6:
	word32 s0_56 = Mem48[a4 + 88<i32>:word32]
	branch a4 == 0xFFFFFFFF<32> l23034AF2
l23034AEE:
	word32 a5_290
	a2_26 = user_vAssertCalled(a4, mstatus, out a5_290)
l23034AF2:
	word32 a1_238
	a1_238 = a1
	branch (s2_46 & 255<i32>) == 1<32> l23034B2A
l23034B2A:
	word32 a4_291
	word32 a5_292
	uxListRemove(a3, a4, out a4_291, out a5_292)
	a4 = Mem48[a2_26:word32]
	s2_264 = (s2_46 & 255<i32>) << a3 | a2_26
	Mem92[a4:word32] = s2_264
	word32 a5_94
	vListInsertEnd(s0_56 + 4<i32>, a4, a3 * 0x14<32>, out a5_94)
	s1_21 = s0_56 + 4<i32>
	a1_238 = s0_56 + 4<i32>
	branch a5_94 == 0<32> l23034B6C
l23034B68:
	word32 a5_293
	user_vAssertCalled(a4, mstatus, out a5_293)
l23034B6C:
	branch Mem92[Mem92[0x4200E1F8<32>:int32] + 44<i32>:word32] >=u a4 l23034AF8
l23034B7C:
	__syscall()
l23034AF8:
	word32 a5_112 = Mem111[0x4200E224<32>:int32]
	branch a5_112 == 0<32> l23034B14
l23034B00:
	a5_112 = Mem111[Mem111[0x4200E1F8<32>:int32] + 68<i32>:word32]
	branch a5_112 == 0<32> l23034B14
l23034B0C:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_112)
l23034B14:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_21
	a0Out = 1<32>
	a1Out = a1_238
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	a5Out = a5_112
	s2Out = s2_264
	s3Out = 0x4200E224<32>
	s4Out = a1
	mstatusOut = mstatus
	return ra
l23034AD6:
	word32 s0_156
	word32 s1_157
	word32 s2_158
	word32 s4_159
	word32 ra_160
	word32 s3_161
	word32 a0_162
	word32 a1_163
	word32 a2_164
	word32 a3_165
	word32 mstatus_166
	word32 a5_167
	word32 a4_168
	call 4<32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:0x230789E0<32>,a3:a3,a4:a4_55,mstatus:mstatus,ra:ra,s0:s0_42,s1:Mem48[4<32>:word32],s2:s2_46 & 255<i32>,s3:0x4200E224<32>,s4:a1,Stack +0044:dwArg14,Stack +0068:dwArg38,Stack +0088:dwArg58,Stack +0114:dwArgE4,Stack +0130:dwArg0100,Stack +0134:dwArg0104,Stack +0158:dwArg0128
		defs: a0:a0_162,a1:a1_163,a2:a2_164,a3:a3_165,a4:a4_168,a5:a5_167,mstatus:mstatus_166,ra:ra_160,s0:s0_156,s1:s1_157,s2:s2_158,s3:s3_161,s4:s4_159
	s0Out = s0_156
	s1Out = s1_157
	a0Out = a0_162
	a1Out = a1_163
	a2Out = a2_164
	a3Out = a3_165
	a4Out = a4_168
	a5Out = a5_167
	s2Out = s2_158
	s3Out = s3_161
	s4Out = s4_159
	mstatusOut = mstatus_166
	return ra_160
xTaskGenericNotify_exit:


word32 xTaskGenericNotifyFromISR(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg44, word32 dwArg84, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSendFromISR
//      xStreamBufferReceiveFromISR
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0084:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s4 s8 t3 tp
// Preserved: sp
xTaskGenericNotifyFromISR_entry:
l23034BBA:
	word32 s0_13 = a0
	branch a0 == 0<32> l23034C6E
l23034C6E:
	user_vAssertCalled(a4, mstatus, out a5)
	dwLoc1C = a2
	a2 = dwArg84
	s0_13 = a3
l23034BCA:
	branch a3 == 0<32> l23034BD0
l23034BCC:
	s0_13 = Mem31[a5 + 88<i32>:word32]
	Mem33[a5:word32] = a3
l23034BD0:
	word32 s1_37 = CONVERT(Mem36[s0_13 + 92<i32>:byte], byte, word32)
	Mem39[s0_13 + 92<i32>:byte] = 2<8>
	word32 s1_234 = s1_37 & 255<i32>
	branch a2 >u 4<32> l23034BF4
l23034BF4:
	word32 s0_104 = Mem39[a4 + 88<i32>:word32]
	branch a4 == 0xFFFFFFFF<32> l23034C00
l23034BFC:
	word32 a5_261
	a2 = user_vAssertCalled(a4, mstatus, out a5_261)
l23034C00:
	word32 a5_105 = 1<32>
	branch (s1_37 & 255<i32>) == 1<32> l23034C14
l23034C14:
	word32 s0_55 = Mem39[0x29<32>:word32]
	branch false l23034C1C
l23034C18:
	word32 a5_262
	a2 = user_vAssertCalled(a4, mstatus, out a5_262)
l23034C1C:
	word32 a5_62 = Mem39[0x4200E210<32>:int32]
	branch a5_62 == 0<32> l23034C80
l23034C80:
	word32 a5_264
	word32 a4_263
	uxListRemove(a3, a4, out a4_263, out a5_264)
	a3 = Mem39[a1:word32]
	word32 a5_89 = 1<32> << a2 | a1
	Mem92[a5_89:word32] = a3
	word32 a4_83 = a2 * 5<32>
	word32 a5_265
	vListInsertEnd(s0_55 + 4<i32>, a4_83 << 2<i32>, a5_89, out a5_265)
	s1_234 = s0_55 + 4<i32>
	a4 = a4_83 << 2<i32>
l23034C26:
	word32 a5_266
	vListInsertEnd(s0_55 + 24<i32>, a4, a5_62, out a5_266)
l23034C36:
	s0_104 = Mem101[a4 + 44<i32>:word32]
	a5_105 = Mem101[Mem101[0x4200E1F8<32>:int32] + 44<i32>:word32]
	branch a5_105 >=u a4 l23034C06
l23034C46:
	branch a4 == 0<32> l23034C50
l23034C4A:
	Mem112[a4:word32] = 1<32>
l23034C50:
	Mem115[0x4200E22C<32>:word32] = 1<32>
	a5_105 = 0x4200E000<32>
	a4 = 1<32>
l23034C06:
	s0Out = s0_104
	s1Out = s1_234
	a3Out = a3
	a4Out = a4
	a5Out = a5_105
	mstatusOut = mstatus
	return ra
l23034BE4:
	word32 s0_139
	word32 ra_141
	word32 s1_142
	word32 a4_144
	word32 a3_145
	word32 a5_146
	word32 tp_149
	word32 mstatus_154
	call 0x230789F4<32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:Mem39[0x230789F4<32>:word32],a3:a3,a4:a4,a5:0x230789F4<32>,mstatus:mstatus,ra:ra,s0:s0_34,s1:s1_37 & 255<i32>,s2:a4,Stack +0004:dwLoc1C_175,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0048:dwArg28,Stack +0064:dwArg44,Stack +00A4:dwArg84,tp:tp_149
		defs: a3:a3_145,a4:a4_144,a5:a5_146,mstatus:mstatus_154,ra:ra_141,s0:s0_139,s1:s1_142,tp:tp_149
	s0Out = s0_139
	s1Out = s1_142
	a3Out = a3_145
	a4Out = a4_144
	a5Out = a5_146
	mstatusOut = mstatus_154
	return ra_141
xTaskGenericNotifyFromISR_exit:


word32 vTaskNotifyGiveFromISR(word32 a0, word32 a1, word32 a2, word32 a4, word32 mstatus, word32 dwArg38, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_irq_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
vTaskNotifyGiveFromISR_entry:
l23034CD6:
	branch a0 == 0<32> l23034D90
l23034D90:
	word32 a5_157
	a2 = user_vAssertCalled(a4, mstatus, out a5_157)
l23034CE6:
	word32 a4_23 = CONVERT(Mem11[a0 + 92<i32>:byte], byte, word32)
	Mem24[a0 + 92<i32>:byte] = 2<8>
	Mem28[0x5B<32>:word32] = Mem24[0x5A<32>:word32]
	word32 a3_137 = 1<32>
	word32 a5_143 = 3<32>
	branch a4_23 == 1<32> l23034D08
l23034D08:
	word32 s0_29 = Mem28[0x2B<32>:word32]
	branch false l23034D10
l23034D0C:
	word32 a5_158
	a2 = user_vAssertCalled(a4_23, mstatus, out a5_158)
l23034D10:
	word32 a5_35 = Mem28[0x4200E210<32>:int32]
	branch a5_35 == 0<32> l23034D56
l23034D56:
	word32 a4_159
	word32 a5_160
	uxListRemove(1<32>, a4_23, out a4_159, out a5_160)
	a3_137 = Mem28[a1:word32]
	word32 a5_59 = 1<32> << a2 | a1
	Mem62[a5_59:word32] = a3_137
	word32 a4_53 = a2 * 5<32>
	word32 a5_161
	vListInsertEnd(s0_29 + 4<i32>, a4_53 << 2<i32>, a5_59, out a5_161)
	a4_23 = a4_53 << 2<i32>
l23034D1A:
	word32 a5_162
	vListInsertEnd(s0_29 + 24<i32>, a4_23, a5_35, out a5_162)
l23034D2A:
	a5_143 = Mem71[Mem71[0x4200E1F8<32>:int32] + 44<i32>:word32]
	branch a5_143 >=u a4_23 l23034CFC
l23034D3A:
	branch a1 == 0<32> l23034D40
l23034D3C:
	Mem80[1<32>:word32] = a1
l23034D40:
	Mem90[0x4200E22C<32>:word32] = 1<32>
	0<32> = dwArg38
	a5Out = 0x4200E000<32>
	return a3_137
l23034CFC:
	0<32> = dwArg38
	a5Out = a5_143
	return a3_137
vTaskNotifyGiveFromISR_exit:


word32 xTaskNotifyStateClear(word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
//      xStreamBufferReceive
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a2 a3 a4 a5 s0 s1 s4 s8 t3
// Preserved: sp
xTaskNotifyStateClear_entry:
l23034D96:
	word32 s1_11 = a0
	branch a0 == 0<32> l23034DEA
l23034DEA:
	a5 = 0x4200E000<32>
	s1_11 = Mem9[0x4200E1F8<32>:int32]
l23034DA2:
	__csrrc(mstatus, 8<32>)
	branch a5 == 0<32> l23034DB6
l23034DB2:
	word32 a5_98
	vTaskEnterCritical.part.7(a4, out a5_98)
l23034DB6:
	word32 a5_28 = CONVERT(Mem9[s1_11 + 92<i32>:byte], byte, word32)
	word32 a4_29 = 2<32>
	branch a5_28 != 2<32> l23034DC8
l23034DC2:
	Mem31[s1_11 + 92<i32>:byte] = 0<8>
l23034DC8:
	branch a5_28 == 0<32> l23034DE0
l23034DCC:
	a5_28 = Mem34[Mem34[0x4200E1F8<32>:int32] + 68<i32>:word32]
	branch a5_28 == 0<32> l23034DE0
l23034DD8:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4_29, out a5_28)
l23034DE0:
	a4Out = a4_29
	a5Out = a5_28
	return a3
xTaskNotifyStateClear_exit:


word32 prvCheckForValidListAndQueue(word32 a3, word32 a4, word32 mstatus, word32 dwArg38, word32 dwArg0118, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTimerCreateTimerTask
//      xTimerCreate
//      xTimerCreateStatic
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 a5 a6 s1 s2 s3 s4 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
prvCheckForValidListAndQueue_entry:
l23034DF4:
	word32 a5_16
	vTaskEnterCritical(a4, mstatus, out a5_16)
	branch a5_16 == 0<32> l23034E1C
l23034E1C:
	vListInitialise(0x42012F2C<32>)
	vListInitialise(0x42012F40<32>)
	Mem32[0x4200E230<32>:word32] = 0x42012F2C<32>
	Mem39[0x4200E234<32>:word32] = 0x42012F40<32>
	word32 a0_40
	word32 a2_109
	word32 a4_110
	word32 a5_111
	Mem54[a0_40:word32] = xQueueGenericCreateStatic(4<32>, 0x10<32>, 0x42012EEC<32>, 0x42012F54<32>, 0<32>, mstatus, dwArg0118, out s1, out a0_40, out a2_109, out a3, out a4_110, out a5_111, out s2, out s3, out s4)
	branch a0_40 == 0<32> l23034E0E
l23034E6A:
	a6 = vQueueAddToRegistry(a0_40, 0x23078A44<32>, a3)
l23034E0E:
	0<32> = dwArg38
l23034E18_thunk_vTaskExitCritical:
	word32 a5_70
	word32 a4_72
	word32 a3_71 = vTaskExitCritical(a3, mstatus, out a4_72, out a5_70)
	s1Out = s1
	a3Out = a3_71
	a4Out = a4_72
	a5Out = a5_70
	a6Out = a6
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return dwArg14
prvCheckForValidListAndQueue_exit:


word32 prvInsertTimerInActiveList(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvTimerTask
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
prvInsertTimerInActiveList_entry:
l23034E78:
	Mem8[a1 + 4<i32>:word32] = a0
	Mem9[a0 + 16<i32>:word32] = a0
	branch a2 <u a1 l23034E96
l23034E96:
	branch a2 >=u a3 l23034EA0
l23034E9A:
	branch a1 >=u a3 l23034E90
l23034EA0:
	word32 a4_63
	word32 a5_24
	vListInsert(Mem9[0x4200E230<32>:int32], a2, a3, out a4_63, out a5_24)
	a5Out = a5_24
	return 0<32>
l23034E86:
	word32 a2_31 = a2 - a3
	branch a2_31 <u a4 l23034EB8
l23034EB8:
	word32 a5_39
	word32 a4_62
	vListInsert(Mem9[0x4200E234<32>:int32], a2_31, a3, out a4_62, out a5_39)
	a5Out = a5_39
	return 0<32>
l23034E90:
	a5Out = a0
	return 1<32>
prvInsertTimerInActiveList_exit:


word32 xTimerCreateTimerTask(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg64, word32 dwArgC8, word32 dwArgF8, word32 dwArg0194, ptr32 & t0Out, ptr32 & a0Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskStartScheduler
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0064:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0194:[0..31]
// LiveOut: a0 a4 t0 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
xTimerCreateTimerTask_entry:
l23034ED0:
	word32 a6_15
	word32 s1_139
	word32 a3_140
	word32 a5_141
	word32 s2_142
	word32 s3_143
	word32 s4_144
	word32 a4_13
	word32 tp_135 = prvCheckForValidListAndQueue(a3, a4, mstatus, dwArg18, dwArgF8, out s1_139, out a3_140, out a4_13, out a5_141, out a6_15, out s2_142, out s3_143, out s4_144)
	branch Mem5[0x4200E23C<32>:int32] == 0<32> l23034F20
l23034EE2:
	word32 a0_40
	word32 s0_146
	word32 s1_147
	word32 a2_148
	word32 a3_149
	word32 a5_150
	word32 s2_151
	word32 s5_152
	word32 s6_153
	word32 s7_154
	xTaskCreateStatic(ra, 0x2303513C<32>, 0x23078A4C<32>, dwArg64, 0<32>, 0x1F<32>, vApplicationGetTimerTaskMemory(fp + 0xFFFFFFE4<32>, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>), a6_15, mstatus, 0<32>, dwArg04, dwArgC8, dwArg0194, out tp_135, out t0, out s0_146, out s1_147, out a0_40, out a2_148, out a3_149, out a4_13, out a5_150, out s2_151, out s5_152, out s6_153, out s7_154)
	Mem63[0x4200E240<32>:word32] = a0_40
	branch a0_40 == 0<32> l23034F20
l23034F20:
	word32 a5_145
	user_vAssertCalled(a4_13, mstatus, out a5_145)
	t0Out = t0
	a0Out = 0<32>
	a4Out = a4_13
	return tp_135
l23034F18:
	t0Out = t0
	a0Out = 1<32>
	a4Out = a4_13
	return tp_135
xTimerCreateTimerTask_exit:


word32 xTimerCreate(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArgF8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_timer_init
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s2 s3 s5
// Trashed: a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
xTimerCreate_entry:
l23034F2C:
	word32 a0_31
	word32 a2_141
	word32 a1_140
	word32 a6_142
	word32 s4_143
	word32 s8_144
	word32 s3_131
	word32 s1_129
	word32 s2_130
	word32 a4_127
	word32 a5_128
	word32 a3_126
	pvPortMalloc(ra, a1, 44<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_129, out a0_31, out a1_140, out a2_141, out a3_126, out a4_127, out a5_128, out a6_142, out s2_130, out s3_131, out s4_143, out s8_144)
	branch a0_31 == 0<32> l23034F82
l23034F52:
	Mem47[a0_31 + 40<i32>:byte] = 0<8>
	branch s1_129 == 0<32> l23034F96
l23034F96:
	word32 a5_145
	user_vAssertCalled(a4_127, mstatus, out a5_145)
l23034F58:
	word32 s4_65
	word32 a6_146
	prvCheckForValidListAndQueue(a3_126, a4_127, mstatus, dwArg18, dwArgF8, out s1_129, out a3_126, out a4_127, out a5_128, out a6_146, out s2_130, out s3_131, out s4_65)
	Mem72[a0_31:word32] = a0
	Mem73[s1_129 + 24<i32>:word32] = a0_31
	Mem74[a0_31 + 28<i32>:word32] = s4_65
	Mem75[a0_31 + 32<i32>:word32] = s3_131
	vListInitialiseItem(a0_31 + 4<i32>)
	branch s2_130 == 0<32> l23034F82
l23034F76:
	word32 a5_76 = CONVERT(Mem75[a0_31 + 40<i32>:byte], byte, word32)
	Mem78[a0_31 + 40<i32>:byte] = SLICE(a5_76 | 4<i32>, byte, 0)
	a5_128 = a5_76 | 4<i32>
l23034F82:
	s1Out = s1_129
	a3Out = a3_126
	a4Out = a4_127
	a5Out = a5_128
	s2Out = s2_130
	s3Out = s3_131
	s5Out = a0
	return s1
xTimerCreate_exit:


word32 xTimerCreateStatic(word32 a1, word32 a3, word32 a4, word32 a5, word32 a7, word32 mstatus, word32 dwArg08, word32 dwArgE8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoEnter
//      stateDisconnect_enter
//      wifi_mgmr_start
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a7:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
xTimerCreateStatic_entry:
l23034F9C:
	word32 s1_142 = a1
	branch a7 == 44<i32> l23034FC8
l23034FC4:
	word32 a5_150
	user_vAssertCalled(a4, mstatus, out a5_150)
l23034FC8:
	branch a5 == 0<32> l23035018
l23035018:
	word32 a5_151
	user_vAssertCalled(a4, mstatus, out a5_151)
l23034FCC:
	Mem45[a5 + 40<i32>:byte] = 2<8>
	branch a1 == 0<32> l23035012
l23035012:
	word32 a5_152
	user_vAssertCalled(a4, mstatus, out a5_152)
l23034FD4:
	word32 s2_63
	word32 s3_64
	word32 s4_65
	word32 a6_155
	word32 a4_153
	word32 a5_154
	prvCheckForValidListAndQueue(a3, a4, mstatus, dwArg08, dwArgE8, out s1_142, out a3, out a4_153, out a5_154, out a6_155, out s2_63, out s3_64, out s4_65)
	Mem71[a5:word32] = s2_63
	Mem72[s1_142 + 24<i32>:word32] = a5
	Mem73[a5 + 28<i32>:word32] = s4_65
	Mem76[a5 + 32<i32>:word32] = a4
	vListInitialiseItem(a5 + 4<i32>)
	branch s3_64 == 0<32> l23034FFE
l23034FF2:
	Mem79[a5 + 40<i32>:byte] = SLICE(CONVERT(Mem76[a5 + 40<i32>:byte], byte, word32) | 4<i32>, byte, 0)
l23034FFE:
	0<32> = dwArg0128
	s1Out = s1_142
	a3Out = a3
	return dwArgE4
xTimerCreateStatic_exit:


word32 xTimerGenericCommand(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg64, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoExit
//      stateConnectedIPNoEnter
//      stateDisconnect_exit
//      stateDisconnect_enter
//      wifi_mgmr_start
//      k_timer_stop
//      k_timer_delete
//      k_timer_start
//      prvSwitchTimerLists
//      prvTimerTask
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0064:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xTimerGenericCommand_entry:
l2303501E:
	word32 s1_125 = a0
	word32 s2_126 = a3
	word32 s3_127 = a4
	branch a0 == 0<32> l2303508A
l2303508A:
	user_vAssertCalled(a4, mstatus, out a5)
l23035032:
	word32 s0_124 = Mem32[a5:word32]
	word32 a0_116 = 0<32>
	branch a5 == 0<32> l23035062
l23035040:
	branch a1 > 5<32> l23035070
l23035070:
	word32 a0_50
	word32 a1_51
	word32 a3_53
	word32 a4_54
	word32 a5_55
	word32 s1_59
	word32 s2_60
	word32 s3_61
	word32 s0_58 = xQueueGenericSendFromISR(a5, fp + -48<i32>, a3, 0<32>, a4, a5, mstatus, a1, dwArgE8, out s1_59, out a0_50, out a1_51, out a3_53, out a4_54, out a5_55, out s2_60, out s3_61)
	s1Out = s1_59
	a0Out = a0_50
	a1Out = a1_51
	a3Out = a3_53
	a4Out = a4_54
	a5Out = a5_55
	s2Out = s2_60
	s3Out = s3_61
	s4Out = <invalid>
	s5Out = s5
	s6Out = s6
	s8Out = <invalid>
	return s0_58
l2303504C:
	word32 a5_256
	word32 a0_75 = xTaskGetSchedulerState(out a5_256)
	branch a0_75 == 2<32> l23035098
l23035098:
	word32 a0_83
	word32 a1_84
	word32 a3_86
	word32 a4_87
	word32 a5_88
	word32 s1_92
	word32 s2_93
	word32 s3_94
	word32 s5_96
	word32 s6_97
	word32 a2_257
	word32 a7_258
	word32 s4_259
	word32 s8_260
	word32 s0_91 = xQueueGenericSend(a0_75, fp + -48<i32>, 0<32>, a4, 2<32>, mstatus, a1, dwLoc1C, dwArg64, dwArgD8, dwArg0118, dwArg0158, out s1_92, out a0_83, out a1_84, out a2_257, out a3_86, out a4_87, out a5_88, out a7_258, out s2_93, out s3_94, out s4_259, out s5_96, out s6_97, out s8_260)
	s1Out = s1_92
	a0Out = a0_83
	a1Out = a1_84
	a3Out = a3_86
	a4Out = a4_87
	a5Out = a5_88
	s2Out = s2_93
	s3Out = s3_94
	s4Out = <invalid>
	s5Out = s5_96
	s6Out = s6_97
	s8Out = <invalid>
	return s0_91
l23035056:
	word32 a2_261
	word32 a7_262
	word32 s4_263
	word32 s8_264
	s0_124 = xQueueGenericSend(a0_75, fp + -48<i32>, 0<32>, a4, 2<32>, mstatus, a1, dwLoc1C, dwArg64, dwArgD8, dwArg0118, dwArg0158, out s1_125, out a0_116, out a1, out a2_261, out a3, out a4, out a5, out a7_262, out s2_126, out s3_127, out s4_263, out s5, out s6, out s8_264)
l23035062:
	s1Out = s1_125
	a0Out = a0_116
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2_126
	s3Out = s3_127
	s4Out = <invalid>
	s5Out = s5
	s6Out = s6
	s8Out = <invalid>
	return s0_124
xTimerGenericCommand_exit:


word32 prvSwitchTimerLists(word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg44, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvTimerTask
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0044:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
prvSwitchTimerLists_entry:
l230350B2:
	word32 s2_15 = 0x4200E230<32>
l230350E8:
	word32 a5_20 = Mem17[a4:word32]
	branch a4 != 0<32> l230350C8
l230350C8:
	s3 = Mem17[Mem17[s0 + 12<i32>:word32]:int32]
	word32 a4_29
	word32 a5_30
	uxListRemove(a3, a4, out a4_29, out a5_30)
	call a5_30 (retsize: 0;)
		uses: a3:a3_27,a4:a4_29
		defs: a0:a0_33,a4:a4_34
	s0 = Mem17[a5_30 + 32<i32>:word32]
	s1 = s0 + 4<i32>
	word32 a5_36 = CONVERT(Mem17[s0 + 40<i32>:byte], byte, word32)
	branch (a5_36 & 4<32>) != 0<32> l2303510E
l2303510E:
	s0 = Mem17[(a5_36 & 4<32>) + 24<i32>:word32]
	a3 = 0<32>
	word32 a5_41 = (a5_36 & 4<32>) + s3
	branch s3 >=u a5_41 l23035130
l23035130:
	word32 a1_153
	word32 a5_154
	word32 s4_155
	word32 s8_156
	s0 = xTimerGenericCommand(s0, 0<32>, 0<32>, 0<32>, a5_41, mstatus, dwArg44, dwArgB8, dwArgC8, dwArgF8, dwArg0138, out s1, out a0, out a1_153, out a3, out a4, out a5_154, out s2_15, out s3, out s4_155, out s5, out s6, out s8_156)
	branch a0 != 0<32> l230350E8
l23035136:
	word32 a5_158
	user_vAssertCalled(a4, mstatus, out a5_158)
l23035120:
	word32 a0_72 = Mem17[s2_15:int32]
	Mem73[a5_41 + 4<i32>:word32] = s0
	Mem74[s0 + 16<i32>:word32] = s0
	word32 a5_157
	a0 = vListInsert(a0_72, s3, 0<32>, out a4, out a5_157)
l230350F0:
	word32 a4_81 = Mem17[a3:word32]
	Mem82[a5_20:word32] = a4_81
	Mem85[s2_15:word32] = a3
	s1Out = s1
	a0Out = a0
	a3Out = a3
	a4Out = a4_81
	a5Out = a5_20
	s2Out = s2_15
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s8Out = dwLoc1C
	return s0
prvSwitchTimerLists_exit:


void prvTimerTask(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
prvTimerTask_entry:
l2303513C:
	word32 sp_186 = fp + -80<i32>
	word32 s4_271 = 0x4200E230<32>
	word32 s3_148 = 0x4200E23C<32>
	word32 s6_163 = 0x23078A1C<32>
	word32 s7_191 = 0x4200E234<32>
	word32 s5_162 = 9<32>
l2303517C:
	word32 a5_197
	word32 a4_221
	word32 a2_105
	word32 s0_217
	word32 mstatus_205
	word32 a3_203
	word32 a4_202
	word32 a5_37 = Mem36[s4_271:int32]
	word32 s2_147 = Mem36[a5_37:int32]
	branch s2_147 == 0<32> l2303528E
l2303528E:
	word32 a5_443
	a4_221 = vTaskSuspendAll(a4, out a5_443)
	word32 a5_43
	word32 a0_42 = xTaskGetTickCount(out a5_43)
	word32 s1_44 = Mem36[a5_43:word32]
	s0_217 = a0_42
	branch a0_42 <u a5_43 l230352AC
l2303529E:
	Mem48[a0_42:word32] = s1_44
	a2_105 = CONVERT(a2 <u 1<i32>, bool, word32)
l23035188:
	s2_147 = Mem36[Mem36[a5_37 + 12<i32>:word32]:int32]
	word32 a5_444
	a4_221 = vTaskSuspendAll(a4, out a5_444)
	word32 a5_57
	word32 a0_56 = xTaskGetTickCount(out a5_57)
	word32 s1_58 = Mem36[a5_57:word32]
	s0_217 = a0_56
	branch a0_56 <u a5_57 l230352AC
l230352AC:
	word32 a3_72
	word32 a4_73
	word32 a5_74
	word32 s1_78
	word32 s8_448
	word32 s4_447
	word32 s2_446
	word32 a0_445
	Mem92[prvSwitchTimerLists(s0_217, a3, a4_221, mstatus, Mem36[sp_186 + 68<i32>:word32], Mem36[sp_186 + 184<i32>:word32], Mem36[sp_186 + 200<i32>:word32], Mem36[sp_186 + 248<i32>:word32], Mem36[sp_186 + 312<i32>:word32], out s1_78, out a0_445, out a3_72, out a4_73, out a5_74, out s2_446, out s3_148, out s4_447, out s5_162, out s6_163, out s8_448):word32] = s1_78
	word32 s4_454
	word32 t3_455
	word32 a6_453
	word32 a0_451
	word32 a2_452
	word32 s0_449
	word32 s1_450
	xTaskResumeAll(a3_72, a4_73, a5_74, mstatus, Mem92[sp_186 + 344<i32>:word32], Mem92[sp_186 + 408<i32>:word32], out s0_449, out s1_450, out a0_451, out a2_452, out a3, out a4, out a5_197, out a6_453, out s4_454, out t3_455)
l2303519E:
	Mem104[a0_56:word32] = s1_58
	a2_105 = 0<32>
	branch a0_56 >=u s2_147 l230352C2
l230352C2:
	word32 a3_115
	word32 a4_116
	word32 t3_460
	word32 a5_458
	word32 a6_459
	word32 a2_457
	word32 a0_456
	word32 s1_111
	word32 s4_112
	word32 s0_110
	xTaskResumeAll(a3, a4_221, a5_57, mstatus, Mem104[sp_186 + 344<i32>:word32], Mem104[sp_186 + 408<i32>:word32], out s0_110, out s1_111, out a0_456, out a2_457, out a3_115, out a4_116, out a5_458, out a6_459, out s4_112, out t3_460)
	word32 s8_119 = Mem104[Mem104[Mem104[s4_112:int32] + 12<i32>:word32] + 12<i32>:int32]
	word32 a5_462
	word32 a4_461
	uxListRemove(a3_115, a4_116, out a4_461, out a5_462)
	word32 a5_124 = CONVERT(Mem104[s8_119 + 40<i32>:byte], byte, word32)
	branch (a5_124 & 4<i32>) != 0<32> l23035306
l23035306:
	word32 a5_135
	branch prvInsertTimerInActiveList(s8_119, Mem104[s8_119 + 24<i32>:int32] + s2_147, s0_110, s2_147, a5_124 & 4<i32>, out a5_135) == 0<32> l230352E8
l23035318:
	word32 a3_472
	word32 a1_471
	word32 a0_141
	word32 a4_154
	word32 a5_473
	s0_110 = xTimerGenericCommand(s8_119, 0<32>, 0<32>, 0<32>, a5_135, mstatus, Mem104[sp_186 + 100<i32>:word32], Mem104[sp_186 + 216<i32>:word32], Mem104[sp_186 + 232<i32>:word32], Mem104[sp_186 + 280<i32>:word32], Mem104[sp_186 + 344<i32>:word32], out s1_111, out a0_141, out a1_471, out a3_472, out a4_154, out a5_473, out s2_147, out s3_148, out s4_112, out s5_162, out s6_163, out s8_119)
	branch a0_141 != 0<32> l230352E8
l23035328:
	word32 a5_474
	user_vAssertCalled(a4_154, mstatus, out a5_474)
l230352E2:
	Mem167[s8_119 + 40<i32>:byte] = SLICE(a5_124 & 0xFFFFFFFE<32>, byte, 0)
l230352E8:
	word32 a2_199
	call Mem169[s8_119 + 32<i32>:int32] (retsize: 0;)
		uses: a0:s8_168,a2:a2_199,a3:a3_203,a4:a4_202,mstatus:mstatus_205,ra:ra_182,s0:s0_183,s1:s1_172,s2:s2_184,s3:s3_173,s4:s4_175,s5:s5_179,s6:s6_176,s7:s7_46,s8:s8_168
		defs: a2:a2_199,a3:a3_203,a4:a4_202,a5:a5_197,mstatus:mstatus_205,ra:ra_193,s3:s3_188,s5:s5_192,s6:s6_190,s7:s7_191,sp:sp_186
	mstatus = mstatus_205
	a4 = a4_202
	a3 = a3_203
l230351A6:
	word32 t3_468
	word32 s4_467
	word32 a6_466
	word32 a2_465
	word32 s1_464
	word32 s0_463
	word32 a4_228
	word32 a5_229
	word32 a0_238
	xTaskResumeAll(vQueueWaitForMessageRestricted(Mem214[s3_148:int32], s2_147 - s0_217, a2_105, a3, a4_221, mstatus, Mem214[sp_186 + 16<i32>:word32], Mem214[sp_186 + 20<i32>:word32], Mem214[sp_186 + 56<i32>:word32], out a4_228, out a5_229, out s3_148), a4_228, a5_229, mstatus, Mem214[sp_186 + 344<i32>:word32], Mem214[sp_186 + 408<i32>:word32], out s0_463, out s1_464, out a0_238, out a2_465, out a3, out a4, out a5_197, out a6_466, out s4_467, out t3_468)
	branch a0_238 != 0<32> l230351BC
l230351B8:
	__syscall()
l230351BC:
	word32 s1_469
	word32 a0_259
	word32 a1_260
	word32 s2_269
	word32 s0_267 = xQueueReceive(Mem250[s3_148:int32], sp_186 + 16<i32>, 0<32>, a3, a4, a5_197, mstatus, Mem250[sp_186 + 8<i32>:word32], Mem250[sp_186 + 36<i32>:word32], Mem250[sp_186 + 164<i32>:word32], Mem250[sp_186 + 280<i32>:word32], Mem250[sp_186 + 344<i32>:word32], out s1_469, out a0_259, out a1_260, out a2, out a3, out a4, out a5_197, out s2_269, out s3_148, out s4_271)
	branch a0_259 == 0<32> l2303517C
l230351CA:
	word32 s8_281 = Mem250[sp_186 + 4<i32>:word32]
	branch a5_197 < 0<32> l2303527C
l2303527C:
	call a5_197 (retsize: 0;)
		uses: a0:s0_267,a1:a1_260,a2:a2_261,a3:a3_262,a4:a4_263,a5:a5_264,mstatus:mstatus_255,Stack +0008:Mem250[sp_253 + 8<i32>:word32],Stack +0024:Mem250[sp_253 + 36<i32>:word32],Stack +00A4:Mem250[sp_253 + 164<i32>:word32],Stack +0118:Mem250[sp_253 + 280<i32>:word32],Stack +0158:Mem250[sp_253 + 344<i32>:word32]
		defs: a3:a3_288,a4:a4_289,a5:a5_290,s2:s2_295,s3:s3_296,s4:s4_297
	branch a5_197 < 0<32> l230351BC
l2303528A:
	s8_281 = Mem250[sp_186 + 4<i32>:word32]
l230351D2:
	word32 s0_310 = Mem250[a5_197 + 20<i32>:word32]
	branch a5_197 == 0<32> l230351DE
l230351D6:
	word32 a5_470
	uxListRemove(a3, a4, out a4, out a5_470)
l230351DE:
	word32 a0_317 = xTaskGetTickCount(out a5_197)
	word32 s1_320 = Mem250[a5_197:word32]
	branch a0_317 <u a5_197 l230352B8
l230352B8:
	Mem323[sp_186 + 132<i32>:word32] = a0_317
	s0_310 = prvSwitchTimerLists(s0_310, a3, a4, mstatus, Mem323[sp_186 + 68<i32>:word32], Mem323[sp_186 + 184<i32>:word32], Mem323[sp_186 + 200<i32>:word32], Mem323[sp_186 + 248<i32>:word32], Mem323[sp_186 + 312<i32>:word32], out s1_320, out a0_317, out a3, out a4, out a5_197, out s2_269, out s3_148, out s4_271, out s5_162, out s6_163, out s8_281)
l230351E8:
	Mem358[a0_317:word32] = s1_320
	branch s5_162 <u a5_197 l230351BC
l230351F0:
	word32 a5_371 = Mem358[(a5_197 << 2<i32>) + s6_163:word32]
	word32 a2_410
	word32 a4_413
	word32 a3_414
	word32 mstatus_416
	call a5_371 (retsize: 0;)
		uses: a2:a2_410,a3:a3_414,a4:a4_413,a5:a5_371,mstatus:mstatus_416,ra:ra_387,s0:s0_390,s1:s1_356,s2:s2_391,s3:s3_372,s4:s4_375,s5:s5_359,s6:s6_365,s7:s7_381,s8:s8_394
		defs: a2:a2_410,a3:a3_414,a4:a4_413,mstatus:mstatus_416
	return
prvTimerTask_exit:


word32 pvTimerGetTimerID(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip_obtaining_timeout
//      __reload_tsen
//      disconnect_retry
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
pvTimerGetTimerID_entry:
l2303532E:
	branch a0 == 0<32> l2303534C
l2303534C:
	word32 a5_37
	user_vAssertCalled(a4, mstatus, out a5_37)
l23035338:
	word32 a5_38
	vTaskEnterCritical(a4, mstatus, out a5_38)
	word32 s0_20 = Mem7[a0 + 28<i32>:word32]
	word32 a4_39
	word32 a5_40
	a3Out = vTaskExitCritical(a3, mstatus, out a4_39, out a5_40)
	return s0_20
pvTimerGetTimerID_exit:


void vPortSetupTimerInterrupt()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xPortStartScheduler
// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
vPortSetupTimerInterrupt_entry:
l23035352:
l23035356:
	word32 a2_7 = Mem0[0x200BFF8<32>:int32]
	word32 a4_8 = Mem0[0x200BFFC<32>:int32]
	branch a4_8 != Mem0[0x200BFFC<32>:int32] l23035356
l23035366:
	Mem17[a2_7 + 0x2000710<32>:word32] = 0x2004000<32>
	Mem20[CONVERT(a2_7 + 0x2000710<32> <u a2_7, bool, word32) + a4_8 + 4<i32>:word32] = 0x2004000<32>
	Mem25[a2_7 + 0x4FFFE20<32>:word32] = 0x4200E248<32>
	Mem26[a4_8 + CONVERT(a2_7 + 0x4FFFE20<32> <u a2_7, bool, word32) + 4<i32>:word32] = 0x4200E248<32>
	return
vPortSetupTimerInterrupt_exit:


void xPortStartScheduler(word32 gp, word32 tp, word32 t0, word32 a4, word32 fcsr, word32 mstatus, word32 mie, word32 mtvec)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskStartScheduler
// MayUse:  a4:[0..31] fcsr:[0..31] gp:[0..31] mie:[0..31] mstatus:[0..31] mtvec:[0..31] t0:[0..31] tp:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s4 s5 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
xPortStartScheduler_entry:
l2303539C:
	__csrrs(mtvec, t0)
	branch false l230353D6
l230353D6:
	word32 a5_64
	user_vAssertCalled(a4, mstatus, out a5_64)
l230353B4:
	vPortSetupTimerInterrupt()
	__csrrs(mie, tp)
	Mem32[0x2800407<32>:byte] = 1<8>
	fn23035700(gp, fcsr, mstatus, mtvec)
	return
xPortStartScheduler_exit:


void fn23035700(word32 gp, word32 fcsr, word32 mstatus, word32 mtvec)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xPortStartScheduler
// MayUse:  fcsr:[0..31] gp:[0..31] mstatus:[0..31] mtvec:[0..31]
// LiveOut:
// Trashed: a2 a3 a6 a7 ra s0 s1 s4 s5 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
fn23035700_entry:
l23035700:
	__csrrw(mtvec, 0x23035402<p32>)
	word32 sp_9 = Mem0[0x4200E1F8<p32>:int32]
	0<32> = Mem0[sp_9 + 64<i32>:word32]
	0<32> = Mem0[sp_9 + 32<i32>:word32]
	0<32> = Mem0[sp_9 + 992<i32>:word64]
	word32 sp_40 = Mem0[sp_9 + 472<i32>:word64]
	__csrrw(fcsr, gp)
	__csrrw(mstatus, 0<32>)
	0<32> = Mem0[sp_40 + 508<i32>:word32]
	return
fn23035700_exit:


word32 fn23035800(word32 a0, word32 a1, word32 a2, word32 mstatus, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvInitialiseNewTask.isra.2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31]
// LiveOut: a0 t0
// Trashed: a0 t0 t1
// Preserved: sp
fn23035800_entry:
l23035800:
	Mem11[a0 + 0xFFFFFFFC<32>:word32] = (__csrrs(mstatus, 0<32>) | 0x1880<32>) & -9<i32>
	Mem14[a2:word32] = a0 + 0xFFFFFFA4<32>
	Mem16[a0 + 0xFFFFFF8C<32>:word32] = 0<32>
	word32 a0_15 = a0 + 0xFFFFFF8C<32> + 0xFFFFFFFC<32>
	word32 t0_17 = 34<i32>
l2303582A:
	branch t0_17 == 0<32> l23035838
l23035838:
	word32 a0_20 = a0_15 + 0<32>
	Mem22[a1:word32] = a0_20
	a0Out = a0_20
	return t0_17
fn23035800_exit:
l2303582E:
	a0_15 = a0_15 + 0xFFFFFFFC<32>
	Mem24[a0_15:word32] = 0<32>
	t0_17 = t0_17 + 0xFFFFFFFF<32>


word32 prvInsertBlockIntoFreeList(word32 a0, word32 a2, word32 a3, word32 a5, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pvPortMalloc
//      vPortFree
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut: a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
prvInsertBlockIntoFreeList_entry:
l23035938:
l23035944:
	branch a5 <u a0 l23035942
l23035942:
l2303594A:
	word32 a4_12 = Mem0[a2 + 4<i32>:word32]
	word32 a0_15 = Mem0[a3 + 4<i32>:word32]
	word32 a1_16 = a4_12 + a2
	branch a0_15 == a1_16 l23035982
l23035982:
	a3 = a3 + a2
	Mem18[a3 + 4<i32>:word32] = a4_12
	a0_15 = a4_12
l23035956:
	branch a5 == a0_15 + a3 l23035968
l23035968:
	branch a5 == Mem25[0x4200E250<32>:int32] l2303595E
l23035974:
	word32 a5_27 = Mem25[a5 + 4<i32>:word32]
	a3 = a3 + a5_27
	Mem29[a3 + 4<i32>:word32] = a0_15
	a4_12 = Mem29[a5_27:word32]
	a5 = Mem29[a5_27:word32]
	Mem32[a5:word32] = a0_15
l2303595E:
	Mem35[a5:word32] = a0_15
l23035960:
	branch a0_15 == a4_12 l23035966
l23035964:
	Mem40[a0_15:word32] = a4_12
l23035966:
	a3Out = a3
	a4Out = a4_12
	a5Out = a5
	return a1_16
prvInsertBlockIntoFreeList_exit:


word32 pvPortMalloc(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg8C, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blsync_ble_start
//      inode_reserve
//      aos_loop_init
//      aos_poll_read_fd
//      aos_malloc
//      malloc
//      trigger_auto_denoise
//      bl_send_msg
//      bl_msg_zalloc.constprop.3
//      bl_ipc_init
//      k_malloc
//      __malloc
//      ota_cmd
//      ps_cmd
//      ls_cmd
//      dns_server_init
//      xQueueGenericCreate
//      xStreamBufferGenericCreate
//      xTaskCreate
//      vTaskList
//      xTimerCreate
//      bl_dma_irq_register
//      bl_dma_init
//      dev_uart_init
//      loopset_led_trigger
//      Encrypt_keyData
//      cm_AllocResources
//      cm_InitConnection
//      bl_mtd_open
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +008C:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
pvPortMalloc_entry:
l2303598A:
	branch a5 == 0<32> l23035A6C
l23035A6C:
	word32 a5_286
	user_vAssertCalled(a4, mstatus, out a5_286)
l230359A6:
	word32 a3_122
	word32 a5_287
	word32 a4_126 = vTaskSuspendAll(a4, out a5_287)
	word32 s2_30 = Mem16[0x4200E254<32>:int32]
	word32 a5_124 = s2_30 & a0
	branch a5_124 != 0<32> l230359BA
l230359B8:
	branch a0 != 0<32> l230359D6
l230359D6:
	a5_124 = a0 + 8<i32>
	a4_126 = a0 + 8<i32> & 7<i32>
	branch a4_126 != 0<32> l23035A56
l23035A56:
	a5_124 = (a0 + 8<i32> & 0xFFFFFFF8<32>) + 8<32>
l230359E0:
	branch a5_124 == 0<32> l230359BA
l230359E2:
	word32 s4_41 = Mem16[0x4200E258<32>:int32]
	branch s4_41 <u a5_124 l230359BA
l230359F2:
	a3 = 0x4200E260<32>
l23035A08:
	word32 s0_47 = Mem16[a4_126 + 4<i32>:word32]
	branch a4_126 <u a5_124 l23035A00
l23035A00:
	s0_47 = Mem16[a4_126:word32]
	branch a4_126 == 0<32> l23035A0E
l23035A04:
	a3 = s0_47
l23035A0E:
	word32 s1_54 = Mem16[a4_126:word32]
	branch a4_126 == s0_47 l230359BA
l23035A14:
	Mem59[a4_126:word32] = Mem16[s1_54:word32]
	word32 s0_60 = Mem59[a4_126 + 4<i32>:word32]
	word32 a3_63 = a4_126 - a5_124
	branch a3_63 >u 0x10<32> l23035A5C
l23035A5C:
	word32 a0_64 = s0_60 + a5_124
	Mem65[a3_63 + 4<i32>:word32] = a0_64
	Mem66[a5_124 + 4<i32>:word32] = s0_60
	word32 a5_297
	a1 = prvInsertBlockIntoFreeList(a0_64, 0x10<32>, a3_63, a5_124, out a3_63, out a4_126, out a5_297)
	s0_60 = Mem66[a4_126 + 4<i32>:word32]
l23035A28:
	word32 a5_77 = Mem76[a3_63:word32]
	word32 s4_82 = s4_41 - a4_126
	Mem86[0x4200E258<32>:word32] = s4_82
	branch s4_82 >=u a3_63 l23035A42
l23035A3E:
	Mem87[a5_77:word32] = s4_82
l23035A42:
	word32 s2_94 = s2_30 | a4_126
	Mem97[s0_60 + 4<i32>:word32] = s2_94
	Mem98[s0_60:word32] = 0<32>
	word32 a5_115
	word32 s1_118
	word32 a4_123
	word32 s0_298
	word32 a6_301
	word32 s4_302
	word32 t3_303
	word32 a0_299
	word32 a2_300
	xTaskResumeAll(a3_63, a4_126, a5_77, mstatus, dwArg0138, dwArg0178, out s0_298, out s1_118, out a0_299, out a2_300, out a3_122, out a4_123, out a5_115, out a6_301, out s4_302, out t3_303)
	branch s1_118 != 0<32> l230359C4
l230359C4:
	s1Out = s1_118
	a0Out = s1_118
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3_122
	a4Out = a4_123
	a5Out = a5_115
	a6Out = dwArg28
	s2Out = s2_94
	s3Out = 0x4200E258<32>
	s4Out = dwArg04
	s8Out = s4
	return s1
pvPortMalloc_exit:
l23035A54:
l230359BA:
	word32 a0_290
	word32 a5_293
	word32 t3_296
	word32 a6_294
	word32 s4_295
	word32 a2_291
	word32 a4_292
	word32 s0_288
	word32 s1_289
	xTaskResumeAll(a3, a4_126, a5_124, mstatus, dwArg0138, dwArg0178, out s0_288, out s1_289, out a0_290, out a2_291, out a3_122, out a4_292, out a5_293, out a6_294, out s4_295, out t3_296)
l230359BE:
	vApplicationMallocFailedHook(ra, a3_122, dwLoc08, dwArg40, dwArg44, s1, dwArg8C)


word32 vPortFree(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s4Out, ptr32 & t3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blesync_complete_cb
//      blsync_ble_stop
//      aos_poll_read_fd
//      aos_loop_run
//      dfl_entry
//      aos_mutex_free
//      free
//      aos_free
//      bl_send_msg
//      cmd_complete.isra.1
//      cmd_mgr_llind
//      cmd_mgr_queue
//      k_free
//      __free
//      ota_cmd
//      ps_cmd
//      ls_cmd
//      vEventGroupDelete
//      vStreamBufferDelete
//      prvDeleteTCB
//      xTaskCreate
//      vTaskList
//      aos_register_driver
//      aos_register_fs
//      GeneratePWKMsg3
//      GenerateApEapolMsg
//      Encrypt_keyData
//      cm_InitConnection
//      cm_DeleteConnection
//      bloop_run
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
vPortFree_entry:
l23035A72:
	branch a0 == 0<32> l23035B02
l23035B02:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a6Out = a6
	s4Out = s4
	t3Out = t3
	return tp
l23035A74:
	word32 s1_124
	word32 a3_111
	word32 a4_114 = Mem11[a0 + -4<i32>:int32]
	branch (a4_114 & a5) == 0<32> l23035AB8
l23035AB8:
	word32 a5_147
	a2 = user_vAssertCalled(a4_114, mstatus, out a5_147)
	a5 = Mem11[a0 + -8<i32>:int32]
	branch a5 != 0<32> l23035A98
l23035AC2:
	a4_114 = Mem11[a0 + -4<i32>:int32]
	s1_124 = Mem11[a5:word32]
	a3_111 = a4_114 & a5
	branch a3_111 == 0<32> l23035AAE
l23035A92:
	a3_111 = Mem11[a0 + -8<i32>:int32]
	branch a3_111 == 0<32> l23035ACE
l23035A98:
	a2 = user_vAssertCalled(a4_114, mstatus, out a5)
	a4_114 = Mem11[a0 + -4<i32>:int32]
	s1_124 = Mem11[a5:word32]
	a3_111 = a4_114 & a5
	branch a3_111 == 0<32> l23035AAE
l23035AA8:
	a3_111 = Mem11[a0 + -8<i32>:int32]
	branch a3_111 == 0<32> l23035ACE
l23035ACE:
	Mem40[a0 + 4092<i32>:word32] = ~a5 & a4_114
	word32 a5_148
	vTaskSuspendAll(a4_114, out a5_148)
	word32 a5_45 = Mem40[a3_111:word32]
	Mem49[Mem40[a0 + -4<i32>:int32] + a3_111:word32] = a5_45
	word32 a3_55
	word32 a4_56
	word32 a5_57
	word32 a1_53 = prvInsertBlockIntoFreeList(a0 + -8<i32>, a2, a3_111, a5_45, out a3_55, out a4_56, out a5_57)
l23035AFE_thunk_xTaskResumeAll:
	word32 a0_65
	word32 a2_66
	word32 a5_67
	word32 a6_68
	word32 s0_69
	word32 s1_70
	word32 s4_71
	word32 t3_72
	word32 a3_74
	word32 a4_75
	word32 tp_73 = xTaskResumeAll(a3_55, a4_56, a5_57, mstatus, dwArg0158, dwArg0198, out s0_69, out s1_70, out a0_65, out a2_66, out a3_74, out a4_75, out a5_67, out a6_68, out s4_71, out t3_72)
	s0Out = s0_69
	s1Out = s1_70
	a0Out = a0_65
	a1Out = a1_53
	a2Out = a2_66
	a3Out = a3_74
	a4Out = a4_75
	a5Out = a5_67
	a6Out = a6_68
	s4Out = s4_71
	t3Out = t3_72
	return tp_73
l23035AAE:
	s0Out = s0
	s1Out = s1_124
	a0Out = a0
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3_111
	a4Out = a4_114
	a5Out = a5
	a6Out = a6
	s4Out = s4
	t3Out = t3
	return dwArg14
vPortFree_exit:


void xPortGetFreeHeapSize()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vApplicationMallocFailedHook
//      version_cmd
// MayUse: 
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
xPortGetFreeHeapSize_entry:
l23035B04:
	return
xPortGetFreeHeapSize_exit:


void vPortDefineHeapRegions(word32 s0, word32 a0, word32 a4, word32 mstatus, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
vPortDefineHeapRegions_entry:
l23035B0E:
	word32 a5_159 = Mem5[0x4200E250<32>:int32]
	word32 s3_106 = a0
	branch a5_159 == 0<32> l23035BF8
l23035BF8:
	branch s0 != 0<32> l23035B40
l23035B32:
	word32 a5_293
	user_vAssertCalled(a4, mstatus, out a5_293)
	s0 = Mem24[a0 + 4<i32>:int32]
	branch s0 == 0<32> l23035BFC
l23035BFC:
	Mem34[0x4200E25C<32>:word32] = 0<32>
	Mem36[0x4200E258<32>:word32] = 0<32>
l23035B3C:
	a5_159 = Mem24[0x4200E250<32>:int32]
l23035B40:
	word32 s4_119 = 0<32>
	word32 s5_112 = 0<32>
l23035B4C:
	word32 s1_44 = Mem43[s3_106:int32]
	word32 a4_45 = s1_44 & 7<i32>
	word32 s2_46 = s1_44
	branch (s1_44 & 7<i32>) == 0<32> l23035B66
l23035B58:
	a4_45 = s1_44 + 7<i32> & 0xFFFFFFF8<32>
	s0 = s0 + s1_44 - a4_45
	s1_44 = a4_45
	s2_46 = a4_45
l23035B66:
	branch s4_119 != 0<32> l23035BDC
l23035BDC:
	branch a5_159 == 0<32> l23035BEE
l23035BEE:
	word32 a5_294
	user_vAssertCalled(a4_45, mstatus, out a5_294)
	a5_159 = Mem43[0x4200E250<32>:int32]
l23035BDE:
	a4 = a5_159
	branch a5_159 <u s2_46 l23035B74
l23035BE4:
	word32 a5_295
	user_vAssertCalled(a5_159, mstatus, out a5_295)
	a4 = Mem43[0x4200E250<32>:int32]
l23035B6A:
	Mem80[0x4200E260<32>:word32] = s1_44
	Mem81[0x4200E264<32>:word32] = 0<32>
	a4 = a5_159
l23035B74:
	a5_159 = s0 + s2_46 + 0xFFFFFFF8<32> & -8<i32>
	Mem90[a5_159 + 4<i32>:word32] = 0<32>
	Mem91[a5_159:word32] = 0<32>
	Mem94[0x4200E250<32>:word32] = a5_159
	word32 s2_101 = a5_159 - s2_46
	Mem97[s1_44 + 4<i32>:word32] = s2_101
	Mem98[a5_159:word32] = s1_44
	branch a4 == 0<32> l23035B9A
l23035B94:
	Mem100[s1_44:word32] = a4
	s2_101 = Mem100[s1_44 + 4<i32>:int32]
l23035B9A:
	s3_106 = s3_106 + 8<32>
	s0 = Mem107[s3_106 + 4<i32>:int32]
	s5_112 = s5_112 + s2_101
	s4_119 = s4_119 + 1<32>
	branch s0 != 0<32> l23035B4C
l23035BA6:
	Mem121[0x4200E25C<32>:word32] = s5_112
	Mem123[0x4200E258<32>:word32] = s5_112
	branch s5_112 == 0<32> l23035C0C
l23035C0C:
	word32 a5_296
	user_vAssertCalled(a4, mstatus, out a5_296)
l23035BBA:
	Mem148[0x4200E254<32>:word32] = 0x80000000<32>
	0<32> = dwArg0128
	return
vPortDefineHeapRegions_exit:


void uart_generic_notify_handler(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      UART0_IRQHandler
//      UART1_IRQHandler
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a0 ra sp
uart_generic_notify_handler_entry:
l23035C12:
	word32 s3_106 = Mem10[(a0 << 2<u32>) + 0x23082798<32>:int32]
	word32 s1_110 = Mem19[s3_106 + 32<i32>:int32]
	word32 s0_109 = Mem19[s3_106 + 36<i32>:int32]
	word32 s2_107 = a0
	branch (s1_110 & 1<i32>) == 0<32> l23035C4C
l23035C40:
	branch (s0_109 & 1<i32>) != 0<32> l23035C4C
l23035C46:
	Mem26[s3_106 + 40<i32>:word32] = 1<32>
l23035C4C:
	branch (s1_110 & 2<i32>) == 0<32> l23035C74
l23035C52:
	branch (s0_109 & 2<i32>) != 0<32> l23035C74
l23035C58:
	Mem35[s3_106 + 40<i32>:word32] = 2<32>
	branch false l23035C74
l23035C70:
	call 0x42012FA4<32> (retsize: 0;)
		uses: a0:a0,a5:Mem35[a0 + 4<i32>:word32],ra:ra,s0:s0_21,s1:s1_20,s2:a0,s3:s3_11
		defs: a0:a0_45,ra:ra_49,s0:s0_50,s1:s1_51,s2:s2_48,s3:s3_47
l23035C74:
	branch (s1_110 & 4<i32>) == 0<32> l23035C96
l23035C7A:
	branch (s0_109 & 4<i32>) != 0<32> l23035C96
l23035C80:
	branch false l23035C96
l23035C92:
	call 0x42012FA4<32> (retsize: 0;)
		uses: a0:a0_68,a5:Mem65[a0_68 + 12<i32>:word32],ra:ra_71,s0:s0_59,s1:s1_57,s2:s2_63,s3:s3_70
		defs: a0:a0_75,ra:ra_79,s0:s0_80,s1:s1_81,s2:s2_78,s3:s3_77
l23035C96:
	branch (s1_110 & 8<i32>) == 0<32> l23035CB8
l23035C9C:
	branch (s0_109 & 8<i32>) != 0<32> l23035CB8
l23035CA2:
	branch false l23035CB8
l23035CB4:
	call 0x42012FA4<32> (retsize: 0;)
		uses: a0:a0_97,a5:Mem65[a0_97 + 4<i32>:word32],ra:ra_100,s0:s0_89,s1:s1_87,s2:s2_93,s3:s3_99
		defs: ra:ra_108,s0:s0_109,s1:s1_110,s2:s2_107,s3:s3_106
l23035CB8:
	branch (s1_110 & 16<i32>) == 0<32> l23035CE2
l23035CBE:
	branch (s0_109 & 16<i32>) != 0<32> l23035CE2
l23035CC4:
	Mem122[s3_106 + 40<i32>:word32] = 0x10<32>
	word32 s2_126 = s2_107 << 4<i32>
	word32 a5_128 = Mem122[s2_126 + 0x42012FA4<32>:int32]
	branch a5_128 == 0<32> l23035CE2
l23035CDC:
	call a5_128 (retsize: 0;)
		uses: a0:Mem122[s2_126 + 0x42012FA8<32>:int32],ra:ra_130,s0:s0_118,s1:s1_116,s2:s2_126 + 0x42012FA4<32>,s3:s3_121
		defs: s0:s0_139,s1:s1_140,s3:s3_136
l23035CE2:
	branch (s1_110 & 32<i32>) == 0<32> l23035CF6
l23035CE8:
	branch (s0_109 & 32<i32>) != 0<32> l23035CF6
l23035CEE:
	Mem152[s3_106 + 40<i32>:word32] = 32<i32>
l23035CF6:
	return
uart_generic_notify_handler_exit:


void UART0_IRQHandler(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
UART0_IRQHandler_entry:
l23035D04:
l23035D06_thunk_uart_generic_notify_handler:
	uart_generic_notify_handler(ra, 0<32>)
	return
UART0_IRQHandler_exit:


void UART1_IRQHandler(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
UART1_IRQHandler_entry:
l23035D0A:
l23035D0C_thunk_uart_generic_notify_handler:
	uart_generic_notify_handler(ra, 1<32>)
	return
UART1_IRQHandler_exit:


word32 bl_uart_init(word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & s1Out, ptr32 & a1Out, ptr32 & s2Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
//      vfs_uart_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a1 ra s1 s2 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_uart_init_entry:
l23035D10:
	word32 a7_248
	word32 a5_246
	word32 a6_247
	word32 a3_244
	word32 a4_245
	word32 a2_32
	word32 a1_31 = memcpy(fp + -48<i32>, 0x23078A54<32>, 0x10<32>, out a2_32, out a3_244, out a4_245, out a5_246, out a6_247, out a7_248)
	word32 a5_46 = CONVERT(Mem45[0x4200E268<32>:byte], byte, word32)
	branch a5_46 != 0<32> l23035D5E
l23035D4E:
	Mem57[GLB_Set_UART_CLK(1<32>, 1<32>, 3<32>, a5_46, out a2_32):byte] = 1<8>
	a1_31 = 1<32>
l23035D5E:
	word32 s1_124
	word32 a1_125
	word32 sp_74
	word32 s3_75
	word32 a1_76
	word32 s0_77
	word32 s2_78
	word32 a2_80
	word32 s1_81
	word32 s4_82
	word32 a5_84
	call 0x4200C5D8<p32> (retsize: 0;)
		uses: a0:fp + -56<i32>,a1:a1_70,a2:a2_72,a5:257<i32>,ra:0x4200CD78<p32>,s0:a0,s1:2<32>,s2:a2,s3:a1,s4:a5,Stack +0008:SLICE(a2, byte, 0),Stack +0009:7<8>,Stack +000A:2<16>,Stack +000C:0x101<16>
		defs: a1:a1_76,a2:a2_80,a5:a5_84,s0:s0_77,s1:s1_81,s2:s2_78,s3:s3_75,s4:s4_82,sp:sp_74
	Mem98[sp_74 + 8<i32>:byte] = SLICE(s3_75, byte, 0)
	Mem99[sp_74 + 10<i32>:word16] = SLICE(s1_81, word16, 0)
	word32 s3_102
	word32 s0_104
	word32 s2_105
	word32 ra_110
	call 0x4200C5D8<p32> (retsize: 0;)
		uses: a0:sp_74 + 8<i32>,a1:a1_76,a2:a2_80,a5:a5_84,ra:0x4200CD8A<p32>,s0:s0_77,s1:s1_81,s2:s2_78,s3:s3_75,s4:s4_82
		defs: ra:ra_110,s0:s0_104,s2:s2_105,s3:s3_102
	branch s0_104 == 0<32> l23035DFA
l23035DFA:
	s1_124 = 3<32>
	a1_125 = 2<32>
l23035D94:
	s1_124 = 7<32>
	a1_125 = 6<32>
l23035D98:
	GLB_UART_Fun_Sel(s3_102 & 7<i32>, a1_125)
	UART_IntMask(8<32>, 1<32>, GLB_UART_Fun_Sel(s2_105 & 7<i32>, s1_124))
	UART_FifoConfig(fp - 60<i32>, UART_TxFreeRun(1<32>, UART_Init(s0_104, 1<32>, UART_Disable(2<32>))))
	word32 a1_189 = UART_Enable(2<32>)
	s1Out = s1_124
	a1Out = a1_189
	s2Out = s2_105
	s8Out = dwArgD4
	return ra_110
bl_uart_init_exit:


word32 bl_uart_data_send(word32 s1, word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vprint
//      bl_putchar
//      puts
//      hal_uart_send
// MayUse:  a0:[0..31] a1:[0..7] s1:[0..31]
// LiveOut: a0 a4 a5 s0 s4 s8
// Trashed: a0 a2 a4 a5 s0 s4 s8 t3
// Preserved: sp
bl_uart_data_send_entry:
l23035E00:
l23035E1A:
	word32 a5_22
	branch UART_GetTxFifoCount(a0, out a5_22) == 0<32> l23035E1A
l23035E26:
	Mem25[s1 + 136<i32>:byte] = SLICE(a1, byte, 0)
	a0Out = 0<32>
	a4Out = a0 << 2<u32>
	a5Out = a5_22
	s4Out = dwArg04
	s8Out = dwLoc1C
	return a0
bl_uart_data_send_exit:


word32 bl_uart_data_recv(word32 s0, word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_recv_II
// MayUse:  a0:[0..31] s0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
bl_uart_data_recv_entry:
l23035E36:
	word32 a0_15
	word32 a5_14
	branch UART_GetRxFifoCount(a0, out a5_14) == 0<32> l23035E62
l23035E62:
	a0_15 = 0xFFFFFFFF<32>
l23035E52:
	a0_15 = CONVERT(Mem11[s0 + 140<i32>:byte], byte, word32) & 255<i32>
l23035E5A:
	a4Out = a0 << 2<u32>
	a5Out = a5_14
	return a0_15
bl_uart_data_recv_exit:


word32 bl_uart_int_rx_enable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_enable
// MayUse:  a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: s0 sp
bl_uart_int_rx_enable_entry:
l23035E66:
	return UART_IntMask(4<32>, 0<32>, UART_IntMask(1<32>, 0<32>, UART_IntMask(3<32>, 0<32>, UART_SetRxTimeoutValue(0x18<32>, a4))))
bl_uart_int_rx_enable_exit:


word32 bl_uart_int_rx_disable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_disable
// MayUse:  a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: s0 sp
bl_uart_int_rx_disable_entry:
l23035E9C:
	return UART_IntMask(4<32>, 1<32>, UART_IntMask(1<32>, 1<32>, UART_IntMask(3<32>, 1<32>, a4)))
bl_uart_int_rx_disable_exit:


void bl_uart_int_tx_enable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_enable
//      hal_uart_send_trigger
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
bl_uart_int_tx_enable_entry:
l23035ECA:
	UART_IntMask(2<32>, 0<32>, a4)
	return
bl_uart_int_tx_enable_exit:


void bl_uart_int_tx_disable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_disable
//      hal_uart_send_trigger_off
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
bl_uart_int_tx_disable_entry:
l23035EDE:
	UART_IntMask(2<32>, 1<32>, a4)
	return
bl_uart_int_tx_disable_exit:


word32 bl_uart_flush(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_init
//      hal_uart_send_flush
// MayUse:  a0:[0..31]
// LiveOut: a5 s1
// Trashed: a0 a2 a5 s1 tp
// Preserved: s0 sp
bl_uart_flush_entry:
l23035EF2:
l23035F00:
	word32 a5_16
	branch UART_GetTxFifoCount(a0, out a5_16) != 32<i32> l23035F00
l23035F0A:
	a5Out = a5_16
	return a0
bl_uart_flush_exit:


void bl_uart_getdefconfig(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
bl_uart_getdefconfig_entry:
l23035F16:
	branch a1 == 0<32> l23035F1C
l23035F18:
	Mem4[a1:byte] = 0<8>
l23035F1C:
	return
bl_uart_getdefconfig_exit:


void bl_uart_setconfig(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_setbaud
//      hal_uart_setconfig
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_uart_setconfig_entry:
l23035F1E:
	word32 a2_26
	word32 a3_79
	word32 a4_80
	word32 a5_81
	word32 a6_82
	word32 a7_83
	memcpy(fp + 0xFFFFFFE0<32>, 0x23078A64<32>, 0x10<32>, out a2_26, out a3_79, out a4_80, out a5_81, out a6_82, out a7_83)
	UART_TxFreeRun(1<32>, UART_Init(a0, a2_26, UART_Disable(2<32>)))
	UART_Enable(2<32>)
	return
bl_uart_setconfig_exit:


void bl_uart_setbaud(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_setbaud
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_uart_setbaud_entry:
l23035F70:
l23035F72_thunk_bl_uart_setconfig:
	bl_uart_setconfig(a0)
	return
bl_uart_setbaud_exit:


void bl_uart_int_enable(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_uart_int_enable_entry:
l23035F76:
	word32 a0_50
	branch a0 == 0<32> l23035F8A
l23035F8A:
	bl_uart_int_tx_enable(bl_uart_int_rx_enable(a4))
	word32 s0_183
	word32 s1_184
	word32 a3_185
	word32 s2_186
	word32 s3_187
	bl_irq_register(ra, s1, 45<i32>, 0x23035D04<32>, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s0_183, out s1_184, out a3_185, out s2_186, out s3_187)
	a0_50 = 45<i32>
l23035F7C:
	branch a0 == 1<32> l23035FB0
l23035FB0:
	bl_uart_int_tx_enable(bl_uart_int_rx_enable(1<32>))
	word32 s0_188
	word32 s1_189
	word32 a3_190
	word32 s2_191
	word32 s3_192
	bl_irq_register(ra, s1, 46<i32>, 0x23035D0A<32>, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s0_188, out s1_189, out a3_190, out s2_191, out s3_192)
	a0_50 = 46<i32>
l23035FA8:
	bl_irq_enable(a0_50)
l23035F82:
l23035F84:
	return
bl_uart_int_enable_exit:


word32 bl_uart_int_disable(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg7C, word32 dwArg8C, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_close
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +008C:[0..31]
// LiveOut: a3 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_uart_int_disable_entry:
l23035FD0:
	word32 a4_123
	word32 a0_50
	branch a0 == 0<32> l23035FE4
l23035FE4:
	bl_uart_int_tx_disable(bl_uart_int_rx_disable(a4))
	s0 = bl_irq_unregister(ra, s1, 45<i32>, 0x23035D04<32>, s2, dwLoc08, dwArg30, dwArg34, dwArg40, dwArg44, dwArg68, dwArg7C, dwArg8C, out a3, out a4_123)
	a0_50 = 45<i32>
l23035FD6:
	a4_123 = 1<32>
	branch a0 == 1<32> l23036008
l23036008:
	bl_uart_int_tx_disable(bl_uart_int_rx_disable(1<32>))
	s0 = bl_irq_unregister(ra, s1, 46<i32>, 0x23035D0A<32>, s2, dwLoc08, dwArg30, dwArg34, dwArg40, dwArg44, dwArg68, dwArg7C, dwArg8C, out a3, out a4_123)
	a0_50 = 46<i32>
l23036002:
	bl_irq_disable(a0_50)
l23035FDC:
l23035FDE:
	a3Out = a3
	a4Out = a4_123
	return s0
bl_uart_int_disable_exit:


void bl_uart_int_rx_notify_register(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_notify_register
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
bl_uart_int_rx_notify_register_entry:
l23036028:
	branch a0 >u 1<32> l23036044
l23036044:
	return
l2303602E:
	word32 a0_9 = (a0 << 4<u32>) + 0x42012FA4<32>
	Mem11[a1:word32] = a0_9
	Mem13[a2 + 4<i32>:word32] = a0_9
	return
bl_uart_int_rx_notify_register_exit:


void bl_uart_int_tx_notify_register(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_notify_register
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
bl_uart_int_tx_notify_register_entry:
l23036048:
	branch a0 >u 1<32> l23036064
l23036064:
	return
l2303604E:
	word32 a0_9 = (a0 << 4<u32>) + 0x42012FA4<32>
	Mem11[a1 + 8<i32>:word32] = a0_9
	Mem13[a2 + 12<i32>:word32] = a0_9
	return
bl_uart_int_tx_notify_register_exit:


word32 bl_chip_info(word32 ra, word32 s1, word32 a0, word32 misa)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a0:[0..31] misa:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_chip_info_entry:
l23036068:
	word32 a0_35
	__csrrs(misa, ra)
	word32 s0_11 = a0
	branch s1 >>u 0x1E<u32> == 2<32> l230360A8
l230360A8:
	word32 a6_163
	word32 a7_164
	word32 a4_161
	word32 a5_162
	word32 a2_159
	word32 a3_160
	memcpy(a0, 0x23078D38<32>, 4<32>, out a2_159, out a3_160, out a4_161, out a5_162, out a6_163, out a7_164)
	a0_35 = a0 + 4<i32>
l23036086:
	branch s1 >>u 0x1E<u32> == 3<32> l230360F4
l230360F4:
	word32 a6_169
	word32 a4_167
	word32 a5_168
	word32 a7_170
	word32 a2_165
	word32 a3_166
	memcpy(a0, 0x23078D40<32>, 5<32>, out a2_165, out a3_166, out a4_167, out a5_168, out a6_169, out a7_170)
	a0_35 = a0 + 5<i32>
l2303608C:
	word32 a1_58
	s0_11 = a0 + 4<i32>
	branch s1 >>u 0x1E<u32> != 1<32> l23036108
l23036108:
	a1_58 = 0x23078D48<32>
l23036098:
	a1_58 = 0x23078D30<32>
l230360A0:
	word32 a3_172
	word32 a2_171
	word32 a4_173
	word32 a5_174
	word32 a6_175
	word32 a7_176
	memcpy(a0, a1_58, 4<32>, out a2_171, out a3_172, out a4_173, out a5_174, out a6_175, out a7_176)
	a0_35 = a0 + 4<i32>
l230360BA:
	Mem81[a0_35:byte] = 0x2D<8>
	word32 a4_82 = a0_35 + 1<i32>
	word32 a5_83 = 0<32>
l230360CC:
	branch (1<32> << a5_83 & s1) == 0<32> l230360DE
l230360D4:
	Mem93[a4_82:byte] = SLICE(a5_83 + 65<i32>, byte, 0)
	a4_82 = a4_82 + 1<32>
l230360DE:
	a5_83 = a5_83 + 1<32>
	branch a5_83 != 0x1A<32> l230360CC
l230360E4:
	Mem100[a4_82:byte] = 0<8>
	return s0_11
bl_chip_info_exit:


word32 bl_chip_banner(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
bl_chip_banner_entry:
l23036112:
	Mem6[0x23078A74<32>:word32] = a0
	return 0<32>
bl_chip_banner_exit:


word32 bl_chip_memory_ram(word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      version_cmd
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] Stack +0038:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a4 a5 s1 s2 tp
// Preserved: s0 sp
bl_chip_memory_ram_entry:
l23036120:
	word32 a0_5 = Mem0[a4:word32]
	branch a4 <= 2<32> l230361B6
l230361B6:
	return 0xFFFFFFFF<32>
l23036128:
	Mem18[3<32>:word32] = a0_5
	Mem22[0x23000000<32>:word32] = a1
	Mem28[0x400000<32>:word32] = a2
	word32 a4_84
	word32 a5_85
	strcpy(a3, 0x23078D50<32>, out a4_84, out a5_85)
	Mem39[a1 + 4<i32>:word32] = 0x4200C000<32>
	Mem43[0x34004<32>:word32] = a2
	word32 a4_86
	word32 a5_87
	strcpy(a3 + 6<i32>, 0x23078D58<32>, out a4_86, out a5_87)
	Mem51[a1 + 8<i32>:word32] = 0x42040000<32>
	Mem55[0xA000008<32>:word32] = a2
	word32 a4_88
	word32 a5_89
	strcpy(a3 + 12<i32>, 0x23078D5C<32>, out a4_88, out a5_89)
	0<32> = dwArg38
	return 0<32>
bl_chip_memory_ram_exit:


void bl_sys_reset_por(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_reboot
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
bl_sys_reset_por_exit:
bl_sys_reset_por_entry:
l230361BA:
	__csrrc(mstatus, 8<32>)
	call 0x4200C5A6<p32> (retsize: 0;)
		uses: mstatus:mstatus,ra:0x4200C1C2<p32>
l230361CA:


void bl_sys_reset_system(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_sys_reset
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
bl_sys_reset_system_exit:
bl_sys_reset_system_entry:
l230361CC:
	__csrrc(mstatus, 8<32>)
	call 0x4200C592<p32> (retsize: 0;)
		uses: mstatus:mstatus,ra:0x4200C1D4<p32>
l230361DC:


word32 bl_sys_isxipaddr(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_mtd_write
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
bl_sys_isxipaddr_entry:
l230361DE:
	return CONVERT(((a0 & 0xFF000000<32>) + 0xDD000000<32> & 0xDF000000<32>) <u 1<i32>, bool, word32)
bl_sys_isxipaddr_exit:


void bl_sys_em_config()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sys_init
// MayUse: 
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: sp
bl_sys_em_config_entry:
l230361F6:
	word32 a0_11
	branch true l23036210
l23036210:
	a0_11 = 3<32>
l23036206:
	branch true l23036216
l2303620C:
	a0_11 = 0xF<32>
l23036212:
	GLB_Set_EM_Sel(a0_11, 0x2000000<32>)
l23036216:
	return
bl_sys_em_config_exit:


void bl_sys_early_init(word32 t0, word32 a5, word32 mtvec)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a5:[0..31] mtvec:[0..31] t0:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: sp
bl_sys_early_init_entry:
l2303621E:
	HBN_Aon_Pad_IeSmt_Cfg(1<32>, a5)
	__csrrw(mtvec, t0)
	return
bl_sys_early_init_exit:


void bl_sys_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse: 
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: sp
bl_sys_init_entry:
l2303623C:
	bl_sys_em_config()
	return
bl_sys_init_exit:


void bl_dma_int_process(word32 ra, word32 s0, word32 s1, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s0:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 t3 tp
// Preserved: s8 sp
bl_dma_int_process_entry:
l2303624C:
	word32 s7_110 = Mem23[Mem23[s0 + 4<i32>:word32] + 12<i32>:int32]
	bl_irq_ctx_get(ra, 0x1F<32>, fp + -52<i32>, dwLoc38, dwArg10, dwArg14, dwArg38, ra)
	word32 s2_103 = 0<32>
	word32 s8_106 = 1<32>
	word32 s3_104 = 0x4000C000<32>
	word32 s6_105 = 4<32>
l2303627C:
	word32 a5_36 = s8_106 << s2_103
	word32 s5_109 = a5_36 & s0
	word32 s4_102 = a5_36 & s7_110
	branch s5_109 != 0<32> l230362C6
l230362C6:
	s0 = Mem42[s3_104 + 8<i32>:int32] | a5_36
	Mem45[s3_104 + 8<i32>:word32] = s0
	branch s4_102 == 0<32> l2303629A
l230362D4:
l2303628C:
	branch s4_102 == 0<32> l230362A8
l23036290:
	s0 = Mem47[s3_104 + 16<i32>:int32] | a5_36
	Mem51[s3_104 + 16<i32>:word32] = s0
l2303629A:
	word32 a5_123 = Mem55[s1 + 4<i32>:word32]
l230362A0:
	a5_123 = Mem55[a5_123:word32]
	branch s1 != a5_123 l230362D6
l230362D6:
	word32 s1_101 = Mem55[a5_123 + 8<i32>:word32]
	branch a5_123 != s2_103 l230362F0
l230362DC:
	word32 s1_71 = Mem55[a5_123 + 12<i32>:word32]
	branch a5_123 == 0<32> l230362E6
l230362E0:
	branch s5_109 == 0<32> l230362E6
l230362E4:
	call a5_123 (retsize: 0;)
		uses: ra:ra_76,s0:s0_77,s1:s1_71,s2:s2_70,s3:s3_73,s4:s4_78,s5:s5_72,s6:s6_74,s7:s7_79,s8:s8_75,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0038:dwArg38,Stack +FFFFFFC8:dwLoc38
		defs: a5:a5_91,ra:ra_85,s0:s0_86,s2:s2_81,s3:s3_82,s4:s4_88,s5:s5_89,s6:s6_83,s7:s7_90,s8:s8_84
l230362E6:
	s1_101 = Mem55[a5_123 + 16<i32>:word32]
	branch a5_123 == 0<32> l230362F0
l230362EA:
	branch s4_102 == 0<32> l230362F0
l230362EE:
	call a5_123 (retsize: 0;)
		uses: ra:ra_107,s0:s0_108,s1:s1_101,s2:s2_103,s3:s3_104,s4:s4_102,s5:s5_109,s6:s6_105,s7:s7_110,s8:s8_106,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0038:dwArg38,Stack +FFFFFFC8:dwLoc38
		defs: a5:a5_123,ra:ra_117,s0:s0_118,s1:s1_119,s2:s2_113,s3:s3_114,s4:s4_120,s5:s5_121,s6:s6_115,s7:s7_122,s8:s8_116
l230362F0:
	s1 = Mem55[s1_101 + 4<i32>:word32]
l230362A8:
	s2_103 = s2_103 + 1<32>
	branch s2_103 != s6_105 l2303627C
l230362AE:
	0<32> = dwArg0198
	return
bl_dma_int_process_exit:


word32 bl_dma_int_clear(word32 a0, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_IRQHandler
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
bl_dma_int_clear_entry:
l230362F4:
	word32 a0_8 = 1<32> << a0
	word32 a5_12 = 1<32>
	branch (a4 & a0_8 & 255<i32>) == 0<32> l2303630E
l23036308:
	Mem13[(a0_8 | 1<32>) + 8<i32>:word32] = Mem0[9<32>:word32]
	a5_12 = a0_8 | 1<32>
l2303630E:
	word32 a5_18 = a5_12 & a0_8
	word32 a4_16 = Mem15[a5_12 + 12<i32>:word32]
	branch (a5_18 & 255<i32>) == 0<32> l23036322
l2303631C:
	a4_16 = Mem15[(a5_18 & 255<i32>) + 16<i32>:word32]
	Mem22[(a0_8 | a5_18 & 255<i32>) + 16<i32>:word32] = a4_16
l23036322:
	a5Out = a5_18 & 255<i32>
	return a4_16
bl_dma_int_clear_exit:


void bl_dma_IRQHandler(word32 ra, word32 a4, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 t1
// Preserved: s0 sp
bl_dma_IRQHandler_entry:
l23036326:
	word32 a5_14
	word32 a4_13 = bl_dma_int_clear(0<32>, a4, out a5_14)
	word32 a5_17
	branch utils_list_pop_front(a4_13, a5_14, out a5_17) != 0<32> l23036392
l23036392:
	branch a5_17 == 0<32> l2303639A
l23036396:
	call a5_17 (retsize: 0;)
		uses: a4:a4_13,a5:a5_17
l2303639A:
	branch Mem8[0x4200E26C<32>:int32] == 0<32> l230363B4
l230363B4:
	return
l230363A0:
	DMA_LLI_Update(0<32>)
l230363B0_thunk_DMA_Channel_Enable:
	DMA_Channel_Enable()
	return
bl_dma_IRQHandler_exit:
l23036340:
	branch CONVERT(Mem8[0x42016F94<32>:byte], byte, word32) >u 2<32> l2303638A
l2303634E:
	branch CONVERT(Mem8[0x4201A53C<32>:byte], byte, word32) >u 2<32> l2303638A
l2303635A:
	branch Mem8[0x4200E244<32>:int32] == 0<32> l2303638C
l2303638C:
	word32 a5_118
	xTaskGetTickCount(out a5_118)
l23036364:
	word32 a5_119
	xTaskGetTickCountFromISR(out a5_119)
l23036368:
	word32 a1_122
	word32 s1_120
	word32 a0_121
	word32 a2_123
	word32 a3_124
	word32 a4_125
	word32 a5_126
	word32 s2_127
	word32 s3_128
	word32 s4_129
	word32 s5_130
	word32 s6_131
	word32 s7_132
	word32 s8_133
	word32 s9_134
	word32 s10_135
	word32 s11_136
	bl_printk(ra, 0x23078DB4<32>, 0x23078D64<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_120, out a0_121, out a1_122, out a2_123, out a3_124, out a4_125, out a5_126, out s2_127, out s3_128, out s4_129, out s5_130, out s6_131, out s7_132, out s8_133, out s9_134, out s10_135, out s11_136)
l2303638A:


word32 bl_dma_irq_register(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: ra s0 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_dma_irq_register_entry:
l230363BC:
	branch a0 >u 4<32> l230363D4
l230363D0:
	branch a1 != 0<32> l23036436
l23036436:
	word32 a4_27 = bl_irq_ctx_get(ra, 0x1F<32>, fp + -36<i32>, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C)
	word32 a5_31 = Mem15[s0 + 4<i32>:word32]
l23036448:
	branch a5_31 != s0 l230364BE
l230364BE:
	word32 s0_36 = Mem15[a4_27 + 8<i32>:word32]
	branch a0 != a4_27 l23036518
l23036518:
	s0 = Mem15[s0_36 + 4<i32>:word32]
l230364C4:
	branch CONVERT(Mem15[0x42016F94<32>:byte], byte, word32) >u 3<32> l2303641E
l230364D2:
	branch CONVERT(Mem15[0x4201A53C<32>:byte], byte, word32) >u 3<32> l2303641E
l230364DE:
	branch Mem15[0x4200E244<32>:int32] == 0<32> l23036512
l23036512:
	word32 a5_441
	xTaskGetTickCount(out a5_441)
l230364E8:
	word32 a5_442
	xTaskGetTickCountFromISR(out a5_442)
l230364EC:
	word32 a2_446
	word32 a4_448
	word32 a3_447
	word32 s2_450
	word32 a5_449
	word32 s1_443
	word32 a1_445
	word32 a0_444
	word32 s3_451
	word32 s4_452
	word32 s5_453
	word32 s7_454
	word32 s8_455
	word32 s9_456
	word32 s10_457
	word32 s11_458
	ra = bl_printk(ra, 0x23078E84<32>, 0x23078D64<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_443, out a0_444, out a1_445, out a2_446, out a3_447, out a4_448, out a5_449, out s2_450, out s3_451, out s4_452, out s5_453, out s6, out s7_454, out s8_455, out s9_456, out s10_457, out s11_458)
l2303644C:
	word32 a0_92
	word32 a1_433
	word32 a2_434
	word32 a3_435
	word32 a5_436
	word32 a6_437
	word32 s8_438
	word32 s1_100
	word32 s2_101
	word32 s4_103
	word32 s3_102
	word32 a4_109
	pvPortMalloc(ra, a0, 0x18<32>, a3, a4_27, a5_31, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_100, out a0_92, out a1_433, out a2_434, out a3_435, out a4_109, out a5_436, out a6_437, out s2_101, out s3_102, out s4_103, out s8_438)
	branch a0_92 != 0<32> l230364A0
l23036456:
	a4_109 = CONVERT(Mem15[0x42016F94<32>:byte], byte, word32)
	branch a4_109 >u 4<32> l230364A0
l23036464:
	a4_109 = CONVERT(Mem15[0x4201A53C<32>:byte], byte, word32)
	branch a4_109 >u 4<32> l230364A0
l23036470:
	branch Mem15[0x4200E244<32>:int32] == 0<32> l2303651C
l2303651C:
	word32 a5_439
	xTaskGetTickCount(out a5_439)
l2303647A:
	word32 a5_440
	xTaskGetTickCountFromISR(out a5_440)
l2303647E:
	word32 a0_459
	word32 a1_460
	word32 a2_461
	word32 a3_462
	word32 a5_463
	word32 s5_464
	word32 s7_465
	word32 s8_466
	word32 s9_467
	word32 s10_468
	word32 s11_469
	ra = bl_printk(ra, 0x23078EB8<32>, 0x23078D64<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_100, out a0_459, out a1_460, out a2_461, out a3_462, out a4_109, out a5_463, out s2_101, out s3_102, out s4_103, out s5_464, out s6, out s7_465, out s8_466, out s9_467, out s10_468, out s11_469)
l230364A0:
	Mem159[s1_100 + 8<i32>:word32] = a0_92
	Mem161[a0_92 + 12<i32>:word32] = s2_101
	Mem163[a0_92 + 16<i32>:word32] = s4_103
	Mem165[a0_92 + 20<i32>:word32] = s3_102
	word32 a5_169 = Mem165[a4_109 + 4<i32>:word32]
	Mem170[a5_169:word32] = a0_92
	Mem171[a4_109 + 4<i32>:word32] = a0_92
	Mem172[a0_92 + 4<i32>:word32] = a5_169
	Mem173[a0_92:word32] = a4_109
l230363D4:
	branch CONVERT(Mem15[0x42016F94<32>:byte], byte, word32) >u 4<32> l2303641E
l230363E2:
	branch CONVERT(Mem15[0x4201A53C<32>:byte], byte, word32) >u 4<32> l2303641E
l230363EE:
	branch Mem15[0x4200E244<32>:int32] == 0<32> l23036430
l23036430:
	word32 a5_415
	xTaskGetTickCount(out a5_415)
l230363F8:
	word32 a5_416
	xTaskGetTickCountFromISR(out a5_416)
l230363FC:
	word32 s1_417
	word32 a0_418
	word32 a1_419
	word32 a2_420
	word32 a3_421
	word32 a4_422
	word32 a5_423
	word32 s2_424
	word32 s3_425
	word32 s4_426
	word32 s5_427
	word32 s7_428
	word32 s8_429
	word32 s9_430
	word32 s10_431
	word32 s11_432
	ra = bl_printk(ra, 0x23078E5C<32>, 0x23078D64<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_417, out a0_418, out a1_419, out a2_420, out a3_421, out a4_422, out a5_423, out s2_424, out s3_425, out s4_426, out s5_427, out s6, out s7_428, out s8_429, out s9_430, out s10_431, out s11_432)
l2303641E:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s6Out = s6
	return ra
bl_dma_irq_register_exit:


word32 bl_dma_init(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg9C, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & s0Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +009C:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: ra s0 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_dma_init_entry:
l23036522:
	word32 a0_161
	utils_list_init(0x4200E26C<32>)
	word32 a0_18
	word32 a3_21
	word32 a4_22
	word32 a5_23
	word32 s1_26
	word32 a1_318
	word32 a2_319
	word32 s2_321
	word32 a6_320
	word32 s3_322
	word32 s4_323
	word32 s8_324
	word32 s0_118 = pvPortMalloc(ra, s1, 4<32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_26, out a0_18, out a1_318, out a2_319, out a3_21, out a4_22, out a5_23, out a6_320, out s2_321, out s3_322, out s4_323, out s8_324)
	branch a0_18 != 0<32> l2303659C
l2303659C:
	word32 a0_35
	word32 a5_40
	word32 s1_43
	word32 s2_44
	word32 a1_325
	word32 a2_326
	word32 a3_327
	word32 a4_328
	word32 a6_329
	word32 s3_330
	word32 s4_331
	word32 s8_332
	s0_118 = pvPortMalloc(ra, s1_26, 8<32>, a3_21, a4_22, a5_23, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_43, out a0_35, out a1_325, out a2_326, out a3_327, out a4_328, out a5_40, out a6_329, out s2_44, out s3_330, out s4_331, out s8_332)
	Mem50[a0_35:word32] = s0_118
	branch a0_35 != 0<32> l230365F6
l230365F6:
	Mem51[a0_35 + 4<i32>:word32] = a0_35
	Mem52[a0_35:word32] = a0_35
	DMA_Enable(a5_40)
	DMA_IntMask(2<32>, 1<32>)
	DMA_IntMask(0<32>, 0<32>)
	DMA_IntMask(1<32>, 0<32>)
	DMA_LLI_Init(fp + 0xFFFFFFEC<32>)
	word32 s0_88
	word32 s3_91
	word32 s1_335
	word32 a3_336
	word32 s2_337
	ra = bl_dma_irq_register(bl_irq_register_with_ctx(ra, s1_43, 0x1F<32>, 0x2303624C<32>, s0_118, s2_44, dwLoc18, dwArg08, dwArg20, dwArg24, dwArg30, dwArg34, dwArg50, dwArg54, dwArg58, ra, dwArg78, dwArg7C, dwArg9C, out s0_88, out s1_335, out a3_336, out s2_337, out s3_91), s0_88, 0<32>, 0x23036326<32>, 0<32>, s3_91, mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg20, dwArg24, dwArg28, dwArg48, dwArg4C, ra, dwArgE8, dwArg0108, dwArg0128, out s0_118, out s6)
	bl_irq_enable(0x1F<32>)
l230365A8:
	branch CONVERT(Mem50[0x42016F94<32>:byte], byte, word32) >u 4<32> l2303658E
l230365B6:
	branch CONVERT(Mem50[0x4201A53C<32>:byte], byte, word32) >u 4<32> l2303658E
l230365C2:
	branch Mem50[0x4200E244<32>:int32] == 0<32> l230365F0
l230365F0:
	word32 a5_338
	xTaskGetTickCount(out a5_338)
l230365CC:
	word32 a5_339
	xTaskGetTickCountFromISR(out a5_339)
l230365D0:
	a0_161 = 0x23078E18<32>
l23036544:
	branch CONVERT(Mem11[0x42016F94<32>:byte], byte, word32) >u 4<32> l2303658E
l23036552:
	branch CONVERT(Mem11[0x4201A53C<32>:byte], byte, word32) >u 4<32> l2303658E
l2303655E:
	branch Mem11[0x4200E244<32>:int32] == 0<32> l23036596
l23036596:
	word32 a5_333
	xTaskGetTickCount(out a5_333)
l23036568:
	word32 a5_334
	xTaskGetTickCountFromISR(out a5_334)
l2303656C:
	a0_161 = 0x23078DEC<32>
l2303658A:
	word32 s1_340
	word32 a0_341
	word32 a1_342
	word32 a2_343
	word32 a3_344
	word32 a4_345
	word32 a5_346
	word32 s2_347
	word32 s3_348
	word32 s4_349
	word32 s5_350
	word32 s7_351
	word32 s8_352
	word32 s9_353
	word32 s10_354
	word32 s11_355
	ra = bl_printk(ra, a0_161, 0x23078D64<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_340, out a0_341, out a1_342, out a2_343, out a3_344, out a4_345, out a5_346, out s2_347, out s3_348, out s4_349, out s5_350, out s6, out s7_351, out s8_352, out s9_353, out s10_354, out s11_355)
l2303658E:
	s0Out = s0_118
	s6Out = s6
	return ra
bl_dma_init_exit:


void _irq_num_check.part.0(word32 ra, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_irq_ctx_get
//      bl_irq_register
//      bl_irq_unregister
// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
_irq_num_check.part.0_exit:
_irq_num_check.part.0_entry:
l2303664A:
	branch CONVERT(Mem0[0x42016F94<32>:byte], byte, word32) >u 4<32> l230366A6
l23036658:
	branch CONVERT(Mem0[0x4201A53D<32>:byte], byte, word32) >u 4<32> l230366A6
l230366A6:
l23036664:
	branch Mem0[0x4200E244<32>:int32] == 0<32> l230366A0
l230366A0:
	word32 a5_72
	xTaskGetTickCount(out a5_72)
l23036676:
	word32 a5_73
	xTaskGetTickCountFromISR(out a5_73)
l2303667A:
	word32 a2_77
	word32 a1_76
	word32 a0_75
	word32 s1_74
	word32 a3_78
	word32 a4_79
	word32 a5_80
	word32 s2_81
	word32 s3_82
	word32 s4_83
	word32 s5_84
	word32 s6_85
	word32 s7_86
	word32 s8_87
	word32 s9_88
	word32 s10_89
	word32 s11_90
	bl_printk(ra, 0x23078F44<32>, 0x23078F38<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_74, out a0_75, out a1_76, out a2_77, out a3_78, out a4_79, out a5_80, out s2_81, out s3_82, out s4_83, out s5_84, out s6_85, out s7_86, out s8_87, out s9_88, out s10_89, out s11_90)
l2303669E:


void bl_irq_enable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_controller_init
//      bl_uart_int_enable
//      bl_dma_init
//      bl_sec_init
//      bl_wifi_enable_irq
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
bl_irq_enable_entry:
l230366A8:
	Mem8[a0 + 0x2800400<32>:byte] = 1<8>
	return
bl_irq_enable_exit:


word32 bl_irq_disable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_controller_deinit
//      bl_uart_int_disable
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
bl_irq_disable_entry:
l230366BA:
	Mem7[a0 + 0x2800400<32>:byte] = 0<8>
	return 0x2800400<32>
bl_irq_disable_exit:


void bl_irq_pending_clear(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_controller_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
bl_irq_pending_clear_entry:
l230366CA:
	Mem6[a0 + 0x2800000<32>:byte] = 0<8>
	return
bl_irq_pending_clear_exit:


word32 bl_irq_register_with_ctx(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgBC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
//      bl_irq_register
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00BC:[0..31]
// LiveOut: a3 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_irq_register_with_ctx_entry:
l230366D6:
	branch a0 <=u 79<i32> l230366F0
l230366F0:
	word32 s1_20 = a0 << 2<u32>
	word32 a5_22 = Mem15[(a0 << 2<u32>) + 0x42012FC4<32>:word32]
	word32 s4_25 = a1
	word32 s3_27 = a2
	word32 s2_28 = 0x42012FC4<32>
	branch a5_22 == 0<32> l23036764
l2303670C:
	branch a5_22 == a1 l230367D6
l23036710:
	branch CONVERT(Mem15[0x42016F94<32>:byte], byte, word32) >u 3<32> l23036764
l2303671E:
	branch CONVERT(Mem15[0x4201A53D<32>:byte], byte, word32) >u 3<32> l230367D4
l230367D4:
	branch a1 == 0<32> l23036776
l2303672A:
	branch Mem15[0x4200E244<32>:int32] == 0<32> l230367C2
l230367C2:
	word32 a5_381
	xTaskGetTickCount(out a5_381)
l23036734:
	word32 a5_353
	xTaskGetTickCountFromISR(out a5_353)
l23036738:
	word32 a0_354
	word32 a1_355
	word32 a2_356
	word32 a4_357
	word32 a5_358
	word32 s5_359
	word32 s6_360
	word32 s7_361
	word32 s8_362
	word32 s9_363
	word32 s10_364
	word32 s11_365
	ra = bl_printk(ra, 0x23078FA0<32>, 0x23078F38<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_20, out a0_354, out a1_355, out a2_356, out a3, out a4_357, out a5_358, out s2_28, out s3_27, out s4_25, out s5_359, out s6_360, out s7_361, out s8_362, out s9_363, out s10_364, out s11_365)
l23036764:
	branch s4_25 != 0<32> l230367D6
l230367D6:
	s1_20 = s1_20 + s2_28
	Mem91[s1_20:word32] = s4_25
	word32 s0_92 = (a0 + 80<i32> << 2<i32>) + s2_28
	branch s3_27 != 0<32> l230367CE
l230367CE:
	Mem95[s0_92:word32] = s3_27
l230367E8:
	Mem96[s0_92:word32] = 0<32>
l23036768:
	branch CONVERT(Mem15[0x42016F94<32>:byte], byte, word32) >u 4<32> l230367EC
l23036776:
	branch CONVERT(Mem15[0x4201A53D<32>:byte], byte, word32) >u 4<32> l230367EC
l230367EC:
	s0Out = <invalid>
	s1Out = s1_20
	a3Out = a3
	s2Out = s2_28
	s3Out = s3_27
	return ra
l23036784:
	branch Mem15[0x4200E244<32>:int32] == 0<32> l230367C8
l230367C8:
	word32 a5_380
	xTaskGetTickCount(out a5_380)
l2303678E:
	word32 a5_366
	xTaskGetTickCountFromISR(out a5_366)
l23036792:
l230367BE_thunk_bl_printk:
	word32 a3_149
	word32 s1_153
	word32 s2_156
	word32 s3_157
	word32 a0_367
	word32 a1_368
	word32 a2_369
	word32 a4_370
	word32 a5_371
	word32 s4_372
	word32 s5_373
	word32 s6_374
	word32 s7_375
	word32 s8_376
	word32 s9_377
	word32 s10_378
	word32 s11_379
	word32 ra_152 = bl_printk(ra, 0x23078FD8<32>, 0x23078F38<32>, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_153, out a0_367, out a1_368, out a2_369, out a3_149, out a4_370, out a5_371, out s2_156, out s3_157, out s4_372, out s5_373, out s6_374, out s7_375, out s8_376, out s9_377, out s10_378, out s11_379)
	s0Out = <invalid>
	s1Out = s1_153
	a3Out = a3_149
	s2Out = s2_156
	s3Out = s3_157
	return ra_152
bl_irq_register_with_ctx_exit:
l230366EC:
	_irq_num_check.part.0(ra, dwLoc08, dwArg40, dwArg44, s1, dwArg8C)


word32 bl_irq_ctx_get(word32 ra, word32 a0, word32 a1, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_int_process
//      bl_dma_irq_register
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a4
// Trashed: a4 a5
// Preserved: sp
bl_irq_ctx_get_entry:
l230367FC:
	branch a0 <=u 79<i32> l2303680C
l2303680C:
	Mem16[Mem0[(a0 + 80<i32> << 2<i32>) + 0x42012FC4<32>:word32]:word32] = a1
	return 0x42012FC4<32>
bl_irq_ctx_get_exit:
l23036804:
	_irq_num_check.part.0(ra, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C)


word32 bl_irq_register(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgBC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_controller_init
//      bl_uart_int_enable
//      bl_sec_init
//      bl_wifi_enable_irq
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00BC:[0..31]
// LiveOut: a3 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_irq_register_entry:
l23036822:
l23036824_thunk_bl_irq_register_with_ctx:
	word32 s0_13
	word32 s1_14
	word32 s2_15
	word32 s3_16
	word32 a3_23
	word32 ra_25 = bl_irq_register_with_ctx(ra, s1, a0, a1, 0<32>, s2, dwArg08, dwArg28, dwArg40, dwArg44, dwArg50, dwArg54, dwArg70, dwArg74, dwArg78, dwArg8C, dwArg98, dwArg9C, dwArgBC, out s0_13, out s1_14, out a3_23, out s2_15, out s3_16)
	s0Out = s0_13
	s1Out = s1_14
	a3Out = a3_23
	s2Out = s2_15
	s3Out = s3_16
	return ra_25
bl_irq_register_exit:


word32 bl_irq_unregister(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 dwArg08, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg8C, word32 dwArg9C, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_disable
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +009C:[0..31]
// LiveOut: a3 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_irq_unregister_entry:
l23036828:
	branch a0 <=u 79<i32> l23036840
l23036840:
	word32 s3_18 = a0 << 2<u32>
	word32 s2_23 = a1
	branch Mem13[(a0 << 2<u32>) + 0x42012FC4<32>:word32] == a1 l230368B2
l2303685C:
	a4 = CONVERT(Mem13[0x42016F94<32>:byte], byte, word32)
	branch a4 >u 3<32> l230368B2
l2303686A:
	a4 = CONVERT(Mem13[0x4201A53D<32>:byte], byte, word32)
	branch a4 >u 3<32> l230368B2
l23036876:
	branch Mem13[0x4200E244<32>:int32] == 0<32> l230368C6
l230368C6:
	word32 a5_154
	xTaskGetTickCount(out a5_154)
l23036880:
	word32 a5_155
	xTaskGetTickCountFromISR(out a5_155)
l23036884:
	word32 s1_156
	word32 a0_157
	word32 a1_158
	word32 a2_159
	word32 a5_160
	word32 s4_161
	word32 s5_162
	word32 s6_163
	word32 s7_164
	word32 s8_165
	word32 s9_166
	word32 s10_167
	word32 s11_168
	bl_printk(ra, 0x23079008<32>, 0x23078F38<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_156, out a0_157, out a1_158, out a2_159, out a3, out a4, out a5_160, out s2_23, out s3_18, out s4_161, out s5_162, out s6_163, out s7_164, out s8_165, out s9_166, out s10_167, out s11_168)
l230368B2:
	word32 s0_80 = s3_18 + 0x42012FC4<32>
	Mem82[s0_80:word32] = s2_23
	a3Out = a3
	a4Out = a4
	return s0_80
bl_irq_unregister_exit:
l2303683C:
	_irq_num_check.part.0(ra, dwLoc08, dwArg40, dwArg44, s1, dwArg8C)


void interrupt_entry(word32 ra, word32 a0, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
interrupt_entry_exit:
interrupt_entry_entry:
l230368CC:
	word32 a2_5 = CONVERT(SLICE(a0, word27, 0), word27, word32)
	branch a2_5 >u 79<i32> l23036900
l230368DA:
	branch Mem0[(a2_5 << 2<u32>) + 0x42012FC4<32>:int32] == 0<32> l23036900
l23036900:
	word32 a4_67
	word32 a3_66
	word32 a2_65
	word32 a1_64
	word32 a0_63
	word32 s1_62
	word32 a5_68
	word32 a7_69
	word32 s2_70
	word32 s3_71
	word32 s4_72
	word32 s5_73
	word32 s6_74
	word32 s7_75
	word32 s8_76
	word32 s9_77
	word32 s10_78
	word32 s11_79
	word32 t4_80
	printf(ra, 0x230792B0<32>, a2_5 + -16<i32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_62, out a0_63, out a1_64, out a2_65, out a3_66, out a4_67, out a5_68, out a7_69, out s2_70, out s3_71, out s4_72, out s5_73, out s6_74, out s7_75, out s8_76, out s9_77, out s10_78, out s11_79, out t4_80)
l23036918:
l230368F0:
	branch a0 == 0<32> l230368FE
l230368FE:
	switch (CONVERT(SLICE(a0, word27, 0), word27, word32)) { }
l230368FC:
	switch (CONVERT(SLICE(a0, word27, 0), word27, word32)) { }


void exception_entry(word32 ra, word32 gp, word32 a0, word32 a1, word32 a3, word32 a5, word32 s2, word32 fs0, word32 fs1, word32 fa0, word32 fa1, word32 fa2, word32 fa3, word32 fa4, word32 fa5, word32 mstatus, word32 mcause, word32 mtval, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg84, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a5:[0..31] fa0:[0..31] fa1:[0..31] fa2:[0..31] fa3:[0..31] fa4:[0..31] fa5:[0..31] fs0:[0..31] fs1:[0..31] gp:[0..31] mcause:[0..31] mstatus:[0..31] mtval:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa1 fa2 fa3 fa4 fa5 fs0 fs1 gp mcause mstatus mtval ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
exception_entry_entry:
l2303691A:
	branch (a0 & 1023<i32>) != 4<32> l23036944
l23036944:
	branch (a0 & 1023<i32>) != 6<32> l2303695C
l2303695C:
	word32 a0_283
	word32 a1_284
	word32 a2_285
	word32 a4_286
	word32 a5_287
	word32 s4_288
	word32 s8_289
	puts(0x23079044<32>, out a0_283, out a1_284, out a2_285, out a4_286, out a5_287, out s4_288, out s8_289)
	word32 a3_46
	word32 a0_68
	word32 a1_71
	word32 a2_72
	word32 a3_73
	word32 s1_77
	word32 s2_80
	word32 s1_290
	word32 a0_291
	word32 a1_292
	word32 a2_293
	word32 a4_294
	word32 a5_295
	word32 a7_296
	word32 s2_297
	word32 s3_298
	word32 s4_299
	word32 s5_300
	word32 s6_301
	word32 s7_302
	word32 s8_303
	word32 s9_304
	word32 s10_305
	word32 s11_306
	word32 t4_307
	word32 a4_308
	word32 a5_309
	word32 a7_310
	word32 s3_311
	word32 s4_312
	word32 s5_313
	word32 s6_314
	word32 s7_315
	word32 s8_316
	word32 s9_317
	word32 s10_318
	word32 s11_319
	word32 t4_320
	word32 ra_76 = printf(printf(ra, 0x2307905C<32>, 6<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_290, out a0_291, out a1_292, out a2_293, out a3_46, out a4_294, out a5_295, out a7_296, out s2_297, out s3_298, out s4_299, out s5_300, out s6_301, out s7_302, out s8_303, out s9_304, out s10_305, out s11_306, out t4_307), 0x23079084<32>, a3_46, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_77, out a0_68, out a1_71, out a2_72, out a3_73, out a4_308, out a5_309, out a7_310, out s2_80, out s3_311, out s4_312, out s5_313, out s6_314, out s7_315, out s8_316, out s9_317, out s10_318, out s11_319, out t4_320)
	branch CONVERT(SLICE(a0, word16, 0), word16, word32) >u 0xF<32> l23036A50
l23036A50:
l230369B0:
	word32 a0_321
	word32 a1_322
	word32 a2_323
	word32 a4_324
	word32 a5_325
	word32 s4_326
	word32 s8_327
	puts(0x2307928C<32>, out a0_321, out a1_322, out a2_323, out a4_324, out a5_325, out s4_326, out s8_327)
	backtrace_riscv()
l230369C2:
l23036998:
	word32 tp_126
	word32 s10_128
	word32 s11_129
	word32 s3_130
	word32 s5_131
	word32 s6_132
	word32 s7_133
	word32 s9_134
	word32 t5_225
	word32 t6_226
	call 0x23078EF8<32> (retsize: 0;)
		uses: a0:a0_68,a1:a1_71,a2:a2_72,a3:a3_73,a5:0x23078EF8<32>,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0,fs1:fs1,gp:gp,mcause:mcause,mstatus:mstatus,mtval:mtval,ra:ra_76,s0:Mem25[0x23078EF8<32>:word32],s1:s1_77,s10:s10_128,s11:s11_129,s2:s2_80,s3:s3_130,s5:s5_131,s6:s6_132,s7:s7_133,s9:s9_134,Stack +0004:dwLoc1C,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0028:dwArg08,Stack +0048:dwArg28,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0098:dwArg78,Stack +00A4:dwArg84,Stack +00BC:dwArg9C,t5:t5_225,t6:t6_226,tp:tp_126
		defs: s10:s10_128,s11:s11_129,s3:s3_130,s5:s5_131,s6:s6_132,s7:s7_133,s9:s9_134,t5:t5_225,t6:t6_226,tp:tp_126
	return
l2303694A:
l23036958_thunk_misaligned_store_trap:
	misaligned_store_trap(gp, a3, a1, a5, fs0, fs1, fa0, fa1, fa2, fa3, fa4, fa5, mstatus, mcause, mtval)
	return
l23036932:
l23036940_thunk_misaligned_load_trap:
	misaligned_load_trap(gp, a3, a1, a5, mstatus, mcause, mtval)
	return
exception_entry_exit:


void bl_irq_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s1 s4 s8 t3 tp
// Preserved: sp
bl_irq_init_entry:
l23036A5A:
	word32 s8_59
	word32 a5_57
	word32 s4_58
	word32 a2_55
	word32 a4_56
	word32 a0_53
	word32 a1_54
	puts(0x23078F6C<32>, out a0_53, out a1_54, out a2_55, out a4_56, out a5_57, out s4_58, out s8_59)
	word32 a4_19 = 0x2800400<32>
l23036A76:
	Mem22[a4_19:byte] = 0<8>
	a4_19 = a4_19 + 1<32>
	branch a4_19 != 0x2800480<32> l23036A76
l23036A80:
	word32 a5_25 = 0x2800000<32>
l23036A88:
	Mem28[a5_25:byte] = 0<8>
	a5_25 = a5_25 + 1<32>
	branch a5_25 != 0x2800080<32> l23036A88
l23036A92:
	return
bl_irq_init_exit:


word32 _trng_trigger(word32 a2, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sec_get_random_word
//      bl_rand_stream
//      bl_sec_init
// MayUse:  a2:[0..31]
// LiveOut: a3 a4
// Trashed: a3 a4 a5
// Preserved: sp
_trng_trigger_entry:
l23036A98:
	word32 a4_10 = Mem0[0x40004200<32>:int32]
	word32 a3_12 = a4_10 & 1<i32>
	branch (a4_10 & 1<i32>) != 0<32> l23036AC2
l23036AA6:
	word32 a3_9 = Mem0[a2:word32]
	Mem11[0x4000422C<32>:word32] = a2
	a3_12 = Mem11[a3_9 + 4<i32>:word32]
	Mem13[0x40004230<32>:word32] = a3_12
	Mem14[0x40004200<32>:word32] = a4_10 | 1542<i32>
	a4_10 = a4_10 | 1542<i32>
l23036AC2:
	a4Out = a4_10
	return a3_12
_trng_trigger_exit:


word32 wait_trng4feed(word32 ra, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rand_stream
//      bl_sec_init
// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a2 a3 a4 a5 ra s1 s10 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
wait_trng4feed_entry:
l23036AC4:
	word32 a5_11 = Mem7[0x40004200<32>:int32]
	word32 a3_10 = 0x40004000<32>
l23036AD6:
	branch (a5_11 & 1<i32>) != 0<32> l23036B7A
l23036B7A:
	a5_11 = Mem7[0x40004200<32>:int32]
l23036ADC:
	Mem19[0x40004200<32>:word32] = a5_11 & 0xFFFFFFFD<32> | 512<i32>
	word32 s0_24 = 0x42013294<32>
	branch CONVERT(Mem19[0x42016F94<32>:byte], byte, word32) >u 1<32> l23036B3E
l23036B00:
	branch CONVERT(Mem19[0x4201A53E<32>:byte], byte, word32) >u 1<32> l23036B3E
l23036B0C:
	word32 a5_30
	branch Mem19[0x4200E244<32>:int32] == 0<32> l23036B80
l23036B80:
	xTaskGetTickCount(out a5_30)
l23036B16:
	xTaskGetTickCountFromISR(out a5_30)
l23036B1A:
	s0_24 = Mem19[a5_30:word32]
	word32 a0_187
	word32 a1_188
	word32 a2_189
	word32 a4_190
	word32 a5_191
	word32 s8_192
	word32 s11_193
	ra = bl_printk(ra, 0x23079400<32>, 0x230793EC<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_187, out a1_188, out a2_189, out a3_10, out a4_190, out a5_191, out s2, out s3, out s4, out s5, out s6, out s7, out s8_192, out s9, out s10, out s11_193)
l23036B3E:
	Mem77[Mem19[0x40004208<32>:int32]:word32] = s0_24
	Mem79[Mem77[0x4000420C<32>:int32] + 4<i32>:word32] = s0_24
	Mem81[Mem79[0x40004210<32>:int32] + 8<i32>:word32] = s0_24
	Mem83[Mem81[0x40004214<32>:int32] + 12<i32>:word32] = s0_24
	Mem85[Mem83[0x40004218<32>:int32] + 16<i32>:word32] = s0_24
	Mem87[Mem85[0x4000421C<32>:int32] + 20<i32>:word32] = s0_24
	word32 a4_88 = Mem87[0x40004220<32>:int32]
	Mem89[a4_88 + 24<i32>:word32] = s0_24
	word32 a5_90 = Mem89[0x40004224<32>:int32]
	Mem91[a5_90 + 28<i32>:word32] = s0_24
	s1Out = s1
	a2Out = dwArg10
	a3Out = a3_10
	a4Out = a4_88
	a5Out = a5_90
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	return ra
wait_trng4feed_exit:


void sec_trng_IRQHandler(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp tp
sec_trng_IRQHandler_entry:
l23036B86:
	word32 a0_9
	word32 a1_10
	word32 a5_216
	word32 a2_214
	word32 a4_215
	aos_now_ms(a3, out a0_9, out a1_10, out a2_214, out a4_215, out a5_216)
	branch a1_10 > 0<32> l23036BAA
l23036B94:
	branch a1_10 != 0<32> l23036B9E
l23036B96:
	branch a0_9 >u 1999<i32> l23036BAA
l23036B9E:
	word32 s4_222
	word32 s8_223
	word32 a4_220
	word32 a5_221
	word32 a1_218
	word32 a2_219
	word32 a0_217
	puts(0x23079394<32>, out a0_217, out a1_218, out a2_219, out a4_220, out a5_221, out s4_222, out s8_223)
l23036BAA:
	Mem37[0x40004200<32>:word32] = Mem7[0x40004200<32>:int32] & 0xFFFFFFFD<32> | 512<i32>
	word32 s0_34 = 0x42013294<32>
	branch CONVERT(Mem37[0x42016F94<32>:byte], byte, word32) >u 1<32> l23036C10
l23036BD2:
	branch CONVERT(Mem37[0x4201A53E<32>:byte], byte, word32) >u 1<32> l23036C10
l23036BDE:
	word32 a5_46
	branch Mem37[0x4200E244<32>:int32] == 0<32> l23036C4C
l23036C4C:
	xTaskGetTickCount(out a5_46)
l23036BE8:
	xTaskGetTickCountFromISR(out a5_46)
l23036BEC:
	s0_34 = Mem37[a5_46:word32]
	word32 s4_233
	word32 s3_232
	word32 a5_230
	word32 s6_235
	word32 s5_234
	word32 s7_236
	word32 s8_237
	word32 s10_239
	word32 s9_238
	word32 s2_231
	word32 a3_228
	word32 a4_229
	word32 a1_226
	word32 a2_227
	word32 s1_224
	word32 a0_225
	word32 s11_240
	bl_printk(ra, 0x230793B0<32>, 0x230793EC<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_224, out a0_225, out a1_226, out a2_227, out a3_228, out a4_229, out a5_230, out s2_231, out s3_232, out s4_233, out s5_234, out s6_235, out s7_236, out s8_237, out s9_238, out s10_239, out s11_240)
l23036C10:
	Mem95[Mem37[0x40004208<32>:int32]:word32] = s0_34
	Mem97[Mem95[0x4000420C<32>:int32] + 4<i32>:word32] = s0_34
	Mem99[Mem97[0x40004210<32>:int32] + 8<i32>:word32] = s0_34
	Mem101[Mem99[0x40004214<32>:int32] + 12<i32>:word32] = s0_34
	Mem103[Mem101[0x40004218<32>:int32] + 16<i32>:word32] = s0_34
	Mem105[Mem103[0x4000421C<32>:int32] + 20<i32>:word32] = s0_34
	Mem107[Mem105[0x40004220<32>:int32] + 24<i32>:word32] = s0_34
	Mem109[Mem107[0x40004224<32>:int32] + 28<i32>:word32] = s0_34
	return
sec_trng_IRQHandler_exit:


word32 bl_sec_get_random_word(word32 s0, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rand
// MayUse:  a2:[0..31] s0:[0..31]
// LiveOut: a2 a3 a4 a5
// Trashed: a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
bl_sec_get_random_word_entry:
l23036C52:
	word32 a4_11 = Mem10[s0:word32]
	Mem14[s0 & 7<32>:word32] = a4_11
	branch (s0 & 7<32>) != 0<32> l23036C72
l23036C6E:
	a3 = _trng_trigger(a2, out a4_11)
l23036C72:
	Mem22[(s0 & 7<32>) + 1<i32>:word32] = 0x4200E278<32>
	a3Out = a3
	a4Out = a4_11
	a5Out = 0x42013294<32>
	return dwArg10
bl_sec_get_random_word_exit:


word32 bl_rand_stream(word32 ra, word32 a0, word32 a1, word32 a2, word32 s5, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArg0128, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantGenerateRand
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s5:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 ra s0 s10 s2 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_rand_stream_entry:
l23036C90:
	word32 a5_112 = Mem5[0x4200E278<32>:int32]
	word32 s4_100 = a0
	word32 s1_126 = a1
	word32 s0_159 = 0x4200E278<32>
	branch a5_112 == 0<32> l23036CC2
l23036CB6:
	word32 a4_270
	_trng_trigger(a2, out a4_270)
	word32 s3_274
	word32 s9_278
	word32 s10_279
	word32 s7_277
	word32 s5_275
	word32 s6_276
	word32 s2_273
	word32 a3_271
	word32 a4_272
	ra = wait_trng4feed(ra, dwLoc18, dwArg30, dwArg34, s5, dwArg7C, out s1_126, out a2, out a3_271, out a4_272, out a5_112, out s2_273, out s3_274, out s4_100, out s5_275, out s6_276, out s7_277, out s9_278, out s10_279)
	Mem55[0x4200E278<32>:word32] = 0<32>
l23036CC2:
	word32 s3_102 = 0<32>
	word32 s5_57 = 32<i32>
	word32 s6_108 = 0x42013000<32>
	word32 s7_128 = 0x1F<32>
l23036CCE:
	branch s1_126 > 0<32> l23036CF4
l23036CF4:
	s0_159 = Mem62[a5_112:word32]
	branch a5_112 == 0<32> l23036D04
l23036CF8:
	word32 a4_289
	_trng_trigger(a2, out a4_289)
	word32 s2_294
	word32 s9_295
	word32 s10_296
	word32 a2_290
	word32 a5_293
	word32 a3_291
	word32 a4_292
	ra = wait_trng4feed(ra, dwLoc18, dwArg30, dwArg34, s5, dwArg7C, out s1_126, out a2_290, out a3_291, out a4_292, out a5_293, out s2_294, out s3_102, out s4_100, out s5_57, out s6_108, out s7_128, out s9_295, out s10_296)
	Mem92[s0_159:word32] = 0<32>
l23036D04:
	word32 s2_105 = s1_126
	branch s5_57 >= s1_126 l23036D0E
l23036D0A:
	s2_105 = 32<i32>
l23036D0E:
	word32 a4_298
	word32 a6_299
	word32 a7_300
	word32 a3_297
	memcpy(s4_100 + s3_102, s6_108 + 660<i32>, s2_105, out a2, out a3_297, out a4_298, out a5_112, out a6_299, out a7_300)
	Mem132[s0_159:word32] = s7_128
	s3_102 = s3_102 + s2_105
	s1_126 = s1_126 - s2_105
l23036CD2:
	word32 a4_280
	_trng_trigger(a2, out a4_280)
	word32 a3_137
	word32 a4_138
	word32 s10_145
	word32 s2_147
	word32 s9_154
	word32 s5_286
	word32 s6_287
	word32 s7_288
	word32 a2_282
	word32 s4_285
	word32 a5_283
	word32 s3_284
	word32 s1_281
	word32 ra_143 = wait_trng4feed(ra, dwLoc18, dwArg30, dwArg34, s5, dwArg7C, out s1_281, out a2_282, out a3_137, out a4_138, out a5_283, out s2_147, out s3_284, out s4_285, out s5_286, out s6_287, out s7_288, out s9_154, out s10_145)
	Mem161[s0_159:word32] = 0<32>
	0<32> = dwArg0128
	s0Out = dwArgE4
	a3Out = a3_137
	a4Out = a4_138
	s2Out = s2_147
	s9Out = s9_154
	s10Out = s10_145
	return ra_143
bl_rand_stream_exit:


word32 bl_rand(word32 a0, word32 a2, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecc_gen_new_secret_key
//      lld_con_start
//      llm_init
//      llc_task_random_gen_request
//      hci_le_rand_cmd_handler
//      k_get_random_byte_array
//      bl_sec_test
//      dhcp_create_msg
//      igmp_delaying_member
//      tcp_init
//      udp_init
// MayUse:  a0:[0..31] a2:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
bl_rand_entry:
l23036D28:
	word32 s0_10 = 0x13<32>
l23036D32:
	word32 a3_18
	word32 a4_14
	word32 a5_15
	a2 = bl_sec_get_random_word(s0_10, a2, out a3_18, out a4_14, out a5_15)
	s0_10 = s0_10 + 0xFFFFFFFF<32>
	word32 s1_21 = a0
	branch s0_10 != 0<32> l23036D56
l23036D56:
	branch a0 == 0<32> l23036D32
l23036D58:
l23036D3C:
	word32 a0_80
	word32 a2_81
	s1_21 = puts(0x23079300<32>, out a0_80, out a1, out a2_81, out a4_14, out a5_15, out s4, out s8)
l23036D48:
	a0Out = s1_21 >>u 1<u32>
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3_18
	a4Out = a4_14
	a5Out = a5_15
	s4Out = s4
	s8Out = s8
	return s1_21
bl_rand_exit:


word32 bl_sec_init(word32 ra, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg9C, word32 dwArgAC, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0178, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_sec_init_entry:
l23036D5A:
	word32 a2_11
	word32 a0_22
	word32 a3_144
	word32 a4_145
	xQueueCreateMutexStatic(1<32>, 0x42013244<32>, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0108, dwArg0138, dwArg0178, out a0_22, out a2_11, out a3_144, out a4_145)
	Mem33[0x4200E274<32>:word32] = a0_22
	word32 a4_146
	_trng_trigger(a2_11, out a4_146)
	word32 a2_37
	word32 s1_147
	word32 a3_148
	word32 a4_149
	word32 a5_150
	word32 s2_151
	word32 s3_152
	word32 s4_153
	word32 s5_154
	word32 s6_155
	word32 s7_156
	word32 s9_157
	word32 s10_158
	word32 ra_44 = wait_trng4feed(ra, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_147, out a2_37, out a3_148, out a4_149, out a5_150, out s2_151, out s3_152, out s4_153, out s5_154, out s6_155, out s7_156, out s9_157, out s10_158)
	word32 a4_159
	_trng_trigger(a2_37, out a4_159)
	word32 s1_70
	word32 s2_73
	word32 a3_90
	word32 a2_160
	word32 a3_161
	word32 a4_162
	word32 a5_163
	word32 s3_164
	word32 s4_165
	word32 s5_166
	word32 s6_167
	word32 s7_168
	word32 s9_169
	word32 s10_170
	word32 s0_171
	word32 s1_172
	word32 s2_173
	word32 s3_174
	word32 ra_95 = bl_irq_register(wait_trng4feed(ra_44, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_70, out a2_160, out a3_161, out a4_162, out a5_163, out s2_73, out s3_164, out s4_165, out s5_166, out s6_167, out s7_168, out s9_169, out s10_170), s1_70, 0x1C<32>, 0x23036B86<32>, s2_73, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s0_171, out s1_172, out a3_90, out s2_173, out s3_174)
	bl_irq_enable(0x1C<32>)
	a3Out = a3_90
	return ra_95
bl_sec_init_exit:


word32 bl_sec_test(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a4 a5 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
bl_sec_test_entry:
l23036DA0:
	word32 a0_13
	word32 a2_15
	word32 s1_145
	word32 a1_146
	word32 a3_147
	word32 a4_148
	word32 a5_149
	word32 s2_150
	word32 s3_151
	word32 s4_152
	word32 s5_153
	word32 s6_154
	word32 s7_155
	word32 s8_156
	word32 s9_157
	word32 s10_158
	word32 s11_159
	word32 ra_19 = bl_printk(ra, 0x23079324<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_145, out a0_13, out a1_146, out a2_15, out a3_147, out a4_148, out a5_149, out s2_150, out s3_151, out s4_152, out s5_153, out s6_154, out s7_155, out s8_156, out s9_157, out s10_158, out s11_159)
	word32 a3_35
	word32 a0_160
	word32 a1_161
	word32 a2_162
	word32 a4_163
	word32 a5_164
	word32 s4_165
	word32 s8_166
	bl_rand(a0_13, a2_15, out a0_160, out a1_161, out a2_162, out a3_35, out a4_163, out a5_164, out s4_165, out s8_166)
	word32 a0_49
	word32 a2_51
	word32 s1_167
	word32 a1_168
	word32 a3_169
	word32 a4_170
	word32 a5_171
	word32 s2_172
	word32 s3_173
	word32 s4_174
	word32 s5_175
	word32 s6_176
	word32 s7_177
	word32 s8_178
	word32 s9_179
	word32 s10_180
	word32 s11_181
	word32 ra_55 = bl_printk(ra_19, 0x23079364<32>, a3_35, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_167, out a0_49, out a1_168, out a2_51, out a3_169, out a4_170, out a5_171, out s2_172, out s3_173, out s4_174, out s5_175, out s6_176, out s7_177, out s8_178, out s9_179, out s10_180, out s11_181)
	word32 a3_71
	word32 a0_182
	word32 a1_183
	word32 a2_184
	word32 a4_185
	word32 a5_186
	word32 s4_187
	word32 s8_188
	bl_rand(a0_49, a2_51, out a0_182, out a1_183, out a2_184, out a3_71, out a4_185, out a5_186, out s4_187, out s8_188)
	word32 a3_87
	word32 a5_106
	word32 a3_111
	word32 a4_112
	word32 s1_115
	word32 s1_189
	word32 a0_190
	word32 a1_191
	word32 a2_192
	word32 a4_193
	word32 a5_194
	word32 s2_195
	word32 s3_196
	word32 s4_197
	word32 s5_198
	word32 s6_199
	word32 s7_200
	word32 s8_201
	word32 s9_202
	word32 s10_203
	word32 s11_204
	word32 a0_205
	word32 a1_206
	word32 a2_207
	word32 s2_208
	word32 s3_209
	word32 s4_210
	word32 s5_211
	word32 s6_212
	word32 s7_213
	word32 s8_214
	word32 s9_215
	word32 s10_216
	word32 s11_217
	word32 ra_114 = bl_printk(bl_printk(ra_55, 0x23079364<32>, a3_71, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_189, out a0_190, out a1_191, out a2_192, out a3_87, out a4_193, out a5_194, out s2_195, out s3_196, out s4_197, out s5_198, out s6_199, out s7_200, out s8_201, out s9_202, out s10_203, out s11_204), 0x23070D9C<32>, a3_87, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_115, out a0_205, out a1_206, out a2_207, out a3_111, out a4_112, out a5_106, out s2_208, out s3_209, out s4_210, out s5_211, out s6_212, out s7_213, out s8_214, out s9_215, out s10_216, out s11_217)
	s1Out = s1_115
	a3Out = a3_111
	a4Out = a4_112
	a5Out = a5_106
	return ra_114
bl_sec_test_exit:


word32 bl_efuse_read_mac(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
bl_efuse_read_mac_entry:
l23036DE8:
	word32 s0_19
	word32 s1_20
	word32 s2_21
	word32 s3_22
	word32 s4_23
	word32 ra_18 = EF_Ctrl_Read_MAC_Address(ra, s0, s1, a0, s2, s3, s4, out s0_19, out s1_20, out s2_21, out s3_22, out s4_23)
	s0Out = s0_19
	s1Out = s1_20
	s2Out = s2_21
	s3Out = s3_22
	s4Out = s4_23
	return ra_18
bl_efuse_read_mac_exit:


word32 bl_efuse_read_mac_factory(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg8C, word32 dwArg9C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_efuse_read_mac_factory_entry:
l23036DF8:
	word32 a0_16
	word32 a3_19
	word32 s0_25
	word32 s1_26
	word32 s10_27
	word32 s11_28
	word32 s2_29
	word32 s3_30
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 s7_34
	word32 mstatus_40
	word32 ra_24 = mfg_media_read_macaddr(ra, s0, s1, a0, 1<32>, a3, a4, s2, s3, s4, mstatus, dwLoc08, dwArg08, dwArg28, dwArg40, dwArg44, dwArg50, dwArg54, dwArg68, dwArg78, dwArg8C, dwArg9C, out s0_25, out s1_26, out a0_16, out a3_19, out s2_29, out s3_30, out s4_31, out s5_32, out s6_33, out s7_34, out s10_27, out s11_28, out mstatus_40)
	s0Out = s0_25
	s1Out = s1_26
	a0Out = 0<32> - CONVERT(a0_16 != 0<32>, bool, word32)
	a3Out = a3_19
	s2Out = s2_29
	s3Out = s3_30
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	s7Out = s7_34
	s10Out = s10_27
	s11Out = s11_28
	mstatusOut = mstatus_40
	return ra_24
bl_efuse_read_mac_factory_exit:


word32 bl_efuse_read_capcode(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_efuse_read_capcode_entry:
l23036E10:
	word32 a0_16
	word32 a3_19
	word32 s0_25
	word32 s1_26
	word32 s10_27
	word32 s11_28
	word32 s2_29
	word32 s3_30
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 s7_34
	word32 s8_35
	word32 mstatus_40
	word32 ra_24 = mfg_media_read_xtal_capcode(ra, s0, s1, a0, 1<32>, a3, a4, s2, s3, s4, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg68, dwArg8C, out s0_25, out s1_26, out a0_16, out a3_19, out s2_29, out s3_30, out s4_31, out s5_32, out s6_33, out s7_34, out s8_35, out s10_27, out s11_28, out mstatus_40)
	s0Out = s0_25
	s1Out = s1_26
	a0Out = 0<32> - CONVERT(a0_16 != 0<32>, bool, word32)
	a3Out = a3_19
	s2Out = s2_29
	s3Out = s3_30
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	s7Out = s7_34
	s8Out = s8_35
	s10Out = s10_27
	s11Out = s11_28
	mstatusOut = mstatus_40
	return ra_24
bl_efuse_read_capcode_exit:


word32 bl_efuse_read_pwroft(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s2 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
bl_efuse_read_pwroft_entry:
l23036E28:
	word32 a0_16
	word32 a3_19
	word32 s0_25
	word32 s1_26
	word32 s2_29
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 s7_34
	word32 s8_35
	word32 s9_36
	word32 mstatus_42
	word32 ra_24 = mfg_media_read_poweroffset(ra, s0, s1, a0, 1<32>, a3, a4, s2, s3, s4, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg68, dwArg8C, dwArg0118, out s0_25, out s1_26, out a0_16, out a3_19, out s2_29, out s4_31, out s5_32, out s6_33, out s7_34, out s8_35, out s9_36, out mstatus_42)
	s0Out = s0_25
	s1Out = s1_26
	a0Out = 0<32> - CONVERT(a0_16 != 0<32>, bool, word32)
	a3Out = a3_19
	s2Out = s2_29
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	s7Out = s7_34
	s8Out = s8_35
	s9Out = s9_36
	mstatusOut = mstatus_42
	return ra_24
bl_efuse_read_pwroft_exit:


void bl_wifi_clock_enable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl606a0_wifi_init
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
bl_wifi_clock_enable_entry:
l23036E40:
	word32 a5_6 = Mem0[a4:word32]
	branch a4 != 0<32> l23036E50
l23036E4C:
	Mem8[1<32>:word32] = a5_6
l23036E50:
	return
bl_wifi_clock_enable_exit:


word32 bl_wifi_enable_irq(word32 ra, word32 s1, word32 s2, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgAC, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_main_rtthread_start
// MayUse:  ra:[0..31] s1:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a4 a5 ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_wifi_enable_irq_entry:
l23036E54:
	word32 s1_21
	word32 s2_24
	word32 a3_41
	word32 s3_52
	word32 s0_102
	word32 a3_103
	word32 s3_104
	word32 s0_105
	word32 s1_106
	word32 s2_107
	word32 ra_46 = bl_irq_register(bl_irq_register(ra, s1, 70<i32>, 0x2305B240<32>, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s0_102, out s1_21, out a3_103, out s2_24, out s3_104), s1_21, 79<i32>, 0x2305B290<32>, s2_24, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s0_105, out s1_106, out a3_41, out s2_107, out s3_52)
	bl_irq_enable(70<i32>)
	bl_irq_enable(79<i32>)
	word32 a5_72
	word32 a4_75
	word32 a0_108
	word32 a1_109
	word32 a2_110
	word32 s4_111
	word32 s8_112
	puts(0x23079434<32>, out a0_108, out a1_109, out a2_110, out a4_75, out a5_72, out s4_111, out s8_112)
	a3Out = a3_41
	a4Out = a4_75
	a5Out = a5_72
	s3Out = s3_52
	return ra_46
bl_wifi_enable_irq_exit:


void bl_wifi_sta_mac_addr_set(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_wifi_sta_mac_addr_set_entry:
l23036E9C:
	word32 a2_29
	word32 a3_30
	word32 a4_31
	word32 a5_32
	word32 a6_33
	word32 a7_34
	memcpy(0x4201A540<32>, a0, 6<32>, out a2_29, out a3_30, out a4_31, out a5_32, out a6_33, out a7_34)
	return
bl_wifi_sta_mac_addr_set_exit:


void bl_wifi_ap_mac_addr_set(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_wifi_ap_mac_addr_set_entry:
l23036EB8:
	word32 a2_29
	word32 a3_30
	word32 a4_31
	word32 a5_32
	word32 a6_33
	word32 a7_34
	memcpy(0x4201A54C<32>, a0, 6<32>, out a2_29, out a3_30, out a4_31, out a5_32, out a6_33, out a7_34)
	return
bl_wifi_ap_mac_addr_set_exit:


void bl_wifi_mac_addr_get(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_ap_start
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
//      bl606a0_wifi_init
//      bdaddr_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_wifi_mac_addr_get_entry:
l23036ED4:
	word32 a2_28
	word32 a3_29
	word32 a4_30
	word32 a5_31
	word32 a6_32
	word32 a7_33
	memcpy(a0, 0x4201A540<32>, 6<32>, out a2_28, out a3_29, out a4_30, out a5_31, out a6_32, out a7_33)
	return
bl_wifi_mac_addr_get_exit:


word32 bl_wifi_country_code_set(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..7]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
bl_wifi_country_code_set_entry:
l23036EEE:
	Mem5[0x4201A558<32>:byte] = SLICE(a0, byte, 0)
	return 0x4201A000<32>
bl_wifi_country_code_set_exit:


word32 bl_wifi_ap_info_set(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg0128, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_wifi_ap_info_set_entry:
l23036EFA:
	word32 t1_99
	word32 a0_100
	word32 a1_101
	word32 a2_102
	word32 a3_103
	word32 a4_104
	word32 a5_105
	word32 ra_34 = memset(ra, 0x4201A559<32>, 0<32>, 99<i32>, out t1_99, out a0_100, out a1_101, out a2_102, out a3_103, out a4_104, out a5_105)
	word32 a3_45
	word32 a2_106
	word32 a4_107
	word32 a5_108
	word32 a6_109
	word32 a7_110
	memcpy(0x4201A559<32>, a0, a1, out a2_106, out a3_45, out a4_107, out a5_108, out a6_109, out a7_110)
	word32 a4_58
	word32 a2_111
	word32 a3_112
	word32 a5_113
	word32 a6_114
	word32 a7_115
	memcpy(0x4201A57A<32>, a2, a3_45, out a2_111, out a3_112, out a4_58, out a5_113, out a6_114, out a7_115)
	Mem74[0x4201A5BB<32>:byte] = SLICE(a4_58, byte, 0)
	Mem76[0x4201A5BC<32>:byte] = 1<8>
	0<32> = dwArg0128
	s1Out = a2
	s2Out = a0
	return ra_34
bl_wifi_ap_info_set_exit:


word32 bl_wifi_sta_info_set(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg0128, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_wifi_sta_info_set_entry:
l23036F64:
	word32 t1_96
	word32 a0_97
	word32 a1_98
	word32 a2_99
	word32 a3_100
	word32 a4_101
	word32 a5_102
	word32 ra_34 = memset(ra, 0x4201A5BD<32>, 0<32>, 99<i32>, out t1_96, out a0_97, out a1_98, out a2_99, out a3_100, out a4_101, out a5_102)
	word32 a3_45
	word32 a2_103
	word32 a4_104
	word32 a5_105
	word32 a6_106
	word32 a7_107
	memcpy(0x4201A5BD<32>, a0, a1, out a2_103, out a3_45, out a4_104, out a5_105, out a6_106, out a7_107)
	word32 a4_58
	word32 a2_108
	word32 a3_109
	word32 a5_110
	word32 a6_111
	word32 a7_112
	memcpy(0x4201A5DE<32>, a2, a3_45, out a2_108, out a3_109, out a4_58, out a5_110, out a6_111, out a7_112)
	Mem75[0x4201A620<32>:byte] = SLICE(a4_58, byte, 0)
	0<32> = dwArg0128
	s1Out = a2
	s2Out = a0
	return ra_34
bl_wifi_sta_info_set_exit:


word32 fdt32_to_cpu(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_init
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_to_cpu_entry:
l23036FC4:
	return (a0 >>u 16<i32> & 255<i32>) << 8<i32> | ((a0 << 0x18<u32> | a0 >>u 0x18<u32>) | (a0 >>u 8<u32> & 255<i32>) << 16<i32>)
fdt32_to_cpu_exit:


word32 dev_uart_init(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg74, word32 dwArg78, word32 dwArg9C, word32 dwArgA8, word32 dwArgB4, word32 dwArgE8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a5 ra s0 s1 s2 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dev_uart_init_entry:
l23036FE6:
	word32 a5_247
	word32 s1_109
	word32 a0_278
	branch a0 >u 2<32> l23037002
l23036FFE:
	branch a1 != 0<32> l23037050
l23037050:
	word32 a5_30
	s1_109 = a0
	branch a0 == 0<32> l23037100
l23037100:
	a5_30 = Mem19[0x4200E280<32>:int32]
l23037058:
	branch a0 != 1<32> l2303709A
l2303709A:
	a5_247 = 4<32>
	branch CONVERT(Mem19[0x42016F94<32>:byte], byte, word32) >u 4<32> l230370E4
l230370A8:
	branch CONVERT(Mem19[0x4201A621<32>:byte], byte, word32) >u 4<32> l230370E4
l230370B4:
	branch Mem19[0x4200E244<32>:int32] == 0<32> l230370FA
l230370FA:
	word32 a5_757
	xTaskGetTickCount(out a5_757)
l230370BE:
	word32 a5_758
	xTaskGetTickCountFromISR(out a5_758)
l230370C2:
	a0_278 = 0x230794A4<32>
l2303705E:
	a5_30 = Mem19[0x4200E284<32>:int32]
l2303706A:
	branch a5_30 == 0<32> l23037114
l23037114:
	word32 a0_67
	word32 a1_733
	word32 s4_740
	word32 a2_734
	word32 a3_735
	word32 a5_737
	word32 a4_736
	word32 s3_739
	word32 s8_741
	word32 a6_738
	Mem82[a0_67:word32] = pvPortMalloc(ra, a0, 60<i32>, a3, a4, a5_30, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_109, out a0_67, out a1_733, out a2_734, out a3_735, out a4_736, out a5_737, out a6_738, out s2, out s3_739, out s4_740, out s8_741)
	branch a0_67 != 0<32> l2303716E
l2303716E:
	word32 a3_88
	word32 a4_89
	word32 a5_90
	word32 t1_744
	word32 a1_746
	word32 a0_745
	word32 a2_747
	ra = memset(ra, a0_67, 0<32>, 60<i32>, out t1_744, out a0_745, out a1_746, out a2_747, out a3_88, out a4_89, out a5_90)
	Mem97[a5_90 + 52<i32>:byte] = 2<8>
	word32 s0_98 = Mem97[a5_90:word32]
	Mem99[a5_90 + 56<i32>:word32] = 0<32>
	word32 s6_100 = Mem99[s0_98:int32]
	word32 a0_101
	word32 s4_112
	word32 a3_750
	word32 a1_748
	word32 a2_749
	word32 a6_753
	word32 a4_751
	word32 a5_752
	word32 s8_754
	word32 s3_111
	pvPortMalloc(ra, s1_109, 4<32>, a3_88, a4_89, a5_90, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_109, out a0_101, out a1_748, out a2_749, out a3_750, out a4_751, out a5_752, out a6_753, out s2, out s3_111, out s4_112, out s8_754)
	Mem116[s6_100 + 56<i32>:word32] = a0_101
	branch a0_101 != 0<32> l230371CE
l230371CE:
	word32 a5_141
	word32 a4_144
	word32 a4_125
	word32 a5_126
	word32 t1_759
	word32 a1_761
	word32 a0_760
	word32 a2_762
	word32 a3_124
	word32 ra_127 = memset(ra, a0_101, 0<32>, 4<32>, out t1_759, out a0_760, out a1_761, out a2_762, out a3_124, out a4_125, out a5_126)
	Mem132[a5_126 + 24<i32>:word32] = a2
	Mem134[a5_126 + 28<i32>:word32] = s4_112
	branch a5_126 != 0<32> l23037258
l23037258:
	Mem136[a5_126:byte] = SLICE(s1_109, byte, 0)
	Mem138[a5_126 + 52<i32>:byte] = SLICE(s2, byte, 0)
	Mem142[0x1C000204<32>:word32] = a4_125
	Mem145[0x1C000208<32>:byte] = 3<8>
	Mem147[0x1C000209<32>:byte] = 0<8>
	Mem149[0x1C00020A<32>:byte] = 0<8>
	Mem151[0x1C00020B<32>:byte] = 0<8>
	Mem153[0x1C00020C<32>:byte] = SLICE(s2, byte, 0)
	a5_141 = 0x1C000200<32>
	a4_144 = 3<32>
l230371E6:
	a4_144 = CONVERT(Mem134[0x42016F94<32>:byte], byte, word32)
	a5_141 = 4<32>
	branch a4_144 >u 4<32> l23037230
l230371F4:
	a4_144 = CONVERT(Mem134[0x4201A621<32>:byte], byte, word32)
	branch a4_144 >u 4<32> l23037230
l23037200:
	branch Mem134[0x4200E244<32>:int32] == 0<32> l23037252
l23037252:
	word32 a5_765
	xTaskGetTickCount(out a5_765)
l2303720A:
	word32 a5_766
	xTaskGetTickCountFromISR(out a5_766)
l2303720E:
	word32 s4_772
	word32 s10_777
	word32 s11_778
	word32 s8_776
	word32 s5_773
	word32 s7_775
	word32 s6_774
	word32 a0_768
	word32 a2_770
	word32 s2_771
	word32 a1_769
	word32 s1_767
	ra_127 = bl_printk(ra_127, 0x230794C0<32>, 0x23079478<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_767, out a0_768, out a1_769, out a2_770, out a3_124, out a4_144, out a5_141, out s2_771, out s3_111, out s4_772, out s5_773, out s6_774, out s7_775, out s8_776, out s9, out s10_777, out s11_778)
l23037230:
	0<32> = dwArgA8
l2303724E_thunk_aos_register_driver:
	word32 a0_221
	word32 a5_226
	word32 s0_228
	word32 s1_229
	word32 s2_230
	word32 s4_232
	word32 s6_779
	word32 ra_244 = aos_register_driver(ra_127, s3_111, dwArg48, a3_124, a4_144, a5_141, mstatus, dwArg74, dwArgB4, dwArgE8, dwArg0128, dwArg0168, out s0_228, out s1_229, out a0_221, out a5_226, out s2_230, out s4_232, out s6_779)
	s0Out = s0_228
	s1Out = s1_229
	a0Out = a0_221
	a5Out = a5_226
	s2Out = s2_230
	s4Out = s4_232
	s9Out = s9
	return ra_244
l2303719A:
	a5_247 = 4<32>
	branch CONVERT(Mem116[0x42016F94<32>:byte], byte, word32) >u 4<32> l230370E4
l230371A8:
	branch CONVERT(Mem116[0x4201A621<32>:byte], byte, word32) >u 4<32> l230370E4
l230371B4:
	branch Mem116[0x4200E244<32>:int32] == 0<32> l230371C8
l230371C8:
	word32 a5_763
	xTaskGetTickCount(out a5_763)
l230371BE:
	word32 a5_764
	xTaskGetTickCountFromISR(out a5_764)
l230371C2:
l23037120:
	a5_247 = 4<32>
	branch CONVERT(Mem82[0x42016F94<32>:byte], byte, word32) >u 4<32> l230370E4
l2303712E:
	branch CONVERT(Mem82[0x4201A621<32>:byte], byte, word32) >u 4<32> l230370E4
l2303713A:
	branch Mem82[0x4200E244<32>:int32] == 0<32> l23037168
l23037168:
	word32 a5_755
	xTaskGetTickCount(out a5_755)
l23037144:
	word32 a5_756
	xTaskGetTickCountFromISR(out a5_756)
l23037148:
l2303714C:
	a0_278 = 0x230794C0<32>
l2303706C:
	a5_247 = 4<32>
	branch CONVERT(Mem19[0x42016F94<32>:byte], byte, word32) >u 4<32> l230370E4
l2303707A:
	branch CONVERT(Mem19[0x4201A621<32>:byte], byte, word32) >u 4<32> l230370E4
l23037086:
	branch Mem19[0x4200E244<32>:int32] == 0<32> l2303710E
l2303710E:
	word32 a5_742
	xTaskGetTickCount(out a5_742)
l23037090:
	word32 a5_743
	xTaskGetTickCountFromISR(out a5_743)
l23037094:
l23037002:
	a5_247 = 4<32>
	s1_109 = s1
	branch CONVERT(Mem19[0x42016F94<32>:byte], byte, word32) >u 4<32> l230370E4
l23037010:
	s1_109 = s1
	branch CONVERT(Mem19[0x4201A621<32>:byte], byte, word32) >u 4<32> l230370E4
l2303701C:
	branch Mem19[0x4200E244<32>:int32] == 0<32> l2303704A
l2303704A:
	word32 a5_718
	xTaskGetTickCount(out a5_718)
l23037026:
	word32 a5_719
	xTaskGetTickCountFromISR(out a5_719)
l2303702A:
l2303702E:
	a0_278 = 0x23079484<32>
l230370E0:
	word32 a0_720
	word32 s7_729
	word32 s3_725
	word32 a1_721
	word32 s4_726
	word32 s8_730
	word32 a4_724
	word32 s5_727
	word32 s6_728
	word32 s10_731
	word32 a3_723
	word32 s11_732
	word32 a2_722
	ra = bl_printk(ra, a0_278, 0x23079478<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_109, out a0_720, out a1_721, out a2_722, out a3_723, out a4_724, out a5_247, out s2, out s3_725, out s4_726, out s5_727, out s6_728, out s7_729, out s8_730, out s9, out s10_731, out s11_732)
l230370E4:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_109
	a0Out = 0xFFFFFFFF<32>
	a5Out = a5_247
	s2Out = s2
	s4Out = dwArg04
	s9Out = s9
	return ra
dev_uart_init_exit:


void hal_uart_send_trigger(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_write
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
hal_uart_send_trigger_entry:
l2303728E:
	bl_uart_int_tx_enable(a4)
	return
hal_uart_send_trigger_exit:


void hal_uart_send_trigger_off(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __uart_tx_irq
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
hal_uart_send_trigger_off_entry:
l230372A2:
	bl_uart_int_tx_disable(a4)
	return
hal_uart_send_trigger_off_exit:


void hal_uart_init(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg5C, word32 dwArg64, word32 dwArg8C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[24..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +008C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
hal_uart_init_entry:
l230372B6:
	word32 a0_18
	word32 s2_27
	word32 a3_185
	word32 a4_22
	aos_mutex_new(ra, Mem9[a0 + 56<i32>:word32], a3, a4, a5, mstatus, dwLoc20, dwLoc1C, dwArg64, dwArgD8, dwArg0118, dwArg0158, out a0_18, out a3_185, out a4_22, out s2_27)
	byte bLoc11_104 = SLICE(s0, byte, 24)
	branch a0_18 != 0<32> l230372EA
l230372CA:
	bl_uart_getdefconfig(fp + 0xFFFFFFEF<32>)
	word32 a5_43 = CONVERT(bLoc11_104, byte, word32)
	branch a5_43 != 0<32> l230372F6
l230372F6:
	a4_22 = 1<32>
	branch a5_43 != 1<32> l23037302
l23037302:
	a5_43 = 2<32>
l230372FC:
	Mem48[a0 + 9<i32>:byte] = SLICE(a5_43, byte, 0)
l230372DE:
	Mem49[a0 + 9<i32>:byte] = 0<8>
l230372E2:
	bl_uart_int_enable(ra, a0_18, CONVERT(Mem51[a0:byte], byte, word32), a4_22, s2_27, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg40, dwArg44, dwArg48, dwArg5C, s1, ra, dwArg8C)
l230372EA:
	return
hal_uart_init_exit:


word32 hal_uart_recv_II(word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArg84, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cli_getchar
//      __uart_rx_irq
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] Stack +0084:[0..31]
// LiveOut: a0 a2 a4 a5 s0 s4 s8
// Trashed: a0 a2 a4 a5 s0 s1 s4 s8 t3 tp
// Preserved: sp
hal_uart_recv_II_entry:
l23037306:
	word32 s0_12 = 0<32>
l23037312:
	branch s0_12 == a2 l2303732E
l23037316:
	dwLoc1C = a2
	word32 a0_24 = bl_uart_data_recv(s0_12, CONVERT(Mem16[a0:byte], byte, word32), out a4, out a5)
	s0_12 = a3
	a2 = dwArg84
	branch a0_24 >= 0<32> l2303733C
l2303733C:
	a5 = a1 + a3
	Mem32[a5:byte] = SLICE(a0_24, byte, 0)
	s0_12 = a3 + 1<32>
l2303732E:
	Mem36[s0_12:word32] = a3
	a0Out = 0<32>
	a2Out = a2
	a4Out = a4
	a5Out = a5
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s0_12
hal_uart_recv_II_exit:


void hal_uart_send(word32 a0, word32 a1, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __uart_tx_irq
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s1 s2 s4 s8 t3 tp
// Preserved: s0 sp
hal_uart_send_entry:
l23037348:
	word32 s0_15 = a1
	word32 s1_17 = a1 + a2
l2303735A:
	branch s0_15 != s1_17 l2303736C
l2303736C:
	word32 a0_61
	word32 a4_62
	word32 a5_63
	word32 s4_64
	word32 s8_65
	s0_15 = bl_uart_data_send(s1_17, CONVERT(Mem11[a0:byte], byte, word32), CONVERT(Mem11[s0_15:byte], byte, word32), out a0_61, out a4_62, out a5_63, out s4_64, out s8_65)
l2303735E:
	0<32> = dwArg38
	return
hal_uart_send_exit:


void hal_uart_finalize(word32 ra, word32 s0, word32 s1, word32 a4, word32 s2, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg6C, word32 dwArg7C, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_close
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
hal_uart_finalize_entry:
l2303737C:
	word32 a3_16
	word32 a4_17
	word32 a0_67
	word32 a2_68
	word32 a4_69
	word32 a5_70
	aos_mutex_free(bl_uart_int_disable(ra, s1, CONVERT(Mem7[Mem7[s0 + 56<i32>:word32]:byte], byte, word32), a4, s2, dwArg20, dwArg24, dwArg30, dwArg34, dwArg58, dwArg6C, dwArg7C, out a3_16, out a4_17), a3_16, a4_17, mstatus, dwArg0148, dwArg0188, out a0_67, out a2_68, out a4_69, out a5_70)
	return
hal_uart_finalize_exit:


word32 hal_uart_notify_register(word32 a0, word32 a1, word32 a2, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
hal_uart_notify_register_entry:
l2303739C:
	word32 a5_11
	branch a1 != 0<32> l230373BA
l230373BA:
	a3 = 1<32>
	a5_11 = 0xFFFFFFFF<32>
	branch a1 != 1<32> l230373B2
l230373C2:
	bl_uart_int_rx_notify_register(CONVERT(Mem7[a0:byte], byte, word32), a2, a0)
l230373A6:
	bl_uart_int_tx_notify_register(CONVERT(Mem7[a0:byte], byte, word32), a2, a0)
l230373B0:
	a5_11 = 0<32>
l230373B2:
	a4Out = a1
	a5Out = a5_11
	return a3
hal_uart_notify_register_exit:


word32 vfs_uart_init(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 s4, word32 s6, word32 s10, word32 mstatus, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg98, word32 dwArgA8, word32 dwArg0118, word32 dwArg0134, ptr32 & s2Out, ptr32 & s6Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s2:[0..7] s4:[0..31] s6:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0134:[0..31]
// LiveOut: ra s10 s2 s6 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_uart_init_entry:
l230373CE:
	byte bLoc68_2953 = SLICE(s2, byte, 0)
	branch CONVERT(Mem0[0x4200E288<32>:int8], int8, int32) == 1<32> l23037532
l230373FE:
	word32 a7_3251
	word32 a6_3250
	word32 a2_3246
	word32 a5_3249
	word32 a3_3247
	word32 a4_3248
	memcpy(fp + -112<i32>, 0x23079448<32>, 48<i32>, out a2_3246, out a3_3247, out a4_3248, out a5_3249, out a6_3250, out a7_3251)
	word32 s4_119 = a0
	word32 a5_1522 = fp + -120<i32>
	word32 s2_1525 = 0<32>
l23037438:
	word32 a5_1217
	word32 a0_1383
	word32 a3_1380
	word32 s6_76 = Mem70[a5_1522:int32]
	word32 a0_81
	word32 s1_91
	word32 a5_3281
	word32 s3_3282
	word32 s6_3284
	word32 s5_3283
	word32 a3_3280
	word32 s0_1457
	word32 s2_117
	ra = fdt_subnode_offset(ra, 0x42017000<32>, s4_119, s6_76, s2_1525, s6_76, dwLocB8, dwLoc88, dwArg28, out s0_1457, out s1_91, out a0_81, out a3_3280, out a5_3281, out s2_117, out s3_3282, out s4_119, out s5_3283, out s6_3284)
	branch a0_81 > 0<32> l2303749C
l2303749C:
	word32 a0_106
	word32 s0_115
	word32 s1_116
	word32 s5_3253
	word32 s3_3252
	word32 s6_3254
	word32 s8_3255
	ra = fdt_stringlist_count(ra, s4_119, 0x23079548<32>, s2_117, dwLocB8, 0x23079500<32>, dwLoc08, dwArg28, out s0_115, out s1_116, out a0_106, out s2_117, out s3_3252, out s4_119, out s5_3253, out s6_3254, out s8_3255)
	branch a0_106 == 1<32> l230374FE
l230374FE:
	word32 a0_133
	word32 a4_137
	word32 s0_142
	word32 s1_143
	word32 a1_3271
	word32 a2_3272
	word32 s5_3276
	word32 a3_3273
	word32 a5_3274
	word32 s3_3275
	word32 s6_3277
	ra = fdt_stringlist_get(ra, s4_119, 0x23079548<32>, dwLocAC, dwLoc18, s1, dwArg68, out s0_142, out s1_143, out a0_133, out a1_3271, out a2_3272, out a3_3273, out a4_137, out a5_3274, out s2_117, out s3_3275, out s4_119, out s5_3276, out s6_3277)
	branch a4_137 == 4<32> l23037552
l23037552:
	word32 a3_3287
	word32 a4_3288
	word32 a5_3289
	word32 a2_3286
	word32 a1_3285
	branch memcmp(0x2307958C<32>, a0_133, 4<32>, out a1_3285, out a2_3286, out a3_3287, out a4_3288, out a5_3289) != 0<32> l23037518
l23037564:
	word32 a0_170
	word32 s0_179
	word32 s1_180
	word32 s6_185
	word32 s8_186
	word32 s5_3291
	word32 s3_3290
	ra = fdt_stringlist_count(ra, s4_119, 0x230795C0<32>, s2_117, dwLocB8, 0x23079500<32>, dwLoc08, dwArg28, out s0_179, out s1_180, out a0_170, out s2_117, out s3_3290, out s4_119, out s5_3291, out s6_185, out s8_186)
	branch a0_170 == s6_185 l230375FC
l230375FC:
	word32 a0_196
	word32 a4_200
	word32 s0_205
	word32 s1_206
	word32 s5_3298
	word32 s2_3296
	word32 s3_3297
	word32 s6_3299
	word32 a5_3295
	word32 a3_3294
	word32 a1_3292
	word32 a2_3293
	word32 s4_209
	word32 ra_204 = fdt_stringlist_get(ra, s4_119, s8_186 + 1472<i32>, dwLocAC, dwLoc18, s1, dwArg68, out s0_205, out s1_206, out a0_196, out a1_3292, out a2_3293, out a3_3294, out a4_200, out a5_3295, out s2_3296, out s3_3297, out s4_209, out s5_3298, out s6_3299)
	dwLoc28 = a0_196
	branch a4_200 <=u 32<i32> l2303765A
l23037618:
	branch CONVERT(Mem217[s1_206 + -108<i32>:byte], byte, word32) >u 2<32> l2303765A
l23037622:
	branch CONVERT(Mem217[0x4201A621<32>:byte], byte, word32) >u 2<32> l2303765A
l2303762E:
	branch Mem217[0x4200E244<32>:int32] == 0<32> l230376B0
l230376B0:
	word32 a5_3312
	xTaskGetTickCount(out a5_3312)
l23037638:
	word32 a5_3313
	xTaskGetTickCountFromISR(out a5_3313)
l2303763C:
	word32 s1_3314
	word32 s3_3322
	word32 s10_3327
	word32 s11_3328
	word32 s5_3323
	word32 s8_3326
	word32 s7_3325
	word32 s6_3324
	word32 a4_3319
	word32 s2_3321
	word32 a5_3320
	word32 a1_3316
	word32 a3_3318
	word32 a2_3317
	word32 a0_3315
	ra_204 = bl_printk(ra_204, 0x23079604<32>, s0_205 + 1144<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3314, out a0_3315, out a1_3316, out a2_3317, out a3_3318, out a4_3319, out a5_3320, out s2_3321, out s3_3322, out s4_209, out s5_3323, out s6_3324, out s7_3325, out s8_3326, out s9, out s10_3327, out s11_3328)
l2303765A:
	word32 a0_1306
	word32 a3_1303
	word32 a0_276
	word32 s0_285
	word32 s1_286
	word32 a1_3304
	word32 s8_3311
	word32 s5_3309
	word32 s6_3310
	word32 a3_3305
	word32 s3_3308
	word32 a5_3307
	word32 a4_3306
	ra = fdt_getprop(ra_204, s4_209, 0x23079634<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_285, out s1_286, out a0_276, out a1_3304, out a3_3305, out a4_3306, out a5_3307, out s2_117, out s3_3308, out s4_119, out s5_3309, out s6_3310, out s8_3311)
	branch a0_276 != 0<32> l230376BC
l230376BC:
	word32 s7_297 = Mem217[a0_276:int32]
	word32 a0_302
	word32 s0_311
	word32 s1_312
	word32 a4_3331
	word32 a5_3332
	word32 s5_3334
	word32 s8_3336
	word32 s6_3335
	word32 s3_3333
	word32 a3_3330
	word32 a1_3329
	ra = fdt_getprop(ra, s4_119, 0x23079670<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_311, out s1_312, out a0_302, out a1_3329, out a3_3330, out a4_3331, out a5_3332, out s2_117, out s3_3333, out s4_119, out s5_3334, out s6_3335, out s8_3336)
	branch a0_302 != 0<32> l23037718
l23037718:
	word32 s9_1041
	word32 a0_327
	word32 a5_3340
	word32 s3_3341
	word32 s5_3342
	word32 a3_3339
	word32 s1_1562
	word32 s6_1563
	ra = fdt_subnode_offset(ra, s1_312, s4_119, 0x2307969C<32>, s2_117, Mem217[a0_302:int32], dwLocB8, dwLoc88, dwArg28, out s0_1457, out s1_1562, out a0_327, out a3_3339, out a5_3340, out s2_117, out s3_3341, out s4_119, out s5_3342, out s6_1563)
	s9 = a0_327
	branch a0_327 > 0<32> l23037782
l23037782:
	word32 a0_353
	word32 s1_363
	word32 a1_3358
	word32 s8_3365
	word32 s5_3363
	word32 s6_3364
	word32 a3_3359
	word32 s3_3362
	word32 a5_3361
	word32 a4_3360
	ra = fdt_getprop(ra, s4_119, 0x230796E8<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_1457, out s1_363, out a0_353, out a1_3358, out a3_3359, out a4_3360, out a5_3361, out s2_117, out s3_3362, out s4_119, out s5_3363, out s6_3364, out s8_3365)
	branch a0_353 != 0<32> l230377CC
l230377CC:
	word32 s10_374 = Mem217[a0_353:int32]
	word32 a0_379
	word32 a4_3370
	word32 s3_3372
	word32 s5_3373
	word32 a3_3369
	word32 a1_3368
	word32 s8_3374
	word32 a5_3371
	ra = fdt_getprop(ra, s4_119, 0x230796F0<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_1457, out s1_1562, out a0_379, out a1_3368, out a3_3369, out a4_3370, out a5_3371, out s2_117, out s3_3372, out s4_119, out s5_3373, out s6_1563, out s8_3374)
	s9 = a0_379
	branch a0_379 != 0<32> l2303781C
l2303781C:
	fdt32_to_cpu(s10_374)
	s9_1041 = fdt32_to_cpu(Mem217[a0_379:int32])
l230377E6:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_1562 + -108<i32>:byte], byte, word32) >u 2<32> l23037522
l230377F0:
	branch CONVERT(Mem217[0x4201A621<32>:byte], byte, word32) >u 2<32> l23037522
l230377FC:
	branch Mem217[0x4200E244<32>:int32] == 0<32> l23037816
l23037816:
	word32 a5_3389
	xTaskGetTickCount(out a5_3389)
l23037806:
	word32 a5_3390
	xTaskGetTickCountFromISR(out a5_3390)
l2303780A:
l23037796:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_363 + -108<i32>:byte], byte, word32) >u 2<32> l23037522
l230377A0:
	branch CONVERT(Mem217[0x4201A621<32>:byte], byte, word32) >u 2<32> l23037522
l230377AC:
	branch Mem217[0x4200E244<32>:int32] == 0<32> l230377C6
l230377C6:
	word32 a5_3375
	xTaskGetTickCount(out a5_3375)
l230377B6:
	word32 a5_3376
	xTaskGetTickCountFromISR(out a5_3376)
l230377BA:
l23037732:
	branch CONVERT(Mem217[s1_1562 + -108<i32>:byte], byte, word32) >u 2<32> l23037772
l2303773C:
	branch CONVERT(Mem217[0x4201A621<32>:byte], byte, word32) >u 2<32> l23037772
l23037748:
	branch Mem217[0x4200E244<32>:int32] == 0<32> l2303777C
l2303777C:
	word32 a5_3366
	xTaskGetTickCount(out a5_3366)
l23037752:
	word32 a5_3367
	xTaskGetTickCountFromISR(out a5_3367)
l23037756:
	word32 a0_3377
	word32 a3_3380
	word32 s3_3383
	word32 s8_3385
	word32 s10_3387
	word32 s11_3388
	word32 s9_3386
	word32 s5_3384
	word32 a5_3382
	word32 a4_3381
	word32 a2_3379
	word32 a1_3378
	ra = bl_printk(ra, 0x230796A8<32>, s0_1457 + 1144<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3377, out a1_3378, out a2_3379, out a3_3380, out a4_3381, out a5_3382, out s2_117, out s3_3383, out s4_119, out s5_3384, out s6_1563, out s7_297, out s8_3385, out s9_3386, out s10_3387, out s11_3388)
l23037772:
	s9_1041 = 512<i32>
l2303782E:
	branch CONVERT(Mem217[s1_1562 + -108<i32>:byte], byte, word32) >u 2<32> l23037872
l23037838:
	branch CONVERT(Mem217[0x4201A621<32>:byte], byte, word32) >u 2<32> l23037872
l23037844:
	branch Mem217[0x4200E244<32>:int32] == 0<32> l230378E4
l230378E4:
	word32 a5_3391
	xTaskGetTickCount(out a5_3391)
l2303784E:
	word32 a5_3392
	xTaskGetTickCountFromISR(out a5_3392)
l23037852:
	word32 s5_3400
	word32 s11_3403
	word32 s10_3402
	word32 s8_3401
	word32 s3_3399
	word32 a5_3398
	word32 a3_3396
	word32 a4_3397
	word32 a2_3395
	word32 a1_3394
	word32 a0_3393
	ra = bl_printk(ra, 0x230796F8<32>, s0_1457 + 1144<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3393, out a1_3394, out a2_3395, out a3_3396, out a4_3397, out a5_3398, out s2_117, out s3_3399, out s4_119, out s5_3400, out s6_1563, out s7_297, out s8_3401, out s9_1041, out s10_3402, out s11_3403)
l23037872:
	fdt32_to_cpu(s7_297)
	word32 a0_567 = fdt32_to_cpu(s6_1563)
	dwLocAC = a0_567
	word32 s7_571 = fp + -112<i32>
	word32 s11_1564 = 0x4201A000<32>
	word32 s10_1565 = 0x4200E000<32>
l2303788E:
	byte bLoc98_1813 = SLICE(dwLoc98, byte, 0)
	word32 a0_586
	word32 s0_595
	word32 a5_3410
	word32 a3_3409
	word32 s5_3412
	word32 s3_3411
	ra = fdt_subnode_offset(ra, s1_1562, s4_119, 0x23079738<32>, s2_117, s6_1563, dwLocB8, dwLoc88, dwArg28, out s0_595, out s1_1562, out a0_586, out a3_3409, out a5_3410, out s2_117, out s3_3411, out s4_119, out s5_3412, out s6_1563)
	branch a0_586 > 0<32> l230378F0
l230378F0:
	word32 a0_612
	word32 s0_621
	word32 s5_3405
	word32 s8_3406
	word32 s3_3404
	ra = fdt_stringlist_count(ra, s4_119, Mem585[s7_571:int32], s2_117, dwLocB8, 0x23079500<32>, dwLoc08, dwArg28, out s0_621, out s1_1562, out a0_612, out s2_117, out s3_3404, out s4_119, out s5_3405, out s6_1563, out s8_3406)
	branch a0_612 == 1<32> l2303794E
l2303794E:
	word32 a1_640
	word32 a4_643
	word32 s0_648
	word32 a2_3480
	word32 a0_3479
	word32 a3_3481
	word32 s3_3483
	word32 s5_3484
	word32 a5_3482
	ra = fdt_stringlist_get(ra, s4_119, s6_1563, a0_567, dwLoc18, s1, dwArg68, out s0_648, out s1_1562, out a0_3479, out a1_640, out a2_3480, out a3_3481, out a4_643, out a5_3482, out s2_117, out s3_3483, out s4_119, out s5_3484, out s6_1563)
	branch a4_643 == 4<32> l230379AA
l230379AA:
	word32 a2_3488
	word32 a1_3487
	word32 a3_3489
	word32 a5_3491
	word32 a4_3490
	branch memcmp(0x2307958C<32>, a1_640, 4<32>, out a1_3487, out a2_3488, out a3_3489, out a4_3490, out a5_3491) != 0<32> l23037966
l230379BC:
	word32 a0_676
	word32 s0_685
	word32 s1_686
	word32 s4_689
	word32 a5_3513
	word32 a3_3512
	word32 s2_3514
	word32 s5_3516
	word32 s6_3517
	word32 s3_3515
	word32 ra_684 = fdt_subnode_offset(ra, s1_1562, s4_119, 0x230797DC<32>, s2_117, s6_1563, dwLocB8, dwLoc88, dwArg28, out s0_685, out s1_686, out a0_676, out a3_3512, out a5_3513, out s2_3514, out s3_3515, out s4_689, out s5_3516, out s6_3517)
	branch a0_676 > 0<32> l23037B18
l23037B18:
	word32 a0_702
	word32 s0_711
	word32 a3_3519
	word32 a5_3521
	word32 a4_3520
	word32 s3_3522
	word32 s8_3524
	word32 s5_3523
	word32 a1_3518
	ra = fdt_getprop(ra_684, s4_689, Mem660[s7_571 + 4<i32>:int32], dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_711, out s1_1562, out a0_702, out a1_3518, out a3_3519, out a4_3520, out a5_3521, out s2_117, out s3_3522, out s4_119, out s5_3523, out s6_1563, out s8_3524)
	branch a0_702 != 0<32> l23037B6C
l23037B6C:
	Mem726[s7_571 + 8<i32>:byte] = SLICE(fdt32_to_cpu(Mem660[a0_702:word32]), byte, 0)
l23037B2A:
	branch CONVERT(Mem660[s1_1562 + -108<i32>:byte], byte, word32) >u 2<32> l230378DA
l23037B34:
	branch CONVERT(Mem660[s11_1564 + 1569<i32>:byte], byte, word32) >u 2<32> l230378DA
l23037B3C:
	branch Mem660[s10_1565 + 580<i32>:int32] == 0<32> l23037B66
l23037B66:
	word32 a5_3527
	xTaskGetTickCount(out a5_3527)
l23037B42:
	word32 a5_3528
	xTaskGetTickCountFromISR(out a5_3528)
l23037B46:
	word32 a2_3546
	word32 a5_3549
	word32 s5_3551
	word32 s8_3552
	word32 s3_3550
	word32 a4_3548
	word32 a3_3547
	word32 a1_3545
	word32 a0_3544
	ra = bl_printk(ra, 0x23079520<32>, s0_711 + 1144<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3544, out a1_3545, out a2_3546, out a3_3547, out a4_3548, out a5_3549, out s2_117, out s3_3550, out s4_119, out s5_3551, out s6_1563, out s7_571, out s8_3552, out s9_1041, out s10_1565, out s11_1564)
l230379D2:
	branch CONVERT(Mem660[s1_686 + -108<i32>:byte], byte, word32) >u 2<32> l230379E8
l230379DC:
	branch CONVERT(Mem660[0x4201A621<32>:byte], byte, word32) <=u 2<32> l23037A7C
l23037A7C:
	branch Mem660[0x4200E244<32>:int32] == 0<32> l23037B12
l23037B12:
	word32 a5_3525
	xTaskGetTickCount(out a5_3525)
l23037A86:
	word32 a5_3526
	xTaskGetTickCountFromISR(out a5_3526)
l23037A8A:
	word32 s2_3535
	word32 s11_3543
	word32 a0_3529
	word32 s4_3537
	word32 s3_3536
	word32 s5_3538
	word32 s7_3540
	word32 s8_3541
	word32 s10_3542
	word32 s6_3539
	word32 a1_3530
	word32 a3_3532
	word32 a4_3533
	word32 a5_3534
	word32 a2_3531
	bl_printk(ra_684, 0x230797E0<32>, s0_685 + 1144<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3529, out a1_3530, out a2_3531, out a3_3532, out a4_3533, out a5_3534, out s2_3535, out s3_3536, out s4_3537, out s5_3538, out s6_3539, out s7_3540, out s8_3541, out s9_1041, out s10_3542, out s11_3543)
l23037966:
	branch CONVERT(Mem660[s1_1562 + -108<i32>:byte], byte, word32) >u 2<32> l230378DA
l23037970:
	branch CONVERT(Mem660[s11_1564 + 1569<i32>:byte], byte, word32) >u 2<32> l230378DA
l23037978:
	branch Mem660[s10_1565 + 580<i32>:int32] == 0<32> l23037A76
l23037A76:
	word32 a5_3492
	xTaskGetTickCount(out a5_3492)
l23037980:
	word32 a5_3493
	xTaskGetTickCountFromISR(out a5_3493)
l23037984:
	word32 s8_3511
	word32 a0_3503
	word32 a2_3505
	word32 a1_3504
	word32 a3_3506
	word32 a5_3508
	word32 s3_3509
	word32 s5_3510
	word32 a4_3507
	ra = bl_printk(ra, 0x230797A0<32>, s0_648 + 1144<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3503, out a1_3504, out a2_3505, out a3_3506, out a4_3507, out a5_3508, out s2_117, out s3_3509, out s4_119, out s5_3510, out s6_1563, out s7_571, out s8_3511, out s9_1041, out s10_1565, out s11_1564)
l23037908:
	branch CONVERT(Mem609[s1_1562 + -108<i32>:byte], byte, word32) >u 2<32> l230378DA
l23037912:
	branch CONVERT(Mem609[s11_1564 + 1569<i32>:byte], byte, word32) >u 2<32> l230378DA
l2303791A:
	branch Mem609[s10_1565 + 580<i32>:int32] == 0<32> l23037948
l23037948:
	word32 a5_3485
	xTaskGetTickCount(out a5_3485)
l23037922:
	word32 a5_3486
	xTaskGetTickCountFromISR(out a5_3486)
l23037926:
	word32 s8_3502
	word32 a0_3494
	word32 a2_3496
	word32 a1_3495
	word32 a3_3497
	word32 a5_3499
	word32 s3_3500
	word32 s5_3501
	word32 a4_3498
	ra = bl_printk(ra, 0x2307976C<32>, s0_621 + 1144<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3494, out a1_3495, out a2_3496, out a3_3497, out a4_3498, out a5_3499, out s2_117, out s3_3500, out s4_119, out s5_3501, out s6_1563, out s7_571, out s8_3502, out s9_1041, out s10_1565, out s11_1564)
l230378A2:
	branch CONVERT(Mem585[s1_1562 + -108<i32>:byte], byte, word32) >u 2<32> l230378DA
l230378AC:
	branch CONVERT(Mem585[s11_1564 + 1569<i32>:byte], byte, word32) >u 2<32> l230378DA
l230378B4:
	branch Mem585[s10_1565 + 580<i32>:int32] == 0<32> l230378EA
l230378EA:
	word32 a5_3407
	xTaskGetTickCount(out a5_3407)
l230378BA:
	word32 a5_3408
	xTaskGetTickCountFromISR(out a5_3408)
l230378BE:
	word32 a0_3413
	word32 a3_3416
	word32 a5_3418
	word32 s5_3420
	word32 s8_3421
	word32 s3_3419
	word32 a4_3417
	word32 a2_3415
	word32 a1_3414
	ra = bl_printk(ra, 0x23079740<32>, s0_595 + 1144<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3413, out a1_3414, out a2_3415, out a3_3416, out a4_3417, out a5_3418, out s2_117, out s3_3419, out s4_119, out s5_3420, out s6_1563, out s7_571, out s8_3421, out s9_1041, out s10_1565, out s11_1564)
l230378DA:
	s7_571 = s7_571 + 0xC<32>
	branch fp + -64<i32> != s7_571 l2303788E
l230378E2:
l23037AA6:
	branch CONVERT(Mem980[s1_1562 + -108<i32>:byte], byte, word32) >u 2<32> l230379E8
l23037AB0:
	branch CONVERT(Mem980[0x4201A621<32>:byte], byte, word32) >u 2<32> l230379E8
l23037ABC:
	branch Mem980[0x4200E244<32>:int32] == 0<32> l23037B78
l23037B78:
	word32 a5_3422
	xTaskGetTickCount(out a5_3422)
l23037AC6:
	word32 a5_3423
	xTaskGetTickCountFromISR(out a5_3423)
l23037ACA:
	word32 a5_1000 = CONVERT(bLoc44, byte, word32)
	word32 s3_3434
	word32 s7_3438
	word32 s10_3440
	word32 s5_3436
	word32 s11_3441
	word32 s4_3435
	word32 s8_3439
	word32 s6_3437
	word32 s2_3433
	word32 a5_3432
	word32 a3_3430
	word32 a4_3431
	word32 a2_3429
	word32 a1_3428
	word32 a0_3427
	word32 s1_3426
	bl_printk(dwArg0134, 0x23079808<32>, dwArg0134, a5_1000, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3426, out a0_3427, out a1_3428, out a2_3429, out a3_3430, out a4_3431, out a5_3432, out s2_3433, out s3_3434, out s4_3435, out s5_3436, out s6_3437, out s7_3438, out s8_3439, out s9_1041, out s10_3440, out s11_3441)
	dwLocB8 = a5_1000
l230379E8:
	word32 s5_1046 = CONVERT(bLoc98_1813, byte, word32)
	word32 a5_1050
	bl_uart_flush(s5_1046, out a5_1050)
	word32 s1_1069
	word32 s8_1073
	word32 s2_1070
	word32 a1_1060
	word32 ra_1067 = bl_uart_init(s5_1046, CONVERT(bLoc68_2953, byte, word32), CONVERT(bLoc5C, byte, word32), a5_1050, out s1_1069, out a1_1060, out s2_1070, out s8_1073)
	word32 a4_1081 = CONVERT(Mem1045[s1_1069 + -108<i32>:byte], byte, word32)
	branch a4_1081 >u 2<32> l23037A20
l23037A14:
	a4_1081 = CONVERT(Mem1045[0x4201A621<32>:byte], byte, word32)
	branch a4_1081 <=u 2<32> l23037B7E
l23037B7E:
	branch Mem1045[0x4200E244<32>:int32] == 0<32> l23037BEA
l23037BEA:
	word32 a5_3455
	xTaskGetTickCount(out a5_3455)
l23037B88:
	word32 a5_3456
	xTaskGetTickCountFromISR(out a5_3456)
l23037B8C:
	word32 s1_1115
	word32 s10_1116
	word32 s7_1123
	word32 s11_3478
	word32 a0_3470
	word32 a3_3472
	word32 a2_3471
	word32 a4_3473
	word32 s3_3475
	word32 s4_3476
	word32 s6_3477
	word32 a5_3474
	ra_1067 = bl_printk(ra_1067, 0x2307985C<32>, dwArg0134 + 1144<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1115, out a0_3470, out a1_1060, out a2_3471, out a3_3472, out a4_3473, out a5_3474, out s2_1070, out s3_3475, out s4_3476, out s5_1046, out s6_3477, out s7_1123, out s8_1073, out s9_1041, out s10_1116, out s11_3478)
	a4_1081 = CONVERT(Mem1045[s1_1115 + -108<i32>:byte], byte, word32)
	branch a4_1081 >u 2<32> l23037A20
l23037BB8:
	a4_1081 = CONVERT(Mem1045[s7_1123 + 1569<i32>:byte], byte, word32)
	branch a4_1081 >u 2<32> l23037A20
l23037BC0:
	branch Mem1045[s10_1116 + 580<i32>:int32] == 0<32> l23037BF0
l23037BF0:
	word32 a5_3457
	xTaskGetTickCount(out a5_3457)
l23037BC6:
	word32 a5_3458
	xTaskGetTickCountFromISR(out a5_3458)
l23037BCA:
	word32 a3_3462
	word32 s3_3464
	word32 a5_3463
	word32 s4_3465
	word32 s7_3467
	word32 s10_3468
	word32 s11_3469
	word32 s6_3466
	word32 s1_3459
	word32 a0_3460
	word32 a2_3461
	ra_1067 = bl_printk(ra_1067, 0x23079888<32>, dwArg0134 + 1144<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3459, out a0_3460, out a1_1060, out a2_3461, out a3_3462, out a4_1081, out a5_3463, out s2_1070, out s3_3464, out s4_3465, out s5_1046, out s6_3466, out s7_3467, out s8_1073, out s9_1041, out s10_3468, out s11_3469)
l23037A20:
	word32 a0_1214
	word32 s0_1219
	word32 s1_1228
	ra = dev_uart_init(ra_1067, s5_1046, a1_1060, s8_1073, s9_1041, a4_1081, s2_1070, mstatus, dwLocB8, dwLocA0, 0x23079500<32>, s10, s6, s4, dwLoc4C, dwLoc48, a1, dwLoc18, dwLoc0C, dwArg28, dwArg58, dwArg68, dwArg98, dwArgA8, out s0_1219, out s1_1228, out a0_1214, out a5_1217, out s2_117, out s4_119, out s9)
	branch a0_1214 == 0<32> l23037522
l23037A30:
	a5_1217 = 4<32>
	branch CONVERT(Mem1045[s1_1228 + -108<i32>:byte], byte, word32) >u 4<32> l23037522
l23037A3A:
	branch CONVERT(Mem1045[0x4201A621<32>:byte], byte, word32) >u 4<32> l23037522
l23037A46:
	branch Mem1045[0x4200E244<32>:int32] == 0<32> l23037BF6
l23037BF6:
	word32 a5_3424
	xTaskGetTickCount(out a5_3424)
l23037A52:
	word32 a5_3425
	xTaskGetTickCountFromISR(out a5_3425)
l23037A56:
	word32 a2_3445
	word32 s11_3454
	word32 a4_3447
	word32 s1_3442
	word32 a3_3446
	word32 s10_3453
	word32 s3_3448
	word32 s6_3450
	word32 s7_3451
	word32 s8_3452
	word32 s5_3449
	word32 a1_3444
	word32 a0_3443
	ra = bl_printk(ra, 0x230798C0<32>, s0_1219 + 1144<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3442, out a0_3443, out a1_3444, out a2_3445, out a3_3446, out a4_3447, out a5_1217, out s2_117, out s3_3448, out s4_119, out s5_3449, out s6_3450, out s7_3451, out s8_3452, out s9, out s10_3453, out s11_3454)
l230376D4:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_312 + -108<i32>:byte], byte, word32) >u 2<32> l23037522
l230376DE:
	branch CONVERT(Mem217[0x4201A621<32>:byte], byte, word32) >u 2<32> l23037522
l230376EA:
	branch Mem217[0x4200E244<32>:int32] == 0<32> l23037712
l23037712:
	word32 a5_3343
	xTaskGetTickCount(out a5_3343)
l230376F4:
	word32 a5_3344
	xTaskGetTickCountFromISR(out a5_3344)
l230376F8:
	a3_1303 = s0_311 + 1144<i32>
	a0_1306 = 0x23079674<32>
l2303766E:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_286 + -108<i32>:byte], byte, word32) >u 2<32> l23037522
l23037678:
	branch CONVERT(Mem217[0x4201A621<32>:byte], byte, word32) >u 2<32> l23037522
l23037684:
	branch Mem217[0x4200E244<32>:int32] == 0<32> l230376B6
l230376B6:
	word32 a5_3337
	xTaskGetTickCount(out a5_3337)
l2303768E:
	word32 a5_3338
	xTaskGetTickCountFromISR(out a5_3338)
l23037692:
	a3_1303 = s0_285 + 1144<i32>
	a0_1306 = 0x23079640<32>
l230376AA:
	word32 a3_3349
	word32 a4_3350
	word32 s8_3355
	word32 s11_3357
	word32 s10_3356
	word32 s5_3352
	word32 s7_3354
	word32 s6_3353
	word32 s3_3351
	word32 a2_3348
	word32 a1_3347
	word32 s1_3345
	word32 a0_3346
	ra = bl_printk(ra, a0_1306, a3_1303, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3345, out a0_3346, out a1_3347, out a2_3348, out a3_3349, out a4_3350, out a5_1217, out s2_117, out s3_3351, out s4_119, out s5_3352, out s6_3353, out s7_3354, out s8_3355, out s9, out s10_3356, out s11_3357)
l2303757A:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_180 + -108<i32>:byte], byte, word32) >u 2<32> l23037522
l23037584:
	branch CONVERT(Mem70[0x4201A621<32>:byte], byte, word32) >u 2<32> l23037522
l23037590:
	branch Mem70[0x4200E244<32>:int32] == 0<32> l230375F6
l230375F6:
	word32 a5_3300
	xTaskGetTickCount(out a5_3300)
l2303759A:
	word32 a5_3301
	xTaskGetTickCountFromISR(out a5_3301)
l2303759E:
	a3_1380 = s0_179 + 1144<i32>
	a0_1383 = 0x230795C8<32>
l23037518:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_143 + -108<i32>:byte], byte, word32) <=u 2<32> l230375BA
l230375BA:
	branch CONVERT(Mem70[0x4201A621<32>:byte], byte, word32) >u 2<32> l23037522
l230375C6:
	branch Mem70[0x4200E244<32>:int32] == 0<32> l230375F0
l230375F0:
	word32 a5_3302
	xTaskGetTickCount(out a5_3302)
l230375D0:
	word32 a5_3303
	xTaskGetTickCountFromISR(out a5_3303)
l230375D4:
	a3_1380 = s0_142 + 1144<i32>
	a0_1383 = 0x23079594<32>
l230374B4:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_116 + -108<i32>:byte], byte, word32) >u 2<32> l23037522
l230374BE:
	branch CONVERT(Mem70[0x4201A621<32>:byte], byte, word32) >u 2<32> l23037522
l230374CA:
	branch Mem70[0x4200E244<32>:int32] == 0<32> l230374F8
l230374F8:
	word32 a5_3278
	xTaskGetTickCount(out a5_3278)
l230374D4:
	word32 a5_3279
	xTaskGetTickCountFromISR(out a5_3279)
l230374D8:
	a3_1380 = s0_115 + 1144<i32>
	a0_1383 = 0x23079550<32>
l23037452:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_91 + -108<i32>:byte], byte, word32) >u 2<32> l23037522
l2303745C:
	branch CONVERT(Mem70[0x4201A621<32>:byte], byte, word32) >u 2<32> l23037522
l23037468:
	branch Mem70[0x4200E244<32>:int32] == 0<32> l23037496
l23037496:
	word32 a5_3256
	xTaskGetTickCount(out a5_3256)
l23037472:
	word32 a5_3257
	xTaskGetTickCountFromISR(out a5_3257)
l23037476:
l2303747E:
	a3_1380 = s0_1457 + 1144<i32>
	a0_1383 = 0x23079520<32>
l230374F2:
	word32 s3_3264
	word32 s8_3268
	word32 s1_3258
	word32 a0_3259
	word32 a2_3261
	word32 a1_3260
	word32 a3_3262
	word32 a4_3263
	word32 s5_3265
	word32 s6_3266
	word32 s7_3267
	word32 s10_3269
	word32 s11_3270
	ra = bl_printk(ra, a0_1383, a3_1380, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_3258, out a0_3259, out a1_3260, out a2_3261, out a3_3262, out a4_3263, out a5_1217, out s2_117, out s3_3264, out s4_119, out s5_3265, out s6_3266, out s7_3267, out s8_3268, out s9, out s10_3269, out s11_3270)
l23037522:
	a5_1522 = a5_1217 + 4<32>
	branch s2_117 == 0<32> l23037492
l23037492:
	s2_1525 = 1<32>
l2303752C:
	Mem1527[a5_1522:byte] = SLICE(s2_117, byte, 0)
l23037532:
	word32 s10_1539 = Mem1529[dwArg0118 + 12<i32>:word32]
	word32 s6_1540 = Mem1529[dwArg0118 + 44<i32>:word32]
	s2Out = Mem1529[dwArg0118 + 76<i32>:word32]
	s6Out = s6_1540
	s9Out = s9
	s10Out = s10_1539
	return ra
vfs_uart_init_exit:


word32 hal_uart_send_flush(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_sync
// MayUse:  a0:[0..31]
// LiveOut: a5 s1
// Trashed: a0 a2 a5 s1 tp
// Preserved: sp
hal_uart_send_flush_entry:
l23037BFC:
	word32 a5_10
	word32 s1_11 = bl_uart_flush(CONVERT(Mem5[a0:byte], byte, word32), out a5_10)
	a5Out = a5_10
	return s1_11
hal_uart_send_flush_exit:


void hal_uart_setbaud(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
hal_uart_setbaud_entry:
l23037C10:
	word32 a0_5 = CONVERT(Mem0[a0:byte], byte, word32)
l23037C14_thunk_bl_uart_setbaud:
	bl_uart_setbaud(a0_5)
	return
hal_uart_setbaud_exit:


void hal_uart_setconfig(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      uart_ioctl_cmd_setconfig
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
hal_uart_setconfig_entry:
l23037C18:
	word32 a0_5 = CONVERT(Mem0[a0:byte], byte, word32)
l23037C1C_thunk_bl_uart_setconfig:
	bl_uart_setconfig(a0_5)
	return
hal_uart_setconfig_exit:


word32 hal_gpio_init_from_dts(word32 ra, word32 a0, word32 s2, word32 s9, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg14, word32 dwArg1C, word32 dwArg4C, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0174, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s2:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +001C:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0174:[0..31]
// LiveOut: a3 a4 a5 ra s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: mstatus sp
hal_gpio_init_from_dts_entry:
l23037C20:
	word32 dwLoc48_959 = s2
	word32 dwArg18_1007 = 0<32>
	word32 a0_38
	word32 a5_43
	word32 s6_2509
	word32 s0_2500
	word32 a1_2502
	word32 a3_2503
	word32 s1_2501
	word32 s5_2508
	word32 s4_2507
	word32 a4_2504
	word32 s3_2506
	word32 s2_2505
	word32 s8_2510
	word32 ra_108 = fdt_getprop(ra, a0, 0x230798E8<32>, dwLoc78, s10, dwLoc3C, dwArg58, dwArg88, out s0_2500, out s1_2501, out a0_38, out a1_2502, out a3_2503, out a4_2504, out a5_43, out s2_2505, out s3_2506, out s4_2507, out s5_2508, out s6_2509, out s8_2510)
	word32 s1_109 = 0xFFFFFFFF<32>
	branch a0_38 == 0<32> l23037C76
l23037C54:
	s1_109 = a5_43 << 0x18<u32> | a5_43 >>u 0x18<u32> | (a5_43 >>u 8<u32> & 255<i32>) << 16<i32> | (a5_43 >>u 16<i32> & 255<i32>) << 8<i32>
l23037C76:
	word32 s0_175 = 0x42017000<32>
	word32 a4_106 = CONVERT(Mem37[0x42016F94<32>:byte], byte, word32)
	word32 a5_100 = 2<32>
	branch a4_106 >u 2<32> l23037CC2
l23037C84:
	a4_106 = CONVERT(Mem37[0x4201A622<32>:byte], byte, word32)
	branch a4_106 >u 2<32> l23037CC2
l23037C90:
	branch Mem37[0x4200E244<32>:int32] == 0<32> l23037D6C
l23037D6C:
	word32 a5_2511
	xTaskGetTickCount(out a5_2511)
l23037C9A:
	word32 a5_2512
	xTaskGetTickCountFromISR(out a5_2512)
l23037C9E:
	word32 a3_2544
	word32 s5_2548
	word32 s10_2553
	word32 s11_2554
	word32 a1_2542
	word32 a0_2541
	word32 a2_2543
	word32 s3_2546
	word32 s2_2545
	word32 s6_2549
	word32 s4_2547
	word32 s7_2550
	word32 s8_2551
	word32 s9_2552
	ra_108 = bl_printk(ra_108, 0x230798FC<32>, 0x230798F0<32>, dwLoc78, s10, dwLoc10, dwLoc0C, 0<32>, ra, out s1_109, out a0_2541, out a1_2542, out a2_2543, out a3_2544, out a4_106, out a5_100, out s2_2545, out s3_2546, out s4_2547, out s5_2548, out s6_2549, out s7_2550, out s8_2551, out s9_2552, out s10_2553, out s11_2554)
l23037CC2:
	word32 s7_122 = 0<32>
	word32 s2_125 = 0x4201A000<32>
	word32 s3_126 = 0x4200E000<32>
l23037CD8:
	byte bLoc46_1013 = SLICE(dwLoc48_959, byte, 16)
	byte bLoc47_1009 = SLICE(dwLoc48_959, byte, 8)
	byte bLoc45_1021 = SLICE(dwLoc48_959, byte, 24)
	branch s7_122 >= s1_109 l23037D4C
l23037CDC:
	word32 s1_147
	word32 s10_148
	word32 s11_149
	word32 s2_150
	word32 s5_153
	word32 s6_154
	word32 s9_157
	word32 a0_166
	word32 s5_180
	word32 a5_2518
	word32 a3_2516
	word32 a3_2523
	word32 s0_2513
	word32 a2_2515
	word32 a0_2514
	word32 a4_2517
	word32 s3_2519
	word32 s8_2521
	word32 s4_2520
	word32 s4_2525
	word32 a5_2524
	word32 s1_2522
	word32 s6_2526
	word32 s7_155
	word32 ra_174 = fdt_subnode_offset(snprintf(ra_108, fp + -88<i32>, 0xB<32>, 0x2307992C<32>, dwLoc68, dwLoc48_959, dwLoc1C, dwArg00, dwArg04, s9, dwArg4C, out s0_2513, out s1_147, out a0_2514, out a2_2515, out a3_2516, out a4_2517, out a5_2518, out s2_150, out s3_2519, out s4_2520, out s5_153, out s6_154, out s7_155, out s8_2521, out s9_157, out s10_148, out s11_149), s1_147, s5_153, fp + -88<i32>, s2_150, s6_154, dwLoc78, dwLoc48_959, dwArg68, out s0_175, out s1_2522, out a0_166, out a3_2523, out a5_2524, out s2_125, out s3_126, out s4_2525, out s5_180, out s6_2526)
	branch a0_166 >= 0<32> l23037D78
l23037D78:
	word32 dwLoc48_2478
	word32 a0_507
	word32 a3_505
	word32 a0_206
	word32 s5_220
	word32 a2_2530
	word32 a0_2528
	word32 t1_2527
	word32 a4_2532
	word32 a3_2531
	word32 a1_2529
	word32 a5_2533
	word32 a1_2534
	word32 a2_2535
	word32 s6_2538
	word32 a4_2536
	word32 a5_2537
	word32 s4_219
	word32 a3_209
	ra_108 = fdt_stringlist_get(memset(ra_174, fp + -76<i32>, 0<32>, 0xC<32>, out t1_2527, out a0_2528, out a1_2529, out a2_2530, out a3_2531, out a4_2532, out a5_2533), s5_180, 0x23079548<32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_206, out a1_2534, out a2_2535, out a3_209, out a4_2536, out a5_2537, out s2_125, out s3_126, out s4_219, out s5_220, out s6_2538)
	branch s9_157 == 4<32> l23037E14
l23037E14:
	word32 a4_2570
	word32 a5_2571
	word32 a2_2569
	word32 a1_2568
	branch memcmp(0x2307958C<32>, a0_206, 4<32>, out a1_2568, out a2_2569, out a3_209, out a4_2570, out a5_2571) != 0<32> l23037DA4
l23037E26:
	word32 a0_577
	word32 a3_575
	word32 a0_243
	word32 a5_248
	word32 s5_257
	word32 s8_2575
	word32 s6_2574
	word32 a1_2572
	word32 a4_2573
	ra_108 = fdt_getprop(ra_108, s5_220, s10_148 + 2012<i32>, dwLoc78, s10, dwLoc3C, dwArg58, dwArg88, out s0_175, out s1_109, out a0_243, out a1_2572, out a3_209, out a4_2573, out a5_248, out s2_125, out s3_126, out s4_219, out s5_257, out s6_2574, out s8_2575)
	branch a0_243 != 0<32> l23037EB4
l23037EB4:
	dwArg18_1007 = (a5_248 >>u 16<i32> & 255<i32>) << 8<i32> | ((a5_248 << 0x18<u32> | a5_248 >>u 0x18<u32>) | (a5_248 >>u 8<u32> & 255<i32>) << 16<i32>)
	word32 a0_281
	word32 a4_285
	word32 s5_295
	word32 a1_2576
	word32 a5_2578
	word32 s6_2579
	word32 a2_2577
	ra_108 = fdt_stringlist_get(ra_108, s5_257, s11_149 + 1848<i32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_281, out a1_2576, out a2_2577, out a3_209, out a4_285, out a5_2578, out s2_125, out s3_126, out s4_219, out s5_295, out s6_2579)
	branch a4_285 != 3<32> l23037FCA
l23037EF2:
	word32 a1_2606
	word32 a2_2607
	word32 a5_2609
	word32 a4_2608
	branch memcmp(0x2307AAEC<32>, a0_281, 3<32>, out a1_2606, out a2_2607, out a3_209, out a4_2608, out a5_2609) != 0<32> l23037FCA
l23037FCA:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem280[s0_175 + -108<i32>:byte], byte, word32) >u 4<32> l23037DAE
l23037FD4:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem280[s2_125 + 1570<i32>:byte], byte, word32) >u 4<32> l23037DAE
l23037FDC:
	branch Mem280[s3_126 + 580<i32>:int32] == 0<32> l23038006
l23038006:
	word32 a5_2664
	xTaskGetTickCount(out a5_2664)
l23037FE2:
	word32 a5_2665
	xTaskGetTickCountFromISR(out a5_2665)
l23037FE6:
l23037F04:
	bLoc47_1009 = 0<8>
	word32 a0_340
	word32 a5_345
	word32 s5_354
	word32 a4_2612
	word32 s6_2613
	word32 a1_2610
	word32 a2_2611
	ra_108 = fdt_stringlist_get(ra_108, s5_295, 0x230799AC<32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_340, out a1_2610, out a2_2611, out a3_209, out a4_2612, out a5_345, out s2_125, out s3_126, out s4_219, out s5_354, out s6_2613)
	branch a5_345 != 2<32> l2303802A
l23037F26:
	word32 a5_369
	word32 a4_371
	word32 a2_2615
	word32 a1_2614
	branch memcmp(0x230799E8<32>, a0_340, 2<32>, out a1_2614, out a2_2615, out a3_209, out a4_371, out a5_369) != 0<32> l2303800C
l2303800C:
	branch a4_371 != a5_369 l2303802A
l23038012:
	word32 a5_2644
	word32 a4_2643
	word32 a2_2642
	word32 a1_2641
	branch memcmp(0x230799EC<32>, a0_340, 2<32>, out a1_2641, out a2_2642, out a3_209, out a4_2643, out a5_2644) != 0<32> l2303802A
l2303802A:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word16, 16), 0<8>, 0<8>) (alias)
	branch CONVERT(Mem387[s0_175 + -108<i32>:byte], byte, word32) >u 4<32> l23037DAE
l23038034:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word16, 16), 0<8>, 0<8>) (alias)
	branch CONVERT(Mem387[s2_125 + 1570<i32>:byte], byte, word32) >u 4<32> l23037DAE
l2303803C:
	branch Mem387[s3_126 + 580<i32>:int32] == 0<32> l23038050
l23038050:
	word32 a5_2649
	xTaskGetTickCount(out a5_2649)
l23038042:
	word32 a5_2650
	xTaskGetTickCountFromISR(out a5_2650)
l23038046:
l23038024:
	bLoc46_1013 = 0<8>
l23037F3C:
	bLoc46_1013 = 1<8>
l23037F42:
	word32 a0_419
	word32 s5_433
	word32 a5_2647
	word32 s6_2648
	word32 a2_2646
	word32 a1_2645
	word32 a4_423
	ra_108 = fdt_stringlist_get(ra_108, s5_354, 0x2307059C<32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_419, out a1_2645, out a2_2646, out a3_209, out a4_423, out a5_2647, out s2_125, out s3_126, out s4_219, out s5_433, out s6_2648)
	branch a4_423 != 5<32> l23038056
l23037F60:
	word32 a1_2616
	word32 a5_2618
	word32 a2_2617
	branch memcmp(0x230799F0<32>, a0_419, 5<32>, out a1_2616, out a2_2617, out a3_209, out a4_423, out a5_2618) != 0<32> l23038056
l23038056:
	branch a4_423 != 9<32> l23038078
l2303805E:
	word32 a4_2634
	word32 a5_2635
	word32 a2_2633
	word32 a1_2632
	branch memcmp(0x230799F8<32>, a0_419, 9<32>, out a1_2632, out a2_2633, out a3_209, out a4_2634, out a5_2635) != 0<32> l23038078
l23038078:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem418[s0_175 + -108<i32>:byte], byte, word32) >u 4<32> l23037DAE
l23038082:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem418[s2_125 + 1570<i32>:byte], byte, word32) >u 4<32> l23037DAE
l2303808A:
	branch Mem418[s3_126 + 580<i32>:int32] == 0<32> l2303809E
l2303809E:
	word32 a5_2662
	xTaskGetTickCount(out a5_2662)
l23038090:
	word32 a5_2663
	xTaskGetTickCountFromISR(out a5_2663)
l23038094:
l23037FEE:
	a3_505 = s4_219 + -1808<i32>
	a0_507 = 0x230799B4<32>
l23038070:
	bLoc45_1021 = 1<8>
l23037F74:
	bLoc45_1021 = 0<8>
l23037F78:
	word32 a0_524
	word32 a5_529
	word32 a4_2637
	word32 s8_2640
	word32 s5_2638
	word32 s6_2639
	word32 a1_2636
	ra_108 = fdt_getprop(ra_108, s5_433, 0x23077CF4<32>, dwLoc78, s10, dwLoc3C, dwArg58, dwArg88, out s0_175, out s1_109, out a0_524, out a1_2636, out a3_209, out a4_2637, out a5_529, out s2_125, out s3_126, out s4_219, out s5_2638, out s6_2639, out s8_2640)
	branch a0_524 != 0<32> l230380AA
l230380AA:
	word32 a3_549 = a5_529 >>u 8<u32> & 255<i32>
	a3_209 = a3_549 << 16<i32>
	dwArg1C = (a5_529 >>u 16<i32> & 255<i32>) << 8<i32> | ((a5_529 << 0x18<u32> | a5_529 >>u 0x18<u32>) | a3_549 << 16<i32>)
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 1<8>) (alias)
l23037F8E:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem523[s0_175 + -108<i32>:byte], byte, word32) >u 4<32> l23037DAE
l23037F98:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem523[s2_125 + 1570<i32>:byte], byte, word32) >u 4<32> l23037DAE
l23037FA0:
	branch Mem523[s3_126 + 580<i32>:int32] == 0<32> l230380A4
l230380A4:
	word32 a5_2619
	xTaskGetTickCount(out a5_2619)
l23037FA8:
	word32 a5_2620
	xTaskGetTickCountFromISR(out a5_2620)
l23037FAC:
	a3_575 = s4_219 + -1808<i32>
	a0_577 = 0x23079A04<32>
l23037E36:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch s9_157 <u CONVERT(Mem205[s0_175 + -108<i32>:byte], byte, word32) l23037DAE
l23037E3E:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch s9_157 <u CONVERT(Mem205[s2_125 + 1570<i32>:byte], byte, word32) l23037DAE
l23037E46:
	branch Mem205[s3_126 + 580<i32>:int32] == 0<32> l23037EAE
l23037EAE:
	word32 a5_2580
	xTaskGetTickCount(out a5_2580)
l23037E4C:
	word32 a5_2581
	xTaskGetTickCountFromISR(out a5_2581)
l23037E50:
	a3_575 = s4_219 + -1808<i32>
	a0_577 = 0x23079980<32>
l23037E6C:
	word32 a2_2623
	word32 s9_2629
	word32 s10_2630
	word32 s11_2631
	word32 s5_2626
	word32 s8_2628
	word32 s6_2627
	word32 a4_2624
	word32 a5_2625
	word32 a1_2622
	word32 a0_2621
	ra_108 = bl_printk(ra_108, a0_577, a3_575, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2621, out a1_2622, out a2_2623, out a3_209, out a4_2624, out a5_2625, out s2_125, out s3_126, out s4_219, out s5_2626, out s6_2627, out s7_155, out s8_2628, out s9_2629, out s10_2630, out s11_2631)
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, bLoc47_1009, 0<8>) (alias)
l23037DA4:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem205[s0_175 + -108<i32>:byte], byte, word32) <=u 2<32> l23037E72
l23037E72:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem205[s2_125 + 1570<i32>:byte], byte, word32) >u 2<32> l23037DAE
l23037E7A:
	branch Mem205[s3_126 + 580<i32>:int32] == 0<32> l23037EA8
l23037EA8:
	word32 a5_2666
	xTaskGetTickCount(out a5_2666)
l23037E80:
	word32 a5_2667
	xTaskGetTickCountFromISR(out a5_2667)
l23037E84:
	a3_505 = s4_219 + -1808<i32>
	a0_507 = 0x23079958<32>
l23037EA2:
	word32 a4_2654
	word32 s6_2657
	word32 s8_2658
	word32 s11_2661
	word32 s9_2659
	word32 s10_2660
	word32 s5_2656
	word32 a5_2655
	word32 a0_2651
	word32 a2_2653
	word32 a1_2652
	ra_108 = bl_printk(ra_108, a0_507, a3_505, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2651, out a1_2652, out a2_2653, out a3_209, out a4_2654, out a5_2655, out s2_125, out s3_126, out s4_219, out s5_2656, out s6_2657, out s7_155, out s8_2658, out s9_2659, out s10_2660, out s11_2661)
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, bLoc47_1009, 0<8>) (alias)
l23037DAE:
	a5_100 = CONVERT(SLICE(dwLoc48_2478, byte, 0), byte, word32)
	a4_106 = 1<32>
	branch a5_100 != 1<32> l230380DC
l230380DC:
	branch a5_100 != 0<32> l23037E10
l230380E0:
	a4_106 = CONVERT(Mem698[s0_175 + -108<i32>:byte], byte, word32)
	a5_100 = 4<32>
	branch a4_106 >u 4<32> l23037E10
l230380EA:
	a4_106 = CONVERT(Mem698[s2_125 + 1570<i32>:byte], byte, word32)
	branch a4_106 >u 4<32> l23037E10
l230380F2:
	branch Mem698[s3_126 + 580<i32>:int32] == 0<32> l2303811E
l2303811E:
	word32 a5_2582
	xTaskGetTickCount(out a5_2582)
l230380F8:
	word32 a5_2583
	xTaskGetTickCountFromISR(out a5_2583)
l230380FC:
	word32 a0_2595
	word32 s6_2601
	word32 s8_2602
	word32 s11_2605
	word32 s9_2603
	word32 s10_2604
	word32 a3_2598
	word32 s5_2600
	word32 s4_2599
	word32 a1_2596
	word32 a2_2597
	ra_108 = bl_printk(ra_108, 0x23079A04<32>, s4_219 + -1808<i32>, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2595, out a1_2596, out a2_2597, out a3_2598, out a4_106, out a5_100, out s2_125, out s3_126, out s4_2599, out s5_2600, out s6_2601, out s7_155, out s8_2602, out s9_2603, out s10_2604, out s11_2605)
l23037DB8:
	word32 a4_758 = CONVERT(Mem698[s0_175 + -108<i32>:byte], byte, word32)
	word32 a5_759 = 2<32>
	dwLoc48_1481 = dwLoc48_2478 (alias)
	branch a4_758 >u 2<32> l23037E08
l23037DC2:
	a4_758 = CONVERT(Mem698[s2_125 + 1570<i32>:byte], byte, word32)
	branch a4_758 >u 2<32> l23037E08
l23037DCA:
	word32 a5_763
	branch Mem698[s3_126 + 580<i32>:int32] == 0<32> l230380D6
l230380D6:
	xTaskGetTickCount(out a5_763)
l23037DD2:
	xTaskGetTickCountFromISR(out a5_763)
l23037DD6:
	dwArg00 = a5_763
	word32 s9_2592
	word32 s11_2594
	word32 s10_2593
	word32 s8_2591
	word32 s4_2588
	word32 s6_2590
	word32 s5_2589
	word32 a1_2585
	word32 s3_2587
	word32 a2_2586
	word32 a0_2584
	ra_108 = bl_printk(ra_108, 0x23079A34<32>, dwArg0174 + -1808<i32>, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2584, out a1_2585, out a2_2586, out a3_209, out a4_758, out a5_759, out s2_125, out s3_2587, out s4_2588, out s5_2589, out s6_2590, out s7_155, out s8_2591, out s9_2592, out s10_2593, out s11_2594)
l23037E08:
	ra_108 = loopset_led_trigger(ra_108, s1_109, a3_209, a4_758, a5_759, s2_125, mstatus, dwLoc78, dwLoc6C, dwLoc60, dwLoc5C, dwLoc48_2478, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg14, dwArg1C, dwArg64, dwArg80, dwArg84, dwArg98, dwArgA8, dwArgD8, out s0_175, out s1_109, out a4_106, out a5_100, out s2_125, out s3_126, out mstatus)
l23037E10:
	s7_122 = s7_155 + 1<32>
	dwLoc48_959 = dwLoc48_1481
l23037D04:
	a4_106 = CONVERT(Mem165[s0_175 + -108<i32>:byte], byte, word32)
	a5_100 = 2<32>
	branch a4_106 >u 2<32> l23037D4C
l23037D0E:
	a4_106 = CONVERT(Mem165[0x4201A622<32>:byte], byte, word32)
	branch a4_106 >u 2<32> l23037D4C
l23037D1A:
	branch Mem165[0x4200E244<32>:int32] == 0<32> l23037D72
l23037D72:
	word32 a5_2539
	xTaskGetTickCount(out a5_2539)
l23037D24:
	word32 a5_2540
	xTaskGetTickCountFromISR(out a5_2540)
l23037D28:
	word32 s11_2567
	word32 s10_2566
	word32 s7_2563
	word32 s9_2565
	word32 s8_2564
	word32 s6_2562
	word32 a0_2556
	word32 s5_2561
	word32 a3_2559
	word32 s4_2560
	word32 a1_2557
	word32 a2_2558
	word32 s1_2555
	bl_printk(ra_174, 0x23079934<32>, 0x230798F0<32>, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_2555, out a0_2556, out a1_2557, out a2_2558, out a3_2559, out a4_106, out a5_100, out s2_125, out s3_126, out s4_2560, out s5_2561, out s6_2562, out s7_2563, out s8_2564, out s9_2565, out s10_2566, out s11_2567)
l23037D4C:
	s0Out = s0_175
	a3Out = dwLoc14
	a4Out = a4_106
	a5Out = a5_100
	s2Out = s2_125
	s3Out = s3_126
	return dwArg0158
hal_gpio_init_from_dts_exit:


void hal_reboot(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      reboot_cmd
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
hal_reboot_exit:
hal_reboot_entry:
l23038124:
l23038124_thunk_bl_sys_reset_por:
	bl_sys_reset_por(mstatus)


void hal_sys_reset(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      reset_cmd
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
hal_sys_reset_exit:
hal_sys_reset_entry:
l23038128:
l23038128_thunk_bl_sys_reset_system:
	bl_sys_reset_system(mstatus)


void hal_poweroff()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      poweroff_cmd
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
hal_poweroff_entry:
l2303812C:
	return
hal_poweroff_exit:


word32 hal_sys_capcode_update(word32 ra, word32 a0, word32 a1, word32 s2, word32 s3, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg48, ptr32 & s1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start
//      wifi_capcode_cmd
//      hal_board_cfg
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0048:[0..31]
// LiveOut: a3 ra s1
// Trashed: a0 a1 a2 a3 a6 ra s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
hal_sys_capcode_update_entry:
l2303812E:
	word32 t1_15 = Mem14[0x2101081C<32>:int32]
	branch a0 == 255<i32> l2303817A
l2303815A:
	s2 = a1
	branch a1 == 255<i32> l2303817A
l2303817A:
	word32 s1_42
	word32 a3_43
	word32 ra_44
	call t1_15 (retsize: 0;)
		uses: a0:CONVERT(Mem14[0x4200E289<32>:byte], byte, word32),a1:CONVERT(Mem14[0x4200E28A<32>:byte], byte, word32),a2:dwArg48,a6:dwArg28,ra:ra,s0:0x4200E289<32>,s1:0x4200E28A<32>,s2:s2_38,s3:s3,s4:dwArg04,s8:dwLoc1C,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +0048:dwArg48,Stack +FFFFFFE4:dwLoc1C,t3:dwArg00
		defs: a3:a3_43,ra:ra_44,s1:s1_42
	s1Out = s1_42
	a3Out = a3_43
	return ra_44
l23038160:
	word32 s0_57
	word32 s1_58
	word32 a3_59
	word32 ra_60
	word32 s2_61
	word32 s3_62
	call t1_15 (retsize: 0;)
		uses: a0:a0,a1:a1,ra:ra,s0:0x4200E289<32>,s1:0x4200E28A<32>,s2:a1,s3:a0,Stack +0004:dwLoc1C,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0048:dwArg28,Stack +0068:dwArg48
		defs: a3:a3_59,ra:ra_60,s0:s0_57,s1:s1_58,s2:s2_61,s3:s3_62
	Mem72[s0_57:byte] = SLICE(s3_62, byte, 0)
	Mem74[s1_58:byte] = SLICE(s2_61, byte, 0)
	s1Out = s1_58
	a3Out = a3_59
	return ra_60
hal_sys_capcode_update_exit:


void hal_sys_capcode_get()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_capcode_cmd
// MayUse: 
// LiveOut:
// Trashed: t1
// Preserved: sp
hal_sys_capcode_get_entry:
l23038190:
	call 0x4200CDAE<p32> (retsize: 0;)
		uses: t1:0x4200D190<p32>
	return
hal_sys_capcode_get_exit:


word32 fdt32_to_cpu(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_to_cpu_entry:
l23038198:
	return (a0 >>u 16<i32> & 255<i32>) << 8<i32> | ((a0 << 0x18<u32> | a0 >>u 0x18<u32>) | (a0 >>u 8<u32> & 255<i32>) << 16<i32>)
fdt32_to_cpu_exit:


word32 hal_board_get_factory_addr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
hal_board_get_factory_addr_entry:
l230381BA:
	return Mem0[0x4200E28C<32>:int32]
hal_board_get_factory_addr_exit:


word32 hal_board_cfg(word32 ra, word32 s0, word32 s1, word32 s2, word32 s4, word32 s6, word32 s8, word32 s9, word32 s10, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg28, word32 dwArg94, word32 dwArgD4, word32 dwArgF4, ptr32 & gpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] s8:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0094:[0..31] Stack +00D4:[0..31] Stack +00F4:[0..31]
// LiveOut: gp ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t6 tp
// Preserved: mstatus sp t5
hal_board_cfg_entry:
	byte bLoc79_7707 = SLICE(dwLoc7C, byte, 24)
	byte bLoc7A_7754 = SLICE(dwLoc7C, byte, 16)
	word16 wLoc7C_8114 = SLICE(dwLoc7C, word16, 0)
	byte bLoc7C_12274 = SLICE(dwLoc7C, byte, 0)
	byte bLoc7B_12275 = SLICE(dwLoc7C, byte, 8)
	int8 bLocAA = SLICE(dwLocAC, int8, 16)
	word16 wLocB0_12029 = SLICE(nLocB0, word16, 0)
l230381C4:
	word32 s1_45
	word32 a5_12994
	word32 a0_12992
	word32 a3_12993
	word32 s2_115
	word32 s0_44 = hal_boot2_partition_addr_active(0x23079A9C<32>, s1, out s1_45, out a0_12992, out a3_12993, out a5_12994, out s2_115)
	word32 sp_3 = fp + -256<i32>
	word32 s3_108 = s1_45 + 652<i32>
	branch CONVERT(Mem34[s0_44 + -108<i32>:byte], byte, word32) >u 2<32> l2303824C
l23038208:
	branch CONVERT(Mem34[0x4201A623<32>:byte], byte, word32) >u 2<32> l2303824C
l23038214:
	branch Mem34[0x4200E244<32>:int32] == 0<32> l2303829A
l2303829A:
	word32 a5_12995
	xTaskGetTickCount(out a5_12995)
l23038220:
	word32 a5_12996
	xTaskGetTickCountFromISR(out a5_12996)
l23038224:
	word32 a0_13004
	word32 a2_13006
	word32 a4_13008
	word32 a5_13009
	word32 s5_13011
	word32 s7_13013
	word32 s8_13014
	word32 s10_13016
	word32 s11_13017
	word32 s9_13015
	word32 s6_13012
	word32 s4_13010
	word32 a3_13007
	word32 a1_13005
	word32 s1_13003
	ra = bl_printk(ra, 0x23079AB0<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13003, out a0_13004, out a1_13005, out a2_13006, out a3_13007, out a4_13008, out a5_13009, out s2_115, out s3_108, out s4_13010, out s5_13011, out s6_13012, out s7_13013, out s8_13014, out s9_13015, out s10_13016, out s11_13017)
l2303824C:
	branch Mem34[s3_108:int32] != 0<32> l230382A6
l230382A6:
	word32 s1_12997
	word32 a3_12999
	word32 a5_13000
	word32 a0_12998
	word32 s3_128
	word32 s2_127
	word32 s6_131
	word32 s0_125 = hal_boot2_partition_bus_addr_active(s2_115 + -1380<i32>, s1, out s1_12997, out a0_12998, out a3_12999, out a5_13000, out s2_127, out s3_128, out s6_131)
	branch CONVERT(Mem34[s0_125 + -108<i32>:byte], byte, word32) >u 2<32> l23038302
l230382C0:
	branch CONVERT(Mem34[0x4201A623<32>:byte], byte, word32) >u 2<32> l23038302
l230382CC:
	branch Mem34[0x4200E244<32>:int32] == 0<32> l23038350
l23038350:
	word32 a5_13035
	xTaskGetTickCount(out a5_13035)
l230382D6:
	word32 a5_13036
	xTaskGetTickCountFromISR(out a5_13036)
l230382DA:
	word32 a2_13047
	word32 a4_13049
	word32 s4_13051
	word32 s10_13056
	word32 s11_13057
	word32 s9_13055
	word32 s5_13052
	word32 s8_13054
	word32 s7_13053
	word32 a5_13050
	word32 a3_13048
	word32 a1_13046
	word32 s1_13044
	word32 a0_13045
	ra = bl_printk(ra, 0x23079B64<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13044, out a0_13045, out a1_13046, out a2_13047, out a3_13048, out a4_13049, out a5_13050, out s2_127, out s3_128, out s4_13051, out s5_13052, out s6_131, out s7_13053, out s8_13054, out s9_13055, out s10_13056, out s11_13057)
l23038302:
	word32 s1_192 = Mem34[s3_128:int32]
	branch s1_192 != 0<32> l2303835C
l2303835C:
	word32 a0_202
	word32 s0_211
	word32 s5_13041
	word32 a3_13037
	word32 s3_13039
	word32 s4_13040
	word32 a5_13038
	word32 s1_212
	word32 s2_213
	word32 s6_217
	word32 ra_210 = fdt_subnode_offset(ra, s1_192, s1_192, 0x23078D5C<32>, s2_127, s6_131, dwLocF8, dwLocC8, s9, out s0_211, out s1_212, out a0_202, out a3_13037, out a5_13038, out s2_213, out s3_13039, out s4_13040, out s5_13041, out s6_217)
	branch a0_202 > 0<32> l230383BC
l23038374:
	branch CONVERT(Mem198[s0_211 + -108<i32>:byte], byte, word32) >u 4<32> l230383BC
l2303837E:
	branch CONVERT(Mem198[0x4201A623<32>:byte], byte, word32) >u 4<32> l230383BC
l2303838A:
	branch Mem198[0x4200E244<32>:int32] == 0<32> l23038518
l23038518:
	word32 a5_13081
	xTaskGetTickCount(out a5_13081)
l23038396:
	word32 a5_13082
	xTaskGetTickCountFromISR(out a5_13082)
l2303839A:
	word32 a0_13113
	word32 a1_13114
	word32 a5_13118
	word32 s3_13119
	word32 s7_13122
	word32 s8_13123
	word32 s11_13126
	word32 s10_13125
	word32 s9_13124
	word32 s5_13121
	word32 s4_13120
	word32 a3_13116
	word32 a4_13117
	word32 a2_13115
	ra_210 = bl_printk(ra_210, 0x23079C14<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_212, out a0_13113, out a1_13114, out a2_13115, out a3_13116, out a4_13117, out a5_13118, out s2_213, out s3_13119, out s4_13120, out s5_13121, out s6_217, out s7_13122, out s8_13123, out s9_13124, out s10_13125, out s11_13126)
l230383BC:
	word32 a0_278
	word32 s3_290
	word32 s4_13079
	word32 s5_13080
	word32 s0_13075
	word32 s2_13078
	word32 a5_13077
	word32 a3_13076
	word32 s1_1327
	word32 s6_1332
	word32 ra_1325 = fdt_subnode_offset(ra_210, s1_212, s1_212, 0x23079C34<32>, s2_213, s6_217, dwLocF8, dwLocC8, s9, out s0_13075, out s1_1327, out a0_278, out a3_13076, out a5_13077, out s2_13078, out s3_290, out s4_13079, out s5_13080, out s6_1332)
	word32 s2_1328 = a0_278
	branch a0_278 <= 0<32> l230387E6
l230383D4:
	dwLocD0 = 0<32>
	word32 a0_305
	word32 s3_317
	word32 s8_13094
	word32 s5_13092
	word32 s6_13093
	word32 s0_13089
	word32 s4_13091
	word32 s2_13090
	word32 s1_315
	word32 ra_313 = fdt_stringlist_count(ra_1325, s1_1327, 0x23079C3C<32>, a0_278, dwLocF8, dwLocDC, dwLoc48, s9, out s0_13089, out s1_315, out a0_305, out s2_13090, out s3_317, out s4_13091, out s5_13092, out s6_13093, out s8_13094)
	branch a0_305 != 1<32> l23038644
l230383EC:
	word32 a0_331
	word32 a1_13104
	word32 a4_13106
	word32 s3_13108
	word32 s5_13109
	word32 s6_13110
	word32 a5_13107
	word32 a3_13105
	word32 a2_333
	word32 s0_340
	word32 s2_342
	word32 s4_344
	fdt_stringlist_get(ra_313, s1_315, s3_317 + -964<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_340, out s1_315, out a0_331, out a1_13104, out a2_333, out a3_13105, out a4_13106, out a5_13107, out s2_342, out s3_13108, out s4_344, out s5_13109, out s6_13110)
	word32 s5_353 = a0_331
	branch CONVERT(Mem304[s0_340 + -108<i32>:byte], byte, word32) >u 2<32> l23038448
l23038408:
	branch CONVERT(Mem304[0x4201A623<32>:byte], byte, word32) >u 2<32> l23038448
l23038414:
	branch Mem304[0x4200E244<32>:int32] == 0<32> l2303851E
l2303851E:
	word32 a5_13111
	xTaskGetTickCount(out a5_13111)
l23038420:
	word32 a5_13112
	xTaskGetTickCountFromISR(out a5_13112)
l23038424:
	word32 a1_13142
	word32 a5_13145
	word32 s6_13147
	word32 s8_13149
	word32 s9_13150
	word32 s11_13152
	word32 s10_13151
	word32 s7_13148
	word32 s3_13146
	word32 a4_13144
	word32 a3_13143
	word32 a0_13141
	bl_printk(dwArgF4, 0x23079C48<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_315, out a0_13141, out a1_13142, out a2_333, out a3_13143, out a4_13144, out a5_13145, out s2_342, out s3_13146, out s4_344, out s5_353, out s6_13147, out s7_13148, out s8_13149, out s9_13150, out s10_13151, out s11_13152)
l23038448:
	ra_313 = dwArg94
	word32 s3_399 = 2<32>
	branch a2_333 > 2<32> l23038644
l23038450:
	word32 a6_13269
	word32 a7_13270
	word32 a4_13267
	word32 a5_13268
	word32 a2_13265
	word32 a3_13266
	memcpy(fp + -176<i32>, s5_353, a2_333, out a2_13265, out a3_13266, out a4_13267, out a5_13268, out a6_13269, out a7_13270)
	nLocB0 = CONVERT(wLocB0_12029, word16, uint24) (alias)
	branch CONVERT(Mem304[s0_340 + -108<i32>:byte], byte, word32) >u 2<32> l230384A2
l23038464:
	branch CONVERT(Mem420[0x4201A623<32>:byte], byte, word32) >u 2<32> l230384A2
l23038470:
	branch Mem420[0x4200E244<32>:int32] == 0<32> l23038524
l23038524:
	word32 a5_13275
	xTaskGetTickCount(out a5_13275)
l2303847A:
	word32 a5_13276
	xTaskGetTickCountFromISR(out a5_13276)
l2303847E:
	word32 a1_13294
	word32 a3_13296
	word32 a4_13297
	word32 s7_13301
	word32 s8_13302
	word32 s11_13305
	word32 s10_13304
	word32 s9_13303
	word32 s5_13299
	word32 s6_13300
	word32 a5_13298
	word32 a2_13295
	word32 a0_13293
	ra_313 = bl_printk(dwArg94, 0x23079C74<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_315, out a0_13293, out a1_13294, out a2_13295, out a3_13296, out a4_13297, out a5_13298, out s2_342, out s3_399, out s4_344, out s5_13299, out s6_13300, out s7_13301, out s8_13302, out s9_13303, out s10_13304, out s11_13305)
l230384A2:
	word32 a1_13271
	word32 a4_13273
	word32 a5_13274
	word32 a2_13272
	word32 a3_467
	word32 s10_472 = strlen(fp + -176<i32>, out a1_13271, out a2_13272, out a3_467, out a4_13273, out a5_13274)
	word32 s5_473 = 0<32>
	word32 s7_475 = 0x4200E000<32>
	word32 s11_478 = 0x2307A000<32>
l230384C0:
	word32 s5_670
	word32 s3_679
	branch s5_473 >= s10_472 l230389B0
l230384C4:
	word32 s5_510
	word32 a0_587
	word32 a3_582
	word32 a5_485 = CONVERT(Mem484[sp_3 + 80<i32> + s5_473:byte], byte, word32)
	branch a5_485 == 70<i32> l2303852A
l2303852A:
	Mem494[sp_3 + 64<i32>:word32] = 0<32>
	word32 a0_496
	word32 a4_500
	word32 a1_13306
	word32 s3_13308
	word32 a5_13307
	word32 s6_511
	word32 s8_512
	ra_313 = fdt_getprop(ra_313, s1_315, 0x23079C9C<32>, Mem494[sp_3 + 8<i32>:word32], Mem494[sp_3 + 40<i32>:word32], Mem494[sp_3 + 68<i32>:word32], Mem494[sp_3 + 216<i32>:word32], Mem494[sp_3 + 264<i32>:word32], out s0_340, out s1_315, out a0_496, out a1_13306, out a3_467, out a4_500, out a5_13307, out s2_342, out s3_13308, out s4_344, out s5_510, out s6_511, out s8_512)
	sp_3 = Mem494[sp_3 + 196<i32>:word32]
	s3_399 = a0_496
	branch a4_500 != 0x14<32> l2303893C
l2303893C:
	branch CONVERT(Mem494[s0_340 + -108<i32>:byte], byte, word32) >u 4<32> l230389A8
l23038946:
	branch CONVERT(Mem494[s6_511 + 1571<i32>:byte], byte, word32) >u 4<32> l23038972
l2303894E:
	branch Mem494[s7_475 + 580<i32>:int32] == 0<32> l230389C4
l230389C4:
	word32 a5_13348
	xTaskGetTickCount(out a5_13348)
l23038954:
	word32 a5_13349
	xTaskGetTickCountFromISR(out a5_13349)
l23038958:
	word32 a0_13368
	word32 a2_13370
	word32 a4_13371
	word32 s9_13373
	word32 a5_13372
	word32 a1_13369
	ra_313 = bl_printk(ra_313, s11_478 + -804<i32>, s8_512 + -1372<i32>, Mem494[sp_3 + 8<i32>:word32], Mem494[sp_3 + 40<i32>:word32], Mem494[sp_3 + 112<i32>:word32], Mem494[sp_3 + 116<i32>:word32], Mem494[sp_3 + 152<i32>:word32], Mem494[sp_3 + 188<i32>:word32], out s1_315, out a0_13368, out a1_13369, out a2_13370, out a3_467, out a4_13371, out a5_13372, out s2_342, out s3_399, out s4_344, out s5_510, out s6_511, out s7_475, out s8_512, out s9_13373, out s10_472, out s11_478)
l23038972:
	branch CONVERT(Mem494[s0_340 + -108<i32>:byte], byte, word32) >u 1<32> l230389A8
l2303897C:
	branch CONVERT(Mem494[s6_511 + 1571<i32>:byte], byte, word32) >u 1<32> l230389A8
l23038984:
	branch Mem494[s7_475 + 580<i32>:int32] == 0<32> l230389D0
l230389D0:
	word32 a5_13366
	xTaskGetTickCount(out a5_13366)
l2303898A:
	word32 a5_13367
	xTaskGetTickCountFromISR(out a5_13367)
l2303898E:
	a3_582 = s8_512 + -1372<i32>
	a0_587 = 0x23079D2C<32>
l23038548:
	branch CONVERT(Mem494[s0_340 + -108<i32>:byte], byte, word32) >u 2<32> l230385DA
l23038552:
	branch CONVERT(Mem494[0x4201A623<32>:byte], byte, word32) >u 2<32> l230385DA
l2303855E:
	word32 a0_594
	branch Mem494[0x4200E244<32>:int32] == 0<32> l23038936
l23038936:
	word32 a5_13329
	a0_594 = xTaskGetTickCount(out a5_13329)
l2303856A:
	word32 a5_13330
	a0_594 = xTaskGetTickCountFromISR(out a5_13330)
l2303856E:
	Mem600[sp_3 + 144<i32>:word32] = a0_594
	fdt32_to_cpu(Mem600[a0_496:int32])
	fdt32_to_cpu(Mem600[a0_496 + 4<i32>:int32])
	fdt32_to_cpu(Mem600[a0_496 + 8<i32>:int32])
	word32 a0_618 = fdt32_to_cpu(Mem600[a0_496 + 12<i32>:int32])
	Mem629[sp_3 + 128<i32>:word32] = fdt32_to_cpu(Mem600[a0_496 + 16<i32>:int32]) & 255<i32>
	Mem633[sp_3:word32] = a0_618 & 255<i32>
	word32 a0_13332
	word32 a1_13333
	word32 a3_13335
	word32 a5_13337
	word32 s4_13338
	word32 s5_13339
	word32 s10_13344
	word32 s11_13345
	word32 s9_13343
	word32 s6_13340
	word32 s8_13342
	word32 s7_13341
	word32 a4_13336
	word32 a2_13334
	word32 s1_13331
	ra_313 = bl_printk(ra_313, 0x23079CA4<32>, 0x23079AA4<32>, Mem633[sp_3 + 8<i32>:word32], Mem633[sp_3 + 40<i32>:word32], Mem633[sp_3 + 112<i32>:word32], Mem633[sp_3 + 116<i32>:word32], Mem633[sp_3 + 152<i32>:word32], Mem633[sp_3 + 188<i32>:word32], out s1_13331, out a0_13332, out a1_13333, out a2_13334, out a3_13335, out a4_13336, out a5_13337, out s2_342, out s3_399, out s4_13338, out s5_13339, out s6_13340, out s7_13341, out s8_13342, out s9_13343, out s10_13344, out s11_13345)
l230385DA:
	s5_670 = fdt32_to_cpu(Mem665[s3_399:int32]) & 255<i32>
	s3_679 = fdt32_to_cpu(Mem665[s3_399 + 4<i32>:int32]) & 255<i32>
	branch CONVERT(Mem665[s0_340 + -108<i32>:byte], byte, word32) >u 1<32> l2303863A
l230385FC:
	branch CONVERT(Mem665[0x4201A623<32>:byte], byte, word32) >u 1<32> l2303863A
l23038608:
	branch Mem665[0x4200E244<32>:int32] == 0<32> l230389CA
l230389CA:
	word32 a5_13346
	xTaskGetTickCount(out a5_13346)
l23038614:
	word32 a5_13347
	xTaskGetTickCountFromISR(out a5_13347)
l23038618:
	word32 s11_13365
	word32 s4_13359
	word32 s7_13361
	word32 s9_13363
	word32 s10_13364
	word32 s8_13362
	word32 s6_13360
	word32 a4_13357
	word32 a5_13358
	word32 a2_13355
	word32 a3_13356
	word32 a0_13353
	word32 a1_13354
	word32 s1_13352
	ra_313 = bl_printk(ra_313, 0x23079D00<32>, 0x23079AA4<32>, Mem665[sp_3 + 8<i32>:word32], Mem665[sp_3 + 40<i32>:word32], Mem665[sp_3 + 112<i32>:word32], Mem665[sp_3 + 116<i32>:word32], Mem665[sp_3 + 152<i32>:word32], Mem665[sp_3 + 188<i32>:word32], out s1_13352, out a0_13353, out a1_13354, out a2_13355, out a3_13356, out a4_13357, out a5_13358, out s2_342, out s3_679, out s4_13359, out s5_670, out s6_13360, out s7_13361, out s8_13362, out s9_13363, out s10_13364, out s11_13365)
l230384D4:
	branch a5_485 == 77<i32> l230389D6
l230389D6:
	Mem726[sp_3 + 128<i32>:byte] = 0<8>
	word32 a0_732
	word32 s6_750
	word32 s8_752
	ra_313 = bl_efuse_read_capcode(ra_313, s0_340, s1_315, sp_3 + 128<i32>, a3_467, 77<i32>, s2_342, s3_399, s4_344, mstatus, Mem726[sp_3 + 40<i32>:word32], Mem726[sp_3 + 64<i32>:word32], Mem726[sp_3 + 68<i32>:word32], Mem726[sp_3 + 104<i32>:word32], Mem726[sp_3 + 140<i32>:word32], out s0_340, out s1_315, out a0_732, out a3_467, out s2_342, out s3_399, out s4_344, out s5_510, out s6_750, out s7_475, out s8_752, out s10_472, out s11_478, out mstatus)
	branch a0_732 != 0<32> l230389F4
l230389F4:
	branch CONVERT(Mem726[s0_340 + -108<i32>:byte], byte, word32) >u 1<32> l230389A8
l230389FE:
	branch CONVERT(Mem726[s6_750 + 1571<i32>:byte], byte, word32) >u 1<32> l230389A8
l23038A06:
	branch Mem726[s7_475 + 580<i32>:int32] == 0<32> l23038A6E
l23038A6E:
	word32 a5_13389
	xTaskGetTickCount(out a5_13389)
l23038A0C:
	word32 a5_13390
	xTaskGetTickCountFromISR(out a5_13390)
l23038A10:
	a3_582 = s8_752 + -1372<i32>
	a0_587 = 0x23079D84<32>
l230389A4:
	word32 a2_13393
	word32 s9_13398
	word32 a4_13394
	word32 s8_13397
	word32 s6_13396
	word32 a5_13395
	word32 a1_13392
	word32 a0_13391
	ra_313 = bl_printk(ra_313, a0_587, a3_582, Mem785[sp_3 + 8<i32>:word32], Mem785[sp_3 + 40<i32>:word32], Mem785[sp_3 + 112<i32>:word32], Mem785[sp_3 + 116<i32>:word32], Mem785[sp_3 + 152<i32>:word32], Mem785[sp_3 + 188<i32>:word32], out s1_315, out a0_13391, out a1_13392, out a2_13393, out a3_467, out a4_13394, out a5_13395, out s2_342, out s3_399, out s4_344, out s5_510, out s6_13396, out s7_475, out s8_13397, out s9_13398, out s10_472, out s11_478)
l230389A8:
	s5_473 = s5_510 + 1<32>
	branch s5_473 != 2<32> l230384C0
l230389B0:
	branch CONVERT(Mem819[s0_340 + -108<i32>:byte], byte, word32) <=u 2<32> l23038A7A
l23038A7A:
	branch CONVERT(Mem819[0x4201A623<32>:byte], byte, word32) >u 2<32> l230389BA
l23038A86:
	branch Mem819[0x4200E244<32>:int32] == 0<32> l23038AB8
l23038AB8:
	word32 a5_13399
	xTaskGetTickCount(out a5_13399)
l23038A90:
	word32 a5_13400
	xTaskGetTickCountFromISR(out a5_13400)
l23038A94:
	word32 s8_13413
	word32 s11_13416
	word32 s10_13415
	word32 s9_13414
	word32 s1_13401
	word32 a0_13402
	word32 s7_13412
	word32 s6_13411
	word32 a1_13403
	word32 s5_13410
	word32 s4_13409
	word32 a2_13404
	word32 a3_13405
	word32 a4_13406
	word32 s3_13408
	word32 a5_13407
	ra_313 = bl_printk(ra_313, 0x23079DB0<32>, 0x23079AA4<32>, Mem819[sp_3 + 8<i32>:word32], Mem819[sp_3 + 40<i32>:word32], Mem819[sp_3 + 112<i32>:word32], Mem819[sp_3 + 116<i32>:word32], Mem819[sp_3 + 152<i32>:word32], Mem819[sp_3 + 188<i32>:word32], out s1_13401, out a0_13402, out a1_13403, out a2_13404, out a3_13405, out a4_13406, out a5_13407, out s2_342, out s3_13408, out s4_13409, out s5_13410, out s6_13411, out s7_13412, out s8_13413, out s9_13414, out s10_13415, out s11_13416)
l230389BA:
	s3_679 = 50<i32>
	s5_670 = 50<i32>
l230389E2:
	s5_670 = CONVERT(Mem726[sp_3 + 128<i32>:byte], byte, word32)
	branch CONVERT(Mem726[s0_340 + -108<i32>:byte], byte, word32) <=u 1<32> l23038A28
l23038A28:
	s3_679 = s5_670
	branch CONVERT(Mem726[0x4201A623<32>:byte], byte, word32) >u 1<32> l2303863A
l23038A36:
	branch Mem726[0x4200E244<32>:int32] == 0<32> l23038A68
l23038A68:
	word32 a5_13350
	xTaskGetTickCount(out a5_13350)
l23038A40:
	word32 a5_13351
	xTaskGetTickCountFromISR(out a5_13351)
l23038A44:
	word32 a0_13375
	word32 a2_13377
	word32 a4_13379
	word32 a5_13380
	word32 s4_13382
	word32 s7_13384
	word32 s8_13385
	word32 s10_13387
	word32 s11_13388
	word32 s9_13386
	word32 s6_13383
	word32 s3_13381
	word32 a3_13378
	word32 a1_13376
	word32 s1_13374
	ra_313 = bl_printk(ra_313, 0x23079D58<32>, 0x23079AA4<32>, Mem726[sp_3 + 8<i32>:word32], Mem726[sp_3 + 40<i32>:word32], Mem726[sp_3 + 112<i32>:word32], Mem726[sp_3 + 116<i32>:word32], Mem726[sp_3 + 152<i32>:word32], Mem726[sp_3 + 188<i32>:word32], out s1_13374, out a0_13375, out a1_13376, out a2_13377, out a3_13378, out a4_13379, out a5_13380, out s2_342, out s3_13381, out s4_13382, out s5_670, out s6_13383, out s7_13384, out s8_13385, out s9_13386, out s10_13387, out s11_13388)
l230389F0:
	s3_679 = s5_670
l2303863A:
	word32 a3_13328
	ra_313 = hal_sys_capcode_update(ra_313, s5_670, s3_679 & 255<i32>, s2_342, s3_679, Mem936[sp_3:word32], Mem936[sp_3 + 4<i32>:word32], Mem936[sp_3 + 40<i32>:word32], Mem936[sp_3 + 72<i32>:word32], out s1_315, out a3_13328)
l23038644:
	word32 a4_969
	word32 s0_974
	word32 a1_13095
	word32 a5_13097
	word32 s3_13099
	word32 s8_13103
	word32 s4_13100
	word32 s6_13102
	word32 s5_13101
	word32 s2_13098
	word32 a3_13096
	word32 a0_1034
	word32 s1_1019
	word32 ra_1018 = fdt_getprop(ra_313, s1_315, 0x23079DD8<32>, Mem964[sp_3 + 8<i32>:word32], Mem964[sp_3 + 40<i32>:word32], Mem964[sp_3 + 68<i32>:word32], Mem964[sp_3 + 216<i32>:word32], Mem964[sp_3 + 264<i32>:word32], out s0_974, out s1_1019, out a0_1034, out a1_13095, out a3_13096, out a4_969, out a5_13097, out s2_13098, out s3_13099, out s4_13100, out s5_13101, out s6_13102, out s8_13103)
	word32 s6_1088 = a0_1034
	branch a4_969 != 60<i32> l23038AC4
l23038AC4:
	branch CONVERT(Mem964[s0_974 + -108<i32>:byte], byte, word32) >u 4<32> l230386DA
l23038ACE:
	branch CONVERT(Mem964[0x4201A623<32>:byte], byte, word32) >u 4<32> l230386DA
l23038ADA:
	branch Mem964[0x4200E244<32>:int32] == 0<32> l23038B0C
l23038B0C:
	word32 a5_13263
	xTaskGetTickCount(out a5_13263)
l23038AE4:
	word32 a5_13264
	xTaskGetTickCountFromISR(out a5_13264)
l23038AE8:
	word32 a0_13277
	word32 a1_13278
	word32 a3_13280
	word32 a5_13282
	word32 s6_13287
	word32 s8_13289
	word32 s10_13291
	word32 s11_13292
	word32 s9_13290
	word32 s7_13288
	word32 s5_13286
	word32 s2_13283
	word32 s4_13285
	word32 s3_13284
	word32 a4_13281
	word32 a2_13279
	ra_1018 = bl_printk(ra_1018, 0x23079E18<32>, 0x23079AA4<32>, Mem964[sp_3 + 8<i32>:word32], Mem964[sp_3 + 40<i32>:word32], Mem964[sp_3 + 112<i32>:word32], Mem964[sp_3 + 116<i32>:word32], Mem964[sp_3 + 152<i32>:word32], Mem964[sp_3 + 188<i32>:word32], out s1_1019, out a0_13277, out a1_13278, out a2_13279, out a3_13280, out a4_13281, out a5_13282, out s2_13283, out s3_13284, out s4_13285, out s5_13286, out s6_13287, out s7_13288, out s8_13289, out s9_13290, out s10_13291, out s11_13292)
l23038662:
	word32 s3_1032 = 0<32>
	word32 s5_1033 = 60<i32>
l23038668:
	a0_1034 = fdt32_to_cpu(a0_1034)
	Mem1044[a0_1034:word32] = sp_3 + 128<i32> + s3_1032
	s3_1032 = s3_1032 + 4<32>
	branch s3_1032 != 60<i32> l23038668
l2303867E:
	branch CONVERT(Mem1044[s0_974 + -108<i32>:byte], byte, word32) >u 2<32> l230386C6
l2303868C:
	branch CONVERT(Mem1044[0x4201A623<32>:byte], byte, word32) >u 2<32> l230386C6
l23038698:
	branch Mem1044[0x4200E244<32>:int32] == 0<32> l23038ABE
l23038ABE:
	word32 a5_13139
	xTaskGetTickCount(out a5_13139)
l230386A4:
	word32 a5_13140
	xTaskGetTickCountFromISR(out a5_13140)
l230386A8:
	word32 s4_13176
	word32 s8_13178
	word32 s10_13180
	word32 s11_13181
	word32 s9_13179
	word32 s7_13177
	word32 s2_13174
	word32 s3_13175
	word32 a4_13172
	word32 a5_13173
	word32 a2_13170
	word32 a3_13171
	word32 s1_13167
	word32 a1_13169
	word32 a0_13168
	ra_1018 = bl_printk(ra_1018, 0x23079DEC<32>, 0x23079AA4<32>, Mem1044[sp_3 + 8<i32>:word32], Mem1044[sp_3 + 40<i32>:word32], Mem1044[sp_3 + 112<i32>:word32], Mem1044[sp_3 + 116<i32>:word32], Mem1044[sp_3 + 152<i32>:word32], Mem1044[sp_3 + 188<i32>:word32], out s1_13167, out a0_13168, out a1_13169, out a2_13170, out a3_13171, out a4_13172, out a5_13173, out s2_13174, out s3_13175, out s4_13176, out s5_1033, out s6_1088, out s7_13177, out s8_13178, out s9_13179, out s10_13180, out s11_13181)
l230386C6:
	word32 s0_13127
	word32 a4_13129
	word32 a5_13130
	word32 s2_13131
	word32 s3_13132
	word32 s9_13138
	word32 s4_13133
	word32 s5_13134
	word32 s6_13135
	word32 s8_13137
	word32 s7_13136
	word32 a3_13128
	ra_1018 = log_buf_out(ra_1018, sp_3 + 128<i32>, 60<i32>, 0<32>, s5_1033, s6_1088, Mem1044[sp_3 + 20<i32>:word32], Mem1044[sp_3 + 32<i32>:word32], Mem1044[sp_3 + 36<i32>:word32], Mem1044[sp_3 + 48<i32>:word32], Mem1044[sp_3 + 88<i32>:word32], Mem1044[sp_3 + 108<i32>:word32], Mem1044[sp_3 + 124<i32>:word32], Mem1044[sp_3 + 268<i32>:word32], out s0_13127, out s1_1019, out a3_13128, out a4_13129, out a5_13130, out s2_13131, out s3_13132, out s4_13133, out s5_13134, out s6_13135, out s7_13136, out s8_13137, out s9_13138)
l230386DA:
	word32 a0_1141
	word32 a4_1145
	word32 s0_1150
	word32 s3_13258
	word32 s5_13260
	word32 s6_13261
	word32 s8_13262
	word32 s4_13259
	word32 a5_13256
	word32 s2_13257
	word32 a3_13255
	word32 a1_13254
	word32 s1_1151
	word32 ra_1149 = fdt_getprop(ra_1018, s1_1019, 0x23079E48<32>, Mem1140[sp_3 + 8<i32>:word32], Mem1140[sp_3 + 40<i32>:word32], Mem1140[sp_3 + 68<i32>:word32], Mem1140[sp_3 + 216<i32>:word32], Mem1140[sp_3 + 264<i32>:word32], out s0_1150, out s1_1151, out a0_1141, out a1_13254, out a3_13255, out a4_1145, out a5_13256, out s2_13257, out s3_13258, out s4_13259, out s5_13260, out s6_13261, out s8_13262)
	branch a4_1145 != 56<i32> l23038B18
l23038B18:
	branch CONVERT(Mem1140[s0_1150 + -108<i32>:byte], byte, word32) >u 4<32> l23038772
l23038B22:
	branch CONVERT(Mem1140[0x4201A623<32>:byte], byte, word32) >u 4<32> l23038772
l23038B2E:
	branch Mem1140[0x4200E244<32>:int32] == 0<32> l23038B60
l23038B60:
	word32 a5_13206
	xTaskGetTickCount(out a5_13206)
l23038B38:
	word32 a5_13207
	xTaskGetTickCountFromISR(out a5_13207)
l23038B3C:
	word32 s11_13237
	word32 a0_13222
	word32 a2_13224
	word32 a3_13225
	word32 a4_13226
	word32 s10_13236
	word32 s9_13235
	word32 a5_13227
	word32 s8_13234
	word32 s7_13233
	word32 s2_13228
	word32 s3_13229
	word32 s4_13230
	word32 s6_13232
	word32 s5_13231
	word32 a1_13223
	ra_1149 = bl_printk(ra_1149, 0x23079E88<32>, 0x23079AA4<32>, Mem1140[sp_3 + 8<i32>:word32], Mem1140[sp_3 + 40<i32>:word32], Mem1140[sp_3 + 112<i32>:word32], Mem1140[sp_3 + 116<i32>:word32], Mem1140[sp_3 + 152<i32>:word32], Mem1140[sp_3 + 188<i32>:word32], out s1_1151, out a0_13222, out a1_13223, out a2_13224, out a3_13225, out a4_13226, out a5_13227, out s2_13228, out s3_13229, out s4_13230, out s5_13231, out s6_13232, out s7_13233, out s8_13234, out s9_13235, out s10_13236, out s11_13237)
l230386F6:
	word32 s5_1207 = sp_3 + 96<i32>
	word32 s3_1208 = a0_1141
	word32 s6_1210 = s5_1207
l23038702:
	s5_1207 = s5_1207 + 2<32>
	Mem1220[s5_1207 + 4094<i32>:word16] = SLICE(fdt32_to_cpu(Mem1212[s3_1208:int32]), word16, 0)
	s3_1208 = s3_1208 + 4<32>
	branch a0_1141 + 56<i32> != s3_1208 l23038702
l23038716:
	branch CONVERT(Mem1220[s0_1150 + -108<i32>:byte], byte, word32) >u 2<32> l2303875E
l23038724:
	branch CONVERT(Mem1220[0x4201A623<32>:byte], byte, word32) >u 2<32> l2303875E
l23038730:
	branch Mem1220[0x4200E244<32>:int32] == 0<32> l23038B12
l23038B12:
	word32 a5_13165
	xTaskGetTickCount(out a5_13165)
l2303873C:
	word32 a5_13166
	xTaskGetTickCountFromISR(out a5_13166)
l23038740:
	word32 s2_13189
	word32 a3_13186
	word32 s1_13182
	word32 a0_13183
	word32 s3_13190
	word32 s7_13192
	word32 s9_13194
	word32 s10_13195
	word32 s11_13196
	word32 s8_13193
	word32 s4_13191
	word32 a4_13187
	word32 a5_13188
	word32 a1_13184
	word32 a2_13185
	ra_1149 = bl_printk(ra_1149, 0x23079E5C<32>, 0x23079AA4<32>, Mem1220[sp_3 + 8<i32>:word32], Mem1220[sp_3 + 40<i32>:word32], Mem1220[sp_3 + 112<i32>:word32], Mem1220[sp_3 + 116<i32>:word32], Mem1220[sp_3 + 152<i32>:word32], Mem1220[sp_3 + 188<i32>:word32], out s1_13182, out a0_13183, out a1_13184, out a2_13185, out a3_13186, out a4_13187, out a5_13188, out s2_13189, out s3_13190, out s4_13191, out s5_1207, out s6_1210, out s7_13192, out s8_13193, out s9_13194, out s10_13195, out s11_13196)
l2303875E:
	word32 a3_13154
	word32 a4_13155
	word32 a5_13156
	word32 s8_13163
	word32 s9_13164
	word32 s6_13161
	word32 s7_13162
	word32 s5_13160
	word32 s2_13157
	word32 s4_13159
	word32 s3_13158
	word32 s0_13153
	ra_1149 = log_buf_out(ra_1149, s6_1210, 56<i32>, 0<32>, s5_1207, s6_1210, Mem1220[sp_3 + 20<i32>:word32], Mem1220[sp_3 + 32<i32>:word32], Mem1220[sp_3 + 36<i32>:word32], Mem1220[sp_3 + 48<i32>:word32], Mem1220[sp_3 + 88<i32>:word32], Mem1220[sp_3 + 108<i32>:word32], Mem1220[sp_3 + 124<i32>:word32], Mem1220[sp_3 + 268<i32>:word32], out s0_13153, out s1_1151, out a3_13154, out a4_13155, out a5_13156, out s2_13157, out s3_13158, out s4_13159, out s5_13160, out s6_13161, out s7_13162, out s8_13163, out s9_13164)
l23038772:
	word32 a0_1317
	word32 a4_1321
	word32 s0_1326
	word32 a1_13199
	word32 a5_13201
	word32 s4_13203
	word32 s5_13204
	word32 s8_13205
	word32 s3_13202
	word32 a3_13200
	ra_1325 = fdt_getprop(ra_1149, s1_1151, 0x23079EB8<32>, Mem1316[sp_3 + 8<i32>:word32], Mem1316[sp_3 + 40<i32>:word32], Mem1316[sp_3 + 68<i32>:word32], Mem1316[sp_3 + 216<i32>:word32], Mem1316[sp_3 + 264<i32>:word32], out s0_1326, out s1_1327, out a0_1317, out a1_13199, out a3_13200, out a4_1321, out a5_13201, out s2_1328, out s3_13202, out s4_13203, out s5_13204, out s6_1332, out s8_13205)
	branch a4_1321 != 4<32> l23038B6C
l23038B6C:
	branch CONVERT(Mem1316[s0_1326 + -108<i32>:byte], byte, word32) >u 4<32> l230387E6
l23038B74:
	branch CONVERT(Mem1316[0x4201A623<32>:byte], byte, word32) >u 4<32> l230387E6
l23038B80:
	branch Mem1316[0x4200E244<32>:int32] == 0<32> l23038BB2
l23038BB2:
	word32 a5_13238
	xTaskGetTickCount(out a5_13238)
l23038B8A:
	word32 a5_13239
	xTaskGetTickCountFromISR(out a5_13239)
l23038B8E:
	word32 a0_13240
	word32 a2_13242
	word32 a4_13244
	word32 a5_13245
	word32 s4_13247
	word32 s7_13249
	word32 s8_13250
	word32 s9_13251
	word32 s10_13252
	word32 s11_13253
	word32 s5_13248
	word32 s3_13246
	word32 a3_13243
	word32 a1_13241
	ra_1325 = bl_printk(ra_1325, 0x23079EEC<32>, 0x23079AA4<32>, Mem1316[sp_3 + 8<i32>:word32], Mem1316[sp_3 + 40<i32>:word32], Mem1316[sp_3 + 112<i32>:word32], Mem1316[sp_3 + 116<i32>:word32], Mem1316[sp_3 + 152<i32>:word32], Mem1316[sp_3 + 188<i32>:word32], out s1_1327, out a0_13240, out a1_13241, out a2_13242, out a3_13243, out a4_13244, out a5_13245, out s2_1328, out s3_13246, out s4_13247, out s5_13248, out s6_1332, out s7_13249, out s8_13250, out s9_13251, out s10_13252, out s11_13253)
l2303878C:
	branch CONVERT(Mem1316[s0_1326 + -108<i32>:byte], byte, word32) >u 2<32> l230387E6
l23038796:
	branch CONVERT(Mem1316[0x4201A623<32>:byte], byte, word32) >u 2<32> l230387E6
l230387A2:
	word32 a0_1389
	word32 s2_1388 = Mem1316[a0_1317:int32]
	branch Mem1316[0x4200E244<32>:int32] == 0<32> l23038B66
l23038B66:
	word32 a5_13197
	a0_1389 = xTaskGetTickCount(out a5_13197)
l230387B2:
	word32 a5_13198
	a0_1389 = xTaskGetTickCountFromISR(out a5_13198)
l230387B6:
	Mem1395[sp_3 + 144<i32>:word32] = a0_1389
	fdt32_to_cpu(s2_1388)
	word32 a0_13208
	word32 a1_13209
	word32 a5_13213
	word32 s3_13214
	word32 s7_13217
	word32 s8_13218
	word32 s11_13221
	word32 s10_13220
	word32 s9_13219
	word32 s5_13216
	word32 s4_13215
	word32 a3_13211
	word32 a4_13212
	word32 a2_13210
	ra_1325 = bl_printk(ra_1325, 0x23079EC4<32>, 0x23079AA4<32>, Mem1395[sp_3 + 8<i32>:word32], Mem1395[sp_3 + 40<i32>:word32], Mem1395[sp_3 + 112<i32>:word32], Mem1395[sp_3 + 116<i32>:word32], Mem1395[sp_3 + 152<i32>:word32], Mem1395[sp_3 + 188<i32>:word32], out s1_1327, out a0_13208, out a1_13209, out a2_13210, out a3_13211, out a4_13212, out a5_13213, out s2_1328, out s3_13214, out s4_13215, out s5_13216, out s6_1332, out s7_13217, out s8_13218, out s9_13219, out s10_13220, out s11_13221)
l230387E6:
	word32 a0_1445
	word32 s0_13083
	word32 a3_13084
	word32 a5_13085
	word32 s4_13087
	word32 s5_13088
	word32 s3_13086
	word32 s1_1455
	word32 s2_1456
	word32 s6_1460
	word32 ra_1453 = fdt_subnode_offset(ra_1325, s1_1327, s1_1327, 0x23079F14<32>, s2_1328, s6_1332, dwLocF8, dwLocC8, s9, out s0_13083, out s1_1455, out a0_1445, out a3_13084, out a5_13085, out s2_1456, out s3_13086, out s4_13087, out s5_13088, out s6_1460)
	branch a0_1445 <= 0<32> l23038C72
l230387FC:
	word32 a0_1471
	word32 s3_13423
	word32 s5_13425
	word32 s8_13426
	word32 s4_13424
	word32 s0_13422
	ra_1453 = fdt_stringlist_count(ra_1453, s1_1455, 0x2307059C<32>, 0x23070000<32>, dwLocF8, dwLocDC, dwLoc48, s9, out s0_13422, out s1_1455, out a0_1471, out s2_1456, out s3_13423, out s4_13424, out s5_13425, out s6_1460, out s8_13426)
	branch a0_1471 != 1<32> l23038C72
l23038814:
	word32 a2_1525
	word32 s7_13447
	word32 s9_13449
	word32 s11_13451
	word32 s10_13450
	word32 s8_13448
	word32 s4_13445
	word32 s5_13446
	word32 s1_13427
	word32 s2_13434
	word32 s4_13436
	word32 a5_13443
	word32 s3_13444
	word32 s5_13437
	word32 a3_13441
	word32 a4_13442
	word32 s6_13438
	word32 a1_13440
	word32 a0_13439
	word32 s3_13435
	word32 a4_13432
	word32 a5_13433
	word32 a3_13431
	word32 a0_13428
	word32 a2_13430
	word32 a1_13429
	word32 s0_1506
	ra_1453 = bl_printk(fdt_stringlist_get(ra_1453, s1_1455, s2_1456 + 1436<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_1506, out s1_13427, out a0_13428, out a1_13429, out a2_13430, out a3_13431, out a4_13432, out a5_13433, out s2_13434, out s3_13435, out s4_13436, out s5_13437, out s6_13438), 0x23079F18<32>, dwLoc9C, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13439, out a1_13440, out a2_1525, out a3_13441, out a4_13442, out a5_13443, out s2_1456, out s3_13444, out s4_13445, out s5_13446, out s6_1460, out s7_13447, out s8_13448, out s9_13449, out s10_13450, out s11_13451)
	branch a2_1525 > 3<32> l23038C72
l2303883C:
	word32 a3_1552
	word32 a4_13453
	word32 a5_13454
	word32 a6_13455
	word32 a7_13456
	word32 a2_13452
	memcpy(fp - 176<i32>, s2_1456, a2_1525, out a2_13452, out a3_1552, out a4_13453, out a5_13454, out a6_13455, out a7_13456)
	word32 a0_13457
	word32 a1_13458
	word32 a3_13460
	word32 a5_13462
	word32 s8_13467
	word32 s10_13469
	word32 s11_13470
	word32 s9_13468
	word32 s7_13466
	word32 s2_13463
	word32 s6_13465
	word32 s5_13464
	word32 a4_13461
	word32 a2_13459
	word32 s4_1578
	word32 s3_1577
	ra_1453 = bl_printk(ra_1453, 0x23079F38<32>, a3_1552, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13457, out a1_13458, out a2_13459, out a3_13460, out a4_13461, out a5_13462, out s2_13463, out s3_1577, out s4_1578, out s5_13464, out s6_13465, out s7_13466, out s8_13467, out s9_13468, out s10_13469, out s11_13470)
	word32 a1_13471
	word32 a2_13472
	word32 a5_13474
	word32 a4_13473
	word32 a3_1588
	word32 s10_1593 = strlen(fp - 176<i32>, out a1_13471, out a2_13472, out a3_1588, out a4_13473, out a5_13474)
	s2_1456 = 0<32>
	word32 s5_1595 = 0x4201A000<32>
	s6_1460 = 0x4200E000<32>
	word32 s7_1597 = 0x2307A000<32>
	word32 s11_1600 = 0x2307A000<32>
	word32 dwLocB0_12051 = CONVERT(nLocB0, word24, uint32)
l23038878:
	bLocAA = SLICE(dwLocAC, int8, 16) (alias)
	branch s2_1456 >= s10_1593 l2303891A
l2303887C:
	word32 a0_1843
	word32 a3_1839
	word32 a0_1767
	word32 a5_1607 = CONVERT(Mem1606[fp - 176<i32> + s2_1456:byte], byte, word32)
	branch a5_1607 == 70<i32> l2303908C
l2303908C:
	word32 a0_1660
	word32 a3_1654
	word32 a0_1617
	word32 a5_1622
	word32 a4_13476
	word32 s8_13477
	word32 a1_13475
	fdt_getprop(ra_1453, s1_1455, 0x23079FAC<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_1506, out s1_1455, out a0_1617, out a1_13475, out a3_1588, out a4_13476, out a5_1622, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s8_13477)
	ra_1453 = dwArgF4
	branch a5_1622 != 6<32> l2303910A
l2303910A:
	branch CONVERT(Mem1640[s0_1506 + -108<i32>:byte], byte, word32) >u 4<32> l23038912
l23039114:
	branch CONVERT(Mem1640[s5_1595 + 1571<i32>:byte], byte, word32) >u 4<32> l2303913C
l2303911C:
	branch Mem1640[s6_1460 + 580<i32>:int32] == 0<32> l23039172
l23039172:
	word32 a5_13591
	xTaskGetTickCount(out a5_13591)
l23039122:
	word32 a5_13592
	xTaskGetTickCountFromISR(out a5_13592)
l23039126:
	a3_1654 = s7_1597 + -1372<i32>
	a0_1660 = s11_1600 + -56<i32>
l230390AA:
	word32 a3_13556
	word32 a5_13558
	word32 a6_13559
	word32 a7_13560
	word32 a4_13557
	word32 a2_13555
	memcpy(fp - 128<i32>, a0_1617, 6<32>, out a2_13555, out a3_13556, out a4_13557, out a5_13558, out a6_13559, out a7_13560)
	bl_wifi_sta_mac_addr_set(fp - 128<i32>)
	word32 a0_1696
	word32 a4_1700
	word32 a5_1701
	word32 a1_13561
	word32 s8_13562
	fdt_getprop(dwArgF4, s1_1455, 0x23079FBC<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_1506, out s1_1455, out a0_1696, out a1_13561, out a3_1588, out a4_1700, out a5_1701, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s8_13562)
	ra_1453 = dwArgD4
	branch a4_1700 == a5_1701 l23039178
l23039178:
	word32 a2_13563
	word32 a3_13564
	word32 a7_13568
	word32 a5_13566
	word32 a6_13567
	word32 a4_13565
	memcpy(fp - 128<i32>, a0_1696, 6<32>, out a2_13563, out a3_13564, out a4_13565, out a5_13566, out a6_13567, out a7_13568)
	bl_wifi_ap_mac_addr_set(fp - 128<i32>)
	branch CONVERT(Mem1640[s0_1506 + -108<i32>:byte], byte, word32) >u 1<32> l23038BFE
l23039190:
	branch CONVERT(Mem1640[0x4201A623<32>:byte], byte, word32) >u 1<32> l23038C08
l2303919C:
	branch Mem1640[0x4200E244<32>:int32] == 0<32> l230391D0
l230391D0:
	word32 a5_13589
	xTaskGetTickCount(out a5_13589)
l230391A6:
	word32 a5_13590
	xTaskGetTickCountFromISR(out a5_13590)
l230391AA:
	a0_1767 = 0x2307A018<32>
l230390D4:
	branch CONVERT(Mem1640[s0_1506 + -108<i32>:byte], byte, word32) >u 4<32> l23038912
l230390DE:
	branch CONVERT(Mem1640[s5_1595 + 1571<i32>:byte], byte, word32) >u 4<32> l2303913C
l230390E6:
	branch Mem1640[s6_1460 + 580<i32>:int32] == 0<32> l230391CA
l230391CA:
	word32 a5_13569
	xTaskGetTickCount(out a5_13569)
l230390EE:
	word32 a5_13570
	xTaskGetTickCountFromISR(out a5_13570)
l230390F2:
	a3_1654 = s7_1597 + -1372<i32>
	a0_1660 = 0x23079FF0<32>
l23039138:
	word32 a1_13572
	word32 s9_13577
	word32 a2_13573
	word32 s8_13576
	word32 a5_13575
	word32 a4_13574
	word32 a0_13571
	ra_1453 = bl_printk(ra_1453, a0_1660, a3_1654, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13571, out a1_13572, out a2_13573, out a3_1588, out a4_13574, out a5_13575, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s7_1597, out s8_13576, out s9_13577, out s10_1593, out s11_1600)
l2303913C:
	branch CONVERT(Mem1640[s0_1506 + -108<i32>:byte], byte, word32) >u 1<32> l23038912
l23039146:
	branch CONVERT(Mem1640[s5_1595 + 1571<i32>:byte], byte, word32) >u 1<32> l23038912
l2303914E:
	branch Mem1640[s6_1460 + 580<i32>:int32] == 0<32> l230391D6
l230391D6:
	word32 a5_13587
	xTaskGetTickCount(out a5_13587)
l23039154:
	word32 a5_13588
	xTaskGetTickCountFromISR(out a5_13588)
l23039158:
	a3_1839 = s7_1597 + -1372<i32>
	a0_1843 = 0x2307A044<32>
l2303888C:
	branch a5_1607 == 77<i32> l230391DC
l230391DC:
	word32 a0_1850
	ra_1453 = bl_efuse_read_mac_factory(ra_1453, s0_1506, s1_1455, fp - 128<i32>, a3_1588, 77<i32>, s2_1456, s3_1577, s4_1578, mstatus, dwLocF8, dwLocD8, dwLocC0, dwLocBC, dwLocB0_12051, dwLocAC, s10, s2, dwLoc74, dwLoc64, out s0_1506, out s1_1455, out a0_1850, out a3_1588, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s7_1597, out s10_1593, out s11_1600, out mstatus)
	branch a0_1850 != 0<32> l23039264
l230391E4:
	word32 a0_1879 = CONVERT(bLoc80, byte, word32)
	word32 a6_1880 = CONVERT(bLoc7F, byte, word32)
	word32 a1_1881 = CONVERT(bLoc7E, byte, word32)
	word32 a2_1882 = CONVERT(bLoc7D, byte, word32)
	word32 a3_1883 = CONVERT(bLoc7C_12274, byte, word32)
	word32 a4_1886 = CONVERT(bLoc7B_12275, byte, word32)
	a3_1588 = a3_1883 | (a2_1882 | (a1_1881 | (a0_1879 | a6_1880)))
	word32 a5_1893 = a0_1879 & a6_1880 & a1_1881 & a2_1882 & a3_1883 & a4_1886
	branch (a4_1886 | a3_1588) == 0<32> l23039264
l23039216:
	branch a5_1893 == 1<32> l23039264
l23039264:
	branch CONVERT(Mem1606[s0_1506 + -108<i32>:byte], byte, word32) >u 1<32> l23038912
l2303926E:
	branch CONVERT(Mem1606[s5_1595 + 1571<i32>:byte], byte, word32) >u 1<32> l23038912
l23039276:
	branch Mem1606[s6_1460 + 580<i32>:int32] == 0<32> l2303929A
l2303929A:
	word32 a5_13578
	xTaskGetTickCount(out a5_13578)
l2303927C:
	word32 a5_13579
	xTaskGetTickCountFromISR(out a5_13579)
l23039280:
	a3_1839 = s7_1597 + -1372<i32>
	a0_1843 = 0x2307A09C<32>
l2303921C:
	branch CONVERT(Mem1606[s0_1506 + -108<i32>:byte], byte, word32) >u 1<32> l23038BFE
l23039224:
	branch CONVERT(Mem1606[0x4201A623<32>:byte], byte, word32) >u 1<32> l23038C08
l23039230:
	branch Mem1606[0x4200E244<32>:int32] == 0<32> l2303925E
l2303925E:
	word32 a5_13539
	xTaskGetTickCount(out a5_13539)
l2303923A:
	word32 a5_13540
	xTaskGetTickCountFromISR(out a5_13540)
l2303923E:
	a0_1767 = 0x2307A070<32>
l23038894:
	branch a5_1607 != 66<i32> l230392A0
l230392A0:
	branch Mem1606[0x4200E244<32>:int32] == 0<32> l230392DA
l230392DA:
	word32 a5_13506
	xTaskGetTickCount(out a5_13506)
l230392AA:
	word32 a5_13507
	xTaskGetTickCountFromISR(out a5_13507)
l230392AE:
	word32 s11_13538
	word32 s9_13536
	word32 s10_13537
	word32 a2_13525
	word32 a4_13527
	word32 s7_13534
	word32 s8_13535
	word32 a5_13528
	word32 s5_13532
	word32 s6_13533
	word32 s2_13529
	word32 s4_13531
	word32 s3_13530
	word32 a3_13526
	word32 a0_13523
	word32 a1_13524
	word32 s1_13522
	bl_printk(ra_1453, 0x2307262C<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13522, out a0_13523, out a1_13524, out a2_13525, out a3_13526, out a4_13527, out a5_13528, out s2_13529, out s3_13530, out s4_13531, out s5_13532, out s6_13533, out s7_13534, out s8_13535, out s9_13536, out s10_13537, out s11_13538)
l230392D8:
l2303889C:
	word32 a0_1995 = CONVERT(bLoc80, byte, word32)
	word32 a6_1996 = CONVERT(bLoc7F, byte, word32)
	word32 a1_1997 = CONVERT(bLoc7E, byte, word32)
	word32 a2_1998 = CONVERT(bLoc7D, byte, word32)
	word32 a3_1999 = CONVERT(bLoc7C_12274, byte, word32)
	word32 a4_2002 = CONVERT(bLoc7B_12275, byte, word32)
	a3_1588 = a3_1999 | (a2_1998 | (a1_1997 | (a0_1995 | a6_1996)))
	ra_1453 = bl_efuse_read_mac(ra_1453, s0_1506, s1_1455, fp - 128<i32>, s2_1456, s3_1577, s4_1578, out s0_1506, out s1_1455, out s2_1456, out s3_1577, out s4_1578)
	word32 a5_2009 = a0_1995 & a6_1996 & a1_1997 & a2_1998 & a3_1999 & a4_2002
	branch (a4_2002 | a3_1588) == 0<32> l230388DA
l230388D4:
	branch a5_2009 != 1<32> l23038BB8
l23038BB8:
	branch CONVERT(Mem1606[s0_1506 + -108<i32>:byte], byte, word32) >u 1<32> l23038BFE
l23038BC0:
	branch CONVERT(Mem1606[0x4201A623<32>:byte], byte, word32) >u 1<32> l23038C08
l23038BCC:
	branch Mem1606[0x4200E244<32>:int32] == 0<32> l2303907E
l2303907E:
	word32 a5_13486
	xTaskGetTickCount(out a5_13486)
l23038BD8:
	word32 a5_13487
	xTaskGetTickCountFromISR(out a5_13487)
l23038BDC:
	a0_1767 = 0x23079F54<32>
l23038BFA:
	word32 a3_13544
	word32 a4_13545
	word32 s3_13547
	word32 s5_13549
	word32 s11_13554
	word32 s10_13553
	word32 s7_13550
	word32 s9_13552
	word32 s8_13551
	word32 s4_13548
	word32 a5_13546
	word32 a1_13542
	word32 a2_13543
	word32 a0_13541
	ra_1453 = bl_printk(ra_1453, a0_1767, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13541, out a1_13542, out a2_13543, out a3_13544, out a4_13545, out a5_13546, out s2_1456, out s3_13547, out s4_13548, out s5_13549, out s6_1460, out s7_13550, out s8_13551, out s9_13552, out s10_13553, out s11_13554)
l230388DA:
	branch CONVERT(Mem1606[s0_1506 + -108<i32>:byte], byte, word32) >u 1<32> l23038912
l230388E4:
	branch CONVERT(Mem1606[s5_1595 + 1571<i32>:byte], byte, word32) >u 1<32> l23038912
l230388EC:
	branch Mem1606[s6_1460 + 580<i32>:int32] == 0<32> l23039084
l23039084:
	word32 a5_13478
	xTaskGetTickCount(out a5_13478)
l230388F4:
	word32 a5_13479
	xTaskGetTickCountFromISR(out a5_13479)
l230388F8:
	a3_1839 = s7_1597 + -1372<i32>
	a0_1843 = 0x23079F80<32>
l2303890E:
	word32 a0_13580
	word32 a1_13581
	word32 a2_13582
	word32 a4_13583
	word32 a5_13584
	word32 s8_13585
	word32 s9_13586
	ra_1453 = bl_printk(ra_1453, a0_1843, a3_1839, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13580, out a1_13581, out a2_13582, out a3_1588, out a4_13583, out a5_13584, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s7_1597, out s8_13585, out s9_13586, out s10_1593, out s11_1600)
l23038912:
	s2_1456 = s2_1456 + 1<32>
	branch s2_1456 != 3<32> l23038878
l2303891A:
	branch CONVERT(Mem2145[s0_1506 + -108<i32>:byte], byte, word32) <=u 2<32> l230392E0
l230392E0:
	branch CONVERT(Mem2145[0x4201A623<32>:byte], byte, word32) >u 2<32> l23038924
l230392EC:
	branch Mem2145[0x4200E244<32>:int32] == 0<32> l23039320
l23039320:
	word32 a5_13504
	xTaskGetTickCount(out a5_13504)
l230392F6:
	word32 a5_13505
	xTaskGetTickCountFromISR(out a5_13505)
l230392FA:
	word32 a1_13509
	word32 a3_13511
	word32 a4_13512
	word32 s3_13514
	word32 s5_13516
	word32 s7_13517
	word32 s8_13518
	word32 s9_13519
	word32 s11_13521
	word32 s10_13520
	word32 s4_13515
	word32 a5_13513
	word32 a2_13510
	word32 a0_13508
	ra_1453 = bl_printk(ra_1453, 0x2307A0C8<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13508, out a1_13509, out a2_13510, out a3_13511, out a4_13512, out a5_13513, out s2_1456, out s3_13514, out s4_13515, out s5_13516, out s6_1460, out s7_13517, out s8_13518, out s9_13519, out s10_13520, out s11_13521)
l23038924:
	word32 a3_13481
	word32 a4_13482
	word32 a7_13485
	word32 a6_13484
	word32 a5_13483
	word32 a2_13480
	memcpy(fp - 128<i32>, 0x230827A0<32>, 6<32>, out a2_13480, out a3_13481, out a4_13482, out a5_13483, out a6_13484, out a7_13485)
l23038BFE:
	wLoc7C_8114 = SLICE(dwLoc7C, word16, 0) (alias)
	branch CONVERT(Mem2220[s0_1506 + -108<i32>:byte], byte, word32) >u 2<32> l23038C66
l23038C08:
	branch CONVERT(Mem2225[0x4201A623<32>:byte], byte, word32) >u 2<32> l23038C66
l23038C16:
	branch Mem2225[0x4200E244<32>:int32] == 0<32> l23039326
l23039326:
	word32 a5_13488
	xTaskGetTickCount(out a5_13488)
l23038C22:
	word32 a5_13489
	xTaskGetTickCountFromISR(out a5_13489)
l23038C26:
	word32 a0_13490
	word32 a2_13492
	word32 a3_13493
	word32 a4_13494
	word32 s11_13503
	word32 a5_13495
	word32 s10_13502
	word32 s9_13501
	word32 s3_13496
	word32 s4_13497
	word32 s5_13498
	word32 s8_13500
	word32 s7_13499
	word32 a1_13491
	ra_1453 = bl_printk(ra_1453, 0x2307A0F8<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13490, out a1_13491, out a2_13492, out a3_13493, out a4_13494, out a5_13495, out s2_1456, out s3_13496, out s4_13497, out s5_13498, out s6_1460, out s7_13499, out s8_13500, out s9_13501, out s10_13502, out s11_13503)
l23038C66:
	bl_wifi_ap_mac_addr_set(fp - 128<i32>)
	bl_wifi_sta_mac_addr_set(fp - 128<i32>)
l23038C72:
	word32 a0_2355
	word32 a3_13418
	word32 s4_13420
	word32 s5_13421
	word32 s3_13419
	word32 s0_13417
	word32 s1_2365
	word32 a5_2360
	word32 s2_2366
	word32 s6_2370
	word32 ra_2363 = fdt_subnode_offset(ra_1453, s1_1455, s1_1455, 0x2307A13C<32>, s2_1456, s6_1460, dwLocF8, dwLocC8, s9, out s0_13417, out s1_2365, out a0_2355, out a3_13418, out a5_2360, out s2_2366, out s3_13419, out s4_13420, out s5_13421, out s6_2370)
	branch a0_2355 <= 0<32> l23038D08
l23038C88:
	word32 a0_2380
	word32 a4_2384
	word32 s0_2389
	word32 a1_13599
	word32 a3_13600
	word32 s2_13602
	word32 s4_13604
	word32 s5_13605
	word32 s8_13606
	word32 s3_13603
	word32 a5_13601
	ra_2363 = fdt_getprop(ra_2363, s1_2365, 0x2307A144<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2389, out s1_2365, out a0_2380, out a1_13599, out a3_13600, out a4_2384, out a5_13601, out s2_13602, out s3_13603, out s4_13604, out s5_13605, out s6_2370, out s8_13606)
	a5_2360 = 4<32>
	s2_2366 = a0_2380
	branch a4_2384 != 4<32> l23039334
l23039334:
	branch CONVERT(Mem2353[s0_2389 + -108<i32>:byte], byte, word32) >u 4<32> l23038D08
l2303933C:
	branch CONVERT(Mem2353[0x4201A623<32>:byte], byte, word32) >u 4<32> l23038D08
l23039348:
	branch Mem2353[0x4200E244<32>:int32] == 0<32> l2303937A
l2303937A:
	word32 a5_14152
	xTaskGetTickCount(out a5_14152)
l23039352:
	word32 a5_14153
	xTaskGetTickCountFromISR(out a5_14153)
l23039356:
	word32 a2_14174
	word32 a4_14176
	word32 s3_14177
	word32 s4_14178
	word32 s7_14180
	word32 s10_14183
	word32 s11_14184
	word32 s8_14181
	word32 s9_14182
	word32 s5_14179
	word32 a3_14175
	word32 a1_14173
	word32 a0_14172
	ra_2363 = bl_printk(ra_2363, 0x2307A17C<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2365, out a0_14172, out a1_14173, out a2_14174, out a3_14175, out a4_14176, out a5_2360, out s2_2366, out s3_14177, out s4_14178, out s5_14179, out s6_2370, out s7_14180, out s8_14181, out s9_14182, out s10_14183, out s11_14184)
l23038CA2:
	branch CONVERT(Mem2353[s0_2389 + -108<i32>:byte], byte, word32) >u 2<32> l23038CF8
l23038CAC:
	branch CONVERT(Mem2353[0x4201A623<32>:byte], byte, word32) >u 2<32> l23038CF8
l23038CB8:
	branch Mem2353[0x4200E244<32>:int32] == 0<32> l2303932E
l2303932E:
	word32 a5_13607
	xTaskGetTickCount(out a5_13607)
l23038CC4:
	word32 a5_13608
	xTaskGetTickCountFromISR(out a5_13608)
l23038CC8:
	fdt32_to_cpu(Mem2458[a0_2380:int32])
	word32 a5_13632
	word32 s3_13633
	word32 s7_13636
	word32 s5_13635
	word32 s4_13634
	word32 s8_13637
	word32 s9_13638
	word32 s11_13640
	word32 s10_13639
	word32 a1_13628
	word32 a3_13630
	word32 a4_13631
	word32 a2_13629
	word32 a0_13627
	ra_2363 = bl_printk(ra_2363, 0x2307A154<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2365, out a0_13627, out a1_13628, out a2_13629, out a3_13630, out a4_13631, out a5_13632, out s2_2366, out s3_13633, out s4_13634, out s5_13635, out s6_2370, out s7_13636, out s8_13637, out s9_13638, out s10_13639, out s11_13640)
l23038CF8:
	a5_2360 = bl_wifi_country_code_set(fdt32_to_cpu(Mem2497[s2_2366:int32]) & 255<i32>)
l23038D08:
	word32 a0_2522
	word32 a5_13595
	word32 s4_13597
	word32 s5_13598
	word32 s3_13596
	word32 a3_13594
	word32 s0_13593
	word32 s2_2533
	word32 s6_2537
	word32 s1_2532
	word32 ra_2530 = fdt_subnode_offset(ra_2363, s1_2365, s1_2365, a5_2360 + -972<i32>, s2_2366, s6_2370, dwLocF8, dwLocC8, s9, out s0_13593, out s1_2532, out a0_2522, out a3_13594, out a5_13595, out s2_2533, out s3_13596, out s4_13597, out s5_13598, out s6_2537)
	branch a0_2522 <= 0<32> l2303990C
l23038D1C:
	word32 a4_2552
	word32 s0_2557
	word32 s8_13624
	word32 s5_13622
	word32 s6_13623
	word32 a1_13616
	word32 s3_13620
	word32 s4_13621
	word32 a3_13617
	word32 s2_13619
	word32 a5_13618
	word32 a0_2548
	word32 s1_2558
	word32 ra_2556 = fdt_getprop(ra_2530, s1_2532, 0x2307A1A4<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2557, out s1_2558, out a0_2548, out a1_13616, out a3_13617, out a4_2552, out a5_13618, out s2_13619, out s3_13620, out s4_13621, out s5_13622, out s6_13623, out s8_13624)
	branch a4_2552 != 0x10<32> l23039386
l23039386:
	branch CONVERT(Mem2507[s0_2557 + -108<i32>:byte], byte, word32) >u 4<32> l23038DB6
l23039390:
	branch CONVERT(Mem2507[0x4201A623<32>:byte], byte, word32) >u 4<32> l23038DB6
l2303939C:
	branch Mem2507[0x4200E244<32>:int32] == 0<32> l230393D0
l230393D0:
	word32 a5_13989
	xTaskGetTickCount(out a5_13989)
l230393A6:
	word32 a5_13990
	xTaskGetTickCountFromISR(out a5_13990)
l230393AA:
	word32 a1_13992
	word32 a4_13995
	word32 s2_13997
	word32 s4_13999
	word32 s5_14000
	word32 s7_14002
	word32 s9_14004
	word32 s10_14005
	word32 s11_14006
	word32 s8_14003
	word32 s6_14001
	word32 s3_13998
	word32 a5_13996
	word32 a3_13994
	word32 a2_13993
	word32 a0_13991
	ra_2556 = bl_printk(ra_2556, 0x2307A1E4<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2558, out a0_13991, out a1_13992, out a2_13993, out a3_13994, out a4_13995, out a5_13996, out s2_13997, out s3_13998, out s4_13999, out s5_14000, out s6_14001, out s7_14002, out s8_14003, out s9_14004, out s10_14005, out s11_14006)
l23038D38:
	word32 s2_2616 = 0<32>
l23038D3C:
	a0_2548 = fdt32_to_cpu(a0_2548)
	Mem2629[fp - 128<i32> + s2_2616:byte] = SLICE(a0_2548, byte, 0)
	s2_2616 = s2_2616 + 1<32>
	branch s2_2616 != 4<32> l23038D3C
l23038D56:
	branch CONVERT(Mem2629[s0_2557 + -108<i32>:byte], byte, word32) >u 2<32> l23038DB0
l23038D60:
	branch CONVERT(Mem2629[0x4201A623<32>:byte], byte, word32) >u 2<32> l23038DB0
l23038D6C:
	branch Mem2629[0x4200E244<32>:int32] == 0<32> l23039380
l23039380:
	word32 a5_13625
	xTaskGetTickCount(out a5_13625)
l23038D78:
	word32 a5_13626
	xTaskGetTickCountFromISR(out a5_13626)
l23038D7C:
	word32 s2_13647
	word32 s4_13649
	word32 s6_13651
	word32 s11_13656
	word32 s10_13655
	word32 s7_13652
	word32 s9_13654
	word32 s8_13653
	word32 s5_13650
	word32 s3_13648
	word32 a4_13645
	word32 a5_13646
	word32 a3_13644
	word32 a1_13642
	word32 a2_13643
	word32 a0_13641
	ra_2556 = bl_printk(ra_2556, 0x2307A1B4<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2558, out a0_13641, out a1_13642, out a2_13643, out a3_13644, out a4_13645, out a5_13646, out s2_13647, out s3_13648, out s4_13649, out s5_13650, out s6_13651, out s7_13652, out s8_13653, out s9_13654, out s10_13655, out s11_13656)
l23038DB0:
	bl_tpc_update_power_rate_11b(fp - 128<i32>)
l23038DB6:
	word32 dwLoc7C_12983
	word32 a4_2710
	word32 s0_2715
	word32 a1_13980
	word32 a3_13981
	word32 a5_13982
	word32 s8_13988
	word32 s2_13983
	word32 s3_13984
	word32 s4_13985
	word32 s6_13987
	word32 s5_13986
	word32 a0_2706
	word32 s1_2716
	word32 ra_2714 = fdt_getprop(ra_2556, s1_2558, 0x2307A21C<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2715, out s1_2716, out a0_2706, out a1_13980, out a3_13981, out a4_2710, out a5_13982, out s2_13983, out s3_13984, out s4_13985, out s5_13986, out s6_13987, out s8_13988)
	branch a4_2710 != 32<i32> l230393DC
l230393DC:
	dwLoc7C_12983 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8114) (alias)
	branch CONVERT(Mem2704[s0_2715 + -108<i32>:byte], byte, word32) >u 4<32> l23038E6A
l230393E6:
	dwLoc7C_12983 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8114) (alias)
	branch CONVERT(Mem2704[0x4201A623<32>:byte], byte, word32) >u 4<32> l23038E6A
l230393F2:
	branch Mem2704[0x4200E244<32>:int32] == 0<32> l23039426
l23039426:
	word32 a5_13790
	xTaskGetTickCount(out a5_13790)
l230393FC:
	word32 a5_13791
	xTaskGetTickCountFromISR(out a5_13791)
l23039400:
	word32 a1_13930
	word32 s11_13944
	word32 s10_13943
	word32 s9_13942
	word32 a2_13931
	word32 s8_13941
	word32 s7_13940
	word32 a3_13932
	word32 s6_13939
	word32 s5_13938
	word32 a4_13933
	word32 a5_13934
	word32 s2_13935
	word32 s4_13937
	word32 s3_13936
	word32 a0_13929
	ra_2714 = bl_printk(ra_2714, 0x2307A268<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2716, out a0_13929, out a1_13930, out a2_13931, out a3_13932, out a4_13933, out a5_13934, out s2_13935, out s3_13936, out s4_13937, out s5_13938, out s6_13939, out s7_13940, out s8_13941, out s9_13942, out s10_13943, out s11_13944)
	dwLoc7C_12983 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8114) (alias)
l23038DD4:
	word32 s2_2774 = 0<32>
l23038DD8:
	a0_2706 = fdt32_to_cpu(a0_2706)
	Mem2787[fp - 128<i32> + s2_2774:byte] = SLICE(a0_2706, byte, 0)
	s2_2774 = s2_2774 + 1<32>
	branch s2_2774 != 8<32> l23038DD8
l23038DF2:
	word32 dwLoc7C_12988 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8114)
	branch CONVERT(Mem2787[s0_2715 + -108<i32>:byte], byte, word32) >u 2<32> l23038E64
l23038DFC:
	dwLoc7C_12988 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8114) (alias)
	branch CONVERT(Mem2787[0x4201A623<32>:byte], byte, word32) >u 2<32> l23038E64
l23038E08:
	branch Mem2787[0x4200E244<32>:int32] == 0<32> l230393D6
l230393D6:
	word32 a5_13657
	xTaskGetTickCount(out a5_13657)
l23038E14:
	word32 a5_13658
	xTaskGetTickCountFromISR(out a5_13658)
l23038E18:
	word32 a5_2803 = CONVERT(bLoc79_7707, byte, word32)
	dwLocF8 = a5_2803
	dwLoc7C_12988 = CONVERT(bLoc7A_7754, byte, word32)
	word32 a0_13661
	word32 a2_13663
	word32 a4_13665
	word32 a5_13666
	word32 s5_13670
	word32 s6_13671
	word32 s9_13674
	word32 s10_13675
	word32 s11_13676
	word32 s8_13673
	word32 s7_13672
	word32 s3_13668
	word32 s4_13669
	word32 s2_13667
	word32 a3_13664
	word32 a1_13662
	ra_2714 = bl_printk(ra_2714, 0x2307A22C<32>, 0x23079AA4<32>, a5_2803, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2716, out a0_13661, out a1_13662, out a2_13663, out a3_13664, out a4_13665, out a5_13666, out s2_13667, out s3_13668, out s4_13669, out s5_13670, out s6_13671, out s7_13672, out s8_13673, out s9_13674, out s10_13675, out s11_13676)
l23038E64:
	bl_tpc_update_power_rate_11g(fp - 128<i32>)
	dwLoc7C_12983 = dwLoc7C_12988 (alias)
l23038E6A:
	byte bLoc7A_7866 = SLICE(dwLoc7C_12983, byte, 16)
	byte bLoc79_7847 = SLICE(dwLoc7C_12983, byte, 24)
	word32 a4_2875
	word32 s0_2880
	word32 s6_13788
	word32 s8_13789
	word32 s5_13787
	word32 s4_13786
	word32 s3_13785
	word32 s2_13784
	word32 a1_13781
	word32 a5_13783
	word32 a3_13782
	word32 a0_2871
	word32 s1_2881
	word32 ra_2879 = fdt_getprop(ra_2714, s1_2716, 0x2307A2A0<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2880, out s1_2881, out a0_2871, out a1_13781, out a3_13782, out a4_2875, out a5_13783, out s2_13784, out s3_13785, out s4_13786, out s5_13787, out s6_13788, out s8_13789)
	word32 dwLoc7C_7870 = dwLoc7C_12983
	branch a4_2875 != 32<i32> l23039432
l23039432:
	branch CONVERT(Mem2869[s0_2880 + -108<i32>:byte], byte, word32) >u 4<32> l23038F1E
l2303943C:
	branch CONVERT(Mem2869[0x4201A623<32>:byte], byte, word32) >u 4<32> l23038F1E
l23039448:
	branch Mem2869[0x4200E244<32>:int32] == 0<32> l2303947C
l2303947C:
	word32 a5_13682
	xTaskGetTickCount(out a5_13682)
l23039452:
	word32 a5_13683
	xTaskGetTickCountFromISR(out a5_13683)
l23039456:
	word32 s10_13714
	word32 s6_13710
	word32 s4_13708
	word32 s2_13706
	word32 a2_13702
	word32 a3_13703
	word32 s7_13711
	word32 s11_13715
	word32 s8_13712
	word32 s9_13713
	word32 s5_13709
	word32 s3_13707
	word32 a4_13704
	word32 a5_13705
	word32 a0_13700
	word32 a1_13701
	ra_2879 = bl_printk(ra_2879, 0x2307A2EC<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2881, out a0_13700, out a1_13701, out a2_13702, out a3_13703, out a4_13704, out a5_13705, out s2_13706, out s3_13707, out s4_13708, out s5_13709, out s6_13710, out s7_13711, out s8_13712, out s9_13713, out s10_13714, out s11_13715)
l23038E88:
	word32 s2_2939 = 0<32>
l23038E8C:
	a0_2871 = fdt32_to_cpu(a0_2871)
	Mem2952[fp - 128<i32> + s2_2939:byte] = SLICE(a0_2871, byte, 0)
	s2_2939 = s2_2939 + 1<32>
	branch s2_2939 != 8<32> l23038E8C
l23038EA6:
	branch CONVERT(Mem2952[s0_2880 + -108<i32>:byte], byte, word32) >u 2<32> l23038F18
l23038EB0:
	branch CONVERT(Mem2952[0x4201A623<32>:byte], byte, word32) >u 2<32> l23038F18
l23038EBC:
	branch Mem2952[0x4200E244<32>:int32] == 0<32> l2303942C
l2303942C:
	word32 a5_13659
	xTaskGetTickCount(out a5_13659)
l23038EC8:
	word32 a5_13660
	xTaskGetTickCountFromISR(out a5_13660)
l23038ECC:
	word32 a5_2968 = CONVERT(bLoc79_7847, byte, word32)
	dwLocF8 = a5_2968
	dwLoc7C_7870 = CONVERT(bLoc7A_7866, byte, word32)
	word32 s10_13698
	word32 s6_13694
	word32 s3_13691
	word32 a4_13688
	word32 a1_13685
	word32 s7_13695
	word32 s4_13692
	word32 a5_13689
	word32 a2_13686
	word32 s11_13699
	word32 s8_13696
	word32 s9_13697
	word32 s5_13693
	word32 s2_13690
	word32 a3_13687
	word32 a0_13684
	ra_2879 = bl_printk(ra_2879, 0x2307A2B0<32>, 0x23079AA4<32>, a5_2968, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2881, out a0_13684, out a1_13685, out a2_13686, out a3_13687, out a4_13688, out a5_13689, out s2_13690, out s3_13691, out s4_13692, out s5_13693, out s6_13694, out s7_13695, out s8_13696, out s9_13697, out s10_13698, out s11_13699)
l23038F18:
	bl_tpc_update_power_rate_11n(fp - 128<i32>)
l23038F1E:
	dwLocDC = 0<32>
	word32 a0_3034
	word32 s4_13679
	word32 s8_13681
	word32 s5_13680
	word32 s3_13678
	word32 s0_13677
	ra_2530 = fdt_stringlist_count(ra_2879, s1_2881, 0x2307A324<32>, 0x2307A000<32>, dwLocF8, 0<32>, dwLoc48, s9, out s0_13677, out s1_2532, out a0_3034, out s2_2533, out s3_13678, out s4_13679, out s5_13680, out s6_2537, out s8_13681)
	branch a0_3034 != 1<32> l2303990C
l23038F38:
	word32 a0_3061
	word32 s3_13722
	word32 s2_13721
	word32 a5_13720
	word32 a4_13719
	word32 a3_13718
	word32 s1_13716
	word32 a1_13717
	word32 a2_3063
	word32 s0_3070
	word32 s5_3075
	word32 s4_3074
	ra_2530 = fdt_stringlist_get(ra_2530, s1_2532, s2_2533 + 804<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_3070, out s1_13716, out a0_3061, out a1_13717, out a2_3063, out a3_13718, out a4_13719, out a5_13720, out s2_13721, out s3_13722, out s4_3074, out s5_3075, out s6_2537)
	word32 s3_3083 = a0_3061
	branch CONVERT(Mem3031[s0_3070 + -108<i32>:byte], byte, word32) >u 2<32> l23038F94
l23038F54:
	branch CONVERT(Mem3031[0x4201A623<32>:byte], byte, word32) >u 2<32> l23038F94
l23038F60:
	branch Mem3031[0x4200E244<32>:int32] == 0<32> l23039482
l23039482:
	word32 a5_13723
	xTaskGetTickCount(out a5_13723)
l23038F6C:
	word32 a5_13724
	xTaskGetTickCountFromISR(out a5_13724)
l23038F70:
	word32 s11_13736
	word32 s1_13725
	word32 s10_13735
	word32 s9_13734
	word32 a0_13726
	word32 s8_13733
	word32 s7_13732
	word32 a1_13727
	word32 a3_13728
	word32 a4_13729
	word32 s2_13731
	word32 a5_13730
	ra_2530 = bl_printk(ra_2530, 0x2307A330<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13725, out a0_13726, out a1_13727, out a2_3063, out a3_13728, out a4_13729, out a5_13730, out s2_13731, out s3_3083, out s4_3074, out s5_3075, out s6_2537, out s7_13732, out s8_13733, out s9_13734, out s10_13735, out s11_13736)
l23038F94:
	s1_2532 = dwLoc7C_7870
	s2_2533 = 2<32>
	branch a2_3063 > 2<32> l2303990C
l23038F9C:
	word32 a4_13739
	word32 a6_13741
	word32 a7_13742
	word32 a5_13740
	word32 a3_13738
	word32 a2_13737
	memcpy(fp - 196<i32>, s3_3083, a2_3063, out a2_13737, out a3_13738, out a4_13739, out a5_13740, out a6_13741, out a7_13742)
	branch CONVERT(Mem3031[s0_3070 + -108<i32>:byte], byte, word32) >u 2<32> l23038FF0
l23038FB0:
	branch CONVERT(Mem3151[0x4201A623<32>:byte], byte, word32) >u 2<32> l23038FF0
l23038FBC:
	branch Mem3151[0x4200E244<32>:int32] == 0<32> l23039488
l23039488:
	word32 a5_13760
	xTaskGetTickCount(out a5_13760)
l23038FC8:
	word32 a5_13761
	xTaskGetTickCountFromISR(out a5_13761)
l23038FCC:
	word32 s7_13770
	word32 s9_13772
	word32 s11_13774
	word32 s10_13773
	word32 s8_13771
	word32 s2_13768
	word32 s6_13769
	word32 a4_13766
	word32 a5_13767
	word32 a2_13764
	word32 a3_13765
	word32 a1_13763
	word32 a0_13762
	ra_2530 = bl_printk(ra_2530, 0x2307A358<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13762, out a1_13763, out a2_13764, out a3_13765, out a4_13766, out a5_13767, out s2_13768, out s3_3083, out s4_3074, out s5_3075, out s6_13769, out s7_13770, out s8_13771, out s9_13772, out s10_13773, out s11_13774)
l23038FF0:
	word32 t1_13743
	word32 a0_13744
	word32 a2_13746
	word32 a4_13748
	word32 a5_13749
	word32 t1_13750
	word32 a4_13755
	word32 a5_13756
	word32 a3_13754
	word32 a0_13751
	word32 a2_13753
	word32 a1_13752
	word32 a3_13747
	word32 a1_13745
	word32 ra_3219 = memset(memset(ra_2530, fp - 176<i32>, 0<32>, 0xE<32>, out t1_13743, out a0_13744, out a1_13745, out a2_13746, out a3_13747, out a4_13748, out a5_13749), fp - 160<i32>, 0<32>, 0xE<32>, out t1_13750, out a0_13751, out a1_13752, out a2_13753, out a3_13754, out a4_13755, out a5_13756)
	word32 a1_13757
	word32 a4_13759
	word32 a2_13758
	word32 a5_3226
	word32 a3_3224
	strlen(fp - 196<i32>, out a1_13757, out a2_13758, out a3_3224, out a4_13759, out a5_3226)
	word32 s2_3230 = fp - 196<i32>
	word32 s9_3232 = 0<32>
	word32 s7_3233 = 0x4201A000<32>
	word32 s6_3235 = 0x2307A000<32>
l23039024:
	word32 a0_3670
	word32 a3_3668
	branch s9_3232 >= a5_3226 l2303976C
l2303902A:
	word32 s2_3271
	word32 a0_3353
	word32 a3_3347
	word32 a5_3243 = CONVERT(Mem3238[s2_3230:byte], byte, word32)
	branch a5_3243 == 70<i32> l2303949E
l23039036:
	word32 a4_3245
	branch a5_3243 >u 70<i32> l2303948E
l2303948E:
	a4_3245 = 98<i32>
	branch a5_3243 == 98<i32> l23039640
l23039496:
	branch a5_3243 != 102<i32> l23039042
l2303949E:
	word32 a3_13776
	word32 a4_13777
	word32 a5_13778
	word32 a1_13775
	word32 s8_3276
	word32 a0_3260
	ra_3219 = fdt_getprop(ra_3219, s1_2532, 0x2307A458<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_3070, out s1_2532, out a0_3260, out a1_13775, out a3_13776, out a4_13777, out a5_13778, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s8_3276)
	a3_3224 = 0<32>
	branch true l23039804
l23039804:
	branch CONVERT(Mem3257[s0_3070 + -108<i32>:byte], byte, word32) >u 4<32> l23039762
l2303980E:
	branch CONVERT(Mem3257[s7_3233 + 1571<i32>:byte], byte, word32) >u 4<32> l23039840
l23039816:
	branch Mem3257[s8_3276 + 580<i32>:int32] == 0<32> l23039876
l23039876:
	word32 a5_13836
	xTaskGetTickCount(out a5_13836)
l2303981C:
	word32 a5_13837
	xTaskGetTickCountFromISR(out a5_13837)
l23039820:
	word32 a0_13853
	word32 a2_13855
	word32 a5_13857
	word32 s10_13858
	word32 s11_13859
	word32 a4_13856
	word32 a1_13854
	ra_3219 = bl_printk(ra_3219, 0x2307A4CC<32>, s6_3235 + -1372<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13853, out a1_13854, out a2_13855, out a3_3224, out a4_13856, out a5_13857, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_3276, out s9_3232, out s10_13858, out s11_13859)
l23039840:
	branch CONVERT(Mem3257[s0_3070 + -108<i32>:byte], byte, word32) >u 1<32> l23039762
l2303984A:
	branch CONVERT(Mem3257[s7_3233 + 1571<i32>:byte], byte, word32) >u 1<32> l23039762
l23039852:
	branch Mem3257[s8_3276 + 580<i32>:int32] == 0<32> l23039BA6
l23039BA6:
	word32 a5_13873
	xTaskGetTickCount(out a5_13873)
l2303985A:
	word32 a5_13874
	xTaskGetTickCountFromISR(out a5_13874)
l2303985E:
	a3_3347 = s6_3235 + -1372<i32>
	a0_3353 = 0x2307A5A4<32>
l230394BE:
	word32 s3_3354 = 0<32>
	word32 s5_3355 = 0xE<32>
l230394C2:
	a0_3260 = fdt32_to_cpu(a0_3260)
	Mem3369[fp - 160<i32> + s3_3354:byte] = SLICE(a0_3260, byte, 0)
	s3_3354 = s3_3354 + 1<32>
	branch s3_3354 != 0xE<32> l230394C2
l230394E0:
	branch CONVERT(Mem3369[s0_3070 + -108<i32>:byte], byte, word32) >u 2<32> l23039528
l230394EE:
	branch CONVERT(Mem3369[0x4201A623<32>:byte], byte, word32) >u 2<32> l23039528
l230394FA:
	branch Mem3369[0x4200E244<32>:int32] == 0<32> l230397F8
l230397F8:
	word32 a5_13800
	xTaskGetTickCount(out a5_13800)
l23039506:
	word32 a5_13801
	xTaskGetTickCountFromISR(out a5_13801)
l2303950A:
	word32 s4_13828
	word32 s7_13829
	word32 s8_13830
	word32 s9_13831
	word32 s10_13832
	word32 s11_13833
	word32 a2_13822
	word32 a4_13824
	word32 s2_13826
	word32 s3_13827
	word32 a5_13825
	word32 a3_13823
	word32 a0_13820
	word32 a1_13821
	word32 s1_13819
	ra_3219 = bl_printk(ra_3219, 0x2307A464<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13819, out a0_13820, out a1_13821, out a2_13822, out a3_13823, out a4_13824, out a5_13825, out s2_13826, out s3_13827, out s4_13828, out s5_3355, out s6_3235, out s7_13829, out s8_13830, out s9_13831, out s10_13832, out s11_13833)
l23039528:
	word32 s0_3441
	word32 a3_13793
	word32 a5_13795
	word32 s4_13796
	word32 s8_13798
	word32 s9_13799
	word32 s7_13797
	word32 a4_13794
	word32 s1_13792
	word32 s2_3445
	word32 s3_3446
	ra_3219 = log_buf_out(ra_3219, fp - 160<i32>, 0xE<32>, 0<32>, s5_3355, s6_3235, s3_290, dwLocE0, 0<32>, dwLocD0, dwLocA8, s8, s0, dwArg0C, out s0_3441, out s1_13792, out a3_13793, out a4_13794, out a5_13795, out s2_3445, out s3_3446, out s4_13796, out s5_3075, out s6_3235, out s7_13797, out s8_13798, out s9_13799)
	word32 a5_3457 = fp - 160<i32>
l23039540:
	a5_3457 = a5_3457 + 1<32>
	Mem3464[a5_3457 + 4095<i32>:byte] = SLICE(CONVERT(Mem3460[a5_3457:byte], byte, word32) + 0xFFFFFFF6<32>, byte, 0)
	branch fp - 146<i32> != a5_3457 l23039540
l23039550:
	branch CONVERT(Mem3464[s0_3441 + -108<i32>:byte], byte, word32) >u 2<32> l230395D8
l2303955A:
	s5_3075 = 0x4201A000<32>
	branch CONVERT(Mem3464[0x4201A623<32>:byte], byte, word32) >u 2<32> l23039598
l23039568:
	branch Mem3464[0x4200E244<32>:int32] == 0<32> l230397FE
l230397FE:
	word32 a5_13834
	xTaskGetTickCount(out a5_13834)
l23039574:
	word32 a5_13835
	xTaskGetTickCountFromISR(out a5_13835)
l23039578:
	word32 s11_13850
	word32 a0_13839
	word32 s10_13849
	word32 s9_13848
	word32 a1_13840
	word32 s8_13847
	word32 s7_13846
	word32 a2_13841
	word32 a3_13842
	word32 a4_13843
	word32 s4_13845
	word32 a5_13844
	word32 s1_13838
	ra_3219 = bl_printk(ra_3219, 0x2307A490<32>, s3_3446 + -1372<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13838, out a0_13839, out a1_13840, out a2_13841, out a3_13842, out a4_13843, out a5_13844, out s2_3445, out s3_3446, out s4_13845, out s5_3075, out s6_3235, out s7_13846, out s8_13847, out s9_13848, out s10_13849, out s11_13850)
l23039598:
	branch CONVERT(Mem3464[s0_3441 + -108<i32>:byte], byte, word32) >u 1<32> l230395D8
l230395A2:
	branch CONVERT(Mem3464[s5_3075 + 1571<i32>:byte], byte, word32) >u 1<32> l230395D8
l230395AA:
	branch Mem3464[0x4200E244<32>:int32] == 0<32> l2303987C
l2303987C:
	word32 a5_13851
	xTaskGetTickCount(out a5_13851)
l230395B6:
	word32 a5_13852
	xTaskGetTickCountFromISR(out a5_13852)
l230395BA:
	word32 s1_13860
	word32 a1_13862
	word32 a2_13863
	word32 a3_13864
	word32 s10_13871
	word32 s11_13872
	word32 s8_13869
	word32 s9_13870
	word32 s7_13868
	word32 a4_13865
	word32 s4_13867
	word32 a5_13866
	word32 a0_13861
	ra_3219 = bl_printk(ra_3219, 0x2307A500<32>, s3_3446 + -1372<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13860, out a0_13861, out a1_13862, out a2_13863, out a3_13864, out a4_13865, out a5_13866, out s2_3445, out s3_3446, out s4_13867, out s5_3075, out s6_3235, out s7_13868, out s8_13869, out s9_13870, out s10_13871, out s11_13872)
l230395D8:
	word32 a4_3574 = CONVERT(Mem3464[s0_3441 + -108<i32>:byte], byte, word32)
	branch CONVERT(Mem3464[s2_3445:byte], byte, word32) != 66<i32> l23039888
l23039888:
	branch a4_3574 >u 1<32> l230398C8
l2303988E:
	branch CONVERT(Mem3464[0x4201A623<32>:byte], byte, word32) >u 1<32> l230398C8
l2303989A:
	branch Mem3464[0x4200E244<32>:int32] == 0<32> l23039BA0
l23039BA0:
	word32 a5_13912
	xTaskGetTickCount(out a5_13912)
l230398A6:
	word32 a5_13913
	xTaskGetTickCountFromISR(out a5_13913)
l230398AA:
	word32 s7_13924
	word32 s9_13926
	word32 s11_13928
	word32 s10_13927
	word32 s8_13925
	word32 s3_13922
	word32 s4_13923
	word32 a5_13920
	word32 s2_13921
	word32 s1_13914
	word32 a3_13918
	word32 a4_13919
	word32 a0_13915
	word32 a2_13917
	word32 a1_13916
	ra_3219 = bl_printk(ra_3219, 0x2307A564<32>, s3_3446 + -1372<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13914, out a0_13915, out a1_13916, out a2_13917, out a3_13918, out a4_13919, out a5_13920, out s2_13921, out s3_13922, out s4_13923, out s5_3075, out s6_3235, out s7_13924, out s8_13925, out s9_13926, out s10_13927, out s11_13928)
l230398C8:
	word32 a4_3622 = fp - 176<i32>
	word32 a5_3623 = 0<32>
l230398CE:
	a4_3622 = a4_3622 + 1<32>
	Mem3636[a4_3622 + 4095<i32>:byte] = Mem3630[fp - 160<i32> + a5_3623:byte] + Mem3630[a4_3622:byte]
	a5_3623 = a5_3623 + 1<32>
	branch a5_3623 != 0xE<32> l230398CE
l230395E8:
	word32 a5_3638 = 0<32>
l230395EC:
	Mem3648[fp - 176<i32> + a5_3638:byte] = SLICE(CONVERT(Mem3644[fp - 160<i32> + a5_3638:byte], byte, word32), byte, 0)
	a5_3638 = a5_3638 + 1<32>
	branch a5_3638 != 0xE<32> l230395EC
l23039602:
	branch a4_3574 >u 1<32> l230398E8
l23039608:
	branch CONVERT(Mem3648[0x4201A623<32>:byte], byte, word32) >u 1<32> l230398E8
l23039614:
	branch Mem3648[0x4200E244<32>:int32] == 0<32> l23039882
l23039882:
	word32 a5_13910
	xTaskGetTickCount(out a5_13910)
l23039620:
	word32 a5_13911
	xTaskGetTickCountFromISR(out a5_13911)
l23039624:
	a3_3668 = s3_3446 + -1372<i32>
	a0_3670 = 0x2307A534<32>
l2303903A:
	a4_3245 = 66<i32>
	branch a5_3243 == 66<i32> l23039640
l23039640:
	word32 a0_3689
	word32 s8_3709
	ra_3219 = bl_efuse_read_pwroft(ra_3219, s0_3070, s1_2532, fp - 160<i32>, a3_3224, a4_3245, s2_3230, s3_3083, s4_3074, mstatus, dwLocD8, dwLocC0, dwLocBC, s10, dwLoc74, dwArg18, out s0_3070, out s1_2532, out a0_3689, out a3_3224, out s2_3271, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_3709, out s9_3232, out mstatus)
	s3_3083 = a0_3689
	word32 a4_3717 = CONVERT(Mem3238[s0_3070 + -108<i32>:byte], byte, word32)
	branch a0_3689 != 0<32> l230397BE
l230397BE:
	branch a4_3717 >u 1<32> l23039762
l230397C4:
	branch CONVERT(Mem3238[s7_3233 + 1571<i32>:byte], byte, word32) >u 1<32> l23039762
l230397CC:
	branch Mem3238[s8_3709 + 580<i32>:int32] == 0<32> l230397F2
l230397F2:
	word32 a5_13978
	xTaskGetTickCount(out a5_13978)
l230397D2:
	word32 a5_13979
	xTaskGetTickCountFromISR(out a5_13979)
l230397D6:
	a3_3347 = s6_3235 + -1372<i32>
	a0_3353 = 0x2307A420<32>
l230397EC:
	word32 s11_13882
	word32 s8_13880
	word32 s10_13881
	word32 a4_13878
	word32 a5_13879
	word32 a0_13875
	word32 a2_13877
	word32 a1_13876
	ra_3219 = bl_printk(ra_3219, a0_3353, a3_3347, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13875, out a1_13876, out a2_13877, out a3_3224, out a4_13878, out a5_13879, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_13880, out s9_3232, out s10_13881, out s11_13882)
l23039650:
	branch a4_3717 >u 2<32> l23039686
l23039656:
	branch CONVERT(Mem3238[s7_3233 + 1571<i32>:byte], byte, word32) >u 2<32> l23039686
l2303965E:
	branch Mem3238[s8_3709 + 580<i32>:int32] == 0<32> l23039700
l23039700:
	word32 a5_13948
	xTaskGetTickCount(out a5_13948)
l23039664:
	word32 a5_13949
	xTaskGetTickCountFromISR(out a5_13949)
l23039668:
	word32 a0_13953
	word32 a1_13954
	word32 s4_13961
	word32 s8_13963
	word32 s9_13964
	word32 s10_13965
	word32 s11_13966
	word32 s7_13962
	word32 s2_13959
	word32 s3_13960
	word32 a5_13958
	word32 a2_13955
	word32 a4_13957
	word32 a3_13956
	word32 s1_13952
	ra_3219 = bl_printk(ra_3219, 0x2307A37C<32>, s6_3235 + -1372<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13952, out a0_13953, out a1_13954, out a2_13955, out a3_13956, out a4_13957, out a5_13958, out s2_13959, out s3_13960, out s4_13961, out s5_3075, out s6_3235, out s7_13962, out s8_13963, out s9_13964, out s10_13965, out s11_13966)
l23039686:
	word32 s8_3839
	word32 a4_13946
	word32 a5_13947
	word32 a3_13945
	ra_3219 = log_buf_out(ra_3219, fp - 160<i32>, 0xE<32>, 1<32>, s5_3075, s6_3235, s3_290, dwLocE0, 0<32>, dwLocD0, dwLocA8, s8, s0, dwArg0C, out s0_3070, out s1_2532, out a3_13945, out a4_13946, out a5_13947, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_3839, out s9_3232)
	branch CONVERT(Mem3238[s2_3271:byte], byte, word32) != 66<i32> l2303970C
l2303970C:
	branch CONVERT(Mem3238[s0_3070 + -108<i32>:byte], byte, word32) >u 1<32> l23039742
l23039716:
	branch CONVERT(Mem3238[s7_3233 + 1571<i32>:byte], byte, word32) >u 1<32> l23039742
l2303971E:
	branch Mem3238[s8_3839 + 580<i32>:int32] == 0<32> l230397B8
l230397B8:
	word32 a5_13967
	xTaskGetTickCount(out a5_13967)
l23039724:
	word32 a5_13968
	xTaskGetTickCountFromISR(out a5_13968)
l23039728:
	word32 a5_13974
	word32 s10_13976
	word32 s11_13977
	word32 s8_13975
	word32 a3_13972
	word32 a4_13973
	word32 a1_13970
	word32 a2_13971
	word32 a0_13969
	ra_3219 = bl_printk(ra_3219, 0x2307A3E0<32>, s6_3235 + -1372<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13969, out a1_13970, out a2_13971, out a3_13972, out a4_13973, out a5_13974, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_13975, out s9_3232, out s10_13976, out s11_13977)
l23039742:
	word32 a5_3890 = fp - 176<i32>
	a3_3224 = 0xE<32>
l23039746:
	a5_3890 = a5_3890 + 1<32>
	Mem3903[a5_3890 + 4095<i32>:byte] = Mem3897[fp - 160<i32> + s3_3083:byte] + Mem3897[a5_3890:byte]
	s3_3083 = s3_3083 + 1<32>
	branch s3_3083 != 0xE<32> l23039746
l23039760:
l23039762:
	s9_3232 = s9_3232 + 1<32>
	a5_3226 = 2<32>
	s2_3230 = s2_3271 + 1<32>
	branch s9_3232 != 2<32> l23039024
l2303976C:
	branch a5_3226 != 0<32> l230398E8
l23039772:
	branch CONVERT(Mem3922[s0_3070 + -108<i32>:byte], byte, word32) >u 2<32> l230398E8
l2303977C:
	branch CONVERT(Mem3922[0x4201A623<32>:byte], byte, word32) >u 2<32> l230398E8
l23039788:
	branch Mem3922[0x4200E244<32>:int32] == 0<32> l23039BB4
l23039BB4:
	word32 a5_13893
	xTaskGetTickCount(out a5_13893)
l23039794:
	word32 a5_13894
	xTaskGetTickCountFromISR(out a5_13894)
l23039798:
	a3_3668 = 0x23079AA4<32>
	a0_3670 = 0x2307A5DC<32>
l230396A4:
l230396A6:
	Mem3962[fp - 176<i32> + s3_3083:byte] = SLICE(CONVERT(Mem3958[fp - 160<i32> + s3_3083:byte], byte, word32), byte, 0)
	s3_3083 = s3_3083 + 1<32>
	branch s3_3083 != 0xE<32> l230396A6
l230396BC:
	branch CONVERT(Mem3962[s0_3070 + -108<i32>:byte], byte, word32) >u 1<32> l230398E8
l230396C6:
	branch CONVERT(Mem3962[0x4201A623<32>:byte], byte, word32) >u 1<32> l230398E8
l230396D2:
	branch Mem3962[0x4200E244<32>:int32] == 0<32> l23039706
l23039706:
	word32 a5_13950
	xTaskGetTickCount(out a5_13950)
l230396DC:
	word32 a5_13951
	xTaskGetTickCountFromISR(out a5_13951)
l230396E0:
	a3_3668 = s6_3235 + -1372<i32>
	a0_3670 = 0x2307A3B0<32>
l230396FA:
	word32 s1_13895
	word32 a1_13897
	word32 a2_13898
	word32 a4_13900
	word32 s2_13902
	word32 s3_13903
	word32 s4_13904
	word32 s11_13909
	word32 s10_13908
	word32 s7_13905
	word32 s9_13907
	word32 s8_13906
	word32 a5_13901
	word32 a3_13899
	word32 a0_13896
	ra_3219 = bl_printk(ra_3219, a0_3670, a3_3668, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13895, out a0_13896, out a1_13897, out a2_13898, out a3_13899, out a4_13900, out a5_13901, out s2_13902, out s3_13903, out s4_13904, out s5_3075, out s6_3235, out s7_13905, out s8_13906, out s9_13907, out s10_13908, out s11_13909)
l230398E8:
	word32 s7_13890
	word32 s9_13892
	word32 s8_13891
	word32 a3_13884
	word32 a5_13886
	word32 s4_13888
	word32 s5_13889
	word32 s3_13887
	word32 a4_13885
	word32 s0_13883
	ra_2530 = log_buf_out(ra_3219, fp - 176<i32>, 0xE<32>, 1<32>, s5_3075, s6_3235, s3_290, dwLocE0, 0<32>, dwLocD0, dwLocA8, s8, s0, dwArg0C, out s0_13883, out s1_2532, out a3_13884, out a4_13885, out a5_13886, out s2_2533, out s3_13887, out s4_13888, out s5_13889, out s6_2537, out s7_13890, out s8_13891, out s9_13892)
	ble_rf_set_pwr_offset(CONVERT(bLocAA, int8, int32))
	phy_powroffset_set(fp - 176<i32>)
l2303990C:
	word32 a0_4109
	word32 s3_13613
	word32 s5_13615
	word32 s4_13614
	word32 a5_13611
	word32 s2_13612
	word32 a3_13610
	word32 s0_13609
	word32 s1_4119
	word32 s6_4124
	word32 ra_4117 = fdt_subnode_offset(ra_2530, s1_2532, s1_2532, 0x2307A60C<32>, s2_2533, s6_2537, dwLocF8, dwLocC8, s9, out s0_13609, out s1_4119, out a0_4109, out a3_13610, out a5_13611, out s2_13612, out s3_13613, out s4_13614, out s5_13615, out s6_4124)
	word32 s2_4129 = a0_4109
	branch a0_4109 <= 0<32> l230399D8
l23039924:
	word32 a0_4134
	word32 s3_4146
	word32 s4_14015
	word32 s5_14016
	word32 s6_14017
	word32 s8_14018
	word32 s0_14014
	word32 s2_4145
	word32 s1_4144
	word32 ra_4142 = fdt_stringlist_count(ra_4117, s1_4119, 0x2306E764<32>, a0_4109, dwLocF8, dwLocDC, dwLoc48, s9, out s0_14014, out s1_4144, out a0_4134, out s2_4145, out s3_4146, out s4_14015, out s5_14016, out s6_14017, out s8_14018)
	branch a0_4134 == 1<32> l23039BBA
l23039BBA:
	word32 a0_4160
	word32 a5_4165
	word32 s0_4169
	word32 s5_14024
	word32 s6_14025
	word32 s3_14022
	word32 s4_14023
	word32 a3_14020
	word32 a4_14021
	word32 a1_14019
	word32 a2_4162
	ra_4142 = fdt_stringlist_get(ra_4142, s1_4144, s3_4146 + 1892<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4169, out s1_4144, out a0_4160, out a1_14019, out a2_4162, out a3_14020, out a4_14021, out a5_4165, out s2_4145, out s3_14022, out s4_14023, out s5_14024, out s6_14025)
	word32 s3_4182 = a0_4160
	branch a5_4165 >u 0xFFFFFFE1<32> l2303993A
l23039BD6:
	branch CONVERT(Mem4104[s0_4169 + -108<i32>:byte], byte, word32) >u 2<32> l23039C22
l23039BE0:
	branch CONVERT(Mem4104[0x4201A623<32>:byte], byte, word32) >u 2<32> l23039C22
l23039BEC:
	branch Mem4104[0x4200E244<32>:int32] == 0<32> l23039C3C
l23039C3C:
	word32 a5_14066
	xTaskGetTickCount(out a5_14066)
l23039BF6:
	word32 a5_14067
	xTaskGetTickCountFromISR(out a5_14067)
l23039BFA:
	word32 s4_14094
	word32 a4_14092
	word32 a1_14090
	word32 a5_14093
	word32 a3_14091
	word32 a0_14089
	word32 s5_14095
	word32 s6_14096
	word32 s7_14097
	word32 s8_14098
	word32 s9_14099
	word32 s11_14101
	word32 s10_14100
	ra_4142 = bl_printk(ra_4142, 0x2307A610<32>, 0x23079AA4<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4144, out a0_14089, out a1_14090, out a2_4162, out a3_14091, out a4_14092, out a5_14093, out s2_4145, out s3_4182, out s4_14094, out s5_14095, out s6_14096, out s7_14097, out s8_14098, out s9_14099, out s10_14100, out s11_14101)
l23039C22:
	word32 a2_14060
	word32 a7_14065
	word32 a6_14064
	word32 a3_14061
	word32 a5_14063
	word32 a4_14062
	memcpy(fp - 160<i32>, s3_4182, a2_4162, out a2_14060, out a3_14061, out a4_14062, out a5_14063, out a6_14064, out a7_14065)
	Mem4255[fp - 64<i32> + s3_4182 + 4000<i32>:byte] = 0<8>
l2303993A:
l2303993C:
	word32 a0_4275
	word32 s5_4289
	word32 s8_14088
	word32 s4_14086
	word32 s6_14087
	word32 s2_14084
	word32 s3_14085
	word32 s0_14083
	word32 s1_4285
	word32 ra_4283 = fdt_stringlist_count(ra_4142, s1_4144, 0x2307A650<32>, s2_4145, dwLocF8, dwLocDC, dwLoc48, s9, out s0_14083, out s1_4285, out a0_4275, out s2_14084, out s3_14085, out s4_14086, out s5_4289, out s6_14087, out s8_14088)
	branch a0_4275 == 1<32> l23039C42
l23039C42:
	word32 a0_4301
	word32 a5_4306
	word32 s0_4310
	word32 s5_14032
	word32 s6_14033
	word32 a1_14026
	word32 a4_14028
	word32 s3_14030
	word32 s4_14031
	word32 s2_14029
	word32 a3_14027
	word32 a2_4303
	ra_4283 = fdt_stringlist_get(ra_4283, s1_4285, s5_4289 + 1616<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4310, out s1_4285, out a0_4301, out a1_14026, out a2_4303, out a3_14027, out a4_14028, out a5_4306, out s2_14029, out s3_14030, out s4_14031, out s5_14032, out s6_14033)
	word32 s5_4323 = a0_4301
	branch a5_4306 >u 0xFFFFFFE1<32> l23039952
l23039C5E:
	branch CONVERT(Mem4273[s0_4310 + -108<i32>:byte], byte, word32) >u 2<32> l23039CAA
l23039C68:
	branch CONVERT(Mem4273[0x4201A623<32>:byte], byte, word32) >u 2<32> l23039CAA
l23039C74:
	branch Mem4273[0x4200E244<32>:int32] == 0<32> l23039CC4
l23039CC4:
	word32 a5_14058
	xTaskGetTickCount(out a5_14058)
l23039C7E:
	word32 a5_14059
	xTaskGetTickCountFromISR(out a5_14059)
l23039C82:
	word32 a5_14106
	word32 s4_14109
	word32 s7_14111
	word32 s9_14113
	word32 s10_14114
	word32 s11_14115
	word32 s8_14112
	word32 s6_14110
	word32 s3_14108
	word32 s2_14107
	word32 a4_14105
	word32 a3_14104
	word32 a1_14103
	word32 a0_14102
	ra_4283 = bl_printk(ra_4283, 0x2307A654<32>, 0x23079AA4<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4285, out a0_14102, out a1_14103, out a2_4303, out a3_14104, out a4_14105, out a5_14106, out s2_14107, out s3_14108, out s4_14109, out s5_4323, out s6_14110, out s7_14111, out s8_14112, out s9_14113, out s10_14114, out s11_14115)
l23039CAA:
	word32 a3_14053
	word32 a4_14054
	word32 a6_14056
	word32 a7_14057
	word32 a5_14055
	word32 a2_14052
	memcpy(fp - 128<i32>, s5_4323, a2_4303, out a2_14052, out a3_14053, out a4_14054, out a5_14055, out a6_14056, out a7_14057)
	Mem4396[fp - 64<i32> + s5_4323 + 4032<i32>:byte] = 0<8>
l23039952:
l23039954:
	word32 a0_4417
	word32 s0_4426
	word32 s1_14116
	word32 a3_14118
	word32 a4_14119
	word32 a5_14120
	word32 s8_14124
	word32 s2_14121
	word32 s5_14123
	word32 s4_14122
	word32 a1_14117
	word32 s3_4429
	word32 ra_4425 = fdt_getprop(ra_4283, s1_4285, 0x2307A694<32>, dwLocF8, 0<32>, dwLocBC, dwLoc28, dwArg08, out s0_4426, out s1_14116, out a0_4417, out a1_14117, out a3_14118, out a4_14119, out a5_14120, out s2_14121, out s3_4429, out s4_14122, out s5_14123, out s6_4124, out s8_14124)
	word32 s2_4437 = a0_4417
	branch a0_4417 == 0<32> l23039CD0
l23039CD0:
	branch CONVERT(Mem4415[s0_4426 + -108<i32>:byte], byte, word32) >u 4<32> l230399CC
l23039CDC:
	branch CONVERT(Mem4415[0x4201A623<32>:byte], byte, word32) >u 4<32> l230399CC
l23039CEA:
	branch Mem4415[0x4200E244<32>:int32] == 0<32> l23039D1E
l23039D1E:
	word32 a5_14050
	xTaskGetTickCount(out a5_14050)
l23039CF4:
	word32 a5_14051
	xTaskGetTickCountFromISR(out a5_14051)
l23039CF8:
	word32 s9_14080
	word32 s11_14082
	word32 s10_14081
	word32 s7_14078
	word32 s8_14079
	word32 a0_14069
	word32 s4_14076
	word32 s5_14077
	word32 a1_14070
	word32 a5_14074
	word32 s2_14075
	word32 a2_14071
	word32 a4_14073
	word32 a3_14072
	word32 s1_14068
	ra_4425 = bl_printk(ra_4425, 0x2307A6C8<32>, 0x23079AA4<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_14068, out a0_14069, out a1_14070, out a2_14071, out a3_14072, out a4_14073, out a5_14074, out s2_14075, out s3_4429, out s4_14076, out s5_14077, out s6_4124, out s7_14078, out s8_14079, out s9_14080, out s10_14081, out s11_14082)
l2303996C:
	branch CONVERT(Mem4415[s0_4426 + -108<i32>:byte], byte, word32) >u 2<32> l230399C0
l23039976:
	branch CONVERT(Mem4415[0x4201A623<32>:byte], byte, word32) >u 2<32> l230399C0
l23039982:
	branch Mem4415[0x4200E244<32>:int32] == 0<32> l23039CCA
l23039CCA:
	word32 a5_14034
	xTaskGetTickCount(out a5_14034)
l2303998E:
	word32 a5_14035
	xTaskGetTickCountFromISR(out a5_14035)
l23039992:
	fdt32_to_cpu(Mem4497[a0_4417:int32])
	word32 s8_14046
	word32 s11_14049
	word32 s10_14048
	word32 s9_14047
	word32 s7_14045
	word32 s5_14044
	word32 s1_14036
	word32 s4_14043
	word32 a5_14042
	word32 a0_14037
	word32 a1_14038
	word32 a2_14039
	word32 a4_14041
	word32 a3_14040
	ra_4425 = bl_printk(ra_4425, 0x2307A6A0<32>, 0x23079AA4<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_14036, out a0_14037, out a1_14038, out a2_14039, out a3_14040, out a4_14041, out a5_14042, out s2_4437, out s3_4429, out s4_14043, out s5_14044, out s6_4124, out s7_14045, out s8_14046, out s9_14047, out s10_14048, out s11_14049)
l230399C0:
	fdt32_to_cpu(Mem4536[s2_4437:int32])
l230399CC:
	ra_4117 = bl_wifi_ap_info_set(ra_4425, fp - 160<i32>, s3_4429, fp - 128<i32>, dwArg28, out s1_4119, out s2_4129)
l230399D8:
	word32 a0_4590
	word32 s5_14013
	word32 s3_14011
	word32 s4_14012
	word32 s2_14010
	word32 s0_14007
	word32 a5_14009
	word32 a3_14008
	word32 s1_4600
	word32 s6_4605
	word32 ra_4598 = fdt_subnode_offset(ra_4117, s1_4119, s1_4119, 0x2307A6F0<32>, s2_4129, s6_4124, dwLocF8, dwLocC8, s9, out s0_14007, out s1_4600, out a0_4590, out a3_14008, out a5_14009, out s2_14010, out s3_14011, out s4_14012, out s5_14013, out s6_4605)
	word32 s2_4610 = a0_4590
	branch a0_4590 <= 0<32> l23039AA2
l230399F0:
	word32 a0_4615
	word32 s3_4627
	word32 s0_14130
	word32 s8_14134
	word32 s4_14131
	word32 s6_14133
	word32 s5_14132
	word32 s2_4626
	word32 s1_4625
	word32 ra_4623 = fdt_stringlist_count(ra_4598, s1_4600, 0x2306E764<32>, a0_4590, dwLocF8, dwLocDC, dwLoc48, s9, out s0_14130, out s1_4625, out a0_4615, out s2_4626, out s3_4627, out s4_14131, out s5_14132, out s6_14133, out s8_14134)
	branch a0_4615 == 1<32> l23039D24
l23039D24:
	word32 a0_4641
	word32 a5_4646
	word32 s0_4650
	word32 s5_14140
	word32 s6_14141
	word32 s3_14138
	word32 s4_14139
	word32 a3_14136
	word32 a4_14137
	word32 a1_14135
	word32 a2_4643
	ra_4623 = fdt_stringlist_get(ra_4623, s1_4625, s3_4627 + 1892<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4650, out s1_4625, out a0_4641, out a1_14135, out a2_4643, out a3_14136, out a4_14137, out a5_4646, out s2_4626, out s3_14138, out s4_14139, out s5_14140, out s6_14141)
	word32 s3_4663 = a0_4641
	branch a5_4646 >u 0xFFFFFFE1<32> l23039A06
l23039D40:
	branch CONVERT(Mem4584[s0_4650 + -108<i32>:byte], byte, word32) >u 2<32> l23039D8C
l23039D4A:
	branch CONVERT(Mem4584[0x4201A623<32>:byte], byte, word32) >u 2<32> l23039D8C
l23039D56:
	branch Mem4584[0x4200E244<32>:int32] == 0<32> l23039DA6
l23039DA6:
	word32 a5_14170
	xTaskGetTickCount(out a5_14170)
l23039D60:
	word32 a5_14171
	xTaskGetTickCountFromISR(out a5_14171)
l23039D64:
	word32 a4_14188
	word32 a5_14189
	word32 s5_14191
	word32 s7_14193
	word32 s10_14196
	word32 s11_14197
	word32 s8_14194
	word32 s9_14195
	word32 s6_14192
	word32 s4_14190
	word32 a3_14187
	word32 a0_14185
	word32 a1_14186
	ra_4623 = bl_printk(ra_4623, 0x2307A6F4<32>, 0x23079AA4<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4625, out a0_14185, out a1_14186, out a2_4643, out a3_14187, out a4_14188, out a5_14189, out s2_4626, out s3_4663, out s4_14190, out s5_14191, out s6_14192, out s7_14193, out s8_14194, out s9_14195, out s10_14196, out s11_14197)
l23039D8C:
	word32 a6_14168
	word32 a7_14169
	word32 a4_14166
	word32 a5_14167
	word32 a2_14164
	word32 a3_14165
	memcpy(fp - 160<i32>, s3_4663, a2_4643, out a2_14164, out a3_14165, out a4_14166, out a5_14167, out a6_14168, out a7_14169)
	Mem4736[fp - 64<i32> + s3_4663 + 4000<i32>:byte] = 0<8>
l23039A06:
l23039A08:
	word32 a0_4756
	word32 s4_4769
	word32 s8_14203
	word32 s5_14201
	word32 s6_14202
	word32 s3_14200
	word32 s0_14198
	word32 s2_14199
	word32 s1_4766
	word32 ra_4764 = fdt_stringlist_count(ra_4623, s1_4625, 0x2307A650<32>, s2_4626, dwLocF8, dwLocDC, dwLoc48, s9, out s0_14198, out s1_4766, out a0_4756, out s2_14199, out s3_14200, out s4_4769, out s5_14201, out s6_14202, out s8_14203)
	branch a0_4756 == 1<32> l23039DAC
l23039DAC:
	word32 a0_4782
	word32 a5_4787
	word32 s0_4791
	word32 s5_14148
	word32 s3_14146
	word32 s6_14149
	word32 s4_14147
	word32 a1_14142
	word32 a4_14144
	word32 s2_14145
	word32 a3_14143
	word32 a2_4784
	ra_4764 = fdt_stringlist_get(ra_4764, s1_4766, s4_4769 + 1616<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4791, out s1_4766, out a0_4782, out a1_14142, out a2_4784, out a3_14143, out a4_14144, out a5_4787, out s2_14145, out s3_14146, out s4_14147, out s5_14148, out s6_14149)
	word32 s4_4804 = a0_4782
	branch a5_4787 >u 0xFFFFFFE1<32> l23039A1E
l23039DC8:
	branch CONVERT(Mem4754[s0_4791 + -108<i32>:byte], byte, word32) >u 2<32> l23039E14
l23039DD2:
	branch CONVERT(Mem4754[0x4201A623<32>:byte], byte, word32) >u 2<32> l23039E14
l23039DDE:
	branch Mem4754[0x4200E244<32>:int32] == 0<32> l23039E2E
l23039E2E:
	word32 a5_14266
	xTaskGetTickCount(out a5_14266)
l23039DE8:
	word32 a5_14267
	xTaskGetTickCountFromISR(out a5_14267)
l23039DEC:
	word32 s7_14286
	word32 s11_14290
	word32 s8_14287
	word32 s10_14289
	word32 s9_14288
	word32 a4_14280
	word32 s2_14282
	word32 s5_14284
	word32 s6_14285
	word32 s3_14283
	word32 a5_14281
	word32 a1_14278
	word32 a3_14279
	word32 a0_14277
	ra_4764 = bl_printk(ra_4764, 0x2307A73C<32>, 0x23079AA4<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4766, out a0_14277, out a1_14278, out a2_4784, out a3_14279, out a4_14280, out a5_14281, out s2_14282, out s3_14283, out s4_4804, out s5_14284, out s6_14285, out s7_14286, out s8_14287, out s9_14288, out s10_14289, out s11_14290)
l23039E14:
	word32 a2_14260
	word32 a7_14265
	word32 a6_14264
	word32 a3_14261
	word32 a5_14263
	word32 a4_14262
	memcpy(fp - 128<i32>, s4_4804, a2_4784, out a2_14260, out a3_14261, out a4_14262, out a5_14263, out a6_14264, out a7_14265)
	Mem4877[fp - 64<i32> + s4_4804 + 4032<i32>:byte] = 0<8>
l23039A1E:
l23039A20:
	word32 a0_4898
	word32 s0_4907
	word32 a1_14269
	word32 s8_14276
	word32 a3_14270
	word32 s4_14274
	word32 s5_14275
	word32 a4_14271
	word32 s2_14273
	word32 a5_14272
	word32 s1_14268
	word32 s3_4910
	word32 ra_4906 = fdt_getprop(ra_4764, s1_4766, 0x2307A780<32>, dwLocF8, 0<32>, dwLocBC, dwLoc28, dwArg08, out s0_4907, out s1_14268, out a0_4898, out a1_14269, out a3_14270, out a4_14271, out a5_14272, out s2_14273, out s3_4910, out s4_14274, out s5_14275, out s6_4605, out s8_14276)
	word32 s2_4918 = a0_4898
	branch a0_4898 == 0<32> l23039A96
l23039A38:
	branch CONVERT(Mem4896[s0_4907 + -108<i32>:byte], byte, word32) >u 2<32> l23039A8C
l23039A42:
	branch CONVERT(Mem4896[0x4201A623<32>:byte], byte, word32) >u 2<32> l23039A8C
l23039A4E:
	branch Mem4896[0x4200E244<32>:int32] == 0<32> l23039E34
l23039E34:
	word32 a5_14150
	xTaskGetTickCount(out a5_14150)
l23039A5A:
	word32 a5_14151
	xTaskGetTickCountFromISR(out a5_14151)
l23039A5E:
	fdt32_to_cpu(Mem4932[a0_4898:int32])
	word32 a2_14231
	word32 a4_14233
	word32 a5_14234
	word32 s4_14235
	word32 s5_14236
	word32 s7_14237
	word32 s8_14238
	word32 s9_14239
	word32 s11_14241
	word32 s10_14240
	word32 a3_14232
	word32 a1_14230
	word32 a0_14229
	word32 s1_14228
	ra_4906 = bl_printk(ra_4906, 0x2307A794<32>, 0x23079AA4<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_14228, out a0_14229, out a1_14230, out a2_14231, out a3_14232, out a4_14233, out a5_14234, out s2_4918, out s3_4910, out s4_14235, out s5_14236, out s6_4605, out s7_14237, out s8_14238, out s9_14239, out s10_14240, out s11_14241)
l23039A8C:
	fdt32_to_cpu(Mem4971[s2_4918:int32])
l23039A96:
	ra_4598 = bl_wifi_sta_info_set(ra_4906, fp - 160<i32>, s3_4910, fp - 128<i32>, dwArg28, out s1_4600, out s2_4610)
l23039AA2:
	word32 a0_5022
	word32 s0_5031
	word32 s3_14127
	word32 s5_14129
	word32 s4_14128
	word32 a3_14125
	word32 s2_14126
	word32 s1_5032
	word32 a5_5027
	word32 s6_5037
	word32 ra_5030 = fdt_subnode_offset(ra_4598, s1_4600, s1_4600, 0x2307A7C4<32>, s2_4610, s6_4605, dwLocF8, dwLocC8, s9, out s0_5031, out s1_5032, out a0_5022, out a3_14125, out a5_5027, out s2_14126, out s3_14127, out s4_14128, out s5_14129, out s6_5037)
	word32 s2_5042 = a0_5022
	branch a0_5022 > 0<32> l23039B00
l23039AB8:
	a5_5027 = 4<32>
	branch CONVERT(Mem5021[s0_5031 + -108<i32>:byte], byte, word32) >u 4<32> l23039B00
l23039AC2:
	branch CONVERT(Mem5021[0x4201A623<32>:byte], byte, word32) >u 4<32> l23039B00
l23039ACE:
	branch Mem5021[0x4200E244<32>:int32] == 0<32> l23039E3A
l23039E3A:
	word32 a5_14162
	xTaskGetTickCount(out a5_14162)
l23039ADA:
	word32 a5_14163
	xTaskGetTickCountFromISR(out a5_14163)
l23039ADE:
	word32 a4_14208
	word32 s4_14210
	word32 s7_14212
	word32 s8_14213
	word32 s10_14215
	word32 s11_14216
	word32 s9_14214
	word32 s5_14211
	word32 s3_14209
	word32 a3_14207
	word32 a0_14204
	word32 a2_14206
	word32 a1_14205
	ra_5030 = bl_printk(ra_5030, 0x2307A7D0<32>, 0x23079AA4<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_5032, out a0_14204, out a1_14205, out a2_14206, out a3_14207, out a4_14208, out a5_5027, out s2_5042, out s3_14209, out s4_14210, out s5_14211, out s6_5037, out s7_14212, out s8_14213, out s9_14214, out s10_14215, out s11_14216)
l23039B00:
	word32 a0_5098
	word32 s1_5108
	word32 a5_14156
	word32 s0_14154
	word32 a3_14155
	word32 s2_14157
	word32 s5_14160
	word32 s6_14161
	word32 s3_14158
	word32 s4_14159
	word32 ra_5106 = fdt_subnode_offset(ra_5030, s1_5032, s1_5032, a5_5027 + -972<i32>, s2_5042, s6_5037, dwLocF8, dwLocC8, s9, out s0_14154, out s1_5108, out a0_5098, out a3_14155, out a5_14156, out s2_14157, out s3_14158, out s4_14159, out s5_14160, out s6_14161)
	branch a0_5098 <= 0<32> l23039B80
l23039B14:
	word32 a0_5123
	word32 s0_5132
	word32 a1_14218
	word32 s2_14222
	word32 s3_14223
	word32 s6_14226
	word32 s8_14227
	word32 s5_14225
	word32 s4_14224
	word32 a4_14220
	word32 a5_14221
	word32 a3_14219
	word32 s1_14217
	ra_5106 = fdt_getprop(ra_5106, s1_5108, 0x2307A7F0<32>, dwLocF8, 0<32>, dwLocBC, dwLoc28, dwArg08, out s0_5132, out s1_14217, out a0_5123, out a1_14218, out a3_14219, out a4_14220, out a5_14221, out s2_14222, out s3_14223, out s4_14224, out s5_14225, out s6_14226, out s8_14227)
	word32 s1_5143 = 0<32>
	branch a0_5123 == 0<32> l23039B30
l23039B28:
	s1_5143 = fdt32_to_cpu(Mem5021[a0_5123:word32])
l23039B30:
	branch CONVERT(Mem5021[s0_5132 + -108<i32>:byte], byte, word32) >u 2<32> l23039B7A
l23039B3A:
	branch CONVERT(Mem5021[0x4201A623<32>:byte], byte, word32) >u 2<32> l23039B7A
l23039B46:
	branch Mem5021[0x4200E244<32>:int32] == 0<32> l23039E40
l23039E40:
	word32 a5_14242
	xTaskGetTickCount(out a5_14242)
l23039B52:
	word32 a5_14243
	xTaskGetTickCountFromISR(out a5_14243)
l23039B56:
	word32 a2_14246
	word32 a5_14249
	word32 s3_14251
	word32 s5_14253
	word32 s6_14254
	word32 s8_14256
	word32 s10_14258
	word32 s11_14259
	word32 s9_14257
	word32 s7_14255
	word32 s4_14252
	word32 s2_14250
	word32 a4_14248
	word32 a3_14247
	word32 a1_14245
	word32 a0_14244
	ra_5106 = bl_printk(ra_5106, 0x2307A800<32>, 0x23079AA4<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_5143, out a0_14244, out a1_14245, out a2_14246, out a3_14247, out a4_14248, out a5_14249, out s2_14250, out s3_14251, out s4_14252, out s5_14253, out s6_14254, out s7_14255, out s8_14256, out s9_14257, out s10_14258, out s11_14259)
l23039B7A:
	ble_controller_set_tx_pwr(s1_5143)
l23039B80:
	gpOut = dwArgD8
	return ra_5106
hal_board_cfg_exit:
l23039042:
	branch Mem3238[0x4200E244<32>:int32] == 0<32> l23039BAC
l23039BAC:
	word32 a5_13779
	xTaskGetTickCount(out a5_13779)
l2303904E:
	word32 a5_13780
	xTaskGetTickCountFromISR(out a5_13780)
l23039052:
	word32 s1_13802
	word32 s2_13809
	word32 s4_13811
	word32 s11_13818
	word32 s5_13812
	word32 s9_13816
	word32 s10_13817
	word32 s6_13813
	word32 s8_13815
	word32 s7_13814
	word32 s3_13810
	word32 a4_13807
	word32 a5_13808
	word32 a3_13806
	word32 a0_13803
	word32 a2_13805
	word32 a1_13804
	bl_printk(ra_3219, 0x2307262C<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13802, out a0_13803, out a1_13804, out a2_13805, out a3_13806, out a4_13807, out a5_13808, out s2_13809, out s3_13810, out s4_13811, out s5_13812, out s6_13813, out s7_13814, out s8_13815, out s9_13816, out s10_13817, out s11_13818)
l2303907C:
l230384DC:
	branch Mem484[0x4200E244<32>:int32] == 0<32> l23038A74
l23038A74:
	word32 a5_13309
	xTaskGetTickCount(out a5_13309)
l230384E8:
	word32 a5_13310
	xTaskGetTickCountFromISR(out a5_13310)
l230384EC:
	word32 s9_13325
	word32 s11_13327
	word32 s10_13326
	word32 a0_13312
	word32 a1_13313
	word32 a2_13314
	word32 s8_13324
	word32 s7_13323
	word32 a3_13315
	word32 s6_13322
	word32 s5_13321
	word32 a4_13316
	word32 a5_13317
	word32 s2_13318
	word32 s4_13320
	word32 s3_13319
	word32 s1_13311
	bl_printk(ra_313, 0x2307262C<32>, 0x23079AA4<32>, Mem484[sp_3 + 8<i32>:word32], Mem484[sp_3 + 40<i32>:word32], Mem484[sp_3 + 112<i32>:word32], Mem484[sp_3 + 116<i32>:word32], Mem484[sp_3 + 152<i32>:word32], Mem484[sp_3 + 188<i32>:word32], out s1_13311, out a0_13312, out a1_13313, out a2_13314, out a3_13315, out a4_13316, out a5_13317, out s2_13318, out s3_13319, out s4_13320, out s5_13321, out s6_13322, out s7_13323, out s8_13324, out s9_13325, out s10_13326, out s11_13327)
l23038516:
l23038308:
	branch CONVERT(Mem34[s0_125 + -108<i32>:byte], byte, word32) >u 4<32> l2303834E
l23038312:
	branch CONVERT(Mem34[0x4201A623<32>:byte], byte, word32) >u 4<32> l2303834E
l2303831E:
	branch Mem34[0x4200E244<32>:int32] == 0<32> l23038356
l23038356:
	word32 a5_13042
	xTaskGetTickCount(out a5_13042)
l23038328:
	word32 a5_13043
	xTaskGetTickCountFromISR(out a5_13043)
l2303832C:
	word32 s1_13058
	word32 a1_13060
	word32 a2_13061
	word32 a4_13063
	word32 s2_13065
	word32 s3_13066
	word32 s7_13070
	word32 s8_13071
	word32 s11_13074
	word32 s10_13073
	word32 s9_13072
	word32 s5_13068
	word32 s6_13069
	word32 s4_13067
	word32 a5_13064
	word32 a3_13062
	word32 a0_13059
	bl_printk(ra, 0x23079BB8<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13058, out a0_13059, out a1_13060, out a2_13061, out a3_13062, out a4_13063, out a5_13064, out s2_13065, out s3_13066, out s4_13067, out s5_13068, out s6_13069, out s7_13070, out s8_13071, out s9_13072, out s10_13073, out s11_13074)
l2303834E:
l23038252:
	branch CONVERT(Mem34[s0_44 + -108<i32>:byte], byte, word32) >u 4<32> l23038298
l2303825C:
	branch CONVERT(Mem34[0x4201A623<32>:byte], byte, word32) >u 4<32> l23038298
l23038268:
	branch Mem34[0x4200E244<32>:int32] == 0<32> l230382A0
l230382A0:
	word32 a5_13001
	xTaskGetTickCount(out a5_13001)
l23038272:
	word32 a5_13002
	xTaskGetTickCountFromISR(out a5_13002)
l23038276:
	word32 s11_13034
	word32 s7_13030
	word32 s8_13031
	word32 s9_13032
	word32 s10_13033
	word32 s1_13018
	word32 a0_13019
	word32 a3_13022
	word32 s4_13027
	word32 s6_13029
	word32 s5_13028
	word32 a4_13023
	word32 s3_13026
	word32 s2_13025
	word32 a5_13024
	word32 a2_13021
	word32 a1_13020
	bl_printk(ra, 0x23079B04<32>, 0x23079AA4<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13018, out a0_13019, out a1_13020, out a2_13021, out a3_13022, out a4_13023, out a5_13024, out s2_13025, out s3_13026, out s4_13027, out s5_13028, out s6_13029, out s7_13030, out s8_13031, out s9_13032, out s10_13033, out s11_13034)
l23038298:


word32 bl_tsen_adc_get(word32 ra, word32 s0, word32 a0, word32 a1, word32 fs1, word32 fflags, word32 frm, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg6C, ptr32 & s0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & fs1Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] fs1:[0..31] ra:[0..31] s0:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +006C:[0..31]
// LiveOut: a1 a3 fflags frm fs1 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa4 fa5 fflags frm fs0 fs1 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bl_tsen_adc_get_entry:
l23039E46:
	word32 a5_130 = 0xFFFFFFF<32>
	word32 s0_190 = 0x4200DC72<32>
	branch CONVERT(Mem5[0x4200DC72<32>:uint16], uint16, word32) != 0xFFFFFFF<32> l23039EF8
l23039E6C:
	Mem28[0x4200DC72<32>:word16] = 0<16>
	word32 a6_446
	word32 a7_447
	word32 a2_442
	word32 a3_443
	word32 a5_445
	word32 a4_444
	memcpy(fp + -64<i32>, 0x2307A848<32>, 0xE<32>, out a2_442, out a3_443, out a4_444, out a5_445, out a6_446, out a7_447)
	GLB_Set_ADC_CLK(1<32>, 0<32>, 7<32>)
	ADC_Disable()
	ADC_Enable()
	ADC_Reset()
	ADC_Init(fp + -64<i32>)
	word32 a1_70 = ADC_Channel_Config(0xE<32>, 0x17<32>, 0<32>)
	ADC_FIFO_Cfg(fp + -68<i32>, ADC_Tsen_Init(0<32>))
	word32 sp_86
	word32 ra_93
	word32 a0_94
	call 0x4200C9E8<p32> (retsize: 0;)
		uses: a0:0x4200DC72<32>,a1:a1_70,fflags:fflags,frm:frm,fs1:fs1,ra:0x4200CEBA<p32>,s0:0x4200DC72<32>,s1:0x4200E000<32>,s2:a0,s3:a1
		defs: a0:a0_94,ra:ra_93,s0:s0_90,sp:sp_86
	word32 a5_111 = Mem45[0x4200E244<32>:int32]
	branch a0_94 != 1<32> l23039F40
l23039F40:
	branch a5_111 == 0<32> l23039F6A
l23039F6A:
	word32 a5_483
	xTaskGetTickCount(out a5_483)
l23039F42:
	word32 a5_484
	xTaskGetTickCountFromISR(out a5_484)
l23039F46:
	word32 s1_485
	word32 a0_486
	word32 a3_489
	word32 a2_488
	word32 a1_487
	word32 a4_490
	word32 s2_491
	word32 s3_492
	word32 s4_493
	word32 s5_494
	word32 s6_495
	word32 s7_496
	word32 s8_497
	word32 s9_498
	word32 s10_499
	word32 s11_500
	ra = bl_printk(ra_93, 0x2307A8F8<32>, 0x2307A89C<32>, Mem45[sp_86 + 8<i32>:word32], Mem45[sp_86 + 40<i32>:word32], Mem45[sp_86 + 112<i32>:word32], Mem45[sp_86 + 116<i32>:word32], Mem45[sp_86 + 152<i32>:word32], Mem45[sp_86 + 188<i32>:word32], out s1_485, out a0_486, out a1_487, out a2_488, out a3_489, out a4_490, out a5_130, out s2_491, out s3_492, out s4_493, out s5_494, out s6_495, out s7_496, out s8_497, out s9_498, out s10_499, out s11_500)
l23039ED4:
	branch a5_111 == 0<32> l23039F3A
l23039F3A:
	word32 a5_448
	xTaskGetTickCount(out a5_448)
l23039ED6:
	word32 a5_449
	xTaskGetTickCountFromISR(out a5_449)
l23039EDA:
	word32 a0_468
	word32 s1_467
	word32 a3_471
	word32 a2_470
	word32 s2_473
	word32 a1_469
	word32 s3_474
	word32 a4_472
	word32 s5_476
	word32 s6_477
	word32 s4_475
	word32 s8_479
	word32 s9_480
	word32 s7_478
	word32 s11_482
	word32 s10_481
	ra = bl_printk(ra_93, 0x2307A8CC<32>, 0x2307A89C<32>, Mem45[sp_86 + 8<i32>:word32], Mem45[sp_86 + 40<i32>:word32], Mem45[sp_86 + 112<i32>:word32], Mem45[sp_86 + 116<i32>:word32], Mem45[sp_86 + 152<i32>:word32], Mem45[sp_86 + 188<i32>:word32], out s1_467, out a0_468, out a1_469, out a2_470, out a3_471, out a4_472, out a5_130, out s2_473, out s3_474, out s4_475, out s5_476, out s6_477, out s7_478, out s8_479, out s9_480, out s10_481, out s11_482)
l23039EF8:
	word32 fa0_217
	word32 fflags_220
	word32 frm_221
	word32 fs1_223
	word32 s0_225
	word32 s3_230
	word32 s2_229
	word32 a1_210
	word32 ra_224 = TSEN_Get_Temp(ra, s0_190, a5_130, fs1, fflags, frm, dwLoc0C, s0, out s0_225, out a1_210, out s2_229, out s3_230, out fs1_223, out fa0_217, out fflags_220, out frm_221)
	branch s3_230 == 0<32> l23039F1C
l23039F08:
	word32 a1_247
	__extendsfdf2(ra_224, fa0_217, fflags_220, frm_221, out a1_247)
	word32 s4_458
	word32 a7_456
	word32 s3_457
	word32 s10_464
	word32 s9_463
	word32 s11_465
	word32 s7_461
	word32 s8_462
	word32 t4_466
	word32 s6_460
	word32 s5_459
	word32 a0_451
	word32 a2_452
	word32 a3_453
	word32 a5_455
	word32 a4_454
	word32 s1_450
	printf(ra_224, 0x2307A91C<32>, a1_247, dwLoc48, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C, out s1_450, out a0_451, out a1_210, out a2_452, out a3_453, out a4_454, out a5_455, out a7_456, out s2_229, out s3_457, out s4_458, out s5_459, out s6_460, out s7_461, out s8_462, out s9_463, out s10_464, out s11_465, out t4_466)
l23039F1C:
	branch s2_229 == 0<32> l23039F28
l23039F20:
	Mem279[s2_229:word16] = SLICE(CONVERT(fa0_217, word32, int32), word16, 0)
l23039F28:
	s0Out = s0_225
	a1Out = a1_210
	a3Out = s2
	fs1Out = fs1_223
	fflagsOut = fflags_220
	frmOut = frm_221
	return dwLoc08
bl_tsen_adc_get_exit:


word32 hal_wifi_start_firmware_task(word32 ra, word32 mstatus, word32 dwArg14, word32 dwArgD8, word32 dwArg01A4, ptr32 & a4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stack_wifi
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +00D8:[0..31] Stack +01A4:[0..31]
// LiveOut: a4 ra s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
hal_wifi_start_firmware_task_entry:
l23039F70:
	word32 a4_29
	word32 s5_34
	word32 s6_35
	word32 s7_36
	word32 tp_53
	word32 t0_54
	word32 s0_55
	word32 s1_56
	word32 a0_57
	word32 a2_58
	word32 a3_59
	word32 a5_60
	word32 s2_61
	word32 ra_31 = xTaskCreateStatic(ra, 0x230550FA<32>, 0x2307A948<32>, 1536<i32>, 0<32>, 0x1E<32>, 0x420132B4<32>, 0x42014AB4<32>, mstatus, dwLoc0C, dwArg14, dwArgD8, dwArg01A4, out tp_53, out t0_54, out s0_55, out s1_56, out a0_57, out a2_58, out a3_59, out a4_29, out a5_60, out s2_61, out s5_34, out s6_35, out s7_36)
	a4Out = a4_29
	s5Out = s5_34
	s6Out = s6_35
	s7Out = s7_36
	return ra_31
hal_wifi_start_firmware_task_exit:


word32 bl_gpio_enable_output(word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_trigger
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a5 ra t3
// Preserved: sp
bl_gpio_enable_output_entry:
l23039FA8:
	branch a1 != 0<32> l23039FE6
l23039FE6:
l23039FC6:
l23039FCC:
	branch a2 == 0<32> l23039FD4
l23039FCE:
l23039FD4:
	word32 ra_31
	call 0x4200C5D8<p32> (retsize: 0;)
		uses: a0:fp + 0xFFFFFFE8<32>,a1:a1,a2:a2,ra:0x4200BFD6<p32>
		defs: ra:ra_31
	return ra_31
bl_gpio_enable_output_exit:


void bl_gpio_output_set(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _cb_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
bl_gpio_output_set_entry:
l23039FEC:
	GLB_GPIO_Write(a0, CONVERT(a1 != 0<32>, bool, word32), a3)
	return
bl_gpio_output_set_exit:


void proc_entry_looprt(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a4, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg4C, word32 dwArg5C, word32 dwArgC8, word32 dwArgF8, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +005C:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
l2303A016:
	word32 a2_22
	word32 a5_23
	word32 a4_26
	word32 a0_65
	word32 a1_66
	word32 s4_67
	word32 s8_68
	puts(s0_43 + -1704<i32>, out a0_65, out a1_66, out a2_22, out a4_26, out a5_23, out s4_67, out s8_68)
	word32 a3_39
	word32 s1_69
	word32 a0_70
	word32 a1_71
	word32 a2_72
	word32 a4_73
	word32 a5_74
	word32 s2_75
	word32 s3_76
	word32 s4_77
	word32 s0_43 = vTaskDelay(1000<i32>, a2_22, a3_39, a4_26, a5_23, mstatus, Mem0[sp + 36<i32>:word32], Mem0[sp + 40<i32>:word32], Mem0[sp + 312<i32>:word32], Mem0[sp + 376<i32>:word32], out s1_69, out a0_70, out a1_71, out a2_72, out a3_39, out a4_73, out a5_74, out s2_75, out s3_76, out s4_77)
proc_entry_looprt_exit:
proc_entry_looprt_entry:
l2303A000:
	bloop_run(ra, s1, 0x42014B14<32>, a1, a2, a3, a4, s5, s6, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg28, dwArg4C, dwArg5C, dwArgC8, dwArgF8, dwArg0138)


word32 looprt_evt_notify_async(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: a4 a5 mstatus ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
looprt_evt_notify_async_entry:
l2303A028:
l2303A034_thunk_bloop_evt_set_async:
	word32 mstatus_20
	word32 s1_23
	word32 ra_21 = bloop_evt_set_async(ra, 0x42014B14<32>, a0, a1, a3, a4, mstatus, dwArg08, dwArg14, dwArg38, dwArg50, dwArg54, dwArg58, dwArg78, dwArg9C, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s1_23, out mstatus_20)
	s0Out = s0_22
	s1Out = s1_23
	a4Out = a4_18
	a5Out = a5_19
	s2Out = s2_24
	s3Out = s3_25
	mstatusOut = mstatus_20
	return ra_21
looprt_evt_notify_async_exit:


word32 looprt_evt_status_dump(word32 ra, word32 a3, word32 s5, word32 dwArg20, word32 dwArg24, word32 dwArg6C, word32 dwArg010C, ptr32 & s1Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
// MayUse:  a3:[0..31] ra:[0..31] s5:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +006C:[0..31] Stack +010C:[0..31]
// LiveOut: a5 a6 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
looprt_evt_status_dump_entry:
l2303A038:
l2303A040_thunk_bloop_status_dump:
	word32 a5_14
	word32 a6_15
	word32 s1_19
	word32 s0_41
	word32 a3_42
	word32 s5_43
	word32 ra_17 = bloop_status_dump(ra, a3, s5, dwArg20, dwArg24, dwArg6C, dwArg010C, out s0_41, out s1_19, out a3_42, out a5_14, out a6_15, out s5_43)
	s1Out = s1_19
	a5Out = a5_14
	a6Out = a6_15
	return ra_17
looprt_evt_status_dump_exit:


word32 looprt_start(word32 ra, word32 s1, word32 a2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg18, word32 dwArg40, word32 dwArg44, word32 dwArg4C, word32 dwArg8C, word32 dwArgC8, word32 dwArgEC, word32 dwArg0108, word32 dwArg0148, word32 dwArg0194, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +008C:[0..31] Stack +00C8:[0..31] Stack +00EC:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0194:[0..31]
// LiveOut: a3 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
looprt_start_entry:
l2303A044:
	word32 a3_21
	word32 s5_32
	word32 ra_25 = bloop_init(ra, 0x42014B14<32>, dwLoc08, dwArg18, dwArg40, dwArg44, s1, dwArg8C, out a3_21, out s5_32)
	bloop_handler_register(0x42014B14<32>, 0x4200D758<32>, 0x1F<32>)
	word32 a5_54
	word32 a6_55
	word32 s1_59
	word32 a2_85
	word32 a5_86
	word32 s0_88
	word32 a3_94
	word32 a4_95
	word32 tp_152
	word32 t0_153
	word32 s1_154
	word32 a0_155
	word32 s2_156
	word32 s5_157
	word32 s6_158
	word32 s7_159
	word32 ra_97 = xTaskCreateStatic(looprt_evt_status_dump(ra_25, a3_21, s5_32, dwArg00, dwArg04, dwArg4C, dwArgEC, out s1_59, out a5_54, out a6_55), 0x2303A000<32>, 0x2307A94C<32>, s1_59, 0<32>, 0x1A<32>, a5_54, a6_55, mstatus, a2, dwArg04, dwArgC8, dwArg0194, out tp_152, out t0_153, out s0_88, out s1_154, out a0_155, out a2_85, out a3_94, out a4_95, out a5_86, out s2_156, out s5_157, out s6_158, out s7_159)
	word32 a3_110
	word32 s2_115
	word32 s3_116
	word32 s1_114 = bloop_wait_startup(a2_85, a3_94, a4_95, a5_86, mstatus, dwLoc0C, dwLoc08, dwArg0108, dwArg0148, out a3_110, out s2_115, out s3_116)
	s0Out = s0_88
	s1Out = s1_114
	a3Out = a3_110
	s2Out = s2_115
	s3Out = s3_116
	return ra_97
looprt_start_exit:


word32 looprt_handler_register(word32 a0, word32 a1, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_hook_on_looprt
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
looprt_handler_register_entry:
l2303A0A6:
	branch Mem0[0x42014B14<32>:int32] == 0<32> l2303A0BC
l2303A0BC:
	a5Out = 0x42015000<32>
	return <invalid>
l2303A0B2:
l2303A0B8_thunk_bloop_handler_register:
	bloop_handler_register(0x42014B14<32>, a0, a1)
	a5Out = a5_13
	return <invalid>
looprt_handler_register_exit:


word32 looprt_timer_register(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _led_bloop_evt
// MayUse:  a0:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
looprt_timer_register_entry:
l2303A0C0:
	word32 a3_11
	word32 a4_12
	word32 a5_13
	bloop_timer_register(0x42014B14<32>, a0, out a3_11, out a4_12, out a5_13)
	a4Out = a4_12
	a5Out = a5_13
	return a3_11
looprt_timer_register_exit:


void _cb_led_trigger(word32 ra, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
_cb_led_trigger_entry:
l2303A0DA:
	bl_gpio_output_set(CONVERT(Mem7[Mem7[a1 + 56<i32>:word32] + 48<i32>:byte], byte, word32), CONVERT(a1 != 0<32>, bool, word32), a3)
	word32 a5_21 = 1<32>
	branch CONVERT(Mem7[0x4201A625<32>:byte], byte, word32) >u 1<32> l2303A148
l2303A0FE:
	word32 a4_23 = CONVERT(Mem7[0x4201A626<32>:byte], byte, word32)
	branch a4_23 >u 1<32> l2303A148
l2303A10A:
	branch Mem7[0x4200E244<32>:int32] == 0<32> l2303A158
l2303A158:
	word32 a5_150
	xTaskGetTickCount(out a5_150)
l2303A114:
	word32 a5_151
	xTaskGetTickCountFromISR(out a5_151)
l2303A118:
	branch a4_23 != 0<32> l2303A15E
l2303A15E:
l2303A11E:
l2303A126:
	word32 s1_152
	word32 a0_153
	word32 a1_154
	word32 a2_155
	word32 a3_156
	word32 a4_157
	word32 s2_158
	word32 s3_159
	word32 s4_160
	word32 s5_161
	word32 s6_162
	word32 s7_163
	word32 s8_164
	word32 s9_165
	word32 s10_166
	word32 s11_167
	bl_printk(ra, 0x2307A98C<32>, 0x2307A97C<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_152, out a0_153, out a1_154, out a2_155, out a3_156, out a4_157, out a5_21, out s2_158, out s3_159, out s4_160, out s5_161, out s6_162, out s7_163, out s8_164, out s9_165, out s10_166, out s11_167)
l2303A148:
	Mem82[CONVERT(a5_21 <u 1<i32>, bool, word32) + 56<i32>:word32] = Mem7[a5_21 + 56<i32>:word32]
	return
_cb_led_trigger_exit:


void _led_bloop_msg(word32 ra, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
_led_bloop_msg_entry:
l2303A168:
	branch CONVERT(Mem0[0x4201A625<32>:byte], byte, word32) >u 1<32> l2303A1E4
l2303A176:
	branch CONVERT(Mem0[0x4201A626<32>:byte], byte, word32) >u 1<32> l2303A1E4
l2303A1E4:
	return
l2303A182:
	branch Mem0[0x4200E244<32>:int32] == 0<32> l2303A1DE
l2303A1DE:
	word32 a5_157
	xTaskGetTickCount(out a5_157)
l2303A194:
	word32 a5_158
	xTaskGetTickCountFromISR(out a5_158)
l2303A198:
	word32 s11_175
	word32 s10_174
	word32 s9_173
	word32 s8_172
	word32 s7_171
	word32 s6_170
	word32 s5_169
	word32 s4_168
	word32 s3_167
	word32 s2_166
	word32 a5_165
	word32 a4_164
	word32 a3_163
	word32 a2_162
	word32 a1_161
	word32 a0_160
	word32 s1_159
	bl_printk(ra, 0x2307AA48<32>, 0x2307A97C<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_159, out a0_160, out a1_161, out a2_162, out a3_163, out a4_164, out a5_165, out s2_166, out s3_167, out s4_168, out s5_169, out s6_170, out s7_171, out s8_172, out s9_173, out s10_174, out s11_175)
	return
_led_bloop_msg_exit:


void _led_bloop_evt(word32 ra, word32 s1, word32 a1, word32 s6, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] ra:[0..31] s1:[0..31] s6:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
_led_bloop_evt_entry:
l2303A1E8:
	word32 a3_162 = Mem25[s1:word32]
	word32 s9_153 = a1
	word32 s8_152 = a3_162
l2303A21E:
	branch (s1 & 1<i32>) == 0<32> l2303A248
l2303A248:
	branch (s1 & 2<i32>) == 0<32> l2303A304
l2303A304:
	branch s1 == 0<32> l2303A228
l2303A306:
	word32 s5_525
	word32 a7_521
	word32 a0_515
	word32 s1_514
	word32 s8_528
	word32 s9_529
	word32 s10_530
	word32 s11_531
	word32 t4_532
	word32 a2_517
	word32 a1_516
	word32 a4_519
	word32 a3_518
	word32 a5_520
	word32 s4_524
	word32 s3_523
	word32 s2_522
	word32 s6_526
	word32 s7_527
	printf(ra, 0x2307AA20<32>, a3_162, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_514, out a0_515, out a1_516, out a2_517, out a3_518, out a4_519, out a5_520, out a7_521, out s2_522, out s3_523, out s4_524, out s5_525, out s6_526, out s7_527, out s8_528, out s9_529, out s10_530, out s11_531, out t4_532)
l2303A31E:
l2303A24E:
	word32 s2_146 = Mem47[s9_153 + 12<i32>:int32]
	word32 s3_147 = 0<32>
	word32 s0_105 = Mem47[s2_146 + 12<i32>:int32]
	branch s0_105 == 0<32> l2303A25E
l2303A25A:
	s3_147 = Mem47[s0_105 + 4<i32>:int32]
l2303A25E:
l2303A266:
	branch s0_105 != s2_146 + 8<i32> l2303A272
l2303A272:
	branch CONVERT(Mem81[0x4201A625<32>:byte], byte, word32) >u 2<32> l2303A2CE
l2303A280:
	word32 a4_85 = CONVERT(Mem81[0x4201A626<32>:byte], byte, word32)
	branch a4_85 >u 2<32> l2303A2CE
l2303A28C:
	branch Mem81[0x4200E244<32>:int32] == 0<32> l2303A2FE
l2303A2FE:
	word32 a5_533
	xTaskGetTickCount(out a5_533)
l2303A296:
	word32 a5_534
	xTaskGetTickCountFromISR(out a5_534)
l2303A29A:
	branch a4_85 != 0<32> l2303A2A4
l2303A2A2:
l2303A2A4:
	s0_105 = Mem81[a4_85 + 44<i32>:word32]
	branch a4_85 != 0<32> l2303A2AC
l2303A2AA:
l2303A2AC:
	word32 s10_545
	word32 s11_546
	word32 a0_535
	word32 a1_536
	word32 a2_537
	word32 a3_538
	word32 s7_544
	word32 a4_539
	word32 a5_540
	word32 s4_541
	word32 s5_542
	word32 s6_543
	ra = bl_printk(ra, 0x2307A9D4<32>, 0x2307A97C<32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1, out a0_535, out a1_536, out a2_537, out a3_538, out a4_539, out a5_540, out s2_146, out s3_147, out s4_541, out s5_542, out s6_543, out s7_544, out s8_152, out s9_153, out s10_545, out s11_546)
l2303A2CE:
	word32 a4_163
	word32 a5_164
	a3_162 = looprt_timer_register(s0_105 + 8<i32>, out a4_163, out a5_164)
	word32 s0_169 = Mem81[a4_163:word32]
	Mem170[a5_164 + 4<i32>:word32] = a4_163
	Mem171[a4_163:word32] = a5_164
	word32 a5_173 = Mem171[s2_146 + 4<i32>:int32]
	Mem174[s0_169:word32] = s2_146
	Mem175[a5_173 + 4<i32>:word32] = s0_169
	Mem176[s2_146 + 4<i32>:word32] = s0_169
	Mem177[s0_169:word32] = a5_173
	word32 a5_178 = 0<32>
	branch s3_147 == 0<32> l2303A2F8
l2303A2F4:
	a5_178 = Mem177[s3_147 + 4<i32>:int32]
l2303A2F8:
	s0_105 = s3_147
	s3_147 = a5_178
l2303A26E:
	s1 = s1 & 0xFFFFFFFD<32>
l2303A224:
	s1 = s1 & 0xFFFFFFFE<32>
l2303A226:
	branch s1 != 0<32> l2303A21E
l2303A228:
	Mem206[s8_152:word32] = 0<32>
	0<32> = dwArg0128
	return
_led_bloop_evt_exit:


word32 loopset_led_hook_on_looprt(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
loopset_led_hook_on_looprt_entry:
l2303A320:
	Mem7[0x42014FB8<32>:word32] = 0x42014FB4<32>
	Mem8[0x42014FB4<32>:word32] = 0x42014FB4<32>
	Mem9[0x42014FC8<32>:word32] = 0x42014FB4<32>
	Mem10[0x42014FC4<32>:word32] = 0x42014FB4<32>
l2303A33E_thunk_looprt_handler_register:
	word32 a5_16
	word32 a4_15 = looprt_handler_register(0x2307AA38<32>, 1<32>, out a5_16)
	a5Out = a5_16
	return a4_15
loopset_led_hook_on_looprt_exit:


word32 loopset_led_trigger(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg94, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_gpio_init_from_dts
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a4 a5 mstatus ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
loopset_led_trigger_entry:
l2303A342:
	word32 a0_23
	word32 s2_32
	word32 s3_33
	word32 s1_209
	word32 a1_210
	word32 a2_211
	word32 a3_212
	word32 a4_213
	word32 a5_214
	word32 a6_215
	word32 s4_216
	word32 s8_217
	pvPortMalloc(ra, s1, 60<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_209, out a0_23, out a1_210, out a2_211, out a3_212, out a4_213, out a5_214, out a6_215, out s2_32, out s3_33, out s4_216, out s8_217)
	branch a0_23 != 0<32> l2303A39C
l2303A39C:
	word32 t1_218
	word32 a0_219
	word32 a1_220
	word32 a2_221
	word32 a3_222
	word32 a4_223
	word32 a5_224
	word32 ra_47 = memset(ra, a0_23, 0<32>, 60<i32>, out t1_218, out a0_219, out a1_220, out a2_221, out a3_222, out a4_223, out a5_224)
	Mem51[a0_23 + 48<i32>:word32] = s2_32
	word32 s1_61 = bloop_timer_init(ra_47, a0_23 + 8<i32>, 0<32>)
	bloop_timer_repeat_enable(s1_61)
	word32 s0_78 = bloop_timer_configure(s1_61, s3_33, a0_23, 1<32>, dwArg94)
	word32 ra_89 = bl_gpio_enable_output(0<32>, 0<32>)
	word32 a5_225
	word32 a4_92 = vTaskEnterCritical(1<32>, mstatus, out a5_225)
	word32 a5_94 = Mem51[a4_92 + 12<i32>:word32]
	Mem96[a5_94 + 8<i32>:word32] = s0_78
	Mem97[a4_92 + 4<i32>:word32] = s0_78
	Mem98[s0_78 + 12<i32>:word32] = a5_94
	Mem99[s0_78:word32] = a4_92
	word32 a4_102
	word32 a5_226
	word32 a3_101 = vTaskExitCritical(a5_94 + 8<i32>, mstatus, out a4_102, out a5_226)
l2303A40E_thunk_looprt_evt_notify_async:
	word32 a4_115
	word32 a5_116
	word32 mstatus_117
	word32 s0_119
	word32 s1_120
	word32 s2_121
	word32 s3_122
	word32 ra_118 = looprt_evt_notify_async(ra_89, 1<32>, 2<32>, a3_101, a4_102, mstatus, dwArg08, dwArg14, dwArg38, dwArg50, dwArg54, dwArg58, dwArg78, dwArg9C, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_119, out s1_120, out a4_115, out a5_116, out s2_121, out s3_122, out mstatus_117)
	s0Out = s0_119
	s1Out = s1_120
	a4Out = a4_115
	a5Out = a5_116
	s2Out = s2_121
	s3Out = s3_122
	mstatusOut = mstatus_117
	return ra_118
loopset_led_trigger_exit:
l2303A35C:
	branch Mem16[0x4200E244<32>:int32] == 0<32> l2303A396
l2303A396:
	word32 a5_227
	xTaskGetTickCount(out a5_227)
l2303A366:
	word32 a5_228
	xTaskGetTickCountFromISR(out a5_228)
l2303A36A:
	word32 s1_229
	word32 a0_230
	word32 a1_231
	word32 a2_232
	word32 a3_233
	word32 a4_234
	word32 a5_235
	word32 s2_236
	word32 s3_237
	word32 s4_238
	word32 s5_239
	word32 s6_240
	word32 s7_241
	word32 s8_242
	word32 s9_243
	word32 s10_244
	word32 s11_245
	bl_printk(ra, 0x2307262C<32>, 0x2307A97C<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_229, out a0_230, out a1_231, out a2_232, out a3_233, out a4_234, out a5_235, out s2_236, out s3_237, out s4_238, out s5_239, out s6_240, out s7_241, out s8_242, out s9_243, out s10_244, out s11_245)
l2303A394:


void netifapi_do_netif_add(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg78, word32 dwArgA4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +00A4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_do_netif_add_entry:
l2303A412:
	branch netif_add(ra, Mem5[Mem5[a1 + 12<i32>:word32] + 8<i32>:word32], a1, a2, a3, a5, Mem5[a0 + 32<i32>:int32], s4, s7, mstatus, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg48, dwArg58, dwArg64, dwArg78, dwArgA4, dwArgE8, dwArgF8, dwArg0118) == 0<32> l2303A434
l2303A434:
l2303A42C:
l2303A42E:
	return
netifapi_do_netif_add_exit:


void netifapi_do_netif_set_addr(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_do_netif_set_addr_entry:
l2303A438:
	word32 s0_71
	word32 s1_72
	word32 a1_73
	word32 a2_74
	word32 a3_75
	word32 a4_76
	word32 a5_77
	word32 s2_78
	word32 s3_79
	word32 s4_80
	word32 s5_81
	word32 s6_82
	word32 s7_83
	word32 mstatus_84
	netif_set_addr(ra, s1, Mem5[Mem5[a1 + 12<i32>:word32] + 8<i32>:word32], a1, a2, a3, a4, a5, s3, s4, s7, mstatus, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg1C, dwArg34, dwArg38, dwArg48, dwArg58, dwArg5C, dwArg64, dwArg68, dwArg78, dwArg88, dwArgA8, dwArg0118, dwArg0128, out s0_71, out s1_72, out a1_73, out a2_74, out a3_75, out a4_76, out a5_77, out s2_78, out s3_79, out s4_80, out s5_81, out s6_82, out s7_83, out mstatus_84)
	return
netifapi_do_netif_set_addr_exit:


void netifapi_do_netif_common(word32 ra, word32 a0, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 ra t1
// Preserved: sp
netifapi_do_netif_common_entry:
l2303A450:
	word32 t1_5 = Mem0[a0 + 16<i32>:int32]
	word32 a0_7 = Mem0[a0 + 8<i32>:word32]
	branch t1_5 == 0<32> l2303A45E
l2303A45E:
	call Mem10[a0 + 12<i32>:word32] (retsize: 0;)
		uses: a0:a0_7,ra:ra,Stack +0084:ra
	return
l2303A45C:
	call t1_5 (retsize: 0;)
		uses: a0:a0_7,ra:ra,Stack +0010:dwArg10
	return
netifapi_do_netif_common_exit:


word32 netifapi_netif_add(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg88, word32 dwArg98, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_netif_add_entry:
l2303A46E:
	branch a1 != 0<32> l2303A47C
l2303A474:
l2303A47C:
	branch a2 != 0<32> l2303A486
l2303A47E:
l2303A486:
	branch a3 != 0<32> l2303A490
l2303A488:
	a3 = 0x230827AC<32>
l2303A490:
	word32 s1_76
	word32 a5_140
	word32 s2_141
	word32 s3_142
	word32 a3_138
	word32 a4_139
	word32 s0_75 = tcpip_api_call(ra, s0, fp + -52<i32>, a3, a4, a5, s2, mstatus, a5, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, out s1_76, out a3_138, out a4_139, out a5_140, out s2_141, out s3_142)
	s1Out = s1_76
	return s0_75
netifapi_netif_add_exit:


word32 netifapi_netif_set_addr(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg88, word32 dwArg98, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & a4Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoEnter
//      stateConnectedIPYes_exit
//      bl_rx_sm_disconnect_ind
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_netif_set_addr_entry:
l2303A4B0:
	branch a1 != 0<32> l2303A4BE
l2303A4B6:
l2303A4BE:
	branch a2 != 0<32> l2303A4C8
l2303A4C0:
l2303A4C8:
	branch a3 != 0<32> l2303A4D2
l2303A4CA:
	a3 = 0x230827AC<32>
l2303A4D2:
	word32 a3_64
	word32 a4_65
	word32 s3_71
	word32 a5_134
	word32 s2_135
	word32 s1_133
	tcpip_api_call(ra, s0, fp + -52<i32>, a3, a4, a5, s2, mstatus, dwLoc2C, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, out s1_133, out a3_64, out a4_65, out a5_134, out s2_135, out s3_71)
	a4Out = a4_65
	s3Out = s3_71
	return a3_64
netifapi_netif_set_addr_exit:


word32 netifapi_netif_common(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg88, word32 dwArg98, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoEnter
//      stateGlobalGuard_AP
//      stateConnectedIPYes_exit
//      stateGlobalGuard_stop
//      wifi_netif_dhcp_start
//      bl_rx_sm_connect_ind
//      bl_rx_sm_disconnect_ind
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 a5 s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_netif_common_entry:
l2303A4EC:
	word32 a3_24
	word32 a4_25
	word32 a5_26
	word32 s2_30
	word32 s1_64
	word32 s3_65
	word32 s0_28 = tcpip_api_call(ra, s0, fp + -52<i32>, a3, a4, a5, s2, mstatus, dwLoc2C, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, out s1_64, out a3_24, out a4_25, out a5_26, out s2_30, out s3_65)
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_26
	s2Out = s2_30
	return s0_28
netifapi_netif_common_exit:


void tcpip_thread(word32 ra, word32 s0, word32 s1, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 s5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_thread_entry:
l2303A508:
	word32 a5_106 = Mem0[0x4200E290<32>:int32]
	word32 sp_164 = fp + -48<i32>
	branch a5_106 == 0<32> l2303A52C
l2303A522:
	call a5_106 (retsize: 0;)
		uses: a0:Mem20[0x4200E294<32>:int32],a1:a1_35,a3:a3,a4:0x4200E000<32>,mstatus:mstatus,ra:ra,s0:s0,s1:s1,s2:s2,s3:s3,s4:s4,s5:s5
		defs: a1:a1_35,a4:a4_32,a5:a5_24,ra:ra_25,s0:s0_26,sp:sp_23
l2303A52C:
	word32 s2_111 = 0xFFFFFFFF<32>
	word32 s3_112 = 0x4200E000<32>
	word32 s1_110 = 0x2307AAF8<32>
l2303A53C:
	word32 s4_113
	word32 a0_42 = sys_timeouts_sleeptime(a5_106)
	branch a0_42 != s2_111 l2303A566
l2303A566:
	branch a0_42 != 0<32> l2303A56E
l2303A56E:
	word32 a0_55
	s0 = sys_arch_mbox_fetch(s3_112 + 664<i32>, sp_164 + 12<i32>, a0_42, a3, a4, mstatus, Mem20[sp_164 + 100<i32>:word32], Mem20[sp_164 + 216<i32>:word32], Mem20[sp_164 + 280<i32>:word32], out s1_110, out a0_55, out a1, out a3, out a4, out a5_106, out s2_111, out s3_112, out s4_113)
	branch a0_55 == s2_111 l2303A568
l2303A57C:
l2303A568:
	s0 = sys_check_timeouts(ra, s0, s1_110, a1, mstatus, out a1, out a3, out a4, out a5_106, out s2_111, out s3_112)
l2303A546:
	word32 a0_203
	s0 = sys_arch_mbox_fetch(s3_112 + 664<i32>, sp_164 + 12<i32>, 0<32>, a3, a4, mstatus, Mem20[sp_164 + 100<i32>:word32], Mem20[sp_164 + 216<i32>:word32], Mem20[sp_164 + 280<i32>:word32], out s1_110, out a0_203, out a1, out a3, out a4, out a5_106, out s2_111, out s3_112, out s4_113)
l2303A552:
	branch s0 == 0<32> l2303A53C
l2303A556:
	a5_106 = CONVERT(Mem20[s0:byte], byte, word32)
	branch a5_106 >u 4<32> l2303A53C
l2303A55E:
	word32 a5_132 = Mem20[(a5_106 << 2<i32>) + s1_110:word32]
	word32 a4_146
	word32 a1_149
	word32 mstatus_150
	word32 a3_151
	call a5_132 (retsize: 0;)
		uses: a1:a1_149,a3:a3_151,a4:a4_146,a5:a5_132,mstatus:mstatus_150,ra:ra_177,s0:s0_125,s1:s1_130,s2:s2_134,s3:s3_135,s4:s4_136,s5:4<32>
		defs: a1:a1_149,a3:a3_151,a4:a4_146,mstatus:mstatus_150
	return
tcpip_thread_exit:


void tcpip_inpkt(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_inpkt_entry:
l2303A5C2:
	sys_mbox_valid()
	word32 a0_25
	word32 a3_28
	word32 a4_29
	word32 a2_212
	word32 a5_213
	word32 s1_30 = memp_malloc(0x4200E000<32>, 9<32>, a3, a4, mstatus, out a0_25, out a2_212, out a3_28, out a4_29, out a5_213)
	branch a0_25 != 0<32> l2303A604
l2303A604:
	Mem35[a1 + 8<i32>:word32] = a0_25
	Mem37[a0_25:byte] = 2<8>
	Mem38[a0_25 + 4<i32>:word32] = a0
	Mem39[dwArg44 + 12<i32>:word32] = a0_25
	word32 a0_42
	word32 a3_45
	word32 s1_233
	word32 a1_234
	word32 a4_235
	word32 a5_236
	word32 a7_237
	word32 s2_238
	word32 s3_239
	word32 s5_240
	word32 s6_241
	word32 s0_50 = sys_mbox_trypost(s1_30 + 664<i32>, a4_29, 2<32>, mstatus, a2, a1, dwArgD8, dwArg0118, dwArg0158, out s1_233, out a0_42, out a1_234, out a3_45, out a4_235, out a5_236, out a7_237, out s2_238, out s3_239, out s5_240, out s6_241)
	branch a0_42 == 0<32> l2303A5F8
l2303A620:
	word32 a3_72
	word32 a4_73
	word32 s1_242
	word32 a0_243
	word32 a1_244
	word32 a2_245
	word32 a5_246
	word32 a7_247
	word32 s2_248
	word32 s3_249
	word32 s4_250
	word32 s5_251
	word32 s6_252
	word32 s7_253
	word32 s8_254
	word32 s9_255
	word32 s10_256
	word32 s11_257
	word32 t4_258
	printf(ra, 0x2307AB28<32>, a3_45, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_242, out a0_243, out a1_244, out a2_245, out a3_72, out a4_73, out a5_246, out a7_247, out s2_248, out s3_249, out s4_250, out s5_251, out s6_252, out s7_253, out s8_254, out s9_255, out s10_256, out s11_257, out t4_258)
	word32 a0_259
	word32 a2_260
	word32 a3_261
	word32 a4_262
	word32 a5_263
	memp_free(9<32>, s0_50, a3_72, a4_73, mstatus, out a0_259, out a2_260, out a3_261, out a4_262, out a5_263)
l2303A5EA:
	word32 s1_214
	word32 a0_215
	word32 a1_216
	word32 a2_217
	word32 a3_218
	word32 a4_219
	word32 a5_220
	word32 a7_221
	word32 s2_222
	word32 s3_223
	word32 s4_224
	word32 s5_225
	word32 s6_226
	word32 s7_227
	word32 s8_228
	word32 s9_229
	word32 s10_230
	word32 s11_231
	word32 t4_232
	printf(ra, 0x2307AB14<32>, a3_28, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_214, out a0_215, out a1_216, out a2_217, out a3_218, out a4_219, out a5_220, out a7_221, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_227, out s8_228, out s9_229, out s10_230, out s11_231, out t4_232)
l2303A5F6:
l2303A5F8:
	return
tcpip_inpkt_exit:


void tcpip_input(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_input_entry:
l2303A636:
	word32 a2_10
	branch (CONVERT(Mem0[a1 + 65<i32>:byte], byte, word32) & 0x18<32>) == 0<32> l2303A64A
l2303A64A:
	a2_10 = 0x2303D1B6<32>
l2303A63E:
	a2_10 = 0x23042A62<32>
l2303A646:
l2303A646_thunk_tcpip_inpkt:
	tcpip_inpkt(ra, a0, a1, a2_10, a3, a4, s2, mstatus, dwArg08, dwArg44, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgD8, dwArg0118, dwArg0158)
	return
tcpip_input_exit:


word32 tcpip_try_callback(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_alloc
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_try_callback_entry:
l2303A654:
	word32 a0_101
	sys_mbox_valid()
	word32 s2_10 = a0
	word32 a0_23
	word32 a2_159
	word32 a3_106
	word32 a4_108
	word32 a5_110
	word32 s1_117 = memp_malloc(0x4200E000<32>, 8<32>, a3, a4, mstatus, out a0_23, out a2_159, out a3_106, out a4_108, out a5_110)
	branch a0_23 == 0<32> l2303A69A
l2303A676:
	Mem33[a1 + 8<i32>:word32] = a0_23
	Mem34[a0_23:byte] = 3<8>
	Mem35[a0_23 + 4<i32>:word32] = a0
	s0 = sys_mbox_trypost(s1_117 + 664<i32>, a4_108, 3<32>, mstatus, dwLoc1C, a1, dwArgD8, dwArg0118, dwArg0158, out s1_117, out a0_101, out a1, out a3_106, out a4_108, out a5_110, out a7, out s2_10, out s3, out s5, out s6)
	branch a0_101 == 0<32> l2303A69C
l2303A692:
	a1 = s0
	word32 a0_160
	word32 a2_161
	s1_117 = memp_free(8<32>, s0, a3_106, a4_108, mstatus, out a0_160, out a2_161, out a3_106, out a4_108, out a5_110)
l2303A69A:
	a0_101 = 0xFFFFFFFF<32>
l2303A69C:
	s1Out = s1_117
	a0Out = a0_101
	a1Out = a1
	a3Out = a3_106
	a4Out = a4_108
	a5Out = a5_110
	a7Out = a7
	s2Out = s2_10
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	return s0
tcpip_try_callback_exit:


word32 tcpip_api_call(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netifapi_netif_add
//      netifapi_netif_set_addr
//      netifapi_netif_common
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_api_call_entry:
l2303A6A8:
	word32 a0_25
	word32 a5_141
	word32 a4_140
	word32 a3_139
	word32 s2_146
	word32 s3_147
	word32 s1_145 = sys_sem_new(ra, a3, a4, a5, mstatus, s2, s0, ra, dwArgD8, dwArg0118, dwArg0158, out a0_25, out a3_139, out a4_140, out a5_141, out s2_146, out s3_147)
	branch a0_25 != 0<32> l2303A6FA
l2303A6C6:
	sys_mbox_valid()
	word32 a4_53
	word32 s2_59
	word32 a3_77
	word32 s1_82
	word32 a1_170
	word32 a4_171
	word32 s4_172
	sys_arch_sem_wait(0<32>, sys_mbox_post(0x4200E298<32>, a4_140, 1<32>, mstatus, a1, s1_145, dwArgC8, dwArg0108, dwArg0148, out a4_53, out s2_59), a4_53, s2_59, mstatus, a1, dwArg14, s1_145, dwArgC8, dwArg0108, out s1_82, out a1_170, out a3_77, out a4_171, out s2_146, out s3_147, out s4_172)
	sys_sem_free(s1_82, a3_77, mstatus, dwArg0128, dwArg0168, out s1_145, out a3_139, out a4_140, out a5_141)
l2303A6FA:
	0<32> = dwArg0128
	s1Out = s1_145
	a3Out = a3_139
	a4Out = a4_140
	a5Out = a5_141
	s2Out = s2_146
	s3Out = s3_147
	return dwArgE4
tcpip_api_call_exit:


word32 tcpip_init(word32 ra, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg40, word32 dwArg68, word32 dwArg8C, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0040:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a6 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_init_entry:
l2303A708:
	word32 a0_11
	word32 a1_12
	word32 a3_14
	word32 a4_15
	word32 ra_19 = lwip_init(ra, mstatus, dwLoc08, dwArg14, dwArg18, dwArg40, dwArg68, dwArg8C, dwArgC8, dwArg0108, dwArg0148, out a0_11, out a1_12, out a3_14, out a4_15)
	Mem42[0x4200E290<32>:word32] = a0_11
	Mem45[0x4200E294<32>:word32] = a1_12
	word32 s3_57
	word32 s1_55 = sys_mbox_new(ra_19, a3_14, a4_15, 0x4200E000<32>, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out s3_57)
l2303A756_thunk_sys_thread_new:
	word32 a6_78
	word32 ra_80 = sys_thread_new(ra_19, s1_55, 0<32>, 0xFFFFA0<32>, 0x1E<32>, s3_57, mstatus, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out a6_78)
	a6Out = a6_78
	return ra_80
tcpip_init_exit:


word32 lwip_htons(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
//      dns_recv
//      etharp_request
//      ip4_input
//      ip4_output_if_opt
//      tcp_oos_insert_segment
//      tcp_free_acked_segments.isra.3
//      tcp_receive
//      tcp_input
//      tcp_create_segment
//      tcp_output_alloc_header_common.constprop.6
//      tcp_split_unsent_seg
//      tcp_send_fin
//      tcp_rexmit_rto_prepare
//      tcp_output
//      tcp_zero_window_probe
//      udp_input
//      udp_sendto_if
//      ethernet_output
//      ip_chksum_pseudo
//      ip_chksum_pseudo_partial
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
lwip_htons_entry:
l2303A75A:
	a5Out = a0 << 8<u32>
	return CONVERT(SLICE(a0 >>u 8<i32> | a0 << 8<u32>, word16, 0), word16, word32)
lwip_htons_exit:


word32 lwip_htonl(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_recv
//      dhcp_create_msg
//      dhcp_select
//      dhcp_handle_ack.isra.3
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_stop
//      ip4addr_aton
//      tcp_free_acked_segments.isra.3
//      tcp_receive
//      tcp_input
//      tcp_create_segment
//      tcp_output_alloc_header_common.constprop.6
//      tcp_split_unsent_seg
//      tcp_rexmit_rto_prepare
//      tcp_rexmit
//      tcp_rst
//      tcp_send_empty_ack
//      tcp_output
//      tcp_keepalive
//      tcp_zero_window_probe
//      dhcp_server_recv
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
lwip_htonl_entry:
l2303A768:
	a3Out = 0xFF0000<32>
	a4Out = 0xFFFFF00<32>
	word32 a5_10 = a0 << 0x18<u32> | a0 >>u 0x18<u32> | a0 << 8<u32> & 0xFF0000<32>
	a5Out = a5_10
	return a0 >>u 8<i32> & 0xFFFFF00<32> | a5_10
lwip_htonl_exit:


word32 dns_call_found(word32 ra, word32 a0, word32 a2, word32 a3, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_check_entry
//      dns_recv
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a3 a4 ra s1
// Trashed: a0 a2 a3 a4 a5 ra s1 tp
// Preserved: s0 sp
dns_call_found_entry:
l2303A78C:
	word32 s1_27 = a0 << 3<u32>
	word32 a4_15 = Mem13[a3:word32]
	word32 s0_16 = 0x42014FC4<32>
	branch a3 == 0<32> l2303A7C2
l2303A7AA:
	call a3 (retsize: 0;)
		uses: a0:a0 + 0x42015103<32>,a2:a2,a3:a3,a4:0x42014FE4<32>,a5:272<i32>,ra:ra,s0:0x42014FC4<32>,s1:a0 << 3<u32>
		defs: a3:a3_32,a4:a4_28,ra:ra_31,s0:s0_30,s1:s1_27
l2303A7C2:
	Mem38[s0_16 + s1_27:word32] = 0<32>
	s1Out = s1_27
	a3Out = a3
	a4Out = a4_15
	return ra
dns_call_found_exit:


word32 dns_send(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 s4, word32 s9, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_check_entry
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a2 a3 a4 mstatus ra s1 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
dns_send_entry:
l2303A7D4:
	word32 a4_306
	word32 a3_305
	word32 ra_323
	word32 s1_308
	branch Mem32[(CONVERT(Mem32[a0 + 0x420150FF<32>:byte], byte, word32) << 2<i32>) + 0x4200E2A0<32>:word32] != 0<32> l2303A83E
l2303A83E:
	word32 a3_46
	word32 a4_47
	word32 a0_57
	word32 s2_68
	word32 s5_75
	word32 s6_76
	word32 s3_548
	word32 s4_549
	word32 s8_550
	word32 a1_544
	word32 a2_545
	word32 a7_547
	word32 a5_546
	word32 a2_540
	word32 a5_541
	word32 s1_543
	word32 s0_542
	word32 a1_539
	ra_323 = pbuf_alloc(ra, a0 + 0x42015103<32>, s1, 182<i32>, CONVERT(SLICE(strlen(a0 + 0x42015103<32>, out a1_539, out a2_540, out a3_46, out a4_47, out a5_541) + 18<i32>, word16, 0), word16, word32), 640<i32>, a3_46, a4_47, mstatus, dwLoc3C, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_542, out s1_543, out a0_57, out a1_544, out a2_545, out a3_305, out a4_306, out a5_546, out a7_547, out s2_68, out s3_548, out s4_549, out s5_75, out s6_76, out s8_550, out mstatus)
	s1_308 = a0_57
	branch a0_57 == 0<32> l2303A820
l2303A868:
	word32 a3_555
	word32 a5_557
	word32 a4_556
	word32 a0_552
	word32 a2_554
	word32 a1_553
	word32 t1_551
	word32 ra_93 = memset(ra_323, fp + -60<i32>, 0<32>, 0xC<32>, out t1_551, out a0_552, out a1_553, out a2_554, out a3_555, out a4_556, out a5_557)
	word32 a5_558
	lwip_htons(CONVERT(Mem32[s2_68 + 8<i32>:uint16], uint16, word32), out a5_558)
	word32 s8_116
	word32 s4_561
	word32 s3_560
	word32 s2_559
	word32 s1_114
	word32 a4_120
	word32 a3_119
	word32 s0_113 = pbuf_take(a0_57, fp + -60<i32>, 0xC<32>, out s1_114, out a3_119, out a4_120, out s2_559, out s3_560, out s4_561, out s8_116)
	word32 s2_130 = 0xC<32>
	word32 s8_132 = s8_116 + 0xFFFFFFFE<32>
l2303A8A6:
	word32 s0_134 = s0_113 + 1<32>
	s9 = s0_134
	word32 a2_136 = 0<32>
	s0_137 = s0_134
l2303A8AC:
	word32 s0_137
	word32 a5_139 = CONVERT(Mem108[s0_137:byte], byte, word32)
	branch a5_139 != 46<i32> l2303A8D0
l2303A8D0:
	branch a5_139 == 0<32> l2303A8B4
l2303A8D2:
	a2_136 = a2_136 + 1<32> & 255<i32>
	s0_137 = s0_137 + 1<32>
l2303A8B4:
	word32 s4_154 = s2_130 + a2_136
	word32 s7_155 = CONVERT(SLICE(s0_137 - s0_134, word16, 0), word16, word32)
	branch s8_132 >= s4_154 l2303A8DC
l2303A8DC:
	pbuf_put_at(s0_137, s1_114, s2_130, a2_136)
	word32 s4_203 = CONVERT(SLICE(s4_200, word16, 0), word16, word32)
	word32 s2_206 = s4_203 + 1<i32> << 16<i32>
	word32 s4_200
	word32 s3_574
	s0_113 = pbuf_take_at(s1_114, s0_134, s7_155, CONVERT(SLICE(s2_130 + 1<i32>, word16, 0), word16, word32), dwArgE8, out s1_114, out a3_119, out a4_120, out s3_574, out s4_200, out s8_132)
	s2_130 = s2_206 >>u 0x10<u32>
	branch CONVERT(Mem108[s0_113:byte], byte, word32) != 0<32> l2303A8A6
l2303A90C:
	pbuf_put_at(s0_113, s1_114, s2_206 >>u 0x10<u32>, 0<32>)
	word32 s8_577
	word32 a4_576
	word32 s3_231
	word32 s1_237
	word32 s4_246
	word32 a3_575
	pbuf_take_at(s1_114, fp + -64<i32>, 4<32>, CONVERT(SLICE(s4_203 + 2<32>, word16, 0), word16, word32), dwArgE8, out s1_237, out a3_575, out a4_576, out s3_231, out s4_246, out s8_577)
	word32 s4_578
	word32 a0_580
	word32 a1_581
	word32 s0_579
	word32 a5_583
	word32 a2_582
	word32 a0_270
	word32 a3_273
	word32 a4_274
	word32 mstatus_278
	word32 s1_281
	word32 a7_584
	word32 s2_585
	word32 s3_586
	word32 s4_587
	word32 s5_588
	word32 s6_589
	word32 s8_590
	ra_323 = pbuf_free(udp_sendto(ra_93, Mem226[0x4200E29C<32>:int32], s1_237, (CONVERT(Mem226[s3_231 + (s5_75 + 272<i32>) + 11<i32>:byte], byte, word32) << 2<i32>) + (s6_76 + 672<i32>), 53<i32>, s4_246, mstatus, s4, dwLoc18, dwArg08, dwArg38, s9, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s1_281, out a0_270, out a3_273, out a4_274, out s4_578, out mstatus_278), s1_281, a3_273, a4_274, a0_270, mstatus_278, dwArgE8, out s0_579, out s1_308, out a0_580, out a1_581, out a2_582, out a3_305, out a4_306, out a5_583, out a7_584, out s2_585, out s3_586, out s4_587, out s5_588, out s6_589, out s8_590, out mstatus)
l2303A8C6:
	word32 s8_573
	word32 s4_570
	word32 s6_572
	word32 s5_571
	word32 a7_567
	word32 s3_569
	word32 s2_568
	word32 a1_564
	word32 a5_566
	word32 a2_565
	word32 a0_563
	word32 s0_562
	ra_323 = pbuf_free(ra_93, s1_114, a3_119, a4_120, s4_154, mstatus, dwArgE8, out s0_562, out s1_308, out a0_563, out a1_564, out a2_565, out a3_305, out a4_306, out a5_566, out a7_567, out s2_568, out s3_569, out s4_570, out s5_571, out s6_572, out s8_573, out mstatus)
l2303A814:
	ra_323 = dns_call_found(ra, a0, a2, a3, out s1_308, out a3_305, out a4_306)
	Mem369[a0 + 0x420150FE<32>:byte] = 0<8>
l2303A820:
	0<32> = dwArg0198
	s1Out = s1_308
	a2Out = dwArg0138
	a3Out = a3_305
	a4Out = a4_306
	s4Out = dwLoc14
	s9Out = s9
	mstatusOut = mstatus
	return ra_323
dns_send_exit:


word32 dns_check_entry(word32 ra, word32 s1, word32 a0, word32 a2, word32 s4, word32 s9, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_recv
//      dns_tmr
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a2 a3 a4 mstatus ra s1 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dns_check_entry_entry:
l2303A960:
	word32 a3_147
	word32 a0_48
	word32 a3_15 = 2<32>
	word32 a4_18 = CONVERT(Mem14[a0 + 0x420150FE<32>:byte], byte, word32)
	branch a4_18 == 2<32> l2303A9F0
l2303A9F0:
	a4_18 = CONVERT(Mem14[a0 + 0x42015100<32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem22[a0 + 0x42015100<32>:byte] = SLICE(a4_18, byte, 0)
	branch a4_18 != 0<32> l2303AA46
l2303AA00:
	word32 a4_26 = CONVERT(Mem22[a0 + 0x42015101<32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem27[a0 + 0x42015101<32>:byte] = SLICE(a4_26, byte, 0)
	a3_147 = 4<32>
	branch a4_26 != 4<32> l2303AA50
l2303AA50:
	Mem28[a0 + 0x42015100<32>:byte] = SLICE(a4_26, byte, 0)
l2303AA14:
	branch CONVERT(Mem27[a0 + 0x420150FF<32>:byte], byte, word32) != 0<32> l2303AA30
l2303AA1A:
	branch Mem27[0x4200E2A4<32>:int32] == 0<32> l2303AA30
l2303AA30:
	ra = dns_call_found(ra, a0, a2, 4<32>, out s1, out a3_15, out a4_18)
	a0_48 = s1 + 272<i32>
l2303AA24:
	Mem50[a0 + 0x420150FF<32>:byte] = 1<8>
	Mem51[a0 + 0x42015100<32>:word16] = 1<16>
l2303A988:
	a3_15 = 3<32>
	branch a4_18 == 3<32> l2303AA56
l2303AA56:
	word32 a5_53 = Mem14[a4_18:word32]
	branch a4_18 != 0<32> l2303AA64
l2303AA64:
	Mem55[a4_18 + 0xFFFFFFFF<32>:word32] = a5_53
	a4_18 = a4_18 + 0xFFFFFFFF<32>
	branch a4_18 == 0xFFFFFFFF<32> l2303AA5A
l2303AA6A:
l2303AA5A:
	a0_48 = a0 + 272<i32>
l2303AA40:
	Mem64[a0_48 + 0x42014FEE<32>:byte] = 0<8>
l2303A98E:
	branch a4_18 != 1<32> l2303AA46
l2303AA46:
	s1Out = s1
	a2Out = dwArg10
	a3Out = a3_15
	a4Out = a4_18
	s4Out = s4
	s9Out = s9
	mstatusOut = mstatus
	return ra
l2303A994:
	word32 a4_76 = CONVERT(Mem14[0x4200E2A8<32>:uint16], uint16, word32)
	a3_147 = 0x4200E2A8<32>
l2303A9A6:
	word32 a4_81 = a4_76 + 1<32>
	a4_76 = CONVERT(SLICE(a4_81, word16, 0), word16, word32)
	word32 a5_85 = 0x42014FE4<32>
l2303A9AE:
	branch CONVERT(Mem14[a5_85 + 10<i32>:byte], byte, word32) != 2<32> l2303A9BE
l2303A9B6:
	branch CONVERT(Mem14[a5_85 + 8<i32>:uint16], uint16, word32) == CONVERT(SLICE(a4_81, word16, 0), word16, word32) l2303A9A6
l2303A9BE:
	a5_85 = a5_85 + 272<i32>
	branch a5_85 != 0x42015424<32> l2303A9AE
l2303A9C6:
	Mem105[0x4200E2A8<32>:word16] = SLICE(a4_76, word16, 0)
	Mem110[a0 + 0x420150FE<32>:word16] = 2<16>
	Mem112[a0 + 0x420150FC<32>:word16] = SLICE(a4_76, word16, 0)
	Mem113[a0 + 0x42015100<32>:word16] = 1<16>
l2303A9E4:
l2303A9EC_thunk_dns_send:
	word32 a2_150
	word32 a3_151
	word32 a4_152
	word32 mstatus_156
	word32 s1_159
	word32 s4_162
	word32 s9_174
	word32 ra_157 = dns_send(ra, s1, a0, dwArg10, a3_147, s4, s9, mstatus, dwArg04, dwArg08, dwArg38, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, dwArg0198, out s1_159, out a2_150, out a3_151, out a4_152, out s4_162, out s9_174, out mstatus_156)
	s1Out = s1_159
	a2Out = a2_150
	a3Out = a3_151
	a4Out = a4_152
	s4Out = s4_162
	s9Out = s9_174
	mstatusOut = mstatus_156
	return ra_157
dns_check_entry_exit:


void dns_recv(word32 ra, word32 a2, word32 a3, word32 s4, word32 s5, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg48, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArgA8, word32 dwArgB8, word32 dwArgE4, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s5:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E4:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s5 sp
dns_recv_entry:
	uint16 wLoc5E = SLICE(dwLoc60, uint16, 16)
	uint16 wLoc60 = SLICE(dwLoc60, uint16, 0)
l2303AA6C:
	uint16 wLoc44_1032 = SLICE(s4, uint16, 0)
	uint16 wLoc4A_1024 = SLICE(s8, uint16, 16)
	uint16 wLoc4C_1039 = SLICE(s8, uint16, 0)
	word32 a4_111 = CONVERT(Mem29[a2 + 8<i32>:uint16], uint16, word32)
	word32 s1_207 = a2
	branch a4_111 <=u 0xF<32> l2303ADA0
l2303AA94:
	word32 a0_40
	word32 a5_1102
	word32 a2_1101
	word32 s2_1103
	word32 s3_1104
	word32 s8_1105
	pbuf_copy_partial(a2, fp + -88<i32>, 0xC<32>, 0<32>, out s1_207, out a0_40, out a2_1101, out a3, out a4_111, out a5_1102, out s2_1103, out s3_1104, out s4, out s8_1105)
	word32 s0_119 = a0_40
	branch a0_40 != 0xC<32> l2303ADA0
l2303AAAA:
	word32 s2_64 = 0<32>
	word32 a5_1106
	word32 a0_65 = lwip_htons(CONVERT(wLoc58, uint16, word32), out a5_1106)
	word32 a5_67 = 0x42014FE4<32>
	a3 = 2<32>
	a4_111 = 4<32>
l2303AAC4:
	word32 s6_75 = s2_64 & 255<i32>
	branch CONVERT(Mem29[a5_67 + 10<i32>:byte], byte, word32) != 2<32> l2303ADD6
l2303AAD0:
	branch CONVERT(Mem29[a5_67 + 8<i32>:uint16], uint16, word32) != a0_65 l2303ADD6
l2303ADD6:
	s2_64 = s2_64 + 1<32>
	a5_67 = a5_67 + 272<i32>
	branch s2_64 != 4<32> l2303AAC4
l2303ADE0:
l2303AAD8:
	word32 a5_1107
	word32 a0_88 = lwip_htons(CONVERT(wLoc54, uint16, word32), out a5_1107)
	s4 = a0_88
	word32 a5_1108
	word32 s5_290 = lwip_htons(CONVERT(wLoc52, uint16, word32), out a5_1108)
	branch CONVERT(bLoc56, int8, int32) >= 0<32> l2303ADA0
l2303AAF4:
	branch a0_88 != 1<32> l2303ADA0
l2303AAFA:
	s4 = s2_64 + 272<i32>
	a4_111 = Mem29[a3:int32]
	branch a4_111 != Mem29[(CONVERT(Mem29[s4 + 0x42014FEF<32>:byte], byte, word32) << 2<i32>) + 0x4200E2A0<32>:word32] l2303ADA0
l2303AB24:
	word32 s7_115 = s4 + 0x42014FF3<32>
l2303AB38:
	word32 a5_1110
	word32 a0_123 = pbuf_try_get_at(s1_207, s0_119, out a3, out a4_111, out a5_1110)
	branch a0_123 < 0<32> l2303ADA0
l2303AB44:
	branch s0_119 == 0xFFFFFFF<32> l2303ADA0
l2303AB48:
	a4_111 = 192<i32>
	s0_119 = CONVERT(SLICE(s0_119 + 1<32>, word16, 0), word16, word32)
	branch (a0_123 & 192<i32>) == 192<i32> l2303ADA0
l2303AB5A:
	word32 a5_136 = s7_115 + a0_123
l2303AB5E:
	branch s7_115 != a5_136 l2303ACF4
l2303ACF4:
	word32 a0_145 = pbuf_try_get_at(s1_207, s0_119, out a3, out a4_111, out a5_136)
	branch a0_145 < 0<32> l2303ADA0
l2303AD02:
	a4_111 = CONVERT(Mem144[s7_115:byte], byte, word32)
	branch (CONVERT(Mem144[a4_111 + 0x230825B1<32>:byte], byte, word32) & 3<32>) != 1<32> l2303AD1A
l2303AD16:
	a4_111 = a4_111 + 32<i32>
l2303AD1A:
	word32 a3_164 = CONVERT(Mem144[(a0_145 & 255<i32>) + 0x230825B1<32>:byte], byte, word32)
	word32 a0_160 = a0_145 & 255<i32>
	a3 = a3_164 & 3<32>
	branch (a3_164 & 3<32>) != 1<32> l2303AD30
l2303AD2C:
	a0_160 = (a0_145 & 255<i32>) + 32<i32>
l2303AD30:
	branch a4_111 != a0_160 l2303ADA0
l2303AD34:
	branch s0_119 == 0xFFFFFFF<32> l2303ADA0
l2303AD38:
	s0_119 = CONVERT(SLICE(s0_119 + 1<32>, word16, 0), word16, word32)
	s7_115 = s7_115 + 1<32>
l2303AB62:
	s7_115 = s7_115 + 1<32>
	word32 a5_1109
	word32 a0_185 = pbuf_try_get_at(s1_207, s0_119, out a3, out a4_111, out a5_1109)
	branch a0_185 < 0<32> l2303ADA0
l2303AB70:
	branch a0_185 != 0<32> l2303AB38
l2303AB72:
	branch s0_119 == 0xFFFFFFF<32> l2303ADA0
l2303AB7C:
	word32 s7_195 = CONVERT(SLICE(s0_119 + 1<i32>, word16, 0), word16, word32)
	branch s7_195 == 0xFFFFFFF<32> l2303ADA0
l2303AB8A:
	word32 a0_200
	word32 a2_201
	word32 s8_205
	word32 s2_208
	word32 s3_214
	word32 a5_1111
	word32 s0_203 = pbuf_copy_partial(s1_207, fp + -96<i32>, 4<32>, s7_195, out s1_207, out a0_200, out a2_201, out a3, out a4_111, out a5_1111, out s2_208, out s3_214, out s4, out s8_205)
	branch a0_200 != 4<32> l2303ADA0
l2303AB9C:
	word32 a5_224 = CONVERT(wLoc5E, uint16, word32)
	a4_111 = 256<i32>
	branch a5_224 != 256<i32> l2303ADA0
l2303ABA8:
	a4_111 = CONVERT(wLoc60, uint16, word32)
	branch a4_111 != a5_224 l2303ADA0
l2303ABB0:
	branch s7_195 >u 0xFFFFFFB<32> l2303ADA0
l2303ABB6:
	branch (CONVERT(bLoc55, byte, word32) & 0xF<32>) != 0<32> l2303AD42
l2303AD42:
	word32 a5_232 = s2_208 + 272<i32> + s3_214
	a4_111 = CONVERT(Mem221[a5_232 + 11<i32>:byte], byte, word32)
	branch a4_111 == 0<32> l2303AD8C
l2303AD8C:
	a4_111 = Mem221[s8_205 + 4<i32>:int32]
	branch a4_111 == 0<32> l2303AD52
l2303AD92:
	Mem236[a5_232 + 12<i32>:word16] = 0x301<16>
	word32 s9_1156
	word32 a2_1155
	ra = dns_check_entry(ra, s1_207, s6_75, a2_201, s4, 0xFFFFFFB<32>, mstatus, dwLoc6C, dwLoc68, dwLoc60, dwLoc38, dwLoc08, dwArg08, dwArg18, dwArg28, s5, dwArg48, dwArg68, dwArg78, dwArgA8, dwArg0128, out s1_207, out a2_1155, out a3, out a4_111, out s4, out s9_1156, out mstatus)
l2303ABC0:
	word32 s0_285 = CONVERT(SLICE(s0_203 + 5<32>, word16, 0), word16, word32)
	word32 s8_287 = 0xFFFFFFF<32>
l2303ABD8:
	branch s5_290 == 0<32> l2303AD52
l2303ABDC:
	a4_111 = CONVERT(Mem292[s1_207 + 8<i32>:uint16], uint16, word32)
	branch s0_285 >=u a4_111 l2303AD52
l2303AD52:
	word32 a2_311
	word32 a3_316
	word32 s2_320
	word32 s3_321
	word32 s6_326
	word32 mstatus_1122
	word32 a4_1125
	word32 a3_1124
	word32 s1_1123
	word32 s0_1112
	word32 a0_1114
	word32 s1_1113
	word32 a4_1116
	word32 a5_1117
	word32 s5_1120
	word32 s8_1121
	word32 a7_1118
	word32 s4_1119
	word32 a1_1115
	dns_call_found(pbuf_free(ra, s1_207, a3, a4_111, s4, mstatus, dwArgB8, out s0_1112, out s1_1113, out a0_1114, out a1_1115, out a2_311, out a3_316, out a4_1116, out a5_1117, out a7_1118, out s2_320, out s3_321, out s4_1119, out s5_1120, out s6_326, out s8_1121, out mstatus_1122), s6_326, a2_311, a3_316, out s1_1123, out a3_1124, out a4_1125)
	Mem348[s3_321 + (s2_320 + 272<i32>) + 10<i32>:byte] = 0<8>
l2303ABE4:
	word32 a5_1126
	word32 a0_358 = pbuf_try_get_at(s1_207, s0_285, out a3, out a4_111, out a5_1126)
	branch a0_358 < 0<32> l2303ADA0
l2303ABFC:
	branch a3 == 0<32> l2303ADA0
l2303AC02:
	branch (a0_358 & 192<i32>) == 192<i32> l2303ADA8
l2303ADA8:
	s0_285 = a3
l2303AC0A:
	word32 a0_369 = a0_358 + a3
	branch a0_369 >= CONVERT(Mem357[s1_207 + 8<i32>:uint16], uint16, word32) l2303ADA0
l2303AC14:
	s0_285 = CONVERT(SLICE(a0_369, word16, 0), word16, word32)
	word32 a5_1127
	word32 a0_374 = pbuf_try_get_at(s1_207, s0_285, out a3, out a4_111, out a5_1127)
	branch a0_374 < 0<32> l2303ADA0
l2303AC26:
	branch a0_374 != 0<32> l2303ABE4
l2303AC28:
	branch s0_285 == s8_287 l2303ADA0
l2303AC2C:
	a4_111 = CONVERT(SLICE(s0_285 + 1<i32>, word16, 0), word16, word32)
	branch a4_111 == s8_287 l2303ADA0
l2303AC38:
	word32 a0_394
	word32 a2_1128
	word32 a5_1130
	word32 s2_1131
	word32 s3_1132
	word32 a3_1129
	word32 s0_397 = pbuf_copy_partial(s1_207, fp + -76<i32>, 0xA<32>, a4_111, out s1_207, out a0_394, out a2_1128, out a3_1129, out a4_111, out a5_1130, out s2_1131, out s3_1132, out s4, out s8_287)
	a3 = 0xA<32>
	branch a0_394 != 0xA<32> l2303ADA0
l2303AC4C:
	branch a4_111 >u 0xFFFFFF5<32> l2303ADA0
l2303AC52:
	word32 s0_420 = s0_397 + 11<i32> << 0x10<u32>
	word32 a0_423 = CONVERT(wLoc44_1032, uint16, word32)
	branch CONVERT(wLoc4A_1024, uint16, word32) != 256<i32> l2303ADB2
l2303AC68:
	branch CONVERT(wLoc4C_1039, uint16, word32) != 256<i32> l2303ADB2
l2303AC70:
	branch a0_423 != 1024<i32> l2303ADB2
l2303ADB2:
	word32 a5_1133
	branch lwip_htons(a0_423, out a5_1133) + (s0_420 >>u 16<i32>) >= 0x10000000<32> l2303ADA0
l2303ADBC:
	word32 a5_1154
	s0_285 = CONVERT(SLICE(lwip_htons(CONVERT(wLoc44_1032, uint16, word32), out a5_1154) + (s0_420 >>u 16<i32>), word16, 0), word16, word32)
	s5_290 = CONVERT(SLICE(s5_290 + 0xFFFFFFFF<32>, word16, 0), word16, word32)
l2303AC78:
	word32 a0_456
	word32 s2_464
	word32 s8_1137
	word32 s3_1136
	word32 a2_1134
	word32 a5_1135
	pbuf_copy_partial(s1_207, fp + -92<i32>, 4<32>, s0_420 >>u 16<i32>, out s1_207, out a0_456, out a2_1134, out a3, out a4_111, out a5_1135, out s2_464, out s3_1136, out s4, out s8_1137)
	branch a0_456 != 4<32> l2303ADA0
l2303ADA0:
	word32 s8_1099
	word32 s4_1096
	word32 mstatus_1100
	word32 a0_1087
	word32 s0_1085
	word32 s6_1098
	word32 s1_1086
	word32 a1_1088
	word32 a2_1089
	word32 a5_1092
	word32 a3_1090
	word32 a4_1091
	word32 a7_1093
	word32 s2_1094
	word32 s3_1095
	word32 s5_1097
	pbuf_free(ra, s1_207, a3, a4_111, s4, mstatus, dwArgB8, out s0_1085, out s1_1086, out a0_1087, out a1_1088, out a2_1089, out a3_1090, out a4_1091, out a5_1092, out a7_1093, out s2_1094, out s3_1095, out s4_1096, out s5_1097, out s6_1098, out s8_1099, out mstatus_1100)
l2303AC8A:
	Mem550[s2_464 + 0x420150F8<32>:word32] = s2_464 + 272<i32>
	word32 a0_551
	word32 a2_552
	word32 s2_561
	word32 s3_562
	word32 s6_567
	word32 mstatus_1148
	word32 s0_1138
	word32 a1_1140
	word32 s1_1139
	word32 a4_1142
	word32 a5_1143
	word32 s5_1146
	word32 s8_1147
	word32 a7_1144
	word32 s4_1145
	word32 a3_1141
	word32 ra_575 = pbuf_free(ra, s1_207, a3, a4_111, dwArg74, mstatus, dwArgB8, out s0_1138, out s1_1139, out a0_551, out a1_1140, out a2_552, out a3_1141, out a4_1142, out a5_1143, out a7_1144, out s2_561, out s3_562, out s4_1145, out s5_1146, out s6_567, out s8_1147, out mstatus_1148)
	word32 a3_578
	word32 a5_1150
	word32 a4_1149
	word32 a0_577 = lwip_htonl(a0_551, out a3_578, out a4_1149, out a5_1150)
	Mem582[s3_562 + 10<i32>:byte] = 3<8>
	branch a0_577 >u 0x93A80<32> l2303ADAC
l2303ADAC:
	Mem585[s3_562:word32] = 0x93A80<32>
l2303ACC4:
	Mem586[s3_562:word32] = a0_577
l2303ACC8:
	word32 s1_1151
	word32 a3_1152
	word32 a4_1153
	dns_call_found(ra_575, s6_567, a2_552, a3_578, out s1_1151, out a3_1152, out a4_1153)
	word32 s2_607 = s2_561 + 272<i32> + dwArgE4
	branch Mem608[s2_607:int32] != 0<32> l2303AD6E
l2303ACE4:
	branch CONVERT(Mem608[s2_607 + 10<i32>:byte], byte, word32) != 3<32> l2303AD6E
l2303ACEE:
	Mem612[s2_607 + 10<i32>:byte] = 0<8>
l2303AD6E:
	return
dns_recv_exit:


void dns_init(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a2
// Preserved: a0 a1 a3 a4 a5 a6 ra s0 s1 sp t0 t1 t3 tp
dns_init_entry:
l2303ADE2:
	word32 s0_8 = Mem5[a5:word32]
	branch a5 != 0<32> l2303AE22
l2303AE22:
	return
l2303ADF4:
	udp_new_ip_type(ra, s1, a3, a4, mstatus)
	Mem32[46<i32>:word32] = s0_8
	word32 a3_72
	word32 a4_73
	word32 a5_74
	word32 a0_33 = udp_bind(46<i32>, 0x230827AC<32>, 0<32>, out a3_72, out a4_73, out a5_74)
l2303AE1E_thunk_udp_recv:
	udp_recv(a0_33, 0x2303AA6C<32>, 0<32>)
	return
dns_init_exit:


word32 dns_setserver(word32 a0, word32 a1, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoEnter
//      dhcp_handle_ack.isra.3
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
dns_setserver_entry:
l2303AE2A:
	word32 a5_23 = 1<32>
	branch a0 >u 1<32> l2303AE42
l2303AE30:
	a0 = a0 << 2<i32>
	a5_23 = (a0 << 2<i32>) + 0x4200E2A0<32>
	branch a1 == 0<32> l2303AE44
l2303AE44:
	a4 = Mem0[0x230827AC<32>:int32]
l2303AE3E:
l2303AE40:
	Mem17[a4:word32] = a5_23
l2303AE42:
	a4Out = a4
	a5Out = a5_23
	return a0
dns_setserver_exit:


word32 dns_getserver(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_dns_get
//      netif_status_callback
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
dns_getserver_entry:
l2303AE4E:
	branch a0 >u 1<32> l2303AE64
l2303AE64:
	return 1<32>
l2303AE54:
	return a0 << 2<u32>
dns_getserver_exit:


void dns_tmr(word32 ra, word32 s1, word32 a2, word32 s4, word32 s9, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0188, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dns_tmr_entry:
l2303AE6E:
	word32 a2_12
	word32 mstatus_21
	word32 s1_24
	word32 s4_28
	word32 s9_32
	word32 a2_40
	word32 mstatus_49
	word32 s1_52
	word32 s4_56
	word32 s9_60
	word32 mstatus_77
	word32 s1_80
	word32 s4_84
	word32 s9_88
	word32 a3_148
	word32 a4_149
	word32 a3_150
	word32 a4_151
	word32 a2_152
	word32 a3_153
	word32 a4_154
	word32 ra_78 = dns_check_entry(dns_check_entry(dns_check_entry(ra, s1, 0<32>, a2, s4, s9, mstatus, dwLoc0C, dwLoc08, dwArg00, dwArg28, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_24, out a2_12, out a3_148, out a4_149, out s4_28, out s9_32, out mstatus_21), s1_24, 1<32>, a2_12, s4_28, s9_32, mstatus_21, dwLoc0C, dwLoc08, dwArg00, dwArg28, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_52, out a2_40, out a3_150, out a4_151, out s4_56, out s9_60, out mstatus_49), s1_52, 2<32>, a2_40, s4_56, s9_60, mstatus_49, dwLoc0C, dwLoc08, dwArg00, dwArg28, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_80, out a2_152, out a3_153, out a4_154, out s4_84, out s9_88, out mstatus_77)
l2303AE8A_thunk_dns_check_entry:
	word32 s1_155
	word32 a2_156
	word32 a3_157
	word32 a4_158
	word32 s4_159
	word32 s9_160
	word32 mstatus_161
	dns_check_entry(ra_78, s1_80, 3<32>, dwArg10, s4_84, s9_88, mstatus_77, dwArg04, dwArg08, dwArg10, dwArg38, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, dwArg0198, out s1_155, out a2_156, out a3_157, out a4_158, out s4_159, out s9_160, out mstatus_161)
	return
dns_tmr_exit:


word32 lwip_init(word32 ra, word32 mstatus, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg60, word32 dwArg88, word32 dwArgAC, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_init
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_init_entry:
l2303AE8E:
	stats_init()
	sys_init()
	mem_init(ra, mstatus, dwLoc10, dwLoc0C, ra, dwArgE8, dwArg0128, dwArg0168)
	word32 a2_31
	word32 a0_30 = memp_init(out a2_31)
	netif_init()
	word32 a2_45
	word32 a0_54
	word32 a3_57
	word32 s1_62
	word32 ra_61 = tcp_init(ra, udp_init(a0_30, a2_31, out a2_45), a2_45, dwLoc08, dwArg18, dwArg60, dwArg88, dwArgAC, out s1_62, out a0_54, out a3_57)
	word32 a5_78
	word32 a4_77 = igmp_init(out a5_78)
	dns_init(ra_61, s1_62, a3_57, a4_77, a5_78, mstatus)
l2303AEBA_thunk_sys_timeouts_init:
	word32 a1_83
	word32 a3_85
	word32 a4_86
	a0Out = sys_timeouts_init(a0_54, a3_57, a4_77, mstatus, dwArg34, dwArg38, out a1_83, out a3_85, out a4_86)
	a1Out = a1_83
	a3Out = a3_85
	a4Out = a4_86
	return ra_61
lwip_init_exit:


word32 dhcp_set_state(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_check
//      dhcp_bind
//      dhcp_select
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_start
//      dhcp_coarse_tmr
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
dhcp_set_state_entry:
l2303AEBE:
	word32 a5_5 = CONVERT(Mem0[a0 + 5<i32>:byte], byte, word32)
	branch a5_5 == a1 l2303AED2
l2303AEC6:
	Mem7[a0 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a0 + 6<i32>:byte] = 0<8>
	Mem9[a0 + 8<i32>:word16] = 0<16>
l2303AED2:
	return a5_5
dhcp_set_state_exit:


word32 dhcp_option_short(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_renew
//      dhcp_coarse_tmr
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a4 a5
// Preserved: sp
dhcp_option_short_entry:
l2303AED4:
	Mem8[a1 + a0:byte] = SLICE(a2 >>u 8<u32>, byte, 0)
	Mem15[a1 + CONVERT(SLICE(a0 + 1<i32>, word16, 0), word16, word32):byte] = SLICE(a2, byte, 0)
	return CONVERT(SLICE(a0 + 2<32>, word16, 0), word16, word32)
dhcp_option_short_exit:


word32 dhcp_option_long(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a4 a5
// Preserved: sp
dhcp_option_long_entry:
l2303AEF6:
	Mem8[a1 + a0:byte] = SLICE(a2 >>u 0x18<u32>, byte, 0)
	Mem14[CONVERT(SLICE(a0 + 1<i32>, word16, 0), word16, word32) + a1:byte] = SLICE(a2 >>u 0x10<u32>, byte, 0)
	Mem20[CONVERT(SLICE(a0 + 2<i32>, word16, 0), word16, word32) + a1:byte] = SLICE(a2 >>u 8<u32>, byte, 0)
	Mem27[a1 + CONVERT(SLICE(a0 + 3<i32>, word16, 0), word16, word32):byte] = SLICE(a2, byte, 0)
	return CONVERT(SLICE(a0 + 4<32>, word16, 0), word16, word32)
dhcp_option_long_exit:


word32 dhcp_create_msg(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg24, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_coarse_tmr
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0024:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_create_msg_entry:
l2303AF3C:
	word32 s1_108
	word32 s5_184
	s1_108 = s1
	branch a0 != 0<32> l2303AF68
l2303AF68:
	s1_108 = s1
	branch a1 == 0<32> l2303AF50
l2303AF6A:
	word32 a0_33
	word32 a2_34
	word32 s0_394
	word32 a1_395
	word32 s5_397
	word32 s8_398
	word32 a7_396
	word32 s4_179
	ra = pbuf_alloc(ra, s0, a0, 182<i32>, 308<i32>, 640<i32>, a3, a4, mstatus, s4, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_394, out s1_108, out a0_33, out a1_395, out a2_34, out a3, out a4, out a5, out a7_396, out s2, out s3, out s4_179, out s5_397, out s6, out s8_398, out mstatus)
	s5_184 = a0_33
	branch a0_33 == 0<32> l2303AF50
l2303AF86:
	branch s2 != 3<32> l2303AF94
l2303AF8C:
	branch CONVERT(Mem19[s3 + 5<i32>:byte], byte, word32) != s2 l2303AFAE
l2303AF94:
	word32 a5_63 = CONVERT(Mem19[s3 + 6<i32>:byte], byte, word32)
	branch a5_63 != 0<32> l2303AFA8
l2303AFA2:
	word32 a3_411
	word32 a2_410
	word32 a0_68
	word32 a1_409
	word32 s8_413
	word32 a4_412
	s1_108 = bl_rand(a0_33, a2_34, out a0_68, out a1_409, out a2_410, out a3_411, out a4_412, out a5_63, out s4_179, out s8_413)
	Mem79[a0_68:word32] = 0x4200E2B4<32>
l2303AFA8:
	Mem84[s3:word32] = a5_63
l2303AFAE:
	word32 s0_89 = Mem88[a0_33 + 4<i32>:int32]
	word32 a3_403
	word32 a4_404
	word32 a5_405
	word32 a2_402
	word32 a1_401
	word32 a0_400
	word32 t1_399
	ra = memset(ra, s0_89, 0<32>, 308<i32>, out t1_399, out a0_400, out a1_401, out a2_402, out a3_403, out a4_404, out a5_405)
	Mem106[s0_89:byte] = 1<8>
	Mem107[s0_89 + 1<i32>:byte] = 1<8>
	Mem112[s0_89 + 2<i32>:byte] = SLICE(CONVERT(Mem107[s1_108 + 64<i32>:byte], byte, word32), byte, 0)
	word32 a5_408
	word32 a3_406
	word32 a4_407
	word32 a0_115 = lwip_htonl(Mem112[s3:int32], out a3_406, out a4_407, out a5_408)
	Mem120[s0_89 + 4<i32>:byte] = SLICE(a0_115, byte, 0)
	Mem121[s0_89 + 5<i32>:byte] = SLICE(a0_115 >>u 8<u32>, byte, 0)
	Mem124[s0_89 + 6<i32>:byte] = SLICE(a0_115 >>u 0x10<u32>, byte, 0)
	Mem125[s0_89 + 7<i32>:byte] = SLICE(a0_115 >>u 24<i32>, byte, 0)
	s6 = 1<32>
	word32 a5_126 = 4<32>
	branch s2 == 4<32> l2303B018
l2303AFF8:
	a5_126 = s2 + -7<i32> & 255<i32>
	branch a5_126 <=u 1<32> l2303B018
l2303B004:
	branch s2 != 3<32> l2303B034
l2303B00A:
	a5_126 = CONVERT(Mem125[s3 + 5<i32>:byte], byte, word32) + 0xFFFFFFFC<32> & 255<i32>
	branch a5_126 >u 1<32> l2303B034
l2303B018:
	s1_108 = Mem125[a5_126 + 4<i32>:word32]
	Mem141[s0_89 + 12<i32>:byte] = SLICE(a5_126, byte, 0)
	Mem142[s0_89 + 13<i32>:byte] = SLICE(a5_126 >>u 8<u32>, byte, 0)
	Mem145[s0_89 + 14<i32>:byte] = SLICE(a5_126 >>u 0x10<u32>, byte, 0)
	Mem146[s0_89 + 15<i32>:byte] = SLICE(a5_126 >>u 24<i32>, byte, 0)
l2303B034:
	word32 a5_148 = s1_108 + 58<i32>
	word32 a4_150 = s0_89 + 28<i32>
	s1_108 = s1_108 + 64<i32>
l2303B040:
	a3 = CONVERT(Mem153[a5_148:byte], byte, word32)
	a4_150 = a4_150 + 1<32>
	Mem158[a4_150 + 4095<i32>:byte] = SLICE(a3, byte, 0)
	a5_148 = a5_148 + 1<32>
	branch a5_148 != s1_108 l2303B040
l2303B050:
	Mem162[s0_89 + 236<i32>:byte] = 0x63<8>
	Mem164[s0_89 + 239<i32>:byte] = 0x63<8>
	Mem166[s0_89 + 237<i32>:byte] = 0x82<8>
	Mem167[s0_89 + 240<i32>:byte] = 0x35<8>
	Mem170[s0_89 + 241<i32>:byte] = 1<8>
	Mem171[s0_89 + 238<i32>:byte] = 0x53<8>
	Mem175[s0_89 + 242<i32>:byte] = SLICE(s2, byte, 0)
	Mem183[s4_179:word16] = 3<16>
	a4 = 83<i32>
	a5 = 3<32>
l2303AF50:
	s5_184 = 0<32>
l2303AF52:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_108
	a0Out = s5_184
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5_184
	s6Out = s6
	mstatusOut = mstatus
	return ra
dhcp_create_msg_exit:


word32 dhcp_option_trailer(word32 ra, word32 a0, word32 a1, word32 a2, word32 s4, word32 mstatus, word32 dwArg0118, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_coarse_tmr
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0118:[0..31]
// LiveOut: mstatus ra s1 s2 s3 s4 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_option_trailer_entry:
l2303B086:
	Mem10[a1 + a0:byte] = 0xFF<8>
	word32 a5_5 = a0 + 1<i32> << 16<i32>
	word32 a5_14 = a5_5 >>u 16<i32>
	word32 a1_11 = a1 + (a5_5 >>u 16<i32>)
l2303B09E:
	branch a5_14 <=u 67<i32> l2303B0B0
l2303B0B0:
	Mem18[a1_11:byte] = 0<8>
	a5_14 = CONVERT(SLICE(a5_14 + 1<32>, word16, 0), word16, word32)
	a1_11 = a1_11 + 1<32>
l2303B0A2:
	word32 a1_23 = CONVERT(SLICE(a5_14 + 240<i32>, word16, 0), word16, word32)
l2303B0AC_thunk_pbuf_realloc:
	word32 s1_40
	word32 mstatus_46
	word32 s2_48
	word32 s3_49
	word32 s4_50
	word32 s6_52
	word32 s8_53
	word32 a2_69
	word32 a3_70
	word32 a4_71
	word32 a5_72
	word32 s5_73
	word32 ra_47 = pbuf_realloc(ra, a2, a1_23, 0xFFFFFFFF<32>, 67<i32>, s4, mstatus, dwArg0118, out s1_40, out a2_69, out a3_70, out a4_71, out a5_72, out s2_48, out s3_49, out s4_50, out s5_73, out s6_52, out s8_53, out mstatus_46)
	s1Out = s1_40
	s2Out = s2_48
	s3Out = s3_49
	s4Out = s4_50
	s6Out = s6_52
	s8Out = s8_53
	mstatusOut = mstatus_46
	return ra_47
dhcp_option_trailer_exit:


word32 dhcp_discover(word32 ra, word32 s0, word32 s1, word32 a4, word32 s4, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_start
//      dhcp_fine_tmr
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_discover_entry:
l2303B0BE:
	word32 a0_14 = Mem13[s1 + 40<i32>:word32]
	Mem18[s1 + 28<i32>:word32] = 0<32>
	dhcp_set_state(s1, 6<32>)
	word32 s0_36
	word32 a0_51
	word32 a4_316
	word32 a5_317
	word32 s1_155
	word32 s2_156
	word32 mstatus_169
	word32 a3_152
	word32 s3_157
	word32 s4_160
	word32 s5_161
	word32 s6_162
	word32 ra_170 = dhcp_create_msg(ra, s0, a0_14, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_36, out s1_155, out a0_51, out a3_152, out a4_316, out a5_317, out s2_156, out s3_157, out s4_160, out s5_161, out s6_162, out mstatus_169)
	branch a0_51 == 0<32> l2303B1AA
l2303B0EA:
	word32 a5_53 = CONVERT(wLoc22, uint16, word32)
	word32 a0_52 = Mem18[s0_36 + 4<i32>:word32]
	Mem62[s0_36 + 240<i32> + a5_53:byte] = 0x39<8>
	Mem65[CONVERT(SLICE(a5_53 + 1<32>, word16, 0), word16, word32) + (s0_36 + 240<i32>):byte] = 2<8>
	word32 a0_71 = dhcp_option_short(CONVERT(SLICE(a5_53 + 2<i32>, word16, 0), word16, word32), s0_36 + 240<i32>, CONVERT(Mem65[s3_157 + 56<i32>:uint16], uint16, word32))
	Mem77[s0_36 + 240<i32> + a0_71:byte] = 0x37<8>
	Mem83[CONVERT(SLICE(a0_71 + 1<i32>, word16, 0), word16, word32) + (s0_36 + 240<i32>):byte] = 4<8>
	uint16 wLoc22_221 = SLICE(a0_71 + 2<32>, word16, 0)
	word32 a5_104 = 0x230827A8<32>
l2303B154:
	word32 a4_92 = CONVERT(wLoc22_221, uint16, word32)
	Mem102[a4_92 + (s0_36 + 240<i32>):byte] = SLICE(CONVERT(Mem91[a5_104 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_98 = a4_92 + 1<i32> << 16<i32>
	wLoc22_221 = SLICE(a0_98 >>u 16<i32>, word16, 0)
	a5_104 = a5_104 + 1<32>
	branch a5_104 != 0xDCF7D85C<32> l2303B154
l2303B178:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 mstatus_120
	word32 s2_123
	word32 s3_124
	word32 s4_125
	word32 s8_320
	word32 s1_318
	word32 s6_319
	word32 ra_121 = dhcp_option_trailer(ra_170, a0_98 >>u 16<i32>, s0_36 + 240<i32>, a0_52, s4_160, mstatus_169, dwArgE8, out s1_318, out s2_123, out s3_124, out s4_125, out s6_319, out s8_320, out mstatus_120)
	word32 stackArg20 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg296 = <invalid>
	word32 a3_336
	word32 a4_337
	word32 s2_338
	word32 s3_339
	word32 s4_340
	word32 mstatus_341
	udp_sendto_if_src(ra, a0, a1, a2, a3, a4, a5, s8, mstatus, stackArg20, stackArg120, stackArg136, stackArg168, stackArg184, stackArg200, stackArg232, stackArg248, stackArg296, out a3_336, out a4_337, out s2_338, out s3_339, out s4_340, out mstatus_341)
	word32 s0_342
	word32 a0_343
	word32 a1_344
	word32 a2_345
	word32 a4_346
	word32 a5_347
	word32 a7_348
	word32 s8_349
	ra_170 = pbuf_free(ra_121, s2_123, 67<i32>, s3_124, s4_125, mstatus_120, dwArgF8, out s0_342, out s1_155, out a0_343, out a1_344, out a2_345, out a3_152, out a4_346, out a5_347, out a7_348, out s2_156, out s3_157, out s4_160, out s5_161, out s6_162, out s8_349, out mstatus_169)
l2303B1AA:
	word32 a5_173 = CONVERT(Mem172[s1_155 + 6<i32>:byte], byte, word32)
	branch a5_173 == 255<i32> l2303B1BC
l2303B1B6:
	Mem176[s1_155 + 6<i32>:byte] = SLICE(a5_173 + 1<32>, byte, 0)
l2303B1BC:
	word32 a5_182
	word32 a4_179 = CONVERT(Mem178[s1_155 + 6<i32>:byte], byte, word32)
	branch a4_179 >u 5<32> l2303B1F8
l2303B1F8:
	a5_182 = 0xEFFFA60<32>
l2303B1C6:
	a5_182 = CONVERT(SLICE((1<32> << a4_179) + 1000<i32>, word16, 0), word16, word32)
l2303B1D8:
	word32 a5_190 = a5_182 + 499<i32>
	Mem195[s1_155 + 8<i32>:word16] = SLICE(a5_190 ^ 500<i32>, word16, 0)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_155
	a0Out = 0<32>
	a3Out = a3_152
	a4Out = 500<i32>
	a5Out = a5_190 ^ 500<i32>
	s2Out = s2_156
	s3Out = s3_157
	s4Out = s4_160
	s5Out = s5_161
	s6Out = s6_162
	mstatusOut = mstatus_169
	return ra_170
dhcp_discover_exit:


word32 dhcp_check(word32 ra, word32 s0, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg90, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF0, word32 dwArgF4, word32 dwArgF8, word32 dwArg0118, word32 dwArg0168, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_fine_tmr
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 mstatus ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
dhcp_check_entry:
l2303B200:
	word32 a0_10 = Mem9[s0 + 40<i32>:word32]
	dhcp_set_state(s0, 8<32>)
	word32 a3_23
	word32 s0_27
	word32 s2_28
	word32 s4_29
	word32 mstatus_33
	word32 s1_35
	word32 s3_36
	word32 s5_37
	word32 s6_38
	word32 s7_39
	word32 ra_34 = etharp_query(ra, a0_10, s0 + 28<i32>, s4, mstatus, dwArg04, dwArg28, dwArg38, dwArg48, dwArg64, dwArg68, ra, dwArg78, dwArg88, dwArg90, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF0, dwArgF4, dwArgF8, dwArg0118, dwArg0168, out s0_27, out s1_35, out a3_23, out s2_28, out s3_36, out s4_29, out s5_37, out s6_38, out s7_39, out mstatus_33)
	word32 a5_48 = CONVERT(Mem9[s0_27 + 6<i32>:byte], byte, word32)
	branch a5_48 == 255<i32> l2303B232
l2303B22C:
	Mem51[s0_27 + 6<i32>:byte] = SLICE(a5_48 + 1<32>, byte, 0)
l2303B232:
	Mem54[s0_27 + 8<i32>:word16] = 1<16>
	s1Out = s1_35
	a3Out = a3_23
	a4Out = 255<i32>
	s2Out = s2_28
	s3Out = s3_36
	s4Out = s4_29
	s5Out = s5_37
	s6Out = s6_38
	s7Out = s7_39
	mstatusOut = mstatus_33
	return ra_34
dhcp_check_exit:


word32 dhcp_bind(word32 ra, word32 s0, word32 s1, word32 a0, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg98, word32 dwArg0108, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_fine_tmr
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_bind_entry:
l2303B242:
	branch a0 == 0<32> l2303B37C
l2303B37C:
	s0Out = s0
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2303B246:
	word32 a0_11 = Mem10[s0 + 40<i32>:word32]
	branch s0 == 0<32> l2303B320
l2303B252:
	word32 s0_13 = Mem10[a5 + 40<i32>:word32]
	Mem14[s0_13 + 18<i32>:word16] = 0<16>
	branch a5 == 0xFFFFFFFF<32> l2303B27C
l2303B25E:
	word32 a4_19
	a5 = a5 + 0x1E<32>
	branch a5 >=u 0xFFC4001E<32> l2303B32A
l2303B32A:
	a4_19 = 0xFFFFFFF<32>
l2303B268:
	a5 = a5 + 0x1E<32> >>u 60<i32>
	a4_19 = CONVERT(SLICE(a5, word16, 0), word16, word32)
	branch a5 == 0<32> l2303B330
l2303B330:
	Mem25[s0_13 + 20<i32>:word16] = 1<16>
	a5 = 1<32>
l2303B278:
	Mem28[s0_13 + 20<i32>:word16] = SLICE(a4_19, word16, 0)
l2303B27C:
	word32 s0_32 = Mem31[a5 + 44<i32>:word32]
	branch a5 == 0xFFFFFFFF<32> l2303B2AA
l2303B284:
	word32 a4_37
	word32 a5_34 = a5 + 0x1E<32>
	branch a5_34 >=u 0x3C0000<32> l2303B338
l2303B338:
	a4_37 = 0xFFFFFFF<32>
l2303B28E:
	a4_37 = CONVERT(SLICE(a5_34 >>u 60<i32>, word16, 0), word16, word32)
	branch a5_34 >>u 60<i32> == 0<32> l2303B33E
l2303B33E:
	Mem43[s0_32 + 10<i32>:word16] = 1<16>
l2303B29E:
	Mem46[s0_32 + 10<i32>:word16] = SLICE(a4_37, word16, 0)
l2303B2A2:
	a5 = CONVERT(Mem48[s0_32 + 10<i32>:uint16], uint16, word32)
	Mem50[s0_32 + 14<i32>:word16] = SLICE(a5, word16, 0)
l2303B2AA:
	word32 s0_53 = Mem52[a5 + 48<i32>:word32]
	branch a5 == 0xFFFFFFFF<32> l2303B2D8
l2303B2B2:
	word32 a4_58
	word32 a5_55 = a5 + 0x1E<32>
	branch a5_55 >=u 0x3C0000<32> l2303B346
l2303B346:
	a4_58 = 0xFFFFFFF<32>
l2303B2BC:
	a4_58 = CONVERT(SLICE(a5_55 >>u 60<i32>, word16, 0), word16, word32)
	branch a5_55 >>u 60<i32> == 0<32> l2303B34C
l2303B34C:
	Mem64[s0_53 + 12<i32>:word16] = 1<16>
l2303B2CC:
	Mem67[s0_53 + 12<i32>:word16] = SLICE(a4_58, word16, 0)
l2303B2D0:
	Mem71[s0_53 + 16<i32>:word16] = SLICE(CONVERT(Mem69[s0_53 + 12<i32>:uint16], uint16, word32), word16, 0)
l2303B2D8:
	word32 a5_74 = CONVERT(Mem73[s0_53 + 12<i32>:uint16], uint16, word32)
	word32 a4_107 = CONVERT(Mem73[s0_53 + 10<i32>:uint16], uint16, word32)
	branch a4_107 <u a5_74 l2303B2EA
l2303B2E4:
	branch a5_74 == 0<32> l2303B2EA
l2303B2E6:
	Mem76[s0_53 + 10<i32>:word16] = 0<16>
l2303B2EA:
	word32 a5_79 = CONVERT(Mem78[s0_53 + 7<i32>:byte], byte, word32)
	branch a5_79 == 0<32> l2303B354
l2303B354:
	word32 a5_80 = CONVERT(Mem78[s0_53 + 28<i32>:byte], byte, word32)
	a4_107 = CONVERT(SLICE(a5_80, byte, 0), byte, int32)
	branch a4_107 < 0<32> l2303B368
l2303B368:
	word32 a5_84
	a4_107 = 191<i32>
	branch a5_80 <=u 191<i32> l2303B378
l2303B378:
	a5_84 = 0x10000000<32>
l2303B370:
	a5_84 = 0x1000000<32>
l2303B374:
	a5_79 = a5_84 + 0xFFFFFFFF<32>
l2303B362:
	a5_79 = 255<i32>
l2303B2F0:
l2303B2F2:
	word32 s0_103 = Mem102[a5_79 + 36<i32>:word32]
	branch a5_79 != 0<32> l2303B308
l2303B2FA:
	s0_103 = Mem104[a5_79 + 28<i32>:word32]
	a4_107 = 0x1000000<32>
l2303B308:
	word32 a1_580
	word32 a5_582
	word32 s4_583
	word32 a2_581
	ra = netif_set_addr(ra, a0_11, a0_11, s0_103 + 28<i32>, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a4_107, dhcp_set_state(s0_103, 0xA<32>), s3, s4, s7, mstatus, a5_79, dwLoc18, dwLoc08, dwArg08, dwArg0C, dwArg24, dwArg28, dwArg38, dwArg48, dwArg4C, dwArg54, dwArg58, s1, dwArg78, dwArg98, dwArg0108, dwArg0118, out s0, out s1, out a1_580, out a2_581, out a3, out a4, out a5_582, out s2, out s3, out s4_583, out s5, out s6, out s7, out mstatus)
l2303B320:
	s0Out = s0
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
dhcp_bind_exit:


word32 dhcp_inc_pcb_refcount(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg28, word32 dwArg38, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_start
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0028:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a4 a5 ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 t0 t1 t3 tp
// Preserved: s0 sp
dhcp_inc_pcb_refcount_entry:
l2303B37E:
	word32 a5_100
	word32 a4_32
	branch CONVERT(Mem5[0x4200E2B0<32>:byte], byte, word32) != 0<32> l2303B3E2
l2303B396:
	word32 s1_23
	word32 a3_123
	word32 a4_124
	ra = udp_new(ra, 0x4200E000<32>, a3, a4, mstatus, out s1_23, out a3_123, out a4_124, out a5_100)
	Mem31[a0:word32] = s1_23 + 684<i32>
	a4_32 = 0xFFFFFFFF<32>
	branch a0 == 0<32> l2303B3EE
l2303B3A8:
	Mem37[a0 + 9<i32>:byte] = SLICE(CONVERT(Mem31[a0 + 9<i32>:byte], byte, word32) | 32<i32>, byte, 0)
	word32 a3_125
	word32 a4_126
	word32 a5_127
	udp_recv(udp_connect(udp_bind(a0, 0x230827AC<32>, 68<i32>, out a3_125, out a4_126, out a5_127), 0x230827AC<32>, 67<i32>, dwArg28, out s2), 0x2303B8FA<32>, 0<32>)
l2303B3E2:
	word32 a5_66 = CONVERT(Mem65[0x4200E2B0<32>:byte], byte, word32)
	Mem69[0x4200E2B0<32>:byte] = SLICE(a5_66 + 1<32>, byte, 0)
	a4_32 = 0<32>
	a5_100 = a5_66 + 1<32>
l2303B3EE:
	0<32> = dwArg38
	a0Out = a4_32
	a4Out = a4_32
	a5Out = a5_100
	s2Out = s2
	return ra
dhcp_inc_pcb_refcount_exit:


word32 dhcp_option_hostname.isra.0(word32 a0, word32 a1, word32 dwArg44, ptr32 & a0Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_renew
//      dhcp_coarse_tmr
// MayUse:  a0:[0..31] a1:[0..31] Stack +0044:[0..31]
// LiveOut: a0 s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t3
// Preserved: sp
dhcp_option_hostname.isra.0_entry:
l2303B3FC:
	word32 s0_59 = a0
	word32 a2_10 = Mem7[a0:word32]
	branch a0 == 0<32> l2303B456
l2303B40C:
	word32 a1_18
	word32 a2_99
	word32 a3_100
	word32 a4_101
	word32 a5_102
	word32 a0_14 = strlen(a0, out a1_18, out a2_99, out a3_100, out a4_101, out a5_102)
	branch a0_14 == 0<32> l2303B456
l2303B412:
	word32 a4_22 = 65<i32> - a1
	word32 a2_24 = dwArg44
	branch a0_14 >=u a4_22 l2303B424
l2303B422:
	a4_22 = a0_14
l2303B424:
	Mem30[a1_18 + a1:byte] = 0xC<8>
	Mem39[CONVERT(SLICE(a1 + 1<i32>, word16, 0), word16, word32) + a1_18:byte] = SLICE(a4_22, byte, 0)
	word32 a3_34 = a1 + 2<i32> << 16<i32>
	word32 a0_41 = dwArg44 + a4_22
	word32 a5_42 = a3_34 >>u 16<i32>
l2303B44A:
	branch a2_24 != a0_41 l2303B460
l2303B460:
	a2_24 = a2_24 + 1<32>
	Mem52[a5_42 + a1_18:byte] = SLICE(CONVERT(Mem46[a2_24 + -1<i32>:byte], byte, word32), byte, 0)
	a5_42 = CONVERT(SLICE(a5_42 + 1<i32>, word16, 0), word16, word32)
l2303B44E:
	s0_59 = CONVERT(SLICE((a3_34 >>u 16<i32>) + a4_22, word16, 0), word16, word32)
l2303B456:
	a0Out = s0_59
	s8Out = a2_10
	return s0_59
dhcp_option_hostname.isra.0_exit:


word32 dhcp_reboot(word32 ra, word32 s0, word32 s1, word32 a4, word32 s4, word32 s5, word32 mstatus, word32 dwArg14, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_network_changed
//      dhcp_fine_tmr
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0014:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a4 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_reboot_entry:
l2303B478:
	word32 a0_18 = Mem17[s1 + 40<i32>:word32]
	dhcp_set_state(s1, 3<32>)
	uint16 wLoc22_264 = SLICE(s4, uint16, 16)
	word32 a0_53
	word32 a4_366
	word32 a5_367
	word32 s4_368
	word32 a3_365
	word32 s0_364
	word32 s1_196
	word32 s6_203
	word32 s5_202
	word32 s2_197
	word32 s3_198
	word32 mstatus_210
	word32 ra_211 = dhcp_create_msg(ra, s0, a0_18, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, s5, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_364, out s1_196, out a0_53, out a3_365, out a4_366, out a5_367, out s2_197, out s3_198, out s4_368, out s5_202, out s6_203, out mstatus_210)
	branch a0_53 == 0<32> l2303B5A6
l2303B4A8:
	word32 a5_56 = CONVERT(wLoc22_264, uint16, word32)
	word32 a0_55 = Mem17[3<32>:word32]
	Mem65[a5_56 + 0xEF<32>:byte] = 0x39<8>
	Mem69[CONVERT(SLICE(a5_56 + 1<32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 2<8>
	word32 a0_74 = dhcp_option_short(CONVERT(SLICE(a5_56 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, 576<i32>)
	Mem84[a0_74 + 0xEF<32>:byte] = 0x32<8>
	word32 a0_85 = CONVERT(SLICE(a0_74 + 1<32>, word16, 0), word16, word32) + 0xEF<32>
	Mem87[a0_85:byte] = 4<8>
	word32 s4_89 = a0_74 + 2<i32> << 16<i32>
	word32 a3_369
	word32 a4_370
	word32 a5_371
	word32 a0_99 = dhcp_option_long(s4_89 >>u 0x10<u32>, 0xEF<32>, lwip_htonl(a0_85, out a3_369, out a4_370, out a5_371))
	Mem105[a0_99 + 0xEF<32>:byte] = 0x37<8>
	Mem110[CONVERT(SLICE(a0_99 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	uint16 wLoc22_267 = SLICE(a0_99 + 2<32>, word16, 0)
	word32 a5_114 = 0x230827A8<32>
l2303B548:
	word32 a4_119 = CONVERT(wLoc22_267, uint16, word32)
	Mem129[a4_119 + 0xEF<32>:byte] = SLICE(CONVERT(Mem118[a5_114 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_125 = a4_119 + 1<i32> << 16<i32>
	wLoc22_267 = SLICE(a0_125 >>u 16<i32>, word16, 0)
	a5_114 = a5_114 + 1<32>
	branch a5_114 != 0xDCF7D85C<32> l2303B548
l2303B56C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 a0_144
	word32 mstatus_162
	word32 s2_165
	word32 s3_166
	word32 s4_167
	word32 s6_374
	word32 s8_372
	word32 s8_375
	word32 s1_373
	word32 ra_163 = dhcp_option_trailer(ra_211, a0_144, dhcp_option_hostname.isra.0(a0_125 >>u 16<i32>, 0xEF<32>, dwArg14, out a0_144, out s8_372), a0_55, s4_89 >>u 0x10<u32>, mstatus_210, dwArgE8, out s1_373, out s2_165, out s3_166, out s4_167, out s6_374, out s8_375, out mstatus_162)
	word32 stackArg20 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg296 = <invalid>
	word32 a3_390
	word32 a4_391
	word32 s2_392
	word32 s3_393
	word32 s4_394
	word32 s7_395
	word32 s8_396
	word32 mstatus_397
	udp_sendto_if(ra, a0, a1, a2, a3, a4, s8, mstatus, stackArg20, stackArg120, stackArg136, stackArg168, stackArg184, stackArg200, stackArg232, stackArg248, stackArg296, out a3_390, out a4_391, out s2_392, out s3_393, out s4_394, out s7_395, out s8_396, out mstatus_397)
	word32 s0_398
	word32 a0_399
	word32 a1_400
	word32 a2_401
	word32 a3_402
	word32 a4_403
	word32 a5_404
	word32 a7_405
	word32 s4_406
	word32 s8_407
	ra_211 = pbuf_free(ra_163, s2_165, 67<i32>, s3_166, s4_167, mstatus_162, dwArgF8, out s0_398, out s1_196, out a0_399, out a1_400, out a2_401, out a3_402, out a4_403, out a5_404, out a7_405, out s2_197, out s3_198, out s4_406, out s5_202, out s6_203, out s8_407, out mstatus_210)
l2303B5A6:
	word32 a5_214 = CONVERT(Mem213[s1_196 + 6<i32>:byte], byte, word32)
	branch a5_214 == 255<i32> l2303B5B8
l2303B5B2:
	Mem217[s1_196 + 6<i32>:byte] = SLICE(a5_214 + 1<32>, byte, 0)
l2303B5B8:
	word32 a5_223
	word32 a5_220 = CONVERT(Mem219[s1_196 + 6<i32>:byte], byte, word32)
	branch a5_220 >u 9<32> l2303B5F2
l2303B5F2:
	a5_223 = 0x2000710<32>
l2303B5C2:
	a5_223 = CONVERT(SLICE(a5_220 + 1000<i32>, word16, 0), word16, word32)
l2303B5CE:
	Mem237[s1_196 + 8<i32>:word16] = SLICE(a5_223 + 499<i32> ^ 500<i32>, word16, 0)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_196
	a4Out = 500<i32>
	s2Out = s2_197
	s3Out = s3_198
	s4Out = dwArg78
	s5Out = s5_202
	s6Out = s6_203
	mstatusOut = mstatus_210
	return ra_211
dhcp_reboot_exit:


word32 dhcp_select(word32 ra, word32 s0, word32 s1, word32 a0, word32 a4, word32 s4, word32 s5, word32 mstatus, word32 dwArg14, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_fine_tmr
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0014:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s7 s9 sp
dhcp_select_entry:
l2303B5FA:
	uint16 wLoc22_325 = SLICE(s4, uint16, 16)
	branch a0 == 0<32> l2303B7B4
l2303B610:
	word32 a0_20 = Mem17[s1 + 40<i32>:word32]
	branch s1 == 0<32> l2303B7B4
l2303B618:
	dhcp_set_state(s1, 1<32>)
	word32 a0_56
	word32 s4_485
	word32 a5_483
	word32 s3_484
	word32 s0_481
	word32 a4_482
	ra = dhcp_create_msg(ra, 0xFFFFFFFA<32>, a0_20, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, s5, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_481, out s1, out a0_56, out a3, out a4_482, out a5_483, out s2, out s3_484, out s4_485, out s5, out s6, out mstatus)
	s3 = a0_56
	branch a0_56 == 0<32> l2303B776
l2303B638:
	word32 a5_60 = CONVERT(wLoc22_325, uint16, word32)
	Mem68[a5_60 + 0xEF<32>:byte] = 0x39<8>
	Mem71[CONVERT(SLICE(a5_60 + 1<32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 2<8>
	word32 a0_77 = dhcp_option_short(CONVERT(SLICE(a5_60 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, CONVERT(Mem71[s2 + 56<i32>:uint16], uint16, word32))
	Mem83[a0_77 + 0xEF<32>:byte] = 0x32<8>
	Mem89[CONVERT(SLICE(a0_77 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	word32 a5_488
	word32 a4_487
	word32 a3_486
	word32 a0_102 = dhcp_option_long(CONVERT(SLICE(a0_77 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, lwip_htonl(a0_77, out a3_486, out a4_487, out a5_488))
	Mem108[a0_102 + 0xEF<32>:byte] = 0x36<8>
	Mem113[CONVERT(SLICE(a0_102 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	word32 s4_116 = a0_102 + 2<i32> << 16<i32>
	word32 a4_490
	word32 a3_489
	word32 a5_491
	word32 a0_126 = dhcp_option_long(s4_116 >>u 0x10<u32>, 0xEF<32>, lwip_htonl(a0_102, out a3_489, out a4_490, out a5_491))
	Mem132[a0_126 + 0xEF<32>:byte] = 0x37<8>
	Mem137[CONVERT(SLICE(a0_126 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	uint16 wLoc22_329 = SLICE(a0_126 + 2<32>, word16, 0)
	word32 a5_141 = 0x230827A8<32>
l2303B710:
	word32 a4_146 = CONVERT(wLoc22_329, uint16, word32)
	Mem156[a4_146 + 0xEF<32>:byte] = SLICE(CONVERT(Mem145[a5_141 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_152 = a4_146 + 1<i32> << 16<i32>
	wLoc22_329 = SLICE(a0_152 >>u 16<i32>, word16, 0)
	a5_141 = a5_141 + 1<32>
	branch a5_141 != 0xDCF7D85C<32> l2303B710
l2303B734:
	word32 a0_171
	word32 mstatus_189
	word32 s2_192
	word32 s3_193
	word32 s8_197
	word32 a3_217
	word32 a4_218
	word32 mstatus_222
	word32 s3_227
	word32 s4_228
	word32 s8_492
	word32 s1_493
	word32 s4_494
	word32 s6_495
	word32 s2_496
	word32 s0_497
	word32 a0_498
	word32 a1_499
	word32 a2_500
	word32 a5_502
	word32 a4_501
	word32 a7_503
	word32 s4_504
	word32 s8_505
	ra = pbuf_free(udp_sendto_if_src(dhcp_option_trailer(ra, a0_171, dhcp_option_hostname.isra.0(a0_152 >>u 16<i32>, 0xEF<32>, dwArg14, out a0_171, out s8_492), a0_56, s4_116 >>u 0x10<u32>, mstatus, dwArgE8, out s1_493, out s2_192, out s3_193, out s4_494, out s6_495, out s8_197, out mstatus_189), Mem177[0x4200E2AC<32>:int32], s3_193, 0x230827B0<32>, 67<i32>, s2_192, 0x230827AC<32>, s8_197, mstatus_189, s0, dwArg48, s5, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_217, out a4_218, out s2_496, out s3_227, out s4_228, out mstatus_222), s3_227, a3_217, a4_218, s4_228, mstatus_222, dwArgF8, out s0_497, out s1, out a0_498, out a1_499, out a2_500, out a3, out a4_501, out a5_502, out a7_503, out s2, out s3, out s4_504, out s5, out s6, out s8_505, out mstatus)
l2303B776:
	word32 a5_270 = CONVERT(Mem269[s1 + 6<i32>:byte], byte, word32)
	branch a5_270 == 255<i32> l2303B788
l2303B782:
	Mem273[s1 + 6<i32>:byte] = SLICE(a5_270 + 1<32>, byte, 0)
l2303B788:
	word32 a5_279
	word32 a4_276 = CONVERT(Mem275[s1 + 6<i32>:byte], byte, word32)
	branch a4_276 >u 5<32> l2303B7C8
l2303B7C8:
	a5_279 = 0xEFFFA60<32>
l2303B792:
	a5_279 = CONVERT(SLICE((1<32> << a4_276) + 1000<i32>, word16, 0), word16, word32)
l2303B7A4:
	Mem291[s1 + 8<i32>:word16] = SLICE(a5_279 + 499<i32> ^ 500<i32>, word16, 0)
	a4 = 500<i32>
l2303B7B4:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg78
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
dhcp_select_exit:


word32 dhcp_dec_pcb_refcount(word32 a0, word32 a3, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_start
//      dhcp_stop
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
dhcp_dec_pcb_refcount_entry:
l2303B7D0:
	word32 a5_8 = CONVERT(Mem0[0x4200E2B0<32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem9[0x4200E2B0<32>:byte] = SLICE(a5_8, byte, 0)
	branch a5_8 != 0<32> l2303B808
l2303B808:
	a3Out = a3
	a4Out = 0x4200E2B0<32>
	a5Out = a5_8
	return s1
l2303B7E8:
	word32 s0_15 = Mem12[a0:word32]
	word32 a3_23
	word32 a4_24
	word32 a5_25
	word32 s1_26 = udp_remove(a0, a3, mstatus, out a3_23, out a4_24, out a5_25)
	Mem29[s0_15:word32] = 0<32>
	a3Out = a3_23
	a4Out = a4_24
	a5Out = a5_25
	return s1_26
dhcp_dec_pcb_refcount_exit:


word32 dhcp_handle_ack.isra.3(word32 a0, word32 a1, word32 a4, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a5 s0 s1 s4
// Trashed: a0 a1 a3 a4 a5 s0 s1 s4 s8 t3
// Preserved: sp
dhcp_handle_ack.isra.3_entry:
l2303B80A:
	word32 a5_12 = CONVERT(Mem10[0x4201A653<32>:byte], byte, word32)
	Mem14[a0 + 32<i32>:word32] = 0<32>
	Mem15[a0 + 36<i32>:word32] = 0<32>
	word32 s0_111 = a0
	branch a5_12 == 0<32> l2303B838
l2303B82E:
	Mem20[Mem15[0x4201A634<32>:int32] + 40<i32>:word32] = a0
l2303B838:
	word32 a5_25
	word32 a5_23 = CONVERT(Mem22[0x4201A654<32>:byte], byte, word32)
	branch a5_23 == 0<32> l2303B8E2
l2303B8E2:
	s0_111 = Mem22[a5_23 + 40<i32>:word32]
	a5_25 = a5_23 >>u 1<i32>
l2303B83E:
	a5_25 = Mem22[0x4201A638<32>:int32]
l2303B846:
	word32 a5_40
	Mem31[a5_25 + 44<i32>:word32] = s0_111
	branch CONVERT(Mem31[0x4201A655<32>:byte], byte, word32) == 0<32> l2303B8E8
l2303B8E8:
	s0_111 = Mem31[a4 + 40<i32>:word32]
	a5_40 = a4 + 7<32> >>u 3<i32>
l2303B84E:
	a5_40 = Mem31[0x4201A63C<32>:int32]
l2303B856:
	Mem45[a5_40 + 48<i32>:word32] = s0_111
	Mem60[(CONVERT(Mem45[a1 + 19<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem45[a1 + 17<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem45[a1 + 16<i32>:byte], byte, word32)) | CONVERT(Mem45[a1 + 18<i32>:byte], byte, word32) << 16<i32>)) + 28<i32>:word32] = s0_111
	branch CONVERT(Mem60[0x4201A656<32>:byte], byte, word32) == 0<32> l2303B8F4
l2303B8F4:
	Mem63[s0_111 + 7<i32>:byte] = 0<8>
l2303B87C:
	word32 a3_176
	word32 a4_177
	word32 a5_178
	a0 = lwip_htonl(Mem60[0x4201A640<32>:int32], out a3_176, out a4_177, out a5_178)
	Mem71[a0 + 32<i32>:word32] = s0_111
	Mem72[s0_111 + 7<i32>:byte] = 1<8>
l2303B890:
	branch CONVERT(Mem74[0x4201A657<32>:byte], byte, word32) == 0<32> l2303B8A4
l2303B896:
	word32 a3_179
	word32 a4_180
	word32 a5_181
	a0 = lwip_htonl(Mem74[0x4201A644<32>:int32], out a3_179, out a4_180, out a5_181)
	Mem83[a0 + 36<i32>:word32] = s0_111
l2303B8A4:
	word32 a5_110 = CONVERT(Mem85[0x4201A658<32>:byte], byte, word32)
	branch a5_110 == 0<32> l2303B8D8
l2303B8AA:
	s0_111 = Mem85[a0 + 32<i32>:word32]
	word32 a4_96
	word32 a3_182
	word32 a5_183
	lwip_htonl(a0, out a3_182, out a4_96, out a5_183)
	word32 a4_184
	word32 a5_185
	word32 a0_107 = dns_setserver(0<32>, fp + 0xFFFFFFEC<32>, a4_96, out a4_184, out a5_185)
	a5_110 = CONVERT(Mem103[0x4201A659<32>:byte], byte, word32)
	branch a5_110 == 0<32> l2303B8D8
l2303B8C8:
	s0_111 = Mem103[a0_107 + 36<i32>:word32]
	word32 a4_114
	word32 a3_186
	word32 a5_187
	lwip_htonl(a0_107, out a3_186, out a4_114, out a5_187)
	word32 a4_188
	dns_setserver(1<32>, fp + 0xFFFFFFEC<32>, a4_114, out a4_188, out a5_110)
l2303B8D8:
	s1Out = 0x4201A650<32>
	a5Out = a5_110
	s4Out = dwArg04
	return s0_111
dhcp_handle_ack.isra.3_exit:


void dhcp_recv(word32 ra, word32 s0, word32 a2, word32 a3, word32 a4, word32 s4, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s5 sp
dhcp_recv_entry:
l2303B8FA:
	word32 s1_7 = Mem6[0x4201A798<32>:int32]
	word32 s3_310 = Mem31[s1_7 + 40<i32>:int32]
	word32 s2_101 = a2
	branch s3_310 == 0<32> l2303B9E2
l2303B928:
	branch CONVERT(Mem31[s3_310 + 4<i32>:byte], byte, word32) == 0<32> l2303B9E2
l2303B92E:
	a4 = CONVERT(Mem31[a2 + 10<i32>:uint16], uint16, word32)
	branch a4 <=u 43<i32> l2303B9E2
l2303B93A:
	a4 = 2<32>
	a3 = CONVERT(Mem31[43<i32>:byte], byte, word32)
	branch a3 != 2<32> l2303B9E2
l2303B946:
	word32 a2_41 = CONVERT(Mem31[s1_7 + 64<i32>:byte], byte, word32)
	a4 = 0<32>
	a3 = 6<32>
l2303B94E:
	branch (a4_2288 & 255<i32>) >=u a2_41 l2303B95A
l2303B956:
	branch a4_2288 != 6<32> l2303B9CC
l2303B9CC:
	a4 = a4_2288 + 1<32>
	a4_2288 = a4
	branch CONVERT(Mem31[a4 + 70<i32>:byte], byte, word32) == CONVERT(Mem31[(s1_7 + a4_2288) + 58<i32>:byte], byte, word32) l2303B94E
l2303B95A:
	word32 a5_2240
	branch lwip_htonl(CONVERT(Mem31[0x32<32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem31[0x31<32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem31[0x30<32>:byte], byte, word32) << 8<i32> | CONVERT(Mem31[0x2F<32>:byte], byte, word32))), out a3, out a4, out a5_2240) != Mem31[s3_310:int32] l2303B9E2
l2303B982:
	word32 a1_2242
	word32 a5_2245
	word32 a2_2243
	word32 t1_2241
	word32 a4_2244
	word32 a0_296
	ra = memset(ra, 0x4201A650<32>, 0<32>, 0xA<32>, out t1_2241, out a0_296, out a1_2242, out a2_2243, out a3, out a4_2244, out a5_2245)
	s4 = 0x4201A000<32>
	a4 = CONVERT(Mem31[a2 + 10<i32>:uint16], uint16, word32)
	branch a4 <=u 43<i32> l2303B9E2
l2303B99E:
	word32 s8_109 = CONVERT(Mem31[a2 + 8<i32>:uint16], uint16, word32)
	word32 s11_106 = 240<i32>
l2303B9B0:
	word32 s6_102 = s2_101
l2303B9B2:
	word32 a5_105 = CONVERT(Mem904[s6_102 + 10<i32>:uint16], uint16, word32)
	branch s11_106 >=u a5_105 l2303BA06
l2303BA06:
	s6_102 = Mem904[s6_102:int32]
	s11_106 = CONVERT(SLICE(s11_106 - a5_105, word16, 0), word16, word32)
	s8_109 = CONVERT(SLICE(s8_109 - a5_105, word16, 0), word16, word32)
	branch s6_102 != 0<32> l2303B9B2
l2303BA26:
l2303B9BA:
	word32 s7_116 = 0x10000000<32>
	word32 s9_117 = s11_106
	word32 dwLoc68_1401 = Mem904[s6_102 + 4<i32>:int32]
	word32 a5_121 = 0xFFFFFFD<32>
l2303BBF4:
	byte bLoc44_2118 = SLICE(s4, byte, 0)
	branch s9_117 >=u s8_109 l2303BC0A
l2303BBF8:
	a4 = a5_121 + s9_117
	a3 = 255<i32>
	word32 a5_131 = CONVERT(Mem126[a4:byte], byte, word32)
	branch a5_131 != 255<i32> l2303BA28
l2303BA28:
	s7_116 = CONVERT(SLICE(s9_117 + 2<i32>, word16, 0), word16, word32)
	branch s7_116 <u s9_117 l2303B9E2
l2303BA38:
	word32 s10_162
	a3 = s9_117 + 1<i32>
	branch a3 >= CONVERT(Mem126[s6_102 + 10<i32>:uint16], uint16, word32) l2303BA70
l2303BA70:
	word32 a4_138 = Mem126[s6_102:int32]
	branch a4_138 == 0<32> l2303BD7C
l2303BD7C:
	a4 = 51<i32>
	branch a5_131 == 51<i32> l2303B9E2
l2303BD84:
	branch a5_131 >u 51<i32> l2303BD9E
l2303BD9E:
	branch a5_131 == 54<i32> l2303BB9E
l2303BB9E:
	a4 = 0<32>
l2303BDA6:
	branch a5_131 >u 54<i32> l2303BDBA
l2303BDBA:
	branch a5_131 == 58<i32> l2303BBAC
l2303BBAC:
	a4 = 0<32>
l2303BDC2:
	a4 = 0<32>
l2303BDAA:
	branch a5_131 == 52<i32> l2303BB88
l2303BB88:
	a4 = 0<32>
l2303BDB2:
	a4 = 0<32>
l2303BD88:
	a4 = 1<32>
	branch a5_131 == 1<32> l2303B9E2
l2303BD8E:
	branch a5_131 == 0<32> l2303BBBA
l2303BD92:
	a4 = 3<32>
	branch a5_131 == 3<32> l2303B9E2
l2303BD98:
	a4 = 0<32>
l2303BA78:
	a4 = CONVERT(Mem126[Mem126[a4_138 + 4<i32>:word32]:byte], byte, word32)
l2303BA44:
	a4 = CONVERT(Mem126[a4 + 1<i32>:byte], byte, word32)
l2303BA48:
	branch a5_131 == 51<i32> l2303BB7C
l2303BB7C:
	a5_131 = 4<32>
	branch a4 != 4<32> l2303B9E2
l2303BB82:
	s0 = 4<32>
	s10_162 = 3<32>
l2303BA50:
	branch a5_131 >u 51<i32> l2303BA80
l2303BA80:
	a3 = 54<i32>
	branch a5_131 == 54<i32> l2303BBA0
l2303BBA0:
	a5_131 = 4<32>
	branch a4 != 4<32> l2303B9E2
l2303BBA6:
	s0 = 4<32>
	s10_162 = 2<32>
l2303BA88:
	branch a5_131 >u 54<i32> l2303BAA8
l2303BAA8:
	a3 = 58<i32>
	branch a5_131 == 58<i32> l2303BBAE
l2303BBAE:
	a5_131 = 4<32>
	branch a4 != 4<32> l2303B9E2
l2303BBB4:
	s0 = 4<32>
	s10_162 = 4<32>
l2303BAB0:
l2303BAB4:
	a3 = 59<i32>
	branch a5_131 != 59<i32> l2303BA6A
l2303BAB8:
	a5_131 = 4<32>
	branch a4 != 4<32> l2303B9E2
l2303BABE:
	s0 = 4<32>
	s10_162 = 5<32>
l2303BA8C:
	a3 = 52<i32>
	branch a5_131 == 52<i32> l2303BB8A
l2303BB8A:
	branch a4 != 1<32> l2303B9E2
l2303BB90:
	a5_131 = 240<i32>
	branch s11_106 != 240<i32> l2303B9E2
l2303BB98:
	s0 = 1<32>
	s10_162 = 0<32>
l2303BA94:
l2303BA98:
	a3 = 53<i32>
	branch a5_131 != 53<i32> l2303BA6A
l2303BA9C:
	a5_131 = 1<32>
	branch a4 != 1<32> l2303B9E2
l2303BAA2:
	s0 = 1<32>
	s10_162 = 1<32>
l2303BA54:
	branch a5_131 == 1<32> l2303BAC4
l2303BAC4:
	a5_131 = 4<32>
	branch a4 != 4<32> l2303B9E2
l2303BACA:
	s0 = 4<32>
	s10_162 = 6<32>
l2303BA5A:
	branch a5_131 == 0<32> l2303BBBA
l2303BBBA:
	s9_117 = CONVERT(SLICE(a3, word16, 0), word16, word32)
l2303BA5E:
	a3 = 3<32>
	branch a5_131 == 3<32> l2303BB56
l2303BB56:
	branch a5_131 >=u a4 l2303B9E2
l2303BB5A:
	s10_162 = 7<32>
	s0 = 4<32>
l2303BA64:
l2303BA66:
	a3 = 6<32>
	branch a5_131 == 6<32> l2303BB60
l2303BB60:
	branch (a4 & 3<i32>) != 0<32> l2303B9E2
l2303BB68:
	a5_131 = 8<32>
	s0 = a4 & 255<i32>
	branch a4 <=u 8<32> l2303BB74
l2303BB72:
	s0 = 8<32>
l2303BB74:
	branch a4 <u s0 l2303B9E2
l2303BB78:
	s10_162 = 8<32>
l2303BA6A:
	s10_162 = 0xFFFFFFFF<32>
	s0 = 0<32>
l2303BACE:
	s4 = dwArg74
	branch a5_131 < a4 + s9_117 l2303B9E2
l2303BAD8:
	a4 = a4 + s7_116
	s9_117 = CONVERT(SLICE(a4, word16, 0), word16, word32)
	branch s0 == 0<32> l2303BBC2
l2303BAE4:
	dwArg24 = 0<32>
	word32 a5_274 = dwArg74 + 1616<i32> + s10_162
l2303BAEC:
	a4 = CONVERT(Mem276[a5_274:byte], byte, word32)
	branch a4 != 0<32> l2303BBC2
l2303BAF4:
	word32 a4_280 = s0 & 255<i32>
	branch s0 <=u 4<32> l2303BAFE
l2303BAFC:
	a4_280 = 4<32>
l2303BAFE:
	dwLoc64 = a4_280
	word32 a5_308
	word32 a2_2283
	word32 s8_2284
	word32 s1_2282
	s0 = pbuf_copy_partial(s6_102, fp + -68<i32>, a4_280, s7_116, out s1_2282, out a0_296, out a2_2283, out a3, out a4, out a5_308, out s2_101, out s3_310, out s4, out s8_2284)
	s8_109 = dwArg54
	branch a4 != a0_296 l2303B9E2
l2303BB14:
	branch s0 <=u 4<32> l2303BC5E
l2303BC5E:
	branch s0 != 4<32> l2303BC86
l2303BC86:
	branch s0 != 1<32> l2303B9E2
l2303BC8C:
	dwArg24 = CONVERT(bLoc44_2118, byte, word32)
l2303BC62:
	word32 a4_2286
	word32 a5_2287
	a0_296 = lwip_htonl(a0_296, out a3, out a4_2286, out a5_2287)
	dwArg24 = a0_296
l2303BC6A:
	word32 a5_332 = s10_162 + 0x4201A650<32>
	Mem334[a5_332:byte] = 1<8>
	Mem342[(s10_162 << 2<i32>) + 0x4201A628<32>:word32] = a5_332
	a4 = 1<32>
l2303BBC2:
	a5_121 = CONVERT(Mem356[s6_102 + 10<i32>:uint16], uint16, word32)
	branch s9_117 <u a5_121 l2303BBF4
l2303BBCA:
	s9_117 = CONVERT(SLICE(s9_117 - a5_121, word16, 0), word16, word32)
	s8_109 = CONVERT(SLICE(s8_109 - a5_121, word16, 0), word16, word32)
	branch s9_117 >=u s8_109 l2303B9E2
l2303BBE6:
	s6_102 = Mem356[s6_102:int32]
	branch s6_102 == 0<32> l2303B9E2
l2303BBEE:
	a5_121 = Mem356[s6_102 + 4<i32>:int32]
	dwLoc68_1401 = a5_121
l2303BB1A:
	a4 = s0 & 3<i32>
	branch (s0 & 3<i32>) != 0<32> l2303B9E2
l2303BB22:
	Mem392[a5_308:byte] = 1<8>
	word32 a5_397
	word32 a4_2285
	a0_296 = lwip_htonl(a0_296, out a3, out a4_2285, out a5_397)
	Mem400[a0_296:word32] = (s10_162 << 2<u32>) + 0x4201A628<32>
	dwLoc64 = a5_308
	s8_109 = dwArg74
	a4 = CONVERT(SLICE(s7_116 + 4<i32>, word16, 0), word16, word32)
	s0 = s0 + 0xFFFFFFFC<32> & 255<i32>
	a5_274 = a5_397 + 1<32>
	branch a4 <u s7_116 l2303B9E2
l2303BB50:
	s10_162 = s10_162 + 1<32>
	s7_116 = a4
l2303BC0A:
	a4 = s4 + 1616<i32>
	word32 a5_421 = CONVERT(Mem126[a4:byte], byte, word32)
	branch a5_421 != 0<32> l2303BC94
l2303BC94:
	a5_421 = Mem126[0x4201A628<32>:int32]
	Mem439[a4:byte] = 0<8>
	a4 = 1<32>
	branch a5_421 == 1<32> l2303BCBE
l2303BCA2:
	a4 = 2<32>
	branch a5_421 != 2<32> l2303BCB4
l2303BCB4:
	a4 = 3<32>
	branch a5_421 != 3<32> l2303BC14
l2303BCBA:
l2303BCBE:
	s8_109 = 236<i32>
	s11_106 = 108<i32>
l2303BC14:
	branch a5_421 != 0<32> l2303BCA8
l2303BCA8:
	s8_109 = 108<i32>
	s11_106 = 44<i32>
l2303BC18:
	branch CONVERT(Mem449[0x4201A651<32>:byte], byte, word32) == 0<32> l2303B9E2
l2303BC28:
	a4 = CONVERT(Mem449[0x4201A62C<32>:byte], byte, word32)
	a3 = 5<32>
	word32 a1_481 = Mem449[s2_101 + 4<i32>:int32]
	branch a4 != 5<32> l2303BCE2
l2303BCE2:
	a3 = 6<32>
	branch a4 != 6<32> l2303BD26
l2303BD26:
	branch a4 != 2<32> l2303B9E2
l2303BD2C:
	a4 = CONVERT(Mem449[s3_310 + 5<i32>:byte], byte, word32)
	branch a4 != 6<32> l2303B9E2
l2303BD34:
	a4 = CONVERT(Mem449[0x4201A652<32>:byte], byte, word32)
	branch a4 == 0<32> l2303B9E2
l2303BD44:
	word32 s1_522 = Mem449[s0 + 40<i32>:word32]
	Mem524[s0 + 8<i32>:word16] = 0<16>
	word32 a3_2274
	word32 a5_2276
	word32 a4_2275
	Mem552[lwip_htonl(a0_296, out a3_2274, out a4_2275, out a5_2276) + 24<i32>:word32] = s0
	word32 a4_560 = CONVERT(Mem552[a1_481 + 17<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem552[a1_481 + 16<i32>:byte], byte, word32) | CONVERT(Mem552[a1_481 + 18<i32>:byte], byte, word32) << 16<i32>
	Mem564[(CONVERT(Mem552[a1_481 + 19<i32>:byte], byte, word32) << 24<i32> | a4_560) + 28<i32>:word32] = s0
	word32 s0_2277
	word32 s1_2278
	word32 s6_2281
	word32 s5_2280
	word32 s3_2279
	ra = dhcp_select(ra, s0, s1_522, s1_522, a4_560, s4, 0x4201A628<32>, mstatus, dwLoc5C, dwLoc28, dwLoc08, dwArg08, 0xFFFFFFD<32>, dwArg28, s5, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, out s0_2277, out s1_2278, out a3, out a4, out s2_101, out s3_2279, out s4, out s5_2280, out s6_2281, out mstatus)
l2303BCE8:
	a4 = CONVERT(Mem449[s3_310 + 5<i32>:byte], byte, word32)
	a3 = 2<32>
	branch (a4 + -3<i32> & 255<i32>) <=u 2<32> l2303BD00
l2303BCFA:
	branch a4 != 1<32> l2303B9E2
l2303BD00:
	word32 s1_646 = Mem449[a0_296 + 40<i32>:word32]
	word32 a4_671
	word32 mstatus_675
	word32 s0_677
	word32 s1_678
	word32 s4_683
	word32 s1_2268
	word32 s7_2266
	word32 s6_2273
	word32 s0_2267
	word32 s6_2265
	word32 s2_2262
	word32 a5_2261
	word32 s3_2271
	word32 a2_2259
	word32 a1_2258
	word32 a3_2260
	word32 s3_2263
	word32 s5_2264
	word32 a5_2270
	word32 a0_2269
	word32 s5_2272
	ra = dhcp_discover(netif_set_addr(ra, s1_646, s1_646, 0x230827AC<32>, 0x230827AC<32>, 0x230827AC<32>, a4, dhcp_set_state(a0_296, 0xC<32>), s3_310, s4, s7_116, mstatus, dwLoc6C, dwLoc68_1401, dwLoc58, s6, s4, dwLoc2C, dwLoc28, dwLoc18, dwLoc08, dwLoc04, dwArg04, dwArg08, 0xFFFFFFD<32>, dwArg28, dwArg48, dwArgB8, dwArgC8, out s0_677, out s1_678, out a1_2258, out a2_2259, out a3_2260, out a4_671, out a5_2261, out s2_2262, out s3_2263, out s4_683, out s5_2264, out s6_2265, out s7_2266, out mstatus_675), s0_677, s1_678, a4_671, s4_683, mstatus_675, dwLoc18, dwLoc08, dwArg08, 0xFFFFFFD<32>, dwArg28, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, out s0_2267, out s1_2268, out a0_2269, out a3, out a4, out a5_2270, out s2_101, out s3_2271, out s4, out s5_2272, out s6_2273, out mstatus)
l2303BC3E:
	word32 s4_732
	word32 a5_729
	word32 s1_731
	word32 s0_730
	word32 a0_738
	word32 a5_722 = CONVERT(Mem449[s3_310 + 5<i32>:byte], byte, word32)
	branch a5_722 != 1<32> l2303BCC8
l2303BCC8:
	a4 = 2<32>
	branch (a5_722 + 0xFFFFFFFD<32> & 255<i32>) >u 2<32> l2303B9E2
l2303BCD4:
	s0_730 = dhcp_handle_ack.isra.3(a0_296, a1_481, 2<32>, out s1_731, out a5_729, out s4_732)
	a0_738 = s1_731
l2303BC48:
	word32 a5_2246
	s0_730 = dhcp_handle_ack.isra.3(a0_296, a1_481, 1<32>, out s1_731, out a5_2246, out s4_732)
	word32 a5_750 = CONVERT(Mem449[s1_731 + 65<i32>:byte], byte, word32)
	a0_738 = s1_731
	a5_729 = a5_750 & 8<32>
	branch (a5_750 & 8<32>) == 0<32> l2303BCDC
l2303BCDC:
	word32 s7_2252
	word32 s3_2249
	word32 s5_2250
	word32 s0_2247
	word32 s1_2248
	word32 s6_2251
	ra = dhcp_bind(ra, s0_730, s1_731, a0_738, a5_729, s3_310, s4_732, s7_116, mstatus, dwLoc68_1401, dwLoc64, s8, s6, dwLoc38, dwLoc28, dwLoc24, dwLoc1C, dwLoc18, dwArg08, dwArg28, dwArg98, dwArgA8, out s0_2247, out s1_2248, out a3, out a4, out s2_101, out s3_2249, out s4, out s5_2250, out s6_2251, out s7_2252, out mstatus)
l2303BC58:
	word32 s1_2253
	word32 s3_2254
	word32 s6_2256
	word32 s7_2257
	word32 s5_2255
	ra = dhcp_check(ra, s0_730, s4_732, mstatus, dwLoc6C, s6, dwLoc38, dwLoc28, dwLoc0C, dwLoc08, dwArg08, 0xFFFFFFD<32>, dwArg20, dwArg24, dwArg28, s5, dwArg48, dwArg58, dwArg64, dwArg68, dwArg78, dwArg80, dwArg84, dwArg88, dwArgA8, dwArgF8, out s1_2253, out a3, out a4, out s2_101, out s3_2254, out s4, out s5_2255, out s6_2256, out s7_2257, out mstatus)
l2303B9E2:
	word32 s3_2234
	word32 s0_2224
	word32 s8_2238
	word32 s6_2237
	word32 mstatus_2239
	word32 s1_2225
	word32 a7_2232
	word32 s2_2233
	word32 s4_2235
	word32 a4_2230
	word32 s5_2236
	word32 a5_2231
	word32 a1_2227
	word32 a2_2228
	word32 a3_2229
	word32 a0_2226
	pbuf_free(ra, s2_101, a3, a4, s4, mstatus, dwArgB8, out s0_2224, out s1_2225, out a0_2226, out a1_2227, out a2_2228, out a3_2229, out a4_2230, out a5_2231, out a7_2232, out s2_2233, out s3_2234, out s4_2235, out s5_2236, out s6_2237, out s8_2238, out mstatus_2239)
	return
dhcp_recv_exit:


word32 dhcp_network_changed(word32 ra, word32 s0, word32 s1, word32 a5, word32 s4, word32 s5, word32 mstatus, word32 dwArg14, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_set_link_up
// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0014:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_network_changed_entry:
l2303BDCA:
	branch a5 == 0<32> l2303BDF6
l2303BDCE:
	word32 a4_6 = CONVERT(Mem0[a5 + 5<i32>:byte], byte, word32)
	branch a4_6 >u 5<32> l2303BDE8
l2303BDE8:
	branch a4_6 != 0xA<32> l2303BDE0
l2303BDD8:
	branch a4_6 >=u 3<32> l2303BDEE
l2303BDEE:
	Mem11[a5 + 6<i32>:byte] = 0<8>
l2303BDF2_thunk_dhcp_reboot:
	word32 mstatus_34
	word32 s0_36
	word32 s6_209
	word32 s5_208
	word32 s4_207
	word32 s3_206
	word32 s2_205
	word32 a4_204
	word32 s1_203
	word32 ra_35 = dhcp_reboot(ra, s0, s1, a4_6, s4, s5, mstatus, dwArg14, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s0_36, out s1_203, out a4_204, out s2_205, out s3_206, out s4_207, out s5_208, out s6_209, out mstatus_34)
	s0Out = s0_36
	mstatusOut = mstatus_34
	return ra_35
l2303BDDE:
	branch a4_6 == 0<32> l2303BDF6
l2303BDF6:
	s0Out = s0
	mstatusOut = mstatus
	return ra
l2303BDE0:
	Mem52[a5 + 6<i32>:byte] = 0<8>
l2303BDE4_thunk_dhcp_discover:
	word32 mstatus_68
	word32 s0_70
	word32 s6_202
	word32 s5_201
	word32 s4_200
	word32 s2_198
	word32 s3_199
	word32 a5_197
	word32 a4_196
	word32 a3_195
	word32 a0_194
	word32 s1_193
	word32 ra_69 = dhcp_discover(ra, s0, s1, a4_6, s4, mstatus, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s0_70, out s1_193, out a0_194, out a3_195, out a4_196, out a5_197, out s2_198, out s3_199, out s4_200, out s5_201, out s6_202, out mstatus_68)
	s0Out = s0_70
	mstatusOut = mstatus_68
	return ra_69
dhcp_network_changed_exit:


word32 dhcp_arp_reply(word32 ra, word32 s0, word32 a0, word32 s4, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[16..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 mstatus ra s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s7 s9 sp
dhcp_arp_reply_entry:
l2303BDF8:
	branch a0 == 0<32> l2303BEDA
l2303BEDA:
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	mstatusOut = mstatus
	return ra
l2303BDFA:
	uint16 wLoc22_209 = SLICE(s4, uint16, 16)
	word32 a0_17 = Mem16[s0 + 40<i32>:word32]
	branch s0 == 0<32> l2303BECA
l2303BE0C:
	a4 = CONVERT(Mem16[s0 + 5<i32>:byte], byte, word32)
	branch a4 != 8<32> l2303BECA
l2303BE16:
	word32 s0_21 = Mem16[0x24<32>:word32]
	branch a4 != 8<32> l2303BECA
l2303BE1E:
	dhcp_set_state(s0_21, 0xC<32>)
	word32 s1_41
	word32 a0_55
	word32 s6_358
	word32 s5_357
	word32 s2_356
	word32 a5_355
	word32 a4_354
	word32 s0_151
	ra = dhcp_create_msg(ra, s0_21, a0_17, s0_21, fp + -34<i32>, a4, a0_17, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_151, out s1_41, out a0_55, out a3, out a4_354, out a5_355, out s2_356, out s3, out s4, out s5_357, out s6_358, out mstatus)
	branch a0_55 == 0<32> l2303BEB2
l2303BE3A:
	word32 a5_58 = CONVERT(wLoc22_209, uint16, word32)
	word32 a0_57 = Mem16[s1_41 + 4<i32>:word32]
	Mem66[s1_41 + 240<i32> + a5_58:byte] = 0x32<8>
	Mem69[CONVERT(SLICE(a5_58 + 1<32>, word16, 0), word16, word32) + (s1_41 + 240<i32>):byte] = 4<8>
	word32 mstatus_96
	word32 s2_99
	word32 s4_101
	word32 s8_104
	word32 a3_124
	word32 a4_125
	word32 mstatus_129
	word32 s2_133
	word32 s4_135
	word32 a0_367
	word32 a1_368
	word32 a2_369
	word32 s1_366
	word32 s3_365
	word32 s6_364
	word32 s3_363
	word32 s1_362
	word32 a5_361
	word32 a4_360
	word32 a3_359
	word32 a4_370
	word32 a5_371
	word32 a7_372
	word32 s2_373
	word32 s5_374
	word32 s6_375
	word32 s8_376
	ra = pbuf_free(udp_sendto_if_src(dhcp_option_trailer(ra, dhcp_option_long(CONVERT(SLICE(a5_58 + 2<i32>, word16, 0), word16, word32), s1_41 + 240<i32>, lwip_htonl(a0_57, out a3_359, out a4_360, out a5_361)), s1_41 + 240<i32>, a0_55, s4, mstatus, dwArgE8, out s1_362, out s2_99, out s3_363, out s4_101, out s6_364, out s8_104, out mstatus_96), Mem87[0x4200E2AC<32>:int32], s2_99, 0x230827B0<32>, 67<i32>, s4_101, 0x230827AC<32>, s8_104, mstatus_96, s0, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_124, out a4_125, out s2_133, out s3_365, out s4_135, out mstatus_129), s2_133, a3_124, a4_125, s4_135, mstatus_129, dwArgF8, out s0_151, out s1_366, out a0_367, out a1_368, out a2_369, out a3, out a4_370, out a5_371, out a7_372, out s2_373, out s3, out s4, out s5_374, out s6_375, out s8_376, out mstatus)
l2303BEB2:
	word32 a5_176 = CONVERT(Mem175[s0_151 + 6<i32>:byte], byte, word32)
	a4 = 255<i32>
	branch a5_176 == 255<i32> l2303BEC4
l2303BEBE:
	Mem179[s0_151 + 6<i32>:byte] = SLICE(a5_176 + 1<32>, byte, 0)
l2303BEC4:
	Mem182[s0_151 + 8<i32>:word16] = 0x14<16>
l2303BECA:
	0<32> = dwArg0128
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	mstatusOut = mstatus
	return ra
dhcp_arp_reply_exit:


word32 dhcp_renew(word32 ra, word32 s0, word32 s1, word32 a4, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_coarse_tmr
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: mstatus ra s0 s1 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s7 s9 sp
dhcp_renew_entry:
l2303BEDC:
	word32 a0_14 = Mem13[s1 + 40<i32>:word32]
	dhcp_set_state(s1, 5<32>)
	word32 a0_50
	word32 s5_376
	word32 s6_377
	word32 a5_374
	word32 s2_375
	word32 a3_372
	word32 a4_373
	word32 s0_371
	word32 s1_195
	word32 s4_200
	word32 s3_197
	word32 mstatus_209
	word32 ra_210 = dhcp_create_msg(ra, s0, a0_14, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_371, out s1_195, out a0_50, out a3_372, out a4_373, out a5_374, out s2_375, out s3_197, out s4_200, out s5_376, out s6_377, out mstatus_209)
	branch a0_50 == 0<32> l2303BFCA
l2303BF06:
	word32 a5_53 = CONVERT(wLoc22, uint16, word32)
	word32 a0_52 = Mem13[3<32>:word32]
	Mem62[a5_53 + 0xEF<32>:byte] = 0x39<8>
	Mem65[CONVERT(SLICE(a5_53 + 1<32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 2<8>
	word32 a0_71 = dhcp_option_short(CONVERT(SLICE(a5_53 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, CONVERT(Mem65[s3_197 + 56<i32>:uint16], uint16, word32))
	Mem77[a0_71 + 0xEF<32>:byte] = 0x37<8>
	Mem83[CONVERT(SLICE(a0_71 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	uint16 wLoc22_262 = SLICE(a0_71 + 2<32>, word16, 0)
	word32 a5_104 = 0x230827A8<32>
l2303BF70:
	word32 a4_92 = CONVERT(wLoc22_262, uint16, word32)
	Mem102[a4_92 + 0xEF<32>:byte] = SLICE(CONVERT(Mem91[a5_104 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_98 = a4_92 + 1<i32> << 16<i32>
	wLoc22_262 = SLICE(a0_98 >>u 16<i32>, word16, 0)
	a5_104 = a5_104 + 1<32>
	branch a5_104 != 0xDCF7D85C<32> l2303BF70
l2303BF94:
	word32 a0_117
	word32 mstatus_135
	word32 s1_137
	word32 s2_138
	word32 s3_139
	word32 s8_143
	word32 a3_160
	word32 a4_161
	word32 mstatus_165
	word32 s2_169
	word32 s4_171
	word32 s7_382
	word32 a0_385
	word32 s0_384
	word32 a2_387
	word32 a1_386
	word32 a4_389
	word32 a3_388
	word32 s5_393
	word32 a5_390
	word32 a7_391
	word32 s6_394
	word32 s8_395
	word32 s2_392
	word32 s8_383
	word32 s6_380
	word32 s3_381
	word32 s8_378
	word32 s4_379
	ra_210 = pbuf_free(udp_sendto_if(dhcp_option_trailer(ra_210, a0_117, dhcp_option_hostname.isra.0(a0_98 >>u 16<i32>, 0xEF<32>, dwArg14, out a0_117, out s8_378), a0_52, s4_200, mstatus_209, dwArgE8, out s1_137, out s2_138, out s3_139, out s4_379, out s6_380, out s8_143, out mstatus_135), Mem123[0x4200E2AC<32>:int32], s2_138, s1_137 + 24<i32>, 67<i32>, s3_139, s8_143, mstatus_135, s0, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_160, out a4_161, out s2_169, out s3_381, out s4_171, out s7_382, out s8_383, out mstatus_165), s2_169, a3_160, a4_161, s4_171, mstatus_165, dwArgF8, out s0_384, out s1_195, out a0_385, out a1_386, out a2_387, out a3_388, out a4_389, out a5_390, out a7_391, out s2_392, out s3_197, out s4_200, out s5_393, out s6_394, out s8_395, out mstatus_209)
l2303BFCA:
	word32 a5_213 = CONVERT(Mem212[s1_195 + 6<i32>:byte], byte, word32)
	branch a5_213 == 255<i32> l2303BFDC
l2303BFD6:
	Mem216[s1_195 + 6<i32>:byte] = SLICE(a5_213 + 1<32>, byte, 0)
l2303BFDC:
	word32 a5_222
	word32 a5_219 = CONVERT(Mem218[s1_195 + 6<i32>:byte], byte, word32)
	branch a5_219 >u 9<32> l2303C012
l2303C012:
	a5_222 = 0x4FFFE20<32>
l2303BFE6:
	a5_222 = CONVERT(SLICE(a5_219 + 2000<i32>, word16, 0), word16, word32)
l2303BFF2:
	Mem236[s1_195 + 8<i32>:word16] = SLICE(a5_222 + 499<i32> ^ 500<i32>, word16, 0)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_195
	s3Out = s3_197
	s4Out = s4_200
	mstatusOut = mstatus_209
	return ra_210
dhcp_renew_exit:


word32 dhcp_supplied_address(word32 a0, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_stop
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
dhcp_supplied_address_entry:
l2303C01A:
	branch a0 == 0<32> l2303C03C
l2303C03C:
l2303C01C:
	branch a5 == 0<32> l2303C03E
l2303C03E:
	a4Out = a4
	a5Out = a5
	return 0<32>
l2303C022:
	word32 a5_9 = CONVERT(Mem0[a5 + 5<i32>:byte], byte, word32)
	word32 a0_11 = 1<32>
	branch a5_9 == 0xA<32> l2303C036
l2303C02E:
	a0_11 = CONVERT(a5_9 <u -6<i32>, bool, word32)
l2303C036:
	a4Out = 0xA<32>
	a5Out = a5_9
	return a0_11 & 255<i32>
dhcp_supplied_address_exit:


word32 dhcp_release_and_stop(word32 ra, word32 s0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_start
//      dhcp_coarse_tmr
//      dhcp_fine_tmr
//      dhcp_stop
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_release_and_stop_entry:
	uint16 wLoc26 = SLICE(dwLoc28, uint16, 16)
	word16 wLoc28 = SLICE(dwLoc28, word16, 0)
l2303C040:
	word32 a0_16 = Mem15[s0 + 40<i32>:word32]
	branch s0 == 0<32> l2303C13A
l2303C054:
	a5 = CONVERT(Mem15[s0 + 5<i32>:byte], byte, word32)
	branch a5 == 0<32> l2303C13A
l2303C05C:
	word32 s0_18 = Mem15[a5 + 24<i32>:word32]
	Mem19[s0_18 + 28<i32>:word32] = 0<32>
	Mem20[s0_18 + 24<i32>:word32] = 0<32>
	Mem21[s0_18 + 32<i32>:word32] = 0<32>
	Mem22[s0_18 + 36<i32>:word32] = 0<32>
	Mem23[s0_18 + 48<i32>:word32] = 0<32>
	Mem24[s0_18 + 44<i32>:word32] = 0<32>
	Mem25[s0_18 + 40<i32>:word32] = 0<32>
	Mem26[s0_18 + 14<i32>:word16] = 0<16>
	Mem27[s0_18 + 16<i32>:word32] = 0<32>
	Mem28[s0_18 + 20<i32>:word16] = 0<16>
	word32 s1_163 = a0_16
	word32 dwLoc28_277 = dwLoc28
	word32 a5_162
	word32 a4_161
	branch dhcp_supplied_address(a0_16, a5, out a4_161, out a5_162) == 0<32> l2303C10E
l2303C090:
	word32 a0_63
	word32 s0_366
	word32 a3_367
	word32 s2_368
	word32 s3_369
	word32 s5_370
	word32 s6_371
	ra = dhcp_create_msg(ra, s0_18, a0_16, s0_18, fp + -38<i32>, a4_161, s4, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_366, out s1_163, out a0_63, out a3_367, out a4_161, out a5_162, out s2_368, out s3_369, out s4, out s5_370, out s6_371, out mstatus)
	s3 = a0_63
	branch a0_63 == 0<32> l2303C10E
l2303C0A2:
	word32 s2_65 = Mem30[a0_63 + 4<i32>:int32]
	word32 a5_66 = CONVERT(wLoc26, uint16, word32)
	Mem74[s2_65 + 240<i32> + a5_66:byte] = 0x36<8>
	Mem77[CONVERT(SLICE(a5_66 + 1<32>, word16, 0), word16, word32) + (s2_65 + 240<i32>):byte] = 4<8>
	word32 s4_79 = a5_66 + 2<i32> << 16<i32>
	word32 a3_372
	word32 a4_373
	word32 a5_374
	word32 a0_89 = dhcp_option_long(s4_79 >>u 0x10<u32>, s2_65 + 240<i32>, lwip_htonl(a0_63, out a3_372, out a4_373, out a5_374))
	word32 mstatus_104
	word32 s1_106
	word32 s3_108
	word32 s8_112
	word32 a3_129
	word32 a4_130
	word32 mstatus_134
	word32 s3_139
	word32 s4_140
	word32 s2_375
	word32 s4_376
	word32 s6_377
	word32 s2_378
	word32 s8_379
	word32 s0_380
	word32 a0_381
	word32 a1_382
	word32 a2_383
	word32 a3_384
	word32 a7_385
	word32 s2_386
	word32 s5_387
	word32 s6_388
	word32 s8_389
	ra = pbuf_free(udp_sendto_if(dhcp_option_trailer(ra, a0_89, s2_65 + 240<i32>, a0_63, s4_79 >>u 0x10<u32>, mstatus, dwArgE8, out s1_106, out s2_375, out s3_108, out s4_376, out s6_377, out s8_112, out mstatus_104), Mem95[0x4200E2AC<32>:int32], s3_108, fp + -36<i32>, 67<i32>, s1_106, s8_112, mstatus_104, s0, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_129, out a4_130, out s2_378, out s3_139, out s4_140, out s7, out s8_379, out mstatus_134), s3_139, a3_129, a4_130, s4_140, mstatus_134, dwArgF8, out s0_380, out s1_163, out a0_381, out a1_382, out a2_383, out a3_384, out a4_161, out a5_162, out a7_385, out s2_386, out s3, out s4, out s5_387, out s6_388, out s8_389, out mstatus)
	dwLoc28_277 = SEQ(SLICE(a0_89, word16, 0), wLoc28) (alias)
l2303C10E:
	word32 s0_205
	word32 a1_390
	word32 a2_391
	word32 a5_392
	ra = netif_set_addr(ra, s1_163, s1_163, 0x230827AC<32>, 0x230827AC<32>, 0x230827AC<32>, a4_161, a5_162, s3, s4, s7, mstatus, dwLoc2C, dwLoc28_277, dwLoc18, dwLoc08, dwLoc04, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg68, dwArg88, dwArgF8, dwArg0108, out s0_205, out s1, out a1_390, out a2_391, out a3, out a4, out a5_392, out s2, out s3, out s4, out s5, out s6, out s7, out mstatus)
	dhcp_set_state(s0_205, 0<32>)
	a5 = CONVERT(Mem194[s0_205 + 4<i32>:byte], byte, word32)
	branch a5 == 0<32> l2303C13A
l2303C132:
	s1 = dhcp_dec_pcb_refcount(s0_205, a3, mstatus, out a3, out a4, out a5)
	Mem236[s0_205 + 4<i32>:byte] = 0<8>
l2303C13A:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
dhcp_release_and_stop_exit:


word32 dhcp_start(word32 ra, word32 a0, word32 a3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_coarse_tmr
//      dhcp_fine_tmr
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
dhcp_start_entry:
l2303C14A:
	word32 s1_12 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l2303C1B4
l2303C158:
	word32 a5_14 = CONVERT(Mem11[a0 + 65<i32>:byte], byte, word32)
	s1_12 = 0xFFFFFFF0<32>
	a5 = a5_14 & 1<32>
	branch (a5_14 & 1<32>) == 0<32> l2303C1B4
l2303C162:
	a4 = CONVERT(Mem11[a0 + 56<i32>:uint16], uint16, word32)
	a5 = 575<i32>
	s2 = Mem11[a0 + 40<i32>:int32]
	branch a4 >u 575<i32> l2303C176
l2303C176:
	branch s2 != 0<32> l2303C1C2
l2303C1C2:
	branch CONVERT(Mem11[s2 + 4<i32>:byte], byte, word32) == 0<32> l2303C18A
l2303C1C8:
	word32 a3_331
	word32 a4_332
	word32 a5_333
	dhcp_dec_pcb_refcount(a0, a3, mstatus, out a3_331, out a4_332, out a5_333)
l2303C17C:
	word32 a1_317
	word32 a3_318
	word32 a7_319
	word32 s2_320
	word32 s8_321
	word32 a0_33 = mem_malloc(ra, a0, 52<i32>, a3, a4, s2, mstatus, dwArg04, dwArg24, dwArg84, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0178, out a1_317, out a3_318, out a4, out a5, out a7_319, out s2_320, out s3, out s4, out s5, out s6, out s8_321)
	s2 = a0_33
	branch a0_33 == 0<32> l2303C172
l2303C188:
	Mem56[a0_33 + 40<i32>:word32] = a0
l2303C18A:
	word32 a0_62
	word32 a3_65
	word32 a4_66
	word32 a0_74
	word32 t1_327
	word32 a1_328
	word32 a2_329
	word32 a5_330
	ra = dhcp_inc_pcb_refcount(memset(ra, s2, 0<32>, 52<i32>, out t1_327, out a0_62, out a1_328, out a2_329, out a3_65, out a4_66, out a5_330), a0_62, a3_65, a4_66, mstatus, dwArg18, dwArg28, out a0_74, out a4, out a5, out s2)
	s1_12 = a0_74
	branch a0_74 != 0<32> l2303C172
l2303C19E:
	Mem90[s2 + 4<i32>:byte] = 1<8>
	branch (CONVERT(Mem90[a0 + 65<i32>:byte], byte, word32) & 4<32>) != 0<32> l2303C1CE
l2303C1CE:
	word32 a0_97
	word32 s0_107
	word32 s1_322
	word32 a3_323
	ra = dhcp_discover(ra, a0, a0_74, a4, s4, mstatus, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out s0_107, out s1_322, out a0_97, out a3_323, out a4, out a5, out s2, out s3, out s4, out s5, out s6, out mstatus)
	s1_12 = a0_97
	branch a0_97 == 0<32> l2303C1B4
l2303C1D8:
	word32 s0_324
	word32 s1_325
	word32 a3_326
	ra = dhcp_release_and_stop(ra, s0_107, s3, s4, s7, mstatus, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out s0_324, out s1_325, out a3_326, out a4, out a5, out s2, out s3, out s4, out s5, out s6, out s7, out mstatus)
l2303C1AC:
	a5 = dhcp_set_state(s2, 2<32>)
l2303C172:
	s1_12 = 0xFFFFFFFF<32>
l2303C1B4:
	0<32> = dwArg38
	s1Out = s1_12
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
dhcp_start_exit:


void dhcp_coarse_tmr(word32 ra, word32 s1, word32 s2, word32 s4, word32 s8, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] s8:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_coarse_tmr_entry:
l2303C1E0:
	word32 a5_112 = 0x4201A000<32>
	word32 s0_33 = Mem6[0x4201A660<32>:int32]
	uint16 wLoc32_518 = SLICE(s8, uint16, 16)
	word32 s3_140 = 1<32>
	word32 s4_141 = 0x2000710<32>
	word32 s7_254 = 0x23082000<32>
	s1_138 = s1
l2303C216:
	word32 s1_138
	branch s0_33 != 0<32> l2303C230
l2303C230:
	word32 s0_345
	word32 s0_115 = Mem35[a5_112 + 40<i32>:word32]
	branch a5_112 == 0<32> l2303C25E
l2303C234:
	branch CONVERT(Mem35[a5_112 + 5<i32>:byte], byte, word32) == 0<32> l2303C25E
l2303C23A:
	word32 a3_38 = CONVERT(Mem35[a5_112 + 20<i32>:uint16], uint16, word32)
	branch a3_38 == 0<32> l2303C262
l2303C240:
	word32 a4_41 = CONVERT(Mem35[a5_112 + 18<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem43[a5_112 + 18<i32>:word16] = SLICE(a4_41 >>u 16<i32>, word16, 0)
	branch a3_38 != a4_41 >>u 16<i32> l2303C262
l2303C262:
	word32 a4_46 = CONVERT(Mem45[a5_112 + 16<i32>:uint16], uint16, word32)
	branch a4_46 == 0<32> l2303C3AE
l2303C26A:
	Mem48[a5_112 + 16<i32>:word16] = SLICE(a4_46 + -1<i32>, word16, 0)
	branch a4_46 != s3_140 l2303C3AE
l2303C3AE:
	word32 a4_53 = CONVERT(Mem52[a5_112 + 14<i32>:uint16], uint16, word32)
	branch a4_53 == 0<32> l2303C25E
l2303C3B6:
	Mem55[a5_112 + 14<i32>:word16] = SLICE(a4_53 + -1<i32>, word16, 0)
	branch a4_53 != s3_140 l2303C25E
l2303C3C2:
	a5_112 = CONVERT(Mem55[s1_138 + 5<i32>:byte], byte, word32)
	s0_115 = Mem55[s1_138 + 40<i32>:word32]
	word32 a4_62 = a5_112 & 251<i32>
	branch (a5_112 & 251<i32>) == s3_140 l2303C3D6
l2303C3D0:
	a4_62 = 0xA<32>
	branch a5_112 != 0xA<32> l2303C25E
l2303C3D6:
	ra = dhcp_renew(ra, s0_115, s1_138, a4_62, s4_141, mstatus, s4, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, out s0_115, out s1_138, out s3_140, out s4_141, out mstatus)
	a5_112 = CONVERT(Mem55[s1_138 + 12<i32>:uint16] - Mem55[s1_138 + 18<i32>:uint16], uint16, uint16)
	branch s3_140 >= a5_112 l2303C25E
l2303C3EA:
	Mem114[s1_138 + 14<i32>:word16] = SLICE(a5_112 >> 1<i32>, word16, 0)
	a5_112 = a5_112 >> 1<i32>
l2303C276:
	s0_115 = Mem48[s1_138 + 40<i32>:word32]
	a5_112 = 0xA<32>
	word32 a4_117 = CONVERT(Mem48[s1_138 + 5<i32>:byte], byte, word32)
	branch a4_117 >u 0xA<32> l2303C25E
l2303C282:
	word32 a5_119 = 1074<i32> >>u a4_117
	a5_112 = a5_119 & 1<32>
	branch (a5_119 & 1<32>) == 0<32> l2303C25E
l2303C28E:
	dhcp_set_state(s1_138, 4<32>)
	word32 s5_142
	word32 a0_152
	word32 a5_971
	word32 a3_969
	word32 a4_970
	word32 s2_972
	word32 s6_973
	ra = dhcp_create_msg(ra, s0_115, s0_115, s1_138, fp + -50<i32>, a4_117, s4_141, mstatus, dwLoc1C, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out s0_115, out s1_138, out a0_152, out a3_969, out a4_970, out a5_971, out s2_972, out s3_140, out s4_141, out s5_142, out s6_973, out mstatus)
	branch a0_152 == 0<32> l2303C35E
l2303C2A8:
	word32 s2_154 = Mem48[a0_152 + 4<i32>:int32]
	word32 a5_155 = CONVERT(wLoc32_518, uint16, word32)
	Mem163[s2_154 + 240<i32> + a5_155:byte] = 0x39<8>
	Mem166[CONVERT(SLICE(a5_155 + 1<32>, word16, 0), word16, word32) + (s2_154 + 240<i32>):byte] = 2<8>
	word32 a0_172 = dhcp_option_short(CONVERT(SLICE(a5_155 + 2<i32>, word16, 0), word16, word32), s2_154 + 240<i32>, CONVERT(Mem166[s0_115 + 56<i32>:uint16], uint16, word32))
	Mem178[s2_154 + 240<i32> + a0_172:byte] = 0x37<8>
	Mem184[CONVERT(SLICE(a0_172 + 1<i32>, word16, 0), word16, word32) + (s2_154 + 240<i32>):byte] = 4<8>
	uint16 wLoc32_520 = SLICE(a0_172 + 2<32>, word16, 0)
	word32 a5_187 = 0<32>
l2303C30A:
	word32 a4_191 = CONVERT(wLoc32_520, uint16, word32)
	Mem201[a4_191 + (s2_154 + 240<i32>):byte] = SLICE(CONVERT(Mem190[s5_142 + a5_187:byte], byte, word32), byte, 0)
	word32 a0_197 = a4_191 + 1<i32> << 16<i32>
	wLoc32_520 = SLICE(a0_197 >>u 16<i32>, word16, 0)
	a5_187 = a5_187 + 1<32>
	branch a5_187 != 4<32> l2303C30A
l2303C32E:
	wLoc32_518 = SLICE(a0_216, word16, 0)
	word32 s8_210
	word32 a0_216
	word32 mstatus_233
	word32 s6_240
	word32 s8_241
	word32 a3_260
	word32 a4_261
	word32 mstatus_265
	word32 s4_271
	word32 s8_275
	word32 s3_979
	word32 a4_984
	word32 s6_989
	word32 s2_975
	word32 s1_974
	word32 s3_976
	word32 s4_977
	word32 s2_978
	word32 a0_980
	word32 a1_981
	word32 a2_982
	word32 s2_987
	word32 a3_983
	word32 a5_985
	word32 a7_986
	word32 s5_988
	word32 s8_990
	ra = pbuf_free(udp_sendto_if(dhcp_option_trailer(ra, a0_216, s2_154 + 240<i32>, s8_210, s4_141, mstatus, dwArgD8, out s1_974, out s2_975, out s3_976, out s4_977, out s6_240, out s8_241, out mstatus_233), Mem221[s6_240 + 684<i32>:int32], s8_241, s7_254 + 1968<i32>, 67<i32>, dhcp_option_hostname.isra.0(a0_197 >>u 16<i32>, s2_154 + 240<i32>, dwArg04, out a0_216, out s8_210), s8_241, mstatus_233, s4, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out a3_260, out a4_261, out s2_978, out s3_979, out s4_271, out s7_254, out s8_275, out mstatus_265), s8_275, a3_260, a4_261, s4_271, mstatus_265, dwArgE8, out s0_115, out s1_138, out a0_980, out a1_981, out a2_982, out a3_983, out a4_984, out a5_985, out a7_986, out s2_987, out s3_140, out s4_141, out s5_988, out s6_989, out s8_990, out mstatus)
l2303C35E:
	word32 a5_312 = CONVERT(Mem311[s1_138 + 6<i32>:byte], byte, word32)
	branch a5_312 == 255<i32> l2303C370
l2303C36A:
	Mem315[s1_138 + 6<i32>:byte] = SLICE(a5_312 + 1<32>, byte, 0)
l2303C370:
	word32 a4_318 = CONVERT(Mem317[s1_138 + 6<i32>:byte], byte, word32)
	word32 a5_322 = s4_141
	branch a4_318 >u 9<32> l2303C388
l2303C37C:
	a5_322 = CONVERT(SLICE(a4_318 + 1000<i32>, word16, 0), word16, word32)
l2303C388:
	word32 a4_333 = CONVERT(Mem317[s1_138 + 18<i32>:uint16], uint16, word32)
	Mem334[s1_138 + 8<i32>:word16] = SLICE(a5_322 + 499<i32> ^ 500<i32>, word16, 0)
	a5_112 = CONVERT(Mem334[s1_138 + 20<i32>:uint16], uint16, word32) - a4_333
	branch s3_140 >= a5_112 l2303C25E
l2303C3A6:
	Mem341[s1_138 + 16<i32>:word16] = SLICE(a5_112 >> 1<i32>, word16, 0)
	a5_112 = a5_112 >> 1<i32>
l2303C252:
	word32 a3_351
	word32 mstatus_355
	word32 s4_362
	word32 s7_365
	word32 s2_961
	word32 a5_960
	word32 s1_958
	word32 a4_959
	word32 a4_965
	word32 s6_964
	word32 s3_962
	word32 s5_963
	word32 s2_966
	word32 s5_967
	word32 s6_968
	ra = dhcp_start(dhcp_release_and_stop(ra, s0_115, s3_140, s4_141, s7_254, mstatus, s4, s2, dwLoc18, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, out s0_345, out s1_958, out a3_351, out a4_959, out a5_960, out s2_961, out s3_962, out s4_362, out s5_963, out s6_964, out s7_365, out mstatus_355), s0_345, a3_351, s4_362, s7_365, mstatus_355, dwLoc3C, dwLoc38, s2, dwLoc1C, dwLoc18, dwLoc14, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0138, out s1_138, out a4_965, out a5_112, out s2_966, out s3_140, out s4_141, out s5_967, out s6_968, out s7_254, out mstatus)
	s0_115 = s0_345
l2303C25E:
	s0_33 = Mem407[s0_115:word32]
l2303C218:
	0<32> = dwArg0198
	return
dhcp_coarse_tmr_exit:


void dhcp_fine_tmr(word32 ra, word32 s0, word32 s1, word32 a4, word32 s2, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_fine_tmr_entry:
l2303C3F2:
	word32 s0_262 = Mem6[0x4201A660<32>:int32]
	word32 s1_113 = 1<32>
	word32 s2_114 = 0xC<32>
	word32 s3_115 = 6<32>
	word32 s4_116 = 8<32>
	word32 s5_117 = 3<32>
	word32 s6_118 = 5<32>
l2303C418:
	branch s0_262 != 0<32> l2303C42E
l2303C42E:
	word32 s0_135
	word32 s0_193 = Mem30[a4 + 40<i32>:word32]
	branch a4 == 0<32> l2303C440
l2303C432:
	word32 a5_32 = CONVERT(Mem30[a4 + 8<i32>:uint16], uint16, word32)
	branch s1_113 >=u a5_32 l2303C444
l2303C444:
	branch a5_32 != s1_113 l2303C440
l2303C448:
	Mem34[a4 + 8<i32>:word16] = 0<16>
	s0_193 = Mem34[a4 + 40<i32>:word32]
	word32 a5_36 = CONVERT(Mem34[a4 + 5<i32>:byte], byte, word32)
	branch a5_36 == s2_114 l2303C45A
l2303C456:
	branch a5_36 != s3_115 l2303C462
l2303C462:
	branch a5_36 != s1_113 l2303C482
l2303C482:
	branch a5_36 != s4_116 l2303C49C
l2303C49C:
	branch a5_36 != s5_117 l2303C440
l2303C4A0:
	branch s1_113 <u CONVERT(Mem34[a4 + 6<i32>:byte], byte, word32) l2303C45C
l2303C4AA:
	ra = dhcp_reboot(ra, s0_193, s1_113, a4, s4_116, s5_117, mstatus, dwLoc0C, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_193, out s1_113, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out mstatus)
l2303C486:
	word32 a5_71 = CONVERT(Mem34[a4 + 6<i32>:byte], byte, word32)
	branch s1_113 <u a5_71 l2303C496
l2303C496:
	word32 a3_548
	ra = dhcp_bind(ra, s0_193, s1_113, s0_193, a5_71, s3_115, s4_116, s7, mstatus, s2, s0, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg58, dwArg78, dwArgE8, dwArgF8, out s0_193, out s1_113, out a3_548, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7, out mstatus)
l2303C490:
	word32 a3_549
	ra = dhcp_check(ra, s0_193, s4_116, mstatus, s4, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg58, s1, dwArg70, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD0, dwArgD4, dwArgD8, dwArgF8, dwArg0148, out s1_113, out a3_549, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7, out mstatus)
l2303C466:
	branch s6_118 <u CONVERT(Mem34[a4 + 6<i32>:byte], byte, word32) l2303C476
l2303C476:
	word32 a3_141
	word32 mstatus_145
	word32 s4_152
	word32 s7_155
	word32 s2_542
	word32 s1_539
	word32 a4_540
	word32 a5_541
	word32 s3_543
	word32 s5_544
	word32 s6_545
	word32 a5_546
	ra = dhcp_start(dhcp_release_and_stop(ra, s0_193, s3_115, s4_116, s7, mstatus, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_135, out s1_539, out a3_141, out a4_540, out a5_541, out s2_542, out s3_543, out s4_152, out s5_544, out s6_545, out s7_155, out mstatus_145), s0_135, a3_141, s4_152, s7_155, mstatus_145, s4, s2, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0158, out s1_113, out a4, out a5_546, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7, out mstatus)
	s0_193 = s0_135
l2303C470:
	word32 a3_547
	ra = dhcp_select(ra, s0_193, s1_113, s0_193, a4, s4_116, s5_117, mstatus, dwLoc0C, dwArg28, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_193, out s1_113, out a3_547, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out mstatus)
l2303C45A:
l2303C45C:
	word32 a0_550
	word32 a3_551
	word32 a5_552
	ra = dhcp_discover(ra, s0_193, s1_113, a4, s4_116, mstatus, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_193, out s1_113, out a0_550, out a3_551, out a4, out a5_552, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out mstatus)
l2303C43A:
	Mem259[a4 + 8<i32>:word16] = SLICE(a5_32 + 0xFFFFFFFF<32>, word16, 0)
l2303C440:
	s0_262 = Mem261[s0_193:word32]
l2303C41A:
	0<32> = dwArgA8
	return
dhcp_fine_tmr_exit:


word32 dhcp_stop(word32 ra, word32 s0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s1Out, ptr32 & s3Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcpd_start
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: mstatus ra s1 s3 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_stop_entry:
l2303C4B0:
l2303C4B0_thunk_dhcp_release_and_stop:
	word32 mstatus_22
	word32 s1_24
	word32 s3_28
	word32 s7_32
	word32 s0_63
	word32 a3_64
	word32 a4_65
	word32 a5_66
	word32 s2_67
	word32 s4_68
	word32 s5_69
	word32 s6_70
	word32 ra_23 = dhcp_release_and_stop(ra, s0, s3, s4, s7, mstatus, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s0_63, out s1_24, out a3_64, out a4_65, out a5_66, out s2_67, out s3_28, out s4_68, out s5_69, out s6_70, out s7_32, out mstatus_22)
	s1Out = s1_24
	s3Out = s3_28
	s7Out = s7_32
	mstatusOut = mstatus_22
	return ra_23
dhcp_stop_exit:


word32 etharp_free_entry(word32 ra, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArg38, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_find_entry
//      etharp_cleanup_netif
//      etharp_tmr
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0038:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
etharp_free_entry_entry:
l2303C4B4:
	word32 s1_17 = a0
	word32 s0_18 = 0x42015424<32>
	word32 s2_19 = a0 + 0x4201543C<32>
	word32 a0_20 = Mem16[a0 + 0x4201543C<32>:int32]
	branch a0_20 == 0<32> l2303C4E2
l2303C4DA:
	word32 a1_115
	word32 a2_116
	word32 a4_117
	word32 a5_118
	word32 a7_119
	word32 s8_120
	ra = pbuf_free(ra, a0_20, a3, a0 + 0x18<32>, s4, mstatus, dwArg0118, out s0_18, out s1_17, out a0_20, out a1_115, out a2_116, out a3, out a4_117, out a5_118, out a7_119, out s2_19, out s3, out s4, out s5, out s6, out s8_120, out mstatus)
	Mem49[s2_19:word32] = 0<32>
l2303C4E2:
	Mem55[s1_17 + 0x18<32> + s0_18 + 20<i32>:byte] = 0<8>
	0<32> = dwArg38
	s1Out = s1_17
	a0Out = a0_20
	a3Out = a3
	s2Out = s2_19
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
etharp_free_entry_exit:


word32 etharp_find_entry(word32 ra, word32 a0, word32 a1, word32 a2, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArgF8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
//      etharp_query
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
etharp_find_entry_entry:
l2303C4FA:
	word32 a3_145 = 0x42015424<32>
	word32 t0_16 = 0<32>
	word32 t6_17 = 0<32>
	word32 t5_18 = 0<32>
	word32 t1_105 = 0xA<32>
	word32 a5_185 = 0<32>
	word32 a4_161 = 0xA<32>
	word32 a7_22 = 0xA<32>
	word32 s1_100 = 0xA<32>
	word32 s0_180 = 0x42015424<32>
l2303C526:
	word32 t4_29 = CONVERT(Mem15[a3_145 + 20<i32>:byte], byte, word32)
	branch a4_161 != 0xA<32> l2303C564
l2303C564:
	branch t4_29 != 0<32> l2303C532
l2303C52E:
	branch t4_29 == 0<32> l2303C5EC
l2303C5EC:
	a4_161 = a5_185
l2303C532:
	branch a0 == 0<32> l2303C54A
l2303C534:
	s2 = Mem15[a0:int32]
	branch s2 != Mem15[a3_145 + 4<i32>:int32] l2303C54A
l2303C540:
	branch a2 == 0<32> l2303C5C8
l2303C542:
	branch Mem15[a3_145 + 8<i32>:int32] == a2 l2303C5C8
l2303C54A:
	word32 a6_45 = CONVERT(Mem15[a3_145 + 18<i32>:uint16], uint16, word32)
	branch t4_29 != 1<32> l2303C5E2
l2303C5E2:
	branch a6_45 <u t0_16 l2303C568
l2303C5E6:
	t0_16 = a6_45
	a7_22 = a5_185
l2303C552:
	branch Mem15[a3_145:int32] == 0<32> l2303C5D8
l2303C5D8:
	branch a6_45 <u t6_17 l2303C568
l2303C5DC:
	t6_17 = a6_45
	s1_100 = a5_185
l2303C55A:
	branch a6_45 <u t5_18 l2303C568
l2303C55E:
	t5_18 = a6_45
	t1_105 = a5_185
l2303C568:
	word32 a6_72 = CONVERT(SLICE(a5_185 + 1<32>, word16, 0), word16, word32)
	a3_145 = a3_145 + 0x18<32>
	a5_185 = CONVERT(SLICE(a6_72, word16, 0), word16, int32)
	branch a6_72 != 0xA<32> l2303C526
l2303C57E:
	a3_145 = 1<32>
	a5_185 = 0xFFFFFFFF<32>
	branch a1 != 1<32> l2303C5C8
l2303C586:
	s3 = a2
	s2 = a0
	branch a4_161 != 0xA<32> l2303C5A4
l2303C58E:
	branch a7_22 != a4_161 l2303C5F0
l2303C5F0:
	s1_100 = a7_22
l2303C592:
	branch s1_100 != a7_22 l2303C59C
l2303C596:
	branch t1_105 == s1_100 l2303C5C8
l2303C59A:
	s1_100 = t1_105
l2303C59C:
	word32 a0_351
	word32 s4_352
	ra = etharp_free_entry(ra, s1_100, 1<32>, s4, mstatus, dwArg18, dwArgF8, out s1_100, out a0_351, out a3_145, out s2, out s3, out s4_352, out s5, out s6, out mstatus)
	a4_161 = s1_100
l2303C5A4:
	branch s2 == 0<32> l2303C5B6
l2303C5A8:
	a3_145 = Mem15[s2:int32]
	Mem175[a3_145 + 4<i32>:word32] = a4_161 + 0x4201543C<32>
l2303C5B6:
	word32 a5_178 = a4_161 + 0x18<32>
	Mem181[a5_178 + 0x42015436<32>:word16] = 0<16>
	Mem184[a5_178 + 0x4201542C<32>:word32] = s3
	s0_180 = a5_178 + 0x42015424<32>
	a5_185 = a4_161
l2303C5C8:
	s0Out = s0_180
	s1Out = s1_100
	a0Out = a5_185
	a3Out = a3_145
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
etharp_find_entry_exit:


word32 etharp_raw(word32 ra, word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg34, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
//      etharp_request
//      etharp_output_to_arp_index
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
etharp_raw_entry:
l2303C5F4:
	word32 a0_213
	word32 a0_47
	word32 s0_52
	word32 s1_53
	word32 s8_54
	word32 s4_60
	word32 a7_62
	word32 a2_312
	word32 a5_313
	word32 s3_199
	word32 s2_198
	word32 mstatus_211
	word32 a4_195
	word32 a3_194
	word32 a1_193
	word32 s5_203
	word32 s6_204
	word32 ra_212 = pbuf_alloc(ra, s0, 0x4201A000<32>, 142<i32>, 0x1C<32>, 640<i32>, a3, a4, mstatus, dwLoc3C, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_52, out s1_53, out a0_47, out a1_193, out a2_312, out a3_194, out a4_195, out a5_313, out a7_62, out s2_198, out s3_199, out s4_60, out s5_203, out s6_204, out s8_54, out mstatus_211)
	word32 s1_197 = s1_53 + 1640<i32>
	branch a0_47 != 0<32> l2303C65C
l2303C65C:
	word32 a0_74 = Mem36[s0_52 + 4<i32>:word32]
	word32 a5_314
	word32 a0_77 = lwip_htons(a7_62, out a5_314)
	Mem79[s0_52 + 6<i32>:byte] = SLICE(a0_77, byte, 0)
	Mem81[s0_52 + 7<i32>:byte] = SLICE(a0_77 >>u 8<i32>, byte, 0)
	word32 a2_315
	word32 a3_316
	word32 a4_317
	word32 a5_318
	word32 a6_319
	word32 a7_320
	memcpy(s0_52 + 8<i32>, a3, 6<32>, out a2_315, out a3_316, out a4_317, out a5_318, out a6_319, out a7_320)
	word32 a2_321
	word32 a3_322
	word32 a4_323
	word32 a5_324
	word32 a6_325
	word32 a7_326
	memcpy(s0_52 + 18<i32>, s8_54, 6<32>, out a2_321, out a3_322, out a4_323, out a5_324, out a6_325, out a7_326)
	word32 a2_327
	word32 a3_328
	word32 a4_329
	word32 a5_330
	word32 a6_331
	word32 a7_332
	memcpy(s0_52 + 14<i32>, a4, 4<32>, out a2_327, out a3_328, out a4_329, out a5_330, out a6_331, out a7_332)
	word32 a2_333
	word32 a3_334
	word32 a4_335
	word32 a5_336
	word32 a6_337
	word32 a7_338
	memcpy(s0_52 + 24<i32>, s6_204, 4<32>, out a2_333, out a3_334, out a4_335, out a5_336, out a6_337, out a7_338)
	Mem147[s0_52 + 1<i32>:byte] = 1<8>
	Mem149[s0_52 + 2<i32>:byte] = 8<8>
	Mem151[s0_52 + 4<i32>:byte] = 6<8>
	Mem154[s0_52 + 5<i32>:byte] = 4<8>
	Mem159[s0_52:byte] = 0<8>
	Mem160[s0_52 + 3<i32>:byte] = 0<8>
	word32 a3_165
	word32 a4_166
	word32 s1_169
	word32 s2_170
	word32 s4_172
	word32 s0_339
	word32 s3_340
	word32 ra_178 = ethernet_output(ra_212, s3_199, a0_74, s4_60, 0xFFF806<32>, dwLoc08, dwArg18, dwArg34, dwArgA4, dwArgC0, dwArgC4, dwArgE8, out s0_339, out s1_169, out a3_165, out a4_166, out s2_170, out s3_340, out s4_172)
	Mem187[s1_169 + 24<i32>:word16] = SLICE(CONVERT(Mem160[s1_169 + 24<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s0_341
	word32 a0_342
	word32 a2_343
	word32 a5_344
	word32 a7_345
	word32 s4_346
	word32 s8_347
	ra_212 = pbuf_free(ra_178, s2_170, a3_165, a4_166, s4_172, mstatus_211, dwArgE8, out s0_341, out s1_197, out a0_342, out a1_193, out a2_343, out a3_194, out a4_195, out a5_344, out a7_345, out s2_198, out s3_199, out s4_346, out s5_203, out s6_204, out s8_347, out mstatus_211)
	a0_213 = 0<32>
l2303C636:
	Mem217[s1_53 + 1676<i32>:word16] = SLICE(CONVERT(Mem36[s1_53 + 1676<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	a0_213 = 0xFFFFFFFF<32>
l2303C642:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_197
	a0Out = a0_213
	a1Out = a1_193
	a3Out = a3_194
	a4Out = a4_195
	s2Out = s2_198
	s3Out = s3_199
	s4Out = dwLoc14
	s5Out = s5_203
	s6Out = s6_204
	s7Out = a4
	mstatusOut = mstatus_211
	return ra_212
etharp_raw_exit:


word32 etharp_cleanup_netif(word32 ra, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArgF8, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_set_down
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +00F8:[0..31]
// LiveOut: s0 s4
// Trashed: a2 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a0 a1 a3 a4 a7 mstatus ra s5 s6 sp t0 t1 t4 t5 t6 tp
etharp_cleanup_netif_entry:
l2303C6E6:
	word32 s3_16 = a0
	word32 s0_17 = 0x42015424<32>
	word32 s1_18 = 0<32>
	word32 s2_19 = 0xA<32>
l2303C700:
	word32 a5_22 = CONVERT(Mem14[s0_17 + 20<i32>:byte], byte, word32)
	branch a5_22 == 0<32> l2303C712
l2303C706:
	s0_17 = Mem14[a5_22 + 8<i32>:word32]
	branch a5_22 != s3_16 l2303C712
l2303C70C:
	word32 a0_141
	word32 s5_142
	word32 s6_143
	ra = etharp_free_entry(ra, s1_18, a3, s4, mstatus, dwArg18, dwArgF8, out s1_18, out a0_141, out a3, out s2_19, out s3_16, out s4, out s5_142, out s6_143, out mstatus)
l2303C712:
	s1_18 = s1_18 + 1<32>
	s0_17 = s0_17 + 0x18<32>
	branch s1_18 != s2_19 l2303C700
l2303C71A:
	s4Out = dwArg04
	return s0_17
etharp_cleanup_netif_exit:


void etharp_input(word32 ra, word32 s1, word32 a1, word32 a3, word32 s2, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ethernet_input
// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp t2
etharp_input_entry:
l2303C728:
	branch a1 == 0<32> l2303C8C0
l2303C8C0:
	return
l2303C72C:
	word32 s3_130 = Mem22[s1 + 4<i32>:word32]
	word32 a4_227 = 256<i32>
	word32 s2_120 = 0x4201A668<32>
	branch (CONVERT(Mem22[s1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem22[s1:byte], byte, word32)) != 256<i32> l2303C788
l2303C762:
	a4_227 = CONVERT(Mem22[s1 + 4<i32>:byte], byte, word32)
	branch a4_227 != 6<32> l2303C788
l2303C76C:
	a4_227 = CONVERT(Mem22[s1 + 5<i32>:byte], byte, word32)
	branch a4_227 != 4<32> l2303C788
l2303C776:
	a4_227 = 8<32>
	branch (CONVERT(Mem22[s1 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem22[s1 + 2<i32>:byte], byte, word32)) == 8<32> l2303C7B8
l2303C7B8:
	word32 s5_134
	word32 s6_101
	Mem47[0x4201A682<32>:word16] = SLICE(CONVERT(Mem22[0x4201A682<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a3_590
	word32 a4_591
	word32 a2_589
	word32 a5_592
	word32 a6_593
	word32 a7_594
	memcpy(fp + -56<i32>, s1 + 14<i32>, 4<32>, out a2_589, out a3_590, out a4_591, out a5_592, out a6_593, out a7_594)
	word32 a4_64
	word32 a5_65
	word32 a2_595
	word32 a7_597
	word32 a6_596
	memcpy(fp + -52<i32>, s1 + 24<i32>, 4<32>, out a2_595, out a3, out a4_64, out a5_65, out a6_596, out a7_597)
	s4 = s1 + 8<i32>
	branch a5_65 == 0<32> l2303C7E8
l2303C7E2:
	branch a5_65 == a4_64 l2303C890
l2303C890:
	s5_134 = 1<32>
	s6_101 = 1<32>
l2303C7E8:
	s5_134 = 0<32>
	s6_101 = 2<32>
l2303C7EC:
	word32 s1_119
	word32 s0_118 = dwArg04
	s1_119 = s1
	branch fp == 0xFFFFFFCC<32> l2303C868
l2303C7F0:
	s1_119 = s1
	word32 a5_95
	word32 a4_598
	branch ip4_addr_isbroadcast_u32(fp + -52<i32>, dwArg04, out a3, out a4_598, out a5_95) != 0<32> l2303C868
l2303C7F8:
	s0_118 = dwArgA4
	s1_119 = s1
	branch (a5_95 & 240<i32>) == 224<i32> l2303C868
l2303C806:
	word32 a0_111
	word32 s6_599
	ra = etharp_find_entry(ra, fp + -56<i32>, s6_101, dwArgA4, s1 + 8<i32>, mstatus, s2, dwArgB8, out s0_118, out s1_119, out a0_111, out a3, out s2_120, out s3_130, out s4, out s5_134, out s6_599, out mstatus)
	branch a0_111 < 0<32> l2303C868
l2303C814:
	Mem146[a0_111 + 0x42015450<32>:byte] = 2<8>
	Mem147[a0_111 + 0x42015444<32>:word32] = s0_118
	word32 a5_602
	word32 a6_603
	word32 a7_604
	word32 a2_600
	word32 a4_601
	memcpy(a0_111 + 0x42015448<32>, s4, 6<32>, out a2_600, out a3, out a4_601, out a5_602, out a6_603, out a7_604)
	word32 s7_162 = Mem147[a0_111 + 0x4201543C<32>:int32]
	Mem163[a0_111 + 0x4201544E<32>:word16] = 0<16>
	branch s7_162 == 0<32> l2303C868
l2303C84A:
	Mem165[a0_111 + 0x4201543C<32>:word32] = 0<32>
	word32 a3_174
	word32 a4_175
	word32 s4_181
	word32 a7_614
	word32 s6_615
	word32 s8_616
	word32 a2_611
	word32 a4_612
	word32 a5_613
	word32 s3_608
	word32 a0_609
	word32 a1_610
	word32 s0_605
	word32 s1_606
	word32 s2_607
	ra = pbuf_free(ethernet_output(ra, s0_118, s7_162, s0_118 + 58<i32>, 0xFFF800<32>, dwLoc08, dwArg18, dwArg34, dwArgA4, dwArgC0, dwArgC4, dwArgE8, out s0_605, out s1_606, out a3_174, out a4_175, out s2_607, out s3_608, out s4_181), s7_162, a3_174, a4_175, s4_181, mstatus, dwArgE8, out s0_118, out s1_119, out a0_609, out a1_610, out a2_611, out a3, out a4_612, out a5_613, out a7_614, out s2_120, out s3_130, out s4, out s5_134, out s6_615, out s8_616, out mstatus)
l2303C868:
	word32 a5_226 = CONVERT(Mem222[s1_119 + 7<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem222[s1_119 + 6<i32>:byte], byte, word32)
	a4_227 = 256<i32>
	branch a5_226 == 256<i32> l2303C896
l2303C896:
	branch s5_134 == 0<32> l2303C79C
l2303C89A:
	word32 s7_640
	word32 s5_638
	word32 s6_639
	word32 a0_635
	word32 a1_636
	word32 s2_637
	word32 s0_633
	word32 s1_634
	ra = etharp_raw(ra, s0_118, s0_118 + 58<i32>, s0_118 + 4<i32>, mstatus, dwLoc3C, s2, dwLoc0C, dwArg28, dwArg38, s1, dwArg64, dwArg68, dwArg78, dwArg80, dwArg84, dwArg98, dwArgA8, dwArgD8, dwArg0158, out s0_633, out s1_634, out a0_635, out a1_636, out a3, out a4_227, out s2_637, out s3_130, out s4, out s5_638, out s6_639, out s7_640, out mstatus)
l2303C87C:
	a4_227 = 512<i32>
	branch a5_226 == 512<i32> l2303C8B6
l2303C8B6:
	ra = dhcp_arp_reply(ra, s0_118, s0_118, s4, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, out a3, out a4_227, out s3_130, out s4, out mstatus)
l2303C884:
	Mem302[s2_120 + 44<i32>:word16] = SLICE(CONVERT(Mem222[s2_120 + 44<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303C788:
	Mem307[0x4201A690<32>:word16] = SLICE(CONVERT(Mem22[0x4201A690<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem310[0x4201A686<32>:word16] = SLICE(CONVERT(Mem307[0x4201A686<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303C79C:
	word32 mstatus_632
	word32 s5_629
	word32 s6_630
	word32 s8_631
	word32 s2_626
	word32 s3_627
	word32 s4_628
	word32 a4_623
	word32 a5_624
	word32 a7_625
	word32 a1_620
	word32 a2_621
	word32 a3_622
	word32 s0_617
	word32 s1_618
	word32 a0_619
	pbuf_free(ra, s3_130, a3, a4_227, s4, mstatus, dwArgE8, out s0_617, out s1_618, out a0_619, out a1_620, out a2_621, out a3_622, out a4_623, out a5_624, out a7_625, out s2_626, out s3_627, out s4_628, out s5_629, out s6_630, out s8_631, out mstatus_632)
	0<32> = dwArg0198
	return
etharp_input_exit:


word32 etharp_request(word32 ra, word32 s0, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg34, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_tmr
//      etharp_output_to_arp_index
//      etharp_query
//      netif_issue_reports
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
etharp_request_entry:
l2303C8C2:
l2303C8E0_thunk_etharp_raw:
	word32 a0_18
	word32 a1_19
	word32 a3_21
	word32 a4_22
	word32 mstatus_26
	word32 s0_28
	word32 s1_29
	word32 s2_30
	word32 s3_31
	word32 s4_32
	word32 s5_33
	word32 s6_34
	word32 s7_35
	word32 ra_27 = etharp_raw(ra, s0, a0 + 58<i32>, a0 + 4<i32>, mstatus, dwArg04, dwArg18, dwArg34, dwArg68, dwArg78, dwArg98, dwArgA4, dwArgA8, dwArgB8, dwArgC0, dwArgC4, dwArgD8, dwArgE8, dwArg0118, dwArg0198, out s0_28, out s1_29, out a0_18, out a1_19, out a3_21, out a4_22, out s2_30, out s3_31, out s4_32, out s5_33, out s6_34, out s7_35, out mstatus_26)
	s0Out = s0_28
	s1Out = s1_29
	a0Out = a0_18
	a1Out = a1_19
	a3Out = a3_21
	a4Out = a4_22
	s2Out = s2_30
	s3Out = s3_31
	s4Out = s4_32
	s5Out = s5_33
	s6Out = s6_34
	s7Out = s7_35
	mstatusOut = mstatus_26
	return ra_27
etharp_request_exit:


void etharp_tmr(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90, word32 dwArg94, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31] Stack +0094:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a2 a4 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a0 a1 a3 a5 a7 mstatus ra s9 sp t0 t1 t4 t5 t6
etharp_tmr_entry:
l2303C8E4:
	word32 s0_114 = 0x42015424<32>
	word32 s1_112 = 0<32>
	word32 s4_102 = 299<i32>
	word32 s5_103 = 1<32>
	word32 s6_104 = 3<32>
	word32 s2_133 = 4<32>
	word32 s7_134 = 2<32>
	word32 s3_101 = 0xA<32>
l2303C910:
	word32 a4_33 = CONVERT(Mem32[s0_114 + 20<i32>:byte], byte, word32)
	branch a4_33 == 0<32> l2303C936
l2303C916:
	word32 a5_36 = CONVERT(Mem32[s0_114 + 18<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem38[s0_114 + 18<i32>:word16] = SLICE(a5_36 >>u 16<i32>, word16, 0)
	branch s4_102 <u a5_36 >>u 16<i32> l2303C930
l2303C928:
	branch a4_33 != s5_103 l2303C954
l2303C954:
	branch a4_33 != s6_104 l2303C95E
l2303C95E:
	branch a4_33 != s2_133 l2303C936
l2303C962:
	Mem44[s0_114 + 20<i32>:byte] = SLICE(s7_134, byte, 0)
l2303C958:
	Mem45[s0_114 + 20<i32>:byte] = SLICE(s2_133, byte, 0)
l2303C92C:
	branch s2_133 >=u a5_36 >>u 16<i32> l2303C968
l2303C968:
	word32 a1_268
	word32 a4_269
	ra = etharp_request(ra, Mem38[a0 + 8<i32>:word32], a0, mstatus, dwLoc2C, dwLoc18, dwArg04, dwArg38, dwArg48, dwArg68, dwArg74, dwArg78, dwArg88, dwArg90, dwArg94, dwArgA8, dwArgB8, dwArgE8, dwArg0168, out s0_114, out s1_112, out a0, out a1_268, out a3, out a4_269, out s2_133, out s3_101, out s4_102, out s5_103, out s6_104, out s7_134, out mstatus)
l2303C930:
	ra = etharp_free_entry(ra, s1_112, a3, s4_102, mstatus, dwArg08, dwArgE8, out s1_112, out a0, out a3, out s2_133, out s3_101, out s4_102, out s5_103, out s6_104, out mstatus)
l2303C936:
	s1_112 = s1_112 + 1<32>
	s0_114 = s0_114 + 0x18<32>
	branch s1_112 != s3_101 l2303C910
l2303C93E:
	0<32> = dwArg0128
	return
etharp_tmr_exit:


void etharp_output_to_arp_index(word32 ra, word32 a0, word32 a2, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA4, word32 dwArgB8, word32 dwArgC8, word32 dwArgE4, word32 dwArgF8, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_output
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E4:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus s5 s6 s7 s9 sp
etharp_output_to_arp_index_entry:
l2303C974:
	word32 s2_115 = a0
	branch CONVERT(Mem22[a2 + 0x42015450<32>:byte], byte, word32) != 2<32> l2303C9C8
l2303C9AC:
	word32 s1_100
	word32 a0_44
	word32 a5_31 = CONVERT(Mem22[a2 + 0x4201544E<32>:uint16], uint16, word32)
	branch a5_31 <=u 284<i32> l2303C9E8
l2303C9E8:
	branch a5_31 <=u 269<i32> l2303C9C8
l2303C9F0:
	word32 s0_232
	word32 a1_233
	word32 a3_234
	word32 a4_235
	word32 s3_236
	word32 s4_237
	word32 s5_238
	word32 s6_239
	word32 s7_240
	word32 mstatus_241
	ra = etharp_raw(ra, a2 + 0x42015448<32>, a0 + 58<i32>, a0 + 4<i32>, mstatus, s4, dwLoc08, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s0_232, out s1_100, out a0_44, out a1_233, out a3_234, out a4_235, out s2_115, out s3_236, out s4_237, out s5_238, out s6_239, out s7_240, out mstatus_241)
l2303C9B8:
	word32 s7_223
	word32 mstatus_224
	word32 s5_221
	word32 s6_222
	word32 s3_219
	word32 s4_220
	word32 a3_217
	word32 a4_218
	word32 s0_215
	word32 a1_216
	ra = etharp_request(ra, a2 + 0x42015448<32>, a0, mstatus, s4, dwLoc08, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s0_215, out s1_100, out a0_44, out a1_216, out a3_217, out a4_218, out s2_115, out s3_219, out s4_220, out s5_221, out s6_222, out s7_223, out mstatus_224)
l2303C9C0:
	branch a0_44 != 0<32> l2303C9C8
l2303C9C2:
	Mem101[s1_100 + 20<i32>:byte] = 3<8>
l2303C9C8:
l2303C9E4_thunk_ethernet_output:
	word32 s0_225
	word32 s1_226
	word32 a3_227
	word32 a4_228
	word32 s2_229
	word32 s3_230
	word32 s4_231
	ethernet_output(ra, s2_115, dwArg04, dwArg48, 0xFFF800<32>, dwArg38, dwArg58, dwArg74, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_225, out s1_226, out a3_227, out a4_228, out s2_229, out s3_230, out s4_231)
	return
etharp_output_to_arp_index_exit:


word32 etharp_query(word32 ra, word32 a0, word32 a1, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0100, word32 dwArg0104, word32 dwArg0108, word32 dwArg0128, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_check
//      etharp_output
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0178:[0..31]
// LiveOut: a3 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
etharp_query_entry:
l2303CA10:
	word32 s1_113
	word32 s2_12 = a0
	word32 a5_593
	word32 a4_592
	word32 a3_112
	branch ip4_addr_isbroadcast_u32(Mem9[a1:int32], a0, out a3_112, out a4_592, out a5_593) != 0<32> l2303CB2A
l2303CA32:
	word32 a5_29 = Mem21[a1:int32]
	a3_112 = a5_29 & 240<i32>
	branch (a5_29 & 240<i32>) == 224<i32> l2303CB2A
l2303CA42:
	branch a5_29 == 0<32> l2303CB2A
l2303CB2A:
	s1_113 = s1
l2303CA44:
	word32 a0_37
	word32 s4_144
	word32 s0_118
	ra = etharp_find_entry(ra, a1, 1<32>, a0, a1, mstatus, dwLoc08, dwArgD8, out s0_118, out s1_113, out a0_37, out a3_112, out s2_12, out s3, out s4_144, out s5, out s6, out mstatus)
	branch a0_37 >= 0<32> l2303CA7A
l2303CA7A:
	word32 a4_65 = (a0_37 & 255<i32>) + 0x18<32>
	s3 = a0_37 & 255<i32>
	s1_113 = 0x42015424<32>
	branch CONVERT(Mem21[a4_65 + 0x42015438<32>:byte], byte, word32) == 0<32> l2303CAE6
l2303CAE6:
	Mem72[a4_65 + 0x42015438<32>:byte] = 1<8>
	Mem73[a4_65 + 0x4201542C<32>:word32] = s2_12
l2303CA98:
	branch s0_118 != 0<32> l2303CAA6
l2303CA9C:
	word32 a4_596
	word32 a0_594
	word32 a1_595
	ra = etharp_request(ra, s0_118, s2_12, mstatus, s4, dwLoc08, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s0_118, out s1_113, out a0_594, out a1_595, out a3_112, out a4_596, out s2_12, out s3, out s4_144, out s5, out s6, out s7, out mstatus)
	branch s0_118 == 0<32> l2303CA6A
l2303CAA6:
	a3_112 = s3 + 0x18<32>
	word32 a4_116 = CONVERT(Mem115[s1_113 + a3_112 + 20<i32>:byte], byte, word32)
	branch a4_116 <=u 1<32> l2303CAF2
l2303CAF2:
	branch a4_116 != 1<32> l2303CA6A
l2303CAF6:
	word32 a5_119 = s0_118
l2303CAF8:
	word32 a4_135
	word32 a0_155
	word32 a4_122 = CONVERT(Mem115[a5_119 + 12<i32>:byte], byte, word32)
	branch (a4_122 & 64<i32>) != 0<32> l2303CB2E
l2303CB2E:
	ra = pbuf_clone(ra, s0_118, 142<i32>, 640<i32>, s0_118, a3_112, a4_122 & 64<i32>, mstatus, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s1_113, out a0_155, out a3_112, out a4_135, out s2_12, out s3, out s4_144, out s5, out s6, out mstatus)
	s0_118 = a0_155
	branch a0_155 != 0<32> l2303CB0C
l2303CB40:
	Mem162[0x4201A68C<32>:word16] = SLICE(CONVERT(Mem115[0x4201A68C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303CB02:
	a5_119 = Mem115[a5_119:word32]
	branch a5_119 != 0<32> l2303CAF8
l2303CB06:
	word32 a5_598
	a0_155 = pbuf_ref(s0_118, a3_112, a4_122 & 64<i32>, mstatus, out a3_112, out a4_135, out a5_598)
l2303CB0C:
	branch a0_155 == 0<32> l2303CB1C
l2303CB18:
	word32 s8_606
	word32 s4_605
	word32 a7_604
	word32 a5_603
	word32 a4_602
	word32 a2_601
	word32 a1_600
	word32 a0_599
	ra = pbuf_free(ra, a0_155, a3_112, a4_135, s4_144, mstatus, dwArg0108, out s0_118, out s1_113, out a0_599, out a1_600, out a2_601, out a3_112, out a4_602, out a5_603, out a7_604, out s2_12, out s3, out s4_605, out s5, out s6, out s8_606, out mstatus)
l2303CB1C:
	s1_113 = s1_113 + (s3 + 0x18<32>)
	Mem219[s0_118:word32] = s1_113
l2303CABA:
	Mem226[0x4200E2B8<32>:byte] = SLICE(s3, byte, 0)
	word32 a2_232 = s2_12 + 58<i32>
l2303CAE2_thunk_ethernet_output:
	word32 a3_243
	word32 s0_246
	word32 s1_247
	word32 s2_248
	word32 s3_249
	word32 s4_250
	word32 a4_597
	word32 ra_256 = ethernet_output(ra, s2_12, s0_118, a2_232, 0xFFF800<32>, dwArg38, dwArg58, dwArg74, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_246, out s1_247, out a3_243, out a4_597, out s2_248, out s3_249, out s4_250)
	s0Out = s0_246
	s1Out = s1_247
	a3Out = a3_243
	s2Out = s2_248
	s3Out = s3_249
	s4Out = s4_250
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra_256
l2303CA52:
	branch s0_118 == 0<32> l2303CA66
l2303CA54:
	Mem266[0x4201A68C<32>:word16] = SLICE(CONVERT(Mem21[0x4201A68C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303CA66:
l2303CA6A:
	s0Out = s1
	s1Out = s1_113
	a3Out = a3_112
	s2Out = s2_12
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
etharp_query_exit:


void etharp_output(word32 ra, word32 s1, word32 a0, word32 a1, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg78, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE0, word32 dwArgE4, word32 dwArgE8, word32 dwArg0108, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
etharp_output_entry:
l2303CB56:
	word32 a5_22
	word32 a4_477
	word32 a3_476
	word32 a0_19 = ip4_addr_isbroadcast_u32(a0, a0, out a3_476, out a4_477, out a5_22)
	branch a0_19 != 0<32> l2303CC7E
l2303CC7E:
l2303CB72:
	word32 s1_229 = Mem11[a5_22:word32]
	branch (a5_22 & 240<i32>) != 224<i32> l2303CBC0
l2303CBC0:
	word32 s0_30 = Mem11[(a5_22 & 240<i32>) + 8<i32>:word32]
	word32 a4_31 = a0_19
	branch ((a5_22 ^ 224<i32>) & (a5_22 & 240<i32>)) == 0<32> l2303CBE4
l2303CBCC:
	word32 a5_36 = CONVERT(SLICE(a5_22, word16, 0), word16, word32)
	branch a5_36 == 0xFFFFEA9<32> l2303CBE4
l2303CBDA:
	s0_30 = Mem11[a5_36 + 12<i32>:word32]
	branch a5_36 == 0<32> l2303CC36
l2303CBE0:
	s1_229 = s0_30 + 12<i32>
l2303CBE4:
	word32 a2_136 = CONVERT(Mem11[0x4200E2B8<32>:byte], byte, word32)
	word32 a5_49 = 0x42015424<32>
	branch CONVERT(Mem11[a2_136 + 0x42015450<32>:byte], byte, word32) <=u 1<32> l2303CC42
l2303CC0E:
	word32 a3_53 = Mem11[9<32>:word32]
	branch s0_30 != 1<32> l2303CC42
l2303CC14:
	s1_229 = Mem11[1<32>:word32]
	branch Mem11[a3_53 + 4<i32>:word32] != 1<32> l2303CC42
l2303CC42:
l2303CC46:
	word32 a0_61 = CONVERT(Mem11[a5_49 + 20<i32>:byte], byte, word32)
	branch a0_61 <=u 1<32> l2303CC66
l2303CC4E:
	a5_49 = Mem11[a0_61 + 8<i32>:word32]
	branch a0_61 != s0_30 l2303CC66
l2303CC54:
	a5_49 = Mem11[a0_61 + 4<i32>:word32]
	branch Mem11[s1_229:int32] != a0_61 l2303CC66
l2303CC66:
	word32 a4_70 = a4_31 + 1<32>
	a4_31 = a4_70 & 255<i32>
	a5_49 = a5_49 + 0x18<32>
	branch (a4_70 & 255<i32>) != 0xA<32> l2303CC46
l2303CC72:
	word32 s0_485
	word32 s1_486
	word32 a3_487
	word32 s4_490
	word32 s5_491
	word32 s3_489
	word32 s6_492
	word32 s2_488
	word32 s7_493
	word32 mstatus_494
	etharp_query(ra, s0_30, s1_229, s4, mstatus, dwLoc0C, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg64, s1, dwArg78, dwArg80, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgE0, dwArgE4, dwArgE8, dwArg0108, dwArg0158, out s0_485, out s1_486, out a3_487, out s2_488, out s3_489, out s4_490, out s5_491, out s6_492, out s7_493, out mstatus_494)
l2303CC5E:
	Mem135[0x4200E2B8<32>:byte] = SLICE(a4_31, byte, 0)
	a2_136 = a4_31
l2303CC1C:
	Mem141[0x4201A696<32>:word16] = SLICE(CONVERT(Mem11[0x4201A696<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303CC2E:
	etharp_output_to_arp_index(ra, s0_30, a2_136, s4, mstatus, dwLoc1C, dwLoc0C, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg64, s1, dwArg78, dwArg80, dwArg84, dwArg98, dwArgA8, dwArgC4, dwArgD8, dwArgE0, dwArgE4, dwArg0108, dwArg0158)
l2303CB80:
l2303CBAC:
	word32 s1_479
	word32 s0_478
	word32 a4_481
	word32 a3_480
	word32 s4_484
	word32 s3_483
	word32 s2_482
	ethernet_output(ra, a0, a1, a0 + 58<i32>, 0xFFF800<32>, dwArg18, dwArg38, dwArg54, dwArgC4, dwArgE0, dwArgE4, dwArg0108, out s0_478, out s1_479, out a3_480, out a4_481, out s2_482, out s3_483, out s4_484)
l2303CC36:
	return
etharp_output_exit:


word32 igmp_send(word32 ra, word32 s0, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_tmr
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
igmp_send_entry:
l2303CC88:
	word32 a0_35
	word32 s1_41
	word32 s4_48
	word32 s6_54
	word32 a1_268
	word32 a2_269
	word32 a3_270
	word32 a5_271
	word32 a7_272
	word32 s8_273
	word32 s3_169
	word32 s5_173
	word32 s0_160
	word32 s2_168
	word32 mstatus_181
	word32 a4_165
	word32 ra_52 = pbuf_alloc(ra, s0, 0x4201A000<32>, 182<i32>, 8<32>, 640<i32>, a3, a4, mstatus, dwLoc4C, dwLoc0C, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_160, out s1_41, out a0_35, out a1_268, out a2_269, out a3_270, out a4_165, out a5_271, out a7_272, out s2_168, out s3_169, out s4_48, out s5_173, out s6_54, out s8_273, out mstatus_181)
	branch a0_35 == 0<32> l2303CD7C
l2303CD7C:
	Mem63[s1_41 + 1746<i32>:word16] = SLICE(CONVERT(Mem30[s1_41 + 1746<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303CCC0:
	word32 a5_68 = Mem67[s3_169 + 4<i32>:int32]
	branch s5_173 != 0x16<32> l2303CD62
l2303CD62:
	Mem75[s0_160 + 4<i32>:byte] = SLICE(a5_68 & 255<i32>, byte, 0)
	Mem76[s0_160 + 5<i32>:byte] = SLICE(a5_68 >>u 8<u32>, byte, 0)
	Mem77[s0_160 + 6<i32>:byte] = SLICE(a5_68 >>u 0x10<u32>, byte, 0)
	Mem78[s0_160 + 7<i32>:byte] = SLICE(a5_68 >>u 24<i32>, byte, 0)
l2303CCE2:
	Mem80[s0_160 + 7<i32>:byte] = SLICE(a5_68 >>u 24<i32>, byte, 0)
	Mem81[s0_160 + 4<i32>:byte] = SLICE(a5_68 & 255<i32>, byte, 0)
	Mem82[s0_160 + 5<i32>:byte] = SLICE(a5_68 >>u 8<u32>, byte, 0)
	Mem83[s0_160 + 6<i32>:byte] = SLICE(a5_68 >>u 0x10<u32>, byte, 0)
	Mem86[s3_169 + 8<i32>:byte] = 1<8>
l2303CCFC:
	Mem90[s0_160:byte] = SLICE(s5_173, byte, 0)
	Mem91[s0_160 + 1<i32>:byte] = 0<8>
	Mem92[s0_160 + 2<i32>:byte] = 0<8>
	Mem93[s0_160 + 3<i32>:byte] = 0<8>
	word32 a2_101
	word32 a3_274
	word32 a4_275
	word32 a5_276
	word32 a0_99 = inet_chksum(s0_160, 8<32>, a5_68 >>u 0x10<u32>, out a2_101, out a3_274, out a4_275, out a5_276)
	Mem105[s0_160 + 2<i32>:byte] = SLICE(a0_99, byte, 0)
	Mem107[s0_160 + 3<i32>:byte] = SLICE(a0_99 >>u 8<i32>, byte, 0)
	Mem115[s1_41 + 1736<i32>:word16] = SLICE(CONVERT(Mem109[s1_41 + 1736<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a3_133
	word32 a4_134
	word32 s2_141
	word32 s4_143
	word32 s0_277
	word32 s1_278
	word32 a0_279
	word32 a5_280
	word32 a7_281
	word32 s3_282
	word32 s5_283
	word32 s6_284
	word32 s8_285
	word32 s9_286
	word32 s1_287
	word32 a0_288
	word32 a1_289
	word32 a2_290
	word32 a3_291
	word32 a5_292
	word32 a7_293
	word32 s4_294
	word32 s6_295
	word32 s8_296
	pbuf_free(ip4_output_if_opt(ra_52, s0_160, s1_41 + 1640<i32>, a0_35, fp + -40<i32>, a2_101, 1<32>, 0<32>, 2<32>, s4_48, fp + -36<i32>, s4_48, s5_173, s6_54, s7, 4<u16>, out s0_277, out s1_278, out a0_279, out a3_133, out a4_134, out a5_280, out a7_281, out s2_141, out s3_282, out s4_143, out s5_283, out s6_284, out s7, out s8_285, out s9_286), s2_141, a3_133, a4_134, s4_143, mstatus_181, dwArgD8, out s0_160, out s1_287, out a0_288, out a1_289, out a2_290, out a3_291, out a4_165, out a5_292, out a7_293, out s2_168, out s3_169, out s4_294, out s5_173, out s6_295, out s8_296, out mstatus_181)
l2303CD50:
	s0Out = s0_160
	s1Out = dwLoc4C
	a3Out = s2
	a4Out = a4_165
	s2Out = s2_168
	s3Out = s3_169
	s4Out = dwArg0168
	s5Out = s5_173
	s7Out = s7
	mstatusOut = mstatus_181
	return dwLoc08
igmp_send_exit:


word32 igmp_delaying_member(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_input
//      netif_issue_reports
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a1 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
igmp_delaying_member_entry:
l2303CD88:
	word32 a5_5 = CONVERT(Mem0[a0 + 9<i32>:byte], byte, word32)
	word32 a4_31 = 2<32>
	branch a5_5 == 2<32> l2303CDA2
l2303CD92:
	a4_31 = 1<32>
	branch a5_5 != 1<32> l2303CDDA
l2303CD98:
	a5_5 = CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32)
	branch a5_5 == 0<32> l2303CDA2
l2303CD9E:
	branch a1 >=u a5_5 l2303CDDA
l2303CDDA:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = 1<32>
	a5Out = a5_5
	s4Out = s4
	return s1
l2303CDA2:
	word32 s1_25 = a0
	branch a1 >u 2<32> l2303CDCA
l2303CDCA:
	word32 a0_28
	word32 s8_124
	word32 a5_123
	word32 a2_122
	s1_25 = bl_rand(a0, a2, out a0_28, out a1, out a2_122, out a3, out a4_31, out a5_123, out s4, out s8_124)
	word32 s0_39 = a0_28 & a1
	Mem40[s1_25 + 10<i32>:word16] = SLICE(s0_39, word16, 0)
	branch s0_39 == 0<32> l2303CDB4
l2303CDD8:
l2303CDB4:
	Mem43[s1_25 + 10<i32>:word16] = 1<16>
l2303CDBA:
	Mem46[s1_25 + 9<i32>:byte] = 1<8>
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_31
	a5Out = 1<32>
	s4Out = s4
	return s1_25
igmp_delaying_member_exit:


word32 igmp_init(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
igmp_init_entry:
l2303CDDC:
	Mem6[0x4200E2C0<32>:word32] = 0x10000E0<32>
	Mem10[0x4200E2BC<32>:word32] = 0x20000E0<32>
	a5Out = 0x20000E0<32>
	return 0x4200E000<32>
igmp_init_exit:


word32 igmp_stop(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_remove
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0038:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 s2 tp
// Preserved: s0 sp
igmp_stop_entry:
l2303CDFE:
	Mem14[Mem11[s0 + 44<i32>:word32] + 44<i32>:word32] = 0<32>
l2303CE10:
	branch s0 != 0<32> l2303CE20
l2303CE20:
	word32 s1_18 = Mem14[a5 + 72<i32>:word32]
	word32 s2_19 = Mem14[s0:int32]
	branch a5 == 0<32> l2303CE32
l2303CE28:
	word32 a5_33
	call a5 (retsize: 0;)
		uses: a0:s1_18,a1:s0_15 + 4<i32>,a2:0<32>,a3:a3_43,a4:a4_41,a5:a5_33,mstatus:mstatus,ra:ra_23,s0:s0_15,s1:s1_18,s2:s2_19
		defs: a5:a5_33,ra:ra_27,s0:s0_28,s2:s2_29
l2303CE32:
	word32 a2_89
	word32 a0_88
	memp_free(0xA<32>, s0, a3, a4, mstatus, out a0_88, out a2_89, out a3, out a4, out a5)
	s0 = s2_19
l2303CE12:
	0<32> = dwArg38
	a3Out = a3
	return ra
igmp_stop_exit:


word32 igmp_report_groups(word32 s0, word32 a2, word32 a5, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_issue_reports
// MayUse:  a2:[0..31] a5:[0..31] s0:[0..31]
// LiveOut: a1 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
igmp_report_groups_entry:
l2303CE3E:
	branch a5 == 0<32> l2303CE60
l2303CE60:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	return s1
l2303CE42:
	word32 a5_11 = Mem10[s0:word32]
l2303CE4A:
	branch s0 != 0<32> l2303CE54
l2303CE54:
	s1 = igmp_delaying_member(s0, 5<32>, a2, out a1, out a2, out a3, out a4, out a5_11, out s4)
	s0 = Mem10[s0:word32]
l2303CE4C:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5_11
	s4Out = s4
	return s1
igmp_report_groups_exit:


word32 igmp_lookfor_group(word32 a0, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_lookup_group
//      igmp_input
//      ip4_input
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0
// Trashed: a0 a1
// Preserved: sp
igmp_lookfor_group_entry:
l2303CE62:
	word32 a0_12 = Mem0[a0 + 44<i32>:word32]
l2303CE64:
	branch a0_12 != 0<32> l2303CE68
l2303CE68:
	a0_12 = Mem0[a4 + 4<i32>:word32]
	branch a4 == a5 l2303CE66
l2303CE70:
	a0_12 = Mem0[a0_12:word32]
l2303CE66:
	return a0_12
igmp_lookfor_group_exit:


word32 igmp_lookup_group(word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_start
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
igmp_lookup_group_entry:
l2303CE74:
	word32 s1_13 = a0
	word32 a0_18 = igmp_lookfor_group(a0, a4, a5)
	branch a0_18 != 0<32> l2303CEAE
l2303CE88:
	word32 a2_81
	word32 a5_82
	s1_13 = memp_malloc(Mem11[s0 + 44<i32>:word32], 0xA<32>, a3, a4, mstatus, out a0_18, out a2_81, out a3, out a4, out a5_82)
	branch a0_18 == 0<32> l2303CEAE
l2303CE92:
	word32 a5_31 = 0<32>
	branch a1 == 0<32> l2303CE9C
l2303CE98:
	a5_31 = Mem11[a1:int32]
l2303CE9C:
	Mem35[a5_31 + 4<i32>:word32] = a0_18
	Mem36[a0_18 + 8<i32>:word32] = 0<32>
	Mem37[a0_18 + 12<i32>:byte] = 0<8>
	branch s0 != 0<32> l2303CEBA
l2303CEBA:
	word32 s0_39 = Mem37[a5_31:word32]
	Mem40[a5_31:word32] = a0_18
	Mem41[a0_18:word32] = s0_39
l2303CEA8:
	Mem42[a0_18:word32] = 0<32>
	Mem44[a0_18 + 44<i32>:word32] = s1_13
l2303CEAE:
	0<32> = dwArg38
	a0Out = a0_18
	a3Out = a3
	a4Out = a4
	return s1_13
igmp_lookup_group_exit:


void igmp_start(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_add
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s1 s2 tp
// Preserved: s0 sp
igmp_start_entry:
l2303CEC2:
	word32 a0_18
	word32 a3_24
	word32 a4_25
	word32 s1_21 = igmp_lookup_group(a0, a0, 0x4200E2C0<32>, a3, a4, a5, mstatus, dwArg28, out a0_18, out a3_24, out a4_25)
	branch a0_18 == 0<32> l2303CF06
l2303CF06:
l2303CEDA:
	Mem29[a0_18 + 9<i32>:byte] = 2<8>
	word32 a5_30 = CONVERT(Mem29[a0_18 + 12<i32>:byte], byte, word32)
	Mem32[a0_18 + 12<i32>:byte] = SLICE(a5_30 + 1<32>, byte, 0)
	word32 s0_33 = Mem32[a5_30 + 0x49<32>:word32]
	branch a5_30 == 1<32> l2303CEFC
l2303CEF0:
	call a5_30 + 1<32> (retsize: 0;)
		uses: a0:s0_33,a1:s1_21 + 704<i32>,a2:1<32>,a3:a3_24,a4:a4_25,a5:a5_30 + 1<32>,mstatus:mstatus,ra:ra,s0:s0_33,s1:s1_21,Stack +0038:dwArg28
l2303CEFC:
	return
igmp_start_exit:


word32 igmp_input(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
igmp_input_entry:
l2303CF0A:
	word32 s1_177
	Mem24[0x4201A6CA<32>:word16] = SLICE(CONVERT(Mem18[0x4201A6CA<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s0_102 = 0x4201A668<32>
	word32 a1_26 = CONVERT(Mem24[a0 + 10<i32>:uint16], uint16, word32)
	branch a1_26 >u 7<32> l2303CF58
l2303CF58:
	word32 a0_28 = Mem24[s1 + 4<i32>:word32]
	word32 s4_115 = a2
	word32 a4_38
	word32 a5_39
	word32 a2_107
	word32 a3_111
	branch inet_chksum(s1, a1_26, a4, out a2_107, out a3_111, out a4_38, out a5_39) == 0<32> l2303CF78
l2303CF78:
	word32 a0_42 = igmp_lookfor_group(a1, a4_38, a5_39)
	branch a0_42 != 0<32> l2303CF94
l2303CF94:
	word32 a4_112
	word32 a5_44 = CONVERT(Mem24[s1:byte], byte, word32)
	branch a5_44 == 0x11<32> l2303CFB0
l2303CFB0:
	a3_111 = Mem24[a2:int32]
	word32 a5_57 = CONVERT(Mem24[s1 + 7<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem24[s1 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem24[s1 + 4<i32>:byte], byte, word32)) | CONVERT(Mem24[s1 + 6<i32>:byte], byte, word32) << 16<i32>)
	a4_112 = Mem24[0x4200E2C0<32>:int32]
	branch a3_111 != a4_112 l2303D06C
l2303D06C:
	branch a5_57 == 0<32> l2303CFA4
l2303D06E:
l2303CFE0:
	branch a5_57 != 0<32> l2303D024
l2303D024:
	a0_42 = igmp_lookfor_group(a1, a4_112, a5_57)
	branch a0_42 == 0<32> l2303D044
l2303D044:
	Mem67[0x4201A6CC<32>:word16] = SLICE(CONVERT(Mem62[0x4201A6CC<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303D030:
	Mem72[0x4201A6D8<32>:word16] = SLICE(CONVERT(Mem69[0x4201A6D8<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a1_431
	word32 a2_432
	word32 a5_433
	igmp_delaying_member(a0_42, CONVERT(Mem72[s1 + 1<i32>:byte], byte, word32), a2_107, out a1_431, out a2_432, out a3_111, out a4_112, out a5_433, out s4_115)
l2303CFE2:
	branch CONVERT(Mem24[s1 + 1<i32>:byte], byte, word32) != 0<32> l2303D00A
l2303D00A:
	Mem91[0x4201A6DA<32>:word16] = SLICE(CONVERT(Mem24[0x4201A6DA<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303CFE8:
	Mem94[0x4201A6D6<32>:word16] = SLICE(CONVERT(Mem24[0x4201A6D6<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem96[s1 + 1<i32>:byte] = 0xA<8>
l2303CFF8:
	branch Mem98[a1 + 44<i32>:int32] == 0<32> l2303D002
l2303CFFE:
l2303D000:
	branch s0_102 != 0<32> l2303D016
l2303D016:
	word32 a1_429
	word32 a5_430
	s1 = igmp_delaying_member(s0_102, CONVERT(Mem98[s1 + 1<i32>:byte], byte, word32), a2_107, out a1_429, out a2_107, out a3_111, out a4_112, out a5_430, out s4_115)
	s0_102 = Mem98[s0_102:word32]
l2303CF9E:
	a4_112 = 0x16<32>
	branch a5_44 == 0x16<32> l2303D050
l2303D050:
	Mem123[0x4201A6DC<32>:word16] = SLICE(CONVERT(Mem24[0x4201A6DC<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	a4_112 = CONVERT(Mem123[a0_42 + 9<i32>:byte], byte, word32)
	branch a4_112 != 1<32> l2303D002
l2303D064:
	Mem127[0x208<32>:word32] = a0_42
l2303CFA4:
	Mem132[0x4201A6D4<32>:word16] = SLICE(CONVERT(Mem24[0x4201A6D4<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303D002:
	word32 s0_414
	word32 a0_415
	word32 a1_416
	word32 a2_417
	word32 a3_418
	word32 a4_419
	word32 a5_420
	word32 a7_421
	word32 s2_422
	word32 s3_423
	word32 s4_424
	word32 s5_425
	word32 s6_426
	word32 s8_427
	word32 mstatus_428
	pbuf_free(ra, a0_28, a3_111, a4_112, s4_115, mstatus, dwArgF8, out s0_414, out s1_177, out a0_415, out a1_416, out a2_417, out a3_418, out a4_419, out a5_420, out a7_421, out s2_422, out s3_423, out s4_424, out s5_425, out s6_426, out s8_427, out mstatus_428)
l2303CF82:
	word32 s0_196
	word32 a0_400
	word32 a1_401
	word32 a2_402
	word32 a3_403
	word32 a4_404
	word32 a5_405
	word32 a7_406
	word32 s2_407
	word32 s3_408
	word32 s4_409
	word32 s5_410
	word32 s6_411
	word32 s8_412
	word32 mstatus_413
	pbuf_free(ra, a0_28, a3_111, a4_38, a2, mstatus, dwArgF8, out s0_196, out s1_177, out a0_400, out a1_401, out a2_402, out a3_403, out a4_404, out a5_405, out a7_406, out s2_407, out s3_408, out s4_409, out s5_410, out s6_411, out s8_412, out mstatus_413)
	Mem221[s0_196 + 100<i32>:word16] = SLICE(CONVERT(Mem24[s0_196 + 100<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303CF66:
	word32 a0_386
	word32 a1_387
	word32 a2_388
	word32 a7_392
	word32 a5_391
	word32 s2_393
	word32 s5_396
	word32 s3_394
	word32 a4_390
	word32 a3_389
	word32 s8_398
	word32 s6_397
	word32 mstatus_399
	word32 s4_395
	word32 s0_225
	pbuf_free(ra, a0_28, a3_111, a4_38, a2, mstatus, dwArgF8, out s0_225, out s1_177, out a0_386, out a1_387, out a2_388, out a3_389, out a4_390, out a5_391, out a7_392, out s2_393, out s3_394, out s4_395, out s5_396, out s6_397, out s8_398, out mstatus_399)
	Mem250[s0_225 + 102<i32>:word16] = SLICE(CONVERT(Mem24[s0_225 + 102<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303CF38:
	word32 s2_379
	word32 s4_381
	word32 s3_380
	word32 s5_382
	word32 a7_378
	word32 a5_377
	word32 s8_384
	word32 mstatus_385
	word32 s6_383
	word32 s0_254
	word32 a0_372
	word32 a4_376
	word32 a2_374
	word32 a3_375
	word32 a1_373
	pbuf_free(ra, a0, a3, a4, s4, mstatus, dwArgF8, out s0_254, out s1_177, out a0_372, out a1_373, out a2_374, out a3_375, out a4_376, out a5_377, out a7_378, out s2_379, out s3_380, out s4_381, out s5_382, out s6_383, out s8_384, out mstatus_385)
	Mem279[s0_254 + 104<i32>:word16] = SLICE(CONVERT(Mem24[s0_254 + 104<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303CF46:
	0<32> = dwArg0128
	return s1_177
igmp_input_exit:


void igmp_tmr(word32 ra, word32 s0, word32 s1, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
igmp_tmr_entry:
l2303D070:
	word32 s1_25 = Mem6[0x4201A660<32>:int32]
	word32 s3_21 = 1<32>
	word32 s4_102 = 0x4200E000<32>
	word32 s5_104 = 2<32>
	word32 s2_106 = 0x4201A668<32>
l2303D098:
	branch s1_25 != 0<32> l2303D0AC
l2303D0AC:
	word32 s1_108 = Mem27[s0 + 44<i32>:word32]
l2303D0AE:
	branch s0 != 0<32> l2303D0B4
l2303D0B4:
	word32 a5_31 = CONVERT(Mem30[s0 + 10<i32>:uint16], uint16, word32)
	branch a5_31 == 0<32> l2303D0F0
l2303D0BA:
	word32 a5_33 = a5_31 + 0xFFFFFFFF<32> << 16<i32>
	Mem35[s0 + 10<i32>:word16] = SLICE(a5_33 >>u 16<i32>, word16, 0)
	branch a5_33 >>u 16<i32> != 0<32> l2303D0F0
l2303D0C6:
	branch CONVERT(Mem35[s0 + 9<i32>:byte], byte, word32) != s3_21 l2303D0F0
l2303D0CE:
	s0 = Mem35[a4 + 4<i32>:word32]
	branch a4 == Mem35[s4_102 + 704<i32>:int32] l2303D0F0
l2303D0D8:
	Mem43[s0 + 9<i32>:byte] = SLICE(s5_104, byte, 0)
	Mem51[s2_106 + 122<i32>:word16] = SLICE(CONVERT(Mem43[s2_106 + 122<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	ra = igmp_send(ra, s0, a3, a4, s7, mstatus, dwArg38, dwArg48, s1, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0, out s1_108, out a3, out a4, out s2_106, out s3_21, out s4_102, out s5_104, out s7, out mstatus)
l2303D0F0:
	s0 = Mem85[s0:word32]
l2303D0B0:
	s1_25 = Mem30[s1_108:word32]
l2303D09A:
	return
igmp_tmr_exit:


word32 ip4_input_accept(word32 a0, word32 a4, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
ip4_input_accept_entry:
l2303D0F4:
	branch (CONVERT(Mem0[a0 + 65<i32>:byte], byte, word32) & 1<32>) == 0<32> l2303D124
l2303D124:
	a3Out = a3
	a4Out = a4
	return 0<32>
l2303D0FC:
	word32 a0_9 = Mem0[a4 + 4<i32>:word32]
	word32 a0_11 = 0<32>
	branch a4 == 0<32> l2303D128
l2303D104:
	word32 a5_13 = Mem0[0x4201A7A8<32>:int32]
	a0_11 = 1<32>
	branch a4 == a5_13 l2303D128
l2303D128:
	a3Out = a3
	a4Out = a4
	return a0_11
l2303D112:
	word32 a3_20
	word32 a4_21
	word32 a5_48
	word32 a0_25 = CONVERT(ip4_addr_isbroadcast_u32(a5_13, a0_9, out a3_20, out a4_21, out a5_48) != 0<32>, bool, word32)
	a3Out = a3_20
	a4Out = a4_21
	return a0_25
ip4_input_accept_exit:


word32 ip4_route(word32 a2, word32 a5, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
//      tcp_output_control_segment
//      tcp_output
//      udp_sendto
//      icmp_dest_unreach
// MayUse:  a2:[0..31] a5:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
ip4_route_entry:
l2303D12A:
	word32 a4_24
	word32 a0_12
	word32 a3_15 = a5 & 240<i32>
	branch (a5 & 240<i32>) != 224<i32> l2303D142
l2303D138:
	a4_24 = 0x4200E000<32>
	a0_12 = Mem0[0x4200E2C4<32>:int32]
	branch a0_12 != 0<32> l2303D1B4
l2303D142:
	a0_12 = Mem0[0x4201A660<32>:int32]
l2303D14A:
	branch a0_12 != 0<32> l2303D186
l2303D186:
	a3_15 = CONVERT(Mem0[a0_12 + 65<i32>:byte], byte, word32)
	branch (a3_15 & 1<i32>) == 0<32> l2303D1AE
l2303D190:
	word32 a4_18 = a3_15 >>u 2<u32> & 1<32>
	branch a4_18 == 0<32> l2303D1AE
l2303D198:
	a0_12 = Mem0[a4_18 + 4<i32>:word32]
	branch a4_18 == 0<32> l2303D1AE
l2303D19C:
	a0_12 = Mem0[a2 + 8<i32>:word32]
	a4_24 = (a4_18 ^ a5) & a2
	branch a4_24 == 0<32> l2303D1B4
l2303D1A4:
	a3_15 = a3_15 & 2<32>
	branch (a3_15 & 2<32>) != 0<32> l2303D1AE
l2303D1A8:
	a0_12 = Mem0[a4_24 + 12<i32>:word32]
	branch a5 == a4_24 l2303D1B4
l2303D1AE:
	a0_12 = Mem0[a0_12:word32]
l2303D14C:
	word32 a4_31 = Mem0[0x4201A65C<32>:int32]
	branch a4_31 == 0<32> l2303D172
l2303D156:
	word32 a3_32 = CONVERT(Mem0[a4_31 + 65<i32>:byte], byte, word32)
	a2 = 5<32>
	a3_15 = a3_32 & 5<32>
	branch (a3_32 & 5<32>) != 5<32> l2303D172
l2303D162:
	a4_24 = Mem0[(a3_32 & 5<32>) + 4<i32>:word32]
	branch (a3_32 & 5<32>) == 0<32> l2303D172
l2303D166:
	a5 = a5 & 255<i32>
	a3_15 = 127<i32>
	branch (a5 & 255<i32>) != 127<i32> l2303D1B2
l2303D1B2:
	a0_12 = a4_24
l2303D1B4:
	a2Out = a2
	a3Out = a3_15
	a4Out = a4_24
	a5Out = a5
	return a0_12
l2303D172:
	word32 a4_42 = CONVERT(Mem0[0x4201A6A6<32>:uint16], uint16, word32)
	Mem44[0x4201A6A6<32>:word16] = SLICE(a4_42 + 1<32>, word16, 0)
	a2Out = a2
	a3Out = a3_15
	a4Out = a4_42 + 1<32>
	a5Out = 0x4201A668<32>
	return a0_12
ip4_route_exit:


void ip4_input(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s3, word32 s4, word32 s5, word32 s6, word32 s8, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD0, word32 dwArgD4, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ethernet_input
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_input_entry:
l2303D1B6:
	Mem28[0x4201A69A<32>:word16] = SLICE(CONVERT(Mem24[0x4201A69A<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s3_30 = Mem28[a0 + 4<i32>:int32]
	word32 s6_32 = CONVERT(Mem28[s3_30:byte], byte, word32)
	word32 a4_33 = s6_32 >>u 4<u32>
	branch s6_32 >>u 4<u32> == 4<32> l2303D222
l2303D222:
	word32 ra_244
	word32 s6_169 = (s6_32 & 15<i32>) << 2<i32>
	word32 a5_1491
	word32 a0_41 = lwip_htons(CONVERT(Mem28[s3_30 + 2<i32>:byte], byte, word32) | CONVERT(Mem28[s3_30 + 3<i32>:byte], byte, word32) << 8<i32>, out a5_1491)
	word32 s2_35 = a0
	word32 s4_122 = a1
	word32 s1_48 = CONVERT(SLICE(s6_169, word16, 0), word16, word32)
	word32 s5_49 = a0_41
	ra_244 = ra
	branch a0_41 >=u CONVERT(Mem28[a0 + 8<i32>:uint16], uint16, word32) l2303D258
l2303D250:
	word32 s8_1509
	word32 a5_1508
	word32 a2_1507
	ra_244 = pbuf_realloc(ra, a0, a0_41, a3, s6_32 >>u 4<u32>, a1, mstatus, dwArgE8, out s1_48, out a2_1507, out a3, out a4_33, out a5_1508, out s2_35, out s3_30, out s4_122, out s5_49, out s6_169, out s8_1509, out mstatus)
l2303D258:
	word32 s0_567
	branch CONVERT(Mem28[s2_35 + 10<i32>:uint16], uint16, word32) <u s1_48 l2303D26E
l2303D260:
	branch CONVERT(Mem28[s2_35 + 8<i32>:uint16], uint16, word32) <u s5_49 l2303D26E
l2303D268:
	branch s1_48 >u 0x13<32> l2303D28A
l2303D28A:
	word32 a3_92
	word32 a4_93
	word32 a5_1526
	word32 a2_1525
	word32 a0_124 = inet_chksum(s3_30, s1_48, a4_33, out a2_1525, out a3_92, out a4_93, out a5_1526)
	branch a0_124 == 0<32> l2303D2A6
l2303D2A6:
	word32 s5_133
	word32 a5_107 = CONVERT(Mem28[s3_30 + 19<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem28[s3_30 + 17<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem28[s3_30 + 16<i32>:byte], byte, word32)) | CONVERT(Mem28[s3_30 + 18<i32>:byte], byte, word32) << 16<i32>)
	Mem108[a5_107 + 20<i32>:word32] = 0x4201A794<32>
	word32 a3_116 = CONVERT(Mem108[s3_30 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem108[s3_30 + 12<i32>:byte], byte, word32) | CONVERT(Mem108[s3_30 + 14<i32>:byte], byte, word32) << 16<i32>
	Mem120[(CONVERT(Mem108[s3_30 + 15<i32>:byte], byte, word32) << 24<i32> | a3_116) + 16<i32>:word32] = 0x4201A794<32>
	word32 s1_102 = 0x4201A794<32>
	word32 a4_121 = 224<i32>
	branch (a5_107 & 240<i32>) != 224<i32> l2303D37C
l2303D37C:
	a0_124 = ip4_input_accept(s4_122, 224<i32>, out a3_116, out a4_121)
	branch a0_124 != 0<32> l2303D3B0
l2303D3B0:
	branch s4_122 != 0<32> l2303D332
l2303D3B4:
l2303D384:
	a4_121 = CONVERT(Mem120[0x4201A7A8<32>:byte], byte, word32)
	branch a4_121 == 127<i32> l2303D304
l2303D390:
	s5_133 = Mem120[0x4201A660<32>:int32]
l2303D398:
	branch s5_133 == 0<32> l2303D304
l2303D39C:
	branch s5_133 != s4_122 l2303D3A6
l2303D3A6:
	a0_124 = ip4_input_accept(s5_133, a4_121, out a3_116, out a4_121)
	branch a0_124 == 0<32> l2303D3A0
l2303D3AE:
l2303D3A0:
	s5_133 = Mem120[s5_133:int32]
l2303D2FA:
	word32 a5_148 = CONVERT(Mem120[s4_122 + 65<i32>:byte], byte, word32)
	branch (a5_148 & 32<i32>) != 0<32> l2303D312
l2303D312:
	a0_124 = igmp_lookfor_group(s4_122, 224<i32>, a5_148 & 32<i32>)
	branch a0_124 == 0<32> l2303D304
l2303D322:
	s1_102 = Mem120[240<i32>:word32]
	branch a3_116 == 0x10000E0<32> l2303D354
l2303D354:
	s5_133 = s4_122
	branch true l2303D332
l2303D332:
	s5_133 = s4_122
l2303D304:
	a4_121 = CONVERT(Mem120[s3_30 + 9<i32>:byte], byte, word32)
	branch a4_121 == 0x11<32> l2303D3B6
l2303D3B6:
	word32 a4_172 = s3_30 + s6_169
	a3_116 = CONVERT(Mem120[a4_172 + 2<i32>:byte], byte, word32)
	a4_121 = 0x4000400<32>
	branch (CONVERT(Mem120[a4_172 + 3<i32>:byte], byte, word32) << 8<i32> | a3_116) != 0x4000400<32> l2303D30E
l2303D3D0:
	s5_133 = s4_122
l2303D30E:
	s5_133 = 0<32>
l2303D334:
	s1_102 = Mem120[a0_124 + 16<i32>:word32]
	branch a0_124 == 0<32> l2303D3D2
l2303D338:
	word32 a5_198
	branch ip4_addr_isbroadcast_u32(a0_124, s4_122, out a3_116, out a4_121, out a5_198) != 0<32> l2303D34C
l2303D33E:
	s1_102 = Mem120[a5_198 + 16<i32>:word32]
	a4_121 = 224<i32>
	branch (a5_198 & 240<i32>) != 224<i32> l2303D3D2
l2303D3D2:
	branch s5_133 != 0<32> l2303D358
l2303D358:
	word32 a4_213 = CONVERT(Mem120[s3_30 + 7<i32>:byte], byte, word32)
	branch (CONVERT(Mem120[s3_30 + 6<i32>:byte], byte, word32) & 63<i32> | a4_213 << 8<i32>) == 0<32> l2303D3E8
l2303D3E8:
	Mem223[s1_102:word32] = s5_133
	Mem226[s1_102 + 4<i32>:word32] = s4_122
	Mem227[s1_102 + 8<i32>:word32] = s3_30
	Mem241[s1_102 + 12<i32>:word16] = SLICE((CONVERT(Mem227[s3_30:byte], byte, word32) & 0xF<32>) << 2<i32>, word16, 0)
	word32 a0_261
	word32 a2_263
	word32 s3_271
	word32 s5_273
	word32 s6_274
	word32 s8_276
	word32 s0_268
	word32 s2_270
	word32 s4_272
	word32 s1_269
	word32 ra_279 = raw_input(ra_244, s2_35, s4_122, dwArgF8, out s0_268, out s1_269, out a0_261, out a2_263, out s2_270, out s3_271, out s4_272, out s5_273, out s6_274, out s8_276)
	branch a0_261 == s8_276 l2303D486
l2303D410:
	word32 a5_1574
	word32 a1_1572
	word32 a4_1573
	word32 a3_286
	word32 a0_283 = pbuf_remove_header(s2_270, s6_274, a2_263, out a1_1572, out a3_286, out a4_1573, out a5_1574)
	word32 a5_288 = CONVERT(Mem241[s3_271 + 9<i32>:byte], byte, word32)
	word32 a4_289 = 2<32>
	branch a5_288 == 2<32> l2303D4B4
l2303D4B4:
	s1_269 = igmp_input(ra_279, s1_269, s2_270, s4_272, 0x4201A7A8<32>, a3_286, 2<32>, s4_272, mstatus, dwArgC8, dwArgF8)
l2303D422:
	branch a5_288 >u 2<32> l2303D472
l2303D472:
	branch a5_288 == 6<32> l2303D4A0
l2303D4A0:
	s1_269 = tcp_input(ra_279, s0_268, s2_270, s3_271, s5_273, s6_274, a0_261, s10, s11, mstatus, s8, s6, dwLoc18, dwLoc14, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, s5, s3, ra, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgBC, dwArgDC, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178)
l2303D478:
	a4_289 = 0x11<32>
	branch a5_288 != 0x11<32> l2303D42A
l2303D47E:
	s1_269 = udp_input(ra_279, s2_270, s4_272, a2_263, s5_273, mstatus, dwArg08, dwArg18, dwArg38, dwArg48, s5, dwArg68, dwArg78, dwArg88, dwArgB4, dwArgB8, dwArgD0, dwArgD4, dwArgF8)
l2303D426:
	branch a5_288 == s8_276 l2303D4AA
l2303D4AA:
	s1_269 = icmp_input(ra_279, s2_270, s4_272, a3_286, s4_272, mstatus, s0, dwArg48, s5, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8)
l2303D42A:
	branch a0_261 == 2<32> l2303D46A
l2303D430:
	word32 a5_448
	branch ip4_addr_isbroadcast_u32(a0_283, s5_273, out a3_286, out a4_289, out a5_448) != 0<32> l2303D456
l2303D438:
	word32 s1_450 = Mem241[a5_448 + 20<i32>:word32]
	a4_289 = 224<i32>
	branch (a5_448 & 240<i32>) == 224<i32> l2303D456
l2303D446:
	word32 a4_462
	word32 s1_1590
	ra_279 = icmp_dest_unreach(ra_279, s0_268, s1_450, pbuf_header_force(s2_270, s6_274, a2_263, out a4_462), a4_462, a0_261, mstatus, s8, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0_268, out s1_1590, out a3_286, out a4_289, out s2_270, out s4_272, out mstatus)
l2303D456:
	Mem501[s0_268 + 64<i32>:word16] = SLICE(CONVERT(Mem241[s0_268 + 64<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem504[s0_268 + 54<i32>:word16] = SLICE(CONVERT(Mem501[s0_268 + 54<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303D46A:
	word32 mstatus_1589
	word32 a4_1580
	word32 s8_1588
	word32 a5_1581
	word32 a7_1582
	word32 s3_1584
	word32 s4_1585
	word32 s5_1586
	word32 s6_1587
	word32 s2_1583
	word32 a3_1579
	word32 a0_1576
	word32 a1_1577
	word32 a2_1578
	word32 s0_1575
	pbuf_free(ra_279, s2_270, a3_286, a4_289, s4_272, mstatus, dwArgF8, out s0_1575, out s1_269, out a0_1576, out a1_1577, out a2_1578, out a3_1579, out a4_1580, out a5_1581, out a7_1582, out s2_1583, out s3_1584, out s4_1585, out s5_1586, out s6_1587, out s8_1588, out mstatus_1589)
l2303D486:
	Mem550[s1_269:word32] = 0<32>
	Mem551[s1_269 + 4<i32>:word32] = 0<32>
	Mem552[s1_269 + 8<i32>:word32] = 0<32>
	Mem553[s1_269 + 12<i32>:word16] = 0<16>
	Mem554[s1_269 + 16<i32>:word32] = 0<32>
	Mem555[s1_269 + 20<i32>:word32] = 0<32>
l2303D36A:
	word32 s1_1557
	word32 a5_1563
	word32 a0_1558
	word32 a1_1559
	word32 a2_1560
	word32 a3_1561
	word32 a7_1564
	word32 a4_1562
	word32 s2_1565
	word32 s4_1567
	word32 s3_1566
	word32 s6_1569
	word32 mstatus_1571
	word32 s8_1570
	word32 s5_1568
	pbuf_free(ra_244, s2_35, a3_116, a4_213 << 8<i32>, s4_122, mstatus, dwArgF8, out s0_567, out s1_1557, out a0_1558, out a1_1559, out a2_1560, out a3_1561, out a4_1562, out a5_1563, out a7_1564, out s2_1565, out s3_1566, out s4_1567, out s5_1568, out s6_1569, out s8_1570, out mstatus_1571)
	Mem592[s0_567 + 66<i32>:word16] = SLICE(CONVERT(Mem120[s0_567 + 66<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303D3D6:
	Mem604[0x4201A69E<32>:word16] = SLICE(CONVERT(Mem120[0x4201A69E<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a5_1598
	word32 mstatus_1606
	word32 a7_1599
	word32 s2_1600
	word32 s4_1602
	word32 s5_1603
	word32 s6_1604
	word32 s8_1605
	word32 s3_1601
	word32 a4_1597
	word32 s0_1591
	word32 a0_1593
	word32 a1_1594
	word32 a2_1595
	word32 a3_1596
	word32 s1_1592
	pbuf_free(ra_244, s2_35, a3_116, a4_121, s4_122, mstatus, dwArgF8, out s0_1591, out s1_1592, out a0_1593, out a1_1594, out a2_1595, out a3_1596, out a4_1597, out a5_1598, out a7_1599, out s2_1600, out s3_1601, out s4_1602, out s5_1603, out s6_1604, out s8_1605, out mstatus_1606)
l2303D34C:
	word32 a2_1545
	word32 s1_1542
	word32 a0_1543
	word32 a3_1546
	word32 s5_1553
	word32 a7_1549
	word32 s6_1554
	word32 s8_1555
	word32 a5_1548
	word32 s2_1550
	word32 s3_1551
	word32 s4_1552
	word32 a4_1547
	word32 a1_1544
	word32 mstatus_1556
	pbuf_free(ra_244, s2_35, a3_116, a4_121, s4_122, mstatus, dwArgF8, out s0_567, out s1_1542, out a0_1543, out a1_1544, out a2_1545, out a3_1546, out a4_1547, out a5_1548, out a7_1549, out s2_1550, out s3_1551, out s4_1552, out s5_1553, out s6_1554, out s8_1555, out mstatus_1556)
l2303D294:
	word32 a2_1530
	word32 a5_1533
	word32 a0_1528
	word32 a1_1529
	word32 s1_1527
	word32 a7_1534
	word32 a3_1531
	word32 mstatus_1541
	word32 s4_1537
	word32 s3_1536
	word32 s5_1538
	word32 s6_1539
	word32 s8_1540
	word32 s2_1535
	word32 a4_1532
	pbuf_free(ra_244, s2_35, a3_92, a4_93, s4_122, mstatus, dwArgF8, out s0_567, out s1_1527, out a0_1528, out a1_1529, out a2_1530, out a3_1531, out a4_1532, out a5_1533, out a7_1534, out s2_1535, out s3_1536, out s4_1537, out s5_1538, out s6_1539, out s8_1540, out mstatus_1541)
	Mem696[s0_567 + 56<i32>:word16] = SLICE(CONVERT(Mem28[s0_567 + 56<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303D26E:
	word32 a0_1511
	word32 a1_1512
	word32 a2_1513
	word32 a3_1514
	word32 s1_1510
	word32 a4_1515
	word32 a5_1516
	word32 a7_1517
	word32 s4_1520
	word32 s5_1521
	word32 s6_1522
	word32 s2_1518
	word32 s3_1519
	word32 s8_1523
	word32 mstatus_1524
	pbuf_free(ra_244, s2_35, a3, a4_33, s4_122, mstatus, dwArgF8, out s0_567, out s1_1510, out a0_1511, out a1_1512, out a2_1513, out a3_1514, out a4_1515, out a5_1516, out a7_1517, out s2_1518, out s3_1519, out s4_1520, out s5_1521, out s6_1522, out s8_1523, out mstatus_1524)
	Mem734[s0_567 + 58<i32>:word16] = SLICE(CONVERT(Mem28[s0_567 + 58<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303D27E:
	Mem739[s0_567 + 54<i32>:word16] = SLICE(CONVERT(Mem736[s0_567 + 54<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303D1F0:
	word32 s1_749
	word32 a2_1495
	word32 a3_1496
	word32 a4_1497
	word32 a1_1494
	word32 a5_1498
	word32 s4_1502
	word32 a0_1493
	word32 s0_1492
	word32 mstatus_1506
	word32 s8_1505
	word32 s6_1504
	word32 s5_1503
	word32 s3_1501
	word32 s2_1500
	word32 a7_1499
	pbuf_free(ra, a0, a3, s6_32 >>u 4<u32>, s4, mstatus, dwArgF8, out s0_1492, out s1_749, out a0_1493, out a1_1494, out a2_1495, out a3_1496, out a4_1497, out a5_1498, out a7_1499, out s2_1500, out s3_1501, out s4_1502, out s5_1503, out s6_1504, out s8_1505, out mstatus_1506)
	Mem767[s1_749 + 68<i32>:word16] = SLICE(CONVERT(Mem28[s1_749 + 68<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem770[s1_749 + 54<i32>:word16] = SLICE(CONVERT(Mem767[s1_749 + 54<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303D208:
	0<32> = dwArg0128
	return
ip4_input_exit:


word32 ip4_output_if_opt_src(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s4, word32 s5, word32 s6, word32 s7, uint16 wArg00, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_output_if_opt
//      ip4_output_if_src
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0000:[0..15]
// LiveOut: a0 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_opt_src_entry:
l2303D4C6:
	word32 a6_275
	word32 s2_242
	word32 a0_303
	word32 a5_309
	word32 a4_308
	word32 s3_29 = a6
	word32 s9_111 = CONVERT(wArg00, uint16, word32)
	branch a2 == 0<32> l2303D6E2
l2303D6E2:
	s2_242 = s2
	branch CONVERT(Mem25[a0 + 10<i32>:uint16], uint16, word32) <=u 0x13<32> l2303D54C
l2303D6EC:
	s2_242 = fp + -52<i32>
	a6_275 = a6
l2303D4EA:
	word32 s1_157
	s4 = a1
	s2_242 = a2
	s6 = a3
	s5 = a4
	s7 = a5
	branch s9_111 == 0<32> l2303D6D6
l2303D6D6:
	s1_157 = 0x14<32>
	s9_111 = 0<32>
	a6_275 = a6
l2303D4F8:
	branch s9_111 <=u 40<i32> l2303D52E
l2303D52E:
	word32 s0_62 = CONVERT(SLICE(s9_111 + 3<i32> & 0xFFFFFFFC<32>, word16, 0), word16, word32)
	s1_157 = CONVERT(SLICE(s0_62 + 20<i32>, word16, 0), word16, word32)
	word32 a4_517
	word32 a5_518
	word32 a2_515
	word32 a3_516
	branch pbuf_add_header(a0, s0_62, out a2_515, out a3_516, out a4_517, out a5_518) == 0<32> l2303D562
l2303D562:
	word32 a4_521
	word32 a5_522
	word32 a2_519
	word32 a3_520
	memcpy(Mem66[a0 + 4<i32>:int32], a7, s9_111, out a2_519, out a3_520, out a4_521, out a5_522, out a6_275, out a7)
	branch s9_111 >=u s0_62 l2303D582
l2303D572:
	word32 a4_528
	word32 a5_529
	word32 a0_524
	word32 a1_525
	word32 a2_526
	word32 a3_527
	word32 t1_523
	ra = memset(ra, Mem66[a0 + 4<i32>:int32] + s9_111, 0<32>, s0_62 - s9_111, out t1_523, out a0_524, out a1_525, out a2_526, out a3_527, out a4_528, out a5_529)
l2303D582:
	word32 a3_107 = Mem66[a0 + 4<i32>:int32]
	word32 a5_110 = 0<32>
	s9_111 = 0<32>
l2303D58C:
	a5_110 = a5_110 + 1<32>
	s9_111 = s9_111 + CONVERT(Mem66[(a5_110 << 1<u32>) + a3_107:uint16], uint16, word32)
	branch a5_110 < s0_62 >>u 1<i32> l2303D58C
l2303D59E:
	word32 a3_531
	word32 a4_532
	word32 a5_533
	word32 a2_530
	branch pbuf_add_header(a0, 0x14<32>, out a2_530, out a3_531, out a4_532, out a5_533) != 0<32> l2303D54C
l2303D5A8:
	word32 a4_209
	s0 = Mem132[a0 + 4<i32>:int32]
	Mem137[s0 + 8<i32>:byte] = SLICE(a3, byte, 0)
	Mem141[s0 + 9<i32>:byte] = SLICE(a5, byte, 0)
	word32 a5_145 = Mem141[a2:int32]
	Mem150[s0 + 16<i32>:byte] = SLICE(a5_145, byte, 0)
	Mem151[s0 + 17<i32>:byte] = SLICE(a5_145 >>u 8<u32>, byte, 0)
	Mem156[s0 + 18<i32>:byte] = SLICE(a5_145 >>u 0x10<u32>, byte, 0)
	word32 a4_162 = (s1_157 >>u 2<u32> | 64<i32>) & 255<i32>
	Mem163[s0:byte] = SLICE(a4_162, byte, 0)
	Mem179[s0 + 19<i32>:byte] = SLICE(a5_145 >>u 0x18<u32>, byte, 0)
	Mem180[s0 + 1<i32>:byte] = SLICE(a4, byte, 0)
	word32 a5_534
	word32 a0_188 = lwip_htons(CONVERT(Mem180[a0 + 8<i32>:uint16], uint16, word32), out a5_534)
	Mem191[s0 + 2<i32>:byte] = SLICE(a0_188, byte, 0)
	word32 a0_193 = CONVERT(Mem191[0x4200E2C8<32>:uint16], uint16, word32)
	Mem194[s0 + 3<i32>:byte] = SLICE(a0_188 >>u 8<u32>, byte, 0)
	Mem195[s0 + 6<i32>:byte] = 0<8>
	Mem196[s0 + 7<i32>:byte] = 0<8>
	word32 a5_535
	word32 a0_197 = lwip_htons(a0_193, out a5_535)
	Mem200[s0 + 5<i32>:byte] = SLICE(a0_197 >>u 8<u32>, byte, 0)
	word32 a5_201 = CONVERT(Mem200[0x4200E2C8<32>:uint16], uint16, word32)
	Mem202[s0 + 4<i32>:byte] = SLICE(a0_197, byte, 0)
	word32 s7_147 = a3 << 8<i32> | a5
	word32 a4_170 = a4_162 << 8<i32> | a4
	Mem205[0x4200E2C8<32>:word16] = SLICE(a5_201 + 1<32>, word16, 0)
	s1 = CONVERT(SLICE(a4_170 >> 8<i32> | a4_170 << 8<u32>, word16, 0), word16, word32) + ((CONVERT(SLICE(s7_147 << 8<u32> | s7_147 >> 8<u32>, word16, 0), word16, word32) + (CONVERT(SLICE(a5_145, word16, 0), word16, word32) + (a5_145 >>u 0x10<u32>))) + s9_111) + a0_188
	s6 = a3 << 8<i32>
	s7 = s7_147 >> 8<u32>
	s5 = 0x4200E2C8<32>
	word32 a0_203 = a0_197 + s1
	branch a1 != 0<32> l2303D6DC
l2303D6DC:
	a4_209 = Mem205[a1:int32]
l2303D668:
	a4_209 = Mem205[0x230827AC<32>:int32]
l2303D670:
	Mem215[s0 + 15<i32>:byte] = SLICE(a4_209 >>u 0x18<u32>, byte, 0)
	Mem219[s0 + 12<i32>:byte] = SLICE(a4_209, byte, 0)
	Mem220[s0 + 13<i32>:byte] = SLICE(a4_209 >>u 8<u32>, byte, 0)
	word32 a5_221 = a4_209 >>u 0x10<u32>
	Mem226[s0 + 14<i32>:byte] = SLICE(a5_221, byte, 0)
	word32 a4_225 = (a4_209 & 0xFFFFFFF<32>) + a0_203 + a5_221
	word32 a4_229 = (a4_225 & 0xFFFFFFF<32>) + (a4_225 >>u 0x10<u32>)
	word32 a5_234 = CONVERT(SLICE(~((a4_229 >>u 0x10<u32>) + a4_229), word16, 0), word16, word32)
	Mem235[s0 + 10<i32>:byte] = SLICE(a5_234, byte, 0)
	Mem237[s0 + 11<i32>:byte] = SLICE(a5_234 >>u 8<i32>, byte, 0)
	a3 = 0xFFFFFFF<32>
l2303D6B6:
	word32 a4_241 = CONVERT(Mem240[0x4201A698<32>:uint16], uint16, word32)
	Mem249[0x4201A698<32>:word16] = SLICE(a4_241 + 1<32>, word16, 0)
	word32 a5_255 = Mem249[a6 + 20<i32>:int32]
	word32 t1_314
	word32 t4_315
	word32 t5_316
	word32 t6_317
	call a5_255 (retsize: 0;)
		uses: a0:a6,a1:a0,a2:s2_242,a3:a3_280,a4:a4_241 + 1<32>,a5:a5_255,a6:a6_275,a7:a7_281,ra:ra_259,s0:s0_264,s1:s1_265,s2:s2_242,s3:a6,s4:s4_267,s5:s5_269,s6:s6_271,s7:s7_273,s8:a0,s9:s9_257,Stack +0028:dwLoc28,Stack +0050:wArg00,t1:t1_314,t4:t4_315,t5:t5_316,t6:t6_317
		defs: a0:a0_303,a4:a4_308,a5:a5_309,a7:a7_313,s2:s2_298,s3:s3_292,s5:s5_300,s6:s6_301,s7:s7_302,s9:s9_294,t1:t1_314,t4:t4_315,t5:t5_316,t6:t6_317
l2303D54C:
	word32 a4_321 = CONVERT(Mem320[0x4201A6AC<32>:uint16], uint16, word32)
	Mem324[0x4201A6AC<32>:word16] = SLICE(a4_321 + 1<32>, word16, 0)
	a5_309 = 0x4201A668<32>
	a0_303 = 0xFFFFFFFE<32>
	a4_308 = a4_321 + 1<32>
l2303D500:
	word32 a4_327 = CONVERT(Mem25[0x4201A6AC<32>:uint16], uint16, word32)
	Mem330[0x4201A6AC<32>:word16] = SLICE(a4_327 + 1<32>, word16, 0)
	a5_309 = 0x4201A668<32>
	a0_303 = 0xFFFFFFFA<32>
	a4_308 = a4_327 + 1<32>
l2303D514:
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = a0_303
	a3Out = s2
	a4Out = a4_308
	a5Out = a5_309
	a7Out = a7
	s2Out = s2_242
	s3Out = s3_29
	s4Out = dwArg0168
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArg0148
	s9Out = s9_111
	return dwLoc08
ip4_output_if_opt_src_exit:


word32 ip4_output_if_opt(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s4, word32 s5, word32 s6, word32 s7, uint16 wArg00, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_send
//      ip4_output_if
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0000:[0..15]
// LiveOut: a0 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_opt_entry:
l2303D712:
	word32 t1_4 = CONVERT(wArg00, uint16, word32)
	branch a2 == 0<32> l2303D726
l2303D718:
	branch a1 == 0<32> l2303D722
l2303D71A:
	branch Mem0[a1:int32] != 0<32> l2303D726
l2303D722:
	a1 = a6 + 4<i32>
l2303D726:
	uint16 wArg00_84 = SLICE(t1_4, uint16, 0)
l2303D728_thunk_ip4_output_if_opt_src:
	word32 a0_56
	word32 a3_58
	word32 a4_59
	word32 a5_60
	word32 s0_63
	word32 s1_64
	word32 s3_65
	word32 s4_66
	word32 s8_67
	word32 s9_68
	word32 a7_73
	word32 s2_74
	word32 s5_75
	word32 s6_76
	word32 s7_77
	word32 ra_62 = ip4_output_if_opt_src(ra, s0, s1, a0, a1, a2, a3, a4, a5, a6, a7, s4, s5, s6, s7, wArg00_84, out s0_63, out s1_64, out a0_56, out a3_58, out a4_59, out a5_60, out a7_73, out s2_74, out s3_65, out s4_66, out s5_75, out s6_76, out s7_77, out s8_67, out s9_68)
	s0Out = s0_63
	s1Out = s1_64
	a0Out = a0_56
	a3Out = a3_58
	a4Out = a4_59
	a5Out = a5_60
	a7Out = a7_73
	s2Out = s2_74
	s3Out = s3_65
	s4Out = s4_66
	s5Out = s5_75
	s6Out = s6_76
	s7Out = s7_77
	s8Out = s8_67
	s9Out = s9_68
	return ra_62
ip4_output_if_opt_exit:


word32 ip4_output_if(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s4, word32 s5, word32 s6, word32 s7, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_output_control_segment
//      tcp_output
//      icmp_input
//      icmp_dest_unreach
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31]
// LiveOut: a0 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_entry:
l2303D72C:
	word32 a0_21
	word32 a3_24
	word32 a4_25
	word32 a5_26
	word32 a7_28
	word32 s0_30
	word32 s1_31
	word32 s2_32
	word32 s3_33
	word32 s4_34
	word32 s5_35
	word32 s6_36
	word32 s7_37
	word32 s8_38
	word32 s9_39
	word32 ra_29 = ip4_output_if_opt(ra, s0, s1, a0, a1, a2, a3, a4, a5, a6, 0<32>, s4, s5, s6, s7, 0<u16>, out s0_30, out s1_31, out a0_21, out a3_24, out a4_25, out a5_26, out a7_28, out s2_32, out s3_33, out s4_34, out s5_35, out s6_36, out s7_37, out s8_38, out s9_39)
	s0Out = s0_30
	s1Out = s1_31
	a0Out = a0_21
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_26
	a7Out = a7_28
	s2Out = s2_32
	s3Out = s3_33
	s4Out = s4_34
	s5Out = s5_35
	s6Out = s6_36
	s7Out = s7_37
	s8Out = s8_38
	s9Out = s9_39
	return ra_29
ip4_output_if_exit:


void ip4_output_if_src(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s4, word32 s5, word32 s6, word32 s7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      udp_sendto_if
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_src_entry:
l2303D73E:
	word32 s0_53
	word32 s1_54
	word32 a0_55
	word32 a3_56
	word32 a4_57
	word32 a5_58
	word32 a7_59
	word32 s2_60
	word32 s3_61
	word32 s4_62
	word32 s5_63
	word32 s6_64
	word32 s7_65
	word32 s8_66
	word32 s9_67
	ip4_output_if_opt_src(ra, s0, s1, a0, a1, a2, a3, a4, a5, a6, 0<32>, s4, s5, s6, s7, 0<u16>, out s0_53, out s1_54, out a0_55, out a3_56, out a4_57, out a5_58, out a7_59, out s2_60, out s3_61, out s4_62, out s5_63, out s6_64, out s7_65, out s8_66, out s9_67)
	return
ip4_output_if_src_exit:


word32 ip4_addr_isbroadcast_u32(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
//      etharp_query
//      etharp_output
//      ip4_input_accept
//      ip4_input
//      raw_input
//      tcp_input
//      udp_input
//      icmp_input
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
ip4_addr_isbroadcast_u32_entry:
l2303D750:
	word32 a0_11
	word32 a5_10 = 0xFFFFFFFD<32>
	branch a0 >u 2<32> l2303D786
l2303D786:
	a0_11 = 1<32>
l2303D75C:
	a5_10 = CONVERT(Mem0[a1 + 65<i32>:byte], byte, word32)
	a0_11 = a5_10 & 2<i32>
	branch (a5_10 & 2<i32>) == 0<32> l2303D788
l2303D766:
	a0_11 = 0<32>
	branch a5_10 == a0 l2303D788
l2303D76E:
	a5_10 = (a5_10 ^ a0) & a0 + -1<i32>
	branch a5_10 != 0<32> l2303D788
l2303D788:
	a3Out = a0 + -1<i32>
	a4Out = <invalid>
	a5Out = a5_10
	return a0_11
l2303D776:
	word32 a3_17 = ~(a0 + -1<i32>)
	a3Out = a3_17
	a4Out = <invalid>
	a5Out = a5_10
	return CONVERT((a3_17 & a0) - a3_17 <u 1<i32>, bool, word32)
ip4_addr_isbroadcast_u32_exit:


word32 ip4addr_aton(word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipaddr_addr
//      dhcpd_start
//      set_if
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s4
// Trashed: a0 a2 a3 a4 a5 a6 a7 s0 s4 s8 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ip4addr_aton_entry:
l2303D78A:
	word32 a5_102 = CONVERT(Mem7[a0:byte], byte, word32)
	word32 a4_10 = fp + -32<i32>
l2303D7B2:
	word32 s0_114
	word32 a3_24 = CONVERT(Mem23[a5_102 + 0x230825B1<32>:byte], byte, word32)
	word32 a3_117 = a3_24 & 4<32>
	branch (a3_24 & 4<32>) == 0<32> l2303D8E4
l2303D7C0:
	word32 a7_177 = 0xA<32>
	branch a5_102 != 48<i32> l2303D7D6
l2303D7C6:
	a5_102 = CONVERT(Mem23[a0 + 1<i32>:byte], byte, word32)
	branch (a5_102 & 223<i32>) == 88<i32> l2303D7FC
l2303D7FC:
	a5_102 = CONVERT(Mem23[a0 + 2<i32>:byte], byte, word32)
	a7_177 = 0x10<32>
	a0 = a0 + 2<32>
l2303D7D2:
	a0 = a0 + 1<32>
	a7_177 = 8<32>
l2303D7D6:
	word32 a2_138 = a0
	word32 a0_103 = 0<32>
l2303D7DA:
	a3_117 = CONVERT(Mem23[a5_102 + 0x230825B1<32>:byte], byte, word32)
	branch (a3_117 & 4<i32>) == 0<32> l2303D806
l2303D806:
	branch a7_177 != 0x10<32> l2303D82C
l2303D80A:
	branch (a3_117 & 68<i32>) == 0<32> l2303D82C
l2303D82C:
	branch a5_102 != 46<i32> l2303D844
l2303D844:
	branch a5_102 == 0<32> l2303D84C
l2303D846:
	a3_117 = a3_117 & 8<32>
	s0_114 = 0<32>
	branch (a3_117 & 8<32>) == 0<32> l2303D86E
l2303D84C:
	s0_114 = (a4_10 - (fp + -32<i32>) >> 2<i32>) + 1<32>
	a5_102 = 2<32>
	branch s0_114 == 2<32> l2303D8AA
l2303D8AA:
	a5_102 = 0x1000000<32>
	s0_114 = 0<32>
	branch a0_103 >=u 0x1000000<32> l2303D86E
l2303D8B4:
	a4_10 = 255<i32>
	branch true l2303D86E
l2303D8BE:
	a5_102 = 0<32>
l2303D85A:
	branch s0_114 > 2<32> l2303D878
l2303D878:
	word32 a5_84
	branch s0_114 == 3<32> l2303D8C4
l2303D8C4:
	a5_102 = 0x10000000<32>
	s0_114 = 0<32>
	branch a0_103 >=u 0x10000000<32> l2303D86E
l2303D8CC:
	a3_117 = 255<i32>
	branch true l2303D86E
l2303D8D6:
	s4 = dwArg94
	branch a4_10 >u 255<i32> l2303D86E
l2303D8DC:
	a5_84 = 0<32>
	a4_10 = a4_10 << 16<i32>
l2303D87E:
	a5_102 = 4<32>
	branch s0_114 != 4<32> l2303D860
l2303D884:
	s0_114 = 0<32>
	branch a0_103 >u 255<i32> l2303D86E
l2303D88E:
	branch false l2303D86E
l2303D894:
	s4 = dwArg74
	branch a3_117 >u 255<i32> l2303D86E
l2303D89A:
	branch a4_10 >u 255<i32> l2303D86E
l2303D8A0:
	a3_117 = a3_117 << 16<i32>
	a5_84 = a3_117 | 0x4000000<32>
	a4_10 = a4_10 << 8<i32>
l2303D8E0:
	a5_102 = a5_84 | a4_10
l2303D8C0:
	a0_103 = a0_103 | a5_102
l2303D85E:
	branch s0_114 == 0<32> l2303D86E
l2303D860:
	s0_114 = 1<32>
	branch a1 == 0<32> l2303D86E
l2303D866:
	Mem121[lwip_htonl(a0_103, out a3_117, out a4_10, out a5_102):word32] = a1
l2303D830:
	branch a4_10 == fp + -20<i32> l2303D8E4
l2303D8E4:
	s0_114 = 0<32>
l2303D86E:
	a0Out = s0_114
	a3Out = a3_117
	a4Out = a4_10
	a5Out = a5_102
	s4Out = s4
	return dwArgE4
ip4addr_aton_exit:
l2303D834:
	a4_10 = a4_10 + 4<32>
	Mem136[a4_10 + 4092<i32>:word32] = a0_103
	a5_102 = CONVERT(Mem136[a2_138 + 1<i32>:byte], byte, word32)
	a0 = a2_138 + 1<i32>
l2303D812:
	word32 a0_142 = a0_103 << 4<i32>
	word32 a5_143 = a5_102 + 0xA<32>
	word32 t1_144 = 97<i32>
	branch (a3_117 & 3<32>) == 2<32> l2303D824
l2303D820:
	t1_144 = 65<i32>
l2303D824:
	a0_103 = a0_142 | a5_143 - t1_144
l2303D7EA:
	a0_103 = a7_177 + a0_103 + a5_102 + -48<i32>
l2303D7F4:
	a5_102 = CONVERT(Mem23[a2_138 + 1<i32>:byte], byte, word32)
	a2_138 = a2_138 + 1<32>


word32 ipaddr_addr(word32 a0, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_sta_ip_set_cmd
//      bl_rx_sm_disconnect_ind
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s4 s8 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ipaddr_addr_entry:
l2303D8E8:
	word32 a3_10
	word32 s4_56
	word32 a5_55
	word32 a4_54
	word32 a0_25
	word32 s0_14 = ip4addr_aton(a0, fp + 0xFFFFFFEC<32>, out a0_25, out a3_10, out a4_54, out a5_55, out s4_56)
	branch a0_25 == 0<32> l2303D8FC
l2303D8FC:
	a0_25 = 0xFFFFFFFF<32>
l2303D8F4:
l2303D8F6:
	a0Out = a0_25
	a3Out = a3_10
	return s0_14
ipaddr_addr_exit:


word32 ip4addr_ntoa_r(word32 a1, word32 a2, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_sta_ip_set_cmd
//      ip4addr_ntoa
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ip4addr_ntoa_r_entry:
l2303D900:
	word32 t4_42 = a1
	word32 a0_10 = 0<32>
	word32 a3_11 = fp + 0xFFFFFFFC<32>
l2303D918:
	word32 a6_18 = CONVERT(Mem17[a3_11:byte], byte, word32)
	word32 a5_19 = 0<32>
l2303D91E:
	Mem31[fp + a5_19 + 4088<i32>:byte] = SLICE((a6_18 & 0xA<32>) + 48<i32>, byte, 0)
	word32 t3_27 = a5_19 + 1<i32>
	word32 a4_29 = a6_18 >>u 0xA<32>
	branch a6_18 >u 9<32> l2303D970
l2303D970:
	a6_18 = a4_29 & 255<i32>
	a5_19 = t3_27 & 255<i32>
l2303D944:
	Mem37[a3_11:byte] = SLICE(a4_29 & 255<i32>, byte, 0)
	word32 a6_40 = a0_10
	word32 a4_43 = t4_42
l2303D94C:
	word32 a0_62
	a0_10 = a0_10 + 1<32>
	branch a5_19 != 255<i32> l2303D976
l2303D976:
	word32 a7_48 = a5_19 + -1<i32>
	branch a6_40 >= a2 l2303D998
l2303D982:
	a4_43 = a4_43 + 1<32>
	Mem60[a4_43 + 4095<i32>:byte] = SLICE(CONVERT(Mem55[a5_19 + fp + -8<i32>:byte], byte, word32), byte, 0)
	a6_40 = a0_10
	a5_19 = a7_48 & 255<i32>
l2303D952:
	branch a6_40 >= a2 l2303D998
l2303D998:
	a0_62 = 0<32>
l2303D956:
	Mem66[a4_43:byte] = 0x2E<8>
	a3_11 = a3_11 + 1<32>
	t4_42 = a4_43 + 1<i32>
	branch a3_11 != fp l2303D918
l2303D966:
	Mem71[a4_43:byte] = 0<8>
	a0_62 = a1
l2303D96C:
	a3Out = a3_11
	return a0_62
ip4addr_ntoa_r_exit:


word32 ip4addr_ntoa(ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifiprov_wifi_state_get
//      wifi_sta_ip_info
//      netif_status_callback
// MayUse: 
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ip4addr_ntoa_entry:
l2303D99C:
l2303D9A6_thunk_ip4addr_ntoa_r:
	word32 a3_7
	word32 a0_6 = ip4addr_ntoa_r(0x42015514<32>, 0x10<32>, out a3_7)
	a3Out = a3_7
	return a0_6
ip4addr_ntoa_exit:


void mem_init(word32 ra, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mem_init_entry:
l2303D9AA:
	Mem7[0x4200E2D4<32>:word32] = 0x42045FC0<32>
	Mem11[0x2000000<32>:word32] = 0x42045FC0<32>
	Mem12[0x42045FC4<32>:byte] = 0<8>
	Mem13[0x4200E2D8<32>:word32] = 0x44045FC0<32>
	Mem15[0x20002000<32>:word32] = 0x44045FC0<32>
	Mem17[0x44045FC4<32>:byte] = 1<8>
	Mem20[0x4200E2CC<32>:word32] = 0x42045FC0<32>
	Mem23[0x4201A716<32>:word16] = 0<16>
l2303D9F4_thunk_sys_mutex_new:
	sys_mutex_new(ra, 0x4200E2D0<32>, 0x4200E000<32>, 0x2000000<32>, 0x4201A000<32>, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178)
	return
mem_init_exit:


word32 mem_free(word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg24, word32 dwArg84, word32 dwArgA4, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0198, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_free
//      dhcp_server_recv
//      dhcp_server_stop
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut: a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mem_free_entry:
l2303D9F8:
	branch a0 == 0<32> l2303DB62
l2303DB62:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	return s0
l2303D9FC:
	word32 s1_207
	word32 s2_208 = 0x4201A668<32>
	s1_207 = s1
	branch (a0 & 3<i32>) == 0<32> l2303DA3E
l2303DA3E:
	s1_207 = a0 + -8<i32>
	branch a0 + -8<i32> <u Mem19[0x4200E2D4<32>:int32] l2303DA1C
l2303DA52:
	a3 = Mem19[0x4200E2D8<32>:int32]
	a4 = a0 + 12<i32>
	s3 = 0x4200E2D8<32>
	branch a3 <u a0 + 12<i32> l2303DA1C
l2303DA66:
	word32 s1_42
	word32 s2_43
	word32 s3_44
	word32 s4_45
	word32 a1_446
	word32 a4_194
	word32 s0_41 = sys_mutex_lock(a3, a0 + 12<i32>, 0x4201A668<32>, mstatus, s4, dwArg24, s3, dwArgD8, dwArg0118, out s1_42, out a1_446, out a4_194, out s2_43, out s3_44, out s4_45)
	word32 a5_129 = CONVERT(Mem19[s0_41 + -4<i32>:byte], byte, word32)
	branch a5_129 != 0<32> l2303DA82
l2303DA82:
	word32 a1_50 = CONVERT(Mem19[s0_41 + -8<i32>:uint16], uint16, word32)
	a5_129 = 0x2000000<32>
	branch a1_50 >u 0x2000000<32> l2303DA78
l2303DA8C:
	a4_194 = CONVERT(Mem19[s0_41 + -6<i32>:uint16], uint16, word32)
	branch a4_194 >u 0x2000000<32> l2303DA78
l2303DA94:
	a5_129 = Mem19[s4_45:int32]
	word32 a2_56 = CONVERT(SLICE(s1_42 - a5_129, word16, 0), word16, word32)
	branch a2_56 == a4_194 l2303DAAE
l2303DAA4:
	a4_194 = CONVERT(Mem19[a4_194 + a5_129:uint16], uint16, word32)
	branch a4_194 != a2_56 l2303DA78
l2303DAAE:
	word32 a6_61 = Mem19[s3_44:int32]
	word32 a4_64 = a5_129 + a1_50
	branch a4_64 == a6_61 l2303DAC2
l2303DABA:
	a4_194 = CONVERT(Mem19[a4_64 + 2<i32>:uint16], uint16, word32)
	branch a4_194 != a2_56 l2303DA78
l2303DAC2:
	word32 a3_69 = Mem19[0x4200E2CC<32>:int32]
	Mem72[s0_41 + 4092<i32>:byte] = 0<8>
	word32 a4_126 = 0x4200E2CC<32>
	branch s1_42 >=u a3_69 l2303DAD8
l2303DAD6:
	Mem76[s1_42:word32] = 0x4200E2CC<32>
l2303DAD8:
	Mem88[s2_43 + 176<i32>:word16] = SLICE(CONVERT(Mem80[s2_43 + 176<i32>:uint16], uint16, word32) - a1_50 + a2_56, word16, 0)
	word32 a3_93 = CONVERT(Mem88[s0_41 + -8<i32>:uint16], uint16, word32) + a5_129
	branch s1_42 == a3_93 l2303DB18
l2303DAEE:
	word32 a1_95 = CONVERT(Mem88[a3_93 + 4<i32>:byte], byte, word32)
	branch a1_95 != 0<32> l2303DB18
l2303DAF4:
	branch a6_61 == a3_93 l2303DB18
l2303DAF8:
	a4_126 = Mem88[a1_95:word32]
	branch a3_93 != a1_95 l2303DB00
l2303DAFE:
	Mem99[s1_42:word32] = a4_126
l2303DB00:
	Mem104[s0_41 + 4088<i32>:word16] = SLICE(CONVERT(Mem101[a3_93:uint16], uint16, word32), word16, 0)
	word32 a3_105 = CONVERT(Mem104[a3_93:uint16], uint16, word32)
	branch a3_105 == 0x2000000<32> l2303DB18
l2303DB12:
	Mem110[a3_105 + a5_129 + 2<i32>:word16] = SLICE(a2_56, word16, 0)
l2303DB18:
	word32 a2_113 = CONVERT(Mem112[s0_41 + -6<i32>:uint16], uint16, word32)
	word32 a3_115 = a5_129 + a2_113
	branch s1_42 == a3_115 l2303DB4A
l2303DB24:
	word32 a1_118 = CONVERT(Mem112[a3_115 + 4<i32>:byte], byte, word32)
	branch a1_118 != 0<32> l2303DB4A
l2303DB2A:
	word32 a4_119 = Mem112[a1_118:word32]
	branch s1_42 != a1_118 l2303DB32
l2303DB30:
	Mem120[a3_115:word32] = a4_119
l2303DB32:
	Mem125[a3_115:word16] = SLICE(CONVERT(Mem122[s0_41 + -8<i32>:uint16], uint16, word32), word16, 0)
	a4_126 = CONVERT(Mem125[s0_41 + -8<i32>:uint16], uint16, word32)
	branch a4_126 == 0x2000000<32> l2303DB4A
l2303DB44:
	a5_129 = a5_129 + a4_126
	Mem131[a5_129 + 2<i32>:word16] = SLICE(a2_113, word16, 0)
l2303DB4A:
l2303DB5E_thunk_sys_mutex_unlock:
	word32 a1_451
	word32 a3_171
	word32 a4_172
	word32 a5_173
	word32 a7_175
	word32 s1_177
	word32 s2_178
	word32 s3_179
	word32 s4_180
	word32 s5_181
	word32 s6_182
	word32 s8_183
	word32 s0_176 = sys_mutex_unlock(0x4200E2D0<32>, a4_126, a5_129, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_177, out a1_451, out a3_171, out a4_172, out a5_173, out a7_175, out s2_178, out s3_179, out s4_180, out s5_181, out s6_182, out s8_183)
	s1Out = s1_177
	a3Out = a3_171
	a4Out = a4_172
	a5Out = a5_173
	a7Out = a7_175
	s2Out = s2_178
	s3Out = s3_179
	s4Out = s4_180
	s5Out = s5_181
	s6Out = s6_182
	s8Out = s8_183
	return s0_176
l2303DA78:
	word32 a5_448
	word32 s4_449
	word32 s8_450
	word32 a1_447
	sys_mutex_unlock(0x4200E2D0<32>, a4_194, a5_129, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_207, out a1_447, out a3, out a4, out a5_448, out a7, out s2_208, out s3, out s4_449, out s5, out s6, out s8_450)
l2303DA1C:
	word32 a4_445
	sys_arch_protect(a4, mstatus, out a4_445)
	Mem235[s2_208 + 180<i32>:word16] = SLICE(CONVERT(Mem19[s2_208 + 180<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303DA3A_thunk_sys_arch_unprotect:
	word32 a4_245
	word32 a5_246
	word32 a3_244 = sys_arch_unprotect(a3, mstatus, out a4_245, out a5_246)
	s1Out = s1_207
	a3Out = a3_244
	a4Out = a4_245
	a5Out = a5_246
	a7Out = a7
	s2Out = s2_208
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s8Out = s4
	return s1
mem_free_exit:


void mem_trim(word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg84, word32 dwArgA8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_option_trailer
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mem_trim_entry:
l2303DB64:
	word32 s0_24 = CONVERT(SLICE(a1 + 3<i32> & 0xFFFFFFFC<32>, word16, 0), word16, word32)
	branch s0_24 <=u 0xB<32> l2303DB92
l2303DB92:
	s0_24 = 0xC<32>
l2303DB88:
	branch s0_24 <=u 0x2000000<32> l2303DB94
l2303DB94:
	branch s0_24 <u a1 l2303DB8E
l2303DB98:
	word32 a5_35 = Mem23[0x4200E2D4<32>:int32]
	branch a0 <u a5_35 l2303DBB4
l2303DBA8:
	a4 = Mem23[0x4200E2D8<32>:int32]
	branch a0 <u a4 l2303DBE4
l2303DBE4:
	word32 s2_44 = CONVERT(Mem23[a0 + -8<i32>:uint16], uint16, word32) + 0xFFFFFFF8<32> << 16<i32>
	word32 s3_49 = CONVERT(SLICE((s2_44 >>u 0x10<u32>) - CONVERT(SLICE((a0 + -8<i32>) - a5_35, word16, 0), word16, word32), word16, 0), word16, word32)
	branch s3_49 <u s0_24 l2303DB8E
l2303DC08:
	branch s3_49 == s0_24 l2303DBCE
l2303DC0C:
	word32 a4_117
	word32 s0_110
	word32 a1_58
	word32 s1_65
	word32 s2_66
	word32 s3_67
	word32 s4_68
	word32 a4_436
	word32 s0_64 = sys_mutex_lock(a3, a4, s2_44 >>u 0x10<u32>, mstatus, s4, dwArg24, s3, dwArgD8, dwArg0118, out s1_65, out a1_58, out a4_436, out s2_66, out s3_67, out s4_68)
	word32 a5_148 = Mem23[0x4200E2D4<32>:int32]
	word32 a2_74 = CONVERT(Mem23[s4_68 + -8<i32>:uint16], uint16, word32) + a5_148
	branch CONVERT(Mem23[a2_74 + 4<i32>:byte], byte, word32) != 0<32> l2303DC8E
l2303DC8E:
	a4_117 = s0_64 + 20<i32>
	branch s3_67 <u s0_64 + 20<i32> l2303DC84
l2303DC96:
	a4_117 = CONVERT(SLICE(s1_65 + 8<i32> + s0_64, word16, 0), word16, word32)
	word32 a2_81 = Mem23[a1_58:word32]
	word32 a3_83 = a5_148 + a4_117
	branch a3_83 >=u a1_58 l2303DCB4
l2303DCB2:
	Mem84[a3_83:word32] = a2_81
l2303DCB4:
	Mem86[a3_83 + 4<i32>:byte] = 0<8>
	word32 a2_88 = CONVERT(Mem86[s4_68 + -8<i32>:uint16], uint16, word32)
	Mem90[a3_83 + 2<i32>:word16] = SLICE(s1_65, word16, 0)
	Mem91[a3_83:word16] = SLICE(a2_88, word16, 0)
	Mem93[s4_68 + 4088<i32>:word16] = SLICE(a4_117, word16, 0)
	word32 a3_94 = CONVERT(Mem93[a3_83:uint16], uint16, word32)
	branch a3_94 == 0x2000000<32> l2303DCD8
l2303DCD2:
	Mem98[a5_148 + a3_94 + 2<i32>:word16] = SLICE(a4_117, word16, 0)
l2303DCD8:
	s0_110 = s0_64 + ((s1_65 - s2_66) + CONVERT(Mem105[0x4201A718<32>:uint16], uint16, word32))
l2303DC28:
	a4_117 = CONVERT(SLICE(s1_65 + 8<i32> + s0_64, word16, 0), word16, word32)
	word32 a6_118 = CONVERT(Mem23[a2_74:uint16], uint16, word32)
	word32 a3_119 = a5_148 + a4_117
	branch Mem23[0x4200E2CC<32>:int32] != a2_74 l2303DC4C
l2303DC4A:
	Mem120[a3_119:word32] = 0x4200E2CC<32>
l2303DC4C:
	Mem122[a3_119 + 4<i32>:byte] = 0<8>
	Mem124[a3_119:word16] = SLICE(a6_118, word16, 0)
	Mem126[a3_119 + 2<i32>:word16] = SLICE(s1_65, word16, 0)
	Mem129[s4_68 + 4088<i32>:word16] = SLICE(a4_117, word16, 0)
	word32 a3_130 = CONVERT(Mem129[a3_119:uint16], uint16, word32)
	branch a3_130 == 0x2000000<32> l2303DC6C
l2303DC66:
	Mem134[a5_148 + a3_130 + 2<i32>:word16] = SLICE(a4_117, word16, 0)
l2303DC6C:
	s0_110 = s0_64 + ((s1_65 - s2_66) + CONVERT(Mem141[0x4201A718<32>:uint16], uint16, word32))
l2303DC80:
	Mem149[0x4201A718<32>:word16] = SLICE(s0_110, word16, 0)
	a5_148 = 0x4201A668<32>
l2303DC84:
	word32 a1_438
	word32 s1_437
	word32 a5_441
	word32 a3_439
	word32 s2_443
	word32 a4_440
	word32 s3_444
	word32 a7_442
	word32 s6_447
	word32 s4_445
	word32 s5_446
	word32 s8_448
	sys_mutex_unlock(0x4200E2D0<32>, a4_117, a5_148, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_437, out a1_438, out a3_439, out a4_440, out a5_441, out a7_442, out s2_443, out s3_444, out s4_445, out s5_446, out s6_447, out s8_448)
l2303DBB4:
	word32 a4_433
	sys_arch_protect(a4, mstatus, out a4_433)
	Mem211[0x4201A71C<32>:word16] = SLICE(CONVERT(Mem23[0x4201A71C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a5_435
	word32 a4_434
	sys_arch_unprotect(a3, mstatus, out a4_434, out a5_435)
l2303DB8E:
l2303DBCE:
	0<32> = dwArgA8
	return
mem_trim_exit:


word32 mem_malloc(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArg34, word32 dwArg94, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_start
//      pbuf_alloc
//      dhcp_server_recv
//      dhcp_server_start
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +0094:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mem_malloc_entry:
l2303DCEE:
	word32 s0_18
	branch a0 == 0<32> l2303DD76
l2303DCF8:
	word32 s1_14 = CONVERT(SLICE(a0 + 3<i32> & 0xFFFFFFFC<32>, word16, 0), word16, word32)
	a5 = 0xB<32>
	branch s1_14 <=u 0xB<32> l2303DD1C
l2303DD1C:
	s1_14 = 0xC<32>
l2303DD08:
	a5 = 0x2000000<32>
	s0_18 = 0<32>
	branch s1_14 <=u 0x2000000<32> l2303DD1E
l2303DD1E:
	s0_18 = 0<32>
	branch s1_14 <u a0 l2303DD10
l2303DD24:
	word32 s1_42
	word32 s3_408
	word32 s4_409
	word32 a1_405
	word32 a4_406
	word32 s2_407
	word32 s0_41 = sys_mutex_lock(a3, a4, s2, mstatus, s0, dwArg34, ra, dwArgE8, dwArg0128, out s1_42, out a1_405, out a4_406, out s2_407, out s3_408, out s4_409)
	word32 a6_124 = Mem9[0x4200E2CC<32>:int32]
	word32 a7_52 = Mem9[0x4200E2D4<32>:int32]
	word32 a3_57 = CONVERT(SLICE(a6_124 - a7_52, word16, 0), word16, word32)
	word32 a4_59 = 0x2000000<32> - s1_42
l2303DD58:
	branch a3_57 <u a4_59 l2303DD7A
l2303DD7A:
	word32 s0_64 = a7_52 + a3_57
	word32 a5_67 = CONVERT(Mem9[s0_64:uint16], uint16, word32)
	branch CONVERT(Mem9[s0_64 + 4<i32>:byte], byte, word32) != 0<32> l2303DE46
l2303DD88:
	word32 a2_70 = 0xFFFFFFF8<32> - a3_57 + a5_67
	branch a2_70 <u s1_42 l2303DE46
l2303DE46:
	a3_57 = a5_67
l2303DD92:
	word32 a5_111
	word32 a4_126 = 0x4201A668<32>
	branch a2_70 <u s1_42 + 20<i32> l2303DE1A
l2303DE1A:
	Mem78[s0_64 + 4<i32>:byte] = 1<8>
	word32 a3_83 = CONVERT(Mem78[0x4201A71A<32>:uint16], uint16, word32)
	a5_111 = CONVERT(SLICE(a5_67 + CONVERT(Mem78[0x4201A718<32>:uint16], uint16, word32) - a3_57, word16, 0), word16, word32)
	Mem85[0x4201A718<32>:word16] = SLICE(a5_111, word16, 0)
	branch a3_83 >=u a5_111 l2303DDF4
l2303DE38:
	Mem86[0x4201A71A<32>:word16] = SLICE(a5_111, word16, 0)
l2303DDA2:
	word32 a5_90 = CONVERT(SLICE(s1_42 + 8<i32> + a3_57, word16, 0), word16, word32)
	word32 a2_91 = a7_52 + a5_90
	Mem92[a2_91 + 4<i32>:byte] = 0<8>
	word32 a1_93 = CONVERT(Mem92[s0_64:uint16], uint16, word32)
	Mem94[a2_91 + 2<i32>:word16] = SLICE(a3_57, word16, 0)
	Mem96[a2_91:word16] = SLICE(a1_93, word16, 0)
	Mem97[s0_64:word16] = SLICE(a5_90, word16, 0)
	Mem98[s0_64 + 4<i32>:byte] = 1<8>
	word32 a3_99 = CONVERT(Mem98[a2_91:uint16], uint16, word32)
	branch a3_99 == 0x2000000<32> l2303DDD8
l2303DDD2:
	Mem103[a3_99 + a7_52 + 2<i32>:word16] = SLICE(a5_90, word16, 0)
l2303DDD8:
	a5_111 = CONVERT(Mem105[0x4201A71A<32>:uint16], uint16, word32)
	word32 s1_112 = CONVERT(SLICE(s1_42 + (CONVERT(Mem105[0x4201A718<32>:uint16], uint16, word32) + 8<32>), word16, 0), word16, word32)
	Mem113[0x4201A718<32>:word16] = SLICE(s1_112, word16, 0)
	branch a5_111 >=u s1_112 l2303DDF4
l2303DDF0:
	Mem114[0x4201A71A<32>:word16] = SLICE(s1_112, word16, 0)
l2303DDF4:
	branch a6_124 != s0_64 l2303DE0E
l2303DDF8:
	a5_111 = Mem122[0x4200E2D8<32>:int32]
l2303DE00:
	a4_126 = CONVERT(Mem122[a6_124 + 4<i32>:byte], byte, word32)
	branch a4_126 == 0<32> l2303DE0A
l2303DE06:
	branch a5_111 != a6_124 l2303DE3E
l2303DE3E:
	a6_124 = CONVERT(Mem122[a6_124:uint16], uint16, word32) + a7_52
l2303DE0A:
	Mem138[0x4200E2CC<32>:word32] = a6_124
l2303DE0E:
	word32 s1_411
	s0_18 = sys_mutex_unlock(s0_41 + 720<i32>, a4_126, a5_111, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_411, out a1, out a3, out a4, out a5, out a7, out s2, out s3, out s4, out s5, out s6, out s8) + 8<32>
l2303DD5C:
	word32 a4_194 = CONVERT(Mem9[0x4201A714<32>:uint16], uint16, word32)
	Mem197[0x4201A714<32>:word16] = SLICE(a4_194 + 1<32>, word16, 0)
	word32 s1_410
	sys_mutex_unlock(s0_41 + 720<i32>, a4_194 + 1<32>, 0x4201A668<32>, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_410, out a1, out a3, out a4, out a5, out a7, out s2, out s3, out s4, out s5, out s6, out s8)
l2303DD76:
	s0_18 = 0<32>
l2303DD10:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	return s0_18
mem_malloc_exit:


word32 do_memp_malloc_pool(word32 s1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memp_malloc
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
do_memp_malloc_pool_entry:
l2303DE4A:
	word32 a4_16
	word32 a0_14 = sys_arch_protect(a4, mstatus, out a4_16)
	word32 a5_19 = Mem11[s1:word32]
	branch s1 == 0<32> l2303DE94
l2303DE94:
	Mem23[a4_16:word16] = SLICE(CONVERT(Mem11[a4_16:uint16], uint16, word32) + 1<32>, word16, 0)
l2303DE5E:
	s1 = Mem11[a4_16:word32]
	Mem26[a4_16:word32] = a5_19
	word32 a5_28 = CONVERT(Mem26[a4_16 + 4<i32>:uint16], uint16, word32)
	Mem30[a4_16 + 4<i32>:word16] = SLICE(a5_28 + 1<32>, word16, 0)
	a3 = a0_14
	word32 a4_32 = CONVERT(Mem30[a5_28 + 5<32>:uint16], uint16, word32)
	branch CONVERT(Mem30[a5_28 + 7<32>:uint16], uint16, word32) >=u a4_32 l2303DE82
l2303DE7E:
	Mem34[a5_28 + 7<32>:word16] = SLICE(a4_32, word16, 0)
l2303DE82:
l2303DE84:
	word32 a4_42
	word32 a5_43
	word32 a3_41 = sys_arch_unprotect(a3, mstatus, out a4_42, out a5_43)
	a0Out = s1
	a2Out = dwArg10
	a3Out = a3_41
	a4Out = a4_42
	a5Out = a5_43
	return s1
do_memp_malloc_pool_exit:


word32 memp_init_pool(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memp_init
// MayUse:  a5:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
memp_init_pool_entry:
l2303DEA2:
	Mem7[a5:word32] = 0<32>
	word32 a4_14 = 0<32>
	word32 a0_11 = Mem7[a5 + 8<i32>:word32]
	word32 a5_10 = a5 + 3<32> & 0xFFFFFFFC<32>
l2303DEB0:
	word32 a3_13 = CONVERT(Mem12[a0_11 + 6<i32>:uint16], uint16, word32)
	branch a4_14 < a3_13 l2303DEC0
l2303DEC0:
	word32 a3_17 = Mem12[a3_13:word32]
	Mem19[a3_17:word32] = a5_10
	a0_11 = Mem19[a3_17 + 12<i32>:word32]
	Mem21[a5_10:word32] = a3_17
	a4_14 = a4_14 + 1<32>
	a5_10 = a5_10 + CONVERT(Mem21[a0_11 + 4<i32>:uint16], uint16, word32)
l2303DEB8:
	word32 a0_24 = Mem12[a5_10:word32]
	Mem25[a5_10 + 2<i32>:word16] = SLICE(a3_13, word16, 0)
	return a0_24
memp_init_pool_exit:


word32 memp_init(ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut: a0 a2
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
memp_init_entry:
l2303DED4:
	word32 s0_18 = 0x4201A668<32>
	word32 s1_19 = 0x2307AC2C<32>
l2303DEF8:
	word32 a5_24 = s1_19 + 0<32>
	word32 s3_26 = Mem25[a5_24:int32]
	word32 a0_31 = memp_init_pool(a5_24)
	s0_18 = s0_18 + 4<32>
	Mem36[s0_18 + 180<i32>:word32] = Mem25[s3_26:int32]
	s1_19 = s1_19 + 4<32>
	branch s1_19 != 0xDCF85410<32> l2303DEF8
l2303DF16:
	a2Out = dwArg48
	return a0_31
memp_init_exit:


word32 memp_malloc(word32 s1, word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_input
//      tcpip_try_callback
//      igmp_lookup_group
//      pbuf_alloc
//      tcp_seg_copy
//      tcp_alloc
//      tcp_create_segment
//      sys_timeout
//      udp_new_ip_type
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: sp
memp_malloc_entry:
l2303DF26:
	branch a0 >u 0xE<32> l2303DF40
l2303DF40:
	a0Out = 0<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 0xE<32>
	return s1
l2303DF2C:
l2303DF3C_thunk_do_memp_malloc_pool:
	word32 a0_16
	word32 a2_17
	word32 a3_18
	word32 a4_19
	word32 a5_20
	word32 s1_22 = do_memp_malloc_pool(s1, a3, a4, mstatus, out a0_16, out a2_17, out a3_18, out a4_19, out a5_20)
	a0Out = a0_16
	a2Out = a2_17
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_20
	return s1_22
memp_malloc_exit:


word32 memp_free(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_input
//      tcpip_try_callback
//      igmp_stop
//      pbuf_free
//      tcp_seg_free
//      tcp_abort
//      tcp_recv_null
//      sys_check_timeouts
//      udp_remove
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
memp_free_entry:
l2303DF44:
	branch a0 >u 0xE<32> l2303DF8A
l2303DF4A:
	branch a1 == 0<32> l2303DF8A
l2303DF8A:
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 0xE<32>
	return s1
l2303DF4C:
	word32 a4_22
	word32 a0_20 = sys_arch_protect(a4, mstatus, out a4_22)
	word32 a5_25 = CONVERT(Mem16[a4_22 + 4<i32>:uint16], uint16, word32)
	Mem27[a4_22 + 4<i32>:word16] = SLICE(a5_25 + 0xFFFFFFFF<32>, word16, 0)
	word32 a5_29 = Mem27[a5_25 + 0xFFFFFFFF<32>:word32]
	Mem30[a5_29:word32] = a1
	word32 s1_31 = Mem30[a5_29 + 12<i32>:word32]
	Mem32[a1:word32] = a5_29
l2303DF86_thunk_sys_arch_unprotect:
	word32 a4_39
	word32 a5_40
	word32 a3_38 = sys_arch_unprotect(a3, mstatus, out a4_39, out a5_40)
	a0Out = a0_20
	a2Out = dwArg10
	a3Out = a3_38
	a4Out = a4_39
	a5Out = a5_40
	return s1_31
memp_free_exit:


void netif_null_output_ip4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
netif_null_output_ip4_entry:
l2303DF8C:
	return
netif_null_output_ip4_exit:


word32 netif_issue_reports(word32 ra, word32 s0, word32 a0, word32 a1, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg24, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB0, word32 dwArgB4, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0188, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_do_set_ipaddr
//      netif_set_up
//      netif_set_link_up
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0024:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0188:[0..31]
// LiveOut: a1 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
netif_issue_reports_entry:
l2303DF90:
	word32 a4_108 = CONVERT(Mem0[a0 + 65<i32>:byte], byte, word32)
	word32 a3_104 = 5<32>
	branch (a4_108 & 5<i32>) != 5<32> l2303DFD8
l2303DF9E:
	a1 = a1 & 1<32>
	branch (a1 & 1<32>) == 0<32> l2303DFD8
l2303DFD8:
	s1Out = s1
	a1Out = a1
	a3Out = 5<32>
	a4Out = a4_108
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2303DFA2:
	word32 a0_15 = Mem14[9<32>:word32]
	word32 s0_16 = a0_15
	branch false l2303DFD0
l2303DFAE:
	a4_108 = a4_108 & 8<32>
	branch (a4_108 & 8<32>) == 0<32> l2303DFBA
l2303DFB2:
	word32 a0_228
	ra = etharp_request(ra, a0_15, a0_15, mstatus, s0, dwArg08, dwArg24, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB0, dwArgB4, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s0_16, out s1, out a0_228, out a1, out a3_104, out a4_108, out s2, out s3, out s4, out s5, out s6, out s7, out mstatus)
l2303DFBA:
	word32 a5_48 = CONVERT(Mem14[s0_16 + 65<i32>:byte], byte, word32)
	a5 = a5_48 & 32<i32>
	branch (a5_48 & 32<i32>) == 0<32> l2303DFD0
l2303DFD0:
	s1Out = s1
	a1Out = a1
	a3Out = a3_104
	a4Out = a4_108
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2303DFC4:
l2303DFCC_thunk_igmp_report_groups:
	word32 a1_61
	word32 a3_63
	word32 a4_64
	word32 a5_65
	word32 s4_67
	s1Out = igmp_report_groups(s0, dwArg10, a5_48 & 32<i32>, out a1_61, out a3_63, out a4_64, out a5_65, out s4_67)
	a1Out = a1_61
	a3Out = a3_63
	a4Out = a4_64
	a5Out = a5_65
	s2Out = s2
	s3Out = s3
	s4Out = s4_67
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
netif_issue_reports_exit:


word32 netif_do_set_ipaddr(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90, word32 dwArg94, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_set_ipaddr
//      netif_set_addr
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0168:[0..31]
// LiveOut: a1 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_do_set_ipaddr_entry:
l2303DFDA:
	word32 a0_5 = Mem0[a5 + 4<i32>:word32]
	word32 a1_7 = Mem0[a4:word32]
	branch a4 == a5 l2303E032
l2303E032:
	s0Out = s0
	s1Out = s1
	a1Out = a1_7
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2303DFE2:
	Mem11[a5:word32] = a2
	word32 a3_35
	word32 a4_36
	word32 a5_37
	word32 mstatus_40
	word32 s1_42
	word32 s2_45
	word32 s4_251
	word32 ra_41 = tcp_netif_ip_addr_changed(ra, a2, fp + 0xFFFFFFEC<32>, a3, a4, s3, s4, s7, mstatus, s2, dwLoc08, dwArg08, dwArg18, dwArg34, dwArg38, dwArg48, dwArg58, dwArg5C, s1, dwArg78, dwArg98, dwArg9C, dwArgA8, dwArgC8, out s1_42, out a3_35, out a4_36, out a5_37, out s2_45, out s4_251, out mstatus_40)
	raw_netif_ip_addr_changed(s1_42, fp + 0xFFFFFFEC<32>, a3_35, a4_36, udp_netif_ip_addr_changed(s1_42, fp + 0xFFFFFFEC<32>, a3_35, a4_36, a5_37))
	Mem72[Mem24[s2_45:int32] + 4<i32>:word32] = a0_5
	word32 s4_252
	word32 a1_104
	word32 a3_102
	word32 a4_103
	word32 a5_106
	word32 mstatus_114
	word32 s1_107
	word32 s2_116
	word32 s3_117
	word32 s5_118
	word32 s6_119
	word32 s7_120
	word32 ra_115 = netif_issue_reports(ra_41, a0_5, a0_5, 1<32>, mstatus_40, s2, dwLoc10, dwArg04, dwArg38, dwArg48, s1, dwArg74, dwArg78, dwArg88, dwArg90, dwArg94, dwArgA8, dwArgB8, dwArgE8, dwArg0168, out s1_107, out a1_104, out a3_102, out a4_103, out a5_106, out s2_116, out s3_117, out s4_252, out s5_118, out s6_119, out s7_120, out mstatus_114)
	word32 s0_99 = Mem72[a5_106 + 28<i32>:word32]
	branch a5_106 == 0<32> l2303E024
l2303E020:
	call a5_106 (retsize: 0;)
		uses: a0:s0_99,a1:a1_76,mstatus:mstatus_86,ra:ra_87,s0:s0_99,Stack +0008:s2,Stack +0010:dwLoc10,Stack +0024:dwArg04,Stack +0058:dwArg38,Stack +0068:dwArg48,Stack +0088:s1,Stack +0094:dwArg74,Stack +0098:dwArg78,Stack +00A8:dwArg88,Stack +00B0:dwArg90,Stack +00B4:dwArg94,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +0108:dwArgE8,Stack +0188:dwArg0168
		defs: a1:a1_104,a3:a3_102,a4:a4_103,a5:a5_106,mstatus:mstatus_114,ra:ra_115,s1:s1_107,s2:s2_116,s3:s3_117,s5:s5_118,s6:s6_119,s7:s7_120
l2303E024:
	s0Out = s0_99
	s1Out = s1_107
	a1Out = a1_104
	a3Out = a3_102
	a4Out = a4_103
	a5Out = a5_106
	s2Out = s2_116
	s3Out = s3_117
	s4Out = dwArg04
	s5Out = s5_118
	s6Out = s6_119
	s7Out = s7_120
	mstatusOut = mstatus_114
	return ra_115
netif_do_set_ipaddr_exit:


void netif_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
netif_init_entry:
l2303E036:
	return
netif_init_exit:


word32 netif_set_ipaddr(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArg0148, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_if
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0148:[0..31]
// LiveOut: s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_set_ipaddr_entry:
l2303E038:
	branch a0 == 0<32> l2303E054
l2303E054:
	s1Out = s1
	s2Out = s2
	return s0
l2303E03A:
	branch a1 != 0<32> l2303E048
l2303E040:
l2303E048:
	word32 s0_42
	word32 s1_43
	word32 s2_46
	word32 a1_155
	word32 a3_156
	word32 a4_157
	word32 a5_158
	word32 s3_159
	word32 s4_160
	word32 s5_161
	word32 s6_162
	word32 s7_163
	word32 mstatus_164
	netif_do_set_ipaddr(ra, s1, fp + 0xFFFFFFEC<32>, a3, a4, a5, s2, s3, s4, s7, mstatus, dwLoc1C, dwLoc18, dwLoc08, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg54, dwArg58, dwArg68, dwArg70, dwArg74, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArg0148, out s0_42, out s1_43, out a1_155, out a3_156, out a4_157, out a5_158, out s2_46, out s3_159, out s4_160, out s5_161, out s6_162, out s7_163, out mstatus_164)
	s1Out = s1_43
	s2Out = s2_46
	return s0_42
netif_set_ipaddr_exit:


void netif_set_netmask(word32 a0, word32 a1, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_if
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1
// Preserved: sp
netif_set_netmask_entry:
l2303E056:
	branch a0 == 0<32> l2303E06C
l2303E058:
	branch a1 != 0<32> l2303E062
l2303E05A:
l2303E062:
	word32 a0_14 = Mem0[a4 + 8<i32>:word32]
	branch a5 == a4 l2303E06C
l2303E06A:
	Mem15[a5 + 8<i32>:word32] = a0_14
l2303E06C:
	return
netif_set_netmask_exit:


void netif_set_gw(word32 a0, word32 a1, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_if
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1
// Preserved: sp
netif_set_gw_entry:
l2303E06E:
	branch a0 == 0<32> l2303E084
l2303E070:
	branch a1 != 0<32> l2303E07A
l2303E072:
l2303E07A:
	word32 a0_14 = Mem0[a4 + 12<i32>:word32]
	branch a5 == a4 l2303E084
l2303E082:
	Mem15[a5 + 12<i32>:word32] = a0_14
l2303E084:
	return
netif_set_gw_exit:


word32 netif_set_addr(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg2C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netifapi_do_netif_set_addr
//      dhcp_bind
//      dhcp_recv
//      dhcp_stop
//      netif_add
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_set_addr_entry:
l2303E086:
	word32 s2_104 = a2
	branch a1 != 0<32> l2303E0A0
l2303E098:
l2303E0A0:
	branch a2 != 0<32> l2303E0AC
l2303E0A4:
	s2_104 = 0x230827AC<32>
l2303E0AC:
	branch a3 != 0<32> l2303E0B6
l2303E0AE:
	a3 = 0x230827AC<32>
l2303E0B6:
	word32 a5_102
	word32 ra_136
	branch a5 == 0<32> l2303E0BE
l2303E0BE:
	word32 a3_517
	word32 a5_519
	word32 s0_515
	word32 a4_518
	word32 s1_516
	ra_136 = netif_do_set_ipaddr(ra, a0, fp + -20<i32>, a3, a4, a5, s2_104, s3, s4, s7, mstatus, dwLoc2C, dwLoc28, dwLoc18, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg58, s1, ra, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgB8, dwArg0138, out s0_515, out s1_516, out a1, out a3_517, out a4_518, out a5_519, out s2_104, out s3, out s4, out s5, out s6, out s7, out mstatus)
	a2 = dwArg74
	a5_102 = 1<32>
l2303E0BA:
	a5_102 = 0<32>
	ra_136 = ra
l2303E0CE:
	word32 a4_106 = Mem105[s2_104:int32]
	word32 s1_111 = Mem105[a2 + 8<i32>:word32]
	branch a4_106 == a2 l2303E0DA
l2303E0D8:
	Mem112[a4_106 + 8<i32>:word32] = s1_111
l2303E0DA:
	word32 a3_115 = Mem114[a4_106:word32]
	word32 s1_116 = Mem114[a3_115 + 12<i32>:word32]
	branch a4_106 == a3_115 l2303E0E4
l2303E0E2:
	Mem117[a4_106 + 12<i32>:word32] = s1_116
l2303E0E4:
	branch a5_102 != 0<32> l2303E0F0
l2303E0E6:
	word32 s0_520
	ra_136 = netif_do_set_ipaddr(ra_136, s1_116, fp + -20<i32>, a3_115, a4_106, a5_102, s2_104, s3, s4, s7, mstatus, dwLoc2C, dwLoc28, dwLoc18, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg58, s1, ra, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgB8, dwArg0138, out s0_520, out s1_116, out a1, out a3_115, out a4_106, out a5_102, out s2_104, out s3, out s4, out s5, out s6, out s7, out mstatus)
l2303E0F0:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_116
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3_115
	a4Out = a4_106
	a5Out = a5_102
	s2Out = s2_104
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra_136
netif_set_addr_exit:


word32 netif_add(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 a6, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg74, word32 dwArg88, word32 dwArgB4, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netifapi_do_netif_add
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +00B4:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_add_entry:
l2303E0FC:
	word32 s0_148
	branch a0 != 0<32> l2303E11C
l2303E11C:
	branch a5 == 0<32> l2303E10A
l2303E11E:
	word32 s1_18 = a1
	word32 s2_20 = a2
	branch a1 != 0<32> l2303E12E
l2303E126:
	s1_18 = 0x230827AC<32>
l2303E12E:
	branch a2 != 0<32> l2303E13A
l2303E132:
	s2_20 = 0x230827AC<32>
l2303E13A:
	branch a3 != 0<32> l2303E144
l2303E13C:
l2303E144:
	Mem36[0x2303DFA0<32>:word32] = a0
	Mem39[a0 + 4<i32>:word32] = 0<32>
	Mem40[a0 + 8<i32>:word32] = 0<32>
	Mem41[a0 + 12<i32>:word32] = 0<32>
	Mem42[a0 + 56<i32>:word16] = 0<16>
	Mem43[a0 + 65<i32>:byte] = 0<8>
	word32 a3_70
	word32 a4_71
	word32 a5_72
	word32 t1_514
	word32 a0_515
	word32 a2_517
	word32 a1_516
	word32 ra_73 = memset(ra, a0 + 40<i32>, 0<32>, 0xC<32>, out t1_514, out a0_515, out a1_516, out a2_517, out a3_70, out a4_71, out a5_72)
	Mem79[a4_71 + 36<i32>:word32] = a0
	word32 a4_80 = CONVERT(Mem79[0x4200E318<32>:byte], byte, word32)
	0<32> = dwArg74
	Mem81[a0 + 16<i32>:word32] = a6
	Mem82[a0 + 68<i32>:byte] = SLICE(a4_80, byte, 0)
	Mem91[a0 + 28<i32>:word32] = 0<32>
	Mem92[a0 + 32<i32>:word32] = 0<32>
	Mem93[a0 + 72<i32>:word32] = 0<32>
	word32 a1_107
	word32 a2_108
	word32 a3_109
	word32 a4_110
	word32 a5_111
	word32 mstatus_114
	word32 s1_117
	word32 s3_121
	word32 s4_122
	word32 s7_125
	word32 a0_138
	word32 mstatus_146
	word32 ra_147
	word32 s3_153
	call a5_111 (retsize: 0;)
		uses: a0:dwArgB4,a1:a1_107,a2:a2_108,a3:a3_109,a4:a4_110,a5:a5_111,mstatus:mstatus_114,ra:netif_set_addr(ra_73, s1_88, a0, s1_88, s2_84, a3_70, a4_80, a5_72, 0x4200E000<32>, s4, s7, mstatus, a5, dwLoc28, dwLoc18, dwLoc08, dwLoc04, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg68, dwArg88, dwArgF8, dwArg0108, out s0_518, out s1_117, out a1_107, out a2_108, out a3_109, out a4_110, out a5_111, out s2_519, out s3_121, out s4_122, out s5_520, out s6_521, out s7_125, out mstatus_114),s1:s1_117,s3:s3_121 + 792<i32>,s4:s4_122,s7:s7_125,Stack +0004:a5,Stack +0008:dwLoc28,Stack +0018:dwLoc18,Stack +0028:dwLoc08,Stack +002C:dwLoc04,Stack +0044:dwArg14,Stack +0048:dwArg18,Stack +0058:dwArg28,Stack +0068:dwArg38,Stack +006C:dwArg3C,Stack +0074:dwArg44,Stack +0078:dwArg48,Stack +0088:dwArg58,Stack +0098:dwArg68,Stack +00B8:dwArg88,Stack +0128:dwArgF8,Stack +0138:dwArg0108
		defs: a0:a0_138,mstatus:mstatus_146,ra:ra_147,s0:s0_148,s3:s3_153
	branch a0_138 != 0<32> l2303E10A
l2303E1B0:
	word32 a2_168 = Mem93[0x4201A660<32>:int32]
l2303E1BE:
	branch CONVERT(Mem172[s0_148 + 68<i32>:byte], byte, word32) != 255<i32> l2303E1CA
l2303E1C6:
	Mem175[s0_148 + 68<i32>:byte] = 0<8>
l2303E1CA:
	word32 a5_178 = CONVERT(Mem177[s0_148 + 68<i32>:byte], byte, word32)
	word32 a3_181 = a2_168
l2303E1D0:
	branch a3_181 != 0<32> l2303E1FE
l2303E1FE:
	branch CONVERT(Mem177[a3_181 + 68<i32>:byte], byte, word32) != a5_178 l2303E20E
l2303E20E:
	a3_181 = Mem177[a3_181:word32]
l2303E206:
	Mem189[s0_148 + 68<i32>:byte] = SLICE(a5_178 + 1<32>, byte, 0)
l2303E1D2:
	word32 a3_191 = 0<32>
	branch a5_178 == 254<i32> l2303E1E2
l2303E1DC:
	a3_191 = a5_178 + 1<32> & 255<i32>
l2303E1E2:
	word32 a5_196 = CONVERT(Mem177[s0_148 + 65<i32>:byte], byte, word32)
	Mem199[a2_168:word32] = s0_148
	Mem205[s3_153:byte] = SLICE(a3_191, byte, 0)
	Mem210[0x4201A660<32>:word32] = s0_148
	branch (a5_196 & 32<i32>) == 0<32> l2303E10C
l2303E1F6:
	igmp_start(ra_147, s0_148, a3_191, 0x4201A000<32>, a5_196 & 32<i32>, mstatus_146, dwLoc08)
l2303E10A:
	s0_148 = 0<32>
l2303E10C:
	0<32> = dwArg0128
	return s0_148
netif_add_exit:


void netif_set_default(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
netif_set_default_entry:
l2303E212:
	Mem5[0x4201A65C<32>:word32] = a0
	return
netif_set_default_exit:


word32 netif_set_up(word32 ra, word32 s0, word32 a0, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg24, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB0, word32 dwArgB4, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0188, ptr32 & a1Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
//      dhcpd_start
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0024:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0188:[0..31]
// LiveOut: a1 mstatus ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
netif_set_up_entry:
l2303E21C:
	branch a0 == 0<32> l2303E254
l2303E254:
	a1Out = a1
	s2Out = s2
	mstatusOut = mstatus
	return ra
l2303E21E:
	word32 a5_9 = CONVERT(Mem8[a0 + 65<i32>:byte], byte, word32)
	word32 s0_10 = a0
	branch (a5_9 & 1<i32>) != 0<32> l2303E24C
l2303E24C:
	a1Out = a1
	s2Out = s2
	mstatusOut = mstatus
	return ra
l2303E230:
	Mem16[a0 + 65<i32>:byte] = SLICE(a5_9 | 1<i32>, byte, 0)
	word32 a0_17 = Mem16[(a5_9 | 1<i32>) + 28<i32>:word32]
	branch (a5_9 | 1<i32>) == 0<32> l2303E23E
l2303E23C:
	word32 a5_22
	word32 a4_23
	word32 a2_24
	word32 a1_25
	word32 a3_67
	word32 s1_68
	word32 s4_69
	word32 s8_70
	word32 t3_71
	word32 tp_72
	word32 a6_73
	word32 a7_74
	word32 s2_75
	word32 s3_76
	word32 s5_77
	word32 s6_78
	word32 s7_79
	word32 s9_80
	word32 t0_81
	word32 t1_82
	word32 t4_83
	word32 t5_84
	word32 t6_85
	call a5_9 | 1<i32> (retsize: 0;)
		uses: a0:a0_17,a1:a1_25,a2:a2_24,a3:a3_67,a4:a4_23,a5:a5_22,a6:a6_73,a7:a7_74,mstatus:mstatus,ra:ra,s0:a0,s1:s1_68,s2:s2_75,s3:s3_76,s4:s4_69,s5:s5_77,s6:s6_78,s7:s7_79,s8:s8_70,s9:s9_80,Stack +0020:dwArg10,t0:t0_81,t1:t1_82,t3:t3_71,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_72
		defs: a1:a1_25,a2:a2_24,a3:a3_67,a4:a4_23,a5:a5_22,a6:a6_73,a7:a7_74,ra:ra_21,s0:s0_20,s1:s1_68,s2:s2_75,s3:s3_76,s4:s4_69,s5:s5_77,s6:s6_78,s7:s7_79,s8:s8_70,s9:s9_80,t0:t0_81,t1:t1_82,t3:t3_71,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_72
l2303E23E:
l2303E248_thunk_netif_issue_reports:
	word32 a1_40
	word32 mstatus_50
	word32 s2_52
	word32 s7_178
	word32 s6_177
	word32 s5_176
	word32 s4_175
	word32 s3_174
	word32 a5_173
	word32 a4_172
	word32 a3_171
	word32 s1_170
	word32 ra_51 = netif_issue_reports(ra, s0, s0_10, 3<32>, mstatus, dwArg08, dwArg10, dwArg24, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB0, dwArgB4, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_170, out a1_40, out a3_171, out a4_172, out a5_173, out s2_52, out s3_174, out s4_175, out s5_176, out s6_177, out s7_178, out mstatus_50)
	a1Out = a1_40
	s2Out = s2_52
	mstatusOut = mstatus_50
	return ra_51
netif_set_up_exit:


word32 netif_set_down(word32 ra, word32 s0, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_remove
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +00E8:[0..31]
// LiveOut: s0
// Trashed: a0 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
netif_set_down_entry:
l2303E256:
	branch a0 == 0<32> l2303E294
l2303E294:
	return s0
l2303E258:
	word32 a5_9 = CONVERT(Mem8[a0 + 65<i32>:byte], byte, word32)
	word32 s0_10 = a0
	branch (a5_9 & 1<i32>) == 0<32> l2303E28C
l2303E26A:
	Mem13[a0 + 65<i32>:byte] = SLICE(a5_9 & -2<i32>, byte, 0)
	branch (a5_9 & 8<32>) == 0<32> l2303E27A
l2303E276:
	s0_10 = etharp_cleanup_netif(ra, a0, a3, s4, mstatus, dwArg08, dwArgE8, out s4)
l2303E27A:
	word32 t1_30 = Mem13[s0_10 + 28<i32>:int32]
	branch t1_30 == 0<32> l2303E28C
l2303E28C:
	return s0
l2303E282:
	word32 s0_47
	word32 a5_49
	word32 a4_50
	word32 t1_51
	word32 a6_56
	word32 s1_57
	word32 s2_58
	word32 s3_59
	word32 s8_60
	word32 t3_61
	call t1_30 (retsize: 0;)
		uses: a0:s0_28,a2:dwArg10,a3:a3,a4:a4_50,a5:a5_49,a6:a6_56,mstatus:mstatus,ra:ra,s0:s0,s1:s1_57,s2:s2_58,s3:s3_59,s4:s4_44,s8:s8_60,Stack +0008:dwArg08,Stack +0010:dwArg10,Stack +00E8:dwArgE8,t1:t1_51,t3:t3_61
		defs: a4:a4_50,a5:a5_49,a6:a6_56,s0:s0_47,s1:s1_57,s2:s2_58,s3:s3_59,s8:s8_60,t1:t1_51,t3:t3_61
	return s0_47
netif_set_down_exit:


void netif_remove(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 tp
// Preserved: a1 a3 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t0 t1 t3 t4 t5 t6
netif_remove_entry:
l2303E296:
	branch a0 == 0<32> l2303E31C
l2303E31C:
	return
l2303E298:
	word32 a0_12 = Mem10[a5 + 4<i32>:word32]
	word32 s0_101 = a0_12
	branch a5 == 0<32> l2303E2C2
l2303E2A6:
	word32 a5_29
	word32 s1_34
	word32 s2_368
	ra = tcp_netif_ip_addr_changed(ra, a0_12 + 4<i32>, 0<32>, a3, a4, s3, s4, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArgA8, dwArgAC, dwArgB8, dwArgD8, out s1_34, out a3, out a4, out a5_29, out s2_368, out s4, out mstatus)
	raw_netif_ip_addr_changed(s1_34, 0<32>, a3, a4, udp_netif_ip_addr_changed(s1_34, 0<32>, a3, a4, a5_29))
l2303E2C2:
	word32 a5_63 = CONVERT(Mem10[a0_12 + 65<i32>:byte], byte, word32)
	branch (a5_63 & 32<i32>) == 0<32> l2303E2D2
l2303E2CC:
	ra = igmp_stop(ra, a0_12, a3, a4, a5_63 & 32<i32>, mstatus, dwArg28, out a3)
l2303E2D2:
	branch (CONVERT(Mem10[a0_12 + 65<i32>:byte], byte, word32) & 1<32>) == 0<32> l2303E2E0
l2303E2DA:
	s0_101 = netif_set_down(ra, a0_12, a0_12, a3, s4, mstatus, dwLoc08, dwArg00, dwArgD8)
l2303E2E0:
	branch Mem10[0x4201A65C<32>:int32] != s0_101 l2303E2F0
l2303E2EC:
	Mem112[0x4201A65C<32>:word32] = 0<32>
l2303E2F0:
	word32 a5_115 = Mem114[0x4201A660<32>:int32]
	branch a5_115 != s0_101 l2303E30E
l2303E30E:
	branch a5_115 == 0<32> l2303E302
l2303E310:
	word32 a5_120 = Mem114[0x4201A000<32>:word32]
	branch s0_101 != 0x4201A000<32> l2303E30C
l2303E30C:
	a5_115 = 0x4201A000<32>
l2303E316:
	Mem124[0x4201A000<32>:word32] = a5_120
l2303E2FC:
	Mem126[0x4201A660<32>:word32] = a5_115
l2303E302:
	return
netif_remove_exit:


void netif_set_status_callback(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl606a0_wifi_netif_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
netif_set_status_callback_entry:
l2303E31E:
	branch a0 == 0<32> l2303E322
l2303E320:
	Mem5[a1 + 28<i32>:word32] = a0
l2303E322:
	return
netif_set_status_callback_exit:


void netif_set_link_up(word32 ra, word32 s0, word32 s1, word32 a0, word32 s4, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_set_link_up_entry:
l2303E324:
	branch a0 == 0<32> l2303E366
l2303E366:
	return
l2303E326:
	word32 a5_9 = CONVERT(Mem8[a0 + 65<i32>:byte], byte, word32)
	branch (a5_9 & 4<i32>) != 0<32> l2303E35E
l2303E338:
	Mem13[a0 + 65<i32>:byte] = SLICE(a5_9 | 4<i32>, byte, 0)
	word32 mstatus_26
	word32 s0_28
	word32 s1_51
	word32 s4_52
	word32 mstatus_58
	word32 s5_62
	word32 a1_208
	word32 a3_209
	word32 a4_210
	word32 a5_211
	word32 s2_212
	word32 s3_213
	word32 s6_214
	word32 s7_215
	word32 ra_59 = netif_issue_reports(dhcp_network_changed(ra, a0, s1, a5_9 | 4<i32>, s4, s5, mstatus, dwArg04, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out s0_28, out mstatus_26), s0_28, s0_28, 3<32>, mstatus_26, dwLoc08, dwArg00, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s1_51, out a1_208, out a3_209, out a4_210, out a5_211, out s2_212, out s3_213, out s4_52, out s5_62, out s6_214, out s7_215, out mstatus_58)
	word32 t1_71 = Mem13[s0_28 + 32<i32>:int32]
	branch t1_71 == 0<32> l2303E35E
l2303E35E:
	return
l2303E354:
	word32 a5_85
	word32 a4_86
	word32 a1_87
	word32 t1_88
	word32 a3_94
	word32 a6_95
	word32 a7_96
	word32 s2_97
	word32 s3_98
	word32 s6_99
	word32 s8_100
	word32 t0_101
	word32 t3_102
	word32 t4_103
	word32 t5_104
	word32 t6_105
	word32 tp_106
	word32 s7_107
	word32 s9_108
	call t1_71 (retsize: 0;)
		uses: a0:s0_28,a1:a1_87,a2:dwArg10,a3:a3_94,a4:a4_86,a5:a5_85,a6:a6_95,a7:a7_96,mstatus:mstatus_58,ra:ra_59,s0:s0,s1:s1_51,s2:s2_97,s3:s3_98,s4:s4_52,s5:s5_62,s6:s6_99,s7:s7_107,s8:s8_100,s9:s9_108,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0048:dwArg48,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +0078:dwArg78,Stack +0084:dwArg84,Stack +0088:dwArg88,Stack +0098:dwArg98,Stack +00A0:dwArgA0,Stack +00A4:dwArgA4,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0118:dwArg0118,Stack +0178:dwArg0178,Stack +FFFFFFF8:dwLoc08,t0:t0_101,t1:t1_88,t3:t3_102,t4:t4_103,t5:t5_104,t6:t6_105,tp:tp_106
		defs: a1:a1_87,a3:a3_94,a4:a4_86,a5:a5_85,a6:a6_95,a7:a7_96,s2:s2_97,s3:s3_98,s6:s6_99,s7:s7_107,s8:s8_100,s9:s9_108,t0:t0_101,t1:t1_88,t3:t3_102,t4:t4_103,t5:t5_104,t6:t6_105,tp:tp_106
	return
netif_set_link_up_exit:


void netif_set_link_down(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 t1
// Preserved: sp
netif_set_link_down_entry:
l2303E368:
	branch a0 == 0<32> l2303E384
l2303E36A:
	word32 a4_5 = CONVERT(Mem0[a0 + 65<i32>:byte], byte, word32)
	branch (a4_5 & 4<i32>) == 0<32> l2303E384
l2303E374:
	word32 t1_7 = Mem0[a0 + 32<i32>:int32]
	Mem9[a0 + 65<i32>:byte] = SLICE(a4_5 & 0xFFFFFFFB<32>, byte, 0)
	branch t1_7 == 0<32> l2303E384
l2303E384:
	return
l2303E382:
	word32 a4_12
	word32 a3_13
	word32 t1_14
	call t1_7 (retsize: 0;)
		uses: a0:a0,a3:a3_13,a4:a4_12,t1:t1_14
		defs: a3:a3_13,a4:a4_12,t1:t1_14
	return
netif_set_link_down_exit:


word32 netif_get_by_index(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_output_control_segment
//      tcp_output
//      udp_sendto
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
netif_get_by_index_entry:
l2303E386:
	word32 a5_14 = 0<32>
	branch a0 == 0<32> l2303E394
l2303E38A:
	a5_14 = Mem0[0x4201A660<32>:int32]
l2303E392:
	branch a5_14 != 0<32> l2303E398
l2303E398:
	a4 = CONVERT(Mem0[a5_14 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
	branch a4 == a0 l2303E394
l2303E3A6:
	a5_14 = Mem0[a5_14:word32]
l2303E394:
	a4Out = a4
	a5Out = a5_14
	return a5_14
netif_get_by_index_exit:


void pbuf_skip_const(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_take_at
//      pbuf_try_get_at
//      pbuf_put_at
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 a1 a5 sp
pbuf_skip_const_entry:
l2303E3AA:
	branch a0 == 0<32> l2303E3B4
l2303E3AC:
	word32 a5_5 = CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32)
	branch a1 >=u a5_5 l2303E3BC
l2303E3BC:
	a1 = CONVERT(SLICE(a1 - a5_5, word16, 0), word16, word32)
	a0 = Mem0[a0:word32]
l2303E3B4:
	branch a2 == 0<32> l2303E3BA
l2303E3B6:
	Mem15[a2:word16] = SLICE(a1, word16, 0)
l2303E3BA:
	return
pbuf_skip_const_exit:


void pbuf_free_ooseq_callback(word32 ra, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: sp
pbuf_free_ooseq_callback_entry:
l2303E3C6:
	word32 a4_64
	sys_arch_protect(a4, mstatus, out a4_64)
	Mem13[0x4201A664<32>:byte] = 0<8>
	word32 a4_16
	word32 a5_65
	word32 a3_15 = sys_arch_unprotect(a3, mstatus, out a4_16, out a5_65)
	word32 a0_19 = Mem13[0x4201A77C<32>:int32]
l2303E3E2:
	branch a0_19 != 0<32> l2303E3EA
l2303E3EA:
	word32 a0_23 = Mem13[0x4201A074<32>:word32]
	branch false l2303E3F6
l2303E3F6:
	a0_19 = Mem13[a0_23 + 12<i32>:word32]
l2303E3EE:
l2303E3F2_thunk_tcp_free_ooseq:
	word32 a0_66
	word32 a2_67
	word32 a3_68
	word32 a4_69
	tcp_free_ooseq(ra, a3_15, a4_16, 0x4201A000<32>, s4, mstatus, dwArgE8, out a0_66, out a2_67, out a3_68, out a4_69)
	return
l2303E3E4:
	return
pbuf_free_ooseq_callback_exit:


word32 pbuf_add_header_impl(word32 a0, word32 a1, word32 a2, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_add_header
//      pbuf_header
//      pbuf_header_force
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_add_header_impl_entry:
l2303E3FA:
	word32 a0_17
	branch a0 == 0<32> l2303E458
l2303E458:
	a0_17 = 1<32>
l2303E3FE:
	a4 = 0x10000000<32>
	a0_17 = 1<32>
	branch a1 >=u 0x10000000<32> l2303E45A
l2303E406:
	a0_17 = 0<32>
	branch a1 == 0<32> l2303E45A
l2303E40A:
	a3 = CONVERT(SLICE(a1, word16, 0), word16, word32)
	a4 = CONVERT(SLICE(CONVERT(Mem0[a0 + 8<i32>:uint16], uint16, word32) + a3, word16, 0), word16, word32)
	a0_17 = 1<32>
	branch a4 <u a3 l2303E45A
l2303E420:
	word32 a1_22
	word32 a5_21
	branch CONVERT(Mem0[a0 + 12<i32>:int8], int8, int32) >= 0<32> l2303E43A
l2303E43A:
	a0_17 = 1<32>
	branch a2 == 0<32> l2303E45A
l2303E45A:
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a0
	return a0_17
l2303E43E:
	a5_21 = Mem0[a2 + 4<i32>:word32]
	a1_22 = a2 - a1
l2303E428:
	a5_21 = Mem0[a2 + 4<i32>:word32]
	a1_22 = a2 - a1
	branch a1_22 >=u a5_21 + 16<i32> l2303E444
l2303E444:
	word32 a2_29 = CONVERT(Mem0[a5_21 + 10<i32>:uint16], uint16, word32)
	Mem31[a1_22 + 4<i32>:word32] = a5_21
	Mem33[a5_21 + 8<i32>:word16] = SLICE(a4, word16, 0)
	word32 a3_35 = a3 + a2_29
	Mem36[a5_21 + 10<i32>:word16] = SLICE(a3_35, word16, 0)
	a2Out = a2_29
	a3Out = a3_35
	a4Out = a4
	a5Out = a5_21
	return 0<32>
l2303E438:
	a2Out = a5_21 + 16<i32>
	a3Out = a3
	a4Out = a4
	a5Out = a5_21
	return 1<32>
pbuf_add_header_impl_exit:


word32 pbuf_alloc_reference(word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, byte bArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_alloc
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0044:[0..7]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s8
// Trashed: a0 a2 a3 a4 a5 s0 s1 s8 t3 tp
// Preserved: sp
pbuf_alloc_reference_entry:
l2303E45C:
	word32 s0_27 = a0
	word32 a0_19
	word32 a3_22
	word32 a4_23
	word32 a2_21
	word32 a5_20
	word32 s1_24 = memp_malloc(s1, 0xD<32>, a3, a4, mstatus, out a0_19, out a2_21, out a3_22, out a4_23, out a5_20)
	branch a0_19 == 0<32> l2303E490
l2303E470:
	Mem29[a0_19:word32] = 0<32>
	Mem30[a1 + 4<i32>:word32] = a0_19
	Mem31[a0_19 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem32[a0_19 + 10<i32>:word16] = SLICE(a1, word16, 0)
	Mem33[a0_19 + 12<i32>:byte] = SLICE(dwArg44, byte, 0)
	Mem34[a0_19 + 13<i32>:byte] = 0<8>
	Mem35[a0_19 + 14<i32>:word16] = 1<16>
	a2_21 = dwArg44
	s0_27 = a1
	a5_20 = 1<32>
l2303E490:
	s1Out = s1_24
	a0Out = a0_19
	a2Out = a2_21
	a3Out = a3_22
	a4Out = a4_23
	a5Out = a5_20
	s8Out = a2
	return s0_27
pbuf_alloc_reference_exit:


word32 pbuf_alloced_custom(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_stack_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..7] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5 a6
// Preserved: sp
pbuf_alloced_custom_entry:
l2303E498:
	word32 a0_5 = a0 + 3<32> & 0xFFFFFFFC<32>
	branch a5 <u a1 + a0_5 l2303E4CA
l2303E4CA:
	a4Out = a4
	a5Out = a5
	return 0<32>
l2303E4A4:
	branch a4 == 0<32> l2303E4A8
l2303E4A6:
	a4 = a4 + a0_5
l2303E4A8:
	Mem15[a3 + 13<i32>:byte] = 2<8>
	Mem18[a3:word32] = 0<32>
	Mem20[a4 + 4<i32>:word32] = a3
	Mem22[a3 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem23[a3 + 10<i32>:word16] = SLICE(a1, word16, 0)
	Mem26[a3 + 12<i32>:byte] = SLICE(a2, byte, 0)
	Mem27[a3 + 14<i32>:word16] = 1<16>
	a4Out = a4
	a5Out = 1<32>
	return a3
pbuf_alloced_custom_exit:


word32 pbuf_add_header(word32 a0, word32 a1, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_output_if_opt
//      tcp_create_segment
//      udp_sendto_if
//      ethernet_output
//      icmp_input
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_add_header_entry:
l2303E4CE:
l2303E4D0_thunk_pbuf_add_header_impl:
	word32 a5_7
	word32 a4_8
	word32 a3_9
	word32 a2_11
	word32 a0_6 = pbuf_add_header_impl(a0, a1, 0<32>, out a2_11, out a3_9, out a4_8, out a5_7)
	a2Out = a2_11
	a3Out = a3_9
	a4Out = a4_8
	a5Out = a5_7
	return a0_6
pbuf_add_header_exit:


word32 pbuf_remove_header(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
//      pbuf_header
//      pbuf_header_force
//      tcp_receive
//      tcp_input
//      udp_input
//      ethernet_input
//      icmp_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
pbuf_remove_header_entry:
l2303E4D4:
	word32 a0_14
	branch a0 == 0<32> l2303E50E
l2303E50E:
	a0_14 = 1<32>
l2303E4D8:
	a4 = 0x10000000<32>
	a0_14 = 1<32>
	branch a1 >=u 0x10000000<32> l2303E510
l2303E4E0:
	a0_14 = 0<32>
	branch a1 == 0<32> l2303E510
l2303E4E4:
	a4 = CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32)
	a3 = CONVERT(SLICE(a1, word16, 0), word16, word32)
	a0_14 = 1<32>
	branch a4 <u a3 l2303E510
l2303E510:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a0
	return a0_14
l2303E4F4:
	word32 a5_17 = Mem0[a2 + 4<i32>:word32]
	Mem18[a5_17 + 10<i32>:word16] = SLICE(a4 - a3, word16, 0)
	word32 a4_19 = CONVERT(Mem18[a5_17 + 8<i32>:uint16], uint16, word32)
	word32 a1_20 = a1 + a2
	Mem21[a1_20 + 4<i32>:word32] = a5_17
	word32 a4_22 = a4_19 - a3
	Mem23[a5_17 + 8<i32>:word16] = SLICE(a4_22, word16, 0)
	a1Out = a1_20
	a3Out = a3
	a4Out = a4_22
	a5Out = a5_17
	return 0<32>
pbuf_remove_header_exit:


word32 pbuf_header(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_output
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_header_entry:
l2303E512:
	branch a1 >= 0<32> l2303E51E
l2303E51E:
l2303E520_thunk_pbuf_add_header_impl:
	word32 a5_7
	word32 a3_9
	word32 a2_30
	word32 a4_31
	word32 a0_6 = pbuf_add_header_impl(a0, a1, 0<32>, out a2_30, out a3_9, out a4_31, out a5_7)
	a3Out = a3_9
	a5Out = a5_7
	return a0_6
l2303E516:
	word32 a1_12 = 0<32> - a1
l2303E51A_thunk_pbuf_remove_header:
	word32 a5_15
	word32 a3_17
	word32 a1_28
	word32 a4_29
	word32 a0_14 = pbuf_remove_header(a0, a1_12, a2, out a1_28, out a3_17, out a4_29, out a5_15)
	a3Out = a3_17
	a5Out = a5_15
	return a0_14
pbuf_header_exit:


word32 pbuf_header_force(word32 a0, word32 a1, word32 a2, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
//      udp_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3 a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_header_force_entry:
l2303E524:
	branch a1 >= 0<32> l2303E530
l2303E530:
l2303E532_thunk_pbuf_add_header_impl:
	word32 a4_8
	word32 a3_9
	word32 a2_29
	word32 a5_30
	pbuf_add_header_impl(a0, a1, 1<32>, out a2_29, out a3_9, out a4_8, out a5_30)
	a4Out = a4_8
	return a3_9
l2303E528:
	word32 a1_12 = 0<32> - a1
l2303E52C_thunk_pbuf_remove_header:
	word32 a4_16
	word32 a3_17
	word32 a1_27
	word32 a5_28
	pbuf_remove_header(a0, a1_12, a2, out a1_27, out a3_17, out a4_16, out a5_28)
	a4Out = a4_16
	return a3_17
pbuf_header_force_exit:


word32 pbuf_free(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_txdatacfm
//      get_dns_request
//      dns_check_entry
//      dns_recv
//      dhcp_option_trailer
//      dhcp_select
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_coarse_tmr
//      dhcp_stop
//      etharp_free_entry
//      etharp_input
//      etharp_request
//      etharp_query
//      igmp_send
//      igmp_input
//      ip4_input
//      pbuf_alloc
//      tcp_seg_free
//      tcp_pcb_purge
//      tcp_recv_null
//      tcp_input
//      tcp_create_segment
//      tcp_output_control_segment
//      tcp_split_unsent_seg
//      udp_input
//      udp_sendto_if
//      ethernet_input
//      icmp_input
//      icmp_dest_unreach
//      dhcp_server_recv
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pbuf_free_entry:
l2303E536:
	word32 sp_124 = fp + -48<i32>
	word32 s0_115 = 0<32>
	branch a0 == 0<32> l2303E586
l2303E546:
	a1 = a0
	s0_115 = 0<32>
	s2 = 2<32>
	s3 = 1<32>
l2303E54E:
	Mem22[sp_124 + 132<i32>:word32] = a1
	word32 a4_258
	sys_arch_protect(a4, mstatus, out a4_258)
	word32 s1_30 = CONVERT(Mem22[a1 + 14<i32>:byte], byte, word32)
	s1 = s1_30 + 0xFFFFFFFF<32> & 255<i32>
	Mem33[a1 + 14<i32>:byte] = SLICE(s1, byte, 0)
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5)
	branch s1 != 0<32> l2303E586
l2303E56A:
	word32 s8_109
	word32 s6_108
	word32 s5_107
	word32 a7_106
	word32 s4_104
	word32 a3_103
	word32 a4_102
	word32 mstatus_101
	word32 a5_98
	word32 a5_39 = CONVERT(Mem33[a1 + 13<i32>:byte], byte, word32)
	word32 a1_40 = Mem33[s1_30 + 0xFFFFFFFF<32> & 255<i32>:word32]
	branch (a5_39 & 2<32>) == 0<32> l2303E596
l2303E596:
	word32 a5_42 = CONVERT(Mem33[a1_40 + 12<i32>:byte], byte, word32)
	word32 a0_43 = 0xE<32>
	a5 = a5_42 & 0xF<32>
	branch (a5_42 & 0xF<32>) == s2 l2303E5A8
l2303E5A2:
	branch (a5_42 & 0xF<32>) != s3 l2303E5AE
l2303E5AE:
	branch (a5_42 & 0xF<32>) != 0<32> l2303E57C
l2303E5B0:
	s0_115 = mem_free(a1_40, a3, a4, s2, s3, s4, mstatus, Mem33[sp_124 + 4<i32>:word32], Mem33[sp_124 + 8<i32>:word32], Mem33[sp_124 + 36<i32>:word32], Mem33[sp_124 + 132<i32>:word32], Mem33[sp_124 + 164<i32>:word32], Mem33[sp_124 + 216<i32>:word32], Mem33[sp_124 + 248<i32>:word32], Mem33[sp_124 + 280<i32>:word32], Mem33[sp_124 + 312<i32>:word32], Mem33[sp_124 + 344<i32>:word32], Mem33[sp_124 + 376<i32>:word32], Mem33[sp_124 + 408<i32>:word32], out s1, out a3, out a4, out a5, out a7, out s2, out s3, out s4, out s5, out s6, out s8)
l2303E5A6:
	a0_43 = 0xD<32>
l2303E5A8:
	word32 a2_260
	word32 a0_259
	s1 = memp_free(a0_43, a1_40, a3, a4, mstatus, out a0_259, out a2_260, out a3, out a4, out a5)
l2303E576:
	word32 a1_85 = Mem33[(a5_39 & 2<32>) + 16<i32>:word32]
	word32 a6_105
	word32 t0_110
	word32 t1_111
	word32 t4_112
	word32 t5_113
	word32 t6_114
	call a5_39 & 2<32> (retsize: 0;)
		uses: a0:a1_85,a1:a1_85,a3:a3_103,a4:a4_102,a5:a5_98,a6:a6_105,a7:a7_106,mstatus:mstatus_101,ra:ra_88,s0:s0_87,s1:s1_30 + 0xFFFFFFFF<32> & 255<i32>,s2:s2_45,s3:s3_46,s4:s4_104,s5:s5_107,s6:s6_108,s8:s8_109,t0:t0_110,t1:t1_111,t4:t4_112,t5:t5_113,t6:t6_114
		defs: a3:a3_103,a4:a4_102,a5:a5_98,a6:a6_105,a7:a7_106,mstatus:mstatus_101,ra:ra_91,s0:s0_90,s1:s1_92,s2:s2_93,s3:s3_94,s4:s4_104,s5:s5_107,s6:s6_108,s8:s8_109,sp:sp_89,t0:t0_110,t1:t1_111,t4:t4_112,t5:t5_113,t6:t6_114
	a5 = a5_98
	mstatus = mstatus_101
	a4 = a4_102
	a3 = a3_103
	s4 = s4_104
	a7 = a7_106
	s5 = s5_107
	s6 = s6_108
	s8 = s8_109
l2303E57C:
	s0_115 = s0_115 + 1<32> & 255<i32>
	a1 = s1
	branch s1 != 0<32> l2303E54E
l2303E586:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a0Out = s0_115
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
pbuf_free_exit:


word32 pbuf_alloc(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg44, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
//      dhcp_create_msg
//      etharp_request
//      igmp_send
//      pbuf_clone
//      tcp_output_alloc_header_common.constprop.6
//      tcp_split_unsent_seg
//      tcp_send_fin
//      udp_sendto_if
//      icmp_input
//      icmp_dest_unreach
//      dhcp_server_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pbuf_alloc_entry:
l2303E5B8:
	branch a2 == 65<i32> l2303E712
l2303E712:
l2303E5C0:
	word32 a5_101
	word32 s1_103
	branch a2 >u 65<i32> l2303E5EC
l2303E5EC:
	word32 s0_22 = CONVERT(SLICE(a0, word16, 0), word16, word32)
	branch a2 == 386<i32> l2303E666
l2303E666:
	s3 = 0<32>
	s1_103 = 0<32>
	s4 = 760<i32>
	s2 = 0x10000082<32>
l2303E674:
	word32 a0_36
	word32 a4_40
	word32 a5_490
	word32 a2_489
	s1_103 = memp_malloc(s1_103, 0xE<32>, a3, a4, mstatus, out a0_36, out a2_489, out a3, out a4_40, out a5_490)
	branch a0_36 != 0<32> l2303E6C6
l2303E6C6:
	word32 a5_48 = 760<i32> - (s0_22 + 3<i32> & 0xFFFFFFFC<32>)
	a4 = a5_48
	branch a1 >=u CONVERT(SLICE(a5_48, word16, 0), word16, word32) l2303E6DC
l2303E6DA:
	a4 = a1
l2303E6DC:
	Mem60[a0_36:word32] = 0<32>
	Mem61[(s0_22 + a0_36 + 0x13<32> & 0xFFFFFFFC<32>) + 4<i32>:word32] = a0_36
	Mem63[a0_36 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem64[a0_36 + 10<i32>:word16] = SLICE(a4, word16, 0)
	Mem67[a0_36 + 12<i32>:word32] = 0x10000082<32>
	word32 a5_59 = a4 << 0x10<u32>
	a5_101 = a5_59 >>u 16<i32>
	branch s1_103 == 0<32> l2303E70E
l2303E70E:
	s1_103 = a0_36
l2303E6FC:
	Mem73[s3:word32] = a0_36
l2303E700:
	a1 = CONVERT(SLICE(a1 - (a5_59 >>u 16<i32>), word16, 0), word16, word32)
	s0_22 = 0<32>
	s3 = a0_36
	branch a1 != 0<32> l2303E674
l2303E70C:
l2303E680:
	word32 a4_482
	sys_arch_protect(a4_40, mstatus, out a4_482)
	word32 s2_87 = CONVERT(Mem31[0x4201A664<32>:byte], byte, word32)
	Mem89[0x4201A664<32>:byte] = 1<8>
	s2 = s2_87 & 255<i32>
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5_101)
	branch (s2_87 & 255<i32>) != 0<32> l2303E6BA
l2303E69E:
	word32 a0_97
	word32 s0_111 = tcpip_try_callback(0x2303E3C6<32>, 0<32>, a3, a4, mstatus, dwArgA8, dwArgE8, dwArg0128, out s1_103, out a0_97, out a1, out a3, out a4, out a5_101, out a7, out s2, out s3, out s4, out s5, out s6)
	branch a0_97 == 0<32> l2303E6BA
l2303E6AE:
	word32 a4_483
	sys_arch_protect(a4, mstatus, out a4_483)
	Mem124[s0_111 + 1636<i32>:byte] = 0<8>
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5_101)
l2303E6BA:
	branch s1_103 == 0<32> l2303E5D8
l2303E6BE:
	word32 a0_486
	word32 a2_487
	word32 s8_488
	word32 s1_485
	word32 s0_484
	ra = pbuf_free(ra, s1_103, a3, a4, s4, mstatus, dwArgF8, out s0_484, out s1_485, out a0_486, out a1, out a2_487, out a3, out a4, out a5_101, out a7, out s2, out s3, out s4, out s5, out s6, out s8_488, out mstatus)
l2303E5FA:
	a5_101 = 640<i32>
	branch a2 != 640<i32> l2303E5D8
l2303E602:
	a5_101 = a1 + 3<i32> & 0xFFFFFFFC<32>
	word32 s0_173 = CONVERT(SLICE((s0_22 + 3<32> & 0xFFFFFFFC<32>) + a5_101, word16, 0), word16, word32)
	s2 = a0
	word32 a0_176 = s0_173 + 16<i32> << 16<i32>
	branch s0_173 <u a5_101 l2303E5D8
l2303E622:
	branch a0_176 >>u 16<i32> <u a5_101 l2303E5D8
l2303E626:
	word32 s8_481
	word32 a0_182 = mem_malloc(ra, s0_173, a0_176 >>u 16<i32>, a3, a4, a0, mstatus, s0, dwArg04, ra, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0158, out a1, out a3, out a4, out a5_101, out a7, out s2, out s3, out s4, out s5, out s6, out s8_481)
	s1_103 = a0_182
	branch a0_182 == 0<32> l2303E5DA
l2303E62E:
	Mem211[a0_182:word32] = 0<32>
	s2 = s2 + a0_182 + 0x13<32> & -4<i32>
	Mem212[a0_182 + 4<i32>:word32] = s2
	Mem213[a0_182 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem214[a0_182 + 10<i32>:word16] = SLICE(a1, word16, 0)
	Mem215[0x1000008C<32>:word32] = a0_182
	a5_101 = 0x10000080<32>
l2303E5D2:
	a5_101 = 1<32>
	branch a2 == 1<32> l2303E652
l2303E652:
	0<32> = dwArg0128
l2303E662:
l2303E662_thunk_pbuf_alloc_reference:
	word32 a0_232
	word32 a2_233
	word32 a3_234
	word32 a4_235
	word32 a5_236
	word32 s1_238
	word32 s8_239
	s0Out = pbuf_alloc_reference(s1, a1, a3, a4, mstatus, dwArg44, out s1_238, out a0_232, out a2_233, out a3_234, out a4_235, out a5_236, out s8_239)
	s1Out = s1_238
	a0Out = a0_232
	a1Out = a1
	a2Out = a2_233
	a3Out = a3_234
	a4Out = a4_235
	a5Out = a5_236
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8_239
	mstatusOut = mstatus
	return ra
l2303E5D8:
	s1_103 = 0<32>
l2303E5DA:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_103
	a0Out = s1_103
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	a5Out = a5_101
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = dwArg58
	mstatusOut = mstatus
	return ra
pbuf_alloc_exit:


word32 pbuf_realloc(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0118, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dhcp_option_trailer
//      ip4_input
//      tcp_oos_insert_segment
//      tcp_receive
//      tcp_split_unsent_seg
//      dhcp_server_recv
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0118:[0..31]
// LiveOut: a2 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
pbuf_realloc_entry:
l2303E716:
	word32 a5_5 = CONVERT(Mem0[a0 + 8<i32>:uint16], uint16, word32)
	branch a1 >=u a5_5 l2303E78E
l2303E78E:
	s1Out = s1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
l2303E71E:
	word32 s0_14 = a0
	word32 s1_142 = a1
	word32 a5_16 = a1 - a5_5
	a4_122 = a4
l2303E72E:
	word32 a4_122
	word32 a1_19 = CONVERT(Mem18[s0_14 + 10<i32>:uint16], uint16, word32)
	branch a1_19 <u s1_142 l2303E77A
l2303E77A:
	a4_122 = CONVERT(Mem18[s0_14 + 8<i32>:uint16], uint16, word32) + a5_16
	Mem26[s0_14 + 8<i32>:word16] = SLICE(a4_122, word16, 0)
	s1_142 = CONVERT(SLICE(s1_142 - a1_19, word16, 0), word16, word32)
	s0_14 = Mem26[s0_14:word32]
l2303E736:
	word32 a5_29 = CONVERT(Mem18[s0_14 + 12<i32>:byte], byte, word32)
	word32 a5_124 = a5_29 & 0xF<32>
	branch (a5_29 & 0xF<32>) != 0<32> l2303E75C
l2303E73E:
	branch a1_19 == s1_142 l2303E75C
l2303E742:
	word32 a5_31 = CONVERT(Mem18[s0_14 + 13<i32>:byte], byte, word32)
	a5_124 = a5_31 & 2<32>
	branch (a5_31 & 2<32>) != 0<32> l2303E75C
l2303E74A:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	a0 = Mem18[a1_19 + 4<i32>:word32]
	word32 stackArg4 = <invalid>
	word32 stackArg36 = <invalid>
	word32 stackArg132 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg280 = <invalid>
	word32 stackArg312 = <invalid>
	word32 stackArg376 = <invalid>
	mem_trim(a0, a1, a3, a4, s2, s3, s4, mstatus, stackArg4, stackArg36, stackArg132, stackArg168, stackArg216, stackArg248, stackArg280, stackArg312, stackArg376)
l2303E75C:
	word32 s0_43 = Mem18[a0:word32]
	Mem45[s0_43 + 10<i32>:word16] = SLICE(s1_142, word16, 0)
	Mem46[s0_43 + 8<i32>:word16] = SLICE(s1_142, word16, 0)
	branch a0 == 0<32> l2303E76C
l2303E768:
	word32 a7_227
	word32 a1_225
	word32 a2_226
	word32 a0_224
	ra = pbuf_free(ra, a0, a3, a4_122, s4, mstatus, dwArg0118, out s0_43, out s1_142, out a0_224, out a1_225, out a2_226, out a3, out a4_122, out a5_124, out a7_227, out s2, out s3, out s4, out s5, out s6, out s8, out mstatus)
l2303E76C:
	Mem89[s0_43:word32] = 0<32>
	s1Out = s1_142
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_122
	a5Out = a5_124
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
pbuf_realloc_exit:


word32 pbuf_clen(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_free_acked_segments.isra.3
//      tcp_split_unsent_seg
//      tcp_send_fin
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
pbuf_clen_entry:
l2303E790:
	word32 a5_3 = 0<32>
l2303E792:
	branch a0 != 0<32> l2303E798
l2303E798:
	a5_3 = CONVERT(SLICE(a5_3 + 1<32>, word16, 0), word16, word32)
	a0 = Mem0[a0:word32]
l2303E794:
	return a5_3
pbuf_clen_exit:


word32 pbuf_ref(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_output
//      etharp_query
//      pbuf_chain
//      tcp_seg_copy
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
pbuf_ref_entry:
l2303E7A2:
	branch a0 == 0<32> l2303E7C4
l2303E7C4:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return a0
l2303E7A4:
	word32 a4_41
	word32 a0_12 = sys_arch_protect(a4, mstatus, out a4_41)
	Mem18[a0 + 14<i32>:byte] = SLICE(CONVERT(Mem8[a0 + 14<i32>:byte], byte, word32) + 1<32>, byte, 0)
l2303E7C0_thunk_sys_arch_unprotect:
	word32 a4_24
	word32 a5_25
	a3Out = sys_arch_unprotect(a3, mstatus, out a4_24, out a5_25)
	a4Out = a4_24
	a5Out = a5_25
	return a0_12
pbuf_ref_exit:


void pbuf_cat(word32 a0, word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_stack_input
//      pbuf_chain
//      tcp_receive
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 a3 a5 sp
pbuf_cat_entry:
l2303E7C6:
	branch a0 == 0<32> l2303E7E6
l2303E7C8:
	branch a1 != 0<32> l2303E7CE
l2303E7CE:
	word32 a0_11 = Mem6[a4:word32]
	Mem15[a0_11 + 8<i32>:word16] = SLICE(CONVERT(CONVERT(Mem6[a0 + 8<i32>:uint16] + Mem6[a1 + 8<i32>:uint16], uint16, uint16), uint16, word32), word16, 0)
	branch a4 != 0<32> l2303E7CC
l2303E7CC:
	a0 = a4
l2303E7E4:
	Mem17[a1:word32] = a0_11
l2303E7E6:
	return
l2303E7CA:
	return
pbuf_cat_exit:


void pbuf_chain(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      udp_sendto_if
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
pbuf_chain_entry:
l2303E7E8:
	pbuf_cat(a0, a1, a4)
l2303E7FC_thunk_pbuf_ref:
	word32 a3_26
	word32 a4_27
	word32 a5_28
	pbuf_ref(a1, a3, a4, mstatus, out a3_26, out a4_27, out a5_28)
	return
pbuf_chain_exit:


word32 pbuf_copy(word32 a0, word32 a1, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_clone
//      icmp_input
//      dhcp_server_recv
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
pbuf_copy_entry:
l2303E800:
	branch a0 == 0<32> l2303E8AA
l2303E8AA:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s0
l2303E802:
	word32 a0_192
	word32 s1_111
	word32 s0_19 = a1
	s1_111 = s1
	branch a1 == 0<32> l2303E86A
l2303E814:
	a4 = CONVERT(Mem17[a0 + 8<i32>:uint16], uint16, word32)
	s1_111 = a0
	branch a4 <u CONVERT(Mem17[a1 + 8<i32>:uint16], uint16, word32) l2303E86A
l2303E822:
	word32 s4_118 = 0<32>
	s3 = 0<32>
l2303E826:
	s2 = CONVERT(Mem17[s1_111 + 10<i32>:uint16], uint16, word32) - s3
	word32 a5_33 = CONVERT(Mem17[s0_19 + 10<i32>:uint16], uint16, word32) - s4_118
	branch a5_33 >=u s2 l2303E83C
l2303E83A:
	s2 = a5_33
l2303E83C:
	s0_19 = Mem17[a1 + 4<i32>:word32]
	s1_111 = Mem17[a0 + 4<i32>:word32]
	a0 = a0 + s3
	word32 a7_311
	word32 a6_310
	word32 a5_309
	word32 a2_307
	word32 a4_308
	a1 = memcpy(a0, a1 + s4_118, s2, out a2_307, out a3, out a4_308, out a5_309, out a6_310, out a7_311)
	a4 = CONVERT(Mem17[s0_19 + 10<i32>:uint16], uint16, word32)
	s4_118 = s4_118 + s2
	s3 = s3 + s2
	word32 a5_64 = CONVERT(Mem17[s1_111 + 10<i32>:uint16], uint16, word32)
	branch s4_118 <u a4 l2303E85E
l2303E85A:
	s0_19 = Mem17[s0_19:word32]
	s4_118 = 0<32>
l2303E85E:
	branch s3 != a5_64 l2303E87E
l2303E862:
	s1_111 = Mem17[s1_111:word32]
	branch s1_111 != 0<32> l2303E87C
l2303E87C:
	s3 = 0<32>
l2303E87E:
	branch s0_19 == 0<32> l2303E890
l2303E880:
	a4 = CONVERT(Mem17[s0_19 + 10<i32>:uint16], uint16, word32)
	word32 a5_77 = CONVERT(Mem17[s0_19 + 8<i32>:uint16], uint16, word32)
	branch a4 != a5_77 l2303E890
l2303E88C:
	s0_19 = Mem17[a5_77:word32]
	branch a5_77 != 0<32> l2303E8A6
l2303E890:
	a4 = CONVERT(Mem17[s1_111 + 10<i32>:uint16], uint16, word32)
	word32 a5_83 = CONVERT(Mem17[s1_111 + 8<i32>:uint16], uint16, word32)
	branch a4 != a5_83 l2303E8A0
l2303E89C:
	s1_111 = Mem17[a5_83:word32]
	branch a5_83 != 0<32> l2303E8A6
l2303E8A6:
	a0_192 = 0xFFFFFFFA<32>
l2303E8A0:
	branch s0_19 != 0<32> l2303E826
l2303E8A2:
	a0_192 = 0<32>
l2303E866:
	a0_192 = 0<32>
	branch s0_19 == 0<32> l2303E86C
l2303E86A:
	a0_192 = 0xFFFFFFF0<32>
l2303E86C:
	s1Out = s1_111
	a0Out = a0_192
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	return s1
pbuf_copy_exit:


word32 pbuf_copy_partial(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_recv
//      dhcp_recv
//      tcp_split_unsent_seg
//      tcp_zero_window_probe
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
pbuf_copy_partial_entry:
l2303E8AE:
	word32 s1_158
	word32 s0_101 = 0<32>
	s1_158 = s1
	branch a0 == 0<32> l2303E8D0
l2303E8C0:
	s0_101 = 0<32>
	s1_158 = s1
	branch a1 == 0<32> l2303E8D0
l2303E8C6:
	s2 = a0
	s1_158 = a2
l2303E8CA:
	branch s1_158 == 0<32> l2303E8D0
l2303E8CC:
	branch s2 != 0<32> l2303E8E2
l2303E8E2:
	word32 a1_27 = CONVERT(Mem15[s2 + 10<i32>:uint16], uint16, word32)
	branch a3 == 0<32> l2303E8F8
l2303E8E8:
	branch a3 <u a1_27 l2303E8F8
l2303E8F8:
	word32 a1_33 = CONVERT(SLICE(a1_27 - a3, word16, 0), word16, word32)
	word32 s3_34 = a1_33
	branch s1_158 >=u a1_33 l2303E906
l2303E904:
	s3_34 = s1_158
l2303E906:
	word32 s3_43 = s3_34 << 16<i32>
	word32 a2_193
	word32 a3_194
	word32 a6_195
	word32 a7_196
	memcpy(a1 + s0_101, Mem15[s2 + 4<i32>:int32] + a3, s3_43 >>u 0x10<u32>, out a2_193, out a3_194, out a4, out a5, out a6_195, out a7_196)
	s3 = s3_43 >>u 0x10<u32>
	s0_101 = CONVERT(SLICE(s0_101 + (s3_43 >>u 0x10<u32>), word16, 0), word16, word32)
	s1_158 = CONVERT(SLICE(s1_158 - (s3_43 >>u 0x10<u32>), word16, 0), word16, word32)
	a3 = 0<32>
l2303E8EC:
	a3 = CONVERT(SLICE(a3 - a1_27, word16, 0), word16, word32)
l2303E8F2:
	s2 = Mem15[s2:int32]
l2303E8D0:
	s1Out = s1_158
	a0Out = s0_101
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = s4
	return s1
pbuf_copy_partial_exit:


word32 pbuf_take(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
//      pbuf_take_at
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3 a4 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
pbuf_take_entry:
l2303E92E:
	branch a0 == 0<32> l2303E988
l2303E988:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return s0
l2303E930:
	word32 s1_126 = a0
	branch a1 == 0<32> l2303E954
l2303E946:
	word32 s0_24 = a2
	s3 = 0<32>
	branch CONVERT(Mem17[a0 + 8<i32>:uint16], uint16, word32) >=u a2 l2303E982
l2303E982:
	branch s0_24 != 0<32> l2303E964
l2303E964:
	s2 = CONVERT(Mem17[s1_126 + 10<i32>:uint16], uint16, word32)
	branch s0_24 >=u s2 l2303E96E
l2303E96C:
	s2 = s0_24
l2303E96E:
	word32 s1_35 = Mem17[3<32>:word32]
	word32 a2_165
	word32 a5_166
	word32 a6_167
	word32 a7_168
	memcpy(0xFFFFFFFF<32>, a1 + s3, s2, out a2_165, out a3, out a4, out a5_166, out a6_167, out a7_168)
	s1_126 = Mem17[s1_35:word32]
	s0_24 = s0_24 - s2
	s3 = s3 + s2
l2303E984:
l2303E954:
	s1Out = s1_126
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = s4
	return s1
pbuf_take_exit:


word32 pbuf_take_at(word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArg0128, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 s0 s1 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pbuf_take_at_entry:
l2303E98C:
	pbuf_skip_const(a0, a3, fp + -34<i32>)
	word32 s3_11 = a1
	branch a0 == 0<32> l2303EA00
l2303EA00:
l2303E9A8:
	a4 = CONVERT(wLoc22, uint16, word32)
	a3 = CONVERT(Mem20[a0 + 8<i32>:uint16], uint16, word32)
	s1 = a0
	branch a3 < a4 + a2 l2303E9F2
l2303E9BC:
	word32 s2_29 = a2
	word32 a5_30 = CONVERT(Mem20[a0 + 10<i32>:uint16], uint16, word32) - a4
	branch a5_30 >= a2 l2303E9D0
l2303E9C8:
	s2_29 = CONVERT(SLICE(a5_30, word16, 0), word16, word32)
l2303E9D0:
	s1 = Mem20[3<32>:word32]
	word32 a2_147
	word32 a5_148
	word32 a6_149
	word32 a7_150
	memcpy(a4 + 0xFFFFFFFF<32>, a1, s2_29, out a2_147, out a3, out a4, out a5_148, out a6_149, out a7_150)
	word32 a2_58 = CONVERT(SLICE(a2 - s2_29, word16, 0), word16, word32)
	branch a2_58 == 0<32> l2303E9F2
l2303E9E8:
	word32 s2_151
	pbuf_take(0<32>, a1 + s2_29, a2_58, out s1, out a3, out a4, out s2_151, out s3_11, out s4, out s8)
l2303E9F2:
	0<32> = dwArg0128
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s3Out = s3_11
	s4Out = s4
	s8Out = s8
	return dwArgE4
pbuf_take_at_exit:


word32 pbuf_clone(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_query
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0034:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
pbuf_clone_entry:
l2303EA04:
	word32 a0_19
	word32 mstatus_35
	word32 s5_37
	word32 s6_38
	word32 s0_122
	word32 a1_123
	word32 a2_124
	word32 a5_125
	word32 a7_126
	word32 s8_127
	word32 a4_22
	word32 a3_21
	word32 s1_25
	word32 s2_100
	word32 s3_101
	word32 s4_102
	word32 ra_36 = pbuf_alloc(ra, s0, a2, a0, CONVERT(Mem5[a2 + 8<i32>:uint16], uint16, word32), a1, a3, a4, mstatus, s0, dwArg34, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0148, out s0_122, out s1_25, out a0_19, out a1_123, out a2_124, out a3_21, out a4_22, out a5_125, out a7_126, out s2_100, out s3_101, out s4_102, out s5_37, out s6_38, out s8_127, out mstatus_35)
	word32 s0_44 = a0_19
	branch a0_19 == 0<32> l2303EA22
l2303EA1C:
	word32 a0_128
	s0_44 = pbuf_copy(a0_19, s1_25, out s1_25, out a0_128, out a3_21, out a4_22, out s2_100, out s3_101, out s4_102)
l2303EA22:
	s1Out = s1_25
	a0Out = s0_44
	a3Out = a3_21
	a4Out = a4_22
	s2Out = s2_100
	s3Out = s3_101
	s4Out = s4_102
	s5Out = s5_37
	s6Out = s6_38
	mstatusOut = mstatus_35
	return ra_36
pbuf_clone_exit:


word32 pbuf_try_get_at(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_recv
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5 t3
// Preserved: sp
pbuf_try_get_at_entry:
l2303EA2E:
	pbuf_skip_const(a0, a1, fp + 0xFFFFFFEE<32>)
	word32 a5_12 = 0xFFFFFFFF<32>
	branch a0 == 0<32> l2303EA54
l2303EA3E:
	a4 = CONVERT(wLoc12, uint16, word32)
	a3 = CONVERT(Mem6[a0 + 10<i32>:uint16], uint16, word32)
	a5_12 = 0xFFFFFFFF<32>
	branch a4 >=u a3 l2303EA54
l2303EA4C:
	a5_12 = CONVERT(Mem6[a4 + 0xFFFFFFFF<32>:byte], byte, word32)
l2303EA54:
	a3Out = a3
	a4Out = a4
	a5Out = a5_12
	return a5_12
pbuf_try_get_at_exit:


void pbuf_put_at(word32 s0, word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..7] s0:[16..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 s0 s8 t3
// Preserved: sp
pbuf_put_at_entry:
l2303EA5C:
	pbuf_skip_const(a0, a1, fp + 0xFFFFFFEE<32>)
	uint16 wLoc12_25 = SLICE(s0, uint16, 16)
	branch a0 == 0<32> l2303EA82
l2303EA6E:
	word32 a4_13 = CONVERT(wLoc12_25, uint16, word32)
	word32 a5_14 = CONVERT(Mem10[a0 + 10<i32>:uint16], uint16, word32)
	branch a4_13 >=u a5_14 l2303EA82
l2303EA7A:
	Mem17[a5_14 + a4_13:byte] = SLICE(a2, byte, 0)
l2303EA82:
	return
pbuf_put_at_exit:


word32 raw_input(word32 ra, word32 a0, word32 a1, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
raw_input_entry:
l2303EA8A:
	word32 a5_271
	word32 a3_269
	word32 a4_270
	word32 s6_118 = ip4_addr_isbroadcast_u32(a0, a1, out a3_269, out a4_270, out a5_271)
	word32 s4_116 = a0
	word32 s3_115 = 0<32>
	word32 s0_113 = Mem22[0x4200E31C<32>:int32]
	word32 s5_117 = CONVERT(Mem22[Mem22[a0 + 4<i32>:int32] + 9<i32>:byte], byte, word32)
	word32 a0_130 = 0<32>
	word32 s1_111 = 0x4201A794<32>
	word32 s2_114 = 0x4200E31C<32>
	word32 s7_119 = 0x4201A000<32>
l2303EAD2:
	branch s0_113 == 0<32> l2303EB32
l2303EAD4:
	word32 a5_45 = CONVERT(Mem22[s0_113 + 16<i32>:byte], byte, word32)
	branch a5_45 != s5_117 l2303EB50
l2303EADC:
	word32 a4_47 = CONVERT(Mem22[s0_113 + 8<i32>:byte], byte, word32)
	branch a4_47 == 0<32> l2303EAF2
l2303EAE2:
	s1_111 = Mem22[a5_45 + 4<i32>:word32]
	a5_45 = CONVERT(Mem22[a5_45 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
	branch a4_47 != a5_45 l2303EB50
l2303EAF2:
	s0_113 = Mem22[a5_45:word32]
	branch s6_118 == 0<32> l2303EB48
l2303EB48:
	branch a5_45 == 0<32> l2303EAFA
l2303EB4A:
	s1_111 = Mem22[a4_47 + 20<i32>:word32]
	branch a4_47 == a5_45 l2303EAFA
l2303EAF8:
	branch a5_45 != 0<32> l2303EB50
l2303EAFA:
	word32 a5_61 = CONVERT(Mem22[s0_113 + 17<i32>:byte], byte, word32)
	branch (a5_61 & 1<32>) == 0<32> l2303EB0A
l2303EB02:
	s0_113 = Mem22[a4_47 + 4<i32>:word32]
	s1_111 = Mem22[(a5_61 & 1<32>) + 16<i32>:word32]
	branch a4_47 != (a5_61 & 1<32>) l2303EB50
l2303EB0A:
	s0_113 = Mem22[(a5_61 & 1<32>) + 20<i32>:word32]
	branch (a5_61 & 1<32>) == 0<32> l2303EB50
l2303EB0E:
	word32 s0_73 = Mem22[a0_130 + 24<i32>:word32]
	word32 a5_112
	word32 a0_121
	call a5_61 & 1<32> (retsize: 0;)
		uses: a0:a0_72,a1:s0_73,a2:s4_82,a3:s7_77 + 1956<i32>,ra:ra_105,s0:s0_73,s1:s1_85,s2:s2_92,s3:s3_96,s4:s4_82,s5:s5_46,s6:s6_56,s7:s7_77
		defs: a0:a0_121,a5:a5_112,ra:ra_120,s0:s0_113,s1:s1_111,s2:s2_114,s3:s3_115,s4:s4_116,s5:s5_117,s6:s6_118,s7:s7_119
	branch a0_121 == 0<32> l2303EB56
l2303EB56:
	a0_130 = 2<32>
l2303EB50:
	s3_115 = s0_113
	s0_113 = Mem22[s0_113 + 12<i32>:word32]
l2303EB1C:
	a0_130 = 1<32>
	branch s3_115 == 0<32> l2303EB32
l2303EB22:
	word32 s0_136 = Mem22[a5_112 + 12<i32>:word32]
	Mem137[s3_115 + 12<i32>:word32] = a5_112
	word32 a5_138 = Mem137[s2_114:int32]
	Mem139[s2_114:word32] = s0_136
	Mem140[a5_138 + 12<i32>:word32] = s0_136
l2303EB32:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_111
	a0Out = a0_130
	a2Out = dwArgB8
	s2Out = s2_114
	s3Out = s3_115
	s4Out = dwArg78
	s5Out = s5_117
	s6Out = s6_118
	s8Out = s5
	return ra
raw_input_exit:


void raw_netif_ip_addr_changed(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_do_set_ipaddr
//      netif_remove
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
raw_netif_ip_addr_changed_entry:
l2303EB5A:
	branch a0 == 0<32> l2303EB70
l2303EB5C:
	branch a5 == 0<32> l2303EB70
l2303EB60:
	branch a1 == 0<32> l2303EB70
l2303EB62:
	branch a5 == 0<32> l2303EB70
l2303EB66:
	word32 a5_10 = Mem0[0x4200E31C<32>:int32]
l2303EB6E:
	branch a5_10 != 0<32> l2303EB72
l2303EB72:
	word32 a5_14 = Mem13[a3:word32]
	branch a3 != a4 l2303EB7E
l2303EB7A:
	Mem18[a4:word32] = a5_14
l2303EB7E:
	a5_10 = Mem20[a5_14 + 12<i32>:word32]
l2303EB70:
	return
raw_netif_ip_addr_changed_exit:


void stats_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
stats_init_entry:
l2303EB82:
	return
stats_init_exit:


word32 tcp_close_shutdown_fin(word32 ra, word32 s1, word32 a0, word32 a3, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_alloc
//      tcp_recv_null
//      tcp_fasttmr
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_close_shutdown_fin_entry:
l2303EB84:
	word32 a2_17
	word32 s0_29
	word32 a5_42
	word32 a4_102 = CONVERT(Mem7[a0 + 20<i32>:byte], byte, word32)
	word32 a5_10 = 4<32>
	branch a4_102 == 4<32> l2303EBA4
l2303EB96:
	branch a4_102 == 7<32> l2303EBC4
l2303EBC4:
	word32 a0_16
	ra = tcp_send_fin(ra, s1, a3, 7<32>, mstatus, dwArg14, dwArg28, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_29, out s1, out a0_16, out a2_17, out a3, out s2, out s3, out s4, out mstatus)
	a5_10 = a0_16
	branch a0_16 != 0<32> l2303EBD0
l2303EBCC:
	a5_42 = 9<32>
l2303EB9C:
	a3 = 3<32>
	a5_10 = 0<32>
	branch a4_102 != 3<32> l2303EBBA
l2303EBA4:
	word32 a0_52
	ra = tcp_send_fin(ra, s1, a3, a5_10, mstatus, dwArg14, dwArg28, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_29, out s1, out a0_52, out a2_17, out a3, out s2, out s3, out s4, out mstatus)
	a5_10 = a0_52
	branch a0_52 != 0<32> l2303EBD0
l2303EBD0:
	a4_102 = 0xFFFFFFFF<32>
	branch a5_10 != 0xFFFFFFFF<32> l2303EBBA
l2303EBD6:
	Mem84[s0_29 + 26<i32>:word16] = SLICE(CONVERT(Mem7[s0_29 + 26<i32>:uint16], uint16, word32) | 8<i32>, word16, 0)
l2303EBAC:
	a5_42 = 5<32>
l2303EBAE:
	Mem88[s0_29 + 20<i32>:byte] = SLICE(a5_42, byte, 0)
	word32 s0_314
	word32 a0_315
	word32 a2_316
	ra = tcp_output(ra, s1, s0_29, a2_17, s7, mstatus, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgF8, dwArgFC, dwArg0108, out s0_314, out s1, out a0_315, out a2_316, out a3, out a4_102, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
l2303EBB8:
	a5_10 = 0<32>
l2303EBBA:
	s1Out = s1
	a0Out = a5_10
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_102
	a5Out = a5_10
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_close_shutdown_fin_exit:


word32 tcp_init(word32 ra, word32 a0, word32 a2, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a3 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
tcp_init_entry:
l2303EBE4:
	word32 a0_8
	word32 a3_10
	word32 a1_63
	word32 a2_64
	word32 a4_65
	word32 a5_66
	word32 s4_67
	word32 s8_68
	bl_rand(a0, a2, out a0_8, out a1_63, out a2_64, out a3_10, out a4_65, out a5_66, out s4_67, out s8_68)
	Mem27[0x4200EC78<32>:word16] = SLICE(CONVERT(SLICE(CONVERT(SLICE(a0_8, word14, 0), word14, word32) + 0xFC000000<32>, word16, 0), word16, word32), word16, 0)
l2303EC0E_thunk_printf:
	word32 a0_31
	word32 a3_36
	word32 s1_40
	word32 a1_69
	word32 a2_70
	word32 a4_71
	word32 a5_72
	word32 a7_73
	word32 s2_74
	word32 s3_75
	word32 s4_76
	word32 s5_77
	word32 s6_78
	word32 s7_79
	word32 s8_80
	word32 s9_81
	word32 s10_82
	word32 s11_83
	word32 t4_84
	word32 ra_39 = printf(ra, 0x2307AC78<32>, a3_10, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_40, out a0_31, out a1_69, out a2_70, out a3_36, out a4_71, out a5_72, out a7_73, out s2_74, out s3_75, out s4_76, out s5_77, out s6_78, out s7_79, out s8_80, out s9_81, out s10_82, out s11_83, out t4_84)
	s1Out = s1_40
	a0Out = a0_31
	a3Out = a3_36
	return ra_39
tcp_init_exit:


word32 tcp_free(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_abort
//      tcp_recv_null
//      tcp_tmr
//      tcp_input_delayed_close
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: sp
tcp_free_entry:
l2303EC12:
l2303EC16_thunk_memp_free:
	word32 a5_9
	word32 a0_10
	word32 a2_11
	word32 a3_12
	word32 a4_13
	word32 s1_14 = memp_free(2<32>, a0, a3, a4, mstatus, out a0_10, out a2_11, out a3_12, out a4_13, out a5_9)
	a0Out = a0_10
	a1Out = a0
	a2Out = a2_11
	a3Out = a3_12
	a4Out = a4_13
	a5Out = a5_9
	return s1_14
tcp_free_exit:


word32 tcp_update_rcv_ann_wnd(word32 a0, word32 a2, word32 a3, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_recved
//      tcp_receive
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5 a6
// Preserved: sp
tcp_update_rcv_ann_wnd_entry:
l2303EC1A:
	word32 a1_6 = CONVERT(Mem0[a0 + 40<i32>:uint16], uint16, word32)
	word32 a4_11 = CONVERT(Mem0[a0 + 50<i32>:uint16], uint16, word32)
	word32 a0_14 = a1_6 - a3 + a2
	branch a4_11 <=u 1032<i32> l2303EC3A
l2303EC36:
	a4_11 = 1032<i32>
l2303EC3A:
	word32 a4_20 = a0_14 - CONVERT(SLICE(a4_11, word16, 0), word16, word32)
	branch a4_20 < 0<32> l2303EC4C
l2303EC4C:
	word32 a4_23 = a2 - a3
	branch a4_23 <= 0<32> l2303EC5C
l2303EC5C:
	a3 = a3 - a2
	Mem26[a0 + 42<i32>:word16] = SLICE(a3, word16, 0)
l2303EC54:
	Mem27[a0 + 42<i32>:word16] = 0<16>
l2303EC58:
	a1Out = <invalid>
	a3Out = a3
	a4Out = a4_23
	a5Out = <invalid>
	return 0<32>
l2303EC46:
	Mem30[a0 + 42<i32>:word16] = SLICE(a1_6, word16, 0)
	a1Out = <invalid>
	a3Out = a3
	a4Out = a4_20
	a5Out = <invalid>
	return a0_14
tcp_update_rcv_ann_wnd_exit:


word32 tcp_recved(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_recv_null
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s10 s11 s4 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_recved_entry:
l2303EC64:
	branch a0 == 0<32> l2303ECB8
l2303ECB8:
	s0Out = s0
	a3Out = a3
	a4Out = a4
	s4Out = s4
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2303EC66:
	word32 a4_9 = CONVERT(Mem8[a0 + 40<i32>:uint16], uint16, word32)
	word32 a1_15 = CONVERT(SLICE(a1 + a4_9, word16, 0), word16, word32)
	branch a1_15 >u 0xFFF810<32> l2303EC84
l2303EC80:
	branch a1_15 >=u a4_9 l2303EC86
l2303EC84:
	a1_15 = 0xFFF810<32>
l2303EC86:
	Mem21[a0 + 40<i32>:word16] = SLICE(a1_15, word16, 0)
	word32 a3_31
	word32 a4_32
	word32 a5_231
	word32 a1_230
	branch tcp_update_rcv_ann_wnd(a0, a2, a3, out a1_230, out a3_31, out a4_32, out a5_231) <=u 1031<i32> l2303ECB0
l2303ECB0:
	s0Out = s0
	a3Out = a3_31
	a4Out = a4_32
	s4Out = s4
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2303EC98:
	Mem44[a0 + 26<i32>:word16] = SLICE(CONVERT(Mem21[a0 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
l2303ECAC_thunk_tcp_output:
	word32 a3_62
	word32 a4_63
	word32 s0_66
	word32 s4_69
	word32 s10_76
	word32 s11_77
	word32 s7_79
	word32 s9_80
	word32 mstatus_87
	word32 s8_239
	word32 s5_237
	word32 s6_238
	word32 s2_235
	word32 s3_236
	word32 a0_233
	word32 a2_234
	word32 s1_232
	word32 ra_65 = tcp_output(ra, s1, a0, dwArg10, s7, mstatus, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg010C, dwArg0118, out s0_66, out s1_232, out a0_233, out a2_234, out a3_62, out a4_63, out s2_235, out s3_236, out s4_69, out s5_237, out s6_238, out s7_79, out s8_239, out s9_80, out s10_76, out s11_77, out mstatus_87)
	s0Out = s0_66
	a3Out = a3_62
	a4Out = a4_63
	s4Out = s4_69
	s7Out = s7_79
	s9Out = s9_80
	s10Out = s10_76
	s11Out = s11_77
	mstatusOut = mstatus_87
	return ra_65
tcp_recved_exit:


word32 tcp_seg_free(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0108, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_segs_free
//      tcp_oos_insert_segment
//      tcp_free_acked_segments.isra.3
//      tcp_receive
//      tcp_input
//      tcp_create_segment
//      tcp_output
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: a6 a7 mstatus ra s0 s2 s3 s4 s5 s6 s8 sp t0 t1 t3 t4 t5 t6
tcp_seg_free_entry:
l2303ECBA:
	branch a0 == 0<32> l2303ECD8
l2303ECD8:
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l2303ECBC:
	word32 a1_21 = a0
	word32 a0_6 = Mem0[a0 + 4<i32>:word32]
	branch a0_6 == 0<32> l2303ECDA
l2303ECDA:
l2303ECC2:
	word32 s0_130
	word32 s1_131
	word32 a0_132
	word32 a2_133
	word32 a5_134
	word32 a7_135
	word32 s2_136
	word32 s3_137
	word32 s4_138
	word32 s5_139
	word32 s6_140
	word32 s8_141
	pbuf_free(ra, a0_6, a3, a4, s4, mstatus, dwArg0108, out s0_130, out s1_131, out a0_132, out a1_21, out a2_133, out a3, out a4, out a5_134, out a7_135, out s2_136, out s3_137, out s4_138, out s5_139, out s6_140, out s8_141, out mstatus)
l2303ECD4:
l2303ECD4_thunk_memp_free:
	word32 a5_50
	word32 a0_51
	word32 a2_52
	word32 a3_53
	word32 a4_54
	word32 s1_55 = memp_free(4<32>, a1_21, a3, a4, mstatus, out a0_51, out a2_52, out a3_53, out a4_54, out a5_50)
	a0Out = a0_51
	a1Out = a1_21
	a2Out = a2_52
	a3Out = a3_53
	a4Out = a4_54
	a5Out = a5_50
	return s1_55
tcp_seg_free_exit:


word32 tcp_segs_free(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArgF8, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_free_ooseq
//      tcp_pcb_purge
//      tcp_abort
//      tcp_oos_insert_segment
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
tcp_segs_free_entry:
l2303ECDE:
	branch a0 != 0<32> l2303ECE2
l2303ECE2:
l2303ECE8:
	word32 a1_19
	word32 a5_23
	word32 a0_61
	word32 a2_62
	word32 s1_24 = tcp_seg_free(ra, Mem8[s0:word32], a3, a4, s4, mstatus, dwArgF8, out a0_61, out a1_19, out a2_62, out a3, out a4, out a5_23)
	branch s0 != 0<32> l2303ECE8
l2303ECF2:
	a0Out = s0
	a1Out = a1_19
	a3Out = a3
	a4Out = a4
	a5Out = a5_23
	return s1_24
l2303ECE0:
	a0Out = a0
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
tcp_segs_free_exit:


word32 tcp_seg_copy(word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_seg_copy_entry:
l2303ECFA:
	word32 a0_15
	word32 a2_86
	word32 a3_18
	word32 a4_19
	word32 a5_16
	word32 s1_20 = memp_malloc(s1, 4<32>, a3, a4, mstatus, out a0_15, out a2_86, out a3_18, out a4_19, out a5_16)
	word32 s0_22 = a0_15
	branch a0_15 == 0<32> l2303ED1A
l2303ED0C:
	word32 a4_26
	word32 a3_31
	word32 a2_87
	word32 a5_88
	word32 a6_89
	word32 a7_90
	memcpy(a0_15, a1, 0x14<32>, out a2_87, out a3_31, out a4_26, out a5_88, out a6_89, out a7_90)
	s0_22 = Mem10[a0_15 + 4<i32>:word32]
	pbuf_ref(a0_15, a3_31, a4_26, mstatus, out a3_18, out a4_19, out a5_16)
l2303ED1A:
	s1Out = s1_20
	a0Out = s0_22
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_16
	return s0_22
tcp_seg_copy_exit:


word32 tcp_next_iss(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
tcp_next_iss_entry:
l2303ED24:
	word32 a0_9 = a0 + Mem0[0x4201A774<32>:int32]
	Mem10[a0_9:word32] = Mem0[a0:word32]
	return a0_9
tcp_next_iss_exit:


word32 tcp_eff_send_mss_netif(word32 a0, word32 a1, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
//      tcp_output
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
tcp_eff_send_mss_netif_entry:
l2303ED3C:
	branch a1 == 0<32> l2303ED64
l2303ED3E:
	word32 a5_5 = CONVERT(Mem0[a1 + 56<i32>:uint16], uint16, word32)
	branch a5_5 == 0<32> l2303ED64
l2303ED44:
	a3 = 40<i32>
	word32 a4_11 = 0<32>
	branch a5_5 <=u 40<i32> l2303ED5E
l2303ED4E:
	word32 a5_9 = a5_5 + -40<i32> << 16<i32>
	a4_11 = a5_9 >>u 16<i32>
	branch a0 >=u a5_9 >>u 16<i32> l2303ED5E
l2303ED5C:
	a4_11 = a0
l2303ED5E:
	a0 = CONVERT(SLICE(a4_11, word16, 0), word16, word32)
l2303ED64:
	a3Out = a3
	return a0
tcp_eff_send_mss_netif_exit:


word32 tcp_free_ooseq(word32 ra, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArgE8, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_free_ooseq_callback
//      tcp_pcb_purge
//      tcp_tmr
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
tcp_free_ooseq_entry:
l2303ED66:
	word32 a0_5 = Mem0[a5 + 116<i32>:word32]
	branch a5 == 0<32> l2303ED84
l2303ED84:
	a0Out = a0_5
	a2Out = a2
	a3Out = a3
	a4Out = a4
	return s1
l2303ED6A:
	word32 a0_17
	word32 a3_20
	word32 a4_21
	word32 a1_51
	word32 a5_52
	word32 s1_23 = tcp_segs_free(ra, a0_5, a5, a3, a4, s4, mstatus, dwArgE8, out a0_17, out a1_51, out a3_20, out a4_21, out a5_52)
	Mem25[a0_5 + 116<i32>:word32] = 0<32>
	a0Out = a0_17
	a2Out = dwArg10
	a3Out = a3_20
	a4Out = a4_21
	return s1_23
tcp_free_ooseq_exit:


word32 tcp_pcb_purge(word32 ra, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_pcb_remove
//      tcp_recv_null
//      tcp_tmr
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: a6 a7 mstatus ra s0 s2 s3 s4 s5 s6 s8 sp t0 t1 t3 t4 t5 t6
tcp_pcb_purge_entry:
l2303ED86:
	branch a0 == 0<32> l2303EDDC
l2303ED88:
	a5 = CONVERT(Mem0[a0 + 20<i32>:byte], byte, word32)
	a4 = 1<32>
	branch a5 <=u 1<32> l2303EDDC
l2303ED92:
	a4 = 0xA<32>
	branch a5 == 0xA<32> l2303EDDC
l2303EDDC:
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l2303ED98:
	word32 a0_14 = Mem12[a0 + 120<i32>:word32]
	branch a0_14 == 0<32> l2303EDAC
l2303EDA4:
	word32 s0_20
	word32 s8_221
	word32 s6_220
	word32 s5_219
	word32 s3_218
	word32 s2_217
	word32 a7_216
	word32 a2_215
	word32 a1_214
	word32 s1_213
	ra = pbuf_free(ra, a0_14, a3, 0xA<32>, s4, mstatus, dwArg0118, out s0_20, out s1_213, out a0_14, out a1_214, out a2_215, out a3, out a4, out a5, out a7_216, out s2_217, out s3_218, out s4, out s5_219, out s6_220, out s8_221, out mstatus)
	Mem43[s0_20 + 120<i32>:word32] = 0<32>
l2303EDAC:
	branch a5 == 0<32> l2303EDB6
l2303EDB0:
	word32 a2_224
	tcp_free_ooseq(ra, a3, a4, a5, s4, mstatus, dwArgD8, out a0_14, out a2_224, out a3, out a4)
l2303EDB6:
	word32 s0_65 = Mem45[a0_14 + 108<i32>:word32]
	Mem67[s0_65 + 48<i32>:word16] = 0xFFFF<16>
	word32 a0_74
	word32 a3_77
	word32 a4_78
	word32 a5_223
	word32 a1_222
	tcp_segs_free(ra, s0_65, a0_14, a3, a4, s4, mstatus, dwArgE8, out a0_74, out a1_222, out a3_77, out a4_78, out a5_223)
	word32 s0_82 = Mem67[a0_74 + 112<i32>:word32]
	word32 a0_83
	word32 a1_84
	word32 a3_86
	word32 a4_87
	word32 a5_88
	word32 s1_89 = tcp_segs_free(ra, s0_82, a0_74, a3_77, a4_78, s4, mstatus, dwArgE8, out a0_83, out a1_84, out a3_86, out a4_87, out a5_88)
	Mem91[s0_82 + 108<i32>:word32] = 0<32>
	Mem92[s0_82 + 112<i32>:word32] = 0<32>
	Mem93[s0_82 + 104<i32>:word16] = 0<16>
	a0Out = a0_83
	a1Out = a1_84
	a2Out = dwArg10
	a3Out = a3_86
	a4Out = a4_87
	a5Out = a5_88
	return s1_89
tcp_pcb_purge_exit:


word32 tcp_pcb_remove(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 s4, word32 s7, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_abort
//      tcp_recv_null
//      tcp_input_delayed_close
//      tcp_input
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_pcb_remove_entry:
l2303EDDE:
	word32 a0_9 = Mem7[a5:word32]
	word32 s0_11 = a1
	branch a5 != a1 l2303EE34
l2303EE34:
	branch a5 == 0<32> l2303EDF0
l2303EE36:
	word32 a5_15 = Mem7[a4 + 12<i32>:word32]
	branch a4 != a1 l2303EE32
l2303EE32:
	a5 = a4
l2303EE3C:
	s0_11 = Mem7[a4 + 12<i32>:word32]
	Mem19[a4 + 12<i32>:word32] = a5_15
l2303EDEC:
	Mem21[a5:word32] = a0_9
l2303EDF0:
	Mem23[s0_11 + 12<i32>:word32] = 0<32>
	word32 a2_42
	word32 a5_238
	word32 a1_236
	word32 a4_237
	word32 a0_145
	word32 a3_147
	word32 s1_160 = tcp_pcb_purge(ra, s0_11, a3, s4, mstatus, dwArgC8, dwArgD8, dwArg0108, out a0_145, out a1_236, out a2_42, out a3_147, out a4_237, out a5_238)
	word32 a5_46 = CONVERT(Mem23[s0_11 + 20<i32>:byte], byte, word32)
	word32 a4_148 = 0xA<32>
	branch a5_46 == 0xA<32> l2303EE22
l2303EE04:
	a4_148 = 1<32>
	branch a5_46 == 1<32> l2303EE22
l2303EE0A:
	word32 a5_49 = CONVERT(Mem23[s0_11 + 26<i32>:uint16], uint16, word32)
	a4_148 = a5_49 & 1<i32>
	branch (a5_49 & 1<i32>) == 0<32> l2303EE22
l2303EE14:
	Mem52[s0_11 + 26<i32>:word16] = SLICE(a5_49 | 2<i32>, word16, 0)
	word32 a2_235
	ra = tcp_output(ra, s1_160, s0_11, a2_42, s7, mstatus, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgF8, dwArgFC, dwArg0108, out s0_11, out s1_160, out a0_145, out a2_235, out a3_147, out a4_148, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
l2303EE22:
	Mem87[s0_11 + 20<i32>:byte] = 0<8>
	Mem88[s0_11 + 22<i32>:word16] = 0<16>
	s1Out = s1_160
	a0Out = a0_145
	a3Out = a3_147
	a4Out = a4_148
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_pcb_remove_exit:


word32 tcp_abandon(word32 ra, word32 s1, word32 a0, word32 a3, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_abort
//      tcp_kill_state
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_abandon_entry:
l2303EE42:
	branch a0 == 0<32> l2303EF54
l2303EF54:
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2303EE46:
	word32 a5_21 = CONVERT(Mem20[a0 + 20<i32>:byte], byte, word32)
	word32 a4_111 = 0xA<32>
	word32 s0_23 = a0
	branch a5_21 != 0xA<32> l2303EE8A
l2303EE8A:
	word32 s2_152
	word32 s5_173 = Mem20[a0 + 80<i32>:int32]
	word32 s6_166 = Mem20[a0 + 36<i32>:int32]
	word32 s3_200 = Mem20[a0 + 144<i32>:int32]
	word32 s4_101 = Mem20[a0 + 16<i32>:int32]
	word32 s1_28 = CONVERT(Mem20[a0 + 22<i32>:uint16], uint16, word32)
	branch a5_21 != 0<32> l2303EF24
l2303EF24:
	word32 s1_642
	word32 a4_643
	word32 s8_644
	ra = tcp_pcb_remove(ra, a0, a3, 0xA<32>, a5_21, s4_101, s7, mstatus, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, out s1_642, out a0, out a3, out a4_643, out s2_152, out s3_200, out s4_101, out s5_173, out s6_166, out s7, out s8_644, out s9, out s10, out s11, out mstatus)
	Mem67[0x4201A784<32>:byte] = 1<8>
	a4_111 = 1<32>
l2303EEA0:
	s2_152 = 0<32>
	branch s1_28 == 0<32> l2303EEBE
l2303EEA4:
	a4_111 = 0x4201A000<32>
	word32 a5_70 = Mem20[0x4201A780<32>:int32]
	branch a5_70 != a0 l2303EF16
l2303EF16:
	branch a5_70 == 0<32> l2303EEB6
l2303EF18:
	word32 a5_74 = Mem20[0x4201A00C<32>:word32]
	branch a0 != 0x4201A000<32> l2303EF14
l2303EF14:
	a5_70 = 0x4201A000<32>
l2303EF1E:
	s0_23 = Mem20[0x4201A00C<32>:word32]
	Mem78[0x4201A00C<32>:word32] = a5_74
l2303EEB0:
	a0 = Mem20[a5_70 + 12<i32>:word32]
	Mem80[0x4201A780<32>:word32] = a5_70
l2303EEB6:
	Mem82[s0_23 + 12<i32>:word32] = 0<32>
	s2_152 = 0<32>
l2303EEBE:
	word32 s0_89 = Mem88[a0 + 112<i32>:word32]
	branch a0 == 0<32> l2303EEC6
l2303EEC2:
	word32 a5_630
	word32 a1_629
	tcp_segs_free(ra, s0_89, a0, a3, a4_111, s4_101, mstatus, dwArgD8, out a0, out a1_629, out a3, out a4_111, out a5_630)
l2303EEC6:
	word32 s0_117 = Mem88[a0 + 108<i32>:word32]
	branch a0 == 0<32> l2303EECE
l2303EECA:
	word32 a1_631
	word32 a5_632
	tcp_segs_free(ra, s0_117, a0, a3, a4_111, s4_101, mstatus, dwArgD8, out a0, out a1_631, out a3, out a4_111, out a5_632)
l2303EECE:
	word32 s0_134 = Mem88[a0 + 116<i32>:word32]
	branch a0 == 0<32> l2303EED6
l2303EED2:
	word32 a0_633
	word32 a1_634
	word32 a5_635
	tcp_segs_free(ra, s0_134, a0, a3, a4_111, s4_101, mstatus, dwArgD8, out a0_633, out a1_634, out a3, out a4_111, out a5_635)
l2303EED6:
	branch s2_152 == 0<32> l2303EEF0
l2303EEDA:
	word32 s1_636
	word32 s4_639
	word32 s8_640
	word32 a5_638
	word32 a0_637
	ra = tcp_rst(ra, s0_134, s5_173, s6_166, s7, mstatus, dwArg28, dwArg38, dwArg58, s1, dwArg74, dwArg78, dwArg98, dwArgA8, dwArgD8, dwArg0108, out s0_134, out s1_636, out a0_637, out a3, out a4_111, out a5_638, out s2_152, out s3_200, out s4_639, out s5_173, out s6_166, out s7, out s8_640, out s9, out mstatus)
l2303EEF0:
	word32 a0_221
	word32 a1_222
	word32 a3_224
	word32 a4_225
	word32 a5_226
	word32 a2_641
	word32 s1_227 = tcp_free(s0_134, a3, a4_111, mstatus, out a0_221, out a1_222, out a2_641, out a3_224, out a4_225, out a5_226)
	branch s3_200 == 0<32> l2303EF40
l2303EF40:
	0<32> = dwArgA8
	s1Out = s1_227
	a0Out = a0_221
	a1Out = a1_222
	a3Out = a3_224
	a4Out = a4_225
	a5Out = a5_226
	s2Out = s2_152
	s3Out = s3_200
	s4Out = dwArg04
	s5Out = s5_173
	s6Out = s6_166
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2303EEFA:
	0<32> = dwArgA8
	word32 a0_263
	word32 ra_265
	word32 s1_266
	word32 s2_267
	word32 s3_268
	word32 s4_269
	word32 s5_270
	word32 s6_271
	word32 a5_272
	word32 a4_273
	word32 a1_274
	word32 a3_280
	word32 t1_281
	word32 mstatus_282
	word32 s7_283
	word32 a7_284
	word32 s10_285
	word32 s11_286
	word32 s9_287
	word32 t0_288
	word32 t4_289
	word32 t5_290
	word32 t6_291
	call s3_200 (retsize: 0;)
		uses: a0:dwArg04,a1:0xFFFFFFF3<32>,a2:dwArg48,a3:a3_224,a4:a4_273,a5:a5_272,a6:dwArg28,a7:a7_284,mstatus:mstatus_216,ra:ra_257,s0:s1,s1:s1_227,s10:s10_285,s11:s11_286,s2:s2_258,s3:s3_229,s4:dwArg04,s5:s5_259,s6:s6_260,s7:s7_261,s8:s4,s9:s9_287,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0058:dwArg58,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +0088:dwArg88,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +0108:dwArg0108,t0:t0_288,t1:t1_281,t3:dwArg00,t4:t4_289,t5:t5_290,t6:t6_291,tp:dwArg88
		defs: a0:a0_263,a1:a1_274,a3:a3_280,a4:a4_273,a5:a5_272,a7:a7_284,mstatus:mstatus_282,ra:ra_265,s1:s1_266,s10:s10_285,s11:s11_286,s2:s2_267,s3:s3_268,s4:s4_269,s5:s5_270,s6:s6_271,s7:s7_283,s9:s9_287,t0:t0_288,t1:t1_281,t4:t4_289,t5:t5_290,t6:t6_291
	s1Out = s1_266
	a0Out = a0_263
	a1Out = a1_274
	a3Out = a3_280
	a4Out = a4_273
	a5Out = a5_272
	s2Out = s2_267
	s3Out = s3_268
	s4Out = s4_269
	s5Out = s5_270
	s6Out = s6_271
	s7Out = s7_283
	s9Out = s9_287
	s10Out = s10_285
	s11Out = s11_286
	mstatusOut = mstatus_282
	return ra_265
l2303EE64:
	word32 a3_298
	word32 a4_299
	word32 mstatus_305
	word32 s10_307
	word32 s11_308
	word32 s2_309
	word32 s3_310
	word32 s5_312
	word32 s6_313
	word32 s7_314
	word32 s9_316
	word32 s1_624
	word32 a0_625
	word32 s4_626
	word32 s8_627
	word32 ra_306 = tcp_pcb_remove(ra, a0, a3, 0xA<32>, a5_21, s4, s7, mstatus, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, out s1_624, out a0_625, out a3_298, out a4_299, out s2_309, out s3_310, out s4_626, out s5_312, out s6_313, out s7_314, out s8_627, out s9_316, out s10_307, out s11_308, out mstatus_305)
	0<32> = dwArgA8
l2303EE86_thunk_tcp_free:
	word32 a0_332
	word32 a1_333
	word32 a3_335
	word32 a4_336
	word32 a5_337
	word32 a2_628
	s1Out = tcp_free(a0, a3_298, a4_299, mstatus_305, out a0_332, out a1_333, out a2_628, out a3_335, out a4_336, out a5_337)
	a0Out = a0_332
	a1Out = a1_333
	a3Out = a3_335
	a4Out = a4_336
	a5Out = a5_337
	s2Out = s2_309
	s3Out = s3_310
	s4Out = dwArg04
	s5Out = s5_312
	s6Out = s6_313
	s7Out = s7_314
	s9Out = s9_316
	s10Out = s10_307
	s11Out = s11_308
	mstatusOut = mstatus_305
	return ra_306
tcp_abandon_exit:


word32 tcp_abort(word32 ra, word32 s1, word32 a0, word32 a3, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_netif_ip_addr_changed_pcblist.isra.2
//      tcp_alloc
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_abort_entry:
l2303EF56:
l2303EF58_thunk_tcp_abandon:
	word32 a0_13
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 mstatus_21
	word32 s1_24
	word32 s10_25
	word32 s11_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 s7_32
	word32 s9_34
	word32 a1_74
	word32 ra_22 = tcp_abandon(ra, s1, a0, a3, s3, s4, s7, mstatus, dwArg00, dwArg04, dwArg28, dwArg38, dwArg48, dwArg58, dwArg74, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s1_24, out a0_13, out a1_74, out a3_16, out a4_17, out a5_18, out s2_27, out s3_28, out s4_29, out s5_30, out s6_31, out s7_32, out s9_34, out s10_25, out s11_26, out mstatus_21)
	s1Out = s1_24
	a0Out = a0_13
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_18
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	s7Out = s7_32
	s9Out = s9_34
	s10Out = s10_25
	s11Out = s11_26
	mstatusOut = mstatus_21
	return ra_22
tcp_abort_exit:


word32 tcp_netif_ip_addr_changed_pcblist.isra.2(word32 ra, word32 s0, word32 s1, word32 a1, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgF8, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_netif_ip_addr_changed
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s1 s2 s3 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_netif_ip_addr_changed_pcblist.isra.2_entry:
l2303EF5C:
l2303EF66:
	branch a1 != 0<32> l2303EF72
l2303EF72:
	word32 a1_19 = Mem9[s1 + 12<i32>:word32]
	branch a4 != a5 l2303EF82
l2303EF7C:
	word32 a0_196
	word32 s5_197
	word32 s6_198
	word32 s9_199
	word32 s10_200
	word32 s11_201
	ra = tcp_abort(ra, s1, a1_19, a3, s3, s4, s7, mstatus, dwLoc10, s0, dwArg18, dwArg28, dwArg38, dwArg48, dwArg64, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgC8, dwArgCC, dwArgD8, dwArgF8, out s1, out a0_196, out a3, out a4, out a5, out s2, out s3, out s4, out s5_197, out s6_198, out s7, out s9_199, out s10_200, out s11_201, out mstatus)
l2303EF82:
	a1 = s1
l2303EF68:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s7Out = s7
	mstatusOut = mstatus
	return ra
tcp_netif_ip_addr_changed_pcblist.isra.2_exit:


word32 tcp_netif_ip_addr_changed(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgE8, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_do_set_ipaddr
//      netif_remove
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_netif_ip_addr_changed_entry:
l2303EF86:
	branch a0 == 0<32> l2303EFDC
l2303EFDC:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s4Out = s4
	mstatusOut = mstatus
	return ra
l2303EF88:
	word32 a0_12 = Mem10[a4:word32]
	branch a4 == 0<32> l2303EFC2
l2303EF96:
	word32 a3_26
	word32 a4_27
	word32 mstatus_31
	word32 s1_33
	word32 s3_37
	word32 s4_38
	word32 s7_41
	word32 s7_265
	word32 s2_263
	word32 s3_264
	word32 a5_262
	ra = tcp_netif_ip_addr_changed_pcblist.isra.2(tcp_netif_ip_addr_changed_pcblist.isra.2(ra, a0_12, a1, Mem10[0x4201A77C<32>:int32], a3, a4, 0x4201A000<32>, s3, s4, s7, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1_33, out a3_26, out a4_27, out a5_262, out s2_263, out s3_37, out s4_38, out s7_41, out mstatus_31), a0_12, s1_33, Mem10[0x4201A780<32>:int32], a3_26, a4_27, 0x4201A000<32>, s3_37, s4_38, s7_41, mstatus_31, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1, out a3, out a4, out a5, out s2, out s3_264, out s4, out s7_265, out mstatus)
	branch s1 == 0<32> l2303EFC2
l2303EFB4:
	s1 = Mem10[a5:word32]
	branch a5 == 0<32> l2303EFC2
l2303EFB8:
	a5 = Mem10[0x4201A778<32>:int32]
l2303EFC0:
	branch a5 != 0<32> l2303EFCC
l2303EFCC:
	word32 a5_88 = Mem87[a3:word32]
	branch a3 != a4 l2303EFD8
l2303EFD4:
	s1 = Mem87[a4:word32]
	Mem92[a4:word32] = a5_88
l2303EFD8:
	a5 = Mem94[a5_88 + 12<i32>:word32]
l2303EFC2:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s4Out = s4
	mstatusOut = mstatus
	return ra
tcp_netif_ip_addr_changed_exit:


word32 tcp_kill_state(word32 ra, word32 s1, word32 a0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_alloc
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a1 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_kill_state_entry:
l2303EFDE:
	word32 a4_12 = 0x4201A000<32>
	word32 a5_10 = Mem0[0x4201A77C<32>:int32]
	word32 a1_7 = Mem0[0x4201A774<32>:int32]
	word32 a2_17 = 0<32>
	word32 a3_19 = 0<32>
l2303EFF2:
	branch a5_10 != 0<32> l2303EFFE
l2303EFFE:
	a4_12 = CONVERT(Mem0[a5_10 + 20<i32>:byte], byte, word32)
	branch a4_12 != a0 l2303F014
l2303F006:
	a5_10 = Mem0[a4_12 + 32<i32>:word32]
	a4_12 = a1_7 - a4_12
	branch a4_12 <u a2_17 l2303F014
l2303F010:
	a2_17 = a4_12
	a3_19 = a5_10
l2303F014:
	a5_10 = Mem0[a5_10 + 12<i32>:word32]
l2303EFF4:
	branch a3_19 == 0<32> l2303F018
l2303F018:
	s1Out = s1
	a1Out = a1_7
	a3Out = a3_19
	a4Out = a4_12
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2303EFF6:
l2303EFFA_thunk_tcp_abandon:
	word32 a1_48
	word32 a3_50
	word32 a4_51
	word32 mstatus_55
	word32 s1_58
	word32 s10_59
	word32 s11_60
	word32 s2_61
	word32 s3_62
	word32 s4_63
	word32 s5_64
	word32 s6_65
	word32 s7_66
	word32 s9_68
	word32 a5_229
	word32 a0_228
	word32 ra_56 = tcp_abandon(ra, s1, a3_19, a3_19, s3, s4, s7, mstatus, dwArg00, dwArg04, dwArg28, dwArg38, dwArg48, dwArg58, dwArg74, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s1_58, out a0_228, out a1_48, out a3_50, out a4_51, out a5_229, out s2_61, out s3_62, out s4_63, out s5_64, out s6_65, out s7_66, out s9_68, out s10_59, out s11_60, out mstatus_55)
	s1Out = s1_58
	a1Out = a1_48
	a3Out = a3_50
	a4Out = a4_51
	s2Out = s2_61
	s3Out = s3_62
	s4Out = s4_63
	s5Out = s5_64
	s6Out = s6_65
	s7Out = s7_66
	s9Out = s9_68
	s10Out = s10_59
	s11Out = s11_60
	mstatusOut = mstatus_55
	return ra_56
tcp_kill_state_exit:


word32 tcp_alloc(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_alloc_entry:
l2303F01A:
	word32 a4_340
	word32 a0_20
	word32 a5_928
	word32 a2_927
	word32 a3_23
	word32 a4_116
	word32 s1_123 = memp_malloc(a0, 2<32>, a3, a4, mstatus, out a0_20, out a2_927, out a3_23, out a4_116, out a5_928)
	word32 s0_153 = a0_20
	branch a0_20 != 0<32> l2303F0E6
l2303F032:
	s3 = 0x4201A000<32>
	word32 a0_29 = Mem16[0x4201A77C<32>:int32]
l2303F03A:
	branch a0_29 != 0<32> l2303F178
l2303F178:
	word32 a5_32 = CONVERT(Mem31[a0_29 + 26<i32>:uint16], uint16, word32)
	word32 a0_34 = Mem31[a0_20 + 12<i32>:word32]
	a4_116 = a5_32 & 8<i32>
	branch (a5_32 & 8<i32>) == 0<32> l2303F18E
l2303F184:
	Mem37[a0_34 + 26<i32>:word16] = SLICE(a5_32 & 0xFFFFFFF7<32>, word16, 0)
	word32 a0_954
	word32 a2_955
	word32 a5_956
	word32 s8_958
	word32 s2_957
	ra = tcp_close_shutdown_fin(ra, s1_123, a0_34, a3_23, s7, mstatus, dwLoc0C, dwArg08, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s1_123, out a0_954, out a2_955, out a3_23, out a4_116, out a5_956, out s2_957, out s3, out s4, out s5, out s6, out s7, out s8_958, out s9, out s10, out s11, out mstatus)
l2303F18E:
	a0_29 = a0_20
l2303F03E:
	s2 = 0x4201A000<32>
	word32 a5_76 = Mem31[0x4201A770<32>:int32]
	word32 a2_77 = Mem31[0x4201A774<32>:int32]
	word32 a3_115 = 0<32>
l2303F050:
	branch a5_76 != 0<32> l2303F192
l2303F192:
	word32 a5_82 = Mem31[a4_116 + 32<i32>:word32]
	a4_116 = a2_77 - a4_116
	branch a4_116 <u a3_115 l2303F1A0
l2303F19C:
	a3_115 = a4_116
	a0_29 = a5_82
l2303F1A0:
	a5_76 = Mem31[a5_82 + 12<i32>:word32]
l2303F054:
	branch a0_29 == 0<32> l2303F05A
l2303F056:
	word32 a5_940
	word32 a0_939
	ra = tcp_abort(ra, s1_123, a0_29, a3_115, s3, s4, s7, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1_123, out a0_939, out a3_115, out a4_116, out a5_940, out s2, out s3, out s4, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
l2303F05A:
	word32 a0_146
	word32 a4_937
	word32 a3_936
	word32 a2_935
	word32 a5_938
	s1_123 = memp_malloc(s1_123, 2<32>, a3_115, a4_116, mstatus, out a0_146, out a2_935, out a3_936, out a4_937, out a5_938)
	s0_153 = a0_146
	branch a0_146 != 0<32> l2303F0D4
l2303F064:
	word32 a3_163
	word32 a4_164
	word32 s1_172
	word32 s4_177
	word32 a1_941
	ra = tcp_kill_state(ra, s1_123, 9<32>, s3, s4, s7, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1_172, out a1_941, out a3_163, out a4_164, out s2, out s3, out s4_177, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
	word32 a0_191
	word32 a2_942
	word32 a3_943
	word32 a4_944
	word32 a5_945
	s1_123 = memp_malloc(s1_172, 2<32>, a3_163, a4_164, mstatus, out a0_191, out a2_942, out a3_943, out a4_944, out a5_945)
	s0_153 = a0_191
	branch a0_191 != 0<32> l2303F0C2
l2303F074:
	word32 a3_202
	word32 a4_203
	word32 s1_211
	word32 s4_216
	word32 a1_200
	ra = tcp_kill_state(ra, s1_123, 8<32>, s3, s4_177, s7, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1_211, out a1_200, out a3_202, out a4_203, out s2, out s3, out s4_216, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
	word32 a0_230
	word32 a5_947
	word32 a2_946
	word32 a4_234
	word32 a3_233
	s1_123 = memp_malloc(s1_211, 2<32>, a3_202, a4_203, mstatus, out a0_230, out a2_946, out a3_233, out a4_234, out a5_947)
	s0_153 = a0_230
	branch a0_230 != 0<32> l2303F0B0
l2303F084:
	word32 a5_240
	branch CONVERT(SLICE(s1_123, byte, 0), byte, int32) < 0<32> l2303F1A4
l2303F1A4:
	a5_240 = 127<i32>
l2303F08E:
	a5_240 = s1_123
	branch s1_123 != 0<32> l2303F1A8
l2303F1A8:
	a4_234 = Mem31[s3 + 1916<i32>:int32]
	word32 a0_246 = Mem31[s2 + 1908<i32>:int32]
	word32 a5_249 = a5_240 + 0xFFFFFFFF<32> & 255<i32>
	a3_233 = 0<32>
l2303F1B8:
	branch a4_234 != 0<32> l2303F1C6
l2303F1C6:
	word32 a2_253 = CONVERT(Mem31[a4_234 + 21<i32>:byte], byte, word32)
	branch a2_253 <u a5_249 l2303F1DC
l2303F1CE:
	branch a2_253 != a5_249 l2303F1E6
l2303F1D2:
	a4_234 = Mem31[a1_200 + 32<i32>:word32]
	a1_200 = a0_246 - a1_200
	branch a1_200 <u a3_233 l2303F1E6
l2303F1DC:
	a4_234 = Mem31[a3_233 + 32<i32>:word32]
	a5_249 = a2_253
	s0_153 = a4_234
	a3_233 = a0_246 - a3_233
l2303F1E6:
	a4_234 = Mem31[a4_234 + 12<i32>:word32]
l2303F1BA:
	branch s0_153 == 0<32> l2303F094
l2303F1BE:
	word32 s4_953
	word32 a5_952
	word32 a0_951
	ra = tcp_abort(ra, s1_123, s0_153, a3_233, s3, s4_216, s7, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1_123, out a0_951, out a3_233, out a4_234, out a5_952, out s2, out s3, out s4_953, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
l2303F094:
	word32 a0_336
	word32 a2_948
	word32 a5_950
	word32 a3_949
	s1_123 = memp_malloc(s1_123, 2<32>, a3_233, a4_234, mstatus, out a0_336, out a2_948, out a3_949, out a4_340, out a5_950)
	s0_153 = a0_336
	branch a0_336 == 0<32> l2303F168
l2303F09E:
	word32 a4_346 = Mem31[0x4201A728<32>:int32]
	Mem349[a4_346:word16] = SLICE(CONVERT(Mem31[a4_346:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l2303F0B0:
	word32 a4_352 = Mem351[0x4201A728<32>:int32]
	Mem355[a4_352:word16] = SLICE(CONVERT(Mem351[a4_352:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l2303F0C2:
	word32 a4_358 = Mem357[0x4201A728<32>:int32]
	Mem361[a4_358:word16] = SLICE(CONVERT(Mem357[a4_358:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l2303F0D4:
	word32 a4_364 = Mem363[0x4201A728<32>:int32]
	Mem367[a4_364:word16] = SLICE(CONVERT(Mem363[a4_364:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l2303F0E6:
	word32 t1_929
	word32 a0_930
	word32 a5_934
	word32 a2_932
	word32 a3_933
	word32 a1_931
	ra = memset(ra, s0_153, 0<32>, 164<i32>, out t1_929, out a0_930, out a1_931, out a2_932, out a3_933, out a4_340, out a5_934)
	Mem391[s0_153 + 100<i32>:word16] = 0x580<16>
	Mem394[0x8100838<32>:word32] = s0_153
	Mem396[s0_153 + 11<i32>:byte] = 0xFF<8>
	Mem398[s0_153 + 64<i32>:word16] = 6<16>
	Mem399[s0_153 + 62<i32>:word16] = 6<16>
	Mem402[0x219002F<32>:word32] = s0_153
	word32 a5_404 = Mem402[0x4201A774<32>:int32]
	Mem409[s0_153 + 21<i32>:byte] = SLICE(s1_123, byte, 0)
	Mem410[a5_404 + 32<i32>:word32] = s0_153
	Mem413[s0_153 + 30<i32>:byte] = SLICE(CONVERT(Mem410[0x4200E321<32>:byte], byte, word32), byte, 0)
	Mem416[0x15800049<32>:word32] = s0_153
	Mem419[s0_153 + 132<i32>:word32] = 0x2303F34A<32>
	Mem422[s0_153 + 148<i32>:word32] = 0x6DDD00<32>
	Mem425[s0_153 + 152<i32>:word32] = 0x120004F8<32>
	Mem427[s0_153 + 156<i32>:word32] = 9<32>
l2303F168:
	s1Out = s1_123
	a0Out = s0_153
	a4Out = a4_340
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwLoc1C
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_alloc_exit:


word32 tcp_close_shutdown(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_close
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_close_shutdown_entry:
l2303F1EA:
	word32 a4_112
	word32 s1_113
	word32 s0_11 = a0
	word32 a5_12 = CONVERT(Mem9[a0 + 20<i32>:byte], byte, word32)
	branch a1 == 0<32> l2303F282
l2303F1FA:
	a4 = 4<32>
	branch a5_12 == 4<32> l2303F206
l2303F200:
	a4 = 7<32>
	branch a5_12 != 7<32> l2303F282
l2303F206:
	s0_11 = Mem9[a4 + 120<i32>:word32]
	branch a4 != 0<32> l2303F218
l2303F20A:
	a3 = CONVERT(Mem9[s0_11 + 40<i32>:uint16], uint16, word32)
	a4 = 0xFFF810<32>
	branch a3 == 0xFFF810<32> l2303F282
l2303F282:
	branch a5_12 == 1<32> l2303F2D2
l2303F2D2:
l2303F2DE:
	word32 a5_30 = Mem29[a4 + 4<i32>:word32]
	a4 = Mem29[a4:word32]
l2303F2E2:
	branch a4 != 0<32> l2303F302
l2303F302:
	word32 a4_35 = Mem34[a2 + 124<i32>:word32]
	branch s0_11 != a2 l2303F30C
l2303F308:
	Mem37[a4_35 + 124<i32>:word32] = 0<32>
l2303F30C:
	a4 = Mem39[a4_35 + 12<i32>:word32]
l2303F2E4:
	branch a5_30 != 0xDCF85350<32> l2303F2DE
l2303F2EA:
	word32 a3_81
	word32 a4_82
	word32 a0_717
	word32 s1_716
	ra = tcp_pcb_remove(ra, s0_11, 0x2307ACB4<32>, a4, a5_30 + 4<32>, s4, s7, mstatus, dwArg38, dwArg48, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s1_716, out a0_717, out a3_81, out a4_82, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
	word32 a2_719
	word32 a5_720
	word32 a0_718
	s1_113 = memp_free(3<32>, s0_11, a3_81, a4_82, mstatus, out a0_718, out a2_719, out a3, out a4_112, out a5_720)
l2303F288:
	branch a5_12 == 0<32> l2303F29E
l2303F29E:
	branch CONVERT(Mem9[s0_11 + 22<i32>:uint16], uint16, word32) == 0<32> l2303F2BA
l2303F2A4:
	a4 = 0x4201A000<32>
	word32 a5_119 = Mem9[0x4201A780<32>:int32]
	branch a5_119 != s0_11 l2303F2C4
l2303F2C4:
	branch a5_119 == 0<32> l2303F2B6
l2303F2C6:
	word32 a5_123 = Mem9[0x4201A00C<32>:word32]
	branch s0_11 != 0x4201A000<32> l2303F2C2
l2303F2C2:
	a5_119 = 0x4201A000<32>
l2303F2CC:
	s0_11 = Mem9[0x4201A00C<32>:word32]
	Mem127[0x4201A00C<32>:word32] = a5_123
l2303F2B0:
	s0_11 = Mem9[a5_119 + 12<i32>:word32]
	Mem129[0x4201A780<32>:word32] = a5_119
l2303F2B6:
	Mem131[s0_11 + 12<i32>:word32] = 0<32>
l2303F28A:
	branch a5_12 == 2<32> l2303F310
l2303F310:
	word32 s1_144
	word32 a0_715
	ra = tcp_pcb_remove(ra, s0_11, a3, 2<32>, a5_12, s4, s7, mstatus, dwArg38, dwArg48, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s1_144, out a0_715, out a3, out a4, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
	Mem167[0x4201A784<32>:byte] = SLICE(s1_144, byte, 0)
l2303F290:
l2303F29A_thunk_tcp_close_shutdown_fin:
	word32 a3_175
	word32 a4_176
	word32 mstatus_180
	word32 s1_182
	word32 s2_183
	word32 s3_184
	word32 s4_185
	word32 s5_186
	word32 s6_187
	word32 s8_188
	word32 a0_196
	word32 s10_197
	word32 s11_198
	word32 s7_199
	word32 s9_200
	word32 a2_713
	word32 a5_714
	word32 ra_181 = tcp_close_shutdown_fin(ra, 1<32>, s0_11, a3, s7, mstatus, dwArg14, dwArg28, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArgFC, dwArg0108, dwArg0128, out s1_182, out a0_196, out a2_713, out a3_175, out a4_176, out a5_714, out s2_183, out s3_184, out s4_185, out s5_186, out s6_187, out s7_199, out s8_188, out s9_200, out s10_197, out s11_198, out mstatus_180)
	s1Out = s1_182
	a0Out = a0_196
	a3Out = a3_175
	a4Out = a4_176
	s2Out = s2_183
	s3Out = s3_184
	s4Out = s4_185
	s5Out = s5_186
	s6Out = s6_187
	s7Out = s7_199
	s8Out = s8_188
	s9Out = s9_200
	s10Out = s10_197
	s11Out = s11_198
	mstatusOut = mstatus_180
	return ra_181
l2303F218:
	word32 a3_222
	word32 a5_703
	word32 a0_701
	word32 a4_702
	word32 s1_700
	ra = tcp_rst(ra, Mem9[a1 + 80<i32>:word32], a1, a2, s7, mstatus, dwArg38, dwArg48, dwArg68, dwArg78, dwArg84, dwArg88, dwArgA8, dwArgB8, dwArgE8, dwArg0118, out s0_11, out s1_700, out a0_701, out a3_222, out a4_702, out a5_703, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out mstatus)
	word32 a4_707
	word32 a5_708
	word32 a1_705
	word32 a2_706
	word32 a0_704
	s1_113 = tcp_pcb_purge(ra, s0_11, a3_222, s4, mstatus, dwArgC8, dwArgD8, dwArg0108, out a0_704, out a1_705, out a2_706, out a3, out a4_707, out a5_708)
	word32 a5_256 = Mem9[0x4201A77C<32>:int32]
	branch a5_256 != s0_11 l2303F274
l2303F274:
	branch a5_256 == 0<32> l2303F248
l2303F276:
	word32 a5_260 = Mem9[0x4201A00C<32>:word32]
	branch s0_11 != 0x4201A000<32> l2303F272
l2303F272:
	a5_256 = 0x4201A000<32>
l2303F27C:
	s0_11 = Mem9[0x4201A00C<32>:word32]
	Mem264[0x4201A00C<32>:word32] = a5_260
l2303F242:
	s0_11 = Mem9[a5_256 + 12<i32>:word32]
	Mem266[0x4201A77C<32>:word32] = a5_256
l2303F248:
	Mem269[0x4201A784<32>:byte] = 1<8>
	word32 a5_271 = Mem269[0x4201A788<32>:int32]
	Mem273[s0_11 + 12<i32>:word32] = 0<32>
	a4 = 1<32>
	branch a5_271 != s0_11 l2303F2BA
l2303F2BA:
	word32 a2_711
	word32 a5_712
	word32 a0_709
	word32 a1_710
	s1_113 = tcp_free(s0_11, a3, a4, mstatus, out a0_709, out a1_710, out a2_711, out a3, out a4_112, out a5_712)
l2303F262:
	tcp_trigger_input_pcb_close()
l2303F266:
	s1Out = s1_113
	a0Out = 0<32>
	a3Out = a3
	a4Out = a4_112
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_close_shutdown_exit:


word32 tcp_close(word32 ra, word32 a0, word32 a2, word32 a3, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_recv_null
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_close_entry:
l2303F328:
	branch a0 == 0<32> l2303F346
l2303F346:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2303F32A:
	word32 a4_6 = CONVERT(Mem0[a0 + 20<i32>:byte], byte, word32)
	branch a4_6 == 1<32> l2303F340
l2303F334:
	Mem10[a0 + 26<i32>:word16] = SLICE(CONVERT(Mem0[a0 + 26<i32>:uint16], uint16, word32) | 16<i32>, word16, 0)
l2303F340:
l2303F342_thunk_tcp_close_shutdown:
	word32 a0_28
	word32 a3_31
	word32 a4_32
	word32 mstatus_36
	word32 s1_38
	word32 s10_39
	word32 s11_40
	word32 s2_41
	word32 s3_42
	word32 s4_43
	word32 s5_44
	word32 s6_45
	word32 s7_46
	word32 s8_47
	word32 s9_48
	word32 ra_37 = tcp_close_shutdown(ra, a0, 1<32>, a2, a3, a4_6, s4, s7, mstatus, dwArg14, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArgFC, dwArg0108, dwArg0118, dwArg0128, out s1_38, out a0_28, out a3_31, out a4_32, out s2_41, out s3_42, out s4_43, out s5_44, out s6_45, out s7_46, out s8_47, out s9_48, out s10_39, out s11_40, out mstatus_36)
	s1Out = s1_38
	a0Out = a0_28
	a3Out = a3_31
	a4Out = a4_32
	s2Out = s2_41
	s3Out = s3_42
	s4Out = s4_43
	s5Out = s5_44
	s6Out = s6_45
	s7Out = s7_46
	s8Out = s8_47
	s9Out = s9_48
	s10Out = s10_39
	s11Out = s11_40
	mstatusOut = mstatus_36
	return ra_37
tcp_close_exit:


word32 tcp_recv_null(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_process_refused_data
//      tcp_input
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_recv_null_entry:
l2303F34A:
	branch a1 == 0<32> l2303F37A
l2303F37A:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2303F34C:
	branch a2 == 0<32> l2303F370
l2303F370:
	branch a3 != 0<32> l2303F37E
l2303F37E:
	s1Out = s1
	a0Out = 0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2303F374:
l2303F376_thunk_tcp_close:
	word32 a0_14
	word32 a3_17
	word32 a4_18
	word32 mstatus_22
	word32 s1_24
	word32 s10_25
	word32 s11_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 s7_32
	word32 s8_33
	word32 s9_34
	word32 ra_23 = tcp_close(ra, a1, a2, a3, s4, s7, mstatus, dwArg14, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArgFC, dwArg0108, dwArg0118, dwArg0128, out s1_24, out a0_14, out a3_17, out a4_18, out s2_27, out s3_28, out s4_29, out s5_30, out s6_31, out s7_32, out s8_33, out s9_34, out s10_25, out s11_26, out mstatus_22)
	s1Out = s1_24
	a0Out = a0_14
	a3Out = a3_17
	a4Out = a4_18
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	s7Out = s7_32
	s8Out = s8_33
	s9Out = s9_34
	s10Out = s10_25
	s11Out = s11_26
	mstatusOut = mstatus_22
	return ra_23
l2303F34E:
	word32 a3_53
	word32 a4_54
	word32 mstatus_58
	word32 s0_60
	word32 s10_62
	word32 s11_63
	word32 s4_66
	word32 s7_69
	word32 s9_71
	word32 a3_86
	word32 a4_87
	word32 s1_89
	word32 s2_90
	word32 s3_91
	word32 s4_94
	word32 s5_95
	word32 s6_96
	word32 s8_97
	word32 mstatus_103
	word32 s0_200
	word32 a0_201
	word32 a1_202
	word32 a2_203
	word32 a5_204
	word32 a7_205
	word32 ra_104 = pbuf_free(tcp_recved(ra, s1, a1, CONVERT(Mem0[a2 + 8<i32>:uint16], uint16, word32), a2, a3, s7, mstatus, dwArg00, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgF8, dwArgFC, dwArg0108, out s0_60, out a3_53, out a4_54, out s4_66, out s7_69, out s9_71, out s10_62, out s11_63, out mstatus_58), s0_60, a3_53, a4_54, s4_66, mstatus_58, dwArg0118, out s0_200, out s1_89, out a0_201, out a1_202, out a2_203, out a3_86, out a4_87, out a5_204, out a7_205, out s2_90, out s3_91, out s4_94, out s5_95, out s6_96, out s8_97, out mstatus_103)
	s1Out = s1_89
	a0Out = 0<32>
	a3Out = a3_86
	a4Out = a4_87
	s2Out = s2_90
	s3Out = s3_91
	s4Out = s4_94
	s5Out = s5_95
	s6Out = s6_96
	s7Out = s7_69
	s8Out = s8_97
	s9Out = s9_71
	s10Out = s10_62
	s11Out = s11_63
	mstatusOut = mstatus_103
	return ra_104
tcp_recv_null_exit:


word32 tcp_process_refused_data(word32 ra, word32 s1, word32 a0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_fasttmr
//      tcp_input
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_process_refused_data_entry:
l2303F380:
	word32 s1_124 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l2303F3E6
l2303F390:
	word32 s4_118
	word32 a0_28
	word32 s2_16 = Mem13[a0 + 120<i32>:int32]
	word32 a5_17 = Mem13[a0 + 132<i32>:int32]
	word32 s3_19 = CONVERT(Mem13[s2_16 + 13<i32>:byte], byte, word32)
	Mem20[a0 + 120<i32>:word32] = 0<32>
	s0 = a0
	branch a5_17 == 0<32> l2303F3F6
l2303F3F6:
	word32 s1_365
	word32 s8_366
	ra = tcp_recv_null(ra, 0xFFFFFFF0<32>, a0, s2_16, 0<32>, s4, s7, mstatus, dwLoc20, dwLoc0C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, dwArg0108, out s1_365, out a0_28, out a3, out a4, out s2, out s3, out s4_118, out s5, out s6, out s7, out s8_366, out s9, out s10, out s11, out mstatus)
l2303F3AA:
	word32 a5_64
	word32 a1_67
	word32 a7_75
	word32 t0_81
	word32 t1_82
	word32 t4_83
	word32 t5_84
	word32 t6_85
	word32 tp_86
	call a5_17 (retsize: 0;)
		uses: a0:Mem20[a0 + 16<i32>:word32],a1:a1_67,a3:a3_65,a4:a4_68,a5:a5_64,a7:a7_75,mstatus:mstatus,ra:ra,s0:a0,s1:0xFFFFFFF0<32>,s10:s10_76,s11:s11_77,s2:s2_16,s3:s3_19,s4:s4,s5:s5_78,s6:s6_79,s7:s7,s9:s9_80,Stack +0000:dwLoc20,Stack +0014:dwLoc0C,Stack +0028:dwArg08,Stack +0038:dwArg18,Stack +0048:dwArg28,Stack +0058:dwArg38,Stack +0068:dwArg48,Stack +0078:dwArg58,Stack +0098:dwArg78,Stack +00A8:dwArg88,Stack +00AC:dwArg8C,Stack +00B8:dwArg98,Stack +00BC:dwArg9C,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00E8:dwArgC8,Stack +00EC:dwArgCC,Stack +00F8:dwArgD8,Stack +00FC:dwArgDC,Stack +0108:dwArgE8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,t0:t0_81,t1:t1_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
		defs: a0:a0_63,a1:a1_67,a3:a3_65,a4:a4_68,a5:a5_64,a7:a7_75,mstatus:mstatus_73,ra:ra_59,s0:s0_60,s10:s10_76,s11:s11_77,s2:s2_61,s3:s3_62,s4:s4_72,s5:s5_78,s6:s6_79,s7:s7_74,s9:s9_80,t0:t0_81,t1:t1_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
l2303F3AE:
	s1_124 = a0_28
	branch a0_28 != 0<32> l2303F3FE
l2303F3FE:
	branch a0_28 == 0xFFFFFFF3<32> l2303F3E4
l2303F404:
	Mem92[s0 + 120<i32>:word32] = s2
	s1_124 = 0xFFFFFFFB<32>
l2303F3B2:
	s3 = s3 & 32<i32>
	branch s3 == 0<32> l2303F3E6
l2303F3BA:
	word32 a5_97 = CONVERT(Mem20[s0 + 40<i32>:uint16], uint16, word32)
	a4 = 0xFFF810<32>
	branch a5_97 == 0xFFF810<32> l2303F3CE
l2303F3C8:
	Mem101[s0 + 40<i32>:word16] = SLICE(a5_97 + 1<32>, word16, 0)
l2303F3CE:
	word32 a5_104 = Mem103[s0 + 132<i32>:int32]
	branch a5_104 == 0<32> l2303F3E6
l2303F3D4:
	word32 s0_106 = Mem103[a0_28 + 16<i32>:word32]
	word32 a0_129
	word32 a7_141
	word32 t0_147
	word32 t1_148
	word32 t4_149
	word32 t5_150
	word32 t6_151
	word32 tp_152
	call a5_104 (retsize: 0;)
		uses: a0:a0_87,a1:s0_106,a2:0<32>,a3:0<32>,a4:a4_134,a5:0xFFFFFFF3<32>,a7:a7_141,mstatus:mstatus_116,ra:ra_112,s0:s0_106,s1:a0_87,s10:s10_142,s11:s11_143,s2:s2_90,s3:s3_95,s4:s4_118,s5:s5_144,s6:s6_145,s7:s7_120,s9:s9_146,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0058:dwArg58,Stack +0078:dwArg78,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00CC:dwArgCC,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,Stack +FFFFFFE0:dwLoc20,Stack +FFFFFFF4:dwLoc0C,t0:t0_147,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151,tp:tp_152
		defs: a0:a0_129,a3:a3_131,a4:a4_134,a7:a7_141,mstatus:mstatus_139,ra:ra_125,s0:s0_126,s1:s1_124,s10:s10_142,s11:s11_143,s2:s2_127,s3:s3_128,s5:s5_144,s6:s6_145,s7:s7_140,s9:s9_146,t0:t0_147,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151,tp:tp_152
	branch a0_129 != 0xFFFFFFF3<32> l2303F3E6
l2303F3E4:
	s1_124 = 0xFFFFFFF3<32>
l2303F3E6:
	s0Out = s0
	s1Out = s1_124
	a0Out = s1_124
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwLoc1C
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_process_refused_data_exit:


word32 tcp_fasttmr(word32 ra, word32 s1, word32 a2, word32 s2, word32 s3, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s5 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_fasttmr_entry:
l2303F40C:
	Mem22[0x4200E321<32>:byte] = SLICE(CONVERT(Mem16[0x4200E321<32>:byte], byte, word32) + 1<32>, byte, 0)
	word32 a3_144 = 0x4200E321<32>
	word32 s2_101 = 0x4200E321<32>
	word32 s4_103 = 0x4201A000<32>
	word32 s3_102 = 0x4201A000<32>
	s1_100 = s1
	ra_129 = ra
l2303F438:
	word32 ra_129
	word32 s1_100
	word32 s0_167 = Mem25[s4_103 + 1916<i32>:int32]
l2303F43C:
	branch s0_167 != 0<32> l2303F44E
l2303F44E:
	word32 a5_30 = CONVERT(Mem29[s2_101:byte], byte, word32)
	branch CONVERT(Mem29[s0_167 + 30<i32>:byte], byte, word32) == a5_30 l2303F4B0
l2303F4B0:
l2303F45A:
	Mem34[s0_167 + 30<i32>:byte] = SLICE(a5_30, byte, 0)
	word32 a5_35 = CONVERT(Mem34[s0_167 + 26<i32>:uint16], uint16, word32)
	branch (a5_35 & 1<i32>) == 0<32> l2303F480
l2303F468:
	Mem38[s0_167 + 26<i32>:word16] = SLICE(a5_35 | 2<i32>, word16, 0)
	word32 a4_492
	word32 s9_495
	word32 s11_497
	word32 s10_496
	word32 s8_494
	word32 s6_493
	ra_129 = tcp_output(ra_129, s1_100, s0_167, a2, s7, mstatus, dwArg38, dwArg48, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s0_167, out s1_100, out a0, out a2, out a3_144, out a4_492, out s2_101, out s3_102, out s4_103, out s5, out s6_493, out s7, out s8_494, out s9_495, out s10_496, out s11_497, out mstatus)
	Mem76[s0_167 + 26<i32>:word16] = SLICE(CONVERT(Mem38[s0_167 + 26<i32>:uint16], uint16, word32) & 0xFFFFFFFC<32>, word16, 0)
l2303F480:
	word32 a5_119 = CONVERT(Mem78[s0_167 + 26<i32>:uint16], uint16, word32)
	branch (a5_119 & 8<i32>) == 0<32> l2303F496
l2303F48A:
	Mem82[s0_167 + 26<i32>:word16] = SLICE(a5_119 & 0xFFFFFFF7<32>, word16, 0)
	word32 s8_500
	word32 s10_502
	word32 s11_503
	word32 s9_501
	word32 a4_498
	word32 s6_499
	ra_129 = tcp_close_shutdown_fin(ra_129, s1_100, s0_167, a3_144, s7, mstatus, dwLoc0C, dwArg08, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s1_100, out a0, out a2, out a3_144, out a4_498, out a5_119, out s2_101, out s3_102, out s4_103, out s5, out s6_499, out s7, out s8_500, out s9_501, out s10_502, out s11_503, out mstatus)
l2303F496:
	word32 s0_123 = Mem120[s1_100 + 12<i32>:word32]
	branch a5_119 == 0<32> l2303F4AC
l2303F49C:
	Mem128[s3_102 + 1924<i32>:byte] = 0<8>
	word32 s11_510
	word32 a4_505
	word32 s8_507
	word32 s9_508
	word32 s10_509
	word32 s6_506
	word32 s0_504
	ra_129 = tcp_process_refused_data(ra_129, s1_100, s0_123, s3_102, s4_103, s7, mstatus, s2, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg58, s1, ra, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, out s0_504, out s1_100, out a0, out a2, out a3_144, out a4_505, out s2_101, out s3_102, out s4_103, out s5, out s6_506, out s7, out s8_507, out s9_508, out s10_509, out s11_510, out mstatus)
	branch CONVERT(Mem128[s3_102 + 1924<i32>:byte], byte, word32) != 0<32> l2303F438
l2303F4AC:
	s0_167 = s1_100
l2303F43E:
	s1Out = s1_100
	a0Out = a0
	a3Out = a3_144
	s5Out = s5
	s7Out = s7
	mstatusOut = mstatus
	return ra_129
tcp_fasttmr_exit:


word32 tcp_slowtmr(word32 ra, word32 a0, word32 a2, word32 a3, word32 s5, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArg010C, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +010C:[0..31]
// LiveOut: a3 a4 mstatus s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_slowtmr_entry:
l2303F4B4:
	Mem35[0x4201A774<32>:word32] = Mem5[0x4201A774<32>:int32] + 1<32>
	Mem40[0x4200E321<32>:byte] = SLICE(CONVERT(Mem35[0x4200E321<32>:byte], byte, word32) + 1<32>, byte, 0)
	word32 s2_222 = 0x4201A000<32>
	word32 a4_17 = 0x4200E321<32>
	word32 s5_225 = 0x4200E321<32>
	word32 s7_178 = 0x4201A000<32>
	word32 s8_228 = 0x2307AC68<32>
	word32 s9_229 = 0x230827B4<32>
	ra_162 = ra
	mstatus_194 = mstatus
	a0_208 = a0
	a3_211 = a3
l2303F508:
	word32 mstatus_718
	word32 a0_716
	word32 a2_714
	word32 a3_710
	word32 a3_211
	word32 a0_208
	word32 mstatus_194
	word32 ra_162
	word32 s6_226 = 0x4201A000<32>
	word32 s0_100 = Mem46[0x4201A77C<32>:int32]
	word32 s10_124 = 0x7FFFFFE<32>
	word32 s3_223 = 0<32>
	word32 s4_224 = 0x7FFFFFF<32>
l2303F51A:
	word32 sp_204 = fp - 80<i32>
	branch s0_100 != 0<32> l2303F54C
l2303F54C:
	word32 s11_583
	word32 a5_55 = CONVERT(Mem54[s5_225:byte], byte, word32)
	a4_17 = CONVERT(Mem54[s0_100 + 30<i32>:byte], byte, word32)
	branch a4_17 != a5_55 l2303F562
l2303F562:
	word32 a4_61
	a3_211 = CONVERT(Mem54[s0_100 + 20<i32>:byte], byte, word32)
	Mem58[s0_100 + 30<i32>:byte] = SLICE(a5_55, byte, 0)
	word32 a5_60 = CONVERT(Mem58[s0_100 + 66<i32>:byte], byte, word32)
	branch a3_211 != 2<32> l2303F5B8
l2303F5B8:
	a4_61 = 0xB<32>
l2303F574:
	a4_61 = 5<32>
l2303F576:
	word32 s1_219 = 1<32>
	branch a4_61 <u a5_60 l2303F5CC
l2303F57C:
	word32 s1_68 = CONVERT(Mem58[s0_100 + 161<i32>:byte], byte, word32)
	branch s1_68 == 0<32> l2303F6D0
l2303F6D0:
	word32 a5_69 = CONVERT(Mem58[s0_100 + 48<i32>:int16], int16, int32)
	branch a5_69 < 0<32> l2303F770
l2303F6D8:
	branch a5_69 != s4_224 l2303F76A
l2303F76A:
	Mem73[s0_100 + 48<i32>:word16] = SLICE(a5_69 + 1<32>, word16, 0)
l2303F770:
	a4_61 = CONVERT(Mem75[s0_100 + 48<i32>:int16], int16, int32)
	a5_69 = CONVERT(Mem75[s0_100 + 64<i32>:int16], int16, int32)
	branch a4_61 < a5_69 l2303F5CA
l2303F77C:
l2303F6DC:
	word32 a5_88
	word32 s1_90
	word32 a4_2060
	s0_100 = tcp_rexmit_rto_prepare(s1_68, a4_61, a5_69, out s1_90, out a0_208, out a2, out a3_211, out a4_2060, out a5_88, out s2_222, out s3_223, out s4_224, out s8_228)
	branch a0_208 == 0<32> l2303F6F0
l2303F6E4:
	s0_100 = Mem97[a5_88 + 112<i32>:word32]
	branch a5_88 != 0<32> l2303F5CA
l2303F6EA:
	s0_100 = Mem97[a5_88 + 108<i32>:word32]
	branch a5_88 == 0<32> l2303F5CA
l2303F6F0:
	branch CONVERT(Mem97[s0_100 + 20<i32>:byte], byte, word32) == 2<32> l2303F72A
l2303F6FA:
	word32 a5_108 = (CONVERT(Mem97[s0_100 + 60<i32>:int16], int16, int32) >> 3<i32>) + CONVERT(Mem97[s0_100 + 62<i32>:int16], int16, int32)
	word32 a4_109 = CONVERT(Mem97[s0_100 + 66<i32>:byte], byte, word32)
	branch a4_109 <=u 0xC<32> l2303F712
l2303F710:
	a4_109 = 0xC<32>
l2303F712:
	word32 a5_119 = a5_108 << CONVERT(Mem97[(a4_109 & 255<i32>) + s8_228:byte], byte, word32)
	branch s10_124 >= a5_119 l2303F726
l2303F724:
	a5_119 = s4_224
l2303F726:
	Mem132[s0_100 + 64<i32>:word16] = SLICE(a5_119, word16, 0)
l2303F72A:
	word32 a4_135 = CONVERT(Mem134[s0_100 + 72<i32>:uint16], uint16, word32)
	word32 a5_136 = CONVERT(Mem134[s0_100 + 96<i32>:uint16], uint16, word32)
	Mem137[s0_100 + 48<i32>:word16] = 0<16>
	branch a4_135 >=u a5_136 l2303F73C
l2303F73A:
	a5_136 = a4_135
l2303F73C:
	word32 a3_141 = CONVERT(Mem137[s0_100 + 50<i32>:uint16], uint16, word32)
	word32 a5_143 = a5_136 << 16<i32>
	Mem148[s0_100 + 74<i32>:word16] = SLICE(a5_143 >>u 17<i32>, word16, 0)
	word32 a4_149 = a3_141 << 0x11<32> >>u 16<i32>
	branch a5_143 >>u 17<i32> >=u a4_149 l2303F75A
l2303F756:
	Mem150[s0_100 + 74<i32>:word16] = SLICE(a4_149, word16, 0)
l2303F75A:
	Mem153[s0_100 + 72<i32>:word16] = SLICE(a3_141, word16, 0)
	Mem154[s0_100 + 106<i32>:word16] = 0<16>
	word32 a4_2061
	word32 s11_2062
	ra_162 = tcp_rexmit_rto_commit(ra_162, s1_90, s0_100, a2, s7_178, mstatus_194, dwArg08, dwArg18, dwArg38, s7, s5, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, out s0_100, out s1_219, out a0_208, out a2, out a3_211, out a4_2061, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out s10_124, out s11_2062, out mstatus_194)
l2303F584:
	branch CONVERT(Mem58[s0_100 + 162<i32>:byte], byte, word32) >u 0xB<32> l2303F77E
l2303F77E:
	s1_219 = 1<32>
l2303F58E:
	word32 s1_242 = s1_68 + s9_229
	word32 a4_243 = CONVERT(Mem58[s1_242 + -1<i32>:byte], byte, word32)
	word32 a5_244 = CONVERT(Mem58[s0_100 + 160<i32>:byte], byte, word32)
	branch a5_244 <u a4_243 l2303F5BC
l2303F5BC:
	word32 a5_246 = a5_244 + 1<32> & 255<i32>
	Mem247[s0_100 + 160<i32>:byte] = SLICE(a5_246, byte, 0)
	branch a5_246 >=u a4_243 l2303F59C
l2303F59C:
	branch CONVERT(Mem249[s0_100 + 96<i32>:uint16], uint16, word32) == 0<32> l2303F6B2
l2303F6B2:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg72 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg296 = <invalid>
	tcp_zero_window_probe(ra, a0, s4, s7, mstatus, stackArg72, stackArg88, stackArg120, stackArg136, stackArg152, stackArg184, stackArg200, stackArg248, stackArg296)
	a0_208 = s0_100
	branch s0_100 != 0<32> l2303F5CA
l2303F5A4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg88 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg264 = <invalid>
	tcp_split_unsent_seg(ra, s0, a1, a3, a4, mstatus, stackArg88, stackArg104, stackArg136, stackArg152, stackArg168, stackArg200, stackArg216, stackArg264)
	a0_208 = s0_100
	branch s0_100 != 0<32> l2303F6BA
l2303F5AE:
	word32 s1_2029
	word32 a4_2030
	word32 s11_2031
	ra_162 = tcp_output(ra_162, s1_242, s0_100, a2, s7_178, mstatus_194, dwArg08, dwArg18, dwArg38, s7, s5, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, out s0_100, out s1_2029, out a0_208, out a2, out a3_211, out a4_2030, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out s10_124, out s11_2031, out mstatus_194)
	branch a0_208 == 0<32> l2303F5CA
l2303F5B6:
l2303F6BA:
	word32 a5_293 = CONVERT(Mem249[s0_100 + 161<i32>:byte], byte, word32)
	Mem294[s0_100 + 160<i32>:byte] = 0<8>
	branch a5_293 >u 6<32> l2303F5CA
l2303F6C8:
	Mem297[s0_100 + 161<i32>:byte] = SLICE(a5_293 + 1<32>, byte, 0)
l2303F5CA:
	s1_219 = 0<32>
l2303F5CC:
	word32 a5_303 = CONVERT(Mem301[s0_100 + 20<i32>:byte], byte, word32)
	branch a5_303 != 6<32> l2303F5F4
l2303F5D6:
	branch (CONVERT(Mem301[s0_100 + 26<i32>:uint16], uint16, word32) & 0x10<32>) == 0<32> l2303F5F4
l2303F5DE:
	s0_100 = Mem301[a3_211 + 32<i32>:word32]
	a3_211 = 40<i32>
	branch Mem301[s2_222 + 1908<i32>:int32] - a3_211 <=u 40<i32> l2303F5F4
l2303F5EE:
	s1_219 = s1_219 + 1<32> & 255<i32>
l2303F5F4:
	word32 s11_329 = CONVERT(Mem301[s0_100 + 9<i32>:byte], byte, word32)
	word32 s11_330 = s11_329 & 8<i32>
	branch (s11_329 & 8<i32>) == 0<32> l2303F63C
l2303F600:
	branch a5_303 == 4<32> l2303F60E
l2303F606:
	s11_330 = 0<32>
	branch a5_303 != 7<32> l2303F63C
l2303F60E:
	a0_208 = Mem301[s0_100 + 152<i32>:int32]
	word32 a1_339 = Mem301[s0_100 + 148<i32>:int32]
	a2 = 500<i32>
	word32 s0_346 = Mem301[a5_303 + 32<i32>:word32]
	a3_211 = Mem301[s2_222 + 1908<i32>:int32] - a5_303
	branch a0_208 + Mem301[s0_100 + 156<i32>:int32] + a1_339 >>u 500<i32> >=u a3_211 l2303F782
l2303F782:
	word32 a5_353 = CONVERT(Mem301[s0_346 + 163<i32>:byte], byte, word32) + a0_208 + a1_339
	s11_330 = 0<32>
	a5_303 = a5_353 >>u 500<i32>
	branch a5_353 >>u 500<i32> >=u a3_211 l2303F63C
l2303F796:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg16 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg296 = <invalid>
	tcp_keepalive(ra, s0, a0, s7, mstatus, stackArg16, stackArg88, stackArg104, stackArg136, stackArg152, stackArg168, stackArg200, stackArg216, stackArg248, stackArg264, stackArg296)
	a0_208 = s0_346
	branch s0_346 != 0<32> l2303F63C
l2303F7A0:
	word32 a5_356 = CONVERT(Mem301[s0_346 + 163<i32>:byte], byte, word32)
	Mem358[s0_346 + 163<i32>:byte] = SLICE(a5_356 + 1<32>, byte, 0)
	a5_303 = a5_356 + 1<32>
l2303F634:
	s1_219 = s1_219 + 1<32> & 255<i32>
	s11_330 = 1<32>
l2303F63C:
	s0_100 = Mem365[a5_303 + 116<i32>:word32]
	branch a5_303 == 0<32> l2303F65C
l2303F640:
	s0_100 = Mem365[a5_303 + 32<i32>:word32]
	a3_211 = 6<32>
	word32 a4_371 = Mem365[s2_222 + 1908<i32>:int32] - a5_303
	word32 a5_372 = CONVERT(Mem365[s0_100 + 64<i32>:int16], int16, int32)
	branch a4_371 <u a5_372 + 6<32> l2303F65C
l2303F656:
	word32 a4_2032
	s1_219 = tcp_free_ooseq(ra_162, 6<32>, a4_371, a5_372 + 6<32>, s4_224, mstatus_194, dwArg98, out a0_208, out a2, out a3_211, out a4_2032)
l2303F65C:
	word32 a5_411 = CONVERT(Mem365[s0_100 + 20<i32>:byte], byte, word32)
	branch a5_411 != 3<32> l2303F7AC
l2303F7AC:
	word32 a5_422
	word32 a4_423
	branch a5_411 != 9<32> l2303F81A
l2303F81A:
	word32 a4_414 = 5<32>
	branch a5_411 == 5<32> l2303F826
l2303F820:
	a4_414 = 8<32>
	branch a5_411 != 8<32> l2303F67C
l2303F826:
	s0_100 = Mem365[a4_414 + 32<i32>:word32]
	a5_422 = Mem365[s2_222 + 1908<i32>:int32] - a4_414
	a4_423 = 0xA<32>
l2303F7B2:
	s0_100 = Mem365[0x29<32>:word32]
	a5_422 = Mem365[s2_222 + 1908<i32>:int32] - 9<32>
	a4_423 = 240<i32>
l2303F7BE:
	branch a4_423 >=u a5_422 l2303F67C
l2303F666:
	s0_100 = Mem365[0x23<32>:word32]
	branch Mem365[s2_222 + 1908<i32>:int32] <=u 0x2B<32> l2303F67C
l2303F676:
	s1_219 = s1_219 + 1<32> & 255<i32>
l2303F67C:
	branch s1_219 != 0<32> l2303F7C2
l2303F7C2:
	word32 a1_479
	word32 a2_480
	word32 a0_2035
	word32 a5_477
	word32 a4_476
	word32 a3_481
	tcp_pcb_purge(ra_162, s0_100, a3_211, s4_224, mstatus_194, dwArg88, dwArg98, dwArgC8, out a0_2035, out a1_479, out a2_480, out a3_481, out a4_476, out a5_477)
	branch s3_223 == 0<32> l2303F832
l2303F832:
	Mem516[s6_226 + 1916<i32>:word32] = a5_477
l2303F7D2:
	Mem517[s3_223 + 12<i32>:word32] = a5_477
l2303F7D6:
	branch s11_330 == 0<32> l2303F7F2
l2303F7DA:
	word32 a0_2038
	word32 s0_2036
	word32 s1_2037
	ra_162 = tcp_rst(ra_162, Mem526[a1_479 + 80<i32>:word32], a1_479, a2_480, s7_178, mstatus_194, dwLoc08, dwArg08, dwArg28, dwArg38, s7, s5, dwArg68, dwArg78, dwArgA8, dwArgD8, out s0_2036, out s1_2037, out a0_2038, out a3_481, out a4_476, out a5_477, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out mstatus_194)
l2303F7F2:
	word32 s0_581 = Mem526[a5_477 + 16<i32>:word32]
	s11_583 = Mem526[s0_581 + 12<i32>:int32]
	word32 a1_2039
	word32 a5_596
	word32 s1_597 = tcp_free(s0_581, a3_481, a4_476, mstatus_194, out a0_208, out a1_2039, out a2, out a3_211, out a4_17, out a5_596)
	Mem600[s7_178 + 1924<i32>:byte] = 0<8>
	branch s1_597 == 0<32> l2303F816
l2303F806:
	call s1_597 (retsize: 0;)
		uses: a0:a5_596,a3:a3_594,a4:a4_595,mstatus:mstatus_586
		defs: a0:a0_604,a2:a2_606,a3:a3_607,a4:a4_608
	branch CONVERT(Mem600[s7_178 + 1924<i32>:byte], byte, word32) != 0<32> l2303F508
l2303F816:
	s0_100 = s3_223
l2303F680:
	a4_17 = CONVERT(Mem365[s0_100 + 29<i32>:byte], byte, word32)
	s11_583 = Mem365[s0_100 + 12<i32>:int32]
	word32 a5_621 = CONVERT(Mem365[s0_100 + 28<i32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem622[s0_100 + 28<i32>:byte] = SLICE(a5_621, byte, 0)
	branch a5_621 <u a4_17 l2303F55C
l2303F69A:
	word32 a5_623 = Mem622[s0_100 + 140<i32>:int32]
	Mem624[s0_100 + 28<i32>:byte] = 0<8>
	Mem625[s7_178 + 1924<i32>:byte] = 0<8>
	branch a5_623 != 0<32> l2303F838
l2303F838:
	word32 s0_638 = Mem625[a0_208 + 16<i32>:word32]
	word32 a7_719
	word32 t1_720
	word32 t4_721
	word32 t5_722
	word32 t6_723
	call a5_623 (retsize: 0;)
		uses: a0:a0_716,a1:s0_638,a2:a2_714,a3:a3_710,a7:a7_719,mstatus:mstatus_718,ra:ra_377,s0:s0_638,s1:s1_438,s10:s10_687,s11:s11_619,s2:s2_314,s3:s3_490,s4:s4_389,s5:s5_646,s6:s6_505,s7:s7_544,s8:s8_660,s9:s9_674,t1:t1_720,t4:t4_721,t5:t5_722,t6:t6_723
		defs: a0:a0_716,a2:a2_714,a3:a3_710,a4:a4_701,a7:a7_719,mstatus:mstatus_718,ra:ra_702,s0:s0_703,s1:s1_704,s10:s10_708,s11:s11_709,s2:s2_695,s4:s4_706,s5:s5_697,s6:s6_707,s7:s7_698,s8:s8_699,s9:s9_700,sp:sp_694,t1:t1_720,t4:t4_721,t5:t5_722,t6:t6_723
	mstatus_194 = mstatus_718
	a2 = a2_714
	a0_208 = a0_716
	a3_211 = a3_710
	branch CONVERT(Mem625[s7_178 + 1924<i32>:byte], byte, word32) != 0<32> l2303F508
l2303F846:
	mstatus_194 = mstatus_718
	a2 = a2_714
	a0_208 = a0_716
	a3_211 = a3_710
	branch a0_716 != 0<32> l2303F55C
l2303F84A:
	a2 = a2_714
	mstatus_194 = mstatus_718
l2303F6AA:
	word32 s1_2033
	word32 s3_2034
	ra_162 = tcp_output(ra_162, s1_219, s0_100, a2, s7_178, mstatus_194, Mem625[sp_204 + 88<i32>:word32], Mem625[sp_204 + 104<i32>:word32], Mem625[sp_204 + 136<i32>:word32], Mem625[sp_204 + 148<i32>:word32], Mem625[sp_204 + 152<i32>:word32], Mem625[sp_204 + 168<i32>:word32], Mem625[sp_204 + 184<i32>:word32], Mem625[sp_204 + 200<i32>:word32], Mem625[sp_204 + 204<i32>:word32], Mem625[sp_204 + 216<i32>:word32], Mem625[sp_204 + 232<i32>:word32], Mem625[sp_204 + 264<i32>:word32], Mem625[sp_204 + 268<i32>:word32], Mem625[sp_204 + 280<i32>:word32], out s0_100, out s1_2033, out a0_208, out a2, out a3_211, out a4_17, out s2_222, out s3_2034, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out s10_124, out s11_583, out mstatus_194)
l2303F558:
	s11_583 = Mem54[s0_100 + 12<i32>:int32]
l2303F55C:
	s3_223 = s0_100
	s0_100 = s11_583
l2303F51C:
	word32 s1_780 = Mem54[0x4201A770<32>:int32]
l2303F52A:
	branch s1_780 != 0<32> l2303F84C
l2303F84C:
	word32 s1_788 = Mem785[a4_17 + 32<i32>:word32]
	branch Mem785[s2_222 + 1908<i32>:int32] - a4_17 <=u 240<i32> l2303F868
l2303F868:
	s0_100 = s1_788
	s1_780 = Mem785[s1_788 + 12<i32>:word32]
l2303F858:
	word32 a4_798
	word32 a5_799
	word32 a3_803
	word32 a1_2014
	word32 a2_2015
	word32 a0_2013
	tcp_pcb_purge(ra_162, s1_788, a3_211, 240<i32>, mstatus_194, dwArg88, dwArg98, dwArgC8, out a0_2013, out a1_2014, out a2_2015, out a3_803, out a4_798, out a5_799)
	word32 s1_806 = Mem785[a5_799 + 12<i32>:word32]
	branch s0_100 != 0<32> l2303F86E
l2303F86E:
	Mem808[a5_799 + 12<i32>:word32] = s0_100
l2303F862:
	Mem810[0x4201A770<32>:word32] = a5_799
l2303F870:
	word32 s5_813 = Mem812[s1_806 + 12<i32>:int32]
	word32 a0_2016
	word32 a2_2018
	word32 a5_2019
	word32 a1_2017
	tcp_free(s1_806, a3_803, a4_798, mstatus_194, out a0_2016, out a1_2017, out a2_2018, out a3_211, out a4_17, out a5_2019)
	s1_780 = s5_813
l2303F52E:
	0<32> = dwArg010C
	a3Out = s2
	a4Out = a4_17
	mstatusOut = mstatus_194
	return dwLoc4C
tcp_slowtmr_exit:


word32 tcp_tmr(word32 ra, word32 s1, word32 a2, word32 s2, word32 s3, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg010C, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_tcp_timer
// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +010C:[0..31]
// LiveOut: a3 a4 mstatus s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_tmr_entry:
l2303F87E:
	word32 a0_12
	word32 a3_15
	word32 mstatus_20
	word32 s1_23
	word32 s5_29
	word32 s7_31
	word32 ra_21 = tcp_fasttmr(ra, s1, a2, s2, s3, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg64, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, out s1_23, out a0_12, out a3_15, out s5_29, out s7_31, out mstatus_20)
	word32 a5_45 = CONVERT(Mem5[0x4200E320<32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem46[0x4200E320<32>:byte] = SLICE(a5_45, byte, 0)
	branch (a5_45 & 1<32>) == 0<32> l2303F8A8
l2303F8A8:
	a3Out = a3_15
	a4Out = 0x4200E320<32>
	mstatusOut = mstatus_20
	return s1_23
l2303F8A0:
l2303F8A4_thunk_tcp_slowtmr:
	word32 a3_55
	word32 a4_56
	word32 mstatus_60
	word32 s1_63 = tcp_slowtmr(ra_21, a0_12, dwArg10, a3_15, s5_29, s7_31, mstatus_20, dwArg08, dwArg18, dwArg28, dwArg38, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArg010C, out a3_55, out a4_56, out mstatus_60)
	a3Out = a3_55
	a4Out = a4_56
	mstatusOut = mstatus_60
	return s1_63
tcp_tmr_exit:


word32 tcp_get_next_optbyte(ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_parseopt.isra.0.part.1
// MayUse: 
// LiveOut: a0 a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
tcp_get_next_optbyte_entry:
l2303F8AE:
	word32 a5_6 = CONVERT(Mem0[0x4200E338<32>:uint16], uint16, word32)
	Mem8[0x4200E338<32>:word16] = SLICE(a5_6 + 1<i32>, word16, 0)
	word32 a4_10 = Mem8[0x4200E344<32>:int32]
	branch a4_10 == 0<32> l2303F8D8
l2303F8CC:
	word32 a3_12 = CONVERT(Mem8[0x4200E340<32>:uint16], uint16, word32)
	branch a5_6 >=u a3_12 l2303F8E8
l2303F8E8:
	word32 a0_16 = CONVERT(Mem8[(a5_6 - a3_12 & 255<i32>) + a4_10:byte], byte, word32)
	a4Out = a4_10
	return a0_16
l2303F8D8:
	word32 a4_19 = Mem8[0x4200E33C<32>:int32]
	word32 a0_22 = CONVERT(Mem8[a5_6 + a4_19 + 20<i32>:byte], byte, word32)
	a4Out = a4_19
	return a0_22
tcp_get_next_optbyte_exit:


word32 tcp_oos_insert_segment(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, ptr32 & s0Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31]
// LiveOut: mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_oos_insert_segment_entry:
l2303F8F6:
	word32 s1_103 = Mem13[a5 + 16<i32>:word32]
	word32 a5_255
	word32 a0_23 = lwip_htons(CONVERT(Mem13[a5 + 12<i32>:byte], byte, word32) | CONVERT(Mem13[a5 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_255)
	word32 s2_105 = a1
	word32 a0_110 = a0_23 & 1<32>
	branch (a0_23 & 1<32>) != 0<32> l2303F980
l2303F980:
	word32 a5_260
	word32 a4_259
	word32 a1_257
	word32 a3_258
	word32 a0_256
	s1_103 = tcp_segs_free(ra, s0, a1, a3, a4, s4, mstatus, dwArgD8, out a0_256, out a1_257, out a3_258, out a4_259, out a5_260)
l2303F91C:
l2303F920:
	word32 a4_42 = Mem41[s2_105 + 16<i32>:int32]
	word32 a2_44 = Mem41[0x4200E334<32>:int32]
	word32 a1_57 = CONVERT(Mem41[a4_42 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem41[a4_42 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem41[a4_42 + 4<i32>:byte], byte, word32) | CONVERT(Mem41[a4_42 + 5<i32>:byte], byte, word32) << 8<i32>))
	word32 a5_49 = CONVERT(Mem41[s1_103 + 8<i32>:uint16], uint16, word32) + a2_44
	word32 a3_60 = a5_49 - (CONVERT(Mem41[s2_105 + 8<i32>:uint16], uint16, word32) + a1_57)
	branch a3_60 >= 0<32> l2303F98A
l2303F98A:
	word32 a5_66
	branch (lwip_htons(CONVERT(Mem41[a4_42 + 12<i32>:byte], byte, word32) | CONVERT(Mem41[a4_42 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_66) & 1<32>) == 0<32> l2303F9C4
l2303F99E:
	word32 a5_75
	word32 a0_79 = CONVERT(SLICE(lwip_htons(1<32>, out a5_75) | (CONVERT(Mem41[a5_66 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem41[a5_66 + 12<i32>:byte], byte, word32)), word16, 0), word16, word32)
	Mem80[a5_75 + 12<i32>:byte] = SLICE(a0_79, byte, 0)
	Mem82[a5_75 + 13<i32>:byte] = SLICE(a0_79 >>u 8<i32>, byte, 0)
l2303F9C4:
	s0 = Mem84[s2_105:int32]
	word32 a5_274
	word32 a3_272
	word32 a4_273
	word32 a2_271
	word32 a1_270
	s1_103 = tcp_seg_free(ra, s2_105, a3_60, a4_42, s4, mstatus, dwArgE8, out a0_110, out a1_270, out a2_271, out a3_272, out a4_273, out a5_274)
	branch s0 == 0<32> l2303F986
l2303F986:
	s2_105 = 0<32>
l2303F9D0:
	s2_105 = s0
l2303F958:
	branch a5_49 - a1_57 <= 0<32> l2303F96E
l2303F95E:
	word32 a1_112 = CONVERT(SLICE(a1_57 - a2_44, word16, 0), word16, word32)
	Mem113[Mem41[a0_110 + 4<i32>:word32] + 8<i32>:word16] = SLICE(a1_112, word16, 0)
	word32 s8_269
	word32 s6_268
	word32 s4_266
	word32 s5_267
	word32 s3_265
	word32 a4_263
	word32 a5_264
	word32 a3_262
	word32 a2_261
	ra = pbuf_realloc(ra, a0_110, a1_112, a3_60, a4_42, s4, mstatus, dwArgF8, out s1_103, out a2_261, out a3_262, out a4_263, out a5_264, out s2_105, out s3_265, out s4_266, out s5_267, out s6_268, out s8_269, out mstatus)
l2303F96E:
	Mem147[s1_103:word32] = s2_105
	s0Out = s0
	mstatusOut = mstatus
	return ra
tcp_oos_insert_segment_exit:


word32 tcp_parseopt.isra.0.part.1(word32 a0, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a0:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 s0 s1 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
tcp_parseopt.isra.0.part.1_entry:
l2303F9D4:
	Mem21[0x4200E338<32>:word16] = 0<16>
	a0_156 = a0
l2303FA08:
	word32 a0_156
	word32 s0_37 = CONVERT(Mem36[0x4200E348<32>:uint16], uint16, word32)
	branch CONVERT(Mem36[0x4200E338<32>:uint16], uint16, word32) <u s0_37 l2303FA2C
l2303FA2C:
	a0_156 = tcp_get_next_optbyte(out a4)
	branch a0_156 == 1<32> l2303FA08
l2303FA34:
	branch CONVERT(SLICE(a0_156, byte, 0), byte, int32) == 0<32> l2303FA14
l2303FA3C:
	branch a0_156 != 2<32> l2303FA7E
l2303FA7E:
	a0_156 = tcp_get_next_optbyte(out a4)
	branch a0_156 <=u 1<32> l2303FA14
l2303FA86:
	Mem56[0x4200E338<32>:word16] = SLICE(CONVERT(Mem36[0x4200E338<32>:uint16], uint16, word32) + 0xFFFFFFFE<32> + a0_156, word16, 0)
l2303FA40:
	a0_156 = tcp_get_next_optbyte(out a4)
	branch a0_156 != 4<32> l2303FA14
l2303FA48:
	branch CONVERT(Mem36[0x4200E338<32>:uint16], uint16, word32) + 1<32> >= s0_37 l2303FA14
l2303FA52:
	word32 a4_183
	a0_156 = CONVERT(SLICE(tcp_get_next_optbyte(out a4) | (tcp_get_next_optbyte(out a4_183) << 0x18<32>) >>u 16<i32>, word16, 0), word16, word32)
	branch CONVERT(SLICE(a0_156 + -1<i32>, word16, 0), word16, word32) <=u 687<i32> l2303FA78
l2303FA74:
	a0_156 = 688<i32>
l2303FA78:
	Mem86[a0:word16] = SLICE(a0_156, word16, 0)
l2303FA14:
	0<32> = dwArg0128
	s1Out = 0x4200E338<32>
	a0Out = a0_156
	a4Out = a4
	s2Out = 0x4200E000<32>
	s3Out = a0
	s4Out = dwArg78
	s5Out = 1<32>
	s6Out = 2<32>
	s7Out = 4<32>
	s8Out = s5
	return s4
tcp_parseopt.isra.0.part.1_exit:


word32 tcp_input_delayed_close(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 s7, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_input_delayed_close_entry:
l2303FA94:
	branch (CONVERT(Mem0[0x4200E330<32>:byte], byte, word32) & 0x10<32>) == 0<32> l2303FADA
l2303FADA:
	s1Out = s1
	a0Out = 0<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2303FAA0:
	word32 ra_23
	word32 a5_14 = CONVERT(Mem12[a0 + 26<i32>:uint16], uint16, word32)
	word32 s0_15 = a0
	word32 a5_16 = a5_14 & 0x10<32>
	ra_23 = ra
	branch (a5_14 & 0x10<32>) != 0<32> l2303FABC
l2303FAB0:
	a5_16 = Mem12[a0 + 144<i32>:int32]
	ra_23 = ra
	branch a5_16 == 0<32> l2303FABC
l2303FAB6:
	word32 a2_26
	word32 s1_93
	word32 tp_94
	word32 a6_95
	word32 a7_96
	word32 s10_97
	word32 s11_98
	word32 s2_99
	word32 s3_100
	word32 s5_101
	word32 s6_102
	word32 s8_103
	word32 s9_104
	word32 t0_105
	word32 t1_106
	word32 t3_107
	word32 t4_108
	word32 t5_109
	word32 t6_110
	call a5_16 (retsize: 0;)
		uses: a0:Mem12[a0 + 16<i32>:word32],a1:0xFFFFFFF1<32>,a2:a2_26,a3:a3,a4:a4,a6:a6_95,a7:a7_96,mstatus:mstatus,ra:ra,s0:a0,s1:s1_93,s10:s10_97,s11:s11_98,s2:s2_99,s3:s3_100,s4:s4,s5:s5_101,s6:s6_102,s7:s7,s8:s8_103,s9:s9_104,t0:t0_105,t1:t1_106,t3:t3_107,t4:t4_108,t5:t5_109,t6:t6_110,tp:tp_94
		defs: a2:a2_26,a5:a5_21,a6:a6_95,a7:a7_96,ra:ra_23,s0:s0_22,s1:s1_93,s10:s10_97,s11:s11_98,s2:s2_99,s3:s3_100,s5:s5_101,s6:s6_102,s8:s8_103,s9:s9_104,t0:t0_105,t1:t1_106,t3:t3_107,t4:t4_108,t5:t5_109,t6:t6_110,tp:tp_94
l2303FABC:
	word32 a3_48
	word32 a4_49
	word32 mstatus_55
	word32 s10_57
	word32 s11_58
	word32 s2_59
	word32 s3_60
	word32 s4_61
	word32 s5_62
	word32 s6_63
	word32 s7_64
	word32 s8_65
	word32 s9_66
	word32 s1_207
	word32 a0_208
	word32 ra_56 = tcp_pcb_remove(ra_23, s0_15, a3, a4, a5_16, s4, s7, mstatus, dwArg38, dwArg48, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s1_207, out a0_208, out a3_48, out a4_49, out s2_59, out s3_60, out s4_61, out s5_62, out s6_63, out s7_64, out s8_65, out s9_66, out s10_57, out s11_58, out mstatus_55)
	word32 a3_77
	word32 a4_78
	word32 a0_209
	word32 a1_210
	word32 a2_211
	word32 a5_212
	s1Out = tcp_free(s0_15, a3_48, a4_49, mstatus_55, out a0_209, out a1_210, out a2_211, out a3_77, out a4_78, out a5_212)
	a0Out = 1<32>
	a2Out = dwArg10
	a3Out = a3_77
	a4Out = a4_78
	s2Out = s2_59
	s3Out = s3_60
	s4Out = s4_61
	s5Out = s5_62
	s6Out = s6_63
	s7Out = s7_64
	s8Out = s8_65
	s9Out = s9_66
	s10Out = s10_57
	s11Out = s11_58
	mstatusOut = mstatus_55
	return ra_56
tcp_input_delayed_close_exit:


word32 tcp_free_acked_segments.isra.3(word32 ra, word32 a0, word32 a1, word32 a4, word32 mstatus, word32 dwArgE8, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a1 a2 a4 a5 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
tcp_free_acked_segments.isra.3_entry:
l2303FADE:
	word32 s0_21 = a1
l2303FAFA:
	branch s0_21 == 0<32> l2303FB4A
l2303FAFC:
	word32 a5_41
	word32 a3_151
	word32 a0_38 = lwip_htonl(CONVERT(Mem26[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem26[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem26[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem26[a4 + 4<i32>:byte], byte, word32))), out a3_151, out a4, out a5_41)
	s0_21 = Mem26[a5_41 + 16<i32>:word32]
	word32 s1_44 = CONVERT(Mem26[s0_21 + 8<i32>:uint16], uint16, word32)
	word32 a5_152
	word32 a0_49 = lwip_htons(CONVERT(Mem26[a5_41 + 12<i32>:byte], byte, word32) | CONVERT(Mem26[a5_41 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_152)
	a5 = Mem26[0x4200E324<32>:int32]
	word32 a0_54 = CONVERT((a0_49 & 3<32>) != 0<32>, bool, word32)
	s5 = a0_38
	s1 = s1_44 - a5 + a0_38 + a0_54
	branch s1 <= 0<32> l2303FB5E
l2303FB5E:
	word32 s0_59 = Mem26[s1:word32]
	word32 a0_60 = pbuf_clen(a0_54)
	word32 a3_66 = CONVERT(Mem26[0x4200E32A<32>:uint16], uint16, word32)
	Mem68[a0:word16] = SLICE(CONVERT(Mem26[a0:uint16], uint16, word32) - a0_60, word16, 0)
	Mem73[0x4200E32A<32>:word16] = SLICE(CONVERT(Mem68[s0_59 + 8<i32>:uint16], uint16, word32) + a3_66, word16, 0)
	s0_21 = s1
	word32 a0_153
	word32 a2_154
	word32 a3_155
	s1 = tcp_seg_free(ra, s0_59, a3_66, 0x4200E32A<32>, 0x4200E000<32>, mstatus, dwArgE8, out a0_153, out a1, out a2_154, out a3_155, out a4, out a5)
l2303FB4A:
	a0Out = s0_21
	a1Out = a1
	a2Out = dwArg48
	a4Out = a4
	a5Out = a5
	s2Out = a0
	s3Out = 0x4200E000<32>
	s4Out = dwArg04
	s5Out = s5
	return s1
tcp_free_acked_segments.isra.3_exit:


word32 tcp_receive(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 s5, word32 s7, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s7:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_receive_entry:
l2303FB8E:
	word32 s5_115
	word32 a5_5 = CONVERT(Mem0[0x4200E328<32>:byte], byte, word32)
	word32 s3_113 = 0x4200E334<32>
	word32 s4_114 = 0x4200E34A<32>
	s5_115 = s5
	branch (a5_5 & 0x10<32>) == 0<32> l2303FD18
l2303FBC2:
	word32 a0_33 = Mem26[(a5_5 & 0x10<32>) + 84<i32>:word32]
	word32 a1_32 = Mem26[0x4200E334<32>:int32]
	word32 a6_35 = CONVERT(Mem26[a0_33 + 20<i32>:byte], byte, word32)
	a3 = CONVERT(Mem26[a0_33 + 96<i32>:uint16], uint16, word32)
	a0 = (a5_5 & 0x10<32>) - a1_32
	word32 a4_105 = Mem26[0x4200E324<32>:int32]
	s1 = 0x4200E324<32>
	branch a0 < 0<32> l2303FC10
l2303FBE6:
	branch (a5_5 & 0x10<32>) != a1_32 l2303FBF2
l2303FBEA:
	branch a2 - a4_105 < 0<32> l2303FC10
l2303FBF2:
	branch a2 != a4_105 l2303FC3A
l2303FBF6:
	a0 = Mem26[0x4200E33C<32>:int32]
	branch a3 >=u (CONVERT(Mem26[a0 + 15<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem26[a0 + 14<i32>:byte], byte, word32)) l2303FC3A
l2303FC10:
	word32 a0_55 = Mem26[0x4200E33C<32>:int32]
	a0 = CONVERT(Mem26[a0 + 98<i32>:uint16], uint16, word32)
	word32 a5_62 = CONVERT(Mem26[a0_55 + 15<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem26[a0_55 + 14<i32>:byte], byte, word32)
	Mem63[a0 + 96<i32>:word16] = SLICE(a5_62, word16, 0)
	branch a0 >=u a5_62 l2303FC36
l2303FC32:
	Mem64[a0 + 98<i32>:word16] = SLICE(a5_62, word16, 0)
l2303FC36:
	Mem69[a1_32 + 84<i32>:word32] = a0
	Mem72[a4_105 + 88<i32>:word32] = a0
l2303FC3A:
	word32 a5_106
	word32 s0_319 = Mem74[a1_32 + 68<i32>:word32]
	word32 a5_77 = a4_105 - a1_32
	branch a5_77 > 0<32> l2303FF62
l2303FF62:
	word32 s0_81 = Mem74[a3 + 80<i32>:word32]
	branch a4_105 - a3 > 0<32> l230400B2
l230400B2:
	word32 s8_2946
	ra = tcp_send_empty_ack(ra, s0_81, s0_81, s7, mstatus, dwArg28, dwArg38, s5, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, out s1, out a0, out a2, out a3, out a4_105, out a5_106, out s2, out s3_113, out s4_114, out s5_115, out s6, out s7, out s8_2946, out s9, out mstatus)
l2303FF6C:
	word32 a3_127 = CONVERT(Mem74[s0_81 + 26<i32>:uint16], uint16, word32)
	branch (a3_127 & 4<i32>) == 0<32> l2303FF88
l2303FF76:
	Mem130[s0_81 + 26<i32>:word16] = SLICE(a3_127 & 0xFFFFFFFB<32>, word16, 0)
	word32 a3_131 = CONVERT(Mem130[s0_81 + 74<i32>:uint16], uint16, word32)
	Mem132[s0_81 + 106<i32>:word16] = 0<16>
	Mem133[s0_81 + 72<i32>:word16] = SLICE(a3_131, word16, 0)
l2303FF88:
	word32 a3_136 = CONVERT(Mem135[s0_81 + 60<i32>:int16], int16, int32)
	word32 a2_137 = CONVERT(Mem135[s0_81 + 62<i32>:uint16], uint16, word32)
	Mem139[a4_105 + 68<i32>:word32] = s0_81
	Mem142[s0_81 + 64<i32>:word16] = SLICE((a3_136 >> 3<i32>) + a2_137, word16, 0)
	Mem143[s0_81 + 66<i32>:word16] = 0<16>
	word32 a4_144 = 3<32>
	branch a6_35 <=u 3<32> l23040004
l2303FFA4:
	word32 a5_167
	word32 a3_150 = CONVERT(Mem143[s0_81 + 72<i32>:uint16], uint16, word32)
	word32 a5_154 = CONVERT(SLICE(a5_77, word16, 0), word16, word32)
	branch a3_150 >=u CONVERT(Mem143[s0_81 + 74<i32>:uint16], uint16, word32) l2303FFEE
l2303FFEE:
	a4_144 = CONVERT(Mem143[s0_81 + 106<i32>:uint16], uint16, word32)
	word32 a5_158 = CONVERT(SLICE(a5_154 + a4_144, word16, 0), word16, word32)
	branch a5_158 <u a4_144 l23040068
l23040068:
	a5_158 = 0xFFFFFFF<32>
l2303FFFC:
	branch a5_158 >=u a3_150 l2304006C
l2304006C:
	Mem165[s0_81 + 106<i32>:word16] = SLICE(a5_158 - a3_150, word16, 0)
	a5_167 = CONVERT(Mem165[s0_81 + 50<i32>:uint16], uint16, word32) + a3_150
l23040000:
	Mem168[s0_81 + 106<i32>:word16] = SLICE(a5_158, word16, 0)
l2303FFB4:
	word32 a4_176 = CONVERT((CONVERT(Mem143[s0_81 + 26<i32>:uint16], uint16, word32) & 0xFFF800<32>) <u 1<i32>, bool, word32) + 1<32> + CONVERT(Mem143[s0_81 + 50<i32>:uint16], uint16, word32)
	word32 a2_177 = a4_176
	a4_144 = CONVERT(SLICE(a4_176, word16, 0), word16, word32)
	branch a5_154 >=u a4_144 l2303FFDA
l2303FFD8:
	a2_177 = a5_154
l2303FFDA:
	a5_167 = a3_150 + a2_177
l2303FFDE:
	word32 a5_185 = a5_167 << 16<i32>
	word32 a5_186 = a5_185 >>u 16<i32>
	branch a5_185 >>u 16<i32> >=u a3_150 l2303FFE8
l2303FFE6:
	a5_186 = 0xFFFFFFFF<32>
l2303FFE8:
	Mem193[s0_81 + 72<i32>:word16] = SLICE(a5_186, word16, 0)
l23040004:
	word32 a0_227
	word32 s2_231
	word32 a1_237
	word32 a4_239
	word32 s3_2949
	word32 s5_2951
	word32 a2_2947
	word32 a5_2948
	word32 s4_2950
	tcp_free_acked_segments.isra.3(ra, Mem200[a1_32 + 112<i32>:word32] + 102<i32>, a1_32, a4_144, mstatus, dwArgB8, out a0_227, out a1_237, out a2_2947, out a4_239, out a5_2948, out s2_231, out s3_2949, out s4_2950, out s5_2951)
	Mem244[a0_227 + 112<i32>:word32] = Mem200[a1_237 + 108<i32>:word32]
	word32 a4_2953
	word32 a1_2952
	s1 = tcp_free_acked_segments.isra.3(ra, s2_231, a1_237, a4_239, mstatus, dwArgB8, out a0, out a1_2952, out a2, out a4_2953, out a5_106, out s2, out s3_113, out s4_114, out s5_115)
	word32 s0_262 = Mem244[a5_106 + 112<i32>:word32]
	Mem263[a0 + 108<i32>:word32] = s0_262
	Mem264[s0_262 + 28<i32>:byte] = 0<8>
	Mem267[s0_262 + 48<i32>:word16] = SLICE(0<32> - CONVERT(a5_106 <u 1<i32>, bool, word32), word16, 0)
	branch a0 != 0<32> l23040034
l23040030:
	Mem268[s0_262 + 104<i32>:word16] = 0<16>
l23040034:
	Mem275[s0_262 + 100<i32>:word16] = CONVERT(Mem271[s0_262 + 100<i32>:uint16] + Mem271[0x4200E32A<32>:uint16], uint16, uint16)
	a4_105 = CONVERT(Mem275[s0_262 + 26<i32>:uint16], uint16, word32)
	a3 = a4_105 << 0x14<u32>
	branch a4_105 << 0x14<u32> >= 0<32> l2303FCA8
l23040052:
	branch a5_106 != 0<32> l230400AA
l230400AA:
	s2 = Mem275[s0_262 + 76<i32>:int32]
l23040054:
	branch a0 != 0<32> l2304007A
l2304007A:
	s2 = Mem275[s0_262 + 76<i32>:int32]
l23040080:
	a0 = s2 - lwip_htonl(CONVERT(Mem275[a4_105 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem275[a4_105 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem275[a4_105 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem275[a4_105 + 4<i32>:byte], byte, word32))), out a3, out a4_105, out a5_106)
	branch a0 > 0<32> l2303FCA8
l230400A8:
l23040056:
	word32 a5_305 = CONVERT(Mem275[s0_262 + 26<i32>:uint16], uint16, word32)
	Mem309[s0_262 + 26<i32>:word16] = SLICE(a5_305 & 0xFF0007FF<32>, word16, 0)
	a4_105 = 0xFF0007FF<32>
	a5_106 = a5_305 & 0xFF0007FF<32>
l2303FC44:
	a5_106 = CONVERT(Mem74[0x4200E34A<32>:uint16], uint16, word32)
	branch a5_106 != 0<32> l2303FF5C
l2303FC4C:
	s0_319 = Mem74[a0 + 88<i32>:word32]
	a3 = a3 + a2
	a5_106 = CONVERT(Mem74[s0_319 + 96<i32>:uint16], uint16, word32) + a0
	branch a5_106 != a3 l2303FF5C
l2303FC5A:
	a5_106 = CONVERT(Mem74[s0_319 + 48<i32>:int16], int16, int32)
	branch a5_106 < 0<32> l2303FF5C
l2303FC62:
	branch a1_32 != a4_105 l2303FF5C
l2303FF5C:
	Mem327[s0_319 + 67<i32>:byte] = 0<8>
	s5_115 = s5
l2303FC66:
	word32 a5_328 = CONVERT(Mem74[s0_319 + 67<i32>:byte], byte, word32)
	branch a5_328 == 255<i32> l2303FC78
l2303FC72:
	Mem331[s0_319 + 67<i32>:byte] = SLICE(a5_328 + 1<32>, byte, 0)
l2303FC78:
	a4_105 = CONVERT(Mem333[s0_319 + 67<i32>:byte], byte, word32)
	a5_106 = 3<32>
	branch a4_105 <=u 3<32> l2303FC9E
l2303FC9E:
	s5_115 = s5
	branch a4_105 != 3<32> l2303FCA8
l2303FC82:
	word32 a4_336 = CONVERT(Mem333[s0_319 + 72<i32>:uint16], uint16, word32)
	a5_106 = CONVERT(SLICE(CONVERT(Mem333[s0_319 + 50<i32>:uint16], uint16, word32) + a4_336, word16, 0), word16, word32)
	branch a5_106 >=u a4_336 l2303FC98
l2303FC94:
	a5_106 = 0xFFFFFFF<32>
l2303FC98:
	Mem345[s0_319 + 72<i32>:word16] = SLICE(a5_106, word16, 0)
l2303FCA2:
	s1 = tcp_rexmit_fast(0x4200E324<32>, a5_106, out a0, out a2, out a3, out a4_105, out a5_106, out s2, out s3_113, out s4_114)
	s5_115 = s5
l2303FCA8:
	branch a2 == 0<32> l2303FD18
l2303FCAC:
	word32 s0_379 = Mem374[a5_106 + 56<i32>:word32]
	s1 = Mem374[a4_105:word32]
	branch a5_106 - a4_105 >= 0<32> l2303FD18
l2303FCB6:
	word32 a3_384 = CONVERT(Mem374[s0_379 + 60<i32>:int16], int16, int32)
	word32 a4_386 = CONVERT(Mem374[0x4201A774<32>:uint16], uint16, word32)
	word32 a2_387 = a2 << 16<i32>
	word32 a1_390 = a3_384 >> 3<u32> << 16<i32>
	word32 a5_395 = CONVERT(SLICE(a4_386 - (a2_387 >>u 16<i32>) - (a1_390 >>u 16<i32>), word16, 0), word16, word32)
	word32 a5_399 = CONVERT(SLICE(a5_395 + a3_384, word16, 0), word16, int32)
	Mem401[s0_379 + 60<i32>:word16] = SLICE(a5_399, word16, 0)
	a0 = CONVERT(SLICE(a5_395, word16, 0), word16, int32)
	branch a0 >= 0<32> l2303FCF6
l2303FCEC:
	a0 = CONVERT(SLICE((a2_387 >>u 16<i32>) - a4_386 + (a1_390 >>u 16<i32>), word16, 0), word16, int32)
l2303FCF6:
	a3 = CONVERT(Mem401[s0_379 + 62<i32>:int16], int16, int32)
	Mem411[s0_379 + 52<i32>:word32] = 0<32>
	word32 a4_417 = CONVERT(SLICE(a3 - (a3 >> 2<u32>) + a0, word16, 0), word16, word32)
	Mem419[s0_379 + 62<i32>:word16] = SLICE(a4_417, word16, 0)
	Mem420[s0_379 + 64<i32>:word16] = SLICE((a5_399 >> 3<i32>) + a4_417, word16, 0)
l2303FD18:
	word32 a4_1562
	word32 a5_1563
	word32 a5_1564
	word32 a2_430 = CONVERT(Mem429[s4_114:uint16], uint16, word32)
	word32 s0_1434 = Mem429[a3 + 36<i32>:word32]
	word32 a5_450 = Mem429[s3_113:int32]
	branch a2_430 == 0<32> l2304054C
l2303FD26:
	branch CONVERT(Mem429[s0_1434 + 20<i32>:byte], byte, word32) >u 6<32> l2304054C
l2304054C:
	a4_1562 = a5_450 - a3
	branch a4_1562 < 0<32> l23040562
l23040554:
	a4_1562 = CONVERT(Mem429[s0_1434 + 40<i32>:uint16], uint16, word32)
	branch a5_450 + 1<32> - a3 - a4_1562 <= 0<32> l230402DA
l23040562:
	a5_1564 = CONVERT(Mem429[s0_1434 + 26<i32>:uint16], uint16, word32)
l2303FD30:
	word32 a1_465 = a3 - a5_450
	word32 a4_1162 = a1_465 + -1<i32>
	branch a1_465 < 0xFFFFFFFF<32> l230400CC
l2303FD3C:
	a4_1162 = 1<32> - a5_450 - a2_430 + a3
	branch a4_1162 > 0<32> l230400CC
l230400CC:
	branch a5_450 - a3 >= 0<32> l2303FD9C
l230400D2:
	Mem478[s0_1434 + 26<i32>:word16] = SLICE(CONVERT(Mem429[s0_1434 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
l2303FD48:
	word32 a1_483 = CONVERT(SLICE(a1_465, word16, 0), word16, word32)
	Mem491[Mem429[a0 + 4<i32>:word32] + 8<i32>:word16] = SLICE(CONVERT(Mem429[0x420155E0<32>:uint16], uint16, word32) - a1_483, word16, 0)
	word32 a5_496 = CONVERT(SLICE(CONVERT(Mem491[a0 + 8<i32>:uint16], uint16, word32) - a1_483, word16, 0), word16, word32)
l2303FD6E:
	word32 a4_499 = CONVERT(Mem498[a0 + 10<i32>:uint16], uint16, word32)
	branch a4_499 <u a1_483 l230400BA
l230400BA:
	Mem504[a0 + 8<i32>:word16] = SLICE(a5_496, word16, 0)
	Mem505[a0 + 10<i32>:word16] = 0<16>
	a1_483 = CONVERT(SLICE(a1_483 - a4_499, word16, 0), word16, word32)
	a0 = Mem505[a0:word32]
l2303FD76:
	word32 a3_2878
	word32 a5_510
	pbuf_remove_header(a0, a1_483, a2_430, out a1_465, out a3_2878, out a4_1162, out a5_510)
	s1 = Mem498[a4_1162 + 16<i32>:word32]
	Mem518[s3_113:word32] = a5_510
	Mem519[a4_1162 + 4<i32>:byte] = SLICE(a5_510, byte, 0)
	Mem520[a4_1162 + 5<i32>:byte] = SLICE(a5_510 >>u 8<u32>, byte, 0)
	Mem523[a4_1162 + 6<i32>:byte] = SLICE(a5_510 >>u 0x10<u32>, byte, 0)
	Mem524[a4_1162 + 7<i32>:byte] = SLICE(a5_510 >>u 24<i32>, byte, 0)
l2303FD9C:
	word32 a5_528 = Mem527[s3_113:int32]
	word32 s0_531 = Mem527[a4_1162 + 36<i32>:word32]
	branch a5_528 - a4_1162 < 0<32> l23040308
l2303FDAA:
	word32 a2_1161 = CONVERT(Mem527[s0_531 + 40<i32>:uint16], uint16, word32)
	word32 a3_1166 = a5_528 + 1<i32> - a4_1162 - a2_1161
	branch a3_1166 > 0<32> l23040308
l2303FDBC:
	branch a5_528 != a4_1162 l230402F0
l230402F0:
	s0_531 = Mem527[s1 + 116<i32>:word32]
	word32 s2_547 = 0<32>
	branch s1 != 0<32> l23040324
l23040324:
	word32 a3_583
	word32 a4_616
	word32 a1_652
	word32 a5_612
	word32 s1_857
	word32 a3_558 = CONVERT(Mem527[a2_1161 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem527[a2_1161 + 4<i32>:byte], byte, word32) | CONVERT(Mem527[a2_1161 + 6<i32>:byte], byte, word32) << 16<i32>
	word32 s1_551 = Mem527[a2_1161 + 16<i32>:word32]
	word32 a4_561 = CONVERT(Mem527[a2_1161 + 7<i32>:byte], byte, word32) << 24<i32> | a3_558
	branch a5_528 != a4_561 l23040378
l23040378:
	word32 a3_576
	branch s2_547 != 0<32> l23040396
l23040396:
	word32 a7_564 = Mem527[s2_547 + 16<i32>:int32]
	a1_465 = CONVERT(Mem527[a7_564 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem527[a7_564 + 4<i32>:byte], byte, word32) | CONVERT(Mem527[a7_564 + 6<i32>:byte], byte, word32) << 16<i32>
	a3_576 = a5_528 + -1<i32> - (CONVERT(Mem527[a7_564 + 7<i32>:byte], byte, word32) << 24<i32> | a1_465)
	branch a3_576 < 0<32> l23040422
l230403BE:
	a3_576 = a5_528 + 1<i32> - a4_561
	branch a3_576 > 0<32> l23040422
l230403C6:
	word32 a5_2922
	word32 a4_2921
	word32 a0_591
	word32 s1_587
	s0_531 = tcp_seg_copy(s1_551, a1_465, a3_576, a4_561, mstatus, out s1_587, out a0_591, out a3_583, out a4_2921, out a5_2922)
	s4_114 = a0_591
	branch a0_591 == 0<32> l23040308
l230403D6:
	word32 a4_601 = Mem527[s2_547 + 16<i32>:int32]
	a5_612 = CONVERT(Mem527[a4_601 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem527[a4_601 + 4<i32>:byte], byte, word32) | CONVERT(Mem527[a4_601 + 5<i32>:byte], byte, word32) << 8<i32>) | CONVERT(Mem527[a4_601 + 7<i32>:byte], byte, word32) << 24<i32>
	word32 a1_614 = Mem527[s3_113:int32]
	a4_616 = CONVERT(Mem527[s2_547 + 8<i32>:uint16], uint16, word32) + a5_612 - a1_614
	branch a4_616 <= 0<32> l23040418
l23040406:
	word32 a0_619 = Mem527[s2_547 + 4<i32>:int32]
	word32 a1_620 = CONVERT(SLICE(a1_614 - a5_612, word16, 0), word16, word32)
	Mem621[s2_547 + 8<i32>:word16] = SLICE(a1_620, word16, 0)
	word32 s8_2927
	word32 s6_2926
	word32 s3_2924
	word32 s5_2925
	word32 a2_2923
	ra = pbuf_realloc(ra, a0_619, a1_620, a3_583, a4_616, a0_591, mstatus, dwArgE8, out s1_587, out a2_2923, out a3_583, out a4_616, out a5_612, out s2_547, out s3_2924, out s4_114, out s5_2925, out s6_2926, out s8_2927, out mstatus)
l23040418:
	Mem650[s2_547:word32] = s4_114
	a1_652 = s1_587
l2304037C:
	a3_576 = a5_528 - a4_561
	branch a3_576 >= 0<32> l23040422
l23040422:
	word32 s1_657 = Mem527[a3_576:word32]
	s2_547 = s1_657
	branch a3_576 != 0<32> l23040322
l23040322:
l2304042A:
	branch a5_528 - a4_561 <= 0<32> l23040308
l23040430:
	word32 a5_2910
	branch (lwip_htons(CONVERT(Mem527[a2_1161 + 12<i32>:byte], byte, word32) | CONVERT(Mem527[a2_1161 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2910) & 1<32>) != 0<32> l23040308
l23040446:
	word32 a5_2911
	word32 a3_679
	word32 a4_680
	word32 s1_683
	word32 a0_687
	s0_531 = tcp_seg_copy(s1_657, a1_465, a3_576, a4_561, mstatus, out s1_683, out a0_687, out a3_679, out a4_680, out a5_2911)
	Mem696[a0_687:word32] = s1_683
	branch a0_687 == 0<32> l23040308
l23040458:
	word32 a5_708 = CONVERT(Mem696[a4_680 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem696[a4_680 + 4<i32>:byte], byte, word32) | CONVERT(Mem696[a4_680 + 5<i32>:byte], byte, word32) << 8<i32>) | CONVERT(Mem696[a4_680 + 7<i32>:byte], byte, word32) << 24<i32>
	word32 a1_710 = Mem696[s3_113:int32]
	word32 a4_712 = CONVERT(Mem696[Mem696[a4_680 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + a5_708 - a1_710
	branch a4_712 <= 0<32> l23040496
l23040486:
	word32 a1_716 = CONVERT(SLICE(a1_710 - a5_708, word16, 0), word16, word32)
	Mem717[Mem696[a0_687 + 4<i32>:word32] + 8<i32>:word16] = SLICE(a1_716, word16, 0)
	word32 s5_2918
	word32 s6_2919
	word32 a3_2914
	word32 a2_2913
	word32 s1_2912
	word32 a4_2915
	word32 s8_2920
	word32 s2_2917
	word32 a5_2916
	ra = pbuf_realloc(ra, a0_687, a1_716, a3_679, a4_712, s4_114, mstatus, dwArgE8, out s1_2912, out a2_2913, out a3_2914, out a4_2915, out a5_2916, out s2_2917, out s3_113, out s4_114, out s5_2918, out s6_2919, out s8_2920, out mstatus)
l23040496:
	word32 a4_751 = Mem750[s3_113:int32]
	s0_531 = Mem750[a4_751 + 36<i32>:word32]
	word32 a4_757 = CONVERT(Mem750[s0_531 + 40<i32>:uint16], uint16, word32)
	word32 a5_758 = CONVERT(Mem750[s4_114:uint16], uint16, word32) + a4_751 - a4_751 - a4_757
	branch a5_758 <= 0<32> l23040308
l230404AE:
	word32 a5_760 = Mem750[a5_758 + 16<i32>:word32]
	word32 a5_766
	word32 a0_765 = lwip_htons(CONVERT(Mem750[a5_760 + 12<i32>:byte], byte, word32) | CONVERT(Mem750[a5_760 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_766)
	word32 a0_767 = a0_765 & 1<32>
	branch (a0_765 & 1<32>) == 0<32> l23040506
l230404C6:
	word32 a5_769 = Mem750[a5_766 + 16<i32>:word32]
	word32 s2_773 = CONVERT(Mem750[a5_769 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem750[a5_769 + 12<i32>:byte], byte, word32)
	word32 a5_2939
	word32 a5_2938
	word32 a0_787 = CONVERT(SLICE(s2_773 & 0xFC0000FF<32> | lwip_htons(lwip_htons(s2_773, out a5_2938) & 62<i32>, out a5_2939), word16, 0), word16, word32)
	Mem788[a4_757 + 12<i32>:byte] = SLICE(a0_787, byte, 0)
	Mem790[a4_757 + 13<i32>:byte] = SLICE(a0_787 >>u 8<i32>, byte, 0)
	a0_767 = a0_787 >>u 8<i32>
l23040506:
	word32 a3_793 = Mem792[s3_113:int32]
	s0_531 = Mem792[a3_793 + 36<i32>:word32]
	word32 a5_800 = CONVERT(Mem792[s0_531 + 40<i32>:uint16], uint16, word32) - a3_793 + a3_793
	Mem801[a4_757 + 8<i32>:word16] = SLICE(a5_800, word16, 0)
	word32 a2_2929
	word32 a5_813
	word32 s4_827
	word32 s1_2928
	word32 a4_2931
	word32 a3_2930
	word32 s5_2934
	word32 s6_2935
	word32 s8_2936
	word32 s2_2932
	word32 s3_2933
	ra = pbuf_realloc(ra, a0_767, CONVERT(Mem801[a5_800 + 8<i32>:uint16], uint16, word32), a3_793, a4_757, s4_114, mstatus, dwArgE8, out s1_2928, out a2_2929, out a3_2930, out a4_2931, out a5_813, out s2_2932, out s3_2933, out s4_827, out s5_2934, out s6_2935, out s8_2936, out mstatus)
	word32 a5_839 = Mem801[a5_813 + 16<i32>:word32]
	word32 a5_2937
	Mem849[s4_827:word16] = SLICE(CONVERT(Mem801[a5_813 + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem801[a5_839 + 12<i32>:byte], byte, word32) | CONVERT(Mem801[a5_839 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2937) & 3<32>) != 0<32>, bool, word32), word16, 0)
l23040384:
	word32 a0_861
	s0_531 = tcp_seg_copy(s1_551, a1_465, a3_576, a4_561, mstatus, out s1_857, out a0_861, out a3_583, out a4_616, out a5_612)
	branch a0_861 == 0<32> l23040308
l23040392:
	Mem870[a0_861 + 116<i32>:word32] = s0_531
l23040346:
	word32 a4_873 = CONVERT(Mem527[0x420155E0<32>:uint16], uint16, word32)
	branch CONVERT(Mem527[s1_551 + 8<i32>:uint16], uint16, word32) >=u a4_873 l23040308
l2304035A:
	word32 a0_885
	s0_531 = tcp_seg_copy(s1_551, a1_465, a3_558, a4_873, mstatus, out s1_857, out a0_885, out a3_583, out a4_616, out a5_612)
	branch a0_885 == 0<32> l23040308
l23040364:
	branch s2_547 == 0<32> l23040374
l23040374:
	Mem894[a0_885 + 116<i32>:word32] = s0_531
l23040368:
	Mem895[s2_547:word32] = a0_885
l2304036C:
	a1_652 = s1_857
l2304036E:
	ra = tcp_oos_insert_segment(ra, s0_531, a1_652, a3_583, a4_616, a5_612, s4_114, mstatus, dwArgA8, dwArgB8, dwArgC8, out s0_531, out mstatus)
l230402FA:
	word32 s1_2898
	word32 a5_2901
	word32 a0_973
	word32 a4_2900
	word32 a3_2899
	s0_531 = tcp_seg_copy(s1, a1_465, a3_1166, a4_1162, mstatus, out s1_2898, out a0_973, out a3_2899, out a4_2900, out a5_2901)
	Mem982[a0_973 + 116<i32>:word32] = s0_531
l23040308:
	0<32> = dwArg0128
l2304031E_thunk_tcp_send_empty_ack:
	word32 a0_1053
	word32 a3_1056
	word32 a4_1057
	word32 mstatus_1061
	word32 s1_1063
	word32 s2_1064
	word32 s3_1065
	word32 s4_1066
	word32 s5_1067
	word32 s6_1068
	word32 s7_1069
	word32 s8_1070
	word32 s9_1071
	word32 a5_2945
	word32 a2_2944
	word32 ra_1062 = tcp_send_empty_ack(ra, dwArgE4, s0_531, s7, mstatus, s5, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s1_1063, out a0_1053, out a2_2944, out a3_1056, out a4_1057, out a5_2945, out s2_1064, out s3_1065, out s4_1066, out s5_1067, out s6_1068, out s7_1069, out s8_1070, out s9_1071, out mstatus_1061)
	s0Out = <invalid>
	s1Out = s1_1063
	a0Out = a0_1053
	a3Out = a3_1056
	a4Out = a4_1057
	s2Out = s2_1064
	s3Out = s3_1065
	s4Out = s4_1066
	s5Out = s5_1067
	s6Out = s6_1068
	s7Out = s7_1069
	s8Out = s8_1070
	s9Out = s9_1071
	mstatusOut = mstatus_1061
	return ra_1062
l2303FDC0:
	word32 a5_1082 = Mem527[0x420155E8<32>:word32]
	word32 a5_2879
	word32 a0_1092 = CONVERT((lwip_htons(CONVERT(Mem527[a5_1082 + 12<i32>:byte], byte, word32) | CONVERT(Mem527[a5_1082 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2879) & 3<32>) != 0<32>, bool, word32) + CONVERT(Mem527[0x420155E0<32>:uint16], uint16, word32)
	word32 a5_1094 = CONVERT(Mem527[s0_531 + 40<i32>:uint16], uint16, word32)
	word32 a0_1095 = CONVERT(SLICE(a0_1092, word16, 0), word16, word32)
	Mem1096[s4_114:word16] = SLICE(a0_1095, word16, 0)
	branch a5_1094 >=u a0_1095 l2303FEA0
l2303FDFA:
	word32 s1_1097 = Mem1096[a5_1094 + 16<i32>:word32]
	word32 a5_1103
	branch (lwip_htons(CONVERT(Mem1096[a5_1094 + 12<i32>:byte], byte, word32) | CONVERT(Mem1096[a5_1094 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1103) & 1<32>) == 0<32> l2303FE4C
l2303FE10:
	word32 s2_1109 = CONVERT(Mem1096[a5_1103 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem1096[a5_1103 + 12<i32>:byte], byte, word32)
	word32 a5_2882
	word32 a5_2881
	word32 a0_1114 = lwip_htons(lwip_htons(s2_1109, out a5_2881) & 62<i32>, out a5_2882)
	s1_1097 = Mem1096[a4_1162 + 16<i32>:word32]
	word32 a0_1122 = CONVERT(SLICE(s2_1109 & 0xFC0000FF<32> | a0_1114, word16, 0), word16, word32)
	Mem1123[a4_1162 + 12<i32>:byte] = SLICE(a0_1122, byte, 0)
	Mem1125[a4_1162 + 13<i32>:byte] = SLICE(a0_1122 >>u 8<i32>, byte, 0)
l2303FE4C:
	word32 a5_1128 = CONVERT(Mem1127[s0_531 + 40<i32>:uint16], uint16, word32)
	Mem1130[s1_1097 + 8<i32>:word16] = SLICE(a5_1128, word16, 0)
	word32 s1_1131 = Mem1130[a5_1128 + 16<i32>:word32]
	word32 a5_2880
	word32 a0_1136 = lwip_htons(CONVERT(Mem1130[a5_1128 + 12<i32>:byte], byte, word32) | CONVERT(Mem1130[a5_1128 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2880)
	branch (a0_1136 & 2<32>) == 0<32> l2303FE74
l2303FE6A:
	Mem1141[s1_1131 + 8<i32>:word16] = SLICE(CONVERT(Mem1130[s1_1131 + 8<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l2303FE74:
	word32 s6_2886
	word32 s8_2887
	word32 s1_2883
	word32 s5_2885
	word32 s2_2884
	word32 a5_1159
	ra = pbuf_realloc(ra, a0_1136 & 2<32>, CONVERT(Mem1143[s1_1131 + 8<i32>:uint16], uint16, word32), a3_1166, a4_1162, s4_114, mstatus, dwArgE8, out s1_2883, out a2_1161, out a3_1166, out a4_1162, out a5_1159, out s2_2884, out s3_113, out s4_114, out s5_2885, out s6_2886, out s8_2887, out mstatus)
	Mem1194[s4_114:word16] = SLICE(CONVERT(Mem1143[Mem1143[a5_1159 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem1143[a5_1159 + 12<i32>:byte], byte, word32) | CONVERT(Mem1143[a5_1159 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1094) & 3<32>) != 0<32>, bool, word32), word16, 0)
l2303FEA0:
	word32 s0_1197 = Mem1196[a5_1094 + 116<i32>:word32]
	branch a5_1094 == 0<32> l230400EC
l2303FEA6:
	word32 s1_1198 = Mem1196[a5_1094 + 16<i32>:word32]
	word32 a5_1204
	word32 a0_1203 = lwip_htons(CONVERT(Mem1196[a5_1094 + 12<i32>:byte], byte, word32) | CONVERT(Mem1196[a5_1094 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1204)
	word32 a0_1205 = a0_1203 & 1<32>
	branch (a0_1203 & 1<32>) != 0<32> l230400E8
l230400E8:
	s0_1197 = Mem1207[a0_1205 + 116<i32>:word32]
	branch a0_1205 != 0<32> l230400E0
l230400E0:
	word32 a0_1210 = Mem1207[a5_1204:word32]
	Mem1211[a5_1204 + 116<i32>:word32] = s0_1197
	word32 a1_2908
	tcp_seg_free(ra, a0_1210, a3_1166, a4_1162, s4_114, mstatus, dwArgD8, out a0_1205, out a1_2908, out a2_1161, out a3_1166, out a4_1162, out a5_1204)
l2303FEBE:
	word32 s5_1226 = Mem1196[s0_1197 + 116<i32>:int32]
l2303FEC2:
	word32 a1_1229 = Mem1228[s3_113:int32]
	word32 a4_1232 = CONVERT(Mem1228[s4_114:uint16], uint16, word32) + a1_1229
	branch s5_1226 == 0<32> l2303FF56
l2303FED0:
	word32 a3_1234 = Mem1228[s5_1226 + 16<i32>:int32]
	word32 a5_1244 = CONVERT(Mem1228[a3_1234 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem1228[a3_1234 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem1228[a3_1234 + 4<i32>:byte], byte, word32) | CONVERT(Mem1228[a3_1234 + 5<i32>:byte], byte, word32) << 8<i32>))
	a2_1161 = a4_1232 - (CONVERT(Mem1228[s5_1226 + 8<i32>:uint16], uint16, word32) + a5_1244)
	branch a2_1161 >= 0<32> l23040154
l23040154:
	word32 a5_1253
	branch (lwip_htons(CONVERT(Mem1228[a3_1234 + 12<i32>:byte], byte, word32) | CONVERT(Mem1228[a3_1234 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1253) & 1<32>) == 0<32> l230401CA
l23040168:
	word32 a5_1261
	branch (lwip_htons(CONVERT(Mem1228[a5_1253 + 12<i32>:byte], byte, word32) | CONVERT(Mem1228[a5_1253 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1261) & 2<32>) != 0<32> l230401CA
l2304017E:
	word32 a5_1270
	word32 a0_1274 = CONVERT(SLICE(CONVERT(Mem1228[a5_1261 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem1228[a5_1261 + 12<i32>:byte], byte, word32) | lwip_htons(1<32>, out a5_1270), word16, 0), word16, word32)
	Mem1275[a5_1270 + 12<i32>:byte] = SLICE(a0_1274, byte, 0)
	Mem1277[a5_1270 + 13<i32>:byte] = SLICE(a0_1274 >>u 8<i32>, byte, 0)
	word32 a5_2907
	Mem1289[s4_114:word16] = SLICE(CONVERT(Mem1277[Mem1277[a5_1270 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem1277[a5_1270 + 12<i32>:byte], byte, word32) | CONVERT(Mem1277[a5_1270 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2907) & 3<32>) != 0<32>, bool, word32), word16, 0)
l230401CA:
	word32 s2_1292 = Mem1291[s5_1226:int32]
	word32 a1_2903
	word32 a5_2906
	word32 a0_2902
	word32 a4_2905
	word32 a3_2904
	s1_1198 = tcp_seg_free(ra, s5_1226, a3_1234, a4_1232, s4_114, mstatus, dwArgD8, out a0_2902, out a1_2903, out a2_1161, out a3_2904, out a4_2905, out a5_2906)
	s5_1226 = s2_1292
l2303FEFE:
	word32 a4_1312 = a4_1232 - a5_1244
	branch a4_1312 <= 0<32> l2303FF56
l2303FF04:
	word32 a5_1313 = a5_1244 - a1_1229
	Mem1315[s1_1198 + 8<i32>:word16] = SLICE(a5_1313, word16, 0)
	word32 s1_1316 = Mem1315[a5_1313 + 16<i32>:word32]
	word32 a5_2890
	word32 a0_1321 = lwip_htons(CONVERT(Mem1315[a5_1313 + 12<i32>:byte], byte, word32) | CONVERT(Mem1315[a5_1313 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2890)
	branch (a0_1321 & 2<32>) == 0<32> l2303FF2A
l2303FF20:
	Mem1326[s1_1316 + 8<i32>:word16] = SLICE(CONVERT(Mem1315[s1_1316 + 8<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l2303FF2A:
	word32 s1_2891
	word32 a3_2892
	word32 s8_2896
	word32 a4_2893
	word32 s6_2895
	word32 s2_2894
	word32 a5_1338
	ra = pbuf_realloc(ra, a0_1321 & 2<32>, CONVERT(Mem1328[s1_1316 + 8<i32>:uint16], uint16, word32), a3_1234, a4_1312, s4_114, mstatus, dwArgE8, out s1_2891, out a2_1161, out a3_2892, out a4_2893, out a5_1338, out s2_2894, out s3_113, out s4_114, out s5_1226, out s6_2895, out s8_2896, out mstatus)
	word32 a5_2897
	Mem1373[s4_114:word16] = SLICE(CONVERT(Mem1328[Mem1328[a5_1338 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem1328[a5_1338 + 12<i32>:byte], byte, word32) | CONVERT(Mem1328[a5_1338 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2897) & 3<32>) != 0<32>, bool, word32), word16, 0)
l2303FF56:
	Mem1379[s0_1197 + 116<i32>:word32] = s5_1226
l230400EC:
	word32 a3_1384 = CONVERT(Mem1383[s4_114:uint16], uint16, word32)
	word32 a5_1393 = CONVERT(Mem1383[s0_1197 + 40<i32>:uint16], uint16, word32) - a3_1384
	Mem1395[Mem1383[s3_113:int32] + a3_1384 + 36<i32>:word32] = s0_1197
	Mem1396[s0_1197 + 40<i32>:word16] = SLICE(a5_1393, word16, 0)
	word32 a4_2889
	word32 a1_2888
	word32 a5_1406
	tcp_update_rcv_ann_wnd(s0_1197, a2_1161, a3_1384, out a1_2888, out a3, out a4_2889, out a5_1406)
	word32 s1_1408 = Mem1396[a5_1406 + 4<i32>:word32]
	word32 a4_1409 = CONVERT(Mem1396[a5_1406 + 8<i32>:uint16], uint16, word32)
	branch a4_1409 == 0<32> l2304011C
l23040110:
	Mem1411[0x4200E32C<32>:word32] = a5_1406
	Mem1412[s1_1408 + 4<i32>:word32] = 0<32>
	a4_1409 = 0x4200E000<32>
l2304011C:
	s1 = Mem1414[a5_1406 + 16<i32>:word32]
	word32 a5_2909
	word32 a0_1420 = lwip_htons(CONVERT(Mem1414[a5_1406 + 12<i32>:byte], byte, word32) | CONVERT(Mem1414[a5_1406 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2909)
	a0 = a0_1420 & 1<32>
	branch (a0_1420 & 1<32>) == 0<32> l23040146
l23040132:
	word32 a4_1425 = CONVERT(Mem1414[0x4200E330<32>:byte], byte, word32)
	Mem1427[0x4200E330<32>:byte] = SLICE(a4_1425 | 32<i32>, byte, 0)
	a4_1409 = a4_1425 | 32<i32>
l23040146:
	s2 = 0x4200E000<32>
	s5_115 = 4<32>
	s6 = 7<32>
l23040294:
	s0_1434 = Mem1433[s1 + 116<i32>:word32]
	branch s1 == 0<32> l230402BC
l23040298:
	a3 = CONVERT(Mem1433[a4_1409 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem1433[a4_1409 + 4<i32>:byte], byte, word32) | CONVERT(Mem1433[a4_1409 + 6<i32>:byte], byte, word32) << 16<i32>
	s1 = Mem1433[a4_1409 + 16<i32>:word32]
	word32 a5_1446 = CONVERT(Mem1433[a4_1409 + 7<i32>:byte], byte, word32) << 24<i32> | a3
	s0_1434 = Mem1433[a3 + 36<i32>:word32]
	branch a5_1446 == a3 l230401D8
l230401D8:
	Mem1449[s3_113:word32] = a5_1446
	word32 s7_1452 = CONVERT(Mem1449[s1 + 8<i32>:uint16], uint16, word32)
	word32 a5_1456
	word32 a0_1455 = lwip_htons(CONVERT(Mem1449[a4_1409 + 12<i32>:byte], byte, word32) | CONVERT(Mem1449[a4_1409 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1456)
	word32 s0_1457 = Mem1449[a5_1456 + 36<i32>:word32]
	Mem1462[CONVERT((a0_1455 & 3<32>) != 0<32>, bool, word32) + (s7_1452 + a5_1456) + 36<i32>:word32] = s0_1457
	word32 a5_1469
	lwip_htons(CONVERT(Mem1462[a5_1456 + 12<i32>:byte], byte, word32) | CONVERT(Mem1462[a5_1456 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1469)
	s7 = CONVERT(Mem1462[Mem1462[a5_1469 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32)
	word32 a5_2940
	Mem1483[s0_1457 + 40<i32>:word16] = SLICE(CONVERT(Mem1462[s0_1457 + 40<i32>:uint16], uint16, word32) - (CONVERT((lwip_htons(CONVERT(Mem1462[a5_1469 + 12<i32>:byte], byte, word32) | CONVERT(Mem1462[a5_1469 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2940) & 3<32>) != 0<32>, bool, word32) + s7), word16, 0)
	word32 a1_1487
	word32 a3_1488
	word32 a5_2941
	word32 a4_1489
	word32 a0_1486 = tcp_update_rcv_ann_wnd(s0_1457, a2_1161, a3, out a1_1487, out a3_1488, out a4_1489, out a5_2941)
	word32 s1_1492 = Mem1483[a1_1487 + 4<i32>:word32]
	word32 a5_1493 = CONVERT(Mem1483[a1_1487 + 8<i32>:uint16], uint16, word32)
	branch a5_1493 == 0<32> l23040258
l23040248:
	a5_1493 = Mem1483[a0_1486:word32]
	branch a0_1486 == 0<32> l230402CE
l230402CE:
	Mem1495[a1_1487:word32] = a5_1493
l23040250:
	pbuf_cat(a0_1486, a1_1487, a4_1489)
l23040254:
	Mem1497[s1_1492 + 4<i32>:word32] = 0<32>
l23040258:
	word32 a5_1507
	branch (lwip_htons(CONVERT(Mem1500[a5_1493 + 12<i32>:byte], byte, word32) | CONVERT(Mem1500[a5_1493 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1507) & 1<32>) == 0<32> l2304028A
l2304026E:
	Mem1515[0x4200E330<32>:byte] = SLICE(CONVERT(Mem1500[0x4200E330<32>:byte], byte, word32) | 32<i32>, byte, 0)
	a4_1489 = 0x4200E330<32>
	a5_1507 = CONVERT(Mem1515[s0_1457 + 20<i32>:byte], byte, word32)
	branch a5_1507 != 4<32> l2304028A
l23040286:
	Mem1525[s0_1457 + 20<i32>:byte] = 7<8>
l2304028A:
	word32 s1_1528 = Mem1527[a5_1507:word32]
	Mem1531[a5_1507 + 116<i32>:word32] = s0_1457
	word32 a5_2943
	word32 a1_2942
	s1 = tcp_seg_free(ra, s1_1528, a3_1488, a4_1489, 0x4200E000<32>, mstatus, dwArgD8, out a0, out a1_2942, out a2_1161, out a3, out a4_1409, out a5_2943)
l230402BC:
	word32 a5_1561 = CONVERT(Mem1433[s0_1434 + 26<i32>:uint16], uint16, word32)
	a4_1562 = a5_1561 & 1<i32>
	branch (a5_1561 & 1<i32>) == 0<32> l230402D2
l230402D2:
	a5_1563 = a5_1561 | 1<i32>
l230402C6:
	a5_1564 = a5_1561 & 0xFFFFFFFE<32>
l230402C8:
	a5_1563 = a5_1564 | 2<i32>
l230402D6:
	Mem1570[s0_1434 + 26<i32>:word16] = SLICE(a5_1563, word16, 0)
l230402DA:
	0<32> = dwArg0128
	s0Out = <invalid>
	s1Out = s1
	a0Out = a0
	a3Out = a3
	a4Out = a4_1562
	s2Out = s2
	s3Out = s3_113
	s4Out = dwArg78
	s5Out = s5_115
	s6Out = s6
	s7Out = s7
	s8Out = s5
	s9Out = s9
	mstatusOut = mstatus
	return ra
tcp_receive_exit:


