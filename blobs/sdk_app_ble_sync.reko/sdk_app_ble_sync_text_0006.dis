word32 me_build_add_ba_req(word32 a0, word32 a1, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bam_send_air_action_frame
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a4 a5
// Preserved: sp
me_build_add_ba_req_entry:
l230604A4:
	Mem5[a0:byte] = 3<8>
	Mem6[a0 + 1<i32>:byte] = 0<8>
	Mem9[a0 + 2<i32>:byte] = SLICE(CONVERT(Mem6[a1 + 17<i32>:byte], byte, word32), byte, 0)
	word32 a5_17 = CONVERT(Mem9[a1 + 14<i32>:byte], byte, word32) << 1<i32> | CONVERT(Mem9[a1 + 16<i32>:byte], byte, word32) << 2<i32> | CONVERT(Mem9[a1 + 15<i32>:byte], byte, word32) << 6<i32>
	Mem18[a0 + 3<i32>:byte] = SLICE(a5_17, byte, 0)
	Mem20[a0 + 4<i32>:byte] = SLICE(a5_17 >>u 8<i32>, byte, 0)
	word32 a5_21 = CONVERT(Mem20[a1 + 10<i32>:uint16], uint16, word32)
	Mem22[a0 + 5<i32>:byte] = SLICE(a5_21, byte, 0)
	Mem24[a0 + 6<i32>:byte] = SLICE(a5_21 >>u 8<i32>, byte, 0)
	word32 a5_28 = CONVERT(Mem24[a1 + 8<i32>:uint16], uint16, word32) << 20<i32> >>u 16<i32>
	Mem29[a0 + 7<i32>:byte] = SLICE(a5_28, byte, 0)
	Mem31[a0 + 8<i32>:byte] = SLICE(a5_28 >>u 8<i32>, byte, 0)
	a5Out = a5_28 >>u 8<i32>
	return 9<32>
me_build_add_ba_req_exit:


word32 me_build_add_ba_rsp(word32 a0, word32 a2, word32 a3, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bam_send_air_action_frame
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..7] a4:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a4 a5
// Preserved: sp
me_build_add_ba_rsp_entry:
l230604FC:
	Mem5[a0:byte] = 3<8>
	Mem7[a0 + 1<i32>:byte] = 1<8>
	Mem9[a0 + 5<i32>:byte] = SLICE(a2, byte, 0)
	Mem13[a0 + 4<i32>:byte] = SLICE(a4 >>u 8<u32>, byte, 0)
	Mem15[a0 + 2<i32>:byte] = SLICE(a3, byte, 0)
	Mem16[a0 + 3<i32>:byte] = SLICE(a4, byte, 0)
	Mem17[a0 + 6<i32>:byte] = SLICE(a2 >>u 8<i32>, byte, 0)
	branch a4 == 0<32> l23060534
l23060534:
	Mem20[a0 + 7<i32>:byte] = 0xD0<8>
	Mem22[a0 + 8<i32>:byte] = 7<8>
l23060528:
	Mem23[a0 + 7<i32>:byte] = 0<8>
	Mem24[a0 + 8<i32>:byte] = 0<8>
l23060530:
	a5Out = a0 + 7<i32>
	return 9<32>
me_build_add_ba_rsp_exit:


word32 me_build_del_ba(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bam_send_air_action_frame
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
me_build_del_ba_entry:
l23060544:
	Mem5[a0:byte] = 3<8>
	Mem7[a0 + 1<i32>:byte] = 2<8>
	word32 a5_15 = CONVERT(Mem7[a1 + 16<i32>:byte], byte, word32) << 28<i32> >>u 16<i32>
	branch CONVERT(Mem7[a1 + 13<i32>:byte], byte, word32) != 1<32> l23060574
l23060568:
	a5_15 = CONVERT(SLICE(a5_15 | 0xFFF800<32>, word16, 0), word16, word32)
l23060574:
	Mem22[a0 + 2<i32>:byte] = 0<8>
	word32 a5_24 = a5_15 >>u 8<i32>
	Mem26[a0 + 3<i32>:byte] = SLICE(a5_24, byte, 0)
	Mem29[a0 + 4<i32>:byte] = SLICE(a2, byte, 0)
	Mem31[a0 + 5<i32>:byte] = SLICE(a2 >>u 8<i32>, byte, 0)
	a3Out = a0 + 2<i32>
	a5Out = a5_24
	return 6<32>
me_build_del_ba_exit:


void me_extract_rate_set(word32 a0, word32 a1, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
me_extract_rate_set_entry:
l2306058C:
	Mem14[a2:byte] = 0<8>
	word32 a5_120
	word32 a0_22 = mac_ie_find(a0, a1, 1<32>, out a5_120)
	branch a0_22 == 0<32> l23060620
l230605A8:
	word32 a4_23 = CONVERT(Mem14[a0_22 + 1<i32>:byte], byte, word32)
	branch a4_23 >u 0xC<32> l23060620
l230605B2:
	word32 a5_25 = a2 + 1<i32>
	word32 a3_26 = a4_23
l230605BA:
	a3_26 = a3_26 + 0xFFFFFFFF<32>
	branch a3_26 != 0xFFFFFFFF<32> l2306062C
l2306062C:
	a5_25 = a5_25 + 1<32>
	Mem39[a5_25 + 4095<i32>:byte] = SLICE(CONVERT(Mem37[a5_25 - a2 + a0_22:byte], byte, word32), byte, 0)
l230605C0:
	Mem43[a2:byte] = SLICE(a4_23, byte, 0)
	word32 a5_121
	word32 a0_49 = mac_ie_find(a0, a1, 50<i32>, out a5_121)
	branch a0_49 == 0<32> l23060620
l230605D4:
	word32 s1_51 = CONVERT(Mem43[a0_49 + 1<i32>:byte], byte, word32)
	branch CONVERT(Mem43[a2:byte], byte, word32) + s1_51 <= 0xC<32> l230605FC
l230605FC:
	word32 a5_60 = CONVERT(Mem43[a2:byte], byte, word32)
	branch a5_60 + s1_51 > 0xC<32> l23060620
l2306060A:
	word32 a5_65 = 0<32>
l23060612:
	branch s1_51 != a5_65 l2306063E
l2306063E:
	Mem76[a5_60 + 1<i32> + a5_65 + a2:byte] = SLICE(CONVERT(Mem70[a0_49 + 2<32> + a5_65:byte], byte, word32), byte, 0)
	a5_65 = a5_65 + 1<32>
l23060616:
	Mem80[a2:byte] = SLICE(s1_51 + CONVERT(Mem70[a2:byte], byte, word32), byte, 0)
l23060620:
	0<32> = dwArg38
	return
me_extract_rate_set_exit:
l230605E4:
	assert_err()


void me_extract_power_constraint(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_beacon_check
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5
// Preserved: s0 sp
me_extract_power_constraint_entry:
l23060654:
	word32 a5_32
	word32 a0_15 = mac_ie_find(a0, a1, 32<i32>, out a5_32)
	word32 a5_16 = 0<32>
	branch a0_15 == 0<32> l2306066C
l23060668:
	a5_16 = CONVERT(Mem10[a0_15 + 2<i32>:byte], byte, word32)
l2306066C:
	Mem20[a2 + 132<i32>:byte] = SLICE(a5_16, byte, 0)
	return
me_extract_power_constraint_exit:


void me_extract_country_reg(word32 a0, word32 a1, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 tp
// Preserved: s0 sp
me_extract_country_reg_entry:
l23060678:
	word32 a5_118
	word32 a0_19 = mac_ie_find(a0, a1, 7<32>, out a5_118)
	branch a0_19 == 0<32> l230606D8
l2306068C:
	word32 s0_20 = Mem14[a2 + 76<i32>:word32]
	word32 s2_22 = 1<32>
	word32 a0_23 = CONVERT(Mem14[s0_20 + 2<i32>:byte], byte, word32)
	branch a0_23 == 0<32> l2306069A
l23060698:
	s2_22 = 4<32>
l2306069A:
	word32 a3_119
	word32 a4_120
	word32 a5_121
	word32 a0_29 = phy_freq_to_channel(a0_23, CONVERT(Mem14[s0_20:uint16], uint16, word32), out a3_119, out a4_120, out a5_121)
	word32 a2_35 = CONVERT(Mem14[a0_19 + 1<i32>:byte], byte, word32)
	word32 a5_37 = 5<32>
l230606AE:
	branch a2_35 + 1<32> < a5_37 l230606D8
l230606B2:
	word32 a1_42 = a5_37 + a0_19
	word32 a3_44 = CONVERT(Mem14[a1_42:byte], byte, word32)
	word32 a6_45 = CONVERT(Mem14[a1_42 + 1<i32>:byte], byte, word32)
	word32 a4_46 = 0<32>
l230606C0:
	branch a4_46 != a6_45 l230606CC
l230606CC:
	branch a3_44 != (a0_29 & 255<i32>) l230606E4
l230606E4:
	a3_44 = a3_44 + s2_22 & 255<i32>
	a4_46 = a4_46 + 1<32> & 255<i32>
l230606D0:
	Mem61[s0_20 + 4<i32>:byte] = SLICE(CONVERT(Mem14[a1_42 + 2<i32>:byte], byte, word32), byte, 0)
l230606D8:
	0<32> = dwArg38
	return
me_extract_country_reg_exit:
l230606C4:
	a5_37 = a5_37 + 3<32> & 255<i32>


void me_extract_mobility_domain(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: s0 sp
me_extract_mobility_domain_entry:
l230606F2:
	word32 a5_40
	word32 a0_15 = mac_ie_find(a0, a1, 54<i32>, out a5_40)
	branch a0_15 != 0<32> l23060714
l23060714:
	Mem20[a2 + 140<i32>:word16] = SLICE(CONVERT(Mem10[a0_15 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem10[a0_15 + 2<i32>:byte], byte, word32), word16, 0)
	Mem22[a2 + 142<i32>:byte] = SLICE(CONVERT(Mem20[a0_15 + 4<i32>:byte], byte, word32), byte, 0)
l23060704:
	Mem23[a2 + 140<i32>:word16] = 0<16>
	Mem24[a2 + 142<i32>:byte] = 0<8>
l2306070C:
	return
me_extract_mobility_domain_exit:


word32 me_extract_csa(word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArgA8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_beacon_check
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
me_extract_csa_entry:
l2306072E:
	word32 a0_163
	word32 a5_289
	word32 a0_31 = mac_ie_find(a0, a1, 37<i32>, out a5_289)
	word32 a5_290
	word32 a0_38 = mac_ie_find(a0, a1, 60<i32>, out a5_290)
	word32 s5_276 = a2
	word32 s1_160 = a1
	word32 s2_102 = a0_31
	branch (a0_31 | a0_38) == 0<32> l23060868
l23060868:
	a0_163 = 0<32>
l23060766:
	word32 a5_291
	word32 a0_47 = mac_ie_find(a0, a1, 62<i32>, out a5_291)
	word32 a5_292
	word32 a0_54 = mac_ie_find(a0, a1, 196<i32>, out a5_292)
	s6 = a0_47
	word32 s0_55 = a0_54
	branch a0_54 == 0<32> l23060796
l23060786:
	word32 a5_293
	s0_55 = mac_ie_find(a0_54 + 2<32>, CONVERT(Mem28[a0_54 + 1<i32>:byte], byte, word32), 194<i32>, out a5_293)
l23060796:
	word32 a1_70
	branch a0_31 == 0<32> l23060828
l23060828:
	s1_160 = CONVERT(Mem28[a0_38 + 5<i32>:byte], byte, word32)
	Mem69[a2:byte] = SLICE(CONVERT(Mem28[a0_38 + 2<i32>:byte], byte, word32), byte, 0)
	a1_70 = CONVERT(Mem69[a0_38 + 4<i32>:byte], byte, word32)
l2306079A:
	s1_160 = CONVERT(Mem28[a0_31 + 4<i32>:byte], byte, word32)
	Mem73[a2:byte] = SLICE(CONVERT(Mem28[a0_31 + 2<i32>:byte], byte, word32), byte, 0)
	a1_70 = CONVERT(Mem73[a0_31 + 3<i32>:byte], byte, word32)
l230607AA:
	branch s1_160 != 0<32> l230607AE
l230607AC:
	s1_160 = 2<32>
l230607AE:
	word32 s0_100
	word32 a0_101
	word32 s3_79 = CONVERT(a1_70 <u 15<i32>, bool, word32)
	word32 a0_82 = phy_channel_to_freq(s3_79 ^ 1<i32>, a1_70)
	s3 = s3_79 ^ 1<i32>
	s5_276 = a0_82
	branch s0_55 == 0<32> l2306083A
l2306083A:
	branch a0_47 == 0<32> l23060860
l2306083E:
	word32 a5_95 = CONVERT(Mem94[a0_47 + 2<i32>:byte], byte, word32)
	word32 s0_103 = a0_82 + 10<i32>
	branch a5_95 == 1<32> l23060856
l2306084C:
	branch a5_95 != 3<32> l23060860
l23060860:
	s0_100 = a0_82
	a0_101 = 0<32>
	s2_102 = 0<32>
l23060852:
	s0_103 = a0_82 + -10<i32>
l23060856:
	s0_100 = CONVERT(SLICE(s0_103, word16, 0), word16, word32)
	a0_101 = 0<32>
	s2_102 = 1<32>
l230607C0:
	word32 a1_111 = CONVERT(Mem94[s0_55 + 3<i32>:byte], byte, word32)
	word32 a5_113 = CONVERT(Mem94[s0_55 + 2<i32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	s6 = CONVERT(Mem94[s0_55 + 4<i32>:byte], byte, word32)
	s2_102 = 1<32>
	branch a5_113 >u 2<32> l230607E8
l230607DA:
	s2_102 = CONVERT(Mem94[a5_113 + 0x23082850<32>:byte], byte, word32)
l230607E8:
	s0_100 = phy_channel_to_freq(s3_79 ^ 1<i32>, a1_111)
	a0_101 = 0<32>
	branch s6 == 0<32> l230607FE
l230607F6:
	a0_101 = phy_channel_to_freq(s3_79 ^ 1<i32>, s6)
l230607FE:
	Mem144[a3 + 6<i32>:word16] = SLICE(a0_101, word16, 0)
	Mem148[a3:byte] = SLICE(s3_79 ^ 1<i32>, byte, 0)
	Mem151[a3 + 1<i32>:byte] = SLICE(s2_102, byte, 0)
	Mem155[a3 + 2<i32>:word16] = SLICE(a0_82, word16, 0)
	Mem157[a3 + 4<i32>:word16] = SLICE(s0_100, word16, 0)
	a0_163 = s1_160
l23060814:
	0<32> = dwArgA8
	s1Out = s1_160
	a0Out = a0_163
	s2Out = s2_102
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5_276
	s6Out = s6
	s8Out = s4
	return s1
me_extract_csa_exit:


word32 me_build_beacon(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s5, word32 dwArg20, word32 dwArg24, word32 dwArg6C, word32 dwArg94, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s5:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +006C:[0..31] Stack +0094:[0..31]
// LiveOut: a0 a4 ra s0 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s10 s11 s9 sp
me_build_beacon_entry:
l2306086C:
	word32 s3_163 = CONVERT(Mem30[a1 + 0x4201C6E8<32>:byte], byte, word32)
	Mem37[a0:byte] = 0x80<8>
	Mem38[a0 + 1<i32>:byte] = 0<8>
	Mem39[a0 + 2<i32>:byte] = 0<8>
	Mem40[a0 + 3<i32>:byte] = 0<8>
	word32 a4_621
	word32 a2_619
	word32 a3_620
	word32 a5_622
	word32 a6_623
	word32 a7_624
	memcpy(a0 + 4<32>, 0x230827F0<32>, 6<32>, out a2_619, out a3_620, out a4_621, out a5_622, out a6_623, out a7_624)
	word32 a2_625
	word32 a5_628
	word32 a6_629
	word32 a3_626
	word32 a4_627
	word32 a7_630
	memcpy(a0 + 10<i32>, a1 + 0x4201C320<32>, 6<32>, out a2_625, out a3_626, out a4_627, out a5_628, out a6_629, out a7_630)
	word32 a7_636
	word32 a3_632
	word32 a2_631
	word32 a4_633
	word32 a5_634
	word32 a6_635
	memcpy(a0 + 16<i32>, a1 + 0x4201C320<32>, 6<32>, out a2_631, out a3_632, out a4_633, out a5_634, out a6_635, out a7_636)
	word32 a5_102 = CONVERT(Mem47[0x4201BCE4<32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem104[0x4201BCE4<32>:word16] = SLICE(a5_102 >>u 16<i32>, word16, 0)
	word32 a5_107 = CONVERT(SLICE(a5_102 >>u 16<i32> << 4<i32>, word16, 0), word16, word32)
	Mem108[a0 + 22<i32>:byte] = SLICE(a5_107, byte, 0)
	Mem110[a0 + 23<i32>:byte] = SLICE(a5_107 >>u 8<i32>, byte, 0)
	word32 a5_111 = CONVERT(Mem110[a1 + 0x4201C6E2<32>:uint16], uint16, word32)
	Mem113[0x4201BCB0<32>:byte] = SLICE(a5_111, byte, 0)
	Mem115[0x4201BCB1<32>:byte] = SLICE(a5_111 >>u 8<i32>, byte, 0)
	word32 s4_164 = a1 + 1496<i32>
	word32 s6_166 = a2
	word32 s5_165 = a3
	word32 s2_100 = 0x4201BCF8<32>
	word32 a3_118
	word32 a5_120
	word32 a2_637
	word32 a4_119
	word32 a0_116 = me_build_capability(a1, out a2_637, out a3_118, out a4_119, out a5_120)
	branch s3_163 == 0<32> l23060932
l2306092A:
	a0_116 = CONVERT(SLICE(a0_116 | 16<i32>, word16, 0), word16, word32)
l23060932:
	word32 a1_144
	Mem132[a5_120 + 34<i32>:byte] = SLICE(a0_116, byte, 0)
	Mem134[a5_120 + 35<i32>:byte] = SLICE(a0_116 >>u 8<i32>, byte, 0)
	word32 a2_135 = dwArg94
	branch a4_119 == 0<32> l23060B7C
l23060B7C:
	a1_144 = CONVERT(Mem137[a1 + 0x4201C64E<32>:byte], byte, word32)
l23060950:
	word32 s8_646
	word32 s9_647
	word32 s10_648
	word32 s11_649
	word32 t4_650
	word32 a5_643
	word32 a7_644
	word32 s7_645
	word32 s1_638
	word32 a0_639
	word32 a1_640
	word32 a2_641
	word32 a3_642
	ra = printf(ra, 0x2307EC2C<32>, a3_118, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_638, out a0_639, out a1_640, out a2_641, out a3_642, out a4_119, out a5_643, out a7_644, out s2_100, out s3_163, out s4_164, out s5_165, out s6_166, out s7_645, out s8_646, out s9_647, out s10_648, out s11_649, out t4_650)
	a2_135 = 0<32>
	a1_144 = 0<32>
l23060962:
	word32 s7_191 = s4_164 + 944<i32> + s2_100
	word32 s0_206 = CONVERT(SLICE(me_add_ie_ssid(a1_144, a2_135, a4_119) + 36<i32>, word16, 0), word16, word32) + a0_195
	word32 a0_195
	word32 a3_661
	word32 s1_201 = me_add_ie_supp_rates(s7_191, out a0_195, out a3_661)
	word32 s0_208 = CONVERT(SLICE(s0_206, word16, 0), word16, word32)
	branch CONVERT(Mem137[s1_201 + 1496<i32> + s2_100 + 944<i32>:byte], byte, word32) <=u 8<32> l230609A8
l2306099A:
	word32 a0_215
	word32 a3_658
	word32 a4_659
	word32 a5_660
	s1_201 = me_add_ie_ext_supp_rates(s7_191, 8<32>, out a0_215, out a3_658, out a4_659, out a5_660)
	s0_208 = CONVERT(SLICE(CONVERT(SLICE(s0_206, word16, 0), word16, word32) + a0_215, word16, 0), word16, word32)
l230609A8:
	word32 s7_232 = s1_201 + 1496<i32> + s2_100
	word32 a5_245
	word32 a4_651
	word32 s0_249 = CONVERT(SLICE(s0_208 + me_add_ie_ds((CONVERT(Mem137[Mem137[s7_232 + 932<i32>:int32]:uint16], uint16, word32) + 0xFF000694<32> ^ 5<32>) + 1<32> & 255<i32>, 5<32>, out a4_651, out a5_245), word16, 0), word16, word32)
	Mem253[s6_166:word16] = SLICE(s0_249, word16, 0)
	word32 a4_257
	word32 a0_256 = me_add_ie_tim(CONVERT(Mem253[s7_232 + 940<i32>:byte], byte, word32), a5_245, out a4_257)
	Mem263[s5_165:byte] = SLICE(a0_256 & 255<i32>, byte, 0)
	word32 a2_652
	word32 a5_653
	word32 a0_270 = me_add_ie_rsn(s3_163, a4_257, out a2_652, out a5_653)
	word32 a5_283
	word32 a4_655
	word32 a6_656
	word32 a7_657
	word32 a3_654
	word32 a2_286
	memcpy(0x4201E1F0<32>, s3_163 - (a0_270 & 255<i32>), a0_270 & 255<i32>, out a2_286, out a3_654, out a4_655, out a5_283, out a6_656, out a7_657)
	word32 a4_298
	word32 s0_308 = CONVERT(SLICE(CONVERT(SLICE(s0_249 + (a0_256 & 255<i32>), word16, 0), word16, word32) + me_add_ie_erp(0<32>, a5_283, out a4_298) + (a0_270 & 255<i32>), word16, 0), word16, word32)
	branch (Mem263[s7_232 + 992<i32>:int32] & 2<32>) == 0<32> l23060A4A
l23060A30:
	word32 a0_310
	word32 a5_315
	s1_201 = me_add_ie_ht_capa(a4_298, out a0_310, out a5_315)
	word32 a3_663
	s0_308 = CONVERT(SLICE(s0_308 + (me_add_ie_ht_oper(s1_201, a5_315, out a2_286, out a3_663) + a0_310), word16, 0), word16, word32)
l23060A4A:
	word32 a3_662
	word32 a4_339
	word32 s0_349 = CONVERT(SLICE(s0_308 + me_add_ie_wpa(s3_163, a2_286, out a3_662, out a4_339), word16, 0), word16, word32)
	word32 s2_351 = s2_100 + (s1_201 + 1496<i32>)
	branch (Mem263[s2_351 + 992<i32>:int32] & 1<32>) == 0<32> l23060B62
l23060A6C:
	word32 a2_666
	word32 a5_669
	word32 a0_361
	word32 a3_667
	word32 a4_668
	word32 t1_664
	word32 a1_665
	memset(ra, fp + -62<i32>, 0<32>, 0xE<32>, out t1_664, out a0_361, out a1_665, out a2_666, out a3_667, out a4_668, out a5_669)
	word32 a5_670
	word32 a4_384
	word32 a3_383 = co_pack8p(a0_361, fp + -64<i32>, 9<32>, out a4_384, out a5_670)
	word32 a5_387 = CONVERT(Mem382[a4_384 + 1<i32>:byte], byte, word32)
	Mem389[a4_384 + 1<i32>:byte] = SLICE(a5_387 + 0x11<32>, byte, 0)
	Mem395[a5_387 + 0x1A<32>:byte] = 0<8>
	word32 a5_397 = Mem395[s2_351 + 12<i32>:int32]
	Mem400[a3_383 + 1<i32>:byte] = SLICE(a5_397, byte, 0)
	Mem402[a3_383 + 2<i32>:byte] = SLICE(a5_397 >>u 8<u32>, byte, 0)
	Mem405[a3_383 + 3<i32>:byte] = SLICE(a5_397 >>u 0x10<u32>, byte, 0)
	Mem406[a3_383 + 4<i32>:byte] = SLICE(a5_397 >>u 24<i32>, byte, 0)
	word32 a5_408 = Mem406[s2_351 + 8<i32>:int32]
	Mem411[(a5_397 >>u 0x10<u32>) + 4<i32>:byte] = SLICE(a5_408, byte, 0)
	word32 a4_409 = (a5_397 >>u 0x10<u32>) + 4<i32>
	Mem413[a4_409 + 1<i32>:byte] = SLICE(a5_408 >>u 8<u32>, byte, 0)
	Mem416[a4_409 + 2<i32>:byte] = SLICE(a5_408 >>u 0x10<u32>, byte, 0)
	Mem417[a4_409 + 3<i32>:byte] = SLICE(a5_408 >>u 24<i32>, byte, 0)
	word32 a5_419 = Mem417[s2_351 + 16<i32>:int32]
	Mem422[(a5_408 >>u 0x10<u32>) + 4<i32>:byte] = SLICE(a5_419, byte, 0)
	a4_339 = (a5_408 >>u 0x10<u32>) + 4<i32>
	Mem424[a4_339 + 1<i32>:byte] = SLICE(a5_419 >>u 8<u32>, byte, 0)
	Mem427[a4_339 + 2<i32>:byte] = SLICE(a5_419 >>u 0x10<u32>, byte, 0)
	Mem428[a4_339 + 3<i32>:byte] = SLICE(a5_419 >>u 24<i32>, byte, 0)
	word32 a5_429 = Mem428[s2_351 + 20<i32>:int32]
	Mem432[a4_339 + 4<i32>:byte] = SLICE(a5_429, byte, 0)
	Mem433[a4_339 + 5<i32>:byte] = SLICE(a5_429 >>u 8<u32>, byte, 0)
	Mem436[a4_339 + 6<i32>:byte] = SLICE(a5_429 >>u 0x10<u32>, byte, 0)
	Mem437[a4_339 + 7<i32>:byte] = SLICE(a5_429 >>u 24<i32>, byte, 0)
	s0_349 = CONVERT(SLICE(s0_349 + 0x1A<32>, word16, 0), word16, word32)
l23060B62:
	s0Out = dwArgCC
	a0Out = s0_349
	a4Out = a4_339
	s2Out = s2_351
	s4Out = dwArg0168
	return dwLoc08
me_build_beacon_exit:


word32 me_build_probe_rsp(word32 ra, word32 a0, word32 a1, word32 dwArgA4, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_send_mlme
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +00A4:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a3 a5 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 tp
// Preserved: sp
me_build_probe_rsp_entry:
l23060B8C:
	word32 s3_26 = CONVERT(Mem24[a1 + 0x4201C6E8<32>:byte], byte, word32)
	word32 a5_27 = CONVERT(Mem24[a1 + 0x4201C6E2<32>:uint16], uint16, word32)
	Mem31[a0 + 8<i32>:byte] = SLICE(a5_27, byte, 0)
	Mem33[a0 + 9<i32>:byte] = SLICE(a5_27 >>u 8<i32>, byte, 0)
	word32 a4_38
	word32 a5_39
	word32 a3_403
	word32 a2_402
	word32 a0_35 = me_build_capability(a1, out a2_402, out a3_403, out a4_38, out a5_39)
	branch s3_26 == 0<32> l23060BDC
l23060BD4:
	a0_35 = CONVERT(SLICE(a0_35 | 16<i32>, word16, 0), word16, word32)
l23060BDC:
	Mem54[a5_39 + 10<i32>:byte] = SLICE(a0_35, byte, 0)
	Mem56[a5_39 + 11<i32>:byte] = SLICE(a0_35 >>u 8<i32>, byte, 0)
	word32 a0_67 = me_add_ie_ssid(CONVERT(Mem56[a1 + 0x4201C64E<32>:byte], byte, word32), dwArgA4, a4_38)
	word32 s0_89 = a0_67 + a0_78 + 0xC<32> << 16<i32>
	word32 a0_78
	word32 a3_404
	word32 s1_100 = me_add_ie_supp_rates(a1 + 0x4201C680<32>, out a0_78, out a3_404)
	word32 s0_104 = s0_89 >>u 16<i32>
	branch CONVERT(Mem64[a1 + 0x4201C680<32>:byte], byte, word32) <=u 8<32> l23060C38
l23060C2A:
	word32 a0_94
	word32 a4_409
	word32 a5_410
	word32 a3_408
	s1_100 = me_add_ie_ext_supp_rates(a1 + 0x4201C680<32>, 8<32>, out a0_94, out a3_408, out a4_409, out a5_410)
	s0_104 = CONVERT(SLICE((s0_89 >>u 16<i32>) + a0_94, word16, 0), word16, word32)
l23060C38:
	word32 s5_107 = s1_100 + 1496<i32>
	word32 a5_111 = Mem64[s5_107 + 0x4201C09C<32>:int32]
	word32 a5_116
	word32 a4_123
	word32 a5_132
	word32 a4_142
	word32 a5_407
	word32 a4_406
	word32 a3_405
	word32 a2_134
	word32 s0_150 = CONVERT(SLICE(CONVERT(SLICE(s0_104 + (me_add_ie_rsn(s3_26, a4_123, out a2_134, out a5_132) + me_add_ie_ds(phy_freq_to_channel(CONVERT(Mem64[a5_111 + 2<i32>:byte], byte, word32), CONVERT(Mem64[a5_111:uint16], uint16, word32), out a3_405, out a4_406, out a5_116) & 255<i32>, a5_116, out a4_123, out a5_407)), word16, 0), word16, word32) + me_add_ie_erp(0<32>, a5_132, out a4_142), word16, 0), word16, word32)
	branch (Mem64[s5_107 + 0x4201C0D8<32>:int32] & 2<32>) == 0<32> l23060C9E
l23060C84:
	word32 a0_152
	word32 a5_157
	s1_100 = me_add_ie_ht_capa(a4_142, out a0_152, out a5_157)
	word32 a3_412
	s0_150 = CONVERT(SLICE(s0_150 + (me_add_ie_ht_oper(s1_100, a5_157, out a2_134, out a3_412) + a0_152), word16, 0), word16, word32)
l23060C9E:
	word32 s1_187 = s1_100 + 1496<i32>
	word32 a4_411
	word32 a3_183
	word32 s0_191 = CONVERT(SLICE(s0_150 + me_add_ie_wpa(s3_26, a2_134, out a3_183, out a4_411), word16, 0), word16, word32)
	word32 a5_195 = Mem64[s1_187 + 0x4201C0D8<32>:int32]
	word32 a5_196 = a5_195 & 1<32>
	branch (a5_195 & 1<32>) == 0<32> l23060DB6
l23060CC0:
	word32 a0_203
	word32 a4_417
	word32 a5_418
	word32 t1_413
	word32 a1_414
	word32 a2_415
	word32 a3_416
	ra = memset(ra, fp + -46<i32>, 0<32>, 0xE<32>, out t1_413, out a0_203, out a1_414, out a2_415, out a3_416, out a4_417, out a5_418)
	word32 a4_226
	word32 a5_419
	word32 a3_225 = co_pack8p(a0_203, fp + -48<i32>, 9<32>, out a4_226, out a5_419)
	word32 a5_229 = CONVERT(Mem224[a4_226 + 1<i32>:byte], byte, word32)
	Mem231[a4_226 + 1<i32>:byte] = SLICE(a5_229 + 0x11<32>, byte, 0)
	Mem237[a5_229 + 0x1A<32>:byte] = 0<8>
	word32 a5_239 = Mem237[s1_187 + 0x4201BD04<32>:int32]
	Mem242[a3_225 + 1<i32>:byte] = SLICE(a5_239, byte, 0)
	Mem244[a3_225 + 2<i32>:byte] = SLICE(a5_239 >>u 8<u32>, byte, 0)
	Mem247[a3_225 + 3<i32>:byte] = SLICE(a5_239 >>u 0x10<u32>, byte, 0)
	Mem248[a3_225 + 4<i32>:byte] = SLICE(a5_239 >>u 24<i32>, byte, 0)
	word32 a5_250 = Mem248[s1_187 + 0x4201BD00<32>:int32]
	Mem253[(a5_239 >>u 0x10<u32>) + 4<i32>:byte] = SLICE(a5_250, byte, 0)
	word32 a4_251 = (a5_239 >>u 0x10<u32>) + 4<i32>
	Mem255[a4_251 + 1<i32>:byte] = SLICE(a5_250 >>u 8<u32>, byte, 0)
	Mem258[a4_251 + 2<i32>:byte] = SLICE(a5_250 >>u 0x10<u32>, byte, 0)
	Mem259[a4_251 + 3<i32>:byte] = SLICE(a5_250 >>u 24<i32>, byte, 0)
	word32 a5_261 = Mem259[s1_187 + 0x4201BD08<32>:int32]
	Mem264[(a5_250 >>u 0x10<u32>) + 4<i32>:byte] = SLICE(a5_261, byte, 0)
	word32 a4_262 = (a5_250 >>u 0x10<u32>) + 4<i32>
	Mem266[a4_262 + 1<i32>:byte] = SLICE(a5_261 >>u 8<u32>, byte, 0)
	Mem269[a4_262 + 2<i32>:byte] = SLICE(a5_261 >>u 0x10<u32>, byte, 0)
	Mem270[a4_262 + 3<i32>:byte] = SLICE(a5_261 >>u 24<i32>, byte, 0)
	word32 a5_271 = Mem270[s1_187 + 0x4201BD0C<32>:int32]
	Mem274[a4_262 + 4<i32>:byte] = SLICE(a5_271, byte, 0)
	Mem275[a4_262 + 5<i32>:byte] = SLICE(a5_271 >>u 8<u32>, byte, 0)
	Mem278[a4_262 + 6<i32>:byte] = SLICE(a5_271 >>u 0x10<u32>, byte, 0)
	Mem279[a4_262 + 7<i32>:byte] = SLICE(a5_271 >>u 24<i32>, byte, 0)
	a3_183 = a5_271 >>u 0x10<u32>
	a5_196 = a5_271 >>u 24<i32>
	s0_191 = CONVERT(SLICE(s0_191 + 0x1A<32>, word16, 0), word16, word32)
l23060DB6:
	0<32> = dwArg0198
	s1Out = s1_187
	a0Out = s0_191
	a3Out = a3_183
	a5Out = a5_196
	s2Out = s1_187 + 0x4201BCF8<32>
	s3Out = s3_26
	s4Out = dwArgF4
	return ra
me_build_probe_rsp_exit:


word32 me_build_associate_rsp(word32 ra, word32 a0, word32 a1, word32 a3, word32 dwArgA4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_send_mlme
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] Stack +00A4:[0..31]
// LiveOut: a0 a3 a5 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
me_build_associate_rsp_entry:
l23060DCC:
	word32 a5_35
	word32 a2_344
	word32 a4_346
	word32 a3_345
	word32 a0_31 = me_build_capability(a1, out a2_344, out a3_345, out a4_346, out a5_35)
	branch a0 == 0<32> l23060E0E
l23060E06:
	a0_31 = CONVERT(SLICE(a0_31 | 16<i32>, word16, 0), word16, word32)
l23060E0E:
	Mem48[a5_35:byte] = SLICE(a0_31, byte, 0)
	Mem50[a5_35 + 1<i32>:byte] = SLICE(a0_31 >>u 8<i32>, byte, 0)
	Mem53[a5_35 + 2<i32>:byte] = SLICE(dwArgA4, byte, 0)
	Mem54[a5_35 + 3<i32>:byte] = SLICE(dwArgA4 >>u 8<u32>, byte, 0)
	word32 a5_56 = CONVERT(Mem54[a3 + 68<i32>:uint16], uint16, word32)
	Mem59[(dwArgA4 >>u 8<u32>) + 4<i32>:byte] = SLICE(a5_56 | 0xC000000<32>, byte, 0)
	word32 a5_60 = (a5_56 | 0xC000000<32>) >>u 8<i32>
	Mem61[(dwArgA4 >>u 8<u32>) + 5<i32>:byte] = SLICE(a5_60, byte, 0)
	word32 a3_121 = 0xC000000<32>
	word32 s0_126 = 6<32>
	word32 a5_133 = a5_60 + 6<32>
	branch dwArgA4 != 0<32> l23060F9E
l23060E48:
	word32 a0_68
	s1 = me_add_ie_supp_rates(a3 + 6<i32>, out a0_68, out a3_121)
	word32 s0_78 = a0_68 + 6<32> << 0x10<u32>
	word32 a4_100 = CONVERT(Mem64[a3 + 6<i32>:byte], byte, word32)
	s0_126 = s0_78 >>u 16<i32>
	branch a4_100 <=u 8<32> l23060E74
l23060E66:
	word32 a0_83
	word32 a5_347
	s1 = me_add_ie_ext_supp_rates(s1, 8<32>, out a0_83, out a3_121, out a4_100, out a5_347)
	s0_126 = CONVERT(SLICE((s0_78 >>u 16<i32>) + a0_83, word16, 0), word16, word32)
l23060E74:
	branch (Mem64[a3 + 64<i32>:int32] & 2<32>) == 0<32> l23060E9C
l23060E7C:
	word32 a0_101
	word32 a5_106
	me_add_ie_ht_capa(a4_100, out a0_101, out a5_106)
	s1 = a0_101
	word32 a2_348
	s0_126 = CONVERT(SLICE(s0_126 + (me_add_ie_ht_oper(a0_101, a5_106, out a2_348, out a3_121) + a0_101), word16, 0), word16, word32)
l23060E9C:
	word32 a5_132 = Mem64[a3 + 64<i32>:int32]
	a5_133 = a5_132 & 1<32>
	branch (a5_132 & 1<32>) == 0<32> l23060F9E
l23060EA6:
	word32 t1_349
	word32 a1_350
	word32 a2_351
	word32 a0_144
	word32 a3_352
	word32 a4_353
	word32 a5_354
	ra = memset(ra, fp + -46<i32>, 0<32>, 0xE<32>, out t1_349, out a0_144, out a1_350, out a2_351, out a3_352, out a4_353, out a5_354)
	word32 a4_169
	word32 a5_355
	word32 a3_168 = co_pack8p(a0_144, fp + -48<i32>, 9<32>, out a4_169, out a5_355)
	word32 a5_172 = CONVERT(Mem167[a4_169 + 1<i32>:byte], byte, word32)
	Mem174[a4_169 + 1<i32>:byte] = SLICE(a5_172 + 0x11<32>, byte, 0)
	Mem180[a5_172 + 0x1A<32>:byte] = 0<8>
	Mem185[a3_168 + 1<i32>:byte] = SLICE(a5_172 + 0x1A<32>, byte, 0)
	Mem187[a3_168 + 2<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 8<u32>, byte, 0)
	Mem190[a3_168 + 3<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x10<u32>, byte, 0)
	Mem191[a3_168 + 4<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 24<i32>, byte, 0)
	Mem196[(a5_172 + 0x1A<32> >>u 0x10<u32>) + 4<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 24<i32>, byte, 0)
	word32 a4_194 = (a5_172 + 0x1A<32> >>u 0x10<u32>) + 4<i32>
	Mem198[a4_194 + 1<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x20<32>, byte, 0)
	Mem201[a4_194 + 2<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x28<32>, byte, 0)
	Mem202[a4_194 + 3<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 48<i32>, byte, 0)
	Mem207[(a5_172 + 0x1A<32> >>u 0x28<32>) + 4<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 48<i32>, byte, 0)
	word32 a4_205 = (a5_172 + 0x1A<32> >>u 0x28<32>) + 4<i32>
	Mem209[a4_205 + 1<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x38<32>, byte, 0)
	Mem212[a4_205 + 2<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x40<32>, byte, 0)
	Mem213[a4_205 + 3<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 72<i32>, byte, 0)
	s1 = Mem213[(a5_172 + 0x1A<32> >>u 72<i32>) + 20<i32>:word32]
	Mem217[a4_205 + 4<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 72<i32>, byte, 0)
	Mem218[a4_205 + 5<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x50<32>, byte, 0)
	Mem221[a4_205 + 6<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x58<32>, byte, 0)
	Mem222[a4_205 + 7<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 96<i32>, byte, 0)
	a3_121 = a5_172 + 0x1A<32> >>u 0x58<32>
	a5_133 = a5_172 + 0x1A<32> >>u 96<i32>
	s0_126 = CONVERT(SLICE(s0_126 + 0x1A<32>, word16, 0), word16, word32)
l23060F9E:
	s1Out = s1
	a0Out = s0_126
	a3Out = a3_121
	a5Out = a5_133
	s2Out = a1
	s3Out = 0x4201BCF8<32>
	s4Out = dwArgF4
	return ra
me_build_associate_rsp_exit:


void me_rc_set_rate_req_handler(word32 a1, word32 dwArgB8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] Stack +00B8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
me_rc_set_rate_req_handler_entry:
l23060FB0:
	word32 s2_15 = CONVERT(Mem13[a1:byte], byte, word32)
	word32 s0_23 = Mem13[s2_15 + 0x4201AAC8<32>:int32]
	branch s0_23 != 0<32> l23060FF6
l23060FF6:
	word32 s3_29 = CONVERT(Mem13[a1 + 2<i32>:uint16], uint16, word32)
	branch s3_29 == 0xFFFFFFF<32> l23061030
l23061030:
	Mem33[s0_23 + 198<i32>:word16] = 0xFFFF<16>
	word32 a2_35 = CONVERT(Mem33[s0_23 + 188<i32>:byte], byte, word32)
	word32 a1_36 = CONVERT(Mem33[s0_23 + 187<i32>:byte], byte, word32)
	Mem38[s0_23 + 175<i32>:byte] = SLICE(CONVERT(Mem33[s0_23 + 175<i32>:byte], byte, word32) & -97<i32>, byte, 0)
	word32 s0_130
	word32 s1_131
	word32 a1_132
	word32 a4_133
	word32 s3_134
	word32 s5_135
	word32 s6_136
	word32 s7_137
	rc_update_bw_nss_max(CONVERT(Mem38[s2_15 + 0x4201A9D3<32>:byte], byte, word32), a1_36, a2_35, dwArgB8, out s0_130, out s1_131, out a1_132, out a4_133, out s3_134, out s5_135, out s6_136, out s7_137)
l23061002:
	word32 a0_67
	word32 s0_72 = rc_check_fixed_rate_config(s0_23, s3_29, out a0_67)
	branch a0_67 == 0<32> l23061020
l2306100C:
	word32 a5_77 = CONVERT(Mem13[s0_72 + 175<i32>:byte], byte, word32)
	Mem78[s0_72 + 198<i32>:word16] = SLICE(s3_29, word16, 0)
	Mem81[s0_72 + 175<i32>:byte] = SLICE(a5_77 & -97<i32> | 32<i32>, byte, 0)
l23061020:
	return
me_rc_set_rate_req_handler_exit:
l23060FDE:
	assert_err()


void me_rc_stats_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
me_rc_stats_req_handler_entry:
l2306105E:
	word32 a0_21
	word32 s1_30
	word32 a4_189
	word32 a5_190
	word32 a6_191
	word32 s2_192
	word32 a3_188
	word32 a1_187
	word32 s0_186
	word32 s3_193
	word32 s4_194
	word32 s8_195
	word32 a2_103
	ke_msg_alloc(ra, 0x100040F<32>, a3, 208<i32>, a4, mstatus, dwArg08, out s0_186, out s1_30, out a0_21, out a1_187, out a2_103, out a3_188, out a4_189, out a5_190, out a6_191, out s2_192, out s3_193, out s4_194, out s8_195)
	word32 a3_39 = CONVERT(Mem18[s1_30:byte], byte, word32)
	word32 s1_112 = Mem18[a3_39 + 0x4201AAC8<32>:int32]
	Mem47[a0_21:byte] = SLICE(a3_39, byte, 0)
	word32 s0_106 = a0_21
	branch s1_112 == 0<32> l23061126
l23061126:
	Mem48[a0_21 + 2<i32>:word16] = 0<16>
l2306109C:
	Mem52[a0_21 + 2<i32>:word16] = SLICE(CONVERT(Mem47[s1_112 + 192<i32>:uint16], uint16, word32), word16, 0)
	Mem56[a0_21 + 0x1004<32>:word16] = SLICE(CONVERT(Mem52[s1_112 + 164<i32>:uint16], uint16, word32), word16, 0)
	Mem58[a0_21 + 0x1006<32>:word16] = SLICE(CONVERT(Mem56[s1_112 + 166<i32>:uint16], uint16, word32), word16, 0)
	Mem60[a0_21 + 0x1008<32>:word32] = Mem58[s1_112 + 168<i32>:int32]
	Mem62[a0_21 + 0x100C<32>:byte] = SLICE(CONVERT(Mem60[s1_112 + 176<i32>:byte], byte, word32), byte, 0)
	Mem64[a0_21 + 0x100D<32>:byte] = SLICE(CONVERT(Mem62[s1_112 + 172<i32>:byte], byte, word32), byte, 0)
	word32 a2_196
	word32 a3_197
	word32 a4_198
	word32 a5_199
	word32 a6_200
	word32 a7_201
	memcpy(a0_21 + 0x10<32>, s1_112 + 124<i32>, 32<i32>, out a2_196, out a3_197, out a4_198, out a5_199, out a6_200, out a7_201)
	word32 a3_202
	word32 a4_203
	word32 a5_204
	word32 a6_205
	word32 a7_206
	memcpy(a0_21 + 48<i32>, s1_112 + 4<i32>, 120<i32>, out a2_103, out a3_202, out a4_203, out a5_204, out a6_205, out a7_206)
	word32 s2_122 = 0<32>
l230610EC:
	branch s2_122 <u CONVERT(Mem95[s1_112 + 192<i32>:uint16], uint16, word32) l23061108
l23061108:
	word32 a0_101
	word32 s2_113
	word32 a3_207
	word32 s3_208
	word32 s4_209
	word32 s8_210
	s0_106 = rc_calc_tp(s1_112, s2_122 & 255<i32>, dwArg08, out s1_112, out a0_101, out a2_103, out a3_207, out s2_113, out s3_208, out s4_209, out s8_210)
	Mem121[a0_101 + 8<i32>:word32] = (s2_113 + 40<i32> << 2<i32>) + s0_106
	s2_122 = CONVERT(SLICE(s2_113 + 1<32>, word16, 0), word16, word32)
l230610F4:
	word32 s1_211
	word32 a0_212
	word32 a1_213
	word32 a2_214
	word32 a3_215
	word32 a4_216
	word32 a5_217
	word32 s2_218
	word32 s3_219
	word32 s4_220
	word32 s8_221
	ke_msg_send(s0_106, a2_103, mstatus, out s1_211, out a0_212, out a1_213, out a2_214, out a3_215, out a4_216, out a5_217, out s2_218, out s3_219, out s4_220, out s8_221)
	0<32> = dwArg38
	return
me_rc_stats_req_handler_exit:


void me_traffic_ind_req_handler(word32 ra, word32 a1, word32 a3, word32 s2, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
me_traffic_ind_req_handler_entry:
l2306112C:
	word32 s1_17 = CONVERT(Mem15[a1:byte], byte, word32)
	word32 s3_101 = a3
	word32 a3_28 = CONVERT(Mem15[a1 + 1<i32>:byte], byte, word32)
	word32 a4_117 = s1_17 + 0x4201A9B8<32>
	word32 a5_31 = CONVERT(Mem15[s1_17 + 0x4201A9EA<32>:byte], byte, word32)
	branch CONVERT(Mem15[a1 + 2<i32>:byte], byte, word32) == 0<32> l230611DE
l230611DE:
	word32 a5_32
	branch a3_28 == 0<32> l230611EA
l230611EA:
	a5_32 = a5_31 & 0xFFFFFFFE<32>
l230611E0:
	a5_32 = a5_31 | 1<i32>
l230611E4:
	Mem36[s1_17 + 0x4201A9EA<32>:byte] = SLICE(a5_32, byte, 0)
l23061168:
	word32 a4_37 = a5_31 & 251<i32>
	branch a3_28 == 0<32> l23061172
l2306116E:
	a4_37 = a5_31 | 4<i32>
l23061172:
	Mem45[s1_17 + 0x4201A9EA<32>:byte] = SLICE(a4_37, byte, 0)
	a4_117 = CONVERT(Mem45[s1_17 + 0x4201AAAA<32>:byte], byte, word32)
	branch a4_117 != 0xF<32> l230611BE
l2306118A:
	word32 a0_64
	word32 a2_66
	word32 s0_72
	word32 s1_73
	word32 s2_74
	word32 a6_197
	word32 s3_198
	word32 s8_200
	word32 s4_199
	word32 a1_193
	word32 a3_194
	word32 a5_196
	word32 a4_195
	ra = ke_msg_alloc(ra, 65<i32>, 0<32>, 4<32>, a4_117, mstatus, dwLoc08, out s0_72, out s1_73, out a0_64, out a1_193, out a2_66, out a3_194, out a4_195, out a5_196, out a6_197, out s2_74, out s3_198, out s4_199, out s8_200)
	word32 s0_84 = s0_72 + (s1_73 + 432<i32>)
	Mem86[a0_64:word16] = SLICE(CONVERT(Mem63[s0_84 + 24<i32>:uint16], uint16, word32), word16, 0)
	Mem88[a0_64 + 3<i32>:byte] = SLICE(CONVERT(Mem86[s0_84 + 26<i32>:byte], byte, word32), byte, 0)
	Mem90[a0_64 + 2<i32>:byte] = SLICE(CONVERT(Mem88[s2_74 + 1<i32>:byte], byte, word32), byte, 0)
	word32 s8_209
	word32 a3_205
	word32 a5_206
	word32 s4_208
	word32 s2_207
	word32 s1_201
	word32 a0_202
	word32 a2_204
	word32 a1_203
	ke_msg_send(a0_64, a2_66, mstatus, out s1_201, out a0_202, out a1_203, out a2_204, out a3_205, out a4_117, out a5_206, out s2_207, out s3_101, out s4_208, out s8_209)
l230611BE:
	word32 s8_218
	word32 s4_217
	word32 a2_213
	word32 a3_214
	word32 s3_216
	word32 s2_215
	word32 s0_210
	word32 a0_212
	word32 s1_211
	ke_msg_send_basic(ra, 0x100040D<32>, s3_101, a4_117, mstatus, s2, dwLoc10, out s0_210, out s1_211, out a0_212, out a2_213, out a3_214, out s2_215, out s3_216, out s4_217, out s8_218)
	return
me_traffic_ind_req_handler_exit:


void me_sta_del_req_handler(word32 ra, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
me_sta_del_req_handler_entry:
l230611EE:
	word32 a0_24
	word32 a2_26
	word32 s0_32
	word32 a6_164
	word32 a5_163
	word32 a4_162
	word32 a3_161
	word32 a1_160
	word32 s1_159
	word32 s2_165
	word32 s3_166
	word32 s4_167
	word32 s8_168
	word32 ra_115 = ke_msg_alloc(ra, 0xC<32>, 0<32>, 1<32>, a4, mstatus, dwArg08, out s0_32, out s1_159, out a0_24, out a1_160, out a2_26, out a3_161, out a4_162, out a5_163, out a6_164, out s2_165, out s3_166, out s4_167, out s8_168)
	Mem43[a0_24:byte] = SLICE(CONVERT(Mem21[s0_32:byte], byte, word32), byte, 0)
	word32 a0_169
	word32 a1_170
	word32 a2_171
	word32 a3_172
	word32 a5_173
	word32 s2_174
	word32 s3_175
	word32 s4_176
	word32 s8_177
	word32 s1_101
	word32 a4_117
	branch CONVERT(Mem43[ke_msg_send(a0_24, a2_26, mstatus, out s1_101, out a0_169, out a1_170, out a2_171, out a3_172, out a4_117, out a5_173, out s2_174, out s3_175, out s4_176, out s8_177) + 1<i32>:byte], byte, word32) == 0<32> l23061252
l2306121C:
	word32 a0_66
	word32 s0_74
	word32 s1_187
	word32 a1_188
	word32 a2_189
	word32 a3_190
	word32 a4_191
	word32 a5_192
	word32 a6_193
	word32 s2_194
	word32 s3_195
	word32 s4_196
	word32 s8_197
	ra_115 = ke_msg_alloc(ra_115, 0x1000413<32>, 5<32>, 2<32>, a4_117, mstatus, dwArg08, out s0_74, out s1_187, out a0_66, out a1_188, out a2_189, out a3_190, out a4_191, out a5_192, out a6_193, out s2_194, out s3_195, out s4_196, out s8_197)
	Mem84[a0_66:byte] = 0<8>
	Mem92[a0_66 + 1<i32>:byte] = SLICE(CONVERT(Mem84[CONVERT(Mem84[s0_74:byte], byte, word32) + 0x4201A9D2<32>:byte], byte, word32), byte, 0)
	word32 a0_198
	word32 a1_199
	word32 a2_200
	word32 a3_201
	word32 a5_202
	word32 s2_203
	word32 s3_204
	word32 s4_205
	word32 s8_206
	ke_msg_send(a0_66, 432<i32>, mstatus, out s1_101, out a0_198, out a1_199, out a2_200, out a3_201, out a4_117, out a5_202, out s2_203, out s3_204, out s4_205, out s8_206)
l23061252:
	word32 s0_178
	word32 s1_179
	word32 a0_180
	word32 a2_181
	word32 a3_182
	word32 s2_183
	word32 s3_184
	word32 s4_185
	word32 s8_186
	ke_msg_send_basic(ra_115, 0x100040A<32>, s1_101, a4_117, mstatus, dwLoc08, dwArg00, out s0_178, out s1_179, out a0_180, out a2_181, out a3_182, out s2_183, out s3_184, out s4_185, out s8_186)
	0<32> = dwArg38
	return
me_sta_del_req_handler_exit:


void me_set_control_port_req_handler(word32 ra, word32 a1, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
me_set_control_port_req_handler_entry:
l2306126E:
	word32 a5_13 = CONVERT(Mem11[a1:byte], byte, word32)
	word32 a3_26 = CONVERT(Mem11[a5_13 + 0x4201A9D2<32>:byte], byte, word32)
	word32 a5_29 = CONVERT(CONVERT(Mem11[a1 + 1<i32>:byte], byte, word32) != 0<32>, bool, word32)
	Mem31[a5_13 + 0x4201A9E9<32>:byte] = SLICE(a5_29 + 1<32>, byte, 0)
	word32 s1_19 = a3
	word32 a4_33 = CONVERT(Mem31[a3_26 + 0x4201C326<32>:byte], byte, word32)
	branch a4_33 != 0<32> l230612E2
l230612BC:
	a4_33 = 2<32>
	branch a5_29 != 0xFFFFFFFF<32> l230612E2
l230612C2:
	word32 a0_41
	word32 a2_43
	word32 s0_49
	word32 s1_137
	word32 a1_138
	word32 a3_139
	word32 a4_140
	word32 a5_141
	word32 a6_142
	word32 s2_143
	word32 s3_144
	word32 s4_145
	word32 s8_146
	ra = ke_msg_alloc(ra, 0x1000413<32>, 5<32>, 2<32>, 2<32>, mstatus, dwArg08, out s0_49, out s1_137, out a0_41, out a1_138, out a2_43, out a3_139, out a4_140, out a5_141, out a6_142, out s2_143, out s3_144, out s4_145, out s8_146)
	Mem59[a0_41:byte] = 0<8>
	Mem61[a0_41 + 1<i32>:byte] = SLICE(CONVERT(Mem59[s0_49 + 26<i32>:byte], byte, word32), byte, 0)
	word32 a0_147
	word32 a1_148
	word32 a2_149
	word32 a3_150
	word32 a5_151
	word32 s2_152
	word32 s3_153
	word32 s4_154
	word32 s8_155
	ke_msg_send(a0_41, a2_43, mstatus, out s1_19, out a0_147, out a1_148, out a2_149, out a3_150, out a4_33, out a5_151, out s2_152, out s3_153, out s4_154, out s8_155)
l230612E2:
	word32 s2_133
	word32 a3_132
	word32 a2_131
	word32 a0_130
	word32 s1_129
	word32 s0_128
	word32 s3_134
	word32 s4_135
	word32 s8_136
	ke_msg_send_basic(ra, 0x1000405<32>, s1_19, a4_33, mstatus, dwLoc08, dwArg00, out s0_128, out s1_129, out a0_130, out a2_131, out a3_132, out s2_133, out s3_134, out s4_135, out s8_136)
	0<32> = dwArg38
	return
me_set_control_port_req_handler_exit:


void me_chan_config_req_handler(word32 ra, word32 a1, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
me_chan_config_req_handler_entry:
l230612FE:
	word32 a4_16
	word32 a3_21
	word32 a2_65
	word32 a5_66
	word32 a6_67
	word32 a7_68
	memcpy(0x4201C8EC<32>, a1, 254<i32>, out a2_65, out a3_21, out a4_16, out a5_66, out a6_67, out a7_68)
	word32 s0_69
	word32 s1_70
	word32 a0_71
	word32 a2_72
	word32 a3_73
	word32 s2_74
	word32 s3_75
	word32 s4_76
	word32 s8_77
	ke_msg_send_basic(ra, 0x1000403<32>, a3_21, a4_16, mstatus, dwLoc18, dwLoc10, out s0_69, out s1_70, out a0_71, out a2_72, out a3_73, out s2_74, out s3_75, out s4_76, out s8_77)
	return
me_chan_config_req_handler_exit:


void mm_set_ps_mode_cfm_handler(word32 ra, word32 a2, word32 mstatus, word32 dwArg00, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
mm_set_ps_mode_cfm_handler_entry:
l23061332:
	word32 a0_11
	word32 a4_13
	word32 a2_88
	word32 s2_89
	ke_state_get(a2, dwArg28, out a0_11, out a2_88, out a4_13, out s2_89)
	word32 s0_10 = a2
	branch a0_11 == 1<32> l2306135E
l2306135E:
	word32 a1_25 = CONVERT(Mem9[0x4201C8C4<32>:uint16], uint16, word32)
	branch a1_25 == 255<i32> l2306137A
l2306136E:
	word32 s1_99
	word32 a0_100
	word32 a2_101
	word32 a3_102
	word32 s2_103
	word32 s3_104
	word32 s4_105
	word32 s8_106
	ke_msg_send_basic(ra, 0x1000414<32>, a1_25, a4_13, mstatus, dwLoc08, dwArg00, out s0_10, out s1_99, out a0_100, out a2_101, out a3_102, out s2_103, out s3_104, out s4_105, out s8_106)
l2306137A:
	word32 s1_90
	word32 a0_91
	word32 a1_92
	word32 a2_93
	word32 a4_94
	word32 a5_95
	word32 s2_96
	word32 s3_97
	word32 s4_98
	ke_state_set(s0_10, 0<32>, mstatus, out s1_90, out a0_91, out a1_92, out a2_93, out a4_94, out a5_95, out s2_96, out s3_97, out s4_98)
	return
mm_set_ps_mode_cfm_handler_exit:
l23061346:
	assert_err()


void mm_set_idle_cfm_handler(word32 ra, word32 a2, word32 mstatus, word32 dwArg00, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
mm_set_idle_cfm_handler_entry:
l2306138C:
	word32 a0_11
	word32 a4_13
	word32 a2_88
	word32 s2_89
	ke_state_get(a2, dwArg28, out a0_11, out a2_88, out a4_13, out s2_89)
	word32 s0_10 = a2
	branch a0_11 == 1<32> l230613B8
l230613B8:
	word32 a1_25 = CONVERT(Mem9[0x4201C8C4<32>:uint16], uint16, word32)
	branch a1_25 == 255<i32> l230613D4
l230613C8:
	word32 s1_99
	word32 a0_100
	word32 a2_101
	word32 a3_102
	word32 s2_103
	word32 s3_104
	word32 s4_105
	word32 s8_106
	ke_msg_send_basic(ra, 0x1000412<32>, a1_25, a4_13, mstatus, dwLoc08, dwArg00, out s0_10, out s1_99, out a0_100, out a2_101, out a3_102, out s2_103, out s3_104, out s4_105, out s8_106)
l230613D4:
	word32 s1_90
	word32 a0_91
	word32 a1_92
	word32 a2_93
	word32 a4_94
	word32 a5_95
	word32 s2_96
	word32 s3_97
	word32 s4_98
	ke_state_set(s0_10, 0<32>, mstatus, out s1_90, out a0_91, out a1_92, out a2_93, out a4_94, out a5_95, out s2_96, out s3_97, out s4_98)
	return
mm_set_idle_cfm_handler_exit:
l230613A0:
	assert_err()


void me_config_req_handler(word32 ra, word32 a4, word32 s2, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
me_config_req_handler_entry:
l230613E6:
	word32 s1_39
	word32 s4_42
	word32 s3_226
	word32 s8_227
	word32 a6_224
	word32 s2_225
	word32 a5_223
	word32 a3_221
	word32 a4_222
	word32 a1_219
	word32 a2_220
	word32 s0_217
	word32 a0_218
	word32 ra_37 = ke_msg_alloc(ra, 49<i32>, 0<32>, 1<32>, a4, mstatus, dwLoc08, out s0_217, out s1_39, out a0_218, out a1_219, out a2_220, out a3_221, out a4_222, out a5_223, out a6_224, out s2_225, out s3_226, out s4_42, out s8_227)
	Mem55[0x4201C8EA<32>:byte] = SLICE(CONVERT(Mem27[s1_39 + 46<i32>:byte], byte, word32), byte, 0)
	word32 a4_56
	word32 a2_228
	word32 a5_230
	word32 a7_232
	word32 a3_229
	word32 a6_231
	memcpy(0x4201C8C8<32>, s1_39, 32<i32>, out a2_228, out a3_229, out a4_56, out a5_230, out a6_231, out a7_232)
	word32 a0_73
	word32 a2_75
	word32 s0_81
	word32 s1_82
	word32 s2_83
	word32 s3_84
	word32 a3_233
	word32 s4_234
	word32 s8_235
	ke_msg_send_basic(ra_37, 0x1000401<32>, s4_42, a4_56, mstatus, s2, dwLoc10, out s0_81, out s1_82, out a0_73, out a2_75, out a3_233, out s2_83, out s3_84, out s4_234, out s8_235)
	branch CONVERT(Mem55[s2_83 + 46<i32>:byte], byte, word32) == 0<32> l2306149C
l2306149C:
	Mem93[s0_81 + -1558<i32>:word16] = 0<16>
l23061442:
	word32 a0_94 = phy_get_nss(a0_73)
	word32 a5_100 = CONVERT(Mem55[s0_81 + -1848<i32>:uint16], uint16, word32) >>u 1<i32> & 1<32>
	Mem101[s0_81 + -1558<i32>:byte] = SLICE(a0_94 + 1<32> >> 1<i32>, byte, 0)
	Mem102[s0_81 + -1557<i32>:byte] = SLICE(a5_100, byte, 0)
l2306145A:
	Mem107[s0_81 + -1816<i32>:word16] = SLICE(CONVERT(Mem104[s1_82 + 44<i32>:uint16], uint16, word32), word16, 0)
	word32 a5_108 = CONVERT(Mem107[s1_82 + 48<i32>:byte], byte, word32)
	Mem109[s0_81 + -1556<i32>:byte] = SLICE(a5_108, byte, 0)
	branch a5_108 == 0<32> l23061488
l2306146C:
	Mem111[s0_81 + -1852<i32>:word16] = 0xFF<16>
	Mem115[s3_84:byte] = 2<8>
	word32 s1_236
	word32 a0_237
	word32 a1_238
	word32 a2_239
	word32 a3_240
	word32 a4_241
	word32 a5_242
	word32 s2_243
	word32 s3_244
	word32 s4_245
	word32 s8_246
	ke_msg_send(s3_84, a2_75, mstatus, out s1_236, out a0_237, out a1_238, out a2_239, out a3_240, out a4_241, out a5_242, out s2_243, out s3_244, out s4_245, out s8_246)
	word32 s1_247
	word32 a0_248
	word32 a1_249
	word32 a2_250
	word32 a4_251
	word32 a5_252
	word32 s2_253
	word32 s3_254
	word32 s4_255
	ke_state_set(5<32>, 1<32>, mstatus, out s1_247, out a0_248, out a1_249, out a2_250, out a4_251, out a5_252, out s2_253, out s3_254, out s4_255)
l23061488:
	return
me_config_req_handler_exit:


void me_set_ps_disable_req_handler(word32 ra, word32 a1, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
me_set_ps_disable_req_handler_entry:
l230614A2:
	word32 s2_128 = a3
	branch CONVERT(Mem8[0x4201C9EC<32>:byte], byte, word32) != 0<32> l230614E4
l230614E4:
	word32 a0_26
	word32 a2_240
	word32 a4_241
	ke_state_get(5<32>, dwArg18, out a0_26, out a2_240, out a4_241, out s2_128)
	branch a0_26 == 1<32> l230614D2
l230614F4:
	a4 = Mem18[0x4201C8C0<32>:int32]
	word32 a3_37 = CONVERT(Mem18[a1:byte], byte, word32)
	branch a4 == 0<32> l23061544
l23061544:
	branch a3_37 == 0<32> l230614C2
l23061546:
l23061502:
	branch a3_37 != 0<32> l23061558
l23061558:
	Mem41[0x4201C8C0<32>:word32] = 1<32> << CONVERT(Mem18[a1 + 1<i32>:byte], byte, word32) | a4
l23061504:
	word32 a5_77
	word32 s0_75
	word32 a0_53
	word32 a2_55
	word32 s2_63
	word32 s3_64
	word32 s0_251
	word32 s1_252
	word32 a1_253
	word32 a3_254
	word32 a4_255
	word32 a5_256
	word32 a6_257
	word32 s4_258
	word32 s8_259
	ke_msg_alloc(ra, 49<i32>, 0<32>, 1<32>, a4, mstatus, dwLoc08, out s0_251, out s1_252, out a0_53, out a1_253, out a2_55, out a3_254, out a4_255, out a5_256, out a6_257, out s2_63, out s3_64, out s4_258, out s8_259)
	word32 a4_72 = CONVERT(Mem18[s3_64 + 1<i32>:byte], byte, word32)
	branch CONVERT(Mem18[s3_64:byte], byte, word32) == 0<32> l23061548
l23061548:
	s0_75 = Mem18[a4_72 + 4<i32>:word32]
	a5_77 = ~(1<32> << a4_72) & a4_72
l2306151C:
	s0_75 = Mem18[a4_72 + 4<i32>:word32]
	a5_77 = 1<32> << a4_72 | a4_72
l23061526:
	Mem84[a5_77 + 4<i32>:word32] = s0_75
	Mem87[s0_75 + 8<i32>:word16] = SLICE(s2_63, word16, 0)
	Mem90[a0_53:byte] = SLICE(CONVERT(a5_77 <u 1<i32>, bool, word32) << 1<i32>, byte, 0)
	word32 s1_101
	word32 a0_260
	word32 a1_261
	word32 a2_262
	word32 a3_263
	word32 a4_264
	word32 a5_265
	word32 s2_266
	word32 s3_267
	word32 s4_268
	word32 s8_269
	ke_msg_send(a0_53, a2_55, mstatus, out s1_101, out a0_260, out a1_261, out a2_262, out a3_263, out a4_264, out a5_265, out s2_266, out s3_267, out s4_268, out s8_269)
	word32 s1_270
	word32 a0_271
	word32 a1_272
	word32 a2_273
	word32 a4_274
	word32 a5_275
	word32 s2_276
	word32 s3_277
	word32 s4_278
	ke_state_set(s1_101, 1<32>, mstatus, out s1_270, out a0_271, out a1_272, out a2_273, out a4_274, out a5_275, out s2_276, out s3_277, out s4_278)
l230614C2:
	word32 s2_247
	word32 a0_244
	word32 s1_243
	word32 s3_248
	word32 s4_249
	word32 s8_250
	word32 a2_245
	word32 a3_246
	word32 s0_242
	ke_msg_send_basic(ra, 0x1000414<32>, s2_128, a4, mstatus, s2, dwLoc10, out s0_242, out s1_243, out a0_244, out a2_245, out a3_246, out s2_247, out s3_248, out s4_249, out s8_250)
l230614D0:
l230614D2:
	return
me_set_ps_disable_req_handler_exit:


void me_set_active_req_handler(word32 ra, word32 a1, word32 a3, word32 s2, word32 mstatus, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
me_set_active_req_handler_entry:
l23061568:
	word32 a0_21
	word32 s2_26
	word32 a2_230
	word32 a4_231
	ke_state_get(5<32>, dwArg18, out a0_21, out a2_230, out a4_231, out s2_26)
	branch a0_21 == 1<32> l230615EE
l23061588:
	word32 a4_31 = Mem14[a3:word32]
	word32 a2_32 = CONVERT(Mem14[a1:byte], byte, word32)
	branch a3 == 0<32> l230615DC
l230615DC:
	branch a2_32 != 0<32> l2306159E
l2306159C:
	branch a2_32 != 0<32> l2306160E
l2306160E:
	Mem37[1<32> << CONVERT(Mem14[a1 + 1<i32>:byte], byte, word32) | a3:word32] = a4_31
l230615DE:
	word32 s0_260
	word32 s1_261
	word32 a0_262
	word32 a2_263
	word32 a3_264
	word32 s2_265
	word32 s3_266
	word32 s4_267
	word32 s8_268
	ke_msg_send_basic(ra, 0x1000412<32>, s2_26, a4_31, mstatus, s2, dwLoc10, out s0_260, out s1_261, out a0_262, out a2_263, out a3_264, out s2_265, out s3_266, out s4_267, out s8_268)
l2306159E:
	word32 a5_102
	word32 s0_100
	word32 s0_232
	word32 a0_78
	word32 a2_80
	word32 s2_88
	word32 s3_89
	word32 s1_233
	word32 a1_234
	word32 a3_235
	word32 a4_236
	word32 a5_237
	word32 a6_238
	word32 s4_239
	word32 s8_240
	ke_msg_alloc(ra, 34<i32>, 0<32>, 1<32>, a4_31, mstatus, dwLoc08, out s0_232, out s1_233, out a0_78, out a1_234, out a2_80, out a3_235, out a4_236, out a5_237, out a6_238, out s2_88, out s3_89, out s4_239, out s8_240)
	word32 a4_97 = CONVERT(Mem14[s3_89 + 1<i32>:byte], byte, word32)
	branch CONVERT(Mem14[s3_89:byte], byte, word32) == 0<32> l230615FE
l230615FE:
	s0_100 = Mem14[a4_97:word32]
	a5_102 = ~(1<32> << a4_97) & a4_97
l230615B6:
	s0_100 = Mem14[a4_97:word32]
	a5_102 = 1<32> << a4_97 | a4_97
l230615C0:
	Mem109[a5_102:word32] = s0_100
	Mem111[s0_100 + 8<i32>:word16] = SLICE(s2_88, word16, 0)
	Mem114[a0_78:byte] = SLICE(CONVERT(a5_102 <u 1<i32>, bool, word32), byte, 0)
	word32 s1_125
	word32 a0_241
	word32 a1_242
	word32 a2_243
	word32 a3_244
	word32 a4_245
	word32 a5_246
	word32 s2_247
	word32 s3_248
	word32 s4_249
	word32 s8_250
	ke_msg_send(a0_78, a2_80, mstatus, out s1_125, out a0_241, out a1_242, out a2_243, out a3_244, out a4_245, out a5_246, out s2_247, out s3_248, out s4_249, out s8_250)
	word32 s1_251
	word32 a0_252
	word32 a1_253
	word32 a2_254
	word32 a4_255
	word32 a5_256
	word32 s2_257
	word32 s3_258
	word32 s4_259
	ke_state_set(s1_125, 1<32>, mstatus, out s1_251, out a0_252, out a1_253, out a2_254, out a4_255, out a5_256, out s2_257, out s3_258, out s4_259)
l230615EC:
l230615EE:
	return
me_set_active_req_handler_exit:


void me_sta_add_req_handler(word32 ra, word32 s1, word32 a3, word32 a4, word32 s4, word32 s7, word32 s9, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
me_sta_add_req_handler_entry:
	word16 wLoc46_506 = SLICE(dwLoc48, word16, 16)
l2306161C:
	word32 s2_112
	word32 s1_107
	word32 a0_35
	word32 s1_676
	word32 s0_675
	word32 a1_677
	word32 a2_678
	word32 a3_679
	word32 a4_680
	word32 a5_681
	word32 s3_684
	word32 a6_682
	word32 s4_685
	word32 s2_683
	word32 s8_686
	word32 ra_42 = ke_msg_alloc(ra, 0x1000408<32>, a3, 3<32>, a4, mstatus, dwLoc48, out s0_675, out s1_676, out a0_35, out a1_677, out a2_678, out a3_679, out a4_680, out a5_681, out a6_682, out s2_683, out s3_684, out s4_685, out s8_686)
	word32 a5_55 = rxu_cntrl_get_pm()
	word32 s0_56 = Mem32[a5_55 + 64<i32>:word32]
	branch (a5_55 & 2<32>) == 0<32> l23061824
l23061824:
	s2_112 = 0<32>
	s1_107 = 0<32>
l23061658:
	word32 a5_62 = CONVERT(Mem32[s0_56 + 22<i32>:byte], byte, word32)
	s2_112 = 1<32>
	word32 a5_67 = a5_62 >> 2<i32> & 7<32>
	branch a5_67 <= 2<32> l23061676
l2306166C:
	s2_112 = 1<32> << a5_67 + 0xFFFFFFFD<32> & 255<i32>
l23061676:
	s1_107 = CONVERT(SLICE((1<32> << (a5_62 & 3<i32>) + 13<i32>) + 0xFFFFFFFF<32>, word16, 0), word16, word32)
l23061686:
	word32 a4_86
	word32 a7_691
	word32 a3_688
	word32 a5_689
	word32 a6_690
	word32 a2_687
	memcpy(fp + -70<i32>, s0_56, 6<32>, out a2_687, out a3_688, out a4_86, out a5_689, out a6_690, out a7_691)
	word32 a5_99 = CONVERT(Mem85[s0_56 + 84<i32>:byte], byte, word32)
	word32 dwLoc48_508 = SEQ(wLoc46_506, SLICE(s1_107, word16, 0))
	word32 s0_135
	word32 s4_141
	word32 a0_154
	word32 s5_142
	word32 a2_128
	word32 ra_134 = mm_sta_add(ra_42, s1_107, fp + -80<i32>, a0_35, a4_86, CONVERT(Mem115[Mem109[a5_99 + 80<i32>:word32] + 85<i32>:byte], byte, word32), s2_112, s7, mstatus, dwLoc50, a5_99, dwLoc48_508, dwLoc28, dwLoc04, dwArg08, dwArg18, 0<32>, s9, s1, dwArg58, dwArg78, dwArg98, dwArgB8, out s0_135, out a0_154, out a2_128, out s4_141, out s5_142)
	Mem155[s5_142 + 1<i32>:byte] = SLICE(a0_154, byte, 0)
	branch a0_154 != 0<32> l23061802
l230616CE:
	word32 s9_221
	word32 s1_156 = CONVERT(Mem155[s5_142:byte], byte, word32)
	word32 a5_169
	word32 a7_707
	word32 a2_703
	word32 a3_704
	word32 a4_705
	word32 a6_706
	memcpy(s1_156 + 0x4201AA68<32>, s0_135 + 6<i32>, 0xD<32>, out a2_703, out a3_704, out a4_705, out a5_169, out a6_706, out a7_707)
	word32 s0_181 = Mem155[a5_169 + 64<i32>:word32]
	branch (a5_169 & 1<32>) != 0<32> l2306182A
l2306182A:
	word32 a5_183 = Mem155[s1_156 + 0x4201AAA4<32>:int32]
	Mem185[s1_156 + 0x4201AAA4<32>:word32] = a5_183 | 1<i32>
	s0_181 = Mem185[(a5_183 | 1<i32>) + 64<i32>:word32]
	branch ((a5_183 | 1<i32>) & 2<32>) == 0<32> l23061706
l2306183E:
	branch CONVERT(Mem185[0x4201C8EA<32>:byte], byte, word32) == 0<32> l23061706
l2306184A:
	Mem191[s1_156 + 0x4201AAA4<32>:word32] = a5_183 | 3<i32>
	word32 a4_713
	word32 a6_715
	word32 a7_716
	word32 a5_714
	word32 a2_711
	word32 a3_712
	memcpy(s1_156 + 0x4201AA78<32>, s0_181 + 20<i32>, 32<i32>, out a2_711, out a3_712, out a4_713, out a5_714, out a6_715, out a7_716)
	word32 a4_717
	s9_221 = me_set_sta_ht_vht_param(s1_156 + 0x4201A9B8<32>, s4_141 + 0x4201C628<32>, out a4_717)
l23061706:
	s9_221 = 0<32>
l23061708:
	Mem238[s1_156 + 0x4201AAAA<32>:byte] = SLICE(CONVERT(Mem229[s0_181 + 70<i32>:byte], byte, word32), byte, 0)
	Mem240[s1_156 + 0x4201AAAB<32>:byte] = SLICE(CONVERT(Mem238[s0_181 + 71<i32>:byte], byte, word32), byte, 0)
	Mem242[s1_156 + 0x4201A9D0<32>:word16] = SLICE(CONVERT(Mem240[s0_181 + 68<i32>:uint16], uint16, word32), word16, 0)
	word32 a5_265
	word32 s8_279
	word32 s9_280
	word32 a3_718
	word32 s1_270
	word32 s3_274
	word32 s7_278
	word32 s6_277
	word32 s4_275
	word32 ra_268 = me_init_rate(ra_134, s1_156 + 0x4201A9B8<32>, s9_221, fflags, frm, mstatus, dwLoc54, s4, dwLoc28, dwArg08, dwArg88, dwArgB8, dwArg0138, out s1_270, out a3_718, out a5_265, out s3_274, out s4_275, out s5_142, out s6_277, out s7_278, out s8_279, out s9_280)
	word32 s0_288 = Mem242[a5_265 + 64<i32>:word32]
	branch (a5_265 & 0x10<32>) == 0<32> l23061750
l23061734:
	word32 a1_290 = CONVERT(Mem242[s0_288 + 72<i32>:byte], byte, word32)
	branch CONVERT(SLICE(a1_290, byte, 0), byte, int32) < 0<32> l23061750
l23061742:
	word32 a4_709
	word32 a5_710
	word32 a1_708
	ra_268 = me_sta_bw_nss_max_upd(CONVERT(Mem242[s8_279 + 27<i32>:byte], byte, word32), a1_290 & 3<32>, a1_290 >>u 4<u32>, dwArg58, out s1_270, out a1_708, out a4_709, out a5_710, out s3_274, out s4_275, out s5_142, out s6_277, out s7_278)
l23061750:
	branch s9_280 == 0<32> l2306176C
l23061754:
	word32 a1_719
	word32 a4_720
	word32 a5_721
	ra_268 = me_sta_bw_nss_max_upd(CONVERT(Mem242[s1_270 + 432<i32> + s3_274 + 27<i32>:byte], byte, word32), 255<i32>, 0<32>, dwArg58, out s1_270, out a1_719, out a4_720, out a5_721, out s3_274, out s4_275, out s5_142, out s6_277, out s7_278)
l2306176C:
	word32 a5_355 = s1_270 + 432<i32> + s3_274
	Mem359[a5_355 + 282<i32>:byte] = SLICE(CONVERT(Mem242[a5_355 + 282<i32>:byte], byte, word32) | 16<i32>, byte, 0)
	word32 a4_366 = s4_275 + 1496<i32> + s7_278
	Mem371[a5_355 + 49<i32>:byte] = SLICE(CONVERT((Mem359[a4_366 + 1476<i32>:int32] & 1<32>) <u 1<i32>, bool, word32) + 1<32>, byte, 0)
	word32 a3_372 = CONVERT(Mem371[a4_366 + 844<i32>:uint16], uint16, word32)
	Mem376[a5_355 + 56<i32>:word16] = SLICE(a3_372 >>u 8<i32> | a3_372 << 8<u32>, word16, 0)
	Mem381[s5_142 + 2<i32>:byte] = SLICE(s6_277, byte, 0)
	a2_128 = a3_372 << 8<u32>
	branch s6_277 == 0<32> l23061802
l230617B4:
	Mem382[a5_355 + 28<i32>:byte] = SLICE(s6_277, byte, 0)
	branch CONVERT(Mem382[a4_366 + 842<i32>:byte], byte, word32) != 0<32> l230617EE
l230617BE:
	word32 a0_397
	word32 a2_399
	word32 s0_405
	word32 s2_407
	word32 s3_408
	word32 s8_729
	word32 a4_725
	word32 a6_727
	word32 s4_728
	word32 a5_726
	word32 a1_723
	word32 a3_724
	word32 s1_722
	ke_msg_alloc(ra_268, 73<i32>, 0xD<32>, 2<32>, a4_366, mstatus, dwLoc48_508, out s0_405, out s1_722, out a0_397, out a1_723, out a2_399, out a3_724, out a4_725, out a5_726, out a6_727, out s2_407, out s3_408, out s4_728, out s8_729)
	Mem417[s3_408 + s2_407 + 28<i32>:byte] = 1<8>
	Mem418[a0_397:byte] = SLICE(s0_405, byte, 0)
	Mem419[a0_397 + 1<i32>:byte] = 1<8>
	word32 s3_737
	word32 s8_738
	word32 a5_735
	word32 s2_736
	word32 a0_731
	word32 a1_732
	word32 a3_733
	word32 a4_734
	word32 s1_730
	ke_msg_send(a0_397, a2_399, mstatus, out s1_730, out a0_731, out a1_732, out a2_128, out a3_733, out a4_734, out a5_735, out s2_736, out s3_737, out s4_275, out s8_738)
l230617EE:
	word32 s7_440 = s7_278 + (s4_275 + 1496<i32>)
	Mem444[s7_440 + 842<i32>:byte] = SLICE(CONVERT(Mem441[s7_440 + 842<i32>:byte], byte, word32) + 1<32>, byte, 0)
l23061802:
	word32 s4_701
	word32 s8_702
	word32 a0_693
	word32 s2_699
	word32 s3_700
	word32 a2_695
	word32 a3_696
	word32 a4_697
	word32 a5_698
	word32 a1_694
	word32 s1_692
	ke_msg_send(s5_142, a2_128, mstatus, out s1_692, out a0_693, out a1_694, out a2_695, out a3_696, out a4_697, out a5_698, out s2_699, out s3_700, out s4_701, out s8_702)
	return
me_sta_add_req_handler_exit:


word32 me_set_sta_ht_vht_param(word32 a0, word32 a1, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_sta_add_req_handler
//      mm_sta_add_cfm_handler
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
me_set_sta_ht_vht_param_entry:
l23061878:
	word32 a5_5 = CONVERT(Mem0[a0 + 192<i32>:uint16], uint16, word32)
	word32 a7_8 = CONVERT(Mem0[0x4201C9EB<32>:byte], byte, word32)
	word32 a3_11 = a5_5 >>u 1<u32> & 1<32>
	word32 a2_12 = a5_5 >> 8<u32> & 3<32>
	branch a7_8 >=u a3_11 l2306189A
l23061898:
	a3_11 = a7_8
l2306189A:
	Mem16[a0 + 240<i32>:byte] = SLICE(a3_11, byte, 0)
	word32 a4_19 = CONVERT(Mem16[a1 + 131<i32>:byte], byte, word32)
	branch a4_19 != 4<32> l230618AA
l230618A8:
	a4_19 = 2<32>
l230618AA:
	branch a3_11 >=u a4_19 l230618B0
l230618AE:
	a4_19 = a3_11
l230618B0:
	Mem28[a0 + 241<i32>:byte] = SLICE(a4_19, byte, 0)
	word32 a4_32 = CONVERT(Mem28[0x4201C9EA<32>:byte], byte, word32)
	branch a2_12 >=u a4_32 l230618BE
l230618BC:
	a4_32 = a2_12
l230618BE:
	Mem39[a0 + 244<i32>:byte] = SLICE(a4_32, byte, 0)
	a4Out = a4_32
	return CONVERT((a5_5 & 12<i32>) != 0xFFFFFFF4<32>, bool, word32)
me_set_sta_ht_vht_param_exit:


word32 me_11n_nss_max(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_sta_bw_nss_max_upd
//      rc_init
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
me_11n_nss_max_entry:
l230618CE:
	word32 a5_10
	branch CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32) != 0<32> l230618E8
l230618E8:
	a5_10 = 3<32>
l230618D4:
	a5_10 = 2<32>
	branch CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) != 0<32> l230618E4
l230618DC:
	a5_10 = CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32)
	branch a5_10 == 0<32> l230618E4
l230618E2:
	a5_10 = 1<32>
l230618E4:
	return a5_10
me_11n_nss_max_exit:


word32 me_legacy_ridx_min(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_init
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
me_legacy_ridx_min_entry:
l230618EC:
	word32 a5_10 = 0<32>
l230618F0:
	word32 a3_12 = a5_10 & 255<i32>
	branch (a0 >> a5_10 & 1<32>) != 0<32> l23061904
l230618FC:
	a5_10 = a5_10 + 1<32>
	branch a5_10 != 0xC<32> l230618F0
l23061902:
	a3_12 = 0xC<32>
l23061904:
	return a3_12
me_legacy_ridx_min_exit:


word32 me_legacy_ridx_max(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_init
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
me_legacy_ridx_max_entry:
l23061908:
	branch a0 == 0<32> l23061932
l23061932:
	return 0xC<32>
l2306190A:
	word32 a5_15 = 0xB<32>
l23061910:
	word32 a4_14 = 0xB<32> - a5_15 & 255<i32>
	branch (a0 >> a5_15 & 1<32>) != 0<32> l23061928
l23061920:
	a5_15 = a5_15 + 0xFFFFFFFF<32>
	branch a5_15 != 0xFFFFFFFF<32> l23061910
l23061926:
	a4_14 = 0xC<32>
l23061928:
	return 0xB<32> - a4_14 & 255<i32>
me_legacy_ridx_max_exit:


word32 me_rate_translate(word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_assoc_req_handler
//      me_legacy_rate_bitfield_build
//      me_init_bcmc_rate
// MayUse:  a0:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
me_rate_translate_entry:
l23061936:
	word32 a0_10
	word32 a4_11 = 0x16<32>
	branch (a0 & 127<i32>) == 0x16<32> l230619AE
l230619AE:
	a0_10 = 3<32>
l23061940:
	branch (a0 & 127<i32>) >u 0x16<32> l23061974
l23061974:
	a4_11 = 48<i32>
	a0_10 = 8<32>
	branch (a0 & 127<i32>) == 48<i32> l230619B0
l2306197E:
	branch (a0 & 127<i32>) >u 48<i32> l23061992
l23061992:
	a4_11 = 96<i32>
	a0_10 = 0xA<32>
	branch (a0 & 127<i32>) == 96<i32> l230619B0
l2306199C:
	a4_11 = 108<i32>
	a0_10 = 0xB<32>
	branch (a0 & 127<i32>) == 108<i32> l230619B0
l230619A6:
	a4_11 = 72<i32>
	a0_10 = 9<32>
l23061982:
	a4_11 = 0x18<32>
	a0_10 = 6<32>
	branch (a0 & 127<i32>) == 0x18<32> l230619B0
l2306198A:
	a4_11 = 36<i32>
	a0_10 = 7<32>
l23061944:
	a4_11 = 0xB<32>
	a0_10 = 2<32>
	branch (a0 & 127<i32>) == 0xB<32> l230619B0
l2306194C:
	branch (a0 & 127<i32>) >u 0xB<32> l23061966
l23061966:
	a4_11 = 0xC<32>
	a0_10 = 4<32>
	branch (a0 & 127<i32>) == 0xC<32> l230619B0
l2306196E:
	a4_11 = 0x12<32>
	a0_10 = 5<32>
l23061950:
	a4_11 = 2<32>
	a0_10 = 0<32>
	branch (a0 & 127<i32>) == 2<32> l230619B0
l23061958:
	a4_11 = 4<32>
	a0_10 = 1<32>
l2306195C:
	branch (a0 & 127<i32>) == a4_11 l230619B0
l230619B0:
	a4Out = a4_11
	return a0_10
l23061960:
	a4Out = a4_11
	return 255<i32>
me_rate_translate_exit:


void me_get_basic_rates(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_req_handler
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
me_get_basic_rates_entry:
l230619B2:
	Mem4[a1:byte] = 0<8>
	word32 a5_21 = 0<32>
l230619B8:
	branch a5_21 < CONVERT(Mem7[a0:byte], byte, word32) l230619C2
l230619C2:
	word32 a3_11 = CONVERT(Mem7[a0 + a5_21 + 1<i32>:byte], byte, word32)
	branch CONVERT(SLICE(a3_11, byte, 0), byte, int32) >= 0<32> l230619E6
l230619D4:
	word32 a4_15 = CONVERT(Mem7[a1:byte], byte, word32)
	Mem17[a1 + a4_15 + 1<i32>:byte] = SLICE(a3_11, byte, 0)
	Mem19[a1:byte] = SLICE(a4_15 + 1<32>, byte, 0)
l230619E6:
	a5_21 = a5_21 + 1<32>
l230619C0:
	return
me_get_basic_rates_exit:


word32 me_legacy_rate_bitfield_build(word32 a0, word32 a1, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_set_bss_param
//      apm_set_bss_param
//      apm_assoc_req_handler
//      rc_init
//      rxu_mgt_ind_handler
//      apm_start_req_handler
// MayUse:  a0:[0..31] a1:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 s0 s1 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
me_legacy_rate_bitfield_build_entry:
l230619EA:
	word32 s0_26 = 0<32>
	word32 s1_27 = 0<32>
l23061A12:
	branch s1_27 < CONVERT(Mem21[a0:byte], byte, word32) l23061A32
l23061A32:
	word32 a0_37 = CONVERT(Mem21[a0 + s1_27 + 1<i32>:byte], byte, word32)
	branch a1 == 0<32> l23061A48
l23061A3E:
	branch CONVERT(SLICE(a0_37, byte, 0), byte, int32) >= 0<32> l23061A60
l23061A48:
	word32 a0_42 = me_rate_translate(a0_37, out a4)
	branch a0_42 <= 0xB<32> l23061A64
l23061A64:
	s0_26 = CONVERT(SLICE(s0_26 | 1<32> << a0_42, word16, 0), word16, word32)
l23061A50:
	assert_warn()
l23061A60:
	s1_27 = s1_27 + 1<32>
l23061A1A:
	0<32> = dwArg0128
	s1Out = s1_27
	a0Out = s0_26
	a4Out = a4
	s2Out = a0
	s3Out = 1<32>
	s4Out = dwArg78
	s5Out = 0xB<32>
	s6Out = 0x2307B000<32>
	s7Out = 0x2307F000<32>
	s8Out = s5
	return dwArgE4
me_legacy_rate_bitfield_build_exit:


word32 me_build_capability(word32 a0, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
// MayUse:  a0:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: a1 sp
me_build_capability_entry:
l23061A70:
	word32 a2_11 = CONVERT(Mem0[a0 + 0x4201C326<32>:byte], byte, word32)
	word32 a4_12 = 0x11<32>
	branch a2_11 == 0<32> l23061AA6
l23061A8E:
	a4_12 = 1<32>
	branch a2_11 != 2<32> l23061AA6
l23061A96:
	a2_11 = 0x12FFFA00<32>
	branch (Mem0[a0 + 0x4201C6B8<32>:int32] & 0x12FFFA00<32>) == 0<32> l23061AA6
l23061AA4:
	a4_12 = 0x11<32>
l23061AA6:
	word32 a0_28 = a4_12 | 1312<i32>
	word32 a3_29 = CONVERT(Mem0[Mem0[a0 + 0x4201C674<32>:int32] + 2<i32>:byte], byte, word32)
	branch a3_29 == 1<32> l23061AC6
l23061AC2:
	a0_28 = a4_12 | 1056<i32>
l23061AC6:
	a2Out = a2_11
	a3Out = a3_29
	a4Out = a4_12
	a5Out = 1<32>
	return a0_28
me_build_capability_exit:


word32 me_init_bcmc_rate(word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_cfm
// MayUse:  a0:[0..31]
// LiveOut: a3 a4
// Trashed: a1 a2 a3 a4 a5
// Preserved: a0 s0 sp
me_init_bcmc_rate_entry:
l23061AC8:
	branch CONVERT(Mem7[a0 + 176<i32>:byte], byte, word32) != 0<32> l23061AEE
l23061AEE:
	word32 a3_16 = CONVERT(Mem7[a0 + 176<i32>:byte], byte, word32)
	word32 a5_17 = 0<32>
	word32 a0_18 = 0<32>
l23061AF6:
	branch a5_17 < a3_16 l23061B12
l23061B12:
	word32 a4_24 = CONVERT(Mem7[a0 + a5_17 + 177<i32>:byte], byte, word32)
	branch a0_18 >= (a4_24 & -129<i32>) l23061B26
l23061B22:
	a0_18 = a4_24 & 127<i32>
l23061B26:
	a5_17 = a5_17 + 1<32>
l23061AFA:
	word32 a4_38
	word32 a4_58
	word32 a3_37 = rc_init_bcmc_rate(a0, me_rate_translate(a0_18, out a4_58), out a4_38)
	Mem43[a0 + 282<i32>:byte] = 0<8>
	a4Out = a4_38
	return a3_37
me_init_bcmc_rate_exit:
l23061AD6:
	assert_err()


word32 me_tx_cfm_singleton(word32 a5, word32 dwArg1C, word32 dwArg24, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cfm_evt
// MayUse:  a5:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0128:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t3 tp
// Preserved: sp
me_tx_cfm_singleton_entry:
l23061B2A:
	word32 a0_17
	word32 a5_8 = Mem0[Mem0[a5:word32] + 16<i32>:word32]
	word32 a2_11 = a5_8 >>u 8<u32> & 255<i32>
	word32 a0_5 = Mem0[a5 + 108<i32>:word32]
	word32 a2_14 = a2_11 + CONVERT((a5_8 & 0x10000000<32>) != 0<32>, bool, word32)
	branch (a5_8 & 0x10000000<32>) == 0<32> l23061B6C
l23061B6C:
	a0_17 = CONVERT(Mem0[a0_5 + 48<i32>:byte], byte, word32)
l23061B48:
	rf_dump_status()
	a2_14 = dwArg24
	a0_17 = CONVERT(Mem23[a0_5 + 48<i32>:byte], byte, word32)
l23061B68:
l23061B68_thunk_rc_update_counters:
	return rc_update_counters(a0_17, a2_11 + 1<i32>, a2_14, dwArg1C, dwArg0128)
me_tx_cfm_singleton_exit:


word32 me_check_rc(word32 ra, word32 a0, word32 s6, word32 dwArg14, word32 dwArg28, word32 dwArg30, word32 dwArg58, word32 dwArg010C, ptr32 & s0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txu_cntrl_push
// MayUse:  a0:[0..31] ra:[0..31] s6:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0058:[0..31] Stack +010C:[0..31]
// LiveOut: ra s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 tp
// Preserved: sp
me_check_rc_entry:
l23061B76:
l23061B76_thunk_rc_check:
	word32 s0_14
	word32 s2_26
	word32 ra_13 = rc_check(ra, a0, s6, dwArg14, dwArg28, dwArg30, dwArg58, dwArg010C, out s0_14, out s2_26)
	s0Out = s0_14
	s2Out = s2_26
	return ra_13
me_check_rc_exit:


word32 me_update_buffer_control(word32 ra, word32 a0, word32 fflags, word32 frm, word32 mstatus, word32 dwArg0198, ptr32 & a0Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txu_cntrl_push
//      me_init_rate
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0198:[0..31]
// LiveOut: a0 s0 s3 s4 s8
// Trashed: a0 a2 a6 s0 s3 s4 s8 t3 tp
// Preserved: a1 a3 a4 a5 a7 s1 s2 s5 s6 sp t0 t1 t2 t4 t5 t6
me_update_buffer_control_entry:
l23061B7A:
	word32 a2_21 = CONVERT(Mem19[a0 + 282<i32>:byte], byte, word32)
	word32 s3_22 = Mem19[a0 + 268<i32>:int32]
	branch a2_21 == 0<32> l23061CDC
l23061B98:
	word32 s2_106 = Mem19[s3_22 + 4<i32>:int32]
	word32 s1_215 = s3_22 + 20<i32>
	word32 a4_25 = s3_22 + 20<i32>
	word32 a5_26 = 0<32>
l23061BAA:
	Mem36[fp + -64<i32> + a5_26:word32] = Mem30[a4_25:int32]
	a4_25 = a4_25 + 4<32>
	Mem41[fp + -48<i32> + a5_26:word32] = Mem36[a4_25 + 12<i32>:int32]
	a5_26 = a5_26 + 4<32>
	branch a5_26 != 0x10<32> l23061BAA
l23061BCA:
	branch (a2_21 & 1<i32>) == 0<32> l23061C5A
l23061BD0:
	word32 a7_46 = Mem41[a0 + 272<i32>:int32]
	word32 t6_47 = CONVERT(Mem41[a0 + 244<i32>:byte], byte, word32)
	word32 t5_49 = CONVERT(Mem41[a7_46 + 176<i32>:byte], byte, word32)
	word32 a6_50 = fp + -64<i32>
	word32 s0_107 = 0<32>
	word32 a4_108 = 0<32>
	word32 a1_53 = 0<32>
l23061BF4:
	word32 a5_76 = CONVERT(Mem67[CONVERT(Mem67[((t5_49 + a1_53 & 3<32>) + 0xE<32> << 3<i32>) + a7_46 + 16<i32>:uint16], uint16, word32) + 0xC<32> + a7_46 + 10<i32>:uint16], uint16, word32) & 0x3FFFFFF<32> | 0x80000000<32>
	branch (a5_76 >>u 0xB<u32> & 6<32>) == 0<32> l23061C2E
l23061C1E:
	word32 a3_80 = a5_76 >>u 3<u32> & 3<32>
	branch a1_53 != 0<32> l23061CF2
l23061CF2:
	branch s0_107 == 0<32> l23061C2E
l23061CF4:
	s0_107 = CONVERT(a3_80 - a4_108 <u 1<i32>, bool, word32)
l23061C26:
	branch a3_80 >=u t6_47 l23061C2E
l23061C2A:
	a4_108 = a3_80
	s0_107 = 1<32>
l23061C2E:
	a6_50 = a6_50 + 4<32>
	Mem100[a6_50 + 4092<i32>:word32] = a5_76 | Mem67[a6_50:int32] & 0x1FFFC000<32>
	a1_53 = a1_53 + 1<32>
	branch a1_53 != 4<32> l23061BF4
l23061C44:
	s2_106 = s2_106 & -385<i32>
	branch s0_107 == 0<32> l23061C52
l23061C4A:
	s2_106 = s2_106 & -385<i32> | a4_108 + 1<32> << 7<i32>
l23061C52:
	Mem119[a0 + 282<i32>:byte] = SLICE(a2_21 | 2<i32>, byte, 0)
l23061C5A:
	word32 a2_122 = CONVERT(Mem121[a0 + 282<i32>:byte], byte, word32)
	word32 a5_123 = a2_122 & 2<i32>
	branch (a2_122 & 2<i32>) == 0<32> l23061C8E
l23061C64:
l23061C6C:
	word32 a4_133 = Mem132[a5_123:word32]
	branch (a5_123 >>u 0xB<u32> & 7<32> | a5_123 & 124<i32>) == 0<32> l23061C88
l23061C7E:
	a5_123 = a5_123 & 0xE0003FFF<32> | Mem132[a0 + 276<i32>:int32]
	Mem143[a5_123:word32] = a4_133
l23061C88:
	branch fp + -48<i32> != a4_133 + 4<32> l23061C6C
l23061C8E:
	branch (a2_122 & 0x10<32>) == 0<32> l23061CAE
l23061C94:
	word32 s5_155 = 0<32>
	a0_157 = a0
l23061C98:
	word32 a0_157
	word32 a3_529
	word32 a5_531
	word32 a4_530
	word32 a1_528
	a0_157 = tpc_get_vif_tx_power_vs_rate(ra, a0_157, fflags, frm, out a1_528, out a3_529, out a4_530, out a5_531)
	Mem176[a0_157:word32] = fp + -48<i32> + s5_155
	s5_155 = s5_155 + 4<32>
	branch s5_155 != 0x10<32> l23061C98
l23061CAE:
	__csrrc(mstatus, 8<32>)
	Mem208[s3_22 + 4<i32>:word32] = s2_106
	word32 a5_190 = 0<32>
l23061CBA:
	s1_215 = s1_215 + 4<32>
	Mem217[s1_215 + 4092<i32>:word32] = Mem213[fp + -64<i32> + a5_190:word32]
	Mem222[Mem217[fp + -48<i32> + a5_190:word32] + 12<i32>:word32] = s1_215
	a5_190 = a5_190 + 4<32>
	branch a5_190 != 0x10<32> l23061CBA
l23061CD4:
	__csrrs(mstatus, 8<32>)
	Mem228[a0 + 282<i32>:byte] = 0<8>
l23061CDC:
	0<32> = dwArg0198
	a0Out = s3_22
	s3Out = s3_22
	s4Out = dwArgF4
	s8Out = dwArgD4
	return dwArg0158
me_update_buffer_control_exit:


word32 me_init_rate(word32 ra, word32 a0, word32 s9, word32 fflags, word32 frm, word32 mstatus, word32 dwArg0C, word32 dwArg24, word32 dwArg38, word32 dwArg68, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_assoc_rsp_handler
//      me_sta_add_req_handler
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s9:[0..31] Stack +000C:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a3 a5 ra s1 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
me_init_rate_entry:
l23061CFC:
	word32 a3_14
	word32 a5_16
	word32 s0_20
	word32 s1_21
	word32 s5_27
	word32 s6_28
	word32 s7_29
	word32 s9_31
	word32 ra_19 = rc_init(ra, a0, s9, dwLoc08, dwArg0C, dwArg24, dwArg38, dwArg68, dwArgE8, dwArg0118, out s0_20, out s1_21, out a3_14, out a5_16, out s5_27, out s6_28, out s7_29, out s9_31)
l23061D10_thunk_me_update_buffer_control:
	word32 s3_50
	word32 s4_51
	word32 s8_52
	word32 a0_76
	me_update_buffer_control(ra_19, s0_20, fflags, frm, mstatus, dwArg0198, out a0_76, out s3_50, out s4_51, out s8_52)
	s1Out = s1_21
	a3Out = a3_14
	a5Out = a5_16
	s3Out = s3_50
	s4Out = s4_51
	s5Out = s5_27
	s6Out = s6_28
	s7Out = s7_29
	s8Out = s8_52
	s9Out = s9_31
	return ra_19
me_init_rate_exit:


word32 me_bw_check(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_beacon_check
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a2
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
me_bw_check_entry:
l23061D14:
	word32 a2_5 = Mem0[a5 + 76<i32>:word32]
	word32 a4_20 = CONVERT(Mem0[a5:uint16], uint16, word32)
	word32 a5_10 = 0<32>
	branch a0 == 0<32> l23061D42
l23061D1E:
	a5_10 = CONVERT(Mem0[0x4201C9EB<32>:byte], byte, word32)
	branch a5_10 == 0<32> l23061D42
l23061D28:
	word32 a5_11 = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32)
	a5_10 = a5_11 & 3<32>
	branch (a5_11 & 3<32>) == 0<32> l23061D42
l23061D30:
	word32 a3_14 = 0xA<32>
	branch (a5_11 & 3<32>) == 1<32> l23061D3A
l23061D38:
	a3_14 = 0xFFFFFFF6<32>
l23061D3A:
	a4_20 = CONVERT(SLICE(a4_20 + a3_14, word16, 0), word16, word32)
	a5_10 = 1<32>
l23061D42:
	Mem25[a2_5 + 130<i32>:byte] = SLICE(a5_10, byte, 0)
	Mem26[a2_5 + 131<i32>:byte] = SLICE(a5_10, byte, 0)
	Mem28[a2_5 + 80<i32>:word16] = SLICE(a4_20, word16, 0)
	Mem29[a2_5 + 82<i32>:word16] = 0<16>
	return a2_5
me_bw_check_exit:


word32 me_beacon_check(word32 ra, word32 a0, word32 a1, word32 a2, word32 s2, word32 s6, word32 s8, word32 fflags, word32 frm, word32 mstatus, word32 dwArg68, word32 dwArg0198, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_frame_check
//      mm_bcn_change
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s6:[0..31] s8:[8..15] Stack +0068:[0..31] Stack +0198:[0..31]
// LiveOut: a3 a4 a5 ra s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: a7 sp
me_beacon_check_entry:
l23061D54:
	word32 a5_30 = Mem28[a0 + 0x4201C674<32>:int32]
	Mem31[a0 + 0x4201C6A8<32>:word16] = 0<16>
	byte bLoc33_365 = SLICE(s8, byte, 8)
	word32 s3_35 = a1 + -36<i32> << 0x10<u32>
	branch CONVERT(Mem31[a5_30 + 2<i32>:byte], byte, word32) != 0<32> l23061E06
l23061DA8:
	word32 a5_541
	word32 a0_48 = mac_ie_find(a2 + 36<i32>, s3_35 >>u 0x10<u32>, 42<i32>, out a5_541)
	branch a0_48 == 0<32> l23061E06
l23061DB6:
	word32 a5_52 = (CONVERT(Mem31[a0 + 0x4201C6A8<32>:uint16], uint16, word32) & 0xFFFFFFF8<32>) << 16<i32>
	word32 a4_50 = CONVERT(Mem31[a0_48 + 2<i32>:byte], byte, word32)
	word32 a5_54 = a5_52 >>u 16<i32>
	branch (a4_50 & 1<i32>) != 0<32> l23061F64
l23061F64:
	a5_54 = a5_52 >>u 16<i32> | 1<i32>
l23061DCC:
	Mem58[a0 + 0x4201C6A8<32>:word16] = SLICE(a5_54, word16, 0)
	branch (a4_50 & 2<i32>) == 0<32> l23061DEC
l23061DD6:
	Mem68[a0 + 0x4201C6A8<32>:word16] = SLICE(CONVERT(Mem58[a0 + 0x4201C6A8<32>:uint16], uint16, word32) | 2<i32>, word16, 0)
l23061DEC:
	branch (a4_50 & 4<32>) == 0<32> l23061E06
l23061DF0:
	Mem79[a0 + 0x4201C6A8<32>:word16] = SLICE(CONVERT(Mem76[a0 + 0x4201C6A8<32>:uint16], uint16, word32) | 4<i32>, word16, 0)
l23061E06:
	word32 a5_106 = CONVERT(Mem81[0x4201C8EA<32>:byte], byte, word32)
	word32 a0_107 = 0<32>
	branch a5_106 == 0<32> l23061E1E
l23061E12:
	a0_107 = mac_ie_find(a2 + 36<i32>, s3_35 >>u 0x10<u32>, 61<i32>, out a5_106)
l23061E1E:
	me_bw_check(a0_107, a5_106)
	word32 a3_114 = a0 + 0x4201C898<32>
	word32 a0_125
	word32 s5_134
	word32 s6_140
	word32 s8_135
	word32 s4_133
	word32 s1_131
	word32 s2_132
	word32 s3_139
	word32 s0_130 = me_extract_csa(a2 + 36<i32>, s3_35 >>u 0x10<u32>, fp + -51<i32>, a0 + 0x4201C898<32>, dwArg68, out s1_131, out a0_125, out s2_132, out s3_139, out s4_133, out s5_134, out s6_140, out s8_135)
	word32 dwLoc34_467 = s8
	word16 wLoc34_481 = SLICE(s8, word16, 0)
	byte bLoc31_482 = SLICE(s8, byte, 24)
	branch (a0_125 & 255<i32>) == 0<32> l23061E80
l23061E46:
	word32 a5_144 = s2_132 + 1496<i32> + s0_130
	word32 a4_145 = CONVERT(Mem81[a5_144 + 86<i32>:byte], byte, word32)
	branch a4_145 != 0<32> l23061F6A
l23061F6A:
	a3_114 = 2<32>
	branch a4_145 != 2<32> l23061E80
l23061F70:
	Mem147[a5_144 + 839<i32>:byte] = SLICE(a0_125 & 255<i32>, byte, 0)
l23061E58:
	branch CONVERT(Mem81[a5_144 + 121<i32>:byte], byte, word32) != 0<32> l23061E72
l23061E5E:
	a3_114 = CONVERT(bLoc33_365, byte, word32)
	branch a3_114 != 1<32> l23061E72
l23061E68:
	ra = mm_send_csa_traffic_ind(ra, 1<32>, mstatus, dwLoc38, s6, out s0_130, out s1_131, out a3_114, out s2_132, out s3_139, out s4_133, out s8_135)
l23061E72:
	Mem186[s2_132 + 1496<i32> + s0_130 + 121<i32>:byte] = SLICE(a0_125 & 255<i32>, byte, 0)
l23061E80:
	me_extract_power_constraint(s4_133, s3_139, s8_135)
	word32 a5_204 = s2_132 + 1496<i32> + s0_130
	word32 a4_206 = CONVERT(Mem205[a5_204 + 988<i32>:byte], byte, word32)
	branch a4_206 == s6_140 l23061EB8
l23061E9C:
	byte bLoc32_377 = SLICE(CONVERT(Mem205[Mem205[a5_204 + 932<i32>:int32] + 4<i32>:byte], byte, word32) - a4_206, byte, 0)
	word32 s1_542
	word32 a2_543
	s0_130 = tpc_update_vif_tx_power(ra, s1_131, fp + -50<i32>, fp + -49<i32>, a3_114, fflags, frm, out s1_542, out a2_543, out a3_114, out a4_206, out s2_132, out s3_139)
	dwLoc34_467 = SEQ(bLoc31_482, bLoc32_377, wLoc34_481) (alias)
l23061EB8:
	word32 a5_260 = CONVERT(Mem259[s2_132 + 1496<i32> + s0_130 + 987<i32>:byte], byte, word32)
	branch s5_134 >=u a5_260 l23061F4C
l23061ECA:
	word32 a0_274
	word32 a2_276
	word32 s1_283
	word32 s4_286
	word32 a1_545
	word32 s0_544
	word32 a6_549
	word32 s2_550
	word32 s8_552
	word32 a5_548
	word32 s3_551
	word32 a3_546
	word32 a4_547
	ra = ke_msg_alloc(ra, 59<i32>, 0<32>, 0xC<32>, a4_206, mstatus, s2, out s0_544, out s1_283, out a0_274, out a1_545, out a2_276, out a3_546, out a4_547, out a5_548, out a6_549, out s2_550, out s3_551, out s4_286, out s8_552)
	branch Mem259[s4_286 + 64<i32>:int32] != 0<32> l23061EF8
l23061EF8:
	Mem304[a0_274:byte] = SLICE(CONVERT(Mem259[1519<i32>:byte], byte, word32), byte, 0)
	Mem307[a0_274 + 1<i32>:byte] = SLICE(CONVERT(Mem304[Mem304[s1_283 + 932<i32>:int32] + 2<i32>:byte], byte, word32), byte, 0)
	Mem309[a0_274 + 2<i32>:byte] = SLICE(CONVERT(Mem307[s1_283 + 987<i32>:byte], byte, word32), byte, 0)
	Mem312[a0_274 + 4<i32>:word16] = SLICE(CONVERT(Mem309[Mem309[s1_283 + 932<i32>:int32]:uint16], uint16, word32), word16, 0)
	Mem314[a0_274 + 6<i32>:word16] = SLICE(CONVERT(Mem312[s1_283 + 936<i32>:uint16], uint16, word32), word16, 0)
	word32 a5_315 = CONVERT(Mem314[s1_283 + 938<i32>:uint16], uint16, word32)
	Mem316[a0_274 + 8<i32>:word16] = SLICE(a5_315, word16, 0)
	Mem319[a0_274 + 10<i32>:byte] = SLICE(CONVERT(Mem316[a5_315 + 12<i32>:int8], int8, int32), byte, 0)
	word32 s4_557
	word32 s8_558
	word32 s1_553
	word32 a0_554
	word32 a1_555
	word32 a2_556
	ke_msg_send(a0_274, a2_276, mstatus, out s1_553, out a0_554, out a1_555, out a2_556, out a3_114, out a4_206, out a5_260, out s2_132, out s3_139, out s4_557, out s8_558)
l23061F4C:
	0<32> = dwArg0198
	a3Out = a3_114
	a4Out = a4_206
	a5Out = a5_260
	s2Out = s2_132
	s3Out = s3_139
	s4Out = dwArgF4
	s5Out = s5_134
	s6Out = s6_140
	s7Out = a0_125 & 255<i32>
	s8Out = dwLoc34_467
	return ra
me_beacon_check_exit:
l23061EE0:
	assert_err()


word32 me_sta_bw_nss_max_upd(word32 a0, word32 a1, word32 a2, word32 dwArgB8, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_frame_check
//      me_sta_add_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +00B8:[0..31]
// LiveOut: a1 a4 a5 ra s1 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
me_sta_bw_nss_max_upd_entry:
l23061F76:
	word32 s3_24 = CONVERT(Mem23[a0 + 0x4201A9D2<32>:byte], byte, word32)
	branch CONVERT(Mem23[0x4201C8EA<32>:byte], byte, word32) != 0<32> l23061FC8
l23061FC8:
	word32 a0_42 = me_11n_nss_max(a0 + 0x4201AA7B<32>)
	word32 a0_48 = me_11n_nss_max(0x4201C8CB<32>)
	branch a0_42 >=u a0_48 l23061FEE
l23061FEC:
	a0_48 = a0_42
l23061FEE:
	branch a2 >=u a0_48 l23061FF4
l23061FF2:
	a0_48 = a2
l23061FF4:
	word32 a2_60 = a0_48 & 255<i32>
	word32 a4_66 = CONVERT(Mem23[a0 + 0x4201AAA8<32>:byte], byte, word32)
	branch a4_66 != 4<32> l2306200E
l2306200C:
	a4_66 = 3<32>
l2306200E:
	word32 a1_78 = CONVERT(Mem23[s3_24 + 0x4201C6AA<32>:byte], byte, word32)
	branch a1 >=u a1_78 l2306202A
l23062028:
	a1_78 = a1
l2306202A:
	branch a4_66 >=u a1_78 l23062030
l2306202E:
	a1_78 = a4_66
l23062030:
	word32 a1_93 = a1_78 & 255<i32>
	word32 a0_100 = CONVERT(Mem23[a0 + 0x4201A9D3<32>:byte], byte, word32)
	Mem101[a0 + 0x4201AAA9<32>:byte] = SLICE(a1_93, byte, 0)
	word32 a4_112
	word32 s0_115
	word32 s1_116
	word32 s3_118
	word32 a1_123
	word32 s5_127
	word32 s6_128
	word32 s7_129
	word32 ra_114 = rc_update_bw_nss_max(a0_100, a1_93, a2_60, dwArgB8, out s0_115, out s1_116, out a1_123, out a4_112, out s3_118, out s5_127, out s6_128, out s7_129)
	word32 a5_132 = CONVERT(Mem101[s0_115 + 282<i32>:byte], byte, word32)
	Mem134[s0_115 + 282<i32>:byte] = SLICE(a5_132 | 8<i32>, byte, 0)
	s1Out = s1_116
	a1Out = a1_123
	a4Out = a4_112
	a5Out = a5_132 | 8<i32>
	s3Out = s3_118
	s4Out = dwArg04
	s5Out = s5_127
	s6Out = s6_128
	s7Out = s7_129
	return ra_114
me_sta_bw_nss_max_upd_exit:
l23061FB0:
	assert_err()


word32 me_add_chan_ctx(word32 a0, word32 a4, word32 dwArg88, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_req_handler
// MayUse:  a0:[0..31] a4:[0..31] Stack +0088:[0..31]
// LiveOut: a0 s0 s2 s3 s6
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
me_add_chan_ctx_entry:
l23062068:
	word32 a0_22
	word32 s2_29
	word32 s3_30
	word32 s6_33
	word32 a4_52
	word32 s5_53
	word32 s0_27 = chan_ctxt_add(fp + 0xFFFFFFE4<32>, a0, a4, dwArg88, out a0_22, out a4_52, out s2_29, out s3_30, out s5_53, out s6_33)
	a0Out = a0_22
	s2Out = s2_29
	s3Out = s3_30
	s6Out = s6_33
	return s0_27
me_add_chan_ctx_exit:


word32 rc_get_nss(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_set_next_mcs_index
//      rc_get_duration
//      rc_check_fixed_rate_config
//      rc_check
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
rc_get_nss_entry:
l2306209E:
	branch (a0 >> 0xB<u32> & 7<32>) >u 0xFFFFFFFD<32> l230620B2
l230620B2:
	a4Out = <invalid>
	a5Out = <invalid>
	return 0<32>
l230620AC:
	a4Out = <invalid>
	a5Out = <invalid>
	return a0 >> 3<i32> & 3<32>
rc_get_nss_exit:


word32 rc_get_mcs_index(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_set_previous_mcs_index
//      rc_set_next_mcs_index
//      is_cck_group
//      rc_get_duration
//      rc_check_fixed_rate_config
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
rc_get_mcs_index_entry:
l230620B6:
	word32 a4_10
	word32 a5_5 = a0 >> 0xB<u32> & 7<32>
	branch a5_5 <=u 1<32> l230620D0
l230620D0:
	a4_10 = a0 & 127<i32>
l230620C2:
	a3 = 3<32>
	a4_10 = 0<32>
	branch a5_5 >u 3<32> l230620D4
l230620CA:
	a4_10 = a0 & 7<i32>
l230620D4:
	a3Out = a3
	a4Out = a4_10
	a5Out = a5_5
	return a4_10
rc_get_mcs_index_exit:


void rc_set_previous_mcs_index(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s4 s8 t3
// Preserved: sp
rc_set_previous_mcs_index_entry:
l230620D8:
	word32 a5_64
	word32 a4_63
	word32 a3_62
	word32 a0_16 = rc_get_mcs_index(a1, out a3_62, out a4_63, out a5_64)
	word32 s0_20 = a1 >> 0xB<u32> & 7<32>
	branch s0_20 <=u 1<32> l23062116
l23062116:
	branch CONVERT(Mem15[a0 + 185<i32>:byte], byte, word32) >=u a0_16 l2306212A
l2306211E:
l230620F8:
	branch s0_20 >u 3<32> l2306212A
l230620FE:
	branch a0_16 == 0<32> l2306212A
l23062100:
	branch CONVERT(Mem15[a0 + 189<i32>:byte], byte, word32) == 0<32> l2306212A
l23062110:
l2306212A:
	return
rc_set_previous_mcs_index_exit:


void rc_set_next_mcs_index(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
rc_set_next_mcs_index_entry:
l23062136:
	word32 a4_85
	word32 a5_86
	word32 a3_84
	word32 a0_20 = rc_get_mcs_index(a1, out a3_84, out a4_85, out a5_86)
	word32 s3_24 = a1 >> 0xB<u32> & 7<i32>
	branch s3_24 <=u 1<32> l23062194
l23062194:
	branch a0_20 >=u CONVERT(Mem17[a0 + 186<i32>:byte], byte, word32) l230621B6
l2306219C:
	branch (CONVERT(Mem17[a0 + 182<i32>:uint16], uint16, word32) >>u a0_20 + 1<i32> & 1<32>) == 0<32> l230621B6
l230621AC:
l2306215C:
	branch s3_24 >u 3<32> l230621B6
l23062162:
	branch a0_20 >=u CONVERT(Mem17[a0 + 184<i32>:byte], byte, word32) l230621B6
l2306216A:
	word32 a4_87
	word32 a5_88
	branch (CONVERT(Mem17[rc_get_nss(a1, out a4_87, out a5_88) + a0 + 178<i32>:byte], byte, word32) >>u a0_20 + 1<32> & 1<32>) == 0<32> l230621B6
l23062180:
	branch CONVERT(Mem17[a0 + 189<i32>:byte], byte, word32) == 0<32> l230621B6
l2306218E:
l230621B6:
	return
rc_set_next_mcs_index_exit:


word32 is_cck_group(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_update_retry_chain
//      rc_calc_tp
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
is_cck_group_entry:
l230621C6:
	word32 a5_5 = a0 >>u 0xB<u32> & 6<32>
	branch a5_5 != 0<32> l230621E0
l230621E0:
	a5Out = a5_5
	return 0<32>
l230621CE:
	word32 a5_12
	word32 a3_29
	word32 a4_30
	word32 a0_15 = CONVERT(rc_get_mcs_index(a0, out a3_29, out a4_30, out a5_12) <u 4<i32>, bool, word32)
	a5Out = a5_12
	return a0_15
is_cck_group_exit:


word32 rc_update_retry_chain(word32 a0, word32 a1, word32 a3, word32 dwArg0128, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_update_bw_nss_max
//      rc_update_stats
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] Stack +0128:[0..31]
// LiveOut: a1 a4 s0 s1 s2 s4 s5 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s5 s7 s8 t1 t3 tp
// Preserved: s3 s6 s9 sp
rc_update_retry_chain_entry:
l230621E4:
	word32 s1_100
	word32 s4_27 = CONVERT(Mem25[a0 + 192<i32>:uint16], uint16, word32)
	word32 a4_28 = CONVERT(Mem25[a0 + 175<i32>:byte], byte, word32)
	word32 a5_35 = (s4_27 << 2<u32>) + 0xFFFFFFFC<32> + a1
	branch (a4_28 & 4<32>) != 0<32> l23062302
l23062214:
	a5_35 = Mem25[a4_28 & 4<32>:word32]
	branch (a4_28 & 4<32>) >=u a3 l23062302
l23062302:
	Mem42[a0 + 128<i32>:word16] = SLICE(s4_27 + -1<i32>, word16, 0)
	Mem46[Mem42[a5_35:word32] + 124<i32>:word32] = a0
	s1_100 = 2<32>
l2306221C:
	Mem47[a0 + 128<i32>:word16] = 0<16>
	Mem48[a0 + 124<i32>:word32] = 0<32>
	s1_100 = 1<32>
l23062226:
	word32 s7_52 = CONVERT(Mem51[a0 + 128<i32>:uint16], uint16, word32)
	word32 s2_55 = s7_52 + 0xC<32> + a0
	word32 a5_58
	branch is_cck_group(CONVERT(Mem51[s2_55 + 10<i32>:uint16], uint16, word32), out a5_58) != 0<32> l2306224E
l2306223C:
	word32 s3_64 = 0<32>
l23062244:
	branch s3_64 < s4_27 + -1<i32> l23062312
l23062312:
	word32 s6_71 = s3_64 + 0xC<32> + a0
	word32 a5_478
	branch is_cck_group(CONVERT(Mem72[s6_71 + 10<i32>:uint16], uint16, word32), out a5_478) == 0<32> l23062326
l23062322:
	Mem79[s6_71 + 15<i32>:byte] = 0<8>
l23062326:
	s3_64 = CONVERT(SLICE(s3_64 + 1<32>, word16, 0), word16, word32)
l23062248:
	Mem87[s2_55 + 15<i32>:byte] = 1<8>
	a5_58 = 1<32>
l2306224E:
	word32 s0_90 = Mem89[a5_58 + 124<i32>:word32]
	Mem94[s0_90 + 136<i32>:word16] = SLICE(s7_52, word16, 0)
	Mem103[s0_90 + 132<i32>:word32] = a5_58
	word32 a4_102 = s4_27 - s1_100
	word32 a1_104 = 0xC<32>
l2306225E:
	word32 a5_106 = s1_100 + 1<i32>
	branch s1_100 >=u s4_27 l2306228C
l2306226A:
	word32 a2_111 = a4_102 + -1<i32>
	branch CONVERT(Mem103[a2_111 + 0xC<32> + s0_90 + 27<i32>:byte], byte, word32) == 0<32> l23062330
l23062330:
	a4_102 = a2_111
	s1_100 = CONVERT(SLICE(a5_106, word16, 0), word16, word32)
l2306227A:
	s1_100 = s4_27 - s1_100
	Mem122[s0_90 + 136<i32>:word16] = SLICE(s1_100, word16, 0)
	Mem131[s0_90 + 132<i32>:word32] = Mem122[(a4_102 << 2<i32>) + a1:word32]
l2306228C:
	word32 t1_134 = CONVERT(Mem133[s0_90 + 136<i32>:uint16], uint16, word32)
	word32 a5_137 = s4_27 - CONVERT(SLICE(a5_106, word16, 0), word16, word32)
l23062296:
	branch CONVERT(SLICE(s4_27 - a5_137, word16, 0), word16, word32) <u s4_27 l23062336
l23062336:
	word32 a3_144 = a5_137 + -1<i32>
	branch CONVERT(Mem133[a3_144 + 0xC<32> + s0_90 + 27<i32>:byte], byte, word32) != 0<32> l230622A4
l23062346:
	a5_137 = a3_144
l230622A2:
	a5_137 = t1_134
l230622A4:
	word32 a3_165 = s0_90 + 8<i32>
	word32 a0_168 = CONVERT(Mem133[a5_137 + 0xC<32> + s0_90 + 8<i32>:uint16], uint16, word32)
	word32 a4_169 = 0<32>
l230622C4:
	word32 a2_171 = a4_169 << 0x10<u32>
	branch a2_171 >>u 16<i32> <u t1_134 l2306234A
l2306234A:
	branch CONVERT(Mem133[a3_165 + 7<i32>:byte], byte, word32) == 0<32> l23062372
l23062352:
	branch a2_171 >>u 16<i32> == s7_52 l23062372
l23062356:
	word32 a2_178 = CONVERT(Mem133[a3_165:uint16], uint16, word32)
	branch a2_178 <=u 0xF000332<32> l23062378
l23062378:
	branch a2_178 <u a0_168 l23062372
l2306237C:
l2306235E:
	word32 a7_188 = Mem133[(a4_169 << 2<u32>) + a1:int32]
	branch a7_188 <u a1_104 l23062372
l2306236C:
	a1_104 = a7_188
l23062370:
	a0_168 = a2_178
	a5_137 = a4_169
l23062372:
	a4_169 = a4_169 + 1<32>
	a3_165 = a3_165 + 0xC<32>
l230622CE:
	Mem203[s0_90 + 144<i32>:word16] = SLICE(a5_137, word16, 0)
	word32 a5_206 = Mem203[(a5_137 << 2<i32>) + a1:word32]
	Mem207[s0_90 + 152<i32>:word16] = 0<16>
	Mem221[s0_90 + 140<i32>:word32] = a5_206
	word32 a5_222 = Mem221[a1:int32]
	0<32> = dwArg0128
	Mem224[s0_90 + 148<i32>:word32] = a5_222
	s1Out = s1_100
	a1Out = a1_104
	a4Out = a4_169
	s2Out = s2_55
	s4Out = dwArg78
	s5Out = a1
	s7Out = s7_52
	return s4
rc_update_retry_chain_exit:


word32 rc_get_lowest_rate_config(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_update_bw_nss_max
//      rc_init
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
rc_get_lowest_rate_config_entry:
l23062388:
	word32 a5_11
	word32 a5_15
	word32 a4_5 = CONVERT(Mem0[a0 + 177<i32>:byte], byte, word32)
	branch a4_5 <=u 1<32> l230623AC
l230623AC:
	word32 a4_7 = CONVERT(Mem0[a0 + 185<i32>:byte], byte, word32)
	a5_11 = 1024<i32>
	branch a4_7 == 0<32> l230623BC
l230623B6:
	a5_15 = a4_7 << 0x10<u32>
l23062392:
	a5_11 = 0<32>
	branch a4_5 >u 3<32> l230623BC
l2306239A:
	a5_11 = 1024<i32>
	branch CONVERT(Mem0[a0 + 185<i32>:byte], byte, word32) == 0<32> l230623BC
l230623A4:
	a5_15 = a4_5 << 0x1B<32>
l230623BA:
	a5_11 = a5_15 >>u 16<i32>
l230623BC:
	return a5_11
rc_get_lowest_rate_config_exit:


word32 rc_sort_samples_tp(word32 a0, word32 a3, word32 a4, word32 dwArg0128, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_update_bw_nss_max
//      rc_update_stats
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] Stack +0128:[0..31]
// LiveOut: s0 s3 s6
// Trashed: a2 a5 a6 s0 s3 s4 s6 s8 t3 tp
// Preserved: a0 a1 a3 a4 s1 s2 s5 sp
rc_sort_samples_tp_entry:
l230623C0:
	word32 a5_21 = CONVERT(Mem19[a0 + 192<i32>:uint16], uint16, word32)
	word32 s4_27 = CONVERT(SLICE(a5_21 + -1<i32>, word16, 0), word16, word32)
l230623E6:
	branch a5_21 == 0<32> l2306243A
l2306243A:
	0<32> = dwArg0128
	s3Out = a0 + 16<i32>
	s6Out = a1
	return dwArgE4
rc_sort_samples_tp_exit:
l230623E8:
	word32 s2_40 = a0 + 16<i32>
	a5_21 = 0<32>
	word32 s1_44 = 1<32>
l23062432:
	branch s1_44 <u s4_27 l230623F4
l230623F4:
	word32 s5_53 = s2_40 + 12<i32>
	branch a4 >=u a3 l23062428
l23062400:
	word32 a4_157
	word32 a5_158
	memmove(fp + -44<i32>, s2_40, 0xC<32>, out a4_157, out a5_158)
	word32 a5_160
	word32 a4_159
	memmove(s2_40, s5_53, 0xC<32>, out a4_159, out a5_160)
	word32 a5_75
	a3 = memmove(s5_53, fp + -44<i32>, 0xC<32>, out a4, out a5_75)
	word32 s0_77 = Mem48[a4 + 4<i32>:word32]
	Mem78[a5_75 + 4<i32>:word32] = s0_77
	Mem79[a4:word32] = s0_77
	a5_21 = s1_44
l23062428:
	s1_44 = CONVERT(SLICE(s1_44 + 1<32>, word16, 0), word16, word32)
	s2_40 = s5_53
l23062436:
	s4_27 = a5_21


word32 rc_get_initial_rate_config(word32 a0, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_update_bw_nss_max
//      rc_init
// MayUse:  a0:[0..31] Stack +0038:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a4 a5 s1 s2 tp
// Preserved: s0 sp
rc_get_initial_rate_config_entry:
l2306244E:
	word32 a5_21
	word32 a0_16
	word32 a5_19
	word32 s1_13 = CONVERT(Mem11[a0 + 177<i32>:byte], byte, word32)
	branch s1_13 <=u 1<32> l230624A0
l230624A0:
	a0_16 = CONVERT(Mem11[a0 + 186<i32>:byte], byte, word32)
	a5_19 = s1_13 << 0xB<u32> | CONVERT(Mem11[a0 + 190<i32>:byte], byte, word32) << 10<i32>
l23062462:
	a5_21 = 0<32>
	branch s1_13 >u 3<32> l230624B6
l2306246A:
	word32 s2_22 = CONVERT(Mem11[a0 + 188<i32>:byte], byte, word32)
	word32 a4_77
	word32 a0_28 = __clzsi2(CONVERT(Mem11[a0 + s2_22 + 178<i32>:byte], byte, word32), out a4_77)
	a5_19 = CONVERT(Mem11[a0 + 189<i32>:byte], byte, word32) << 9<i32> | s1_13 << 11<i32> | CONVERT(Mem11[a0 + 187<i32>:byte], byte, word32) << 7<i32> | s2_22 << 3<i32>
	a0_16 = 0x1F<32> - a0_28 & 255<i32>
l230624B0:
	a5_21 = CONVERT(SLICE(a5_19 | a0_16, word16, 0), word16, word32)
l230624B6:
	0<32> = dwArg38
	return a5_21
rc_get_initial_rate_config_exit:


void rc_calc_prob_ewma(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_update_stats
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
rc_calc_prob_ewma_entry:
l230624C4:
	word32 a3_5 = CONVERT(Mem0[a0:uint16], uint16, word32)
	branch a3_5 == 0<32> l2306250E
l2306250E:
	word32 a5_6 = CONVERT(Mem0[a0 + 8<i32>:byte], byte, word32)
	branch a5_6 == 255<i32> l23062520
l2306251A:
	Mem9[a0 + 8<i32>:byte] = SLICE(a5_6 + 1<32>, byte, 0)
l23062520:
	return
l230624CA:
	word32 a5_10 = CONVERT(Mem0[a0 + 2<i32>:uint16], uint16, word32)
	word32 a2_11 = CONVERT(Mem0[a0 + 9<i32>:byte], byte, word32)
	Mem12[a0 + 8<i32>:byte] = 0<8>
	word32 a4_14 = a5_10 << 16<i32> >>u a3_5
	branch a2_11 != 0<32> l230624F6
l230624F6:
	Mem21[a0 + 4<i32>:word16] = SLICE(CONVERT(Mem12[a0 + 4<i32>:uint16], uint16, word32) + 96<i32> + (a4_14 << 5<i32>) >>u 7<i32>, word16, 0)
l230624DE:
	branch a5_10 << 16<i32> <u a3_5 l230624F0
l230624F0:
	Mem22[a0 + 4<i32>:word16] = 0<16>
l230624E2:
	Mem24[a0 + 4<i32>:word16] = SLICE(a4_14 + 0xFFFFFFFF<32>, word16, 0)
l230624E8:
	Mem27[a0 + 9<i32>:byte] = 1<8>
	return
rc_calc_prob_ewma_exit:


word32 rc_check_valid_rate(word32 a0, word32 a1, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_check_fixed_rate_config
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 s0
// Trashed: a0 a2 a3 a4 a5 s0 s1 s4 s8 t3
// Preserved: sp
rc_check_valid_rate_entry:
l23062522:
	word32 a0_23
	word32 a0_17
	word32 a5_21
	word32 a5_12 = a1 >> 0xB<u32> & 7<32>
	word32 s0_15 = a0
	branch a5_12 <=u 1<32> l2306255A
l2306255A:
	word32 a3_84
	word32 a4_85
	word32 a5_86
	a0_17 = rc_get_mcs_index(a1, out a3_84, out a4_85, out a5_86)
	a5_21 = CONVERT(Mem11[a0 + 182<i32>:uint16], uint16, word32)
l23062538:
	a0_23 = 1<32>
	branch a5_12 >u 3<32> l2306256A
l23062540:
	word32 a4_79
	word32 a5_80
	s0_15 = a0 + rc_get_nss(a1, out a4_79, out a5_80)
	word32 a3_81
	word32 a4_82
	word32 a5_83
	a0_17 = rc_get_mcs_index(a1, out a3_81, out a4_82, out a5_83)
	a5_21 = CONVERT(Mem25[s0_15 + 178<i32>:byte], byte, word32)
l23062564:
	a0_23 = a5_21 >>u a0_17 & 1<32>
l2306256A:
	a0Out = a0_23
	return s0_15
rc_check_valid_rate_exit:


word32 rc_new_random_rate(word32 a0, word32 a5, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_update_bw_nss_max
//      rc_update_stats
//      rc_init
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
rc_new_random_rate_entry:
l23062574:
	word32 a1_109 = CONVERT(Mem0[a0 + 187<i32>:byte], byte, word32)
	word32 a3_16 = CONVERT(Mem0[a0 + 177<i32>:byte], byte, word32)
	Mem17[a5 + 0x44C64EA6<32>:word32] = Mem0[a5:word32]
	word32 a7_14 = 0<32>
	word32 a5_18 = a5 + 0x44C64EA6<32> >>u 16<i32>
	word32 a4_108 = a3_16 << 0x1B<32> >>u 16<i32>
	branch a1_109 == 0<32> l230625B2
l230625AA:
	a7_14 = a1_109 + -1<i32> & 255<i32>
l230625B2:
	word32 a4_129
	branch a3_16 <=u 1<32> l2306260A
l2306260A:
	word32 a2_28 = CONVERT(Mem17[a0 + 185<i32>:byte], byte, word32)
	word32 a6_29 = CONVERT(Mem17[a0 + 186<i32>:byte], byte, word32)
	word32 a1_32 = a6_29 - a2_28
	word32 a3_35 = (a5_18 & 127<i32> | a1_32 + 1<32>) + a2_28
	a1_109 = a1_32 + 1<32>
	word32 a3_37 = a3_35 & 255<i32>
	branch (CONVERT(Mem17[a0 + 182<i32>:uint16], uint16, word32) >>u (a3_35 & 255<i32>) & 1<32>) != 0<32> l23062634
l23062632:
	a3_37 = a6_29
l23062634:
	a4_108 = a4_108 | a3_37
	branch a3_37 != 0<32> l23062644
l23062644:
	branch (a3_37 + 0xFFFFFFFF<32> & 255<i32>) >u 2<32> l23062640
l23062650:
	a4_129 = a4_108 | (a5_18 & 1024<i32> | CONVERT(Mem17[a0 + 190<i32>:byte], byte, word32) << 10<i32>)
l23062638:
	a4_129 = a4_108 | 1024<i32>
l230625B8:
	branch a3_16 >u 3<32> l23062640
l230625BE:
	word32 a2_58 = CONVERT(Mem17[a0 + 185<i32>:byte], byte, word32)
	branch a2_58 >u 3<32> l23062660
l230625C6:
	branch a5_18 << 0x14<u32> >= 0<32> l23062660
l23062660:
	word32 a6_107 = CONVERT(Mem17[a0 + 184<i32>:byte], byte, word32)
	word32 a3_68 = a5_18 >> 3<u32> & 3<32> | CONVERT(Mem17[a0 + 188<i32>:byte], byte, word32) + 1<32>
	word32 a2_72 = a5_18 & 7<i32> | a6_107 + 1<i32>
	word32 t3_71 = CONVERT(Mem17[a0 + 189<i32>:byte], byte, word32)
	branch (CONVERT(Mem17[a0 + a3_68 + 178<i32>:byte], byte, word32) >>u a2_72 & 1<i32>) == 0<32> l2306269A
l23062696:
	a6_107 = a2_72 & 255<i32>
l2306269A:
	word32 a1_90 = a1_109 - a7_14
	a1_109 = a1_90 + 1<32>
	a4_108 = CONVERT(SLICE(a4_108 | ((a5_18 >> 9<u32> & 1<32> | t3_71 + 1<32>) << 9<i32> | a3_68 << 3<i32>) | (a5_18 >> 7<i32> & 3<32> | a1_90 + 1<32>) + a7_14 << 7<i32>, word16, 0), word16, word32) | a6_107
l230625CE:
	a1_109 = CONVERT(Mem17[a0 + 186<i32>:byte], byte, word32)
	word32 a3_115 = (a5_18 & 127<i32> | (a1_109 - a2_58) + 1<32>) + a2_58
	word32 a3_116 = a3_115 & 255<i32>
	branch (CONVERT(Mem17[a0 + 182<i32>:uint16], uint16, word32) >>u (a3_115 & 255<i32>) & 1<32>) != 0<32> l230625F4
l230625F2:
	a3_116 = a1_109
l230625F4:
	a4_108 = 1024<i32>
	branch a3_116 == 0<32> l23062640
l230625FA:
	a4_129 = CONVERT(Mem17[a0 + 190<i32>:byte], byte, word32) << 10<i32> | a5_18 & 1024<i32> | a3_116
l2306263C:
	a4_108 = CONVERT(SLICE(a4_129, word16, 0), word16, word32)
l23062640:
	a1Out = a1_109
	return a4_108
rc_new_random_rate_exit:


word32 rc_update_counters(word32 a0, word32 a1, word32 a2, word32 dwArg1C, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_tx_cfm_singleton
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +001C:[0..31] Stack +0128:[0..31]
// LiveOut: a5
// Trashed: a2 a3 a4 a5 a6 s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t3 tp
// Preserved: sp
rc_update_counters_entry:
l230626CC:
	branch a0 >u 9<32> l2306280A
l2306280A:
	return 9<32>
l230626D2:
	word32 a5_104 = a0 + 0x4201A9B8<32>
	branch CONVERT(Mem34[a0 + 0x4201A9D2<32>:byte], byte, word32) == 255<i32> l230627E6
l23062710:
	word32 s0_39 = Mem34[a0 + 0x4201AAC8<32>:int32]
	word32 s1_142 = a1
	word32 s4_145 = a2
	branch s0_39 != 0<32> l23062732
l23062732:
	Mem53[s0_39 + 166<i32>:word16] = SLICE(CONVERT(Mem34[s0_39 + 166<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem58[s0_39 + 164<i32>:word16] = SLICE(CONVERT(Mem53[s0_39 + 164<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s5_50 = s0_39 + 128<i32>
l2306275A:
	branch s1_142 == 0<32> l2306279A
l2306275C:
	word32 a5_68 = CONVERT(Mem63[s5_50:uint16], uint16, word32) + 0xC<32> + s0_39
	word32 a4_69 = CONVERT(Mem63[a5_68 + 4<i32>:uint16], uint16, word32)
	branch s4_145 <=u 3<32> l230627BC
l230627BC:
	word32 s1_72 = s1_142 << 16<i32>
	Mem75[a5_68 + 4<i32>:word16] = SLICE(a4_69 + (s1_72 >>u 16<i32>), word16, 0)
	Mem80[a5_68 + 6<i32>:word16] = SLICE((s1_72 >>u 16<i32>) - s4_145 + CONVERT(Mem75[a5_68 + 6<i32>:uint16], uint16, word32), word16, 0)
	s4_145 = 0<32>
	s1_142 = 0<32>
l2306276E:
	Mem83[a5_68 + 4<i32>:word16] = SLICE(a4_69 + 4<32>, word16, 0)
	s1_142 = s1_142 + 0xFFFFFFFC<32>
	s4_145 = s4_145 + 0xFFFFFFFC<32>
l23062778:
	branch CONVERT(Mem87[a5_68 + 4<i32>:uint16], uint16, word32) >=u CONVERT(Mem87[a5_68 + 6<i32>:uint16], uint16, word32) l23062794
l23062794:
	s5_50 = s5_50 + 8<32>
	branch s5_50 != s0_39 + 160<i32> l2306275A
l2306279A:
	a5_104 = CONVERT(Mem103[s0_39 + 174<i32>:byte], byte, word32)
	branch a5_104 == 0<32> l230627DA
l230627DA:
	word32 a5_105 = CONVERT(Mem103[s0_39 + 172<i32>:byte], byte, word32)
	branch a5_105 == 0<32> l23062802
l23062802:
	a5_104 = 1<32>
l230627E0:
	Mem108[s0_39 + 172<i32>:byte] = SLICE(a5_105 + 0xFFFFFFFF<32>, byte, 0)
	a5_104 = a5_105 + 0xFFFFFFFF<32>
l230627A0:
	branch a5_104 != 2<32> l230627E6
l230627A6:
	word32 a5_119 = CONVERT(Mem103[a0 + 0x4201AAD2<32>:byte], byte, word32)
	a5_104 = a5_119 & 1<32>
	branch (a5_119 & 1<32>) != 0<32> l230627E6
l230627B8:
	a5_104 = 3<32>
l23062804:
	Mem124[s0_39 + 174<i32>:byte] = SLICE(a5_104, byte, 0)
l230627E6:
	0<32> = dwArg0128
	0<32> = dwArg1C
	return a5_104
rc_update_counters_exit:
l23062784:
	assert_err()
l2306271A:
	assert_err()


word32 rc_get_duration(word32 a0, word32 dwArg38, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_calc_tp
//      rc_check
// MayUse:  a0:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2
// Trashed: a0 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
rc_get_duration_entry:
l2306280C:
	word32 a5_26
	word32 a3_18
	word32 a5_83
	word32 a4_16
	word32 a0_15 = rc_get_mcs_index(a0, out a3_18, out a4_16, out a5_83)
	word32 s2_19 = a0 >> 0xB<u32> & 7<i32>
	word32 s1_21 = a0_15
	branch s2_19 <=u 1<32> l23062862
l23062862:
	branch a0_15 >u 3<32> l2306288C
l2306288C:
	a5_26 = 0x2307EF00<32>
	s1_21 = Mem11[a0_15:word32]
l23062868:
	s1_21 = a0_15 << 1<u32>
	a5_26 = 0x2307EDA0<32>
l2306282C:
	a5_26 = 3<32>
	a0_15 = 0<32>
	branch s2_19 >u 3<32> l23062880
l23062834:
	word32 a5_84
	word32 a0_39 = rc_get_nss(a0, out a4_16, out a5_84)
	a5_26 = a0_39 + 1<i32>
	s1_21 = Mem11[a0_39:word32]
	a0_15 = a0_39 >>u a0_39 + 1<i32>
l23062880:
	0<32> = dwArg38
	a0Out = a0_15
	a3Out = a3_18
	a4Out = a4_16
	a5Out = a5_26
	s2Out = s2_19
	return s1_21
rc_get_duration_exit:


word32 rc_update_bw_nss_max(word32 a0, word32 a1, word32 a2, word32 dwArgD8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_rc_set_rate_req_handler
//      me_sta_bw_nss_max_upd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +00D8:[0..31]
// LiveOut: a1 a4 ra s0 s1 s3 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
rc_update_bw_nss_max_entry:
l230628A0:
	word32 s3_157 = a0
	word32 a4_169 = a0 + 432<i32>
	word32 s0_173 = Mem21[a0 + 0x4201AAC8<32>:int32]
	branch s0_173 != 0<32> l230628EA
l230628EA:
	branch CONVERT(Mem21[s0_173 + 187<i32>:byte], byte, word32) != a1 l230628FA
l230628F2:
	branch CONVERT(Mem21[s0_173 + 188<i32>:byte], byte, word32) == a2 l230629B6
l230628FA:
	Mem39[s0_173 + 187<i32>:byte] = SLICE(a1, byte, 0)
	branch a1 <=u 3<32> l2306291E
l2306291E:
	Mem48[s0_173 + 188<i32>:byte] = SLICE(a2, byte, 0)
	branch a2 <=u 7<32> l23062942
l23062942:
	a4_169 = CONVERT(Mem48[s0_173 + 198<i32>:uint16], uint16, word32)
	branch a4_169 != 0xFFFFFFF<32> l230629B6
l2306294E:
	Mem64[s0_173 + 10<i32>:word16] = SLICE(rc_get_lowest_rate_config(s0_173), word16, 0)
	Mem81[CONVERT(Mem64[s0_173 + 192<i32>:uint16], uint16, word32) + 0xB<32> + s0_173 + 10<i32>:word16] = SLICE(rc_get_initial_rate_config(s0_173, dwLoc18), word16, 0)
	word32 s1_120 = 1<32>
l23062974:
	word32 a2_84 = CONVERT(Mem83[s0_173 + 192<i32>:uint16], uint16, word32)
	word32 a5_103 = a2_84 + -1<i32>
	branch s1_120 < a2_84 + -1<i32> l230629C6
l230629C6:
	word32 a1_295
	word32 a0_90 = rc_new_random_rate(s0_173, a5_103, out a1_295)
	word32 a3_101 = CONVERT(Mem83[s0_173 + 192<i32>:uint16], uint16, word32)
	word32 a4_102 = s0_173 + 10<i32>
	a5_103 = 0<32>
l230629D6:
	branch a5_103 <u a3_101 l230629EC
l230629EC:
	a4_102 = a4_102 + 0xC<32>
	branch CONVERT(Mem83[a4_102 + -12<i32>:uint16], uint16, word32) == a0_90 l230629C6
l230629F6:
	a5_103 = a5_103 + 1<32>
l230629DA:
	Mem123[s1_120 + 0xC<32> + s0_173 + 10<i32>:word16] = SLICE(a0_90, word16, 0)
	s1_120 = CONVERT(SLICE(s1_120 + 1<32>, word16, 0), word16, word32)
l23062980:
	word32 a3_127 = fp + -72<i32>
	word32 a5_128 = s0_173 + 8<i32>
	word32 a4_129 = 0<32>
l2306298C:
	branch a2_84 != a4_129 l230629FA
l230629FA:
	Mem136[a5_128 + 6<i32>:byte] = 0<8>
	Mem138[a5_128 + 7<i32>:byte] = 1<8>
	Mem139[a5_128:word16] = 0<16>
	Mem140[a5_128 + 5<i32>:byte] = 0<8>
	Mem143[a3_127:word32] = 0<32>
	a4_129 = CONVERT(SLICE(a4_129 + 1<32>, word16, 0), word16, word32)
	a5_128 = a5_128 + 0xC<32>
	a3_127 = a3_127 + 4<32>
l23062990:
	word32 s2_175
	word32 s1_296
	word32 s4_297
	s0_173 = rc_update_retry_chain(rc_sort_samples_tp(s0_173, a3_127, a4_129, dwArgD8, out s3_157, out s6), fp + -72<i32>, a3_127, dwArgD8, out s1_296, out a1, out a4_169, out s2_175, out s4_297, out s5, out s7)
	word32 a0_185 = s3_157 + 432<i32> + s2_175
	Mem188[a0_185 + 282<i32>:byte] = SLICE(CONVERT(Mem152[a0_185 + 282<i32>:byte], byte, word32) | 1<i32>, byte, 0)
l230629B6:
	s0Out = s0_173
	s1Out = dwLoc4C
	a1Out = a1
	a4Out = a4_169
	s3Out = s3_157
	s5Out = s5
	s6Out = s6
	s7Out = s7
	return dwLoc08
rc_update_bw_nss_max_exit:
l23062928:
	assert_err()
l23062904:
	assert_err()
l230628D0:
	assert_err()


word32 rc_init_bcmc_rate(word32 a0, word32 a1, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_init_bcmc_rate
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a3 a4
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
rc_init_bcmc_rate_entry:
l23062A1A:
	word32 a4_6 = Mem0[a0 + 268<i32>:int32]
	word32 a3_7 = CONVERT(Mem0[a0 + 280<i32>:uint16], uint16, word32)
	word32 a5_12 = 0<32>
	branch a1 >u 3<32> l23062A32
l23062A2A:
	a5_12 = CONVERT(SLICE(a3_7 & 1024<i32>, word16, 0), word16, int32)
l23062A32:
	word32 a1_15 = a1 | a5_12
	Mem19[(a1_15 | 0x20000000<32>) + 20<i32>:word32] = a4_6
	Mem20[(a1_15 | 0x20000000<32>) + 24<i32>:word32] = a4_6
	Mem21[(a1_15 | 0x20000000<32>) + 28<i32>:word32] = a4_6
	Mem22[(a1_15 | 0x20000000<32>) + 32<i32>:word32] = a4_6
	a4Out = a4_6
	return a3_7
rc_init_bcmc_rate_exit:


word32 rc_check_fixed_rate_config(word32 a0, word32 a1, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_rc_set_rate_req_handler
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 s0
// Trashed: a0 a2 a3 a4 a5 s0 s1 s4 s8 t3
// Preserved: sp
rc_check_fixed_rate_config_entry:
l23062A44:
	word32 a5_5 = CONVERT(Mem0[a0 + 177<i32>:byte], byte, word32)
	word32 a3_8 = a1 >>u 0xB<u32> & 7<i32>
	branch a5_5 <u a3_8 l23062ADA
l23062ADA:
	a0Out = 0<32>
	return s0
l23062A54:
	branch a5_5 != 4<32> l23062AA4
l23062AA4:
	branch (a5_5 + 0xFFFFFFFE<32> & 255<i32>) >u 1<32> l23062A66
l23062AB0:
	branch (a1 >>u 0xB<u32> & 6<32>) != 0<32> l23062A6A
l23062AB4:
	branch CONVERT(Mem14[a0 + 185<i32>:byte], byte, word32) >u 3<32> l23062AD0
l23062A62:
	branch a3_8 != a5_5 l23062AD0
l23062A66:
	branch (a1 >>u 0xB<u32> & 6<32>) == 0<32> l23062ABE
l23062ABE:
	branch (a1 >> 0xA<u32> & 1<32>) != 0<32> l23062A98
l23062AC6:
	branch CONVERT(Mem14[a0 + 190<i32>:byte], byte, word32) != 1<32> l23062A98
l23062A6A:
	branch (a1 >>u 9<u32> & 1<32>) == 0<32> l23062A78
l23062A72:
	branch CONVERT(Mem14[a0 + 189<i32>:byte], byte, word32) == 0<32> l23062AD0
l23062A78:
	branch CONVERT(Mem14[a0 + 187<i32>:byte], byte, word32) <u (a1 >> 7<u32> & 3<32>) l23062AD0
l23062A86:
	word32 a5_145
	word32 a4_144
	branch CONVERT(Mem51[a0 + 188<i32>:byte], byte, word32) <u rc_get_nss(a1, out a4_144, out a5_145) l23062AD0
l23062AD0:
	a0Out = 0<32>
	return a0
l23062A98:
l23062AA0_thunk_rc_check_valid_rate:
	word32 a0_72
	word32 s0_76 = rc_check_valid_rate(a0, a1, out a0_72)
	a0Out = a0_72
	return s0_76
rc_check_fixed_rate_config_exit:


word32 rc_calc_tp(word32 a0, word32 a1, word32 dwArg18, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_rc_stats_req_handler
//      rc_update_stats
//      rc_check
// MayUse:  a0:[0..31] a1:[0..31] Stack +0018:[0..31]
// LiveOut: a0 a2 a3 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
rc_calc_tp_entry:
l23062ADE:
	word32 a0_22
	word32 a1_20 = a1 + 0xC<32> + a0
	word32 s0_21 = CONVERT(Mem16[a1_20 + 8<i32>:uint16], uint16, word32)
	branch s0_21 <=u 0x1FFF998<32> l23062B50
l23062B50:
	a0_22 = 0<32>
l23062B00:
	s3 = CONVERT(Mem16[a1_20 + 10<i32>:uint16], uint16, word32)
	word32 a5_109
	branch is_cck_group(s3, out a5_109) != 0<32> l23062B20
l23062B10:
l23062B20:
	word32 a0_40
	word32 a4_110
	word32 a5_111
	s1 = rc_get_duration(s3, dwArg18, out a0_40, out a3, out a4_110, out a5_111, out s2)
	s0_21 = s0_21 + 1000<i32> >>u a0_40 + s1
	a0_22 = s0_21 + 0xF4240<32> >>u 16<i32>
l23062B42:
	s1Out = s1
	a0Out = a0_22
	a2Out = dwArg48
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s0_21
rc_calc_tp_exit:


word32 rc_update_stats(word32 ra, word32 a0, word32 dwArg64, word32 dwArg78, word32 dwArg80, word32 dwArgA8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_init
//      rc_check
// MayUse:  a0:[0..31] ra:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0080:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 ra s0 s1 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rc_update_stats_entry:
l23062B54:
	word32 a6_848
	word32 a7_849
	word32 a4_846
	word32 a5_847
	word32 a3_845
	word32 a2_844
	memcpy(fp + -136<i32>, a0 + 124<i32>, 32<i32>, out a2_844, out a3_845, out a4_846, out a5_847, out a6_848, out a7_849)
	word32 s0_112 = a0
	word32 a4_50 = CONVERT(Mem36[a0 + 166<i32>:uint16], uint16, word32)
	branch a4_50 == 0<32> l23062BAC
l23062B88:
	word32 a5_51 = CONVERT(Mem36[a0 + 164<i32>:uint16], uint16, word32)
	word32 a3_52 = Mem36[a0 + 168<i32>:int32]
	Mem53[a0 + 164<i32>:word32] = 0<32>
	Mem61[a0 + 168<i32>:word32] = ((a5_51 << 16<i32> ^ a4_50) << 5<i32>) + (a3_52 + 96<i32>) >>u 7<i32>
l23062BAC:
	word32 a2_64 = CONVERT(Mem63[a0 + 192<i32>:uint16], uint16, word32)
	Mem67[a0 + 173<i32>:byte] = 0<8>
	word32 a3_116 = fp + -104<i32>
	word32 a5_68 = a0 + 14<i32>
	word32 a4_123 = 0<32>
	word32 s3_139 = fp + -104<i32>
l23062BC0:
	branch a2_64 != a4_123 l23062C08
l23062C08:
	Mem77[a3_116:word32] = 0<32>
	Mem79[a5_68:byte] = 0<8>
	Mem81[a5_68 + 1<i32>:byte] = 1<8>
	a4_123 = CONVERT(SLICE(a4_123 + 1<32>, word16, 0), word16, word32)
	a3_116 = a3_116 + 4<32>
	a5_68 = a5_68 + 0xC<32>
l23062BC4:
	word32 s1_156
	word32 a1_87 = CONVERT(Mem86[a0 + 198<i32>:uint16], uint16, word32)
	word32 s2_128 = 0<32>
	word32 s4_113 = 0xC<32>
	branch a1_87 == 0xFFFFFFF<32> l23062C4A
l23062C4A:
	branch s2_128 <u CONVERT(Mem93[s0_112 + 192<i32>:uint16], uint16, word32) l23062C20
l23062C20:
	rc_calc_prob_ewma(s2_128 + s4_113 + 4<32> + s0_112)
	word32 a0_107
	word32 s2_119
	word32 s1_850
	word32 a2_851
	word32 s3_852
	word32 s8_853
	s0_112 = rc_calc_tp(s0_112, s2_128 & 255<i32>, dwLoc98, out s1_850, out a0_107, out a2_851, out a3_116, out s2_119, out s3_852, out s4_113, out s8_853)
	Mem127[(s2_119 << 2<u32>) + (fp + -64<i32>) + 4056<i32>:word32] = a0_107
	a4_123 = fp + -64<i32>
	s2_128 = CONVERT(SLICE(s2_119 + 1<32>, word16, 0), word16, word32)
l23062C52:
	word32 s2_857
	word32 s6_854
	word32 a4_856
	word32 a1_855
	s0_112 = rc_update_retry_chain(rc_sort_samples_tp(s0_112, a3_116, a4_123, dwArg78, out s3_139, out s6_854), s3_139, a3_116, dwArg78, out s1_156, out a1_855, out a4_856, out s2_857, out s4_113, out s5, out s7)
	branch s1_156 == 0<32> l23062C68
l23062C68:
	word32 a3_165 = CONVERT(Mem93[s0_112 + 192<i32>:uint16], uint16, word32)
	branch a3_165 >u 9<32> l23062C8E
l23062C8E:
	word32 s2_181 = CONVERT(Mem93[CONVERT(Mem93[s0_112 + 128<i32>:uint16], uint16, word32) + 0xC<32> + s0_112 + 10<i32>:uint16], uint16, word32)
	s4_113 = CONVERT(Mem93[CONVERT(Mem93[s0_112 + 136<i32>:uint16], uint16, word32) + 0xC<32> + s0_112 + 10<i32>:uint16], uint16, word32)
	s3_139 = 0xFFFFFFFF<32>
	s7 = 4<32>
	s5 = s2_181 >> 0xB<u32> & 6<i32>
	s9 = s2_181 & 512<i32>
	word32 a4_861
	word32 a5_862
	word32 t1_858
	word32 a2_859
	word32 a3_860
	word32 a0_192
	word32 a1_193
	ra = memset(ra, fp + -148<i32>, 0xFFFFFFFF<32>, 0xC<32>, out t1_858, out a0_192, out a1_193, out a2_859, out a3_860, out a4_861, out a5_862)
l23062CD8:
	word32 a5_202 = s3_139 + 0<i32>
	branch (a5_202 & 255<i32>) >u 4<32> l23062CEC
l23062CEC:
	word32 s3_219 = s3_139 + 1<32>
	a0_192 = rc_new_random_rate(s0_112, a5_202 & 255<i32>, out a1_193)
	s3_139 = s3_219 & 255<i32>
	branch (s3_219 & 255<i32>) != 6<32> l23062CD8
l23062D02:
	word32 a7_222 = CONVERT(Mem218[s0_112 + 192<i32>:uint16], uint16, word32)
	word32 a5_224 = 1<32>
	word32 a3_225 = 0<32>
l23062D14:
	branch a5_224 <u a7_222 l23062DF8
l23062DF8:
	word32 a4_235 = a5_224 + 0xC<32> + s0_112
	branch CONVERT(Mem236[a4_235 + 8<i32>:int16], int16, int32) >= 0<32> l23062E0E
l23062E06:
	branch CONVERT(Mem236[a4_235 + 12<i32>:byte], byte, word32) <=u 0xA<32> l23062E70
l23062E0E:
	branch CONVERT(Mem236[s0_112 + 128<i32>:uint16], uint16, word32) == a5_224 l23062E70
l23062E16:
	branch CONVERT(Mem236[s0_112 + 136<i32>:uint16], uint16, word32) == a5_224 l23062E70
l23062E1E:
	branch CONVERT(Mem236[s0_112 + 144<i32>:uint16], uint16, word32) == a5_224 l23062E70
l23062E26:
	branch a3_225 >u 5<32> l23062E70
l23062E70:
	a5_224 = CONVERT(SLICE(a5_224 + 1<32>, word16, 0), word16, word32)
l23062E2A:
	word32 a2_259 = CONVERT(Mem236[(a3_225 << 1<u32>) + (fp + -64<i32>) + -84<i32>:uint16], uint16, word32)
	branch a2_259 == 0xFFFFFFF<32> l23062E56
l23062E3A:
	word32 a6_262 = s0_112 + 10<i32>
	word32 a0_263 = 0<32>
l23062E40:
	branch a0_263 <u a7_222 l23062E62
l23062E62:
	a6_262 = a6_262 + 0xC<32>
	branch CONVERT(Mem236[a6_262 + -12<i32>:uint16], uint16, word32) == a2_259 l23062E56
l23062E6C:
	a0_263 = a0_263 + 1<32>
l23062E44:
	Mem277[a4_235 + 10<i32>:word16] = SLICE(a2_259, word16, 0)
	Mem278[a4_235 + 8<i32>:word16] = 0<16>
	Mem279[a4_235 + 13<i32>:byte] = 0<8>
	a5_224 = CONVERT(SLICE(a5_224 + 1<32>, word16, 0), word16, word32)
l23062E56:
	a3_225 = a3_225 + 1<32>
l23062E58:
	Mem287[a4_235 + 4<i32>:word16] = 0<16>
	Mem288[a4_235 + 6<i32>:word16] = 0<16>
l23062D18:
	Mem289[s0_112 + 4<i32>:word32] = 0<32>
l23062CE4:
	word32 a5_294 = Mem293[((a5_202 & 255<i32>) << 2<i32>) + 0x2307ED8C<32>:word32]
	word32 s0_307
	word32 s1_308
	word32 a0_309
	word32 ra_312
	word32 s2_313
	word32 s3_314
	word32 s4_315
	word32 s5_316
	word32 s6_317
	word32 s7_318
	word32 s9_320
	word32 tp_334
	call a5_294 (retsize: 0;)
		uses: a0:a0_296,a1:a1_297,a5:a5_294,ra:ra_198,s0:s0_155,s1:s1_156,s10:s2_181 & -513<i32>,s11:s2_181 | 512<i32>,s2:s2_181,s3:s3_201,s4:s4_188,s5:s5_183,s6:0x2307ED8C<32>,s7:4<32>,s8:1<32>,s9:s2_181 & 512<i32>,Stack +0018:dwLoc98,Stack +0114:dwArg64,Stack +0128:dwArg78,Stack +0130:dwArg80,Stack +0158:dwArgA8,tp:tp_334
		defs: a0:a0_309,ra:ra_312,s0:s0_307,s1:s1_308,s2:s2_313,s3:s3_314,s4:s4_315,s5:s5_316,s6:s6_317,s7:s7_318,s9:s9_320,tp:tp_334
	s0Out = s0_307
	s1Out = s1_308
	a0Out = a0_309
	s2Out = s2_313
	s3Out = s3_314
	s4Out = s4_315
	s5Out = s5_316
	s6Out = s6_317
	s7Out = s7_318
	s9Out = s9_320
	return ra_312
l23062C72:
	word32 a4_335 = s0_112 + 4<i32>
	word32 a5_336 = 0<32>
l23062C78:
	branch a3_165 == a5_336 l23062C64
l23062C7C:
	Mem342[a4_335:word16] = 0<16>
	Mem343[a4_335 + 2<i32>:word16] = 0<16>
	a5_336 = CONVERT(SLICE(a5_336 + 1<32>, word16, 0), word16, word32)
	a4_335 = a4_335 + 0xC<32>
l23062BD4:
	word32 a3_346 = CONVERT(Mem86[a0 + 175<i32>:byte], byte, word32)
	word32 a5_347 = 0<32>
	branch (a3_346 & 32<i32>) != 0<32> l23062E8C
l23062E8C:
	word32 a2_351 = a5_347 << 0x10<u32>
	branch a2_351 >>u 16<i32> <u a4_123 l23062E78
l23062E78:
	branch CONVERT(Mem86[a5_347 + 0xC<32> + a0 + 10<i32>:uint16], uint16, word32) == a1_87 l23062EB0
l23062E86:
	a5_347 = a5_347 + 1<32> & 255<i32>
l23062E96:
	branch a4_123 != a2_351 >>u 16<i32> l23062EB0
l23062E9A:
	word32 a5_363 = a5_347 + 0xFFFFFFFF<32>
	word32 a2_367 = (a5_363 & 255<i32>) + 0xC<32> + a0
	Mem368[a2_367 + 10<i32>:word16] = SLICE(a1_87, word16, 0)
	Mem369[a2_367 + 8<i32>:word16] = 0<16>
	a5_347 = a5_363 & 255<i32>
l23062EB0:
	word32 a5_371 = a5_347 << 16<i32>
	Mem374[a0 + 128<i32>:word16] = SLICE(a5_371 >>u 16<i32>, word16, 0)
	Mem375[a0 + 136<i32>:word16] = SLICE(a5_371 >>u 16<i32>, word16, 0)
	Mem376[a0 + 144<i32>:word16] = SLICE(a5_371 >>u 16<i32>, word16, 0)
	Mem377[a0 + 124<i32>:word32] = 0<32>
	Mem378[a0 + 132<i32>:word32] = 0<32>
	Mem379[a0 + 140<i32>:word32] = 0<32>
	word32 a2_380 = a0 + 4<i32>
	word32 a5_381 = 0<32>
l23062ED2:
	branch a4_123 != a5_381 l23062EE6
l23062EE6:
	Mem387[a2_380:word16] = 0<16>
	Mem388[a2_380 + 2<i32>:word16] = 0<16>
	a5_381 = CONVERT(SLICE(a5_381 + 1<32>, word16, 0), word16, word32)
	a2_380 = a2_380 + 0xC<32>
l23062ED6:
	Mem397[a0 + 175<i32>:byte] = SLICE(a3_346 & -97<i32> | 64<i32>, byte, 0)
	s1_156 = 1<32>
l23062BE4:
	word32 s1_399 = CONVERT(Mem86[a0 + 128<i32>:byte], byte, word32)
	rc_calc_prob_ewma(s1_399 + 0x10<32> + a0)
	word32 s1_404 = s1_399 + 0xC<32> + a0
	Mem409[s1_404 + 4<i32>:word16] = 0<16>
	Mem410[s1_404 + 6<i32>:word16] = 0<16>
	Mem411[a0 + 4<i32>:word32] = 0<32>
l23062C64:
	s1_156 = 0<32>
l23062D1C:
	word32 a5_416 = s0_112 + 128<i32>
	word32 a4_424 = fp + -136<i32> + 4<i32>
	word32 s0_425 = s0_112 + 160<i32>
l23062D26:
	branch CONVERT(Mem487[a4_424 + 0<i32>:uint16], uint16, word32) != CONVERT(Mem487[a5_416:uint16], uint16, word32) l23062EF8
l23062EF8:
	s1_156 = 1<32>
l23062D32:
	a5_416 = a5_416 + 8<32>
	a4_424 = a4_424 + 8<32>
	branch a5_416 != s0_425 l23062D26
l23062D3A:
	word32 s6_444 = Mem487[dwArgA8 + 168<i32>:word32]
	word32 s2_445 = Mem487[dwArgA8 + 200<i32>:word32]
	word32 a0_447 = Mem487[dwArgA8 + 12<i32>:word32]
	s0Out = s0_425
	s1Out = s1_156
	a0Out = a0_447
	s2Out = s2_445
	s3Out = s3_139
	s4Out = s4_113
	s5Out = s5
	s6Out = s6_444
	s7Out = s7
	s9Out = s9
	return ra
rc_update_stats_exit:


word32 rc_init(word32 ra, word32 a0, word32 s9, word32 dwArg08, word32 dwArg1C, word32 dwArg34, word32 dwArg48, word32 dwArg78, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_init_rate
// MayUse:  a0:[0..31] ra:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a5 ra s0 s1 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rc_init_entry:
l23062EFC:
	branch CONVERT(Mem27[a0 + 27<i32>:byte], byte, word32) <=u 9<32> l23062F48
l23062F48:
	word32 s0_143
	word32 s1_144
	word32 s2_145
	word32 s2_41 = CONVERT(Mem27[a0 + 27<i32>:byte], byte, word32)
	Mem48[a0 + 272<i32>:word32] = s2_41 + 0x4201E7B8<32>
	phy_get_ntx(a0)
	word32 a4_889
	word32 a5_890
	word32 a1_886
	word32 a0_885
	word32 a2_887
	word32 a3_888
	word32 t1_884
	word32 ra_61 = memset(ra, s2_41 + 0x4201E7B8<32>, 0<32>, 200<i32>, out t1_884, out a0_885, out a1_886, out a2_887, out a3_888, out a4_889, out a5_890)
	branch (Mem48[a0 + 236<i32>:int32] & 2<32>) == 0<32> l2306317E
l2306317E:
	word32 a0_68
	word32 s3_77
	word32 s4_892
	word32 s5_893
	word32 s6_894
	word32 s8_896
	word32 s7_895
	word32 a4_891
	s0_143 = me_legacy_rate_bitfield_build(a0 + 176<i32>, 0<32>, dwArgF8, out s1_144, out a0_68, out a4_891, out s2_145, out s3_77, out s4_892, out s5_893, out s6_894, out s7_895, out s8_896)
	Mem85[s3_77 + 182<i32>:word16] = SLICE(a0_68, word16, 0)
	word32 a0_86 = me_legacy_ridx_min(a0_68)
	Mem91[s3_77 + 185<i32>:byte] = SLICE(a0_86, byte, 0)
	branch a0_86 <=u 0xB<32> l230631AE
l230631AE:
	word32 s7_101 = s2_145 + 200<i32> + s1_144
	word32 a0_103 = me_legacy_ridx_max(CONVERT(Mem91[s7_101 + 182<i32>:uint16], uint16, word32))
	Mem109[s7_101 + 186<i32>:byte] = SLICE(a0_103, byte, 0)
	branch a0_103 <=u 0xB<32> l230631E4
l230631E4:
	word32 a5_120 = s2_145 + 200<i32> + s1_144
	Mem121[a5_120 + 184<i32>:byte] = 0xFF<8>
	word32 a4_122 = CONVERT(Mem121[s0_143 + 241<i32>:byte], byte, word32)
	Mem123[a5_120 + 187<i32>:byte] = SLICE(a4_122, byte, 0)
	branch a4_122 == 0<32> l23063218
l23063218:
	Mem136[s2_145 + 200<i32> + s1_144 + 190<i32>:byte] = SLICE(CONVERT(Mem123[s0_143 + 280<i32>:uint16], uint16, word32) >> 10<i32> & 1<32>, byte, 0)
l230631FE:
	assert_err()
l230631CA:
	assert_err()
l23063194:
	assert_err()
l23062F8A:
	word32 a0_137
	word32 s3_146
	word32 s7_150
	word32 a4_897
	word32 s5_899
	word32 s6_900
	word32 s8_901
	word32 s4_898
	s0_143 = me_legacy_rate_bitfield_build(a0 + 176<i32>, 0<32>, dwArgF8, out s1_144, out a0_137, out a4_897, out s2_145, out s3_146, out s4_898, out s5_899, out s6_900, out s7_150, out s8_901)
	Mem156[s3_146 + 177<i32>:byte] = 2<8>
	Mem157[s3_146 + 182<i32>:word16] = SLICE(a0_137, word16, 0)
	word32 a0_159 = me_11n_nss_max(s0_143 + 195<i32>)
	word32 a0_165 = me_11n_nss_max(0x4201C8CB<32>)
	word32 a5_168 = a0_159
	branch a0_165 >=u a0_159 l23062FB8
l23062FB6:
	a5_168 = a0_165
l23062FB8:
	Mem176[s2_145 + 200<i32> + s1_144 + 188<i32>:byte] = SLICE(a5_168, byte, 0)
	branch a5_168 <=u 3<32> l23062FE6
l23062FE6:
	word32 a2_902
	word32 a3_903
	word32 a5_905
	word32 a6_906
	word32 a7_907
	word32 a4_904
	memcpy(s7_150 + 178<i32> + s1_144, s0_143 + 195<i32>, 4<32>, out a2_902, out a3_903, out a4_904, out a5_905, out a6_906, out a7_907)
	word32 s7_206 = s2_145 + 200<i32> + s1_144
	word32 a0_207 = CONVERT(Mem176[s7_206 + 182<i32>:uint16], uint16, word32)
	Mem208[s7_206 + 178<i32>:byte] = 0xFF<8>
	Mem210[s7_206 + 184<i32>:byte] = 7<8>
	word32 a0_211 = me_legacy_ridx_min(a0_207)
	Mem216[s7_206 + 185<i32>:byte] = SLICE(a0_211, byte, 0)
	branch a0_211 <=u 0xC<32> l23063036
l23063036:
	word32 s7_226 = s2_145 + 200<i32> + s1_144
	word32 a0_228 = me_legacy_ridx_max(CONVERT(Mem216[s7_226 + 182<i32>:uint16], uint16, word32))
	Mem234[s7_226 + 186<i32>:byte] = SLICE(a0_228, byte, 0)
	branch a0_228 <=u 0xC<32> l2306306C
l2306306C:
	Mem249[s2_145 + 200<i32> + s1_144 + 190<i32>:byte] = SLICE(CONVERT(Mem234[s0_143 + 280<i32>:uint16], uint16, word32) >> 10<i32> & 1<32>, byte, 0)
	word32 a0_250 = phy_ldpc_tx_supported(a0_228)
	word32 a5_252 = CONVERT(Mem249[s0_143 + 192<i32>:uint16], uint16, word32)
	branch a0_250 == 0<32> l23063096
l2306308C:
	branch (a5_252 & 1<i32>) == 0<32> l23063096
l23063092:
l23063096:
	word32 a4_258
	branch a5_252 << 0x14<u32> < 0<32> l23063148
l23063148:
	a4_258 = 0x2000000<32>
l2306309E:
	a4_258 = 0x1000000<32>
l230630A0:
	word32 a5_268 = s2_145 + 200<i32> + s1_144
	Mem269[a5_268 + 194<i32>:word16] = SLICE(a4_258 + -257<i32>, word16, 0)
	word32 a4_272 = CONVERT(Mem269[s0_143 + 241<i32>:byte], byte, word32)
	Mem273[a5_268 + 187<i32>:byte] = SLICE(a4_272, byte, 0)
	branch a4_272 <=u 3<32> l230630DA
l230630DA:
	word32 a5_287
	word32 a4_281 = CONVERT(Mem273[s0_143 + 241<i32>:byte], byte, word32)
	branch a4_281 == 0<32> l2306314C
l2306314C:
	branch (CONVERT(Mem273[s0_143 + 192<i32>:uint16], uint16, word32) & 32<i32>) == 0<32> l230630E6
l23063156:
	a4_281 = 1<32>
	a5_287 = s2_145 + 200<i32> + s1_144
l230630E0:
	branch a4_281 == 1<32> l23063168
l23063168:
	branch (CONVERT(Mem273[s0_143 + 192<i32>:uint16], uint16, word32) & 64<i32>) == 0<32> l230630E6
l23063172:
	a5_287 = s2_145 + 200<i32> + s1_144
l23063162:
	Mem296[a5_287 + 189<i32>:byte] = SLICE(a4_281, byte, 0)
l230630E6:
	word32 a5_324
	word32 a4_304 = s2_145 + 200<i32> + s1_144
	word32 a3_306 = CONVERT(Mem305[a4_304 + 177<i32>:byte], byte, word32)
	branch a3_306 <=u 1<32> l23063230
l23063230:
	word32 a3_307 = CONVERT(Mem305[a4_304 + 182<i32>:uint16], uint16, word32)
	word32 a4_310 = 1<32> - CONVERT(Mem305[a4_304 + 190<i32>:byte], byte, word32)
	a5_324 = CONVERT(SLICE(((a3_307 >> 1<u32> & 1<32>) + (a3_307 >> 2<u32> & 1<i32>) << a4_310) + (a3_307 & 1<i32>) + ((a3_307 >> 3<u32> & 1<32>) << a4_310), word16, 0), word16, word32)
	word32 a4_325 = 4<32>
l2306326A:
	a4_325 = a4_325 + 1<32>
	a5_324 = CONVERT(SLICE(a5_324 + (a3_307 >> a4_325 & 1<32>), word16, 0), word16, word32)
	branch a4_325 != 0xC<32> l2306326A
l230630FA:
	branch a3_306 <=u 3<32> l230633FA
l230633FA:
	word32 a1_338 = CONVERT(Mem305[a4_304 + 178<i32>:byte], byte, word32)
	word32 a2_339 = 8<32>
	word32 a3_340 = 1<32> << CONVERT(Mem305[a4_304 + 189<i32>:byte], byte, word32)
	word32 a5_341 = 0<32>
l2306340A:
	a2_339 = a2_339 + 0xFFFFFFFF<32>
	a1_338 = a1_338 >>u 1<i32>
	a5_341 = CONVERT(SLICE(a5_341 + (a3_340 + (a1_338 & 1<i32>)), word16, 0), word16, word32)
	branch a2_339 != 0<32> l2306340A
l2306341E:
	word32 a4_358 = s2_145 + 200<i32> + s1_144
	word32 a3_360 = CONVERT(Mem305[a4_358 + 182<i32>:uint16], uint16, word32)
	word32 a2_362 = 1<32> - CONVERT(Mem305[a4_358 + 190<i32>:byte], byte, word32)
	a5_324 = CONVERT(SLICE(a5_341 + ((((a3_360 >> 1<u32> & 1<32>) + (a3_360 >> 2<u32> & 1<i32>) << a2_362) + (a3_360 & 1<i32>)) + ((a3_360 >> 3<i32> & 1<32>) << a2_362)), word16, 0), word16, word32)
l2306327C:
	branch a5_324 <=u 0xA<32> l23063460
l23063460:
	Mem387[s2_145 + 200<i32> + s1_144 + 192<i32>:word16] = SLICE(a5_324, word16, 0)
	branch a5_324 != 0<32> l23063290
l23063472:
l23063282:
	Mem391[s2_145 + 200<i32> + s1_144 + 192<i32>:word16] = 0xA<16>
l23063290:
	word32 s7_407 = Mem400[CONVERT(Mem400[s0_143 + 27<i32>:byte], byte, word32) + 0x4201AAC8<32>:int32]
	branch s7_407 != 0<32> l230632C6
l230632C6:
	word32 a4_413 = CONVERT(Mem400[s7_407 + 192<i32>:uint16], uint16, word32)
	word32 a5_415 = s7_407 + 10<i32>
	word32 s8_416 = 0<32>
l230632D4:
	branch s8_416 != a4_413 l23063474
l23063474:
	Mem424[a5_415:word16] = 0xFFFF<16>
	s8_416 = CONVERT(SLICE(s8_416 + 1<32>, word16, 0), word16, word32)
	a5_415 = a5_415 + 0xC<32>
l230632D8:
	Mem433[s7_407 + 10<i32>:word16] = SLICE(rc_get_lowest_rate_config(s7_407), word16, 0)
	Mem449[s8_416 + 0xB<32> + s7_407 + 10<i32>:word16] = SLICE(rc_get_initial_rate_config(s7_407, dwArg08), word16, 0)
	word32 s8_450 = 1<32>
l230632FA:
	word32 a5_453 = CONVERT(Mem452[s7_407 + 192<i32>:uint16], uint16, word32)
	branch s8_450 < a5_453 + -1<i32> l23063484
l23063484:
	word32 a1_908
	word32 a0_457 = rc_new_random_rate(s7_407, a5_453, out a1_908)
	word32 a3_467 = CONVERT(Mem452[s7_407 + 192<i32>:uint16], uint16, word32)
	word32 a4_469 = s7_407 + 10<i32>
	word32 a5_470 = 0<32>
l23063492:
	branch a5_470 <u a3_467 l230634AA
l230634AA:
	a4_469 = a4_469 + 0xC<32>
	branch CONVERT(Mem452[a4_469 + -12<i32>:uint16], uint16, word32) == a0_457 l230632FA
l230634B4:
	a5_470 = a5_470 + 1<32>
l23063496:
	Mem488[s8_450 + 0xC<32> + s7_407 + 10<i32>:word16] = SLICE(a0_457, word16, 0)
	s8_450 = CONVERT(SLICE(s8_450 + 1<32>, word16, 0), word16, word32)
l23063306:
	Mem489[s7_407 + 128<i32>:word16] = SLICE(a5_453 + -1<i32>, word16, 0)
	Mem492[s7_407 + 144<i32>:word16] = SLICE(a5_453 + 0xFFFFFFFD<32>, word16, 0)
	Mem494[s7_407 + 168<i32>:word32] = 0x10000000<32>
	Mem496[s7_407 + 136<i32>:word16] = SLICE(a5_453 + -2<i32>, word16, 0)
	Mem497[s7_407 + 198<i32>:word16] = 0xFFFF<16>
	Mem499[s7_407 + 124<i32>:word32] = 0<32>
	Mem500[s7_407 + 132<i32>:word32] = 0<32>
	Mem501[s7_407 + 140<i32>:word32] = 0<32>
	Mem502[s7_407 + 152<i32>:word16] = 0<16>
	Mem503[s7_407 + 148<i32>:word32] = 0<32>
	Mem504[s7_407 + 175<i32>:byte] = 0<8>
	word32 a0_512
	word32 s0_521
	word32 s1_522
	word32 s2_525
	word32 s4_527
	word32 s5_528
	word32 s6_529
	word32 s7_530
	word32 s9_532
	word32 s3_526
	word32 ra_520 = rc_update_stats(ra_61, s7_407, dwArg34, dwArg48, s9, dwArg78, out s0_521, out s1_522, out a0_512, out s2_525, out s3_526, out s4_527, out s5_528, out s6_529, out s7_530, out s9_532)
	Mem541[s7_530 + 172<i32>:byte] = 5<8>
	word32 a4_544 = s4_527 + 20<i32>
l23063360:
	a4_544 = a4_544 + 4<32>
	Mem563[a4_544 + 4092<i32>:word32] = CONVERT(Mem549[CONVERT(Mem549[s3_526 + 128<i32>:byte], byte, word32) + 0xC<32> + (s2_525 + 200<i32>) + s1_522 + 10<i32>:uint16], uint16, word32) | 0x80000000<32>
	s3_526 = s3_526 + 8<32>
	branch a4_544 != s4_527 + 36<i32> l23063360
l2306337E:
	Mem570[s2_525 + 200<i32> + s1_522:word32] = Mem563[0x44B00120<32>:int32]
	Mem574[s4_527:word32] = 0xBADCAB1E<32>
	Mem577[s4_527 + 12<i32>:word32] = s5_528 << 10<i32>
	Mem578[s4_527 + 16<i32>:word32] = 0xF0000704<32>
	Mem580[s4_527 + 4<i32>:word32] = s6_529
	Mem588[s4_527 + 8<i32>:word32] = (1<32> << phy_get_ntx(a0_512) + 1<32>) + 0xFFFFFFFF<32>
	word32 a4_590 = Mem588[s0_521 + 268<i32>:int32]
	Mem593[0x2000234<32>:word32] = a4_590
	word32 s0_595 = Mem593[a4_590 + 16<i32>:word32]
	Mem596[a4_590 + 56<i32>:word32] = Mem593[s0_521 + 268<i32>:int32]
	word32 a5_597 = CONVERT(Mem596[s0_595 + 282<i32>:byte], byte, word32)
	Mem602[s0_595 + 282<i32>:byte] = SLICE(a5_597 | 17<i32>, byte, 0)
	0<32> = dwArg0128
	0<32> = dwArg1C
	s0Out = s4
	s1Out = s1_522
	a3Out = s4_527 + 36<i32>
	a5Out = a5_597 | 17<i32>
	s5Out = s5_528 << 10<i32>
	s6Out = s6_529
	s7Out = s7_530
	s9Out = s9_532
	return ra_520
rc_init_exit:
l230632AE:
	assert_err()
l23063100:
	Mem392[a4_304 + 192<i32>:word16] = 0<16>
l23063104:
	assert_err()
l230630C0:
	assert_err()
l23063052:
	assert_err()
l2306301C:
	assert_err()
l23062FCC:
	assert_err()
l23062F2E:
	assert_err()


word32 rc_check(word32 ra, word32 a0, word32 s6, word32 dwArg14, word32 dwArg28, word32 dwArg30, word32 dwArg58, word32 dwArg010C, ptr32 & s0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_check_rc
// MayUse:  a0:[0..31] ra:[0..31] s6:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0058:[0..31] Stack +010C:[0..31]
// LiveOut: ra s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 tp
// Preserved: a7 sp t1 t4 t5 t6
rc_check_entry:
l230634B8:
	branch a0 >u 9<32> l23063790
l23063790:
	s0Out = s0
	s2Out = s2
	return ra
l230634BE:
	word32 s4_253 = a0
	word32 s3_260 = 0x4201A808<32>
	branch Mem35[a0 + 0x4201AAC8<32>:int32] != 0<32> l23063512
l23063512:
	word32 a4_47 = Mem35[0x44B00120<32>:int32]
	word32 s1_138 = 0x44B00000<32>
	word32 s0_252 = Mem35[a4_47:word32]
	word32 s6_274 = 0<32>
	branch 0x180006A0<32> - a4_47 + a4_47 >= 0<32> l2306354E
l2306352C:
	word32 a0_56
	word32 s9_775
	word32 s5_772
	word32 s6_773
	word32 s7_774
	rc_update_stats(ra, s0_252, dwArg14, dwArg28, dwArg30, dwArg58, out s0_252, out s1_138, out a0_56, out s2, out s3_260, out s4_253, out s5_772, out s6_773, out s7_774, out s9_775)
	word32 a5_84 = CONVERT(Mem35[s0_252 + 175<i32>:byte], byte, word32)
	Mem85[s0_252 + 174<i32>:byte] = 0<8>
	Mem86[s0_252 + 176<i32>:byte] = 0<8>
	Mem88[s0_252 + 175<i32>:byte] = SLICE(a5_84 & 0xFFFFFFEF<32>, byte, 0)
	Mem91[Mem88[s1_138 + 288<i32>:int32]:word32] = s0_252
	s6_274 = a0_56
l2306354E:
	word32 a5_94 = CONVERT(Mem93[s0_252 + 174<i32>:byte], byte, word32)
	branch a5_94 != 1<32> l23063752
l23063752:
	branch a5_94 != 3<32> l230636F2
l23063758:
	branch (CONVERT(Mem93[s0_252 + 175<i32>:byte], byte, word32) & 2<32>) != 0<32> l2306376E
l23063760:
	Mem100[s0_252 + 128<i32>:word16] = SLICE(CONVERT(Mem93[s0_252 + 136<i32>:uint16], uint16, word32), word16, 0)
	Mem102[Mem100[s0_252 + 132<i32>:int32] + 124<i32>:word32] = s0_252
l2306376E:
	word32 a5_105 = CONVERT(Mem104[s0_252 + 160<i32>:uint16], uint16, word32)
	Mem106[s0_252 + 174<i32>:byte] = 0<8>
	Mem107[s0_252 + 136<i32>:word16] = SLICE(a5_105, word16, 0)
	word32 a5_108 = Mem107[s0_252 + 156<i32>:int32]
	Mem109[s0_252 + 156<i32>:word32] = 0<32>
	Mem110[s0_252 + 132<i32>:word32] = a5_108
	Mem112[s0_252 + 160<i32>:word16] = 0xFF<16>
l23063558:
	branch (CONVERT(Mem93[s0_252 + 175<i32>:byte], byte, word32) & 64<i32>) != 0<32> l230636EE
l23063564:
	word32 a5_119
	word32 s5_116 = CONVERT(Mem93[s0_252 + 128<i32>:uint16], uint16, word32)
	branch a5_94 <u CONVERT(Mem93[s0_252 + 177<i32>:byte], byte, word32) l23063670
l23063670:
	a5_119 = CONVERT(Mem93[s0_252 + 170<i32>:uint16], uint16, word32) + 8<32> << 1<i32>
l23063570:
	branch CONVERT(SLICE(CONVERT(Mem93[s5_116 + 0xC<32> + s0_252 + 8<i32>:uint16], uint16, word32) + 0xFE000667<32>, word16, 0), word16, word32) <=u 0xDFFF99A<32> l2306366C
l2306366C:
	a5_119 = 0xA<32>
l23063592:
	a5_119 = 5<32>
l23063594:
	Mem135[s0_252 + 172<i32>:byte] = SLICE(a5_119, byte, 0)
	word32 s1_142 = s1_138 + 0x41C64E6D<32>
	Mem150[s1_142 + 0x3000039<32>:word32] = Mem135[s1_138:word32]
	word32 s1_153 = s1_142 + 0x3000039<32> >>u 16<i32> & CONVERT(Mem150[s0_252 + 192<i32>:uint16], uint16, word32)
	branch s1_153 == s5_116 l230636EE
l230635C8:
	word32 s7_155 = CONVERT(Mem150[s0_252 + 136<i32>:uint16], uint16, word32)
	branch s1_153 == s7_155 l230636EE
l230635D0:
	word32 s9_156 = CONVERT(Mem150[s0_252 + 144<i32>:uint16], uint16, word32)
	branch s1_153 == s9_156 l230636EE
l230635D8:
	s2 = s1_153 + 0xC<32> + s0_252
	branch CONVERT(Mem150[s2 + 8<i32>:uint16], uint16, word32) >u 0xF000333<32> l230636EE
l230635EE:
	word32 s1_258
	word32 a0_247
	word32 a5_264
	word32 s11_163 = CONVERT(Mem150[s2 + 10<i32>:uint16], uint16, word32)
	word32 a0_165
	word32 a4_168
	word32 a3_776
	word32 a5_777
	word32 s2_778
	rc_get_duration(s11_163, dwLoc18, out a0_165, out a3_776, out a4_168, out a5_777, out s2_778)
	word32 a5_178 = CONVERT(Mem150[s5_116 + 0xC<32> + s0_252 + 10<i32>:uint16], uint16, word32)
	branch a4_168 >u 1<32> l2306367A
l2306367A:
	word32 a0_184
	word32 a5_188
	word32 a4_780
	word32 a3_779
	word32 s1_189 = rc_get_duration(CONVERT(Mem180[s7_155 + 0xC<32> + s0_252 + 10<i32>:uint16], uint16, word32), dwLoc18, out a0_184, out a3_779, out a4_780, out a5_188, out s2)
	word32 s8_183 = 32<i32>
	branch CONVERT(Mem180[s2 + 13<i32>:byte], byte, word32) != 0<32> l2306369A
l23063696:
	s8_183 = CONVERT(Mem180[s0_252 + 170<i32>:uint16], uint16, word32)
l2306369A:
	branch a0_165 <u a0_184 l23063714
l2306369E:
	word32 a4_786
	word32 a5_787
	rc_get_nss(a5_188, out a4_786, out a5_787)
	word32 a5_208
	word32 a4_788
	branch a5_208 + 0xFFFFFFFF<32> <u rc_get_nss(s11_163, out a4_788, out a5_208) l230636C8
l230636B4:
	word32 a0_217
	word32 a5_791
	word32 a4_790
	word32 a3_789
	s1_189 = rc_get_duration(CONVERT(Mem203[s9_156 + 0xC<32> + s0_252 + 10<i32>:uint16], uint16, word32), dwLoc18, out a0_217, out a3_789, out a4_790, out a5_791, out s2)
	branch a0_165 <u a0_217 l23063714
l230636C8:
	branch CONVERT(Mem203[s2 + 12<i32>:byte], byte, word32) <u s8_183 l230636EE
l230636D0:
	word32 a5_235 = CONVERT(Mem203[s0_252 + 173<i32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem236[s0_252 + 173<i32>:byte] = SLICE(a5_235, byte, 0)
	branch a5_235 <=u 2<32> l23063714
l23063714:
	word32 s8_254
	word32 a2_784
	word32 a3_785
	s0_252 = rc_calc_tp(s0_252, s1_189 & 255<i32>, s6, out s1_258, out a0_247, out a2_784, out a3_785, out s2, out s3_260, out s4_253, out s8_254)
	a5_264 = 1<32>
	branch (CONVERT(Mem245[s2 + 14<i32>:byte], byte, word32) & 0xF<32>) >u 9<32> l23063624
l2306372C:
	a5_264 = CONVERT(CONVERT(Mem245[s2 + 12<i32>:byte], byte, word32) <u s8_254, bool, word32) ^ 1<i32>
l230636E4:
	branch a5_235 <=u 0xF<32> l230636EE
l230636EA:
	Mem270[s0_252 + 173<i32>:byte] = 0xF<8>
l230636EE:
	Mem272[s0_252 + 174<i32>:byte] = 0<8>
l230636F2:
	branch s6_274 != 0<32> l23063654
l2306360C:
	word32 a0_280
	word32 a3_781
	word32 a4_782
	word32 a5_783
	s1_258 = rc_get_duration(a5_178, dwLoc18, out a0_280, out a3_781, out a4_782, out a5_783, out s2)
	branch a0_280 >=u a0_165 l2306373A
l2306373A:
	a0_247 = 0<32>
	a5_264 = 1<32>
l23063616:
	a0_247 = 0<32>
	a5_264 = CONVERT(CONVERT(Mem150[s2 + 12<i32>:byte], byte, word32) <u 20<i32>, bool, word32) ^ 1<i32>
l23063624:
	word32 a4_296 = Mem295[s0_252 + 132<i32>:int32]
	Mem301[s0_252 + 160<i32>:word16] = SLICE(s7_155, word16, 0)
	Mem302[s0_252 + 156<i32>:word32] = a4_296
	word32 a4_303 = CONVERT(Mem302[s0_252 + 175<i32>:byte], byte, word32)
	branch a5_264 == 0<32> l23063740
l23063740:
	Mem306[s0_252 + 175<i32>:byte] = SLICE(a4_303 | 2<i32>, byte, 0)
	Mem308[s0_252 + 132<i32>:word32] = a0_247
	Mem310[s0_252 + 136<i32>:word16] = SLICE(s1_258, word16, 0)
l23063638:
	s0_252 = Mem302[a5_264 + 124<i32>:word32]
	Mem313[s0_252 + 175<i32>:byte] = SLICE(a4_303 & 0xFFFFFFFD<32>, byte, 0)
	Mem314[s0_252 + 132<i32>:word32] = a5_264
	Mem319[s0_252 + 136<i32>:word16] = SLICE(s5_116, word16, 0)
	Mem320[a0_247 + 124<i32>:word32] = s0_252
	Mem321[s0_252 + 128<i32>:word16] = SLICE(s1_258, word16, 0)
l2306364E:
	Mem324[s0_252 + 174<i32>:byte] = 2<8>
l23063654:
	word32 s3_347 = s3_260 + (s4_253 + 432<i32>)
	Mem352[s3_347 + 282<i32>:byte] = SLICE(CONVERT(Mem348[s3_347 + 282<i32>:byte], byte, word32) | 1<i32>, byte, 0)
l230636F6:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s2Out = s2
	return dwLoc08
rc_check_exit:
l230634F8:
	assert_err()


void cfm_raw_send(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
cfm_raw_send_entry:
l23063792:
l2306379A_thunk_printf:
	word32 s1_36
	word32 a0_37
	word32 a1_38
	word32 a2_39
	word32 a3_40
	word32 a4_41
	word32 a5_42
	word32 a7_43
	word32 s2_44
	word32 s3_45
	word32 s4_46
	word32 s5_47
	word32 s6_48
	word32 s7_49
	word32 s8_50
	word32 s9_51
	word32 s10_52
	word32 s11_53
	word32 t4_54
	printf(ra, 0x2307F0F4<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_36, out a0_37, out a1_38, out a2_39, out a3_40, out a4_41, out a5_42, out a7_43, out s2_44, out s3_45, out s4_46, out s5_47, out s6_48, out s7_49, out s8_50, out s9_51, out s10_52, out s11_53, out t4_54)
	return
cfm_raw_send_exit:


void scanu_raw_send_req_handler(word32 ra, word32 a3, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgA8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scanu_raw_send_req_handler_entry:
l2306379E:
	word32 a3_26
	word32 a4_27
	word32 a4_51
	word32 a5_52
	word32 s1_207
	word32 a0_208
	word32 a1_209
	word32 a2_210
	word32 a5_211
	word32 a7_212
	word32 s2_213
	word32 s3_214
	word32 s4_215
	word32 s5_216
	word32 s6_217
	word32 s7_218
	word32 s8_219
	word32 s9_220
	word32 s10_221
	word32 s11_222
	word32 t4_223
	word32 ra_54 = scanu_raw_send_cfm(printf(ra, 0x2307F168<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_207, out a0_208, out a1_209, out a2_210, out a3_26, out a4_27, out a5_211, out a7_212, out s2_213, out s3_214, out s4_215, out s5_216, out s6_217, out s7_218, out s8_219, out s9_220, out s10_221, out s11_222, out t4_223), a3_26, a4_27, mstatus, s2, dwLoc10, out a4_51, out a5_52)
	word32 s1_76
	word32 a0_81
	word32 s2_85
	word32 s0_224
	word32 a1_225
	word32 a3_226
	word32 a4_227
	word32 a5_228
	word32 s3_229
	word32 s4_230
	word32 s5_231
	word32 s6_232
	word32 s7_233
	word32 s8_234
	word32 s9_235
	word32 s10_236
	word32 s11_237
	txl_frame_get(ra_54, 0<32>, 256<i32>, a4_51, a5_52, fflags, frm, mstatus, dwArgE8, dwArg0108, dwArg0128, out s0_224, out s1_76, out a0_81, out a1_225, out a3_226, out a4_227, out a5_228, out s2_85, out s3_229, out s4_230, out s5_231, out s6_232, out s7_233, out s8_234, out s9_235, out s10_236, out s11_237)
	branch a0_81 == 0<32> l23063822
l230637D8:
	word32 a4_97
	word32 a2_238
	word32 a3_239
	word32 a5_240
	word32 a6_241
	word32 a7_242
	memcpy(Mem20[a0_81 + 104<i32>:word32] + 332<i32>, s2_85, s1_76, out a2_238, out a3_239, out a4_97, out a5_240, out a6_241, out a7_242)
	Mem111[a0_81 + 48<i32>:byte] = 0xFF<8>
	Mem114[a0_81 + 716<i32>:word32] = 0x23063792<32>
	word32 s0_115 = Mem114[0x230637FE<32>:word32]
	Mem116[s0_115 + 47<i32>:byte] = 0<8>
	Mem117[s0_115 + 94<i32>:byte] = 0<8>
	Mem118[s0_115 + 96<i32>:byte] = 0<8>
	Mem119[s0_115 + 720<i32>:word32] = s0_115
	word32 a5_120 = Mem119[a4_97 + 20<i32>:word32]
	Mem124[a4_97 + (s1_76 + -1<i32>) + 24<i32>:word32] = a5_120
	Mem125[s1_76 + 0x20<32>:word32] = a5_120
	txl_frame_push_force(ra_54, 3<32>, s1_76 + -1<i32>, a5_120, mstatus, dwArg18, dwArg78, dwArgA8, dwArgDC)
l23063822:
	return
scanu_raw_send_req_handler_exit:


void scanu_join_req_handler(word32 ra, word32 s0, word32 a1, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg38, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..15] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scanu_join_req_handler_entry:
l23063830:
	Mem13[CONVERT(Mem5[a1 + 334<i32>:byte], byte, word32) + 0x4201C6B0<32>:word32] = 0<32>
	Mem18[0x4201CCC4<32>:word16] = SLICE(a3, word16, 0)
	Mem19[0x4201CCC6<32>:word16] = 1<16>
	word32 a4_20 = Mem19[a1 + 320<i32>:int32]
	Mem21[a1:word32] = 0x4201CB5C<32>
	Mem22[0x4201CCC8<32>:word32] = a4_20
	Mem24[0x4201CCCC<32>:word16] = SLICE(CONVERT(Mem22[a1 + 324<i32>:uint16], uint16, word32), word16, 0)
	branch (CONVERT(Mem24[a1 + 320<i32>:byte], byte, word32) & 1<32>) == 0<32> l23063892
l23063892:
	scanu_start(ra, s0, mstatus, dwArg04, dwArg08, dwArg38, dwArg0118, dwArg0158)
	return
scanu_join_req_handler_exit:
l2306387A:
	assert_err()


void scanu_start_req_handler(word32 ra, word32 s0, word32 a1, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg38, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..15] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scanu_start_req_handler_entry:
l2306389E:
	Mem9[0x4201CCC4<32>:word16] = SLICE(a3, word16, 0)
	Mem10[0x4201CCC6<32>:word16] = 0<16>
	word32 a4_12 = Mem10[a1 + 320<i32>:int32]
	Mem13[a1:word32] = 0x4201CB5C<32>
	Mem14[0x4201CCC8<32>:word32] = a4_12
	Mem16[0x4201CCCC<32>:word16] = SLICE(CONVERT(Mem14[a1 + 324<i32>:uint16], uint16, word32), word16, 0)
	scanu_start(ra, s0, mstatus, dwArg04, dwArg08, dwArg38, dwArg0118, dwArg0158)
	return
scanu_start_req_handler_exit:


void rxu_mgt_ind_handler(word32 ra, word32 a1, word32 s3, word32 s6, word32 dwArg08, word32 dwArg7C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] ra:[0..31] s3:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +007C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rxu_mgt_ind_handler_entry:
l230638D0:
l230638D2_thunk_scanu_frame_handler:
	scanu_frame_handler(ra, a1, s3, s6, dwArg08, dwArg7C)
	return
rxu_mgt_ind_handler_exit:


void scan_done_ind_handler(word32 ra, word32 mstatus, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scan_done_ind_handler_entry:
l230638D6:
	word32 a4_8 = CONVERT(Mem6[0x4201CCC7<32>:byte], byte, word32)
	Mem10[0x4201CCC7<32>:byte] = SLICE(a4_8 + 1<32>, byte, 0)
	scanu_scan_next(ra, a4_8 + 1<32>, mstatus, dwArg38)
	return
scan_done_ind_handler_exit:


void scan_start_cfm_handler(word32 ra, word32 a1, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
scan_start_cfm_handler_entry:
l230638F8:
	branch CONVERT(Mem0[a1:byte], byte, word32) == 0<32> l2306390E
l2306390E:
	return
l230638FE:
	scanu_confirm(ra, a4, mstatus)
	return
scan_start_cfm_handler_exit:


void me_set_ps_disable_cfm_handler(word32 mstatus, word32 dwArg00, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] Stack +0000:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t1 t3 tp
// Preserved: sp
me_set_ps_disable_cfm_handler_entry:
l23063912:
	word32 a0_7
	word32 s2_113
	word32 a4_112
	word32 a2_111
	ke_state_get(6<32>, dwArg28, out a0_7, out a2_111, out a4_112, out s2_113)
	branch a0_7 == 4<32> l2306394E
l23063922:
	word32 a0_16
	word32 s2_118
	word32 a4_117
	word32 a2_116
	ke_state_get(6<32>, dwArg28, out a0_16, out a2_116, out a4_117, out s2_118)
	branch a0_16 == 0<32> l2306394E
l2306392A:
	word32 a0_24
	word32 a2_119
	word32 a4_120
	word32 s2_121
	ke_state_get(6<32>, dwArg28, out a0_24, out a2_119, out a4_120, out s2_121)
	branch a0_24 == 8<32> l2306394E
l2306394E:
	word32 a0_40
	word32 a4_42
	word32 s2_115
	word32 a2_114
	ke_state_get(6<32>, dwArg28, out a0_40, out a2_114, out a4_42, out s2_115)
	branch a0_40 != 4<32> l2306395E
l2306395A:
	sm_send_next_bss_param(a4_42, 4<32>, mstatus, dwArg00)
l2306395E:
	return
me_set_ps_disable_cfm_handler_exit:
l23063936:
	assert_err()


void mm_bss_param_setting_handler(word32 mstatus, word32 dwArg00, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] Stack +0000:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t1 t3 tp
// Preserved: sp
mm_bss_param_setting_handler_entry:
l23063966:
	word32 a0_7
	word32 a4_9
	word32 a2_44
	word32 s2_45
	ke_state_get(6<32>, dwArg28, out a0_7, out a2_44, out a4_9, out s2_45)
	branch a0_7 == 4<32> l2306398E
l2306398E:
	sm_send_next_bss_param(a4_9, 4<32>, mstatus, dwArg00)
	return
mm_bss_param_setting_handler_exit:
l23063976:
	assert_err()


void sm_rsp_timeout_ind_handler(word32 ra, word32 s0, word32 s5, word32 s6, word32 mstatus, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] s6:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sm_rsp_timeout_ind_handler_entry:
l2306399A:
	word32 a0_7
	word32 a2_137
	word32 a4_138
	word32 s2_139
	ke_state_get(6<32>, dwArg28, out a0_7, out a2_137, out a4_138, out s2_139)
	branch a0_7 != 5<32> l230639B8
l230639B8:
	word32 a0_16
	word32 a2_140
	word32 a4_141
	word32 s2_142
	ke_state_get(6<32>, dwArg28, out a0_16, out a2_140, out a4_141, out s2_142)
	branch a0_16 == 6<32> l230639AA
l230639C4:
l230639AA:
	word32 a4_143
	word32 s2_144
	word32 s3_145
	word32 s4_146
	word32 s10_147
	sm_connect_ind(ra, s0, s5, s6, mstatus, dwLoc08, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArg0118, out a4_143, out s2_144, out s3_145, out s4_146, out s10_147)
l230639B0:
	return
sm_rsp_timeout_ind_handler_exit:


void scanu_start_cfm_handler(word32 ra, word32 a3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArg0108, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scanu_start_cfm_handler_entry:
l230639C6:
	word32 a0_9
	word32 a2_175
	word32 a4_176
	word32 s2_177
	word32 s1_13 = ke_state_get(6<32>, dwArg18, out a0_9, out a2_175, out a4_176, out s2_177)
	branch a0_9 == 1<32> l230639F2
l230639F2:
	word32 a0_25
	word32 a1_26
	word32 a4_29
	word32 s5_41
	word32 s6_42
	word32 ra_33 = sm_get_bss_params(ra, s1_13, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a3, dwArg10, dwArg14, dwArg5C, dwArgC8, dwArg0178, out a0_25, out a1_26, out a4_29, out s5_41, out s6_42)
	branch a0_25 == 0<32> l23063A10
l230639FE:
	branch a1_26 == 0<32> l23063A10
l23063A10:
	word32 a4_178
	word32 s2_179
	word32 s3_180
	word32 s4_181
	word32 s10_182
	sm_connect_ind(ra_33, dwArg24, s5_41, s6_42, mstatus, dwLoc18, dwArg20, dwArg24, dwArg48, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArg0108, out a4_178, out s2_179, out s3_180, out s4_181, out s10_182)
l23063A02:
	word32 s4_183
	sm_join_bss(ra_33, a0_25, a4_29, mstatus, out s4_183)
l23063A08:
	return
scanu_start_cfm_handler_exit:
l230639DA:
	assert_err()


void mm_connection_loss_ind_handler(word32 ra, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: s0 sp
mm_connection_loss_ind_handler_entry:
l23063A18:
	word32 a0_15
	word32 s2_20
	word32 a2_137
	word32 a4_138
	ke_state_get(6<32>, dwArg28, out a0_15, out a2_137, out a4_138, out s2_20)
	branch a0_15 != 0<32> l23063A60
l23063A30:
	branch CONVERT(Mem11[s2_20 + 0x4201C326<32>:byte], byte, word32) != 0<32> l23063A60
l23063A4A:
	branch CONVERT(Mem11[s2_20 + 0x4201C328<32>:byte], byte, word32) == 0<32> l23063A60
l23063A50:
	word32 a4_36
	word32 s1_139
	word32 a0_140
	word32 a1_141
	word32 a2_142
	word32 a5_143
	word32 s2_144
	word32 s3_145
	word32 s4_146
	ke_state_set(6<32>, 8<32>, mstatus, out s1_139, out a0_140, out a1_141, out a2_142, out a4_36, out a5_143, out s2_144, out s3_145, out s4_146)
	word32 a2_147
	word32 a4_148
	word32 s4_149
	sm_disconnect_process(ra, a4_36, mstatus, dwLoc08, dwArg00, dwArg08, dwArg18, dwArg28, dwArg68, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArg0138, out a2_147, out a4_148, out s4_149)
l23063A60:
	0<32> = dwArg38
	return
mm_connection_loss_ind_handler_exit:


void scanu_join_cfm_handler(word32 ra, word32 s3, word32 s4, word32 s5, word32 s6, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[24..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scanu_join_cfm_handler_entry:
l23063A6E:
	word32 s3_12 = Mem11[0x4201CCF0<32>:int32]
	word32 a0_19
	word32 s2_409
	word32 a2_407
	word32 a4_408
	ke_state_get(6<32>, dwArg08, out a0_19, out a2_407, out a4_408, out s2_409)
	byte bLoc21_309 = SLICE(s4, byte, 24)
	branch a0_19 == 2<32> l23063AAC
l23063AAC:
	word32 s4_33 = CONVERT(Mem18[s3_12 + 61<i32>:byte], byte, word32)
	branch Mem18[s4_33 + 0x4201C6B0<32>:int32] >= 0<32> l23063B9A
l23063B9A:
	word32 a4_41 = CONVERT(Mem18[0x4201CD00<32>:byte], byte, word32)
	branch a4_41 == 0<32> l23063BB2
l23063BB2:
	word32 a4_447
	word32 s2_448
	word32 s3_449
	word32 s4_450
	word32 s10_451
	sm_connect_ind(ra, 0x4201CCF0<32>, s5, s6, mstatus, dwLoc28, dwArg10, dwArg14, dwArg38, s3, dwArg68, dwArg78, dwArg88, dwArg98, dwArgF8, out a4_447, out s2_448, out s3_449, out s4_450, out s10_451)
l23063BA0:
	word32 s4_452
	sm_join_bss(ra, s4_33 + 0x4201C648<32>, a4_41, mstatus, out s4_452)
l23063AD0:
	word32 s2_133
	word32 s3_134
	word32 s4_135
	word32 a0_102
	word32 a4_106
	word32 s5_114
	word32 s6_115
	word32 s0_109 = sm_add_chan_ctx(fp + -33<i32>, dwArg58, out a0_102, out a4_106, out s5_114, out s6_115)
	branch a0_102 != 0<32> l23063B92
l23063B92:
	word32 s10_411
	word32 a4_410
	sm_connect_ind(ra, s0_109, s5_114, s6_115, mstatus, dwLoc28, dwArg10, dwArg14, dwArg38, s3, dwArg68, dwArg78, dwArg88, dwArg98, dwArgF8, out a4_410, out s2_133, out s3_134, out s4_135, out s10_411)
l23063ADA:
	word32 a3_155
	word32 s2_162
	word32 s3_163
	word32 s1_181
	word32 s3_183
	word32 s2_423
	word32 s4_424
	word32 s8_421
	word32 a4_422
	word32 a6_419
	word32 s4_420
	word32 a4_417
	word32 a5_418
	word32 a1_415
	word32 a2_416
	word32 s1_413
	word32 a0_414
	word32 s0_412
	word32 s0_180 = chan_ctxt_link(ke_msg_alloc(ra, 0xA<32>, 0<32>, 32<i32>, a4_106, mstatus, dwLoc18, out s0_412, out s1_413, out a0_414, out a1_415, out a2_416, out a3_155, out a4_417, out a5_418, out a6_419, out s2_162, out s3_163, out s4_420, out s8_421), CONVERT(Mem18[s3_163 + 61<i32>:byte], byte, word32), CONVERT(bLoc21_309, byte, word32), a3_155, s2_162, mstatus, dwArg98, dwArgA8, dwArgB8, out s1_181, out a4_422, out s2_423, out s3_183, out s4_424)
	Mem190[s0_180 + 17<i32>:byte] = SLICE(CONVERT(Mem18[s3_183 + 61<i32>:byte], byte, word32), byte, 0)
	word32 a3_425
	word32 a4_426
	word32 a5_427
	word32 a6_428
	word32 a7_429
	word32 a2_196
	memcpy(s0_180 + 10<i32>, s1_181 + 888<i32>, 6<32>, out a2_196, out a3_425, out a4_426, out a5_427, out a6_428, out a7_429)
	Mem205[s0_180 + 18<i32>:byte] = 0<8>
	branch (Mem205[s1_181 + 992<i32>:int32] & 2<32>) == 0<32> l23063B4A
l23063B18:
	word32 a5_208 = CONVERT(Mem205[s1_181 + 858<i32>:byte], byte, word32)
	a2_196 = 2<32>
	word32 a4_210 = 1<32>
	word32 a5_213 = a5_208 >> 2<i32> & 7<32>
	branch a5_213 <= 2<32> l23063B36
l23063B2C:
	a4_210 = 1<32> << a5_213 + 0xFFFFFFFD<32> & 255<i32>
l23063B36:
	Mem219[s0_180 + 16<i32>:byte] = SLICE(a4_210, byte, 0)
	Mem225[s0_180 + 8<i32>:word16] = SLICE((1<32> << (a5_208 & 3<i32>) + 13<i32>) + 0xFFFFFFFF<32>, word16, 0)
l23063B4A:
	Mem228[s0_180 + 4<i32>:word32] = 0<32>
	word32 s1_430
	word32 a0_431
	word32 a1_432
	word32 a2_433
	word32 a3_434
	word32 a4_435
	word32 a5_436
	word32 s2_437
	word32 s3_438
	word32 s4_439
	word32 s8_440
	ke_msg_send(s0_180, a2_196, mstatus, out s1_430, out a0_431, out a1_432, out a2_433, out a3_434, out a4_435, out a5_436, out s2_437, out s3_438, out s4_439, out s8_440)
	word32 s1_441
	word32 a0_442
	word32 a1_443
	word32 a2_444
	word32 a4_445
	word32 a5_446
	ke_state_set(6<32>, 3<32>, mstatus, out s1_441, out a0_442, out a1_443, out a2_444, out a4_445, out a5_446, out s2_133, out s3_134, out s4_135)
l23063B5C:
	word32 a5_272 = s4_135 + 1496<i32> + s2_133
	Mem273[a5_272 + 1476<i32>:word32] = Mem269[s3_134 + 48<i32>:int32]
	branch (Mem273[s3_134 + 48<i32>:int32] & 4<32>) == 0<32> l23063B80
l23063B76:
	Mem278[a5_272 + 992<i32>:word32] = Mem273[a5_272 + 992<i32>:int32] & 0xFFFFFFF9<32>
l23063B80:
	0<32> = dwArg0128
	return
scanu_join_cfm_handler_exit:
l23063A94:
	assert_err()


void sm_connect_req_handler(word32 ra, word32 a3, word32 s2, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sm_connect_req_handler_entry:
l23063BBA:
	word32 a0_30
	word32 a4_32
	word32 a2_605
	word32 s2_606
	ke_state_get(6<32>, dwArg08, out a0_30, out a2_605, out a4_32, out s2_606)
	branch a0_30 == 8<32> l23063CF8
l23063BE8:
	word32 a5_103
	word32 a0_45
	word32 s0_53
	word32 s3_56
	word32 s1_607
	word32 a1_608
	word32 a2_609
	word32 a3_610
	word32 a4_611
	word32 a5_612
	word32 a6_613
	word32 s2_614
	word32 s4_615
	word32 s8_616
	word32 ra_52 = ke_msg_alloc(ra, 0x1FFF801<32>, a3, 1<32>, a4_32, mstatus, dwLoc18, out s0_53, out s1_607, out a0_45, out a1_608, out a2_609, out a3_610, out a4_611, out a5_612, out a6_613, out s2_614, out s3_56, out s4_615, out s8_616)
	word32 a0_65
	word32 a4_617
	word32 s2_618
	word32 a2_238
	ke_state_get(6<32>, dwArg08, out a0_65, out a2_238, out a4_617, out s2_618)
	word32 s4_249 = a0_45
	branch a0_65 != 0<32> l23063D9C
l23063D9C:
	a5_103 = 8<32>
l23063C04:
	word32 a3_78 = CONVERT(Mem28[s0_53 + 59<i32>:byte], byte, word32)
	word32 a4_136 = CONVERT(Mem28[s3_56 + 0x4201C326<32>:byte], byte, word32)
	branch a4_136 != 0<32> l23063C2C
l23063C24:
	a4_136 = CONVERT(Mem28[s3_56 + 0x4201C328<32>:byte], byte, word32)
	branch a4_136 == 0<32> l23063D0E
l23063D0E:
	a4_136 = 2<32>
	branch a3_78 == 2<32> l23063C32
l23063D14:
	a4_136 = CONVERT(Mem28[s3_56 + 0x4201C330<32>:byte], byte, word32)
	branch a4_136 == 255<i32> l23063D38
l23063D38:
	branch Mem28[s3_56 + 0x4201C310<32>:int32] == 0<32> l23063C32
l23063D4A:
	assert_err()
l23063D20:
	assert_err()
l23063C2C:
	branch a3_78 != 2<32> l23063DA2
l23063DA2:
	a5_103 = 9<32>
l23063C32:
	word32 a5_107 = Mem28[0x4201CCF0<32>:int32]
	branch a5_107 == 0<32> l23063C58
l23063C58:
	Mem117[s0_53:word32] = Mem28[a5_107 + 4<i32>:word32]
	branch a5_107 == 0<32> l23063C76
l23063C76:
	word32 s2_635
	word32 s8_638
	word32 s4_637
	word32 a0_140
	word32 a3_143
	word32 s0_148
	word32 s1_149
	word32 s3_636
	word32 a5_633
	word32 a6_634
	word32 a2_631
	word32 a4_632
	word32 a1_630
	word32 ra_147 = ke_msg_alloc(ra_52, 0x1FFF802<32>, a3, 852<i32>, a4_136, mstatus, dwLoc18, out s0_148, out s1_149, out a0_140, out a1_630, out a2_631, out a3_143, out a4_632, out a5_633, out a6_634, out s2_635, out s3_636, out s4_637, out s8_638)
	Mem159[a0_140 + 4<i32>:word32] = s1_149
	Mem163[0x13<32>:word32] = s1_149
	Mem164[s1_149 + 17<i32>:byte] = 0<8>
	word32 a4_640
	word32 a2_639
	word32 a5_641
	word32 a7_642
	word32 s4_644
	word32 s3_643
	word32 s5_645
	word32 s6_646
	word32 a3_170
	word32 s1_174
	word32 s2_177
	word32 s8_648
	word32 s7_647
	word32 s9_649
	word32 s10_650
	word32 s11_651
	word32 t4_652
	word32 a0_165
	word32 a1_168
	word32 ra_173 = printf(ra_147, 0x2307F3BC<32>, a3_143, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_174, out a0_165, out a1_168, out a2_639, out a3_170, out a4_640, out a5_641, out a7_642, out s2_177, out s3_643, out s4_644, out s5_645, out s6_646, out s7_647, out s8_648, out s9_649, out s10_650, out s11_651, out t4_652)
	branch CONVERT(Mem164[s0_148 + 59<i32>:byte], byte, word32) != 2<32> l23063D64
l23063D64:
	word32 a4_189 = CONVERT(Mem164[s0_148 + 40<i32>:uint16], uint16, word32)
	branch a4_189 == 0xFFFFFFF<32> l23063D8C
l23063D8C:
	word32 s5_668
	word32 s6_669
	ra_173 = sm_get_bss_params(ra_173, s1_174, fp + -40<i32>, fp + -36<i32>, a3_170, dwArg00, dwArg04, dwArg4C, dwArgB8, dwArg0168, out a0_165, out a1_168, out a4_189, out s5_668, out s6_669)
l23063D70:
l23063D7C:
	branch a0_165 == 0<32> l23063D96
l23063D82:
	branch a1_168 == 0<32> l23063D96
l23063D96:
	a2_238 = sm_scan_bss(ra_173, a4_189, mstatus, dwArgF8, out s4_249)
l23063D84:
	a2_238 = sm_join_bss(ra_173, a0_165, a4_189, mstatus, out s4_249)
l23063CAC:
	word32 a1_283 = CONVERT(Mem164[s0_148 + 61<i32>:byte], byte, word32)
	Mem285[s1_174 + 17<i32>:byte] = 1<8>
	word32 a2_653
	word32 a3_654
	word32 a4_655
	word32 a5_656
	word32 a6_657
	word32 a7_658
	memcpy(0x4201CD08<32>, a1_283 + 1552<i32> + s2_177, 6<32>, out a2_653, out a3_654, out a4_655, out a5_656, out a6_657, out a7_658)
	word32 a4_310
	word32 s1_659
	word32 a0_660
	word32 a1_661
	word32 a2_662
	word32 a5_663
	word32 s2_664
	word32 s3_665
	word32 s4_666
	ke_state_set(6<32>, 8<32>, mstatus, out s1_659, out a0_660, out a1_661, out a2_662, out a4_310, out a5_663, out s2_664, out s3_665, out s4_666)
	word32 a4_667
	sm_disconnect_process(ra_173, a4_310, mstatus, s6, s2, dwLoc18, dwLoc08, dwArg08, dwArg48, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArg0118, out a2_238, out a4_667, out s4_249)
l23063CEA:
	a5_103 = 0<32>
l23063CEE:
	Mem356[s4_249:byte] = SLICE(a5_103, byte, 0)
	word32 s8_629
	word32 s3_627
	word32 s4_628
	word32 a5_625
	word32 s2_626
	word32 a2_622
	word32 a3_623
	word32 a4_624
	word32 s1_619
	word32 a0_620
	word32 a1_621
	ke_msg_send(s4_249, a2_238, mstatus, out s1_619, out a0_620, out a1_621, out a2_622, out a3_623, out a4_624, out a5_625, out s2_626, out s3_627, out s4_628, out s8_629)
l23063CF8:
	0<32> = dwArg0128
	return
sm_connect_req_handler_exit:
l23063C5E:
	assert_err()
l23063C40:
	assert_err()


void rxu_mgt_ind_handler(word32 ra, word32 s0, word32 a1, word32 a3, word32 s5, word32 s6, word32 s7, word32 s9, word32 s10, word32 s11, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rxu_mgt_ind_handler_entry:
l23063DA8:
	word32 a5_5 = CONVERT(Mem0[a1 + 2<i32>:uint16], uint16, word32)
	branch (a5_5 & 252<i32>) != 176<i32> l23063DDC
l23063DDC:
	branch (a5_5 & 252<i32>) != 0x10<32> l23063DF6
l23063DF6:
	branch (a5_5 & 252<i32>) == 48<i32> l23063DE2
l23063DFE:
	branch (a5_5 & 252<i32>) == 192<i32> l23063E0E
l23063E06:
	branch (a5_5 & 252<i32>) != 160<i32> l23063DD2
l23063E0E:
	word32 a0_21
	word32 s2_26
	word32 a4_354
	word32 a2_353
	ke_state_get(6<32>, dwArg28, out a0_21, out a2_353, out a4_354, out s2_26)
	branch a0_21 != 0<32> l23063DD2
l23063E16:
l23063E1E_thunk_sm_deauth_handler:
	sm_deauth_handler(ra, a3, s2_26, s5, s6, mstatus, dwArg08, dwArg18, dwArg20, dwArg24, dwArg48, dwArg50, dwArg54, dwArg58, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArg0108, dwArg0128)
	return
l23063DE2:
	word32 a0_73
	word32 s2_352
	word32 a4_351
	word32 a2_350
	word32 s1_77 = ke_state_get(6<32>, dwArg28, out a0_73, out a2_350, out a4_351, out s2_352)
	branch a0_73 != 6<32> l23063DD2
l23063DEE:
	sm_assoc_rsp_handler(ra, a1, s1_77, a1, s7, s9, fflags, frm, mstatus, dwLoc10, s0, dwArg18, dwArg20, dwArg24, dwArg38, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0188)
l23063DC0:
	word32 a0_122
	word32 s2_349
	word32 a4_348
	word32 a2_347
	word32 s1_126 = ke_state_get(6<32>, dwArg28, out a0_122, out a2_347, out a4_348, out s2_349)
	branch a0_122 != 5<32> l23063DD2
l23063DCC:
	sm_auth_handler(ra, a1, s1_126, a1, s5, s6, s7, s9, s10, s11, fflags, frm, mstatus, dwLoc10, s0, dwLoc08, dwArg08, dwArg18, dwArg20, dwArg24, dwArg30, dwArg34, dwArg48, dwArg50, dwArg54, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0188)
l23063DD2:
	return
rxu_mgt_ind_handler_exit:


void mm_set_vif_state_cfm_handler(word32 ra, word32 s2, word32 s5, word32 s6, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mm_set_vif_state_cfm_handler_entry:
l23063E22:
	word32 a0_17
	word32 a4_19
	word32 s2_283
	word32 a2_282
	ke_state_get(6<32>, dwArg18, out a0_17, out a2_282, out a4_19, out s2_283)
	branch a0_17 != 7<32> l23063F02
l23063E3C:
	word32 a0_40
	word32 a2_42
	word32 s1_49
	word32 a4_287
	word32 a5_288
	word32 a6_289
	word32 a3_286
	word32 a1_285
	word32 s0_284
	word32 s2_290
	word32 s3_291
	word32 s4_292
	word32 s8_293
	word32 ra_108 = ke_msg_alloc(ra, 75<i32>, 0<32>, 6<32>, a4_19, mstatus, dwLoc08, out s0_284, out s1_49, out a0_40, out a1_285, out a2_42, out a3_286, out a4_287, out a5_288, out a6_289, out s2_290, out s3_291, out s4_292, out s8_293)
	Mem59[a0_40 + 4<i32>:byte] = SLICE(CONVERT(Mem16[s1_49 + 58<i32>:byte], byte, word32), byte, 0)
	Mem61[a0_40 + 2<i32>:word16] = SLICE(CONVERT(Mem59[s1_49 + 56<i32>:uint16], uint16, word32), word16, 0)
	Mem63[a0_40:byte] = SLICE(CONVERT(Mem61[s1_49 + 61<i32>:byte], byte, word32), byte, 0)
	word32 s1_72
	word32 s3_74
	word32 s4_75
	word32 a0_294
	word32 a1_295
	word32 a2_296
	word32 a3_297
	word32 a4_298
	word32 a5_299
	word32 s8_300
	word32 s2_131
	word32 s0_129 = ke_msg_send(a0_40, a2_42, mstatus, out s1_72, out a0_294, out a1_295, out a2_296, out a3_297, out a4_298, out a5_299, out s2_131, out s3_74, out s4_75, out s8_300)
	word32 a5_86 = CONVERT((Mem63[s3_74 + 1476<i32>:int32] & 1<32>) <u 1<i32>, bool, word32)
	Mem89[s4_75 + 0x4201A9E9<32>:byte] = SLICE(a5_86 + 1<32>, byte, 0)
	word32 a3_90 = CONVERT(Mem89[s1_72 + 52<i32>:uint16], uint16, word32)
	Mem94[s4_75 + 0x4201A9F0<32>:word16] = SLICE(a3_90 >>u 8<i32> | a3_90 << 8<u32>, word16, 0)
	branch a5_86 != 0xFFFFFFFF<32> l23063EE4
l23063EC4:
	word32 a0_101
	word32 a2_103
	word32 s1_110
	word32 s0_301
	word32 a1_302
	word32 a3_303
	word32 a4_304
	word32 a5_305
	word32 a6_306
	word32 s2_307
	word32 s3_308
	word32 s4_309
	word32 s8_310
	ra_108 = ke_msg_alloc(ra_108, 0x1000413<32>, 5<32>, 2<32>, 2<32>, mstatus, dwLoc08, out s0_301, out s1_110, out a0_101, out a1_302, out a2_103, out a3_303, out a4_304, out a5_305, out a6_306, out s2_307, out s3_308, out s4_309, out s8_310)
	Mem119[a0_101:byte] = 0<8>
	Mem121[a0_101 + 1<i32>:byte] = SLICE(CONVERT(Mem119[s1_110 + 61<i32>:byte], byte, word32), byte, 0)
	word32 s1_311
	word32 a0_312
	word32 a1_313
	word32 a2_314
	word32 a3_315
	word32 a4_316
	word32 a5_317
	word32 s3_318
	word32 s4_319
	word32 s8_320
	s0_129 = ke_msg_send(a0_101, a2_103, mstatus, out s1_311, out a0_312, out a1_313, out a2_314, out a3_315, out a4_316, out a5_317, out s2_131, out s3_318, out s4_319, out s8_320)
l23063EE4:
	word32 s0_144 = s0_129 + (s2_131 + 1496<i32>)
	branch (Mem145[s0_144 + 1000<i32>:int32] & 0x12FFF800<32>) != 0<32> l23063F02
l23063EFC:
	word32 a4_321
	word32 s2_322
	word32 s3_323
	word32 s4_324
	word32 s10_325
	sm_connect_ind(ra_108, s0_144, s5, s6, mstatus, s2, dwArg20, dwArg24, dwArg48, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArg0108, out a4_321, out s2_322, out s3_323, out s4_324, out s10_325)
l23063F02:
	return
mm_set_vif_state_cfm_handler_exit:


void me_set_active_cfm_handler(word32 ra, word32 a3, word32 s5, word32 s7, word32 s9, word32 s10, word32 s11, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
me_set_active_cfm_handler_entry:
l23063F14:
	word32 a0_7
	word32 s2_301
	word32 a4_300
	word32 a2_299
	ke_state_get(6<32>, dwArg18, out a0_7, out a2_299, out a4_300, out s2_301)
	branch a0_7 == 4<32> l23063F48
l23063F24:
	word32 a0_16
	word32 a2_304
	word32 a4_305
	word32 s2_306
	ke_state_get(6<32>, dwArg18, out a0_16, out a2_304, out a4_305, out s2_306)
	branch a0_16 == 8<32> l23063F48
l23063F48:
	word32 a0_32
	word32 s2_37
	word32 a4_303
	word32 a2_302
	word32 s1_36 = ke_state_get(6<32>, dwArg18, out a0_32, out a2_302, out a4_303, out s2_37)
	word32 a5_42 = CONVERT(Mem6[0x4201CD01<32>:byte], byte, word32)
	branch a0_32 != 8<32> l23063F8A
l23063F8A:
	branch a5_42 == 0<32> l23063F92
l23063F92:
	sm_auth_send(ra, 1<32>, 0<32>, s5, fflags, frm, mstatus, dwLoc18, dwArg20, dwArg24, dwArg48, dwArg58, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC4, dwArgD8, dwArgF8, dwArg0108)
l23063F8C:
	sm_assoc_req_send(ra, s1_36, 8<32>, s2_37, s7, s9, s10, s11, fflags, frm, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg48, dwArg58, dwArg68, dwArg8C, dwArgA8, dwArgC8, dwArgE8, dwArg0178)
l23063F60:
	branch a5_42 == 0<32> l23063F80
l23063F80:
	word32 s1_307
	word32 a0_308
	word32 a1_309
	word32 a2_310
	word32 a4_311
	word32 a5_312
	word32 s2_313
	word32 s3_314
	word32 s4_315
	ke_state_set(6<32>, 0<32>, mstatus, out s1_307, out a0_308, out a1_309, out a2_310, out a4_311, out a5_312, out s2_313, out s3_314, out s4_315)
l23063F62:
	word32 a0_139
	word32 a4_143
	word32 a1_316
	word32 s5_317
	word32 s6_318
	word32 s4_319
	sm_join_bss(sm_get_bss_params(ra, s1_36, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a3, dwArg10, dwArg14, dwArg5C, dwArgC8, dwArg0178, out a0_139, out a1_316, out a4_143, out s5_317, out s6_318), a0_139, a4_143, mstatus, out s4_319)
l23063F78:
	return
me_set_active_cfm_handler_exit:
l23063F30:
	assert_err()


void mm_sta_add_cfm_handler(word32 ra, word32 a1, word32 s2, word32 s5, word32 s6, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mm_sta_add_cfm_handler_entry:
l23063F9C:
	word32 a0_21
	word32 a2_265
	word32 a4_266
	word32 s2_267
	ke_state_get(6<32>, dwArg18, out a0_21, out a2_265, out a4_266, out s2_267)
	branch a0_21 == 3<32> l23063FD2
l23063FD2:
	branch CONVERT(Mem18[a1:byte], byte, word32) != 0<32> l2306408A
l2306408A:
	word32 a4_268
	word32 s3_270
	word32 s2_269
	word32 s4_271
	word32 s10_272
	sm_connect_ind(ra, a1, s5, s6, mstatus, s2, dwArg20, dwArg24, dwArg48, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArg0108, out a4_268, out s2_269, out s3_270, out s4_271, out s10_272)
l23063FD8:
	word32 s4_66 = CONVERT(Mem18[a1 + 1<i32>:byte], byte, word32)
	word32 s1_77 = CONVERT(Mem18[s4_66 + 0x4201A9D2<32>:byte], byte, word32)
	word32 a2_273
	word32 a3_274
	word32 a4_275
	word32 a5_276
	word32 a6_277
	word32 a7_278
	memcpy(s4_66 + 0x4201AA68<32>, s1_77 + 0x4201C680<32>, 0xD<32>, out a2_273, out a3_274, out a4_275, out a5_276, out a6_277, out a7_278)
	word32 a5_96 = Mem18[s1_77 + 0x4201C6B0<32>:int32]
	word32 a4_140 = a5_96 & 1<i32>
	branch (a5_96 & 1<i32>) == 0<32> l23064030
l23064024:
	word32 a4_98 = Mem18[s4_66 + 0x4201AAA4<32>:int32]
	Mem100[s4_66 + 0x4201AAA4<32>:word32] = a4_98 | 1<i32>
	a4_140 = a4_98 | 1<i32>
l23064030:
	branch (a5_96 & 2<32>) == 0<32> l23064072
l23064034:
	Mem116[s4_66 + 0x4201AAA4<32>:word32] = Mem112[s4_66 + 0x4201AAA4<32>:int32] | 2<i32>
	word32 a2_279
	word32 a3_280
	word32 a4_281
	word32 a5_282
	word32 a6_283
	word32 a7_284
	memcpy(s4_66 + 0x4201AA78<32>, s1_77 + 0x4201C628<32>, 32<i32>, out a2_279, out a3_280, out a4_281, out a5_282, out a6_283, out a7_284)
	me_set_sta_ht_vht_param(s4_66 + 0x4201A9B8<32>, s1_77 + 0x4201C628<32>, out a4_140)
l23064072:
	sm_set_bss_param(ra, a4_140, s4_66 + 0x4201A9B8<32>, mstatus, dwArgD8, dwArg0108)
l23064076:
	return
mm_sta_add_cfm_handler_exit:
l23063FBA:
	assert_err()


void sm_disconnect_req_handler(word32 ra, word32 a1, word32 fflags, word32 frm, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
sm_disconnect_req_handler_entry:
l23064092:
	word32 a0_11
	word32 a2_145
	word32 a4_146
	word32 s2_147
	word32 s1_15 = ke_state_get(6<32>, dwArg28, out a0_11, out a2_145, out a4_146, out s2_147)
	branch a0_11 != 0<32> l230640C0
l230640A4:
	word32 a4_35
	word32 s0_148
	word32 s1_149
	word32 a0_150
	word32 a2_151
	word32 a3_152
	word32 s2_153
	word32 s3_154
	word32 s4_155
	word32 s8_156
	ke_msg_send_basic(sm_disconnect(ra, s1_15, CONVERT(Mem8[a1 + 2<i32>:byte], byte, word32), CONVERT(Mem8[a1:uint16], uint16, word32), fflags, frm, mstatus, dwLoc08, dwArg00, dwArg08, dwArg18, dwArg28, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out a4_35), 0x1FFF804<32>, 0xD<32>, a4_35, mstatus, dwLoc08, dwArg00, out s0_148, out s1_149, out a0_150, out a2_151, out a3_152, out s2_153, out s3_154, out s4_155, out s8_156)
l230640C0:
	return
sm_disconnect_req_handler_exit:


void apm_sta_connect_timeout_ind_handler(word32 ra, word32 s1, word32 a3, word32 a4, word32 mstatus, word32 dwArg28, word32 dwArg88, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: a7 sp t0 t1
apm_sta_connect_timeout_ind_handler_entry:
l230640CA:
	word32 a5_148
	word32 s4_104 = xTaskGetTickCount(out a5_148)
	word32 s1_21 = 0x4201A808<32>
	word32 s0_22 = 0<32>
	word32 s2_105 = 0x7000530<32>
	word32 s3_24 = 0xC<32>
l230640F0:
	word32 a5_27 = Mem15[s1_21 + 424<i32>:int32]
	branch a5_27 == 0<32> l23064104
l230640F6:
	branch s2_105 >= s4_104 - a5_27 l23064104
l230640FE:
	ra = apm_sta_fw_delete(ra, a4, mstatus, dwArg28, s1, out s0_22, out s1_21, out a3, out a4, out s2_105, out s3_24, out s4_104)
l23064104:
	word32 s0_59 = s0_22 + 1<32>
	s0_22 = s0_59 & 255<i32>
	s1_21 = s1_21 + 432<i32>
	branch (s0_59 & 255<i32>) != s3_24 l230640F0
l23064112:
	word32 s3_149
	ke_timer_set(ra, 0x1FFFC0A<32>, 7<32>, 0x4C4B40<32>, a3, a4, mstatus, dwLoc08, dwArg88, dwArgE8, out s3_149)
	return
apm_sta_connect_timeout_ind_handler_exit:


void rxu_mgt_ind_handler(word32 ra, word32 a1, word32 s10, word32 fflags, word32 frm, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rxu_mgt_ind_handler_entry:
l23064138:
	word32 a5_7 = CONVERT(Mem5[a1 + 2<i32>:uint16], uint16, word32)
	branch (a5_7 & 252<i32>) != 64<i32> l2306415A
l2306415A:
	word32 a4_11 = 176<i32>
	branch (a5_7 & 252<i32>) != 176<i32> l23064168
l23064168:
	word32 a1_12 = 0<32>
	branch (a5_7 & 252<i32>) == 0<32> l23064176
l2306416C:
	a4_11 = 32<i32>
	branch (a5_7 & 252<i32>) != 32<i32> l2306417C
l2306417C:
	branch (a5_7 & 252<i32>) != 192<i32> l2306418A
l2306418A:
	branch (a5_7 & 252<i32>) != 160<i32> l23064198
l23064198:
	branch (a5_7 & 252<i32>) != 128<i32> l23064152
l230641A0:
	apm_beacon_handler()
l23064192:
	apm_disassoc_handler(ra, a1, 160<i32>, fflags, frm, mstatus, dwArg18, dwArg28, dwArg58, dwArg64, dwArg78, dwArgA8, dwArgC8, dwArgD4, dwArgDC, dwArgE8, dwArg0108, dwArg0118, dwArg0158)
l23064184:
	apm_deauth_handler(ra, a1, mstatus, dwArg38, dwArg78)
l23064174:
	a1_12 = 1<32>
l23064176:
	apm_assoc_req_handler(ra, a1, a1_12, a4_11, s10, fflags, frm, mstatus, dwArg04, dwArg18, dwArg48, dwArg68, ra, dwArg7C, dwArg88, dwArgA8, dwArgB8, dwArgF8)
l23064162:
	apm_auth_handler(ra, a1, fflags, frm, mstatus, dwArg00, dwArg28, dwArg68, dwArg78, dwArgA8, dwArgC8, dwArgD4, dwArgDC, dwArgE8, dwArg0108, dwArg0118, dwArg0158)
l2306414E:
	apm_probe_req_handler(ra, a1, fflags, frm, mstatus, dwArg28, dwArg78, dwArgA8, dwArgC8, dwArgD4, dwArgDC, dwArgE8, dwArg0108, dwArg0118, dwArg0158)
l23064152:
	return
rxu_mgt_ind_handler_exit:


void apm_sta_add_cfm_handler(word32 ra, word32 s0, word32 s1, word32 a1, word32 a3, word32 fflags, word32 frm, word32 mstatus, word32 dwArg00, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
apm_sta_add_cfm_handler_entry:
l230641A6:
	word32 a4_5 = Mem0[0x4201CADC<32>:int32]
	word32 a0_10 = CONVERT(Mem8[a1:byte], byte, word32)
	branch a4_5 == 0<32> l230641CE
l230641CE:
	word32 a4_129
	apm_sta_add(ra, a4_5, mstatus, dwLoc08, dwArg00, dwArg28, out a4_129)
l230641B8:
	Mem34[a4_5 + 1<i32>:byte] = SLICE(a0_10, byte, 0)
	SendEAPOLMsgUsingBufDesc(ra, s0, s1, Mem34[0x4201CADC<32>:int32], a3, fflags, frm, mstatus, dwLoc08, dwArg14, dwArg18, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0148)
l230641C6:
	return
apm_sta_add_cfm_handler_exit:


void apm_sta_del_req_handler(word32 ra, word32 a3, word32 a4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgB8, word32 dwArgC4, word32 dwArgCC, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
apm_sta_del_req_handler_entry:
l230641D4:
	word32 a0_19
	word32 s1_28
	word32 s8_180
	word32 s4_179
	word32 s3_178
	word32 s2_177
	word32 a6_176
	word32 a5_175
	word32 a4_174
	word32 a3_173
	word32 a1_172
	word32 s0_171
	word32 a2_21
	word32 ra_26 = ke_msg_alloc(ra, 0x1FFFC0C<32>, a3, 3<32>, a4, mstatus, dwArg08, out s0_171, out s1_28, out a0_19, out a1_172, out a2_21, out a3_173, out a4_174, out a5_175, out a6_176, out s2_177, out s3_178, out s4_179, out s8_180)
	word32 a0_38 = CONVERT(Mem16[s1_28:byte], byte, word32)
	word32 s0_37 = a0_19
	branch CONVERT(Mem16[a0_38 + 0x4201C326<32>:byte], byte, word32) != 2<32> l23064232
l2306420E:
	word32 a1_46 = CONVERT(Mem16[s1_28 + 1<i32>:byte], byte, word32)
	branch a1_46 >u 0xC<32> l23064232
l23064232:
	Mem50[a0_19:byte] = 0xFF<8>
l23064218:
	s0_37 = apm_sta_remove(ra_26, a0_38, a1_46, fflags, frm, mstatus, dwArg18, dwArg38, dwArg54, dwArg68, dwArg78, dwArg98, dwArgB8, dwArgC4, dwArgCC, dwArgD8, dwArgF8, dwArg0108, dwArg0148, out a2_21)
	Mem81[s0_37:byte] = 0<8>
l23064220:
	word32 s1_181
	word32 a0_182
	word32 a1_183
	word32 a2_184
	word32 a3_185
	word32 a4_186
	word32 a5_187
	word32 s2_188
	word32 s3_189
	word32 s4_190
	word32 s8_191
	ke_msg_send(s0_37, a2_21, mstatus, out s1_181, out a0_182, out a1_183, out a2_184, out a3_185, out a4_186, out a5_187, out s2_188, out s3_189, out s4_190, out s8_191)
	return
apm_sta_del_req_handler_exit:


void apm_stop_cac_req_handler(word32 ra, word32 a1, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg78, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: sp
apm_stop_cac_req_handler_entry:
l2306423A:
	word32 a4_11 = CONVERT(Mem9[a1:byte], byte, word32)
	word32 s1_13 = a3
	word32 a3_19 = CONVERT(Mem9[a4_11 + 0x4201C326<32>:byte], byte, word32)
	word32 a4_20 = 2<32>
	branch a3_19 != 2<32> l23064298
l23064264:
	branch CONVERT(Mem9[a4_11 + 0x4201C328<32>:byte], byte, word32) != 0<32> l23064298
l2306426A:
	word32 a0_26
	word32 a2_140
	word32 s2_141
	s1_13 = ke_state_get(7<32>, dwArg18, out a0_26, out a2_140, out a4_20, out s2_141)
	branch a0_26 != 0<32> l23064298
l23064278:
	word32 a4_40
	word32 a2_142
	word32 s6_143
	word32 s10_144
	ra = chan_ctxt_unlink(ra, a1, CONVERT(Mem24[a1:byte], byte, word32), a3_19, mstatus, dwLoc20, dwLoc18, dwArg08, dwArg18, dwArg78, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0148, out s1_13, out a2_142, out a4_40, out s6_143, out s10_144)
	__csrrc(mstatus, 8<32>)
	Mem62[(a4_40 & 0xFFFFFFEF<32>) + 4<i32>:word32] = Mem24[a4_40 + 4<i32>:word32]
	__csrrs(mstatus, 8<32>)
	a4_20 = a4_40 & 0xFFFFFFEF<32>
l23064298:
	word32 s0_131
	word32 s1_132
	word32 a0_133
	word32 a2_134
	word32 a3_135
	word32 s2_136
	word32 s3_137
	word32 s4_138
	word32 s8_139
	ke_msg_send_basic(ra, 0x1FFFC07<32>, s1_13, a4_20, mstatus, dwLoc18, dwLoc10, out s0_131, out s1_132, out a0_133, out a2_134, out a3_135, out s2_136, out s3_137, out s4_138, out s8_139)
	return
apm_stop_cac_req_handler_exit:


void apm_conf_max_sta_req_handler(word32 ra, word32 a1, word32 a3, word32 mstatus, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
apm_conf_max_sta_req_handler_entry:
l230642B0:
	word32 a4_10 = CONVERT(Mem5[a1:byte], byte, word32)
	branch a4_10 <=u 0xC<32> l230642C4
l230642C2:
	a4_10 = 0xC<32>
l230642C4:
	Mem19[0x4201CD27<32>:byte] = SLICE(a4_10, byte, 0)
	word32 s1_53
	word32 a0_54
	word32 s0_52
	word32 a2_55
	word32 a3_56
	word32 s2_57
	word32 s3_58
	word32 s4_59
	word32 s8_60
	ke_msg_send_basic(ra, 0x1FFFC0E<32>, a3, a4_10, mstatus, dwLoc08, dwArg00, out s0_52, out s1_53, out a0_54, out a2_55, out a3_56, out s2_57, out s3_58, out s4_59, out s8_60)
	return
apm_conf_max_sta_req_handler_exit:


void apm_start_cac_req_handler(word32 ra, word32 a1, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 tp
// Preserved: sp
apm_start_cac_req_handler_entry:
l230642E0:
	word32 a4_15 = CONVERT(Mem13[a1 + 17<i32>:byte], byte, word32)
	word32 s2_17 = a3
	word32 a3_27 = CONVERT(Mem22[a4_15 + 0x4201C326<32>:byte], byte, word32)
	word32 a4_103 = 2<32>
	branch a3_27 != 2<32> l2306431E
l23064316:
	branch CONVERT(Mem22[a4_15 + 0x4201C328<32>:byte], byte, word32) == 0<32> l2306434E
l2306434E:
	word32 a0_32
	word32 a2_215
	ke_state_get(7<32>, dwArg08, out a0_32, out a2_215, out a4_103, out s2_17)
	branch a0_32 != 0<32> l2306431C
l23064358:
	word32 a0_51
	word32 s3_216
	word32 s5_217
	word32 s6_218
	word32 s0_56 = chan_ctxt_add(fp + -44<i32>, fp + -45<i32>, a4_103, dwArg78, out a0_51, out a4_103, out s2_17, out s3_216, out s5_217, out s6_218)
	branch a0_51 != 0<32> l230643B0
l230643B0:
l2306438A:
	word32 a4_75
	word32 s1_219
	word32 s3_220
	word32 s4_221
	chan_ctxt_link(ra, CONVERT(Mem50[s0_56 + 17<i32>:byte], byte, word32), 0<32>, a3_27, s2_17, mstatus, dwArg98, dwArgA8, dwArgB8, out s1_219, out a4_75, out s2_17, out s3_220, out s4_221)
	__csrrc(mstatus, 8<32>)
	Mem88[(a4_75 | 16<i32>) + 4<i32>:word32] = Mem50[a4_75 + 4<i32>:word32]
	__csrrs(mstatus, 8<32>)
	a4_103 = a4_75 | 16<i32>
l2306431C:
l2306431E:
	word32 a0_109
	word32 a2_111
	word32 s1_118
	word32 s4_202
	word32 s8_203
	word32 s2_200
	word32 s3_201
	word32 a5_198
	word32 a6_199
	word32 a3_196
	word32 a4_197
	word32 s0_194
	word32 a1_195
	ke_msg_alloc(ra, 0x1FFFC05<32>, s2_17, 2<32>, a4_103, mstatus, dwLoc18, out s0_194, out s1_118, out a0_109, out a1_195, out a2_111, out a3_196, out a4_197, out a5_198, out a6_199, out s2_200, out s3_201, out s4_202, out s8_203)
	Mem127[a0_109:byte] = SLICE(s1_118, byte, 0)
	Mem129[a0_109 + 1<i32>:byte] = 0<8>
	word32 s1_204
	word32 a0_205
	word32 a1_206
	word32 a2_207
	word32 a3_208
	word32 a4_209
	word32 a5_210
	word32 s2_211
	word32 s3_212
	word32 s4_213
	word32 s8_214
	ke_msg_send(a0_109, a2_111, mstatus, out s1_204, out a0_205, out a1_206, out a2_207, out a3_208, out a4_209, out a5_210, out s2_211, out s3_212, out s4_213, out s8_214)
	0<32> = dwArg0128
	return
apm_start_cac_req_handler_exit:


void me_set_ps_disable_cfm_handler(word32 mstatus, word32 dwArg00, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] Stack +0000:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t1 t3 tp
// Preserved: sp
me_set_ps_disable_cfm_handler_entry:
l230643B4:
	word32 a0_7
	word32 s2_104
	word32 a4_103
	word32 a2_102
	ke_state_get(7<32>, dwArg28, out a0_7, out a2_102, out a4_103, out s2_104)
	branch a0_7 == 1<32> l230643E4
l230643C4:
	word32 a0_16
	word32 s2_109
	word32 a4_108
	word32 a2_107
	ke_state_get(7<32>, dwArg28, out a0_16, out a2_107, out a4_108, out s2_109)
	branch a0_16 == 0<32> l230643E4
l230643E4:
	word32 a0_31
	word32 a4_33
	word32 s2_106
	word32 a2_105
	ke_state_get(7<32>, dwArg28, out a0_31, out a2_105, out a4_33, out s2_106)
	branch a0_31 != 1<32> l230643F4
l230643F0:
	apm_send_next_bss_param(a4_33, 1<32>, mstatus, dwArg00)
l230643F4:
	return
me_set_ps_disable_cfm_handler_exit:
l230643CC:
	assert_err()


void mm_bss_param_setting_handler(word32 mstatus, word32 dwArg00, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] Stack +0000:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t1 t3 tp
// Preserved: sp
mm_bss_param_setting_handler_entry:
l230643FC:
	word32 a0_7
	word32 a4_9
	word32 a2_44
	word32 s2_45
	ke_state_get(7<32>, dwArg28, out a0_7, out a2_44, out a4_9, out s2_45)
	branch a0_7 == 1<32> l23064424
l23064424:
	apm_send_next_bss_param(a4_9, 1<32>, mstatus, dwArg00)
	return
mm_bss_param_setting_handler_exit:
l2306440C:
	assert_err()


void mm_bcn_change_cfm_handler(word32 ra, word32 mstatus, word32 dwArg28, word32 dwArg68, word32 dwArgC8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 tp
// Preserved: sp
mm_bcn_change_cfm_handler_entry:
l23064430:
	word32 a0_7
	word32 a4_9
	word32 a2_51
	word32 s2_52
	ke_state_get(7<32>, dwArg28, out a0_7, out a2_51, out a4_9, out s2_52)
	branch a0_7 == 2<32> l23064458
l23064458:
	apm_start_cfm(ra, 0<32>, a4_9, mstatus, dwArg68, dwArgC8, dwArg0118)
	return
mm_bcn_change_cfm_handler_exit:
l23064440:
	assert_err()


void apm_stop_req_handler(word32 ra, word32 s1, word32 a1, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
apm_stop_req_handler_entry:
l23064466:
	word32 s0_15 = CONVERT(Mem13[a1:byte], byte, word32)
	word32 s2_21 = a3
	word32 a4_104 = 2<32>
	branch CONVERT(Mem13[s0_15 + 0x4201C326<32>:byte], byte, word32) != 2<32> l230644E4
l23064496:
	branch CONVERT(Mem13[s0_15 + 0x4201C328<32>:byte], byte, word32) == 0<32> l230644E4
l2306449C:
	word32 a0_30
	word32 s2_35
	word32 a4_218
	word32 a2_217
	ke_state_get(7<32>, dwArg18, out a0_30, out a2_217, out a4_218, out s2_35)
	branch a0_30 != 0<32> l230644F4
l230644AA:
	word32 a4_40 = CONVERT(Mem13[0x4201CD24<32>:byte], byte, word32)
	branch a4_40 == 0<32> l230644BC
l230644B8:
	Mem41[0x4201CD24<32>:byte] = 0<8>
l230644BC:
	word32 s0_63
	ra = apm_stop(ra, a4_40, s2_35, mstatus, s2, dwLoc10, dwLoc08, dwArg08, dwArg18, s1, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_63, out a4_104, out s2_21)
	word32 a0_73 = Mem54[s0_63 + -1316<i32>:int32]
	branch a0_73 == 0<32> l230644E4
l230644D4:
	Mem95[cm_DeleteConnection(Mem54[s0_63 + -1316<i32>:int32], RemoveAPKeyInfo(a0_73), mstatus, dwLoc10, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a4_104) + 2780<i32>:word32] = 0<32>
l230644E4:
	word32 s8_216
	word32 s4_215
	word32 s3_214
	word32 s2_213
	word32 a3_212
	word32 a2_211
	word32 a0_210
	word32 s1_209
	word32 s0_208
	ke_msg_send_basic(ra, 0x1FFFC03<32>, s2_21, a4_104, mstatus, s2, dwLoc10, out s0_208, out s1_209, out a0_210, out a2_211, out a3_212, out s2_213, out s3_214, out s4_215, out s8_216)
l230644F4:
	return
apm_stop_req_handler_exit:


void apm_start_req_handler(word32 ra, word32 s1, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 s6, word32 s8, word32 s9, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg1C, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0164, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s6:[0..31] s8:[8..15] s9:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0164:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
apm_start_req_handler_entry:
l23064504:
	word32 a3_42
	word32 s9_943
	word32 s10_944
	word32 s11_945
	word32 t4_946
	word32 s2_936
	word32 s8_942
	word32 s3_937
	word32 s4_938
	word32 s7_941
	word32 s5_939
	word32 s6_940
	word32 s1_929
	word32 a7_935
	word32 a1_931
	word32 a5_934
	word32 a2_932
	word32 a4_933
	word32 a0_930
	word32 ra_369 = printf(ra, 0x2307F4FC<32>, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_929, out a0_930, out a1_931, out a2_932, out a3_42, out a4_933, out a5_934, out a7_935, out s2_936, out s3_937, out s4_938, out s5_939, out s6_940, out s7_941, out s8_942, out s9_943, out s10_944, out s11_945, out t4_946)
	byte bLoc33_694 = SLICE(s8, byte, 8)
	branch CONVERT(Mem34[CONVERT(Mem34[a1 + 51<i32>:byte], byte, word32) + 0x4201C326<32>:byte], byte, word32) != 2<32> l2306481E
l2306455C:
	word32 a0_69
	word32 a2_70
	word32 s2_985
	word32 a4_984
	word32 s1_73 = ke_state_get(7<32>, dwLoc08, out a0_69, out a2_70, out a4_984, out s2_985)
	branch a0_69 != 0<32> l2306481C
l2306481C:
l23064566:
	word32 a5_77 = CONVERT(Mem34[s1_73 + 88<i32>:byte], byte, word32)
	branch a5_77 != 0<32> l23064856
l23064856:
l2306456E:
	branch a5_77 == 0<32> l2306458E
l2306458E:
	word32 a4_86 = CONVERT(Mem34[a1 + 28<i32>:byte], byte, word32)
	Mem92[0x4201DD10<32>:word32] = Mem34[a2_70 + 20<i32>:word32]
	word32 a0_93
	word32 s2_101
	word32 s3_102
	word32 s6_105
	word32 s0_99 = me_add_chan_ctx(fp + -51<i32>, a4_86, s9, out a0_93, out s2_101, out s3_102, out s6_105)
	branch a0_93 != 0<32> l2306481E
l2306481E:
	word32 a4_126
	word32 s5_135
	word32 a0_149
	word32 a2_151
	word32 s0_157
	word32 s4_161
	word32 s8_972
	word32 a1_965
	word32 s3_971
	word32 a3_966
	word32 a4_967
	word32 s2_970
	word32 a5_968
	word32 a6_969
	word32 s7_958
	word32 s1_964
	word32 s8_959
	word32 s9_960
	word32 t4_963
	word32 s10_961
	word32 s11_962
	word32 s2_954
	word32 s6_957
	word32 s3_955
	word32 s4_956
	word32 a2_950
	word32 a7_953
	word32 a3_951
	word32 a5_952
	word32 a1_949
	word32 a0_948
	word32 s1_947
	ke_msg_alloc(printf(ra_369, 0x2307F564<32>, a3_42, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_947, out a0_948, out a1_949, out a2_950, out a3_951, out a4_126, out a5_952, out a7_953, out s2_954, out s3_955, out s4_956, out s5_135, out s6_957, out s7_958, out s8_959, out s9_960, out s10_961, out s11_962, out t4_963), 0x1FFFC01<32>, s5_135, 4<32>, a4_126, mstatus, s2, out s0_157, out s1_964, out a0_149, out a1_965, out a2_151, out a3_966, out a4_967, out a5_968, out a6_969, out s2_970, out s3_971, out s4_161, out s8_972)
	Mem167[a0_149:byte] = SLICE(s4_161, byte, 0)
	Mem169[a0_149 + 1<i32>:byte] = SLICE(CONVERT(Mem167[s0_157 + 51<i32>:byte], byte, word32), byte, 0)
	word32 s8_983
	word32 s3_981
	word32 s4_982
	word32 a5_979
	word32 s2_980
	word32 a4_978
	word32 s1_973
	word32 a0_974
	word32 a3_977
	word32 a1_975
	word32 a2_976
	ke_msg_send(a0_149, a2_151, mstatus, out s1_973, out a0_974, out a1_975, out a2_976, out a3_977, out a4_978, out a5_979, out s2_980, out s3_981, out s4_982, out s8_983)
l230645B4:
	word32 a3_190
	word32 a0_189 = me_freq_to_chan_ptr(CONVERT(Mem92[s0_99 + 16<i32>:byte], byte, word32), CONVERT(Mem92[s0_99 + 14<i32>:uint16], uint16, word32), out a3_190)
	word32 a5_195 = s3_102 + 1496<i32> + s2_101
	Mem196[a5_195 + 932<i32>:word32] = a0_189
	word32 a4_197 = CONVERT(Mem196[s0_99 + 18<i32>:int8], int8, int32)
	Mem198[a0_189 + 4<i32>:byte] = SLICE(a4_197, byte, 0)
	Mem200[a5_195 + 936<i32>:word16] = SLICE(a4_197, word16, 0)
	word32 s0_201 = Mem200[a4_197 + 24<i32>:word32]
	Mem202[a5_195 + 938<i32>:word16] = SLICE(a4_197, word16, 0)
	word32 a5_203 = CONVERT(Mem202[s0_201 + 28<i32>:byte], byte, word32)
	branch a5_203 != 4<32> l230645EE
l230645EC:
	a5_203 = 3<32>
l230645EE:
	word32 s5_213 = s2_101 + (s3_102 + 1496<i32>)
	Mem215[s5_213 + 986<i32>:byte] = SLICE(a5_203, byte, 0)
	word32 a5_217 = CONVERT(Mem215[s0_201 + 28<i32>:byte], byte, word32)
	Mem218[s5_213 + 988<i32>:byte] = 0<8>
	Mem219[s5_213 + 987<i32>:byte] = SLICE(a5_217, byte, 0)
	word32 s3_234
	word32 a4_987
	word32 s1_986
	word32 s4_235
	word32 s2_233
	word32 s0_231 = chan_ctxt_link(ra_369, CONVERT(Mem219[s0_201 + 51<i32>:byte], byte, word32), CONVERT(bLoc33_694, byte, word32), a3_190, s2_101, mstatus, dwArg88, dwArg98, dwArgA8, out s1_986, out a4_987, out s2_233, out s3_234, out s4_235)
	Mem241[s6_105 + -732<i32>:byte] = SLICE(CONVERT(Mem219[s0_231 + 52<i32>:byte], byte, word32), byte, 0)
	Mem243[s6_105 + -731<i32>:byte] = SLICE(CONVERT(Mem241[s0_231 + 29<i32>:byte], byte, word32), byte, 0)
	word32 a4_246
	branch apm_embedded_enabled(s5_213, out a4_246) == 0<32> l23064786
l23064630:
	me_get_basic_rates(s0_231 + 53<i32>, s0_231)
	branch CONVERT(Mem243[s0_231 + 67<i32>:byte], byte, word32) == 0<32> l2306464E
l23064642:
	Mem257[s5_213 + 992<i32>:word32] = Mem243[s5_213 + 992<i32>:int32] | 1<i32>
l2306464E:
	branch CONVERT(Mem259[0x4201C8EA<32>:byte], byte, word32) == 0<32> l2306466E
l23064658:
	word32 a5_265 = s3_234 + 1496<i32> + s2_233
	Mem268[a5_265 + 992<i32>:word32] = Mem259[a5_265 + 992<i32>:int32] | 2<i32>
l2306466E:
	word32 s1_279 = s2_233 + (s3_234 + 1496<i32>)
	Mem280[s1_279 + 1042<i32>:word16] = SLICE(CONVERT(Mem274[s0_231 + 40<i32>:uint16], uint16, word32), word16, 0)
	Mem283[s1_279 + 940<i32>:word16] = SLICE(CONVERT(Mem280[s0_231 + 66<i32>:byte], byte, word32), word16, 0)
	Mem285[s1_279 + 1048<i32>:byte] = SLICE(CONVERT(Mem283[s0_231 + 102<i32>:byte], byte, word32), byte, 0)
	word32 a7_1027
	word32 a4_1024
	word32 a5_1025
	word32 a6_1026
	word32 a2_1022
	word32 a3_1023
	memcpy(s1_279 + 894<i32>, s0_231 + 68<i32>, 34<i32>, out a2_1022, out a3_1023, out a4_1024, out a5_1025, out a6_1026, out a7_1027)
	word32 a5_304 = CONVERT(Mem285[s1_279 + 894<i32>:byte], byte, word32) + s1_279
	Mem305[a5_304 + 895<i32>:byte] = 0<8>
	word32 s1_306 = Mem305[a5_304 + 80<i32>:word32]
	Mem308[s1_306 + 888<i32>:word32] = a5_304
	Mem310[s1_306 + 892<i32>:word16] = SLICE(CONVERT(Mem308[s1_306 + 84<i32>:uint16], uint16, word32), word16, 0)
	word32 a3_316
	word32 a5_1030
	word32 a6_1031
	word32 a7_1032
	word32 a2_1028
	word32 a4_1029
	memcpy(s1_306 + 944<i32>, s0_231 + 53<i32>, 0xD<32>, out a2_1028, out a3_316, out a4_1029, out a5_1030, out a6_1031, out a7_1032)
	Mem327[Mem310[0x44B00200<32>:int32] + 8<i32>:word32] = s1_306
	Mem329[Mem327[0x44B00204<32>:int32] + 12<i32>:word32] = s1_306
	word32 a4_330 = Mem329[0x44B00208<32>:int32]
	Mem331[a4_330 + 16<i32>:word32] = s1_306
	word32 a5_332 = Mem331[0x44B0020C<32>:int32]
	Mem333[s1_306 + 960<i32>:byte] = 0<8>
	Mem334[a5_332 + 20<i32>:word32] = s1_306
	Mem339[s3_234 + 0x4201C6E4<32>:word32] = 0xF0000000<32>
	word32 a0_344
	word32 a2_1033
	word32 a5_1034
	word32 s2_1035
	word32 a1_350 = CONVERT(Mem339[ke_malloc(333<i32>, a3_316, a4_330, mstatus, dwLoc08, out a0_344, out a2_1033, out a5_1034, out s2_1035) + 87<i32>:byte], byte, word32)
	Mem356[s6_105 + -736<i32>:word32] = a0_344
	word32 a0_361
	ra_369 = me_build_beacon(ra_369, a0_344, a1_350, s0_231 + 38<i32>, s0_231 + 50<i32>, s5_213, dwLoc20, dwLoc1C, dwArg2C, s3, out s0_231, out a0_361, out a4_246, out s2_233, out s4_235)
	word32 a5_386 = CONVERT(Mem356[s0_231 + 102<i32>:byte], byte, word32)
	Mem387[s0_231 + 36<i32>:word16] = SLICE(a0_361, word16, 0)
	branch a5_386 == 0<32> l23064804
l23064804:
	Mem389[0x4201DADC<32>:word32] = 0<32>
l23064726:
	word32 s0_405
	word32 s1_406
	word32 s2_407
	word32 a0_420
	word32 ra_413 = cm_InitConnection(ra_369, s4_235 + 888<i32> + s2_233, 0<32>, 0<32>, mstatus, s6, s4, s2, dwLoc20, dwLoc1C, dwArg1C, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s0_405, out s1_406, out a0_420, out s2_407)
	Mem424[s1_406 + 2780<i32>:word32] = a0_420
	word32 s6_421 = s4_235 + 895<i32> + s2_407
	word32 s1_428 = ap_setpsk(a0_420, s6_421, s0_405 + 103<i32>)
	word32 a3_448
	s0_231 = cm_SetComData(Mem424[s1_428 + -1316<i32>:int32], s6_421, out a3_448)
	Mem465[Mem424[s1_428 + -1316<i32>:int32] + 2<i32>:byte] = SLICE(CONVERT(Mem424[s0_231 + 51<i32>:byte], byte, word32), byte, 0)
	word32 s1_478
	word32 s10_1051
	word32 s11_1052
	word32 t4_1053
	word32 s7_1048
	word32 s8_1049
	word32 s9_1050
	word32 s4_1045
	word32 s5_1046
	word32 s6_1047
	word32 a7_1042
	word32 s2_1043
	word32 s3_1044
	word32 a3_1039
	word32 a4_1040
	word32 a5_1041
	word32 a0_1036
	word32 a1_1037
	word32 a2_1038
	ra_369 = InitGroupKey(printf(ra_413, 0x2307F51C<32>, a3_448, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_478, out a0_1036, out a1_1037, out a2_1038, out a3_1039, out a4_1040, out a5_1041, out a7_1042, out s2_1043, out s3_1044, out s4_1045, out s5_1046, out s6_1047, out s7_1048, out s8_1049, out s9_1050, out s10_1051, out s11_1052, out t4_1053), s1_478, Mem465[s1_478 + -1316<i32>:int32], mstatus, dwLoc38, dwLoc20, dwLoc1C, dwLoc18, dwArg08, dwArg2C, s9, s1, dwArg78, dwArg7C, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArg0108, dwArg0164, out a4_246, out s2_233, out s4_235)
l23064786:
	branch CONVERT(Mem520[s0_231 + 16<i32>:byte], byte, word32) != 0<32> l230647B4
l2306478C:
	word32 a0_528
	word32 s3_537
	word32 s6_1018
	word32 s7_1019
	word32 s8_1020
	word32 a4_1015
	word32 s4_1016
	word32 s5_1017
	word32 s1_1014
	me_legacy_rate_bitfield_build(s4_235 + 944<i32> + s2_233, 1<32>, dwArgE8, out s1_1014, out a0_528, out a4_1015, out s2_233, out s3_537, out s4_1016, out s5_1017, out s6_1018, out s7_1019, out s8_1020)
	branch (a0_528 & 0xF<32>) == 0<32> l2306480A
l2306480A:
	Mem550[s3_537 + 1496<i32> + s2_233 + 983<i32>:byte] = 1<8>
	a4_246 = 1<32>
l2306479C:
	word32 a4_1021
	Mem559[s3_537 + 1496<i32> + s2_233 + 983<i32>:byte] = SLICE(0x1F<32> - __clzsi2(a0_528 & 0xF<32>, out a4_1021), byte, 0)
	a4_246 = 0x1F<32>
l230647B4:
	word32 a3_572
	word32 s5_583
	word32 s3_989
	word32 s2_988
	word32 ra_577 = apm_set_bss_param(ra_369, a4_246, s2_233, mstatus, dwArgB8, dwArgE8, out a3_572, out s2_988, out s3_989, out s5_583)
	word32 a3_620
	word32 s3_994
	word32 a4_992
	word32 s2_993
	word32 a2_991
	word32 s1_990
	tpc_update_vif_tx_power(ra_577, s5_583, fp + -50<i32>, fp + -49<i32>, a3_572, fflags, frm, out s1_990, out a2_991, out a3_620, out a4_992, out s2_993, out s3_994)
	word32 s11_1012
	word32 t4_1013
	word32 s8_1009
	word32 s9_1010
	word32 s10_1011
	word32 s5_1006
	word32 s6_1007
	word32 s7_1008
	word32 s3_1004
	word32 s4_1005
	word32 a5_1001
	word32 a7_1002
	word32 s2_1003
	word32 a2_998
	word32 a3_999
	word32 a4_1000
	word32 a1_997
	word32 s1_995
	word32 a0_996
	printf(ra_577, 0x2307F540<32>, a3_620, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_995, out a0_996, out a1_997, out a2_998, out a3_999, out a4_1000, out a5_1001, out a7_1002, out s2_1003, out s3_1004, out s4_1005, out s5_1006, out s6_1007, out s7_1008, out s8_1009, out s9_1010, out s10_1011, out s11_1012, out t4_1013)
l230647EA:
	0<32> = dwArg0198
	return
apm_start_req_handler_exit:
l23064576:
	assert_err()


void me_set_active_cfm_handler(word32 ra, word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
me_set_active_cfm_handler_entry:
l2306485A:
	word32 a0_7
	word32 s2_134
	word32 a4_133
	word32 a2_132
	ke_state_get(7<32>, dwArg28, out a0_7, out a2_132, out a4_133, out s2_134)
	branch a0_7 == 1<32> l2306488A
l2306486A:
	word32 a0_16
	word32 s2_139
	word32 a4_138
	word32 a2_137
	ke_state_get(7<32>, dwArg28, out a0_16, out a2_137, out a4_138, out s2_139)
	branch a0_16 == 0<32> l2306488A
l2306488A:
	word32 a0_31
	word32 a4_33
	word32 s2_136
	word32 a2_135
	ke_state_get(7<32>, dwArg28, out a0_31, out a2_135, out a4_33, out s2_136)
	branch a0_31 != 1<32> l230648BC
l23064896:
	branch Mem6[0x4201CD14<32>:int32] == 0<32> l230648B8
l230648B8:
	apm_bcn_set(ra, a4_33, mstatus, dwLoc08, dwArg28)
l230648BC:
	return
me_set_active_cfm_handler_exit:
l230648A0:
	assert_err()
l23064872:
	assert_err()


void hostapd_mgt_ind_handler(word32 a1, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 s1 s2 tp
// Preserved: sp
hostapd_mgt_ind_handler_entry:
l230648C4:
	word32 a5_5 = CONVERT(Mem0[a1 + 2<i32>:uint16], uint16, word32)
	branch (a5_5 & 252<i32>) != 64<i32> l230648E6
l230648E6:
	branch (a5_5 & 252<i32>) == 176<i32> l230648D4
l230648EE:
	return
l230648D4:
	word32 a0_43
	word32 a2_44
	word32 a4_45
	word32 s2_46
	ke_state_get(0xA<32>, dwArg28, out a0_43, out a2_44, out a4_45, out s2_46)
	return
hostapd_mgt_ind_handler_exit:


word32 dump_cfg_entries(word32 ra, word32 s1, word32 a3, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArg0198, ptr32 & s1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cfg_start_req_handler
// MayUse:  a3:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +0198:[0..31]
// LiveOut: a4 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t3 t4 tp
// Preserved: s8 sp
dump_cfg_entries_entry:
l230648F2:
	word32 s0_183 = 0x23082CF8<32>
	word32 a0_325
	word32 a1_326
	word32 a2_327
	word32 a4_328
	word32 a5_329
	word32 s4_330
	word32 s8_331
	word32 s1_240 = puts(0x2307F688<32>, out a0_325, out a1_326, out a2_327, out a4_328, out a5_329, out s4_330, out s8_331) + -692<i32>
	word32 s2_222 = 0x2307F000<32>
l23064940:
	branch s0_183 <u s1_240 l23064968
l23064968:
	word32 a1_59
	word32 a3_61
	word32 s3_69
	word32 s1_332
	word32 a0_333
	word32 a2_334
	word32 a4_335
	word32 a5_336
	word32 a7_337
	word32 s2_338
	word32 s4_339
	word32 s5_340
	word32 s6_341
	word32 s7_342
	word32 s8_343
	word32 s9_344
	word32 s10_345
	word32 s11_346
	word32 t4_347
	word32 ra_64 = printf(ra, s2_222 + 1720<i32>, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_332, out a0_333, out a1_59, out a2_334, out a3_61, out a4_335, out a5_336, out a7_337, out s2_338, out s3_69, out s4_339, out s5_340, out s6_341, out s7_342, out s8_343, out s9_344, out s10_345, out s11_346, out t4_347)
	word32 s0_78 = Mem27[a1_59:word32]
	word32 a3_86
	word32 s4_95
	word32 a3_110
	word32 s5_120
	word32 a3_134
	word32 s6_145
	word32 a3_158
	word32 s7_170
	word32 a3_191
	word32 s8_204
	word32 s1_348
	word32 a0_349
	word32 a1_350
	word32 a2_351
	word32 a4_352
	word32 a5_353
	word32 a7_354
	word32 s2_355
	word32 s3_356
	word32 s5_357
	word32 s6_358
	word32 s7_359
	word32 s8_360
	word32 s9_361
	word32 s10_362
	word32 s11_363
	word32 t4_364
	word32 s1_365
	word32 a0_366
	word32 a1_367
	word32 a2_368
	word32 a4_369
	word32 a5_370
	word32 a7_371
	word32 s2_372
	word32 s3_373
	word32 s4_374
	word32 s6_375
	word32 s7_376
	word32 s8_377
	word32 s9_378
	word32 s10_379
	word32 s11_380
	word32 t4_381
	word32 s1_382
	word32 a0_383
	word32 a1_384
	word32 a2_385
	word32 a4_386
	word32 a5_387
	word32 a7_388
	word32 s2_389
	word32 s3_390
	word32 s4_391
	word32 s5_392
	word32 s7_393
	word32 s8_394
	word32 s9_395
	word32 s10_396
	word32 s11_397
	word32 t4_398
	word32 s1_399
	word32 a0_400
	word32 a1_401
	word32 a2_402
	word32 a4_403
	word32 a5_404
	word32 a7_405
	word32 s2_406
	word32 s3_407
	word32 s4_408
	word32 s5_409
	word32 s6_410
	word32 s8_411
	word32 s9_412
	word32 s10_413
	word32 s11_414
	word32 t4_415
	word32 s1_416
	word32 a0_417
	word32 a1_418
	word32 a2_419
	word32 a4_420
	word32 a5_421
	word32 a7_422
	word32 s2_423
	word32 s3_424
	word32 s4_425
	word32 s5_426
	word32 s6_427
	word32 s7_428
	word32 s9_429
	word32 s10_430
	word32 s11_431
	word32 t4_432
	word32 s1_433
	word32 a0_434
	word32 a1_435
	word32 a2_436
	word32 a4_437
	word32 a5_438
	word32 a7_439
	word32 s3_440
	word32 s4_441
	word32 s5_442
	word32 s6_443
	word32 s7_444
	word32 s8_445
	word32 s9_446
	word32 s10_447
	word32 s11_448
	word32 t4_449
	ra = printf(printf(cfg_api_element_dump(printf(printf(printf(printf(ra_64, s3_69 + 1732<i32>, a3_61, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_348, out a0_349, out a1_350, out a2_351, out a3_86, out a4_352, out a5_353, out a7_354, out s2_355, out s3_356, out s4_95, out s5_357, out s6_358, out s7_359, out s8_360, out s9_361, out s10_362, out s11_363, out t4_364), s4_95 + 1752<i32>, a3_86, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_365, out a0_366, out a1_367, out a2_368, out a3_110, out a4_369, out a5_370, out a7_371, out s2_372, out s3_373, out s4_374, out s5_120, out s6_375, out s7_376, out s8_377, out s9_378, out s10_379, out s11_380, out t4_381), s5_120 + 1772<i32>, a3_110, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_382, out a0_383, out a1_384, out a2_385, out a3_134, out a4_386, out a5_387, out a7_388, out s2_389, out s3_390, out s4_391, out s5_392, out s6_145, out s7_393, out s8_394, out s9_395, out s10_396, out s11_397, out t4_398), s6_145 + 1792<i32>, a3_134, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_399, out a0_400, out a1_401, out a2_402, out a3_158, out a4_403, out a5_404, out a7_405, out s2_406, out s3_407, out s4_408, out s5_409, out s6_410, out s7_170, out s8_411, out s9_412, out s10_413, out s11_414, out t4_415), s0_78 + 0x1C<32>, CONVERT(Mem27[s0_78 + 6<32>:byte], byte, word32), fp + -64<i32>, out s0_183), s7_170 + 1812<i32>, a3_158, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_416, out a0_417, out a1_418, out a2_419, out a3_191, out a4_420, out a5_421, out a7_422, out s2_423, out s3_424, out s4_425, out s5_426, out s6_427, out s7_428, out s8_204, out s9_429, out s10_430, out s11_431, out t4_432), s8_204 + 1832<i32>, a3_191, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_433, out a0_434, out a1_435, out a2_436, out a3, out a4_437, out a5_438, out a7_439, out s2_222, out s3_440, out s4_441, out s5_442, out s6_443, out s7_444, out s8_445, out s9_446, out s10_447, out s11_448, out t4_449)
	word32 a0_450
	word32 a1_451
	word32 a2_452
	word32 a4_453
	word32 a5_454
	word32 s4_455
	word32 s8_456
	s1_240 = puts(0x23070DC0<32>, out a0_450, out a1_451, out a2_452, out a4_453, out a5_454, out s4_455, out s8_456)
l23064944:
	word32 a4_251
	word32 a0_457
	word32 a1_458
	word32 a2_459
	word32 a5_460
	word32 s4_461
	word32 s8_462
	word32 s1_252 = puts(0x23073254<32>, out a0_457, out a1_458, out a2_459, out a4_251, out a5_460, out s4_461, out s8_462)
	0<32> = dwArg0198
	s1Out = s1_252
	a4Out = a4_251
	return ra
dump_cfg_entries_exit:


void cfg_start_req_handler(word32 ra, word32 a3, word32 a5, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg5C, word32 dwArg78, word32 dwArg9C, word32 dwArg0108, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0108:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
cfg_start_req_handler_entry:
l230649D0:
	word32 a4_116
	word32 a1_13 = Mem11[a5:word32]
	word32 s1_109 = a3
	branch a5 == 0<32> l23064A0C
l23064A0C:
	utils_tlv_bl_unpack_auto(Mem11[a1_13 + 16<i32>:word32], CONVERT(Mem11[a1_13 + 12<i32>:uint16], uint16, word32), fp + 0xFFFFFFEC<32>)
	word32 a0_29
	word32 a5_30
	word32 a1_32
	word32 a2_33
	word32 s6_45
	word32 s1_204
	word32 a3_205
	word32 a4_206
	word32 a7_207
	word32 s2_208
	word32 s3_209
	word32 s4_210
	word32 s5_211
	word32 s7_212
	word32 s8_213
	word32 s9_214
	word32 s10_215
	word32 s11_216
	word32 t4_217
	ra = cfg_api_element_set(printf(ra, 0x2307F664<32>, fp + 0xFFFFFFEC<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_204, out a0_29, out a1_32, out a2_33, out a3_205, out a4_206, out a5_30, out a7_207, out s2_208, out s3_209, out s4_210, out s5_211, out s6_45, out s7_212, out s8_213, out s9_214, out s10_215, out s11_216, out t4_217), a0_29, a1_32, a2_33, fp + 0xFFFFFFEC<32>, 0<32>, a5_30, s6_45, dwArg20, dwArg24, dwArg48, ra, dwArg0108, out s1_109, out a4_116)
l230649E2:
	a4_116 = 2<32>
	branch a5 >u 2<32> l23064A3C
l23064A3C:
	ra = dump_cfg_entries(ra, a3, a3, dwArg10, dwArg14, dwArg5C, dwArg0178, out s1_109, out a4_116)
l230649E8:
	word32 a0_119
	word32 a2_121
	word32 s0_218
	word32 s1_219
	word32 a1_220
	word32 a3_221
	word32 a4_222
	word32 a5_223
	word32 a6_224
	word32 s2_225
	word32 s3_226
	word32 s4_227
	word32 s8_228
	ke_msg_alloc(ra, 0x3000001<32>, s1_109, 1<32>, a4_116, mstatus, dwLoc08, out s0_218, out s1_219, out a0_119, out a1_220, out a2_121, out a3_221, out a4_222, out a5_223, out a6_224, out s2_225, out s3_226, out s4_227, out s8_228)
	Mem137[a0_119:byte] = 0<8>
	word32 s1_229
	word32 a0_230
	word32 a1_231
	word32 a2_232
	word32 a3_233
	word32 a4_234
	word32 a5_235
	word32 s2_236
	word32 s3_237
	word32 s4_238
	word32 s8_239
	ke_msg_send(a0_119, a2_121, mstatus, out s1_229, out a0_230, out a1_231, out a2_232, out a3_233, out a4_234, out a5_235, out s2_236, out s3_237, out s4_238, out s8_239)
	return
cfg_start_req_handler_exit:


word32 cfg_api_element_dump(word32 ra, word32 s0, word32 a1, word32 a2, ptr32 & s0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dump_cfg_entries
// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: ra s0
// Trashed: a0 a1 a2 a5 ra s0
// Preserved: sp
cfg_api_element_dump_entry:
l23064A42:
	branch (a1 + 0xFFFFFFFF<32> & 255<i32>) >u 7<32> l23064BCA
l23064BCA:
	s0Out = s0
	return ra
l23064A4E:
	word32 s0_23
	word32 ra_24
	call 0x2307F73C<32> (retsize: 0;)
		uses: a1:Mem0[0x2307F73C<32>:word32],a2:a2,a5:0x2307F73C<32>,ra:ra,s0:a2,Stack +0004:s0,Stack +0084:ra
		defs: ra:ra_24,s0:s0_23
	s0Out = s0_23
	return ra_24
cfg_api_element_dump_exit:


void cfg_api_element_general_set(word32 ra, word32 a1, word32 a3, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
cfg_api_element_general_set_entry:
l23064BCE:
	word32 a1_20
	word32 a3_22
	word32 s1_26
	word32 a0_116
	word32 a2_117
	word32 a4_118
	word32 a5_119
	word32 a7_120
	word32 s2_121
	word32 s3_122
	word32 s4_123
	word32 s5_124
	word32 s6_125
	word32 s7_126
	word32 s8_127
	word32 s9_128
	word32 s10_129
	word32 s11_130
	word32 t4_131
	word32 ra_25 = printf(ra, 0x2307F7D0<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_26, out a0_116, out a1_20, out a2_117, out a3_22, out a4_118, out a5_119, out a7_120, out s2_121, out s3_122, out s4_123, out s5_124, out s6_125, out s7_126, out s8_127, out s9_128, out s10_129, out s11_130, out t4_131)
	branch CONVERT(SLICE(CONVERT(Mem9[s1_26 + 6<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0), word16, word32) >u 6<32> l23064C12
l23064C12:
	return
l23064BF8:
	word32 a5_52 = Mem9[0x2307F75C<32>:word32]
	call 0x2307F75C<32> (retsize: 0;)
		uses: a1:a1_20,a3:a3_22,a4:0x2307F75C<32>,a5:a5_52,ra:ra_25,s0:a1,s1:Mem9[a5_52 + 12<i32>:word32],Stack +0008:dwLoc08,Stack +0020:dwArg10,Stack +0024:dwArg14,Stack +0028:dwArg18,Stack +0070:dwArg60,Stack +0074:dwArg64,Stack +0098:dwArg88,Stack +00BC:dwArgAC
	return
cfg_api_element_general_set_exit:


void cfg_api_element_general_get()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
cfg_api_element_general_get_entry:
l23064C3A:
	return
cfg_api_element_general_get_exit:


word32 cfg_api_element_set(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s6, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128, ptr32 & s1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cfg_start_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s6:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut: a4 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
cfg_api_element_set_entry:
l23064C3E:
	word32 s2_145 = a0
	word32 s3_146 = a1
	word32 s4_147 = a2
	word32 s5_31 = a3
	word32 s6_33 = a4
	word32 s0_34 = 0x23082CF8<32>
	word32 s1_105 = 0x23082D4C<32>
	word32 s7_148 = 0x2307F000<32>
l23064C70:
	branch s0_34 <u s1_105 l23064C7A
l23064C7A:
	word32 s0_41 = Mem23[a5:word32]
	branch a5 != s2_145 l23064CC0
l23064C80:
	a5 = CONVERT(Mem23[s0_41 + 4<i32>:uint16], uint16, word32)
	branch a5 != s3_146 l23064CC0
l23064C88:
	a4 = CONVERT(Mem23[s0_41 + 6<i32>:uint16], uint16, word32)
	branch a4 != s4_147 l23064CB2
l23064CB2:
	word32 s10_271
	word32 t4_273
	word32 s11_272
	word32 a2_267
	word32 s8_269
	word32 s9_270
	word32 a7_268
	word32 a0_265
	word32 a1_266
	ra = printf(ra, s7_148 + 2028<i32>, s3_146, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_105, out a0_265, out a1_266, out a2_267, out a3, out a4, out a5, out a7_268, out s2_145, out s3_146, out s4_147, out s5_31, out s6_33, out s7_148, out s8_269, out s9_270, out s10_271, out s11_272, out t4_273)
l23064CC0:
	s0_34 = s0_41 + 0x1C<32>
l23064C74:
	branch s0_34 != s1_105 l23064C90
l23064C90:
	word32 s0_80 = Mem23[a5 + 16<i32>:word32]
	word32 a5_118
	word32 a7_123
	word32 s10_124
	word32 s11_125
	word32 s9_126
	word32 t0_127
	word32 t4_128
	call a5 (retsize: 0;)
		uses: a0:s0_80,a1:s5_86,a2:s6_82,a3:a3_97,a4:a4_99,a5:a5_118,a7:a7_123,ra:ra_52,s0:s0_80,s1:s1_38,s10:s10_124,s11:s11_125,s2:s2_42,s3:s3_44,s4:s4_46,s5:s5_86,s6:s6_82,s7:s7_50,s9:s9_126,Stack +0028:dwLoc08,Stack +0070:dwArg40,Stack +0074:dwArg44,Stack +0098:dwArg68,Stack +00BC:dwArg8C,t0:t0_127,t4:t4_128
		defs: a4:a4_117,a5:a5_118,a7:a7_123,ra:ra_112,s1:s1_105,s10:s10_124,s11:s11_125,s9:s9_126,t0:t0_127,t4:t4_128
l23064C78:
l23064C9A:
	0<32> = dwArg0128
	s1Out = s1_105
	a4Out = a4
	return ra
cfg_api_element_set_exit:


word32 co_crc32(word32 a0, word32 a1, word32 a2, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_check_beacon
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a2 a3 a4 a5 a6
// Preserved: sp
co_crc32_entry:
l23064CC4:
	word32 a4_20 = 0<32>
l23064CCE:
	branch a4_20 != a1 l23064CD6
l23064CD6:
	a4_20 = a4_20 + 1<32>
	a2 = a2 << 8<u32> ^ Mem0[((a2 >>u 24<i32> ^ CONVERT(Mem0[a4_20 + a0:byte], byte, word32)) << 2<i32>) + 0x2307F81C<32>:word32]
l23064CD2:
	a4Out = a4_20
	return a2
co_crc32_exit:


word32 dbg_init(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_init
// MayUse:  ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
dbg_init_entry:
l23064CF4:
	word32 t1_32
	word32 a0_33
	word32 a1_34
	word32 a2_35
	word32 a3_36
	word32 a4_37
	word32 a5_38
	word32 ra_18 = memset(ra, 0x4201EED4<32>, 0<32>, 8<32>, out t1_32, out a0_33, out a1_34, out a2_35, out a3_36, out a4_37, out a5_38)
	Mem23[0xFFFFFFFF<32>:word32] = 0x4201EED4<32>
	Mem25[6<32>:word32] = 0x4201EED4<32>
	return ra_18
dbg_init_exit:


word32 dbg_test_print(word32 a0, word32 dwArg0178, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GetTxEAPOLBuffer
//      UpdateEAPOLWcbLenAndTransmit
//      keyMgmtProcessMsgExt
//      KeyMgmtInitSta
//      keyMgmtSta_StartSession
//      init_customApp_mibs
//      supplicantIsEnabled
//      supplicantInitSession
//      supplicantDisable
//      supplicantEnable
//      keyMgmtFormatWpaRsnIe
//      GeneratePWKMsg2
//      KeyMgmtStaHsk_Recvd_PWKMsg1
//      supplicantInit
//      keyMgmtGetKeySize
//      keyMgmtKeyGroupTxDone.isra.1
//      GenerateGrpMsg2
//      KeyMgmtStaHsk_Recvd_GrpMsg1
//      keyMgmtPlumbPairwiseKey
//      keyMgmtKeyPairwiseTxDone.isra.2
//      GeneratePWKMsg4
//      KeyMgmtStaHsk_Recvd_PWKMsg3
//      ProcessKeyMgmtDataSta
//      ProcessEAPoLPkt
//      keyMgmtStaRsnSecuredTimeoutHandler
//      supplicantGenerateRand
//      isApReplayCounterFresh
//      updateApReplayCounter
//      formEAPOLEthHdr
//      IsEAPOL_MICValid
//      KeyMgmtSta_PopulateEAPOLLengthMic
//      parseKeyKDE
//      parseKeyKDE_DataType
//      parseKeyDataGTK
//      KeyMgmtSta_ApplyKEK
//      KeyMgmtSta_IsRxEAPOLValid
//      KeyMgmtSta_PrepareEAPOLFrame
//      supplicantAkmIsWpaWpa2
//      supplicantAkmIsWpa2
//      supplicantAkmIsWpaWpa2Psk
//      supplicantAkmUsesKdf
//      supplicantConstructContext
//      KeyMgmt_DerivePTK
//      KeyMgmtSta_DeriveKeys
//      SetEAPOLKeyDescTypeVersion
//      GetKeyMsgNonceFromEAPOL
//      ProcessRxEAPOL_PwkMsg3
//      ProcessRxEAPOL_GrpMsg1
//      KeyMgmtResetCounter
//      keyMgmtSta_StartSession_internal
//      KeyMgmtSta_InitSession
//      pmkCacheFindPSK
//      pmkCacheSetPassphrase
//      pmkCacheInit
//      pmkCacheRomInit
//      pmkCacheNewElement
//      pmkCacheUpdateReplacementRank
//      pmkCacheFindPSKElement
//      pmkCacheAddPSK
//      pmkCacheDeletePSK
//      pmkCacheGetHexNibble
//      pmkCacheGeneratePSK
//      bl_init
//      set_psk
//      remove_psk
//      supplicantRestoreDefaults
//      supplicantFuncInit
// MayUse:  a0:[0..31] Stack +0178:[0..31]
// LiveOut: a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8
// Trashed: a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
dbg_test_print_entry:
l23064D1E:
	word32 s1_156 = 0x4201F000<32>
	word32 a5_155 = Mem36[0x4201EED8<32>:word32]
	branch a5_155 == 0<32> l23064D76
l23064D4C:
	s2 = a0
	s1_156 = 0x4201EED4<32>
	s3 = a0 + 2<i32>
	s5 = 5<32>
	s6 = 0x2307B000<32>
	s7 = 0x23080000<32>
l23064D64:
	word32 s0_49 = CONVERT(Mem36[s2:byte], byte, word32)
	branch CONVERT(SLICE(s0_49, byte, 0), byte, int32) < 0<32> l23064D8C
l23064D8C:
	branch s0_49 >u 135<i32> l23064DAA
l23064DAA:
	a5_155 = s0_49 + 102<i32> & 255<i32>
	branch a5_155 <=u 5<32> l23064DC6
l23064DC6:
	s1_156 = Mem36[a5_155 + 4<i32>:word32]
	branch s0_49 + -154<i32> <u a5_155 l23064DA2
l23064DD0:
l23064DB6:
	assert_err()
l23064D90:
	a5_155 = ~CONVERT(SLICE(s0_49, byte, 0), byte, int32)
	s1_156 = Mem36[CONVERT(SLICE(s0_49, byte, 0), byte, int32):word32]
	branch (a5_155 >>u s0_49 + -128<i32> & 1<32>) != 0<32> l23064D76
l23064DA2:
	s2 = s2 + 1<32>
	branch a0 + 2<i32> != s2 l23064D64
l23064DA8:
l23064D72:
	a5_155 = fp + -28<i32>
l23064D76:
	0<32> = dwArg0178
	s1Out = s1_156
	a2Out = dwArg0118
	a5Out = a5_155
	a6Out = dwArgF8
	s2Out = s2
	s3Out = s3
	s4Out = dwArgD4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArgB4
	return dwArg0138
dbg_test_print_exit:


void dbg_get_sys_stat_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
dbg_get_sys_stat_req_handler_entry:
l23064DD2:
	word32 a0_12
	word32 a2_14
	word32 s0_55
	word32 s1_56
	word32 a1_57
	word32 a3_58
	word32 a4_59
	word32 a5_60
	word32 a6_61
	word32 s2_62
	word32 s3_63
	word32 s4_64
	word32 s8_65
	ke_msg_alloc(ra, 1034<i32>, a3, 0xC<32>, a4, mstatus, dwArg08, out s0_55, out s1_56, out a0_12, out a1_57, out a2_14, out a3_58, out a4_59, out a5_60, out a6_61, out s2_62, out s3_63, out s4_64, out s8_65)
	Mem30[a0_12:word32] = 0<32>
	Mem31[a0_12 + 4<i32>:word32] = 0<32>
	Mem32[a0_12 + 8<i32>:word32] = 0<32>
	word32 s1_66
	word32 a0_67
	word32 a1_68
	word32 a2_69
	word32 a3_70
	word32 a4_71
	word32 a5_72
	word32 s2_73
	word32 s3_74
	word32 s4_75
	word32 s8_76
	ke_msg_send(a0_12, a2_14, mstatus, out s1_66, out a0_67, out a1_68, out a2_69, out a3_70, out a4_71, out a5_72, out s2_73, out s3_74, out s4_75, out s8_76)
	return
dbg_get_sys_stat_req_handler_exit:


void dbg_mem_write_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
dbg_mem_write_req_handler_entry:
l23064DFA:
	word32 a0_16
	word32 a2_18
	word32 a3_19
	word32 a4_20
	word32 s0_65
	word32 s1_66
	word32 a1_67
	word32 a5_68
	word32 a6_69
	word32 s2_70
	word32 s3_71
	word32 s4_72
	word32 s8_73
	ke_msg_alloc(ra, 1027<i32>, a3, 8<32>, a4, mstatus, dwArg08, out s0_65, out s1_66, out a0_16, out a1_67, out a2_18, out a3_19, out a4_20, out a5_68, out a6_69, out s2_70, out s3_71, out s4_72, out s8_73)
	Mem36[a3_19:word32] = a4_20
	Mem38[a4_20:word32] = a0_16
	Mem40[Mem38[a4_20:word32] + 4<i32>:word32] = a0_16
	word32 s1_74
	word32 a0_75
	word32 a1_76
	word32 a2_77
	word32 a3_78
	word32 a4_79
	word32 a5_80
	word32 s2_81
	word32 s3_82
	word32 s4_83
	word32 s8_84
	ke_msg_send(a0_16, a2_18, mstatus, out s1_74, out a0_75, out a1_76, out a2_77, out a3_78, out a4_79, out a5_80, out s2_81, out s3_82, out s4_83, out s8_84)
	return
dbg_mem_write_req_handler_exit:


void dbg_mem_read_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
dbg_mem_read_req_handler_entry:
l23064E2A:
	word32 a0_16
	word32 a2_18
	word32 a4_20
	word32 s0_63
	word32 s1_64
	word32 a1_65
	word32 a3_66
	word32 a5_67
	word32 a6_68
	word32 s2_69
	word32 s3_70
	word32 s4_71
	word32 s8_72
	ke_msg_alloc(ra, 1025<i32>, a3, 8<32>, a4, mstatus, dwArg08, out s0_63, out s1_64, out a0_16, out a1_65, out a2_18, out a3_66, out a4_20, out a5_67, out a6_68, out s2_69, out s3_70, out s4_71, out s8_72)
	word32 a4_35 = Mem13[a4_20:word32]
	Mem36[a4_35 + 4<i32>:word32] = a0_16
	Mem38[a4_35:word32] = a0_16
	word32 s1_73
	word32 a0_74
	word32 a1_75
	word32 a2_76
	word32 a3_77
	word32 a4_78
	word32 a5_79
	word32 s2_80
	word32 s3_81
	word32 s4_82
	word32 s8_83
	ke_msg_send(a0_16, a2_18, mstatus, out s1_73, out a0_74, out a1_75, out a2_76, out a3_77, out a4_78, out a5_79, out s2_80, out s3_81, out s4_82, out s8_83)
	return
dbg_mem_read_req_handler_exit:


void dbg_set_sev_filter_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
dbg_set_sev_filter_req_handler_entry:
l23064E56:
	Mem12[0x4201FED8<32>:word32] = a4
	word32 s0_39
	word32 s1_40
	word32 a0_41
	word32 a2_42
	word32 a3_43
	word32 s2_44
	word32 s3_45
	word32 s4_46
	word32 s8_47
	ke_msg_send_basic(ra, 1031<i32>, a3, a4, mstatus, dwLoc08, dwArg00, out s0_39, out s1_40, out a0_41, out a2_42, out a3_43, out s2_44, out s3_45, out s4_46, out s8_47)
	return
dbg_set_sev_filter_req_handler_exit:


void dbg_set_mod_filter_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
dbg_set_mod_filter_req_handler_entry:
l23064E76:
	Mem12[0x4201FED4<32>:word32] = a4
	word32 s0_39
	word32 s1_40
	word32 a0_41
	word32 a2_42
	word32 a3_43
	word32 s2_44
	word32 s3_45
	word32 s4_46
	word32 s8_47
	ke_msg_send_basic(ra, 1029<i32>, a3, a4, mstatus, dwLoc08, dwArg00, out s0_39, out s1_40, out a0_41, out a2_42, out a3_43, out s2_44, out s3_45, out s4_46, out s8_47)
	return
dbg_set_mod_filter_req_handler_exit:


word32 ke_queue_extract(word32 ra, word32 s0, word32 a1, word32 a2, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_bcn_set
//      ke_timer_set
//      ke_timer_clear
// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] Stack +0128:[0..31]
// LiveOut: a0 ra s0 s1 s2
// Trashed: a0 a1 a2 a5 ra s0 s1 s2 s3 t3 tp
// Preserved: sp
ke_queue_extract_entry:
l23064E96:
	word32 sp_23 = fp + -48<i32>
	word32 s2_15 = Mem13[s0:word32]
	word32 s3_17 = a1
	word32 s1_18 = 0<32>
l23064EAA:
	word32 a2_42
	branch s0 == 0<32> l23064EC6
l23064EAC:
	Mem24[sp_23 + 132<i32>:word32] = a2
	word32 a0_35
	word32 a5_38
	call s3_17 (retsize: 0;)
		uses: a0:s0_19,a1:a2_20,a2:a2_42,a5:a5_38,ra:ra_28,s0:s0_19,s1:s1_26,s2:s2_27,s3:s3_25
		defs: a0:a0_35,a5:a5_38,ra:ra_33,s1:s1_30,s2:s2_31,s3:s3_32,sp:sp_29
	word32 s0_41 = Mem24[a5_38:word32]
	a2_42 = Mem24[sp_23 + 132<i32>:word32]
	branch a0_35 == 0<32> l23064EE2
l23064EE2:
	s1_18 = s0_41
	s0 = a5_38
	a2 = a2_42
l23064EBA:
	branch s1_18 == 0<32> l23064ED6
l23064ED6:
	Mem45[s2_15:word32] = a5_38
l23064EBC:
	Mem46[a5_38:word32] = s1_18
l23064EBE:
	s0 = Mem48[a5_38:word32]
	branch a5_38 == 0<32> l23064EDC
l23064EDC:
	Mem52[s2_15 + 4<i32>:word32] = s1_18
l23064EC2:
	Mem53[s0:word32] = 0<32>
l23064EC6:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_18
	a0Out = s0
	s2Out = s2_15
	return ra
ke_queue_extract_exit:


word32 bl_aes_128(word32 a0, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      generate_subkey
//      bl_aes_cmac
// MayUse:  a0:[0..31]
// LiveOut: s10 s2 s3 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bl_aes_128_entry:
l23064EE8:
l23064EEE_thunk_BL_AesEncrypt:
	word32 s10_17
	word32 s3_19
	word32 s4_20
	word32 s7_23
	word32 s5_38
	word32 s6_39
	word32 s8_40
	word32 s2_18 = BL_AesEncrypt(a0, 2<32>, out s3_19, out s4_20, out s5_38, out s6_39, out s7_23, out s8_40, out s10_17)
	s3Out = s3_19
	s4Out = s4_20
	s7Out = s7_23
	s10Out = s10_17
	return s2_18
bl_aes_128_exit:


void xor_128(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      generate_subkey
//      bl_aes_cmac
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a3 a4 a5 a6 a7
// Preserved: sp
xor_128_entry:
l23064EF0:
	word32 a5_15 = 0<32>
l23064EF4:
	Mem17[a2 + a5_15:byte] = SLICE(CONVERT(Mem10[a0 + a5_15:byte], byte, word32) ^ CONVERT(Mem10[a1 + a5_15:byte], byte, word32), byte, 0)
	a5_15 = a5_15 + 1<32>
	branch a5_15 != 0x10<32> l23064EF4
l23064F16:
	return
xor_128_exit:


void leftshift_onebit(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      generate_subkey
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5 a6 a7
// Preserved: sp
leftshift_onebit_entry:
l23064F18:
	word32 a5_15 = 0<32>
	word32 a4_13 = 0xF<32>
l23064F1E:
	word32 a2_8 = a0 + a4_13
	Mem17[a1 + a4_13:byte] = SLICE(a5_15 | CONVERT(Mem9[a2_8:byte], byte, word32) << 1<i32>, byte, 0)
	a4_13 = a4_13 + 0xFFFFFFFF<32>
	a5_15 = CONVERT(Mem17[a2_8:byte], byte, word32) >>u 7<i32>
	branch a4_13 != 0xFFFFFFFF<32> l23064F1E
l23064F3E:
	return
leftshift_onebit_exit:


word32 generate_subkey(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_aes_cmac
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: ra s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
generate_subkey_entry:
l23064F40:
	word32 a4_185
	word32 a5_186
	word32 a2_183
	word32 a3_184
	word32 a0_181
	word32 a1_182
	word32 t1_180
	word32 ra_27 = memset(ra, fp + -48<i32>, 0<32>, 0x10<32>, out t1_180, out a0_181, out a1_182, out a2_183, out a3_184, out a4_185, out a5_186)
	word32 s7_189
	word32 s10_190
	word32 s3_187
	word32 s4_188
	word32 s2_42 = bl_aes_128(a0, out s3_187, out s4_188, out s7_189, out s10_190)
	branch CONVERT(bLoc40, int8, int32) < 0<32> l23064F90
l23064F90:
	leftshift_onebit(fp + -64<i32>, fp + -32<i32>)
	xor_128(fp + -32<i32>, 0x2307FC74<32>, a1)
l23064F6C:
	leftshift_onebit(fp + -64<i32>, a1)
l23064F74:
	branch CONVERT(Mem20[a1:int8], int8, int32) < 0<32> l23064FAA
l23064FAA:
	leftshift_onebit(a1, fp + -32<i32>)
	xor_128(fp + -32<i32>, 0x2307FC74<32>, a2)
l23064F7C:
	leftshift_onebit(a1, a2)
l23064F84:
	s1Out = a2
	s2Out = s2_42
	s4Out = dwArgF4
	return ra_27
generate_subkey_exit:


void padding(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_aes_cmac
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a3 a4 a5 a6 a7
// Preserved: sp t1
padding_entry:
l23064FC4:
	word32 a5_24 = 0<32>
	word32 a3_6 = a1 + a2
l23064FD0:
	branch a5_24 >= a2 l23064FEC
l23064FEC:
	branch a2 != a5_24 l23064FF6
l23064FF6:
	Mem13[a1 + a5_24:byte] = 0<8>
l23064FF0:
	Mem16[a3_6:byte] = 0x80<8>
l23064FD4:
	Mem22[a1 + a5_24:byte] = SLICE(CONVERT(Mem19[a0 + a5_24:byte], byte, word32), byte, 0)
l23064FE4:
	a5_24 = a5_24 + 1<32>
	branch a5_24 != 0x10<32> l23064FD0
l23064FEA:
	return
padding_exit:


word32 bl_aes_cmac(word32 ra, word32 a0, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ComputeEAPOL_MIC
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: ra s1 s10 s2 s3 s4 s5 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bl_aes_cmac_entry:
l23065000:
	word32 a1_75
	word32 a0_76
	word32 s1_35
	word32 s2_113
	word32 s4_123
	word32 ra_33 = generate_subkey(ra, a0, fp + -64<i32>, fp + -48<i32>, out s1_35, out s2_113, out s4_123)
	word32 s0_106 = s1_35 + 15<i32> ^ 0x10<32>
	branch s0_106 == 0<32> l23065090
l23065090:
	s0_106 = 1<32>
l2306502A:
	branch (s1_35 & 15<i32>) != 0<32> l23065092
l23065092:
	padding((s0_106 + -1<i32> << 4<i32>) + s2_113, fp + -80<i32>, s1_35 | 0x10<32>)
	a1_75 = fp + -48<i32>
	a0_76 = fp + -80<i32>
l23065030:
	a1_75 = fp + -64<i32>
	a0_76 = (s0_106 + -1<i32> << 4<i32>) + s2_113
l2306503C:
	xor_128(a0_76, a1_75, fp + -96<i32>)
	word32 a3_282
	word32 a1_280
	word32 a0_279
	word32 t1_278
	word32 a5_284
	word32 a4_283
	word32 a2_281
	word32 ra_102 = memset(ra_33, fp + -128<i32>, 0<32>, 0x10<32>, out t1_278, out a0_279, out a1_280, out a2_281, out a3_282, out a4_283, out a5_284)
	word32 s1_105 = 0<32>
	word32 s0_107 = s0_106 + 0xFFFFFFFF<32>
l2306504E:
	branch s1_105 < s0_107 l230650AE
l230650AE:
	xor_128(fp + -128<i32>, (s1_105 << 4<u32>) + s2_113, fp + -112<i32>)
	word32 s10_277
	word32 s7_276
	word32 s3_275
	s2_113 = bl_aes_128(s4_123, out s3_275, out s4_123, out s7_276, out s10_277)
	s1_105 = s1_105 + 1<32>
l23065052:
	xor_128(fp + -128<i32>, fp + -96<i32>, fp + -112<i32>)
	word32 s10_170
	word32 s3_172
	word32 s4_173
	word32 s7_176
	word32 s2_171 = bl_aes_128(s4_123, out s3_172, out s4_173, out s7_176, out s10_170)
	word32 a5_187 = 0<32>
l2306506A:
	Mem197[s3_172 + a5_187:byte] = SLICE(CONVERT(Mem192[fp + -128<i32> + a5_187:byte], byte, word32), byte, 0)
	a5_187 = a5_187 + 1<32>
	branch a5_187 != 0x10<32> l2306506A
l23065080:
	s1Out = dwArg0118
	s2Out = s2_171
	s3Out = s3_172
	s4Out = s4_173
	s5Out = dwArgB4
	s7Out = s7_176
	s9Out = dwArg94
	s10Out = s10_170
	return ra_102
bl_aes_cmac_exit:


word32 BL_AES_MEMCMP(word32 a0, word32 a1, word32 a2, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      BL_AesUnWrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a2 a3 a4 a5 a6
// Preserved: sp
BL_AES_MEMCMP_entry:
l230650CA:
	word32 a5_18 = 0<32>
	a2_15 = a2
l230650CE:
	word32 a2_15
	branch a2 != a5_18 l230650DC
l230650DC:
	a3 = CONVERT(Mem0[a0 + a5_18:byte], byte, word32)
	branch a3 != CONVERT(Mem0[a1 + a5_18:byte], byte, word32) l230650F2
l230650F0:
	a2_15 = a2_15 + 0xFFFFFFFF<32>
l230650F2:
	a5_18 = a5_18 + 1<32>
l230650D2:
	a3Out = a3
	return 0<32> - CONVERT(a2_15 != 0<32>, bool, word32)
BL_AES_MEMCMP_exit:


void BL_AES_MEMSET(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      BL_AesWrap
//      BL_AesUnWrap
// MayUse:  a0:[0..31] a1:[0..7] a2:[0..31]
// LiveOut:
// Trashed: a0 a2
// Preserved: sp
BL_AES_MEMSET_entry:
l230650F6:
	word32 a2_5 = a2 + a0
l230650F8:
	branch a0 != a2_5 l230650FE
l230650FE:
	a0 = a0 + 1<32>
	Mem10[a0 + 4095<i32>:byte] = SLICE(a1, byte, 0)
l230650FC:
	return
BL_AES_MEMSET_exit:


void BL_AES_MEMCPY(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      BL_AesWrap
//      BL_AesUnWrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
BL_AES_MEMCPY_entry:
l23065106:
	branch a0 >=u a1 l23065138
l23065138:
	a2 = a2 + 0xFFFFFFFF<32>
	branch a2 != 0xFFFFFFFF<32> l23065128
l23065128:
	Mem15[a0 + a2:byte] = SLICE(CONVERT(Mem11[a1 + a2:byte], byte, word32), byte, 0)
l2306513E:
	return
l2306510C:
	word32 a5_16 = 0<32>
l2306510E:
	branch a5_16 != a2 l23065114
l23065114:
	Mem26[a0 + a5_16:byte] = SLICE(CONVERT(Mem21[a1 + a5_16:byte], byte, word32), byte, 0)
	a5_16 = a5_16 + 1<32>
l23065112:
	return
BL_AES_MEMCPY_exit:


word32 BL_AesEncrypt(word32 a0, word32 a1, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_aes_128
//      BL_AesWrap
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: s10 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 sp
BL_AesEncrypt_entry:
l23065140:
	word32 s1_29
	word32 s10_49
	word32 s3_51
	word32 s4_52
	word32 s5_53
	word32 s6_54
	word32 s7_55
	word32 s8_56
	word32 s2_84
	word32 s3_85
	word32 s2_50 = rijndael_encrypt(rijndael_set_key(fp + -416<i32>, a0, a1 << 6<u32>, 1<32>, out s1_29, out s2_84, out s3_85), s1_29, dwLoc0164, dwLocBC, dwLoc58, out s3_51, out s4_52, out s5_53, out s6_54, out s7_55, out s8_56, out s10_49)
	s3Out = s3_51
	s4Out = s4_52
	s5Out = s5_53
	s6Out = s6_54
	s7Out = s7_55
	s8Out = s8_56
	s10Out = s10_49
	return s2_50
BL_AesEncrypt_exit:


word32 BL_AesWrap(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, ptr32 & s0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Encrypt_keyData
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: ra s0 s10 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
BL_AesWrap_entry:
l2306517C:
	branch a2 == 0<32> l2306525C
l2306525C:
	s0Out = s0
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s10Out = s10
	return ra
l23065180:
	BL_AES_MEMSET(fp + -64<i32>, 0<32>, 0x10<32>)
	word32 s7_110 = a1
	word32 s6_109 = a0
	word32 s2_105 = a5
	word32 a1_44 = a4
	branch a4 != 0<32> l230651BE
l230651B6:
	a1_44 = 0x2308289C<32>
l230651BE:
	BL_AES_MEMCPY(fp + -72<i32>, a1_44, 8<32>)
	BL_AES_MEMCPY(a5 + 8<i32>, a3, a2 << 3<u32>)
	word32 s8_111 = a2 & 255<i32>
	word32 s3_106 = 0<32>
	word32 s5_108 = 6<32>
l230651DA:
	word32 s1_136 = 1<32>
l23065222:
	word32 s4_73 = (s1_136 << 3<u32>) + s2_105
	branch s1_136 != a2 + 1<32> l230651DE
l230651DE:
	BL_AES_MEMCPY(fp + -64<i32>, fp + -72<i32>, 8<32>)
	BL_AES_MEMCPY(fp + -56<i32>, s4_73, 8<32>)
	word32 s4_107
	s2_105 = BL_AesEncrypt(s6_109, s7_110, out s3_106, out s4_107, out s5_108, out s6_109, out s7_110, out s8_111, out s10)
	BL_AES_MEMCPY(fp + -72<i32>, fp + -64<i32>, 8<32>)
	BL_AES_MEMCPY(s4_107, fp + -56<i32>, 8<32>)
	s1_136 = s1_136 + 1<32>
l2306522C:
	s5_108 = s5_108 + 0xFFFFFFFF<32>
	s3_106 = s3_106 + s8_111 & 255<i32>
	branch s5_108 != 0<32> l230651DA
l23065238:
	BL_AES_MEMCPY(s2_105, fp + -72<i32>, 8<32>)
	s0Out = dwArgCC
	s2Out = s2_105
	s3Out = s3_106
	s5Out = s5_108
	s10Out = s10
	return dwLoc08
BL_AesWrap_exit:


word32 BL_AesUnWrap(word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_ApplyKEK
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut: a3 s10 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 sp
BL_AesUnWrap_entry:
l23065260:
	branch a2 == 0<32> l23065388
l23065388:
	s9Out = s9
	s10Out = s10
	return a3
l23065264:
	BL_AES_MEMSET(fp + -472<i32>, 0<32>, 8<32>)
	BL_AES_MEMSET(fp + -464<i32>, 0<32>, 0x10<32>)
	BL_AES_MEMCPY(fp + -472<i32>, a3, 8<32>)
	BL_AES_MEMCPY(a5, a3 + 8<i32>, a2 << 3<u32>)
	word32 s3_129
	word32 s2_128
	word32 s1_126
	rijndael_set_key(fp + -448<i32>, a0, a1 << 6<u32>, 0<32>, out s1_126, out s2_128, out s3_129)
	word32 s6_132 = 6<32>
l230652E6:
	word32 s4_159 = s2_128
	word32 s5_104 = s1_126
l230652EA:
	branch s4_159 > 0<32> l23065342
l23065342:
	BL_AES_MEMCPY(fp + -464<i32>, fp + -472<i32>, 8<32>)
	BL_AES_MEMCPY(fp + -456<i32>, s5_104, 8<32>)
	word32 s4_130
	word32 s5_131
	s1_126 = rijndael_decrypt(fp + -464<i32>, fp + -464<i32>, dwLoc01A4, dwLocFC, dwLoc98, out s2_128, out s3_129, out s4_130, out s5_131, out s6_132, out s9, out s10)
	BL_AES_MEMCPY(fp + -472<i32>, fp + -464<i32>, 8<32>)
	BL_AES_MEMCPY(s5_131, fp + -456<i32>, 8<32>)
	s5_104 = s5_131 + 0xFFFFFFF8<32>
	s4_159 = s4_130 + 0xFFFFFFFF<32>
l230652EE:
	s6_132 = s6_132 + 0xFFFFFFFF<32>
	branch s6_132 != 0<32> l230652E6
l230652FC:
	word32 a0_171 = s3_129
	branch s3_129 != 0<32> l2306530E
l23065306:
	a0_171 = 0x2308289C<32>
l2306530E:
	word32 a3_179
	BL_AES_MEMCMP(a0_171, fp + -472<i32>, 8<32>, out a3_179)
	s9Out = s9
	s10Out = s10
	return a3_179
BL_AesUnWrap_exit:


void Bl_hmac_md5(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ComputeEAPOL_MIC
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s8 t0 t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
Bl_hmac_md5_entry:
l2306538C:
	word32 s1_26 = a2
	word32 s3_28 = a3
	branch a3 <= 64<i32> l230653DE
l230653C2:
	word32 s3_399
	word32 s4_400
	word32 s1_396
	word32 a5_397
	word32 s2_398
	wpa_MD5Update(ra, a2, a3, wpa_MD5Init(fp + -584<i32>), dwLoc0234, dwLoc0208, dwLoc01B8, dwLoc0128, out s1_396, out a5_397, out s2_398, out s3_399, out s4_400)
	word32 s2_402
	word32 s3_403
	word32 s1_401
	ra = wpa_MD5Final(ra, fp + -584<i32>, dwLoc0228, dwLoc01D8, dwLoc0148, out s1_401, out s2_402, out s3_403)
	s3_28 = 0x10<32>
	s1_26 = fp + -280<i32>
l230653DE:
	word32 a5_390
	word32 a2_387
	word32 a3_388
	word32 a4_389
	word32 t1_384
	word32 a0_385
	word32 a1_386
	word32 ra_92 = memset(ra, fp + -432<i32>, 0<32>, 64<i32>, out t1_384, out a0_385, out a1_386, out a2_387, out a3_388, out a4_389, out a5_390)
	word32 a5_393
	word32 a6_394
	word32 a7_395
	word32 a2_391
	word32 a3_392
	word32 a4_100
	memcpy(fp + -432<i32>, s1_26, s3_28, out a2_391, out a3_392, out a4_100, out a5_393, out a6_394, out a7_395)
l23065404:
	word32 a5_120 = Mem119[a4_100:word32]
	a4_100 = a4_100 ^ 0x36363636<32>
	Mem124[a5_120 + 0x1000<32>:word32] = a4_100
	branch a5_120 + 4<32> != fp + -368<i32> l23065404
l23065412:
	word32 a5_138
	word32 s2_405
	word32 s3_406
	word32 s4_407
	word32 s1_404
	wpa_MD5Update(ra_92, fp + -432<i32>, 64<i32>, wpa_MD5Init(fp + -368<i32>), dwLoc0234, dwLoc0208, dwLoc01B8, dwLoc0128, out s1_404, out a5_138, out s2_405, out s3_406, out s4_407)
	word32 s2_170
	word32 s4_411
	word32 s3_410
	word32 a5_409
	word32 s1_408
	wpa_MD5Update(ra_92, a0, a1, a5_138, dwLoc0234, dwLoc0208, dwLoc01B8, dwLoc0128, out s1_408, out a5_409, out s2_170, out s3_410, out s4_411)
	word32 s1_192
	word32 s2_193
	word32 s3_194
	word32 a4_417
	word32 a5_418
	word32 a2_415
	word32 a3_416
	word32 a1_414
	word32 a0_413
	word32 t1_412
	word32 ra_212 = memset(wpa_MD5Final(ra_92, s2_170, dwLoc0228, dwLoc01D8, dwLoc0148, out s1_192, out s2_193, out s3_194), fp + -432<i32>, 0<32>, 64<i32>, out t1_412, out a0_413, out a1_414, out a2_415, out a3_416, out a4_417, out a5_418)
	word32 a7_423
	word32 a4_421
	word32 a6_422
	word32 a2_419
	word32 a3_420
	word32 a5_219
	memcpy(fp + -432<i32>, s1_192, s3_194, out a2_419, out a3_420, out a4_421, out a5_219, out a6_422, out a7_423)
l23065454:
	word32 s0_235 = Mem234[a5_219:word32]
	a5_219 = a5_219 ^ 0x5C5C5C5C<32>
	Mem239[s0_235 + 0x1000<32>:word32] = a5_219
	branch s0_235 + 4<32> != s2_193 l23065454
l23065462:
	word32 a5_253
	word32 s4_260
	word32 s2_425
	word32 s3_426
	word32 s1_424
	wpa_MD5Update(ra_212, fp + -432<i32>, 64<i32>, wpa_MD5Init(s0_235 + 4<32>), dwLoc0234, dwLoc0208, dwLoc01B8, dwLoc0128, out s1_424, out a5_253, out s2_425, out s3_426, out s4_260)
	word32 s1_427
	word32 a5_428
	word32 s2_429
	word32 s3_430
	word32 s4_431
	word32 s1_432
	word32 s2_433
	word32 s3_434
	wpa_MD5Final(ra_212, wpa_MD5Update(ra_212, s4_260, 0x10<32>, a5_253, dwLoc0234, dwLoc0208, dwLoc01B8, dwLoc0128, out s1_427, out a5_428, out s2_429, out s3_430, out s4_431), dwLoc0228, dwLoc01D8, dwLoc0148, out s1_432, out s2_433, out s3_434)
	return
Bl_hmac_md5_exit:


word32 Bl_hmac_sha1(word32 ra, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ComputeEAPOL_MIC
//      Bl_F
//      Bl_PRF
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
Bl_hmac_sha1_entry:
l230654AC:
	word32 s2_36 = a3
	word32 s1_38 = a4
	branch a4 <= 64<i32> l2306550A
l230654F0:
	Bl_SHA1Init(fp + -364<i32>)
	word32 a2_417
	word32 s3_418
	word32 a1_416
	Bl_SHA1Update(fp + -364<i32>, a3, a4, dwLoc98, out a1_416, out a2_417, out s2_36, out s3_418)
	word32 s1_419
	ra = Bl_SHA1Final(ra, fp + -364<i32>, s2_36, out s1_419)
	s1_38 = 0x14<32>
l2306550A:
	word32 t1_404
	word32 a4_409
	word32 a5_410
	word32 a0_405
	word32 a1_406
	word32 a2_407
	word32 a3_408
	word32 ra_91 = memset(ra, fp + -448<i32>, 0<32>, 64<i32>, out t1_404, out a0_405, out a1_406, out a2_407, out a3_408, out a4_409, out a5_410)
	word32 a5_413
	word32 a6_414
	word32 a7_415
	word32 a2_411
	word32 a4_412
	word32 a3_104
	memcpy(fp + -448<i32>, s2_36, s1_38, out a2_411, out a3_104, out a4_412, out a5_413, out a6_414, out a7_415)
l23065530:
	word32 a5_119 = Mem118[a3_104:word32]
	Mem123[a5_119 + 0x1000<32>:word32] = a3_104 ^ 0x36363636<32>
	word32 a3_124 = Mem123[a5_119 + 4<32>:int32]
	Mem126[a5_119 + 0x1004<32>:word32] = a3_124 ^ 0x36363636<32>
	a3_104 = a3_124 ^ 0x36363636<32>
	branch a5_119 + 8<32> != fp + -384<i32> l23065530
l23065548:
	Bl_SHA1Init(fp + -364<i32>)
	word32 s3_420
	word32 a2_136
	word32 a1_144
	word32 s2_142
	Bl_SHA1Update(fp + -364<i32>, fp + -448<i32>, 64<i32>, dwLoc98, out a1_144, out a2_136, out s2_142, out s3_420)
	word32 s3_154 = 0<32>
l2306555C:
	branch s3_154 < a2 l230655FC
l230655FC:
	Bl_SHA1Update(fp + -364<i32>, a1_144, a2_136, dwLoc98, out a1_144, out a2_136, out s2_142, out s3_154)
l23065560:
	word32 s1_197
	word32 a3_425
	word32 a4_426
	word32 a5_427
	word32 t1_421
	word32 a0_422
	word32 a1_423
	word32 a2_424
	word32 ra_210 = memset(Bl_SHA1Final(ra_91, fp + -364<i32>, fp + -384<i32>, out s1_197), fp + -448<i32>, 0<32>, 64<i32>, out t1_421, out a0_422, out a1_423, out a2_424, out a3_425, out a4_426, out a5_427)
	word32 a3_429
	word32 a5_430
	word32 a6_431
	word32 a7_432
	word32 a2_428
	word32 a4_217
	memcpy(fp + -448<i32>, s2_142, s1_197, out a2_428, out a3_429, out a4_217, out a5_430, out a6_431, out a7_432)
l23065586:
	word32 s0_234 = Mem233[a4_217:word32]
	Mem238[s0_234 + 0x1000<32>:word32] = a4_217 ^ 0x5C5C5C5C<32>
	word32 a4_239 = Mem238[s0_234 + 4<32>:int32]
	Mem241[s0_234 + 0x1004<32>:word32] = a4_239 ^ 0x5C5C5C5C<32>
	a4_217 = a4_239 ^ 0x5C5C5C5C<32>
	branch s0_234 + 8<32> != fp + -384<i32> l23065586
l2306559E:
	Bl_SHA1Init(fp + -364<i32>)
	word32 a1_437
	word32 a2_438
	word32 s2_439
	word32 s3_440
	word32 a1_433
	word32 a2_434
	word32 s2_435
	word32 s3_436
	word32 s0_274 = Bl_SHA1Update(fp + -364<i32>, Bl_SHA1Update(fp + -364<i32>, fp + -448<i32>, 64<i32>, dwLoc98, out a1_433, out a2_434, out s2_435, out s3_436), 0x14<32>, dwLoc98, out a1_437, out a2_438, out s2_439, out s3_440)
	word32 s1_441
	Bl_SHA1Final(ra_210, fp + -364<i32>, s0_274, out s1_441)
	word32 a4_444
	word32 a3_443
	word32 a2_442
	word32 a6_445
	word32 a7_446
	word32 a5_317
	memcpy(a5, s0_274, a6, out a2_442, out a3_443, out a4_444, out a5_317, out a6_445, out a7_446)
	return a5_317
Bl_hmac_sha1_exit:


word32 Bl_PRF(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 dwArg34, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmt_DerivePTK
//      GenerateGTK_internal
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31] Stack +0034:[0..31]
// LiveOut: ra s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
Bl_PRF_entry:
l23065614:
	word32 a5_116
	word32 s0_140 = a3
	word32 t1_267
	word32 a0_268
	word32 a1_269
	word32 a2_270
	word32 a3_271
	word32 a4_272
	word32 a5_273
	word32 ra_53 = memset(ra, fp + -168<i32>, 0<32>, 120<i32>, out t1_267, out a0_268, out a1_269, out a2_270, out a3_271, out a4_272, out a5_273)
	branch a2 == 0<32> l230656BE
l230656BE:
	word32 a2_274
	word32 a3_275
	word32 a4_276
	word32 a6_277
	word32 a7_278
	memcpy(fp + -168<i32>, a4, a5, out a2_274, out a3_275, out a4_276, out a5_116, out a6_277, out a7_278)
l23065652:
	word32 a2_279
	word32 a3_280
	word32 a4_281
	word32 a5_282
	word32 a6_283
	word32 a7_284
	memcpy(fp + -168<i32>, a2, a3, out a2_279, out a3_280, out a4_281, out a5_282, out a6_283, out a7_284)
	Mem96[fp + -48<i32> + a3 + 3976<i32>:byte] = 0<8>
	word32 a2_285
	word32 a3_286
	word32 a4_287
	word32 a6_288
	word32 a7_289
	memcpy(fp + -168<i32> + (a3 + 1<32>), a4, a5, out a2_285, out a3_286, out a4_287, out a5_116, out a6_288, out a7_289)
	s0_140 = a3 + 1<32> + a5
l23065676:
	0<32> = dwArg34
	Mem122[fp + -48<i32> + a5_116 + 3976<i32>:byte] = 0<8>
	word32 s6_121 = a7 + 19<i32> ^ 0x14<32>
	word32 s7_123 = 0<32>
	word32 s5_124 = 0xFFFFFFEC<32>
l23065696:
	word32 a5_131 = s5_124 + 0<32> + a7
	branch s5_124 < s6_121 l230656CC
l230656CC:
	word32 s0_135 = CONVERT(SLICE(a5_131, byte, 0), byte, int32)
	branch CONVERT(SLICE(a5_131, byte, 0), byte, int32) <= 0x14<32> l230656D4
l230656D2:
	s0_135 = 0x14<32>
l230656D4:
	word32 s0_139 = s0_135 << 24<i32>
	word32 a5_165 = Bl_hmac_sha1(ra_53, 1<32>, a0, a1, a6 + s7_123, s0_139 >> 24<i32>)
	0<32> = dwArg34
	word32 a5_180 = a5_165 + 0xFFFFFFFF<32> + (fp + -48<i32>)
	Mem185[a5_180 + 3976<i32>:byte] = SLICE(CONVERT(Mem176[a5_180 + -120<i32>:byte], byte, word32) + 1<32>, byte, 0)
	s0_140 = s0_139 >> 24<i32>
	s7_123 = s7_123 + (s0_139 >> 24<i32>)
	s5_124 = s5_124 + 1<32>
l230656A4:
	s0Out = s0_140
	s1Out = a7
	s4Out = a6
	return ra_53
Bl_PRF_exit:


word32 set_psk(word32 ra, word32 mstatus, word32 dwArg38, word32 dwArg78, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_add
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
set_psk_entry:
l23065704:
	word32 s3_42
	word32 s1_142
	word32 a2_143
	word32 a5_144
	word32 a6_145
	word32 s2_146
	word32 s4_147
	word32 s5_148
	word32 s6_149
	word32 s7_150
	word32 s8_151
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_142, out a2_143, out a5_144, out a6_145, out s2_146, out s3_42, out s4_147, out s5_148, out s6_149, out s7_150, out s8_151)
	word32 t1_152
	word32 a0_153
	word32 a1_154
	word32 a2_155
	word32 a3_156
	word32 a4_157
	word32 a5_158
	word32 ra_56 = memset(ra, 0x42045EA4<32>, 255<i32>, 67<i32>, out t1_152, out a0_153, out a1_154, out a2_155, out a3_156, out a4_157, out a5_158)
	word32 a1_159
	word32 a2_160
	word32 a3_161
	word32 a4_162
	word32 a5_163
	strlen(s3_42, out a1_159, out a2_160, out a3_161, out a4_162, out a5_163)
	word32 s2_164
	pmkCacheSetPassphrase(ra_56, mstatus, dwLoc08, dwArg38, dwArg78, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s2_164)
l2306578A_thunk_dbg_test_print:
	word32 s1_104
	word32 s4_105
	word32 s2_109
	word32 s3_110
	word32 a2_165
	word32 a5_166
	word32 a6_167
	word32 s5_168
	word32 s6_169
	word32 s7_170
	word32 s8_171
	word32 s0_103 = dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_104, out a2_165, out a5_166, out a6_167, out s2_109, out s3_110, out s4_105, out s5_168, out s6_169, out s7_170, out s8_171)
	s1Out = s1_104
	s2Out = s2_109
	s3Out = s3_110
	s4Out = s4_105
	return s0_103
set_psk_exit:


word32 remove_psk(word32 ra, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0158, word32 dwArg0178, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_del
// MayUse:  ra:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: s1 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
remove_psk_entry:
l2306578E:
	word32 s1_106
	word32 a2_107
	word32 a5_108
	word32 a6_109
	word32 s2_110
	word32 s3_111
	word32 s4_112
	word32 s5_113
	word32 s6_114
	word32 s7_115
	word32 s8_116
	dbg_test_print(0x2307C3BC<32>, dwArg0158, out s1_106, out a2_107, out a5_108, out a6_109, out s2_110, out s3_111, out s4_112, out s5_113, out s6_114, out s7_115, out s8_116)
	word32 s2_117
	pmkCacheDeletePSK(ra, dwArgF8, dwArg0108, dwArg0118, dwArg0148, dwArg0158, out s2_117)
l230657EE_thunk_dbg_test_print:
	word32 s1_78
	word32 s3_84
	word32 s6_86
	word32 a2_118
	word32 a5_119
	word32 a6_120
	word32 s2_121
	word32 s4_122
	word32 s5_123
	word32 s7_124
	word32 s8_125
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_78, out a2_118, out a5_119, out a6_120, out s2_121, out s3_84, out s4_122, out s5_123, out s6_86, out s7_124, out s8_125)
	s3Out = s3_84
	s6Out = s6_86
	return s1_78
remove_psk_exit:


word32 wpa_MD5Transform(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 dwArg3C, word32 dwArgB8, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wpa_MD5Update
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +003C:[0..31] Stack +00B8:[0..31] Stack +0148:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
wpa_MD5Transform_entry:
l230657F2:
	word32 s8_31 = Mem27[a1:int32]
	word32 s9_32 = Mem27[a0 + 8<i32>:int32]
	word32 s10_33 = Mem27[a0 + 12<i32>:int32]
	word32 a6_36 = Mem27[a0 + 4<i32>:int32]
	word32 a5_44 = ((s9_32 ^ s10_33) & a6_36 ^ s10_33) + (Mem27[a0:int32] + (s8_31 + 0xD76AA478<32>))
	word32 a5_51 = (a5_44 >>u 25<i32> | a5_44 << 7<u32>) + a6_36
	word32 a1_42 = Mem27[s1 + 4<i32>:word32]
	word32 a3_57 = ((a6_36 ^ s9_32) & a5_51 ^ s9_32) + ((s1 + 0xE8C7B756<32>) + s10_33)
	word32 t3_55 = Mem27[a1_42 + 8<i32>:int32]
	word32 a3_64 = (a3_57 >>u 20<i32> | a3_57 << 0xC<u32>) + a5_51
	word32 a2_69 = ((a6_36 ^ a5_51) & a3_64 ^ a6_36) + ((t3_55 + 0x242070DB<32>) + s9_32)
	word32 s3_70 = Mem27[a1_42 + 12<i32>:int32]
	word32 a2_78 = (a2_69 << 17<i32> | a2_69 >>u 0xF<u32>) + a3_64
	word32 a4_83 = ((a5_51 ^ a3_64) & a2_78 ^ a5_51) + ((s3_70 + 0xC1BDCEEE<32>) + a6_36)
	word32 t5_84 = Mem27[a1_42 + 16<i32>:int32]
	word32 a4_91 = (a4_83 << 22<i32> | a4_83 >>u 0xA<u32>) + a2_78
	word32 a5_96 = ((a3_64 ^ a2_78) & a4_91 ^ a3_64) + ((t5_84 + 0xF57C0FAF<32>) + a5_51)
	word32 s5_97 = Mem27[a1_42 + 20<i32>:int32]
	word32 a5_104 = (a5_96 >>u 25<i32> | a5_96 << 7<u32>) + a4_91
	word32 a3_109 = ((a2_78 ^ a4_91) & a5_104 ^ a2_78) + ((s5_97 + 0x4787C62A<32>) + a3_64)
	word32 t0_110 = Mem27[a1_42 + 24<i32>:int32]
	word32 a3_117 = (a3_109 >>u 20<i32> | a3_109 << 0xC<u32>) + a5_104
	word32 a2_122 = ((a4_91 ^ a5_104) & a3_117 ^ a4_91) + ((t0_110 + 0xA8304613<32>) + a2_78)
	word32 s7_123 = Mem27[a1_42 + 28<i32>:int32]
	word32 a2_130 = (a2_122 << 17<i32> | a2_122 >>u 0xF<u32>) + a3_117
	word32 a4_135 = ((a5_104 ^ a3_117) & a2_130 ^ a5_104) + ((s7_123 + 0xFD469501<32>) + a4_91)
	word32 a4_143 = (a4_135 << 22<i32> | a4_135 >>u 0xA<u32>) + a2_130
	word32 a0_136 = Mem27[s0 + 32<i32>:word32]
	word32 a5_148 = ((a3_117 ^ a2_130) & a4_143 ^ a3_117) + ((s0 + 0x698098D8<32>) + a5_104)
	word32 t1_149 = Mem27[a0_136 + 36<i32>:int32]
	word32 a5_156 = (a5_148 >>u 25<i32> | a5_148 << 7<u32>) + a4_143
	word32 a3_161 = ((a2_130 ^ a4_143) & a5_156 ^ a2_130) + ((t1_149 + 0x8B44F7AF<32>) + a3_117)
	word32 s2_162 = Mem27[a0_136 + 40<i32>:int32]
	word32 a3_169 = (a3_161 >>u 20<i32> | a3_161 << 0xC<u32>) + a5_156
	word32 a2_174 = ((a4_143 ^ a5_156) & a3_169 ^ a4_143) + ((s2_162 + 0xF5FFFBB1<32>) + a2_130)
	word32 t4_175 = Mem27[a0_136 + 44<i32>:int32]
	word32 a2_182 = (a2_174 << 17<i32> | a2_174 >>u 0xF<u32>) + a3_169
	word32 a4_187 = ((a5_156 ^ a3_169) & a2_182 ^ a5_156) + ((t4_175 + 0x895CD7BE<32>) + a4_143)
	word32 s4_188 = Mem27[a0_136 + 48<i32>:int32]
	word32 a4_195 = (a4_187 << 22<i32> | a4_187 >>u 0xA<u32>) + a2_182
	word32 a5_200 = ((a3_169 ^ a2_182) & a4_195 ^ a3_169) + ((s4_188 + 0x6B901122<32>) + a5_156)
	word32 t6_201 = Mem27[a0_136 + 52<i32>:int32]
	word32 a5_208 = (a5_200 >>u 25<i32> | a5_200 << 7<u32>) + a4_195
	word32 a3_213 = ((a2_182 ^ a4_195) & a5_208 ^ a2_182) + ((t6_201 + 0xFD987193<32>) + a3_169)
	word32 s6_214 = Mem27[a0_136 + 56<i32>:int32]
	word32 a3_221 = (a3_213 >>u 20<i32> | a3_213 << 0xC<u32>) + a5_208
	word32 a2_226 = ((a4_195 ^ a5_208) & a3_221 ^ a4_195) + ((s6_214 + 0xA679438E<32>) + a2_182)
	word32 t2_227 = Mem27[a0_136 + 60<i32>:int32]
	word32 a2_234 = (a2_226 << 17<i32> | a2_226 >>u 0xF<u32>) + a3_221
	word32 a4_239 = ((a5_208 ^ a3_221) & a2_234 ^ a5_208) + ((t2_227 + 0x49B40821<32>) + a4_195)
	word32 a4_245 = (a4_239 << 22<i32> | a4_239 >>u 0xA<u32>) + a2_234
	word32 a5_251 = ((a2_234 ^ a4_245) & a3_221 ^ a2_234) + ((s1 + 0xF61E2562<32>) + a5_208)
	word32 a5_257 = (a5_251 >>u 27<i32> | a5_251 << 5<u32>) + a4_245
	word32 a3_263 = ((a4_245 ^ a5_257) & a2_234 ^ a4_245) + ((t0_110 + 0xC040B340<32>) + a3_221)
	word32 a3_269 = (a3_263 >>u 23<i32> | a3_263 << 9<u32>) + a5_257
	word32 a2_275 = ((a5_257 ^ a3_269) & a4_245 ^ a5_257) + ((t4_175 + 0x265E5A51<32>) + a2_234)
	word32 a2_281 = (a2_275 >>u 18<i32> | a2_275 << 0xE<u32>) + a3_269
	word32 a4_287 = ((a3_269 ^ a2_281) & a5_257 ^ a3_269) + ((s8_31 + 0xE9B6C7AA<32>) + a4_245)
	word32 a4_293 = (a4_287 << 20<i32> | a4_287 >>u 0xC<u32>) + a2_281
	word32 a5_299 = ((a2_281 ^ a4_293) & a3_269 ^ a2_281) + ((s5_97 + 0xD62F105D<32>) + a5_257)
	word32 a5_305 = (a5_299 >>u 27<i32> | a5_299 << 5<u32>) + a4_293
	word32 a3_311 = ((a4_293 ^ a5_305) & a2_281 ^ a4_293) + ((s2_162 + 0x2441453<32>) + a3_269)
	word32 a3_317 = (a3_311 >>u 23<i32> | a3_311 << 9<u32>) + a5_305
	word32 a2_323 = ((a5_305 ^ a3_317) & a4_293 ^ a5_305) + ((t2_227 + 0xD8A1E681<32>) + a2_281)
	word32 a2_329 = (a2_323 >>u 18<i32> | a2_323 << 0xE<u32>) + a3_317
	word32 a4_335 = ((a3_317 ^ a2_329) & a5_305 ^ a3_317) + ((t5_84 + 0xE7D3FBC8<32>) + a4_293)
	word32 a4_341 = (a4_335 << 20<i32> | a4_335 >>u 0xC<u32>) + a2_329
	word32 a5_347 = ((a2_329 ^ a4_341) & a3_317 ^ a2_329) + ((t1_149 + 0x21E1CDE6<32>) + a5_305)
	word32 a5_353 = (a5_347 >>u 27<i32> | a5_347 << 5<u32>) + a4_341
	word32 a3_359 = ((a4_341 ^ a5_353) & a2_329 ^ a4_341) + ((s6_214 + 0xC33707D6<32>) + a3_317)
	word32 a3_365 = (a3_359 >>u 23<i32> | a3_359 << 9<u32>) + a5_353
	word32 a2_371 = ((a5_353 ^ a3_365) & a4_341 ^ a5_353) + ((s3_70 + 0xF4D50D87<32>) + a2_329)
	word32 a2_377 = (a2_371 >>u 18<i32> | a2_371 << 0xE<u32>) + a3_365
	word32 a4_383 = ((a3_365 ^ a2_377) & a5_353 ^ a3_365) + ((s0 + 0x455A14ED<32>) + a4_341)
	word32 a4_389 = (a4_383 << 20<i32> | a4_383 >>u 0xC<u32>) + a2_377
	word32 a5_395 = ((a2_377 ^ a4_389) & a3_365 ^ a2_377) + ((t6_201 + 0xA9E3E905<32>) + a5_353)
	word32 a5_401 = (a5_395 >>u 27<i32> | a5_395 << 5<u32>) + a4_389
	word32 a3_407 = ((a4_389 ^ a5_401) & a2_377 ^ a4_389) + ((t3_55 + 0xFCEFA3F8<32>) + a3_365)
	word32 a3_413 = (a3_407 >>u 23<i32> | a3_407 << 9<u32>) + a5_401
	word32 a1_419 = ((a5_401 ^ a3_413) & a4_389 ^ a5_401) + (a2_377 + (s7_123 + 0x676F02D9<32>))
	word32 a1_424 = (a1_419 >>u 18<i32> | a1_419 << 0xE<u32>) + a3_413
	word32 a2_426 = a3_413 ^ a1_424
	word32 a4_431 = (a5_401 & a2_426 ^ a3_413) + ((s4_188 + 0x8D2A4C8A<32>) + a4_389)
	word32 a4_437 = (a4_431 << 20<i32> | a4_431 >>u 0xC<u32>) + a1_424
	word32 a5_441 = a5_401 + (s5_97 + 0xFFFA3942<32>) + (a2_426 ^ a4_437)
	word32 a5_448 = (a5_441 >>u 28<i32> | a5_441 << 4<u32>) + a4_437
	word32 a3_452 = (a1_424 ^ a4_437 ^ a5_448) + ((s0 + 0x8771F681<32>) + a3_413)
	word32 a3_459 = (a3_452 >>u 21<i32> | a3_452 << 0xB<u32>) + a5_448
	word32 a1_463 = (a4_437 ^ a5_448 ^ a3_459) + ((t4_175 + 0x6D9D6122<32>) + a1_424)
	word32 a1_470 = (a1_463 >>u 16<i32> | a1_463 << 0x10<u32>) + a3_459
	word32 a4_474 = (a5_448 ^ a3_459 ^ a1_470) + ((s6_214 + 0xFDE5380C<32>) + a4_437)
	word32 a4_481 = (a4_474 << 23<i32> | a4_474 >>u 9<u32>) + a1_470
	word32 a5_485 = (a3_459 ^ a1_470 ^ a4_481) + ((s1 + 0xA4BEEA44<32>) + a5_448)
	word32 a5_492 = (a5_485 >>u 28<i32> | a5_485 << 4<u32>) + a4_481
	word32 a2_496 = (a1_470 ^ a4_481 ^ a5_492) + (a3_459 + (t5_84 + 0x4BDECFA9<32>))
	word32 a2_503 = (a2_496 >>u 21<i32> | a2_496 << 0xB<u32>) + a5_492
	word32 a3_507 = (a4_481 ^ a5_492 ^ a2_503) + (a1_470 + (s7_123 + 0xF6BB4B60<32>))
	word32 a3_514 = (a3_507 >>u 16<i32> | a3_507 << 0x10<u32>) + a2_503
	word32 a4_518 = (a5_492 ^ a2_503 ^ a3_514) + ((s2_162 + 0xBEBFBC70<32>) + a4_481)
	word32 a4_525 = (a4_518 << 23<i32> | a4_518 >>u 9<u32>) + a3_514
	word32 a1_529 = (a2_503 ^ a3_514 ^ a4_525) + (a5_492 + (t6_201 + 0x289B7EC6<32>))
	word32 a1_536 = (a1_529 >>u 28<i32> | a1_529 << 4<u32>) + a4_525
	word32 a5_540 = (a3_514 ^ a4_525 ^ a1_536) + (a2_503 + (s8_31 + 0xEAA127FA<32>))
	word32 a5_547 = (a5_540 >>u 21<i32> | a5_540 << 0xB<u32>) + a1_536
	word32 a3_551 = (a4_525 ^ a1_536 ^ a5_547) + ((s3_70 + 0xD4EF3085<32>) + a3_514)
	word32 a3_558 = (a3_551 >>u 16<i32> | a3_551 << 0x10<u32>) + a5_547
	word32 a2_562 = (a1_536 ^ a5_547 ^ a3_558) + (a4_525 + (t0_110 + 0x4881D05<32>))
	word32 a2_569 = (a2_562 << 23<i32> | a2_562 >>u 9<u32>) + a3_558
	word32 a4_573 = (a5_547 ^ a3_558 ^ a2_569) + (a1_536 + (t1_149 + 0xD9D4D039<32>))
	word32 a4_580 = (a4_573 >>u 28<i32> | a4_573 << 4<u32>) + a2_569
	word32 a1_584 = (a3_558 ^ a2_569 ^ a4_580) + (a5_547 + (s4_188 + 0xE6DB99E5<32>))
	word32 a1_591 = (a1_584 >>u 21<i32> | a1_584 << 0xB<u32>) + a4_580
	word32 a3_595 = (a2_569 ^ a4_580 ^ a1_591) + ((t2_227 + 0x1FA27CF8<32>) + a3_558)
	word32 a3_602 = (a3_595 >>u 16<i32> | a3_595 << 0x10<u32>) + a1_591
	word32 a5_606 = (a4_580 ^ a1_591 ^ a3_602) + (a2_569 + (t3_55 + 0xC4AC5665<32>))
	word32 a5_613 = (a5_606 << 23<i32> | a5_606 >>u 9<u32>) + a3_602
	word32 a4_618 = ((~a1_591 | a5_613) ^ a3_602) + ((s8_31 + 0xF4292244<32>) + a4_580)
	word32 a4_625 = (a4_618 >>u 26<i32> | a4_618 << 6<u32>) + a5_613
	word32 a1_630 = ((~a3_602 | a4_625) ^ a5_613) + ((s7_123 + 0x432AFF97<32>) + a1_591)
	word32 a1_637 = (a1_630 >>u 22<i32> | a1_630 << 0xA<u32>) + a4_625
	word32 a3_642 = ((~a5_613 | a1_637) ^ a4_625) + ((s6_214 + 0xAB9423A7<32>) + a3_602)
	word32 a3_649 = (a3_642 >>u 17<i32> | a3_642 << 0xF<u32>) + a1_637
	word32 a2_654 = ((~a4_625 | a3_649) ^ a1_637) + (a5_613 + (s5_97 + 0xFC93A039<32>))
	word32 a2_661 = (a2_654 << 21<i32> | a2_654 >>u 0xB<u32>) + a3_649
	word32 a5_666 = ((~a1_637 | a2_661) ^ a3_649) + (a4_625 + (s4_188 + 0x655B59C3<32>))
	word32 a5_673 = (a5_666 >>u 26<i32> | a5_666 << 6<u32>) + a2_661
	word32 a4_678 = ((~a3_649 | a5_673) ^ a2_661) + (a1_637 + (s3_70 + 0x8F0CCC92<32>))
	word32 a4_685 = (a4_678 >>u 22<i32> | a4_678 << 0xA<u32>) + a5_673
	word32 s2_686 = s2_162 + 0xFFEFF47D<32> + a3_649
	word32 a3_690 = ((~a2_661 | a4_685) ^ a5_673) + s2_686
	word32 a3_697 = (a3_690 >>u 17<i32> | a3_690 << 0xF<u32>) + a4_685
	word32 s1_698 = s1 + 0x85845DD1<32> + a2_661
	word32 a2_702 = ((~a5_673 | a3_697) ^ a4_685) + s1_698
	word32 a2_709 = (a2_702 << 21<i32> | a2_702 >>u 0xB<u32>) + a3_697
	word32 s0_714 = ((~a4_685 | a2_709) ^ a3_697) + (a5_673 + (s0 + 0x6FA87E4F<32>))
	word32 s0_721 = (s0_714 >>u 26<i32> | s0_714 << 6<u32>) + a2_709
	word32 t2_726 = ((~a3_697 | s0_721) ^ a2_709) + (a4_685 + (t2_227 + 0xFE2CE6E0<32>))
	word32 t2_733 = (t2_726 >>u 0x16<u32> | t2_726 << 0xA<u32>) + s0_721
	word32 a1_738 = ((~a2_709 | t2_733) ^ s0_721) + (a3_697 + (t0_110 + 0xA3014314<32>))
	word32 a1_745 = (a1_738 >>u 17<i32> | a1_738 << 0xF<u32>) + t2_733
	word32 a2_750 = ((~s0_721 | a1_745) ^ t2_733) + ((t6_201 + 0x4E0811A1<32>) + a2_709)
	word32 a2_757 = (a2_750 << 21<i32> | a2_750 >>u 0xB<u32>) + a1_745
	word32 a5_762 = ((~t2_733 | a2_757) ^ a1_745) + (s0_721 + (t5_84 + 0xF7537E82<32>))
	word32 a5_769 = (a5_762 >>u 26<i32> | a5_762 << 6<u32>) + a2_757
	word32 a4_774 = ((~a1_745 | a5_769) ^ a2_757) + (t2_733 + (t4_175 + 0xBD3AF235<32>))
	word32 a4_781 = (a4_774 >>u 22<i32> | a4_774 << 0xA<u32>) + a5_769
	Mem801[a0:word32] = a5_769 + Mem27[a0:int32]
	word32 a3_786 = ((~a2_757 | a4_781) ^ a5_769) + (a1_745 + (t3_55 + 0x2AD7D2BB<32>))
	Mem808[a0 + 8<i32>:word32] = s9_32 + ((a3_786 >>u 17<i32> | a3_786 << 0xF<u32>) + a4_781)
	Mem809[a0 + 12<i32>:word32] = s10_33 + a4_781
	0<32> = dwArg0148
	0<32> = dwArg3C
	Mem819[a0 + 4<i32>:word32] = dwArgB8
l230660A4_thunk_memset:
	word32 t1_860
	word32 a0_861
	word32 a1_862
	word32 a2_863
	word32 a3_864
	word32 a4_865
	word32 a5_866
	word32 ra_830 = memset(ra, a0_136, 0<32>, 64<i32>, out t1_860, out a0_861, out a1_862, out a2_863, out a3_864, out a4_865, out a5_866)
	s0Out = dwLoc04
	s1Out = s1_698
	s2Out = s2_686
	s3Out = s3_70
	s4Out = dwArg98
	return ra_830
wpa_MD5Transform_exit:


word32 wpa_MD5Init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_hmac_md5
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
wpa_MD5Init_entry:
l230660A8:
	Mem6[0x67452301<32>:word32] = a0
	Mem9[0xEFCDAB8D<32>:word32] = a0
	Mem12[0x98BADD06<32>:word32] = a0
	Mem15[a0 + 20<i32>:word32] = 0<32>
	Mem16[a0 + 16<i32>:word32] = 0<32>
	Mem17[0x10325482<32>:word32] = a0
	return 0x10325476<32>
wpa_MD5Init_exit:


word32 wpa_MD5Update(word32 ra, word32 a1, word32 a2, word32 a5, word32 dwArg1C, word32 dwArg48, word32 dwArg98, word32 dwArg0128, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_hmac_md5
//      wpa_MD5Final
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] ra:[0..31] Stack +001C:[0..31] Stack +0048:[0..31] Stack +0098:[0..31] Stack +0128:[0..31]
// LiveOut: a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: ra s10 s11 s5 s6 s7 s9 sp t2 tp
wpa_MD5Update_entry:
l230660DA:
	word32 a5_22 = a5 + (a2 << 3<u32>)
	Mem23[a5_22 + 16<i32>:word32] = Mem15[a5 + 16<i32>:word32]
	word32 s3_135 = a1
	word32 s2_134 = a2
	word32 a0_151 = a5 >>u 3<u32> & 63<i32>
	branch a5_22 >=u a2 << 3<u32> l2306610A
l23066104:
	Mem30[a5_22 + 0x15<32>:word32] = Mem23[a5_22 + 20<i32>:word32]
l2306610A:
	word32 s1_150
	word32 s0_116 = Mem32[(a2 << 3<u32>) + 20<i32>:word32]
	Mem38[(a2 >>u 0x1D<u32>) + (a2 << 3<u32>) + 20<i32>:word32] = s0_116
	word32 s1_40 = 64<i32> - a0_151
	branch a2 <u s1_40 l23066180
l23066180:
	s1_150 = 0<32>
l2306611E:
	word32 a2_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	word32 a6_261
	word32 a7_262
	memcpy(a0_151 + 88<i32> + s0_116, a1, s1_40, out a2_257, out a3_258, out a4_259, out a5_260, out a6_261, out a7_262)
	word32 s4_263
	word32 ra_118 = wpa_MD5Transform(ra, s0_116, s1_40, s0_116, s0_116 + 88<i32>, dwArg1C, dwArg98, dwArg0128, out s0_116, out s1_150, out s2_134, out s3_135, out s4_263)
	word32 s4_100 = s0_116 + 24<i32>
l2306613A:
	word32 a1_97 = s3_135 + s1_150
	branch s1_150 + 63<i32> <u s2_134 l23066168
l23066168:
	word32 a2_264
	word32 a3_265
	word32 a4_266
	word32 a5_267
	word32 a6_268
	word32 a7_269
	memcpy(s4_100, a1_97, 64<i32>, out a2_264, out a3_265, out a4_266, out a5_267, out a6_268, out a7_269)
	word32 s1_131
	ra_118 = wpa_MD5Transform(ra_118, s0_116, s1_150, s0_116, s4_100, dwArg1C, dwArg98, dwArg0128, out s0_116, out s1_131, out s2_134, out s3_135, out s4_100)
	s1_150 = s1_131 + 64<i32>
l23066146:
	a0_151 = 0<32>
l23066148:
	word32 a0_155 = a0_151 + 88<i32> + s0_116
	word32 a1_161 = s3_135 + s1_150
l23066164_thunk_memcpy:
	word32 a5_169
	word32 a2_270
	word32 a3_271
	word32 a4_272
	word32 a6_273
	word32 a7_274
	memcpy(a0_155, a1_161, dwArg48, out a2_270, out a3_271, out a4_272, out a5_169, out a6_273, out a7_274)
	s1Out = s1_150
	a5Out = a5_169
	s2Out = s2_134
	s3Out = s3_135
	s4Out = dwArg04
	return s1
wpa_MD5Update_exit:


word32 wpa_MD5Final(word32 ra, word32 a1, word32 dwArg28, word32 dwArg78, word32 dwArg0108, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_hmac_md5
// MayUse:  a1:[0..31] ra:[0..31] Stack +0028:[0..31] Stack +0078:[0..31] Stack +0108:[0..31]
// LiveOut: ra s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
wpa_MD5Final_entry:
l23066184:
	word32 a5_34
	word32 a2_21
	word32 a6_144
	word32 a5_143
	word32 a4_142
	word32 a3_141
	word32 a7_145
	memcpy(fp + 0xFFFFFFE8<32>, a1 + 0x10<32>, 8<32>, out a2_21, out a3_141, out a4_142, out a5_143, out a6_144, out a7_145)
	word32 a2_33 = a2_21 >>u 3<i32> & 63<i32>
	branch a2_33 >u 55<i32> l230661EA
l230661EA:
	a5_34 = 120<i32>
l230661AA:
	a5_34 = 56<i32>
l230661AE:
	word32 a5_51
	word32 s1_146
	word32 s2_147
	word32 s3_148
	word32 s4_149
	wpa_MD5Update(ra, 0x2307FC90<32>, a5_34 - a2_33, a5_34, dwLoc04, dwArg28, dwArg78, dwArg0108, out s1_146, out a5_51, out s2_147, out s3_148, out s4_149)
	word32 s1_78
	word32 s2_79
	word32 s3_80
	word32 a5_150
	word32 s4_151
	word32 s0_77 = wpa_MD5Update(ra, fp + 0xFFFFFFE8<32>, 8<32>, a5_51, dwLoc04, dwArg28, dwArg78, dwArg0108, out s1_78, out a5_150, out s2_79, out s3_80, out s4_151)
	word32 a2_152
	word32 a3_153
	word32 a4_154
	word32 a5_155
	word32 a6_156
	word32 a7_157
	memcpy(s1_78, s0_77, 0x10<32>, out a2_152, out a3_153, out a4_154, out a5_155, out a6_156, out a7_157)
	word32 t1_158
	word32 a0_159
	word32 a1_160
	word32 a2_161
	word32 a3_162
	word32 a4_163
	word32 a5_164
	word32 ra_114 = memset(ra, s0_77, 0<32>, 152<i32>, out t1_158, out a0_159, out a1_160, out a2_161, out a3_162, out a4_163, out a5_164)
	s1Out = s1_78
	s2Out = s2_79
	s3Out = s3_80
	return ra_114
wpa_MD5Final_exit:


word32 rijndaelKeySetupEnc(word32 a0, word32 a1, word32 a2, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rijndael_set_key
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a3 a4 a5 a6
// Preserved: sp
rijndaelKeySetupEnc_entry:
l230661F0:
	Mem16[CONVERT(Mem0[a1:byte], byte, word32) << 24<i32> ^ CONVERT(Mem0[a1 + 1<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem0[a1 + 3<i32>:byte], byte, word32) ^ CONVERT(Mem0[a1 + 2<i32>:byte], byte, word32) << 8<i32>:word32] = a0
	Mem27[(CONVERT(Mem16[a1 + 4<i32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem16[a1 + 5<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem16[a1 + 7<i32>:byte], byte, word32) ^ CONVERT(Mem16[a1 + 6<i32>:byte], byte, word32) << 8<i32>) + 4<i32>:word32] = a0
	Mem38[(CONVERT(Mem27[a1 + 8<i32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem27[a1 + 9<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[a1 + 11<i32>:byte], byte, word32) ^ CONVERT(Mem27[a1 + 10<i32>:byte], byte, word32) << 8<i32>) + 8<i32>:word32] = a0
	Mem49[(CONVERT(Mem38[a1 + 12<i32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem38[a1 + 13<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem38[a1 + 15<i32>:byte], byte, word32) ^ CONVERT(Mem38[a1 + 14<i32>:byte], byte, word32) << 8<i32>) + 12<i32>:word32] = a0
	word32 a5_50 = 128<i32>
	branch a2 != 128<i32> l230662E6
l230662E6:
	a1Out = a1
	return 0<32>
l23066270:
l23066284:
	word32 a1_86 = CONVERT(Mem59[(a2 >>u 8<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32)
	word32 a5_88 = a5_50 ^ a1 ^ CONVERT(Mem59[(a2 >>u 0x18<u32>) + 0x23081DD0<32>:byte], byte, word32) ^ CONVERT(Mem59[(a2 & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 8<i32> ^ CONVERT(Mem59[(a2 >>u 0x10<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 24<i32> ^ a1_86 << 16<i32>
	Mem90[a5_88 + 16<i32>:word32] = Mem59[(a1_86 << 16<i32>) + 4<i32>:word32]
	word32 a5_91 = a5_88 ^ a1_86 << 16<i32>
	word32 a0_92 = Mem90[(a1_86 << 16<i32>) + 8<i32>:word32]
	Mem93[a5_91 + 20<i32>:word32] = a0_92
	word32 a5_94 = a5_91 ^ a1_86 << 16<i32>
	Mem95[a5_94 + 24<i32>:word32] = a0_92
	a5_50 = a5_94 ^ a2
	Mem97[a5_50 + 28<i32>:word32] = a0_92
	a1 = a1_86 << 16<i32>
	branch a0_92 == a0 + 144<i32> l230662EA
l230662EA:
	a1Out = a1_86 << 16<i32>
	return 0xA<32>
rijndaelKeySetupEnc_exit:
l230662E2:


word32 rijndael_set_key(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      BL_AesEncrypt
//      BL_AesUnWrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
rijndael_set_key_entry:
l230662EE:
	word32 a1_235
	word32 a0_26 = rijndaelKeySetupEnc(a0 + 8<i32>, a1, a2, out a1_235)
	Mem32[a0_26 + 4<i32>:word32] = a0
	word32 s1_190 = a0 + 8<i32>
	word32 s2_25 = a3
	branch a3 == 0<32> l23066328
l23066328:
	Mem34[1<32>:word32] = a0
	branch a0_26 != 0<32> l23066338
l2306632E:
	a0_26 = rijndaelKeySetupEnc(a0 + 8<i32>, a1, a2, out a1_235)
l23066338:
	word32 a4_219 = a0 + 8<i32>
	word32 a2_48 = a0_26 << 2<u32>
l23066344:
	word32 a3_53 = a2_48 - s2_25
	branch s2_25 < a3_53 l230664E2
l230664E2:
	word32 a5_58 = Mem57[a1_235 + 24<i32>:word32]
	Mem61[a1_235:word32] = Mem57[a3_53:word32]
	Mem62[a3_53 + 24<i32>:word32] = a5_58
	word32 a4_64 = Mem62[a3_53 + 4<i32>:word32]
	word32 a5_63 = Mem62[a1_235 + 28<i32>:word32]
	Mem66[a4_64 + 0x1004<32>:word32] = a1_235
	Mem67[a3_53 + 28<i32>:word32] = a5_63
	word32 a5_68 = Mem67[a1_235 + 32<i32>:word32]
	word32 a3_69 = Mem67[a4_64 + 8<32>:int32]
	Mem70[a4_64 + 0x1008<32>:word32] = a1_235
	Mem71[a3_69 + 32<i32>:word32] = a5_68
	word32 a5_72 = Mem71[a1_235 + 36<i32>:word32]
	word32 a3_73 = Mem71[a4_64 + 0xC<32>:int32]
	Mem74[a4_64 + 0x100C<32>:word32] = a1_235
	Mem75[a3_73 + 36<i32>:word32] = a5_72
	s2_25 = s2_25 + 4<32>
	a4_219 = a4_64 + 0x10<32>
l2306634E:
	word32 t1_81 = 1<32>
l23066378:
	branch t1_81 >= a0_26 l23066318
l2306637C:
	word32 a4_126 = Mem90[(CONVERT(Mem90[(a4_219 >>u 8<i32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230804D0<32>:word32] ^ ((Mem90[(CONVERT(Mem90[(a4_219 >>u 0x18<u32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x2307FCD0<32>:word32] ^ Mem90[(CONVERT(Mem90[(a4_219 & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230808D0<32>:int32]) ^ Mem90[(CONVERT(Mem90[(a4_219 >>u 0x10<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230800D0<32>:int32])
	Mem127[a4_126:word32] = Mem90[a4_219:word32]
	word32 a4_157 = Mem127[(CONVERT(Mem127[(a4_126 >>u 8<i32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230804D0<32>:word32] ^ ((Mem127[(CONVERT(Mem127[(a4_126 >>u 0x18<u32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x2307FCD0<32>:word32] ^ Mem127[(CONVERT(Mem127[(a4_126 & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230808D0<32>:int32]) ^ Mem127[(CONVERT(Mem127[(a4_126 >>u 0x10<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230800D0<32>:int32])
	Mem158[a4_157 + 4<i32>:word32] = Mem127[a4_126 + 4<i32>:word32]
	word32 a4_188 = Mem158[(CONVERT(Mem158[(a4_157 >>u 8<i32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230804D0<32>:word32] ^ ((Mem158[(CONVERT(Mem158[(a4_157 >>u 0x18<u32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x2307FCD0<32>:word32] ^ Mem158[(CONVERT(Mem158[(a4_157 & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230808D0<32>:int32]) ^ Mem158[(CONVERT(Mem158[(a4_157 >>u 0x10<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230800D0<32>:int32])
	Mem189[a4_188 + 8<i32>:word32] = Mem158[a4_157 + 8<i32>:word32]
	s1_190 = Mem189[a4_188 + 12<i32>:word32]
	a4_219 = Mem189[(CONVERT(Mem189[(a4_188 >>u 8<i32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230804D0<32>:word32] ^ ((Mem189[(CONVERT(Mem189[(a4_188 >>u 0x18<u32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x2307FCD0<32>:word32] ^ Mem189[(CONVERT(Mem189[(a4_188 & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230808D0<32>:int32]) ^ Mem189[(CONVERT(Mem189[(a4_188 >>u 0x10<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 2<i32>) + 0x230800D0<32>:int32])
	Mem220[a4_219 + 12<i32>:word32] = s1_190
	t1_81 = t1_81 + 1<32>
l23066314:
	Mem221[a0:word32] = 0<32>
l23066318:
	s1Out = s1_190
	s2Out = s2_25
	s3Out = a1
	return s1
rijndael_set_key_exit:


word32 rijndael_decrypt(word32 a1, word32 a2, word32 dwArg3C, word32 dwArgE4, word32 dwArg0148, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      BL_AesUnWrap
// MayUse:  a1:[0..31] a2:[0..31] Stack +003C:[0..31] Stack +00E4:[0..31] Stack +0148:[0..31]
// LiveOut: s1 s10 s2 s3 s4 s5 s6 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s11 sp
rijndael_decrypt_entry:
l23066512:
	word32 a3_82 = CONVERT(Mem27[a1 + 14<i32>:byte], byte, word32)
	word32 a0_356 = Mem27[(a3_82 << 8<i32>) + 20<i32>:word32]
	word32 a5_39 = CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32)
	word32 a5_57 = CONVERT(Mem27[a1 + 6<i32>:byte], byte, word32)
	word32 a5_72 = CONVERT(Mem27[a1 + 10<i32>:byte], byte, word32)
	word32 a6_86 = Mem27[a0_356 + 4<i32>:int32]
	word32 a0_44 = Mem27[(a5_39 << 8<i32>) + 8<i32>:word32]
	word32 a4_341 = CONVERT(Mem27[a1:byte], byte, word32) << 24<i32> ^ CONVERT(Mem27[a1 + 1<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32) ^ a5_39 << 8<i32> ^ a5_39 << 8<i32>
	word32 t3_364 = CONVERT(Mem27[a1 + 4<i32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem27[a1 + 5<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[a1 + 7<i32>:byte], byte, word32) ^ a5_57 << 8<i32> ^ a5_57 << 8<i32>
	word32 a7_119 = CONVERT(Mem27[a1 + 8<i32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem27[a1 + 9<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[a1 + 11<i32>:byte], byte, word32) ^ a5_72 << 8<i32> ^ a5_72 << 8<i32>
	word32 a5_110 = CONVERT(Mem27[a1 + 12<i32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem27[a1 + 13<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[a1 + 15<i32>:byte], byte, word32) ^ a3_82 << 8<i32> ^ a3_82 << 8<i32>
	word32 s7_136 = a6_86 >> 1<u32>
l230665EC:
	word32 a3_101 = Mem27[((t3_364 & 255<i32>) << 2<i32>) + 0x230808D0<32>:word32]
	word32 s0_105 = Mem27[a3_101 + 16<i32>:word32]
	word32 a0_127 = a0_356 ^ a3_101 ^ a3_101 ^ Mem27[(a5_110 >>u 0xE<u32> & 1020<i32>) + 0x230800D0<32>:word32] ^ Mem27[(a7_119 >>u 6<u32> & 1020<i32>) + 0x230804D0<32>:word32]
	s7_136 = s7_136 + 0xFFFFFFFF<32>
	word32 a1_152 = Mem27[(t3_364 >>u 0x18<u32> << 2<i32>) + 0x2307FCD0<32>:word32] ^ Mem27[((a7_119 & 255<i32>) << 2<i32>) + 0x230808D0<32>:word32] ^ Mem27[s0_105 + 20<i32>:int32] ^ Mem27[(a4_341 >>u 0xE<u32> & 1020<i32>) + 0x230800D0<32>:word32] ^ Mem27[(a5_110 >>u 6<u32> & 1020<i32>) + 0x230804D0<32>:word32]
	word32 a3_188 = Mem27[(a7_119 >>u 0x18<u32> << 2<i32>) + 0x2307FCD0<32>:word32] ^ Mem27[((a5_110 & 255<i32>) << 2<i32>) + 0x230808D0<32>:int32] ^ Mem27[s0_105 + 24<i32>:int32] ^ Mem27[(t3_364 >>u 0xE<u32> & 1020<i32>) + 0x230800D0<32>:int32] ^ Mem27[(a4_341 >>u 6<u32> & 1020<i32>) + 0x230804D0<32>:int32]
	word32 a5_190 = Mem27[(a5_110 >>u 24<i32> << 2<i32>) + 0x2307FCD0<32>:word32] ^ Mem27[((a4_341 & 255<i32>) << 2<i32>) + 0x230808D0<32>:word32] ^ Mem27[s0_105 + 28<i32>:int32] ^ Mem27[(a7_119 >>u 0xE<u32> & 1020<i32>) + 0x230800D0<32>:int32] ^ Mem27[(t3_364 >>u 6<u32> & 1020<i32>) + 0x230804D0<32>:int32]
	word32 s10_203 = Mem27[s0_105 + 32<i32>:int32]
	branch s7_136 == 0<32> l23066800
l23066800:
	word32 s9_215 = (a0_127 >>u 0x18<u32>) + 0x23080CD0<32>
	word32 s10_233 = CONVERT(Mem27[s9_215:byte], byte, word32) << 24<i32> ^ CONVERT(Mem27[(a5_190 >>u 0x10<u32> & 255<i32>) + 0x23080CD0<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[(a1_152 & 255<i32>) + 0x23080CD0<32>:byte], byte, word32) ^ CONVERT(Mem27[(a3_188 >>u 8<u32> & 255<i32>) + 0x23080CD0<32>:byte], byte, word32) << 8<i32> ^ s10_203
	Mem236[a2:byte] = SLICE(s10_233 >>u 0x18<u32>, byte, 0)
	Mem238[a2 + 1<i32>:byte] = SLICE(s10_233 >>u 0x10<u32>, byte, 0)
	Mem240[a2 + 2<i32>:byte] = SLICE(s10_233 >>u 8<u32>, byte, 0)
	word32 s6_229 = (a1_152 >>u 0x18<u32>) + 0x23080CD0<32>
	word32 s5_243 = (a3_188 & 255<i32>) + 0x23080CD0<32>
	word32 a4_246 = CONVERT(Mem240[s6_229:byte], byte, word32) << 24<i32> ^ CONVERT(Mem240[(a0_127 >>u 0x10<u32> & 255<i32>) + 0x23080CD0<32>:byte], byte, word32) << 16<i32>
	word32 a6_247 = CONVERT(Mem240[s5_243:byte], byte, word32)
	Mem249[a2 + 3<i32>:byte] = SLICE(s10_233, byte, 0)
	word32 s8_218 = a0_44 + 8<i32> + ((a6_86 >> 1<u32>) << 5<i32>)
	word32 a4_259 = a4_246 ^ a6_247 ^ CONVERT(Mem249[(a5_190 >>u 8<u32> & 255<i32>) + 0x23080CD0<32>:byte], byte, word32) << 8<i32> ^ Mem249[s8_218 + 4<i32>:int32]
	Mem261[a2 + 4<i32>:byte] = SLICE(a4_259 >>u 0x18<u32>, byte, 0)
	Mem263[a2 + 5<i32>:byte] = SLICE(a4_259 >>u 0x10<u32>, byte, 0)
	Mem265[a2 + 6<i32>:byte] = SLICE(a4_259 >>u 8<u32>, byte, 0)
	Mem266[a2 + 7<i32>:byte] = SLICE(a4_259, byte, 0)
	word32 s3_257 = (a5_190 & 255<i32>) + 0x23080CD0<32>
	word32 a5_275 = CONVERT(Mem266[(a5_190 >>u 24<i32>) + 0x23080CD0<32>:byte], byte, word32)
	word32 a4_284 = CONVERT(Mem266[(a3_188 >>u 0x18<u32>) + 0x23080CD0<32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem266[(a1_152 >>u 0x10<u32> & 255<i32>) + 0x23080CD0<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem266[s3_257:byte], byte, word32) ^ CONVERT(Mem266[(a0_127 >>u 8<u32> & 255<i32>) + 0x23080CD0<32>:byte], byte, word32) << 8<i32> ^ Mem266[s8_218 + 8<i32>:int32]
	Mem286[a2 + 8<i32>:byte] = SLICE(a4_284 >>u 0x18<u32>, byte, 0)
	Mem288[a2 + 9<i32>:byte] = SLICE(a4_284 >>u 0x10<u32>, byte, 0)
	Mem289[a2 + 11<i32>:byte] = SLICE(a4_284, byte, 0)
	word32 a4_291 = CONVERT(Mem289[(a3_188 >>u 16<i32> & 255<i32>) + 0x23080CD0<32>:byte], byte, word32)
	Mem292[a2 + 10<i32>:byte] = SLICE(a4_284 >>u 8<u32>, byte, 0)
	word32 a5_301 = a5_275 << 24<i32> ^ a4_291 << 16<i32> ^ CONVERT(Mem292[(a0_127 & 255<i32>) + 0x23080CD0<32>:byte], byte, word32) ^ CONVERT(Mem292[(a1_152 >>u 8<i32> & 255<i32>) + 0x23080CD0<32>:byte], byte, word32) << 8<i32> ^ Mem292[s8_218 + 12<i32>:int32]
	Mem303[a2 + 12<i32>:byte] = SLICE(a5_301 >>u 0x18<u32>, byte, 0)
	Mem305[a2 + 13<i32>:byte] = SLICE(a5_301 >>u 0x10<u32>, byte, 0)
	Mem309[dwArgE4 + 14<i32>:byte] = SLICE(a5_301 >>u 8<u32>, byte, 0)
	Mem310[dwArgE4 + 15<i32>:byte] = SLICE(a5_301, byte, 0)
	0<32> = dwArg0148
	0<32> = dwArg3C
	s2Out = 0x2307FCD0<32>
	s3Out = s3_257
	s4Out = dwArg98
	s5Out = s5_243
	s6Out = s6_229
	s9Out = s9_215
	s10Out = s10_233
	return 0x230808D0<32>
rijndael_decrypt_exit:
l23066742:
	a0_356 = Mem27[((a0_127 & 255<i32>) << 2<i32>) + 0x230808D0<32>:word32]
	word32 a3_370 = Mem27[((a3_188 >>u 16<i32> & 255<i32>) << 2<i32>) + 0x230800D0<32>:word32]
	a4_341 = Mem27[(a0_127 >>u 0x18<u32> << 2<i32>) + 0x2307FCD0<32>:int32] ^ Mem27[((a1_152 & 255<i32>) << 2<i32>) + 0x230808D0<32>:int32] ^ s10_203 ^ Mem27[((a5_190 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x230800D0<32>:int32] ^ Mem27[((a3_188 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x230804D0<32>:int32]
	t3_364 = Mem27[(a1_152 >>u 0x18<u32> << 2<i32>) + 0x2307FCD0<32>:int32] ^ Mem27[((a3_188 & 255<i32>) << 2<i32>) + 0x230808D0<32>:int32] ^ Mem27[s0_105 + 36<i32>:int32] ^ Mem27[((a0_127 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x230800D0<32>:int32] ^ Mem27[((a5_190 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x230804D0<32>:int32]
	a7_119 = Mem27[(a3_188 >>u 0x18<u32> << 2<i32>) + 0x2307FCD0<32>:int32] ^ Mem27[((a5_190 & 255<i32>) << 2<i32>) + 0x230808D0<32>:int32] ^ Mem27[Mem27[a0_356 + 12<i32>:word32] + 8<i32>:int32] ^ Mem27[((a1_152 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x230800D0<32>:int32] ^ Mem27[((a0_127 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x230804D0<32>:int32]
	a5_110 = Mem27[(a5_190 >>u 24<i32> << 2<i32>) + 0x2307FCD0<32>:word32] ^ a0_356 ^ a0_356 ^ a3_370 ^ a3_370


word32 rijndael_encrypt(word32 a1, word32 a2, word32 dwArg3C, word32 dwArgE4, word32 dwArg0148, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      BL_AesEncrypt
// MayUse:  a1:[0..31] a2:[0..31] Stack +003C:[0..31] Stack +00E4:[0..31] Stack +0148:[0..31]
// LiveOut: s10 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s11 sp
rijndael_encrypt_entry:
l23066954:
	word32 a3_82 = CONVERT(Mem27[a1 + 14<i32>:byte], byte, word32)
	word32 a5_39 = CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32)
	word32 a5_57 = CONVERT(Mem27[a1 + 6<i32>:byte], byte, word32)
	word32 a5_72 = CONVERT(Mem27[a1 + 10<i32>:byte], byte, word32)
	word32 a6_86 = Mem27[Mem27[(a3_82 << 8<i32>) + 20<i32>:word32] + 4<i32>:int32]
	word32 a0_44 = Mem27[(a5_39 << 8<i32>) + 8<i32>:word32]
	word32 a4_341 = CONVERT(Mem27[a1:byte], byte, word32) << 24<i32> ^ CONVERT(Mem27[a1 + 1<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32) ^ a5_39 << 8<i32> ^ a5_39 << 8<i32>
	word32 t3_110 = CONVERT(Mem27[a1 + 4<i32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem27[a1 + 5<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[a1 + 7<i32>:byte], byte, word32) ^ a5_57 << 8<i32> ^ a5_57 << 8<i32>
	word32 a7_119 = CONVERT(Mem27[a1 + 8<i32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem27[a1 + 9<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[a1 + 11<i32>:byte], byte, word32) ^ a5_72 << 8<i32> ^ a5_72 << 8<i32>
	word32 a5_386 = CONVERT(Mem27[a1 + 12<i32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem27[a1 + 13<i32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[a1 + 15<i32>:byte], byte, word32) ^ a3_82 << 8<i32> ^ a3_82 << 8<i32>
	word32 s7_150 = a6_86 >> 1<u32>
l23066A2E:
	word32 a0_108 = Mem27[((a4_341 & 255<i32>) << 2<i32>) + 0x230819D0<32>:word32]
	word32 a1_101 = Mem27[((a5_386 & 255<i32>) << 2<i32>) + 0x230819D0<32>:word32]
	word32 s0_135 = Mem27[a0_108 + 20<i32>:word32]
	word32 a3_127 = Mem27[(a4_341 >>u 0x18<u32> << 2<i32>) + 0x23080DD0<32>:word32] ^ a1_101 ^ a1_101 ^ Mem27[(t3_110 >>u 0xE<u32> & 1020<i32>) + 0x230811D0<32>:word32] ^ Mem27[(a7_119 >>u 6<u32> & 1020<i32>) + 0x230815D0<32>:word32]
	s7_150 = s7_150 + 0xFFFFFFFF<32>
	word32 a1_152 = Mem27[(t3_110 >>u 0x18<u32> << 2<i32>) + 0x23080DD0<32>:word32] ^ a0_108 ^ a0_108 ^ Mem27[(a7_119 >>u 0xE<u32> & 1020<i32>) + 0x230811D0<32>:word32] ^ Mem27[(a5_386 >>u 6<u32> & 1020<i32>) + 0x230815D0<32>:word32]
	word32 a0_186 = Mem27[(a7_119 >>u 0x18<u32> << 2<i32>) + 0x23080DD0<32>:word32] ^ Mem27[((t3_110 & 255<i32>) << 2<i32>) + 0x230819D0<32>:int32] ^ Mem27[s0_135 + 24<i32>:int32] ^ Mem27[(a5_386 >>u 0xE<u32> & 1020<i32>) + 0x230811D0<32>:int32] ^ Mem27[(a4_341 >>u 6<u32> & 1020<i32>) + 0x230815D0<32>:int32]
	word32 a5_188 = Mem27[(a5_386 >>u 24<i32> << 2<i32>) + 0x23080DD0<32>:word32] ^ Mem27[((a7_119 & 255<i32>) << 2<i32>) + 0x230819D0<32>:int32] ^ Mem27[s0_135 + 28<i32>:int32] ^ Mem27[(a4_341 >>u 14<i32> & 1020<i32>) + 0x230811D0<32>:word32] ^ Mem27[(t3_110 >>u 6<u32> & 1020<i32>) + 0x230815D0<32>:int32]
	word32 s10_202 = Mem27[s0_135 + 32<i32>:int32]
	branch s7_150 == 0<32> l23066C42
l23066C42:
	word32 s10_233 = CONVERT(Mem27[(a3_127 >>u 0x18<u32>) + 0x23081DD0<32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem27[(a1_152 >>u 0x10<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[(a5_188 & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) ^ CONVERT(Mem27[(a0_186 >>u 8<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 8<i32> ^ s10_202
	Mem236[a2:byte] = SLICE(s10_233 >>u 0x18<u32>, byte, 0)
	Mem238[a2 + 1<i32>:byte] = SLICE(s10_233 >>u 0x10<u32>, byte, 0)
	Mem240[a2 + 2<i32>:byte] = SLICE(s10_233 >>u 8<u32>, byte, 0)
	word32 s6_229 = (a1_152 >>u 0x18<u32>) + 0x23081DD0<32>
	word32 s5_243 = (a3_127 & 255<i32>) + 0x23081DD0<32>
	word32 a4_246 = CONVERT(Mem240[s6_229:byte], byte, word32) << 24<i32> ^ CONVERT(Mem240[(a0_186 >>u 0x10<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 16<i32>
	word32 a6_247 = CONVERT(Mem240[s5_243:byte], byte, word32)
	Mem249[a2 + 3<i32>:byte] = SLICE(s10_233, byte, 0)
	word32 s8_218 = a0_44 + 8<i32> + ((a6_86 >> 1<u32>) << 5<i32>)
	word32 a4_259 = a4_246 ^ a6_247 ^ CONVERT(Mem249[(a5_188 >>u 8<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 8<i32> ^ Mem249[s8_218 + 4<i32>:int32]
	Mem261[a2 + 4<i32>:byte] = SLICE(a4_259 >>u 0x18<u32>, byte, 0)
	Mem263[a2 + 5<i32>:byte] = SLICE(a4_259 >>u 0x10<u32>, byte, 0)
	Mem265[a2 + 6<i32>:byte] = SLICE(a4_259 >>u 8<u32>, byte, 0)
	Mem266[a2 + 7<i32>:byte] = SLICE(a4_259, byte, 0)
	word32 s3_257 = (a1_152 & 255<i32>) + 0x23081DD0<32>
	word32 a5_275 = CONVERT(Mem266[(a5_188 >>u 24<i32>) + 0x23081DD0<32>:byte], byte, word32)
	word32 a4_284 = CONVERT(Mem266[(a0_186 >>u 0x18<u32>) + 0x23081DD0<32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem266[(a5_188 >>u 0x10<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem266[s3_257:byte], byte, word32) ^ CONVERT(Mem266[(a3_127 >>u 8<u32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 8<i32> ^ Mem266[s8_218 + 8<i32>:int32]
	Mem286[a2 + 8<i32>:byte] = SLICE(a4_284 >>u 0x18<u32>, byte, 0)
	Mem288[a2 + 9<i32>:byte] = SLICE(a4_284 >>u 0x10<u32>, byte, 0)
	Mem289[a2 + 11<i32>:byte] = SLICE(a4_284, byte, 0)
	word32 a4_291 = CONVERT(Mem289[(a3_127 >>u 16<i32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32)
	Mem292[a2 + 10<i32>:byte] = SLICE(a4_284 >>u 8<u32>, byte, 0)
	word32 a5_301 = a5_275 << 24<i32> ^ a4_291 << 16<i32> ^ CONVERT(Mem292[(a0_186 & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) ^ CONVERT(Mem292[(a1_152 >>u 8<i32> & 255<i32>) + 0x23081DD0<32>:byte], byte, word32) << 8<i32> ^ Mem292[s8_218 + 12<i32>:int32]
	Mem303[a2 + 12<i32>:byte] = SLICE(a5_301 >>u 0x18<u32>, byte, 0)
	Mem305[a2 + 13<i32>:byte] = SLICE(a5_301 >>u 0x10<u32>, byte, 0)
	Mem309[dwArgE4 + 14<i32>:byte] = SLICE(a5_301 >>u 8<u32>, byte, 0)
	Mem310[dwArgE4 + 15<i32>:byte] = SLICE(a5_301, byte, 0)
	0<32> = dwArg0148
	0<32> = dwArg3C
	s3Out = s3_257
	s4Out = dwArg98
	s5Out = s5_243
	s6Out = s6_229
	s7Out = s7_150
	s8Out = dwArg78
	s10Out = s10_233
	return 0x23080DD0<32>
rijndael_encrypt_exit:
l23066B84:
	word32 a0_356 = Mem27[((a0_186 & 255<i32>) << 2<i32>) + 0x230819D0<32>:word32]
	word32 a3_370 = Mem27[((a3_127 >>u 16<i32> & 255<i32>) << 2<i32>) + 0x230811D0<32>:word32]
	a4_341 = Mem27[(a3_127 >>u 0x18<u32> << 2<i32>) + 0x23080DD0<32>:int32] ^ Mem27[((a5_188 & 255<i32>) << 2<i32>) + 0x230819D0<32>:int32] ^ s10_202 ^ Mem27[((a1_152 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x230811D0<32>:int32] ^ Mem27[((a0_186 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x230815D0<32>:int32]
	t3_110 = Mem27[(a1_152 >>u 0x18<u32> << 2<i32>) + 0x23080DD0<32>:int32] ^ Mem27[((a3_127 & 255<i32>) << 2<i32>) + 0x230819D0<32>:int32] ^ Mem27[s0_135 + 36<i32>:int32] ^ Mem27[((a0_186 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x230811D0<32>:int32] ^ Mem27[((a5_188 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x230815D0<32>:int32]
	a7_119 = Mem27[(a0_186 >>u 0x18<u32> << 2<i32>) + 0x23080DD0<32>:int32] ^ Mem27[((a1_152 & 255<i32>) << 2<i32>) + 0x230819D0<32>:int32] ^ Mem27[Mem27[a0_356 + 12<i32>:word32] + 8<i32>:int32] ^ Mem27[((a5_188 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x230811D0<32>:int32] ^ Mem27[((a3_127 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x230815D0<32>:int32]
	a5_386 = Mem27[(a5_188 >>u 24<i32> << 2<i32>) + 0x23080DD0<32>:word32] ^ a0_356 ^ a0_356 ^ a3_370 ^ a3_370


word32 Bl_SHA1ProcessMessageBlock(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_SHA1Final
//      Bl_SHA1Update
// MayUse:  a0:[0..31]
// LiveOut: a1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
Bl_SHA1ProcessMessageBlock_entry:
l23066D96:
	word32 a4_11 = a0 + 28<i32>
l23066DA0:
	a4_11 = a4_11 + 4<32>
	Mem20[a4_11 + 4092<i32>:word32] = CONVERT(Mem8[a4_11 + 64<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem8[a4_11 + 65<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem8[a4_11 + 62<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem8[a4_11 + 63<i32>:byte], byte, word32)
	branch a0 + 92<i32> != a4_11 l23066DA0
l23066DC6:
	word32 a6_137 = Mem20[a0:int32]
	word32 t3_24 = Mem20[a0 + 4<i32>:int32]
	word32 t1_100 = Mem20[a0 + 8<i32>:int32]
	word32 t4_149 = Mem20[a0 + 12<i32>:int32]
	word32 t6_27 = Mem20[a0 + 16<i32>:int32]
	word32 a5_104 = 0<32>
l23066DE6:
	word32 a4_51
	word32 a3_44 = ((t1_100 ^ t4_149) & t3_24 ^ t4_149) + ((a6_137 << 5<u32> | a6_137 >>u 0x1B<u32>) + 0x5A827999<32>)
	branch (a5_104 & 48<i32>) == 0<32> l2306703E
l2306703E:
	a4_51 = Mem50[(a5_104 << 2<u32>) + a0 + 28<i32>:word32]
l23066E0C:
	word32 a7_65 = ((a5_104 & 15<i32>) << 2<i32>) + (a0 + 28<i32>)
	word32 a4_74 = Mem50[((a5_104 + 13<i32> & 0xF<32>) << 2<i32>) + (a0 + 28<i32>):word32] ^ Mem50[((a5_104 + 8<i32> & 0xF<32>) << 2<i32>) + (a0 + 28<i32>):word32] ^ Mem50[a7_65:int32] ^ Mem50[((a5_104 + 2<i32> & 0xF<32>) << 2<i32>) + (a0 + 28<i32>):word32]
	a4_51 = a4_74 >>u 31<i32> | a4_74 << 1<u32>
	Mem78[a7_65:word32] = a4_51
l23066E4E:
	a5_104 = a5_104 + 1<32>
	word32 a4_122 = a4_51 + a3_44 + t6_27
	word32 a7_138 = t3_24 << 0x1E<u32> | t3_24 >>u 2<u32>
	t3_24 = a6_137
	t6_27 = t4_149
	branch a5_104 != 0x14<32> l23067036
l23067036:
	t4_149 = t1_100
	a6_137 = a4_122
	t1_100 = a7_138
l23066E68:
l23066E74:
	word32 t3_119 = ((a5_104 & 15<i32>) << 2<i32>) + (a0 + 28<i32>)
	word32 a1_131 = Mem114[((a5_104 + 13<i32> & 0xF<32>) << 2<i32>) + (a0 + 28<i32>):word32] ^ Mem114[((a5_104 + 8<i32> & 0xF<32>) << 2<i32>) + (a0 + 28<i32>):word32] ^ Mem114[t3_119:int32] ^ Mem114[((a5_104 + 2<i32> & 0xF<32>) << 2<i32>) + (a0 + 28<i32>):word32]
	word32 a1_134 = a1_131 >>u 31<i32> | a1_131 << 1<u32>
	Mem135[t3_119:word32] = a1_134
	a5_104 = a5_104 + 1<32>
	word32 a3_150 = (a6_137 ^ a7_138 ^ t1_100) + ((a4_122 << 5<u32> | a4_122 >>u 0x1B<u32>) + 0x6ED9EBA1<32>) + a1_134 + t4_149
	word32 t3_151 = a6_137 << 0x1E<u32> | a6_137 >>u 2<u32>
	a6_137 = a4_122
	t4_149 = t1_100
	branch a5_104 != 40<i32> l23067048
l23067048:
	t1_100 = a7_138
	a4_122 = a3_150
	a7_138 = t3_151
l23066EE8:
l23066EF4:
	word32 t4_176 = ((a5_104 & 15<i32>) << 2<i32>) + (a0 + 28<i32>)
	word32 a6_188 = Mem171[((a5_104 + 13<i32> & 15<i32>) << 2<i32>) + (a0 + 28<i32>):int32] ^ Mem171[((a5_104 + 8<i32> & 0xF<32>) << 2<i32>) + (a0 + 28<i32>):word32] ^ Mem171[t4_176:int32] ^ Mem171[((a5_104 + 2<i32> & 0xF<32>) << 2<i32>) + (a0 + 28<i32>):word32]
	word32 a6_191 = a6_188 >>u 0x1F<u32> | a6_188 << 1<u32>
	Mem195[t4_176:word32] = a6_191
	a5_104 = a5_104 + 1<32>
	word32 a1_209 = ((t3_151 | a7_138) & a4_122 | t3_151 & a7_138) + ((a3_150 << 5<u32> | a3_150 >>u 0x1B<u32>) + 0x8F1BBCDC<32>) + a6_191 + t1_100
	word32 t4_210 = a4_122 << 0x1E<u32> | a4_122 >>u 2<u32>
	a4_122 = a3_150
	t1_100 = a7_138
	branch a5_104 != 60<i32> l23067050
l23067050:
	a7_138 = t3_151
	a3_150 = a1_209
	t3_151 = t4_210
l23066F7C:
l23066F88:
	word32 t1_235 = ((a5_104 & 15<i32>) << 2<i32>) + (a0 + 28<i32>)
	word32 a4_247 = Mem230[((a5_104 + 13<i32> & 0xF<32>) << 2<i32>) + (a0 + 28<i32>):word32] ^ Mem230[((a5_104 + 8<i32> & 15<i32>) << 2<i32>) + (a0 + 28<i32>):int32] ^ Mem230[t1_235:int32] ^ Mem230[((a5_104 + 2<i32> & 15<i32>) << 2<i32>) + (a0 + 28<i32>):int32]
	word32 a4_250 = a4_247 >>u 31<i32> | a4_247 << 1<u32>
	Mem251[t1_235:word32] = a4_250
	a5_104 = a5_104 + 1<32>
	word32 a4_264 = a4_250 + (((a3_150 ^ t4_210) ^ t3_151) + ((a1_209 << 5<u32> | a1_209 >>u 0x1B<u32>) + 0xCA62C1D6<32>)) + a7_138
	word32 a6_267 = a3_150 << 0x1E<u32> | a3_150 >>u 2<u32>
	a3_150 = a1_209
	a7_138 = t3_151
	branch a5_104 != 80<i32> l23067058
l23067058:
	t3_151 = t4_210
	a1_209 = a4_264
	t4_210 = a6_267
l2306700C:
	Mem275[Mem251[a5_104:word32] + 156<i32>:word16] = 0<16>
	Mem278[a4_264 + a5_104:word32] = Mem275[a5_104 + 4<i32>:word32]
	word32 a1_279 = a1_209 + a5_104
	Mem281[a1_279 + 4<i32>:word32] = Mem278[a5_104 + 8<i32>:word32]
	Mem284[Mem281[a5_104 + 12<i32>:word32] + 8<i32>:word32] = a6_267 + a5_104
	word32 a0_286 = Mem284[a5_104 + 16<i32>:word32]
	Mem287[a0_286 + 12<i32>:word32] = t4_210 + a5_104
	Mem289[a0_286 + 16<i32>:word32] = t3_151 + a5_104
	return a1_279
Bl_SHA1ProcessMessageBlock_exit:


void Bl_SHA1Init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_hmac_sha1
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
Bl_SHA1Init_entry:
l23067060:
	branch a0 == 0<32> l230670A4
l230670A4:
	return
l23067062:
	Mem7[0x67452301<32>:word32] = a0
	Mem10[0xEFCDAB8D<32>:word32] = a0
	Mem13[0x98BADD06<32>:word32] = a0
	Mem16[0x10325482<32>:word32] = a0
	Mem19[a0 + 20<i32>:word32] = 0<32>
	Mem20[a0 + 24<i32>:word32] = 0<32>
	Mem21[0xC3D2E200<32>:word32] = a0
	Mem22[a0 + 156<i32>:word32] = 0<32>
	return
Bl_SHA1Init_exit:


word32 Bl_SHA1Final(word32 ra, word32 a0, word32 a1, ptr32 & s1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_hmac_sha1
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: ra s1
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: a6 a7 s0 sp t3 t4 t5 t6
Bl_SHA1Final_entry:
l230670A8:
	branch a0 == 0<32> l230671F0
l230670AE:
	branch a1 == 0<32> l230671F0
l230670B2:
	branch CONVERT(Mem0[a0 + 159<i32>:byte], byte, word32) != 0<32> l230671F0
l230671F0:
	s1Out = s1
	return ra
l230670BA:
	word32 s0_168 = a0
	branch CONVERT(Mem16[a0 + 158<i32>:byte], byte, word32) != 0<32> l23067174
l230670CC:
	word32 a4_20 = CONVERT(Mem16[a0 + 156<i32>:int16], int16, int32)
	Mem25[a0 + 156<i32>:word16] = SLICE(CONVERT(SLICE(a4_20 + 1<i32>, word16, 0), word16, int32), word16, 0)
	Mem28[a0 + a4_20 + 92<i32>:byte] = 0x80<8>
	branch a4_20 <= 55<i32> l230671D4
l230671D4:
l230671D8:
	word32 a5_32 = CONVERT(Mem31[a0 + 156<i32>:int16], int16, int32)
	branch a5_32 > 55<i32> l2306710E
l230671E0:
	Mem35[a0 + 156<i32>:word16] = SLICE(a5_32 + 1<i32>, word16, 0)
	Mem37[a5_32 + a0 + 92<i32>:byte] = 0<8>
l230670F0:
l230670F4:
	word32 a5_41 = CONVERT(Mem40[a0 + 156<i32>:int16], int16, int32)
	branch a5_41 <= 63<i32> l230671B4
l230671B4:
	Mem44[a0 + 156<i32>:word16] = SLICE(a5_41 + 1<i32>, word16, 0)
	Mem46[a5_41 + a0 + 92<i32>:byte] = 0<8>
l230670FC:
	Bl_SHA1ProcessMessageBlock(a0)
l23067106:
	word32 a5_65 = CONVERT(Mem64[a0 + 156<i32>:int16], int16, int32)
	branch a5_65 <= 55<i32> l230671C4
l230671C4:
	Mem68[a0 + 156<i32>:word16] = SLICE(a5_65 + 1<i32>, word16, 0)
	Mem70[a5_65 + a0 + 92<i32>:byte] = 0<8>
l2306710E:
	word32 a5_73 = CONVERT(Mem72[a0 + 24<i32>:uint16], uint16, word32)
	word32 s0_78 = Mem72[(a5_73 >>u 8<i32>) + 24<i32>:word32]
	Mem79[s0_78 + 150<i32>:word16] = SLICE(a5_73 << 8<u32> | a5_73 >>u 8<i32>, word16, 0)
	Mem82[s0_78 + 149<i32>:byte] = SLICE(a5_73 >>u 24<i32>, byte, 0)
	word32 a5_83 = CONVERT(Mem82[s0_78 + 20<i32>:uint16], uint16, word32)
	Mem84[s0_78 + 148<i32>:byte] = SLICE(a5_73 >>u 0x20<32>, byte, 0)
	s0_168 = Mem84[(a5_83 >>u 8<i32>) + 20<i32>:word32]
	Mem89[s0_168 + 154<i32>:word16] = SLICE(a5_83 << 8<u32> | a5_83 >>u 8<i32>, word16, 0)
	Mem92[s0_168 + 153<i32>:byte] = SLICE(a5_83 >>u 24<i32>, byte, 0)
	Mem93[s0_168 + 152<i32>:byte] = SLICE(a5_83 >>u 0x20<32>, byte, 0)
	Bl_SHA1ProcessMessageBlock(a0)
	word32 a5_108 = s0_168 + 92<i32>
l2306715C:
	Mem111[a5_108:byte] = 0<8>
	a5_108 = a5_108 + 1<32>
	branch s0_168 + 156<i32> != a5_108 l2306715C
l23067166:
	Mem116[s0_168 + 20<i32>:word32] = 0<32>
	Mem117[s0_168 + 24<i32>:word32] = 0<32>
	Mem118[s0_168 + 158<i32>:byte] = 1<8>
l23067174:
	word32 a5_119 = 0<32>
l23067178:
	Mem133[a1 + a5_119:byte] = SLICE(Mem126[(a5_119 & -4<i32>) + s0_168:word32] >>u ((~a5_119 & 3<32>) << 3<i32>), byte, 0)
	a5_119 = a5_119 + 1<32>
	branch a5_119 != 0x14<32> l23067178
l2306719A:
	word32 a5_275
	word32 a4_274
	word32 a2_272
	word32 a3_273
	word32 a1_271
	word32 t1_269
	word32 a0_270
	word32 ra_152 = memset(ra, s0_168, 0<32>, 160<i32>, out t1_269, out a0_270, out a1_271, out a2_272, out a3_273, out a4_274, out a5_275)
	s1Out = a1
	return ra_152
Bl_SHA1Final_exit:


word32 Bl_SHA1Update(word32 a0, word32 a1, word32 a2, word32 dwArg0128, ptr32 & a1Out, ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_hmac_sha1
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0128:[0..31]
// LiveOut: a1 a2 s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
Bl_SHA1Update_entry:
l230671F4:
	branch a2 != 0<32> l230671FA
l230671FA:
	word32 s0_10 = a0
	branch a0 == 0<32> l2306723C
l2306720C:
	branch a1 == 0<32> l2306723C
l2306720E:
	branch CONVERT(Mem16[a0 + 158<i32>:byte], byte, word32) == 0<32> l2306721E
l2306721E:
	branch CONVERT(Mem16[a0 + 159<i32>:byte], byte, word32) != 0<32> l2306723C
l23067226:
	word32 s1_22 = a1 + a2
	s2 = 1<32>
	s3 = 64<i32>
l23067230:
	branch a1 == s1_22 l2306723A
l23067234:
	branch CONVERT(Mem28[s0_10 + 159<i32>:byte], byte, word32) == 0<32> l2306724A
l2306724A:
	word32 a4_30 = CONVERT(Mem28[s0_10 + 156<i32>:int16], int16, int32)
	word32 a5_32 = a4_30 + 1<i32> << 16<i32>
	Mem34[s0_10 + 156<i32>:word16] = SLICE(a5_32 >> 16<i32>, word16, 0)
	word32 a4_36 = a4_30 + s0_10
	Mem37[a4_36 + 92<i32>:byte] = SLICE(CONVERT(Mem34[a1:byte], byte, word32), byte, 0)
	s0_10 = Mem37[a4_36 + 20<i32>:word32]
	Mem40[a4_36 + 0x1C<32>:word32] = s0_10
	branch a4_36 != 8<32> l23067278
l2306726C:
	s0_10 = Mem40[a4_36 + 0x20<32>:word32]
	Mem43[a4_36 + 0x21<32>:word32] = s0_10
	branch a4_36 != 9<32> l23067278
l23067274:
	Mem45[s0_10 + 159<i32>:byte] = 1<8>
l23067278:
	branch a5_32 >> 16<i32> != 64<i32> l23067286
l2306727C:
	a1 = Bl_SHA1ProcessMessageBlock(s0_10)
l23067286:
	a1 = a1 + 1<32>
l2306723A:
l23067214:
	Mem74[a0 + 159<i32>:byte] = 3<8>
l2306723C:
	0<32> = dwArg0128
	a1Out = a1
	a2Out = dwArg0100
	s2Out = s2
	s3Out = s3
	return dwArgE4
l230671F6:
	a1Out = a1
	a2Out = a2
	s2Out = s2
	s3Out = s3
	return s0
Bl_SHA1Update_exit:


word32 supplicantRestoreDefaults(word32 ra, word32 dwArg28, word32 dwArg38, word32 dwArg0158, word32 dwArg0168, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantFuncInit
// MayUse:  ra:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: s0 sp
supplicantRestoreDefaults_entry:
l2306728A:
	word32 s1_107
	word32 a2_108
	word32 a5_109
	word32 a6_110
	word32 s2_111
	word32 s3_112
	word32 s4_113
	word32 s5_114
	word32 s6_115
	word32 s7_116
	word32 s8_117
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_107, out a2_108, out a5_109, out a6_110, out s2_111, out s3_112, out s4_113, out s5_114, out s6_115, out s7_116, out s8_117)
	word32 ra_41 = pmkCacheInit(ra, dwArg28, dwArg0158, dwArg0168)
	word32 s2_118
	pmkCacheRomInit(dwArg28, dwArg0158, dwArg0168, out s2_118)
	word32 s2_86
	word32 s1_119
	word32 a2_120
	word32 a5_121
	word32 a6_122
	word32 s3_123
	word32 s4_124
	word32 s5_125
	word32 s6_126
	word32 s7_127
	word32 s8_128
	dbg_test_print(0x2307C3D0<32>, dwArg0168, out s1_119, out a2_120, out a5_121, out a6_122, out s2_86, out s3_123, out s4_124, out s5_125, out s6_126, out s7_127, out s8_128)
	0<32> = dwArg38
	s2Out = s2_86
	return ra_41
supplicantRestoreDefaults_exit:


word32 supplicantFuncInit(word32 ra, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_init
// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
supplicantFuncInit_entry:
l230672E6:
	word32 s1_90
	word32 a2_91
	word32 a5_92
	word32 a6_93
	word32 s2_94
	word32 s3_95
	word32 s4_96
	word32 s5_97
	word32 s6_98
	word32 s7_99
	word32 s8_100
	dbg_test_print(0x2307C3BC<32>, dwArg0168, out s1_90, out a2_91, out a5_92, out a6_93, out s2_94, out s3_95, out s4_96, out s5_97, out s6_98, out s7_99, out s8_100)
	word32 s2_101
	word32 ra_41 = supplicantRestoreDefaults(ra, dwArg18, dwArg28, dwArg0148, dwArg0158, out s2_101)
	0<32> = dwArg38
l23067336_thunk_dbg_test_print:
	word32 s1_102
	word32 a2_103
	word32 a5_104
	word32 a6_105
	word32 s2_106
	word32 s3_107
	word32 s4_108
	word32 s5_109
	word32 s6_110
	word32 s7_111
	word32 s8_112
	dbg_test_print(0x2307C3D0<32>, dwArg0178, out s1_102, out a2_103, out a5_104, out a6_105, out s2_106, out s3_107, out s4_108, out s5_109, out s6_110, out s7_111, out s8_112)
	return ra_41
supplicantFuncInit_exit:


word32 ap_setpsk(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
ap_setpsk_entry:
l2306733A:
	word32 a4_111
	word32 a5_112
	word32 a0_15 = cm_GetApInfo(a0, out a4_111, out a5_112)
	branch a0_15 == 0<32> l23067388
l23067388:
	return
l2306734C:
	word32 a1_29
	word32 a2_113
	word32 a3_114
	word32 a4_115
	word32 a5_116
	Mem32[a0_15 + 164<i32>:byte] = SLICE(strlen(a1, out a1_29, out a2_113, out a3_114, out a4_115, out a5_116), byte, 0)
	word32 a2_117
	word32 a3_118
	word32 a4_119
	word32 a5_120
	word32 a6_121
	word32 a7_122
	memcpy(a0_15 + 132<i32>, a1_29, 32<i32>, out a2_117, out a3_118, out a4_119, out a5_120, out a6_121, out a7_122)
	word32 a1_123
	word32 a2_124
	word32 a3_125
	word32 a4_126
	word32 a5_127
	Mem55[a0_15 + 88<i32>:byte] = SLICE(strlen(a2, out a1_123, out a2_124, out a3_125, out a4_126, out a5_127), byte, 0)
l23067384_thunk_memcpy:
	word32 a2_128
	word32 a3_129
	word32 a4_130
	word32 a5_131
	word32 a6_132
	word32 a7_133
	memcpy(a0_15 + 24<i32>, a2, 64<i32>, out a2_128, out a3_129, out a4_130, out a5_131, out a6_132, out a7_133)
	return
ap_setpsk_exit:


void ap_resetConfiguration(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      InitializeAp
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
ap_resetConfiguration_entry:
l23067392:
	word32 a4_116
	word32 a5_117
	word32 a0_12 = cm_GetApInfo(a0, out a4_116, out a5_117)
	word32 a4_118
	word32 a5_119
	word32 a0_17 = cm_GetApData(a0, out a4_118, out a5_119)
	branch a0_12 == 0<32> l23067420
l230673AA:
	branch a0_17 == 0<32> l23067420
l230673AC:
	word32 a1_120
	word32 a2_121
	word32 a3_122
	word32 a4_123
	word32 a5_124
	Mem29[a0_12 + 164<i32>:byte] = SLICE(strlen(0x23081F28<32>, out a1_120, out a2_121, out a3_122, out a4_123, out a5_124), byte, 0)
	word32 a2_125
	word32 a3_126
	word32 a4_127
	word32 a5_128
	word32 a6_129
	word32 a7_130
	memcpy(a0_12 + 132<i32>, 0x23081F28<32>, 32<i32>, out a2_125, out a3_126, out a4_127, out a5_128, out a6_129, out a7_130)
	Mem46[a0_12 + 184<i32>:word32] = 1<32>
	word32 t1_131
	word32 a0_132
	word32 a1_133
	word32 a2_134
	word32 a3_135
	word32 a4_136
	word32 a5_137
	memset(ra, a0_12 + 8<i32>, 0<32>, 124<i32>, out t1_131, out a0_132, out a1_133, out a2_134, out a3_135, out a4_136, out a5_137)
	word32 a5_59 = CONVERT(Mem46[a0_12 + 8<i32>:uint16], uint16, word32)
	Mem60[a0_12 + 16<i32>:word16] = 1<16>
	Mem63[a0_12 + 8<i32>:word16] = SLICE(a5_59 & 247<i32> | 264<i32>, word16, 0)
	Mem67[a0_12 + 12<i32>:word16] = SLICE(CONVERT(Mem63[a0_12 + 12<i32>:uint16], uint16, word32) & 247<i32> | 264<i32>, word16, 0)
	Mem69[a0_12 + 121<i32>:byte] = 3<8>
	Mem70[a0_12 + 122<i32>:byte] = 3<8>
	Mem72[0xE0<32>:word32] = a0_12
	Mem73[a0_12 + 128<i32>:word32] = 100<i32>
	Mem76[0x15000194<32>:word32] = a0_12
l23067420:
	return
ap_resetConfiguration_exit:


void InitializeAp(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cm_AllocResources
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
InitializeAp_entry:
l2306742A:
l2306742A_thunk_ap_resetConfiguration:
	ap_resetConfiguration(ra, a0)
	return
InitializeAp_exit:


word32 rf_set_channel(word32 ra, word32 a1, word32 s2, word32 fflags, word32 frm, ptr32 & s1Out, ptr32 & s4Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
// MayUse:  a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s2:[0..31]
// LiveOut: fflags frm ra s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
rf_set_channel_entry:
l2306742E:
l23067430_thunk_rfc_config_channel:
	word32 fflags_17
	word32 frm_18
	word32 s1_21
	word32 s4_24
	word32 ra_19 = rfc_config_channel(ra, a1, s2, fflags, frm, out s1_21, out s4_24, out fflags_17, out frm_18)
	s1Out = s1_21
	s4Out = s4_24
	fflagsOut = fflags_17
	frmOut = frm_18
	return ra_19
rf_set_channel_exit:


void rf_dump_status()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_tx_cfm_singleton
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
rf_dump_status_entry:
l23067434:
	return
rf_dump_status_exit:


void bt_hcionchip_recv(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5
// Preserved: sp
bt_hcionchip_recv_entry:
l23067436:
	branch CONVERT(SLICE(a0 + 0xFF0007FF<32>, word16, 0), word16, word32) >u 5<32> l2306748A
l2306748A:
	return
l23067448:
	call 0x23081F3C<32> (retsize: 0;)
		uses: a0:Mem0[0x23081F3C<32>:word32],a1:a1,a2:a1,a5:0x23081F3C<32>
	return
bt_hcionchip_recv_exit:


word32 bt_onchiphci_interface_init(word32 ra, word32 s0, word32 s1, word32 a0, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_onchiphci_interface_init
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] s1:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s4 s8 t3
// Preserved: sp
bt_onchiphci_interface_init_entry:
l2306748E:
	Mem6[0x4200E43C<32>:word32] = a0
l230674A0_thunk_ble_ke_task_create:
	word32 a0_12
	word32 a3_15
	word32 a4_16
	word32 mstatus_18
	word32 s1_21
	word32 s0_30
	word32 ra_19 = ble_ke_task_create(ra, s0, s1, 4<32>, 0x23081F54<32>, out s0_30, out s1_21, out a0_12, out a3_15, out a4_16, out mstatus_18)
	s1Out = s1_21
	a0Out = a0_12
	a3Out = a3_15
	a4Out = a4_16
	mstatusOut = mstatus_18
	return ra_19
bt_onchiphci_interface_init_exit:


word32 bt_onchiphci_send(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s3, word32 dwArgDC, word32 dwArgF8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_onchiphci_send_2_controller
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +00DC:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a1 a4 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_onchiphci_send_entry:
l230674A4:
	word32 sp_113 = fp + -48<i32>
	word32 s0_15 = a2
	branch a0 == 0<32> l230674CC
l230674CC:
	word32 a5_445
	word32 a0_24 = hci_look_for_cmd_desc(CONVERT(Mem13[a2:uint16], uint16, word32), out a4, out a5_445)
	word32 s3_19 = a1
	s1 = CONVERT(Mem13[a2 + 8<i32>:byte], byte, word32)
	word32 s2_27 = a0_24
	branch s1 != 0<32> l2306753E
l2306753E:
	word32 a0_28 = Mem26[a4 + 4<i32>:word32]
	branch a4 == 0<32> l230674E2
l23067542:
	word32 a0_41
	word32 a5_29 = CONVERT(Mem26[a0_28 + 2<i32>:byte], byte, word32)
	word32 a3_31 = CONVERT(SLICE(s1, word16, 0), word16, word32)
	branch (a5_29 & 64<i32>) != 0<32> l23067566
l23067566:
	word32 a0_40
	call a4 (retsize: 0;)
		uses: a0:0<32>
		defs: a0:a0_40,a4:a4_38
	s0_15 = Mem26[a1 + 4<i32>:word32]
	a0_41 = a0_40 & 255<i32>
l23067556:
	a1 = 0<32>
	ra = hci_util_unpack(ra, 0<32>, 0<32>, fp + -42<i32>, a3_31, a5_29 & 64<i32>, dwArgDC, out s0_15, out s1, out a0_41, out s2_27, out s3_19)
l2306755E:
	branch a0_41 != 1<32> l230674E2
l23067564:
l230674E2:
	word32 a0_85
	word32 s2_97
	word32 a2_453
	word32 s4_456
	word32 s8_457
	word32 a3_454
	word32 s3_455
	word32 s0_452
	ra = ble_ke_msg_alloc(ra, s0_15, s1, 0xFFF805<32>, s3_19, CONVERT(Mem26[s0_15:uint16], uint16, word32), 0<32>, s2_27, s3_19, dwArgF8, out s0_452, out s1, out a0_85, out a1, out a2_453, out a3_454, out a4, out s2_97, out s3_455, out s4_456, out s8_457, out mstatus)
	word32 s3_104 = a0_85
	branch a0_85 == 0<32> l230674BC
l230674FA:
	branch true l23067520
l23067500:
	a4 = Mem26[s2_97 + 4<i32>:int32]
	branch a4 == 0<32> l23067520
l23067506:
	word32 a5_107 = CONVERT(Mem26[s2_97 + 2<i32>:byte], byte, word32)
	word32 a3_109 = CONVERT(SLICE(s1, word16, 0), word16, word32)
	word32 s0_111 = Mem26[a1 + 4<i32>:word32]
	branch (a5_107 & 64<i32>) != 0<32> l23067572
l23067572:
	word32 a3_125
	word32 a6_128
	word32 s11_129
	word32 s4_130
	word32 s5_131
	word32 s6_132
	word32 s7_133
	word32 s8_134
	word32 s9_135
	word32 t0_136
	word32 a7_137
	word32 t1_138
	word32 t4_301
	word32 t5_302
	word32 t6_303
	call a4 (retsize: 0;)
		uses: a0:a0_85,a1:a1_86,a2:fp + -42<i32>,a3:a3_125,a4:a4_126,a6:a6_128,a7:a7_137,mstatus:mstatus_127,ra:ra_94,s0:s0_111,s1:s1_96,s11:s11_129,s2:s2_97,s3:a0_85,s4:s4_130,s5:s5_131,s6:s6_132,s7:s7_133,s8:s8_134,s9:s9_135,Stack +010C:dwArgDC,Stack +0128:dwArgF8,t0:t0_136,t1:t1_138,t4:t4_301,t5:t5_302,t6:t6_303
		defs: a3:a3_125,a4:a4_126,a6:a6_128,a7:a7_137,mstatus:mstatus_127,ra:ra_115,s11:s11_129,s3:s3_118,s4:s4_130,s5:s5_131,s6:s6_132,s7:s7_133,s8:s8_134,s9:s9_135,sp:sp_113,t0:t0_136,t1:t1_138,t4:t4_301,t5:t5_302,t6:t6_303
l2306751C:
	word32 s1_459
	word32 a0_460
	word32 s2_461
	word32 s0_458
	ra = hci_util_unpack(ra, a0_85, a1, fp + -42<i32>, a3_109, a5_107 & 64<i32>, dwArgDC, out s0_458, out s1_459, out a0_460, out s2_461, out s3_104)
l23067520:
	Mem161[sp_113 + 8<i32>:byte] = 1<8>
	Mem163[sp_113 + 132<i32>:word32] = s3_104
l230674B4:
	branch a0 == 1<32> l23067576
l23067576:
	word32 a0_170
	word32 s0_180
	word32 s2_182
	word32 a2_447
	word32 s4_450
	word32 s8_451
	word32 a3_448
	word32 s3_449
	word32 s1_446
	ra = ble_ke_msg_alloc(ra, a2, s1, 0xFFF807<32>, a1, 0<32>, 0xC<32>, a0, s3, dwArgF8, out s0_180, out s1_446, out a0_170, out a1, out a2_447, out a3_448, out a4, out s2_182, out s3_449, out s4_450, out s8_451, out mstatus)
	s1 = a0_170
	branch a0_170 == 0<32> l230674BC
l23067588:
	word32 s3_190 = __csrrs(mstatus, 0<32>)
	__csrrc(mstatus, 8<32>)
	word32 a0_194
	word32 s0_199
	word32 s8_464
	word32 a5_463
	word32 a2_462
	ra = ble_co_list_pop_front(ra, s0_180, 0x4201A1C8<32>, out s0_199, out a0_194, out a1, out a2_462, out a5_463, out s8_464)
	__csrrw(mstatus, 0<32>)
	Mem202[a0_194 + 8<i32>:word32] = a0_170
	branch a0_194 == 0<32> l230674BC
l230675A6:
	Mem205[a0_170:word16] = SLICE(CONVERT(Mem202[s0_199:uint16], uint16, word32), word16, 0)
	Mem207[a0_170 + 2<i32>:byte] = SLICE(CONVERT(Mem205[s0_199 + 2<i32>:byte], byte, word32), byte, 0)
	word32 a2_208 = CONVERT(Mem207[s0_199 + 4<i32>:uint16], uint16, word32)
	word32 a5_210 = Mem207[0x4200E13C<32>:int32]
	Mem211[a0_170 + 4<i32>:word16] = SLICE(a2_208, word16, 0)
	word32 s1_218
	word32 s2_219
	word32 a3_227
	word32 a6_230
	word32 s11_231
	word32 s4_232
	word32 s5_233
	word32 s6_234
	word32 s7_235
	word32 s8_236
	word32 s9_237
	word32 t0_238
	word32 a7_239
	word32 t1_240
	word32 t4_304
	word32 t5_305
	word32 t6_306
	call a5_210 (retsize: 0;)
		uses: a0:CONVERT(Mem211[a0_194 + 6<i32>:uint16], uint16, word32) + 0x28008000<32>,a1:a1_195,a2:a2_208,a3:a3_227,a4:0x28008000<32>,a5:a5_210,a6:a6_230,a7:a7_239,mstatus:mstatus_229,ra:ra_198,s0:Mem211[a1_195 + 8<i32>:word32],s1:a0_170,s11:s11_231,s2:s2_182,s3:s3_190,s4:s4_232,s5:s5_233,s6:s6_234,s7:s7_235,s8:s8_236,s9:s9_237,Stack +010C:dwArgDC,Stack +0128:dwArgF8,t0:t0_238,t1:t1_240,t4:t4_304,t5:t5_305,t6:t6_306
		defs: a3:a3_227,a4:a4_228,a6:a6_230,a7:a7_239,mstatus:mstatus_229,ra:ra_217,s1:s1_218,s11:s11_231,s2:s2_219,s4:s4_232,s5:s5_233,s6:s6_234,s7:s7_235,s8:s8_236,s9:s9_237,sp:sp_215,t0:t0_238,t1:t1_240,t4:t4_304,t5:t5_305,t6:t6_306
	Mem241[sp_113 + 8<i32>:byte] = SLICE(s2_219, byte, 0)
	Mem242[sp_113 + 132<i32>:word32] = s1_218
l23067528:
	word32 a0_465
	s1 = rw_main_task_post(sp_113 + 8<i32>, a4, mstatus, Mem250[sp_113 + 20<i32>:word32], Mem250[sp_113 + 148<i32>:word32], Mem250[sp_113 + 264<i32>:word32], Mem250[sp_113 + 328<i32>:word32], Mem250[sp_113 + 392<i32>:word32], out a0_465, out a1, out a4)
l230674BC:
l230674BE:
	0<32> = dwArg0128
	s1Out = s1
	a1Out = a1
	a4Out = a4
	mstatusOut = mstatus
	return ra
bt_onchiphci_send_exit:


void bt_onchiphci_hanlde_rx_acl(word32 ra, word32 a0, word32 a1, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 ra s1 s2 tp
// Preserved: s0 sp
bt_onchiphci_hanlde_rx_acl_entry:
l230675DC:
	word32 a0_17 = hci_build_acl_rx_data(a0 + 0xFFFFFFF4<32>)
	word32 a5_23 = Mem14[0x4200E13C<32>:int32]
	word32 s0_25 = CONVERT(Mem14[a0_17 + 2<i32>:byte], byte, word32) + 4<32> & 255<i32>
	word32 s1_30
	call a5_23 (retsize: 0;)
		uses: a0:a1,a1:a0_17,a2:s0_25,a5:a5_23,ra:ra,s0:s0_25,s1:a0,s2:a1
		defs: s1:s1_30
	em_buf_rx_free(CONVERT(Mem14[s1_30 + 6<i32>:byte], byte, word32))
	0<32> = dwArg38
	return
bt_onchiphci_hanlde_rx_acl_exit:


word32 bl_mtd_open(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgB4, word32 dwArgC8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_port_init
//      romfs_register
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 ra s0 s2 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 tp
// Preserved: sp
bl_mtd_open_entry:
l23067620:
	word32 a0_42
	word32 a0_27
	word32 s8_720
	word32 s4_719
	word32 s3_718
	word32 a6_717
	word32 a5_716
	word32 a4_715
	word32 a2_714
	word32 a1_713
	word32 s1_102
	word32 s2_36
	word32 a3_30
	pvPortMalloc(ra, a0, 32<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_102, out a0_27, out a1_713, out a2_714, out a3_30, out a4_715, out a5_716, out a6_717, out s2_36, out s3_718, out s4_719, out s8_720)
	branch a0_27 == 0<32> l230677B6
l230677B6:
	a0_42 = 0xFFFFFFFF<32>
l23067642:
	word32 a3_108
	word32 a5_110
	word32 a5_727
	word32 a3_725
	word32 a4_726
	word32 a1_723
	word32 a2_724
	word32 a0_722
	word32 t1_721
	word32 ra_52 = memset(ra, a0_27, 0<32>, 32<i32>, out t1_721, out a0_722, out a1_723, out a2_724, out a3_725, out a4_726, out a5_727)
	word32 a3_728
	word32 a5_730
	word32 a4_729
	strncpy(a0_27, s1_102, 0x10<32>, out a3_728, out a4_729, out a5_730)
	branch (s2_36 & 1<i32>) == 0<32> l230676CE
l230676CE:
	branch (s2_36 & 2<i32>) == 0<32> l23067732
l23067732:
	Mem69[a0_27 + 28<i32>:word32] = 0<32>
l230676D0:
	word32 a0_73
	word32 a3_76
	word32 a5_78
	word32 s2_904
	word32 s3_905
	word32 s6_906
	hal_boot2_partition_bus_addr_active(s1_102, dwArgC8, out s1_102, out a0_73, out a3_76, out a5_78, out s2_904, out s3_905, out s6_906)
	branch a0_73 != 0<32> l230676E2
l230676DE:
	branch a5_78 != 0<32> l23067700
l23067700:
	Mem98[a5_78 + 28<i32>:word32] = dwArgB4
l23067702:
	word32 a0_105
	word32 s1_944
	word32 s2_945
	hal_boot2_partition_addr_active(s1_102, dwArgC8, out s1_944, out a0_105, out a3_108, out a5_110, out s2_945)
	branch a0_105 != 0<32> l23067714
l23067710:
	branch a5_110 != 0<32> l23067738
l23067714:
	word32 a3_143
	word32 s1_946
	word32 a0_947
	word32 a1_948
	word32 a2_949
	word32 a4_950
	word32 a5_951
	word32 a7_952
	word32 s2_953
	word32 s3_954
	word32 s4_955
	word32 s5_956
	word32 s6_957
	word32 s7_958
	word32 s8_959
	word32 s9_960
	word32 s10_961
	word32 s11_962
	word32 t4_963
	word32 s1_964
	word32 a0_965
	word32 a1_966
	word32 a2_967
	word32 a3_968
	word32 a4_969
	word32 a5_970
	word32 a7_971
	word32 s2_972
	word32 s3_973
	word32 s4_974
	word32 s5_975
	word32 s6_976
	word32 s7_977
	word32 s8_978
	word32 s9_979
	word32 s10_980
	word32 s11_981
	word32 t4_982
	printf(printf(ra_52, 0x23081F8C<32>, a3_108, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_946, out a0_947, out a1_948, out a2_949, out a3_143, out a4_950, out a5_951, out a7_952, out s2_953, out s3_954, out s4_955, out s5_956, out s6_957, out s7_958, out s8_959, out s9_960, out s10_961, out s11_962, out t4_963), 0x23081FC0<32>, a3_143, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_964, out a0_965, out a1_966, out a2_967, out a3_968, out a4_969, out a5_970, out a7_971, out s2_972, out s3_973, out s4_974, out s5_975, out s6_976, out s7_977, out s8_978, out s9_979, out s10_980, out s11_981, out t4_982)
l23067730:
l230676E2:
	word32 a3_198
	word32 s1_907
	word32 a0_908
	word32 a1_909
	word32 a2_910
	word32 a4_911
	word32 a5_912
	word32 a7_913
	word32 s2_914
	word32 s3_915
	word32 s4_916
	word32 s5_917
	word32 s6_918
	word32 s7_919
	word32 s8_920
	word32 s9_921
	word32 s10_922
	word32 s11_923
	word32 t4_924
	word32 s1_925
	word32 a0_926
	word32 a1_927
	word32 a2_928
	word32 a3_929
	word32 a4_930
	word32 a5_931
	word32 a7_932
	word32 s2_933
	word32 s3_934
	word32 s4_935
	word32 s5_936
	word32 s6_937
	word32 s7_938
	word32 s8_939
	word32 s9_940
	word32 s10_941
	word32 s11_942
	word32 t4_943
	printf(printf(ra_52, 0x23081F8C<32>, a3_76, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_907, out a0_908, out a1_909, out a2_910, out a3_198, out a4_911, out a5_912, out a7_913, out s2_914, out s3_915, out s4_916, out s5_917, out s6_918, out s7_919, out s8_920, out s9_921, out s10_922, out s11_923, out t4_924), 0x23081FC0<32>, a3_198, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_925, out a0_926, out a1_927, out a2_928, out a3_929, out a4_930, out a5_931, out a7_932, out s2_933, out s3_934, out s4_935, out s5_936, out s6_937, out s7_938, out s8_939, out s9_940, out s10_941, out s11_942, out t4_943)
l230676FE:
l23067664:
	branch (s2_36 & 2<i32>) == 0<32> l230676C8
l230676C8:
	Mem240[a0_27 + 28<i32>:word32] = 0<32>
l23067666:
	word32 a0_244
	word32 a3_247
	word32 a5_249
	s1_102 = hal_boot2_partition_bus_addr_inactive(s1_102, dwArgC8, out a0_244, out a3_247, out a5_249)
	branch a0_244 != 0<32> l23067678
l23067674:
	branch a5_249 != 0<32> l23067696
l23067696:
	Mem269[a5_249 + 28<i32>:word32] = dwArgB4
l23067698:
	branch hal_boot2_partition_addr_inactive(s1_102, dwArgC8, out a3_108, out a5_110) != 0<32> l230676AA
l230676A6:
	branch a5_110 != 0<32> l23067738
l23067738:
	Mem302[a5_110 + 20<i32>:word32] = dwArgB4
	Mem307[a5_110 + 24<i32>:word32] = dwArgB4
	word32 a0_805
	word32 a1_806
	word32 a2_807
	word32 a4_808
	word32 a5_809
	word32 s4_810
	word32 s8_811
	puts(0x23082004<32>, out a0_805, out a1_806, out a2_807, out a4_808, out a5_809, out s4_810, out s8_811)
	word32 a3_329
	word32 a3_354
	word32 a3_380
	word32 a1_404
	word32 a3_406
	word32 s1_812
	word32 a0_813
	word32 a1_814
	word32 a2_815
	word32 a4_816
	word32 a5_817
	word32 a7_818
	word32 s2_819
	word32 s3_820
	word32 s4_821
	word32 s5_822
	word32 s6_823
	word32 s7_824
	word32 s8_825
	word32 s9_826
	word32 s10_827
	word32 s11_828
	word32 t4_829
	word32 s1_830
	word32 a0_831
	word32 a1_832
	word32 a2_833
	word32 a4_834
	word32 a5_835
	word32 a7_836
	word32 s2_837
	word32 s3_838
	word32 s4_839
	word32 s5_840
	word32 s6_841
	word32 s7_842
	word32 s8_843
	word32 s9_844
	word32 s10_845
	word32 s11_846
	word32 t4_847
	word32 s1_848
	word32 a0_849
	word32 a1_850
	word32 a2_851
	word32 a4_852
	word32 a5_853
	word32 a7_854
	word32 s2_855
	word32 s3_856
	word32 s4_857
	word32 s5_858
	word32 s6_859
	word32 s7_860
	word32 s8_861
	word32 s9_862
	word32 s10_863
	word32 s11_864
	word32 t4_865
	word32 s1_866
	word32 a0_867
	word32 a2_868
	word32 a4_869
	word32 a5_870
	word32 a7_871
	word32 s2_872
	word32 s3_873
	word32 s4_874
	word32 s5_875
	word32 s6_876
	word32 s7_877
	word32 s8_878
	word32 s9_879
	word32 s10_880
	word32 s11_881
	word32 t4_882
	word32 ra_409 = printf(printf(printf(printf(ra_52, 0x2308202C<32>, a3_108, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_812, out a0_813, out a1_814, out a2_815, out a3_329, out a4_816, out a5_817, out a7_818, out s2_819, out s3_820, out s4_821, out s5_822, out s6_823, out s7_824, out s8_825, out s9_826, out s10_827, out s11_828, out t4_829), 0x2308203C<32>, a3_329, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_830, out a0_831, out a1_832, out a2_833, out a3_354, out a4_834, out a5_835, out a7_836, out s2_837, out s3_838, out s4_839, out s5_840, out s6_841, out s7_842, out s8_843, out s9_844, out s10_845, out s11_846, out t4_847), 0x2308204C<32>, a3_354, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_848, out a0_849, out a1_850, out a2_851, out a3_380, out a4_852, out a5_853, out a7_854, out s2_855, out s3_856, out s4_857, out s5_858, out s6_859, out s7_860, out s8_861, out s9_862, out s10_863, out s11_864, out t4_865), 0x23082064<32>, a3_380, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_866, out a0_867, out a1_404, out a2_868, out a3_406, out a4_869, out a5_870, out a7_871, out s2_872, out s3_873, out s4_874, out s5_875, out s6_876, out s7_877, out s8_878, out s9_879, out s10_880, out s11_881, out t4_882)
	word32 s0_423 = Mem307[a1_404 + 28<i32>:word32]
	word32 s3_439
	word32 s1_883
	word32 a0_884
	word32 a1_885
	word32 a2_886
	word32 a4_887
	word32 a5_888
	word32 a7_889
	word32 s4_890
	word32 s7_891
	word32 s8_892
	word32 s9_893
	word32 s10_894
	word32 s11_895
	word32 t4_896
	ra = printf(ra_409, 0x23082080<32>, a3_406, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_883, out a0_884, out a1_885, out a2_886, out a3_30, out a4_887, out a5_888, out a7_889, out s2_36, out s3_439, out s4_890, out s5, out s6, out s7_891, out s8_892, out s9_893, out s10_894, out s11_895, out t4_896)
	word32 a0_897
	word32 a1_898
	word32 a2_899
	word32 a4_900
	word32 a5_901
	word32 s4_902
	word32 s8_903
	puts(0x23082094<32>, out a0_897, out a1_898, out a2_899, out a4_900, out a5_901, out s4_902, out s8_903)
	Mem461[s3_439:word32] = s0_423
	a0_42 = 0<32>
l230677A8:
	0<32> = dwArg0128
	s0Out = dwArgE4
	a0Out = a0_42
	a3Out = a3_30
	s2Out = s2_36
	s5Out = s5
	s6Out = s6
	return ra
bl_mtd_open_exit:
l230676AA:
	word32 a3_482
	word32 s1_768
	word32 a0_769
	word32 a1_770
	word32 a2_771
	word32 a4_772
	word32 a5_773
	word32 a7_774
	word32 s2_775
	word32 s3_776
	word32 s4_777
	word32 s5_778
	word32 s6_779
	word32 s7_780
	word32 s8_781
	word32 s9_782
	word32 s10_783
	word32 s11_784
	word32 t4_785
	word32 s1_786
	word32 a0_787
	word32 a1_788
	word32 a2_789
	word32 a3_790
	word32 a4_791
	word32 a5_792
	word32 a7_793
	word32 s2_794
	word32 s3_795
	word32 s4_796
	word32 s5_797
	word32 s6_798
	word32 s7_799
	word32 s8_800
	word32 s9_801
	word32 s10_802
	word32 s11_803
	word32 t4_804
	printf(printf(ra_52, 0x23081F8C<32>, a3_108, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_768, out a0_769, out a1_770, out a2_771, out a3_482, out a4_772, out a5_773, out a7_774, out s2_775, out s3_776, out s4_777, out s5_778, out s6_779, out s7_780, out s8_781, out s9_782, out s10_783, out s11_784, out t4_785), 0x23081FC0<32>, a3_482, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_786, out a0_787, out a1_788, out a2_789, out a3_790, out a4_791, out a5_792, out a7_793, out s2_794, out s3_795, out s4_796, out s5_797, out s6_798, out s7_799, out s8_800, out s9_801, out s10_802, out s11_803, out t4_804)
l230676C6:
l23067678:
	word32 a0_732
	word32 s1_731
	word32 a2_734
	word32 a1_733
	word32 a4_735
	word32 a5_736
	word32 a3_537
	word32 a7_737
	word32 s2_738
	word32 s3_739
	word32 s4_740
	word32 s5_741
	word32 s6_742
	word32 s7_743
	word32 s8_744
	word32 s9_745
	word32 s10_746
	word32 s11_747
	word32 t4_748
	word32 s1_749
	word32 a0_750
	word32 a1_751
	word32 a2_752
	word32 a3_753
	word32 a4_754
	word32 a5_755
	word32 a7_756
	word32 s2_757
	word32 s3_758
	word32 s4_759
	word32 s5_760
	word32 s6_761
	word32 s7_762
	word32 s8_763
	word32 s9_764
	word32 s10_765
	word32 s11_766
	word32 t4_767
	printf(printf(ra_52, 0x23081F8C<32>, a3_247, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_731, out a0_732, out a1_733, out a2_734, out a3_537, out a4_735, out a5_736, out a7_737, out s2_738, out s3_739, out s4_740, out s5_741, out s6_742, out s7_743, out s8_744, out s9_745, out s10_746, out s11_747, out t4_748), 0x23081FC0<32>, a3_537, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_749, out a0_750, out a1_751, out a2_752, out a3_753, out a4_754, out a5_755, out a7_756, out s2_757, out s3_758, out s4_759, out s5_760, out s6_761, out s7_762, out s8_763, out s9_764, out s10_765, out s11_766, out t4_767)
l23067694:


word32 bl_mtd_info(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_port_init
//      romfs_register
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a4 a5 s1 tp
// Preserved: s0 sp
bl_mtd_info_entry:
l230677BA:
	word32 a5_18
	word32 a4_35
	strcpy(a1, a0, out a4_35, out a5_18)
	Mem22[a5_18 + 16<i32>:word32] = a1
	Mem24[a5_18 + 20<i32>:word32] = a1
	word32 s1_25 = Mem24[a5_18 + 28<i32>:word32]
	Mem27[a5_18 + 24<i32>:word32] = a1
	return s1_25
bl_mtd_info_exit:


word32 bl_mtd_erase(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_port_erase
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 a1 a4 ra
// Trashed: a0 a1 a2 a4 a5 ra
// Preserved: sp
bl_mtd_erase_entry:
l230677E6:
	word32 a4_13
	word32 a1_15
	word32 ra_17 = bl_flash_erase(ra, Mem5[a0 + 20<i32>:word32] + a1, a2, out a1_15, out a4_13)
	a0Out = 0<32>
	a1Out = a1_15
	a4Out = a4_13
	return ra_17
bl_mtd_erase_exit:


word32 bl_mtd_write(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 s2, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg5C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_port_write
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +005C:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_mtd_write_entry:
l230677FC:
	word32 a1_116
	word32 a5_115
	word32 a4_114
	word32 ra_112
	word32 s4_207
	word32 s0_123 = a2
	word32 s2_121 = a3
	word32 s1_23 = s1 + a1
	branch bl_sys_isxipaddr(a3) == 0<32> l23067894
l23067894:
	ra_112 = bl_flash_write(ra, s1_23, a3, a2, out a1_116, out a4_114, out a5_115)
	s4_207 = s4
l2306781A:
	branch Mem15[0x4200E244<32>:int32] == 0<32> l23067866
l23067866:
	word32 a5_251
	xTaskGetTickCount(out a5_251)
l23067824:
	word32 a5_252
	xTaskGetTickCountFromISR(out a5_252)
l23067828:
	word32 a0_259
	word32 a2_260
	word32 a3_261
	word32 s4_262
	word32 s5_263
	word32 s8_264
	word32 s9_265
	word32 s10_266
	word32 s11_267
	word32 s1_107
	ra_112 = bl_printk(ra, 0x230820C8<32>, 0x230820BC<32>, dwLoc58, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_107, out a0_259, out a1_116, out a2_260, out a3_261, out a4_114, out a5_115, out s2_121, out s3, out s4_262, out s5_263, out s6, out s7, out s8_264, out s9_265, out s10_266, out s11_267)
	s4_207 = 64<i32>
l23067852:
	branch s0_123 != 0<32> l2306786C
l2306786C:
	s3 = s0_123
	branch s0_123 <=u 64<i32> l23067876
l23067872:
	s3 = 64<i32>
l23067876:
	word32 a2_253
	word32 a3_254
	word32 a4_255
	word32 a5_256
	word32 a6_257
	word32 a7_258
	memcpy(fp + -96<i32>, s2_121, s3, out a2_253, out a3_254, out a4_255, out a5_256, out a6_257, out a7_258)
	ra_112 = bl_flash_write(ra_112, s1_107, fp + -96<i32>, s3, out a1_116, out a4_114, out a5_115)
	s1_107 = s1_107 + s3
	s2_121 = s2_121 + s3
	s0_123 = s0_123 - s3
l23067854:
	s0Out = s0_123
	s1Out = dwArg28
	a0Out = 0<32>
	a1Out = a1_116
	a3Out = dwArg08
	a4Out = a4_114
	a5Out = a5_115
	s2Out = s2_121
	s3Out = s3
	s4Out = s4_207
	s5Out = s4
	s6Out = s6
	s7Out = s7
	return ra_112
bl_mtd_write_exit:


word32 bl_mtd_read(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_port_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra
// Preserved: sp
bl_mtd_read_entry:
l230678A0:
	word32 a4_14
	word32 a1_16
	word32 a3_18
	word32 ra_19 = bl_flash_read(ra, Mem5[a0 + 20<i32>:word32] + a1, a3, a2, out a1_16, out a3_18, out a4_14)
	a0Out = 0<32>
	a1Out = a1_16
	a3Out = a3_18
	a4Out = a4_14
	return ra_19
bl_mtd_read_exit:


word32 bloop_init(word32 ra, word32 a0, word32 dwArg18, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & a3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 ra s5
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
bloop_init_entry:
l230678B6:
	word32 s1_16 = a0 + 272<i32>
	word32 a3_20
	word32 a5_102
	word32 a4_101
	word32 a2_100
	word32 a1_99
	word32 a0_98
	word32 t1_97
	word32 ra_23 = memset(ra, a0, 0<32>, 1184<i32>, out t1_97, out a0_98, out a1_99, out a2_100, out a3_20, out a4_101, out a5_102)
l230678D4:
	utils_list_init(s1_16)
	s1_16 = s1_16 + 8<32>
	branch s1_16 != a0 + 528<i32> l230678D4
l230678E0:
	Mem33[a0 + 1172<i32>:word32] = a0 + 1168<i32>
	Mem34[a0 + 1168<i32>:word32] = a0 + 1168<i32>
	Mem37[a0 + 1180<i32>:word32] = a0 + 1176<i32>
	Mem38[a0 + 1176<i32>:word32] = a0 + 1176<i32>
	word32 a0_104
	word32 a3_49
	word32 s5_59
	word32 s1_103
	word32 a1_105
	word32 a2_106
	word32 a4_107
	word32 a5_108
	word32 a7_109
	word32 s2_110
	word32 s3_111
	word32 s4_112
	word32 s6_113
	word32 s7_114
	word32 s8_115
	word32 s9_116
	word32 s10_117
	word32 s11_118
	word32 t4_119
	word32 ra_52 = printf(ra_23, 0x2308210C<32>, a3_20, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_103, out a0_104, out a1_105, out a2_106, out a3_49, out a4_107, out a5_108, out a7_109, out s2_110, out s3_111, out s4_112, out s5_59, out s6_113, out s7_114, out s8_115, out s9_116, out s10_117, out s11_118, out t4_119)
	0<32> = dwArg38
	a3Out = a3_49
	s5Out = s5_59
	return ra_52
bloop_init_exit:


void bloop_handler_register(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
//      loopset_led_hook_on_looprt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a2 a5
// Preserved: sp
bloop_handler_register_entry:
l23067916:
	branch a2 >u 0x1F<32> l23067930
l23067930:
l2306791C:
	word32 a2_8 = (a2 << 2<i32>) + a0
	branch Mem0[a2_8 + 1040<i32>:int32] != 0<32> l23067932
l23067932:
	return
l23067928:
	Mem13[a2_8 + 1040<i32>:word32] = a1
	return
bloop_handler_register_exit:


word32 bloop_timer_init(word32 ra, word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: s0 sp
bloop_timer_init_entry:
l23067934:
	word32 t1_39
	word32 a0_40
	word32 a1_41
	word32 a2_42
	word32 a3_43
	word32 a4_44
	word32 a5_45
	memset(ra, a0, 0<32>, 36<i32>, out t1_39, out a0_40, out a1_41, out a2_42, out a3_43, out a4_44, out a5_45)
	Mem27[a0:word32] = a0
	Mem28[a0 + 4<i32>:word32] = a0
	Mem29[a0 + 8<i32>:byte] = SLICE(CONVERT(a1 != 0<32>, bool, word32) << 1<i32>, byte, 0)
	return a1
bloop_timer_init_exit:


word32 bloop_timer_configure(word32 a0, word32 a1, word32 a3, word32 a4, word32 dwArgB4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] Stack +00B4:[0..31]
// LiveOut: s0
// Trashed: a0 a2 a5 a6 s0 s4 s8 t3
// Preserved: sp
bloop_timer_configure_entry:
l23067962:
	word32 a5_21
	word32 a0_20 = xTaskGetTickCount(out a5_21)
	Mem27[a0_20 + 12<i32>:word32] = a0
	Mem29[a0_20 + a1 + 16<i32>:word32] = a0
	Mem30[dwArgB4 + 28<i32>:word32] = a0
	Mem31[a3 + 32<i32>:word32] = a0
	Mem32[a4 + 20<i32>:word32] = a0
	Mem33[a5_21 + 24<i32>:word32] = a0
	return dwArgE4
bloop_timer_configure_exit:


void bloop_timer_repeat_enable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_trigger
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
bloop_timer_repeat_enable_entry:
l23067998:
	Mem7[a0 + 8<i32>:byte] = SLICE(CONVERT(Mem0[a0 + 8<i32>:byte], byte, word32) | 1<i32>, byte, 0)
	return
bloop_timer_repeat_enable_exit:


word32 bloop_timer_repeat_reconfigure(word32 s0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bloop_run
// MayUse:  a0:[0..31] s0:[0..31]
// LiveOut: s1
// Trashed: a0 a2 a5 s1 tp
// Preserved: s0 sp
bloop_timer_repeat_reconfigure_entry:
l230679A6:
	word32 s0_14 = s0 - Mem9[Mem9[s0 + 16<i32>:word32] + 12<i32>:word32]
	word32 a5_29
	word32 a0_15 = xTaskGetTickCount(out a5_29)
	Mem18[s0_14 + a0_15 + 16<i32>:word32] = a0
	Mem21[a0_15 + 12<i32>:word32] = a0
	return a0
bloop_timer_repeat_reconfigure_exit:


word32 bloop_timer_register(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_timer_register
//      bloop_run
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a2 a3 a4 a5
// Trashed: a2 a3 a4 a5 a6 a7
// Preserved: sp
bloop_timer_register_entry:
l230679CA:
	word32 a2_5 = Mem0[a0 + 1172<i32>:int32]
	branch a0 + 1168<i32> != a2_5 l23067A16
l23067A16:
	word32 a4_10 = a2_5
	word32 a5_16 = 0<32>
l23067A06:
	branch a0 + 1168<i32> != a4_10 l230679E4
l230679E4:
	branch Mem0[a1 + 16<i32>:int32] - Mem0[a4_10 + 16<i32>:int32] > 0<32> l23067A02
l23067A02:
	a5_16 = a4_10
	a4_10 = Mem0[a4_10 + 4<i32>:word32]
l230679F4:
	branch a5_16 != 0<32> l23067A0A
l230679F6:
	Mem20[a2_5 + 4<i32>:word32] = a1
	Mem21[a0 + 1168<i32>:word32] = a1
	Mem23[a0 + 1172<i32>:word32] = a1
	Mem24[a1:word32] = a2_5
	a3Out = <invalid>
	a4Out = a4_10
	a5Out = a5_16
	return <invalid>
l23067A0A:
	word32 a5_27 = Mem0[a4_10 + 4<i32>:word32]
	Mem29[a5_27:word32] = a1
	Mem30[a4_10 + 4<i32>:word32] = a1
	Mem31[a1 + 4<i32>:word32] = a5_27
	Mem32[a1:word32] = a4_10
	a3Out = <invalid>
	a4Out = a4_10
	a5Out = a5_27
	return <invalid>
l230679D6:
	Mem34[a0 + 1172<i32>:word32] = a1
	Mem35[a0 + 1168<i32>:word32] = a1
	Mem36[a0 + 1172<i32>:word32] = a1
	Mem37[a0 + 1168<i32>:word32] = a1
	a3Out = <invalid>
	a4Out = a4
	a5Out = a5
	return <invalid>
bloop_timer_register_exit:


word32 bloop_wait_startup(word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg0128, word32 dwArg0168, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a3 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
bloop_wait_startup_entry:
l23067A1C:
l23067A24:
	branch a5 == 0<32> l23067A30
l23067A30:
	word32 a0_77
	word32 a1_78
	word32 s4_79
	vTaskDelay(1<32>, a2, a3, a4, a5, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1, out a0_77, out a1_78, out a2, out a3, out a4, out a5, out s2, out s3, out s4_79)
l23067A28:
	a3Out = a3
	s2Out = s2
	s3Out = s3
	return s1
bloop_wait_startup_exit:


word32 bloop_evt_set_async(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s1Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bloop_evt_set_async_entry:
l23067A38:
	branch a1 <=u 0x1F<32> l23067A5E
l23067A5E:
	word32 a5_17
	vTaskEnterCritical(a4, mstatus, out a5_17)
	word32 a3_22 = 1<32> << a1
	Mem26[(a3_22 | 1<32>) + 4<i32>:word32] = Mem14[5<32>:word32]
	Mem29[(a5_17 | a2) + 16<i32>:word32] = Mem26[a5_17 + 16<i32>:word32]
	word32 a4_32
	word32 a5_105
	vTaskExitCritical(a3_22, mstatus, out a4_32, out a5_105)
l23067A94_thunk_xTaskGenericNotify:
	word32 s1_46
	word32 mstatus_54
	word32 s0_125
	word32 a0_126
	word32 a1_127
	word32 a2_128
	word32 a3_129
	word32 a4_130
	word32 a5_131
	word32 s2_132
	word32 s3_133
	word32 s4_134
	word32 ra_55 = xTaskGenericNotify(ra, a0, 0<32>, 2<32>, 0<32>, a4_32, mstatus, dwArg14, dwArg38, dwArg58, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_125, out s1_46, out a0_126, out a1_127, out a2_128, out a3_129, out a4_130, out a5_131, out s2_132, out s3_133, out s4_134, out mstatus_54)
	s1Out = s1_46
	mstatusOut = mstatus_54
	return ra_55
bloop_evt_set_async_exit:
l23067A44:
	word32 s1_106
	word32 a0_107
	word32 a1_108
	word32 a2_109
	word32 a3_110
	word32 a4_111
	word32 a5_112
	word32 a7_113
	word32 s2_114
	word32 s3_115
	word32 s4_116
	word32 s5_117
	word32 s6_118
	word32 s7_119
	word32 s8_120
	word32 s9_121
	word32 s10_122
	word32 s11_123
	word32 t4_124
	printf(ra, 0x2307AA20<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_106, out a0_107, out a1_108, out a2_109, out a3_110, out a4_111, out a5_112, out a7_113, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7_119, out s8_120, out s9_121, out s10_122, out s11_123, out t4_124)
l23067A5C:


word32 bloop_evt_set_sync(word32 ra, word32 a1, word32 a2, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bloop_run
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
bloop_evt_set_sync_entry:
l23067A98:
	branch a1 <=u 0x1F<32> l23067ABC
l23067ABC:
	word32 a3_6 = 1<32> << a1
	Mem11[(a3_6 | 1<32>) + 8<i32>:word32] = Mem0[9<32>:word32]
	word32 a0_12 = Mem11[0x2F<32>:word32]
	Mem15[(a2 | 0x1F<32>) + 16<i32>:word32] = a0_12
	a1Out = a1 << 2<i32>
	a3Out = a3_6
	a4Out = a3_6 | 1<32>
	a5Out = a2 | 0x1F<32>
	return a0_12
bloop_evt_set_sync_exit:
l23067A9E:
	word32 s1_58
	word32 a0_59
	word32 a1_60
	word32 a2_61
	word32 a3_62
	word32 a4_63
	word32 a5_64
	word32 a7_65
	word32 s2_66
	word32 s3_67
	word32 s4_68
	word32 s5_69
	word32 s6_70
	word32 s7_71
	word32 s8_72
	word32 s9_73
	word32 s10_74
	word32 s11_75
	word32 t4_76
	printf(ra, 0x2307AA20<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_58, out a0_59, out a1_60, out a2_61, out a3_62, out a4_63, out a5_64, out a7_65, out s2_66, out s3_67, out s4_68, out s5_69, out s6_70, out s7_71, out s8_72, out s9_73, out s10_74, out s11_75, out t4_76)
l23067ABA:


word32 bloop_evt_unset_sync(word32 ra, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bloop_run
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
bloop_evt_unset_sync_entry:
l23067AD4:
	branch a1 <=u 0x1F<32> l23067AF8
l23067AF8:
	word32 a0_8 = Mem0[a1 + 8<i32>:word32]
	Mem11[(~(1<32> << a1) & a1) + 8<i32>:word32] = a0_8
	return a0_8
bloop_evt_unset_sync_exit:
l23067ADA:
	word32 s1_50
	word32 a0_51
	word32 a1_52
	word32 a2_53
	word32 a3_54
	word32 a4_55
	word32 a5_56
	word32 a7_57
	word32 s2_58
	word32 s3_59
	word32 s4_60
	word32 s5_61
	word32 s6_62
	word32 s7_63
	word32 s8_64
	word32 s9_65
	word32 s10_66
	word32 s11_67
	word32 t4_68
	printf(ra, 0x2307AA20<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_50, out a0_51, out a1_52, out a2_53, out a3_54, out a4_55, out a5_56, out a7_57, out s2_58, out s3_59, out s4_60, out s5_61, out s6_62, out s7_63, out s8_64, out s9_65, out s10_66, out s11_67, out t4_68)
l23067AF6:


void bloop_run(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s5, word32 s6, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg38, word32 dwArg5C, word32 dwArg6C, word32 dwArgD8, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      proc_entry_looprt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +006C:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
bloop_run_exit:
bloop_run_entry:
l23067B0A:
	word32 a5_1000
	word32 a0_101 = xTaskGetCurrentTaskHandle(out a5_1000)
	Mem34[a0_101:word32] = a0
	word32 s0_15 = a0
	word32 s2_150 = 0x4201F000<32>
	word32 s3_153 = 0x4201F000<32>
	word32 s4_155 = 0x4200E000<32>
	word32 s5_165 = 0x23082000<32>
l23067B3E:
	word32 s7_40 = s0_15 + 1168<i32>
l23067B42:
	word32 a5_43
	word32 a4_44 = vTaskEnterCritical(a4, mstatus, out a5_43)
	word32 s0_47 = Mem45[a4_44 + 4<i32>:word32]
	Mem48[s0_47 + 4<i32>:word32] = 0<32>
	Mem50[(a5_43 | a4_44) + 8<i32>:word32] = s0_47
	word32 a5_52
	word32 a4_104
	a3 = vTaskExitCritical(a3, mstatus, out a4_104, out a5_52)
	word32 s0_203 = Mem50[a5_52 + 8<i32>:word32]
	branch a5_52 != 0<32> l23067C1E
l23067B5A:
	word32 a5_487 = Mem50[s0_203 + 1172<i32>:int32]
	a1 = 0xFFFFFFFF<32>
	branch a5_487 == s7_40 l23067B72
l23067B64:
	a0_101 = xTaskGetTickCount(out a5_487)
	a1 = s1 - a0_101
	branch a1 <= 0<32> l23067C1E
l23067C1E:
	branch Mem50[s0_203 + 1172<i32>:int32] != s7_40 l23067C6E
l23067C6E:
	word32 a5_121
	word32 a0_68 = xTaskGetTickCount(out a5_121)
	word32 s1_126 = Mem50[s0_203 + 1172<i32>:int32]
	word32 s6_123 = 0<32>
	branch s1_126 == 0<32> l23067C80
l23067C7C:
	s6_123 = Mem50[s1_126 + 4<i32>:int32]
l23067C80:
	word32 s8_139 = s0_203 + 1176<i32>
	a0_101 = a0_68
l23067C84:
	branch s1_126 != s7_40 l23067CFE
l23067CFE:
	a5_121 = a0_68 - a5_121
	branch a5_121 < 0<32> l23067C88
l23067D08:
	word32 a5_105
	a0_101 = bloop_evt_set_sync(ra, a1, a2, a3, s6, dwArg10, dwArg14, dwArg38, dwArg5C, out a1, out a3, out a4_104, out a5_105)
	branch a5_105 == 0<32> l23067D1E
l23067D16:
	call a5_105 (retsize: 0;)
		uses: a1:Mem79[a2_491 + 32<i32>:word32],a2:a2_491,a3:a3_94,ra:ra_688,Stack +0018:s6,Stack +0060:dwArg10,Stack +0064:dwArg14,Stack +0088:dwArg38,Stack +00AC:dwArg5C
		defs: a0:a0_101,a1:a1_102,a3:a3_103,a4:a4_104,a5:a5_105
l23067D1E:
	word32 s1_110 = Mem79[a4_104:word32]
	Mem111[a5_105 + 4<i32>:word32] = a4_104
	Mem112[a4_104:word32] = a5_105
	word32 a5_114 = Mem112[s0_203 + 1180<i32>:int32]
	Mem117[s1_110:word32] = s0_203 + 1176<i32>
	Mem118[a5_114 + 4<i32>:word32] = s1_110
	Mem119[s0_203 + 1180<i32>:word32] = s1_110
	Mem120[s1_110:word32] = a5_114
	a5_121 = 0<32>
	branch s6_123 == 0<32> l23067D40
l23067D3C:
	a5_121 = Mem120[s6_123 + 4<i32>:int32]
l23067D40:
	s1_126 = s6_123
	s6_123 = a5_121
l23067C88:
	word32 s1_131 = Mem79[s0_203 + 1180<i32>:int32]
	word32 s6_132 = 0<32>
	branch s1_131 == 0<32> l23067C94
l23067C90:
	s6_132 = Mem79[s1_131 + 4<i32>:int32]
l23067C94:
	word32 s7_134 = 1<32>
	word32 s10_136 = 0x23082000<32>
	word32 s11_137 = 0x23082000<32>
l23067CA2:
	branch s1_131 == s8_139 l23067C26
l23067CA6:
	word32 s1_144 = Mem141[a5_121 + 4<i32>:word32]
	Mem145[a5_121 + 4<i32>:word32] = a4_104
	Mem146[a4_104:word32] = a5_121
	word32 a5_147 = CONVERT(Mem146[s1_144 + 8<i32>:byte], byte, word32)
	a4_104 = a5_147 & 2<i32>
	branch (a5_147 & 2<i32>) == 0<32> l23067D4C
l23067D4C:
	branch (a5_147 & 1<32>) == 0<32> l23067CEE
l23067D50:
	branch s7_134 <u CONVERT(Mem146[s2_150 + -260<i32>:byte], byte, word32) l23067D80
l23067D58:
	branch s7_134 <u CONVERT(Mem146[s3_153 + -259<i32>:byte], byte, word32) l23067D80
l23067D60:
	branch Mem146[s4_155 + 580<i32>:int32] == 0<32> l23067D90
l23067D90:
	word32 a5_1060
	xTaskGetTickCount(out a5_1060)
l23067D66:
	word32 a5_1061
	xTaskGetTickCountFromISR(out a5_1061)
l23067D6A:
	word32 a0_1062
	word32 a2_1064
	word32 a1_1063
	word32 a3_1065
	word32 a4_1066
	word32 a5_1067
	word32 s9_1068
	ra = bl_printk(ra, s10_136 + 324<i32>, s5_165 + 252<i32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_144, out a0_1062, out a1_1063, out a2_1064, out a3_1065, out a4_1066, out a5_1067, out s2_150, out s3_153, out s4_155, out s5_165, out s6_132, out s7_134, out s8_139, out s9_1068, out s10_136, out s11_137)
l23067D80:
	word32 s1_208 = bloop_timer_repeat_reconfigure(s0_203, s1_144)
	a1 = s1_208
	a0_101 = s0_203
	word32 a5_1059
	a2 = bloop_timer_register(s0_203, s1_208, out a3, out a4_104, out a5_1059)
l23067CB8:
	word32 a5_218 = CONVERT(Mem146[s2_150 + -260<i32>:byte], byte, word32)
	branch s7_134 <u a5_218 l23067CE8
l23067CC0:
	a5_218 = CONVERT(Mem146[s3_153 + -259<i32>:byte], byte, word32)
	branch s7_134 <u a5_218 l23067CE8
l23067CC8:
	branch Mem146[s4_155 + 580<i32>:int32] == 0<32> l23067D46
l23067D46:
	word32 a5_1051
	xTaskGetTickCount(out a5_1051)
l23067CCE:
	word32 a5_1052
	xTaskGetTickCountFromISR(out a5_1052)
l23067CD2:
	word32 a1_1054
	word32 s9_1058
	word32 s4_1057
	word32 a3_1055
	word32 a4_1056
	word32 a0_1053
	ra = bl_printk(ra, s11_137 + 292<i32>, s5_165 + 252<i32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_144, out a0_1053, out a1_1054, out a2, out a3_1055, out a4_1056, out a5_218, out s2_150, out s3_153, out s4_1057, out s5_165, out s6_132, out s7_134, out s8_139, out s9_1058, out s10_136, out s11_137)
l23067CE8:
	word32 s1_1047
	word32 t3_1050
	word32 a5_1048
	word32 a6_1049
	vPortFree(s1_144, a2, a5_218, mstatus, dwArg0108, dwArg0148, out s0_203, out s1_1047, out a0_101, out a1, out a2, out a3, out a4_104, out a5_1048, out a6_1049, out s4_155, out t3_1050)
l23067CEE:
	a5_121 = 0<32>
	branch s6_132 == 0<32> l23067CF8
l23067CF4:
	a5_121 = Mem146[s6_132 + 4<i32>:int32]
l23067CF8:
	s1_131 = s6_132
	s6_132 = a5_121
l23067C26:
	word32 a4_1001
	word32 a0_308 = __clzsi2(a0_101, out a4_1001)
	s0_15 = Mem306[a0_308 + 12<i32>:word32]
	s1 = a0_308
	word32 a0_313 = __clzsi2(a0_308, out a4)
	branch a0_313 >= a0_308 l23067B7A
l23067B7A:
	s1 = 0x1F<32> - a0_308
	branch s1 == 0xFFFFFFFF<32> l23067C38
l23067B86:
	word32 s6_320 = (s1 << 2<u32>) + s0_15
	branch Mem306[s6_320 + 1040<i32>:int32] != 0<32> l23067BAC
l23067BAC:
	word32 a5_1022
	vTaskEnterCritical(a4, mstatus, out a5_1022)
	word32 a4_330 = Mem325[s6_320 + 16<i32>:int32]
	word32 a5_331 = Mem325[s6_320 + 144<i32>:int32]
	Mem332[s6_320 + 16<i32>:word32] = 0<32>
	Mem334[s6_320 + 144<i32>:word32] = a5_331 | a4_330
	word32 a4_1023
	word32 a5_1024
	vTaskExitCritical(a3, mstatus, out a4_1023, out a5_1024)
	call a5_350 (retsize: 0;)
	word32 a5_350
	word32 a3_1026
	word32 a2_1025
	word32 a0_345 = bl_timer_now_us(out a2_1025, out a3_1026, out a5_350)
	word32 a5_1027
	word32 a0_377 = bl_timer_now_us(out a2, out a3, out a5_1027)
	word32 a5_390 = (s1 << 4<u32>) + s0_15
	word32 a4_391 = Mem334[a5_390 + 536<i32>:int32]
	word32 a0_392 = a0_377 - a0_345
	Mem393[a5_390 + 532<i32>:word32] = a0_392
	Mem395[a5_390 + 536<i32>:word32] = a4_391 + a0_392
	branch Mem395[a5_390 + 528<i32>:int32] >=u a0_392 l23067C0A
l23067C06:
	Mem397[a5_390 + 528<i32>:word32] = a0_392
l23067C0A:
	word32 a4_400 = Mem399[a5_390 + 540<i32>:int32]
	Mem406[a5_390 + 540<i32>:word32] = a4_400 + 1<32>
	a1 = s1
	a4 = a4_400 + 1<32>
	a0_101 = bloop_evt_unset_sync(ra, s1, a3, s6, dwArg10, dwArg14, dwArg38, dwArg5C)
l23067B92:
	word32 a2_1031
	word32 s5_1039
	word32 a7_1035
	word32 s9_1043
	word32 t4_1046
	word32 s10_1044
	word32 s11_1045
	word32 s8_1042
	word32 s6_1040
	word32 s7_1041
	word32 s4_1038
	word32 s2_1036
	word32 s3_1037
	word32 a5_1034
	word32 a3_1032
	word32 a4_1033
	word32 a1_1030
	word32 s1_1028
	word32 a0_1029
	printf(ra, 0x2307AA20<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_1028, out a0_1029, out a1_1030, out a2_1031, out a3_1032, out a4_1033, out a5_1034, out a7_1035, out s2_1036, out s3_1037, out s4_1038, out s5_1039, out s6_1040, out s7_1041, out s8_1042, out s9_1043, out s10_1044, out s11_1045, out t4_1046)
l23067BAA:
l23067C38:
	a0_101 = 0x1F<32> - a0_313
	branch a0_101 == 0xFFFFFFFF<32> l23067B3E
l23067C44:
	word32 a5_1002
	a0_101 = utils_list_pop_front(a4, 0xFFFFFFFF<32>, out a5_1002)
	branch a0_101 != 0<32> l23067B3E
l23067C54:
	word32 s10_1019
	word32 s11_1020
	word32 t4_1021
	word32 s1_1003
	word32 a0_1004
	word32 s9_1018
	word32 a1_1005
	word32 s3_1012
	word32 s4_1013
	word32 s5_1014
	word32 s8_1017
	word32 s6_1015
	word32 s7_1016
	word32 a2_1006
	word32 a3_1007
	word32 a7_1010
	word32 s2_1011
	word32 a4_1008
	word32 a5_1009
	printf(ra, 0x2307AA20<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_1003, out a0_1004, out a1_1005, out a2_1006, out a3_1007, out a4_1008, out a5_1009, out a7_1010, out s2_1011, out s3_1012, out s4_1013, out s5_1014, out s6_1015, out s7_1016, out s8_1017, out s9_1018, out s10_1019, out s11_1020, out t4_1021)
l23067C6C:
l23067B72:
	a0_101 = 1<32>
	s1 = ulTaskNotifyTake(1<32>, a1, a2, a3, a4_104, a5_487, mstatus, s6, dwArgD8, out a2, out a3, out a4, out s2_150, out s3_153)


word32 bloop_status_dump(word32 ra, word32 a3, word32 s5, word32 dwArg20, word32 dwArg24, word32 dwArg6C, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_evt_status_dump
//      loop_evt_entity_sys_evt
// MayUse:  a3:[0..31] ra:[0..31] s5:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +006C:[0..31] Stack +010C:[0..31]
// LiveOut: a3 a5 a6 ra s0 s1 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bloop_status_dump_entry:
l23067D96:
	word32 a2_516
	word32 a1_515
	word32 a0_514
	word32 a4_517
	word32 s4_519
	word32 a5_518
	word32 s8_520
	puts(0x23082170<32>, out a0_514, out a1_515, out a2_516, out a4_517, out a5_518, out s4_519, out s8_520)
	word32 a1_51
	word32 a3_53
	word32 t4_537
	word32 s8_533
	word32 s10_535
	word32 s9_534
	word32 s11_536
	word32 s4_529
	word32 s6_531
	word32 s5_530
	word32 s7_532
	word32 a5_525
	word32 s2_527
	word32 a7_526
	word32 s3_528
	word32 s1_521
	word32 a2_523
	word32 a0_522
	word32 a4_524
	word32 ra_56 = printf(ra, 0x2308218C<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_521, out a0_522, out a1_51, out a2_523, out a3_53, out a4_524, out a5_525, out a7_526, out s2_527, out s3_528, out s4_529, out s5_530, out s6_531, out s7_532, out s8_533, out s9_534, out s10_535, out s11_536, out t4_537)
	word32 s0_70 = Mem33[a1_51 + 12<i32>:word32]
	word32 s10_553
	word32 t4_555
	word32 s11_554
	word32 s6_549
	word32 s8_551
	word32 s7_550
	word32 s9_552
	word32 s2_545
	word32 s4_547
	word32 s3_546
	word32 s5_548
	word32 a2_541
	word32 a5_543
	word32 a4_542
	word32 a7_544
	word32 a0_539
	word32 s1_538
	word32 a1_540
	word32 a3_137
	word32 ra_130 = printf(ra_56, 0x230821A0<32>, a3_53, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_538, out a0_539, out a1_540, out a2_541, out a3_137, out a4_542, out a5_543, out a7_544, out s2_545, out s3_546, out s4_547, out s5_548, out s6_549, out s7_550, out s8_551, out s9_552, out s10_553, out s11_554, out t4_555)
	word32 a5_556
	xTaskGetTickCount(out a5_556)
	word32 s8_561
	word32 a0_557
	word32 a4_559
	word32 a1_558
	word32 a5_560
	word32 a2_101
	word32 s4_107
	puts(0x230821B4<32>, out a0_557, out a1_558, out a2_101, out a4_559, out a5_560, out s4_107, out s8_561)
	word32 s1_110 = Mem33[s0_70 + 1172<i32>:int32]
	word32 s3_111 = s0_70 + 1168<i32>
	word32 s5_113 = 0x23082000<32>
l23067DFC:
	branch s3_111 != s1_110 l23067ED0
l23067ED0:
	word32 s1_141
	word32 t4_574
	word32 s11_573
	word32 s10_572
	word32 s9_571
	word32 s8_570
	word32 s7_569
	word32 a5_565
	word32 s2_567
	word32 a7_566
	word32 s6_568
	word32 a1_563
	word32 a0_562
	word32 a4_564
	ra_130 = printf(ra_130, s5_113 + 460<i32>, s4_107 - a2_101, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_141, out a0_562, out a1_563, out a2_101, out a3_137, out a4_564, out a5_565, out a7_566, out s2_567, out s3_111, out s4_107, out s5_113, out s6_568, out s7_569, out s8_570, out s9_571, out s10_572, out s11_573, out t4_574)
	s1_110 = Mem33[s1_141 + 4<i32>:word32]
l23067E00:
	word32 a0_575
	word32 a1_576
	word32 a2_577
	word32 a4_578
	word32 a5_579
	word32 a7_580
	word32 s2_581
	word32 s3_582
	word32 s4_583
	word32 s5_584
	word32 s6_585
	word32 s7_586
	word32 s8_587
	word32 s9_588
	word32 s10_589
	word32 s11_590
	word32 t4_591
	word32 s1_172
	word32 a3_168
	word32 ra_171 = printf(ra_130, 0x23082218<32>, a3_137, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_172, out a0_575, out a1_576, out a2_577, out a3_168, out a4_578, out a5_579, out a7_580, out s2_581, out s3_582, out s4_583, out s5_584, out s6_585, out s7_586, out s8_587, out s9_588, out s10_589, out s11_590, out t4_591)
	word32 s5_188 = 0x23082000<32>
l23067E3A:
	branch Mem195[s1_172 + 1024<i32>:int32] == 0<32> l23067E44
l23067E42:
l23067E44:
	word32 s6_229
	word32 a0_592
	word32 a1_593
	word32 a2_594
	word32 a4_595
	word32 a5_596
	word32 a7_597
	word32 s3_598
	word32 s4_599
	word32 s7_600
	word32 s8_601
	word32 s9_602
	word32 s10_603
	word32 s11_604
	word32 t4_605
	word32 s2_225
	word32 s1_222
	ra_171 = printf(ra_171, s5_188 + 552<i32>, a3_168, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_222, out a0_592, out a1_593, out a2_594, out a3_168, out a4_595, out a5_596, out a7_597, out s2_225, out s3_598, out s4_599, out s5_188, out s6_229, out s7_600, out s8_601, out s9_602, out s10_603, out s11_604, out t4_605)
	branch Mem195[s1_222 + 1024<i32>:int32] == 0<32> l23067EA4
l23067E56:
	word32 a3_246
	word32 s7_258
	word32 a3_270
	word32 s8_283
	word32 a3_294
	word32 s9_308
	word32 a3_319
	word32 s10_324
	word32 s1_606
	word32 a0_607
	word32 a1_608
	word32 a2_609
	word32 a4_610
	word32 a5_611
	word32 a7_612
	word32 s2_613
	word32 s3_614
	word32 s4_615
	word32 s5_616
	word32 s6_617
	word32 s8_618
	word32 s9_619
	word32 s10_620
	word32 s11_621
	word32 t4_622
	word32 s1_623
	word32 a0_624
	word32 a1_625
	word32 a2_626
	word32 a4_627
	word32 a5_628
	word32 a7_629
	word32 s2_630
	word32 s3_631
	word32 s4_632
	word32 s5_633
	word32 s6_634
	word32 s7_635
	word32 s9_636
	word32 s10_637
	word32 s11_638
	word32 t4_639
	word32 s1_640
	word32 a0_641
	word32 a1_642
	word32 a2_643
	word32 a4_644
	word32 a5_645
	word32 a7_646
	word32 s2_647
	word32 s3_648
	word32 s4_649
	word32 s5_650
	word32 s6_651
	word32 s7_652
	word32 s8_653
	word32 s10_654
	word32 s11_655
	word32 t4_656
	word32 s1_657
	word32 a0_658
	word32 a1_659
	word32 a2_660
	word32 a4_661
	word32 a5_662
	word32 a7_663
	word32 s2_664
	word32 s3_665
	word32 s4_666
	word32 s5_667
	word32 s6_668
	word32 s7_669
	word32 s8_670
	word32 s9_671
	word32 s11_672
	word32 t4_673
	word32 a0_674
	word32 a1_675
	word32 a2_676
	word32 a4_677
	word32 a5_678
	word32 a7_679
	word32 s3_680
	word32 s4_681
	word32 s6_682
	word32 s7_683
	word32 s8_684
	word32 s9_685
	word32 s10_686
	word32 s11_687
	word32 t4_688
	ra_171 = printf(printf(printf(printf(printf(ra_171, s6_229 + 576<i32>, a3_168, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_606, out a0_607, out a1_608, out a2_609, out a3_246, out a4_610, out a5_611, out a7_612, out s2_613, out s3_614, out s4_615, out s5_616, out s6_617, out s7_258, out s8_618, out s9_619, out s10_620, out s11_621, out t4_622), s7_258 + 600<i32>, a3_246, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_623, out a0_624, out a1_625, out a2_626, out a3_270, out a4_627, out a5_628, out a7_629, out s2_630, out s3_631, out s4_632, out s5_633, out s6_634, out s7_635, out s8_283, out s9_636, out s10_637, out s11_638, out t4_639), s8_283 + 620<i32>, a3_270, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_640, out a0_641, out a1_642, out a2_643, out a3_294, out a4_644, out a5_645, out a7_646, out s2_647, out s3_648, out s4_649, out s5_650, out s6_651, out s7_652, out s8_653, out s9_308, out s10_654, out s11_655, out t4_656), s9_308 + 640<i32>, a3_294, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_657, out a0_658, out a1_659, out a2_660, out a3_319, out a4_661, out a5_662, out a7_663, out s2_664, out s3_665, out s4_666, out s5_667, out s6_668, out s7_669, out s8_670, out s9_671, out s10_324, out s11_672, out t4_673), s10_324 + 668<i32>, a3_319, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_222, out a0_674, out a1_675, out a2_676, out a3_168, out a4_677, out a5_678, out a7_679, out s2_225, out s3_680, out s4_681, out s5_188, out s6_682, out s7_683, out s8_684, out s9_685, out s10_686, out s11_687, out t4_688)
l23067EA4:
	s1_172 = s1_222 + 0xFFFFFFFC<32>
	branch s2_225 != 0<32> l23067E3A
l23067EB0:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a3Out = s2
	a5Out = 0xFFFFFFFF<32>
	a6Out = dwArg0188
	s5Out = s5_188
	return dwLoc08
bloop_status_dump_exit:


void loop_evt_entity_sys_handler(word32 ra, word32 a5, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
loop_evt_entity_sys_handler_entry:
l23067EEE:
	word32 s1_50
	word32 a0_51
	word32 a1_52
	word32 a2_53
	word32 a3_54
	word32 a4_55
	word32 a5_56
	word32 a7_57
	word32 s2_58
	word32 s3_59
	word32 s4_60
	word32 s5_61
	word32 s6_62
	word32 s7_63
	word32 s8_64
	word32 s9_65
	word32 s10_66
	word32 s11_67
	word32 t4_68
	printf(ra, 0x23082338<32>, CONVERT(Mem5[Mem5[a5 + 8<i32>:word32] + 6<i32>:byte], byte, word32), dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_50, out a0_51, out a1_52, out a2_53, out a3_54, out a4_55, out a5_56, out a7_57, out s2_58, out s3_59, out s4_60, out s5_61, out s6_62, out s7_63, out s8_64, out s9_65, out s10_66, out s11_67, out t4_68)
	return
loop_evt_entity_sys_handler_exit:


void loop_evt_entity_sys_evt(word32 ra, word32 s0, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, word32 dwArgFC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00FC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
loop_evt_entity_sys_evt_entry:
l23067F1E:
	word32 a0_182
	word32 a1_183
	word32 a2_184
	word32 a4_185
	word32 a5_186
	word32 a7_187
	word32 s2_188
	word32 s3_189
	word32 s4_190
	word32 s6_191
	word32 s7_192
	word32 s8_193
	word32 s9_194
	word32 s10_195
	word32 s11_196
	word32 t4_197
	word32 a3_26
	word32 s5_36
	word32 s1_109
	word32 ra_29 = printf(ra, 0x230822E4<32>, Mem11[s0:word32], dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_109, out a0_182, out a1_183, out a2_184, out a3_26, out a4_185, out a5_186, out a7_187, out s2_188, out s3_189, out s4_190, out s5_36, out s6_191, out s7_192, out s8_193, out s9_194, out s10_195, out s11_196, out t4_197)
l23067F3E:
	branch (s0 & 1<i32>) == 0<32> l23067F60
l23067F60:
	branch s0 == 0<32> l23067F4E
l23067F62:
	word32 s1_200
	word32 a0_201
	word32 a1_202
	word32 a2_203
	word32 a3_204
	word32 a4_205
	word32 a5_206
	word32 a7_207
	word32 s2_208
	word32 s3_209
	word32 s4_210
	word32 s5_211
	word32 s6_212
	word32 s7_213
	word32 s8_214
	word32 s9_215
	word32 s10_216
	word32 s11_217
	word32 t4_218
	printf(ra_29, 0x2307AA20<32>, a3_26, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_200, out a0_201, out a1_202, out a2_203, out a3_204, out a4_205, out a5_206, out a7_207, out s2_208, out s3_209, out s4_210, out s5_211, out s6_212, out s7_213, out s8_214, out s9_215, out s10_216, out s11_217, out t4_218)
l23067F7A:
l23067F44:
	word32 a5_198
	word32 a6_199
	ra_29 = bloop_status_dump(ra_29, a3_26, s5_36, dwArg10, dwArg14, dwArg5C, dwArgFC, out s0, out s1_109, out a3_26, out a5_198, out a6_199, out s5_36)
	branch s0 != 0<32> l23067F3E
l23067F4E:
	Mem111[s1_109:word32] = 0<32>
	0<32> = dwArg38
	return
loop_evt_entity_sys_evt_exit:


word32 bl_sys_time_sync_state(word32 a0, word32 a4, word32 mstatus, word32 dwArg38, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskIncrementTick
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a2 a3 a4 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 t3 tp
// Preserved: s0 sp
bl_sys_time_sync_state_entry:
l23067F7C:
	branch Mem0[0x4200E448<32>:int32] == 0<32> l23067FD8
l23067FD8:
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s2Out = s2
	return 0xFFFFFFFF<32>
l23067F86:
	word32 a5_98
	word32 a4_21 = vTaskEnterCritical(a4, mstatus, out a5_98)
	word32 a5_99
	word32 a0_22 = xTaskGetTickCount(out a5_99)
	word32 a3_28
	word32 a0_25 = bl_rtc_get_timestamp_ms(a4_21, out a3_28)
	word32 a4_100
	word32 a5_101
	vTaskExitCritical(a3_28, mstatus, out a4_100, out a5_101)
	word32 a5_40 = Mem15[0x4200E444<32>:int32]
	word32 a0_42 = 0<32>
	word32 a3_43 = a0_22 - a5_40
	word32 a4_44 = a0_25 - Mem15[0x4200E440<32>:int32]
	branch a3_43 >=u a4_44 l23067FCC
l23067FC2:
	Mem47[a5_40 - a0_22 + a4_44:word32] = a0
	a0_42 = 1<32>
l23067FCC:
	0<32> = dwArg38
	a2Out = dwArg10
	a3Out = a3_43
	a4Out = a4_44
	s2Out = a0_22
	return a0_42
bl_sys_time_sync_state_exit:


void misaligned_load_trap(word32 gp, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 mcause, word32 mtval)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      exception_entry
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] gp:[0..31] mcause:[0..31] mstatus:[0..31] mtval:[0..31]
// LiveOut:
// Trashed: a1 a3 a4 a5 a6 a7 s0 t0 t1 t3 t4 t5 t6
// Preserved: a2 sp
misaligned_load_trap_entry:
l23067FDC:
	__csrrs(mstatus, 0<32>)
	branch (a2 & 2<i32>) != 0<32> l23067FFE
l23067FFE:
	a5 = CONVERT(Mem0[a2:uint16], uint16, word32)
	branch (a5 & 3<32>) != 3<32> l23068012
l2306800A:
	a5 = a5 + (CONVERT(Mem0[a2 + 2<i32>:uint16], uint16, word32) << 16<i32>)
l23067FEE:
	a2 = Mem0[a5:word32]
	branch (a5 & 3<32>) == 3<32> l23068012
l23067FF8:
	a5 = CONVERT(SLICE(a5, word16, 0), word16, word32)
l23068012:
	__csrrw(mstatus, 0<32>)
	word32 t6_121 = a5
	word32 t3_26 = 4<32>
	branch (a5 & 3<i32>) == 3<32> l23068026
l23068024:
	t3_26 = 2<32>
l23068026:
	word32 a7_147
	word32 t1_119
	word32 a6_48
	word32 t3_31 = t3_26 + a2
	word32 t5_38 = __csrrs(mtval, gp)
	word32 a4_43 = a5 & 0x700007F<32>
	branch a4_43 == 0x2000003<32> l230680F2
l2306803E:
	branch a4_43 == 0x2000007<32> l2306807A
l23068044:
	branch a4_43 == 0x1000003<32> l23068102
l23068102:
	a6_48 = 2<32>
	t1_119 = 0<32>
	a7_147 = 0x10<32>
l2306804C:
	branch a4_43 == 0x5000003<32> l230680FA
l230680FA:
	a6_48 = 2<32>
	t1_119 = 0<32>
	a7_147 = 0<32>
l23068054:
	word32 a4_58 = a5 & 0xE000003<32>
	branch a4_58 == 0x4000000<32> l2306810A
l2306810A:
	t6_121 = (a5 >>u 2<i32> & 7<32>) + 8<32> << 7<u32>
	a6_48 = 4<32>
	t1_119 = 0<32>
	a7_147 = 0<32>
l23068060:
	branch a4_58 == 0x4000002<32> l230680EC
l230680EC:
	branch (a5 >>u 7<i32> & 0x1F<32>) == 0<32> l23068072
l230680F2:
	a6_48 = 4<32>
	t1_119 = 0<32>
	a7_147 = 0<32>
l23068066:
	branch a4_58 == 0x6000000<32> l2306811C
l2306811C:
	t6_121 = (a5 >>u 2<i32> & 7<32>) + 8<32> << 7<u32>
	a6_48 = 4<32>
	t1_119 = 1<32>
	a7_147 = 0<32>
l2306806C:
	branch a4_58 == 0x6000002<32> l2306807A
l2306807A:
	a6_48 = 4<32>
	t1_119 = 1<32>
	a7_147 = 0<32>
l23068080:
	word32 a6_99 = a6_48 + t5_38
	word32 a5_100 = t5_38
l2306808E:
	__csrrs(mstatus, 0<32>)
	a5_100 = a5_100 + 1<32>
	word32 t0_114 = CONVERT(Mem113[a5_100 + -1<i32>:byte], byte, word32)
	__csrrw(mstatus, 0<32>)
	word32 a4_106 = a5_100 - t5_38 + (fp + 0xFFFFFFF8<32>)
	Mem115[a4_106:byte] = SLICE(t0_114, byte, 0)
	branch a6_99 != a5_100 l2306808E
l230680B2:
	branch t1_119 != 0<32> l230680D6
l230680D6:
	Mem137[a4_106:word32] = ((t6_121 >>u 7<u32> & 0x1F<32>) + 1<32> << 2<i32>) + a0
	Mem142[a0:word32] = t3_31
	return
l230680B8:
	Mem151[(t6_121 >>u 5<u32> & 124<i32>) + a0 + 124<i32>:word32] = a4_106 << a7_147 >> a7_147
	Mem152[a0:word32] = t3_31
	return
misaligned_load_trap_exit:
l23068072:
	__csrrw(mcause, 5<32>)
	__ebreak()
l23068078:


void misaligned_store_trap(word32 gp, word32 a0, word32 a2, word32 a5, word32 fs0, word32 fs1, word32 fa0, word32 fa1, word32 fa2, word32 fa3, word32 fa4, word32 fa5, word32 mstatus, word32 mcause, word32 mtval)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      exception_entry
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] fa0:[0..31] fa1:[0..31] fa2:[0..31] fa3:[0..31] fa4:[0..31] fa5:[0..31] fs0:[0..31] fs1:[0..31] gp:[0..31] mcause:[0..31] mstatus:[0..31] mtval:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa1 fa2 fa3 fa4 fa5 fs0 fs1 gp mcause mstatus mtval t0 t1 t3 t4
// Preserved: sp
misaligned_store_trap_entry:
l2306812E:
	__csrrs(mstatus, 0<32>)
	branch (a2 & 2<i32>) != 0<32> l23068150
l23068150:
	a5 = CONVERT(Mem0[a2:uint16], uint16, word32)
	branch (a5 & 3<32>) != 3<32> l23068164
l2306815C:
	a5 = a5 + (CONVERT(Mem0[a2 + 2<i32>:uint16], uint16, word32) << 16<i32>)
l23068140:
	a2 = Mem0[a5:word32]
	branch (a5 & 3<32>) == 3<32> l23068164
l2306814A:
	a5 = CONVERT(SLICE(a5, word16, 0), word16, word32)
l23068164:
	__csrrw(mstatus, 0<32>)
	word32 t4_30 = 4<32>
	branch (a5 & 3<i32>) == 3<32> l2306817A
l23068178:
	t4_30 = 2<32>
l2306817A:
	word32 a4_104
	word32 a4_48 = a5 & 0x700007F<32>
	word32 t4_51 = t4_30 + a2
	branch a4_48 == 0x2000023<32> l23068220
l23068220:
	a4_104 = 4<32>
l230681A0:
	branch a4_48 == 0x2000027<32> l230681D8
l230681D8:
	word32 a5_54 = a5 >>u 17<i32>
	word32 a5_58 = 0x230681E0<p32> + (a5_54 & 248<i32>)
	word32 mcause_73
	word32 mtval_75
	word32 gp_76
	word32 fa4_78
	word32 fa5_79
	word32 fa3_80
	word32 fa2_81
	word32 fa1_82
	word32 fa0_83
	word32 fs1_84
	word32 fs0_85
	call a5_58 + 154<i32> (retsize: 0;)
		uses: a0:a5_54 & 248<i32>,a2:0x2000027<32>,a4:4<32>,a5:a5_58,fa0:fa0_83,fa1:fa1_82,fa2:fa2_81,fa3:fa3_80,fa4:fa4_78,fa5:fa5_79,fs0:fs0_85,fs1:fs1_84,gp:gp_76,mcause:mcause_73,mstatus:mstatus,mtval:mtval_75,t0:0x230681EA<p32>
		defs: fa0:fa0_83,fa1:fa1_82,fa2:fa2_81,fa3:fa3_80,fa4:fa4_78,fa5:fa5_79,fs0:fs0_85,fs1:fs1_84,gp:gp_76,mcause:mcause_73,mtval:mtval_75
	return
l230681A8:
	branch a4_48 == 0x1000023<32> l23068230
l23068230:
	a4_104 = 2<32>
l230681B2:
	word32 a4_91 = a5 & 0xE000003<32>
	branch a4_91 == 0xC000000<32> l23068224
l23068224:
	a4_104 = 4<32>
l230681C0:
	branch a4_91 == 0xC000002<32> l2306824E
l2306824E:
	branch (a5 >>u 7<u32> & 0x1F<32>) == 0<32> l230681D0
l23068256:
	a4_104 = 4<32>
l230681EC:
	word32 a5_116 = fp + 0xFFFFFFF8<32>
	word32 a4_118 = a4_104 + (fp + 0xFFFFFFF8<32>)
	word32 a7_119 = __csrrs(mtval, gp) - (fp + 0xFFFFFFF8<32>)
l230681F8:
	word32 a0_124 = CONVERT(Mem123[a5_116:byte], byte, word32)
	__csrrs(mstatus, 0<32>)
	Mem130[a7_119 + a5_116:byte] = SLICE(a0_124, byte, 0)
	__csrrw(mstatus, 0<32>)
	a5_116 = a5_116 + 1<32>
	branch a4_118 != a5_116 l230681F8
l23068218:
	Mem137[a0:word32] = t4_51
	return
l230681C6:
	branch a4_91 == 0xE000000<32> l23068234
l23068234:
	word32 a0_142 = (a5 >>u 2<u32> & 7<32>) + 8<32>
	word32 a5_146 = 0x23068240<p32> + (a0_142 << 3<i32>)
	switch (a0_142 << 3<i32>) { l230682BA l230682C2 l230682CA l230682D2 l230682DA l230682E2 l230682EA l230682F2 }
l230682F2:
	word32 mcause_164
	word32 t0_165
	word32 fa4_169
	word32 fa3_171
	word32 fa2_172
	word32 fa1_173
	word32 fa0_174
	word32 fs1_175
	word32 fs0_176
	call 0x2306824A<p32> (retsize: 0;)
		uses: a0:fa5,a2:0xE000000<32>,a5:a5_146,fa0:fa0_174,fa1:fa1_173,fa2:fa2_172,fa3:fa3_171,fa4:fa4_169,fa5:fa5,fs0:fs0_176,fs1:fs1_175,gp:gp,mcause:mcause_164,mstatus:mstatus,mtval:mtval,t0:t0_165
		defs: fa0:fa0_174,fa1:fa1_173,fa2:fa2_172,fa3:fa3_171,fa4:fa4_169,fs0:fs0_176,fs1:fs1_175,mcause:mcause_164,t0:t0_165
	return
l230682EA:
	word32 mcause_193
	word32 t0_194
	word32 fa3_200
	word32 fa2_201
	word32 fa1_202
	word32 fa0_203
	word32 fs1_204
	word32 fs0_205
	call 0x2306824A<p32> (retsize: 0;)
		uses: a0:fa4,a2:0xE000000<32>,a5:a5_146,fa0:fa0_203,fa1:fa1_202,fa2:fa2_201,fa3:fa3_200,fa4:fa4,fa5:fa5,fs0:fs0_205,fs1:fs1_204,gp:gp,mcause:mcause_193,mstatus:mstatus,mtval:mtval,t0:t0_194
		defs: fa0:fa0_203,fa1:fa1_202,fa2:fa2_201,fa3:fa3_200,fs0:fs0_205,fs1:fs1_204,mcause:mcause_193,t0:t0_194
	return
l230682E2:
	word32 mcause_222
	word32 t0_223
	word32 fa2_230
	word32 fa1_231
	word32 fa0_232
	word32 fs1_233
	word32 fs0_234
	call 0x2306824A<p32> (retsize: 0;)
		uses: a0:fa3,a2:0xE000000<32>,a5:a5_146,fa0:fa0_232,fa1:fa1_231,fa2:fa2_230,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_234,fs1:fs1_233,gp:gp,mcause:mcause_222,mstatus:mstatus,mtval:mtval,t0:t0_223
		defs: fa0:fa0_232,fa1:fa1_231,fa2:fa2_230,fs0:fs0_234,fs1:fs1_233,mcause:mcause_222,t0:t0_223
	return
l230682DA:
	word32 mcause_251
	word32 t0_252
	word32 fa1_260
	word32 fa0_261
	word32 fs1_262
	word32 fs0_263
	call 0x2306824A<p32> (retsize: 0;)
		uses: a0:fa2,a2:0xE000000<32>,a5:a5_146,fa0:fa0_261,fa1:fa1_260,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_263,fs1:fs1_262,gp:gp,mcause:mcause_251,mstatus:mstatus,mtval:mtval,t0:t0_252
		defs: fa0:fa0_261,fa1:fa1_260,fs0:fs0_263,fs1:fs1_262,mcause:mcause_251,t0:t0_252
	return
l230682D2:
	word32 mcause_280
	word32 t0_281
	word32 fa0_290
	word32 fs1_291
	word32 fs0_292
	call 0x2306824A<p32> (retsize: 0;)
		uses: a0:fa1,a2:0xE000000<32>,a5:a5_146,fa0:fa0_290,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_292,fs1:fs1_291,gp:gp,mcause:mcause_280,mstatus:mstatus,mtval:mtval,t0:t0_281
		defs: fa0:fa0_290,fs0:fs0_292,fs1:fs1_291,mcause:mcause_280,t0:t0_281
	return
l230682CA:
	word32 mcause_309
	word32 t0_310
	word32 fs1_320
	word32 fs0_321
	call 0x2306824A<p32> (retsize: 0;)
		uses: a0:fa0,a2:0xE000000<32>,a5:a5_146,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_321,fs1:fs1_320,gp:gp,mcause:mcause_309,mstatus:mstatus,mtval:mtval,t0:t0_310
		defs: fs0:fs0_321,fs1:fs1_320,mcause:mcause_309,t0:t0_310
	return
l230682C2:
	word32 mcause_338
	word32 t0_339
	word32 fs0_350
	call 0x2306824A<p32> (retsize: 0;)
		uses: a0:fs1,a2:0xE000000<32>,a5:a5_146,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_350,fs1:fs1,gp:gp,mcause:mcause_338,mstatus:mstatus,mtval:mtval,t0:t0_339
		defs: fs0:fs0_350,mcause:mcause_338,t0:t0_339
	return
l230682BA:
	word32 mcause_367
	word32 t0_368
	call 0x2306824A<p32> (retsize: 0;)
		uses: a0:fs0,a2:0xE000000<32>,a5:a5_146,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0,fs1:fs1,gp:gp,mcause:mcause_367,mstatus:mstatus,mtval:mtval,t0:t0_368
		defs: mcause:mcause_367,t0:t0_368
	return
l230681CA:
	branch a4_91 == 0xE000002<32> l23068264
l23068264:
	word32 a5_381 = a5 << 1<i32>
	word32 a5_385 = 0x2306826C<p32> + (a5_381 & 248<i32>)
	word32 mcause_399
	call a5_385 + 14<i32> (retsize: 0;)
		uses: a0:a5_381 & 248<i32>,a2:0xE000002<32>,a4:4<32>,a5:a5_385,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0,fs1:fs1,gp:gp,mcause:mcause_399,mstatus:mstatus,mtval:mtval,t0:0x23068276<p32>
		defs: mcause:mcause_399
	return
misaligned_store_trap_exit:
l230681D0:
	__csrrw(mcause, 7<32>)
	__ebreak()
l230681D6:


void backtrace_riscv()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      exception_entry
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
backtrace_riscv_entry:
l2306847A:
	return
backtrace_riscv_exit:


word32 bl_timer_now_us(ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bloop_run
// MayUse: 
// LiveOut: a0 a2 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5
// Preserved: sp
bl_timer_now_us_entry:
l2306847E:
l23068486:
	word32 a1_9 = Mem5[0x200BFFC<32>:int32]
	word32 a0_10 = Mem5[0x200BFF8<32>:int32]
	branch a1_9 != Mem5[0x200BFFC<32>:int32] l23068486
l23068496:
	word32 a5_17
	word32 a3_21
	word32 a1_35
	word32 a0_14 = __udivdi3(a0_10, a1_9, 0xA<32>, 0<32>, out a1_35, out a3_21, out a5_17)
	a2Out = dwArg10
	a3Out = a3_21
	a5Out = a5_17
	return a0_14
bl_timer_now_us_exit:


word32 bl_rtc_get_counter(word32 a4, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rtc_get_timestamp_ms
// MayUse:  a4:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2 a3 a4 a5 s0 t3
// Preserved: sp
bl_rtc_get_counter_entry:
l230684A4:
	word32 a0_9 = HBN_Get_RTC_Timer_Val(fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a4)
	a1Out = fp + 0xFFFFFFEC<32>
	return a0_9
bl_rtc_get_counter_exit:


word32 bl_rtc_get_timestamp_ms(word32 a4, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sys_time_sync_state
// MayUse:  a4:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 t3
// Preserved: sp
bl_rtc_get_timestamp_ms_entry:
l230684BA:
	word32 a1_8
	word32 a0_7 = bl_rtc_get_counter(a4, out a1_8)
	a3Out = a1_8 >>u 5<u32>
	return (a0_7 >>u 5<u32> | a1_8 << 0x1B<u32>) - ((a1_8 << 0x14<u32> | a0_7 >>u 12<i32>) + (a0_7 >>u 0xB<u32> | a1_8 << 0x15<u32>))
bl_rtc_get_timestamp_ms_exit:


word32 set_if(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 s3, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArg0128, ptr32 & s1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcpd_start
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +0128:[0..31]
// LiveOut: s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t2 t3 t4 t5 t6
// Preserved: mstatus ra s10 s11 s3 s5 s6 s7 s9 sp tp
set_if_entry:
l2306850A:
	word32 s0_108 = a0
	word32 s2_15 = a2
	word32 s1_17 = a3
	branch a1 == 0<32> l2306852E
l2306851C:
	word32 a0_21
	word32 a3_23
	word32 a4_24
	word32 a5_25
	word32 s4_36
	s0_108 = ip4addr_aton(a1, fp + 0xFFFFFFEC<32>, out a0_21, out a3_23, out a4_24, out a5_25, out s4_36)
	branch a0_21 == 0<32> l2306852E
l23068526:
	s0_108 = netif_set_ipaddr(ra, a3, s0_108, fp + 0xFFFFFFEC<32>, a3_23, a4_24, a5_25, a2, s3, s4_36, s7, mstatus, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg1C, dwArg34, dwArg38, dwArg48, dwArg50, dwArg54, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArgA8, dwArg0128, out s1_17, out s2_15)
l2306852E:
	branch s2_15 == 0<32> l23068544
l23068532:
	word32 a0_76
	word32 a4_79
	word32 a5_80
	word32 s4_260
	word32 a3_259
	s0_108 = ip4addr_aton(s2_15, fp + 0xFFFFFFEC<32>, out a0_76, out a3_259, out a4_79, out a5_80, out s4_260)
	branch a0_76 == 0<32> l23068544
l2306853C:
	netif_set_gw(s0_108, fp + 0xFFFFFFEC<32>, a4_79, a5_80)
l23068544:
	branch s1_17 == 0<32> l23068558
l23068546:
	word32 a0_102
	word32 a4_105
	word32 a5_106
	word32 s4_262
	word32 a3_261
	s0_108 = ip4addr_aton(s1_17, fp + 0xFFFFFFEC<32>, out a0_102, out a3_261, out a4_105, out a5_106, out s4_262)
	branch a0_102 == 0<32> l23068558
l23068550:
	netif_set_netmask(s0_108, fp + 0xFFFFFFEC<32>, a4_105, a5_106)
l23068558:
	s1Out = s1_17
	return s0_108
set_if_exit:


word32 Bl_F_fast.constprop.0(word32 ra, word32 a0, word32 a2, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg6C, word32 dwArgA4, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_wifi_psk_cal_fast_bin
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +006C:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0198:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
Bl_F_fast.constprop.0_entry:
l23068564:
	word32 a3_36
	word32 a5_325
	word32 a2_323
	word32 a4_324
	word32 a1_322
	strlen(a2, out a1_322, out a2_323, out a3_36, out a4_324, out a5_325)
	word32 a5_50
	word32 a2_53
	word32 a3_54
	word32 a6_327
	word32 a7_328
	word32 a4_326
	memcpy(a0, a3_36, a4, out a2_53, out a3_54, out a4_326, out a5_50, out a6_327, out a7_328)
	word32 a4_63 = a0 + dwArgA4
	Mem64[a4_63:byte] = 0<8>
	Mem65[a4_63 + 3<i32>:byte] = SLICE(a5_50, byte, 0)
	Mem66[a4_63 + 1<i32>:byte] = 0<8>
	Mem67[a4_63 + 2<i32>:byte] = 0<8>
	word32 s1_77
	word32 s2_78
	word32 s3_79
	word32 s4_80
	word32 s5_88
	word32 ra_85 = bl_sha_mutex_take(ra, a2_53, a3_54, a4_63, mstatus, s4, s2, dwArg20, dwArg24, dwArg48, s3, dwArg6C, dwArgC8, dwArg0108, out s1_77, out s2_78, out s3_79, out s4_80, out s5_88)
	utils_hmac_sha1_fast(ra_85, 1<32>, s3_79, s4_80, s2_78)
	word32 a6_333
	word32 a7_334
	word32 a4_331
	word32 a5_332
	word32 a2_329
	word32 a3_330
	memcpy(s5_88, s2_78, 0x14<32>, out a2_329, out a3_330, out a4_331, out a5_332, out a6_333, out a7_334)
	word32 s0_137 = 0xFFFFFF<32>
l230685DA:
	utils_hmac_sha1_fast(ra_85, 1<32>, s3_79, s4_80, s1_77)
	word32 a6_339
	word32 a7_340
	word32 a4_337
	word32 a5_338
	word32 a2_335
	word32 a3_336
	memcpy(s2_78, s1_77, 0x14<32>, out a2_335, out a3_336, out a4_337, out a5_338, out a6_339, out a7_340)
	word32 a5_190 = 0<32>
l230685F8:
	word32 a3_193 = s5_88 + a5_190
	word32 a4_200 = CONVERT(Mem196[s1_77 + a5_190:byte], byte, word32) ^ CONVERT(Mem196[a3_193:byte], byte, word32)
	Mem201[a3_193:byte] = SLICE(a4_200, byte, 0)
	a5_190 = a5_190 + 1<32>
	branch a5_190 != 0x14<32> l230685F8
l23068614:
	s0_137 = s0_137 + 0xFFFFFFFF<32>
	branch s0_137 != 0<32> l230685DA
l23068618:
	word32 s1_219
	word32 s2_220
	word32 s3_221
	word32 ra_233 = bl_sha_mutex_give(ra_85, a4_200, mstatus, s4, s2, dwArg20, dwArg24, dwArg48, s3, dwArg6C, dwArgC8, dwArg0108, dwArg0148, out s1_219, out s2_220, out s3_221)
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_219
	s2Out = s2_220
	s3Out = s3_221
	s4Out = dwArgF4
	return ra_233
Bl_F_fast.constprop.0_exit:


void utils_wifi_psk_cal_fast_bin(word32 ra, word32 a0, word32 a1, word32 a2, word32 s3, word32 s4, word32 mstatus, word32 dwArg0C, word32 dwArg68, word32 dwArgA8, word32 dwArgE8, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheGeneratePSK
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] Stack +000C:[0..31] Stack +0068:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
utils_wifi_psk_cal_fast_bin_entry:
l2306862E:
	word32 a1_184
	word32 a2_185
	word32 a3_186
	word32 a4_187
	word32 a5_188
	branch strlen(a0, out a1_184, out a2_185, out a3_186, out a4_187, out a5_188) >u 63<i32> l23068698
l23068698:
l2306864E:
	branch a2 > 32<i32> l2306868A
l23068658:
	word32 s0_50
	word32 s1_51
	word32 s2_54
	word32 s3_55
	word32 s4_56
	word32 ra_49 = Bl_F_fast.constprop.0(ra, fp + -68<i32>, a0, a2, a0, a1, s4, mstatus, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, s3, dwArg68, dwArgA8, dwArgE8, dwArg0138, out s0_50, out s1_51, out s2_54, out s3_55, out s4_56)
	word32 a2_189
	word32 a3_190
	word32 a4_191
	word32 a5_192
	word32 a6_193
	word32 a7_194
	memcpy(s0_50 + 20<i32>, s0_50, 0xC<32>, out a2_189, out a3_190, out a4_191, out a5_192, out a6_193, out a7_194)
	word32 s0_195
	word32 s1_196
	word32 s2_197
	word32 s3_198
	word32 s4_199
	Bl_F_fast.constprop.0(ra_49, fp + -68<i32>, s2_54, s1_51, s2_54, s3_55, s4_56, mstatus, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, s3, dwArg68, dwArgA8, dwArgE8, dwArg0138, out s0_195, out s1_196, out s2_197, out s3_198, out s4_199)
l2306868A:
	return
utils_wifi_psk_cal_fast_bin_exit:


void utils_hmac_sha1_fast(word32 ra, word32 a2, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_F_fast.constprop.0
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s11 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
utils_hmac_sha1_fast_entry:
l2306869C:
	word32 s5_165 = a5
	word32 s2_113 = a3
	word32 s1_111 = a4
	branch a4 <= 64<i32> l230686F0
l230686DA:
	bl_sha_init(ra, fp + -196<i32>, 2<32>, 64<i32>, dwLoc8C)
	word32 a4_62
	word32 s2_68
	word32 s5_71
	word32 a2_473
	word32 s3_474
	word32 s4_475
	word32 a1_472
	bl_sha_update(fp + -196<i32>, a3, a4, a5, dwLoc88, out a1_472, out a2_473, out a4_62, out s2_68, out s3_474, out s4_475, out s5_71)
	word32 s1_477
	word32 s4_478
	word32 s6_479
	word32 s0_476
	ra = bl_sha_finish(s2_68, a4_62, s5_71, dwLocA8, out s0_476, out s1_477, out s2_113, out s4_478, out s5_165, out s6_479)
	s1_111 = 0x14<32>
l230686F0:
	word32 t1_460
	word32 a4_465
	word32 a5_466
	word32 a0_461
	word32 a1_462
	word32 a2_463
	word32 a3_464
	word32 ra_108 = memset(ra, fp + -288<i32>, 0<32>, 64<i32>, out t1_460, out a0_461, out a1_462, out a2_463, out a3_464, out a4_465, out a5_466)
	word32 a5_469
	word32 a6_470
	word32 a7_471
	word32 a2_467
	word32 a4_468
	word32 a3_121
	memcpy(fp + -288<i32>, s2_113, s1_111, out a2_467, out a3_121, out a4_468, out a5_469, out a6_470, out a7_471)
l23068716:
	word32 a5_136 = Mem135[a3_121:word32]
	Mem140[a5_136 + 0x1000<32>:word32] = a3_121 ^ 0x36363636<32>
	word32 a3_141 = Mem140[a5_136 + 4<32>:int32]
	Mem143[a5_136 + 0x1004<32>:word32] = a3_141 ^ 0x36363636<32>
	a3_121 = a3_141 ^ 0x36363636<32>
	branch a5_136 + 8<32> != fp + -224<i32> l23068716
l2306872E:
	bl_sha_init(ra_108, fp + -196<i32>, 2<32>, a5_136 + 8<32>, dwLoc8C)
	word32 s3_481
	word32 s2_480
	word32 a2_168
	word32 a1_167
	word32 s5_179
	word32 s4_178
	word32 a4_170
	bl_sha_update(fp + -196<i32>, fp + -288<i32>, 64<i32>, s5_165, dwLoc88, out a1_167, out a2_168, out a4_170, out s2_480, out s3_481, out s4_178, out s5_179)
	word32 s3_184 = 0<32>
l23068740:
	branch s3_184 < a2 l230687D2
l230687D2:
	word32 s2_482
	bl_sha_update(fp + -196<i32>, a1_167, a2_168, s5_179, dwLoc88, out a1_167, out a2_168, out a4_170, out s2_482, out s3_184, out s4_178, out s5_179)
l23068744:
	word32 s1_228
	word32 s2_229
	word32 s4_231
	word32 s5_232
	word32 a3_489
	word32 a4_490
	word32 a5_491
	word32 t1_485
	word32 a0_486
	word32 a1_487
	word32 a2_488
	word32 s0_483
	word32 s6_484
	word32 ra_246 = memset(bl_sha_finish(s4_178, a4_170, s5_179, dwLocA8, out s0_483, out s1_228, out s2_229, out s4_231, out s5_232, out s6_484), fp + -288<i32>, 0<32>, 64<i32>, out t1_485, out a0_486, out a1_487, out a2_488, out a3_489, out a4_490, out a5_491)
	word32 a3_493
	word32 a5_494
	word32 a6_495
	word32 a7_496
	word32 a2_492
	word32 a4_252
	memcpy(fp + -288<i32>, s2_229, s1_228, out a2_492, out a3_493, out a4_252, out a5_494, out a6_495, out a7_496)
l23068768:
	word32 s0_269 = Mem268[a4_252:word32]
	Mem273[s0_269 + 0x1000<32>:word32] = a4_252 ^ 0x5C5C5C5C<32>
	word32 a4_274 = Mem273[s0_269 + 4<32>:int32]
	Mem276[s0_269 + 0x1004<32>:word32] = a4_274 ^ 0x5C5C5C5C<32>
	a4_252 = a4_274 ^ 0x5C5C5C5C<32>
	branch s0_269 + 8<32> != s4_231 l23068768
l23068780:
	bl_sha_init(ra_246, fp + -196<i32>, 2<32>, 0x5C5C5C5C<32>, dwLoc8C)
	word32 s1_508
	word32 s4_510
	word32 s5_311
	word32 a4_323
	word32 s5_332
	word32 s0_347
	word32 s5_352
	word32 s6_353
	word32 s2_509
	word32 s2_505
	word32 s3_506
	word32 s4_507
	word32 a1_503
	word32 a2_504
	word32 s4_502
	word32 s3_501
	word32 a1_497
	word32 a2_498
	word32 a4_499
	word32 s2_500
	bl_sha_finish(bl_sha_update(fp + -196<i32>, bl_sha_update(fp + -196<i32>, fp + -288<i32>, 64<i32>, s5_232, dwLoc88, out a1_497, out a2_498, out a4_499, out s2_500, out s3_501, out s4_502, out s5_311), 0x14<32>, s5_311, dwLoc88, out a1_503, out a2_504, out a4_323, out s2_505, out s3_506, out s4_507, out s5_332), a4_323, s5_332, dwLocA8, out s0_347, out s1_508, out s2_509, out s4_510, out s5_352, out s6_353)
	word32 a2_511
	word32 a3_512
	word32 a4_513
	word32 a5_514
	word32 a6_515
	word32 a7_516
	memcpy(s5_352, s0_347, s6_353, out a2_511, out a3_512, out a4_513, out a5_514, out a6_515, out a7_516)
	return
utils_hmac_sha1_fast_exit:


word32 bl_sha_mutex_take(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg94, word32 dwArgAC, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_F_fast.constprop.0
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00AC:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: ra s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_sha_mutex_take_entry:
l230687E8:
	word32 a0_14
	word32 a1_143
	word32 a2_144
	word32 a3_145
	word32 a4_146
	word32 a5_147
	word32 s8_148
	word32 s1_114
	word32 s2_119
	word32 s3_120
	word32 s4_121
	xQueueSemaphoreTake(Mem0[0x4200E274<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, 0x4200E000<32>, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_114, out a0_14, out a1_143, out a2_144, out a3_145, out a4_146, out a5_147, out s2_119, out s3_120, out s4_121, out s8_148)
	branch a0_14 == 1<32> l23068850
l23068802:
	branch CONVERT(Mem9[0x42016F94<32>:byte], byte, word32) >u 4<32> l23068850
l23068812:
	branch CONVERT(Mem9[0x4201EEFE<32>:byte], byte, word32) >u 4<32> l23068850
l2306881E:
	branch Mem9[0x4200E244<32>:int32] == 0<32> l23068858
l23068858:
	word32 a5_149
	xTaskGetTickCount(out a5_149)
l23068828:
	word32 a5_150
	xTaskGetTickCountFromISR(out a5_150)
l2306882C:
	word32 a0_151
	word32 a1_152
	word32 a2_153
	word32 a3_154
	word32 a4_155
	word32 a5_156
	word32 s6_157
	word32 s7_158
	word32 s8_159
	word32 s9_160
	word32 s10_161
	word32 s11_162
	ra = bl_printk(ra, 0x230823F8<32>, 0x230823E8<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_114, out a0_151, out a1_152, out a2_153, out a3_154, out a4_155, out a5_156, out s2_119, out s3_120, out s4_121, out s5, out s6_157, out s7_158, out s8_159, out s9_160, out s10_161, out s11_162)
l23068850:
	s1Out = s1_114
	s2Out = s2_119
	s3Out = s3_120
	s4Out = s4_121
	s5Out = s5
	return ra
bl_sha_mutex_take_exit:


word32 bl_sha_mutex_give(word32 ra, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg94, word32 dwArgAC, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_F_fast.constprop.0
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00AC:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: ra s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_sha_mutex_give_entry:
l2306885E:
	word32 a0_14
	word32 a7_156
	word32 s6_159
	word32 s5_158
	word32 s4_157
	word32 a4_154
	word32 a5_155
	word32 a2_152
	word32 a3_153
	word32 a1_151
	word32 s8_160
	word32 s1_122
	word32 s2_127
	word32 s3_128
	xQueueGenericSend(Mem0[0x4200E274<32>:int32], 0<32>, 0<32>, a4, 0x4200E000<32>, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_122, out a0_14, out a1_151, out a2_152, out a3_153, out a4_154, out a5_155, out a7_156, out s2_127, out s3_128, out s4_157, out s5_158, out s6_159, out s8_160)
	branch a0_14 == 1<32> l230688CA
l2306887C:
	branch CONVERT(Mem11[0x42016F94<32>:byte], byte, word32) >u 4<32> l230688CA
l2306888C:
	branch CONVERT(Mem11[0x4201EEFE<32>:byte], byte, word32) >u 4<32> l230688CA
l23068898:
	branch Mem11[0x4200E244<32>:int32] == 0<32> l230688D2
l230688D2:
	word32 a5_161
	xTaskGetTickCount(out a5_161)
l230688A2:
	word32 a5_162
	xTaskGetTickCountFromISR(out a5_162)
l230688A6:
	word32 a0_163
	word32 a1_164
	word32 a2_165
	word32 a3_166
	word32 a4_167
	word32 a5_168
	word32 s4_169
	word32 s5_170
	word32 s6_171
	word32 s7_172
	word32 s8_173
	word32 s9_174
	word32 s10_175
	word32 s11_176
	ra = bl_printk(ra, 0x230823BC<32>, 0x230823E8<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_122, out a0_163, out a1_164, out a2_165, out a3_166, out a4_167, out a5_168, out s2_127, out s3_128, out s4_169, out s5_170, out s6_171, out s7_172, out s8_173, out s9_174, out s10_175, out s11_176)
l230688CA:
	s1Out = s1_122
	s2Out = s2_127
	s3Out = s3_128
	return ra
bl_sha_mutex_give_exit:


void bl_sha_init(word32 ra, word32 a0, word32 a1, word32 a5, word32 dwArg94)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_hmac_sha1_fast
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31] Stack +0094:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s8 t0 t1 t3
// Preserved: sp
bl_sha_init_entry:
l230688D8:
	word32 a5_18 = Sec_Eng_SHA256_Init(ra, a0, a1, a5, ra, dwArg94)
l230688F2_thunk_Sec_Eng_SHA_Start:
	Sec_Eng_SHA_Start(a5_18)
	return
bl_sha_init_exit:


word32 bl_sha_update(word32 a0, word32 a1, word32 a2, word32 s5, word32 dwArg98, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_hmac_sha1_fast
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] s5:[0..31] Stack +0098:[0..31]
// LiveOut: a1 a2 a4 s0 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
bl_sha_update_entry:
l230688F6:
	word32 a1_14
	word32 a4_17
	word32 s0_21
	word32 s2_23
	word32 s3_24
	word32 s4_25
	word32 s5_26
	word32 s1_43
	word32 a0_44
	word32 s6_45
	Sec_Eng_SHA256_Update(a0, a1, a2, s5, dwArg98, out s0_21, out s1_43, out a0_44, out a1_14, out a4_17, out s2_23, out s3_24, out s4_25, out s5_26, out s6_45)
	a1Out = a1_14
	a2Out = dwArg10
	a4Out = a4_17
	s2Out = s2_23
	s3Out = s3_24
	s4Out = s4_25
	s5Out = s5_26
	return s0_21
bl_sha_update_exit:


word32 bl_sha_finish(word32 a1, word32 a4, word32 s5, word32 dwArg78, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_hmac_sha1_fast
// MayUse:  a1:[0..31] a4:[0..31] s5:[0..31] Stack +0078:[0..31]
// LiveOut: ra s0 s1 s2 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
bl_sha_finish_entry:
l2306890A:
	word32 s0_19
	word32 s1_20
	word32 s2_21
	word32 s4_23
	word32 s5_24
	word32 s6_25
	word32 ra_18 = Sec_Eng_SHA256_Finish(a1, a4, s5, dwArg78, out s0_19, out s1_20, out s2_21, out s4_23, out s5_24, out s6_25)
	s0Out = s0_19
	s1Out = s1_20
	s2Out = s2_21
	s4Out = s4_23
	s5Out = s5_24
	s6Out = s6_25
	return ra_18
bl_sha_finish_exit:


word32 fabs(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_number
// MayUse:  a1:[0..30]
// LiveOut: a1
// Trashed: a1
// Preserved: sp
fabs_entry:
l2306891C:
	return CONVERT(SLICE(a1, word31, 0), word31, word32)
fabs_exit:


word32 floor(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_number
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
floor_entry:
l23068928:
	word32 a4_134
	word32 a3_133
	word32 a5_6 = a1 >> 0x14<u32> & 2047<i32>
	word32 s2_125 = a1
	word32 s4_124 = a0
	branch a5_6 > -1042<i32> l23068A3C
l23068A3C:
	branch a5_6 <= -1074<i32> l23068A6C
l23068A6C:
	word32 s5_33 = -1<i32> >>u a5_6 + -1043<i32>
	a3_133 = a0
	a4_134 = a1
	branch (s5_33 & a0) == 0<32> l230689D8
l23068A88:
	word32 a1_44
	word32 a1_274
	word32 a4_275
	word32 a5_276
	branch __gedf2(__adddf3(ra, a0, a1, Mem22[0x4200DCF0<p32>:int32], Mem22[0x4200DCF4<p32>:int32], fflags, frm, out a1_44), a1_44, 0<i32>, 0<i32>, fflags, frm, out a1_274, out a4_275, out a5_276) <= 0<32> l230689D0
l23068AAC:
	branch a1 < 0<32> l23068AD8
l23068AD8:
	branch a5_6 == -1043<i32> l23068B04
l23068B04:
	s2_125 = a1 + 1<i32>
l23068AE0:
	word32 s3_71 = (1<i32> << 52<i32> - (a5_6 + -1023<i32>)) + a0
	branch s3_71 >=u a0 l23068B0C
l23068B0C:
	s4_124 = s3_71
l23068AF8:
	s2_125 = a1 + 1<i32>
	s4_124 = s3_71
l23068AB0:
	s4_124 = s4_124 & ~s5_33
l23068A44:
	a3_133 = a0
	a4_134 = a1
	branch a5_6 != -2047<i32> l230689D8
l23068A54:
	word32 a1_85
	a3_133 = __adddf3(ra, a0, a1, a0, a1, fflags, frm, out a1_85)
	a4_134 = a1_85
l23068970:
	branch a5_6 < 0xFFFFFC01<32> l23068A08
l23068A08:
	word32 a1_100
	word32 a1_268
	word32 a4_269
	word32 a5_270
	branch __gedf2(__adddf3(ra, a0, a1, Mem22[0x4200DCF0<p32>:int32], Mem22[0x4200DCF4<p32>:int32], fflags, frm, out a1_100), a1_100, 0<i32>, 0<i32>, fflags, frm, out a1_268, out a4_269, out a5_270) <= 0<32> l230689D0
l23068A2C:
	branch a1 < 0<32> l23068ABC
l23068ABC:
	s4_124 = 0<i32>
	branch (CONVERT(SLICE(a1, word31, 0), word31, word32) | a0) == 0<32> l230689D0
l23068AD0:
	s2_125 = 0xBFF00000<32>
l23068A30:
	s4_124 = 0<i32>
	s2_125 = 0<i32>
l23068974:
	word32 s5_130 = 0xFFFFF<32> >> a5_6 + -1023<i32>
	a3_133 = a0
	a4_134 = a1
	branch (s5_130 & a1 | a0) == 0<32> l230689D8
l23068994:
	word32 a1_140
	word32 a4_272
	word32 a1_271
	word32 a5_273
	branch __gedf2(__adddf3(ra, a0, a1, Mem22[0x4200DCF0<p32>:int32], Mem22[0x4200DCF4<p32>:int32], fflags, frm, out a1_140), a1_140, 0<i32>, 0<i32>, fflags, frm, out a1_271, out a4_272, out a5_273) <= 0<32> l230689D0
l230689B8:
	branch a1 >= 0<32> l230689C4
l230689BC:
	s2_125 = (0x100000<32> >> a5_6 + -1023<i32>) + a1
l230689C4:
	s2_125 = s2_125 & ~s5_130
	s4_124 = 0<i32>
l230689D0:
	a3_133 = s4_124
	a4_134 = s2_125
l230689D8:
	a1Out = a4_134
	return a3_133
floor_exit:


void modf(word32 ra, word32 a0, word32 a1, word32 a2, word32 fflags, word32 frm)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecvtbuf
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: ra sp
modf_entry:
l23068B14:
	word32 a6_22
	word32 t1_21
	word32 a4_6 = a1 >> 0x14<u32> & 2047<i32>
	word32 a5_11 = a1
	branch a4_6 > -1042<i32> l23068B7C
l23068B7C:
	branch a4_6 > -1074<i32> l23068B54
l23068B84:
	word32 a4_17 = -1<i32> >>u a4_6 + -1043<i32>
	branch (a4_17 & a0) == 0<32> l23068B54
l23068B98:
	word32 a3_20 = ~a4_17 & a0
	t1_21 = a3_20
	a6_22 = a3_20
l23068B38:
	branch a4_6 < 0xFFFFFC01<32> l23068BE0
l23068BE0:
	Mem28[a2:word32] = 0<i32>
	Mem29[a2 + 4<i32>:word32] = a1 & 0x80000000<32>
	return
l23068B3C:
	word32 a6_35 = 0xFFFFF<32> >> a4_6 + -1023<i32>
	branch (a6_35 & a1 | a0) != 0<32> l23068BAC
l23068BAC:
	a5_11 = ~a6_35 & a1
	t1_21 = 0<i32>
	a6_22 = 0<i32>
l23068BC0:
	Mem45[a2:word32] = t1_21
	Mem47[a2 + 4<i32>:word32] = a5_11
	word32 a1_106
	__subdf3(ra, a0, a1, a6_22, a5_11, fflags, frm, out a1_106)
	return
l23068B54:
	Mem78[a2 + 4<i32>:word32] = a1
	Mem81[a2:word32] = a0
	return
modf_exit:


word32 __lshrdi3(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      EF_Ctrl_Read_PowerOffset_Opt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a4 a5
// Preserved: sp
__lshrdi3_entry:
l23068C08:
	branch a2 == 0<32> l23068C28
l23068C0C:
	word32 a5_5 = 32<i32> - a2
	branch a5_5 > 0<32> l23068C2C
l23068C2C:
	a0 = a0 >>u a2 | a1 << a5_5
l23068C18:
	a0 = a1 >>u a2 + -32<i32>
l23068C24:
l23068C28:
	return a0
__lshrdi3_exit:


word32 __clzsi2(word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskSwitchContext
//      txl_payload_handle
//      txl_transmit_trigger
//      ke_evt_schedule
//      rc_get_initial_rate_config
//      rxu_mgt_ind_handler
//      apm_start_req_handler
//      bloop_run
//      __adddf3
//      __divdf3
//      __muldf3
//      __subdf3
//      __floatsidf
//      __floatunsidf
//      __extendsfdf2
// MayUse:  a0:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
__clzsi2_entry:
l23068C40:
	word32 a5_10
	branch a0 >=u 0x10000<32> l23068C78
l23068C78:
	a5_10 = 16<i32>
	branch a0 <u 0x1000000<32> l23068C54
l23068C84:
	a5_10 = 24<i32>
l23068C48:
	a5_10 = CONVERT(a0 >u 255<i32>, bool, word32) << 3<u32>
l23068C54:
	word32 a4_13 = 32<i32> - a5_10
	word32 a0_22 = a4_13 - CONVERT(Mem0[0x230824B0<p32> + (a0 >>u a5_10):byte], byte, word32)
	a4Out = a4_13
	return a0_22
__clzsi2_exit:


word32 __divdi3(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      uptime_cmd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5 t6
// Preserved: sp
__divdi3_entry:
l23068C8C:
	word32 a7_10 = 0<i32>
	branch a1 >= 0<32> l23068CA8
l23068C94:
	a0 = 0<32> - a0
	a1 = 0<32> - a1 - CONVERT(a0 != 0<32>, bool, word32)
	a7_10 = -1<i32>
l23068CA8:
	branch a3 >= 0<32> l23068CC0
l23068CAC:
	a2 = 0<32> - a2
	a7_10 = ~a7_10
	a3 = 0<32> - a3 - CONVERT(a2 != 0<32>, bool, word32)
l23068CC0:
	word32 t3_141
	word32 a5_106
	word32 a6_151 = a2
	word32 a4_155 = a3
	word32 t1_178 = a0
	word32 t3_292 = a1
	branch a3 != 0<32> l23068F74
l23068F74:
	branch a1 <u a3 l23069100
l23069100:
	t3_141 = 0<i32>
	a5_106 = 0<i32>
l23068F78:
	word32 a4_35
	branch a3 >=u 0x10000<32> l23068FC4
l23068FC4:
	a4_35 = 16<i32>
	branch a3 <u 0x1000000<32> l23068F8C
l23068FD0:
	a4_35 = 24<i32>
l23068F80:
	a4_35 = CONVERT(a3 >u 255<i32>, bool, word32) << 3<u32>
l23068F8C:
	word32 a6_52 = CONVERT(Mem0[0x230824B0<p32> + (a3 >>u a4_35):byte], byte, word32) + a4_35
	t3_141 = 32<i32> - a6_52
	branch t3_141 != 0<32> l23068FD8
l23068FD8:
	word32 a3_57 = a2 >>u a6_52 | a3 << t3_141
	word32 a5_60 = a1 >>u a6_52
	word32 a1_64 = a0 >>u a6_52 | a1 << t3_141
	word32 t5_67 = CONVERT(SLICE(a3_57, word16, 0), word16, word32)
	word32 a5_70 = a5_60 >>u (a3_57 >>u 0x10<u32>)
	word32 a2_69 = a2 << t3_141
	word32 a4_72 = (a5_60 & a3_57 >>u 0x10<u32>) << 0x10<u32> | a1_64 >>u 0x10<u32>
	word32 t1_73 = t5_67 + a5_70
	word32 t4_74 = a5_70
	branch a4_72 >=u t1_73 l2306903C
l23069024:
	a4_72 = a4_72 + a3_57
	t4_74 = a5_70 + -1<i32>
	branch a4_72 <u a3_57 l2306903C
l23069030:
	branch a4_72 >=u t1_73 l2306903C
l23069034:
	t4_74 = a5_70 + -2<i32>
	a4_72 = a4_72 + a3_57
l2306903C:
	word32 a4_81 = a4_72 - t1_73
	word32 a4_87 = a4_81 >>u (a3_57 >>u 0x10<u32>)
	word32 a6_101 = (a4_81 & a3_57 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a1_64, word16, 0), word16, word32)
	word32 t5_91 = t5_67 + a4_87
	word32 a5_105 = a4_87
	branch a6_101 >=u t5_91 l2306907C
l23069064:
	a6_101 = a6_101 + a3_57
	a5_105 = a4_87 + -1<i32>
	branch a6_101 <u a3_57 l2306907C
l23069070:
	branch a6_101 >=u t5_91 l2306907C
l23069074:
	a5_105 = a4_87 + -2<i32>
	a6_101 = a6_101 + a3_57
l2306907C:
	a5_106 = t4_74 << 0x10<u32> | a5_105
	word32 a3_115 = (a5_106 >>u 0x10<u32>) + (a2_69 & 0xFFFF<32>)
	word32 t4_114 = (a5_106 & 0xFFFF<32>) + (a2_69 & 0xFFFF<32>)
	word32 a6_103 = a6_101 - t5_91
	word32 a4_119 = (t4_114 >>u 0x10<u32>) + (((a5_106 & 0xFFFF<32>) + (a2_69 >>u 0x10<u32>)) + a3_115)
	word32 a1_120 = (a5_106 >>u 0x10<u32>) + (a2_69 >>u 0x10<u32>)
	branch a4_119 >=u a3_115 l230690C4
l230690C0:
	a1_120 = a1_120 + 0x10000<32>
l230690C4:
	word32 a1_125 = (a4_119 >>u 0x10<u32>) + a1_120
	branch a6_103 <u a1_125 l230690F8
l230690D0:
	branch a6_103 != a1_125 l23068DAC
l230690D4:
	t3_141 = 0<i32>
	branch a0 << t3_141 >=u ((a4_119 & 0xFFFF<32>) << 0x10<u32>) + (t4_114 & 0xFFFF<32>) l23068E94
l230690F8:
	a5_106 = a5_106 + -1<i32>
l23068FB0:
	a5_106 = 1<i32>
	branch a3 <u a1 l23068E94
l23068FB8:
	a5_106 = CONVERT(a0 <u a2, bool, word32) ^ 1<i32>
l23068CD4:
	branch a1 >=u a2 l23068DC8
l23068DC8:
	branch a2 != 0<32> l23068DD4
l23068DCC:
	a6_151 = 1<i32> >>u a3
l23068DD4:
	branch a6_151 >=u 0x10000<32> l23068EB4
l23068EB4:
	a4_155 = 16<i32>
	branch a6_151 <u 0x1000000<32> l23068DE8
l23068EC0:
	a4_155 = 24<i32>
l23068DDC:
	branch a6_151 <=u 255<i32> l23068DE8
l23068DE4:
	a4_155 = 8<i32>
l23068DE8:
	word32 a1_220
	word32 a5_170 = CONVERT(Mem0[0x230824B0<p32> + (a6_151 >>u a4_155):byte], byte, word32) + a4_155
	word32 a3_171 = 32<i32> - a5_170
	branch a3_171 != 0<32> l23068EC8
l23068EC8:
	a6_151 = a6_151 << a3_171
	word32 a4_175 = a1 >>u a5_170
	word32 a2_182 = a0 >>u a5_170 | a1 << a3_171
	word32 a1_185 = CONVERT(SLICE(a6_151, word16, 0), word16, word32)
	word32 a4_187 = a4_175 >>u (a6_151 >>u 0x10<u32>)
	t1_178 = a0 << a3_171
	word32 a5_189 = (a4_175 & a6_151 >>u 0x10<u32>) << 0x10<u32> | a2_182 >>u 0x10<u32>
	word32 a3_190 = a1_185 + a4_187
	word32 t3_191 = a4_187
	branch a5_189 >=u a3_190 l23068F24
l23068F0C:
	a5_189 = a5_189 + a6_151
	t3_191 = a4_187 + -1<i32>
	branch a5_189 <u a6_151 l23068F24
l23068F18:
	branch a5_189 >=u a3_190 l23068F24
l23068F1C:
	t3_191 = a4_187 + -2<i32>
	a5_189 = a5_189 + a6_151
l23068F24:
	word32 a3_198 = a5_189 - a3_190
	word32 a3_204 = a3_198 >>u (a6_151 >>u 0x10<u32>)
	word32 a4_207 = a1_185 + a3_204
	word32 a1_208 = (a3_198 & a6_151 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a2_182, word16, 0), word16, word32)
	word32 a5_209 = a3_204
	branch a1_208 >=u a4_207 l23068F64
l23068F4C:
	a1_208 = a1_208 + a6_151
	a5_209 = a3_204 + -1<i32>
	branch a1_208 <u a6_151 l23068F64
l23068F58:
	branch a1_208 >=u a4_207 l23068F64
l23068F5C:
	a5_209 = a3_204 + -2<i32>
	a1_208 = a1_208 + a6_151
l23068F64:
	a1_220 = a1_208 - a4_207
	t3_141 = t3_191 << 0x10<u32> | a5_209
l23068E04:
	a1_220 = a1 - a6_151
	t3_141 = 1<i32>
l23068E0C:
	word32 a0_227 = a6_151 >>u 0x10<u32>
	word32 a2_228 = a6_151 << 0x10<u32>
	word32 a4_237 = a1_220 >>u a0_227
	word32 a1_239 = (a2_228 >>u 0x10<u32>) + a4_237
	word32 a3_241 = (a1_220 & a0_227) << 0x10<u32> | t1_178 >>u 0x10<u32>
	word32 a5_242 = a4_237
	branch a3_241 >=u a1_239 l23068E50
l23068E38:
	a3_241 = a3_241 + a6_151
	a5_242 = a4_237 + -1<i32>
	branch a3_241 <u a6_151 l23068E50
l23068E44:
	branch a3_241 >=u a1_239 l23068E50
l23068E48:
	a5_242 = a4_237 + -2<i32>
	a3_241 = a3_241 + a6_151
l23068E50:
	word32 a3_249 = a3_241 - a1_239
	word32 a3_255 = a3_249 >>u a0_227
	word32 t1_257 = (a3_249 & a0_227) << 0x10<u32> | CONVERT(SLICE(t1_178, word16, 0), word16, word32)
	word32 a1_259 = (a2_228 >>u 0x10<u32>) + a3_255
	word32 a0_260 = a3_255
	branch t1_257 >=u a1_259 l23068E8C
l23068E78:
	word32 t1_262 = a6_151 + t1_257
	a0_260 = a3_255 + -1<i32>
	branch t1_262 <u a6_151 l23068E8C
l23068E84:
	branch t1_262 >=u a1_259 l23068E8C
l23068E88:
	a0_260 = a3_255 + -2<i32>
l23068E8C:
	a5_106 = a5_242 << 0x10<u32> | a0_260
l23068CE0:
	word32 a5_272
	branch a2 >=u 0x10000<32> l23068DB4
l23068DB4:
	a5_272 = 16<i32>
	branch a2 <u 0x1000000<32> l23068CF4
l23068DC0:
	a5_272 = 24<i32>
l23068CE8:
	a5_272 = CONVERT(a2 >u 255<i32>, bool, word32) << 3<u32>
l23068CF4:
	word32 a5_284 = CONVERT(Mem0[0x230824B0<p32> + (a2 >>u a5_272):byte], byte, word32) + a5_272
	word32 a4_286 = 32<i32> - a5_284
	branch a4_286 == 0<32> l23068D24
l23068D10:
	a6_151 = a2 << a4_286
	t3_292 = a0 >>u a5_284 | a1 << a4_286
	t1_178 = a0 << a4_286
l23068D24:
	word32 a2_296 = a6_151 >>u 0x10<u32>
	word32 a1_300 = a6_151 << 0x10<u32>
	word32 t3_305 = t3_292 >>u a2_296
	word32 a4_307 = (t3_292 & a2_296) << 0x10<u32> | t1_178 >>u 0x10<u32>
	word32 a3_308 = (a1_300 >>u 0x10<u32>) + t3_305
	word32 a5_309 = t3_305
	branch a4_307 >=u a3_308 l23068D68
l23068D50:
	a4_307 = a4_307 + a6_151
	a5_309 = t3_305 + -1<i32>
	branch a4_307 <u a6_151 l23068D68
l23068D5C:
	branch a4_307 >=u a3_308 l23068D68
l23068D60:
	a5_309 = t3_305 + -2<i32>
	a4_307 = a4_307 + a6_151
l23068D68:
	word32 a4_316 = a4_307 - a3_308
	word32 a4_322 = a4_316 >>u a2_296
	word32 t1_324 = (a4_316 & a2_296) << 0x10<u32> | CONVERT(SLICE(t1_178, word16, 0), word16, word32)
	word32 a1_326 = (a1_300 >>u 0x10<u32>) + a4_322
	word32 a0_327 = a4_322
	branch t1_324 >=u a1_326 l23068DA4
l23068D90:
	word32 t1_329 = a6_151 + t1_324
	a0_327 = a4_322 + -1<i32>
	branch t1_329 <u a6_151 l23068DA4
l23068D9C:
	branch t1_329 >=u a1_326 l23068DA4
l23068DA0:
	a0_327 = a4_322 + -2<i32>
l23068DA4:
	a5_106 = a5_309 << 0x10<u32> | a0_327
l23068DAC:
	t3_141 = 0<i32>
l23068E94:
	word32 a0_340 = a5_106
	word32 a1_345 = t3_141
	branch a7_10 == 0<32> l23068EB0
l23068EA0:
	a0_340 = 0<32> - a5_106
	a1_345 = 0<32> - t3_141 - CONVERT(a0_340 != 0<32>, bool, word32)
l23068EB0:
	a1Out = a1_345
	return a0_340
__divdi3_exit:


void __moddi3(word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      uptime_cmd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a4 a5 a6 a7 t1
// Preserved: a2 a3 sp t3 t4 t5 t6
__moddi3_entry:
l2306910C:
	word32 a7_10 = 0<i32>
	branch a1 >= 0<32> l23069128
l23069114:
	a0 = 0<32> - a0
	a1 = 0<32> - a1 - CONVERT(a0 != 0<32>, bool, word32)
	a7_10 = -1<i32>
l23069128:
	branch a3 >= 0<32> l2306913C
l2306912C:
	a2 = 0<32> - a2
	a3 = 0<32> - a3 - CONVERT(a2 != 0<32>, bool, word32)
l2306913C:
	word32 t1_187 = a2
	word32 a4_191 = a3
	word32 a5_214 = a0
	word32 a6_28 = a1
	branch a3 != 0<32> l2306939C
l2306939C:
	branch a1 <u a3 l23069218
l230693A0:
	word32 a4_31
	branch a3 >=u 0x10000<32> l230693FC
l230693FC:
	a4_31 = 16<i32>
	branch a3 <u 0x1000000<32> l230693B4
l23069408:
	a4_31 = 24<i32>
l230693A8:
	a4_31 = CONVERT(a3 >u 255<i32>, bool, word32) << 3<u32>
l230693B4:
	word32 t5_48 = CONVERT(Mem0[0x230824B0<p32> + (a3 >>u a4_31):byte], byte, word32) + a4_31
	word32 t4_49 = 32<i32> - t5_48
	branch t4_49 != 0<32> l23069410
l23069410:
	word32 a3_53 = a2 >>u t5_48 | a3 << t4_49
	word32 a4_56 = a1 >>u t5_48
	word32 a5_61 = a0 >>u t5_48 | a1 << t4_49
	word32 a1_63 = CONVERT(SLICE(a3_53, word16, 0), word16, word32)
	word32 a4_67 = a4_56 >>u (a3_53 >>u 0x10<u32>)
	word32 a2_65 = a2 << t4_49
	word32 a0_66 = a0 << t4_49
	word32 t1_69 = (a4_56 & a3_53 >>u 0x10<u32>) << 0x10<u32> | a5_61 >>u 0x10<u32>
	word32 t6_70 = a1_63 + a4_67
	word32 t3_71 = a4_67
	branch t1_69 >=u t6_70 l23069478
l23069460:
	t1_69 = t1_69 + a3_53
	t3_71 = a4_67 + -1<i32>
	branch t1_69 <u a3_53 l23069478
l2306946C:
	branch t1_69 >=u t6_70 l23069478
l23069470:
	t3_71 = a4_67 + -2<i32>
	t1_69 = t1_69 + a3_53
l23069478:
	word32 t1_78 = t1_69 - t6_70
	word32 t1_84 = t1_78 >>u (a3_53 >>u 0x10<u32>)
	word32 t6_86 = (t1_78 & a3_53 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a5_61, word16, 0), word16, word32)
	word32 a1_88 = a1_63 + t1_84
	word32 a5_102 = t1_84
	branch t6_86 >=u a1_88 l230694B8
l230694A0:
	t6_86 = t6_86 + a3_53
	a5_102 = t1_84 + -1<i32>
	branch t6_86 <u a3_53 l230694B8
l230694AC:
	branch t6_86 >=u a1_88 l230694B8
l230694B0:
	a5_102 = t1_84 + -2<i32>
	t6_86 = t6_86 + a3_53
l230694B8:
	word32 t3_103 = t3_71 << 0x10<u32> | a5_102
	word32 a5_112 = (t3_103 >>u 0x10<u32>) + (a2_65 & 0xFFFF<32>)
	word32 a4_111 = (t3_103 & 0xFFFF<32>) + (a2_65 & 0xFFFF<32>)
	word32 a1_97 = t6_86 - a1_88
	word32 t3_114 = (t3_103 >>u 0x10<u32>) + (a2_65 >>u 0x10<u32>)
	word32 a6_117 = (a4_111 >>u 0x10<u32>) + (((t3_103 & 0xFFFF<32>) + (a2_65 >>u 0x10<u32>)) + a5_112)
	branch a6_117 >=u a5_112 l23069500
l230694FC:
	t3_114 = t3_114 + 0x10000<32>
l23069500:
	word32 t3_122 = (a6_117 >>u 0x10<u32>) + t3_114
	word32 a4_129 = ((a6_117 & 0xFFFF<32>) << 0x10<u32>) + (a4_111 & 0xFFFF<32>)
	branch a1_97 <u t3_122 l2306952C
l23069524:
	branch a1_97 != t3_122 l23069540
l23069528:
	branch a0_66 >=u a4_129 l23069540
l2306952C:
l23069540:
l230693D8:
	branch a3 <u a1 l230693E0
l230693DC:
	branch a0 <u a2 l230693F0
l230693E0:
l230693F0:
l23069150:
	branch a1 >=u a2 l23069248
l23069248:
	branch a2 != 0<32> l23069254
l2306924C:
	t1_187 = 1<i32> >>u a3
l23069254:
	branch t1_187 >=u 0x10000<32> l230692FC
l230692FC:
	a4_191 = 16<i32>
	branch t1_187 <u 0x1000000<32> l23069268
l23069308:
	a4_191 = 24<i32>
l2306925C:
	branch t1_187 <=u 255<i32> l23069268
l23069264:
	a4_191 = 8<i32>
l23069268:
	word32 a1_247
	word32 a6_206 = CONVERT(Mem0[0x230824B0<p32> + (t1_187 >>u a4_191):byte], byte, word32) + a4_191
	word32 t3_207 = 32<i32> - a6_206
	branch t3_207 != 0<32> l23069310
l23069310:
	t1_187 = t1_187 << t3_207
	word32 a2_211 = a1 >>u a6_206
	word32 a6_219 = a0 >>u a6_206 | a1 << t3_207
	word32 a1_221 = CONVERT(SLICE(t1_187, word16, 0), word16, word32)
	a5_214 = a0 << t3_207
	word32 a4_225 = (a2_211 & t1_187 >>u 0x10<u32>) << 0x10<u32> | a6_219 >>u 0x10<u32>
	word32 a2_226 = a1_221 + (a2_211 >>u (t1_187 >>u 0x10<u32>))
	branch a4_225 >=u a2_226 l23069360
l23069350:
	a4_225 = a4_225 + t1_187
	branch a4_225 <u t1_187 l23069360
l23069358:
	branch a4_225 >=u a2_226 l23069360
l2306935C:
	a4_225 = a4_225 + t1_187
l23069360:
	word32 a3_231 = a4_225 - a2_226
	word32 a3_240 = a1_221 + (a3_231 >>u (t1_187 >>u 0x10<u32>))
	word32 a1_241 = (a3_231 & t1_187 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a6_219, word16, 0), word16, word32)
	branch a1_241 >=u a3_240 l23069394
l23069384:
	a1_241 = a1_241 + t1_187
	branch a1_241 <u t1_187 l23069394
l2306938C:
	branch a1_241 >=u a3_240 l23069394
l23069390:
	a1_241 = a1_241 + t1_187
l23069394:
	a1_247 = a1_241 - a3_240
l23069284:
	a1_247 = a1 - t1_187
l23069288:
	word32 a3_251 = t1_187 >>u 0x10<u32>
	word32 a0_252 = t1_187 << 0x10<u32>
	word32 a4_264 = (a1_247 & a3_251) << 0x10<u32> | a5_214 >>u 0x10<u32>
	word32 a1_265 = (a0_252 >>u 0x10<u32>) + (a1_247 >>u a3_251)
	branch a4_264 >=u a1_265 l230692C0
l230692B0:
	a4_264 = a4_264 + t1_187
	branch a4_264 <u t1_187 l230692C0
l230692B8:
	branch a4_264 >=u a1_265 l230692C0
l230692BC:
	a4_264 = a4_264 + t1_187
l230692C0:
	word32 a1_270 = a4_264 - a1_265
	word32 a1_278 = (a0_252 >>u 0x10<u32>) + (a1_270 >>u a3_251)
	word32 a5_280 = (a1_270 & a3_251) << 0x10<u32> | CONVERT(SLICE(a5_214, word16, 0), word16, word32)
	branch a5_280 >=u a1_278 l230692F4
l230692E4:
	word32 a5_282 = a5_280 + t1_187
	branch a5_282 <u t1_187 l230692F4
l230692EC:
	branch a5_282 >=u a1_278 l230692F4
l230692F0:
l230692F4:
l2306915C:
	branch a2 >=u 0x10000<32> l23069234
l23069234:
	a4_191 = 16<i32>
	branch a2 <u 0x1000000<32> l23069170
l23069240:
	a4_191 = 24<i32>
l23069164:
	branch a2 <=u 255<i32> l23069170
l2306916C:
	a4_191 = 8<i32>
l23069170:
	word32 a4_301 = CONVERT(Mem0[0x230824B0<p32> + (a2 >>u a4_191):byte], byte, word32) + a4_191
	word32 t3_302 = 32<i32> - a4_301
	branch t3_302 == 0<32> l230691A0
l2306918C:
	t1_187 = a2 << t3_302
	a6_28 = a0 >>u a4_301 | a1 << t3_302
	a5_214 = a0 << t3_302
l230691A0:
	word32 a2_312 = t1_187 >>u 0x10<u32>
	word32 a0_316 = t1_187 << 0x10<u32>
	word32 a1_322 = (a0_316 >>u 0x10<u32>) + (a6_28 >>u a2_312)
	word32 a4_324 = (a6_28 & a2_312) << 0x10<u32> | a5_214 >>u 0x10<u32>
	branch a4_324 >=u a1_322 l230691D8
l230691C8:
	a4_324 = a4_324 + t1_187
	branch a4_324 <u t1_187 l230691D8
l230691D0:
	branch a4_324 >=u a1_322 l230691D8
l230691D4:
	a4_324 = a4_324 + t1_187
l230691D8:
	word32 a4_329 = a4_324 - a1_322
	word32 a4_337 = (a0_316 >>u 0x10<u32>) + (a4_329 >>u a2_312)
	word32 a5_339 = (a4_329 & a2_312) << 0x10<u32> | CONVERT(SLICE(a5_214, word16, 0), word16, word32)
	branch a5_339 >=u a4_337 l2306920C
l230691FC:
	word32 a5_341 = a5_339 + t1_187
	branch a5_341 <u t1_187 l2306920C
l23069204:
	branch a5_341 >=u a4_337 l2306920C
l23069208:
l2306920C:
l23069210:
l23069218:
	branch a7_10 == 0<32> l23069230
l2306921C:
l23069230:
	return
__moddi3_exit:


word32 __udivdi3(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      format_int
//      InitGroupKey
//      mm_check_beacon
//      bl_timer_now_us
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5
// Preserved: sp
__udivdi3_entry:
l23069564:
	word32 a4_12
	word32 a1_11
	word32 a5_106 = a1
	word32 a6_129 = a2
	word32 a4_133 = a3
	word32 t1_10 = a0
	branch a3 != 0<32> l23069800
l23069800:
	branch a1 <u a3 l2306998C
l2306998C:
	a1_11 = 0<i32>
	a4_12 = 0<i32>
l23069804:
	word32 a4_15
	branch a3 >=u 0x10000<32> l23069850
l23069850:
	a4_15 = 16<i32>
	branch a3 <u 0x1000000<32> l23069818
l2306985C:
	a4_15 = 24<i32>
l2306980C:
	a4_15 = CONVERT(a3 >u 255<i32>, bool, word32) << 3<u32>
l23069818:
	word32 a6_30 = CONVERT(Mem0[0x230824B0<p32> + (a3 >>u a4_15):byte], byte, word32) + a4_15
	a1_11 = 32<i32> - a6_30
	branch a1_11 != 0<32> l23069864
l23069864:
	word32 a3_35 = a2 >>u a6_30 | a3 << a1_11
	word32 a4_38 = a1 >>u a6_30
	word32 t1_43 = a0 >>u a6_30 | a1 << a1_11
	word32 a5_45 = CONVERT(SLICE(a3_35, word16, 0), word16, word32)
	word32 a4_48 = a4_38 >>u (a3_35 >>u 0x10<u32>)
	word32 a2_47 = a2 << a1_11
	word32 a6_50 = (a4_38 & a3_35 >>u 0x10<u32>) << 0x10<u32> | t1_43 >>u 0x10<u32>
	word32 t5_51 = a5_45 + a4_48
	word32 t3_52 = a4_48
	branch a6_50 >=u t5_51 l230698C8
l230698B0:
	a6_50 = a6_50 + a3_35
	t3_52 = a4_48 + -1<i32>
	branch a6_50 <u a3_35 l230698C8
l230698BC:
	branch a6_50 >=u t5_51 l230698C8
l230698C0:
	t3_52 = a4_48 + -2<i32>
	a6_50 = a6_50 + a3_35
l230698C8:
	word32 a6_59 = a6_50 - t5_51
	word32 a6_62 = a6_59 >>u (a3_35 >>u 0x10<u32>)
	word32 t4_65 = a5_45 + a6_62
	word32 a5_69 = (a6_59 & a3_35 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(t1_43, word16, 0), word16, word32)
	word32 a4_70 = a6_62
	branch a5_69 >=u t4_65 l23069908
l230698F0:
	a5_69 = a5_69 + a3_35
	a4_70 = a6_62 + -1<i32>
	branch a5_69 <u a3_35 l23069908
l230698FC:
	branch a5_69 >=u t4_65 l23069908
l23069900:
	a4_70 = a6_62 + -2<i32>
	a5_69 = a5_69 + a3_35
l23069908:
	a4_12 = t3_52 << 0x10<u32> | a4_70
	word32 a6_93 = (a4_12 >>u 0x10<u32>) + (a2_47 & 0xFFFF<32>)
	word32 t3_92 = (a4_12 & 0xFFFF<32>) + (a2_47 & 0xFFFF<32>)
	a5_106 = a5_69 - t4_65
	a3 = (t3_92 >>u 0x10<u32>) + (((a4_12 & 0xFFFF<32>) + (a2_47 >>u 0x10<u32>)) + a6_93)
	word32 a7_102 = (a4_12 >>u 0x10<u32>) + (a2_47 >>u 0x10<u32>)
	branch a3 >=u a6_93 l23069950
l2306994C:
	a7_102 = a7_102 + 0x10000<32>
l23069950:
	word32 a7_103 = (a3 >>u 0x10<u32>) + a7_102
	branch a5_106 <u a7_103 l23069984
l2306995C:
	branch a5_106 != a7_103 l23069650
l23069960:
	a5_106 = 0xFFFF<32>
	a3 = ((a3 & 0xFFFF<32>) << 0x10<u32>) + (t3_92 & 0xFFFF<32>)
	a1_11 = 0<i32>
	branch a0 << a1_11 >=u a3 l23069738
l23069984:
	a4_12 = a4_12 + -1<i32>
l2306983C:
	a4_12 = 1<i32>
	branch a3 <u a1 l23069738
l23069844:
	a4_12 = CONVERT(a0 <u a2, bool, word32) ^ 1<i32>
l23069578:
	branch a1 >=u a2 l2306966C
l2306966C:
	branch a2 != 0<32> l23069678
l23069670:
	a6_129 = 1<i32> >>u a2
l23069678:
	branch a6_129 >=u 0x10000<32> l23069740
l23069740:
	a4_133 = 16<i32>
	branch a6_129 <u 0x1000000<32> l2306968C
l2306974C:
	a4_133 = 24<i32>
l23069680:
	branch a6_129 <=u 255<i32> l2306968C
l23069688:
	a4_133 = 8<i32>
l2306968C:
	word32 a5_195
	word32 a3_147 = CONVERT(Mem0[0x230824B0<p32> + (a6_129 >>u a4_133):byte], byte, word32) + a4_133
	word32 a4_149 = 32<i32> - a3_147
	branch a4_149 != 0<32> l23069754
l23069754:
	a6_129 = a6_129 << a4_149
	word32 a1_153 = a1 >>u a3_147
	word32 a7_161 = a0 >>u a3_147 | a1 << a4_149
	word32 a5_163 = CONVERT(SLICE(a6_129, word16, 0), word16, word32)
	word32 a1_165 = a1_153 >>u (a6_129 >>u 0x10<u32>)
	t1_10 = a0 << a4_149
	word32 a4_167 = (a1_153 & a6_129 >>u 0x10<u32>) << 0x10<u32> | a7_161 >>u 0x10<u32>
	word32 a3_168 = a5_163 + a1_165
	word32 a2_169 = a1_165
	branch a4_167 >=u a3_168 l230697B0
l23069798:
	a4_167 = a4_167 + a6_129
	a2_169 = a1_165 + -1<i32>
	branch a4_167 <u a6_129 l230697B0
l230697A4:
	branch a4_167 >=u a3_168 l230697B0
l230697A8:
	a2_169 = a1_165 + -2<i32>
	a4_167 = a4_167 + a6_129
l230697B0:
	word32 a3_176 = a4_167 - a3_168
	word32 a3_182 = a3_176 >>u (a6_129 >>u 0x10<u32>)
	word32 a1_185 = a5_163 + a3_182
	word32 a5_186 = (a3_176 & a6_129 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a7_161, word16, 0), word16, word32)
	word32 a4_187 = a3_182
	branch a5_186 >=u a1_185 l230697F0
l230697D8:
	a5_186 = a5_186 + a6_129
	a4_187 = a3_182 + -1<i32>
	branch a5_186 <u a6_129 l230697F0
l230697E4:
	branch a5_186 >=u a1_185 l230697F0
l230697E8:
	a4_187 = a3_182 + -2<i32>
	a5_186 = a5_186 + a6_129
l230697F0:
	a5_195 = a5_186 - a1_185
	a1_11 = a2_169 << 0x10<u32> | a4_187
l230696A8:
	a5_195 = a1 - a6_129
	a1_11 = 1<i32>
l230696B0:
	word32 a2_205 = a6_129 >>u 0x10<u32>
	word32 a7_206 = a6_129 << 0x10<u32>
	word32 a5_216 = a5_195 >>u a2_205
	word32 a3_218 = (a5_195 & a2_205) << 0x10<u32> | t1_10 >>u 0x10<u32>
	word32 a0_219 = (a7_206 >>u 0x10<u32>) + a5_216
	word32 a4_220 = a5_216
	branch a3_218 >=u a0_219 l230696F4
l230696DC:
	a3_218 = a3_218 + a6_129
	a4_220 = a5_216 + -1<i32>
	branch a3_218 <u a6_129 l230696F4
l230696E8:
	branch a3_218 >=u a0_219 l230696F4
l230696EC:
	a4_220 = a5_216 + -2<i32>
	a3_218 = a3_218 + a6_129
l230696F4:
	word32 a3_227 = a3_218 - a0_219
	word32 a5_229 = a3_227 & a2_205
	a3 = a3_227 >>u a2_205
	a5_106 = a5_229 << 0x10<u32>
	word32 t1_235 = a5_229 << 0x10<u32> | CONVERT(SLICE(t1_10, word16, 0), word16, word32)
	word32 a7_237 = (a7_206 >>u 0x10<u32>) + a3
	word32 a0_238 = a3
	branch t1_235 >=u a7_237 l23069730
l2306971C:
	word32 t1_240 = a6_129 + t1_235
	a0_238 = a3 + -1<i32>
	branch t1_240 <u a6_129 l23069730
l23069728:
	branch t1_240 >=u a7_237 l23069730
l2306972C:
	a0_238 = a3 + -2<i32>
l23069730:
	a4_12 = a4_220 << 0x10<u32> | a0_238
l23069584:
	word32 a4_250
	branch a2 >=u 0x10000<32> l23069658
l23069658:
	a4_250 = 16<i32>
	branch a2 <u 0x1000000<32> l23069598
l23069664:
	a4_250 = 24<i32>
l2306958C:
	a4_250 = CONVERT(a2 >u 255<i32>, bool, word32) << 3<u32>
l23069598:
	word32 a4_262 = CONVERT(Mem0[0x230824B0<p32> + (a2 >>u a4_250):byte], byte, word32) + a4_250
	word32 a3_264 = 32<i32> - a4_262
	branch a3_264 == 0<32> l230695C8
l230695B4:
	a6_129 = a2 << a3_264
	a1 = a0 >>u a4_262 | a1 << a3_264
	t1_10 = a0 << a3_264
l230695C8:
	word32 a0_274 = a6_129 >>u 0x10<u32>
	word32 a2_278 = a6_129 << 0x10<u32>
	word32 a1_283 = a1 >>u a0_274
	word32 a3_285 = (a1 & a0_274) << 0x10<u32> | t1_10 >>u 0x10<u32>
	word32 a5_286 = (a2_278 >>u 0x10<u32>) + a1_283
	word32 a4_287 = a1_283
	branch a3_285 >=u a5_286 l2306960C
l230695F4:
	a3_285 = a3_285 + a6_129
	a4_287 = a1_283 + -1<i32>
	branch a3_285 <u a6_129 l2306960C
l23069600:
	branch a3_285 >=u a5_286 l2306960C
l23069604:
	a4_287 = a1_283 + -2<i32>
	a3_285 = a3_285 + a6_129
l2306960C:
	word32 a3_294 = a3_285 - a5_286
	word32 a5_296 = a3_294 & a0_274
	a3 = a3_294 >>u a0_274
	a5_106 = a5_296 << 0x10<u32>
	word32 t1_302 = a5_296 << 0x10<u32> | CONVERT(SLICE(t1_10, word16, 0), word16, word32)
	word32 a1_304 = (a2_278 >>u 0x10<u32>) + a3
	word32 a0_305 = a3
	branch t1_302 >=u a1_304 l23069648
l23069634:
	word32 t1_307 = a6_129 + t1_302
	a0_305 = a3 + -1<i32>
	branch t1_307 <u a6_129 l23069648
l23069640:
	branch t1_307 >=u a1_304 l23069648
l23069644:
	a0_305 = a3 + -2<i32>
l23069648:
	a4_12 = a4_287 << 0x10<u32> | a0_305
l23069650:
	a1_11 = 0<i32>
l23069738:
	a1Out = a1_11
	a3Out = a3
	a5Out = a5_106
	return a4_12
__udivdi3_exit:


word32 __umoddi3(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      format_int
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5
// Preserved: sp
__umoddi3_entry:
l23069998:
	word32 a7_167 = a2
	word32 a4_171 = a3
	word32 a5_141 = a0
	word32 a6_10 = a1
	branch a3 != 0<32> l23069BE0
l23069BE0:
	branch a1 <u a3 l23069A74
l23069BE4:
	word32 a4_13
	branch a3 >=u 0x10000<32> l23069C40
l23069C40:
	a4_13 = 16<i32>
	branch a3 <u 0x1000000<32> l23069BF8
l23069C4C:
	a4_13 = 24<i32>
l23069BEC:
	a4_13 = CONVERT(a3 >u 255<i32>, bool, word32) << 3<u32>
l23069BF8:
	word32 t4_28 = CONVERT(Mem0[0x230824B0<p32> + (a3 >>u a4_13):byte], byte, word32) + a4_13
	word32 t3_29 = 32<i32> - t4_28
	branch t3_29 != 0<32> l23069C54
l23069C54:
	word32 a3_33 = a2 >>u t4_28 | a3 << t3_29
	word32 a4_36 = a1 >>u t4_28
	word32 a5_41 = a0 >>u t4_28 | a1 << t3_29
	word32 a1_43 = CONVERT(SLICE(a3_33, word16, 0), word16, word32)
	word32 a4_47 = a4_36 >>u (a3_33 >>u 0x10<u32>)
	word32 a2_45 = a2 << t3_29
	word32 a0_46 = a0 << t3_29
	word32 a7_49 = (a4_36 & a3_33 >>u 0x10<u32>) << 0x10<u32> | a5_41 >>u 0x10<u32>
	word32 t5_50 = a1_43 + a4_47
	word32 t1_51 = a4_47
	branch a7_49 >=u t5_50 l23069CBC
l23069CA4:
	a7_49 = a7_49 + a3_33
	t1_51 = a4_47 + -1<i32>
	branch a7_49 <u a3_33 l23069CBC
l23069CB0:
	branch a7_49 >=u t5_50 l23069CBC
l23069CB4:
	t1_51 = a4_47 + -2<i32>
	a7_49 = a7_49 + a3_33
l23069CBC:
	word32 a7_58 = a7_49 - t5_50
	word32 a7_61 = a7_58 >>u (a3_33 >>u 0x10<u32>)
	word32 a6_64 = a1_43 + a7_61
	word32 a1_68 = (a7_58 & a3_33 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a5_41, word16, 0), word16, word32)
	word32 a5_69 = a7_61
	branch a1_68 >=u a6_64 l23069CFC
l23069CE4:
	a1_68 = a1_68 + a3_33
	a5_69 = a7_61 + -1<i32>
	branch a1_68 <u a3_33 l23069CFC
l23069CF0:
	branch a1_68 >=u a6_64 l23069CFC
l23069CF4:
	a5_69 = a7_61 + -2<i32>
	a1_68 = a1_68 + a3_33
l23069CFC:
	word32 t1_80 = t1_51 << 0x10<u32> | a5_69
	word32 a5_92 = (t1_80 >>u 0x10<u32>) + (a2_45 & 0xFFFF<32>)
	word32 a4_91 = (t1_80 & 0xFFFF<32>) + (a2_45 & 0xFFFF<32>)
	word32 a1_85 = a1_68 - a6_64
	word32 t1_101 = (t1_80 >>u 0x10<u32>) + (a2_45 >>u 0x10<u32>)
	word32 a6_97 = (a4_91 >>u 0x10<u32>) + (((t1_80 & 0xFFFF<32>) + (a2_45 >>u 0x10<u32>)) + a5_92)
	branch a6_97 >=u a5_92 l23069D44
l23069D40:
	t1_101 = t1_101 + 0x10000<32>
l23069D44:
	word32 t1_102 = (a6_97 >>u 0x10<u32>) + t1_101
	word32 a4_109 = ((a6_97 & 0xFFFF<32>) << 0x10<u32>) + (a4_91 & 0xFFFF<32>)
	branch a1_85 <u t1_102 l23069D70
l23069D68:
	branch a1_85 != t1_102 l23069D84
l23069D6C:
	branch a0_46 >=u a4_109 l23069D84
l23069D70:
	word32 a2_117 = a4_109 - a2_45
	t1_102 = t1_102 - (CONVERT(a4_109 <u a2_117, bool, word32) + a3_33)
	a4_109 = a2_117
l23069D84:
	word32 a4_129 = a0_46 - a4_109
	a5_141 = a1_85 - t1_102 - CONVERT(a0_46 <u a4_129, bool, word32) << t4_28
	a0 = a5_141 | a4_129 >>u t3_29
l23069C1C:
	branch a3 <u a1 l23069C24
l23069C20:
	branch a0 <u a2 l23069C34
l23069C24:
	a5_141 = a0 - a2
l23069C34:
	a0 = a5_141
l230699AC:
	word32 t1_187
	branch a1 >=u a2 l23069A8C
l23069A8C:
	branch a2 != 0<32> l23069A98
l23069A90:
	a7_167 = 1<i32> >>u a2
l23069A98:
	branch a7_167 >=u 0x10000<32> l23069B40
l23069B40:
	a4_171 = 16<i32>
	branch a7_167 <u 0x1000000<32> l23069AAC
l23069B4C:
	a4_171 = 24<i32>
l23069AA0:
	branch a7_167 <=u 255<i32> l23069AAC
l23069AA8:
	a4_171 = 8<i32>
l23069AAC:
	word32 a1_227
	word32 t3_186 = CONVERT(Mem0[0x230824B0<p32> + (a7_167 >>u a4_171):byte], byte, word32) + a4_171
	t1_187 = 32<i32> - t3_186
	branch t1_187 != 0<32> l23069B54
l23069B54:
	a7_167 = a7_167 << t1_187
	word32 a4_191 = a1 >>u t3_186
	word32 t3_199 = a0 >>u t3_186 | a1 << t1_187
	word32 a1_201 = CONVERT(SLICE(a7_167, word16, 0), word16, word32)
	a5_141 = a0 << t1_187
	word32 a3_205 = (a4_191 & a7_167 >>u 0x10<u32>) << 0x10<u32> | t3_199 >>u 0x10<u32>
	word32 a4_206 = a1_201 + (a4_191 >>u (a7_167 >>u 0x10<u32>))
	branch a3_205 >=u a4_206 l23069BA4
l23069B94:
	a3_205 = a3_205 + a7_167
	branch a3_205 <u a7_167 l23069BA4
l23069B9C:
	branch a3_205 >=u a4_206 l23069BA4
l23069BA0:
	a3_205 = a3_205 + a7_167
l23069BA4:
	word32 a2_211 = a3_205 - a4_206
	word32 a2_220 = a1_201 + (a2_211 >>u (a7_167 >>u 0x10<u32>))
	word32 a1_221 = (a2_211 & a7_167 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(t3_199, word16, 0), word16, word32)
	branch a1_221 >=u a2_220 l23069BD8
l23069BC8:
	a1_221 = a1_221 + a7_167
	branch a1_221 <u a7_167 l23069BD8
l23069BD0:
	branch a1_221 >=u a2_220 l23069BD8
l23069BD4:
	a1_221 = a1_221 + a7_167
l23069BD8:
	a1_227 = a1_221 - a2_220
l23069AC8:
	a1_227 = a1 - a7_167
l23069ACC:
	word32 a4_231 = a7_167 >>u 0x10<u32>
	word32 a0_232 = a7_167 << 0x10<u32>
	word32 a3_244 = (a1_227 & a4_231) << 0x10<u32> | a5_141 >>u 0x10<u32>
	word32 a1_245 = (a0_232 >>u 0x10<u32>) + (a1_227 >>u a4_231)
	branch a3_244 >=u a1_245 l23069B04
l23069AF4:
	a3_244 = a3_244 + a7_167
	branch a3_244 <u a7_167 l23069B04
l23069AFC:
	branch a3_244 >=u a1_245 l23069B04
l23069B00:
	a3_244 = a3_244 + a7_167
l23069B04:
	word32 a1_250 = a3_244 - a1_245
	word32 a1_258 = (a0_232 >>u 0x10<u32>) + (a1_250 >>u a4_231)
	word32 a5_260 = (a1_250 & a4_231) << 0x10<u32> | CONVERT(SLICE(a5_141, word16, 0), word16, word32)
	branch a5_260 >=u a1_258 l23069B38
l23069B28:
	a5_260 = a5_260 + a7_167
	branch a5_260 <u a7_167 l23069B38
l23069B30:
	branch a5_260 >=u a1_258 l23069B38
l23069B34:
	a5_260 = a5_260 + a7_167
l23069B38:
	a5_141 = a5_260 - a1_258
l230699B8:
	branch a2 >=u 0x10000<32> l23069A78
l23069A78:
	a4_171 = 16<i32>
	branch a2 <u 0x1000000<32> l230699CC
l23069A84:
	a4_171 = 24<i32>
l230699C0:
	branch a2 <=u 255<i32> l230699CC
l230699C8:
	a4_171 = 8<i32>
l230699CC:
	word32 t3_281 = CONVERT(Mem0[0x230824B0<p32> + (a2 >>u a4_171):byte], byte, word32) + a4_171
	t1_187 = 32<i32> - t3_281
	branch t1_187 == 0<32> l230699FC
l230699E8:
	a7_167 = a2 << t1_187
	a6_10 = a0 >>u t3_281 | a1 << t1_187
	a5_141 = a0 << t1_187
l230699FC:
	word32 a2_292 = a7_167 >>u 0x10<u32>
	word32 a0_296 = a7_167 << 0x10<u32>
	word32 a3_303 = (a6_10 & a2_292) << 0x10<u32> | a5_141 >>u 0x10<u32>
	word32 a6_304 = (a0_296 >>u 0x10<u32>) + (a6_10 >>u a2_292)
	branch a3_303 >=u a6_304 l23069A34
l23069A24:
	a3_303 = a3_303 + a7_167
	branch a3_303 <u a7_167 l23069A34
l23069A2C:
	branch a3_303 >=u a6_304 l23069A34
l23069A30:
	a3_303 = a3_303 + a7_167
l23069A34:
	word32 a3_309 = a3_303 - a6_304
	word32 a3_317 = (a0_296 >>u 0x10<u32>) + (a3_309 >>u a2_292)
	word32 a5_319 = (a3_309 & a2_292) << 0x10<u32> | CONVERT(SLICE(a5_141, word16, 0), word16, word32)
	branch a5_319 >=u a3_317 l23069A68
l23069A58:
	a5_319 = a5_319 + a7_167
	branch a5_319 <u a7_167 l23069A68
l23069A60:
	branch a5_319 >=u a3_317 l23069A68
l23069A64:
	a5_319 = a5_319 + a7_167
l23069A68:
	a5_141 = a5_319 - a3_317
l23069A6C:
	a0 = a5_141 >>u t1_187
l23069A74:
	a5Out = a5_141
	return a0
__umoddi3_exit:


word32 __adddf3(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 fflags, word32 frm, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecvtbuf
//      pa_adapt
//      trpc_get_default_power_idx
//      rfc_init
//      rf_pri_get_vco_freq_cw
//      rf_pri_get_vco_idac_cw
//      rf_set_channel
//      floor
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a3 a4 a5 a6 a7 t1 t3
// Preserved: a2 ra s0 s1 s2 s3 s4 sp
__adddf3_entry:
l23069DA8:
	word32 a4_200
	word32 s3_284 = a1 >>u 0x14<u32> & 2047<i32>
	word32 a4_100 = a3 >>u 0x14<u32> & 2047<i32>
	word32 a0_33 = (a3 & 0xFFFFF<32>) << 3<u32>
	word32 a3_217 = s3_284 - a4_100
	word32 s1_17 = __csrrs(frm, fp + -32<i32>)
	word32 t1_106 = a0 << 3<u32>
	word32 s2_111 = a1 >>u 0x1F<u32>
	word32 a1_107 = a0 >>u 0x1D<u32> | (a1 & 0xFFFFF<32>) << 3<u32>
	word32 a5_183 = a2 >>u 0x1D<u32> | a0_33
	word32 a7_184 = a2 << 3<u32>
	word32 a6_124 = a3_217
	branch a1 >>u 0x1F<u32> != a3 >>u 0x1F<u32> l2306A234
l2306A234:
	word32 s4_282
	word32 s0_279
	branch a3_217 <= 0<32> l2306A328
l2306A328:
	branch a3_217 == 0<32> l2306A468
l2306A468:
	branch (s3_284 + 1<i32> & 2046<i32>) != 0<32> l2306A5C0
l2306A5C0:
	s4_282 = (a0 << 3<u32>) - (a2 << 3<u32>)
	s0_279 = a1_107 - a5_183 - CONVERT(a0 << 3<u32> <u s4_282, bool, word32)
	branch s0_279 << 8<u32> >= 0<32> l2306A658
l2306A658:
	t1_106 = s4_282 | s0_279
	branch t1_106 != 0<32> l2306A5EC
l2306A660:
l2306A5D8:
	s4_282 = (a2 << 3<u32>) - (a0 << 3<u32>)
	s0_279 = a5_183 - a1_107 - CONVERT(a2 << 3<u32> <u s4_282, bool, word32)
	s2_111 = a3 >>u 0x1F<u32>
l2306A474:
	word32 a0_55 = a1_107 | a0 << 3<u32>
	word32 a2_56 = a5_183 | a2 << 3<u32>
	branch s3_284 != 0<32> l2306A554
l2306A554:
	branch s3_284 != 2047<i32> l2306A57C
l2306A57C:
	branch a4_100 != 2047<i32> l2306A5B8
l2306A5B8:
	a4_100 = 0<i32>
l2306A55C:
	branch a0_55 == 0<32> l2306A824
l2306A824:
	branch a4_100 == s3_284 l2306A580
l2306A580:
	a4_100 = 0<i32>
l2306A828:
	a4_100 = 0<i32>
l2306A560:
	word32 a3_63 = CONVERT((a1_107 & 0x400000<32>) <u 1<i32>, bool, word32)
	branch a4_100 != s3_284 l2306A830
l2306A830:
	a4_100 = a3_63 << 4<u32>
l2306A574:
	a4_100 = a3_63 << 4<u32>
l2306A584:
	branch a2_56 == 0<32> l2306A594
l2306A588:
	branch a5_183 << 9<u32> < 0<32> l2306A594
l2306A590:
	a4_100 = 16<i32>
l2306A594:
	branch a0_55 != 0<32> l2306A834
l2306A834:
	branch a2_56 == 0<32> l2306A7AC
l2306A7AC:
	a5_183 = a1_107
	a7_184 = a0 << 3<u32>
l2306A838:
l2306A598:
	s2_111 = a3 >>u 0x1F<u32>
	branch a2_56 != 0<32> l2306A7B4
l2306A7B4:
l2306A5A0:
	a7_184 = 0<i32>
	s2_111 = 0<i32>
	a5_183 = 0x400000<32>
	a6_124 = 2047<i32>
	a4_100 = 16<i32>
l2306A480:
	branch a0_55 != 0<32> l2306A508
l2306A508:
	branch a2_56 == 0<32> l2306A498
l2306A50C:
	word32 a3_101 = (a0 << 3<u32>) - (a2 << 3<u32>)
	word32 a4_104 = a1_107 - a5_183 - CONVERT(a0 << 3<u32> <u a3_101, bool, word32)
	branch a4_104 << 8<u32> >= 0<32> l2306A53C
l2306A53C:
	t1_106 = a3_101 | a4_104
	branch t1_106 != 0<32> l2306A6E0
l2306A6E0:
	a1_107 = a4_104
	t1_106 = a3_101
l2306A544:
	s2_111 = CONVERT(s1_17 <u -3<i32>, bool, word32)
l2306A524:
	t1_106 = (a2 << 3<u32>) - (a0 << 3<u32>)
	a1_107 = a5_183 - a1_107 - CONVERT(a2 << 3<u32> <u t1_106, bool, word32)
l2306A484:
	branch a2_56 != 0<32> l2306A6D4
l2306A6D4:
	a1_107 = a5_183
	t1_106 = a2 << 3<u32>
l2306A534:
	s2_111 = a3 >>u 0x1F<u32>
l2306A488:
	s2_111 = CONVERT(s1_17 <u -3<i32>, bool, word32)
	a1_107 = 0<i32>
	t1_106 = 0<i32>
l2306A32C:
	word32 s0_128
	a6_124 = a4_100 - s3_284
	branch s3_284 != 0<32> l2306A3A8
l2306A3A8:
	branch a4_100 != 2047<i32> l2306A3C8
l2306A3C8:
	a1_107 = a1_107 | 0x800000<32>
	s0_128 = a6_124
l2306A3B0:
	branch (a5_183 | a2 << 3<u32>) == 0<32> l2306A79C
l2306A79C:
	a6_124 = 2047<i32>
l2306A3B8:
	s2_111 = a3 >>u 0x1F<u32>
l2306A334:
	branch (a1_107 | a0 << 3<u32>) != 0<32> l2306A360
l2306A360:
	s0_128 = a6_124 + -1<i32>
	branch a6_124 != 0xFFFFFFFF<32> l2306A384
l2306A384:
	branch a6_124 != 2047<i32> l2306A3D4
l2306A3D4:
	word32 a3_159
	word32 t1_144
	branch s0_128 > 56<i32> l2306A45C
l2306A45C:
	t1_144 = CONVERT((a1_107 | a0 << 3<u32>) != 0<32>, bool, word32)
l2306A3DC:
	branch s0_128 > 31<i32> l2306A428
l2306A428:
	word32 a2_148 = a1_107 >>u s0_128 + -32<i32>
	word32 a0_149 = 0<i32>
	branch s0_128 == 32<i32> l2306A448
l2306A43C:
	a0_149 = a1_107 << 64<i32> - s0_128
l2306A448:
	t1_144 = a2_148 | CONVERT((a0_149 | a0 << 3<u32>) != 0<32>, bool, word32)
l2306A454:
	a3_159 = 0<i32>
l2306A3E4:
	word32 a0_161 = 32<i32> - s0_128
	t1_144 = a1_107 << a0_161 | (a0 << 3<u32>) >>u s0_128 | CONVERT((a0 << 3<u32>) << a0_161 != 0<32>, bool, word32)
	a3_159 = a1_107 >>u s0_128
l2306A408:
	word32 t1_175 = (a2 << 3<u32>) - t1_144
	a5_183 = a5_183 - a3_159 - CONVERT(a2 << 3<u32> <u t1_175, bool, word32)
	a7_184 = t1_175
	a6_124 = a4_100
	s2_111 = a3 >>u 0x1F<u32>
l2306A38C:
	branch (a5_183 | a2 << 3<u32>) == 0<32> l2306A78C
l2306A78C:
l2306A794:
	a7_184 = 0<i32>
	s2_111 = a3 >>u 0x1F<u32>
l2306A394:
	a4_200 = a5_183 << 9<u32>
	s2_111 = a3 >>u 0x1F<u32>
l2306A368:
	word32 t1_202 = (a2 << 3<u32>) - (a0 << 3<u32>)
	a5_183 = a5_183 - a1_107 - CONVERT(a2 << 3<u32> <u t1_202, bool, word32)
	s2_111 = a3 >>u 0x1F<u32>
	a7_184 = t1_202
l2306A33C:
	s2_111 = a3 >>u 0x1F<u32>
	branch a6_124 != 2047<i32> l2306A6C4
l2306A348:
	branch (a5_183 | a2 << 3<u32>) == 0<32> l2306A780
l2306A350:
	a4_100 = 0<i32>
	branch a5_183 << 9<u32> < 0<32> l23069FB8
l2306A35C:
l2306A238:
	branch a4_100 != 0<32> l2306A2D4
l2306A2D4:
	branch s3_284 == 2047<i32> l23069E90
l2306A2DC:
	a5_183 = a5_183 | 0x800000<32>
l2306A23C:
	branch (a5_183 | a2 << 3<u32>) == 0<32> l23069E2C
l2306A244:
	a3_217 = a3_217 + -1<i32>
	branch a3_217 != 0xFFFFFFFF<32> l2306A264
l2306A264:
	branch a3_217 == 2047<i32> l23069E68
l2306A26C:
	word32 a3_239
	word32 a7_224
	branch a3_217 > 56<i32> l2306A31C
l2306A31C:
	a7_224 = CONVERT((a5_183 | a2 << 3<u32>) != 0<32>, bool, word32)
l2306A274:
	branch a3_217 > 31<i32> l2306A2E8
l2306A2E8:
	word32 a4_228 = a5_183 >>u a3_217 + -32<i32>
	word32 s0_229 = 0<i32>
	branch a3_217 == 32<i32> l2306A308
l2306A2FC:
	s0_229 = a5_183 << 64<i32> - a3_217
l2306A308:
	a7_224 = a4_228 | CONVERT((s0_229 | a2 << 3<u32>) != 0<32>, bool, word32)
l2306A314:
	a3_239 = 0<i32>
l2306A27C:
	word32 s0_241 = 32<i32> - a3_217
	a7_224 = a5_183 << s0_241 | (a2 << 3<u32>) >>u a3_217 | CONVERT((a2 << 3<u32>) << s0_241 != 0<32>, bool, word32)
	a3_239 = a5_183 >>u a3_217
l2306A2A0:
	a7_184 = (a0 << 3<u32>) - a7_224
	a5_183 = a1_107 - a3_239 - CONVERT(a0 << 3<u32> <u a7_184, bool, word32)
	a6_124 = s3_284
l2306A24C:
	a7_184 = (a0 << 3<u32>) - (a2 << 3<u32>)
	a5_183 = a1_107 - a5_183 - CONVERT(a0 << 3<u32> <u a7_184, bool, word32)
l2306A25C:
	a6_124 = 1<i32>
l2306A2B4:
	branch a5_183 << 8<u32> >= 0<32> l2306A6C4
l2306A2BC:
	s0_279 = a5_183 & 0x7FFFFF<32>
	s4_282 = a7_184
	s3_284 = a6_124
l2306A5EC:
	word32 a0_291
	branch s0_279 == 0<32> l2306A664
l2306A664:
	word32 a4_1933
	a0_291 = __clzsi2(s4_282, out a4_1933) + 32<i32>
l2306A5F0:
	word32 a4_1934
	a0_291 = __clzsi2(s0_279, out a4_1934)
l2306A5F8:
	word32 s0_301
	word32 a6_297 = a0_291 + -8<i32>
	branch a6_297 > 31<i32> l2306A674
l2306A674:
	s0_301 = s4_282 << a0_291 + -40<i32>
	a7_184 = 0<i32>
l2306A604:
	s0_301 = s4_282 >>u 32<i32> - a6_297 | s0_279 << a6_297
	a7_184 = s4_282 << a6_297
l2306A61C:
	branch a6_297 < s3_284 l2306A6B4
l2306A6B4:
	a6_124 = s3_284 - a6_297
	a5_183 = s0_301 & 0xFF7FFFFF<32>
l2306A620:
	word32 a6_319 = a6_297 - s3_284
	branch a6_319 > -30<i32> l2306A684
l2306A684:
	word32 a6_324 = s0_301 >>u a6_319 + -31<i32>
	word32 a4_325 = 0<i32>
	branch a6_319 == -31<i32> l2306A6A4
l2306A698:
	a4_325 = s0_301 << 64<i32> - (a6_319 + 1<i32>)
l2306A6A4:
	t1_106 = a6_324 | CONVERT((a7_184 | a4_325) != 0<32>, bool, word32)
l2306A54C:
	a1_107 = 0<i32>
l2306A630:
	word32 a2_338 = 32<i32> - (a6_319 + 1<i32>)
	t1_106 = s0_301 << a2_338 | a7_184 >>u a6_319 + 1<i32> | CONVERT(a7_184 << a2_338 != 0<32>, bool, word32)
	a1_107 = s0_301 >>u a6_319 + 1<i32>
l23069E1C:
	branch a3_217 <= 0<32> l23069F84
l23069F84:
	branch a3_217 == 0<32> l2306A0BC
l2306A0BC:
	a6_124 = s3_284 + 1<i32>
	branch (s3_284 + 1<i32> & 2046<i32>) != 0<32> l2306A16C
l2306A16C:
	branch s3_284 == -2046<i32> l2306A19C
l2306A19C:
	branch s1_17 == 0<32> l2306A1AC
l2306A1A0:
	branch s1_17 != 3<i32> l2306A1B4
l2306A1B4:
	branch s1_17 != 2<i32> l2306A1C0
l2306A1BC:
	branch a1 >>u 0x1F<u32> != 0<32> l2306A1AC
l2306A1A8:
	branch a1 >>u 0x1F<u32> != 0<32> l2306A1C0
l2306A1AC:
	a6_124 = 2047<i32>
l2306A174:
	word32 a7_352 = (a0 << 3<u32>) + (a2 << 3<u32>)
	word32 t1_355 = a1_107 + a5_183 + CONVERT(a7_352 <u a0 << 3<u32>, bool, word32)
	a7_184 = t1_355 << 0x1F<u32> | a7_352 >>u 1<u32>
	a5_183 = t1_355 >>u 1<u32>
l2306A0C8:
	word32 a3_360 = a1_107 | a0 << 3<u32>
	branch s3_284 != 0<32> l2306A10C
l2306A10C:
	word32 a6_362
	branch s3_284 != 2047<i32> l2306A144
l2306A144:
	a6_362 = 0<i32>
	branch a4_100 == 2047<i32> l2306A12C
l2306A114:
	branch a3_360 == 0<32> l2306A8EC
l2306A8EC:
	branch a4_100 != s3_284 l2306A778
l2306A8F0:
	a6_362 = 0<i32>
l2306A118:
	a6_362 = CONVERT((a1_107 & 0x400000<32>) <u 1<i32>, bool, word32) << 4<u32>
	branch a4_100 != s3_284 l2306A150
l2306A12C:
	branch (a5_183 | a2 << 3<u32>) == 0<32> l2306A8E4
l2306A8E4:
	branch a3_360 == 0<32> l2306A160
l2306A8E8:
l2306A134:
	branch a5_183 << 9<u32> < 0<32> l2306A14C
l2306A13C:
	a6_362 = 16<i32>
l2306A14C:
	branch a3_360 == 0<32> l2306A160
l2306A150:
	branch (a5_183 | a2 << 3<u32>) != 0<32> l2306A738
l2306A738:
	a4_100 = a6_362
l2306A83C:
	s2_111 = 0<i32>
	a5_183 = 0x400000<32>
	a7_184 = 0<i32>
	a6_124 = 2047<i32>
l2306A158:
	a5_183 = a1_107
	a7_184 = a0 << 3<u32>
l2306A160:
	a4_100 = a6_362
l2306A7B8:
	s3_284 = 0<i32>
	a6_124 = 2047<i32>
l2306A0D0:
	branch a3_360 == 0<32> l2306A6C8
l2306A0D4:
	branch (a5_183 | a2 << 3<u32>) == 0<32> l2306A498
l2306A0DC:
	a7_184 = (a2 << 3<u32>) + (a0 << 3<u32>)
	a1_107 = a1_107 + a5_183 + CONVERT(a7_184 <u a0 << 3<u32>, bool, word32)
	branch a1_107 << 8<u32> >= 0<32> l2306A6CC
l2306A0F4:
	a5_183 = a1_107 & 0xFF7FFFFF<32>
	a4_100 = 0<i32>
	a6_124 = 1<i32>
l23069F88:
	word32 a3_418
	a6_124 = a4_100 - s3_284
	branch s3_284 != 0<32> l2306A04C
l2306A04C:
	branch a4_100 != 2047<i32> l2306A06C
l2306A06C:
	a1_107 = a1_107 | 0x800000<32>
	a3_418 = a6_124
l2306A054:
	branch (a5_183 | a2 << 3<u32>) == 0<32> l2306A724
l2306A724:
	a7_184 = 0<i32>
l2306A05C:
l2306A064:
	a6_124 = 2047<i32>
	a4_200 = (a2 >>u 0x1D<u32> | a0_33) << 9<u32>
	s3_284 = 0<i32>
l2306A39C:
	branch a4_200 >= 0<32> l23069EB0
l23069F90:
	branch (a1_107 | a0 << 3<u32>) != 0<32> l23069FD4
l23069FD4:
	a3_418 = a6_124 + -1<i32>
	branch a6_124 != 0xFFFFFFFF<32> l23069FF4
l23069FF4:
	branch a6_124 == 2047<i32> l23069FA0
l23069FFC:
	word32 a3_450
	word32 t1_435
	branch a3_418 > 56<i32> l2306A0B0
l2306A0B0:
	t1_435 = CONVERT((a1_107 | a0 << 3<u32>) != 0<32>, bool, word32)
l2306A004:
	branch a3_418 > 31<i32> l2306A07C
l2306A07C:
	word32 a2_439 = a1_107 >>u a3_418 + -32<i32>
	word32 a0_440 = 0<i32>
	branch a3_418 == 32<i32> l2306A09C
l2306A090:
	a0_440 = a1_107 << 64<i32> - a3_418
l2306A09C:
	t1_435 = a2_439 | CONVERT((a0_440 | a0 << 3<u32>) != 0<32>, bool, word32)
l2306A0A8:
	a3_450 = 0<i32>
l2306A00C:
	word32 a0_452 = 32<i32> - a3_418
	t1_435 = a1_107 << a0_452 | (a0 << 3<u32>) >>u a3_418 | CONVERT((a0 << 3<u32>) << a0_452 != 0<32>, bool, word32)
	a3_450 = a1_107 >>u a3_418
l2306A030:
	word32 t1_466 = t1_435 + (a2 << 3<u32>)
	a5_183 = a3_450 + a5_183 + CONVERT(t1_466 <u a2 << 3<u32>, bool, word32)
	a7_184 = t1_466
	a6_124 = a4_100
l23069FDC:
	word32 t1_481 = (a0 << 3<u32>) + (a2 << 3<u32>)
	a5_183 = a1_107 + a5_183 + CONVERT(t1_481 <u a2 << 3<u32>, bool, word32)
	a7_184 = t1_481
l23069F98:
	branch a6_124 != 2047<i32> l2306A6C4
l23069FA0:
	branch (a5_183 | a2 << 3<u32>) == 0<32> l2306A780
l2306A780:
	a7_184 = 0<i32>
l23069FA8:
	a4_100 = CONVERT((a5_183 & 0x400000<32>) <u 1<i32>, bool, word32) << 4<u32>
l23069E20:
	branch a4_100 != 0<32> l23069E88
l23069E88:
	branch s3_284 != 2047<i32> l23069EB8
l23069EB8:
	a5_183 = a5_183 | 0x800000<32>
l23069E90:
	a7_184 = a1_107 | a0 << 3<u32>
	branch a7_184 == 0<32> l2306A768
l2306A768:
l2306A72C:
	a6_124 = 2047<i32>
l23069E98:
	branch a1_107 << 9<u32> < 0<32> l2306A770
l2306A770:
	a5_183 = a1_107
	a7_184 = a0 << 3<u32>
l2306A778:
	a6_124 = 2047<i32>
l23069EA0:
	a6_124 = 2047<i32>
l23069E24:
	branch (a5_183 | a2 << 3<u32>) != 0<32> l23069E40
l23069E40:
	a3_217 = a3_217 + -1<i32>
	branch a3_217 != 0xFFFFFFFF<32> l23069E60
l23069E60:
	branch a3_217 != 2047<i32> l23069EC0
l23069EC0:
	word32 a3_534
	word32 a7_519
	branch a3_217 > 56<i32> l23069F78
l23069F78:
	a7_519 = CONVERT((a5_183 | a2 << 3<u32>) != 0<32>, bool, word32)
l23069EC8:
	branch a3_217 > 31<i32> l23069F44
l23069F44:
	word32 a4_523 = a5_183 >>u a3_217 + -32<i32>
	word32 s0_524 = 0<i32>
	branch a3_217 == 32<i32> l23069F64
l23069F58:
	s0_524 = a5_183 << 64<i32> - a3_217
l23069F64:
	a7_519 = a4_523 | CONVERT((s0_524 | a2 << 3<u32>) != 0<32>, bool, word32)
l23069F70:
	a3_534 = 0<i32>
l23069ED0:
	word32 s0_536 = 32<i32> - a3_217
	a7_519 = a5_183 << s0_536 | (a2 << 3<u32>) >>u a3_217 | CONVERT((a2 << 3<u32>) << s0_536 != 0<32>, bool, word32)
	a3_534 = a5_183 >>u a3_217
l23069EF4:
	a7_184 = a7_519 + (a0 << 3<u32>)
	a5_183 = a3_534 + a1_107 + CONVERT(a7_184 <u a0 << 3<u32>, bool, word32)
	a6_124 = s3_284
l23069E48:
	a7_184 = (a2 << 3<u32>) + (a0 << 3<u32>)
	a5_183 = a1_107 + a5_183 + CONVERT(a7_184 <u a0 << 3<u32>, bool, word32)
l23069E58:
	a6_124 = 1<i32>
l23069F08:
	branch a5_183 << 8<u32> >= 0<32> l2306A6C4
l2306A6C4:
	branch a6_124 != 0<32> l2306A194
l2306A6C8:
	a1_107 = a5_183
l2306A6CC:
	t1_106 = a7_184
l2306A498:
	a7_184 = t1_106 | a1_107
	branch a7_184 == 0<32> l2306A7C0
l2306A7C0:
	a6_124 = 0<i32>
l2306A730:
	a5_183 = 0<i32>
	a4_100 = 0<i32>
l2306A4A0:
	word32 s3_596 = (a1_107 << 1<u32>) + (t1_106 >>u 0x1F<u32>)
	word32 a5_597 = t1_106 << 1<u32>
	a4_100 = 0<i32>
	branch (a5_597 & 7<i32>) == 0<32> l2306A4EC
l2306A4BC:
	branch s1_17 == 2<i32> l2306A708
l2306A708:
	a4_100 = 1<i32>
	branch s2_111 == 0<32> l2306A4EC
l2306A710:
	s3_596 = s3_596 + (CONVERT(a5_597 <u -8<i32>, bool, word32) ^ 1<i32>)
	a4_100 = s2_111
l2306A4C4:
	branch s1_17 == 3<i32> l2306A6EC
l2306A6EC:
	a4_100 = s2_111
	branch s2_111 != 0<32> l2306A4EC
l2306A6F4:
	s3_596 = s3_596 + (CONVERT(a5_597 <u -8<i32>, bool, word32) ^ 1<i32>)
	a4_100 = 1<i32>
l2306A4CC:
	a4_100 = 1<i32>
	branch s1_17 != 0<32> l2306A4EC
l2306A4D4:
	branch (a5_597 & 15<i32>) == 4<i32> l2306A4EC
l2306A4E0:
	s3_596 = s3_596 + (CONVERT(a5_597 <u -4<i32>, bool, word32) ^ 1<i32>)
l2306A4EC:
	s3_284 = (s3_596 >>u 0x18<u32> ^ 1<i32>) & 1<i32>
	a5_183 = a1_107
	a7_184 = t1_106
	a6_124 = 0<i32>
l23069F10:
	a6_124 = a6_124 + 1<i32>
	branch a6_124 == 2047<i32> l2306A204
l2306A204:
	branch s1_17 == 0<32> l2306A214
l2306A208:
	branch s1_17 != 3<i32> l2306A224
l2306A224:
	branch s1_17 != 2<i32> l2306A744
l2306A22C:
	branch a1 >>u 0x1F<u32> != 0<32> l2306A214
l2306A230:
l2306A1C0:
l2306A210:
	branch a1 >>u 0x1F<u32> != 0<32> l2306A744
l2306A744:
l2306A1D0:
	a6_124 = 2046<i32>
	s3_284 = 0<i32>
	a5_183 = -1<i32>
	a7_184 = -1<i32>
	a4_100 = 5<i32>
l2306A214:
	a5_183 = 0<i32>
	a7_184 = 0<i32>
	a4_100 = 5<i32>
l23069F1C:
	word32 a0_700 = a5_183 & 0xFF7FFFFF<32>
	a7_184 = a0_700 << 0x1F<u32> | (a7_184 >>u 1<u32> | a7_184 & 1<i32>)
	a5_183 = a0_700 >>u 1<u32>
l23069E2C:
	branch a3_217 == 2047<i32> l23069E68
l23069E68:
	a7_184 = a1_107 | a0 << 3<u32>
	a5_183 = 0<i32>
	branch a7_184 == 0<32> l2306A848
l23069E74:
	branch a1_107 << 9<u32> < 0<32> l2306A758
l2306A758:
	a5_183 = a1_107
	a7_184 = a0 << 3<u32>
	s3_284 = 0<i32>
l23069E7C:
l23069EAC:
	a5_183 = a1_107
	a7_184 = a0 << 3<u32>
	s3_284 = 0<i32>
l23069EB0:
	a4_100 = 16<i32>
l23069E34:
	a5_183 = a1_107
	a7_184 = a0 << 3<u32>
l2306A194:
	s3_284 = 0<i32>
l2306A3A0:
	a4_100 = 0<i32>
l23069FB8:
	branch (a7_184 & 7<i32>) != 0<32> l2306A1D4
l2306A1D4:
	word32 a1_817
	a4_100 = a4_100 | 1<i32>
	branch s1_17 == 2<i32> l2306A7E4
l2306A7E4:
	branch s2_111 == 0<32> l2306A1FC
l2306A7E8:
l2306A1E0:
	branch s1_17 == 3<i32> l2306A7CC
l2306A7CC:
	branch s2_111 != 0<32> l2306A1FC
l2306A7D0:
	a1_817 = a7_184 + 8<i32>
l2306A1E8:
	branch s1_17 != 0<32> l2306A1FC
l2306A1EC:
	a1_817 = a7_184 + 4<i32>
	branch (a7_184 & 15<i32>) != 4<i32> l2306A7D4
l2306A7D4:
	a5_183 = a5_183 + CONVERT(a1_817 <u a7_184, bool, word32)
	a7_184 = a1_817
l2306A1FC:
	branch s3_284 != 0<32> l23069FCC
l2306A200:
l23069FC0:
	branch s3_284 == 0<32> l2306A848
l23069FC4:
	branch (a4_100 & 1<i32>) == 0<32> l2306A848
l23069FCC:
	a4_100 = a4_100 | 2<i32>
l2306A848:
	branch a5_183 << 8<u32> >= 0<32> l2306A868
l2306A850:
	a6_124 = a6_124 + 1<i32>
	branch a6_124 == 2047<i32> l2306A7EC
l2306A7EC:
	a7_184 = 0<i32>
	branch s1_17 == 0<32> l2306A818
l2306A7F4:
	branch s1_17 != 3<i32> l2306A80C
l2306A80C:
	branch s1_17 != 2<i32> l2306A800
l2306A814:
	branch s2_111 == 0<32> l2306A800
l2306A7FC:
	branch s2_111 == 0<32> l2306A818
l2306A800:
	a7_184 = -1<i32>
	a6_124 = 2046<i32>
l2306A818:
	a4_100 = a4_100 | 5<i32>
	a5_183 = a7_184
l2306A85C:
	a5_183 = a5_183 & 0xFF7FFFFF<32>
l2306A868:
	word32 a7_938 = a5_183 << 0x1D<u32> | a7_184 >>u 3<u32>
	word32 a5_939 = a5_183 >>u 3<u32>
	branch a6_124 != 2047<i32> l2306A898
l2306A880:
	a7_938 = a7_938 | a5_939
	a5_939 = 0<i32>
	branch a7_938 == 0<32> l2306A898
l2306A88C:
	a5_939 = 0x80000<32>
	a7_938 = 0<i32>
	s2_111 = 0<i32>
l2306A898:
	word32 a1_962 = CONVERT(SLICE(a5_939, word20, 0), word20, word32) | (a6_124 & 2047<i32>) << 0x14<u32> | s2_111 << 0x1F<u32>
	branch a4_100 == 0<32> l2306A8C4
l2306A8C0:
	__csrrs(fflags, ra)
l2306A8C4:
	a1Out = a1_962
	return a7_938
__adddf3_exit:


word32 __divdf3(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 fflags, word32 frm, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecvtbuf
//      TSEN_Get_Temp
//      pa_input
//      rf_set_channel
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 fflags frm ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
__divdf3_entry:
l2306A8F8:
	word32 s1_149
	word32 s3_205
	word32 s6_184
	word32 s8_159
	word32 s2_33 = __csrrs(frm, fp + -48<i32>)
	word32 a6_37 = a1 >>u 0x14<u32> & 2047<i32>
	word32 s7_197 = CONVERT(SLICE(a1, word20, 0), word20, word32)
	branch a6_37 == 0<32> l2306A980
l2306A980:
	branch (s7_197 | a0) == 0<32> l2306AA80
l2306AA80:
	s7_197 = 0<i32>
	s3_205 = 0<i32>
	s6_184 = 0<i32>
	s8_159 = 1<i32>
l2306A988:
	word32 a0_48
	branch s7_197 == 0<32> l2306A9C8
l2306A9C8:
	word32 a4_1999
	a0_48 = __clzsi2(a0, out a4_1999) + 32<i32>
l2306A98C:
	word32 a4_2000
	a0_48 = __clzsi2(s7_197, out a4_2000)
l2306A994:
	word32 a3_54 = a0_48 + -11<i32>
	branch a3_54 > 28<i32> l2306A9D4
l2306A9D4:
	s7_197 = a0 << a0_48 + -40<i32>
	s3_205 = 0<i32>
l2306A9A0:
	word32 s3_61 = a0_48 + -8<i32>
	s7_197 = a0 >>u 29<i32> - a3_54 | s7_197 << s3_61
	s3_205 = a0 << s3_61
l2306A9BC:
	s6_184 = -1011<i32> - a0_48
l2306A950:
	branch a6_37 == 2047<i32> l2306A9E4
l2306A9E4:
	branch (s7_197 | a0) == 0<32> l2306AA94
l2306AA94:
	s7_197 = 0<i32>
	s3_205 = 0<i32>
	s6_184 = 2047<i32>
	s8_159 = 2<i32>
l2306A9EC:
	s3_205 = a0
	s6_184 = 2047<i32>
	s8_159 = 3<i32>
	s1_149 = 16<i32>
	branch s7_197 << 0xC<u32> < 0<32> l2306A978
l2306A958:
	s7_197 = a0 >>u 0x1D<u32> | s7_197 << 3<u32> | 0x800000<32>
	s3_205 = a0 << 3<u32>
	s6_184 = a6_37 + -1023<i32>
l2306A974:
	s8_159 = 0<i32>
l2306A978:
	s1_149 = 0<i32>
l2306AA04:
	word32 a0_110
	word32 a4_111
	word32 a6_98 = a3 >>u 0x14<u32> & 2047<i32>
	word32 a5_104 = a2
	word32 s0_105 = CONVERT(SLICE(a3, word20, 0), word20, word32)
	branch a6_98 == 0<32> l2306AAA8
l2306AAA8:
	branch (s0_105 | a2) == 0<32> l2306AB30
l2306AB30:
	s0_105 = 0<i32>
	a5_104 = 0<i32>
	a0_110 = 0<i32>
	a4_111 = 1<i32>
l2306AAB0:
	word32 a0_116
	branch s0_105 == 0<32> l2306AAF0
l2306AAF0:
	word32 a4_2001
	a0_116 = __clzsi2(a2, out a4_2001) + 32<i32>
l2306AAB4:
	word32 a4_2002
	a0_116 = __clzsi2(s0_105, out a4_2002)
l2306AABC:
	word32 a3_122 = a0_116 + -11<i32>
	branch a3_122 > 28<i32> l2306AB00
l2306AB00:
	s0_105 = a2 << a0_116 + -40<i32>
	a5_104 = 0<i32>
l2306AAC8:
	word32 a5_129 = a0_116 + -8<i32>
	s0_105 = a2 >>u 29<i32> - a3_122 | s0_105 << a5_129
	a5_104 = a2 << a5_129
l2306AAE4:
	a0_110 = -1011<i32> - a0_116
l2306AA20:
	branch a6_98 == 2047<i32> l2306AB10
l2306AB10:
	branch (s0_105 | a2) == 0<32> l2306AB44
l2306AB44:
	s0_105 = 0<i32>
	a5_104 = 0<i32>
	a0_110 = 2047<i32>
	a4_111 = 2<i32>
l2306AB18:
	a0_110 = 2047<i32>
	branch s0_105 << 0xC<u32> < 0<32> l2306AB58
l2306AB58:
	a4_111 = 3<i32>
l2306AB24:
	a4_111 = 3<i32>
	s1_149 = 16<i32>
l2306AA28:
	s0_105 = a2 >>u 0x1D<u32> | s0_105 << 3<u32> | 0x800000<32>
	a5_104 = a2 << 3<u32>
	a0_110 = a6_98 + -1023<i32>
l2306AA44:
	a4_111 = 0<i32>
l2306AA48:
	word32 a3_166 = s8_159 << 2<u32> | a4_111
	word32 a2_182 = a1 >>u 0x1F<u32> ^ a3 >>u 0x1F<u32>
	word32 a6_192 = s6_184 - a0_110
	branch a3_166 >u -15<i32> l2306AB60
l2306AB60:
	word32 a3_217
	branch s0_105 <u s7_197 l2306AB6C
l2306AB64:
	branch s7_197 != s0_105 l2306AE50
l2306AB68:
	branch s3_205 <u a5_104 l2306AE50
l2306AE50:
	a6_192 = a6_192 + -1<i32>
	a3_217 = 0<i32>
l2306AB6C:
	a3_217 = s3_205 << 0x1F<u32>
	s7_197 = s7_197 >>u 1<u32>
	s3_205 = s7_197 << 0x1F<u32> | s3_205 >>u 1<u32>
l2306AB80:
	word32 a0_233 = a5_104 >>u 0x18<u32> | s0_105 << 8<u32>
	word32 t1_237 = s7_197 >>u (a0_233 >>u 0x10<u32>)
	word32 t4_239 = CONVERT(SLICE(a0_233, word16, 0), word16, word32)
	word32 a1_240 = a5_104 << 8<u32>
	word32 a7_245 = t1_237
	word32 a4_246 = t4_239 + t1_237
	word32 a5_248 = s3_205 >>u 0x10<u32> | (s7_197 & a0_233 >>u 0x10<u32>) << 0x10<u32>
	branch a5_248 >=u a4_246 l2306ABD4
l2306ABBC:
	a5_248 = a5_248 + a0_233
	a7_245 = t1_237 + -1<i32>
	branch a5_248 <u a0_233 l2306ABD4
l2306ABC8:
	branch a5_248 >=u a4_246 l2306ABD4
l2306ABCC:
	a7_245 = t1_237 + -2<i32>
	a5_248 = a5_248 + a0_233
l2306ABD4:
	word32 a5_255 = a5_248 - a4_246
	word32 t3_257 = a5_255 >>u (a0_233 >>u 0x10<u32>)
	word32 s3_262 = t3_257
	word32 t1_264 = CONVERT(SLICE(a0_233, word16, 0), word16, word32) + t3_257
	word32 a4_266 = CONVERT(SLICE(s3_205, word16, 0), word16, word32) | (a5_255 & a0_233 >>u 0x10<u32>) << 0x10<u32>
	branch a4_266 >=u t1_264 l2306AC14
l2306ABFC:
	a4_266 = a4_266 + a0_233
	s3_262 = t3_257 + -1<i32>
	branch a4_266 <u a0_233 l2306AC14
l2306AC08:
	branch a4_266 >=u t1_264 l2306AC14
l2306AC0C:
	s3_262 = t3_257 + -2<i32>
	a4_266 = a4_266 + a0_233
l2306AC14:
	word32 s3_276 = a7_245 << 0x10<u32> | s3_262
	word32 s0_289 = (s3_276 >>u 0x10<u32>) + (a1_240 & 0xFFFF<32>)
	word32 a5_288 = (a1_240 & 0xFFFF<32>) + (s3_276 & 0xFFFF<32>)
	word32 a4_285 = a4_266 - t1_264
	word32 t1_293 = (a5_288 >>u 0x10<u32>) + (((a1_240 >>u 0x10<u32>) + (s3_276 & 0xFFFF<32>)) + s0_289)
	word32 t0_294 = (s3_276 >>u 0x10<u32>) + (a1_240 >>u 0x10<u32>)
	branch t1_293 >=u s0_289 l2306AC5C
l2306AC58:
	t0_294 = t0_294 + 0x10000<32>
l2306AC5C:
	word32 s0_309
	word32 t0_301 = (t1_293 >>u 0x10<u32>) + t0_294
	word32 a7_306 = ((t1_293 & 0xFFFF<32>) << 0x10<u32>) + (a5_288 & 0xFFFF<32>)
	branch a4_285 <u t0_301 l2306AC8C
l2306AC80:
	s0_309 = s3_276
	branch a4_285 != t0_301 l2306ACCC
l2306AC88:
	branch a3_217 >=u a7_306 l2306ACCC
l2306AC8C:
	a3_217 = a3_217 + a1_240
	a4_285 = a4_285 + (CONVERT(a3_217 <u a1_240, bool, word32) + a0_233)
	s0_309 = s3_276 + -1<i32>
	branch a0_233 <u a4_285 l2306ACAC
l2306ACA4:
	branch a0_233 != a4_285 l2306ACCC
l2306ACA8:
	branch a3_217 <u a1_240 l2306ACCC
l2306ACAC:
	branch a4_285 <u t0_301 l2306ACB8
l2306ACB0:
	branch t0_301 != a4_285 l2306ACCC
l2306ACB4:
	branch a3_217 >=u a7_306 l2306ACCC
l2306ACB8:
	a3_217 = a3_217 + a1_240
	s0_309 = s3_276 + -2<i32>
	a4_285 = a4_285 + (CONVERT(a3_217 <u a1_240, bool, word32) + a0_233)
l2306ACCC:
	word32 a7_349 = a3_217 - a7_306
	word32 a4_355 = a4_285 - t0_301 - CONVERT(a3_217 <u a7_349, bool, word32)
	word32 a5_356 = -1<i32>
	branch a0_233 == a4_355 l2306AE08
l2306ACE4:
	word32 t0_364 = a4_355 >>u (a0_233 >>u 0x10<u32>)
	word32 a3_367 = t0_364
	word32 t1_374 = t4_239 + t0_364
	word32 a4_376 = a7_349 >>u 0x10<u32> | (a4_355 & a0_233 >>u 0x10<u32>) << 0x10<u32>
	branch a4_376 >=u t1_374 l2306AD1C
l2306AD04:
	a4_376 = a4_376 + a0_233
	a3_367 = t0_364 + -1<i32>
	branch a4_376 <u a0_233 l2306AD1C
l2306AD10:
	branch a4_376 >=u t1_374 l2306AD1C
l2306AD14:
	a3_367 = t0_364 + -2<i32>
	a4_376 = a4_376 + a0_233
l2306AD1C:
	word32 a4_383 = a4_376 - t1_374
	word32 t1_385 = a4_383 >>u (a0_233 >>u 0x10<u32>)
	word32 t4_391 = t4_239 + t1_385
	word32 a4_393 = CONVERT(SLICE(a7_349, word16, 0), word16, word32) | (a4_383 & a0_233 >>u 0x10<u32>) << 0x10<u32>
	word32 a5_394 = t1_385
	branch a4_393 >=u t4_391 l2306AD5C
l2306AD44:
	a4_393 = a4_393 + a0_233
	a5_394 = t1_385 + -1<i32>
	branch a4_393 <u a0_233 l2306AD5C
l2306AD50:
	branch a4_393 >=u t4_391 l2306AD5C
l2306AD54:
	a5_394 = t1_385 + -2<i32>
	a4_393 = a4_393 + a0_233
l2306AD5C:
	word32 a3_404 = a3_367 << 0x10<u32> | a5_394
	word32 a5_406 = CONVERT(SLICE(a3_404, word16, 0), word16, word32)
	word32 t3_419 = (a3_404 >>u 0x10<u32>) + (a1_240 & 0xFFFF<32>)
	word32 t5_415 = a5_406 + (a1_240 & 0xFFFF<32>)
	word32 a4_418 = a4_393 - t4_391
	word32 t4_427 = (a1_240 >>u 0x10<u32>) + (a3_404 >>u 0x10<u32>)
	word32 a5_431 = (t5_415 >>u 0x10<u32>) + (((a1_240 >>u 0x10<u32>) + a5_406) + t3_419)
	branch a5_431 >=u t3_419 l2306AD9C
l2306AD94:
	t4_427 = t4_427 + 0x10000<32>
l2306AD9C:
	word32 t1_443 = (a5_431 >>u 0x10<u32>) + t4_427
	word32 a7_444 = ((a5_431 & 0xFFFF<32>) << 0x10<u32>) + (t5_415 & 0xFFFF<32>)
	branch a4_418 <u t1_443 l2306ADCC
l2306ADC0:
	branch a4_418 != t1_443 l2306B19C
l2306ADC4:
	a5_356 = a3_404
	branch a7_444 == 0<32> l2306AE08
l2306ADCC:
	word32 a4_452 = a0_233 + a4_418
	a5_356 = a3_404 + -1<i32>
	branch a4_452 <u a0_233 l2306ADFC
l2306ADD8:
	branch a4_452 <u t1_443 l2306ADE4
l2306ADDC:
	branch a4_452 != t1_443 l2306B198
l2306B198:
	a3_404 = a3_404 + -1<i32>
l2306B19C:
	a5_356 = a3_404
l2306ADE0:
	branch a1_240 >=u a7_444 l2306AE00
l2306ADE4:
	a5_356 = a3_404 + -2<i32>
	a4_452 = a4_452 + (CONVERT(a1_240 << 1<u32> <u a1_240, bool, word32) + a0_233)
	a1_240 = a1_240 << 1<u32>
l2306ADFC:
	branch a4_452 != t1_443 l2306AE04
l2306AE00:
	branch a1_240 == a7_444 l2306AE08
l2306AE04:
	a5_356 = a5_356 | 1<i32>
l2306AE08:
	word32 a5_629
	word32 a4_507
	word32 a0_655
	word32 a1_506 = a6_192 + 1023<i32>
	branch a1_506 <= 0<32> l2306AFA4
l2306AFA4:
	a4_507 = 1<i32>
	branch a1_506 != 0<32> l2306B014
l2306AFAC:
	word32 a4_522 = s0_309
	branch (a5_356 & 7<i32>) == 0<32> l2306B008
l2306AFB8:
	word32 a4_603
	s1_149 = s1_149 | 1<i32>
	branch s2_33 == 2<i32> l2306B000
l2306B000:
	a4_522 = s0_309
	branch a2_182 != 0<32> l2306AFF8
l2306AFC4:
	branch s2_33 == 3<i32> l2306AFF0
l2306AFF0:
	a4_522 = s0_309
	branch a2_182 != 0<32> l2306B008
l2306AFF8:
	a4_603 = CONVERT(a5_356 <u -8<i32>, bool, word32)
l2306AFCC:
	a4_522 = s0_309
	branch s2_33 != 0<32> l2306B008
l2306AFD4:
	branch (a5_356 & 15<i32>) == 4<i32> l2306B008
l2306AFE0:
	a4_603 = CONVERT(a5_356 <u -4<i32>, bool, word32)
l2306AFE4:
	a4_522 = (a4_603 ^ 1<i32>) + s0_309
l2306B008:
	a4_507 = (a4_522 >>u 0x18<u32> ^ 1<i32>) & 1<i32>
l2306B014:
	word32 a0_622 = 1<i32> - a1_506
	branch a0_622 > 56<i32> l2306B118
l2306B118:
	a5_629 = a5_356 | s0_309
	branch a5_629 == 0<32> l2306B150
l2306B120:
	word32 a5_640
	s1_149 = s1_149 | 1<i32>
	branch s2_33 == 2<i32> l2306B160
l2306B160:
	a5_640 = 9<i32>
	branch a2_182 != 0<32> l2306B14C
l2306B168:
l2306B12C:
	branch s2_33 == 3<i32> l2306B144
l2306B144:
	a5_640 = 9<i32>
	branch a2_182 != 0<32> l2306B13C
l2306B134:
	a5_640 = 5<i32>
	branch s2_33 == 0<32> l2306B14C
l2306B13C:
	a5_640 = 1<i32>
l2306B14C:
	a5_629 = a5_640 >>u 3<u32>
l2306B150:
	s1_149 = s1_149 | 2<i32>
	a0_655 = 0<i32>
	a4_507 = 0<i32>
l2306B024:
	word32 a5_674
	word32 a0_675
	branch a0_622 > 31<i32> l2306B08C
l2306B08C:
	word32 a3_661 = s0_309 >>u -31<i32> - a1_506
	word32 a1_662 = 0<i32>
	branch a0_622 == 32<i32> l2306B0AC
l2306B0A4:
	a1_662 = s0_309 << a6_192 + 1086<i32>
l2306B0AC:
	a5_674 = a3_661 | CONVERT((a1_662 | a5_356) != 0<32>, bool, word32)
	a0_675 = 0<i32>
l2306B02C:
	word32 a6_676 = a6_192 + 1054<i32>
	a5_674 = s0_309 << a6_676 | a5_356 >>u a0_622 | CONVERT(a5_356 << a6_676 != 0<32>, bool, word32)
	a0_675 = s0_309 >>u a0_622
l2306B04C:
	branch (a5_674 & 7<i32>) == 0<32> l2306B0D0
l2306B054:
	word32 a3_696
	s1_149 = s1_149 | 1<i32>
	branch s2_33 == 2<i32> l2306B0CC
l2306B0CC:
	branch a2_182 != 0<32> l2306B0C4
l2306B060:
	branch s2_33 == 3<i32> l2306B0C0
l2306B0C0:
	branch a2_182 != 0<32> l2306B0D0
l2306B0C4:
	a3_696 = a5_674 + 8<i32>
l2306B068:
	branch s2_33 != 0<32> l2306B0D0
l2306B06C:
	branch (a5_674 & 15<i32>) == 4<i32> l2306B0D0
l2306B078:
	a3_696 = a5_674 + 4<i32>
l2306B07C:
	a0_675 = a0_675 + CONVERT(a3_696 <u a5_674, bool, word32)
	a5_674 = a3_696
l2306B0D0:
	branch a0_675 << 8<u32> >= 0<32> l2306B0F0
l2306B0F0:
	a5_629 = a0_675 << 0x1D<u32> | a5_674 >>u 3<u32>
	a0_655 = a0_675 >>u 3<u32>
	branch a4_507 == 0<32> l2306AF04
l2306B104:
	a4_507 = s1_149 & 1<i32>
	branch a4_507 == 0<32> l2306AF04
l2306B10C:
	a4_507 = 0<i32>
l2306B0D8:
	s1_149 = s1_149 | 1<i32>
	a0_655 = 0<i32>
	a5_629 = 0<i32>
	branch a4_507 != 0<32> l2306B110
l2306B110:
	s1_149 = s1_149 | 2<i32>
l2306B0E8:
	a4_507 = 1<i32>
l2306AE10:
	branch (a5_356 & 7<i32>) == 0<32> l2306AED0
l2306AE18:
	word32 a4_737
	s1_149 = s1_149 | 1<i32>
	branch s2_33 == 2<i32> l2306AECC
l2306AECC:
	branch a2_182 != 0<32> l2306AEC4
l2306AE24:
	branch s2_33 == 3<i32> l2306AEC0
l2306AEC0:
	branch a2_182 != 0<32> l2306AED0
l2306AEC4:
	a4_737 = a5_356 + 8<i32>
l2306AE2C:
	branch s2_33 != 0<32> l2306AED0
l2306AE30:
	branch (a5_356 & 15<i32>) == 4<i32> l2306AED0
l2306AE3C:
	a4_737 = a5_356 + 4<i32>
l2306AE40:
	s0_309 = s0_309 + CONVERT(a4_737 <u a5_356, bool, word32)
	a5_356 = a4_737
l2306AED0:
	branch s0_309 << 7<u32> >= 0<32> l2306AEE8
l2306AED8:
	s0_309 = s0_309 & 0xFEFFFFFF<32>
	a1_506 = a6_192 + 1024<i32>
l2306AEE8:
	branch a1_506 > 2046<i32> l2306AF64
l2306AF64:
	branch s2_33 == 2<i32> l2306AF9C
l2306AF9C:
	branch a2_182 != 0<32> l2306AF90
l2306AFA0:
l2306AF6C:
	branch s2_33 == 3<i32> l2306AF8C
l2306AF8C:
	branch a2_182 != 0<32> l2306AF78
l2306AF74:
	branch s2_33 == 0<32> l2306AF90
l2306AF90:
	a5_629 = 0<i32>
	a4_507 = 2047<i32>
l2306AF78:
	a5_629 = -1<i32>
	a4_507 = 2046<i32>
l2306AF80:
	s1_149 = s1_149 | 5<i32>
	a0_655 = a5_629
l2306AEF0:
	a5_629 = s0_309 << 0x1D<u32> | a5_356 >>u 3<u32>
	a0_655 = s0_309 >>u 3<u32>
	a4_507 = a1_506
l2306AF04:
	word32 a1_821 = CONVERT(SLICE(a0_655, word20, 0), word20, word32) | (a4_507 & 2047<i32>) << 0x14<u32> | a2_182 << 0x1F<u32>
	branch s1_149 == 0<32> l2306AF30
l2306AF2C:
	__csrrs(fflags, ra)
l2306AF30:
	s0Out = s0
	s1Out = s1
	a0Out = a5_629
	a1Out = a1_821
	s2Out = s2
	s3Out = s3
	fflagsOut = fflags
	frmOut = frm
	return ra
l2306AA64:
	word32 a3_1043 = Mem25[(a3_166 + -1<i32> << 2<u32>) + 0x23082438<p32>:int32] + 0x23082438<p32>
	word32 s0_1057
	word32 ra_1060
	word32 s1_1061
	word32 s2_1062
	word32 s3_1063
	word32 a0_1068
	word32 frm_1071
	word32 a1_1073
	word32 fflags_1084
	call a3_1043 (retsize: 0;)
		uses: a0:a0_190,a1:0x23082438<p32>,a2:a2_182,a3:a3_1043,fflags:fflags,frm:frm,ra:ra,s0:s0_193,s1:s1_531,s2:s2_33,s3:s3_205,s4:a1 >>u 0x1F<u32>,s5:a3 >>u 0x1F<u32>,s6:s6_184,s7:s7_197,s8:s8_159,s9:a2
		defs: a0:a0_1068,a1:a1_1073,fflags:fflags_1084,frm:frm_1071,ra:ra_1060,s0:s0_1057,s1:s1_1061,s2:s2_1062,s3:s3_1063
	s0Out = s0_1057
	s1Out = s1_1061
	a0Out = a0_1068
	a1Out = a1_1073
	s2Out = s2_1062
	s3Out = s3_1063
	fflagsOut = fflags_1084
	frmOut = frm_1071
	return ra_1060
__divdf3_exit:


word32 __eqdf2(word32 a0, word32 a1, word32 a2, word32 a3, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecvtbuf
//      flt
//      print_number
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31]
// LiveOut: a0 a1 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4
// Preserved: sp
__eqdf2_entry:
l2306B1A4:
	__csrrs(frm, fp)
	word32 a4_11 = a1 >>u 0x14<u32> & 2047<i32>
	word32 a7_20 = a3 >>u 0x14<u32> & 2047<i32>
	branch a4_11 != 2047<i32> l2306B1F0
l2306B1F0:
	branch a7_20 != 2047<i32> l2306B1FC
l2306B1E0:
	branch (a1 & 0xFFFFF<32> | a0) != 0<32> l2306B240
l2306B1E8:
	branch a7_20 != a4_11 l2306B264
l2306B1EC:
l2306B1F4:
	branch (a3 & 0xFFFFF<32> | a2) != 0<32> l2306B230
l2306B230:
	branch a4_11 != 2047<i32> l2306B25C
l2306B238:
	branch (a1 & 0xFFFFF<32> | a0) == 0<32> l2306B25C
l2306B240:
	a4_11 = (a1 & 0xFFFFF<32>) << 0xC<u32>
	branch a4_11 >= 0<32> l2306B220
l2306B248:
	a4_11 = 2047<i32>
	branch a7_20 != 2047<i32> l2306B268
l2306B254:
	branch (a3 & 0xFFFFF<32> | a2) == 0<32> l2306B268
l2306B25C:
	a4_11 = (a3 & 0xFFFFF<32>) << 0xC<u32>
	branch a4_11 >= 0<32> l2306B220
l2306B220:
	__csrrs(fflags, 0x10<32>)
l2306B264:
l2306B1FC:
	branch a4_11 != a7_20 l2306B268
l2306B204:
	branch (a1 & 0xFFFFF<32>) != (a3 & 0xFFFFF<32>) l2306B268
l2306B208:
	branch a2 != a0 l2306B268
l2306B20C:
	branch a1 >>u 0x1F<u32> == a3 >>u 0x1F<u32> l2306B228
l2306B228:
	a1Out = <invalid>
	a4Out = a4_11
	a5Out = <invalid>
	return 0<i32>
l2306B210:
	branch a4_11 != 0<32> l2306B268
l2306B268:
	a1Out = <invalid>
	a4Out = a4_11
	a5Out = <invalid>
	return 1<i32>
l2306B214:
	a1Out = <invalid>
	a4Out = a4_11
	a5Out = <invalid>
	return CONVERT((a1 & 0xFFFFF<32> | a2) != 0<32>, bool, word32)
__eqdf2_exit:


word32 __gedf2(word32 a0, word32 a1, word32 a2, word32 a3, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecvtbuf
//      print_number
//      floor
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31]
// LiveOut: a0 a1 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4
// Preserved: sp
__gedf2_entry:
l2306B26C:
	word32 a0_33
	__csrrs(frm, fp)
	word32 a6_11 = a1 >>u 0x14<u32> & 2047<i32>
	word32 a1_17 = a1 >>u 0x1F<u32>
	word32 a4_20 = a3 >>u 0x14<u32> & 2047<i32>
	branch a6_11 != 2047<i32> l2306B2BC
l2306B2BC:
	branch a4_20 != 2047<i32> l2306B2C8
l2306B2A8:
	branch (a1 & 0xFFFFF<32> | a0) == 0<32> l2306B348
l2306B348:
	branch a4_20 == a6_11 l2306B2C0
l2306B2C0:
	branch (a3 & 0xFFFFF<32> | a2) != 0<32> l2306B2B0
l2306B2C8:
	branch a6_11 != 0<32> l2306B34C
l2306B2CC:
	a0_33 = CONVERT((a1 & 0xFFFFF<32> | a0) <u 1<i32>, bool, word32)
	branch a4_20 != 0<32> l2306B2E0
l2306B34C:
	branch a4_20 != 0<32> l2306B2E4
l2306B350:
	a0_33 = 0<i32>
l2306B2D8:
	branch (a3 & 0xFFFFF<32> | a2) == 0<32> l2306B338
l2306B338:
	branch a0_33 != 0<32> l2306B328
l2306B33C:
l2306B2E0:
	branch a0_33 != 0<32> l2306B2F8
l2306B2F8:
	a1_17 = -1<i32>
	branch a3 >>u 0x1F<u32> == 0<32> l2306B304
l2306B300:
	a1_17 = a3 >>u 0x1F<u32>
l2306B2E4:
	branch a1 >>u 0x1F<u32> != a3 >>u 0x1F<u32> l2306B2EC
l2306B2E8:
	branch a4_20 >= a6_11 l2306B30C
l2306B30C:
	branch a6_11 >= a4_20 l2306B318
l2306B318:
	branch (a3 & 0xFFFFF<32>) <u (a1 & 0xFFFFF<32>) l2306B2EC
l2306B31C:
	branch (a1 & 0xFFFFF<32>) != (a3 & 0xFFFFF<32>) l2306B340
l2306B340:
	branch (a1 & 0xFFFFF<32>) <u (a3 & 0xFFFFF<32>) l2306B310
l2306B344:
l2306B320:
	branch a2 <u a0 l2306B2EC
l2306B324:
	branch a0 <u a2 l2306B310
l2306B328:
	a1_17 = 0<i32>
l2306B310:
	branch a1 >>u 0x1F<u32> != 0<32> l2306B304
l2306B314:
l2306B2EC:
	branch a1 >>u 0x1F<u32> == 0<32> l2306B330
l2306B330:
	a1_17 = 1<i32>
l2306B2F0:
	a1_17 = -1<i32>
l2306B2B0:
	__csrrs(fflags, 0x10<32>)
	a1_17 = -2<i32>
l2306B304:
	a1Out = a1_17
	a4Out = a4_20
	a5Out = a3 & 0xFFFFF<32>
	return a1_17
__gedf2_exit:


word32 __ledf2(word32 a0, word32 a1, word32 a2, word32 a3, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecvtbuf
//      flt
//      print_number
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31]
// LiveOut: a0 a1 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4
// Preserved: sp
__ledf2_entry:
l2306B358:
	word32 a0_33
	__csrrs(frm, fp)
	word32 a6_11 = a1 >>u 0x14<u32> & 2047<i32>
	word32 a1_17 = a1 >>u 0x1F<u32>
	word32 a4_20 = a3 >>u 0x14<u32> & 2047<i32>
	branch a6_11 != 2047<i32> l2306B3A8
l2306B3A8:
	branch a4_20 != 2047<i32> l2306B3B4
l2306B394:
	branch (a1 & 0xFFFFF<32> | a0) == 0<32> l2306B434
l2306B434:
	branch a4_20 == a6_11 l2306B3AC
l2306B3AC:
	branch (a3 & 0xFFFFF<32> | a2) != 0<32> l2306B39C
l2306B3B4:
	branch a6_11 != 0<32> l2306B438
l2306B3B8:
	a0_33 = CONVERT((a1 & 0xFFFFF<32> | a0) <u 1<i32>, bool, word32)
	branch a4_20 != 0<32> l2306B3CC
l2306B438:
	branch a4_20 != 0<32> l2306B3D0
l2306B43C:
	a0_33 = 0<i32>
l2306B3C4:
	branch (a3 & 0xFFFFF<32> | a2) == 0<32> l2306B424
l2306B424:
	branch a0_33 != 0<32> l2306B414
l2306B428:
l2306B3CC:
	branch a0_33 != 0<32> l2306B3E4
l2306B3E4:
	a1_17 = -1<i32>
	branch a3 >>u 0x1F<u32> == 0<32> l2306B3F0
l2306B3EC:
	a1_17 = a3 >>u 0x1F<u32>
l2306B3D0:
	branch a1 >>u 0x1F<u32> != a3 >>u 0x1F<u32> l2306B3D8
l2306B3D4:
	branch a4_20 >= a6_11 l2306B3F8
l2306B3F8:
	branch a6_11 >= a4_20 l2306B404
l2306B404:
	branch (a3 & 0xFFFFF<32>) <u (a1 & 0xFFFFF<32>) l2306B3D8
l2306B408:
	branch (a1 & 0xFFFFF<32>) != (a3 & 0xFFFFF<32>) l2306B42C
l2306B42C:
	branch (a1 & 0xFFFFF<32>) <u (a3 & 0xFFFFF<32>) l2306B3FC
l2306B430:
l2306B40C:
	branch a2 <u a0 l2306B3D8
l2306B410:
	branch a0 <u a2 l2306B3FC
l2306B414:
	a1_17 = 0<i32>
l2306B3FC:
	branch a1 >>u 0x1F<u32> != 0<32> l2306B3F0
l2306B400:
l2306B3D8:
	branch a1 >>u 0x1F<u32> == 0<32> l2306B41C
l2306B41C:
	a1_17 = 1<i32>
l2306B3DC:
	a1_17 = -1<i32>
l2306B39C:
	__csrrs(fflags, 0x10<32>)
	a1_17 = 2<i32>
l2306B3F0:
	a1Out = a1_17
	a4Out = a4_20
	a5Out = a3 & 0xFFFFF<32>
	return a1_17
__ledf2_exit:


word32 __muldf3(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 fflags, word32 frm, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecvtbuf
//      tcpip_stack_input
//      ADC_Parse_Result
//      pa_input
//      pa_adapt
//      rf_pri_rccal_iq
//      phyif_utils_decode
//      rf_set_channel
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 a4 a5 a7 fflags frm ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
__muldf3_entry:
l2306B444:
	word32 s1_149
	word32 s4_197
	word32 s7_168
	word32 s8_159
	word32 s2_33 = __csrrs(frm, fp + -48<i32>)
	word32 s7_37 = a1 >>u 0x14<u32> & 2047<i32>
	word32 s3_253 = CONVERT(SLICE(a1, word20, 0), word20, word32)
	branch s7_37 == 0<32> l2306B4CC
l2306B4CC:
	branch (s3_253 | a0) == 0<32> l2306B5D0
l2306B5D0:
	s3_253 = 0<i32>
	s4_197 = 0<i32>
	s7_168 = 0<i32>
	s8_159 = 1<i32>
l2306B4D4:
	word32 a0_48
	branch s3_253 == 0<32> l2306B514
l2306B514:
	word32 a4_1542
	a0_48 = __clzsi2(a0, out a4_1542) + 32<i32>
l2306B4D8:
	word32 a4_1543
	a0_48 = __clzsi2(s3_253, out a4_1543)
l2306B4E0:
	word32 a4_54 = a0_48 + -11<i32>
	branch a4_54 > 28<i32> l2306B520
l2306B520:
	s3_253 = a0 << a0_48 + -40<i32>
	s4_197 = 0<i32>
l2306B4EC:
	word32 s4_61 = a0_48 + -8<i32>
	s3_253 = a0 >>u 29<i32> - a4_54 | s3_253 << s4_61
	s4_197 = a0 << s4_61
l2306B508:
	s7_168 = -1011<i32> - a0_48
l2306B49C:
	branch s7_37 == 2047<i32> l2306B530
l2306B530:
	branch (s3_253 | a0) == 0<32> l2306B5E4
l2306B5E4:
	s3_253 = 0<i32>
	s4_197 = 0<i32>
	s7_168 = 2047<i32>
	s8_159 = 2<i32>
l2306B538:
	s4_197 = a0
	s7_168 = 2047<i32>
	s8_159 = 3<i32>
	s1_149 = 16<i32>
	branch s3_253 << 0xC<u32> < 0<32> l2306B4C4
l2306B4A4:
	s3_253 = a0 >>u 0x1D<u32> | s3_253 << 3<u32> | 0x800000<32>
	s4_197 = a0 << 3<u32>
	s7_168 = s7_37 + -1023<i32>
l2306B4C0:
	s8_159 = 0<i32>
l2306B4C4:
	s1_149 = 0<i32>
l2306B550:
	word32 a0_110
	word32 a4_111
	word32 a0_98 = a3 >>u 0x14<u32> & 2047<i32>
	word32 a5_104 = a2
	word32 s0_105 = CONVERT(SLICE(a3, word20, 0), word20, word32)
	branch a0_98 == 0<32> l2306B5F8
l2306B5F8:
	branch (s0_105 | a2) == 0<32> l2306B680
l2306B680:
	s0_105 = 0<i32>
	a5_104 = 0<i32>
	a0_110 = 0<i32>
	a4_111 = 1<i32>
l2306B600:
	word32 a0_116
	branch s0_105 == 0<32> l2306B640
l2306B640:
	word32 a4_1544
	a0_116 = __clzsi2(a2, out a4_1544) + 32<i32>
l2306B604:
	word32 a4_1545
	a0_116 = __clzsi2(s0_105, out a4_1545)
l2306B60C:
	word32 a3_122 = a0_116 + -11<i32>
	branch a3_122 > 28<i32> l2306B650
l2306B650:
	s0_105 = a2 << a0_116 + -40<i32>
	a5_104 = 0<i32>
l2306B618:
	word32 a5_129 = a0_116 + -8<i32>
	s0_105 = a2 >>u 29<i32> - a3_122 | s0_105 << a5_129
	a5_104 = a2 << a5_129
l2306B634:
	a0_110 = -1011<i32> - a0_116
l2306B56C:
	branch a0_98 == 2047<i32> l2306B660
l2306B660:
	branch (s0_105 | a2) == 0<32> l2306B694
l2306B694:
	s0_105 = 0<i32>
	a5_104 = 0<i32>
	a0_110 = 2047<i32>
	a4_111 = 2<i32>
l2306B668:
	a0_110 = 2047<i32>
	branch s0_105 << 0xC<u32> < 0<32> l2306B6A8
l2306B6A8:
	a4_111 = 3<i32>
l2306B674:
	a4_111 = 3<i32>
	s1_149 = 16<i32>
l2306B574:
	s0_105 = a2 >>u 0x1D<u32> | s0_105 << 3<u32> | 0x800000<32>
	a0_110 = a0_98 + -1023<i32>
	a5_104 = a2 << 3<u32>
l2306B590:
	a4_111 = 0<i32>
l2306B594:
	word32 a0_176 = s7_168 + a0_110
	word32 a3_166 = s8_159 << 2<u32> | a4_111
	word32 a6_192 = a1 >>u 0x1F<u32> ^ a3 >>u 0x1F<u32>
	word32 a7_1300 = a0_176 + 1<i32>
	branch a3_166 >u -15<i32> l2306B724
l2306B724:
	word32 t5_210 = a5_104 & 0xFFFF<32>
	word32 a4_204 = s4_197 >>u 0x10<u32>
	word32 s4_209 = s4_197 & 0xFFFF<32>
	word32 a3_208 = a5_104 >>u 0x10<u32>
	word32 t4_213 = a4_204 + t5_210
	word32 a5_212 = t5_210 + s4_209
	word32 a2_216 = (a5_212 >>u 0x10<u32>) + ((a3_208 + s4_209) + t4_213)
	word32 t3_217 = a4_204 + a3_208
	branch a2_216 >=u t4_213 l2306B760
l2306B75C:
	t3_217 = t3_217 + 0x10000<32>
l2306B760:
	word32 t6_230 = s0_105 & 0xFFFF<32>
	word32 t4_229 = s0_105 >>u 0x10<u32>
	word32 a5_236 = a4_204 + t6_230
	word32 a1_234 = s4_209 + t6_230
	word32 a2_232 = ((a2_216 & 0xFFFF<32>) << 0x10<u32>) + (a5_212 & 0xFFFF<32>)
	word32 s4_240 = (a1_234 >>u 0x10<u32>) + ((t4_229 + s4_209) + a5_236)
	word32 a4_241 = a4_204 + t4_229
	branch s4_240 >=u a5_236 l2306B7A4
l2306B79C:
	a4_241 = a4_241 + 0x10000<32>
l2306B7A4:
	word32 s0_260 = s3_253 >>u 0x10<u32>
	word32 s3_261 = s3_253 & 0xFFFF<32>
	word32 s4_269 = ((s4_240 & 0xFFFF<32>) << 0x10<u32>) + (a1_234 & 0xFFFF<32>)
	word32 a4_272 = s0_260 + t5_210
	word32 t2_267 = t5_210 + s3_261
	word32 t1_248 = (s4_240 >>u 0x10<u32>) + a4_241
	word32 t0_271 = (a2_216 >>u 0x10<u32>) + s4_269
	word32 t5_275 = a3_208 + s0_260
	word32 a3_279 = (t2_267 >>u 0x10<u32>) + ((a3_208 + s3_261) + a4_272)
	branch a3_279 >=u a4_272 l2306B7F4
l2306B7F0:
	t5_275 = t5_275 + 0x10000<32>
l2306B7F4:
	word32 a5_294 = s0_260 + t6_230
	word32 t2_297 = s3_261 + t6_230
	word32 t5_285 = (a3_279 >>u 0x10<u32>) + t5_275
	word32 a3_295 = ((a3_279 & 0xFFFF<32>) << 0x10<u32>) + (t2_267 & 0xFFFF<32>)
	word32 a1_301 = t4_229 + s0_260
	word32 s3_304 = (t2_297 >>u 0x10<u32>) + ((t4_229 + s3_261) + a5_294)
	branch s3_304 >=u a5_294 l2306B838
l2306B834:
	a1_301 = a1_301 + 0x10000<32>
l2306B838:
	word32 t3_319 = t3_217 + t0_271
	word32 s4_323 = CONVERT(t3_319 <u s4_269, bool, word32)
	word32 a4_326 = ((s3_304 & 0xFFFF<32>) << 0x10<u32>) + (t2_297 & 0xFFFF<32>) + t1_248
	word32 t3_329 = t3_319 + a3_295
	word32 s0_327 = a4_326 + s4_323
	word32 a3_330 = CONVERT(t3_329 <u a3_295, bool, word32)
	word32 t4_332 = s0_327 + t5_285
	word32 t6_333 = t4_332 + a3_330
	word32 s0_347 = (CONVERT(a4_326 <u t1_248, bool, word32) | CONVERT(s0_327 <u s4_323, bool, word32)) + (s3_304 >>u 0x10<u32>) + (CONVERT(t4_332 <u t5_285, bool, word32) | CONVERT(t6_333 <u a3_330, bool, word32)) + a1_301 << 9<u32> | t6_333 >>u 0x17<u32>
	word32 a5_358 = CONVERT((t3_329 << 9<u32> | a2_232) != 0<32>, bool, word32) | t3_329 >>u 0x17<u32> | t6_333 << 9<u32>
	branch s0_347 << 7<u32> >= 0<32> l2306B964
l2306B964:
	a7_1300 = a0_176
l2306B8C8:
	a5_358 = a5_358 >>u 1<u32> | a5_358 & 1<i32> | s0_347 << 0x1F<u32>
	s0_347 = s0_347 >>u 1<u32>
l2306B8E0:
	word32 a5_442
	word32 a4_376
	word32 s0_468
	word32 a1_375 = a7_1300 + 1023<i32>
	branch a1_375 <= 0<32> l2306B9F4
l2306B9F4:
	a4_376 = 1<i32>
	branch a1_375 != 0<32> l2306BA64
l2306B9FC:
	word32 a4_380 = s0_347
	branch (a5_358 & 7<i32>) == 0<32> l2306BA58
l2306BA08:
	word32 a4_416
	s1_149 = s1_149 | 1<i32>
	branch s2_33 == 2<i32> l2306BA50
l2306BA50:
	a4_380 = s0_347
	branch a6_192 != 0<32> l2306BA48
l2306BA14:
	branch s2_33 == 3<i32> l2306BA40
l2306BA40:
	a4_380 = s0_347
	branch a6_192 != 0<32> l2306BA58
l2306BA48:
	a4_416 = CONVERT(a5_358 <u -8<i32>, bool, word32)
l2306BA1C:
	a4_380 = s0_347
	branch s2_33 != 0<32> l2306BA58
l2306BA24:
	branch (a5_358 & 15<i32>) == 4<i32> l2306BA58
l2306BA30:
	a4_416 = CONVERT(a5_358 <u -4<i32>, bool, word32)
l2306BA34:
	a4_380 = (a4_416 ^ 1<i32>) + s0_347
l2306BA58:
	a4_376 = (a4_380 >>u 0x18<u32> ^ 1<i32>) & 1<i32>
l2306BA64:
	word32 a3_435 = 1<i32> - a1_375
	branch a3_435 > 56<i32> l2306BB68
l2306BB68:
	a5_442 = a5_358 | s0_347
	branch a5_442 == 0<32> l2306BBA0
l2306BB70:
	word32 a5_453
	s1_149 = s1_149 | 1<i32>
	branch s2_33 == 2<i32> l2306BBB0
l2306BBB0:
	a5_453 = 9<i32>
	branch a6_192 != 0<32> l2306BB9C
l2306BBB8:
l2306BB7C:
	branch s2_33 == 3<i32> l2306BB94
l2306BB94:
	a5_453 = 9<i32>
	branch a6_192 != 0<32> l2306BB8C
l2306BB84:
	a5_453 = 5<i32>
	branch s2_33 == 0<32> l2306BB9C
l2306BB8C:
	a5_453 = 1<i32>
l2306BB9C:
	a5_442 = a5_453 >>u 3<u32>
l2306BBA0:
	s1_149 = s1_149 | 2<i32>
	s0_468 = 0<i32>
	a4_376 = 0<i32>
l2306BA74:
	word32 a5_487
	word32 s0_488
	branch a3_435 > 31<i32> l2306BADC
l2306BADC:
	word32 a2_474 = s0_347 >>u -31<i32> - a1_375
	word32 a1_475 = 0<i32>
	branch a3_435 == 32<i32> l2306BAFC
l2306BAF4:
	a7_1300 = a7_1300 + 1086<i32>
	a1_475 = s0_347 << a7_1300
l2306BAFC:
	a5_487 = a2_474 | CONVERT((a1_475 | a5_358) != 0<32>, bool, word32)
	s0_488 = 0<i32>
l2306BA7C:
	a7_1300 = a7_1300 + 1054<i32>
	a5_487 = s0_347 << a7_1300 | a5_358 >>u a3_435 | CONVERT(a5_358 << a7_1300 != 0<32>, bool, word32)
	s0_488 = s0_347 >>u a3_435
l2306BA9C:
	branch (a5_487 & 7<i32>) == 0<32> l2306BB20
l2306BAA4:
	word32 a3_509
	s1_149 = s1_149 | 1<i32>
	branch s2_33 == 2<i32> l2306BB1C
l2306BB1C:
	branch a6_192 != 0<32> l2306BB14
l2306BAB0:
	branch s2_33 == 3<i32> l2306BB10
l2306BB10:
	branch a6_192 != 0<32> l2306BB20
l2306BB14:
	a3_509 = a5_487 + 8<i32>
l2306BAB8:
	branch s2_33 != 0<32> l2306BB20
l2306BABC:
	branch (a5_487 & 15<i32>) == 4<i32> l2306BB20
l2306BAC8:
	a3_509 = a5_487 + 4<i32>
l2306BACC:
	s0_488 = s0_488 + CONVERT(a3_509 <u a5_487, bool, word32)
	a5_487 = a3_509
l2306BB20:
	branch s0_488 << 8<u32> >= 0<32> l2306BB40
l2306BB40:
	a5_442 = s0_488 << 0x1D<u32> | a5_487 >>u 3<u32>
	s0_468 = s0_488 >>u 3<u32>
	branch a4_376 == 0<32> l2306B6C4
l2306BB54:
	a4_376 = s1_149 & 1<i32>
	branch a4_376 == 0<32> l2306B6C4
l2306BB5C:
	a4_376 = 0<i32>
l2306BB28:
	s1_149 = s1_149 | 1<i32>
	s0_468 = 0<i32>
	a5_442 = 0<i32>
	branch a4_376 != 0<32> l2306BB60
l2306BB60:
	s1_149 = s1_149 | 2<i32>
l2306BB38:
	a4_376 = 1<i32>
l2306B8E8:
	branch (a5_358 & 7<i32>) == 0<32> l2306B97C
l2306B8F0:
	word32 a4_550
	s1_149 = s1_149 | 1<i32>
	branch s2_33 == 2<i32> l2306B978
l2306B978:
	branch a6_192 != 0<32> l2306B970
l2306B8FC:
	branch s2_33 == 3<i32> l2306B96C
l2306B96C:
	branch a6_192 != 0<32> l2306B97C
l2306B970:
	a4_550 = a5_358 + 8<i32>
l2306B904:
	branch s2_33 != 0<32> l2306B97C
l2306B908:
	branch (a5_358 & 15<i32>) == 4<i32> l2306B97C
l2306B914:
	a4_550 = a5_358 + 4<i32>
l2306B918:
	s0_347 = s0_347 + CONVERT(a4_550 <u a5_358, bool, word32)
	a5_358 = a4_550
l2306B97C:
	branch s0_347 << 7<u32> >= 0<32> l2306B994
l2306B984:
	s0_347 = s0_347 & 0xFEFFFFFF<32>
	a1_375 = a7_1300 + 1024<i32>
l2306B994:
	branch a1_375 > 2046<i32> l2306B9B4
l2306B9B4:
	branch s2_33 == 2<i32> l2306B9EC
l2306B9EC:
	branch a6_192 != 0<32> l2306B9E0
l2306B9F0:
l2306B9BC:
	branch s2_33 == 3<i32> l2306B9DC
l2306B9DC:
	branch a6_192 != 0<32> l2306B9C8
l2306B9C4:
	branch s2_33 == 0<32> l2306B9E0
l2306B9E0:
	a5_442 = 0<i32>
	a4_376 = 2047<i32>
l2306B9C8:
	a5_442 = -1<i32>
	a4_376 = 2046<i32>
l2306B9D0:
	s1_149 = s1_149 | 5<i32>
	s0_468 = a5_442
l2306B99C:
	a5_442 = s0_347 << 0x1D<u32> | a5_358 >>u 3<u32>
	s0_468 = s0_347 >>u 3<u32>
	a4_376 = a1_375
l2306B6C4:
	word32 a4_629 = CONVERT(SLICE(s0_468, word20, 0), word20, word32) | (a4_376 & 2047<i32>) << 0x14<u32> | a6_192 << 0x1F<u32>
	branch s1_149 == 0<32> l2306B6F0
l2306B6EC:
	__csrrs(fflags, ra)
l2306B6F0:
	s0Out = s0
	s1Out = s1
	a0Out = a5_442
	a1Out = a4_629
	a4Out = a4_629
	a5Out = a5_442
	a7Out = a7_1300
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	fflagsOut = fflags
	frmOut = frm
	return ra
l2306B5B4:
	word32 a3_796 = Mem25[(a3_166 + -1<i32> << 2<u32>) + 0x23082474<p32>:int32] + 0x23082474<p32>
	word32 s0_819
	word32 s6_820
	word32 s9_821
	word32 ra_822
	word32 s1_823
	word32 s2_824
	word32 s3_825
	word32 s4_826
	word32 s5_827
	word32 s7_828
	word32 s8_829
	word32 a0_830
	word32 frm_833
	word32 a1_834
	word32 a5_835
	word32 a4_836
	word32 a7_838
	word32 fflags_846
	call a3_796 (retsize: 0;)
		uses: a0:a0_176,a1:a1,a2:0x23082474<p32>,a3:a3_796,fflags:fflags,frm:frm,ra:ra,s0:s0_226,s1:s1_387,s2:s2_33,s3:s3_253,s4:s4_197,s5:a1 >>u 0x1F<u32>,s6:a3 >>u 0x1F<u32>,s7:s7_168,s8:s8_159,s9:a2
		defs: a0:a0_830,a1:a1_834,a4:a4_836,a5:a5_835,a7:a7_838,fflags:fflags_846,frm:frm_833,ra:ra_822,s0:s0_819,s1:s1_823,s2:s2_824,s3:s3_825,s4:s4_826,s5:s5_827,s6:s6_820,s7:s7_828,s8:s8_829,s9:s9_821
	s0Out = s0_819
	s1Out = s1_823
	a0Out = a0_830
	a1Out = a1_834
	a4Out = a4_836
	a5Out = a5_835
	a7Out = a7_838
	s2Out = s2_824
	s3Out = s3_825
	s4Out = s4_826
	s5Out = s5_827
	s6Out = s6_820
	s7Out = s7_828
	s8Out = s8_829
	s9Out = s9_821
	fflagsOut = fflags_846
	frmOut = frm_833
	return ra_822
__muldf3_exit:


word32 __subdf3(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 fflags, word32 frm, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_number
//      modf
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: ra s0 s1 s2 s3 s4 sp
__subdf3_entry:
l2306BBE0:
	word32 s3_17 = __csrrs(frm, fp + -32<i32>)
	word32 a5_136 = a2 >>u 0x1D<u32> | (a3 & 0xFFFFF<32>) << 3<u32>
	word32 a6_210 = a3 >>u 0x14<u32> & 2047<i32>
	word32 s1_291 = a1 >>u 0x14<u32> & 2047<i32>
	word32 s2_104 = a1 >>u 0x1F<u32>
	word32 t3_111 = a0 >>u 0x1D<u32> | (a1 & 0xFFFFF<32>) << 3<u32>
	word32 a7_100 = a0 << 3<u32>
	word32 a3_39 = a3 >>u 0x1F<u32>
	word32 t1_193 = a2 << 3<u32>
	branch a6_210 != 2047<i32> l2306BC58
l2306BC50:
	branch (a5_136 | a2 << 3<u32>) != 0<32> l2306BC5C
l2306BC58:
	a3_39 = a3 >>u 0x1F<u32> ^ 1<i32>
l2306BC5C:
	word32 a4_130 = s1_291 - a6_210
	branch a3_39 != a1 >>u 0x1F<u32> l2306C07C
l2306C07C:
	word32 s4_289
	word32 s0_286
	branch a4_130 <= 0<32> l2306C174
l2306C174:
	branch a4_130 == 0<32> l2306C2B8
l2306C2B8:
	branch (s1_291 + 1<i32> & 2046<i32>) != 0<32> l2306C4B0
l2306C4B0:
	s4_289 = (a0 << 3<u32>) - (a2 << 3<u32>)
	s0_286 = t3_111 - a5_136 - CONVERT(a0 << 3<u32> <u s4_289, bool, word32)
	branch s0_286 << 8<u32> >= 0<32> l2306C548
l2306C548:
	a7_100 = s4_289 | s0_286
	branch a7_100 != 0<32> l2306C4DC
l2306C550:
l2306C4C8:
	s4_289 = (a2 << 3<u32>) - (a0 << 3<u32>)
	s0_286 = a5_136 - t3_111 - CONVERT(a2 << 3<u32> <u s4_289, bool, word32)
	s2_104 = a3_39
l2306C2C4:
	word32 a1_73 = t3_111 | a0 << 3<u32>
	word32 a2_74 = a5_136 | a2 << 3<u32>
	branch s1_291 != 0<32> l2306C3A0
l2306C3A0:
	branch s1_291 != 2047<i32> l2306C3D4
l2306C3D4:
	s1_291 = 0<i32>
	branch a6_210 == 2047<i32> l2306C3C0
l2306C3A8:
	branch a1_73 == 0<32> l2306C6F4
l2306C6F4:
	branch a6_210 == s1_291 l2306C3F8
l2306C3F8:
	s1_291 = 0<i32>
l2306C6F8:
	s1_291 = 0<i32>
l2306C3AC:
	s1_291 = CONVERT((t3_111 & 0x400000<32>) <u 1<i32>, bool, word32) << 4<u32>
	branch a6_210 != 2047<i32> l2306C400
l2306C3C0:
	branch a2_74 == 0<32> l2306C3DC
l2306C3C4:
	branch a5_136 << 9<u32> < 0<32> l2306C3DC
l2306C3CC:
	s1_291 = 16<i32>
l2306C3DC:
	branch a1_73 != 0<32> l2306C400
l2306C400:
	branch a2_74 == 0<32> l2306BF9C
l2306C3E0:
	branch a2_74 == 0<32> l2306C678
l2306C678:
	a7_100 = 0<i32>
	s2_104 = 0<i32>
	a5_136 = 0x400000<32>
	a4_130 = 2047<i32>
	s1_291 = 16<i32>
l2306C3E4:
	a7_100 = a2 << 3<u32>
	s2_104 = a3_39
l2306C2D0:
	branch a1_73 != 0<32> l2306C354
l2306C354:
	branch a2_74 == 0<32> l2306C2E8
l2306C358:
	word32 a2_105 = (a0 << 3<u32>) - (a2 << 3<u32>)
	word32 a4_108 = t3_111 - a5_136 - CONVERT(a0 << 3<u32> <u a2_105, bool, word32)
	branch a4_108 << 8<u32> >= 0<32> l2306C388
l2306C388:
	a7_100 = a2_105 | a4_108
	branch a7_100 != 0<32> l2306C5C4
l2306C5C4:
	t3_111 = a4_108
	a7_100 = a2_105
l2306C390:
	s2_104 = CONVERT(s3_17 <u -3<i32>, bool, word32)
l2306C370:
	a7_100 = (a2 << 3<u32>) - (a0 << 3<u32>)
	t3_111 = a5_136 - t3_111 - CONVERT(a2 << 3<u32> <u a7_100, bool, word32)
l2306C2D4:
	branch a2_74 != 0<32> l2306C5B8
l2306C5B8:
	t3_111 = a5_136
	a7_100 = a2 << 3<u32>
l2306C380:
	s2_104 = a3_39
l2306C2D8:
	s2_104 = CONVERT(s3_17 <u -3<i32>, bool, word32)
	t3_111 = 0<i32>
	a7_100 = 0<i32>
l2306C178:
	word32 s0_134
	a4_130 = a6_210 - s1_291
	branch s1_291 != 0<32> l2306C1F0
l2306C1F0:
	branch a6_210 != 2047<i32> l2306C218
l2306C218:
	t3_111 = t3_111 | 0x800000<32>
	s0_134 = a4_130
l2306C1F8:
	a7_100 = a5_136 | a2 << 3<u32>
	branch a7_100 == 0<32> l2306C65C
l2306C65C:
	a5_136 = 0<i32>
	a4_130 = 2047<i32>
	s2_104 = a3_39
l2306C200:
	a7_100 = a2 << 3<u32>
	branch a5_136 << 9<u32> < 0<32> l2306C66C
l2306C66C:
	a4_130 = 2047<i32>
	s2_104 = a3_39
l2306C20C:
	s2_104 = a3_39
l2306C180:
	branch (t3_111 | a0 << 3<u32>) != 0<32> l2306C1A4
l2306C1A4:
	s0_134 = a4_130 + -1<i32>
	branch a4_130 != 0xFFFFFFFF<32> l2306C1C8
l2306C1C8:
	branch a4_130 != 2047<i32> l2306C224
l2306C224:
	word32 s0_168
	word32 a7_153
	branch s0_134 > 56<i32> l2306C2AC
l2306C2AC:
	a7_153 = CONVERT((t3_111 | a0 << 3<u32>) != 0<32>, bool, word32)
l2306C22C:
	branch s0_134 > 31<i32> l2306C278
l2306C278:
	word32 a4_157 = t3_111 >>u s0_134 + -32<i32>
	word32 a0_158 = 0<i32>
	branch s0_134 == 32<i32> l2306C298
l2306C28C:
	a0_158 = t3_111 << 64<i32> - s0_134
l2306C298:
	a7_153 = a4_157 | CONVERT((a0_158 | a0 << 3<u32>) != 0<32>, bool, word32)
l2306C2A4:
	s0_168 = 0<i32>
l2306C234:
	word32 a0_170 = 32<i32> - s0_134
	a7_153 = t3_111 << a0_170 | (a0 << 3<u32>) >>u s0_134 | CONVERT((a0 << 3<u32>) << a0_170 != 0<32>, bool, word32)
	s0_168 = t3_111 >>u s0_134
l2306C258:
	word32 a7_184 = (a2 << 3<u32>) - a7_153
	a5_136 = a5_136 - s0_168 - CONVERT(a2 << 3<u32> <u a7_184, bool, word32)
	t1_193 = a7_184
	a4_130 = a6_210
	s2_104 = a3_39
l2306C1D0:
	a7_100 = a5_136 | a2 << 3<u32>
	branch a7_100 == 0<32> l2306C650
l2306C650:
	a5_136 = 0<i32>
	s2_104 = a3_39
l2306C1D8:
	a7_100 = a2 << 3<u32>
	s2_104 = a3_39
	a6_210 = 0<i32>
	branch a5_136 << 9<u32> < 0<32> l2306BF34
l2306C1EC:
l2306C1AC:
	word32 a7_211 = (a2 << 3<u32>) - (a0 << 3<u32>)
	a5_136 = a5_136 - t3_111 - CONVERT(a2 << 3<u32> <u a7_211, bool, word32)
	s2_104 = a3_39
	t1_193 = a7_211
l2306C188:
	s2_104 = a3_39
	branch a4_130 == 2047<i32> l2306BDD8
l2306C080:
	word32 a3_222
	branch a6_210 != 0<32> l2306C11C
l2306C11C:
	branch s1_291 == 2047<i32> l2306BCD4
l2306C124:
	a5_136 = a5_136 | 0x800000<32>
	a3_222 = a4_130
l2306C084:
	branch (a5_136 | a2 << 3<u32>) == 0<32> l2306BC74
l2306C08C:
	a3_222 = a4_130 + -1<i32>
	branch a4_130 != 0xFFFFFFFF<32> l2306C0AC
l2306C0AC:
	branch a4_130 == 2047<i32> l2306BCB0
l2306C0B4:
	word32 a3_246
	word32 t1_231
	branch a3_222 > 56<i32> l2306C168
l2306C168:
	t1_231 = CONVERT((a5_136 | a2 << 3<u32>) != 0<32>, bool, word32)
l2306C0BC:
	branch a3_222 > 31<i32> l2306C134
l2306C134:
	word32 a4_235 = a5_136 >>u a3_222 + -32<i32>
	word32 a2_236 = 0<i32>
	branch a3_222 == 32<i32> l2306C154
l2306C148:
	a2_236 = a5_136 << 64<i32> - a3_222
l2306C154:
	t1_231 = a4_235 | CONVERT((a2_236 | a2 << 3<u32>) != 0<32>, bool, word32)
l2306C160:
	a3_246 = 0<i32>
l2306C0C4:
	word32 a2_248 = 32<i32> - a3_222
	t1_231 = a5_136 << a2_248 | (a2 << 3<u32>) >>u a3_222 | CONVERT((a2 << 3<u32>) << a2_248 != 0<32>, bool, word32)
	a3_246 = a5_136 >>u a3_222
l2306C0E8:
	t1_193 = (a0 << 3<u32>) - t1_231
	a5_136 = t3_111 - a3_246 - CONVERT(a0 << 3<u32> <u t1_193, bool, word32)
	a4_130 = s1_291
l2306C094:
	t1_193 = (a0 << 3<u32>) - (a2 << 3<u32>)
	a5_136 = t3_111 - a5_136 - CONVERT(a0 << 3<u32> <u t1_193, bool, word32)
l2306C0A4:
	a4_130 = 1<i32>
l2306C0FC:
	branch a5_136 << 8<u32> >= 0<32> l2306C194
l2306C104:
	s0_286 = a5_136 & 0x7FFFFF<32>
	s4_289 = t1_193
	s1_291 = a4_130
l2306C4DC:
	word32 a0_298
	branch s0_286 == 0<32> l2306C554
l2306C554:
	word32 a4_1910
	a0_298 = __clzsi2(s4_289, out a4_1910) + 32<i32>
l2306C4E0:
	word32 a4_1911
	a0_298 = __clzsi2(s0_286, out a4_1911)
l2306C4E8:
	word32 s0_308
	word32 a4_304 = a0_298 + -8<i32>
	branch a4_304 > 31<i32> l2306C564
l2306C564:
	s0_308 = s4_289 << a0_298 + -40<i32>
	t1_193 = 0<i32>
l2306C4F4:
	s0_308 = s4_289 >>u 32<i32> - a4_304 | s0_286 << a4_304
	t1_193 = s4_289 << a4_304
l2306C50C:
	branch a4_304 < s1_291 l2306C5A4
l2306C5A4:
	a4_130 = s1_291 - a4_304
	a5_136 = s0_308 & 0xFF7FFFFF<32>
l2306C510:
	word32 a4_326 = a4_304 - s1_291
	branch a4_326 > -30<i32> l2306C574
l2306C574:
	word32 a4_331 = s0_308 >>u a4_326 + -31<i32>
	word32 a3_332 = 0<i32>
	branch a4_326 == -31<i32> l2306C594
l2306C588:
	a3_332 = s0_308 << 64<i32> - (a4_326 + 1<i32>)
l2306C594:
	a7_100 = a4_331 | CONVERT((t1_193 | a3_332) != 0<32>, bool, word32)
l2306C398:
	t3_111 = 0<i32>
l2306C520:
	word32 a4_345 = 32<i32> - (a4_326 + 1<i32>)
	a7_100 = s0_308 << a4_345 | t1_193 >>u a4_326 + 1<i32> | CONVERT(t1_193 << a4_345 != 0<32>, bool, word32)
	t3_111 = s0_308 >>u a4_326 + 1<i32>
l2306BC64:
	branch a4_130 <= 0<32> l2306BDBC
l2306BDBC:
	branch a4_130 == 0<32> l2306BEE4
l2306BEE4:
	a4_130 = s1_291 + 1<i32>
	branch (s1_291 + 1<i32> & 2046<i32>) != 0<32> l2306BFAC
l2306BFAC:
	branch s1_291 == -2046<i32> l2306BFDC
l2306BFDC:
	branch s3_17 == 0<32> l2306BFEC
l2306BFE0:
	branch s3_17 != 3<i32> l2306BFF4
l2306BFF4:
	branch s3_17 != 2<i32> l2306C000
l2306BFFC:
	branch a1 >>u 0x1F<u32> != 0<32> l2306BFEC
l2306BFE8:
	branch a1 >>u 0x1F<u32> != 0<32> l2306C000
l2306BFEC:
	a4_130 = 2047<i32>
l2306BFB4:
	word32 t1_359 = (a0 << 3<u32>) + (a2 << 3<u32>)
	word32 t3_362 = t3_111 + a5_136 + CONVERT(t1_359 <u a0 << 3<u32>, bool, word32)
	a7_100 = t3_362 << 0x1F<u32> | t1_359 >>u 1<u32>
	a5_136 = t3_362 >>u 1<u32>
l2306BEF0:
	word32 a3_367 = t3_111 | a0 << 3<u32>
	branch s1_291 != 0<32> l2306BF50
l2306BF50:
	branch s1_291 != 2047<i32> l2306BF88
l2306BF88:
	s1_291 = 0<i32>
	branch a6_210 == 2047<i32> l2306BF70
l2306BF58:
	branch a3_367 == 0<32> l2306C70C
l2306C70C:
	branch a6_210 == s1_291 l2306BFA4
l2306BFA4:
	s1_291 = 0<i32>
l2306C710:
	a7_100 = a2 << 3<u32>
l2306BF5C:
	s1_291 = CONVERT((t3_111 & 0x400000<32>) <u 1<i32>, bool, word32) << 4<u32>
	branch a6_210 != 2047<i32> l2306BF94
l2306BF70:
	branch (a5_136 | a2 << 3<u32>) == 0<32> l2306C700
l2306C700:
	branch a3_367 != 0<32> l2306BF9C
l2306BF78:
	branch a5_136 << 9<u32> < 0<32> l2306BF90
l2306BF80:
	s1_291 = 16<i32>
l2306BF90:
	branch a3_367 == 0<32> l2306C704
l2306C704:
	a7_100 = a2 << 3<u32>
l2306BF94:
	branch (a5_136 | a2 << 3<u32>) != 0<32> l2306C404
l2306C404:
	s2_104 = 0<i32>
	a5_136 = 0x400000<32>
	a7_100 = 0<i32>
	a4_130 = 2047<i32>
l2306BF9C:
	a5_136 = t3_111
l2306C3EC:
	a6_210 = 0<i32>
	a4_130 = 2047<i32>
l2306BEF8:
	branch a3_367 == 0<32> l2306C198
l2306BEFC:
	branch (a5_136 | a2 << 3<u32>) == 0<32> l2306C2E8
l2306BF04:
	t1_193 = (a0 << 3<u32>) + (a2 << 3<u32>)
	t3_111 = t3_111 + a5_136 + CONVERT(t1_193 <u a0 << 3<u32>, bool, word32)
	branch t3_111 << 8<u32> >= 0<32> l2306C19C
l2306BF1C:
	a5_136 = t3_111 & 0xFF7FFFFF<32>
	a7_100 = t1_193
	a6_210 = 0<i32>
	a4_130 = 1<i32>
l2306BDC0:
	word32 s0_420
	a4_130 = a6_210 - s1_291
	branch s1_291 != 0<32> l2306BE6C
l2306BE6C:
	branch a6_210 != 2047<i32> l2306BE94
l2306BE94:
	t3_111 = t3_111 | 0x800000<32>
	s0_420 = a4_130
l2306BE74:
	a7_100 = a5_136 | a2 << 3<u32>
	branch a7_100 == 0<32> l2306C608
l2306C608:
	a5_136 = 0<i32>
l2306BE7C:
	a7_100 = a2 << 3<u32>
	branch a5_136 << 9<u32> < 0<32> l2306C640
l2306BDC8:
	branch (t3_111 | a0 << 3<u32>) != 0<32> l2306BDF4
l2306BDF4:
	s0_420 = a4_130 + -1<i32>
	branch a4_130 != 0xFFFFFFFF<32> l2306BE14
l2306BE14:
	branch a4_130 == 2047<i32> l2306BDD8
l2306BE1C:
	word32 s0_448
	word32 a7_433
	branch s0_420 > 56<i32> l2306BED8
l2306BED8:
	a7_433 = CONVERT((t3_111 | a0 << 3<u32>) != 0<32>, bool, word32)
l2306BE24:
	branch s0_420 > 31<i32> l2306BEA4
l2306BEA4:
	word32 a4_437 = t3_111 >>u s0_420 + -32<i32>
	word32 a0_438 = 0<i32>
	branch s0_420 == 32<i32> l2306BEC4
l2306BEB8:
	a0_438 = t3_111 << 64<i32> - s0_420
l2306BEC4:
	a7_433 = a4_437 | CONVERT((a0_438 | a0 << 3<u32>) != 0<32>, bool, word32)
l2306BED0:
	s0_448 = 0<i32>
l2306BE2C:
	word32 a0_450 = 32<i32> - s0_420
	a7_433 = t3_111 << a0_450 | (a0 << 3<u32>) >>u s0_420 | CONVERT((a0 << 3<u32>) << a0_450 != 0<32>, bool, word32)
	s0_448 = t3_111 >>u s0_420
l2306BE50:
	word32 a7_464 = a7_433 + (a2 << 3<u32>)
	a5_136 = s0_448 + a5_136 + CONVERT(a7_464 <u a2 << 3<u32>, bool, word32)
	t1_193 = a7_464
	a4_130 = a6_210
l2306BDFC:
	word32 a7_479 = (a0 << 3<u32>) + (a2 << 3<u32>)
	a5_136 = t3_111 + a5_136 + CONVERT(a7_479 <u a2 << 3<u32>, bool, word32)
	t1_193 = a7_479
l2306BDD0:
	branch a4_130 != 2047<i32> l2306C194
l2306BDD8:
	a7_100 = a5_136 | a2 << 3<u32>
	branch a7_100 == 0<32> l2306C648
l2306C648:
	a5_136 = 0<i32>
l2306BDE0:
	a7_100 = a2 << 3<u32>
	a6_210 = 0<i32>
	branch a5_136 << 9<u32> < 0<32> l2306BF34
l2306BDF0:
l2306BC68:
	word32 a3_495
	branch a6_210 != 0<32> l2306BCCC
l2306BCCC:
	branch s1_291 != 2047<i32> l2306BCEC
l2306BCEC:
	a5_136 = a5_136 | 0x800000<32>
	a3_495 = a4_130
l2306BCD4:
	a5_136 = t3_111 | a0 << 3<u32>
	branch a5_136 == 0<32> l2306C634
l2306C634:
	a7_100 = 0<i32>
l2306C60C:
	a4_130 = 2047<i32>
l2306BCDC:
	branch t3_111 << 9<u32> < 0<32> l2306C63C
l2306C63C:
	a5_136 = t3_111
l2306C640:
	a4_130 = 2047<i32>
l2306BCE4:
	a5_136 = t3_111
l2306BE88:
l2306BE8C:
	a4_130 = 2047<i32>
	a6_210 = 0<i32>
l2306BC6C:
	branch (a5_136 | a2 << 3<u32>) != 0<32> l2306BC88
l2306BC88:
	a3_495 = a4_130 + -1<i32>
	branch a4_130 != 0xFFFFFFFF<32> l2306BCA8
l2306BCA8:
	branch a4_130 != 2047<i32> l2306BCF8
l2306BCF8:
	word32 a3_530
	word32 t1_515
	branch a3_495 > 56<i32> l2306BDB0
l2306BDB0:
	t1_515 = CONVERT((a5_136 | a2 << 3<u32>) != 0<32>, bool, word32)
l2306BD00:
	branch a3_495 > 31<i32> l2306BD7C
l2306BD7C:
	word32 a4_519 = a5_136 >>u a3_495 + -32<i32>
	word32 a2_520 = 0<i32>
	branch a3_495 == 32<i32> l2306BD9C
l2306BD90:
	a2_520 = a5_136 << 64<i32> - a3_495
l2306BD9C:
	t1_515 = a4_519 | CONVERT((a2_520 | a2 << 3<u32>) != 0<32>, bool, word32)
l2306BDA8:
	a3_530 = 0<i32>
l2306BD08:
	word32 a2_532 = 32<i32> - a3_495
	t1_515 = a5_136 << a2_532 | (a2 << 3<u32>) >>u a3_495 | CONVERT((a2 << 3<u32>) << a2_532 != 0<32>, bool, word32)
	a3_530 = a5_136 >>u a3_495
l2306BD2C:
	t1_193 = t1_515 + (a0 << 3<u32>)
	a5_136 = a3_530 + t3_111 + CONVERT(t1_193 <u a0 << 3<u32>, bool, word32)
	a4_130 = s1_291
l2306BC90:
	t1_193 = (a2 << 3<u32>) + (a0 << 3<u32>)
	a5_136 = t3_111 + a5_136 + CONVERT(t1_193 <u a0 << 3<u32>, bool, word32)
l2306BCA0:
	a4_130 = 1<i32>
l2306BD40:
	branch a5_136 << 8<u32> >= 0<32> l2306C194
l2306C194:
	branch a4_130 != 0<32> l2306C690
l2306C690:
	a7_100 = t1_193
l2306C198:
	t3_111 = a5_136
l2306C19C:
	a7_100 = t1_193
l2306C2E8:
	a5_136 = a7_100 | t3_111
	branch a5_136 == 0<32> l2306C698
l2306C698:
	a7_100 = 0<i32>
	a4_130 = 0<i32>
l2306C2F0:
	word32 a6_592 = (t3_111 << 1<u32>) + (a7_100 >>u 0x1F<u32>)
	word32 a5_593 = a7_100 << 1<u32>
	s1_291 = 0<i32>
	branch (a5_593 & 7<i32>) == 0<32> l2306C33C
l2306C30C:
	branch s3_17 == 2<i32> l2306C5EC
l2306C5EC:
	s1_291 = 1<i32>
	branch s2_104 == 0<32> l2306C33C
l2306C5F4:
	a6_592 = a6_592 + (CONVERT(a5_593 <u -8<i32>, bool, word32) ^ 1<i32>)
	s1_291 = s2_104
l2306C314:
	branch s3_17 == 3<i32> l2306C5D0
l2306C5D0:
	s1_291 = s2_104
	branch s2_104 != 0<32> l2306C33C
l2306C5D8:
	a6_592 = a6_592 + (CONVERT(a5_593 <u -8<i32>, bool, word32) ^ 1<i32>)
	s1_291 = 1<i32>
l2306C31C:
	s1_291 = 1<i32>
	branch s3_17 != 0<32> l2306C33C
l2306C324:
	branch (a5_593 & 15<i32>) == 4<i32> l2306C33C
l2306C330:
	a6_592 = a6_592 + (CONVERT(a5_593 <u -4<i32>, bool, word32) ^ 1<i32>)
l2306C33C:
	a6_210 = (a6_592 >>u 0x18<u32> ^ 1<i32>) & 1<i32>
	a5_136 = t3_111
	a4_130 = 0<i32>
l2306BD48:
	a4_130 = a4_130 + 1<i32>
	branch a4_130 == 2047<i32> l2306C04C
l2306C04C:
	branch s3_17 == 0<32> l2306C05C
l2306C050:
	branch s3_17 != 3<i32> l2306C06C
l2306C06C:
	branch s3_17 != 2<i32> l2306C614
l2306C074:
	branch a1 >>u 0x1F<u32> != 0<32> l2306C05C
l2306C078:
l2306C000:
l2306C058:
	branch a1 >>u 0x1F<u32> != 0<32> l2306C614
l2306C614:
l2306C010:
	a4_130 = 2046<i32>
	a6_210 = 0<i32>
	a5_136 = -1<i32>
	a7_100 = -1<i32>
	s1_291 = 5<i32>
l2306C05C:
	a5_136 = 0<i32>
	a7_100 = 0<i32>
	s1_291 = 5<i32>
l2306BD54:
	word32 a3_695 = a5_136 & 0xFF7FFFFF<32>
	a7_100 = a3_695 << 0x1F<u32> | (t1_193 >>u 1<u32> | t1_193 & 1<i32>)
	a5_136 = a3_695 >>u 1<u32>
l2306BFD4:
	a6_210 = 0<i32>
l2306BC74:
	branch a4_130 == 2047<i32> l2306BCB0
l2306BCB0:
	a5_136 = t3_111 | a0 << 3<u32>
	branch a5_136 == 0<32> l2306C628
l2306C628:
	a7_100 = 0<i32>
l2306C62C:
	s1_291 = 0<i32>
l2306BCB8:
	branch t3_111 << 9<u32> < 0<32> l2306BC7C
l2306BCC0:
	a5_136 = t3_111
l2306BCC4:
	s1_291 = 16<i32>
l2306BC7C:
	a5_136 = t3_111
l2306BC80:
	s1_291 = 0<i32>
l2306BF34:
	branch (a7_100 & 7<i32>) != 0<32> l2306C014
l2306C014:
	word32 a3_808
	s1_291 = s1_291 | 1<i32>
	branch s3_17 == 2<i32> l2306C6B0
l2306C6B0:
	branch s2_104 != 0<32> l2306C6A8
l2306C020:
	branch s3_17 == 3<i32> l2306C6A4
l2306C6A4:
	branch s2_104 != 0<32> l2306C6B4
l2306C6A8:
	a3_808 = a7_100 + 8<i32>
l2306C028:
	branch s3_17 != 0<32> l2306C6B4
l2306C02C:
	branch (a7_100 & 15<i32>) == 4<i32> l2306C6B4
l2306C038:
	a3_808 = a7_100 + 4<i32>
l2306C03C:
	a5_136 = a5_136 + CONVERT(a3_808 <u a7_100, bool, word32)
	a7_100 = a3_808
l2306C6B4:
	branch a6_210 != 0<32> l2306BF48
l2306C6B8:
l2306BF3C:
	branch a6_210 == 0<32> l2306C414
l2306BF40:
	branch (s1_291 & 1<i32>) == 0<32> l2306C414
l2306BF48:
	s1_291 = s1_291 | 2<i32>
l2306C414:
	branch a5_136 << 8<u32> >= 0<32> l2306C434
l2306C41C:
	a4_130 = a4_130 + 1<i32>
	branch a4_130 == 2047<i32> l2306C6BC
l2306C6BC:
	a7_100 = 0<i32>
	branch s3_17 == 0<32> l2306C6E8
l2306C6C4:
	branch s3_17 != 3<i32> l2306C6DC
l2306C6DC:
	branch s3_17 != 2<i32> l2306C6D0
l2306C6E4:
	branch s2_104 == 0<32> l2306C6D0
l2306C6CC:
	branch s2_104 == 0<32> l2306C6E8
l2306C6D0:
	a7_100 = -1<i32>
	a4_130 = 2046<i32>
l2306C6E8:
	s1_291 = s1_291 | 5<i32>
	a5_136 = a7_100
l2306C428:
	a5_136 = a5_136 & 0xFF7FFFFF<32>
l2306C434:
	word32 a7_917 = a5_136 << 0x1D<u32> | a7_100 >>u 3<u32>
	word32 a5_919 = a5_136 >>u 3<u32>
	branch a4_130 != 2047<i32> l2306C464
l2306C44C:
	a7_917 = a7_917 | a5_919
	a5_919 = 0<i32>
	branch a7_917 == 0<32> l2306C464
l2306C458:
	a5_919 = 0x80000<32>
	a7_917 = 0<i32>
	s2_104 = 0<i32>
l2306C464:
	word32 a1_942 = CONVERT(SLICE(a5_919, word20, 0), word20, word32) | (a4_130 & 2047<i32>) << 0x14<u32> | s2_104 << 0x1F<u32>
	branch s1_291 == 0<32> l2306C490
l2306C48C:
	__csrrs(fflags, ra)
l2306C490:
	a1Out = a1_942
	return a7_917
__subdf3_exit:


word32 __fixdfsi(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecvtbuf
//      tcpip_stack_input
//      cJSON_CreateNumber
//      trpc_get_default_power_idx
//      rf_pri_get_vco_freq_cw
//      rf_pri_get_vco_idac_cw
//      phyif_utils_decode
//      rf_set_channel
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
__fixdfsi_entry:
l2306C718:
	word32 a5_31
	__csrrs(frm, fp)
	word32 a3_28 = a1 >>u 0x14<u32> & 2047<i32>
	word32 a4_10 = 1022<i32>
	branch a3_28 > 1022<i32> l2306C750
l2306C750:
	branch a3_28 <= 1053<i32> l2306C794
l2306C794:
	word32 a5_14 = a1 & 0xFFFFF<32> | 0x100000<32>
	word32 a2_16 = 1075<i32> - a3_28
	branch a2_16 > 31<i32> l2306C7D4
l2306C7D4:
	word32 a4_19 = 0<i32>
	branch a2_16 == 32<i32> l2306C7E8
l2306C7E0:
	a4_19 = a5_14 << a3_28 + -1011<i32>
l2306C7E8:
	a3_28 = 1043<i32> - a3_28
	a4_10 = CONVERT((a4_19 | a0) != 0<32>, bool, word32)
	a5_31 = a5_14 >>u a3_28
l2306C7A8:
	a3_28 = a3_28 + -1043<i32>
	a4_10 = CONVERT(a0 << a3_28 + -1043<i32> != 0<32>, bool, word32)
	a5_31 = a5_14 << a3_28 + -1043<i32> | a0 >>u a2_16
l2306C7C0:
	branch a1 >>u 0x1F<u32> == 0<32> l2306C7C8
l2306C7C4:
	a5_31 = 0<32> - a5_31
l2306C7C8:
	branch a4_10 == 0<32> l2306C748
l2306C758:
	a5_31 = (a1 >>u 0x1F<u32>) + 0x7FFFFFFF<32>
	branch a1 >>u 0x1F<u32> == 0<32> l2306C80C
l2306C80C:
	a4_10 = 16<i32>
l2306C768:
	a4_10 = 16<i32>
	branch a3_28 != 1054<i32> l2306C7CC
l2306C774:
	a3_28 = a0 >>u 0x15<u32>
	branch ((a1 & 0xFFFFF<32>) << 0xB<u32> | a0 >>u 0x15<u32>) != 0<32> l2306C7CC
l2306C784:
	a4_10 = a0 << 0xB<u32>
	branch a0 << 0xB<u32> == 0<32> l2306C748
l2306C78C:
	a4_10 = a1 >>u 0x1F<u32>
l2306C73C:
	branch a3_28 != 0<32> l2306C800
l2306C740:
	a5_31 = a1 & 0xFFFFF<32> | a0
	branch a5_31 != 0<32> l2306C800
l2306C800:
	a5_31 = 0<i32>
	a4_10 = 1<i32>
l2306C7CC:
	__csrrs(fflags, ra)
l2306C748:
	a1Out = a1 >>u 0x1F<u32>
	a3Out = a3_28
	a4Out = a4_10
	a5Out = a5_31
	return a5_31
__fixdfsi_exit:


word32 __fixunsdfsi(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rf_pri_rccal_iq
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
__fixunsdfsi_entry:
l2306C814:
	word32 a4_16
	word32 a0_13
	__csrrs(frm, fp)
	word32 a3_9 = a1 >>u 0x14<u32> & 2047<i32>
	branch a3_9 > 1022<i32> l2306C848
l2306C848:
	branch a1 >>u 0x1F<u32> != 0<32> l2306C8C4
l2306C8C4:
	a0_13 = 0<i32>
l2306C84C:
	branch a3_9 > 1054<i32> l2306C8D0
l2306C8D0:
	a0_13 = -1<i32>
l2306C8C8:
	a4_16 = 16<i32>
l2306C854:
	word32 a5_18 = a1 & 0xFFFFF<32> | 0x100000<32>
	word32 a2_19 = 1075<i32> - a3_9
	branch a2_19 > 31<i32> l2306C88C
l2306C88C:
	word32 a4_22 = 0<i32>
	branch a2_19 == 32<i32> l2306C8A0
l2306C898:
	a4_22 = a5_18 << a3_9 + -1011<i32>
l2306C8A0:
	a4_16 = CONVERT((a4_22 | a0) != 0<32>, bool, word32)
	a0_13 = a5_18 >>u 1043<i32> - a3_9
l2306C868:
	a4_16 = CONVERT(a0 << a3_9 + -1043<i32> != 0<32>, bool, word32)
	a0_13 = a5_18 << a3_9 + -1043<i32> | a0 >>u a2_19
l2306C880:
	branch a4_16 == 0<32> l2306C8D8
l2306C8D8:
	a4Out = a4_16
	return a0_13
l2306C838:
	branch a3_9 != 0<32> l2306C8B8
l2306C83C:
	word32 a0_42 = a1 & 0xFFFFF<32> | a0
	branch a0_42 != 0<32> l2306C8B8
l2306C8B8:
	a0_13 = 0<i32>
	a4_16 = 1<i32>
l2306C884:
	__csrrs(fflags, ra)
	a4Out = a4_16
	return a0_13
l2306C844:
	a4Out = 0x100000<32>
	return a0_42
__fixunsdfsi_exit:


word32 __floatsidf(word32 a0, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_stack_input
//      print_number
//      ADC_Parse_Result
//      pa_input
//      trpc_get_default_power_idx
//      phyif_utils_decode
//      rf_set_channel
// MayUse:  a0:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a4 a5
// Preserved: ra s0 s1 sp
__floatsidf_entry:
l2306C8DC:
	word32 s0_27
	word32 a4_11
	word32 a5_12
	branch a0 == 0<32> l2306C97C
l2306C97C:
	a4_11 = 0<i32>
	a5_12 = 0<i32>
l2306C8F0:
	word32 s0_15 = (a0 >> 0x1F<u32> ^ a0) - (a0 >> 0x1F<u32>)
	word32 a4_68
	word32 a0_18 = __clzsi2(s0_15, out a4_68)
	a4_11 = 1054<i32> - a0_18
	branch a0_18 > 10<i32> l2306C968
l2306C968:
	a5_12 = s0_15 << a0_18 + -11<i32>
	a0 = a0 >>u 0x1F<u32>
l2306C974:
	s0_27 = 0<i32>
l2306C918:
	a5_12 = s0_15 >>u 11<i32> - a0_18
	s0_27 = s0_15 << a0_18 + 21<i32>
	a0 = a0 >>u 0x1F<u32>
l2306C930:
	a1Out = CONVERT(SLICE(a5_12, word20, 0), word20, word32) | (a4_11 & 2047<i32>) << 0x14<u32> | a0 << 0x1F<u32>
	return s0_27
__floatsidf_exit:


word32 __floatunsidf(word32 a0, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rf_pri_rccal_iq
//      rf_pri_get_vco_freq_cw
//      rf_pri_get_vco_idac_cw
// MayUse:  a0:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a3 a4 a5
// Preserved: ra s0 sp
__floatunsidf_entry:
l2306C988:
	word32 a4_11
	word32 a5_10
	word32 s0_20 = a0
	branch a0 == 0<32> l2306CA00
l2306CA00:
	a5_10 = 0<i32>
	a4_11 = 0<i32>
l2306C99C:
	word32 a4_46
	word32 a0_12 = __clzsi2(a0, out a4_46)
	a4_11 = 1054<i32> - a0_12
	branch a0_12 > 10<i32> l2306C9F0
l2306C9F0:
	a5_10 = a0 << a0_12 + -11<i32>
	s0_20 = 0<i32>
l2306C9B0:
	a5_10 = a0 >>u 11<i32> - a0_12
	s0_20 = a0 << a0_12 + 21<i32>
l2306C9C4:
	a1Out = CONVERT(SLICE(a5_10, word20, 0), word20, word32) | (a4_11 & 2047<i32>) << 0x14<u32>
	return s0_20
__floatunsidf_exit:


word32 __extendsfdf2(word32 ra, word32 fa0, word32 fflags, word32 frm, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_stack_input
//      bl_tsen_adc_get
//      ADC_Parse_Result
//      TSEN_Get_Temp
//      pa_adapt
//      rfc_init
// MayUse:  fa0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a4 a5
// Preserved: ra s0 s1 s2 sp
__extendsfdf2_entry:
l2306CA0C:
	word32 a0_31
	word32 a5_23
	__csrrs(frm, fp + -16<i32>)
	word32 a0_17 = fa0 >>u 0x17<u32> & 255<i32>
	word32 s1_20 = a0_17 + 1<i32> & 254<i32>
	word32 s0_21 = CONVERT(SLICE(fa0, word23, 0), word23, word32)
	branch s1_20 == 0<32> l2306CA9C
l2306CA9C:
	branch a0_17 != 0<32> l2306CAE4
l2306CAE4:
	a5_23 = 0<i32>
	branch s0_21 == 0<32> l2306CB08
l2306CAEC:
	branch s0_21 << 9<u32> < 0<32> l2306CAF8
l2306CAF4:
	s1_20 = 16<i32>
l2306CAF8:
	s0_21 = s0_21 << 0x1D<u32>
	a5_23 = s0_21 >>u 3<u32> | 0x80000<32>
l2306CB08:
	a0_31 = 2047<i32>
l2306CAA0:
	branch s0_21 == 0<32> l2306CB10
l2306CB10:
	a5_23 = 0<i32>
	a0_31 = 0<i32>
l2306CAA4:
	word32 a4_131
	word32 a0_35 = __clzsi2(s0_21, out a4_131)
	branch a0_35 > 10<i32> l2306CAD4
l2306CAD4:
	a5_23 = s0_21 << a0_35 + -11<i32>
	s0_21 = 0<i32>
l2306CAB4:
	a5_23 = s0_21 >>u 11<i32> - a0_35
	s0_21 = s0_21 << a0_35 + 21<i32>
l2306CAC8:
	a0_31 = 905<i32> - a0_35
l2306CA48:
	a5_23 = s0_21 >>u 3<u32>
	a0_31 = a0_17 + 896<i32>
	s0_21 = s0_21 << 0x1D<u32>
	s1_20 = 0<i32>
l2306CA58:
	word32 a1_73 = CONVERT(SLICE(a5_23, word20, 0), word20, word32) | (a0_31 & 2047<i32>) << 0x14<u32> | (fa0 >>u 0x1F<u32>) << 0x1F<u32>
	branch s1_20 == 0<32> l2306CA84
l2306CA80:
	__csrrs(fflags, ra)
l2306CA84:
	a1Out = a1_73
	return s0_21
__extendsfdf2_exit:


word32 __truncdfsf2(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & fa0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ADC_Parse_Result
//      TSEN_Get_Temp
//      pa_input
//      pa_adapt
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a1 a2 a3 a4 a5 fa0
// Trashed: a1 a2 a3 a4 a5 a6 a7 fa0 t1
// Preserved: a0 sp
__truncdfsf2_entry:
l2306CB1C:
	word32 a2_105
	word32 a6_112
	word32 a5_100
	word32 t1_10 = a1 >>u 0x14<u32> & 2047<i32>
	word32 a7_4 = __csrrs(frm, fp)
	word32 a3_102 = a0 >>u 0x1D<u32> | CONVERT(SLICE(a1, word20, 0), word20, word32) << 3<u32>
	word32 a4_103 = t1_10 + 1<i32> & 2046<i32>
	word32 a1_16 = a1 >>u 0x1F<u32>
	branch a4_103 == 0<32> l2306CD20
l2306CD20:
	a5_100 = a3_102 | a0 << 3<u32>
	branch t1_10 != 0<32> l2306CD30
l2306CD30:
	branch a5_100 == 0<32> l2306CD94
l2306CD94:
	a2_105 = 0<i32>
	a6_112 = 255<i32>
l2306CD34:
	a2_105 = 0<i32>
	branch t1_10 != 2047<i32> l2306CD50
l2306CD40:
	a2_105 = CONVERT((a3_102 & 0x400000<32>) <u 1<i32>, bool, word32) << 4<u32>
l2306CD50:
	a5_100 = a3_102 << 3<u32> | 0x2000000<32>
	a6_112 = 255<i32>
l2306CD28:
	a5_100 = CONVERT(a5_100 != 0<32>, bool, word32)
l2306CB50:
	a6_112 = t1_10 + -896<i32>
	branch t1_10 <= -1150<i32> l2306CC2C
l2306CC2C:
	branch t1_10 > 0xFFFFFC80<32> l2306CCEC
l2306CCEC:
	a5_100 = CONVERT(a0 << 6<u32> != 0<32>, bool, word32) | a3_102 << 3<u32> | (a0 << 3<u32>) >>u 0x1D<u32>
	a4_103 = 0<i32>
	a2_105 = 0<i32>
l2306CC30:
	branch t1_10 < -873<i32> l2306CD64
l2306CD64:
	a5_100 = 1<i32>
l2306CC38:
	a3_102 = a3_102 | 0x800000<32>
	word32 a2_48 = 30<i32> - (t1_10 + -896<i32>)
	branch a2_48 > 31<i32> l2306CCBC
l2306CCBC:
	word32 a6_53 = (a3_102 | 0x800000<32>) >>u -2<i32> - (t1_10 + -896<i32>)
	word32 a4_54 = 0<i32>
	branch a2_48 == 32<i32> l2306CCDC
l2306CCD4:
	a4_54 = (a3_102 | 0x800000<32>) << t1_10 + -862<i32>
l2306CCDC:
	a5_100 = a6_53 | CONVERT((a4_54 | a0 << 3<u32>) != 0<32>, bool, word32)
l2306CC50:
	a3_102 = CONVERT(a0 << 3<u32> << t1_10 + -894<i32> != 0<32>, bool, word32) | (a3_102 | 0x800000<32>) << t1_10 + -894<i32>
	a5_100 = a0 << 3<u32> >>u a2_48 | a3_102
l2306CC6C:
	branch a5_100 == 0<32> l2306CDA0
l2306CDA0:
	a6_112 = 0<i32>
	a2_105 = 0<i32>
l2306CC70:
	word32 a4_74 = a5_100 << 1<u32>
	a2_105 = 0<i32>
	branch (a4_74 & 7<i32>) == 0<32> l2306CCA8
l2306CC80:
	branch a7_4 == 2<i32> l2306CD80
l2306CD80:
	a2_105 = 1<i32>
	branch a1 >>u 0x1F<u32> == 0<32> l2306CCA8
l2306CD88:
	a4_74 = a4_74 + 8<i32>
	a2_105 = a1 >>u 0x1F<u32>
l2306CC88:
	branch a7_4 == 3<i32> l2306CD6C
l2306CD6C:
	a2_105 = a1 >>u 0x1F<u32>
	branch a1 >>u 0x1F<u32> != 0<32> l2306CCA8
l2306CD74:
	a4_74 = a4_74 + 8<i32>
	a2_105 = 1<i32>
l2306CC90:
	a2_105 = 1<i32>
	branch a7_4 != 0<32> l2306CCA8
l2306CC98:
	branch (a4_74 & 15<i32>) == 4<i32> l2306CCA8
l2306CCA4:
	a4_74 = a4_74 + 4<i32>
l2306CCA8:
	a4_103 = (a4_74 >>u 0x1B<u32> ^ 1<i32>) & 1<i32>
	a6_112 = 0<i32>
l2306CD0C:
	a3_102 = a5_100 & 7<i32>
	branch a3_102 != 0<32> l2306CB7C
l2306CD14:
	branch a4_103 == 0<32> l2306CBC8
l2306CD18:
	a4_103 = a2_105 & 1<i32>
l2306CB5C:
	branch a7_4 == 0<32> l2306CBBC
l2306CB60:
	branch a7_4 != 3<i32> l2306CBB0
l2306CBB0:
	branch a7_4 != 2<i32> l2306CB6C
l2306CBB8:
	branch a1 >>u 0x1F<u32> == 0<32> l2306CB6C
l2306CB68:
	branch a1 >>u 0x1F<u32> == 0<32> l2306CBBC
l2306CBBC:
	a5_100 = 0<i32>
	a6_112 = 255<i32>
	a2_105 = 5<i32>
l2306CB6C:
	a5_100 = -1<i32>
	a6_112 = 254<i32>
	a4_103 = 0<i32>
	a2_105 = 5<i32>
l2306CB7C:
	a3_102 = 2<i32>
	a2_105 = a2_105 | 1<i32>
	branch a7_4 == 2<i32> l2306CDB8
l2306CDB8:
	branch a1 >>u 0x1F<u32> == 0<32> l2306CBA4
l2306CDBC:
l2306CB88:
	a3_102 = 3<i32>
	branch a7_4 == 3<i32> l2306CDAC
l2306CDAC:
	branch a1 >>u 0x1F<u32> != 0<32> l2306CBA4
l2306CDB0:
	a5_100 = a5_100 + 8<i32>
l2306CB90:
	branch a7_4 != 0<32> l2306CBA4
l2306CB94:
	a3_102 = a5_100 & 15<i32>
	branch a3_102 == 4<i32> l2306CBA4
l2306CBA0:
	a5_100 = a5_100 + 4<i32>
l2306CBA4:
	branch a4_103 == 0<32> l2306CBC8
l2306CBA8:
	a2_105 = a2_105 | 2<i32>
l2306CBC8:
	branch a5_100 << 5<u32> >= 0<32> l2306CBE8
l2306CBD0:
	a6_112 = a6_112 + 1<i32>
	branch a6_112 == 255<i32> l2306CDC0
l2306CDC0:
	a5_100 = 0<i32>
	branch a7_4 == 0<32> l2306CDEC
l2306CDC8:
	branch a7_4 != 3<i32> l2306CDE0
l2306CDE0:
	branch a7_4 != 2<i32> l2306CDD4
l2306CDE8:
	branch a1 >>u 0x1F<u32> == 0<32> l2306CDD4
l2306CDD0:
	branch a1 >>u 0x1F<u32> == 0<32> l2306CDEC
l2306CDD4:
	a5_100 = -1<i32>
	a6_112 = 254<i32>
l2306CDEC:
	a2_105 = a2_105 | 5<i32>
l2306CBDC:
	a5_100 = a5_100 & 0xFBFFFFFF<32>
l2306CBE8:
	word32 a5_177 = a5_100 >>u 3<u32>
	branch a6_112 != 255<i32> l2306CC00
l2306CBF4:
	branch a5_177 == 0<32> l2306CC00
l2306CBF8:
	a5_177 = 0x400000<32>
	a1_16 = 0<i32>
l2306CC00:
	word32 a1_192 = a1_16 << 0x1F<u32>
	word32 a5_194 = CONVERT(SLICE(a5_177, word23, 0), word23, word32) | (a6_112 & 255<i32>) << 0x17<u32> | a1_192
	branch a2_105 == 0<32> l2306CC24
l2306CC20:
	__csrrs(fflags, ra)
l2306CC24:
	a2Out = a2_105
	a3Out = a3_102
	a4Out = 255<i32>
	a5Out = a5_194
	fa0Out = a5_194
	return a1_192
__truncdfsf2_exit:


word32 atoi(word32 a0, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_cfg
//      cmd_wifi_ap_start
//      cmd_wifi_ap_conf_max_sta
//      wifi_rc_fixed_enable
//      wifi_capcode_cmd
//      ble_auth_passkey
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
atoi_entry:
l2306CDF4:
l2306CDFC_thunk_strtol:
	word32 a3_9
	word32 a4_10
	word32 a1_23
	word32 a2_24
	word32 a5_25
	word32 a0_6 = strtol(a0, 0<i32>, 10<i32>, out a1_23, out a2_24, out a3_9, out a4_10, out a5_25)
	a3Out = a3_9
	a4Out = a4_10
	return a0_6
atoi_exit:


void _atoi_r(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
_atoi_r_entry:
l2306CE00:
l2306CE08_thunk__strtol_r:
	_strtol_r(a0, a1, 0<i32>, 10<i32>)
	return
_atoi_r_exit:


word32 __errno(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_run
//      _stat
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
__errno_entry:
l2306CE0C:
	word32 a0_6 = Mem0[0x4200DCC8<p32>:int32]
	a5Out = 0x4200DCC8<p32>
	return a0_6
__errno_exit:


word32 memchr(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_string
//      fdt_subnode_offset
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
memchr_entry:
l2306CE1C:
	word32 a5_100
	branch (a0 & 3<i32>) == 0<32> l2306CEF0
l2306CEF0:
	a5_100 = a2
l2306CE28:
	a5_100 = a2 + -1<i32>
	branch a2 == 0<32> l2306CE88
l2306CE30:
	branch CONVERT(Mem0[a0:byte], byte, word32) == (a1 & 255<i32>) l2306CE8C
l2306CE38:
	a3 = -1<i32>
l2306CE50:
	a0 = a0 + 1<i32>
	branch (a0 & 3<i32>) != 0<32> l2306CE40
l2306CE40:
	a5_100 = a5_100 + -1<i32>
	branch a5_100 == -1<i32> l2306CE88
l2306CE48:
	branch CONVERT(Mem0[a0:byte], byte, word32) == (a1 & 255<i32>) l2306CE8C
l2306CE5C:
	branch a5_100 >u 3<i32> l2306CE90
l2306CE90:
	word32 a1_31 = a1 << 8<u32> & 0xFFFF<32> | a1 & 255<i32>
	word32 a7_33 = a1_31 << 0x10<u32> | a1_31
l2306CEC4:
	word32 a4_43 = a7_33 ^ Mem0[a0:int32]
	a3 = a4_43 + 0xFEFEFEFF<32>
	branch (a4_43 + 0xFEFEFEFF<32> & ~a4_43 & 0x80808080<32>) != 0<32> l2306CE68
l2306CEE0:
	a5_100 = a5_100 + -4<i32>
	a0 = a0 + 4<i32>
	branch a5_100 >u 3<i32> l2306CEC4
l2306CEEC:
l2306CE64:
	branch a5_100 == 0<32> l2306CE88
l2306CE68:
	branch CONVERT(Mem0[a0:byte], byte, word32) == (a1 & 255<i32>) l2306CE8C
l2306CE70:
	a5_100 = a0 + a5_100
l2306CE80:
	a0 = a0 + 1<i32>
	branch a5_100 != a0 l2306CE78
l2306CE78:
	branch CONVERT(Mem0[a0:byte], byte, word32) == (a1 & 255<i32>) l2306CE8C
l2306CE88:
	a0 = 0<i32>
l2306CE8C:
	a3Out = a3
	a5Out = a5_100
	return a0
memchr_exit:


word32 memcmp(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateGlobalGuard_scan_beacon
//      bl_utils_idx_lookup
//      id_find
//      set_random_address
//      bt_unpair
//      id_create.isra.25
//      bt_setup_id_addr
//      init_work
//      bt_le_adv_start
//      smp_public_key
//      smp_pairing_random
//      bt_smp_request_ltk
//      bt_smp_sign_verify
//      bt_keys_find.part.1
//      bt_keys_get_addr
//      bt_keys_find_irk
//      bt_keys_find_addr
//      bt_rpa_irk_matches
//      bl_find_valid_queued_entry
//      bt_conn_addr_le_cmp
//      find_ccc_cfg
//      find_sc_cfg
//      notify_cb
//      bt_uuid_cmp
//      find_type_cb
//      fdt_subnode_offset
//      fdt_get_property_namelen_
//      ls_cmd
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      ethernet_input
//      dhcp_server_recv
//      file_info
//      dirent_file
//      romfs_register
//      rxu_cntrl_frame_handle
//      scanu_search_by_ssid
//      scanu_rm_exist_ssid
//      _aid_list_delete
//      apm_probe_req_handler
//      apm_assoc_req_handler
//      process_rsn_ie
//      process_wpa_ie
//      IsEAPOL_MICValid
//      parseKeyKDE
//      KeyMgmtSta_IsRxEAPOLValid
//      supplicantAkmIsWpaWpa2
//      supplicantAkmIsWpa2
//      supplicantConstructContext
//      pmkCacheFindPSKElement
//      chan_ctxt_add
//      rxu_mgt_ind_handler
//      two_way_long_needle
//      strstr
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
memcmp_entry:
l2306CEF8:
	word32 a5_17
	branch a2 <=u 3<i32> l2306CF2C
l2306CF00:
	a3 = 3<i32>
	branch ((a0 | a1) & 3<i32>) != 0<32> l2306CF70
l2306CF10:
	a4 = Mem0[a0:int32]
	branch a4 != Mem0[a1:int32] l2306CF70
l2306CF70:
	a5_17 = a2 + -1<i32>
l2306CF1C:
	a2 = a2 + -4<i32>
	a0 = a0 + 4<i32>
	a1 = a1 + 4<i32>
	branch a2 >u 3<i32> l2306CF10
l2306CF2C:
	a5_17 = a2 + -1<i32>
	branch a2 == 0<32> l2306CF68
l2306CF34:
	a4 = CONVERT(Mem0[a0:byte], byte, word32)
	a3 = CONVERT(Mem0[a1:byte], byte, word32)
	branch a4 != a3 l2306CF78
l2306CF40:
	a4 = a5_17 + 1<i32>
	a5_17 = a0 + 1<i32>
	word32 a0_39 = a0 + a4
l2306CF60:
	a1 = a1 + 1<i32>
	branch a5_17 != a0_39 l2306CF50
l2306CF50:
	a4 = CONVERT(Mem0[a5_17:byte], byte, word32)
	a3 = CONVERT(Mem0[a1:byte], byte, word32)
	a5_17 = a5_17 + 1<i32>
	branch a4 != a3 l2306CF78
l2306CF78:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_17
	return a4 - a3
l2306CF68:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_17
	return 0<i32>
memcmp_exit:


word32 memcpy(word32 a0, word32 a1, word32 a2, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scan_item_cb
//      wifiprov_wifi_state_get
//      inode_reserve
//      aos_poll_read_fd
//      event_write
//      event_read
//      stateGlobalGuard_scan_beacon
//      wifi_mgmr_ap_sta_info_get_internal
//      wifi_mgmr_api_scan_item_beacon
//      wifi_mgmr_api_ap_start
//      cmd_wifi_power_table_update
//      wifi_mgmr_sta_enable
//      wifi_mgmr_sta_connect_ind_stat_get
//      wifi_mgmr_sta_ssid_set
//      wifi_mgmr_sta_psk_set
//      wifi_mgmr_sta_connect
//      wifi_mgmr_ap_enable
//      wifi_mgmr_ap_sta_info_get
//      wifi_mgmr_cfg_req
//      wifi_mgmr_scan_ap_all
//      wifi_mgmr_profile_add
//      wifi_mgmr_profile_get
//      bl_main_apm_sta_info_get
//      bl_send_start
//      bl_send_add_if
//      bl_send_sm_connect_req
//      bl_send_apm_start_req
//      bl_rx_apm_sta_add_ind
//      bl_rx_scanu_result_ind
//      bl_output
//      ipc_host_init
//      cmd_mgr_msgind
//      llc_map_update_ind
//      llm_init
//      llcp_channel_map_ind_handler
//      hci_le_set_host_ch_class_cmd_handler
//      bt_addr_le_copy
//      le_pkey_complete
//      le_remote_feat_complete
//      set_random_address
//      hci_id_add
//      set_ad
//      le_ltk_request
//      enh_conn_complete
//      le_legacy_conn_complete
//      init_work
//      bt_dh_key_gen
//      l2cap_chan_le_send_sdu
//      l2cap_chan_le_recv_seg
//      smp_sign_buf
//      smp_f6
//      smp_g2
//      smp_ident_info
//      smp_encrypt_info
//      sc_smp_send_dhkey_check
//      smp_dhkey_check
//      smp_send_pairing_random
//      sc_send_public_key
//      send_pairing_rsp
//      bt_smp_distribute_keys
//      smp_signing_info
//      smp_master_ident
//      smp_pairing_req
//      bt_smp_dhkey_ready
//      smp_c1
//      smp_pairing_confirm
//      smp_pairing_rsp
//      smp_ident_addr_info
//      smp_public_key
//      smp_pairing_random
//      bt_smp_request_ltk
//      bt_smp_sign_verify
//      bt_smp_sign
//      bt_smp_auth_passkey_entry
//      bt_smp_start_security
//      bt_smp_update_keys
//      bt_keys_get_addr
//      bt_keys_find_irk
//      read_func
//      data_cb
//      net_buf_simple_add_mem
//      bt_rpa_irk_matches
//      _copy
//      bl_onchiphci_rx_packet_handler
//      bt_conn_le_start_encryption
//      bt_conn_add_le
//      bt_conn_create_le
//      gatt_notify
//      gatt_indicate
//      disconnected_cb
//      read_appearance
//      read_ppcp
//      read_name
//      bt_gatt_attr_read_ccc
//      bt_gatt_attr_read_service
//      sc_save
//      bt_gatt_attr_write_ccc
//      bt_gatt_attr_read
//      bt_gatt_attr_read_chrc
//      bt_gatt_foreach_attr
//      gatt_read_group_rsp
//      gatt_read_type_rsp
//      read_included_uuid_cb
//      gatt_find_info_rsp
//      bt_gatt_write_without_response_cb
//      gatt_prepare_write_rsp
//      bt_gatt_subscribe
//      bt_gatt_disconnected
//      uuid_to_uuid128
//      bt_uuid_create
//      bt_uuid_to_str
//      tc_aes128_set_encrypt_key
//      find_info_cb
//      scan_complete_cb
//      __recv_event
//      wifi_state_get_cb
//      write_data
//      __ble_bytes_send
//      __protocol_send
//      pro_trans_read
//      pro_trans_layer_ack_read
//      __payload_write
//      __payload_read
//      ensure
//      cJSON_strdup
//      print_array.isra.4
//      print_object.isra.3
//      aos_cli_input_direct
//      prvCopyDataToQueue
//      prvCopyDataFromQueue
//      prvWriteBytesToBuffer
//      prvReadBytesFromBuffer
//      bl_uart_init
//      bl_chip_info
//      bl_rand_stream
//      bl_wifi_sta_mac_addr_set
//      bl_wifi_ap_mac_addr_set
//      bl_wifi_mac_addr_get
//      bl_wifi_ap_info_set
//      bl_wifi_sta_info_set
//      vfs_uart_init
//      hal_uart_setconfig
//      hal_board_cfg
//      bl_tsen_adc_get
//      etharp_input
//      etharp_request
//      ip4_output_if_opt
//      pbuf_copy
//      pbuf_copy_partial
//      pbuf_take
//      pbuf_take_at
//      tcp_seg_copy
//      ethernet_output
//      icmp_input
//      icmp_dest_unreach
//      dhcp_client_find_by_ip.isra.0
//      dhcp_server_recv
//      dhcpd_start
//      romfs_read
//      dirent_file
//      mfg_media_read_macaddr
//      mm_hw_config_handler
//      ps_send_pspoll
//      sta_mgmt_register
//      txl_frame_get
//      txl_frame_send_qosnull_frame
//      txl_frame_send_eapol_frame
//      vif_mgmt_register
//      rxu_cntrl_frame_handle
//      scanu_scan_next
//      scanu_start
//      sm_scan_bss
//      sm_join_bss
//      sm_set_bss_param
//      sm_disconnect
//      sm_connect_ind
//      sm_auth_send
//      sm_assoc_req_send
//      sm_handle_supplicant_result
//      txu_cntrl_sechdr_len_compute
//      apm_start_cfm
//      apm_set_bss_param
//      apm_sta_add
//      apm_send_mlme
//      apm_bcn_set
//      apm_assoc_req_handler
//      keyMgmtSta_StartSession
//      supplicantInitSession
//      supplicantEnable
//      add_key_to_mac
//      add_mfp_key_to_mac
//      keyMgmtPlumbPairwiseKey
//      process_rsn_ie
//      process_wpa_ie
//      isApReplayCounterFresh
//      updateApReplayCounter
//      formEAPOLEthHdr
//      IsEAPOL_MICValid
//      parseKeyDataGTK
//      KeyMgmtSta_PrepareEAPOLFrame
//      supplicantConstructContext
//      KeyMgmtSta_DeriveKeys
//      GetKeyMsgNonceFromEAPOL
//      ProcessRxEAPOL_GrpMsg1
//      bl_sha256_crypto_kdf
//      Bl_F
//      bl60x_fw_password_hash
//      pmkCacheSetPassphrase
//      pmkCacheAddPSK
//      RC4_Encrypt
//      sha256_compress
//      sha256_vector
//      hmac_sha256_vector
//      ProcessKeyMgmtDataAp
//      GenerateGTK_internal
//      PopulateKeyMsg
//      prepareKDE
//      Encrypt_keyData
//      KeyMgmtAp_DerivePTK
//      KeyData_CopyWPAWP2
//      InitKeyMgmtInfo
//      cm_InitConnection
//      cm_SetPeerAddr
//      cm_SetComData
//      trpc_power_get
//      rf_pri_update_tx_power_offset
//      mm_sta_add
//      mm_sta_tbtt
//      mm_get_rsn_wpa_ie
//      mm_bcn_change
//      scan_probe_req_tx
//      me_build_beacon
//      me_rc_stats_req_handler
//      me_chan_config_req_handler
//      me_config_req_handler
//      me_sta_add_req_handler
//      rc_update_stats
//      rc_init
//      scanu_raw_send_req_handler
//      rxu_mgt_ind_handler
//      scanu_join_cfm_handler
//      sm_connect_req_handler
//      mm_sta_add_cfm_handler
//      apm_start_req_handler
//      Bl_hmac_md5
//      Bl_hmac_sha1
//      Bl_PRF
//      wpa_MD5Update
//      wpa_MD5Final
//      ap_setpsk
//      InitializeAp
//      bl_mtd_write
//      Bl_F_fast.constprop.0
//      utils_wifi_psk_cal_fast_bin
//      utils_hmac_sha1_fast
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a1 a2 a3 a4 a5 a6 a7
// Trashed: a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
memcpy_entry:
l2306CF80:
	word32 a4_11
	word32 a5_5 = a1 ^ a0
	word32 a5_118 = a5_5 & 3<i32>
	word32 a7_8 = a0 + a2
	branch (a5_5 & 3<i32>) != 0<32> l2306CFF0
l2306CF90:
	a5_118 = 3<i32>
	branch a2 <=u 3<i32> l2306CFF0
l2306CFF0:
	a4_11 = a0
	branch a0 >=u a7_8 l2306CFEC
l2306CF98:
	a4_11 = a0 + 1<i32>
	branch (a0 & 3<i32>) != 0<32> l2306D010
l2306D010:
	a3 = CONVERT(Mem16[a1:byte], byte, word32)
	a4_11 = a4_11 + 0<i32>
	Mem21[a4_11 + 4095<i32>:byte] = SLICE(a3, byte, 0)
	a1 = a1 + 1<i32>
	branch (a4_11 & 3<i32>) == 0<32> l2306CFA4
l2306D028:
	a3 = CONVERT(Mem21[a1:byte], byte, word32)
	Mem26[a4_11 + 4096<i32>:byte] = SLICE(a3, byte, 0)
	a4_11 = a4_11 + 1<i32>
	a1 = a1 + 1<i32>
	branch (a4_11 + 1<i32> & 3<i32>) != 0<32> l2306D010
l2306D040:
l2306CFA4:
	a2 = a7_8 & -4<i32>
	a5_118 = (a7_8 & -4<i32>) + -32<i32>
	branch a4_11 <u a5_118 l2306D044
l2306D044:
	word32 t0_36 = Mem34[a1 + 4<i32>:int32]
	word32 t6_37 = Mem34[a1 + 8<i32>:int32]
	word32 t5_38 = Mem34[a1 + 12<i32>:int32]
	word32 t4_39 = Mem34[a1 + 16<i32>:int32]
	word32 t3_40 = Mem34[a1 + 20<i32>:int32]
	word32 t1_41 = Mem34[a1 + 24<i32>:int32]
	a6 = Mem34[a1 + 28<i32>:int32]
	Mem45[a4_11:word32] = Mem34[a1:int32]
	a1 = a1 + 36<i32>
	a3 = Mem45[a1 + -4<i32>:int32]
	Mem47[a4_11 + 4<i32>:word32] = t0_36
	Mem48[a4_11 + 8<i32>:word32] = t6_37
	Mem49[a4_11 + 12<i32>:word32] = t5_38
	Mem50[a4_11 + 16<i32>:word32] = t4_39
	Mem51[a4_11 + 20<i32>:word32] = t3_40
	Mem52[a4_11 + 24<i32>:word32] = t1_41
	Mem53[a4_11 + 28<i32>:word32] = a6
	a4_11 = a4_11 + 36<i32>
	Mem55[a4_11 + 4092<i32>:word32] = a3
	branch a4_11 <u a5_118 l2306D044
l2306D098:
l2306CFB0:
	branch a4_11 >=u (a7_8 & -4<i32>) l2306CFE8
l2306CFB4:
	a3 = a1
	word32 a5_63 = a4_11
l2306CFBC:
	a6 = Mem65[a3:int32]
	a5_63 = a5_63 + 4<i32>
	Mem70[a5_63 + 4092<i32>:word32] = a6
	a3 = a3 + 4<i32>
	branch a5_63 <u (a7_8 & -4<i32>) l2306CFBC
l2306CFD0:
	a5_118 = ((a7_8 & -4<i32>) + -1<i32> - a4_11 & -4<i32>) + 4<i32>
	a4_11 = a4_11 + a5_118
	a1 = a1 + a5_118
l2306CFE8:
	branch a4_11 <u a7_8 l2306CFF8
l2306CFF8:
	word32 a5_87 = CONVERT(Mem86[a1:byte], byte, word32)
	a4_11 = a4_11 + 1<i32>
	Mem91[a4_11 + 4095<i32>:byte] = SLICE(a5_87, byte, 0)
	a1 = a1 + 1<i32>
	branch a4_11 <u a7_8 l2306CFF8
l2306D00C:
	a2Out = a2
	a3Out = a3
	a4Out = a4_11
	a5Out = a5_87
	a6Out = a6
	a7Out = <invalid>
	return a1
l2306CFEC:
	a2Out = a2
	a3Out = a3
	a4Out = a4_11
	a5Out = a5_118
	a6Out = a6
	a7Out = <invalid>
	return a1
memcpy_exit:


word32 memmove(word32 a0, word32 a1, word32 a2, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_sort_samples_tp
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a1 a3 a4 a5
// Preserved: a2 a6 a7 sp t1 t3
memmove_entry:
l2306D09C:
	branch a1 >=u a0 l2306D0C8
l2306D0A0:
	word32 a5_6 = a1 + a2
	branch a0 >=u a5_6 l2306D0C8
l2306D0C8:
	word32 a5_14
	word32 a3_13
	branch a2 >u 15<i32> l2306D0FC
l2306D0FC:
	branch ((a1 | a0) & 3<i32>) != 0<32> l2306D1A4
l2306D1A4:
	a3_13 = a2 + -1<i32>
	a5_14 = a0
l2306D108:
	word32 a7_16 = a2 + -16<i32> & -16<i32>
	word32 a6_18 = a0 + (a7_16 + 16<i32>)
	word32 a4_19 = a1
	a5_14 = a0
l2306D120:
	a5_14 = a5_14 + 16<i32>
	Mem27[a5_14 + 4080<i32>:word32] = Mem22[a4_19:int32]
	a4_19 = a4_19 + 16<i32>
	Mem29[a5_14 + 4084<i32>:word32] = Mem27[a4_19 + -12<i32>:int32]
	Mem31[a5_14 + 4088<i32>:word32] = Mem29[a4_19 + -8<i32>:int32]
	Mem33[a5_14 + 4092<i32>:word32] = Mem31[a4_19 + -4<i32>:int32]
	branch a6_18 != a5_14 l2306D120
l2306D14C:
	a4 = a2 & 12<i32>
	a1 = a1 + (a7_16 + 16<i32>)
	branch (a2 & 12<i32>) == 0<32> l2306D1B4
l2306D1B4:
	a2 = a2 & 15<i32>
l2306D15C:
	word32 a4_42 = a1
	word32 a7_43 = a5_14
l2306D168:
	a4_42 = a4_42 + 4<i32>
	a7_43 = a7_43 + 4<i32>
	Mem53[a7_43 + 4092<i32>:word32] = Mem47[a4_42 + -4<i32>:int32]
	branch a1 + ((a2 & 15<i32>) - a4_42) >u 3<i32> l2306D168
l2306D184:
	a4 = ((a2 & 15<i32>) + -4<i32> & -4<i32>) + 4<i32>
	a2 = a2 & 3<i32>
	a5_14 = a5_14 + a4
	a1 = a1 + a4
l2306D0D0:
	a5_14 = a0
l2306D0D4:
	a3_13 = a2 + -1<i32>
	branch a2 == 0<32> l2306D1B0
l2306D1B0:
	a4Out = a4
	a5Out = a5_14
	return a3_13
l2306D0DC:
	word32 a3_72 = a5_14 + (a3_13 + 1<i32>)
l2306D0E4:
	a1 = a1 + 1<i32>
	word32 a4_76 = CONVERT(Mem75[a1 + -1<i32>:byte], byte, word32)
	a5_14 = a5_14 + 1<i32>
	Mem79[a5_14 + 4095<i32>:byte] = SLICE(a4_76, byte, 0)
	branch a5_14 != a3_72 l2306D0E4
l2306D0F8:
	a4Out = a4_76
	a5Out = a5_14
	return a3_72
l2306D0A8:
	word32 a4_81 = a0 + a2
	branch a2 == 0<32> l2306D1A0
l2306D1A0:
	a4Out = a4_81
	a5Out = a5_6
	return a3
l2306D0B0:
	a5_6 = a5_6 + -1<i32>
	word32 a3_85 = CONVERT(Mem84[a5_6:byte], byte, word32)
	a4_81 = a4_81 + -1<i32>
	Mem88[a4_81:byte] = SLICE(a3_85, byte, 0)
	branch a1 != a5_6 l2306D0B0
l2306D0C4:
	a4Out = a4_81
	a5Out = a5_6
	return a3_85
memmove_exit:


word32 memset(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & t1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifiprov_wifi_state_get
//      event_cb_wifi_event
//      inode_init
//      aos_loop_init
//      event_open
//      stateGlobalGuard_scan_beacon
//      wifi_mgmr_ap_sta_info_get_internal
//      wifi_mgmr_api_ip_update
//      wifi_mgmr_api_reconnect
//      wifi_mgmr_api_disable_autoreconnect
//      wifi_mgmr_api_enable_autoreconnect
//      wifi_mgmr_api_disconnect
//      wifi_mgmr_api_ifaceup
//      wifi_mgmr_api_sniffer_enable
//      wifi_mgmr_api_scan_item_beacon
//      wifi_mgmr_api_fw_disconnect
//      wifi_mgmr_api_fw_tsen_reload
//      wifi_mgmr_api_fw_scan
//      wifi_mgmr_api_fw_powersaving
//      wifi_mgmr_api_ap_start
//      wifi_mgmr_api_ap_stop
//      wifi_mgmr_api_idle
//      wifi_mgmr_api_raw_send
//      wifi_ap_sta_list_get_cmd
//      wifi_ap_sta_delete_cmd
//      cmd_wifi_ap_start
//      wifi_denoise_disable_cmd
//      wifi_denoise_enable_cmd
//      wifi_mgmr_sta_connect
//      wifi_mgmr_ap_sta_info_get
//      wifi_mgmr_rate_config
//      wifi_mgmr_conf_max_sta
//      wifi_mgmr_cfg_req
//      wifi_mgmr_profile_add
//      wifi_mgmr_profile_get
//      cb_disconnect_ind
//      cb_connect_ind
//      bl_main_monitor
//      bl_main_apm_start
//      bl_main_apm_sta_delete
//      bl_main_connect
//      bl_send_msg
//      bl_msg_zalloc.constprop.3
//      notify_event_scan_done
//      bl_rx_chan_switch_ind
//      bl_rx_sm_connect_ind
//      bl_rx_sm_disconnect_ind
//      bl_rx_scanu_result_ind
//      bl_output
//      tcpip_stack_input
//      bl_ipc_init
//      netif_status_callback
//      bl606a0_wifi_init
//      ipc_host_init
//      hci_id_add
//      set_ad
//      bt_le_scan_update
//      le_adv_report
//      le_conn_param_req
//      bt_le_adv_start
//      bt_set_tx_pwr
//      l2cap_chan_tx_init
//      l2cap_recv
//      smp_f5
//      bt_smp_disconnected
//      compute_and_send_master_dhcheck
//      compute_and_check_and_send_slave_dhcheck
//      smp_dhkey_check
//      bt_smp_distribute_keys
//      smp_init
//      smp_c1
//      smp_pairing_random
//      bt_smp_request_ltk
//      bt_smp_update_keys
//      bt_keys_clear
//      write_func
//      ble_connect
//      discover_func
//      read_func
//      device_found
//      net_buf_unref
//      bt_rpa_irk_matches
//      _set
//      bl_find_valid_queued_entry
//      bl_onchiphci_interface_init
//      bt_conn_le_start_encryption
//      bt_conn_add_le
//      bt_conn_le_conn_update
//      sc_ccc_cfg_write
//      update_ccc
//      bt_uuid_to_str
//      bt_att_accept
//      att_read_group_req
//      att_read_mult_req
//      att_read_req
//      att_read_type_req
//      att_find_type_req
//      att_find_info_req
//      att_signed_write_cmd
//      bt_att_req_cancel
//      cmd_blog_info_dump
//      __recv_event
//      bl_ble_sync_start
//      pro_trans_init
//      cJSON_New_Item
//      print_array.isra.4
//      print_object.isra.3
//      ota_cmd
//      hexdump_cmd
//      aos_cli_init
//      aos_cli_printf
//      proc_onecmd
//      ls_cmd
//      cli_getchar
//      aos_cli_input_direct
//      get_dns_request
//      dns_server_init
//      write_status
//      format_sector.constprop.16
//      move_env
//      create_env_blob
//      ef_port_init
//      prvInitialiseNewStreamBuffer
//      vStreamBufferDelete
//      prvInitialiseNewTask.isra.2
//      bl_wifi_ap_info_set
//      bl_wifi_sta_info_set
//      dev_uart_init
//      hal_gpio_init_from_dts
//      hal_board_cfg
//      loopset_led_trigger
//      dns_check_entry
//      dhcp_create_msg
//      dhcp_recv
//      dhcp_start
//      ip4_output_if_opt
//      netif_add
//      tcp_alloc
//      udp_new_ip_type
//      dhcp_server_recv
//      dhcp_server_start
//      dirent_file
//      romfs_opendir
//      romfs_register
//      aos_register_driver
//      aos_register_fs
//      Sec_Eng_SHA256_Init
//      mfg_media_read_poweroffset
//      mm_monitor_enable_req_handler
//      ps_init
//      sta_mgmt_entry_init
//      sta_mgmt_add_key
//      td_reset
//      txl_cntrl_init
//      txl_reset
//      txl_frame_init_desc
//      txl_frame_init
//      vif_mgmt_init
//      vif_mgmt_unregister
//      vif_mgmt_add_key
//      me_init
//      rxu_swdesc_upload_evt
//      scanu_init
//      scanu_rm_exist_ssid
//      _aid_list_delete
//      apm_init
//      apm_assoc_req_handler
//      ke_msg_alloc
//      GetTxEAPOLBuffer
//      init_customApp_mibs
//      supplicantInit
//      add_key_to_mac
//      add_mfp_key_to_mac
//      IsEAPOL_MICValid
//      KeyMgmtSta_PrepareEAPOLFrame
//      pmkCacheInit
//      pmkCacheNewElement
//      pmkCacheDeletePSK
//      hmac_sha256_vector
//      PrepDefaultEapolMsg
//      InitStaKeyInfo
//      prepareKDE
//      cm_InitConnection
//      ipc_emb_init
//      ipc_emb_tx_evt
//      phy_tcal_reset
//      chan_init
//      chan_ctxt_del
//      mm_env_init
//      mm_init
//      mm_sta_add
//      mm_sta_del
//      mm_bcn_init_vif
//      bl_init
//      scan_init
//      txl_cfm_init
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
//      rc_update_stats
//      rc_init
//      rxu_mgt_ind_handler
//      dbg_init
//      generate_subkey
//      bl_aes_cmac
//      Bl_hmac_md5
//      Bl_hmac_sha1
//      Bl_PRF
//      set_psk
//      wpa_MD5Transform
//      wpa_MD5Final
//      Bl_SHA1Final
//      InitializeAp
//      bl_mtd_open
//      bloop_init
//      bloop_timer_init
//      utils_hmac_sha1_fast
//      strstr
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra t1
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
memset_entry:
l2306D1BC:
	word32 t1_14 = 15<i32>
	word32 a4_25 = a0
	branch a2 <=u 15<i32> l2306D200
l2306D1C8:
	word32 a5_24 = a0 & 15<i32>
	branch (a0 & 15<i32>) != 0<32> l2306D26C
l2306D26C:
	word32 a3_10 = ((a0 & 15<i32>) << 2<u32>) + 0x2306D270<p32>
	word32 a4_16
	word32 a2_17
	word32 a5_18
	word32 t0_22
	call a3_10 + -96<i32> (retsize: 0;)
		uses: a0:a0,a1:a1_19,a2:a2,a3:a3_10,ra:ra,t0:ra
		defs: a0:a0_15,a1:a1_19,a2:a2_17,a4:a4_16,a5:a5_18,t0:t0_22,t1:t1_14
	ra = t0_22
	a5_24 = a5_18 + -16<i32>
	a4_25 = a4_16 - (a5_18 + -16<i32>)
	a2 = a2_17 + (a5_18 + -16<i32>)
	branch t1_14 >=u a2 l2306D200
l2306D294:
l2306D1D0:
	branch a1 != 0<32> l2306D254
l2306D254:
	word32 a1_29 = a1 & 255<i32>
	word32 a1_31 = a1_29 | a1_29 << 8<u32>
	a1 = a1_31 | a1_31 << 0x10<u32>
l2306D1D4:
	a2 = a2 & 15<i32>
	word32 a3_40 = (a2 & -16<i32>) + a4_25
l2306D1E0:
	Mem43[a4_25:word32] = a1
	Mem44[a4_25 + 4<i32>:word32] = a1
	Mem45[a4_25 + 8<i32>:word32] = a1
	Mem46[a4_25 + 12<i32>:word32] = a1
	a4_25 = a4_25 + 16<i32>
	branch a4_25 <u a3_40 l2306D1E0
l2306D1F8:
	branch a2 != 0<32> l2306D200
l2306D200:
	word32 a3_58 = (t1_14 - a2 << 2<u32>) + 0x2306D208<p32>
	word32 t1_73
	word32 a0_74
	word32 a4_75
	word32 a2_76
	word32 a5_77
	word32 a1_78
	word32 a3_79
	word32 ra_80
	call a3_58 + 12<i32> (retsize: 0;)
		uses: a0:a0_59,a1:a1_67,a2:a2_54,a3:a3_58,ra:ra_63,t0:0x2306D208<p32>
		defs: a0:a0_74,a1:a1_78,a2:a2_76,a3:a3_79,a4:a4_75,a5:a5_77,ra:ra_80,t1:t1_73
	t1Out = t1_73
	a0Out = a0_74
	a1Out = a1_78
	a2Out = a2_76
	a3Out = a3_79
	a4Out = a4_75
	a5Out = a5_77
	return ra_80
l2306D1FC:
	t1Out = t1_14
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3_40
	a4Out = a4_25
	a5Out = a5_24
	return ra
memset_exit:


void fn2306D210(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a3:[0..31]
// LiveOut:
// Trashed: a3
// Preserved: sp
fn2306D210_entry:
l2306D210:
	call a3 + 12<i32> (retsize: 0;)
		uses: a3:a3
	return
fn2306D210_exit:


void fn2306D214(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D214_entry:
l2306D214:
	Mem5[a4 + 14<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 13<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 12<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4 + 11<i32>:byte] = SLICE(a1, byte, 0)
	Mem9[a4 + 10<i32>:byte] = SLICE(a1, byte, 0)
	Mem10[a4 + 9<i32>:byte] = SLICE(a1, byte, 0)
	Mem11[a4 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem12[a4 + 7<i32>:byte] = SLICE(a1, byte, 0)
	Mem13[a4 + 6<i32>:byte] = SLICE(a1, byte, 0)
	Mem14[a4 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem15[a4 + 4<i32>:byte] = SLICE(a1, byte, 0)
	Mem16[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem17[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem18[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem19[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D214_exit:


void fn2306D218(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D218_entry:
l2306D218:
	Mem5[a4 + 13<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 12<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 11<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4 + 10<i32>:byte] = SLICE(a1, byte, 0)
	Mem9[a4 + 9<i32>:byte] = SLICE(a1, byte, 0)
	Mem10[a4 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem11[a4 + 7<i32>:byte] = SLICE(a1, byte, 0)
	Mem12[a4 + 6<i32>:byte] = SLICE(a1, byte, 0)
	Mem13[a4 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem14[a4 + 4<i32>:byte] = SLICE(a1, byte, 0)
	Mem15[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem16[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem17[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem18[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D218_exit:


void fn2306D21C(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D21C_entry:
l2306D21C:
	Mem5[a4 + 12<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 11<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 10<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4 + 9<i32>:byte] = SLICE(a1, byte, 0)
	Mem9[a4 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem10[a4 + 7<i32>:byte] = SLICE(a1, byte, 0)
	Mem11[a4 + 6<i32>:byte] = SLICE(a1, byte, 0)
	Mem12[a4 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem13[a4 + 4<i32>:byte] = SLICE(a1, byte, 0)
	Mem14[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem15[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem16[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem17[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D21C_exit:


void fn2306D220(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D220_entry:
l2306D220:
	Mem5[a4 + 11<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 10<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 9<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem9[a4 + 7<i32>:byte] = SLICE(a1, byte, 0)
	Mem10[a4 + 6<i32>:byte] = SLICE(a1, byte, 0)
	Mem11[a4 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem12[a4 + 4<i32>:byte] = SLICE(a1, byte, 0)
	Mem13[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem14[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem15[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem16[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D220_exit:


void fn2306D224(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D224_entry:
l2306D224:
	Mem5[a4 + 10<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 9<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4 + 7<i32>:byte] = SLICE(a1, byte, 0)
	Mem9[a4 + 6<i32>:byte] = SLICE(a1, byte, 0)
	Mem10[a4 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem11[a4 + 4<i32>:byte] = SLICE(a1, byte, 0)
	Mem12[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem13[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem14[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem15[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D224_exit:


void fn2306D228(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D228_entry:
l2306D228:
	Mem5[a4 + 9<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 7<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4 + 6<i32>:byte] = SLICE(a1, byte, 0)
	Mem9[a4 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem10[a4 + 4<i32>:byte] = SLICE(a1, byte, 0)
	Mem11[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem12[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem13[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem14[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D228_exit:


void fn2306D22C(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D22C_entry:
l2306D22C:
	Mem5[a4 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 7<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 6<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem9[a4 + 4<i32>:byte] = SLICE(a1, byte, 0)
	Mem10[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem11[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem12[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem13[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D22C_exit:


void fn2306D230(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D230_entry:
l2306D230:
	Mem5[a4 + 7<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 6<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4 + 4<i32>:byte] = SLICE(a1, byte, 0)
	Mem9[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem10[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem11[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem12[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D230_exit:


void fn2306D234(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D234_entry:
l2306D234:
	Mem5[a4 + 6<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 4<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem9[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem10[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem11[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D234_exit:


void fn2306D238(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D238_entry:
l2306D238:
	Mem5[a4 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 4<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem9[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem10[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D238_exit:


void fn2306D23C(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D23C_entry:
l2306D23C:
	Mem5[a4 + 4<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem9[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D23C_exit:


void fn2306D240(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D240_entry:
l2306D240:
	Mem5[a4 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D240_exit:


void fn2306D244(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D244_entry:
l2306D244:
	Mem5[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem7[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D244_exit:


void fn2306D248(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D248_entry:
l2306D248:
	Mem5[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	Mem6[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D248_exit:


void fn2306D24C(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memset
// MayUse:  a1:[0..7] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
fn2306D24C_entry:
l2306D24C:
	Mem5[a4:byte] = SLICE(a1, byte, 0)
	return
fn2306D24C_exit:


word32 strchr(word32 a0, word32 a1, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_cb_wifi_event
//      print_string_ptr
//      proc_onecmd
//      dhcpd_start
//      dirent_file
//      strrchr
//      strstr
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
strchr_entry:
l2306D298:
	word32 a5_13
	word32 a3_123 = a1 & 255<i32>
	branch (a1 & 255<i32>) == 0<32> l2306D378
l2306D378:
	branch (a0 & 3<i32>) == 0<32> l2306D39C
l2306D37C:
	word32 a5_8 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_8 != 0<32> l2306D390
l2306D390:
	a0 = a0 + 1<i32>
	branch (a0 & 3<i32>) != 0<32> l2306D388
l2306D388:
	a5_13 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_13 == 0<32> l2306D374
l2306D39C:
	word32 a4_16 = Mem0[a0:int32]
	a4 = ~a4_16
	a2 = 0xFEFEFEFF<32>
	a3_123 = 0x80808080<32>
	branch (a4_16 + 0xFEFEFEFF<32> & a4 & 0x80808080<32>) != 0<32> l2306D3E0
l2306D3C4:
	a0 = a0 + 4<i32>
	word32 a4_28 = Mem0[a0:int32]
	a4 = ~a4_28
	branch (a4_28 + 0xFEFEFEFF<32> & a4 & 0x80808080<32>) == 0<32> l2306D3C4
l2306D3E0:
	a5_13 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_13 == 0<32> l2306D374
l2306D3E8:
	a0 = a0 + 1<i32>
	word32 a5_41 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_41 != 0<32> l2306D3E8
l2306D3F4:
	a2Out = 0xFEFEFEFF<32>
	a3Out = 0x80808080<32>
	a4Out = a4
	a5Out = a5_41
	return a0
l2306D384:
l2306D3FC:
	a2Out = a2
	a3Out = a1 & 255<i32>
	a4Out = a4
	a5Out = a5_8
	return a0
l2306D2A4:
	branch (a0 & 3<i32>) == 0<32> l2306D2D0
l2306D2A8:
	a5_13 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_13 == 0<32> l2306D370
l2306D2B0:
	branch (a1 & 255<i32>) != a5_13 l2306D2C4
l2306D2C4:
	a0 = a0 + 1<i32>
	branch (a0 & 3<i32>) != 0<32> l2306D2B8
l2306D2B8:
	a5_13 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_13 == 0<32> l2306D370
l2306D2C0:
	branch a5_13 == (a1 & 255<i32>) l2306D374
l2306D2D0:
	word32 a1_53 = a1 & 255<i32> | (a1 & 255<i32>) << 8<u32>
	word32 a4_56 = Mem0[a0:int32]
	word32 t1_58 = a1_53 << 0x10<u32> | a1_53
	word32 a2_60 = t1_58 ^ a4_56
	a2 = ~a2_60 & a2_60 + 0xFEFEFEFF<32>
	a4 = a4_56 + 0xFEFEFEFF<32>
	branch ((~a4_56 & a4_56 + 0xFEFEFEFF<32> | a2) & 0x80808080<32>) != 0<32> l2306D350
l2306D320:
	a0 = a0 + 4<i32>
	word32 a4_75 = Mem0[a0:int32]
	word32 a2_77 = a4_75 ^ t1_58
	a4 = ~a4_75
	a2 = a2_77 + 0xFEFEFEFF<32> & ~a2_77
	branch ((a4_75 + 0xFEFEFEFF<32> & a4 | a2) & 0x80808080<32>) == 0<32> l2306D320
l2306D350:
	a5_13 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_13 == 0<32> l2306D370
l2306D358:
	branch (a1 & 255<i32>) != a5_13 l2306D364
l2306D364:
	a0 = a0 + 1<i32>
	a5_13 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_13 != 0<32> l2306D360
l2306D360:
	branch a5_13 == (a1 & 255<i32>) l2306D3F8
l2306D3F8:
	a2Out = a2
	a3Out = a1 & 255<i32>
	a4Out = a4
	a5Out = a5_13
	return a0
l2306D370:
	a0 = 0<i32>
l2306D35C:
l2306D374:
	a2Out = a2
	a3Out = a3_123
	a4Out = a4
	a5Out = a5_13
	return a0
l2306D2B4:
l2306D400:
	a2Out = a2
	a3Out = a1 & 255<i32>
	a4Out = a4
	a5Out = a5_13
	return a0
strchr_exit:


word32 strcmp(word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_partition_bus_addr
//      hal_boot2_partition_addr
//      inode_open
//      stateGlobalGuard_scan_beacon
//      cmd_wifi_cfg
//      bl_msg_update_channel_cfg
//      bt_set_name
//      cmd_blog_info_dump
//      cmd_blog_set_level
//      proc_onecmd
//      ls_cmd
//      echo_cmd
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 t0 t1 t2
// Preserved: sp
strcmp_entry:
l2306D404:
	word32 a4_5 = a0 | a1
	branch (a4_5 & 3<i32>) != 0<32> l2306D510
l2306D414:
	a5 = 0x7F7F7F7F<32>
l2306D41C:
	word32 a2_12 = Mem0[a0:int32]
	word32 a3_14 = Mem0[a1:int32]
	branch ((a2_12 & 0x7F7F7F7F<32>) + 0x7F7F7F7F<32> | (a2_12 | 0x7F7F7F7F<32>)) != -1<i32> l2306D538
l2306D438:
	branch a2_12 != a3_14 l2306D4C4
l2306D43C:
	a2_12 = Mem0[a0 + 4<i32>:int32]
	a3_14 = Mem0[a1 + 4<i32>:int32]
	branch ((a2_12 & 0x7F7F7F7F<32>) + 0x7F7F7F7F<32> | (a2_12 | 0x7F7F7F7F<32>)) != -1<i32> l2306D530
l2306D530:
	a0 = a0 + 4<i32>
	a1 = a1 + 4<i32>
l2306D538:
	branch a2_12 != a3_14 l2306D510
l2306D53C:
	a1Out = a1
	a2Out = a2_12
	a3Out = a3_14
	a4Out = a4_5 & 3<i32>
	a5Out = 0x7F7F7F7F<32>
	return 0<i32>
l2306D458:
	branch a2_12 != a3_14 l2306D4C4
l2306D45C:
	a2_12 = Mem0[a0 + 8<i32>:int32]
	a3_14 = Mem0[a1 + 8<i32>:int32]
	branch ((a2_12 & 0x7F7F7F7F<32>) + 0x7F7F7F7F<32> | (a2_12 | 0x7F7F7F7F<32>)) != -1<i32> l2306D544
l2306D544:
	a0 = a0 + 8<i32>
	a1 = a1 + 8<i32>
	branch a2_12 != a3_14 l2306D510
l2306D550:
	a1Out = a1
	a2Out = a2_12
	a3Out = a3_14
	a4Out = a4_5 & 3<i32>
	a5Out = 0x7F7F7F7F<32>
	return 0<i32>
l2306D478:
	branch a2_12 != a3_14 l2306D4C4
l2306D47C:
	a2_12 = Mem0[a0 + 12<i32>:int32]
	a3_14 = Mem0[a1 + 12<i32>:int32]
	branch ((a2_12 & 0x7F7F7F7F<32>) + 0x7F7F7F7F<32> | (a2_12 | 0x7F7F7F7F<32>)) != -1<i32> l2306D558
l2306D558:
	a0 = a0 + 12<i32>
	a1 = a1 + 12<i32>
	branch a2_12 != a3_14 l2306D510
l2306D564:
	a1Out = a1
	a2Out = a2_12
	a3Out = a3_14
	a4Out = a4_5 & 3<i32>
	a5Out = 0x7F7F7F7F<32>
	return 0<i32>
l2306D498:
	branch a2_12 != a3_14 l2306D4C4
l2306D49C:
	a2_12 = Mem0[a0 + 16<i32>:int32]
	a3_14 = Mem0[a1 + 16<i32>:int32]
	branch ((a2_12 & 0x7F7F7F7F<32>) + 0x7F7F7F7F<32> | (a2_12 | 0x7F7F7F7F<32>)) != -1<i32> l2306D56C
l2306D56C:
	a0 = a0 + 16<i32>
	a1 = a1 + 16<i32>
	branch a2_12 != a3_14 l2306D510
l2306D510:
	word32 a2_60 = CONVERT(Mem0[a0:byte], byte, word32)
	word32 a3_62 = CONVERT(Mem0[a1:byte], byte, word32)
	a0 = a0 + 1<i32>
	a1 = a1 + 1<i32>
	branch a2_60 != a3_62 l2306D528
l2306D524:
	branch a2_60 != 0<32> l2306D510
l2306D528:
	a1Out = a1
	a2Out = a2_60
	a3Out = a3_62
	a4Out = a4_5 & 3<i32>
	a5Out = a5
	return a2_60 - a3_62
l2306D578:
	a1Out = a1
	a2Out = a2_12
	a3Out = a3_14
	a4Out = a4_5 & 3<i32>
	a5Out = 0x7F7F7F7F<32>
	return 0<i32>
l2306D4B8:
	a0 = a0 + 20<i32>
	a1 = a1 + 20<i32>
	branch a2_12 == a3_14 l2306D41C
l2306D4C4:
	word32 a5_76
	word32 a4_75
	word32 a1_78
	word32 a4_72 = a2_12 << 0x10<u32>
	word32 a5_74 = a3_14 << 0x10<u32>
	branch a4_72 != a5_74 l2306D4E8
l2306D4E8:
	word32 a0_77 = (a4_72 >>u 0x10<u32>) - (a5_74 >>u 0x10<u32>)
	a4_75 = a4_72 >>u 0x10<u32>
	a5_76 = a5_74 >>u 0x10<u32>
	a1_78 = a0_77 & 255<i32>
	branch (a0_77 & 255<i32>) != 0<32> l2306D500
l2306D4FC:
	a1Out = a0_77 & 255<i32>
	a2Out = a2_12
	a3Out = a3_14
	a4Out = a4_72 >>u 0x10<u32>
	a5Out = a5_74 >>u 0x10<u32>
	return a0_77
l2306D4D0:
	a4_75 = a2_12 >>u 0x10<u32>
	a5_76 = a3_14 >>u 0x10<u32>
	word32 a0_81 = a4_75 - a5_76
	a1_78 = a0_81 & 255<i32>
	branch (a0_81 & 255<i32>) != 0<32> l2306D500
l2306D500:
	a1Out = a1_78
	a2Out = a2_12
	a3Out = a3_14
	word32 a4_84 = a4_75 & 255<i32>
	a4Out = a4_84
	word32 a5_86 = a5_76 & 255<i32>
	a5Out = a5_86
	return a4_84 - a5_86
l2306D4E4:
	a1Out = a0_81 & 255<i32>
	a2Out = a2_12
	a3Out = a3_14
	a4Out = a4_75
	a5Out = a5_76
	return a0_81
strcmp_exit:


word32 strcpy(word32 a0, word32 a1, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifiprov_wifi_state_get
//      bt_addr_le_to_str.constprop.14
//      bt_addr_le_str_real
//      cmd_blog_info_dump
//      print_number
//      print_string_ptr
//      print_array.isra.4
//      print_object.isra.3
//      ps_cmd
//      aos_cli_printf
//      vTaskList
//      bl_chip_memory_ram
//      bl_mtd_info
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a1 a4 a5
// Trashed: a1 a4 a5
// Preserved: a2 a3 a6 sp
strcpy_entry:
l2306D580:
	branch ((a0 | a1) & 3<i32>) != 0<32> l2306D60C
l2306D60C:
	word32 a5_11 = a0
l2306D610:
	word32 a4_10 = CONVERT(Mem9[a1:byte], byte, word32)
	a5_11 = a5_11 + 1<i32>
	Mem14[a5_11 + 4095<i32>:byte] = SLICE(a4_10, byte, 0)
	a1 = a1 + 1<i32>
	branch a4_10 != 0<32> l2306D610
l2306D624:
	a4Out = a4_10
	a5Out = a5_11
	return a1
l2306D58C:
	word32 a2_24
	word32 a4_16 = Mem0[a1:int32]
	branch ((a4_16 & 0x7F7F7F7F<32>) + 0x7F7F7F7F<32> | a4_16 | 0x7F7F7F7F<32>) != -1<i32> l2306D628
l2306D628:
	a2_24 = a0
l2306D5B0:
	a2_24 = a0
l2306D5B8:
	a2_24 = a2_24 + 4<i32>
	Mem32[a2_24 + 4092<i32>:word32] = a4_16
	a1 = a1 + 4<i32>
	a4_16 = Mem32[a1:int32]
	branch ((a4_16 & 0x7F7F7F7F<32>) + 0x7F7F7F7F<32> | a4_16 | 0x7F7F7F7F<32>) == -1<i32> l2306D5B8
l2306D5DC:
	word32 a5_42 = CONVERT(Mem41[a1:byte], byte, word32)
	word32 a4_43 = CONVERT(Mem41[a1 + 1<i32>:byte], byte, word32)
	word32 a3_44 = CONVERT(Mem41[a1 + 2<i32>:byte], byte, word32)
	Mem46[a2_24:byte] = SLICE(a5_42, byte, 0)
	branch a5_42 == 0<32> l2306D600
l2306D5F0:
	Mem47[a2_24 + 1<i32>:byte] = SLICE(a4_43, byte, 0)
	branch a4_43 == 0<32> l2306D600
l2306D5F8:
	Mem48[a2_24 + 2<i32>:byte] = SLICE(a3_44, byte, 0)
	branch a3_44 != 0<32> l2306D604
l2306D604:
	Mem49[a2_24 + 3<i32>:byte] = 0<8>
	a4Out = a4_43
	a5Out = a5_42
	return a1
l2306D600:
	a4Out = a4_43
	a5Out = a5_42
	return a1
strcpy_exit:


word32 strlen(word32 a0, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      app_delayed_action_bleadv
//      event_cb_wifi_event
//      event_cb_cli
//      aos_open
//      inode_open
//      inode_reserve
//      stateGlobalGuard_scan_beacon
//      wifi_mgmr_api_ap_start
//      wifi_ap_sta_delete_cmd
//      wifi_mgmr_sta_connect_ind_stat_get
//      wifi_mgmr_sta_ssid_set
//      wifi_mgmr_sta_psk_set
//      wifi_mgmr_sta_connect
//      wifi_mgmr_scan_ap_all
//      bl_send_apm_start_req
//      le_adv_update
//      bt_set_name
//      ble_start_advertise
//      ble_set_device_name
//      read_name
//      fdt_get_name
//      fdt_subnode_offset
//      fdt_getprop
//      cmd_blog_info_dump
//      cmd_blog_set_level
//      blog_hexdump_out
//      cJSON_strdup
//      update
//      print_array.isra.4
//      print_object.isra.3
//      cli_putstr
//      ps_cmd
//      aos_cli_printf
//      ls_cmd
//      aos_cli_input_direct
//      find_env_cb
//      find_env
//      del_env
//      create_env_blob
//      ef_get_env_blob
//      ef_set_env
//      ef_env_set_default
//      vTaskList
//      hal_board_cfg
//      dns_check_entry
//      dhcp_option_hostname.isra.0
//      romfs_ioctl
//      romfs_read
//      file_info
//      dirent_file
//      romfs_opendir
//      romfs_open
//      romfs_register
//      Default_Handler
//      Bl_F
//      bl60x_fw_password_hash
//      pmkCacheFindPSK
//      KeyMgmtInit
//      GenerateGTK_internal
//      cm_SetComData
//      mm_sta_add
//      set_psk
//      ap_setpsk
//      InitializeAp
//      Bl_F_fast.constprop.0
//      utils_wifi_psk_cal_fast_bin
//      strstr
// MayUse:  a0:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
strlen_entry:
l2306D630:
	word32 a4_17 = a0
	branch (a0 & 3<i32>) != 0<32> l2306D690
l2306D690:
	a4_17 = a4_17 + 1<i32>
	word32 a5_8 = CONVERT(Mem0[a4_17:byte], byte, word32)
	branch a5_8 != 0<32> l2306D68C
l2306D68C:
	branch (a4_17 & 3<i32>) == 0<32> l2306D63C
l2306D6A0:
	a1Out = a1
	a2Out = a2
	a3Out = a4_17 & 3<i32>
	word32 a4_12 = a4_17 - a0
	a4Out = a4_12
	a5Out = a5_8
	return a4_12 + -1<i32>
l2306D63C:
l2306D648:
	a4_17 = a4_17 + 4<i32>
	word32 a2_20 = Mem0[a4_17 + -4<i32>:int32]
	branch ((a2_20 & 0x7F7F7F7F<32>) + 0x7F7F7F7F<32> | a2_20 | 0x7F7F7F7F<32>) == -1<i32> l2306D648
l2306D664:
	word32 a3_27 = CONVERT(Mem0[a4_17 + -4<i32>:byte], byte, word32)
	word32 a5_30 = a4_17 - a0
	word32 a2_31 = CONVERT(Mem0[a4_17 + -3<i32>:byte], byte, word32)
	word32 a0_32 = CONVERT(Mem0[a4_17 + -2<i32>:byte], byte, word32)
	branch a3_27 == 0<32> l2306D6B4
l2306D6B4:
	a1Out = -1<i32>
	a2Out = a2_31
	a3Out = a3_27
	a4Out = a4_17
	a5Out = a5_30
	return a5_30 + -4<i32>
l2306D678:
	branch a2_31 == 0<32> l2306D6AC
l2306D6AC:
	a1Out = -1<i32>
	a2Out = a2_31
	a3Out = a3_27
	a4Out = a4_17
	a5Out = a5_30
	return a5_30 + -3<i32>
l2306D67C:
	a1Out = -1<i32>
	a2Out = a2_31
	a3Out = a3_27
	a4Out = a4_17
	a5Out = a5_30
	return CONVERT(a0_32 != 0<32>, bool, word32) + a5_30 + -2<i32>
strlen_exit:


word32 strncmp(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      inode_open
//      proc_onecmd
//      aos_cli_input_direct
//      find_env_cb
//      find_env
//      romfs_open
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
strncmp_entry:
l2306D6BC:
	branch a2 == 0<32> l2306D790
l2306D6C0:
	word32 a2_43
	word32 a5_6 = a0 | a1
	a5 = a5_6 & 3<i32>
	branch (a5_6 & 3<i32>) != 0<32> l2306D748
l2306D6CC:
	a5 = 3<i32>
	branch a2 <=u 3<i32> l2306D748
l2306D6D4:
	a5 = Mem0[a0:int32]
	a4 = Mem0[a1:int32]
	branch a5 != a4 l2306D798
l2306D6E0:
	a2 = a2 + -4<i32>
	branch a2 == 0xFFFFFFFC<32> l2306D790
l2306D6E8:
	word32 a5_18 = a5 + 0xFEFEFEFF<32> & ~a5
	a4 = a5 + 0xFEFEFEFF<32>
	a5 = a5_18 & 0x80808080<32>
	branch (a5_18 & 0x80808080<32>) != 0<32> l2306D790
l2306D70C:
l2306D73C:
	a0 = a0 + 4<i32>
	a1 = a1 + 4<i32>
	branch a2 >u 3<i32> l2306D714
l2306D714:
	a4 = Mem0[a0:int32]
	word32 a5_34 = a4 + 0xFEFEFEFF<32> & ~a4
	a3 = Mem0[a1:int32]
	a5 = a5_34 & 0x80808080<32>
	branch a4 != a3 l2306D798
l2306D798:
	a4 = CONVERT(Mem0[a0:byte], byte, word32)
	a3 = CONVERT(Mem0[a1:byte], byte, word32)
	a2_43 = a2 + -1<i32>
	branch a3 == a4 l2306D75C
l2306D7A8:
l2306D730:
	a2 = a2 + -4<i32>
	branch a2 == 0<32> l2306D790
l2306D738:
	branch (a5_34 & 0x80808080<32>) != 0<32> l2306D790
l2306D748:
	a4 = CONVERT(Mem0[a0:byte], byte, word32)
	a3 = CONVERT(Mem0[a1:byte], byte, word32)
	a2_43 = a2 + -1<i32>
	branch a3 != a4 l2306D788
l2306D758:
	branch a2_43 == 0<32> l2306D790
l2306D75C:
	branch a4 == 0<32> l2306D790
l2306D760:
	a5 = a0 + 1<i32>
	word32 a2_56 = a0 + a2_43
l2306D778:
	a1 = a1 + 1<i32>
	a4 = CONVERT(Mem0[a5:byte], byte, word32)
	a3 = CONVERT(Mem0[a1:byte], byte, word32)
	branch a4 == a3 l2306D76C
l2306D76C:
	branch a2_56 == a5 l2306D790
l2306D770:
	a5 = a5 + 1<i32>
	branch a4 == 0<32> l2306D790
l2306D790:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return 0<i32>
l2306D788:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return a4 - a3
strncmp_exit:


word32 strncpy(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_cb_wifi_event
//      stateGlobalGuard_scan_beacon
//      wifi_mgmr_set_country_code_internal
//      bt_set_name
//      blog_hexdump_out
//      ota_cmd
//      aos_cli_input_direct
//      move_env
//      romfs_readdir
//      get_bytearray_from_string
//      bl_mtd_open
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a1 a3 a4 a5
// Trashed: a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
strncpy_entry:
l2306D7AC:
	word32 a4_25
	word32 a5_5 = a1 | a0
	word32 a5_24 = a5_5 & 3<i32>
	branch (a5_5 & 3<i32>) != 0<32> l2306D828
l2306D828:
	a4_25 = a0
l2306D7B8:
	a5_24 = 3<i32>
	a4_25 = a0
	branch a2 >u 3<i32> l2306D830
l2306D830:
l2306D844:
	a3 = Mem17[a1:int32]
	word32 a5_22 = a3 + 0xFEFEFEFF<32> & ~a3
	a5_24 = a5_22 & 0x80808080<32>
	branch (a5_22 & 0x80808080<32>) != 0<32> l2306D7C8
l2306D85C:
	a4_25 = a4_25 + 4<i32>
	Mem29[a4_25 + 4092<i32>:word32] = a3
	a2 = a2 + -4<i32>
	a1 = a1 + 4<i32>
	branch a2 >u 3<i32> l2306D844
l2306D870:
l2306D7C4:
	branch a2 == 0<32> l2306D824
l2306D7C8:
	word32 a6_46
	word32 a6_38 = CONVERT(Mem35[a1:byte], byte, word32)
	Mem44[a4_25:byte] = SLICE(a6_38, byte, 0)
	a3 = a2 + -1<i32>
	a1 = a1 + 1<i32>
	a5_24 = a4_25 + 1<i32>
	branch a6_38 == 0<32> l2306D80C
l2306D80C:
	a6_46 = a3
l2306D7E0:
	word32 a2_47 = a4_25 + a2
	a3 = a4_25 + a3
l2306D7FC:
	a1 = a1 + 1<i32>
	a6_46 = a3 - a5_24
	branch a5_24 != a2_47 l2306D7EC
l2306D7EC:
	a4_25 = CONVERT(Mem55[a1 + -1<i32>:byte], byte, word32)
	a5_24 = a5_24 + 1<i32>
	Mem58[a5_24 + 4095<i32>:byte] = SLICE(a4_25, byte, 0)
	branch a4_25 == 0<32> l2306D810
l2306D810:
	a4_25 = a5_24 + a6_46
	branch a6_46 == 0<32> l2306D874
l2306D874:
	a3Out = a3
	a4Out = a4_25
	a5Out = a5_24
	return a1
l2306D818:
	a5_24 = a5_24 + 1<i32>
	Mem64[a5_24 + 4095<i32>:byte] = 0<8>
	branch a5_24 != a4_25 l2306D818
l2306D824:
	a3Out = a3
	a4Out = a4_25
	a5Out = a5_24
	return a1
l2306D808:
	a3Out = a3
	a4Out = a4_25
	a5Out = a5_24
	return a1
strncpy_exit:


word32 strnlen(word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      flt
//      fdt_stringlist_count
//      fdt_stringlist_get
//      two_way_long_needle
//      strstr
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
strnlen_entry:
l2306D878:
	branch a1 == 0<32> l2306D8A0
l2306D87C:
	a5 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5 == 0<32> l2306D8B4
l2306D8B4:
	a1 = 0<i32>
l2306D884:
	a3 = a0 + a1
	a5 = a0
l2306D898:
	a5 = a5 + 1<i32>
	branch a5 != a3 l2306D890
l2306D890:
	a4 = CONVERT(Mem0[a5:byte], byte, word32)
	branch a4 == 0<32> l2306D8A8
l2306D8A8:
	word32 a1_16 = a5 - a0
	a1Out = a1_16
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return a1_16
l2306D8A0:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return a1
strnlen_exit:


word32 strrchr(word32 a0, word32 a1, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_name
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: ra s0 s1 sp
strrchr_entry:
l2306D8BC:
	branch a1 == 0<32> l2306D910
l2306D910:
l2306D910_thunk_strchr:
	word32 a5_8
	word32 a2_70
	word32 a3_71
	word32 a4_72
	word32 a0_9 = strchr(a0, a1, out a2_70, out a3_71, out a4_72, out a5_8)
	a5Out = a5_8
	return a0_9
l2306D8C0:
	word32 a5_22 = a0
	word32 s1_23 = 0<i32>
l2306D8E8:
	word32 a5_31
	word32 a2_67
	word32 a3_68
	word32 a4_69
	word32 a0_32 = strchr(a5_22, a1, out a2_67, out a3_68, out a4_69, out a5_31)
	branch a0_32 != 0<32> l2306D8E0
l2306D8E0:
	a5_22 = a0_32 + 1<i32>
	s1_23 = a0_32
l2306D8F8:
	a5Out = a5_31
	return s1_23
strrchr_exit:


word32 two_way_long_needle(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strstr
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
two_way_long_needle_entry:
l2306D914:
	word32 s10_221 = a1
	word32 s7_125 = 1<i32>
	word32 a3_39 = 1<i32>
	word32 a2_40 = 0<i32>
	word32 s11_41 = -1<i32>
l2306D96C:
	word32 a5_48 = a3_39 + a2_40
	word32 a4_46 = a2 + s11_41 + a3_39
	word32 a1_49 = a2 + a5_48
	branch a5_48 >=u a3 l2306D9AC
l2306D980:
	word32 a1_53 = CONVERT(Mem33[a1_49:byte], byte, word32)
	word32 a4_55 = CONVERT(Mem33[a4_46:byte], byte, word32)
	branch a1_53 >=u a4_55 l2306DB78
l2306DB78:
	branch a1_53 == a4_55 l2306DC04
l2306DC04:
	branch a3_39 == s7_125 l2306DD60
l2306DD60:
	a2_40 = a5_48
	a3_39 = 1<i32>
l2306DC08:
	a3_39 = a3_39 + 1<i32>
l2306DB7C:
	s11_41 = a2_40
	s7_125 = 1<i32>
	a2_40 = a2_40 + 1<i32>
	a3_39 = 1<i32>
l2306D98C:
	a5_48 = a5_48 + 1<i32>
	a2_40 = a5_48
	a3_39 = 1<i32>
	s7_125 = a5_48 - s11_41
	a4_46 = a2 + s11_41 + 1<i32>
	a1_49 = a2 + a5_48
	branch a5_48 <u a3 l2306D980
l2306D9AC:
	word32 a7_103 = 1<i32>
	word32 a3_100 = 1<i32>
	word32 a2_101 = 0<i32>
	word32 a1_102 = -1<i32>
l2306D9BC:
	word32 a5_113 = a3_100 + a2_101
	word32 a4_112 = a2 + a1_102 + a3_100
	word32 a0_114 = a2 + a5_113
	branch a5_113 >=u a3 l2306D9FC
l2306D9D0:
	word32 a0_92 = CONVERT(Mem33[a0_114:byte], byte, word32)
	word32 a4_94 = CONVERT(Mem33[a4_112:byte], byte, word32)
	branch a4_94 >=u a0_92 l2306DB90
l2306DB90:
	branch a0_92 == a4_94 l2306DC10
l2306DC10:
	branch a3_100 == a7_103 l2306DD54
l2306DD54:
	a2_101 = a5_113
	a3_100 = 1<i32>
l2306DC14:
	a3_100 = a3_100 + 1<i32>
l2306DB94:
	a1_102 = a2_101
	a7_103 = 1<i32>
	a2_101 = a2_101 + 1<i32>
	a3_100 = 1<i32>
l2306D9DC:
	a5_113 = a5_113 + 1<i32>
	a2_101 = a5_113
	a3_100 = 1<i32>
	a7_103 = a5_113 - a1_102
	a4_112 = a2 + a1_102 + 1<i32>
	a0_114 = a2 + a5_113
	branch a5_113 <u a3 l2306D9D0
l2306D9FC:
	word32 a1_117 = a1_102 + 1<i32>
	word32 s11_122 = s11_41 + 1<i32>
	branch a1_117 <u s11_122 l2306DA10
l2306DA08:
	s7_125 = a7_103
	s11_122 = a1_117
l2306DA10:
	word32 a5_134 = fp + -1088<i32>
l2306DA18:
	Mem138[a5_134:word32] = a3
	a5_134 = a5_134 + 4<i32>
	branch fp + -64<i32> != a5_134 l2306DA18
l2306DA24:
	word32 a1_145 = a2 + a3
	word32 a4_146 = a2
	word32 a2_147 = a2 + (a3 + -1<i32>)
	branch a3 == 0<32> l2306DA58
l2306DA38:
	Mem158[fp + -64<i32> + (CONVERT(Mem149[a4_146:byte], byte, word32) << 2<u32>) + 3072<i32>:word32] = a2_147 - a4_146
	a4_146 = a4_146 + 1<i32>
	branch a4_146 != a1_145 l2306DA38
l2306DA58:
	word32 a5_1204
	word32 a0_1153
	word32 a5_1274
	word32 a1_1271
	word32 a2_1272
	word32 a4_1273
	word32 a3_1181
	branch memcmp(a2, a2 + s7_125, s11_122, out a1_1271, out a2_1272, out a3_1181, out a4_1273, out a5_1274) != 0<32> l2306DC1C
l2306DC1C:
	word32 s7_186 = a3 - s11_122
	branch s7_186 <u s11_122 l2306DD4C
l2306DD4C:
	s7_186 = s11_122
l2306DC24:
	word32 s5_189 = s11_122 + -1<i32>
	word32 a5_192 = a2 + s5_189
	word32 s7_196 = s7_186 + 1<i32>
	word32 s8_197 = 0<i32>
	word32 s6_202 = s11_122 + -2<i32>
	word32 s4_203 = 1<i32> - s11_122
l2306DC50:
	word32 a1_208 = a0 + s8_197
	Mem211 = Mem201 (alias)
	word32 a5_217 = Mem211[fp + -64<i32> + (CONVERT(Mem211[a1_208 + (a3 + -1<i32>):byte], byte, word32) << 2<u32>) + -1024<i32>:int32]
	branch a5_217 == 0<32> l2306DCB4
l2306DC70:
	s8_197 = s8_197 + a5_217
l2306DC74:
	Mem239 = Mem201 (alias)
	branch s10_221 - a3 >=u s8_197 l2306DC50
l2306DC7C:
	word32 a1_1278
	word32 a4_1279
	word32 a5_1280
	s10_221 = s10_221 + strnlen(a0 + s10_221, a3 | 0x800<32>, out a1_1278, out a3_1181, out a4_1279, out a5_1280)
	a5_1204 = s10_221 - a3
	branch a5_1204 <u s8_197 l2306DAF0
l2306DC94:
	a1_208 = a0 + s8_197
	a5_217 = Mem239[fp + -64<i32> + (CONVERT(Mem239[a1_208 + (a3 + -1<i32>):byte], byte, word32) << 2<u32>) + -1024<i32>:int32]
	branch a5_217 != 0<32> l2306DC70
l2306DCB4:
	Mem256 = Mem201 (alias)
	branch s11_122 >=u a3 + -1<i32> l2306DCF4
l2306DCB8:
	word32 a5_259 = s11_122
	branch CONVERT(Mem256[a1_208 + s11_122:byte], byte, word32) == CONVERT(Mem256[a2 + s11_122:byte], byte, word32) l2306DCE0
l2306DCE0:
	a5_259 = a5_259 + 1<i32>
	word32 a2_265 = a2 + a5_259
	word32 a4_267 = a0 + (s8_197 + a5_259)
	branch a5_259 <u a3 + -1<i32> l2306DCD4
l2306DCD4:
	branch CONVERT(Mem256[a2_265:byte], byte, word32) != CONVERT(Mem256[a4_267:byte], byte, word32) l2306DD40
l2306DCF4:
	a5_1204 = -1<i32>
	branch s5_189 == -1<i32> l2306DD80
l2306DCFC:
	branch CONVERT(Mem256[a1_208 + s5_189:byte], byte, word32) != CONVERT(Mem256[a5_192:byte], byte, word32) l2306DD38
l2306DD10:
	a5_1204 = a2 + s6_202
	word32 a4_300 = a0 + (s8_197 + s6_202)
l2306DD20:
	branch a5_1281 == a2 + -1<i32> l2306DD80
l2306DD80:
	a0_1153 = a1_208
l2306DD24:
	a5_1204 = a5_1281 + -1<i32>
	a4_300 = a4_1282 + -1<i32>
	a5_1281 = a5_1204
	a4_1282 = a4_300
	branch CONVERT(Mem256[a5_1281:byte], byte, word32) == CONVERT(Mem256[a4_1282:byte], byte, word32) l2306DD20
l2306DD38:
	s8_197 = s8_197 + s7_196
l2306DCD0:
l2306DD40:
	a3_1181 = s4_203 + s8_197
	s8_197 = a3_1181 + a5_259
l2306DA6C:
	word32 s5_332 = s11_122 + -1<i32>
	word32 a5_343 = a0 + s5_332
	word32 a5_347 = a2 + s5_332
	word32 s6_349 = 0<i32>
	word32 s8_350 = 0<i32>
	word32 s4_352 = 1<i32> - s11_122
l2306DA9C:
	word32 a2_356 = a0 + s8_350
	a5_1204 = Mem351[fp + -64<i32> + (CONVERT(Mem351[a2_356 + (a3 + -1<i32>):byte], byte, word32) << 2<u32>) + -1024<i32>:int32]
	branch a5_1204 == 0<32> l2306DB30
l2306DB30:
	a5_1204 = s6_349
	branch s6_349 >=u s11_122 l2306DB3C
l2306DB38:
	a5_1204 = s11_122
l2306DB3C:
	branch a5_1204 >=u a3 + -1<i32> l2306DBA8
l2306DB40:
	word32 a3_375 = a0 + a5_1204 + s8_350
	word32 a4_378 = a2 + a5_1204
l2306DB64:
	branch CONVERT(Mem351[a3_375:byte], byte, word32) == CONVERT(Mem351[a4_378:byte], byte, word32) l2306DB50
l2306DB50:
	a5_1204 = a5_1204 + 1<i32>
	a3_375 = a2 + a5_1204
	a4_378 = a0 + (a5_1204 + s8_350)
	branch a5_1204 >=u a3 + -1<i32> l2306DBA8
l2306DBA8:
	a3_1181 = s5_332
	branch s6_349 >=u s11_122 l2306DD6C
l2306DBB0:
	a5_1204 = CONVERT(Mem351[a5_347:byte], byte, word32)
	branch CONVERT(Mem351[a5_343 + s8_350:byte], byte, word32) == a5_1204 l2306DBDC
l2306DBDC:
	word32 a4_416 = a3_1181 + -1<i32>
	word32 a1_420 = a2 + a4_416
	a5_1204 = a0 + (a4_416 + s8_350)
	branch s6_349 != a3_1181 l2306DBCC
l2306DBCC:
	a5_1204 = CONVERT(Mem351[a5_1204:byte], byte, word32)
	branch CONVERT(Mem351[a1_420:byte], byte, word32) != a5_1204 l2306DBF0
l2306DBD8:
	a3_1181 = a4_416
l2306DBF0:
	branch a3_1181 <u s6_349 + 1<i32> l2306DD78
l2306DBC8:
l2306DD6C:
	a3_1181 = s11_122
	branch s11_122 >=u s6_349 + 1<i32> l2306DBF8
l2306DBF8:
	s8_350 = s8_350 + s7_125
	s6_349 = a3 - s7_125
l2306DD78:
	a0_1153 = a2_356
l2306DB70:
	s8_350 = s4_352 + s8_350
l2306DABC:
	branch s6_349 == 0<32> l2306DAC8
l2306DAC0:
	branch a5_1204 >=u s7_125 l2306DAC8
l2306DAC4:
	a5_1204 = a3 - s7_125
l2306DAC8:
	s8_350 = s8_350 + a5_1204
	s6_349 = 0<i32>
l2306DAD0:
	branch s10_221 - a3 >=u s8_350 l2306DA9C
l2306DAD8:
	word32 a1_1275
	word32 a5_1277
	word32 a4_1276
	s10_221 = s10_221 + strnlen(a0 + s10_221, a3 | 0x800<32>, out a1_1275, out a3_1181, out a4_1276, out a5_1277)
	a5_1204 = s10_221 - a3
	branch a5_1204 >=u s8_350 l2306DA9C
l2306DAF0:
	a0_1153 = 0<i32>
l2306DAF4:
	a3Out = a3_1181
	a5Out = a5_1204
	return a0_1153
two_way_long_needle_exit:


word32 strstr(word32 ra, word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_blog_info_dump
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1
// Preserved: ra s0 s1 s2 s3 s4 s5 sp
strstr_entry:
l2306DD88:
	word32 a1_20 = CONVERT(Mem17[a1:byte], byte, word32)
	word32 s0_121 = a0
	branch a1_20 == 0<32> l2306DEAC
l2306DDB8:
	a3 = CONVERT(Mem17[a1 + 1<i32>:byte], byte, word32)
	branch a3 == 0<32> l2306DF64
l2306DF64:
	word32 a4_406
	word32 a2_405
	s0_121 = strchr(a0, a1_20, out a2_405, out a3, out a4_406, out a5)
l2306DDC0:
	word32 a2_34 = CONVERT(Mem17[a1 + 2<i32>:byte], byte, word32)
	branch a2_34 == 0<32> l2306DED4
l2306DED4:
	a5 = CONVERT(Mem17[a0:byte], byte, word32)
	word32 a1_37 = a1_20 << 0x10<u32> | a3
	branch a5 == 0<32> l2306DF5C
l2306DEE4:
	a3 = a0 + 1<i32>
	word32 a4_39 = CONVERT(Mem17[a0 + 1<i32>:byte], byte, word32)
l2306DEF4:
	a5 = a4_39 | a5 << 0x10<u32>
	branch a4_39 == 0<32> l2306DF5C
l2306DF00:
	word32 a2_45 = a3 + 1<i32>
	a4_39 = CONVERT(Mem17[a3 + 1<i32>:byte], byte, word32)
	branch a1_37 != a5 l2306DEF0
l2306DEF0:
	a3 = a2_45
l2306DF0C:
	s0_121 = a3 + -1<i32>
l2306DDC8:
	word32 a4_51 = CONVERT(Mem17[a1 + 3<i32>:byte], byte, word32)
	branch a4_51 == 0<32> l2306DF70
l2306DF70:
	word32 a4_52 = CONVERT(Mem17[a0:byte], byte, word32)
	a5 = a1_20 << 0x18<u32> | a3 << 0x10<u32> | a2_34 << 8<u32>
	branch a4_52 == 0<32> l2306DF5C
l2306DF8C:
	word32 a4_58 = a4_52 << 8<u32>
	word32 a2_59 = a0 + 1<i32>
	a3 = CONVERT(Mem17[a0 + 1<i32>:byte], byte, word32)
l2306DFA0:
	word32 a4_63 = a3 | a4_58
	a4_58 = a4_63 << 8<u32>
	branch a3 == 0<32> l2306DF5C
l2306DFAC:
	word32 a1_66 = a2_59 + 1<i32>
	a3 = CONVERT(Mem17[a2_59 + 1<i32>:byte], byte, word32)
	branch a5 != a4_63 << 8<u32> l2306DF9C
l2306DF9C:
	a2_59 = a1_66
l2306DFB8:
	s0_121 = a2_59 + -2<i32>
l2306DDD0:
	branch CONVERT(Mem17[a1 + 4<i32>:byte], byte, word32) == 0<32> l2306DF14
l2306DF14:
	a3 = CONVERT(Mem17[a0:byte], byte, word32)
	a5 = a1_20 << 0x18<u32> | a3 << 0x10<u32> | a4_51 | a2_34 << 8<u32>
	branch a3 == 0<32> l2306DF5C
l2306DF34:
	word32 a4_80 = 0<i32>
l2306DF44:
	a4_80 = a3 | a4_80 << 8<u32>
	a3 = CONVERT(Mem17[s0_121 + 1<i32>:byte], byte, word32)
	word32 a2_88 = s0_121 + 1<i32>
	branch a3 != 0<32> l2306DF3C
l2306DF3C:
	branch a5 == a4_80 l2306DFE4
l2306DF40:
	s0_121 = a2_88
l2306DF58:
	branch a5 == a4_80 l2306DFE4
l2306DFE4:
	s0_121 = s0_121 + -3<i32>
l2306DDD8:
	word32 a1_407
	word32 a4_410
	word32 a2_408
	word32 a3_409
	word32 a5_411
	word32 a0_94 = strlen(a1, out a1_407, out a2_408, out a3_409, out a4_410, out a5_411)
	word32 a1_412
	word32 a4_413
	word32 a0_103 = strnlen(a0, a0_94 | 512<i32>, out a1_412, out a3, out a4_413, out a5)
	branch a0_103 <u a0_94 l2306DF5C
l2306DDF4:
	branch a0_94 >u 254<i32> l2306DFEC
l2306DFEC:
	s0_121 = two_way_long_needle(a0, a0_103, a1, a0_94, out a3, out a5)
l2306DDFC:
	word32 a1_416
	word32 a2_417
	word32 a5_419
	word32 t1_414
	word32 a0_415
	word32 a4_418
	memset(ra, fp + -96<i32>, a0_94 + 1<i32>, 64<i32>, out t1_414, out a0_415, out a1_416, out a2_417, out a3, out a4_418, out a5_419)
	word32 s3_126 = a0 + (a0_103 - a0_94)
	branch a0_94 == 0<32> l2306DE48
l2306DE18:
	word32 a4_137 = a1
	word32 a1_138 = a0_94 + a1
	word32 a2_139 = a1 + (a0_94 & 255<i32>)
l2306DE28:
	a3 = a2_139 - a4_137
	Mem150[fp + -32<i32> + (CONVERT(Mem141[a4_137:byte], byte, word32) & 63<i32>) + 4032<i32>:byte] = SLICE(a3, byte, 0)
	a4_137 = a4_137 + 1<i32>
	branch a1_138 != a4_137 l2306DE28
l2306DE48:
l2306DE50:
	word32 s0_155 = s0_121 + -1<i32>
	s0_121 = s0_155 + CONVERT(Mem231[((fp + -32<i32>) + (CONVERT(Mem231[s0_155 + a0_94:byte], byte, word32) & 63<i32>)) + -64<i32>:byte], byte, word32)
	branch s3_126 >=u s0_121 l2306DE80
l2306DE80:
	word32 s4_180 = CONVERT(Mem231[fp + -32<i32> + (CONVERT(Mem231[s0_121 + a0_94:byte], byte, word32) & 63<i32>) + -64<i32>:byte], byte, word32)
	word32 a4_422
	word32 a2_421
	word32 a1_420
	branch memcmp(s0_121, a1, a0_94, out a1_420, out a2_421, out a3, out a4_422, out a5) != 0<32> l2306DE78
l2306DE78:
	s0_121 = s0_121 + s4_180
	branch s3_126 <u s0_121 l2306DFC0
l2306DE74:
l2306DFC0:
	word32 a0_191 = s3_126 + a0_94
	a5 = CONVERT(Mem231[a0_191:byte], byte, word32)
	branch a5 == 0<32> l2306DF5C
l2306DF5C:
	s0_121 = 0<i32>
l2306DFCC:
	word32 a1_423
	word32 a4_424
	s3_126 = s3_126 + strnlen(a0_191, 0x800<32>, out a1_423, out a3, out a4_424, out a5)
	branch s3_126 >=u s0_121 l2306DE50
l2306DFDC:
	s0_121 = 0<i32>
l2306DEAC:
	a3Out = a3
	a5Out = a5
	return s0_121
strstr_exit:


word32 _strtol_l.isra.0(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _strtol_r
//      strtol_l
//      strtol
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: s0 s1 sp
_strtol_l.isra.0_entry:
l2306E008:
	word32 t1_11 = a1
l2306E02C:
	word32 a4_125 = t1_11 + 1<i32>
	word32 a5_17 = CONVERT(Mem7[a4_125 + -1<i32>:byte], byte, word32)
	branch (CONVERT(Mem7[0x230825B1<p32> + a5_17:byte], byte, word32) & 8<i32>) != 0<32> l2306E028
l2306E028:
	t1_11 = a4_125
l2306E044:
	word32 a6_183
	word32 t6_46
	word32 s0_25
	branch a5_17 == 45<i32> l2306E158
l2306E158:
	a6_183 = CONVERT(Mem7[a4_125:byte], byte, word32)
	s0_25 = 1<i32>
	a4_125 = t1_11 + 2<i32>
l2306E04C:
	branch a5_17 == 43<i32> l2306E0D4
l2306E0D4:
	a6_183 = CONVERT(Mem7[a4_125:byte], byte, word32)
	s0_25 = 0<i32>
	a4_125 = t1_11 + 2<i32>
	branch a3 != 0<32> l2306E060
l2306E054:
	a6_183 = a5_17
	s0_25 = 0<i32>
l2306E05C:
	branch a3 == 0<32> l2306E0E4
l2306E0E4:
	branch a6_183 == 48<i32> l2306E1A4
l2306E1A4:
	branch (CONVERT(Mem7[a4_125:byte], byte, word32) & 223<i32>) == 88<i32> l2306E190
l2306E1B4:
	t6_46 = 8<i32>
	a3 = 8<i32>
l2306E0EC:
	t6_46 = 10<i32>
	a3 = 10<i32>
l2306E060:
	t6_46 = a3
	branch a3 == 16<i32> l2306E170
l2306E170:
	branch a6_183 != 48<i32> l2306E188
l2306E178:
	branch (CONVERT(Mem7[a4_125:byte], byte, word32) & 223<i32>) == 88<i32> l2306E190
l2306E190:
	a6_183 = CONVERT(Mem7[a4_125 + 1<i32>:byte], byte, word32)
	t6_46 = 16<i32>
	a4_125 = a4_125 + 2<i32>
	a3 = 16<i32>
l2306E188:
	t6_46 = 16<i32>
l2306E06C:
	word32 t0_122 = 0x80000000<32>
	branch s0_25 != 0<32> l2306E078
l2306E074:
	t0_122 = 0x7FFFFFFF<32>
l2306E078:
	word32 s1_78 = t0_122 & t6_46
	word32 a7_158 = 0<i32>
	word32 a0_108 = 0<i32>
	word32 t4_84 = t0_122 >>u t6_46
l2306E094:
	word32 a5_166 = a6_183 + -48<i32>
	branch a5_166 <=u 9<i32> l2306E0A8
l2306E09C:
	branch a6_183 >u -90<i32> l2306E0F8
l2306E0F8:
	branch a6_183 >u -122<i32> l2306E108
l2306E100:
	a5_166 = a6_183 + -87<i32>
	branch a5_166 < a3 l2306E0AC
l2306E0A4:
	a5_166 = a6_183 + -55<i32>
l2306E0A8:
	branch a5_166 >= a3 l2306E108
l2306E108:
	word32 a5_100 = -1<i32>
	branch a7_158 == -1<i32> l2306E13C
l2306E13C:
	Mem104[a0:word32] = 34<i32>
	a5_100 = 34<i32>
	a0_108 = t0_122
	branch a2 == 0<32> l2306E124
l2306E110:
	branch s0_25 == 0<32> l2306E118
l2306E114:
	a0_108 = 0<32> - a0_108
l2306E118:
	branch a2 == 0<32> l2306E124
l2306E11C:
	branch a7_158 != 0<32> l2306E168
l2306E168:
	t0_122 = a0_108
l2306E14C:
	a1 = a4_125 + -1<i32>
	a0_108 = t0_122
l2306E120:
	Mem138[a2:word32] = a1
l2306E124:
	a1Out = a1
	a3Out = a3
	a4Out = a4_125
	a5Out = a5_100
	return a0_108
_strtol_l.isra.0_exit:
l2306E0AC:
	branch a7_158 == -1<i32> l2306E0C8
l2306E0B0:
	a7_158 = -1<i32>
	branch t4_84 <u a0_108 l2306E0C8
l2306E0B8:
	branch t4_84 == a0_108 l2306E134
l2306E134:
	branch s1_78 < a5_166 l2306E0C8
l2306E138:
l2306E0BC:
	a7_158 = 1<i32>
	a0_108 = a5_166 + (t6_46 + a0_108)
l2306E0C8:
	a4_125 = a4_125 + 1<i32>
	a6_183 = CONVERT(Mem7[a4_125 + -1<i32>:byte], byte, word32)


void _strtol_r(word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _atoi_r
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
_strtol_r_entry:
l2306E1C0:
l2306E1C0_thunk__strtol_l.isra.0:
	word32 a1_21
	word32 a3_22
	word32 a4_23
	word32 a5_24
	_strtol_l.isra.0(a0, a1, a2, a3, out a1_21, out a3_22, out a4_23, out a5_24)
	return
_strtol_r_exit:


void strtol_l(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
strtol_l_entry:
l2306E1C4:
	word32 a0_12 = Mem0[0x4200DCC8<p32>:int32]
l2306E1DC_thunk__strtol_l.isra.0:
	word32 a1_27
	word32 a3_28
	word32 a4_29
	word32 a5_30
	_strtol_l.isra.0(a0_12, a0, a1, a2, out a1_27, out a3_28, out a4_29, out a5_30)
	return
strtol_l_exit:


word32 strtol(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mmem_cmd
//      pmem_cmd
//      get_bytearray_from_string
//      atoi
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
strtol_entry:
l2306E1E0:
	word32 a0_12 = Mem0[0x4200DCC8<p32>:int32]
l2306E1F8_thunk__strtol_l.isra.0:
	word32 a3_14
	word32 a4_15
	word32 a5_16
	word32 a1_26
	word32 a0_13 = _strtol_l.isra.0(a0_12, a0, a1, a2, out a1_26, out a3_14, out a4_15, out a5_16)
	a1Out = a1_26
	a2Out = a1
	a3Out = a3_14
	a4Out = a4_15
	a5Out = a5_16
	return a0_13
strtol_exit:


void stat(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
stat_entry:
l2306E1FC:
	word32 a0_10 = Mem0[0x4200DCC8<p32>:int32]
l2306E210_thunk__stat_r:
	_stat_r(a0_10, a0, a1)
	return
stat_exit:


void _stat_r(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stat
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: ra s0 sp
_stat_r_entry:
l2306E214:
	Mem16[0x4201A790<p32>:word32] = 0<32>
	branch _stat(a1, a2) == -1<i32> l2306E254
l2306E254:
	word32 a5_35 = Mem16[0x4201A790<p32>:int32]
	branch a5_35 == 0<32> l2306E244
l2306E264:
	Mem36[a0:word32] = a5_35
	return
l2306E244:
	return
_stat_r_exit:


word32 _stat(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _stat_r
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: ra s0 s1 sp
_stat_entry:
l2306E278:
	__syscall()
	word32 s0_19 = a0
	branch a0 < 0<32> l2306E2D4
l2306E2D4:
	word32 a5_55
	Mem23[__errno(out a5_55):word32] = 0<32> - a0
	s0_19 = -1<i32>
l2306E2B0:
	_conv_stat(a1, fp + -144<i32>)
	return s0_19
_stat_exit:


void _conv_stat(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _stat
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: s0 s1 s2 sp
_conv_stat_entry:
l2306E2E8:
	word32 t2_6 = Mem0[a1 + 20<i32>:int32]
	word32 t0_7 = Mem0[a1 + 24<i32>:int32]
	word32 t6_8 = Mem0[a1 + 28<i32>:int32]
	word32 t5_9 = Mem0[a1 + 32<i32>:int32]
	word32 t4_10 = Mem0[a1 + 48<i32>:int32]
	word32 t3_11 = Mem0[a1 + 64<i32>:int32]
	word32 t1_12 = Mem0[a1 + 56<i32>:int32]
	word32 a6_13 = Mem0[a1 + 72<i32>:int32]
	word32 a7_14 = Mem0[a1 + 76<i32>:int32]
	word32 a2_15 = Mem0[a1 + 88<i32>:int32]
	word32 s0_20 = Mem19[a1 + 16<i32>:int32]
	word32 s1_21 = Mem19[a1 + 8<i32>:int32]
	word32 a3_25 = Mem23[a1 + 92<i32>:int32]
	word32 a4_26 = Mem23[a1 + 104<i32>:int32]
	word32 a5_27 = Mem23[a1 + 108<i32>:int32]
	Mem29[a0:word16] = Mem23[a1:word16]
	Mem30[a0 + 2<i32>:word16] = SLICE(s1_21, word16, 0)
	Mem31[a0 + 4<i32>:word32] = s0_20
	Mem32[a0 + 8<i32>:word16] = SLICE(t2_6, word16, 0)
	Mem33[a0 + 10<i32>:word16] = SLICE(t0_7, word16, 0)
	Mem34[a0 + 12<i32>:word16] = SLICE(t6_8, word16, 0)
	Mem35[a0 + 14<i32>:word16] = SLICE(t5_9, word16, 0)
	Mem36[a0 + 16<i32>:word32] = t4_10
	Mem37[a0 + 72<i32>:word32] = t3_11
	Mem38[a0 + 68<i32>:word32] = t1_12
	Mem39[a0 + 24<i32>:word32] = a6_13
	Mem40[a0 + 28<i32>:word32] = a7_14
	Mem41[a0 + 40<i32>:word32] = a2_15
	Mem42[a0 + 44<i32>:word32] = a3_25
	Mem44[a0 + 56<i32>:word32] = a4_26
	Mem45[a0 + 60<i32>:word32] = a5_27
	return
_conv_stat_exit:


