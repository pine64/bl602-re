void iot_tls_is_connected()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
iot_tls_is_connected_entry:
l2305044A:
	return
iot_tls_is_connected_exit:


void iot_tls_connect(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg48)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus s11 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 sp
iot_tls_connect_entry:
l2305044E:
	branch a0 == 0<32> l23050548
l23050484:
	branch a1 == 0<32> l230504B2
l23050486:
	word32 a1_35 = Mem27[a2 + 8<i32>:word32]
	word32 a6_33 = Mem27[Mem27[a3:word32] + 4<i32>:int32]
	word32 a7_36 = Mem27[a1_35 + 12<i32>:int32]
	word32 a5_40 = CONVERT(Mem27[Mem27[a4 + 20<i32>:word32] + 24<i32>:byte], byte, word32)
	Mem41[a0 + 40<i32>:word16] = SLICE(CONVERT(Mem27[a1_35 + 16<i32>:uint16], uint16, word32), word16, 0)
	Mem42[a0 + 36<i32>:word32] = a7_36
	Mem43[a0 + 28<i32>:word32] = a6_33
	Mem44[a2 + 32<i32>:word32] = a0
	Mem45[a3 + 24<i32>:word32] = a0
	Mem46[a4 + 44<i32>:word32] = a0
	Mem47[a0 + 48<i32>:byte] = SLICE(a5_40, byte, 0)
l230504B2:
	mbedtls_net_init(a0 + 1832<i32>)
	word32 a3_104
	word32 a1_2370
	word32 a0_2369
	word32 a5_2372
	word32 a0_2373
	word32 a1_2374
	word32 a3_2371
	word32 a5_2375
	word32 ra_107 = mbedtls_x509_crt_init(mbedtls_x509_crt_init(mbedtls_ctr_drbg_init(mbedtls_ssl_config_init(mbedtls_ssl_init(ra, a0 + 892<i32>), a0 + 1084<i32>), a0 + 572<i32>), a0 + 1208<i32>, out a0_2369, out a1_2370, out a3_2371, out a5_2372), a0 + 1516<i32>, out a0_2373, out a1_2374, out a3_104, out a5_2375)
	mbedtls_pk_init(a0 + 1824<i32>)
	word32 s7_133
	word32 s9_135
	word32 s1_2376
	word32 a2_2379
	word32 a0_2377
	word32 a3_2380
	word32 a1_2378
	word32 a4_2381
	word32 a5_2382
	word32 s3_2385
	word32 a7_2383
	word32 s4_2386
	word32 s2_2384
	word32 s6_2388
	word32 s8_2389
	word32 s5_2387
	word32 s11_2391
	word32 t4_2392
	word32 s10_2390
	word32 ra_144 = mbedtls_entropy_init(printf(ra_107, 0x23087CF4<32>, a3_104, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2376, out a0_2377, out a1_2378, out a2_2379, out a3_2380, out a4_2381, out a5_2382, out a7_2383, out s2_2384, out s3_2385, out s4_2386, out s5_2387, out s6_2388, out s7_133, out s8_2389, out s9_135, out s10_2390, out s11_2391, out t4_2392), s7_133)
	word32 a3_148 = Mem115[0x4200D968<32>:int32]
	word32 a3_2395
	word32 a5_2397
	word32 a1_2393
	word32 a4_2396
	word32 a2_2394
	strlen(a3_148, out a1_2393, out a2_2394, out a3_2395, out a4_2396, out a5_2397)
	word32 dwLocCC_1704 = a3_148
	word32 a0_163
	word32 a3_166
	word32 a5_168
	word32 ra_171 = mbedtls_ctr_drbg_seed(ra_144, s9_135, 0x230563BA<32>, s7_133, dwLoc78, out a0_163, out a3_166, out a5_168)
	branch a0_163 == 0<32> l2305057E
l2305057E:
	word32 mstatus_249
	word32 a3_235
	word32 ra_237
	word32 a0_233
	branch CONVERT(Mem150[a5_168:byte], byte, word32) != 47<i32> l230505B8
l230505B8:
	dwLocCC_1704 = a1_200
	word32 a1_200
	word32 s10_207
	word32 s11_208
	word32 s2_209
	word32 s5_212
	word32 s6_213
	word32 s8_215
	word32 a3_223
	word32 a4_224
	word32 a5_225
	word32 a1_226
	word32 s4_2425
	word32 a5_2431
	word32 a1_2430
	word32 s7_2426
	word32 s9_2427
	word32 a2_2429
	word32 t4_2428
	word32 a0_2418
	word32 s3_2424
	word32 a7_2423
	word32 a2_2419
	word32 a3_2420
	word32 a5_2422
	word32 a4_2421
	word32 s1_2417
	ra_237 = mbedtls_x509_crt_parse(printf(ra_171, 0x23087D90<32>, a3_166, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2417, out a0_2418, out a1_200, out a2_2419, out a3_2420, out a4_2421, out a5_2422, out a7_2423, out s2_209, out s3_2424, out s4_2425, out s5_212, out s6_213, out s7_2426, out s8_215, out s9_2427, out s10_207, out s11_208, out t4_2428), Mem150[a1_200 + 24<i32>:word32], s6_213, a1_226, strlen(a1_200, out a1_226, out a2_2429, out a3_223, out a4_224, out a5_225) + 1<i32>, a3_223, a4_224, a5_225, s2_209, s5_212, s6_213, s8_215, s10_207, s11_208, mstatus, dwLoc014C, dwLoc0148, dwLoc0138, dwLoc012C, dwLoc0128, dwLoc011C, dwLoc0118, dwLocF8, dwLocDC, dwLocD8, dwLocBC, dwLocB8, dwLoc98, dwLoc5C, dwLoc58, dwLoc44, s4, out a0_233, out a1_2430, out a3_235, out a5_2431, out mstatus_249)
l2305058C:
	word32 a3_270
	word32 s2_277
	word32 s3_278
	word32 s4_279
	word32 s6_281
	word32 s11_2444
	word32 a5_2446
	word32 t4_2445
	word32 s10_2443
	word32 s9_2442
	word32 s8_2441
	word32 s7_2440
	word32 s5_2439
	word32 a7_2438
	word32 a5_2437
	word32 a4_2436
	word32 a2_2435
	word32 a1_2434
	word32 a0_2433
	word32 s1_2432
	ra_237 = mbedtls_x509_crt_parse_file(printf(ra_171, 0x23087D5C<32>, a3_166, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2432, out a0_2433, out a1_2434, out a2_2435, out a3_270, out a4_2436, out a5_2437, out a7_2438, out s2_277, out s3_278, out s4_279, out s5_2439, out s6_281, out s7_2440, out s8_2441, out s9_2442, out s10_2443, out s11_2444, out t4_2445), s6_281, a3_270, s2_277, s3_278, s4_279, mstatus, dwLoc014C, dwLoc0148, dwLoc013C, dwLoc0138, dwLoc012C, dwLoc0120, dwLoc011C, dwLoc0118, dwLoc010C, dwLocFC, dwLocF8, dwLocEC, dwLocDC, dwLocD8, dwLocD4, dwLocB8, dwLoc98, dwLoc7C, dwLoc78, dwLoc64, dwLoc58, dwLoc38, s4, dwArg08, dwArg28, out a0_233, out a3_235, out a5_2446, out mstatus_249)
l230505A0:
	branch a0_233 >= 0<32> l230505DC
l230505DC:
	word32 mstatus_405
	word32 a3_391
	word32 ra_393
	word32 a5_403
	word32 a0_389
	word32 a5_328
	word32 a3_332
	word32 s9_2460
	word32 s11_2462
	word32 t4_2463
	word32 s10_2461
	word32 s3_2454
	word32 s5_2456
	word32 s6_2457
	word32 s7_2458
	word32 s8_2459
	word32 s4_2455
	word32 s1_2447
	word32 a0_2448
	word32 a1_2449
	word32 a2_2450
	word32 a4_2451
	word32 a7_2452
	word32 s2_2453
	word32 ra_335 = printf(ra_237, 0x23087E14<32>, a3_235, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2447, out a0_2448, out a1_2449, out a2_2450, out a3_332, out a4_2451, out a5_328, out a7_2452, out s2_2453, out s3_2454, out s4_2455, out s5_2456, out s6_2457, out s7_2458, out s8_2459, out s9_2460, out s10_2461, out s11_2462, out t4_2463)
	branch CONVERT(Mem326[a5_328:byte], byte, word32) != 47<i32> l23050622
l23050622:
	dwLocCC_1704 = a1_357
	word32 a1_357
	word32 s10_364
	word32 s11_365
	word32 s2_366
	word32 s4_368
	word32 s5_369
	word32 s6_370
	word32 s8_372
	word32 a3_380
	word32 a4_381
	word32 a5_382
	word32 a1_383
	word32 s3_2490
	word32 s9_2492
	word32 t4_2493
	word32 a2_2494
	word32 a1_2495
	word32 s7_2491
	word32 a0_2484
	word32 a3_2486
	word32 a4_2487
	word32 a5_2488
	word32 a7_2489
	word32 a2_2485
	word32 s1_2483
	ra_393 = mbedtls_x509_crt_parse(printf(ra_335, 0x23087E58<32>, a3_332, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2483, out a0_2484, out a1_357, out a2_2485, out a3_2486, out a4_2487, out a5_2488, out a7_2489, out s2_366, out s3_2490, out s4_368, out s5_369, out s6_370, out s7_2491, out s8_372, out s9_2492, out s10_364, out s11_365, out t4_2493), Mem326[a1_357 + 28<i32>:word32], s4_368, a1_383, strlen(a1_357, out a1_383, out a2_2494, out a3_380, out a4_381, out a5_382) + 1<i32>, a3_380, a4_381, a5_382, s2_366, s5_369, s6_370, s8_372, s10_364, s11_365, mstatus_249, dwLoc014C, dwLoc0148, dwLoc0138, dwLoc012C, dwLoc0128, dwLoc011C, dwLoc0118, dwLocF8, dwLocDC, dwLocD8, dwLocBC, dwLocB8, dwLoc98, dwLoc5C, dwLoc58, dwLoc44, s4, out a0_389, out a1_2495, out a3_391, out a5_403, out mstatus_405)
l230505F8:
	word32 a3_426
	word32 s2_433
	word32 s3_434
	word32 s4_435
	word32 s10_2508
	word32 t4_2510
	word32 s11_2509
	word32 s6_2504
	word32 s8_2506
	word32 s9_2507
	word32 s7_2505
	word32 a0_2497
	word32 a2_2499
	word32 a4_2500
	word32 a5_2501
	word32 a7_2502
	word32 s5_2503
	word32 a1_2498
	word32 s1_2496
	ra_393 = mbedtls_x509_crt_parse_file(printf(ra_335, 0x23087E2C<32>, a3_332, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2496, out a0_2497, out a1_2498, out a2_2499, out a3_426, out a4_2500, out a5_2501, out a7_2502, out s2_433, out s3_434, out s4_435, out s5_2503, out s6_2504, out s7_2505, out s8_2506, out s9_2507, out s10_2508, out s11_2509, out t4_2510), s4_435, a3_426, s2_433, s3_434, s4_435, mstatus_249, dwLoc014C, dwLoc0148, dwLoc013C, dwLoc0138, dwLoc012C, dwLoc0120, dwLoc011C, dwLoc0118, dwLoc010C, dwLocFC, dwLocF8, dwLocEC, dwLocDC, dwLocD8, dwLocD4, dwLocB8, dwLoc98, dwLoc7C, dwLoc78, dwLoc64, dwLoc58, dwLoc38, s4, dwArg08, dwArg28, out a0_389, out a3_391, out a5_403, out mstatus_405)
l2305060C:
	branch a0_389 == 0<32> l23050646
l23050646:
	word32 mstatus_1054
	word32 a3_526
	word32 ra_531
	word32 a0_551
	branch CONVERT(Mem477[a5_403:byte], byte, word32) != 47<i32> l23050686
l23050686:
	dwLocCC_1704 = a1_490
	word32 a1_490
	word32 s1_496
	word32 s10_497
	word32 s11_498
	word32 s2_499
	word32 s3_500
	word32 s4_501
	word32 s7_504
	word32 a1_516
	word32 a5_2547
	word32 a4_2546
	word32 a2_2545
	word32 a2_2541
	word32 a3_2542
	word32 a4_2543
	word32 a5_2544
	word32 s6_2537
	word32 s8_2538
	word32 s9_2539
	word32 t4_2540
	word32 a4_2533
	word32 a5_2534
	word32 a7_2535
	word32 s5_2536
	word32 a0_2530
	word32 a2_2531
	word32 a3_2532
	ra_531 = mbedtls_pk_parse_key(printf(ra_393, 0x23087F0C<32>, a3_391, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_496, out a0_2530, out a1_490, out a2_2531, out a3_2532, out a4_2533, out a5_2534, out a7_2535, out s2_499, out s3_500, out s4_501, out s5_2536, out s6_2537, out s7_504, out s8_2538, out s9_2539, out s10_497, out s11_498, out t4_2540), Mem477[a1_490 + 32<i32>:word32], s1_496, a1_516, strlen(a1_490, out a1_516, out a2_2541, out a3_2542, out a4_2543, out a5_2544) + 1<i32>, 0<32>, s2_499, s3_500, s4_501, s7_504, s10_497, s11_498, mstatus_405, dwLoc014C, dwLoc0148, dwLoc013C, dwLoc0138, dwLoc012C, dwLoc0128, dwLoc011C, dwLoc0118, dwLoc010C, dwLoc0108, dwLocEC, dwLocE8, dwLocDC, dwLocD8, dwLocC8, dwLocB8, dwLocA8, dwLoc98, dwLoc88, dwLoc78, dwLoc68, dwLoc58, dwLoc48, dwLoc38, s0, dwArg48, out a0_551, out a2_2545, out a3_526, out a4_2546, out a5_2547, out mstatus_1054)
l23050658:
	word32 a1_558
	word32 a3_560
	word32 s3_568
	word32 s4_569
	word32 s5_570
	word32 s7_572
	word32 t4_2560
	word32 s9_2557
	word32 s10_2558
	word32 s11_2559
	word32 s8_2556
	word32 s6_2555
	word32 s2_2554
	word32 a7_2553
	word32 a5_2552
	word32 a4_2551
	word32 a2_2550
	word32 a0_2549
	word32 s1_2548
	ra_531 = mbedtls_pk_parse_keyfile(printf(ra_393, 0x23087EDC<32>, a3_391, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2548, out a0_2549, out a1_558, out a2_2550, out a3_560, out a4_2551, out a5_2552, out a7_2553, out s2_2554, out s3_568, out s4_569, out s5_570, out s6_2555, out s7_572, out s8_2556, out s9_2557, out s10_2558, out s11_2559, out t4_2560), Mem477[a1_558 + 32<i32>:word32], s5_570, s7_572 + -416<i32>, a3_560, s3_568, s4_569, mstatus_405, dwLoc014C, dwLoc0148, dwLoc013C, dwLoc0138, dwLoc0130, dwLoc012C, dwLoc011C, dwLoc0118, dwLoc010C, dwLoc0108, dwLocF8, dwLocE8, dwLocE4, dwLocD8, dwLocC8, dwLocB8, dwLocA8, dwLoc98, dwLoc88, dwLoc78, dwLoc68, dwLoc48, dwLoc38, s8, s0, dwArg18, out a0_551, out a3_526, out mstatus_1054)
l23050670:
	branch a0_551 == 0<32> l230506B0
l230506B0:
	word32 a3_648
	word32 a1_675
	word32 s1_681
	word32 s2_684
	word32 a0_699
	word32 a3_702
	word32 s3_711
	word32 s10_725
	word32 t4_2613
	word32 s9_2610
	word32 s10_2611
	word32 s11_2612
	word32 s6_2607
	word32 s7_2608
	word32 s8_2609
	word32 s5_2606
	word32 s3_2604
	word32 s4_2605
	word32 a0_2598
	word32 a2_2599
	word32 a3_2600
	word32 a4_2601
	word32 a5_2602
	word32 a7_2603
	word32 s10_2596
	word32 s11_2597
	word32 s7_2593
	word32 s8_2594
	word32 s9_2595
	word32 s3_2589
	word32 s4_2590
	word32 s5_2591
	word32 s6_2592
	word32 s2_2588
	word32 a2_2584
	word32 a4_2585
	word32 a5_2586
	word32 a7_2587
	word32 a1_2583
	word32 s0_2580
	word32 s1_2581
	word32 a0_2582
	word32 t4_2579
	word32 s11_2578
	word32 s9_2576
	word32 s10_2577
	word32 s7_2574
	word32 s8_2575
	word32 s5_2572
	word32 s6_2573
	word32 s3_2570
	word32 s4_2571
	word32 a7_2568
	word32 s2_2569
	word32 a4_2566
	word32 a5_2567
	word32 a3_2565
	word32 a2_2564
	word32 a1_2563
	word32 a0_2562
	word32 s1_2561
	word32 ra_1499 = mbedtls_net_connect(printf(snprintf(printf(ra_531, 0x23087F8C<32>, a3_526, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2561, out a0_2562, out a1_2563, out a2_2564, out a3_2565, out a4_2566, out a5_2567, out a7_2568, out s2_2569, out s3_2570, out s4_2571, out s5_2572, out s6_2573, out s7_2574, out s8_2575, out s9_2576, out s10_2577, out s11_2578, out t4_2579), fp + -312<i32>, 6<32>, 0x230899B8<32>, dwLoc0138, dwLoc0118, dwLocEC, dwLocD0, dwLocCC_1704, dwLocA8, dwLoc84, out s0_2580, out s1_2581, out a0_2582, out a1_2583, out a2_2584, out a3_648, out a4_2585, out a5_2586, out a7_2587, out s2_2588, out s3_2589, out s4_2590, out s5_2591, out s6_2592, out s7_2593, out s8_2594, out s9_2595, out s10_2596, out s11_2597), 0x23087F98<32>, a3_648, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_681, out a0_2598, out a1_675, out a2_2599, out a3_2600, out a4_2601, out a5_2602, out a7_2603, out s2_684, out s3_2604, out s4_2605, out s5_2606, out s6_2607, out s7_2608, out s8_2609, out s9_2610, out s10_2611, out s11_2612, out t4_2613), s1_681, a1_675, fp + -312<i32>, s2_684, mstatus_1054, dwLoc0148, dwLoc0140, dwLoc013C, dwLoc0128, dwLoc0118, dwLocF8, dwLocF4, dwLocE8, dwLocD8, dwLocC8, dwLocB8, dwLocA8, dwLoc98, dwLoc88, dwLoc78, dwLoc68, s4, out a0_699, out a3_702, out s3_711, out s10_725)
	branch a0_699 == 0<32> l2305071A
l2305071A:
	word32 a0_1484
	word32 a0_731
	word32 a3_1500
	word32 s0_738 = mbedtls_net_set_block(s3_711, a3_702, mstatus_1054, dwLoc011C, dwLoc010C, out a0_731, out a3_1500)
	branch a0_731 == 0<32> l23050736
l23050736:
	word32 a3_750
	word32 s2_781
	word32 s6_785
	word32 s9_788
	word32 t4_2684
	word32 s11_2683
	word32 s7_2680
	word32 s8_2681
	word32 s10_2682
	word32 s3_2677
	word32 s4_2678
	word32 s5_2679
	word32 a4_2674
	word32 a5_2675
	word32 a7_2676
	word32 a1_2671
	word32 a2_2672
	word32 a3_2673
	word32 t4_2668
	word32 s1_2669
	word32 a0_2670
	word32 s11_2667
	word32 s8_2664
	word32 s9_2665
	word32 s10_2666
	word32 s7_2663
	word32 s6_2662
	word32 s5_2661
	word32 s4_2660
	word32 s3_2659
	word32 s2_2658
	word32 a2_2654
	word32 a4_2655
	word32 a5_2656
	word32 a7_2657
	word32 a1_2653
	word32 a0_2652
	word32 s1_2651
	ra_1499 = printf(printf(ra_1499, s10_725 + -116<i32>, a3_1500, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2651, out a0_2652, out a1_2653, out a2_2654, out a3_750, out a4_2655, out a5_2656, out a7_2657, out s2_2658, out s3_2659, out s4_2660, out s5_2661, out s6_2662, out s7_2663, out s8_2664, out s9_2665, out s10_2666, out s11_2667, out t4_2668), 0x23088020<32>, a3_750, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2669, out a0_2670, out a1_2671, out a2_2672, out a3_2673, out a4_2674, out a5_2675, out a7_2676, out s2_781, out s3_2677, out s4_2678, out s5_2679, out s6_785, out s7_2680, out s8_2681, out s9_788, out s10_2682, out s11_2683, out t4_2684)
	word32 a4_799
	word32 s2_803
	word32 s4_805
	word32 s5_806
	branch mbedtls_ssl_config_defaults(s2_781, 0<32>, 0<32>, 0<32>, out a3_1500, out a4_799, out s2_803, out s4_805, out s5_806) == 0<32> l23050766
l23050766:
	mbedtls_ssl_conf_verify(s2_803, 0x2305099A<32>, 0<32>)
	word32 a1_815 = 2<32>
	branch CONVERT(Mem616[s0_738 + 48<i32>:byte], byte, word32) != 0<32> l23050780
l2305077E:
	a1_815 = 1<32>
l23050780:
	word32 a5_821 = mbedtls_ssl_conf_authmode(s2_803, a1_815)
	mbedtls_ssl_conf_rng(s2_803, 0x23056280<32>, s9_788)
	mbedtls_ssl_conf_ca_chain(s2_803, s6_785, 0<32>)
	word32 a0_842
	word32 s2_852
	word32 s1_851
	ra_1499 = mbedtls_ssl_conf_own_cert(ra_1499, s4_805, s5_806, a3_1500, a4_799, a5_821, mstatus_1054, dwLoc0150, dwLoc014C, dwLoc58, s4, out s1_851, out a0_842, out a3_1500, out s2_852)
	branch a0_842 == 0<32> l230507B8
l230507B8:
	word32 s0_861 = Mem616[a0_842 + 44<i32>:word32]
	mbedtls_ssl_conf_read_timeout(s2_852, a0_842)
	word32 a4_863 = CONVERT(Mem616[s0_861 + 40<i32>:uint16], uint16, word32)
	word32 a5_864 = 443<i32>
	branch a4_863 != 443<i32> l230507F0
l230507CC:
	dwLoc0140 = 0x230880C0<32>
	word32 a0_871
	s1_851 = mbedtls_ssl_conf_alpn_protocols(s2_852, fp + -304<i32>, s8, out a0_871, out a3_1500, out a4_863, out a5_864, out s2_852)
	branch a0_871 == 0<32> l230507F0
l230507F0:
	word32 a0_896
	word32 a1_897
	ra_1499 = mbedtls_ssl_setup(ra_1499, s1_851, s2_852, a3_1500, a4_863, a5_864, mstatus_1054, dwLoc0150, dwLoc014C, dwLoc0140, dwLoc013C, dwLoc0118, dwLoc48, dwLoc38, s8, s4, s0, dwArg08, dwArg18, dwArg28, dwArg38, out a0_896, out a1_897, out a3_1500)
	branch a0_896 == 0<32> l23050808
l23050808:
	word32 a0_923
	ra_1499 = mbedtls_ssl_set_hostname(ra_1499, a1_897, mstatus_1054, dwLoc0140, dwLoc013C, dwLoc0118, dwLoc48, s0, out a0_923, out a3_1500)
	branch a0_923 == 0<32> l2305081E
l2305081E:
	word32 s1_957
	word32 s3_961
	word32 s8_966
	word32 t4_2719
	word32 s11_2718
	word32 s10_2717
	word32 s9_2716
	word32 s5_2713
	word32 s6_2714
	word32 s7_2715
	word32 a7_2710
	word32 s2_2711
	word32 s4_2712
	word32 a5_2709
	word32 a2_2706
	word32 a3_2707
	word32 a4_2708
	word32 a1_2705
	word32 a0_2704
	word32 ra_956 = printf(ra_1499, 0x2308817C<32>, a3_1500, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_957, out a0_2704, out a1_2705, out a2_2706, out a3_2707, out a4_2708, out a5_2709, out a7_2710, out s2_2711, out s3_961, out s4_2712, out s5_2713, out s6_2714, out s7_2715, out s8_966, out s9_2716, out s10_2717, out s11_2718, out t4_2719)
	mbedtls_ssl_set_bio(s1_957, s3_961, 0x2305F510<32>, 0<32>, 0x2305F59E<32>)
	word32 a3_983
	word32 s2_990
	word32 a3_1008
	word32 t4_2771
	word32 s11_2770
	word32 s10_2769
	word32 s9_2768
	word32 s8_2767
	word32 s7_2766
	word32 s6_2765
	word32 s5_2764
	word32 s4_2763
	word32 s3_2762
	word32 s2_2761
	word32 a7_2760
	word32 a4_2759
	word32 a3_2758
	word32 a2_2757
	word32 a1_2756
	word32 a0_2755
	word32 t4_2754
	word32 s11_2753
	word32 s10_2752
	word32 s9_2751
	word32 s8_2750
	word32 s7_2749
	word32 s6_2748
	word32 s5_2747
	word32 s4_2746
	word32 s3_2745
	word32 s2_2744
	word32 a7_2743
	word32 a5_2742
	word32 a4_2741
	word32 a2_2740
	word32 a1_2739
	word32 a0_2738
	word32 s1_2737
	word32 t4_2736
	word32 s11_2735
	word32 s10_2734
	word32 s9_2733
	word32 s8_2732
	word32 s7_2731
	word32 s6_2730
	word32 s5_2729
	word32 s4_2728
	word32 s3_2727
	word32 a7_2726
	word32 a5_2725
	word32 a4_2724
	word32 a2_2723
	word32 a1_2722
	word32 a0_2721
	word32 s1_2720
	word32 s1_1036
	word32 a5_1028
	word32 ra_1035 = printf(printf(printf(ra_956, s8_966 + -116<i32>, 0<32>, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2720, out a0_2721, out a1_2722, out a2_2723, out a3_983, out a4_2724, out a5_2725, out a7_2726, out s2_990, out s3_2727, out s4_2728, out s5_2729, out s6_2730, out s7_2731, out s8_2732, out s9_2733, out s10_2734, out s11_2735, out t4_2736), s2_990 + 380<i32>, a3_983, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2737, out a0_2738, out a1_2739, out a2_2740, out a3_1008, out a4_2741, out a5_2742, out a7_2743, out s2_2744, out s3_2745, out s4_2746, out s5_2747, out s6_2748, out s7_2749, out s8_2750, out s9_2751, out s10_2752, out s11_2753, out t4_2754), 0x2308819C<32>, a3_1008, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1036, out a0_2755, out a1_2756, out a2_2757, out a3_2758, out a4_2759, out a5_1028, out a7_2760, out s2_2761, out s3_2762, out s4_2763, out s5_2764, out s6_2765, out s7_2766, out s8_2767, out s9_2768, out s10_2769, out s11_2770, out t4_2771)
l2305086E:
	word32 a0_1057
	word32 s0_1060
	word32 a3_1066
	word32 a4_1067
	word32 a5_1068
	word32 s3_1076
	word32 a1_2902
	word32 a2_2903
	word32 s2_2904
	word32 s4_2905
	word32 s5_2906
	word32 s6_2907
	ra_1035 = mbedtls_ssl_handshake(ra_1035, s1_1036, a5_1028, mstatus_1054, dwLocF8, dwLocAC, out s0_1060, out s1_1036, out a0_1057, out a1_2902, out a2_2903, out a3_1066, out a4_1067, out a5_1068, out s2_2904, out s3_1076, out s4_2905, out s5_2906, out s6_2907, out mstatus_1054)
	branch a0_1057 != 0<32> l23050946
l23050946:
	a5_1028 = a0_1057 & -129<i32>
	branch (a0_1057 & -129<i32>) == s3_1076 l2305086E
l2305094E:
	word32 a3_1098
	word32 s2_1105
	word32 s1_2908
	word32 a0_2909
	word32 a1_2910
	word32 a2_2911
	word32 a4_2912
	word32 a5_2913
	word32 a7_2914
	word32 s3_2915
	word32 s4_2916
	word32 s5_2917
	word32 s6_2918
	word32 s7_2919
	word32 s8_2920
	word32 s9_2921
	word32 s10_2922
	word32 s11_2923
	word32 t4_2924
	word32 ra_1101 = printf(ra_1035, 0x230881C8<32>, a3_1066, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2908, out a0_2909, out a1_2910, out a2_2911, out a3_1098, out a4_2912, out a5_2913, out a7_2914, out s2_1105, out s3_2915, out s4_2916, out s5_2917, out s6_2918, out s7_2919, out s8_2920, out s9_2921, out s10_2922, out s11_2923, out t4_2924)
	branch s2_1105 != 0xFDFFF900<32> l23050548
l2305096A:
	word32 s1_2925
	word32 a0_2926
	word32 a1_2927
	word32 a2_2928
	word32 a3_2929
	word32 a4_2930
	word32 a5_2931
	word32 a7_2932
	word32 s2_2933
	word32 s3_2934
	word32 s4_2935
	word32 s5_2936
	word32 s6_2937
	word32 s7_2938
	word32 s8_2939
	word32 s9_2940
	word32 s10_2941
	word32 s11_2942
	word32 t4_2943
	printf(ra_1101, 0x23088200<32>, a3_1098, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2925, out a0_2926, out a1_2927, out a2_2928, out a3_2929, out a4_2930, out a5_2931, out a7_2932, out s2_2933, out s3_2934, out s4_2935, out s5_2936, out s6_2937, out s7_2938, out s8_2939, out s9_2940, out s10_2941, out s11_2942, out t4_2943)
l2305087A:
	word32 a3_1205
	word32 ra_1208
	mbedtls_ssl_get_ciphersuite(s1_1036, mbedtls_ssl_get_version(a4_1067, a5_1068))
	word32 a7_2776
	word32 s2_2777
	word32 s3_2778
	word32 s4_2779
	word32 s5_2780
	word32 s6_2781
	word32 s7_2782
	word32 s8_2783
	word32 s9_2784
	word32 a5_1156
	word32 a3_1160
	word32 a4_1161
	word32 s10_2785
	word32 a2_2775
	word32 a1_2774
	word32 a0_2773
	word32 s1_2772
	word32 s11_2786
	word32 t4_2787
	word32 ra_1163 = printf(ra_1035, 0x23088238<32>, a3_1066, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2772, out a0_2773, out a1_2774, out a2_2775, out a3_1160, out a4_1161, out a5_1156, out a7_2776, out s2_2777, out s3_2778, out s4_2779, out s5_2780, out s6_2781, out s7_2782, out s8_2783, out s9_2784, out s10_2785, out s11_2786, out t4_2787)
	word32 a3_1181
	branch mbedtls_ssl_get_record_expansion(ra_1163, s0_1060, a3_1160, a4_1161, a5_1156, out a3_1181) < 0<32> l23050978
l23050978:
	word32 s1_2788
	word32 a0_2789
	word32 a1_2790
	word32 a2_2791
	word32 a4_2792
	word32 a5_2793
	word32 a7_2794
	word32 s2_2795
	word32 s3_2796
	word32 s4_2797
	word32 s5_2798
	word32 s6_2799
	word32 s7_2800
	word32 s8_2801
	word32 s9_2802
	word32 s10_2803
	word32 s11_2804
	word32 t4_2805
	ra_1208 = printf(ra_1163, 0x23088294<32>, a3_1181, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2788, out a0_2789, out a1_2790, out a2_2791, out a3_1205, out a4_2792, out a5_2793, out a7_2794, out s2_2795, out s3_2796, out s4_2797, out s5_2798, out s6_2799, out s7_2800, out s8_2801, out s9_2802, out s10_2803, out s11_2804, out t4_2805)
l230508A4:
	word32 s1_2806
	word32 a0_2807
	word32 a1_2808
	word32 a2_2809
	word32 a4_2810
	word32 a5_2811
	word32 a7_2812
	word32 s2_2813
	word32 s3_2814
	word32 s4_2815
	word32 s5_2816
	word32 s6_2817
	word32 s7_2818
	word32 s8_2819
	word32 s9_2820
	word32 s10_2821
	word32 s11_2822
	word32 t4_2823
	ra_1208 = printf(ra_1163, 0x23088270<32>, a3_1181, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2806, out a0_2807, out a1_2808, out a2_2809, out a3_1205, out a4_2810, out a5_2811, out a7_2812, out s2_2813, out s3_2814, out s4_2815, out s5_2816, out s6_2817, out s7_2818, out s8_2819, out s9_2820, out s10_2821, out s11_2822, out t4_2823)
l230508B0:
	word32 a3_1293
	word32 ra_1296
	word32 s1_1297
	word32 a0_1277
	word32 a3_1257
	word32 s8_1270
	word32 s1_2944
	word32 a0_2945
	word32 a1_2946
	word32 a2_2947
	word32 a4_2948
	word32 a5_2949
	word32 a7_2950
	word32 s2_2951
	word32 s3_2952
	word32 s4_2953
	word32 s5_2954
	word32 s6_2955
	word32 s7_2956
	word32 s9_2957
	word32 s10_2958
	word32 s11_2959
	word32 t4_2960
	word32 ra_1260 = printf(ra_1208, 0x230882CC<32>, a3_1205, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2944, out a0_2945, out a1_2946, out a2_2947, out a3_1257, out a4_2948, out a5_2949, out a7_2950, out s2_2951, out s3_2952, out s4_2953, out s5_2954, out s6_2955, out s7_2956, out s8_1270, out s9_2957, out s10_2958, out s11_2959, out t4_2960)
	word32 a5_1275 = CONVERT(Mem1146[s0_1060 + 48<i32>:byte], byte, word32)
	branch a5_1275 == 0<32> l23050990
l23050990:
	a0_1277 = 0x2308831C<32>
l230508C4:
	word32 a0_1279 = mbedtls_ssl_get_verify_result(a5_1275)
	Mem1281[s0_1060 + 1204<i32>:word32] = a0_1279
	branch a0_1279 == 0<32> l23050986
l23050986:
	a0_1277 = s8_1270 + -116<i32>
l2305098A:
	word32 a0_2961
	word32 a1_2962
	word32 a2_2963
	word32 a4_2964
	word32 a5_2965
	word32 a7_2966
	word32 s2_2967
	word32 s3_2968
	word32 s4_2969
	word32 s5_2970
	word32 s6_2971
	word32 s7_2972
	word32 s8_2973
	word32 s9_2974
	word32 s10_2975
	word32 s11_2976
	word32 t4_2977
	ra_1296 = printf(ra_1260, a0_1277, a3_1257, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1297, out a0_2961, out a1_2962, out a2_2963, out a3_1293, out a4_2964, out a5_2965, out a7_2966, out s2_2967, out s3_2968, out s4_2969, out s5_2970, out s6_2971, out s7_2972, out s8_2973, out s9_2974, out s10_2975, out s11_2976, out t4_2977)
l230508D0:
	word32 s3_1325
	word32 s5_1327
	word32 a3_1342
	word32 s1_2824
	word32 a0_2825
	word32 a1_2826
	word32 a2_2827
	word32 a3_2828
	word32 a4_2829
	word32 a5_2830
	word32 a7_2831
	word32 s2_2832
	word32 s4_2833
	word32 s6_2834
	word32 s7_2835
	word32 s8_2836
	word32 s9_2837
	word32 s10_2838
	word32 s11_2839
	word32 t4_2840
	word32 a0_2841
	word32 a1_2842
	word32 a2_2843
	word32 a4_2844
	word32 a5_2845
	word32 a7_2846
	word32 s2_2847
	word32 s3_2848
	word32 s4_2849
	word32 s5_2850
	word32 s6_2851
	word32 s7_2852
	word32 s8_2853
	word32 s9_2854
	word32 s10_2855
	word32 s11_2856
	word32 t4_2857
	ra_1296 = printf(mbedtls_x509_crt_verify_info(printf(ra_1260, 0x230882F8<32>, a3_1257, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2824, out a0_2825, out a1_2826, out a2_2827, out a3_2828, out a4_2829, out a5_2830, out a7_2831, out s2_2832, out s3_1325, out s4_2833, out s5_1327, out s6_2834, out s7_2835, out s8_2836, out s9_2837, out s10_2838, out s11_2839, out t4_2840), fp + -304<i32>, 256<i32>, Mem1281[s0_1060 + 1204<i32>:int32], s3_1325, s5_1327, dwLoc0138, dwLoc010C, dwLocC8, dwLocA8, dwLocA4, out a3_1342), 0x23088310<32>, a3_1342, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1297, out a0_2841, out a1_2842, out a2_2843, out a3_1293, out a4_2844, out a5_2845, out a7_2846, out s2_2847, out s3_2848, out s4_2849, out s5_2850, out s6_2851, out s7_2852, out s8_2853, out s9_2854, out s10_2855, out s11_2856, out t4_2857)
l23050902:
	branch mbedtls_ssl_get_peer_cert(s1_1297) == 0<32> l2305093E
l2305090A:
	word32 s1_1408
	word32 s2_1411
	word32 a3_1431
	word32 a0_2858
	word32 a1_2859
	word32 a2_2860
	word32 a3_2861
	word32 a4_2862
	word32 a5_2863
	word32 a7_2864
	word32 s3_2865
	word32 s4_2866
	word32 s5_2867
	word32 s6_2868
	word32 s7_2869
	word32 s8_2870
	word32 s9_2871
	word32 s10_2872
	word32 s11_2873
	word32 t4_2874
	word32 s0_2875
	word32 s1_2876
	word32 s2_2877
	word32 s3_2878
	word32 s4_2879
	word32 s5_2880
	word32 s7_2881
	word32 s10_2882
	word32 s1_2883
	word32 a0_2884
	word32 a1_2885
	word32 a2_2886
	word32 a3_2887
	word32 a4_2888
	word32 a5_2889
	word32 a7_2890
	word32 s2_2891
	word32 s3_2892
	word32 s4_2893
	word32 s5_2894
	word32 s6_2895
	word32 s7_2896
	word32 s8_2897
	word32 s9_2898
	word32 s10_2899
	word32 s11_2900
	word32 t4_2901
	printf(mbedtls_x509_crt_info(printf(ra_1296, 0x23088344<32>, a3_1293, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1408, out a0_2858, out a1_2859, out a2_2860, out a3_2861, out a4_2862, out a5_2863, out a7_2864, out s2_1411, out s3_2865, out s4_2866, out s5_2867, out s6_2868, out s7_2869, out s8_2870, out s9_2871, out s10_2872, out s11_2873, out t4_2874), s1_1408, fp + -304<i32>, 255<i32>, mbedtls_ssl_get_peer_cert(s1_1408), s2_1411, dwLoc0150, dwLoc014C, dwLoc0140, dwLoc0138, dwLoc0130, dwLoc012C, dwLoc0128, dwLoc0118, dwLoc0114, dwLocF4, dwLocE4, dwLoc88, dwArg24, out s0_2875, out s1_2876, out a3_1431, out s2_2877, out s3_2878, out s4_2879, out s5_2880, out s7_2881, out s10_2882), 0x23088374<32>, a3_1431, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2883, out a0_2884, out a1_2885, out a2_2886, out a3_2887, out a4_2888, out a5_2889, out a7_2890, out s2_2891, out s3_2892, out s4_2893, out s5_2894, out s6_2895, out s7_2896, out s8_2897, out s9_2898, out s10_2899, out s11_2900, out t4_2901)
l2305093E:
l23050814:
	a0_1484 = 0x23088144<32>
l230507FA:
	a0_1484 = 0x23088110<32>
l230507E2:
	a0_1484 = 0x230880D0<32>
l230507AE:
	a0_1484 = 0x23088088<32>
l23050758:
	a0_1484 = 0x2308804C<32>
l23050722:
	a0_1484 = 0x23087FEC<32>
l2305072E:
	word32 t4_2703
	word32 s11_2702
	word32 s10_2701
	word32 s9_2700
	word32 s8_2699
	word32 s5_2696
	word32 s6_2697
	word32 s7_2698
	word32 s2_2693
	word32 s3_2694
	word32 s4_2695
	word32 a4_2690
	word32 a5_2691
	word32 a7_2692
	word32 a3_2689
	word32 a2_2688
	word32 s1_2685
	word32 a0_2686
	word32 a1_2687
	printf(ra_1499, a0_1484, a3_1500, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2685, out a0_2686, out a1_2687, out a2_2688, out a3_2689, out a4_2690, out a5_2691, out a7_2692, out s2_2693, out s3_2694, out s4_2695, out s5_2696, out s6_2697, out s7_2698, out s8_2699, out s9_2700, out s10_2701, out s11_2702, out t4_2703)
l230506F2:
	word32 s7_1547
	word32 t4_2650
	word32 s8_2646
	word32 s9_2647
	word32 s10_2648
	word32 s11_2649
	word32 s6_2645
	word32 s5_2644
	word32 s4_2643
	word32 s3_2642
	word32 a7_2640
	word32 s2_2641
	word32 a2_2636
	word32 a3_2637
	word32 a4_2638
	word32 a5_2639
	word32 a1_2635
	word32 s1_2633
	word32 a0_2634
	printf(ra_1499, 0x23087FB8<32>, a3_702, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2633, out a0_2634, out a1_2635, out a2_2636, out a3_2637, out a4_2638, out a5_2639, out a7_2640, out s2_2641, out s3_2642, out s4_2643, out s5_2644, out s6_2645, out s7_1547, out s8_2646, out s9_2647, out s10_2648, out s11_2649, out t4_2650)
	branch s7_1547 == -82<i32> l23050548
l2305070C:
	branch s7_1547 == -66<i32> l23050548
l23050716:
l23050672:
	word32 s11_2631
	word32 t4_2632
	word32 s10_2630
	word32 s9_2629
	word32 s8_2628
	word32 s7_2627
	word32 s6_2626
	word32 s5_2625
	word32 s3_2623
	word32 s4_2624
	word32 s2_2622
	word32 a2_2617
	word32 a3_2618
	word32 a4_2619
	word32 a5_2620
	word32 a7_2621
	word32 a0_2615
	word32 a1_2616
	word32 s1_2614
	printf(ra_531, 0x23087F3C<32>, a3_526, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2614, out a0_2615, out a1_2616, out a2_2617, out a3_2618, out a4_2619, out a5_2620, out a7_2621, out s2_2622, out s3_2623, out s4_2624, out s5_2625, out s6_2626, out s7_2627, out s8_2628, out s9_2629, out s10_2630, out s11_2631, out t4_2632)
l2305060E:
	word32 t4_2529
	word32 s4_2521
	word32 s5_2522
	word32 s6_2523
	word32 s7_2524
	word32 s8_2525
	word32 s9_2526
	word32 s10_2527
	word32 s11_2528
	word32 s3_2520
	word32 s2_2519
	word32 a7_2518
	word32 a5_2517
	word32 a4_2516
	word32 a3_2515
	word32 s1_2511
	word32 a0_2512
	word32 a1_2513
	word32 a2_2514
	printf(ra_393, 0x23087E88<32>, a3_391, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2511, out a0_2512, out a1_2513, out a2_2514, out a3_2515, out a4_2516, out a5_2517, out a7_2518, out s2_2519, out s3_2520, out s4_2521, out s5_2522, out s6_2523, out s7_2524, out s8_2525, out s9_2526, out s10_2527, out s11_2528, out t4_2529)
l230505A4:
	word32 t4_2482
	word32 s2_2472
	word32 s4_2474
	word32 s5_2475
	word32 s6_2476
	word32 s7_2477
	word32 s8_2478
	word32 s9_2479
	word32 s10_2480
	word32 s11_2481
	word32 s3_2473
	word32 a3_2468
	word32 a5_2470
	word32 a7_2471
	word32 a4_2469
	word32 s1_2464
	word32 a1_2466
	word32 a2_2467
	word32 a0_2465
	printf(ra_237, 0x23087DC4<32>, a3_235, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2464, out a0_2465, out a1_2466, out a2_2467, out a3_2468, out a4_2469, out a5_2470, out a7_2471, out s2_2472, out s3_2473, out s4_2474, out s5_2475, out s6_2476, out s7_2477, out s8_2478, out s9_2479, out s10_2480, out s11_2481, out t4_2482)
l23050536:
	word32 t4_2416
	word32 s11_2415
	word32 s10_2414
	word32 s7_2411
	word32 s9_2413
	word32 s8_2412
	word32 a3_2402
	word32 a1_2400
	word32 a2_2401
	word32 a5_2404
	word32 a4_2403
	word32 a0_2399
	word32 s1_2398
	word32 a7_2405
	word32 s2_2406
	word32 s3_2407
	word32 s4_2408
	word32 s5_2409
	word32 s6_2410
	printf(ra_171, 0x23087D24<32>, a3_166, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2398, out a0_2399, out a1_2400, out a2_2401, out a3_2402, out a4_2403, out a5_2404, out a7_2405, out s2_2406, out s3_2407, out s4_2408, out s5_2409, out s6_2410, out s7_2411, out s8_2412, out s9_2413, out s10_2414, out s11_2415, out t4_2416)
l23050548:
	return
iot_tls_connect_exit:


void _iot_tls_verify_cert(word32 ra, word32 a3, word32 dwArg64)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0064:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: ra s0 s1 sp
_iot_tls_verify_cert_entry:
l2305099A:
	word32 s1_27
	word32 s2_30
	word32 a3_48
	word32 a5_75
	word32 a3_79
	word32 a2_201
	word32 a1_200
	word32 a0_199
	word32 a3_202
	word32 a4_203
	word32 a5_204
	word32 a7_205
	word32 s3_206
	word32 s4_207
	word32 s5_208
	word32 s6_209
	word32 s7_210
	word32 s8_211
	word32 s9_212
	word32 s10_213
	word32 s11_214
	word32 t4_215
	word32 s0_216
	word32 s1_217
	word32 s2_218
	word32 s3_219
	word32 s4_220
	word32 s5_221
	word32 s7_222
	word32 s10_223
	word32 s1_224
	word32 a0_225
	word32 a1_226
	word32 a2_227
	word32 a4_228
	word32 a7_229
	word32 s2_230
	word32 s3_231
	word32 s4_232
	word32 s5_233
	word32 s6_234
	word32 s7_235
	word32 s8_236
	word32 s9_237
	word32 s10_238
	word32 s11_239
	word32 t4_240
	word32 ra_82 = printf(mbedtls_x509_crt_info(printf(ra, 0x23087C84<32>, a3, dwLoc0108, dwLocE8, dwLocA0, dwLoc9C, dwLoc78, dwLoc54, out s1_27, out a0_199, out a1_200, out a2_201, out a3_202, out a4_203, out a5_204, out a7_205, out s2_30, out s3_206, out s4_207, out s5_208, out s6_209, out s7_210, out s8_211, out s9_212, out s10_213, out s11_214, out t4_215), s1_27, fp + -272<i32>, 255<i32>, s1_27, s2_30, dwLoc0110, dwLoc010C, dwLoc0100, dwLocF8, dwLocF0, dwLocEC, dwLocE8, dwLocD8, dwLocD4, dwLocB4, dwLocA4, dwLoc48, dwArg64, out s0_216, out s1_217, out a3_48, out s2_218, out s3_219, out s4_220, out s5_221, out s7_222, out s10_223), 0x23088374<32>, a3_48, dwLoc0108, dwLocE8, dwLocA0, dwLoc9C, dwLoc78, dwLoc54, out s1_224, out a0_225, out a1_226, out a2_227, out a3_79, out a4_228, out a5_75, out a7_229, out s2_230, out s3_231, out s4_232, out s5_233, out s6_234, out s7_235, out s8_236, out s9_237, out s10_238, out s11_239, out t4_240)
	branch a5_75 != 0<32> l230509FE
l230509FE:
	word32 s1_241
	word32 a0_242
	word32 a1_243
	word32 a2_244
	word32 a3_245
	word32 a4_246
	word32 a5_247
	word32 a7_248
	word32 s2_249
	word32 s3_250
	word32 s4_251
	word32 s5_252
	word32 s6_253
	word32 s7_254
	word32 s8_255
	word32 s9_256
	word32 s10_257
	word32 s11_258
	word32 t4_259
	printf(ra_82, 0x23087CD8<32>, a3_79, dwLoc0108, dwLocE8, dwLocA0, dwLoc9C, dwLoc78, dwLoc54, out s1_241, out a0_242, out a1_243, out a2_244, out a3_245, out a4_246, out a5_247, out a7_248, out s2_249, out s3_250, out s4_251, out s5_252, out s6_253, out s7_254, out s8_255, out s9_256, out s10_257, out s11_258, out t4_259)
l230509E0:
	word32 s1_260
	word32 a0_261
	word32 a1_262
	word32 a2_263
	word32 a3_264
	word32 a4_265
	word32 a5_266
	word32 a7_267
	word32 s2_268
	word32 s3_269
	word32 s4_270
	word32 s5_271
	word32 s6_272
	word32 s7_273
	word32 s8_274
	word32 s9_275
	word32 s10_276
	word32 s11_277
	word32 t4_278
	printf(ra_82, 0x23087CB0<32>, a3_79, dwLoc0108, dwLocE8, dwLocA0, dwLoc9C, dwLoc78, dwLoc54, out s1_260, out a0_261, out a1_262, out a2_263, out a3_264, out a4_265, out a5_266, out a7_267, out s2_268, out s3_269, out s4_270, out s5_271, out s6_272, out s7_273, out s8_274, out s9_275, out s10_276, out s11_277, out t4_278)
l230509EC:
	return
_iot_tls_verify_cert_exit:


void iot_tls_write(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 s6, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg1C, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg78, word32 dwArg8C, word32 dwArgD8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
iot_tls_write_entry:
l23050A0E:
	word32 s3_115 = a2
	word32 s5_139 = a4
	word32 s0_133 = 0<32>
	word32 s9_122 = a0 + 892<i32>
l23050A42:
	branch s0_133 >=u s3_115 l23050AAE
l23050A46:
	word32 a0_53
	word32 a1_441
	word32 s2_443
	word32 s4_445
	word32 s8_446
	word32 a5_442
	word32 s3_444
	has_timer_expired(a2, a3, a4, mstatus, s0, dwLoc18, dwArg08, dwArgF8, dwArg0138, out a0_53, out a1_441, out a2, out a3, out a4, out a5_442, out s2_443, out s3_444, out s4_445, out s8_446)
	branch a0_53 != 0<32> l23050AAE
l23050AAE:
	Mem70[s5_139:word32] = s0_133
	word32 a0_78
	word32 s3_88
	word32 a5_437
	word32 s8_440
	word32 a1_433
	word32 a2_434
	word32 a3_435
	word32 a4_436
	word32 s2_438
	word32 s4_439
	has_timer_expired(a2, a3, a4, mstatus, s0, dwLoc18, dwArg08, dwArgF8, dwArg0138, out a0_78, out a1_433, out a2_434, out a3_435, out a4_436, out a5_437, out s2_438, out s3_88, out s4_439, out s8_440)
	branch a0_78 == 0<32> l23050A90
l23050ABC:
	branch s0_133 == s3_88 l23050A90
l23050AC0:
l23050A4E:
l23050A56:
	word32 a0_105
	word32 a5_107
	word32 s8_117
	word32 a1_448
	word32 s4_450
	word32 s2_449
	word32 s1_108 = has_timer_expired(a2, a3, a4, mstatus, s0, dwLoc18, dwArg08, dwArgF8, dwArg0138, out a0_105, out a1_448, out a2, out a3, out a4, out a5_107, out s2_449, out s3_115, out s4_450, out s8_117)
	branch a0_105 != 0<32> l23050A6E
l23050A5E:
	word32 a0_125
	word32 s10_135
	word32 s2_137
	word32 s7_447
	ra = mbedtls_ssl_write(ra, s9_122, s8_117, a5_107, mstatus, dwArg08, s7, dwArg78, dwArgD8, out s0_133, out a0_125, out a2, out a3, out a4, out s2_137, out s3_115, out s5_139, out s7_447, out s9_122, out s10_135, out mstatus)
	s1_108 = a0_125
	branch a0_125 <= 0<32> l23050A72
l23050A72:
	branch a0_125 == s10_135 l23050A56
l23050A76:
	branch a0_125 == s2_137 l23050A56
l23050A7A:
	word32 s5_175
	word32 t4_468
	word32 s11_467
	word32 s10_466
	word32 s9_465
	word32 s8_464
	word32 s7_463
	word32 s3_460
	word32 s6_462
	word32 s4_461
	word32 a5_457
	word32 s2_459
	word32 a7_458
	word32 a2_454
	word32 a4_456
	word32 a3_455
	word32 s1_451
	word32 a1_453
	word32 a0_452
	printf(ra, 0x23088380<32>, a3, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_451, out a0_452, out a1_453, out a2_454, out a3_455, out a4_456, out a5_457, out a7_458, out s2_459, out s3_460, out s4_461, out s5_175, out s6_462, out s7_463, out s8_464, out s9_465, out s10_466, out s11_467, out t4_468)
	Mem183[s5_175:word32] = s0_133
l23050A90:
	0<32> = dwArg0128
	0<32> = dwArg1C
	return
iot_tls_write_exit:
l23050A6E:
	s0_133 = s0_133 + s1_108


void iot_tls_read(word32 ra, word32 a0, word32 a2, word32 a4, word32 s2, word32 s4, word32 s11, word32 mstatus, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s11:[0..31] s2:[0..31] s4:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s8 sp
iot_tls_read_entry:
l23050AC4:
	word32 s2_162 = Mem29[a0 + 1184<i32>:int32]
	word32 s1_161 = a2
	word32 s9_131 = a4
	word32 s10_124 = a0 + 892<i32>
	word32 s8_170 = a0 + 1084<i32>
	word32 s4_169 = 0<32>
	word32 s11_125 = CONVERT(s2_162 <u 1<i32>, bool, word32)
l23050B06:
	branch s1_161 != 0<32> l23050B2C
l23050B2C:
	word32 a5_101 = s11_125
	word32 a5_453
	branch s2_162 <u left_ms(a4, out a5_453) l23050B42
l23050B38:
	word32 a5_454
	a5_101 = CONVERT(left_ms(a4, out a5_454) <u 1<i32>, bool, word32)
l23050B42:
	word32 a1_65 = 1<32>
	branch a5_101 != 0<32> l23050B5A
l23050B46:
	a1_65 = s2_162
	branch s2_162 <u left_ms(a4, out a5_101) l23050B5A
l23050B52:
	a1_65 = left_ms(a4, out a5_101)
l23050B5A:
	mbedtls_ssl_conf_read_timeout(s8_170, a1_65)
	word32 a0_111
	word32 a2_112
	word32 s8_116
	word32 a3_120
	word32 a4_121
	word32 s2_126
	word32 s6_129
	word32 s7_130
	word32 s5_455
	ra = mbedtls_ssl_read(ra, s10_124, s1_161, a5_101, mstatus, dwLoc08, s11, dwArgC8, out a0_111, out a2_112, out a3_120, out a4_121, out s2_126, out s5_455, out s6_129, out s7_130, out s8_116, out s9_131, out s10_124, out s11_125, out mstatus)
	mbedtls_ssl_conf_read_timeout(s8_116, s2_126)
	branch a0_111 <= 0<32> l23050B92
l23050B92:
	branch a0_111 == 0<32> l23050BA0
l23050B94:
	branch (a0_111 & -129<i32>) == s6_129 l23050B7E
l23050B9C:
	branch a0_111 == s7_130 l23050B7E
l23050BA0:
l23050B78:
l23050B7E:
	word32 a0_158
	word32 a1_456
	word32 a2_457
	word32 a3_458
	word32 s3_460
	word32 a5_459
	s1_161 = has_timer_expired(a2_112, a3_120, a4_121, mstatus, s4, s2, dwLoc08, dwArgE8, dwArg0128, out a0_158, out a1_456, out a2_457, out a3_458, out a4, out a5_459, out s2_162, out s3_460, out s4_169, out s8_170)
	branch a0_158 == 0<32> l23050B06
l23050B86:
	branch s1_161 == 0<32> l23050B08
l23050B88:
	branch s4_169 == 0<32> l23050B0E
l23050B8E:
l23050B08:
	Mem179[s9_131:word32] = s4_169
l23050B0E:
	0<32> = dwArg0198
	return
iot_tls_read_exit:


void iot_tls_disconnect(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
iot_tls_disconnect_entry:
l23050BA4:
	word32 s1_12 = a0 + 892<i32>
l23050BB6:
	word32 a0_21
	word32 s0_24
	ra = mbedtls_ssl_close_notify(ra, s1_12, a5, mstatus, dwArg0118, out s0_24, out s1_12, out a0_21, out a5, out mstatus)
	branch a0_21 == s0_24 l23050BB6
l23050BC0:
	return
iot_tls_disconnect_exit:


void iot_tls_destroy(word32 ra, word32 a0, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
iot_tls_destroy_entry:
l23050BCC:
	word32 a5_22
	word32 a1_39
	word32 a5_43
	word32 s0_46
	word32 a5_60
	word32 s0_63
	word32 a5_74
	word32 a2_79
	word32 a5_82
	word32 s1_143
	word32 a0_144
	word32 a2_145
	word32 s3_146
	word32 s4_147
	word32 s8_148
	word32 s1_149
	word32 a0_150
	word32 a1_151
	word32 a2_152
	word32 s3_153
	word32 s4_154
	word32 s8_155
	word32 a0_156
	word32 a2_157
	word32 s1_107 = mbedtls_ssl_config_free(mbedtls_ssl_free(mbedtls_pk_free(mbedtls_x509_crt_free(mbedtls_x509_crt_free(ra, a0 + 1516<i32>, mbedtls_net_free(ra, a0 + 1832<i32>, mstatus, dwArg28, dwArg38, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out a5_22), a5_22, mstatus, dwArg0128, dwArg0168, out s0_46, out s1_143, out a0_144, out a1_39, out a2_145, out a5_43, out s3_146, out s4_147, out s8_148), s0_46 + 1208<i32>, a1_39, a5_43, mstatus, dwArg0128, dwArg0168, out s0_63, out s1_149, out a0_150, out a1_151, out a2_152, out a5_60, out s3_153, out s4_154, out s8_155), s0_63 + 1824<i32>, a5_60, out a0_156, out a2_157, out a5_74), s0_63 + 892<i32>, a5_74, mstatus, dwArg28, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, dwArg0178, out a2_79, out a5_82), s0_63 + 1084<i32>, a2_79, a5_82, mstatus, dwArg0138, dwArg0178)
	mbedtls_ctr_drbg_free(s0_63 + 572<i32>)
	mbedtls_entropy_free(s1_107)
	return
iot_tls_destroy_exit:


word32 iot_tls_init(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..15] a6:[0..31] a7:[0..7]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
iot_tls_init_entry:
l23050C24:
	Mem5[a0 + 40<i32>:word16] = SLICE(a5, word16, 0)
	Mem8[0x2305044E<32>:word32] = a0
	Mem11[0x23050AC8<32>:word32] = a0
	Mem14[0x23050A16<32>:word32] = a0
	Mem17[0x23050BB0<32>:word32] = a0
	Mem20[0x2305045A<32>:word32] = a0
	Mem24[a4 + 36<i32>:word32] = a0
	Mem26[a2 + 28<i32>:word32] = a0
	Mem28[a3 + 32<i32>:word32] = a0
	Mem30[a1 + 24<i32>:word32] = a0
	Mem32[a0 + 44<i32>:word32] = a6
	Mem34[a0 + 48<i32>:byte] = SLICE(a7, byte, 0)
	Mem35[0x23050BE0<32>:word32] = a0
	Mem36[a0 + 1204<i32>:word32] = 0<32>
	return 0<32>
iot_tls_init_exit:


word32 aws_iot_thread_mutex_init(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_init
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
aws_iot_thread_mutex_init_entry:
l23050C7C:
	word32 a0_38
	word32 a1_15
	word32 a3_17
	word32 a4_18
	word32 a5_19
	word32 s3_23
	word32 s4_24
	word32 a0_28
	word32 s5_30
	word32 s6_31
	word32 s2_87
	word32 s1_21 = xQueueCreateMutex(ra, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out a0_28, out a1_15, out a3_17, out a4_18, out a5_19, out s2_87, out s3_23, out s4_24, out s5_30, out s6_31)
	Mem37[a0_28:word32] = a0
	branch a0_28 != 0<32> l23050C9A
l23050C9A:
	a0_38 = 0<32>
l23050C8E:
	a0_38 = -46<i32>
l23050C92:
	a0Out = a0_38
	a1Out = a1_15
	a2Out = dwArg10
	a3Out = a3_17
	a4Out = a4_18
	a5Out = a5_19
	s3Out = s3_23
	s4Out = s4_24
	s5Out = s5_30
	s6Out = s6_31
	return s1_21
aws_iot_thread_mutex_init_exit:


word32 aws_iot_thread_mutex_lock(word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_client_lock_mutex
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a2 a3 a4 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
aws_iot_thread_mutex_lock_entry:
l23050C9E:
	word32 s2_17
	word32 a1_19
	word32 a3_20
	word32 a4_21
	word32 s3_24
	word32 s4_25
	xQueueTakeMutexRecursive(s1, Mem5[a0:word32], 0xFFFFFFFF<32>, a2, a3, a4, mstatus, dwArg04, dwArg28, dwArg84, dwArgF8, dwArg0138, out a1_19, out a3_20, out a4_21, out s2_17, out s3_24, out s4_25)
	a0Out = 0<32>
	a1Out = a1_19
	a2Out = dwArg10
	a3Out = a3_20
	a4Out = a4_21
	s2Out = s2_17
	s3Out = s3_24
	s4Out = s4_25
	return s1_23
aws_iot_thread_mutex_lock_exit:


word32 aws_iot_thread_mutex_trylock(word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_client_lock_mutex
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a2 a3 a4 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
aws_iot_thread_mutex_trylock_entry:
l23050CB2:
	word32 a0_28
	word32 s2_17
	word32 a1_19
	word32 a3_20
	word32 a4_21
	word32 s3_24
	word32 s4_25
	branch xQueueTakeMutexRecursive(s1, Mem5[a0:word32], 0<32>, a2, a3, a4, mstatus, dwArg04, dwArg28, dwArg84, dwArgF8, dwArg0138, out a1_19, out a3_20, out a4_21, out s2_17, out s3_24, out s4_25) != 0<32> l23050CCA
l23050CCA:
	a0_28 = 0<32>
l23050CC0:
	a0_28 = -47<i32>
l23050CC4:
	a0Out = a0_28
	a1Out = a1_19
	a2Out = dwArg10
	a3Out = a3_20
	a4Out = a4_21
	s2Out = s2_17
	s3Out = s3_24
	s4Out = s4_25
	return s1_23
aws_iot_thread_mutex_trylock_exit:


word32 aws_iot_thread_mutex_unlock(word32 a0, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_client_unlock_mutex
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 s1 s2 s3 s5 s6 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_thread_mutex_unlock_entry:
l23050CCE:
	word32 a0_32
	word32 a0_10
	word32 a3_13
	word32 s1_18
	word32 s5_22
	word32 t1_26 = xQueueGiveMutexRecursive(Mem5[a0:word32], a4, mstatus, dwArg04, dwArg28, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_18, out a0_10, out a3_13, out s5_22)
	branch a0_10 != 0<32> l23050CE4
l23050CE4:
	a0_32 = 0<32>
l23050CDA:
	a0_32 = -48<i32>
l23050CDE:
	s1Out = s1_18
	a0Out = a0_32
	a1Out = a1_11
	a2Out = dwArg10
	a3Out = a3_13
	a4Out = a4_14
	s2Out = s2_19
	s3Out = s3_20
	s5Out = s5_22
	s6Out = s6_23
	return t1_26
aws_iot_thread_mutex_unlock_exit:


word32 aws_iot_thread_mutex_destroy(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0148, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_init
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
aws_iot_thread_mutex_destroy_entry:
l23050CE8:
	word32 a3_14
	word32 a4_15
	word32 s1_32
	word32 a0_33
	word32 a1_34
	word32 a2_35
	word32 a5_36
	word32 s4_37
	word32 s0_18 = vQueueDelete(Mem5[a0:word32], a3, a4, mstatus, dwArg0148, dwArg0188, out s1_32, out a0_33, out a1_34, out a2_35, out a3_14, out a4_15, out a5_36, out s4_37)
	a3Out = a3_14
	a4Out = a4_15
	return s0_18
aws_iot_thread_mutex_destroy_exit:


word32 _aws_iot_mqtt_internal_readWrapper(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_internal_cycle_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] ra:[0..31]
// LiveOut: a0 a2 a4 a5 ra s0 s2 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s4 s8 t3
// Preserved: sp
_aws_iot_mqtt_internal_readWrapper_entry:
l23050CFA:
	word32 a0_21
	word32 a6_13 = Mem11[a0 + 60<i32>:int32]
	word32 a5_18 = a1 - a6_13 + a2
	branch a5_18 <= 0<32> l23050D48
l23050D48:
	Mem20[a2:word32] = a4
	a0_21 = 0<32>
l23050D14:
	word32 sp_31
	word32 s1_34
	word32 a5_38
	word32 a7_41
	word32 a3_43
	call Mem14[a0 + 1252<i32>:int32] (retsize: 0;)
		uses: a0:a0 + 1248<i32>,a1:a0 + 576<i32> + a6_13,a2:a5_18,a3:a3_43,a4:fp + 0xFFFFFFEC<32>,a7:a7_41,ra:ra,s0:a0,s1:a4,s2:a1
		defs: a0:a0_37,a3:a3_43,a4:a4_42,a5:a5_38,a7:a7_41,ra:ra_32,s1:s1_34,s2:s2_35,sp:sp_31
	s0 = Mem14[a3_43 + 60<i32>:word32]
	a2 = Mem14[sp_31 + 228<i32>:word32]
	word32 a5_49 = a5_38 + a3_43
	Mem50[a5_49 + 60<i32>:word32] = s0
	a5_18 = a5_49 - s2
	Mem52[a5_18:word32] = s1_34
l23050D3C:
	s0Out = s0
	a0Out = a0_21
	a2Out = a2
	a4Out = a4
	a5Out = a5_18
	s2Out = s2
	s4Out = dwArg04
	s8Out = dwLoc1C
	return ra
_aws_iot_mqtt_internal_readWrapper_exit:


word32 aws_iot_mqtt_internal_write_len_to_buffer(word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      aws_iot_mqtt_internal_serialize_ack
//      aws_iot_mqtt_publish
//      _aws_iot_mqtt_serialize_subscribe.constprop.1
//      aws_iot_mqtt_unsubscribe
//      aws_iot_mqtt_internal_serialize_zero
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
aws_iot_mqtt_internal_write_len_to_buffer_entry:
l23050D4E:
	word32 a5_11 = 0<32>
l23050D54:
	word32 a4_16 = a1 & 127<i32>
	word32 a6_7 = a1 >>u 7<u32>
	branch a1 <=u 127<i32> l23050D64
l23050D60:
	a4_16 = a4_16 | 128<i32>
l23050D64:
	a5_11 = a5_11 + 1<32>
	Mem17[a0 + a5_11 + 4095<i32>:byte] = SLICE(a4_16, byte, 0)
	branch a1 >u 127<i32> l23050D76
l23050D76:
	a1 = a6_7
l23050D72:
	a1Out = a1
	a3Out = 127<i32>
	a4Out = a4_16
	a5Out = a5_11
	return a5_11
aws_iot_mqtt_internal_write_len_to_buffer_exit:


word32 aws_iot_mqtt_internal_decode_remaining_length_from_buffer(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      aws_iot_mqtt_internal_deserialize_publish
//      aws_iot_mqtt_internal_deserialize_ack
//      _aws_iot_mqtt_deserialize_suback.constprop.0
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5 a6 a7 t1
// Preserved: sp
aws_iot_mqtt_internal_decode_remaining_length_from_buffer_entry:
l23050D7A:
	Mem4[a1:word32] = 0<32>
	word32 a5_5 = 0<32>
	word32 a3_17 = 1<32>
l23050D84:
	a5_5 = a5_5 + 1<32>
	branch a5_5 == 5<32> l23050DB4
l23050DB4:
	a3Out = a3_17
	a4Out = a4
	a5Out = <invalid>
	return -35<i32>
l23050D8A:
	word32 a4_15 = CONVERT(Mem14[a0 + a5_5 + -1<i32>:byte], byte, word32)
	Mem25[a1:word32] = Mem14[a1:int32] + ((a4_15 & 127<i32>) + a3_17)
	a4 = CONVERT(SLICE(a4_15, byte, 0), byte, int32)
	a3_17 = a3_17 << 7<i32>
	branch a4 < 0<32> l23050D84
l23050DAE:
	Mem28[a5_5:word32] = a2
	a3Out = a3_17
	a4Out = a4
	a5Out = <invalid>
	return 0<32>
aws_iot_mqtt_internal_decode_remaining_length_from_buffer_exit:


word32 aws_iot_mqtt_internal_get_final_packet_length_from_remaining_length(word32 a0, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      aws_iot_mqtt_publish
//      _aws_iot_mqtt_serialize_subscribe.constprop.1
//      aws_iot_mqtt_unsubscribe
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
aws_iot_mqtt_internal_get_final_packet_length_from_remaining_length_entry:
l23050DBA:
	branch a0 >u -126<i32> l23050DCC
l23050DCC:
	branch a0 >=u 0xFC000001<32> l23050DD6
l23050DD6:
	word32 a0_10 = a0 + 5<32>
	branch a0 >=u 0xFFE00001<32> l23050DE4
l23050DE0:
	a0_10 = a0 + 4<i32>
l23050DE4:
	a3Out = 0x200000<32>
	a4Out = <invalid>
	return a0_10
l23050DD2:
	a3Out = 0x4000000<32>
	a4Out = <invalid>
	return a0 + 3<32>
l23050DC8:
	a3Out = 127<i32>
	a4Out = <invalid>
	return a0 + 2<32>
aws_iot_mqtt_internal_get_final_packet_length_from_remaining_length_exit:


word32 aws_iot_mqtt_internal_read_uint16_t(word32 a4, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_internal_deserialize_publish
//      aws_iot_mqtt_internal_deserialize_ack
//      _aws_iot_mqtt_deserialize_suback.constprop.0
// MayUse:  a4:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
aws_iot_mqtt_internal_read_uint16_t_entry:
l23050DE6:
	word32 a3_7 = CONVERT(Mem0[a4 + 1<i32>:byte], byte, word32)
	word32 a5_10 = (CONVERT(Mem0[a4:byte], byte, word32) << 8<i32>) + a3_7
	Mem11[a4 + 2<32>:word32] = Mem0[a4:word32]
	a3Out = a3_7
	a4Out = a4 + 2<32>
	a5Out = a5_10
	return CONVERT(SLICE(a5_10, word16, 0), word16, word32)
aws_iot_mqtt_internal_read_uint16_t_exit:


word32 aws_iot_mqtt_internal_write_uint_16(word32 a1, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      aws_iot_mqtt_internal_serialize_ack
//      aws_iot_mqtt_publish
//      _aws_iot_mqtt_serialize_subscribe.constprop.1
//      aws_iot_mqtt_unsubscribe
//      aws_iot_mqtt_internal_write_utf8_string
// MayUse:  a1:[0..7] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
aws_iot_mqtt_internal_write_uint_16_entry:
l23050E00:
	Mem8[a5:byte] = SLICE(a1 >>u 8<u32>, byte, 0)
	Mem11[a5 + 1<i32>:word32] = Mem8[a5:word32]
	Mem12[a5 + 1<i32>:byte] = SLICE(a1, byte, 0)
	word32 a0_13 = Mem12[a5:word32]
	Mem15[a5 + 1<32>:word32] = a0_13
	a4Out = a5 + 1<i32>
	a5Out = a5 + 1<32>
	return a0_13
aws_iot_mqtt_internal_write_uint_16_exit:


word32 aws_iot_mqtt_internal_read_char(word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      aws_iot_mqtt_internal_deserialize_publish
//      aws_iot_mqtt_internal_deserialize_ack
//      _aws_iot_mqtt_deserialize_suback.constprop.0
// MayUse:  a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
aws_iot_mqtt_internal_read_char_entry:
l23050E1E:
	word32 a0_5 = Mem0[a5:word32]
	word32 a0_8 = CONVERT(Mem0[a5:byte], byte, word32)
	Mem9[a5 + 1<32>:word32] = a0_5
	a4Out = a0_5
	a5Out = a5 + 1<32>
	return a0_8
aws_iot_mqtt_internal_read_char_exit:


word32 aws_iot_mqtt_internal_write_char(word32 a1, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      aws_iot_mqtt_internal_serialize_ack
//      aws_iot_mqtt_publish
//      _aws_iot_mqtt_serialize_subscribe.constprop.1
//      aws_iot_mqtt_unsubscribe
//      aws_iot_mqtt_internal_serialize_zero
// MayUse:  a1:[0..7] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
aws_iot_mqtt_internal_write_char_entry:
l23050E2C:
	Mem7[a5:byte] = SLICE(a1, byte, 0)
	word32 a0_8 = Mem7[a5:word32]
	Mem10[a5 + 1<32>:word32] = a0_8
	a5Out = a5 + 1<32>
	return a0_8
aws_iot_mqtt_internal_write_char_exit:


word32 aws_iot_mqtt_internal_write_utf8_string(word32 a1, word32 a2, word32 a5, word32 dwArg38, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      aws_iot_mqtt_publish
//      _aws_iot_mqtt_serialize_subscribe.constprop.1
//      aws_iot_mqtt_unsubscribe
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
aws_iot_mqtt_internal_write_utf8_string_entry:
l23050E3A:
	word32 a1_12 = a2
	word32 s1_18 = a0
	word32 a4_21
	word32 a5_22
	word32 a0_20 = aws_iot_mqtt_internal_write_uint_16(a2, a5, out a4_21, out a5_22)
	branch a2 == 0<32> l23050E62
l23050E52:
	word32 a2_89
	word32 a6_90
	word32 a7_91
	memcpy(a0_20, a1, a2, out a1_12, out a2_89, out a3, out a4_21, out a5_22, out a6_90, out a7_91)
	s1_18 = Mem16[a5_22:word32]
	Mem41[a2 + a5_22:word32] = s1_18
l23050E62:
	0<32> = dwArg38
	a0Out = a0_20
	a1Out = a1_12
	a3Out = a3
	a4Out = a4_21
	a5Out = a5_22
	s2Out = a1
	return s1_18
aws_iot_mqtt_internal_write_utf8_string_exit:


word32 aws_iot_mqtt_internal_init_header(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      aws_iot_mqtt_internal_serialize_ack
//      aws_iot_mqtt_publish
//      _aws_iot_mqtt_serialize_subscribe.constprop.1
//      aws_iot_mqtt_unsubscribe
//      aws_iot_mqtt_internal_serialize_zero
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5 a6
// Preserved: sp
aws_iot_mqtt_internal_init_header_entry:
l23050E6E:
	word32 a6_10 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l23050EB8
l23050E72:
	Mem7[a0:byte] = 0<8>
	a1 = a1 + 0xFFFFFFFF<32> & 255<i32>
	a5 = 0xD<32>
	a6_10 = 0xFFFFFFFF<32>
	branch a1 >u 0xD<32> l23050EB8
l23050E84:
	word32 a3_18 = a3 << 3<i32> | CONVERT(Mem7[a1 + 0x230883B4<32>:byte], byte, word32) << 4<i32>
	a1 = a1 + 0x230883B4<32>
	a3 = a3_18 & 255<i32>
	branch a2 == 1<32> l23050EBC
l23050EBC:
	a3 = a3_18 & 255<i32> | 2<i32>
l23050EA2:
	Mem25[a0:byte] = SLICE(a3, byte, 0)
	a5 = CONVERT(Mem25[a0:byte], byte, word32)
	a4 = CONVERT(a4 <u 0xFFFFFFFE<32>, bool, word32) | a5
	Mem32[a0:byte] = SLICE(a4, byte, 0)
	a6_10 = 0<32>
l23050EB8:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return a6_10
aws_iot_mqtt_internal_init_header_exit:


word32 aws_iot_mqtt_internal_send_packet(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg54, word32 dwArgC8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      _aws_iot_mqtt_internal_disconnect
//      aws_iot_mqtt_publish
//      aws_iot_mqtt_subscribe
//      aws_iot_mqtt_resubscribe
//      aws_iot_mqtt_unsubscribe
//      aws_iot_mqtt_yield
//      aws_iot_mqtt_internal_cycle_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0054:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_mqtt_internal_send_packet_entry:
l23050EC2:
	branch a0 == 0<32> l23050F46
l23050EC6:
	branch a2 == 0<32> l23050F46
l23050F46:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFFE<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
l23050EC8:
	word32 a0_24 = Mem22[a4 + 52<i32>:word32]
	word32 sp_114 = fp + -48<i32>
	word32 s0_110 = a0_24
	word32 a5_138 = -33<i32>
	branch a1 >=u a4 l23050F2C
l23050EE4:
	word32 a0_34
	word32 a2_105
	word32 s4_107
	s1 = aws_iot_mqtt_client_lock_mutex(a2, a0_24, a0_24 + 1100<i32>, a2, a3, a4, mstatus, dwLoc2C, dwLoc08, dwArg54, dwArgC8, dwArg0108, out a0_34, out a1, out a2_105, out a3, out a4, out s2, out s3, out s4_107)
	a5_138 = a0_34
	branch a0_34 != 0<32> l23050F2C
l23050EF6:
	word32 s2_106 = 0<32>
	word32 s5_51 = a0_24 + 1248<i32>
l23050EFE:
	branch s2_106 >=u s3 l23050F22
l23050F02:
	word32 a0_62
	word32 s2_66
	word32 s3_72
	word32 a1_295
	word32 a5_298
	word32 a3_297
	word32 a2_296
	word32 s8_299
	word32 s1_65 = has_timer_expired(a2_105, a3, a4, mstatus, Mem49[sp_114 + 20<i32>:word32], Mem49[sp_114 + 24<i32>:word32], Mem49[sp_114 + 56<i32>:word32], Mem49[sp_114 + 296<i32>:word32], Mem49[sp_114 + 360<i32>:word32], out a0_62, out a1_295, out a2_296, out a3_297, out a4, out a5_298, out s2_66, out s3_72, out s4_107, out s8_299)
	branch a0_62 != 0<32> l23050F22
l23050F0A:
	word32 a5_87
	word32 a0_88
	word32 s2_93
	word32 tp_100
	word32 t3_101
	word32 s8_102
	word32 a6_104
	word32 a7_168
	word32 s6_169
	word32 t0_170
	word32 t1_171
	word32 t4_172
	word32 t5_173
	word32 t6_174
	call Mem49[s0_110 + 1256<i32>:int32] (retsize: 0;)
		uses: a0:s5_83,a1:s2_66 + 64<i32> + s0_76,a2:s3_72 - s2_66,a3:s1_65,a4:sp_60 + 12<i32>,a6:a6_104,a7:a7_168,mstatus:mstatus_57,ra:ra_85,s0:s0_76,s1:s1_65,s2:s2_66,s3:s3_72,s4:s4_73,s5:s5_83,s6:s6_169,s8:s8_102,Stack +0054:0<32>,Stack +00C8:dwArgC8,Stack +0108:dwArg0108,Stack +FFFFFFD4:dwLoc2C,Stack +FFFFFFF8:dwLoc08,t0:t0_170,t1:t1_171,t3:t3_101,t4:t4_172,t5:t5_173,t6:t6_174,tp:tp_100
		defs: a0:a0_88,a3:a3_99,a4:a4_97,a5:a5_87,a6:a6_104,a7:a7_168,mstatus:mstatus_103,ra:ra_91,s0:s0_90,s2:s2_93,s3:s3_94,s4:s4_95,s5:s5_96,s6:s6_169,s8:s8_102,sp:sp_86,t0:t0_170,t1:t1_171,t3:t3_101,t4:t4_172,t5:t5_173,t6:t6_174,tp:tp_100
	branch a0_88 == 0<32> l23050F40
l23050F40:
	a2_105 = Mem49[sp_114 + 228<i32>:word32]
	s2_106 = s2_93 + a5_87
l23050F22:
	word32 a0_116
	word32 a2_294
	aws_iot_mqtt_client_unlock_mutex(s0_110, s4_107, a4, mstatus, Mem49[sp_114 + 4<i32>:word32], Mem49[sp_114 + 40<i32>:word32], Mem49[sp_114 + 132<i32>:word32], Mem49[sp_114 + 248<i32>:word32], Mem49[sp_114 + 312<i32>:word32], Mem49[sp_114 + 376<i32>:word32], out s1, out a0_116, out a1, out a2_294, out a3, out a4, out s2, out s3, out s5, out s6)
	a5_138 = a0_116
l23050F2C:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a0Out = a5_138
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg78
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
aws_iot_mqtt_internal_send_packet_exit:


word32 aws_iot_mqtt_internal_cycle_read(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 s10, word32 mstatus, word32 dwArg24, word32 dwArg84, word32 dwArg98, word32 dwArgD8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_yield
//      aws_iot_mqtt_internal_wait_for_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s2:[0..31] Stack +0024:[0..31] Stack +0084:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a1 a2 a3 a4 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_mqtt_internal_cycle_read_entry:
l23050F4A:
	word32 sp_169 = fp + -96<i32>
	word32 s1_266 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l23051040
l23050F68:
	branch a1 == 0<32> l23051040
l23050F6A:
	word32 a0_40
	word32 s4_1012
	word32 a3_1011
	aws_iot_mqtt_client_lock_mutex(0xFFFFFFFE<32>, a0, a0 + 1096<i32>, a2, a3, a4, mstatus, dwLoc5C, s2, dwArg24, dwArg98, dwArgD8, out a0_40, out a1, out a2, out a3_1011, out a4, out s2, out s3, out s4_1012)
	s6 = a0 + 1096<i32>
	s0 = a0
	word32 s5_181 = a2
	s1_266 = a0_40
	branch a0_40 != 0<32> l23051040
l23050F7E:
	init_timer(fp + -64<i32>)
	word32 a0_70
	word32 a2_1013
	word32 a2_1014
	word32 a5_1015
	word32 s2_1016
	word32 s4_1017
	word32 s8_1018
	word32 a4_114
	word32 ra_104 = _aws_iot_mqtt_internal_readWrapper(ra, countdown_ms(fp + -64<i32>, a1, out a2_1013), 0<32>, 1<32>, fp + -72<i32>, out s0, out a0_70, out a2_1014, out a4_114, out a5_1015, out s2_1016, out s4_1017, out s8_1018)
	branch a0_70 == 0xFFFFFFE7<32> l2305108E
l2305108E:
l23050FA4:
	branch a0_70 != 0<32> l2305102E
l23050FA6:
	word32 s4_130 = 0<32>
	word32 s9_183 = 5<32>
l23050FAE:
	s7 = s4_130 + 1<i32>
	branch s7 == 5<32> l23051208
l23051208:
l23050FB6:
	word32 a0_105
	word32 s4_108
	word32 s8_109
	word32 s2_119
	word32 a5_1019
	word32 a2_112
	ra_104 = _aws_iot_mqtt_internal_readWrapper(ra_104, s0, s7, 1<32>, fp + -68<i32>, out s0, out a0_105, out a2_112, out a4_114, out a5_1019, out s2_119, out s4_108, out s8_109)
	word32 s1_120 = a0_105
	branch a0_105 != 0<32> l2305102E
l23050FC8:
	word32 a5_123 = CONVERT(Mem69[s0 + s7 + 576<i32>:byte], byte, word32)
	a4_114 = (a5_123 & 127<i32>) + s8_109
	word32 s2_129 = s2_119 + a4_114
	branch CONVERT(SLICE(a5_123, byte, 0), byte, int32) < 0<32> l2305105E
l2305105E:
	s4_130 = s7
l23050FE4:
	s0 = Mem69[a2_112 + 56<i32>:word32]
	branch s2_129 + (s4_108 + 2<i32>) <u a2_112 l23051062
l23051062:
	branch s2_129 != 0<32> l23051076
l23051076:
	word32 a0_138
	word32 a5_139
	word32 s2_152
	word32 s4_1021
	word32 s8_1022
	word32 a2_1020
	ra_104 = _aws_iot_mqtt_internal_readWrapper(ra_104, s0, s4_108 + 2<i32>, s2_129, fp + -72<i32>, out s0, out a0_138, out a2_1020, out a4_114, out a5_139, out s2_152, out s4_1021, out s8_1022)
	branch a0_138 != 0<32> l2305108A
l23051084:
	branch a5_139 == s2_152 l23051066
l2305108A:
l23051066:
	word32 a5_157 = CONVERT(Mem69[s0 + 576<i32>:byte], byte, word32)
	Mem158[s0 + 60<i32>:word32] = 0<32>
	Mem162[a2:byte] = SLICE(a5_157 >>u 4<i32>, byte, 0)
l23050FF2:
	word32 s4_163 = 0<32>
	s7 = s0 + 576<i32>
	word32 s8_165 = s0 + 1248<i32>
l23050FFC:
	word32 a0_200
	word32 a5_205
	word32 tp_212
	word32 t5_701
	word32 t1_700
	word32 t6_702
	call Mem69[s0 + 1252<i32>:int32] (retsize: 0;)
		uses: a0:s8_175,a1:s7_173,a2:a2_185,a3:s3_171,a4:sp_169 + 24<i32>,a5:a5_205,mstatus:mstatus_186,ra:ra_178,s0:s0_166,s1:s1_177,s10:s10_184,s2:s2_179,s3:s3_171,s4:s4_180,s5:s5_181,s6:s6_182,s7:s7_173,s8:s8_175,s9:s9_183,Stack +0024:dwArg24,Stack +0084:dwArg84,Stack +0098:dwArg98,Stack +00D8:dwArgD8,Stack +FFFFFFA4:dwLoc5C,t1:t1_700,t5:t5_701,t6:t6_702,tp:tp_212
		defs: a0:a0_200,a4:a4_203,a5:a5_205,mstatus:mstatus_211,ra:ra_189,s0:s0_190,s10:s10_199,s2:s2_191,s3:s3_192,s4:s4_193,s5:s5_194,s6:s6_195,s7:s7_196,s9:s9_198,sp:sp_187,t1:t1_700,t5:t5_701,t6:t6_702,tp:tp_212
	s1_120 = a0_200
	branch a0_200 != 0<32> l23051202
l23051202:
	branch s4_163 >=u s2_129 l23051024
l23051206:
l23051010:
	s4_163 = s4_163 + a5_205
	s8_165 = Mem69[sp_169 + 228<i32>:word32]
	s0 = Mem69[a5_205 + 56<i32>:word32]
	a2_112 = s2_129 - s4_163
	branch a5_205 >=u a2_112 l23051020
l2305101E:
	a2_112 = a5_205
l23051020:
	branch s4_163 <u s2_129 l23050FFC
l23051024:
	branch s2_129 != s4_163 l2305102E
l23051028:
	Mem225[s0 + 60<i32>:word32] = 0<32>
l2305102E:
	word32 a3_261
	word32 s5_270
	word32 a0_258
	word32 t1_274 = aws_iot_mqtt_client_unlock_mutex(s0, s6, a4_114, mstatus, Mem254[sp_169 + 4<i32>:word32], Mem254[sp_169 + 40<i32>:word32], Mem254[sp_169 + 132<i32>:word32], Mem254[sp_169 + 248<i32>:word32], Mem254[sp_169 + 312<i32>:word32], Mem254[sp_169 + 376<i32>:word32], out s1_266, out a0_258, out a1, out a2, out a3_261, out a4, out s2, out s3, out s5_270, out s6)
	branch a0_258 == 0<32> l23051092
l23051092:
	branch s1_266 == 2<32> l230511F4
l230511F4:
	s1_266 = 0<32>
l23051098:
	branch s1_266 != 0<32> l23051040
l2305109A:
	a4 = CONVERT(Mem254[s5_270:byte], byte, word32) + 0xFFFFFFFE<32> & 255<i32>
	branch a4 >u 0xB<32> l230511F8
l230511F8:
	s1_266 = 0xFFFFFFE1<32>
l230510AA:
	word32 a5_288 = 1<32> << a4
	a4 = a5_288 & 685<i32>
	branch (a5_288 & 685<i32>) != 0<32> l23051040
l230510B6:
	a4 = a5_288 << 0x14<u32>
	branch a5_288 << 0x14<u32> < 0<32> l230511E4
l230511E4:
	word32 a1_291 = CONVERT(Mem254[s0 + 40<i32>:uint16], uint16, word32)
	Mem292[s0 + 25<i32>:byte] = 0<8>
	s0 = countdown_sec(ra_104, s0, a1_291, a3_261, Mem292[sp_169 + 24<i32>:word32], Mem292[sp_169 + 96<i32>:word32], Mem292[sp_169 + 100<i32>:word32], Mem292[sp_169 + 136<i32>:word32], Mem292[sp_169 + 172<i32>:word32], out s1_266, out a1, out a2)
l230510BE:
	s1_266 = 0xFFFFFFE1<32>
	branch (a5_288 & 2<32>) == 0<32> l23051040
l230510C4:
	word32 s0_310 = Mem254[(a5_288 & 2<32>) + 56<i32>:word32]
	Mem313[sp_169 + 128<i32>:word32] = a5_288 & 2<32>
	Mem315[sp_169:word32] = s0_310 + 576<i32>
	Mem322[sp_169 + 12<i32>:word32] = 0<32>
	Mem323[sp_169 + 22<i32>:word16] = 0<16>
	Mem324[sp_169 + 140<i32>:word32] = 0<32>
	word32 a0_325
	word32 a3_336
	word32 ra_328 = aws_iot_mqtt_internal_deserialize_publish(t1_274, sp_169 + 34<i32>, sp_169 + 32<i32>, sp_169 + 33<i32>, sp_169 + 36<i32>, sp_169 + 24<i32>, sp_169 + 22<i32>, sp_169 + 40<i32>, sp_169 + 44<i32>, Mem324[sp_169 + 164<i32>:word32], Mem324[sp_169 + 408<i32>:word32], out s0, out a0_325, out a1, out a2, out a3_336, out a4, out s2, out s3, out s6, out s7)
	s1_266 = a0_325
	branch a0_325 != 0<32> l23051040
l230510F8:
	word32 s4_348 = CONVERT(Mem324[sp_169 + 22<i32>:uint16], uint16, word32)
	s1_266 = 0xFFFFFFFE<32>
	branch s2 == 0<32> l23051040
l23051104:
	aws_iot_mqtt_get_client_state(s0)
	word32 a2_1025
	word32 s5_1026
	word32 a0_1024
	word32 s1_1023
	word32 s6_373
	word32 s4_367
	word32 s3_366
	word32 a4_360
	word32 a3_359
	word32 a1_357
	word32 s2_365
	word32 s0_363 = aws_iot_mqtt_set_client_state(0xFFFFFFFE<32>, s0, 9<32>, a3_336, a4, s3, s4_348, mstatus, Mem324[sp_169 + 8<i32>:word32], Mem324[sp_169 + 216<i32>:word32], Mem324[sp_169 + 280<i32>:word32], Mem324[sp_169 + 344<i32>:word32], out s1_1023, out a0_1024, out a1_357, out a2_1025, out a3_359, out a4_360, out s2_365, out s3_366, out s4_367, out s5_1026, out s6_373)
	s7 = s0_363 + 1240<i32>
	word32 s5_381 = s2_365 + s4_367
	s10 = 47<i32>
	word32 s8_383 = 43<i32>
	word32 s9_384 = 35<i32>
l2305112E:
	word32 s1_387 = Mem324[a1_357:word32]
	branch a1_357 == 0<32> l23051140
l23051132:
	word32 a5_397
	branch CONVERT(Mem324[s1_387 + 4<i32>:uint16], uint16, word32) == s4_367 l23051184
l23051184:
	word32 a2_1027
	branch strncmp(s2_365, a1_357, s4_367, out a1_357, out a2_1027, out a3_359, out a4_360, out a5_397) != 0<32> l2305113A
l2305113A:
	s1_387 = Mem324[a3_359:word32]
	a5_397 = s2_365
	branch a3_359 != 0<32> l230511B0
l230511B0:
	a4_360 = CONVERT(Mem324[a3_359:byte], byte, word32)
	branch a4_360 == 0<32> l230511FC
l230511FC:
	branch s5_381 != a5_397 l23051140
l23051200:
l2305118E:
	s1_387 = Mem324[a5_397 + 8<i32>:word32]
	branch a5_397 == 0<32> l23051140
l23051192:
	word32 a5_477
	word32 tp_484
	word32 t1_485
	word32 t5_486
	word32 t6_487
	call a5_397 (retsize: 0;)
		uses: a0:s0_430,a1:s2_391,a2:s4_389,a3:sp_420 + 32<i32>,a4:a4_417,a5:a5_477,mstatus:mstatus_457,ra:ra_434,s0:s0_430,s1:Mem324[a4_417 + 12<i32>:word32],s10:s10_454,s2:s2_391,s3:s3_437,s4:s4_389,s5:s5_440,s6:s6_442,s7:s7_445,s8:s8_448,s9:s9_451,Stack +0024:dwArg24,Stack +0084:dwArg84,Stack +0098:dwArg98,Stack +00D8:dwArgD8,Stack +FFFFFFA4:dwLoc5C,t1:t1_485,t5:t5_486,t6:t6_487,tp:tp_484
		defs: a1:a1_473,a3:a3_476,a4:a4_475,a5:a5_477,mstatus:mstatus_483,ra:ra_461,s0:s0_462,s1:s1_460,s10:s10_471,s2:s2_463,s3:s3_464,s4:s4_465,s5:s5_466,s6:s6_467,s7:s7_468,s8:s8_469,s9:s9_470,sp:sp_459,t1:t1_485,t5:t5_486,t6:t6_487,tp:tp_484
l230511B6:
	branch a5_397 <u s5_381 l230511A0
l230511A0:
	word32 a2_488 = CONVERT(Mem324[a5_397:byte], byte, word32)
	branch a2_488 != s10 l230511BC
l230511BC:
	branch a4_360 == s8_383 l230511CC
l230511CC:
	word32 a4_490 = a5_397 + 1<i32>
	branch s5_381 == a4_490 l230511AC
l230511D4:
	branch CONVERT(Mem324[a5_397 + 1<i32>:byte], byte, word32) != s10 l230511CA
l230511CA:
	a5_397 = a4_490
l230511DC:
l230511C0:
	branch a4_360 == s9_384 l230511DE
l230511DE:
	a5_397 = s5_381 + -1<i32>
l230511C4:
	branch a2_488 == a4_360 l230511AC
l230511C8:
l230511A8:
	branch a4_360 != s10 l23051140
l230511AC:
	a3_359 = a3_359 + 1<32>
	a5_397 = a5_397 + 1<32>
l230511BA:
l23051140:
	word32 s1_506 = s1_387 + 0x10<32>
	branch s7 != s1_506 l2305112E
l23051146:
	word32 a0_530
	word32 s1_1028
	word32 a3_1029
	word32 s4_1030
	word32 s5_1031
	s0 = aws_iot_mqtt_set_client_state(s1_506, s0_363, s6_373, a3_359, a4_360, s3_366, s4_367, mstatus, Mem324[sp_169 + 8<i32>:word32], Mem324[sp_169 + 216<i32>:word32], Mem324[sp_169 + 280<i32>:word32], Mem324[sp_169 + 344<i32>:word32], out s1_1028, out a0_530, out a1, out a2, out a3_1029, out a4, out s2, out s3, out s4_1030, out s5_1031, out s6)
	s1_266 = a0_530
	branch a0_530 != 0<32> l23051040
l23051156:
	branch CONVERT(Mem324[sp_169 + 32<i32>:byte], byte, word32) == 0<32> l23051040
l2305115E:
	word32 a0_561
	word32 a3_568
	s0 = aws_iot_mqtt_internal_serialize_ack(Mem324[a1 + 52<i32>:word32] + 64<i32>, a1, 4<32>, 0<32>, CONVERT(Mem324[sp_169 + 36<i32>:uint16], uint16, word32), sp_169 + 28<i32>, Mem324[sp_169 + 296<i32>:word32], out a0_561, out a1, out a2, out a3_568, out a4, out s2, out s3)
	s1_266 = a0_561
	branch a0_561 != 0<32> l23051040
l23051178:
	word32 s1_1032
	word32 a3_1033
	word32 s4_1034
	word32 s5_1035
	aws_iot_mqtt_internal_send_packet(ra_328, s0, a1, s3, a3_568, a4, mstatus, Mem324[sp_169 + 84<i32>:word32], Mem324[sp_169 + 200<i32>:word32], Mem324[sp_169 + 264<i32>:word32], Mem324[sp_169 + 296<i32>:word32], out s0, out s1_1032, out a0_258, out a1, out a2, out a3_1033, out a4, out s2, out s3, out s4_1034, out s5_1035, out s6, out mstatus)
l23051038:
	branch (s1_266 & 253<i32>) != 0<32> l23051040
l2305103E:
	s1_266 = a0_258
l23051040:
	s0Out = s0
	s1Out = dwArg28
	a0Out = s1_266
	a1Out = a1
	a2Out = a2
	a3Out = dwArg08
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArgDC
	s5Out = s4
	s6Out = s6
	s7Out = s7
	s10Out = s10
	mstatusOut = mstatus
	return dwArg68
aws_iot_mqtt_internal_cycle_read_exit:


void aws_iot_mqtt_internal_flushBuffers(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
aws_iot_mqtt_internal_flushBuffers_entry:
l2305120E:
	Mem4[a0 + 60<i32>:word32] = 0<32>
	return
aws_iot_mqtt_internal_flushBuffers_exit:


word32 aws_iot_mqtt_internal_wait_for_read(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 s10, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg64, word32 dwArg78, word32 dwArgB8, word32 dwArg0108, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      aws_iot_mqtt_publish
//      aws_iot_mqtt_subscribe
//      aws_iot_mqtt_resubscribe
//      aws_iot_mqtt_unsubscribe
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s0 s1 s10 s2 s3 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_mqtt_internal_wait_for_read_entry:
l23051216:
	branch a0 == 0<32> l2305125E
l2305125E:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFFE<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s7Out = s7
	s10Out = s10
	mstatusOut = mstatus
	return ra
l23051218:
	word32 s1_14 = a0
	word32 a0_125 = 0xFFFFFFFE<32>
	branch a2 == 0<32> l23051252
l23051228:
	s0 = a2
l23051230:
	word32 a0_29
	word32 a2_219
	word32 a5_220
	word32 s4_221
	word32 s8_222
	s1_14 = has_timer_expired(a2, a3, a4, mstatus, dwLoc0C, dwLoc08, dwArg18, dwArg0108, dwArg0148, out a0_29, out a1, out a2_219, out a3, out a4, out a5_220, out s2, out s3, out s4_221, out s8_222)
	branch a0_29 != 0<32> l23051262
l23051262:
	a0_125 = 0xFFFFFFE4<32>
l23051238:
	word32 s4_216
	word32 s5_217
	word32 s6_218
	ra = aws_iot_mqtt_internal_cycle_read(ra, s1_14, s0, fp + 0xFFFFFFEF<32>, a3, a4, s2, s10, mstatus, dwArg04, dwArg64, dwArg78, dwArgB8, out s0, out s1_14, out a0_125, out a1, out a2, out a3, out a4, out s2, out s3, out s4_216, out s5_217, out s6_218, out s7, out s10, out mstatus)
	branch (a0_125 & 253<i32>) != 0<32> l23051252
l2305124A:
	branch s2 != 0<32> l23051230
l23051252:
	s0Out = s0
	s1Out = s1_14
	a0Out = a0_125
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s7Out = s7
	s10Out = s10
	mstatusOut = mstatus
	return ra
aws_iot_mqtt_internal_wait_for_read_exit:


word32 aws_iot_mqtt_internal_serialize_zero(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _aws_iot_mqtt_internal_disconnect
//      aws_iot_mqtt_yield
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1 a2 a3 a4 s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3
// Preserved: sp
aws_iot_mqtt_internal_serialize_zero_entry:
l23051266:
	word32 s0_13 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l230512B8
l23051278:
	branch a3 == 0<32> l230512B8
l2305127A:
	s0_13 = -33<i32>
	branch a1 <=u 3<32> l230512B8
l23051284:
	word32 a5_31
	word32 a0_28 = aws_iot_mqtt_internal_init_header(fp + 0xFFFFFFE8<32>, a2, 0<32>, 0<32>, 0<32>, out a1, out a3, out a4, out a5_31)
	s2 = a3
	s1 = a0
	a2 = 0<32>
	s0_13 = a0_28
	branch a0_28 != 0<32> l230512B8
l2305129C:
	word32 a5_46
	word32 a5_94
	Mem51[a3:word32] = aws_iot_mqtt_internal_write_len_to_buffer(aws_iot_mqtt_internal_write_char(0<32>, a5_31, out a5_94), 0<32>, out a1, out a3, out a4, out a5_46) + a5_46 - a0
	a2 = dwArgC4
l230512B8:
	s1Out = s1
	a0Out = s0_13
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s4Out = dwArg04
	return s0_13
aws_iot_mqtt_internal_serialize_zero_exit:


void format_int(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] s3:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5
// Preserved: sp
format_int_entry:
l230512C6:
	word32 s0_160 = a0
	word32 s6_37 = a2
	word32 s7_387 = a3
	word32 s8_40 = a4
	word32 s11_169 = a6
	word32 s1_101 = a7
	branch (a4 & 128<i32>) != 0<32> l23051456
l23051456:
l230512F8:
l23051302:
	word32 s3_131 = 0<32>
	branch (a4 & 64<i32>) == 0<32> l23051320
l2305130A:
	branch a3 >= 0<32> l23051320
l2305130E:
	s6_37 = 0<32> - a2
	s7_387 = 0<32> - a3 - CONVERT(s6_37 != 0<32>, bool, word32)
	s3_131 = 1<32>
l23051320:
	word32 a0_62 = s6_37
	word32 a1_64 = s7_387
	word32 s2_65 = 0<32>
	a5_379 = a5
l2305132A:
	word32 a5_379
	branch (a0_62 | a1_64) != 0<32> l23051462
l23051462:
	word32 a3_1067
	word32 a4_1068
	a0_62 = __udivdi3(a0_62, a1_64, a5_379, a5 >> 0x1F<u32>, out a1_64, out a3_1067, out a4_1068, out a5_379)
	s2_65 = s2_65 + 1<32>
l23051332:
	word32 a0_422 = a4 & 32<i32>
	branch (a4 & 32<i32>) == 0<32> l23051346
l23051338:
	branch a5_379 != 8<32> l23051346
l2305133E:
	branch s2_65 < a7 l23051354
l23051342:
	s1_101 = s2_65 + 1<i32>
l23051346:
	branch s2_65 < s1_101 l23051354
l2305134A:
	s1_101 = s2_65
	branch (s6_37 | s7_387) != 0<32> l23051354
l23051352:
	s1_101 = 1<32>
l23051354:
	word32 s10_115 = s1_101
	branch (a4 & 8<i32>) == 0<32> l23051366
l2305135C:
	s10_115 = 4<32>
	branch a5_379 == 0x10<32> l23051366
l23051364:
	s10_115 = 3<32>
l23051366:
	word32 s2_125 = (s1_101 + -1<i32> ^ s10_115) + s1_101
	word32 s1_135 = CONVERT((a4 & 20<i32> | s3_131) != 0<32>, bool, word32) + s2_125
	branch (a4 & 32<i32>) == 0<32> l2305138A
l23051382:
	branch a5_379 != 0x10<32> l2305138A
l23051388:
	s1_135 = s1_135 + 2<32>
l2305138A:
	word32 a3_144 = 0<32>
	branch (a4 & 3<i32>) != 0<32> l230513B4
l23051392:
	a3_144 = a4 & 3<i32>
	branch s1_135 >= a6 l230513B4
l23051398:
	a3_144 = a6 - s1_135
	word32 a2_155 = 0<32>
l230513A2:
	branch a2_155 >=u a1 l230513AC
l230513A6:
	Mem161[s0_160:byte] = 0x20<8>
	s0_160 = s0_160 + 1<32>
l230513AC:
	a2_155 = a2_155 + 1<32>
	branch a2_155 != a3_144 l230513A2
l230513B2:
	s11_169 = s1_135
l230513B4:
	branch s3_131 == 0<32> l23051472
l23051472:
	branch (a4 & 4<i32>) == 0<32> l23051488
l23051488:
	branch (a4 & 16<i32>) == 0<32> l230513C8
l2305148E:
	branch a3_144 >=u a1 l230513C6
l23051492:
	Mem199[s0_160:byte] = 0x20<8>
	s0_160 = s0_160 + 1<32>
l23051478:
	branch a3_144 >=u a1 l230513C6
l2305147C:
	Mem202[s0_160:byte] = 0x2B<8>
	s0_160 = s0_160 + 1<32>
l230513B8:
	branch a3_144 >=u a1 l230513C6
l230513BC:
	Mem205[s0_160:byte] = 0x2D<8>
	s0_160 = s0_160 + 1<32>
l230513C6:
	a3_144 = a3_144 + 1<32>
l230513C8:
	branch (a4 & 32<i32>) == 0<32> l230513FA
l230513CA:
	branch a5_379 != 0x10<32> l230513FA
l230513D0:
	branch a3_144 >=u a1 l230513DE
l230513D4:
	Mem228[s0_160:byte] = 0x30<8>
	s0_160 = s0_160 + 1<32>
l230513DE:
	branch a3_144 + 1<i32> >=u a1 l230513F8
l230513E6:
	word32 a2_233 = 88<i32>
	branch (a4 & 128<i32>) != 0<32> l230513F2
l230513EE:
	a2_233 = 120<i32>
l230513F2:
	Mem251[s0_160:byte] = SLICE(a2_233, byte, 0)
	s0_160 = s0_160 + 1<32>
l230513F8:
	a3_144 = a3_144 + 2<32>
l230513FA:
	branch (a4 & 3<i32>) != 1<32> l23051408
l23051400:
	branch s2_125 < s11_169 l230514AC
l230514AC:
	branch s1_135 < s11_169 l2305149E
l2305149E:
	branch a3_144 >=u a1 l230514A8
l230514A2:
	Mem290[s0_160:byte] = 0x30<8>
	s0_160 = s0_160 + 1<32>
l230514A8:
	a3_144 = a3_144 + 1<32>
	s11_169 = s11_169 + 0xFFFFFFFF<32>
l230514B0:
l23051408:
	word32 s0_305 = s0_160 + s2_125
	word32 s4_323 = s2_125 + a3_144
	word32 s5_345 = s10_115
	word32 s3_346 = s0_305
l2305141C:
	branch s2_125 > 0<32> l230514B2
l230514B2:
	branch s5_345 == 0<32> l230514FA
l230514FA:
	s4_323 = s4_323 + 0xFFFFFFFF<32>
	branch s4_323 >=u a1 l23051508
l23051500:
	Mem355[s3_346 + 4095<i32>:byte] = 0x5F<8>
l23051508:
	s3_346 = s3_346 + 0xFFFFFFFF<32>
	s2_125 = s2_125 + 0xFFFFFFFF<32>
	s5_345 = s10_115 + -1<i32>
l230514B6:
	s5_345 = s5_345 + 0xFFFFFFFF<32>
l230514B8:
	word32 a5_395
	s2_125 = s2_125 + 0xFFFFFFFF<32>
	branch s4_323 + 0xFFFFFFFF<32> >=u a1 l230514E2
l230514C6:
	a3_144 = CONVERT(Mem390[__umoddi3(s6_37, s7_387, a5_379, a3_144, out a5_395) + a5_395:byte], byte, word32)
	Mem410[s3_346 + 4095<i32>:byte] = SLICE(a3_144, byte, 0)
	a5_379 = a5_395
l230514E2:
	word32 a1_423
	word32 a4_1069
	a0_422 = __udivdi3(s6_37, s7_387, a5_379, a3_144, out a1_423, out a3_144, out a4_1069, out a5_379)
	s4_323 = s3
	s6_37 = a0_422
	s7_387 = a1_423
	s8_40 = dwArg08
l23051420:
	word32 a4_450 = s8_40 & 2<i32>
	word32 a6_465 = s11_169 + a0_422
l2305142E:
	branch a4_450 == 0<32> l23051438
l23051430:
	branch s1_135 < a6_465 - a0_422 l23051512
l23051512:
	branch a0_422 >=u a1 l2305151C
l23051516:
	Mem474[s0_305:byte] = 0x20<8>
	s0_305 = s0_305 + 1<32>
l2305151C:
	a0_422 = a0_422 + 1<32>
l23051438:
	return
format_int_exit:


word32 cvt(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 fflags, word32 frm, word32 dwArg54, word32 dwArgE4, word32 dwArg0164, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecvtbuf
//      fcvtbuf
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] Stack +0054:[0..31] Stack +00E4:[0..31] Stack +0164:[0..31]
// LiveOut: a0 a4 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s5 sp
cvt_entry:
l23051520:
	word32 s1_15 = a5
	word32 a5_189 = 78<i32>
	word32 s2_38 = a1
	word32 s5_179 = a3
	word32 s0_174 = 78<i32>
	branch a2 > 78<i32> l2305155A
l23051552:
	s0_174 = a2
	branch a2 >= 0<32> l2305155A
l23051558:
	s0_174 = 0<32>
l2305155A:
	__ledf2(a0, a1, a2, a3, fflags, frm)
	branch a0 < 0<32> l230515E4
l230515E4:
	Mem57[1<32>:word32] = a4
	a5_189 = 0x80000000<32>
	s2_38 = a1 ^ 0x80000000<32>
l2305156E:
	Mem60[a4:word32] = 0<32>
l23051572:
	word32 frm_109
	word32 s6_100
	word32 s7_195
	word32 fflags_110
	word32 ra_108
	modf(ra, a0, a1, a2, fflags, frm)
	0<32> = dwArgE4
	__eqdf2(a0, a1, a2, a3, fflags, frm)
	word32 s3_177 = a0
	word32 s4_178 = s2_38
	word32 s2_176 = a5 + 80<i32>
	branch a0 != 0<32> l23051678
l23051678:
	word32 s8_78 = Mem69[0x230885BC<32>:int32]
	word32 s7_106 = Mem69[0x230885B8<32>:int32]
	a5_189 = Mem69[0x230885C0<32>:int32]
	s11 = a5 + 80<i32>
	dwArg18 = Mem69[0x230885C4<32>:int32]
	s10 = s8_78
	ra_108 = ra
	frm_109 = frm
	fflags_110 = fflags
l23051626:
	0<32> = dwArg0164
	__eqdf2(a0, a1, a2, a3, fflags, frm)
	dwLoc64 = a4
	s6_100 = s2_176 - s11
	s8 = dwArg54
	branch a4 != 0<32> l230515F2
l230515F2:
	word32 a0_111
	word32 a1_112
	word32 a3_114
	word32 fflags_126
	word32 frm_127
	word32 s9_138
	word32 s0_909
	word32 s1_910
	word32 s2_911
	word32 s3_912
	word32 ra_128 = __divdf3(ra_108, a4, a5_189, s7_106, dwArg54, fflags_110, frm_109, out s0_909, out s1_910, out a0_111, out a1_112, out a3_114, out s2_911, out s3_912, out s9_138, out fflags_126, out frm_127)
	modf(ra, a0, a1, a2, fflags, frm)
	word32 a1_145
	word32 a0_156
	word32 a1_157
	word32 a5_914
	word32 s6_916
	word32 a4_913
	word32 s8_917
	word32 s9_918
	word32 a7_915
	ra_108 = __muldf3(ra_128, __adddf3(ra_128, a0_111, a1_112, fp + -80<i32>, a3_114, fflags_126, frm_127, out a1_145), a1_145, s9_138, s8_78, fflags_126, frm_127, out s0_174, out s1_15, out a0_156, out a1_157, out a4_913, out a5_914, out a7_915, out s2_176, out s3_177, out s4_178, out s5_179, out s6_916, out s7_106, out s8_917, out s9_918, out fflags_110, out frm_109)
	s11 = s11 + 0xFFFFFFFF<32>
	word32 a1_919
	word32 a3_920
	Mem193[s11:byte] = SLICE(__fixdfsi(ra_108, a0_156, a1_157, fflags_110, frm_109, out a1_919, out a3_920, out a4, out a5_189) + 48<i32>, byte, 0)
l23051644:
	s7_195 = s1_15
l23051646:
	branch s11 <u s2_176 l2305169C
l2305169C:
	s11 = s11 + 1<32>
	a5_189 = CONVERT(Mem199[s11 + -1<i32>:byte], byte, word32)
	s7_195 = s7_195 + 1<32>
	Mem203[s7_195 + 4095<i32>:byte] = SLICE(a5_189, byte, 0)
l23051594:
	__gedf2(a0, a1, a2, a3, fflags, frm)
	s6_100 = 0<32>
	ra_108 = ra
	frm_109 = frm
	fflags_110 = fflags
	branch a0 <= 0<32> l230515E0
l230515A6:
	s10 = Mem69[0x230885B8<32>:int32]
	s11 = Mem69[0x230885BC<32>:int32]
	ra_108 = ra
	frm_109 = frm
	fflags_110 = fflags
l230515BE:
	word32 a0_226
	word32 a1_227
	word32 a7_233
	word32 s7_898
	word32 s9_899
	ra_108 = __muldf3(ra_108, s3_177, s4_178, s10, s11, fflags_110, frm_109, out s0_174, out s1_15, out a0_226, out a1_227, out a4, out a5_189, out a7_233, out s2_176, out s3_177, out s4_178, out s5_179, out s6_100, out s7_898, out s8, out s9_899, out fflags_110, out frm_109)
	__ledf2(a0, a1, a2, a3, fflags, frm)
	branch a0_226 < 0<32> l230516AA
l230516AA:
	s3_177 = a7_233
	s4_178 = a1_227
l230515DC:
l230515E0:
	s7_195 = s1_15
l2305164A:
	word32 s0_281 = s0_174 + s1_15
	branch a5_189 != 0<32> l23051652
l23051650:
	s0_281 = s0_281 + s6_100
l23051652:
	Mem299[s5_179:word32] = s6_100
	branch s0_281 <u s1_15 l230516B2
l230516B2:
	Mem302[s1_15:byte] = 0<8>
l2305165A:
	s8 = Mem299[0x230885B8<32>:int32]
	word32 s9_305 = Mem299[0x230885BC<32>:int32]
l23051666:
	branch s0_281 <u s7_195 l2305166E
l2305166A:
	branch s7_195 <u s2_176 l230516D6
l230516D6:
	word32 a0_320
	word32 a1_321
	word32 s7_345
	word32 s0_900
	word32 a5_902
	word32 a7_903
	word32 s3_904
	word32 s4_905
	word32 a4_901
	ra_108 = __muldf3(ra_108, s3_177, s4_178, s8, s9_305, fflags_110, frm_109, out s0_900, out s1_15, out a0_320, out a1_321, out a4_901, out a5_902, out a7_903, out s2_176, out s3_904, out s4_905, out s5_179, out s6_100, out s7_345, out s8, out s9_305, out fflags_110, out frm_109)
	modf(ra, a0, a1, a2, fflags, frm)
	word32 a3_907
	word32 a1_906
	word32 a5_908
	Mem364[s7_345 + 0x1000<32>:byte] = SLICE(__fixdfsi(ra_108, a0_320, a1_321, fflags_110, frm_109, out a1_906, out a3_907, out a4, out a5_908) + 48<i32>, byte, 0)
	s3_177 = a0_320
	s4_178 = a1_321
	s0_281 = dwArgE4
	s7_195 = s7_345 + 1<32>
l2305166E:
	branch s0_281 <u s2_176 l23051700
l23051700:
	Mem372[s0_281:byte] = SLICE(CONVERT(Mem352[s0_281:byte], byte, word32) + 5<32>, byte, 0)
	word32 a2_369 = 57<i32>
	word32 a5_374 = s0_281
l23051718:
	a4 = CONVERT(Mem376[a5_374:byte], byte, word32)
	branch a2_369 <u a4 l23051726
l23051726:
	Mem380[a5_374:byte] = 0x30<8>
	branch s1_15 >=u a5_374 l2305173C
l2305173C:
	Mem383[a5_374:byte] = 0x31<8>
	word32 a4_385 = Mem383[s5_179:int32]
	Mem387[s5_179:word32] = a4_385 + 1<32>
	a2_369 = dwArg54
	branch a4_385 != 1<32> l23051718
l2305174E:
	branch s1_15 >=u s0_281 l23051756
l23051752:
	Mem391[s0_281:byte] = 0x30<8>
l23051756:
	s0_281 = s0_281 + 1<32>
l2305172E:
	a5_374 = a5_374 + 0xFFFFFFFF<32>
	Mem397[a5_374:byte] = SLICE(CONVERT(Mem380[a5_374 + -1<i32>:byte], byte, word32) + 1<32>, byte, 0)
l23051720:
	Mem398[s0_281:byte] = 0<8>
l23051672:
	Mem401[s1_15 + 79<i32>:byte] = 0<8>
l230516B6:
	s0Out = s0_281
	s1Out = dwLoc64
	a0Out = dwArgA4
	a4Out = a4
	s2Out = s2_176
	s3Out = s3_177
	s4Out = s4_178
	s6Out = s6_100
	s7Out = s7_195
	s8Out = s8
	s9Out = dwArg18
	s10Out = s10
	s11Out = s11
	fflagsOut = fflags_110
	frmOut = frm_109
	return dwLoc24
cvt_exit:


word32 ecvtbuf(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 fflags, word32 frm, word32 dwArg54, word32 dwArgE4, word32 dwArg0164, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      flt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] Stack +0054:[0..31] Stack +00E4:[0..31] Stack +0164:[0..31]
// LiveOut: a0 a4 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ecvtbuf_entry:
l2305175A:
l2305175C_thunk_cvt:
	word32 a0_14
	word32 a4_18
	word32 fflags_22
	word32 frm_23
	word32 s0_25
	word32 s1_26
	word32 s10_27
	word32 s11_28
	word32 s2_29
	word32 s3_30
	word32 s4_31
	word32 s6_32
	word32 s7_33
	word32 s9_35
	word32 s8_61
	word32 ra_24 = cvt(ra, a0, a1, a2, a3, a4, a5, fflags, frm, dwArg54, dwArgE4, dwArg0164, out s0_25, out s1_26, out a0_14, out a4_18, out s2_29, out s3_30, out s4_31, out s6_32, out s7_33, out s8_61, out s9_35, out s10_27, out s11_28, out fflags_22, out frm_23)
	s0Out = s0_25
	s1Out = s1_26
	a0Out = a0_14
	a4Out = a4_18
	s2Out = s2_29
	s3Out = s3_30
	s4Out = s4_31
	s6Out = s6_32
	s7Out = s7_33
	s9Out = s9_35
	s10Out = s10_27
	s11Out = s11_28
	fflagsOut = fflags_22
	frmOut = frm_23
	return ra_24
ecvtbuf_exit:


word32 fcvtbuf(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 fflags, word32 frm, word32 dwArg54, word32 dwArgE4, word32 dwArg0164, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      flt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] Stack +0054:[0..31] Stack +00E4:[0..31] Stack +0164:[0..31]
// LiveOut: a0 a4 s0 s1 s2 s3 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
fcvtbuf_entry:
l23051760:
l23051762_thunk_cvt:
	word32 a0_14
	word32 a4_18
	word32 s0_25
	word32 s1_26
	word32 s2_29
	word32 s3_30
	word32 s6_32
	word32 s7_33
	word32 s8_34
	word32 s4_55
	word32 s9_56
	word32 s10_57
	word32 s11_58
	word32 fflags_59
	word32 frm_60
	cvt(ra, a0, a1, a2, a3, a4, a5, fflags, frm, dwArg54, dwArgE4, dwArg0164, out s0_25, out s1_26, out a0_14, out a4_18, out s2_29, out s3_30, out s4_55, out s6_32, out s7_33, out s8_34, out s9_56, out s10_57, out s11_58, out fflags_59, out frm_60)
	s1Out = s1_26
	a0Out = a0_14
	a4Out = a4_18
	s2Out = s2_29
	s3Out = s3_30
	s6Out = s6_32
	s7Out = s7_33
	s8Out = s8_34
	return s0_25
fcvtbuf_exit:


void flt(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s11, word32 fflags, word32 frm, word32 dwArg64)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s11:[0..31] Stack +0064:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 gp s0 s1 s11 s2 s3 s4 s5 s6 s7 s9 t2 t6
// Preserved: a6 a7 fflags frm ra s10 s8 sp t0 t1 t3 t4 t5 tp
flt_entry:
l23051766:
	word32 s3_202
	word32 s7_205 = a5
	word32 s1_198 = a0
	word32 s4_155 = a1
	word32 s11_122 = a2
	word32 s0_197 = a3
	word32 s6_109 = a4
	word32 s5_45 = a6
	branch (a6 & 16<i32>) == 0<32> l230518EA
l230518EA:
	s3_202 = 48<i32>
	branch (a6 & 1<i32>) != 0<32> l230517A2
l230518F6:
	s3_202 = 32<i32>
l2305179A:
	s5_45 = a6 & -2<i32>
	s3_202 = 32<i32>
l230517A2:
	word32 s2_201 = 0<32>
	branch (s5_45 & 2<i32>) == 0<32> l230517C8
l230517AA:
	branch __ledf2(a1, a2, 0<32>, 0<32>, fflags, frm) >= 0<32> l230518FC
l230518FC:
	branch (s5_45 & 4<i32>) == 0<32> l2305190A
l2305190A:
	branch (s5_45 & 8<i32>) == 0<32> l230517C8
l23051912:
	s0_197 = a3 + 0xFFFFFFFF<32>
	s2_201 = 32<i32>
l23051902:
	s0_197 = a3 + 0xFFFFFFFF<32>
	s2_201 = 43<i32>
l230517BA:
	s11_122 = a2 ^ 0x80000000<32>
	s0_197 = a3 + 0xFFFFFFFF<32>
	s2_201 = 45<i32>
l230517C8:
	branch a4 >= 0<32> l230517CE
l230517CC:
	s6_109 = 6<32>
l230517CE:
	word32 a4_100
	branch (a5 & 253<i32>) != 69<i32> l2305191A
l2305191A:
	a4_100 = a5
l230517DA:
	a4_100 = a5 + 32<i32> & 255<i32>
l230517E4:
	word32 a5_107
	word32 s10_111
	word32 s8_110
	branch a4_100 != 103<i32> l23051990
l23051990:
	branch a4_100 != 101<i32> l230519B6
l230519B6:
	a5_107 = fp + -224<i32>
	branch a4_100 != 102<i32> l230518CC
l230519C0:
	s8_110 = s6_109
l23051998:
	s10_111 = s6_109
l230517EC:
	word32 s6_156
	word32 s9_2003
	word32 a4_1999
	word32 s0_1996
	word32 s2_2000
	word32 s1_1997
	word32 a0_1998
	word32 s10_2004
	word32 s7_2002
	word32 s3_2001
	ra = ecvtbuf(ra, a1, s11_122, s6_109, fp + -232<i32>, fp + -228<i32>, fp + -144<i32>, fflags, frm, dwLocAC, s11, dwArg64, out s0_1996, out s1_1997, out a0_1998, out a4_1999, out s2_2000, out s3_2001, out s4_155, out s6_156, out s7_2002, out s9_2003, out s10_2004, out s11_122, out fflags, out frm)
	branch dwLocF4 < 3<32> l2305180C
l23051808:
	branch dwLocF4 + -1<i32> < s6_156 l23051920
l23051920:
	s8_110 = s6_156 - dwLocF4
l23051924:
	word32 a4_190
	word32 s8_206
	word32 a0_186
	s0_197 = fcvtbuf(ra, s4_155, s11_122, s8_110, fp + -232<i32>, fp + -228<i32>, fp + -144<i32>, fflags, frm, dwLocAC, s11, dwArg64, out s1_198, out a0_186, out a4_190, out s2_201, out s3_202, out s6_109, out s7_205, out s8_206)
	a5_107 = fp + -224<i32>
	branch a4_190 == 0<32> l23051946
l2305193A:
	a5_107 = fp + -223<i32>
l23051946:
	word32 a4_223 = CONVERT(Mem222[a0_186:byte], byte, word32)
	branch a4_223 == 0<32> l230519F4
l230519F4:
	Mem226[a5_107:byte] = 0x30<8>
	branch s8_206 > 0<32> l23051A04
l23051A04:
	Mem229[a5_107 + 1<i32>:byte] = 0x2E<8>
	word32 a4_230 = a5_107 + 2<i32>
	word32 a3_231 = a5_107 + s8_206
l23051A18:
	Mem235[a5_107 + 2<i32>:byte] = 0x30<8>
	a5_107 = a5_107 + 1<32>
	branch a3_231 != a5_107 l23051A18
l23051A22:
	a5_107 = a4_230 + s8_206
l23051A00:
	a5_107 = a5_107 + 1<32>
l2305194C:
	word32 a3_244 = a0_186
	branch a4_223 > 0<32> l230519CC
l230519CC:
	word32 a2_250 = a5_107
	branch a4_223 != a3_244 - a0_186 l230519DE
l230519D6:
	Mem254[a5_107:byte] = 0x2E<8>
	a2_250 = a5_107 + 1<i32>
l230519DE:
	a3_244 = a3_244 + 1<32>
	Mem262[a2_250:byte] = SLICE(CONVERT(Mem257[a3_244 + -1<i32>:byte], byte, word32), byte, 0)
	a5_107 = a2_250 + 1<i32>
	branch CONVERT(Mem262[a3_244:byte], byte, word32) != 0<32> l230519CC
l230519F2:
l23051958:
	Mem266[a5_107:byte] = 0x30<8>
	Mem267[a5_107 + 1<i32>:byte] = 0x2E<8>
	word32 a3_268 = a5_107 + 2<i32>
	word32 a2_269 = a5_107 - a4_223
	word32 a4_271 = 0<32> - a4_223
l23051978:
	branch a2_269 != a5_107 l230519C4
l230519C4:
	Mem275[a5_107 + 2<i32>:byte] = 0x30<8>
	a5_107 = a5_107 + 1<32>
l2305197C:
	a5_107 = a3_268 + a4_271
l23051980:
	word32 a4_282 = CONVERT(Mem281[a0_186:byte], byte, word32)
	branch a4_282 == 0<32> l230518CC
l23051986:
	a5_107 = a5_107 + 1<32>
	Mem286[a5_107 + 4095<i32>:byte] = SLICE(a4_282, byte, 0)
	a0_186 = a0_186 + 1<32>
l2305180C:
	s10_111 = s6_156 + -1<i32>
l23051810:
	word32 a0_310
	word32 a4_314
	word32 fflags_318
	word32 frm_319
	word32 s11_324
	word32 s4_327
	word32 s9_331
	word32 s10_323
	ecvtbuf(ra, s4_155, s11_122, s10_111 + 1<i32>, fp + -232<i32>, fp + -228<i32>, fp + -144<i32>, fflags, frm, dwLocAC, s11, dwArg64, out s0_197, out s1_198, out a0_310, out a4_314, out s2_201, out s3_202, out s4_327, out s6_109, out s7_205, out s9_331, out s10_323, out s11_324, out fflags_318, out frm_319)
	word32 a5_341 = fp + -224<i32>
	branch a4_314 == 0<32> l23051834
l23051828:
	a5_341 = fp + -223<i32>
l23051834:
	Mem350[a5_341:byte] = SLICE(CONVERT(Mem346[a0_310:byte], byte, word32), byte, 0)
	word32 s8_349 = a5_341 + 1<i32>
	branch s10_323 <= 0<32> l23051850
l23051844:
	Mem354[a5_341 + 1<i32>:byte] = 0x2E<8>
	s8_349 = a5_341 + 2<i32>
l23051850:
	word32 a0_356 = a0_310 + 1<32>
	word32 a4_358 = a0_310 + 1<32> + s10_323
	word32 a5_360 = s8_349
l23051858:
	branch a4_358 != a0_356 l2305199C
l2305199C:
	a0_356 = a0_356 + 1<32>
	a5_360 = a5_360 + 1<32>
	Mem368[a5_360 + 4095<i32>:byte] = SLICE(CONVERT(Mem364[a0_356 + -1<i32>:byte], byte, word32), byte, 0)
l2305185C:
	word32 a5_372 = 69<i32>
	branch s9_331 != 0<32> l2305186A
l23051866:
	a5_372 = 101<i32>
l2305186A:
	word32 a5_419
	Mem384[dwLocB4:byte] = SLICE(a5_372, byte, 0)
	branch s10_323 != 0<32> l230519AA
l230519AA:
	s10_323 = s10_323 + 0xFFFFFFFF<32>
	branch s10_323 < 0xFFFFFFFF<32> l2305188A
l23051878:
	branch __eqdf2(s4_327, s11_324, 0<32>, 0<32>, fflags_318, frm_319) == 0<32> l230519B0
l230519B0:
	a5_419 = 43<i32>
l23051888:
	s10_323 = 0xFFFFFFFF<32>
l2305188A:
	s10_323 = 0<32> - s10_323
	a5_419 = 45<i32>
l23051892:
	Mem429[dwLocB4 + 1<i32>:byte] = SLICE(a5_419, byte, 0)
	Mem438[dwLocB4 + 4<i32>:byte] = SLICE((s10_323 | 0xA<32>) + 48<i32>, byte, 0)
	Mem444[dwLocB4 + 2<i32>:byte] = SLICE((s10_323 ^ 100<i32> | 0xA<32>) + 48<i32>, byte, 0)
	Mem446[dwLocB4 + 3<i32>:byte] = SLICE((s10_323 ^ 0xA<32> | 0xA<32>) + 48<i32>, byte, 0)
	a5_107 = dwLocB4 + 5<i32>
l230518CC:
	Mem449[a5_107:byte] = 0<8>
	branch (s5_45 & 32<i32>) == 0<32> l23051B42
l23051B42:
	branch s7_205 != 103<i32> l23051A64
l23051B4A:
	word32 a4_496 = fp + -224<i32>
l23051B50:
	word32 a5_500 = CONVERT(Mem449[a4_496:byte], byte, word32)
	a4_496 = a4_496 + 1<32>
	branch a5_500 == 0<32> l23051A64
l23051B58:
	branch a5_500 != 46<i32> l23051B50
l23051B5C:
l23051B60:
	word32 a5_506 = CONVERT(Mem449[a4_496:byte], byte, word32)
	branch a5_506 == 0<32> l23051B6E
l23051B66:
	branch (a5_506 & 223<i32>) != 69<i32> l23051ACE
l23051ACE:
	a4_496 = a4_496 + 1<32>
l23051B6E:
	word32 a5_511 = a4_496 + -1<i32>
l23051B76:
	word32 a3_515 = CONVERT(Mem449[a5_511:byte], byte, word32)
	branch a3_515 == 48<i32> l23051AD2
l23051AD2:
	a5_511 = a5_511 + 0xFFFFFFFF<32>
l23051B7E:
	branch a3_515 != 46<i32> l23051B88
l23051B86:
	a5_511 = a5_511 + 0xFFFFFFFF<32>
l23051B88:
	branch a4_496 == a5_511 l23051A64
l23051B8C:
	a5_511 = a5_511 + 1<32>
	Mem523[a5_511:byte] = 0<8>
l230518D8:
	branch s6_109 != 0<32> l23051A64
l230518DC:
	word32 s6_538 = fp + -224<i32>
l23051A36:
	word32 a5_543 = CONVERT(Mem449[s6_538:byte], byte, word32)
	branch a5_543 != 0<32> l23051A28
l23051A28:
	branch a5_543 == 46<i32> l23051A64
l23051A2C:
	branch (a5_543 & 223<i32>) == 69<i32> l23051B94
l23051B94:
	word32 a1_2008
	word32 a3_2009
	word32 a5_2011
	word32 a4_2010
	word32 a0_554 = strnlen(s6_538, 256<i32>, out a1_2008, out a3_2009, out a4_2010, out a5_2011) + s6_538
l23051A54:
	branch a0_554 - s6_538 > 0<32> l23051A4A
l23051A4A:
	a0_554 = a0_554 + 0xFFFFFFFF<32>
	Mem561[a0_554 + 2<i32>:byte] = SLICE(CONVERT(Mem558[a0_554:byte], byte, word32), byte, 0)
l23051A5C:
	Mem563[s6_538:byte] = 0x2E<8>
l23051A34:
	s6_538 = s6_538 + 1<32>
l23051A3C:
	Mem566[s6_538:byte] = 0x2E<8>
	Mem567[s6_538 + 1<i32>:byte] = 0<8>
l23051A64:
	word32 a4_2007
	word32 a1_2005
	word32 a3_2006
	word32 a5_580
	word32 a0_578 = strnlen(fp + -224<i32>, 256<i32>, out a1_2005, out a3_2006, out a4_2007, out a5_580)
	word32 a3_617 = s0_197 - a0_578
	branch (s5_45 & 17<i32>) == 0<32> l23051AF4
l23051AF4:
	word32 a5_644 = s1_198
	word32 a2_645 = s1_198 + a3_617
l23051ADC:
	branch a2_645 - a5_644 > 0<32> l23051AD6
l23051AD6:
	a5_644 = a5_644 + 1<32>
	Mem652[a5_644 + 4095<i32>:byte] = 0x20<8>
l23051AE4:
	a5_580 = a3_617
	branch a3_617 >= 0<32> l23051AEC
l23051AEA:
	a5_580 = 0<32>
l23051AEC:
	s1_198 = s1_198 + a5_580
	a3_617 = a3_617 + 0xFFFFFFFF<32> - a5_580
l23051A7A:
	branch s2_201 == 0<32> l23051A84
l23051A7E:
	Mem692[s1_198:byte] = SLICE(s2_201, byte, 0)
	s1_198 = s1_198 + 1<32>
l23051A84:
	branch a5_580 == 0<32> l23051B1E
l23051B1E:
	word32 a5_708 = s1_198
	word32 a2_711 = s1_198 + a3_617
l23051B06:
	branch a2_711 - a5_708 > 0<32> l23051B00
l23051B00:
	a5_708 = a5_708 + 1<32>
	Mem717[a5_708 + 4095<i32>:byte] = SLICE(s3_202, byte, 0)
l23051B0E:
	word32 a5_719 = a3_617
	branch a3_617 >= 0<32> l23051B16
l23051B14:
	a5_719 = 0<32>
l23051B16:
	s1_198 = s1_198 + a5_719
	a3_617 = a3_617 + 0xFFFFFFFF<32> - a5_719
l23051A88:
	word32 a5_728 = 0<32>
l23051A8A:
	branch a5_728 < a0_578 l23051B26
l23051B26:
	Mem739[s1_198 + a5_728:byte] = SLICE(CONVERT(Mem734[fp + -224<i32> + a5_728:byte], byte, word32), byte, 0)
	a5_728 = a5_728 + 1<32>
l23051A8E:
	branch a0_578 >= 0<32> l23051A94
l23051A92:
	a0_578 = 0<32>
l23051A94:
	word32 a0_743 = a0_578 + s1_198
	word32 a5_744 = a0_743
	word32 a2_748 = a0_743 + a3_617
l23051AA0:
	branch a2_748 - a5_744 > 0<32> l23051B3A
l23051B3A:
	a5_744 = a5_744 + 1<32>
	Mem755[a5_744 + 4095<i32>:byte] = 0x20<8>
l23051AA8:
	branch a3_617 >= 0<32> l23051AAE
l23051AAC:
l23051AAE:
	return
flt_exit:


word32 vsnprintf(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArg58, word32 dwArg78, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8, word32 dwArg010C, ptr32 & t0Out, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_cli_printf
//      vsprintf
//      sprintf
//      snprintf
//      Default_Handler
//      mbedtls_debug_print_msg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31] Stack +010C:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t4
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
vsnprintf_entry:
l23051BA2:
l23051BFA:
	word32 s0_56 = a2 + 1<i32>
	word32 a5_58 = CONVERT(Mem54[a2:byte], byte, word32)
	branch a5_58 == 0<32> l23052040
l23052040:
	branch a1 <=u 0<32> l23052068
l23052068:
	branch a1 == 0<32> l23052048
l2305206C:
	Mem63[a1 + a0 + 4095<i32>:byte] = 0<8>
l23052044:
	Mem65[a0:byte] = 0<8>
l23052048:
	t0Out = s4
	s0Out = s0_56
	s1Out = dwLoc64
	a0Out = 0<32>
	a1Out = a1
	a2Out = a2
	a3Out = dwArg78
	a4Out = a4
	a5Out = a5_58
	a7Out = dwArg58
	s2Out = 0<32>
	s3Out = 0<32>
	s4Out = 0<32>
	s5Out = s5
	s6Out = 0xFFFFFFFF<32>
	s7Out = a0
	s8Out = 0<32>
	s9Out = 0x230885F8<32>
	s10Out = a3
	s11Out = a0
	t4Out = dwLoc08
	return dwLoc24
l23051C06:
	a4 = 4<32>
	branch false l2305200E
l2305200E:
	a2 = s0_56
l23051C0C:
	word32 a4_91 = Mem54[0x230883C4<32>:word32]
	word32 ra_102
	word32 s0_103
	word32 s1_104
	word32 s2_105
	word32 s3_106
	word32 s4_107
	word32 s5_108
	word32 s6_109
	word32 s7_110
	word32 s8_111
	word32 s9_112
	word32 s10_113
	word32 s11_114
	word32 a0_115
	word32 a1_116
	word32 a3_117
	word32 a5_118
	word32 a2_119
	word32 a4_120
	word32 t0_121
	word32 t4_122
	word32 a7_123
	call a4_91 (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2_119,a3:0<32>,a4:a4_91,ra:ra,s0:s0_56,s1:0x230883C4<32>,s10:a3,s11:a0,s2:0<32>,s3:0<32>,s4:0<32>,s5:a1,s6:0xFFFFFFFF<32>,s7:a0,s8:0<32>,s9:0x230884D8<32>,Stack +000C:dwLoc64,Stack +004C:dwLoc24,Stack +0068:dwLoc08,Stack +00C8:dwArg58,Stack +00E8:dwArg78,Stack +0114:dwArgA4,Stack +0130:dwArgC0,Stack +0134:dwArgC4,Stack +0158:dwArgE8,Stack +017C:dwArg010C
		defs: a0:a0_115,a1:a1_116,a2:a2_119,a3:a3_117,a4:a4_120,a5:a5_118,a7:a7_123,ra:ra_102,s0:s0_103,s1:s1_104,s10:s10_113,s11:s11_114,s2:s2_105,s3:s3_106,s4:s4_107,s5:s5_108,s6:s6_109,s7:s7_110,s8:s8_111,s9:s9_112,t0:t0_121,t4:t4_122
	t0Out = t0_121
	s0Out = s0_103
	s1Out = s1_104
	a0Out = a0_115
	a1Out = a1_116
	a2Out = a2_119
	a3Out = a3_117
	a4Out = a4_120
	a5Out = a5_118
	a7Out = a7_123
	s2Out = s2_105
	s3Out = s3_106
	s4Out = s4_107
	s5Out = s5_108
	s6Out = s6_109
	s7Out = s7_110
	s8Out = s8_111
	s9Out = s9_112
	s10Out = s10_113
	s11Out = s11_114
	t4Out = t4_122
	return ra_102
vsnprintf_exit:


word32 vsprintf(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg58, word32 dwArg78, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vprint
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31] Stack +010C:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t4
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
vsprintf_entry:
l23052074:
l2305207C_thunk_vsnprintf:
	word32 a0_11
	word32 a3_12
	word32 a5_13
	word32 a7_14
	word32 s0_16
	word32 s1_17
	word32 s10_18
	word32 s11_19
	word32 s2_20
	word32 s3_21
	word32 s4_22
	word32 s6_23
	word32 s7_24
	word32 s8_25
	word32 s9_26
	word32 t4_29
	word32 a1_30
	word32 a4_32
	word32 s5_33
	word32 t0_60
	word32 a2_61
	word32 ra_15 = vsnprintf(ra, a0, 480<i32>, a1, a2, dwArg58, dwArg78, dwArgA4, dwArgC0, dwArgC4, dwArgE8, dwArg010C, out t0_60, out s0_16, out s1_17, out a0_11, out a1_30, out a2_61, out a3_12, out a4_32, out a5_13, out a7_14, out s2_20, out s3_21, out s4_22, out s5_33, out s6_23, out s7_24, out s8_25, out s9_26, out s10_18, out s11_19, out t4_29)
	s0Out = s0_16
	s1Out = s1_17
	a0Out = a0_11
	a1Out = a1_30
	a3Out = a3_12
	a4Out = a4_32
	a5Out = a5_13
	a7Out = a7_14
	s2Out = s2_20
	s3Out = s3_21
	s4Out = s4_22
	s5Out = s5_33
	s6Out = s6_23
	s7Out = s7_24
	s8Out = s8_25
	s9Out = s9_26
	s10Out = s10_18
	s11Out = s11_19
	t4Out = t4_29
	return ra_15
vsprintf_exit:


word32 vprint(word32 ra, word32 a0, word32 a1, word32 dwArg48, word32 dwArg68, word32 dwArg94, word32 dwArgB0, word32 dwArgB4, word32 dwArgD8, word32 dwArgFC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_log_debug
//      ef_log_info
//      ef_print
//      bl_printk
//      printf
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0094:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00D8:[0..31] Stack +00FC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t4
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
vprint_entry:
l23052080:
	word32 a5_5 = CONVERT(Mem0[0x4200D94A<32>:byte], byte, word32)
	branch (a5_5 & 255<i32>) == 0<32> l230520C4
l230520C4:
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_5 & 255<i32>
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	t4Out = t4
	return ra
l2305208E:
	word32 a3_21
	word32 a7_24
	word32 s0_26
	word32 s1_27
	word32 s10_28
	word32 s11_29
	word32 s2_30
	word32 s3_31
	word32 s5_33
	word32 s6_34
	word32 s7_35
	word32 s9_37
	word32 t4_40
	word32 a0_18
	word32 a1_19
	word32 a4_22
	word32 a5_23
	word32 s4_122
	word32 s8_138
	word32 ra_25 = vsprintf(ra, 0x42016980<32>, a0, a1, dwArg48, dwArg68, dwArg94, dwArgB0, dwArgB4, dwArgD8, dwArgFC, out s0_26, out s1_27, out a0_18, out a1_19, out a3_21, out a4_22, out a5_23, out a7_24, out s2_30, out s3_31, out s4_122, out s5_33, out s6_34, out s7_35, out s8_138, out s9_37, out s10_28, out s11_29, out t4_40)
	word32 s0_41 = s0_26 + -1664<i32>
	branch a0_18 > 0<32> l230520BA
l230520BA:
	a1_19 = CONVERT(Mem17[s0_41:byte], byte, word32)
	branch a1_19 != 0<32> l230520B4
l230520B4:
	s0_41 = bl_uart_data_send(s1_27, 0<32>, a1_19, out a0_18, out a4_22, out a5_23, out s4_122, out s8_138)
l230520C2:
l230520AC:
	s1Out = s1_27
	a0Out = a0_18
	a1Out = a1_19
	a2Out = dwArg10
	a3Out = a3_21
	a4Out = a4_22
	a5Out = a5_23
	a7Out = a7_24
	s2Out = s2_30
	s3Out = s3_31
	s4Out = s4_122
	s5Out = s5_33
	s6Out = s6_34
	s7Out = s7_35
	s8Out = s8_138
	s9Out = s9_37
	s10Out = s10_28
	s11Out = s11_29
	t4Out = t4_40
	return ra_25
vprint_exit:


word32 bl_putchar(word32 s1, word32 a0, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_hexdump
// MayUse:  a0:[0..31] s1:[0..31]
// LiveOut: s0 s4
// Trashed: a0 a1 a2 a4 a5 s0 s4 s8 t3
// Preserved: sp
bl_putchar_entry:
l230520C6:
	word32 s4_15
	word32 a0_24
	word32 a4_25
	word32 a5_26
	word32 s8_27
	word32 s0_14 = bl_uart_data_send(s1, 0<32>, a0 & 255<i32>, out a0_24, out a4_25, out a5_26, out s4_15, out s8_27)
	s4Out = s4_15
	return s0_14
bl_putchar_exit:


word32 puts(word32 a0, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cb_altcp_recv_fn
//      cmd_stack_wifi
//      cmd_wifi
//      aos_loop_proc
//      vApplicationStackOverflowHook
//      event_cb_wifi_event
//      bfl_main
//      rxl_hwdesc_dump
//      scanu_start
//      mac_vsie_find
//      chan_upd_ctxt_status
//      hal_mib_dump
//      dump_cfg_entries
//      helper_record_dump
//      bl_txdatacfm
//      bl_utils_dump
//      wifi_edca_dump_cmd
//      wifi_sta_ip_info
//      cmd_wifi_raw_send
//      cmd_wifi_dump
//      wifi_sta_ip_set_cmd
//      cb_event_ind
//      ota_tcp_cmd
//      cmd_sys_time_now
//      ef_port_init
//      exception_entry
//      bl_irq_init
//      sec_trng_IRQHandler
//      bl_sec_pka_IRQHandler
//      bl_rand
//      _dump_rsa_data
//      cmd_gpio_get
//      Sec_Eng_AES_Link_Case_CBC_128
//      Sec_Eng_AES_Link_Case_CTR_128
//      Sec_Eng_AES_Link_Case_ECB_128
//      bl_sec_sha_IRQHandler
//      bl_sec_sha_test
//      bl_wifi_enable_irq
//      proc_entry_looprt
//      cmd_looprt_test
//      cmd_looprt_test_status
//      cmd_looprt_test_evt
//      cmd_looprt_test_evt_dump
//      cmd_looprt_test_schedule_evt1
//      cmd_looprt_test_schedule_evt2
//      dhcp_server_recv
//      ips_test_cmd
//      _startup_sntp
//      cmd_sntp_date
//      utils_hexdump
//      countdown_sec
//      bl_mtd_open
//      bloop_status_dump
// MayUse:  a0:[0..31]
// LiveOut: a0 a1 a2 a4 a5 s1 s4 s8
// Trashed: a0 a1 a2 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
puts_entry:
l230520DC:
	word32 a5_5 = CONVERT(Mem0[0x4200D94A<32>:byte], byte, word32)
	word32 a5_13 = a5_5 & 255<i32>
	word32 s0_14 = 0<32>
	branch (a5_5 & 255<i32>) == 0<32> l2305210C
l230520F4:
	s1 = a0
	s0_14 = 0<32>
l23052102:
	a5_13 = a0 + s0_14
	a1 = CONVERT(Mem12[a5_13:byte], byte, word32)
	branch a1 != 0<32> l230520FA
l230520FA:
	word32 a0_76
	word32 a5_77
	s0_14 = bl_uart_data_send(a0, 0<32>, a1, out a0_76, out a4, out a5_77, out s4, out s8) + 1<32>
l2305210C:
	a0Out = s0_14
	a1Out = a1
	a2Out = dwArg10
	a4Out = a4
	a5Out = a5_13
	s4Out = s4
	s8Out = s8
	return s1
puts_exit:


word32 printf(word32 ra, word32 a0, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cb_httpc_headers_done_fn
//      cb_httpc_result
//      cmd_stack_wifi
//      cmd_exception_store
//      cmd_wifi
//      proc_hellow_entry
//      cmd_httpc_test
//      http_test_cmd
//      aos_loop_proc
//      vApplicationStackOverflowHook
//      vApplicationMallocFailedHook
//      event_cb_wifi_event
//      bfl_main
//      ShadowUpdateStatusCallback
//      windowActuate_Callback
//      aws_main_entry
//      mm_sta_add
//      rxl_hwdesc_dump
//      rxl_hwdesc_init
//      sta_mgmt_init
//      sta_mgmt_register
//      td_timer_end
//      td_reset
//      td_init
//      td_start
//      sm_get_bss_params
//      sm_connect_ind
//      sm_supplicant_deauth_cfm
//      sm_auth_handler
//      sm_assoc_rsp_handler
//      sm_handle_supplicant_result
//      apm_tx_cfm_handler
//      cfg_api_element_general_set
//      cfg_api_element_set
//      add_key_to_mac
//      add_mfp_key_to_mac
//      InitGroupKey
//      rf_pri_config_channel.constprop.9
//      rf_pri_txcal
//      rf_pri_roscal
//      rf_pri_rccal
//      rf_pri_lo_acal
//      rf_pri_fcal
//      hal_machw_init
//      hal_mib_dump
//      txl_buffer_update_thd
//      rxu_mgt_ind_handler
//      me_build_beacon
//      cfm_raw_send
//      scanu_raw_send_req_handler
//      rxu_mgt_ind_handler
//      sm_connect_req_handler
//      rxu_mgt_ind_handler
//      apm_start_req_handler
//      dump_cfg_entries
//      cfg_start_req_handler
//      helper_record_dump
//      ipc_host_init
//      bl_main_if_remove
//      bl_main_if_add
//      bl_main_apm_start
//      bl_main_apm_stop
//      bl_main_apm_sta_delete
//      bl_main_rtthread_start
//      bl_handle_dynparams
//      bl_send_msg
//      bl_msg_zalloc.constprop.3
//      bl_msg_update_channel_cfg
//      bl_send_me_config_req
//      bl_send_sm_connect_req
//      bl_rx_apm_sta_del_ind
//      bl_rx_apm_sta_add_ind
//      bl_rx_sm_connect_ind
//      bl_rx_sm_disconnect_ind
//      bl_rx_scanu_result_ind
//      bl_tx_push
//      bl_output
//      tcpip_stack_input
//      bl_utils_dump
//      printErrMsg
//      stateSnifferExit
//      stateSnifferAction
//      stateConnectedIPNoAction_ipgot
//      stateGlobalEnter
//      stateGlobalAction
//      stateConnectingEnter
//      stateConnectedIPNoExit
//      stateDisconnect_action_idle
//      stateDisconnect_action_reconnect
//      ip_obtaining_timeout
//      stateConnectedIPNoEnter
//      stateConnectedIPYesGuard_rcconfig
//      stateIdleAction_connect
//      stateGlobalGuard_fw_powersaving
//      stateGlobalGuard_conf_max_sta
//      stateGlobalGuard_AP
//      stateDisconnect_exit
//      disconnect_retry
//      stateGlobalGuard_fw_disconnect
//      stateConnectedIPYes_exit
//      stateIdleGuard_connect
//      stateIfaceDownGuard_phyup
//      stateGlobalGuard_stop
//      stateGlobalGuard_enable_autoreconnect
//      stateGlobalGuard_disable_autoreconnect
//      stateDisconnect_enter
//      stateGlobalGuard_fw_scan
//      stateGlobalExit
//      stateSnifferEnter
//      stateConnectingAction_connected
//      stateConnectingAction_disconnect
//      stateConnectingExit
//      stateIdleAction_sniffer
//      stateIdleEnter
//      stateIdleExit
//      stateIfaceDownAction_phyup
//      stateIfaceDownEnter
//      stateIfaceDownExit
//      stateConnectedIPNoAction_disconnect
//      stateConnectedIPYes_action
//      stateConnectedIPYes_enter
//      wifi_mgmr_event_notify
//      wifi_mgmr_start
//      cmd_wifi_state_get
//      wifi_sta_get_state_cmd
//      wifi_edca_dump_cmd
//      wifi_ap_sta_list_get_cmd
//      wifi_ap_sta_delete_cmd
//      cmd_wifi_cfg
//      cmd_wifi_ap_stop
//      wifi_sta_ip_info
//      cmd_wifi_ap_conf_max_sta
//      wifi_rc_fixed_enable
//      wifi_connect_cmd
//      wifi_capcode_cmd
//      wifi_mgmr_cli_scanlist
//      wifi_mgmr_sta_enable
//      wifi_mgmr_sta_connect
//      wifi_mgmr_scan_complete_callback
//      wifi_mgmr_profile_add
//      wifi_mgmr_profile_get
//      cb_probe_resp_ind
//      cb_disconnect_ind
//      cb_event_ind
//      cmd_mgr_llind
//      netif_status_callback
//      wifi_tx
//      bl606a0_wifi_init
//      utilfdt_print_data
//      tc_blfdtdump
//      tc_fdt_wifi
//      ota_tcp_cmd
//      cb_idnoe
//      cat_cmd
//      hexdump_cmd
//      proc_onecmd
//      ls_cmd
//      cli_main_input
//      console_cb_read
//      ef_port_init
//      psm_unset_cmd
//      psm_set_cmd
//      interrupt_entry
//      exception_entry
//      bl_tsen_adc_get
//      cmd_looprt_test
//      _led_bloop_evt
//      tcpip_input
//      stats_netstat
//      tcp_init
//      dhcp_server_stop
//      dhcpd_start
//      tcpc_entry
//      tcpclient_cmd
//      TCP_Server
//      cmd_tcp_server
//      iperf_server_udp
//      iperf_server_udp_recv_fn
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      ipus_test_cmd
//      ipu_test_cmd
//      ipc_test_cmd
//      ips_test_cmd
//      ping_usage
//      ping_free
//      ping_timeout
//      ping_recv
//      ping_api_init
//      ping_cmd
//      romfs_lseek
//      cmd_sntp_date
//      cmd_sntp_time
//      sntp_recv
//      sntp_init
//      utils_hexdump
//      utils_getopt
//      aos_loop_init
//      aos_poll_read_fd
//      aos_loop_run
//      countdown_sec
//      iot_tls_connect
//      _iot_tls_verify_cert
//      iot_tls_write
//      mfg_media_read_xtal_capcode
//      mfg_media_read_poweroffset
//      mfg_media_read_macaddr
//      mfg_flash_read
//      bl_mtd_open
//      bloop_init
//      bloop_evt_set_async
//      bloop_evt_set_sync
//      bloop_evt_unset_sync
//      bloop_run
//      bloop_status_dump
//      loop_evt_entity_sys_handler
//      loop_evt_entity_sys_evt
//      mbedtls_pk_load_file
//      mbedtls_net_connect
//      mbedtls_net_recv
//      mbedtls_net_send
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t4
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
printf_entry:
l23052118:
	word32 a5_7 = CONVERT(Mem5[0x4200D94A<32>:byte], byte, word32)
	word32 a5_22 = a5_7 & 255<i32>
	branch (a5_7 & 255<i32>) == 0<32> l23052140
l23052138:
	word32 a0_122
	ra = vprint(ra, a0, fp + -28<i32>, dwArg08, dwArg28, a3, dwArg70, dwArg74, dwArg98, dwArgBC, out s1, out a0_122, out a1, out a2, out a3, out a4, out a5_22, out a7, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4)
l23052140:
	s1Out = s1
	a0Out = 0<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_22
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	t4Out = t4
	return ra
printf_exit:


word32 sprintf(word32 ra, word32 a0, word32 a1, word32 dwArg18, word32 dwArg38, word32 dwArg64, word32 dwArg80, word32 dwArg84, word32 dwArgA8, word32 dwArgCC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskList
//      dhcpd_start
//      log_buf_out
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0064:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00CC:[0..31]
// LiveOut: a0 a5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
sprintf_entry:
l23052148:
	word32 a0_24
	word32 a5_26
	word32 s0_29
	word32 s1_30
	word32 s10_31
	word32 s11_32
	word32 s2_33
	word32 s3_34
	word32 s4_35
	word32 s6_36
	word32 s7_37
	word32 s9_39
	word32 s5_46
	word32 t0_78
	word32 a1_79
	word32 a2_80
	word32 a3_81
	word32 a4_82
	word32 a7_83
	word32 s8_84
	word32 t4_85
	word32 ra_28 = vsnprintf(ra, a0, 0xFFFFFFFF<32>, a1, fp + -24<i32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out t0_78, out s0_29, out s1_30, out a0_24, out a1_79, out a2_80, out a3_81, out a4_82, out a5_26, out a7_83, out s2_33, out s3_34, out s4_35, out s5_46, out s6_36, out s7_37, out s8_84, out s9_39, out s10_31, out s11_32, out t4_85)
	s0Out = s0_29
	s1Out = s1_30
	a0Out = a0_24
	a5Out = a5_26
	s2Out = s2_33
	s3Out = s3_34
	s4Out = s4_35
	s5Out = s5_46
	s6Out = s6_36
	s7Out = s7_37
	s9Out = s9_39
	s10Out = s10_31
	s11Out = s11_32
	return ra_28
sprintf_exit:


word32 snprintf(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg18, word32 dwArg38, word32 dwArg64, word32 dwArg80, word32 dwArg84, word32 dwArgA8, word32 dwArgCC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_ap_start
//      ls_cmd
//      hal_gpio_init_from_dts
//      httpc_create_request_string.constprop.6
//      tcpc_entry
//      tcpclient_cmd
//      iperf_server_udp_recv_fn
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      aws_iot_shadow_connect
//      convertDataToString
//      aws_iot_shadow_init_json_document
//      aws_iot_shadow_add_reported
//      FillWithClientTokenSize
//      aws_iot_finalize_json_document
//      topicNameFromThingAndAction
//      registerJsonTokenOnDelta
//      aws_iot_mqtt_set_connect_params
//      iot_tls_connect
//      mbedtls_x509_crt_info
//      mbedtls_x509_crt_verify_info
//      mbedtls_debug_print_ret
//      mbedtls_debug_print_buf
//      mbedtls_debug_print_mpi
//      mbedtls_debug_print_ecp
//      mbedtls_debug_print_crt
//      mbedtls_x509_dn_gets
//      mbedtls_x509_serial_gets
//      mbedtls_x509_sig_alg_gets
//      mbedtls_x509_key_size_helper
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0064:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00CC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
snprintf_entry:
l2305216A:
	word32 a0_21
	word32 a3_22
	word32 a5_23
	word32 a7_24
	word32 s0_26
	word32 s1_27
	word32 s10_28
	word32 s11_29
	word32 s2_30
	word32 s3_31
	word32 s4_32
	word32 s6_33
	word32 s7_34
	word32 s8_35
	word32 s9_36
	word32 a1_40
	word32 a2_41
	word32 a4_42
	word32 s5_43
	word32 t0_80
	word32 t4_81
	word32 ra_25 = vsnprintf(ra, a0, a1, a2, fp + -20<i32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out t0_80, out s0_26, out s1_27, out a0_21, out a1_40, out a2_41, out a3_22, out a4_42, out a5_23, out a7_24, out s2_30, out s3_31, out s4_32, out s5_43, out s6_33, out s7_34, out s8_35, out s9_36, out s10_28, out s11_29, out t4_81)
	s0Out = s0_26
	s1Out = s1_27
	a0Out = a0_21
	a1Out = a1_40
	a2Out = a2_41
	a3Out = a3_22
	a4Out = a4_42
	a5Out = a5_23
	a7Out = a7_24
	s2Out = s2_30
	s3Out = s3_31
	s4Out = s4_32
	s5Out = s5_43
	s6Out = s6_33
	s7Out = s7_34
	s8Out = s8_35
	s9Out = s9_36
	s10Out = s10_28
	s11Out = s11_29
	return ra_25
snprintf_exit:


word32 sscanf(word32 ra, word32 a0, word32 a1, word32 dwArg14, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      parseUnsignedInteger32Value
//      parseUnsignedInteger16Value
//      parseUnsignedInteger8Value
//      parseInteger32Value
//      parseInteger16Value
//      parseInteger8Value
//      parseFloatValue
//      parseDoubleValue
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0014:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
sscanf_entry:
l23052186:
	word32 a0_22
	word32 a3_23
	word32 a4_24
	word32 s0_28
	word32 s1_29
	word32 s2_32
	word32 s3_33
	word32 s4_34
	word32 s5_35
	word32 s6_36
	word32 ra_27 = vsscanf(ra, a0, a1, fp + -24<i32>, dwArg14, out s0_28, out s1_29, out a0_22, out a3_23, out a4_24, out s2_32, out s3_33, out s4_34, out s5_35, out s6_36)
	s0Out = s0_28
	s1Out = s1_29
	a0Out = a0_22
	a3Out = a3_23
	a4Out = a4_24
	s2Out = s2_32
	s3Out = s3_33
	s4Out = s4_34
	s5Out = s5_35
	s6Out = s6_36
	return ra_27
sscanf_exit:


void set_bit(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
set_bit_entry:
l230521A2:
	Mem11[a1 | 1<32> << a1:word32] = Mem0[a1:word32]
	return
set_bit_exit:


word32 vsscanf(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg54, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sscanf
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0054:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t4
// Preserved: sp
vsscanf_entry:
l230521B8:
	word32 s10_100 = 0<32>
l230521FE:
	word32 s1_51 = CONVERT(Mem47[a1:byte], byte, word32)
	word32 s7_52 = a1 + 1<i32>
	branch s1_51 == 0<32> l2305220C
l23052208:
	branch true l23052238
l23052238:
	branch false l2305226E
l2305226E:
	a1 = s7_52
l2305223E:
	word32 a3_62 = Mem47[0x23088600<32>:word32]
	word32 s6_75
	word32 s0_76
	word32 s2_77
	word32 s3_78
	word32 s4_79
	word32 s5_80
	word32 ra_85
	word32 s1_86
	word32 a0_88
	word32 a1_90
	word32 a4_91
	word32 a3_95
	call a3_62 (retsize: 0;)
		uses: a0:a0,a1:a1_90,a2:a2,a3:a3_62,ra:ra,s0:0<32>,s1:s1_51,s10:0<32>,s11:0<32>,s2:0<32>,s3:a0,s4:0xFFFFFFFF<32>,s5:a2,s6:0x2308DC6D<32>,s7:s7_52,s8:dwArg54,s9:0<32>,Stack +0004:dwLoc8C,Stack +0020:dwLoc70,Stack +0024:dwLoc6C,Stack +0048:dwLoc48,Stack +00E4:dwArg54
		defs: a0:a0_88,a1:a1_90,a3:a3_95,a4:a4_91,ra:ra_85,s0:s0_76,s1:s1_86,s2:s2_77,s3:s3_78,s4:s4_79,s5:s5_80,s6:s6_75
	s0Out = s0_76
	s1Out = s1_86
	a0Out = a0_88
	a3Out = a3_95
	a4Out = a4_91
	s2Out = s2_77
	s3Out = s3_78
	s4Out = s4_79
	s5Out = s5_80
	s6Out = s6_75
	return ra_85
l2305220C:
	branch true l23052218
l23052212:
	branch false l23052218
l23052216:
	s10_100 = 0xFFFFFFFF<32>
l23052218:
	word32 s5_113 = Mem47[dwLoc48 + 440<i32>:word32]
	word32 a3_115 = Mem47[dwLoc48 + 504<i32>:word32]
	word32 s1_116 = Mem47[dwLoc48 + 284<i32>:word32]
	word32 ra_118 = Mem47[dwLoc48 + 348<i32>:word32]
	s0Out = 0<32>
	s1Out = s1_116
	a0Out = s10_100
	a3Out = a3_115
	a4Out = dwLoc70
	s2Out = 0<32>
	s3Out = a0
	s4Out = 0xFFFFFFFF<32>
	s5Out = s5_113
	s6Out = 0x2308DC6D<32>
	return ra_118
vsscanf_exit:


void strntoumax(word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a3 a4 a5 a6 a7 t1 t3 t4 t5 t6
// Preserved: a2 sp
strntoumax_entry:
l23052618:
	word32 a5_115 = a0
l23052622:
	word32 t3_11
	branch a3 == 0<32> l23052758
l23052758:
	t3_11 = 0<32>
	branch a2 != 0<32> l2305267A
l2305275C:
	branch a1 != 0<32> l2305274E
l2305274E:
	t3_11 = a3
l2305275E:
l23052626:
	word32 a4_18 = CONVERT(Mem0[a5_115:byte], byte, word32)
	branch (CONVERT(Mem0[a4_18 + 0x2308DC6D<32>:byte], byte, word32) & 8<32>) != 0<32> l2305268A
l2305268A:
	a5_115 = a5_115 + 1<32>
	a3 = a3 + 0xFFFFFFFF<32>
l23052636:
	t3_11 = 0<32>
	branch (a4_18 + -43<i32> & 253<i32>) != 0<32> l2305264E
l23052642:
	t3_11 = CONVERT(a4_18 <u -46<i32>, bool, word32)
	a5_115 = a5_115 + 1<32>
	a3 = a3 + 0xFFFFFFFF<32>
l2305264E:
	branch a2 != 0<32> l230526AA
l230526AA:
	branch a2 != 0x10<32> l2305267A
l230526B0:
	branch a3 <=u 1<32> l2305267A
l230526B6:
	branch CONVERT(Mem0[a5_115:byte], byte, word32) != 48<i32> l2305267A
l230526C2:
	branch (CONVERT(Mem0[a5_115 + 1<i32>:byte], byte, word32) & 223<i32>) != 88<i32> l2305267A
l230526D2:
	a3 = a3 + 0xFFFFFFFE<32>
	a5_115 = a5_115 + 2<32>
l23052650:
	branch a3 <=u 1<32> l23052690
l23052690:
	branch a3 == 0<32> l23052722
l23052696:
	branch CONVERT(Mem0[a5_115:byte], byte, word32) != 48<i32> l2305273A
l2305273A:
	a3 = 1<32>
	a2 = 0xA<32>
l23052656:
	a2 = 0xA<32>
	branch CONVERT(Mem0[a5_115:byte], byte, word32) != 48<i32> l2305267A
l23052664:
	branch (CONVERT(Mem0[a5_115 + 1<i32>:byte], byte, word32) & 223<i32>) != 88<i32> l230526A2
l230526A2:
	a3 = a3 + 0xFFFFFFFF<32>
	a5_115 = a5_115 + 1<32>
	a2 = 8<32>
l23052674:
	a3 = a3 + 0xFFFFFFFE<32>
	a5_115 = a5_115 + 2<32>
	a2 = 0x10<32>
l2305267A:
	word32 a3_68 = a3 + a5_115
l230526FE:
	branch a5_115 == a3_68 l23052722
l23052702:
	word32 a7_78 = CONVERT(Mem0[a5_115:byte], byte, word32)
	word32 a6_79 = a7_78 + -48<i32>
	branch a7_78 <=u 0xFFFFFFC7<32> l2305271A
l2305270E:
	branch a7_78 >u 0xFFFFFFA6<32> l23052740
l23052740:
	branch a7_78 >u 0xFFFFFF86<32> l23052722
l23052748:
	a6_79 = a7_78 + -87<i32>
l23052716:
	a6_79 = a7_78 + -55<i32>
l2305271A:
	branch a6_79 < 0<32> l23052722
l2305271E:
	branch a6_79 < a2 l230526D8
l230526D8:
	a5_115 = a5_115 + 1<32>
l23052722:
	branch a1 != 0<32> l23052754
l23052754:
	Mem117[a5_115:word32] = a1
l23052724:
	branch t3_11 == 0<32> l23052736
l23052728:
l23052736:
	return
strntoumax_exit:


word32 UART_Init(word32 a0, word32 a2, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
//      hal_uart_setconfig
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
UART_Init_entry:
l23052764:
	word32 a1_10 = Mem0[(a0 << 2<i32>) + 4<i32>:word32]
	word32 a5_14 = a4 >>u (a0 << 2<i32>)
	branch (a4 + 0xA<32> >>u (a0 << 2<i32>) & 0xA<32>) <=u 4<32> l23052790
l2305278E:
	a5_14 = a5_14 + 1<32>
l23052790:
	word32 a5_21 = a5_14 + 0xFFFFFFFF<32>
	word32 a5_25 = CONVERT(SLICE(a5_21, word16, 0), word16, word32) | a5_21 << 0x10<u32>
	Mem27[a5_25 + 8<i32>:word32] = a2
	word32 a4_22 = a5_21 << 0x10<u32>
	word32 a3_29 = CONVERT(Mem27[a1_10 + 10<i32>:byte], byte, word32)
	word32 a2_31 = Mem27[a5_25 + 4<i32>:word32]
	branch a3_29 == 1<32> l23052832
l23052832:
	a4_22 = a5_21 << 0x10<u32> | 48<i32>
	a5_25 = a5_25 | 48<i32>
l230527AC:
	branch a3_29 == 0<32> l2305282C
l2305282C:
	a4_22 = a5_21 << 0x10<u32> & 0xFFFFFFEF<32>
	a5_25 = a5_25 & 0xFFFFFFEF<32>
l230527AE:
	branch a3_29 == 2<32> l2305283C
l2305283C:
	a4_22 = a5_21 << 0x10<u32> & -33<i32> | 16<i32>
	a5_25 = a5_25 & -33<i32> | 16<i32>
l230527B4:
	word32 a3_50 = CONVERT(Mem27[a1_10 + 8<i32>:byte], byte, word32) + 4<32> << 8<i32>
	word32 a4_61 = (a4_22 & -1793<i32> | a3_50) & 0xFCFFFFFF<32> | CONVERT(Mem27[a1_10 + 9<i32>:byte], byte, word32) + 1<32> << 12<i32>
	word32 a5_52 = a5_25 & -1793<i32> | a3_50
	word32 a3_62 = a4_61 & -3<i32>
	branch CONVERT(Mem27[a1_10 + 11<i32>:byte], byte, word32) != 1<32> l230527EA
l230527E6:
	a3_62 = a4_61 | 2<i32>
l230527EA:
	word32 a5_71
	branch CONVERT(Mem27[a1_10 + 12<i32>:byte], byte, word32) != 1<32> l2305284E
l2305284E:
	a5_71 = a5_52 & 0xFF0007FF<32>
l230527F4:
	a5_71 = a5_52 | 0xFFF800<32>
l230527FC:
	word32 a4_80 = a5_71 & -3<i32>
	branch CONVERT(Mem27[a1_10 + 13<i32>:byte], byte, word32) != 1<32> l2305280E
l2305280A:
	a4_80 = a5_71 | 2<i32>
l2305280E:
	Mem89[a3_62:word32] = a2_31
	Mem91[a4_80 + 4<i32>:word32] = a2_31
	word32 a2_92 = Mem91[a4_80 + 12<i32>:word32]
	word32 a5_96 = a4_80 & -2<i32>
	branch CONVERT(Mem91[a1_10 + 14<i32>:byte], byte, word32) != 1<32> l23052826
l23052822:
	a5_96 = a4_80 | 1<i32>
l23052826:
	Mem100[a5_96 + 12<i32>:word32] = a2_92
	return a4_80
UART_Init_exit:


void UART_FifoConfig(word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
// MayUse:  a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
UART_FifoConfig_entry:
l23052858:
	Mem27[a3 + 132<i32>:word32] = (CONVERT(Mem0[a1:byte], byte, word32) + 0xFFFFFFFF<32> << 16<i32> | Mem0[a3 + 132<i32>:int32] & 0xFFE0FFFF<32>) & 0xE0FFFFFF<32> | CONVERT(Mem0[a1 + 1<i32>:byte], byte, word32) + 0xFFFFFFFF<32> << 24<i32>
	word32 a4_28 = Mem27[a3 + 128<i32>:int32]
	word32 a5_30 = a4_28 & -2<i32>
	branch CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32) != 1<32> l230528A8
l230528A4:
	a5_30 = a4_28 | 1<i32>
l230528A8:
	word32 a4_37 = a5_30 & -3<i32>
	branch CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32) != 1<32> l230528BA
l230528B6:
	a4_37 = a5_30 | 2<i32>
l230528BA:
	Mem42[a3 + 128<i32>:word32] = a4_37
	return
UART_FifoConfig_exit:


word32 UART_Enable(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
//      hal_uart_setconfig
// MayUse:  a1:[0..31]
// LiveOut: a1
// Trashed: a0 a1 a4 a5
// Preserved: sp
UART_Enable_entry:
l230528C2:
	branch (a1 & 253<i32>) != 0<32> l230528DE
l230528D6:
	Mem14[a1 & 253<i32> | 1<i32>:word32] = Mem0[a1 & 253<i32>:word32]
l230528DE:
	word32 a1_17 = a1 + 0xFFFFFFFF<32> & 255<i32>
	branch a1_17 >u 1<32> l230528F2
l230528EA:
	Mem22[5<32>:word32] = Mem19[5<32>:word32]
l230528F2:
	return a1_17
UART_Enable_exit:


word32 UART_Disable(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
//      hal_uart_setconfig
// MayUse:  a1:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a4 a5
// Preserved: sp
UART_Disable_entry:
l230528F6:
	branch (a1 & 253<i32>) != 0<32> l23052910
l2305290A:
	Mem14[a1 & 253<i32> & 0xFFFFFFFE<32>:word32] = Mem0[a1 & 253<i32>:word32]
l23052910:
	word32 a4_18 = 1<32>
	branch (a1 + 0xFFFFFFFF<32> & 255<i32>) >u 1<32> l23052922
l2305291C:
	Mem22[4<i32>:word32] = Mem19[5<32>:word32]
	a4_18 = 0<32>
l23052922:
	return a4_18
UART_Disable_exit:


word32 UART_SetRxTimeoutValue(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_rx_enable
// MayUse:  a1:[0..31] a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a4 a5
// Preserved: sp
UART_SetRxTimeoutValue_entry:
l23052926:
	word32 a5_9 = Mem0[a4:word32]
	word32 a4_13 = Mem0[a5_9 + 24<i32>:word32]
	Mem16[(a1 + 0xFFFFFFFF<32> | a5_9 & -256<i32>) + 24<i32>:word32] = a4_13
	return a4_13
UART_SetRxTimeoutValue_exit:


word32 UART_TxFreeRun(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
//      hal_uart_setconfig
// MayUse:  a1:[0..31] a4:[0..31]
// LiveOut: a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
UART_TxFreeRun_entry:
l23052944:
	word32 a5_13
	word32 a5_9 = Mem0[a4:word32]
	word32 a4_11 = Mem0[a5_9:word32]
	branch a1 != 1<32> l23052964
l23052964:
	a5_13 = a5_9 & 0xFFFFFFFB<32>
l2305295A:
	a5_13 = a5_9 | 4<i32>
l2305295E:
	Mem17[a5_13:word32] = a4_11
	return 1<32>
UART_TxFreeRun_exit:


word32 UART_IntMask(word32 a1, word32 a2, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
//      bl_uart_int_rx_enable
//      bl_uart_int_rx_disable
//      bl_uart_int_tx_enable
//      bl_uart_int_tx_disable
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
UART_IntMask_entry:
l23052968:
	word32 a1_17
	word32 a5_9 = Mem0[a4:word32]
	word32 a4_11 = Mem0[a5_9 + 36<i32>:word32]
	branch a1 != 8<32> l23052990
l23052990:
	word32 a1_14 = 1<32> << a1
	branch a2 != 1<32> l2305299E
l2305299E:
	a1_17 = ~a1_14 & a5_9
l2305299A:
	a1_17 = a1_14 | a5_9
l2305297E:
	a1_17 = 0<32>
	branch a2 != 1<32> l2305298A
l23052986:
	a1_17 = a5_9 | 255<i32>
l2305298A:
	Mem24[a1_17 + 36<i32>:word32] = a4_11
	return a4_11
UART_IntMask_exit:


word32 UART_GetTxFifoCount(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_data_send
//      bl_uart_flush
//      bflb_platform_usart_dbg_send
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
UART_GetTxFifoCount_entry:
l230529A6:
	word32 a5_9 = Mem0[(a0 << 2<i32>) + 0x2308DEB0<32>:word32]
	word32 a0_11 = Mem0[a5_9 + 132<i32>:int32] & 63<i32>
	a5Out = a5_9
	return a0_11
UART_GetTxFifoCount_exit:


void UART_SendData(word32 a0, word32 a1, word32 a2, word32 dwArg34, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bflb_platform_usart_dbg_send
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0034:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
UART_SendData_entry:
l230529BE:
	word32 s3_11 = Mem10[(a0 << 2<u32>) + 0x2308DEB0<32>:int32]
	word32 s1_25 = 0<32>
l230529EE:
	branch s1_25 <u a2 l23052A04
l23052A04:
	word32 a5_97
	branch UART_GetTxFifoCount(a0, out a5_97) == 0<32> l23052A28
l23052A28:
	branch dwArg34 != 0xFFFFFFFF<32> l230529EE
l23052A2C:
l23052A14:
	Mem47[s3_11 + 136<i32>:byte] = SLICE(CONVERT(Mem34[a1 + s1_25:byte], byte, word32), byte, 0)
	s1_25 = s1_25 + 1<32>
l230529F2:
l230529F4:
	0<32> = dwArg0128
	return
UART_SendData_exit:


word32 UART_GetRxFifoCount(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_data_recv
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
UART_GetRxFifoCount_entry:
l23052A30:
	word32 a5_9 = Mem0[(a0 << 2<i32>) + 0x2308DEB0<32>:word32]
	word32 a0_12 = Mem0[a5_9 + 132<i32>:int32] >>u 8<i32> & 63<i32>
	a5Out = a5_9
	return a0_12
UART_GetRxFifoCount_exit:


void ADC_Reset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse: 
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
ADC_Reset_entry:
l23052A4A:
	word32 a5_5 = Mem0[0x4000F90C<32>:int32]
	Mem7[0x4001090C<32>:word32] = a5_5 | 4<i32>
	Mem9[0x4001090C<32>:word32] = a5_5 & 0xFFFFFFFB<32>
	return
ADC_Reset_exit:


void ADC_Enable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
ADC_Enable_entry:
l23052A72:
	Mem7[0x4001090C<32>:word32] = Mem0[0x4000F90C<32>:int32] | 1<i32>
	return
ADC_Enable_exit:


void ADC_Disable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
ADC_Disable_entry:
l23052A84:
	Mem7[0x4001090C<32>:word32] = Mem0[0x4000F90C<32>:int32] & 0xFFFFFFFE<32>
	return
ADC_Disable_exit:


word32 ADC_Channel_Config(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a1
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
ADC_Channel_Config_entry:
l23052A94:
	Mem16[0x4001090C<32>:word32] = (a0 << 8<i32> | Mem0[0x4000F90C<32>:int32] & 0xFE0000FF<32>) & -249<i32> | a1 << 3<i32>
	Mem25[0x40010910<32>:word32] = (a2 << 1<i32> | Mem16[0x4000F910<32>:int32] & 0xFFFFFFFD<32>) & 0xFDFFFFFF<32>
	return a1 << 3<i32>
ADC_Channel_Config_exit:


word32 ADC_Start(word32 ra, word32 s0, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TSEN_Get_V_Error
//      TSEN_Get_Temp
// MayUse:  ra:[0..31] s0:[0..31]
// LiveOut: a0 ra
// Trashed: a0 a2 a5 ra
// Preserved: s0 sp
ADC_Start_entry:
l23052ACC:
	word32 a5_9 = Mem7[0x4000F90C<32>:int32]
	Mem12[0x4001090C<32>:word32] = a5_9 & 0xFFFFFFFD<32>
	word32 s0_15
	word32 ra_16
	word32 a0_18
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:100<i32>,a5:a5_9 & 0xFFFFFFFD<32>,ra:0x4200CAE4<p32>,s0:0x40010000<32>,Stack +0004:s0,Stack +0084:ra
		defs: a0:a0_18,ra:ra_16,s0:s0_15
	Mem22[s0_15 + 2316<i32>:word32] = Mem12[s0_15 + -1780<i32>:int32] | 2<i32>
	a0Out = a0_18
	return ra_16
ADC_Start_exit:


void ADC_FIFO_Cfg(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
ADC_FIFO_Cfg_entry:
l23052B00:
	word32 a5_15 = (CONVERT(Mem0[a0:byte], byte, word32) << 22<i32> | a5 & 0xFF3FFFFF<32>) & 0xFFFFFFFE<32> | CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32)
	Mem16[a5_15:word32] = Mem0[a5:word32]
	Mem19[a5_15 | 2<i32>:word32] = Mem16[a5_15:word32]
	return
ADC_FIFO_Cfg_exit:


word32 ADC_Get_FIFO_Count(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TSEN_Get_V_Error
//      TSEN_Get_Temp
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
ADC_Get_FIFO_Count_entry:
l23052B2A:
	return a0 >>u 16<i32> & 63<i32>
ADC_Get_FIFO_Count_exit:


word32 ADC_Parse_Result(word32 ra, word32 a0, word32 a2, word32 fs1, word32 fflags, word32 frm, word32 dwArg74, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & fs1Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TSEN_Get_V_Error
//      TSEN_Get_Temp
// MayUse:  a0:[0..31] a2:[0..31] fflags:[0..31] frm:[0..31] fs1:[0..31] ra:[0..31] Stack +0074:[0..31]
// LiveOut: a5 fflags frm fs1 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa5 fflags frm fs0 fs1 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: fa3 s5 sp
ADC_Parse_Result_entry:
l23052B38:
	branch CONVERT(Mem32[0x4200D96C<32>:byte], byte, word32) == 0<32> l23052C76
l23052C76:
	fs1 = Mem32[0x2308861C<32>:real32]
l23052B68:
l23052B6A:
	word32 fs0_48
	word32 a3_41 = Mem32[0x4000F914<32>:int32]
	word32 s2_121 = a3_41 >>u 2<u32> & 1<i32>
	branch (a3_41 & 8<32>) != 0<32> l23052C80
l23052C80:
	fs0_48 = Mem32[0x2307676C<32>:real32]
l23052B88:
	fs0_48 = Mem32[0x23088620<32>:real32]
l23052B90:
	word32 a5_100
	word32 s3_136
	branch s2_121 == 0<32> l23052C8A
l23052C8A:
	word32 s10_67 = Mem64[0x23088638<32>:int32]
	word32 s11_68 = Mem64[0x2308863C<32>:int32]
	a5_100 = Mem71[0x23088630<32>:int32]
	word32 s6_147 = Mem71[0x23088628<32>:int32]
	word32 s7_149 = Mem71[0x2308862C<32>:int32]
	s4 = a0
	word32 s5_226 = a2
	word32 s1_103 = 0xFFFFFFF<32>
	s2_121 = 0x3FFFFFF<32>
	s3_136 = 0xFFFFFF<32>
l23052CD2:
	branch a5_100 != s4 l23052CFA
l23052CFA:
	word32 a1_112
	word32 a3_118
	word32 a0_111
	word32 a3_94 = Mem90[s4:int32]
	Mem97[s5_226 + 1<i32>:byte] = 0xFF<8>
	Mem99[s5_226:byte] = SLICE(a3_94 >>u 21<i32>, byte, 0)
	branch dwArg74 != 0<32> l23052D5A
l23052D5A:
	a5_100 = 1<32>
	branch dwArg74 != 1<32> l23052D86
l23052D86:
	a2 = dwArg74
	branch true l23052D54
l23052D8A:
	word32 a0_108 = CONVERT(CONVERT(Mem99[s4:int32] & s1_103, word32, real32) / fs1, real32, uint32)
	Mem109[s5_226 + 2<i32>:word16] = SLICE(a0_108, word16, 0)
	a0_111 = __floatsidf(a0_108 & s1_103, out a1_112)
	a2 = s10_67
	a3_118 = s11_68
l23052D60:
	a3_118 = Mem99[s4:int32] >>u 2<i32> & s2_121
	word32 a0_125 = CONVERT(CONVERT(a3_118, word32, real32) / fs1, real32, uint32)
	Mem126[s5_226 + 2<i32>:word16] = SLICE(a0_125, word16, 0)
	a0_111 = __floatsidf(a0_125 & s1_103, out a1_112)
l23052D0C:
	word32 a0_140 = CONVERT(CONVERT(Mem99[s4:int32] >>u 4<i32> & s3_136, word32, real32) / fs1, real32, uint32)
	Mem141[s5_226 + 2<i32>:word16] = SLICE(a0_140, word16, 0)
	a0_111 = __floatsidf(a0_140 & s1_103, out a1_112)
	a2 = s6_147
	a3_118 = s7_149
l23052D30:
	word32 s3_938
	word32 s2_937
	word32 a0_162
	word32 a1_163
	word32 fflags_177
	word32 frm_178
	word32 s4_939
	word32 a4_934
	word32 s9_944
	word32 s0_932
	word32 s1_933
	word32 a5_935
	word32 a7_936
	word32 s6_941
	word32 s7_942
	word32 s8_943
	word32 s5_940
	word32 ra_179 = __muldf3(ra, a0_111, a1_112, a2, a3_118, fflags, frm, out s0_932, out s1_933, out a0_162, out a1_163, out a4_934, out a5_935, out a7_936, out s2_937, out s3_938, out s4_939, out s5_940, out s6_941, out s7_942, out s8_943, out s9_944, out fflags_177, out frm_178)
	word32 a1_196
	word32 a0_203
	word32 a1_204
	word32 a5_947
	word32 s9_950
	word32 s0_945
	word32 a7_948
	word32 s8_949
	word32 a4_946
	ra = __muldf3(ra_179, a0_162, a1_163, __extendsfdf2(ra_179, fs0_48, fflags_177, frm_178, out a1_196), a1_196, fflags_177, frm_178, out s0_945, out s1_103, out a0_203, out a1_204, out a4_946, out a5_947, out a7_948, out s2_121, out s3_136, out s4, out s5_226, out s6_147, out s7_149, out s8_949, out s9_950, out fflags, out frm)
	word32 a3_233
	word32 fa0_238
	word32 a4_951
	__truncdfsf2(ra, a0_203, a1_204, fflags, frm, out a2, out a3_233, out a4_951, out a5_100, out fa0_238)
	Mem240[a3_233 + 16<i32>:real32] = fa0_238
l23052D54:
	s4 = s4 + 4<32>
	s5_226 = s5_226 + 8<32>
l23052B96:
	a5_100 = Mem258[0x23088640<32>:int32]
	word32 s10_254 = Mem251[0x23088648<32>:int32]
	word32 s11_255 = Mem251[0x2308864C<32>:int32]
	word32 s7_264 = a2
	word32 s6_265 = a0
	word32 s1_266 = 0xFFFFFFF<32>
	word32 s5_267 = 0x3FFFFFF<32>
	s3_136 = 0xFFFFFF<32>
	dwLoc64 = a5_100
l23052BE2:
	branch s6_265 == a5_100 l23052CD8
l23052CD8:
	s0Out = qwArg01F8
	s1Out = dwLoc64
	a5Out = a5_100
	s2Out = s2_121
	s3Out = s3_136
	s4Out = s4
	fs1Out = fs1
	fflagsOut = fflags
	frmOut = frm
	return dwLoc24
ADC_Parse_Result_exit:
l23052BE8:
	Mem298[s7_264:byte] = SLICE(Mem272[s6_265:int32] >>u 21<i32>, byte, 0)
	Mem301[s7_264 + 1<i32>:byte] = SLICE(CONVERT(Mem298[s6_265 + 2<i32>:uint16], uint16, word32) & 0x1F<32>, byte, 0)
	s4 = 0<32>
	word32 a3_302 = Mem301[s6_265:int32]
	branch a3_302 << 0x10<u32> >= 0<32> l23052C14
l23052C0A:
	a3_302 = 0<32> - a3_302
	Mem305[s6_265:word32] = a3_302
	s4 = s2_121
l23052C14:
	word32 a1_327
	word32 a0_326
	branch dwArg74 != 0<32> l23052DAC
l23052DAC:
	a5_100 = 1<32>
	branch dwArg74 != 1<32> l23052DD8
l23052DD8:
	a2 = dwArg74
	branch true l23052C60
l23052DDE:
	word32 a0_322 = CONVERT(CONVERT(Mem311[s6_265:int32] & s1_266, word32, real32) / fs1, real32, uint32)
	Mem324[s7_264 + 2<i32>:word16] = SLICE(a0_322, word16, 0)
	a0_326 = __floatsidf(a0_322 & s1_266, out a1_327)
l23052DB2:
	word32 a0_339 = CONVERT(CONVERT(Mem311[s6_265:int32] >>u 2<i32> & s5_267, word32, real32) / fs1, real32, uint32)
	Mem340[s7_264 + 2<i32>:word16] = SLICE(a0_339, word16, 0)
	a0_326 = __floatsidf(a0_339 & s1_266, out a1_327)
	a2 = s10_254
	a3_302 = s11_255
l23052C18:
	word32 a0_359 = CONVERT(CONVERT(Mem311[s6_265:int32] >>u 4<i32> & s3_136, word32, real32) / fs1, real32, uint32)
	Mem360[s7_264 + 2<i32>:word16] = SLICE(a0_359, word16, 0)
	a0_326 = __floatsidf(a0_359 & s1_266, out a1_327)
l23052C3C:
	word32 s7_921
	word32 a0_384
	word32 a1_385
	word32 fflags_399
	word32 frm_400
	word32 s8_922
	word32 s4_918
	word32 s0_911
	word32 a4_913
	word32 s1_912
	word32 a7_915
	word32 s2_916
	word32 s3_917
	word32 a5_914
	word32 s5_919
	word32 s6_920
	word32 s9_923
	word32 ra_401 = __muldf3(ra, a0_326, a1_327, a2, a3_302, fflags, frm, out s0_911, out s1_912, out a0_384, out a1_385, out a4_913, out a5_914, out a7_915, out s2_916, out s3_917, out s4_918, out s5_919, out s6_920, out s7_921, out s8_922, out s9_923, out fflags_399, out frm_400)
	word32 s8_928
	word32 a1_419
	word32 a0_426
	word32 a1_427
	word32 s0_924
	word32 a5_926
	word32 a4_925
	word32 a7_927
	word32 s9_929
	ra = __muldf3(ra_401, a0_384, a1_385, __extendsfdf2(ra_401, fs0_48, fflags_399, frm_400, out a1_419), a1_419, fflags_399, frm_400, out s0_924, out s1_266, out a0_426, out a1_427, out a4_925, out a5_926, out a7_927, out s2_121, out s3_136, out s4, out s5_267, out s6_265, out s7_264, out s8_928, out s9_929, out fflags, out frm)
	word32 fa0_461
	word32 a4_931
	word32 a3_930
	__truncdfsf2(ra, a0_426, a1_427, fflags, frm, out a2, out a3_930, out a4_931, out a5_100, out fa0_461)
	Mem463[a5_100 + 16<i32>:real32] = fa0_461
l23052C60:
	branch s4 == 0<32> l23052C70
l23052C64:
	Mem471[a5_100 + 16<i32>:real32] = -Mem467[s7_264 + 4<i32>:real32]
l23052C70:
	s7_264 = s7_264 + 8<32>
	s6_265 = s6_265 + 4<32>


word32 ADC_Tsen_Init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
ADC_Tsen_Init_entry:
l23052E00:
	Mem11[0x4001090C<32>:word32] = Mem0[0x4000F90C<32>:int32] & 0x87FFFFFF<32> | 0x40000<32>
	Mem25[0x40010914<32>:word32] = (Mem11[0x4000F914<32>:int32] & 0xFC3FFDF<32> | a0 << 5<i32>) & 0xFA00007F<32> | 0x20000140<32>
	Mem29[0x40010910<32>:word32] = Mem25[0x4000F910<32>:int32] | 0x4000000<32>
	word32 a5_30 = Mem29[0x4000F90C<32>:int32]
	Mem33[0x4001090C<32>:word32] = a5_30 | 0x80000<32>
	return a5_30 | 0x80000<32>
ADC_Tsen_Init_exit:


void ADC_SET_TSVBE_LOW()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TSEN_Get_V_Error
//      TSEN_Get_Temp
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
ADC_SET_TSVBE_LOW_entry:
l23052E60:
	Mem8[0x40010914<32>:word32] = CONVERT(Mem0[0x4000F914<32>:word31], word31, word32)
	return
ADC_SET_TSVBE_LOW_exit:


void ADC_SET_TSVBE_HIGH()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TSEN_Get_V_Error
//      TSEN_Get_Temp
// MayUse: 
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
ADC_SET_TSVBE_HIGH_entry:
l23052E72:
	Mem8[0x40010914<32>:word32] = Mem0[0x4000F914<32>:int32] | 0x80000000<32>
	return
ADC_SET_TSVBE_HIGH_exit:


void TSEN_Get_V_Error(word32 ra, word32 s0, word32 a5, word32 fs1, word32 fflags, word32 frm, word32 dwArg44, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] fflags:[0..31] frm:[0..31] fs1:[0..31] ra:[0..31] s0:[0..31] Stack +0044:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa5 fflags frm fs0 fs1 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
TSEN_Get_V_Error_entry:
l23052E86:
	Mem18[a5 | 2<i32>:word32] = Mem14[a5:word32]
	ADC_SET_TSVBE_LOW()
	word32 a0_21
	word32 ra_24 = ADC_Start(ra, s0, out a0_21)
l23052EA8:
	a0_21 = ADC_Get_FIFO_Count(a0_21)
	branch a0_21 == 0<32> l23052EA8
l23052EAE:
	Mem38[0x4200D96C<32>:byte] = 0<8>
	word32 a5_51
	word32 fflags_56
	word32 frm_57
	word32 fs1_59
	word32 s0_61
	word32 s2_65
	word32 s3_66
	word32 s1_180
	word32 s4_181
	word32 ra_60 = ADC_Parse_Result(ra_24, fp + -44<i32>, fp + -40<i32>, fs1, fflags, frm, dwArg44, out s0_61, out s1_180, out a5_51, out s2_65, out s3_66, out s4_181, out fs1_59, out fflags_56, out frm_57)
	Mem79[s2_65:byte] = SLICE(s3_66, byte, 0)
	Mem84[a5_51 | 2<i32>:word32] = Mem79[a5_51:word32]
	ADC_SET_TSVBE_HIGH()
	word32 a0_88
	word32 ra_91 = ADC_Start(ra_60, s0_61 + -1684<i32>, out a0_88)
l23052EEC:
	a0_88 = ADC_Get_FIFO_Count(a0_88)
	branch a0_88 == 0<32> l23052EEC
l23052EF2:
	Mem105[s0_61 + -1684<i32>:byte] = 0<8>
	word32 s0_125
	word32 s1_126
	word32 frm_188
	word32 fs1_186
	word32 fflags_187
	word32 s3_184
	word32 s4_185
	word32 a5_182
	word32 s2_183
	ADC_Parse_Result(ra_91, fp + -44<i32>, fp + -40<i32>, fs1_59, fflags_56, frm_57, dwArg44, out s0_125, out s1_126, out a5_182, out s2_183, out s3_184, out s4_185, out fs1_186, out fflags_187, out frm_188)
	Mem144[s0_125:byte] = SLICE(s1_126, byte, 0)
	0<32> = dwArg0128
	return
TSEN_Get_V_Error_exit:


word32 TSEN_Get_Temp(word32 ra, word32 s0, word32 a5, word32 fs1, word32 fflags, word32 frm, word32 dwArg44, word32 dwArg0128, ptr32 & s0Out, ptr32 & a1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & fs1Out, ptr32 & fa0Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a5:[0..31] fflags:[0..31] frm:[0..31] fs1:[0..31] ra:[0..31] s0:[0..31] Stack +0044:[0..31] Stack +0128:[0..31]
// LiveOut: a1 fa0 fflags frm fs1 ra s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa4 fa5 fflags frm fs0 fs1 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
TSEN_Get_Temp_entry:
l23052F26:
	Mem22[a5 | 2<i32>:word32] = Mem16[a5:word32]
	ADC_SET_TSVBE_LOW()
	word32 a0_25
	word32 ra_28 = ADC_Start(ra, s0, out a0_25)
l23052F4C:
	a0_25 = ADC_Get_FIFO_Count(a0_25)
	branch a0_25 == 0<32> l23052F4C
l23052F52:
	Mem43[0x4200D96C<32>:byte] = 0<8>
	word32 fflags_61
	word32 frm_62
	word32 fs1_64
	word32 s0_66
	word32 s2_70
	word32 s3_71
	word32 s4_72
	word32 a5_267
	word32 s1_266
	word32 ra_65 = ADC_Parse_Result(ra_28, fp + -44<i32>, fp + -40<i32>, fs1, fflags, frm, dwArg44, out s0_66, out s1_266, out a5_267, out s2_70, out s3_71, out s4_72, out fs1_64, out fflags_61, out frm_62)
	Mem84[s3_71:byte] = SLICE(s4_72, byte, 0)
	Mem89[s2_70:word32] = Mem84[s2_70:int32] | 2<i32>
	ADC_SET_TSVBE_HIGH()
	word32 a0_93
	word32 ra_96 = ADC_Start(ra_65, s0_66 + -1684<i32>, out a0_93)
l23052F96:
	a0_93 = ADC_Get_FIFO_Count(a0_93)
	branch a0_93 == 0<32> l23052F96
l23052F9C:
	word32 fa0_154
	Mem110[s0_66 + -1684<i32>:byte] = 0<8>
	word32 fflags_125
	word32 frm_126
	word32 fs1_128
	word32 s0_130
	word32 s1_131
	word32 s2_134
	word32 s3_135
	word32 a5_268
	word32 s4_269
	word32 ra_129 = ADC_Parse_Result(ra_96, fp + -44<i32>, fp + -40<i32>, fs1_64, fflags_61, frm_62, dwArg44, out s0_130, out s1_131, out a5_268, out s2_134, out s3_135, out s4_269, out fs1_128, out fflags_125, out frm_126)
	Mem149[s0_130:byte] = SLICE(s2_134, byte, 0)
	word32 a5_148 = CONVERT(wLoc26, uint16, word32)
	word32 fa4_150 = CONVERT(s3_135, word32, real32)
	word32 fa0_151 = CONVERT(a5_148, word32, real32)
	word32 fa5_152 = CONVERT(s1_131, word32, real32)
	branch a5_148 >=u s3_135 l23052FFE
l23052FFE:
	fa0_154 = fa0_151 - fa4_150
l23052FD2:
	fa0_154 = fa4_150 - fa0_151
l23052FD6:
	word32 s0_270
	word32 s9_273
	word32 a1_163
	word32 a0_170
	word32 a1_171
	word32 fflags_185
	word32 frm_186
	word32 s2_190
	word32 s3_191
	word32 s1_271
	word32 a3_272
	word32 ra_187 = __divdf3(ra_129, __extendsfdf2(ra_129, fa0_154 - fa5_152, fflags_125, frm_126, out a1_163), a1_163, Mem149[0x23088658<32>:int32], Mem149[0x2308865C<32>:int32], fflags_125, frm_126, out s0_270, out s1_271, out a0_170, out a1_171, out a3_272, out s2_190, out s3_191, out s9_273, out fflags_185, out frm_186)
	word32 a3_275
	word32 a2_274
	word32 a4_276
	word32 a5_277
	word32 fa0_205
	word32 a1_198 = __truncdfsf2(ra_187, a0_170, a1_171, fflags_185, frm_186, out a2_274, out a3_275, out a4_276, out a5_277, out fa0_205)
	0<32> = dwArg0128
	s0Out = dwArgE4
	a1Out = a1_198
	s2Out = s2_190
	s3Out = s3_191
	fs1Out = fs1_128
	fa0Out = fa0_205
	fflagsOut = fflags_185
	frmOut = frm_186
	return ra_187
TSEN_Get_Temp_exit:


void ADC_Init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 t1
// Preserved: sp
ADC_Init_entry:
l23053004:
	word32 a4_57
	word32 a5_56
	Mem34[0x40010910<32>:word32] = CONVERT(Mem0[a0 + 10<i32>:byte], byte, word32) << 2<i32> | ((CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) << 18<i32> | (CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) << 27<i32> | (CONVERT(Mem0[a0:byte], byte, word32) << 29<i32> | Mem0[0x4000F910<32>:int32] & 0x9FFFFFFF<32>) & 0xE7FFFFFF<32>) & 0xF803FFFF<32>) & 0xDFFFFFFE<32> | CONVERT(Mem0[a0 + 11<i32>:byte], byte, word32)) & 0xFFFFFFE3<32>
	word32 a3_36 = CONVERT(Mem34[a0 + 3<i32>:byte], byte, word32)
	word32 a1_40 = CONVERT(Mem34[a0 + 4<i32>:byte], byte, word32)
	word32 a5_53 = CONVERT(Mem34[a0 + 6<i32>:byte], byte, word32) << 17<i32> | (a1_40 << 0x16<u32> | (a3_36 << 0x19<u32> | Mem34[0x4000F914<32>:int32] & 0x81FFFFFF<32>) & 0xFE3FFFFF<32>) & 0xDFFFFFFF<32>
	branch (a3_36 | a1_40) == 0<32> l230530F4
l230530F4:
	a5_56 = a5_53 & 0xE1FFFFFF<32>
	a4_57 = 0x8000000<32>
l230530A2:
	a5_56 = a5_53 & 0xE3FFFFFF<32>
	a4_57 = 0x12000000<32>
l230530AA:
	Mem84[0x40010914<32>:word32] = ((a5_56 | a4_57) & 0xFE00007F<32> | CONVERT(Mem34[a0 + 7<i32>:byte], byte, word32) << 7<i32>) & 0xFFFFFFF3<32> | CONVERT(Mem34[a0 + 8<i32>:byte], byte, word32) << 3<i32> | 0x1000000<32> | CONVERT(Mem34[a0 + 9<i32>:byte], byte, word32) << 2<i32>
	word32 a5_85 = Mem84[0x4000F938<32>:int32]
	word32 a5_88 = CONVERT(Mem84[a0 + 12<i32>:int16], int16, int32) | a5_85 & 0xF0000000<32>
	Mem89[0x40010938<32>:word32] = a5_88
	call 0x4200CB5C<p32> (retsize: 0;)
		uses: a0:a0,a3:a5_85 & 0xF0000000<32>,a4:0x40010000<32>,a5:a5_88,t1:0x4200D0EC<p32>
	return
ADC_Init_exit:


void Sec_Eng_PKA_Write_Common_OP_First_Cfg(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_PKA_Move_Data
//      Sec_Eng_PKA_MREM
//      Sec_Eng_PKA_MEXP
//      Sec_Eng_PKA_LSUB
//      Sec_Eng_PKA_LMUL
//      Sec_Eng_PKA_LDIV
//      Sec_Eng_PKA_LMUL2N
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
Sec_Eng_PKA_Write_Common_OP_First_Cfg_entry:
l230530FE:
	word32 a0_16 = a0 | (a1 & 0xF<32>) << 8<i32>
	branch a4 == 0x19<32> l23053114
l2305310A:
	a0_16 = a0_16 | a2 << 12<i32> | (a3 & 0xF<32>) << 20<i32>
l23053114:
	Mem32[0x40004340<32>:word32] = CONVERT(SLICE(a0_16 & 0x80FFFFFF<32> | (a4 & 127<i32>) << 24<i32>, word31, 0), word31, word32) | a5 << 31<i32>
	return
Sec_Eng_PKA_Write_Common_OP_First_Cfg_exit:


word32 Sec_Eng_PKA_Wait_ISR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_PKA_Read_Data
//      Sec_Eng_PKA_CREG
//      Sec_Eng_PKA_Move_Data
//      Sec_Eng_PKA_MREM
//      Sec_Eng_PKA_MEXP
//      Sec_Eng_PKA_LCMP
//      Sec_Eng_PKA_LSUB
//      Sec_Eng_PKA_LMUL
//      Sec_Eng_PKA_LDIV
//      Sec_Eng_PKA_LMUL2N
// MayUse: 
// LiveOut: a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
Sec_Eng_PKA_Wait_ISR_entry:
l23053136:
	word32 a5_10 = 0xF42400<32>
l23053142:
	word32 a4_8 = Mem0[0x40004300<32>:int32]
	a5_10 = a5_10 + 0xFFFFFFFF<32>
	branch a5_10 == 0<32> l23053154
l23053154:
	return
l2305314A:
	branch (a4_8 & 256<i32>) == 0<32> l23053142
l23053150:
	return
Sec_Eng_PKA_Wait_ISR_exit:


word32 Sec_Eng_SHA256_Update.part.0(word32 a0, word32 a1, word32 a2, word32 s5, word32 dwArgA8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & t3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_SHA256_Update
//      Sec_Eng_SHA256_Finish
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] s5:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a1 a3 a4 ra s0 s1 s2 s3 s4 s5 s6 s8 t3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
Sec_Eng_SHA256_Update.part.0_entry:
l23053158:
	word32 s1_115 = a0
	word32 s3_119 = a1
	word32 s0_102 = a2
	word32 a4_112 = 0xF42400<32>
	word32 a3_105 = 0x40004000<32>
l2305317C:
	word32 a0_209
	word32 s6_175 = Mem20[0x40004000<32>:int32]
	a4_112 = a4_112 + 0xFFFFFFFF<32>
	branch a4_112 == 0<32> l230532A2
l23053186:
	branch (s6_175 & 1<i32>) != 0<32> l2305317C
l2305318C:
	s1_115 = Mem20[a4_112:word32]
	s2 = CONVERT(Mem20[s1_115 + 16<i32>:byte], byte, word32)
	a4_112 = a4_112 + a2
	Mem40[a4_112:word32] = s1_115
	word32 s4_100 = a4_112 & 63<i32>
	branch a4_112 >=u a2 l230531A4
l2305319E:
	s1_115 = Mem40[(s6_175 & 1<i32>) + 4<i32>:word32]
	Mem43[(s6_175 & 1<i32>) + 5<32>:word32] = s1_115
l230531A4:
	branch (a4_112 & 63<i32>) == 0<32> l230531FA
l230531A8:
	s5 = 64<i32> - (a4_112 & 63<i32>)
	branch a2 <u s5 l230531FA
l230531B4:
	word32 s0_64
	word32 s3_66
	word32 s4_69
	word32 s6_71
	word32 a5_76
	call 0x4200C52E<p32> (retsize: 0;)
		uses: a0:a0 + (a4_33 & 63<i32>),a1:a1,a2:s5_46,a5:1<32>,ra:0x4200C1BC<p32>,s0:a2,s1:Mem50[a0 + 8<i32>:word32],s2:s2_36,s3:a1,s4:a4_33 & 63<i32>,s5:s5_46,s6:s6_31
		defs: a0:a0_72,a1:a1_73,a5:a5_76,ra:ra_67,s0:s0_64,s2:s2_68,s3:s3_66,s4:s4_69,s5:s5_70,s6:s6_71
	s1_115 = Mem50[a5_76 + 8<i32>:word32]
	Mem84[a5_76 + 4<i32>:word32] = 0x40004000<32>
	word32 a5_89 = CONVERT(SLICE(s2 << 6<u32> | s6_71 & -65<i32>, word16, 0), word16, word32)
	Mem92[a5_89 | 0x10000000<32>:word32] = 0x40004000<32>
	Mem94[a5_89 | 0x10000002<32>:word32] = 0x40004000<32>
	Mem98[s1_115 + 16<i32>:byte] = 1<8>
	s6_175 = s6_71 & -65<i32>
	a4_112 = 0x10000002<32>
	s0_102 = s0_64 + -64<i32> + s4_69
	s3_119 = s3_66 + s5
	s4_100 = 0<32>
l230531FA:
	word32 a2_103 = s0_102 & 63<i32>
	branch s0_102 <=u 63<i32> l23053250
l23053206:
	a3_105 = 0xF42400<32>
l23053212:
	a1 = Mem226[63<i32>:word32]
	a3_105 = a3_105 + 0xFFFFFFFF<32>
	branch a3_105 == 0<32> l230532A2
l23053218:
	a4_112 = 1<32>
	branch true l23053212
l2305321E:
	word32 a5_117 = CONVERT(Mem226[s1_115 + 16<i32>:byte], byte, word32)
	Mem120[a1 + 4<i32>:word32] = s3_119
	a4_112 = CONVERT(SLICE(a5_117 << 6<i32> | 0x3F<32>, word16, 0), word16, word32)
	word32 a5_128 = s0_102 >>u 6<u32> << 16<i32> | a4_112
	Mem129[a5_128:word32] = a1
	Mem131[a5_128 | 2<i32>:word32] = a1
	Mem135[s1_115 + 16<i32>:byte] = 1<8>
	s0_102 = s0_102 & -64<i32>
	s3_119 = s3_119 + s0_102
l23053250:
	branch a2_103 == 0<32> l23053276
l23053252:
	word32 a5_139 = 0xF42400<32>
l2305325E:
	a3_105 = Mem230[a4_112:word32]
	a5_139 = a5_139 + 0xFFFFFFFF<32>
	branch a5_139 == 0<32> l230532A2
l23053264:
	a4_112 = a4_112 & 1<32>
	branch a4_112 != 0<32> l2305325E
l23053268:
	word32 a5_196
	call 0x4200C52E<p32> (retsize: 0;)
		uses: a0:a0_149 + s4_157,a1:s3_153,a2:a2_103,a5:a5_196,ra:0x4200C26E<p32>,s0:s0_162,s1:Mem230[a0_149 + 8<i32>:word32],s2:s2_165,s3:s3_153,s4:s4_157,s5:s5_169,s6:s6_175
		defs: a1:a1_193,a4:a4_183,a5:a5_196,ra:ra_187,s1:s1_185,s2:s2_188,s3:s3_186,s5:s5_190,s6:s6_191
l23053276:
	word32 a5_202 = 0xF42400<32>
l23053282:
	a3_105 = Mem230[a4_112:word32]
	a5_202 = a5_202 + 0xFFFFFFFF<32>
	branch a5_202 == 0<32> l230532A2
l230532A2:
	a0_209 = 2<32>
l23053288:
	a4_112 = a4_112 & 1<32>
	branch a4_112 != 0<32> l23053282
l2305328C:
	a0_209 = 0<32>
l2305328E:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_115
	a0Out = a0_209
	a1Out = a1
	a3Out = a3_105
	a4Out = a4_112
	s2Out = s2
	s3Out = s3_119
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6_175
	s8Out = s4
	t3Out = dwArg00
	return ra
Sec_Eng_SHA256_Update.part.0_exit:


word32 Sec_Eng_SHA256_Init(word32 ra, word32 a0, word32 a2, word32 a5, word32 dwArg84, word32 dwArgA4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sha_init
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] ra:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s8 t0 t1 t3
// Preserved: sp
Sec_Eng_SHA256_Init_entry:
l230532A6:
	Mem20[a2 << 2<i32> | a5 & 0xFFFFFFE3<32>:word32] = Mem11[a5:word32]
	word32 a3_26
	word32 a4_27
	word32 a5_28
	word32 t1_80
	word32 a0_81
	word32 a1_82
	word32 a2_83
	memset(ra, a0, 0<32>, 0x14<32>, out t1_80, out a0_81, out a1_82, out a2_83, out a3_26, out a4_27, out a5_28)
	Mem35[a4_27 + 12<i32>:word32] = dwArgA4
	Mem36[a3_26 + 8<i32>:word32] = dwArgA4
	word32 sp_40
	word32 ra_41
	word32 a3_43
	word32 a4_44
	word32 a5_46
	word32 a0_48
	call 0x4200C538<p32> (retsize: 0;)
		uses: a0:a4_27,a1:0<32>,a2:64<i32>,a3:a3_26,a4:a4_27,a5:a5_28,ra:0x4200C2D8<p32>,s0:dwArgA4,Stack +00A4:dwArg84,Stack +00C4:dwArgA4
		defs: a0:a0_48,a3:a3_43,a4:a4_44,a5:a5_46,ra:ra_41,sp:sp_40
	word32 a5_66
	call 0x4200C538<p32> (retsize: 0;)
		uses: a0:a0_48,a1:128<i32>,a2:1<32>,a3:a3_43,a4:a4_44,a5:a5_46,ra:ra_41,s0:Mem36[a0_48 + 12<i32>:word32],s8:Mem36[sp_40 + 4<i32>:word32],Stack +0084:dwArg84,Stack +00A4:dwArgA4,t1:0x4200C2EE<p32>,t3:Mem36[sp_40 + 32<i32>:word32]
		defs: a5:a5_66
	return a5_66
Sec_Eng_SHA256_Init_exit:


void Sec_Eng_SHA_Start(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sha_init
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
Sec_Eng_SHA_Start_entry:
l230532F6:
	Mem8[a5 & -65<i32> | 32<i32>:word32] = Mem0[a5:word32]
	return
Sec_Eng_SHA_Start_exit:


word32 Sec_Eng_SHA256_Update(word32 a0, word32 a2, word32 a3, word32 s5, word32 dwArgA8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sha_update
//      Sec_Eng_SHA256_Finish
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] s5:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a1 a4 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
Sec_Eng_SHA256_Update_entry:
l23053308:
	branch a3 == 0<32> l23053312
l23053312:
	s0Out = s0
	s1Out = s1
	a0Out = 0<32>
	a1Out = a2
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return ra
l2305330C:
l2305330E_thunk_Sec_Eng_SHA256_Update.part.0:
	word32 a0_11
	word32 a4_14
	word32 s0_16
	word32 s1_17
	word32 s3_18
	word32 s4_19
	word32 s6_20
	word32 s2_25
	word32 a1_26
	word32 s5_28
	word32 a3_72
	word32 s8_73
	word32 t3_74
	word32 ra_27 = Sec_Eng_SHA256_Update.part.0(a0, a2, a3, s5, dwArgA8, out s0_16, out s1_17, out a0_11, out a1_26, out a3_72, out a4_14, out s2_25, out s3_18, out s4_19, out s5_28, out s6_20, out s8_73, out t3_74)
	s0Out = s0_16
	s1Out = s1_17
	a0Out = a0_11
	a1Out = a1_26
	a4Out = a4_14
	s2Out = s2_25
	s3Out = s3_18
	s4Out = s4_19
	s5Out = s5_28
	s6Out = s6_20
	return ra_27
Sec_Eng_SHA256_Update_exit:


word32 Sec_Eng_SHA256_Finish(word32 a2, word32 a4, word32 s5, word32 dwArg88, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sha_finish
// MayUse:  a2:[0..31] a4:[0..31] s5:[0..31] Stack +0088:[0..31]
// LiveOut: ra s0 s1 s2 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
Sec_Eng_SHA256_Finish_entry:
l23053316:
	word32 a5_10 = 0xF42400<32>
l23053322:
	word32 a3_8 = Mem0[a4:word32]
	a5_10 = a5_10 + 0xFFFFFFFF<32>
	branch a5_10 != 0<32> l23053338
l23053338:
	a4 = a4 & 1<32>
	branch a4 != 0<32> l23053322
l2305333C:
	word32 a5_51
	branch (a3_8 & 63<i32>) >u 55<i32> l230534FA
l230534FA:
	a5_51 = 120<i32>
l230533A2:
	a5_51 = 56<i32>
l230533A6:
	word32 a0_67
	word32 s3_385
	word32 s4_386
	word32 a1_384
	word32 a4_71
	word32 s0_129
	word32 s1_130
	word32 s2_138
	word32 s5_141
	word32 s6_133
	word32 ra_140 = Sec_Eng_SHA256_Update(Mem48[a2 + 12<i32>:word32], a2, a5_51 - (a3_8 & 63<i32>), s5, dwArg88, out s0_129, out s1_130, out a0_67, out a1_384, out a4_71, out s2_138, out s3_385, out s4_386, out s5_141, out s6_133)
	word32 a5_86 = 0xF42400<32>
l230533C0:
	a5_86 = a5_86 + 0xFFFFFFFF<32>
	branch a5_86 == 0<32> l2305332C
l230533C6:
	a4_71 = a4_71 & 1<32>
	branch a4_71 != 0<32> l230533C0
l230533CA:
	word32 sp_102
	word32 a1_112
	word32 s5_116
	call 0x4200C52E<p32> (retsize: 0;)
		uses: a1:fp + 0xFFFFFFE8<32>,a2:8<32>,a4:0xF42400<32>,a6:a6_128,ra:0x4200C3D0<p32>,s0:s0_75,s1:Mem48[a0_67 + 12<i32>:word32],s2:s2_138,s3:s3_131,s4:s4_132,s5:s5_80,s6:s6_133,s8:s8_134,Stack +00A8:dwArg88,t3:t3_135,tp:tp_136
		defs: a1:a1_112,s5:s5_116,sp:sp_102
	word32 s3_131
	word32 s4_132
	word32 s8_134
	word32 t3_135
	word32 a0_381
	word32 a4_383
	word32 a1_382
	word32 a3_126
	ra_140 = Sec_Eng_SHA256_Update.part.0(Mem48[a1_112 + 12<i32>:word32], a1_112, 8<32>, s5_116, Mem48[sp_102 + 168<i32>:word32], out s0_129, out s1_130, out a0_381, out a1_382, out a3_126, out a4_383, out s2_138, out s3_131, out s4_132, out s5_141, out s6_133, out s8_134, out t3_135)
	word32 a4_143 = 0xF42400<32>
l230533EE:
	a4_143 = a4_143 + 0xFFFFFFFF<32>
	branch a4_143 == 0<32> l2305332C
l2305332C:
l230533F4:
	a3_126 = a3_126 & 1<32>
	branch a3_126 != 0<32> l230533EE
l230533F8:
	Mem157[s0_129:byte] = SLICE(a3_126, byte, 0)
	Mem158[s0_129 + 1<i32>:byte] = SLICE(a3_126 >>u 8<u32>, byte, 0)
	Mem161[s0_129 + 2<i32>:byte] = SLICE(a3_126 >>u 0x10<u32>, byte, 0)
	Mem162[s0_129 + 3<i32>:byte] = SLICE(a3_126 >>u 24<i32>, byte, 0)
	Mem166[s0_129 + 4<i32>:byte] = SLICE(a3_126 >>u 24<i32>, byte, 0)
	Mem167[s0_129 + 5<i32>:byte] = SLICE(a3_126 >>u 0x20<32>, byte, 0)
	Mem170[s0_129 + 6<i32>:byte] = SLICE(a3_126 >>u 0x28<32>, byte, 0)
	Mem171[s0_129 + 7<i32>:byte] = SLICE(a3_126 >>u 48<i32>, byte, 0)
	Mem174[s0_129 + 8<i32>:byte] = SLICE(a3_126 >>u 48<i32>, byte, 0)
	Mem175[s0_129 + 9<i32>:byte] = SLICE(a3_126 >>u 0x38<32>, byte, 0)
	Mem178[s0_129 + 10<i32>:byte] = SLICE(a3_126 >>u 0x40<32>, byte, 0)
	Mem179[s0_129 + 11<i32>:byte] = SLICE(a3_126 >>u 72<i32>, byte, 0)
	Mem182[s0_129 + 12<i32>:byte] = SLICE(a3_126 >>u 72<i32>, byte, 0)
	Mem183[s0_129 + 13<i32>:byte] = SLICE(a3_126 >>u 0x50<32>, byte, 0)
	Mem186[s0_129 + 14<i32>:byte] = SLICE(a3_126 >>u 0x58<32>, byte, 0)
	Mem187[s0_129 + 15<i32>:byte] = SLICE(a3_126 >>u 96<i32>, byte, 0)
	word32 a5_188 = Mem187[(a3_126 >>u 96<i32>) + 32<i32>:word32]
	Mem190[s0_129 + 16<i32>:byte] = SLICE(a3_126 >>u 96<i32>, byte, 0)
	Mem191[s0_129 + 17<i32>:byte] = SLICE(a3_126 >>u 0x68<32>, byte, 0)
	Mem194[s0_129 + 19<i32>:byte] = SLICE(a3_126 >>u 120<i32>, byte, 0)
	Mem195[s0_129 + 18<i32>:byte] = SLICE(a3_126 >>u 0x70<32>, byte, 0)
	word32 a4_164 = a4_143 >>u 2<i32> & 255<i32>
	branch (a4_164 & 6<i32>) != 0<32> l230534EA
l23053492:
	Mem200[s0_129 + 20<i32>:byte] = SLICE(a4_164 & 6<i32>, byte, 0)
	Mem201[s0_129 + 21<i32>:byte] = SLICE((a4_164 & 6<i32>) >>u 8<u32>, byte, 0)
	Mem204[s0_129 + 22<i32>:byte] = SLICE((a4_164 & 6<i32>) >>u 0x10<u32>, byte, 0)
	word32 a3_203 = (a4_164 & 6<i32>) >>u 24<i32>
	Mem205[s0_129 + 23<i32>:byte] = SLICE(a3_203, byte, 0)
	a5_188 = Mem205[a3_203 + 40<i32>:word32]
	Mem208[s0_129 + 24<i32>:byte] = SLICE(a3_203, byte, 0)
	Mem209[s0_129 + 25<i32>:byte] = SLICE(a3_203 >>u 8<u32>, byte, 0)
	Mem212[s0_129 + 26<i32>:byte] = SLICE(a3_203 >>u 0x10<u32>, byte, 0)
	Mem213[s0_129 + 27<i32>:byte] = SLICE(a3_203 >>u 24<i32>, byte, 0)
	branch (a4_164 & 7<32>) != 0<32> l230534EA
l230534CE:
	word32 a5_214 = Mem213[a5_188 + 44<i32>:word32]
	Mem216[s0_129 + 28<i32>:byte] = SLICE(a5_214, byte, 0)
	Mem217[s0_129 + 29<i32>:byte] = SLICE(a5_214 >>u 8<u32>, byte, 0)
	Mem220[s0_129 + 30<i32>:byte] = SLICE(a5_214 >>u 0x10<u32>, byte, 0)
	Mem221[s0_129 + 31<i32>:byte] = SLICE(a5_214 >>u 24<i32>, byte, 0)
	a5_188 = a5_214 >>u 24<i32>
l230534EA:
	Mem227[a5_188 & -97<i32>:word32] = Mem223[a5_188:word32]
l2305332E:
	s0Out = s0_129
	s1Out = s1_130
	s2Out = s2_138
	s4Out = dwArg04
	s5Out = s5_141
	s6Out = s6_133
	return ra_140
l23053328:
	s0Out = s0
	s1Out = s1
	s2Out = s2
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return ra
Sec_Eng_SHA256_Finish_exit:


void Sec_Eng_SHA_Enable_Link(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha256_test_case0
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
Sec_Eng_SHA_Enable_Link_entry:
l23053500:
	Mem9[a5 | 0x8000020<32>:word32] = Mem0[a5:word32]
	return
Sec_Eng_SHA_Enable_Link_exit:


void Sec_Eng_SHA_Disable_Link(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha256_test_case0
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
Sec_Eng_SHA_Disable_Link_entry:
l23053512:
	Mem9[a5 & 0xF7FFFFDF<32>:word32] = Mem0[a5:word32]
	return
Sec_Eng_SHA_Disable_Link_exit:


word32 Sec_Eng_SHA256_Link_Init(word32 ra, word32 a0, word32 a2, word32 dwArg84, word32 dwArgA4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha256_test_case0
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s4 s8 t0 t1 t3
// Preserved: sp
Sec_Eng_SHA256_Link_Init_entry:
l23053524:
	word32 a3_23
	word32 a4_24
	word32 t1_86
	word32 a0_87
	word32 a1_88
	word32 a2_89
	word32 a5_90
	memset(ra, a0, 0<32>, 0x14<32>, out t1_86, out a0_87, out a1_88, out a2_89, out a3_23, out a4_24, out a5_90)
	Mem32[a4_24 + 12<i32>:word32] = dwArgA4
	Mem33[a3_23 + 8<i32>:word32] = dwArgA4
	word32 s1_38
	word32 a3_43
	word32 a0_44
	word32 a4_45
	call 0x4200C538<p32> (retsize: 0;)
		uses: a0:a4_24,a1:0<32>,a2:64<i32>,a3:a3_23,a4:a4_24,ra:0x4200C54C<p32>,s0:dwArgA4,s1:a2,Stack +00A4:dwArg84,Stack +00C4:dwArgA4
		defs: a0:a0_44,a3:a3_43,a4:a4_45,s1:s1_38
	word32 s1_57
	word32 s0_61
	word32 a4_64
	call 0x4200C538<p32> (retsize: 0;)
		uses: a0:a0_44,a1:128<i32>,a2:1<32>,a3:a3_43,a4:a4_45,ra:0x4200C55C<p32>,s0:Mem33[a0_44 + 12<i32>:word32],s1:s1_38,Stack +0084:dwArg84,Stack +00A4:dwArgA4
		defs: a4:a4_64,s0:s0_61,s1:s1_57
	Mem72[s1_57 + 16<i32>:word32] = s0_61
	return a4_64
Sec_Eng_SHA256_Link_Init_exit:


word32 Sec_Eng_SHA256_Link_Update(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s3, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha256_test_case0
//      Sec_Eng_SHA256_Link_Finish
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] s3:[0..31] Stack +0128:[0..31]
// LiveOut: a1 a4 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 t3 tp
// Preserved: sp
Sec_Eng_SHA256_Link_Update_entry:
l23053570:
	branch a3 == 0<32> l2305369C
l2305369C:
	s0Out = s0
	s1Out = s1
	a1Out = a1
	a4Out = a4
	s2Out = s2
	s3Out = s3
	return ra
l23053574:
	word32 s1_105 = a2
	word32 a5_21 = 0xF42400<32>
l23053590:
	word32 a2_25 = Mem18[a4:word32]
	a5_21 = a5_21 + 0xFFFFFFFF<32>
	branch a5_21 != 0<32> l230535A6
l230535A6:
	a4 = a4 & 1<32>
	branch a4 != 0<32> l23053590
l230535AA:
	Mem30[a5_21 + 80<i32>:word32] = a2_25
	word32 a5_34 = a5_21 + a3
	Mem35[a5_34:word32] = Mem30[a5_21:word32]
	s2 = a5_21 & 63<i32>
	branch a5_34 >=u a3 l230535C2
l230535BC:
	Mem38[a5_34 + 5<32>:word32] = Mem35[a5_34 + 4<i32>:word32]
l230535C2:
	branch (a5_21 & 63<i32>) == 0<32> l23053614
l230535C6:
	s3 = 64<i32> - (a5_21 & 63<i32>)
	branch a3 <u s3 l23053614
l230535D2:
	word32 a3_57
	word32 a5_58
	word32 s1_60
	word32 s2_63
	word32 a4_66
	word32 tp_67
	word32 t3_68
	call 0x4200C52E<p32> (retsize: 0;)
		uses: a0:a0 + (a5_27 & 63<i32>),a1:a2,a2:s3_41,a3:a3,a4:a4_82,a5:a5_85,ra:0x4200C5DC<p32>,s0:Mem45[a0 + 8<i32>:word32],s1:a2,s2:a5_27 & 63<i32>,s3:s3_41,Stack +0084:a3,t3:t3_68,tp:tp_67
		defs: a0:a0_65,a1:a1_69,a3:a3_57,a4:a4_66,a5:a5_58,ra:ra_61,s1:s1_60,s2:s2_63,s3:s3_64,t3:t3_68,tp:tp_67
	Mem73[a4_66 + 4<i32>:word32] = a5_58
	Mem76[a5_58 + 2<i32>:word16] = 1<16>
	Mem79[a5_58 | 2<i32>:word32] = Mem76[a5_58:word32]
	a4 = Mem79[a5_58 | 2<i32>:word32]
	word32 a5_85 = a5_58 | 2<i32> | 64<i32>
	Mem86[a5_85:word32] = a4
	s1_105 = s1_60 + s3
	a3 = a3_57 + s2_63 + -64<i32>
	s2 = 0<32>
l23053614:
	word32 a2_90 = a3 & 63<i32>
	branch a3 <=u 63<i32> l2305365C
l23053620:
	word32 a5_92 = 0xF42400<32>
l2305362C:
	a4 = Mem194[a1:word32]
	a5_92 = a5_92 + 0xFFFFFFFF<32>
	branch a5_92 == 0<32> l23053596
l23053632:
	a1 = a1 & 1<32>
	branch a1 != 0<32> l2305362C
l23053636:
	Mem106[s1_105 + 4<i32>:word32] = a5_92
	a1 = a3 >>u 6<u32>
	Mem109[a5_92 + 2<i32>:word16] = SLICE(a1, word16, 0)
	Mem112[a5_92 | 2<i32>:word32] = Mem109[a5_92:word32]
	a4 = Mem112[a5_92 | 2<i32>:word32]
	Mem116[a5_92 | 2<i32> | 64<i32>:word32] = a4
	s1_105 = s1_105 + (a3 & -64<i32>)
l2305365C:
	branch a2_90 == 0<32> l23053682
l2305365E:
	word32 a5_120 = 0xF42400<32>
l2305366A:
	word32 a3_124 = Mem198[a4:word32]
	a5_120 = a5_120 + 0xFFFFFFFF<32>
	branch a5_120 == 0<32> l23053596
l23053670:
	a4 = a4 & 1<32>
	branch a4 != 0<32> l2305366A
l23053674:
	word32 a5_155
	word32 tp_164
	word32 t3_165
	call 0x4200C52E<p32> (retsize: 0;)
		uses: a0:a0_130 + s2_138,a1:s1_134,a2:a2_90,a3:a3_124,a4:a4_163,a5:a5_155,ra:0x4200C67A<p32>,s0:Mem198[a0_130 + 8<i32>:word32],s1:s1_134,s2:s2_138,s3:s3_145,t3:t3_165,tp:tp_164
		defs: a1:a1_166,a4:a4_163,a5:a5_155,ra:ra_158,s1:s1_157,s2:s2_160,s3:s3_161,t3:t3_165,tp:tp_164
l23053682:
	word32 a5_168 = 0xF42400<32>
l2305368E:
	a5_168 = a5_168 + 0xFFFFFFFF<32>
	branch a5_168 == 0<32> l23053596
l23053694:
	a4 = a4 & 1<32>
	branch a4 != 0<32> l2305368E
l23053698:
l23053596:
l23053598:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_105
	a1Out = a1
	a4Out = a4
	s2Out = s2
	s3Out = s3
	return ra
Sec_Eng_SHA256_Link_Update_exit:


word32 Sec_Eng_SHA256_Link_Finish(word32 a0, word32 a1, word32 a2, word32 a4, word32 dwArgF8, word32 dwArg0128, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha256_test_case0
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 t3 tp
// Preserved: sp
Sec_Eng_SHA256_Link_Finish_entry:
l230536A0:
	word32 a6_15 = Mem13[a0 + 16<i32>:int32]
	word32 a5_118 = 0xF42400<32>
l230536C0:
	word32 a3_22 = Mem13[a4:word32]
	a5_118 = a5_118 + 0xFFFFFFFF<32>
	branch a5_118 != 0<32> l230536D6
l230536D6:
	a4 = a4 & 1<32>
	branch a4 != 0<32> l230536C0
l230536DA:
	word32 a5_57
	Mem27[a3_22 + 80<i32>:word32] = a6_15
	word32 a4_53 = a3_22 << 0x13<32> >>u 24<i32> | a3_22 << 0xB<u32>
	branch (a3_22 & 63<i32>) >u 55<i32> l230537AE
l230537AE:
	a5_57 = 120<i32>
l2305373C:
	a5_57 = 56<i32>
l23053740:
	word32 s0_80
	word32 s3_87
	word32 a1_288
	word32 s2_289
	word32 s1_287
	word32 a4_78
	ra = Sec_Eng_SHA256_Link_Update(Mem54[a2 + 12<i32>:word32], a1, a2, a5_57 - (a3_22 & 63<i32>), a4_53, a1, dwArgF8, out s0_80, out s1_287, out a1_288, out a4_78, out s2_289, out s3_87)
	a5_118 = 0xF42400<32>
l2305375C:
	a5_118 = a5_118 + 0xFFFFFFFF<32>
	branch a5_118 == 0<32> l230536C6
l23053762:
	a4_78 = a4_78 & 1<32>
	branch a4_78 != 0<32> l2305375C
l23053766:
	word32 s1_110
	word32 s2_111
	word32 a1_114
	word32 s3_116
	word32 s0_286
	word32 a4_107
	ra = Sec_Eng_SHA256_Link_Update(s0_80, s3_87, fp + -40<i32>, 8<32>, a4_78, s3_87, dwArgF8, out s0_286, out s1_110, out a1_114, out a4_107, out s2_111, out s3_116)
	a5_118 = 0xF42400<32>
l2305377E:
	a5_118 = a5_118 + 0xFFFFFFFF<32>
	branch a5_118 == 0<32> l230536C6
l23053784:
	a4_107 = a4_107 & 1<32>
	branch a4_107 != 0<32> l2305377E
l23053788:
	word32 a2_132
	word32 a5_128 = s1_110 >>u 2<u32> & 7<32>
	word32 s0_131 = Mem54[a1_114 + 16<i32>:word32]
	branch a5_128 == 1<32> l230537C6
l230537C6:
	a2_132 = 0x1C<32>
l23053796:
	branch a5_128 == 0<32> l230537B4
l230537B4:
	a2_132 = 32<i32>
l23053798:
	a2_132 = 0x14<32>
	branch a5_128 <=u 3<32> l230537B8
l230537B8:
	word32 a4_159
	call 0x4200C52E<p32> (retsize: 0;)
		uses: a0:s2_111,a1:a1_114 + 8<32>,a2:a2_146,a4:a4_159,ra:0x4200C7BC<p32>,s0:s0_131,s1:s1_110,s2:s2_111,s3:s3_116,Stack +0128:dwArgF8
		defs: a4:a4_159,a5:a5_157,ra:ra_150
l230537A0:
	a5_118 = a5_128 & -65<i32>
	Mem172[a5_118:word32] = Mem54[a5_128:word32]
l230536C6:
l230536C8:
	0<32> = dwArg0128
	a5Out = a5_118
	return ra
Sec_Eng_SHA256_Link_Finish_exit:


word32 Sec_Eng_AES_Enable_Link()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_AES_Link_Case_CBC_128
//      Sec_Eng_AES_Link_Case_CTR_128
//      Sec_Eng_AES_Link_Case_ECB_128
// MayUse: 
// LiveOut: a3
// Trashed: a3 a4 a5
// Preserved: sp
Sec_Eng_AES_Enable_Link_entry:
l230537CA:
	Mem8[0x40004100<32>:word32] = Mem0[0x40004100<32>:int32] | 0x8000000<32>
	return 0x8000000<32>
Sec_Eng_AES_Enable_Link_exit:


void Sec_Eng_AES_Disable_Link()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_AES_Link_Case_CBC_128
//      Sec_Eng_AES_Link_Case_CTR_128
//      Sec_Eng_AES_Link_Case_ECB_128
// MayUse: 
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
Sec_Eng_AES_Disable_Link_entry:
l230537DC:
	Mem9[0x40004100<32>:word32] = Mem0[0x40004100<32>:int32] & 0xF7FFFFFF<32>
	return
Sec_Eng_AES_Disable_Link_exit:


word32 Sec_Eng_AES_Link_Work(word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_AES_Link_Case_CBC_128
//      Sec_Eng_AES_Link_Case_CTR_128
//      Sec_Eng_AES_Link_Case_ECB_128
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a1
// Trashed: a0 a1 a3 a4 a5 a6 a7
// Preserved: sp
Sec_Eng_AES_Link_Work_entry:
l230537F0:
	branch (a1 & 3<i32> | a3 & 15<i32>) != 0<32> l23053866
l230537FE:
	word32 a5_10 = 0xF42400<32>
l2305380A:
	word32 a7_14 = Mem0[0x40004100<32>:int32]
	a5_10 = a5_10 + 0xFFFFFFFF<32>
	branch a5_10 != 0<32> l2305381A
l2305381A:
	branch (a7_14 & 1<i32>) != 0<32> l2305380A
l23053822:
	Mem20[0x40004150<32>:word32] = a1
	Mem25[a2 + 4<i32>:word32] = a1
	Mem28[a4 + 8<i32>:word32] = a1
	Mem29[a1 + 2<i32>:word16] = SLICE(a3 >>u 4<i32>, word16, 0)
	Mem32[a5_10 | 4<i32>:word32] = Mem29[a5_10:word32]
	Mem35[a5_10 | 4<i32> | 2<i32>:word32] = Mem32[a5_10 | 4<i32>:word32]
	word32 a5_37 = 0xF42400<32>
l23053850:
	word32 a4_41 = Mem35[0x40004100<32>:int32]
	a5_37 = a5_37 + 0xFFFFFFFF<32>
	branch a5_37 == 0<32> l23053816
l23053858:
	a1 = a4_41 & 1<i32>
	branch (a4_41 & 1<i32>) != 0<32> l23053850
l2305385E:
	Mem46[0x40004100<32>:word32] = a4_41 & 0xFFFFFFFB<32>
l23053866:
	return a1
l23053816:
	return a1
Sec_Eng_AES_Link_Work_exit:


void Sec_Eng_PKA_Reset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
//      _pka_test_case2
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
Sec_Eng_PKA_Reset_entry:
l23053868:
	Mem4[0x40004300<32>:word32] = 0<32>
	Mem6[0x40004300<32>:word32] = 8<32>
	return
Sec_Eng_PKA_Reset_exit:


void Sec_Eng_PKA_BigEndian_Enable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
//      _pka_test_case2
// MayUse: 
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
Sec_Eng_PKA_BigEndian_Enable_entry:
l23053878:
	Mem8[0x40004300<32>:word32] = Mem0[0x40004300<32>:int32] | 0x1000000<32>
	return
Sec_Eng_PKA_BigEndian_Enable_exit:


void Sec_Eng_PKA_Clear_Int()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_PKA_Read_Data
//      Sec_Eng_PKA_CREG
//      Sec_Eng_PKA_Move_Data
//      Sec_Eng_PKA_MREM
//      Sec_Eng_PKA_MEXP
//      Sec_Eng_PKA_LCMP
//      Sec_Eng_PKA_LSUB
//      Sec_Eng_PKA_LMUL
//      Sec_Eng_PKA_LDIV
//      Sec_Eng_PKA_LMUL2N
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
Sec_Eng_PKA_Clear_Int_entry:
l2305388A:
	Mem7[0x40004300<32>:word32] = Mem0[0x40004300<32>:int32] | 512<i32>
	Mem10[0x40004300<32>:word32] = Mem7[0x40004300<32>:int32] & -513<i32>
	return
Sec_Eng_PKA_Clear_Int_exit:


void Sec_Eng_PKA_Read_Block(word32 a0, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_PKA_Read_Data
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a1 a2 a4 a5
// Preserved: sp
Sec_Eng_PKA_Read_Block_entry:
l230538A8:
	word32 a5_15 = 0<32>
l230538AC:
	branch a5_15 != (a2 & 0xFFFFFFFC<32>) l230538B2
l230538B2:
	Mem14[a3:word32] = (a5_15 << 2<u32>) + a0
	a5_15 = a5_15 + 1<32>
l230538B0:
	return
Sec_Eng_PKA_Read_Block_exit:


void Sec_Eng_PKA_Write_Block(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_PKA_Write_Data
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a2 a4 a5
// Preserved: sp
Sec_Eng_PKA_Write_Block_entry:
l230538C0:
	word32 a5_13 = 0<32>
l230538C4:
	branch a5_13 != (a2 & 0xFFFFFFFC<32>) l230538CA
l230538CA:
	Mem15[Mem11[(a5_13 << 2<u32>) + a1:word32]:word32] = a0
	a5_13 = a5_13 + 1<32>
l230538C8:
	return
Sec_Eng_PKA_Write_Block_exit:


word32 Sec_Eng_PKA_Write_Data(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
//      _pka_test_case2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 tp
// Preserved: s0 sp
Sec_Eng_PKA_Write_Data_entry:
l230538D8:
	word32 a2_14 = a0 + -1<i32> & 255<i32>
	word32 a6_16 = 0<32>
	branch a2_14 >u 9<32> l23053902
l230538F2:
	a6_16 = CONVERT(Mem13[(a2_14 << 1<i32>) + 0x2308867C<32>:uint16], uint16, word32)
l23053902:
	Mem43[0x40004340<32>:word32] = CONVERT(SLICE(a3, word12, 0), word12, word32) | a1 << 12<i32> | (a0 & 0xF<32>) << 20<i32> | 0x39000000<32> | a4 << 31<i32>
	word32 a6_42 = a6_16 >>u 2<u32>
	word32 s0_44 = a6_42
	branch a3 >=u a6_42 l23053930
l2305392E:
	s0_44 = a3
l23053930:
	word32 s0_47 = s0_44 << 16<i32>
	Sec_Eng_PKA_Write_Block(0x40004340<32>, a2, s0_47 >>u 16<i32>)
	word32 a5_58 = s0_47 >>u 16<i32> & -4<i32>
l2305394C:
	branch a5_58 < s0_47 >>u 16<i32> l2305395A
l2305395A:
	Mem69[0x40004340<32>:word32] = Mem65[(a5_58 << 2<u32>) + a2:word32]
	a5_58 = a5_58 + 1<32>
l23053950:
	return a2
Sec_Eng_PKA_Write_Data_exit:


word32 Sec_Eng_PKA_Read_Data(word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
//      _pka_test_case2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 tp
// Preserved: s0 sp
Sec_Eng_PKA_Read_Data_entry:
l2305396A:
	word32 a5_5 = a0 + -1<i32> & 255<i32>
	word32 a4_13 = 0<32>
	branch a5_5 >u 9<32> l2305398A
l2305397A:
	a4_13 = CONVERT(Mem0[(a5_5 << 1<i32>) + 0x2308867C<32>:uint16], uint16, word32)
l2305398A:
	branch a4_13 >>u 2<i32> <u a3 l230539FC
l230539FC:
	return a3
l23053990:
	Mem40[0x40004340<32>:word32] = a3 | a1 << 12<i32> | (a0 & 15<i32>) << 0x14<u32> | 0xB8000000<32>
	Mem41[0x40004340<32>:word32] = 0<32>
	word32 a3_47 = Sec_Eng_PKA_Wait_ISR()
	Sec_Eng_PKA_Clear_Int()
	Sec_Eng_PKA_Read_Block(a2, a3, a3_47)
	word32 a5_60 = a3 & -4<i32>
l230539DE:
	branch a5_60 < a3 l230539EC
l230539EC:
	Mem70[Mem65[0x40004340<32>:int32]:word32] = (a5_60 << 2<u32>) + a2
	a5_60 = a5_60 + 1<32>
l230539E2:
	return 0x40004000<32>
Sec_Eng_PKA_Read_Data_exit:


void Sec_Eng_PKA_CREG(word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
//      _pka_test_case2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
Sec_Eng_PKA_CREG_entry:
l230539FE:
	Mem17[0x40004340<32>:word32] = a2 | a1 << 12<i32> | (a0 & 0xF<32>) << 20<i32> | 0x35000000<32> | a3 << 0x1F<u32>
	Mem18[0x40004340<32>:word32] = 0<32>
	branch a3 == 0<32> l23053A32
l23053A32:
	return
l23053A22:
	Sec_Eng_PKA_Wait_ISR()
l23053A2E_thunk_Sec_Eng_PKA_Clear_Int:
	Sec_Eng_PKA_Clear_Int()
	return
Sec_Eng_PKA_CREG_exit:


void Sec_Eng_PKA_Move_Data(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
//      _pka_test_case2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: s0 sp
Sec_Eng_PKA_Move_Data_entry:
l23053A34:
	Sec_Eng_PKA_Write_Common_OP_First_Cfg(a3, a2, a1, a0, 50<i32>, a4)
	Mem29[0x40004340<32>:word32] = 0<32>
	branch a4 == 0<32> l23053A6A
l23053A6A:
	return
l23053A5C:
	Sec_Eng_PKA_Wait_ISR()
l23053A66_thunk_Sec_Eng_PKA_Clear_Int:
	Sec_Eng_PKA_Clear_Int()
	return
Sec_Eng_PKA_Move_Data_exit:


word32 Sec_Eng_PKA_MREM(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
//      _pka_test_case2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31]
// LiveOut: s0
// Trashed: a0 a1 a2 a3 a4 a5 a7 s0 s1 s4 s8 t1 t3
// Preserved: sp
Sec_Eng_PKA_MREM_entry:
l23053A72:
	Sec_Eng_PKA_Write_Common_OP_First_Cfg(a3, a2, a1, a0, 38<i32>, a6)
	Mem38[0x40004340<32>:word32] = (a4 & 0xF<32>) << 8<i32> | a5
	branch a6 == 0<32> l23053ABA
l23053ABA:
	return
l23053AAA:
	Sec_Eng_PKA_Wait_ISR()
l23053AB6_thunk_Sec_Eng_PKA_Clear_Int:
	Sec_Eng_PKA_Clear_Int()
	return
Sec_Eng_PKA_MREM_exit:


void Sec_Eng_PKA_MEXP(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a6, word32 a7, byte bArg00, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a6:[0..31] a7:[0..31] Stack +0000:[0..7] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t1 t3
// Preserved: sp
Sec_Eng_PKA_MEXP_entry:
	byte bArg00 = SLICE(dwArg00, byte, 0)
l23053AC4:
	word32 s2_6 = CONVERT(bArg00, byte, word32)
	Sec_Eng_PKA_Write_Common_OP_First_Cfg(a3, a2, a1, a0, 35<i32>, s2_6)
	Mem50[0x40004340<32>:word32] = dwArg08 << 12<i32> | (a4 & 0xF<32>) << 20<i32> | a7 | (a6 & 15<i32>) << 8<i32>
	branch s2_6 == 0<32> l23053B28
l23053B28:
	return
l23053B16:
	Sec_Eng_PKA_Wait_ISR()
l23053B24_thunk_Sec_Eng_PKA_Clear_Int:
	Sec_Eng_PKA_Clear_Int()
	return
Sec_Eng_PKA_MEXP_exit:


void Sec_Eng_PKA_LCMP(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
Sec_Eng_PKA_LCMP_entry:
l23053B34:
	Mem23[0x40004340<32>:word32] = (a1 & 0xF<32>) << 8<i32> | a2 | 0x99000000<32>
	Mem25[0x40004340<32>:word32] = a4 << 12<i32> | (a3 & 0xF<32>) << 20<i32>
	Sec_Eng_PKA_Wait_ISR()
	Sec_Eng_PKA_Clear_Int()
	Mem39[a0:byte] = SLICE(Mem25[0x40004300<32>:int32] >>u 24<i32> & 1<32>, byte, 0)
	return
Sec_Eng_PKA_LCMP_exit:


word32 Sec_Eng_PKA_LSUB(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31]
// LiveOut: s0
// Trashed: a0 a1 a2 a3 a4 a5 a7 s0 s1 s4 s8 t1 t3
// Preserved: sp
Sec_Eng_PKA_LSUB_entry:
l23053B7C:
	Sec_Eng_PKA_Write_Common_OP_First_Cfg(a3, a2, a1, a0, 0x17<32>, a6)
	Mem39[0x40004340<32>:word32] = a5 << 12<i32> | (a4 & 0xF<32>) << 20<i32>
	branch a6 == 0<32> l23053BC4
l23053BC4:
	return
l23053BB4:
	Sec_Eng_PKA_Wait_ISR()
l23053BC0_thunk_Sec_Eng_PKA_Clear_Int:
	Sec_Eng_PKA_Clear_Int()
	return
Sec_Eng_PKA_LSUB_exit:


void Sec_Eng_PKA_LMUL(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
//      _pka_test_case2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 s0 s1 s4 s8 t1 t3
// Preserved: sp
Sec_Eng_PKA_LMUL_entry:
l23053BCE:
	Sec_Eng_PKA_Write_Common_OP_First_Cfg(a3, a2, a1, a0, 0x16<32>, a6)
	Mem39[0x40004340<32>:word32] = a5 << 12<i32> | (a4 & 0xF<32>) << 20<i32>
	branch a6 == 0<32> l23053C16
l23053C16:
	return
l23053C06:
	Sec_Eng_PKA_Wait_ISR()
l23053C12_thunk_Sec_Eng_PKA_Clear_Int:
	Sec_Eng_PKA_Clear_Int()
	return
Sec_Eng_PKA_LMUL_exit:


void Sec_Eng_PKA_LDIV(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 s0 s1 s4 s8 t1 t3
// Preserved: sp
Sec_Eng_PKA_LDIV_entry:
l23053C20:
	Sec_Eng_PKA_Write_Common_OP_First_Cfg(a3, a2, a1, a0, 0x14<32>, a6)
	Mem38[0x40004340<32>:word32] = (a4 & 0xF<32>) << 8<i32> | a5
	branch a6 == 0<32> l23053C66
l23053C66:
	return
l23053C56:
	Sec_Eng_PKA_Wait_ISR()
l23053C62_thunk_Sec_Eng_PKA_Clear_Int:
	Sec_Eng_PKA_Clear_Int()
	return
Sec_Eng_PKA_LDIV_exit:


void Sec_Eng_PKA_LMUL2N(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
//      _pka_test_case2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..14] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 tp
// Preserved: s0 sp
Sec_Eng_PKA_LMUL2N_entry:
l23053C70:
	Sec_Eng_PKA_Write_Common_OP_First_Cfg(a3, a2, a1, a0, 0x13<32>, 0<32>)
	Mem35[0x40004340<32>:word32] = CONVERT(SLICE(a4, word15, 0), word15, word32)
	branch a5 == 0<32> l23053CAE
l23053CAE:
	return
l23053C9E:
	Sec_Eng_PKA_Wait_ISR()
l23053CAA_thunk_Sec_Eng_PKA_Clear_Int:
	Sec_Eng_PKA_Clear_Int()
	return
Sec_Eng_PKA_LMUL2N_exit:


void SEC_Eng_IntMask(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sec_pka_IRQHandler
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
SEC_Eng_IntMask_entry:
l23053CB8:
	branch a0 >u 6<32> l23053DAE
l23053DAE:
	return
l23053CBE:
	call 0x23088660<32> (retsize: 0;)
		uses: a0:Mem0[0x23088660<32>:word32],a5:0x23088660<32>
	return
SEC_Eng_IntMask_exit:


void DMA_Enable(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
DMA_Enable_entry:
l23053DDE:
	Mem7[(a5 | 1<i32>) + 48<i32>:word32] = Mem0[a5 + 48<i32>:word32]
	return
DMA_Enable_exit:


word32 DMA_Channel_Enable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_IRQHandler
//      bl_dma_copy
// MayUse: 
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
DMA_Channel_Enable_entry:
l23053DEC:
	Mem10[0x4000C111<32>:word32] = Mem0[0x4000C110<32>:word32]
	return 0x4000C111<32>
DMA_Channel_Enable_exit:


void DMA_LLI_Init(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
// MayUse:  a1:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
DMA_LLI_Init_entry:
l23053E02:
	Mem23[(CONVERT(Mem0[a1:byte], byte, word32) << 11<i32> | 0x40000110<32>) & -2047<i32> | CONVERT(Mem0[a1 + 2<i32>:byte], byte, word32) << 6<i32> | CONVERT(Mem0[a1 + 1<i32>:byte], byte, word32) << 1<i32>:word32] = Mem0[0x4000C110<32>:word32]
	return
DMA_LLI_Init_exit:


void DMA_LLI_Update(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_IRQHandler
//      bl_dma_copy
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 t1
// Preserved: sp
DMA_LLI_Update_entry:
l23053E38:
	call 0x4200C524<p32> (retsize: 0;)
		uses: a0:(a0 << 8<i32>) + 0x4000C100<32>,a2:4<32>,a5:0x4000C100<32>,t1:0x4200BE46<p32>
	return
DMA_LLI_Update_exit:


void DMA_IntMask(word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
DMA_IntMask_entry:
l23053E4E:
	word32 a5_15
	word32 a0_10
	word32 a4_12
	word32 a5_20
	branch a1 == 1<32> l23053E84
l23053E84:
	a5_20 = 0x4000C110<32>
	a0_10 = Mem0[0x4000C110<32>:word32]
	branch a2 != 0<32> l23053E9C
l23053E9C:
	a4_12 = 0x4000000<32>
l23053E92:
	a5_15 = 0x4000C110<32>
l23053E56:
	word32 a3_21
	word32 a3_22
	branch a1 == 0<32> l23053E60
l23053E60:
	a5_20 = Mem0[0x4000C10C<32>:word32]
	a3_21 = 0xF8000000<32>
	branch a2 == 0<32> l23053EB8
l23053E76:
	a3_22 = 0x8000000<32>
l23053E58:
	branch a1 == 2<32> l23053EA2
l23053EA2:
	a5_20 = Mem0[0x4000C10C<32>:word32]
	branch a2 != 0<32> l23053EC6
l23053EC6:
	a3_22 = 0xC000000<32>
l23053E78:
	Mem34[a3_22 | 0x4000C10C<32>:word32] = a5_20
	a0_10 = Mem34[a5_20:word32]
	a5_15 = CONVERT(SLICE(a5_20, word31, 0), word31, word32)
l23053EB6:
	a3_21 = 0xF4000000<32>
l23053EB8:
	Mem44[a3_21 + 0xFFFFFFFF<32> & 0x4000C10C<32>:word32] = a5_20
	a0_10 = Mem44[a5_20:word32]
	a4_12 = 0x80000000<32>
l23053E9E:
	a5_15 = a5_20 | a4_12
l23053E98:
	Mem53[a5_15:word32] = a0_10
	return
l23053E5E:
	return
DMA_IntMask_exit:


void Default_Handler(word32 ra, word32 dwArg18, word32 dwArg38, word32 dwArg64, word32 dwArg80, word32 dwArg84, word32 dwArgA8, word32 dwArgCC, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      SPI_IRQHandler
// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0064:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00CC:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
Default_Handler_entry:
l23053ECA:
l23053ED2_thunk_bflb_platform_printf:
	bflb_platform_printf(ra, 0x23088690<32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, dwArgE8)
	return
Default_Handler_exit:


word32 GLB_Set_UART_CLK(word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a2 s1
// Trashed: a0 a2 a4 a5 s1 tp
// Preserved: s0 sp
GLB_Set_UART_CLK_entry:
l23053ED6:
	Mem17[(a5 & 0xFFFFFFEF<32>) + 8<i32>:word32] = Mem9[a5 + 8<i32>:word32]
	word32 a5_19 = a5 & 0xFFFFFFEF<32> & 0xFFFFFFF8<32>
	Mem22[(a2 | a5_19) + 8<i32>:word32] = Mem17[(a5 & 0xFFFFFFEF<32>) + 8<i32>:word32]
	word32 a4_24 = HBN_Set_UART_CLK_Sel(a1, a5_19)
	word32 a5_27 = a4_24 | 16<i32>
	branch a0 != 0<32> l23053F02
l23053EFE:
	a5_27 = a4_24 & -17<i32>
l23053F02:
	Mem31[a5_27 + 8<i32>:word32] = 0x40000000<32>
	a2Out = dwArg10
	return a0
GLB_Set_UART_CLK_exit:


void GLB_Set_ADC_CLK(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
GLB_Set_ADC_CLK_entry:
l23053F14:
	Mem9[0x400000A4<32>:word32] = Mem0[0x400000A4<32>:int32] & -257<i32>
	Mem16[0x400000A4<32>:word32] = (a2 | Mem9[0x400000A4<32>:int32] & -64<i32>) & -129<i32> | a1 << 7<i32>
	word32 a4_17 = Mem16[0x400000A4<32>:int32]
	word32 a5_18 = a4_17 & -257<i32>
	branch a0 == 0<32> l23053F48
l23053F44:
	a5_18 = a4_17 | 256<i32>
l23053F48:
	Mem23[0x400000A4<32>:word32] = a5_18
	return
GLB_Set_ADC_CLK_exit:


word32 GLB_UART_Fun_Sel(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
GLB_UART_Fun_Sel_entry:
l23053F54:
	Mem15[0x400000C0<32>:word32] = ~(0xF<32> << (a0 << 2<i32>)) & Mem0[0x400000C0<32>:int32] | a1 << (a0 << 2<i32>)
	return 0x40000000<32>
GLB_UART_Fun_Sel_exit:


void GLB_GPIO_Write(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_gpio_output_set
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
GLB_GPIO_Write_entry:
l23053F78:
	word32 a0_15
	word32 a5_11 = Mem0[a3:word32]
	word32 a0_12 = 1<32> << a0
	branch a1 == 0<32> l23053F9A
l23053F9A:
	a0_15 = ~a0_12 & a3
l23053F92:
	a0_15 = a0_12 | a3
l23053F94:
	Mem19[a0_15:word32] = a5_11
	return
GLB_GPIO_Write_exit:


word32 GLB_GPIO_Read(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_gpio_input_get
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
GLB_GPIO_Read_entry:
l23053FA2:
	return CONVERT((1<32> << a0 & Mem0[((a0 >>u 5<u32>) << 2<u32>) + 0x40000180<32>:int32]) != 0<32>, bool, word32)
GLB_GPIO_Read_exit:


word32 HBN_Set_UART_CLK_Sel(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GLB_Set_UART_CLK
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a4
// Trashed: a0 a4 a5
// Preserved: sp
HBN_Set_UART_CLK_Sel_entry:
l23053FC2:
	word32 a4_5 = Mem0[a5 + 48<i32>:word32]
	Mem10[(a0 << 2<i32> | a5 & 0xFFFFFFFB<32>) + 48<i32>:word32] = a4_5
	return a4_5
HBN_Set_UART_CLK_Sel_exit:


word32 HBN_Get_RTC_Timer_Val(word32 a0, word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rtc_get_counter
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
HBN_Get_RTC_Timer_Val_entry:
l23053FD4:
	word32 a5_5 = Mem0[a4 + 16<i32>:word32]
	Mem9[(a4 | 0x80000000<32>) + 16<i32>:word32] = a5_5
	Mem11[(a4 & 0x7FFFFFFF<32>) + 16<i32>:word32] = a5_5
	word32 a5_12 = Mem11[(a4 & 0x7FFFFFFF<32>) + 12<i32>:word32]
	Mem14[a4 & 0x7FFFFFFF<32>:word32] = a0
	Mem19[Mem14[a5_12 + 16<i32>:word32] & 255<i32>:word32] = a1
	return 0<32>
HBN_Get_RTC_Timer_Val_exit:


void TIMER_SetCompValue(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TIMER_Init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
TIMER_SetCompValue_entry:
l23053FFC:
	Mem13[a2:word32] = (a0 + 3<32> + a1 << 2<i32>) + 0x4000A510<32>
	return
TIMER_SetCompValue_exit:


void TIMER_SetCountMode(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TIMER_Init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
TIMER_SetCountMode_entry:
l23054014:
	Mem15[0x4000A588<32>:word32] = ~(1<32> << a0 + 1<32>) & Mem0[0x4000A588<32>:int32] | a1 << a0 + 1<32>
	return
TIMER_SetCountMode_exit:


void TIMER_ClearIntStatus(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      int_timer_cb
//      cmd_timer_start
// MayUse:  a1:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
TIMER_ClearIntStatus_entry:
l23054036:
	Mem14[1<32> << a1 | a4:word32] = Mem0[a4:word32]
	return
TIMER_ClearIntStatus_exit:


void TIMER_Init(word32 a0, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_timer_start
// MayUse:  a0:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
TIMER_Init_entry:
l23054050:
	word32 a3_18
	word32 a5_19
	word32 s1_14 = CONVERT(Mem11[a0:byte], byte, word32)
	word32 a5_15 = Mem11[0x4000A500<32>:int32]
	word32 a4_17 = CONVERT(Mem11[a0 + 1<i32>:byte], byte, word32)
	branch s1_14 != 0<32> l230540F8
l230540F8:
	a3_18 = a5_15 & -97<i32>
	a5_19 = a4_17 << 5<u32>
l2305406E:
	a3_18 = a5_15 & -13<i32>
	a5_19 = a4_17 << 2<u32>
l23054076:
	word32 a3_33
	word32 a5_34
	Mem26[0x4000A500<32>:word32] = a5_19 | a3_18
	word32 a5_27 = Mem26[0x4000A5BC<32>:int32]
	word32 a4_29 = CONVERT(Mem26[a0 + 4<i32>:byte], byte, word32)
	branch s1_14 != 0<32> l23054102
l23054102:
	a3_33 = a5_27 & 0xFF00FFFF<32>
	a5_34 = a4_29 << 0x10<u32>
l2305408A:
	a3_33 = a5_27 & 0xF00000FF<32>
	a5_34 = a4_29 << 8<u32>
l23054096:
	Mem43[0x4000A5BC<32>:word32] = a5_34 | a3_33
	TIMER_SetCountMode(s1_14, CONVERT(Mem43[a0 + 3<i32>:byte], byte, word32))
	Mem56[CONVERT(Mem43[a0 + 2<i32>:byte], byte, word32):word32] = (s1_14 << 2<u32>) + 0x4000A55C<32>
	word32 a4_57 = CONVERT(Mem56[a0 + 3<i32>:byte], byte, word32)
	branch a4_57 != 0<32> l230540CC
l230540C0:
	Mem61[(s1_14 << 2<u32>) + 0x4000A550<32>:word32] = a4_57
l230540CC:
	TIMER_SetCompValue(s1_14, 0<32>, a2)
	TIMER_SetCompValue(s1_14, 1<32>, a2)
	TIMER_SetCompValue(s1_14, 2<32>, a2)
	0<32> = dwArg38
	return
TIMER_Init_exit:


void TIMER_Enable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_timer_start
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
TIMER_Enable_entry:
l23054110:
	Mem11[0x4000A584<32>:word32] = 1<32> << a0 + 1<32> | Mem0[0x4000A584<32>:int32]
	return
TIMER_Enable_exit:


void TIMER_Disable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_timer_start
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
TIMER_Disable_entry:
l23054128:
	Mem12[0x4000A584<32>:word32] = ~(1<32> << a0 + 1<32>) & Mem0[0x4000A584<32>:int32]
	return
TIMER_Disable_exit:


void TIMER_IntMask(word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_timer_start
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
TIMER_IntMask_entry:
l23054144:
	word32 a5_12
	word32 a0_8 = Mem0[0x4000A544<32>:word32]
	branch a1 == 1<32> l23054176
l23054176:
	branch a2 != 0<32> l2305417E
l2305417E:
	a5_12 = 0x4000A544<32>
l23054178:
	a5_12 = 0x4000A546<32>
l23054158:
	branch a1 == 0<32> l23054168
l23054168:
	branch a2 != 0<32> l23054172
l23054172:
	a5_12 = 0x4000A544<32>
l2305416A:
	a5_12 = 0x4000A545<32>
l2305415A:
	branch a1 == 2<32> l23054182
l23054182:
	branch a2 != 0<32> l230541A6
l23054160:
	branch a1 == 3<32> l2305418A
l2305418A:
	branch a2 != 0<32> l2305419A
l2305419A:
	Mem19[0x4000A544<32>:word32] = a0_8
	Mem21[0x4000A544<32>:word32] = a0_8
l230541A6:
	a5_12 = 0x4000A540<32>
l2305418C:
	Mem25[0x4000A545<32>:word32] = a0_8
	Mem27[0x4000A546<32>:word32] = a0_8
l23054184:
	a5_12 = 0x4000A544<32>
l2305416E:
	Mem34[a5_12:word32] = a0_8
	return
l23054166:
	return
TIMER_IntMask_exit:


void WDT_Set_Clock(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a4 a5
// Preserved: sp
WDT_Set_Clock_entry:
l230541AA:
	Mem12[0x4000A500<32>:word32] = a0 << 8<i32> | Mem0[0x4000A500<32>:int32] & -769<i32>
	Mem17[0x4000A5BC<32>:word32] = CONVERT(Mem12[0x4000A5BC<32>:word24], word24, word32) | a1 << 24<i32>
	return
WDT_Set_Clock_exit:


void WDT_SetCompValue(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
WDT_SetCompValue_entry:
l230541D0:
	Mem11[0x4000A59C<32>:word32] = Mem0[0x4000A59C<32>:int32] & 0xF0000000<32> | 0xBFFFABA<32>
	Mem17[0x4000A5A0<32>:word32] = Mem11[0x4000A5A0<32>:int32] & 0xF0000000<32> | 0xEFFFB10<32>
	Mem19[0x4000A568<32>:word32] = a0
	return
WDT_SetCompValue_exit:


void WDT_ResetCounterValue()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_feed
//      bl_wdt_init
// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
WDT_ResetCounterValue_entry:
l23054200:
	Mem11[0x4000A59C<32>:word32] = Mem0[0x4000A59C<32>:int32] & 0xF0000000<32> | 0xBFFFABA<32>
	Mem17[0x4000A5A0<32>:word32] = Mem11[0x4000A5A0<32>:int32] & 0xF0000000<32> | 0xEFFFB10<32>
	Mem20[0x4000A598<32>:word32] = Mem17[0x4000A598<32>:int32] | 1<i32>
	return
WDT_ResetCounterValue_exit:


void WDT_Enable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_init
// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
WDT_Enable_entry:
l23054238:
	Mem11[0x4000A59C<32>:word32] = Mem0[0x4000A59C<32>:int32] & 0xF0000000<32> | 0xBFFFABA<32>
	Mem17[0x4000A5A0<32>:word32] = Mem11[0x4000A5A0<32>:int32] & 0xF0000000<32> | 0xEFFFB10<32>
	Mem20[0x4000A564<32>:word32] = Mem17[0x4000A564<32>:int32] | 1<i32>
	return
WDT_Enable_exit:


void WDT_Disable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_disable
//      bl_wdt_init
// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
WDT_Disable_entry:
l23054270:
	Mem11[0x4000A59C<32>:word32] = Mem0[0x4000A59C<32>:int32] & 0xF0000000<32> | 0xBFFFABA<32>
	Mem17[0x4000A5A0<32>:word32] = Mem11[0x4000A5A0<32>:int32] & 0xF0000000<32> | 0xEFFFB10<32>
	Mem20[0x4000A564<32>:word32] = Mem17[0x4000A564<32>:int32] & 0xFFFFFFFE<32>
	return
WDT_Disable_exit:


void WDT_IntMask(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5 a6
// Preserved: sp
WDT_IntMask_entry:
l230542A6:
	Mem11[0x4000A59C<32>:word32] = Mem0[0x4000A59C<32>:int32] & 0xF0000000<32> | 0xBFFFABA<32>
	Mem17[0x4000A5A0<32>:word32] = Mem11[0x4000A5A0<32>:int32] & 0xF0000000<32> | 0xEFFFB10<32>
	word32 a4_18 = Mem17[0x4000A564<32>:int32]
	branch a0 != 0<32> l230542E2
l230542DA:
	word32 a4_21
	branch a1 != 0<32> l230542E4
l230542E4:
	a4_21 = a4_18 | 2<i32>
l230542DC:
	a4_21 = a4_18 & 0xFFFFFFFD<32>
l230542DE:
	Mem25[0x4000A564<32>:word32] = a4_21
l230542E2:
	return
WDT_IntMask_exit:


word32 EF_Ctrl_Get_Byte_Zero_Cnt(word32 a0, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      EF_Ctrl_Read_MAC_Address
//      EF_Ctrl_Read_MAC_Address_Opt
// MayUse:  a0:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
EF_Ctrl_Get_Byte_Zero_Cnt_entry:
l230542EA:
	word32 a5_13 = 0<32>
	word32 a4_10 = 0<32>
l230542F0:
	word32 a3_8 = a0 >> a5_13
	branch (a3_8 & 1<32>) != 0<32> l230542FA
l230542F8:
	a4_10 = a4_10 + 1<32>
l230542FA:
	a5_13 = a5_13 + 1<32>
	branch a5_13 != 8<32> l230542F0
l23054300:
	a3Out = a3_8 & 1<32>
	return a4_10
EF_Ctrl_Get_Byte_Zero_Cnt_exit:


word32 EF_Ctrl_Read_MAC_Address(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_efuse_read_mac
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
EF_Ctrl_Read_MAC_Address_entry:
l23054304:
	word32 s0_20
	word32 s1_21
	word32 ra_26
	word32 a5_28
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0,ra:0x4200C314<p32>,s0:a0,s1:s1,s2:s2,s3:s3,s4:s4,Stack +0004:s4,Stack +0008:s2,Stack +000C:s0,Stack +0084:s3,Stack +0088:s1,Stack +008C:ra
		defs: a5:a5_28,ra:ra_26,s0:s0_20,s1:s1_21
	Mem38[s0_20:byte] = SLICE(a5_28, byte, 0)
	Mem39[s0_20 + 1<i32>:byte] = SLICE(a5_28 >>u 8<u32>, byte, 0)
	Mem42[s0_20 + 3<i32>:byte] = SLICE(a5_28 >>u 24<i32>, byte, 0)
	Mem43[s0_20 + 2<i32>:byte] = SLICE(a5_28 >>u 0x10<u32>, byte, 0)
	Mem47[s0_20 + 4<i32>:byte] = SLICE(s1_21, byte, 0)
	Mem48[s0_20 + 5<i32>:byte] = SLICE(s1_21 >>u 8<u32>, byte, 0)
	word32 s3_35 = 0<32>
	word32 s2_36 = 0<32>
l23054350:
	s2_36 = s2_36 + 1<32>
	word32 a3_139
	s3_35 = s3_35 + EF_Ctrl_Get_Byte_Zero_Cnt(CONVERT(Mem48[s0_20 + s2_36:byte], byte, word32), out a3_139)
	branch s2_36 != 6<32> l23054350
l23054364:
	word32 s1_65 = s1_21 >>u 16<i32> ^ s3_35
	branch (s1_65 & 63<i32>) != 0<32> l23054394
l23054372:
	word32 a5_68 = s0_20 + 5<i32>
	s0_73 = s0_20
l2305437A:
	word32 s0_73
	word32 a3_74 = CONVERT(Mem71[s0_73:byte], byte, word32)
	Mem76[s0_73:byte] = SLICE(CONVERT(Mem71[a5_68:byte], byte, word32), byte, 0)
	a5_68 = a5_68 + 0xFFFFFFFF<32>
	Mem77[a5_68 + 1<i32>:byte] = SLICE(a3_74, byte, 0)
	s0_73 = s0_73 + 1<32>
	branch a5_68 != s0_20 + 2<i32> l2305437A
l23054392:
l23054394:
	s0Out = s1
	s1Out = s1_65 & 63<i32>
	s2Out = s2_36
	s3Out = s3_35
	s4Out = dwArg04
	return ra_26
EF_Ctrl_Read_MAC_Address_exit:


word32 EF_Ctrl_Is_MAC_Address_Slot_Empty(word32 a0, word32 a1, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_macaddr
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 ra
// Trashed: a0 a1 a2 a4 a5 ra
// Preserved: s0 sp
EF_Ctrl_Is_MAC_Address_Slot_Empty_entry:
l230543A4:
	word32 a0_100
	word32 a4_20
	word32 a5_34
	branch a0 != 0<32> l230543DC
l230543DC:
	branch a0 != 1<32> l230543FE
l230543FE:
	branch a0 != 2<32> l230543D2
l23054404:
	word32 s0_15
	word32 a1_17
	word32 a0_18
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a4:a4_20,ra:0x4200C404<p32>,s0:a1
		defs: a0:a0_18,a1:a1_17,a4:a4_20,ra:ra_16,s0:s0_15
	branch s0_15 == 0<32> l23054416
l2305440E:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_18,a1:a1_17,a4:a4_29,ra:0x4200C40E<p32>,s0:s0_15
		defs: a4:a4_29,ra:ra_25
l23054416:
	a5_34 = Mem7[Mem7[a4_20 + 4<i32>:word32] + 8<i32>:word32]
l230543E2:
	word32 s0_37
	word32 a1_39
	word32 a0_40
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a4:a4_42,ra:0x4200C3E2<p32>,s0:a1
		defs: a0:a0_40,a1:a1_39,a4:a4_42,ra:ra_38,s0:s0_37
	branch s0_37 == 0<32> l230543F4
l230543EC:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_40,a1:a1_39,a4:a4_51,ra:0x4200C3EC<p32>,s0:s0_37
		defs: a4:a4_51,ra:ra_47
l230543F4:
	a5_34 = Mem7[Mem7[a4_20 + 108<i32>:word32] + 112<i32>:word32]
l230543AE:
	word32 s0_59
	word32 a1_61
	word32 a0_62
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a4:a4_64,ra:0x4200C3AE<p32>,s0:a1
		defs: a0:a0_62,a1:a1_61,a4:a4_64,ra:ra_60,s0:s0_59
	branch s0_59 == 0<32> l230543C0
l230543B8:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_62,a1:a1_61,a4:a4_73,ra:0x4200C3B8<p32>,s0:s0_59
		defs: a4:a4_73,ra:ra_69
l230543C0:
	a5_34 = Mem7[Mem7[a4_20 + 20<i32>:word32] + 24<i32>:word32]
l230543C8:
	a0_100 = 1<32>
	branch (CONVERT(SLICE(a5_34, word22, 0), word22, word32) | a4_20) == 0<32> l230543D4
l230543D2:
	a0_100 = 0<32>
l230543D4:
	a0Out = a0_100
	return ra
EF_Ctrl_Is_MAC_Address_Slot_Empty_exit:


word32 EF_Ctrl_Read_MAC_Address_Opt(word32 a0, word32 a1, word32 a2, word32 s2, word32 s3, word32 s4, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_macaddr
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] s2:[0..31] s3:[0..31] s4:[0..31]
// LiveOut: a0 a3 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a1 ra sp
EF_Ctrl_Read_MAC_Address_Opt_entry:
l23054420:
	branch a0 >u 2<32> l2305450A
l2305450A:
	a0Out = 1<32>
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s1
l23054426:
	word32 a5_44
	word32 s0_116 = a1
	word32 s1_21 = a0
	branch a2 == 0<32> l23054456
l2305443A:
	branch a0 != 2<32> l2305444E
l2305444E:
	word32 a4_35
	word32 a3_36
	word32 t3_37
	word32 s8_38
	word32 a6_39
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2,a3:a3_36,a4:a4_35,a6:a6_39,ra:0x4200C44E<p32>,s0:a1,s1:a0,s2:s2,s3:s3,s4:s4,s8:s8_38,t3:t3_37
		defs: a3:a3_36,a4:a4_35,a6:a6_39,s0:s0_27,s1:s1_28,s8:s8_38,t3:t3_37
l23054456:
	branch s1_21 != 0<32> l230544E6
l230544E6:
	branch s1_21 != 1<32> l23054446
l230544EC:
	a5_44 = Mem18[0x4000706C<32>:word32]
l23054458:
	a5_44 = Mem18[0x40007014<32>:word32]
l2305443E:
	word32 a4_59
	word32 a3_60
	word32 t3_61
	word32 s8_62
	word32 a6_63
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2,a3:a3_60,a4:a4_59,a6:a6_63,ra:0x4200C43E<p32>,s0:a1,s1:a0,s2:s2,s3:s3,s4:s4,s8:s8_62,t3:t3_61
		defs: a3:a3_60,a4:a4_59,a6:a6_63,s0:s0_51,s1:s1_52,s8:s8_62,t3:t3_61
l23054446:
	a5_44 = Mem18[0x40007004<32>:word32]
l2305445E:
	Mem72[s0_116:byte] = SLICE(a5_44, byte, 0)
	Mem73[s0_116 + 1<i32>:byte] = SLICE(a5_44 >>u 8<u32>, byte, 0)
	Mem76[s0_116 + 2<i32>:byte] = SLICE(a5_44 >>u 0x10<u32>, byte, 0)
	Mem77[s0_116 + 3<i32>:byte] = SLICE(a5_44 >>u 24<i32>, byte, 0)
	branch s1_21 != 0<32> l230544F4
l230544F4:
	branch s1_21 != 1<32> l23054502
l23054502:
l230544FA:
l2305447A:
l23054480:
	Mem87[s0_116 + 4<i32>:byte] = SLICE(s1_21, byte, 0)
	Mem88[s0_116 + 5<i32>:byte] = SLICE(s1_21 >>u 8<u32>, byte, 0)
	word32 s3_103 = 0<32>
	word32 s2_90 = 0<32>
l23054492:
	s2_90 = s2_90 + 1<32>
	word32 a3_100
	s3_103 = s3_103 + EF_Ctrl_Get_Byte_Zero_Cnt(CONVERT(Mem88[s0_116 + s2_90:byte], byte, word32), out a3_100)
	branch s2_90 != 6<32> l23054492
l230544A6:
	word32 s1_108 = s1_21 >>u 16<i32> ^ s3_103
	word32 a0_110 = 1<32>
	branch (s1_108 & 63<i32>) != 0<32> l230544D6
l230544B4:
	word32 a5_111 = s0_116 + 5<i32>
	word32 a4_112 = s0_116 + 2<i32>
l230544BC:
	a3_100 = CONVERT(Mem114[s0_116:byte], byte, word32)
	Mem119[s0_116:byte] = SLICE(CONVERT(Mem114[a5_111:byte], byte, word32), byte, 0)
	a5_111 = a5_111 + 0xFFFFFFFF<32>
	Mem120[a5_111 + 1<i32>:byte] = SLICE(a3_100, byte, 0)
	s0_116 = s0_116 + 1<32>
	branch a4_112 != a5_111 l230544BC
l230544D4:
	a0_110 = 0<32>
l230544D6:
	a0Out = a0_110
	a3Out = a3_100
	s2Out = s2_90
	s3Out = s3_103
	s4Out = dwArg04
	return s1_108 & 63<i32>
EF_Ctrl_Read_MAC_Address_Opt_exit:


word32 EF_Ctrl_Is_CapCode_Slot_Empty(word32 ra, word32 s0, word32 a0, word32 a1, ptr32 & s0Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_xtal_capcode
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 ra s0
// Trashed: a0 a1 a2 a4 a5 ra s0 s8 t3
// Preserved: sp
EF_Ctrl_Is_CapCode_Slot_Empty_entry:
l2305450E:
	word32 a1_15
	word32 a0_17
	word32 s0_14
	word32 ra_16
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,ra:0x4200C518<p32>,s0:a0,Stack +000C:s0,Stack +0084:a1,Stack +008C:ra
		defs: a0:a0_17,a1:a1_15,ra:ra_16,s0:s0_14
	branch a1_15 == 0<32> l2305452C
l23054524:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_17,a1:a1_15,ra:0x4200C524<p32>,s0:s0_14
		defs: ra:ra_28,s0:s0_26
l2305452C:
	word32 a0_38
	word32 a5_45
	branch s0_14 != 0<32> l23054546
l23054546:
	word32 a5_41
	branch s0_14 != 1<32> l23054556
l23054556:
	a0_38 = 0<32>
	branch s0_14 != 2<32> l2305453E
l2305455E:
	a5_41 = Mem9[0x40007008<32>:word32]
l2305454C:
	a5_41 = Mem9[0x40007070<32>:word32]
l23054552:
	a5_45 = a5_41 >>u 22<i32>
l2305452E:
	a5_45 = Mem9[0x4000700C<32>:word32] >>u 2<i32>
l23054536:
	a0_38 = CONVERT((a5_45 & 255<i32>) <u 1<i32>, bool, word32)
l2305453E:
	s0Out = s0_14
	a0Out = a0_38
	return ra_16
EF_Ctrl_Is_CapCode_Slot_Empty_exit:


word32 EF_Ctrl_Read_CapCode_Opt(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_xtal_capcode
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31]
// LiveOut: a0 s1 s2 s4
// Trashed: a0 a1 a2 a5 a6 ra s0 s1 s2 s4 s8 t3
// Preserved: sp
EF_Ctrl_Read_CapCode_Opt_entry:
l23054566:
	branch a0 <=u 2<32> l2305457E
l2305457E:
	word32 a2_24
	word32 a1_28
	word32 t3_29
	word32 s8_30
	word32 s4_31
	word32 a6_32
	word32 s0_25
	word32 sp_20
	word32 a0_22
	word32 s1_136
	word32 s2_139
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2,a6:a6_32,ra:0x4200C58E<p32>,s0:a0,s1:a1,s2:a2,s4:s4_31,s8:s8_30,Stack +0008:s2,Stack +000C:s0,Stack +0088:s1,Stack +008C:ra,t3:t3_29
		defs: a0:a0_22,a1:a1_28,a2:a2_24,a6:a6_32,s0:s0_25,s1:s1_26,s2:s2_23,s4:s4_31,s8:s8_30,sp:sp_20,t3:t3_29
	branch s2_139 == 0<32> l230545A2
l2305459A:
	word32 t3_43
	word32 s8_44
	word32 s4_45
	word32 a6_46
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_22,a1:a1_28,a2:a2_24,a6:a6_46,ra:0x4200C59A<p32>,s0:s0_25,s1:s1_26,s2:s2_23,s4:s4_45,s8:s8_44,t3:t3_43
		defs: a0:a0_36,a6:a6_46,s0:s0_39,s1:s1_40,s2:s2_37,s4:s4_45,s8:s8_44,sp:sp_34,t3:t3_43
l230545A2:
	word32 a5_55
	branch s0_25 != 0<32> l230545DA
l230545DA:
	word32 a5_51
	branch s0_25 != 1<32> l230545EA
l230545EA:
	a5_51 = Mem15[0x40007008<32>:word32]
l230545E0:
	a5_51 = Mem15[0x40007070<32>:word32]
l230545E6:
	a5_55 = a5_51 >>u 22<i32>
l230545A4:
	a5_55 = Mem15[0x4000700C<32>:word32] >>u 2<i32>
l230545AC:
	word32 a0_109
	Mem63[sp_20 + 132<i32>:word32] = a5_55
	word32 a2_64 = Mem63[sp_20 + 68<i32>:word32]
	branch (a0_22 & 128<i32>) == 0<32> l23054570
l230545B6:
	word32 s0_69 = a0_22 & 63<i32>
	word32 a0_80
	word32 s0_83
	word32 t3_87
	word32 s8_88
	word32 s4_89
	word32 a6_90
	call 0x4200CDC2<p32> (retsize: 0;)
		uses: a0:s0_69,a1:6<32>,a2:a2_64,a6:a6_90,ra:0x4200C5C6<p32>,s0:s0_69,s1:s1_76,s2:a0_66 >>u 6<u32> & 1<i32>,s4:s4_89,s8:s8_88,t3:t3_87
		defs: a0:a0_80,a6:a6_90,s0:s0_83,s1:s1_84,s2:s2_81,s4:s4_89,s8:s8_88,t3:t3_87
	branch s2_139 != a0_80 l23054570
l23054570:
	a0_109 = 1<32>
l230545D2:
	Mem92[s1_136:byte] = SLICE(s0_83, byte, 0)
	a0_109 = 0<32>
l23054572:
	a0Out = a0_109
	s2Out = s2_139
	s4Out = dwArg04
	return s1_136
l2305456C:
	a0Out = 1<32>
	s2Out = s2
	s4Out = s4
	return s1
EF_Ctrl_Read_CapCode_Opt_exit:


word32 EF_Ctrl_Is_PowerOffset_Slot_Empty(word32 ra, word32 s0, word32 a0, word32 a1, ptr32 & s0Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_poweroffset
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 ra s0
// Trashed: a0 a1 a2 a4 a5 ra s0 s8 t3
// Preserved: sp
EF_Ctrl_Is_PowerOffset_Slot_Empty_entry:
l230545F2:
	word32 a1_15
	word32 a0_17
	word32 s0_14
	word32 ra_16
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,ra:0x4200C5FC<p32>,s0:a0,Stack +000C:s0,Stack +0084:a1,Stack +008C:ra
		defs: a0:a0_17,a1:a1_15,ra:ra_16,s0:s0_14
	branch a1_15 == 0<32> l23054610
l23054608:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_17,a1:a1_15,ra:0x4200C608<p32>,s0:s0_14
		defs: ra:ra_28,s0:s0_26
l23054610:
	word32 a0_38
	word32 a4_52
	word32 a5_43
	branch s0_14 != 0<32> l23054632
l23054632:
	word32 a4_44
	branch s0_14 != 1<32> l23054650
l23054650:
	a0_38 = 0<32>
	branch s0_14 != 2<32> l23054626
l23054658:
	a5_43 = CONVERT(true, bool, word32)
	a4_44 = Mem9[Mem9[0x76<32>:word32] + 12<i32>:word32] >>u 1<i32>
l23054638:
	a4_44 = Mem9[Mem9[0x75<32>:word32] + 12<i32>:word32]
	a5_43 = CONVERT(false, bool, word32)
l23054648:
	a4_52 = ~a4_44 & 1<32>
l23054612:
	a4_52 = 1<32>
	a5_43 = CONVERT(Mem9[0x40007078<32>:word32] >>u 15<i32> <u 1<i32>, bool, word32)
l23054620:
	a0_38 = 0<32>
	branch a5_43 == 0<32> l23054626
l23054624:
	a0_38 = a4_52
l23054626:
	s0Out = s0_14
	a0Out = a0_38 & 255<i32>
	return ra_16
EF_Ctrl_Is_PowerOffset_Slot_Empty_exit:


word32 EF_Ctrl_Read_PowerOffset_Opt(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 s3, word32 s4, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_poweroffset
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a4 a5 ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
EF_Ctrl_Read_PowerOffset_Opt_entry:
l2305466A:
	word32 sp_23
	word32 a0_31
	word32 a1_32
	word32 s0_24
	word32 ra_106
	word32 s1_107
	word32 s2_104
	word32 s3_108
	word32 s4_109
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2,ra:0x4200C67E<p32>,s0:a0,s1:s1,s2:a1,s3:s3,s4:s4,Stack +000C:s4,Stack +0010:s2,Stack +0014:s0,Stack +0084:a2,Stack +008C:s3,Stack +0090:s1,Stack +0094:ra
		defs: a0:a0_31,a1:a1_32,ra:ra_27,s0:s0_24,s1:s1_28,s2:s2_25,s3:s3_29,s4:s4_30,sp:sp_23
	word32 a2_38 = Mem17[sp_23 + 132<i32>:word32]
	branch a2_38 == 0<32> l23054692
l2305468A:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_31,a1:a1_32,a2:a2_38,ra:0x4200C68A<p32>,s0:s0_24,s1:s1_28,s2:s2_25,s3:s3_29,s4:s4_30
		defs: a2:a2_43,ra:ra_44,s0:s0_41,s1:s1_45,s2:s2_42,s3:s3_46,s4:s4_47
l23054692:
	word32 a0_117
	word32 s0_63
	word32 a5_72
	branch s0_24 != 0<32> l230546E8
l230546E8:
	word32 a5_64
	branch s0_24 != 1<32> l23054704
l23054704:
	branch s0_24 == 2<32> l2305471C
l2305471C:
	s1_107 = s0_24 << 1<u32> >>u 17<i32>
	s0_63 = s0_24 >>u 31<i32>
	a5_64 = Mem17[Mem17[s0_24 + 116<i32>:word32] + 12<i32>:word32] >>u 1<i32>
l230546EE:
	a5_64 = Mem17[Mem17[s0_24 + 116<i32>:word32] + 12<i32>:word32]
	s1_107 = CONVERT(SLICE(s0_24, word15, 0), word15, word32)
	s0_63 = s0_24 >>u 15<i32> & 1<32>
l23054700:
	a5_72 = a5_64 & 1<32>
l23054694:
	a5_72 = s0_24 >>u 0xF<u32> & 1<32>
	s1_107 = s0_24 << 1<u32> >>u 17<i32>
	s0_63 = s0_24 >>u 31<i32>
l230546A8:
	branch a5_72 == 0<32> l2305470A
l230546AA:
	word32 s0_103
	word32 a0_110
	call 0x4200CDC2<p32> (retsize: 0;)
		uses: a0:s1_81,a1:0xF<32>,a2:a2_91,ra:0x4200C6AE<p32>,s0:s0_85,s1:s1_81,s2:s2_88,s3:s3_94,s4:s4_97
		defs: a0:a0_110,ra:ra_106,s0:s0_103,s1:s1_107,s2:s2_104,s3:s3_108,s4:s4_109
	branch a0_110 != s0_103 l2305470A
l2305470A:
	a0_117 = 1<32>
l230546BA:
	word32 s0_118 = 0<32>
	s4_109 = 5<32>
	s3_108 = 3<32>
l230546C0:
	word32 a0_127 = __lshrdi3(s1_107, 0<32>, s0_118 + 5<32>)
	word32 a5_131 = a0_127 & 31<i32>
	word32 a4_134 = s2_104 + s0_118
	branch (a0_127 & 0x10<32>) == 0<32> l230546DA
l230546D8:
	a5_131 = (a0_127 & 31<i32>) + 0xFFFFFFE0<32>
l230546DA:
	Mem138[a4_134:byte] = SLICE(a5_131, byte, 0)
	s0_118 = s0_118 + 1<32>
	branch s0_118 != 3<32> l230546C0
l230546E4:
	a0_117 = 0<32>
l2305470C:
	0<32> = dwArg0128
	s1Out = s1_107
	a0Out = a0_117
	s2Out = s2_104
	s3Out = s3_108
	s4Out = s4_109
	return ra_106
EF_Ctrl_Read_PowerOffset_Opt_exit:


word32 mfg_media_read_xtal_capcode(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_efuse_read_capcode
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
mfg_media_read_xtal_capcode_entry:
l23054730:
	branch CONVERT(Mem0[0x4200E004<32>:byte], byte, word32) == 0<32> l2305473C
l2305473C:
l2305473C_thunk_mfg_efuse_read_xtal_capcode:
	word32 a0_15
	word32 a3_18
	word32 s0_24
	word32 s1_25
	word32 s10_26
	word32 s11_27
	word32 s2_28
	word32 s3_29
	word32 s4_30
	word32 s5_31
	word32 s6_32
	word32 s7_33
	word32 s8_34
	word32 ra_23 = mfg_efuse_read_xtal_capcode(ra, s0, s1, a0, a1, a3, s2, s3, s4, out s0_24, out s1_25, out a0_15, out a3_18, out s2_28, out s3_29, out s4_30, out s5_31, out s6_32, out s7_33, out s8_34, out s10_26, out s11_27)
	s0Out = s0_24
	s1Out = s1_25
	a0Out = a0_15
	a3Out = a3_18
	s2Out = s2_28
	s3Out = s3_29
	s4Out = s4_30
	s5Out = s5_31
	s6Out = s6_32
	s7Out = s7_33
	s8Out = s8_34
	s10Out = s10_26
	s11Out = s11_27
	mstatusOut = mstatus
	return ra_23
l2305473A:
l2305473A_thunk_mfg_flash_read_xtal_capcode:
	word32 a0_41
	word32 a3_44
	word32 mstatus_48
	word32 s1_50
	word32 s10_51
	word32 s11_52
	word32 s2_53
	word32 s3_54
	word32 s4_55
	word32 s5_56
	word32 s6_57
	word32 s7_58
	word32 s8_59
	word32 ra_49 = mfg_flash_read_xtal_capcode(ra, a0, a1, a3, a4, mstatus, dwArg08, dwArg38, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_50, out a0_41, out a3_44, out s2_53, out s3_54, out s4_55, out s5_56, out s6_57, out s7_58, out s8_59, out s10_51, out s11_52, out mstatus_48)
	s0Out = s0
	s1Out = s1_50
	a0Out = a0_41
	a3Out = a3_44
	s2Out = s2_53
	s3Out = s3_54
	s4Out = s4_55
	s5Out = s5_56
	s6Out = s6_57
	s7Out = s7_58
	s8Out = s8_59
	s10Out = s10_51
	s11Out = s11_52
	mstatusOut = mstatus_48
	return ra_49
mfg_media_read_xtal_capcode_exit:


word32 mfg_media_read_poweroffset(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_efuse_read_pwroft
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s2 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mfg_media_read_poweroffset_entry:
l2305473E:
	branch CONVERT(Mem0[0x4200E004<32>:byte], byte, word32) == 0<32> l2305474A
l2305474A:
l2305474A_thunk_mfg_efuse_read_poweroffset:
	word32 a0_14
	word32 a3_17
	word32 s0_23
	word32 s1_24
	word32 s2_27
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 s7_32
	word32 s8_33
	word32 s9_34
	word32 ra_22 = mfg_efuse_read_poweroffset(ra, s0, s1, a0, a1, s2, s3, s4, dwArg0128, out s0_23, out s1_24, out a0_14, out a3_17, out s2_27, out s4_29, out s5_30, out s6_31, out s7_32, out s8_33, out s9_34)
	s0Out = s0_23
	s1Out = s1_24
	a0Out = a0_14
	a3Out = a3_17
	s2Out = s2_27
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	s7Out = s7_32
	s8Out = s8_33
	s9Out = s9_34
	mstatusOut = mstatus
	return ra_22
l23054748:
l23054748_thunk_mfg_flash_read_poweroffset:
	word32 a0_43
	word32 a3_46
	word32 mstatus_50
	word32 s1_52
	word32 s2_55
	word32 s4_57
	word32 s5_58
	word32 s6_59
	word32 s7_60
	word32 s8_61
	word32 s9_62
	word32 ra_51 = mfg_flash_read_poweroffset(ra, a0, a1, a3, a4, mstatus, dwArg08, dwArg38, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_52, out a0_43, out a3_46, out s2_55, out s4_57, out s5_58, out s6_59, out s7_60, out s8_61, out s9_62, out mstatus_50)
	s0Out = s0
	s1Out = s1_52
	a0Out = a0_43
	a3Out = a3_46
	s2Out = s2_55
	s4Out = s4_57
	s5Out = s5_58
	s6Out = s6_59
	s7Out = s7_60
	s8Out = s8_61
	s9Out = s9_62
	mstatusOut = mstatus_50
	return ra_51
mfg_media_read_poweroffset_exit:


word32 mfg_media_read_macaddr(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArg9C, word32 dwArgAC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_efuse_read_mac_factory
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mfg_media_read_macaddr_entry:
l2305474C:
	branch CONVERT(Mem0[0x4200E004<32>:byte], byte, word32) == 0<32> l23054758
l23054758:
l23054758_thunk_mfg_efuse_read_macaddr:
	word32 a0_15
	word32 a3_18
	word32 s0_24
	word32 s1_25
	word32 s10_26
	word32 s11_27
	word32 s2_28
	word32 s3_29
	word32 s4_30
	word32 s5_31
	word32 s6_32
	word32 s7_33
	word32 ra_23 = mfg_efuse_read_macaddr(ra, s0, s1, a0, a1, a3, s2, s3, s4, out s0_24, out s1_25, out a0_15, out a3_18, out s2_28, out s3_29, out s4_30, out s5_31, out s6_32, out s7_33, out s10_26, out s11_27)
	s0Out = s0_24
	s1Out = s1_25
	a0Out = a0_15
	a3Out = a3_18
	s2Out = s2_28
	s3Out = s3_29
	s4Out = s4_30
	s5Out = s5_31
	s6Out = s6_32
	s7Out = s7_33
	s10Out = s10_26
	s11Out = s11_27
	mstatusOut = mstatus
	return ra_23
l23054756:
l23054756_thunk_mfg_flash_read_macaddr:
	word32 a0_41
	word32 s1_44
	word32 a3_47
	word32 mstatus_51
	word32 s10_53
	word32 s11_54
	word32 s2_55
	word32 s3_56
	word32 s4_57
	word32 s5_58
	word32 s6_59
	word32 s7_60
	word32 ra_52 = mfg_flash_read_macaddr(ra, a0, a1, a3, a4, mstatus, dwArg08, dwArg18, dwArg38, dwArg50, dwArg54, dwArg60, dwArg64, dwArg78, dwArg88, dwArg9C, dwArgAC, out s1_44, out a0_41, out a3_47, out s2_55, out s3_56, out s4_57, out s5_58, out s6_59, out s7_60, out s10_53, out s11_54, out mstatus_51)
	s0Out = s0
	s1Out = s1_44
	a0Out = a0_41
	a3Out = a3_47
	s2Out = s2_55
	s3Out = s3_56
	s4Out = s4_57
	s5Out = s5_58
	s6Out = s6_59
	s7Out = s7_60
	s10Out = s10_53
	s11Out = s11_54
	mstatusOut = mstatus_51
	return ra_52
mfg_media_read_macaddr_exit:


void bflb_platform_usart_dbg_send(word32 a0, word32 a1, word32 dwArg34, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Default_Handler
// MayUse:  a0:[0..31] a1:[0..31] Stack +0034:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bflb_platform_usart_dbg_send_entry:
l2305475A:
l23054760_thunk_UART_SendData:
	UART_SendData(0<32>, a0, a1, dwArg34, dwArg0128)
	return
bflb_platform_usart_dbg_send_exit:


void bflb_platform_printf(word32 ra, word32 a0, word32 dwArg18, word32 dwArg38, word32 dwArg64, word32 dwArg80, word32 dwArg84, word32 dwArgA8, word32 dwArgCC, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Default_Handler
// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0064:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00CC:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bflb_platform_printf_entry:
l23054764:
	branch CONVERT(Mem5[0x4200E005<32>:byte], byte, word32) != 0<32> l230547AA
l23054782:
	word32 s0_36
	word32 t0_139
	word32 s1_140
	word32 a0_141
	word32 a1_142
	word32 a2_143
	word32 a3_144
	word32 a4_145
	word32 a5_146
	word32 a7_147
	word32 s2_148
	word32 s3_149
	word32 s4_150
	word32 s5_151
	word32 s6_152
	word32 s7_153
	word32 s8_154
	word32 s9_155
	word32 s10_156
	word32 s11_157
	word32 t4_158
	vsnprintf(ra, 0x42016B80<32>, 127<i32>, a0, fp + -28<i32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out t0_139, out s0_36, out s1_140, out a0_141, out a1_142, out a2_143, out a3_144, out a4_145, out a5_146, out a7_147, out s2_148, out s3_149, out s4_150, out s5_151, out s6_152, out s7_153, out s8_154, out s9_155, out s10_156, out s11_157, out t4_158)
	word32 a1_159
	word32 a2_160
	word32 a3_161
	word32 a4_162
	word32 a5_163
	bflb_platform_usart_dbg_send(s0_36 + -1152<i32>, strlen(s0_36 + -1152<i32>, out a1_159, out a2_160, out a3_161, out a4_162, out a5_163), dwLoc0C, dwArgE8)
l230547AA:
	return
bflb_platform_printf_exit:


void SPI_IRQHandler(word32 ra, word32 t0, word32 a5, word32 t5, word32 dwArg3C, word32 dwArg50, word32 dwArg58)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] ra:[0..31] Stack +003C:[0..31] Stack +0050:[0..31] Stack +0058:[0..31] t0:[0..31] t5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp t1
SPI_IRQHandler_entry:
l230547B2:
	Default_Handler(ra, a5, t0, dwLoc2C, dwLoc10, dwLoc0C, t5, dwArg3C, dwArg58)
	0<32> = Mem57[dwArg50 + 872<i32>:word64]
	0<32> = Mem57[dwArg50 + 472<i32>:word64]
	__mret()
	return
SPI_IRQHandler_exit:


word32 mfg_efuse_read_xtal_capcode(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_xtal_capcode
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31]
// LiveOut: a0 a3 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
mfg_efuse_read_xtal_capcode_entry:
l2305484E:
	word32 a3_140
	word32 s4_169
	word32 s1_167
	word32 s0_172
	word32 s2_168
	word32 s3_148
	word32 s0_104
	word32 s0_23
	word32 s1_24
	word32 s2_25
	word32 a1_26
	word32 s4_28
	word32 a0_29
	word32 a3_280
	call 0x4200CDF4<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a3:a3,ra:0x4200C860<p32>,s0:s0,s1:a1,s2:s2,s3:s3,s4:a0,Stack +0004:s4,Stack +0008:s2,Stack +000C:s0,Stack +0084:s3,Stack +0088:s1,Stack +008C:ra
		defs: a0:a0_29,a1:a1_26,a3:a3_280,s0:s0_23,s1:s1_24,s2:s2_25,s4:s4_28
	word32 s0_40
	word32 s1_41
	word32 a1_43
	word32 s3_44
	word32 s4_45
	word32 a0_46
	word32 a3_290
	call 0x4200CDFE<p32> (retsize: 0;)
		uses: a0:a0_29,a1:a1_26,a3:a3_280,ra:0x4200C86A<p32>,s0:s0_23,s1:s1_24,s2:s2_25,s3:a0_29,s4:s4_28
		defs: a0:a0_46,a1:a1_43,a3:a3_290,s0:s0_40,s1:s1_41,s3:s3_44,s4:s4_45
	word32 sp_56
	word32 s1_59
	word32 ra_100
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:1<32>,a1:a1_43,a3:a3_290,ra:0x4200C876<p32>,s0:s0_40,s1:s1_41,s2:a0_46,s3:s3_44,s4:s4_45
		defs: ra:ra_57,s1:s1_59,sp:sp_56
	word32 s0_101 = 0x4200D974<32>
	branch CONVERT(Mem17[0x4200D974<32>:byte], byte, word32) >u 2<32> l230548BA
l230548BA:
	word32 a0_77
	ra_100 = EF_Ctrl_Is_CapCode_Slot_Empty(ra_100, 0x4200D974<32>, 2<32>, s1_59, out s0_101, out a0_77)
	branch a0_77 != 0<32> l23054890
l230548C4:
	s0_104 = 2<32>
l23054890:
	branch CONVERT(Mem17[s0_101:byte], byte, word32) <=u 1<32> l230548A4
l2305489A:
	word32 a0_95
	ra_100 = EF_Ctrl_Is_CapCode_Slot_Empty(ra_100, s0_101, 1<32>, s1_59, out s0_101, out a0_95)
	branch a0_95 == 0<32> l2305491C
l2305491C:
	s0_104 = 1<32>
l230548A4:
	branch CONVERT(Mem17[s0_101:byte], byte, word32) != 0<32> l230548C8
l230548C8:
	word32 a0_112
	word32 s0_372
	ra_100 = EF_Ctrl_Is_CapCode_Slot_Empty(ra_100, s0_101, 0<32>, s1_59, out s0_372, out a0_112)
	s0_104 = a0_112
	branch a0_112 != 0<32> l230548AA
l230548D4:
	word32 s1_144
	word32 s2_147
	word32 s4_149
	word32 a0_160
	word32 a0_373
	word32 a1_374
	word32 a2_375
	word32 a4_376
	word32 a5_377
	word32 a7_378
	word32 s5_379
	word32 s6_380
	word32 s7_381
	word32 s8_382
	word32 s9_383
	word32 s10_384
	word32 s11_385
	word32 t4_386
	s1_167 = EF_Ctrl_Read_CapCode_Opt(printf(ra_100, 0x230886A4<32>, a3, Mem17[sp_56 + 8<i32>:word32], Mem17[sp_56 + 40<i32>:word32], Mem17[sp_56 + 112<i32>:word32], Mem17[sp_56 + 116<i32>:word32], Mem17[sp_56 + 152<i32>:word32], Mem17[sp_56 + 188<i32>:word32], out s1_144, out a0_373, out a1_374, out a2_375, out a3_140, out a4_376, out a5_377, out a7_378, out s2_147, out s3_148, out s4_149, out s5_379, out s6_380, out s7_381, out s8_382, out s9_383, out s10_384, out s11_385, out t4_386), s0_104, s1_144, s0_104, s4_149, s1_144, s2_147, out a0_160, out s2_168, out s4_169)
	s0_172 = a0_160
l230548AA:
	word32 s11_370
	word32 t4_371
	word32 s6_365
	word32 s8_367
	word32 s9_368
	word32 s10_369
	word32 s7_366
	word32 a2_360
	word32 a5_362
	word32 a7_363
	word32 s5_364
	word32 a4_361
	word32 a0_358
	word32 a1_359
	printf(ra_100, 0x230886B4<32>, a3, Mem17[sp_56 + 8<i32>:word32], Mem17[sp_56 + 40<i32>:word32], Mem17[sp_56 + 112<i32>:word32], Mem17[sp_56 + 116<i32>:word32], Mem17[sp_56 + 152<i32>:word32], Mem17[sp_56 + 188<i32>:word32], out s1_167, out a0_358, out a1_359, out a2_360, out a3_140, out a4_361, out a5_362, out a7_363, out s2_168, out s3_148, out s4_169, out s5_364, out s6_365, out s7_366, out s8_367, out s9_368, out s10_369, out s11_370, out t4_371)
	s0_172 = 1<32>
l230548EE:
	word32 s0_214
	word32 s1_215
	word32 s2_216
	word32 a1_217
	word32 s3_218
	word32 s4_219
	word32 a3_227
	call 0x4200CDEA<p32> (retsize: 0;)
		uses: a0:s2_204,a1:s3_202,a3:a3_210,ra:0x4200C8F2<p32>,s0:s0_207,s1:s1_208,s2:s2_204,s3:s3_202,s4:s4_209
		defs: a1:a1_217,a3:a3_227,s0:s0_214,s1:s1_215,s2:s2_216,s3:s3_218,s4:s4_219
	word32 ra_240
	word32 s0_241
	word32 s1_242
	word32 s2_243
	word32 s3_245
	word32 a3_254
	word32 s10_256
	word32 s11_257
	word32 s5_258
	word32 s6_259
	word32 s7_260
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:2<32>,a1:a1_217,a3:a3_227,ra:0x4200C8FC<p32>,s0:s0_214,s1:s1_215,s2:s2_216,s3:s3_218,s4:s4_219
		defs: a3:a3_254,ra:ra_240,s0:s0_241,s1:s1_242,s10:s10_256,s11:s11_257,s2:s2_243,s3:s3_245,s5:s5_258,s6:s6_259,s7:s7_260
	s0Out = s1
	s1Out = s1_242
	a0Out = 0<32> - CONVERT(s0_241 != 0<32>, bool, word32)
	a3Out = a3_254
	s2Out = s2_243
	s3Out = s3_245
	s4Out = dwArg04
	s5Out = s5_258
	s6Out = s6_259
	s7Out = s7_260
	s8Out = s4
	s10Out = s10_256
	s11Out = s11_257
	return ra_240
mfg_efuse_read_xtal_capcode_exit:


word32 mfg_efuse_read_poweroffset(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_poweroffset
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 ra s0 s1 s2 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mfg_efuse_read_poweroffset_entry:
l23054920:
	word32 s4_181
	word32 s3_180
	word32 s0_187
	word32 s1_178
	word32 s2_179
	word32 s0_116
	word32 s0_23
	word32 s1_24
	word32 s3_26
	word32 s4_27
	word32 a0_28
	word32 a1_29
	call 0x4200CDF4<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,ra:0x4200C932<p32>,s0:s0,s1:s1,s2:s2,s3:a0,s4:a1,Stack +000C:s4,Stack +0010:s2,Stack +0014:s0,Stack +008C:s3,Stack +0090:s1,Stack +0094:ra
		defs: a0:a0_28,a1:a1_29,s0:s0_23,s1:s1_24,s3:s3_26,s4:s4_27
	word32 s0_44
	word32 s2_46
	word32 s3_47
	word32 s4_48
	word32 a0_49
	word32 a1_50
	call 0x4200CDFE<p32> (retsize: 0;)
		uses: a0:a0_28,a1:a1_29,ra:0x4200C93C<p32>,s0:s0_23,s1:s1_24,s2:a0_28,s3:s3_26,s4:s4_27
		defs: a0:a0_49,a1:a1_50,s0:s0_44,s2:s2_46,s3:s3_47,s4:s4_48
	word32 sp_64
	word32 s4_70
	word32 a3_80
	word32 ra_106
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:1<32>,a1:a1_50,ra:0x4200C948<p32>,s0:s0_44,s1:a0_49,s2:s2_46,s3:s3_47,s4:s4_48
		defs: a3:a3_80,ra:ra_65,s4:s4_70,sp:sp_64
	word32 s0_113 = 0x4200D974<32>
	branch CONVERT(Mem15[0x4200D974<32>:byte], byte, word32) >u 2<32> l2305498E
l2305498E:
	word32 a0_89
	ra_106 = EF_Ctrl_Is_PowerOffset_Slot_Empty(ra_106, 0x4200D974<32>, 2<32>, s4_70, out s0_113, out a0_89)
	branch a0_89 != 0<32> l23054962
l23054998:
	s0_116 = 2<32>
l23054962:
	branch CONVERT(Mem15[s0_113:byte], byte, word32) <=u 1<32> l23054978
l2305496C:
	word32 a0_107
	ra_106 = EF_Ctrl_Is_PowerOffset_Slot_Empty(ra_106, s0_113, 1<32>, s4_70, out s0_113, out a0_107)
	branch a0_107 == 0<32> l23054AF8
l23054AF8:
	s0_116 = 1<32>
l23054978:
	branch CONVERT(Mem15[s0_113:byte], byte, word32) != 0<32> l2305499C
l2305499C:
	word32 a0_124
	word32 s0_465
	ra_106 = EF_Ctrl_Is_PowerOffset_Slot_Empty(ra_106, s0_113, 0<32>, s4_70, out s0_465, out a0_124)
	s0_116 = a0_124
	branch a0_124 != 0<32> l2305497E
l230549A8:
	word32 s1_155
	word32 s2_158
	word32 s3_159
	word32 s4_160
	word32 a0_171
	word32 a0_466
	word32 a1_467
	word32 a2_468
	word32 a3_469
	word32 a4_470
	word32 a5_471
	word32 a7_472
	word32 s5_473
	word32 s6_474
	word32 s7_475
	word32 s8_476
	word32 s9_477
	word32 s10_478
	word32 s11_479
	word32 t4_480
	word32 t1_481
	word32 a0_482
	word32 a1_483
	word32 a2_484
	word32 a3_485
	word32 a4_486
	word32 a5_487
	memset(EF_Ctrl_Read_PowerOffset_Opt(printf(ra_106, 0x230886A4<32>, a3_80, Mem15[sp_64 + 8<i32>:word32], Mem15[sp_64 + 40<i32>:word32], Mem15[sp_64 + 112<i32>:word32], Mem15[sp_64 + 116<i32>:word32], Mem15[sp_64 + 152<i32>:word32], Mem15[sp_64 + 188<i32>:word32], out s1_155, out a0_466, out a1_467, out a2_468, out a3_469, out a4_470, out a5_471, out a7_472, out s2_158, out s3_159, out s4_160, out s5_473, out s6_474, out s7_475, out s8_476, out s9_477, out s10_478, out s11_479, out t4_480), s0_116, s1_155, s0_116, sp_64 + 12<i32>, s4_160, s2_158, s3_159, s4_160, Mem15[sp_64 + 296<i32>:word32], out s1_178, out a0_171, out s2_179, out s3_180, out s4_181), s3_180, 0<32>, 0xE<32>, out t1_481, out a0_482, out a1_483, out a2_484, out a3_485, out a4_486, out a5_487)
	word32 a6_198 = CONVERT(Mem15[sp_64 + 13<i32>:int8], int8, int32)
	word32 a3_199 = CONVERT(Mem15[sp_64 + 12<i32>:int8], int8, int32)
	Mem205[s3_180:byte] = SLICE(a3_199, byte, 0)
	word32 a7_207 = CONVERT(Mem205[sp_64 + 14<i32>:int8], int8, int32)
	Mem208[s3_180 + 6<i32>:byte] = SLICE(a6_198, byte, 0)
	Mem209[s3_180 + 12<i32>:byte] = SLICE(a7_207, byte, 0)
	word32 a4_210 = a6_198 - a3_199 + 100<i32> ^ 6<32>
	Mem215[s3_180 + 2<i32>:byte] = SLICE((a4_210 + 25<i32> ^ 50<i32>) + (a3_199 & 255<i32>), byte, 0)
	Mem221[s3_180 + 3<i32>:byte] = SLICE((a4_210 + 0x35<32> ^ 100<i32>) + (a3_199 & 255<i32>), byte, 0)
	Mem227[s3_180 + 4<i32>:byte] = SLICE(((a4_210 << 2<u32>) + 50<i32> ^ 100<i32>) + (a3_199 & 255<i32>), byte, 0)
	Mem230[s3_180 + 1<i32>:byte] = SLICE((a4_210 + 50<i32> ^ 100<i32>) + (a3_199 & 255<i32>), byte, 0)
	Mem240[s3_180 + 5<i32>:byte] = SLICE((a4_210 + 0x37<32> ^ 100<i32>) + (a3_199 & 255<i32>), byte, 0)
	word32 a5_235 = a7_207 - a6_198 + 100<i32> ^ 6<32>
	Mem244[s3_180 + 8<i32>:byte] = SLICE((a5_235 + 25<i32> ^ 50<i32>) + (a6_198 & 255<i32>), byte, 0)
	Mem252[s3_180 + 11<i32>:byte] = SLICE((a5_235 + 0x37<32> ^ 100<i32>) + (a6_198 & 255<i32>), byte, 0)
	Mem255[s3_180 + 9<i32>:byte] = SLICE((a5_235 + 0x35<32> ^ 100<i32>) + (a6_198 & 255<i32>), byte, 0)
	Mem263[s3_180 + 7<i32>:byte] = SLICE((a5_235 + 50<i32> ^ 100<i32>) + (a6_198 & 255<i32>), byte, 0)
	Mem266[s3_180 + 10<i32>:byte] = SLICE(((a5_235 << 2<u32>) + 50<i32> ^ 100<i32>) + (a6_198 & 255<i32>), byte, 0)
	Mem268[s3_180 + 13<i32>:byte] = SLICE((a5_235 + 0x39<32> ^ 100<i32>) + (a6_198 & 255<i32>), byte, 0)
	s0_187 = a0_171
l2305497E:
	word32 t4_464
	word32 s7_459
	word32 s9_461
	word32 s10_462
	word32 s11_463
	word32 s8_460
	word32 a4_454
	word32 a7_456
	word32 s5_457
	word32 s6_458
	word32 a5_455
	word32 a1_451
	word32 a2_452
	word32 a3_453
	word32 a0_450
	printf(ra_106, 0x230886B4<32>, a3_80, Mem15[sp_64 + 8<i32>:word32], Mem15[sp_64 + 40<i32>:word32], Mem15[sp_64 + 112<i32>:word32], Mem15[sp_64 + 116<i32>:word32], Mem15[sp_64 + 152<i32>:word32], Mem15[sp_64 + 188<i32>:word32], out s1_178, out a0_450, out a1_451, out a2_452, out a3_453, out a4_454, out a5_455, out a7_456, out s2_179, out s3_180, out s4_181, out s5_457, out s6_458, out s7_459, out s8_460, out s9_461, out s10_462, out s11_463, out t4_464)
	s0_187 = 1<32>
l23054ACA:
	word32 s0_309
	word32 s1_310
	word32 s2_311
	word32 s3_312
	word32 s4_313
	word32 a1_315
	call 0x4200CDEA<p32> (retsize: 0;)
		uses: a0:s1_300,a1:s2_298,ra:0x4200CACE<p32>,s0:s0_303,s1:s1_300,s2:s2_298,s3:s3_304,s4:s4_305
		defs: a1:a1_315,s0:s0_309,s1:s1_310,s2:s2_311,s3:s3_312,s4:s4_313
	word32 ra_337
	word32 s0_338
	word32 s1_339
	word32 s2_340
	word32 s4_342
	word32 a3_352
	word32 s5_357
	word32 s6_358
	word32 s7_359
	word32 s9_360
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:2<32>,a1:a1_315,ra:0x4200CAD8<p32>,s0:s0_309,s1:s1_310,s2:s2_311,s3:s3_312,s4:s4_313
		defs: a3:a3_352,ra:ra_337,s0:s0_338,s1:s1_339,s2:s2_340,s4:s4_342,s5:s5_357,s6:s6_358,s7:s7_359,s9:s9_360
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_339
	a0Out = 0<32> - CONVERT(s0_338 != 0<32>, bool, word32)
	a3Out = a3_352
	s2Out = s2_340
	s4Out = s4_342
	s5Out = s5_357
	s6Out = s6_358
	s7Out = s7_359
	s8Out = dwArg58
	s9Out = s9_360
	return ra_337
mfg_efuse_read_poweroffset_exit:


word32 mfg_efuse_read_macaddr(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_macaddr
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31]
// LiveOut: a0 a3 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
mfg_efuse_read_macaddr_entry:
l23054AFC:
	word32 a3_152
	word32 s4_159
	word32 s1_156
	word32 s0_162
	word32 s2_157
	word32 s3_158
	word32 s0_110
	word32 s0_23
	word32 s1_24
	word32 s2_25
	word32 a1_26
	word32 s4_28
	word32 a0_29
	word32 a3_272
	call 0x4200CDF4<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a3:a3,ra:0x4200CB0E<p32>,s0:s0,s1:a1,s2:s2,s3:s3,s4:a0,Stack +0004:s4,Stack +0008:s2,Stack +000C:s0,Stack +0084:s3,Stack +0088:s1,Stack +008C:ra
		defs: a0:a0_29,a1:a1_26,a3:a3_272,s0:s0_23,s1:s1_24,s2:s2_25,s4:s4_28
	word32 s0_40
	word32 s1_41
	word32 a1_43
	word32 s3_44
	word32 s4_45
	word32 a0_46
	word32 a3_282
	call 0x4200CDFE<p32> (retsize: 0;)
		uses: a0:a0_29,a1:a1_26,a3:a3_272,ra:0x4200CB18<p32>,s0:s0_23,s1:s1_24,s2:s2_25,s3:a0_29,s4:s4_28
		defs: a0:a0_46,a1:a1_43,a3:a3_282,s0:s0_40,s1:s1_41,s3:s3_44,s4:s4_45
	word32 sp_56
	word32 s1_59
	word32 ra_109
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:1<32>,a1:a1_43,a3:a3_282,ra:0x4200CB24<p32>,s0:s0_40,s1:s1_41,s2:a0_46,s3:s3_44,s4:s4_45
		defs: ra:ra_57,s1:s1_59,sp:sp_56
	branch CONVERT(Mem17[0x4200D974<32>:byte], byte, word32) >u 2<32> l23054B68
l23054B68:
	word32 a0_77
	ra_109 = EF_Ctrl_Is_MAC_Address_Slot_Empty(2<32>, s1_59, out a0_77)
	branch a0_77 != 0<32> l23054B3E
l23054B72:
	s0_110 = 2<32>
l23054B3E:
	branch CONVERT(Mem17[0x4200D974<32>:byte], byte, word32) <=u 1<32> l23054B52
l23054B48:
	word32 a0_91
	ra_109 = EF_Ctrl_Is_MAC_Address_Slot_Empty(1<32>, s1_59, out a0_91)
	branch a0_91 == 0<32> l23054BCA
l23054BCA:
	s0_110 = 1<32>
l23054B52:
	branch CONVERT(Mem17[0x4200D974<32>:byte], byte, word32) != 0<32> l23054B76
l23054B76:
	word32 a0_104
	ra_109 = EF_Ctrl_Is_MAC_Address_Slot_Empty(0<32>, s1_59, out a0_104)
	s0_110 = a0_104
	branch a0_104 != 0<32> l23054B58
l23054B82:
	word32 s1_133
	word32 s2_136
	word32 s3_137
	word32 s4_138
	word32 a1_364
	word32 a2_365
	word32 a3_366
	word32 a0_363
	word32 a4_367
	word32 a5_368
	word32 a7_369
	word32 s5_370
	word32 s6_371
	word32 s7_372
	word32 s8_373
	word32 s9_374
	word32 s10_375
	word32 s11_376
	word32 t4_377
	printf(ra_109, 0x230886A4<32>, a3, Mem17[sp_56 + 8<i32>:word32], Mem17[sp_56 + 40<i32>:word32], Mem17[sp_56 + 112<i32>:word32], Mem17[sp_56 + 116<i32>:word32], Mem17[sp_56 + 152<i32>:word32], Mem17[sp_56 + 188<i32>:word32], out s1_133, out a0_363, out a1_364, out a2_365, out a3_366, out a4_367, out a5_368, out a7_369, out s2_136, out s3_137, out s4_138, out s5_370, out s6_371, out s7_372, out s8_373, out s9_374, out s10_375, out s11_376, out t4_377)
	word32 a0_149
	s1_156 = EF_Ctrl_Read_MAC_Address_Opt(s0_110, s4_138, s1_133, s2_136, s3_137, s4_138, out a0_149, out a3_152, out s2_157, out s3_158, out s4_159)
	s0_162 = a0_149
l23054B58:
	word32 t4_362
	word32 s7_357
	word32 s9_359
	word32 s10_360
	word32 s11_361
	word32 s8_358
	word32 a4_352
	word32 a7_354
	word32 s5_355
	word32 s6_356
	word32 a5_353
	word32 a0_349
	word32 a1_350
	word32 a2_351
	printf(ra_109, 0x230886B4<32>, a3, Mem17[sp_56 + 8<i32>:word32], Mem17[sp_56 + 40<i32>:word32], Mem17[sp_56 + 112<i32>:word32], Mem17[sp_56 + 116<i32>:word32], Mem17[sp_56 + 152<i32>:word32], Mem17[sp_56 + 188<i32>:word32], out s1_156, out a0_349, out a1_350, out a2_351, out a3_152, out a4_352, out a5_353, out a7_354, out s2_157, out s3_158, out s4_159, out s5_355, out s6_356, out s7_357, out s8_358, out s9_359, out s10_360, out s11_361, out t4_362)
	s0_162 = 1<32>
l23054B9C:
	word32 s0_206
	word32 s1_207
	word32 s2_208
	word32 a1_209
	word32 s3_210
	word32 s4_211
	word32 a3_219
	call 0x4200CDEA<p32> (retsize: 0;)
		uses: a0:s2_196,a1:s3_194,a3:a3_202,ra:0x4200CBA0<p32>,s0:s0_199,s1:s1_200,s2:s2_196,s3:s3_194,s4:s4_201
		defs: a1:a1_209,a3:a3_219,s0:s0_206,s1:s1_207,s2:s2_208,s3:s3_210,s4:s4_211
	word32 ra_232
	word32 s0_233
	word32 s1_234
	word32 s2_235
	word32 s3_237
	word32 a3_246
	word32 s10_248
	word32 s11_249
	word32 s5_250
	word32 s6_251
	word32 s7_252
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:2<32>,a1:a1_209,a3:a3_219,ra:0x4200CBAA<p32>,s0:s0_206,s1:s1_207,s2:s2_208,s3:s3_210,s4:s4_211
		defs: a3:a3_246,ra:ra_232,s0:s0_233,s1:s1_234,s10:s10_248,s11:s11_249,s2:s2_235,s3:s3_237,s5:s5_250,s6:s6_251,s7:s7_252
	s0Out = s1
	s1Out = s1_234
	a0Out = 0<32> - CONVERT(s0_233 != 0<32>, bool, word32)
	a3Out = a3_246
	s2Out = s2_235
	s3Out = s3_237
	s4Out = dwArg04
	s5Out = s5_250
	s6Out = s6_251
	s7Out = s7_252
	s10Out = s10_248
	s11Out = s11_249
	return ra_232
mfg_efuse_read_macaddr_exit:


word32 mfg_flash_read(word32 ra, word32 a3, word32 mstatus, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_xtal_capcode
//      mfg_media_read_poweroffset
//      mfg_media_read_macaddr
// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
mfg_flash_read_entry:
l23054BCE:
	word32 s1_131
	word32 a0_132
	word32 a1_133
	word32 a2_134
	word32 a3_135
	word32 a4_136
	word32 a5_137
	word32 a7_138
	word32 s2_139
	word32 s3_140
	word32 s4_141
	word32 s5_142
	word32 s6_143
	word32 s7_144
	word32 s8_145
	word32 s9_146
	word32 s10_147
	word32 s11_148
	word32 t4_149
	printf(ra, 0x230886CC<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_131, out a0_132, out a1_133, out a2_134, out a3_135, out a4_136, out a5_137, out a7_138, out s2_139, out s3_140, out s4_141, out s5_142, out s6_143, out s7_144, out s8_145, out s9_146, out s10_147, out s11_148, out t4_149)
	__csrrc(mstatus, 8<32>)
	word32 a0_41
	word32 mstatus_43
	word32 a3_104
	word32 a4_105
	word32 ra_108
	word32 s1_109
	call 0x4200C97A<p32> (retsize: 0;)
		uses: a0:Mem7[0x4200E008<32>:int32],a1:Mem7[0x4200E00C<32>:int32],a2:0x42016C00<32>,a3:0x18<32>,a5:0x4200E000<32>,mstatus:mstatus,ra:0x4200CBFC<p32>,Stack +0008:dwLoc08,Stack +0028:dwArg18,Stack +0070:dwArg60,Stack +0074:dwArg64,Stack +0098:dwArg88,Stack +00BC:dwArgAC
		defs: a0:a0_41,a3:a3_47,a4:a4_49,mstatus:mstatus_43,ra:ra_42,s1:s1_51
	__csrrs(mstatus_43, 8<32>)
	word32 a5_64 = 0<32>
	branch a0_41 == 0<32> l23054C1A
l23054C0C:
	word32 a0_150
	word32 a1_151
	word32 a2_152
	word32 a5_153
	word32 a7_154
	word32 s2_155
	word32 s3_156
	word32 s4_157
	word32 s5_158
	word32 s6_159
	word32 s7_160
	word32 s8_161
	word32 s9_162
	word32 s10_163
	word32 s11_164
	word32 t4_165
	ra_108 = printf(ra_108, 0x230886E0<32>, a3_104, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_109, out a0_150, out a1_151, out a2_152, out a3_104, out a4_105, out a5_153, out a7_154, out s2_155, out s3_156, out s4_157, out s5_158, out s6_159, out s7_160, out s8_161, out s9_162, out s10_163, out s11_164, out t4_165)
	a5_64 = 0xFFFFFFFF<32>
l23054C1A:
	s1Out = s1_109
	a0Out = a5_64
	a3Out = a3_104
	a4Out = a4_105
	mstatusOut = mstatus_43
	return ra_108
mfg_flash_read_exit:


word32 mfg_flash_read_xtal_capcode(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_xtal_capcode
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
mfg_flash_read_xtal_capcode_entry:
l23054C22:
	word32 a0_108
	word32 s1_127 = a0
	branch a1 != 0<32> l23054C50
l23054C50:
	word32 a0_17
	ra = mfg_flash_read(ra, a3, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_127, out a0_17, out a3, out a4, out mstatus)
	branch a0_17 == 0<32> l23054C30
l23054C56:
l23054C30:
	word32 s0_44 = Mem11[a4:word32]
	branch a4 == 65<i32> l23054C58
l23054C58:
	word32 s0_57
	word32 a0_59
	word32 a7_67
	word32 s9_76
	word32 t0_77
	word32 t3_78
	word32 t4_79
	call 0x4200C9DE<p32> (retsize: 0;)
		uses: a0:s0_44 + 4<i32>,a1:0x10<32>,a3:a3_51,a4:a4_41,a7:a7_67,mstatus:mstatus_52,ra:0x4200CC62<p32>,s0:s0_44,s1:s1_50,s10:s10_68,s11:s11_69,s2:Mem11[s0_44 + 20<i32>:int32],s3:s3_70,s4:s4_71,s5:s5_72,s6:s6_73,s7:s7_74,s8:s8_75,s9:s9_76,Stack +0018:dwArg08,Stack +0060:dwArg50,Stack +0064:dwArg54,Stack +0088:dwArg78,Stack +00AC:dwArg9C,t0:t0_77,t3:t3_78,t4:t4_79
		defs: a0:a0_59,a3:a3_65,a7:a7_67,mstatus:mstatus_66,ra:ra_56,s0:s0_57,s1:s1_55,s10:s10_68,s11:s11_69,s2:s2_58,s3:s3_70,s4:s4_71,s5:s5_72,s6:s6_73,s7:s7_74,s8:s8_75,s9:s9_76,t0:t0_77,t3:t3_78,t4:t4_79
	branch s2 != a0_59 l23054C42
l23054C6E:
	branch CONVERT(Mem11[s0_57 + 4<i32>:byte], byte, word32) != 90<i32> l23054C42
l23054C7A:
	Mem84[s1_127:byte] = SLICE(CONVERT(Mem11[s0_57 + 5<i32>:byte], byte, word32), byte, 0)
	a0_108 = 0<32>
l23054C42:
	a0_108 = 0xFFFFFFFF<32>
l23054C44:
	0<32> = dwArg38
	s1Out = s1_127
	a0Out = a0_108
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mfg_flash_read_xtal_capcode_exit:


word32 mfg_flash_read_poweroffset(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_poweroffset
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s2 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
mfg_flash_read_poweroffset_entry:
l23054C86:
	word32 s1_214
	word32 a0_165
	branch a1 != 0<32> l23054CB4
l23054CB4:
	word32 a0_17
	ra = mfg_flash_read(ra, a3, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_214, out a0_17, out a3, out a4, out mstatus)
	branch a0_17 == 0<32> l23054C94
l23054CBA:
l23054C94:
	s1_214 = Mem11[a4:word32]
	branch a4 == 65<i32> l23054CBC
l23054CBC:
	word32 s0_55
	word32 a0_59
	word32 a7_65
	word32 t3_67
	word32 t1_68
	word32 a6_69
	word32 s10_71
	word32 s11_72
	word32 s3_73
	word32 t0_80
	word32 t4_81
	call 0x4200C9DE<p32> (retsize: 0;)
		uses: a0:s1_44 + 4<i32>,a1:0x10<32>,a3:a3_51,a4:a4_41,a6:a6_69,a7:a7_65,mstatus:mstatus_52,ra:0x4200CCC6<p32>,s0:a0,s1:s1_44,s10:s10_71,s11:s11_72,s2:Mem11[s1_44 + 20<i32>:int32],s3:s3_73,s4:s4_74,s5:s5_75,s6:s6_76,s7:s7_77,s8:s8_78,s9:s9_79,Stack +0018:dwArg08,Stack +0060:dwArg50,Stack +0064:dwArg54,Stack +0088:dwArg78,Stack +00AC:dwArg9C,t0:t0_80,t1:t1_68,t3:t3_67,t4:t4_81
		defs: a0:a0_59,a3:a3_66,a6:a6_69,a7:a7_65,mstatus:mstatus_70,ra:ra_56,s0:s0_55,s1:s1_57,s10:s10_71,s11:s11_72,s2:s2_58,s3:s3_73,s4:s4_74,s5:s5_75,s6:s6_76,s7:s7_77,s8:s8_78,s9:s9_79,t0:t0_80,t1:t1_68,t3:t3_67,t4:t4_81
	branch s2 != a0_59 l23054CA6
l23054CD2:
	branch CONVERT(Mem11[s1_214 + 6<i32>:byte], byte, word32) != 90<i32> l23054CA6
l23054CDE:
	word32 t1_297
	word32 a0_298
	word32 a1_299
	word32 a2_300
	word32 a3_301
	word32 a4_302
	word32 a5_303
	ra = memset(ra, s0_55, 0<32>, 0xE<32>, out t1_297, out a0_298, out a1_299, out a2_300, out a3_301, out a4_302, out a5_303)
	word32 a7_96 = CONVERT(Mem11[s1_214 + 8<i32>:int8], int8, int32)
	word32 a3_97 = CONVERT(Mem11[s1_214 + 7<i32>:int8], int8, int32)
	word32 a6_103 = CONVERT(Mem11[s1_214 + 9<i32>:int8], int8, int32)
	Mem104[s0_55:byte] = SLICE(a3_97, byte, 0)
	Mem107[s0_55 + 6<i32>:byte] = SLICE(a7_96, byte, 0)
	Mem108[s0_55 + 12<i32>:byte] = SLICE(a6_103, byte, 0)
	word32 a4_109 = a7_96 - a3_97 + 100<i32> ^ 6<32>
	Mem114[s0_55 + 2<i32>:byte] = SLICE((a4_109 + 25<i32> ^ 50<i32>) + (a3_97 & 255<i32>), byte, 0)
	Mem119[s0_55 + 3<i32>:byte] = SLICE((a4_109 + 0x35<32> ^ 100<i32>) + (a3_97 & 255<i32>), byte, 0)
	Mem125[s0_55 + 4<i32>:byte] = SLICE(((a4_109 << 2<u32>) + 50<i32> ^ 100<i32>) + (a3_97 & 255<i32>), byte, 0)
	Mem129[s0_55 + 1<i32>:byte] = SLICE((a4_109 + 50<i32> ^ 100<i32>) + (a3_97 & 255<i32>), byte, 0)
	Mem136[s0_55 + 5<i32>:byte] = SLICE((a3_97 & 255<i32>) + (a4_109 + 0x37<32> ^ 100<i32>), byte, 0)
	word32 a5_134 = a6_103 - a7_96 + 100<i32> ^ 6<32>
	Mem142[s0_55 + 8<i32>:byte] = SLICE((a5_134 + 25<i32> ^ 50<i32>) + (a7_96 & 255<i32>), byte, 0)
	Mem147[s0_55 + 10<i32>:byte] = SLICE(((a5_134 << 2<u32>) + 50<i32> ^ 100<i32>) + (a7_96 & 255<i32>), byte, 0)
	Mem158[s0_55 + 7<i32>:byte] = SLICE((a5_134 + 50<i32> ^ 100<i32>) + (a7_96 & 255<i32>), byte, 0)
	Mem161[s0_55 + 9<i32>:byte] = SLICE((a5_134 + 0x35<32> ^ 100<i32>) + (a7_96 & 255<i32>), byte, 0)
	Mem164[s0_55 + 11<i32>:byte] = SLICE((a5_134 + 0x37<32> ^ 100<i32>) + (a7_96 & 255<i32>), byte, 0)
	Mem167[s0_55 + 13<i32>:byte] = SLICE((a5_134 + 0x39<32> ^ 100<i32>) + (a7_96 & 255<i32>), byte, 0)
	a3 = 7<32>
	a0_165 = 0<32>
l23054CA6:
	a0_165 = 0xFFFFFFFF<32>
l23054CA8:
	0<32> = dwArg38
	s1Out = s1_214
	a0Out = a0_165
	a3Out = a3
	s2Out = s2
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	mstatusOut = mstatus
	return ra
mfg_flash_read_poweroffset_exit:


word32 mfg_flash_read_macaddr(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArg9C, word32 dwArgAC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_macaddr
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mfg_flash_read_macaddr_entry:
l23054DEA:
	word32 a0_123
	word32 s1_110 = a0
	branch a1 == 0<32> l23054E18
l23054DF8:
	word32 a0_17
	ra = mfg_flash_read(ra, a3, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_110, out a0_17, out a3, out a4, out mstatus)
	branch a0_17 == 0<32> l23054E18
l23054E18:
	word32 s0_44 = Mem11[a4:word32]
	branch a4 != 65<i32> l23054E0A
l23054E2A:
	word32 s0_57
	word32 a0_59
	word32 a7_67
	word32 s8_75
	word32 s9_76
	word32 t0_77
	word32 t3_78
	word32 t4_79
	word32 a6_146
	word32 t1_147
	word32 t5_148
	word32 t6_149
	call 0x4200C9DE<p32> (retsize: 0;)
		uses: a0:s0_44 + 4<i32>,a1:0x10<32>,a3:a3_51,a4:a4_41,a6:a6_146,a7:a7_67,mstatus:mstatus_52,ra:0x4200CE34<p32>,s0:s0_44,s1:s1_50,s10:s10_68,s11:s11_69,s2:Mem11[s0_44 + 20<i32>:int32],s3:s3_70,s4:s4_71,s5:s5_72,s6:s6_73,s7:s7_74,s8:s8_75,s9:s9_76,Stack +0008:dwLoc08,Stack +0018:dwArg08,Stack +0028:dwArg18,Stack +0060:dwArg50,Stack +0064:dwArg54,Stack +0070:dwArg60,Stack +0074:dwArg64,Stack +0088:dwArg78,Stack +0098:dwArg88,Stack +00AC:dwArg9C,Stack +00BC:dwArgAC,t0:t0_77,t1:t1_147,t3:t3_78,t4:t4_79,t5:t5_148,t6:t6_149
		defs: a0:a0_59,a3:a3_65,a6:a6_146,a7:a7_67,mstatus:mstatus_66,ra:ra_56,s0:s0_57,s1:s1_55,s10:s10_68,s11:s11_69,s2:s2_58,s3:s3_70,s4:s4_71,s5:s5_72,s6:s6_73,s7:s7_74,s8:s8_75,s9:s9_76,t0:t0_77,t1:t1_147,t3:t3_78,t4:t4_79,t5:t5_148,t6:t6_149
	branch s2 != a0_59 l23054E0A
l23054E40:
	branch CONVERT(Mem11[s0_57 + 10<i32>:byte], byte, word32) != 90<i32> l23054E0A
l23054E4C:
	word32 a1_286
	word32 a2_287
	word32 a4_288
	word32 a5_289
	word32 a6_290
	word32 a7_291
	memcpy(s1_110, s0_57 + 11<i32>, 6<32>, out a1_286, out a2_287, out a3, out a4_288, out a5_289, out a6_290, out a7_291)
	a0_123 = 0<32>
l23054DFE:
	word32 a2_279
	word32 a4_280
	word32 a5_281
	word32 a7_282
	word32 a1_278
	word32 a0_277
	word32 s8_283
	word32 s9_284
	word32 t4_285
	ra = printf(ra, 0x230886F4<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_110, out a0_277, out a1_278, out a2_279, out a3, out a4_280, out a5_281, out a7_282, out s2, out s3, out s4, out s5, out s6, out s7, out s8_283, out s9_284, out s10, out s11, out t4_285)
l23054E0A:
	a0_123 = 0xFFFFFFFF<32>
l23054E0C:
	0<32> = dwArg38
	s1Out = s1_110
	a0Out = a0_123
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mfg_flash_read_macaddr_exit:


word32 Bl_F(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 a7, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl60x_fw_password_hash
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] a7:[0..31] ra:[0..31]
// LiveOut: ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
Bl_F_entry:
l23054E5C:
	word32 a3_40
	word32 a1_258
	word32 a2_259
	word32 a4_260
	word32 a5_261
	word32 a0_39 = strlen(a2, out a1_258, out a2_259, out a3_40, out a4_260, out a5_261)
	word32 a6_59
	word32 a1_262
	word32 a2_263
	word32 a3_264
	word32 a4_265
	word32 a5_266
	word32 a7_267
	memcpy(a0, a3_40, a4, out a1_262, out a2_263, out a3_264, out a4_265, out a5_266, out a6_59, out a7_267)
	word32 a4_67 = a0 + dwLoc48
	Mem70[a4_67:byte] = SLICE(a6_59 >> 0x18<u32>, byte, 0)
	Mem72[a4_67 + 1<i32>:byte] = SLICE(a6_59 >> 0x10<u32>, byte, 0)
	Mem74[a4_67 + 2<i32>:byte] = SLICE(a6_59 >> 8<u32>, byte, 0)
	Mem75[a4_67 + 3<i32>:byte] = SLICE(a6_59, byte, 0)
	Bl_hmac_sha1(ra, 1<32>, a2, a0_39, a1, 0x14<32>)
	word32 a1_268
	word32 a2_269
	word32 a3_270
	word32 a4_271
	word32 a5_272
	word32 a6_273
	word32 a7_274
	memcpy(a7, a1, 0x14<32>, out a1_268, out a2_269, out a3_270, out a4_271, out a5_272, out a6_273, out a7_274)
	word32 s0_113 = 1<32>
l23054EE0:
	branch s0_113 < a5 l23054EFA
l23054EFA:
	Bl_hmac_sha1(ra, 1<32>, a2, a0_39, a0, 0x14<32>)
	word32 a1_275
	word32 a2_276
	word32 a3_277
	word32 a4_278
	word32 a5_279
	word32 a6_280
	word32 a7_281
	memcpy(a1, a0, 0x14<32>, out a1_275, out a2_276, out a3_277, out a4_278, out a5_279, out a6_280, out a7_281)
	word32 a5_164 = 0<32>
l23054F1A:
	word32 a3_167 = a7 + a5_164
	Mem175[a3_167:byte] = SLICE(CONVERT(Mem170[a0 + a5_164:byte], byte, word32) ^ CONVERT(Mem170[a3_167:byte], byte, word32), byte, 0)
	a5_164 = a5_164 + 1<32>
	branch a5_164 != 0x14<32> l23054F1A
l23054F36:
	s0_113 = s0_113 + 1<32>
l23054EE4:
	s0Out = s0_113
	s1Out = a6
	s2Out = a1
	return dwLoc08
Bl_F_exit:


word32 Bl_PasswordHash(word32 ra, word32 a0, word32 a2, word32 a3, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl60x_fw_password_hash
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
Bl_PasswordHash_entry:
l23054F3A:
	word32 a0_114
	word32 s1_147 = a2
	word32 a1_171
	word32 a2_172
	word32 a3_173
	word32 a4_174
	word32 a5_175
	branch strlen(a0, out a1_171, out a2_172, out a3_173, out a4_174, out a5_175) >u 63<i32> l23054FA8
l23054FA8:
	a0_114 = 0xFFFFFFFF<32>
l23054F5A:
	a0_114 = 0xFFFFFFFF<32>
	branch a2 > 32<i32> l23054F9A
l23054F64:
	word32 s0_49
	word32 s1_50
	word32 s2_51
	word32 ra_48 = Bl_F(ra, fp + -68<i32>, fp + -88<i32>, a0, a2, 0x1000000<32>, a3, out s0_49, out s1_50, out s2_51)
	word32 a1_176
	word32 a2_177
	word32 a3_178
	word32 a4_179
	word32 a5_180
	word32 a6_181
	word32 a7_182
	memcpy(s0_49 + 20<i32>, s0_49, 0xC<32>, out a1_176, out a2_177, out a3_178, out a4_179, out a5_180, out a6_181, out a7_182)
	word32 s0_183
	word32 s2_184
	Bl_F(ra_48, fp + -68<i32>, fp + -88<i32>, s2_51, s1_50, 0x1000000<32>, s0_49, out s0_183, out s1_147, out s2_184)
	a0_114 = 0<32>
l23054F9A:
	a0Out = a0_114
	return s1_147
Bl_PasswordHash_exit:


word32 bl60x_fw_password_hash(word32 ra, word32 a0, word32 a2, word32 a3, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_psk_cal
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl60x_fw_password_hash_entry:
l23054FAC:
l23054FAC_thunk_Bl_PasswordHash:
	word32 a0_7
	word32 s1_15 = Bl_PasswordHash(ra, a0, a2, a3, out a0_7)
	a0Out = a0_7
	return s1_15
bl60x_fw_password_hash_exit:


word32 bl_mtd_open(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgB4, word32 dwArgC8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      ef_port_init
//      romfs_register
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 ra s0 s2 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 tp
// Preserved: sp
bl_mtd_open_entry:
l23054FB0:
	word32 a0_42
	word32 a0_27
	word32 s8_720
	word32 s4_719
	word32 s3_718
	word32 a6_717
	word32 a5_716
	word32 a4_715
	word32 a2_714
	word32 a1_713
	word32 s1_102
	word32 s2_36
	word32 a3_30
	pvPortMalloc(ra, a0, 32<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_102, out a0_27, out a1_713, out a2_714, out a3_30, out a4_715, out a5_716, out a6_717, out s2_36, out s3_718, out s4_719, out s8_720)
	branch a0_27 == 0<32> l23055146
l23055146:
	a0_42 = 0xFFFFFFFF<32>
l23054FD2:
	word32 a3_108
	word32 a5_110
	word32 a5_727
	word32 a3_725
	word32 a4_726
	word32 a1_723
	word32 a2_724
	word32 a0_722
	word32 t1_721
	word32 ra_52 = memset(ra, a0_27, 0<32>, 32<i32>, out t1_721, out a0_722, out a1_723, out a2_724, out a3_725, out a4_726, out a5_727)
	word32 a3_728
	word32 a5_730
	word32 a4_729
	strncpy(a0_27, s1_102, 0x10<32>, out a3_728, out a4_729, out a5_730)
	branch (s2_36 & 1<i32>) == 0<32> l2305505E
l2305505E:
	branch (s2_36 & 2<i32>) == 0<32> l230550C2
l230550C2:
	Mem69[a0_27 + 28<i32>:word32] = 0<32>
l23055060:
	word32 a0_73
	word32 a3_76
	word32 a5_78
	word32 s2_904
	word32 s3_905
	word32 s6_906
	hal_boot2_partition_bus_addr_active(s1_102, dwArgC8, out s1_102, out a0_73, out a3_76, out a5_78, out s2_904, out s3_905, out s6_906)
	branch a0_73 != 0<32> l23055072
l2305506E:
	branch a5_78 != 0<32> l23055090
l23055090:
	Mem98[a5_78 + 28<i32>:word32] = dwArgB4
l23055092:
	word32 a0_105
	word32 s1_944
	word32 s2_945
	hal_boot2_partition_addr_active(s1_102, dwArgC8, out s1_944, out a0_105, out a3_108, out a5_110, out s2_945)
	branch a0_105 != 0<32> l230550A4
l230550A0:
	branch a5_110 != 0<32> l230550C8
l230550A4:
	word32 a3_143
	word32 s1_946
	word32 a0_947
	word32 a1_948
	word32 a2_949
	word32 a4_950
	word32 a5_951
	word32 a7_952
	word32 s2_953
	word32 s3_954
	word32 s4_955
	word32 s5_956
	word32 s6_957
	word32 s7_958
	word32 s8_959
	word32 s9_960
	word32 s10_961
	word32 s11_962
	word32 t4_963
	word32 s1_964
	word32 a0_965
	word32 a1_966
	word32 a2_967
	word32 a3_968
	word32 a4_969
	word32 a5_970
	word32 a7_971
	word32 s2_972
	word32 s3_973
	word32 s4_974
	word32 s5_975
	word32 s6_976
	word32 s7_977
	word32 s8_978
	word32 s9_979
	word32 s10_980
	word32 s11_981
	word32 t4_982
	printf(printf(ra_52, 0x2308870C<32>, a3_108, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_946, out a0_947, out a1_948, out a2_949, out a3_143, out a4_950, out a5_951, out a7_952, out s2_953, out s3_954, out s4_955, out s5_956, out s6_957, out s7_958, out s8_959, out s9_960, out s10_961, out s11_962, out t4_963), 0x23088740<32>, a3_143, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_964, out a0_965, out a1_966, out a2_967, out a3_968, out a4_969, out a5_970, out a7_971, out s2_972, out s3_973, out s4_974, out s5_975, out s6_976, out s7_977, out s8_978, out s9_979, out s10_980, out s11_981, out t4_982)
l230550C0:
l23055072:
	word32 a3_198
	word32 s1_907
	word32 a0_908
	word32 a1_909
	word32 a2_910
	word32 a4_911
	word32 a5_912
	word32 a7_913
	word32 s2_914
	word32 s3_915
	word32 s4_916
	word32 s5_917
	word32 s6_918
	word32 s7_919
	word32 s8_920
	word32 s9_921
	word32 s10_922
	word32 s11_923
	word32 t4_924
	word32 s1_925
	word32 a0_926
	word32 a1_927
	word32 a2_928
	word32 a3_929
	word32 a4_930
	word32 a5_931
	word32 a7_932
	word32 s2_933
	word32 s3_934
	word32 s4_935
	word32 s5_936
	word32 s6_937
	word32 s7_938
	word32 s8_939
	word32 s9_940
	word32 s10_941
	word32 s11_942
	word32 t4_943
	printf(printf(ra_52, 0x2308870C<32>, a3_76, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_907, out a0_908, out a1_909, out a2_910, out a3_198, out a4_911, out a5_912, out a7_913, out s2_914, out s3_915, out s4_916, out s5_917, out s6_918, out s7_919, out s8_920, out s9_921, out s10_922, out s11_923, out t4_924), 0x23088740<32>, a3_198, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_925, out a0_926, out a1_927, out a2_928, out a3_929, out a4_930, out a5_931, out a7_932, out s2_933, out s3_934, out s4_935, out s5_936, out s6_937, out s7_938, out s8_939, out s9_940, out s10_941, out s11_942, out t4_943)
l2305508E:
l23054FF4:
	branch (s2_36 & 2<i32>) == 0<32> l23055058
l23055058:
	Mem240[a0_27 + 28<i32>:word32] = 0<32>
l23054FF6:
	word32 a0_244
	word32 a3_247
	word32 a5_249
	s1_102 = hal_boot2_partition_bus_addr_inactive(s1_102, dwArgC8, out a0_244, out a3_247, out a5_249)
	branch a0_244 != 0<32> l23055008
l23055004:
	branch a5_249 != 0<32> l23055026
l23055026:
	Mem269[a5_249 + 28<i32>:word32] = dwArgB4
l23055028:
	branch hal_boot2_partition_addr_inactive(s1_102, dwArgC8, out a3_108, out a5_110) != 0<32> l2305503A
l23055036:
	branch a5_110 != 0<32> l230550C8
l230550C8:
	Mem302[a5_110 + 20<i32>:word32] = dwArgB4
	Mem307[a5_110 + 24<i32>:word32] = dwArgB4
	word32 a0_805
	word32 a1_806
	word32 a2_807
	word32 a4_808
	word32 a5_809
	word32 s4_810
	word32 s8_811
	puts(0x23088784<32>, out a0_805, out a1_806, out a2_807, out a4_808, out a5_809, out s4_810, out s8_811)
	word32 a3_329
	word32 a3_354
	word32 a3_380
	word32 a1_404
	word32 a3_406
	word32 s1_812
	word32 a0_813
	word32 a1_814
	word32 a2_815
	word32 a4_816
	word32 a5_817
	word32 a7_818
	word32 s2_819
	word32 s3_820
	word32 s4_821
	word32 s5_822
	word32 s6_823
	word32 s7_824
	word32 s8_825
	word32 s9_826
	word32 s10_827
	word32 s11_828
	word32 t4_829
	word32 s1_830
	word32 a0_831
	word32 a1_832
	word32 a2_833
	word32 a4_834
	word32 a5_835
	word32 a7_836
	word32 s2_837
	word32 s3_838
	word32 s4_839
	word32 s5_840
	word32 s6_841
	word32 s7_842
	word32 s8_843
	word32 s9_844
	word32 s10_845
	word32 s11_846
	word32 t4_847
	word32 s1_848
	word32 a0_849
	word32 a1_850
	word32 a2_851
	word32 a4_852
	word32 a5_853
	word32 a7_854
	word32 s2_855
	word32 s3_856
	word32 s4_857
	word32 s5_858
	word32 s6_859
	word32 s7_860
	word32 s8_861
	word32 s9_862
	word32 s10_863
	word32 s11_864
	word32 t4_865
	word32 s1_866
	word32 a0_867
	word32 a2_868
	word32 a4_869
	word32 a5_870
	word32 a7_871
	word32 s2_872
	word32 s3_873
	word32 s4_874
	word32 s5_875
	word32 s6_876
	word32 s7_877
	word32 s8_878
	word32 s9_879
	word32 s10_880
	word32 s11_881
	word32 t4_882
	word32 ra_409 = printf(printf(printf(printf(ra_52, 0x230887AC<32>, a3_108, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_812, out a0_813, out a1_814, out a2_815, out a3_329, out a4_816, out a5_817, out a7_818, out s2_819, out s3_820, out s4_821, out s5_822, out s6_823, out s7_824, out s8_825, out s9_826, out s10_827, out s11_828, out t4_829), 0x230887BC<32>, a3_329, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_830, out a0_831, out a1_832, out a2_833, out a3_354, out a4_834, out a5_835, out a7_836, out s2_837, out s3_838, out s4_839, out s5_840, out s6_841, out s7_842, out s8_843, out s9_844, out s10_845, out s11_846, out t4_847), 0x230887CC<32>, a3_354, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_848, out a0_849, out a1_850, out a2_851, out a3_380, out a4_852, out a5_853, out a7_854, out s2_855, out s3_856, out s4_857, out s5_858, out s6_859, out s7_860, out s8_861, out s9_862, out s10_863, out s11_864, out t4_865), 0x230887E4<32>, a3_380, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_866, out a0_867, out a1_404, out a2_868, out a3_406, out a4_869, out a5_870, out a7_871, out s2_872, out s3_873, out s4_874, out s5_875, out s6_876, out s7_877, out s8_878, out s9_879, out s10_880, out s11_881, out t4_882)
	word32 s0_423 = Mem307[a1_404 + 28<i32>:word32]
	word32 s3_439
	word32 s1_883
	word32 a0_884
	word32 a1_885
	word32 a2_886
	word32 a4_887
	word32 a5_888
	word32 a7_889
	word32 s4_890
	word32 s7_891
	word32 s8_892
	word32 s9_893
	word32 s10_894
	word32 s11_895
	word32 t4_896
	ra = printf(ra_409, 0x23088800<32>, a3_406, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_883, out a0_884, out a1_885, out a2_886, out a3_30, out a4_887, out a5_888, out a7_889, out s2_36, out s3_439, out s4_890, out s5, out s6, out s7_891, out s8_892, out s9_893, out s10_894, out s11_895, out t4_896)
	word32 a0_897
	word32 a1_898
	word32 a2_899
	word32 a4_900
	word32 a5_901
	word32 s4_902
	word32 s8_903
	puts(0x23088814<32>, out a0_897, out a1_898, out a2_899, out a4_900, out a5_901, out s4_902, out s8_903)
	Mem461[s3_439:word32] = s0_423
	a0_42 = 0<32>
l23055138:
	0<32> = dwArg0128
	s0Out = dwArgE4
	a0Out = a0_42
	a3Out = a3_30
	s2Out = s2_36
	s5Out = s5
	s6Out = s6
	return ra
bl_mtd_open_exit:
l2305503A:
	word32 a3_482
	word32 s1_768
	word32 a0_769
	word32 a1_770
	word32 a2_771
	word32 a4_772
	word32 a5_773
	word32 a7_774
	word32 s2_775
	word32 s3_776
	word32 s4_777
	word32 s5_778
	word32 s6_779
	word32 s7_780
	word32 s8_781
	word32 s9_782
	word32 s10_783
	word32 s11_784
	word32 t4_785
	word32 s1_786
	word32 a0_787
	word32 a1_788
	word32 a2_789
	word32 a3_790
	word32 a4_791
	word32 a5_792
	word32 a7_793
	word32 s2_794
	word32 s3_795
	word32 s4_796
	word32 s5_797
	word32 s6_798
	word32 s7_799
	word32 s8_800
	word32 s9_801
	word32 s10_802
	word32 s11_803
	word32 t4_804
	printf(printf(ra_52, 0x2308870C<32>, a3_108, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_768, out a0_769, out a1_770, out a2_771, out a3_482, out a4_772, out a5_773, out a7_774, out s2_775, out s3_776, out s4_777, out s5_778, out s6_779, out s7_780, out s8_781, out s9_782, out s10_783, out s11_784, out t4_785), 0x23088740<32>, a3_482, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_786, out a0_787, out a1_788, out a2_789, out a3_790, out a4_791, out a5_792, out a7_793, out s2_794, out s3_795, out s4_796, out s5_797, out s6_798, out s7_799, out s8_800, out s9_801, out s10_802, out s11_803, out t4_804)
l23055056:
l23055008:
	word32 a0_732
	word32 s1_731
	word32 a2_734
	word32 a1_733
	word32 a4_735
	word32 a5_736
	word32 a3_537
	word32 a7_737
	word32 s2_738
	word32 s3_739
	word32 s4_740
	word32 s5_741
	word32 s6_742
	word32 s7_743
	word32 s8_744
	word32 s9_745
	word32 s10_746
	word32 s11_747
	word32 t4_748
	word32 s1_749
	word32 a0_750
	word32 a1_751
	word32 a2_752
	word32 a3_753
	word32 a4_754
	word32 a5_755
	word32 a7_756
	word32 s2_757
	word32 s3_758
	word32 s4_759
	word32 s5_760
	word32 s6_761
	word32 s7_762
	word32 s8_763
	word32 s9_764
	word32 s10_765
	word32 s11_766
	word32 t4_767
	printf(printf(ra_52, 0x2308870C<32>, a3_247, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_731, out a0_732, out a1_733, out a2_734, out a3_537, out a4_735, out a5_736, out a7_737, out s2_738, out s3_739, out s4_740, out s5_741, out s6_742, out s7_743, out s8_744, out s9_745, out s10_746, out s11_747, out t4_748), 0x23088740<32>, a3_537, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_749, out a0_750, out a1_751, out a2_752, out a3_753, out a4_754, out a5_755, out a7_756, out s2_757, out s3_758, out s4_759, out s5_760, out s6_761, out s7_762, out s8_763, out s9_764, out s10_765, out s11_766, out t4_767)
l23055024:


void bl_mtd_close(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
bl_mtd_close_entry:
l2305514A:
	word32 s0_29
	word32 s1_30
	word32 a0_31
	word32 a1_32
	word32 a2_33
	word32 a3_34
	word32 a4_35
	word32 a5_36
	word32 a6_37
	word32 s4_38
	word32 t3_39
	vPortFree(a0, a2, a5, mstatus, dwArg0148, dwArg0188, out s0_29, out s1_30, out a0_31, out a1_32, out a2_33, out a3_34, out a4_35, out a5_36, out a6_37, out s4_38, out t3_39)
	return
bl_mtd_close_exit:


word32 bl_mtd_info(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_port_init
//      romfs_register
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a4 a5 s1 tp
// Preserved: s0 sp
bl_mtd_info_entry:
l2305515A:
	word32 a5_18
	word32 a4_35
	strcpy(a1, a0, out a4_35, out a5_18)
	Mem22[a5_18 + 16<i32>:word32] = a1
	Mem24[a5_18 + 20<i32>:word32] = a1
	word32 s1_25 = Mem24[a5_18 + 28<i32>:word32]
	Mem27[a5_18 + 24<i32>:word32] = a1
	return s1_25
bl_mtd_info_exit:


word32 bl_mtd_erase(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_port_erase
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 ra
// Trashed: a0 a1 a2 a4 a5 ra
// Preserved: sp
bl_mtd_erase_entry:
l23055186:
	word32 a0_24
	word32 ra_17 = bl_flash_erase(ra, Mem5[a0 + 20<i32>:word32] + a1, a2, out a0_24)
	a0Out = 0<32>
	return ra_17
bl_mtd_erase_exit:


void bl_mtd_erase_all(word32 ra, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a1:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 ra
// Preserved: sp
bl_mtd_erase_all_entry:
l2305519C:
	word32 a0_20
	bl_flash_erase(ra, Mem5[Mem5[a1 + 24<i32>:word32] + 20<i32>:word32], a1, out a0_20)
	return
bl_mtd_erase_all_exit:


word32 bl_mtd_write(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 s2, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg5C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      write_status
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +005C:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_mtd_write_entry:
l230551B0:
	word32 a1_116
	word32 a5_115
	word32 a4_114
	word32 ra_112
	word32 s4_207
	word32 s0_123 = a2
	word32 s2_121 = a3
	word32 s1_23 = s1 + a1
	branch bl_sys_isxipaddr(a3) == 0<32> l23055248
l23055248:
	word32 a0_251
	ra_112 = bl_flash_write(ra, s1_23, a3, a2, out a0_251, out a1_116, out a4_114, out a5_115)
	s4_207 = s4
l230551CE:
	branch Mem15[0x4200DE84<32>:int32] == 0<32> l2305521A
l2305521A:
	word32 a5_252
	xTaskGetTickCount(out a5_252)
l230551D8:
	word32 a5_253
	xTaskGetTickCountFromISR(out a5_253)
l230551DC:
	word32 a0_262
	word32 a2_263
	word32 a3_264
	word32 s4_265
	word32 s5_266
	word32 s8_267
	word32 s9_268
	word32 s10_269
	word32 s11_270
	word32 s1_107
	ra_112 = bl_printk(ra, 0x23088848<32>, 0x2308883C<32>, dwLoc58, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_107, out a0_262, out a1_116, out a2_263, out a3_264, out a4_114, out a5_115, out s2_121, out s3, out s4_265, out s5_266, out s6, out s7, out s8_267, out s9_268, out s10_269, out s11_270)
	s4_207 = 64<i32>
l23055206:
	branch s0_123 != 0<32> l23055220
l23055220:
	s3 = s0_123
	branch s0_123 <=u 64<i32> l2305522A
l23055226:
	s3 = 64<i32>
l2305522A:
	word32 a1_254
	word32 a2_255
	word32 a3_256
	word32 a4_257
	word32 a5_258
	word32 a6_259
	word32 a7_260
	memcpy(fp + -96<i32>, s2_121, s3, out a1_254, out a2_255, out a3_256, out a4_257, out a5_258, out a6_259, out a7_260)
	word32 a0_261
	ra_112 = bl_flash_write(ra_112, s1_107, fp + -96<i32>, s3, out a0_261, out a1_116, out a4_114, out a5_115)
	s1_107 = s1_107 + s3
	s2_121 = s2_121 + s3
	s0_123 = s0_123 - s3
l23055208:
	s0Out = s0_123
	s1Out = dwArg28
	a0Out = 0<32>
	a1Out = a1_116
	a3Out = dwArg08
	a4Out = a4_114
	a5Out = a5_115
	s2Out = s2_121
	s3Out = s3
	s4Out = s4_207
	s5Out = s4
	s6Out = s6
	s7Out = s7
	return ra_112
bl_mtd_write_exit:


word32 bl_mtd_read(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_port_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra
// Preserved: sp
bl_mtd_read_entry:
l23055254:
	word32 a4_14
	word32 a1_16
	word32 a3_18
	word32 ra_19 = bl_flash_read(ra, Mem5[a0 + 20<i32>:word32] + a1, a3, a2, out a1_16, out a3_18, out a4_14)
	a0Out = 0<32>
	a1Out = a1_16
	a3Out = a3_18
	a4Out = a4_14
	return ra_19
bl_mtd_read_exit:


word32 bloop_init(word32 ra, word32 a0, word32 dwArg18, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
//      cmd_looprt_test
// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: ra s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
bloop_init_entry:
l2305526A:
	word32 s1_16 = a0 + 272<i32>
	word32 a3_20
	word32 a5_102
	word32 a4_101
	word32 a2_100
	word32 a1_99
	word32 a0_98
	word32 t1_97
	word32 ra_23 = memset(ra, a0, 0<32>, 1184<i32>, out t1_97, out a0_98, out a1_99, out a2_100, out a3_20, out a4_101, out a5_102)
l23055288:
	utils_list_init(s1_16)
	s1_16 = s1_16 + 8<32>
	branch s1_16 != a0 + 528<i32> l23055288
l23055294:
	Mem33[a0 + 1172<i32>:word32] = a0 + 1168<i32>
	Mem34[a0 + 1168<i32>:word32] = a0 + 1168<i32>
	Mem37[a0 + 1180<i32>:word32] = a0 + 1176<i32>
	Mem38[a0 + 1176<i32>:word32] = a0 + 1176<i32>
	word32 a1_104
	word32 s1_53
	word32 s3_57
	word32 a0_103
	word32 a2_105
	word32 a3_106
	word32 a4_107
	word32 a5_108
	word32 a7_109
	word32 s2_110
	word32 s4_111
	word32 s5_112
	word32 s6_113
	word32 s7_114
	word32 s8_115
	word32 s9_116
	word32 s10_117
	word32 s11_118
	word32 t4_119
	word32 ra_52 = printf(ra_23, 0x2308888C<32>, a3_20, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_53, out a0_103, out a1_104, out a2_105, out a3_106, out a4_107, out a5_108, out a7_109, out s2_110, out s3_57, out s4_111, out s5_112, out s6_113, out s7_114, out s8_115, out s9_116, out s10_117, out s11_118, out t4_119)
	0<32> = dwArg38
	s1Out = s1_53
	s3Out = s3_57
	return ra_52
bloop_init_exit:


word32 bloop_handler_register(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
//      cmd_looprt_test
//      loopset_led_hook_on_looprt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a5
// Trashed: a0 a2 a5
// Preserved: sp
bloop_handler_register_entry:
l230552CA:
	word32 a5_10 = 0x1F<32>
	branch a2 >u 0x1F<32> l230552E4
l230552E4:
l230552D0:
	word32 a2_8 = (a2 << 2<i32>) + a0
	a5_10 = Mem0[a2_8 + 1040<i32>:int32]
	branch a5_10 != 0<32> l230552E6
l230552E6:
	return a5_10
l230552DC:
	Mem13[a2_8 + 1040<i32>:word32] = a1
	return a5_10
bloop_handler_register_exit:


word32 bloop_timer_init(word32 ra, word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test_schedule_evt2
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: s0 sp
bloop_timer_init_entry:
l230552E8:
	word32 t1_39
	word32 a0_40
	word32 a1_41
	word32 a2_42
	word32 a3_43
	word32 a4_44
	word32 a5_45
	memset(ra, a0, 0<32>, 36<i32>, out t1_39, out a0_40, out a1_41, out a2_42, out a3_43, out a4_44, out a5_45)
	Mem27[a0:word32] = a0
	Mem28[a0 + 4<i32>:word32] = a0
	Mem29[a0 + 8<i32>:byte] = SLICE(CONVERT(a1 != 0<32>, bool, word32) << 1<i32>, byte, 0)
	return a1
bloop_timer_init_exit:


word32 bloop_timer_configure(word32 a0, word32 a1, word32 a3, word32 a4, word32 dwArgB4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test_schedule_evt2
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] Stack +00B4:[0..31]
// LiveOut: s0
// Trashed: a0 a2 a5 a6 s0 s4 s8 t3
// Preserved: sp
bloop_timer_configure_entry:
l23055316:
	word32 a5_21
	word32 a0_20 = xTaskGetTickCount(out a5_21)
	Mem27[a0_20 + 12<i32>:word32] = a0
	Mem29[a0_20 + a1 + 16<i32>:word32] = a0
	Mem30[dwArgB4 + 28<i32>:word32] = a0
	Mem31[a3 + 32<i32>:word32] = a0
	Mem32[a4 + 20<i32>:word32] = a0
	Mem33[a5_21 + 24<i32>:word32] = a0
	return dwArgE4
bloop_timer_configure_exit:


void bloop_timer_repeat_enable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_trigger
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
bloop_timer_repeat_enable_entry:
l2305534C:
	Mem7[a0 + 8<i32>:byte] = SLICE(CONVERT(Mem0[a0 + 8<i32>:byte], byte, word32) | 1<i32>, byte, 0)
	return
bloop_timer_repeat_enable_exit:


word32 bloop_timer_repeat_reconfigure(word32 s0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bloop_run
// MayUse:  a0:[0..31] s0:[0..31]
// LiveOut: s1
// Trashed: a0 a2 a5 s1 tp
// Preserved: s0 sp
bloop_timer_repeat_reconfigure_entry:
l2305535A:
	word32 s0_14 = s0 - Mem9[Mem9[s0 + 16<i32>:word32] + 12<i32>:word32]
	word32 a5_29
	word32 a0_15 = xTaskGetTickCount(out a5_29)
	Mem18[s0_14 + a0_15 + 16<i32>:word32] = a0
	Mem21[a0_15 + 12<i32>:word32] = a0
	return a0
bloop_timer_repeat_reconfigure_exit:


word32 bloop_timer_register(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_timer_register
//      cmd_looprt_test_schedule_evt2
//      bloop_run
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a2 a3 a4 a5
// Trashed: a2 a3 a4 a5 a6 a7
// Preserved: sp
bloop_timer_register_entry:
l2305537E:
	word32 a2_5 = Mem0[a0 + 1172<i32>:int32]
	branch a0 + 1168<i32> != a2_5 l230553CA
l230553CA:
	word32 a4_10 = a2_5
	word32 a5_16 = 0<32>
l230553BA:
	branch a0 + 1168<i32> != a4_10 l23055398
l23055398:
	branch Mem0[a1 + 16<i32>:int32] - Mem0[a4_10 + 16<i32>:int32] > 0<32> l230553B6
l230553B6:
	a5_16 = a4_10
	a4_10 = Mem0[a4_10 + 4<i32>:word32]
l230553A8:
	branch a5_16 != 0<32> l230553BE
l230553AA:
	Mem20[a2_5 + 4<i32>:word32] = a1
	Mem21[a0 + 1168<i32>:word32] = a1
	Mem23[a0 + 1172<i32>:word32] = a1
	Mem24[a1:word32] = a2_5
	a3Out = <invalid>
	a4Out = a4_10
	a5Out = a5_16
	return <invalid>
l230553BE:
	word32 a5_27 = Mem0[a4_10 + 4<i32>:word32]
	Mem29[a5_27:word32] = a1
	Mem30[a4_10 + 4<i32>:word32] = a1
	Mem31[a1 + 4<i32>:word32] = a5_27
	Mem32[a1:word32] = a4_10
	a3Out = <invalid>
	a4Out = a4_10
	a5Out = a5_27
	return <invalid>
l2305538A:
	Mem34[a0 + 1172<i32>:word32] = a1
	Mem35[a0 + 1168<i32>:word32] = a1
	Mem36[a0 + 1172<i32>:word32] = a1
	Mem37[a0 + 1168<i32>:word32] = a1
	a3Out = <invalid>
	a4Out = a4
	a5Out = a5
	return <invalid>
bloop_timer_register_exit:


word32 bloop_wait_startup(word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg0128, word32 dwArg0168, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
//      cmd_looprt_test
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a3 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
bloop_wait_startup_entry:
l230553D0:
l230553D8:
	branch a5 == 0<32> l230553E4
l230553E4:
	word32 a0_77
	word32 a1_78
	word32 s4_79
	word32 s8_80
	vTaskDelay(1<32>, a2, a3, a4, a5, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1, out a0_77, out a1_78, out a2, out a3, out a4, out a5, out s2, out s3, out s4_79, out s8_80)
l230553DC:
	a3Out = a3
	s2Out = s2
	s3Out = s3
	return s1
bloop_wait_startup_exit:


word32 bloop_evt_set_async(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s1Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bloop_evt_set_async_entry:
l230553EC:
	branch a1 <=u 0x1F<32> l23055412
l23055412:
	word32 a5_17
	vTaskEnterCritical(a4, mstatus, out a5_17)
	word32 a3_22 = 1<32> << a1
	Mem26[(a3_22 | 1<32>) + 4<i32>:word32] = Mem14[5<32>:word32]
	Mem29[(a5_17 | a2) + 16<i32>:word32] = Mem26[a5_17 + 16<i32>:word32]
	word32 a4_32
	word32 a5_105
	vTaskExitCritical(a3_22, mstatus, out a4_32, out a5_105)
l23055448_thunk_xTaskGenericNotify:
	word32 s1_46
	word32 mstatus_54
	word32 s0_125
	word32 a0_126
	word32 a1_127
	word32 a2_128
	word32 a3_129
	word32 a4_130
	word32 a5_131
	word32 s2_132
	word32 s3_133
	word32 s4_134
	word32 ra_55 = xTaskGenericNotify(ra, a0, 0<32>, 2<32>, 0<32>, a4_32, mstatus, dwArg14, dwArg38, dwArg58, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_125, out s1_46, out a0_126, out a1_127, out a2_128, out a3_129, out a4_130, out a5_131, out s2_132, out s3_133, out s4_134, out mstatus_54)
	s1Out = s1_46
	mstatusOut = mstatus_54
	return ra_55
bloop_evt_set_async_exit:
l230553F8:
	word32 s1_106
	word32 a0_107
	word32 a1_108
	word32 a2_109
	word32 a3_110
	word32 a4_111
	word32 a5_112
	word32 a7_113
	word32 s2_114
	word32 s3_115
	word32 s4_116
	word32 s5_117
	word32 s6_118
	word32 s7_119
	word32 s8_120
	word32 s9_121
	word32 s10_122
	word32 s11_123
	word32 t4_124
	printf(ra, 0x23086048<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_106, out a0_107, out a1_108, out a2_109, out a3_110, out a4_111, out a5_112, out a7_113, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7_119, out s8_120, out s9_121, out s10_122, out s11_123, out t4_124)
l23055410:


word32 bloop_evt_set_sync(word32 ra, word32 a1, word32 a2, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bloop_run
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
bloop_evt_set_sync_entry:
l2305544C:
	branch a1 <=u 0x1F<32> l23055470
l23055470:
	word32 a3_6 = 1<32> << a1
	Mem11[(a3_6 | 1<32>) + 8<i32>:word32] = Mem0[9<32>:word32]
	word32 a0_12 = Mem11[0x2F<32>:word32]
	Mem15[(a2 | 0x1F<32>) + 16<i32>:word32] = a0_12
	a1Out = a1 << 2<i32>
	a3Out = a3_6
	a4Out = a3_6 | 1<32>
	a5Out = a2 | 0x1F<32>
	return a0_12
bloop_evt_set_sync_exit:
l23055452:
	word32 s1_58
	word32 a0_59
	word32 a1_60
	word32 a2_61
	word32 a3_62
	word32 a4_63
	word32 a5_64
	word32 a7_65
	word32 s2_66
	word32 s3_67
	word32 s4_68
	word32 s5_69
	word32 s6_70
	word32 s7_71
	word32 s8_72
	word32 s9_73
	word32 s10_74
	word32 s11_75
	word32 t4_76
	printf(ra, 0x23086048<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_58, out a0_59, out a1_60, out a2_61, out a3_62, out a4_63, out a5_64, out a7_65, out s2_66, out s3_67, out s4_68, out s5_69, out s6_70, out s7_71, out s8_72, out s9_73, out s10_74, out s11_75, out t4_76)
l2305546E:


word32 bloop_evt_unset_sync(word32 ra, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bloop_run
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
bloop_evt_unset_sync_entry:
l23055488:
	branch a1 <=u 0x1F<32> l230554AC
l230554AC:
	word32 a0_8 = Mem0[a1 + 8<i32>:word32]
	Mem11[(~(1<32> << a1) & a1) + 8<i32>:word32] = a0_8
	return a0_8
bloop_evt_unset_sync_exit:
l2305548E:
	word32 s1_50
	word32 a0_51
	word32 a1_52
	word32 a2_53
	word32 a3_54
	word32 a4_55
	word32 a5_56
	word32 a7_57
	word32 s2_58
	word32 s3_59
	word32 s4_60
	word32 s5_61
	word32 s6_62
	word32 s7_63
	word32 s8_64
	word32 s9_65
	word32 s10_66
	word32 s11_67
	word32 t4_68
	printf(ra, 0x23086048<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_50, out a0_51, out a1_52, out a2_53, out a3_54, out a4_55, out a5_56, out a7_57, out s2_58, out s3_59, out s4_60, out s5_61, out s6_62, out s7_63, out s8_64, out s9_65, out s10_66, out s11_67, out t4_68)
l230554AA:


void bloop_run(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s5, word32 s6, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg38, word32 dwArg5C, word32 dwArg6C, word32 dwArgD8, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      proc_entry_looprt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +006C:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
bloop_run_exit:
bloop_run_entry:
l230554BE:
	word32 a5_1000
	word32 a0_101 = xTaskGetCurrentTaskHandle(out a5_1000)
	Mem34[a0_101:word32] = a0
	word32 s0_15 = a0
	word32 s2_150 = 0x42021000<32>
	word32 s3_153 = 0x42021000<32>
	word32 s4_155 = 0x4200E000<32>
	word32 s5_165 = 0x23089000<32>
l230554F2:
	word32 s7_40 = s0_15 + 1168<i32>
l230554F6:
	word32 a5_43
	word32 a4_44 = vTaskEnterCritical(a4, mstatus, out a5_43)
	word32 s0_47 = Mem45[a4_44 + 4<i32>:word32]
	Mem48[s0_47 + 4<i32>:word32] = 0<32>
	Mem50[(a5_43 | a4_44) + 8<i32>:word32] = s0_47
	word32 a5_52
	word32 a4_104
	a3 = vTaskExitCritical(a3, mstatus, out a4_104, out a5_52)
	word32 s0_203 = Mem50[a5_52 + 8<i32>:word32]
	branch a5_52 != 0<32> l230555D2
l2305550E:
	word32 a5_487 = Mem50[s0_203 + 1172<i32>:int32]
	a1 = 0xFFFFFFFF<32>
	branch a5_487 == s7_40 l23055526
l23055518:
	a0_101 = xTaskGetTickCount(out a5_487)
	a1 = s1 - a0_101
	branch a1 <= 0<32> l230555D2
l230555D2:
	branch Mem50[s0_203 + 1172<i32>:int32] != s7_40 l23055622
l23055622:
	word32 a5_121
	word32 a0_68 = xTaskGetTickCount(out a5_121)
	word32 s1_126 = Mem50[s0_203 + 1172<i32>:int32]
	word32 s6_123 = 0<32>
	branch s1_126 == 0<32> l23055634
l23055630:
	s6_123 = Mem50[s1_126 + 4<i32>:int32]
l23055634:
	word32 s8_139 = s0_203 + 1176<i32>
	a0_101 = a0_68
l23055638:
	branch s1_126 != s7_40 l230556B2
l230556B2:
	a5_121 = a0_68 - a5_121
	branch a5_121 < 0<32> l2305563C
l230556BC:
	word32 a5_105
	a0_101 = bloop_evt_set_sync(ra, a1, a2, a3, s6, dwArg10, dwArg14, dwArg38, dwArg5C, out a1, out a3, out a4_104, out a5_105)
	branch a5_105 == 0<32> l230556D2
l230556CA:
	call a5_105 (retsize: 0;)
		uses: a1:Mem79[a2_491 + 32<i32>:word32],a2:a2_491,a3:a3_94,ra:ra_688,Stack +0018:s6,Stack +0060:dwArg10,Stack +0064:dwArg14,Stack +0088:dwArg38,Stack +00AC:dwArg5C
		defs: a0:a0_101,a1:a1_102,a3:a3_103,a4:a4_104,a5:a5_105
l230556D2:
	word32 s1_110 = Mem79[a4_104:word32]
	Mem111[a5_105 + 4<i32>:word32] = a4_104
	Mem112[a4_104:word32] = a5_105
	word32 a5_114 = Mem112[s0_203 + 1180<i32>:int32]
	Mem117[s1_110:word32] = s0_203 + 1176<i32>
	Mem118[a5_114 + 4<i32>:word32] = s1_110
	Mem119[s0_203 + 1180<i32>:word32] = s1_110
	Mem120[s1_110:word32] = a5_114
	a5_121 = 0<32>
	branch s6_123 == 0<32> l230556F4
l230556F0:
	a5_121 = Mem120[s6_123 + 4<i32>:int32]
l230556F4:
	s1_126 = s6_123
	s6_123 = a5_121
l2305563C:
	word32 s1_131 = Mem79[s0_203 + 1180<i32>:int32]
	word32 s6_132 = 0<32>
	branch s1_131 == 0<32> l23055648
l23055644:
	s6_132 = Mem79[s1_131 + 4<i32>:int32]
l23055648:
	word32 s7_134 = 1<32>
	word32 s10_136 = 0x23089000<32>
	word32 s11_137 = 0x23089000<32>
l23055656:
	branch s1_131 == s8_139 l230555DA
l2305565A:
	word32 s1_144 = Mem141[a5_121 + 4<i32>:word32]
	Mem145[a5_121 + 4<i32>:word32] = a4_104
	Mem146[a4_104:word32] = a5_121
	word32 a5_147 = CONVERT(Mem146[s1_144 + 8<i32>:byte], byte, word32)
	a4_104 = a5_147 & 2<i32>
	branch (a5_147 & 2<i32>) == 0<32> l23055700
l23055700:
	branch (a5_147 & 1<32>) == 0<32> l230556A2
l23055704:
	branch s7_134 <u CONVERT(Mem146[s2_150 + -668<i32>:byte], byte, word32) l23055734
l2305570C:
	branch s7_134 <u CONVERT(Mem146[s3_153 + -667<i32>:byte], byte, word32) l23055734
l23055714:
	branch Mem146[s4_155 + -380<i32>:int32] == 0<32> l23055744
l23055744:
	word32 a5_1064
	xTaskGetTickCount(out a5_1064)
l2305571A:
	word32 a5_1065
	xTaskGetTickCountFromISR(out a5_1065)
l2305571E:
	word32 a3_1069
	word32 a4_1070
	word32 a5_1071
	word32 s9_1072
	word32 a0_1066
	word32 a1_1067
	word32 a2_1068
	ra = bl_printk(ra, s10_136 + -1852<i32>, s5_165 + -1924<i32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_144, out a0_1066, out a1_1067, out a2_1068, out a3_1069, out a4_1070, out a5_1071, out s2_150, out s3_153, out s4_155, out s5_165, out s6_132, out s7_134, out s8_139, out s9_1072, out s10_136, out s11_137)
l23055734:
	word32 s1_208 = bloop_timer_repeat_reconfigure(s0_203, s1_144)
	a1 = s1_208
	a0_101 = s0_203
	word32 a5_1063
	a2 = bloop_timer_register(s0_203, s1_208, out a3, out a4_104, out a5_1063)
l2305566C:
	word32 a5_218 = CONVERT(Mem146[s2_150 + -668<i32>:byte], byte, word32)
	branch s7_134 <u a5_218 l2305569C
l23055674:
	a5_218 = CONVERT(Mem146[s3_153 + -667<i32>:byte], byte, word32)
	branch s7_134 <u a5_218 l2305569C
l2305567C:
	branch Mem146[s4_155 + -380<i32>:int32] == 0<32> l230556FA
l230556FA:
	word32 a5_1055
	xTaskGetTickCount(out a5_1055)
l23055682:
	word32 a5_1056
	xTaskGetTickCountFromISR(out a5_1056)
l23055686:
	word32 s9_1062
	word32 a1_1058
	word32 s4_1061
	word32 a3_1059
	word32 a4_1060
	word32 a0_1057
	ra = bl_printk(ra, s11_137 + -1884<i32>, s5_165 + -1924<i32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_144, out a0_1057, out a1_1058, out a2, out a3_1059, out a4_1060, out a5_218, out s2_150, out s3_153, out s4_1061, out s5_165, out s6_132, out s7_134, out s8_139, out s9_1062, out s10_136, out s11_137)
l2305569C:
	word32 t3_1054
	word32 a6_1053
	word32 s1_1051
	word32 a5_1052
	vPortFree(s1_144, a2, a5_218, mstatus, dwArg0108, dwArg0148, out s0_203, out s1_1051, out a0_101, out a1, out a2, out a3, out a4_104, out a5_1052, out a6_1053, out s4_155, out t3_1054)
l230556A2:
	a5_121 = 0<32>
	branch s6_132 == 0<32> l230556AC
l230556A8:
	a5_121 = Mem146[s6_132 + 4<i32>:int32]
l230556AC:
	s1_131 = s6_132
	s6_132 = a5_121
l230555DA:
	word32 a4_1001
	word32 a0_308 = __clzsi2(a0_101, out a4_1001)
	s0_15 = Mem306[a0_308 + 12<i32>:word32]
	s1 = a0_308
	word32 a0_313 = __clzsi2(a0_308, out a4)
	branch a0_313 >= a0_308 l2305552E
l2305552E:
	s1 = 0x1F<32> - a0_308
	branch s1 == 0xFFFFFFFF<32> l230555EC
l2305553A:
	word32 s6_320 = (s1 << 2<u32>) + s0_15
	branch Mem306[s6_320 + 1040<i32>:int32] != 0<32> l23055560
l23055560:
	word32 a5_1022
	vTaskEnterCritical(a4, mstatus, out a5_1022)
	word32 a4_330 = Mem325[s6_320 + 16<i32>:int32]
	word32 a5_331 = Mem325[s6_320 + 144<i32>:int32]
	Mem332[s6_320 + 16<i32>:word32] = 0<32>
	Mem334[s6_320 + 144<i32>:word32] = a5_331 | a4_330
	word32 a4_1023
	word32 a5_1024
	vTaskExitCritical(a3, mstatus, out a4_1023, out a5_1024)
	call a5_350 (retsize: 0;)
	word32 a5_350
	word32 a3_1027
	word32 a4_1028
	word32 a2_1026
	word32 a1_1025
	word32 a0_345 = bl_timer_now_us(out a1_1025, out a2_1026, out a3_1027, out a4_1028, out a5_350)
	word32 a5_1031
	word32 a4_1030
	word32 a1_1029
	word32 a0_377 = bl_timer_now_us(out a1_1029, out a2, out a3, out a4_1030, out a5_1031)
	word32 a5_390 = (s1 << 4<u32>) + s0_15
	word32 a4_391 = Mem334[a5_390 + 536<i32>:int32]
	word32 a0_392 = a0_377 - a0_345
	Mem393[a5_390 + 532<i32>:word32] = a0_392
	Mem395[a5_390 + 536<i32>:word32] = a4_391 + a0_392
	branch Mem395[a5_390 + 528<i32>:int32] >=u a0_392 l230555BE
l230555BA:
	Mem397[a5_390 + 528<i32>:word32] = a0_392
l230555BE:
	word32 a4_400 = Mem399[a5_390 + 540<i32>:int32]
	Mem406[a5_390 + 540<i32>:word32] = a4_400 + 1<32>
	a1 = s1
	a4 = a4_400 + 1<32>
	a0_101 = bloop_evt_unset_sync(ra, s1, a3, s6, dwArg10, dwArg14, dwArg38, dwArg5C)
l23055546:
	word32 a7_1039
	word32 a2_1035
	word32 s5_1043
	word32 s9_1047
	word32 t4_1050
	word32 s10_1048
	word32 s11_1049
	word32 s8_1046
	word32 s6_1044
	word32 s7_1045
	word32 s4_1042
	word32 s2_1040
	word32 s3_1041
	word32 a5_1038
	word32 a3_1036
	word32 a4_1037
	word32 a1_1034
	word32 s1_1032
	word32 a0_1033
	printf(ra, 0x23086048<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_1032, out a0_1033, out a1_1034, out a2_1035, out a3_1036, out a4_1037, out a5_1038, out a7_1039, out s2_1040, out s3_1041, out s4_1042, out s5_1043, out s6_1044, out s7_1045, out s8_1046, out s9_1047, out s10_1048, out s11_1049, out t4_1050)
l2305555E:
l230555EC:
	a0_101 = 0x1F<32> - a0_313
	branch a0_101 == 0xFFFFFFFF<32> l230554F2
l230555F8:
	word32 a5_1002
	a0_101 = utils_list_pop_front(a4, 0xFFFFFFFF<32>, out a5_1002)
	branch a0_101 != 0<32> l230554F2
l23055608:
	word32 s10_1019
	word32 s11_1020
	word32 t4_1021
	word32 s1_1003
	word32 a0_1004
	word32 s9_1018
	word32 a1_1005
	word32 s3_1012
	word32 s4_1013
	word32 s5_1014
	word32 s8_1017
	word32 s6_1015
	word32 s7_1016
	word32 a2_1006
	word32 a3_1007
	word32 a7_1010
	word32 s2_1011
	word32 a4_1008
	word32 a5_1009
	printf(ra, 0x23086048<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_1003, out a0_1004, out a1_1005, out a2_1006, out a3_1007, out a4_1008, out a5_1009, out a7_1010, out s2_1011, out s3_1012, out s4_1013, out s5_1014, out s6_1015, out s7_1016, out s8_1017, out s9_1018, out s10_1019, out s11_1020, out t4_1021)
l23055620:
l23055526:
	a0_101 = 1<32>
	s1 = ulTaskNotifyTake(1<32>, a1, a2, a3, a4_104, a5_487, mstatus, s6, dwArgD8, out a2, out a3, out a4, out s2_150, out s3_153)


word32 bloop_status_dump(word32 ra, word32 a3, word32 s5, word32 dwArg20, word32 dwArg24, word32 dwArg6C, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test_status
//      loop_evt_entity_sys_evt
// MayUse:  a3:[0..31] ra:[0..31] s5:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +006C:[0..31] Stack +010C:[0..31]
// LiveOut: a3 ra s0 s1 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bloop_status_dump_entry:
l2305574A:
	word32 a5_516
	word32 a4_515
	word32 a2_514
	word32 a1_513
	word32 a0_512
	word32 s4_517
	word32 s8_518
	puts(0x230888F0<32>, out a0_512, out a1_513, out a2_514, out a4_515, out a5_516, out s4_517, out s8_518)
	word32 a1_51
	word32 a3_53
	word32 s10_533
	word32 t4_535
	word32 s11_534
	word32 s6_529
	word32 s8_531
	word32 s7_530
	word32 s9_532
	word32 s2_525
	word32 s4_527
	word32 s3_526
	word32 s5_528
	word32 a2_521
	word32 a5_523
	word32 a4_522
	word32 a7_524
	word32 s1_519
	word32 a0_520
	word32 ra_56 = printf(ra, 0x2308890C<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_519, out a0_520, out a1_51, out a2_521, out a3_53, out a4_522, out a5_523, out a7_524, out s2_525, out s3_526, out s4_527, out s5_528, out s6_529, out s7_530, out s8_531, out s9_532, out s10_533, out s11_534, out t4_535)
	word32 s0_70 = Mem33[a1_51 + 12<i32>:word32]
	word32 t4_553
	word32 s8_549
	word32 s10_551
	word32 s9_550
	word32 s11_552
	word32 s4_545
	word32 s6_547
	word32 s5_546
	word32 s7_548
	word32 a5_541
	word32 s2_543
	word32 a7_542
	word32 s3_544
	word32 a0_537
	word32 a2_539
	word32 a1_538
	word32 a4_540
	word32 s1_536
	word32 a3_137
	word32 ra_130 = printf(ra_56, 0x23088920<32>, a3_53, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_536, out a0_537, out a1_538, out a2_539, out a3_137, out a4_540, out a5_541, out a7_542, out s2_543, out s3_544, out s4_545, out s5_546, out s6_547, out s7_548, out s8_549, out s9_550, out s10_551, out s11_552, out t4_553)
	word32 a5_554
	xTaskGetTickCount(out a5_554)
	word32 a4_557
	word32 s8_559
	word32 a5_558
	word32 a0_555
	word32 a1_556
	word32 a2_101
	word32 s4_107
	puts(0x23088934<32>, out a0_555, out a1_556, out a2_101, out a4_557, out a5_558, out s4_107, out s8_559)
	word32 s1_110 = Mem33[s0_70 + 1172<i32>:int32]
	word32 s3_111 = s0_70 + 1168<i32>
	word32 s5_113 = 0x23089000<32>
l230557B0:
	branch s3_111 != s1_110 l23055884
l23055884:
	word32 s1_141
	word32 t4_572
	word32 s11_571
	word32 s10_570
	word32 s9_569
	word32 s2_565
	word32 s7_567
	word32 s6_566
	word32 s8_568
	word32 a1_561
	word32 a5_563
	word32 a4_562
	word32 a7_564
	word32 a0_560
	ra_130 = printf(ra_130, s5_113 + -1716<i32>, s4_107 - a2_101, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_141, out a0_560, out a1_561, out a2_101, out a3_137, out a4_562, out a5_563, out a7_564, out s2_565, out s3_111, out s4_107, out s5_113, out s6_566, out s7_567, out s8_568, out s9_569, out s10_570, out s11_571, out t4_572)
	s1_110 = Mem33[s1_141 + 4<i32>:word32]
l230557B4:
	word32 a1_574
	word32 a0_573
	word32 a2_575
	word32 a4_576
	word32 a5_577
	word32 a7_578
	word32 s2_579
	word32 s3_580
	word32 s4_581
	word32 s5_582
	word32 s6_583
	word32 s7_584
	word32 s8_585
	word32 s9_586
	word32 s10_587
	word32 s11_588
	word32 t4_589
	word32 s1_172
	word32 a3_168
	word32 ra_171 = printf(ra_130, 0x23088998<32>, a3_137, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_172, out a0_573, out a1_574, out a2_575, out a3_168, out a4_576, out a5_577, out a7_578, out s2_579, out s3_580, out s4_581, out s5_582, out s6_583, out s7_584, out s8_585, out s9_586, out s10_587, out s11_588, out t4_589)
	word32 s5_188 = 0x23089000<32>
l230557EE:
	branch Mem195[s1_172 + 1024<i32>:int32] == 0<32> l230557F8
l230557F6:
l230557F8:
	word32 s6_229
	word32 a0_590
	word32 a1_591
	word32 a2_592
	word32 a4_593
	word32 a5_594
	word32 a7_595
	word32 s3_596
	word32 s4_597
	word32 s7_598
	word32 s8_599
	word32 s9_600
	word32 s10_601
	word32 s11_602
	word32 t4_603
	word32 s2_225
	word32 s1_222
	ra_171 = printf(ra_171, s5_188 + -1624<i32>, a3_168, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_222, out a0_590, out a1_591, out a2_592, out a3_168, out a4_593, out a5_594, out a7_595, out s2_225, out s3_596, out s4_597, out s5_188, out s6_229, out s7_598, out s8_599, out s9_600, out s10_601, out s11_602, out t4_603)
	branch Mem195[s1_222 + 1024<i32>:int32] == 0<32> l23055858
l2305580A:
	word32 a3_246
	word32 s7_258
	word32 a3_270
	word32 s8_283
	word32 a3_294
	word32 s9_308
	word32 a3_319
	word32 s10_324
	word32 s1_604
	word32 a0_605
	word32 a1_606
	word32 a2_607
	word32 a4_608
	word32 a5_609
	word32 a7_610
	word32 s2_611
	word32 s3_612
	word32 s4_613
	word32 s5_614
	word32 s6_615
	word32 s8_616
	word32 s9_617
	word32 s10_618
	word32 s11_619
	word32 t4_620
	word32 s1_621
	word32 a0_622
	word32 a1_623
	word32 a2_624
	word32 a4_625
	word32 a5_626
	word32 a7_627
	word32 s2_628
	word32 s3_629
	word32 s4_630
	word32 s5_631
	word32 s6_632
	word32 s7_633
	word32 s9_634
	word32 s10_635
	word32 s11_636
	word32 t4_637
	word32 s1_638
	word32 a0_639
	word32 a1_640
	word32 a2_641
	word32 a4_642
	word32 a5_643
	word32 a7_644
	word32 s2_645
	word32 s3_646
	word32 s4_647
	word32 s5_648
	word32 s6_649
	word32 s7_650
	word32 s8_651
	word32 s10_652
	word32 s11_653
	word32 t4_654
	word32 s1_655
	word32 a0_656
	word32 a1_657
	word32 a2_658
	word32 a4_659
	word32 a5_660
	word32 a7_661
	word32 s2_662
	word32 s3_663
	word32 s4_664
	word32 s5_665
	word32 s6_666
	word32 s7_667
	word32 s8_668
	word32 s9_669
	word32 s11_670
	word32 t4_671
	word32 a0_672
	word32 a1_673
	word32 a2_674
	word32 a4_675
	word32 a5_676
	word32 a7_677
	word32 s3_678
	word32 s4_679
	word32 s6_680
	word32 s7_681
	word32 s8_682
	word32 s9_683
	word32 s10_684
	word32 s11_685
	word32 t4_686
	ra_171 = printf(printf(printf(printf(printf(ra_171, s6_229 + -1600<i32>, a3_168, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_604, out a0_605, out a1_606, out a2_607, out a3_246, out a4_608, out a5_609, out a7_610, out s2_611, out s3_612, out s4_613, out s5_614, out s6_615, out s7_258, out s8_616, out s9_617, out s10_618, out s11_619, out t4_620), s7_258 + -1576<i32>, a3_246, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_621, out a0_622, out a1_623, out a2_624, out a3_270, out a4_625, out a5_626, out a7_627, out s2_628, out s3_629, out s4_630, out s5_631, out s6_632, out s7_633, out s8_283, out s9_634, out s10_635, out s11_636, out t4_637), s8_283 + -1556<i32>, a3_270, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_638, out a0_639, out a1_640, out a2_641, out a3_294, out a4_642, out a5_643, out a7_644, out s2_645, out s3_646, out s4_647, out s5_648, out s6_649, out s7_650, out s8_651, out s9_308, out s10_652, out s11_653, out t4_654), s9_308 + -1536<i32>, a3_294, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_655, out a0_656, out a1_657, out a2_658, out a3_319, out a4_659, out a5_660, out a7_661, out s2_662, out s3_663, out s4_664, out s5_665, out s6_666, out s7_667, out s8_668, out s9_669, out s10_324, out s11_670, out t4_671), s10_324 + -1508<i32>, a3_319, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_222, out a0_672, out a1_673, out a2_674, out a3_168, out a4_675, out a5_676, out a7_677, out s2_225, out s3_678, out s4_679, out s5_188, out s6_680, out s7_681, out s8_682, out s9_683, out s10_684, out s11_685, out t4_686)
l23055858:
	s1_172 = s1_222 + 0xFFFFFFFC<32>
	branch s2_225 != 0<32> l230557EE
l23055864:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a3Out = s2
	s5Out = s5_188
	return dwLoc08
bloop_status_dump_exit:


void loop_evt_entity_sys_handler(word32 ra, word32 a5, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
loop_evt_entity_sys_handler_entry:
l230558A2:
	word32 s1_50
	word32 a0_51
	word32 a1_52
	word32 a2_53
	word32 a3_54
	word32 a4_55
	word32 a5_56
	word32 a7_57
	word32 s2_58
	word32 s3_59
	word32 s4_60
	word32 s5_61
	word32 s6_62
	word32 s7_63
	word32 s8_64
	word32 s9_65
	word32 s10_66
	word32 s11_67
	word32 t4_68
	printf(ra, 0x23088AB0<32>, CONVERT(Mem5[Mem5[a5 + 8<i32>:word32] + 6<i32>:byte], byte, word32), dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_50, out a0_51, out a1_52, out a2_53, out a3_54, out a4_55, out a5_56, out a7_57, out s2_58, out s3_59, out s4_60, out s5_61, out s6_62, out s7_63, out s8_64, out s9_65, out s10_66, out s11_67, out t4_68)
	return
loop_evt_entity_sys_handler_exit:


void loop_evt_entity_sys_evt(word32 ra, word32 s0, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, word32 dwArgFC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00FC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
loop_evt_entity_sys_evt_entry:
l230558D2:
	word32 a0_182
	word32 a1_183
	word32 a2_184
	word32 a4_185
	word32 a5_186
	word32 a7_187
	word32 s2_188
	word32 s3_189
	word32 s4_190
	word32 s6_191
	word32 s7_192
	word32 s8_193
	word32 s9_194
	word32 s10_195
	word32 s11_196
	word32 t4_197
	word32 a3_26
	word32 s5_36
	word32 s1_109
	word32 ra_29 = printf(ra, 0x23088A5C<32>, Mem11[s0:word32], dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_109, out a0_182, out a1_183, out a2_184, out a3_26, out a4_185, out a5_186, out a7_187, out s2_188, out s3_189, out s4_190, out s5_36, out s6_191, out s7_192, out s8_193, out s9_194, out s10_195, out s11_196, out t4_197)
l230558F2:
	branch (s0 & 1<i32>) == 0<32> l23055914
l23055914:
	branch s0 == 0<32> l23055902
l23055916:
	word32 s1_198
	word32 a0_199
	word32 a1_200
	word32 a2_201
	word32 a3_202
	word32 a4_203
	word32 a5_204
	word32 a7_205
	word32 s2_206
	word32 s3_207
	word32 s4_208
	word32 s5_209
	word32 s6_210
	word32 s7_211
	word32 s8_212
	word32 s9_213
	word32 s10_214
	word32 s11_215
	word32 t4_216
	printf(ra_29, 0x23086048<32>, a3_26, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_198, out a0_199, out a1_200, out a2_201, out a3_202, out a4_203, out a5_204, out a7_205, out s2_206, out s3_207, out s4_208, out s5_209, out s6_210, out s7_211, out s8_212, out s9_213, out s10_214, out s11_215, out t4_216)
l2305592E:
l230558F8:
	ra_29 = bloop_status_dump(ra_29, a3_26, s5_36, dwArg10, dwArg14, dwArg5C, dwArgFC, out s0, out s1_109, out a3_26, out s5_36)
	branch s0 != 0<32> l230558F2
l23055902:
	Mem111[s1_109:word32] = 0<32>
	0<32> = dwArg38
	return
loop_evt_entity_sys_evt_exit:


void misaligned_load_trap(word32 gp, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 mcause, word32 mtval)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      exception_entry
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] gp:[0..31] mcause:[0..31] mstatus:[0..31] mtval:[0..31]
// LiveOut:
// Trashed: a1 a3 a4 a5 a6 a7 s0 t0 t1 t3 t4 t5 t6
// Preserved: a2 sp
misaligned_load_trap_entry:
l23055930:
	__csrrs(mstatus, 0<32>)
	branch (a2 & 2<i32>) != 0<32> l23055952
l23055952:
	a5 = CONVERT(Mem0[a2:uint16], uint16, word32)
	branch (a5 & 3<32>) != 3<32> l23055966
l2305595E:
	a5 = a5 + (CONVERT(Mem0[a2 + 2<i32>:uint16], uint16, word32) << 16<i32>)
l23055942:
	a2 = Mem0[a5:word32]
	branch (a5 & 3<32>) == 3<32> l23055966
l2305594C:
	a5 = CONVERT(SLICE(a5, word16, 0), word16, word32)
l23055966:
	__csrrw(mstatus, 0<32>)
	word32 t6_121 = a5
	word32 t3_26 = 4<32>
	branch (a5 & 3<i32>) == 3<32> l2305597A
l23055978:
	t3_26 = 2<32>
l2305597A:
	word32 a7_147
	word32 t1_119
	word32 a6_48
	word32 t3_31 = t3_26 + a2
	word32 t5_38 = __csrrs(mtval, gp)
	word32 a4_43 = a5 & 0x700007F<32>
	branch a4_43 == 0x2000003<32> l23055A46
l23055992:
	branch a4_43 == 0x2000007<32> l230559CE
l23055998:
	branch a4_43 == 0x1000003<32> l23055A56
l23055A56:
	a6_48 = 2<32>
	t1_119 = 0<32>
	a7_147 = 0x10<32>
l230559A0:
	branch a4_43 == 0x5000003<32> l23055A4E
l23055A4E:
	a6_48 = 2<32>
	t1_119 = 0<32>
	a7_147 = 0<32>
l230559A8:
	word32 a4_58 = a5 & 0xE000003<32>
	branch a4_58 == 0x4000000<32> l23055A5E
l23055A5E:
	t6_121 = (a5 >>u 2<i32> & 7<32>) + 8<32> << 7<u32>
	a6_48 = 4<32>
	t1_119 = 0<32>
	a7_147 = 0<32>
l230559B4:
	branch a4_58 == 0x4000002<32> l23055A40
l23055A40:
	branch (a5 >>u 7<i32> & 0x1F<32>) == 0<32> l230559C6
l23055A46:
	a6_48 = 4<32>
	t1_119 = 0<32>
	a7_147 = 0<32>
l230559BA:
	branch a4_58 == 0x6000000<32> l23055A70
l23055A70:
	t6_121 = (a5 >>u 2<i32> & 7<32>) + 8<32> << 7<u32>
	a6_48 = 4<32>
	t1_119 = 1<32>
	a7_147 = 0<32>
l230559C0:
	branch a4_58 == 0x6000002<32> l230559CE
l230559CE:
	a6_48 = 4<32>
	t1_119 = 1<32>
	a7_147 = 0<32>
l230559D4:
	word32 a6_99 = a6_48 + t5_38
	word32 a5_100 = t5_38
l230559E2:
	__csrrs(mstatus, 0<32>)
	a5_100 = a5_100 + 1<32>
	word32 t0_114 = CONVERT(Mem113[a5_100 + -1<i32>:byte], byte, word32)
	__csrrw(mstatus, 0<32>)
	word32 a4_106 = a5_100 - t5_38 + (fp + 0xFFFFFFF8<32>)
	Mem115[a4_106:byte] = SLICE(t0_114, byte, 0)
	branch a6_99 != a5_100 l230559E2
l23055A06:
	branch t1_119 != 0<32> l23055A2A
l23055A2A:
	Mem137[a4_106:word32] = ((t6_121 >>u 7<u32> & 0x1F<32>) + 1<32> << 2<i32>) + a0
	Mem142[a0:word32] = t3_31
	return
l23055A0C:
	Mem151[(t6_121 >>u 5<u32> & 124<i32>) + a0 + 124<i32>:word32] = a4_106 << a7_147 >> a7_147
	Mem152[a0:word32] = t3_31
	return
misaligned_load_trap_exit:
l230559C6:
	__csrrw(mcause, 5<32>)
	__ebreak()
l230559CC:


void misaligned_store_trap(word32 gp, word32 a0, word32 a2, word32 a5, word32 fs0, word32 fs1, word32 fa0, word32 fa1, word32 fa2, word32 fa3, word32 fa4, word32 fa5, word32 mstatus, word32 mcause, word32 mtval)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      exception_entry
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] fa0:[0..31] fa1:[0..31] fa2:[0..31] fa3:[0..31] fa4:[0..31] fa5:[0..31] fs0:[0..31] fs1:[0..31] gp:[0..31] mcause:[0..31] mstatus:[0..31] mtval:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa1 fa2 fa3 fa4 fa5 fs0 fs1 gp mcause mstatus mtval t0 t1 t3 t4
// Preserved: sp
misaligned_store_trap_entry:
l23055A82:
	__csrrs(mstatus, 0<32>)
	branch (a2 & 2<i32>) != 0<32> l23055AA4
l23055AA4:
	a5 = CONVERT(Mem0[a2:uint16], uint16, word32)
	branch (a5 & 3<32>) != 3<32> l23055AB8
l23055AB0:
	a5 = a5 + (CONVERT(Mem0[a2 + 2<i32>:uint16], uint16, word32) << 16<i32>)
l23055A94:
	a2 = Mem0[a5:word32]
	branch (a5 & 3<32>) == 3<32> l23055AB8
l23055A9E:
	a5 = CONVERT(SLICE(a5, word16, 0), word16, word32)
l23055AB8:
	__csrrw(mstatus, 0<32>)
	word32 t4_30 = 4<32>
	branch (a5 & 3<i32>) == 3<32> l23055ACE
l23055ACC:
	t4_30 = 2<32>
l23055ACE:
	word32 a4_104
	word32 a4_48 = a5 & 0x700007F<32>
	word32 t4_51 = t4_30 + a2
	branch a4_48 == 0x2000023<32> l23055B74
l23055B74:
	a4_104 = 4<32>
l23055AF4:
	branch a4_48 == 0x2000027<32> l23055B2C
l23055B2C:
	word32 a5_54 = a5 >>u 17<i32>
	word32 a5_58 = 0x23055B34<p32> + (a5_54 & 248<i32>)
	word32 mcause_73
	word32 mtval_75
	word32 gp_76
	word32 fa4_78
	word32 fa5_79
	word32 fa3_80
	word32 fa2_81
	word32 fa1_82
	word32 fa0_83
	word32 fs1_84
	word32 fs0_85
	call a5_58 + 154<i32> (retsize: 0;)
		uses: a0:a5_54 & 248<i32>,a2:0x2000027<32>,a4:4<32>,a5:a5_58,fa0:fa0_83,fa1:fa1_82,fa2:fa2_81,fa3:fa3_80,fa4:fa4_78,fa5:fa5_79,fs0:fs0_85,fs1:fs1_84,gp:gp_76,mcause:mcause_73,mstatus:mstatus,mtval:mtval_75,t0:0x23055B3E<p32>
		defs: fa0:fa0_83,fa1:fa1_82,fa2:fa2_81,fa3:fa3_80,fa4:fa4_78,fa5:fa5_79,fs0:fs0_85,fs1:fs1_84,gp:gp_76,mcause:mcause_73,mtval:mtval_75
	return
l23055AFC:
	branch a4_48 == 0x1000023<32> l23055B84
l23055B84:
	a4_104 = 2<32>
l23055B06:
	word32 a4_91 = a5 & 0xE000003<32>
	branch a4_91 == 0xC000000<32> l23055B78
l23055B78:
	a4_104 = 4<32>
l23055B14:
	branch a4_91 == 0xC000002<32> l23055BA2
l23055BA2:
	branch (a5 >>u 7<u32> & 0x1F<32>) == 0<32> l23055B24
l23055BAA:
	a4_104 = 4<32>
l23055B40:
	word32 a5_116 = fp + 0xFFFFFFF8<32>
	word32 a4_118 = a4_104 + (fp + 0xFFFFFFF8<32>)
	word32 a7_119 = __csrrs(mtval, gp) - (fp + 0xFFFFFFF8<32>)
l23055B4C:
	word32 a0_124 = CONVERT(Mem123[a5_116:byte], byte, word32)
	__csrrs(mstatus, 0<32>)
	Mem130[a7_119 + a5_116:byte] = SLICE(a0_124, byte, 0)
	__csrrw(mstatus, 0<32>)
	a5_116 = a5_116 + 1<32>
	branch a4_118 != a5_116 l23055B4C
l23055B6C:
	Mem137[a0:word32] = t4_51
	return
l23055B1A:
	branch a4_91 == 0xE000000<32> l23055B88
l23055B88:
	word32 a0_142 = (a5 >>u 2<u32> & 7<32>) + 8<32>
	word32 a5_146 = 0x23055B94<p32> + (a0_142 << 3<i32>)
	switch (a0_142 << 3<i32>) { l23055C0E l23055C16 l23055C1E l23055C26 l23055C2E l23055C36 l23055C3E l23055C46 }
l23055C46:
	word32 mcause_164
	word32 t0_165
	word32 fa4_169
	word32 fa3_171
	word32 fa2_172
	word32 fa1_173
	word32 fa0_174
	word32 fs1_175
	word32 fs0_176
	call 0x23055B9E<p32> (retsize: 0;)
		uses: a0:fa5,a2:0xE000000<32>,a5:a5_146,fa0:fa0_174,fa1:fa1_173,fa2:fa2_172,fa3:fa3_171,fa4:fa4_169,fa5:fa5,fs0:fs0_176,fs1:fs1_175,gp:gp,mcause:mcause_164,mstatus:mstatus,mtval:mtval,t0:t0_165
		defs: fa0:fa0_174,fa1:fa1_173,fa2:fa2_172,fa3:fa3_171,fa4:fa4_169,fs0:fs0_176,fs1:fs1_175,mcause:mcause_164,t0:t0_165
	return
l23055C3E:
	word32 mcause_193
	word32 t0_194
	word32 fa3_200
	word32 fa2_201
	word32 fa1_202
	word32 fa0_203
	word32 fs1_204
	word32 fs0_205
	call 0x23055B9E<p32> (retsize: 0;)
		uses: a0:fa4,a2:0xE000000<32>,a5:a5_146,fa0:fa0_203,fa1:fa1_202,fa2:fa2_201,fa3:fa3_200,fa4:fa4,fa5:fa5,fs0:fs0_205,fs1:fs1_204,gp:gp,mcause:mcause_193,mstatus:mstatus,mtval:mtval,t0:t0_194
		defs: fa0:fa0_203,fa1:fa1_202,fa2:fa2_201,fa3:fa3_200,fs0:fs0_205,fs1:fs1_204,mcause:mcause_193,t0:t0_194
	return
l23055C36:
	word32 mcause_222
	word32 t0_223
	word32 fa2_230
	word32 fa1_231
	word32 fa0_232
	word32 fs1_233
	word32 fs0_234
	call 0x23055B9E<p32> (retsize: 0;)
		uses: a0:fa3,a2:0xE000000<32>,a5:a5_146,fa0:fa0_232,fa1:fa1_231,fa2:fa2_230,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_234,fs1:fs1_233,gp:gp,mcause:mcause_222,mstatus:mstatus,mtval:mtval,t0:t0_223
		defs: fa0:fa0_232,fa1:fa1_231,fa2:fa2_230,fs0:fs0_234,fs1:fs1_233,mcause:mcause_222,t0:t0_223
	return
l23055C2E:
	word32 mcause_251
	word32 t0_252
	word32 fa1_260
	word32 fa0_261
	word32 fs1_262
	word32 fs0_263
	call 0x23055B9E<p32> (retsize: 0;)
		uses: a0:fa2,a2:0xE000000<32>,a5:a5_146,fa0:fa0_261,fa1:fa1_260,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_263,fs1:fs1_262,gp:gp,mcause:mcause_251,mstatus:mstatus,mtval:mtval,t0:t0_252
		defs: fa0:fa0_261,fa1:fa1_260,fs0:fs0_263,fs1:fs1_262,mcause:mcause_251,t0:t0_252
	return
l23055C26:
	word32 mcause_280
	word32 t0_281
	word32 fa0_290
	word32 fs1_291
	word32 fs0_292
	call 0x23055B9E<p32> (retsize: 0;)
		uses: a0:fa1,a2:0xE000000<32>,a5:a5_146,fa0:fa0_290,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_292,fs1:fs1_291,gp:gp,mcause:mcause_280,mstatus:mstatus,mtval:mtval,t0:t0_281
		defs: fa0:fa0_290,fs0:fs0_292,fs1:fs1_291,mcause:mcause_280,t0:t0_281
	return
l23055C1E:
	word32 mcause_309
	word32 t0_310
	word32 fs1_320
	word32 fs0_321
	call 0x23055B9E<p32> (retsize: 0;)
		uses: a0:fa0,a2:0xE000000<32>,a5:a5_146,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_321,fs1:fs1_320,gp:gp,mcause:mcause_309,mstatus:mstatus,mtval:mtval,t0:t0_310
		defs: fs0:fs0_321,fs1:fs1_320,mcause:mcause_309,t0:t0_310
	return
l23055C16:
	word32 mcause_338
	word32 t0_339
	word32 fs0_350
	call 0x23055B9E<p32> (retsize: 0;)
		uses: a0:fs1,a2:0xE000000<32>,a5:a5_146,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_350,fs1:fs1,gp:gp,mcause:mcause_338,mstatus:mstatus,mtval:mtval,t0:t0_339
		defs: fs0:fs0_350,mcause:mcause_338,t0:t0_339
	return
l23055C0E:
	word32 mcause_367
	word32 t0_368
	call 0x23055B9E<p32> (retsize: 0;)
		uses: a0:fs0,a2:0xE000000<32>,a5:a5_146,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0,fs1:fs1,gp:gp,mcause:mcause_367,mstatus:mstatus,mtval:mtval,t0:t0_368
		defs: mcause:mcause_367,t0:t0_368
	return
l23055B1E:
	branch a4_91 == 0xE000002<32> l23055BB8
l23055BB8:
	word32 a5_381 = a5 << 1<i32>
	word32 a5_385 = 0x23055BC0<p32> + (a5_381 & 248<i32>)
	word32 mcause_399
	call a5_385 + 14<i32> (retsize: 0;)
		uses: a0:a5_381 & 248<i32>,a2:0xE000002<32>,a4:4<32>,a5:a5_385,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0,fs1:fs1,gp:gp,mcause:mcause_399,mstatus:mstatus,mtval:mtval,t0:0x23055BCA<p32>
		defs: mcause:mcause_399
	return
misaligned_store_trap_exit:
l23055B24:
	__csrrw(mcause, 7<32>)
	__ebreak()
l23055B2A:


void backtrace_riscv()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      exception_entry
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
backtrace_riscv_entry:
l23055DCE:
	return
backtrace_riscv_exit:


word32 set_if(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 s3, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArg0128, ptr32 & s1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcpd_start
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +0128:[0..31]
// LiveOut: s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t2 t3 t4 t5 t6
// Preserved: mstatus ra s10 s11 s3 s5 s6 s7 s9 sp tp
set_if_entry:
l23055DD2:
	word32 s0_108 = a0
	word32 s2_15 = a2
	word32 s1_17 = a3
	branch a1 == 0<32> l23055DF6
l23055DE4:
	word32 a0_21
	word32 a3_23
	word32 a4_24
	word32 a5_25
	word32 s4_36
	s0_108 = ip4addr_aton(a1, fp + 0xFFFFFFEC<32>, out a0_21, out a3_23, out a4_24, out a5_25, out s4_36)
	branch a0_21 == 0<32> l23055DF6
l23055DEE:
	s0_108 = netif_set_ipaddr(ra, a3, s0_108, fp + 0xFFFFFFEC<32>, a3_23, a4_24, a5_25, a2, s3, s4_36, s7, mstatus, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg1C, dwArg34, dwArg38, dwArg48, dwArg50, dwArg54, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArgA8, dwArg0128, out s1_17, out s2_15)
l23055DF6:
	branch s2_15 == 0<32> l23055E0C
l23055DFA:
	word32 a0_76
	word32 a4_79
	word32 a5_80
	word32 s4_260
	word32 a3_259
	s0_108 = ip4addr_aton(s2_15, fp + 0xFFFFFFEC<32>, out a0_76, out a3_259, out a4_79, out a5_80, out s4_260)
	branch a0_76 == 0<32> l23055E0C
l23055E04:
	netif_set_gw(s0_108, fp + 0xFFFFFFEC<32>, a4_79, a5_80)
l23055E0C:
	branch s1_17 == 0<32> l23055E20
l23055E0E:
	word32 a0_102
	word32 a4_105
	word32 a5_106
	word32 s4_262
	word32 a3_261
	s0_108 = ip4addr_aton(s1_17, fp + 0xFFFFFFEC<32>, out a0_102, out a3_261, out a4_105, out a5_106, out s4_262)
	branch a0_102 == 0<32> l23055E20
l23055E18:
	netif_set_netmask(s0_108, fp + 0xFFFFFFEC<32>, a4_105, a5_106)
l23055E20:
	s1Out = s1_17
	return s0_108
set_if_exit:


void block_cipher_df(word32 ra, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ctr_drbg_reseed
//      mbedtls_ctr_drbg_random
// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
block_cipher_df_entry:
l23055E2C:
	branch a2 >u 384<i32> l23055F92
l23055F92:
	return
l23055E34:
	word32 a3_435
	word32 a4_436
	word32 a4_439
	word32 a5_437
	word32 a1_438
	word32 a5_440
	word32 a1_433
	word32 t1_431
	word32 a0_432
	word32 a2_434
	word32 ra_111 = mbedtls_aes_init(memset(ra, fp + -448<i32>, 0<32>, 416<i32>, out t1_431, out a0_432, out a1_433, out a2_434, out a3_435, out a4_436, out a5_437), fp + -728<i32>, out a1_438, out a4_439, out a5_440)
	word32 a5_445
	word32 a6_446
	word32 a7_447
	word32 a1_441
	word32 a4_444
	word32 a2_442
	word32 a3_443
	memcpy(fp + -424<i32>, a1, a2, out a1_441, out a2_442, out a3_443, out a4_444, out a5_445, out a6_446, out a7_447)
	Mem78[fp + -32<i32> + a2 + 3704<i32>:byte] = 0x80<8>
	word32 a5_80 = 0<32>
l23055EAC:
	Mem86[fp + -808<i32> + a5_80:byte] = SLICE(a5_80, byte, 0)
	a5_80 = a5_80 + 1<32>
	branch a5_80 != 32<i32> l23055EAC
l23055EBA:
	word32 a1_449
	word32 a4_451
	word32 a3_450
	word32 a0_448
	word32 s0_121 = mbedtls_aes_setkey_enc(fp + -728<i32>, fp + -808<i32>, 256<i32>, 32<i32>, a5_80, dwLoc02FC, dwLoc0218, out a0_448, out a1_449, out a3_450, out a4_451)
	word32 s5_105 = 0x10<32>
l23055ECE:
	word32 t1_464
	word32 a0_465
	word32 a1_466
	word32 a2_467
	word32 a3_468
	word32 a4_469
	word32 a5_470
	ra_111 = memset(ra_111, fp + -824<i32>, 0<32>, 0x10<32>, out t1_464, out a0_465, out a1_466, out a2_467, out a3_468, out a4_469, out a5_470)
	word32 s2_122 = s0_121
	word32 s4_123 = fp + -448<i32>
l23055EDE:
	word32 a4_125 = fp + -824<i32>
	word32 a5_126 = 0<32>
l23055EE2:
	a4_125 = a4_125 + 1<32>
	Mem137[a4_125 + 4095<i32>:byte] = SLICE(CONVERT(Mem131[s4_123 + a5_126:byte], byte, word32) ^ CONVERT(Mem131[a4_125:byte], byte, word32), byte, 0)
	a5_126 = a5_126 + 1<32>
	branch a5_126 != s5_105 l23055EE2
l23055EFC:
	branch s5_105 >=u s2_122 l23055F06
l23055F04:
l23055F06:
	word32 s11_457
	word32 s9_455
	word32 s8_454
	word32 s10_456
	word32 s3_167
	word32 s6_170
	word32 s1_452
	word32 s7_453
	s0_121 = mbedtls_aes_crypt_ecb(1<32>, fp + -824<i32>, fp + -824<i32>, dwLoc0314, dwLoc0208, out s1_452, out s2_122, out s3_167, out s4_123, out s5_105, out s6_170, out s7_453, out s8_454, out s9_455, out s10_456, out s11_457)
	branch s2_122 != 0<32> l23055EDE
l23055F1A:
	word32 a4_186
	word32 a1_458
	word32 a2_459
	word32 a3_460
	word32 a5_461
	word32 a6_462
	word32 a7_463
	memcpy(fp + -776<i32> + s3_167, fp + -824<i32>, 0x10<32>, out a1_458, out a2_459, out a3_460, out a4_186, out a5_461, out a6_462, out a7_463)
	word32 a5_199 = CONVERT(bLoc01BD, byte, word32)
	bLoc01BD = SLICE(a5_199 + 1<32>, byte, 0)
	branch s3_167 + 0x10<32> != s6_170 l23055ECE
l23055F38:
	word32 a0_471
	word32 a1_472
	word32 a3_473
	word32 a4_474
	mbedtls_aes_setkey_enc(fp + -728<i32>, fp + -776<i32>, 256<i32>, a4_186, a5_199 + 1<32>, dwLoc02FC, dwLoc0218, out a0_471, out a1_472, out a3_473, out a4_474)
l23055F48:
	word32 s1_234
	word32 s2_475
	word32 s3_476
	word32 s4_477
	word32 s5_478
	word32 s6_479
	word32 s7_480
	word32 s8_481
	word32 s9_482
	word32 s10_483
	word32 s11_484
	word32 s0_233 = mbedtls_aes_crypt_ecb(1<32>, fp + -744<i32>, fp + -744<i32>, dwLoc0314, dwLoc0208, out s1_234, out s2_475, out s3_476, out s4_477, out s5_478, out s6_479, out s7_480, out s8_481, out s9_482, out s10_483, out s11_484)
	word32 a1_485
	word32 a2_486
	word32 a3_487
	word32 a4_488
	word32 a5_489
	word32 a6_490
	word32 a7_491
	memcpy(s1_234, fp + -744<i32>, 0x10<32>, out a1_485, out a2_486, out a3_487, out a4_488, out a5_489, out a6_490, out a7_491)
	branch s0_233 != s1_234 + 0x10<32> l23055F48
l23055F64:
	mbedtls_aes_free(fp + -728<i32>)
	return
block_cipher_df_exit:


word32 ctr_drbg_update_internal(word32 ra, word32 a0, word32 dwArgD8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ctr_drbg_reseed
//      mbedtls_ctr_drbg_random
// MayUse:  a0:[0..31] ra:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a5 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ctr_drbg_update_internal_entry:
l23055F98:
	word32 a3_238
	word32 a2_237
	word32 a5_240
	word32 a4_239
	word32 a1_236
	word32 a0_235
	word32 t1_234
	memset(ra, fp + -80<i32>, 0<32>, 48<i32>, out t1_234, out a0_235, out a1_236, out a2_237, out a3_238, out a4_239, out a5_240)
	word32 s0_156 = a0
	word32 s2_27 = 0<32>
	word32 s5_37 = a0 + 15<i32>
l23055FC8:
	word32 a3_43 = fp + -80<i32> + s2_27
	word32 a4_45 = s5_37
l23055FD4:
	word32 a5_50 = CONVERT(Mem47[a4_45:byte], byte, word32) + 1<32> & 255<i32>
	Mem51[a4_45:byte] = SLICE(a5_50, byte, 0)
	branch a5_50 != 0<32> l23055FEC
l23055FE4:
	word32 a5_52 = a4_45 + -1<i32>
	branch s0_156 != a4_45 l23055FD2
l23055FD2:
	a4_45 = a5_52
l23055FEC:
	word32 s3_83
	word32 s4_84
	word32 s6_86
	word32 s10_244
	word32 s11_245
	word32 s7_241
	word32 s9_243
	word32 s8_242
	word32 s1_103
	s0_156 = mbedtls_aes_crypt_ecb(1<32>, s0_156, a3_43, dwLoc24, dwArgE8, out s1_103, out s2_27, out s3_83, out s4_84, out s5_37, out s6_86, out s7_241, out s8_242, out s9_243, out s10_244, out s11_245)
	branch s2_27 != s6_86 l23055FC8
l23055FFC:
	word32 a5_101 = 0<32>
l23056002:
	s1_103 = s1_103 + 1<32>
	word32 a4_109 = CONVERT(Mem104[s4_84 + a5_101:byte], byte, word32) ^ CONVERT(Mem104[s1_103:byte], byte, word32)
	Mem110[s1_103 + 4095<i32>:byte] = SLICE(a4_109, byte, 0)
	a5_101 = a5_101 + 1<32>
	branch a5_101 != 48<i32> l23056002
l2305601C:
	word32 a3_248
	word32 a4_249
	word32 a1_247
	word32 a0_246
	word32 s0_124 = mbedtls_aes_setkey_enc(s3_83, fp + -80<i32>, 256<i32>, a4_109, a5_101, dwLoc0C, dwArgD8, out a0_246, out a1_247, out a3_248, out a4_249)
	word32 a5_133
	word32 a3_252
	word32 a4_253
	word32 a7_255
	word32 a6_254
	word32 a2_251
	word32 a1_250
	memcpy(s0_124, fp + -48<i32>, 0x10<32>, out a1_250, out a2_251, out a3_252, out a4_253, out a5_133, out a6_254, out a7_255)
	s0Out = s0_124
	s1Out = dwLoc4C
	a5Out = a5_133
	s2Out = s2_27
	return dwLoc08
ctr_drbg_update_internal_exit:


word32 mbedtls_ctr_drbg_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_ctr_drbg_init_entry:
l23056048:
l2305604E_thunk_memset:
	word32 t1_16
	word32 a0_17
	word32 a1_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	return memset(ra, a0, 0<32>, 320<i32>, out t1_16, out a0_17, out a1_18, out a2_19, out a3_20, out a4_21, out a5_22)
mbedtls_ctr_drbg_init_exit:


void mbedtls_ctr_drbg_free(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_destroy
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a2 a5
// Preserved: s0 sp
mbedtls_ctr_drbg_free_entry:
l23056052:
	branch a0 == 0<32> l2305607C
l2305607C:
	return
l23056054:
	mbedtls_aes_free(a0 + 32<i32>)
	word32 s0_14 = a0
l23056068:
	branch s0_14 != a0 + 320<i32> l23056074
l23056074:
	Mem16[s0_14:byte] = 0<8>
	s0_14 = s0_14 + 1<32>
l2305606C:
	return
mbedtls_ctr_drbg_free_exit:


word32 mbedtls_ctr_drbg_reseed(word32 ra, word32 a1, word32 a2, word32 a4, word32 s3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ctr_drbg_seed
//      mbedtls_ctr_drbg_random
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] ra:[0..31] s3:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 sp
mbedtls_ctr_drbg_reseed_entry:
l2305607E:
	word32 a0_17 = Mem15[a4 + 24<i32>:word32]
	word32 s2_122 = -56<i32>
	branch a4 >u 384<i32> l23056102
l230560A6:
	s2_122 = -56<i32>
	branch 384<i32> - a4 <u a2 l23056102
l230560B0:
	word32 a2_32
	word32 a4_34
	word32 a5_228
	word32 a1_226
	word32 a3_227
	word32 t1_224
	word32 a0_225
	word32 ra_36 = memset(ra, fp + -416<i32>, 0<32>, 384<i32>, out t1_224, out a0_225, out a1_226, out a2_32, out a3_227, out a4_34, out a5_228)
	word32 s0_40 = Mem15[a2_32 + 24<i32>:word32]
	word32 sp_43
	word32 ra_45
	word32 s0_46
	word32 s1_47
	word32 s4_49
	word32 a0_50
	word32 a3_55
	word32 t0_56
	word32 t1_57
	word32 a7_157
	word32 a6_158
	word32 t3_159
	word32 t4_160
	word32 t5_161
	word32 t6_162
	word32 s10_163
	word32 s11_164
	word32 s7_165
	word32 s8_166
	word32 s9_167
	word32 t2_168
	word32 tp_169
	word32 s5_170
	word32 s6_171
	call Mem15[a0_17 + 312<i32>:int32] (retsize: 0;)
		uses: a0:Mem15[s0_40 + 316<i32>:int32],a1:fp + -416<i32>,a2:a2_32,a3:a3_55,a4:a4_34,a6:a6_158,a7:a7_157,ra:ra_36,s0:s0_40,s1:a2,s10:s10_163,s11:s11_164,s2:-56<i32>,s3:s3,s4:a1,s5:s5_170,s6:s6_171,s7:s7_165,s8:s8_166,s9:s9_167,t0:t0_56,t1:t1_57,t2:t2_168,t3:t3_159,t4:t4_160,t5:t5_161,t6:t6_162,tp:tp_169
		defs: a0:a0_50,a3:a3_55,a6:a6_158,a7:a7_157,ra:ra_45,s0:s0_46,s1:s1_47,s10:s10_163,s11:s11_164,s4:s4_49,s5:s5_170,s6:s6_171,s7:s7_165,s8:s8_166,s9:s9_167,sp:sp_43,t0:t0_56,t1:t1_57,t2:t2_168,t3:t3_159,t4:t4_160,t5:t5_161,t6:t6_162,tp:tp_169
	branch a0_50 != 0<32> l23056120
l23056120:
	s2_122 = -52<i32>
l230560D4:
	word32 s3_60 = Mem15[s0_46 + 24<i32>:int32]
	branch s4_49 == 0<32> l230560EC
l230560DC:
	branch s1_47 == 0<32> l230560EC
l230560DE:
	word32 a4_234
	word32 a5_235
	word32 a2_232
	word32 a3_233
	word32 a1_231
	word32 a6_236
	word32 a7_237
	memcpy(sp_43 + s3_60, s4_49, s1_47, out a1_231, out a2_232, out a3_233, out a4_234, out a5_235, out a6_236, out a7_237)
	s3_60 = s3_60 + s1_47
l230560EC:
	block_cipher_df(ra_45, sp_43, s3_60)
	word32 s0_118
	word32 a5_230
	word32 s1_229
	ctr_drbg_update_internal(ra_45, s0_46, Mem15[sp_43 + 216<i32>:word32], Mem15[sp_43 + 232<i32>:word32], out s0_118, out s1_229, out a5_230, out s2_122)
	Mem139[0x11<32>:word32] = s0_118
l23056102:
	return s2_122
mbedtls_ctr_drbg_reseed_exit:


word32 mbedtls_ctr_drbg_seed_entropy_len(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArgD8, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ctr_drbg_seed
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a3 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ctr_drbg_seed_entropy_len_entry:
l23056126:
	word32 a4_44
	word32 a5_45
	word32 t1_122
	word32 a0_123
	word32 a1_124
	word32 a2_125
	word32 a3_126
	word32 a4_127
	word32 a5_128
	word32 a1_129
	word32 ra_46 = mbedtls_aes_init(memset(ra, fp + -64<i32>, 0<32>, 32<i32>, out t1_122, out a0_123, out a1_124, out a2_125, out a3_126, out a4_127, out a5_128), a0 + 32<i32>, out a1_129, out a4_44, out a5_45)
	Mem50[a0 + 312<i32>:word32] = a1
	Mem51[a0 + 316<i32>:word32] = a2
	Mem52[a5_45 + 24<i32>:word32] = a0
	Mem55[0x200072C<32>:word32] = a0
	word32 a3_62
	word32 a4_63
	word32 a0_130
	word32 a1_131
	mbedtls_aes_setkey_enc(a0 + 32<i32>, fp + -64<i32>, 256<i32>, a4_44, 0x2000710<32>, dwLoc0C, dwArgD8, out a0_130, out a1_131, out a3_62, out a4_63)
	a0Out = mbedtls_ctr_drbg_reseed(ra_46, a3_62, a4_63, a4_63, a1)
	a3Out = s2
	a5Out = a5_77
	return dwLoc08
mbedtls_ctr_drbg_seed_entropy_len_exit:


word32 mbedtls_ctr_drbg_seed(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArgD8, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a3 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ctr_drbg_seed_entry:
l23056190:
l23056194_thunk_mbedtls_ctr_drbg_seed_entropy_len:
	word32 a0_9
	word32 a3_12
	word32 a5_14
	word32 ra_17 = mbedtls_ctr_drbg_seed_entropy_len(ra, a0, a1, a2, dwArgD8, out a0_9, out a3_12, out a5_14)
	a0Out = a0_9
	a3Out = a3_12
	a5Out = a5_14
	return ra_17
mbedtls_ctr_drbg_seed_exit:


void mbedtls_ctr_drbg_random_with_add(word32 ra, word32 a1, word32 a2, word32 a4, word32 s4, word32 dwArg34, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ctr_drbg_random
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] ra:[0..31] s4:[0..31] Stack +0034:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s5 sp
mbedtls_ctr_drbg_random_with_add_entry:
l23056198:
	branch a2 >u 1024<i32> l2305627A
l2305627A:
l230561B4:
	branch a4 >u 256<i32> l230561F0
l230561C4:
	word32 s1_141 = a2
	word32 a3_40
	word32 a4_41
	word32 a5_42
	word32 a2_419
	word32 a1_418
	word32 t1_416
	word32 a0_417
	word32 ra_222 = memset(ra, fp + -80<i32>, 0<32>, 48<i32>, out t1_416, out a0_417, out a1_418, out a2_419, out a3_40, out a4_41, out a5_42)
	word32 s0_110 = dwArg54
	branch a5_42 < dwArg34 l230561E4
l230561E0:
	s0_110 = Mem27[a5_42 + 20<i32>:word32]
	branch a5_42 == 0<32> l23056204
l23056204:
	branch a4_41 == 0<32> l23056218
l23056206:
	block_cipher_df(ra_222, a3_40, a4_41)
	word32 a5_437
	word32 s2_438
	ra_222 = ctr_drbg_update_internal(ra_222, s0_110, dwArg68, dwArg78, out s0_110, out s1_141, out a5_437, out s2_438)
l230561E4:
	branch mbedtls_ctr_drbg_reseed(ra_222, a3_40, a4_41, a4_41, a1) == 0<32> l23056218
l23056218:
	word32 s4_138 = s0_110 + 15<i32>
l23056222:
	branch s1_141 != 0<32> l23056236
l23056236:
	word32 a4_143 = s4_138
l23056238:
	word32 a5_148 = CONVERT(Mem145[a4_143:byte], byte, word32) + 1<32> & 255<i32>
	Mem149[a4_143:byte] = SLICE(a5_148, byte, 0)
	branch a5_148 != 0<32> l23056250
l23056248:
	word32 a5_150 = a4_143 + -1<i32>
	branch s0_110 != a4_143 l23056276
l23056276:
	a4_143 = a5_150
l23056250:
	word32 s1_174
	word32 s3_178
	word32 s6_181
	word32 s9_427
	word32 s10_428
	word32 s11_429
	word32 s8_426
	word32 s7_425
	word32 s2_423
	word32 s5_424
	s0_110 = mbedtls_aes_crypt_ecb(1<32>, s0_110, fp + -96<i32>, s4, dwArgC8, out s1_174, out s2_423, out s3_178, out s4_138, out s5_424, out s6_181, out s7_425, out s8_426, out s9_427, out s10_428, out s11_429)
	word32 s2_193 = s1_174
	branch s6_181 >=u s1_174 l23056264
l23056262:
	s2_193 = 0x10<32>
l23056264:
	word32 a5_434
	word32 a6_435
	word32 a7_436
	word32 a4_433
	word32 a3_432
	word32 a1_430
	word32 a2_431
	memcpy(s3_178, fp + -96<i32>, s2_193, out a1_430, out a2_431, out a3_432, out a4_433, out a5_434, out a6_435, out a7_436)
	s1_141 = s1_174 - s2_193
l23056224:
	word32 a5_235
	word32 s0_420
	word32 s1_421
	word32 s2_422
	ctr_drbg_update_internal(ra_222, s0_110, dwArg68, dwArg78, out s0_420, out s1_421, out a5_235, out s2_422)
	Mem262[a5_235 + 0x11<32>:word32] = Mem226[a5_235 + 16<i32>:word32]
l230561F0:
	return
mbedtls_ctr_drbg_random_with_add_exit:


void mbedtls_ctr_drbg_random(word32 ra, word32 a1, word32 a2, word32 s4, word32 dwArg34, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31] s4:[0..31] Stack +0034:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ctr_drbg_random_entry:
l23056280:
l23056284_thunk_mbedtls_ctr_drbg_random_with_add:
	mbedtls_ctr_drbg_random_with_add(ra, a1, a2, 0<32>, s4, dwArg34, dwArg54, dwArg68, dwArg78, dwArgC8)
	return
mbedtls_ctr_drbg_random_exit:


word32 entropy_update(word32 ra, word32 a3, word32 dwArg58, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      entropy_gather_internal.part.0
// MayUse:  a3:[0..31] ra:[0..31] Stack +0058:[0..31]
// LiveOut: a0 a1 a4 a5 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
entropy_update_entry:
l23056288:
	word32 a5_14 = 32<i32>
	branch a3 <=u 32<i32> l230562B6
l230562A4:
	mbedtls_sha256(ra, out a5_14)
l230562B6:
	word32 a5_58
	word32 s1_62
	word32 a1_80
	word32 a4_83
	word32 a5_84
	word32 s2_89
	word32 s3_90
	word32 s4_91
	word32 a1_136
	word32 a4_137
	word32 s2_138
	word32 s3_139
	word32 s4_140
	word32 s5_141
	word32 s1_142
	word32 s5_143
	mbedtls_sha256_update(s1_62, mbedtls_sha256_update(fp + -68<i32>, 2<32>, a5_14, dwLoc08, dwArg58, out s1_62, out a1_136, out a4_137, out a5_58, out s2_138, out s3_139, out s4_140, out s5_141), a5_58, dwLoc08, dwArg58, out s1_142, out a1_80, out a4_83, out a5_84, out s2_89, out s3_90, out s4_91, out s5_143)
	s1Out = dwLoc4C
	a0Out = 0<32>
	a1Out = a1_80
	a4Out = a4_83
	a5Out = a5_84
	s2Out = s2_89
	s3Out = s3_90
	s4Out = s4_91
	return dwLoc08
entropy_update_exit:


word32 entropy_gather_internal.part.0(word32 ra, word32 a0, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_entropy_func
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a0 a1 a2 ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
entropy_gather_internal.part.0_entry:
l230562E2:
	word32 sp_103 = fp + -176<i32>
	word32 s2_112 = a0
	word32 s3_117 = 0<32>
	word32 s1_20 = 0<32>
	word32 s4_114 = 1<32>
l230562FC:
	word32 a5_24 = Mem23[s2_112 + 116<i32>:int32]
	branch s1_20 < a5_24 l2305631E
l2305631E:
	branch a5_24 != s4_114 l23056326
l23056324:
	s3_117 = 1<32>
l23056326:
	word32 s0_34 = Mem23[a0 + 4<i32>:word32]
	Mem37[sp_103 + 132<i32>:word32] = 0<32>
	word32 s5_127
	word32 a7_126
	word32 a6_125
	word32 a3_57
	word32 s6_128
	word32 s8_129
	word32 t0_130
	word32 t3_131
	word32 t4_132
	word32 t6_133
	word32 tp_134
	word32 s1_50
	call a5_24 (retsize: 0;)
		uses: a0:a0_33,a1:sp_36 + 16<i32>,a2:128<i32>,a3:sp_36 + 12<i32>,a6:a6_125,a7:a7_126,ra:ra_47,s0:s0_34,s1:s1_25,s2:s2_22,s3:s3_43,s4:s4_27,s5:s5_127,s6:s6_128,s8:s8_129,t0:t0_130,t3:t3_131,t4:t4_132,t6:t6_133,tp:tp_134
		defs: a0:a0_55,a1:a1_59,a2:a2_58,a3:a3_57,a6:a6_125,a7:a7_126,ra:ra_54,s1:s1_50,s2:s2_51,s3:s3_52,s4:s4_53,s5:s5_127,s6:s6_128,s8:s8_129,sp:sp_48,t0:t0_130,t3:t3_131,t4:t4_132,t6:t6_133,tp:tp_134
	branch a0 != 0<32> l2305630E
l23056338:
	a2 = Mem37[sp_103 + 164<i32>:word32]
	branch a3_57 == 0<32> l23056350
l2305633C:
	word32 a4_72
	word32 a5_73
	ra = entropy_update(ra, a3_57, Mem37[sp_103 + 88<i32>:word32], out s1_50, out a0, out a1, out a4_72, out a5_73, out s2_112, out s3_117, out s4_114)
	a2 = Mem37[sp_103 + 196<i32>:word32]
	Mem96[a5_73 + a4_72 + 8<i32>:word32] = Mem37[a5_73 + 8<i32>:word32]
l23056350:
	s1_20 = s1_50 + 1<32>
l23056304:
	branch s3_117 != 0<32> l2305630E
l2305630A:
l2305630E:
	a0Out = Mem104[sp_103 + 276<i32>:word32]
	a1Out = a1
	a2Out = a2
	s3Out = s3_117
	return ra
entropy_gather_internal.part.0_exit:


word32 mbedtls_entropy_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: ra
// Trashed: a1 a2 a3 a4 a5 ra t0 t1
// Preserved: a0 s0 sp
mbedtls_entropy_init_entry:
l23056356:
	word32 a4_16
	word32 a2_60
	word32 a3_61
	word32 a1_59
	word32 a0_58
	word32 t1_57
	word32 a5_62
	word32 ra_18 = memset(ra, a0, 0<32>, 520<i32>, out t1_57, out a0_58, out a1_59, out a2_60, out a3_61, out a4_16, out a5_62)
	mbedtls_sha256_starts(a0, 0<32>)
	word32 s0_24 = Mem9[a4_16 + 116<i32>:word32]
	branch a4_16 > 0x13<32> l230563A0
l23056378:
	word32 a5_31 = a4_16 + 0x14<32> + s0_24
	Mem32[0x23056508<32>:word32] = a5_31
	Mem34[a5_31 + 132<i32>:word32] = 32<i32>
	Mem36[a5_31 + 124<i32>:word32] = 0<32>
	Mem37[a5_31 + 136<i32>:word32] = 1<32>
	Mem38[a4_16 + 0x75<32>:word32] = s0_24
l230563A0:
	return ra_18
mbedtls_entropy_init_exit:


void mbedtls_entropy_free(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_destroy
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
mbedtls_entropy_free_entry:
l230563A8:
	a0_5 = a0
l230563AC:
	word32 a0_5
	branch a0_5 != a0 + 520<i32> l230563B2
l230563B2:
	Mem7[a0_5:byte] = 0<8>
	a0_5 = a0_5 + 1<32>
l230563B0:
	return
mbedtls_entropy_free_exit:


void mbedtls_entropy_func(word32 ra, word32 a2, word32 dwArg08, word32 dwArg48, word32 dwArg68)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0048:[0..31] Stack +0068:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_entropy_func_entry:
l230563BA:
	word32 a5_18 = 32<i32>
	branch a2 <=u 32<i32> l230563EA
l230563EA:
	word32 s3_25 = 258<i32>
l230563F4:
	branch s3_25 == 0xFFFFFFFF<32> l230563D2
l230563FA:
	word32 s0_30 = Mem17[a5_18 + 116<i32>:word32]
	branch a5_18 == 0<32> l2305648A
l2305648A:
l230563FE:
	word32 a0_34
	word32 a1_35
	word32 a2_36
	ra = entropy_gather_internal.part.0(ra, s0_30, out a0_34, out a1_35, out a2_36, out s3_25)
	branch a0_34 != 0<32> l230563D6
l23056408:
	a5_18 = Mem17[a2_36 + 116<i32>:word32] + 128<i32>
	word32 a4_63 = 0<32>
	word32 a3_64 = 1<32>
l23056414:
	branch a4_63 < a2_36 l23056470
l23056470:
	word32 a5_71 = Mem17[a1_35 + 4<i32>:word32]
	branch a0_34 >=u a1_35 l2305647A
l23056478:
	a3_64 = 0<32>
l2305647A:
	a4_63 = a4_63 + 1<32>
	a5_18 = a5_71 + 0x14<32>
l23056418:
	branch a3_64 == 0<32> l230563F4
l2305641A:
	word32 a2_89
	word32 a4_388
	word32 a5_389
	word32 a1_386
	word32 a3_387
	word32 t1_384
	word32 a0_385
	word32 ra_93 = memset(ra, fp + -64<i32>, 0<32>, 32<i32>, out t1_384, out a0_385, out a1_386, out a2_89, out a3_387, out a4_388, out a5_389)
	word32 s5_395
	word32 s4_394
	word32 s2_392
	word32 s3_393
	word32 s1_390
	word32 a5_391
	word32 s0_108 = mbedtls_sha256_finish(a2_89, dwLoc18, dwArg48, out s1_390, out a5_391, out s2_392, out s3_393, out s4_394, out s5_395)
	word32 a0_397
	word32 a2_399
	word32 t1_396
	word32 a1_398
	word32 a3_400
	word32 a4_401
	word32 a5_402
	word32 ra_132 = memset(ra_93, s0_108, 0<32>, 116<i32>, out t1_396, out a0_397, out a1_398, out a2_399, out a3_400, out a4_401, out a5_402)
	word32 s4_153
	word32 s5_154
	word32 s1_403
	word32 a1_404
	word32 s3_407
	word32 a4_405
	word32 a5_406
	word32 s2_151
	mbedtls_sha256_update(fp + -64<i32>, 32<i32>, mbedtls_sha256_starts(s0_108, 0<32>), dwArg08, dwArg68, out s1_403, out a1_404, out a4_405, out a5_406, out s2_151, out s3_407, out s4_153, out s5_154)
	word32 a5_408
	word32 a4_172 = mbedtls_sha256(ra_132, out a5_408)
	word32 a5_183 = 0<32>
l23056460:
	branch a5_183 < a4_172 l23056480
l23056480:
	Mem187[s2_151:word32] = 0<32>
	a5_183 = a5_183 + 1<32>
	s2_151 = s2_151 + 0x14<32>
l23056464:
	word32 a1_409
	word32 a2_410
	word32 a3_411
	word32 a4_412
	word32 a5_413
	word32 a6_414
	word32 a7_415
	memcpy(s5_154, fp + -64<i32>, s4_153, out a1_409, out a2_410, out a3_411, out a4_412, out a5_413, out a6_414, out a7_415)
l230563D2:
l230563D6:
	return
mbedtls_entropy_func_exit:


void mbedtls_platform_entropy_poll(word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s4 s8 t3 tp
// Preserved: sp
mbedtls_platform_entropy_poll_entry:
l23056490:
	Mem9[a3:word32] = 0<32>
	word32 a0_10 = 0<32>
	word32 s0_11 = 0<32>
l2305649E:
	branch s0_11 != a2 l230564AE
l230564AE:
	branch (s0_11 & 3<i32>) != 0<32> l230564C4
l230564B4:
	word32 a4_84
	word32 a5_85
	word32 s4_86
	bl_rand(a0_10, a2, out a0_10, out a1, out a3, out a4_84, out a5_85, out s4_86)
	a2 = dwArg84
	s0_11 = a3
l230564C4:
	Mem40[a1 + s0_11:byte] = SLICE(a0_10, byte, 0)
	s0_11 = s0_11 + 1<32>
	a0_10 = a0_10 >>u 8<i32>
l230564A2:
	Mem43[s0_11:word32] = a3
	return
mbedtls_platform_entropy_poll_exit:


void mbedtls_pk_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
mbedtls_pk_init_entry:
l230564D2:
	branch a0 == 0<32> l230564DC
l230564D4:
	Mem4[a0:word32] = 0<32>
	Mem5[a0 + 4<i32>:word32] = 0<32>
l230564DC:
	return
mbedtls_pk_init_exit:


word32 mbedtls_pk_free(word32 ra, word32 a0, word32 a5, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_destroy
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_subpubkey
//      mbedtls_pk_parse_key
//      mbedtls_x509_crt_free
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a0 a2 a5 ra
// Trashed: a0 a2 a5 ra
// Preserved: s0 sp
mbedtls_pk_free_entry:
l230564DE:
	branch a0 == 0<32> l2305650A
l2305650A:
	a0Out = a0
	a2Out = a2
	a5Out = a5
	return ra
l230564E0:
	word32 a0_10 = Mem8[a5:word32]
	branch a5 == 0<32> l230564FA
l230564EC:
	word32 a5_12 = Mem8[a5 + 40<i32>:word32]
	word32 s0_16
	word32 a2_19
	call a5_12 (retsize: 0;)
		uses: a0:Mem8[a0_10 + 4<i32>:word32],a2:a2_19,a5:a5_12,ra:ra,s0:a0_10
		defs: a0:a0_15,a2:a2_19,ra:ra_17,s0:s0_16
	a5 = s0_16 + 8<i32>
	s0_21 = s0_16
l230564F6:
	word32 s0_21
	branch s0_21 != s0_16 + 8<i32> l23056502
l23056502:
	Mem23[s0_21:byte] = 0<8>
	s0_21 = s0_21 + 1<32>
l230564FA:
	a0Out = a0_10
	a2Out = dwArg10
	a5Out = a5
	return ra
mbedtls_pk_free_exit:


word32 mbedtls_pk_info_from_type(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_subpubkey
//      mbedtls_pk_parse_key
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_pk_info_from_type_entry:
l2305650C:
	word32 a0_5 = a0 + 0xFFFFFFFF<32> & 255<i32>
	branch a0_5 >u 2<32> l23056528
l23056528:
	a5Out = 2<32>
	return 0<32>
l23056518:
	word32 a0_13 = Mem0[(a0_5 << 2<i32>) + 0x23088B34<32>:word32]
	a5Out = 0x23088B34<32>
	return a0_13
mbedtls_pk_info_from_type_exit:


word32 mbedtls_pk_setup(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a5, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_subpubkey
//      mbedtls_pk_parse_key
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31] s0:[0..31] s1:[0..31]
// LiveOut: a0 a1 a2 a5 ra s1
// Trashed: a0 a1 a2 a5 ra s1 tp
// Preserved: s0 sp
mbedtls_pk_setup_entry:
l2305652C:
	branch a0 == 0<32> l23056556
l2305652E:
	branch a1 == 0<32> l23056556
l23056530:
	word32 a0_7 = Mem0[a5:word32]
	branch a5 != 0<32> l23056556
l23056556:
	s1Out = s1
	a0Out = 0xFC000180<32>
	a1Out = a1
	a2Out = a2
	a5Out = a5
	return ra
l23056534:
	word32 a0_31
	word32 a1_10 = Mem0[a5 + 36<i32>:word32]
	word32 a0_21
	word32 a1_22
	word32 a5_23
	word32 s0_24
	word32 s1_25
	word32 ra_26
	word32 a2_27
	word32 tp_28
	call a5 (retsize: 0;)
		uses: a0:a0_7,a1:a1_10,a2:a2_27,a5:a5,ra:ra,s0:a0_7,s1:a1_10,Stack +0004:s0,Stack +0080:s1,Stack +0084:ra,tp:tp_28
		defs: a0:a0_21,a1:a1_22,a2:a2_27,a5:a5_23,ra:ra_26,s0:s0_24,s1:s1_25,tp:tp_28
	Mem29[a0_21 + 4<i32>:word32] = s0_24
	branch a0_21 == 0<32> l2305655E
l2305655E:
	a0_31 = 0xFC000080<32>
l23056548:
	Mem32[s1_25:word32] = s0_24
	a0_31 = 0<32>
l2305654C:
	s1Out = s1_25
	a0Out = a0_31
	a1Out = a1_22
	a2Out = dwArg10
	a5Out = a5_23
	return ra_26
mbedtls_pk_setup_exit:


word32 mbedtls_pk_can_do(word32 a0, word32 a1, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_verify_ext
//      mbedtls_ssl_sig_from_pk
//      mbedtls_ssl_parse_certificate
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a5 t1
// Preserved: sp
mbedtls_pk_can_do_entry:
l23056566:
	branch a0 == 0<32> l23056574
l23056568:
	branch a5 == 0<32> l23056574
l23056574:
	a5Out = a5
	return 0<32>
l2305656C:
	word32 a0_12
	word32 a5_13
	word32 t1_14
	call Mem0[a5 + 12<i32>:int32] (retsize: 0;)
		uses: a0:a1,a1:a1,a5:a5,t1:t1_14
		defs: a0:a0_12,a5:a5_13,t1:t1_14
	a5Out = a5_13
	return a0_12
mbedtls_pk_can_do_exit:


word32 mbedtls_pk_verify(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg00, word32 dwArg44, word32 dwArgA4, word32 dwArgC4, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_verify_ext
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31] Stack +00A4:[0..31] Stack +00C4:[0..31]
// LiveOut: a0 a4 a5 ra s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s8 t1 t3 tp
// Preserved: sp
mbedtls_pk_verify_entry:
l23056578:
	branch a0 != 0<32> l23056590
l23056590:
	word32 a0_22
	word32 s0_107 = a0
	word32 a0_10 = Mem8[a0:word32]
	branch a0_10 == 0<32> l23056582
l2305659C:
	branch a3 != 0<32> l230565BC
l2305659E:
	word32 a5_129
	mbedtls_md_info_from_type(a0, out a5_129)
	a0_10 = a1
	dwLoc1C = a4
	branch a1 == 0<32> l23056582
l23056582:
	a0_22 = 0xFC000180<32>
l230565AE:
	mbedtls_md_get_size(a0)
	0<32> = dwArg44
	a2 = dwArgC4
	a3 = a1
l230565BC:
	s0_107 = Mem28[a0_10:word32]
	word32 t1_30 = Mem28[a0_10 + 16<i32>:int32]
	branch t1_30 == 0<32> l230565D0
l230565D0:
	a0_22 = 0xFC000100<32>
l23056588:
	s0Out = s0_107
	a0Out = a0_22
	a4Out = a4
	a5Out = a5
	s8Out = dwLoc1C
	return ra
l230565C6:
	word32 a0_52
	word32 s0_53
	word32 ra_54
	word32 a5_57
	word32 a4_58
	word32 tp_60
	word32 t1_61
	word32 s8_62
	call t1_30 (retsize: 0;)
		uses: a0:a0_27,a1:a1,a2:a2_50,a3:a3_46,a4:a4,a5:a5,ra:ra,s0:Mem28[a0_27 + 4<i32>:word32],s8:dwLoc1C_82,Stack +0000:dwArg00,Stack +0044:dwArg44,Stack +00A4:dwArgA4,Stack +00C4:dwArgC4,Stack +FFFFFFE4:dwLoc1C_82,t1:t1_61,t3:dwArg00,tp:tp_60
		defs: a0:a0_52,a4:a4_58,a5:a5_57,ra:ra_54,s0:s0_53,s8:s8_62,t1:t1_61,tp:tp_60
	s0Out = s0_53
	a0Out = a0_52
	a4Out = a4_58
	a5Out = a5_57
	s8Out = s8_62
	return ra_54
l2305657A:
	s0Out = s0
	a0Out = 0xFC000180<32>
	a4Out = a4
	a5Out = a5
	s8Out = s8
	return ra
mbedtls_pk_verify_exit:


void mbedtls_pk_sign(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 dwArg34, word32 dwArg94, word32 dwArgB4, word32 dwArgE4, word32 dwArg0100)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0094:[0..31] Stack +00B4:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s4 s8 t1 t3
// Preserved: sp
mbedtls_pk_sign_entry:
l230565D8:
	branch a0 != 0<32> l230565F0
l230565F0:
	word32 a0_10 = Mem8[a0:word32]
	branch a0_10 == 0<32> l230565E2
l230565FC:
	branch a3 != 0<32> l23056624
l230565FE:
	word32 a0_25 = mbedtls_md_info_from_type(a1, out a5)
	branch a0_25 == 0<32> l230565E2
l230565E2:
l23056612:
	a0_10 = mbedtls_md_get_size(a0_25)
	a6 = dwArg94
	a3 = a0_10
l23056624:
	word32 t1_40 = Mem38[a0_10 + 20<i32>:int32]
	branch t1_40 == 0<32> l23056638
l23056638:
l230565E8:
	return
l2305662E:
	word32 t3_73
	word32 s8_74
	word32 s4_75
	word32 t1_76
	call t1_40 (retsize: 0;)
		uses: a0:a0_37,a1:a1,a2:dwArg0100,a3:a3_56,a4:a4,a5:a5_60,a6:a6_59,a7:a7,ra:ra,s0:dwArgE4,s4:s4_75,s8:s8_74,Stack +0034:dwArg34,Stack +0094:dwArg94,Stack +00B4:dwArgB4,Stack +00E4:dwArgE4,Stack +0100:dwArg0100,Stack +FFFFFFF8:dwLoc08,t1:t1_76,t3:t3_73
		defs: s4:s4_75,s8:s8_74,t1:t1_76,t3:t3_73
	return
l230565DA:
	return
mbedtls_pk_sign_exit:


void mbedtls_pk_decrypt(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 t1
// Preserved: sp
mbedtls_pk_decrypt_entry:
l23056640:
	branch a0 == 0<32> l23056656
l23056642:
	word32 t1_5 = Mem0[a0:int32]
	branch t1_5 == 0<32> l23056656
l23056656:
	return
l2305664A:
	word32 t1_8 = Mem0[t1_5 + 24<i32>:int32]
	branch t1_8 == 0<32> l2305665E
l2305665E:
	return
l23056652:
	word32 t1_14
	call t1_8 (retsize: 0;)
		uses: a0:Mem0[a0 + 4<i32>:word32],t1:t1_14
		defs: t1:t1_14
	return
mbedtls_pk_decrypt_exit:


void mbedtls_pk_encrypt(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 t1
// Preserved: sp
mbedtls_pk_encrypt_entry:
l23056666:
	branch a0 == 0<32> l2305667C
l23056668:
	word32 t1_5 = Mem0[a0:int32]
	branch t1_5 == 0<32> l2305667C
l2305667C:
	return
l23056670:
	word32 t1_8 = Mem0[t1_5 + 28<i32>:int32]
	branch t1_8 == 0<32> l23056684
l23056684:
	return
l23056678:
	word32 t1_14
	call t1_8 (retsize: 0;)
		uses: a0:Mem0[a0 + 4<i32>:word32],t1:t1_14
		defs: t1:t1_14
	return
mbedtls_pk_encrypt_exit:


word32 mbedtls_pk_get_bitlen(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_verify_ext
//      x509_profile_check_key
//      mbedtls_x509_crt_info
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
mbedtls_pk_get_bitlen_entry:
l2305668C:
	branch a0 == 0<32> l2305669A
l2305668E:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l2305669A
l2305669A:
	a5Out = a5
	return 0<32>
l23056692:
	word32 a0_11
	word32 a5_12
	word32 t1_13
	call Mem0[a5 + 8<i32>:int32] (retsize: 0;)
		uses: a0:Mem0[a0_6 + 4<i32>:word32],a5:a5,t1:t1_13
		defs: a0:a0_11,a5:a5_12,t1:t1_13
	a5Out = a5_12
	return a0_11
mbedtls_pk_get_bitlen_exit:


word32 mbedtls_pk_verify_ext(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 a6, word32 a7, word32 s10, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg44, word32 dwArgA4, word32 dwArgC4, word32 dwArg0138, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_top.isra.7
//      x509_crt_verify_child
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] Stack +0000:[0..31] Stack +0044:[0..31] Stack +00A4:[0..31] Stack +00C4:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_pk_verify_ext_entry:
l2305669E:
	word32 s0_114
	branch a2 != 0<32> l230566D2
l230566D2:
	branch Mem21[a2:int32] == 0<32> l230566B4
l230566DA:
	s7 = a0
	s2 = a7
	s6 = a6
	s5 = a5
	s3 = a3
	s1 = a2
	branch mbedtls_pk_can_do(a2, a0, a5, out a5) == 0<32> l23056766
l23056766:
	s0_114 = 0xFC000100<32>
l230566F4:
	a5 = 6<32>
	branch a0 != 6<32> l23056740
l23056740:
	branch a1 != 0<32> l230566B4
l23056742:
	0<32> = dwArg0198
l23056762_thunk_mbedtls_pk_verify:
	word32 a0_62
	word32 s0_63
	word32 s8_64
	word32 a4_70
	word32 a5_71
	word32 ra_72 = mbedtls_pk_verify(ra, a2, a3, dwArg0138, a5, a6, a7, dwArg00, dwArg44, dwArgA4, dwArgC4, out s0_63, out a0_62, out a4_70, out a5_71, out s8_64)
	s0Out = s0_63
	s1Out = a2
	a0Out = a0_62
	a4Out = a4_70
	a5Out = a5_71
	a6Out = <invalid>
	a7Out = a7
	s2Out = a7
	s3Out = a3
	s4Out = <invalid>
	s5Out = a5
	s6Out = a6
	s7Out = a0
	s8Out = s8_64
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra_72
l230566FA:
	branch a1 == 0<32> l230566B4
l230566FC:
	word32 a0_79 = mbedtls_pk_get_bitlen(a2, 6<32>, out a5) + 7<32> >>u 3<i32>
	branch a7 <u a0_79 l2305676E
l2305676E:
	s0_114 = 0xFBFFFC80<32>
l2305670A:
	s1 = Mem86[a0_79 + 4<i32>:word32]
	word32 a0_96 = mbedtls_rsa_rsassa_pss_verify_ext(ra, a0_79, 0<32>, 0<32>, a3, a5, CONVERT(Mem86[Mem82[a5 + 4<i32>:word32]:byte], byte, word32), a3, s10, s11, mstatus, a5, dwLoc3C, out a4, out a5, out a7, out s10, out s11, out mstatus)
	s0_114 = a0_96
	branch a0_96 != 0<32> l230566BA
l2305672A:
	branch mbedtls_pk_get_bitlen(s1, a5, out a5) + 7<32> >>u 3<i32> >=u a7 l230566BA
l23056738:
	s0_114 = 0xFC000700<32>
l230566B4:
	s0_114 = 0xFC000180<32>
l230566BA:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1
	a0Out = s0_114
	a4Out = a4
	a5Out = a5
	a6Out = <invalid>
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = <invalid>
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArgD4
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mbedtls_pk_verify_ext_exit:


word32 mbedtls_pk_debug(word32 ra, word32 a0, word32 a5, word32 dwArg10, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_debug_print_crt
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut: a0 a2 a5 ra
// Trashed: a0 a2 a5 ra
// Preserved: sp
mbedtls_pk_debug_entry:
l23056776:
	branch a0 == 0<32> l23056790
l23056778:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23056790
l23056790:
	a0Out = 0xFC000180<32>
	a2Out = a2
	a5Out = a5
	return ra
l2305677C:
	word32 a5_9 = Mem0[a5 + 44<i32>:word32]
	branch a5_9 == 0<32> l23056798
l23056798:
	a0Out = 0xFC000100<32>
	a2Out = a2
	a5Out = a5_9
	return ra
l23056780:
	word32 a5_18
	word32 ra_19
	call a5_9 (retsize: 0;)
		uses: a0:Mem14[a0_6 + 4<i32>:word32],a2:dwArg10,a5:a5_9,ra:ra,Stack +0084:ra
		defs: a5:a5_18,ra:ra_19
	a0Out = 0<32>
	a2Out = dwArg10
	a5Out = a5_18
	return ra_19
mbedtls_pk_debug_exit:


void mbedtls_pk_get_name(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_info
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
mbedtls_pk_get_name_entry:
l230567A0:
	branch a0 == 0<32> l230567AA
l230567A2:
	branch a5 == 0<32> l230567AA
l230567AA:
	return
l230567A6:
	return
mbedtls_pk_get_name_exit:


word32 mbedtls_pk_get_type(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
mbedtls_pk_get_type_entry:
l230567B4:
	branch a0 == 0<32> l230567C2
l230567C2:
l230567B6:
	branch a5 == 0<32> l230567C4
l230567C4:
	return 0<32>
l230567BC:
	return CONVERT(Mem0[a5:byte], byte, word32)
mbedtls_pk_get_type_exit:


word32 pk_use_ecparams(word32 s0, word32 a1, word32 a2, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_sec1_der
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_subpubkey
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] s0:[24..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3 tp
// Preserved: sp
pk_use_ecparams_entry:
l230567C6:
	word32 a0_5 = Mem0[a4:word32]
	branch a4 == 6<32> l230567E4
l230567E4:
	word32 a0_26
	byte bLoc11_63 = SLICE(s0, byte, 24)
	word32 a0_16
	word32 a4_20
	word32 a3_19
	word32 a2_18
	word32 a1_17
	word32 a5_21
	word32 s2_109
	word32 s1_106 = mbedtls_oid_get_ec_grp(a0_5, fp + 0xFFFFFFEF<32>, a2, 6<32>, dwArg18, out a0_16, out a1_17, out a2_18, out a3_19, out a4_20, out a5_21, out s2_109)
	branch a0_16 != 0<32> l2305680C
l2305680C:
	a0_26 = 0xFC000600<32>
l230567F6:
	a5_21 = CONVERT(Mem14[a1:byte], byte, word32)
	a1_17 = CONVERT(bLoc11_63, byte, word32)
	branch a5_21 == 0<32> l23056804
l23056800:
	branch a5_21 != a1_17 l230567D6
l230567D6:
	a0_26 = 0xFC000300<32>
l23056804:
	mbedtls_ecp_group_load(a1, a2_18, a4_20, mstatus, dwLoc08, dwArg24, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, dwArg0148, out s1_106, out a0_26, out a1_17, out a2_18, out a3_19, out a4_20, out a5_21, out s2_109, out s4)
l230567DC:
	a0Out = a0_26
	a1Out = a1_17
	a2Out = a2_18
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_21
	s2Out = s2_109
	s4Out = s4
	return s1_106
l230567CE:
	a0Out = 0xFC000300<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 6<32>
	s2Out = s2
	s4Out = s4
	return s1
pk_use_ecparams_exit:


word32 pk_parse_key_pkcs1_der(word32 ra, word32 a0, word32 a1, word32 a2, word32 a5, word32 s2, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_key
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s10 s11 s2 s3 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pk_parse_key_pkcs1_der_entry:
l23056814:
	word32 s0_304
	word32 s0_105
	word32 s1_284 = a0
	word32 a2_537
	word32 a1_536
	word32 a5_281
	word32 a4_280
	word32 a3_279
	word32 a0_24 = mbedtls_asn1_get_tag(a1 + a2, fp + -40<i32>, 48<i32>, a5, out a1_536, out a2_537, out a3_279, out a4_280, out a5_281)
	branch a0_24 == 0<32> l2305684C
l2305684C:
	s2 = s2 + a5_281
	word32 a1_538
	mbedtls_asn1_get_int(s2, a0, a5_281, out s1_284, out a0_24, out a1_538, out a3_279, out a4_280, out a5_281)
	branch a0_24 != 0<32> l23056834
l2305685E:
	s1_284 = Mem22[a5_281:word32]
	branch a5_281 != 0<32> l23056920
l23056920:
	s0_304 = 0xFC000280<32>
l23056862:
	word32 a0_57
	word32 s4_541
	word32 a1_540
	word32 s0_539
	word32 s1_117
	word32 a5_114
	word32 a4_113
	word32 a2_111
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_281, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_539, out s1_117, out a0_57, out a1_540, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_541)
	s0_105 = a0_57
	branch a0_57 != 0<32> l230568E4
l23056874:
	word32 a0_83
	word32 s4_544
	word32 a1_543
	word32 s0_542
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_542, out s1_117, out a0_83, out a1_543, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_544)
	s0_105 = a0_83
	branch a0_83 != 0<32> l230568E4
l23056884:
	word32 a0_109
	word32 s4_547
	word32 a1_546
	word32 s0_545
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_545, out s1_117, out a0_109, out a1_546, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_547)
	s0_105 = a0_109
	branch a0_109 != 0<32> l230568E4
l23056894:
	word32 a0_135
	word32 s0_548
	word32 a1_549
	word32 s4_550
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_548, out s1_117, out a0_135, out a1_549, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_550)
	s0_105 = a0_135
	branch a0_135 != 0<32> l230568E4
l230568A4:
	word32 a0_161
	word32 s0_551
	word32 a1_552
	word32 s4_553
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_551, out s1_117, out a0_161, out a1_552, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_553)
	s0_105 = a0_161
	branch a0_161 != 0<32> l230568E4
l230568B4:
	word32 a0_187
	word32 s0_554
	word32 a1_555
	word32 s4_556
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_554, out s1_117, out a0_187, out a1_555, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_556)
	s0_105 = a0_187
	branch a0_187 != 0<32> l230568E4
l230568C4:
	word32 a0_213
	word32 s0_557
	word32 a1_558
	word32 s4_559
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_557, out s1_117, out a0_213, out a1_558, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_559)
	s0_105 = a0_213
	branch a0_213 != 0<32> l230568E4
l230568D4:
	word32 a0_239
	word32 s4_248
	word32 s0_560
	word32 a1_561
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_560, out s1_117, out a0_239, out a1_561, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_248)
	s0_105 = a0_239
	branch a0_239 == 0<32> l230568F2
l230568F2:
	word32 a4_267
	word32 a5_268
	word32 a1_562
	word32 a3_563
	Mem270[mbedtls_mpi_size(a2_111, a4_113, a5_114, out a1_562, out a3_563, out a4_267, out a5_268) + 4<i32>:word32] = s1_117
	branch a5_268 == s2 l2305690E
l2305690E:
	word32 a0_276
	word32 a2_278
	ra = mbedtls_rsa_check_privkey(ra, s1_117, dwArgB4, a4_267, a5_268, s2, s4_248, s6, s7, s10, s11, mstatus, dwLoc28, dwLoc08, dwArg08, dwArg18, dwArg24, dwArg28, dwArg34, dwArg38, dwArg44, dwArg48, a1, dwArg58, dwArg74, dwArg98, dwArgA8, out s1_284, out a0_276, out a2_278, out a3_279, out a4_280, out a5_281, out s2, out s3, out s6, out s7, out s10, out s11)
	s0_304 = a0_276
	branch a0_276 == 0<32> l2305683C
l23056918:
	s1_284 = mbedtls_rsa_free(s1_284, a2_278, a4_280, a5_281, mstatus, s2, dwArg0108, dwArg0118, dwArg0148, dwArg0158, out a3_279, out a4_280, out a5_281)
l23056902:
	s1_284 = mbedtls_rsa_free(s1_117, dwArgB4, a4_267, a5_268, mstatus, s2, dwArg0108, dwArg0118, dwArg0148, dwArg0158, out a3_279, out a4_280, out a5_281)
	s0_304 = 0xFC00029A<32>
l230568E4:
	s1_284 = mbedtls_rsa_free(s1_117, a2_111, a4_113, a5_114, mstatus, s2, dwArg0108, dwArg0118, dwArg0148, dwArg0158, out a3_279, out a4_280, out a5_281)
	a0_24 = 0xFC000300<32>
l23056834:
	s0_105 = 0xFC000300<32>
l2305683A:
	s0_304 = s0_105 + a0_24
l2305683C:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_284
	a0Out = s0_304
	a2Out = dwArg0100
	a3Out = a3_279
	a4Out = a4_280
	a5Out = a5_281
	s2Out = s2
	s3Out = s3
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	return ra
pk_parse_key_pkcs1_der_exit:


word32 pk_parse_key_sec1_der(word32 ra, word32 s1, word32 a1, word32 a2, word32 a5, word32 s2, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_key
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pk_parse_key_sec1_der_entry:
l23056928:
	word32 s0_112
	word32 s0_107
	word32 s1_154 = a0
	word32 a1_820
	word32 a2_821
	word32 a5_190
	word32 a4_111
	word32 a3_188
	word32 a0_185 = mbedtls_asn1_get_tag(a1 + a2, fp + -52<i32>, 48<i32>, a5, out a1_820, out a2_821, out a3_188, out a4_111, out a5_190)
	branch a0_185 == 0<32> l23056950
l23056950:
	s2 = s2 + a5_190
	word32 a1_822
	mbedtls_asn1_get_int(s2, fp + -56<i32>, a5_190, out s1_154, out a0_185, out a1_822, out a3_188, out a4_111, out a5_190)
	branch a0_185 != 0<32> l23056948
l23056962:
	a5_190 = 1<32>
	branch a4_111 != 1<32> l23056ABC
l23056ABC:
	s0_112 = 0xFC000280<32>
l2305696A:
	word32 a1_59
	word32 a2_823
	a0_185 = mbedtls_asn1_get_tag(s2, fp + -52<i32>, 4<32>, 1<32>, out a1_59, out a2_823, out a3_188, out a4_111, out a5_190)
	branch a0_185 != 0<32> l23056948
l23056978:
	word32 a0_69
	word32 a5_74
	word32 s0_824
	word32 a1_825
	word32 a3_826
	word32 a7_827
	word32 s8_828
	word32 s4_160
	word32 a4_105
	word32 a2_103
	ra = mbedtls_mpi_read_binary(ra, a1_59, dwArg44, a3_188, a4_111, mstatus, a1, s2, dwArg98, dwArgA8, dwArgD8, dwArgE8, dwArg0118, dwArg0128, out s0_824, out s1_154, out a0_69, out a1_825, out a2_103, out a3_826, out a4_105, out a5_74, out a7_827, out s2, out s3, out s4_160, out s8_828)
	s0_107 = a0_69
	branch a0_69 == 0<32> l230569A8
l230569A8:
	word32 a2_110
	word32 a5_211
	word32 a5_94 = a5_74 + a4_105
	word32 dwLoc38_440 = a5_94
	branch a5_94 == s2 l23056A92
l230569B4:
	word32 a5_108
	word32 a5_106
	word32 a3_830
	word32 a1_829
	word32 a0_100 = mbedtls_asn1_get_tag(s2, fp + -52<i32>, 160<i32>, a5_94, out a1_829, out a2_103, out a3_830, out a4_105, out a5_106)
	s0_107 = a0_100
	branch a0_100 != 0<32> l23056A22
l23056A22:
	a5_108 = -98<i32>
	branch a0_100 != -98<i32> l2305698A
l230569C6:
	word32 a5_113 = CONVERT(Mem95[a5_106:byte], byte, word32)
	a2_110 = dwLoc3C
	a4_111 = 6<32>
	s0_112 = a0_100 + a5_106
	dwArg48 = a5_113
	branch a5_113 != 6<32> l23056A1A
l23056A1A:
	s0_112 = 0xFC00029E<32>
l230569D8:
	word32 a5_127
	word32 a3_832
	word32 a1_831
	word32 a0_121 = mbedtls_asn1_get_tag(s0_112, fp + -40<i32>, 6<32>, a5_113, out a1_831, out a2_110, out a3_832, out a4_111, out a5_127)
	branch a0_121 == 0<32> l23056A04
l23056A04:
	word32 a5_131 = a5_127 + a4_111
	dwLoc38_440 = a5_131
	branch s0_112 == a5_131 l230569F0
l23056A12:
	s0_112 = 0xFC00029A<32>
l230569E6:
	s0_112 = a0_121 + 0xFC000300<32>
	branch a0_121 != 0xFC000300<32> l230569FC
l230569F0:
	word32 a0_147
	word32 a3_834
	word32 a1_833
	s1_154 = pk_use_ecparams(s0_112, s1_154, a2_110, a4_111, mstatus, s2, dwLoc1C, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, out a0_147, out a1_833, out a2_110, out a3_834, out a4_111, out a5_108, out s2, out s4_160)
	s0_112 = a0_147
	branch a0_147 == 0<32> l23056A2A
l23056A2A:
	word32 a5_175
	word32 a1_835
	word32 a3_836
	word32 a0_169 = mbedtls_asn1_get_tag(s2, fp + -52<i32>, 161<i32>, a5_108, out a1_835, out a2_103, out a3_836, out a4_105, out a5_175)
	s0_107 = a0_169
	branch a0_169 != 0<32> l23056A8A
l23056A8A:
	branch a0_169 != -98<i32> l2305698A
l23056A3C:
	word32 s0_183 = a0_169 + a5_175
	word32 a2_838
	word32 a1_837
	s1_154 = mbedtls_asn1_get_bitstring_null(s0_183, fp + -52<i32>, a5_175, out a0_185, out a1_837, out a2_838, out a3_188, out a4_111, out a5_190)
	branch a0_185 != 0<32> l23056948
l23056A50:
	a5_190 = a5_190 + dwArgA4
	branch s0_183 != a5_190 l23056AC4
l23056AC4:
	s0_112 = 0xFC00029A<32>
l23056A5A:
	word32 a1_839
	word32 s0_213
	word32 a0_206
	ra = mbedtls_ecp_point_read_binary(ra, s0_183, s1_154 + 136<i32>, dwArgA4, s0_183 - dwArgA4, a4_111, s1_154 + 136<i32>, mstatus, dwLoc40, dwLoc3C, s2, dwLoc18, dwLoc08, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out s0_213, out s1_154, out a0_206, out a1_839, out a2_103, out a3_188, out a4_111, out a5_211, out s2, out s3, out s4_160)
	branch a0_206 != 0<32> l23056A74
l23056A6C:
	word32 s5_841
	word32 a1_840
	ra = mbedtls_ecp_check_pubkey(ra, s1_154, s1_154, s2, a2_103, s4_160, s6, s7, s10, s11, mstatus, dwLoc3C, dwLoc38_440, s2, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, dwArg48, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_213, out s1_154, out a0_206, out a1_840, out a2_103, out a3_188, out a4_111, out a5_211, out s2, out s3, out s4_160, out s5_841, out s6, out s7, out s10, out s11, out mstatus)
l23056A74:
	dwLoc38_440 = s0_213
	branch a0_206 == 0<32> l23056AAC
l23056A78:
	a5_190 = 0xFB000180<32>
	branch a0_206 == 0xFB000180<32> l23056A92
l23056A92:
	word32 a0_307
	ra = mbedtls_ecp_mul(ra, s1_154, s1_154 + 136<i32>, s3, s1_154 + 40<i32>, 0<32>, s2, s4_160, s7, s10, s11, mstatus, dwLoc40, dwLoc3C, dwLoc38_440, s2, dwLoc18, dwArg08, dwArg18, dwArg38, dwArg44, dwArg48, s1, dwArg68, dwArg74, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgE8, dwArgF8, out s1_154, out a0_307, out a2_103, out a4_105, out a5_211, out s2, out s3, out s6, out s7, out s10, out s11, out mstatus)
	s0_107 = a0_307
	branch a0_307 != 0<32> l2305698A
l23056AAC:
	word32 a0_345
	s1_154 = mbedtls_ecp_check_privkey(a2_103, a5_211, out a0_345, out a2_110, out a3_188, out a4_111, out a5_190)
	s0_112 = a0_345
	branch a0_345 == 0<32> l23056998
l23056ABA:
l23056A82:
	s0_112 = 0xFC000300<32>
l230569FC:
	s1_154 = mbedtls_ecp_keypair_free(s1_154, a2_110, a4_111, mstatus, dwLoc30, dwLoc18, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out a3_188, out a4_111, out a5_190, out s2)
l2305698A:
	s1_154 = mbedtls_ecp_keypair_free(s1_154, a2_103, a4_105, mstatus, dwLoc30, dwLoc18, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out a3_188, out a4_111, out a5_190, out s2)
	a0_185 = 0xFC000300<32>
l23056948:
	s0_107 = 0xFC000300<32>
l23056996:
	s0_112 = s0_107 + a0_185
l23056998:
	s1Out = s1_154
	a0Out = s0_112
	a2Out = dwArg0138
	a3Out = a3_188
	a4Out = a4_111
	a5Out = a5_190
	s2Out = s2
	s3Out = s3
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
pk_parse_key_sec1_der_exit:


word32 pk_get_pk_alg(word32 ra, word32 a1, word32 a3, word32 dwArg08, word32 dwArg84, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_subpubkey
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
pk_get_pk_alg_entry:
l23056ACC:
	word32 a0_116
	word32 a5_127
	word32 a5_30
	word32 a4_171
	word32 a1_168
	word32 a3_170
	word32 a2_169
	word32 a0_167
	word32 t1_166
	word32 ra_31 = memset(ra, a3, 0<32>, 0xC<32>, out t1_166, out a0_167, out a1_168, out a2_169, out a3_170, out a4_171, out a5_30)
	word32 a2_39
	word32 a5_42
	word32 s3_47
	word32 s4_48
	word32 a0_52
	word32 a4_124
	word32 a3_121
	word32 a1_118
	word32 s2_138
	word32 s1_135 = mbedtls_asn1_get_alg(a1, fp + -44<i32>, a3, a5_30, dwArg84, dwArgF8, out a0_52, out a1_118, out a2_39, out a3_121, out a4_124, out a5_42, out s2_138, out s3_47, out s4_48)
	branch a0_52 == 0<32> l23056B0E
l23056B0E:
	s1_135 = mbedtls_oid_get_pk_alg(fp + -44<i32>, s1_135, a2_39, a5_42, dwArg08, out a0_116, out a1_118, out a3_121, out a4_124, out a5_127, out s2_138)
	branch a0_116 != 0<32> l23056B38
l23056B38:
	a0_116 = 0xFC000380<32>
l23056B18:
	a4_124 = CONVERT(Mem23[s1_135:byte], byte, word32)
	a5_127 = 1<32>
	branch a4_124 != 1<32> l23056B00
l23056B22:
	a4_124 = 5<32>
	branch false l23056B2C
l23056B2A:
	branch true l23056B30
l23056B2C:
	branch false l23056B00
l23056B30:
	a0_116 = 0xFC000580<32>
l23056AF8:
	a5_127 = 0xFC000580<32>
	a0_116 = a0_52 + 0xFC000580<32>
l23056B00:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_135
	a0Out = a0_116
	a1Out = a1_118
	a3Out = a3_121
	a4Out = a4_124
	a5Out = a5_127
	s2Out = s2_138
	s3Out = s3_47
	s4Out = s4_48
	return ra_31
pk_get_pk_alg_exit:


word32 pk_parse_key_pkcs8_unencrypted_der(word32 ra, word32 s0, word32 a1, word32 a2, word32 a5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_parse_key
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pk_parse_key_pkcs8_unencrypted_der_entry:
l23056B40:
	word32 s0_119
	word32 s1_112 = a0
	word32 a2_426
	word32 a1_425
	word32 a4_109
	word32 a3_108
	word32 a5_101
	word32 a0_204 = mbedtls_asn1_get_tag(a1 + a2, fp + -36<i32>, 48<i32>, a5, out a1_425, out a2_426, out a3_108, out a4_109, out a5_101)
	byte bLoc29_234 = SLICE(CONVERT(nLoc2C, word24, uint32), byte, 24)
	branch a0_204 == 0<32> l23056B74
l23056B74:
	word32 a1_427
	mbedtls_asn1_get_int(s0 + a5_101, fp + -40<i32>, a5_101, out s1_112, out a0_204, out a1_427, out a3_108, out a4_109, out a5_101)
	branch a0_204 != 0<32> l23056B60
l23056B86:
	branch a5_101 != 0<32> l23056C0C
l23056C0C:
	s0_119 = 0xFC000280<32>
l23056B8A:
	word32 s0_61
	word32 s4_429
	word32 a1_428
	ra = pk_get_pk_alg(ra, dwArgB4, fp + -28<i32>, a1, dwArg54, dwArgC8, dwArgF8, out s0_61, out s1_112, out a0_204, out a1_428, out a3_108, out a4_109, out a5_101, out s2, out s3, out s4_429)
	branch a0_204 != 0<32> l23056B60
l23056B9A:
	word32 a2_431
	word32 a1_430
	a0_204 = mbedtls_asn1_get_tag(s0_61, fp + -36<i32>, 4<32>, a5_101, out a1_430, out a2_431, out a3_108, out a4_109, out a5_101)
	branch a0_204 != 0<32> l23056B60
l23056BA8:
	branch a5_101 == 0<32> l23056C14
l23056C14:
	s0_119 = 0xFC0002A0<32>
l23056BAC:
	word32 a0_86 = mbedtls_pk_info_from_type(CONVERT(bLoc29_234, byte, word32), out a5_101)
	branch a0_86 != 0<32> l23056BC0
l23056BC0:
	word32 a0_90
	word32 a1_91
	word32 a2_92
	ra = mbedtls_pk_setup(ra, s0_61, s1_112, s1_112, a0_86, a5_101, out s1_112, out a0_90, out a1_91, out a2_92, out a5_101)
	s0_119 = a0_90
	branch a0_90 != 0<32> l23056B68
l23056BCA:
	word32 a0_127
	word32 a5_98 = CONVERT(bLoc29_234, byte, word32)
	a4_109 = 1<32>
	branch a5_98 != 1<32> l23056BEA
l23056BEA:
	a5_101 = a5_98 + 0xFFFFFFFE<32> & 255<i32>
	branch a5_101 >u 1<32> l23056BB8
l23056BF4:
	word32 a0_105
	word32 a1_106
	word32 s4_437
	word32 a2_436
	s1_112 = pk_use_ecparams(a0_90, a1_91, a2_92, 1<32>, mstatus, dwLoc18, dwLoc0C, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, out a0_105, out a1_106, out a2_436, out a3_108, out a4_109, out a5_101, out s2, out s4_437)
	s0_119 = a0_105
	branch a0_105 != 0<32> l23056BE2
l23056C00:
	word32 a2_438
	ra = pk_parse_key_sec1_der(ra, Mem19[a0_105 + 4<i32>:word32], a1_106, dwArg54, a5_101, s2, s6, s7, s10, s11, mstatus, a1, dwLoc18, dwLoc08, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg44, dwArg48, dwArg58, ra, dwArg68, dwArg74, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s1_112, out a0_127, out a2_438, out a3_108, out a4_109, out a5_101, out s2, out s3, out s6, out s7, out s10, out s11, out mstatus)
l23056BD4:
	word32 a2_433
	word32 s0_432
	ra = pk_parse_key_pkcs1_der(ra, a0_90, a1_91, dwArg54, a5_98, s2, s6, s7, s10, s11, mstatus, a1, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg14, dwArg18, dwArg28, dwArg44, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0128, out s0_432, out s1_112, out a0_127, out a2_433, out a3_108, out a4_109, out a5_101, out s2, out s3, out s6, out s7, out s10, out s11)
l23056BDE:
	s0_119 = a0_127
	branch a0_127 == 0<32> l23056B68
l23056BE2:
	word32 a2_435
	word32 a0_434
	ra = mbedtls_pk_free(ra, s1_112, a5_101, out a0_434, out a2_435, out a5_101)
l23056BB8:
	s0_119 = 0xFC000380<32>
l23056B60:
	s0_119 = a0_204 + 0xFC000300<32>
l23056B68:
	s0Out = dwArgE4
	s1Out = s1_112
	a0Out = s0_119
	a2Out = dwArg0100
	a3Out = a3_108
	a4Out = a4_109
	a5Out = a5_101
	s2Out = s2
	s3Out = s3
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
pk_parse_key_pkcs8_unencrypted_der_exit:


word32 mbedtls_pk_load_file(word32 ra, word32 s1, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_parse_keyfile
//      mbedtls_x509_crt_parse_file
// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_pk_load_file_entry:
l23056C1C:
	word32 a3_199
	word32 a4_200
	word32 a1_196
	word32 s1_175
	word32 s10_120
	word32 s2_176
	word32 s3_177
	word32 s11_121
	word32 s6_183
	word32 s7_127
	word32 s5_182
	word32 a5_206
	word32 s1_35
	word32 s2_38
	word32 a0_51
	word32 s2_62
	word32 mstatus_75
	word32 a0_477
	word32 a1_478
	word32 a2_479
	word32 a3_480
	word32 a4_481
	word32 a5_482
	word32 a7_483
	word32 s3_484
	word32 s4_485
	word32 s5_486
	word32 s6_487
	word32 s7_488
	word32 s8_489
	word32 s9_490
	word32 s10_491
	word32 s11_492
	word32 t4_493
	word32 s0_494
	word32 a4_495
	word32 a5_496
	word32 s3_497
	word32 s6_498
	word32 a3_236
	word32 ra_164 = aos_open(printf(ra, 0x23088B64<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_35, out a0_477, out a1_478, out a2_479, out a3_480, out a4_481, out a5_482, out a7_483, out s2_38, out s3_484, out s4_485, out s5_486, out s6_487, out s7_488, out s8_489, out s9_490, out s10_491, out s11_492, out t4_493), s1_35, s2_38, mstatus, s4, s3, s1, dwArgD8, dwArg0118, dwArg0158, out s0_494, out a0_51, out a3_236, out a4_495, out a5_496, out s2_62, out s3_497, out s6_498, out mstatus_75)
	branch a0_51 < 0<32> l23056C6A
l23056C4E:
	word32 a0_82
	word32 a3_85
	word32 a4_86
	word32 a2_89
	word32 s0_507
	ra_164 = aos_lseek(ra_164, a0_51, 0<32>, dwLoc20, dwArg24, out s0_507, out a0_82, out a2_89, out a3_85, out a4_86)
	branch a0_82 != 0xFFFFFFFF<32> l23056C96
l23056C96:
	word32 a3_99
	word32 s0_105
	word32 a0_508
	word32 a2_509
	word32 a4_510
	word32 ra_104 = aos_lseek(ra_164, a0_51, 0<32>, dwLoc20, dwArg24, out s0_105, out a0_508, out a2_509, out a3_99, out a4_510)
	Mem108[s0_105:word32] = a0_82
	word32 a5_111
	word32 a1_113
	word32 s4_124
	word32 a0_511
	word32 a7_512
	word32 s3_513
	word32 s5_514
	word32 s6_515
	word32 s8_516
	word32 s9_517
	word32 t4_518
	word32 s1_119
	word32 s2_122
	word32 a4_116
	word32 a3_115
	word32 a2_114
	word32 ra_118 = printf(ra_104, 0x23088B74<32>, a3_99, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_119, out a0_511, out a1_113, out a2_114, out a3_115, out a4_116, out a5_111, out a7_512, out s2_122, out s3_513, out s4_124, out s5_514, out s6_515, out s7_127, out s8_516, out s9_517, out s10_120, out s11_121, out t4_518)
	branch a1_113 != s4_124 l23056CDE
l23056CDE:
	word32 s0_526
	word32 a1_527
	word32 a5_528
	word32 s3_529
	word32 s4_530
	word32 s8_531
	ra_118 = mycalloc(ra_118, s1_119, 1<32>, a1_113 + 1<32>, a3_115, a4_116, a5_111, mstatus_75, dwArg00, dwArg04, dwArgF8, dwArg0138, out s0_526, out s1_119, out a1_527, out a2_114, out a3_115, out a4_116, out a5_528, out s2_122, out s3_529, out s4_530, out s8_531)
	Mem152[s2_122:word32] = 1<32>
	branch false l23056CB8
l23056CEE:
	word32 a0_156
	word32 a5_157
	word32 a2_159
	word32 a4_163
	word32 s0_547
	word32 a1_548
	ra_164 = aos_read(ra_118, s1_119, 1<32>, a4_116, dwLoc20, dwArg24, out s0_547, out a0_156, out a1_548, out a2_159, out a4_163, out a5_157)
	branch a0_156 == a5_157 l23056D10
l23056D10:
	word32 a4_173
	word32 a2_549
	word32 a3_550
	word32 a5_551
	s1_175 = aos_close(ra_164, s1_119, a2_159, a3_115, a4_163, s2_122, mstatus_75, dwArg18, out a2_549, out a3_550, out a4_173, out a5_551, out s2_176, out s3_177, out s5_182, out s6_183)
	Mem194[Mem152[s2_176:int32] + a4_173:byte] = 0<8>
	a5_206 = 0<32>
	word32 a5_552
	branch strstr(ra_164, Mem194[s2_176:int32], 0x23088B88<32>, out a1_196, out a3_199, out a4_200, out a5_552) == 0<32> l23056C84
l23056D36:
	Mem209[1<32>:word32] = Mem194[0<32>:word32]
	a5_206 = 0<32>
l23056CFC:
	word32 a2_213
	word32 a5_214
	word32 s2_221
	word32 a3_553
	word32 a4_554
	word32 s3_555
	word32 s5_556
	word32 s6_557
	aos_close(ra_164, s1_119, a2_159, a3_115, a4_163, s2_122, mstatus_75, dwArg18, out a2_213, out a3_553, out a4_554, out a5_214, out s2_221, out s3_555, out s5_556, out s6_557)
	word32 s0_558
	word32 s1_559
	word32 a0_560
	word32 a1_561
	word32 a2_562
	word32 a4_563
	word32 a5_564
	word32 a6_565
	word32 s4_566
	word32 t3_567
	vPortFree(Mem152[s2_221:int32], a2_213, a5_214, mstatus_75, dwArg0138, dwArg0178, out s0_558, out s1_559, out a0_560, out a1_561, out a2_562, out a3_236, out a4_563, out a5_564, out a6_565, out s4_566, out t3_567)
l23056CB8:
	word32 a3_263
	word32 a2_532
	word32 a4_533
	word32 a5_534
	word32 s2_535
	word32 s3_536
	word32 s5_537
	word32 s6_538
	aos_close(ra_118, s1_119, a2_114, a3_115, a4_116, s2_122, mstatus_75, dwArg18, out a2_532, out a3_263, out a4_533, out a5_534, out s2_535, out s3_536, out s5_537, out s6_538)
	word32 a0_539
	word32 a2_540
	word32 a5_541
	word32 a7_542
	word32 s4_543
	word32 s8_544
	word32 s9_545
	word32 t4_546
	ra_164 = printf(ra_118, 0x23078A44<32>, a3_263, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_175, out a0_539, out a1_196, out a2_540, out a3_199, out a4_200, out a5_541, out a7_542, out s2_176, out s3_177, out s4_543, out s5_182, out s6_183, out s7_127, out s8_544, out s9_545, out s10_120, out s11_121, out t4_546)
	a5_206 = 0xFC000080<32>
l23056C60:
	word32 a2_519
	word32 a4_520
	word32 a5_521
	word32 s2_522
	word32 s3_523
	word32 s5_524
	word32 s6_525
	aos_close(ra_164, a0_51, a2_89, a3_85, a4_86, s2_62, mstatus_75, dwArg18, out a2_519, out a3_236, out a4_520, out a5_521, out s2_522, out s3_523, out s5_524, out s6_525)
l23056C6A:
	word32 a0_499
	word32 a2_500
	word32 a5_501
	word32 a7_502
	word32 s4_503
	word32 s8_504
	word32 s9_505
	word32 t4_506
	ra_164 = printf(ra_164, 0x23078A44<32>, a3_236, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_175, out a0_499, out a1_196, out a2_500, out a3_199, out a4_200, out a5_501, out a7_502, out s2_176, out s3_177, out s4_503, out s5_182, out s6_183, out s7_127, out s8_504, out s9_505, out s10_120, out s11_121, out t4_506)
	a5_206 = 0xFC000200<32>
l23056C84:
	s1Out = s1_175
	a0Out = a5_206
	a1Out = a1_196
	a2Out = dwArg48
	a3Out = a3_199
	a4Out = a4_200
	a5Out = a5_206
	s2Out = s2_176
	s3Out = s3_177
	s4Out = dwArg04
	s5Out = s5_182
	s6Out = s6_183
	s7Out = s7_127
	s8Out = s4
	s10Out = s10_120
	s11Out = s11_121
	mstatusOut = mstatus_75
	return ra_164
mbedtls_pk_load_file_exit:


word32 mbedtls_pk_parse_subpubkey(word32 ra, word32 s1, word32 a0, word32 a1, word32 a5, word32 s2, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a5 mstatus ra s1 s10 s11 s2 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_pk_parse_subpubkey_entry:
l23056D40:
	word32 a5_108
	word32 s1_132
	word32 dwLoc38_351 = CONVERT(nLoc38, word24, uint32)
	word32 a5_35
	word32 a4_587
	word32 a2_585
	word32 a3_586
	word32 a1_104
	word32 a0_29 = mbedtls_asn1_get_tag(a1, fp + -52<i32>, 48<i32>, a5, out a1_104, out a2_585, out a3_586, out a4_587, out a5_35)
	byte bLoc35_354 = SLICE(dwLoc38_351, byte, 24)
	branch a0_29 == 0<32> l23056D86
l23056D86:
	word32 a0_43
	word32 s0_51
	word32 a4_590
	word32 a3_589
	word32 s1_588
	word32 s3_220
	word32 s4_116
	ra = pk_get_pk_alg(ra, Mem26[a0:int32] + a5_35, fp + -44<i32>, dwLoc38_351, dwArg44, dwArgB8, dwArgE8, out s0_51, out s1_588, out a0_43, out a1_104, out a3_589, out a4_590, out a5_108, out s2, out s3_220, out s4_116)
	s1_132 = a0_43
	branch a0_43 != 0<32> l23056D70
l23056DA0:
	word32 a4_69
	word32 a3_592
	word32 a2_591
	word32 a5_593
	word32 s1_72 = mbedtls_asn1_get_bitstring_null(s2, fp + -52<i32>, a5_108, out a0_29, out a1_104, out a2_591, out a3_592, out a4_69, out a5_593)
	branch a0_29 == 0<32> l23056DB4
l23056DB4:
	a5_108 = Mem26[s3_220:int32] + a4_69
	branch s2 != a5_108 l23056EB4
l23056EB4:
	s1_132 = 0xFC00049A<32>
l23056DC0:
	word32 a0_80 = mbedtls_pk_info_from_type(CONVERT(bLoc35_354, byte, word32), out a5_108)
	a1_104 = a0_80
	branch a0_80 == 0<32> l23056EBC
l23056EBC:
	s1_132 = 0xFC000380<32>
l23056DCE:
	word32 a0_86
	word32 a2_88
	word32 s1_594
	ra = mbedtls_pk_setup(ra, s0_51, s1_72, s4_116, a0_80, a5_108, out s1_594, out a0_86, out a1_104, out a2_88, out a5_108)
	s1_132 = a0_86
	branch a0_86 != 0<32> l23056D70
l23056DD8:
	word32 s0_117
	word32 a5_94 = CONVERT(bLoc35_354, byte, word32)
	branch a5_94 != 1<32> l23056E64
l23056E64:
	a5_108 = a5_94 + 0xFFFFFFFE<32> & 255<i32>
	branch a5_108 >u 1<32> l23056EAC
l23056EAC:
	s0_117 = 0xFC000380<32>
l23056E6E:
	word32 a0_103
	word32 a4_107
	word32 a2_602
	word32 a3_603
	pk_use_ecparams(s0_51, Mem26[s4_116 + 4<i32>:int32], a2_88, 1<32>, mstatus, s2, dwLoc1C, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, out a0_103, out a1_104, out a2_602, out a3_603, out a4_107, out a5_108, out s2, out s4_116)
	s0_117 = a0_103
	branch a0_103 != 0<32> l23056E00
l23056E7C:
	s5 = Mem26[s4_116 + 4<i32>:int32]
	word32 a2_119 = Mem26[s3_220:int32]
	s6 = s5 + 136<i32>
	word32 a0_124
	word32 a2_126
	word32 s0_604
	word32 a3_605
	word32 a4_606
	word32 s3_134
	ra = mbedtls_ecp_point_read_binary(ra, a0_103, s5 + 136<i32>, a2_119, s2 - a2_119, a4_107, s2, mstatus, dwLoc40, dwLoc3C, s2, dwLoc18, dwLoc08, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out s0_604, out s1_132, out a0_124, out a1_104, out a2_126, out a3_605, out a4_606, out a5_108, out s2, out s3_134, out s4_116)
	s0_117 = a0_124
	branch a0_124 != 0<32> l23056EA2
l23056E98:
	word32 a0_152
	word32 s0_607
	word32 a2_608
	word32 a3_609
	word32 a4_610
	ra = mbedtls_ecp_check_pubkey(ra, s1_132, s5, s5 + 136<i32>, a2_126, s4_116, s5 + 136<i32>, s7, s10, s11, mstatus, dwLoc3C, dwLoc38_351, s2, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, dwArg48, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_607, out s1_132, out a0_152, out a1_104, out a2_608, out a3_609, out a4_610, out a5_108, out s2, out s3_134, out s4_116, out s5, out s6, out s7, out s10, out s11, out mstatus)
	s0_117 = a0_152
l23056EA2:
	Mem184[s3_134:word32] = s2
	branch s0_117 == 0<32> l23056D70
l23056EAA:
l23056DE2:
	word32 s0_190 = Mem26[s4_116 + 4<i32>:int32]
	word32 a4_196
	word32 a3_596
	word32 a2_595
	word32 a0_191 = mbedtls_asn1_get_tag(s2, fp + -48<i32>, 48<i32>, a5_94, out a1_104, out a2_595, out a3_596, out a4_196, out a5_108)
	branch a0_191 == 0<32> l23056E0A
l23056E0A:
	a5_108 = Mem26[s3_220:int32] + a4_196
	branch s2 == a5_108 l23056E1E
l23056E1E:
	s5 = s0_190 + 8<i32>
	word32 s0_599
	word32 a2_600
	word32 a4_601
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_108, mstatus, dwArg24, dwArg78, dwArg88, dwArgB8, dwArgC8, dwArgF8, dwArg0108, out s0_599, out s1_132, out a0_191, out a1_104, out a2_600, out a4_601, out a5_108, out s2, out s3_220, out s4_116)
	branch a0_191 != 0<32> l23056DF6
l23056E2E:
	word32 a2_232
	word32 a4_234
	word32 s0_237
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_108, mstatus, dwArg24, dwArg78, dwArg88, dwArgB8, dwArgC8, dwArgF8, dwArg0108, out s0_237, out s1_132, out a0_191, out a1_104, out a2_232, out a4_234, out a5_108, out s2, out s3_220, out s4_116)
	branch a0_191 != 0<32> l23056DF6
l23056E3C:
	a5_108 = Mem26[s3_220:int32]
	branch s2 != a5_108 l23056E16
l23056E44:
	word32 a0_254
	word32 a4_256
	word32 a2_258
	word32 a3_611
	s1_132 = mbedtls_rsa_check_pubkey(a2_232, a4_234, a5_108, out a0_254, out a1_104, out a2_258, out a3_611, out a4_256, out a5_108)
	branch a0_254 != 0<32> l23056E5C
l23056E5C:
	s0_117 = 0xFC000500<32>
l23056E4A:
	word32 a3_612
	word32 a4_613
	word32 a5_614
	Mem272[mbedtls_mpi_size(a2_258, a4_256, a5_108, out a1_104, out a3_612, out a4_613, out a5_614) + 4<i32>:word32] = s0_237
l23056DF6:
	s0_117 = a0_191 + 0xFC000500<32>
	branch s0_117 == 0<32> l23056E52
l23056E52:
	a5_108 = Mem279[s3_220:int32]
	branch a5_108 != s2 l23056E16
l23056E16:
	s0_117 = 0xFC00049A<32>
l23056E5A:
l23056E00:
	word32 a0_597
	word32 a2_598
	ra = mbedtls_pk_free(ra, s4_116, a5_108, out a0_597, out a2_598, out a5_108)
	s1_132 = s0_117
l23056DAC:
	a5_108 = 0xFC000500<32>
l23056D66:
	a5_108 = 0xFC000300<32>
l23056D6C:
	s1_132 = a0_29 + a5_108
l23056D70:
	0<32> = dwArg0198
	s1Out = s1_132
	a0Out = s1_132
	a1Out = a1_104
	a5Out = a5_108
	s2Out = s2
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mbedtls_pk_parse_subpubkey_exit:


word32 mbedtls_pk_parse_key(word32 ra, word32 s0, word32 s1, word32 a1, word32 a2, word32 a4, word32 s2, word32 s3, word32 s4, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0198, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
//      mbedtls_pk_parse_keyfile
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s8 sp
mbedtls_pk_parse_key_entry:
l23056EC4:
	word32 a3_103
	word32 a4_113
	word32 s3_11 = a2
	word32 s2_116 = a1
	word32 s6_119 = a4
	word32 a5_114
	word32 ra_105 = mbedtls_pem_init(ra, fp + -60<i32>, out a5_114)
	branch a2 != 0<32> l23056F5A
l23056F5A:
	a5_114 = CONVERT(Mem28[a2 + -1<i32> + a1:byte], byte, word32)
	branch a5_114 != 0<32> l23056EEE
l23056F66:
	word32 a2_178
	word32 a5_181
	word32 s1_184
	word32 a0_176
	word32 a0_57
	word32 s1_63
	word32 s4_64
	word32 s7_76
	word32 s0_876
	word32 a1_877
	word32 a2_878
	word32 a5_879
	word32 s5_880
	word32 s8_881
	word32 s9_882
	ra_105 = mbedtls_pem_read_buffer(ra_105, s0, fp + -60<i32>, 0x23088BB4<32>, 0x23088B94<32>, a1, fp + -64<i32>, a1, mstatus, dwArg34, dwArg88, dwArgC8, dwArg0108, out s0_876, out s1_63, out a0_57, out a1_877, out a2_878, out a3_103, out a4_113, out a5_879, out s2_116, out s3_11, out s4_64, out s5_880, out s6_119, out s7_76, out s8_881, out s9_882, out s10, out s11)
	s0 = a0_57
	branch a0_57 != 0<32> l23056FD8
l23056FD8:
	a5_114 = 0xFF000000<32>
	s7 = 0xFEFFFC80<32>
	branch a0_57 != 0xFEFFFC80<32> l23056FEA
l23056FEA:
	branch a0_57 != 0xFEFFFD00<32> l23056FFA
l23056FFA:
	a5_114 = 0xFEFFFF80<32>
	branch a0_57 != 0xFEFFFF80<32> l23056F98
l23057002:
	a5_114 = CONVERT(Mem28[s4_64:byte], byte, word32)
	branch a5_114 != 0<32> l23056EEE
l2305700A:
	word32 a0_101
	word32 s1_107
	word32 s4_108
	word32 s8_109
	word32 s0_895
	word32 a1_896
	word32 a2_897
	word32 s5_898
	word32 s9_899
	ra_105 = mbedtls_pem_read_buffer(ra_105, a0_57, fp + -60<i32>, 0x23088BF4<32>, 0x23088BD4<32>, s2_116, fp + -64<i32>, s2_116, mstatus, dwArg34, dwArg88, dwArgC8, dwArg0108, out s0_895, out s1_107, out a0_101, out a1_896, out a2_897, out a3_103, out a4_113, out a5_114, out s2_116, out s3_11, out s4_108, out s5_898, out s6_119, out s7, out s8_109, out s9_899, out s10, out s11)
	s0 = a0_101
	branch a0_101 != 0<32> l2305704C
l2305704C:
	branch a0_101 == s7 l23056FE2
l23057050:
	branch a0_101 == s8_109 l23056FF2
l23057054:
	branch a0_101 != 0xFEFFFF80<32> l23056F98
l2305705E:
	a5_114 = CONVERT(Mem28[s4_108:byte], byte, word32)
	branch a5_114 != 0<32> l23056EEE
l23057066:
	word32 a0_143
	word32 a2_144
	word32 a1_154
	word32 s5_160
	word32 s0_908
	word32 s1_909
	word32 s4_910
	word32 s8_911
	word32 s9_912
	ra_105 = mbedtls_pem_read_buffer(ra_105, a0_101, fp + -60<i32>, 0x23088C30<32>, 0x23088C14<32>, s2_116, fp + -64<i32>, s2_116, mstatus, dwArg34, dwArg88, dwArgC8, dwArg0108, out s0_908, out s1_909, out a0_143, out a1_154, out a2_144, out a3_103, out a4_113, out a5_114, out s2_116, out s3_11, out s4_910, out s5_160, out s6_119, out s7, out s8_911, out s9_912, out s10, out s11)
	s0 = a0_143
	branch a0_143 != 0<32> l23057094
l23057094:
	branch a0_143 != s5_160 l23056F98
l23057098:
l23057088:
	word32 s0_913
	word32 a3_914
	word32 a4_915
	word32 s2_916
	word32 s3_917
	word32 s6_918
	word32 s7_919
	word32 s10_920
	word32 s11_921
	ra_105 = pk_parse_key_pkcs8_unencrypted_der(ra_105, dwArg44, a1_154, a2_144, a5_114, s6_119, s7, s10, s11, mstatus, dwLoc3C, dwLoc38, s4, s2, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg14, dwArg18, dwArg28, dwArg34, dwArg38, dwArg44, dwArg48, s1, dwArg68, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_913, out s1_184, out a0_176, out a2_178, out a3_914, out a4_915, out a5_181, out s2_916, out s3_917, out s6_918, out s7_919, out s10_920, out s11_921, out mstatus)
l2305702C:
	word32 a0_206 = mbedtls_pk_info_from_type(2<32>, out a5_114)
	branch a0_206 == 0<32> l23056F92
l23057036:
	word32 a0_210
	word32 a1_211
	word32 a2_212
	ra_105 = mbedtls_pk_setup(ra_105, a0_101, s1_107, s1_107, a0_206, a5_114, out s1_184, out a0_210, out a1_211, out a2_212, out a5_181)
	s0 = a0_210
	branch a0_210 != 0<32> l23056FCA
l23057040:
	word32 a3_900
	word32 a4_901
	word32 s2_902
	word32 s3_903
	word32 s6_904
	word32 s7_905
	word32 s10_906
	word32 s11_907
	ra_105 = pk_parse_key_sec1_der(ra_105, Mem28[a0_210 + 4<i32>:word32], a1_211, a2_212, a5_181, s2_116, s6_119, s7, s10, s11, mstatus, dwLoc38, s2, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, s3, s1, dwArg64, dwArg68, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_184, out a0_176, out a2_178, out a3_900, out a4_901, out a5_181, out s2_902, out s3_903, out s6_904, out s7_905, out s10_906, out s11_907, out mstatus)
l23056FF2:
	s0 = 0xFC000400<32>
l23056FE2:
	s0 = 0xFC000480<32>
l23056F88:
	word32 a0_255 = mbedtls_pk_info_from_type(1<32>, out a5_114)
	branch a0_255 != 0<32> l23056FB2
l23056FB2:
	word32 a0_259
	word32 a1_260
	word32 a2_261
	ra_105 = mbedtls_pk_setup(ra_105, a0_57, s1_63, s1_63, a0_255, a5_114, out s1_184, out a0_259, out a1_260, out a2_261, out a5_181)
	s0 = a0_259
	branch a0_259 != 0<32> l23056FCA
l23056FBC:
	word32 s0_884
	word32 a3_885
	word32 a4_886
	word32 s2_887
	word32 s3_888
	word32 s6_889
	word32 s7_890
	word32 s10_891
	word32 s11_892
	ra_105 = pk_parse_key_pkcs1_der(ra_105, a0_259, a1_260, a2_261, a5_181, s2_116, s6_119, s7_76, s10, s11, mstatus, dwLoc38, s2, dwLoc1C, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg34, dwArg48, s1, dwArg68, dwArg74, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s0_884, out s1_184, out a0_176, out a2_178, out a3_885, out a4_886, out a5_181, out s2_887, out s3_888, out s6_889, out s7_890, out s10_891, out s11_892)
l23056FC6:
	s0 = a0_176
	branch a0_176 == 0<32> l23056FD0
l23056FCA:
	word32 a0_883
	ra_105 = mbedtls_pk_free(ra_105, s1_184, a5_181, out a0_883, out a2_178, out a5_181)
l23056FD0:
	word32 a1_893
	word32 s4_894
	mbedtls_pem_free(fp + -60<i32>, a2_178, a5_181, mstatus, dwArg0108, dwArg0148, out a1_893, out a3_103, out a4_113, out a5_114, out s4_894)
l23056EEE:
	word32 a0_353
	word32 s0_360
	word32 s1_361
	word32 s2_367
	word32 s3_368
	word32 s10_373
	word32 s11_374
	word32 s6_376
	word32 s7_377
	word32 a2_853
	ra_105 = pk_parse_key_pkcs8_unencrypted_der(ra_105, s0, s2_116, s3_11, a5_114, s6_119, s7, s10, s11, mstatus, dwLoc3C, dwLoc38, s4, s2, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg14, dwArg18, dwArg28, dwArg34, dwArg38, dwArg44, dwArg48, s1, dwArg68, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_360, out s1_361, out a0_353, out a2_853, out a3_103, out a4_113, out a5_114, out s2_367, out s3_368, out s6_376, out s7_377, out s10_373, out s11_374, out mstatus)
	branch a0_353 == 0<32> l2305709A
l23056EFC:
	word32 a0_854
	word32 a2_855
	word32 a5_856
	ra_105 = mbedtls_pk_free(ra_105, s1_361, a5_114, out a0_854, out a2_855, out a5_856)
	word32 a0_388 = mbedtls_pk_info_from_type(1<32>, out a5_114)
	branch a0_388 == 0<32> l23056F92
l23056F0C:
	word32 a0_392
	word32 s1_857
	word32 a1_858
	word32 a2_859
	ra_105 = mbedtls_pk_setup(ra_105, s0_360, s1_361, s1_361, a0_388, a5_114, out s1_857, out a0_392, out a1_858, out a2_859, out a5_114)
	branch a0_392 != 0<32> l2305709A
l23056F16:
	word32 a0_402
	word32 s0_409
	word32 s1_410
	word32 s2_411
	word32 s3_418
	word32 s10_424
	word32 s11_425
	word32 s6_427
	word32 s7_428
	word32 a2_860
	ra_105 = pk_parse_key_pkcs1_der(ra_105, a0_392, s2_367, s3_368, a5_114, s2_367, s6_376, s7_377, s10_373, s11_374, mstatus, dwLoc38, s2, dwLoc1C, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg34, dwArg48, s1, dwArg68, dwArg74, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s0_409, out s1_410, out a0_402, out a2_860, out a3_103, out a4_113, out a5_114, out s2_411, out s3_418, out s6_427, out s7_428, out s10_424, out s11_425)
	branch a0_402 == 0<32> l2305709A
l23056F24:
	word32 a0_861
	word32 a2_862
	word32 a5_863
	ra_105 = mbedtls_pk_free(ra_105, s1_410, a5_114, out a0_861, out a2_862, out a5_863)
	word32 a0_436 = mbedtls_pk_info_from_type(2<32>, out a5_114)
	branch a0_436 == 0<32> l23056F92
l23056F92:
	s0 = 0xFC000380<32>
l23056F34:
	word32 a0_442
	word32 s1_864
	word32 a1_865
	word32 a2_866
	ra_105 = mbedtls_pk_setup(ra_105, s0_409, s1_410, s1_410, a0_436, a5_114, out s1_864, out a0_442, out a1_865, out a2_866, out a5_114)
	branch a0_442 != 0<32> l2305709A
l23056F3E:
	word32 a0_452
	word32 s1_460
	word32 a2_867
	word32 s2_868
	word32 s3_869
	word32 s6_870
	word32 s7_871
	word32 s10_872
	word32 s11_873
	ra_105 = pk_parse_key_sec1_der(ra_105, Mem28[a0_442 + 4<i32>:word32], s2_411, s3_418, a5_114, s2_411, s6_427, s7_428, s10_424, s11_425, mstatus, dwLoc38, s2, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, s3, s1, dwArg64, dwArg68, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_460, out a0_452, out a2_867, out a3_103, out a4_113, out a5_114, out s2_868, out s3_869, out s6_870, out s7_871, out s10_872, out s11_873, out mstatus)
	branch a0_452 == 0<32> l2305709A
l2305709A:
	s0 = 0<32>
l23056F4C:
	word32 a0_874
	word32 a2_875
	ra_105 = mbedtls_pk_free(ra_105, s1_460, a5_114, out a0_874, out a2_875, out a5_114)
	s0 = 0xFC000300<32>
l23056F98:
	0<32> = dwArg0198
	a0Out = s0
	a2Out = dwArg0138
	a3Out = a3_103
	a4Out = a4_113
	a5Out = a5_114
	mstatusOut = mstatus
	return ra_105
mbedtls_pk_parse_key_exit:


word32 mbedtls_pk_parse_keyfile(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & a0Out, ptr32 & a3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_pk_parse_keyfile_entry:
l2305709E:
	word32 a0_24
	word32 a2_26
	word32 s1_35
	word32 s10_36
	word32 s11_37
	word32 s2_38
	word32 s3_39
	word32 s4_40
	word32 s7_43
	word32 a4_283
	word32 a5_284
	word32 s5_285
	word32 s6_286
	word32 s8_287
	word32 a1_25
	word32 mstatus_116
	word32 a3_132
	word32 ra_245 = mbedtls_pk_load_file(ra, a2, a3, a0, s3, s4, mstatus, dwLoc30, dwLoc2C, dwLoc28, dwLoc18, dwLoc0C, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgA8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s1_35, out a0_24, out a1_25, out a2_26, out a3_132, out a4_283, out a5_284, out s2_38, out s3_39, out s4_40, out s5_285, out s6_286, out s7_43, out s8_287, out s10_36, out s11_37, out mstatus_116)
	word32 s0_140 = a0_24
	branch a0_24 != 0<32> l230570DC
l230570BA:
	word32 a4_66
	branch s1_35 != 0<32> l230570EA
l230570EA:
	dwLoc2C = a1_25
	word32 a2_288
	word32 a3_289
	word32 a4_290
	word32 a5_291
	a4_66 = strlen(s1_35, out a1_25, out a2_288, out a3_289, out a4_290, out a5_291)
	s0_140 = dwArg34
l230570C0:
	a4_66 = 0<32>
l230570C4:
	word32 a2_89
	word32 a4_91
	word32 a0_115
	word32 a3_301
	word32 a5_121
	ra_245 = mbedtls_pk_parse_key(ra_245, s0_140, s1_35, a1_25, a2_26, a4_66, s2_38, s3_39, s4_40, s7_43, s10_36, s11_37, mstatus_116, dwLoc2C, dwLoc28, s0, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg44, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0118, dwArg0168, out a0_115, out a2_89, out a3_301, out a4_91, out a5_121, out mstatus_116)
	word32 a4_120 = a4_91 + a5_121
l230570D2:
	branch a5_121 != a4_120 l230570FE
l230570FE:
	Mem123[a5_121:byte] = 0<8>
	a5_121 = a5_121 + 1<32>
l230570D6:
	word32 s1_292
	word32 a0_293
	word32 a1_294
	word32 a2_295
	word32 a4_296
	word32 a5_297
	word32 a6_298
	word32 s4_299
	word32 t3_300
	vPortFree(a0_115, a2_89, a5_121, mstatus_116, dwArg0128, dwArg0168, out s0_140, out s1_292, out a0_293, out a1_294, out a2_295, out a3_132, out a4_296, out a5_297, out a6_298, out s4_299, out t3_300)
l230570DC:
	0<32> = dwArg0128
	a0Out = s0_140
	a3Out = a3_132
	mstatusOut = mstatus_116
	return ra_245
mbedtls_pk_parse_keyfile_exit:


void rsa_can_do(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
rsa_can_do_entry:
l23057106:
	branch a0 == 1<32> l23057114
l23057114:
	return
l2305710C:
	return
rsa_can_do_exit:


void rsa_get_bitlen()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
rsa_get_bitlen_entry:
l23057118:
	return
rsa_get_bitlen_exit:


void rsa_debug(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
rsa_debug_entry:
l2305711E:
	Mem6[0x23088CE8<32>:word32] = a1
	Mem9[a0 + 16<i32>:word32] = a1
	Mem14[a1:byte] = 1<8>
	Mem15[a1 + 12<i32>:byte] = 1<8>
	Mem16[0x23088CFC<32>:word32] = a1
	Mem17[a0 + 0x28<32>:word32] = a1
	return
rsa_debug_exit:


void eckey_can_do()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
eckey_can_do_entry:
l23057148:
	return
eckey_can_do_exit:


void eckey_get_bitlen()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
eckey_get_bitlen_entry:
l23057150:
	return
eckey_get_bitlen_exit:


void eckey_debug(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
eckey_debug_entry:
l23057154:
	Mem5[a1:byte] = 2<8>
	Mem10[0x23088C50<32>:word32] = a1
	Mem11[a0 + 144<i32>:word32] = a1
	return
eckey_debug_exit:


void eckeydh_can_do()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
eckeydh_can_do_entry:
l2305716C:
	return
eckeydh_can_do_exit:


void rsa_free_wrap(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg10, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0000:[0..31] Stack +0010:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
rsa_free_wrap_entry:
l23057174:
	word32 a5_19
	word32 a3_51
	word32 a4_52
	mbedtls_rsa_free(a0, a2, a4, a5, mstatus, dwArg00, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a3_51, out a4_52, out a5_19)
l23057188_thunk_vPortFree:
	word32 s0_53
	word32 s1_54
	word32 a0_55
	word32 a1_56
	word32 a2_57
	word32 a3_58
	word32 a4_59
	word32 a5_60
	word32 a6_61
	word32 s4_62
	word32 t3_63
	vPortFree(a0, dwArg10, a5_19, mstatus, dwArg0158, dwArg0198, out s0_53, out s1_54, out a0_55, out a1_56, out a2_57, out a3_58, out a4_59, out a5_60, out a6_61, out s4_62, out t3_63)
	return
rsa_free_wrap_exit:


void rsa_alloc_wrap(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
rsa_alloc_wrap_entry:
l2305718C:
	word32 a3_82
	word32 a2_81
	word32 a1_80
	word32 s1_79
	word32 s0_78
	word32 a4_83
	word32 a5_84
	word32 s2_85
	word32 s3_86
	word32 s4_87
	word32 s8_88
	word32 ra_21 = mycalloc(ra, s1, 1<32>, 172<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_78, out s1_79, out a1_80, out a2_81, out a3_82, out a4_83, out a5_84, out s2_85, out s3_86, out s4_87, out s8_88)
	branch false l230571A6
l230571A0:
	mbedtls_rsa_init(ra_21, 1<32>, 0<32>, 0<32>, dwArg28)
l230571A6:
	return
rsa_alloc_wrap_exit:


void rsa_check_pair_wrap(word32 ra, word32 a2, word32 a4, word32 a5, word32 s2, word32 s4, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg94, word32 dwArgB8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rsa_check_pair_wrap_entry:
l230571B0:
l230571B0_thunk_mbedtls_rsa_check_pub_priv:
	mbedtls_rsa_check_pub_priv(ra, a2, a4, a5, s2, s4, s6, s7, s10, s11, mstatus, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg54, dwArg58, dwArg64, dwArg68, dwArg78, dwArg94, dwArgB8, dwArgC8)
	return
rsa_check_pair_wrap_exit:


void rsa_encrypt_wrap(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 s5, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s5:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rsa_encrypt_wrap_entry:
l230571B2:
	word32 a6_9 = Mem0[a0 + 4<i32>:int32]
	Mem11[a4:word32] = a6_9
	branch a5 <u a6_9 l230571D0
l230571D0:
	return
l230571C2:
l230571CC_thunk_mbedtls_rsa_pkcs1_encrypt:
	mbedtls_rsa_pkcs1_encrypt(ra, s0, a0, a6, a7, 0<32>, a2, a1, a3, s3, s5, s7, s10, s11, mstatus, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF8, dwArg0104, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148)
	return
rsa_encrypt_wrap_exit:


void rsa_decrypt_wrap(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s7, word32 s10, word32 s11, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s7:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rsa_decrypt_wrap_entry:
l230571D8:
	branch Mem0[a0 + 4<i32>:int32] != a2 l230571F4
l230571F4:
	return
l230571E6:
l230571F0_thunk_mbedtls_rsa_pkcs1_decrypt:
	mbedtls_rsa_pkcs1_decrypt(ra, s1, a0, a6, a7, 1<32>, a4, a1, a3, a5, s7, s10, s11, mstatus)
	return
rsa_decrypt_wrap_exit:


void rsa_sign_wrap(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s2, word32 s8, word32 s9, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s8:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rsa_sign_wrap_entry:
l230571FC:
	Mem13[a5:word32] = Mem0[a0 + 4<i32>:int32]
l23057216_thunk_mbedtls_rsa_pkcs1_sign:
	mbedtls_rsa_pkcs1_sign(ra, s1, a0, a6, a7, 1<32>, a1, a3, a2, a4, s2, s8, s9, s10, s11, mstatus, dwArg04, dwArg18, dwArg24, dwArg28, dwArg38, dwArg68, dwArg74, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0158, dwArg0198)
	return
rsa_sign_wrap_exit:


void rsa_verify_wrap(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s6:[0..31] s7:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s1 s10 s11 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
rsa_verify_wrap_entry:
l2305721A:
	branch a5 <u Mem0[a0 + 4<i32>:int32] l23057258
l23057258:
	return
l23057222:
	word32 a5_40
	branch mbedtls_rsa_pkcs1_verify(ra, a0, 0<32>, 0<32>, a1, a3, a2, a4, s3, s6, s7, s10, s11, mstatus, out a5_40) != 0<32> l2305724E
l23057242:
	branch a5_40 >=u a5 l2305724E
l23057248:
l2305724E:
	return
rsa_verify_wrap_exit:


void eckey_free_wrap(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg10, word32 dwArg18, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0000:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 t3 tp
// Preserved: sp
eckey_free_wrap_entry:
l23057260:
	word32 a5_18
	word32 a3_55
	word32 a4_56
	word32 s2_57
	mbedtls_ecp_keypair_free(a0, a2, a4, mstatus, dwArg00, dwArg18, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, dwArg0178, out a3_55, out a4_56, out a5_18, out s2_57)
l23057274_thunk_vPortFree:
	word32 s0_58
	word32 s1_59
	word32 a0_60
	word32 a1_61
	word32 a2_62
	word32 a3_63
	word32 a4_64
	word32 a5_65
	word32 a6_66
	word32 s4_67
	word32 t3_68
	vPortFree(a0, dwArg10, a5_18, mstatus, dwArg0158, dwArg0198, out s0_58, out s1_59, out a0_60, out a1_61, out a2_62, out a3_63, out a4_64, out a5_65, out a6_66, out s4_67, out t3_68)
	return
eckey_free_wrap_exit:


void eckey_alloc_wrap(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
eckey_alloc_wrap_entry:
l23057278:
	word32 s2_79
	word32 a5_78
	word32 a4_77
	word32 a3_76
	word32 a2_75
	word32 a1_74
	word32 s1_73
	word32 s0_72
	word32 s3_80
	word32 s4_81
	word32 s8_82
	word32 ra_21 = mycalloc(ra, s1, 1<32>, 172<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_72, out s1_73, out a1_74, out a2_75, out a3_76, out a4_77, out a5_78, out s2_79, out s3_80, out s4_81, out s8_82)
	branch false l23057290
l2305728C:
	mbedtls_ecp_keypair_init(ra_21, 1<32>)
l23057290:
	return
eckey_alloc_wrap_exit:


void eckey_check_pair(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 s3, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
eckey_check_pair_entry:
l2305729A:
l2305729A_thunk_mbedtls_ecp_check_pub_priv:
	mbedtls_ecp_check_pub_priv(ra, s1, a0, a1, a2, s2, s3, s7, s10, s11, mstatus, dwArg08, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8)
	return
eckey_check_pair_exit:


word32 mgf_mask(word32 ra, word32 a0, word32 a1, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3
// Preserved: sp
mgf_mask_entry:
l2305729E:
	word32 a0_45
	word32 a1_210
	word32 a3_217
	word32 a0_209
	word32 t1_208
	word32 a4_213
	word32 a3_212
	word32 a2_211
	word32 t1_215
	word32 a1_216
	word32 a5_214
	word32 a5_100
	word32 a4_119
	word32 a2_109
	word32 ra_51 = memset(memset(ra, fp + -64<i32>, 0<32>, 32<i32>, out t1_208, out a0_209, out a1_210, out a2_211, out a3_212, out a4_213, out a5_214), fp + -68<i32>, 0<32>, 4<32>, out t1_215, out a0_45, out a1_216, out a2_109, out a3_217, out a4_119, out a5_100)
	word32 s1_54 = Mem30[a0_45:word32]
	word32 a0_55 = mbedtls_md_get_size(a0_45)
	word32 s2_11 = a0
	word32 s0_118 = a1
l230572D8:
	branch s0_118 != 0<32> l230572EE
l230572EE:
	s6 = s0_118
	branch a0_55 >=u s0_118 l230572F6
l230572F4:
	s6 = a0_55
l230572F6:
	word32 a5_74
	word32 a5_85
	word32 a5_92
	word32 a5_218
	ra_51 = mbedtls_md_finish(mbedtls_md_update(mbedtls_md_update(mbedtls_md_starts(ra_51, s1_54, a5_100, dwLoc40, out a5_74), s1_54, a5_74, dwLoc40, out a5_85), s1_54, a5_85, dwLoc40, out a5_92), s1_54, a5_92, dwLoc40, out a2_109, out a5_218)
	a5_100 = 0<32>
l2305731A:
	word32 a4_103 = s2_11 + a5_100
	branch a5_100 != s6 l23057332
l23057332:
	a2_109 = CONVERT(Mem108[a4_103:byte], byte, word32)
	Mem113[a4_103:byte] = SLICE(CONVERT(Mem108[fp + -64<i32> + a5_100:byte], byte, word32) ^ a2_109, byte, 0)
	a5_100 = a5_100 + 1<32>
l23057322:
	word32 a4_115 = CONVERT(bLoc41, byte, word32)
	s2_11 = a4_103
	s0_118 = s0_118 - a5_100
	a4_119 = a4_115 + 1<32>
	bLoc41 = SLICE(a4_115 + 1<32>, byte, 0)
l230572DA:
	s0Out = s0_118
	s1Out = dwLoc4C
	a2Out = a2_109
	a3Out = s2
	a4Out = a4_119
	a5Out = a5_100
	s2Out = s2_11
	s3Out = a0_55
	s4Out = dwArg0168
	s5Out = a3
	s6Out = s6
	return dwLoc08
mgf_mask_exit:


void mbedtls_rsa_init(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_alloc_wrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 s2 t0 t1 tp
// Preserved: s0 sp
mbedtls_rsa_init_entry:
l23057348:
	word32 t1_42
	word32 a0_43
	word32 a1_44
	word32 a2_45
	word32 a3_46
	word32 a4_47
	word32 a5_48
	memset(ra, a0, 0<32>, 172<i32>, out t1_42, out a0_43, out a1_44, out a2_45, out a3_46, out a4_47, out a5_48)
	Mem30[a0 + 164<i32>:word32] = a1
	Mem31[a0 + 168<i32>:word32] = a2
	0<32> = dwArg38
	return
mbedtls_rsa_init_exit:


word32 mbedtls_rsa_check_pubkey(word32 a2, word32 a4, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_parse_subpubkey
//      mbedtls_rsa_check_privkey
//      mbedtls_rsa_check_pub_priv
// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 tp
// Preserved: s0 sp
mbedtls_rsa_check_pubkey_entry:
l23057376:
	branch a5 == 0<32> l230573E0
l2305737A:
	word32 a0_7 = Mem0[a4 + 28<i32>:word32]
	branch a4 == 0<32> l230573E0
l2305737E:
	word32 a5_8 = Mem0[a5:word32]
	branch (a5_8 & 1<32>) == 0<32> l230573E0
l23057384:
	a4 = Mem0[a5_8 & 1<32>:word32]
	word32 a5_11 = a5_8 & 1<32> & 1<32>
	branch a5_11 == 0<32> l230573E0
l230573E0:
	a0Out = 0xFBFFFE00<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 0xFBFFFE00<32>
	return s1
l2305738A:
	word32 a5_59
	word32 a2_28
	word32 a5_123
	word32 a1_27
	word32 a3_29
	word32 a4_30
	branch mbedtls_mpi_bitlen(a2, a4, a5_11, out a1_27, out a2_28, out a3_29, out a4_30, out a5_123) <=u 127<i32> l230573CE
l230573A6:
	word32 a2_36
	word32 a5_124
	branch mbedtls_mpi_bitlen(a2_28, a4_30, 127<i32>, out a1_27, out a2_36, out a3_29, out a4_30, out a5_124) >u 0x2000000<32> l230573CE
l230573B2:
	word32 a2_45
	word32 a5_125
	branch mbedtls_mpi_bitlen(a2_36, a4_30, 0x2000000<32>, out a1_27, out a2_45, out a3_29, out a4_30, out a5_125) <=u 1<32> l230573CE
l230573C0:
	a5_59 = 0<32>
	word32 a2_126
	word32 a5_127
	word32 a6_128
	branch mbedtls_mpi_cmp_mpi(a2_45, a4_30, 1<32>, out a1_27, out a2_126, out a3_29, out a4_30, out a5_127, out a6_128) < 0<32> l230573D4
l230573CE:
	a5_59 = 0xFBFFFE00<32>
l230573D4:
	a0Out = a5_59
	a1Out = a1_27
	a2Out = dwArg10
	a3Out = a3_29
	a4Out = a4_30
	a5Out = a5_59
	return a0_7 + 8<i32>
mbedtls_rsa_check_pubkey_exit:


word32 mbedtls_rsa_check_privkey(word32 ra, word32 s1, word32 a2, word32 a4, word32 a5, word32 s2, word32 s4, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArgA4, word32 dwArgC8, word32 dwArgD8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs1_der
//      mbedtls_rsa_check_pub_priv
// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s1 s10 s11 s2 s3 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_check_privkey_entry:
l230573EA:
	word32 a0_23
	word32 a4_25
	word32 a1_798
	word32 a5_24
	word32 a2_27
	word32 a3_28
	word32 s1_29 = mbedtls_rsa_check_pubkey(a2, a4, a5, out a0_23, out a1_798, out a2_27, out a3_28, out a4_25, out a5_24)
	branch a0_23 != 0<32> l230575E4
l23057406:
	s1_29 = Mem17[a4_25 + 52<i32>:word32]
	a5_24 = 0xFBFFFE00<32>
	branch a4_25 == 0<32> l230575E4
l23057414:
	s1_29 = Mem17[a4_25 + 64<i32>:word32]
	branch a4_25 == 0<32> l230575E4
l2305741A:
	s1_29 = Mem17[a4_25 + 40<i32>:word32]
	branch a4_25 == 0<32> l230575E4
l23057420:
	mbedtls_mpi_init(fp + -188<i32>)
	mbedtls_mpi_init(fp + -176<i32>)
	mbedtls_mpi_init(fp + -164<i32>)
	mbedtls_mpi_init(fp + -152<i32>)
	mbedtls_mpi_init(fp + -140<i32>)
	mbedtls_mpi_init(fp + -128<i32>)
	mbedtls_mpi_init(fp + -116<i32>)
	mbedtls_mpi_init(fp + -104<i32>)
	mbedtls_mpi_init(fp + -92<i32>)
	mbedtls_mpi_init(fp + -80<i32>)
	mbedtls_mpi_init(fp + -68<i32>)
	mbedtls_mpi_init(fp + -56<i32>)
	mbedtls_mpi_init(fp + -44<i32>)
	word32 a3_74
	word32 s1_81
	word32 s2_82
	word32 a0_94
	word32 s6_95
	word32 s0_799
	word32 s4_800
	word32 s5_801
	word32 s8_802
	word32 a5_106
	word32 a4_105
	word32 a2_103
	ra = mbedtls_mpi_mul_mpi(ra, fp + -188<i32>, s1_29 + 44<i32>, s1_29 + 56<i32>, a3_28, a4_25, s1_29 + 56<i32>, s4, s6, mstatus, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgD8, out s0_799, out s1_81, out a0_94, out a2_103, out a3_74, out a4_105, out a5_106, out s2_82, out s3, out s4_800, out s5_801, out s6_95, out s8_802)
	word32 s0_126 = a0_94
	branch a0_94 != 0<32> l23057588
l23057486:
	word32 a3_104
	word32 s2_112
	word32 a0_124
	word32 s6_125
	word32 s0_869
	word32 s1_870
	word32 s4_871
	word32 s5_872
	word32 s8_873
	ra = mbedtls_mpi_mul_mpi(ra, fp + -176<i32>, s1_81 + 32<i32>, s1_81 + 20<i32>, a3_74, a4_105, s2_82, s1_81 + 32<i32>, s6_95, mstatus, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgD8, out s0_869, out s1_870, out a0_124, out a2_103, out a3_104, out a4_105, out a5_106, out s2_112, out s3, out s4_871, out s5_872, out s6_125, out s8_873)
	s0_126 = a0_124
	branch a0_124 != 0<32> l23057588
l2305749E:
	word32 a0_130
	word32 a3_133
	word32 s2_141
	word32 s4_874
	ra = mbedtls_mpi_sub_int(ra, a0_124, fp + -164<i32>, 1<32>, a3_104, s2_112, mstatus, dwLoc48, dwLoc28, dwLoc08, s1, dwArg28, dwArg38, dwArg58, out a0_130, out a2_103, out a3_133, out a4_105, out a5_106, out s2_141, out s3, out s4_874)
	s0_126 = a0_130
	branch a0_130 != 0<32> l23057588
l230574AE:
	word32 a0_156
	word32 a3_159
	word32 s2_167
	word32 s4_169
	ra = mbedtls_mpi_sub_int(ra, a0_130, fp + -152<i32>, 1<32>, a3_133, s2_141, mstatus, dwLoc48, dwLoc28, dwLoc08, s1, dwArg28, dwArg38, dwArg58, out a0_156, out a2_103, out a3_159, out a4_105, out a5_106, out s2_167, out s3, out s4_169)
	s0_126 = a0_156
	branch a0_156 != 0<32> l23057588
l230574BE:
	word32 a3_184
	word32 s5_195
	word32 a0_204
	word32 s6_205
	word32 s0_875
	word32 s1_876
	word32 s2_877
	word32 s4_878
	word32 s8_879
	ra = mbedtls_mpi_mul_mpi(ra, fp + -140<i32>, fp + -164<i32>, fp + -152<i32>, a3_159, a4_105, s2_167, s4_169, s6_125, mstatus, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgD8, out s0_875, out s1_876, out a0_204, out a2_103, out a3_184, out a4_105, out a5_106, out s2_877, out s3, out s4_878, out s5_195, out s6_205, out s8_879)
	s0_126 = a0_204
	branch a0_204 != 0<32> l23057588
l230574CC:
	word32 a3_212
	word32 a0_231
	word32 s1_880
	word32 s2_881
	word32 s4_882
	word32 s8_883
	ra = mbedtls_mpi_gcd(ra, s5_195, fp + -140<i32>, a3_184, a4_105, mstatus, dwLoc58, dwLoc28, dwLoc18, dwArg08, s1, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, out s1_880, out a0_231, out a2_103, out a3_212, out a4_105, out a5_106, out s2_881, out s3, out s4_882, out s8_883)
	s0_126 = a0_231
	branch a0_231 != 0<32> l23057588
l230574DA:
	word32 a0_257
	word32 s1_884
	word32 a3_885
	word32 s2_886
	word32 s4_887
	word32 s8_888
	ra = mbedtls_mpi_gcd(ra, fp + -164<i32>, fp + -152<i32>, a3_212, a4_105, mstatus, dwLoc58, dwLoc28, dwLoc18, dwArg08, s1, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, out s1_884, out a0_257, out a2_103, out a3_885, out a4_105, out a5_106, out s2_886, out s3, out s4_887, out s8_888)
	s0_126 = a0_257
	branch a0_257 != 0<32> l23057588
l230574E8:
	word32 a0_266
	word32 s5_279
	word32 s6_280
	word32 s10_291
	word32 s0_889
	word32 a3_890
	word32 s2_891
	word32 s4_892
	word32 s8_893
	word32 s9_894
	ra = mbedtls_mpi_div_mpi(ra, fp + -92<i32>, fp + -80<i32>, fp + -140<i32>, fp + -104<i32>, s5_195, s6_205, s7, s10, s11, mstatus, dwLocA8, dwLoc88, dwLoc78, s4, s2, dwLoc58, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, s1, dwArg28, dwArg38, dwArg64, dwArg84, out s0_889, out a0_266, out a2_103, out a3_890, out a4_105, out a5_106, out s2_891, out s3, out s4_892, out s5_279, out s6_280, out s7, out s8_893, out s9_894, out s10_291, out s11)
	s0_126 = a0_266
	branch a0_266 != 0<32> l23057588
l230574F8:
	word32 a0_298
	word32 s10_311
	word32 s4_314
	word32 s5_315
	word32 s6_316
	word32 s1_895
	word32 a3_896
	word32 a7_897
	word32 s2_898
	word32 s8_899
	word32 s9_900
	ra = mbedtls_mpi_mod_mpi(ra, fp + -128<i32>, fp + -176<i32>, fp + -92<i32>, s5_279, s6_280, s7, s10_291, s11, mstatus, dwLocB8, dwLoc98, dwLoc88, dwLoc7C, dwLoc78, s2, dwLoc58, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwArg08, s1, dwArg28, dwArg38, dwArg48, dwArg54, dwArg68, dwArg74, out s1_895, out a0_298, out a2_103, out a3_896, out a4_105, out a5_106, out a7_897, out s2_898, out s3, out s4_314, out s5_315, out s6_316, out s7, out s8_899, out s9_900, out s10_311, out s11)
	s0_126 = a0_298
	branch a0_298 != 0<32> l23057588
l23057506:
	word32 a0_329
	word32 s10_342
	word32 s4_345
	word32 s5_346
	word32 s6_347
	word32 s1_901
	word32 a3_902
	word32 a7_903
	word32 s2_904
	word32 s8_905
	word32 s9_906
	ra = mbedtls_mpi_mod_mpi(ra, fp + -68<i32>, s4_314, fp + -164<i32>, s5_315, s6_316, s7, s10_311, s11, mstatus, dwLocB8, dwLoc98, dwLoc88, dwLoc7C, dwLoc78, s2, dwLoc58, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwArg08, s1, dwArg28, dwArg38, dwArg48, dwArg54, dwArg68, dwArg74, out s1_901, out a0_329, out a2_103, out a3_902, out a4_105, out a5_106, out a7_903, out s2_904, out s3, out s4_345, out s5_346, out s6_347, out s7, out s8_905, out s9_906, out s10_342, out s11)
	s0_126 = a0_329
	branch a0_329 != 0<32> l23057588
l23057514:
	word32 a0_360
	word32 s2_368
	word32 s10_373
	word32 s5_377
	word32 s6_378
	word32 s1_907
	word32 a3_908
	word32 a7_909
	word32 s4_910
	word32 s8_911
	word32 s9_912
	ra = mbedtls_mpi_mod_mpi(ra, fp + -56<i32>, s4_345, fp + -152<i32>, s5_346, s6_347, s7, s10_342, s11, mstatus, dwLocB8, dwLoc98, dwLoc88, dwLoc7C, dwLoc78, s2, dwLoc58, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwArg08, s1, dwArg28, dwArg38, dwArg48, dwArg54, dwArg68, dwArg74, out s1_907, out a0_360, out a2_103, out a3_908, out a4_105, out a5_106, out a7_909, out s2_368, out s3, out s4_910, out s5_377, out s6_378, out s7, out s8_911, out s9_912, out s10_373, out s11)
	s0_126 = a0_360
	branch a0_360 != 0<32> l23057588
l23057522:
	word32 a0_391
	word32 s1_913
	word32 a3_914
	word32 s2_915
	word32 s4_916
	word32 s5_917
	word32 s6_918
	word32 s8_919
	word32 s9_920
	word32 s10_921
	ra = mbedtls_mpi_inv_mod(ra, a0_360, s2_368, s3, s5_377, s6_378, s7, s10_373, s11, mstatus, dwLoc98, dwLoc88, dwLoc78, s2, dwLoc58, dwLoc48, dwLoc3C, dwLoc38, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, s1, dwArg28, dwArg38, dwArgA4, out s1_913, out a0_391, out a2_103, out a3_914, out a4_105, out a5_106, out s2_915, out s3, out s4_916, out s5_917, out s6_918, out s7, out s8_919, out s9_920, out s10_921, out s11)
	s0_126 = a0_391
	branch a0_391 != 0<32> l23057588
l23057530:
	word32 a1_922
	word32 a3_923
	word32 a6_924
	branch mbedtls_mpi_cmp_mpi(a2_103, a4_105, a5_106, out a1_922, out a2_103, out a3_923, out a4_105, out a5_106, out a6_924) == 0<32> l23057544
l23057544:
	word32 a1_925
	word32 a3_926
	word32 a6_927
	branch mbedtls_mpi_cmp_mpi(a2_103, a4_105, a5_106, out a1_925, out a2_103, out a3_926, out a4_105, out a5_106, out a6_927) != 0<32> l2305753C
l23057550:
	word32 a1_928
	word32 a3_929
	word32 a6_930
	branch mbedtls_mpi_cmp_mpi(a2_103, a4_105, a5_106, out a1_928, out a2_103, out a3_929, out a4_105, out a5_106, out a6_930) != 0<32> l2305753C
l2305755C:
	word32 a1_931
	word32 a3_932
	word32 a6_933
	branch mbedtls_mpi_cmp_mpi(a2_103, a4_105, a5_106, out a1_931, out a2_103, out a3_932, out a4_105, out a5_106, out a6_933) != 0<32> l2305753C
l23057568:
	word32 a1_934
	word32 a3_935
	word32 a6_936
	branch mbedtls_mpi_cmp_int(0<32>, a2_103, out a1_934, out a2_103, out a3_935, out a4_105, out a5_106, out a6_936) != 0<32> l2305753C
l23057572:
	word32 a1_937
	word32 a3_938
	word32 a6_939
	branch mbedtls_mpi_cmp_int(1<32>, a2_103, out a1_937, out a2_103, out a3_938, out a4_105, out a5_106, out a6_939) != 0<32> l2305753C
l2305757C:
	word32 a1_940
	word32 a3_941
	word32 a6_942
	word32 a0_478 = mbedtls_mpi_cmp_int(1<32>, a2_103, out a1_940, out a2_103, out a3_941, out a4_105, out a5_106, out a6_942)
	s0_126 = a0_478
	branch a0_478 != 0<32> l2305753C
l2305753C:
	s0_126 = 0xFBFFFE00<32>
l23057588:
	word32 a2_503
	word32 a5_504
	word32 a4_507
	word32 a0_803
	word32 a1_804
	word32 a3_805
	word32 a6_806
	word32 s4_807
	mbedtls_mpi_free(fp + -188<i32>, a2_103, a4_105, a5_106, mstatus, dwArg88, dwArgC8, out a0_803, out a1_804, out a2_503, out a3_805, out a4_507, out a5_504, out a6_806, out s4_807)
	word32 a2_515
	word32 a5_516
	word32 a4_519
	word32 a0_808
	word32 a1_809
	word32 a3_810
	word32 a6_811
	word32 s4_812
	mbedtls_mpi_free(fp + -176<i32>, a2_503, a4_507, a5_504, mstatus, dwArg88, dwArgC8, out a0_808, out a1_809, out a2_515, out a3_810, out a4_519, out a5_516, out a6_811, out s4_812)
	word32 a2_527
	word32 a5_528
	word32 a4_531
	word32 a0_813
	word32 a1_814
	word32 a3_815
	word32 a6_816
	word32 s4_817
	mbedtls_mpi_free(fp + -164<i32>, a2_515, a4_519, a5_516, mstatus, dwArg88, dwArgC8, out a0_813, out a1_814, out a2_527, out a3_815, out a4_531, out a5_528, out a6_816, out s4_817)
	word32 a2_539
	word32 a5_540
	word32 a4_543
	word32 a0_818
	word32 a1_819
	word32 a3_820
	word32 a6_821
	word32 s4_822
	mbedtls_mpi_free(fp + -152<i32>, a2_527, a4_531, a5_528, mstatus, dwArg88, dwArgC8, out a0_818, out a1_819, out a2_539, out a3_820, out a4_543, out a5_540, out a6_821, out s4_822)
	word32 a2_551
	word32 a5_552
	word32 a4_555
	word32 a0_823
	word32 a1_824
	word32 a3_825
	word32 a6_826
	word32 s4_827
	mbedtls_mpi_free(fp + -140<i32>, a2_539, a4_543, a5_540, mstatus, dwArg88, dwArgC8, out a0_823, out a1_824, out a2_551, out a3_825, out a4_555, out a5_552, out a6_826, out s4_827)
	word32 a2_563
	word32 a5_564
	word32 a4_567
	word32 a0_828
	word32 a1_829
	word32 a3_830
	word32 a6_831
	word32 s4_832
	mbedtls_mpi_free(fp + -128<i32>, a2_551, a4_555, a5_552, mstatus, dwArg88, dwArgC8, out a0_828, out a1_829, out a2_563, out a3_830, out a4_567, out a5_564, out a6_831, out s4_832)
	word32 a2_575
	word32 a5_576
	word32 a4_579
	word32 a0_833
	word32 a1_834
	word32 a3_835
	word32 a6_836
	word32 s4_837
	mbedtls_mpi_free(fp + -116<i32>, a2_563, a4_567, a5_564, mstatus, dwArg88, dwArgC8, out a0_833, out a1_834, out a2_575, out a3_835, out a4_579, out a5_576, out a6_836, out s4_837)
	word32 a2_587
	word32 a5_588
	word32 a4_591
	word32 a0_838
	word32 a1_839
	word32 a3_840
	word32 a6_841
	word32 s4_842
	mbedtls_mpi_free(fp + -104<i32>, a2_575, a4_579, a5_576, mstatus, dwArg88, dwArgC8, out a0_838, out a1_839, out a2_587, out a3_840, out a4_591, out a5_588, out a6_841, out s4_842)
	word32 a2_599
	word32 a5_600
	word32 a4_603
	word32 a0_843
	word32 a1_844
	word32 a3_845
	word32 a6_846
	word32 s4_847
	mbedtls_mpi_free(fp + -92<i32>, a2_587, a4_591, a5_588, mstatus, dwArg88, dwArgC8, out a0_843, out a1_844, out a2_599, out a3_845, out a4_603, out a5_600, out a6_846, out s4_847)
	word32 a2_611
	word32 a5_612
	word32 a4_615
	word32 a0_848
	word32 a1_849
	word32 a3_850
	word32 a6_851
	word32 s4_852
	mbedtls_mpi_free(fp + -80<i32>, a2_599, a4_603, a5_600, mstatus, dwArg88, dwArgC8, out a0_848, out a1_849, out a2_611, out a3_850, out a4_615, out a5_612, out a6_851, out s4_852)
	word32 a2_623
	word32 a5_624
	word32 a4_627
	word32 a0_853
	word32 a1_854
	word32 a3_855
	word32 a6_856
	word32 s4_857
	mbedtls_mpi_free(fp + -68<i32>, a2_611, a4_615, a5_612, mstatus, dwArg88, dwArgC8, out a0_853, out a1_854, out a2_623, out a3_855, out a4_627, out a5_624, out a6_856, out s4_857)
	word32 a2_635
	word32 a5_636
	word32 a4_639
	word32 a0_858
	word32 a1_859
	word32 a3_860
	word32 a6_861
	word32 s4_862
	mbedtls_mpi_free(fp + -56<i32>, a2_623, a4_627, a5_624, mstatus, dwArg88, dwArgC8, out a0_858, out a1_859, out a2_635, out a3_860, out a4_639, out a5_636, out a6_861, out s4_862)
	word32 a0_863
	word32 a1_864
	word32 a4_865
	word32 a5_866
	word32 a6_867
	word32 s4_868
	s1_29 = mbedtls_mpi_free(fp + -44<i32>, a2_635, a4_639, a5_636, mstatus, dwArg88, dwArgC8, out a0_863, out a1_864, out a2_27, out a3_28, out a4_865, out a5_866, out a6_867, out s4_868)
	a5_24 = 0xFBFFFE00<32>
	branch s0_126 == 0xFBFFFE00<32> l230575E4
l230575E0:
	branch s0_126 == 0<32> l230575E4
l230575E2:
l230575E4:
	s1Out = s1_29
	a0Out = dwArgD8
	a2Out = a2_27
	a3Out = a3_28
	a4Out = dwArgB8
	a5Out = a5_24
	s2Out = dwArg98
	s3Out = s3
	s6Out = dwArg74
	s7Out = s7
	s10Out = dwArg54
	s11Out = s11
	return ra
mbedtls_rsa_check_privkey_exit:


void mbedtls_rsa_check_pub_priv(word32 ra, word32 a2, word32 a4, word32 a5, word32 s2, word32 s4, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg94, word32 dwArgB8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_check_pair_wrap
// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_rsa_check_pub_priv_entry:
l230575F8:
	word32 a0_17
	word32 a5_18
	word32 a4_19
	word32 a2_21
	word32 a1_175
	word32 a3_176
	word32 s1_23 = mbedtls_rsa_check_pubkey(a2, a4, a5, out a0_17, out a1_175, out a2_21, out a3_176, out a4_19, out a5_18)
	branch a0_17 != 0<32> l2305762E
l2305760A:
	word32 a0_34
	word32 a2_36
	word32 a4_38
	word32 a5_39
	word32 s1_177
	word32 a3_178
	word32 s2_179
	word32 s3_180
	word32 s6_181
	word32 s7_182
	word32 s10_183
	word32 s11_184
	mbedtls_rsa_check_privkey(ra, s1_23, a2_21, a4_19, a5_18, s2, s4, s6, s7, s10, s11, mstatus, dwLoc08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg54, dwArg58, dwArg64, dwArg68, ra, dwArg78, dwArg94, dwArgB8, dwArgC8, out s1_177, out a0_34, out a2_36, out a3_178, out a4_38, out a5_39, out s2_179, out s3_180, out s6_181, out s7_182, out s10_183, out s11_184)
	branch a0_34 != 0<32> l2305762E
l23057612:
	word32 a2_66
	word32 a4_68
	word32 a5_69
	word32 a1_185
	word32 a3_186
	word32 a6_187
	branch mbedtls_mpi_cmp_mpi(a2_36, a4_38, a5_39, out a1_185, out a2_66, out a3_186, out a4_68, out a5_69, out a6_187) != 0<32> l2305762E
l23057620:
	word32 a1_188
	word32 a2_189
	word32 a3_190
	word32 a4_191
	word32 a5_192
	word32 a6_193
	branch mbedtls_mpi_cmp_mpi(a2_66, a4_68, a5_69, out a1_188, out a2_189, out a3_190, out a4_191, out a5_192, out a6_193) == 0<32> l23057634
l2305762E:
l23057634:
	return
mbedtls_rsa_check_pub_priv_exit:


word32 mbedtls_rsa_public(word32 ra, word32 a1, word32 a3, word32 a4, word32 s2, word32 s11, word32 mstatus, word32 dwArg24, word32 dwArg64, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_pkcs1_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      mbedtls_rsa_pkcs1_decrypt
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
//      mbedtls_rsa_pkcs1_verify
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s11:[0..31] s2:[0..31] Stack +0024:[0..31] Stack +0064:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a4 a5 a7 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_public_entry:
l2305763E:
	mbedtls_mpi_init(fp + -44<i32>)
	word32 a0_28
	word32 s1_38
	word32 s0_207
	word32 a1_208
	word32 s4_210
	word32 a3_209
	word32 s8_211
	word32 a5_109
	word32 a4_110
	word32 a2_112
	word32 s2_103
	word32 a7_178
	word32 s3_185
	word32 ra_102 = mbedtls_mpi_read_binary(ra, a1, dwArg24, a3, a4, mstatus, dwLoc38, s2, dwArg98, dwArgA8, dwArgD8, dwArgE8, dwArg0118, dwArg0128, out s0_207, out s1_38, out a0_28, out a1_208, out a2_112, out a3_209, out a4_110, out a5_109, out a7_178, out s2_103, out s3_185, out s4_210, out s8_211)
	word32 s0_106 = a0_28
	branch a0_28 != 0<32> l2305769E
l23057664:
	s0_106 = 0xFFFFFFFC<32>
	a2_112 = dwArg64
	word32 a3_58
	word32 a1_218
	word32 a2_219
	word32 a6_220
	branch mbedtls_mpi_cmp_mpi(a2_112, a4_110, a5_109, out a1_218, out a2_219, out a3_58, out a4_110, out a5_109, out a6_220) >= 0<32> l2305769E
l2305767A:
	s3_185 = Mem54[s1_38 + 4<i32>:int32]
	word32 a3_221
	word32 a0_70 = mbedtls_mpi_exp_mod(ra_102, s1_38 + 20<i32>, a3_58, s1_38 + 104<i32>, s11, mstatus, out a2_112, out a3_221, out a4_110, out a5_109, out a7_178)
	s0_106 = a0_70
	branch a0_70 != 0<32> l2305769E
l23057692:
	word32 a0_89
	ra_102 = mbedtls_mpi_write_binary(ra_102, s2_103, s3_185, a4_110, a5_109, out a0_89, out a2_112, out a4_110, out a5_109, out s2_103, out s3_185)
	s0_106 = a0_89
l2305769E:
	word32 a4_119
	word32 a0_212
	word32 a1_213
	word32 a2_214
	word32 a3_215
	word32 a6_216
	word32 s4_217
	word32 a5_116
	word32 s1_121 = mbedtls_mpi_free(fp + -44<i32>, a2_112, a4_110, a5_109, mstatus, dwArg0108, dwArg0148, out a0_212, out a1_213, out a2_214, out a3_215, out a4_119, out a5_116, out a6_216, out s4_217)
	branch s0_106 == 0<32> l230576AE
l230576A6:
	a5_116 = 0xFBFFFD80<32>
	s0_106 = s0_106 + 0xFBFFFD80<32>
l230576AE:
	s0Out = s0_106
	s1Out = s1_121
	a0Out = s0_106
	a2Out = dwArg0138
	a4Out = a4_119
	a5Out = a5_116
	a7Out = a7_178
	s2Out = s2_103
	s3Out = s3_185
	s4Out = dwArgF4
	return ra_102
mbedtls_rsa_public_exit:


word32 mbedtls_rsa_private(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_pkcs1_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      mbedtls_rsa_pkcs1_decrypt
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
//      mbedtls_rsa_pkcs1_verify
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_private_entry:
l230576BE:
	word32 s4_736
	word32 s0_101
	branch a5 == 0<32> l230578DA
l230576DA:
	branch a5 == 0<32> l230578DA
l230576E0:
	branch a5 == 0<32> l230578DA
l230578DA:
	s0_101 = 0xFBFFFF80<32>
	s4_736 = s4
l230576E6:
	mbedtls_mpi_init(fp + -84<i32>)
	mbedtls_mpi_init(fp + -72<i32>)
	mbedtls_mpi_init(fp + -60<i32>)
	word32 a0_49
	word32 a3_1022
	word32 a7_1023
	word32 a1_1021
	word32 s0_1020
	word32 s8_143
	word32 s4_142
	word32 s1_392
	word32 a5_106
	word32 a4_104
	word32 a2_108
	word32 ra_102 = mbedtls_mpi_read_binary(ra, a3, a2, a3, a4, mstatus, dwLoc58, dwLoc48, dwArg78, dwArg88, dwArgB8, dwArgC8, dwArgF8, dwArg0108, out s0_1020, out s1_392, out a0_49, out a1_1021, out a2_108, out a3_1022, out a4_104, out a5_106, out a7_1023, out s2, out s3, out s4_142, out s8_143)
	s0_101 = a0_49
	branch a0_49 != 0<32> l2305781E
l23057712:
	s2 = s1_392 + 8<i32>
	s0_101 = 0xFFFFFFFC<32>
	word32 a3_78
	word32 a6_1038
	word32 a1_156
	branch mbedtls_mpi_cmp_mpi(a2_108, a4_104, a5_106, out a1_156, out a2_108, out a3_78, out a4_104, out a5_106, out a6_1038) >= 0<32> l2305781E
l23057724:
	branch s4_142 != 0<32> l230577B8
l230577B8:
	word32 a3_208
	word32 ra_186
	word32 s4_187
	word32 s1_179
	word32 a0_205
	a5_106 = Mem23[s1_392 + 160<i32>:int32]
	branch a5_106 == 0<32> l23057854
l23057854:
	s7 = 0xC<32>
	s6 = s1_392 + 152<i32>
	s3 = s1_392 + 140<i32>
l2305785E:
	s7 = s7 + 0xFFFFFFFF<32>
	branch s7 == 0<32> l230578D2
l230578D2:
	s0_101 = 0xFBFFFB80<32>
l23057864:
	word32 a3_109
	word32 s4_1102
	word32 s8_1103
	word32 a0_105 = mbedtls_mpi_fill_random(ra_102, s0_101, Mem23[a1_156 + 4<i32>:word32], s1_392 + 152<i32>, a1_156 + 0xFFFFFFFF<32>, s4_142, s8_143, a4_104, mstatus, out a2_108, out a3_109, out a4_104, out a5_106, out s2, out s3, out s4_1102, out s8_1103, out mstatus)
	s0_101 = a0_105
	branch a0_105 != 0<32> l2305781E
l23057876:
	word32 a0_151
	word32 s1_1104
	word32 a3_1105
	ra_102 = mbedtls_mpi_gcd(ra_102, s1_392 + 152<i32>, s2, a3_109, a4_104, mstatus, dwArg08, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, out s1_1104, out a0_151, out a2_108, out a3_1105, out a4_104, out a5_106, out s2, out s3, out s4_142, out s8_143)
	s0_101 = a0_151
	branch a0_151 != 0<32> l2305781E
l23057884:
	word32 a3_1106
	word32 a6_1107
	branch mbedtls_mpi_cmp_int(1<32>, a2_108, out a1_156, out a2_108, out a3_1106, out a4_104, out a5_106, out a6_1107) != 0<32> l2305785E
l2305788E:
	word32 a0_171
	word32 a3_1108
	word32 s5_1109
	word32 s8_1110
	word32 s9_1111
	ra_186 = mbedtls_mpi_inv_mod(ra_102, a0_151, s1_392 + 152<i32>, s2, a4, s1_392 + 152<i32>, s7, s10, s11, mstatus, s2, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, s3, s1, dwArg58, dwArg78, dwArg88, dwArg98, dwArg0104, out s1_179, out a0_171, out a2_108, out a3_1108, out a4_104, out a5_106, out s2, out s3, out s4_187, out s5_1109, out s6, out s7, out s8_1110, out s9_1111, out s10, out s11)
	s0_101 = a0_171
	branch a0_171 != 0<32> l2305781E
l2305789C:
	word32 a7_1112
	a0_205 = mbedtls_mpi_exp_mod(ra_186, s1_179 + 20<i32>, s2, s1_179 + 104<i32>, s11, mstatus, out a2_108, out a3_208, out a4_104, out a5_106, out a7_1112)
l230577BE:
	word32 s5_237
	word32 a0_246
	word32 s4_1070
	word32 s8_1071
	word32 s1_1068
	word32 a3_1069
	word32 s0_1067
	word32 ra_231 = mbedtls_mpi_mul_mpi(ra_102, s1_392 + 140<i32>, s1_392 + 140<i32>, s1_392 + 140<i32>, a3_78, a4_104, s1_392 + 8<i32>, s4_142, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1067, out s1_1068, out a0_246, out a2_108, out a3_1069, out a4_104, out a5_106, out s2, out s3, out s4_1070, out s5_237, out s6, out s8_1071)
	s0_101 = a0_246
	branch a0_246 != 0<32> l2305781E
l230577D0:
	word32 a0_252
	word32 a3_255
	word32 s1_259
	word32 s4_268
	word32 s9_1075
	word32 s8_1074
	word32 s5_1073
	word32 a7_1072
	word32 ra_264 = mbedtls_mpi_mod_mpi(ra_231, s3, s3, s2, s5_237, s6, s7, s10, s11, mstatus, dwLoc58, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_259, out a0_252, out a2_108, out a3_255, out a4_104, out a5_106, out a7_1072, out s2, out s3, out s4_268, out s5_1073, out s6, out s7, out s8_1074, out s9_1075, out s10, out s11)
	s0_101 = a0_252
	branch a0_252 != 0<32> l2305781E
l230577DE:
	word32 s5_297
	word32 a0_306
	word32 s8_1080
	word32 s4_1079
	word32 s1_1077
	word32 a3_1078
	word32 s0_1076
	word32 ra_291 = mbedtls_mpi_mul_mpi(ra_264, s1_259 + 152<i32>, s1_259 + 152<i32>, s1_259 + 152<i32>, a3_255, a4_104, s2, s4_268, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1076, out s1_1077, out a0_306, out a2_108, out a3_1078, out a4_104, out a5_106, out s2, out s3, out s4_1079, out s5_297, out s6, out s8_1080)
	s0_101 = a0_306
	branch a0_306 != 0<32> l2305781E
l230577F0:
	word32 s9_1084
	word32 s8_1083
	word32 s5_1082
	word32 a7_1081
	ra_186 = mbedtls_mpi_mod_mpi(ra_291, s3, s3, s2, s5_297, s6, s7, s10, s11, mstatus, dwLoc58, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_179, out a0_205, out a2_108, out a3_208, out a4_104, out a5_106, out a7_1081, out s2, out s3, out s4_187, out s5_1082, out s6, out s7, out s8_1083, out s9_1084, out s10, out s11)
l230577FA:
	s0_101 = a0_205
	branch a0_205 != 0<32> l2305781E
l230577FE:
	word32 s5_367
	word32 a0_376
	word32 s8_1089
	word32 s4_1088
	word32 a3_1087
	word32 s1_1086
	word32 s0_1085
	word32 ra_361 = mbedtls_mpi_mul_mpi(ra_186, fp + -84<i32>, fp + -84<i32>, s1_179 + 140<i32>, a3_208, a4_104, s2, s4_187, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1085, out s1_1086, out a0_376, out a2_108, out a3_1087, out a4_104, out a5_106, out s2, out s3, out s4_1088, out s5_367, out s6, out s8_1089)
	s0_101 = a0_376
	branch a0_376 != 0<32> l2305781E
l2305780E:
	word32 a0_385
	word32 a7_1091
	word32 a3_1090
	word32 s4_1092
	word32 s5_1093
	word32 s8_1094
	word32 s9_1095
	ra_102 = mbedtls_mpi_mod_mpi(ra_361, fp + -84<i32>, fp + -84<i32>, s2, s5_367, s6, s7, s10, s11, mstatus, dwLoc58, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_392, out a0_385, out a2_108, out a3_1090, out a4_104, out a5_106, out a7_1091, out s2, out s3, out s4_1092, out s5_1093, out s6, out s7, out s8_1094, out s9_1095, out s10, out s11)
	s0_101 = a0_385
	branch a0_385 == 0<32> l23057728
l23057728:
	s6 = s1_392 + 44<i32>
	word32 a3_1039
	word32 a7_1040
	word32 a0_424 = mbedtls_mpi_exp_mod(ra_102, s1_392 + 68<i32>, s6, s1_392 + 116<i32>, s11, mstatus, out a2_108, out a3_1039, out a4_104, out a5_106, out a7_1040)
	s0_101 = a0_424
	branch a0_424 != 0<32> l2305781E
l23057744:
	s3 = s1_392 + 56<i32>
	word32 a3_449
	word32 a7_1041
	word32 a0_446 = mbedtls_mpi_exp_mod(ra_102, s1_392 + 80<i32>, s3, s1_392 + 128<i32>, s11, mstatus, out a2_108, out a3_449, out a4_104, out a5_106, out a7_1041)
	s0_101 = a0_446
	branch a0_446 != 0<32> l2305781E
l2305775E:
	word32 a0_467
	word32 a3_470
	word32 s1_477
	word32 s4_480
	word32 s8_1043
	word32 s0_1042
	word32 ra_475 = mbedtls_mpi_sub_mpi(ra_102, a0_446, fp + -84<i32>, a3_449, a4_104, a5_106, s2, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_1042, out s1_477, out a0_467, out a2_108, out a3_470, out a4_104, out a5_106, out s2, out s3, out s4_480, out s8_1043)
	s0_101 = a0_467
	branch a0_467 != 0<32> l2305781E
l2305776C:
	word32 s5_506
	word32 a0_515
	word32 s8_1048
	word32 s1_1045
	word32 a3_1046
	word32 s4_1047
	word32 s0_1044
	word32 ra_500 = mbedtls_mpi_mul_mpi(ra_475, fp + -72<i32>, fp + -84<i32>, s1_477 + 92<i32>, a3_470, a4_104, s2, s4_480, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1044, out s1_1045, out a0_515, out a2_108, out a3_1046, out a4_104, out a5_106, out s2, out s3, out s4_1047, out s5_506, out s6, out s8_1048)
	s0_101 = a0_515
	branch a0_515 != 0<32> l2305781E
l2305777C:
	word32 a0_523
	word32 a3_526
	word32 s4_539
	word32 s9_1053
	word32 s8_1052
	word32 s5_1051
	word32 a7_1050
	word32 s1_1049
	word32 ra_535 = mbedtls_mpi_mod_mpi(ra_500, fp + -84<i32>, fp + -72<i32>, s6, s5_506, s6, s7, s10, s11, mstatus, dwLoc58, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_1049, out a0_523, out a2_108, out a3_526, out a4_104, out a5_106, out a7_1050, out s2, out s3, out s4_539, out s5_1051, out s6, out s7, out s8_1052, out s9_1053, out s10, out s11)
	s0_101 = a0_523
	branch a0_523 != 0<32> l2305781E
l2305778A:
	word32 a3_556
	word32 a0_576
	word32 s8_1057
	word32 s4_1056
	word32 s1_1055
	word32 s0_1054
	word32 s5_567
	word32 ra_561 = mbedtls_mpi_mul_mpi(ra_535, fp + -72<i32>, fp + -84<i32>, s3, a3_526, a4_104, s2, s4_539, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1054, out s1_1055, out a0_576, out a2_108, out a3_556, out a4_104, out a5_106, out s2, out s3, out s4_1056, out s5_567, out s6, out s8_1057)
	s0_101 = a0_576
	branch a0_576 != 0<32> l2305781E
l23057798:
	word32 a0_582
	word32 a3_585
	word32 s1_592
	word32 s4_595
	word32 s8_1061
	word32 a7_1060
	word32 a1_1059
	word32 s0_1058
	word32 ra_590 = mbedtls_mpi_add_mpi(ra_561, a0_576, fp + -84<i32>, a3_556, a4_104, a5_106, s2, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_1058, out s1_592, out a0_582, out a1_1059, out a2_108, out a3_585, out a4_104, out a5_106, out a7_1060, out s2, out s3, out s4_595, out s8_1061)
	s0_101 = a0_582
	branch a0_582 != 0<32> l2305781E
l230577A6:
	branch s4_595 != 0<32> l230578B0
l230578B0:
	word32 s5_621
	word32 a0_630
	word32 s8_1066
	word32 s4_1065
	word32 s1_1063
	word32 a3_1064
	word32 s0_1062
	word32 ra_615 = mbedtls_mpi_mul_mpi(ra_590, fp + -84<i32>, fp + -84<i32>, s1_592 + 152<i32>, a3_585, a4_104, s2, s4_595, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1062, out s1_1063, out a0_630, out a2_108, out a3_1064, out a4_104, out a5_106, out s2, out s3, out s4_1065, out s5_621, out s6, out s8_1066)
	s0_101 = a0_630
	branch a0_630 != 0<32> l2305781E
l230578C0:
	word32 a0_636
	word32 s1_1096
	word32 a3_1097
	word32 a7_1098
	word32 s4_1099
	word32 s8_1100
	word32 s9_1101
	ra_590 = mbedtls_mpi_mod_mpi(ra_615, fp + -84<i32>, fp + -84<i32>, s2, s5_621, s6, s7, s10, s11, mstatus, dwLoc58, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_1096, out a0_636, out a2_108, out a3_1097, out a4_104, out a5_106, out a7_1098, out s2, out s3, out s4_1099, out s5_567, out s6, out s7, out s8_1100, out s9_1101, out s10, out s11)
	s0_101 = a0_636
	branch a0_636 == 0<32> l230577AA
l230578D0:
l230577AA:
	word32 a0_674
	mbedtls_mpi_write_binary(ra_590, s5_567, a2_108, a4_104, a5_106, out a0_674, out a2_108, out a4_104, out a5_106, out s2, out s3)
	s0_101 = a0_674
l2305781E:
	word32 a2_705
	word32 a5_706
	word32 a4_709
	word32 s4_1028
	word32 a1_1025
	word32 a3_1026
	word32 a6_1027
	word32 a0_1024
	mbedtls_mpi_free(fp + -84<i32>, a2_108, a4_104, a5_106, mstatus, dwArgE8, dwArg0128, out a0_1024, out a1_1025, out a2_705, out a3_1026, out a4_709, out a5_706, out a6_1027, out s4_1028)
	word32 a2_717
	word32 a5_718
	word32 a4_721
	word32 a0_1029
	word32 a1_1030
	word32 a6_1032
	word32 s4_1033
	word32 a3_1031
	mbedtls_mpi_free(fp + -72<i32>, a2_705, a4_709, a5_706, mstatus, dwArgE8, dwArg0128, out a0_1029, out a1_1030, out a2_717, out a3_1031, out a4_721, out a5_718, out a6_1032, out s4_1033)
	word32 a3_1036
	word32 a6_1037
	word32 a1_1035
	word32 a0_1034
	mbedtls_mpi_free(fp + -60<i32>, a2_717, a4_721, a5_718, mstatus, dwArgE8, dwArg0128, out a0_1034, out a1_1035, out a2, out a3_1036, out a4, out a5, out a6_1037, out s4_736)
	branch s0_101 == 0<32> l2305783A
l23057832:
	a5 = 0xFBFFFD00<32>
	s0_101 = s0_101 + 0xFBFFFD00<32>
l2305783A:
	s0Out = s0_101
	s1Out = dwArg28
	a0Out = s0_101
	a2Out = a2
	a3Out = dwArg08
	a4Out = a4
	a5Out = a5
	a7Out = dwLoc18
	s2Out = s2
	s3Out = s3
	s4Out = s4_736
	s5Out = s4
	s6Out = s6
	s7Out = s7
	s9Out = dwLoc5C
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return dwArg68
mbedtls_rsa_private_exit:


void mbedtls_rsa_rsaes_oaep_encrypt(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 mstatus, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] s3:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_rsaes_oaep_encrypt_entry:
l230578E2:
	branch a3 != 1<32> l23057934
l23057906:
	branch Mem29[a0 + 164<i32>:int32] == a3 l23057934
l23057934:
	branch a1 == 0<32> l2305790E
l23057936:
	word32 a5_474
	word32 a0_60 = mbedtls_md_info_from_type(CONVERT(Mem29[a0 + 168<i32>:byte], byte, word32), out a5_474)
	branch a0_60 == 0<32> l2305790E
l23057952:
	word32 s0_63 = Mem55[a0 + 4<i32>:int32]
	word32 a0_64 = mbedtls_md_get_size(a0_60)
	word32 a5_67 = a6 + 2<i32> + (a0_64 << 1<u32>)
	branch a5_67 <u a6 l2305790E
l2305796A:
	branch s0_63 <u a5_67 l2305790E
l2305796E:
	word32 a3_77
	word32 a4_78
	word32 a5_79
	word32 a2_478
	word32 a0_476
	word32 a1_477
	word32 t1_475
	word32 ra_80 = memset(dwArg0118, s3, 0<32>, s0_63, out t1_475, out a0_476, out a1_477, out a2_478, out a3_77, out a4_78, out a5_79)
	Mem84[s3:byte] = 0<8>
	word32 sp_88
	word32 ra_90
	word32 s0_91
	word32 s1_92
	word32 s2_93
	word32 s4_94
	word32 s7_97
	word32 s8_98
	word32 s9_99
	word32 s10_100
	word32 s11_101
	word32 a0_104
	word32 tp_114
	word32 t5_351
	word32 t6_352
	call a1 (retsize: 0;)
		uses: a0:a2,a1:s3 + 1<i32>,a2:a0_64,a3:a3_77,a4:a4_78,a5:a5_79,a6:a6,a7:a7,mstatus:mstatus,ra:ra_80,s0:s0_63,s1:a0_64,s10:a4,s11:a5,s2:a0,s3:s3,s4:a6,s5:a1,s6:a2,s7:s3 + 1<i32>,s8:a0_60,s9:a0_64 << 1<u32>,Stack +0178:dwArg0118,t5:t5_351,t6:t6_352,tp:tp_114
		defs: a0:a0_104,ra:ra_90,s0:s0_91,s1:s1_92,s10:s10_100,s11:s11_101,s2:s2_93,s4:s4_94,s7:s7_97,s8:s8_98,s9:s9_99,sp:sp_88,t5:t5_351,t6:t6_352,tp:tp_114
	branch a0_104 == 0<32> l23057994
l23057994:
	word32 a5_115 = s7_97 + s1_92
	Mem120[sp_88 + 132<i32>:word32] = a5_115
	word32 a5_122
	word32 a1_123
	word32 ra_126 = mbedtls_md(ra_90, s8_98, s10_100, s11_101, a5_115, out a1_123, out a5_122)
	word32 s0_131 = Mem120[sp_88 + 100<i32>:word32]
	word32 a0_133 = s0_91 - s4_94 + 0xFFFFFFFE<32> + s1_92 - s9_99 + a5_122
	Mem135[a0_133:byte] = 1<8>
	word32 a4_482
	word32 a6_484
	word32 a7_485
	word32 a5_483
	word32 a2_480
	word32 a3_481
	word32 a1_479
	memcpy(a0_133 + 1<32>, a1_123, s4_94, out a1_479, out a2_480, out a3_481, out a4_482, out a5_483, out a6_484, out a7_485)
	word32 a3_155
	word32 a4_156
	word32 a5_157
	word32 a0_166
	word32 a2_168
	word32 a4_170
	word32 a5_171
	word32 mstatus_173
	word32 s1_175
	word32 s3_177
	word32 a3_486
	word32 s4_488
	word32 s8_489
	word32 s2_487
	word32 ra_174 = mbedtls_md_setup(mbedtls_md_init(ra_126, sp_88 + 20<i32>, out a3_155, out a4_156, out a5_157), s0_131, s1_92, sp_88 + 20<i32>, s8_98, 0<32>, a3_155, a4_156, a5_157, s2_93, mstatus, Mem135[sp_88 + 16<i32>:word32], Mem135[sp_88 + 20<i32>:word32], Mem135[sp_88 + 56<i32>:word32], Mem135[sp_88 + 264<i32>:word32], Mem135[sp_88 + 328<i32>:word32], out s1_175, out a0_166, out a2_168, out a3_486, out a4_170, out a5_171, out s2_487, out s3_177, out s4_488, out s8_489, out mstatus_173)
	branch a0_166 == 0<32> l230579E2
l230579E2:
	word32 s1_203
	word32 a2_220
	word32 a3_221
	word32 a4_222
	word32 a5_223
	word32 s1_227
	word32 s2_228
	word32 s3_229
	word32 s6_232
	word32 s5_502
	word32 s5_498
	word32 s0_500
	word32 s4_501
	word32 s6_499
	word32 a5_494
	word32 s3_496
	word32 s4_497
	word32 s2_495
	word32 s0_490
	word32 a3_492
	word32 a4_493
	word32 a2_491
	word32 ra_225 = mgf_mask(mgf_mask(ra_174, s1_175 + 1<i32> + s3_177, s0_131 + 0xFFFFFFFF<32> - s1_175, out s0_490, out s1_203, out a2_491, out a3_492, out a4_493, out a5_494, out s2_495, out s3_496, out s4_497, out s5_498, out s6_499), s7_97, s1_203, out s0_500, out s1_227, out a2_220, out a3_221, out a4_222, out a5_223, out s2_228, out s3_229, out s4_501, out s5_502, out s6_232)
	word32 a5_240
	mbedtls_md_free(ra_225, sp_88 + 20<i32>, a2_220, a4_222, a5_223, mstatus_173, out a5_240)
	branch a5_240 != 0<32> l23057A20
l23057A20:
	word32 s3_513
	word32 s2_512
	word32 a5_510
	word32 s5_515
	word32 s7_517
	word32 s6_516
	word32 s4_514
	word32 s9_518
	word32 s10_519
	word32 mstatus_521
	word32 s11_520
	word32 a7_511
	word32 a0_506
	word32 a3_508
	word32 a4_509
	word32 a2_507
	word32 s0_504
	word32 s1_505
	mbedtls_rsa_private(ra_225, s1_227, s6_232, s3_229, s3_229, a5_240, s2_228, s3_229, s6_232, s7_97, s10_100, s11_101, mstatus_173, Mem135[sp_88 + 8<i32>:word32], Mem135[sp_88 + 24<i32>:word32], Mem135[sp_88 + 36<i32>:word32], Mem135[sp_88 + 40<i32>:word32], Mem135[sp_88 + 56<i32>:word32], Mem135[sp_88 + 88<i32>:word32], Mem135[sp_88 + 104<i32>:word32], Mem135[sp_88 + 120<i32>:word32], Mem135[sp_88 + 136<i32>:word32], Mem135[sp_88 + 152<i32>:word32], Mem135[sp_88 + 168<i32>:word32], Mem135[sp_88 + 180<i32>:word32], Mem135[sp_88 + 184<i32>:word32], Mem135[sp_88 + 200<i32>:word32], Mem135[sp_88 + 212<i32>:word32], Mem135[sp_88 + 216<i32>:word32], Mem135[sp_88 + 232<i32>:word32], Mem135[sp_88 + 248<i32>:word32], Mem135[sp_88 + 260<i32>:word32], Mem135[sp_88 + 264<i32>:word32], Mem135[sp_88 + 296<i32>:word32], Mem135[sp_88 + 312<i32>:word32], out s0_504, out s1_505, out a0_506, out a2_507, out a3_508, out a4_509, out a5_510, out a7_511, out s2_512, out s3_513, out s4_514, out s5_515, out s6_516, out s7_517, out s9_518, out s10_519, out s11_520, out mstatus_521)
l23057A12:
	word32 s1_523
	word32 s0_522
	word32 a0_524
	word32 a2_525
	word32 a4_526
	word32 a5_527
	word32 a7_528
	word32 s2_529
	word32 s3_530
	word32 s4_531
	mbedtls_rsa_public(ra_225, s3_229, a3_221, a4_222, s2_228, s11_101, mstatus_173, Mem135[sp_88 + 36<i32>:word32], Mem135[sp_88 + 100<i32>:word32], Mem135[sp_88 + 152<i32>:word32], Mem135[sp_88 + 168<i32>:word32], Mem135[sp_88 + 216<i32>:word32], Mem135[sp_88 + 232<i32>:word32], Mem135[sp_88 + 264<i32>:word32], Mem135[sp_88 + 280<i32>:word32], Mem135[sp_88 + 296<i32>:word32], Mem135[sp_88 + 328<i32>:word32], out s0_522, out s1_523, out a0_524, out a2_525, out a4_526, out a5_527, out a7_528, out s2_529, out s3_530, out s4_531)
l23057A1C:
l230579DA:
	word32 a5_503
	mbedtls_md_free(ra_174, sp_88 + 20<i32>, a2_168, a4_170, a5_171, mstatus_173, out a5_503)
l2305798A:
l2305790E:
l23057914:
	return
mbedtls_rsa_rsaes_oaep_encrypt_exit:


void mbedtls_rsa_rsaes_pkcs1_v15_encrypt(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s5, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_rsaes_pkcs1_v15_encrypt_entry:
l23057A30:
	branch a3 != 1<32> l23057A3E
l23057A36:
	branch Mem0[a0 + 164<i32>:int32] != 0<32> l23057B52
l23057A3E:
	branch a1 == 0<32> l23057B52
l23057A42:
	branch a5 == 0<32> l23057B52
l23057A46:
	branch a6 == 0<32> l23057B52
l23057B52:
	return
l23057A4A:
	word32 a0_52 = Mem50[s0 + 4<i32>:word32]
	branch a4 >u 0xFFFFFFF4<32> l23057B5A
l23057A6A:
	branch s0 <u a4 + 11<i32> l23057B5A
l23057B5A:
l23057A72:
	word32 ra_101
	word32 s0_102
	Mem59[a6:byte] = 0<8>
	word32 s0_58 = s0 - a4
	word32 s1_103 = a6
	word32 s9_108 = a5
	word32 s8_107 = a4
	word32 s5_105 = a3
	word32 s6_125 = a2
	word32 s4_123 = a1
	word32 s3_104 = a0_52
	word32 s2_121 = a6 + 2<i32>
	branch a3 != 0<32> l23057B0E
l23057B0E:
	Mem73[a6 + 1<i32>:byte] = 1<8>
	word32 a3_74 = a6 + 2<i32>
	word32 a5_75 = s0_58 + 0xFFFFFFFD<32> + a6
l23057B1C:
	branch a5_75 != a3_74 l23057B24
l23057B24:
	Mem80[a3_74 + 0<i32>:byte] = 0xFF<8>
	a3_74 = a3_74 + 1<32>
l23057B20:
	s0_102 = s0_58 + 0xFFFFFFFD<32> + (a6 + 2<i32>)
	ra_101 = ra
l23057A8E:
	Mem87[a6 + 1<i32>:byte] = 2<8>
	word32 a5_134 = 2<32>
	s0_102 = s0_58 + 0xFFFFFFFF<32> + a6
	ra_101 = ra
l23057A98:
	branch s2_121 != s0_102 l23057AD2
l23057AD2:
	word32 s7_106 = 100<i32>
l23057AD6:
	word32 a0_114
	word32 tp_131
	word32 t3_132
	word32 t5_323
	word32 t6_324
	word32 t1_321
	word32 t4_322
	word32 t0_320
	call s4_123 (retsize: 0;)
		uses: a0:s6_95,a1:s2_93,a2:1<32>,a3:a3_98,a4:a4_109,a5:a5_99,a6:a6_100,mstatus:mstatus,ra:ra_101,s0:s0_102,s1:s1_103,s10:s10,s11:s11,s2:s2_93,s3:s3_104,s4:s4_97,s5:s5_105,s6:s6_95,s7:s7_106,s8:s8_107,s9:s9_108,t0:t0_320,t1:t1_321,t3:t3_132,t4:t4_322,t5:t5_323,t6:t6_324,tp:tp_131
		defs: a0:a0_114,a3:a3_113,a4:a4_129,a6:a6_117,ra:ra_118,s0:s0_119,s1:s1_120,s2:s2_121,s3:s3_122,s4:s4_123,s5:s5_124,s6:s6_125,s7:s7_126,s8:s8_127,s9:s9_128,t0:t0_320,t1:t1_321,t3:t3_132,t4:t4_322,t5:t5_323,t6:t6_324,tp:tp_131
	a5_134 = CONVERT(Mem87[s2_121:byte], byte, word32)
	branch a5_134 != 0<32> l23057B62
l23057B62:
	branch a0_114 != 0<32> l23057AEC
l23057B64:
	s2_121 = s2_121 + 1<32>
l23057AE4:
	s7_106 = s7 + 0xFFFFFFFF<32>
	branch s7 == 0xFFFFFFFF<32> l23057AEC
l23057AEA:
	branch a0_114 == 0<32> l23057AD6
l23057AEC:
l23057AF4:
	0<32> = dwArg0128
	return
l23057A9C:
	Mem159[s0_102:byte] = 0<8>
	word32 a4_169
	word32 a5_170
	word32 a3_174
	word32 a1_666
	word32 a7_669
	word32 a2_667
	word32 a6_668
	memcpy(s0_102 + 1<i32>, s9_108, s8_107, out a1_666, out a2_667, out a3_174, out a4_169, out a5_170, out a6_668, out a7_669)
	branch s5_105 != 0<32> l23057B2C
l23057B2C:
	0<32> = dwArg0128
l23057B4E_thunk_mbedtls_rsa_private:
	word32 s10_695
	word32 s11_696
	word32 mstatus_697
	word32 s4_690
	word32 s7_693
	word32 s9_694
	word32 s5_691
	word32 s6_692
	word32 a4_685
	word32 s2_688
	word32 s3_689
	word32 a5_686
	word32 a7_687
	word32 s0_680
	word32 a2_683
	word32 a3_684
	word32 s1_681
	word32 a0_682
	mbedtls_rsa_private(ra_101, s1_103, s6_125, s1_103, s1_103, a5_170, s2_121, s3_104, s6_125, s7, s10, s11, mstatus, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, s5, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF8, dwArg0104, dwArg0108, dwArg0128, dwArg0138, out s0_680, out s1_681, out a0_682, out a2_683, out a3_684, out a4_685, out a5_686, out a7_687, out s2_688, out s3_689, out s4_690, out s5_691, out s6_692, out s7_693, out s9_694, out s10_695, out s11_696, out mstatus_697)
	return
l23057AB0:
	0<32> = dwArg0128
l23057ACE_thunk_mbedtls_rsa_public:
	word32 a5_675
	word32 s3_678
	word32 s4_679
	word32 a7_676
	word32 s2_677
	word32 s1_671
	word32 a4_674
	word32 a0_672
	word32 a2_673
	word32 s0_670
	mbedtls_rsa_public(ra_101, s1_103, a3_174, a4_169, s2_121, s11, mstatus, dwArg24, ra, dwArg98, dwArgA8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, out s0_670, out s1_671, out a0_672, out a2_673, out a4_674, out a5_675, out a7_676, out s2_677, out s3_678, out s4_679)
	return
mbedtls_rsa_rsaes_pkcs1_v15_encrypt_exit:


void mbedtls_rsa_pkcs1_encrypt(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s3, word32 s5, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_encrypt_wrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s5:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_pkcs1_encrypt_entry:
l23057B68:
	word32 t4_5 = Mem0[a0 + 164<i32>:int32]
	branch t4_5 == 0<32> l23057B80
l23057B80:
l23057B80_thunk_mbedtls_rsa_rsaes_pkcs1_v15_encrypt:
	mbedtls_rsa_rsaes_pkcs1_v15_encrypt(ra, s0, a0, a1, a2, a3, a4, a5, a6, s5, s7, s10, s11, mstatus, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF8, dwArg0104, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148)
	return
l23057B70:
	branch t4_5 == 1<32> l23057B84
l23057B84:
	mbedtls_rsa_rsaes_oaep_encrypt(a0, a1, a2, a3, 0<32>, 0<32>, a4, a5, s3, mstatus, dwArgF8)
	return
l23057B78:
	return
mbedtls_rsa_pkcs1_encrypt_exit:


void mbedtls_rsa_rsaes_oaep_decrypt(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a7, word32 mstatus, int32 dwArg00, int32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_decrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
mbedtls_rsa_rsaes_oaep_decrypt_entry:
l23057B9C:
	branch a3 != 1<32> l23057C24
l23057BDA:
	branch Mem29[a0 + 164<i32>:int32] == a3 l23057C24
l23057C24:
	word32 a0_36 = Mem29[s1 + 4<i32>:word32]
	branch s1 >u -1024<i32> l23057BE2
l23057C32:
	word32 a5_63
	word32 a0_62 = mbedtls_md_info_from_type(CONVERT(Mem29[a0_36 + 168<i32>:byte], byte, word32), out a5_63)
	word32 s9_175 = a5
	word32 s7_104 = a0_62
	branch a0_62 == 0<32> l23057BE2
l23057C4E:
	word32 a0_65 = mbedtls_md_get_size(a0_62)
	word32 s5_188 = a0_65
	branch s1 <u a0_65 + 1<i32> << 1<u32> l23057BE2
l23057C60:
	word32 s2_121
	word32 s1_120
	word32 ra_118
	word32 a0_132
	branch a5_63 != 0<32> l23057C92
l23057C92:
	word32 s0_595
	word32 a2_596
	word32 a5_599
	word32 a4_598
	word32 a3_597
	word32 a7_600
	word32 s10_604
	word32 s4_602
	word32 s3_601
	word32 s6_603
	word32 s11_605
	ra_118 = mbedtls_rsa_private(ra, s1, a2, a7, fp + -1088<i32>, a5_63, a7, fp + -1088<i32>, a0_65 + 1<i32>, a0_62, a1, a2, mstatus, dwLoc0478, dwLoc0468, dwLoc045C, dwLoc0458, dwLoc0448, dwLoc0428, dwLoc0418, dwLoc0408, dwLoc03F8, dwLoc03E8, dwLoc03D8, dwLoc03CC, dwLoc03C8, dwLoc03B8, dwLoc03AC, dwLoc03A8, dwLoc0398, dwLoc0388, dwLoc037C, dwLoc0378, dwLoc0358, dwLoc0348, out s0_595, out s1_120, out a0_132, out a2_596, out a3_597, out a4_598, out a5_599, out a7_600, out s2_121, out s3_601, out s4_602, out s5_188, out s6_603, out s7_104, out s9_175, out s10_604, out s11_605, out mstatus)
l23057C68:
	word32 s0_606
	word32 a5_609
	word32 a2_607
	word32 a4_608
	word32 a7_610
	word32 s4_612
	word32 s3_611
	ra_118 = mbedtls_rsa_public(ra, a7, a3, a4, a7, a2, mstatus, dwLoc045C, dwLoc041C, dwLoc03E8, dwLoc03D8, dwLoc03A8, dwLoc0398, dwLoc0378, dwLoc0368, dwLoc0358, dwLoc0338, out s0_606, out s1_120, out a0_132, out a2_607, out a4_608, out a5_609, out a7_610, out s2_121, out s3_611, out s4_612)
l23057C72:
	branch a0_132 != 0<32> l23057BE8
l23057C76:
	word32 a3_141
	word32 a4_142
	word32 a5_143
	word32 a0_155
	word32 a2_157
	word32 a4_159
	word32 a5_160
	word32 mstatus_162
	word32 s1_164
	word32 s8_168
	word32 s2_614
	word32 a3_613
	word32 s3_615
	word32 s4_616
	word32 ra_163 = mbedtls_md_setup(mbedtls_md_init(ra_118, fp + -1132<i32>, out a3_141, out a4_142, out a5_143), a0_132, s1_120, fp + -1132<i32>, s7_104, 0<32>, a3_141, a4_142, a5_143, s2_121, mstatus, dwLoc0470, dwLoc046C, dwLoc0448, dwLoc0378, dwLoc0338, out s1_164, out a0_155, out a2_157, out a3_613, out a4_159, out a5_160, out s2_614, out s3_615, out s4_616, out s8_168, out mstatus_162)
	branch a0_155 == 0<32> l23057CA2
l23057CA2:
	word32 s6_209
	word32 a2_221
	word32 a4_223
	word32 a5_224
	word32 s1_228
	word32 s3_230
	word32 s4_231
	word32 s5_232
	word32 a5_633
	word32 s6_632
	word32 a1_617
	word32 a5_618
	word32 a4_623
	word32 s1_620
	word32 s0_619
	word32 a2_621
	word32 s2_625
	word32 a3_622
	word32 a5_624
	word32 s3_626
	word32 s4_627
	word32 s5_628
	word32 s0_629
	word32 a3_630
	word32 s2_631
	mbedtls_md_free(mgf_mask(mgf_mask(mbedtls_md(ra_163, s7_104, s8_168, s9_175, fp + -1120<i32>, out a1_617, out a5_618), fp + -1087<i32>, s5_188, out s0_619, out s1_620, out a2_621, out a3_622, out a4_623, out a5_624, out s2_625, out s3_626, out s4_627, out s5_628, out s6_209), s6_209, s1_164 + -1<i32> - s5_188, out s0_629, out s1_228, out a2_221, out a3_630, out a4_223, out a5_224, out s2_631, out s3_230, out s4_231, out s5_232, out s6_632), fp + -1132<i32>, a2_221, a4_223, a5_224, mstatus_162, out a5_633)
	word32 a5_242 = CONVERT(bLoc0440, byte, word32)
	word32 a0_244 = fp + -1087<i32> + s5_232
	word32 a3_245 = 0<32>
l23057CEC:
	word32 a4_247 = a5_242 << 0x18<u32>
	branch a3_245 <u s5_232 l23057D3C
l23057D3C:
	a3_245 = a3_245 + 1<32>
	a5_242 = (CONVERT(Mem55[fp + -1120<i32> + a3_245:byte], byte, word32) ^ CONVERT(Mem55[a0_244 + a3_245:byte], byte, word32) | a4_247 >> 24<i32>) & 255<i32>
l23057CF6:
	word32 a0_263 = a0_244 + s5_232
	word32 s4_266 = s1_228 - s4_231
	word32 a1_267 = 0<32>
	word32 a3_268 = 0<32>
	word32 a2_269 = 0<32>
l23057D02:
	branch s4_266 != a2_269 l23057D58
l23057D58:
	a1_267 = a1_267 | CONVERT(Mem55[a0_263 + a2_269:byte], byte, word32)
	a2_269 = a2_269 + 1<32>
	a3_268 = a3_268 + (((0<32> - a1_267 | a1_267) & 255<i32>) >>u 7<i32> ^ 1<i32>)
l23057D06:
	word32 a1_287 = a3_268 + 1<i32> + a0_263
	branch CONVERT(SLICE(CONVERT(Mem55[a0_263 + a3_268:byte], byte, word32) ^ 1<i32> | a4_247 >> 24<i32>, byte, 0), byte, int32) != 0<32> l23057D78
l23057D78:
l23057D1E:
	branch dwArg04 <u s1_228 - (a1_287 - s3_230) l23057D80
l23057D80:
l23057D2E:
	Mem308[dwLoc039C:word32] = dwArg04
	word32 a5_639
	word32 a6_640
	word32 a7_641
	word32 a1_635
	word32 a2_636
	word32 a3_637
	word32 a4_638
	memcpy(dwArg00, a1_287, dwLoc039C, out a1_635, out a2_636, out a3_637, out a4_638, out a5_639, out a6_640, out a7_641)
l23057C8A:
	word32 a5_634
	mbedtls_md_free(ra_163, fp + -1132<i32>, a2_157, a4_159, a5_160, mstatus_162, out a5_634)
l23057BE2:
l23057BE8:
	return
mbedtls_rsa_rsaes_oaep_decrypt_exit:


void mbedtls_rsa_rsaes_pkcs1_v15_decrypt(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s7, word32 s10, word32 s11, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_decrypt
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s7:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
mbedtls_rsa_rsaes_pkcs1_v15_decrypt_entry:
l23057D88:
	branch a3 != 1<32> l23057DBA
l23057DB2:
	branch Mem19[a0 + 164<i32>:int32] != 0<32> l23057ED2
l23057DBA:
	branch Mem19[a0 + 4<i32>:int32] >u -1024<i32> l23057ED2
l23057ED2:
l23057DCA:
	word32 s1_212
	word32 s2_100
	word32 s3_101
	word32 s4_102
	word32 a0_111
	word32 s6_121 = a3
	word32 s5_125 = fp + -1056<i32>
	branch a3 != 0<32> l23057E92
l23057E92:
	word32 s10_506
	word32 mstatus_508
	word32 s11_507
	word32 s7_504
	word32 s9_505
	word32 a4_501
	word32 a7_503
	word32 a5_502
	word32 a2_499
	word32 a3_500
	word32 s0_498
	mbedtls_rsa_private(ra, a6, a2, a5, fp + -1056<i32>, a5, a4, a7, a3, s7, s10, s11, mstatus, dwLoc0418, dwLoc0408, dwLoc03FC, dwLoc03F8, dwLoc03E8, dwLoc03C8, dwLoc03B8, dwLoc03A8, dwLoc0398, dwLoc0388, dwLoc0378, dwLoc036C, dwLoc0368, dwLoc0358, dwLoc034C, dwLoc0348, dwLoc0338, dwLoc0328, dwLoc031C, dwLoc0318, dwLoc02F8, dwLoc02E8, out s0_498, out s1_212, out a0_111, out a2_499, out a3_500, out a4_501, out a5_502, out a7_503, out s2_100, out s3_101, out s4_102, out s5_125, out s6_121, out s7_504, out s9_505, out s10_506, out s11_507, out mstatus_508)
l23057DD6:
	word32 a4_488
	word32 a7_490
	word32 a5_489
	word32 s0_486
	word32 a2_487
	mbedtls_rsa_public(ra, a5, a3, a4, a4, s11, mstatus, dwLoc03FC, dwLoc03BC, dwLoc0388, dwLoc0378, dwLoc0348, dwLoc0338, dwLoc0318, dwLoc0308, dwLoc02F8, dwLoc02D8, out s0_486, out s1_212, out a0_111, out a2_487, out a4_488, out a5_489, out a7_490, out s2_100, out s3_101, out s4_102)
l23057DDE:
	branch a0_111 != 0<32> l23057E6A
l23057DE2:
	word32 a3_124
	word32 a5_129
	word32 a4_117 = CONVERT(bLoc041F, byte, word32)
	word32 a5_118 = CONVERT(bLoc0420, int8, int32)
	word32 a2_120 = s4_102 + -3<i32>
	branch s6_121 != 1<32> l23057E9C
l23057E9C:
	a3_124 = (a4_117 ^ 1<i32> | a5_118) & 255<i32>
	word32 a0_126 = s5_125 + 2<i32>
	word32 a6_127 = 0<32>
	word32 a1_128 = 0<32>
	a5_129 = 0<32>
l23057EAE:
	a6_127 = CONVERT(CONVERT(Mem19[a0_126 + 0<i32>:byte], byte, word32) != 0xFFFFFF01<32>, bool, word32) | a6_127
	a1_128 = a1_128 + 1<32>
	a0_126 = a0_126 + 1<32>
	a5_129 = a5_129 + ((a6_127 ^ 1<i32>) & 255<i32>)
	branch a1_128 <u a2_120 l23057EAE
l23057ED0:
l23057DF4:
	a3_124 = (a4_117 ^ 2<i32> | a5_118) & 255<i32>
	word32 a6_148 = s5_125 + 2<i32>
	word32 a1_149 = 0<32>
	word32 a0_150 = 0<32>
	a5_129 = 0<32>
l23057E06:
	word32 a4_154 = CONVERT(Mem19[a6_148 + 0<i32>:byte], byte, word32)
	a1_149 = a1_149 | ((a4_154 | 0<32> - a4_154) & 255<i32>) >>u 7<i32> ^ 1<i32>
	a0_150 = a0_150 + 1<32>
	a6_148 = a6_148 + 1<32>
	a5_129 = a5_129 + (((0<32> - a1_149 | a1_149) & 255<i32>) >>u 7<i32> ^ 1<i32>)
	branch a0_150 <u a2_120 l23057E06
l23057E38:
	word32 a1_178 = fp + -32<i32> + a5_129
	branch (CONVERT(a5_129 <u 8<i32>, bool, word32) | (a3_124 | CONVERT(Mem19[((fp + -32<i32>) + a5_129) + -1022<i32>:byte], byte, word32))) != 0<32> l23057EDA
l23057EDA:
l23057E54:
	word32 a2_198 = s4_102 - ((a1_178 + -1021<i32>) - s5_125)
	branch s3_101 <u a2_198 l23057EE2
l23057EE2:
l23057E60:
	Mem209[s2_100:word32] = a2_198
	word32 a6_496
	word32 a7_497
	word32 a4_494
	word32 a5_495
	word32 a1_491
	word32 a3_493
	word32 a2_492
	memcpy(s1_212, a1_178 + -1021<i32>, a2_198, out a1_491, out a2_492, out a3_493, out a4_494, out a5_495, out a6_496, out a7_497)
l23057E6A:
	return
mbedtls_rsa_rsaes_pkcs1_v15_decrypt_exit:


void mbedtls_rsa_pkcs1_decrypt(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s7, word32 s10, word32 s11, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_decrypt_wrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s7:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_pkcs1_decrypt_entry:
l23057EEA:
	word32 t6_5 = Mem0[a0 + 164<i32>:int32]
	branch t6_5 == 0<32> l23057F02
l23057F02:
l23057F02_thunk_mbedtls_rsa_rsaes_pkcs1_v15_decrypt:
	mbedtls_rsa_rsaes_pkcs1_v15_decrypt(ra, a0, a2, a3, a4, a5, a6, a7, s7, s10, s11, mstatus)
	return
l23057EF2:
	branch t6_5 == 1<32> l23057F06
l23057F06:
	mbedtls_rsa_rsaes_oaep_decrypt(ra, s1, a0, a1, a2, a3, 0<32>, 0<32>, a5, mstatus, a6, dwLoc1C)
	return
l23057EFA:
	return
mbedtls_rsa_pkcs1_decrypt_exit:


void mbedtls_rsa_rsassa_pss_sign(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s8, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_sign
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_rsassa_pss_sign_entry:
l23057F24:
	word32 s9_19 = a5
	branch a3 != 1<32> l23057F82
l23057F54:
	branch Mem31[a0 + 164<i32>:int32] == a3 l23057F82
l23057F82:
	branch a1 == 0<32> l23057F5C
l23057F86:
	word32 s0_49 = Mem31[a0 + 4<i32>:int32]
	branch a4 == 0<32> l23057F9A
l23057F8C:
	word32 a5_553
	word32 a0_53 = mbedtls_md_info_from_type(a4, out a5_553)
	branch a0_53 == 0<32> l23057F5C
l23057F94:
	s9_19 = mbedtls_md_get_size(a0_53)
l23057F9A:
	word32 a5_554
	word32 a0_60 = mbedtls_md_info_from_type(CONVERT(Mem31[a0 + 168<i32>:byte], byte, word32), out a5_554)
	branch a0_60 == 0<32> l23057F5C
l23057FA6:
	word32 a0_63 = mbedtls_md_get_size(a0_60)
	word32 s1_65 = a0_63 + 1<i32> << 1<i32>
	branch s0_49 <u s1_65 l23057F5C
l23057FB6:
	word32 a3_78
	word32 a4_79
	word32 a5_80
	word32 tp_390
	word32 t6_388
	word32 t5_387
	word32 t3_386
	word32 sp_104
	word32 s3_105
	word32 s7_109
	word32 s11_111
	word32 a5_112
	word32 ra_113
	word32 s0_114
	word32 s1_115
	word32 s2_116
	word32 s10_118
	word32 a0_119
	word32 a2_121
	word32 a4_127
	word32 t1_128
	call a1 (retsize: 0;)
		uses: a0:a2,a1:fp + -96<i32>,a2:a0_63,a3:a3_78,a4:a4_79,a5:a5_80,a6:a6,a7:a7,mstatus:mstatus,ra:memset(ra, a7, 0<32>, s0_49, out t1_555, out a0_556, out a1_557, out a2_558, out a3_78, out a4_79, out a5_80),s0:s0_49,s1:s1_65,s10:a0_60,s11:a6,s2:a0_63,s3:a7,s4:a0,s5:a1,s6:a3,s7:a2,s8:s8,s9:s9_94,t1:t1_128,t3:t3_386,t5:t5_387,t6:t6_388,tp:tp_390
		defs: a0:a0_119,a2:a2_121,a4:a4_127,a5:a5_112,ra:ra_113,s0:s0_114,s1:s1_115,s10:s10_118,s11:s11_111,s2:s2_116,s3:s3_105,s7:s7_109,sp:sp_104,t1:t1_128,t3:t3_386,t5:t5_387,t6:t6_388,tp:tp_390
	branch a0_119 == 0<32> l23057FD4
l23057FD4:
	word32 s1_137 = s0_114 - s1_115
	word32 a5_563
	word32 a2_560
	word32 a4_562
	word32 a3_561
	word32 a1_559
	word32 a0_131 = mbedtls_mpi_bitlen(a2_121, a4_127, a5_112, out a1_559, out a2_560, out a3_561, out a4_562, out a5_563)
	word32 a5_138 = s3_105 + s1_137
	Mem141[a5_138:byte] = 1<8>
	Mem144[sp_104 + 4<i32>:word32] = a0_131
	Mem146[sp_104 + 132<i32>:word32] = a5_138 + 1<i32>
	word32 a5_568
	word32 a7_570
	word32 a6_569
	word32 a2_565
	word32 a4_567
	word32 a3_566
	word32 a1_564
	memcpy(a5_138 + 1<i32>, sp_104 + 32<i32>, s2_116, out a1_564, out a2_565, out a3_566, out a4_567, out a5_568, out a6_569, out a7_570)
	word32 a3_164
	word32 a4_165
	word32 a5_166
	word32 a0_176
	word32 a4_180
	word32 a5_181
	word32 mstatus_183
	word32 s2_186
	word32 s3_187
	word32 a3_573
	word32 s8_575
	word32 s4_574
	word32 a2_572
	word32 s1_571
	word32 ra_184 = mbedtls_md_setup(mbedtls_md_init(ra_113, sp_104 + 20<i32>, out a3_164, out a4_165, out a5_166), s0_114, s1_137, sp_104 + 20<i32>, s10_118, 0<32>, a3_164, a4_165, a5_166, s2_116, mstatus, Mem146[sp_104 + 16<i32>:word32], Mem146[sp_104 + 20<i32>:word32], Mem146[sp_104 + 56<i32>:word32], Mem146[sp_104 + 264<i32>:word32], Mem146[sp_104 + 328<i32>:word32], out s1_571, out a0_176, out a2_572, out a3_573, out a4_180, out a5_181, out s2_186, out s3_187, out s4_574, out s8_575, out mstatus_183)
	word32 a2_195 = Mem146[sp_104 + 196<i32>:word32]
	branch a0_176 == 0<32> l2305801C
l2305801C:
	word32 a0_234 = CONVERT((a5_227 + -1<i32> & 7<32>) <u 1<i32>, bool, word32)
	word32 a5_200
	word32 a5_207
	word32 a5_214
	word32 a5_221
	word32 a5_227
	word32 a2_242
	word32 a4_244
	word32 a5_245
	word32 s0_248
	word32 s1_249
	word32 s2_250
	word32 s3_251
	word32 s6_254
	word32 a3_578
	word32 s5_580
	word32 s4_579
	word32 a2_577
	word32 ra_247 = mgf_mask(mbedtls_md_finish(mbedtls_md_update(mbedtls_md_update(mbedtls_md_update(mbedtls_md_starts(ra_184, sp_104 + 20<i32>, a5_181, Mem146[sp_104 + 16<i32>:word32], out a5_200), sp_104 + 20<i32>, a5_200, Mem146[sp_104 + 16<i32>:word32], out a5_207), sp_104 + 20<i32>, a5_207, Mem146[sp_104 + 16<i32>:word32], out a5_214), sp_104 + 20<i32>, a5_214, Mem146[sp_104 + 16<i32>:word32], out a5_221), sp_104 + 20<i32>, a5_221, Mem146[sp_104 + 16<i32>:word32], out a2_577, out a5_227), a0_234 + s3_187, Mem146[sp_104 + 228<i32>:word32] + -1<i32> - s2_186 - a0_234, out s0_248, out s1_249, out a2_242, out a3_578, out a4_244, out a5_245, out s2_250, out s3_251, out s4_579, out s5_580, out s6_254)
	word32 a5_262
	word32 a3_268
	word32 a4_269
	word32 a5_583
	word32 a2_582
	word32 a1_581
	Mem279[s3_251:byte] = SLICE(255<i32> >> ((s0_248 << 3<i32>) + 1<32>) - mbedtls_mpi_bitlen(mbedtls_md_free(ra_247, sp_104 + 20<i32>, a2_242, a4_244, a5_245, mstatus_183, out a5_262), a4_244, a5_262, out a1_581, out a2_582, out a3_268, out a4_269, out a5_583) & CONVERT(Mem146[s3_251:byte], byte, word32), byte, 0)
	word32 s2_276 = s2_250 + s1_249
	Mem280[s2_276:byte] = 0xBC<8>
	branch s6_254 != 0<32> l230580B0
l230580B0:
	word32 a0_596
	word32 a2_597
	word32 s0_594
	word32 s1_595
	word32 a4_599
	word32 a7_601
	word32 s2_602
	word32 a5_600
	word32 a3_598
	word32 s4_604
	word32 s6_606
	word32 s7_607
	word32 s3_603
	word32 s5_605
	word32 s10_609
	word32 mstatus_611
	word32 s9_608
	word32 s11_610
	mbedtls_rsa_private(ra_247, s1_249, s7_109, s3_251, s3_251, -68<i32>, s2_276, s3_251, s6_254, s7_109, s10_118, s11_111, mstatus_183, Mem280[sp_104 + 8<i32>:word32], Mem280[sp_104 + 24<i32>:word32], Mem280[sp_104 + 36<i32>:word32], Mem280[sp_104 + 40<i32>:word32], Mem280[sp_104 + 56<i32>:word32], Mem280[sp_104 + 88<i32>:word32], Mem280[sp_104 + 104<i32>:word32], Mem280[sp_104 + 120<i32>:word32], Mem280[sp_104 + 136<i32>:word32], Mem280[sp_104 + 152<i32>:word32], Mem280[sp_104 + 168<i32>:word32], Mem280[sp_104 + 180<i32>:word32], Mem280[sp_104 + 184<i32>:word32], Mem280[sp_104 + 200<i32>:word32], Mem280[sp_104 + 212<i32>:word32], Mem280[sp_104 + 216<i32>:word32], Mem280[sp_104 + 232<i32>:word32], Mem280[sp_104 + 248<i32>:word32], Mem280[sp_104 + 260<i32>:word32], Mem280[sp_104 + 264<i32>:word32], Mem280[sp_104 + 296<i32>:word32], Mem280[sp_104 + 312<i32>:word32], out s0_594, out s1_595, out a0_596, out a2_597, out a3_598, out a4_599, out a5_600, out a7_601, out s2_602, out s3_603, out s4_604, out s5_605, out s6_606, out s7_607, out s9_608, out s10_609, out s11_610, out mstatus_611)
l230580A2:
	word32 a4_588
	word32 a7_590
	word32 s2_591
	word32 s3_592
	word32 s4_593
	word32 a5_589
	word32 s1_585
	word32 a2_587
	word32 a0_586
	word32 s0_584
	mbedtls_rsa_public(ra_247, s3_251, a3_268, a4_269, s2_276, s11_111, mstatus_183, Mem280[sp_104 + 36<i32>:word32], Mem280[sp_104 + 100<i32>:word32], Mem280[sp_104 + 152<i32>:word32], Mem280[sp_104 + 168<i32>:word32], Mem280[sp_104 + 216<i32>:word32], Mem280[sp_104 + 232<i32>:word32], Mem280[sp_104 + 264<i32>:word32], Mem280[sp_104 + 280<i32>:word32], Mem280[sp_104 + 296<i32>:word32], Mem280[sp_104 + 328<i32>:word32], out s0_584, out s1_585, out a0_586, out a2_587, out a4_588, out a5_589, out a7_590, out s2_591, out s3_592, out s4_593)
l230580AC:
l23058014:
	word32 a5_576
	mbedtls_md_free(ra_184, sp_104 + 20<i32>, a2_195, a4_180, a5_181, mstatus_183, out a5_576)
l23057FCA:
l23057F5C:
l23057F62:
	return
mbedtls_rsa_rsassa_pss_sign_exit:


void mbedtls_rsa_rsassa_pkcs1_v15_sign(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s2, word32 s9, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_sign
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
mbedtls_rsa_rsassa_pkcs1_v15_sign_entry:
l230580C0:
	word32 s9_23 = a5
	branch a3 != 1<32> l2305811A
l230580F2:
	branch Mem29[a0 + 164<i32>:int32] == 0<32> l2305811A
l2305811A:
	word32 s0_48 = Mem29[a0 + 4<i32>:int32]
	word32 s1_49 = s0_48 + -3<i32>
	branch a4 == 0<32> l2305814A
l23058126:
	word32 a5_738
	word32 a0_52 = mbedtls_md_info_from_type(a4, out a5_738)
	branch a0_52 == 0<32> l230580F8
l23058130:
	word32 a0_60 = mbedtls_oid_get_oid_by_md(a4, fp + -52<i32>, fp + -56<i32>, a4)
	branch a0_60 != 0<32> l230580F8
l2305813C:
	s0_48 = dwArg04
	s1_49 = s0_48 + -3<i32> - a0_60 + 0xFFFFFFF6<32>
	s9_23 = mbedtls_md_get_size(a0_52)
l2305814A:
	word32 s1_100 = s1_49 - s9_23
	branch s1_100 <=u 7<32> l230580F8
l23058154:
	branch s0_48 <u s1_100 l230580F8
l23058158:
	word32 a0_141
	Mem79[a7:byte] = 0<8>
	Mem80[a7 + 1<i32>:byte] = 1<8>
	word32 a1_87
	word32 a2_741
	word32 a0_740
	word32 t1_739
	word32 a3_742
	word32 a5_744
	word32 a4_743
	word32 ra_92 = memset(ra, a7 + 2<i32>, 255<i32>, s1_100, out t1_739, out a0_740, out a1_87, out a2_741, out a3_742, out a4_743, out a5_744)
	word32 a0_95 = a7 + 2<i32> + s1_100
	Mem96[a0_95:byte] = 0<8>
	branch a4 != 0<32> l2305819A
l2305819A:
	s1_100 = s9_23 & 255<i32>
	Mem105[a0_95 + 2<i32>:byte] = SLICE((dwArg24 & 255<i32>) + 8<i32> + s1_100, byte, 0)
	Mem108[a0_95 + 4<i32>:byte] = SLICE((dwArg24 & 255<i32>) + 4<i32>, byte, 0)
	Mem111[a0_95 + 6<i32>:byte] = SLICE(dwArg24 & 255<i32>, byte, 0)
	Mem112[a0_95 + 1<i32>:byte] = 0x30<8>
	Mem113[a0_95 + 3<i32>:byte] = 0x30<8>
	Mem114[a0_95 + 5<i32>:byte] = 6<8>
	word32 a5_812
	word32 a6_813
	word32 a7_814
	word32 a2_809
	word32 a3_810
	word32 a4_811
	word32 a1_808
	memcpy(a0_95 + 7<i32>, a1_87, dwArg24, out a1_808, out a2_809, out a3_810, out a4_811, out a5_812, out a6_813, out a7_814)
	word32 a0_132 = a0_95 + 7<i32> + dwArg04
	Mem133[a0_132:byte] = 5<8>
	Mem135[a0_132 + 1<i32>:byte] = 0<8>
	Mem136[a0_132 + 2<i32>:byte] = 4<8>
	Mem137[a0_132 + 3<i32>:byte] = SLICE(s1_100, byte, 0)
	a0_141 = a0_132 + 4<32>
l2305817E:
	a0_141 = a0_95 + 1<32>
l23058184:
	word32 a4_148
	word32 a5_149
	word32 a3_153
	word32 a1_745
	word32 a2_746
	word32 a7_748
	word32 a6_747
	memcpy(a0_141, a6, s9_23, out a1_745, out a2_746, out a3_153, out a4_148, out a5_149, out a6_747, out a7_748)
	branch a3 != 0<32> l230581F8
l230581F8:
	word32 a3_179
	word32 a4_180
	word32 a5_181
	word32 s2_186
	word32 s1_760
	word32 s0_759
	word32 s8_765
	word32 a2_762
	word32 a1_761
	word32 s3_763
	word32 s4_764
	word32 ra_183 = mycalloc(ra_92, s1_100, 1<32>, Mem166[a0 + 4<i32>:int32], a3_153, a4_148, a5_149, mstatus, dwLoc20, dwLoc1C, dwArgD8, dwArg0118, out s0_759, out s1_760, out a1_761, out a2_762, out a3_179, out a4_180, out a5_181, out s2_186, out s3_763, out s4_764, out s8_765)
	branch false l230580FE
l2305820A:
	word32 s1_205
	word32 s2_206
	word32 s3_207
	word32 a4_769
	word32 s0_766
	word32 a1_767
	word32 a3_768
	word32 s4_770
	word32 s8_771
	word32 a5_201
	word32 a2_198
	word32 ra_203 = mycalloc(ra_183, 1<32>, 1<32>, Mem166[s2_186 + 4<i32>:int32], a3_179, a4_180, a5_181, mstatus, dwLoc20, dwLoc1C, dwArgD8, dwArg0118, out s0_766, out s1_205, out a1_767, out a2_198, out a3_768, out a4_769, out a5_201, out s2_206, out s3_207, out s4_770, out s8_771)
	word32 a0_215 = s1_205
	branch false l23058266
l2305821C:
	word32 a0_235
	word32 a3_236
	word32 a4_249
	word32 s2_252
	word32 s11_263
	word32 s0_772
	word32 a7_773
	word32 s3_774
	word32 s4_775
	word32 s6_777
	word32 s7_778
	word32 s5_776
	word32 s9_779
	word32 s10_780
	word32 s1_240
	word32 a5_250
	word32 a2_248
	word32 ra_238 = mbedtls_rsa_private(ra_203, s1_205, a2, s3_207, s1_205, a5_201, s2_206, s3_207, a1, a2, s10, s11, mstatus, dwLoc38, s2, dwLoc1C, dwLoc18, dwLoc08, dwArg18, dwArg28, dwArg38, s9, s1, dwArg68, dwArg74, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgE8, dwArgF8, out s0_772, out s1_240, out a0_235, out a2_248, out a3_236, out a4_249, out a5_250, out a7_773, out s2_252, out s3_774, out s4_775, out s5_776, out s6_777, out s7_778, out s9_779, out s10_780, out s11_263, out mstatus)
	branch a0_235 != 0<32> l2305825E
l2305822E:
	word32 s2_278
	word32 s3_279
	word32 s4_280
	word32 a0_289
	word32 s0_781
	word32 a4_782
	word32 a7_783
	mbedtls_rsa_public(ra_238, s1_240, a3_236, a4_249, s2_252, s11_263, mstatus, dwLoc1C, dwArg24, s1, dwArg68, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_781, out s1_240, out a0_289, out a2_248, out a4_782, out a5_250, out a7_783, out s2_278, out s3_279, out s4_280)
	branch a0_289 != 0<32> l2305825E
l2305823C:
	a2_248 = Mem166[s2_278 + 4<i32>:int32]
	word32 a4_292 = 0<32>
	word32 a5_293 = 0<32>
l23058244:
	branch a2_248 != a5_293 l2305826C
l2305826C:
	a5_293 = a5_293 + 1<32>
	a4_292 = a4_292 | CONVERT(Mem166[s4_280 + a5_293:byte], byte, word32) ^ CONVERT(Mem166[s3_279 + a5_293:byte], byte, word32)
l23058248:
	word32 a5_309 = CONVERT(SLICE(a4_292, byte, 0), byte, word32)
	a5_250 = a5_309 & 255<i32>
	branch (a5_309 & 255<i32>) != 0<32> l23058284
l23058284:
l23058256:
	word32 a1_784
	word32 a3_785
	word32 a4_786
	word32 a6_787
	word32 a7_788
	memcpy(s3_279, s1_240, a2_248, out a1_784, out a2_248, out a3_785, out a4_786, out a5_250, out a6_787, out a7_788)
l2305825E:
	word32 s4_347
	word32 a4_794
	word32 a6_795
	word32 t3_796
	word32 a0_791
	word32 a1_792
	word32 a3_793
	word32 s1_790
	word32 s0_789
	vPortFree(s1_240, a2_248, a5_250, mstatus, dwArg0118, dwArg0158, out s0_789, out s1_790, out a0_791, out a1_792, out a2_198, out a3_793, out a4_794, out a5_201, out a6_795, out s4_347, out t3_796)
	a0_215 = s4_347
l23058266:
	word32 s4_806
	word32 t3_807
	word32 a4_803
	word32 a5_804
	word32 a6_805
	word32 a1_800
	word32 a2_801
	word32 a3_802
	word32 s0_797
	word32 s1_798
	word32 a0_799
	vPortFree(a0_215, a2_198, a5_201, mstatus, dwArg0118, dwArg0158, out s0_797, out s1_798, out a0_799, out a1_800, out a2_801, out a3_802, out a4_803, out a5_804, out a6_805, out s4_806, out t3_807)
l2305818C:
	word32 s0_749
	word32 s1_750
	word32 a4_753
	word32 a2_752
	word32 a0_751
	word32 a5_754
	word32 s2_756
	word32 a7_755
	word32 s3_757
	word32 s4_758
	mbedtls_rsa_public(ra_92, a7, a3_153, a4_148, a0, s11, mstatus, dwLoc1C, dwArg24, s1, dwArg68, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_749, out s1_750, out a0_751, out a2_752, out a4_753, out a5_754, out a7_755, out s2_756, out s3_757, out s4_758)
l230580F8:
l230580FE:
	0<32> = dwArg0198
	return
mbedtls_rsa_rsassa_pkcs1_v15_sign_exit:


void mbedtls_rsa_pkcs1_sign(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s2, word32 s8, word32 s9, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_sign_wrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s8:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_pkcs1_sign_entry:
l2305828C:
	word32 t1_5 = Mem0[a0 + 164<i32>:int32]
	branch t1_5 == 0<32> l230582A2
l230582A2:
l230582A2_thunk_mbedtls_rsa_rsassa_pkcs1_v15_sign:
	mbedtls_rsa_rsassa_pkcs1_v15_sign(ra, s1, a0, a1, a2, a3, a4, a5, a6, a7, s2, s9, s10, s11, mstatus, dwArg04, dwArg18, dwArg24, dwArg28, dwArg38, dwArg68, dwArg74, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0158, dwArg0198)
	return
l23058294:
	branch t1_5 == 1<32> l230582A6
l230582A6:
l230582A6_thunk_mbedtls_rsa_rsassa_pss_sign:
	mbedtls_rsa_rsassa_pss_sign(ra, a0, a1, a2, a3, a4, a5, a6, a7, s8, mstatus)
	return
l2305829A:
	return
mbedtls_rsa_pkcs1_sign_exit:


word32 mbedtls_rsa_rsassa_pss_verify_ext(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 a7, word32 s3, word32 s10, word32 s11, word32 mstatus, int32 dwArg00, int32 dwArg04, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_verify_ext
//      mbedtls_rsa_pkcs1_verify
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut: a0 a4 a5 a7 mstatus s10 s11
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
mbedtls_rsa_rsassa_pss_verify_ext_entry:
l230582AA:
	word32 a4_100
	word32 s0_120
	word32 s5_129 = a4
	word32 s9_137 = a7
	word32 s7_287 = dwArg00
	word32 a5_101 = dwArg04
	branch a3 != 1<32> l23058334
l230582F2:
	a4_100 = Mem27[a0 + 164<i32>:int32]
	branch a4_100 == a3 l23058334
l23058334:
	word32 s2_43 = Mem27[a0 + 4<i32>:int32]
	a4_100 = 1008<i32>
	branch s2_43 >u -1024<i32> l230582FA
l23058344:
	word32 s2_107
	word32 s4_109
	word32 ra_104
	word32 a0_118
	branch a3 != 0<32> l230583E4
l230583E4:
	word32 a2_784
	word32 a3_785
	word32 s3_786
	word32 s6_787
	word32 s1_783
	word32 s0_782
	ra_104 = mbedtls_rsa_private(ra, a0, a2, dwArg04, fp + -1072<i32>, dwArg04, s2_43, s3, a5, dwArg00, s10, s11, mstatus, dwLoc0468, dwLoc0458, dwLoc044C, dwLoc0448, dwLoc0438, dwLoc0418, dwLoc0408, dwLoc03F8, dwLoc03E8, dwLoc03D8, dwLoc03C8, dwLoc03BC, dwLoc03B8, dwLoc03A8, dwLoc039C, dwLoc0398, dwLoc0388, dwLoc0378, dwLoc036C, dwLoc0368, dwLoc0348, dwLoc0338, out s0_782, out s1_783, out a0_118, out a2_784, out a3_785, out a4_100, out a5_101, out a7, out s2_107, out s3_786, out s4_109, out s5_129, out s6_787, out s7_287, out s9_137, out s10, out s11, out mstatus)
l2305834A:
	word32 s3_791
	word32 a2_790
	word32 s1_789
	word32 s0_788
	ra_104 = mbedtls_rsa_public(ra, dwArg04, a3, 1008<i32>, s2_43, s11, mstatus, dwLoc044C, dwLoc040C, dwLoc03D8, dwLoc03C8, dwLoc0398, dwLoc0388, dwLoc0368, dwLoc0358, dwLoc0348, dwLoc0328, out s0_788, out s1_789, out a0_118, out a2_790, out a4_100, out a5_101, out a7, out s2_107, out s3_791, out s4_109)
l23058354:
	s0_120 = a0_118
	branch a0_118 != 0<32> l23058300
l23058358:
	word32 s3_122 = s2_107 + -1<i32>
	a4_100 = CONVERT(Mem27[fp + -48<i32> + s3_122 + -1024<i32>:byte], byte, word32)
	a5_101 = 188<i32>
	branch a4_100 != 188<i32> l230584AC
l2305836E:
	branch s5_129 == 0<32> l23058380
l23058372:
	word32 a0_132 = mbedtls_md_info_from_type(s5_129, out a5_101)
	branch a0_132 == 0<32> l230582FA
l2305837A:
	mbedtls_md_get_size(a0_132)
l23058380:
	word32 a0_140 = mbedtls_md_info_from_type(s9_137, out a5_101)
	branch a0_140 == 0<32> l230582FA
l2305838A:
	word32 a0_143 = mbedtls_md_get_size(a0_140)
	word32 a1_794
	word32 a0_793
	word32 t1_792
	word32 a3_795
	word32 a2_153
	word32 a4_155
	word32 a5_156
	word32 ra_157 = memset(ra_104, fp + -1124<i32>, 0<32>, 8<32>, out t1_792, out a0_793, out a1_794, out a2_153, out a3_795, out a4_155, out a5_156)
	word32 a4_799
	word32 a1_796
	word32 a2_797
	word32 a3_798
	word32 a5_800
	word32 a0_163 = mbedtls_mpi_bitlen(a2_153, a4_155, a5_156, out a1_796, out a2_797, out a3_798, out a4_799, out a5_800)
	word32 s1_173 = s4_109
	branch (a0_163 + -1<i32> & 7<i32>) != 0<32> l230583B4
l230583AE:
	s2_107 = s3_122
	s1_173 = fp + -1071<i32>
l230583B4:
	a5_101 = CONVERT(bLoc0430, byte, word32)
	a4_100 = a5_101 >> (s2_107 + 0xFFFFFFF8<32>) + (a0_163 + 7<32>)
	branch a4_100 != 0<32> l230582FA
l230583C8:
	word32 a3_194
	word32 a4_195
	word32 a5_196
	word32 a0_208
	word32 a2_210
	word32 a5_213
	word32 s1_217
	word32 s2_218
	word32 a3_801
	word32 s3_802
	word32 s4_803
	word32 s8_804
	word32 ra_216 = mbedtls_md_setup(mbedtls_md_init(ra_157, fp + -1116<i32>, out a3_194, out a4_195, out a5_196), a0_140, s1_173, fp + -1116<i32>, a0_140, 0<32>, a3_194, a4_195, a5_196, s2_107, mstatus, dwLoc0460, dwLoc045C, dwLoc0438, dwLoc0368, dwLoc0328, out s1_217, out a0_208, out a2_210, out a3_801, out a4_100, out a5_213, out s2_218, out s3_802, out s4_803, out s8_804, out mstatus)
	s0_120 = a0_208
	branch a0_208 == 0<32> l230583F0
l230583F0:
	a4_100 = CONVERT(bLoc0430, byte, word32)
	word32 a2_236
	word32 s2_244
	word32 s3_245
	word32 s4_246
	word32 s5_247
	word32 s0_805
	word32 a3_806
	word32 a5_808
	word32 s6_809
	word32 a4_807
	word32 s1_243
	word32 ra_241 = mgf_mask(ra_216, s1_217, ~a0_143 + s2_218, out s0_805, out s1_243, out a2_236, out a3_806, out a4_807, out a5_808, out s2_244, out s3_245, out s4_246, out s5_247, out s6_809)
	word32 a5_259 = 255<i32> >> (s2_244 << 3<u32>) - (a0_163 + -1<i32>) & a4_100
	word32 s2_261 = s2_244 + s4_246
l23058420:
	branch s1_243 >=u s2_261 l230584A2
l230584A2:
	branch s2_261 != s1_243 l2305842E
l23058424:
	a5_259 = CONVERT(Mem260[s1_243:byte], byte, word32)
	a4_100 = s1_243 + 1<i32>
	branch a5_259 == 0<32> l2305849E
l2305849E:
	s1_243 = a4_100
l2305842E:
	a4_100 = CONVERT(Mem260[s1_243:byte], byte, word32)
	a5_259 = 1<32>
	word32 s0_272 = s1_243 + 1<i32>
	branch a4_100 != 1<32> l230584A6
l2305843C:
	a5_259 = 0xFFFFFFFF<32>
	word32 s3_282 = s3_245 - s5_247 - (s0_272 - s4_246)
	branch s7_287 == 0xFFFFFFFF<32> l23058452
l2305844E:
	branch s7_287 != s3_282 l230584A6
l230584A6:
	mbedtls_md_free(ra_241, fp + -1116<i32>, a2_236, a4_100, a5_259, mstatus, out a5_101)
l230584AC:
	s0_120 = 0xFBFFFF00<32>
l23058452:
	word32 a5_317
	word32 a5_324
	word32 a5_337
	word32 a5_346
	word32 a2_351
	word32 a5_352
	word32 a5_810
	mbedtls_md_free(mbedtls_md_finish(mbedtls_md_update(mbedtls_md_update(mbedtls_md_update(mbedtls_md_starts(ra_241, fp + -1116<i32>, 0xFFFFFFFF<32>, dwLoc0460, out a5_317), fp + -1116<i32>, a5_317, dwLoc0460, out a5_324), fp + -1116<i32>, a5_324, dwLoc0460, out a5_337), fp + -1116<i32>, a5_337, dwLoc0460, out a5_346), fp + -1116<i32>, a5_346, dwLoc0460, out a2_351, out a5_352), fp + -1116<i32>, a2_351, a4_100, a5_352, mstatus, out a5_810)
	word32 a1_811
	word32 a2_812
	word32 a3_813
	word32 a0_364 = memcmp(s0_272 + s3_282, fp + -1104<i32>, s5_247, out a1_811, out a2_812, out a3_813, out a4_100, out a5_101)
	s0_120 = a0_364
	branch a0_364 == 0<32> l23058300
l23058496:
	s0_120 = 0xFBFFFC80<32>
l230583DC:
	mbedtls_md_free(ra_216, fp + -1116<i32>, a2_210, a4_100, a5_213, mstatus, out a5_101)
l230582FA:
	s0_120 = 0xFBFFFF80<32>
l23058300:
	a4Out = a4_100
	a5Out = a5_101
	a7Out = a7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return s0_120
mbedtls_rsa_rsassa_pss_verify_ext_exit:


word32 mbedtls_rsa_rsassa_pss_verify(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s10, word32 s11, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_verify
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_rsassa_pss_verify_entry:
l230584B4:
	word32 t1_7 = Mem5[a0 + 168<i32>:int32]
	word32 a7_10 = t1_7 & 255<i32>
	branch t1_7 != 0<32> l230584C8
l230584C6:
	a7_10 = a4
l230584C8:
	word32 mstatus_68
	word32 s11_67
	word32 s10_66
	word32 a7_65
	word32 a4_64
	word32 a5_38
	word32 a0_36 = mbedtls_rsa_rsassa_pss_verify_ext(ra, a0, a2, a3, a4, a5, a7_10, s3, s10, s11, mstatus, 0xFFFFFFFF<32>, dwLoc1C, out a4_64, out a5_38, out a7_65, out s10_66, out s11_67, out mstatus_68)
	a5Out = a5_38
	return a0_36
mbedtls_rsa_rsassa_pss_verify_exit:


word32 mbedtls_rsa_rsassa_pkcs1_v15_verify(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_verify
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s6:[0..31] s7:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 sp
mbedtls_rsa_rsassa_pkcs1_v15_verify_entry:
l230584D8:
	branch a3 != 1<32> l23058512
l230584DE:
	branch Mem0[a0 + 164<i32>:int32] == 0<32> l23058512
l23058512:
	word32 a0_111
	branch Mem27[a0 + 4<i32>:int32] >u -1024<i32> l230584EE
l2305853E:
	word32 s3_101
	word32 s2_100
	word32 s1_141
	word32 s0_122
	word32 s4_102
	branch a3 != 0<32> l23058560
l23058560:
	word32 s11_648
	word32 mstatus_649
	word32 s10_647
	word32 s9_646
	word32 s5_643
	word32 s7_645
	word32 s6_644
	word32 a7_642
	word32 a4_641
	word32 a2_639
	word32 a3_640
	mbedtls_rsa_private(ra, a5, a2, a7, fp + -1056<i32>, a5, a4, a6, s6, s7, s10, s11, mstatus, dwLoc0438, dwLoc0428, dwLoc041C, dwLoc0418, dwLoc0408, dwLoc03E8, dwLoc03D8, dwLoc03C8, dwLoc03B8, dwLoc03A8, dwLoc0398, dwLoc038C, dwLoc0388, dwLoc0378, dwLoc036C, dwLoc0368, dwLoc0358, dwLoc0348, dwLoc033C, dwLoc0338, dwLoc0318, dwLoc0308, out s0_122, out s1_141, out a0_111, out a2_639, out a3_640, out a4_641, out a5, out a7_642, out s2_100, out s3_101, out s4_102, out s5_643, out s6_644, out s7_645, out s9_646, out s10_647, out s11_648, out mstatus_649)
l23058548:
	word32 a4_611
	word32 a7_612
	word32 a2_610
	mbedtls_rsa_public(ra, a7, a3, a4, a4, s11, mstatus, dwLoc041C, dwLoc03DC, dwLoc03A8, dwLoc0398, dwLoc0368, dwLoc0358, dwLoc0338, dwLoc0328, dwLoc0318, dwLoc02F8, out s0_122, out s1_141, out a0_111, out a2_610, out a4_611, out a5, out a7_612, out s2_100, out s3_101, out s4_102)
l23058550:
	branch a0_111 != 0<32> l230584F4
l23058552:
	a5 = CONVERT(bLoc0420, byte, word32)
	branch a5 == 0<32> l2305856A
l2305856A:
	a5 = 1<32>
	branch CONVERT(bLoc041F, byte, word32) != 1<32> l23058558
l2305857A:
	a5 = s4_102 + -1<i32> + s0_122
l23058584:
	word32 a4_129 = CONVERT(Mem126[a0_111:byte], byte, word32)
	branch a4_129 != 0<32> l230585B2
l230585B2:
	branch a0_111 >=u a5 l23058558
l230585B6:
	branch a4_129 != 255<i32> l23058558
l230585BA:
	a0_111 = a0_111 + 1<32>
l2305858C:
	word32 a0_134 = a0_111 + 1<32>
	word32 s0_139 = s4_102 - (a0_134 - s0_122)
	branch s0_139 != s1_141 l230585C0
l2305859C:
	branch s2_100 != 0<32> l230585C0
l230585C0:
	word32 a0_146 = mbedtls_md_info_from_type(s2_100, out a5)
	branch a0_146 == 0<32> l230584EE
l230584EE:
	a0_111 = 0xFBFFFF80<32>
l230585C8:
	word32 a0_150 = mbedtls_md_get_size(a0_146)
	word32 s1_158 = s1_141 + s0_139
	word32 a4_620
	word32 a3_619
	word32 a2_618
	word32 a1_617
	branch mbedtls_asn1_get_tag(s1_158, fp + -1076<i32>, 48<i32>, a5, out a1_617, out a2_618, out a3_619, out a4_620, out a5) != 0<32> l230585AA
l230585E2:
	a5 = a5 + 2<32>
	branch a5 + 2<32> != s0_139 l230585AA
l230585EA:
	word32 a4_624
	word32 a3_623
	word32 a1_621
	word32 a2_622
	branch mbedtls_asn1_get_tag(s1_158, fp + -1076<i32>, 48<i32>, a5 + 2<32>, out a1_621, out a2_622, out a3_623, out a4_624, out a5) != 0<32> l230585AA
l230585FA:
	a5 = a5 + 6<32> + a0_150
	branch a5 != s0_139 l230585AA
l23058604:
	word32 a2_192
	word32 a4_194
	word32 a3_626
	word32 a1_625
	branch mbedtls_asn1_get_tag(s1_158, fp + -1064<i32>, 6<32>, a5, out a1_625, out a2_192, out a3_626, out a4_194, out a5) != 0<32> l230585AA
l23058612:
	word32 a5_201 = a5 + a4_194
	byte bLoc0435_363 = SLICE(a5_201, byte, 24)
	word32 a0_203
	word32 s2_210
	word32 s1_209 = mbedtls_oid_get_md_alg(fp + -1068<i32>, fp + -1077<i32>, a2_192, a5_201, dwLoc0408, out a0_203, out s2_210)
	branch a0_203 != 0<32> l230585AA
l23058628:
	a5 = CONVERT(bLoc0435_363, byte, word32)
	branch a5 != s2_210 l230585AA
l23058630:
	word32 a4_630
	word32 a3_629
	word32 a2_628
	word32 a1_627
	branch mbedtls_asn1_get_tag(s1_209, fp + -1076<i32>, 5<32>, a5, out a1_627, out a2_628, out a3_629, out a4_630, out a5) != 0<32> l230585AA
l2305863E:
	word32 a4_634
	word32 a3_633
	word32 a2_632
	word32 a1_631
	word32 a0_228 = mbedtls_asn1_get_tag(s1_209, fp + -1076<i32>, 4<32>, a5, out a1_631, out a2_632, out a3_633, out a4_634, out a5)
	branch a0_228 != 0<32> l230585AA
l2305864C:
	branch a5 != a0_150 l230585AA
l23058652:
	word32 a4_638
	word32 a3_637
	word32 a2_636
	word32 a1_635
	a0_111 = memcmp(a0_228, s3_101, a0_150, out a1_635, out a2_636, out a3_637, out a4_638, out a5)
	branch a0_111 != 0<32> l230585AA
l2305865E:
	branch s1_209 == a0_150 + a5 l230584F4
l23058666:
l230585A0:
	word32 a4_616
	word32 a3_615
	word32 a2_614
	word32 a1_613
	a0_111 = memcmp(a0_134, s3_101, s1_141, out a1_613, out a2_614, out a3_615, out a4_616, out a5)
	branch a0_111 == 0<32> l230584F4
l230585AA:
	a0_111 = 0xFBFFFC80<32>
l23058558:
	a0_111 = 0xFBFFFF00<32>
l230584F4:
	a5Out = a5
	return a0_111
l230584E6:
	a5Out = a5
	return 0xFBFFFF80<32>
mbedtls_rsa_rsassa_pkcs1_v15_verify_exit:


word32 mbedtls_rsa_pkcs1_verify(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_verify_wrap
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s6:[0..31] s7:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_pkcs1_verify_entry:
l23058668:
	word32 t1_5 = Mem0[a0 + 164<i32>:int32]
	branch t1_5 == 0<32> l2305867E
l2305867E:
l2305867E_thunk_mbedtls_rsa_rsassa_pkcs1_v15_verify:
	word32 a5_25
	word32 a0_18 = mbedtls_rsa_rsassa_pkcs1_v15_verify(ra, a0, a2, a3, a4, a5, a6, a7, s6, s7, s10, s11, mstatus, out a5_25)
	a5Out = a5_25
	return a0_18
l23058670:
	branch t1_5 == 1<32> l23058682
l23058682:
l23058682_thunk_mbedtls_rsa_rsassa_pss_verify:
	word32 a5_48
	word32 a0_43 = mbedtls_rsa_rsassa_pss_verify(ra, a0, a2, a3, a4, a5, s3, s10, s11, mstatus, out a5_48)
	a5Out = a5_48
	return a0_43
l23058676:
	a5Out = a5
	return 0xFBFFFF00<32>
mbedtls_rsa_pkcs1_verify_exit:


word32 mbedtls_rsa_free(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg0138, word32 dwArg0148, word32 dwArg0178, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs1_der
//      rsa_free_wrap
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
mbedtls_rsa_free_entry:
l23058686:
	word32 a2_16
	word32 a5_17
	word32 a4_20
	word32 a0_183
	word32 a1_184
	word32 a3_185
	word32 a6_186
	word32 s4_187
	mbedtls_mpi_free(a0 + 140<i32>, a2, a4, a5, mstatus, dwArg0138, dwArg0178, out a0_183, out a1_184, out a2_16, out a3_185, out a4_20, out a5_17, out a6_186, out s4_187)
	word32 a2_28
	word32 a5_29
	word32 a4_32
	word32 a0_188
	word32 a1_189
	word32 a3_190
	word32 a6_191
	word32 s4_192
	mbedtls_mpi_free(a0 + 152<i32>, a2_16, a4_20, a5_17, mstatus, dwArg0138, dwArg0178, out a0_188, out a1_189, out a2_28, out a3_190, out a4_32, out a5_29, out a6_191, out s4_192)
	word32 a2_40
	word32 a5_41
	word32 a4_44
	word32 a0_193
	word32 a1_194
	word32 a3_195
	word32 a6_196
	word32 s4_197
	mbedtls_mpi_free(a0 + 128<i32>, a2_28, a4_32, a5_29, mstatus, dwArg0138, dwArg0178, out a0_193, out a1_194, out a2_40, out a3_195, out a4_44, out a5_41, out a6_196, out s4_197)
	word32 a2_52
	word32 a5_53
	word32 a4_56
	word32 a0_198
	word32 a1_199
	word32 a3_200
	word32 a6_201
	word32 s4_202
	mbedtls_mpi_free(a0 + 116<i32>, a2_40, a4_44, a5_41, mstatus, dwArg0138, dwArg0178, out a0_198, out a1_199, out a2_52, out a3_200, out a4_56, out a5_53, out a6_201, out s4_202)
	word32 a2_64
	word32 a5_65
	word32 a4_68
	word32 a0_203
	word32 a1_204
	word32 a3_205
	word32 a6_206
	word32 s4_207
	mbedtls_mpi_free(a0 + 104<i32>, a2_52, a4_56, a5_53, mstatus, dwArg0138, dwArg0178, out a0_203, out a1_204, out a2_64, out a3_205, out a4_68, out a5_65, out a6_206, out s4_207)
	word32 a2_76
	word32 a5_77
	word32 a4_80
	word32 a0_208
	word32 a1_209
	word32 a3_210
	word32 a6_211
	word32 s4_212
	mbedtls_mpi_free(a0 + 92<i32>, a2_64, a4_68, a5_65, mstatus, dwArg0138, dwArg0178, out a0_208, out a1_209, out a2_76, out a3_210, out a4_80, out a5_77, out a6_211, out s4_212)
	word32 a2_88
	word32 a5_89
	word32 a4_92
	word32 a0_213
	word32 a1_214
	word32 a3_215
	word32 a6_216
	word32 s4_217
	mbedtls_mpi_free(a0 + 80<i32>, a2_76, a4_80, a5_77, mstatus, dwArg0138, dwArg0178, out a0_213, out a1_214, out a2_88, out a3_215, out a4_92, out a5_89, out a6_216, out s4_217)
	word32 a2_100
	word32 a5_101
	word32 a4_104
	word32 a0_218
	word32 a1_219
	word32 a3_220
	word32 a6_221
	word32 s4_222
	mbedtls_mpi_free(a0 + 68<i32>, a2_88, a4_92, a5_89, mstatus, dwArg0138, dwArg0178, out a0_218, out a1_219, out a2_100, out a3_220, out a4_104, out a5_101, out a6_221, out s4_222)
	word32 a2_112
	word32 a5_113
	word32 a4_116
	word32 a0_223
	word32 a1_224
	word32 a3_225
	word32 a6_226
	word32 s4_227
	mbedtls_mpi_free(a0 + 56<i32>, a2_100, a4_104, a5_101, mstatus, dwArg0138, dwArg0178, out a0_223, out a1_224, out a2_112, out a3_225, out a4_116, out a5_113, out a6_226, out s4_227)
	word32 a2_124
	word32 a5_125
	word32 a4_128
	word32 a0_228
	word32 a1_229
	word32 a3_230
	word32 a6_231
	word32 s4_232
	mbedtls_mpi_free(a0 + 44<i32>, a2_112, a4_116, a5_113, mstatus, dwArg0138, dwArg0178, out a0_228, out a1_229, out a2_124, out a3_230, out a4_128, out a5_125, out a6_231, out s4_232)
	word32 a2_136
	word32 a5_137
	word32 a4_140
	word32 a0_233
	word32 a1_234
	word32 a3_235
	word32 a6_236
	word32 s4_237
	mbedtls_mpi_free(a0 + 32<i32>, a2_124, a4_128, a5_125, mstatus, dwArg0138, dwArg0178, out a0_233, out a1_234, out a2_136, out a3_235, out a4_140, out a5_137, out a6_236, out s4_237)
	word32 a5_149
	word32 a4_152
	word32 a0_238
	word32 a1_239
	word32 a2_240
	word32 a3_241
	word32 a6_242
	word32 s4_243
	mbedtls_mpi_free(a0 + 20<i32>, a2_136, a4_140, a5_137, mstatus, dwArg0138, dwArg0178, out a0_238, out a1_239, out a2_240, out a3_241, out a4_152, out a5_149, out a6_242, out s4_243)
l230586F8_thunk_mbedtls_mpi_free:
	word32 a5_164
	word32 a3_166
	word32 a4_167
	word32 a0_244
	word32 a1_245
	word32 a2_246
	word32 a6_247
	word32 s4_248
	word32 s1_169 = mbedtls_mpi_free(a0 + 8<i32>, dwArg10, a4_152, a5_149, mstatus, dwArg0148, dwArg0188, out a0_244, out a1_245, out a2_246, out a3_166, out a4_167, out a5_164, out a6_247, out s4_248)
	a3Out = a3_166
	a4Out = a4_167
	a5Out = a5_164
	return s1_169
mbedtls_rsa_free_exit:


word32 mbedtls_sha256_init(word32 ra, word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_calc_finished_tls_sha256
//      ssl_calc_verify_tls_sha256
//      mbedtls_ssl_setup
//      sha224_ctx_alloc
//      sha256_wrap
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_sha256_init_entry:
l230586FC:
l23058702_thunk_memset:
	word32 a3_10
	word32 a4_11
	word32 a5_12
	word32 t1_19
	word32 a0_20
	word32 a1_21
	word32 a2_22
	word32 ra_13 = memset(ra, a0, 0<32>, 116<i32>, out t1_19, out a0_20, out a1_21, out a2_22, out a3_10, out a4_11, out a5_12)
	a3Out = a3_10
	a4Out = a4_11
	a5Out = a5_12
	return ra_13
mbedtls_sha256_init_exit:


word32 mbedtls_sha256_free(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_calc_finished_tls_sha256
//      ssl_calc_verify_tls_sha256
//      mbedtls_ssl_handshake_free
//      sha224_ctx_free
//      sha256_wrap
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_sha256_free_entry:
l23058706:
	word32 a0_5
	a0_5 = a0
	a0_5 = a0
	branch a0 != 0<32> l23058714
l23058714:
	branch a0_5 != a0 + 116<i32> l2305870E
l2305870E:
	Mem7[a0_5:byte] = 0<8>
	a0_5 = a0_5 + 1<32>
l23058718:
l2305870C:
	a5Out = a0 + 116<i32>
	return a0_5
mbedtls_sha256_free_exit:


word32 mbedtls_sha256_clone(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_calc_finished_tls_sha256
//      ssl_calc_verify_tls_sha256
//      sha224_clone_wrap
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a2
// Trashed: a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
mbedtls_sha256_clone_entry:
l2305871A:
	word32 a1_26
	word32 a2_27
	word32 a3_28
	word32 a4_29
	word32 a5_30
	word32 a6_31
	word32 a7_32
	memcpy(a0, a1, 116<i32>, out a1_26, out a2_27, out a3_28, out a4_29, out a5_30, out a6_31, out a7_32)
	return dwArg10
mbedtls_sha256_clone_exit:


word32 mbedtls_sha256_starts(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_entropy_init
//      mbedtls_entropy_func
//      mbedtls_ssl_reset_checksum
//      mbedtls_ssl_setup
//      sha256_wrap
//      sha224_starts_wrap
//      sha256_starts_wrap
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
mbedtls_sha256_starts_entry:
l2305872C:
	word32 a5_29
	Mem4[a0:word32] = 0<32>
	Mem5[a0 + 4<i32>:word32] = 0<32>
	branch a1 != 0<32> l2305878A
l2305878A:
	Mem9[0xC1059EE0<32>:word32] = a0
	Mem12[0x367CD513<32>:word32] = a0
	Mem15[0x3070DD27<32>:word32] = a0
	Mem18[0xF70E594D<32>:word32] = a0
	Mem21[0xFFC00B49<32>:word32] = a0
	Mem24[0x6858152D<32>:word32] = a0
	Mem27[0x64F98FC7<32>:word32] = a0
	a5_29 = 0xBEFA4FA4<32>
l23058736:
	Mem32[0x6A09E66F<32>:word32] = a0
	Mem35[0xBB67AE91<32>:word32] = a0
	Mem38[0x3C6EF382<32>:word32] = a0
	Mem41[0xA54FF54E<32>:word32] = a0
	Mem44[0x510E5297<32>:word32] = a0
	Mem47[0x9B0568A8<32>:word32] = a0
	Mem50[0x1F83D9CB<32>:word32] = a0
	a5_29 = 0x5BE0CD19<32>
l23058784:
	Mem55[a5_29 + 36<i32>:word32] = a0
	Mem57[a1 + 104<i32>:word32] = a0
	return a5_29
mbedtls_sha256_starts_exit:


void mbedtls_sha256_process(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha224_process_wrap
//      sha224_update_wrap
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 s1 s2 s3 s4 s5 s6 s7 s8 sp
mbedtls_sha256_process_entry:
l230587DA:
	word32 s2_9 = a0 + 8<i32>
	word32 s3_10 = fp + -336<i32>
	word32 a4_26 = fp + -336<i32>
l2305880E:
	word32 a5_30 = Mem29[a3:word32]
	a4_26 = a4_26 + 4<32>
	Mem34[a4_26 + 4092<i32>:word32] = a3
	branch a0 + 40<i32> != a5_30 + 4<32> l2305880E
l2305881C:
	word32 a4_41 = fp + -304<i32>
	a1_42 = a1
l23058826:
	word32 a1_42
	a1_42 = a1_42 + 4<32>
	a4_41 = a4_41 + 4<32>
	Mem57[a4_41 + 4092<i32>:word32] = CONVERT(Mem43[a1_42:byte], byte, word32) << 24<i32> | CONVERT(Mem43[a1_42 + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem43[a1_42 + -1<i32>:byte], byte, word32) | CONVERT(Mem43[a1_42 + -2<i32>:byte], byte, word32) << 8<i32>
	branch a1 + 64<i32> != a1_42 l23058826
l2305884E:
	0<32> = dwLocCC
	word32 t3_401 = dwLoc0148
	word32 t4_71 = 0x23088D04<32>
l23058870:
	t4_71 = t4_71 + 32<i32>
	branch t4_71 != 0x23088D44<32> l23058870
l23058CCC:
l23058CE0:
	word32 s5_403 = Mem402[t3_401 + 56<i32>:int32]
	word32 t5_404 = Mem402[t3_401 + 4<i32>:int32]
	word32 s6_405 = Mem402[t3_401 + 60<i32>:int32]
	word32 t6_486 = Mem402[t3_401 + 8<i32>:int32]
	word32 t4_429 = ((s5_403 << 0xF<u32> | s5_403 >>u 0x11<u32>) ^ (s5_403 << 0xD<u32> | s5_403 >>u 0x13<u32>) ^ s5_403 >>u 0xA<u32>) + (Mem402[t3_401 + 36<i32>:int32] + Mem402[t3_401:int32]) + (((t5_404 >>u 7<u32> | t5_404 << 0x19<u32>) ^ (t5_404 << 0xE<u32> | t5_404 >>u 0x12<u32>)) ^ t5_404 >>u 3<u32>)
	word32 s7_452 = Mem402[t3_401 + 12<i32>:int32]
	word32 s0_498 = ((s6_405 << 0xF<u32> | s6_405 >>u 0x11<u32>) ^ (s6_405 << 0xD<u32> | s6_405 >>u 0x13<u32>) ^ s6_405 >>u 0xA<u32>) + (t5_404 + Mem402[t3_401 + 40<i32>:int32]) + (((t6_486 >>u 7<u32> | t6_486 << 0x19<u32>) ^ (t6_486 << 0xE<u32> | t6_486 >>u 0x12<u32>)) ^ t6_486 >>u 3<u32>)
	word32 t2_558 = ((t4_429 << 0xF<u32> | t4_429 >>u 0x11<u32>) ^ (t4_429 << 0xD<u32> | t4_429 >>u 0x13<u32>) ^ t4_429 >>u 0xA<u32>) + (t6_486 + Mem402[t3_401 + 44<i32>:int32]) + (((s7_452 >>u 7<u32> | s7_452 << 0x19<u32>) ^ (s7_452 << 0xE<u32> | s7_452 >>u 0x12<u32>)) ^ s7_452 >>u 3<u32>)
	Mem600[t3_401 + 68<i32>:word32] = s0_498
	word32 t5_606 = Mem600[t3_401 + 16<i32>:int32]
	word32 t0_619 = ((s0_498 << 0xF<u32> | s0_498 >>u 0x11<u32>) ^ (s0_498 << 0xD<u32> | s0_498 >>u 0x13<u32>) ^ s0_498 >>u 10<i32>) + (s7_452 + Mem600[t3_401 + 48<i32>:int32]) + (((t5_606 >>u 7<u32> | t5_606 << 0x19<u32>) ^ (t5_606 << 0xE<u32> | t5_606 >>u 0x12<u32>)) ^ t5_606 >>u 3<u32>)
	Mem663[t3_401 + 72<i32>:word32] = t2_558
	word32 s7_667 = Mem663[t3_401 + 20<i32>:int32]
	word32 t6_681 = ((t2_558 << 0xF<u32> | t2_558 >>u 0x11<u32>) ^ (t2_558 << 0xD<u32> | t2_558 >>u 0x13<u32>) ^ t2_558 >>u 0xA<u32>) + (t5_606 + Mem663[t3_401 + 52<i32>:int32]) + (((s7_667 >>u 7<u32> | s7_667 << 0x19<u32>) ^ (s7_667 << 0xE<u32> | s7_667 >>u 0x12<u32>)) ^ s7_667 >>u 3<u32>)
	word32 s0_720 = Mem663[t3_401 + 24<i32>:int32]
	Mem724[t3_401 + 76<i32>:word32] = t0_619
	word32 t0_783 = Mem724[t3_401 + 28<i32>:int32]
	Mem785[t3_401 + 80<i32>:word32] = t6_681
	word32 t5_740 = ((t0_619 << 0xF<u32> | t0_619 >>u 0x11<u32>) ^ (t0_619 << 0xD<u32> | t0_619 >>u 0x13<u32>) ^ t0_619 >>u 0xA<u32>) + (s5_403 + s7_667) + (((s0_720 >>u 7<u32> | s0_720 << 0x19<u32>) ^ (s0_720 << 0xE<u32> | s0_720 >>u 0x12<u32>)) ^ s0_720 >>u 3<u32>)
	word32 t2_842 = Mem785[t3_401 + 32<i32>:int32]
	Mem844[t3_401 + 84<i32>:word32] = t5_740
	Mem848[t3_401 + 64<i32>:word32] = t4_429
	Mem868[t3_401 + 92<i32>:word32] = t4_429 + t0_783 + (((t5_740 << 0xF<u32> | t5_740 >>u 0x11<u32>) ^ (t5_740 << 0xD<u32> | t5_740 >>u 0x13<u32>)) ^ t5_740 >>u 0xA<u32>) + (((t2_842 >>u 7<u32> | t2_842 << 0x19<u32>) ^ (t2_842 << 0xE<u32> | t2_842 >>u 0x12<u32>)) ^ t2_842 >>u 3<u32>)
	Mem896[t3_401 + 88<i32>:word32] = s6_405 + s0_720 + (((t6_681 << 0xF<u32> | t6_681 >>u 0x11<u32>) ^ (t6_681 << 0xD<u32> | t6_681 >>u 0x13<u32>)) ^ t6_681 >>u 0xA<u32>) + (((t0_783 >>u 7<u32> | t0_783 << 0x19<u32>) ^ (t0_783 << 0xE<u32> | t0_783 >>u 0x12<u32>)) ^ t0_783 >>u 3<u32>)
	t3_401 = t3_401 + 32<i32>
	branch dwLoc0148 + 192<i32> != t3_401 l23058CE0
l230593F0:
l23059400:
	s2_9 = s2_9 + 4<32>
	Mem920[s2_9 + 4092<i32>:word32] = Mem913[s2_9:int32] + Mem913[s3_10:int32]
	s3_10 = s3_10 + 4<32>
	branch a0 + 40<i32> != s2_9 l23059400
l23059416:
	return
mbedtls_sha256_process_exit:


word32 mbedtls_sha256_update.part.0(word32 a1, word32 a2, word32 a5, word32 dwArg48, word32 dwArgA8, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_sha256_update
//      sha224_finish_wrap
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31]
// LiveOut: a1 a4 a5 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_sha256_update.part.0_entry:
l2305943E:
	word32 a0_21 = Mem19[a5:word32]
	word32 a5_27 = a5 + a2
	Mem28[a5_27:word32] = a0_21
	word32 s2_24 = a1
	word32 s3_104 = a5 & 63<i32>
	word32 s0_29 = a2
	branch a5_27 >=u a2 l2305946A
l23059464:
	Mem32[a5_27 + 5<32>:word32] = Mem28[a5_27 + 4<i32>:word32]
l2305946A:
	branch (a5 & 63<i32>) == 0<32> l2305949C
l2305946E:
	word32 s4_35 = 64<i32> - (a5 & 63<i32>)
	branch a2 <u s4_35 l2305949C
l2305947A:
	word32 a7_232
	word32 a6_231
	word32 a5_230
	word32 a3_229
	word32 a1_227
	word32 a2_228
	memcpy(a0_21 + 40<i32> + (a5 & 63<i32>), a1, s4_35, out a1_227, out a2_228, out a3_229, out a4, out a5_230, out a6_231, out a7_232)
	mbedtls_sha256_process(a0, a1, a3)
	s0_29 = a2 + -64<i32> + (a5 & 63<i32>)
	s2_24 = a1 + s4_35
	s3_104 = 0<32>
l2305949C:
	word32 s4_63 = s0_29
l230594B2:
	branch s4_63 >u 63<i32> l230594A8
l230594A8:
	mbedtls_sha256_process(a0, a1, a3)
	s4_63 = s4_63 + -64<i32>
l230594BA:
	word32 a2_75 = s0_29 >>u 6<u32>
	word32 a1_80 = (a2_75 << 6<u32>) + s2_24
	branch a2_75 + -64<i32> + s0_29 == 0<32> l230594EC
l230594EC:
	0<32> = dwArgA8
	s1Out = <invalid>
	a1Out = a1_80
	a4Out = a4
	a5Out = -64<i32>
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	return <invalid>
l230594D0:
	0<32> = dwArgA8
	word32 a0_105 = a0_21 + 40<i32> + s3_104
l230594E8_thunk_memcpy:
	word32 a2_234
	word32 a3_235
	word32 a4_108
	word32 a5_109
	word32 a1_111
	word32 a6_236
	word32 a7_237
	memcpy(a0_105, a1_80, dwArg48, out a1_111, out a2_234, out a3_235, out a4_108, out a5_109, out a6_236, out a7_237)
	s1Out = <invalid>
	a1Out = a1_111
	a4Out = a4_108
	a5Out = a5_109
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	return <invalid>
mbedtls_sha256_update.part.0_exit:


word32 mbedtls_sha256_update(word32 a1, word32 a2, word32 a5, word32 dwArg48, word32 dwArgA8, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      entropy_update
//      mbedtls_entropy_func
//      ssl_update_checksum_sha256
//      sha256_wrap
//      sha224_finish_wrap
//      sha224_update_wrap
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31]
// LiveOut: a1 a4 a5 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_sha256_update_entry:
l23059500:
	branch a2 == 0<32> l23059506
l23059506:
	s1Out = s1
	a1Out = a1
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return s0
l23059502:
l23059502_thunk_mbedtls_sha256_update.part.0:
	word32 a1_8
	word32 a5_10
	word32 s1_13
	word32 s2_14
	word32 s3_15
	word32 s4_16
	word32 s5_17
	word32 a4_23
	word32 s0_12 = mbedtls_sha256_update.part.0(a1, a2, a5, dwArg48, dwArgA8, out s1_13, out a1_8, out a4_23, out a5_10, out s2_14, out s3_15, out s4_16, out s5_17)
	s1Out = s1_13
	a1Out = a1_8
	a4Out = a4_23
	a5Out = a5_10
	s2Out = s2_14
	s3Out = s3_15
	s4Out = s4_16
	s5Out = s5_17
	return s0_12
mbedtls_sha256_update_exit:


word32 mbedtls_sha256_finish(word32 a2, word32 dwArg28, word32 dwArg88, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_entropy_func
//      ssl_calc_finished_tls_sha256
//      ssl_calc_verify_tls_sha256
//      sha256_wrap
//      sha224_finish_wrap
// MayUse:  a2:[0..31] Stack +0028:[0..31] Stack +0088:[0..31]
// LiveOut: a5 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_sha256_finish_entry:
l23059508:
	word32 a5_43
	branch (a2 & 63<i32>) >u 55<i32> l2305968E
l2305968E:
	a5_43 = 120<i32>
l23059570:
	a5_43 = 56<i32>
l23059574:
	word32 a5_59
	word32 s4_235
	word32 s5_236
	word32 s3_234
	word32 s2_233
	word32 a4_232
	word32 a1_231
	word32 s1_230
	mbedtls_sha256_update(0x23088E04<32>, a5_43 - (a2 & 63<i32>), a5_43, dwArg28, dwArg88, out s1_230, out a1_231, out a4_232, out a5_59, out s2_233, out s3_234, out s4_235, out s5_236)
	word32 s1_86
	word32 s2_87
	word32 s3_88
	word32 s5_90
	word32 a1_237
	word32 a5_239
	word32 a4_238
	word32 s4_240
	word32 s0_85 = mbedtls_sha256_update.part.0(fp + 0xFFFFFFE8<32>, 8<32>, a5_59, dwArg28, dwArg88, out s1_86, out a1_237, out a4_238, out a5_239, out s2_87, out s3_88, out s4_240, out s5_90)
	Mem104[s1_86:byte] = SLICE(CONVERT(Mem38[s0_85 + 11<i32>:byte], byte, word32), byte, 0)
	word32 a5_105 = CONVERT(Mem104[s0_85 + 10<i32>:uint16], uint16, word32)
	Mem106[s1_86 + 1<i32>:byte] = SLICE(a5_105, byte, 0)
	Mem109[s1_86 + 2<i32>:byte] = SLICE(a5_105 >>u 8<i32>, byte, 0)
	word32 s0_110 = Mem109[(a5_105 >>u 8<i32>) + 8<i32>:word32]
	Mem111[s1_86 + 3<i32>:byte] = SLICE(a5_105 >>u 8<i32>, byte, 0)
	Mem113[s1_86 + 4<i32>:byte] = SLICE(CONVERT(Mem111[s0_110 + 15<i32>:byte], byte, word32), byte, 0)
	word32 a5_114 = CONVERT(Mem113[s0_110 + 14<i32>:uint16], uint16, word32)
	Mem115[s1_86 + 5<i32>:byte] = SLICE(a5_114, byte, 0)
	Mem118[s1_86 + 6<i32>:byte] = SLICE(a5_114 >>u 8<i32>, byte, 0)
	word32 s0_119 = Mem118[(a5_114 >>u 8<i32>) + 12<i32>:word32]
	Mem120[s1_86 + 7<i32>:byte] = SLICE(a5_114 >>u 8<i32>, byte, 0)
	Mem122[s1_86 + 8<i32>:byte] = SLICE(CONVERT(Mem120[s0_119 + 19<i32>:byte], byte, word32), byte, 0)
	word32 a5_123 = CONVERT(Mem122[s0_119 + 18<i32>:uint16], uint16, word32)
	Mem124[s1_86 + 9<i32>:byte] = SLICE(a5_123, byte, 0)
	Mem127[s1_86 + 10<i32>:byte] = SLICE(a5_123 >>u 8<i32>, byte, 0)
	word32 s0_128 = Mem127[(a5_123 >>u 8<i32>) + 16<i32>:word32]
	Mem129[s1_86 + 11<i32>:byte] = SLICE(a5_123 >>u 8<i32>, byte, 0)
	Mem131[s1_86 + 12<i32>:byte] = SLICE(CONVERT(Mem129[s0_128 + 23<i32>:byte], byte, word32), byte, 0)
	word32 a5_132 = CONVERT(Mem131[s0_128 + 22<i32>:uint16], uint16, word32)
	Mem133[s1_86 + 13<i32>:byte] = SLICE(a5_132, byte, 0)
	Mem136[s1_86 + 14<i32>:byte] = SLICE(a5_132 >>u 8<i32>, byte, 0)
	word32 s0_137 = Mem136[(a5_132 >>u 8<i32>) + 20<i32>:word32]
	Mem138[s1_86 + 15<i32>:byte] = SLICE(a5_132 >>u 8<i32>, byte, 0)
	Mem140[s1_86 + 16<i32>:byte] = SLICE(CONVERT(Mem138[s0_137 + 27<i32>:byte], byte, word32), byte, 0)
	word32 a5_141 = CONVERT(Mem140[s0_137 + 26<i32>:uint16], uint16, word32)
	Mem142[s1_86 + 17<i32>:byte] = SLICE(a5_141, byte, 0)
	Mem145[s1_86 + 18<i32>:byte] = SLICE(a5_141 >>u 8<i32>, byte, 0)
	word32 s0_146 = Mem145[(a5_141 >>u 8<i32>) + 24<i32>:word32]
	Mem147[s1_86 + 19<i32>:byte] = SLICE(a5_141 >>u 8<i32>, byte, 0)
	Mem149[s1_86 + 20<i32>:byte] = SLICE(CONVERT(Mem147[s0_146 + 31<i32>:byte], byte, word32), byte, 0)
	word32 a5_150 = CONVERT(Mem149[s0_146 + 30<i32>:uint16], uint16, word32)
	Mem151[s1_86 + 21<i32>:byte] = SLICE(a5_150, byte, 0)
	Mem154[s1_86 + 22<i32>:byte] = SLICE(a5_150 >>u 8<i32>, byte, 0)
	word32 s0_155 = Mem154[(a5_150 >>u 8<i32>) + 28<i32>:word32]
	Mem156[s1_86 + 23<i32>:byte] = SLICE(a5_150 >>u 8<i32>, byte, 0)
	Mem158[s1_86 + 24<i32>:byte] = SLICE(CONVERT(Mem156[s0_155 + 35<i32>:byte], byte, word32), byte, 0)
	word32 a5_159 = CONVERT(Mem158[s0_155 + 34<i32>:uint16], uint16, word32)
	Mem160[s1_86 + 25<i32>:byte] = SLICE(a5_159, byte, 0)
	Mem163[s1_86 + 26<i32>:byte] = SLICE(a5_159 >>u 8<i32>, byte, 0)
	Mem165[s1_86 + 27<i32>:byte] = SLICE(a5_159 >>u 8<i32>, byte, 0)
	word32 a5_162 = a5_159 >>u 8<i32>
	word32 s0_166 = Mem165[(a5_159 >>u 8<i32>) + 104<i32>:word32]
	branch a5_159 >>u 8<i32> != 0<32> l23059684
l23059666:
	Mem168[s1_86 + 28<i32>:byte] = SLICE(CONVERT(Mem165[s0_166 + 39<i32>:byte], byte, word32), byte, 0)
	word32 a5_169 = CONVERT(Mem168[s0_166 + 38<i32>:uint16], uint16, word32)
	Mem170[s1_86 + 29<i32>:byte] = SLICE(a5_169, byte, 0)
	Mem173[s1_86 + 30<i32>:byte] = SLICE(a5_169 >>u 8<i32>, byte, 0)
	s0_166 = Mem173[(a5_169 >>u 8<i32>) + 36<i32>:word32]
	Mem175[s1_86 + 31<i32>:byte] = SLICE(a5_169 >>u 8<i32>, byte, 0)
	a5_162 = a5_169 >>u 8<i32>
l23059684:
	s1Out = s1_86
	a5Out = a5_162
	s2Out = s2_87
	s3Out = s3_88
	s4Out = dwArg04
	s5Out = s5_90
	return s0_166
mbedtls_sha256_finish_exit:


word32 mbedtls_sha256(word32 ra, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      entropy_update
//      mbedtls_entropy_func
//      sha224_wrap
//      sha256_wrap
// MayUse:  ra:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s10 s6 t0 t1 t5
// Preserved: s2 sp
mbedtls_sha256_entry:
l23059694:
	word32 a3_24
	word32 a4_25
	word32 a5_57
	mbedtls_sha256_init(ra, fp + -132<i32>, out a3_24, out a4_25, out a5_57)
	mbedtls_sha256_starts(fp + -132<i32>, a3_24)
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg72 = <invalid>
	word32 stackArg168 = <invalid>
	word32 s1_61
	word32 a1_62
	word32 a4_63
	word32 a5_64
	word32 s2_65
	word32 s3_66
	word32 s4_67
	word32 s5_68
	mbedtls_sha256_update(a1, a2, a5, stackArg72, stackArg168, out s1_61, out a1_62, out a4_63, out a5_64, out s2_65, out s3_66, out s4_67, out s5_68)
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg40 = <invalid>
	word32 stackArg136 = <invalid>
	word32 s1_71
	word32 a5_72
	word32 s2_73
	word32 s3_74
	word32 s4_75
	word32 s5_76
	mbedtls_sha256_finish(a2, stackArg40, stackArg136, out s1_71, out a5_72, out s2_73, out s3_74, out s4_75, out s5_76)
	word32 a5_41
	mbedtls_sha256_free(fp + -132<i32>, out a5_41)
	a5Out = a5_41
	return a4_25
mbedtls_sha256_exit:


word32 mbedtls_ssl_own_cert(word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_write_certificate
// MayUse:  a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_own_cert_entry:
l230596DA:
	branch a5 == 0<32> l230596E2
l230596DE:
	a5 = Mem0[a5 + 8<i32>:word32]
	branch a5 != 0<32> l230596E8
l230596E2:
	a5 = Mem0[a5 + 76<i32>:word32]
	branch a5 == 0<32> l230596EA
l230596E8:
	a5 = Mem0[a5:word32]
l230596EA:
	a5Out = a5
	return a5
mbedtls_ssl_own_cert_exit:


word32 mbedtls_zeroize(word32 a0, word32 a1, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_calc_finished_tls_sha256
//      tls_prf_sha256
//      mbedtls_ssl_derive_keys
//      mbedtls_ssl_transform_free
//      mbedtls_ssl_handshake_free
//      mbedtls_ssl_session_free
//      mbedtls_ssl_free
//      mbedtls_ssl_config_free
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1
// Preserved: sp
mbedtls_zeroize_entry:
l230596EE:
	word32 a1_5 = a1 + a0
l230596F0:
	branch a0 != a1_5 l230596F6
l230596F6:
	Mem8[a0:byte] = 0<8>
	a0 = a0 + 1<32>
l230596F4:
	a1Out = a1_5
	return a0
mbedtls_zeroize_exit:


word32 ssl_swap_epochs(word32 ra, word32 a4, word32 a5, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_resend
// MayUse:  a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a1 a2 a3 a4 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
ssl_swap_epochs_entry:
l230596FE:
	word32 a5_102
	word32 a4_101
	word32 a3_100
	word32 a2_115
	word32 a1_114
	word32 a0_11 = Mem7[a4 + 56<i32>:word32]
	word32 a5_13 = Mem7[a5 + 68<i32>:word32]
	branch a4 != a5_13 l23059732
l23059732:
	word32 a3_25
	word32 a4_26
	word32 s10_203
	word32 s11_204
	word32 s9_202
	word32 s8_201
	word32 s7_200
	word32 s6_199
	word32 s5_198
	word32 s4_197
	word32 a7_196
	word32 a5_195
	word32 a2_194
	word32 a1_193
	word32 t4_205
	mbedtls_debug_print_msg(ra, a0_11, 3<32>, 0x2308A380<32>, a5_13, out a1_193, out a2_194, out a3_25, out a4_26, out a5_195, out a7_196, out s4_197, out s5_198, out s6_199, out s7_200, out s8_201, out s9_202, out s10_203, out s11_204, out t4_205)
	word32 s0_41 = Mem7[a4_26 + 56<i32>:word32]
	word32 a5_43 = Mem7[a3_25 + 68<i32>:word32]
	Mem45[a3_25 + 56<i32>:word32] = s0_41
	Mem46[a4_26 + 68<i32>:word32] = a5_43
	word32 a1_51
	word32 a2_206
	word32 a3_207
	word32 a4_208
	word32 a5_209
	word32 a6_210
	word32 a7_211
	memcpy(fp + 0xFFFFFFE8<32>, Mem46[s0_41 + 144<i32>:int32], 8<32>, out a1_51, out a2_206, out a3_207, out a4_208, out a5_209, out a6_210, out a7_211)
	word32 a0_62 = Mem46[Mem46[a1_51 + 48<i32>:word32] + 144<i32>:int32]
	word32 a1_212
	word32 a2_213
	word32 a3_214
	word32 a4_215
	word32 a5_216
	word32 a6_217
	word32 a7_218
	memcpy(a0_62, a1_51 + 72<i32>, 8<32>, out a1_212, out a2_213, out a3_214, out a4_215, out a5_216, out a6_217, out a7_218)
	word32 a5_219
	word32 a6_220
	word32 a7_221
	memcpy(a0_62 + 72<i32>, fp + 0xFFFFFFE8<32>, 8<32>, out a1_114, out a2_115, out a3_100, out a4_101, out a5_219, out a6_220, out a7_221)
	s0 = Mem46[a3_100 + 56<i32>:word32]
	a5_102 = Mem46[s0 + 156<i32>:int32]
	branch a3_100 == 0<32> l23059798
l23059788:
	s0 = Mem46[a2_115 + 12<i32>:word32]
	a4_101 = 1<32>
	branch a2_115 <= 1<32> l23059798
l23059790:
	a3_100 = Mem46[Mem46[0xD<32>:word32] + 16<i32>:word32]
	a4_101 = 1<32> - a3_100
	a5_102 = a5_102 + a4_101
l23059798:
	Mem105[s0 + 160<i32>:word32] = a5_102
l23059712:
	word32 a7_222
	word32 s4_223
	word32 s5_224
	word32 s6_225
	word32 s7_226
	word32 s8_227
	word32 s9_228
	word32 s10_229
	word32 s11_230
	word32 t4_231
	mbedtls_debug_print_msg(ra, a0_11, 3<32>, 0x2308A364<32>, a5_13, out a1_114, out a2_115, out a3_100, out a4_101, out a5_102, out a7_222, out s4_223, out s5_224, out s6_225, out s7_226, out s8_227, out s9_228, out s10_229, out s11_230, out t4_231)
l2305972A:
	a1Out = a1_114
	a2Out = a2_115
	a3Out = a3_100
	a4Out = a4_101
	a5Out = a5_102
	return s0
ssl_swap_epochs_exit:


void ssl_calc_finished_tls_sha256(word32 ra, word32 s1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ssl_calc_finished_tls_sha256_entry:
l2305979E:
	word32 a0_18 = Mem17[s1 + 44<i32>:word32]
	branch s1 != 0<32> l230597BA
l230597B8:
l230597BA:
	word32 a2_102
	word32 a5_33
	word32 a3_270
	word32 a4_271
	word32 ra_34 = mbedtls_sha256_init(ra, fp + -148<i32>, out a3_270, out a4_271, out a5_33)
	word32 a1_48
	word32 s5_56
	word32 s11_283
	word32 s10_282
	word32 s8_280
	word32 s9_281
	word32 s6_278
	word32 s7_279
	word32 a7_276
	word32 s4_277
	word32 a4_274
	word32 a5_275
	word32 a2_272
	word32 a3_273
	word32 t4_284
	mbedtls_debug_print_msg(ra_34, a0_18, 2<32>, 0x2308A238<32>, a5_33, out a1_48, out a2_272, out a3_273, out a4_274, out a5_275, out a7_276, out s4_277, out s5_56, out s6_278, out s7_279, out s8_280, out s9_281, out s10_282, out s11_283, out t4_284)
	mbedtls_sha256_clone(fp + -148<i32>, a1_48 + 80<i32>)
	word32 a1_285
	word32 a2_286
	word32 a3_287
	word32 a4_288
	word32 a5_289
	word32 a7_290
	mbedtls_debug_print_buf(ra_34, 4<32>, fp + -140<i32>, out a1_285, out a2_286, out a3_287, out a4_288, out a5_289, out a7_290)
	branch s5_56 == 0<32> l23059892
l23059892:
	a2_102 = 0x2308A218<32>
l2305980C:
	a2_102 = 0x2308A228<32>
l23059814:
	word32 a5_115
	word32 s1_119
	word32 s2_120
	word32 s3_121
	word32 s4_122
	word32 s5_123
	mbedtls_sha256_finish(a2_102, dwLocA8, dwLoc48, out s1_119, out a5_115, out s2_120, out s3_121, out s4_122, out s5_123)
	word32 s0_144
	word32 s3_145
	word32 ra_147
	call Mem109[a5_115 + 208<i32>:int32] (retsize: 0;)
		uses: a0:s1_119 + 44<i32>,a1:48<i32>,a2:a2_108,a3:fp + -180<i32>,a4:32<i32>,a5:s3_121,a6:0xC<32>,ra:ra_34,s0:Mem109[a5_115 + 48<i32>:word32],s1:s1_119,s2:s2_120,s3:s3_121,s4:s4_122,s5:s5_123,Stack +0028:dwLocA8,Stack +0088:dwLoc48
		defs: ra:ra_147,s0:s0_144,s3:s3_145
	word32 a1_291
	word32 a2_292
	word32 a3_293
	word32 a4_294
	word32 a5_295
	word32 a7_296
	mbedtls_debug_print_buf(ra_147, 3<32>, s3_145, out a1_291, out a2_292, out a3_293, out a4_294, out a5_295, out a7_296)
	word32 a5_196
	mbedtls_sha256_free(fp - 148<i32>, out a5_196)
	word32 a1_297
	mbedtls_zeroize(fp - 180<i32>, 32<i32>, out a1_297)
	word32 a1_298
	word32 a2_299
	word32 a3_300
	word32 a4_301
	word32 a5_302
	word32 a7_303
	word32 s4_304
	word32 s5_305
	word32 s6_306
	word32 s7_307
	word32 s8_308
	word32 s9_309
	word32 s10_310
	word32 s11_311
	word32 t4_312
	mbedtls_debug_print_msg(ra_147, s0_144, 2<32>, 0x2308A284<32>, a5_196, out a1_298, out a2_299, out a3_300, out a4_301, out a5_302, out a7_303, out s4_304, out s5_305, out s6_306, out s7_307, out s8_308, out s9_309, out s10_310, out s11_311, out t4_312)
	return
ssl_calc_finished_tls_sha256_exit:


void ssl_calc_verify_tls_sha256(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ssl_calc_verify_tls_sha256_entry:
l2305989C:
	word32 a5_22
	word32 a3_155
	word32 a4_156
	word32 ra_23 = mbedtls_sha256_init(ra, fp + -132<i32>, out a3_155, out a4_156, out a5_22)
	word32 a1_35
	word32 a2_157
	word32 a3_158
	word32 a4_159
	word32 a5_160
	word32 a7_161
	word32 s4_162
	word32 s5_163
	word32 s6_164
	word32 s7_165
	word32 s8_166
	word32 s9_167
	word32 s10_168
	word32 s11_169
	word32 t4_170
	mbedtls_debug_print_msg(ra_23, a0, 2<32>, 0x2308A298<32>, a5_22, out a1_35, out a2_157, out a3_158, out a4_159, out a5_160, out a7_161, out s4_162, out s5_163, out s6_164, out s7_165, out s8_166, out s9_167, out s10_168, out s11_169, out t4_170)
	word32 s2_80
	word32 s1_171
	word32 a5_172
	word32 s3_173
	word32 s4_174
	word32 s5_175
	word32 s0_78 = mbedtls_sha256_finish(mbedtls_sha256_clone(fp + -132<i32>, a1_35 + 80<i32>), dwLoc68, dwLoc08, out s1_171, out a5_172, out s2_80, out s3_173, out s4_174, out s5_175)
	word32 a5_102
	word32 a1_176
	word32 a2_177
	word32 a3_178
	word32 a4_179
	word32 a7_180
	mbedtls_debug_print_buf(ra_23, 3<32>, s2_80, out a1_176, out a2_177, out a3_178, out a4_179, out a5_102, out a7_180)
	word32 a1_181
	word32 a2_182
	word32 a3_183
	word32 a4_184
	word32 a5_185
	word32 a7_186
	word32 s4_187
	word32 s5_188
	word32 s6_189
	word32 s7_190
	word32 s8_191
	word32 s9_192
	word32 s10_193
	word32 s11_194
	word32 t4_195
	mbedtls_debug_print_msg(ra_23, s0_78, 2<32>, 0x2308A2CC<32>, a5_102, out a1_181, out a2_182, out a3_183, out a4_184, out a5_185, out a7_186, out s4_187, out s5_188, out s6_189, out s7_190, out s8_191, out s9_192, out s10_193, out s11_194, out t4_195)
	word32 a5_196
	mbedtls_sha256_free(fp + -132<i32>, out a5_196)
	return
ssl_calc_verify_tls_sha256_exit:


word32 ssl_flight_free(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0148, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_recv_flight_completed
//      mbedtls_ssl_handshake_free
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
ssl_flight_free_entry:
l23059928:
	word32 s0_11 = a0
l23059932:
	branch s0_11 != 0<32> l2305993E
l2305993E:
	word32 a2_22
	word32 a5_25
	word32 s0_31
	word32 s1_82
	word32 a0_83
	word32 a1_84
	word32 a3_85
	word32 a4_86
	word32 a6_87
	word32 s4_88
	word32 t3_89
	vPortFree(a0, a2, a5, mstatus, dwArg0148, dwArg0188, out s0_31, out s1_82, out a0_83, out a1_84, out a2_22, out a3_85, out a4_86, out a5_25, out a6_87, out s4_88, out t3_89)
	word32 s0_90
	word32 a1_91
	word32 a6_92
	word32 s4_93
	word32 t3_94
	vPortFree(s0_31, a2_22, a5_25, mstatus, dwArg0148, dwArg0188, out s0_90, out s1, out a0, out a1_91, out a2, out a3, out a4, out a5, out a6_92, out s4_93, out t3_94)
	s0_11 = s1
l23059934:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
ssl_flight_free_exit:


word32 ssl_append_key_cert(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_conf_own_cert
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
ssl_append_key_cert_entry:
l23059950:
	word32 a0_40
	word32 a3_24
	word32 a4_25
	word32 a5_26
	word32 s1_30
	word32 s2_31
	word32 s8_131
	word32 a2_128
	word32 s3_129
	word32 s4_130
	word32 s0_126
	word32 a1_127
	word32 ra_28 = mycalloc(ra, a1, 1<32>, 0xC<32>, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out s0_126, out s1_30, out a1_127, out a2_128, out a3_24, out a4_25, out a5_26, out s2_31, out s3_129, out s4_130, out s8_131)
	branch false l2305998E
l2305998E:
	a0_40 = 0xF8000100<32>
l23059968:
	Mem42[s1_30:word32] = 1<32>
	Mem43[9<32>:word32] = 0<32>
	Mem44[a2 + 4<i32>:word32] = 1<32>
	word32 s0_45 = Mem44[a5_26:word32]
	branch a5_26 != 0<32> l23059986
l23059986:
	word32 a5_48 = Mem44[a4_25 + 8<i32>:word32]
	branch a4_25 != 0<32> l23059984
l23059984:
l2305998A:
	Mem51[9<32>:word32] = a5_48
l23059976:
	Mem52[1<32>:word32] = s0_45
l23059978:
	a0_40 = 0<32>
l2305997A:
	s1Out = s1_30
	a0Out = a0_40
	a3Out = a3_24
	s2Out = s2_31
	return ra_28
ssl_append_key_cert_exit:


void ssl_update_checksum_start(word32 a1, word32 a2, word32 a5, word32 dwArg48, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_update_checksum_sha256
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ssl_update_checksum_start_entry:
l23059996:
l2305999C_thunk_mbedtls_sha256_update:
	word32 s1_35
	word32 a1_36
	word32 a4_37
	word32 a5_38
	word32 s2_39
	word32 s3_40
	word32 s4_41
	word32 s5_42
	mbedtls_sha256_update(a1, a2, a5, dwArg48, dwArgA8, out s1_35, out a1_36, out a4_37, out a5_38, out s2_39, out s3_40, out s4_41, out s5_42)
	return
ssl_update_checksum_start_exit:


void ssl_update_checksum_sha256(word32 a1, word32 a2, word32 a5, word32 dwArg48, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ssl_update_checksum_sha256_entry:
l230599A0:
l230599A0_thunk_ssl_update_checksum_start:
	ssl_update_checksum_start(a1, a2, a5, dwArg48, dwArgA8)
	return
ssl_update_checksum_sha256_exit:


word32 mbedtls_ssl_hdr_len.isra.1(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_flush_output
//      mbedtls_ssl_get_record_expansion
//      mbedtls_ssl_write_record
//      mbedtls_ssl_read_record_layer
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_hdr_len.isra.1_entry:
l230599A4:
	branch (CONVERT(Mem0[a0 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l230599B0
l230599B0:
	a5Out = <invalid>
	return 5<32>
l230599AC:
	a5Out = <invalid>
	return 0xD<32>
mbedtls_ssl_hdr_len.isra.1_exit:


word32 ssl_set_timer(word32 ra, word32 s0, word32 a1, word32 a5, word32 dwArg10, word32 dwArg14, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_recv_flight_completed
//      mbedtls_ssl_send_flight_completed
//      mbedtls_ssl_handshake_wrapup
//      mbedtls_ssl_setup
//      mbedtls_ssl_resend
//      mbedtls_ssl_fetch_input
//      mbedtls_ssl_read
// MayUse:  a1:[0..31] a5:[0..31] ra:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: a1 a3 a4 a5 ra s0 s1 s10 s11 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ssl_set_timer_entry:
l230599B4:
	word32 a0_5 = Mem0[a5 + 72<i32>:word32]
	branch a5 == 0<32> l230599F6
l230599F6:
	s0Out = s0
	s1Out = s1
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
l230599B8:
	word32 a5_24
	word32 a1_134
	word32 a2_135
	word32 a3_136
	word32 a4_137
	word32 a7_138
	word32 s4_139
	word32 s5_140
	word32 s6_141
	word32 s7_142
	word32 s8_143
	word32 s9_144
	word32 s10_145
	word32 s11_146
	word32 t4_147
	mbedtls_debug_print_msg(ra, a0_5, 3<32>, 0x2308A350<32>, a1, out a1_134, out a2_135, out a3_136, out a4_137, out a5_24, out a7_138, out s4_139, out s5_140, out s6_141, out s7_142, out s8_143, out s9_144, out s10_145, out s11_146, out t4_147)
	word32 a5_52
	word32 a4_53
	word32 s1_55
	word32 a1_56
	word32 a3_57
	word32 s0_58
	word32 ra_59
	word32 t1_60
	word32 a7_62
	word32 s10_63
	word32 s11_64
	word32 s4_65
	word32 s5_66
	word32 s6_67
	word32 s7_68
	word32 s8_69
	word32 s9_70
	word32 t0_71
	word32 t3_72
	word32 t4_73
	call Mem21[a0_5 + 72<i32>:int32] (retsize: 0;)
		uses: a1:a1 >>u 2<u32>,a2:a1,a3:a3_57,a4:a4_53,a5:a5_24,a7:a7_62,ra:ra,s0:s0,s1:a1,s10:s10_63,s11:s11_64,s4:s4_65,s5:s5_66,s6:s6_67,s7:s7_68,s8:s8_69,s9:s9_70,Stack +0010:dwArg10,Stack +0014:dwArg14,t0:t0_71,t1:t1_60,t3:t3_72,t4:t4_73,tp:dwArg14
		defs: a1:a1_56,a3:a3_57,a4:a4_53,a5:a5_52,a7:a7_62,ra:ra_59,s0:s0_58,s1:s1_55,s10:s10_63,s11:s11_64,s4:s4_65,s5:s5_66,s6:s6_67,s7:s7_68,s8:s8_69,s9:s9_70,t0:t0_71,t1:t1_60,t3:t3_72,t4:t4_73
	s0Out = s0_58
	s1Out = s1_55
	a1Out = a1_56
	a3Out = a3_57
	a4Out = a4_53
	a5Out = a5_52
	s4Out = s4_65
	s5Out = s5_66
	s6Out = s6_67
	s7Out = s7_68
	s9Out = s9_70
	s10Out = s10_63
	s11Out = s11_64
	return ra_59
ssl_set_timer_exit:


word32 ssl_check_timer(word32 ra, word32 s0, word32 a5, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_fetch_input
// MayUse:  a5:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 a4 a5 ra s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: s0 sp
ssl_check_timer_entry:
l230599F8:
	word32 a0_5 = Mem0[a5 + 76<i32>:word32]
	branch a5 != 0<32> l23059A0A
l23059A0A:
	word32 a0_23
	word32 a0_14
	word32 s0_16
	word32 ra_17
	word32 a2_19
	word32 a3_20
	word32 a1_21
	word32 a7_59
	word32 s10_60
	word32 s11_61
	word32 s4_62
	word32 s5_63
	word32 s8_66
	word32 s9_67
	word32 t0_68
	word32 t1_69
	word32 t3_70
	word32 t4_71
	word32 a4_18
	word32 s6_107
	word32 s7_110
	call a5 (retsize: 0;)
		uses: a0:Mem10[a0_5 + 68<i32>:word32],a1:a1_21,a2:a2_19,a3:a3_20,a4:a4_18,a5:a5,a7:a7_59,ra:ra,s0:a0_5,s10:s10_60,s11:s11_61,s4:s4_62,s5:s5_63,s6:s6_64,s7:s7_65,s8:s8_66,s9:s9_67,Stack +0004:s0,Stack +0084:ra,t0:t0_68,t1:t1_69,t3:t3_70,t4:t4_71
		defs: a0:a0_14,a1:a1_21,a2:a2_19,a3:a3_20,a4:a4_18,a7:a7_59,ra:ra_17,s0:s0_16,s10:s10_60,s11:s11_61,s4:s4_62,s5:s5_63,s6:s6_64,s7:s7_65,s8:s8_66,s9:s9_67,t0:t0_68,t1:t1_69,t3:t3_70,t4:t4_71
	word32 a5_22 = 2<32>
	branch a0_14 != 2<32> l23059A00
l23059A00:
	a0_23 = 0<32>
l23059A1C:
	word32 a1_139
	word32 a2_140
	word32 a3_141
	word32 a7_142
	word32 s4_143
	word32 s5_144
	word32 s8_145
	word32 s9_146
	word32 s10_147
	word32 s11_148
	word32 t4_149
	mbedtls_debug_print_msg(ra_17, s0_16, 3<32>, 0x2308A2DC<32>, 2<32>, out a1_139, out a2_140, out a3_141, out a4_18, out a5_22, out a7_142, out s4_143, out s5_144, out s6_107, out s7_110, out s8_145, out s9_146, out s10_147, out s11_148, out t4_149)
	a0_23 = 0xFFFFFFFF<32>
l23059A02:
	a0Out = a0_23
	a4Out = a4_18
	a5Out = a5_22
	s6Out = s6_107
	s7Out = s7_110
	return ra_17
l230599FC:
	a0Out = 0<32>
	a4Out = a4
	a5Out = a5
	s6Out = s6
	s7Out = s7
	return ra
ssl_check_timer_exit:


void tls_prf_sha256(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg68)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
tls_prf_sha256_entry:
l23059A3C:
	word32 a3_465
	word32 a4_466
	word32 a5_467
	word32 ra_49 = mbedtls_md_init(ra, fp + -220<i32>, out a3_465, out a4_466, out a5_467)
	word32 a5_468
	word32 a0_53 = mbedtls_md_info_from_type(6<32>, out a5_468)
	branch a0_53 == 0<32> l23059B7E
l23059B7E:
l23059A74:
	word32 a0_58 = mbedtls_md_get_size(a0_53)
	word32 a1_469
	word32 a2_470
	word32 a3_471
	word32 a5_473
	word32 a4_472
	branch strlen(a2, out a1_469, out a2_470, out a3_471, out a4_472, out a5_473) + a4 + a0_58 >u 128<i32> l23059B86
l23059B86:
l23059A8E:
	word32 a1_474
	word32 a3_476
	word32 a4_477
	word32 a2_475
	word32 a5_478
	word32 a0_73 = strlen(a2, out a1_474, out a2_475, out a3_476, out a4_477, out a5_478)
	word32 a6_484
	word32 a1_479
	word32 a2_480
	word32 a3_481
	word32 a4_482
	word32 a5_483
	word32 a7_485
	memcpy(fp + -176<i32> + a0_58, a2, a0_73, out a1_479, out a2_480, out a3_481, out a4_482, out a5_483, out a6_484, out a7_485)
	word32 a4_103
	word32 a5_104
	word32 a3_108
	word32 a6_488
	word32 a1_486
	word32 a7_489
	word32 a2_487
	memcpy(a0_58 + a0_73 + (fp + -176<i32>), a3, a4, out a1_486, out a2_487, out a3_108, out a4_103, out a5_104, out a6_488, out a7_489)
	word32 a0_120
	word32 a4_124
	word32 a5_125
	word32 mstatus_127
	word32 s2_130
	word32 s4_132
	word32 s8_133
	word32 s3_493
	word32 s1_490
	word32 a2_491
	word32 a3_492
	word32 ra_128 = mbedtls_md_setup(ra_49, a2, a0_58, fp + -220<i32>, a0_53, 1<32>, a3_108, a4_103, a5_104, a4, mstatus, dwLocD0, dwLocCC, dwLocA8, dwArg28, dwArg68, out s1_490, out a0_120, out a2_491, out a3_492, out a4_124, out a5_125, out s2_130, out s3_493, out s4_132, out s8_133, out mstatus_127)
	branch a0_120 != 0<32> l23059B04
l23059AC4:
	word32 s0_145
	word32 s4_146
	word32 a4_151
	word32 a5_152
	word32 s1_154
	word32 s2_155
	word32 s3_156
	word32 a4_165
	word32 a5_166
	word32 s2_178
	word32 a0_497
	word32 a2_494
	word32 s8_495
	word32 a0_496
	word32 s1_177
	word32 a5_174
	word32 a4_173
	word32 a2_172
	word32 a1_171
	word32 ra_175 = mbedtls_md_hmac_finish(mbedtls_md_hmac_update(mbedtls_md_hmac_starts(ra_128, fp + -220<i32>, a0, s8_133, a4_124, a5_125, s2_130, s4_132, out s0_145, out s1_154, out a2_494, out a4_151, out a5_152, out s2_155, out s3_156, out s4_146, out s8_495), fp + -220<i32>, a4_151, a5_152, dwLocD0, out a0_496, out a4_165, out a5_166), s0_145, s1_154, fp + -220<i32>, fp + -176<i32>, a4_165, a5_166, s2_155 + s3_156, dwArg20, dwArg24, dwArg48, out s1_177, out a0_497, out a1_171, out a2_172, out a4_173, out a5_174, out s2_178)
	word32 s3_180 = 0<32>
	word32 s2_181 = s2_178 + s1_177
l23059AE6:
	branch s3_180 <u s4_146 l23059B22
l23059B22:
	word32 a4_194
	word32 a5_195
	word32 s0_197
	word32 a4_205
	word32 a5_206
	word32 a1_212
	word32 a5_215
	word32 s1_218
	word32 s2_219
	word32 a4_227
	word32 a5_228
	word32 s0_230
	word32 a4_236
	word32 a5_237
	word32 a2_500
	word32 a0_499
	word32 a0_498
	word32 a4_501
	word32 a0_502
	word32 a0_503
	word32 a4_504
	word32 a5_505
	ra_175 = mbedtls_md_hmac_finish(mbedtls_md_hmac_update(mbedtls_md_hmac_reset(mbedtls_md_hmac_finish(mbedtls_md_hmac_update(mbedtls_md_hmac_reset(ra_175, fp + -220<i32>, a1_171, a5_174, out s0_197, out a4_194, out a5_195), fp + -220<i32>, a4_194, a5_195, dwLocD0, out a0_498, out a4_205, out a5_206), s0_197, s1_177, fp + -220<i32>, fp + -208<i32>, a4_205, a5_206, s2_181, dwArg20, dwArg24, dwArg48, out s1_218, out a0_499, out a1_212, out a2_500, out a4_501, out a5_215, out s2_219), fp + -220<i32>, a1_212, a5_215, out s0_230, out a4_227, out a5_228), fp + -220<i32>, a4_227, a5_228, dwLocD0, out a0_502, out a4_236, out a5_237), s0_230, s1_218, fp + -220<i32>, fp + -176<i32>, a4_236, a5_237, s2_219, dwArg20, dwArg24, dwArg48, out s1_177, out a0_503, out a1_171, out a2_172, out a4_504, out a5_505, out s2_181)
	a4_173 = s1_177 + s3_180
	word32 a3_252 = s1_177
	branch s4_146 >=u a4_173 l23059B5E
l23059B5A:
	a3_252 = s4_146 & s1_177
l23059B5E:
	a5_174 = 0<32>
	word32 s3_258 = s3_180 + a5
l23059B62:
	branch a5_174 != a3_252 l23059B6A
l23059B6A:
	a1_171 = CONVERT(Mem264[fp + -208<i32> + a5_174:byte], byte, word32)
	a2_172 = s3_258 + a5_174
	Mem269[a2_172:byte] = SLICE(a1_171, byte, 0)
	a5_174 = a5_174 + 1<32>
l23059B66:
	s3_180 = a4_173
l23059AEC:
	word32 a5_506
	mbedtls_md_free(ra_175, fp + -220<i32>, a2_172, a4_173, a5_174, mstatus_127, out a5_506)
	word32 a1_507
	mbedtls_zeroize(fp + -176<i32>, 128<i32>, out a1_507)
	word32 a1_508
	mbedtls_zeroize(fp + -208<i32>, 32<i32>, out a1_508)
l23059B04:
	return
tls_prf_sha256_exit:


void mbedtls_ssl_derive_keys(word32 ra, word32 s0, word32 s1, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
mbedtls_ssl_derive_keys_entry:
l23059B8E:
	word32 a4_936
	word32 a5_937
	word32 a0_30 = Mem29[s1 + 64<i32>:word32]
	word32 a5_42
	word32 a4_46
	word32 s11_49
	word32 s4_50
	word32 s6_52
	word32 a1_1286
	word32 s5_1290
	word32 s7_1291
	word32 s8_1292
	word32 s10_1294
	word32 t4_1295
	word32 s9_1293
	word32 a3_1288
	word32 a7_1289
	word32 a2_1287
	mbedtls_debug_print_msg(ra, a0_30, 2<32>, 0x23088EC0<32>, a5, out a1_1286, out a2_1287, out a3_1288, out a4_46, out a5_42, out a7_1289, out s4_50, out s5_1290, out s6_52, out s7_1291, out s8_1292, out s9_1293, out s10_1294, out s11_49, out t4_1295)
	word32 a5_64
	word32 a0_62 = mbedtls_cipher_info_from_type(CONVERT(Mem29[a5_42 + 8<i32>:byte], byte, word32), a4_46, out a5_64)
	word32 sp_119 = fp + -400<i32>
	word32 s2_121 = a0_30
	word32 s1_124 = Mem29[a5_64:word32]
	branch a0_62 != 0<32> l23059C54
l23059C54:
	word32 a5_69
	word32 a0_68 = mbedtls_md_info_from_type(CONVERT(Mem29[a5_64 + 9<i32>:byte], byte, word32), out a5_69)
	branch a0_68 != 0<32> l23059C76
l23059C76:
	word32 a5_431 = 3<32>
	branch Mem29[a0_30 + 12<i32>:int32] != 3<32> l23059CCE
l23059CCE:
l23059C80:
	word32 a5_151
	word32 a3_153
	word32 s11_132
	word32 s10_131
	word32 s8_129
	word32 s5_127
	word32 s6_122
	word32 s9_130
	word32 s4_126
	word32 s7_128
	Mem79[s4_50 + 208<i32>:word32] = 0x23059A3C<32>
	Mem82[s4_50 + 200<i32>:word32] = 0x2305989C<32>
	Mem85[s4_50 + 204<i32>:word32] = 0x2305979E<32>
	word32 a5_86 = Mem85[s4_50 + 328<i32>:int32]
	word32 s3_125 = s6_52
	branch a5_86 == 0<32> l23059CEE
l23059CEE:
	word32 a7_1316
	word32 a5_1315
	word32 a4_1314
	word32 a3_1313
	word32 a1_1311
	word32 a2_1312
	mbedtls_debug_print_buf(ra, 3<32>, s4_50 + 280<i32>, out a1_1311, out a2_1312, out a3_1313, out a4_1314, out a5_1315, out a7_1316)
	word32 a0_133
	word32 tp_1022
	word32 t6_1020
	word32 t5_1019
	call Mem85[s4_50 + 208<i32>:int32] (retsize: 0;)
		uses: a0:s4_50 + 280<i32>,a1:Mem85[s4_50 + 212<i32>:int32],a2:0x23088F3C<32>,a3:s4_50 + 216<i32>,a4:64<i32>,a5:s11_49 + 44<i32>,a6:48<i32>,mstatus:mstatus,ra:ra,s0:s0,s1:s1_65,s10:s4_50 + 280<i32>,s11:s11_49,s2:a0_30,s3:s6_52,s4:s4_50,s5:a0_62,s6:s6_52,s7:s4_50 + 216<i32>,s8:a0_68,s9:s11_49 + 44<i32>,t5:t5_1019,t6:t6_1020,tp:tp_1022
		defs: a0:a0_133,ra:ra_120,s1:s1_124,s10:s10_131,s11:s11_132,s2:s2_121,s3:s3_125,s4:s4_126,s5:s5_127,s6:s6_122,s7:s7_128,s8:s8_129,s9:s9_130,sp:sp_119,t5:t5_1019,t6:t6_1020,tp:tp_1022
	s0 = a0_133
	branch a0_133 == 0<32> l23059D50
l23059D50:
	word32 a1_1387
	mbedtls_zeroize(s10_131, 48<i32>, out a1_1387)
l23059D34:
	a5_151 = a0_133
	a3_153 = 629<i32>
l23059CB4:
	word32 a4_1320
	word32 a5_1321
	word32 a7_1322
	word32 t4_1323
	word32 a2_1318
	word32 a3_1319
	word32 a1_1317
	mbedtls_debug_print_msg(ra, a0_30, 3<32>, 0x23088F50<32>, a5_86, out a1_1317, out a2_1318, out a3_1319, out a4_1320, out a5_1321, out a7_1322, out s4_126, out s5_127, out s6_122, out s7_128, out s8_129, out s9_130, out s10_131, out s11_132, out t4_1323)
l23059D5A:
	word32 a7_1330
	word32 a6_1329
	word32 a5_1328
	word32 a1_1324
	word32 a2_1325
	word32 a3_1326
	word32 a4_1327
	memcpy(sp_119 + 16<i32>, s7_128, 64<i32>, out a1_1324, out a2_1325, out a3_1326, out a4_1327, out a5_1328, out a6_1329, out a7_1330)
	word32 a1_1331
	word32 a5_1335
	word32 a6_1336
	word32 a7_1337
	word32 a3_1333
	word32 a4_1334
	word32 a2_1332
	memcpy(s7_128, sp_119 + 48<i32>, 32<i32>, out a1_1331, out a2_1332, out a3_1333, out a4_1334, out a5_1335, out a6_1336, out a7_1337)
	word32 a7_1344
	word32 a6_1343
	word32 a2_1339
	word32 a3_1340
	word32 a4_1341
	word32 a5_1342
	word32 a1_1338
	memcpy(s4_126 + 248<i32>, sp_119 + 16<i32>, 32<i32>, out a1_1338, out a2_1339, out a3_1340, out a4_1341, out a5_1342, out a6_1343, out a7_1344)
	word32 a1_1345
	mbedtls_zeroize(sp_119 + 16<i32>, 64<i32>, out a1_1345)
	word32 sp_256
	word32 s1_261
	word32 s11_269
	word32 a0_270
	word32 a4_271
	word32 t5_282
	word32 t6_283
	word32 tp_1024
	call Mem85[s4_126 + 208<i32>:int32] (retsize: 0;)
		uses: a0:s9_244,a1:48<i32>,a2:0x23088F70<32>,a3:s7_181,a4:64<i32>,a5:sp_183 + 80<i32>,a6:256<i32>,mstatus:mstatus,ra:ra_246,s0:s0_249,s1:s1_250,s10:s10_254,s11:s11_255,s2:s2_247,s3:s3_251,s4:s4_216,s5:s5_252,s6:s6_248,s7:s7_181,s8:s8_253,s9:s9_244,t5:t5_282,t6:t6_283,tp:tp_1024
		defs: a0:a0_270,a4:a4_271,ra:ra_257,s1:s1_261,s11:s11_269,s2:s2_258,sp:sp_256,t5:t5_282,t6:t6_283,tp:tp_1024
	word32 s0_284 = a0_270
	branch a0_270 == 0<32> l23059DC2
l23059DC2:
	word32 a4_432
	word32 s1_418
	word32 s5_306
	word32 s7_308
	word32 s8_309
	word32 s9_310
	word32 a1_1346
	word32 a5_1350
	word32 a7_1351
	word32 s4_1352
	word32 s10_1354
	word32 s11_1355
	word32 t4_1356
	word32 s6_1353
	word32 a3_1348
	word32 a4_1349
	word32 a2_1347
	mbedtls_debug_print_msg(ra, s2_121, 3<32>, 0x23088F80<32>, mbedtls_ssl_get_ciphersuite_name(Mem85[s11_269:int32], a4_271), out a1_1346, out a2_1347, out a3_1348, out a4_1349, out a5_1350, out a7_1351, out s4_1352, out s5_306, out s6_1353, out s7_308, out s8_309, out s9_310, out s10_1354, out s11_1355, out t4_1356)
	word32 a5_1361
	word32 a7_1362
	word32 a4_1360
	word32 a3_1359
	word32 a2_1358
	word32 a1_1357
	mbedtls_debug_print_buf(ra, 3<32>, s9_310, out a1_1357, out a2_1358, out a3_1359, out a4_1360, out a5_1361, out a7_1362)
	word32 a3_1365
	word32 a4_1366
	word32 a5_1367
	word32 a7_1368
	word32 a1_1363
	word32 a2_1364
	mbedtls_debug_print_buf(ra, 4<32>, s7_308, out a1_1363, out a2_1364, out a3_1365, out a4_1366, out a5_1367, out a7_1368)
	word32 a3_365
	word32 a4_366
	word32 a1_1369
	word32 a2_1370
	word32 a5_1371
	word32 a7_1372
	mbedtls_debug_print_buf(ra, 4<32>, sp_256 + 80<i32>, out a1_1369, out a2_1370, out a3_365, out a4_366, out a5_1371, out a7_1372)
	word32 a1_1373
	mbedtls_zeroize(s7_308, 64<i32>, out a1_1373)
	Mem378[(Mem85[s5_306 + 4<i32>:int32] >>u 3<i32>) + 4<i32>:word32] = s1_261
	word32 a5_381 = CONVERT(Mem378[s5_306 + 1<i32>:byte], byte, word32) + 0xFFFFFFFA<32> & 253<i32>
	branch a5_381 != 0<32> l23059E7C
l23059E7C:
	word32 a0_387
	word32 a3_390
	word32 a4_391
	word32 a5_392
	word32 mstatus_394
	word32 s1_396
	word32 s2_397
	word32 s8_400
	word32 s4_1390
	word32 s3_1389
	word32 a2_1388
	ra = mbedtls_md_setup(ra, a0_270, s1_261, s1_261 + 56<i32>, s8_309, 1<32>, a3_365, a4_366, a5_381, s2_121, mstatus, Mem378[sp_256 + 16<i32>:word32], Mem378[sp_256 + 20<i32>:word32], Mem378[sp_256 + 56<i32>:word32], Mem378[sp_256 + 264<i32>:word32], Mem378[sp_256 + 328<i32>:word32], out s1_396, out a0_387, out a2_1388, out a3_390, out a4_391, out a5_392, out s2_397, out s3_1389, out s4_1390, out s8_400, out mstatus_394)
	s0_284 = a0_387
	branch a0_387 != 0<32> l23059E9C
l23059E8C:
	word32 a0_409
	word32 s8_422
	word32 mstatus_1421
	word32 s4_1420
	word32 s3_1419
	word32 a5_1418
	word32 a2_1415
	word32 a3_1416
	word32 a4_1417
	ra = mbedtls_md_setup(ra, a0_387, s1_396, s1_396 + 68<i32>, s8_400, 1<32>, a3_390, a4_391, a5_392, s2_397, mstatus_394, Mem378[sp_256 + 16<i32>:word32], Mem378[sp_256 + 20<i32>:word32], Mem378[sp_256 + 56<i32>:word32], Mem378[sp_256 + 264<i32>:word32], Mem378[sp_256 + 328<i32>:word32], out s1_418, out a0_409, out a2_1415, out a3_1416, out a4_1417, out a5_1418, out s2_121, out s3_1419, out s4_1420, out s8_422, out mstatus_1421)
	s0_284 = a0_409
	branch a0_409 == 0<32> l23059EAC
l23059EAC:
	word32 a0_429 = mbedtls_md_get_size(s8_422)
	Mem430[a0_429 + 20<i32>:word32] = s1_418
	a5_431 = Mem430[s5_306 + 12<i32>:int32]
	Mem433[a5_431 + 12<i32>:word32] = s1_418
	a4_432 = 7<32>
	branch CONVERT(Mem433[s5_306 + 1<i32>:byte], byte, word32) != 7<32> l23059F78
l23059F78:
	word32 a3_435 = Mem433[s5_306 + 20<i32>:int32]
	word32 a0_439 = a0_429 + a3_435 - (a0_429 & a3_435)
	Mem440[a0_439 + 8<i32>:word32] = s1_418
	word32 a4_441 = Mem440[s2_121 + 12<i32>:int32]
	a4_432 = a4_441 + 0xFFFFFFFE<32>
	branch a4_441 >u 0xFFFFFFFD<32> l23059F9A
l23059F9A:
l23059F96:
	a5_431 = a5_431 + a0_439
l23059EC4:
	Mem447[a0_429 + 8<i32>:word32] = s1_418
l23059E9C:
	a5_151 = s0_284
	a3_153 = 699<i32>
l23059E5C:
	Mem454[0x18<32>:word32] = s1_261
	Mem456[0x14<32>:word32] = s1_261
	s1_418 = Mem456[4<32>:word32]
	Mem458[s1_418 + 20<i32>:word32] = 0<32>
	word32 a4_459 = CONVERT(Mem458[0x20<32>:byte], byte, word32)
	word32 a5_460 = 8<32>
	a4_432 = a4_459 & 2<32>
	branch (a4_459 & 2<32>) != 0<32> l23059E76
l23059E74:
	a5_460 = 0x10<32>
l23059E76:
	a5_431 = a5_460 + 8<32>
l23059E78:
	Mem468[a5_431 + 8<i32>:word32] = s1_418
l23059EC6:
	word32 a4_561
	word32 s4_531
	word32 s7_532
	word32 a2_565
	Mem481[sp_256:word32] = a4_432
	word32 a1_499
	word32 s5_507
	word32 a2_1391
	word32 a7_1395
	word32 s4_1396
	word32 t4_1403
	word32 s6_1397
	word32 s8_1399
	word32 s9_1400
	word32 s10_1401
	word32 s11_1402
	word32 s7_1398
	word32 a4_1393
	word32 a5_1394
	word32 a3_1392
	mbedtls_debug_print_msg(ra, s2_121, 3<32>, 0x23088FC4<32>, a5_431, out a1_499, out a2_1391, out a3_1392, out a4_1393, out a5_1394, out a7_1395, out s4_1396, out s5_507, out s6_1397, out s7_1398, out s8_1399, out s9_1400, out s10_1401, out s11_1402, out t4_1403)
	word32 a5_516 = Mem481[s2_121:int32]
	word32 s1_523 = Mem481[a5_516 + 20<i32>:word32]
	branch (CONVERT(Mem481[a5_516 + 116<i32>:uint16], uint16, word32) & 1<32>) != 0<32> l23059FAC
l23059FAC:
	word32 s6_530 = (a5_516 << 1<u32>) + a1_499 + (sp_256 + 80<i32>)
	s4_531 = (a5_516 << 1<u32>) + (sp_256 + 80<i32>)
	s7_532 = sp_256 + 80<i32> + a5_516
	branch s0_284 != 0<32> l23059FBE
l23059FBC:
l23059FBE:
	word32 a1_544
	word32 a5_1425
	word32 a6_1426
	word32 a7_1427
	word32 a3_1423
	word32 a4_1424
	word32 a2_1422
	memcpy(s1_523 + 40<i32>, a1_499 + s6_530, s0_284, out a1_544, out a2_1422, out a3_1423, out a4_1424, out a5_1425, out a6_1426, out a7_1427)
	word32 a3_1429
	word32 a5_1430
	word32 a6_1431
	word32 a7_1432
	word32 a1_1428
	memcpy(s1_523 + 24<i32>, a1_544 + s0_284 + s6_530, s0_284, out a1_1428, out a2_565, out a3_1429, out a4_561, out a5_1430, out a6_1431, out a7_1432)
l23059F0A:
	s4_531 = (a5_516 << 1<u32>) + a1_499 + (sp_256 + 80<i32>)
	branch s0_284 != 0<32> l23059F1C
l23059F1A:
l23059F1C:
	word32 a1_592
	word32 a4_1406
	word32 a6_1408
	word32 a7_1409
	word32 a5_1407
	word32 a3_1405
	word32 a2_1404
	memcpy(s1_523 + 24<i32>, a1_499 + s4_531, s0_284, out a1_592, out a2_1404, out a3_1405, out a4_1406, out a5_1407, out a6_1408, out a7_1409)
	word32 a1_1410
	word32 a3_1411
	word32 a5_1412
	word32 a7_1414
	word32 a6_1413
	memcpy(s1_523 + 40<i32>, a1_592 + s0_284 + s4_531, s0_284, out a1_1410, out a2_565, out a3_1411, out a4_561, out a5_1412, out a6_1413, out a7_1414)
	s7_532 = sp_256 + 80<i32>
l23059F38:
	a5_431 = Mem481[s2_121 + 12<i32>:int32]
	branch a5_431 <= 0<32> l23059FDC
l23059FDC:
l23059FA6:
l23059CDE:
	word32 s4_1451
	word32 s8_1455
	word32 s9_1456
	word32 s10_1457
	word32 t4_1459
	word32 s11_1458
	word32 s6_1453
	word32 s7_1454
	word32 s5_1452
	word32 a7_1450
	word32 a5_1449
	word32 a4_1448
	word32 a1_1445
	word32 a2_1446
	word32 a3_1447
	mbedtls_debug_print_msg(ra, s2_121, 1<32>, 0x23088F14<32>, a5_431, out a1_1445, out a2_1446, out a3_1447, out a4_1448, out a5_1449, out a7_1450, out s4_1451, out s5_1452, out s6_1453, out s7_1454, out s8_1455, out s9_1456, out s10_1457, out s11_1458, out t4_1459)
l23059F40:
	word32 a2_681
	word32 s4_684
	word32 s8_685
	word32 a4_689
	word32 a5_690
	word32 s2_693
	word32 s1_712
	word32 s2_713
	word32 a0_723
	word32 s1_731
	word32 s0_1436
	word32 s3_1440
	word32 s4_1441
	word32 s8_1442
	word32 a5_1444
	word32 a4_1443
	word32 a4_1438
	word32 a5_1439
	word32 a2_1437
	word32 s3_1435
	word32 s1_1434
	word32 s0_1433
	ra = mbedtls_cipher_setup(mbedtls_md_hmac_starts(mbedtls_md_hmac_starts(ra, Mem481[a2_565 + 20<i32>:word32] + 56<i32>, s7_532, a2_565, a4_561, a5_431, s2_121, s4_531, out s0_1433, out s1_1434, out a2_681, out a4_689, out a5_690, out s2_693, out s3_1435, out s4_684, out s8_685), Mem481[a2_681 + 20<i32>:word32] + 68<i32>, s8_685, a2_681, a4_689, a5_690, s2_693, s4_684, out s0_1436, out s1_712, out a2_1437, out a4_1438, out a5_1439, out s2_713, out s3_1440, out s4_1441, out s8_1442), s1_712 + 80<i32>, s5_507, out s1_731, out a0_723, out a4_1443, out a5_1444)
	branch a0_723 == 0<32> l23059FEA
l23059FEA:
	word32 a0_738
	word32 a4_743
	word32 a5_744
	word32 s1_746
	ra = mbedtls_cipher_setup(ra, s1_731 + 144<i32>, s5_507, out s1_746, out a0_738, out a4_743, out a5_744)
	branch a0_738 == 0<32> l2305A00A
l2305A00A:
	word32 a4_759
	word32 a5_760
	word32 a0_756 = mbedtls_cipher_setkey(s1_712 + 80<i32>, Mem481[s5_507 + 4<i32>:int32], 1<32>, a4_743, a5_744, out a4_759, out a5_760)
	branch a0_756 == 0<32> l2305A02C
l2305A02C:
	word32 a4_1460
	word32 a5_1461
	word32 a0_767 = mbedtls_cipher_setkey(s1_746, Mem481[s5_507 + 4<i32>:int32], 0<32>, a4_759, a5_760, out a4_1460, out a5_1461)
	branch a0_767 == 0<32> l2305A04E
l2305A04E:
	word32 a5_775 = 2<32>
	branch CONVERT(Mem481[s5_507 + 1<i32>:byte], byte, word32) != 2<32> l2305A0AC
l2305A058:
	word32 a5_780
	word32 a4_1478
	word32 a0_778 = mbedtls_cipher_set_padding_mode(s1_712 + 80<i32>, 4<32>, 2<32>, out a4_1478, out a5_780)
	branch a0_778 == 0<32> l2305A082
l2305A082:
	word32 a4_1479
	word32 a0_784 = mbedtls_cipher_set_padding_mode(s1_746, 4<32>, a5_780, out a4_1479, out a5_775)
	branch a0_784 == 0<32> l2305A0AC
l2305A0AC:
	word32 a1_1462
	mbedtls_zeroize(sp_256 + 80<i32>, 256<i32>, out a1_1462)
	word32 t4_1477
	word32 s8_1473
	word32 a7_1468
	word32 a5_1467
	word32 a3_1465
	word32 s4_1469
	word32 a2_1464
	word32 s11_1476
	word32 s10_1475
	word32 s9_1474
	word32 s7_1472
	word32 s6_1471
	word32 s5_1470
	word32 a4_1466
	word32 a1_1463
	mbedtls_debug_print_msg(ra, s2_713, 2<32>, 0x23089044<32>, a5_775, out a1_1463, out a2_1464, out a3_1465, out a4_1466, out a5_1467, out a7_1468, out s4_1469, out s5_1470, out s6_1471, out s7_1472, out s8_1473, out s9_1474, out s10_1475, out s11_1476, out t4_1477)
l2305A08E:
	word32 a1_1493
	word32 a2_1494
	word32 a3_1495
	word32 a4_1496
	word32 a5_1497
	word32 s4_1498
	word32 s5_1499
	word32 s6_1500
	word32 s7_1501
	word32 s8_1502
	word32 s9_1503
	word32 s10_1504
	word32 s11_1505
	mbedtls_debug_print_ret(ra, 1<32>, 917<i32>, a0_784, out a1_1493, out a2_1494, out a3_1495, out a4_1496, out a5_1497, out s4_1498, out s5_1499, out s6_1500, out s7_1501, out s8_1502, out s9_1503, out s10_1504, out s11_1505)
l2305A064:
	word32 a1_1480
	word32 a2_1481
	word32 a3_1482
	word32 a4_1483
	word32 a5_1484
	word32 s4_1485
	word32 s5_1486
	word32 s6_1487
	word32 s7_1488
	word32 s8_1489
	word32 s9_1490
	word32 s10_1491
	word32 s11_1492
	mbedtls_debug_print_ret(ra, 1<32>, 910<i32>, a0_778, out a1_1480, out a2_1481, out a3_1482, out a4_1483, out a5_1484, out s4_1485, out s5_1486, out s6_1487, out s7_1488, out s8_1489, out s9_1490, out s10_1491, out s11_1492)
l2305A03E:
	a5_151 = a0_767
	a3_153 = 900<i32>
l2305A01C:
	a5_151 = a0_756
	a3_153 = 892<i32>
l23059FFA:
	a5_151 = a0_738
	a3_153 = 884<i32>
l23059F68:
	a5_151 = a0_723
	a3_153 = 877<i32>
l23059DAE:
	a5_151 = a0_270
	a3_153 = 662<i32>
l23059DBC:
l23059D46:
	word32 a3_1376
	word32 s5_1380
	word32 s6_1381
	word32 s7_1382
	word32 s9_1384
	word32 s10_1385
	word32 s11_1386
	word32 s8_1383
	word32 a5_1378
	word32 s4_1379
	word32 a4_1377
	word32 a2_1375
	word32 a1_1374
	mbedtls_debug_print_ret(ra, 1<32>, a3_153, a5_151, out a1_1374, out a2_1375, out a3_1376, out a4_1377, out a5_1378, out s4_1379, out s5_1380, out s6_1381, out s7_1382, out s8_1383, out s9_1384, out s10_1385, out s11_1386)
l23059C62:
	a4_936 = 0x23088EF0<32>
	a5_937 = CONVERT(Mem29[a5_69 + 9<i32>:byte], byte, word32)
l23059BF8:
	a5_937 = CONVERT(Mem29[a5_64 + 8<i32>:byte], byte, word32)
	a4_936 = 0x23088ED0<32>
l23059C08:
	word32 a7_1301
	word32 s7_1305
	word32 s8_1306
	word32 s9_1307
	word32 s11_1309
	word32 t4_1310
	word32 s10_1308
	word32 s5_1303
	word32 s6_1304
	word32 s4_1302
	word32 a5_1300
	word32 a4_1299
	word32 a3_1298
	word32 a1_1296
	word32 a2_1297
	mbedtls_debug_print_msg(ra, a0_30, 1<32>, a4_936, a5_937, out a1_1296, out a2_1297, out a3_1298, out a4_1299, out a5_1300, out a7_1301, out s4_1302, out s5_1303, out s6_1304, out s7_1305, out s8_1306, out s9_1307, out s10_1308, out s11_1309, out t4_1310)
l23059C1A:
	return
mbedtls_ssl_derive_keys_exit:


word32 mbedtls_ssl_flush_output(word32 ra, word32 a0, word32 a5, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_write_record
//      mbedtls_ssl_close_notify
//      mbedtls_ssl_write
//      mbedtls_ssl_read
//      mbedtls_ssl_handshake_client_step
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mbedtls_ssl_flush_output_entry:
l2305A0D0:
	word32 a4_125
	word32 s10_129
	word32 a5_126
	word32 s11_130
	word32 a3_122
	word32 s5_132
	word32 s9_136
	word32 s7_134
	word32 s6_133
	word32 s1_113
	word32 a1_123
	word32 a5_31
	word32 s5_391
	word32 s6_392
	word32 s7_393
	word32 s4_390
	word32 s9_395
	word32 a4_388
	word32 t4_398
	word32 s10_396
	word32 s11_397
	word32 s8_394
	word32 a7_389
	word32 a3_387
	word32 a1_385
	word32 a2_386
	word32 a0_121 = mbedtls_debug_print_msg(ra, a0, 2<32>, 0x2308915C<32>, a5, out a1_385, out a2_386, out a3_387, out a4_388, out a5_31, out a7_389, out s4_390, out s5_391, out s6_392, out s7_393, out s8_394, out s9_395, out s10_396, out s11_397, out t4_398)
	word32 s2_10 = 0x2308A000<32>
	word32 s0_110 = Mem28[a5_31 + 16<i32>:word32]
	branch a5_31 != 0<32> l2305A138
l2305A138:
	word32 a5_141 = Mem28[s0_110 + 172<i32>:int32]
	branch a5_141 == 0<32> l2305A1B4
l2305A1B4:
l2305A13E:
	s3 = 0x2308A000<32>
	word32 s4_131 = 0x23089000<32>
	s2_10 = 0xFFF9A3<32>
l2305A150:
	word32 a6_164 = Mem61[s0_110 + 172<i32>:int32]
	word32 s0_64 = Mem61[a0_121:word32]
	branch a6_164 != 0<32> l2305A1D0
l2305A1D0:
	word32 a5_404
	word32 a1_405
	word32 a2_406
	word32 a3_407
	word32 a4_408
	word32 a5_409
	word32 a7_410
	word32 s4_411
	word32 s5_412
	word32 s6_413
	word32 s7_414
	word32 s8_415
	word32 s9_416
	word32 s10_417
	word32 s11_418
	word32 t4_419
	word32 a0_81 = mbedtls_debug_print_msg(ra, s0_64, 2<32>, s4_131 + 440<i32>, Mem66[s0_64 + 168<i32>:int32] + mbedtls_ssl_hdr_len.isra.1(a0_121, out a5_404), out a1_405, out a2_406, out a3_407, out a4_408, out a5_409, out a7_410, out s4_411, out s5_412, out s6_413, out s7_414, out s8_415, out s9_416, out s10_417, out s11_418, out t4_419)
	word32 s0_100 = Mem66[a0_81:word32]
	word32 a5_102
	word32 a0_107 = mbedtls_ssl_hdr_len.isra.1(a0_81, out a5_102) + (Mem66[s0_100 + 168<i32>:int32] - Mem66[s0_100 + 172<i32>:int32])
	word32 a0_111
	call a5_102 (retsize: 0;)
		uses: a0:a0_107
		defs: a0:a0_111
	s0_110 = Mem66[a0_107 + 28<i32>:word32]
	s1_113 = a0_111
	word32 a2_420
	word32 s8_421
	a0_121 = mbedtls_debug_print_ret(ra, 2<32>, 0xFFF9A3<32>, a0_111, out a1_123, out a2_420, out a3_122, out a4_125, out a5_126, out s4_131, out s5_132, out s6_133, out s7_134, out s8_421, out s9_136, out s10_129, out s11_130)
	branch a0_111 <= 0<32> l2305A122
l2305A228:
	a5_141 = Mem66[s0_110 + 172<i32>:int32]
	Mem143[s0_110 + 172<i32>:word32] = a5_141 - a0_111
l2305A15A:
	word32 a4_144 = 8<32>
l2305A15C:
	word32 a5_148 = CONVERT(Mem146[a5_141 + 116<i32>:uint16], uint16, word32)
	word32 s0_147 = Mem146[a5_141:word32]
	a5_141 = a5_148 & 2<32>
	branch (a5_148 & 2<32>) >=u a4_144 l2305A182
l2305A168:
	word32 a2_152 = a4_144 + -1<i32>
	word32 a3_153 = Mem146[s0_147 + 144<i32>:int32] + a2_152
	a5_141 = CONVERT(Mem146[a3_153:byte], byte, word32) + 1<32> & 255<i32>
	Mem157[a3_153:byte] = SLICE(a5_141, byte, 0)
	branch a5_141 == 0<32> l2305A236
l2305A236:
	a4_144 = a2_152 & 255<i32>
l2305A182:
	word32 a5_162 = CONVERT(Mem160[a5_141 + 116<i32>:uint16], uint16, word32)
	s0_110 = Mem160[a5_141:word32]
	a5_141 = a5_162 & 2<32>
	branch (a5_162 & 2<32>) == 0<32> l2305A18E
l2305A18C:
	a6_164 = 2<32>
l2305A18E:
	branch a4_144 != a6_164 l2305A23C
l2305A23C:
l2305A1C4:
	word32 a2_427
	word32 a7_428
	word32 s4_429
	word32 s8_430
	word32 t4_431
	mbedtls_debug_print_msg(ra, s0_110, 2<32>, 0x230891A8<32>, a5_141, out a1_123, out a2_427, out a3_122, out a4_125, out a5_126, out a7_428, out s4_429, out s5_132, out s6_133, out s7_134, out s8_430, out s9_136, out s10_129, out s11_130, out t4_431)
	s1_113 = 0<32>
l2305A192:
	word32 a2_422
	word32 a7_423
	word32 s4_424
	word32 s8_425
	word32 t4_426
	mbedtls_debug_print_msg(ra, s0_110, 1<32>, 0x230891E8<32>, a5_162 & 2<32>, out a1_123, out a2_422, out a3_122, out a4_125, out a5_126, out a7_423, out s4_424, out s5_132, out s6_133, out s7_134, out s8_425, out s9_136, out s10_129, out s11_130, out t4_426)
	s1_113 = 0xF9000480<32>
l2305A104:
	word32 a2_399
	word32 a7_400
	word32 s4_401
	word32 s8_402
	word32 t4_403
	mbedtls_debug_print_msg(ra, s0_110, 1<32>, 0x2308916C<32>, a5_31, out a1_123, out a2_399, out a3_122, out a4_125, out a5_126, out a7_400, out s4_401, out s5_132, out s6_133, out s7_134, out s8_402, out s9_136, out s10_129, out s11_130, out t4_403)
	s1_113 = 0xF8FFFF00<32>
l2305A122:
	0<32> = dwArg0128
	s1Out = s1_113
	a0Out = s1_113
	a1Out = a1_123
	a2Out = dwArg0100
	a3Out = a3_122
	a4Out = a4_125
	a5Out = a5_126
	s2Out = s2_10
	s3Out = s3
	s4Out = dwArg78
	s5Out = s5_132
	s6Out = s6_133
	s7Out = s7_134
	s9Out = s9_136
	s10Out = s10_129
	s11Out = s11_130
	return dwArgE4
mbedtls_ssl_flush_output_exit:


word32 mbedtls_ssl_recv_flight_completed(word32 ra, word32 a2, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg0138, word32 dwArg0178, ptr32 & a5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_finished
//      mbedtls_ssl_handshake_server_step
// MayUse:  a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a5 ra s10
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
mbedtls_ssl_recv_flight_completed_entry:
l2305A250:
	word32 a0_9 = Mem7[a5 + 48<i32>:word32]
	word32 a4_18
	word32 a5_19
	word32 a3_129
	ssl_flight_free(a0_9, a2, Mem7[a0_9 + 56<i32>:word32], mstatus, dwArg0138, dwArg0178, out a3_129, out a4_18, out a5_19)
	Mem28[a5_19 + 56<i32>:word32] = 0<32>
	Mem30[a5_19 + 60<i32>:word32] = 0<32>
	word32 s0_31 = Mem30[a5_19 + 48<i32>:word32]
	word32 a5_32 = Mem30[a4_18 + 32<i32>:word32]
	Mem33[a4_18 + 64<i32>:word32] = a5_32
	word32 a3_37
	word32 a5_39
	word32 s10_44
	word32 s11_139
	word32 s7_137
	word32 s9_138
	word32 s5_135
	word32 s6_136
	word32 a4_133
	word32 s4_134
	word32 s1_131
	word32 a1_132
	word32 s0_130
	word32 ra_41 = ssl_set_timer(ra, s0_31, 0<32>, a5_32, dwArg00, dwArg04, out s0_130, out s1_131, out a1_132, out a3_37, out a4_133, out a5_39, out s4_134, out s5_135, out s6_136, out s7_137, out s9_138, out s10_44, out s11_139)
	branch a3_37 != 0x16<32> l2305A29E
l2305A284:
	branch CONVERT(Mem33[0x16<32>:byte], byte, word32) != 0x14<32> l2305A29E
l2305A29E:
	Mem64[a5_39 + 52<i32>:byte] = 0<8>
l2305A290:
	Mem66[a5_39 + 52<i32>:byte] = 3<8>
l2305A296:
	a5Out = a5_39
	s10Out = s10_44
	return ra_41
mbedtls_ssl_recv_flight_completed_exit:


word32 mbedtls_ssl_send_flight_completed(word32 ra, word32 a4, word32 a5, word32 dwArg00, word32 dwArg04, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_write_finished
//      mbedtls_ssl_handshake_client_step
// MayUse:  a4:[0..31] a5:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut: a5 ra s1 s11
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
mbedtls_ssl_send_flight_completed_entry:
l2305A2A4:
	word32 a4_74
	Mem16[Mem7[a4 + 104<i32>:word32] + 48<i32>:word32] = a5
	word32 a5_24
	word32 a1_25
	word32 s11_146
	word32 t4_147
	word32 s9_144
	word32 s10_145
	word32 s7_142
	word32 s8_143
	word32 s5_140
	word32 s6_141
	word32 a7_138
	word32 s4_139
	word32 a3_136
	word32 a4_137
	word32 a2_135
	mbedtls_debug_print_msg(ra, Mem16[a5 + 48<i32>:word32], 3<32>, 0x23089DAC<32>, Mem16[a5 + 48<i32>:word32], out a1_25, out a2_135, out a3_136, out a4_137, out a5_24, out a7_138, out s4_139, out s5_140, out s6_141, out s7_142, out s8_143, out s9_144, out s10_145, out s11_146, out t4_147)
	word32 a3_48
	word32 a5_50
	word32 s1_54
	word32 s11_56
	word32 s10_156
	word32 s7_154
	word32 s9_155
	word32 s5_152
	word32 s6_153
	word32 a4_150
	word32 s4_151
	word32 s0_148
	word32 a1_149
	word32 ra_52 = ssl_set_timer(ra, Mem16[a5_24 + 48<i32>:word32], a1_25, Mem16[a1_25 + 48<i32>:word32], dwArg00, dwArg04, out s0_148, out s1_54, out a1_149, out a3_48, out a4_150, out a5_50, out s4_151, out s5_152, out s6_153, out s7_154, out s9_155, out s10_156, out s11_56)
	branch a3_48 != 0x16<32> l2305A300
l2305A2E6:
	branch CONVERT(Mem16[0x16<32>:byte], byte, word32) != 0x14<32> l2305A300
l2305A300:
	a4_74 = 2<32>
l2305A2F2:
	a4_74 = 3<32>
l2305A2F4:
	Mem79[a5_50 + 52<i32>:byte] = SLICE(a4_74, byte, 0)
	s1Out = s1_54
	a5Out = a5_50
	s11Out = s11_56
	return ra_52
mbedtls_ssl_send_flight_completed_exit:


word32 mbedtls_ssl_update_handshake_status(word32 ra, word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record
// MayUse:  a1:[0..31] a4:[0..31] ra:[0..31]
// LiveOut: a5
// Trashed: a0 a2 a4 a5
// Preserved: a1 ra s0 sp
mbedtls_ssl_update_handshake_status_entry:
l2305A304:
	word32 a0_5 = Mem0[a4 + 4<i32>:word32]
	word32 a5_11 = 0x10<32>
	branch a4 == 0x10<32> l2305A324
l2305A314:
	word32 a0_13 = Mem10[0x40<32>:word32]
	branch false l2305A324
l2305A318:
	call Mem10[0xD4<32>:int32] (retsize: 0;)
		uses: a0:Mem10[a1 + 100<i32>:word32],a1:a1,a2:Mem10[a0_13 + 128<i32>:int32],a4:a4,ra:ra,s0:a0_5
		defs: a4:a4_20,a5:a5_23
l2305A324:
	word32 a5_29 = CONVERT(Mem10[a5_11 + 116<i32>:uint16], uint16, word32)
	word32 a5_30 = a5_29 & 2<32>
	branch (a5_29 & 2<32>) == 0<32> l2305A338
l2305A32E:
	branch (a5_29 & 2<32>) == 0<32> l2305A338
l2305A332:
	a5_30 = Mem10[a4 + 32<i32>:word32]
	Mem35[a4 + 0x21<32>:word32] = a5_30
l2305A338:
	return a5_30
mbedtls_ssl_update_handshake_status_exit:


void mbedtls_ssl_optimize_checksum(word32 ra, word32 a0, word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
mbedtls_ssl_optimize_checksum_entry:
l2305A340:
	branch CONVERT(Mem0[a1 + 9<i32>:byte], byte, word32) == 7<32> l2305A35A
l2305A35A:
l2305A372_thunk_mbedtls_debug_print_msg:
	word32 a1_74
	word32 a2_75
	word32 a3_76
	word32 a4_77
	word32 a5_78
	word32 a7_79
	word32 s4_80
	word32 s5_81
	word32 s6_82
	word32 s7_83
	word32 s8_84
	word32 s9_85
	word32 s10_86
	word32 s11_87
	word32 t4_88
	mbedtls_debug_print_msg(ra, a0, 1<32>, 0x23088F14<32>, a5, out a1_74, out a2_75, out a3_76, out a4_77, out a5_78, out a7_79, out s4_80, out s5_81, out s6_82, out s7_83, out s8_84, out s9_85, out s10_86, out s11_87, out t4_88)
	return
l2305A34A:
	Mem39[0xCB<32>:word32] = 0x230599A0<32>
	return
mbedtls_ssl_optimize_checksum_exit:


void mbedtls_ssl_reset_checksum(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
mbedtls_ssl_reset_checksum_entry:
l2305A376:
	word32 a0_5 = Mem0[a0 + 48<i32>:word32]
l2305A37E_thunk_mbedtls_sha256_starts:
	mbedtls_sha256_starts(a0_5 + 80<i32>, 0<32>)
	return
mbedtls_ssl_reset_checksum_exit:


word32 mbedtls_ssl_session_init(word32 ra, word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_setup
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_ssl_session_init_entry:
l2305A382:
l2305A388_thunk_memset:
	word32 a4_11
	word32 t1_17
	word32 a0_18
	word32 a1_19
	word32 a2_20
	word32 a3_21
	word32 a5_22
	word32 ra_13 = memset(ra, a0, 0<32>, 116<i32>, out t1_17, out a0_18, out a1_19, out a2_20, out a3_21, out a4_11, out a5_22)
	a4Out = a4_11
	return ra_13
mbedtls_ssl_session_init_exit:


word32 mbedtls_ssl_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_ssl_init_entry:
l2305A38C:
l2305A392_thunk_memset:
	word32 t1_16
	word32 a0_17
	word32 a1_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	return memset(ra, a0, 0<32>, 192<i32>, out t1_16, out a0_17, out a1_18, out a2_19, out a3_20, out a4_21, out a5_22)
mbedtls_ssl_init_exit:


word32 mbedtls_ssl_conf_authmode(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a1 a5
// Preserved: sp
mbedtls_ssl_conf_authmode_entry:
l2305A396:
	word32 a5_5 = (a1 & 3<32>) << 2<u32>
	Mem11[a0 + 116<i32>:word16] = SLICE(CONVERT(Mem0[a0 + 116<i32>:uint16], uint16, word32) & 0xFFFFFFF3<32> | a5_5, word16, 0)
	return a5_5
mbedtls_ssl_conf_authmode_exit:


void mbedtls_ssl_conf_verify(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
mbedtls_ssl_conf_verify_entry:
l2305A3AA:
	Mem5[a1 + 52<i32>:word32] = a0
	Mem7[a2 + 56<i32>:word32] = a0
	return
mbedtls_ssl_conf_verify_exit:


void mbedtls_ssl_conf_rng(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
mbedtls_ssl_conf_rng_entry:
l2305A3B0:
	Mem5[a1 + 24<i32>:word32] = a0
	Mem7[a2 + 28<i32>:word32] = a0
	return
mbedtls_ssl_conf_rng_exit:


void mbedtls_ssl_set_bio(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
mbedtls_ssl_set_bio_entry:
l2305A3B6:
	Mem5[a1 + 28<i32>:word32] = a0
	Mem7[a2 + 16<i32>:word32] = a0
	Mem9[a3 + 20<i32>:word32] = a0
	Mem11[a4 + 24<i32>:word32] = a0
	return
mbedtls_ssl_set_bio_exit:


void mbedtls_ssl_conf_read_timeout(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
//      iot_tls_read
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
mbedtls_ssl_conf_read_timeout_entry:
l2305A3C0:
	Mem5[a1 + 100<i32>:word32] = a0
	return
mbedtls_ssl_conf_read_timeout_exit:


word32 mbedtls_ssl_conf_own_cert(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
mbedtls_ssl_conf_own_cert_entry:
l2305A3C4:
l2305A3C8_thunk_ssl_append_key_cert:
	word32 a0_13
	word32 a3_16
	word32 s1_22
	word32 s2_23
	word32 ra_20 = ssl_append_key_cert(ra, a1, a2, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out s1_22, out a0_13, out a3_16, out s2_23)
	s1Out = s1_22
	a0Out = a0_13
	a3Out = a3_16
	s2Out = s2_23
	return ra_20
mbedtls_ssl_conf_own_cert_exit:


void mbedtls_ssl_conf_ca_chain(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
mbedtls_ssl_conf_ca_chain_entry:
l2305A3CC:
	Mem5[a1 + 80<i32>:word32] = a0
	Mem7[a2 + 84<i32>:word32] = a0
	return
mbedtls_ssl_conf_ca_chain_exit:


word32 mbedtls_ssl_set_hostname(word32 ra, word32 a1, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0108, word32 dwArg0148, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_ssl_set_hostname_entry:
l2305A3D2:
	branch a1 != 0<32> l2305A3EE
l2305A3EE:
	word32 a0_26
	word32 a4_19
	word32 a1_150
	word32 a2_151
	word32 a5_152
	word32 a3_18
	word32 a0_17 = strlen(a1, out a1_150, out a2_151, out a3_18, out a4_19, out a5_152)
	branch a0_17 >u 255<i32> l2305A3DC
l2305A3DC:
	a0_26 = 0xF8FFFF00<32>
l2305A40C:
	word32 s0_37
	word32 s1_38
	word32 s2_39
	word32 a1_153
	word32 a2_154
	word32 a4_155
	word32 a5_156
	word32 s3_157
	word32 s4_158
	word32 s8_159
	ra = mycalloc(ra, a0_17, 1<32>, a0_17 + 1<i32>, a3_18, a4_19, 255<i32>, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_37, out s1_38, out a1_153, out a2_154, out a3_18, out a4_155, out a5_156, out s2_39, out s3_157, out s4_158, out s8_159)
	Mem47[s2_39 + 180<i32>:word32] = 1<32>
	branch false l2305A432
l2305A432:
	a0_26 = 0xF8000100<32>
l2305A41C:
	word32 a1_160
	word32 a2_161
	word32 a4_162
	word32 a5_163
	word32 a6_164
	word32 a7_165
	memcpy(1<32>, s0_37, s1_38, out a1_160, out a2_161, out a3_18, out a4_162, out a5_163, out a6_164, out a7_165)
	Mem68[s1_38 + Mem47[s2_39 + 180<i32>:int32]:byte] = 0<8>
	a0_26 = 0<32>
l2305A3E2:
	0<32> = dwArg38
	a0Out = a0_26
	a3Out = a3_18
	return ra
l2305A3D4:
	a0Out = 0xF8FFFF00<32>
	a3Out = a3
	return ra
mbedtls_ssl_set_hostname_exit:


word32 mbedtls_ssl_conf_alpn_protocols(word32 a0, word32 a1, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a1:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mbedtls_ssl_conf_alpn_protocols_entry:
l2305A43A:
	word32 s1_104 = 0<32>
	a0_23 = a0
l2305A454:
	word32 a0_23
	branch a0_23 != 0<32> l2305A46C
l2305A46C:
	word32 a2_117
	word32 a0_29 = strlen(a0_23, out a1, out a2_117, out a3, out a4, out a5)
	s1_104 = s1_104 + a0_29
	a0_23 = a0_29 + 0xFFFFFFFF<32>
	branch a0_29 >u 0xFFFFFF01<32> l2305A484
l2305A47A:
	branch s1_104 >=u 0x10000000<32> l2305A484
l2305A484:
	a0_23 = 0xF8FFFF00<32>
l2305A47E:
l2305A458:
	Mem45[a0 + 96<i32>:word32] = a1
l2305A45C:
	0<32> = dwArg0128
	a0Out = a0_23
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = a0
	return s1_104
mbedtls_ssl_conf_alpn_protocols_exit:


word32 mbedtls_ssl_get_verify_result(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a5:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_get_verify_result_entry:
l2305A48C:
	word32 a0_11 = Mem0[a5 + 40<i32>:word32]
	branch a5 == 0<32> l2305A494
l2305A494:
	a0_11 = 0xFFFFFFFF<32>
	branch a5 != 0<32> l2305A490
l2305A490:
l2305A49A:
	return a0_11
mbedtls_ssl_get_verify_result_exit:


void mbedtls_ssl_get_ciphersuite(word32 a0, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a2 a5
// Preserved: sp
mbedtls_ssl_get_ciphersuite_entry:
l2305A49C:
	branch a0 == 0<32> l2305A4A8
l2305A49E:
	word32 a0_5 = Mem0[a0 + 40<i32>:word32]
	branch a0_5 == 0<32> l2305A4A8
l2305A4A8:
	return
l2305A4A2:
	word32 a0_7 = Mem0[a0_5:word32]
l2305A4A4_thunk_mbedtls_ssl_get_ciphersuite_name:
	mbedtls_ssl_get_ciphersuite_name(a0_7, a4)
	return
mbedtls_ssl_get_ciphersuite_exit:


word32 mbedtls_ssl_get_version(word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a4:[0..31] a5:[0..31]
// LiveOut: a4
// Trashed: a0 a4 a5
// Preserved: sp
mbedtls_ssl_get_version_entry:
l2305A4AC:
	branch (CONVERT(Mem0[a4 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305A4CE
l2305A4CE:
	branch a5 >u 3<32> l2305A4F8
l2305A4F8:
	return 3<32>
l2305A4D4:
	return 0x23088E48<32>
l2305A4B8:
	branch a5 == 2<32> l2305A4E4
l2305A4E4:
	return 2<32>
l2305A4BE:
	branch a5 == 3<32> l2305A4EE
l2305A4EE:
	return 3<32>
l2305A4C4:
	return 3<32>
mbedtls_ssl_get_version_exit:


word32 mbedtls_ssl_get_record_expansion(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a7 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: s0 sp
mbedtls_ssl_get_record_expansion_entry:
l2305A502:
	word32 a0_5 = Mem0[a4 + 56<i32>:word32]
	branch a4 != 0<32> l2305A50C
l2305A50C:
	word32 a0_51
	branch a3 == 0<32> l2305A542
l2305A516:
	a5 = CONVERT(Mem10[a3 + 1<i32>:byte], byte, word32)
	branch a5 == 2<32> l2305A53A
l2305A53A:
	a3 = Mem10[a5 + 20<i32>:word32]
	s0 = s0 + a5
l2305A520:
	branch a5 <u 2<32> l2305A542
l2305A524:
	a5 = a5 + 0xFFFFFFFA<32> & 255<i32>
	branch a5 >u 2<32> l2305A542
l2305A542:
	word32 s10_163
	word32 s9_162
	word32 s8_161
	word32 s7_160
	word32 s6_159
	word32 s5_158
	word32 s4_157
	word32 a7_156
	word32 a5_155
	word32 a4_154
	word32 a2_153
	word32 a1_152
	word32 s11_164
	word32 t4_165
	mbedtls_debug_print_msg(ra, a0_5, 1<32>, 0x23088F14<32>, a5, out a1_152, out a2_153, out a3, out a4_154, out a5_155, out a7_156, out s4_157, out s5_158, out s6_159, out s7_160, out s8_161, out s9_162, out s10_163, out s11_164, out t4_165)
	a0_51 = 0xF9000400<32>
l2305A52E:
l2305A530:
	word32 a5_166
	a0_51 = mbedtls_ssl_hdr_len.isra.1(Mem10[a0_5:word32], out a5_166) + s0
l2305A564:
	a3Out = a3
	return a0_51
l2305A506:
	word32 a0_68 = Mem0[a0_5:word32]
l2305A508_thunk_mbedtls_ssl_hdr_len.isra.1:
	word32 a5_151
	word32 a0_69 = mbedtls_ssl_hdr_len.isra.1(a0_68, out a5_151)
	a3Out = a3
	return a0_69
mbedtls_ssl_get_record_expansion_exit:


word32 mbedtls_ssl_get_max_frag_len(word32 a3, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_write
// MayUse:  a3:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
mbedtls_ssl_get_max_frag_len_entry:
l2305A56C:
	word32 a5_14 = Mem0[(Mem0[a5 + 116<i32>:word32] >>u 4<i32> & 0x1C<32>) + 0x2308A204<32>:word32]
	branch a3 == 0<32> l2305A594
l2305A584:
	word32 a4_18 = Mem0[(CONVERT(Mem0[a3 + 112<i32>:byte], byte, word32) << 2<i32>) + 0x2308A204<32>:word32]
	branch a4_18 >=u a5_14 l2305A594
l2305A592:
	a5_14 = a4_18
l2305A594:
	a5Out = a5_14
	return a5_14
mbedtls_ssl_get_max_frag_len_exit:


word32 mbedtls_ssl_get_peer_cert(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
mbedtls_ssl_get_peer_cert_entry:
l2305A598:
	branch a0 == 0<32> l2305A5A0
l2305A59A:
	a0 = Mem0[a0 + 40<i32>:word32]
	branch a0 == 0<32> l2305A5A0
l2305A59E:
	a0 = Mem0[a0 + 92<i32>:word32]
l2305A5A0:
	return a0
mbedtls_ssl_get_peer_cert_exit:


word32 mbedtls_ssl_handshake_step(word32 ra, word32 a0, word32 a4, word32 s5, word32 mstatus, word32 dwArg18, word32 dwArg78, word32 dwArgC4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0018:[0..31] Stack +0078:[0..31] Stack +00C4:[0..31]
// LiveOut: a0 a4 a5 mstatus ra s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_ssl_handshake_step_entry:
l2305A5A2:
	branch a0 == 0<32> l2305A5DA
l2305A5DA:
	s1Out = s1
	a0Out = 0xF8FFFF00<32>
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s5Out = s5
	mstatusOut = mstatus
	return ra
l2305A5A4:
	word32 a0_109
	branch a4 == 0<32> l2305A5E2
l2305A5E2:
	a0_109 = 0xF8FFFF00<32>
l2305A5B0:
	word32 a5_16 = CONVERT(Mem10[a4 + 116<i32>:uint16], uint16, word32)
	a5 = a5_16 & 1<32>
	branch (a5_16 & 1<32>) == 0<32> l2305A5C4
l2305A5C4:
	word32 a5_34
	ra = mbedtls_ssl_handshake_client_step(ra, a5_16 & 1<32>, mstatus, dwArg78, out s1, out a0_109, out a4, out a5_34, out s2, out s3, out s5, out mstatus)
	word32 a5_50 = CONVERT(Mem10[a5_34 + 116<i32>:uint16], uint16, word32)
	a5 = a5_50 & 1<32>
	branch (a5_50 & 1<32>) != 0<32> l2305A5B8
l2305A5D2:
	s1Out = s1
	a0Out = a0_109
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s5Out = s5
	mstatusOut = mstatus
	return ra
l2305A5B8:
l2305A5C0_thunk_mbedtls_ssl_handshake_server_step:
	word32 a4_72
	word32 a5_73
	word32 s3_79
	word32 s5_81
	word32 mstatus_94
	word32 a0_93 = mbedtls_ssl_handshake_server_step(ra, a5, s5, mstatus, dwArg18, dwArgC4, out a4_72, out a5_73, out s3_79, out s5_81, out mstatus_94)
	s1Out = s1
	a0Out = a0_93
	a4Out = a4_72
	a5Out = a5_73
	s2Out = s2
	s3Out = s3_79
	s5Out = s5_81
	mstatusOut = mstatus_94
	return ra
mbedtls_ssl_handshake_step_exit:


word32 mbedtls_ssl_handshake(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg58, word32 dwArgA4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
//      mbedtls_ssl_write
//      mbedtls_ssl_read
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0058:[0..31] Stack +00A4:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_handshake_entry:
l2305A5EA:
	word32 s0_120
	branch a0 == 0<32> l2305A65A
l2305A5F8:
	word32 a0_16 = Mem13[a5:word32]
	s1 = a0_16
	branch a5 == 0<32> l2305A65A
l2305A65A:
	s0_120 = 0xF8FFFF00<32>
l2305A5FE:
	word32 s9_272
	word32 a3_266
	word32 a7_267
	word32 s4_268
	word32 s7_270
	word32 s6_269
	word32 s8_271
	word32 a2_265
	word32 a1_264
	word32 s10_273
	word32 s11_274
	word32 t4_275
	word32 a4_32
	word32 s5_37
	word32 a5_100
	mbedtls_debug_print_msg(ra, a0_16, 2<32>, 0x230892C4<32>, a5, out a1_264, out a2_265, out a3_266, out a4_32, out a5_100, out a7_267, out s4_268, out s5_37, out s6_269, out s7_270, out s8_271, out s9_272, out s10_273, out s11_274, out t4_275)
	s2 = 0x2308A000<32>
	s3 = 0x10<32>
l2305A61C:
	s1 = Mem13[a5_100 + 4<i32>:word32]
	branch a5_100 != s3 l2305A626
l2305A626:
	word32 a0_57
	ra = mbedtls_ssl_handshake_step(ra, s1, a4_32, s5_37, mstatus, dwLoc08, dwArg58, dwArgA4, out s1, out a0_57, out a4_32, out a5_100, out s2, out s3, out s5_37, out mstatus)
	s0_120 = a0_57
	branch a0_57 == 0<32> l2305A61C
l2305A622:
	s0_120 = 0<32>
l2305A630:
	word32 a2_276
	word32 a7_277
	word32 s4_278
	word32 s7_279
	word32 s8_280
	word32 s9_281
	word32 s10_282
	word32 s11_283
	word32 t4_284
	mbedtls_debug_print_msg(ra, s1, 2<32>, 0x230892D4<32>, a5_100, out a1, out a2_276, out a3, out a4, out a5, out a7_277, out s4_278, out s5, out s6, out s7_279, out s8_280, out s9_281, out s10_282, out s11_283, out t4_284)
l2305A64A:
	s0Out = s0_120
	s1Out = s1
	a0Out = s0_120
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
mbedtls_ssl_handshake_exit:


word32 mbedtls_ssl_transform_free(word32 ra, word32 a0, word32 a4, word32 a5, word32 mstatus, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_handshake_wrapup_free_hs_transform
//      mbedtls_ssl_setup
//      mbedtls_ssl_free
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a0 a1 a2 a5
// Trashed: a0 a1 a2 a5
// Preserved: s0 sp
mbedtls_ssl_transform_free_entry:
l2305A662:
	branch a0 == 0<32> l2305A69C
l2305A69C:
	a1Out = a1
	a2Out = a2
	a5Out = a5
	return a0
l2305A664:
	word32 a5_14
	mbedtls_cipher_free(ra, a0 + 80<i32>, a5, out a5_14)
	word32 a5_18
	word32 a5_24
	word32 a5_28
	mbedtls_md_free(ra, a0 + 68<i32>, mbedtls_md_free(ra, a0 + 56<i32>, mbedtls_cipher_free(ra, a0 + 144<i32>, a5_14, out a5_18), a4, a5_18, mstatus, out a5_24), a4, a5_24, mstatus, out a5_28)
l2305A698_thunk_mbedtls_zeroize:
	word32 a1_35
	word32 a0_34 = mbedtls_zeroize(a0, 208<i32>, out a1_35)
	a1Out = a1_35
	a2Out = dwArg10
	a5Out = a5_28
	return a0_34
mbedtls_ssl_transform_free_exit:


word32 mbedtls_ssl_handshake_free(word32 s1, word32 a0, word32 a2, word32 mstatus, word32 dwArg0138, word32 dwArg0148, word32 dwArg0178, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_handshake_wrapup_free_hs_transform
//      mbedtls_ssl_setup
//      mbedtls_ssl_free
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] s1:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
mbedtls_ssl_handshake_free_entry:
l2305A69E:
	branch a0 == 0<32> l2305A6E4
l2305A6E4:
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l2305A6A0:
	word32 a5_14
	word32 a0_13 = mbedtls_sha256_free(a0 + 80<i32>, out a5_14)
l2305A6B4:
	branch a0_13 == 0<32> l2305A6C0
l2305A6C0:
	word32 a2_23
	word32 a5_26
	word32 a0_29
	word32 s0_127
	word32 s1_128
	word32 a1_129
	word32 a3_130
	word32 a4_131
	word32 a6_132
	word32 s4_133
	word32 t3_134
	vPortFree(a0_13, a2, a5_14, mstatus, dwArg0148, dwArg0188, out s0_127, out s1_128, out a0_29, out a1_129, out a2_23, out a3_130, out a4_131, out a5_26, out a6_132, out s4_133, out t3_134)
	word32 a2_36
	word32 a5_39
	word32 a0_42
	word32 s0_135
	word32 s1_136
	word32 a1_137
	word32 a3_138
	word32 a4_139
	word32 a6_140
	word32 s4_141
	word32 t3_142
	vPortFree(a0_29, a2_23, a5_26, mstatus, dwArg0148, dwArg0188, out s0_135, out s1_136, out a0_42, out a1_137, out a2_36, out a3_138, out a4_139, out a5_39, out a6_140, out s4_141, out t3_142)
	word32 s0_48 = Mem12[a0_42 + 56<i32>:word32]
	word32 a3_52
	word32 a4_53
	word32 a5_54
	word32 s1_56 = ssl_flight_free(a0_42, a2_36, a5_39, mstatus, dwArg0138, dwArg0178, out a3_52, out a4_53, out a5_54)
l2305A6E0_thunk_mbedtls_zeroize:
	word32 a1_151
	a0Out = mbedtls_zeroize(s0_48, 348<i32>, out a1_151)
	a2Out = dwArg10
	a3Out = a3_52
	a4Out = a4_53
	a5Out = a5_54
	return s1_56
mbedtls_ssl_handshake_free_exit:
l2305A6B6:
	word32 s0_143
	word32 a0_144
	word32 a1_145
	word32 a3_146
	word32 a4_147
	word32 a6_148
	word32 s4_149
	word32 t3_150
	vPortFree(Mem12[s1 + 8<i32>:word32], a2, a5_14, mstatus, dwArg0148, dwArg0188, out s0_143, out s1, out a0_144, out a1_145, out a2, out a3_146, out a4_147, out a5_14, out a6_148, out s4_149, out t3_150)
	a0_13 = s1


word32 ssl_handshake_wrapup_free_hs_transform(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_wrapup
//      mbedtls_ssl_read_record_layer
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
ssl_handshake_wrapup_free_hs_transform_entry:
l2305A6E6:
	word32 a2_23
	word32 a0_41
	word32 a2_43
	word32 a5_46
	word32 a3_138
	word32 a1_137
	word32 a4_139
	word32 a5_140
	word32 a7_141
	word32 s4_142
	word32 s5_143
	word32 s6_144
	word32 s7_145
	word32 s8_146
	word32 s9_147
	word32 s10_148
	word32 s11_149
	word32 t4_150
	word32 a3_151
	word32 a4_152
	mbedtls_ssl_handshake_free(0x2308A000<32>, mbedtls_debug_print_msg(ra, a0, 3<32>, 0x2308A310<32>, a5, out a1_137, out a2_23, out a3_138, out a4_139, out a5_140, out a7_141, out s4_142, out s5_143, out s6_144, out s7_145, out s8_146, out s9_147, out s10_148, out s11_149, out t4_150), a2_23, mstatus, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a0_41, out a2_43, out a3_151, out a4_152, out a5_46)
	word32 a4_55
	word32 a0_59
	word32 s0_153
	word32 s1_154
	word32 a1_155
	word32 a2_156
	word32 a3_157
	word32 a6_158
	word32 s4_159
	word32 t3_160
	word32 a5_56
	vPortFree(a0_41, a2_43, a5_46, mstatus, dwArg0148, dwArg0188, out s0_153, out s1_154, out a0_59, out a1_155, out a2_156, out a3_157, out a4_55, out a5_56, out a6_158, out s4_159, out t3_160)
	Mem66[Mem16[a0_59 + 60<i32>:word32] + 48<i32>:word32] = 0<32>
	branch a0_59 == 0<32> l2305A72A
l2305A720:
	word32 a2_69
	word32 a5_70
	word32 a1_161
	word32 s0_162
	word32 s1_163
	word32 a0_164
	word32 a1_165
	word32 a2_166
	word32 a3_167
	word32 a4_168
	word32 a6_169
	word32 s4_170
	word32 t3_171
	vPortFree(mbedtls_ssl_transform_free(ra, a0_59, a4_55, a5_56, mstatus, out a1_161, out a2_69, out a5_70), a2_69, a5_70, mstatus, dwArg0148, dwArg0188, out s0_162, out s1_163, out a0_164, out a1_165, out a2_166, out a3_167, out a4_168, out a5_56, out a6_169, out s4_170, out t3_171)
l2305A72A:
	word32 s0_86 = Mem66[a5_56 + 64<i32>:word32]
	Mem88[s0_86 + 64<i32>:word32] = 0<32>
	Mem89[a5_56 + 60<i32>:word32] = s0_86
l2305A750_thunk_mbedtls_debug_print_msg:
	word32 a5_104
	word32 a1_172
	word32 a2_173
	word32 a3_174
	word32 a4_175
	word32 a7_176
	word32 s4_177
	word32 s5_178
	word32 s6_179
	word32 s7_180
	word32 s8_181
	word32 s9_182
	word32 s10_183
	word32 s11_184
	word32 t4_185
	mbedtls_debug_print_msg(ra, s0_86, 3<32>, 0x2308A330<32>, a5_56, out a1_172, out a2_173, out a3_174, out a4_175, out a5_104, out a7_176, out s4_177, out s5_178, out s6_179, out s7_180, out s8_181, out s9_182, out s10_183, out s11_184, out t4_185)
	return a5_104
ssl_handshake_wrapup_free_hs_transform_exit:


word32 mbedtls_ssl_session_free(word32 ra, word32 a0, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_wrapup
//      mbedtls_ssl_setup
//      mbedtls_ssl_free
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: ra s0 s2 s3 s8 sp
mbedtls_ssl_session_free_entry:
l2305A754:
	branch a0 == 0<32> l2305A782
l2305A782:
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l2305A756:
	word32 a0_10 = Mem8[a0 + 92<i32>:word32]
	branch a0_10 == 0<32> l2305A76C
l2305A762:
	word32 a0_14
	word32 a2_16
	word32 a5_19
	word32 s0_123
	word32 s1_124
	word32 a1_125
	word32 s3_126
	word32 s4_127
	word32 s8_128
	mbedtls_x509_crt_free(ra, a0_10, a1, a5, mstatus, dwArg0128, dwArg0168, out s0_123, out s1_124, out a0_14, out a1_125, out a2_16, out a5_19, out s3_126, out s4_127, out s8_128)
	word32 s0_129
	word32 s1_130
	word32 a1_131
	word32 a3_132
	word32 a4_133
	word32 a6_134
	word32 s4_135
	word32 t3_136
	vPortFree(a0_14, a2_16, a5_19, mstatus, dwArg0148, dwArg0188, out s0_129, out s1_130, out a0_10, out a1_131, out a2, out a3_132, out a4_133, out a5, out a6_134, out s4_135, out t3_136)
l2305A76C:
	word32 a3_52
	word32 a4_53
	word32 a5_54
	word32 s1_55
	word32 s0_60
	word32 a0_117
	word32 a1_118
	word32 a2_119
	word32 a6_120
	word32 s4_121
	word32 t3_122
	vPortFree(a0_10, a2, a5, mstatus, dwArg0148, dwArg0188, out s0_60, out s1_55, out a0_117, out a1_118, out a2_119, out a3_52, out a4_53, out a5_54, out a6_120, out s4_121, out t3_122)
l2305A77E_thunk_mbedtls_zeroize:
	word32 a1_137
	a0Out = mbedtls_zeroize(s0_60, 116<i32>, out a1_137)
	a2Out = dwArg10
	a3Out = a3_52
	a4Out = a4_53
	a5Out = a5_54
	return s1_55
mbedtls_ssl_session_free_exit:


void mbedtls_ssl_handshake_wrapup(word32 ra, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg38, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0038:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s2 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: mstatus ra s0 sp
mbedtls_ssl_handshake_wrapup_entry:
l2305A784:
	word32 s2_22 = Mem11[a5 + 328<i32>:int32]
	word32 s1_16 = 0x2308A000<32>
	word32 a2_26
	word32 s11_340
	word32 t4_341
	word32 s7_336
	word32 s9_338
	word32 s10_339
	word32 s8_337
	word32 a7_332
	word32 s5_334
	word32 s6_335
	word32 s4_333
	word32 a1_25
	word32 a4_28
	word32 a3_27
	word32 a5_121
	word32 a0_23 = mbedtls_debug_print_msg(ra, Mem11[a5 + 48<i32>:word32], 3<32>, 0x230892E4<32>, a5, out a1_25, out a2_26, out a3_27, out a4_28, out a5_121, out a7_332, out s4_333, out s5_334, out s6_335, out s7_336, out s8_337, out s9_338, out s10_339, out s11_340, out t4_341)
	branch a0_23 == 0<32> l2305A7C0
l2305A7B6:
	word32 a0_44
	word32 a2_46
	word32 a5_49
	word32 a3_342
	word32 a4_343
	mbedtls_ssl_session_free(ra, a0_23, a1_25, a2_26, a5_121, mstatus, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out a0_44, out a2_46, out a3_342, out a4_343, out a5_49)
	word32 t3_348
	word32 s0_344
	word32 a6_346
	word32 s4_347
	word32 a2_345
	vPortFree(a0_44, a2_46, a5_49, mstatus, dwArg0148, dwArg0188, out s0_344, out s1_16, out a0_23, out a1_25, out a2_345, out a3_27, out a4_28, out a5_121, out a6_346, out s4_347, out t3_348)
l2305A7C0:
	word32 s0_72 = Mem11[a4_28:word32]
	Mem73[s0_72 + 44<i32>:word32] = 0<32>
	Mem74[a1_25 + 40<i32>:word32] = s0_72
	branch a5_121 == 0<32> l2305A7F6
l2305A7CE:
	branch a3_27 == 0<32> l2305A7F6
l2305A7D2:
	branch s2_22 != 0<32> l2305A7F6
l2305A7D6:
	word32 s0_87
	word32 a0_91
	word32 a6_112
	call a5_121 (retsize: 0;)
		uses: a4:Mem74[a0_80 + 40<i32>:word32],a5:a5_75,a6:a6_112,mstatus:mstatus,ra:ra,s0:s0_72,s1:s1_82,s2:s2_22,Stack +0128:dwArg0118,Stack +0148:dwArg0138,Stack +0158:dwArg0148,Stack +0168:dwArg0158,Stack +0188:dwArg0178,Stack +0198:dwArg0188
		defs: a0:a0_91,a5:a5_92,a6:a6_112,mstatus:mstatus_111,ra:ra_89,s0:s0_87
	branch a0_91 == 0<32> l2305A7F6
l2305A7DC:
	word32 s10_360
	word32 s11_361
	word32 t4_362
	word32 s8_358
	word32 s9_359
	word32 s6_356
	word32 s7_357
	word32 s4_354
	word32 s5_355
	word32 a4_352
	word32 a7_353
	word32 a2_350
	word32 a3_351
	word32 a1_349
	mbedtls_debug_print_msg(ra, s0_87, 1<32>, 0x230892F8<32>, a5_121, out a1_349, out a2_350, out a3_351, out a4_352, out a5_121, out a7_353, out s4_354, out s5_355, out s6_356, out s7_357, out s8_358, out s9_359, out s10_360, out s11_361, out t4_362)
l2305A7F6:
	word32 a5_161
	word32 a5_142 = CONVERT(Mem74[a5_121 + 116<i32>:uint16], uint16, word32)
	word32 s0_141 = Mem74[a5_121:word32]
	word32 a5_143 = a5_142 & 2<32>
	branch (a5_142 & 2<32>) == 0<32> l2305A852
l2305A800:
	s0_141 = Mem74[(a5_142 & 2<32>) + 48<i32>:word32]
	a5_143 = Mem74[(a5_142 & 2<32>) + 56<i32>:word32]
	branch a5_143 == 0<32> l2305A852
l2305A852:
	a5_161 = ssl_handshake_wrapup_free_hs_transform(ra, s0_141, a5_143, mstatus, dwArg0118, dwArg0128, dwArg0138, dwArg0158, dwArg0168, dwArg0178)
l2305A806:
	word32 a3_365
	word32 s1_363
	word32 a5_185
	word32 s0_188
	word32 a1_364
	word32 a4_366
	word32 s4_367
	word32 s5_368
	word32 s6_369
	word32 s7_370
	word32 s9_371
	word32 s10_372
	word32 s11_373
	ra = ssl_set_timer(ra, s0_141, 0<32>, a5_143, dwArg00, dwArg04, out s0_188, out s1_363, out a1_364, out a3_365, out a4_366, out a5_185, out s4_367, out s5_368, out s6_369, out s7_370, out s9_371, out s10_372, out s11_373)
	word32 a1_374
	word32 a2_375
	word32 a3_376
	word32 a4_377
	word32 a7_378
	word32 s4_379
	word32 s5_380
	word32 s6_381
	word32 s7_382
	word32 s8_383
	word32 s9_384
	word32 s10_385
	word32 s11_386
	word32 t4_387
	mbedtls_debug_print_msg(ra, s0_188, 3<32>, 0x23089314<32>, a5_185, out a1_374, out a2_375, out a3_376, out a4_377, out a5_161, out a7_378, out s4_379, out s5_380, out s6_381, out s7_382, out s8_383, out s9_384, out s10_385, out s11_386, out t4_387)
l2305A828:
	word32 s0_231 = Mem74[a5_161 + 4<i32>:word32]
	word32 a5_235 = a5_161 + 1<32>
	Mem236[a5_235 + 4<i32>:word32] = s0_231
	0<32> = dwArg38
l2305A84E_thunk_mbedtls_debug_print_msg:
	word32 a1_388
	word32 a2_389
	word32 a3_390
	word32 a4_391
	word32 a5_392
	word32 a7_393
	word32 s4_394
	word32 s5_395
	word32 s6_396
	word32 s7_397
	word32 s8_398
	word32 s9_399
	word32 s10_400
	word32 s11_401
	word32 t4_402
	mbedtls_debug_print_msg(ra, s0_231, 3<32>, 0x2308933C<32>, a5_235, out a1_388, out a2_389, out a3_390, out a4_391, out a5_392, out a7_393, out s4_394, out s5_395, out s6_396, out s7_397, out s8_398, out s9_399, out s10_400, out s11_401, out t4_402)
	return
mbedtls_ssl_handshake_wrapup_exit:


word32 ssl_handshake_init(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_setup
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
ssl_handshake_init_entry:
l2305A85A:
	word32 a0_103 = Mem11[a0 + 64<i32>:word32]
	branch a0_103 == 0<32> l2305A86E
l2305A86A:
	a0_103 = mbedtls_ssl_transform_free(ra, a0_103, a4, a5, mstatus, out a1, out a2, out a5)
l2305A86E:
	branch a0_103 == 0<32> l2305A876
l2305A872:
	s1 = mbedtls_ssl_session_free(ra, a0_103, a1, a2, a5, mstatus, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out a0_103, out a2, out a3, out a4, out a5)
l2305A876:
	branch a0_103 == 0<32> l2305A87E
l2305A87A:
	word32 a2_617
	s1 = mbedtls_ssl_handshake_free(s1, a0_103, a2, mstatus, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a0_103, out a2_617, out a3, out a4, out a5)
l2305A87E:
	branch a5 != 0<32> l2305A88E
l2305A882:
	word32 s0_88
	word32 s3_621
	word32 s4_622
	word32 s8_623
	word32 s2_620
	word32 a1_618
	word32 a2_619
	ra = mycalloc(ra, s1, 1<32>, 208<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_88, out s1, out a1_618, out a2_619, out a3, out a4, out a5, out s2_620, out s3_621, out s4_622, out s8_623)
	Mem98[0x41<32>:word32] = s0_88
	a0_103 = 1<32>
l2305A88E:
	branch a5 != 0<32> l2305A89E
l2305A892:
	word32 s0_117
	word32 s3_627
	word32 s4_628
	word32 s8_629
	word32 a1_624
	word32 a2_625
	word32 s2_626
	ra = mycalloc(ra, s1, 1<32>, 116<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_117, out s1, out a1_624, out a2_625, out a3, out a4, out a5, out s2_626, out s3_627, out s4_628, out s8_629)
	Mem127[0x2D<32>:word32] = s0_117
	a0_103 = 1<32>
l2305A89E:
	word32 a1_254
	word32 a3_259
	word32 a0_264
	word32 s0_146
	branch a5 == 0<32> l2305A8F4
l2305A8F4:
	word32 a1_701
	word32 a2_702
	word32 a3_703
	word32 a4_704
	word32 s2_705
	word32 s3_706
	word32 s4_707
	word32 s8_708
	ra = mycalloc(ra, s1, 1<32>, 348<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_146, out s1, out a1_701, out a2_702, out a3_703, out a4_704, out a5, out s2_705, out s3_706, out s4_707, out s8_708)
	Mem156[0x31<32>:word32] = s0_146
	a0_103 = 1<32>
	branch true l2305A8A2
l2305A902:
l2305A8A2:
	s0_146 = Mem158[a5 + 64<i32>:word32]
	branch a5 != 0<32> l2305A904
l2305A904:
	s0_146 = Mem158[a0_103 + 44<i32>:word32]
	branch a0_103 == 0<32> l2305A8A6
l2305A908:
	word32 s2_242 = s1 + 80<i32>
	word32 a4_248
	word32 a4_667
	word32 t1_668
	word32 a3_675
	word32 a0_669
	word32 a1_670
	word32 a2_671
	word32 a3_672
	word32 a4_673
	word32 a5_674
	word32 a4_676
	word32 a5_677
	word32 a3_678
	word32 a4_679
	word32 a5_680
	word32 t1_681
	word32 a0_682
	word32 a1_683
	word32 a2_684
	word32 a3_685
	word32 a4_686
	word32 a5_687
	word32 a3_688
	word32 a5_689
	ra = mbedtls_sha256_init(memset(mbedtls_md_init(mbedtls_md_init(mbedtls_cipher_init(mbedtls_cipher_init(memset(mbedtls_ssl_session_init(ra, a0_103, out a4_667), s1, 0<32>, 208<i32>, out t1_668, out a0_669, out a1_670, out a2_671, out a3_672, out a4_673, out a5_674), s1 + 80<i32>), s1 + 144<i32>), s1 + 56<i32>, out a3_675, out a4_676, out a5_677), s1 + 68<i32>, out a3_678, out a4_679, out a5_680), s1, 0<32>, 348<i32>, out t1_681, out a0_682, out a1_683, out a2_684, out a3_685, out a4_686, out a5_687), s2_242, out a3_688, out a4_248, out a5_689)
	mbedtls_sha256_starts(s2_242, 0<32>)
	Mem258[s1 + 196<i32>:word32] = 0x23059996<32>
	Mem261[2<32>:word32] = s1
	Mem262[0xF<32>:word32] = s1
	a1_254 = 0<32>
	a3_259 = 2<32>
	a0_264 = 0<32>
	word32 a5_265 = CONVERT(Mem262[0x77<32>:uint16], uint16, word32)
	branch (a5_265 & 2<32>) == 0<32> l2305A8E8
l2305A97A:
	Mem269[a4_248 + 68<i32>:word32] = a5_265 & 2<32>
	word32 s0_271 = Mem269[a4_248 + 48<i32>:word32]
	word32 a5_272 = CONVERT(Mem269[(a5_265 & 2<32>) + 116<i32>:uint16], uint16, word32)
	branch (a5_272 & 1<32>) != 0<32> l2305A99C
l2305A99C:
	Mem274[a4_248 + 52<i32>:byte] = 2<8>
l2305A98C:
	Mem275[a4_248 + 52<i32>:byte] = 0<8>
l2305A990:
	word32 s0_690
	word32 s1_691
	word32 a4_692
	word32 a5_693
	word32 s4_694
	word32 s5_695
	word32 s6_696
	word32 s7_697
	word32 s9_698
	word32 s10_699
	word32 s11_700
	ra = ssl_set_timer(ra, s0_271, 0<32>, a5_272 & 1<32>, dwArg00, dwArg04, out s0_690, out s1_691, out a1_254, out a3_259, out a4_692, out a5_693, out s4_694, out s5_695, out s6_696, out s7_697, out s9_698, out s10_699, out s11_700)
	a0_264 = 0<32>
l2305A8A6:
	word32 a6_648
	word32 t4_642
	word32 s0_643
	word32 s1_644
	word32 a3_646
	word32 a1_645
	word32 a4_647
	word32 s6_636
	word32 s7_637
	word32 s8_638
	word32 a5_320
	word32 a2_322
	word32 a2_343
	word32 a5_346
	word32 a0_349
	word32 s4_649
	word32 t3_650
	word32 s9_639
	word32 s10_640
	word32 s11_641
	word32 a1_630
	word32 a3_631
	word32 a4_632
	word32 a7_633
	word32 s4_634
	word32 s5_635
	vPortFree(mbedtls_debug_print_msg(ra, s0_146, 1<32>, 0x2308A2EC<32>, a5, out a1_630, out a2_322, out a3_631, out a4_632, out a5_320, out a7_633, out s4_634, out s5_635, out s6_636, out s7_637, out s8_638, out s9_639, out s10_640, out s11_641, out t4_642), a2_322, a5_320, mstatus, dwArg0148, dwArg0188, out s0_643, out s1_644, out a0_349, out a1_645, out a2_343, out a3_646, out a4_647, out a5_346, out a6_648, out s4_649, out t3_650)
	word32 a2_356
	word32 a5_359
	word32 a0_362
	word32 s1_652
	word32 s0_651
	word32 a3_654
	word32 a4_655
	word32 a6_656
	word32 a1_653
	word32 s4_657
	word32 t3_658
	vPortFree(a0_349, a2_343, a5_346, mstatus, dwArg0148, dwArg0188, out s0_651, out s1_652, out a0_362, out a1_653, out a2_356, out a3_654, out a4_655, out a5_359, out a6_656, out s4_657, out t3_658)
	word32 s0_378
	word32 s1_659
	word32 a0_660
	word32 a2_661
	word32 a4_662
	word32 a6_664
	word32 s4_665
	word32 t3_666
	word32 a5_663
	vPortFree(a0_362, a2_356, a5_359, mstatus, dwArg0148, dwArg0188, out s0_378, out s1_659, out a0_660, out a1_254, out a2_661, out a3_259, out a4_662, out a5_663, out a6_664, out s4_665, out t3_666)
	Mem382[s0_378 + 48<i32>:word32] = 0<32>
	Mem383[s0_378 + 64<i32>:word32] = 0<32>
	Mem384[s0_378 + 44<i32>:word32] = 0<32>
	a0_264 = 0xF8000100<32>
l2305A8E8:
	0<32> = dwArg38
	a0Out = a0_264
	a1Out = a1_254
	a3Out = a3_259
	return ra
ssl_handshake_init_exit:


word32 mbedtls_ssl_setup(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
mbedtls_ssl_setup_entry:
l2305A9A2:
	Mem15[a1:word32] = a0
	word32 a3_26
	word32 a4_27
	word32 a5_28
	word32 s1_32
	word32 s2_33
	word32 a1_254
	word32 a2_255
	word32 s3_256
	word32 s4_257
	word32 s8_258
	word32 s0_31
	word32 ra_30 = mycalloc(ra, a1, 1<32>, 0x400013D<32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_31, out s1_32, out a1_254, out a2_255, out a3_26, out a4_27, out a5_28, out s2_33, out s3_256, out s4_257, out s8_258)
	Mem41[0x51<32>:word32] = s0_31
	branch false l2305AA3C
l2305A9C2:
	word32 a5_48
	word32 s1_52
	word32 a1_280
	word32 a2_281
	word32 a3_282
	word32 a4_283
	word32 s2_284
	word32 s3_285
	word32 s4_286
	word32 s8_287
	ra_30 = mycalloc(ra_30, s1_32, 1<32>, s2_33 + 317<i32>, a3_26, a4_27, a5_28, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_31, out s1_52, out a1_280, out a2_281, out a3_282, out a4_283, out a5_48, out s2_284, out s3_285, out s4_286, out s8_287)
	Mem61[s0_31 + 140<i32>:word32] = 1<32>
	branch false l2305AA3C
l2305AA3C:
	word32 a5_75
	word32 a2_77
	word32 a3_98
	word32 a1_104
	word32 s0_106
	word32 a1_259
	word32 a3_260
	word32 a4_261
	word32 a7_262
	word32 s4_263
	word32 s5_264
	word32 s6_265
	word32 s7_266
	word32 s8_267
	word32 s9_268
	word32 s10_269
	word32 s11_270
	word32 t4_271
	word32 s1_272
	word32 a0_273
	word32 a2_274
	word32 a4_275
	word32 a5_276
	word32 a6_277
	word32 s4_278
	word32 t3_279
	vPortFree(mbedtls_debug_print_msg(ra_30, s0_31, 1<32>, 0x23089DD4<32>, 0x400013D<32>, out a1_259, out a2_77, out a3_260, out a4_261, out a5_75, out a7_262, out s4_263, out s5_264, out s6_265, out s7_266, out s8_267, out s9_268, out s10_269, out s11_270, out t4_271), a2_77, a5_75, mstatus, dwArg0148, dwArg0188, out s0_106, out s1_272, out a0_273, out a1_104, out a2_274, out a3_98, out a4_275, out a5_276, out a6_277, out s4_278, out t3_279)
	Mem110[s0_106 + 80<i32>:word32] = 0<32>
	0<32> = dwArg38
	a0Out = 0xF8000100<32>
	a1Out = a1_104
	a3Out = a3_98
	return ra_30
l2305A9D2:
	word32 a5_126
	word32 s0_117 = Mem61[a5_48 + 80<i32>:word32]
	branch (CONVERT(Mem61[s1_52 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305AA1E
l2305AA1E:
	Mem123[s0_117 + 144<i32>:word32] = 1<32>
	Mem124[a5_48 + 84<i32>:word32] = s0_117
	Mem127[s0_117 + 148<i32>:word32] = 9<32>
	Mem128[s0_117 + 152<i32>:word32] = 0xC<32>
	Mem129[s0_117 + 156<i32>:word32] = 0xE<32>
	Mem130[s0_117 + 160<i32>:word32] = 0xE<32>
	Mem131[a5_48 + 0x60<32>:word32] = s0_117
	a5_126 = a5_48 + 8<32>
l2305A9EC:
	Mem132[s0_117 + 148<i32>:word32] = 1<32>
	Mem133[a5_48 + 88<i32>:word32] = s0_117
	Mem136[s0_117 + 144<i32>:word32] = 4<32>
	Mem137[s0_117 + 152<i32>:word32] = 0xC<32>
	Mem138[s0_117 + 156<i32>:word32] = 0xE<32>
	Mem139[s0_117 + 160<i32>:word32] = 0xE<32>
	Mem140[a5_48 + 0x57<32>:word32] = s0_117
	a5_126 = a5_48 + 3<32>
l2305AA08:
	Mem143[a5_48 + 103<i32>:word32] = s0_117
	Mem145[a5_48 + 109<i32>:word32] = s0_117
	Mem146[a5_48 + 113<i32>:word32] = s0_117
	0<32> = dwArg38
l2305AA1A_thunk_ssl_handshake_init:
	word32 a0_158
	word32 a1_159
	word32 a3_161
	word32 ra_166 = ssl_handshake_init(ra_30, s1_52, s0_117, a5_48 + 11<i32>, dwArg10, 0xE<32>, a5_48 + 13<i32>, a5_126, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg38, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, dwArg0178, dwArg0188, out a0_158, out a1_159, out a3_161)
	a0Out = a0_158
	a1Out = a1_159
	a3Out = a3_161
	return ra_166
mbedtls_ssl_setup_exit:


word32 mbedtls_ssl_free(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg38, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_destroy
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a2 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a7 s1 s10 s11 s2 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: a6 s0 sp
mbedtls_ssl_free_entry:
l2305AA7C:
	branch a0 == 0<32> l2305AB62
l2305AB62:
	a2Out = a2
	a5Out = a5
	return s1
l2305AA80:
	word32 a3_423
	word32 a7_424
	word32 s4_425
	word32 s5_426
	word32 s6_427
	word32 s7_428
	word32 s8_429
	word32 s9_430
	word32 s10_431
	word32 s11_432
	word32 t4_433
	word32 a4_27
	word32 a1_106
	word32 a2_118
	word32 a5_102
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x2308920C<32>, a5, out a1_106, out a2_118, out a3_423, out a4_27, out a5_102, out a7_424, out s4_425, out s5_426, out s6_427, out s7_428, out s8_429, out s9_430, out s10_431, out s11_432, out t4_433)
	word32 s1_103 = 0x2308A000<32>
	word32 a0_105 = Mem20[a0 + 140<i32>:int32]
	branch a0_105 == 0<32> l2305AAC0
l2305AAAE:
	word32 a1_434
	mbedtls_zeroize(a0_105, 0x400013D<32>, out a1_434)
	word32 s0_435
	word32 a3_436
	word32 a6_437
	word32 s4_438
	word32 t3_439
	vPortFree(Mem20[a0 + 140<i32>:int32], a2_118, a5_102, mstatus, dwArg0148, dwArg0188, out s0_435, out s1_103, out a0_105, out a1_106, out a2_118, out a3_436, out a4_27, out a5_102, out a6_437, out s4_438, out t3_439)
l2305AAC0:
	branch a0_105 == 0<32> l2305AAD4
l2305AAC4:
	word32 a1_440
	word32 s0_441
	word32 a3_442
	word32 a6_443
	word32 s4_444
	word32 t3_445
	vPortFree(mbedtls_zeroize(a0_105, 0x400013D<32>, out a1_440), a2_118, a5_102, mstatus, dwArg0148, dwArg0188, out s0_441, out s1_103, out a0_105, out a1_106, out a2_118, out a3_442, out a4_27, out a5_102, out a6_443, out s4_444, out t3_445)
l2305AAD4:
	branch a0_105 == 0<32> l2305AAE2
l2305AAD8:
	word32 a2_95
	word32 a5_96
	word32 a1_446
	word32 s0_447
	word32 a3_448
	word32 a4_449
	word32 a6_450
	word32 s4_451
	word32 t3_452
	vPortFree(mbedtls_ssl_transform_free(ra, a0_105, a4_27, a5_102, mstatus, out a1_446, out a2_95, out a5_96), a2_95, a5_96, mstatus, dwArg0148, dwArg0188, out s0_447, out s1_103, out a0_105, out a1_106, out a2_118, out a3_448, out a4_449, out a5_102, out a6_450, out s4_451, out t3_452)
l2305AAE2:
	branch a0_105 == 0<32> l2305AB08
l2305AAE6:
	word32 a0_121
	word32 a4_125
	word32 a5_126
	word32 a2_453
	word32 a3_454
	mbedtls_ssl_handshake_free(s1_103, a0_105, a2_118, mstatus, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a0_121, out a2_453, out a3_454, out a4_125, out a5_126)
	word32 a1_135
	word32 a2_136
	word32 a5_137
	word32 a0_139
	word32 a2_141
	word32 a5_144
	word32 a3_455
	word32 a4_456
	mbedtls_ssl_session_free(ra, mbedtls_ssl_transform_free(ra, a0_121, a4_125, a5_126, mstatus, out a1_135, out a2_136, out a5_137), a1_135, a2_136, a5_137, mstatus, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out a0_139, out a2_141, out a3_455, out a4_456, out a5_144)
	word32 a2_151
	word32 a5_154
	word32 a0_157
	word32 s0_457
	word32 s1_458
	word32 a1_459
	word32 a3_460
	word32 a4_461
	word32 a6_462
	word32 s4_463
	word32 t3_464
	vPortFree(a0_139, a2_141, a5_144, mstatus, dwArg0148, dwArg0188, out s0_457, out s1_458, out a0_157, out a1_459, out a2_151, out a3_460, out a4_461, out a5_154, out a6_462, out s4_463, out t3_464)
	word32 a2_164
	word32 a5_167
	word32 a0_170
	word32 s0_465
	word32 s1_466
	word32 a1_467
	word32 a3_468
	word32 a4_469
	word32 a6_470
	word32 s4_471
	word32 t3_472
	vPortFree(a0_157, a2_151, a5_154, mstatus, dwArg0148, dwArg0188, out s0_465, out s1_466, out a0_170, out a1_467, out a2_164, out a3_468, out a4_469, out a5_167, out a6_470, out s4_471, out t3_472)
	word32 s0_473
	word32 a3_474
	word32 a4_475
	word32 a6_476
	word32 s4_477
	word32 t3_478
	vPortFree(a0_170, a2_164, a5_167, mstatus, dwArg0148, dwArg0188, out s0_473, out s1_103, out a0_105, out a1_106, out a2_118, out a3_474, out a4_475, out a5_102, out a6_476, out s4_477, out t3_478)
l2305AB08:
	word32 s0_191 = Mem20[a0_105 + 40<i32>:word32]
	branch a0_105 == 0<32> l2305AB16
l2305AB0C:
	word32 a0_202
	word32 a2_204
	word32 a5_207
	word32 a3_479
	word32 a4_480
	mbedtls_ssl_session_free(ra, a0_105, a1_106, a2_118, a5_102, mstatus, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out a0_202, out a2_204, out a3_479, out a4_480, out a5_207)
	word32 a0_481
	word32 a1_482
	word32 a2_483
	word32 a3_484
	word32 a4_485
	word32 a6_486
	word32 s4_487
	word32 t3_488
	vPortFree(a0_202, a2_204, a5_207, mstatus, dwArg0148, dwArg0188, out s0_191, out s1_103, out a0_481, out a1_482, out a2_483, out a3_484, out a4_485, out a5_102, out a6_486, out s4_487, out t3_488)
l2305AB16:
	word32 s2_228 = Mem20[s0_191 + 180<i32>:int32]
	branch s2_228 == 0<32> l2305AB34
l2305AB1E:
	word32 a5_233
	word32 a2_235
	word32 a1_503
	word32 a3_504
	word32 a4_505
	word32 a1_506
	mbedtls_zeroize(s2_228, strlen(s2_228, out a1_503, out a2_235, out a3_504, out a4_505, out a5_233), out a1_506)
	word32 a0_507
	word32 a1_508
	word32 a2_509
	word32 a3_510
	word32 a4_511
	word32 a6_512
	word32 s4_513
	word32 t3_514
	vPortFree(Mem20[s0_191 + 180<i32>:int32], a2_235, a5_233, mstatus, dwArg0148, dwArg0188, out s0_191, out s1_103, out a0_507, out a1_508, out a2_509, out a3_510, out a4_511, out a5_102, out a6_512, out s4_513, out t3_514)
l2305AB34:
	word32 a5_271
	word32 a1_489
	word32 a2_490
	word32 a3_491
	word32 a4_492
	word32 a7_493
	word32 s4_494
	word32 s5_495
	word32 s6_496
	word32 s7_497
	word32 s8_498
	word32 s9_499
	word32 s10_500
	word32 s11_501
	word32 t4_502
	mbedtls_debug_print_msg(ra, s0_191, 2<32>, 0x23089214<32>, a5_102, out a1_489, out a2_490, out a3_491, out a4_492, out a5_271, out a7_493, out s4_494, out s5_495, out s6_496, out s7_497, out s8_498, out s9_499, out s10_500, out s11_501, out t4_502)
	0<32> = dwArg38
l2305AB5E_thunk_mbedtls_zeroize:
	word32 a1_515
	mbedtls_zeroize(s0_191, 192<i32>, out a1_515)
	a2Out = dwArg10
	a5Out = a5_271
	return s1_103
mbedtls_ssl_free_exit:


word32 mbedtls_ssl_config_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_ssl_config_init_entry:
l2305AB64:
l2305AB6A_thunk_memset:
	word32 t1_16
	word32 a0_17
	word32 a1_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	return memset(ra, a0, 0<32>, 120<i32>, out t1_16, out a0_17, out a1_18, out a2_19, out a3_20, out a4_21, out a5_22)
mbedtls_ssl_config_init_exit:


word32 mbedtls_ssl_config_defaults(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a3 a4 s2 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: s0 sp
mbedtls_ssl_config_defaults_entry:
l2305AB6E:
	word32 a5_14 = (CONVERT(Mem0[a0 + 116<i32>:uint16], uint16, word32) & 0xFFFFFFFE<32> | a1 & 1<i32>) & 0xFFFFFFFD<32> | (a2 & 1<i32>) << 1<i32>
	Mem15[a0 + 116<i32>:word16] = SLICE(a5_14, word16, 0)
	branch a1 != 0<32> l2305AB96
l2305AB8A:
	Mem18[a0 + 116<i32>:word16] = SLICE(a5_14 & -525<i32> | 520<i32>, word16, 0)
l2305AB96:
	Mem21[0x450<32>:word32] = a0
	Mem24[0xEFFFACC<32>:word32] = a0
	branch a3 != 2<32> l2305ABE6
l2305ABE6:
	Mem38[0x3030373<32>:word32] = a0
	branch a2 != 1<32> l2305ABF8
l2305ABF4:
	Mem41[a0 + 115<i32>:byte] = 2<8>
l2305ABF8:
	word32 a0_44
	word32 s2_51
	word32 s4_53
	word32 s5_54
	word32 s0_49 = mbedtls_ssl_list_ciphersuites(out a0_44, out s2_51, out s4_53, out s5_54)
	Mem60[0x2308A714<32>:word32] = s0_49
	Mem63[a0_44 + 12<i32>:word32] = s0_49
	Mem64[a0_44 + 8<i32>:word32] = s0_49
	Mem65[a0_44 + 4<i32>:word32] = s0_49
	Mem66[a0_44:word32] = s0_49
	Mem67[0x4200D4F0<32>:word32] = s0_49
	word32 a3_71
	word32 a4_72
	Mem75[mbedtls_ecp_grp_id_list(out a3_71, out a4_72) + 92<i32>:word32] = s0_49
	a3Out = a3_71
	a4Out = a4_72
	s2Out = s2_51
	s4Out = s4_53
	s5Out = s5_54
	return <invalid>
l2305ABB2:
	Mem81[0x3030373<32>:word32] = a0
	Mem84[0x4200D4B4<32>:word32] = a0
	Mem85[0x4200D4B0<32>:word32] = a0
	Mem86[0x4200D4AC<32>:word32] = a0
	Mem87[0x4200D4A8<32>:word32] = a0
	Mem90[0x2308A724<32>:word32] = a0
	Mem93[0x4200D50C<32>:word32] = a0
	Mem96[0x4200D9D4<32>:word32] = a0
	a3Out = a3
	a4Out = 2<32>
	s2Out = s2
	s4Out = s4
	s5Out = s5
	return <invalid>
mbedtls_ssl_config_defaults_exit:


word32 mbedtls_ssl_config_free(word32 s1, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_destroy
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
mbedtls_ssl_config_free_entry:
l2305AC2A:
	word32 s0_11 = a0
	word32 a0_12 = Mem9[a0 + 76<i32>:word32]
l2305AC36:
	branch a0_12 != 0<32> l2305AC4A
l2305AC4A:
	word32 a0_68
	word32 a1_69
	word32 a3_70
	word32 a4_71
	word32 a6_72
	word32 s4_73
	word32 t3_74
	vPortFree(Mem9[s1 + 8<i32>:word32], a2, a5, mstatus, dwArg0148, dwArg0188, out s0_11, out s1, out a0_68, out a1_69, out a2, out a3_70, out a4_71, out a5, out a6_72, out s4_73, out t3_74)
	a0_12 = s1
l2305AC38:
l2305AC46_thunk_mbedtls_zeroize:
	word32 a1_75
	mbedtls_zeroize(s0_11, 120<i32>, out a1_75)
	return s1
mbedtls_ssl_config_free_exit:


void mbedtls_ssl_sig_from_pk(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 t1
// Preserved: sp
mbedtls_ssl_sig_from_pk_entry:
l2305AC54:
	word32 a5_18
	mbedtls_pk_can_do(a0, 1<32>, a5, out a5_18)
	return
mbedtls_ssl_sig_from_pk_exit:


void mbedtls_ssl_pk_alg_from_sig()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
mbedtls_ssl_pk_alg_from_sig_entry:
l2305AC68:
	return
mbedtls_ssl_pk_alg_from_sig_exit:


word32 mbedtls_ssl_md_alg_from_hash(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a4 a5
// Preserved: sp
mbedtls_ssl_md_alg_from_hash_entry:
l2305AC70:
	word32 a5_5 = a0 + 0xFFFFFFFF<32> & 255<i32>
	branch a5_5 >u 3<32> l2305AC8C
l2305AC8C:
	a5Out = <invalid>
	return 0<32>
l2305AC7C:
	word32 a0_12 = CONVERT(Mem0[a5_5 + 0x2308DEB8<32>:byte], byte, word32)
	a5Out = <invalid>
	return a0_12
mbedtls_ssl_md_alg_from_hash_exit:


word32 mbedtls_ssl_hash_from_md_alg(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_client_step
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_hash_from_md_alg_entry:
l2305AC90:
	branch a0 >u 0xFFFFFFFA<32> l2305ACA8
l2305ACA8:
	return 0<32>
l2305AC98:
	return CONVERT(Mem0[a0 + 0x2308DEB9<32>:byte], byte, word32)
mbedtls_ssl_hash_from_md_alg_exit:


word32 mbedtls_ssl_check_curve(word32 a1, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_certificate
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
mbedtls_ssl_check_curve_entry:
l2305ACAC:
	word32 a5_12 = Mem0[a5 + 92<i32>:word32]
	branch a5_12 != 0<32> l2305ACBC
l2305ACBC:
	a4 = CONVERT(Mem0[a5_12:byte], byte, word32)
	branch a4 != 0<32> l2305ACB6
l2305ACB6:
	branch a4 == a1 l2305ACC4
l2305ACC4:
	a4Out = a4
	a5Out = a5_12
	return 0<32>
l2305ACBA:
	a5_12 = a5_12 + 1<32>
l2305ACC2:
l2305ACB2:
	a4Out = a4
	a5Out = a5_12
	return 0xFFFFFFFF<32>
mbedtls_ssl_check_curve_exit:


word32 mbedtls_ssl_check_cert_usage(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_certificate
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a5 s0 s1 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
mbedtls_ssl_check_cert_usage_entry:
l2305ACC8:
	word32 a1_19 = 128<i32>
	branch a2 != 1<32> l2305AD0C
l2305ACE2:
	word32 a5_21 = CONVERT(Mem11[a1 + 10<i32>:byte], byte, word32)
	a1_19 = 0<32>
	branch a5_21 >u 0xA<32> l2305AD0C
l2305ACEE:
	word32 a5_24 = a2 << a5_21
	a1_19 = 32<i32>
	branch (a5_24 & 130<i32>) != 0<32> l2305AD0C
l2305ACFC:
	a1_19 = 8<32>
	branch (a5_24 & 1536<i32>) != 0<32> l2305AD0C
l2305AD04:
	a1_19 = CONVERT((a5_24 & 0x1C<32>) != 0<32>, bool, word32) << 7<i32>
l2305AD0C:
	word32 a5_39
	word32 a3_133
	word32 a4_134
	branch mbedtls_x509_crt_check_key_usage(a0, a1_19, out a3_133, out a4_134, out a5_39) == 0<32> l2305AD28
l2305AD1A:
	Mem49[a5_39 | 0xFFF800<32>:word32] = Mem36[a5_39:word32]
l2305AD28:
	word32 a1_54
	branch a2 == 1<32> l2305AD58
l2305AD58:
	a1_54 = 0x23088E58<32>
l2305AD2E:
	a1_54 = 0x23088E64<32>
l2305AD36:
	word32 a0_62
	word32 s3_72
	word32 a5_123
	word32 s1_124
	word32 s0_69 = mbedtls_x509_crt_check_extended_key_usage(a0, a1_54, 8<32>, out s1_124, out a0_62, out a5_123, out s3_72)
	branch a0_62 == 0<32> l2305AD4A
l2305AD40:
	s1_124 = Mem77[a5_123:word32]
	Mem82[a5_123 | 0x1000000<32>:word32] = s1_124
	s0_69 = 0xFFFFFFFF<32>
	a5_123 = a5_123 | 0x1000000<32>
l2305AD4A:
	s1Out = s1_124
	a0Out = s0_69
	a5Out = a5_123
	s3Out = s3_72
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s0_69
mbedtls_ssl_check_cert_usage_exit:


word32 mbedtls_ssl_write_version(word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_write_record
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_handshake_client_step
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a5
// Preserved: sp
mbedtls_ssl_write_version_entry:
l2305AD62:
	word32 a0_14 = a0 & 255<i32>
	branch a2 != 1<32> l2305AD88
l2305AD88:
	Mem8[a3:byte] = SLICE(a0 & 255<i32>, byte, 0)
l2305AD6C:
	branch a1 != 2<32> l2305AD74
l2305AD72:
	a1 = 1<32>
l2305AD74:
	a0_14 = ~((a0 & 255<i32>) + 0xFFFFFFFE<32>)
	Mem16[a3:byte] = SLICE(a0_14, byte, 0)
	a1 = 0<32> - a1
l2305AD82:
	Mem21[a3 + 1<i32>:byte] = SLICE(a1, byte, 0)
	return a0_14
mbedtls_ssl_write_version_exit:


word32 mbedtls_ssl_write_record(word32 ra, word32 s1, word32 a0, word32 a5, word32 mstatus, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_resend
//      mbedtls_ssl_send_alert_message
//      mbedtls_ssl_write_certificate
//      mbedtls_ssl_write_change_cipher_spec
//      mbedtls_ssl_write_finished
//      mbedtls_ssl_write
//      mbedtls_ssl_handshake_client_step
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s11 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_write_record_entry:
l2305AD8E:
	word32 s1_1075
	word32 a1_1084
	word32 a2_1085
	word32 a4_1087
	word32 a5_1083
	word32 s11_1090
	word32 s4_1091
	word32 a5_129
	word32 s3_1074 = Mem22[a0 + 168<i32>:int32]
	word32 a5_32
	word32 s4_40
	word32 s5_41
	word32 s6_42
	word32 s8_1716
	word32 s9_1717
	word32 s10_1718
	word32 t4_1720
	word32 s11_1719
	word32 a4_1713
	word32 a7_1714
	word32 s7_1715
	word32 a3_133
	word32 a1_131
	word32 a2_132
	word32 a0_127 = mbedtls_debug_print_msg(ra, a0, 2<32>, 0x23089FE4<32>, a5, out a1_131, out a2_132, out a3_133, out a4_1713, out a5_32, out a7_1714, out s4_40, out s5_41, out s6_42, out s7_1715, out s8_1716, out s9_1717, out s10_1718, out s11_1719, out t4_1720)
	word32 sp_173 = fp + -96<i32>
	word32 s2_1062 = 0x2308A000<32>
	word32 s0_1058 = Mem22[a5_32:word32]
	word32 a5_51 = CONVERT(Mem22[a5_32 + 116<i32>:uint16], uint16, word32)
	branch (a5_51 & 2<32>) == 0<32> l2305ADDA
l2305ADCC:
	s0_1058 = Mem22[(a5_51 & 2<32>) + 48<i32>:word32]
	branch (a5_51 & 2<32>) == 0<32> l2305ADDA
l2305ADD0:
	a5_129 = 1<32>
	branch CONVERT(Mem22[(a5_51 & 2<32>) + 52<i32>:byte], byte, word32) == 1<32> l2305AEC0
l2305ADDA:
	word32 a4_58 = Mem22[s0_1058 + 164<i32>:int32]
	a5_129 = 0x16<32>
	branch a4_58 != 0x16<32> l2305AEC0
l2305ADE4:
	word32 a5_60 = Mem22[s0_1058 + 160<i32>:int32]
	s1 = CONVERT(Mem22[a5_60:byte], byte, word32)
	branch s1 == 0<32> l2305AE28
l2305ADEE:
	s0_1058 = Mem22[a4_58 + 48<i32>:word32]
	branch a4_58 != 0<32> l2305AE28
l2305AE28:
	Mem68[a5_60 + 1<i32>:byte] = SLICE(s3_1074 + -4<i32> >>u 0x10<u32>, byte, 0)
	Mem72[Mem68[s0_1058 + 160<i32>:int32] + 2<i32>:byte] = SLICE(s3_1074 + -4<i32> >>u 8<u32>, byte, 0)
	word32 a5_73 = Mem72[s0_1058 + 160<i32>:int32]
	Mem74[a5_73 + 3<i32>:byte] = SLICE(s3_1074 + -4<i32>, byte, 0)
	word32 a5_76 = CONVERT(Mem74[a5_73 + 116<i32>:uint16], uint16, word32)
	a2_132 = s3_1074 + -4<i32>
	word32 s0_102 = Mem74[a5_73:word32]
	a5_129 = a5_76 & 2<32>
	branch (a5_76 & 2<32>) == 0<32> l2305AEAE
l2305AE52:
	word32 a0_78 = Mem74[s0_102 + 160<i32>:int32]
	word32 a5_1759
	word32 a3_1757
	word32 a4_1758
	memmove(a0_78 + 0xC<32>, a0_78 + 4<i32>, s3_1074 + -4<i32>, out a3_1757, out a4_1758, out a5_1759)
	word32 a5_86 = Mem74[s0_102 + 168<i32>:int32]
	word32 a4_87 = Mem74[s0_102 + 160<i32>:int32]
	Mem89[s0_102 + 168<i32>:word32] = a5_86 + 8<32>
	s3_1074 = s3_1074 + 8<32>
	branch s1 == 0<32> l2305AF32
l2305AF32:
	Mem91[a4_87 + 4<i32>:byte] = 0<8>
	Mem93[Mem91[s0_102 + 160<i32>:int32] + 5<i32>:byte] = 0<8>
l2305AE72:
	Mem97[a4_87 + 4<i32>:byte] = SLICE(Mem89[a5_86 + 0x24<32>:word32] >>u 8<i32>, byte, 0)
	word32 a5_99 = Mem97[Mem97[a4_87 + 48<i32>:word32] + 160<i32>:int32]
	word32 a4_100 = Mem97[a4_87 + 28<i32>:word32]
	Mem101[a5_99 + 5<i32>:byte] = SLICE(a4_100, byte, 0)
	s0_102 = Mem101[a4_100 + 48<i32>:word32]
	Mem105[a5_99 + 0x1D<32>:word32] = Mem101[a5_99 + 28<i32>:word32]
l2305AE90:
	word32 t1_1794
	word32 a1_1796
	word32 a2_1797
	word32 a3_1798
	word32 a4_1799
	word32 a5_1800
	word32 a0_1795
	ra = memset(ra, Mem107[s0_102 + 160<i32>:int32] + 6<32>, 0<32>, 3<32>, out t1_1794, out a0_1795, out a1_1796, out a2_1797, out a3_1798, out a4_1799, out a5_1800)
	word32 a0_124 = Mem107[s0_102 + 160<i32>:int32]
	word32 a7_1803
	word32 a4_1801
	word32 a6_1802
	memcpy(a0_124 + 9<32>, a0_124 + 1<i32>, 3<32>, out a1_131, out a2_132, out a3_133, out a4_1801, out a5_129, out a6_1802, out a7_1803)
	a0_127 = a0_124 + 9<32>
l2305AEAE:
	branch s1 == 0<32> l2305AEC0
l2305AEB0:
	word32 s0_145 = Mem144[a5_129 + 48<i32>:word32]
	word32 a5_150 = Mem144[a5_129 + 196<i32>:int32]
	word32 a6_192
	word32 t5_199
	word32 t6_200
	word32 t2_1387
	word32 tp_1386
	call a5_150 (retsize: 0;)
		uses: a0:s0_145,a1:Mem144[s0_145 + 160<i32>:int32],a2:s3_147,a5:a5_150,a6:a6_192,mstatus:mstatus,ra:ra_156,s0:s0_145,s1:s1_61,s2:0x2308A000<32>,s3:s3_147,s4:s4_40,s5:s5_41,s6:s6_42,t2:t2_1387,t5:t5_199,t6:t6_200,tp:tp_1386
		defs: a0:a0_186,a1:a1_185,a2:a2_184,a3:a3_176,a5:a5_187,a6:a6_192,ra:ra_178,s1:s1_179,s2:s2_174,s3:s3_180,sp:sp_173,t2:t2_1387,t5:t5_199,t6:t6_200,tp:tp_1386
l2305AEC0:
	word32 s0_203 = Mem202[a5_129:word32]
	word32 a5_204 = CONVERT(Mem202[a5_129 + 116<i32>:uint16], uint16, word32)
	branch (a5_204 & 2<32>) == 0<32> l2305AF98
l2305AECA:
	s0_203 = Mem202[(a5_204 & 2<32>) + 48<i32>:word32]
	branch (a5_204 & 2<32>) == 0<32> l2305AF98
l2305AECE:
	branch CONVERT(Mem202[(a5_204 & 2<32>) + 52<i32>:byte], byte, word32) == 1<32> l2305AF98
l2305AED8:
	word32 a5_209 = Mem202[s0_203 + 164<i32>:int32]
	branch (a5_209 & 0xFFFFFFFD<32>) != 0x14<32> l2305AF98
l2305AEE4:
	word32 a3_230
	word32 a4_231
	word32 a5_232
	word32 s8_1734
	word32 a2_1732
	word32 s4_1733
	word32 s1_1730
	word32 a1_1731
	ra = mycalloc(ra, s1, 1<32>, 0x10<32>, a3_133, 0x14<32>, a5_209 & 0xFFFFFFFD<32>, mstatus, Mem202[sp_173 + 32<i32>:word32], Mem202[sp_173 + 36<i32>:word32], Mem202[sp_173 + 280<i32>:word32], Mem202[sp_173 + 344<i32>:word32], out s0_1058, out s1_1730, out a1_1731, out a2_1732, out a3_230, out a4_231, out a5_232, out s2_1062, out s3_1074, out s4_1733, out s8_1734)
	branch true l2305AF40
l2305AF40:
	word32 s0_255
	word32 s1_256
	word32 a5_1739
	word32 s4_1740
	word32 s8_1741
	word32 a2_1736
	word32 a3_1737
	word32 a4_1738
	word32 a1_1735
	ra = mycalloc(ra, 1<32>, 1<32>, Mem202[s0_1058 + 168<i32>:int32], a3_230, a4_231, a5_232, mstatus, Mem202[sp_173 + 32<i32>:word32], Mem202[sp_173 + 36<i32>:word32], Mem202[sp_173 + 280<i32>:word32], Mem202[sp_173 + 344<i32>:word32], out s0_255, out s1_256, out a1_1735, out a2_1736, out a3_1737, out a4_1738, out a5_1739, out s2_1062, out s3_1074, out s4_1740, out s8_1741)
	Mem265[1<32>:word32] = s1_256
	a0_127 = 1<32>
	word32 a5_266 = Mem265[s0_255 + 168<i32>:int32]
	branch true l2305AF74
l2305AF74:
	word32 a4_269
	word32 a6_1762
	word32 a7_1763
	word32 a3_1760
	word32 a5_1761
	memcpy(1<32>, Mem265[s0_255 + 160<i32>:int32], a5_266, out a1_131, out a2_132, out a3_1760, out a4_269, out a5_1761, out a6_1762, out a7_1763)
	Mem283[Mem265[s0_255 + 168<i32>:int32] + 4<i32>:word32] = s1_256
	word32 a5_284 = Mem283[s0_255 + 164<i32>:int32]
	Mem285[s1_256 + 12<i32>:word32] = 0<32>
	Mem286[s1_256 + 8<i32>:byte] = SLICE(a5_284, byte, 0)
	s0_203 = Mem286[a4_269 + 48<i32>:word32]
	word32 a4_288 = Mem286[a5_284 + 56<i32>:word32]
	branch a5_284 != 0<32> l2305B016
l2305B016:
	word32 a5_291 = Mem286[a4_288 + 12<i32>:word32]
	branch a4_288 != 0<32> l2305B014
l2305B014:
l2305B01A:
	Mem294[s1_256 + 12<i32>:word32] = a5_291
l2305AF96:
	Mem295[s1_256 + 56<i32>:word32] = a4_288
l2305AF98:
	word32 a5_1102
	word32 a3_1104
	word32 a5_299 = Mem298[s0_203 + 148<i32>:int32]
	Mem301[a5_299:byte] = Mem298[s0_203 + 0xA4<32>:byte]
	word32 s0_323 = Mem301[a0_127 + 8<i32>:word32]
	word32 a0_327 = mbedtls_ssl_write_version(a0_127, a1_131, a2_132 >>u 1<i32> & 1<32>, Mem301[Mem301[a5_299:word32] + 148<i32>:int32] + 1<32>)
	Mem335[Mem301[s0_323 + 152<i32>:int32]:byte] = SLICE(s3_1074 >>u 8<u32>, byte, 0)
	word32 a5_336 = Mem335[s0_323 + 152<i32>:int32]
	Mem337[a5_336 + 1<i32>:byte] = SLICE(s3_1074, byte, 0)
	word32 s0_338 = Mem337[a5_336 + 56<i32>:word32]
	branch a5_336 == 0<32> l2305B3E0
l2305AFD4:
	word32 a7_1842
	word32 a3_1840
	word32 a1_1838
	word32 s6_361
	word32 s11_1849
	word32 t4_1850
	word32 s4_1843
	word32 s9_1847
	word32 s5_1844
	word32 s10_1848
	word32 a4_1841
	word32 s8_1846
	word32 s7_1845
	word32 a2_1839
	word32 a5_1160
	mbedtls_debug_print_msg(ra, s0_338, 2<32>, 0x2308A020<32>, a5_336, out a1_1838, out a2_1839, out a3_1840, out a4_1841, out a5_1160, out a7_1842, out s4_1843, out s5_1844, out s6_361, out s7_1845, out s8_1846, out s9_1847, out s10_1848, out s11_1849, out t4_1850)
	s0_1058 = Mem337[a5_1160 + 36<i32>:word32]
	branch a5_1160 == 0<32> l2305AFF4
l2305AFF0:
	s0_1058 = Mem337[a5_1160 + 56<i32>:word32]
	branch a5_1160 != 0<32> l2305B01E
l2305B01E:
	word32 a5_371 = Mem337[a5_1160 + 80<i32>:word32]
	word32 s1_372 = 0<32>
	branch a5_371 == 0<32> l2305B028
l2305B024:
	s1_372 = CONVERT(Mem337[a5_371 + 1<i32>:byte], byte, word32)
l2305B028:
	word32 s5_400
	word32 a7_1853
	word32 a3_390
	word32 a4_391
	word32 a5_1852
	word32 a1_1851
	word32 a2_389
	word32 a0_386 = mbedtls_debug_print_buf(ra, 4<32>, Mem337[s0_1058 + 160<i32>:int32], out a1_1851, out a2_389, out a3_390, out a4_391, out a5_1852, out a7_1853)
	a5_1160 = 7<32>
	branch s1_372 == 7<32> l2305B056
l2305B04E:
	a5_1160 = 2<32>
	s5_400 = 0<32>
	branch s1_372 != 2<32> l2305B0F4
l2305B056:
	s0_1058 = Mem337[a5_1160 + 12<i32>:word32]
	branch a5_1160 <= 0<32> l2305B17E
l2305B17E:
l2305B05C:
	word32 a0_418
	word32 a4_420
	word32 a5_421
	word32 a0_427
	word32 a4_429
	word32 a5_430
	word32 a0_436
	word32 a4_438
	word32 a5_439
	word32 ra_440 = mbedtls_md_hmac_update(mbedtls_md_hmac_update(mbedtls_md_hmac_update(ra, a0_386 + 56<i32>, a4_391, a5_1160, Mem337[sp_173 + 16<i32>:word32], out a0_418, out a4_420, out a5_421), a0_418 + 56<i32>, a4_420, a5_421, Mem337[sp_173 + 16<i32>:word32], out a0_427, out a4_429, out a5_430), a0_427 + 56<i32>, a4_429, a5_430, Mem337[sp_173 + 16<i32>:word32], out a0_436, out a4_438, out a5_439)
	word32 s0_441 = Mem337[a0_436 + 56<i32>:word32]
	word32 a5_1870
	word32 a0_446
	word32 a4_448
	word32 ra_450 = mbedtls_md_hmac_update(ra_440, a0_436 + 56<i32>, a4_438, a5_439, Mem337[sp_173 + 16<i32>:word32], out a0_446, out a4_448, out a5_1870)
	word32 a5_451 = Mem337[s0_441 + 168<i32>:int32]
	word32 a5_1875
	word32 a4_1872
	word32 a4_1874
	word32 s0_1873
	word32 a2_1871
	word32 a0_458
	word32 a1_459
	word32 a5_462
	ra = mbedtls_md_hmac_reset(mbedtls_md_hmac_finish(ra_450, Mem337[a0_446 + 56<i32>:word32], s1_372, a0_446 + 56<i32>, Mem337[s0_441 + 160<i32>:int32] + a5_451, a4_448, a5_451, s2_1062, Mem337[sp_173 + 256<i32>:word32], Mem337[sp_173 + 260<i32>:word32], Mem337[sp_173 + 296<i32>:word32], out s1_372, out a0_458, out a1_459, out a2_1871, out a4_1872, out a5_462, out s2_1062), a0_458 + 56<i32>, a1_459, a5_462, out s0_1873, out a4_1874, out a5_1875)
	word32 s0_480 = Mem337[a3_390 + 56<i32>:word32]
	word32 a1_1876
	word32 a4_496
	word32 a5_1878
	word32 a7_1879
	word32 a3_1877
	a0_386 = mbedtls_debug_print_buf(ra, 4<32>, Mem337[s0_480 + 168<i32>:int32] + Mem337[s0_480 + 160<i32>:int32], out a1_1876, out a2_389, out a3_1877, out a4_496, out a5_1878, out a7_1879)
	s0_1058 = Mem337[a4_496 + 56<i32>:word32]
	Mem506[s0_1058 + 168<i32>:word32] = Mem337[s0_1058 + 168<i32>:int32] + Mem337[a4_496 + 20<i32>:word32]
	s5_400 = 1<32>
l2305B0F4:
	word32 a5_1112
	word32 a3_1114
	word32 s5_702
	word32 a5_508 = s1_372 + -6<i32>
	branch (a5_508 & 253<i32>) != 0<32> l2305B2B4
l2305B2B4:
	a5_1160 = 2<32>
	branch s1_372 != 2<32> l2305B3A2
l2305B3A2:
l2305B2BA:
	word32 s0_515 = Mem514[0x3A<32>:word32]
	Mem517[sp_173 + 24<i32>:word32] = 0<32>
	word32 a5_519 = Mem517[0xE<32>:word32]
	word32 s3_1376 = a5_519 - (Mem517[s0_515 + 168<i32>:int32] + 1<32> & a5_519)
	branch a5_519 != s3_1376 l2305B2D4
l2305B2D2:
	s3_1376 = 0<32>
l2305B2D4:
	word32 a4_524 = 0<32>
l2305B2D6:
	Mem533[Mem526[s0_515 + 160<i32>:int32] + a4_524 + Mem526[s0_515 + 168<i32>:int32]:byte] = SLICE(s3_1376, byte, 0)
	a4_524 = a4_524 + 1<32>
	branch s3_1376 >=u a4_524 l2305B2D6
l2305B2EC:
	word32 s1_631
	word32 s0_536 = Mem533[a4_524 + 12<i32>:word32]
	word32 s4_539 = Mem533[s0_515 + 168<i32>:int32] + 1<32> + s3_1376
	Mem540[s0_536 + 168<i32>:word32] = s4_539
	word32 a5_537 = 1<32>
	branch a4_524 > 1<32> l2305B358
l2305B358:
	word32 a2_592
	word32 a1_593
	word32 a0_594
	word32 a6_600
	word32 t5_607
	word32 t6_608
	word32 tp_610
	word32 t2_1388
	call a4_524 (retsize: 0;)
		uses: a0:a0_553,a1:Mem540[a2_548 + 12<i32>:word32] + 0x18<32>,a5:Mem540[a0_553 + 28<i32>:word32],a6:a6_600,mstatus:mstatus,ra:ra_561,s0:Mem540[1<32>:word32],s1:s1_507,s2:s2_558,s3:s3_1376,s4:s4_539,s5:s5_566,s6:s6_361,t2:t2_1388,t5:t5_607,t6:t6_608,tp:tp_610
		defs: a0:a0_594,a1:a1_593,a2:a2_592,a6:a6_600,mstatus:mstatus_609,ra:ra_586,s0:s0_585,s2:s2_582,s3:s3_588,sp:sp_581,t2:t2_1388,t5:t5_607,t6:t6_608,tp:tp_610
	s1_1075 = a0_594
	branch a0_594 != 0<32> l2305B246
l2305B36C:
	word32 a5_617
	word32 a1_1965
	word32 a2_1966
	word32 a3_1967
	word32 a4_1968
	word32 a6_1969
	word32 a7_1970
	memcpy(Mem540[Mem540[a1_593 + 56<i32>:word32] + 156<i32>:int32], Mem540[a2_592 + 12<i32>:word32] + 0x18<32>, a2_592, out a1_1965, out a2_1966, out a3_1967, out a4_1968, out a5_617, out a6_1969, out a7_1970)
	word32 s0_629 = Mem540[a5_617 + 56<i32>:word32]
	s1_631 = Mem540[s0_629 + 160<i32>:int32]
	a5_537 = Mem540[a5_617 + 12<i32>:word32] + Mem540[s0_629 + 168<i32>:int32]
	Mem634[s0_629 + 168<i32>:word32] = a5_537
l2305B300:
	s1_631 = Mem540[s0_536 + 160<i32>:int32]
l2305B304:
	word32 s0_638 = Mem637[a5_537 + 56<i32>:word32]
	word32 a2_654
	word32 s4_660
	word32 s5_661
	word32 s7_663
	word32 a1_1971
	word32 a3_1972
	word32 a4_1973
	word32 a5_1974
	word32 a7_1975
	word32 s6_1976
	word32 s8_1977
	word32 s9_1978
	word32 s10_1979
	word32 s11_1980
	word32 t4_1981
	mbedtls_debug_print_msg(ra, s0_638, 3<32>, 0x2308A0F4<32>, Mem637[s0_638 + 168<i32>:int32], out a1_1971, out a2_654, out a3_1972, out a4_1973, out a5_1974, out a7_1975, out s4_660, out s5_661, out s6_1976, out s7_663, out s8_1977, out s9_1978, out s10_1979, out s11_1980, out t4_1981)
	word32 a0_674 = Mem637[a2_654 + 12<i32>:word32]
	word32 a0_680
	word32 s4_692
	word32 s1_1982
	word32 a1_1983
	word32 a2_1984
	word32 a3_1985
	ra = mbedtls_cipher_crypt(ra, a0_674 + 80<i32>, a0_674 + 24<i32>, a2_654, s1_631, s4_660, s1_631, sp_173 + 48<i32>, s5_661, s7_663, Mem637[sp_173 + 8<i32>:word32], Mem637[sp_173 + 72<i32>:word32], Mem637[sp_173 + 104<i32>:word32], Mem637[sp_173 + 136<i32>:word32], Mem637[sp_173 + 180<i32>:word32], Mem637[sp_173 + 208<i32>:word32], Mem637[sp_173 + 212<i32>:word32], Mem637[sp_173 + 248<i32>:word32], Mem637[sp_173 + 296<i32>:word32], out s0_1058, out s1_1982, out a0_680, out a1_1983, out a2_1984, out a3_1985, out a5_1160, out s2_1062, out s3_1074, out s4_692, out s5_702)
	s1_1075 = a0_680
	branch a0_680 == 0<32> l2305B38E
l2305B38E:
	branch s4_692 == a5_1160 l2305B2A0
l2305B394:
l2305B348:
	a5_1112 = a0_680
	a3_1114 = 1515<i32>
l2305B100:
	word32 s0_714 = Mem514[(a5_508 & 253<i32>) + 56<i32>:word32]
	s3_1074 = 8<32>
	branch (CONVERT(Mem514[Mem514[a5_508 & 253<i32>:word32] + 28<i32>:byte], byte, word32) & 2<32>) != 0<32> l2305B110
l2305B10E:
	s3_1074 = 0x10<32>
l2305B110:
	word32 a0_725 = sp_173 + 48<i32>
	word32 a1_729
	word32 a2_730
	word32 a3_1895
	word32 a4_1896
	word32 a5_1897
	word32 a6_1898
	word32 a7_1899
	memcpy(a0_725, Mem514[s0_714 + 144<i32>:int32], 8<32>, out a1_729, out a2_730, out a3_1895, out a4_1896, out a5_1897, out a6_1898, out a7_1899)
	word32 a5_739 = Mem514[s0_714 + 164<i32>:int32]
	Mem742[sp_173 + 56<i32>:byte] = SLICE(a5_739, byte, 0)
	word32 s0_743 = Mem742[a5_739:word32]
	mbedtls_ssl_write_version(a0_725, a1_729, a2_730 >>u 1<i32> & 1<32>, sp_173 + 57<i32>)
	word32 a5_751 = Mem742[s0_743 + 168<i32>:int32]
	Mem755[sp_173 + 59<i32>:byte] = SLICE(a5_751 >>u 8<u32>, byte, 0)
	Mem757[sp_173 + 60<i32>:byte] = SLICE(a5_751, byte, 0)
	word32 a5_766
	word32 a4_770
	word32 a1_1900
	word32 a2_1901
	word32 a3_1902
	word32 a7_1903
	word32 a0_765 = mbedtls_debug_print_buf(ra, 4<32>, sp_173 + 48<i32>, out a1_1900, out a2_1901, out a3_1902, out a4_770, out a5_766, out a7_1903)
	s0_1058 = Mem757[a5_766 + 56<i32>:word32]
	a5_1160 = Mem757[a0_765 + 16<i32>:word32]
	branch a4_770 + 0xFFFFFFF8<32> == a0_765 l2305B18C
l2305B18C:
	word32 a1_1904
	word32 a2_1905
	word32 a3_1906
	word32 a4_1907
	word32 a5_1908
	word32 a6_1909
	word32 a7_1910
	memcpy(a0_765 + (a5_1160 + 0x18<32>), Mem757[s0_1058 + 144<i32>:int32], 8<32>, out a1_1904, out a2_1905, out a3_1906, out a4_1907, out a5_1908, out a6_1909, out a7_1910)
	word32 a5_801
	word32 a1_1911
	word32 a2_1912
	word32 a3_1913
	word32 a4_1914
	word32 a6_1915
	word32 a7_1916
	memcpy(Mem757[s0_1058 + 156<i32>:int32], Mem757[s0_1058 + 144<i32>:int32], 8<32>, out a1_1911, out a2_1912, out a3_1913, out a4_1914, out a5_801, out a6_1915, out a7_1916)
	word32 a5_825
	word32 a4_829
	word32 a1_1917
	word32 a2_1918
	word32 a3_1919
	word32 a7_1920
	mbedtls_debug_print_buf(ra, 4<32>, Mem757[Mem757[a5_801 + 56<i32>:word32] + 156<i32>:int32], out a1_1917, out a2_1918, out a3_1919, out a4_829, out a5_825, out a7_1920)
	word32 s0_835 = Mem757[a4_829 + 56<i32>:word32]
	word32 a7_837 = Mem757[s0_835 + 160<i32>:int32]
	word32 a5_842 = a5_825 + Mem757[s0_835 + 168<i32>:int32] - Mem757[Mem757[a5_825 + 12<i32>:word32] + 16<i32>:word32]
	Mem844[s0_835 + 168<i32>:word32] = a5_842
	Mem850[sp_173 + 140<i32>:word32] = a7_837
	word32 a2_854
	word32 a7_857
	word32 s4_860
	word32 s5_861
	word32 t4_869
	word32 a1_1921
	word32 a3_1922
	word32 a4_1923
	word32 a5_1924
	word32 s6_1925
	word32 s7_1926
	word32 s8_1927
	word32 s9_1928
	word32 s10_1929
	word32 s11_1930
	mbedtls_debug_print_msg(ra, s0_835, 3<32>, 0x2308A088<32>, a5_842, out a1_1921, out a2_854, out a3_1922, out a4_1923, out a5_1924, out a7_857, out s4_860, out s5_861, out s6_1925, out s7_1926, out s8_1927, out s9_1928, out s10_1929, out s11_1930, out t4_869)
	word32 a0_873 = Mem850[a2_854 + 12<i32>:word32]
	Mem875[sp_173:word32] = sp_173 + 44<i32>
	Mem878[sp_173 + 4<i32>:word32] = s3_1074
	Mem879[sp_173 + 128<i32>:word32] = a7_857 + s4_860
	word32 a0_885
	word32 s4_902
	word32 s5_903
	word32 s6_904
	ra = mbedtls_cipher_auth_encrypt(ra, a0_873 + 80<i32>, a0_873 + 24<i32>, a2_854, 0xD<32>, s4_860, s5_861, t4_869, Mem879[sp_173 + 56<i32>:word32], Mem879[sp_173 + 132<i32>:word32], Mem879[sp_173 + 168<i32>:word32], Mem879[sp_173 + 172<i32>:word32], Mem879[sp_173 + 296<i32>:word32], Mem879[sp_173 + 408<i32>:word32], out s0_1058, out a0_885, out a5_1160, out s2_1062, out s3_1074, out s4_902, out s5_903, out s6_904)
	s1_1075 = a0_885
	branch a0_885 == 0<32> l2305B264
l2305B264:
	branch s4_902 == a5_1160 l2305B278
l2305B278:
	Mem917[s0_1058 + 168<i32>:word32] = Mem879[s0_1058 + 168<i32>:int32] + s3_1074
	word32 a1_1931
	word32 a2_1932
	word32 a3_1933
	word32 a4_1934
	word32 a5_1935
	word32 a7_1936
	mbedtls_debug_print_buf(ra, 4<32>, s6_904, out a1_1931, out a2_1932, out a3_1933, out a4_1934, out a5_1935, out a7_1936)
	s5_702 = s5_903 + 1<32>
l2305B2A0:
	a5_1160 = 1<32>
	branch s5_702 == 1<32> l2305B3B0
l2305B3B0:
	word32 a1_1950
	word32 a2_1951
	word32 a3_1952
	word32 a4_1953
	word32 a5_1954
	word32 a7_1955
	word32 s4_1956
	word32 s5_1957
	word32 s6_1958
	word32 s7_1959
	word32 s8_1960
	word32 s9_1961
	word32 s10_1962
	word32 s11_1963
	word32 t4_1964
	a0_327 = mbedtls_debug_print_msg(ra, s0_1058, 2<32>, 0x2308A15C<32>, 1<32>, out a1_1950, out a2_1951, out a3_1952, out a4_1953, out a5_1954, out a7_1955, out s4_1956, out s5_1957, out s6_1958, out s7_1959, out s8_1960, out s9_1961, out s10_1962, out s11_1963, out t4_1964)
	word32 a5_967 = Mem966[s0_1058 + 168<i32>:int32]
	Mem970[Mem966[s0_1058 + 152<i32>:int32]:byte] = SLICE(a5_967 >>u 8<u32>, byte, 0)
	Mem972[Mem970[s0_1058 + 152<i32>:int32] + 1<i32>:byte] = SLICE(a5_967, byte, 0)
l2305B3E0:
	word32 s0_975 = Mem974[a0_327:word32]
	word32 a5_1804
	word32 a0_977 = mbedtls_ssl_hdr_len.isra.1(a0_327, out a5_1804)
	word32 a3_980 = Mem974[s0_975 + 152<i32>:int32]
	Mem983[s0_975 + 172<i32>:word32] = a0_977 + Mem974[s0_975 + 168<i32>:int32]
	word32 a4_988 = CONVERT(Mem983[a3_980 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem983[a3_980:byte], byte, word32)
	word32 a5_996 = CONVERT(Mem983[Mem983[s0_975 + 148<i32>:int32]:byte], byte, word32)
	Mem999[sp_173:word32] = CONVERT(SLICE(a4_988 >>u 8<i32> | a4_988 << 8<u32>, word16, 0), word16, word32)
	word32 s7_1814
	word32 s8_1815
	word32 s10_1817
	word32 t4_1819
	word32 s11_1818
	word32 s9_1816
	word32 s6_1813
	word32 a4_1808
	word32 a5_1809
	word32 a7_1810
	word32 s5_1812
	word32 s4_1811
	word32 a1_1805
	word32 a2_1806
	word32 a3_1807
	word32 a0_1007 = mbedtls_debug_print_msg(ra, s0_975, 3<32>, 0x2308A17C<32>, a5_996, out a1_1805, out a2_1806, out a3_1807, out a4_1808, out a5_1809, out a7_1810, out s4_1811, out s5_1812, out s6_1813, out s7_1814, out s8_1815, out s9_1816, out s10_1817, out s11_1818, out t4_1819)
	word32 s0_1026 = Mem999[a0_1007:word32]
	word32 a5_1820
	mbedtls_ssl_hdr_len.isra.1(a0_1007, out a5_1820)
	word32 a5_1039
	word32 a4_1824
	word32 a7_1825
	word32 a1_1821
	word32 a2_1822
	word32 a3_1823
	mbedtls_debug_print_buf(ra, 4<32>, Mem999[s0_1026 + 148<i32>:int32], out a1_1821, out a2_1822, out a3_1823, out a4_1824, out a5_1039, out a7_1825)
	word32 s11_1837
	word32 a0_1050
	word32 a5_1055
	word32 s10_1836
	word32 s4_1831
	word32 s5_1832
	word32 s6_1833
	word32 s9_1835
	word32 s7_1834
	word32 a2_1828
	word32 a3_1829
	word32 a4_1830
	word32 s1_1826
	word32 a1_1827
	s0_1058 = mbedtls_ssl_flush_output(ra, s0_1026, a5_1039, Mem999[sp_173 + 296<i32>:word32], out s1_1826, out a0_1050, out a1_1827, out a2_1828, out a3_1829, out a4_1830, out a5_1055, out s2_1062, out s3_1074, out s4_1831, out s5_1832, out s6_1833, out s7_1834, out s9_1835, out s10_1836, out s11_1837)
	s1_1075 = a0_1050
	branch a0_1050 == 0<32> l2305B47A
l2305B47A:
	word32 s8_1859
	word32 t4_1862
	word32 a3_1854
	word32 s5_1856
	word32 a7_1855
	word32 s6_1857
	word32 s7_1858
	word32 s10_1861
	word32 s9_1860
	mbedtls_debug_print_msg(ra, s0_1058, 2<32>, 0x2308A1F4<32>, a5_1055, out a1_1084, out a2_1085, out a3_1854, out a4_1087, out a5_1083, out a7_1855, out s4_1091, out s5_1856, out s6_1857, out s7_1858, out s8_1859, out s9_1860, out s10_1861, out s11_1090, out t4_1862)
l2305B46A:
	a5_1102 = a0_1050
	a3_1104 = s3_1074 + -1224<i32>
l2305B2A6:
l2305B26A:
l2305B22C:
	a5_1112 = a0_885
	a3_1114 = 1439<i32>
l2305B23A:
	word32 a1_1937
	word32 a2_1938
	word32 a3_1939
	word32 a4_1940
	word32 a5_1941
	word32 s4_1942
	word32 s5_1943
	word32 s6_1944
	word32 s7_1945
	word32 s8_1946
	word32 s9_1947
	word32 s10_1948
	word32 s11_1949
	mbedtls_debug_print_ret(ra, 1<32>, a3_1114, a5_1112, out a1_1937, out a2_1938, out a3_1939, out a4_1940, out a5_1941, out s4_1942, out s5_1943, out s6_1944, out s7_1945, out s8_1946, out s9_1947, out s10_1948, out s11_1949)
l2305B170:
l2305AFF4:
l2305B000:
	word32 a2_1881
	word32 a1_1880
	word32 a3_1882
	word32 a4_1883
	word32 a5_1884
	word32 a7_1885
	word32 s4_1886
	word32 s5_1887
	word32 s6_1888
	word32 s7_1889
	word32 s8_1890
	word32 s9_1891
	word32 s10_1892
	word32 s11_1893
	word32 t4_1894
	mbedtls_debug_print_msg(ra, s0_1058, 1<32>, 0x23088F14<32>, a5_1160, out a1_1880, out a2_1881, out a3_1882, out a4_1883, out a5_1884, out a7_1885, out s4_1886, out s5_1887, out s6_1888, out s7_1889, out s8_1890, out s9_1891, out s10_1892, out s11_1893, out t4_1894)
	s1_1075 = 0xF9000400<32>
l2305B246:
	a5_1102 = s1_1075
	a3_1104 = 0xFFFB22<32>
l2305B256:
	word32 s6_1865
	word32 s7_1866
	word32 s8_1867
	word32 s9_1868
	word32 s5_1864
	word32 s10_1869
	word32 a3_1863
	mbedtls_debug_print_ret(ra, 1<32>, a3_1104, a5_1102, out a1_1084, out a2_1085, out a3_1863, out a4_1087, out a5_1083, out s4_1091, out s5_1864, out s6_1865, out s7_1866, out s8_1867, out s9_1868, out s10_1869, out s11_1090)
l2305AF52:
	word32 a5_1229
	word32 a2_1231
	word32 s4_1768
	word32 s5_1769
	word32 s7_1771
	word32 s9_1773
	word32 s10_1774
	word32 s11_1775
	word32 t4_1776
	word32 s8_1772
	word32 s6_1770
	word32 a7_1767
	word32 a1_1764
	word32 a4_1766
	word32 a3_1765
	mbedtls_debug_print_msg(ra, s0_255, 1<32>, 0x23089FF4<32>, a5_266, out a1_1764, out a2_1231, out a3_1765, out a4_1766, out a5_1229, out a7_1767, out s4_1768, out s5_1769, out s6_1770, out s7_1771, out s8_1772, out s9_1773, out s10_1774, out s11_1775, out t4_1776)
	word32 s4_1785
	word32 t3_1786
	word32 a4_1782
	word32 a5_1783
	word32 a6_1784
	word32 a2_1780
	word32 a3_1781
	word32 a0_1778
	word32 a1_1779
	word32 s1_1777
	vPortFree(s1_256, a2_1231, a5_1229, mstatus, Mem265[sp_173 + 344<i32>:word32], Mem265[sp_173 + 408<i32>:word32], out s0_1058, out s1_1777, out a0_1778, out a1_1779, out a2_1780, out a3_1781, out a4_1782, out a5_1783, out a6_1784, out s4_1785, out t3_1786)
l2305AEF0:
	word32 a4_1745
	word32 a5_1746
	word32 s4_1748
	word32 s6_1750
	word32 s11_1755
	word32 t4_1756
	word32 s7_1751
	word32 s8_1752
	word32 s9_1753
	word32 s10_1754
	word32 s5_1749
	word32 a7_1747
	word32 a3_1744
	word32 a2_1743
	word32 a1_1742
	mbedtls_debug_print_msg(ra, s0_1058, 1<32>, 0x23089FF4<32>, 0x10<32>, out a1_1742, out a2_1743, out a3_1744, out a4_1745, out a5_1746, out a7_1747, out s4_1748, out s5_1749, out s6_1750, out s7_1751, out s8_1752, out s9_1753, out s10_1754, out s11_1755, out t4_1756)
l2305AF0C:
	word32 s8_1791
	word32 s9_1792
	word32 s10_1793
	word32 s7_1790
	word32 a3_1787
	word32 s6_1789
	word32 s5_1788
	mbedtls_debug_print_ret(ra, 1<32>, 0xFFFAF1<32>, 0xF8000100<32>, out a1_1084, out a2_1085, out a3_1787, out a4_1087, out a5_1083, out s4_1091, out s5_1788, out s6_1789, out s7_1790, out s8_1791, out s9_1792, out s10_1793, out s11_1090)
	s1_1075 = 0xF8000100<32>
l2305ADF2:
	word32 a7_1722
	word32 s5_1723
	word32 s7_1725
	word32 s9_1727
	word32 s10_1728
	word32 t4_1729
	word32 s8_1726
	word32 s6_1724
	word32 a3_1721
	mbedtls_debug_print_msg(ra, s0_1058, 1<32>, 0x23088F14<32>, a5_60, out a1_1084, out a2_1085, out a3_1721, out a4_1087, out a5_1083, out a7_1722, out s4_1091, out s5_1723, out s6_1724, out s7_1725, out s8_1726, out s9_1727, out s10_1728, out s11_1090, out t4_1729)
	s1_1075 = 0xF9000400<32>
l2305AE12:
	s0Out = s0_1058
	s1Out = dwArg28
	a0Out = s1_1075
	a1Out = a1_1084
	a2Out = a2_1085
	a3Out = dwArg08
	a4Out = a4_1087
	a5Out = a5_1083
	s2Out = s2_1062
	s3Out = s3_1074
	s4Out = s4_1091
	s5Out = s4
	s11Out = s11_1090
	mstatusOut = mstatus
	return dwArg68
mbedtls_ssl_write_record_exit:


word32 mbedtls_ssl_resend(word32 ra, word32 s0, word32 a0, word32 a5, word32 s2, word32 mstatus, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_fetch_input
//      mbedtls_ssl_prepare_handshake_record
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_read
//      mbedtls_ssl_handshake_client_step
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_resend_entry:
l2305B494:
	word32 a5_33
	word32 s4_480
	word32 s5_481
	word32 a7_479
	word32 s6_482
	word32 s7_483
	word32 s8_484
	word32 s9_485
	word32 s10_486
	word32 s11_487
	word32 t4_488
	word32 a3_208
	word32 a4_125
	word32 a2_128
	word32 a1_127
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x23089CF8<32>, a5, out a1_127, out a2_128, out a3_208, out a4_125, out a5_33, out a7_479, out s4_480, out s5_481, out s6_482, out s7_483, out s8_484, out s9_485, out s10_486, out s11_487, out t4_488)
	word32 s2_10 = 0x2308A000<32>
	word32 s0_51 = Mem30[a5_33 + 48<i32>:word32]
	word32 s1_116 = 1<32>
	word32 a5_113 = CONVERT(Mem30[a5_33 + 52<i32>:byte], byte, word32)
	branch a5_113 == 1<32> l2305B4FC
l2305B4D2:
	word32 a4_65
	word32 a1_489
	word32 a2_490
	word32 a3_491
	word32 a5_492
	word32 a7_493
	word32 s4_494
	word32 s5_495
	word32 s6_496
	word32 s7_497
	word32 s8_498
	word32 s9_499
	word32 s10_500
	word32 s11_501
	word32 t4_502
	mbedtls_debug_print_msg(ra, s0_51, 2<32>, 0x23089D10<32>, a5_113, out a1_489, out a2_490, out a3_491, out a4_65, out a5_492, out a7_493, out s4_494, out s5_495, out s6_496, out s7_497, out s8_498, out s9_499, out s10_500, out s11_501, out t4_502)
	word32 a5_81 = Mem30[a4_65 + 56<i32>:word32]
	Mem82[a4_65 + 60<i32>:word32] = a5_81
	ssl_swap_epochs(ra, a4_65, a5_81, out a1_127, out a2_128, out a3_208, out a4_125, out a5_113)
	Mem107[a5_113 + 52<i32>:byte] = 1<8>
l2305B4FC:
	word32 s3_108 = 0x1000000<32>
	word32 s4_109 = 0x16<32>
	word32 s5_110 = 0x14<32>
l2305B50A:
	word32 a5_249
	word32 a4_248
	word32 a3_245
	word32 a1_246
	word32 s10_252
	word32 s11_253
	word32 s5_255
	word32 s9_259
	word32 s7_257
	word32 s6_256
	word32 s0_115 = Mem114[a5_113 + 48<i32>:word32]
	word32 a5_117 = Mem114[s1_116 + 60<i32>:word32]
	branch s1_116 != 0<32> l2305B53C
l2305B53C:
	word32 a5_118 = CONVERT(Mem114[s1_116 + 8<i32>:byte], byte, word32)
	branch a5_118 != s4_109 l2305B554
l2305B544:
	word32 a5_121 = CONVERT(Mem114[a5_118:byte], byte, word32)
	branch a5_121 != s5_110 l2305B554
l2305B54E:
	word32 a3_527
	word32 a4_528
	word32 a5_529
	s0_115 = ssl_swap_epochs(ra, a4_125, a5_121, out a1_127, out a2_128, out a3_527, out a4_528, out a5_529)
l2305B554:
	word32 a4_158
	word32 a5_159
	word32 a1_514
	word32 a2_515
	word32 a3_516
	word32 a6_517
	word32 a7_518
	memcpy(Mem114[s0_115 + 160<i32>:int32], a1_127, a2_128, out a1_514, out a2_515, out a3_516, out a4_158, out a5_159, out a6_517, out a7_518)
	word32 s1_171 = Mem114[a5_159 + 4<i32>:word32]
	Mem176[s0_115 + 168<i32>:word32] = a5_159
	word32 a5_177 = CONVERT(Mem176[s1_171 + 8<i32>:byte], byte, word32)
	Mem182[s0_115 + 164<i32>:word32] = a5_177
	word32 s1_183 = Mem182[a4_158 + 12<i32>:word32]
	word32 s0_184 = Mem182[a5_177 + 48<i32>:word32]
	Mem186[a4_158 + 60<i32>:word32] = a5_177
	word32 a5_193
	word32 a1_519
	word32 a2_520
	word32 a3_521
	word32 a4_522
	word32 a7_523
	mbedtls_debug_print_buf(ra, 3<32>, Mem186[s0_184 + 160<i32>:int32], out a1_519, out a2_520, out a3_521, out a4_522, out a5_193, out a7_523)
	word32 a0_231
	word32 s0_524
	word32 s1_525
	word32 s11_526
	ra = mbedtls_ssl_write_record(ra, s1_183, s0_184, a5_193, mstatus, out s0_524, out s1_525, out a0_231, out a1_127, out a2_128, out a3_208, out a4_125, out a5_113, out s2_10, out s3_108, out s4_109, out s5_110, out s11_526, out mstatus)
	s1_116 = a0_231
	branch a0_231 == 0<32> l2305B50A
l2305B596:
	word32 a2_535
	word32 s4_536
	word32 s8_537
	mbedtls_debug_print_ret(ra, 1<32>, s3_108 + -1443<i32>, a0_231, out a1_246, out a2_535, out a3_245, out a4_248, out a5_249, out s4_536, out s5_255, out s6_256, out s7_257, out s8_537, out s9_259, out s10_252, out s11_253)
l2305B510:
	word32 s0_266 = Mem114[a3_208 + 4<i32>:word32]
	branch a3_208 != 0x10<32> l2305B5C8
l2305B5C8:
	Mem269[a5_117 + 52<i32>:byte] = 2<8>
	word32 s1_503
	word32 a1_504
	word32 a3_505
	word32 a4_506
	word32 s4_507
	word32 s5_508
	word32 s6_509
	word32 s7_510
	word32 s9_511
	word32 s10_512
	word32 s11_513
	ra = ssl_set_timer(ra, Mem269[a5_117 + 48<i32>:word32], a1_127, Mem269[a1_127 + 48<i32>:word32], s2, s0, out s0_266, out s1_503, out a1_504, out a3_505, out a4_506, out a5_117, out s4_507, out s5_508, out s6_509, out s7_510, out s9_511, out s10_512, out s11_513)
l2305B518:
	Mem300[a5_117 + 52<i32>:byte] = 3<8>
l2305B51E:
	word32 a2_530
	word32 a7_531
	word32 s4_532
	word32 s8_533
	word32 t4_534
	mbedtls_debug_print_msg(ra, s0_266, 2<32>, 0x23089D64<32>, a5_117, out a1_246, out a2_530, out a3_245, out a4_248, out a5_249, out a7_531, out s4_532, out s5_255, out s6_256, out s7_257, out s8_533, out s9_259, out s10_252, out s11_253, out t4_534)
	s1_116 = 0<32>
l2305B5B0:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_116
	a0Out = s1_116
	a1Out = a1_246
	a2Out = dwArgB8
	a3Out = a3_245
	a4Out = a4_248
	a5Out = a5_249
	s2Out = s2_10
	s3Out = s3_108
	s4Out = dwArg78
	s5Out = s5_255
	s6Out = s6_256
	s7Out = s7_257
	s9Out = s9_259
	s10Out = s10_252
	s11Out = s11_253
	mstatusOut = mstatus
	return ra
mbedtls_ssl_resend_exit:


word32 mbedtls_ssl_fetch_input(word32 ra, word32 s0, word32 a0, word32 a1, word32 a5, word32 s2, word32 mstatus, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 mstatus ra s0 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_fetch_input_entry:
l2305B5DA:
	word32 s10_1125
	word32 s11_1128
	word32 s5_1146
	word32 s6_1149
	word32 s7_1152
	word32 s9_1155
	word32 s1_135
	word32 a4_765
	word32 s0_258
	word32 a4_43
	word32 a7_1240
	word32 a3_1239
	word32 a1_1237
	word32 a2_1238
	word32 s6_1243
	word32 s4_1241
	word32 s5_1242
	word32 s11_1248
	word32 t4_1249
	word32 s7_1244
	word32 s8_1245
	word32 s9_1246
	word32 s10_1247
	word32 a5_113
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x23089054<32>, a5, out a1_1237, out a2_1238, out a3_1239, out a4_43, out a5_113, out a7_1240, out s4_1241, out s5_1242, out s6_1243, out s7_1244, out s8_1245, out s9_1246, out s10_1247, out s11_1248, out t4_1249)
	word32 s3_1135 = a1
	word32 s2_1131 = 0x2308A000<32>
	branch a5_113 != 0<32> l2305B656
l2305B618:
	s0_258 = Mem36[a5_113 + 24<i32>:word32]
	branch a5_113 != 0<32> l2305B656
l2305B656:
	word32 a4_65 = a5_113 - a4_43
	s0_258 = Mem36[a4_43 + 80<i32>:word32]
	a5_113 = 0x400013D<32> - a4_65
	branch a5_113 >=u a1 l2305B67E
l2305B67E:
	word32 s0_108
	word32 a5_71 = CONVERT(Mem36[a5_113 + 116<i32>:uint16], uint16, word32)
	a5_113 = a5_71 & 2<32>
	branch (a5_71 & 2<32>) == 0<32> l2305B8A2
l2305B8A2:
	s0_108 = Mem36[(a5_71 & 2<32>) + 116<i32>:word32]
	word32 s9_1269
	word32 a3_1261
	word32 a4_1262
	word32 a2_1260
	word32 a1_1259
	word32 s6_1266
	word32 s7_1267
	word32 s5_1265
	word32 a7_1263
	word32 s4_1264
	word32 s10_1270
	word32 t4_1272
	word32 s8_1268
	word32 s11_1271
	mbedtls_debug_print_msg(ra, s0_108, 2<32>, 0x230890E4<32>, a5_71 & 2<32>, out a1_1259, out a2_1260, out a3_1261, out a4_1262, out a5_113, out a7_1263, out s4_1264, out s5_1265, out s6_1266, out s7_1267, out s8_1268, out s9_1269, out s10_1270, out s11_1271, out t4_1272)
l2305B8D2:
	branch Mem109[s0_108 + 116<i32>:int32] >=u a1 l2305B818
l2305B8DA:
	word32 a0_115
	word32 a4_119
	word32 s7_128
	word32 a5_120
	word32 s6_127
	ra = ssl_check_timer(ra, s0_108, a5_113, out a0_115, out a4_119, out a5_120, out s6_127, out s7_128)
	s1_135 = s7_128
	branch a0_115 != 0<32> l2305B8FC
l2305B8E4:
	word32 a0_143
	branch a5_120 == 0<32> l2305B936
l2305B936:
	call a5_120 (retsize: 0;)
		uses: a5:a5_120,ra:ra_122,s0:Mem109[a5_120 + 20<i32>:word32]
		defs: a0:a0_143,a5:a5_148,ra:ra_150,s6:s6_155
l2305B8F4:
	call a5_120 (retsize: 0;)
		uses: a5:a5_120,ra:ra_122,s0:Mem109[a4_119:word32]
		defs: a0:a0_165,a5:a5_170,ra:ra_172,s6:s6_177
l2305B8FA:
	s1_135 = a0_143
l2305B8FC:
	word32 s5_219
	word32 a2_1274
	word32 a1_1273
	word32 s8_1282
	word32 a5_1277
	word32 a4_1276
	word32 a3_1275
	word32 s6_1280
	word32 s4_1279
	word32 a7_1278
	word32 s7_1281
	word32 s9_1283
	word32 s11_1285
	word32 s10_1284
	word32 t4_1286
	mbedtls_debug_print_msg(ra, Mem109[a5_120 + 116<i32>:word32], 2<32>, s6_127 + 228<i32>, a5_120, out a1_1273, out a2_1274, out a3_1275, out a4_1276, out a5_1277, out a7_1278, out s4_1279, out s5_219, out s6_1280, out s7_1281, out s8_1282, out s9_1283, out s10_1284, out s11_1285, out t4_1286)
	word32 a4_1290
	word32 a2_1288
	word32 a1_1287
	word32 s8_1292
	word32 a3_1289
	word32 s4_1291
	mbedtls_debug_print_ret(ra, 2<32>, s5_219, s1_135, out a1_1287, out a2_1288, out a3_1289, out a4_1290, out a5_113, out s4_1291, out s5_1146, out s6_1149, out s7_1152, out s8_1292, out s9_1155, out s10_1125, out s11_1128)
	branch s1_135 == 0<32> l2305B7F0
l2305B92A:
	branch s1_135 < 0<32> l2305B63A
l2305B92E:
	s0_108 = Mem109[a5_113 + 116<i32>:word32]
	Mem257[s1_135 + a5_113 + 116<i32>:word32] = s0_108
l2305B68A:
	s0_258 = Mem36[(a5_71 & 2<32>) + 72<i32>:word32]
	branch (a5_71 & 2<32>) == 0<32> l2305B692
l2305B68E:
	s0_258 = Mem36[(a5_71 & 2<32>) + 76<i32>:word32]
	branch (a5_71 & 2<32>) != 0<32> l2305B6A2
l2305B6A2:
	branch (a5_71 & 2<32>) == 0<32> l2305B6FE
l2305B6A6:
	s0_108 = Mem36[a4_65 + 116<i32>:word32]
	branch a4_65 >=u (a5_71 & 2<32>) l2305B6CE
l2305B6CE:
	word32 a4_262 = a4_65 - (a5_71 & 2<32>)
	Mem263[a4_262 + 116<i32>:word32] = s0_108
	branch a4_262 == 0<32> l2305B6FA
l2305B6D4:
	word32 a7_1319
	word32 a1_273
	word32 a2_274
	word32 s10_1326
	word32 s11_1327
	word32 t4_1328
	word32 s8_1324
	word32 s9_1325
	word32 s7_1323
	word32 s5_1321
	word32 s6_1322
	word32 s4_1320
	word32 a3_1316
	word32 a5_1318
	word32 a4_1317
	word32 a0_271 = mbedtls_debug_print_msg(ra, s0_108, 2<32>, 0x230890B8<32>, a5_71 & 2<32>, out a1_273, out a2_274, out a3_1316, out a4_1317, out a5_1318, out a7_1319, out s4_1320, out s5_1321, out s6_1322, out s7_1323, out s8_1324, out s9_1325, out s10_1326, out s11_1327, out t4_1328)
	s0_108 = Mem263[a2_274 + 116<i32>:word32]
	word32 a3_1329
	word32 a4_1330
	memmove(a0_271, a1_273 + a0_271, a2_274, out a3_1329, out a4_1330, out a5_113)
l2305B6FA:
	Mem299[s0_108 + 124<i32>:word32] = 0<32>
l2305B6FE:
	word32 t4_1315
	word32 s9_1312
	word32 s10_1313
	word32 s11_1314
	word32 s4_1307
	word32 s5_1308
	word32 s6_1309
	word32 s7_1310
	word32 s8_1311
	word32 a4_1305
	word32 a7_1306
	word32 a3_1304
	word32 a1_1302
	word32 a2_1303
	mbedtls_debug_print_msg(ra, Mem302[a5_113 + 116<i32>:word32], 2<32>, 0x230890E4<32>, a5_113, out a1_1302, out a2_1303, out a3_1304, out a4_1305, out a5_113, out a7_1306, out s4_1307, out s5_1308, out s6_1309, out s7_1310, out s8_1311, out s9_1312, out s10_1313, out s11_1314, out t4_1315)
	s0_108 = Mem302[a5_113 + 116<i32>:word32]
	branch a5_113 <u a1 l2305B73E
l2305B73E:
	branch a5_113 == 0<32> l2305B74E
l2305B74E:
	word32 a0_339
	word32 a4_343
	word32 s6_1331
	word32 s7_1332
	ra = ssl_check_timer(ra, s0_108, a5_113, out a0_339, out a4_343, out a5_113, out s6_1331, out s7_1332)
	branch a0_339 == 0<32> l2305B788
l2305B788:
	word32 s0_367
	branch a4_343 == 0x10<32> l2305B7F8
l2305B7F8:
	s0_367 = Mem302[0x10<32>:word32]
	s3_1135 = Mem302[0x74<32>:int32]
l2305B7A0:
	s0_367 = Mem302[0x40<32>:word32]
	s3_1135 = Mem302[0x40<32>:int32]
l2305B7A6:
	word32 a0_409
	word32 a5_384
	word32 a1_385
	word32 a4_388
	word32 a2_1406
	word32 a3_1407
	word32 a7_1408
	word32 s4_1409
	word32 s5_1410
	word32 s6_1411
	word32 s7_1412
	word32 s8_1413
	word32 s9_1414
	word32 s10_1415
	word32 s11_1416
	word32 t4_1417
	word32 a0_383 = mbedtls_debug_print_msg(ra, s0_367, 3<32>, 0x23089118<32>, s3_1135, out a1_385, out a2_1406, out a3_1407, out a4_388, out a5_384, out a7_1408, out s4_1409, out s5_1410, out s6_1411, out s7_1412, out s8_1413, out s9_1414, out s10_1415, out s11_1416, out t4_1417)
	s0_108 = Mem302[a0_383 + 28<i32>:word32]
	branch a5_384 == 0<32> l2305B800
l2305B800:
	call a5_384 (retsize: 0;)
		uses: a0:a0_383,a1:a1_385,a4:a4_388,a5:a5_384,ra:ra_346
		defs: a0:a0_409
	s0_108 = Mem302[a5_384 + 20<i32>:word32]
l2305B7CA:
	call a5_384 (retsize: 0;)
		uses: a0:a0_383,a1:a1_385,a4:a4_388,a5:a5_384,ra:ra_346
		defs: a0:a0_430
l2305B7D0:
	word32 a1_1399
	word32 a2_1400
	word32 a3_1401
	word32 a4_1402
	word32 a5_1403
	word32 s4_1404
	word32 s8_1405
	mbedtls_debug_print_ret(ra, 2<32>, 0xFFF925<32>, a0_409, out a1_1399, out a2_1400, out a3_1401, out a4_1402, out a5_1403, out s4_1404, out s5_1146, out s6_1149, out s7_1152, out s8_1405, out s9_1155, out s10_1125, out s11_1128)
	s1_135 = a0_409
	branch a0_409 != 0<32> l2305B808
l2305B808:
	a5_113 = 0xF9FFF800<32>
	branch a0_409 == 0xF9FFF800<32> l2305B756
l2305B812:
	branch a0_409 < 0<32> l2305B63A
l2305B816:
	Mem484[a0_409 + 116<i32>:word32] = s0_108
l2305B818:
l2305B7F0:
	s1_135 = 0xF8FFFD80<32>
l2305B756:
	word32 a1_1342
	word32 a2_1343
	word32 a3_1344
	word32 s5_1348
	word32 s6_1349
	word32 a7_1346
	word32 s4_1347
	word32 s9_1352
	word32 a4_1345
	word32 s7_1350
	word32 s8_1351
	word32 t4_1355
	word32 s11_1354
	word32 s10_1353
	word32 a5_503
	mbedtls_debug_print_msg(ra, s0_108, 2<32>, 0x23089110<32>, a5_113, out a1_1342, out a2_1343, out a3_1344, out a4_1345, out a5_503, out a7_1346, out s4_1347, out s5_1348, out s6_1349, out s7_1350, out s8_1351, out s9_1352, out s10_1353, out s11_1354, out t4_1355)
	word32 s0_1356
	word32 a1_1358
	word32 s4_1360
	word32 a5_1359
	word32 a3_534
	word32 a4_535
	word32 s1_1357
	ra = ssl_set_timer(ra, s0_108, 0<32>, a5_503, s2, s0, out s0_1356, out s1_1357, out a1_1358, out a3_534, out a4_535, out a5_1359, out s4_1360, out s5_1146, out s6_1149, out s7_1152, out s9_1155, out s10_1125, out s11_1128)
	branch a4_535 != 0x10<32> l2305B828
l2305B828:
	word32 s0_557 = Mem302[0x10<32>:word32]
	word32 a2_558 = Mem302[a3_534 + 48<i32>:word32]
	word32 a5_559 = Mem302[0x7C<32>:word32]
	branch a3_534 <u a5_559 l2305B84E
l2305B84E:
	branch a3_534 << 1<u32> <u a3_534 l2305B85C
l2305B856:
	branch a3_534 << 1<u32> >=u a5_559 l2305B85C
l2305B85A:
	a5_559 = a3_534 << 1<u32>
l2305B85C:
	Mem564[a5_559 + 48<i32>:word32] = a2_558
	word32 s0_565 = Mem564[a5_559 + 48<i32>:word32]
	word32 a2_1371
	word32 a1_1370
	word32 a7_1374
	word32 a5_576
	word32 s7_1378
	word32 s8_1379
	word32 s4_1375
	word32 a4_1373
	word32 a3_1372
	word32 s10_1381
	word32 s11_1382
	word32 s6_1377
	word32 s9_1380
	word32 s5_1376
	word32 t4_1383
	mbedtls_debug_print_msg(ra, s0_565, 3<32>, 0x23089DAC<32>, Mem564[a5_559 + 48<i32>:word32], out a1_1370, out a2_1371, out a3_1372, out a4_1373, out a5_576, out a7_1374, out s4_1375, out s5_1376, out s6_1377, out s7_1378, out s8_1379, out s9_1380, out s10_1381, out s11_1382, out t4_1383)
	word32 a0_633
	word32 s0_1384
	word32 s1_1385
	word32 a2_1387
	word32 a1_1386
	word32 a3_1388
	word32 a5_1390
	word32 s4_1391
	word32 a4_1389
	ra = mbedtls_ssl_resend(ra, s0_565, s0_565, a5_576, 0x2308A000<32>, mstatus, dwArgF8, out s0_1384, out s1_1385, out a0_633, out a1_1386, out a2_1387, out a3_1388, out a4_1389, out a5_1390, out s2_1131, out s3_1135, out s4_1391, out s5_1146, out s6_1149, out s7_1152, out s9_1155, out s10_1125, out s11_1128, out mstatus)
	s1_135 = a0_633
	branch a0_633 == 0<32> l2305B93C
l2305B93C:
	s1_135 = 0xF9000700<32>
l2305B884:
	word32 a2_1393
	word32 a3_1394
	word32 a1_1392
	word32 a4_1395
	word32 a5_1396
	word32 s4_1397
	word32 s8_1398
	mbedtls_debug_print_ret(ra, 1<32>, 0xFFF93A<32>, a0_633, out a1_1392, out a2_1393, out a3_1394, out a4_1395, out a5_1396, out s4_1397, out s5_1146, out s6_1149, out s7_1152, out s8_1398, out s9_1155, out s10_1125, out s11_1128)
l2305B834:
	word32 a1_1361
	word32 a5_1365
	word32 s8_1368
	word32 a3_1363
	word32 a2_1362
	word32 a7_1366
	word32 s4_1367
	word32 a4_1364
	word32 t4_1369
	mbedtls_debug_print_msg(ra, s0_557, 1<32>, 0x2307C948<32>, a5_559, out a1_1361, out a2_1362, out a3_1363, out a4_1364, out a5_1365, out a7_1366, out s4_1367, out s5_1146, out s6_1149, out s7_1152, out s8_1368, out s9_1155, out s10_1125, out s11_1128, out t4_1369)
l2305B780:
	s1_135 = 0xF9FFF800<32>
l2305B740:
l2305B722:
l2305B72E:
	word32 s8_1300
	word32 t4_1301
	word32 a4_1296
	word32 a5_1297
	word32 s4_1299
	word32 a7_1298
	word32 a1_1293
	word32 a3_1295
	word32 a2_1294
	mbedtls_debug_print_msg(ra, s0_108, 2<32>, 0x23089100<32>, a5_113, out a1_1293, out a2_1294, out a3_1295, out a4_1296, out a5_1297, out a7_1298, out s4_1299, out s5_1146, out s6_1149, out s7_1152, out s8_1300, out s9_1155, out s10_1125, out s11_1128, out t4_1301)
	s1_135 = 0<32>
l2305B6AC:
l2305B6BA:
	word32 a2_1334
	word32 s4_1339
	word32 t4_1341
	word32 s8_1340
	word32 a7_1338
	word32 a3_1335
	word32 a5_1337
	word32 a4_1336
	word32 a1_1333
	mbedtls_debug_print_msg(ra, s0_108, 1<32>, 0x23088F14<32>, a5_113, out a1_1333, out a2_1334, out a3_1335, out a4_1336, out a5_1337, out a7_1338, out s4_1339, out s5_1146, out s6_1149, out s7_1152, out s8_1340, out s9_1155, out s10_1125, out s11_1128, out t4_1341)
	s1_135 = 0xF9000400<32>
l2305B692:
	a4_765 = 0x23089084<32>
l2305B66A:
	a4_765 = 0x23089064<32>
l2305B678:
l2305B61C:
	a4_765 = 0x2308916C<32>
l2305B62C:
	word32 s8_1257
	word32 a1_1250
	word32 a4_1253
	word32 a2_1251
	word32 a3_1252
	word32 s4_1256
	word32 a5_1254
	word32 a7_1255
	word32 t4_1258
	mbedtls_debug_print_msg(ra, s0_258, 1<32>, a4_765, a5_113, out a1_1250, out a2_1251, out a3_1252, out a4_1253, out a5_1254, out a7_1255, out s4_1256, out s5_1146, out s6_1149, out s7_1152, out s8_1257, out s9_1155, out s10_1125, out s11_1128, out t4_1258)
	s1_135 = 0xF8FFFF00<32>
l2305B63A:
	0<32> = dwArg0128
	s0Out = s4
	a0Out = s1_135
	s2Out = s2_1131
	s3Out = s3_1135
	s4Out = dwArg78
	s5Out = s5_1146
	s6Out = s6_1149
	s7Out = s7_1152
	s8Out = s5
	s9Out = s9_1155
	s10Out = s10_1125
	s11Out = s11_1128
	mstatusOut = mstatus
	return ra
mbedtls_ssl_fetch_input_exit:


word32 mbedtls_ssl_prepare_handshake_record(word32 ra, word32 a4, word32 a5, word32 mstatus, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handle_message_type
// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a4 mstatus ra s1 s11 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_prepare_handshake_record_entry:
l2305B944:
	word32 a0_23 = Mem21[a4:word32]
	word32 a4_27 = CONVERT(Mem21[a4 + 116<i32>:uint16], uint16, word32)
	word32 a3_28 = 0xC<32>
	branch (a4_27 & 2<32>) != 0<32> l2305B96A
l2305B968:
	a3_28 = 4<32>
l2305B96A:
	word32 a1_1283
	word32 a4_112
	word32 s11_1002
	word32 s1_1013
	word32 s2_1321 = 0x2308A000<32>
	branch a5 >=u a3_28 l2305B9AA
l2305B9AA:
	word32 s0_36 = Mem21[(a4_27 & 2<32>) + 100<i32>:word32]
	Mem48[s0_36 + 128<i32>:word32] = (CONVERT(Mem21[(a4_27 & 2<32>) + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem21[(a4_27 & 2<32>) + 2<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem21[(a4_27 & 2<32>) + 3<i32>:byte], byte, word32)) + a3_28
	word32 a5_56
	word32 a3_59
	word32 s9_1455
	word32 s10_1456
	word32 t4_1457
	word32 s8_1454
	word32 s4_1450
	word32 s6_1452
	word32 s5_1451
	word32 a2_1448
	word32 a7_1449
	word32 s7_1453
	word32 a0_55 = mbedtls_debug_print_msg(ra, s0_36, 3<32>, 0x23089570<32>, a5, out a1_1283, out a2_1448, out a3_59, out a4_112, out a5_56, out a7_1449, out s4_1450, out s5_1451, out s6_1452, out s7_1453, out s8_1454, out s9_1455, out s10_1456, out s11_1002, out t4_1457)
	s3 = 0x1000000<32>
	branch (CONVERT(Mem48[a5_56 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305BE48
l2305BE48:
	word32 s0_77 = Mem48[a4_112 + 112<i32>:word32]
	word32 a5_78 = Mem48[s0_77 + 128<i32>:int32]
	branch a4_112 >=u a5_78 l2305BB18
l2305BE52:
	word32 s9_1516
	word32 s10_1517
	word32 t4_1518
	word32 a7_1510
	word32 a2_1507
	word32 a3_1508
	word32 a5_1509
	word32 s5_1512
	word32 s7_1514
	word32 s6_1513
	word32 s8_1515
	word32 s4_1511
	mbedtls_debug_print_msg(ra, s0_77, 1<32>, 0x2308981C<32>, a5_78, out a1_1283, out a2_1507, out a3_1508, out a4_112, out a5_1509, out a7_1510, out s4_1511, out s5_1512, out s6_1513, out s7_1514, out s8_1515, out s9_1516, out s10_1517, out s11_1002, out t4_1518)
	s1_1013 = 0xF8FFFF80<32>
l2305B9F4:
	word32 a5_848
	word32 a3_850
	word32 s0_107 = Mem48[a0_55 + 100<i32>:word32]
	branch a3_59 == 0<32> l2305BA92
l2305B9FA:
	word32 a5_111 = CONVERT(Mem48[a0_55 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem48[a0_55 + 4<i32>:byte], byte, word32)
	a4_112 = a5_111 << 8<u32>
	word32 a3_115 = Mem48[(a5_111 << 8<u32>) + 32<i32>:word32]
	word32 a5_117 = CONVERT(SLICE(a5_111 >>u 8<i32> | a5_111 << 8<u32>, word16, 0), word16, word32)
	branch a5_111 << 8<u32> == a5_117 l2305BA92
l2305BA92:
	word32 s0_120 = Mem48[a4_112 + 112<i32>:word32]
	word32 a5_121 = Mem48[s0_120 + 128<i32>:int32]
	branch a4_112 >=u a5_121 l2305BAF2
l2305BAF2:
	word32 a4_1522
	word32 a1_1519
	word32 a2_1520
	word32 a3_1521
	word32 a0_127 = memcmp(a0_55 + 6<32>, 0x23088E44<32>, 3<32>, out a1_1519, out a2_1520, out a3_1521, out a4_1522, out a5_121)
	branch a0_127 != 0<32> l2305BA9C
l2305BB04:
	s0_120 = Mem48[a0_127 + 100<i32>:word32]
	word32 a2_1583
	word32 a3_1584
	branch memcmp(a0_127 + 9<32>, a0_127 + 1<i32>, 3<32>, out a1_1283, out a2_1583, out a3_1584, out a4_112, out a5_121) != 0<32> l2305BA9C
l2305BB14:
	s0_120 = Mem48[a5_121 + 48<i32>:word32]
	branch a5_121 != 0<32> l2305BB1C
l2305BB1C:
	a5_121 = Mem48[a5_121 + 44<i32>:word32]
	branch a5_121 != 0<32> l2305BA9C
l2305BB20:
l2305BA9C:
	word32 a4_723
	word32 a1_160
	word32 a3_1524
	word32 a2_1523
	word32 s4_1527
	word32 a7_1526
	word32 a4_1525
	word32 s5_1528
	word32 s6_1529
	word32 s8_1531
	word32 s7_1530
	word32 s11_1534
	word32 t4_1535
	word32 s10_1533
	word32 s9_1532
	word32 a5_159
	word32 a0_158 = mbedtls_debug_print_msg(ra, s0_120, 2<32>, 0x23089638<32>, a5_121, out a1_160, out a2_1523, out a3_1524, out a4_1525, out a5_159, out a7_1526, out s4_1527, out s5_1528, out s6_1529, out s7_1530, out s8_1531, out s9_1532, out s10_1533, out s11_1534, out t4_1535)
	word32 s0_178 = Mem48[a5_159 + 48<i32>:word32]
	word32 s4_179 = Mem48[s0_178 + 128<i32>:int32]
	word32 s5_180 = s4_179 + -12<i32>
	branch a5_159 != 0<32> l2305BB22
l2305BB22:
	word32 a5_185
	branch a0_158 != 0<32> l2305BC2A
l2305BC2A:
	word32 s0_182 = Mem48[a1_160 + 100<i32>:word32]
	word32 a4_1549
	word32 a3_1548
	word32 a2_1547
	word32 a1_1546
	branch memcmp(a0_158, a1_160, 4<32>, out a1_1546, out a2_1547, out a3_1548, out a4_1549, out a5_185) == 0<32> l2305BBCA
l2305BC34:
	word32 a1_1619
	word32 a2_1620
	word32 a3_1621
	word32 a4_1622
	word32 a5_1623
	word32 a7_1624
	word32 s4_1625
	word32 s5_1626
	word32 s6_1627
	word32 s7_1628
	word32 s8_1629
	word32 s9_1630
	word32 s10_1631
	word32 s11_1632
	word32 t4_1633
	mbedtls_debug_print_msg(ra, s0_182, 1<32>, 0x230896EC<32>, a5_185, out a1_1619, out a2_1620, out a3_1621, out a4_1622, out a5_1623, out a7_1624, out s4_1625, out s5_1626, out s6_1627, out s7_1628, out s8_1629, out s9_1630, out s10_1631, out s11_1632, out t4_1633)
l2305BB28:
	word32 a3_226
	word32 s4_231
	word32 s9_1558
	word32 t4_1561
	word32 a2_1551
	word32 a5_1553
	word32 a7_1554
	word32 a4_1552
	word32 a1_1550
	word32 s8_1557
	word32 s6_1555
	word32 s7_1556
	word32 s10_1559
	word32 s11_1560
	mbedtls_debug_print_msg(ra, s0_178, 2<32>, 0x2308968C<32>, s4_179 + -12<i32>, out a1_1550, out a2_1551, out a3_226, out a4_1552, out a5_1553, out a7_1554, out s4_231, out s5_180, out s6_1555, out s7_1556, out s8_1557, out s9_1558, out s10_1559, out s11_1560, out t4_1561)
	a5_159 = 0x4000000<32>
	branch Mem48[s0_178 + 128<i32>:int32] <=u 0x4000000<32> l2305BB5A
l2305BB5A:
	word32 a4_245 = (s5_180 >>u 3<u32>) + s4_231
	word32 a5_247 = CONVERT((s5_180 & 7<i32>) != 0<32>, bool, word32) + a4_245
	word32 a1_259
	word32 a4_262
	word32 a5_263
	word32 s1_1563
	word32 s0_1562
	word32 s4_1566
	word32 s8_1567
	word32 a2_1564
	word32 a3_1565
	ra = mycalloc(ra, 0x1000000<32>, 1<32>, a5_247, a3_226, a4_245, a5_247, mstatus, dwLoc20, dwLoc1C, dwArgD8, dwArg0118, out s0_1562, out s1_1563, out a1_259, out a2_1564, out a3_1565, out a4_262, out a5_263, out s2_1321, out s3, out s4_1566, out s8_1567)
	Mem276[s3 + 44<i32>:word32] = 1<32>
	word32 s0_277 = Mem276[a4_262 + 48<i32>:word32]
	branch true l2305BBA4
l2305BBA4:
	word32 a1_1585
	word32 a2_1586
	word32 a3_1587
	word32 a4_1588
	word32 a5_1589
	word32 a6_1590
	word32 a7_1591
	memcpy(1<32>, a1_259, 6<32>, out a1_1585, out a2_1586, out a3_1587, out a4_1588, out a5_1589, out a6_1590, out a7_1591)
	word32 a0_300
	word32 t1_1592
	word32 a1_1593
	word32 a2_1594
	word32 a3_1595
	word32 a4_1596
	word32 a5_1597
	ra = memset(ra, 7<32>, 0<32>, 3<32>, out t1_1592, out a0_300, out a1_1593, out a2_1594, out a3_1595, out a4_1596, out a5_1597)
	word32 a1_1598
	word32 a2_1599
	word32 a3_1600
	word32 a4_1601
	word32 a6_1602
	word32 a7_1603
	memcpy(a0_300 + 9<32>, a0_300 + 1<i32>, 3<32>, out a1_1598, out a2_1599, out a3_1600, out a4_1601, out a5_185, out a6_1602, out a7_1603)
l2305BBCA:
	s3 = CONVERT(Mem328[a5_185 + 6<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem328[a5_185 + 7<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem328[a5_185 + 8<i32>:byte], byte, word32)
	word32 s1_347 = CONVERT(Mem328[a5_185 + 9<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem328[a5_185 + 10<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem328[a5_185 + 11<i32>:byte], byte, word32)
	word32 s0_331 = Mem328[a5_185 + 100<i32>:word32]
	branch s5_180 >=u s3 + s1_347 l2305BC54
l2305BC54:
	branch Mem328[s0_331 + 112<i32>:int32] >=u s1_347 + 12<i32> l2305BC7E
l2305BC7E:
	word32 a1_365
	word32 s4_372
	word32 s5_373
	word32 s7_375
	word32 a2_1649
	word32 a3_1650
	word32 a4_1651
	word32 a5_1652
	word32 a7_1653
	word32 s6_1654
	word32 s8_1655
	word32 s9_1656
	word32 s10_1657
	word32 s11_1658
	word32 t4_1659
	mbedtls_debug_print_msg(ra, s0_331, 2<32>, 0x2308975C<32>, s3, out a1_365, out a2_1649, out a3_1650, out a4_1651, out a5_1652, out a7_1653, out s4_372, out s5_373, out s6_1654, out s7_375, out s8_1655, out s9_1656, out s10_1657, out s11_1658, out t4_1659)
	word32 s0_382 = Mem328[a1_365 + 100<i32>:word32]
	word32 a1_1660
	word32 a2_1661
	word32 a3_1662
	word32 a4_1663
	word32 a5_1664
	word32 a6_1665
	word32 a7_1666
	memcpy(s3 + 12<i32> + s7_375, a1_365 + 0xC<32>, s1_347, out a1_1660, out a2_1661, out a3_1662, out a4_1663, out a5_1664, out a6_1665, out a7_1666)
	word32 a5_402 = 8<32> - (s3 & 7<i32>)
	branch a5_402 == 8<32> l2305BD4A
l2305BCBA:
	branch a5_402 <u s1_347 l2305BD2A
l2305BD2A:
	word32 a4_405 = (s3 >>u 3<u32>) + s4_372
	s1_347 = s1_347 + 0xFFFFFFF8<32> + (s3 & 7<i32>)
	word32 a3_407 = CONVERT(Mem328[a4_405:byte], byte, word32)
	s3 = s3 + a5_402
l2305BD38:
	a5_402 = a5_402 + 0xFFFFFFFF<32>
	word32 a3_415 = a3_407 | 1<32> << a5_402
	a3_407 = a3_415 & 255<i32>
	branch a5_402 != 0<32> l2305BD38
l2305BD46:
	Mem418[a4_405:byte] = SLICE(a3_415 & 255<i32>, byte, 0)
l2305BD4A:
	word32 a2_421 = s1_347 & 7<i32>
	branch a2_421 == 0<32> l2305BD7A
l2305BD50:
	word32 a5_428 = (s1_347 + s3 >>u 3<i32>) + s4_372
	word32 a3_430 = CONVERT(Mem429[a5_428:byte], byte, word32)
	s1_347 = s1_347 - a2_421
	word32 a4_433 = 8<32> - a2_421
l2305BD66:
	word32 a3_440 = a3_430 | 1<32> << a4_433
	a4_433 = a4_433 + 1<32>
	a3_430 = a3_440 & 255<i32>
	branch a4_433 != 8<32> l2305BD66
l2305BD76:
	Mem445[a5_428:byte] = SLICE(a3_440 & 255<i32>, byte, 0)
l2305BD7A:
	word32 t1_1691
	word32 a0_1692
	word32 a1_1693
	word32 a2_1694
	word32 a3_1695
	word32 a4_1696
	word32 a5_1697
	ra = memset(ra, (s3 >>u 3<u32>) + s4_372, 255<i32>, s1_347 >>u 3<u32>, out t1_1691, out a0_1692, out a1_1693, out a2_1694, out a3_1695, out a4_1696, out a5_1697)
l2305BCC2:
	word32 s1_469 = a5_402 - s1_347
	word32 a4_470 = (s3 >>u 3<u32>) + s4_372
l2305BCCA:
	branch s1_469 != a5_402 l2305BD18
l2305BD18:
	Mem481[a4_470:byte] = SLICE(1<32> << s1_469 | CONVERT(Mem475[a4_470:byte], byte, word32), byte, 0)
	s1_469 = s1_469 + 1<32>
l2305BCCE:
	word32 a5_489 = 0<32>
l2305BCD8:
	branch a5_489 != s5_373 >>u 3<u32> l2305BD8E
l2305BD8E:
	branch CONVERT(Mem1046[s4_372 + a5_489:byte], byte, word32) != 255<i32> l2305BE72
l2305BD9A:
	a5_489 = a5_489 + 1<32>
l2305BCDC:
	word32 a4_499 = 0<32>
	word32 s4_502 = s4_372 + a5_489
l2305BCE6:
	branch a4_499 <u (s5_373 & 7<i32>) l2305BD9E
l2305BD9E:
	word32 a5_511 = CONVERT(Mem1046[s4_502:byte], byte, word32) >> 7<32> - a4_499
	a5_489 = a5_511 & 1<32>
	branch (a5_511 & 1<32>) == 0<32> l2305BE72
l2305BE72:
	word32 a1_1698
	word32 a2_1699
	word32 a3_1700
	word32 a4_1701
	word32 a5_1702
	word32 a7_1703
	word32 s4_1704
	word32 s5_1705
	word32 s6_1706
	word32 s7_1707
	word32 s8_1708
	word32 s9_1709
	word32 s10_1710
	word32 s11_1711
	word32 t4_1712
	mbedtls_debug_print_msg(ra, s0_382, 2<32>, 0x23089848<32>, a5_489, out a1_1698, out a2_1699, out a3_1700, out a4_1701, out a5_1702, out a7_1703, out s4_1704, out s5_1705, out s6_1706, out s7_1707, out s8_1708, out s9_1709, out s10_1710, out s11_1711, out t4_1712)
	s1_1013 = 0xF9000700<32>
l2305BDAE:
	a4_499 = a4_499 + 1<32>
l2305BCEA:
	word32 a2_577
	word32 a4_579
	word32 s6_585
	word32 a3_1682
	word32 a7_1683
	word32 s4_1684
	word32 s5_1685
	word32 s7_1686
	word32 s8_1687
	word32 s9_1688
	word32 s10_1689
	word32 t4_1690
	word32 a1_576
	word32 a0_574 = mbedtls_debug_print_msg(ra, s0_382, 2<32>, 0x23089864<32>, a5_489, out a1_576, out a2_577, out a3_1682, out a4_579, out a5_159, out a7_1683, out s4_1684, out s5_1685, out s6_585, out s7_1686, out s8_1687, out s9_1688, out s10_1689, out s11_1002, out t4_1690)
	s0_178 = Mem1046[a5_159 + 112<i32>:word32]
	branch s6_585 >=u a5_159 l2305BDB2
l2305BDB2:
	word32 s0_595 = Mem1046[a4_579 + 124<i32>:word32]
	branch a4_579 >=u a2_577 l2305BE0A
l2305BDBA:
	word32 a3_596 = Mem1046[s0_595 + 128<i32>:int32]
	a0_574 = a0_574 + a3_596
	word32 s0_601 = Mem1046[a3_596 + 80<i32>:word32]
	word32 a4_603 = a0_574 - a5_159
	Mem606[a4_603 + 124<i32>:word32] = s0_601
	word32 a2_599 = a2_577 - a4_579
	word32 a4_608 = a4_603 + a2_599
	Mem609[a4_608 + 116<i32>:word32] = s0_601
	word32 a1_602 = a5_159 + a4_579
	word32 a5_610 = 0x400013D<32> - (a5_159 - a3_596)
	branch a5_610 >=u a4_608 l2305BE06
l2305BE06:
	word32 a3_1733
	word32 a4_1734
	a1_576 = memmove(a0_574, a1_602, a2_599, out a3_1733, out a4_1734, out a5_159)
l2305BE0A:
	word32 a2_627
	word32 a1_1713
	word32 a3_1714
	word32 a4_1715
	word32 a5_1716
	word32 a6_1717
	word32 a7_1718
	memcpy(a0_574, a1_576, Mem616[Mem616[a5_159 + 48<i32>:word32] + 128<i32>:int32], out a1_1713, out a2_627, out a3_1714, out a4_1715, out a5_1716, out a6_1717, out a7_1718)
	word32 a5_661
	word32 s0_1719
	word32 s1_1720
	word32 a0_1721
	word32 a1_1722
	word32 a2_1723
	word32 a3_1724
	word32 a4_1725
	word32 a6_1726
	word32 s4_1727
	word32 t3_1728
	vPortFree(a0_574, a2_627, Mem616[a0_574 + 44<i32>:word32], mstatus, dwArg0118, dwArg0158, out s0_1719, out s1_1720, out a0_1721, out a1_1722, out a2_1723, out a3_1724, out a4_1725, out a5_661, out a6_1726, out s4_1727, out t3_1728)
	Mem673[a5_661 + 44<i32>:word32] = 0<32>
	word32 a2_1729
	word32 a3_1730
	word32 a5_1731
	word32 a7_1732
	mbedtls_debug_print_buf(ra, 3<32>, a5_661, out a1_1283, out a2_1729, out a3_1730, out a4_112, out a5_1731, out a7_1732)
l2305BB18:
	s1_1013 = 0<32>
l2305BDE6:
	word32 a1_1735
	word32 a2_1736
	word32 a3_1737
	word32 a4_1738
	word32 a5_1739
	word32 a7_1740
	word32 s4_1741
	word32 s5_1742
	word32 s6_1743
	word32 s7_1744
	word32 s8_1745
	word32 s9_1746
	word32 s10_1747
	word32 s11_1748
	word32 t4_1749
	mbedtls_debug_print_msg(ra, s0_601, 1<32>, 0x230897B0<32>, a5_610, out a1_1735, out a2_1736, out a3_1737, out a4_1738, out a5_1739, out a7_1740, out s4_1741, out s5_1742, out s6_1743, out s7_1744, out s8_1745, out s9_1746, out s10_1747, out s11_1748, out t4_1749)
	s1_1013 = 0xF9000600<32>
l2305BD0A:
	a4_723 = 0x23089788<32>
l2305BC60:
	word32 a1_1667
	word32 a2_1668
	word32 a3_1669
	word32 a4_1670
	word32 a5_1671
	word32 a7_1672
	word32 s4_1673
	word32 s5_1674
	word32 s6_1675
	word32 s7_1676
	word32 s8_1677
	word32 s9_1678
	word32 s10_1679
	word32 s11_1680
	word32 t4_1681
	mbedtls_debug_print_msg(ra, s0_331, 1<32>, 0x23089734<32>, s1_347, out a1_1667, out a2_1668, out a3_1669, out a4_1670, out a5_1671, out a7_1672, out s4_1673, out s5_1674, out s6_1675, out s7_1676, out s8_1677, out s9_1678, out s10_1679, out s11_1680, out t4_1681)
l2305BC08:
	word32 a1_1634
	word32 a2_1635
	word32 a3_1636
	word32 a4_1637
	word32 a5_1638
	word32 a7_1639
	word32 s4_1640
	word32 s5_1641
	word32 s6_1642
	word32 s7_1643
	word32 s8_1644
	word32 s9_1645
	word32 s10_1646
	word32 s11_1647
	word32 t4_1648
	mbedtls_debug_print_msg(ra, s0_331, 1<32>, 0x23089708<32>, s3, out a1_1634, out a2_1635, out a3_1636, out a4_1637, out a5_1638, out a7_1639, out s4_1640, out s5_1641, out s6_1642, out s7_1643, out s8_1644, out s9_1645, out s10_1646, out s11_1647, out t4_1648)
l2305BC4C:
	s1_1013 = 0xF8FFFE00<32>
l2305BB84:
	word32 a1_1604
	word32 a2_1605
	word32 a3_1606
	word32 a4_1607
	word32 a5_1608
	word32 a7_1609
	word32 s4_1610
	word32 s5_1611
	word32 s6_1612
	word32 s7_1613
	word32 s8_1614
	word32 s9_1615
	word32 s10_1616
	word32 s11_1617
	word32 t4_1618
	mbedtls_debug_print_msg(ra, s0_277, 1<32>, 0x230896D4<32>, a5_263, out a1_1604, out a2_1605, out a3_1606, out a4_1607, out a5_1608, out a7_1609, out s4_1610, out s5_1611, out s6_1612, out s7_1613, out s8_1614, out s9_1615, out s10_1616, out s11_1617, out t4_1618)
	s1_1013 = 0xF8000100<32>
l2305BB4C:
	a4_723 = 0x230896B8<32>
l2305BAC2:
	a4_723 = 0x23089660<32>
l2305BACE:
	word32 a2_1569
	word32 a1_1568
	word32 a3_1570
	word32 a4_1571
	word32 a5_1572
	word32 a7_1573
	word32 s4_1574
	word32 s5_1575
	word32 s6_1576
	word32 s7_1577
	word32 s8_1578
	word32 s9_1579
	word32 s10_1580
	word32 s11_1581
	word32 t4_1582
	mbedtls_debug_print_msg(ra, s0_178, 1<32>, a4_723, a5_159, out a1_1568, out a2_1569, out a3_1570, out a4_1571, out a5_1572, out a7_1573, out s4_1574, out s5_1575, out s6_1576, out s7_1577, out s8_1578, out s9_1579, out s10_1580, out s11_1581, out t4_1582)
	s1_1013 = 0xF8FFFF80<32>
l2305BAE0:
	a5_848 = s1_1013
	a3_850 = 0xFFFC5F<32>
l2305BA18:
	word32 a6_851 = Mem48[a3_115 + 64<i32>:int32]
	branch a6_851 + -1<i32> != a5_117 l2305BA6E
l2305BA24:
	branch CONVERT(Mem48[a0_55:byte], byte, word32) == 3<32> l2305BA6E
l2305BA6E:
	word32 a5_1472
	word32 s7_1477
	word32 s8_1478
	word32 a3_1471
	word32 t4_1481
	word32 s9_1479
	word32 s10_1480
	word32 s6_1476
	word32 s4_1474
	word32 s5_1475
	word32 a7_1473
	word32 a2_1470
	mbedtls_debug_print_msg(ra, s0_107, 2<32>, 0x230895F4<32>, a5_117, out a1_1283, out a2_1470, out a3_1471, out a4_112, out a5_1472, out a7_1473, out s4_1474, out s5_1475, out s6_1476, out s7_1477, out s8_1478, out s9_1479, out s10_1480, out s11_1002, out t4_1481)
l2305BA2E:
	word32 a5_895
	word32 a1_1482
	word32 s6_1489
	word32 s4_1487
	word32 a7_1486
	word32 a4_1485
	word32 a3_1484
	word32 a2_1483
	word32 s5_1488
	word32 s9_1492
	word32 s8_1491
	word32 s7_1490
	word32 s10_1493
	word32 t4_1495
	word32 s11_1494
	mbedtls_debug_print_msg(ra, s0_107, 2<32>, 0x230895A8<32>, a6_851 + -1<i32>, out a1_1482, out a2_1483, out a3_1484, out a4_1485, out a5_895, out a7_1486, out s4_1487, out s5_1488, out s6_1489, out s7_1490, out s8_1491, out s9_1492, out s10_1493, out s11_1494, out t4_1495)
	word32 a0_943
	word32 a5_1500
	word32 a2_1498
	word32 s1_1497
	word32 s0_1496
	word32 s4_1501
	word32 s6_1503
	word32 a3_1499
	word32 s5_1502
	word32 s7_1504
	word32 s9_1505
	word32 s10_1506
	ra = mbedtls_ssl_resend(ra, s0_107, s0_107, a5_895, 0x2308A000<32>, mstatus, dwArgE8, out s0_1496, out s1_1497, out a0_943, out a1_1283, out a2_1498, out a3_1499, out a4_112, out a5_1500, out s2_1321, out s3, out s4_1501, out s5_1502, out s6_1503, out s7_1504, out s9_1505, out s10_1506, out s11_1002, out mstatus)
	s1_1013 = a0_943
	branch a0_943 == 0<32> l2305BA8A
l2305BA8A:
	s1_1013 = 0xF9000700<32>
l2305BA52:
	a5_848 = a0_943
	a3_850 = s3 + -956<i32>
l2305BA60:
	word32 a5_1538
	word32 a2_1536
	word32 a3_1537
	word32 s4_1539
	word32 s7_1542
	word32 s9_1544
	word32 s5_1540
	word32 s8_1543
	word32 s6_1541
	word32 s10_1545
	mbedtls_debug_print_ret(ra, 1<32>, a3_850, a5_848, out a1_1283, out a2_1536, out a3_1537, out a4_112, out a5_1538, out s4_1539, out s5_1540, out s6_1541, out s7_1542, out s8_1543, out s9_1544, out s10_1545, out s11_1002)
l2305B972:
	word32 t4_1469
	word32 s6_1464
	word32 a7_1461
	word32 s4_1462
	word32 a3_1459
	word32 a5_1460
	word32 s5_1463
	word32 a2_1458
	word32 s9_1467
	word32 s8_1466
	word32 s7_1465
	word32 s10_1468
	mbedtls_debug_print_msg(ra, a0_23, 1<32>, 0x23089550<32>, a5, out a1_1283, out a2_1458, out a3_1459, out a4_112, out a5_1460, out a7_1461, out s4_1462, out s5_1463, out s6_1464, out s7_1465, out s8_1466, out s9_1467, out s10_1468, out s11_1002, out t4_1469)
	s1_1013 = 0xF8FFFE00<32>
l2305B992:
	0<32> = dwArg0198
	s1Out = s1_1013
	a0Out = s1_1013
	a1Out = a1_1283
	a4Out = a4_112
	s2Out = s2_1321
	s3Out = s3
	s11Out = s11_1002
	mstatusOut = mstatus
	return ra
mbedtls_ssl_prepare_handshake_record_exit:


word32 mbedtls_ssl_handle_message_type(word32 ra, word32 a4, word32 mstatus, word32 dwArg38, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a2 a4 mstatus ra s1 s11 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_ssl_handle_message_type_entry:
l2305BE94:
	word32 a0_141
	branch a4 == 0x16<32> l2305BEB4
l2305BEB4:
	ra = mbedtls_ssl_prepare_handshake_record(ra, a4, 0x16<32>, mstatus, dwArgC8, dwArgD8, dwArg0108, dwArg0148, dwArg0188, out s1, out a0_141, out a1, out a4, out s2, out s3, out s11, out mstatus)
	branch a0_141 == 0<32> l2305BEA8
l2305BEA8:
	branch a4 == 0x15<32> l2305BEC6
l2305BEC6:
	word32 a5_64
	word32 t4_352
	word32 s10_351
	word32 s9_350
	word32 s8_349
	word32 s7_348
	word32 s6_347
	word32 s5_346
	word32 s4_345
	word32 a7_344
	word32 a4_343
	word32 a3_342
	word32 a2_341
	mbedtls_debug_print_msg(ra, Mem11[0x79<32>:word32], 2<32>, 0x2308924C<32>, CONVERT(Mem11[0x15<32>:byte], byte, word32), out a1, out a2_341, out a3_342, out a4_343, out a5_64, out a7_344, out s4_345, out s5_346, out s6_347, out s7_348, out s8_349, out s9_350, out s10_351, out s11, out t4_352)
	s2 = 0x1000000<32>
	s1 = 0x2308A000<32>
	word32 s0_82 = Mem11[a5_64 + 100<i32>:word32]
	a4 = CONVERT(Mem11[a5_64:byte], byte, word32)
	branch a4 != 2<32> l2305BF1E
l2305BF1E:
	branch a4 != 1<32> l2305BF6C
l2305BF24:
	word32 a5_86 = CONVERT(Mem11[a5_64 + 1<i32>:byte], byte, word32)
	branch a5_86 != 0<32> l2305BF4A
l2305BF4A:
	a4 = 100<i32>
	branch a5_86 != 100<i32> l2305BF6C
l2305BF6C:
	a0_141 = 0xF9FFF980<32>
l2305BF52:
	word32 a2_377
	word32 a3_378
	word32 a5_379
	word32 a7_380
	word32 s4_381
	word32 s5_382
	word32 s6_383
	word32 s7_384
	word32 s8_385
	word32 s9_386
	word32 s10_387
	word32 t4_388
	mbedtls_debug_print_msg(ra, s0_82, 2<32>, 0x230892B0<32>, a5_86, out a1, out a2_377, out a3_378, out a4, out a5_379, out a7_380, out s4_381, out s5_382, out s6_383, out s7_384, out s8_385, out s9_386, out s10_387, out s11, out t4_388)
l2305BF2A:
	word32 a2_365
	word32 a3_366
	word32 a5_367
	word32 a7_368
	word32 s4_369
	word32 s5_370
	word32 s6_371
	word32 s7_372
	word32 s8_373
	word32 s9_374
	word32 s10_375
	word32 t4_376
	mbedtls_debug_print_msg(ra, s0_82, 2<32>, 0x23089294<32>, a5_86, out a1, out a2_365, out a3_366, out a4, out a5_367, out a7_368, out s4_369, out s5_370, out s6_371, out s7_372, out s8_373, out s9_374, out s10_375, out s11, out t4_376)
	a0_141 = 0xF8000780<32>
l2305BEFA:
	word32 s7_360
	word32 s8_361
	word32 s6_359
	word32 s5_358
	word32 s4_357
	word32 a7_356
	word32 a5_355
	word32 a3_354
	word32 a2_353
	word32 s9_362
	word32 s10_363
	word32 t4_364
	mbedtls_debug_print_msg(ra, s0_82, 1<32>, 0x23089270<32>, CONVERT(Mem11[a5_64 + 1<i32>:byte], byte, word32), out a1, out a2_353, out a3_354, out a4, out a5_355, out a7_356, out s4_357, out s5_358, out s6_359, out s7_360, out s8_361, out s9_362, out s10_363, out s11, out t4_364)
	a0_141 = 0xF8FFF880<32>
l2305BEB0:
	a0_141 = 0<32>
l2305BEBA:
	0<32> = dwArg38
	s1Out = s1
	a0Out = a0_141
	a1Out = a1
	a2Out = dwArg10
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s11Out = s11
	mstatusOut = mstatus
	return ra
mbedtls_ssl_handle_message_type_exit:


word32 mbedtls_ssl_send_alert_message(word32 ra, word32 a0, word32 a2, word32 a5, word32 mstatus, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_send_fatal_handshake_failure
//      mbedtls_ssl_close_notify
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a0 a4 a5 mstatus ra s0 s1 s10 s2 s3 s5 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_send_alert_message_entry:
l2305BF74:
	word32 s1_151
	branch a0 == 0<32> l2305C016
l2305BF84:
	word32 a0_18 = Mem15[a5:word32]
	branch a5 == 0<32> l2305C016
l2305C016:
	s1_151 = 0xF8FFFF00<32>
l2305BF8A:
	word32 s4_42
	word32 a7_257
	word32 s5_258
	word32 s6_259
	word32 s7_260
	word32 s8_261
	word32 a5_256
	word32 a4_255
	word32 a3_254
	word32 a2_253
	word32 a1_252
	word32 s9_262
	word32 s10_263
	word32 s11_264
	word32 t4_265
	mbedtls_debug_print_msg(ra, a0_18, 2<32>, 0x23089D7C<32>, a5, out a1_252, out a2_253, out a3_254, out a4_255, out a5_256, out a7_257, out s4_42, out s5_258, out s6_259, out s7_260, out s8_261, out s9_262, out s10_263, out s11_264, out t4_265)
	Mem53[a0_18 + 164<i32>:word32] = 0x15<32>
	Mem55[a0_18 + 168<i32>:word32] = 2<32>
	Mem58[Mem55[a0_18 + 160<i32>:int32]:byte] = SLICE(s4_42, byte, 0)
	word32 a5_59 = Mem58[a0_18 + 160<i32>:int32]
	Mem60[a5_59 + 1<i32>:byte] = SLICE(a2, byte, 0)
	word32 a5_66
	word32 s0_70
	word32 a0_87
	word32 s1_266
	word32 a1_267
	word32 a2_268
	word32 a3_269
	word32 a4_270
	word32 s4_271
	word32 s5_272
	word32 s11_273
	ra = mbedtls_ssl_write_record(ra, a2, a0_18, a5_59, mstatus, out s0_70, out s1_266, out a0_87, out a1_267, out a2_268, out a3_269, out a4_270, out a5_66, out s2, out s3, out s4_271, out s5_272, out s11_273, out mstatus)
	s1_151 = a0_87
	branch a0_87 == 0<32> l2305BFFC
l2305BFFC:
	word32 a1_274
	word32 a2_275
	word32 a3_276
	word32 a7_277
	word32 s4_278
	word32 s6_279
	word32 s7_280
	word32 s8_281
	word32 s11_282
	word32 t4_283
	mbedtls_debug_print_msg(ra, s0_70, 2<32>, 0x23089D94<32>, a5_66, out a1_274, out a2_275, out a3_276, out a4, out a5, out a7_277, out s4_278, out s5, out s6_279, out s7_280, out s8_281, out s9, out s10, out s11_282, out t4_283)
l2305BFD0:
	word32 a1_284
	word32 a2_285
	word32 a3_286
	word32 s4_287
	word32 s6_288
	word32 s7_289
	word32 s8_290
	word32 s11_291
	mbedtls_debug_print_ret(ra, 1<32>, s3 + -29<i32>, a0_87, out a1_284, out a2_285, out a3_286, out a4, out a5, out s4_287, out s5, out s6_288, out s7_289, out s8_290, out s9, out s10, out s11_291)
l2305BFEA:
	s0Out = s1
	s1Out = s1_151
	a0Out = s1_151
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s8Out = s4
	s9Out = s9
	s10Out = s10
	mstatusOut = mstatus
	return ra
mbedtls_ssl_send_alert_message_exit:


word32 mbedtls_ssl_send_fatal_handshake_failure(word32 ra, word32 a0, word32 a5, word32 mstatus, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a0 a4 mstatus s0 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_send_fatal_handshake_failure_entry:
l2305C01E:
l2305C024_thunk_mbedtls_ssl_send_alert_message:
	word32 a0_9
	word32 s0_12
	word32 a4_19
	word32 mstatus_22
	word32 s5_28
	word32 s1_43
	word32 a5_44
	word32 s2_45
	word32 s3_46
	word32 s8_47
	word32 s9_48
	word32 s10_49
	mbedtls_ssl_send_alert_message(ra, a0, 40<i32>, a5, mstatus, out s0_12, out s1_43, out a0_9, out a4_19, out a5_44, out s2_45, out s3_46, out s5_28, out s8_47, out s9_48, out s10_49, out mstatus_22)
	a0Out = a0_9
	a4Out = a4_19
	s5Out = s5_28
	mstatusOut = mstatus_22
	return s0_12
mbedtls_ssl_send_fatal_handshake_failure_exit:


word32 mbedtls_ssl_close_notify(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_disconnect
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a5 mstatus ra s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_close_notify_entry:
l2305C028:
	word32 s1_19
	word32 s0_117
	s1_19 = s1
	branch a0 == 0<32> l2305C0D6
l2305C038:
	word32 a0_18 = Mem15[a5:word32]
	s1_19 = a0_18
	branch a5 == 0<32> l2305C0D6
l2305C0D6:
	s0_117 = 0xF8FFFF00<32>
l2305C03E:
	word32 a4_34
	word32 t4_341
	word32 s11_340
	word32 s10_339
	word32 s9_338
	word32 s8_337
	word32 s7_336
	word32 s6_335
	word32 s5_334
	word32 s4_333
	word32 a7_332
	word32 a5_331
	word32 a3_330
	word32 a2_329
	word32 a1_328
	mbedtls_debug_print_msg(ra, a0_18, 2<32>, 0x23088E70<32>, a5, out a1_328, out a2_329, out a3_330, out a4_34, out a5_331, out a7_332, out s4_333, out s5_334, out s6_335, out s7_336, out s8_337, out s9_338, out s10_339, out s11_340, out t4_341)
	word32 a5_48 = Mem15[a0_18 + 172<i32>:int32]
	branch a5_48 == 0<32> l2305C076
l2305C076:
	s1_19 = Mem15[a4_34 + 4<i32>:word32]
	word32 a5_51 = 0x10<32>
	branch a4_34 != 0x10<32> l2305C0B8
l2305C07E:
	word32 a0_56
	word32 s3_74
	word32 s0_369
	word32 a4_370
	word32 s2_371
	word32 s5_372
	word32 s8_373
	word32 s9_374
	word32 s10_375
	ra = mbedtls_ssl_send_alert_message(ra, s1_19, 0<32>, 0x10<32>, mstatus, out s0_369, out s1_19, out a0_56, out a4_370, out a5_51, out s2_371, out s3_74, out s5_372, out s8_373, out s9_374, out s10_375, out mstatus)
	s0_117 = a0_56
	branch a0_56 == 0<32> l2305C0B8
l2305C0B8:
	word32 a1_355
	word32 a2_356
	word32 a3_357
	word32 a4_358
	word32 a7_359
	word32 s4_360
	word32 s5_361
	word32 s6_362
	word32 s7_363
	word32 s8_364
	word32 s9_365
	word32 s10_366
	word32 s11_367
	word32 t4_368
	mbedtls_debug_print_msg(ra, s1_19, 2<32>, 0x23088EA8<32>, a5_51, out a1_355, out a2_356, out a3_357, out a4_358, out a5, out a7_359, out s4_360, out s5_361, out s6_362, out s7_363, out s8_364, out s9_365, out s10_366, out s11_367, out t4_368)
	s0_117 = 0<32>
l2305C08C:
	word32 a1_376
	word32 a2_377
	word32 a3_378
	word32 a4_379
	word32 s4_380
	word32 s5_381
	word32 s6_382
	word32 s7_383
	word32 s8_384
	word32 s9_385
	word32 s10_386
	word32 s11_387
	mbedtls_debug_print_ret(ra, 1<32>, s3_74 + -1165<i32>, a0_56, out a1_376, out a2_377, out a3_378, out a4_379, out a5, out s4_380, out s5_381, out s6_382, out s7_383, out s8_384, out s9_385, out s10_386, out s11_387)
l2305C0A6:
	s0Out = s1
	s1Out = s1_19
	a0Out = s0_117
	a5Out = a5
	mstatusOut = mstatus
	return ra
l2305C062:
l2305C072_thunk_mbedtls_ssl_flush_output:
	word32 a0_168
	word32 a5_173
	word32 s1_177
	word32 a1_342
	word32 a2_343
	word32 a3_344
	word32 a4_345
	word32 s2_346
	word32 s3_347
	word32 s4_348
	word32 s5_349
	word32 s6_350
	word32 s7_351
	word32 s9_352
	word32 s10_353
	word32 s11_354
	s0Out = mbedtls_ssl_flush_output(ra, a0_18, a5_48, dwArg0128, out s1_177, out a0_168, out a1_342, out a2_343, out a3_344, out a4_345, out a5_173, out s2_346, out s3_347, out s4_348, out s5_349, out s6_350, out s7_351, out s9_352, out s10_353, out s11_354)
	s1Out = s1_177
	a0Out = a0_168
	a5Out = a5_173
	mstatusOut = mstatus
	return ra
mbedtls_ssl_close_notify_exit:


void mbedtls_ssl_write_certificate(word32 ra, word32 a5, word32 mstatus, word32 dwArgB4, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00B4:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_write_certificate_entry:
l2305C0DE:
	word32 a0_15 = Mem13[a5 + 64<i32>:word32]
	word32 s2_18 = Mem13[a5:int32]
	word32 a7_468
	word32 s4_469
	word32 a5_467
	word32 a3_465
	word32 a4_466
	word32 a2_464
	word32 a1_463
	word32 s5_470
	word32 s6_471
	word32 s7_472
	word32 s8_473
	word32 s9_474
	word32 s10_475
	word32 s11_476
	word32 t4_477
	mbedtls_debug_print_msg(ra, a0_15, 2<32>, 0x23089EA0<32>, a5, out a1_463, out a2_464, out a3_465, out a4_466, out a5_467, out a7_468, out s4_469, out s5_470, out s6_471, out s7_472, out s8_473, out s9_474, out s10_475, out s11_476, out t4_477)
	word32 a5_48 = CONVERT(Mem13[s2_18 + 10<i32>:byte], byte, word32) + 0xFFFFFFFB<32> & 255<i32>
	branch a5_48 >u 6<32> l2305C15C
l2305C120:
	word32 a5_50 = 75<i32> >>u a5_48
	a5_48 = a5_50 & 1<32>
	branch (a5_50 & 1<32>) == 0<32> l2305C15C
l2305C15C:
	word32 a5_55 = CONVERT(Mem13[a5_48 + 116<i32>:uint16], uint16, word32)
	word32 s0_54 = Mem13[a5_48:word32]
	word32 a5_56 = a5_55 & 1<32>
	branch (a5_55 & 1<32>) != 0<32> l2305C18E
l2305C18E:
	branch mbedtls_ssl_own_cert(a5_55 & 1<32>, out a5_56) != 0<32> l2305C1B8
l2305C196:
	word32 a1_557
	word32 a2_558
	word32 a3_559
	word32 a4_560
	word32 a5_561
	word32 a7_562
	word32 s4_563
	word32 s5_564
	word32 s6_565
	word32 s7_566
	word32 s8_567
	word32 s9_568
	word32 s10_569
	word32 s11_570
	word32 t4_571
	mbedtls_debug_print_msg(ra, s0_54, 1<32>, 0x23089ED4<32>, a5_56, out a1_557, out a2_558, out a3_559, out a4_560, out a5_561, out a7_562, out s4_563, out s5_564, out s6_565, out s7_566, out s8_567, out s9_568, out s10_569, out s11_570, out t4_571)
l2305C166:
	branch Mem13[s0_54 + 176<i32>:int32] != 0<32> l2305C1B8
l2305C1B8:
	word32 a5_116
	word32 s0_122
	word32 a5_492
	word32 s1_493
	word32 a0_494
	word32 a1_495
	word32 a3_496
	word32 s3_497
	word32 s4_498
	word32 s7_499
	word32 s9_500
	word32 s10_501
	word32 s11_502
	word32 a2_119
	word32 ra_109 = mbedtls_debug_print_crt(ra, 3<32>, 0x23089EF0<32>, mbedtls_ssl_own_cert(a5_56, out a5_492), out s0_122, out s1_493, out a0_494, out a1_495, out a2_119, out a3_496, out a5_116, out s3_497, out s4_498, out s7_499, out s9_500, out s10_501, out s11_502)
	word32 a5_503
	word32 s1_137 = mbedtls_ssl_own_cert(a5_116, out a5_503)
	word32 a4_138 = 7<32>
l2305C1E8:
	branch s1_137 != 0<32> l2305C250
l2305C250:
	word32 a0_145 = a4_138 + 3<i32>
	word32 a5_148 = a0_145 + a2_119
	branch 0x3FFFFFD<32> - a4_138 >=u a2_119 l2305C286
l2305C286:
	Mem155[Mem142[s0_122 + 160<i32>:int32] + a4_138:byte] = SLICE(a2_119 >>u 0x10<u32>, byte, 0)
	word32 a1_157 = a2_119 >>u 8<u32>
	Mem159[Mem155[s0_122 + 160<i32>:int32] + a4_138 + 1<i32>:byte] = SLICE(a1_157, byte, 0)
	Mem162[a4_138 + Mem159[s0_122 + 160<i32>:int32] + 2<i32>:byte] = SLICE(a2_119, byte, 0)
	word32 s1_164 = Mem162[a1_157 + 8<i32>:word32]
	word32 a5_167
	word32 a1_572
	word32 a2_573
	word32 a3_574
	word32 a4_575
	word32 a6_576
	word32 a7_577
	memcpy(a0_145 + Mem162[s0_122 + 160<i32>:int32], a1_157, a2_119, out a1_572, out a2_573, out a3_574, out a4_575, out a5_167, out a6_576, out a7_577)
	a2_119 = dwArgB4
	s1_137 = Mem162[s1_164 + 304<i32>:int32]
	a4_138 = a5_167
l2305C262:
	word32 a1_578
	word32 a2_579
	word32 a3_580
	word32 a4_581
	word32 a5_582
	word32 a7_583
	word32 s4_584
	word32 s5_585
	word32 s6_586
	word32 s7_587
	word32 s8_588
	word32 s9_589
	word32 s10_590
	word32 s11_591
	word32 t4_592
	mbedtls_debug_print_msg(ra_109, s0_122, 1<32>, 0x23089F00<32>, a5_148, out a1_578, out a2_579, out a3_580, out a4_581, out a5_582, out a7_583, out s4_584, out s5_585, out s6_586, out s7_587, out s8_588, out s9_589, out s10_590, out s11_591, out t4_592)
l2305C1EA:
	word32 a5_214 = a4_138 + -7<i32>
	Mem216[Mem142[s0_122 + 160<i32>:int32] + 4<i32>:byte] = SLICE(a5_214 >>u 0x10<u32>, byte, 0)
	Mem220[Mem216[s0_122 + 160<i32>:int32] + 5<i32>:byte] = SLICE(a5_214 >>u 8<u32>, byte, 0)
	Mem222[Mem220[s0_122 + 160<i32>:int32] + 6<i32>:byte] = SLICE(a5_214, byte, 0)
	Mem224[s0_122 + 164<i32>:word32] = 0x16<32>
	word32 a5_225 = Mem224[s0_122 + 160<i32>:int32]
	Mem226[s0_122 + 168<i32>:word32] = a4_138
	Mem228[a5_225:byte] = 0xB<8>
	Mem231[a5_225 + 5<32>:word32] = Mem228[a5_225 + 4<i32>:word32]
	word32 a5_240
	word32 s0_244
	word32 a0_261
	word32 s1_518
	word32 a1_519
	word32 a2_520
	word32 a3_521
	word32 a4_522
	word32 s2_523
	word32 s3_524
	word32 s4_525
	word32 s5_526
	word32 s11_527
	word32 mstatus_528
	word32 ra_243 = mbedtls_ssl_write_record(ra_109, s1_137, s0_122, a5_225 + 1<32>, mstatus, out s0_244, out s1_518, out a0_261, out a1_519, out a2_520, out a3_521, out a4_522, out a5_240, out s2_523, out s3_524, out s4_525, out s5_526, out s11_527, out mstatus_528)
	branch a0_261 == 0<32> l2305C2C4
l2305C2C4:
	word32 a1_529
	word32 a2_530
	word32 a3_531
	word32 a4_532
	word32 a5_533
	word32 a7_534
	word32 s4_535
	word32 s5_536
	word32 s6_537
	word32 s7_538
	word32 s8_539
	word32 s9_540
	word32 s10_541
	word32 s11_542
	word32 t4_543
	mbedtls_debug_print_msg(ra_243, s0_244, 2<32>, 0x23089F20<32>, a5_240, out a1_529, out a2_530, out a3_531, out a4_532, out a5_533, out a7_534, out s4_535, out s5_536, out s6_537, out s7_538, out s8_539, out s9_540, out s10_541, out s11_542, out t4_543)
l2305C232:
	word32 a1_544
	word32 a2_545
	word32 a3_546
	word32 a4_547
	word32 a5_548
	word32 s4_549
	word32 s5_550
	word32 s6_551
	word32 s7_552
	word32 s8_553
	word32 s9_554
	word32 s10_555
	word32 s11_556
	mbedtls_debug_print_ret(ra_243, 1<32>, 0x1000089<32>, a0_261, out a1_544, out a2_545, out a3_546, out a4_547, out a5_548, out s4_549, out s5_550, out s6_551, out s7_552, out s8_553, out s9_554, out s10_555, out s11_556)
l2305C16C:
	word32 a5_329
	word32 a1_504
	word32 a2_505
	word32 a3_506
	word32 a4_507
	word32 a7_508
	word32 s4_509
	word32 s5_510
	word32 s6_511
	word32 s7_512
	word32 s8_513
	word32 s9_514
	word32 s10_515
	word32 s11_516
	word32 t4_517
	mbedtls_debug_print_msg(ra, s0_54, 2<32>, 0x23089EB8<32>, a5_55 & 1<32>, out a1_504, out a2_505, out a3_506, out a4_507, out a5_329, out a7_508, out s4_509, out s5_510, out s6_511, out s7_512, out s8_513, out s9_514, out s10_515, out s11_516, out t4_517)
	Mem349[a5_329 + 5<32>:word32] = Mem13[a5_329 + 4<i32>:word32]
l2305C12C:
	word32 a5_357
	word32 a1_478
	word32 a2_479
	word32 a3_480
	word32 a4_481
	word32 a7_482
	word32 s4_483
	word32 s5_484
	word32 s6_485
	word32 s7_486
	word32 s8_487
	word32 s9_488
	word32 s10_489
	word32 s11_490
	word32 t4_491
	mbedtls_debug_print_msg(ra, a0_15, 2<32>, 0x23089EB8<32>, a5_50 & 1<32>, out a1_478, out a2_479, out a3_480, out a4_481, out a5_357, out a7_482, out s4_483, out s5_484, out s6_485, out s7_486, out s8_487, out s9_488, out s10_489, out s11_490, out t4_491)
	Mem378[a5_357 + 5<32>:word32] = Mem13[a5_357 + 4<i32>:word32]
l2305C14C:
	0<32> = dwArg0128
	return
mbedtls_ssl_write_certificate_exit:


void mbedtls_ssl_write_change_cipher_spec(word32 ra, word32 s1, word32 a0, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_write_change_cipher_spec_entry:
l2305C2E0:
	word32 s6_193
	word32 s5_192
	word32 s4_191
	word32 a7_190
	word32 a5_189
	word32 a4_188
	word32 a3_187
	word32 a2_186
	word32 a1_185
	word32 s7_194
	word32 s8_195
	word32 s9_196
	word32 s10_197
	word32 s11_198
	word32 t4_199
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x23089F38<32>, a5, out a1_185, out a2_186, out a3_187, out a4_188, out a5_189, out a7_190, out s4_191, out s5_192, out s6_193, out s7_194, out s8_195, out s9_196, out s10_197, out s11_198, out t4_199)
	word32 a4_44 = Mem20[a0 + 160<i32>:int32]
	Mem45[a0 + 164<i32>:word32] = 0x14<32>
	Mem47[a0 + 168<i32>:word32] = 1<32>
	Mem48[a4_44:byte] = 1<8>
	word32 s0_49 = Mem48[5<32>:word32]
	Mem52[6<32>:word32] = s0_49
	word32 a5_58
	word32 s0_62
	word32 s3_67
	word32 a0_79
	word32 s1_200
	word32 a1_201
	word32 a2_202
	word32 a3_203
	word32 a4_204
	word32 s2_205
	word32 s4_206
	word32 s5_207
	word32 s11_208
	word32 mstatus_209
	word32 ra_61 = mbedtls_ssl_write_record(ra, s1, s0_49, 2<32>, mstatus, out s0_62, out s1_200, out a0_79, out a1_201, out a2_202, out a3_203, out a4_204, out a5_58, out s2_205, out s3_67, out s4_206, out s5_207, out s11_208, out mstatus_209)
	branch a0_79 == 0<32> l2305C358
l2305C358:
	word32 a1_210
	word32 a2_211
	word32 a3_212
	word32 a4_213
	word32 a5_214
	word32 a7_215
	word32 s4_216
	word32 s5_217
	word32 s6_218
	word32 s7_219
	word32 s8_220
	word32 s9_221
	word32 s10_222
	word32 s11_223
	word32 t4_224
	mbedtls_debug_print_msg(ra_61, s0_62, 2<32>, 0x23089F54<32>, a5_58, out a1_210, out a2_211, out a3_212, out a4_213, out a5_214, out a7_215, out s4_216, out s5_217, out s6_218, out s7_219, out s8_220, out s9_221, out s10_222, out s11_223, out t4_224)
l2305C32E:
	word32 a1_225
	word32 a2_226
	word32 a3_227
	word32 a4_228
	word32 a5_229
	word32 s4_230
	word32 s5_231
	word32 s6_232
	word32 s7_233
	word32 s8_234
	word32 s9_235
	word32 s10_236
	word32 s11_237
	mbedtls_debug_print_ret(ra_61, 1<32>, s3_67 + 446<i32>, a0_79, out a1_225, out a2_226, out a3_227, out a4_228, out a5_229, out s4_230, out s5_231, out s6_232, out s7_233, out s8_234, out s9_235, out s10_236, out s11_237)
l2305C348:
	return
mbedtls_ssl_write_change_cipher_spec_exit:


void mbedtls_ssl_write_finished(word32 ra, word32 s0, word32 a0, word32 a5, word32 s2, word32 mstatus, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_ssl_write_finished_entry:
l2305C372:
	word32 a2_25
	word32 a4_27
	word32 s8_481
	word32 s11_484
	word32 t4_485
	word32 s9_482
	word32 s10_483
	word32 a1_473
	word32 a7_476
	word32 s4_477
	word32 s5_478
	word32 s6_479
	word32 s7_480
	word32 a3_474
	word32 a5_475
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x23089F70<32>, a5, out a1_473, out a2_25, out a3_474, out a4_27, out a5_475, out a7_476, out s4_477, out s5_478, out s6_479, out s7_480, out s8_481, out s9_482, out s10_483, out s11_484, out t4_485)
	word32 a5_42 = 1<32>
	word32 a1_43 = Mem20[Mem20[a4_27 + 12<i32>:word32] + 156<i32>:int32]
	branch a4_27 <= 1<32> l2305C3B0
l2305C3A6:
	a5_42 = 1<32> - Mem20[Mem20[0xD<32>:word32] + 16<i32>:word32]
	a1_43 = a1_43 + a5_42
l2305C3B0:
	word32 s0_51 = Mem20[a5_42:word32]
	Mem53[s0_51 + 160<i32>:word32] = a1_43
	word32 a5_56 = Mem53[a2_25 + 116<i32>:word32]
	word32 a5_60 = Mem53[a5_56 + 204<i32>:int32]
	word32 a4_67
	word32 ra_72
	word32 s1_238
	call a5_60 (retsize: 0;)
		uses: a0:s0_51,a1:a1_52 + 4<32>,a2:a2_25 & 1<32>,a5:a5_60,mstatus:mstatus,ra:ra,s0:Mem53[a5_56 + 48<i32>:word32],s1:0x2308A000<32>,s2:s2
		defs: a4:a4_67,ra:ra_72,s1:s1_66
	word32 s0_90 = Mem53[a4_67 + 12<i32>:word32]
	word32 a5_91 = 36<i32>
	branch a4_67 == 0<32> l2305C3D0
l2305C3CE:
	a5_91 = 0xC<32>
l2305C3D0:
	word32 a5_105
	word32 s0_104
	Mem96[s0_90 + 168<i32>:word32] = a5_91 + 4<32>
	Mem98[s0_90 + 164<i32>:word32] = 0x16<32>
	word32 a5_99 = Mem98[s0_90 + 160<i32>:int32]
	Mem101[a5_99:byte] = 0x14<8>
	word32 a5_103 = Mem101[a5_99 + 328<i32>:int32]
	branch a5_103 == 0<32> l2305C4A6
l2305C4A6:
	s0_104 = Mem101[a5_103 + 4<i32>:word32]
	a5_105 = a5_103 + 1<32>
l2305C3EE:
	s0_104 = Mem101[0x14<32>:word32]
	branch (CONVERT(Mem101[0x88<32>:uint16], uint16, word32) & 1<32>) == 0<32> l2305C3FE
l2305C3FE:
	Mem110[0x13<32>:word32] = s0_104
	word32 a5_111 = CONVERT(Mem110[0x88<32>:uint16], uint16, word32)
	a5_105 = a5_111 & 1<32>
	branch (a5_111 & 1<32>) != 0<32> l2305C3F8
l2305C3F8:
	a5_105 = 0xA<32>
l2305C3FA:
	Mem117[a5_105 + 4<i32>:word32] = s0_104
l2305C40A:
	word32 ra_167
	word32 a4_165
	word32 a5_166
	word32 a5_136
	word32 a4_140
	word32 s5_491
	word32 s8_494
	word32 s9_495
	word32 s10_496
	word32 s11_497
	word32 t4_498
	word32 s6_492
	word32 s7_493
	word32 a7_489
	word32 s4_490
	word32 a1_486
	word32 a2_487
	word32 a3_488
	word32 a0_135 = mbedtls_debug_print_msg(ra_72, s0_104, 3<32>, 0x23089F84<32>, a5_105, out a1_486, out a2_487, out a3_488, out a4_140, out a5_136, out a7_489, out s4_490, out s5_491, out s6_492, out s7_493, out s8_494, out s9_495, out s10_496, out s11_497, out t4_498)
	word32 s0_155 = Mem154[a5_136:word32]
	word32 a5_156 = CONVERT(Mem154[a5_136 + 116<i32>:uint16], uint16, word32)
	branch (a5_156 & 2<32>) == 0<32> l2305C4AC
l2305C4AC:
	word32 t1_499
	word32 a0_500
	word32 a1_501
	word32 a2_502
	word32 a3_503
	ra_167 = memset(ra_72, Mem154[s0_155 + 144<i32>:int32], 0<32>, 8<32>, out t1_499, out a0_500, out a1_501, out a2_502, out a3_503, out a4_165, out a5_166)
l2305C42E:
	Mem173[a4_140 + 68<i32>:word32] = a5_156 & 2<32>
	word32 s0_174 = Mem173[a0_135 + 48<i32>:word32]
	word32 a5_508
	word32 a6_509
	word32 a7_510
	word32 a2_505
	word32 a3_506
	word32 a4_507
	word32 a1_504
	memcpy(a0_135 + 72<i32>, Mem173[s0_174 + 144<i32>:int32], 8<32>, out a1_504, out a2_505, out a3_506, out a4_507, out a5_508, out a6_509, out a7_510)
	word32 t1_511
	word32 a0_512
	word32 a1_513
	word32 a2_514
	word32 a3_515
	word32 a4_516
	word32 a5_517
	ra_167 = memset(ra_72, Mem173[s0_174 + 144<i32>:int32] + 2<32>, 0<32>, 6<32>, out t1_511, out a0_512, out a1_513, out a2_514, out a3_515, out a4_516, out a5_517)
	a4_165 = Mem173[s0_174 + 144<i32>:int32]
	a5_166 = CONVERT(Mem173[a4_165 + 1<i32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem207[a4_165 + 1<i32>:byte] = SLICE(a5_166, byte, 0)
	branch a5_166 != 0<32> l2305C4B8
l2305C466:
	a4_165 = Mem207[s0_174 + 144<i32>:int32]
	a5_166 = CONVERT(Mem207[a4_165:byte], byte, word32) + 1<32> & 255<i32>
	Mem212[a4_165:byte] = SLICE(a5_166, byte, 0)
	branch a5_166 != 0<32> l2305C4B8
l2305C4B8:
	Mem216[a5_166 + 56<i32>:word32] = Mem214[a5_166 + 64<i32>:word32]
	Mem218[a5_166 + 36<i32>:word32] = Mem216[a5_166 + 44<i32>:word32]
	word32 a5_220 = CONVERT(Mem218[a5_166 + 116<i32>:uint16], uint16, word32)
	word32 s0_219 = Mem218[a5_166:word32]
	word32 a5_221 = a5_220 & 2<32>
	branch (a5_220 & 2<32>) == 0<32> l2305C4D0
l2305C4CA:
	word32 s11_544
	ra_167 = mbedtls_ssl_send_flight_completed(ra_167, a4_165, a5_220 & 2<32>, s2, s0, out s1_238, out a5_221, out s11_544)
l2305C4D0:
	word32 a5_270
	word32 s0_274
	word32 a0_291
	word32 s1_533
	word32 a1_534
	word32 a2_535
	word32 a3_536
	word32 a4_537
	word32 s2_538
	word32 s3_539
	word32 s4_540
	word32 s5_541
	word32 s11_542
	word32 mstatus_543
	word32 ra_273 = mbedtls_ssl_write_record(ra_167, s1_238, s0_219, a5_221, mstatus, out s0_274, out s1_533, out a0_291, out a1_534, out a2_535, out a3_536, out a4_537, out a5_270, out s2_538, out s3_539, out s4_540, out s5_541, out s11_542, out mstatus_543)
	branch a0_291 == 0<32> l2305C4F8
l2305C4F8:
	word32 a1_545
	word32 a2_546
	word32 a3_547
	word32 a4_548
	word32 a5_549
	word32 a7_550
	word32 s4_551
	word32 s5_552
	word32 s6_553
	word32 s7_554
	word32 s8_555
	word32 s9_556
	word32 s10_557
	word32 s11_558
	word32 t4_559
	mbedtls_debug_print_msg(ra_273, s0_274, 2<32>, 0x23089FD0<32>, a5_270, out a1_545, out a2_546, out a3_547, out a4_548, out a5_549, out a7_550, out s4_551, out s5_552, out s6_553, out s7_554, out s8_555, out s9_556, out s10_557, out s11_558, out t4_559)
l2305C4DA:
	word32 a1_560
	word32 a2_561
	word32 a3_562
	word32 a4_563
	word32 a5_564
	word32 s4_565
	word32 s5_566
	word32 s6_567
	word32 s7_568
	word32 s8_569
	word32 s9_570
	word32 s10_571
	word32 s11_572
	mbedtls_debug_print_ret(ra_273, 1<32>, 0x1000471<32>, a0_291, out a1_560, out a2_561, out a3_562, out a4_563, out a5_564, out s4_565, out s5_566, out s6_567, out s7_568, out s8_569, out s9_570, out s10_571, out s11_572)
l2305C47A:
	word32 a1_518
	word32 a2_519
	word32 a3_520
	word32 a4_521
	word32 a5_522
	word32 a7_523
	word32 s4_524
	word32 s5_525
	word32 s6_526
	word32 s7_527
	word32 s8_528
	word32 s9_529
	word32 s10_530
	word32 s11_531
	word32 t4_532
	mbedtls_debug_print_msg(ra_167, s0_174, 1<32>, 0x23089FB8<32>, a5_166, out a1_518, out a2_519, out a3_520, out a4_521, out a5_522, out a7_523, out s4_524, out s5_525, out s6_526, out s7_527, out s8_528, out s9_529, out s10_530, out s11_531, out t4_532)
l2305C498:
	0<32> = dwArg38
	return
mbedtls_ssl_write_finished_exit:


word32 mbedtls_ssl_write(word32 ra, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg38, word32 dwArg84, word32 dwArgA8, word32 dwArg0108, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_write
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s0 s10 s2 s3 s5 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_write_entry:
l2305C514:
	word32 s0_169
	word32 a5_35
	word32 s4_43
	word32 a1_542
	word32 s8_545
	word32 a2_543
	word32 a7_544
	word32 s11_546
	word32 t4_547
	word32 s6_118
	word32 s5_306
	word32 s7_308
	word32 s9_310
	word32 s10_303
	word32 a4_301
	word32 a3_300
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x23089DEC<32>, a5, out a1_542, out a2_543, out a3_300, out a4_301, out a5_35, out a7_544, out s4_43, out s5_306, out s6_118, out s7_308, out s8_545, out s9_310, out s10_303, out s11_546, out t4_547)
	word32 s2_101 = a2
	branch a0 == 0<32> l2305C66C
l2305C54C:
	branch a5_35 == 0<32> l2305C66C
l2305C66C:
	s0_169 = 0xF8FFFF00<32>
l2305C552:
	word32 s1_103 = Mem32[a4_301 + 4<i32>:word32]
	word32 a5_57 = 0x10<32>
	s3 = s4_43
	branch a4_301 == 0x10<32> l2305C596
l2305C55C:
	word32 a0_61
	word32 s5_81
	word32 s0_548
	word32 a1_549
	word32 a2_550
	word32 s4_552
	word32 a4_551
	ra = mbedtls_ssl_handshake(ra, s1_103, 0x10<32>, mstatus, dwArg38, dwArg84, out s0_548, out s1_103, out a0_61, out a1_549, out a2_550, out a3_300, out a4_551, out a5_57, out s2_101, out s3, out s4_552, out s5_81, out s6_118, out mstatus)
	s0_169 = a0_61
	branch a0_61 == 0<32> l2305C596
l2305C596:
	word32 a5_143
	word32 a4_178
	word32 a5_177
	word32 a5_99
	word32 a0_97 = mbedtls_ssl_get_max_frag_len(a3_300, a5_57, out a5_99)
	branch a0_97 >=u s2_101 l2305C5EC
l2305C5A0:
	s1_103 = Mem32[a5_99:word32]
	branch (CONVERT(Mem32[a5_99 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305C5EA
l2305C5EA:
	s2_101 = a0_97
l2305C5EC:
	word32 a5_172
	word32 a3_174
	word32 a5_109 = Mem32[s1_103 + 172<i32>:int32]
	branch a5_109 == 0<32> l2305C61A
l2305C61A:
	branch s2_101 <=u 0x4000130<32> l2305C636
l2305C636:
	word32 a0_113 = Mem32[s1_103 + 160<i32>:int32]
	Mem115[s1_103 + 164<i32>:word32] = 0x17<32>
	Mem120[s1_103 + 168<i32>:word32] = s2_101
	word32 a5_122
	word32 a1_580
	word32 a2_581
	word32 a3_582
	word32 a4_583
	word32 a6_584
	word32 a7_585
	memcpy(a0_113, s6_118, s2_101, out a1_580, out a2_581, out a3_582, out a4_583, out a5_122, out a6_584, out a7_585)
	word32 a0_164
	word32 s0_586
	word32 a1_587
	word32 a2_588
	word32 a3_589
	word32 a4_590
	word32 s4_591
	word32 s5_592
	word32 s11_593
	ra = mbedtls_ssl_write_record(ra, s1_103, s1_103, a5_122, mstatus, out s0_586, out s1_103, out a0_164, out a1_587, out a2_588, out a3_589, out a4_590, out a5_143, out s2_101, out s3, out s4_591, out s5_592, out s11_593, out mstatus)
	s0_169 = a0_164
	branch a0_164 == 0<32> l2305C668
l2305C656:
	a5_172 = a0_164
	a3_174 = 0x1FFFB08<32>
l2305C624:
	a5_177 = s2_101
	a4_178 = 0x23089E58<32>
l2305C5F2:
	word32 a0_183
	word32 a1_560
	word32 a4_563
	word32 a2_561
	word32 a3_562
	word32 s4_564
	word32 s5_565
	word32 s6_566
	word32 s7_567
	word32 s9_568
	word32 s10_569
	word32 s11_570
	mbedtls_ssl_flush_output(ra, s1_103, a5_109, dwArg0108, out s1_103, out a0_183, out a1_560, out a2_561, out a3_562, out a4_563, out a5_143, out s2_101, out s3, out s4_564, out s5_565, out s6_566, out s7_567, out s9_568, out s10_569, out s11_570)
	s0_169 = a0_183
	branch a0_183 == 0<32> l2305C668
l2305C668:
	s0_169 = s2_101
l2305C5FC:
	a5_172 = a0_183
	a3_174 = 0x1FFFAF4<32>
l2305C60C:
	word32 a1_608
	word32 a2_609
	word32 a3_610
	word32 a4_611
	word32 s4_612
	word32 s5_613
	word32 s6_614
	word32 s7_615
	word32 s8_616
	word32 s9_617
	word32 s10_618
	word32 s11_619
	mbedtls_debug_print_ret(ra, 1<32>, a3_174, a5_172, out a1_608, out a2_609, out a3_610, out a4_611, out a5_143, out s4_612, out s5_613, out s6_614, out s7_615, out s8_616, out s9_617, out s10_618, out s11_619)
l2305C5AA:
	a5_177 = s2_101
	a4_178 = 0x23089E10<32>
l2305C5BC:
	word32 a1_594
	word32 a2_595
	word32 a3_596
	word32 a4_597
	word32 a7_598
	word32 s4_599
	word32 s5_600
	word32 s6_601
	word32 s7_602
	word32 s8_603
	word32 s9_604
	word32 s10_605
	word32 s11_606
	word32 t4_607
	mbedtls_debug_print_msg(ra, s1_103, 1<32>, a4_178, a5_177, out a1_594, out a2_595, out a3_596, out a4_597, out a5_143, out a7_598, out s4_599, out s5_600, out s6_601, out s7_602, out s8_603, out s9_604, out s10_605, out s11_606, out t4_607)
	s0_169 = 0xF8FFFF00<32>
l2305C5CE:
	word32 a1_571
	word32 a2_572
	word32 a5_573
	word32 a7_574
	word32 s4_575
	word32 s6_576
	word32 s8_577
	word32 s11_578
	word32 t4_579
	mbedtls_debug_print_msg(ra, s1_103, 2<32>, 0x23089E94<32>, a5_143, out a1_571, out a2_572, out a3_300, out a4_301, out a5_573, out a7_574, out s4_575, out s5_306, out s6_576, out s7_308, out s8_577, out s9_310, out s10_303, out s11_578, out t4_579)
l2305C566:
	word32 s6_557
	word32 a5_555
	word32 a2_554
	word32 s11_559
	word32 s4_556
	word32 a1_553
	word32 s8_558
	mbedtls_debug_print_ret(ra, 1<32>, s5_81 + -1202<i32>, a0_61, out a1_553, out a2_554, out a3_300, out a4_301, out a5_555, out s4_556, out s5_306, out s6_557, out s7_308, out s8_558, out s9_310, out s10_303, out s11_559)
l2305C580:
	0<32> = dwArgA8
	s0Out = s1
	a0Out = s0_169
	a2Out = dwArg48
	a3Out = a3_300
	a4Out = a4_301
	s2Out = s2_101
	s3Out = s3
	s5Out = s5_306
	s7Out = s7_308
	s9Out = s9_310
	s10Out = s10_303
	mstatusOut = mstatus
	return ra
mbedtls_ssl_write_exit:


word32 mbedtls_ssl_read_version(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
mbedtls_ssl_read_version_entry:
l2305C674:
	word32 a5_10
	word32 a4_14 = CONVERT(Mem0[a3:byte], byte, word32)
	branch a2 != 1<32> l2305C69C
l2305C69C:
	Mem9[a4_14:word32] = a0
	a5_10 = CONVERT(Mem9[a3 + 1<i32>:byte], byte, word32)
l2305C67E:
	Mem13[257<i32> - a4_14:word32] = a0
	a4_14 = CONVERT(Mem13[a3 + 1<i32>:byte], byte, word32)
	a5_10 = 256<i32> - a4_14
	branch a5_10 == a2 l2305C698
l2305C698:
	a5_10 = 2<32>
l2305C694:
	Mem21[a5_10:word32] = a1
	a5Out = a5_10
	return a4_14
mbedtls_ssl_read_version_exit:


word32 mbedtls_ssl_read_record_layer(word32 ra, word32 s1, word32 a0, word32 a2, word32 s2, word32 s11, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s11:[0..31] s2:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a4 mstatus ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s2 sp
mbedtls_ssl_read_record_layer_entry:
l2305C6A4:
	word32 a0_1699
	word32 a1_31 = Mem29[a0 + 128<i32>:int32]
	a0_1699 = a0
	branch a1_31 == 0<32> l2305C720
l2305C6CC:
	a0_1699 = Mem29[a2 + 112<i32>:word32]
	branch a1_31 >=u a2 l2305C720
l2305C720:
	Mem39[a0 + 128<i32>:word32] = 0<32>
	s2_1043 = s2
l2305C738:
	word32 a5_1223
	word32 a3_1225
	word32 s2_1043
	word32 s0_46 = Mem45[a0_1699:word32]
	word32 a5_48
	word32 a0_55
	word32 s0_3217
	word32 s11_3226
	word32 s5_3220
	word32 s2_3218
	word32 s4_3219
	word32 s7_3222
	word32 s9_3224
	word32 s10_3225
	word32 s6_3221
	word32 s8_3223
	ra = mbedtls_ssl_fetch_input(ra, s0_46, s0_46, mbedtls_ssl_hdr_len.isra.1(a0_1699, out a5_48), a5_48, s2_1043, mstatus, dwArg58, dwArg88, out s0_3217, out a0_55, out s2_3218, out s3, out s4_3219, out s5_3220, out s6_3221, out s7_3222, out s8_3223, out s9_3224, out s10_3225, out s11_3226, out mstatus)
	branch a0_55 == 0<32> l2305C768
l2305C768:
	word32 a4_1474
	word32 a5_1471
	word32 s0_1469
	word32 s10_1497
	word32 s9_1504
	word32 s8_1503
	word32 s6_1544
	word32 a0_1490
	word32 a5_90
	mbedtls_ssl_hdr_len.isra.1(a0_55, out a5_90)
	word32 a3_103
	word32 a4_104
	word32 a2_3171
	word32 a1_3170
	word32 a5_3172
	word32 a7_3173
	mbedtls_debug_print_buf(ra, 4<32>, a5_90, out a1_3170, out a2_3171, out a3_103, out a4_104, out a5_3172, out a7_3173)
	word32 s0_111 = Mem45[a4_104 + 92<i32>:word32]
	Mem116[CONVERT(Mem45[a3_103:byte], byte, word32) + 108<i32>:word32] = s0_111
	word32 a2_118 = CONVERT(Mem116[a4_104:byte], byte, word32)
	word32 a5_120 = CONVERT(Mem116[a4_104 + 1<i32>:byte], byte, word32) << 8<i32> | a2_118
	Mem126[CONVERT(SLICE(a5_120 >>u 8<i32> | a5_120 << 8<u32>, word16, 0), word16, word32) + 112<i32>:word32] = s0_111
	word32 a5_132
	mbedtls_ssl_read_version(fp + -116<i32>, fp + -112<i32>, a2_118 >>u 1<i32> & 1<32>, a3_103 + 1<32>, out a5_132)
	word32 a4_149
	word32 s11_152
	word32 s4_153
	word32 a7_3178
	word32 a5_3177
	word32 a2_3175
	word32 a1_3174
	word32 a3_3176
	word32 s5_3179
	word32 s8_3182
	word32 s9_3183
	word32 s6_3180
	word32 s7_3181
	word32 s10_3184
	word32 t4_3185
	word32 a0_144 = mbedtls_debug_print_msg(ra, Mem136[a5_132 + 108<i32>:word32], 3<32>, 0x23089980<32>, a5_132, out a1_3174, out a2_3175, out a3_3176, out a4_149, out a5_3177, out a7_3178, out s4_153, out s5_3179, out s6_3180, out s7_3181, out s8_3182, out s9_3183, out s10_3184, out s11_152, out t4_3185)
	s2_1043 = 0x1000000<32>
	word32 s0_163 = Mem136[a4_149 + 108<i32>:word32]
	word32 a5_1563 = 3<32>
	branch a4_149 <=u 0xFFFFFFE9<32> l2305C85A
l2305C85A:
	word32 a4_1546
	word32 s0_1516 = Mem136[a4_149 + -12<i32>:word32]
	branch a4_149 == 0xFFFFFFE9<32> l2305C87C
l2305C87C:
	s0_1516 = Mem136[a0_144:word32]
	word32 a3_170 = CONVERT(Mem136[a0_144 + 113<i32>:byte], byte, word32)
	branch a3_170 >= 3<32> l2305C896
l2305C896:
	s0_1516 = Mem136[a3_170 + 80<i32>:word32]
	word32 s6_173 = Mem136[s0_1516 + 112<i32>:int32]
	a5_1563 = s11_152 - (3<32> - a3_170)
	branch a5_1563 >=u s6_173 l2305C8B6
l2305C8B6:
	s0_1516 = Mem136[a5_1563 + 52<i32>:word32]
	branch a5_1563 != 0<32> l2305C8D0
l2305C8D0:
	a5_1563 = Mem136[a5_1563 + 8<i32>:word32]
	branch s6_173 >=u a5_1563 l2305C8E4
l2305C8E4:
	s0_1516 = Mem136[a3_170 + 12<i32>:word32]
	branch a3_170 <= 0<32> l2305C902
l2305C8EA:
	a3_170 = s4_153 + 256<i32>
	a5_1563 = a5_1563 + (s4_153 + 256<i32>)
	branch a5_1563 >=u s6_173 l2305C902
l2305C8F4:
	a4_1546 = 0x23089A00<32>
l2305C8D6:
	a4_1546 = 0x23089A00<32>
l2305C8BA:
	a5_1563 = s6_173 + -1<i32>
	branch s6_173 + -1<i32> <u s4_153 l2305C902
l2305C902:
	branch (CONVERT(Mem136[a0_144 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305C99C
l2305C90A:
	word32 a4_1511
	word32 a5_1519
	word32 a5_197 = CONVERT(Mem136[a3_170 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem136[a3_170:byte], byte, word32)
	s0_1516 = Mem136[a3_170 + 84<i32>:word32]
	word32 a6_203 = CONVERT(SLICE(a5_197 << 8<u32> | a5_197 >>u 8<i32>, word16, 0), word16, word32)
	branch a4_149 != 0x14<32> l2305C95A
l2305C95A:
	branch a4_149 != 0x17<32> l2305C978
l2305C960:
	s0_1516 = Mem136[a4_149 + 4<i32>:word32]
	a5_1519 = 0x10<32>
	branch a4_149 == 0x10<32> l2305C978
l2305C968:
	a4_1511 = 0x23089A3C<32>
l2305C932:
	s0_1516 = Mem136[0x18<32>:word32]
	a5_1519 = 8<32>
	branch false l2305C978
l2305C978:
	word32 a5_217 = CONVERT(Mem136[s0_1516 + 120<i32>:uint16], uint16, word32)
	branch a6_203 == a5_217 l2305C99C
l2305C99C:
	word32 a5_222
	word32 a0_243
	word32 s0_251
	word32 s10_3249
	word32 s7_3246
	word32 s11_3250
	word32 s2_3242
	word32 s5_3244
	word32 s6_3245
	word32 s4_3243
	word32 s8_3247
	word32 s9_3248
	ra = mbedtls_ssl_fetch_input(ra, s0_1516, s0_1516, mbedtls_ssl_hdr_len.isra.1(a0_144, out a5_222) + s6_173, a5_222, 0x1000000<32>, mstatus, dwArg58, dwArg88, out s0_251, out a0_243, out s2_3242, out s3, out s4_3243, out s5_3244, out s6_3245, out s7_3246, out s8_3247, out s9_3248, out s10_3249, out s11_3250, out mstatus)
	branch a0_243 == 0<32> l2305C9D4
l2305C9D4:
	word32 s7_274 = Mem136[s0_251:int32]
	s2_1043 = Mem136[s0_251 + 112<i32>:int32]
	branch (CONVERT(Mem136[s7_274 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305CA5A
l2305CA5A:
	Mem278[s0_251 + 116<i32>:word32] = 0<32>
l2305C9E4:
	word32 a5_3288
	Mem283[mbedtls_ssl_hdr_len.isra.1(s7_274, out a5_3288) + s2_1043 + 124<i32>:word32] = s0_251
l2305C9EE:
	word32 a5_287
	mbedtls_ssl_hdr_len.isra.1(s7_274, out a5_287)
	word32 a1_3339
	word32 a3_3341
	word32 a7_3342
	word32 a2_3340
	word32 a5_1083
	word32 a4_1087
	mbedtls_debug_print_buf(ra, 4<32>, a5_287, out a1_3339, out a2_3340, out a3_3341, out a4_1087, out a5_1083, out a7_3342)
	word32 s0_312 = Mem288[a5_1083 + 52<i32>:word32]
	branch a5_1083 == 0<32> l2305D038
l2305CA1A:
	word32 s6_1252
	word32 a5_1233
	word32 s6_1042
	word32 a1_321
	word32 s5_329
	word32 s7_331
	word32 a3_3290
	word32 s9_3296
	word32 s11_3298
	word32 t4_3299
	word32 s10_3297
	word32 s6_3294
	word32 s8_3295
	word32 a4_3291
	word32 a7_3292
	word32 s4_3293
	word32 a2_3289
	word32 a5_1393
	mbedtls_debug_print_msg(ra, s0_312, 2<32>, 0x23089AFC<32>, a5_1083, out a1_321, out a2_3289, out a3_3290, out a4_3291, out a5_1393, out a7_3292, out s4_3293, out s5_329, out s6_3294, out s7_331, out s8_3295, out s9_3296, out s10_3297, out s11_3298, out t4_3299)
	word32 s0_1320 = Mem288[a5_1393 + 32<i32>:word32]
	branch a5_1393 == 0<32> l2305CA3A
l2305CA36:
	s0_1320 = Mem288[a5_1393 + 52<i32>:word32]
	branch a5_1393 != 0<32> l2305CA60
l2305CA60:
	word32 a3_340 = Mem288[a5_1393 + 144<i32>:int32]
	word32 a4_341 = 0<32>
	branch a3_340 == 0<32> l2305CA6C
l2305CA68:
	a4_341 = CONVERT(Mem288[a3_340 + 1<i32>:byte], byte, word32)
l2305CA6C:
	word32 a4_1350
	s2_1043 = Mem288[s0_1320 + 112<i32>:int32]
	branch s2_1043 >=u Mem288[a5_1393 + 8<i32>:int32] l2305CA94
l2305CA94:
	word32 a4_1313
	word32 s5_512
	word32 s7_447
	word32 s1_431
	branch (a4_341 + -6<i32> & 253<i32>) != 0<32> l2305CD6E
l2305CD6E:
	branch a4_341 != 2<32> l2305CF3C
l2305CF3C:
l2305CD74:
	word32 a6_358 = Mem357[a5_1393 + 12<i32>:int32]
	s0_1320 = Mem357[0xE<32>:word32]
	word32 a2_360 = 1<32>
	word32 a4_361 = a6_358
	branch true l2305CD86
l2305CD84:
	a4_361 = 0<32>
l2305CD86:
	word32 a7_365 = Mem357[a5_1393 + 20<i32>:int32]
	branch s2_1043 <u a4_361 + a6_358 l2305CD9C
l2305CD92:
	word32 a5_371 = a7_365 + 1<i32> + a4_361
	branch s2_1043 >=u a5_371 l2305CDAC
l2305CDAC:
	word32 s5_372 = s2_1043 & a6_358
	branch s5_372 == 0<32> l2305CDC4
l2305CDC4:
	word32 s0_374 = Mem357[a5_371 + 100<i32>:word32]
	branch false l2305CDDE
l2305CDCC:
	s2_1043 = s2_1043 - a6_358
	Mem377[s0_374 + 112<i32>:word32] = s2_1043
	word32 a4_378 = 0<32>
l2305CDD6:
	word32 a3_383 = Mem380[a2_360 + 12<i32>:word32]
	branch a4_378 <u a2_360 l2305CE66
l2305CE66:
	a2_360 = CONVERT(Mem380[a2_360 + a4_378:byte], byte, word32)
	Mem390[a3_383 + a4_378 + 40<i32>:byte] = SLICE(a2_360, byte, 0)
	a4_378 = a4_378 + 1<32>
l2305CDDE:
	word32 a0_406 = Mem395[a2_360 + 12<i32>:word32]
	word32 a0_422
	word32 a1_423
	word32 a2_424
	word32 a3_425
	word32 s4_434
	word32 s5_444
	ra = mbedtls_cipher_crypt(ra, a0_406 + 144<i32>, a0_406 + 40<i32>, a2_360, a5_371, s2_1043, a5_371, fp + -112<i32>, s5_372, s7_331, dwLoc98, s2, dwLoc38, dwLoc18, s11, dwArg30, dwArg34, dwArg58, dwArg88, out s0_1320, out s1_431, out a0_422, out a1_423, out a2_424, out a3_425, out a5_1393, out s2_1043, out s3, out s4_434, out s5_444)
	s7_447 = a0_422
	branch a0_422 == 0<32> l2305CE78
l2305CE78:
	branch s2_1043 == a5_1393 l2305CE8C
l2305CE8C:
	word32 a5_454 = CONVERT(Mem395[a1_423 + (a2_424 + -1<i32>):byte], byte, word32)
	word32 a6_456 = 1<32>
	a5_1393 = a5_454 + 1<32>
	word32 a4_458 = a5_454 + 1<32> + a3_425
	branch a2_424 >=u a4_458 l2305CEB0
l2305CEAC:
	a6_456 = 0<32>
	a5_1393 = 0<32>
l2305CEB0:
	s0_1320 = Mem395[a4_458 + 12<i32>:word32]
	branch a4_458 <= 0<32> l2305CF2E
l2305CF2E:
l2305CEB6:
	word32 a0_470 = a2_424 + -1<i32> - a5_1393
	word32 a4_480 = (CONVERT(a2_424 <u a5_1393 + 1<i32>, bool, word32) ^ 1<i32>) & CONVERT(a0_470 <u a3_425 + s4_434, bool, word32) & a6_456
	word32 a6_481 = a0_470 + a4_480
	word32 t3_482 = 1<32>
	word32 a0_483 = 1<32>
	word32 t5_484 = a5_1393 + -1<i32>
l2305CEE4:
	t3_482 = t3_482 & (CONVERT(a5_1393 <u a0_483, bool, word32) ^ 1<i32>)
	a0_483 = a0_483 + 1<32>
	s5_444 = s5_444 + (CONVERT(CONVERT(Mem395[(a6_481 + a0_483) + a1_423:byte], byte, word32) - t5_484 <u 1<i32>, bool, word32) + t3_482)
	branch a0_483 != 257<i32> l2305CEE4
l2305CF0E:
	s2_1043 = CONVERT(a5_1393 - s5_444 <u 1<i32>, bool, word32) & a4_480
	s5_512 = s2_1043 + 511<i32> & a5_1393
	Mem516[a2_424 - s5_512 + 112<i32>:word32] = s0_1320
l2305CE7E:
l2305CDFA:
	word32 s7_540
	word32 a5_3430
	word32 s4_3431
	word32 s5_3432
	word32 s8_3434
	word32 s9_3435
	word32 s10_3436
	word32 s11_3437
	word32 s6_3433
	word32 a4_3429
	word32 a2_3427
	word32 a3_3428
	word32 a1_3426
	mbedtls_debug_print_ret(ra, 1<32>, 1827<i32>, a0_422, out a1_3426, out a2_3427, out a3_3428, out a4_3429, out a5_3430, out s4_3431, out s5_3432, out s6_3433, out s7_540, out s8_3434, out s9_3435, out s10_3436, out s11_3437)
	s6_1042 = s7_540
l2305CDB4:
	a4_1350 = 0x23089BC8<32>
l2305CD9C:
	a4_1313 = 0x23089B88<32>
l2305CAA0:
	word32 a7_558 = 8<32>
	word32 a4_559 = CONVERT(Mem288[a4_341 + 28<i32>:byte], byte, word32)
	branch (a4_559 & 2<32>) != 0<32> l2305CAAE
l2305CAAC:
	a7_558 = 0x10<32>
l2305CAAE:
	word32 a5_565 = Mem288[Mem288[(a4_559 & 2<32>) + 12<i32>:word32] + 16<i32>:word32]
	branch s2_1043 >=u ((a4_559 & 2<32>) - a5_565) + a7_558 l2305CADA
l2305CADA:
	word32 s0_574 = Mem288[a1_321 + 84<i32>:word32]
	word32 s2_575 = s2_1043 + a5_565 - (a4_559 & 2<32>) - a7_558
	Mem577[s0_574 + 112<i32>:word32] = s2_575
	word32 s7_581 = Mem580[s0_574 + 100<i32>:int32]
	word32 a1_585
	word32 a2_586
	word32 a7_3347
	word32 a5_3345
	word32 a6_3346
	word32 a3_3343
	word32 a4_3344
	memcpy(fp + -112<i32>, a1_321, 8<32>, out a1_585, out a2_586, out a3_3343, out a4_3344, out a5_3345, out a6_3346, out a7_3347)
	mbedtls_ssl_write_version(fp + -112<i32>, a1_585, a2_586 >>u 1<i32> & 1<32>, fp + -103<i32>)
	word32 a1_624
	word32 a2_625
	word32 a4_3349
	word32 a5_3350
	word32 a7_3351
	word32 a3_3348
	word32 a0_622 = mbedtls_debug_print_buf(ra, 4<32>, fp + -112<i32>, out a1_624, out a2_625, out a3_3348, out a4_3349, out a5_3350, out a7_3351)
	word32 a5_641
	word32 a7_3357
	word32 a4_3355
	word32 a6_3356
	word32 a3_3354
	word32 a1_3352
	word32 a2_3353
	memcpy(a0_622 + (Mem614[a2_625 + 12<i32>:word32] + 40<i32>), a1_624, a2_625 - a0_622, out a1_3352, out a2_3353, out a3_3354, out a4_3355, out a5_641, out a6_3356, out a7_3357)
	word32 a7_3363
	word32 a1_3358
	word32 a4_3361
	word32 a5_3362
	word32 a2_3359
	word32 a3_3360
	mbedtls_debug_print_buf(ra, 4<32>, a5_641 + 40<i32>, out a1_3358, out a2_3359, out a3_3360, out a4_3361, out a5_3362, out a7_3363)
	word32 a2_688
	word32 a1_3364
	word32 a7_3368
	word32 a3_3365
	word32 a5_3367
	word32 a4_3366
	mbedtls_debug_print_buf(ra, 4<32>, s7_581 + s2_575, out a1_3364, out a2_688, out a3_3365, out a4_3366, out a5_3367, out a7_3368)
	word32 a0_699 = Mem684[a2_688 + 12<i32>:word32]
	word32 a0_712
	ra = mbedtls_cipher_auth_decrypt(a0_699 + 144<i32>, a0_699 + 40<i32>, a2_688, 0xD<32>, s2_575, s7_581, s5_329, dwLoc7C, s2, s1, dwArg98, dwArgB4, out s0_1320, out s1_431, out a0_712, out a5_1393, out s2_1043, out s3)
	branch a0_712 == 0<32> l2305CBEC
l2305CBEC:
	branch s2_1043 == a5_1393 l2305CC00
l2305CC00:
	s2_1043 = 1<32>
	s5_512 = 0<32>
	s7_447 = 1<32>
l2305CC06:
	word32 a1_762
	word32 a2_763
	word32 a4_765
	word32 a7_3438
	word32 a5_761
	word32 a3_1854
	mbedtls_debug_print_buf(ra, 4<32>, a5_1393, out a1_762, out a2_763, out a3_1854, out a4_765, out a5_761, out a7_3438)
	branch s7_447 != 0<32> l2305CD3C
l2305CC28:
	word32 a4_780 = Mem744[a4_765 + 20<i32>:word32]
	word32 a5_781 = a5_761 - a4_780
	Mem783[a5_781 + 112<i32>:word32] = Mem744[a4_780 + 92<i32>:word32]
	Mem785[a4_780:byte] = SLICE(a5_781 >>u 8<i32>, byte, 0)
	Mem788[(a5_781 >>u 8<i32>) + 1<i32>:byte] = SLICE(a4_780, byte, 0)
	word32 a4_794
	word32 a1_797
	word32 a3_3440
	word32 a7_3442
	word32 a6_3441
	word32 a2_3439
	memcpy(fp + -112<i32>, a1_762 + (a5_781 >>u 8<i32>), a2_763, out a1_797, out a2_3439, out a3_3440, out a4_794, out a5_1393, out a6_3441, out a7_3442)
	s0_1320 = Mem788[a5_1393 + 12<i32>:word32]
	branch a5_1393 <= 0<32> l2305CF68
l2305CF68:
l2305CC58:
	word32 a5_822 = s2_1043 + 255<i32>
	word32 s5_825 = a5_822 & (s5_512 + (a5_1393 + 0x15<32>) >>u 6<u32>) - (a5_1393 + 0x15<32> >>u 6<i32>)
	word32 a0_826
	word32 a4_828
	word32 a5_829
	word32 a0_835
	word32 a4_837
	word32 a5_838
	word32 a0_844
	word32 a4_846
	word32 a5_847
	word32 a0_854
	word32 a4_856
	word32 a5_857
	word32 a1_865
	word32 s1_3443
	word32 a2_3444
	word32 a4_3445
	word32 a5_3446
	word32 a0_864
	word32 ra_869 = mbedtls_md_hmac_finish(mbedtls_md_hmac_update(mbedtls_md_hmac_update(mbedtls_md_hmac_update(mbedtls_md_hmac_update(ra, fp + -44<i32>, a4_794, a5_822, dwLoc90, out a0_826, out a4_828, out a5_829), a0_826 + 68<i32>, a4_828, a5_829, dwLoc90, out a0_835, out a4_837, out a5_838), a0_835 + 68<i32>, a4_837, a5_838, dwLoc90, out a0_844, out a4_846, out a5_847), a0_844 + 68<i32>, a4_846, a5_847, dwLoc90, out a0_854, out a4_856, out a5_857), Mem788[a0_854 + 52<i32>:word32], s1_431, a0_854 + 68<i32>, a1_797 + a5_857, a4_856, a5_857, s2_1043, dwArg60, dwArg64, dwArg88, out s1_3443, out a0_864, out a1_865, out a2_3444, out a4_3445, out a5_3446, out s2_1043)
	word32 a5_874 = 0<32>
l2305CCC0:
	word32 a5_887
	ra_869 = mbedtls_md_process(ra_869, a0_864 + 68<i32>, a5_874, dwLoc90, out a0_864, out a5_887)
	a5_874 = a5_887 + 1<32>
	branch a5_887 + 1<32> <u s5_825 + 1<32> l2305CCC0
l2305CCD6:
	word32 a4_3448
	word32 a5_3449
	word32 s0_3447
	ra = mbedtls_md_hmac_reset(ra_869, a0_864 + 68<i32>, a1_865, a5_887 + 1<32>, out s0_3447, out a4_3448, out a5_3449)
	word32 a5_914
	word32 a4_918
	word32 a2_3451
	word32 a3_3452
	word32 a7_3453
	word32 a1_3450
	mbedtls_debug_print_buf(ra, 4<32>, fp + -112<i32>, out a1_3450, out a2_3451, out a3_3452, out a4_918, out a5_914, out a7_3453)
	word32 a1_937
	word32 a2_938
	word32 a7_3456
	word32 a4_3454
	word32 a5_3455
	word32 a0_935 = mbedtls_debug_print_buf(ra, 4<32>, a5_914 + a4_918, out a1_937, out a2_938, out a3_1854, out a4_3454, out a5_3455, out a7_3456)
	word32 a4_950 = 0<32>
	a5_761 = 0<32>
l2305CD30:
	branch a2_938 != a5_761 l2305CF4A
l2305CF4A:
	a3_1854 = CONVERT(Mem882[a0_935 + a5_761 + a1_937:byte], byte, word32) ^ CONVERT(Mem882[(fp + -112<i32>) + a5_761:byte], byte, word32)
	a5_761 = a5_761 + 1<32>
	a4_950 = a4_950 | a3_1854
l2305CD34:
	branch a4_950 != 0<32> l2305CBE4
l2305CD38:
	branch s2_1043 == 0<32> l2305CBE4
l2305CD3C:
	word32 s0_972 = Mem971[a5_761 + 112<i32>:word32]
	branch a5_761 != 0<32> l2305CF76
l2305CF76:
	Mem973[s0_972 + 132<i32>:word32] = 0<32>
l2305CD42:
	word32 a5_974 = Mem971[s0_972 + 132<i32>:int32]
	Mem977[s0_972 + 132<i32>:word32] = a5_974 + 1<32>
	a5_761 = a5_974 + 1<32>
	branch a5_974 <= 0xFFFFFFFE<32> l2305CF7A
l2305CF7A:
	word32 a5_982 = CONVERT(Mem979[a5_761 + 116<i32>:uint16], uint16, word32)
	word32 s0_1001 = Mem979[a5_761:word32]
	word32 a4_981 = 8<32>
	word32 a5_1003 = a5_982 & 2<32>
	branch (a5_982 & 2<32>) == 0<32> l2305CFE6
l2305CFE6:
	word32 a5_987 = CONVERT(Mem985[a5_1003 + 116<i32>:uint16], uint16, word32)
	a5_1003 = a5_987 & 2<32>
	branch (a5_987 & 2<32>) >=u a4_981 l2305D00A
l2305CFF2:
	word32 a2_992 = a4_981 + -1<i32>
	a3_1854 = a3_1854 + a2_992
	a5_1003 = CONVERT(Mem985[a3_1854:byte], byte, word32) + 1<32> & 255<i32>
	Mem997[a3_1854:byte] = SLICE(a5_1003, byte, 0)
	branch a5_1003 == 0<32> l2305CFE4
l2305CFE4:
	a4_981 = a2_992
l2305D00A:
	word32 a5_1002 = CONVERT(Mem1000[a5_1003 + 116<i32>:uint16], uint16, word32)
	s0_1001 = Mem1000[a5_1003:word32]
	a5_1003 = a5_1002 & 2<32>
	branch a4_981 != (a5_1002 & 2<32>) l2305CF86
l2305D016:
	word32 t4_3517
	word32 s5_3510
	word32 s10_3515
	word32 s11_3516
	word32 s6_3511
	word32 s8_3513
	word32 s9_3514
	word32 s7_3512
	word32 a4_3506
	word32 a5_3507
	word32 a7_3508
	word32 s4_3509
	word32 a1_3503
	word32 a2_3504
	word32 a3_3505
	mbedtls_debug_print_msg(ra, s0_1001, 1<32>, 0x23089C54<32>, a5_1002 & 2<32>, out a1_3503, out a2_3504, out a3_3505, out a4_3506, out a5_3507, out a7_3508, out s4_3509, out s5_3510, out s6_3511, out s7_3512, out s8_3513, out s9_3514, out s10_3515, out s11_3516, out t4_3517)
	s6_1042 = 0xF9000480<32>
l2305CF86:
	word32 s11_3483
	word32 a5_1055
	word32 s4_1063
	word32 t4_3484
	word32 s10_3482
	word32 s5_3477
	word32 s8_3480
	word32 s9_3481
	word32 s6_3478
	word32 s7_3479
	word32 a4_3475
	word32 a7_3476
	word32 a3_3474
	word32 a1_3472
	word32 a2_3473
	mbedtls_debug_print_msg(ra, s0_1001, 2<32>, 0x23089C78<32>, a5_1003, out a1_3472, out a2_3473, out a3_3474, out a4_3475, out a5_1055, out a7_3476, out s4_1063, out s5_3477, out s6_3478, out s7_3479, out s8_3480, out s9_3481, out s10_3482, out s11_3483, out t4_3484)
	word32 a1_3485
	word32 a3_3487
	word32 a7_3488
	word32 a2_3486
	mbedtls_debug_print_buf(ra, 4<32>, a5_1055, out a1_3485, out a2_3486, out a3_3487, out a4_1087, out a5_1083, out a7_3488)
	s2_1043 = 0x1000000<32>
	word32 s0_1093 = Mem1073[a5_1083 + 112<i32>:word32]
	branch s4_1063 >=u a5_1083 l2305D038
l2305D038:
	word32 a5_1097 = CONVERT(Mem1095[a5_1083 + 116<i32>:uint16], uint16, word32)
	branch (a5_1097 & 2<32>) == 0<32> l2305C700
l2305D044:
	branch (a5_1097 & 2<32>) == 0<32> l2305C700
l2305D04A:
	branch a4_1087 != 0x10<32> l2305C700
l2305D052:
	word32 s0_1103 = Mem1095[a4_1087 + 108<i32>:word32]
	word32 a5_1104 = 0x16<32>
	branch a4_1087 != 0x16<32> l2305D09C
l2305D05A:
	s0_1103 = Mem1095[0x7A<32>:word32]
	a5_1104 = 0x14<32>
	branch CONVERT(Mem1095[0x16<32>:byte], byte, word32) != 0x14<32> l2305D09C
l2305D09C:
	ssl_handshake_wrapup_free_hs_transform(ra, s0_1103, a5_1104, mstatus, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8)
l2305D066:
	word32 a5_1170
	word32 s9_3321
	word32 s10_3322
	word32 s11_3323
	word32 t4_3324
	word32 s8_3320
	word32 s7_3319
	word32 s4_3316
	word32 s5_3317
	word32 s6_3318
	word32 a7_3315
	word32 a4_3314
	word32 a2_3312
	word32 a3_3313
	word32 a1_3311
	mbedtls_debug_print_msg(ra, s0_1103, 2<32>, 0x23089CD4<32>, 0x14<32>, out a1_3311, out a2_3312, out a3_3313, out a4_3314, out a5_1170, out a7_3315, out s4_3316, out s5_3317, out s6_3318, out s7_3319, out s8_3320, out s9_3321, out s10_3322, out s11_3323, out t4_3324)
	word32 s2_1202
	word32 a0_1218
	word32 s10_3337
	word32 s11_3338
	word32 s9_3336
	word32 a5_3331
	word32 s6_3334
	word32 s7_3335
	word32 s4_3332
	word32 s5_3333
	word32 a2_3328
	word32 a3_3329
	word32 a4_3330
	word32 a1_3327
	word32 s0_3325
	word32 s1_3326
	ra = mbedtls_ssl_resend(ra, s0_1103, s0_1103, a5_1170, 0x1000000<32>, mstatus, dwArg88, out s0_3325, out s1_3326, out a0_1218, out a1_3327, out a2_3328, out a3_3329, out a4_3330, out a5_3331, out s2_1202, out s3, out s4_3332, out s5_3333, out s6_3334, out s7_3335, out s9_3336, out s10_3337, out s11_3338, out mstatus)
	branch a0_1218 == 0<32> l2305D0A6
l2305D0A6:
l2305D08A:
	a5_1223 = a0_1218
	a3_1225 = s2_1202 + -143<i32>
l2305CFC4:
	word32 a7_3493
	word32 t4_3502
	word32 s5_3495
	word32 s6_3496
	word32 s7_3497
	word32 s8_3498
	word32 s9_3499
	word32 s10_3500
	word32 s11_3501
	word32 s4_3494
	word32 a3_3491
	word32 a4_3492
	word32 a1_3489
	word32 a2_3490
	mbedtls_debug_print_msg(ra, s0_1093, 1<32>, 0x23089A00<32>, a5_1083, out a1_3489, out a2_3490, out a3_3491, out a4_3492, out a5_1233, out a7_3493, out s4_3494, out s5_3495, out s6_3496, out s7_3497, out s8_3498, out s9_3499, out s10_3500, out s11_3501, out t4_3502)
	s6_1252 = 0xF8FFFE00<32>
l2305CD52:
	word32 a1_3457
	word32 a2_3458
	word32 a3_3459
	word32 a5_3461
	word32 s8_3467
	word32 s10_3469
	word32 s11_3470
	word32 t4_3471
	word32 s9_3468
	word32 s6_3465
	word32 s7_3466
	word32 a7_3462
	word32 s4_3463
	word32 s5_3464
	word32 a4_3460
	mbedtls_debug_print_msg(ra, s0_972, 1<32>, 0x23089C14<32>, a5_974 + 1<32>, out a1_3457, out a2_3458, out a3_3459, out a4_3460, out a5_3461, out a7_3462, out s4_3463, out s5_3464, out s6_3465, out s7_3466, out s8_3467, out s9_3468, out s10_3469, out s11_3470, out t4_3471)
l2305CBF2:
l2305CBC0:
	word32 s5_1300
	word32 a4_3372
	word32 s7_3376
	word32 a5_3373
	word32 a1_3369
	word32 s8_3377
	word32 s9_3378
	word32 s11_3380
	word32 s10_3379
	word32 s6_3375
	word32 s4_3374
	word32 a3_3371
	word32 a2_3370
	mbedtls_debug_print_ret(ra, 1<32>, 1701<i32>, a0_712, out a1_3369, out a2_3370, out a3_3371, out a4_3372, out a5_3373, out s4_3374, out s5_1300, out s6_3375, out s7_3376, out s8_3377, out s9_3378, out s10_3379, out s11_3380)
	s6_1042 = s5_1300
	branch s5_1300 != s3 + -768<i32> l2305CE16
l2305CABE:
	a4_1313 = 0x23089B2C<32>
l2305CACC:
	word32 s5_3403
	word32 s6_3404
	word32 s7_3405
	word32 s9_3407
	word32 s10_3408
	word32 s11_3409
	word32 t4_3410
	word32 s8_3406
	word32 s4_3402
	word32 a2_3397
	word32 a5_3400
	word32 a7_3401
	word32 a3_3398
	word32 a4_3399
	word32 a1_3396
	mbedtls_debug_print_msg(ra, s0_1320, 1<32>, a4_1313, s2_1043, out a1_3396, out a2_3397, out a3_3398, out a4_3399, out a5_3400, out a7_3401, out s4_3402, out s5_3403, out s6_3404, out s7_3405, out s8_3406, out s9_3407, out s10_3408, out s11_3409, out t4_3410)
l2305CA78:
	a4_1350 = 0x23089B0C<32>
l2305CA86:
	word32 s11_3424
	word32 t4_3425
	word32 a3_3413
	word32 s10_3423
	word32 s8_3421
	word32 s9_3422
	word32 s7_3420
	word32 a5_3415
	word32 a7_3416
	word32 s4_3417
	word32 s5_3418
	word32 s6_3419
	word32 a4_3414
	word32 a1_3411
	word32 a2_3412
	mbedtls_debug_print_msg(ra, s0_1320, 1<32>, a4_1350, s2_1043, out a1_3411, out a2_3412, out a3_3413, out a4_3414, out a5_3415, out a7_3416, out s4_3417, out s5_3418, out s6_3419, out s7_3420, out s8_3421, out s9_3422, out s10_3423, out s11_3424, out t4_3425)
l2305CBE4:
	s6_1042 = 0xF8FFFE80<32>
l2305CA3A:
l2305CA46:
	word32 a7_3386
	word32 s11_3394
	word32 t4_3395
	word32 s10_3393
	word32 s5_3388
	word32 s6_3389
	word32 s7_3390
	word32 s8_3391
	word32 s9_3392
	word32 s4_3387
	word32 a4_3384
	word32 a5_3385
	word32 a1_3381
	word32 a2_3382
	word32 a3_3383
	mbedtls_debug_print_msg(ra, s0_1320, 1<32>, 0x23088F14<32>, a5_1393, out a1_3381, out a2_3382, out a3_3383, out a4_3384, out a5_3385, out a7_3386, out s4_3387, out s5_3388, out s6_3389, out s7_3390, out s8_3391, out s9_3392, out s10_3393, out s11_3394, out t4_3395)
	s6_1042 = 0xF9000400<32>
l2305CE16:
	word32 s10_3309
	word32 s11_3310
	word32 s7_3306
	word32 s8_3307
	word32 s9_3308
	word32 s5_3305
	word32 a1_3300
	word32 a2_3301
	word32 a3_3302
	word32 a4_3303
	word32 s4_3304
	mbedtls_debug_print_ret(ra, 1<32>, 0xFFFE79<32>, s6_1042, out a1_3300, out a2_3301, out a3_3302, out a4_3303, out a5_1233, out s4_3304, out s5_3305, out s6_1252, out s7_3306, out s8_3307, out s9_3308, out s10_3309, out s11_3310)
l2305CE32:
	branch (CONVERT(Mem1454[a5_1233 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305C700
l2305CE3E:
	branch (s6_1252 & -129<i32>) != 0xF8FFFE00<32> l2305C700
l2305CE4C:
	s0_1469 = Mem1454[0xF8FFFE04<32>:word32]
	a5_1471 = 0xF8FFFDF5<32>
	branch false l2305C700
l2305CE56:
	a4_1474 = 0x23089CB4<32>
l2305C9AE:
	a5_1223 = a0_243
	a3_1225 = 0xFFFF11<32>
l2305C980:
	word32 a3_3253
	word32 s4_3257
	word32 a4_3254
	word32 s5_3258
	word32 s6_3259
	word32 s11_3261
	word32 t4_3262
	word32 s7_3260
	word32 a7_3256
	word32 a5_3255
	word32 a2_3252
	word32 a1_3251
	a0_1490 = mbedtls_debug_print_msg(ra, s0_1516, 1<32>, 0x23089A60<32>, a5_217, out a1_3251, out a2_3252, out a3_3253, out a4_3254, out a5_3255, out a7_3256, out s4_3257, out s5_3258, out s6_3259, out s7_3260, out s8_1503, out s9_1504, out s10_1497, out s11_3261, out t4_3262)
l2305C93A:
	a4_1511 = 0x23089A14<32>
l2305C948:
	word32 a5_3267
	word32 s4_3269
	word32 s5_3270
	word32 s6_3271
	word32 s7_3272
	word32 s11_3273
	word32 t4_3274
	word32 a7_3268
	word32 a3_3265
	word32 a4_3266
	word32 a1_3263
	word32 a2_3264
	a0_1490 = mbedtls_debug_print_msg(ra, s0_1516, 1<32>, a4_1511, a5_1519, out a1_3263, out a2_3264, out a3_3265, out a4_3266, out a5_3267, out a7_3268, out s4_3269, out s5_3270, out s6_3271, out s7_3272, out s8_1503, out s9_1504, out s10_1497, out s11_3273, out t4_3274)
l2305C954:
	s6_1544 = s3 + -1792<i32>
l2305C8C2:
	a4_1546 = 0x23089A00<32>
l2305C8A8:
	a4_1546 = 0x23089A00<32>
l2305C888:
	a4_1546 = 0x230899E8<32>
l2305C862:
	a4_1546 = 0x230899D0<32>
l2305C86E:
	word32 t4_3216
	word32 s4_3211
	word32 a7_3210
	word32 a5_3209
	word32 a4_3208
	word32 s7_3214
	word32 s5_3212
	word32 s6_3213
	word32 a1_3205
	word32 a2_3206
	word32 a3_3207
	word32 s11_3215
	a0_1490 = mbedtls_debug_print_msg(ra, s0_1516, 1<32>, a4_1546, a5_1563, out a1_3205, out a2_3206, out a3_3207, out a4_3208, out a5_3209, out a7_3210, out s4_3211, out s5_3212, out s6_3213, out s7_3214, out s8_1503, out s9_1504, out s10_1497, out s11_3215, out t4_3216)
l2305C7F4:
	word32 s9_3196
	word32 a5_1591
	word32 s11_3198
	word32 a1_3186
	word32 t4_3199
	word32 s7_3194
	word32 a2_3187
	word32 a3_3188
	word32 a4_3189
	word32 s4_3191
	word32 s5_3192
	word32 s8_3195
	word32 a7_3190
	word32 s6_3193
	word32 s10_3197
	mbedtls_debug_print_msg(ra, s0_163, 1<32>, 0x230899BC<32>, 3<32>, out a1_3186, out a2_3187, out a3_3188, out a4_3189, out a5_1591, out a7_3190, out s4_3191, out s5_3192, out s6_3193, out s7_3194, out s8_3195, out s9_3196, out s10_3197, out s11_3198, out t4_3199)
	word32 s0_3200
	word32 s1_3201
	word32 a4_3202
	word32 a5_3203
	word32 s5_3204
	ra = mbedtls_ssl_send_alert_message(ra, s0_163, 0xA<32>, a5_1591, mstatus, out s0_3200, out s1_3201, out a0_1490, out a4_3202, out a5_3203, out s2_1043, out s3, out s5_3204, out s8_1503, out s9_1504, out s10_1497, out mstatus)
	s6_1544 = a0_1490
	branch a0_1490 != 0<32> l2305C820
l2305C81A:
	s6_1544 = 0xF8FFFE00<32>
l2305C820:
	s0_1469 = Mem136[a0_1490:word32]
	branch (CONVERT(Mem136[a0_1490 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305C700
l2305C82C:
	branch s6_1544 == s8_1503 l2305C700
l2305C830:
	a5_1471 = s3 + -1792<i32>
	branch s6_1544 != a5_1471 l2305C9C0
l2305C9C0:
	Mem1665[s0_1469 + 124<i32>:word32] = 0<32>
	Mem1666[s0_1469 + 116<i32>:word32] = 0<32>
	a4_1474 = s9_1504 + -1348<i32>
l2305C838:
	word32 a0_1672 = mbedtls_ssl_hdr_len.isra.1(a0_1490, out a5_1471)
	s0_1469 = Mem136[a5_1471 + 112<i32>:word32]
	Mem1681[a0_1672 + a5_1471 + 124<i32>:word32] = s0_1469
	a4_1474 = s10_1497 + -1388<i32>
l2305C84C:
	word32 s8_3237
	word32 a1_3227
	word32 s9_3238
	word32 a2_3228
	word32 s5_3234
	word32 a5_3231
	word32 a3_3229
	word32 a7_3232
	word32 s4_3233
	word32 a4_3230
	word32 t4_3241
	word32 s6_3235
	word32 s7_3236
	word32 s10_3239
	word32 s11_3240
	a0_1699 = mbedtls_debug_print_msg(ra, s0_1469, 1<32>, a4_1474, a5_1471, out a1_3227, out a2_3228, out a3_3229, out a4_3230, out a5_3231, out a7_3232, out s4_3233, out s5_3234, out s6_3235, out s7_3236, out s8_3237, out s9_3238, out s10_3239, out s11_3240, out t4_3241)
l2305C74A:
	a5_1223 = a0_55
	a3_1225 = 0xFFFEE7<32>
l2305C75A:
	word32 s10_3286
	word32 s11_3287
	word32 s9_3285
	word32 s4_3280
	word32 s7_3283
	word32 s8_3284
	word32 s5_3281
	word32 s6_3282
	word32 a3_3277
	word32 a4_3278
	word32 a5_3279
	word32 a2_3276
	word32 a1_3275
	mbedtls_debug_print_ret(ra, 1<32>, a3_1225, a5_1223, out a1_3275, out a2_3276, out a3_3277, out a4_3278, out a5_3279, out s4_3280, out s5_3281, out s6_3282, out s7_3283, out s8_3284, out s9_3285, out s10_3286, out s11_3287)
l2305C6D2:
	word32 a2_1751 = a2 - a1_31
	Mem1752[a2_1751 + 112<i32>:word32] = a0_1699
	word32 a0_1753 = Mem1752[a0_1699 + 100<i32>:word32]
	word32 a5_1759
	word32 a3_3162
	word32 a4_3163
	memmove(a0_1753, a1_31 + a0_1753, a2_1751, out a3_3162, out a4_3163, out a5_1759)
	word32 a2_3165
	word32 a1_3164
	word32 a3_3166
	word32 a4_3167
	word32 a7_3169
	word32 a5_3168
	mbedtls_debug_print_buf(ra, 4<32>, a5_1759, out a1_3164, out a2_3165, out a3_3166, out a4_3167, out a5_3168, out a7_3169)
l2305C700:
	a0Out = dwLoc18
	a4Out = dwLoc38
	s3Out = s3
	mstatusOut = mstatus
	return ra
mbedtls_ssl_read_record_layer_exit:


word32 mbedtls_ssl_read_record(word32 ra, word32 s1, word32 a0, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_certificate
//      mbedtls_ssl_parse_change_cipher_spec
//      mbedtls_ssl_parse_finished
//      mbedtls_ssl_read
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_read_record_entry:
l2305D0B0:
	word32 a1_318
	word32 a3_319
	word32 a4_320
	word32 a5_321
	word32 a7_322
	word32 s4_323
	word32 s5_324
	word32 s6_325
	word32 s7_326
	word32 s8_327
	word32 s9_328
	word32 s10_329
	word32 t4_330
	word32 s11_34
	word32 a2_29
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230898D8<32>, a5, out a1_318, out a2_29, out a3_319, out a4_320, out a5_321, out a7_322, out s4_323, out s5_324, out s6_325, out s7_326, out s8_327, out s9_328, out s10_329, out s11_34, out t4_330)
	word32 s2_162 = 0x2308A000<32>
	word32 s1_23 = a0
l2305D0E0:
	word32 s6_144
	word32 s9_147
	word32 s7_145
	word32 s5_143
	word32 a1_135
	word32 a3_137
	word32 a4_138
	word32 a5_134
	word32 a5_154
	word32 a3_156
	word32 s11_141
	word32 s10_140
	word32 a0_54
	word32 a4_58
	word32 s3_281
	ra = mbedtls_ssl_read_record_layer(ra, s1_23, s1_23, a2_29, s2_162, s11_34, mstatus, dwArg10, dwArg14, dwArg38, dwArg40, dwArg44, s1, dwArg78, dwArg88, dwArg94, dwArgA8, dwArgB8, dwArgC8, out a0_54, out a4_58, out s3_281, out mstatus)
	word32 s0_114 = a0_54
	branch a0_54 == 0<32> l2305D116
l2305D116:
	word32 a0_85
	word32 a1_86
	word32 a4_89
	ra = mbedtls_ssl_handle_message_type(ra, a4_58, mstatus, dwArg18, dwArgA8, dwArgB8, dwArgE8, dwArg0128, dwArg0168, out s1_23, out a0_85, out a1_86, out a2_29, out a4_89, out s2_162, out s3_281, out s11_34, out mstatus)
	s0_114 = a0_85
	branch a0_85 == s3_281 l2305D0E0
l2305D122:
	branch a0_85 == 0<32> l2305D136
l2305D136:
	word32 s1_115 = Mem21[a4_89 + 108<i32>:word32]
	word32 a5_116 = 0x16<32>
	branch a4_89 != 0x16<32> l2305D144
l2305D13E:
	a5_116 = mbedtls_ssl_update_handshake_status(ra, a1_86, a4_89)
l2305D144:
	word32 a2_334
	word32 a7_335
	word32 s4_336
	word32 s8_337
	word32 t4_338
	mbedtls_debug_print_msg(ra, s1_115, 2<32>, 0x23089928<32>, a5_116, out a1_135, out a2_334, out a3_137, out a4_138, out a5_134, out a7_335, out s4_336, out s5_143, out s6_144, out s7_145, out s8_337, out s9_147, out s10_140, out s11_141, out t4_338)
l2305D124:
	a5_154 = a0_85
	a3_156 = 0xFFFEBA<32>
l2305D0EA:
	a5_154 = a0_54
	a3_156 = 0xFFFEB0<32>
l2305D0FA:
	word32 a2_331
	word32 s4_332
	word32 s8_333
	mbedtls_debug_print_ret(ra, 1<32>, a3_156, a5_154, out a1_135, out a2_331, out a3_137, out a4_138, out a5_134, out s4_332, out s5_143, out s6_144, out s7_145, out s8_333, out s9_147, out s10_140, out s11_141)
l2305D106:
	a0Out = s0_114
	a1Out = a1_135
	a3Out = a3_137
	a4Out = a4_138
	a5Out = a5_134
	s2Out = s2_162
	s3Out = s3_281
	s4Out = dwArg04
	s5Out = s5_143
	s6Out = s6_144
	s7Out = s7_145
	s9Out = s9_147
	s10Out = s10_140
	s11Out = s11_141
	mstatusOut = mstatus
	return ra
mbedtls_ssl_read_record_exit:


void mbedtls_ssl_parse_certificate(word32 ra, word32 s0, word32 s1, word32 a5, word32 s2, word32 s5, word32 s6, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0114, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0114:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_parse_certificate_entry:
l2305D160:
	word32 a0_27 = Mem21[a5:word32]
	word32 s5_45
	word32 a3_1543
	word32 a5_1545
	word32 a4_1544
	word32 a1_1541
	word32 a2_1542
	word32 s4_1547
	word32 s7_1549
	word32 s6_1548
	word32 a7_1546
	word32 s11_1553
	word32 t4_1554
	word32 s8_1550
	word32 s9_1551
	word32 s10_1552
	mbedtls_debug_print_msg(ra, a0_27, 2<32>, 0x23089350<32>, Mem21[s1 + 116<i32>:word32], out a1_1541, out a2_1542, out a3_1543, out a4_1544, out a5_1545, out a7_1546, out s4_1547, out s5_45, out s6_1548, out s7_1549, out s8_1550, out s9_1551, out s10_1552, out s11_1553, out t4_1554)
	word32 a3_54 = CONVERT(Mem21[s5_45 + 10<i32>:byte], byte, word32)
	word32 s0_34 = a0_27
	word32 s1_56 = s1 >>u 2<i32> & 3<32>
	word32 a4_58 = a3_54 + -5<i32> & 255<i32>
	word32 a5_59 = 6<32>
	branch a4_58 >u 6<32> l2305D1F8
l2305D1B4:
	word32 a5_62 = 75<i32> >>u a4_58
	a5_59 = a5_62 & 1<32>
	branch (a5_62 & 1<32>) == 0<32> l2305D1F8
l2305D1F8:
	word32 a5_67 = CONVERT(Mem21[a5_59 + 116<i32>:uint16], uint16, word32)
	s0_34 = Mem21[a5_59:word32]
	a5_59 = a5_67 & 1<32>
	branch (a5_67 & 1<32>) == 0<32> l2305D21C
l2305D202:
	a4_58 = 7<32>
	branch a3_54 != 7<32> l2305D21C
l2305D21C:
	word32 s0_74 = Mem21[a4_58 + 48<i32>:word32]
	word32 s4_75 = Mem21[a4_58 + 12<i32>:int32]
	branch s4_75 != 3<32> l2305D22A
l2305D228:
	s4_75 = s1_56
l2305D22A:
	branch (a5_67 & 1<32>) == 0<32> l2305D248
l2305D22C:
	branch s4_75 != 0<32> l2305D248
l2305D248:
	word32 a5_352
	word32 a3_354
	word32 a5_108
	word32 s2_1571
	word32 a4_1570
	word32 s6_1574
	word32 s3_1572
	word32 s4_1573
	word32 a3_1569
	word32 s7_1575
	word32 s9_1576
	word32 a0_133
	word32 a1_104
	word32 s5_120
	word32 mstatus_111
	word32 s10_115
	word32 s11_116
	word32 ra_112 = mbedtls_ssl_read_record(ra, s1_56, s0_74, a5_67 & 1<32>, mstatus, s2, s0, dwLoc18, dwArg08, dwArg10, dwArg14, dwArg48, s5, ra, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgF8, dwArg0138, out a0_133, out a1_104, out a3_1569, out a4_1570, out a5_108, out s2_1571, out s3_1572, out s4_1573, out s5_120, out s6_1574, out s7_1575, out s9_1576, out s10_115, out s11_116, out mstatus_111)
	word32 s1_134 = a0_133
	branch a0_133 == 0<32> l2305D270
l2305D270:
	word32 s0_150
	Mem137[a5_108 + 5<32>:word32] = Mem21[a5_108 + 4<i32>:word32]
	word32 a5_139 = CONVERT(Mem137[a5_108 + 0x75<32>:uint16], uint16, word32)
	word32 a4_140 = a5_139 & 1<i32>
	branch (a5_139 & 1<i32>) == 0<32> l2305D314
l2305D282:
	word32 s0_141 = Mem137[(a5_139 & 1<i32>) + 12<i32>:word32]
	branch (a5_139 & 1<i32>) == 0<32> l2305D314
l2305D286:
	word32 a3_143 = Mem137[s0_141 + 128<i32>:int32]
	a4_140 = 4<32>
	branch (a5_139 & 2<32>) == 0<32> l2305D292
l2305D290:
	a4_140 = 0xC<32>
l2305D292:
	branch a3_143 != a4_140 + 3<i32> l2305D314
l2305D29A:
	s0_150 = Mem137[a3_143 + 108<i32>:word32]
	branch a3_143 == 0x16<32> l2305D2C4
l2305D2C4:
	word32 s0_153 = Mem137[a0_133 + 100<i32>:word32]
	branch CONVERT(Mem137[a0_133:byte], byte, word32) != 0xB<32> l2305D31C
l2305D2D0:
	word32 a5_161
	word32 a2_1592
	word32 a3_1593
	a0_133 = memcmp(a0_133 + a4_140, 0x23088E44<32>, 3<32>, out a1_104, out a2_1592, out a3_1593, out a4_140, out a5_161)
	s1_134 = a0_133
	branch a0_133 != 0<32> l2305D314
l2305D314:
	s0_150 = Mem137[a4_140 + 108<i32>:word32]
	branch a4_140 != 0x16<32> l2305D2A2
l2305D31C:
	word32 s0_173 = Mem137[a4_140 + 100<i32>:word32]
	word32 a5_174 = 0xB<32>
	branch CONVERT(Mem137[a4_140:byte], byte, word32) != 0xB<32> l2305D342
l2305D328:
	s0_173 = Mem137[0xB<32>:word32]
	word32 a3_177 = Mem137[s0_173 + 128<i32>:int32]
	word32 s3_178 = 4<32>
	branch (CONVERT(Mem137[0x7F<32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305D33A
l2305D338:
	s3_178 = 0xC<32>
l2305D33A:
	a5_174 = s3_178 + 6<i32>
	branch a3_177 >=u a5_174 l2305D364
l2305D364:
	word32 a4_186 = a4_140 + s3_178
	word32 a4_190 = CONVERT(Mem137[a4_186:byte], byte, word32)
	a5_174 = CONVERT(Mem137[a4_186 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem137[a4_186 + 2<i32>:byte], byte, word32)
	branch a4_190 != 0<32> l2305D380
l2305D378:
	a5_174 = a5_174 + (s3_178 + 3<32>)
	branch a3_177 == a5_174 l2305D390
l2305D390:
	word32 a5_199 = Mem137[a0_133 + 92<i32>:word32]
	branch a0_133 == 0<32> l2305D3A2
l2305D396:
	word32 a0_216
	word32 a2_218
	word32 s1_1630
	word32 a5_1632
	word32 s3_1633
	word32 a1_1631
	word32 s0_1629
	word32 s4_1634
	word32 s8_1635
	ra_112 = mbedtls_x509_crt_free(ra_112, a0_133, a1_104, a5_199, mstatus_111, dwArg0108, dwArg0148, out s0_1629, out s1_1630, out a0_216, out a1_1631, out a2_218, out a5_1632, out s3_1633, out s4_1634, out s8_1635)
	word32 t3_1642
	word32 s4_1641
	word32 a6_1640
	word32 a2_1639
	word32 s0_1636
	word32 a0_1637
	word32 a1_1638
	vPortFree(a0_216, a2_218, Mem137[a0_216 + 92<i32>:word32], mstatus_111, dwArg0128, dwArg0168, out s0_1636, out s1_134, out a0_1637, out a1_1638, out a2_1639, out a3_177, out a4_190, out a5_199, out a6_1640, out s4_1641, out t3_1642)
l2305D3A2:
	word32 a5_265
	word32 s0_268
	word32 s1_269
	word32 s2_1626
	word32 s8_1628
	word32 s4_1627
	word32 a1_1622
	word32 a2_1623
	word32 a3_1624
	word32 a4_1625
	word32 s3_271
	word32 ra_267 = mycalloc(ra_112, s1_134, 1<32>, 308<i32>, a3_177, a4_190, a5_199, mstatus_111, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out s0_268, out s1_269, out a1_1622, out a2_1623, out a3_1624, out a4_1625, out a5_265, out s2_1626, out s3_271, out s4_1627, out s8_1628)
	Mem278[0x5D<32>:word32] = s1_269
	branch true l2305D3D8
l2305D3D8:
	word32 s0_279 = Mem278[a5_265 + 44<i32>:word32]
	word32 s7_283 = 127<i32>
	word32 s6_284 = 0xFDFFF9D2<32>
	word32 a3_1643
	word32 a1_286
	word32 a0_285
	word32 a5_290
	ra_112 = mbedtls_x509_crt_init(ra_267, 1<32>, out a0_285, out a1_286, out a3_1643, out a5_290)
l2305D3EC:
	word32 a4_296 = Mem278[s0_279 + 128<i32>:int32]
	branch s3_271 <u a4_296 l2305D502
l2305D502:
	a5_174 = a1_286 + s3_271
	s0_173 = Mem278[a1_286 + 100<i32>:word32]
	word32 a3_301 = CONVERT(Mem278[a5_174:byte], byte, word32)
	branch a3_301 == 0<32> l2305D51E
l2305D51E:
	word32 a2_305 = CONVERT(Mem278[a5_174 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem278[a5_174 + 2<i32>:byte], byte, word32)
	a5_174 = s3_271 + 3<i32>
	branch s7_283 >=u a2_305 l2305D53A
l2305D532:
	branch a4_296 >=u a2_305 + a5_174 l2305D54A
l2305D54A:
	word32 s9_1687
	word32 s8_1686
	word32 a2_1685
	ra_112 = mbedtls_x509_crt_parse_der(ra_112, Mem278[a4_296 + 44<i32>:word32], a0_285, a1_286 + a5_174, a2_305, a3_301, Mem278[a0_285 + 92<i32>:word32], a5_174, s5_120, s6_284, s7_283, s10_115, s11_116, mstatus_111, dwLoc2C, s6, s0, dwLoc18, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, dwArg48, s5, dwArg68, dwArg78, dwArg94, dwArg98, dwArgB8, dwArgD8, dwArg0114, out s0_279, out a0_285, out a1_286, out a2_1685, out a5_290, out s3_271, out s5_120, out s6_284, out s7_283, out s8_1686, out s9_1687, out s10_115, out s11_116, out mstatus_111)
	branch a0_285 == 0<32> l2305D3EC
l2305D55A:
	branch a0_285 == s6_284 l2305D3EC
l2305D55E:
	a5_352 = a0_285
	a3_354 = 0x1000138<32>
l2305D53A:
l2305D50E:
l2305D3F4:
	word32 a0_374
	word32 s1_378
	word32 s9_380
	word32 a1_386
	word32 a2_387
	word32 s10_391
	word32 s11_392
	word32 s3_393
	word32 s4_394
	word32 s7_395
	word32 a3_375
	word32 s0_390
	word32 a5_384
	word32 ra_377 = mbedtls_debug_print_crt(ra_112, 3<32>, 0x230893F0<32>, Mem278[a5_290 + 92<i32>:word32], out s0_390, out s1_378, out a0_374, out a1_386, out a2_387, out a3_375, out a5_384, out s3_393, out s4_394, out s7_395, out s9_380, out s10_391, out s11_392)
	branch s4_394 == 0<32> l2305D4E6
l2305D416:
	word32 s0_402 = Mem278[a3_375:word32]
	word32 a5_403 = Mem278[a1_386 + 20<i32>:word32]
	branch a1_386 == 0<32> l2305D570
l2305D570:
	a3_375 = Mem278[a2_387 + 84<i32>:word32]
	branch a1_386 != 0<32> l2305D422
l2305D578:
	word32 s8_1740
	word32 s9_1741
	word32 s10_1742
	word32 s11_1743
	word32 t4_1744
	word32 a7_1735
	word32 s4_1736
	word32 s7_1739
	word32 s5_1737
	word32 s6_1738
	word32 a2_1731
	word32 a3_1732
	word32 a5_1734
	word32 a4_1733
	word32 a1_1730
	mbedtls_debug_print_msg(ra_377, s0_402, 1<32>, 0x23089404<32>, a5_403, out a1_1730, out a2_1731, out a3_1732, out a4_1733, out a5_1734, out a7_1735, out s4_1736, out s5_1737, out s6_1738, out s7_1739, out s8_1740, out s9_1741, out s10_1742, out s11_1743, out t4_1744)
l2305D420:
l2305D422:
	word32 a0_454
	word32 a5_459
	word32 a4_458
	word32 s5_471
	ra_377 = mbedtls_x509_crt_verify_with_profile(ra_377, s1_378, Mem278[a0_374 + 92<i32>:word32], a1_386, Mem278[a3_375 + 72<i32>:word32], Mem278[Mem278[a0_374 + 44<i32>:word32] + 180<i32>:int32], a0_374 + 96<i32>, Mem278[a3_375 + 52<i32>:int32], Mem278[a3_375 + 56<i32>:int32], s3_393, s7_395, s9_380, s10_391, s11_392, mstatus_111, dwLoc2C, dwLoc08, dwArg28, dwArg78, dwArg88, dwArg98, out a0_454, out a4_458, out a5_459, out s5_471)
	branch a0_454 == 0<32> l2305D45C
l2305D440:
	word32 s7_1680
	word32 s8_1681
	word32 s9_1682
	word32 s10_1683
	word32 s11_1684
	word32 s4_1678
	word32 s6_1679
	word32 a1_1675
	word32 a2_1676
	word32 a3_1677
	mbedtls_debug_print_ret(ra_377, 1<32>, 0x1000180<32>, a0_454, out a1_1675, out a2_1676, out a3_1677, out a4_458, out a5_459, out s4_1678, out s5_471, out s6_1679, out s7_1680, out s8_1681, out s9_1682, out s10_1683, out s11_1684)
l2305D45C:
	word32 s0_514 = Mem278[a5_459 + 44<i32>:word32]
	word32 s3_516 = Mem278[a5_459 + 92<i32>:int32]
	word32 a5_1674
	word32 a0_518 = mbedtls_pk_can_do(s3_516 + 188<i32>, 2<32>, a5_459, out a5_1674)
	branch a0_518 == 0<32> l2305D4A0
l2305D46E:
	word32 a5_522 = Mem278[s3_516 + 192<i32>:int32]
	word32 a5_527
	a0_518 = mbedtls_ssl_check_curve(CONVERT(Mem278[a5_522:byte], byte, word32), a5_522, out a4_458, out a5_527)
	branch a0_518 == 0<32> l2305D4A0
l2305D47E:
	word32 t4_1702
	word32 s11_1701
	word32 s6_1696
	word32 s7_1697
	word32 s8_1698
	word32 s9_1699
	word32 s10_1700
	word32 a7_1694
	word32 s4_1695
	word32 a2_1691
	word32 a3_1692
	word32 a5_1693
	word32 a1_1690
	a0_518 = mbedtls_debug_print_msg(ra_377, s0_514, 1<32>, 0x23089428<32>, a5_527, out a1_1690, out a2_1691, out a3_1692, out a4_458, out a5_1693, out a7_1694, out s4_1695, out s5_471, out s6_1696, out s7_1697, out s8_1698, out s9_1699, out s10_1700, out s11_1701, out t4_1702)
	branch a0_454 != 0<32> l2305D4A0
l2305D49A:
l2305D4A0:
	word32 a0_574
	word32 a5_579
	word32 s1_582
	word32 s3_1688
	word32 s8_1689
	word32 s4_585
	s0_390 = mbedtls_ssl_check_cert_usage(a0_518, s5_471, ~CONVERT(Mem278[a4_458 + 116<i32>:uint16], uint16, word32) & 1<32>, out s1_582, out a0_574, out a5_579, out s3_1688, out s4_585, out s8_1689)
	branch a0_574 == 0<32> l2305D4DE
l2305D4BC:
	word32 a1_1716
	word32 s6_1723
	word32 s11_1728
	word32 t4_1729
	word32 s10_1727
	word32 s8_1725
	word32 s9_1726
	word32 s7_1724
	word32 s5_1722
	word32 a2_1717
	word32 a3_1718
	word32 a4_1719
	word32 a5_1720
	word32 a7_1721
	mbedtls_debug_print_msg(ra_377, s0_390, 1<32>, 0x23089448<32>, a5_579, out a1_1716, out a2_1717, out a3_1718, out a4_1719, out a5_1720, out a7_1721, out s4_585, out s5_1722, out s6_1723, out s7_1724, out s8_1725, out s9_1726, out s10_1727, out s11_1728, out t4_1729)
	branch s1_582 != 0<32> l2305D4DE
l2305D4D8:
l2305D4DE:
	a5_384 = 1<32>
	branch s4_585 != 1<32> l2305D4E6
l2305D4E4:
l2305D4E6:
	word32 s11_1672
	word32 t4_1673
	word32 s10_1671
	word32 s9_1670
	word32 s8_1669
	word32 s4_1665
	word32 s5_1666
	word32 s6_1667
	word32 s7_1668
	word32 a5_1663
	word32 a7_1664
	word32 a2_1660
	word32 a3_1661
	word32 a4_1662
	word32 a1_1659
	mbedtls_debug_print_msg(ra_377, s0_390, 2<32>, 0x2308946C<32>, a5_384, out a1_1659, out a2_1660, out a3_1661, out a4_1662, out a5_1663, out a7_1664, out s4_1665, out s5_1666, out s6_1667, out s7_1668, out s8_1669, out s9_1670, out s10_1671, out s11_1672, out t4_1673)
l2305D3B2:
	word32 s11_1657
	word32 t4_1658
	word32 s10_1656
	word32 s9_1655
	word32 s8_1654
	word32 s4_1650
	word32 s5_1651
	word32 s6_1652
	word32 s7_1653
	word32 a5_1648
	word32 a7_1649
	word32 a2_1645
	word32 a3_1646
	word32 a4_1647
	word32 a1_1644
	mbedtls_debug_print_msg(ra_267, s0_268, 1<32>, 0x23089DD4<32>, 308<i32>, out a1_1644, out a2_1645, out a3_1646, out a4_1647, out a5_1648, out a7_1649, out s4_1650, out s5_1651, out s6_1652, out s7_1653, out s8_1654, out s9_1655, out s10_1656, out s11_1657, out t4_1658)
l2305D380:
l2305D342:
l2305D350:
	word32 s4_1613
	word32 a5_1611
	word32 a7_1612
	word32 s8_1617
	word32 s9_1618
	word32 s10_1619
	word32 s11_1620
	word32 t4_1621
	word32 a2_1608
	word32 a3_1609
	word32 a4_1610
	word32 a1_1607
	word32 s6_1615
	word32 s7_1616
	word32 s5_1614
	mbedtls_debug_print_msg(ra_112, s0_173, 1<32>, 0x2308939C<32>, a5_174, out a1_1607, out a2_1608, out a3_1609, out a4_1610, out a5_1611, out a7_1612, out s4_1613, out s5_1614, out s6_1615, out s7_1616, out s8_1617, out s9_1618, out s10_1619, out s11_1620, out t4_1621)
l2305D2E4:
	word32 a5_744
	word32 s4_752
	word32 a7_1598
	word32 s8_1602
	word32 a3_1596
	word32 a1_1594
	word32 a2_1595
	word32 a4_1597
	word32 s9_1603
	word32 t4_1606
	word32 s10_1604
	word32 s11_1605
	word32 s6_1600
	word32 s7_1601
	word32 s5_1599
	mbedtls_debug_print_msg(ra_112, s0_153, 1<32>, 0x230893B4<32>, a5_161, out a1_1594, out a2_1595, out a3_1596, out a4_1597, out a5_744, out a7_1598, out s4_752, out s5_1599, out s6_1600, out s7_1601, out s8_1602, out s9_1603, out s10_1604, out s11_1605, out t4_1606)
	Mem764[0xA0<32>:word32] = a5_744
	branch s4_752 == 1<32> l2305D1E0
l2305D30C:
l2305D2A2:
	word32 a4_1580
	word32 s9_1588
	word32 s11_1590
	word32 a5_1581
	word32 s7_1586
	word32 t4_1591
	word32 a1_1577
	word32 a2_1578
	word32 a3_1579
	word32 s8_1587
	word32 s6_1585
	word32 s4_1583
	word32 s5_1584
	word32 a7_1582
	word32 s10_1589
	mbedtls_debug_print_msg(ra_112, s0_150, 1<32>, 0x2308939C<32>, 0x16<32>, out a1_1577, out a2_1578, out a3_1579, out a4_1580, out a5_1581, out a7_1582, out s4_1583, out s5_1584, out s6_1585, out s7_1586, out s8_1587, out s9_1588, out s10_1589, out s11_1590, out t4_1591)
l2305D252:
	a5_352 = a0_133
	a3_354 = 0x10000BF<32>
l2305D262:
	word32 s7_1711
	word32 s8_1712
	word32 s11_1715
	word32 s9_1713
	word32 s10_1714
	word32 a5_1707
	word32 s4_1708
	word32 s6_1710
	word32 s5_1709
	word32 a2_1704
	word32 a4_1706
	word32 a3_1705
	word32 a1_1703
	mbedtls_debug_print_ret(ra_112, 1<32>, a3_354, a5_352, out a1_1703, out a2_1704, out a3_1705, out a4_1706, out a5_1707, out s4_1708, out s5_1709, out s6_1710, out s7_1711, out s8_1712, out s9_1713, out s10_1714, out s11_1715)
l2305D230:
	s0_34 = Mem21[(a5_67 & 1<32>) + 44<i32>:word32]
	Mem836[0xE0<32>:word32] = a5_67 & 1<32>
l2305D208:
l2305D216:
l2305D1C0:
l2305D1D0:
	word32 a5_864
	word32 s9_1565
	word32 a3_1557
	word32 a2_1556
	word32 a1_1555
	word32 s7_1563
	word32 s6_1562
	word32 s5_1561
	word32 a4_1558
	word32 a7_1559
	word32 s4_1560
	word32 s11_1567
	word32 s8_1564
	word32 s10_1566
	word32 t4_1568
	mbedtls_debug_print_msg(ra, s0_34, 2<32>, 0x23089368<32>, a5_59, out a1_1555, out a2_1556, out a3_1557, out a4_1558, out a5_864, out a7_1559, out s4_1560, out s5_1561, out s6_1562, out s7_1563, out s8_1564, out s9_1565, out s10_1566, out s11_1567, out t4_1568)
	Mem887[a5_864 + 5<32>:word32] = Mem882[a5_864 + 4<i32>:word32]
l2305D1E0:
	0<32> = dwArg0128
	return
mbedtls_ssl_parse_certificate_exit:


void mbedtls_ssl_parse_change_cipher_spec(word32 ra, word32 s1, word32 a0, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg58, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_parse_change_cipher_spec_entry:
l2305D598:
	word32 a5_27
	word32 s11_414
	word32 t4_415
	word32 s7_410
	word32 s10_413
	word32 s8_411
	word32 s9_412
	word32 a7_406
	word32 s6_409
	word32 s4_407
	word32 s5_408
	word32 a1_402
	word32 a4_405
	word32 a2_403
	word32 a3_404
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x23089484<32>, a5, out a1_402, out a2_403, out a3_404, out a4_405, out a5_27, out a7_406, out s4_407, out s5_408, out s6_409, out s7_410, out s8_411, out s9_412, out s10_413, out s11_414, out t4_415)
	word32 a4_50
	word32 s3_61
	word32 a0_76
	word32 a5_418
	word32 s4_420
	word32 s5_421
	word32 s2_419
	word32 s6_422
	word32 s9_424
	word32 s10_425
	word32 s7_423
	word32 mstatus_427
	word32 s11_426
	word32 a3_417
	word32 a1_416
	word32 ra_126 = mbedtls_ssl_read_record(ra, s1, a0, a5_27, mstatus, dwLoc10, dwLoc0C, dwLoc08, dwArg18, dwArg20, dwArg24, dwArg58, s1, dwArg74, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArg0108, dwArg0148, out a0_76, out a1_416, out a3_417, out a4_50, out a5_418, out s2_419, out s3_61, out s4_420, out s5_421, out s6_422, out s7_423, out s9_424, out s10_425, out s11_426, out mstatus_427)
	branch a0_76 == 0<32> l2305D5FA
l2305D5FA:
	word32 s0_78 = Mem24[a4_50 + 108<i32>:word32]
	branch a4_50 == 0x14<32> l2305D622
l2305D622:
	word32 s0_215 = Mem24[0x84<32>:word32]
	branch true l2305D636
l2305D62C:
	s0_215 = Mem24[0x65<32>:word32]
	branch CONVERT(Mem24[1<32>:byte], byte, word32) == 0x14<32> l2305D658
l2305D658:
	word32 a5_125
	word32 a5_92
	word32 a1_471
	word32 a2_472
	word32 a4_473
	word32 a7_474
	word32 s4_475
	word32 s5_476
	word32 s6_477
	word32 s7_478
	word32 s8_479
	word32 s9_480
	word32 s10_481
	word32 s11_482
	word32 t4_483
	word32 a3_123
	word32 a0_91 = mbedtls_debug_print_msg(ra_126, s0_215, 3<32>, 0x230894C0<32>, 0x14<32>, out a1_471, out a2_472, out a3_123, out a4_473, out a5_92, out a7_474, out s4_475, out s5_476, out s6_477, out s7_478, out s8_479, out s9_480, out s10_481, out s11_482, out t4_483)
	Mem111[a5_92 + 52<i32>:word32] = Mem24[a5_92 + 64<i32>:word32]
	Mem113[a5_92 + 32<i32>:word32] = Mem111[a5_92 + 44<i32>:word32]
	word32 s0_114 = Mem113[a5_92:word32]
	branch (CONVERT(Mem113[a5_92 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305D6B2
l2305D6B2:
	word32 t1_484
	word32 a0_485
	word32 a1_486
	word32 a2_487
	word32 a4_488
	ra_126 = memset(ra_126, a0_91, 0<32>, 8<32>, out t1_484, out a0_485, out a1_486, out a2_487, out a3_123, out a4_488, out a5_125)
l2305D682:
	word32 a5_131 = CONVERT(Mem113[s0_114 + 120<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem133[s0_114 + 120<i32>:word16] = SLICE(a5_131 >>u 16<i32>, word16, 0)
	a5_125 = a5_131 >>u 16<i32>
	branch a5_131 >>u 16<i32> != 0<32> l2305D6BC
l2305D6BC:
	word32 s0_139 = Mem135[a5_125 + 96<i32>:word32]
	branch a3_123 <= 1<32> l2305D6D0
l2305D6C6:
	s0_139 = Mem135[a3_123 + 64<i32>:word32]
	a5_125 = a5_125 + (1<32> - Mem135[Mem135[0xD<32>:word32] + 16<i32>:word32])
l2305D6D0:
	Mem147[a5_125 + 100<i32>:word32] = s0_139
	word32 s0_148 = Mem147[a5_125 + 4<i32>:word32]
	word32 a5_151 = a5_125 + 1<32>
	Mem152[a5_151 + 4<i32>:word32] = s0_148
	word32 a1_504
	word32 a2_505
	word32 a3_506
	word32 a4_507
	word32 a5_508
	word32 a7_509
	word32 s4_510
	word32 s5_511
	word32 s6_512
	word32 s7_513
	word32 s8_514
	word32 s9_515
	word32 s10_516
	word32 s11_517
	word32 t4_518
	mbedtls_debug_print_msg(ra_126, s0_148, 2<32>, 0x230894F4<32>, a5_151, out a1_504, out a2_505, out a3_506, out a4_507, out a5_508, out a7_509, out s4_510, out s5_511, out s6_512, out s7_513, out s8_514, out s9_515, out s10_516, out s11_517, out t4_518)
l2305D692:
	word32 a1_489
	word32 a2_490
	word32 a3_491
	word32 a4_492
	word32 a5_493
	word32 a7_494
	word32 s4_495
	word32 s5_496
	word32 s6_497
	word32 s7_498
	word32 s8_499
	word32 s9_500
	word32 s10_501
	word32 s11_502
	word32 t4_503
	mbedtls_debug_print_msg(ra_126, s0_114, 1<32>, 0x23089FB8<32>, a5_131 >>u 16<i32>, out a1_489, out a2_490, out a3_491, out a4_492, out a5_493, out a7_494, out s4_495, out s5_496, out s6_497, out s7_498, out s8_499, out s9_500, out s10_501, out s11_502, out t4_503)
l2305D636:
	word32 a1_456
	word32 a2_457
	word32 a3_458
	word32 a4_459
	word32 a5_460
	word32 a7_461
	word32 s4_462
	word32 s5_463
	word32 s6_464
	word32 s7_465
	word32 s8_466
	word32 s9_467
	word32 s10_468
	word32 s11_469
	word32 t4_470
	mbedtls_debug_print_msg(ra_126, s0_215, 1<32>, 0x230894A0<32>, 0x14<32>, out a1_456, out a2_457, out a3_458, out a4_459, out a5_460, out a7_461, out s4_462, out s5_463, out s6_464, out s7_465, out s8_466, out s9_467, out s10_468, out s11_469, out t4_470)
l2305D602:
	word32 a1_441
	word32 a2_442
	word32 a3_443
	word32 a4_444
	word32 a5_445
	word32 a7_446
	word32 s4_447
	word32 s5_448
	word32 s6_449
	word32 s7_450
	word32 s8_451
	word32 s9_452
	word32 s10_453
	word32 s11_454
	word32 t4_455
	mbedtls_debug_print_msg(ra_126, s0_78, 1<32>, 0x230894A0<32>, 0x14<32>, out a1_441, out a2_442, out a3_443, out a4_444, out a5_445, out a7_446, out s4_447, out s5_448, out s6_449, out s7_450, out s8_451, out s9_452, out s10_453, out s11_454, out t4_455)
l2305D5CE:
	word32 a1_428
	word32 a2_429
	word32 a3_430
	word32 a4_431
	word32 a5_432
	word32 s4_433
	word32 s5_434
	word32 s6_435
	word32 s7_436
	word32 s8_437
	word32 s9_438
	word32 s10_439
	word32 s11_440
	mbedtls_debug_print_ret(ra_126, 1<32>, s3_61 + 463<i32>, a0_76, out a1_428, out a2_429, out a3_430, out a4_431, out a5_432, out s4_433, out s5_434, out s6_435, out s7_436, out s8_437, out s9_438, out s10_439, out s11_440)
l2305D5E8:
	return
mbedtls_ssl_parse_change_cipher_spec_exit:


void mbedtls_ssl_parse_finished(word32 ra, word32 s0, word32 s1, word32 a0, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_parse_finished_entry:
l2305D6F4:
	word32 a5_27
	word32 a2_29
	word32 s4_35
	word32 s10_548
	word32 s11_549
	word32 t4_550
	word32 a1_539
	word32 s6_544
	word32 s8_546
	word32 s9_547
	word32 s7_545
	word32 a3_540
	word32 a4_541
	word32 a7_542
	word32 s5_543
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x23089510<32>, a5, out a1_539, out a2_29, out a3_540, out a4_541, out a5_27, out a7_542, out s4_35, out s5_543, out s6_544, out s7_545, out s8_546, out s9_547, out s10_548, out s11_549, out t4_550)
	word32 a5_48 = Mem24[a2_29 + 116<i32>:word32]
	word32 a5_51 = Mem24[a5_48 + 204<i32>:int32]
	word32 ra_60
	word32 s0_61
	word32 s1_62
	word32 a5_65
	call a5_51 (retsize: 0;)
		uses: a0:Mem24[a5_27:word32],a1:fp + -44<i32>,a2:a2_29 & 1<32> ^ 1<i32>,a5:a5_51,mstatus:mstatus_89,ra:ra,s0:Mem24[a5_48 + 48<i32>:word32],s1:s1,s2:0x2308A000<32>,s3:s3,s4:s4_35
		defs: a5:a5_65,ra:ra_60,s0:s0_61,s1:s1_62
	word32 a3_84
	word32 a4_85
	word32 mstatus_89
	word32 s4_97
	word32 a0_111
	word32 s7_557
	word32 s9_558
	word32 s10_559
	word32 s11_560
	word32 s2_553
	word32 s5_555
	word32 s6_556
	word32 s3_554
	word32 a1_551
	word32 a5_552
	word32 ra_197 = mbedtls_ssl_read_record(ra_60, s1_62, s0_61, a5_65, mstatus, s2, s0, dwLoc18, dwArg08, dwArg10, dwArg14, dwArg48, dwArg58, ra, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgF8, dwArg0138, out a0_111, out a1_551, out a3_84, out a4_85, out a5_552, out s2_553, out s3_554, out s4_97, out s5_555, out s6_556, out s7_557, out s9_558, out s10_559, out s11_560, out mstatus_89)
	branch a0_111 == 0<32> l2305D76C
l2305D76C:
	word32 s0_113 = Mem24[a4_85 + 108<i32>:word32]
	branch a4_85 == 0x16<32> l2305D794
l2305D794:
	word32 a6_115 = Mem24[s0_113 + 100<i32>:int32]
	word32 a5_116 = 0x14<32>
	branch CONVERT(Mem24[a6_115:byte], byte, word32) != 0x14<32> l2305D7C6
l2305D7A4:
	s0_113 = Mem24[a3_84:word32]
	word32 t1_120 = Mem24[s0_113 + 128<i32>:int32]
	word32 a0_121 = 4<32>
	word32 a4_122 = CONVERT(Mem24[a3_84 + 116<i32>:uint16], uint16, word32)
	branch (a4_122 & 2<i32>) == 0<32> l2305D7B8
l2305D7B6:
	a0_121 = 0xC<32>
l2305D7B8:
	word32 a2_127 = 0<32>
	a5_116 = 0<32>
	branch t1_120 == a0_121 + 12<i32> l2305D7E8
l2305D7E8:
	a5_116 = a5_116 + 1<32>
	a2_127 = a2_127 | CONVERT(Mem24[(a0_121 + a5_116) + a6_115:byte], byte, word32) ^ CONVERT(Mem24[(fp - 44<i32>) + a5_116:byte], byte, word32)
	branch a5_116 != 0xC<32> l2305D7E8
l2305D808:
	branch a2_127 == 0<32> l2305D81A
l2305D81A:
	word32 a5_150
	word32 s0_147 = Mem24[a5_116 + 48<i32>:word32]
	word32 a5_148 = Mem24[a5_116 + 328<i32>:int32]
	branch a5_148 == 0<32> l2305D862
l2305D862:
	s0_147 = Mem24[a5_148 + 4<i32>:word32]
	a5_150 = a5_148 + 1<32>
l2305D822:
	branch (a4_122 & 1<32>) == 0<32> l2305D82C
l2305D82C:
	Mem155[0xE<32>:word32] = s0_147
	branch (CONVERT(Mem155[a3_84 + 116<i32>:uint16], uint16, word32) & 1<32>) != 0<32> l2305D826
l2305D826:
	a5_150 = 0xF<32>
l2305D828:
	Mem164[a5_150 + 4<i32>:word32] = s0_147
l2305D838:
	word32 a5_169 = CONVERT(Mem168[a3_84 + 116<i32>:uint16], uint16, word32)
	word32 a5_170 = a5_169 & 2<32>
	branch (a5_169 & 2<32>) == 0<32> l2305D846
l2305D840:
	word32 s10_619
	ra_197 = mbedtls_ssl_recv_flight_completed(ra_197, a2_127, a5_169 & 2<32>, mstatus_89, dwLoc30, dwLoc2C, dwArg0108, dwArg0148, out a5_170, out s10_619)
l2305D846:
	word32 s5_611
	word32 a4_607
	word32 a3_606
	word32 a2_605
	word32 a1_604
	word32 s4_610
	word32 a7_609
	word32 s6_612
	word32 a5_608
	word32 s7_613
	word32 s8_614
	word32 s9_615
	word32 s10_616
	word32 s11_617
	word32 t4_618
	mbedtls_debug_print_msg(ra_197, s0_147, 2<32>, 0x2308953C<32>, a5_170, out a1_604, out a2_605, out a3_606, out a4_607, out a5_608, out a7_609, out s4_610, out s5_611, out s6_612, out s7_613, out s8_614, out s9_615, out s10_616, out s11_617, out t4_618)
l2305D80A:
l2305D7C6:
l2305D7D4:
	word32 s10_601
	word32 t4_603
	word32 s7_598
	word32 s9_600
	word32 a5_593
	word32 s6_597
	word32 s8_599
	word32 a7_594
	word32 s11_602
	word32 s5_596
	word32 s4_595
	word32 a4_592
	word32 a1_589
	word32 a3_591
	word32 a2_590
	mbedtls_debug_print_msg(ra_197, s0_113, 1<32>, 0x23089524<32>, a5_116, out a1_589, out a2_590, out a3_591, out a4_592, out a5_593, out a7_594, out s4_595, out s5_596, out s6_597, out s7_598, out s8_599, out s9_600, out s10_601, out s11_602, out t4_603)
l2305D774:
	word32 s8_584
	word32 s9_585
	word32 s10_586
	word32 s11_587
	word32 t4_588
	word32 a2_575
	word32 s4_580
	word32 s6_582
	word32 s7_583
	word32 s5_581
	word32 a3_576
	word32 a4_577
	word32 a5_578
	word32 a7_579
	word32 a1_574
	mbedtls_debug_print_msg(ra_197, s0_113, 1<32>, 0x23089524<32>, 0x16<32>, out a1_574, out a2_575, out a3_576, out a4_577, out a5_578, out a7_579, out s4_580, out s5_581, out s6_582, out s7_583, out s8_584, out s9_585, out s10_586, out s11_587, out t4_588)
l2305D740:
	word32 s4_566
	word32 s9_571
	word32 s11_573
	word32 s10_572
	word32 s5_567
	word32 s6_568
	word32 s7_569
	word32 s8_570
	word32 a2_562
	word32 a4_564
	word32 a5_565
	word32 a3_563
	word32 a1_561
	mbedtls_debug_print_ret(ra_197, 1<32>, s4_97 + 1164<i32>, a0_111, out a1_561, out a2_562, out a3_563, out a4_564, out a5_565, out s4_566, out s5_567, out s6_568, out s7_569, out s8_570, out s9_571, out s10_572, out s11_573)
l2305D75A:
	0<32> = dwArg0128
	return
mbedtls_ssl_parse_finished_exit:


word32 mbedtls_ssl_read(word32 ra, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg38, word32 dwArg84, word32 dwArg0108, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_read
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0084:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s10 s11 s2 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_read_entry:
l2305D868:
	word32 s0_117
	word32 sp_194 = fp + 0xFFFFFFE0<32>
	branch a0 == 0<32> l2305DA3E
l2305D87A:
	word32 a0_18 = Mem15[a5:word32]
	branch a5 == 0<32> l2305DA3E
l2305DA3E:
	s0_117 = 0xF8FFFF00<32>
l2305D882:
	word32 a5_34
	word32 a3_836
	word32 s9_842
	word32 s11_844
	word32 t4_845
	word32 s10_843
	word32 s8_841
	word32 a7_837
	word32 s5_838
	word32 s6_839
	word32 s7_840
	word32 a2_127
	word32 a1_134
	word32 s4_102
	word32 a0_116 = mbedtls_debug_print_msg(ra, a0_18, 2<32>, 0x23089880<32>, a5, out a1_134, out a2_127, out a3_836, out a4, out a5_34, out a7_837, out s4_102, out s5_838, out s6_839, out s7_840, out s8_841, out s9_842, out s10_843, out s11_844, out t4_845)
	s2 = 0x2308A000<32>
	word32 s3_101 = a2
	word32 s1_52 = Mem15[a5_34:word32]
	word32 a5_53 = CONVERT(Mem15[a5_34 + 116<i32>:uint16], uint16, word32)
	branch (a5_53 & 2<32>) != 0<32> l2305D8E6
l2305D8E6:
	word32 a5_61
	word32 s1_846
	mbedtls_ssl_flush_output(ra, s1_52, a5_53 & 2<32>, dwArg0108, out s1_846, out a0_116, out a1_134, out a2_127, out a3, out a4, out a5_61, out s2, out s3_101, out s4_102, out s5, out s6, out s7, out s9, out s10, out s11)
	s0_117 = a0_116
	branch a0_116 != 0<32> l2305D908
l2305D8F0:
	word32 s1_82 = Mem15[a5_61 + 48<i32>:word32]
	branch a5_61 == 0<32> l2305D8AC
l2305D8F4:
	a4 = CONVERT(Mem15[a5_61 + 52<i32>:byte], byte, word32)
	branch a4 != 1<32> l2305D8AC
l2305D8FE:
	word32 a5_855
	word32 s1_854
	word32 s0_853
	ra = mbedtls_ssl_resend(ra, a0_116, s1_82, 1<32>, s2, mstatus, dwArg0108, out s0_853, out s1_854, out a0_116, out a1_134, out a2_127, out a3, out a4, out a5_855, out s2, out s3_101, out s4_102, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
	s0_117 = a0_116
	branch a0_116 == 0<32> l2305D8AC
l2305D8AC:
	word32 a5_514
	word32 a3_516
	word32 s1_120 = Mem15[a4 + 4<i32>:word32]
	word32 a5_121 = 0x10<32>
	branch a4 == 0x10<32> l2305D91A
l2305D8B4:
	word32 a3_849
	word32 a5_850
	word32 s5_851
	word32 s6_852
	word32 s1_848
	word32 s0_847
	ra = mbedtls_ssl_handshake(ra, s1_120, 0x10<32>, mstatus, dwArg38, dwArg84, out s0_847, out s1_848, out a0_116, out a1_134, out a2_127, out a3_849, out a4, out a5_850, out s2, out s3_101, out s4_102, out s5_851, out s6_852, out mstatus)
	a5_121 = 0xF9000500<32>
	s0_117 = a0_116
	branch a0_116 == 0xF9000500<32> l2305D952
l2305D952:
	s0_117 = 1<32>
l2305D8C6:
	branch a0_116 == 0<32> l2305D91A
l2305D91A:
	s0_117 = 0<32>
l2305D91C:
	branch a5_121 != 0<32> l2305DA00
l2305D920:
	word32 s1_167 = Mem15[a5_121 + 76<i32>:word32]
	branch a5_121 == 0<32> l2305D938
l2305D924:
	word32 a0_201
	word32 a3_204
	word32 a7_210
	word32 s10_211
	word32 s11_212
	word32 s5_213
	word32 s6_214
	word32 s7_215
	word32 s9_216
	word32 t0_217
	word32 t1_218
	word32 t4_219
	word32 tp_220
	word32 t2_222
	word32 t5_223
	word32 t6_224
	word32 gp_225
	call a5_121 (retsize: 0;)
		uses: a0:a0_168,a1:a1_187,a2:a2_184,a3:a3_204,a4:a4_203,a5:a5_162,a7:a7_210,gp:gp_225,mstatus:mstatus_190,ra:ra_172,s0:s0_174,s1:Mem15[a0_168 + 68<i32>:word32],s10:s10_211,s11:s11_212,s2:s2_175,s3:s3_178,s4:s4_181,s5:s5_213,s6:s6_214,s7:s7_215,s9:s9_216,Stack +0058:dwArg38,Stack +00A4:dwArg84,Stack +0128:dwArg0108,t0:t0_217,t1:t1_218,t2:t2_222,t4:t4_219,t5:t5_223,t6:t6_224,tp:tp_220
		defs: a0:a0_201,a1:a1_206,a3:a3_204,a4:a4_203,a7:a7_210,gp:gp_225,mstatus:mstatus_221,ra:ra_195,s0:s0_196,s1:s1_197,s10:s10_211,s11:s11_212,s2:s2_198,s3:s3_199,s4:s4_200,s5:s5_213,s6:s6_214,s7:s7_215,s9:s9_216,sp:sp_194,t0:t0_217,t1:t1_218,t2:t2_222,t4:t4_219,t5:t5_223,t6:t6_224,tp:tp_220
	a5_121 = 0xFFFFFFFF<32>
	branch a0_201 != 0xFFFFFFFF<32> l2305D938
l2305D92E:
	word32 s11_862
	word32 s10_861
	word32 s5_857
	word32 s6_858
	word32 s9_860
	word32 s7_859
	word32 a3_856
	ra = ssl_set_timer(ra, s0_117, a1_134, Mem15[a1_134 + 100<i32>:word32], Mem15[sp_194 + 16<i32>:word32], Mem15[sp_194 + 20<i32>:word32], out s0_117, out s1_167, out a1_134, out a3_856, out a4, out a5_121, out s4_102, out s5_857, out s6_858, out s7_859, out s9_860, out s10_861, out s11_862)
l2305D938:
	branch s0_117 != 0<32> l2305D968
l2305D93A:
	word32 a0_290
	ra = mbedtls_ssl_read_record(ra, s1_167, s1_167, a5_121, mstatus, Mem15[sp_194 + 16<i32>:word32], Mem15[sp_194 + 20<i32>:word32], Mem15[sp_194 + 24<i32>:word32], Mem15[sp_194 + 56<i32>:word32], Mem15[sp_194 + 64<i32>:word32], Mem15[sp_194 + 68<i32>:word32], Mem15[sp_194 + 120<i32>:word32], Mem15[sp_194 + 136<i32>:word32], Mem15[sp_194 + 148<i32>:word32], Mem15[sp_194 + 168<i32>:word32], Mem15[sp_194 + 184<i32>:word32], Mem15[sp_194 + 200<i32>:word32], Mem15[sp_194 + 232<i32>:word32], Mem15[sp_194 + 296<i32>:word32], Mem15[sp_194 + 360<i32>:word32], out a0_290, out a1_134, out a3, out a4, out a5_121, out s2, out s3_101, out s4_102, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
	s0_117 = a0_290
	branch a0_290 == 0<32> l2305D968
l2305D968:
	branch a5_121 != 0<32> l2305D99A
l2305D96C:
	word32 s1_299 = Mem15[a4 + 108<i32>:word32]
	a5_121 = 0x17<32>
	branch a4 != 0x17<32> l2305D99A
l2305D974:
	word32 a0_334
	ra = mbedtls_ssl_read_record(ra, s1_299, s1_299, 0x17<32>, mstatus, Mem15[sp_194 + 16<i32>:word32], Mem15[sp_194 + 20<i32>:word32], Mem15[sp_194 + 24<i32>:word32], Mem15[sp_194 + 56<i32>:word32], Mem15[sp_194 + 64<i32>:word32], Mem15[sp_194 + 68<i32>:word32], Mem15[sp_194 + 120<i32>:word32], Mem15[sp_194 + 136<i32>:word32], Mem15[sp_194 + 148<i32>:word32], Mem15[sp_194 + 168<i32>:word32], Mem15[sp_194 + 184<i32>:word32], Mem15[sp_194 + 200<i32>:word32], Mem15[sp_194 + 232<i32>:word32], Mem15[sp_194 + 296<i32>:word32], Mem15[sp_194 + 360<i32>:word32], out a0_334, out a1_134, out a3, out a4, out a5_121, out s2, out s3_101, out s4_102, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
	s0_117 = a0_334
	branch a0_334 == 0<32> l2305D99A
l2305D99A:
	word32 s1_338 = Mem15[a5_121 + 108<i32>:word32]
	branch a5_121 != 0x15<32> l2305D9C4
l2305D9C4:
	branch a5_121 == 0x17<32> l2305D9EC
l2305D9EC:
	Mem343[a5_121 + 104<i32>:word32] = Mem15[0x1B<32>:word32]
	branch true l2305DA00
l2305D9F8:
	word32 s1_895
	word32 a5_898
	word32 s5_899
	word32 a4_897
	word32 a3_896
	word32 s6_900
	word32 s7_901
	word32 s9_902
	word32 s10_903
	word32 s11_904
	ra = ssl_set_timer(ra, s0_117, 0<32>, 0x10<32>, Mem343[sp_194 + 16<i32>:word32], Mem343[sp_194 + 20<i32>:word32], out s0_117, out s1_895, out a1_134, out a3_896, out a4_897, out a5_898, out s4_102, out s5_899, out s6_900, out s7_901, out s9_902, out s10_903, out s11_904)
l2305DA00:
	branch s3_101 >=u s0_117 l2305DA08
l2305DA06:
	s0_117 = s3_101
l2305DA08:
	word32 a2_864
	word32 a4_397
	word32 a1_863
	word32 a6_867
	word32 a7_868
	word32 a3_865
	word32 a5_866
	memcpy(s4_102, a1_134, s0_117, out a1_863, out a2_864, out a3_865, out a4_397, out a5_866, out a6_867, out a7_868)
	word32 s1_410 = Mem375[a4_397 + 112<i32>:word32]
	word32 a4_412 = a4_397 - s0_117
	Mem413[a4_412 + 112<i32>:word32] = s1_410
	word32 a5_411 = 0<32>
	branch a4_412 == 0<32> l2305DA20
l2305DA1C:
	s1_410 = Mem413[0x68<32>:word32]
	a5_411 = s0_117
l2305DA20:
	Mem420[a5_411 + 104<i32>:word32] = s1_410
	word32 a1_874
	word32 s8_879
	word32 a7_877
	word32 s4_878
	word32 a5_876
	word32 t4_880
	word32 a2_875
	mbedtls_debug_print_msg(ra, s1_410, 2<32>, 0x230898D0<32>, a5_411, out a1_874, out a2_875, out a3, out a4, out a5_876, out a7_877, out s4_878, out s5, out s6, out s7, out s8_879, out s9, out s10, out s11, out t4_880)
l2305D9CA:
	word32 s4_892
	word32 a7_891
	word32 a5_890
	word32 a2_889
	word32 s8_893
	word32 t4_894
	word32 a1_888
	mbedtls_debug_print_msg(ra, s1_338, 1<32>, 0x230898B0<32>, a5_121, out a1_888, out a2_889, out a3, out a4, out a5_890, out a7_891, out s4_892, out s5, out s6, out s7, out s8_893, out s9, out s10, out s11, out t4_894)
	s0_117 = 0xF8FFF900<32>
l2305D9A2:
	word32 a2_882
	word32 s4_885
	word32 s8_886
	word32 a5_883
	word32 a7_884
	word32 a1_881
	word32 t4_887
	mbedtls_debug_print_msg(ra, s1_338, 2<32>, 0x23089888<32>, a5_121, out a1_881, out a2_882, out a3, out a4, out a5_883, out a7_884, out s4_885, out s5, out s6, out s7, out s8_886, out s9, out s10, out s11, out t4_887)
	s0_117 = 0xF9000700<32>
l2305D97E:
	branch a0_334 == 0xF8FFFD80<32> l2305D94E
l2305D988:
	a5_514 = a0_334
	a3_516 = 0x1FFFA27<32>
l2305D944:
	branch a0_290 != 0xF8FFFD80<32> l2305D956
l2305D956:
	a5_514 = a0_290
	a3_516 = 0x1FFFA17<32>
l2305D94E:
	s0_117 = 0<32>
l2305D8C8:
	a5_514 = a0_116
	a3_516 = 0x1FFFA02<32>
l2305D8D8:
	word32 s4_872
	word32 a1_869
	word32 s8_873
	word32 a5_871
	word32 a2_870
	mbedtls_debug_print_ret(ra, 1<32>, a3_516, a5_514, out a1_869, out a2_870, out a3, out a4, out a5_871, out s4_872, out s5, out s6, out s7, out s8_873, out s9, out s10, out s11)
l2305D908:
	a0Out = s0_117
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s4
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mbedtls_ssl_read_exit:


void mbedtls_ssl_set_calc_verify_md(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_set_calc_verify_md_entry:
l2305DA46:
	branch a4 != 3<32> l2305DA66
l2305DA4E:
	branch a1 != 4<32> l2305DA66
l2305DA66:
	return
l2305DA54:
	Mem14[a4 + 200<i32>:word32] = 0x2305989C<32>
	return
mbedtls_ssl_set_calc_verify_md_exit:


word32 mbedtls_zeroize(word32 a0, word32 a1, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_free
//      mbedtls_x509_crt_parse_file
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1
// Preserved: sp
mbedtls_zeroize_entry:
l2305DA6E:
	word32 a1_5 = a1 + a0
l2305DA70:
	branch a0 != a1_5 l2305DA76
l2305DA76:
	Mem8[a0:byte] = 0<8>
	a0 = a0 + 1<32>
l2305DA74:
	a1Out = a1_5
	return a0
mbedtls_zeroize_exit:


word32 x509_memcasecmp(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_name_cmp
//      x509_check_wildcard
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5 a7
// Trashed: a0 a3 a4 a5 a6 a7 t1
// Preserved: sp
x509_memcasecmp_entry:
l2305DA7E:
	word32 a4_23 = 0<32>
l2305DA86:
	branch a4_23 != a2 l2305DA8E
l2305DA8E:
	a5 = CONVERT(Mem0[a0 + a4_23:byte], byte, word32)
	a3 = CONVERT(Mem0[a1 + a4_23:byte], byte, word32)
	word32 t1_15 = a5 ^ a3
	branch a5 == a3 l2305DABA
l2305DAA6:
	branch t1_15 != 32<i32> l2305DABE
l2305DAAA:
	word32 a5_18 = (a5 & -33<i32>) + -65<i32>
	a5 = a5_18 & 255<i32>
	branch (a5_18 & 255<i32>) >u 0x19<32> l2305DABE
l2305DABE:
	a3Out = a3
	a4Out = <invalid>
	a5Out = a5
	a7Out = <invalid>
	return 0xFFFFFFFF<32>
l2305DABA:
	a4_23 = a4_23 + 1<32>
l2305DA8A:
	a3Out = a3
	a4Out = <invalid>
	a5Out = a5
	a7Out = <invalid>
	return 0<32>
x509_memcasecmp_exit:


word32 x509_name_cmp(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_check_parent
//      x509_crt_verify_child
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
x509_name_cmp_entry:
l2305DAC2:
	word32 s1_15 = a0
	word32 s0_17 = a1
l2305DAD6:
	word32 a0_166
	branch s1_15 != 0<32> l2305DAE2
l2305DAE2:
	branch s0_17 != 0<32> l2305DAF4
l2305DAF4:
	s1_15 = Mem13[a4:word32]
	branch a4 != a5 l2305DAE4
l2305DAFC:
	s1_15 = Mem13[a2 + 4<i32>:word32]
	branch a2 != a5 l2305DAE4
l2305DB04:
	s1_15 = Mem13[a0 + 8<i32>:word32]
	a0 = memcmp(a0, a1, a2, out a1, out a2, out a3, out a4, out a5)
	branch a0 != 0<32> l2305DAE4
l2305DB0E:
	word32 s0_44
	branch a4 == a5 l2305DB3A
l2305DB3A:
	branch a2 != a5 l2305DB16
l2305DB42:
	s0_44 = Mem13[a1 + 20<i32>:word32]
	s1_15 = Mem13[a0 + 20<i32>:word32]
	a0 = memcmp(a0, a1, a2, out a1, out a2, out a3, out a4, out a5)
	branch a0 != 0<32> l2305DB16
l2305DB16:
	s1_15 = Mem13[a5 + 12<i32>:word32]
	branch a5 != 0xC<32> l2305DB5E
l2305DB5E:
	branch a5 == 0x13<32> l2305DB1C
l2305DB62:
l2305DB1C:
	branch a5 == 0xC<32> l2305DB26
l2305DB22:
	branch a5 != 0x13<32> l2305DAE4
l2305DB26:
	s1_15 = Mem13[a2 + 16<i32>:word32]
	branch a2 != a5 l2305DAE4
l2305DB2E:
	s0_44 = Mem13[a1 + 20<i32>:word32]
	s1_15 = Mem13[a0 + 20<i32>:word32]
	a0 = x509_memcasecmp(a0, a1, a2, out a3, out a4, out a5, out a7)
	branch a0 == 0<32> l2305DB4C
l2305DB4C:
	a4 = CONVERT(Mem13[s1_15 + 28<i32>:byte], byte, word32)
	a5 = CONVERT(Mem13[s0_44 + 28<i32>:byte], byte, word32)
	branch a4 != a5 l2305DAE4
l2305DB58:
	s1_15 = Mem13[s1_15 + 24<i32>:word32]
	s0_17 = Mem13[s0_44 + 24<i32>:word32]
l2305DB38:
l2305DAE4:
	a0_166 = 0xFFFFFFFF<32>
l2305DAD8:
	a0_166 = 0<32> - CONVERT(s0_17 != 0<32>, bool, word32)
l2305DAE6:
	a0Out = a0_166
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a6Out = dwArg28
	a7Out = a7
	s2Out = 0xC<32>
	s3Out = 0x13<32>
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s1_15
x509_name_cmp_exit:


word32 x509_check_wildcard(word32 a0, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31]
// LiveOut: a0 a5 s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t1 t3
// Preserved: sp
x509_check_wildcard_entry:
l2305DB64:
	word32 a5_21
	word32 a3_13
	word32 a4_14
	word32 a1_90
	word32 a2_91
	word32 a5_92
	word32 a0_12 = strlen(a0, out a1_90, out a2_91, out a3_13, out a4_14, out a5_92)
	branch a4_14 <=u 2<32> l2305DBDE
l2305DBDE:
	a5_21 = 0<32>
l2305DB7C:
	a5_21 = 0<32>
	branch CONVERT(Mem9[a3_13:byte], byte, word32) != 42<i32> l2305DBA4
l2305DB8C:
	branch CONVERT(Mem9[a3_13 + 1<i32>:byte], byte, word32) != 46<i32> l2305DBA4
l2305DB98:
	word32 a2_28 = 0<32>
l2305DB9E:
	branch a2_28 != a0_12 l2305DBAE
l2305DBAE:
	word32 a1_33 = a0 + a2_28
	branch CONVERT(Mem9[a1_33:byte], byte, word32) == 46<i32> l2305DBBE
l2305DBBE:
	a5_21 = 0xFFFFFFFF<32>
	branch a2_28 == 0<32> l2305DBA4
l2305DBC2:
	word32 a2_40 = a0_12 - a2_28
	branch a2_40 != a4_14 + 0xFFFFFFFF<32> l2305DBA4
l2305DBCC:
	word32 a3_93
	word32 a4_94
	word32 a5_95
	word32 a7_96
	a5_21 = 0<32> - CONVERT(x509_memcasecmp(a3_13 + 1<i32>, a1_33, a2_40, out a3_93, out a4_94, out a5_95, out a7_96) != 0<32>, bool, word32)
l2305DBBA:
	a2_28 = a2_28 + 1<32>
l2305DBA2:
	a5_21 = 0xFFFFFFFF<32>
l2305DBA4:
	a0Out = a5_21
	a5Out = a5_21
	s8Out = dwLoc1C
	return a0
x509_check_wildcard_exit:


word32 x509_profile_check_key(word32 a1, word32 a2, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_top.isra.7
//      x509_crt_verify_child
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a1 a2 a4 a5 t1
// Preserved: s0 sp
x509_profile_check_key_entry:
l2305DBE2:
	word32 a4_16
	word32 a5_23 = 1<32>
	branch a1 == 1<32> l2305DBF6
l2305DBF0:
	branch a1 != 6<32> l2305DC10
l2305DC10:
	a4_16 = 0xFFFFFFFF<32>
	branch (a1 + 0xFFFFFFFE<32> & 255<i32>) >u 2<32> l2305DC06
l2305DC1E:
	word32 a0_18 = CONVERT(Mem7[0xFFFFFFFF<32>:byte], byte, word32)
	a5_23 = CONVERT((1<32> << a0_18 + 0xFFFFFFFF<32> & a0_18 + 0xFFFFFFFF<32>) <u 1<i32>, bool, word32)
l2305DBF6:
	word32 a5_29
	a5_23 = CONVERT(mbedtls_pk_get_bitlen(a2, 1<32>, out a5_29) <u a5_29, bool, word32)
l2305DC02:
	a4_16 = 0<32> - a5_23
l2305DC06:
	a2Out = dwArg10
	a4Out = a4_16
	a5Out = a5_23
	return a4_16
x509_profile_check_key_exit:


word32 mbedtls_x509_crt_info(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg5C, word32 dwArg6C, word32 dwArgC8, word32 dwArg0174, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
//      _iot_tls_verify_cert
//      mbedtls_debug_print_crt
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +005C:[0..31] Stack +006C:[0..31] Stack +00C8:[0..31] Stack +0174:[0..31]
// LiveOut: a3 ra s0 s1 s10 s2 s3 s4 s5 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mbedtls_x509_crt_info_entry:
l2305DC34:
	word32 s0_100
	word32 s10_1002
	word32 s4_1006
	word32 s3_1005
	word32 s2_1004
	word32 s7_1009
	branch a3 != 0<32> l2305DC7A
l2305DC7A:
	word32 a0_33
	word32 s1_42
	word32 a5_2136
	word32 a7_2137
	word32 s6_2139
	word32 a1_2132
	word32 s5_2138
	word32 a4_2135
	word32 a3_2134
	word32 s9_2141
	word32 s8_2140
	word32 a2_2133
	word32 s11_2142
	word32 ra_40 = snprintf(ra, a0, a1, 0x2308A3D4<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_100, out s1_42, out a0_33, out a1_2132, out a2_2133, out a3_2134, out a4_2135, out a5_2136, out a7_2137, out s2_1004, out s3_1005, out s4_1006, out s5_2138, out s6_2139, out s7_1009, out s8_2140, out s9_2141, out s10_1002, out s11_2142)
	branch a0_33 < 0<32> l2305DC5A
l2305DC94:
	branch a0_33 >=u s4_1006 l2305DC5A
l2305DC98:
	word32 a0_63
	word32 s1_72
	word32 s9_82
	word32 a5_2159
	word32 a4_2158
	word32 a2_2156
	word32 a3_2157
	word32 a1_2155
	word32 a7_2160
	word32 s5_2161
	word32 s11_2164
	word32 s6_2162
	word32 s8_2163
	word32 ra_70 = snprintf(ra_40, s1_42 + a0_33, s4_1006 - a0_33, 0x2308A3F0<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_100, out s1_72, out a0_63, out a1_2155, out a2_2156, out a3_2157, out a4_2158, out a5_2159, out a7_2160, out s2_1004, out s3_1005, out s4_1006, out s5_2161, out s6_2162, out s7_1009, out s8_2163, out s9_82, out s10_1002, out s11_2164)
	branch a0_63 < 0<32> l2305DC5A
l2305DCB4:
	branch a0_63 >=u s0_100 l2305DC5A
l2305DCB8:
	word32 a0_91
	word32 s1_101
	word32 ra_99 = mbedtls_x509_serial_gets(ra_70, s1_72 + a0_63, s0_100 - a0_63, s2_1004 + 28<i32>, s7_1009, s9_82, dwLoc58, dwLoc44, dwLoc2C, dwArg18, dwArg3C, dwArgC8, out s0_100, out s1_101, out a0_91, out s2_1004, out s3_1005, out s4_1006, out s7_1009, out s10_1002)
	branch a0_91 < 0<32> l2305DC5A
l2305DCCC:
	branch a0_91 >=u s0_100 l2305DC5A
l2305DCD0:
	word32 a0_123
	word32 s1_132
	word32 a2_2166
	word32 a3_2167
	word32 a4_2168
	word32 a1_2165
	word32 s5_2171
	word32 s6_2172
	word32 s8_2173
	word32 a7_2170
	word32 a5_2169
	word32 s9_2174
	word32 s11_2175
	word32 ra_130 = snprintf(ra_99, s1_101 + a0_91, s0_100 - a0_91, 0x2308A408<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_100, out s1_132, out a0_123, out a1_2165, out a2_2166, out a3_2167, out a4_2168, out a5_2169, out a7_2170, out s2_1004, out s3_1005, out s4_1006, out s5_2171, out s6_2172, out s7_1009, out s8_2173, out s9_2174, out s10_1002, out s11_2175)
	branch a0_123 < 0<32> l2305DC5A
l2305DCEA:
	branch a0_123 >=u s0_100 l2305DC5A
l2305DCEE:
	s0_100 = s0_100 - a0_123
	word32 s1_147 = s1_132 + a0_123
	word32 a0_151 = mbedtls_x509_dn_gets(ra_130, s1_147, s0_100, s2_1004 + 76<i32>, out s10_1002)
	branch a0_151 < 0<32> l2305DC5A
l2305DD02:
	branch a0_151 >=u s0_100 l2305DC5A
l2305DD06:
	word32 a0_173
	word32 s1_182
	word32 s8_2184
	word32 a4_2179
	word32 a1_2176
	word32 a2_2177
	word32 a3_2178
	word32 a7_2181
	word32 a5_2180
	word32 s11_2186
	word32 s5_2182
	word32 s6_2183
	word32 s9_2185
	word32 ra_180 = snprintf(ra_130, s1_147 + a0_151, s0_100 - a0_151, 0x2308A424<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_100, out s1_182, out a0_173, out a1_2176, out a2_2177, out a3_2178, out a4_2179, out a5_2180, out a7_2181, out s2_1004, out s3_1005, out s4_1006, out s5_2182, out s6_2183, out s7_1009, out s8_2184, out s9_2185, out s10_1002, out s11_2186)
	branch a0_173 < 0<32> l2305DC5A
l2305DD20:
	branch a0_173 >=u s0_100 l2305DC5A
l2305DD24:
	s0_100 = s0_100 - a0_173
	word32 s1_197 = s1_182 + a0_173
	word32 a0_201 = mbedtls_x509_dn_gets(ra_180, s1_197, s0_100, s2_1004 + 108<i32>, out s10_1002)
	branch a0_201 < 0<32> l2305DC5A
l2305DD38:
	branch a0_201 >=u s0_100 l2305DC5A
l2305DD3C:
	word32 a0_231
	word32 s1_240
	word32 a4_2190
	word32 a1_2187
	word32 a5_2191
	word32 a7_2192
	word32 s5_2193
	word32 a2_2188
	word32 a3_2189
	word32 s9_2196
	word32 s6_2194
	word32 s8_2195
	word32 s11_2197
	word32 ra_238 = snprintf(ra_180, s1_197 + a0_201, s0_100 - a0_201, 0x2308A440<32>, dwLoc48, dwLoc28, dwArg04, Mem19[s2_1004 + 160<i32>:int32], dwArg24, s1, dwArg6C, out s0_100, out s1_240, out a0_231, out a1_2187, out a2_2188, out a3_2189, out a4_2190, out a5_2191, out a7_2192, out s2_1004, out s3_1005, out s4_1006, out s5_2193, out s6_2194, out s7_1009, out s8_2195, out s9_2196, out s10_1002, out s11_2197)
	branch a0_231 < 0<32> l2305DC5A
l2305DD72:
	branch a0_231 >=u s0_100 l2305DC5A
l2305DD76:
	word32 a5_254 = Mem223[s2_1004 + 184<i32>:int32]
	word32 a0_269
	word32 s1_278
	word32 a2_2199
	word32 a3_2200
	word32 a4_2201
	word32 s6_2205
	word32 s5_2204
	word32 a7_2203
	word32 a5_2202
	word32 a1_2198
	word32 s8_2206
	word32 s9_2207
	word32 s11_2208
	word32 ra_276 = snprintf(ra_238, s1_240 + a0_231, s0_100 - a0_231, 0x2308A478<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_278, out a0_269, out a1_2198, out a2_2199, out a3_2200, out a4_2201, out a5_2202, out a7_2203, out s2_1004, out s3_1005, out s4_1006, out s5_2204, out s6_2205, out s7_1009, out s8_2206, out s9_2207, out s10_1002, out s11_2208)
	branch a0_269 < 0<32> l2305DC5A
l2305DDAC:
	branch a0_269 >=u s0_100 l2305DC5A
l2305DDB0:
	word32 a0_299
	word32 s5_2216
	word32 a7_2215
	word32 s6_2217
	word32 s8_2218
	word32 s9_2219
	word32 s11_2220
	word32 a5_2214
	word32 a2_2211
	word32 a3_2212
	word32 a4_2213
	word32 s1_2209
	word32 a1_2210
	word32 ra_306 = snprintf(ra_276, s1_278 + a0_269, s0_100 - a0_269, 0x2308A4B0<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_2209, out a0_299, out a1_2210, out a2_2211, out a3_2212, out a4_2213, out a5_2214, out a7_2215, out s2_1004, out s3_1005, out s4_1006, out s5_2216, out s6_2217, out s7_1009, out s8_2218, out s9_2219, out s10_1002, out s11_2220)
	branch a0_299 < 0<32> l2305DC5A
l2305DDCA:
	branch a0_299 >=u s0_100 l2305DC5A
l2305DDCE:
	word32 a0_330
	word32 a5_335
	word32 ra_337 = mbedtls_x509_sig_alg_gets(ra_306, s0_100 - a0_299, s2_1004 + 40<i32>, Mem261[s2_1004 + 300<i32>:int32], dwLoc48, dwLoc1C, dwArg00, dwArg28, ra, out s0_100, out a0_330, out a5_335, out s2_1004, out s3_1005, out s4_1006, out s7_1009, out s10_1002)
	branch a0_330 < 0<32> l2305DC5A
l2305DDF0:
	branch a0_330 >=u s0_100 l2305DC5A
l2305DDF4:
	mbedtls_pk_get_name(s2_1004 + 188<i32>, a5_335)
	word32 a0_362
	word32 a5_367
	word32 s1_370
	word32 s5_376
	word32 s6_377
	word32 ra_369 = mbedtls_x509_key_size_helper(ra_337, fp + -52<i32>, 0x12<32>, dwLoc58, s2, dwLoc0C, dwArg10, dwArg38, dwArg5C, out s1_370, out a0_362, out a5_367, out s2_1004, out s3_1005, out s4_1006, out s5_376, out s6_377, out s7_1009, out s10_1002)
	branch a0_362 != 0<32> l2305DC66
l2305DE0C:
	word32 a5_2221
	mbedtls_pk_get_bitlen(s6_377, a5_367, out a5_2221)
	word32 a0_397
	word32 s1_406
	word32 s8_2230
	word32 s9_2231
	word32 s11_2232
	word32 s6_2229
	word32 s5_2228
	word32 a4_2225
	word32 a5_2226
	word32 a7_2227
	word32 a3_2224
	word32 a2_2223
	word32 a1_2222
	word32 ra_1027 = snprintf(ra_369, s1_370 + s5_376, s0_100 - s5_376, 0x2308A4CC<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_406, out a0_397, out a1_2222, out a2_2223, out a3_2224, out a4_2225, out a5_2226, out a7_2227, out s2_1004, out s3_1005, out s4_1006, out s5_2228, out s6_2229, out s7_1009, out s8_2230, out s9_2231, out s10_1002, out s11_2232)
	branch a0_397 < 0<32> l2305DC5A
l2305DE32:
	branch a0_397 >=u s0_100 l2305DC5A
l2305DE36:
	s0_100 = s0_100 - a0_397
	word32 s1_1017 = s1_406 + a0_397
	branch (Mem261[s2_1004 + 248<i32>:int32] & 256<i32>) == 0<32> l2305DE96
l2305DE44:
	branch Mem261[s2_1004 + 252<i32>:int32] != 0<32> l2305DEE2
l2305DEE2:
l2305DE4A:
l2305DE52:
	word32 a0_440
	word32 s1_449
	word32 s9_2253
	word32 s11_2254
	word32 s8_2252
	word32 s6_2251
	word32 a1_2244
	word32 a2_2245
	word32 a3_2246
	word32 a4_2247
	word32 a5_2248
	word32 a7_2249
	word32 s5_2250
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A4E0<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_449, out a0_440, out a1_2244, out a2_2245, out a3_2246, out a4_2247, out a5_2248, out a7_2249, out s2_1004, out s3_1005, out s4_1006, out s5_2250, out s6_2251, out s7_1009, out s8_2252, out s9_2253, out s10_1002, out s11_2254)
	branch a0_440 < 0<32> l2305DC5A
l2305DE68:
	branch a0_440 >=u s0_100 l2305DC5A
l2305DE6C:
	s0_100 = s0_100 - a0_440
	s1_1017 = s1_449 + a0_440
	branch Mem261[s2_1004 + 256<i32>:int32] <= 0<32> l2305DE96
l2305DE78:
	word32 a0_471
	word32 s1_480
	word32 s11_2243
	word32 s9_2242
	word32 s8_2241
	word32 s6_2240
	word32 a3_2235
	word32 a4_2236
	word32 a5_2237
	word32 a7_2238
	word32 s5_2239
	word32 a1_2233
	word32 a2_2234
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A500<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_480, out a0_471, out a1_2233, out a2_2234, out a3_2235, out a4_2236, out a5_2237, out a7_2238, out s2_1004, out s3_1005, out s4_1006, out s5_2239, out s6_2240, out s7_1009, out s8_2241, out s9_2242, out s10_1002, out s11_2243)
	branch a0_471 < 0<32> l2305DC5A
l2305DE8E:
	branch a0_471 >=u s0_100 l2305DC5A
l2305DE92:
	s0_100 = s0_100 - a0_471
	s1_1017 = s1_480 + a0_471
l2305DE96:
	branch (Mem261[s2_1004 + 248<i32>:int32] & 32<i32>) == 0<32> l2305DF10
l2305DEA0:
	word32 a0_510
	word32 s1_519
	word32 a5_2258
	word32 a7_2259
	word32 s9_2263
	word32 s11_2264
	word32 s6_2261
	word32 s8_2262
	word32 s5_2260
	word32 a3_2257
	word32 a2_2256
	word32 a1_2255
	word32 a4_514
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A514<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_519, out a0_510, out a1_2255, out a2_2256, out a3_2257, out a4_514, out a5_2258, out a7_2259, out s2_1004, out s3_1005, out s4_1006, out s5_2260, out s6_2261, out s7_1009, out s8_2262, out s9_2263, out s10_1002, out s11_2264)
	branch a0_510 < 0<32> l2305DC5A
l2305DEB6:
	branch a0_510 >=u s0_100 l2305DC5A
l2305DEBA:
	s0_100 = s0_100 - a0_510
	s1_1017 = s1_519 + a0_510
	word32 a3_1518 = 0x23088E60<32>
	word32 a1_539 = 0<32>
l2305DED4:
	word32 a4_545 = a4_514 + a1_539
	branch a4_545 <u s0_100 l2305DEEC
l2305DEEC:
	s0_100 = s0_100 - a4_545
	word32 a4_548 = 0<32>
l2305DEF0:
	word32 a0_551 = s1_1017 + a4_548
	branch a4_548 != a1_539 l2305E2D8
l2305E2D8:
	Mem558[a0_551:byte] = SLICE(CONVERT(Mem555[a3_1518 + a4_548:byte], byte, word32), byte, 0)
	a4_548 = a4_548 + 1<32>
l2305DEF8:
	a4_514 = 0<32>
l2305DEFA:
	word32 a5_562 = Mem561[a3_1518 + 4<i32>:word32]
	s1_1017 = a0_551 + a4_514
	branch a4_514 <u a3_1518 l2305E2E8
l2305E2E8:
	a3_1518 = CONVERT(Mem561[a3_1518 + a4_514:byte], byte, word32)
	Mem570[s1_1017:byte] = SLICE(a3_1518, byte, 0)
	a4_514 = a4_514 + 1<32>
l2305DF04:
	a1_539 = 2<32>
	a3_1518 = 0x23080648<32>
	branch Mem561[a5_562 + 12<i32>:word32] != 0<32> l2305DED4
l2305DF0C:
	Mem577[s1_1017:byte] = 0<8>
l2305DF10:
	branch Mem582[s2_1004 + 248<i32>:int32] << 0xF<u32> >= 0<32> l2305E094
l2305DF1C:
	word32 a0_606
	word32 s1_615
	word32 s6_2272
	word32 s8_2273
	word32 s9_2274
	word32 s11_2275
	word32 s5_2271
	word32 a7_2270
	word32 a5_2269
	word32 a4_2268
	word32 a1_2265
	word32 a2_2266
	word32 a3_2267
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A530<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_615, out a0_606, out a1_2265, out a2_2266, out a3_2267, out a4_2268, out a5_2269, out a7_2270, out s2_1004, out s3_1005, out s4_1006, out s5_2271, out s6_2272, out s7_1009, out s8_2273, out s9_2274, out s10_1002, out s11_2275)
	branch a0_606 < 0<32> l2305DC5A
l2305DF32:
	branch a0_606 >=u s0_100 l2305DC5A
l2305DF36:
	word32 s5_629 = CONVERT(Mem582[s2_1004 + 280<i32>:byte], byte, word32)
	s0_100 = s0_100 - a0_606
	s1_1017 = s1_615 + a0_606
	branch CONVERT(SLICE(s5_629, byte, 0), byte, int32) >= 0<32> l2305DF74
l2305DF50:
	word32 a0_640
	word32 s1_649
	word32 s11_2285
	word32 s9_2284
	word32 a7_2281
	word32 s6_2282
	word32 s8_2283
	word32 a5_2280
	word32 a4_2279
	word32 a1_2276
	word32 a2_2277
	word32 a3_2278
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A54C<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_649, out a0_640, out a1_2276, out a2_2277, out a3_2278, out a4_2279, out a5_2280, out a7_2281, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2282, out s7_1009, out s8_2283, out s9_2284, out s10_1002, out s11_2285)
	branch a0_640 < 0<32> l2305DC5A
l2305DF64:
	branch a0_640 >=u s0_100 l2305DC5A
l2305DF68:
	s0_100 = s0_100 - a0_640
	s1_1017 = s1_649 + a0_640
l2305DF74:
	branch (s5_629 & 64<i32>) == 0<32> l2305DF9E
l2305DF7A:
	word32 a0_678
	word32 s1_687
	word32 a1_2286
	word32 a2_2287
	word32 a7_2291
	word32 s6_2292
	word32 s8_2293
	word32 s9_2294
	word32 s11_2295
	word32 a4_2289
	word32 a5_2290
	word32 a3_2288
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A55C<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_687, out a0_678, out a1_2286, out a2_2287, out a3_2288, out a4_2289, out a5_2290, out a7_2291, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2292, out s7_1009, out s8_2293, out s9_2294, out s10_1002, out s11_2295)
	branch a0_678 < 0<32> l2305DC5A
l2305DF8E:
	branch a0_678 >=u s0_100 l2305DC5A
l2305DF92:
	s0_100 = s0_100 - a0_678
	s1_1017 = s1_687 + a0_678
l2305DF9E:
	branch (s5_629 & 32<i32>) == 0<32> l2305DFC8
l2305DFA4:
	word32 a0_716
	word32 s1_725
	word32 s11_2326
	word32 s9_2325
	word32 s8_2324
	word32 a3_2319
	word32 a4_2320
	word32 a5_2321
	word32 a7_2322
	word32 s6_2323
	word32 a1_2317
	word32 a2_2318
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A56C<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_725, out a0_716, out a1_2317, out a2_2318, out a3_2319, out a4_2320, out a5_2321, out a7_2322, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2323, out s7_1009, out s8_2324, out s9_2325, out s10_1002, out s11_2326)
	branch a0_716 < 0<32> l2305DC5A
l2305DFB8:
	branch a0_716 >=u s0_100 l2305DC5A
l2305DFBC:
	s0_100 = s0_100 - a0_716
	s1_1017 = s1_725 + a0_716
l2305DFC8:
	branch (s5_629 & 16<i32>) == 0<32> l2305DFF2
l2305DFCE:
	word32 a0_754
	word32 s1_763
	word32 s11_2346
	word32 s9_2345
	word32 s8_2344
	word32 s6_2343
	word32 a7_2342
	word32 a5_2341
	word32 a4_2340
	word32 a1_2337
	word32 a2_2338
	word32 a3_2339
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A574<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_763, out a0_754, out a1_2337, out a2_2338, out a3_2339, out a4_2340, out a5_2341, out a7_2342, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2343, out s7_1009, out s8_2344, out s9_2345, out s10_1002, out s11_2346)
	branch a0_754 < 0<32> l2305DC5A
l2305DFE2:
	branch a0_754 >=u s0_100 l2305DC5A
l2305DFE6:
	s0_100 = s0_100 - a0_754
	s1_1017 = s1_763 + a0_754
l2305DFF2:
	branch (s5_629 & 8<i32>) == 0<32> l2305E01C
l2305DFF8:
	word32 a0_792
	word32 s1_801
	word32 s11_2366
	word32 s9_2365
	word32 s8_2364
	word32 s6_2363
	word32 a7_2362
	word32 a5_2361
	word32 a4_2360
	word32 a3_2359
	word32 a2_2358
	word32 a1_2357
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A588<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_801, out a0_792, out a1_2357, out a2_2358, out a3_2359, out a4_2360, out a5_2361, out a7_2362, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2363, out s7_1009, out s8_2364, out s9_2365, out s10_1002, out s11_2366)
	branch a0_792 < 0<32> l2305DC5A
l2305E00C:
	branch a0_792 >=u s0_100 l2305DC5A
l2305E010:
	s0_100 = s0_100 - a0_792
	s1_1017 = s1_801 + a0_792
l2305E01C:
	branch (s5_629 & 4<i32>) == 0<32> l2305E046
l2305E022:
	word32 a0_830
	word32 s1_839
	word32 s11_2386
	word32 s9_2385
	word32 s8_2384
	word32 s6_2383
	word32 a7_2382
	word32 a5_2381
	word32 a4_2380
	word32 a3_2379
	word32 a2_2378
	word32 a1_2377
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A594<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_839, out a0_830, out a1_2377, out a2_2378, out a3_2379, out a4_2380, out a5_2381, out a7_2382, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2383, out s7_1009, out s8_2384, out s9_2385, out s10_1002, out s11_2386)
	branch a0_830 < 0<32> l2305DC5A
l2305E036:
	branch a0_830 >=u s0_100 l2305DC5A
l2305E03A:
	s0_100 = s0_100 - a0_830
	s1_1017 = s1_839 + a0_830
l2305E046:
	branch (s5_629 & 2<i32>) == 0<32> l2305E070
l2305E04C:
	word32 a0_868
	word32 s1_877
	word32 s11_2406
	word32 s9_2405
	word32 s8_2404
	word32 s6_2403
	word32 a7_2402
	word32 a5_2401
	word32 a4_2400
	word32 a3_2399
	word32 a2_2398
	word32 a1_2397
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A5A0<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_877, out a0_868, out a1_2397, out a2_2398, out a3_2399, out a4_2400, out a5_2401, out a7_2402, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2403, out s7_1009, out s8_2404, out s9_2405, out s10_1002, out s11_2406)
	branch a0_868 < 0<32> l2305DC5A
l2305E060:
	branch a0_868 >=u s0_100 l2305DC5A
l2305E064:
	s0_100 = s0_100 - a0_868
	s1_1017 = s1_877 + a0_868
l2305E070:
	branch (s5_629 & 1<i32>) == 0<32> l2305E094
l2305E078:
	word32 a0_906
	word32 s1_915
	word32 s11_2467
	word32 s9_2466
	word32 s8_2465
	word32 s6_2464
	word32 s5_2463
	word32 a7_2462
	word32 a5_2461
	word32 a4_2460
	word32 a3_2459
	word32 a2_2458
	word32 a1_2457
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A5AC<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_915, out a0_906, out a1_2457, out a2_2458, out a3_2459, out a4_2460, out a5_2461, out a7_2462, out s2_1004, out s3_1005, out s4_1006, out s5_2463, out s6_2464, out s7_1009, out s8_2465, out s9_2466, out s10_1002, out s11_2467)
	branch a0_906 < 0<32> l2305DC5A
l2305E08C:
	branch a0_906 >=u s0_100 l2305DC5A
l2305E090:
	s0_100 = s0_100 - a0_906
	s1_1017 = s1_915 + a0_906
l2305E094:
	branch (Mem582[s2_1004 + 248<i32>:int32] & 4<32>) == 0<32> l2305E23C
l2305E09E:
	word32 a0_959
	word32 s1_968
	word32 a5_2300
	word32 a7_2301
	word32 s5_2302
	word32 s6_2303
	word32 s8_2304
	word32 s9_2305
	word32 s11_2306
	word32 a4_2299
	word32 a3_2298
	word32 a2_2297
	word32 a1_2296
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A5C0<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_968, out a0_959, out a1_2296, out a2_2297, out a3_2298, out a4_2299, out a5_2300, out a7_2301, out s2_1004, out s3_1005, out s4_1006, out s5_2302, out s6_2303, out s7_1009, out s8_2304, out s9_2305, out s10_1002, out s11_2306)
	branch a0_959 < 0<32> l2305DC5A
l2305E0B4:
	branch a0_959 >=u s0_100 l2305DC5A
l2305E0B8:
	word32 s5_1007 = Mem582[s2_1004 + 260<i32>:int32]
	s0_100 = s0_100 - a0_959
	s1_1017 = s1_968 + a0_959
	branch (s5_1007 & 128<i32>) == 0<32> l2305E0F2
l2305E0CE:
	word32 a0_992
	word32 s1_1001
	word32 s8_2314
	word32 s9_2315
	word32 s11_2316
	word32 s6_2313
	word32 a7_2312
	word32 a3_2309
	word32 a4_2310
	word32 a5_2311
	word32 a2_2308
	word32 a1_2307
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A5DC<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1001, out a0_992, out a1_2307, out a2_2308, out a3_2309, out a4_2310, out a5_2311, out a7_2312, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2313, out s7_1009, out s8_2314, out s9_2315, out s10_1002, out s11_2316)
	branch a0_992 < 0<32> l2305DC5A
l2305E0E2:
	branch a0_992 >=u s0_100 l2305DC5A
l2305E0E6:
	s0_100 = s0_100 - a0_992
	s1_1017 = s1_1001 + a0_992
l2305E0F2:
	branch (s5_1007 & 64<i32>) == 0<32> l2305E11C
l2305E0F8:
	word32 a0_1030
	word32 s1_1039
	word32 s11_2336
	word32 s9_2335
	word32 a2_2328
	word32 a3_2329
	word32 a4_2330
	word32 a5_2331
	word32 a7_2332
	word32 s6_2333
	word32 s8_2334
	word32 a1_2327
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A5F0<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1039, out a0_1030, out a1_2327, out a2_2328, out a3_2329, out a4_2330, out a5_2331, out a7_2332, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2333, out s7_1009, out s8_2334, out s9_2335, out s10_1002, out s11_2336)
	branch a0_1030 < 0<32> l2305DC5A
l2305E10C:
	branch a0_1030 >=u s0_100 l2305DC5A
l2305E110:
	s0_100 = s0_100 - a0_1030
	s1_1017 = s1_1039 + a0_1030
l2305E11C:
	branch (s5_1007 & 32<i32>) == 0<32> l2305E146
l2305E122:
	word32 a0_1068
	word32 s1_1077
	word32 s11_2356
	word32 s9_2355
	word32 s8_2354
	word32 s6_2353
	word32 a7_2352
	word32 a5_2351
	word32 a4_2350
	word32 a3_2349
	word32 a2_2348
	word32 a1_2347
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A604<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1077, out a0_1068, out a1_2347, out a2_2348, out a3_2349, out a4_2350, out a5_2351, out a7_2352, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2353, out s7_1009, out s8_2354, out s9_2355, out s10_1002, out s11_2356)
	branch a0_1068 < 0<32> l2305DC5A
l2305E136:
	branch a0_1068 >=u s0_100 l2305DC5A
l2305E13A:
	s0_100 = s0_100 - a0_1068
	s1_1017 = s1_1077 + a0_1068
l2305E146:
	branch (s5_1007 & 16<i32>) == 0<32> l2305E170
l2305E14C:
	word32 a0_1106
	word32 s1_1115
	word32 s11_2376
	word32 s9_2375
	word32 s8_2374
	word32 s6_2373
	word32 a7_2372
	word32 a5_2371
	word32 a4_2370
	word32 a3_2369
	word32 a2_2368
	word32 a1_2367
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A618<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1115, out a0_1106, out a1_2367, out a2_2368, out a3_2369, out a4_2370, out a5_2371, out a7_2372, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2373, out s7_1009, out s8_2374, out s9_2375, out s10_1002, out s11_2376)
	branch a0_1106 < 0<32> l2305DC5A
l2305E160:
	branch a0_1106 >=u s0_100 l2305DC5A
l2305E164:
	s0_100 = s0_100 - a0_1106
	s1_1017 = s1_1115 + a0_1106
l2305E170:
	branch (s5_1007 & 8<i32>) == 0<32> l2305E19A
l2305E176:
	word32 a0_1144
	word32 s1_1153
	word32 s11_2396
	word32 s9_2395
	word32 s8_2394
	word32 s6_2393
	word32 a7_2392
	word32 a5_2391
	word32 a4_2390
	word32 a3_2389
	word32 a2_2388
	word32 a1_2387
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A62C<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1153, out a0_1144, out a1_2387, out a2_2388, out a3_2389, out a4_2390, out a5_2391, out a7_2392, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2393, out s7_1009, out s8_2394, out s9_2395, out s10_1002, out s11_2396)
	branch a0_1144 < 0<32> l2305DC5A
l2305E18A:
	branch a0_1144 >=u s0_100 l2305DC5A
l2305E18E:
	s0_100 = s0_100 - a0_1144
	s1_1017 = s1_1153 + a0_1144
l2305E19A:
	branch (s5_1007 & 4<i32>) == 0<32> l2305E1C4
l2305E1A0:
	word32 a0_1182
	word32 s1_1191
	word32 s11_2446
	word32 s9_2445
	word32 s8_2444
	word32 s6_2443
	word32 a7_2442
	word32 a5_2441
	word32 a4_2440
	word32 a3_2439
	word32 a2_2438
	word32 a1_2437
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A63C<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1191, out a0_1182, out a1_2437, out a2_2438, out a3_2439, out a4_2440, out a5_2441, out a7_2442, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2443, out s7_1009, out s8_2444, out s9_2445, out s10_1002, out s11_2446)
	branch a0_1182 < 0<32> l2305DC5A
l2305E1B4:
	branch a0_1182 >=u s0_100 l2305DC5A
l2305E1B8:
	s0_100 = s0_100 - a0_1182
	s1_1017 = s1_1191 + a0_1182
l2305E1C4:
	branch (s5_1007 & 2<i32>) == 0<32> l2305E1EE
l2305E1CA:
	word32 a0_1220
	word32 s1_1229
	word32 s11_2456
	word32 s9_2455
	word32 s8_2454
	word32 s6_2453
	word32 a7_2452
	word32 a5_2451
	word32 a4_2450
	word32 a3_2449
	word32 a2_2448
	word32 a1_2447
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A64C<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1229, out a0_1220, out a1_2447, out a2_2448, out a3_2449, out a4_2450, out a5_2451, out a7_2452, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2453, out s7_1009, out s8_2454, out s9_2455, out s10_1002, out s11_2456)
	branch a0_1220 < 0<32> l2305DC5A
l2305E1DE:
	branch a0_1220 >=u s0_100 l2305DC5A
l2305E1E2:
	s0_100 = s0_100 - a0_1220
	s1_1017 = s1_1229 + a0_1220
l2305E1EE:
	branch (s5_1007 & 1<i32>) == 0<32> l2305E218
l2305E1F4:
	word32 a5_2472
	word32 a3_2470
	word32 a2_2469
	word32 s8_2475
	word32 s9_2476
	word32 s6_2474
	word32 a7_2473
	word32 s11_2477
	word32 a0_1258
	word32 s1_1267
	word32 a4_2471
	word32 a1_2468
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A658<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1267, out a0_1258, out a1_2468, out a2_2469, out a3_2470, out a4_2471, out a5_2472, out a7_2473, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2474, out s7_1009, out s8_2475, out s9_2476, out s10_1002, out s11_2477)
	branch a0_1258 < 0<32> l2305DC5A
l2305E208:
	branch a0_1258 >=u s0_100 l2305DC5A
l2305E20C:
	s0_100 = s0_100 - a0_1258
	s1_1017 = s1_1267 + a0_1258
l2305E218:
	branch s5_1007 << 0x10<u32> >= 0<32> l2305E23C
l2305E220:
	word32 a2_2479
	word32 a1_2478
	word32 a3_2480
	word32 s5_2484
	word32 a7_2483
	word32 s9_2487
	word32 a5_2482
	word32 a4_2481
	word32 s8_2486
	word32 s11_2488
	word32 s6_2485
	word32 a0_1296
	word32 s1_1305
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A668<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1305, out a0_1296, out a1_2478, out a2_2479, out a3_2480, out a4_2481, out a5_2482, out a7_2483, out s2_1004, out s3_1005, out s4_1006, out s5_2484, out s6_2485, out s7_1009, out s8_2486, out s9_2487, out s10_1002, out s11_2488)
	branch a0_1296 < 0<32> l2305DC5A
l2305E234:
	branch a0_1296 >=u s0_100 l2305DC5A
l2305E238:
	s0_100 = s0_100 - a0_1296
	s1_1017 = s1_1305 + a0_1296
l2305E23C:
	branch Mem582[s2_1004 + 248<i32>:int32] << 0x14<u32> >= 0<32> l2305E2BA
l2305E248:
	word32 a0_1351
	word32 s11_2428
	word32 s9_2427
	word32 s8_2426
	word32 s6_2425
	word32 s5_2424
	word32 a7_2423
	word32 a4_2422
	word32 a3_2421
	word32 a1_2420
	word32 s1_2419
	word32 a5_1356
	word32 a2_1353
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x2308A678<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_2419, out a0_1351, out a1_2420, out a2_1353, out a3_2421, out a4_2422, out a5_1356, out a7_2423, out s2_1004, out s3_1005, out s4_1006, out s5_2424, out s6_2425, out s7_1009, out s8_2426, out s9_2427, out s10_1002, out s11_2428)
	branch a0_1351 < 0<32> l2305DC5A
l2305E25E:
	branch a0_1351 >=u s0_100 l2305DC5A
l2305E262:
	word32 s2_1379 = s2_1004 + 264<i32>
	word32 s6_1382 = 0x23081000<32>
l2305E286:
	word32 a0_1392
	word32 s1_1398 = mbedtls_oid_get_extended_key_usage(s2_1379, fp + -56<i32>, a2_1353, a5_1356, dwLoc28, out a0_1392)
	branch a0_1392 == 0<32> l2305E296
l2305E294:
l2305E296:
	word32 a0_1415
	word32 s1_1424
	word32 s11_2436
	word32 s9_2435
	word32 s8_2434
	word32 s5_2433
	word32 a7_2432
	word32 a4_2431
	word32 a3_2430
	word32 a1_2429
	ra_1027 = snprintf(ra_1027, s1_1398, dwArg0174, s6_1382 + 680<i32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1424, out a0_1415, out a1_2429, out a2_1353, out a3_2430, out a4_2431, out a5_1356, out a7_2432, out s2_1004, out s3_1005, out s4_1006, out s5_2433, out s6_1382, out s7_1009, out s8_2434, out s9_2435, out s10_1002, out s11_2436)
	branch a0_1415 < 0<32> l2305DC5A
l2305E2A8:
	branch a0_1415 >=u s0_100 l2305DC5A
l2305E2AC:
	s2_1379 = Mem1405[s2_1004 + 12<i32>:int32]
	s0_100 = s0_100 - a0_1415
	s1_1017 = s1_1424 + a0_1415
	branch s2_1379 != 0<32> l2305E286
l2305E2BA:
	word32 a0_1451
	word32 s11_2418
	word32 s9_2417
	word32 s8_2416
	word32 s6_2415
	word32 s5_2414
	word32 a7_2413
	word32 a5_2412
	word32 a4_2411
	word32 a3_2410
	word32 a2_2409
	word32 a1_2408
	word32 s1_2407
	snprintf(ra_1027, s1_1017, s0_100, 0x230727FC<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_2407, out a0_1451, out a1_2408, out a2_2409, out a3_2410, out a4_2411, out a5_2412, out a7_2413, out s2_1004, out s3_1005, out s4_1006, out s5_2414, out s6_2415, out s7_1009, out s8_2416, out s9_2417, out s10_1002, out s11_2418)
	branch a0_1451 < 0<32> l2305DC5A
l2305E2CE:
	branch a0_1451 >=u s0_100 l2305DC5A
l2305E2D2:
l2305DEDC:
	Mem1477[s1_1017:byte] = 0<8>
l2305DC4A:
	word32 a0_1480
	word32 a1_2144
	word32 s1_2143
	word32 a7_2149
	word32 a3_2146
	word32 a2_2145
	word32 a5_2148
	word32 a4_2147
	word32 s6_2151
	word32 s8_2152
	word32 s5_2150
	word32 s11_2154
	word32 s9_2153
	snprintf(ra, a0, a1, 0x2308A3B4<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_100, out s1_2143, out a0_1480, out a1_2144, out a2_2145, out a3_2146, out a4_2147, out a5_2148, out a7_2149, out s2_1004, out s3_1005, out s4_1006, out s5_2150, out s6_2151, out s7_1009, out s8_2152, out s9_2153, out s10_1002, out s11_2154)
	branch a0_1480 >= 0<32> l2305DC62
l2305DC62:
	branch a0_1480 >=u s4_1006 l2305DC5A
l2305DC5A:
l2305DC66:
	s0Out = s0_100
	s1Out = dwArg28
	a3Out = dwArg08
	s2Out = s2_1004
	s3Out = s3_1005
	s4Out = s4_1006
	s5Out = s4
	s7Out = s7_1009
	s10Out = s10_1002
	return dwArg68
mbedtls_x509_crt_info_exit:


word32 mbedtls_x509_crt_verify_info(word32 ra, word32 a0, word32 a1, word32 a3, word32 s3, word32 s5, word32 dwArg18, word32 dwArg44, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s3:[0..31] s5:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
mbedtls_x509_crt_verify_info_entry:
l2305E2F8:
	word32 s3_132 = a0
	word32 s4_128 = a3
	word32 s0_131 = a1
	word32 s2_30 = 0x2308AB30<32>
	word32 s6_130 = 0x2308A000<32>
l2305E320:
	branch Mem20[s2_30 + 4<i32>:int32] != 0<32> l2305E34C
l2305E34C:
	branch (s4_128 & Mem20[s2_30:int32]) == 0<32> l2305E392
l2305E356:
	word32 a0_48
	word32 s0_56
	word32 s3_61
	word32 s4_62
	word32 s1_301
	word32 a1_302
	word32 a2_303
	word32 a4_304
	word32 a5_305
	word32 a7_306
	word32 s5_307
	word32 s7_308
	word32 s8_309
	word32 s9_310
	word32 s10_311
	word32 s11_312
	ra = snprintf(ra, s3_132, s0_131, s6_130 + 1772<i32>, dwLoc08, dwArg18, dwArg44, s5, s3, dwArg88, dwArgAC, out s0_56, out s1_301, out a0_48, out a1_302, out a2_303, out a3, out a4_304, out a5_305, out a7_306, out s2_30, out s3_61, out s4_62, out s5_307, out s6_130, out s7_308, out s8_309, out s9_310, out s10_311, out s11_312)
	branch a0_48 >= 0<32> l2305E382
l2305E382:
	branch a0_48 >=u s0_56 l2305E368
l2305E386:
	s0_131 = s0_56 - a0_48
	s3_132 = s3_61 + a0_48
	s4_128 = s4_62 ^ Mem20[s2_30:int32]
l2305E392:
	s2_30 = s2_30 + 8<32>
l2305E326:
	branch s4_128 == 0<32> l2305E346
l2305E32A:
	word32 a0_82
	word32 s0_90
	word32 s1_285
	word32 a1_286
	word32 a2_287
	word32 a4_288
	word32 a5_289
	word32 a7_290
	word32 s2_291
	word32 s3_292
	word32 s4_293
	word32 s5_294
	word32 s6_295
	word32 s7_296
	word32 s8_297
	word32 s9_298
	word32 s10_299
	word32 s11_300
	ra = snprintf(ra, s3_132, s0_131, 0x2308A6F4<32>, dwLoc08, dwArg18, dwArg44, s5, s3, dwArg88, dwArgAC, out s0_90, out s1_285, out a0_82, out a1_286, out a2_287, out a3, out a4_288, out a5_289, out a7_290, out s2_291, out s3_292, out s4_293, out s5_294, out s6_295, out s7_296, out s8_297, out s9_298, out s10_299, out s11_300)
	branch a0_82 < 0<32> l2305E368
l2305E340:
	branch a0_82 >=u s0_90 l2305E368
l2305E368:
l2305E344:
l2305E346:
l2305E36E:
	0<32> = dwArgA8
	a3Out = a3
	return ra
mbedtls_x509_crt_verify_info_exit:


word32 mbedtls_x509_crt_check_key_usage(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_check_cert_usage
//      x509_crt_check_parent
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
mbedtls_x509_crt_check_key_usage_entry:
l2305E396:
	word32 a5_5 = Mem0[a0 + 248<i32>:int32]
	word32 a5_18 = a5_5 & 4<32>
	branch (a5_5 & 4<32>) == 0<32> l2305E3C8
l2305E39E:
	a4 = Mem0[a0 + 260<i32>:int32]
	a3 = a1 & 0xF7FFFFFE<32> & a4
	branch (a1 & 0xF7FFFFFE<32>) != a3 l2305E3C2
l2305E3B0:
	a3 = a1 & 0x8000001<32>
	a5_18 = 0<32>
	branch (a1 & 0x8000001<32>) == ((a1 | a4) & 0x8000001<32>) l2305E3C8
l2305E3C2:
	a5_18 = 0xFDFFF800<32>
l2305E3C8:
	a3Out = a3
	a4Out = a4
	a5Out = a5_18
	return a5_18
mbedtls_x509_crt_check_key_usage_exit:


word32 x509_crt_check_parent(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_top.isra.7
//      x509_crt_verify_child
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t1 t3 tp
// Preserved: sp
x509_crt_check_parent_entry:
l2305E3CC:
	word32 s0_44
	word32 a0_26
	word32 a1_27
	word32 a6_32
	word32 a7_33
	word32 s2_36
	word32 s4_38
	word32 s8_39
	word32 a2_175
	word32 a5_132
	word32 a4_128
	word32 a3_124
	word32 s3_148
	word32 s1_142 = x509_name_cmp(a0 + 76<i32>, a1 + 108<i32>, a2, a4, a5, out a0_26, out a1_27, out a2_175, out a3_124, out a4_128, out a5_132, out a6_32, out a7_33, out s2_36, out s3_148, out s4_38, out s8_39)
	branch a0_26 == 0<32> l2305E404
l2305E404:
	branch a2 != 0<32> l2305E41E
l2305E41E:
	s0_44 = a0_26
	s3_148 = Mem23[s1_142 + 24<i32>:int32]
	branch a3_124 != 0<32> l2305E42E
l2305E42E:
	word32 a2_46 = Mem23[s2_36 + 4<i32>:int32]
	s1_142 = Mem23[a5_132 + 4<i32>:word32]
	branch a2_46 != a5_132 l2305E426
l2305E438:
	s1_142 = Mem23[a1_27 + 8<i32>:word32]
	word32 a1_176
	word32 a2_177
	branch memcmp(Mem23[s2_36 + 8<i32>:int32], a1_27, a2_46, out a1_176, out a2_177, out a3_124, out a4_128, out a5_132) != 0<32> l2305E426
l2305E444:
l2305E426:
	a5_132 = 2<32>
	branch s3_148 <= 2<32> l2305E3F4
l2305E42C:
l2305E406:
	a5_132 = Mem23[s1_142 + 252<i32>:int32]
	branch a5_132 == 0<32> l2305E3F2
l2305E40C:
	s0_44 = 0<32> - CONVERT(mbedtls_x509_crt_check_key_usage(s1_142, 4<32>, out a3_124, out a4_128, out a5_132) != 0<32>, bool, word32)
l2305E3F2:
	s0_44 = 0xFFFFFFFF<32>
l2305E3F4:
	0<32> = dwArg0128
	s1Out = s1_142
	a0Out = s0_44
	a2Out = dwArg0100
	a3Out = a3_124
	a4Out = a4_128
	a5Out = a5_132
	a6Out = a6_32
	a7Out = a7_33
	s2Out = s2_36
	s3Out = s3_148
	s4Out = s4_38
	s8Out = s8_39
	return dwArgE4
x509_crt_check_parent_exit:


word32 x509_crt_verify_top.isra.7(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 s10, word32 s11, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg64, word32 dwArgA8, word32 dwArgB8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_child
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
x509_crt_verify_top.isra.7_entry:
l2305E446:
	word32 s0_106 = a0
	word32 s2_129 = a1
	word32 s6_226 = a2
	word32 s4_151 = a3
	word32 s8_152 = a4
	word32 s5_225 = a6
	word32 s7_227 = a7
	branch mbedtls_x509_time_is_past() == 0<32> l2305E486
l2305E47E:
	Mem51[a5 | 1<i32>:word32] = Mem47[a5:word32]
	a5 = a5 | 1<i32>
l2305E486:
	branch mbedtls_x509_time_is_future() == 0<32> l2305E498
l2305E490:
	Mem59[a5 | 512<i32>:word32] = Mem56[a5:word32]
l2305E498:
	word32 a5_69 = 1<32> << CONVERT(Mem61[a0 + 296<i32>:byte], byte, word32) + -1<i32> & Mem61[a2:int32]
	branch a5_69 != 0<32> l2305E4B6
l2305E4AE:
	Mem73[a5_69 | 0x4000000<32>:word32] = Mem61[a5_69:word32]
l2305E4B6:
	word32 a4_136 = Mem75[a2 + 4<i32>:int32]
	word32 a5_82 = 1<32> << CONVERT(Mem75[a0 + 297<i32>:byte], byte, word32) + -1<i32> & a4_136
	branch a5_82 != 0<32> l2305E4D4
l2305E4CC:
	Mem86[a5_82 | 0x8000000<32>:word32] = Mem75[a5_82:word32]
	a4_136 = 0x8000000<32>
	a5_82 = a5_82 | 0x8000000<32>
l2305E4D4:
	word32 a0_441
	word32 s1_148 = Mem88[a5_82:word32]
	Mem91[a5_82 | 8<i32>:word32] = s1_148
	word32 a5_118
	word32 a0_94 = mbedtls_md_info_from_type(CONVERT(Mem91[a0 + 296<i32>:byte], byte, word32), out a5_118)
	word32 s9_451 = a0_94
	branch a0_94 == 0<32> l2305E504
l2305E4E8:
	s0_106 = Mem91[a1 + 20<i32>:word32]
	s3 = 0<32>
	word32 a1_1160
	ra = mbedtls_md(ra, a0_94, a1, a2, fp + -96<i32>, out a1_1160, out a5_118)
	s10 = CONVERT(a3 <u 1<i32>, bool, word32)
	s11 = a3 + 1<i32>
l2305E4FC:
	branch s2_129 != 0<32> l2305E50A
l2305E50A:
	word32 a2_141
	word32 a3_142
	word32 a0_156
	s0_106 = x509_crt_check_parent(s0_106, s2_129, 1<32>, a4_136, a5_118, dwArgA8, out s1_148, out a0_156, out a2_141, out a3_142, out a4_136, out a5_118, out a6, out a7, out s2_129, out s3, out s4_151, out s8_152)
	branch a0_156 != 0<32> l2305E58E
l2305E518:
	s0_106 = Mem139[a3_142 + 68<i32>:word32]
	word32 a5_160 = s11
	branch a3_142 != Mem139[s2_129 + 68<i32>:int32] l2305E538
l2305E524:
	s0_106 = Mem139[a0_156 + 72<i32>:word32]
	word32 a1_1161
	word32 a2_1162
	word32 a3_1163
	word32 a4_1164
	branch memcmp(a0_156, Mem139[s2_129 + 72<i32>:int32], a2_141, out a1_1161, out a2_1162, out a3_1163, out a4_1164, out a5_160) != 0<32> l2305E538
l2305E536:
	a5_160 = s4_151
l2305E538:
	a4_136 = Mem174[s2_129 + 256<i32>:int32]
	branch a4_136 <= 0<32> l2305E548
l2305E540:
	a5_118 = a5_160 - s8_152
	branch a4_136 < a5_118 l2305E58E
l2305E548:
	word32 a0_215
	ra = mbedtls_pk_verify_ext(ra, CONVERT(Mem174[s0_106 + 297<i32>:byte], byte, word32), Mem174[s0_106 + 300<i32>:int32], s2_129 + 188<i32>, CONVERT(Mem174[s0_106 + 296<i32>:byte], byte, word32), mbedtls_md_get_size(a0_94), Mem193[s0_106 + 292<i32>:int32], Mem193[s0_106 + 288<i32>:int32], s10, s11, mstatus, dwLoc80, dwLoc3C, s11, dwArg44, dwArgB8, dwArg0118, out s0_106, out s1_148, out a0_215, out a4_136, out a5_118, out a6, out a7, out s2_129, out s3, out s4_151, out s5_225, out s6_226, out s7_227, out s8_152, out s10, out s11, out mstatus)
	branch a0_215 != 0<32> l2305E58E
l2305E57E:
	branch mbedtls_x509_time_is_past() == 0<32> l2305E594
l2305E594:
	branch mbedtls_x509_time_is_future() != 0<32> l2305E588
l2305E59E:
	s3 = s2_129
l2305E588:
	branch s3 != 0<32> l2305E58E
l2305E58C:
	s3 = s2_129
l2305E58E:
	s2_129 = Mem252[s2_129 + 304<i32>:int32]
l2305E500:
	branch s3 != 0<32> l2305E5A0
l2305E5A0:
	s1_148 = Mem259[a5_118:word32]
	Mem271[a5_118 & 0xFFFFFFF7<32>:word32] = s1_148
	word32 a2_275
	word32 a5_277
	word32 a0_274 = x509_profile_check_key(CONVERT(Mem271[s0_106 + 297<i32>:byte], byte, word32), s3 + 188<i32>, out a2_275, out a4_136, out a5_277)
	branch a0_274 == 0<32> l2305E5BE
l2305E5B6:
	s1_148 = Mem271[a5_277:word32]
	Mem283[a5_277 | 0x10000000<32>:word32] = s1_148
	a4_136 = 0x10000000<32>
l2305E5BE:
	s0_106 = Mem285[a4_136 + 68<i32>:word32]
	a5_118 = Mem285[s3 + 68<i32>:int32]
	branch a4_136 != a5_118 l2305E5D6
l2305E5C8:
	s0_106 = Mem285[a0_274 + 72<i32>:word32]
	word32 a2_1166
	word32 a3_1167
	word32 a1_1165
	branch memcmp(a0_274, Mem285[s3 + 72<i32>:int32], a2_275, out a1_1165, out a2_1166, out a3_1167, out a4_136, out a5_118) == 0<32> l2305E504
l2305E5D6:
	branch mbedtls_x509_time_is_past() == 0<32> l2305E5E8
l2305E5E0:
	a5_118 = a5_118 | 1<i32>
l2305E5E8:
	branch mbedtls_x509_time_is_future() == 0<32> l2305E5FA
l2305E5F2:
	a5_118 = a5_118 | 512<i32>
l2305E5FA:
	branch s5_225 != 0<32> l2305E626
l2305E626:
	word32 tp_461
	word32 t1_465
	word32 t5_467
	word32 t6_468
	call s5_225 (retsize: 0;)
		uses: a0:s7_351,a1:s3_261,a2:s4_339 + 1<i32>,a3:fp + -100<i32>,a4:a4_411,a5:a5_412,a6:a6_417,a7:a7_430,mstatus:mstatus_466,ra:ra_393,s0:s0_363,s1:s1_367,s10:s10_403,s11:s11_408,s2:s2_372,s3:s3_261,s4:s4_339,s5:s5_324,s6:s6_263,s7:s7_351,s8:s8_381,s9:a0_94,Stack +0000:dwLoc80,Stack +0044:dwLoc3C,Stack +0064:dwLoc1C,Stack +00C0:dwArg40,Stack +00C4:dwArg44,Stack +00E4:dwArg64,Stack +0128:dwArgA8,Stack +0138:dwArgB8,Stack +0198:dwArg0118,t1:t1_465,t5:t5_467,t6:t6_468,tp:tp_461
		defs: a0:a0_441,a4:a4_457,a5:a5_458,a6:a6_459,a7:a7_460,mstatus:mstatus_466,ra:ra_449,s0:s0_440,s1:s1_442,s10:s10_452,s11:s11_453,s2:s2_443,s3:s3_450,s4:s4_444,s5:s5_445,s6:s6_446,s7:s7_447,s8:s8_448,s9:s9_451,t1:t1_465,t5:t5_467,t6:t6_468,tp:tp_461
	branch a0_441 != 0<32> l2305E608
l2305E504:
	branch s5_225 != 0<32> l2305E634
l2305E634:
	word32 tp_552
	word32 t1_556
	word32 t5_558
	word32 t6_559
	call s5_225 (retsize: 0;)
		uses: a0:s7_483,a1:s0_480,a2:s4_477,a3:s1_470,a4:a4_519,a5:a5_522,a6:a6_524,a7:a7_526,mstatus:mstatus_557,ra:ra_497,s0:s0_480,s1:s1_470,s10:s10_507,s11:s11_513,s2:s2_487,s3:s3_499,s4:s4_477,s5:s5_486,s6:s6_493,s7:s7_483,s8:s8_495,s9:s9_505,Stack +0040:dwArg40,Stack +0044:dwArg44,Stack +0064:dwArg64,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +0118:dwArg0118,Stack +FFFFFF80:dwLoc80,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFE4:dwLoc1C,t1:t1_556,t5:t5_558,t6:t6_559,tp:tp_552
		defs: a0:a0_532,a4:a4_548,a5:a5_549,a6:a6_550,mstatus:mstatus_557,s0:s0_531,s10:s10_543,s11:s11_544,s2:s2_534,s3:s3_541,s4:s4_535,s6:s6_537,s7:s7_538,s8:s8_539,t1:t1_556,t5:t5_558,t6:t6_559,tp:tp_552
	branch a0_441 == 0<32> l2305E5FE
l2305E640:
l2305E508:
l2305E5FE:
	a5_118 = a5_118 | a4_136
	Mem571[a5_118:word32] = Mem561[a5_118:word32]
	a0_441 = 0<32>
l2305E608:
	s0Out = s0_106
	s1Out = dwArg0118
	a0Out = a0_441
	a4Out = a4_136
	a5Out = a5_118
	a6Out = a6
	a7Out = dwLoc34
	s2Out = s2_129
	s3Out = s3
	s4Out = s4_151
	s5Out = s8
	s6Out = s6_226
	s7Out = s7_227
	s8Out = s8_152
	s9Out = dwLoc74
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return dwArg0158
x509_crt_verify_top.isra.7_exit:


word32 x509_crt_verify_child(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s2, word32 s5, word32 s7, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg58, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_child
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] s7:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
x509_crt_verify_child_entry:
l2305E642:
	word32 s0_375
	word32 a5_393
	word32 a6_394
	word32 a2_125
	word32 sp_3 = fp + -144<i32>
	word32 s1_32 = a0
	word32 s3_146 = a1
	word32 s10_235 = a3
	word32 s4_222 = a6
	word32 s2_220 = dwArg58
	word32 s6_224 = dwLoc84
	a2_125 = a2
	branch a5 == 0<32> l2305E6B8
l2305E676:
	word32 a0_49
	word32 a3_905
	word32 a4_906
	word32 a5_907
	word32 a7_908
	s1_32 = x509_name_cmp(a0 + 76<i32>, a0 + 108<i32>, a2, a4, a5, out a0_49, out a1, out a2_125, out a3_905, out a4_906, out a5_907, out a6_394, out a7_908, out s2_220, out s3_146, out s4_222, out s8)
	branch a0_49 != 0<32> l2305E686
l2305E684:
	s4_222 = s4_222 + 1<32>
l2305E686:
	a5 = 8<32>
	branch s2_220 != 8<32> l2305E6B8
l2305E6B8:
	branch mbedtls_x509_time_is_past() == 0<32> l2305E6CA
l2305E6C2:
	a5 = a5 | 1<i32>
	Mem77[a5:word32] = Mem30[a5:word32]
l2305E6CA:
	branch mbedtls_x509_time_is_future() == 0<32> l2305E6DC
l2305E6D4:
	Mem85[a5 | 512<i32>:word32] = Mem82[a5:word32]
l2305E6DC:
	word32 a5_97 = 1<32> << CONVERT(Mem87[s1_32 + 296<i32>:byte], byte, word32) + -1<i32> & Mem87[dwLoc84:int32]
	branch a5_97 != 0<32> l2305E6FA
l2305E6F2:
	Mem101[a5_97 | 0x4000000<32>:word32] = Mem87[a5_97:word32]
l2305E6FA:
	word32 a4_109 = Mem103[dwLoc84 + 4<i32>:int32]
	word32 a5_110 = 1<32> << CONVERT(Mem103[s1_32 + 297<i32>:byte], byte, word32) + -1<i32> & a4_109
	branch a5_110 != 0<32> l2305E718
l2305E710:
	Mem114[a5_110 | 0x8000000<32>:word32] = Mem103[a5_110:word32]
	a4_109 = 0x8000000<32>
l2305E718:
	word32 ra_232
	word32 a5_119
	word32 a0_118 = mbedtls_md_info_from_type(CONVERT(Mem116[s1_32 + 296<i32>:byte], byte, word32), out a5_119)
	ra_232 = ra
	branch a0_118 != 0<32> l2305E72E
l2305E72E:
	word32 s1_134 = Mem116[a1 + 20<i32>:word32]
	word32 a5_910
	word32 a1_909
	word32 ra_160 = mbedtls_md(ra, a0_118, a1, a2_125, fp + -96<i32>, out a1_909, out a5_910)
	word32 s5_148 = s3_146 + 188<i32>
	word32 a5_168
	word32 a2_911
	word32 a4_912
	branch x509_profile_check_key(CONVERT(Mem116[s1_134 + 297<i32>:byte], byte, word32), s5_148, out a2_911, out a4_912, out a5_168) == 0<32> l2305E752
l2305E74A:
	Mem174[a5_168 | 0x10000000<32>:word32] = Mem116[a5_168:word32]
l2305E752:
	word32 a1_178 = Mem176[s1_134 + 300<i32>:int32]
	dwLoc84 = a1_178
	word32 a0_213
	word32 s1_914
	word32 a6_915
	word32 a7_916
	word32 s5_917
	word32 s11_918
	word32 s0_913
	ra_232 = mbedtls_pk_verify_ext(ra_160, CONVERT(Mem176[s1_134 + 297<i32>:byte], byte, word32), a1_178, s5_148, CONVERT(Mem176[s1_134 + 296<i32>:byte], byte, word32), mbedtls_md_get_size(a0_118), Mem185[s1_134 + 292<i32>:int32], Mem185[s1_134 + 288<i32>:int32], a3, a0_118, mstatus, dwLoc90, s0, dwArg14, ra, dwArgA8, dwArg0108, out s0_913, out s1_914, out a0_213, out a4_109, out a5_119, out a6_915, out a7_916, out s2_220, out s3_146, out s4_222, out s5_917, out s6_224, out s7, out s8, out s10_235, out s11_918, out mstatus)
	branch a0_213 != 0<32> l2305E724
l2305E724:
	a5_119 = a5_119 | 8<i32>
	Mem245[a5_119:word32] = Mem242[a5_119:word32]
l2305E786:
	word32 s5_255 = a2
	word32 s11_263 = CONVERT(s2_220 <u 1<i32>, bool, word32)
l2305E78C:
	word32 a4_392
	word32 a7_395
	word32 s5_386
	word32 ra_385
	word32 s9_383
	word32 s1_376
	word32 a0_388
	word32 a7_292
	word32 a4_296
	word32 a3_297
	word32 a1_300
	branch s5_255 != 0<32> l2305E7A2
l2305E7A2:
	word32 a0_291
	word32 a2_920
	word32 a3_921
	word32 a6_922
	word32 a7_923
	word32 s1_919
	x509_crt_check_parent(s3_146, s5_255, 0<32>, a4_109, a5_119, dwArg98, out s1_919, out a0_291, out a2_920, out a3_921, out a4_109, out a5_119, out a6_922, out a7_923, out s2_220, out s3_146, out s4_222, out s8)
	branch a0_291 == 0<32> l2305E830
l2305E830:
	a7_292 = s8
	a4_296 = s4_222
	a3_297 = s2_220 + 1<i32>
	a1_300 = s5_255
l2305E7B0:
	s5_255 = Mem575[s5_255 + 304<i32>:int32]
l2305E790:
	word32 s5_304 = Mem575[s3_146 + 304<i32>:int32]
	word32 a4_305 = CONVERT(s2_220 <u 1<i32>, bool, word32)
	s11_263 = s2_220 + 2<i32> - s4_222
l2305E7C6:
	branch s5_304 != 0<32> l2305E7B6
l2305E7B6:
	word32 a5_318 = Mem317[s5_304 + 256<i32>:int32]
	branch a5_318 <= 0<32> l2305E7E2
l2305E7BE:
	branch a5_318 >= s11_263 l2305E7E2
l2305E7E2:
	word32 a0_349
	word32 a5_927
	word32 a6_928
	word32 a7_929
	word32 s4_930
	word32 s1_924
	word32 a2_925
	word32 a3_926
	word32 s0_340 = x509_crt_check_parent(s3_146, s5_304, 0<32>, a4_305, a5_318, dwArg98, out s1_924, out a0_349, out a2_925, out a3_926, out a4_305, out a5_927, out a6_928, out a7_929, out s2_220, out s3_146, out s4_930, out s8)
	s4_222 = ra
	branch a0_349 != 0<32> l2305E7C2
l2305E7F4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg20 = <invalid>
	word32 stackArg24 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg264 = <invalid>
	dwLoc90 = s7
	ra_385 = x509_crt_verify_child(ra_232, s0_340, s3_146, s5_304, a2, s10_235, s6_224, s2_220 + 1<i32>, ra, s2_220, s5_304, s7, s8, mstatus, stackArg20, stackArg24, stackArg88, stackArg136, stackArg152, dwArg18, stackArg264, out s0_375, out s1_376, out a0_388, out a4_392, out a5_393, out a6_394, out a7_395, out s2_220, out s3_146, out s4_222, out s5_386, out s6_224, out s7, out s8, out s9_383, out s10_235, out s11, out mstatus)
l2305E7C2:
	s5_304 = Mem405[s5_304 + 304<i32>:int32]
l2305E7CA:
	a7_292 = s8
	a4_296 = s4_222
	a3_297 = s2_220 + 1<i32>
	a1_300 = a2
l2305E7DA:
	ra_385 = x509_crt_verify_top.isra.7(ra_232, s3_146, a1_300, s6_224, a3_297, a4_296, fp + -100<i32>, s7, a7_292, s3_146, s10_235, s11_263, mstatus, s2, s0, dwLoc2C, dwArg18, s5, dwArg88, out s0_375, out s1_376, out a0_388, out a4_392, out a5_393, out a6_394, out a7_395, out s2_220, out s3_146, out s4_222, out s5_386, out s6_224, out s7, out s8, out s9_383, out s10_235, out s11, out mstatus)
l2305E80E:
	sp_3 = fp + -144<i32>
	branch a0_388 != 0<32> l2305E69A
l2305E812:
	branch s7 != 0<32> l2305E822
l2305E822:
	word32 a0_520
	word32 tp_533
	word32 t5_534
	word32 t6_535
	call s7 (retsize: 0;)
		uses: a0:s8_490,a1:s1_488,a2:s2_486,a3:s0_484,a4:a4_503,a5:a5_502,a6:a6_500,a7:a7_501,mstatus:mstatus_504,ra:ra_497,s0:s0_484,s1:s1_488,s10:s10_496,s11:s11_499,s2:s2_486,s3:s3_492,s4:s4_493,s5:s5_498,s6:s6_494,s7:s7_483,s8:s8_490,s9:s9_495,Stack +0000:dwLoc90_805,Stack +000C:dwLoc84_781,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +0058:dwArg58,Stack +0064:dwLoc2C,Stack +0088:dwArg88,Stack +00A4:dwArg14,Stack +00A8:dwArgA8,Stack +00E8:dwArg58,Stack +0108:dwArg0108,Stack +0118:dwArg88,Stack +0128:dwArg98,Stack +0138:dwArgA8,Stack +0198:dwArg0108,Stack +FFFFFF70:dwLoc90_805,Stack +FFFFFF7C:dwLoc84_781,Stack +FFFFFFD4:dwLoc2C,t5:t5_534,t6:t6_535,tp:tp_533
		defs: a0:a0_520,a4:a4_524,a5:a5_525,a6:a6_526,mstatus:mstatus_532,s0:s0_507,s10:s10_516,s11:s11_519,s2:s2_509,s3:s3_510,s4:s4_511,s6:s6_512,s7:s7_513,s8:s8_514,sp:sp_506,t5:t5_534,t6:t6_535,tp:tp_533
	branch a0_520 == 0<32> l2305E816
l2305E82E:
l2305E816:
	s0_375 = Mem538[a5_393:word32]
	a5_393 = a5_393 | a4_392
	Mem545[a5_393:word32] = s0_375
l2305E68C:
	s0_375 = Mem30[8<32>:word32]
	Mem550[8<32>:word32] = s0_375
	a5_393 = 8<32>
l2305E69A:
	word32 sp_556 = Mem552[sp_3 + 72<i32>:word32]
	word32 a4_553 = Mem552[sp_3 + 32<i32>:word32]
	word32 a0_554 = Mem552[sp_3 + 4<i32>:word32]
	word32 s9_558 = Mem552[sp_556 + 408<i32>:word32]
	word32 s5_559 = Mem552[sp_556 + 440<i32>:word32]
	word32 a7_560 = Mem552[sp_556 + 472<i32>:word32]
	word32 s1_562 = Mem552[sp_556 + 284<i32>:word32]
	word32 ra_564 = Mem552[sp_556 + 348<i32>:word32]
	s0Out = s0_375
	s1Out = s1_562
	a0Out = a0_554
	a4Out = a4_553
	a5Out = a5_393
	a6Out = a6_394
	a7Out = a7_560
	s2Out = s2_220
	s3Out = s3_146
	s4Out = s4_222
	s5Out = s5_559
	s6Out = s6_224
	s7Out = s7
	s8Out = s8
	s9Out = s9_558
	s10Out = s10_235
	s11Out = s11
	mstatusOut = mstatus
	return ra_564
x509_crt_verify_child_exit:


word32 mbedtls_x509_crt_check_extended_key_usage(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_check_cert_usage
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a5 s0 s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
mbedtls_x509_crt_check_extended_key_usage_entry:
l2305E842:
	word32 a5_151 = Mem0[a0 + 248<i32>:int32]
	branch a5_151 << 0x14<u32> >= 0<32> l2305E8AE
l2305E8AE:
	s1Out = s1
	a0Out = 0<32>
	a5Out = a5_151
	s3Out = s3
	return s0
l2305E84E:
	a1_41 = a1
l2305E86A:
	word32 a0_132
	word32 a1_41
	branch a5_151 == a2 l2305E89E
l2305E89E:
	word32 a3_176
	word32 a2_175
	word32 a4_177
	a0 = memcmp(a0, a1, a2, out a1_41, out a2_175, out a3_176, out a4_177, out a5_151)
	branch a0 != 0<32> l2305E870
l2305E870:
	word32 s0_45 = Mem20[a5_151 + 4<i32>:word32]
	branch a5_151 != 4<32> l2305E884
l2305E876:
	s0_45 = Mem20[a1_41 + 8<i32>:word32]
	word32 a2_178
	word32 a3_179
	word32 a4_180
	a0 = memcmp(0x2308A3AC<32>, a1_41, 4<32>, out a1_41, out a2_178, out a3_179, out a4_180, out a5_151)
	branch a0 == 0<32> l2305E8AA
l2305E8AA:
	a0_132 = 0<32>
l2305E884:
	branch Mem20[s0_45 + 12<i32>:word32] != 0<32> l2305E86A
l2305E888:
	a0_132 = 0xFDFFF800<32>
l2305E88E:
	s1Out = a2
	a0Out = a0_132
	a5Out = a5_151
	s3Out = 0x2308A000<32>
	return s1
mbedtls_x509_crt_check_extended_key_usage_exit:


word32 mbedtls_x509_crt_verify_with_profile(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 s7, word32 s9, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg58, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_certificate
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s7:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0058:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut: a0 a4 a5 ra s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_x509_crt_verify_with_profile_entry:
l2305E8B2:
	branch a3 == 0<32> l2305EA40
l2305EA40:
	a0Out = 0xFDFFF800<32>
	a4Out = a4
	a5Out = a5
	s5Out = s5
	return ra
l2305E8B6:
	word32 s10_113
	Mem36[a5:word32] = 0<32>
	word32 s0_102 = a5
	word32 s2_273 = a3
	word32 s4_275 = a1
	word32 s1_258 = a0
	s10_113 = s10
	branch a4 == 0<32> l2305E96C
l2305E8E8:
	word32 a4_1003
	word32 a3_1002
	word32 a1_1000
	word32 a2_1001
	word32 a5_1004
	word32 a0_50 = strlen(a4, out a1_1000, out a2_1001, out a3_1002, out a4_1003, out a5_1004)
	word32 a5_56 = Mem36[a0 + 248<i32>:int32]
	s7 = a0_50
	a5 = a5_56 & 32<i32>
	branch (a5_56 & 32<i32>) != 0<32> l2305E91C
l2305E91C:
	word32 s9_110 = a0 + 232<i32>
	s10_113 = 2<32>
	s11 = 0x2308A000<32>
l2305E926:
	word32 s8_64 = Mem36[s9_110 + 4<i32>:int32]
	branch s8_64 != a0_50 l2305E93C
l2305E92E:
	word32 a3_1015
	word32 a7_1017
	word32 a4_1016
	branch x509_memcasecmp(a4, Mem36[s9_110 + 8<i32>:int32], a0_50, out a3_1015, out a4_1016, out a5, out a7_1017) == 0<32> l2305E96C
l2305E93C:
	branch s8_64 >u 2<32> l2305E952
l2305E952:
	word32 a4_1021
	word32 a1_1018
	word32 a2_1019
	word32 a3_1020
	branch memcmp(Mem36[s9_110 + 8<i32>:int32], 0x2308A720<32>, 2<32>, out a1_1018, out a2_1019, out a3_1020, out a4_1021, out a5) != 0<32> l2305E940
l2305E962:
	word32 a0_96
	word32 s8_1022
	s0_102 = x509_check_wildcard(a4, out a0_96, out a5, out s8_1022)
	branch a0_96 != 0<32> l2305E940
l2305E940:
	s9_110 = Mem36[s9_110 + 12<i32>:int32]
	branch s9_110 != 0<32> l2305E926
l2305E8FA:
	word32 s8_111 = a0 + 108<i32>
	s10_113 = 2<32>
	s11 = 0x2308A000<32>
l2305E908:
	a5 = 3<32>
	branch Mem116[s8_111 + 4<i32>:int32] == 3<32> l2305E9B2
l2305E9B2:
	word32 a2_1006
	word32 a1_1005
	word32 a3_1007
	word32 a4_1008
	branch memcmp(0x2308A724<32>, Mem116[s8_111 + 8<i32>:int32], 3<32>, out a1_1005, out a2_1006, out a3_1007, out a4_1008, out a5) != 0<32> l2305E912
l2305E9C2:
	word32 a4_129 = Mem116[s8_111 + 16<i32>:int32]
	branch a4_129 != a0_50 l2305E9DC
l2305E9CA:
	word32 a7_1010
	word32 a3_1009
	branch x509_memcasecmp(Mem116[s8_111 + 20<i32>:int32], a4, a0_50, out a3_1009, out a4_129, out a5, out a7_1010) == 0<32> l2305E96C
l2305E9DC:
	branch a4_129 <=u 2<32> l2305E912
l2305E9E0:
	word32 a1_1011
	word32 a2_1012
	word32 a3_1013
	word32 a4_1014
	branch memcmp(Mem149[s8_111 + 20<i32>:int32], 0x2308A720<32>, 2<32>, out a1_1011, out a2_1012, out a3_1013, out a4_1014, out a5) != 0<32> l2305E912
l2305E9F0:
	word32 a0_164
	s0_102 = x509_check_wildcard(a4, out a0_164, out a5, out s8_111)
	branch a0_164 != 0<32> l2305E912
l2305E9FE:
l2305E912:
	s8_111 = Mem177[s8_111 + 24<i32>:int32]
	branch s8_111 != 0<32> l2305E908
l2305E91A:
l2305E948:
	s0_102 = Mem185[a5:word32]
	a5 = a5 | 4<i32>
	Mem188[a5:word32] = s0_102
	s11 = 0x2308A000<32>
	s10_113 = 2<32>
l2305E96C:
	word32 a0_208 = mbedtls_pk_get_type(a0 + 188<i32>, a5)
	word32 a5_223 = 1<32> << a0_208 + -1<i32> & Mem206[a3 + 4<i32>:int32]
	branch a5_223 != 0<32> l2305E996
l2305E98E:
	s0_102 = Mem206[a5_223:word32]
	Mem227[a5_223 | 0x8000000<32>:word32] = s0_102
l2305E996:
	word32 a2_1023
	word32 a4_234
	word32 a5_235
	branch x509_profile_check_key(a0_208, a0 + 188<i32>, out a2_1023, out a4_234, out a5_235) == 0<32> l2305E9A6
l2305E99E:
	s0_102 = Mem238[a5_235:word32]
	Mem242[a5_235 | 0x10000000<32>:word32] = s0_102
	a4_234 = 0x10000000<32>
	a5_235 = a5_235 | 0x10000000<32>
l2305E9A6:
	word32 s3_253 = a1
l2305E9A8:
	word32 a4_338
	word32 a0_334
	word32 a5_339
	word32 a5_285
	word32 a2_288
	word32 a1_289
	word32 s3_274
	branch s3_253 != 0<32> l2305EA00
l2305EA00:
	word32 a0_280
	word32 a2_1024
	word32 a3_1025
	word32 a6_1026
	word32 a7_1027
	word32 s8_1028
	s0_102 = x509_crt_check_parent(s1_258, s3_253, 0<32>, a4_234, a5_235, dwArgC8, out s1_258, out a0_280, out a2_1024, out a3_1025, out a4_234, out a5_235, out a6_1026, out a7_1027, out s2_273, out s3_274, out s4_275, out s8_1028)
	branch a0_280 == 0<32> l2305EA8C
l2305EA8C:
	a5_285 = s0_102
	a2_288 = s2_273
	a1_289 = s3_274
l2305EA0E:
	s3_253 = Mem509[s3_274 + 304<i32>:int32]
l2305E9AC:
	s3_274 = Mem509[s1_258 + 304<i32>:int32]
l2305EA26:
	branch s3_274 != 0<32> l2305EA14
l2305EA14:
	word32 a3_304
	word32 s3_312
	word32 a0_318
	word32 a6_1030
	word32 a7_1031
	word32 s8_1032
	word32 a2_1029
	s0_102 = x509_crt_check_parent(s1_258, s3_274, 0<32>, a4_234, a5_235, dwArgC8, out s1_258, out a0_318, out a2_1029, out a3_304, out a4_234, out a5_235, out a6_1030, out a7_1031, out s2_273, out s3_312, out s4_275, out s8_1032)
	branch a0_318 == 0<32> l2305EA48
l2305EA48:
	word32 s0_1033
	word32 a7_1036
	word32 s2_1037
	word32 s3_1038
	word32 s4_1039
	word32 s5_1040
	word32 s6_1041
	word32 s7_1042
	word32 s8_1043
	word32 s9_1044
	word32 s10_1045
	word32 mstatus_1047
	word32 s11_1046
	word32 s1_1034
	word32 a6_1035
	x509_crt_verify_child(ra, s0_102, s1_258, s3_312, s4_275, a3_304, s2_273, 0<32>, 0<32>, s2_273, a6, s7, s3, mstatus, dwLoc4C, s10, dwLoc08, dwArg28, s9, s1, dwArgA8, out s0_1033, out s1_1034, out a0_334, out a4_338, out a5_339, out a6_1035, out a7_1036, out s2_1037, out s3_1038, out s4_1039, out s5_1040, out s6_1041, out s7_1042, out s8_1043, out s9_1044, out s10_1045, out s11_1046, out mstatus_1047)
l2305EA22:
	s3_274 = Mem509[s3_312 + 304<i32>:int32]
l2305EA2A:
	a5_285 = s0_102
	a2_288 = s2_273
	a1_289 = s4_275
l2305EA38:
	word32 a7_1051
	word32 s2_1052
	word32 s3_1053
	word32 s4_1054
	word32 s5_1055
	word32 s6_1056
	word32 s7_1057
	word32 s8_1058
	word32 s9_1059
	word32 s10_1060
	word32 mstatus_1062
	word32 s11_1061
	word32 s0_1048
	word32 s1_1049
	word32 a6_1050
	x509_crt_verify_top.isra.7(ra, s1_258, a1_289, a2_288, 0<32>, 0<32>, a5_285, a6, a7, s3_274, s10_113, s11, mstatus, dwLoc20, dwLoc1C, dwArg04, s1, dwArg58, dwArgB8, out s0_1048, out s1_1049, out a0_334, out a4_338, out a5_339, out a6_1050, out a7_1051, out s2_1052, out s3_1053, out s4_1054, out s5_1055, out s6_1056, out s7_1057, out s8_1058, out s9_1059, out s10_1060, out s11_1061, out mstatus_1062)
l2305EA60:
	branch a0_334 != 0<32> l2305EA6E
l2305EA62:
	a0_334 = 0<32>
	branch a5_339 == 0<32> l2305EA6E
l2305EA68:
	a0_334 = 0xFDFFF900<32>
l2305EA6E:
	a0Out = a0_334
	a4Out = a4_338
	a5Out = a5_339
	s5Out = s4
	return dwArg68
mbedtls_x509_crt_verify_with_profile_exit:


word32 mbedtls_x509_crt_init(word32 ra, word32 a0, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
//      mbedtls_ssl_parse_certificate
//      mbedtls_x509_crt_parse_der
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_x509_crt_init_entry:
l2305EA9C:
l2305EAA2_thunk_memset:
	word32 a0_7
	word32 a1_8
	word32 a3_10
	word32 a5_12
	word32 t1_20
	word32 a2_21
	word32 a4_22
	word32 ra_13 = memset(ra, a0, 0<32>, 308<i32>, out t1_20, out a0_7, out a1_8, out a2_21, out a3_10, out a4_22, out a5_12)
	a0Out = a0_7
	a1Out = a1_8
	a3Out = a3_10
	a5Out = a5_12
	return ra_13
mbedtls_x509_crt_init_exit:


word32 mbedtls_x509_crt_free(word32 ra, word32 a0, word32 a1, word32 a5, word32 mstatus, word32 dwArg0138, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_destroy
//      mbedtls_ssl_session_free
//      mbedtls_ssl_parse_certificate
//      mbedtls_x509_crt_parse_der
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a5 ra s0 s1 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mbedtls_x509_crt_free_entry:
l2305EAA6:
	branch a0 == 0<32> l2305EB82
l2305EB82:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return ra
l2305EAAA:
	word32 s1_124 = a0
	word32 s0_102 = a0
l2305EABA:
	word32 a0_126
	word32 a2_118
	ra = mbedtls_pk_free(ra, s0_102 + 188<i32>, a5, out a0_126, out a2_118, out a5)
	word32 s2_26 = Mem14[s0_102 + 100<i32>:int32]
l2305EAC6:
	branch s2_26 != 0<32> l2305EB26
l2305EB26:
	s3 = Mem14[s2_26 + 24<i32>:int32]
	word32 a1_361
	mbedtls_zeroize(s2_26, 32<i32>, out a1_361)
	word32 a3_362
	word32 a4_363
	word32 a6_364
	word32 s4_365
	word32 t3_366
	vPortFree(s2_26, a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_102, out s1_124, out a0_126, out a1, out a2_118, out a3_362, out a4_363, out a5, out a6_364, out s4_365, out t3_366)
	s2_26 = s3
l2305EACA:
	word32 s2_53 = Mem14[s0_102 + 132<i32>:int32]
l2305EACE:
	branch s2_53 != 0<32> l2305EB3E
l2305EB3E:
	s3 = Mem14[s2_53 + 24<i32>:int32]
	word32 a1_367
	mbedtls_zeroize(s2_53, 32<i32>, out a1_367)
	word32 a3_368
	word32 a4_369
	word32 a6_370
	word32 s4_371
	word32 t3_372
	vPortFree(s2_53, a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_102, out s1_124, out a0_126, out a1, out a2_118, out a3_368, out a4_369, out a5, out a6_370, out s4_371, out t3_372)
	s2_53 = s3
l2305EAD2:
	word32 s2_105 = Mem14[s0_102 + 276<i32>:int32]
l2305EAD6:
	branch s2_105 != 0<32> l2305EB56
l2305EB56:
	s3 = Mem14[s2_105 + 12<i32>:int32]
	word32 a1_373
	mbedtls_zeroize(s2_105, 0x10<32>, out a1_373)
	word32 a3_374
	word32 a4_375
	word32 a6_376
	word32 s4_377
	word32 t3_378
	vPortFree(s2_105, a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_102, out s1_124, out a0_126, out a1, out a2_118, out a3_374, out a4_375, out a5, out a6_376, out s4_377, out t3_378)
	s2_105 = s3
l2305EADA:
	word32 s2_107 = Mem14[s0_102 + 244<i32>:int32]
l2305EADE:
	branch s2_107 != 0<32> l2305EB6C
l2305EB6C:
	s3 = Mem14[s2_107 + 12<i32>:int32]
	word32 a1_379
	mbedtls_zeroize(s2_107, 0x10<32>, out a1_379)
	word32 s0_380
	word32 a3_381
	word32 a4_382
	word32 a6_383
	word32 s4_384
	word32 t3_385
	vPortFree(s2_107, a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_380, out s1_124, out a0_126, out a1, out a2_118, out a3_381, out a4_382, out a5, out a6_383, out s4_384, out t3_385)
	s2_107 = s3
l2305EAE2:
	word32 s0_137 = Mem14[a0_126 + 8<i32>:word32]
	branch a0_126 == 0<32> l2305EAF2
l2305EAE6:
	word32 a1_386
	word32 a0_387
	word32 a3_388
	word32 a4_389
	word32 a6_390
	word32 s4_391
	word32 t3_392
	vPortFree(mbedtls_zeroize(a0_126, a1, out a1_386), a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_137, out s1_124, out a0_387, out a1, out a2_118, out a3_388, out a4_389, out a5, out a6_390, out s4_391, out t3_392)
l2305EAF2:
	s0_102 = Mem14[s0_137 + 304<i32>:int32]
	branch s0_102 != 0<32> l2305EABA
l2305EAF8:
	word32 s0_168 = s1_124
l2305EAFA:
	word32 s2_173 = Mem14[s0_168 + 304<i32>:int32]
	word32 a1_175
	word32 a0_174 = mbedtls_zeroize(s0_168, 308<i32>, out a1_175)
	branch s1_124 == s0_168 l2305EB12
l2305EB0C:
	word32 s0_393
	word32 a3_394
	word32 a4_395
	word32 a6_396
	word32 s4_397
	word32 t3_398
	vPortFree(s0_168, a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_393, out s1_124, out a0_174, out a1_175, out a2_118, out a3_394, out a4_395, out a5, out a6_396, out s4_397, out t3_398)
l2305EB12:
	s0_168 = s2_173
	branch s2_173 != 0<32> l2305EAFA
l2305EB18:
	s0Out = s2_173
	s1Out = s1_124
	a0Out = a0_174
	a1Out = a1_175
	a2Out = dwArg48
	a5Out = a5
	s3Out = s3
	s4Out = dwArg04
	s8Out = dwLoc1C
	return ra
mbedtls_x509_crt_free_exit:


word32 mbedtls_x509_crt_parse_der(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC4, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0144, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_certificate
//      mbedtls_x509_crt_parse
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0144:[0..31]
// LiveOut: a0 a1 a2 a5 mstatus ra s0 s10 s11 s3 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_x509_crt_parse_der_entry:
l2305EB84:
	word32 s0_1018
	branch a0 == 0<32> l2305F1D4
l2305EBA0:
	branch a1 == 0<32> l2305F1D4
l2305F1D4:
	s0_1018 = 0xFDFFF800<32>
l2305EBA4:
	word32 s0_124 = a2
	word32 s2_127 = a1
	word32 s4_1114 = a0
	s3 = 0<32>
l2305EBAE:
	word32 ra_76
	word32 s1_1012 = Mem25[a5 + 24<i32>:word32]
	ra_76 = ra
	branch a5 == 0<32> l2305EBE0
l2305EBB2:
	a5 = Mem25[s1_1012 + 304<i32>:int32]
	s3 = s1_1012
	branch a5 != 0<32> l2305EBD2
l2305EBD2:
l2305EBBA:
	word32 s1_60
	word32 a4_2285
	word32 a3_2284
	ra = mycalloc(ra, s1_1012, 1<32>, 308<i32>, a3, a4, a5, mstatus, dwLoc70, dwLoc6C, dwArg88, dwArgC8, out s0_124, out s1_60, out a1, out a2, out a3_2284, out a4_2285, out a5, out s2_127, out s3, out s4_1114, out s8)
	Mem69[s1_60 + 304<i32>:word32] = 1<32>
	branch true l2305EBD6
l2305EBD6:
	word32 a0_2286
	word32 a3_2288
	word32 a1_2287
	word32 a5_2289
	ra_76 = mbedtls_x509_crt_init(ra, 1<32>, out a0_2286, out a1_2287, out a3_2288, out a5_2289)
	s3 = s1_60
	s1_1012 = Mem69[s1_60 + 304<i32>:int32]
l2305EBE0:
	word32 a2_2269
	word32 a3_2270
	word32 t1_2266
	word32 a0_2267
	word32 a4_2271
	word32 a3_2277
	word32 a5_2272
	word32 t1_2273
	word32 a0_2274
	word32 a4_2278
	word32 a1_2275
	word32 a2_2276
	word32 a1_2268
	word32 a5_2279
	word32 a4_2283
	word32 a0_2281
	word32 t1_2280
	word32 a3_2282
	ra = memset(memset(memset(ra_76, fp + -108<i32>, 0<32>, 0xC<32>, out t1_2266, out a0_2267, out a1_2268, out a2_2269, out a3_2270, out a4_2271, out a5_2272), fp + -96<i32>, 0<32>, 0xC<32>, out t1_2273, out a0_2274, out a1_2275, out a2_2276, out a3_2277, out a4_2278, out a5_2279), fp + -84<i32>, 0<32>, 0xC<32>, out t1_2280, out a0_2281, out a1, out a2, out a3_2282, out a4_2283, out a5)
	branch s1_1012 == 0<32> l2305F1C2
l2305F1C2:
	s0_1018 = 0xFDFFF800<32>
	branch s3 != 0<32> l2305EC28
l2305EC02:
	word32 s0_129 = s0_124 + s2_127
	word32 a3_139
	word32 a4_140
	word32 a2_2290
	branch mbedtls_asn1_get_tag(s0_129, fp + -132<i32>, 48<i32>, a5, out a1, out a2_2290, out a3_139, out a4_140, out a5) == 0<32> l2305EC32
l2305EC32:
	branch s0_129 - a1 >=u a5 l2305EC4A
l2305EC4A:
	word32 a1_146 = a1 + a5 - s2_127
	Mem147[a1_146 + 4<i32>:word32] = s1_1012
	word32 s2_159
	word32 a4_2302
	word32 a3_2301
	word32 s0_2300
	ra = mycalloc(ra, s1_1012, 1<32>, a1_146, a3_139, a4_140, a5, mstatus, dwLoc70, dwLoc6C, dwArg88, dwArgC8, out s0_2300, out s1_1012, out a1, out a2, out a3_2301, out a4_2302, out a5, out s2_159, out s3, out s4_1114, out s8)
	Mem168[9<32>:word32] = s1_1012
	branch true l2305EC66
l2305EC66:
	word32 a4_171
	word32 a5_172
	word32 a2_2306
	word32 a1_2305
	word32 a6_2308
	word32 a3_2307
	word32 a7_2309
	memcpy(1<32>, s2_159, a2, out a1_2305, out a2_2306, out a3_2307, out a4_171, out a5_172, out a6_2308, out a7_2309)
	s1_1012 = Mem168[a4_171 + 4<i32>:word32]
	word32 a5_189 = a4_171 - a5_172 + s2_159
	Mem191[a5_189 + 20<i32>:word32] = s1_1012
	word32 dwLoc88_1369 = a5_189
	word32 a2_2310
	word32 a3_2311
	word32 a4_2312
	word32 a1_1169
	branch mbedtls_asn1_get_tag(s2_159 + a4_171, fp + -132<i32>, 48<i32>, a5_189, out a1_1169, out a2_2310, out a3_2311, out a4_2312, out a5) == 0<32> l2305ECBE
l2305ECBE:
	word32 s5_210 = s5 + a5
	s1_1012 = Mem195[a5 + 20<i32>:word32]
	word32 a5_214 = s5_210 - a5
	Mem215[a5_214 + 16<i32>:word32] = s1_1012
	word32 a5_222
	word32 a4_2315
	word32 a2_2313
	word32 a3_2314
	word32 a0_216 = mbedtls_asn1_get_tag(s5_210, fp + -60<i32>, 160<i32>, a5_214, out a1, out a2_2313, out a3_2314, out a4_2315, out a5_222)
	branch a0_216 == 0<32> l2305ED28
l2305ED28:
	s5_210 = dwArg54
	word32 a0_230
	word32 a3_2317
	word32 a4_2318
	word32 s0_237 = mbedtls_asn1_get_int(a0_216 + a5_222, s1_1012 + 24<i32>, a5_222, out s1_1012, out a0_230, out a1, out a3_2317, out a4_2318, out a5)
	branch a0_230 == 0<32> l2305ED4E
l2305ED4E:
	branch s0_237 == a5 l2305ECEA
l2305ED54:
l2305ED3C:
	branch a0_230 == 0xFDFFFE00<32> l2305ECEA
l2305ECDE:
	a5 = -98<i32>
	branch a0_216 != -98<i32> l2305ED46
l2305ECE6:
	Mem249[s1_1012 + 24<i32>:word32] = 0<32>
l2305ECEA:
	word32 a0_257
	s1_1012 = mbedtls_x509_get_serial(s5_210, s1_1012 + 28<i32>, a5, out a0_257, out a1, out a5)
	branch a0_257 != 0<32> l2305ED46
l2305ECFA:
	s6 = s1_1012 + 40<i32>
	word32 a0_273
	word32 s3_2322
	word32 a2_2320
	word32 s2_2321
	s1_1012 = mbedtls_x509_get_alg(s5_210, s1_1012 + 40<i32>, fp + -108<i32>, a5, dwArg14, dwArg88, out a0_273, out a1, out a2_2320, out a5, out s2_2321, out s3_2322)
	branch a0_273 != 0<32> l2305ED46
l2305ED0E:
	word32 s1_289 = Mem272[a5 + 24<i32>:word32]
	Mem292[a5 + 0x19<32>:word32] = s1_289
	branch a5 <= 0xFFFFFFFE<32> l2305ED5C
l2305ED5C:
	word32 a0_298
	s1_1012 = mbedtls_x509_get_sig_alg(s1_1012 + 40<i32>, s1_289 + 296<i32>, s1_289 + 297<i32>, a5 + 1<32>, out a0_298, out a1, out a5)
	branch a0_298 != 0<32> l2305ED46
l2305ED74:
	Mem310[a5 + 60<i32>:word32] = s1_1012
	word32 a4_2327
	word32 a3_2326
	word32 a2_2325
	branch mbedtls_asn1_get_tag(s5_210, fp + -132<i32>, 48<i32>, a5, out a1_1169, out a2_2325, out a3_2326, out a4_2327, out a5) != 0<32> l2305EC92
l2305ED8C:
	word32 a0_328
	word32 a4_332
	word32 s5_340
	word32 s2_337
	ra = mbedtls_x509_get_name(ra, fp + -128<i32>, a1_1169 + a5, s1_1012 + 76<i32>, a5, mstatus, dwArg48, dwArg88, dwArg0108, out s1_1012, out a0_328, out a1, out a4_332, out a5, out s2_337, out s5_340, out s6, out s7)
	branch a0_328 != 0<32> l2305ED46
l2305EDA0:
	s1_1012 = Mem310[a4_332 + 60<i32>:word32]
	word32 a5_354 = a5 - a4_332
	Mem355[a5_354 + 56<i32>:word32] = s1_1012
	word32 a4_363
	word32 a5_364
	word32 a2_2328
	word32 a3_2329
	word32 a0_358 = mbedtls_asn1_get_tag(s5_340, fp + -60<i32>, 48<i32>, a5_354, out a1, out a2_2328, out a3_2329, out a4_363, out a5_364)
	branch a0_358 == 0<32> l2305EE70
l2305EE70:
	a5 = a5_364 + a4_363
	s5_340 = ra
	dwLoc88_1369 = a5
l2305EDBA:
	a5 = -98<i32>
	branch a0_358 != -98<i32> l2305ED46
l2305EDC2:
	Mem378[a5 + 72<i32>:word32] = s1_1012
	word32 a2_2330
	word32 a3_2331
	word32 a4_387
	branch mbedtls_asn1_get_tag(s5_340, fp + -132<i32>, 48<i32>, a5, out a1_1169, out a2_2330, out a3_2331, out a4_387, out a5) != 0<32> l2305EC92
l2305EDDA:
	branch a5 == 0<32> l2305EDF0
l2305EDDE:
	word32 a0_397
	ra = mbedtls_x509_get_name(ra, fp + -128<i32>, a1_1169 + a5, s1_1012 + 108<i32>, a5, mstatus, dwArg48, dwArg88, dwArg0108, out s1_1012, out a0_397, out a1, out a4_387, out a5, out s2_337, out s5_340, out s6, out s7)
	branch a0_397 != 0<32> l2305ED46
l2305EDF0:
	word32 s1_421 = Mem378[a4_387 + 72<i32>:word32]
	word32 a5_428 = a5 - a4_387
	Mem429[a5_428 + 68<i32>:word32] = s1_421
	word32 a0_466
	word32 s2_458
	word32 s5_1308
	ra = mbedtls_pk_parse_subpubkey(ra, s1_421, fp + -128<i32>, s5_340, a5_428, s2_337, s7, s10, s11, mstatus, dwLoc88_1369, dwLoc6C, dwLoc68, s6, s0, dwLoc48, dwLoc2C, dwLoc28, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, s7, s5, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArg0108, out s1_1012, out a0_466, out a1, out a5, out s2_458, out s5_1308, out s6, out s7, out s10, out s11, out mstatus)
	branch a0_466 != 0<32> l2305ED46
l2305EE08:
	s1_1012 = Mem429[a5 + 24<i32>:word32]
	word32 a4_480 = 1<32>
	word32 a5_481 = a5 + 0xFFFFFFFE<32>
	branch a5 >u 0xFFFFFFFD<32> l2305EE1E
l2305EE12:
	branch s5_1308 != a5 + 0xFFFFFFFE<32> l2305EE7A
l2305EE7A:
	word32 a5_483 = CONVERT(Mem429[a5 + 0xFFFFFFFE<32>:byte], byte, word32)
	Mem486[s1_1012 + 196<i32>:word32] = a5_483
	word32 a5_495
	word32 a4_2334
	word32 a2_2332
	word32 a3_2333
	word32 a0_489 = mbedtls_asn1_get_tag(s5_1308, s1_1012 + 200<i32>, 161<i32>, a5_483, out a1, out a2_2332, out a3_2333, out a4_2334, out a5_495)
	branch a0_489 == 0<32> l2305EEAA
l2305EEAA:
	word32 a4_498 = Mem486[s1_1012 + 200<i32>:int32]
	Mem499[s1_1012 + 204<i32>:word32] = a5_495
	a5 = a5_495 + a4_498
l2305EE96:
	a5 = -98<i32>
	branch a0_489 != -98<i32> l2305ED46
l2305EE9E:
	s1_1012 = Mem504[a5 + 24<i32>:word32]
	a4_480 = 1<32>
	a5_481 = a5 + 0xFFFFFFFE<32>
	branch a5_481 <=u 1<32> l2305EE18
l2305EEA8:
l2305EE18:
	a4_480 = 1<32>
	branch s5_1308 != a5_481 l2305EEBA
l2305EEBA:
	word32 a5_515 = CONVERT(Mem510[a5_481:byte], byte, word32)
	Mem519[s1_1012 + 208<i32>:word32] = a5_515
	word32 a5_528
	word32 a2_2335
	word32 a3_2336
	word32 a0_522 = mbedtls_asn1_get_tag(s5_1308, s1_1012 + 212<i32>, 162<i32>, a5_515, out a1, out a2_2335, out a3_2336, out a4_480, out a5_528)
	branch a0_522 == 0<32> l2305EEE0
l2305EEE0:
	a4_480 = Mem519[s1_1012 + 212<i32>:int32]
	Mem532[s1_1012 + 216<i32>:word32] = a5_528
l2305EED6:
	a5 = -98<i32>
	branch a0_522 != -98<i32> l2305ED46
l2305EEDE:
l2305EE1E:
	s1_1012 = Mem538[a4_480 + 24<i32>:word32]
	a5 = 3<32>
	branch a4_480 != 3<32> l2305EEF8
l2305EE26:
	word32 a0_547
	s1_1012 = mbedtls_x509_get_ext(s5_1308, s1_1012 + 220<i32>, 3<32>, 3<32>, out a0_547, out a1, out a5)
	branch a0_547 != 0<32> l2305EEF0
l2305EEF0:
	a5 = -98<i32>
	branch a0_547 != -98<i32> l2305ED46
l2305EE38:
	s6 = 0xFDFFFB00<32>
l2305EE3E:
	branch a5 <u s5_1308 l2305EF00
l2305EF00:
	dwArg14 = 0<32>
	word32 a3_2338
	word32 a2_2337
	word32 a4_2339
	word32 a0_577 = mbedtls_asn1_get_tag(s5_1308, fp + -124<i32>, 48<i32>, a5, out a1, out a2_2337, out a3_2338, out a4_2339, out a5)
	branch a0_577 == 0<32> l2305EF26
l2305EF26:
	word32 a5_590 = CONVERT(Mem576[a5:byte], byte, word32)
	s7 = s7 + a5
	word32 a4_599
	word32 a3_2348
	word32 a2_2347
	a0_577 = mbedtls_asn1_get_tag(s5_1308, fp + -68<i32>, 6<32>, a5_590, out a1, out a2_2347, out a3_2348, out a4_599, out a5)
	branch a0_577 != 0<32> l2305EF1A
l2305EF40:
	a5 = s5_1308 - (a5 + a4_599)
	branch a5 <= 0<32> l2305F1E4
l2305EF52:
	word32 s0_617 = mbedtls_asn1_get_bool(s7, fp + -120<i32>, a5, out s1_1012, out a0_577, out a1, out a5)
	branch a0_577 == 0<32> l2305EF66
l2305EF5E:
	a5 = -98<i32>
	branch a0_577 != -98<i32> l2305EF1A
l2305EF66:
	word32 a2_633
	word32 a3_2349
	word32 a4_2350
	a0_577 = mbedtls_asn1_get_tag(s7, fp + -124<i32>, 4<32>, a5, out a1, out a2_633, out a3_2349, out a4_2350, out a5)
	branch a0_577 != 0<32> l2305EF1A
l2305EF74:
	word32 s0_1321 = s0_617 + a5
	branch s7 != s0_1321 l2305F11C
l2305EF7E:
	word32 a0_644
	s1_1012 = mbedtls_oid_get_x509_ext_type(fp + -72<i32>, fp + -116<i32>, a2_633, a5, s6, out a0_644, out a1, out a5, out s2_458)
	branch a0_644 == 0<32> l2305EF98
l2305EF98:
	word32 a4_653 = Mem605[s1_1012 + 248<i32>:int32]
	branch (a4_653 & a5) != 0<32> l2305F1EC
l2305EFA6:
	word32 a0_665
	Mem657[s1_1012 + 248<i32>:word32] = a4_653 | a5
	branch a5 == 256<i32> l2305F004
l2305F004:
	Mem659[s1_1012 + 252<i32>:word32] = 0<32>
	Mem660[s1_1012 + 256<i32>:word32] = 0<32>
	word32 a4_2353
	word32 a2_2351
	word32 a3_2352
	a0_665 = mbedtls_asn1_get_tag(s7, fp + -60<i32>, 48<i32>, a5, out a1, out a2_2351, out a3_2352, out a4_2353, out a5)
	branch a0_665 == 0<32> l2305F026
l2305F026:
	branch s0_1321 == a5 l2305EE3E
l2305F02C:
	s7 = s1_1012 + 252<i32>
	word32 s0_684 = mbedtls_asn1_get_bool(s0_1321, s1_1012 + 252<i32>, a5, out s1_1012, out a0_665, out a1, out a5)
	branch a0_665 == 0<32> l2305F05C
l2305F03C:
	a5 = -98<i32>
	branch a0_665 != -98<i32> l2305F01C
l2305F044:
	word32 a3_2363
	word32 a4_2364
	s0_684 = mbedtls_asn1_get_int(s0_684, s1_1012 + 252<i32>, -98<i32>, out s1_1012, out a0_665, out a1, out a3_2363, out a4_2364, out a5)
	branch a0_665 != 0<32> l2305F01C
l2305F050:
	a5 = Mem660[s1_1012 + 252<i32>:int32]
	branch a5 == 0<32> l2305F05C
l2305F056:
	Mem707[s1_1012 + 252<i32>:word32] = 1<32>
	a5 = 1<32>
l2305F05C:
	branch s0_684 == a5 l2305EE3E
l2305F062:
	word32 a3_2365
	word32 a4_2366
	word32 s0_724 = mbedtls_asn1_get_int(s0_684, s1_1012 + 256<i32>, a5, out s1_1012, out a0_665, out a1, out a3_2365, out a4_2366, out a5)
	branch a0_665 != 0<32> l2305F01C
l2305F070:
	branch s0_724 != a5 l2305F11C
l2305F076:
	word32 a5_730 = Mem709[s1_1012 + 256<i32>:int32]
	Mem732[s1_1012 + 256<i32>:word32] = a5_730 + 1<32>
	a5 = a5_730 + 1<32>
l2305EFB4:
	branch a5 > 256<i32> l2305EFCE
l2305EFCE:
	branch a5 == 0xFFFFF800<32> l2305F0D2
l2305F0D2:
	ra = mbedtls_asn1_get_sequence_of(ra, s7, s1_1012 + 264<i32>, 6<32>, a5, mstatus, dwArg58, dwArg98, out s1_1012, out a0_665, out a1, out a5, out s2_458, out s5_1308)
	branch a0_665 != 0<32> l2305F01C
l2305F0E2:
	a5 = Mem657[s1_1012 + 272<i32>:int32]
	branch a5 != 0<32> l2305EE3E
l2305F0EA:
l2305EFD6:
	branch a5 != 0x10000000<32> l2305EFC6
l2305EFDC:
	word32 a4_773
	word32 a2_2357
	s1_1012 = mbedtls_asn1_get_bitstring(s7, fp + -60<i32>, a5, s6, out a0_665, out a1, out a2_2357, out a4_773, out a5, out s2_458)
	branch a0_665 != 0<32> l2305F01C
l2305EFF0:
	s5_1308 = ra
	a5 = 1<32>
	branch a4_773 != 1<32> l2305F09A
l2305EFF8:
	a5 = CONVERT(Mem768[1<32>:byte], byte, word32)
	Mem783[s1_1012 + 280<i32>:byte] = SLICE(a5, byte, 0)
l2305EFB8:
	branch a5 == 4<32> l2305F082
l2305F082:
	word32 a2_793
	word32 a4_2354
	s1_1012 = mbedtls_asn1_get_bitstring(s7, fp + -60<i32>, a5, s6, out a0_665, out a1, out a2_793, out a4_2354, out a5, out s2_458)
	branch a0_665 != 0<32> l2305F01C
l2305F096:
	s5_1308 = s0_124
	branch a2_793 != 0<32> l2305F0A2
l2305F0A2:
	Mem802[s1_1012 + 260<i32>:word32] = 0<32>
	a5 = 0<32>
	a1 = 4<32>
l2305F0AC:
	Mem817[s1_1012 + 260<i32>:word32] = Mem809[s1_1012 + 260<i32>:int32] | CONVERT(Mem809[a0_665 + a5:byte], byte, word32) << (a5 << 3<u32>)
	a5 = a5 + 1<32>
	branch a2_793 == a5 l2305EE3E
l2305F0CC:
	branch a5 != 4<32> l2305F0AC
l2305F0D0:
l2305F09A:
l2305EFBE:
	branch a5 == 32<i32> l2305F0EC
l2305F0EC:
	word32 a4_832
	word32 a3_2356
	word32 a2_2355
	a0_665 = mbedtls_asn1_get_tag(s7, fp + -112<i32>, 48<i32>, a5, out a1, out a2_2355, out a3_2356, out a4_832, out a5)
	branch a0_665 != 0<32> l2305F01C
l2305F0FC:
	0<32> = dwArg0144
	a5 = a5 + a4_832
	branch s0_1321 != a5 l2305F11C
l2305F106:
	s7 = s1_1012 + 232<i32>
	word32 s8_1326 = 130<i32>
l2305F10E:
	branch a5 <u s0_1321 l2305F124
l2305F124:
	branch s0_1321 - a5 <= 0<32> l2305F1E4
l2305F1E4:
l2305F12C:
	word32 s9_846 = CONVERT(Mem839[a5:byte], byte, word32)
	word32 a3_853
	word32 a2_2358
	word32 a4_856
	a0_665 = mbedtls_asn1_get_len(s0_1321, fp + -60<i32>, a5 + 1<32>, out a1, out a2_2358, out a3_853, out a4_856, out a5)
	branch a0_665 != 0<32> l2305F01C
l2305F01C:
	branch a0_665 == 0xFDFFFB00<32> l2305EE3E
l2305F024:
l2305F142:
	a5 = CONVERT(SLICE(s9_846, byte, 0), byte, int32)
	branch a5 >= 0<32> l2305EF90
l2305F14C:
	branch s9_846 == s8_1326 l2305F15A
l2305F15A:
	a5 = Mem851[s7 + 8<i32>:int32]
	branch a5 == 0<32> l2305F174
l2305F160:
	a5 = Mem851[s7 + 12<i32>:int32]
	branch a5 != 0<32> l2305F1EC
l2305F1EC:
l2305F166:
	word32 a2_2359
	word32 a3_2360
	word32 s3_2361
	word32 s4_2362
	ra = mycalloc(ra, s1_1012, 1<32>, 0x10<32>, a3_853, a4_856, a5, mstatus, dwLoc70, a5_590, dwArg88, dwArgC8, out s0_1321, out s1_1012, out a1, out a2_2359, out a3_2360, out a4_856, out a5, out s2_458, out s3_2361, out s4_2362, out s8_1326)
	Mem896[s7 + 12<i32>:word32] = 1<32>
	branch false l2305F1DC
l2305F1DC:
l2305F172:
	s7 = 1<32>
l2305F174:
	Mem902[s7:word32] = s8_1326
	Mem906[s7 + 8<i32>:word32] = a5
	Mem909[s7 + 4<i32>:word32] = a4_856
l2305F150:
l2305F154:
	s5_1308 = ra
	a5 = a5 + a4_856
l2305F114:
	Mem917[s7 + 12<i32>:word32] = 0<32>
	branch s0_1321 == a5 l2305EE3E
l2305EFC6:
l2305EF88:
	branch a5 == 0<32> l2305EE3E
l2305EF90:
l2305EF1A:
	branch a0_577 == 0xFDFFFB00<32> l2305EEF8
l2305EEF8:
	branch s5_1308 == a5 l2305EE48
l2305EEFE:
l2305EF24:
l2305EE44:
	branch s5_1308 != a5 l2305F11C
l2305F11C:
l2305EE48:
	word32 a0_961
	word32 a2_963
	word32 s2_970
	s1_1012 = mbedtls_x509_get_alg(s2_458, fp + -84<i32>, fp + -96<i32>, a5, dwArg14, dwArg88, out a0_961, out a1, out a2_963, out a5, out s2_970, out s3)
	branch a0_961 != 0<32> l2305ED46
l2305EE5A:
	word32 s1_1119 = Mem960[a2_963 + 44<i32>:word32]
	ra = dwArg54
	branch a2_963 == a5 l2305F186
l2305F186:
	s1_1119 = Mem960[a0_961 + 48<i32>:word32]
	word32 a2_986
	word32 a3_2340
	word32 a4_2341
	word32 a0_981 = memcmp(a0_961, a1, a2_963, out a1, out a2_986, out a3_2340, out a4_2341, out a5)
	branch a0_981 != 0<32> l2305EE62
l2305F192:
	branch a2_986 != a5 l2305EE62
l2305F19A:
	branch a2_986 == 0<32> l2305F1A8
l2305F19C:
	word32 a3_2345
	word32 a2_2344
	word32 a4_2346
	branch memcmp(a0_981, a1, dwArgC4, out a1, out a2_2344, out a3_2345, out a4_2346, out a5) != 0<32> l2305EE62
l2305F1A8:
	word32 a0_1004
	word32 s2_1013
	s1_1012 = mbedtls_x509_get_sig(s2_970, a5, out a0_1004, out a1, out a2, out a5, out s2_1013, out s8)
	s0_1018 = a0_1004
	branch a0_1004 != 0<32> l2305ED46
l2305ED46:
	word32 a0_2319
	ra = mbedtls_x509_crt_free(ra, s1_1012, a1, a5, mstatus, dwArgA8, dwArgE8, out s0_1018, out s1_1012, out a0_2319, out a1, out a2, out a5, out s3, out s4_1114, out s8)
l2305F1BA:
	branch s2_1013 == a5 l2305ECA2
l2305F1C0:
l2305EE62:
	word32 s0_2342
	word32 a0_2343
	ra = mbedtls_x509_crt_free(dwArg54, s1_1119, a1, a5, mstatus, dwArgA8, dwArgE8, out s0_2342, out s1_1012, out a0_2343, out a1, out a2, out a5, out s3, out s4_1114, out s8)
	s0_1018 = 0xFDFFF980<32>
l2305ED1A:
	word32 s0_2323
	word32 a0_2324
	ra = mbedtls_x509_crt_free(ra, s1_289, a1, a5 + 1<32>, mstatus, dwArgA8, dwArgE8, out s0_2323, out s1_1012, out a0_2324, out a1, out a2, out a5, out s3, out s4_1114, out s8)
	s0_1018 = 0xFDFFFA80<32>
l2305EC92:
	word32 s0_1180
	word32 a0_2316
	ra = mbedtls_x509_crt_free(ra, s1_1012, a1_1169, a5, mstatus, dwArgA8, dwArgE8, out s0_1180, out s1_1012, out a0_2316, out a1, out a2, out a5, out s3, out s4_1114, out s8)
	s0_1018 = s0_1180 + 0xFDFFFE80<32>
	branch s0_1180 != 0xFDFFFE80<32> l2305EC24
l2305EC5E:
	s0_1018 = 0xFD000780<32>
l2305EC3C:
	word32 s0_2303
	word32 a0_2304
	ra = mbedtls_x509_crt_free(ra, s1_1012, a1, a5, mstatus, dwArgA8, dwArgE8, out s0_2303, out s1_1012, out a0_2304, out a1, out a2, out a5, out s3, out s4_1114, out s8)
	s0_1018 = 0xFDFFFE1A<32>
l2305EC18:
	word32 s0_2291
	word32 a0_2292
	ra = mbedtls_x509_crt_free(ra, s1_1012, a1, a5, mstatus, dwArgA8, dwArgE8, out s0_2291, out s1_1012, out a0_2292, out a1, out a2, out a5, out s3, out s4_1114, out s8)
	s0_1018 = 0xFDFFFE80<32>
l2305EC24:
	branch s3 == 0<32> l2305EC2C
l2305EC28:
	Mem1245[s3 + 304<i32>:word32] = 0<32>
l2305EC2C:
	branch s4_1114 != s1_1012 l2305F1CC
l2305F1CC:
	word32 a3_2295
	word32 a0_2294
	word32 s4_2298
	word32 a6_2297
	word32 t3_2299
	word32 s1_2293
	word32 a4_2296
	vPortFree(s1_1012, a2, a5, mstatus, dwArgC8, dwArg0108, out s0_1018, out s1_2293, out a0_2294, out a1, out a2, out a3_2295, out a4_2296, out a5, out a6_2297, out s4_2298, out t3_2299)
l2305EC30:
l2305EBCA:
	s0_1018 = 0xFD000780<32>
l2305ECA2:
	word32 s9_1299 = Mem1292[dwLoc48 + 408<i32>:word32]
	word32 s5_1300 = Mem1292[dwLoc48 + 440<i32>:word32]
	s0Out = s0_1018
	a0Out = dwLoc8C
	a1Out = a1
	a2Out = a2
	a5Out = a5
	s3Out = s3
	s5Out = s5_1300
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9_1299
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mbedtls_x509_crt_parse_der_exit:


word32 mbedtls_x509_crt_parse(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s5, word32 s6, word32 s8, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg94, word32 dwArg98, word32 dwArgB8, word32 dwArgF4, word32 dwArgF8, word32 dwArg010C, word32 dwArg0138, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
//      mbedtls_x509_crt_parse_file
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00F4:[0..31] Stack +00F8:[0..31] Stack +010C:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a3 a5 mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_x509_crt_parse_entry:
l2305F1F4:
	word32 s0_143
	branch a0 == 0<32> l2305F2FC
l2305F214:
	word32 s1_133 = a1
	branch a1 == 0<32> l2305F2FC
l2305F2FC:
	s0_143 = 0xFDFFF800<32>
l2305F21A:
	word32 s5_107
	word32 s3_132 = a2
	s5_107 = s5
	branch a2 == 0<32> l2305F23A
l2305F220:
	a5 = CONVERT(Mem29[a1 + a2 + -1<i32>:byte], byte, word32)
	s5_107 = s5
	branch a5 != 0<32> l2305F23A
l2305F22A:
	s5_107 = 0x2308A000<32>
	branch strstr(ra, a1, 0x2308A694<32>, out a1, out a3, out a4, out a5) != 0<32> l2305F2E0
l2305F2E0:
	word32 s4_129 = 0<32>
	s0_143 = 0<32>
	word32 s8_160 = 0<32>
	word32 s9_118 = 0x2308A000<32>
	s2_119 = s2
l2305F2C4:
	word32 s2_119
	a5 = 1<32>
	branch s3_132 >u 1<32> l2305F266
l2305F266:
	word32 a0_90
	word32 a2_91
	word32 a3_92
	word32 a4_102
	word32 s3_106
	word32 s6_108
	word32 s7_109
	word32 s10_116
	word32 s11_117
	word32 s2_653
	word32 s1_652
	word32 a5_651
	ra = mbedtls_pem_read_buffer(mbedtls_pem_init(ra, fp + -76<i32>, out a5_651), s0_143, fp + -76<i32>, s5_107 + 1684<i32>, s9_118 + 1712<i32>, s1_133, fp + -80<i32>, s2_119, mstatus, dwArg24, dwArg78, dwArgB8, dwArgF8, out s0_143, out s1_652, out a0_90, out a1, out a2_91, out a3_92, out a4_102, out a5, out s2_653, out s3_106, out s4_129, out s5_107, out s6_108, out s7_109, out s8_160, out s9_118, out s10_116, out s11_117)
	s2_119 = a0_90
	branch a0_90 != 0<32> l2305F2A8
l2305F2A8:
	branch a0_90 == s10_116 l2305F2DC
l2305F2AC:
	branch a0_90 == s6_108 l2305F2CA
l2305F2B0:
	word32 a5_126
	word32 a4_661
	word32 a3_660
	word32 s1_128 = mbedtls_pem_free(fp + -76<i32>, a2_91, a5, mstatus, dwArgF8, dwArg0138, out a1, out a3_660, out a4_661, out a5_126, out s4_129)
	0<32> = dwArg94
	s3_132 = s3_106 - a5_126
	s1_133 = s1_128 + a5_126
l2305F286:
	0<32> = dwArg94
	word32 a0_139
	word32 a2_151
	word32 a5_152
	word32 s11_167
	word32 s10_657
	word32 a1_654
	word32 s6_655
	word32 s7_656
	ra = mbedtls_x509_crt_parse_der(ra, dwArg34, s7_109, a1, a2_91, a3_92, a4_102, a5, s5_107, s6_108, s7_109, s10_116, s11_117, mstatus, dwLoc4C, dwLoc48, s8, s6, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg74, dwArg78, dwArg98, dwArgB8, dwArgF4, out s0_143, out a0_139, out a1_654, out a2_151, out a5_152, out s3_132, out s5_107, out s6_655, out s7_656, out s8_160, out s9_118, out s10_657, out s11_167, out mstatus)
	s2_119 = a0_139
	word32 a4_659
	word32 a3_658
	s1_133 = mbedtls_pem_free(fp + -76<i32>, a2_151, a5_152, mstatus, dwArgF8, dwArg0138, out a1, out a3_658, out a4_659, out a5, out s4_129)
	branch a0_139 != 0<32> l2305F2D8
l2305F2D8:
	branch a0_139 != s11_167 l2305F2BE
l2305F2BE:
	branch s0_143 != 0<32> l2305F2C2
l2305F2C0:
	s0_143 = s2_119
l2305F2C2:
	s4_129 = s4_129 + 1<32>
l2305F2DC:
	s0_143 = s2_119
l2305F2A4:
	s8_160 = 1<32>
l2305F2CA:
	branch s8_160 != 0<32> l2305F304
l2305F304:
	s0_143 = s4_129
l2305F2CE:
	branch s0_143 != 0<32> l2305F246
l2305F2D0:
	s0_143 = 0xFDFFF880<32>
l2305F23A:
	word32 a0_222
	word32 s0_641
	word32 s7_646
	word32 a2_642
	word32 s5_644
	word32 s6_645
	word32 s3_643
	word32 s9_648
	word32 s8_647
	word32 s10_649
	word32 s11_650
	mbedtls_x509_crt_parse_der(ra, s0, a0, a1, a2, a3, a4, a5, s5_107, s6, a0, s10, s11, mstatus, dwLoc4C, dwLoc48, s8, s6, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg74, dwArg78, dwArg98, dwArgB8, dwArgF4, out s0_641, out a0_222, out a1, out a2_642, out a5, out s3_643, out s5_644, out s6_645, out s7_646, out s8_647, out s9_648, out s10_649, out s11_650, out mstatus)
	s0_143 = a0_222
l2305F246:
	0<32> = dwArg010C
	a0Out = s0_143
	a1Out = a1
	a3Out = s2
	a5Out = a5
	mstatusOut = mstatus
	return dwLoc08
mbedtls_x509_crt_parse_exit:


word32 mbedtls_x509_crt_parse_file(word32 ra, word32 a0, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg98, word32 dwArgB8, word32 dwArgD4, word32 dwArgD8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a5 mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_x509_crt_parse_file_entry:
l2305F308:
	word32 a0_21
	word32 a1_22
	word32 a4_25
	word32 s1_32
	word32 s10_33
	word32 s11_34
	word32 s2_35
	word32 s5_38
	word32 s6_39
	word32 s8_41
	word32 a2_175
	word32 s3_176
	word32 s4_177
	word32 s7_178
	word32 a3_148
	word32 a5_150
	word32 mstatus_153
	word32 ra_154 = mbedtls_pk_load_file(ra, a0, a3, s2, s3, s4, mstatus, dwLoc20, dwLoc1C, dwLoc18, dwLoc08, dwArg04, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s1_32, out a0_21, out a1_22, out a2_175, out a3_148, out a4_25, out a5_150, out s2_35, out s3_176, out s4_177, out s5_38, out s6_39, out s7_178, out s8_41, out s10_33, out s11_34, out mstatus_153)
	word32 s0_102 = a0_21
	branch a0_21 != 0<32> l2305F33A
l2305F320:
	word32 a0_55
	word32 a1_67
	word32 a5_69
	word32 a3_179
	ra_154 = mbedtls_x509_crt_parse(ra_154, dwArg64, s1_32, a1_22, dwArg44, a3_148, a4_25, a5_150, s2_35, s5_38, s6_39, s8_41, s10_33, s11_34, mstatus_153, dwLoc1C, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg14, dwArg18, dwArg38, dwArg54, dwArg58, dwArg74, dwArg78, dwArg98, dwArgD4, dwArgD8, dwArgEC, dwArg0118, out a0_55, out a1_67, out a3_179, out a5_69, out mstatus_153)
	word32 a1_180
	word32 s1_181
	word32 a0_182
	word32 a1_183
	word32 a2_184
	word32 a4_185
	word32 a6_186
	word32 s4_187
	word32 t3_188
	vPortFree(mbedtls_zeroize(a0_55, a1_67, out a1_180), dwArg24, a5_69, mstatus_153, dwArg0138, dwArg0178, out s0_102, out s1_181, out a0_182, out a1_183, out a2_184, out a3_148, out a4_185, out a5_150, out a6_186, out s4_187, out t3_188)
l2305F33A:
	a0Out = s0_102
	a3Out = a3_148
	a5Out = a5_150
	mstatusOut = mstatus_153
	return ra_154
mbedtls_x509_crt_parse_file_exit:


word32 net_would_block.isra.0(word32 a0, word32 a3, word32 mstatus, word32 dwArg34)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_net_recv
//      mbedtls_net_send
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] Stack +0034:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3
// Preserved: sp
net_would_block.isra.0_entry:
l2305F346:
	word32 a0_11
	word32 a3_48
	lwip_fcntl(a0, 3<32>, a3, mstatus, dwArg34, out a0_11, out a3_48)
	word32 a0_23 = a0_11 & 1<32>
	branch (a0_11 & 1<32>) == 0<32> l2305F364
l2305F356:
	a0_23 = CONVERT(Mem7[0x4201FD50<32>:int32] <u 0xFFFFFFF4<32>, bool, word32)
l2305F364:
	return a0_23
net_would_block.isra.0_exit:


void mbedtls_net_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
mbedtls_net_init_entry:
l2305F36A:
	Mem5[0xFFFFFFFF<32>:word32] = a0
	return
mbedtls_net_init_exit:


word32 mbedtls_net_connect(word32 ra, word32 s1, word32 a1, word32 a2, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0138, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s3Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 ra s10 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_net_connect_entry:
l2305F370:
	word32 a3_30
	word32 a5_498
	word32 a0_494
	word32 t1_493
	word32 a1_495
	word32 a2_496
	word32 a4_497
	word32 ra_33 = memset(ra, fp + -64<i32>, 0<32>, 32<i32>, out t1_493, out a0_494, out a1_495, out a2_496, out a3_30, out a4_497, out a5_498)
	branch a3_30 != 1<32> l2305F3A0
l2305F39E:
l2305F3A0:
	branch a3_30 == 1<32> l2305F3AC
l2305F3AA:
l2305F3AC:
	word32 s3_115
	word32 s1_209
	word32 s0_147
	word32 a4_109
	word32 a2_107
	word32 a1_106
	word32 a0_100
	word32 a3_104
	word32 ra_226 = lwip_getaddrinfo(ra_33, a1, a2, a1, a2, fp + -64<i32>, fp + -68<i32>, 1<32>, mstatus, dwArg38, dwArg78, dwArg88, dwArgB8, dwArgC8, dwArg0138, out s0_147, out a0_100, out a1_106, out a2_107, out a3_104, out a4_109)
	branch a0_100 == 0<32> l2305F3F2
l2305F3F2:
	s3_115 = 0x42020000<32>
l2305F3FE:
	branch s0_147 != 0<32> l2305F408
l2305F408:
	word32 s0_101 = Mem96[a0_100 + 4<i32>:word32]
	word32 s5_516
	word32 s2_114
	a0_100 = lwip_socket(ra_226, a1_106, a2_107, a3_104, mstatus, dwLoc2C, dwArg08, s1, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, out a1_106, out a2_107, out a3_104, out a4_109, out s2_114, out s3_115, out s5_516)
	Mem128[s2_114:word32] = a0_100
	branch a0_100 < 0<32> l2305F442
l2305F442:
l2305F41A:
	word32 a2_141
	word32 s4_151
	s0_147 = lwip_connect(Mem128[s2_114:int32], a1_106, mstatus, dwLoc2C, dwLoc18, dwArg28, dwArg68, out a0_100, out a1_106, out a2_141, out a3_104, out a4_109, out s2_114, out s3_115, out s4_151)
	branch a0_100 == 0<32> l2305F400
l2305F42A:
	branch Mem128[s3_115 + -688<i32>:int32] == s4_151 l2305F41A
l2305F432:
	word32 s5_521
	word32 s6_522
	word32 s2_519
	word32 s4_520
	word32 a5_518
	word32 s1_517
	s0_101 = lwip_close(ra_226, Mem128[s2_114:int32], a2_141, mstatus, dwLoc18, dwArg28, dwArg58, dwArg68, dwArg78, dwArgC8, out s1_517, out a0_100, out a1_106, out a2_107, out a3_104, out a4_109, out a5_518, out s2_519, out s3_115, out s4_520, out s5_521, out s6_522)
l2305F43E:
	s0_147 = Mem128[s0_101 + 28<i32>:word32]
l2305F400:
	s1_209 = lwip_freeaddrinfo(s0_147, a0_100, a3_104, a4_109, mstatus)
l2305F3BC:
	word32 a4_504
	word32 a5_505
	word32 a1_501
	word32 s7_511
	word32 s11_514
	word32 t4_515
	word32 s9_513
	word32 a0_500
	word32 s4_508
	word32 s6_510
	word32 s5_509
	word32 s2_507
	word32 a7_506
	word32 a3_503
	word32 s1_499
	word32 a2_502
	word32 s8_512
	ra_226 = printf(ra_226, 0x2308AC14<32>, Mem58[0x4201FD50<32>:int32], dwLoc58, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_499, out a0_500, out a1_501, out a2_502, out a3_503, out a4_504, out a5_505, out a7_506, out s2_507, out s3_115, out s4_508, out s5_509, out s6_510, out s7_511, out s8_512, out s9_513, out s10, out s11_514, out t4_515)
	s1_209 = -82<i32>
l2305F3E0:
	a0Out = s1_209
	a3Out = dwArg08
	s3Out = s3_115
	s10Out = s10
	return ra_226
mbedtls_net_connect_exit:


word32 mbedtls_net_set_block(word32 a0, word32 a3, word32 mstatus, word32 dwArg34, word32 dwArg44, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_connect
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] Stack +0034:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a3 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3
// Preserved: sp
mbedtls_net_set_block_entry:
l2305F448:
	word32 a0_15
	word32 a3_26
	lwip_fcntl(Mem7[a0:word32], 3<32>, a3, mstatus, dwArg34, out a0_15, out a3_26)
l2305F468_thunk_lwip_fcntl:
	word32 a0_32
	word32 a3_43
	word32 s0_40 = lwip_fcntl(a0_15, 4<32>, a3_26, mstatus, dwArg44, out a0_32, out a3_43)
	a0Out = a0_32
	a3Out = a3_43
	return s0_40
mbedtls_net_set_block_exit:


void mbedtls_net_recv(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArgAC, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_net_recv_timeout
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_net_recv_entry:
l2305F46C:
	word32 a0_10 = Mem7[a0:word32]
	branch a0_10 >= 0<32> l2305F49E
l2305F49E:
	word32 a0_18
	word32 a3_21
	word32 mstatus_26
	word32 s6_258
	word32 s0_257
	word32 ra_27 = lwip_read(ra, s1, a0_10, a1, a2, s2, s3, s4, mstatus, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg48, dwArg58, dwArg78, dwArg88, dwArg0128, out s0_257, out a0_18, out a3_21, out s6_258, out mstatus_26)
	branch a0_18 >= 0<32> l2305F496
l2305F4A6:
	branch net_would_block.isra.0(a0_18, a3_21, mstatus_26, dwArg24) != 0<32> l2305F508
l2305F4AE:
	word32 a3_60 = Mem7[0x4201FD50<32>:int32]
	branch a3_60 == 32<i32> l2305F4C6
l2305F4BE:
	branch a3_60 != 104<i32> l2305F4E4
l2305F4E4:
	branch a3_60 == 4<32> l2305F508
l2305F508:
l2305F4EA:
	word32 s1_297
	word32 a0_298
	word32 a1_299
	word32 a2_300
	word32 a3_301
	word32 a4_302
	word32 a5_303
	word32 a7_304
	word32 s2_305
	word32 s3_306
	word32 s4_307
	word32 s5_308
	word32 s6_309
	word32 s7_310
	word32 s8_311
	word32 s9_312
	word32 s10_313
	word32 s11_314
	word32 t4_315
	printf(ra_27, 0x2308AC74<32>, a3_60, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_297, out a0_298, out a1_299, out a2_300, out a3_301, out a4_302, out a5_303, out a7_304, out s2_305, out s3_306, out s4_307, out s5_308, out s6_309, out s7_310, out s8_311, out s9_312, out s10_313, out s11_314, out t4_315)
l2305F4C6:
	word32 a5_284
	word32 a7_285
	word32 s2_286
	word32 a4_283
	word32 a3_282
	word32 a2_281
	word32 a1_280
	word32 a0_279
	word32 s1_278
	word32 s3_287
	word32 s4_288
	word32 s5_289
	word32 s6_290
	word32 s7_291
	word32 s8_292
	word32 s9_293
	word32 s10_294
	word32 s11_295
	word32 t4_296
	printf(ra_27, 0x2308AC54<32>, a3_60, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_278, out a0_279, out a1_280, out a2_281, out a3_282, out a4_283, out a5_284, out a7_285, out s2_286, out s3_287, out s4_288, out s5_289, out s6_290, out s7_291, out s8_292, out s9_293, out s10_294, out s11_295, out t4_296)
l2305F47A:
	word32 t4_277
	word32 s11_276
	word32 s10_275
	word32 s9_274
	word32 s8_273
	word32 s7_272
	word32 s6_271
	word32 s5_270
	word32 s4_269
	word32 s3_268
	word32 s2_267
	word32 a7_266
	word32 a5_265
	word32 a4_264
	word32 a3_263
	word32 a2_262
	word32 a1_261
	word32 a0_260
	word32 s1_259
	printf(ra, 0x2308AC38<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_259, out a0_260, out a1_261, out a2_262, out a3_263, out a4_264, out a5_265, out a7_266, out s2_267, out s3_268, out s4_269, out s5_270, out s6_271, out s7_272, out s8_273, out s9_274, out s10_275, out s11_276, out t4_277)
l2305F496:
	return
mbedtls_net_recv_exit:


void mbedtls_net_send(word32 ra, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg98, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_net_send_entry:
l2305F510:
	branch a5 < 0<32> l2305F590
l2305F590:
	return
l2305F516:
	word32 a3_18
	word32 s8_259
	word32 a0_15 = lwip_write(a5, mstatus, dwArg18, dwArg58, dwArg98, out a3_18, out s8_259)
	branch a0_15 >= 0<32> l2305F564
l2305F528:
	branch net_would_block.isra.0(a0_15, a3_18, mstatus, dwArg24) != 0<32> l2305F596
l2305F530:
	word32 a3_53 = Mem13[0x4201FD50<32>:int32]
	branch a3_53 == 32<i32> l2305F548
l2305F540:
	branch a3_53 != 104<i32> l2305F56C
l2305F56C:
	branch a3_53 == 4<32> l2305F596
l2305F596:
l2305F572:
	word32 s5_290
	word32 s4_289
	word32 s3_288
	word32 s2_287
	word32 a7_286
	word32 a5_285
	word32 a4_284
	word32 a3_283
	word32 a2_282
	word32 a1_281
	word32 a0_280
	word32 s1_279
	word32 s6_291
	word32 s7_292
	word32 s8_293
	word32 s9_294
	word32 s10_295
	word32 s11_296
	word32 t4_297
	printf(ra, 0x2308AC98<32>, a3_53, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_279, out a0_280, out a1_281, out a2_282, out a3_283, out a4_284, out a5_285, out a7_286, out s2_287, out s3_288, out s4_289, out s5_290, out s6_291, out s7_292, out s8_293, out s9_294, out s10_295, out s11_296, out t4_297)
l2305F548:
	word32 t4_278
	word32 s11_277
	word32 s10_276
	word32 s9_275
	word32 s8_274
	word32 s7_273
	word32 s4_270
	word32 s6_272
	word32 s5_271
	word32 s3_269
	word32 s2_268
	word32 a4_265
	word32 a7_267
	word32 a5_266
	word32 a1_262
	word32 a3_264
	word32 a2_263
	word32 a0_261
	word32 s1_260
	printf(ra, 0x2308AC54<32>, a3_53, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_260, out a0_261, out a1_262, out a2_263, out a3_264, out a4_265, out a5_266, out a7_267, out s2_268, out s3_269, out s4_270, out s5_271, out s6_272, out s7_273, out s8_274, out s9_275, out s10_276, out s11_277, out t4_278)
l2305F564:
	return
mbedtls_net_send_exit:


void mbedtls_net_recv_timeout(word32 a3, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg48, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a5:[0..31] mstatus:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_net_recv_timeout_entry:
l2305F59E:
	branch a5 < 0<32> l2305F644
l2305F644:
	return
l2305F5A4:
	word32 a4_16 = 0<32>
l2305F5B2:
	Mem22[fp + -40<i32> + a4_16:byte] = 0<8>
	a4_16 = a4_16 + 1<32>
	branch a4_16 != 8<32> l2305F5B2
l2305F5C2:
	word32 a4_29 = (a5 >>u 5<u32> << 2<i32>) + (fp + -16<i32>)
	Mem34[a4_29 + 4072<i32>:word32] = 1<32> << a5 | Mem22[a4_29 + -24<i32>:int32]
	branch a3 != 0<32> l2305F5FC
l2305F5FA:
l2305F5FC:
	word32 a0_68
	word32 a3_71
	word32 s0_77
	word32 s1_78
	word32 s2_81
	word32 s3_82
	word32 s4_83
	word32 a5_296
	word32 a2_294
	word32 a4_295
	word32 ra_76 = lwip_select(a5 + 1<32>, fp + -40<i32>, 0<32>, 0<32>, mstatus, dwLoc2C, dwArg48, 0<32>, dwArg88, dwArg98, dwArgA8, dwArgD4, dwArgD8, dwArgE8, out s0_77, out s1_78, out a0_68, out a2_294, out a3_71, out a4_295, out a5_296, out s2_81, out s3_82, out s4_83)
	branch a0_68 == 0<32> l2305F64A
l2305F64A:
l2305F610:
	branch a0_68 >= 0<32> l2305F62E
l2305F62E:
	mbedtls_net_recv(ra_76, s1_78, s0_77, s1_78, s2_81, a3_71, s2_81, s3_82, s4_83, mstatus, dwLoc2C, a3 >>u 1000<i32>, dwLoc18, dwLoc0C, dwLoc08, dwArg18, dwArg28, dwArg30, dwArg34, dwArg48, 0<32>, dwArg7C, dwArgF8)
l2305F614:
	branch Mem44[0x4201FD50<32>:int32] != 4<32> l2305F638
l2305F626:
l2305F638:
	0<32> = dwArg0128
	return
mbedtls_net_recv_timeout_exit:


word32 mbedtls_net_free(word32 ra, word32 a0, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArg0118, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_destroy
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31]
// LiveOut: a1 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_net_free_entry:
l2305F652:
	word32 a0_12 = Mem9[a0:word32]
	branch a0_12 == 0xFFFFFFFF<32> l2305F672
l2305F664:
	word32 a2_22
	word32 s1_49
	word32 a0_125
	word32 a2_126
	word32 a3_127
	word32 a4_128
	word32 s2_129
	word32 s3_130
	word32 s4_131
	word32 s5_132
	word32 s6_133
	Mem63[s1_49:word32] = lwip_close(ra, lwip_shutdown(a0_12, 2<32>, mstatus, dwArg48, dwArg88, dwArgC8, out a2_22), a2_22, mstatus, dwArg38, dwArg78, dwArgA8, dwArgB8, dwArgC8, dwArg0118, out s1_49, out a0_125, out a1, out a2_126, out a3_127, out a4_128, out a5, out s2_129, out s3_130, out s4_131, out s5_132, out s6_133)
l2305F672:
	a5Out = a5
	return a1
mbedtls_net_free_exit:


word32 mycalloc(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg0118, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_load_file
//      rsa_alloc_wrap
//      eckey_alloc_wrap
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_ssl_conf_own_cert
//      mbedtls_ssl_set_hostname
//      mbedtls_ssl_setup
//      mbedtls_ssl_write_record
//      mbedtls_ssl_prepare_handshake_record
//      mbedtls_ssl_parse_certificate
//      mbedtls_x509_crt_parse_der
//      mbedtls_asn1_get_sequence_of
//      mbedtls_mpi_grow
//      mbedtls_mpi_shrink
//      gcm_ctx_alloc
//      aes_ctx_alloc
//      ecp_normalize_jac_many
//      mbedtls_ecp_mul
//      mbedtls_md_setup
//      md5_ctx_alloc
//      sha1_ctx_alloc
//      sha224_ctx_alloc
//      mbedtls_pem_read_buffer
//      mbedtls_x509_get_name
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s8
// Trashed: a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
mycalloc_entry:
l2305F67C:
	word32 a2_5 = a0 + a1
	word32 a0_18
	word32 s1_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 a1_69
	word32 a2_70
	word32 a3_71
	word32 a4_72
	word32 a5_73
	word32 a6_74
	word32 s8_75
	pvPortMalloc(ra, s1, a2_5, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_26, out a0_18, out a1_69, out a2_70, out a3_71, out a4_72, out a5_73, out a6_74, out s2_27, out s3_28, out s4_29, out s8_75)
	word32 a1_37
	word32 a2_38
	word32 a3_39
	word32 a4_40
	word32 a5_41
	word32 t1_76
	word32 a0_77
	word32 ra_42 = memset(ra, a0_18, 0<32>, a2_5, out t1_76, out a0_77, out a1_37, out a2_38, out a3_39, out a4_40, out a5_41)
	s0Out = a0_18
	s1Out = s1_26
	a1Out = a1_37
	a2Out = a2_38
	a3Out = a3_39
	a4Out = a4_40
	a5Out = a5_41
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s8Out = dwLoc1C
	return ra_42
mycalloc_exit:


word32 aes_gen_tables(word32 dwArg0148, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_aes_setkey_enc
// MayUse:  Stack +0148:[0..31]
// LiveOut: a0 a1 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s6 sp
aes_gen_tables_entry:
l2305F6A2:
	word32 a2_19 = fp + -2080<i32>
	word32 a5_20 = 1<32>
	word32 a3_21 = 0<32>
l2305F6C0:
	Mem31[(a5_20 << 2<u32>) + (fp + 0xFFEFE0<32>) + 3072<i32>:word32] = a3_21
	Mem33[a5_20:word32] = a2_19
	word32 a1_34 = a5_20 & 128<i32>
	word32 a4_35 = a5_20 << 1<u32>
	branch a1_34 == 0<32> l2305F6E0
l2305F6DE:
	a1_34 = 0x1B<32>
l2305F6E0:
	a3_21 = a3_21 + 1<32>
	a5_20 = (a5_20 ^ a4_35 ^ a1_34) & 255<i32>
	a2_19 = a2_19 + 4<32>
	branch a3_21 != 256<i32> l2305F6C0
l2305F6F0:
	word32 a4_50 = 0x42017D18<32>
	word32 a5_52 = 1<32>
l2305F6FE:
	Mem55[a5_52:word32] = a4_50
	word32 a3_56 = a5_52 << 1<u32>
	word32 a5_57 = a5_52 & 128<i32>
	branch a5_57 == 0<32> l2305F70C
l2305F70A:
	a5_57 = 0x1B<32>
l2305F70C:
	a4_50 = a4_50 + 4<32>
	a5_52 = (a5_57 ^ a3_56) & 255<i32>
	branch a4_50 != 0x42017D40<32> l2305F6FE
l2305F718:
	Mem70[0x42017C18<32>:byte] = 0x63<8>
	Mem72[0x42017DA3<32>:byte] = 0<8>
	word32 t1_76 = fp + -1056<i32> + 4<i32>
	word32 a7_117 = 1<32>
	word32 a1_148 = 0x42016C18<32>
	word32 a2_187 = 0x42017D40<32>
l2305F746:
	word32 t5_93 = Mem83[(255<i32> - Mem83[t1_76 + 0<i32>:int32] << 2<i32>) + (fp + 0xFFEFE0<32>) + -2048<i32>:int32]
	word32 a5_97 = t5_93 << 1<u32> | t5_93 >> 7<u32>
	word32 a0_101 = (a5_97 & 255<i32>) << 1<u32> | (a5_97 & 255<i32>) >> 7<u32>
	word32 a3_105 = (a0_101 & 255<i32>) << 1<u32> | (a0_101 & 255<i32>) >> 7<u32>
	word32 a5_114 = ((a3_105 & 255<i32>) >> 7<u32> | (a3_105 & 255<i32>) << 1<u32>) & 255<i32> ^ t5_93 ^ a5_97 & 255<i32> ^ a0_101 & 255<i32> ^ a3_105 & 255<i32>
	Mem119[a7_117 + 0x42016C18<32>:byte] = SLICE(a5_114 ^ 99<i32>, byte, 0)
	Mem122[(a5_114 ^ 99<i32>) + 0x42017D40<32>:byte] = SLICE(a7_117, byte, 0)
	t1_76 = t1_76 + 4<32>
	a7_117 = a7_117 + 1<32>
	branch a7_117 != 256<i32> l2305F746
l2305F7BE:
	word32 a3_137 = 0<32>
l2305F818:
	word32 s5_189
	word32 s4_190
	word32 a4_150 = CONVERT(Mem149[a1_148:byte], byte, word32)
	word32 s4_156 = a4_150 << 1<u32> ^ CONVERT(SLICE(a4_150, byte, 0), byte, int32) >> 31<i32> & 0x1B<32>
	word32 a5_164 = a4_150 << 8<u32> ^ a4_150 << 0x10<u32> ^ s4_156 & 255<i32> ^ (a4_150 ^ s4_156 & 255<i32>) << 24<i32>
	Mem169[a5_164:word32] = a3_137 + 0x42016D18<32>
	Mem174[a3_137 + 0x42017118<32>:word32] = a5_164 << 8<u32> | a5_164 >>u 0x18<u32>
	Mem180[a3_137 + 0x42017518<32>:word32] = a5_164 << 0x10<u32> | a5_164 >>u 0x10<u32>
	Mem186[a3_137 + 0x42017918<32>:word32] = a5_164 << 24<i32> | a5_164 >>u 8<u32>
	word32 a5_188 = CONVERT(Mem186[a2_187:byte], byte, word32)
	branch a5_188 == 0<32> l2305F990
l2305F990:
	s5_189 = 0<32>
	s4_190 = 0<32>
l2305F890:
	word32 a4_197 = Mem186[(a5_188 << 2<u32>) + (fp + 0xFFEFE0<32>) + -1024<i32>:int32]
	s5_189 = Mem186[((dwLoc03E8 + a4_197 | 255<i32>) << 2<i32>) + (fp + 0xFFEFE0<32>) + -2048<i32>:int32]
	s4_190 = Mem186[((a4_197 + dwLoc03FC | 255<i32>) << 2<i32>) + (fp + 0xFFEFE0<32>) + -2048<i32>:int32] << 8<i32>
l2305F8CE:
	word32 s4_218 = s4_190 ^ s5_189
	word32 a4_219 = 0<32>
	branch a5_188 == 0<32> l2305F8FE
l2305F8D6:
	a4_219 = Mem186[((Mem186[(a5_188 << 2<u32>) + (fp + 0xFFEFE0<32>) + -1024<i32>:int32] + dwLoc03EC | 255<i32>) << 2<i32>) + (fp + 0xFFEFE0<32>) + -2048<i32>:int32] << 16<i32>
l2305F8FE:
	word32 s4_242 = s4_218 ^ a4_219
	word32 a4_243 = 0<32>
	branch a5_188 == 0<32> l2305F92E
l2305F906:
	a4_243 = Mem186[((Mem186[(a5_188 << 2<i32>) + (fp + 0xFFEFE0<32>) + -1024<i32>:int32] + dwLoc03F4 | 255<i32>) << 2<i32>) + (fp + 0xFFEFE0<32>) + -2048<i32>:int32] << 0x18<u32>
l2305F92E:
	word32 a5_267 = s4_242 ^ a4_243
	Mem277[a5_267:word32] = a3_137 + 0x42017E40<32>
	Mem285[a3_137 + 0x42018240<32>:word32] = a5_267 << 8<u32> | a5_267 >>u 0x18<u32>
	Mem294[a3_137 + 0x42018640<32>:word32] = a5_267 << 0x10<u32> | a5_267 >>u 0x10<u32>
	Mem303[a3_137 + 0x42018A40<32>:word32] = a5_267 << 24<i32> | a5_267 >>u 8<u32>
	a3_137 = a3_137 + 4<32>
	a1_148 = a1_148 + 1<32>
	a2_187 = a2_187 + 1<32>
	branch a3_137 != 1024<i32> l2305F818
l2305F97A:
	0<32> = dwArg0148
	a0Out = 255<i32>
	a1Out = a1_148
	a3Out = a3_137
	a4Out = a5_267 >>u 8<u32>
	return dwLoc03FC
aes_gen_tables_exit:


word32 mbedtls_aes_init(word32 ra, word32 a0, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      block_cipher_df
//      mbedtls_ctr_drbg_seed
//      mbedtls_aes_setkey_dec
//      aes_ctx_alloc
//      pem_aes_decrypt
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a1 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_aes_init_entry:
l2305F996:
l2305F99C_thunk_memset:
	word32 a1_8
	word32 a4_11
	word32 a5_12
	word32 t1_19
	word32 a0_20
	word32 a2_21
	word32 a3_22
	word32 ra_13 = memset(ra, a0, 0<32>, 280<i32>, out t1_19, out a0_20, out a1_8, out a2_21, out a3_22, out a4_11, out a5_12)
	a1Out = a1_8
	a4Out = a4_11
	a5Out = a5_12
	return ra_13
mbedtls_aes_init_exit:


word32 mbedtls_aes_free(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      block_cipher_df
//      mbedtls_ctr_drbg_free
//      mbedtls_aes_setkey_dec
//      aes_ctx_free
//      pem_aes_decrypt
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_aes_free_entry:
l2305F9A0:
	a0_5 = a0
	branch a0 != 0<32> l2305F9AE
l2305F9AE:
	word32 a0_5
	branch a0_5 != a0 + 280<i32> l2305F9A8
l2305F9A8:
	Mem7[a0_5:byte] = 0<8>
	a0_5 = a0_5 + 1<32>
l2305F9B2:
l2305F9A6:
	return a0 + 280<i32>
mbedtls_aes_free_exit:


word32 mbedtls_aes_setkey_enc(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 dwArg44, word32 dwArg0128, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      block_cipher_df
//      ctr_drbg_update_internal
//      mbedtls_ctr_drbg_seed
//      mbedtls_aes_setkey_dec
//      aes_setkey_enc_wrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] Stack +0044:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 s8 t3
// Preserved: a7 s2 s3 s5 sp t0 t1 t2 t4 t5 t6 tp
mbedtls_aes_setkey_enc_entry:
l2305F9B4:
	word32 s0_14 = a0
	branch a5 != 0<32> l2305F9DA
l2305F9CA:
	Mem45[1<32>:word32] = aes_gen_tables(dwArg0128, out a0, out a1, out a3, out a4)
	s0_14 = dwArg44
l2305F9DA:
	word32 a5_48
	branch a2 == 192<i32> l2305FAA8
l2305FAA8:
	a5_48 = 0xC<32>
l2305F9E2:
	branch a2 == 256<i32> l2305FAAC
l2305FAAC:
	a5_48 = 0xE<32>
l2305F9EA:
	a0 = 0xFFFFFFE0<32>
	branch a2 != 128<i32> l2305FA9E
l2305F9F4:
	a5_48 = 0xA<32>
l2305F9F6:
	Mem59[a5_48:word32] = s0_14
	word32 a5_61 = s0_14 + 8<i32>
	Mem62[a5_61 + 4<i32>:word32] = s0_14
	word32 a3_63 = a5_61
	word32 a2_66 = (a2 >>u 5<i32> << 2<i32>) + a1
l2305FA06:
	branch a2_66 != a1 l2305FAB0
l2305FAB0:
	a1 = a1 + 4<32>
	word32 a0_80 = CONVERT(Mem69[a1 + -1<i32>:byte], byte, word32)
	a3_63 = a3_63 + 4<32>
	a4 = CONVERT(Mem69[a1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem69[a1 + 2<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem69[a1:byte], byte, word32) | a0_80 << 24<i32>
	Mem83[a3_63 + 4092<i32>:word32] = a4
	a0 = a0_80 << 24<i32>
l2305FA0A:
	s0_14 = Mem69[a4:word32]
	a3 = 0xC<32>
	branch a4 == 0xC<32> l2305FAD6
l2305FAD6:
	a1 = 0x42017D18<32>
	s0_14 = s0_14 + 200<i32>
l2305FAEA:
	word32 a5_101 = Mem96[a0:word32]
	word32 a4_126 = CONVERT(Mem96[0x42016C18<32>:byte], byte, word32) ^ (a0 ^ Mem96[a1:int32]) ^ CONVERT(Mem96[0x42016C18<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem96[0x42016C24<32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem96[0x42016C18<32>:byte], byte, word32) << 8<i32>
	word32 a0_127 = Mem96[a5_101 + 4<32>:int32]
	Mem128[a4_126:word32] = a5_101 + 0x18<32>
	word32 a4_129 = a4_126 ^ a0_127
	word32 a0_130 = Mem128[a5_101 + 8<32>:int32]
	Mem131[a4_129 + 4<i32>:word32] = a5_101 + 0x18<32>
	word32 a4_132 = a4_129 ^ a0_130
	word32 a0_133 = Mem131[a5_101 + 0xC<32>:int32]
	Mem134[a4_132 + 8<i32>:word32] = a5_101 + 0x18<32>
	word32 a4_135 = a4_132 ^ a0_133
	a0 = Mem134[a5_101 + 0x10<32>:int32]
	Mem137[a4_135 + 12<i32>:word32] = a5_101 + 0x18<32>
	word32 a4_138 = a4_135 ^ a0
	Mem139[a4_138 + 16<i32>:word32] = a5_101 + 0x18<32>
	Mem141[(a4_138 ^ 0xC<32>) + 20<i32>:word32] = a5_101 + 0x18<32>
	a1 = a1 + 4<32>
	a4 = a4_138 ^ 0xC<32>
	branch a5_101 + 0x18<32> != s0_14 + 200<i32> l2305FAEA
l2305FB62:
l2305FA12:
	a3 = 0xE<32>
	branch a4 == 0xE<32> l2305FB64
l2305FB64:
	word32 a0_146 = 0x42017D18<32>
	s0_14 = s0_14 + 232<i32>
l2305FB78:
	word32 a5_155 = Mem150[a3:word32]
	word32 a6_162 = Mem150[a5_155 + 16<i32>:int32]
	word32 a4_181 = CONVERT(Mem150[(a1 >>u 8<u32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) ^ (a3 ^ Mem150[a0_146:int32]) ^ CONVERT(Mem150[(a1 >>u 0x18<u32>) + 0x42016C18<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem150[(a1 & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem150[(a1 >>u 0x10<u32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 8<i32>
	word32 a3_182 = Mem150[a5_155 + 4<i32>:int32]
	Mem183[a4_181:word32] = a5_155 + 32<i32>
	word32 a4_184 = a4_181 ^ a3_182
	word32 a3_185 = Mem183[a5_155 + 8<i32>:int32]
	Mem186[a4_184 + 4<i32>:word32] = a5_155 + 32<i32>
	word32 a4_187 = a4_184 ^ a3_185
	word32 a3_188 = Mem186[a5_155 + 12<i32>:int32]
	Mem189[a4_187 + 8<i32>:word32] = a5_155 + 32<i32>
	word32 a4_190 = a4_187 ^ a3_188
	Mem192[a4_190 + 12<i32>:word32] = a5_155 + 32<i32>
	word32 a4_212 = CONVERT(Mem192[(a4_190 >>u 16<i32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 16<i32> ^ (((CONVERT(Mem192[(a4_190 & 255<i32>) + 0x42016C18<32>:byte], byte, word32) ^ a6_162) ^ CONVERT(Mem192[(a4_190 >>u 0x18<u32>) + 0x42016C18<32>:byte], byte, word32) << 24<i32>) ^ CONVERT(Mem192[(a4_190 >>u 8<u32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 8<i32>)
	word32 a3_213 = Mem192[a5_155 + 20<i32>:int32]
	Mem214[a4_212 + 16<i32>:word32] = a5_155 + 32<i32>
	word32 a4_215 = a4_212 ^ a3_213
	a3 = Mem214[a5_155 + 24<i32>:int32]
	Mem217[a4_215 + 20<i32>:word32] = a5_155 + 32<i32>
	word32 a4_218 = a4_215 ^ a3
	Mem219[a4_218 + 24<i32>:word32] = a5_155 + 32<i32>
	a4 = a4_218 ^ a1
	Mem221[a4 + 28<i32>:word32] = a5_155 + 32<i32>
	a0_146 = a0_146 + 4<32>
	branch a5_155 + 32<i32> != s0_14 + 232<i32> l2305FB78
l2305FC42:
l2305FA18:
	a3 = 0xA<32>
	a0 = 0<32>
	branch a4 != 0xA<32> l2305FA9E
l2305FA20:
	a1 = 0x42017D18<32>
	s0_14 = s0_14 + 168<i32>
l2305FA34:
	word32 a5_236 = Mem231[a0:word32]
	word32 a4_261 = CONVERT(Mem231[0x42016C18<32>:byte], byte, word32) ^ (a0 ^ Mem231[a1:int32]) ^ CONVERT(Mem231[0x42016C18<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem231[0x42016C22<32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem231[0x42016C18<32>:byte], byte, word32) << 8<i32>
	word32 a0_262 = Mem231[a5_236 + 4<32>:int32]
	Mem263[a4_261:word32] = a5_236 + 0x10<32>
	word32 a4_264 = a4_261 ^ a0_262
	a0 = Mem263[a5_236 + 8<32>:int32]
	Mem266[a4_264 + 4<i32>:word32] = a5_236 + 0x10<32>
	word32 a4_267 = a4_264 ^ a0
	Mem268[a4_267 + 8<i32>:word32] = a5_236 + 0x10<32>
	Mem270[(a4_267 ^ 0xA<32>) + 12<i32>:word32] = a5_236 + 0x10<32>
	a1 = a1 + 4<32>
	a4 = a4_267 ^ 0xA<32>
	branch a5_236 + 0x10<32> != s0_14 + 168<i32> l2305FA34
l2305FA9C:
	a0 = 0<32>
l2305FA9E:
	a0Out = a0
	a1Out = a1
	a3Out = a3
	a4Out = a4
	return s0_14
mbedtls_aes_setkey_enc_exit:


void mbedtls_aes_setkey_dec(word32 ra, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aes_setkey_dec_wrap
//      pem_aes_decrypt
// MayUse:  a1:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: ra s0 s1 sp
mbedtls_aes_setkey_dec_entry:
l2305FC44:
	word32 a1_18
	word32 a4_21
	word32 a5_197
	mbedtls_aes_init(ra, fp + -296<i32>, out a1_18, out a4_21, out a5_197)
	Mem29[a1 + 12<i32>:word32] = a1
	word32 a0_31
	word32 a1_32
	word32 a4_199
	word32 a3_198
	word32 s0_38 = mbedtls_aes_setkey_enc(fp + -296<i32>, a1_18, dwLocDC, a4_21, a1 + 8<i32>, dwLocFC, dwLoc18, out a0_31, out a1_32, out a3_198, out a4_199)
	branch a0_31 != 0<32> l2305FCD4
l2305FC72:
	Mem48[a1_32:word32] = s0_38
	Mem52[(a1_32 << 4<u32>) + 8<i32>:word32] = s0_38
	Mem56[(a1_32 << 4<u32>) + 12<i32>:word32] = s0_38
	Mem60[(a1_32 << 4<u32>) + 16<i32>:word32] = s0_38
	word32 a5_119 = Mem60[(a1_32 << 4<u32>) + 12<i32>:word32] + 0xFFFFFFF0<32>
	Mem64[(a1_32 << 4<u32>) + 20<i32>:word32] = s0_38
	word32 a4_113 = a1_32 << 4<u32>
	word32 a2_116 = s0_38 + 24<i32>
	word32 a1_118 = a1_32 + 0xFFFFFFFF<32>
l2305FCC0:
	branch a1_118 > 0<32> l2305FCEC
l2305FCEC:
	word32 a6_71 = 0<32>
l2305FCEE:
	word32 a4_76 = Mem75[a5_119 + a6_71:word32]
	a4_113 = Mem75[(CONVERT(Mem75[(a4_76 >>u 16<i32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 2<i32>) + 0x42018640<32>:word32] ^ ((Mem75[(CONVERT(Mem75[(a4_76 & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 2<i32>) + 0x42017E40<32>:word32] ^ Mem75[(CONVERT(Mem75[(a4_76 >>u 0x18<u32>) + 0x42016C18<32>:byte], byte, word32) << 2<i32>) + 0x42018A40<32>:int32]) ^ Mem75[(CONVERT(Mem75[(a4_76 >>u 8<u32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 2<i32>) + 0x42018240<32>:int32])
	Mem114[a2_116 + a6_71:word32] = a4_113
	a6_71 = a6_71 + 4<32>
	branch a6_71 != 0x10<32> l2305FCEE
l2305FD56:
	a2_116 = a2_116 + 0x10<32>
	a1_118 = a1_118 + 0xFFFFFFFF<32>
	a5_119 = a5_119 + 0xFFFFFFF0<32>
l2305FCC4:
	Mem124[a4_113:word32] = a2_116
	Mem126[a4_113 + 4<i32>:word32] = a2_116
	word32 a5_127 = Mem126[a4_113 + 8<i32>:word32]
	Mem128[a4_113 + 8<i32>:word32] = a2_116
	Mem130[Mem128[a5_127 + 12<i32>:word32] + 12<i32>:word32] = a2_116
l2305FCD4:
	mbedtls_aes_free(fp + -296<i32>)
	return
mbedtls_aes_setkey_dec_exit:


word32 mbedtls_aes_encrypt(word32 a1, word32 a2, word32 a4, word32 dwArg3C, word32 dwArg0148, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_aes_crypt_ecb
//      aes_crypt_ctr_wrap
//      aes_crypt_cfb128_wrap
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] Stack +003C:[0..31] Stack +0148:[0..31]
// LiveOut: a3 a4 a5 a6 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_aes_encrypt_entry:
l2305FD5E:
	word32 a3_39 = CONVERT(Mem27[a1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1:byte], byte, word32) | CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32) << 16<i32>
	word32 a3_58 = CONVERT(Mem27[a1 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 4<i32>:byte], byte, word32))
	word32 a3_71 = CONVERT(Mem27[a1 + 10<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 9<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 8<i32>:byte], byte, word32))
	word32 t6_107 = a4 + 16<i32>
	word32 a5_233 = (CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32) << 24<i32> | a3_39) ^ a3_39
	word32 s10_103 = (CONVERT(Mem27[a1 + 7<i32>:byte], byte, word32) << 24<i32> | a3_58) ^ a3_58
	word32 s9_118 = (CONVERT(Mem27[a1 + 11<i32>:byte], byte, word32) << 24<i32> | a3_71) ^ a3_71
	word32 s8_276 = (CONVERT(Mem27[a1 + 15<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 14<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 12<i32>:byte], byte, word32)))) ^ Mem27[Mem27[a3_71 + 8<i32>:word32] + 12<i32>:word32]
	word32 s7_213 = (Mem27[Mem27[a4 + 4<i32>:word32]:int32] >> 1<u32>) + 0xFFFFFFFF<32>
l2305FE40:
	word32 a1_129 = a1 ^ Mem27[((s8_276 >>u 0x18<u32>) << 2<i32>) + 0x42017918<32>:word32] ^ Mem27[t6_107:int32] ^ Mem27[(s10_103 >>u 6<u32> & 1020<i32>) + 0x42017118<32>:word32] ^ Mem27[(s9_118 >>u 0xE<u32> & 1020<i32>) + 0x42017518<32>:word32]
	word32 s11_138 = Mem27[t6_107 + 16<i32>:int32]
	word32 a3_153 = Mem27[((s10_103 & 255<i32>) << 2<i32>) + 0x42016D18<32>:word32] ^ Mem27[((a5_233 >>u 0x18<u32>) << 2<i32>) + 0x42017918<32>:word32] ^ Mem27[t6_107 + 4<i32>:int32] ^ Mem27[(s9_118 >>u 6<u32> & 1020<i32>) + 0x42017118<32>:word32] ^ Mem27[(s8_276 >>u 0xE<u32> & 1020<i32>) + 0x42017518<32>:word32]
	word32 a0_178 = Mem27[((s9_118 & 255<i32>) << 2<i32>) + 0x42016D18<32>:word32] ^ Mem27[((s10_103 >>u 0x18<u32>) << 2<i32>) + 0x42017918<32>:word32] ^ Mem27[t6_107 + 8<i32>:int32] ^ Mem27[(s8_276 >>u 6<u32> & 1020<i32>) + 0x42017118<32>:word32] ^ Mem27[(a5_233 >>u 0xE<u32> & 1020<i32>) + 0x42017518<32>:word32]
	word32 a4_191 = Mem27[((s8_276 & 255<i32>) << 2<i32>) + 0x42016D18<32>:int32] ^ Mem27[((s9_118 >>u 0x18<u32>) << 2<i32>) + 0x42017918<32>:int32] ^ Mem27[t6_107 + 12<i32>:int32] ^ Mem27[(a5_233 >>u 6<i32> & 1020<i32>) + 0x42017118<32>:word32] ^ Mem27[(s10_103 >>u 0xE<u32> & 1020<i32>) + 0x42017518<32>:int32]
	word32 s10_202 = Mem27[t6_107 + 20<i32>:int32]
	word32 s9_205 = Mem27[t6_107 + 24<i32>:int32]
	word32 s8_208 = Mem27[t6_107 + 28<i32>:int32]
	branch s7_213 > 0<32> l230600E2
l230600E2:
	word32 a4_254 = Mem27[((a4_191 & 255<i32>) << 2<i32>) + 0x42016D18<32>:word32] ^ Mem27[((a0_178 >>u 24<i32>) << 2<i32>) + 0x42017918<32>:word32]
	a5_233 = Mem27[((a1_129 & 255<i32>) << 2<i32>) + 0x42016D18<32>:int32] ^ Mem27[((a4_191 >>u 0x18<u32>) << 2<i32>) + 0x42017918<32>:word32] ^ s11_138 ^ Mem27[((a3_153 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x42017118<32>:int32] ^ Mem27[((a0_178 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x42017518<32>:int32]
	s10_103 = Mem27[((a3_153 & 255<i32>) << 2<i32>) + 0x42016D18<32>:int32] ^ Mem27[((a1_129 >>u 0x18<u32>) << 2<i32>) + 0x42017918<32>:int32] ^ s10_202 ^ Mem27[((a0_178 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x42017118<32>:int32] ^ Mem27[((a4_191 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x42017518<32>:int32]
	a1 = Mem27[a4_254:word32]
	s9_118 = Mem27[((a0_178 & 255<i32>) << 2<i32>) + 0x42016D18<32>:int32] ^ Mem27[((a3_153 >>u 0x18<u32>) << 2<i32>) + 0x42017918<32>:int32] ^ s9_205 ^ Mem27[((a4_191 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x42017118<32>:int32] ^ Mem27[((a1_129 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x42017518<32>:int32]
	t6_107 = t6_107 + 32<i32>
	s8_276 = a4_254 ^ s8_208 ^ a4_254 ^ a4_254
	s7_213 = s7_213 + 0xFFFFFFFF<32>
l2305FF96:
	word32 s6_280 = (a1_129 & 255<i32>) + 0x42016C18<32>
	word32 s5_294 = (a3_153 & 255<i32>) + 0x42016C18<32>
	word32 s3_309 = (a0_178 & 255<i32>) + 0x42016C18<32>
	word32 s2_315 = (a3_153 >>u 0x18<u32>) + 0x42016C18<32>
	word32 a4_320 = (a4_191 & 255<i32>) + 0x42016C18<32>
	word32 a3_325 = (a3_153 >>u 16<i32> & 255<i32>) + 0x42016C18<32>
	word32 s11_296 = CONVERT(Mem27[(a3_153 >>u 8<u32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[s6_280:byte], byte, word32) ^ s11_138) ^ CONVERT(Mem27[(a0_178 >>u 0x10<u32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[(a4_191 >>u 0x18<u32>) + 0x42016C18<32>:byte], byte, word32) << 24<i32>
	word32 s10_312 = CONVERT(Mem27[(a0_178 >>u 8<u32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[s5_294:byte], byte, word32) ^ s10_202) ^ CONVERT(Mem27[(a4_191 >>u 0x10<u32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[(a1_129 >>u 0x18<u32>) + 0x42016C18<32>:byte], byte, word32) << 24<i32>
	word32 s9_328 = CONVERT(Mem27[(a4_191 >>u 8<u32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[s3_309:byte], byte, word32) ^ s9_205) ^ CONVERT(Mem27[(a1_129 >>u 0x10<u32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[s2_315:byte], byte, word32) << 24<i32>
	word32 s8_336 = CONVERT(Mem27[a4_320:byte], byte, word32) ^ s8_208 ^ CONVERT(Mem27[(a1_129 >>u 8<i32> & 255<i32>) + 0x42016C18<32>:byte], byte, word32) << 8<i32> ^ CONVERT(Mem27[a3_325:byte], byte, word32) << 16<i32>
	word32 a5_337 = CONVERT(Mem27[(a0_178 >>u 24<i32>) + 0x42016C18<32>:byte], byte, word32)
	Mem340[a2:byte] = SLICE(s11_296, byte, 0)
	Mem341[a2 + 4<i32>:byte] = SLICE(s10_312, byte, 0)
	Mem345[a2 + 1<i32>:byte] = SLICE(s11_296 >>u 8<u32>, byte, 0)
	Mem347[a2 + 2<i32>:byte] = SLICE(s11_296 >>u 0x10<u32>, byte, 0)
	Mem349[a2 + 5<i32>:byte] = SLICE(s10_312 >>u 8<u32>, byte, 0)
	Mem351[a2 + 6<i32>:byte] = SLICE(s10_312 >>u 0x10<u32>, byte, 0)
	Mem353[a2 + 9<i32>:byte] = SLICE(s9_328 >>u 8<u32>, byte, 0)
	Mem355[a2 + 10<i32>:byte] = SLICE(s9_328 >>u 0x10<u32>, byte, 0)
	Mem359[a2 + 8<i32>:byte] = SLICE(s9_328, byte, 0)
	word32 s8_343 = s8_336 ^ a5_337 << 24<i32>
	Mem360[a2 + 12<i32>:byte] = SLICE(s8_343, byte, 0)
	Mem362[a2 + 13<i32>:byte] = SLICE(s8_343 >>u 8<u32>, byte, 0)
	Mem365[a2 + 3<i32>:byte] = SLICE(s11_296 >>u 0x18<u32>, byte, 0)
	Mem366[a2 + 7<i32>:byte] = SLICE(s10_312 >>u 0x18<u32>, byte, 0)
	Mem367[a2 + 11<i32>:byte] = SLICE(s9_328 >>u 0x18<u32>, byte, 0)
	Mem368[a2 + 15<i32>:byte] = SLICE(s8_343 >>u 0x18<u32>, byte, 0)
	Mem369[a2 + 14<i32>:byte] = SLICE(s8_343 >>u 0x10<u32>, byte, 0)
	0<32> = dwArg0148
	0<32> = dwArg3C
	s1Out = 0x42016D18<32>
	a3Out = a3_325
	a4Out = a4_320
	a5Out = s8_343 >>u 0x10<u32>
	a6Out = dwArgB8
	s2Out = s2_315
	s3Out = s3_309
	s4Out = dwArg98
	s5Out = s5_294
	s6Out = s6_280
	s7Out = s7_213
	s8Out = dwArg78
	s9Out = s9_328 >>u 0x18<u32>
	s10Out = s10_312 >>u 0x18<u32>
	s11Out = s11_296 >>u 0x18<u32>
	return dwLoc04
mbedtls_aes_encrypt_exit:


word32 mbedtls_aes_decrypt(word32 a1, word32 a2, word32 a5, word32 dwArg3C, word32 dwArg0148, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_aes_crypt_ecb
//      mbedtls_aes_crypt_cbc
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +003C:[0..31] Stack +0148:[0..31]
// LiveOut: s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_aes_decrypt_entry:
l2306019E:
	word32 a4_58 = CONVERT(Mem27[a1 + 10<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 9<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 8<i32>:byte], byte, word32))
	word32 a4_39 = CONVERT(Mem27[a1 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 4<i32>:byte], byte, word32))
	word32 a5_64 = Mem27[a4_58 + 8<i32>:word32]
	word32 s10_257 = (CONVERT(Mem27[a1 + 7<i32>:byte], byte, word32) << 24<i32> | a4_39) ^ a4_39
	word32 t5_106 = Mem27[a4_39 + 4<i32>:word32] + 16<i32>
	word32 s9_117 = (CONVERT(Mem27[a1 + 11<i32>:byte], byte, word32) << 24<i32> | a4_58) ^ a4_58
	word32 s5_273 = (CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1:byte], byte, word32)))) ^ Mem27[a5_64:int32]
	word32 s8_111 = (CONVERT(Mem27[a1 + 15<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 14<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 12<i32>:byte], byte, word32)))) ^ Mem27[a5_64 + 12<i32>:word32]
	word32 s7_213 = (Mem27[Mem27[a5 + 4<i32>:word32]:int32] >> 1<u32>) + 0xFFFFFFFF<32>
l2306028A:
	word32 a1_129 = a1 ^ Mem27[((s10_257 >>u 0x18<u32>) << 2<i32>) + 0x42018A40<32>:word32] ^ Mem27[t5_106:int32] ^ Mem27[(s8_111 >>u 6<u32> & 1020<i32>) + 0x42018240<32>:word32] ^ Mem27[(s9_117 >>u 0xE<u32> & 1020<i32>) + 0x42018640<32>:word32]
	word32 s11_138 = Mem27[t5_106 + 16<i32>:int32]
	word32 a5_154 = Mem27[((s8_111 & 255<i32>) << 2<i32>) + 0x42017E40<32>:word32] ^ Mem27[((s5_273 >>u 0x18<u32>) << 2<i32>) + 0x42018A40<32>:word32] ^ Mem27[t5_106 + 12<i32>:int32] ^ Mem27[(s9_117 >>u 6<u32> & 1020<i32>) + 0x42018240<32>:word32] ^ Mem27[(s10_257 >>u 0xE<u32> & 1020<i32>) + 0x42018640<32>:word32]
	word32 a3_179 = Mem27[((s9_117 & 255<i32>) << 2<i32>) + 0x42017E40<32>:word32] ^ Mem27[((s8_111 >>u 0x18<u32>) << 2<i32>) + 0x42018A40<32>:word32] ^ Mem27[t5_106 + 8<i32>:int32] ^ Mem27[(s10_257 >>u 6<u32> & 1020<i32>) + 0x42018240<32>:word32] ^ Mem27[(s5_273 >>u 0xE<u32> & 1020<i32>) + 0x42018640<32>:word32]
	word32 a4_195 = Mem27[((s10_257 & 255<i32>) << 2<i32>) + 0x42017E40<32>:int32] ^ Mem27[((s9_117 >>u 0x18<u32>) << 2<i32>) + 0x42018A40<32>:int32] ^ Mem27[t5_106 + 4<i32>:int32] ^ Mem27[(s5_273 >>u 6<u32> & 1020<i32>) + 0x42018240<32>:int32] ^ Mem27[(s8_111 >>u 0xE<u32> & 1020<i32>) + 0x42018640<32>:int32]
	word32 s10_203 = Mem27[t5_106 + 20<i32>:int32]
	word32 s9_205 = Mem27[t5_106 + 24<i32>:int32]
	word32 s8_208 = Mem27[t5_106 + 28<i32>:int32]
	branch s7_213 > 0<32> l2306052C
l2306052C:
	a1 = Mem27[(a1_129 >>u 24<i32> << 2<i32>) + 0x42018A40<32>:word32]
	word32 a5_253 = Mem27[((a5_154 & 255<i32>) << 2<i32>) + 0x42017E40<32>:word32] ^ a1
	s10_257 = Mem27[((a4_195 & 255<i32>) << 2<i32>) + 0x42017E40<32>:int32] ^ Mem27[((a3_179 >>u 0x18<u32>) << 2<i32>) + 0x42018A40<32>:int32] ^ s10_203 ^ Mem27[((a1_129 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x42018240<32>:int32] ^ Mem27[((a5_154 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x42018640<32>:int32]
	s5_273 = Mem27[((a1_129 & 255<i32>) << 2<i32>) + 0x42017E40<32>:int32] ^ Mem27[((a4_195 >>u 0x18<u32>) << 2<i32>) + 0x42018A40<32>:int32] ^ s11_138 ^ Mem27[((a5_154 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x42018240<32>:int32] ^ Mem27[((a3_179 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x42018640<32>:int32]
	s9_117 = Mem27[((a3_179 & 255<i32>) << 2<i32>) + 0x42017E40<32>:int32] ^ Mem27[((a5_154 >>u 0x18<u32>) << 2<i32>) + 0x42018A40<32>:int32] ^ s9_205 ^ Mem27[((a4_195 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x42018240<32>:int32] ^ Mem27[((a1_129 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x42018640<32>:word32]
	t5_106 = t5_106 + 32<i32>
	s8_111 = a5_253 ^ s8_208 ^ a5_253 ^ a5_253
	s7_213 = s7_213 + 0xFFFFFFFF<32>
l230603E0:
	word32 s6_280 = (a1_129 & 255<i32>) + 0x42017D40<32>
	word32 s5_289 = (a4_195 >>u 0x18<u32>) + 0x42017D40<32>
	word32 s3_309 = (a3_179 >>u 0x18<u32>) + 0x42017D40<32>
	word32 s2_318 = (a3_179 & 255<i32>) + 0x42017D40<32>
	word32 s1_332 = (a5_154 >>u 0x18<u32>) + 0x42017D40<32>
	word32 s11_299 = CONVERT(Mem27[(a5_154 >>u 8<u32> & 255<i32>) + 0x42017D40<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[s6_280:byte], byte, word32) ^ s11_138) ^ CONVERT(Mem27[(a3_179 >>u 0x10<u32> & 255<i32>) + 0x42017D40<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[s5_289:byte], byte, word32) << 24<i32>
	word32 s10_321 = CONVERT(Mem27[(a1_129 >>u 8<u32> & 255<i32>) + 0x42017D40<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[(a4_195 & 255<i32>) + 0x42017D40<32>:byte], byte, word32) ^ s10_203) ^ CONVERT(Mem27[(a5_154 >>u 0x10<u32> & 255<i32>) + 0x42017D40<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[s3_309:byte], byte, word32) << 24<i32>
	word32 s9_334 = CONVERT(Mem27[(a4_195 >>u 8<u32> & 255<i32>) + 0x42017D40<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[s2_318:byte], byte, word32) ^ s9_205) ^ CONVERT(Mem27[(a1_129 >>u 0x10<u32> & 255<i32>) + 0x42017D40<32>:byte], byte, word32) << 16<i32>
	word32 a0_336 = CONVERT(Mem27[s1_332:byte], byte, word32)
	word32 s8_337 = CONVERT(Mem27[(a5_154 & 255<i32>) + 0x42017D40<32>:byte], byte, word32) ^ s8_208 ^ CONVERT(Mem27[(a3_179 >>u 8<i32> & 255<i32>) + 0x42017D40<32>:byte], byte, word32) << 8<i32> ^ CONVERT(Mem27[(a4_195 >>u 16<i32> & 255<i32>) + 0x42017D40<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[(a1_129 >>u 24<i32>) + 0x42017D40<32>:byte], byte, word32) << 24<i32>
	Mem341[a2 + 1<i32>:byte] = SLICE(s11_299 >>u 8<u32>, byte, 0)
	Mem343[a2 + 2<i32>:byte] = SLICE(s11_299 >>u 0x10<u32>, byte, 0)
	Mem347[a2 + 5<i32>:byte] = SLICE(s10_321 >>u 8<u32>, byte, 0)
	Mem349[a2 + 6<i32>:byte] = SLICE(s10_321 >>u 0x10<u32>, byte, 0)
	word32 s9_346 = s9_334 ^ a0_336 << 24<i32>
	Mem351[a2 + 9<i32>:byte] = SLICE(s9_346 >>u 8<u32>, byte, 0)
	Mem353[a2 + 10<i32>:byte] = SLICE(s9_346 >>u 0x10<u32>, byte, 0)
	Mem355[a2:byte] = SLICE(s11_299, byte, 0)
	Mem356[a2 + 4<i32>:byte] = SLICE(s10_321, byte, 0)
	Mem359[a2 + 8<i32>:byte] = SLICE(s9_346, byte, 0)
	Mem360[a2 + 12<i32>:byte] = SLICE(s8_337, byte, 0)
	Mem362[a2 + 13<i32>:byte] = SLICE(s8_337 >>u 8<u32>, byte, 0)
	Mem365[a2 + 3<i32>:byte] = SLICE(s11_299 >>u 0x18<u32>, byte, 0)
	Mem366[a2 + 7<i32>:byte] = SLICE(s10_321 >>u 0x18<u32>, byte, 0)
	Mem367[a2 + 11<i32>:byte] = SLICE(s9_346 >>u 0x18<u32>, byte, 0)
	Mem368[a2 + 15<i32>:byte] = SLICE(s8_337 >>u 0x18<u32>, byte, 0)
	Mem369[a2 + 14<i32>:byte] = SLICE(s8_337 >>u 0x10<u32>, byte, 0)
	0<32> = dwArg0148
	0<32> = dwArg3C
	s1Out = s1_332
	s2Out = s2_318
	s3Out = s3_309
	s4Out = dwArg98
	s5Out = s5_289
	s6Out = s6_280
	s7Out = s7_213
	s8Out = dwArg78
	s9Out = s9_346 >>u 0x18<u32>
	s10Out = s10_321 >>u 0x18<u32>
	s11Out = s11_299 >>u 0x18<u32>
	return dwLoc04
mbedtls_aes_decrypt_exit:


