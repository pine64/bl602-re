word32 xTaskGetTickCountFromISR(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dts_addr.part.2
//      bl_main_cfg_task_req
//      tc_blfdtdump
//      tc_fdt_wifi_module
//      ef_get_env_blob
//      ef_del_env
//      ef_set_env
//      psm_test_cmd
//      _cb_cmd
//      bl_cks_test
//      _cb_cmd
//      bl_dma_IRQHandler
//      bl_dma_irq_register
//      bl_dma_init
//      bl_dma_test
//      _irq_num_check.part.0
//      bl_irq_register
//      bl_irq_unregister
//      wait_trng4feed
//      sec_trng_IRQHandler
//      _pka_test_case2
//      cmd_gpio_get
//      cmd_gpio_set
//      cmd_gpio_func
//      Aes_Compare_Data
//      Sec_Eng_AES_Link_Case_CBC_128
//      Sec_Eng_AES_Link_Case_CTR_128
//      bl_sha_mutex_take
//      bl_sha_mutex_give
//      cmd_wdt_init
//      dev_uart_init
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      hal_boot2_init
//      hal_board_cfg
//      bl_tsen_adc_get
//      bl_flash_config_update
//      _cb_led_trigger
//      _led_bloop_msg
//      _led_bloop_evt
//      loopset_led_trigger
//      file_info
//      dirent_file
//      romfs_opendir
//      romfs_stat
//      romfs_open
//      romfs_register
//      log_buf_out
//      bl_mtd_write
//      bloop_run
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
xTaskGetTickCountFromISR_entry:
l2303030A:
	word32 a0_5 = Mem0[0x4200DE68<32>:int32]
	a5Out = 0x4200E000<32>
	return a0_5
xTaskGetTickCountFromISR_exit:


void pcTaskGetName(word32 a0, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 t3
// Preserved: sp
pcTaskGetName_entry:
l23030314:
	branch a0 == 0<32> l2303031C
l2303031C:
	branch Mem0[0x4200DE38<32>:int32] != 0<32> l23030316
l23030326:
	word32 a5_37
	vAssertCalled(a4, mstatus, out a5_37)
	return
l23030316:
	return
pcTaskGetName_exit:


word32 xTaskIncrementTick(word32 s0, word32 a4, word32 mstatus, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskResumeAll
//      int_timer_cb
// MayUse:  a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s9 t3 tp
// Preserved: s8 sp
xTaskIncrementTick_entry:
l2303033C:
	word32 a2_32
	word32 a4_114
	word32 s2_37
	word32 a3_162
	word32 a0_29 = bl_sys_time_sync_state(fp + -52<i32>, a4, mstatus, dwLoc08, out a2_32, out a3_162, out a4_114, out s2_37)
	word32 s1_150 = a0_29
	branch a0_29 == 0<32> l23030384
l2303035E:
	branch Mem26[0x4200DE50<32>:int32] == 0<32> l230303A0
l230303A0:
	word32 s3_45 = Mem26[0x4200DE68<32>:int32]
	Mem47[0x4200DE68<32>:word32] = s3_45 + 1<32>
	s3 = s3_45 + 1<32>
	branch s3_45 != 1<32> l23030406
l230303B6:
	s2_37 = 0x4200DE3C<32>
	branch Mem47[Mem47[0x4200DE3C<32>:int32]:word32] != 0<32> l230304D6
l230304D6:
	word32 a5_410
	a2_32 = vAssertCalled(a4_114, mstatus, out a5_410)
l230303C8:
	a3_162 = Mem47[0x4200DE3C<32>:int32]
	word32 a4_59 = Mem47[a2_32:word32]
	Mem61[0x4200DE3C<32>:word32] = a2_32
	Mem62[a3_162:word32] = a4_59
	Mem65[a4_59 + 1<32>:word32] = Mem62[a4_59:word32]
	a4_114 = a4_59 + 1<32>
	branch Mem65[Mem65[0x4200DE3C<32>:int32]:word32] != 0<32> l23030402
l23030402:
	word32 a5_411
	a4_114 = prvResetNextTaskUnblockTime.part.0(out a5_411)
l23030406:
l230303F2:
	Mem75[0x4200DE5C<32>:word32] = 0xFFFFFFFF<32>
l2303040E:
	branch s3_45 + 1<32> <u Mem77[0x4200DE5C<32>:int32] l230304A0
l230304A0:
	s1_150 = 0<32>
l23030416:
	s1_150 = 0<32>
	s2_37 = 0x4200DE3C<32>
l23030436:
	branch Mem98[Mem98[0x4200DE3C<32>:int32]:word32] == 0<32> l23030498
l2303043E:
	word32 a5_106 = Mem102[s0 + 12<i32>:word32]
	word32 s0_107 = Mem102[a5_106 + 4<i32>:word32]
	branch s3_45 + 1<32> <u a5_106 l230304D0
l230304D0:
	Mem112[0x4200DE5C<32>:word32] = a5_106
l23030452:
	word32 a4_116
	word32 a5_117
	uxListRemove(a3_162, a4_114, out a4_116, out a5_117)
	branch a5_117 == 0<32> l23030462
l2303045E:
	word32 a4_413
	uxListRemove(a3_162, a4_116, out a4_413, out a5_117)
l23030462:
	a4_114 = Mem102[a3_162:word32]
	word32 a5_134 = 1<32> << a5_117 | a3_162
	Mem140[a5_134:word32] = a4_114
	word32 a5_412
	vListInsertEnd(s0_107 + 4<i32>, a4_114, a5_134, out a5_412)
	s0 = Mem140[a4_114 + 44<i32>:word32]
	branch a4_114 <u Mem140[Mem140[0x4200DE38<32>:int32] + 44<i32>:word32] l23030436
l2303048E:
	s1_150 = 1<32>
	branch Mem140[Mem140[0x4200DE3C<32>:int32]:word32] != 0<32> l2303043E
l23030498:
	Mem156[0x4200DE5C<32>:word32] = 0xFFFFFFFF<32>
l230304B2:
	a3_162 = 1<32>
	branch Mem160[a4_114 * 0x14<32> + 0x4201253C<32>:int32] <=u 1<32> l23030378
l230304CC:
	s1_150 = 1<32>
l23030368:
	Mem182[a4_114 + 1<32>:word32] = Mem26[a4_114:word32]
	s1_150 = 0<32>
	a4_114 = a4_114 + 1<32>
l23030378:
	branch Mem184[0x4200DE6C<32>:int32] == 0<32> l23030384
l23030382:
	s1_150 = 1<32>
l23030384:
	0<32> = dwArg0198
	s1Out = s1_150
	a0Out = s1_150
	a3Out = a3_162
	a4Out = a4_114
	s2Out = s2_37
	s3Out = s3
	s4Out = dwLoc14
	return dwArg0158
xTaskIncrementTick_exit:


word32 xTaskResumeAll(word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s4Out, ptr32 & t3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
//      xEventGroupSetBits
//      vEventGroupDelete
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      xStreamBufferSend
//      xStreamBufferReceive
//      vTaskDelay
//      vTaskGetInfo
//      uxTaskGetSystemState
//      prvTimerTask
//      pvPortMalloc
//      vPortFree
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: a1 s2 s3 s5 s6 s7 s8 s9 sp
xTaskResumeAll_entry:
l230304DC:
	branch a5 == 0<32> l2303061C
l2303061C:
	vAssertCalled(a4, mstatus, out a5)
l23030500:
	__csrrc(mstatus, 8<32>)
	word32 s0_113 = Mem24[a5:word32]
	branch a5 == 0<32> l23030514
l23030510:
	a4 = vTaskEnterCritical.part.7(a4, out a5)
l23030514:
	word32 a0_148
	word32 a5_147 = a5 + 0xFFFFFFFF<32>
	Mem43[a5_147:word32] = Mem24[a5:word32]
	word32 s1_111 = Mem43[a5_147:word32]
	branch a5_147 != 0<32> l230305EA
l2303051E:
	a5_147 = Mem43[0x4200DE44<32>:int32]
	branch a5_147 == 0<32> l230305EA
l23030528:
	word32 s6_50 = 0<32>
	word32 s3_131 = 0x4200DE6C<32>
l2303054C:
	branch Mem58[0x420127E4<32>:int32] == 0<32> l230305A8
l23030552:
	s6_50 = Mem61[Mem61[0x420127F0<32>:int32] + 12<i32>:int32]
	word32 a4_68
	word32 a5_456
	uxListRemove(a3, a4, out a4_68, out a5_456)
	word32 a4_457
	word32 a5_458
	uxListRemove(a3, a4_68, out a4_457, out a5_458)
	word32 a4_76 = Mem61[a3:word32]
	word32 a5_82 = 1<32> << Mem61[s6_50 + 44<i32>:int32] | a3
	Mem86[a5_82:word32] = a4_76
	word32 a5_459
	vListInsertEnd(s6_50 + 4<i32>, a4_76, a5_82, out a5_459)
	a4 = Mem86[s6_50 + 44<i32>:int32]
	branch a4 <u Mem86[Mem86[0x4200DE38<32>:word32] + 44<i32>:word32] l2303054C
l2303059E:
	Mem95[0x4200DE6C<32>:word32] = 1<32>
	branch Mem95[0x420127E4<32>:int32] != 0<32> l23030552
l230305A8:
	branch s6_50 == 0<32> l230305C2
l230305AC:
	branch Mem100[Mem100[0x4200DE3C<32>:int32]:word32] != 0<32> l2303062A
l2303062A:
	word32 a5_460
	a4 = prvResetNextTaskUnblockTime.part.0(out a5_460)
l230305B8:
	Mem107[0x4200EE5C<32>:word32] = 0xFFFFFFFF<32>
	a4 = 0xFFFFFFFF<32>
l230305C2:
	s1_111 = Mem110[0x4200DE4C<32>:int32]
	branch s1_111 == 0<32> l230305E4
l230305D0:
l230305D2:
	word32 s1_125
	word32 s2_126
	word32 s4_127
	word32 a0_130
	s0_113 = xTaskIncrementTick(s0_113, a4, mstatus, dwArg0158, out s1_125, out a0_130, out a3, out a4, out s2_126, out s3_131, out s4_127)
	s1_111 = s1_125 + 0xFFFFFFFF<32>
	branch a0_130 == 0<32> l230305DE
l230305DA:
	Mem137[s3_131:word32] = s4_127
l230305DE:
	branch s1_125 != 0xFFFFFFFF<32> l230305D2
l230305E0:
	Mem140[s2_126:word32] = 0<32>
l230305E4:
	a5_147 = Mem146[s3_131:int32]
	branch a5_147 != 0<32> l23030622
l23030622:
	__syscall()
	a0_148 = 1<32>
l230305EA:
	a0_148 = 0<32>
l230305EC:
	branch a5_147 == 0<32> l23030604
l230305F0:
	a5_147 = Mem152[Mem152[0x4200DE38<32>:int32] + 68<i32>:word32]
	branch a5_147 == 0<32> l23030604
l230305FC:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_147)
l23030604:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_111
	a0Out = a0_148
	a2Out = dwArg0138
	a3Out = a3
	a4Out = a4
	a5Out = a5_147
	a6Out = dwArg0118
	s4Out = dwArgF4
	t3Out = dwArgA8
	return dwArg0178
xTaskResumeAll_exit:


word32 vTaskDelay(word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg24, word32 dwArg28, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      proc_hellow_entry
//      aws_main_entry
//      txl_frame_get
//      scanu_start
//      bl_main_rtthread_start
//      wifi_mgmr_event_notify
//      cmd_wifi_coex_pta_force_on
//      wifi_disconnect_cmd
//      bl_cks_test
//      bl_dma_test
//      proc_entry_looprt
//      tcpc_entry
//      iperf_server_udp
//      iperf_client_udp
//      iperf_client_tcp
//      has_timer_expired
//      bloop_wait_startup
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
vTaskDelay_entry:
l23030630:
	branch a0 != 0<32> l23030638
l23030638:
	branch a5 != 0<32> l23030668
l23030668:
	vAssertCalled(a4, mstatus, out a5)
	a2 = dwArg24
l2303064A:
	Mem22[a5 + 1<32>:word32] = Mem19[a5:word32]
	word32 a1_32
	word32 a4_34
	word32 a5_35
	word32 s2_39
	word32 s3_40
	word32 s1_126
	word32 a0_127
	word32 a2_128
	word32 s4_129
	prvAddCurrentTaskToDelayedList(a0, 0<32>, a2, a3, a4, dwArg28, out s1_126, out a0_127, out a1_32, out a2_128, out a4_34, out a5_35, out s2_39, out s3_40, out s4_129)
	word32 a0_45
	word32 a2_46
	word32 a5_47
	word32 s0_49
	word32 s1_50
	word32 s4_51
	word32 a3_54
	word32 a4_55
	word32 a6_130
	word32 t3_131
	xTaskResumeAll(a3, a4_34, a5_35, mstatus, dwArg0138, dwArg0178, out s0_49, out s1_50, out a0_45, out a2_46, out a3_54, out a4_55, out a5_47, out a6_130, out s4_51, out t3_131)
	branch a0_45 != 0<32> l23030660
l2303065C:
	__syscall()
l23030660:
	s1Out = s1_50
	a0Out = a0_45
	a1Out = a1_32
	a2Out = a2_46
	a3Out = a3_54
	a4Out = a4_55
	a5Out = a5_47
	s2Out = s2_39
	s3Out = s3_40
	s4Out = s4_51
	s8Out = dwLoc1C
	return s0_49
l23030632:
	__syscall()
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return s0
vTaskDelay_exit:


word32 vTaskSwitchContext(word32 ra, word32 a3, word32 s2, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_irq_handler
//      int_timer_cb
//      __uart_rx_irq
//      __uart_tx_irq
//      aos_sem_signal
// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31]
// LiveOut: a0 a4 a5 s0
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskSwitchContext_entry:
l23030672:
	branch Mem0[0x4200DE50<32>:int32] == 0<32> l23030688
l23030688:
	Mem11[0x4200EE6C<32>:word32] = 0<32>
	branch a3 != 0xA5A5A5A5<32> l230306BE
l230306B8:
	branch a3 == 0xA5A5A5A5<32> l23030722
l23030722:
	branch a3 != 0xA5A5A5A5<32> l230306BE
l23030728:
	branch a3 != 0xA5A5A5A5<32> l230306BE
l2303072E:
l230306CE:
	word32 a4_43
	word32 a0_42 = __clzsi2(Mem21[0x4200DE58<32>:int32], out a4_43)
	word32 s3_45 = 0x1F<32> - a0_42
	word32 a5_51 = Mem21[s3_45 * 0x14<32> + 0x4201253C<32>:word32]
	branch a5_51 == 0<32> l23030730
l23030730:
	vAssertCalled(a4_43, mstatus, out a5_51)
l230306F8:
	word32 s0_62 = s3_45 * 0x14<32> + 8<32>
	word32 a4_61 = Mem21[a5_51 + 4<i32>:word32]
	word32 a5_65 = Mem21[a5_51 + 4<i32>:word32]
	Mem66[a5_65 + 4<i32>:word32] = a4_61
	branch a5_65 == s0_62 + 0x4201253C<32> l23030736
l23030736:
	a5_65 = Mem66[a5_65 + 4<i32>:word32]
	Mem68[a5_65 + 4<i32>:word32] = a4_61
l2303070E:
	word32 a5_71 = Mem70[a5_65 + 12<i32>:word32]
	Mem78[0x4200DE38<32>:word32] = a5_71
	a0Out = a0_42
	a4Out = a4_61
	a5Out = a5_71
	return s0_62 + 0x4201253C<32>
l230306BE:
	vApplicationStackOverflowHook(ra, a3, s2, dwArg30, dwArg34, dwArg58, dwArg7C)
l2303067C:
	Mem85[0x4200EE6C<32>:word32] = 1<32>
	a0Out = a0
	a4Out = 1<32>
	a5Out = 0x4200E000<32>
	return s0
vTaskSwitchContext_exit:


word32 vTaskPlaceOnEventList(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg48, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0048:[0..31]
// LiveOut: a1 a2 a4 s0 s2 s3
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskPlaceOnEventList_entry:
l2303073C:
	branch a0 == 0<32> l23030762
l23030762:
	word32 a5_65
	vAssertCalled(a4, mstatus, out a5_65)
	a2 = dwArg24
l23030746:
	word32 a4_28
	word32 a5_66
	vListInsert(a0, a2, a3, out a4_28, out a5_66)
l2303075E_thunk_prvAddCurrentTaskToDelayedList:
	word32 a1_38
	word32 a2_39
	word32 a4_40
	word32 s2_45
	word32 s3_46
	word32 s1_67
	word32 a0_68
	word32 a5_69
	word32 s4_70
	word32 s0_43 = prvAddCurrentTaskToDelayedList(a1, 1<32>, a2, a3, a4_28, dwArg48, out s1_67, out a0_68, out a1_38, out a2_39, out a4_40, out a5_69, out s2_45, out s3_46, out s4_70)
	a1Out = a1_38
	a2Out = a2_39
	a4Out = a4_40
	s2Out = s2_45
	s3Out = s3_46
	return s0_43
vTaskPlaceOnEventList_exit:


word32 vTaskPlaceOnUnorderedEventList(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg48, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0048:[0..31]
// LiveOut: a4 a5 s2 s3
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskPlaceOnUnorderedEventList_entry:
l2303076C:
	word32 a2_20
	a2_20 = a2
	branch a0 == 0<32> l230307B8
l230307B8:
	word32 a5_96
	vAssertCalled(a4, mstatus, out a5_96)
	a2_20 = dwArg24
l2303077A:
	branch Mem22[0x4200DE50<32>:int32] == 0<32> l230307AE
l230307AE:
	word32 a5_97
	vAssertCalled(a4, mstatus, out a5_97)
	a2_20 = dwArg24
l23030784:
	Mem44[(a1 | 0x80000000<32>) + 24<i32>:word32] = a4
	word32 a5_98
	vListInsertEnd(a1 + 0x18<32>, a4, a1 | 0x80000000<32>, out a5_98)
l230307AA_thunk_prvAddCurrentTaskToDelayedList:
	word32 s1_99
	word32 a0_100
	word32 a1_101
	word32 a4_64
	word32 a5_65
	word32 s2_69
	word32 s3_70
	word32 a2_102
	word32 s4_103
	prvAddCurrentTaskToDelayedList(a2, 1<32>, a2_20, a3, a4, dwArg48, out s1_99, out a0_100, out a1_101, out a2_102, out a4_64, out a5_65, out s2_69, out s3_70, out s4_103)
	a5Out = a5_65
	s2Out = s2_69
	s3Out = s3_70
	return a4_64
vTaskPlaceOnUnorderedEventList_exit:


word32 vTaskPlaceOnEventListRestricted(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg48, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vQueueWaitForMessageRestricted
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0048:[0..31]
// LiveOut: a1 a4 s0 s3
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskPlaceOnEventListRestricted_entry:
l230307C2:
	word32 a2_20
	word32 s1_11 = a1
	a2_20 = a2
	branch a0 == 0<32> l230307F2
l230307F2:
	word32 a5_81
	vAssertCalled(a4, mstatus, out a5_81)
	a2_20 = dwArg24
l230307D0:
	word32 a5_82
	vListInsertEnd(Mem22[0x4200DE38<32>:int32] + 0x18<32>, a4, 0x4200E000<32>, out a5_82)
	branch a2 == 0<32> l230307E2
l230307E0:
	s1_11 = 0xFFFFFFFF<32>
l230307E2:
l230307EE_thunk_prvAddCurrentTaskToDelayedList:
	word32 s1_83
	word32 a2_85
	word32 a0_84
	word32 a1_49
	word32 a4_51
	word32 s3_57
	word32 a5_86
	word32 s2_87
	word32 s4_88
	word32 s0_54 = prvAddCurrentTaskToDelayedList(s1_11, a2, a2_20, a3, a4, dwArg48, out s1_83, out a0_84, out a1_49, out a2_85, out a4_51, out a5_86, out s2_87, out s3_57, out s4_88)
	a1Out = a1_49
	a4Out = a4_51
	s3Out = s3_57
	return s0_54
vTaskPlaceOnEventListRestricted_exit:


word32 xTaskRemoveFromEventList(word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvUnlockQueue
//      xQueueGenericReset
//      xQueueGenericSend
//      xQueueGenericSendFromISR
//      xQueueGiveFromISR
//      xQueueReceive
//      xQueueSemaphoreTake
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
xTaskRemoveFromEventList_entry:
l230307FC:
	branch s0 == 0<32> l2303088E
l2303088E:
	word32 a5_107
	a2 = vAssertCalled(a4, mstatus, out a5_107)
l2303080A:
	word32 a1_50
	word32 a5_108
	word32 a4_24
	uxListRemove(a3, a4, out a4_24, out a5_108)
	word32 s1_100 = s0 + 24<i32>
	word32 a5_28 = Mem9[0x4200DE50<32>:int32]
	branch a5_28 == 0<32> l23030854
l23030854:
	word32 a4_109
	word32 a5_110
	uxListRemove(a3, a4_24, out a4_109, out a5_110)
	a3 = Mem9[a1:word32]
	word32 a5_48 = 1<32> << a2 | a1
	Mem51[a5_48:word32] = a3
	word32 a4_42 = a2 * 5<32>
	word32 a5_111
	vListInsertEnd(s0 + 4<i32>, a4_42 << 2<i32>, a5_48, out a5_111)
	s1_100 = s0 + 4<i32>
	a4_24 = a4_42 << 2<i32>
	a1_50 = s0 + 4<i32>
l2303081E:
	word32 a5_112
	vListInsertEnd(s0 + 24<i32>, a4_24, a5_28, out a5_112)
	a1_50 = s0 + 24<i32>
l2303082C:
	word32 a0_64 = 0<32>
	word32 a5_65 = Mem60[Mem60[0x4200DE38<32>:int32] + 44<i32>:word32]
	branch a5_65 >=u a4_24 l2303084A
l2303083E:
	Mem68[0x4200EE6C<32>:word32] = 1<32>
	a5_65 = 0x4200E000<32>
	a4_24 = 1<32>
	a0_64 = 1<32>
l2303084A:
	a0Out = a0_64
	a1Out = a1_50
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_24
	a5Out = a5_65
	return s1_100
xTaskRemoveFromEventList_exit:


word32 vTaskRemoveFromUnorderedEventList(word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupSetBits
//      vEventGroupDelete
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0024:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3
// Preserved: sp
vTaskRemoveFromUnorderedEventList_entry:
l23030894:
	branch Mem0[0x4200DE50<32>:int32] == 0<32> l23030914
l23030914:
	word32 a5_129
	vAssertCalled(a4, mstatus, out a5_129)
	Mem28[a1 | 0x80000000<32>:word32] = Mem18[dwArg24 + 12<i32>:word32]
	s0 = dwArg24
	a2 = dwArg44
	branch dwArg24 != 0<32> l230308B4
l230308A8:
	Mem32[a1 | 0x80000000<32>:word32] = Mem14[s0 + 12<i32>:word32]
	branch s0 == 0<32> l2303092C
l2303092C:
	word32 a5_130
	a2 = vAssertCalled(a4, mstatus, out a5_130)
	s0 = dwArg24
l230308B4:
	word32 a4_46
	word32 a5_131
	uxListRemove(a3, a4, out a4_46, out a5_131)
	word32 a5_53
	word32 a4_132
	uxListRemove(a3, a4_46, out a4_132, out a5_53)
	word32 a3_59 = Mem54[a2:word32]
	word32 a5_67 = 1<32> << a5_53 | a2
	Mem70[a5_67:word32] = a3_59
	word32 s1_49 = s0 + 4<i32>
	word32 a5_133
	word32 a0_71 = vListInsertEnd(s1_49, a5_53 * 0x14<32>, a5_67, out a5_133)
	word32 s0_75 = Mem70[a5_53 * 0x14<32> + 44<i32>:word32]
	word32 a5_117 = Mem70[Mem70[0x4200DE38<32>:int32] + 44<i32>:word32]
	branch a5_117 >=u a5_53 * 0x14<32> l23030908
l23030900:
	Mem78[0x4200EE6C<32>:word32] = 1<32>
	a5_117 = 0x4200E000<32>
l23030908:
	s1Out = s1_49
	a0Out = a0_71
	a2Out = a2
	a3Out = a3_59
	a4Out = a5_53 * 0x14<32>
	a5Out = a5_117
	s2Out = 1<32>
	s4Out = dwArg04
	return s0_75
vTaskRemoveFromUnorderedEventList_exit:


word32 vTaskSetTimeOutState(word32 a0, word32 a4, word32 a5, word32 mstatus, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a3 a4
// Trashed: a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
vTaskSetTimeOutState_entry:
l23030936:
	branch a0 == 0<32> l23030990
l23030990:
	vAssertCalled(a4, mstatus, out a5)
l23030942:
	__csrrc(mstatus, 8<32>)
	branch a5 == 0<32> l23030956
l23030952:
	word32 a5_81
	vTaskEnterCritical.part.7(a4, out a5_81)
l23030956:
	word32 a3_28 = Mem9[0x4200DE60<32>:int32]
	word32 a4_29 = Mem9[0x4200DE68<32>:int32]
	Mem33[a3_28:word32] = a0
	Mem34[a4_29 + 4<i32>:word32] = a0
	branch false l23030986
l2303096E:
	branch Mem34[Mem34[0x4200DE38<32>:int32] + 68<i32>:word32] == 0<32> l23030986
l23030986:
	a4Out = a4_29
	return a3_28
l2303097A:
l23030982_thunk_vTaskExitCritical.part.8:
	word32 a5_82
	word32 a4_52
	word32 a3_51 = vTaskExitCritical.part.8(a3_28, mstatus, out a4_52, out a5_82)
	a4Out = a4_52
	return a3_51
vTaskSetTimeOutState_exit:


void vTaskInternalSetTimeOutState(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
vTaskInternalSetTimeOutState_entry:
l23030996:
	word32 a5_7 = Mem0[0x4200DE68<32>:int32]
	Mem9[Mem0[0x4200DE60<32>:int32]:word32] = a0
	Mem10[a5_7 + 4<i32>:word32] = a0
	return
vTaskInternalSetTimeOutState_exit:


word32 xTaskCheckForTimeOut(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      xStreamBufferSend
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3
// Preserved: sp
xTaskCheckForTimeOut_entry:
l230309AC:
	word32 s1_13 = a0
	branch a0 == 0<32> l23030A50
l23030A50:
	a2 = vAssertCalled(a4, mstatus, out a5)
	branch a1 != 0<32> l230309C0
l230309BC:
	branch a1 == 0<32> l23030A58
l23030A58:
	a2 = vAssertCalled(a4, mstatus, out a5)
l230309C0:
	__csrrc(mstatus, 8<32>)
	branch a5 != 0<32> l23030A3E
l23030A3E:
	word32 a5_179
	vTaskEnterCritical.part.7(a4, out a5_179)
l230309D0:
	word32 s0_163
	word32 a4_100 = Mem11[a1:int32]
	word32 a5_101 = Mem11[a2:word32]
	word32 a3_158 = 0xFFFFFFFF<32>
	word32 a0_154 = 0<32>
	branch a4_100 == 0xFFFFFFFF<32> l23030A1A
l230309E6:
	a3_158 = Mem11[0<32>:word32]
	s1_13 = Mem11[a1 + 4<i32>:word32]
	branch Mem11[a0:int32] == 0<32> l23030A00
l230309FA:
	a0_154 = 1<32>
	branch a2 >=u a1 l23030A1A
l23030A00:
	branch a2 - a1 >=u a4_100 l23030A44
l23030A44:
	s0_163 = Mem11[a5_101:word32]
	Mem65[a1:word32] = 0<32>
	a0_154 = 1<32>
	branch a5_101 == 0<32> l23030A32
l23030A4E:
l23030A08:
	a3_158 = Mem11[a3_158:word32]
	a5_101 = Mem11[a5_101:word32]
	a4_100 = a4_100 - a2 + a1
	Mem72[a1:word32] = a4_100
	Mem74[a3_158:word32] = s1_13
	Mem75[a5_101 + 4<i32>:word32] = s1_13
	a0_154 = 0<32>
l23030A1A:
	s0_163 = Mem78[a5_101:word32]
	branch a5_101 == 0<32> l23030A32
l23030A1E:
	a5_101 = Mem81[Mem81[0x4200DE38<32>:int32] + 68<i32>:word32]
	branch a5_101 == 0<32> l23030A32
l23030A2A:
	a3_158 = vTaskExitCritical.part.8(a3_158, mstatus, out a4_100, out a5_101)
	a2 = dwArg24
l23030A32:
	s1Out = s1_13
	a0Out = a0_154
	a2Out = a2
	a3Out = a3_158
	a4Out = a4_100
	a5Out = a5_101
	s2Out = a1
	s4Out = dwArg04
	return s0_163
xTaskCheckForTimeOut_exit:


word32 vTaskMissedYield()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvUnlockQueue
// MayUse: 
// LiveOut: a4
// Trashed: a4 a5
// Preserved: sp
vTaskMissedYield_entry:
l23030A5E:
	Mem5[0x4200EE6C<32>:word32] = 1<32>
	return 1<32>
vTaskMissedYield_exit:


word32 vTaskGetInfo(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvListTasksWithinSingleList.part.11
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp tp
vTaskGetInfo_entry:
l23030A6A:
	word32 s0_11 = a0
	branch a0 == 0<32> l23030AEE
l23030AEE:
	s0_11 = Mem7[0x4200DE38<32>:int32]
l23030A74:
	word32 a5_164
	Mem16[s0_11 + 56<i32>:word32] = a1
	Mem17[s0_11:word32] = a1
	Mem22[a4 + 16<i32>:word32] = a1
	Mem24[a4 + 28<i32>:word32] = a1
	Mem26[a4 + 8<i32>:word32] = a1
	word32 s0_174 = Mem26[a4 + 80<i32>:word32]
	Mem28[a1 + 24<i32>:word32] = 0<32>
	Mem29[a4 + 20<i32>:word32] = a1
	branch a3 == 5<32> l23030AFE
l23030AFE:
	word32 a0_40
	word32 s2_46
	word32 s4_47
	word32 s3_52
	eTaskGetState(s0_174, a3, a4, 5<32>, mstatus, out a0_40, out a3, out a4, out a5_164, out s2_46, out s3_52, out s4_47)
	Mem55[a1 + 12<i32>:byte] = SLICE(a0_40, byte, 0)
	s0_174 = dwArg44
l23030A96:
	a5_164 = Mem29[0x4200DE38<32>:int32]
	branch a5_164 == s0_174 l23030AF8
l23030AF8:
	Mem58[a1 + 12<i32>:byte] = 0<8>
l23030AA2:
	Mem59[a1 + 12<i32>:byte] = SLICE(a3, byte, 0)
	a5_164 = 3<32>
	branch a3 == 3<32> l23030B12
l23030B12:
	word32 a5_62 = Mem59[a4:word32]
	Mem64[a4 + 1<32>:word32] = a5_62
	branch a5_62 == 0<32> l23030B2A
l23030B24:
	Mem67[a1 + 12<i32>:byte] = 2<8>
	a5_62 = 2<32>
l23030B2A:
	word32 s1_82
	word32 s4_83
	word32 a0_218
	word32 a2_219
	word32 a6_220
	word32 t3_221
	word32 s0_217
	xTaskResumeAll(a3, a4 + 1<32>, a5_62, mstatus, dwArg0138, dwArg0178, out s0_217, out s1_82, out a0_218, out a2_219, out a3, out a4, out a5_164, out a6_220, out s4_83, out t3_221)
	s0_174 = dwArg44
l23030AAC:
	branch a2 == 0<32> l23030AE2
l23030AE2:
	Mem92[a1 + 32<i32>:word16] = 0<16>
	s1Out = <invalid>
	a3Out = <invalid>
	a4Out = a4
	a5Out = a5_164
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_174
l23030AAE:
	word32 a5_102
	word32 s0_99 = Mem98[a3 + 48<i32>:word32]
	word32 a4_101 = CONVERT(Mem98[a3:byte], byte, word32)
	branch a4_101 != 165<i32> l23030B38
l23030B38:
	Mem103[a1 + 32<i32>:word16] = 0<16>
	a5_102 = 0<32>
l23030ABC:
	word32 a5_104 = 0<32>
l23030AC2:
	a5_104 = a5_104 + 1<32>
	a4_101 = CONVERT(Mem98[a3 + a5_104:byte], byte, word32)
	branch a4_101 == 165<i32> l23030AC2
l23030AD0:
	word32 a5_114 = a5_104 >>u 2<i32> << 16<i32>
	Mem117[a1 + 32<i32>:word16] = SLICE(a5_114 >>u 16<i32>, word16, 0)
	a5_102 = a5_114 >>u 16<i32>
l23030ADA:
	s1Out = <invalid>
	a3Out = <invalid>
	a4Out = a4_101
	a5Out = a5_102
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_99
vTaskGetInfo_exit:


word32 prvListTasksWithinSingleList.part.11(word32 s1, word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArgA8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      uxTaskGetSystemState
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
prvListTasksWithinSingleList.part.11_entry:
l23030B40:
	word32 a1_21 = Mem19[a5 + 4<i32>:word32]
	word32 a5_24 = Mem19[a5 + 4<i32>:word32]
	Mem27[a5_24 + 4<i32>:word32] = a1_21
	word32 s4_110 = a1_21 + 8<i32>
	word32 s2_182 = a1_21
	branch a5_24 == a1_21 + 8<i32> l23030BC4
l23030BC4:
	Mem29[a5_24 + 4<i32>:word32] = Mem27[a5_24 + 12<i32>:word32]
l23030B64:
	word32 s5_32 = Mem31[a5_24 + 12<i32>:int32]
	word32 s0_105 = a0
	s1_112 = s1
l23030B84:
	word32 a3_178
	word32 a5_180
	word32 s3_65
	word32 s1_112
	word32 a5_39 = Mem38[a5_24 + 4<i32>:word32]
	Mem45[s2_182 + 4<i32>:word32] = a5_39
	branch s4_110 != a5_39 l23030B6E
l23030B6E:
	s0_105 = vTaskGetInfo(s1_112, s0_105, 1<32>, a2, a4, mstatus, dwArg0118, dwArg0158, out s1_112, out a3_178, out a4, out a5_180, out s2_182, out s3_65, out s4_110)
	branch s5_32 == s1_112 l23030BAE
l23030B94:
	Mem74[s2_182 + 4<i32>:word32] = Mem45[s4_110 + 4<i32>:int32]
	s0_105 = vTaskGetInfo(s1_112, s0_105, 1<32>, a2, a4, mstatus, dwArg0118, dwArg0158, out s1_112, out a3_178, out a4, out a5_180, out s2_182, out s3_65, out s4_110)
	branch s5_32 != s1_112 l23030B80
l23030B80:
	a5_24 = Mem91[s2_182 + 4<i32>:int32]
l23030BAE:
	0<32> = dwArgA8
	s1Out = s1_112
	a0Out = s3_65
	a1Out = s0_105
	a3Out = a3_178
	a4Out = a4
	a5Out = a5_180
	s2Out = s2_182
	s3Out = s3_65
	s4Out = dwArg04
	return s1
prvListTasksWithinSingleList.part.11_exit:


word32 uxTaskGetSystemState(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg88, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskList
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0088:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a5 s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
uxTaskGetSystemState_entry:
l23030BCA:
	Mem22[a4 + 1<32>:word32] = Mem18[a4:word32]
	word32 a4_181 = a4 + 1<32>
	word32 a5_112 = Mem22[0x4200DE44<32>:int32]
	word32 s2_108 = 0<32>
	branch a1 <u a5_112 l23030CC6
l23030BF6:
	word32 s4_259 = a0
	word32 s0_130 = a2
	word32 s1_120 = 32<i32>
	s2_108 = 0<32>
	word32 a4_258 = 0<32>
l23030C0E:
	s1_120 = s1_120 + 0xFFFFFFFF<32>
	a5_112 = (a4_258 + s2_108 << 2<i32>) + s4_259
	branch a3 == 0<32> l23030C3E
l23030C2C:
	s2_108 = s2_66 + a0_57
	word32 a0_57
	word32 s2_66
	word32 a1_378
	word32 a4_379
	word32 a5_380
	word32 s3_381
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 1<32>, a4_258, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_57, out a1_378, out a3, out a4_379, out a5_380, out s2_66, out s3_381, out s4_259)
	a4_258 = s2_108 << 3<u32>
	a5_112 = s2_108 * 0x24<32> + s4_259
l23030C3E:
	branch s1_120 != 0<32> l23030C0E
l23030C42:
	branch false l23030C62
l23030C4E:
	s2_108 = s2_100 + a0_91
	word32 a0_91
	word32 s2_100
	word32 s4_102
	word32 a5_384
	word32 s3_385
	word32 a1_382
	word32 a4_383
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 2<32>, 0x4200E000<32>, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_91, out a1_382, out a3, out a4_383, out a5_384, out s2_100, out s3_385, out s4_102)
	a5_112 = s2_108 * 0x24<32> + s4_102
l23030C62:
	branch false l23030C82
l23030C6E:
	s2_108 = s2_132 + a0_123
	word32 a0_123
	word32 s2_132
	word32 s4_134
	word32 a1_386
	word32 a4_387
	word32 a5_388
	word32 s3_389
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 2<32>, 0x4200E000<32>, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_123, out a1_386, out a3, out a4_387, out a5_388, out s2_132, out s3_389, out s4_134)
	a5_112 = s2_108 * 0x24<32> + s4_134
l23030C82:
	word32 a4_148 = Mem22[0x4201280C<32>:word32]
	branch a4_148 == 0<32> l23030CA6
l23030C8E:
	s2_108 = s2_165 + a0_156
	word32 a0_156
	word32 s2_165
	word32 s4_167
	word32 a4_391
	word32 a5_392
	word32 s3_393
	word32 a1_390
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 4<32>, a4_148, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_156, out a1_390, out a3, out a4_391, out a5_392, out s2_165, out s3_393, out s4_167)
	a5_112 = s2_108 * 0x24<32> + s4_167
l23030CA6:
	a1 = 0x42012000<32>
	a4_181 = Mem22[0x420127F8<32>:word32]
	branch a4_181 == 0<32> l23030CC0
l23030CB2:
	word32 a0_189
	word32 s2_198
	word32 s1_394
	word32 s3_395
	word32 s4_396
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 3<32>, a4_181, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_394, out a0_189, out a1, out a3, out a4_181, out a5_112, out s2_198, out s3_395, out s4_396)
	s2_108 = s2_198 + a0_189
l23030CC0:
	branch s0_130 == 0<32> l23030CC6
l23030CC2:
	Mem213[s0_130:word32] = 0<32>
l23030CC6:
	word32 a5_234
	word32 t3_377
	word32 s1_370
	word32 a0_371
	word32 a2_372
	word32 a3_373
	word32 a4_374
	word32 a6_375
	word32 s4_376
	word32 s0_369
	xTaskResumeAll(a3, a4_181, a5_112, mstatus, dwArg0138, dwArg0178, out s0_369, out s1_370, out a0_371, out a2_372, out a3_373, out a4_374, out a5_234, out a6_375, out s4_376, out t3_377)
	a0Out = s2_108
	a1Out = a1
	a5Out = a5_234
	s8Out = s4
	return s1
uxTaskGetSystemState_exit:


word32 uxTaskGetStackHighWaterMark(word32 a0, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a3
// Trashed: a0 a3 a5
// Preserved: sp
uxTaskGetStackHighWaterMark_entry:
l23030CDE:
	word32 a3_11
	branch a0 == 0<32> l23030D0A
l23030D0A:
	a3_11 = CONVERT(Mem0[a4:byte], byte, word32)
	branch a3_11 == 165<i32> l23030CF0
l23030CE0:
	a3_11 = CONVERT(Mem0[a4:byte], byte, word32)
	branch a3_11 != 165<i32> l23030D22
l23030D22:
	return a3_11
l23030CF0:
	word32 a0_17 = 0<32>
l23030CF4:
	a0_17 = a0_17 + 1<32>
	branch CONVERT(Mem0[a4 + a0_17:byte], byte, word32) == 165<i32> l23030CF4
l23030D02:
	return 165<i32>
uxTaskGetStackHighWaterMark_exit:


word32 xTaskGetCurrentTaskHandle(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipc_emb_init
//      bl_output
//      xQueueGiveMutexRecursive
//      xQueueTakeMutexRecursive
//      xStreamBufferSend
//      xStreamBufferReceive
//      aos_task_key_create
//      aos_task_setspecific
//      aos_task_getspecific
//      bloop_run
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
xTaskGetCurrentTaskHandle_entry:
l23030D24:
	word32 a0_5 = Mem0[0x4200DE38<32>:int32]
	a5Out = 0x4200E000<32>
	return a0_5
xTaskGetCurrentTaskHandle_exit:


word32 xTaskGetSchedulerState(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      xTimerGenericCommand
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
xTaskGetSchedulerState_entry:
l23030D2E:
	word32 a5_12 = Mem0[0x4200DE64<32>:int32]
	word32 a0_10 = 1<32>
	branch a5_12 == 0<32> l23030D48
l23030D3A:
	a5_12 = 0x4200E000<32>
	a0_10 = CONVERT(Mem0[0x4200DE50<32>:int32] <u 1<i32>, bool, word32) << 1<i32>
l23030D48:
	a5Out = a5_12
	return a0_10
xTaskGetSchedulerState_exit:


word32 xTaskPriorityInherit(word32 a0, word32 a2, word32 a3, word32 a4, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a1 s4
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
xTaskPriorityInherit_entry:
l23030D4A:
	branch a0 == 0<32> l23030DC4
l23030DC4:
	s4Out = s4
	return a1
l23030D4C:
	word32 a4_21 = Mem18[a4 + 44<i32>:word32]
	branch a3 >=u a4_21 l23030DAC
l23030DAC:
l23030D6C:
	word32 a0_28 = Mem18[a4_21 + 24<i32>:word32]
	branch a4_21 < 0<32> l23030D7E
l23030D72:
	Mem34[32<i32> - a2 + 24<i32>:word32] = a0_28
l23030D7E:
	word32 s0_40 = Mem39[a3 + 20<i32>:word32]
	word32 a4_43 = a3 * 0x14<32> + 0x4201253C<32>
	branch a3 == a4_43 l23030DC8
l23030DC8:
	word32 s0_51
	word32 a4_165
	word32 a5_166
	branch uxListRemove(a3, a4_43, out a4_165, out a5_166) != 0<32> l23030DFE
l23030DFE:
	s0_51 = s0_40
l23030DD4:
	s0_51 = Mem39[a3 + 44<i32>:word32]
	branch Mem39[a3 * 0x14<32> + 0x4201253C<32>:word32] != 0<32> l23030E06
l23030DEC:
	Mem65[~(1<32> << a3) & a2:word32] = Mem39[a2:word32]
l23030E06:
	word32 a4_70 = Mem67[a2:word32]
	Mem84[a3 + 44<i32>:word32] = s0_51
	word32 a5_80 = 1<32> << a3 | a2
	Mem85[a5_80:word32] = a4_70
	word32 a5_167
	vListInsertEnd(s0_40 + 4<i32>, a4_70, a5_80, out a5_167)
	a1 = s0_40 + 4<i32>
l23030DB6:
	s4Out = dwArg04
	return a1
l23030D96:
	Mem102[Mem39[a4_43 + 44<i32>:word32] + 44<i32>:word32] = s0_40
	s4Out = dwArg04
	return a1
xTaskPriorityInherit_exit:


word32 xTaskPriorityDisinherit(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvCopyDataToQueue
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a4 a5 s1
// Trashed: a0 a1 a2 a4 a5 a6 s1 tp
// Preserved: s0 sp
xTaskPriorityDisinherit_entry:
l23030E2C:
	branch a0 == 0<32> l23030E7A
l23030E7A:
	a0Out = 0<32>
	a1Out = a1
	a4Out = a4
	a5Out = a5
	return s1
l23030E2E:
	word32 a5_19 = Mem0[0x4200DE38<32>:int32]
	branch a5_19 == a0 l23030E48
l23030E44:
	vAssertCalled(a4, mstatus, out a5_19)
l23030E48:
	word32 a5_134
	word32 s0_31
	branch a5_19 == 0<32> l23030E66
l23030E66:
	word32 a5_26
	vAssertCalled(a4, mstatus, out a5_26)
	s0_31 = Mem14[a4 + 80<i32>:word32]
	Mem33[a5_26 + 0x53<32>:word32] = s0_31
	a5_134 = a5_26 + 0xFFFFFFFF<32>
	branch a3 != a4 l23030E58
l23030E78:
l23030E4C:
	s0_31 = Mem14[a4 + 80<i32>:word32]
	a5_134 = a5_19 + 0xFFFFFFFF<32>
	Mem37[a5_134 + 84<i32>:word32] = s0_31
	branch a3 == a4 l23030E5A
l23030E58:
	branch a5_134 == 0<32> l23030E7E
l23030E7E:
	word32 s1_40 = s0_31 + 4<i32>
	word32 a4_45
	word32 a5_152
	branch uxListRemove(a3, a4, out a4_45, out a5_152) == 0<32> l23030ED2
l23030ED2:
	branch Mem47[a4_45 * 0x14<32> + 0x4201253C<32>:word32] != 0<32> l23030E9A
l23030EF2:
	Mem63[~(1<32> << a4_45) & a3:word32] = Mem47[a3:word32]
l23030E8A:
l23030E9A:
	word32 s0_70 = Mem69[a3 + 80<i32>:word32]
	word32 a2_75 = Mem69[a1:word32]
	Mem84[a3 + 44<i32>:word32] = s0_70
	Mem85[s0_70 + 24<i32>:word32] = 32<i32> - a3
	word32 a5_83 = 1<32> << a3 | a1
	Mem90[a5_83:word32] = a2_75
	word32 a5_92
	vListInsertEnd(s1_40, a3 * 0x14<32>, a5_83, out a5_92)
	a0Out = 1<32>
	a1Out = s1_40
	a4Out = a3 * 0x14<32>
	a5Out = a5_92
	return s1_40
l23030E5A:
	a0Out = 0<32>
	a1Out = a1
	a4Out = a4
	a5Out = a5_134
	return s1
xTaskPriorityDisinherit_exit:


word32 vTaskPriorityDisinheritAfterTimeout(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, ptr32 & a1Out, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a1 a3 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
vTaskPriorityDisinheritAfterTimeout_entry:
l23030F04:
	branch a0 == 0<32> l23030F52
l23030F52:
	a1Out = a1
	a3Out = a3
	s2Out = s2
	return s1
l23030F06:
	word32 s2_198
	word32 a0_14 = Mem12[a5 + 84<i32>:word32]
	word32 s1_16 = a1
	branch a5 == 0<32> l23030F44
l23030F44:
	a2 = vAssertCalled(a4, mstatus, out a5)
	s2_198 = Mem12[a0_14 + 80<i32>:int32]
	branch s2_198 >=u a1 l23030F20
l23030F50:
l23030F18:
	s2_198 = Mem12[a0_14 + 80<i32>:int32]
	branch s2_198 <u a1 l23030F3A
l23030F3A:
	s2_198 = a1
	branch a5 != a1 l23030F26
l23030F42:
l23030F20:
	branch a5 == s2_198 l23030F2E
l23030F26:
	word32 s0_38 = Mem12[a3 + 84<i32>:word32]
	branch a3 == 1<32> l23030F54
l23030F54:
	word32 a4_41 = Mem12[0x4200DE38<32>:int32]
	branch a4_41 == s0_38 l23030FCC
l23030FCC:
	a2 = vAssertCalled(a4_41, mstatus, out a5)
l23030F60:
	word32 s0_50 = Mem12[a4_41 + 24<i32>:word32]
	Mem53[s0_50 + 44<i32>:word32] = s2_198
	branch a4_41 < 0<32> l23030F76
l23030F6A:
	s2_198 = 32<i32> - s2_198
	Mem56[s0_50 + 24<i32>:word32] = s2_198
l23030F76:
	word32 a4_60 = a5 << 2<u32>
	word32 s0_64 = Mem63[a4_60 + 20<i32>:word32]
	s1_16 = 0x4201253C<32>
	branch a4_60 != (a5 + a4_60 << 2<i32>) + 0x4201253C<32> l23030F2E
l23030F8E:
	word32 a3_114
	word32 a4_206
	word32 a5_207
	word32 a0_72 = uxListRemove(a3, a4_60, out a4_206, out a5_207)
	branch a0_72 == 0<32> l23030FD4
l23030FD4:
	a3_114 = 1<32> << a0_72
	branch Mem63[a0_72 * 0x14<32> + 0x4201253C<32>:word32] == 0<32> l23030FF6
l23030FF6:
	a2 = ~a3_114 & a1
	Mem92[a2:word32] = Mem63[a1:word32]
l23030FEC:
l23030F9A:
	a3_114 = 1<32> << a0_72
l23030FAE:
	word32 a4_109 = Mem108[a2:word32]
	word32 a3_115 = a3_114 | a2
	Mem116[a3_115:word32] = a4_109
	0<32> = dwArg38
l23030FC8_thunk_vListInsertEnd:
	word32 a5_208
	vListInsertEnd(s0_64 + 4<i32>, a4_109, a0_72 * 5<32>, out a5_208)
	a1Out = s0_64 + 4<i32>
	a3Out = a3_115
	s2Out = s0_64 + 4<i32>
	return 0x4201253C<32>
l23030F2E:
	0<32> = dwArg38
	a1Out = a1
	a3Out = a3
	s2Out = s2_198
	return s1_16
vTaskPriorityDisinheritAfterTimeout_exit:


word32 vTaskEnterCritical(word32 a4, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_hwdesc_init
//      txl_frame_get
//      rxu_swdesc_upload_evt
//      bl_tx_resend
//      bl_tx_try_flush
//      bl_output
//      my_pbuf_free_custom
//      stateConnectedIPNoEnter
//      cmd_wifi_dump
//      wifi_mgmr_sta_ip_unset
//      wifi_mgmr_scan_filter_hidden_ssid
//      bl_sys_time_sync_state
//      xEventGroupWaitBits
//      prvUnlockQueue
//      xQueueGenericReset
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      uxQueueMessagesWaiting
//      vQueueWaitForMessageRestricted
//      xStreamBufferSend
//      xStreamBufferReceive
//      prvCheckForValidListAndQueue
//      pvTimerGetTimerID
//      bl_dma_copy
//      loopset_led_trigger
//      sys_arch_protect
//      sntp_recv
//      sntp_get_time
//      vfs_uart_poll
//      bloop_evt_set_async
//      bloop_run
// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
vTaskEnterCritical_entry:
l2303100A:
	__csrrc(mstatus, 8<32>)
	word32 a5_6 = Mem0[0x4200DE64<32>:int32]
	branch a5_6 == 0<32> l2303101C
l2303101C:
	a5Out = a5_6
	return a4
l23031018:
l23031018_thunk_vTaskEnterCritical.part.7:
	word32 a5_9
	word32 a4_8 = vTaskEnterCritical.part.7(a4, out a5_9)
	a5Out = a5_9
	return a4_8
vTaskEnterCritical_exit:


word32 vTaskExitCritical(word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_hwdesc_init
//      txl_frame_get
//      rxu_swdesc_upload_evt
//      bl_tx_resend
//      bl_tx_try_flush
//      bl_output
//      my_pbuf_free_custom
//      stateConnectedIPNoEnter
//      cmd_wifi_dump
//      wifi_mgmr_sta_ip_unset
//      wifi_mgmr_scan_filter_hidden_ssid
//      bl_sys_time_sync_state
//      xEventGroupWaitBits
//      prvUnlockQueue
//      xQueueGenericReset
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      uxQueueMessagesWaiting
//      vQueueWaitForMessageRestricted
//      xStreamBufferSend
//      xStreamBufferReceive
//      prvCheckForValidListAndQueue
//      pvTimerGetTimerID
//      bl_dma_copy
//      loopset_led_trigger
//      sys_arch_unprotect
//      sntp_recv
//      sntp_get_time
//      vfs_uart_poll
//      bloop_evt_set_async
//      bloop_run
// MayUse:  a3:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
vTaskExitCritical_entry:
l2303101E:
	word32 a5_20 = Mem0[0x4200DE64<32>:int32]
	branch a5_20 == 0<32> l23031038
l23031028:
	a5_20 = Mem0[Mem0[0x4200DE38<32>:int32] + 68<i32>:word32]
	branch a5_20 == 0<32> l23031038
l23031038:
	a4Out = a4
	a5Out = a5_20
	return a3
l23031034:
l23031034_thunk_vTaskExitCritical.part.8:
	word32 a4_12
	word32 a5_13
	word32 a3_11 = vTaskExitCritical.part.8(a3, mstatus, out a4_12, out a5_13)
	a4Out = a4_12
	a5Out = a5_13
	return a3_11
vTaskExitCritical_exit:


word32 vTaskList(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s3, word32 s5, word32 s7, word32 s9, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg34, word32 dwArg78, word32 dwArg9C, word32 dwArgB8, word32 dwArgC8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ps_cmd
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s5:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: a7 ra s10 s11 s7 s9 sp t0 t4
vTaskList_entry:
l2303103A:
	word32 a5_28 = Mem26[Mem26[s1:word32]:word32]
	Mem31[a0:byte] = 0<8>
	word32 a0_38
	word32 a3_41
	word32 a4_42
	word32 s1_46
	word32 s3_396
	word32 s4_397
	word32 s8_398
	word32 a1_391
	word32 a2_392
	word32 s2_395
	word32 a5_393
	word32 a6_394
	pvPortMalloc(ra, s1, a5_28 * 0x24<32>, a3, a4, a5_28, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_46, out a0_38, out a1_391, out a2_392, out a3_41, out a4_42, out a5_393, out a6_394, out s2_395, out s3_396, out s4_397, out s8_398)
	branch a0_38 == 0<32> l2303111E
l2303111E:
	0<32> = dwArg0128
	return s1_46
l23031072:
	word32 a0_67
	word32 s8_77
	word32 a1_104
	word32 a5_189
	word32 s0_108 = uxTaskGetSystemState(a0_38, s1_46, 0<32>, a3_41, a4_42, mstatus, s5, dwArgC8, dwArg0108, dwArg0148, out a0_67, out a1_104, out a5_189, out s8_77)
	branch a0_67 == 0<32> l23031100
l2303107E:
	word32 s1_192 = s8_77
	word32 s6_150 = 0x23082000<32>
	word32 s5_177 = 4<32>
	word32 s4_121 = 0xE<32>
	word32 s3_175 = 32<i32>
l2303109E:
	branch s5_177 <u CONVERT(Mem96[s1_192 + 12<i32>:byte], byte, word32) l230310AE
l230310A8:
l230310AE:
	word32 a5_400
	word32 a4_399
	strcpy(s0_108, a1_104, out a4_399, out a5_400)
	word32 a1_401
	word32 a2_402
	word32 a5_405
	word32 a3_403
	word32 a4_404
	word32 a0_114 = strlen(s0_108, out a1_401, out a2_402, out a3_403, out a4_404, out a5_405)
	branch s4_121 <u a0_114 l230310D2
l230310C0:
	word32 a0_122 = a0_114 + s0_108
	word32 a5_123 = s0_108 + 15<i32>
l230310C6:
	Mem126[a0_122:byte] = SLICE(s3_175, byte, 0)
	a0_122 = a0_122 + 1<32>
	branch a5_123 != a0_122 l230310C6
l230310D0:
	a0_114 = 0xF<32>
l230310D2:
	word32 s0_133 = s0_108 + a0_114
	Mem134[s0_133:byte] = 0<8>
	word32 s0_170
	word32 s1_171
	word32 s2_174
	word32 s11_411
	word32 a0_406
	word32 a5_407
	word32 s10_410
	word32 s7_408
	word32 s9_409
	ra = sprintf(ra, s0_133, s6_150 + 2004<i32>, dwLoc18, dwArg08, dwArg34, s9, s7, dwArg78, dwArg9C, out s0_170, out s1_171, out a0_406, out a5_407, out s2_174, out s3_175, out s4_121, out s5_177, out s6_150, out s7_408, out s9_409, out s10_410, out s11_411)
	s1_192 = s1_171 + 36<i32>
	word32 a2_412
	word32 a3_413
	word32 a4_414
	s0_108 = s0_170 + strlen(s0_170, out a1_104, out a2_412, out a3_413, out a4_414, out a5_189)
	branch s1_171 + 36<i32> != s2_174 l2303109E
l23031100:
	0<32> = dwArg0128
l2303111A_thunk_vPortFree:
	word32 s1_218
	word32 a6_422
	word32 t3_424
	word32 s4_423
	word32 a3_419
	word32 a5_421
	word32 a4_420
	word32 a0_416
	word32 a2_418
	word32 a1_417
	word32 s0_415
	vPortFree(s5, dwArgB8, a5_189, mstatus, dwArg0158, dwArg0198, out s0_415, out s1_218, out a0_416, out a1_417, out a2_418, out a3_419, out a4_420, out a5_421, out a6_422, out s4_423, out t3_424)
	return s1_218
vTaskList_exit:


word32 uxTaskResetEventItemValue(word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
// MayUse:  a3:[0..31] a4:[0..31]
// LiveOut: a3
// Trashed: a2 a3 a5
// Preserved: sp
uxTaskResetEventItemValue_entry:
l23031138:
	word32 a3_12 = Mem0[a3 + 44<i32>:word32]
	Mem16[32<i32> - a3_12 + 24<i32>:word32] = a4
	return a3_12
uxTaskResetEventItemValue_exit:


word32 pvTaskIncrementMutexHeldCount(word32 a0, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
pvTaskIncrementMutexHeldCount_entry:
l23031154:
	branch a4 == 0<32> l23031168
l23031160:
	a3 = Mem0[a4 + 84<i32>:word32]
	Mem11[a4 + 0x55<32>:word32] = a3
	a4 = a4 + 1<32>
l23031168:
	word32 a5_15 = Mem14[a0:word32]
	a4Out = a4
	a5Out = a5_15
	return a3
pvTaskIncrementMutexHeldCount_exit:


word32 ulTaskNotifyTake(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg0128, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipc_emb_wait
//      bloop_run
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0018:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a3 a4 s1 s2 s3
// Trashed: a2 a3 a4 a5 s0 s1 s2 s3 t3 tp
// Preserved: a0 a1 a6 s4 s8 sp
ulTaskNotifyTake_entry:
l2303116C:
	__csrrc(mstatus, 8<32>)
	word32 s2_15 = a0
	word32 s3_17 = a1
	branch a5 == 0<32> l23031190
l2303118C:
	a4 = vTaskEnterCritical.part.7(a4, out a5)
l23031190:
	word32 a5_29 = Mem13[a5 + 88<i32>:word32]
	branch a5_29 != 0<32> l230311AA
l2303119E:
	Mem32[a5_29 + 92<i32>:byte] = 1<8>
	a4 = 1<32>
	branch a1 != 0<32> l23031204
l23031204:
	word32 a2_216
	word32 a1_215
	word32 s1_214
	word32 s4_217
	prvAddCurrentTaskToDelayedList(a1, 1<32>, a2, a3, 1<32>, dwArg18, out s1_214, out a0, out a1_215, out a2_216, out a4, out a5_29, out s2_15, out s3_17, out s4_217)
	__syscall()
l230311AA:
	branch a5_29 == 0<32> l230311B4
l230311AE:
	a5_29 = Mem55[a5_29 + 68<i32>:word32]
	branch a5_29 != 0<32> l230311FE
l230311FE:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_29)
l230311B4:
	__csrrc(mstatus, 8<32>)
	branch a5_29 == 0<32> l230311C0
l230311BC:
	word32 a5_218
	a4 = vTaskEnterCritical.part.7(a4, out a5_218)
l230311C0:
	word32 a5_81 = Mem55[a0 + 88<i32>:word32]
	branch a0 == 0<32> l230311D0
l230311C6:
	branch s2_15 == 0<32> l230311F6
l230311F6:
	a4 = a0 + -1<i32>
	Mem88[a4 + 88<i32>:word32] = a5_81
l230311CC:
	Mem89[a5_81 + 88<i32>:word32] = 0<32>
l230311D0:
	Mem93[a5_81 + 92<i32>:byte] = 0<8>
	word32 s1_94 = Mem93[a5_81:word32]
	branch a5_81 == 0<32> l230311E8
l230311DA:
	branch Mem93[a5_81 + 68<i32>:word32] == 0<32> l230311E8
l230311E0:
	word32 a5_219
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_219)
l230311E8:
	0<32> = dwArg0128
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	s2Out = s2_15
	s3Out = s3_17
	return s1_94
ulTaskNotifyTake_exit:


word32 xTaskNotifyWait(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg0128, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
//      xStreamBufferReceive
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0018:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a4 a5 s0 s1 s2 s3 s4 s5
// Trashed: a0 a2 a3 a4 a5 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: a1 a6 sp
xTaskNotifyWait_entry:
l23031212:
	__csrrc(mstatus, 8<32>)
	word32 s1_19 = a0
	word32 s2_107 = a1
	word32 s4_23 = a2
	word32 s3_28 = 0x4200DE64<32>
	word32 a5_29 = Mem17[0x4200DE64<32>:int32]
	branch a5_29 == 0<32> l23031240
l2303123C:
	vTaskEnterCritical.part.7(a4, out a5_29)
l23031240:
	word32 a4_37 = 2<32>
	branch CONVERT(Mem17[a5_29 + 92<i32>:byte], byte, word32) == 2<32> l2303126C
l23031254:
	word32 a5_44 = Mem17[a0 + 88<i32>:word32]
	s1_19 = ~a0 & a0
	Mem46[s1_19 + 88<i32>:word32] = a5_44
	Mem48[a5_44 + 92<i32>:byte] = 1<8>
	a4_37 = 1<32>
	branch a3 != 0<32> l230312E4
l230312E4:
	word32 a1_267
	word32 a2_268
	word32 a5_269
	word32 a0_266
	prvAddCurrentTaskToDelayedList(a3, 1<32>, a2, a3, 1<32>, dwArg18, out s1_19, out a0_266, out a1_267, out a2_268, out a4_37, out a5_269, out s2_107, out s3_28, out s4_23)
	__syscall()
l2303126C:
	word32 a3_134
	word32 a5_71 = Mem70[s3_28:int32]
	a3_134 = a3
	branch a5_71 == 0<32> l23031278
l23031272:
	a3_134 = a3
	branch Mem70[a5_71 + 68<i32>:word32] != 0<32> l230312DE
l230312DE:
	word32 a5_270
	a3_134 = vTaskExitCritical.part.8(a3, mstatus, out a4_37, out a5_270)
l23031278:
	__csrrc(mstatus, 8<32>)
	word32 a5_83 = Mem70[s3_28:int32]
	branch a5_83 == 0<32> l23031286
l23031282:
	vTaskEnterCritical.part.7(a4_37, out a5_83)
l23031286:
	branch s4_23 == 0<32> l23031292
l2303128A:
	a5_83 = Mem70[a5_83 + 88<i32>:word32]
	Mem96[s4_23:word32] = a5_83
l23031292:
	word32 a4_100 = 2<32>
	word32 a5_102 = CONVERT(Mem98[a5_83 + 92<i32>:byte], byte, word32)
	branch a5_102 != 2<32> l230312B2
l230312A0:
	word32 s2_109 = ~s2_107
	a5_102 = Mem98[0x5A<32>:word32]
	Mem113[a5_102 + 88<i32>:word32] = s2_109 & 2<32>
	s2_107 = s2_109 & 2<32>
l230312B2:
	Mem117[a5_102 + 92<i32>:byte] = 0<8>
	word32 a5_121 = Mem117[s3_28:int32]
	branch a5_121 == 0<32> l230312CC
l230312BE:
	a5_121 = Mem117[a5_121 + 68<i32>:word32]
	branch a5_121 == 0<32> l230312CC
l230312C4:
	vTaskExitCritical.part.8(a3_134, mstatus, out a4_100, out a5_121)
l230312CC:
	0<32> = dwArg0128
	s1Out = s1_19
	a2Out = dwArg0100
	a4Out = a4_100
	a5Out = a5_121
	s2Out = s2_107
	s3Out = s3_28
	s4Out = dwArg78
	s5Out = a3
	return dwArgE4
xTaskNotifyWait_exit:


word32 xTaskGenericNotify(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg38, word32 dwArg58, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_irq_handler
//      bl_tx_notify
//      xStreamBufferSend
//      xStreamBufferReceive
//      bloop_evt_set_async
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
xTaskGenericNotify_entry:
l230312F2:
	word32 a2_26
	word32 s0_17 = a0
	word32 s1_21 = a2
	a2_26 = a2
	branch a0 == 0<32> l2303141A
l2303141A:
	word32 a5_290
	a2_26 = vAssertCalled(a4, mstatus, out a5_290)
l2303130C:
	__csrrc(mstatus, 8<32>)
	word32 a5_32 = Mem15[0x4200DE64<32>:int32]
	branch a5_32 != 0<32> l2303138A
l2303138A:
	a4 = vTaskEnterCritical.part.7(a4, out a5_32)
l2303131E:
	branch a3 == 0<32> l23031328
l23031322:
	s0_17 = Mem15[a5_32 + 88<i32>:word32]
	Mem41[a3:word32] = a5_32
l23031328:
	word32 s2_46 = CONVERT(Mem45[s0_17 + 92<i32>:byte], byte, word32)
	Mem48[s0_17 + 92<i32>:byte] = 2<8>
	word32 s2_264 = s2_46 & 255<i32>
	branch a2 >u 4<32> l2303134C
l2303134C:
	word32 s0_56 = Mem48[a4 + 88<i32>:word32]
	branch a4 == 0xFFFFFFFF<32> l23031358
l23031354:
	word32 a5_291
	a2_26 = vAssertCalled(a4, mstatus, out a5_291)
l23031358:
	word32 a1_238
	a1_238 = a1
	branch (s2_46 & 255<i32>) == 1<32> l23031390
l23031390:
	word32 a4_292
	word32 a5_293
	uxListRemove(a3, a4, out a4_292, out a5_293)
	a4 = Mem48[a2_26:word32]
	s2_264 = (s2_46 & 255<i32>) << a3 | a2_26
	Mem92[a4:word32] = s2_264
	word32 a5_94
	vListInsertEnd(s0_56 + 4<i32>, a4, a3 * 0x14<32>, out a5_94)
	s1_21 = s0_56 + 4<i32>
	a1_238 = s0_56 + 4<i32>
	branch a5_94 == 0<32> l230313D2
l230313CE:
	word32 a5_294
	vAssertCalled(a4, mstatus, out a5_294)
l230313D2:
	branch Mem92[Mem92[0x4200DE38<32>:int32] + 44<i32>:word32] >=u a4 l2303135E
l230313E2:
	__syscall()
l2303135E:
	word32 a5_112 = Mem111[0x4200DE64<32>:int32]
	branch a5_112 == 0<32> l2303137A
l23031366:
	a5_112 = Mem111[Mem111[0x4200DE38<32>:int32] + 68<i32>:word32]
	branch a5_112 == 0<32> l2303137A
l23031372:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_112)
l2303137A:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_21
	a0Out = 1<32>
	a1Out = a1_238
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	a5Out = a5_112
	s2Out = s2_264
	s3Out = 0x4200DE64<32>
	s4Out = a1
	mstatusOut = mstatus
	return ra
l2303133C:
	word32 s0_156
	word32 s1_157
	word32 s2_158
	word32 s4_159
	word32 ra_160
	word32 s3_161
	word32 a0_162
	word32 a1_163
	word32 a2_164
	word32 a3_165
	word32 mstatus_166
	word32 a5_167
	word32 a4_168
	call 4<32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:0x230827AC<32>,a3:a3,a4:a4_55,mstatus:mstatus,ra:ra,s0:s0_42,s1:Mem48[4<32>:word32],s2:s2_46 & 255<i32>,s3:0x4200DE64<32>,s4:a1,Stack +0044:dwArg14,Stack +0068:dwArg38,Stack +0088:dwArg58,Stack +0114:dwArgE4,Stack +0130:dwArg0100,Stack +0134:dwArg0104,Stack +0158:dwArg0128
		defs: a0:a0_162,a1:a1_163,a2:a2_164,a3:a3_165,a4:a4_168,a5:a5_167,mstatus:mstatus_166,ra:ra_160,s0:s0_156,s1:s1_157,s2:s2_158,s3:s3_161,s4:s4_159
	s0Out = s0_156
	s1Out = s1_157
	a0Out = a0_162
	a1Out = a1_163
	a2Out = a2_164
	a3Out = a3_165
	a4Out = a4_168
	a5Out = a5_167
	s2Out = s2_158
	s3Out = s3_161
	s4Out = s4_159
	mstatusOut = mstatus_166
	return ra_160
xTaskGenericNotify_exit:


word32 xTaskGenericNotifyFromISR(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg44, word32 dwArg84, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSendFromISR
//      xStreamBufferReceiveFromISR
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0084:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s4 s8 t3 tp
// Preserved: sp
xTaskGenericNotifyFromISR_entry:
l23031420:
	word32 s0_13 = a0
	branch a0 == 0<32> l230314D4
l230314D4:
	vAssertCalled(a4, mstatus, out a5)
	dwLoc1C = a2
	a2 = dwArg84
	s0_13 = a3
l23031430:
	branch a3 == 0<32> l23031436
l23031432:
	s0_13 = Mem31[a5 + 88<i32>:word32]
	Mem33[a5:word32] = a3
l23031436:
	word32 s1_37 = CONVERT(Mem36[s0_13 + 92<i32>:byte], byte, word32)
	Mem39[s0_13 + 92<i32>:byte] = 2<8>
	word32 s1_234 = s1_37 & 255<i32>
	branch a2 >u 4<32> l2303145A
l2303145A:
	word32 s0_104 = Mem39[a4 + 88<i32>:word32]
	branch a4 == 0xFFFFFFFF<32> l23031466
l23031462:
	word32 a5_262
	a2 = vAssertCalled(a4, mstatus, out a5_262)
l23031466:
	word32 a4_103
	word32 a5_105 = 1<32>
	a4_103 = a4
	branch (s1_37 & 255<i32>) == 1<32> l2303147A
l2303147A:
	word32 s0_55 = Mem39[0x29<32>:word32]
	branch false l23031482
l2303147E:
	word32 a5_263
	a2 = vAssertCalled(a4, mstatus, out a5_263)
l23031482:
	word32 a5_62 = Mem39[0x4200DE50<32>:int32]
	branch a5_62 == 0<32> l230314E6
l230314E6:
	word32 a5_265
	word32 a4_264
	uxListRemove(a3, a4, out a4_264, out a5_265)
	a3 = Mem39[a1:word32]
	word32 a5_89 = 1<32> << a2 | a1
	Mem92[a5_89:word32] = a3
	word32 a4_83 = a2 * 5<32>
	word32 a5_266
	vListInsertEnd(s0_55 + 4<i32>, a4_83 << 2<i32>, a5_89, out a5_266)
	s1_234 = s0_55 + 4<i32>
	a4_103 = a4_83 << 2<i32>
l2303148C:
	word32 a5_267
	vListInsertEnd(s0_55 + 24<i32>, a4, a5_62, out a5_267)
	a4_103 = a4
l2303149C:
	s0_104 = Mem101[a4_103 + 44<i32>:word32]
	a5_105 = Mem101[Mem101[0x4200DE38<32>:int32] + 44<i32>:word32]
	branch a5_105 >=u a4_103 l2303146C
l230314AC:
	branch a4 == 0<32> l230314B6
l230314B0:
	Mem112[a4:word32] = 1<32>
l230314B6:
	Mem115[0x4200EE6C<32>:word32] = 1<32>
	a5_105 = 0x4200E000<32>
	a4_103 = 1<32>
l2303146C:
	s0Out = s0_104
	s1Out = s1_234
	a3Out = a3
	a4Out = a4_103
	a5Out = a5_105
	s2Out = a4
	mstatusOut = mstatus
	return ra
l2303144A:
	word32 s0_139
	word32 s2_140
	word32 ra_141
	word32 s1_142
	word32 a4_144
	word32 a3_145
	word32 a5_146
	word32 tp_149
	word32 mstatus_154
	call 0x230827C0<32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:Mem39[0x230827C0<32>:word32],a3:a3,a4:a4,a5:0x230827C0<32>,mstatus:mstatus,ra:ra,s0:s0_34,s1:s1_37 & 255<i32>,s2:a4,Stack +0004:dwLoc1C_175,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0048:dwArg28,Stack +0064:dwArg44,Stack +00A4:dwArg84,tp:tp_149
		defs: a3:a3_145,a4:a4_144,a5:a5_146,mstatus:mstatus_154,ra:ra_141,s0:s0_139,s1:s1_142,s2:s2_140,tp:tp_149
	s0Out = s0_139
	s1Out = s1_142
	a3Out = a3_145
	a4Out = a4_144
	a5Out = a5_146
	s2Out = s2_140
	mstatusOut = mstatus_154
	return ra_141
xTaskGenericNotifyFromISR_exit:


void vTaskNotifyGiveFromISR(word32 a0, word32 a1, word32 a2, word32 a4, word32 mstatus, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_irq_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
vTaskNotifyGiveFromISR_entry:
l2303153C:
	branch a0 == 0<32> l230315F6
l230315F6:
	word32 a5_156
	a2 = vAssertCalled(a4, mstatus, out a5_156)
l2303154C:
	word32 a4_23 = CONVERT(Mem11[a0 + 92<i32>:byte], byte, word32)
	Mem24[a0 + 92<i32>:byte] = 2<8>
	Mem28[0x5B<32>:word32] = Mem24[0x5A<32>:word32]
	branch a4_23 == 1<32> l2303156E
l2303156E:
	word32 s0_29 = Mem28[0x2B<32>:word32]
	branch false l23031576
l23031572:
	word32 a5_157
	a2 = vAssertCalled(a4_23, mstatus, out a5_157)
l23031576:
	word32 a5_35 = Mem28[0x4200DE50<32>:int32]
	branch a5_35 == 0<32> l230315BC
l230315BC:
	word32 a5_159
	word32 a4_158
	uxListRemove(1<32>, a4_23, out a4_158, out a5_159)
	word32 a5_59 = 1<32> << a2 | a1
	Mem62[a5_59:word32] = Mem28[a1:word32]
	word32 a4_53 = a2 * 5<32>
	word32 a5_160
	vListInsertEnd(s0_29 + 4<i32>, a4_53 << 2<i32>, a5_59, out a5_160)
	a4_23 = a4_53 << 2<i32>
l23031580:
	word32 a5_161
	vListInsertEnd(s0_29 + 24<i32>, a4_23, a5_35, out a5_161)
l23031590:
	branch Mem71[Mem71[0x4200DE38<32>:int32] + 44<i32>:word32] >=u a4_23 l23031562
l230315A0:
	branch a1 == 0<32> l230315A6
l230315A2:
	Mem80[1<32>:word32] = a1
l230315A6:
	Mem90[0x4200EE6C<32>:word32] = 1<32>
	0<32> = dwArg38
	return
l23031562:
	0<32> = dwArg38
	return
vTaskNotifyGiveFromISR_exit:


word32 xTaskNotifyStateClear(word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
//      xStreamBufferReceive
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a2 a3 a4 a5 s0 s1 s4 s8 t3
// Preserved: sp
xTaskNotifyStateClear_entry:
l230315FC:
	word32 s1_11 = a0
	branch a0 == 0<32> l23031650
l23031650:
	a5 = 0x4200E000<32>
	s1_11 = Mem9[0x4200DE38<32>:int32]
l23031608:
	__csrrc(mstatus, 8<32>)
	branch a5 == 0<32> l2303161C
l23031618:
	word32 a5_98
	vTaskEnterCritical.part.7(a4, out a5_98)
l2303161C:
	word32 a5_28 = CONVERT(Mem9[s1_11 + 92<i32>:byte], byte, word32)
	word32 a4_29 = 2<32>
	branch a5_28 != 2<32> l2303162E
l23031628:
	Mem31[s1_11 + 92<i32>:byte] = 0<8>
l2303162E:
	branch a5_28 == 0<32> l23031646
l23031632:
	a5_28 = Mem34[Mem34[0x4200DE38<32>:int32] + 68<i32>:word32]
	branch a5_28 == 0<32> l23031646
l2303163E:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4_29, out a5_28)
l23031646:
	a4Out = a4_29
	a5Out = a5_28
	return a3
xTaskNotifyStateClear_exit:


word32 prvCheckForValidListAndQueue(word32 a3, word32 a4, word32 mstatus, word32 dwArg38, word32 dwArg0118, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTimerCreateTimerTask
//      xTimerCreateStatic
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 a6 s1 s2 s3 s4 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
prvCheckForValidListAndQueue_entry:
l2303165A:
	word32 a5_16
	vTaskEnterCritical(a4, mstatus, out a5_16)
	branch a5_16 == 0<32> l23031682
l23031682:
	vListInitialise(0x42012860<32>)
	vListInitialise(0x42012874<32>)
	Mem32[0x4200EE70<32>:word32] = 0x42012860<32>
	Mem39[0x4200EE74<32>:word32] = 0x42012874<32>
	word32 a0_40
	word32 a4_108
	word32 a5_109
	Mem54[a0_40:word32] = xQueueGenericCreateStatic(4<32>, 0x10<32>, 0x42012820<32>, 0x42012888<32>, 0<32>, mstatus, dwArg0118, out s1, out a0_40, out a3, out a4_108, out a5_109, out s2, out s3, out s4)
	branch a0_40 == 0<32> l23031674
l230316D0:
	a6 = vQueueAddToRegistry(a0_40, 0x23082810<32>, a3)
l23031674:
	0<32> = dwArg38
l2303167E_thunk_vTaskExitCritical:
	word32 a4_72
	word32 a5_110
	word32 a3_71 = vTaskExitCritical(a3, mstatus, out a4_72, out a5_110)
	s1Out = s1
	a3Out = a3_71
	a4Out = a4_72
	a6Out = a6
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return dwArg14
prvCheckForValidListAndQueue_exit:


word32 prvInsertTimerInActiveList(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvTimerTask
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
prvInsertTimerInActiveList_entry:
l230316DE:
	Mem8[a1 + 4<i32>:word32] = a0
	Mem9[a0 + 16<i32>:word32] = a0
	branch a2 <u a1 l230316FC
l230316FC:
	branch a2 >=u a3 l23031706
l23031700:
	branch a1 >=u a3 l230316F6
l23031706:
	word32 a4_63
	word32 a5_24
	vListInsert(Mem9[0x4200DE70<32>:int32], a2, a3, out a4_63, out a5_24)
	a5Out = a5_24
	return 0<32>
l230316EC:
	word32 a2_31 = a2 - a3
	branch a2_31 <u a4 l2303171E
l2303171E:
	word32 a5_39
	word32 a4_62
	vListInsert(Mem9[0x4200DE74<32>:int32], a2_31, a3, out a4_62, out a5_39)
	a5Out = a5_39
	return 0<32>
l230316F6:
	a5Out = a0
	return 1<32>
prvInsertTimerInActiveList_exit:


word32 xTimerCreateTimerTask(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg64, word32 dwArgC8, word32 dwArgF8, word32 dwArg0194, ptr32 & t0Out, ptr32 & a0Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskStartScheduler
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0064:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0194:[0..31]
// LiveOut: a0 a4 t0 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
xTimerCreateTimerTask_entry:
l23031736:
	word32 a6_15
	word32 s1_139
	word32 a3_140
	word32 s2_141
	word32 s3_142
	word32 s4_143
	word32 a4_13
	word32 tp_135 = prvCheckForValidListAndQueue(a3, a4, mstatus, dwArg18, dwArgF8, out s1_139, out a3_140, out a4_13, out a6_15, out s2_141, out s3_142, out s4_143)
	branch Mem5[0x4200DE7C<32>:int32] == 0<32> l23031786
l23031748:
	word32 a0_40
	word32 s0_145
	word32 a2_146
	word32 a3_147
	word32 a5_148
	word32 s2_149
	xTaskCreateStatic(ra, 0x23031932<32>, 0x23082818<32>, dwArg64, 0<32>, 0x1F<32>, vApplicationGetTimerTaskMemory(fp + 0xFFFFFFE4<32>, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>), a6_15, mstatus, 0<32>, dwArg04, dwArgC8, dwArg0194, out tp_135, out t0, out s0_145, out a0_40, out a2_146, out a3_147, out a4_13, out a5_148, out s2_149)
	Mem63[0x4200EE80<32>:word32] = a0_40
	branch a0_40 == 0<32> l23031786
l23031786:
	word32 a5_144
	vAssertCalled(a4_13, mstatus, out a5_144)
	t0Out = t0
	a0Out = 0<32>
	a4Out = a4_13
	return tp_135
l2303177E:
	t0Out = t0
	a0Out = 1<32>
	a4Out = a4_13
	return tp_135
xTimerCreateTimerTask_exit:


word32 xTimerCreateStatic(word32 a1, word32 a3, word32 a4, word32 a5, word32 a7, word32 mstatus, word32 dwArg08, word32 dwArgE8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoEnter
//      stateDisconnect_enter
//      wifi_mgmr_start
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a7:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
xTimerCreateStatic_entry:
l23031792:
	word32 s1_142 = a1
	branch a7 == 44<i32> l230317BE
l230317BA:
	word32 a5_150
	vAssertCalled(a4, mstatus, out a5_150)
l230317BE:
	branch a5 == 0<32> l2303180E
l2303180E:
	word32 a5_151
	vAssertCalled(a4, mstatus, out a5_151)
l230317C2:
	Mem45[a5 + 40<i32>:byte] = 2<8>
	branch a1 == 0<32> l23031808
l23031808:
	word32 a5_152
	vAssertCalled(a4, mstatus, out a5_152)
l230317CA:
	word32 s2_63
	word32 s3_64
	word32 s4_65
	word32 a4_153
	word32 a6_154
	prvCheckForValidListAndQueue(a3, a4, mstatus, dwArg08, dwArgE8, out s1_142, out a3, out a4_153, out a6_154, out s2_63, out s3_64, out s4_65)
	Mem71[a5:word32] = s2_63
	Mem72[s1_142 + 24<i32>:word32] = a5
	Mem73[a5 + 28<i32>:word32] = s4_65
	Mem76[a5 + 32<i32>:word32] = a4
	vListInitialiseItem(a5 + 4<i32>)
	branch s3_64 == 0<32> l230317F4
l230317E8:
	Mem79[a5 + 40<i32>:byte] = SLICE(CONVERT(Mem76[a5 + 40<i32>:byte], byte, word32) | 4<i32>, byte, 0)
l230317F4:
	0<32> = dwArg0128
	s1Out = s1_142
	a3Out = a3
	return dwArgE4
xTimerCreateStatic_exit:


word32 xTimerGenericCommand(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg64, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoExit
//      stateConnectedIPNoEnter
//      stateDisconnect_exit
//      stateDisconnect_enter
//      wifi_mgmr_start
//      prvSwitchTimerLists
//      prvTimerTask
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0064:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xTimerGenericCommand_entry:
l23031814:
	word32 s1_125 = a0
	word32 s2_126 = a3
	word32 s3_127 = a4
	branch a0 == 0<32> l23031880
l23031880:
	vAssertCalled(a4, mstatus, out a5)
l23031828:
	word32 s0_124 = Mem32[a5:word32]
	word32 a0_116 = 0<32>
	branch a5 == 0<32> l23031858
l23031836:
	branch a1 > 5<32> l23031866
l23031866:
	word32 a0_50
	word32 a3_53
	word32 a4_54
	word32 a5_55
	word32 s1_59
	word32 s2_60
	word32 s3_61
	word32 s0_58 = xQueueGenericSendFromISR(a5, fp + -48<i32>, a3, 0<32>, a4, a5, mstatus, a1, dwArgE8, out s1_59, out a0_50, out a3_53, out a4_54, out a5_55, out s2_60, out s3_61)
	s1Out = s1_59
	a0Out = a0_50
	a3Out = a3_53
	a4Out = a4_54
	a5Out = a5_55
	s2Out = s2_60
	s3Out = s3_61
	s4Out = <invalid>
	s5Out = s5
	s6Out = s6
	s8Out = <invalid>
	return s0_58
l23031842:
	word32 a5_255
	word32 a0_75 = xTaskGetSchedulerState(out a5_255)
	branch a0_75 == 2<32> l2303188E
l2303188E:
	word32 a0_83
	word32 a3_86
	word32 a4_87
	word32 a5_88
	word32 s0_91
	word32 s1_92
	word32 s2_93
	word32 s3_94
	word32 s5_96
	word32 s6_97
	word32 a1_256
	word32 a2_257
	word32 a7_258
	word32 s4_259
	word32 s8_260
	xQueueGenericSend(a0_75, fp + -48<i32>, 0<32>, a4, 2<32>, mstatus, a1, dwLoc1C, dwArg64, dwArgD8, dwArg0118, dwArg0158, out s0_91, out s1_92, out a0_83, out a1_256, out a2_257, out a3_86, out a4_87, out a5_88, out a7_258, out s2_93, out s3_94, out s4_259, out s5_96, out s6_97, out s8_260)
	s1Out = s1_92
	a0Out = a0_83
	a3Out = a3_86
	a4Out = a4_87
	a5Out = a5_88
	s2Out = s2_93
	s3Out = s3_94
	s4Out = <invalid>
	s5Out = s5_96
	s6Out = s6_97
	s8Out = <invalid>
	return s0_91
l2303184C:
	word32 a1_261
	word32 a2_262
	word32 a7_263
	word32 s4_264
	word32 s8_265
	xQueueGenericSend(a0_75, fp + -48<i32>, 0<32>, a4, 2<32>, mstatus, a1, dwLoc1C, dwArg64, dwArgD8, dwArg0118, dwArg0158, out s0_124, out s1_125, out a0_116, out a1_261, out a2_262, out a3, out a4, out a5, out a7_263, out s2_126, out s3_127, out s4_264, out s5, out s6, out s8_265)
l23031858:
	s1Out = s1_125
	a0Out = a0_116
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2_126
	s3Out = s3_127
	s4Out = <invalid>
	s5Out = s5
	s6Out = s6
	s8Out = <invalid>
	return s0_124
xTimerGenericCommand_exit:


word32 prvSwitchTimerLists(word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg44, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvTimerTask
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0044:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
prvSwitchTimerLists_entry:
l230318A8:
	word32 s2_15 = 0x4200DE70<32>
l230318DE:
	word32 a5_20 = Mem17[a4:word32]
	branch a4 != 0<32> l230318BE
l230318BE:
	s3 = Mem17[Mem17[s0 + 12<i32>:word32]:int32]
	word32 a4_29
	word32 a5_30
	uxListRemove(a3, a4, out a4_29, out a5_30)
	call a5_30 (retsize: 0;)
		uses: a3:a3_27,a4:a4_29
		defs: a0:a0_33,a4:a4_34
	s0 = Mem17[a5_30 + 32<i32>:word32]
	s1 = s0 + 4<i32>
	word32 a5_36 = CONVERT(Mem17[s0 + 40<i32>:byte], byte, word32)
	branch (a5_36 & 4<32>) != 0<32> l23031904
l23031904:
	s0 = Mem17[(a5_36 & 4<32>) + 24<i32>:word32]
	a3 = 0<32>
	word32 a5_41 = (a5_36 & 4<32>) + s3
	branch s3 >=u a5_41 l23031926
l23031926:
	word32 a5_153
	word32 s4_154
	word32 s8_155
	s0 = xTimerGenericCommand(s0, 0<32>, 0<32>, 0<32>, a5_41, mstatus, dwArg44, dwArgB8, dwArgC8, dwArgF8, dwArg0138, out s1, out a0, out a3, out a4, out a5_153, out s2_15, out s3, out s4_154, out s5, out s6, out s8_155)
	branch a0 != 0<32> l230318DE
l2303192C:
	word32 a5_157
	vAssertCalled(a4, mstatus, out a5_157)
l23031916:
	word32 a0_72 = Mem17[s2_15:int32]
	Mem73[a5_41 + 4<i32>:word32] = s0
	Mem74[s0 + 16<i32>:word32] = s0
	word32 a5_156
	a0 = vListInsert(a0_72, s3, 0<32>, out a4, out a5_156)
l230318E6:
	word32 a4_81 = Mem17[a3:word32]
	Mem82[a5_20:word32] = a4_81
	Mem85[s2_15:word32] = a3
	s1Out = s1
	a0Out = a0
	a3Out = a3
	a4Out = a4_81
	a5Out = a5_20
	s2Out = s2_15
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s8Out = dwLoc1C
	return s0
prvSwitchTimerLists_exit:


void prvTimerTask(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
prvTimerTask_entry:
l23031932:
	word32 sp_186 = fp + -80<i32>
	word32 s4_271 = 0x4200DE70<32>
	word32 s3_148 = 0x4200DE7C<32>
	word32 s6_163 = 0x230827E8<32>
	word32 s7_191 = 0x4200DE74<32>
	word32 s5_162 = 9<32>
l23031972:
	word32 a5_197
	word32 a4_221
	word32 a2_105
	word32 s0_217
	word32 mstatus_205
	word32 a3_203
	word32 a4_202
	word32 a5_37 = Mem36[s4_271:int32]
	word32 s2_147 = Mem36[a5_37:int32]
	branch s2_147 == 0<32> l23031A84
l23031A84:
	word32 a5_443
	a4_221 = vTaskSuspendAll(a4, out a5_443)
	word32 a5_43
	word32 a0_42 = xTaskGetTickCount(out a5_43)
	word32 s1_44 = Mem36[a5_43:word32]
	s0_217 = a0_42
	branch a0_42 <u a5_43 l23031AA2
l23031A94:
	Mem48[a0_42:word32] = s1_44
	a2_105 = CONVERT(a2 <u 1<i32>, bool, word32)
l2303197E:
	s2_147 = Mem36[Mem36[a5_37 + 12<i32>:word32]:int32]
	word32 a5_444
	a4_221 = vTaskSuspendAll(a4, out a5_444)
	word32 a5_57
	word32 a0_56 = xTaskGetTickCount(out a5_57)
	word32 s1_58 = Mem36[a5_57:word32]
	s0_217 = a0_56
	branch a0_56 <u a5_57 l23031AA2
l23031AA2:
	word32 a3_72
	word32 a4_73
	word32 a5_74
	word32 s1_78
	word32 s8_448
	word32 s4_447
	word32 s2_446
	word32 a0_445
	Mem92[prvSwitchTimerLists(s0_217, a3, a4_221, mstatus, Mem36[sp_186 + 68<i32>:word32], Mem36[sp_186 + 184<i32>:word32], Mem36[sp_186 + 200<i32>:word32], Mem36[sp_186 + 248<i32>:word32], Mem36[sp_186 + 312<i32>:word32], out s1_78, out a0_445, out a3_72, out a4_73, out a5_74, out s2_446, out s3_148, out s4_447, out s5_162, out s6_163, out s8_448):word32] = s1_78
	word32 s4_454
	word32 t3_455
	word32 a6_453
	word32 a0_451
	word32 a2_452
	word32 s0_449
	word32 s1_450
	xTaskResumeAll(a3_72, a4_73, a5_74, mstatus, Mem92[sp_186 + 344<i32>:word32], Mem92[sp_186 + 408<i32>:word32], out s0_449, out s1_450, out a0_451, out a2_452, out a3, out a4, out a5_197, out a6_453, out s4_454, out t3_455)
l23031994:
	Mem104[a0_56:word32] = s1_58
	a2_105 = 0<32>
	branch a0_56 >=u s2_147 l23031AB8
l23031AB8:
	word32 a3_115
	word32 a4_116
	word32 t3_460
	word32 a5_458
	word32 a6_459
	word32 a2_457
	word32 a0_456
	word32 s1_111
	word32 s4_112
	word32 s0_110
	xTaskResumeAll(a3, a4_221, a5_57, mstatus, Mem104[sp_186 + 344<i32>:word32], Mem104[sp_186 + 408<i32>:word32], out s0_110, out s1_111, out a0_456, out a2_457, out a3_115, out a4_116, out a5_458, out a6_459, out s4_112, out t3_460)
	word32 s8_119 = Mem104[Mem104[Mem104[s4_112:int32] + 12<i32>:word32] + 12<i32>:int32]
	word32 a5_462
	word32 a4_461
	uxListRemove(a3_115, a4_116, out a4_461, out a5_462)
	word32 a5_124 = CONVERT(Mem104[s8_119 + 40<i32>:byte], byte, word32)
	branch (a5_124 & 4<i32>) != 0<32> l23031AFC
l23031AFC:
	word32 a5_135
	branch prvInsertTimerInActiveList(s8_119, Mem104[s8_119 + 24<i32>:int32] + s2_147, s0_110, s2_147, a5_124 & 4<i32>, out a5_135) == 0<32> l23031ADE
l23031B0E:
	word32 a5_472
	word32 a3_471
	word32 a0_141
	word32 a4_154
	s0_110 = xTimerGenericCommand(s8_119, 0<32>, 0<32>, 0<32>, a5_135, mstatus, Mem104[sp_186 + 100<i32>:word32], Mem104[sp_186 + 216<i32>:word32], Mem104[sp_186 + 232<i32>:word32], Mem104[sp_186 + 280<i32>:word32], Mem104[sp_186 + 344<i32>:word32], out s1_111, out a0_141, out a3_471, out a4_154, out a5_472, out s2_147, out s3_148, out s4_112, out s5_162, out s6_163, out s8_119)
	branch a0_141 != 0<32> l23031ADE
l23031B1E:
	word32 a5_473
	vAssertCalled(a4_154, mstatus, out a5_473)
l23031AD8:
	Mem167[s8_119 + 40<i32>:byte] = SLICE(a5_124 & 0xFFFFFFFE<32>, byte, 0)
l23031ADE:
	word32 a2_199
	call Mem169[s8_119 + 32<i32>:int32] (retsize: 0;)
		uses: a0:s8_168,a2:a2_199,a3:a3_203,a4:a4_202,mstatus:mstatus_205,ra:ra_182,s0:s0_183,s1:s1_172,s2:s2_184,s3:s3_173,s4:s4_175,s5:s5_179,s6:s6_176,s7:s7_46,s8:s8_168
		defs: a2:a2_199,a3:a3_203,a4:a4_202,a5:a5_197,mstatus:mstatus_205,ra:ra_193,s3:s3_188,s5:s5_192,s6:s6_190,s7:s7_191,sp:sp_186
	mstatus = mstatus_205
	a4 = a4_202
	a3 = a3_203
l2303199C:
	word32 t3_468
	word32 s4_467
	word32 a6_466
	word32 a2_465
	word32 s1_464
	word32 s0_463
	word32 a4_228
	word32 a5_229
	word32 a0_238
	xTaskResumeAll(vQueueWaitForMessageRestricted(Mem214[s3_148:int32], s2_147 - s0_217, a2_105, a3, a4_221, mstatus, Mem214[sp_186 + 16<i32>:word32], Mem214[sp_186 + 20<i32>:word32], Mem214[sp_186 + 56<i32>:word32], out a4_228, out a5_229, out s3_148), a4_228, a5_229, mstatus, Mem214[sp_186 + 344<i32>:word32], Mem214[sp_186 + 408<i32>:word32], out s0_463, out s1_464, out a0_238, out a2_465, out a3, out a4, out a5_197, out a6_466, out s4_467, out t3_468)
	branch a0_238 != 0<32> l230319B2
l230319AE:
	__syscall()
l230319B2:
	word32 s1_469
	word32 a0_259
	word32 a1_260
	word32 s2_269
	word32 s0_267 = xQueueReceive(Mem250[s3_148:int32], sp_186 + 16<i32>, 0<32>, a3, a4, a5_197, mstatus, Mem250[sp_186 + 8<i32>:word32], Mem250[sp_186 + 36<i32>:word32], Mem250[sp_186 + 164<i32>:word32], Mem250[sp_186 + 280<i32>:word32], Mem250[sp_186 + 344<i32>:word32], out s1_469, out a0_259, out a1_260, out a2, out a3, out a4, out a5_197, out s2_269, out s3_148, out s4_271)
	branch a0_259 == 0<32> l23031972
l230319C0:
	word32 s8_281 = Mem250[sp_186 + 4<i32>:word32]
	branch a5_197 < 0<32> l23031A72
l23031A72:
	call a5_197 (retsize: 0;)
		uses: a0:s0_267,a1:a1_260,a2:a2_261,a3:a3_262,a4:a4_263,a5:a5_264,mstatus:mstatus_255,Stack +0008:Mem250[sp_253 + 8<i32>:word32],Stack +0024:Mem250[sp_253 + 36<i32>:word32],Stack +00A4:Mem250[sp_253 + 164<i32>:word32],Stack +0118:Mem250[sp_253 + 280<i32>:word32],Stack +0158:Mem250[sp_253 + 344<i32>:word32]
		defs: a3:a3_288,a4:a4_289,a5:a5_290,s2:s2_295,s3:s3_296,s4:s4_297
	branch a5_197 < 0<32> l230319B2
l23031A80:
	s8_281 = Mem250[sp_186 + 4<i32>:word32]
l230319C8:
	word32 s0_310 = Mem250[a5_197 + 20<i32>:word32]
	branch a5_197 == 0<32> l230319D4
l230319CC:
	word32 a5_470
	uxListRemove(a3, a4, out a4, out a5_470)
l230319D4:
	word32 a0_317 = xTaskGetTickCount(out a5_197)
	word32 s1_320 = Mem250[a5_197:word32]
	branch a0_317 <u a5_197 l23031AAE
l23031AAE:
	Mem323[sp_186 + 132<i32>:word32] = a0_317
	s0_310 = prvSwitchTimerLists(s0_310, a3, a4, mstatus, Mem323[sp_186 + 68<i32>:word32], Mem323[sp_186 + 184<i32>:word32], Mem323[sp_186 + 200<i32>:word32], Mem323[sp_186 + 248<i32>:word32], Mem323[sp_186 + 312<i32>:word32], out s1_320, out a0_317, out a3, out a4, out a5_197, out s2_269, out s3_148, out s4_271, out s5_162, out s6_163, out s8_281)
l230319DE:
	Mem358[a0_317:word32] = s1_320
	branch s5_162 <u a5_197 l230319B2
l230319E6:
	word32 a5_371 = Mem358[(a5_197 << 2<i32>) + s6_163:word32]
	word32 a2_410
	word32 a4_413
	word32 a3_414
	word32 mstatus_416
	call a5_371 (retsize: 0;)
		uses: a2:a2_410,a3:a3_414,a4:a4_413,a5:a5_371,mstatus:mstatus_416,ra:ra_387,s0:s0_390,s1:s1_356,s2:s2_391,s3:s3_372,s4:s4_375,s5:s5_359,s6:s6_365,s7:s7_381,s8:s8_394
		defs: a2:a2_410,a3:a3_414,a4:a4_413,mstatus:mstatus_416
	return
prvTimerTask_exit:


word32 pvTimerGetTimerID(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip_obtaining_timeout
//      __reload_tsen
//      disconnect_retry
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
pvTimerGetTimerID_entry:
l23031B24:
	branch a0 == 0<32> l23031B42
l23031B42:
	word32 a5_37
	vAssertCalled(a4, mstatus, out a5_37)
l23031B2E:
	word32 a5_38
	vTaskEnterCritical(a4, mstatus, out a5_38)
	word32 s0_20 = Mem7[a0 + 28<i32>:word32]
	word32 a4_39
	word32 a5_40
	a3Out = vTaskExitCritical(a3, mstatus, out a4_39, out a5_40)
	return s0_20
pvTimerGetTimerID_exit:


void vPortSetupTimerInterrupt()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xPortStartScheduler
// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
vPortSetupTimerInterrupt_entry:
l23031B48:
l23031B4C:
	word32 a2_7 = Mem0[0x200BFF8<32>:int32]
	word32 a4_8 = Mem0[0x200BFFC<32>:int32]
	branch a4_8 != Mem0[0x200BFFC<32>:int32] l23031B4C
l23031B5C:
	Mem17[a2_7 + 0x2000710<32>:word32] = 0x2004000<32>
	Mem20[CONVERT(a2_7 + 0x2000710<32> <u a2_7, bool, word32) + a4_8 + 4<i32>:word32] = 0x2004000<32>
	Mem25[a2_7 + 0x4FFFE20<32>:word32] = 0x4200DE88<32>
	Mem26[a4_8 + CONVERT(a2_7 + 0x4FFFE20<32> <u a2_7, bool, word32) + 4<i32>:word32] = 0x4200DE88<32>
	return
vPortSetupTimerInterrupt_exit:


void xPortStartScheduler(word32 gp, word32 tp, word32 t0, word32 a4, word32 fcsr, word32 mstatus, word32 mie, word32 mtvec)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskStartScheduler
// MayUse:  a4:[0..31] fcsr:[0..31] gp:[0..31] mie:[0..31] mstatus:[0..31] mtvec:[0..31] t0:[0..31] tp:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s4 s5 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
xPortStartScheduler_entry:
l23031B92:
	__csrrs(mtvec, t0)
	branch false l23031BCC
l23031BCC:
	word32 a5_64
	vAssertCalled(a4, mstatus, out a5_64)
l23031BAA:
	vPortSetupTimerInterrupt()
	__csrrs(mie, tp)
	Mem32[0x2800407<32>:byte] = 1<8>
	fn23031F00(gp, fcsr, mstatus, mtvec)
	return
xPortStartScheduler_exit:


void fn23031F00(word32 gp, word32 fcsr, word32 mstatus, word32 mtvec)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xPortStartScheduler
// MayUse:  fcsr:[0..31] gp:[0..31] mstatus:[0..31] mtvec:[0..31]
// LiveOut:
// Trashed: a2 a3 a6 a7 ra s0 s1 s4 s5 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
fn23031F00_entry:
l23031F00:
	__csrrw(mtvec, 0x23031C02<p32>)
	word32 sp_9 = Mem0[0x4200DE38<p32>:int32]
	0<32> = Mem0[sp_9 + 64<i32>:word32]
	0<32> = Mem0[sp_9 + 32<i32>:word32]
	0<32> = Mem0[sp_9 + 992<i32>:word64]
	word32 sp_40 = Mem0[sp_9 + 472<i32>:word64]
	__csrrw(fcsr, gp)
	__csrrw(mstatus, 0<32>)
	0<32> = Mem0[sp_40 + 508<i32>:word32]
	return
fn23031F00_exit:


word32 fn23032000(word32 a0, word32 a1, word32 a2, word32 mstatus, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvInitialiseNewTask.isra.2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31]
// LiveOut: a0 t0
// Trashed: a0 t0 t1
// Preserved: sp
fn23032000_entry:
l23032000:
	Mem11[a0 + 0xFFFFFFFC<32>:word32] = (__csrrs(mstatus, 0<32>) | 0x1880<32>) & -9<i32>
	Mem14[a2:word32] = a0 + 0xFFFFFFA4<32>
	Mem16[a0 + 0xFFFFFF8C<32>:word32] = 0<32>
	word32 a0_15 = a0 + 0xFFFFFF8C<32> + 0xFFFFFFFC<32>
	word32 t0_17 = 34<i32>
l2303202A:
	branch t0_17 == 0<32> l23032038
l23032038:
	word32 a0_20 = a0_15 + 0<32>
	Mem22[a1:word32] = a0_20
	a0Out = a0_20
	return t0_17
fn23032000_exit:
l2303202E:
	a0_15 = a0_15 + 0xFFFFFFFC<32>
	Mem24[a0_15:word32] = 0<32>
	t0_17 = t0_17 + 0xFFFFFFFF<32>


word32 prvInsertBlockIntoFreeList(word32 a0, word32 a2, word32 a3, word32 a5, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pvPortMalloc
//      vPortFree
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut: a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
prvInsertBlockIntoFreeList_entry:
l23032138:
l23032144:
	branch a5 <u a0 l23032142
l23032142:
l2303214A:
	word32 a4_12 = Mem0[a2 + 4<i32>:word32]
	word32 a0_15 = Mem0[a3 + 4<i32>:word32]
	word32 a1_16 = a4_12 + a2
	branch a0_15 == a1_16 l23032182
l23032182:
	a3 = a3 + a2
	Mem18[a3 + 4<i32>:word32] = a4_12
	a0_15 = a4_12
l23032156:
	branch a5 == a0_15 + a3 l23032168
l23032168:
	branch a5 == Mem25[0x4200DE90<32>:int32] l2303215E
l23032174:
	word32 a5_27 = Mem25[a5 + 4<i32>:word32]
	a3 = a3 + a5_27
	Mem29[a3 + 4<i32>:word32] = a0_15
	a4_12 = Mem29[a5_27:word32]
	a5 = Mem29[a5_27:word32]
	Mem32[a5:word32] = a0_15
l2303215E:
	Mem35[a5:word32] = a0_15
l23032160:
	branch a0_15 == a4_12 l23032166
l23032164:
	Mem40[a0_15:word32] = a4_12
l23032166:
	a3Out = a3
	a4Out = a4_12
	a5Out = a5
	return a1_16
prvInsertBlockIntoFreeList_exit:


word32 pvPortMalloc(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg8C, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_test_cmd
//      aws_main_entry
//      Encrypt_keyData
//      cm_AllocResources
//      cm_InitConnection
//      bl_send_msg
//      bl_msg_zalloc.constprop.3
//      bl_ipc_init
//      ota_tcp_cmd
//      ps_cmd
//      ls_cmd
//      dns_server_init
//      psm_test_cmd
//      xQueueGenericCreate
//      xStreamBufferGenericCreate
//      xTaskCreate
//      vTaskList
//      bl_dma_irq_register
//      bl_dma_init
//      bl_dma_test
//      dev_uart_init
//      cmd_looprt_test_schedule_evt2
//      loopset_led_trigger
//      tcpc_entry
//      tcpclient_cmd
//      TCP_Server
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      ipus_test_cmd
//      ipu_test_cmd
//      ipc_test_cmd
//      ips_test_cmd
//      ping_api_init
//      utils_memp_init
//      inode_reserve
//      aos_loop_init
//      aos_poll_read_fd
//      aos_post_delayed_action
//      aos_task_new
//      aos_malloc
//      bl_mtd_open
//      mycalloc
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +008C:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
pvPortMalloc_entry:
l2303218A:
	branch a5 == 0<32> l2303226C
l2303226C:
	word32 a5_286
	vAssertCalled(a4, mstatus, out a5_286)
l230321A6:
	word32 a3_122
	word32 a5_287
	word32 a4_126 = vTaskSuspendAll(a4, out a5_287)
	word32 s2_30 = Mem16[0x4200DE94<32>:int32]
	word32 a5_124 = s2_30 & a0
	branch a5_124 != 0<32> l230321BA
l230321B8:
	branch a0 != 0<32> l230321D6
l230321D6:
	a5_124 = a0 + 8<i32>
	a4_126 = a0 + 8<i32> & 7<i32>
	branch a4_126 != 0<32> l23032256
l23032256:
	a5_124 = (a0 + 8<i32> & 0xFFFFFFF8<32>) + 8<32>
l230321E0:
	branch a5_124 == 0<32> l230321BA
l230321E2:
	word32 s4_41 = Mem16[0x4200DE98<32>:int32]
	branch s4_41 <u a5_124 l230321BA
l230321F2:
	a3 = 0x4200DEA0<32>
l23032208:
	word32 s0_47 = Mem16[a4_126 + 4<i32>:word32]
	branch a4_126 <u a5_124 l23032200
l23032200:
	s0_47 = Mem16[a4_126:word32]
	branch a4_126 == 0<32> l2303220E
l23032204:
	a3 = s0_47
l2303220E:
	word32 s1_54 = Mem16[a4_126:word32]
	branch a4_126 == s0_47 l230321BA
l23032214:
	Mem59[a4_126:word32] = Mem16[s1_54:word32]
	word32 s0_60 = Mem59[a4_126 + 4<i32>:word32]
	word32 a3_63 = a4_126 - a5_124
	branch a3_63 >u 0x10<32> l2303225C
l2303225C:
	word32 a0_64 = s0_60 + a5_124
	Mem65[a3_63 + 4<i32>:word32] = a0_64
	Mem66[a5_124 + 4<i32>:word32] = s0_60
	word32 a5_297
	a1 = prvInsertBlockIntoFreeList(a0_64, 0x10<32>, a3_63, a5_124, out a3_63, out a4_126, out a5_297)
	s0_60 = Mem66[a4_126 + 4<i32>:word32]
l23032228:
	word32 a5_77 = Mem76[a3_63:word32]
	word32 s4_82 = s4_41 - a4_126
	Mem86[0x4200DE98<32>:word32] = s4_82
	branch s4_82 >=u a3_63 l23032242
l2303223E:
	Mem87[a5_77:word32] = s4_82
l23032242:
	word32 s2_94 = s2_30 | a4_126
	Mem97[s0_60 + 4<i32>:word32] = s2_94
	Mem98[s0_60:word32] = 0<32>
	word32 a5_115
	word32 s1_118
	word32 a4_123
	word32 s0_298
	word32 a6_301
	word32 s4_302
	word32 t3_303
	word32 a0_299
	word32 a2_300
	xTaskResumeAll(a3_63, a4_126, a5_77, mstatus, dwArg0138, dwArg0178, out s0_298, out s1_118, out a0_299, out a2_300, out a3_122, out a4_123, out a5_115, out a6_301, out s4_302, out t3_303)
	branch s1_118 != 0<32> l230321C4
l230321C4:
	s1Out = s1_118
	a0Out = s1_118
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3_122
	a4Out = a4_123
	a5Out = a5_115
	a6Out = dwArg28
	s2Out = s2_94
	s3Out = 0x4200DE98<32>
	s4Out = dwArg04
	s8Out = s4
	return s1
pvPortMalloc_exit:
l23032254:
l230321BA:
	word32 a0_290
	word32 a5_293
	word32 t3_296
	word32 a6_294
	word32 s4_295
	word32 a2_291
	word32 a4_292
	word32 s0_288
	word32 s1_289
	xTaskResumeAll(a3, a4_126, a5_124, mstatus, dwArg0138, dwArg0178, out s0_288, out s1_289, out a0_290, out a2_291, out a3_122, out a4_292, out a5_293, out a6_294, out s4_295, out t3_296)
l230321BE:
	vApplicationMallocFailedHook(ra, a3_122, dwLoc08, dwArg40, dwArg44, s1, dwArg8C)


word32 vPortFree(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s4Out, ptr32 & t3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_test_cmd
//      GeneratePWKMsg3
//      GenerateApEapolMsg
//      Encrypt_keyData
//      cm_InitConnection
//      cm_DeleteConnection
//      bl_send_msg
//      cmd_complete.isra.1
//      cmd_mgr_llind
//      cmd_mgr_queue
//      ota_tcp_cmd
//      ps_cmd
//      ls_cmd
//      psm_test_cmd
//      vEventGroupDelete
//      vStreamBufferDelete
//      prvDeleteTCB
//      xTaskCreate
//      vTaskList
//      bl_dma_test
//      sys_sem_free
//      tcpc_entry
//      TCP_Server
//      iperf_server_udp
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      ping_free
//      ping_api_init
//      utils_memp_deinit
//      aos_register_driver
//      aos_register_fs
//      aos_poll_read_fd
//      aos_loop_run
//      dfl_entry
//      aos_task_new
//      aos_free
//      bl_mtd_close
//      bloop_run
//      mbedtls_pk_load_file
//      mbedtls_pk_parse_keyfile
//      rsa_free_wrap
//      eckey_free_wrap
//      mbedtls_rsa_pkcs1_sign
//      ssl_flight_free
//      mbedtls_ssl_handshake_free
//      ssl_handshake_wrapup_free_hs_transform
//      mbedtls_ssl_session_free
//      mbedtls_ssl_handshake_wrapup
//      mbedtls_ssl_setup
//      mbedtls_ssl_free
//      mbedtls_ssl_config_free
//      mbedtls_ssl_write_record
//      mbedtls_ssl_prepare_handshake_record
//      mbedtls_ssl_parse_certificate
//      mbedtls_x509_crt_free
//      mbedtls_x509_crt_parse_der
//      mbedtls_x509_crt_parse_file
//      mbedtls_mpi_free
//      mbedtls_mpi_grow
//      mbedtls_mpi_shrink
//      gcm_ctx_free
//      aes_ctx_free
//      ecp_normalize_jac_many
//      mbedtls_ecp_group_free
//      mbedtls_ecp_mul
//      mbedtls_md_free
//      md5_ctx_free
//      sha1_ctx_free
//      sha224_ctx_free
//      mbedtls_pem_read_buffer
//      mbedtls_pem_free
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
vPortFree_entry:
l23032272:
	branch a0 == 0<32> l23032302
l23032302:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a6Out = a6
	s4Out = s4
	t3Out = t3
	return tp
l23032274:
	word32 s1_124
	word32 a3_111
	word32 a4_114 = Mem11[a0 + -4<i32>:int32]
	branch (a4_114 & a5) == 0<32> l230322B8
l230322B8:
	word32 a5_147
	a2 = vAssertCalled(a4_114, mstatus, out a5_147)
	a5 = Mem11[a0 + -8<i32>:int32]
	branch a5 != 0<32> l23032298
l230322C2:
	a4_114 = Mem11[a0 + -4<i32>:int32]
	s1_124 = Mem11[a5:word32]
	a3_111 = a4_114 & a5
	branch a3_111 == 0<32> l230322AE
l23032292:
	a3_111 = Mem11[a0 + -8<i32>:int32]
	branch a3_111 == 0<32> l230322CE
l23032298:
	a2 = vAssertCalled(a4_114, mstatus, out a5)
	a4_114 = Mem11[a0 + -4<i32>:int32]
	s1_124 = Mem11[a5:word32]
	a3_111 = a4_114 & a5
	branch a3_111 == 0<32> l230322AE
l230322A8:
	a3_111 = Mem11[a0 + -8<i32>:int32]
	branch a3_111 == 0<32> l230322CE
l230322CE:
	Mem40[a0 + 4092<i32>:word32] = ~a5 & a4_114
	word32 a5_148
	vTaskSuspendAll(a4_114, out a5_148)
	word32 a5_45 = Mem40[a3_111:word32]
	Mem49[Mem40[a0 + -4<i32>:int32] + a3_111:word32] = a5_45
	word32 a3_55
	word32 a4_56
	word32 a5_57
	word32 a1_53 = prvInsertBlockIntoFreeList(a0 + -8<i32>, a2, a3_111, a5_45, out a3_55, out a4_56, out a5_57)
l230322FE_thunk_xTaskResumeAll:
	word32 a0_65
	word32 a2_66
	word32 a5_67
	word32 a6_68
	word32 s0_69
	word32 s1_70
	word32 s4_71
	word32 t3_72
	word32 a3_74
	word32 a4_75
	word32 tp_73 = xTaskResumeAll(a3_55, a4_56, a5_57, mstatus, dwArg0158, dwArg0198, out s0_69, out s1_70, out a0_65, out a2_66, out a3_74, out a4_75, out a5_67, out a6_68, out s4_71, out t3_72)
	s0Out = s0_69
	s1Out = s1_70
	a0Out = a0_65
	a1Out = a1_53
	a2Out = a2_66
	a3Out = a3_74
	a4Out = a4_75
	a5Out = a5_67
	a6Out = a6_68
	s4Out = s4_71
	t3Out = t3_72
	return tp_73
l230322AE:
	s0Out = s0
	s1Out = s1_124
	a0Out = a0
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3_111
	a4Out = a4_114
	a5Out = a5
	a6Out = a6
	s4Out = s4
	t3Out = t3
	return dwArg14
vPortFree_exit:


void xPortGetFreeHeapSize()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vApplicationMallocFailedHook
//      version_cmd
// MayUse: 
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
xPortGetFreeHeapSize_entry:
l23032304:
	return
xPortGetFreeHeapSize_exit:


void vPortDefineHeapRegions(word32 s0, word32 a0, word32 a4, word32 mstatus, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
vPortDefineHeapRegions_entry:
l2303230E:
	word32 a5_159 = Mem5[0x4200DE90<32>:int32]
	word32 s3_106 = a0
	branch a5_159 == 0<32> l230323F8
l230323F8:
	branch s0 != 0<32> l23032340
l23032332:
	word32 a5_293
	vAssertCalled(a4, mstatus, out a5_293)
	s0 = Mem24[a0 + 4<i32>:int32]
	branch s0 == 0<32> l230323FC
l230323FC:
	Mem34[0x4200EE9C<32>:word32] = 0<32>
	Mem36[0x4200EE98<32>:word32] = 0<32>
l2303233C:
	a5_159 = Mem24[0x4200DE90<32>:int32]
l23032340:
	word32 s4_119 = 0<32>
	word32 s5_112 = 0<32>
l2303234C:
	word32 s1_44 = Mem43[s3_106:int32]
	word32 a4_45 = s1_44 & 7<i32>
	word32 s2_46 = s1_44
	branch (s1_44 & 7<i32>) == 0<32> l23032366
l23032358:
	a4_45 = s1_44 + 7<i32> & 0xFFFFFFF8<32>
	s0 = s0 + s1_44 - a4_45
	s1_44 = a4_45
	s2_46 = a4_45
l23032366:
	branch s4_119 != 0<32> l230323DC
l230323DC:
	branch a5_159 == 0<32> l230323EE
l230323EE:
	word32 a5_294
	vAssertCalled(a4_45, mstatus, out a5_294)
	a5_159 = Mem43[0x4200DE90<32>:int32]
l230323DE:
	a4 = a5_159
	branch a5_159 <u s2_46 l23032374
l230323E4:
	word32 a5_295
	vAssertCalled(a5_159, mstatus, out a5_295)
	a4 = Mem43[0x4200DE90<32>:int32]
l2303236A:
	Mem80[0x4200DEA0<32>:word32] = s1_44
	Mem81[0x4200DEA4<32>:word32] = 0<32>
	a4 = a5_159
l23032374:
	a5_159 = s0 + s2_46 + 0xFFFFFFF8<32> & -8<i32>
	Mem90[a5_159 + 4<i32>:word32] = 0<32>
	Mem91[a5_159:word32] = 0<32>
	Mem94[0x4200DE90<32>:word32] = a5_159
	word32 s2_101 = a5_159 - s2_46
	Mem97[s1_44 + 4<i32>:word32] = s2_101
	Mem98[a5_159:word32] = s1_44
	branch a4 == 0<32> l2303239A
l23032394:
	Mem100[s1_44:word32] = a4
	s2_101 = Mem100[s1_44 + 4<i32>:int32]
l2303239A:
	s3_106 = s3_106 + 8<32>
	s0 = Mem107[s3_106 + 4<i32>:int32]
	s5_112 = s5_112 + s2_101
	s4_119 = s4_119 + 1<32>
	branch s0 != 0<32> l2303234C
l230323A6:
	Mem121[0x4200EE9C<32>:word32] = s5_112
	Mem123[0x4200EE98<32>:word32] = s5_112
	branch s5_112 == 0<32> l2303240C
l2303240C:
	word32 a5_296
	vAssertCalled(a4, mstatus, out a5_296)
l230323BA:
	Mem148[0x4200EE94<32>:word32] = 0x80000000<32>
	0<32> = dwArg0128
	return
vPortDefineHeapRegions_exit:


void uart_generic_notify_handler(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      UART0_IRQHandler
//      UART1_IRQHandler
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a0 ra sp
uart_generic_notify_handler_entry:
l23032412:
	word32 s3_106 = Mem10[(a0 << 2<u32>) + 0x2308DE74<32>:int32]
	word32 s1_110 = Mem19[s3_106 + 32<i32>:int32]
	word32 s0_109 = Mem19[s3_106 + 36<i32>:int32]
	word32 s2_107 = a0
	branch (s1_110 & 1<i32>) == 0<32> l2303244C
l23032440:
	branch (s0_109 & 1<i32>) != 0<32> l2303244C
l23032446:
	Mem26[s3_106 + 40<i32>:word32] = 1<32>
l2303244C:
	branch (s1_110 & 2<i32>) == 0<32> l23032474
l23032452:
	branch (s0_109 & 2<i32>) != 0<32> l23032474
l23032458:
	Mem35[s3_106 + 40<i32>:word32] = 2<32>
	branch false l23032474
l23032470:
	call 0x420128D8<32> (retsize: 0;)
		uses: a0:a0,a5:Mem35[a0 + 4<i32>:word32],ra:ra,s0:s0_21,s1:s1_20,s2:a0,s3:s3_11
		defs: a0:a0_45,ra:ra_49,s0:s0_50,s1:s1_51,s2:s2_48,s3:s3_47
l23032474:
	branch (s1_110 & 4<i32>) == 0<32> l23032496
l2303247A:
	branch (s0_109 & 4<i32>) != 0<32> l23032496
l23032480:
	branch false l23032496
l23032492:
	call 0x420128D8<32> (retsize: 0;)
		uses: a0:a0_68,a5:Mem65[a0_68 + 12<i32>:word32],ra:ra_71,s0:s0_59,s1:s1_57,s2:s2_63,s3:s3_70
		defs: a0:a0_75,ra:ra_79,s0:s0_80,s1:s1_81,s2:s2_78,s3:s3_77
l23032496:
	branch (s1_110 & 8<i32>) == 0<32> l230324B8
l2303249C:
	branch (s0_109 & 8<i32>) != 0<32> l230324B8
l230324A2:
	branch false l230324B8
l230324B4:
	call 0x420128D8<32> (retsize: 0;)
		uses: a0:a0_97,a5:Mem65[a0_97 + 4<i32>:word32],ra:ra_100,s0:s0_89,s1:s1_87,s2:s2_93,s3:s3_99
		defs: ra:ra_108,s0:s0_109,s1:s1_110,s2:s2_107,s3:s3_106
l230324B8:
	branch (s1_110 & 16<i32>) == 0<32> l230324E2
l230324BE:
	branch (s0_109 & 16<i32>) != 0<32> l230324E2
l230324C4:
	Mem122[s3_106 + 40<i32>:word32] = 0x10<32>
	word32 s2_126 = s2_107 << 4<i32>
	word32 a5_128 = Mem122[s2_126 + 0x420128D8<32>:int32]
	branch a5_128 == 0<32> l230324E2
l230324DC:
	call a5_128 (retsize: 0;)
		uses: a0:Mem122[s2_126 + 0x420128DC<32>:int32],ra:ra_130,s0:s0_118,s1:s1_116,s2:s2_126 + 0x420128D8<32>,s3:s3_121
		defs: s0:s0_139,s1:s1_140,s3:s3_136
l230324E2:
	branch (s1_110 & 32<i32>) == 0<32> l230324F6
l230324E8:
	branch (s0_109 & 32<i32>) != 0<32> l230324F6
l230324EE:
	Mem152[s3_106 + 40<i32>:word32] = 32<i32>
l230324F6:
	return
uart_generic_notify_handler_exit:


void UART0_IRQHandler(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
UART0_IRQHandler_entry:
l23032504:
l23032506_thunk_uart_generic_notify_handler:
	uart_generic_notify_handler(ra, 0<32>)
	return
UART0_IRQHandler_exit:


void UART1_IRQHandler(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
UART1_IRQHandler_entry:
l2303250A:
l2303250C_thunk_uart_generic_notify_handler:
	uart_generic_notify_handler(ra, 1<32>)
	return
UART1_IRQHandler_exit:


word32 bl_uart_init(word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & s1Out, ptr32 & a1Out, ptr32 & s2Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
//      vfs_uart_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a1 ra s1 s2 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_uart_init_entry:
l23032510:
	word32 a7_248
	word32 a5_246
	word32 a6_247
	word32 a3_244
	word32 a4_245
	word32 a1_31
	word32 a2_32
	memcpy(fp + -48<i32>, 0x23082820<32>, 0x10<32>, out a1_31, out a2_32, out a3_244, out a4_245, out a5_246, out a6_247, out a7_248)
	word32 a5_46 = CONVERT(Mem45[0x4200DEA8<32>:byte], byte, word32)
	branch a5_46 != 0<32> l2303255E
l2303254E:
	Mem57[GLB_Set_UART_CLK(1<32>, 1<32>, 3<32>, a5_46, out a2_32):byte] = 1<8>
	a1_31 = 1<32>
l2303255E:
	word32 s1_124
	word32 a1_125
	word32 sp_74
	word32 s3_75
	word32 a1_76
	word32 s0_77
	word32 s2_78
	word32 a2_80
	word32 s1_81
	word32 s4_82
	word32 a5_84
	call 0x4200C5D8<p32> (retsize: 0;)
		uses: a0:fp + -56<i32>,a1:a1_70,a2:a2_72,a5:257<i32>,ra:0x4200C578<p32>,s0:a0,s1:2<32>,s2:a2,s3:a1,s4:a5,Stack +0008:SLICE(a2, byte, 0),Stack +0009:7<8>,Stack +000A:2<16>,Stack +000C:0x101<16>
		defs: a1:a1_76,a2:a2_80,a5:a5_84,s0:s0_77,s1:s1_81,s2:s2_78,s3:s3_75,s4:s4_82,sp:sp_74
	Mem98[sp_74 + 8<i32>:byte] = SLICE(s3_75, byte, 0)
	Mem99[sp_74 + 10<i32>:word16] = SLICE(s1_81, word16, 0)
	word32 s3_102
	word32 s0_104
	word32 s2_105
	word32 ra_110
	call 0x4200C5D8<p32> (retsize: 0;)
		uses: a0:sp_74 + 8<i32>,a1:a1_76,a2:a2_80,a5:a5_84,ra:0x4200C58A<p32>,s0:s0_77,s1:s1_81,s2:s2_78,s3:s3_75,s4:s4_82
		defs: ra:ra_110,s0:s0_104,s2:s2_105,s3:s3_102
	branch s0_104 == 0<32> l230325FA
l230325FA:
	s1_124 = 3<32>
	a1_125 = 2<32>
l23032594:
	s1_124 = 7<32>
	a1_125 = 6<32>
l23032598:
	GLB_UART_Fun_Sel(s3_102 & 7<i32>, a1_125)
	UART_IntMask(8<32>, 1<32>, GLB_UART_Fun_Sel(s2_105 & 7<i32>, s1_124))
	UART_FifoConfig(fp - 60<i32>, UART_TxFreeRun(1<32>, UART_Init(s0_104, 1<32>, UART_Disable(2<32>))))
	word32 a1_189 = UART_Enable(2<32>)
	s1Out = s1_124
	a1Out = a1_189
	s2Out = s2_105
	s8Out = dwArgD4
	return ra_110
bl_uart_init_exit:


word32 bl_uart_data_send(word32 s1, word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_send
//      vprint
//      bl_putchar
//      puts
// MayUse:  a0:[0..31] a1:[0..7] s1:[0..31]
// LiveOut: a0 a4 a5 s0 s4 s8
// Trashed: a0 a2 a4 a5 s0 s4 s8 t3
// Preserved: sp
bl_uart_data_send_entry:
l23032600:
l2303261A:
	word32 a5_22
	branch UART_GetTxFifoCount(a0, out a5_22) == 0<32> l2303261A
l23032626:
	Mem25[s1 + 136<i32>:byte] = SLICE(a1, byte, 0)
	a0Out = 0<32>
	a4Out = a0 << 2<u32>
	a5Out = a5_22
	s4Out = dwArg04
	s8Out = dwLoc1C
	return a0
bl_uart_data_send_exit:


word32 bl_uart_data_recv(word32 s0, word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_recv_II
// MayUse:  a0:[0..31] s0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
bl_uart_data_recv_entry:
l23032636:
	word32 a0_15
	word32 a5_14
	branch UART_GetRxFifoCount(a0, out a5_14) == 0<32> l23032662
l23032662:
	a0_15 = 0xFFFFFFFF<32>
l23032652:
	a0_15 = CONVERT(Mem11[s0 + 140<i32>:byte], byte, word32) & 255<i32>
l2303265A:
	a4Out = a0 << 2<u32>
	a5Out = a5_14
	return a0_15
bl_uart_data_recv_exit:


word32 bl_uart_int_rx_enable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_enable
// MayUse:  a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: s0 sp
bl_uart_int_rx_enable_entry:
l23032666:
	return UART_IntMask(4<32>, 0<32>, UART_IntMask(1<32>, 0<32>, UART_IntMask(3<32>, 0<32>, UART_SetRxTimeoutValue(0x18<32>, a4))))
bl_uart_int_rx_enable_exit:


word32 bl_uart_int_rx_disable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_disable
// MayUse:  a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: s0 sp
bl_uart_int_rx_disable_entry:
l2303269C:
	return UART_IntMask(4<32>, 1<32>, UART_IntMask(1<32>, 1<32>, UART_IntMask(3<32>, 1<32>, a4)))
bl_uart_int_rx_disable_exit:


void bl_uart_int_tx_enable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_enable
//      hal_uart_send_trigger
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
bl_uart_int_tx_enable_entry:
l230326CA:
	UART_IntMask(2<32>, 0<32>, a4)
	return
bl_uart_int_tx_enable_exit:


void bl_uart_int_tx_disable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_disable
//      hal_uart_send_trigger_off
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
bl_uart_int_tx_disable_entry:
l230326DE:
	UART_IntMask(2<32>, 1<32>, a4)
	return
bl_uart_int_tx_disable_exit:


word32 bl_uart_flush(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_init
//      hal_uart_send_flush
// MayUse:  a0:[0..31]
// LiveOut: a5 s1
// Trashed: a0 a2 a5 s1 tp
// Preserved: s0 sp
bl_uart_flush_entry:
l230326F2:
l23032700:
	word32 a5_16
	branch UART_GetTxFifoCount(a0, out a5_16) != 32<i32> l23032700
l2303270A:
	a5Out = a5_16
	return a0
bl_uart_flush_exit:


void bl_uart_getdefconfig(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
bl_uart_getdefconfig_entry:
l23032716:
	branch a1 == 0<32> l2303271C
l23032718:
	Mem4[a1:byte] = 0<8>
l2303271C:
	return
bl_uart_getdefconfig_exit:


void bl_uart_setconfig(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_setbaud
//      hal_uart_setconfig
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_uart_setconfig_entry:
l2303271E:
	word32 a2_26
	word32 a1_79
	word32 a3_80
	word32 a4_81
	word32 a5_82
	word32 a6_83
	word32 a7_84
	memcpy(fp + 0xFFFFFFE0<32>, 0x23082830<32>, 0x10<32>, out a1_79, out a2_26, out a3_80, out a4_81, out a5_82, out a6_83, out a7_84)
	UART_TxFreeRun(1<32>, UART_Init(a0, a2_26, UART_Disable(2<32>)))
	UART_Enable(2<32>)
	return
bl_uart_setconfig_exit:


void bl_uart_setbaud(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_setbaud
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_uart_setbaud_entry:
l23032770:
l23032772_thunk_bl_uart_setconfig:
	bl_uart_setconfig(a0)
	return
bl_uart_setbaud_exit:


void bl_uart_int_enable(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_uart_int_enable_entry:
l23032776:
	word32 a0_50
	branch a0 == 0<32> l2303278A
l2303278A:
	bl_uart_int_tx_enable(bl_uart_int_rx_enable(a4))
	word32 s1_183
	word32 a3_184
	word32 s2_185
	word32 s3_186
	word32 s4_187
	word32 s6_188
	bl_irq_register(ra, s1, 45<i32>, 0x23032504<32>, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s1_183, out a3_184, out s2_185, out s3_186, out s4_187, out s6_188)
	a0_50 = 45<i32>
l2303277C:
	branch a0 == 1<32> l230327B0
l230327B0:
	bl_uart_int_tx_enable(bl_uart_int_rx_enable(1<32>))
	word32 s1_189
	word32 a3_190
	word32 s2_191
	word32 s3_192
	word32 s4_193
	word32 s6_194
	bl_irq_register(ra, s1, 46<i32>, 0x2303250A<32>, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s1_189, out a3_190, out s2_191, out s3_192, out s4_193, out s6_194)
	a0_50 = 46<i32>
l230327A8:
	bl_irq_enable(a0_50)
l23032782:
l23032784:
	return
bl_uart_int_enable_exit:


void bl_uart_int_disable(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg7C, word32 dwArg8C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_close
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +008C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_uart_int_disable_entry:
l230327D0:
	word32 a0_50
	branch a0 == 0<32> l230327E4
l230327E4:
	bl_uart_int_tx_disable(bl_uart_int_rx_disable(a4))
	bl_irq_unregister(ra, s1, 45<i32>, 0x23032504<32>, s2, dwLoc08, dwArg30, dwArg34, dwArg40, dwArg44, dwArg68, dwArg7C, dwArg8C)
	a0_50 = 45<i32>
l230327D6:
	branch a0 == 1<32> l2303280A
l2303280A:
	bl_uart_int_tx_disable(bl_uart_int_rx_disable(1<32>))
	bl_irq_unregister(ra, s1, 46<i32>, 0x2303250A<32>, s2, dwLoc08, dwArg30, dwArg34, dwArg40, dwArg44, dwArg68, dwArg7C, dwArg8C)
	a0_50 = 46<i32>
l23032802:
	bl_irq_disable(a0_50)
l230327DC:
l230327DE:
	return
bl_uart_int_disable_exit:


void bl_uart_int_rx_notify_register(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_notify_register
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
bl_uart_int_rx_notify_register_entry:
l2303282A:
	branch a0 >u 1<32> l23032846
l23032846:
	return
l23032830:
	word32 a0_9 = (a0 << 4<u32>) + 0x420128D8<32>
	Mem11[a1:word32] = a0_9
	Mem13[a2 + 4<i32>:word32] = a0_9
	return
bl_uart_int_rx_notify_register_exit:


void bl_uart_int_tx_notify_register(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_notify_register
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
bl_uart_int_tx_notify_register_entry:
l2303284A:
	branch a0 >u 1<32> l23032866
l23032866:
	return
l23032850:
	word32 a0_9 = (a0 << 4<u32>) + 0x420128D8<32>
	Mem11[a1 + 8<i32>:word32] = a0_9
	Mem13[a2 + 12<i32>:word32] = a0_9
	return
bl_uart_int_tx_notify_register_exit:


word32 bl_chip_info(word32 ra, word32 s1, word32 a0, word32 misa)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a0:[0..31] misa:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_chip_info_entry:
l2303286A:
	word32 a0_35
	__csrrs(misa, ra)
	word32 s0_11 = a0
	branch s1 >>u 0x1E<u32> == 2<32> l230328AA
l230328AA:
	word32 a7_165
	word32 a5_163
	word32 a6_164
	word32 a3_161
	word32 a4_162
	word32 a1_159
	word32 a2_160
	memcpy(a0, 0x23082B04<32>, 4<32>, out a1_159, out a2_160, out a3_161, out a4_162, out a5_163, out a6_164, out a7_165)
	a0_35 = a0 + 4<i32>
l23032888:
	branch s1 >>u 0x1E<u32> == 3<32> l230328F6
l230328F6:
	word32 a4_169
	word32 a7_172
	word32 a6_171
	word32 a2_167
	word32 a3_168
	word32 a5_170
	word32 a1_166
	memcpy(a0, 0x23082B0C<32>, 5<32>, out a1_166, out a2_167, out a3_168, out a4_169, out a5_170, out a6_171, out a7_172)
	a0_35 = a0 + 5<i32>
l2303288E:
	word32 a1_58
	s0_11 = a0 + 4<i32>
	branch s1 >>u 0x1E<u32> != 1<32> l2303290A
l2303290A:
	a1_58 = 0x23082B14<32>
l2303289A:
	a1_58 = 0x23082AFC<32>
l230328A2:
	word32 a1_173
	word32 a2_174
	word32 a3_175
	word32 a4_176
	word32 a5_177
	word32 a6_178
	word32 a7_179
	memcpy(a0, a1_58, 4<32>, out a1_173, out a2_174, out a3_175, out a4_176, out a5_177, out a6_178, out a7_179)
	a0_35 = a0 + 4<i32>
l230328BC:
	Mem81[a0_35:byte] = 0x2D<8>
	word32 a4_82 = a0_35 + 1<i32>
	word32 a5_83 = 0<32>
l230328CE:
	branch (1<32> << a5_83 & s1) == 0<32> l230328E0
l230328D6:
	Mem93[a4_82:byte] = SLICE(a5_83 + 65<i32>, byte, 0)
	a4_82 = a4_82 + 1<32>
l230328E0:
	a5_83 = a5_83 + 1<32>
	branch a5_83 != 0x1A<32> l230328CE
l230328E6:
	Mem100[a4_82:byte] = 0<8>
	return s0_11
bl_chip_info_exit:


word32 bl_chip_banner(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
bl_chip_banner_entry:
l23032914:
	Mem6[0x23082840<32>:word32] = a0
	return 0<32>
bl_chip_banner_exit:


word32 bl_chip_memory_ram(word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      version_cmd
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] Stack +0038:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a4 a5 s1 s2 tp
// Preserved: s0 sp
bl_chip_memory_ram_entry:
l23032922:
	word32 a0_5 = Mem0[a4:word32]
	branch a4 <= 2<32> l230329B8
l230329B8:
	return 0xFFFFFFFF<32>
l2303292A:
	Mem18[3<32>:word32] = a0_5
	Mem22[0x23000000<32>:word32] = a1
	Mem28[0x400000<32>:word32] = a2
	word32 a4_84
	word32 a5_85
	strcpy(a3, 0x23082B1C<32>, out a4_84, out a5_85)
	Mem39[a1 + 4<i32>:word32] = 0x4200C000<32>
	Mem43[0x36004<32>:word32] = a2
	word32 a4_86
	word32 a5_87
	strcpy(a3 + 6<i32>, 0x23082B24<32>, out a4_86, out a5_87)
	Mem51[a1 + 8<i32>:word32] = 0x42042000<32>
	Mem55[0xA000008<32>:word32] = a2
	word32 a4_88
	word32 a5_89
	strcpy(a3 + 12<i32>, 0x23072C3C<32>, out a4_88, out a5_89)
	0<32> = dwArg38
	return 0<32>
bl_chip_memory_ram_exit:


void _cb_cmd(word32 ra, word32 a0, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
_cb_cmd_entry:
l230329BC:
	branch CONVERT(Mem0[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032A10
l230329D2:
	branch CONVERT(Mem10[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032A10
l230329DE:
	branch Mem10[0x4200DE84<32>:int32] == 0<32> l23032A1C
l23032A1C:
	word32 a5_121
	xTaskGetTickCount(out a5_121)
l230329E8:
	word32 a5_122
	xTaskGetTickCountFromISR(out a5_122)
l230329EC:
	word32 s1_123
	word32 a0_124
	word32 a1_125
	word32 a2_126
	word32 a3_127
	word32 a4_128
	word32 a5_129
	word32 s2_130
	word32 s3_131
	word32 s4_132
	word32 s5_133
	word32 s6_134
	word32 s7_135
	word32 s8_136
	word32 s9_137
	word32 s10_138
	word32 s11_139
	bl_printk(ra, 0x23082B34<32>, 0x23082B28<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_123, out a0_124, out a1_125, out a2_126, out a3_127, out a4_128, out a5_129, out s2_130, out s3_131, out s4_132, out s5_133, out s6_134, out s7_135, out s8_136, out s9_137, out s10_138, out s11_139)
l23032A10:
	Mem59[a0 + 8<i32>:word32] = 0<32>
	return
_cb_cmd_exit:


void bl_cks_test(word32 ra, word32 mstatus, word32 dwArg18, word32 dwArgB8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_cks
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
bl_cks_test_entry:
l23032A22:
	word32 ra_1017
	word32 s0_1257 = 0x42020000<32>
	ra_1017 = ra
	branch CONVERT(Mem5[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032A80
l23032A42:
	ra_1017 = ra
	branch CONVERT(Mem21[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032A80
l23032A4E:
	branch Mem21[0x4200DE84<32>:int32] == 0<32> l23033000
l23033000:
	word32 a5_2412
	xTaskGetTickCount(out a5_2412)
l23032A5A:
	word32 a5_2413
	xTaskGetTickCountFromISR(out a5_2413)
l23032A5E:
	word32 s8_2429
	word32 s9_2430
	word32 s3_2424
	word32 a3_2420
	word32 a4_2421
	word32 a0_2417
	word32 a1_2418
	word32 a2_2419
	word32 s1_2416
	word32 a5_2422
	word32 s5_2426
	word32 s4_2425
	word32 s2_2423
	word32 s11_2432
	word32 s10_2431
	word32 s6_2427
	word32 s7_2428
	ra_1017 = bl_printk(ra, 0x23082B78<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2416, out a0_2417, out a1_2418, out a2_2419, out a3_2420, out a4_2421, out a5_2422, out s2_2423, out s3_2424, out s4_2425, out s5_2426, out s6_2427, out s7_2428, out s8_2429, out s9_2430, out s10_2431, out s11_2432)
l23032A80:
	Mem68[0x4000A700<32>:byte] = 1<8>
	word32 s1_127 = 0x23082DA0<32>
	word32 a5_70 = 0x23082DA0<32>
l23032A9A:
	Mem80[0x4000A704<32>:byte] = SLICE(CONVERT(Mem76[a5_70 + 0<32>:byte], byte, word32), byte, 0)
	a5_70 = a5_70 + 1<32>
	branch a5_70 != 0xDCF7D274<32> l23032A9A
l23032AAC:
	branch CONVERT(Mem80[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032B08
l23032AC0:
	branch CONVERT(Mem80[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032B08
l23032ACC:
	branch Mem80[0x4200DE84<32>:int32] == 0<32> l23033006
l23033006:
	word32 a5_2414
	xTaskGetTickCount(out a5_2414)
l23032AD8:
	word32 a5_2415
	xTaskGetTickCountFromISR(out a5_2415)
l23032ADC:
	word32 s6_2443
	word32 s7_2444
	word32 a1_2434
	word32 a2_2435
	word32 a3_2436
	word32 a4_2437
	word32 s2_2439
	word32 a5_2438
	word32 a0_2433
	word32 s9_2446
	word32 s8_2445
	word32 s4_2441
	word32 s5_2442
	word32 s10_2447
	word32 s11_2448
	word32 s3_2440
	ra_1017 = bl_printk(ra_1017, 0x23082BA0<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_127, out a0_2433, out a1_2434, out a2_2435, out a3_2436, out a4_2437, out a5_2438, out s2_2439, out s3_2440, out s4_2441, out s5_2442, out s6_2443, out s7_2444, out s8_2445, out s9_2446, out s10_2447, out s11_2448)
l23032B08:
	Mem142[0x4000A700<32>:byte] = 1<8>
	Mem144[0x4000A700<32>:byte] = 2<8>
	word32 a5_146 = 0<32>
l23032B20:
	Mem155[0x4000A704<32>:byte] = SLICE(CONVERT(Mem151[s1_127 + a5_146:byte], byte, word32), byte, 0)
	a5_146 = a5_146 + 1<32>
	branch a5_146 != 0x14<32> l23032B20
l23032B32:
	branch CONVERT(Mem155[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032B52
l23032B44:
	branch CONVERT(Mem155[0x4201FC5D<32>:byte], byte, word32) <=u 2<32> l2303300C
l2303300C:
	branch Mem155[0x4200DE84<32>:int32] == 0<32> l23033080
l23033080:
	word32 a5_2474
	xTaskGetTickCount(out a5_2474)
l23033018:
	word32 a5_2475
	xTaskGetTickCountFromISR(out a5_2475)
l2303301C:
	word32 s2_207
	word32 s3_208
	word32 s4_209
	word32 a0_2496
	word32 a1_2497
	word32 s8_2505
	word32 s9_2506
	word32 s11_2508
	word32 s10_2507
	word32 a3_2499
	word32 s7_2504
	word32 s6_2503
	word32 a4_2500
	word32 s5_2502
	word32 a5_2501
	word32 a2_2498
	word32 s1_2495
	ra_1017 = bl_printk(ra_1017, 0x23082BE4<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2495, out a0_2496, out a1_2497, out a2_2498, out a3_2499, out a4_2500, out a5_2501, out s2_207, out s3_208, out s4_209, out s5_2502, out s6_2503, out s7_2504, out s8_2505, out s9_2506, out s10_2507, out s11_2508)
	branch CONVERT(Mem155[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032B52
l23033052:
	branch CONVERT(Mem155[s4_209 + -931<i32>:byte], byte, word32) >u 2<32> l23032B52
l2303305A:
	branch Mem155[s3_208 + -380<i32>:int32] == 0<32> l23033086
l23033086:
	word32 a5_2476
	xTaskGetTickCount(out a5_2476)
l23033060:
	word32 a5_2477
	xTaskGetTickCountFromISR(out a5_2477)
l23033064:
	word32 s6_2489
	word32 s8_2491
	word32 s5_2488
	word32 a1_2480
	word32 a4_2483
	word32 a0_2479
	word32 a3_2482
	word32 a2_2481
	word32 s9_2492
	word32 s7_2490
	word32 s10_2493
	word32 s11_2494
	word32 s2_2485
	word32 s4_2487
	word32 s3_2486
	word32 a5_2484
	word32 s1_2478
	ra_1017 = bl_printk(ra_1017, 0x23082C28<32>, s2_207 + -1240<i32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2478, out a0_2479, out a1_2480, out a2_2481, out a3_2482, out a4_2483, out a5_2484, out s2_2485, out s3_2486, out s4_2487, out s5_2488, out s6_2489, out s7_2490, out s8_2491, out s9_2492, out s10_2493, out s11_2494)
l23032B52:
	Mem262[0x4000A700<32>:byte] = 1<8>
	Mem264[0x4000A704<32>:byte] = 0x1F<8>
	Mem266[0x4000A704<32>:byte] = 0x3F<8>
	branch CONVERT(Mem266[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032BC2
l23032B7C:
	branch CONVERT(Mem266[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032BC2
l23032B88:
	branch Mem266[0x4200DE84<32>:int32] == 0<32> l2303308C
l2303308C:
	word32 a5_2449
	xTaskGetTickCount(out a5_2449)
l23032B94:
	word32 a5_2450
	xTaskGetTickCountFromISR(out a5_2450)
l23032B98:
	word32 s2_2458
	word32 a0_2452
	word32 s1_2451
	word32 s3_2459
	word32 s8_2464
	word32 s10_2466
	word32 a2_2454
	word32 a3_2455
	word32 a4_2456
	word32 a5_2457
	word32 a1_2453
	word32 s9_2465
	word32 s5_2461
	word32 s6_2462
	word32 s7_2463
	word32 s4_2460
	word32 s11_2467
	ra_1017 = bl_printk(ra_1017, 0x23082C50<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2451, out a0_2452, out a1_2453, out a2_2454, out a3_2455, out a4_2456, out a5_2457, out s2_2458, out s3_2459, out s4_2460, out s5_2461, out s6_2462, out s7_2463, out s8_2464, out s9_2465, out s10_2466, out s11_2467)
l23032BC2:
	word32 a0_418
	word32 a3_416
	Mem324[0x4000A700<32>:byte] = 1<8>
	Mem326[0x4000A700<32>:byte] = 2<8>
	Mem328[0x4000A704<32>:byte] = 0x1F<8>
	Mem330[0x4000A704<32>:byte] = 0x3F<8>
	word32 s1_336 = CONVERT(SLICE(CONVERT(Mem330[0x4000A708<32>:uint16], uint16, word32), word16, 0), word16, word32)
	branch CONVERT(Mem330[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23033324
l23033324:
	branch s1_336 == 0xC0000E0<32> l23032C88
l23032BF0:
	branch CONVERT(Mem330[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l230332C4
l230332C4:
	branch s1_336 != 0xC0000E0<32> l23033338
l230332CE:
l23032BFC:
	branch Mem330[0x4200DE84<32>:int32] == 0<32> l23033092
l23033092:
	word32 a5_2468
	xTaskGetTickCount(out a5_2468)
l23032C0A:
	word32 a5_2469
	xTaskGetTickCountFromISR(out a5_2469)
l23032C0E:
	word32 s1_378
	word32 s2_381
	word32 s4_383
	word32 s5_384
	word32 s6_385
	word32 s11_2753
	word32 s7_2749
	word32 s9_2751
	word32 s10_2752
	word32 s8_2750
	word32 a4_2746
	word32 s3_2748
	word32 a5_2747
	word32 a1_2743
	word32 a2_2744
	word32 a3_2745
	word32 a0_2742
	ra_1017 = bl_printk(ra_1017, 0x23082C84<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_378, out a0_2742, out a1_2743, out a2_2744, out a3_2745, out a4_2746, out a5_2747, out s2_381, out s3_2748, out s4_383, out s5_384, out s6_385, out s7_2749, out s8_2750, out s9_2751, out s10_2752, out s11_2753)
	branch s1_378 != s2_381 l2303332E
l2303332E:
	branch CONVERT(Mem330[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032C88
l23033338:
	branch CONVERT(Mem330[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032C88
l23033346:
	branch Mem330[0x4200DE84<32>:int32] == 0<32> l2303309E
l2303309E:
	word32 a5_2723
	xTaskGetTickCount(out a5_2723)
l23033352:
	word32 a5_2724
	xTaskGetTickCountFromISR(out a5_2724)
l23033356:
	a3_416 = 0x23082B28<32>
	a0_418 = 0x23082CF0<32>
l23032C40:
	branch CONVERT(Mem330[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032C88
l23032C4A:
	branch CONVERT(Mem330[s5_384 + -931<i32>:byte], byte, word32) >u 2<32> l23032C88
l23032C52:
	branch Mem330[s6_385 + -380<i32>:int32] == 0<32> l23033098
l23033098:
	word32 a5_2470
	xTaskGetTickCount(out a5_2470)
l23032C5A:
	word32 a5_2471
	xTaskGetTickCountFromISR(out a5_2471)
l23032C5E:
	a3_416 = s4_383 + -1240<i32>
	a0_418 = 0x23082CB8<32>
l23032C7A:
	word32 s11_2741
	word32 a3_2729
	word32 a4_2730
	word32 s2_2732
	word32 s5_2735
	word32 s6_2736
	word32 s8_2738
	word32 s9_2739
	word32 s10_2740
	word32 s7_2737
	word32 s4_2734
	word32 s3_2733
	word32 a5_2731
	word32 a2_2728
	word32 s1_2725
	word32 a0_2726
	word32 a1_2727
	ra_1017 = bl_printk(ra_1017, a0_418, a3_416, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2725, out a0_2726, out a1_2727, out a2_2728, out a3_2729, out a4_2730, out a5_2731, out s2_2732, out s3_2733, out s4_2734, out s5_2735, out s6_2736, out s7_2737, out s8_2738, out s9_2739, out s10_2740, out s11_2741)
	branch CONVERT(Mem330[0x4201FC5C<32>:byte], byte, word32) <=u 2<32> l23033284
l23033284:
	branch CONVERT(Mem330[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032C88
l23033290:
	branch Mem330[0x4200DE84<32>:int32] == 0<32> l230330A4
l230330A4:
	word32 a5_2704
	xTaskGetTickCount(out a5_2704)
l2303329C:
	word32 a5_2705
	xTaskGetTickCountFromISR(out a5_2705)
l230332A0:
	word32 s1_2706
	word32 a1_2708
	word32 s3_2714
	word32 s5_2716
	word32 s6_2717
	word32 s7_2718
	word32 s9_2720
	word32 s10_2721
	word32 s11_2722
	word32 s8_2719
	word32 s4_2715
	word32 a3_2710
	word32 a4_2711
	word32 s2_2713
	word32 a5_2712
	word32 a2_2709
	word32 a0_2707
	ra_1017 = bl_printk(ra_1017, 0x23082D28<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2706, out a0_2707, out a1_2708, out a2_2709, out a3_2710, out a4_2711, out a5_2712, out s2_2713, out s3_2714, out s4_2715, out s5_2716, out s6_2717, out s7_2718, out s8_2719, out s9_2720, out s10_2721, out s11_2722)
l23032C88:
	Mem525[0x4000A700<32>:byte] = 1<8>
	word32 a4_527 = 1000<i32>
l23032CA0:
	Mem532[0x4000A704<32>:byte] = 0x1F<8>
	Mem534[0x4000A704<32>:byte] = 0x3F<8>
	a4_527 = a4_527 + 0xFFFFFFFF<32>
	branch a4_527 != 0<32> l23032CA0
l23032CAC:
	word32 s1_539 = 0xF69118<32>
l23032CB8:
	word32 a4_542 = s1_539 >>u 0x10<u32>
	branch a4_542 != 0<32> l230330AA
l230330AA:
	s1_539 = (s1_539 & 0xFFFFFFF<32>) + a4_542
l23032CC0:
	branch CONVERT(Mem534[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032D22
l23032CD8:
	branch CONVERT(Mem534[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032D22
l23032CE4:
	branch Mem534[0x4200DE84<32>:int32] == 0<32> l230330B0
l230330B0:
	word32 a5_2472
	xTaskGetTickCount(out a5_2472)
l23032CF0:
	word32 a5_2473
	xTaskGetTickCountFromISR(out a5_2473)
l23032CF4:
	word32 a4_2514
	word32 s2_2516
	word32 s3_2517
	word32 s4_2518
	word32 s6_2520
	word32 s7_2521
	word32 s8_2522
	word32 s10_2524
	word32 s11_2525
	word32 s9_2523
	word32 s5_2519
	word32 a5_2515
	word32 a0_2510
	word32 a1_2511
	word32 a3_2513
	word32 a2_2512
	word32 s1_2509
	ra_1017 = bl_printk(ra_1017, 0x23082C50<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2509, out a0_2510, out a1_2511, out a2_2512, out a3_2513, out a4_2514, out a5_2515, out s2_2516, out s3_2517, out s4_2518, out s5_2519, out s6_2520, out s7_2521, out s8_2522, out s9_2523, out s10_2524, out s11_2525)
l23032D22:
	Mem613[0x4000A700<32>:byte] = 1<8>
	Mem615[0x4000A700<32>:byte] = 2<8>
	word32 a4_617 = 1000<i32>
l23032D40:
	Mem622[0x4000A704<32>:byte] = 0x1F<8>
	Mem624[0x4000A704<32>:byte] = 0x3F<8>
	a4_617 = a4_617 + 0xFFFFFFFF<32>
	branch a4_617 != 0<32> l23032D40
l23032D4C:
	word32 a4_629 = 0xF69118<32>
l23032D58:
	word32 a3_632 = a4_629 >>u 0x10<u32>
	branch a3_632 != 0<32> l230330B6
l230330B6:
	a4_629 = (a4_629 & 0xFFFFFFF<32>) + a3_632
l23032D60:
	word32 s2_646 = CONVERT(SLICE(CONVERT(Mem624[0x4000A708<32>:uint16], uint16, word32), word16, 0), word16, word32)
	word32 s1_647 = ~a4_629
	branch CONVERT(Mem624[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032DC4
l23032D7C:
	branch CONVERT(Mem624[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032DC4
l23032D88:
	branch Mem624[0x4200DE84<32>:int32] == 0<32> l230330BC
l230330BC:
	word32 a5_2526
	xTaskGetTickCount(out a5_2526)
l23032D94:
	word32 a5_2527
	xTaskGetTickCountFromISR(out a5_2527)
l23032D98:
	word32 s10_2541
	word32 s11_2542
	word32 a1_2529
	word32 a2_2530
	word32 a4_2532
	word32 s4_2535
	word32 s5_2536
	word32 s7_2538
	word32 s8_2539
	word32 s9_2540
	word32 s6_2537
	word32 s3_2534
	word32 a5_2533
	word32 a3_2531
	word32 a0_2528
	ra_1017 = bl_printk(ra_1017, 0x23082C84<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_647, out a0_2528, out a1_2529, out a2_2530, out a3_2531, out a4_2532, out a5_2533, out s2_646, out s3_2534, out s4_2535, out s5_2536, out s6_2537, out s7_2538, out s8_2539, out s9_2540, out s10_2541, out s11_2542)
l23032DC4:
	word32 a0_728
	word32 a3_707 = CONVERT(Mem624[0x4201FC5C<32>:byte], byte, word32)
	branch s2_646 != CONVERT(SLICE(s1_647, word16, 0), word16, word32) l23033142
l23033142:
	branch a3_707 >u 4<32> l230330F4
l23033148:
	branch CONVERT(Mem624[0x4201FC5D<32>:byte], byte, word32) >u 4<32> l230330F4
l23033154:
	branch Mem624[0x4200DE84<32>:int32] == 0<32> l23033184
l23033184:
	word32 a5_2685
	xTaskGetTickCount(out a5_2685)
l2303315E:
	word32 a5_2686
	xTaskGetTickCountFromISR(out a5_2686)
l23033162:
	a0_728 = 0x23082CF0<32>
l23032DD2:
	branch a3_707 >u 2<32> l23032DE4
l23032DD8:
	branch CONVERT(Mem624[0x4201FC5D<32>:byte], byte, word32) <=u 2<32> l230330C2
l230330C2:
	branch Mem624[0x4200DE84<32>:int32] == 0<32> l2303313C
l2303313C:
	word32 a5_2593
	xTaskGetTickCount(out a5_2593)
l230330CC:
	word32 a5_2594
	xTaskGetTickCountFromISR(out a5_2594)
l230330D0:
	a0_728 = 0x23082CB8<32>
l230330F0:
	word32 a4_2692
	word32 s4_2696
	word32 s5_2697
	word32 s7_2699
	word32 s11_2703
	word32 s8_2700
	word32 s10_2702
	word32 s9_2701
	word32 s6_2698
	word32 a5_2693
	word32 s3_2695
	word32 s2_2694
	word32 s1_2687
	word32 a1_2689
	word32 a2_2690
	word32 a3_2691
	word32 a0_2688
	ra_1017 = bl_printk(ra_1017, a0_728, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2687, out a0_2688, out a1_2689, out a2_2690, out a3_2691, out a4_2692, out a5_2693, out s2_2694, out s3_2695, out s4_2696, out s5_2697, out s6_2698, out s7_2699, out s8_2700, out s9_2701, out s10_2702, out s11_2703)
l230330F4:
	branch CONVERT(Mem624[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032DE4
l230330FE:
	branch CONVERT(Mem624[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032DE4
l2303310A:
	branch Mem624[0x4200DE84<32>:int32] == 0<32> l2303318A
l2303318A:
	word32 a5_2595
	xTaskGetTickCount(out a5_2595)
l23033114:
	word32 a5_2596
	xTaskGetTickCountFromISR(out a5_2596)
l23033118:
	word32 a0_2598
	word32 a1_2599
	word32 s5_2607
	word32 s6_2608
	word32 s8_2610
	word32 s10_2612
	word32 s11_2613
	word32 s9_2611
	word32 s7_2609
	word32 a3_2601
	word32 s4_2606
	word32 s3_2605
	word32 a4_2602
	word32 s2_2604
	word32 a5_2603
	word32 a2_2600
	word32 s1_2597
	ra_1017 = bl_printk(ra_1017, 0x23082D50<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2597, out a0_2598, out a1_2599, out a2_2600, out a3_2601, out a4_2602, out a5_2603, out s2_2604, out s3_2605, out s4_2606, out s5_2607, out s6_2608, out s7_2609, out s8_2610, out s9_2611, out s10_2612, out s11_2613)
l23032DE4:
	Mem837[0x4000A700<32>:byte] = 1<8>
	Mem839[0x4000A704<32>:byte] = 0x1F<8>
	Mem841[0x4000A704<32>:byte] = 0x3F<8>
	Mem843[0x4000A704<32>:byte] = 0xA1<8>
	branch CONVERT(Mem843[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032E5C
l23032E16:
	branch CONVERT(Mem843[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032E5C
l23032E22:
	branch Mem843[0x4200DE84<32>:int32] == 0<32> l23033190
l23033190:
	word32 a5_2543
	xTaskGetTickCount(out a5_2543)
l23032E2E:
	word32 a5_2544
	xTaskGetTickCountFromISR(out a5_2544)
l23032E32:
	word32 s1_2545
	word32 a3_2549
	word32 a4_2550
	word32 s8_2558
	word32 s9_2559
	word32 s11_2561
	word32 s10_2560
	word32 s2_2552
	word32 s7_2557
	word32 s6_2556
	word32 s3_2553
	word32 s5_2555
	word32 s4_2554
	word32 a5_2551
	word32 a0_2546
	word32 a2_2548
	word32 a1_2547
	ra_1017 = bl_printk(ra_1017, 0x23082C50<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2545, out a0_2546, out a1_2547, out a2_2548, out a3_2549, out a4_2550, out a5_2551, out s2_2552, out s3_2553, out s4_2554, out s5_2555, out s6_2556, out s7_2557, out s8_2558, out s9_2559, out s10_2560, out s11_2561)
l23032E5C:
	word32 a0_1016
	word32 a3_1013
	Mem901[0x4000A700<32>:byte] = 1<8>
	Mem903[0x4000A700<32>:byte] = 2<8>
	Mem905[0x4000A704<32>:byte] = 0x1F<8>
	Mem907[0x4000A704<32>:byte] = 0x3F<8>
	Mem909[0x4000A704<32>:byte] = 0xA1<8>
	word32 s2_915 = CONVERT(SLICE(CONVERT(Mem909[0x4000A708<32>:uint16], uint16, word32), word16, 0), word16, word32)
	branch CONVERT(Mem909[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l230332D0
l230332D0:
	branch s2_915 == 0xC00003F<32> l23032EF6
l23032E94:
	branch CONVERT(Mem909[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23033278
l23033278:
	branch s2_915 != 0xC00003F<32> l230332E4
l23033282:
l23032EA0:
	branch Mem909[0x4200DE84<32>:int32] == 0<32> l23033196
l23033196:
	word32 a5_2562
	xTaskGetTickCount(out a5_2562)
l23032EAE:
	word32 a5_2563
	xTaskGetTickCountFromISR(out a5_2563)
l23032EB2:
	word32 s1_957
	word32 s2_960
	word32 s4_962
	word32 s5_963
	word32 s6_964
	word32 a0_2673
	word32 s7_2680
	word32 s8_2681
	word32 s10_2683
	word32 s11_2684
	word32 s9_2682
	word32 a2_2675
	word32 s3_2679
	word32 a3_2676
	word32 a4_2677
	word32 a5_2678
	word32 a1_2674
	ra_1017 = bl_printk(ra_1017, 0x23082C84<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_957, out a0_2673, out a1_2674, out a2_2675, out a3_2676, out a4_2677, out a5_2678, out s2_960, out s3_2679, out s4_962, out s5_963, out s6_964, out s7_2680, out s8_2681, out s9_2682, out s10_2683, out s11_2684)
	branch s2_960 != s1_957 l230332DA
l230332DA:
	branch CONVERT(Mem909[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l230331C6
l230332E4:
	branch CONVERT(Mem909[0x4201FC5D<32>:byte], byte, word32) >u 4<32> l230331C6
l230332F2:
	branch Mem909[0x4200DE84<32>:int32] == 0<32> l23033214
l23033214:
	word32 a5_2654
	xTaskGetTickCount(out a5_2654)
l230332FE:
	word32 a5_2655
	xTaskGetTickCountFromISR(out a5_2655)
l23033302:
	a3_1013 = 0x23082B28<32>
	a0_1016 = 0x23082CF0<32>
l23032EE4:
	branch CONVERT(Mem909[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032EF6
l23032EEE:
	branch CONVERT(Mem909[s5_963 + -931<i32>:byte], byte, word32) <=u 2<32> l2303319C
l2303319C:
	branch Mem909[s6_964 + -380<i32>:int32] == 0<32> l2303320E
l2303320E:
	word32 a5_2633
	xTaskGetTickCount(out a5_2633)
l230331A2:
	word32 a5_2634
	xTaskGetTickCountFromISR(out a5_2634)
l230331A6:
	a3_1013 = s4_962 + -1240<i32>
	a0_1016 = 0x23082CB8<32>
l230331C2:
	word32 s1_2656
	word32 a0_2657
	word32 a2_2659
	word32 s4_2665
	word32 s6_2667
	word32 s7_2668
	word32 s8_2669
	word32 s10_2671
	word32 s11_2672
	word32 s9_2670
	word32 s5_2666
	word32 a4_2661
	word32 a5_2662
	word32 s3_2664
	word32 s2_2663
	word32 a3_2660
	word32 a1_2658
	ra_1017 = bl_printk(ra_1017, a0_1016, a3_1013, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2656, out a0_2657, out a1_2658, out a2_2659, out a3_2660, out a4_2661, out a5_2662, out s2_2663, out s3_2664, out s4_2665, out s5_2666, out s6_2667, out s7_2668, out s8_2669, out s9_2670, out s10_2671, out s11_2672)
l230331C6:
	branch CONVERT(Mem909[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23032EF6
l230331D0:
	branch CONVERT(Mem909[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032EF6
l230331DC:
	branch Mem909[0x4200DE84<32>:int32] == 0<32> l2303321A
l2303321A:
	word32 a5_2635
	xTaskGetTickCount(out a5_2635)
l230331E6:
	word32 a5_2636
	xTaskGetTickCountFromISR(out a5_2636)
l230331EA:
	word32 a5_2643
	word32 s5_2647
	word32 s6_2648
	word32 s8_2650
	word32 s9_2651
	word32 s11_2653
	word32 s10_2652
	word32 s7_2649
	word32 s2_2644
	word32 s4_2646
	word32 s3_2645
	word32 s1_2637
	word32 a0_2638
	word32 a2_2640
	word32 a3_2641
	word32 a4_2642
	word32 a1_2639
	ra_1017 = bl_printk(ra_1017, 0x23082D78<32>, 0x23082B28<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_2637, out a0_2638, out a1_2639, out a2_2640, out a3_2641, out a4_2642, out a5_2643, out s2_2644, out s3_2645, out s4_2646, out s5_2647, out s6_2648, out s7_2649, out s8_2650, out s9_2651, out s10_2652, out s11_2653)
l23032EF6:
	word32 a3_1147
	word32 a2_2567
	word32 a4_2569
	word32 a5_2570
	word32 t1_2571
	word32 a1_2573
	word32 a2_2574
	word32 a3_2575
	word32 a4_2582
	word32 a5_2583
	word32 a5_2577
	word32 a2_2581
	word32 t1_2578
	word32 a0_2579
	word32 a1_2580
	word32 a4_2576
	word32 a0_2572
	word32 a3_2568
	word32 t1_2564
	word32 a1_2566
	word32 a0_2565
	word32 ra_1150 = memset(memset(memset(ra_1017, fp + -116<i32>, 0<32>, 0x1C<32>, out t1_2564, out a0_2565, out a1_2566, out a2_2567, out a3_2568, out a4_2569, out a5_2570), fp + -88<i32>, 0<32>, 0x1C<32>, out t1_2571, out a0_2572, out a1_2573, out a2_2574, out a3_2575, out a4_2576, out a5_2577), fp + -60<i32>, 0<32>, 0x1C<32>, out t1_2578, out a0_2579, out a1_2580, out a2_2581, out a3_1147, out a4_2582, out a5_2583)
	word32 a5_1238
	word32 a4_1237
	word32 a3_1236
	word32 a2_1235
	bl_dma_copy(fp + -116<i32>, a3_1147, 0x403E8<32>, mstatus, out a2_1235, out a3_1236, out a4_1237, out a5_1238)
l23032F8A:
	branch a5_1238 != 0<32> l23033220
l23033220:
	word32 a0_2585
	word32 s3_2588
	word32 s4_2589
	word32 s8_2590
	word32 s2_2587
	word32 a1_2586
	word32 s1_2584
	s0_1257 = vTaskDelay(2<32>, a2_1235, a3_1236, a4_1237, a5_1238, mstatus, 0<32>, 0x4000A708<32>, dwArgB8, dwArgF8, out s1_2584, out a0_2585, out a1_2586, out a2_1235, out a3_1236, out a4_1237, out a5_1238, out s2_2587, out s3_2588, out s4_2589, out s8_2590)
l23032F90:
	word32 a0_1292
	word32 a4_1271 = CONVERT(Mem1187[s0_1257 + -932<i32>:byte], byte, word32)
	branch true l2303322E
l2303322E:
	branch a4_1271 >u 4<32> l23032FEA
l23033234:
	branch CONVERT(Mem1187[0x4201FC5D<32>:byte], byte, word32) >u 4<32> l23032FEA
l23033240:
	branch Mem1187[0x4200DE84<32>:int32] == 0<32> l23033272
l23033272:
	word32 a5_2614
	xTaskGetTickCount(out a5_2614)
l2303324A:
	word32 a5_2615
	xTaskGetTickCountFromISR(out a5_2615)
l2303324E:
	a0_1292 = 0x23082CF0<32>
l23032FA2:
	branch a4_1271 >u 2<32> l23032FEA
l23032FA8:
	branch CONVERT(Mem1187[0x4201FC5D<32>:byte], byte, word32) >u 2<32> l23032FEA
l23032FB4:
	branch Mem1187[0x4200DE84<32>:int32] == 0<32> l23033228
l23033228:
	word32 a5_2591
	xTaskGetTickCount(out a5_2591)
l23032FC0:
	word32 a5_2592
	xTaskGetTickCountFromISR(out a5_2592)
l23032FC4:
	a0_1292 = 0x23082CB8<32>
l23032FE6:
	word32 s1_2616
	word32 a1_2618
	word32 a2_2619
	word32 a3_2620
	word32 a5_2622
	word32 s2_2623
	word32 s3_2624
	word32 s10_2631
	word32 s11_2632
	word32 s5_2626
	word32 s9_2630
	word32 s6_2627
	word32 s7_2628
	word32 s8_2629
	word32 s4_2625
	word32 a4_2621
	word32 a0_2617
	bl_printk(ra_1150, a0_1292, 0x23082B28<32>, 0x230329BC<32>, 0x4000A708<32>, dwLoc10, dwLoc0C, fp + -128<i32>, ra, out s1_2616, out a0_2617, out a1_2618, out a2_2619, out a3_2620, out a4_2621, out a5_2622, out s2_2623, out s3_2624, out s4_2625, out s5_2626, out s6_2627, out s7_2628, out s8_2629, out s9_2630, out s10_2631, out s11_2632)
l23032FEA:
	return
bl_cks_test_exit:


void _cb_cmd(word32 ra, word32 a0, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
_cb_cmd_entry:
l23033378:
	branch CONVERT(Mem0[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l230333CC
l2303338E:
	branch CONVERT(Mem10[0x4201FC5E<32>:byte], byte, word32) >u 2<32> l230333CC
l2303339A:
	branch Mem10[0x4200DE84<32>:int32] == 0<32> l230333D8
l230333D8:
	word32 a5_121
	xTaskGetTickCount(out a5_121)
l230333A4:
	word32 a5_122
	xTaskGetTickCountFromISR(out a5_122)
l230333A8:
	word32 s1_123
	word32 a0_124
	word32 a1_125
	word32 a2_126
	word32 a3_127
	word32 a4_128
	word32 a5_129
	word32 s2_130
	word32 s3_131
	word32 s4_132
	word32 s5_133
	word32 s6_134
	word32 s7_135
	word32 s8_136
	word32 s9_137
	word32 s10_138
	word32 s11_139
	bl_printk(ra, 0x23082B34<32>, 0x23082DCC<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_123, out a0_124, out a1_125, out a2_126, out a3_127, out a4_128, out a5_129, out s2_130, out s3_131, out s4_132, out s5_133, out s6_134, out s7_135, out s8_136, out s9_137, out s10_138, out s11_139)
l230333CC:
	Mem59[a0 + 8<i32>:word32] = 0<32>
	return
_cb_cmd_exit:


void bl_dma_int_process(word32 ra, word32 s0, word32 s1, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s0:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 t3 tp
// Preserved: s8 sp
bl_dma_int_process_entry:
l230333DE:
	word32 s7_110 = Mem23[Mem23[s0 + 4<i32>:word32] + 12<i32>:int32]
	bl_irq_ctx_get(ra, 0x1F<32>, fp + -52<i32>, dwLoc38, dwArg10, dwArg14, dwArg38, ra)
	word32 s2_103 = 0<32>
	word32 s8_106 = 1<32>
	word32 s3_104 = 0x4000C000<32>
	word32 s6_105 = 4<32>
l23033410:
	word32 a5_36 = s8_106 << s2_103
	word32 s5_109 = a5_36 & s0
	word32 s4_102 = a5_36 & s7_110
	branch s5_109 != 0<32> l2303345A
l2303345A:
	s0 = Mem42[s3_104 + 8<i32>:int32] | a5_36
	Mem45[s3_104 + 8<i32>:word32] = s0
	branch s4_102 == 0<32> l2303342E
l23033468:
l23033420:
	branch s4_102 == 0<32> l2303343C
l23033424:
	s0 = Mem47[s3_104 + 16<i32>:int32] | a5_36
	Mem51[s3_104 + 16<i32>:word32] = s0
l2303342E:
	word32 a5_123 = Mem55[s1 + 4<i32>:word32]
l23033434:
	a5_123 = Mem55[a5_123:word32]
	branch s1 != a5_123 l2303346A
l2303346A:
	word32 s1_101 = Mem55[a5_123 + 8<i32>:word32]
	branch a5_123 != s2_103 l23033484
l23033470:
	word32 s1_71 = Mem55[a5_123 + 12<i32>:word32]
	branch a5_123 == 0<32> l2303347A
l23033474:
	branch s5_109 == 0<32> l2303347A
l23033478:
	call a5_123 (retsize: 0;)
		uses: ra:ra_76,s0:s0_77,s1:s1_71,s2:s2_70,s3:s3_73,s4:s4_78,s5:s5_72,s6:s6_74,s7:s7_79,s8:s8_75,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0038:dwArg38,Stack +FFFFFFC8:dwLoc38
		defs: a5:a5_91,ra:ra_85,s0:s0_86,s2:s2_81,s3:s3_82,s4:s4_88,s5:s5_89,s6:s6_83,s7:s7_90,s8:s8_84
l2303347A:
	s1_101 = Mem55[a5_123 + 16<i32>:word32]
	branch a5_123 == 0<32> l23033484
l2303347E:
	branch s4_102 == 0<32> l23033484
l23033482:
	call a5_123 (retsize: 0;)
		uses: ra:ra_107,s0:s0_108,s1:s1_101,s2:s2_103,s3:s3_104,s4:s4_102,s5:s5_109,s6:s6_105,s7:s7_110,s8:s8_106,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0038:dwArg38,Stack +FFFFFFC8:dwLoc38
		defs: a5:a5_123,ra:ra_117,s0:s0_118,s1:s1_119,s2:s2_113,s3:s3_114,s4:s4_120,s5:s5_121,s6:s6_115,s7:s7_122,s8:s8_116
l23033484:
	s1 = Mem55[s1_101 + 4<i32>:word32]
l2303343C:
	s2_103 = s2_103 + 1<32>
	branch s2_103 != s6_105 l23033410
l23033442:
	0<32> = dwArg0198
	return
bl_dma_int_process_exit:


word32 bl_dma_int_clear(word32 a0, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_IRQHandler
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
bl_dma_int_clear_entry:
l23033488:
	word32 a0_8 = 1<32> << a0
	word32 a5_12 = 1<32>
	branch (a4 & a0_8 & 255<i32>) == 0<32> l230334A2
l2303349C:
	Mem13[(a0_8 | 1<32>) + 8<i32>:word32] = Mem0[9<32>:word32]
	a5_12 = a0_8 | 1<32>
l230334A2:
	word32 a5_18 = a5_12 & a0_8
	word32 a4_16 = Mem15[a5_12 + 12<i32>:word32]
	branch (a5_18 & 255<i32>) == 0<32> l230334B6
l230334B0:
	a4_16 = Mem15[(a5_18 & 255<i32>) + 16<i32>:word32]
	Mem22[(a0_8 | a5_18 & 255<i32>) + 16<i32>:word32] = a4_16
l230334B6:
	a5Out = a5_18 & 255<i32>
	return a4_16
bl_dma_int_clear_exit:


void bl_dma_IRQHandler(word32 ra, word32 a4, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 t1
// Preserved: s0 sp
bl_dma_IRQHandler_entry:
l230334BA:
	word32 a5_14
	word32 a4_13 = bl_dma_int_clear(0<32>, a4, out a5_14)
	word32 a5_17
	branch utils_list_pop_front(a4_13, a5_14, out a5_17) != 0<32> l23033526
l23033526:
	branch a5_17 == 0<32> l2303352E
l2303352A:
	call a5_17 (retsize: 0;)
		uses: a4:a4_13,a5:a5_17
l2303352E:
	branch Mem8[0x4200DEAC<32>:int32] == 0<32> l23033548
l23033548:
	return
l23033534:
	DMA_LLI_Update(0<32>)
l23033544_thunk_DMA_Channel_Enable:
	DMA_Channel_Enable()
	return
bl_dma_IRQHandler_exit:
l230334D4:
	branch CONVERT(Mem8[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l2303351E
l230334E2:
	branch CONVERT(Mem8[0x4201FC5E<32>:byte], byte, word32) >u 2<32> l2303351E
l230334EE:
	branch Mem8[0x4200DE84<32>:int32] == 0<32> l23033520
l23033520:
	word32 a5_118
	xTaskGetTickCount(out a5_118)
l230334F8:
	word32 a5_119
	xTaskGetTickCountFromISR(out a5_119)
l230334FC:
	word32 a1_122
	word32 s1_120
	word32 a0_121
	word32 a2_123
	word32 a3_124
	word32 a4_125
	word32 a5_126
	word32 s2_127
	word32 s3_128
	word32 s4_129
	word32 s5_130
	word32 s6_131
	word32 s7_132
	word32 s8_133
	word32 s9_134
	word32 s10_135
	word32 s11_136
	bl_printk(ra, 0x23082DD8<32>, 0x23082DCC<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_120, out a0_121, out a1_122, out a2_123, out a3_124, out a4_125, out a5_126, out s2_127, out s3_128, out s4_129, out s5_130, out s6_131, out s7_132, out s8_133, out s9_134, out s10_135, out s11_136)
l2303351E:


word32 bl_dma_copy(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_cks_test
//      bl_dma_test
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp t1
bl_dma_copy_entry:
l23033550:
	word32 a5_60
	vTaskEnterCritical(a4, mstatus, out a5_60)
	word32 a5_17 = Mem9[0x4200DEAC<32>:int32]
	branch a5_17 != 0<32> l2303357A
l2303356A:
	DMA_LLI_Update(0<32>)
	a5_17 = DMA_Channel_Enable()
l2303357A:
	word32 a0_33 = utils_list_push_back(a0, a5_17)
l2303358C_thunk_vTaskExitCritical:
	word32 a5_43
	word32 a4_45
	word32 a3_44 = vTaskExitCritical(a3, mstatus, out a4_45, out a5_43)
	a2Out = dwArg10
	a3Out = a3_44
	a4Out = a4_45
	a5Out = a5_43
	return a0_33
bl_dma_copy_exit:


word32 bl_dma_irq_register(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: ra s0 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_dma_irq_register_entry:
l23033590:
	branch a0 >u 4<32> l230335A8
l230335A4:
	branch a1 != 0<32> l2303360A
l2303360A:
	word32 a4_27 = bl_irq_ctx_get(ra, 0x1F<32>, fp + -36<i32>, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C)
	word32 a5_31 = Mem15[s0 + 4<i32>:word32]
l2303361C:
	branch a5_31 != s0 l23033692
l23033692:
	word32 s0_36 = Mem15[a4_27 + 8<i32>:word32]
	branch a0 != a4_27 l230336EC
l230336EC:
	s0 = Mem15[s0_36 + 4<i32>:word32]
l23033698:
	branch CONVERT(Mem15[0x4201FC5C<32>:byte], byte, word32) >u 3<32> l230335F2
l230336A6:
	branch CONVERT(Mem15[0x4201FC5E<32>:byte], byte, word32) >u 3<32> l230335F2
l230336B2:
	branch Mem15[0x4200DE84<32>:int32] == 0<32> l230336E6
l230336E6:
	word32 a5_441
	xTaskGetTickCount(out a5_441)
l230336BC:
	word32 a5_442
	xTaskGetTickCountFromISR(out a5_442)
l230336C0:
	word32 a2_446
	word32 a4_448
	word32 a3_447
	word32 s2_450
	word32 a5_449
	word32 s1_443
	word32 a1_445
	word32 a0_444
	word32 s3_451
	word32 s4_452
	word32 s5_453
	word32 s7_454
	word32 s8_455
	word32 s9_456
	word32 s10_457
	word32 s11_458
	ra = bl_printk(ra, 0x23082E98<32>, 0x23082DCC<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_443, out a0_444, out a1_445, out a2_446, out a3_447, out a4_448, out a5_449, out s2_450, out s3_451, out s4_452, out s5_453, out s6, out s7_454, out s8_455, out s9_456, out s10_457, out s11_458)
l23033620:
	word32 a0_92
	word32 a1_433
	word32 a2_434
	word32 a3_435
	word32 a5_436
	word32 a6_437
	word32 s8_438
	word32 s1_100
	word32 s2_101
	word32 s4_103
	word32 s3_102
	word32 a4_109
	pvPortMalloc(ra, a0, 0x18<32>, a3, a4_27, a5_31, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_100, out a0_92, out a1_433, out a2_434, out a3_435, out a4_109, out a5_436, out a6_437, out s2_101, out s3_102, out s4_103, out s8_438)
	branch a0_92 != 0<32> l23033674
l2303362A:
	a4_109 = CONVERT(Mem15[0x4201FC5C<32>:byte], byte, word32)
	branch a4_109 >u 4<32> l23033674
l23033638:
	a4_109 = CONVERT(Mem15[0x4201FC5E<32>:byte], byte, word32)
	branch a4_109 >u 4<32> l23033674
l23033644:
	branch Mem15[0x4200DE84<32>:int32] == 0<32> l230336F0
l230336F0:
	word32 a5_439
	xTaskGetTickCount(out a5_439)
l2303364E:
	word32 a5_440
	xTaskGetTickCountFromISR(out a5_440)
l23033652:
	word32 a0_459
	word32 a1_460
	word32 a2_461
	word32 a3_462
	word32 a5_463
	word32 s5_464
	word32 s7_465
	word32 s8_466
	word32 s9_467
	word32 s10_468
	word32 s11_469
	ra = bl_printk(ra, 0x23082ECC<32>, 0x23082DCC<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_100, out a0_459, out a1_460, out a2_461, out a3_462, out a4_109, out a5_463, out s2_101, out s3_102, out s4_103, out s5_464, out s6, out s7_465, out s8_466, out s9_467, out s10_468, out s11_469)
l23033674:
	Mem159[s1_100 + 8<i32>:word32] = a0_92
	Mem161[a0_92 + 12<i32>:word32] = s2_101
	Mem163[a0_92 + 16<i32>:word32] = s4_103
	Mem165[a0_92 + 20<i32>:word32] = s3_102
	word32 a5_169 = Mem165[a4_109 + 4<i32>:word32]
	Mem170[a5_169:word32] = a0_92
	Mem171[a4_109 + 4<i32>:word32] = a0_92
	Mem172[a0_92 + 4<i32>:word32] = a5_169
	Mem173[a0_92:word32] = a4_109
l230335A8:
	branch CONVERT(Mem15[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l230335F2
l230335B6:
	branch CONVERT(Mem15[0x4201FC5E<32>:byte], byte, word32) >u 4<32> l230335F2
l230335C2:
	branch Mem15[0x4200DE84<32>:int32] == 0<32> l23033604
l23033604:
	word32 a5_415
	xTaskGetTickCount(out a5_415)
l230335CC:
	word32 a5_416
	xTaskGetTickCountFromISR(out a5_416)
l230335D0:
	word32 s1_417
	word32 a0_418
	word32 a1_419
	word32 a2_420
	word32 a3_421
	word32 a4_422
	word32 a5_423
	word32 s2_424
	word32 s3_425
	word32 s4_426
	word32 s5_427
	word32 s7_428
	word32 s8_429
	word32 s9_430
	word32 s10_431
	word32 s11_432
	ra = bl_printk(ra, 0x23082E70<32>, 0x23082DCC<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_417, out a0_418, out a1_419, out a2_420, out a3_421, out a4_422, out a5_423, out s2_424, out s3_425, out s4_426, out s5_427, out s6, out s7_428, out s8_429, out s9_430, out s10_431, out s11_432)
l230335F2:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s6Out = s6
	return ra
bl_dma_irq_register_exit:


word32 bl_dma_init(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg9C, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & s0Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +009C:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: ra s0 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_dma_init_entry:
l230336F6:
	word32 a0_161
	utils_list_init(0x4200DEAC<32>)
	word32 a0_18
	word32 a3_21
	word32 a4_22
	word32 a5_23
	word32 s1_26
	word32 a1_318
	word32 a2_319
	word32 s2_321
	word32 a6_320
	word32 s3_322
	word32 s4_323
	word32 s8_324
	word32 s0_118 = pvPortMalloc(ra, s1, 4<32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_26, out a0_18, out a1_318, out a2_319, out a3_21, out a4_22, out a5_23, out a6_320, out s2_321, out s3_322, out s4_323, out s8_324)
	branch a0_18 != 0<32> l23033770
l23033770:
	word32 a0_35
	word32 a5_40
	word32 s1_43
	word32 s2_44
	word32 a1_325
	word32 a2_326
	word32 a3_327
	word32 a4_328
	word32 a6_329
	word32 s3_330
	word32 s4_331
	word32 s8_332
	s0_118 = pvPortMalloc(ra, s1_26, 8<32>, a3_21, a4_22, a5_23, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_43, out a0_35, out a1_325, out a2_326, out a3_327, out a4_328, out a5_40, out a6_329, out s2_44, out s3_330, out s4_331, out s8_332)
	Mem50[a0_35:word32] = s0_118
	branch a0_35 != 0<32> l230337CA
l230337CA:
	Mem51[a0_35 + 4<i32>:word32] = a0_35
	Mem52[a0_35:word32] = a0_35
	DMA_Enable(a5_40)
	DMA_IntMask(2<32>, 1<32>)
	DMA_IntMask(0<32>, 0<32>)
	DMA_IntMask(1<32>, 0<32>)
	DMA_LLI_Init(fp + 0xFFFFFFEC<32>)
	word32 s0_88
	word32 s3_91
	word32 s1_335
	word32 a3_336
	word32 s2_337
	word32 s4_338
	word32 s6_339
	ra = bl_dma_irq_register(bl_irq_register_with_ctx(ra, s1_43, 0x1F<32>, 0x230333DE<32>, s0_118, s2_44, dwLoc18, dwArg08, dwArg20, dwArg24, dwArg30, dwArg34, dwArg50, dwArg54, dwArg58, ra, dwArg78, dwArg7C, dwArg9C, out s0_88, out s1_335, out a3_336, out s2_337, out s3_91, out s4_338, out s6_339), s0_88, 0<32>, 0x230334BA<32>, 0<32>, s3_91, mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg20, dwArg24, dwArg28, dwArg48, dwArg4C, ra, dwArgE8, dwArg0108, dwArg0128, out s0_118, out s6)
	bl_irq_enable(0x1F<32>)
l2303377C:
	branch CONVERT(Mem50[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l23033762
l2303378A:
	branch CONVERT(Mem50[0x4201FC5E<32>:byte], byte, word32) >u 4<32> l23033762
l23033796:
	branch Mem50[0x4200DE84<32>:int32] == 0<32> l230337C4
l230337C4:
	word32 a5_340
	xTaskGetTickCount(out a5_340)
l230337A0:
	word32 a5_341
	xTaskGetTickCountFromISR(out a5_341)
l230337A4:
	a0_161 = 0x23082E3C<32>
l23033718:
	branch CONVERT(Mem11[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l23033762
l23033726:
	branch CONVERT(Mem11[0x4201FC5E<32>:byte], byte, word32) >u 4<32> l23033762
l23033732:
	branch Mem11[0x4200DE84<32>:int32] == 0<32> l2303376A
l2303376A:
	word32 a5_333
	xTaskGetTickCount(out a5_333)
l2303373C:
	word32 a5_334
	xTaskGetTickCountFromISR(out a5_334)
l23033740:
	a0_161 = 0x23082E10<32>
l2303375E:
	word32 s1_342
	word32 a0_343
	word32 a1_344
	word32 a2_345
	word32 a3_346
	word32 a4_347
	word32 a5_348
	word32 s2_349
	word32 s3_350
	word32 s4_351
	word32 s5_352
	word32 s7_353
	word32 s8_354
	word32 s9_355
	word32 s10_356
	word32 s11_357
	ra = bl_printk(ra, a0_161, 0x23082DCC<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_342, out a0_343, out a1_344, out a2_345, out a3_346, out a4_347, out a5_348, out s2_349, out s3_350, out s4_351, out s5_352, out s6, out s7_353, out s8_354, out s9_355, out s10_356, out s11_357)
l23033762:
	s0Out = s0_118
	s6Out = s6
	return ra
bl_dma_init_exit:


void bl_dma_test(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg7C, word32 dwArg88, word32 dwArgAC, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0188, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_dma
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: a7 s10 s11 s5 s6 s7 s9 sp t4
bl_dma_test_entry:
l2303381E:
	word32 a3_20
	word32 a4_21
	word32 a5_22
	word32 s1_25
	word32 a0_340
	word32 a2_342
	word32 a1_341
	word32 a6_343
	word32 s2_344
	word32 s3_345
	word32 s4_346
	word32 s8_347
	pvPortMalloc(ra, s1, 0x1C<32>, a3, a4, a5, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_25, out a0_340, out a1_341, out a2_342, out a3_20, out a4_21, out a5_22, out a6_343, out s2_344, out s3_345, out s4_346, out s8_347)
	word32 a3_37
	word32 a4_38
	word32 a5_39
	word32 s1_42
	word32 s8_355
	word32 s4_354
	word32 s3_353
	word32 s2_352
	word32 a6_351
	word32 a1_349
	word32 a2_350
	word32 a0_348
	pvPortMalloc(ra, s1_25, 68<i32>, a3_20, a4_21, a5_22, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_42, out a0_348, out a1_349, out a2_350, out a3_37, out a4_38, out a5_39, out a6_351, out s2_352, out s3_353, out s4_354, out s8_355)
	word32 a0_51
	word32 s1_356
	word32 a1_357
	word32 a2_358
	word32 a3_359
	word32 a4_360
	word32 a5_361
	word32 a6_362
	word32 s3_363
	word32 s4_364
	word32 s8_365
	word32 s2_108
	word32 s0_58 = pvPortMalloc(ra, s1_42, 68<i32>, a3_37, a4_38, a5_39, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_356, out a0_51, out a1_357, out a2_358, out a3_359, out a4_360, out a5_361, out a6_362, out s2_108, out s3_363, out s4_364, out s8_365)
	word32 s1_105 = a0_51
	branch CONVERT(Mem12[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23033894
l23033852:
	branch CONVERT(Mem12[0x4201FC5E<32>:byte], byte, word32) >u 2<32> l23033894
l2303385E:
	branch Mem12[0x4200DE84<32>:int32] == 0<32> l230338FC
l230338FC:
	word32 a5_385
	xTaskGetTickCount(out a5_385)
l23033868:
	word32 a5_386
	xTaskGetTickCountFromISR(out a5_386)
l2303386C:
	word32 a0_421
	word32 a1_422
	word32 a2_423
	word32 a3_424
	word32 a4_425
	word32 a5_426
	word32 s3_427
	word32 s4_428
	word32 s5_429
	word32 s6_430
	word32 s7_431
	word32 s8_432
	word32 s9_433
	word32 s10_434
	word32 s11_435
	ra = bl_printk(ra, 0x23082EFC<32>, 0x23082DCC<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_105, out a0_421, out a1_422, out a2_423, out a3_424, out a4_425, out a5_426, out s2_108, out s3_427, out s4_428, out s5_429, out s6_430, out s7_431, out s8_432, out s9_433, out s10_434, out s11_435)
l23033894:
	word32 a3_152
	word32 a4_153
	word32 t1_366
	word32 a0_367
	word32 a1_368
	word32 a2_369
	word32 a3_370
	word32 a4_371
	word32 a5_372
	word32 t1_373
	word32 a0_374
	word32 a1_375
	word32 a2_376
	word32 a3_377
	word32 a4_378
	word32 a5_379
	word32 t1_380
	word32 a0_381
	word32 a1_382
	word32 a2_383
	word32 a5_384
	memset(memset(memset(ra, s0_58, 0<32>, 0x1C<32>, out t1_366, out a0_367, out a1_368, out a2_369, out a3_370, out a4_371, out a5_372), s2_108, 1<32>, 68<i32>, out t1_373, out a0_374, out a1_375, out a2_376, out a3_377, out a4_378, out a5_379), s1_105, 255<i32>, 68<i32>, out t1_380, out a0_381, out a1_382, out a2_383, out a3_152, out a4_153, out a5_384)
	Mem160[0x8C49B029<32>:word32] = s0_58
	Mem163[s0_58 + 12<i32>:word32] = s2_108
	Mem164[s1_105 + 16<i32>:word32] = s0_58
	Mem165[s0_58 + 20<i32>:word32] = 0<32>
	Mem166[0x2303337C<32>:word32] = s0_58
	Mem167[s0_58 + 8<i32>:word32] = s0_58
	word32 a5_176
	word32 a4_175
	word32 a3_174
	word32 a2_173
	word32 a0_171 = bl_dma_copy(s0_58, a3_152, a4_153, mstatus, out a2_173, out a3_174, out a4_175, out a5_176)
l230338DC:
	branch a5_176 != 0<32> l23033902
l23033902:
	word32 s1_387
	word32 a1_388
	word32 s2_389
	word32 s3_390
	word32 s4_391
	word32 s8_392
	vTaskDelay(2<32>, a2_173, a3_174, a4_175, a5_176, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_387, out a0_171, out a1_388, out a2_173, out a3_174, out a4_175, out a5_176, out s2_389, out s3_390, out s4_391, out s8_392)
l230338E0:
	word32 a2_205
	word32 a5_208
	word32 a0_211
	word32 s0_393
	word32 s1_394
	word32 a1_395
	word32 a3_396
	word32 a4_397
	word32 a6_398
	word32 s4_399
	word32 t3_400
	vPortFree(a0_171, a2_173, a5_176, mstatus, dwArg0148, dwArg0188, out s0_393, out s1_394, out a0_211, out a1_395, out a2_205, out a3_396, out a4_397, out a5_208, out a6_398, out s4_399, out t3_400)
	word32 a5_221
	word32 s0_227
	word32 s1_401
	word32 a0_402
	word32 a1_403
	word32 a2_404
	word32 a3_405
	word32 a4_406
	word32 a6_407
	word32 s4_408
	word32 t3_409
	vPortFree(a0_211, a2_205, a5_208, mstatus, dwArg0148, dwArg0188, out s0_227, out s1_401, out a0_402, out a1_403, out a2_404, out a3_405, out a4_406, out a5_221, out a6_407, out s4_408, out t3_409)
	0<32> = dwArg38
l230338F8_thunk_vPortFree:
	word32 s0_410
	word32 s1_411
	word32 a0_412
	word32 a1_413
	word32 a2_414
	word32 a3_415
	word32 a4_416
	word32 a5_417
	word32 a6_418
	word32 s4_419
	word32 t3_420
	vPortFree(s0_227, dwArg10, a5_221, mstatus, dwArg0158, dwArg0198, out s0_410, out s1_411, out a0_412, out a1_413, out a2_414, out a3_415, out a4_416, out a5_417, out a6_418, out s4_419, out t3_420)
	return
bl_dma_test_exit:


void _irq_num_check.part.0(word32 ra, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_irq_ctx_get
//      bl_irq_register
//      bl_irq_unregister
// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
_irq_num_check.part.0_exit:
_irq_num_check.part.0_entry:
l2303390A:
	branch CONVERT(Mem0[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l23033966
l23033918:
	branch CONVERT(Mem0[0x4201FC5F<32>:byte], byte, word32) >u 4<32> l23033966
l23033966:
l23033924:
	branch Mem0[0x4200DE84<32>:int32] == 0<32> l23033960
l23033960:
	word32 a5_72
	xTaskGetTickCount(out a5_72)
l23033936:
	word32 a5_73
	xTaskGetTickCountFromISR(out a5_73)
l2303393A:
	word32 a2_77
	word32 a1_76
	word32 a0_75
	word32 s1_74
	word32 a3_78
	word32 a4_79
	word32 a5_80
	word32 s2_81
	word32 s3_82
	word32 s4_83
	word32 s5_84
	word32 s6_85
	word32 s7_86
	word32 s8_87
	word32 s9_88
	word32 s10_89
	word32 s11_90
	bl_printk(ra, 0x23082F94<32>, 0x23082F88<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_74, out a0_75, out a1_76, out a2_77, out a3_78, out a4_79, out a5_80, out s2_81, out s3_82, out s4_83, out s5_84, out s6_85, out s7_86, out s8_87, out s9_88, out s10_89, out s11_90)
l2303395E:


word32 bl_irq_enable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_enable
//      bl_dma_init
//      bl_sec_init
//      bl_pka_test
//      bl_sec_aes_test
//      sha256_test_case0
//      bl_wifi_enable_irq
//      cmd_timer_start
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
bl_irq_enable_entry:
l23033968:
	Mem8[a0 + 0x2800400<32>:byte] = 1<8>
	return 1<32>
bl_irq_enable_exit:


void bl_irq_disable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_disable
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
bl_irq_disable_entry:
l2303397A:
	Mem7[a0 + 0x2800400<32>:byte] = 0<8>
	return
bl_irq_disable_exit:


void bl_irq_exception_trigger(word32 ra, word32 a0, word32 a1, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_exception_illegal_ins
//      cmd_exception_store
//      cmd_exception_l_illegal
//      cmd_exception_load
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_irq_exception_trigger_entry:
l2303398A:
	branch a0 >u 2<32> l230339A0
l230339A0:
	branch a0 == 3<32> l230339BC
l230339BC:
	call fp + 0xFFFFFFEC<32> (retsize: 0;)
		uses: a0:a0,a1:0x12345678<32>,a3:a3,a5:0x12345000<32>,ra:ra,Stack +008C:ra
		defs: ra:ra_16
l23033990:
	branch a0 == 0<32> l230339B8
l230339B8:
l23033992:
	Mem29[0x12345678<32>:word32] = a1
l230339AE:
l230339D8:
l230339D8_thunk_printf:
	word32 s4_113
	word32 s5_114
	word32 s2_111
	word32 s3_112
	word32 a5_109
	word32 a7_110
	word32 a3_107
	word32 a4_108
	word32 a1_105
	word32 a2_106
	word32 s1_103
	word32 a0_104
	word32 s6_115
	word32 s7_116
	word32 s8_117
	word32 s9_118
	word32 s10_119
	word32 s11_120
	word32 t4_121
	printf(ra, 0x23082FBC<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_103, out a0_104, out a1_105, out a2_106, out a3_107, out a4_108, out a5_109, out a7_110, out s2_111, out s3_112, out s4_113, out s5_114, out s6_115, out s7_116, out s8_117, out s9_118, out s10_119, out s11_120, out t4_121)
	return
bl_irq_exception_trigger_exit:


word32 bl_irq_register_with_ctx(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgBC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
//      bl_irq_register
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00BC:[0..31]
// LiveOut: a3 ra s0 s1 s2 s3 s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_irq_register_with_ctx_entry:
l230339DC:
	branch a0 <=u 79<i32> l230339F6
l230339F6:
	word32 s1_20 = a0 << 2<u32>
	word32 a5_22 = Mem15[(a0 << 2<u32>) + 0x420128F8<32>:word32]
	word32 s4_25 = a1
	word32 s3_27 = a2
	word32 s2_28 = 0x420128F8<32>
	branch a5_22 == 0<32> l23033A6A
l23033A12:
	branch a5_22 == a1 l23033ADC
l23033A16:
	branch CONVERT(Mem15[0x4201FC5C<32>:byte], byte, word32) >u 3<32> l23033A6A
l23033A24:
	branch CONVERT(Mem15[0x4201FC5F<32>:byte], byte, word32) >u 3<32> l23033ADA
l23033ADA:
	branch a1 == 0<32> l23033A7C
l23033A30:
	branch Mem15[0x4200DE84<32>:int32] == 0<32> l23033AC8
l23033AC8:
	word32 a5_380
	xTaskGetTickCount(out a5_380)
l23033A3A:
	word32 a5_355
	xTaskGetTickCountFromISR(out a5_355)
l23033A3E:
	word32 a0_356
	word32 a1_357
	word32 a2_358
	word32 a4_359
	word32 a5_360
	word32 s5_361
	word32 s7_362
	word32 s8_363
	word32 s9_364
	word32 s10_365
	word32 s11_366
	ra = bl_printk(ra, 0x23083014<32>, 0x23082F88<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_20, out a0_356, out a1_357, out a2_358, out a3, out a4_359, out a5_360, out s2_28, out s3_27, out s4_25, out s5_361, out s6, out s7_362, out s8_363, out s9_364, out s10_365, out s11_366)
l23033A6A:
	branch s4_25 != 0<32> l23033ADC
l23033ADC:
	s1_20 = s1_20 + s2_28
	Mem91[s1_20:word32] = s4_25
	word32 s0_92 = (a0 + 80<i32> << 2<i32>) + s2_28
	branch s3_27 != 0<32> l23033AD4
l23033AD4:
	Mem95[s0_92:word32] = s3_27
l23033AEE:
	Mem96[s0_92:word32] = 0<32>
l23033A6E:
	branch CONVERT(Mem15[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l23033AF2
l23033A7C:
	branch CONVERT(Mem15[0x4201FC5F<32>:byte], byte, word32) >u 4<32> l23033AF2
l23033AF2:
	s0Out = <invalid>
	s1Out = s1_20
	a3Out = a3
	s2Out = s2_28
	s3Out = s3_27
	s4Out = dwArg04
	s6Out = s6
	return ra
l23033A8A:
	branch Mem15[0x4200DE84<32>:int32] == 0<32> l23033ACE
l23033ACE:
	word32 a5_379
	xTaskGetTickCount(out a5_379)
l23033A94:
	word32 a5_367
	xTaskGetTickCountFromISR(out a5_367)
l23033A98:
l23033AC4_thunk_bl_printk:
	word32 a3_149
	word32 s1_153
	word32 s2_156
	word32 s3_157
	word32 s4_158
	word32 s6_160
	word32 a0_368
	word32 a1_369
	word32 a2_370
	word32 a4_371
	word32 a5_372
	word32 s5_373
	word32 s7_374
	word32 s8_375
	word32 s9_376
	word32 s10_377
	word32 s11_378
	word32 ra_152 = bl_printk(ra, 0x2308304C<32>, 0x23082F88<32>, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_153, out a0_368, out a1_369, out a2_370, out a3_149, out a4_371, out a5_372, out s2_156, out s3_157, out s4_158, out s5_373, out s6_160, out s7_374, out s8_375, out s9_376, out s10_377, out s11_378)
	s0Out = <invalid>
	s1Out = s1_153
	a3Out = a3_149
	s2Out = s2_156
	s3Out = s3_157
	s4Out = s4_158
	s6Out = s6_160
	return ra_152
bl_irq_register_with_ctx_exit:
l230339F2:
	_irq_num_check.part.0(ra, dwLoc08, dwArg40, dwArg44, s1, dwArg8C)


word32 bl_irq_ctx_get(word32 ra, word32 a0, word32 a1, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_int_process
//      bl_dma_irq_register
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a4
// Trashed: a4 a5
// Preserved: sp
bl_irq_ctx_get_entry:
l23033B02:
	branch a0 <=u 79<i32> l23033B12
l23033B12:
	Mem16[Mem0[(a0 + 80<i32> << 2<i32>) + 0x420128F8<32>:word32]:word32] = a1
	return 0x420128F8<32>
bl_irq_ctx_get_exit:
l23033B0A:
	_irq_num_check.part.0(ra, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C)


word32 bl_irq_register(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgBC, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_enable
//      bl_sec_init
//      bl_pka_test
//      bl_sec_aes_test
//      sha256_test_case0
//      bl_wifi_enable_irq
//      cmd_timer_start
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00BC:[0..31]
// LiveOut: a3 ra s1 s2 s3 s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_irq_register_entry:
l23033B28:
l23033B2A_thunk_bl_irq_register_with_ctx:
	word32 s1_14
	word32 s2_15
	word32 s3_16
	word32 s4_17
	word32 a3_23
	word32 s6_29
	word32 s0_53
	word32 ra_25 = bl_irq_register_with_ctx(ra, s1, a0, a1, 0<32>, s2, dwArg08, dwArg28, dwArg40, dwArg44, dwArg50, dwArg54, dwArg70, dwArg74, dwArg78, dwArg8C, dwArg98, dwArg9C, dwArgBC, out s0_53, out s1_14, out a3_23, out s2_15, out s3_16, out s4_17, out s6_29)
	s1Out = s1_14
	a3Out = a3_23
	s2Out = s2_15
	s3Out = s3_16
	s4Out = s4_17
	s6Out = s6_29
	return ra_25
bl_irq_register_exit:


void bl_irq_unregister(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 dwArg08, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg8C, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_disable
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_irq_unregister_entry:
l23033B2E:
	branch a0 <=u 79<i32> l23033B46
l23033B46:
	word32 s3_18 = a0 << 2<u32>
	word32 s2_23 = a1
	branch Mem13[(a0 << 2<u32>) + 0x420128F8<32>:word32] == a1 l23033BB8
l23033B62:
	branch CONVERT(Mem13[0x4201FC5C<32>:byte], byte, word32) >u 3<32> l23033BB8
l23033B70:
	branch CONVERT(Mem13[0x4201FC5F<32>:byte], byte, word32) >u 3<32> l23033BB8
l23033B7C:
	branch Mem13[0x4200DE84<32>:int32] == 0<32> l23033BCC
l23033BCC:
	word32 a5_152
	xTaskGetTickCount(out a5_152)
l23033B86:
	word32 a5_153
	xTaskGetTickCountFromISR(out a5_153)
l23033B8A:
	word32 s1_154
	word32 a0_155
	word32 a1_156
	word32 a2_157
	word32 a3_158
	word32 a4_159
	word32 a5_160
	word32 s4_161
	word32 s5_162
	word32 s6_163
	word32 s7_164
	word32 s8_165
	word32 s9_166
	word32 s10_167
	word32 s11_168
	bl_printk(ra, 0x2308307C<32>, 0x23082F88<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_154, out a0_155, out a1_156, out a2_157, out a3_158, out a4_159, out a5_160, out s2_23, out s3_18, out s4_161, out s5_162, out s6_163, out s7_164, out s8_165, out s9_166, out s10_167, out s11_168)
l23033BB8:
	Mem82[s3_18 + 0x420128F8<32>:word32] = s2_23
	return
bl_irq_unregister_exit:
l23033B42:
	_irq_num_check.part.0(ra, dwLoc08, dwArg40, dwArg44, s1, dwArg8C)


void interrupt_entry(word32 ra, word32 a0, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
interrupt_entry_exit:
interrupt_entry_entry:
l23033BD2:
	word32 a2_5 = CONVERT(SLICE(a0, word27, 0), word27, word32)
	branch a2_5 >u 79<i32> l23033C06
l23033BE0:
	branch Mem0[(a2_5 << 2<u32>) + 0x420128F8<32>:int32] == 0<32> l23033C06
l23033C06:
	word32 a4_67
	word32 a3_66
	word32 a2_65
	word32 a1_64
	word32 a0_63
	word32 s1_62
	word32 a5_68
	word32 a7_69
	word32 s2_70
	word32 s3_71
	word32 s4_72
	word32 s5_73
	word32 s6_74
	word32 s7_75
	word32 s8_76
	word32 s9_77
	word32 s10_78
	word32 s11_79
	word32 t4_80
	printf(ra, 0x23083324<32>, a2_5 + -16<i32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_62, out a0_63, out a1_64, out a2_65, out a3_66, out a4_67, out a5_68, out a7_69, out s2_70, out s3_71, out s4_72, out s5_73, out s6_74, out s7_75, out s8_76, out s9_77, out s10_78, out s11_79, out t4_80)
l23033C1E:
l23033BF6:
	branch a0 == 0<32> l23033C04
l23033C04:
	switch (CONVERT(SLICE(a0, word27, 0), word27, word32)) { }
l23033C02:
	switch (CONVERT(SLICE(a0, word27, 0), word27, word32)) { }


void exception_entry(word32 ra, word32 gp, word32 a0, word32 a1, word32 a3, word32 a5, word32 s2, word32 fs0, word32 fs1, word32 fa0, word32 fa1, word32 fa2, word32 fa3, word32 fa4, word32 fa5, word32 mstatus, word32 mcause, word32 mtval, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg84, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a5:[0..31] fa0:[0..31] fa1:[0..31] fa2:[0..31] fa3:[0..31] fa4:[0..31] fa5:[0..31] fs0:[0..31] fs1:[0..31] gp:[0..31] mcause:[0..31] mstatus:[0..31] mtval:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa1 fa2 fa3 fa4 fa5 fs0 fs1 gp mcause mstatus mtval ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
exception_entry_entry:
l23033C20:
	branch (a0 & 1023<i32>) != 4<32> l23033C4A
l23033C4A:
	branch (a0 & 1023<i32>) != 6<32> l23033C62
l23033C62:
	word32 a0_283
	word32 a1_284
	word32 a2_285
	word32 a4_286
	word32 a5_287
	word32 s4_288
	word32 s8_289
	puts(0x230830B8<32>, out a0_283, out a1_284, out a2_285, out a4_286, out a5_287, out s4_288, out s8_289)
	word32 a3_46
	word32 a0_68
	word32 a1_71
	word32 a2_72
	word32 a3_73
	word32 s1_77
	word32 s2_80
	word32 s1_290
	word32 a0_291
	word32 a1_292
	word32 a2_293
	word32 a4_294
	word32 a5_295
	word32 a7_296
	word32 s2_297
	word32 s3_298
	word32 s4_299
	word32 s5_300
	word32 s6_301
	word32 s7_302
	word32 s8_303
	word32 s9_304
	word32 s10_305
	word32 s11_306
	word32 t4_307
	word32 a4_308
	word32 a5_309
	word32 a7_310
	word32 s3_311
	word32 s4_312
	word32 s5_313
	word32 s6_314
	word32 s7_315
	word32 s8_316
	word32 s9_317
	word32 s10_318
	word32 s11_319
	word32 t4_320
	word32 ra_76 = printf(printf(ra, 0x230830D0<32>, 6<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_290, out a0_291, out a1_292, out a2_293, out a3_46, out a4_294, out a5_295, out a7_296, out s2_297, out s3_298, out s4_299, out s5_300, out s6_301, out s7_302, out s8_303, out s9_304, out s10_305, out s11_306, out t4_307), 0x230830F8<32>, a3_46, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_77, out a0_68, out a1_71, out a2_72, out a3_73, out a4_308, out a5_309, out a7_310, out s2_80, out s3_311, out s4_312, out s5_313, out s6_314, out s7_315, out s8_316, out s9_317, out s10_318, out s11_319, out t4_320)
	branch CONVERT(SLICE(a0, word16, 0), word16, word32) >u 0xF<32> l23033D56
l23033D56:
l23033CB6:
	word32 a0_321
	word32 a1_322
	word32 a2_323
	word32 a4_324
	word32 a5_325
	word32 s4_326
	word32 s8_327
	puts(0x23083300<32>, out a0_321, out a1_322, out a2_323, out a4_324, out a5_325, out s4_326, out s8_327)
	backtrace_riscv()
l23033CC8:
l23033C9E:
	word32 tp_126
	word32 s10_128
	word32 s11_129
	word32 s3_130
	word32 s5_131
	word32 s6_132
	word32 s7_133
	word32 s9_134
	word32 t5_225
	word32 t6_226
	call 0x23082F48<32> (retsize: 0;)
		uses: a0:a0_68,a1:a1_71,a2:a2_72,a3:a3_73,a5:0x23082F48<32>,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0,fs1:fs1,gp:gp,mcause:mcause,mstatus:mstatus,mtval:mtval,ra:ra_76,s0:Mem25[0x23082F48<32>:word32],s1:s1_77,s10:s10_128,s11:s11_129,s2:s2_80,s3:s3_130,s5:s5_131,s6:s6_132,s7:s7_133,s9:s9_134,Stack +0004:dwLoc1C,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0028:dwArg08,Stack +0048:dwArg28,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0098:dwArg78,Stack +00A4:dwArg84,Stack +00BC:dwArg9C,t5:t5_225,t6:t6_226,tp:tp_126
		defs: s10:s10_128,s11:s11_129,s3:s3_130,s5:s5_131,s6:s6_132,s7:s7_133,s9:s9_134,t5:t5_225,t6:t6_226,tp:tp_126
	return
l23033C50:
l23033C5E_thunk_misaligned_store_trap:
	misaligned_store_trap(gp, a3, a1, a5, fs0, fs1, fa0, fa1, fa2, fa3, fa4, fa5, mstatus, mcause, mtval)
	return
l23033C38:
l23033C46_thunk_misaligned_load_trap:
	misaligned_load_trap(gp, a3, a1, a5, mstatus, mcause, mtval)
	return
exception_entry_exit:


void bl_irq_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s1 s4 s8 t3 tp
// Preserved: sp
bl_irq_init_entry:
l23033D60:
	word32 s8_59
	word32 a5_57
	word32 s4_58
	word32 a2_55
	word32 a4_56
	word32 a0_53
	word32 a1_54
	puts(0x23082FE0<32>, out a0_53, out a1_54, out a2_55, out a4_56, out a5_57, out s4_58, out s8_59)
	word32 a4_19 = 0x2800400<32>
l23033D7C:
	Mem22[a4_19:byte] = 0<8>
	a4_19 = a4_19 + 1<32>
	branch a4_19 != 0x2800480<32> l23033D7C
l23033D86:
	word32 a5_25 = 0x2800000<32>
l23033D8E:
	Mem28[a5_25:byte] = 0<8>
	a5_25 = a5_25 + 1<32>
	branch a5_25 != 0x2800080<32> l23033D8E
l23033D98:
	return
bl_irq_init_exit:


word32 _trng_trigger(word32 a2, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sec_get_random_word
//      bl_rand_stream
//      bl_sec_init
// MayUse:  a2:[0..31]
// LiveOut: a3 a4
// Trashed: a3 a4 a5
// Preserved: sp
_trng_trigger_entry:
l23033D9E:
	word32 a4_10 = Mem0[0x40004200<32>:int32]
	word32 a3_12 = a4_10 & 1<i32>
	branch (a4_10 & 1<i32>) != 0<32> l23033DC8
l23033DAC:
	word32 a3_9 = Mem0[a2:word32]
	Mem11[0x4000422C<32>:word32] = a2
	a3_12 = Mem11[a3_9 + 4<i32>:word32]
	Mem13[0x40004230<32>:word32] = a3_12
	Mem14[0x40004200<32>:word32] = a4_10 | 1542<i32>
	a4_10 = a4_10 | 1542<i32>
l23033DC8:
	a4Out = a4_10
	return a3_12
_trng_trigger_exit:


word32 wait_trng4feed(word32 ra, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rand_stream
//      bl_sec_init
// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a2 a3 a4 a5 ra s1 s10 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
wait_trng4feed_entry:
l23033DCA:
	word32 a5_11 = Mem7[0x40004200<32>:int32]
	word32 a3_10 = 0x40004000<32>
l23033DDC:
	branch (a5_11 & 1<i32>) != 0<32> l23033E80
l23033E80:
	a5_11 = Mem7[0x40004200<32>:int32]
l23033DE2:
	Mem19[0x40004200<32>:word32] = a5_11 & 0xFFFFFFFD<32> | 512<i32>
	word32 s0_24 = 0x42012BC8<32>
	branch CONVERT(Mem19[0x4201FC5C<32>:byte], byte, word32) >u 1<32> l23033E44
l23033E06:
	branch CONVERT(Mem19[0x4201FC60<32>:byte], byte, word32) >u 1<32> l23033E44
l23033E12:
	word32 a5_30
	branch Mem19[0x4200DE84<32>:int32] == 0<32> l23033E86
l23033E86:
	xTaskGetTickCount(out a5_30)
l23033E1C:
	xTaskGetTickCountFromISR(out a5_30)
l23033E20:
	s0_24 = Mem19[a5_30:word32]
	word32 a0_187
	word32 a1_188
	word32 a2_189
	word32 a4_190
	word32 a5_191
	word32 s8_192
	word32 s11_193
	ra = bl_printk(ra, 0x23083D30<32>, 0x23083D1C<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_187, out a1_188, out a2_189, out a3_10, out a4_190, out a5_191, out s2, out s3, out s4, out s5, out s6, out s7, out s8_192, out s9, out s10, out s11_193)
l23033E44:
	Mem77[Mem19[0x40004208<32>:int32]:word32] = s0_24
	Mem79[Mem77[0x4000420C<32>:int32] + 4<i32>:word32] = s0_24
	Mem81[Mem79[0x40004210<32>:int32] + 8<i32>:word32] = s0_24
	Mem83[Mem81[0x40004214<32>:int32] + 12<i32>:word32] = s0_24
	Mem85[Mem83[0x40004218<32>:int32] + 16<i32>:word32] = s0_24
	Mem87[Mem85[0x4000421C<32>:int32] + 20<i32>:word32] = s0_24
	word32 a4_88 = Mem87[0x40004220<32>:int32]
	Mem89[a4_88 + 24<i32>:word32] = s0_24
	word32 a5_90 = Mem89[0x40004224<32>:int32]
	Mem91[a5_90 + 28<i32>:word32] = s0_24
	s1Out = s1
	a2Out = dwArg10
	a3Out = a3_10
	a4Out = a4_88
	a5Out = a5_90
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	return ra
wait_trng4feed_exit:


void sec_trng_IRQHandler(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp tp
sec_trng_IRQHandler_entry:
l23033E8C:
	word32 a0_9
	word32 a1_10
	word32 a5_216
	word32 a2_214
	word32 a4_215
	aos_now_ms(a3, out a0_9, out a1_10, out a2_214, out a4_215, out a5_216)
	branch a1_10 > 0<32> l23033EB0
l23033E9A:
	branch a1_10 != 0<32> l23033EA4
l23033E9C:
	branch a0_9 >u 1999<i32> l23033EB0
l23033EA4:
	word32 s4_222
	word32 s8_223
	word32 a4_220
	word32 a5_221
	word32 a1_218
	word32 a2_219
	word32 a0_217
	puts(0x23083CC4<32>, out a0_217, out a1_218, out a2_219, out a4_220, out a5_221, out s4_222, out s8_223)
l23033EB0:
	Mem37[0x40004200<32>:word32] = Mem7[0x40004200<32>:int32] & 0xFFFFFFFD<32> | 512<i32>
	word32 s0_34 = 0x42012BC8<32>
	branch CONVERT(Mem37[0x4201FC5C<32>:byte], byte, word32) >u 1<32> l23033F16
l23033ED8:
	branch CONVERT(Mem37[0x4201FC60<32>:byte], byte, word32) >u 1<32> l23033F16
l23033EE4:
	word32 a5_46
	branch Mem37[0x4200DE84<32>:int32] == 0<32> l23033F52
l23033F52:
	xTaskGetTickCount(out a5_46)
l23033EEE:
	xTaskGetTickCountFromISR(out a5_46)
l23033EF2:
	s0_34 = Mem37[a5_46:word32]
	word32 s4_233
	word32 s3_232
	word32 a5_230
	word32 s6_235
	word32 s5_234
	word32 s7_236
	word32 s8_237
	word32 s10_239
	word32 s9_238
	word32 s2_231
	word32 a3_228
	word32 a4_229
	word32 a1_226
	word32 a2_227
	word32 s1_224
	word32 a0_225
	word32 s11_240
	bl_printk(ra, 0x23083CE0<32>, 0x23083D1C<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_224, out a0_225, out a1_226, out a2_227, out a3_228, out a4_229, out a5_230, out s2_231, out s3_232, out s4_233, out s5_234, out s6_235, out s7_236, out s8_237, out s9_238, out s10_239, out s11_240)
l23033F16:
	Mem95[Mem37[0x40004208<32>:int32]:word32] = s0_34
	Mem97[Mem95[0x4000420C<32>:int32] + 4<i32>:word32] = s0_34
	Mem99[Mem97[0x40004210<32>:int32] + 8<i32>:word32] = s0_34
	Mem101[Mem99[0x40004214<32>:int32] + 12<i32>:word32] = s0_34
	Mem103[Mem101[0x40004218<32>:int32] + 16<i32>:word32] = s0_34
	Mem105[Mem103[0x4000421C<32>:int32] + 20<i32>:word32] = s0_34
	Mem107[Mem105[0x40004220<32>:int32] + 24<i32>:word32] = s0_34
	Mem109[Mem107[0x40004224<32>:int32] + 28<i32>:word32] = s0_34
	return
sec_trng_IRQHandler_exit:


void bl_sec_pka_IRQHandler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s1 s4 s8 t3 tp
// Preserved: sp
bl_sec_pka_IRQHandler_entry:
l23033F58:
	word32 a0_26
	word32 a1_27
	word32 a2_28
	word32 a4_29
	word32 a5_30
	word32 s4_31
	word32 s8_32
	puts(0x23083540<32>, out a0_26, out a1_27, out a2_28, out a4_29, out a5_30, out s4_31, out s8_32)
l23033F70_thunk_SEC_Eng_IntMask:
	SEC_Eng_IntMask(3<32>)
	return
bl_sec_pka_IRQHandler_exit:


word32 bl_sec_get_random_word(word32 s0, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rand
// MayUse:  a2:[0..31] s0:[0..31]
// LiveOut: a2 a3 a4 a5
// Trashed: a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
bl_sec_get_random_word_entry:
l23033F74:
	word32 a4_11 = Mem10[s0:word32]
	Mem14[s0 & 7<32>:word32] = a4_11
	branch (s0 & 7<32>) != 0<32> l23033F94
l23033F90:
	a3 = _trng_trigger(a2, out a4_11)
l23033F94:
	Mem22[(s0 & 7<32>) + 1<i32>:word32] = 0x4200DEB8<32>
	a3Out = a3
	a4Out = a4_11
	a5Out = 0x42012BC8<32>
	return dwArg10
bl_sec_get_random_word_exit:


word32 bl_rand_stream(word32 ra, word32 a0, word32 a1, word32 a2, word32 s5, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArg0128, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantGenerateRand
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s5:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 ra s0 s10 s2 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_rand_stream_entry:
l23033FB2:
	word32 a5_112 = Mem5[0x4200DEB8<32>:int32]
	word32 s4_100 = a0
	word32 s1_126 = a1
	word32 s0_159 = 0x4200DEB8<32>
	branch a5_112 == 0<32> l23033FE4
l23033FD8:
	word32 a4_270
	_trng_trigger(a2, out a4_270)
	word32 s3_274
	word32 s9_278
	word32 s10_279
	word32 s7_277
	word32 s5_275
	word32 s6_276
	word32 s2_273
	word32 a3_271
	word32 a4_272
	ra = wait_trng4feed(ra, dwLoc18, dwArg30, dwArg34, s5, dwArg7C, out s1_126, out a2, out a3_271, out a4_272, out a5_112, out s2_273, out s3_274, out s4_100, out s5_275, out s6_276, out s7_277, out s9_278, out s10_279)
	Mem55[0x4200DEB8<32>:word32] = 0<32>
l23033FE4:
	word32 s3_102 = 0<32>
	word32 s5_57 = 32<i32>
	word32 s6_108 = 0x42013000<32>
	word32 s7_128 = 0x1F<32>
l23033FF0:
	branch s1_126 > 0<32> l23034016
l23034016:
	s0_159 = Mem62[a5_112:word32]
	branch a5_112 == 0<32> l23034026
l2303401A:
	word32 a4_289
	_trng_trigger(a2, out a4_289)
	word32 s2_294
	word32 s9_295
	word32 s10_296
	word32 a2_290
	word32 a5_293
	word32 a3_291
	word32 a4_292
	ra = wait_trng4feed(ra, dwLoc18, dwArg30, dwArg34, s5, dwArg7C, out s1_126, out a2_290, out a3_291, out a4_292, out a5_293, out s2_294, out s3_102, out s4_100, out s5_57, out s6_108, out s7_128, out s9_295, out s10_296)
	Mem92[s0_159:word32] = 0<32>
l23034026:
	word32 s2_105 = s1_126
	branch s5_57 >= s1_126 l23034030
l2303402C:
	s2_105 = 32<i32>
l23034030:
	word32 a3_298
	word32 a7_301
	word32 a4_299
	word32 a6_300
	word32 a1_297
	memcpy(s4_100 + s3_102, s6_108 + -1080<i32>, s2_105, out a1_297, out a2, out a3_298, out a4_299, out a5_112, out a6_300, out a7_301)
	Mem132[s0_159:word32] = s7_128
	s3_102 = s3_102 + s2_105
	s1_126 = s1_126 - s2_105
l23033FF4:
	word32 a4_280
	_trng_trigger(a2, out a4_280)
	word32 a3_137
	word32 a4_138
	word32 s10_145
	word32 s2_147
	word32 s9_154
	word32 s5_286
	word32 s6_287
	word32 s7_288
	word32 a2_282
	word32 s4_285
	word32 a5_283
	word32 s3_284
	word32 s1_281
	word32 ra_143 = wait_trng4feed(ra, dwLoc18, dwArg30, dwArg34, s5, dwArg7C, out s1_281, out a2_282, out a3_137, out a4_138, out a5_283, out s2_147, out s3_284, out s4_285, out s5_286, out s6_287, out s7_288, out s9_154, out s10_145)
	Mem161[s0_159:word32] = 0<32>
	0<32> = dwArg0128
	s0Out = dwArgE4
	a3Out = a3_137
	a4Out = a4_138
	s2Out = s2_147
	s9Out = s9_154
	s10Out = s10_145
	return ra_143
bl_rand_stream_exit:


word32 bl_rand(word32 a0, word32 a2, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sec_test
//      dhcp_create_msg
//      igmp_delaying_member
//      igmp_joingroup_netif
//      tcp_init
//      udp_init
//      ping_api_init
//      sntp_init
//      mbedtls_platform_entropy_poll
// MayUse:  a0:[0..31] a2:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
bl_rand_entry:
l2303404A:
	word32 s0_10 = 0x13<32>
l23034054:
	word32 a3_18
	word32 a4_14
	word32 a5_15
	a2 = bl_sec_get_random_word(s0_10, a2, out a3_18, out a4_14, out a5_15)
	s0_10 = s0_10 + 0xFFFFFFFF<32>
	word32 s1_21 = a0
	branch s0_10 != 0<32> l23034078
l23034078:
	branch a0 == 0<32> l23034054
l2303407A:
l2303405E:
	word32 a0_78
	word32 a2_79
	word32 s8_80
	s1_21 = puts(0x2308351C<32>, out a0_78, out a1, out a2_79, out a4_14, out a5_15, out s4, out s8_80)
l2303406A:
	a0Out = s1_21 >>u 1<u32>
	a1Out = a1
	a3Out = a3_18
	a4Out = a4_14
	a5Out = a5_15
	s4Out = s4
	return s1_21
bl_rand_exit:


word32 bl_sec_init(word32 ra, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg9C, word32 dwArgAC, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0178, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_sec_init_entry:
l2303407C:
	word32 a2_11
	word32 a0_22
	word32 a3_144
	word32 a4_145
	xQueueCreateMutexStatic(1<32>, 0x42012B78<32>, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0108, dwArg0138, dwArg0178, out a0_22, out a2_11, out a3_144, out a4_145)
	Mem33[0x4200EEB4<32>:word32] = a0_22
	word32 a4_146
	_trng_trigger(a2_11, out a4_146)
	word32 a2_37
	word32 s1_147
	word32 a3_148
	word32 a4_149
	word32 a5_150
	word32 s2_151
	word32 s3_152
	word32 s4_153
	word32 s5_154
	word32 s6_155
	word32 s7_156
	word32 s9_157
	word32 s10_158
	word32 ra_44 = wait_trng4feed(ra, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_147, out a2_37, out a3_148, out a4_149, out a5_150, out s2_151, out s3_152, out s4_153, out s5_154, out s6_155, out s7_156, out s9_157, out s10_158)
	word32 a4_159
	_trng_trigger(a2_37, out a4_159)
	word32 s1_70
	word32 s2_73
	word32 a3_90
	word32 a2_160
	word32 a3_161
	word32 a4_162
	word32 a5_163
	word32 s3_164
	word32 s4_165
	word32 s5_166
	word32 s6_167
	word32 s7_168
	word32 s9_169
	word32 s10_170
	word32 s1_171
	word32 s2_172
	word32 s3_173
	word32 s4_174
	word32 s6_175
	word32 ra_95 = bl_irq_register(wait_trng4feed(ra_44, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_70, out a2_160, out a3_161, out a4_162, out a5_163, out s2_73, out s3_164, out s4_165, out s5_166, out s6_167, out s7_168, out s9_169, out s10_170), s1_70, 0x1C<32>, 0x23033E8C<32>, s2_73, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s1_171, out a3_90, out s2_172, out s3_173, out s4_174, out s6_175)
	bl_irq_enable(0x1C<32>)
	a3Out = a3_90
	return ra_95
bl_sec_init_exit:


word32 bl_sec_test(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_trng
//      bfl_main
// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a4 a5 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
bl_sec_test_entry:
l230340C2:
	word32 a0_13
	word32 a2_15
	word32 s1_145
	word32 a1_146
	word32 a3_147
	word32 a4_148
	word32 a5_149
	word32 s2_150
	word32 s3_151
	word32 s4_152
	word32 s5_153
	word32 s6_154
	word32 s7_155
	word32 s8_156
	word32 s9_157
	word32 s10_158
	word32 s11_159
	word32 ra_19 = bl_printk(ra, 0x23083554<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_145, out a0_13, out a1_146, out a2_15, out a3_147, out a4_148, out a5_149, out s2_150, out s3_151, out s4_152, out s5_153, out s6_154, out s7_155, out s8_156, out s9_157, out s10_158, out s11_159)
	word32 a3_35
	word32 a0_160
	word32 a1_161
	word32 a4_162
	word32 a5_163
	word32 s4_164
	bl_rand(a0_13, a2_15, out a0_160, out a1_161, out a3_35, out a4_162, out a5_163, out s4_164)
	word32 a0_49
	word32 a2_51
	word32 s1_165
	word32 a1_166
	word32 a3_167
	word32 a4_168
	word32 a5_169
	word32 s2_170
	word32 s3_171
	word32 s4_172
	word32 s5_173
	word32 s6_174
	word32 s7_175
	word32 s8_176
	word32 s9_177
	word32 s10_178
	word32 s11_179
	word32 ra_55 = bl_printk(ra_19, 0x23083594<32>, a3_35, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_165, out a0_49, out a1_166, out a2_51, out a3_167, out a4_168, out a5_169, out s2_170, out s3_171, out s4_172, out s5_173, out s6_174, out s7_175, out s8_176, out s9_177, out s10_178, out s11_179)
	word32 a3_71
	word32 a0_180
	word32 a1_181
	word32 a4_182
	word32 a5_183
	word32 s4_184
	bl_rand(a0_49, a2_51, out a0_180, out a1_181, out a3_71, out a4_182, out a5_183, out s4_184)
	word32 a3_87
	word32 a5_106
	word32 a3_111
	word32 a4_112
	word32 s1_115
	word32 s1_185
	word32 a0_186
	word32 a1_187
	word32 a2_188
	word32 a4_189
	word32 a5_190
	word32 s2_191
	word32 s3_192
	word32 s4_193
	word32 s5_194
	word32 s6_195
	word32 s7_196
	word32 s8_197
	word32 s9_198
	word32 s10_199
	word32 s11_200
	word32 a0_201
	word32 a1_202
	word32 a2_203
	word32 s2_204
	word32 s3_205
	word32 s4_206
	word32 s5_207
	word32 s6_208
	word32 s7_209
	word32 s8_210
	word32 s9_211
	word32 s10_212
	word32 s11_213
	word32 ra_114 = bl_printk(bl_printk(ra_55, 0x23083594<32>, a3_71, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_185, out a0_186, out a1_187, out a2_188, out a3_87, out a4_189, out a5_190, out s2_191, out s3_192, out s4_193, out s5_194, out s6_195, out s7_196, out s8_197, out s9_198, out s10_199, out s11_200), 0x2307E7D4<32>, a3_87, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_115, out a0_201, out a1_202, out a2_203, out a3_111, out a4_112, out a5_106, out s2_204, out s3_205, out s4_206, out s5_207, out s6_208, out s7_209, out s8_210, out s9_211, out s10_212, out s11_213)
	s1Out = s1_115
	a3Out = a3_111
	a4Out = a4_112
	a5Out = a5_106
	return ra_114
bl_sec_test_exit:


word32 _dump_rsa_data(word32 ra, word32 a1, word32 a3, word32 s6, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128, ptr32 & s4Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pka_test_case_xgcd
//      _pka_test_case2
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] s6:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut: ra s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
_dump_rsa_data_entry:
l2303410A:
	word32 s3_123 = a1
	word32 s0_134 = 0<32>
	word32 s1_105 = 0x23083000<32>
	word32 s5_125 = 0x23083000<32>
	word32 s6_126 = 0xF<32>
l23034132:
	branch s0_134 < s3_123 l2303414C
l2303414C:
	word32 a5_33 = s0_134 & 15<i32>
	branch a5_33 == 0<32> l23034168
l23034168:
	word32 s7_265
	word32 s6_264
	word32 s5_263
	word32 s4_262
	word32 s3_261
	word32 s2_260
	word32 a2_257
	word32 a4_258
	word32 a5_259
	word32 a0_255
	word32 a1_256
	word32 s8_266
	word32 s9_267
	word32 s10_268
	word32 s11_269
	ra = bl_printk(ra, s5_125 + 884<i32>, a3, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_105, out a0_255, out a1_256, out a2_257, out a3, out a4_258, out a5_259, out s2_260, out s3_261, out s4_262, out s5_263, out s6_264, out s7_265, out s8_266, out s9_267, out s10_268, out s11_269)
l23034156:
	branch a5_33 == s6_126 l23034174
l23034174:
	word32 s7_86
	word32 s1_270
	word32 a0_271
	word32 a1_272
	word32 a2_273
	word32 a4_274
	word32 a5_275
	word32 s2_276
	word32 s4_277
	word32 s8_278
	word32 s9_279
	word32 s10_280
	word32 s11_281
	ra = bl_printk(ra, s1_105 + 892<i32>, a3, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_270, out a0_271, out a1_272, out a2_273, out a3, out a4_274, out a5_275, out s2_276, out s3_123, out s4_277, out s5_125, out s6_126, out s7_86, out s8_278, out s9_279, out s10_280, out s11_281)
	word32 a0_282
	word32 a1_283
	word32 a2_284
	word32 a4_285
	word32 a5_286
	word32 s4_287
	word32 s8_288
	s1_105 = puts(s7_86 + 2044<i32>, out a0_282, out a1_283, out a2_284, out a4_285, out a5_286, out s4_287, out s8_288)
l2303415A:
	word32 a0_289
	word32 a1_290
	word32 a2_291
	word32 a4_292
	word32 a5_293
	word32 s2_294
	word32 s4_295
	word32 s7_296
	word32 s8_297
	word32 s9_298
	word32 s10_299
	word32 s11_300
	ra = bl_printk(ra, s1_105 + 892<i32>, a3, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_105, out a0_289, out a1_290, out a2_291, out a3, out a4_292, out a5_293, out s2_294, out s3_123, out s4_295, out s5_125, out s6_126, out s7_296, out s8_297, out s9_298, out s10_299, out s11_300)
l23034188:
	s0_134 = s0_134 + 1<32>
l23034136:
	0<32> = dwArg0128
	s4Out = dwArg78
	s6Out = s6_126
	return ra
_dump_rsa_data_exit:


word32 _pka_test_case_xgcd(word32 ra, word32 s6, word32 dwArg08, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_pka_test
// MayUse:  ra:[0..31] s6:[0..31] Stack +0008:[0..31]
// LiveOut: s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: ra s0 s1 sp
_pka_test_case_xgcd_entry:
l2303418C:
	Sec_Eng_PKA_Reset()
	Sec_Eng_PKA_BigEndian_Enable()
	Sec_Eng_PKA_Write_Data(8<32>, 1<32>, 0x230839C4<32>, 64<i32>, 0<32>)
	Sec_Eng_PKA_CREG(8<32>, 2<32>, 0<32>, 0<32>)
	Sec_Eng_PKA_CREG(8<32>, 3<32>, 0<32>, 1<32>)
	Sec_Eng_PKA_Write_Data(8<32>, 0<32>, 0x23083AC4<32>, 64<i32>, 0<32>)
	Sec_Eng_PKA_LMUL2N(0xA<32>, 1<32>, 8<32>, 0<32>, 0xFFF800<32>, 0<32>)
	Sec_Eng_PKA_LDIV(8<32>, 0<32>, 0xA<32>, 1<32>, 8<32>, 1<32>, 0<32>)
	word32 s0_117 = Sec_Eng_PKA_MREM(8<32>, 4<32>, 0xA<32>, 1<32>, 8<32>, 1<32>, 0<32>)
	Sec_Eng_PKA_CREG(0xA<32>, 1<32>, 0<32>, 1<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 2<32>, 8<32>, 1<32>, 0<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 1<32>, 8<32>, 4<32>, 1<32>)
	Sec_Eng_PKA_Write_Data(8<32>, 4<32>, 0x2308341C<32>, 64<i32>, 0<32>)
	Sec_Eng_PKA_Write_Data(8<32>, 5<32>, s0_117 + -1340<i32>, 64<i32>, 0<32>)
	Sec_Eng_PKA_Write_Data(8<32>, 7<32>, Sec_Eng_PKA_Write_Data(8<32>, 6<32>, s0_117 + -1340<i32>, 64<i32>, 0<32>) + 1052<i32>, 64<i32>, 0<32>)
	Sec_Eng_PKA_LMUL(8<32>, 8<32>, 8<32>, 0<32>, 8<32>, 5<32>, 0<32>)
	Sec_Eng_PKA_LSUB(8<32>, 8<32>, 8<32>, 4<32>, 8<32>, 8<32>, 0<32>)
	Sec_Eng_PKA_LMUL(8<32>, 9<32>, 8<32>, 0<32>, 8<32>, 7<32>, 0<32>)
	Sec_Eng_PKA_LSUB(8<32>, 9<32>, 8<32>, 6<32>, 8<32>, 9<32>, 0<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 4<32>, 8<32>, 5<32>, 0<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 5<32>, 8<32>, 8<32>, 0<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 6<32>, 8<32>, 7<32>, 0<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 7<32>, 8<32>, 9<32>, 1<32>)
l23034316:
	branch true l23034344
l23034344:
	Sec_Eng_PKA_LDIV(8<32>, 0<32>, 8<32>, 2<32>, 8<32>, 1<32>, 0<32>)
	Sec_Eng_PKA_MREM(8<32>, 3<32>, 8<32>, 2<32>, 8<32>, 1<32>, 0<32>)
	Sec_Eng_PKA_LMUL(8<32>, 8<32>, 8<32>, 0<32>, 8<32>, 5<32>, 0<32>)
	Sec_Eng_PKA_LSUB(8<32>, 8<32>, 8<32>, 4<32>, 8<32>, 8<32>, 0<32>)
	Sec_Eng_PKA_LMUL(8<32>, 9<32>, 8<32>, 0<32>, 8<32>, 7<32>, 0<32>)
	word32 s0_465 = Sec_Eng_PKA_LSUB(8<32>, 9<32>, 8<32>, 6<32>, 8<32>, 9<32>, 0<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 2<32>, 8<32>, 1<32>, 0<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 4<32>, 8<32>, 5<32>, 0<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 5<32>, 8<32>, 8<32>, 0<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 6<32>, 8<32>, 7<32>, 0<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 7<32>, 8<32>, 9<32>, 1<32>)
	Sec_Eng_PKA_Move_Data(8<32>, 1<32>, 8<32>, 3<32>, 1<32>)
	Sec_Eng_PKA_Write_Data(8<32>, 0xA<32>, s0_465 + -1340<i32>, 64<i32>, 0<32>)
	Sec_Eng_PKA_LCMP(fp + -273<i32>, 8<32>, 1<32>, 8<32>, 0xA<32>)
l2303431C:
	word32 s4_609
	word32 s6_611
	_dump_rsa_data(ra, 256<i32>, Sec_Eng_PKA_Read_Data(8<32>, 6<32>, fp + -272<i32>, 64<i32>), s6, dwLocE0, dwLocDC, dwLocB8, dwLoc94, dwArg08, out s4_609, out s6_611)
	s6Out = s6_611
	return s4_609
_pka_test_case_xgcd_exit:


void _pka_test_case2(word32 ra, word32 s4, word32 s6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_pka_test
// MayUse:  ra:[0..31] s4:[0..31] s6:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s9 t0 t1 t3 t4 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 sp
_pka_test_case2_entry:
l23034428:
	Sec_Eng_PKA_Reset()
	Sec_Eng_PKA_BigEndian_Enable()
	Sec_Eng_PKA_Write_Data(8<32>, 0<32>, 0x230838C4<32>, 64<i32>, 0<32>)
	Sec_Eng_PKA_Write_Data(8<32>, 1<32>, 0x23083BC4<32>, 64<i32>, 0<32>)
	Sec_Eng_PKA_Write_Data(8<32>, 2<32>, 0x230837C4<32>, 64<i32>, 0<32>)
	Sec_Eng_PKA_Write_Data(8<32>, 3<32>, 0x2308DE7C<32>, 1<32>, 0<32>)
	Sec_Eng_PKA_CREG(8<32>, 4<32>, 0<32>, 0<32>)
	Sec_Eng_PKA_CREG(8<32>, 5<32>, 0<32>, 1<32>)
	Sec_Eng_PKA_LMUL2N(0xA<32>, 2<32>, 8<32>, 2<32>, 0xFFF800<32>, 0<32>)
	Sec_Eng_PKA_MREM(8<32>, 2<32>, 0xA<32>, 2<32>, 8<32>, 0<32>, 0<32>)
	Sec_Eng_PKA_CREG(0xA<32>, 2<32>, 0<32>, 1<32>)
	Sec_Eng_PKA_MEXP(8<32>, 4<32>, 8<32>, 2<32>, 8<32>, 8<32>, 0<32>, 1<32>, dwLoc0138)
	Sec_Eng_PKA_Move_Data(8<32>, 2<32>, 8<32>, 4<32>, 1<32>)
	Sec_Eng_PKA_Write_Data(8<32>, 1<32>, 0x230836C4<32>, 64<i32>, 0<32>)
	Sec_Eng_PKA_CREG(8<32>, 4<32>, 0<32>, 0<32>)
	Sec_Eng_PKA_CREG(8<32>, 5<32>, 0<32>, 1<32>)
	Sec_Eng_PKA_LMUL(0xA<32>, 2<32>, 8<32>, 2<32>, 8<32>, 1<32>, 0<32>)
	Sec_Eng_PKA_MREM(8<32>, 2<32>, 0xA<32>, 2<32>, 8<32>, 0<32>, 0<32>)
	Sec_Eng_PKA_CREG(0xA<32>, 2<32>, 0<32>, 1<32>)
	word32 s6_709
	word32 s4_708
	word32 ra_301 = _dump_rsa_data(ra, 256<i32>, Sec_Eng_PKA_Read_Data(8<32>, 2<32>, fp + -304<i32>, 64<i32>), s6, dwLoc0100, dwLocFC, dwLocD8, dwLocB4, s4, out s4_708, out s6_709)
	word32 s0_321 = fp + -304<i32>
	word32 s1_322 = 0x230835C4<32>
	word32 a4_323 = 0<32>
	word32 s2_324 = 0<32>
	word32 s5_325 = 0x42020000<32>
	word32 s6_326 = 0x42020000<32>
	word32 s7_327 = 0x4200E000<32>
	word32 s8_328 = 0x23084000<32>
l230345C4:
	word32 a5_334 = CONVERT(Mem333[s5_325 + -932<i32>:byte], byte, word32)
	branch s2_324 != 256<i32> l23034644
l23034644:
	branch CONVERT(Mem333[s0_321:byte], byte, word32) == CONVERT(Mem333[s1_322:byte], byte, word32) l2303469E
l23034650:
	a4_323 = 1<32>
	branch a5_334 >u 2<32> l2303469E
l23034658:
	branch CONVERT(Mem333[s6_326 + -928<i32>:byte], byte, word32) >u 2<32> l2303469E
l23034660:
	branch Mem333[s7_327 + -380<i32>:int32] == 0<32> l230346A6
l230346A6:
	word32 a5_712
	xTaskGetTickCount(out a5_712)
l23034666:
	word32 a5_713
	xTaskGetTickCountFromISR(out a5_713)
l2303466A:
	branch CONVERT(Mem333[s0_321:byte], byte, word32) == CONVERT(Mem333[s1_322:byte], byte, word32) l2303467A
l23034678:
l2303467A:
	word32 a0_714
	word32 a1_715
	word32 s9_722
	word32 a4_718
	word32 s10_723
	word32 a5_719
	word32 a3_717
	word32 a2_716
	word32 s3_720
	word32 s4_721
	word32 s11_724
	ra_301 = bl_printk(ra_301, 0x23083388<32>, s8_328 + -740<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_322, out a0_714, out a1_715, out a2_716, out a3_717, out a4_718, out a5_719, out s2_324, out s3_720, out s4_721, out s5_325, out s6_326, out s7_327, out s8_328, out s9_722, out s10_723, out s11_724)
	a4_323 = 1<32>
l2303469E:
	s2_324 = s2_324 + 1<32>
	s0_321 = s0_321 + 1<32>
	s1_322 = s1_322 + 1<32>
l230345D0:
	word32 a0_434
	branch a4_323 == 0<32> l230346B2
l230346B2:
	branch a5_334 >u 2<32> l23034618
l230346B8:
	branch CONVERT(Mem333[0x4201FC60<32>:byte], byte, word32) >u 2<32> l23034618
l230346C4:
	branch Mem333[0x4200DE84<32>:int32] == 0<32> l230346F6
l230346F6:
	word32 a5_725
	xTaskGetTickCount(out a5_725)
l230346CE:
	word32 a5_726
	xTaskGetTickCountFromISR(out a5_726)
l230346D2:
	a0_434 = 0x230833E8<32>
l230345D2:
	branch a5_334 >u 4<32> l23034618
l230345D8:
	branch CONVERT(Mem333[0x4201FC60<32>:byte], byte, word32) >u 4<32> l23034618
l230345E4:
	branch Mem333[0x4200DE84<32>:int32] == 0<32> l230346AC
l230346AC:
	word32 a5_710
	xTaskGetTickCount(out a5_710)
l230345EE:
	word32 a5_711
	xTaskGetTickCountFromISR(out a5_711)
l230345F2:
	a0_434 = 0x230833B4<32>
l23034614:
	word32 s9_741
	word32 s10_742
	word32 s11_743
	word32 a5_733
	word32 s5_737
	word32 s6_738
	word32 s7_739
	word32 s8_740
	word32 s2_734
	word32 s4_736
	word32 s3_735
	word32 a1_729
	word32 a2_730
	word32 a3_731
	word32 a4_732
	word32 a0_728
	word32 s1_727
	bl_printk(ra_301, a0_434, 0x23083D1C<32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_727, out a0_728, out a1_729, out a2_730, out a3_731, out a4_732, out a5_733, out s2_734, out s3_735, out s4_736, out s5_737, out s6_738, out s7_739, out s8_740, out s9_741, out s10_742, out s11_743)
l23034618:
	return
_pka_test_case2_exit:


void bl_pka_test(word32 ra, word32 s1, word32 s2, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_pka
// MayUse:  ra:[0..31] s1:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
bl_pka_test_entry:
l230346FC:
	word32 s4_26
	word32 s6_28
	word32 s1_111
	word32 a3_112
	word32 s2_113
	word32 s3_114
	word32 ra_19 = bl_irq_register(ra, s1, 0x1B<32>, 0x23033F58<32>, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s1_111, out a3_112, out s2_113, out s3_114, out s4_26, out s6_28)
	bl_irq_enable(0x1B<32>)
	_pka_test_case2(ra_19, s4_26, s6_28)
	word32 s6_68
	_pka_test_case2(ra_19, _pka_test_case_xgcd(ra_19, s6_28, dwLoc08, out s6_68), s6_68)
	return
bl_pka_test_exit:


void int_timer_cb(word32 ra, word32 s0, word32 a4, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t3 tp
// Preserved: sp
int_timer_cb_entry:
l23034728:
	TIMER_ClearIntStatus(0<32>, a4)
	word32 a3_16
	word32 s2_22
	word32 a0_26
	word32 s4_79
	word32 s3_78
	word32 a4_77
	word32 s1_76
	xTaskIncrementTick(s0, a4, mstatus, dwArg0188, out s1_76, out a0_26, out a3_16, out a4_77, out s2_22, out s3_78, out s4_79)
	branch a0_26 == 0<32> l23034742
l23034742:
	return
l2303473A:
l2303473E_thunk_vTaskSwitchContext:
	word32 a5_82
	word32 a4_81
	word32 a0_80
	vTaskSwitchContext(ra, a3_16, s2_22, mstatus, dwArg30, dwArg34, dwArg58, dwArg7C, out a0_80, out a4_81, out a5_82)
	return
int_timer_cb_exit:


word32 bl_timer_now_us(ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_stack_wifi
//      event_cb_wifi_event
//      bfl_main
//      iperf_server_udp_recv_fn
//      bloop_run
// MayUse: 
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5
// Preserved: sp
bl_timer_now_us_entry:
l23034748:
l23034750:
	word32 a1_9 = Mem5[0x200BFFC<32>:int32]
	word32 a0_10 = Mem5[0x200BFF8<32>:int32]
	branch a1_9 != Mem5[0x200BFFC<32>:int32] l23034750
l23034760:
	word32 a1_15
	word32 a4_16
	word32 a5_17
	word32 a3_21
	word32 a0_14 = __udivdi3(a0_10, a1_9, 0xA<32>, 0<32>, out a1_15, out a3_21, out a4_16, out a5_17)
	a1Out = a1_15
	a2Out = dwArg10
	a3Out = a3_21
	a4Out = a4_16
	a5Out = a5_17
	return a0_14
bl_timer_now_us_exit:


void bl_timer_tick_enable(word32 ra, word32 s1, word32 s2, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg8C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_timer_start
// MayUse:  ra:[0..31] s1:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_timer_tick_enable_entry:
l2303476E:
	word32 a4_10
	word32 a1_106
	word32 a2_107
	word32 a3_108
	word32 a5_109
	word32 a6_110
	word32 a7_111
	memcpy(fp + -40<i32>, 0x23083D64<32>, 0x18<32>, out a1_106, out a2_107, out a3_108, out a4_10, out a5_109, out a6_110, out a7_111)
	TIMER_IntMask(a1, a2)
	TIMER_Disable(a0)
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg56 = <invalid>
	TIMER_Init(a0, a2, stackArg56)
	TIMER_ClearIntStatus(0<32>, a4_10)
	TIMER_ClearIntStatus(1<32>, a4_10)
	TIMER_ClearIntStatus(2<32>, a4_10)
	TIMER_IntMask(a1, a2)
	TIMER_IntMask(a1, a2)
	TIMER_IntMask(a1, a2)
	TIMER_Enable(a0)
	bl_irq_enable(53<i32>)
	word32 s1_116
	word32 a3_117
	word32 s2_118
	word32 s3_119
	word32 s4_120
	word32 s6_121
	bl_irq_register(ra, s1, 53<i32>, 0x23034728<32>, s2, dwLoc28, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg40, dwArg44, dwArg48, dwArg5C, dwArg68, dwArg6C, dwArg8C, out s1_116, out a3_117, out s2_118, out s3_119, out s4_120, out s6_121)
	return
bl_timer_tick_enable_exit:


void cmd_gpio_get(word32 ra, word32 s0, word32 a0, word32 a2, word32 s2, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] s0:[24..31] s2:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cmd_gpio_get_entry:
l23034804:
	byte bLoc11_173 = SLICE(s0, byte, 24)
	branch a2 == 2<32> l23034872
l23034872:
	word32 a4_276
	word32 a5_277
	word32 a3_275
	word32 a1_273
	word32 a2_274
	word32 a0_19 = atoi(a0, out a1_273, out a2_274, out a3_275, out a4_276, out a5_277)
	branch a0_19 >= 0<32> l2303488E
l2303488E:
	word32 a0_37 = bl_gpio_input_get(a0_19 & 255<i32>, fp + 0xFFFFFFEF<32>)
	branch a2 <u CONVERT(Mem11[0x4201FC5C<32>:byte], byte, word32) l23034860
l230348A8:
	branch a2 <u CONVERT(Mem11[0x4201FC61<32>:byte], byte, word32) l23034860
l230348B4:
	branch Mem11[0x4200DE84<32>:int32] == 0<32> l230348FA
l230348FA:
	word32 a5_287
	xTaskGetTickCount(out a5_287)
l230348BE:
	word32 a5_288
	xTaskGetTickCountFromISR(out a5_288)
l230348C2:
	branch a0_37 != 0<32> l23034900
l23034900:
l230348C6:
	branch CONVERT(bLoc11_173, byte, word32) != 0<32> l2303490A
l2303490A:
l230348CC:
l230348D4:
	word32 s1_306
	word32 a0_307
	word32 a1_308
	word32 a2_309
	word32 a3_310
	word32 a4_311
	word32 a5_312
	word32 s2_313
	word32 s3_314
	word32 s4_315
	word32 s5_316
	word32 s6_317
	word32 s7_318
	word32 s8_319
	word32 s9_320
	word32 s10_321
	word32 s11_322
	bl_printk(ra, 0x23083E94<32>, 0x23083E3C<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_306, out a0_307, out a1_308, out a2_309, out a3_310, out a4_311, out a5_312, out s2_313, out s3_314, out s4_315, out s5_316, out s6_317, out s7_318, out s8_319, out s9_320, out s10_321, out s11_322)
l23034880:
	word32 s8_286
	word32 s4_285
	word32 a5_284
	word32 a2_282
	word32 a4_283
	word32 a1_281
	word32 a0_280
	puts(0x23083E84<32>, out a0_280, out a1_281, out a2_282, out a4_283, out a5_284, out s4_285, out s8_286)
l23034816:
	branch CONVERT(Mem11[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23034860
l23034822:
	branch CONVERT(Mem11[0x4201FC61<32>:byte], byte, word32) >u 2<32> l23034860
l2303482E:
	branch Mem11[0x4200DE84<32>:int32] == 0<32> l2303486C
l2303486C:
	word32 a5_278
	xTaskGetTickCount(out a5_278)
l23034838:
	word32 a5_279
	xTaskGetTickCountFromISR(out a5_279)
l2303483C:
	word32 s1_289
	word32 a0_290
	word32 a1_291
	word32 a2_292
	word32 a3_293
	word32 a4_294
	word32 a5_295
	word32 s2_296
	word32 s3_297
	word32 s4_298
	word32 s5_299
	word32 s6_300
	word32 s7_301
	word32 s8_302
	word32 s9_303
	word32 s10_304
	word32 s11_305
	bl_printk(ra, 0x23083E4C<32>, 0x23083E3C<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_289, out a0_290, out a1_291, out a2_292, out a3_293, out a4_294, out a5_295, out s2_296, out s3_297, out s4_298, out s5_299, out s6_300, out s7_301, out s8_302, out s9_303, out s10_304, out s11_305)
l23034860:
	return
cmd_gpio_get_exit:


void cmd_gpio_set(word32 ra, word32 s1, word32 a0, word32 a2, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg98, word32 dwArgAC, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00AC:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
cmd_gpio_set_entry:
l23034914:
	branch a2 == 3<32> l23034982
l23034982:
	word32 a4_446
	word32 a5_447
	word32 a1_443
	word32 a2_444
	word32 a3_445
	word32 a0_19 = atoi(a0, out a1_443, out a2_444, out a3_445, out a4_446, out a5_447)
	word32 a2_449
	word32 a4_450
	word32 a5_451
	word32 a1_448
	word32 a3_118
	word32 a0_36 = atoi(a0_19, out a1_448, out a2_449, out a3_118, out a4_450, out a5_451)
	word32 s1_114 = a0_36
	word32 a4_52 = CONVERT(Mem11[0x4201FC5C<32>:byte], byte, word32)
	branch a0_19 < 0<32> l2303499E
l2303499A:
	branch a0_36 >= 0<32> l230349F0
l230349F0:
	branch a4_52 >u 2<32> l23034A3E
l230349F6:
	branch CONVERT(Mem11[0x4201FC61<32>:byte], byte, word32) >u 2<32> l23034A3E
l23034A02:
	branch Mem11[0x4200DE84<32>:int32] == 0<32> l23034A54
l23034A54:
	word32 a5_490
	xTaskGetTickCount(out a5_490)
l23034A0C:
	word32 a5_491
	xTaskGetTickCountFromISR(out a5_491)
l23034A10:
	branch a0_36 != 0<32> l23034A5A
l23034A5A:
l23034A12:
l23034A1A:
	word32 a0_492
	word32 a1_493
	word32 a2_494
	word32 a4_495
	word32 a5_496
	word32 s2_497
	word32 s3_498
	word32 s4_499
	word32 s5_500
	word32 s6_501
	word32 s7_502
	word32 s8_503
	word32 s9_504
	word32 s10_505
	word32 s11_506
	bl_printk(ra, 0x23083F28<32>, 0x23083E3C<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_114, out a0_492, out a1_493, out a2_494, out a3_118, out a4_495, out a5_496, out s2_497, out s3_498, out s4_499, out s5_500, out s6_501, out s7_502, out s8_503, out s9_504, out s10_505, out s11_506)
l23034A3E:
	0<32> = dwArg38
	word32 a1_115 = CONVERT(s1_114 != 0<32>, bool, word32)
l23034A50_thunk_bl_gpio_output_set:
	bl_gpio_output_set(a0_19 & 255<i32>, a1_115, a3_118)
	return
l2303499E:
	branch a4_52 >u 4<32> l23034A64
l230349A4:
	branch CONVERT(Mem11[0x4201FC61<32>:byte], byte, word32) >u 4<32> l23034A64
l230349B0:
	branch Mem11[0x4200DE84<32>:int32] == 0<32> l230349EA
l230349EA:
	word32 a5_471
	xTaskGetTickCount(out a5_471)
l230349BA:
	word32 a5_472
	xTaskGetTickCountFromISR(out a5_472)
l230349BE:
	0<32> = dwArg38
l230349E6_thunk_bl_printk:
	word32 s9_487
	word32 s8_486
	word32 s6_484
	word32 s7_485
	word32 s5_483
	word32 s4_482
	word32 s2_480
	word32 s10_488
	word32 s11_489
	word32 s3_481
	word32 a4_478
	word32 a5_479
	word32 a2_476
	word32 a3_477
	word32 a0_474
	word32 a1_475
	word32 s1_473
	bl_printk(ra, 0x23083F04<32>, 0x23083E3C<32>, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_473, out a0_474, out a1_475, out a2_476, out a3_477, out a4_478, out a5_479, out s2_480, out s3_481, out s4_482, out s5_483, out s6_484, out s7_485, out s8_486, out s9_487, out s10_488, out s11_489)
	return
l2303492A:
	branch CONVERT(Mem11[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23034A64
l23034934:
	branch CONVERT(Mem11[0x4201FC61<32>:byte], byte, word32) >u 2<32> l23034A64
l23034A64:
	0<32> = dwArg38
	return
l23034940:
	branch Mem11[0x4200DE84<32>:int32] == 0<32> l2303497C
l2303497C:
	word32 a5_452
	xTaskGetTickCount(out a5_452)
l2303494A:
	word32 a5_453
	xTaskGetTickCountFromISR(out a5_453)
l2303494E:
	0<32> = dwArg38
l23034978_thunk_bl_printk:
	word32 s11_470
	word32 s10_469
	word32 s9_468
	word32 s7_466
	word32 s8_467
	word32 s4_463
	word32 s5_464
	word32 s6_465
	word32 s3_462
	word32 a5_460
	word32 s2_461
	word32 a2_457
	word32 a3_458
	word32 a4_459
	word32 a1_456
	word32 a0_455
	word32 s1_454
	bl_printk(ra, 0x23083EC0<32>, 0x23083E3C<32>, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_454, out a0_455, out a1_456, out a2_457, out a3_458, out a4_459, out a5_460, out s2_461, out s3_462, out s4_463, out s5_464, out s6_465, out s7_466, out s8_467, out s9_468, out s10_469, out s11_470)
	return
cmd_gpio_set_exit:


void cmd_gpio_func(word32 ra, word32 a0, word32 a2, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg8C, word32 dwArg98, word32 dwArgBC, word32 dwArg0100, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +0100:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cmd_gpio_func_entry:
l23034A70:
	branch a2 == 5<32> l23034AE8
l23034AE8:
	word32 a1_570
	word32 a2_571
	word32 a3_572
	word32 a4_573
	word32 a5_574
	word32 a0_23 = atoi(a0, out a1_570, out a2_571, out a3_572, out a4_573, out a5_574)
	word32 a4_578
	word32 a5_579
	word32 a3_577
	word32 a1_575
	word32 a2_576
	word32 a0_40 = atoi(Mem15[a3 + 8<i32>:int32], out a1_575, out a2_576, out a3_577, out a4_578, out a5_579)
	word32 a4_583
	word32 a5_584
	word32 a1_580
	word32 a2_581
	word32 a3_582
	word32 a0_57 = atoi(Mem15[a3 + 12<i32>:int32], out a1_580, out a2_581, out a3_582, out a4_583, out a5_584)
	word32 s3_158 = a0_40
	word32 s1_154 = a0_57
	word32 a3_587
	word32 a4_588
	word32 a5_589
	word32 a2_586
	word32 a1_585
	word32 a0_74 = atoi(Mem15[a3 + 16<i32>:int32], out a1_585, out a2_586, out a3_587, out a4_588, out a5_589)
	branch a0_23 < 0<32> l23034B1E
l23034B12:
	branch a0_40 < 0<32> l23034B1E
l23034B16:
	branch a0_57 < 0<32> l23034B1E
l23034B1A:
	branch a0_74 >= 0<32> l23034B78
l23034B78:
	branch CONVERT(Mem15[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23034BE4
l23034B82:
	branch CONVERT(Mem15[0x4201FC61<32>:byte], byte, word32) >u 2<32> l23034BE4
l23034B8E:
	branch Mem15[0x4200DE84<32>:int32] == 0<32> l23034C06
l23034C06:
	word32 a5_628
	xTaskGetTickCount(out a5_628)
l23034B98:
	word32 a5_629
	xTaskGetTickCountFromISR(out a5_629)
l23034B9C:
	branch a0_40 != 0<32> l23034C0C
l23034C0C:
l23034BA0:
l23034BA8:
	branch a0_57 != 0<32> l23034C16
l23034C16:
l23034BAA:
l23034BB2:
	branch a0_74 != 0<32> l23034C20
l23034C20:
l23034BB6:
l23034BBE:
	word32 a0_630
	word32 a1_631
	word32 a2_632
	word32 a3_633
	word32 a4_634
	word32 a5_635
	word32 s2_636
	word32 s4_637
	word32 s5_638
	word32 s6_639
	word32 s7_640
	word32 s8_641
	word32 s9_642
	word32 s10_643
	word32 s11_644
	bl_printk(ra, 0x23083DE8<32>, 0x23083E3C<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_154, out a0_630, out a1_631, out a2_632, out a3_633, out a4_634, out a5_635, out s2_636, out s3_158, out s4_637, out s5_638, out s6_639, out s7_640, out s8_641, out s9_642, out s10_643, out s11_644)
l23034BE4:
	word32 a1_170 = CONVERT(s1_154 != 0<32>, bool, word32)
	branch s3_158 == 0<32> l23034C2A
l23034C2A:
	0<32> = dwArg0128
l23034C38_thunk_bl_gpio_enable_output:
	bl_gpio_enable_output(a1_170, dwArg0100)
	return
l23034BF4:
	0<32> = dwArg0128
l23034C02_thunk_bl_gpio_enable_input:
	bl_gpio_enable_input(a1_170, dwArg0100)
	return
l23034B1E:
	branch CONVERT(Mem15[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l23034C3C
l23034B28:
	branch CONVERT(Mem15[0x4201FC61<32>:byte], byte, word32) >u 4<32> l23034C3C
l23034B34:
	branch Mem15[0x4200DE84<32>:int32] == 0<32> l23034B72
l23034B72:
	word32 a5_609
	xTaskGetTickCount(out a5_609)
l23034B3E:
	word32 a5_610
	xTaskGetTickCountFromISR(out a5_610)
l23034B42:
	0<32> = dwArg0128
l23034B6E_thunk_bl_printk:
	word32 s1_611
	word32 a1_613
	word32 a0_612
	word32 a4_616
	word32 a2_614
	word32 s2_618
	word32 a3_615
	word32 a5_617
	word32 s3_619
	word32 s4_620
	word32 s5_621
	word32 s7_623
	word32 s6_622
	word32 s8_624
	word32 s9_625
	word32 s10_626
	word32 s11_627
	bl_printk(ra, 0x23083F04<32>, 0x23083E3C<32>, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_611, out a0_612, out a1_613, out a2_614, out a3_615, out a4_616, out a5_617, out s2_618, out s3_619, out s4_620, out s5_621, out s6_622, out s7_623, out s8_624, out s9_625, out s10_626, out s11_627)
	return
l23034A8A:
	branch CONVERT(Mem15[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23034C3C
l23034A94:
	branch CONVERT(Mem15[0x4201FC61<32>:byte], byte, word32) >u 2<32> l23034C3C
l23034C3C:
	0<32> = dwArg0128
	return
l23034AA0:
	branch Mem15[0x4200DE84<32>:int32] == 0<32> l23034AE2
l23034AE2:
	word32 a5_590
	xTaskGetTickCount(out a5_590)
l23034AAA:
	word32 a5_591
	xTaskGetTickCountFromISR(out a5_591)
l23034AAE:
	0<32> = dwArg0128
l23034ADE_thunk_bl_printk:
	word32 s7_604
	word32 s8_605
	word32 s6_603
	word32 s3_600
	word32 a4_597
	word32 s5_602
	word32 a3_596
	word32 a2_595
	word32 s4_601
	word32 s2_599
	word32 a5_598
	word32 s9_606
	word32 s10_607
	word32 s11_608
	word32 a1_594
	word32 s1_592
	word32 a0_593
	bl_printk(ra, 0x23083D9C<32>, 0x23083E3C<32>, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_592, out a0_593, out a1_594, out a2_595, out a3_596, out a4_597, out a5_598, out s2_599, out s3_600, out s4_601, out s5_602, out s6_603, out s7_604, out s8_605, out s9_606, out s10_607, out s11_608)
	return
cmd_gpio_func_exit:


void bl_gpio_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
bl_gpio_cli_init_entry:
l23034C4C:
	return
bl_gpio_cli_init_exit:


word32 bl_efuse_read_mac(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
bl_efuse_read_mac_entry:
l23034C50:
	word32 s0_19
	word32 s1_20
	word32 s2_21
	word32 s3_22
	word32 s4_23
	word32 ra_18 = EF_Ctrl_Read_MAC_Address(ra, s0, s1, a0, s2, s3, s4, out s0_19, out s1_20, out s2_21, out s3_22, out s4_23)
	s0Out = s0_19
	s1Out = s1_20
	s2Out = s2_21
	s3Out = s3_22
	s4Out = s4_23
	return ra_18
bl_efuse_read_mac_exit:


word32 bl_efuse_read_mac_factory(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg8C, word32 dwArg9C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_efuse_read_mac_factory_entry:
l23034C60:
	word32 a0_16
	word32 a3_19
	word32 s0_25
	word32 s1_26
	word32 s10_27
	word32 s11_28
	word32 s2_29
	word32 s3_30
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 s7_34
	word32 mstatus_40
	word32 ra_24 = mfg_media_read_macaddr(ra, s0, s1, a0, 1<32>, a3, a4, s2, s3, s4, mstatus, dwLoc08, dwArg08, dwArg28, dwArg40, dwArg44, dwArg50, dwArg54, dwArg68, dwArg78, dwArg8C, dwArg9C, out s0_25, out s1_26, out a0_16, out a3_19, out s2_29, out s3_30, out s4_31, out s5_32, out s6_33, out s7_34, out s10_27, out s11_28, out mstatus_40)
	s0Out = s0_25
	s1Out = s1_26
	a0Out = 0<32> - CONVERT(a0_16 != 0<32>, bool, word32)
	a3Out = a3_19
	s2Out = s2_29
	s3Out = s3_30
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	s7Out = s7_34
	s10Out = s10_27
	s11Out = s11_28
	mstatusOut = mstatus_40
	return ra_24
bl_efuse_read_mac_factory_exit:


word32 bl_efuse_read_capcode(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_efuse_read_capcode_entry:
l23034C78:
	word32 a0_16
	word32 a3_19
	word32 s0_25
	word32 s1_26
	word32 s10_27
	word32 s11_28
	word32 s2_29
	word32 s3_30
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 s7_34
	word32 s8_35
	word32 mstatus_40
	word32 ra_24 = mfg_media_read_xtal_capcode(ra, s0, s1, a0, 1<32>, a3, a4, s2, s3, s4, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg68, dwArg8C, out s0_25, out s1_26, out a0_16, out a3_19, out s2_29, out s3_30, out s4_31, out s5_32, out s6_33, out s7_34, out s8_35, out s10_27, out s11_28, out mstatus_40)
	s0Out = s0_25
	s1Out = s1_26
	a0Out = 0<32> - CONVERT(a0_16 != 0<32>, bool, word32)
	a3Out = a3_19
	s2Out = s2_29
	s3Out = s3_30
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	s7Out = s7_34
	s8Out = s8_35
	s10Out = s10_27
	s11Out = s11_28
	mstatusOut = mstatus_40
	return ra_24
bl_efuse_read_capcode_exit:


word32 bl_efuse_read_pwroft(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s2 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
bl_efuse_read_pwroft_entry:
l23034C90:
	word32 a0_16
	word32 a3_19
	word32 s0_25
	word32 s1_26
	word32 s2_29
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 s7_34
	word32 s8_35
	word32 s9_36
	word32 mstatus_42
	word32 ra_24 = mfg_media_read_poweroffset(ra, s0, s1, a0, 1<32>, a3, a4, s2, s3, s4, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg68, dwArg8C, dwArg0118, out s0_25, out s1_26, out a0_16, out a3_19, out s2_29, out s4_31, out s5_32, out s6_33, out s7_34, out s8_35, out s9_36, out mstatus_42)
	s0Out = s0_25
	s1Out = s1_26
	a0Out = 0<32> - CONVERT(a0_16 != 0<32>, bool, word32)
	a3Out = a3_19
	s2Out = s2_29
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	s7Out = s7_34
	s8Out = s8_35
	s9Out = s9_36
	mstatusOut = mstatus_42
	return ra_24
bl_efuse_read_pwroft_exit:


word32 Aes_Compare_Data(word32 ra, word32 a0, word32 a1, word32 a2, word32 s2, word32 s5, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg6C, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_AES_Link_Case_CBC_128
//      Sec_Eng_AES_Link_Case_CTR_128
//      Sec_Eng_AES_Link_Case_ECB_128
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +010C:[0..31]
// LiveOut: a3 ra s0 s1 s2 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
Aes_Compare_Data_entry:
l23034CA8:
	word32 s7_118 = a0
	word32 s8_119 = a1
	word32 s1_110 = a2
	word32 a4_123 = 0<32>
	word32 s0_125 = 0<32>
	word32 s6_117 = 0x42020000<32>
	word32 s9_120 = 0x42020000<32>
	word32 s10_111 = 0x4200E000<32>
	word32 s11_112 = 0x23084000<32>
	word32 s2_113 = 0x2307B100<32>
	s5_116 = s5
l23034CEE:
	word32 s5_116
	word32 a5_48 = CONVERT(Mem47[s6_117 + -932<i32>:byte], byte, word32)
	branch s0_125 != s1_110 l23034D58
l23034D58:
	s5_116 = s8_119 + s0_125
	word32 s4_54 = s7_118 + s0_125
	branch CONVERT(Mem47[s5_116:byte], byte, word32) == CONVERT(Mem47[s4_54:byte], byte, word32) l23034DBA
l23034D6C:
	a4_123 = 1<32>
	branch a5_48 >u 2<32> l23034DBA
l23034D74:
	branch CONVERT(Mem47[s9_120 + -926<i32>:byte], byte, word32) >u 2<32> l23034DBA
l23034D7C:
	branch Mem47[s10_111 + -380<i32>:int32] == 0<32> l23034DBE
l23034DBE:
	word32 a5_515
	xTaskGetTickCount(out a5_515)
l23034D82:
	word32 a5_516
	xTaskGetTickCountFromISR(out a5_516)
l23034D86:
	branch CONVERT(Mem47[s5_116:byte], byte, word32) == CONVERT(Mem47[s4_54:byte], byte, word32) l23034D96
l23034D94:
l23034D96:
	word32 s4_524
	word32 a4_521
	word32 s3_523
	word32 a5_522
	word32 a1_518
	word32 a3_520
	word32 a2_519
	word32 a0_517
	ra = bl_printk(ra, 0x23083388<32>, s11_112 + -12<i32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_110, out a0_517, out a1_518, out a2_519, out a3_520, out a4_521, out a5_522, out s2_113, out s3_523, out s4_524, out s5_116, out s6_117, out s7_118, out s8_119, out s9_120, out s10_111, out s11_112)
	a4_123 = 1<32>
l23034DBA:
	s0_125 = s0_125 + 1<32>
l23034CF6:
	word32 a0_147
	branch a4_123 == 0<32> l23034DCA
l23034DCA:
	branch a5_48 >u 2<32> l23034E12
l23034DD0:
	branch CONVERT(Mem47[0x4201FC62<32>:byte], byte, word32) >u 2<32> l23034E12
l23034DDC:
	branch Mem47[0x4200DE84<32>:int32] == 0<32> l23034E0C
l23034E0C:
	word32 a5_525
	xTaskGetTickCount(out a5_525)
l23034DE6:
	word32 a5_526
	xTaskGetTickCountFromISR(out a5_526)
l23034DEA:
	a0_147 = 0x230833E8<32>
l23034CF8:
	branch a5_48 >u 4<32> l23034E12
l23034CFE:
	branch CONVERT(Mem47[0x4201FC62<32>:byte], byte, word32) >u 4<32> l23034E12
l23034E12:
	0<32> = dwArg010C
	s0Out = <invalid>
	s1Out = dwLoc4C
	a3Out = s2
	s2Out = s2_113
	s5Out = s5_116
	return dwLoc08
l23034D0A:
	branch Mem47[0x4200DE84<32>:int32] == 0<32> l23034DC4
l23034DC4:
	word32 a5_500
	xTaskGetTickCount(out a5_500)
l23034D14:
	word32 a5_501
	xTaskGetTickCountFromISR(out a5_501)
l23034D18:
	a0_147 = 0x230833B4<32>
l23034D38:
	0<32> = dwArg010C
l23034D54_thunk_bl_printk:
	word32 a3_208
	word32 s1_212
	word32 s2_215
	word32 s5_218
	word32 s9_512
	word32 s11_514
	word32 s10_513
	word32 s6_509
	word32 s8_511
	word32 s7_510
	word32 s3_507
	word32 s4_508
	word32 a0_502
	word32 a1_503
	word32 a2_504
	word32 a4_505
	word32 a5_506
	word32 ra_211 = bl_printk(dwLoc08, a0_147, s2, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_212, out a0_502, out a1_503, out a2_504, out a3_208, out a4_505, out a5_506, out s2_215, out s3_507, out s4_508, out s5_218, out s6_509, out s7_510, out s8_511, out s9_512, out s10_513, out s11_514)
	s0Out = <invalid>
	s1Out = s1_212
	a3Out = a3_208
	s2Out = s2_215
	s5Out = s5_218
	return ra_211
Aes_Compare_Data_exit:


word32 _dump_iv_status(word32 ra, word32 s1, word32 a0, word32 a3, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg98, word32 dwArgAC, word32 dwArgBC, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_AES_Link_Case_CBC_128
//      Sec_Eng_AES_Link_Case_CTR_128
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00AC:[0..31] Stack +00BC:[0..31]
// LiveOut: ra s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
_dump_iv_status_entry:
l23034E30:
	word32 s2_15 = 0x23084000<32>
	ra_22 = ra
l23034E46:
	word32 ra_22
	word32 s1_34
	word32 a2_115
	word32 a1_114
	word32 a0_113
	word32 s10_125
	word32 s9_124
	word32 s8_123
	word32 s7_122
	word32 s6_121
	word32 s5_120
	word32 s4_119
	word32 s3_118
	word32 a5_117
	word32 a4_116
	word32 s11_126
	ra_22 = bl_printk(ra_22, s2_15 + 400<i32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_34, out a0_113, out a1_114, out a2_115, out a3, out a4_116, out a5_117, out s2_15, out s3_118, out s4_119, out s5_120, out s6_121, out s7_122, out s8_123, out s9_124, out s10_125, out s11_126)
	branch s1_34 != a0 + 28<i32> l23034E46
l23034E58:
	0<32> = dwArg38
l23034E6A_thunk_bl_printk:
	word32 s2_66
	word32 s3_67
	word32 s5_69
	word32 s1_127
	word32 a0_128
	word32 a1_129
	word32 a2_130
	word32 a3_131
	word32 a4_132
	word32 a5_133
	word32 s4_134
	word32 s6_135
	word32 s7_136
	word32 s8_137
	word32 s9_138
	word32 s10_139
	word32 s11_140
	word32 ra_62 = bl_printk(ra_22, 0x230727FC<32>, a3, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_127, out a0_128, out a1_129, out a2_130, out a3_131, out a4_132, out a5_133, out s2_66, out s3_67, out s4_134, out s5_69, out s6_135, out s7_136, out s8_137, out s9_138, out s10_139, out s11_140)
	s2Out = s2_66
	s3Out = s3_67
	s5Out = s5_69
	return ra_62
_dump_iv_status_exit:


void bl_sec_aes_IRQHandler(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_sec_aes_IRQHandler_entry:
l23034E6E:
	word32 s1_45
	word32 a0_46
	word32 a1_47
	word32 a2_48
	word32 a3_49
	word32 a4_50
	word32 a5_51
	word32 s2_52
	word32 s3_53
	word32 s4_54
	word32 s5_55
	word32 s6_56
	word32 s7_57
	word32 s8_58
	word32 s9_59
	word32 s10_60
	word32 s11_61
	bl_printk(ra, 0x23084298<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_45, out a0_46, out a1_47, out a2_48, out a3_49, out a4_50, out a5_51, out s2_52, out s3_53, out s4_54, out s5_55, out s6_56, out s7_57, out s8_58, out s9_59, out s10_60, out s11_61)
	Mem34[0x40004100<32>:word32] = Mem7[0x40004100<32>:int32] | 512<i32>
	return
bl_sec_aes_IRQHandler_exit:


word32 Sec_Eng_AES_Link_Case_CBC_128(word32 ra, word32 s2, word32 dwArg08, word32 dwArg2C, word32 dwArg8C, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sec_aes_test
// MayUse:  ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +002C:[0..31] Stack +008C:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
Sec_Eng_AES_Link_Case_CBC_128_entry:
l23034E94:
	word32 a3_724
	word32 t1_720
	word32 a1_722
	word32 a0_721
	word32 a4_725
	word32 a5_726
	word32 a2_723
	word32 ra_103 = memset(ra, fp + -92<i32>, 0<32>, 60<i32>, out t1_720, out a0_721, out a1_722, out a2_723, out a3_724, out a4_725, out a5_726)
	word32 a3_100 = Sec_Eng_AES_Enable_Link()
	word32 a4_730
	word32 s4_732
	word32 s8_733
	word32 a5_731
	word32 a2_729
	word32 a0_727
	word32 a1_728
	word32 s1_104 = puts(0x23084004<32>, out a0_727, out a1_728, out a2_729, out a4_730, out a5_731, out s4_732, out s8_733)
	branch CONVERT(Mem55[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23034F66
l23034F26:
	branch CONVERT(Mem55[0x4201FC62<32>:byte], byte, word32) >u 2<32> l23034F66
l23034F32:
	branch Mem55[0x4200DE84<32>:int32] == 0<32> l230350E4
l230350E4:
	word32 a5_738
	xTaskGetTickCount(out a5_738)
l23034F3E:
	word32 a5_739
	xTaskGetTickCountFromISR(out a5_739)
l23034F42:
	word32 s11_758
	word32 s3_750
	word32 s5_752
	word32 s7_754
	word32 s9_756
	word32 s10_757
	word32 s8_755
	word32 s6_753
	word32 s4_751
	word32 a0_744
	word32 a2_746
	word32 a5_748
	word32 s2_749
	word32 a4_747
	word32 a1_745
	ra_103 = bl_printk(ra_103, 0x23084020<32>, 0x23083FF4<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, 0x7060504<32>, ra, out s1_104, out a0_744, out a1_745, out a2_746, out a3_100, out a4_747, out a5_748, out s2_749, out s3_750, out s4_751, out s5_752, out s6_753, out s7_754, out s8_755, out s9_756, out s10_757, out s11_758)
l23034F66:
	word32 s5_137
	word32 s0_172
	word32 s2_734
	word32 s2_736
	word32 s5_737
	word32 s3_735
	word32 s1_173
	word32 a3_166
	word32 ra_171 = Aes_Compare_Data(_dump_iv_status(ra_103, s1_104, fp + -92<i32>, a3_100, dwLoc78, 0x3020100<32>, dwLoc58, s2, dwLoc20, dwLoc1C, dwArg08, 0x7060504<32>, dwArg2C, ra, out s2_734, out s3_735, out s5_137), 0x23084198<32>, Sec_Eng_AES_Link_Work(fp + -92<i32>, 0x23084258<32>, 32<i32>, fp + -124<i32>), 32<i32>, 0x23084000<32>, s5_137, dwLoc78, 0x16157E2B<32>, 0x8815F7AB<32>, dwLoc58, dwLoc14, dwLoc10, dwLoc0C, 0x7060504<32>, ra, dwArg8C, out s0_172, out s1_173, out a3_166, out s2_736, out s5_737)
	branch CONVERT(Mem55[s0_172 + -932<i32>:byte], byte, word32) >u 2<32> l23034FDE
l23034F9E:
	branch CONVERT(Mem55[0x4201FC62<32>:byte], byte, word32) >u 2<32> l23034FDE
l23034FAA:
	branch Mem55[0x4200DE84<32>:int32] == 0<32> l230350EA
l230350EA:
	word32 a5_742
	xTaskGetTickCount(out a5_742)
l23034FB6:
	word32 a5_743
	xTaskGetTickCountFromISR(out a5_743)
l23034FBA:
	word32 s10_772
	word32 s11_773
	word32 s9_771
	word32 s8_770
	word32 s7_769
	word32 s6_768
	word32 s4_766
	word32 s5_767
	word32 s2_764
	word32 s3_765
	word32 a4_762
	word32 a5_763
	word32 a1_760
	word32 a2_761
	word32 a0_759
	ra_171 = bl_printk(ra_171, 0x23084054<32>, 0x23083FF4<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, 0x7060504<32>, ra, out s1_173, out a0_759, out a1_760, out a2_761, out a3_166, out a4_762, out a5_763, out s2_764, out s3_765, out s4_766, out s5_767, out s6_768, out s7_769, out s8_770, out s9_771, out s10_772, out s11_773)
l23034FDE:
	word32 s2_250
	word32 s3_251
	word32 s5_253
	word32 s0_288
	word32 s2_740
	word32 s5_741
	word32 s1_289
	word32 a3_282
	word32 ra_287 = Aes_Compare_Data(_dump_iv_status(ra_171, s1_173, fp + -92<i32>, a3_166, dwLoc78, 0x3020100<32>, dwLoc58, s2, dwLoc20, dwLoc1C, dwArg08, 0x7060504<32>, dwArg2C, ra, out s2_250, out s3_251, out s5_253), s2_250 + 440<i32>, Sec_Eng_AES_Link_Work(fp + -92<i32>, s3_251 + 632<i32>, 0x10<32>, fp + -124<i32>), 0x10<32>, s2_250, s5_253, dwLoc78, 0x16157E2B<32>, 0x8815F7AB<32>, dwLoc58, dwLoc14, dwLoc10, dwLoc0C, 0x7060504<32>, ra, dwArg8C, out s0_288, out s1_289, out a3_282, out s2_740, out s5_741)
	branch CONVERT(Mem55[s0_288 + -932<i32>:byte], byte, word32) >u 2<32> l23035050
l23035012:
	branch CONVERT(Mem55[0x4201FC62<32>:byte], byte, word32) >u 2<32> l23035050
l2303501E:
	branch Mem55[0x4200DE84<32>:int32] == 0<32> l230350F0
l230350F0:
	word32 a5_777
	xTaskGetTickCount(out a5_777)
l23035028:
	word32 a5_778
	xTaskGetTickCountFromISR(out a5_778)
l2303502C:
	word32 s11_798
	word32 s9_796
	word32 s10_797
	word32 s7_794
	word32 s8_795
	word32 s5_792
	word32 s6_793
	word32 s3_790
	word32 s4_791
	word32 s2_789
	word32 a5_788
	word32 a2_786
	word32 a4_787
	word32 a0_784
	word32 a1_785
	ra_287 = bl_printk(ra_287, 0x23084088<32>, 0x23083FF4<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, 0x7060504<32>, ra, out s1_289, out a0_784, out a1_785, out a2_786, out a3_282, out a4_787, out a5_788, out s2_789, out s3_790, out s4_791, out s5_792, out s6_793, out s7_794, out s8_795, out s9_796, out s10_797, out s11_798)
l23035050:
	word32 s2_366
	word32 s5_369
	word32 s0_406
	word32 s5_776
	word32 s2_775
	word32 s3_774
	word32 s1_407
	word32 a3_400
	word32 ra_405 = Aes_Compare_Data(_dump_iv_status(ra_287, s1_289, fp + -92<i32>, a3_282, dwLoc78, 0x3020100<32>, dwLoc58, s2, dwLoc20, dwLoc1C, dwArg08, 0x7060504<32>, dwArg2C, ra, out s2_366, out s3_774, out s5_369), 0x230841C8<32>, Sec_Eng_AES_Link_Work(fp + -92<i32>, 0x23084288<32>, 0x10<32>, fp + -124<i32>), 0x10<32>, s2_366, s5_369, dwLoc78, 0x16157E2B<32>, 0x8815F7AB<32>, dwLoc58, dwLoc14, dwLoc10, dwLoc0C, 0x7060504<32>, ra, dwArg8C, out s0_406, out s1_407, out a3_400, out s2_775, out s5_776)
	branch CONVERT(Mem55[s0_406 + -932<i32>:byte], byte, word32) >u 2<32> l230350CA
l2303508C:
	branch CONVERT(Mem55[0x4201FC62<32>:byte], byte, word32) >u 2<32> l230350CA
l23035098:
	branch Mem55[0x4200DE84<32>:int32] == 0<32> l230350F6
l230350F6:
	word32 a5_782
	xTaskGetTickCount(out a5_782)
l230350A2:
	word32 a5_783
	xTaskGetTickCountFromISR(out a5_783)
l230350A6:
	word32 s11_813
	word32 s10_812
	word32 s9_811
	word32 s8_810
	word32 s6_808
	word32 s7_809
	word32 s5_807
	word32 s4_806
	word32 s3_805
	word32 s2_804
	word32 a4_802
	word32 a5_803
	word32 a1_800
	word32 a2_801
	word32 a0_799
	ra_405 = bl_printk(ra_405, 0x23084054<32>, 0x23083FF4<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, 0x7060504<32>, ra, out s1_407, out a0_799, out a1_800, out a2_801, out a3_400, out a4_802, out a5_803, out s2_804, out s3_805, out s4_806, out s5_807, out s6_808, out s7_809, out s8_810, out s9_811, out s10_812, out s11_813)
l230350CA:
	word32 s3_780
	word32 s5_781
	word32 s2_779
	word32 ra_480 = _dump_iv_status(ra_405, s1_407, fp + -92<i32>, a3_400, dwLoc78, 0x3020100<32>, dwLoc58, s2, dwLoc20, dwLoc1C, dwArg08, 0x7060504<32>, dwArg2C, ra, out s2_779, out s3_780, out s5_781)
	Sec_Eng_AES_Disable_Link()
	a3Out = dwArgF8
	return ra_480
Sec_Eng_AES_Link_Case_CBC_128_exit:


word32 Sec_Eng_AES_Link_Case_CTR_128(word32 ra, word32 s2, word32 dwArg08, word32 dwArg2C, word32 dwArg8C, ptr32 & s0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sec_aes_test
// MayUse:  ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +002C:[0..31] Stack +008C:[0..31]
// LiveOut: a3 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
Sec_Eng_AES_Link_Case_CTR_128_entry:
l230350FC:
	word32 a2_724
	word32 a0_722
	word32 a5_727
	word32 t1_721
	word32 a3_725
	word32 a4_726
	word32 a1_723
	word32 ra_103 = memset(ra, fp + -92<i32>, 0<32>, 60<i32>, out t1_721, out a0_722, out a1_723, out a2_724, out a3_725, out a4_726, out a5_727)
	word32 a3_100 = Sec_Eng_AES_Enable_Link()
	word32 s8_734
	word32 a2_730
	word32 a5_732
	word32 s4_733
	word32 a4_731
	word32 a1_729
	word32 a0_728
	word32 s1_104 = puts(0x230840BC<32>, out a0_728, out a1_729, out a2_730, out a4_731, out a5_732, out s4_733, out s8_734)
	branch CONVERT(Mem55[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l230351CC
l2303518C:
	branch CONVERT(Mem55[0x4201FC62<32>:byte], byte, word32) >u 2<32> l230351CC
l23035198:
	branch Mem55[0x4200DE84<32>:int32] == 0<32> l2303534A
l2303534A:
	word32 a5_739
	xTaskGetTickCount(out a5_739)
l230351A4:
	word32 a5_740
	xTaskGetTickCountFromISR(out a5_740)
l230351A8:
	word32 s10_758
	word32 s11_759
	word32 s2_750
	word32 s4_752
	word32 s6_754
	word32 s8_756
	word32 s9_757
	word32 s7_755
	word32 s5_753
	word32 s3_751
	word32 a1_746
	word32 a4_748
	word32 a5_749
	word32 a2_747
	word32 a0_745
	ra_103 = bl_printk(ra_103, 0x230840D8<32>, 0x23083FF4<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, 0xF7F6F5F4<32>, ra, out s1_104, out a0_745, out a1_746, out a2_747, out a3_100, out a4_748, out a5_749, out s2_750, out s3_751, out s4_752, out s5_753, out s6_754, out s7_755, out s8_756, out s9_757, out s10_758, out s11_759)
l230351CC:
	word32 s5_137
	word32 s0_172
	word32 s3_736
	word32 s5_738
	word32 s2_737
	word32 s2_735
	word32 s1_173
	word32 a3_166
	word32 ra_171 = Aes_Compare_Data(_dump_iv_status(ra_103, s1_104, fp + -92<i32>, a3_100, dwLoc78, 0xF3F2F1F0<32>, dwLoc58, s2, dwLoc20, dwLoc1C, dwArg08, 0xF7F6F5F4<32>, dwArg2C, ra, out s2_735, out s3_736, out s5_137), 0x230841D8<32>, Sec_Eng_AES_Link_Work(fp + -92<i32>, 0x23084258<32>, 32<i32>, fp + -124<i32>), 32<i32>, 0x23084000<32>, s5_137, dwLoc78, 0x16157E2B<32>, 0x8815F7AB<32>, dwLoc58, dwLoc14, dwLoc10, dwLoc0C, 0xF7F6F5F4<32>, ra, dwArg8C, out s0_172, out s1_173, out a3_166, out s2_737, out s5_738)
	branch CONVERT(Mem55[s0_172 + -932<i32>:byte], byte, word32) >u 2<32> l23035244
l23035204:
	branch CONVERT(Mem55[0x4201FC62<32>:byte], byte, word32) >u 2<32> l23035244
l23035210:
	branch Mem55[0x4200DE84<32>:int32] == 0<32> l23035350
l23035350:
	word32 a5_743
	xTaskGetTickCount(out a5_743)
l2303521C:
	word32 a5_744
	xTaskGetTickCountFromISR(out a5_744)
l23035220:
	word32 s11_774
	word32 s9_772
	word32 s10_773
	word32 s8_771
	word32 s7_770
	word32 s6_769
	word32 s5_768
	word32 s3_766
	word32 s4_767
	word32 a5_764
	word32 s2_765
	word32 a2_762
	word32 a4_763
	word32 a0_760
	word32 a1_761
	ra_171 = bl_printk(ra_171, 0x2308410C<32>, 0x23083FF4<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, 0xF7F6F5F4<32>, ra, out s1_173, out a0_760, out a1_761, out a2_762, out a3_166, out a4_763, out a5_764, out s2_765, out s3_766, out s4_767, out s5_768, out s6_769, out s7_770, out s8_771, out s9_772, out s10_773, out s11_774)
l23035244:
	word32 s2_250
	word32 s3_251
	word32 s5_253
	word32 s0_288
	word32 s5_742
	word32 s2_741
	word32 s1_289
	word32 a3_282
	word32 ra_287 = Aes_Compare_Data(_dump_iv_status(ra_171, s1_173, fp + -92<i32>, a3_166, dwLoc78, 0xF3F2F1F0<32>, dwLoc58, s2, dwLoc20, dwLoc1C, dwArg08, 0xF7F6F5F4<32>, dwArg2C, ra, out s2_250, out s3_251, out s5_253), s2_250 + 504<i32>, Sec_Eng_AES_Link_Work(fp + -92<i32>, s3_251 + 632<i32>, 0x10<32>, fp + -124<i32>), 0x10<32>, s2_250, s5_253, dwLoc78, 0x16157E2B<32>, 0x8815F7AB<32>, dwLoc58, dwLoc14, dwLoc10, dwLoc0C, 0xF7F6F5F4<32>, ra, dwArg8C, out s0_288, out s1_289, out a3_282, out s2_741, out s5_742)
	branch CONVERT(Mem55[s0_288 + -932<i32>:byte], byte, word32) >u 2<32> l230352B6
l23035278:
	branch CONVERT(Mem55[0x4201FC62<32>:byte], byte, word32) >u 2<32> l230352B6
l23035284:
	branch Mem55[0x4200DE84<32>:int32] == 0<32> l23035356
l23035356:
	word32 a5_778
	xTaskGetTickCount(out a5_778)
l2303528E:
	word32 a5_779
	xTaskGetTickCountFromISR(out a5_779)
l23035292:
	word32 s10_798
	word32 s11_799
	word32 s8_796
	word32 s9_797
	word32 s6_794
	word32 s7_795
	word32 s4_792
	word32 s5_793
	word32 s2_790
	word32 s3_791
	word32 a5_789
	word32 a4_788
	word32 a1_786
	word32 a2_787
	word32 a0_785
	ra_287 = bl_printk(ra_287, 0x2308410C<32>, 0x23083FF4<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, 0xF7F6F5F4<32>, ra, out s1_289, out a0_785, out a1_786, out a2_787, out a3_282, out a4_788, out a5_789, out s2_790, out s3_791, out s4_792, out s5_793, out s6_794, out s7_795, out s8_796, out s9_797, out s10_798, out s11_799)
l230352B6:
	word32 s2_366
	word32 s5_369
	word32 s5_777
	word32 s2_776
	word32 s3_775
	word32 s1_407
	word32 a3_400
	word32 s0_406
	word32 ra_405 = Aes_Compare_Data(_dump_iv_status(ra_287, s1_289, fp + -92<i32>, a3_282, dwLoc78, 0xF3F2F1F0<32>, dwLoc58, s2, dwLoc20, dwLoc1C, dwArg08, 0xF7F6F5F4<32>, dwArg2C, ra, out s2_366, out s3_775, out s5_369), 0x23084208<32>, Sec_Eng_AES_Link_Work(fp + -92<i32>, 0x23084288<32>, 0x10<32>, fp + -124<i32>), 0x10<32>, s2_366, s5_369, dwLoc78, 0x16157E2B<32>, 0x8815F7AB<32>, dwLoc58, dwLoc14, dwLoc10, dwLoc0C, 0xF7F6F5F4<32>, ra, dwArg8C, out s0_406, out s1_407, out a3_400, out s2_776, out s5_777)
	branch CONVERT(Mem55[s0_406 + -932<i32>:byte], byte, word32) >u 2<32> l23035330
l230352F2:
	branch CONVERT(Mem55[0x4201FC62<32>:byte], byte, word32) >u 2<32> l23035330
l230352FE:
	branch Mem55[0x4200DE84<32>:int32] == 0<32> l2303535C
l2303535C:
	word32 a5_783
	xTaskGetTickCount(out a5_783)
l23035308:
	word32 a5_784
	xTaskGetTickCountFromISR(out a5_784)
l2303530C:
	s0_406 = dwArg0174
	word32 s11_814
	word32 s10_813
	word32 s9_812
	word32 s8_811
	word32 s7_810
	word32 s5_808
	word32 s6_809
	word32 s4_807
	word32 s3_806
	word32 s2_805
	word32 a5_804
	word32 a2_802
	word32 a4_803
	word32 a0_800
	word32 a1_801
	ra_405 = bl_printk(ra_405, 0x23084140<32>, 0x23083FF4<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, 0xF7F6F5F4<32>, ra, out s1_407, out a0_800, out a1_801, out a2_802, out a3_400, out a4_803, out a5_804, out s2_805, out s3_806, out s4_807, out s5_808, out s6_809, out s7_810, out s8_811, out s9_812, out s10_813, out s11_814)
l23035330:
	word32 s5_782
	word32 s2_780
	word32 s3_781
	word32 ra_480 = _dump_iv_status(ra_405, s1_407, fp + -92<i32>, a3_400, dwLoc78, 0xF3F2F1F0<32>, dwLoc58, s2, dwLoc20, dwLoc1C, dwArg08, 0xF7F6F5F4<32>, dwArg2C, ra, out s2_780, out s3_781, out s5_782)
	Sec_Eng_AES_Disable_Link()
	s0Out = s0_406
	a3Out = dwArgF8
	return ra_480
Sec_Eng_AES_Link_Case_CTR_128_exit:


word32 Sec_Eng_AES_Link_Case_ECB_128(word32 ra, word32 s5, word32 dwArg00, word32 dwArg04, word32 dwArg4C, word32 dwArg9C, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sec_aes_test
// MayUse:  ra:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +004C:[0..31] Stack +009C:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
Sec_Eng_AES_Link_Case_ECB_128_entry:
l23035362:
	word32 t1_229
	word32 a0_230
	word32 a1_231
	word32 a2_232
	word32 a3_233
	word32 a4_234
	word32 a5_235
	word32 ra_23 = memset(ra, fp + -76<i32>, 0<32>, 60<i32>, out t1_229, out a0_230, out a1_231, out a2_232, out a3_233, out a4_234, out a5_235)
	word32 a0_236
	word32 a1_237
	word32 a2_238
	word32 a4_239
	word32 a5_240
	word32 s4_241
	word32 s8_242
	puts(0x23084174<32>, out a0_236, out a1_237, out a2_238, out a4_239, out a5_240, out s4_241, out s8_242)
	Sec_Eng_AES_Enable_Link()
	word32 s1_99
	word32 s2_102
	word32 s5_105
	word32 s1_139
	word32 s2_142
	word32 s5_145
	word32 s0_243
	word32 a3_244
	word32 s0_245
	word32 a3_246
	word32 s0_247
	word32 s1_248
	word32 a3_249
	word32 s2_250
	word32 s5_251
	Aes_Compare_Data(Aes_Compare_Data(Aes_Compare_Data(ra_23, 0x23084218<32>, Sec_Eng_AES_Link_Work(fp + -76<i32>, 0x23084258<32>, 32<i32>, fp + -108<i32>), 32<i32>, 0x23084258<32>, s5, dwLoc68, 0x16157E2B<32>, 0x8815F7AB<32>, dwLoc48, dwLoc04, dwArg00, dwArg04, 0xF7F6F5F4<32>, dwArg4C, dwArg9C, out s0_243, out s1_99, out a3_244, out s2_102, out s5_105), s1_99 + 32<i32>, Sec_Eng_AES_Link_Work(fp + -76<i32>, s2_102 + 32<i32>, 0x10<32>, fp + -108<i32>), 0x10<32>, s2_102, s5_105, dwLoc68, 0x16157E2B<32>, 0x8815F7AB<32>, dwLoc48, dwLoc04, dwArg00, dwArg04, 0xF7F6F5F4<32>, dwArg4C, dwArg9C, out s0_245, out s1_139, out a3_246, out s2_142, out s5_145), s1_139 + 48<i32>, Sec_Eng_AES_Link_Work(fp + -76<i32>, s2_142 + 48<i32>, 0x10<32>, fp + -108<i32>), 0x10<32>, s2_142, s5_145, dwLoc68, 0x16157E2B<32>, 0x8815F7AB<32>, dwLoc48, dwLoc04, dwArg00, dwArg04, 0xF7F6F5F4<32>, dwArg4C, dwArg9C, out s0_247, out s1_248, out a3_249, out s2_250, out s5_251)
	Sec_Eng_AES_Disable_Link()
	a3Out = dwArgC0
	return dwArgE8
Sec_Eng_AES_Link_Case_ECB_128_exit:


void bl_sec_aes_test(word32 ra, word32 s0, word32 s1, word32 s2, word32 dwArg18, word32 dwArg1C, word32 dwArg30, word32 dwArg34, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_aes
// MayUse:  ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
bl_sec_aes_test_entry:
l2303545C:
	word32 a3_16
	word32 s1_239
	word32 s2_240
	word32 s3_241
	word32 s4_242
	word32 s6_243
	word32 ra_21 = bl_irq_register(ra, s1, 0x1D<32>, 0x23034E6E<32>, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s1_239, out a3_16, out s2_240, out s3_241, out s4_242, out s6_243)
	bl_irq_enable(0x1D<32>)
	word32 s2_54
	word32 a3_68
	word32 s2_105
	word32 a3_119
	word32 s0_125
	word32 s5_158
	word32 a3_169
	word32 s1_244
	word32 a0_245
	word32 a1_246
	word32 a2_247
	word32 a3_248
	word32 a4_249
	word32 a5_250
	word32 s3_251
	word32 s4_252
	word32 s5_253
	word32 s6_254
	word32 s7_255
	word32 s8_256
	word32 s9_257
	word32 s10_258
	word32 s11_259
	word32 s1_260
	word32 a0_261
	word32 a1_262
	word32 a2_263
	word32 a3_264
	word32 a4_265
	word32 a5_266
	word32 s3_267
	word32 s4_268
	word32 s5_269
	word32 s6_270
	word32 s7_271
	word32 s8_272
	word32 s9_273
	word32 s10_274
	word32 s11_275
	word32 s1_276
	word32 a0_277
	word32 a1_278
	word32 a2_279
	word32 a3_280
	word32 a4_281
	word32 a5_282
	word32 s2_283
	word32 s3_284
	word32 s4_285
	word32 s6_286
	word32 s7_287
	word32 s8_288
	word32 s9_289
	word32 s10_290
	word32 s11_291
	word32 s1_292
	word32 a0_293
	word32 a1_294
	word32 a2_295
	word32 a3_296
	word32 a4_297
	word32 a5_298
	word32 s2_299
	word32 s3_300
	word32 s4_301
	word32 s5_302
	word32 s6_303
	word32 s7_304
	word32 s8_305
	word32 s9_306
	word32 s10_307
	word32 s11_308
	bl_printk(Sec_Eng_AES_Link_Case_ECB_128(bl_printk(Sec_Eng_AES_Link_Case_CTR_128(bl_printk(Sec_Eng_AES_Link_Case_CBC_128(bl_printk(ra_21, 0x230842AC<32>, a3_16, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_244, out a0_245, out a1_246, out a2_247, out a3_248, out a4_249, out a5_250, out s2_54, out s3_251, out s4_252, out s5_253, out s6_254, out s7_255, out s8_256, out s9_257, out s10_258, out s11_259), s2_54, dwLoc08, dwArg1C, dwArg7C, out a3_68), 0x23084304<32>, a3_68, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_260, out a0_261, out a1_262, out a2_263, out a3_264, out a4_265, out a5_266, out s2_105, out s3_267, out s4_268, out s5_269, out s6_270, out s7_271, out s8_272, out s9_273, out s10_274, out s11_275), s2_105, dwLoc08, dwArg1C, dwArg7C, out s0_125, out a3_119), s0_125 + 772<i32>, a3_119, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_276, out a0_277, out a1_278, out a2_279, out a3_280, out a4_281, out a5_282, out s2_283, out s3_284, out s4_285, out s5_158, out s6_286, out s7_287, out s8_288, out s9_289, out s10_290, out s11_291), s5_158, dwLoc10, s0, dwArg3C, dwArg8C, out a3_169), 0x2307E7BC<32>, a3_169, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_292, out a0_293, out a1_294, out a2_295, out a3_296, out a4_297, out a5_298, out s2_299, out s3_300, out s4_301, out s5_302, out s6_303, out s7_304, out s8_305, out s9_306, out s10_307, out s11_308)
	return
bl_sec_aes_test_exit:


void bl_sec_sha_IRQHandler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s1 s4 s8 t3 tp
// Preserved: sp
bl_sec_sha_IRQHandler_entry:
l230354BE:
	word32 a5_10
	word32 a0_25
	word32 a1_26
	word32 a2_27
	word32 a4_28
	word32 s4_29
	word32 s8_30
	puts(0x23084370<32>, out a0_25, out a1_26, out a2_27, out a4_28, out a5_10, out s4_29, out s8_30)
	Mem20[a5_10 | 512<i32>:word32] = Mem7[a5_10:word32]
	return
bl_sec_sha_IRQHandler_exit:


word32 bl_sha_mutex_take(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg94, word32 dwArgAC, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_F_fast.constprop.0
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00AC:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: ra s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_sha_mutex_take_entry:
l230354E0:
	word32 a0_14
	word32 a1_143
	word32 a2_144
	word32 a3_145
	word32 a4_146
	word32 a5_147
	word32 s1_114
	word32 s2_119
	word32 s3_120
	word32 s4_121
	xQueueSemaphoreTake(Mem0[0x4200DEB4<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, 0x4200E000<32>, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_114, out a0_14, out a1_143, out a2_144, out a3_145, out a4_146, out a5_147, out s2_119, out s3_120, out s4_121)
	branch a0_14 == 1<32> l23035548
l230354FA:
	branch CONVERT(Mem9[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l23035548
l2303550A:
	branch CONVERT(Mem9[0x4201FC63<32>:byte], byte, word32) >u 4<32> l23035548
l23035516:
	branch Mem9[0x4200DE84<32>:int32] == 0<32> l23035550
l23035550:
	word32 a5_148
	xTaskGetTickCount(out a5_148)
l23035520:
	word32 a5_149
	xTaskGetTickCountFromISR(out a5_149)
l23035524:
	word32 a0_150
	word32 a1_151
	word32 a2_152
	word32 a3_153
	word32 a4_154
	word32 a5_155
	word32 s6_156
	word32 s7_157
	word32 s8_158
	word32 s9_159
	word32 s10_160
	word32 s11_161
	ra = bl_printk(ra, 0x23084418<32>, 0x23084408<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_114, out a0_150, out a1_151, out a2_152, out a3_153, out a4_154, out a5_155, out s2_119, out s3_120, out s4_121, out s5, out s6_156, out s7_157, out s8_158, out s9_159, out s10_160, out s11_161)
l23035548:
	s1Out = s1_114
	s2Out = s2_119
	s3Out = s3_120
	s4Out = s4_121
	s5Out = s5
	return ra
bl_sha_mutex_take_exit:


word32 bl_sha_mutex_give(word32 ra, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg94, word32 dwArgAC, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_F_fast.constprop.0
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00AC:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: ra s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_sha_mutex_give_entry:
l23035556:
	word32 a0_14
	word32 a5_156
	word32 s5_159
	word32 s4_158
	word32 a7_157
	word32 a3_154
	word32 a4_155
	word32 a1_152
	word32 a2_153
	word32 s0_151
	word32 s6_160
	word32 s8_161
	word32 s1_122
	word32 s2_127
	word32 s3_128
	xQueueGenericSend(Mem0[0x4200DEB4<32>:int32], 0<32>, 0<32>, a4, 0x4200E000<32>, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s0_151, out s1_122, out a0_14, out a1_152, out a2_153, out a3_154, out a4_155, out a5_156, out a7_157, out s2_127, out s3_128, out s4_158, out s5_159, out s6_160, out s8_161)
	branch a0_14 == 1<32> l230355C2
l23035574:
	branch CONVERT(Mem11[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l230355C2
l23035584:
	branch CONVERT(Mem11[0x4201FC63<32>:byte], byte, word32) >u 4<32> l230355C2
l23035590:
	branch Mem11[0x4200DE84<32>:int32] == 0<32> l230355CA
l230355CA:
	word32 a5_162
	xTaskGetTickCount(out a5_162)
l2303559A:
	word32 a5_163
	xTaskGetTickCountFromISR(out a5_163)
l2303559E:
	word32 a0_164
	word32 a1_165
	word32 a2_166
	word32 a3_167
	word32 a4_168
	word32 a5_169
	word32 s4_170
	word32 s5_171
	word32 s6_172
	word32 s7_173
	word32 s8_174
	word32 s9_175
	word32 s10_176
	word32 s11_177
	ra = bl_printk(ra, 0x230843DC<32>, 0x23084408<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_122, out a0_164, out a1_165, out a2_166, out a3_167, out a4_168, out a5_169, out s2_127, out s3_128, out s4_170, out s5_171, out s6_172, out s7_173, out s8_174, out s9_175, out s10_176, out s11_177)
l230355C2:
	s1Out = s1_122
	s2Out = s2_127
	s3Out = s3_128
	return ra
bl_sha_mutex_give_exit:


void bl_sha_init(word32 ra, word32 a0, word32 a1, word32 a5, word32 dwArg94)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_hmac_sha1_fast
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31] Stack +0094:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s8 t0 t1 t3
// Preserved: sp
bl_sha_init_entry:
l230355D0:
	word32 a5_18 = Sec_Eng_SHA256_Init(ra, a0, a1, a5, ra, dwArg94)
l230355EA_thunk_Sec_Eng_SHA_Start:
	Sec_Eng_SHA_Start(a5_18)
	return
bl_sha_init_exit:


word32 bl_sha_update(word32 a0, word32 a1, word32 a2, word32 s5, word32 dwArg98, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_hmac_sha1_fast
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] s5:[0..31] Stack +0098:[0..31]
// LiveOut: a1 a2 a4 s0 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
bl_sha_update_entry:
l230355EE:
	word32 a1_14
	word32 a4_17
	word32 s0_21
	word32 s2_23
	word32 s3_24
	word32 s4_25
	word32 s5_26
	word32 s1_43
	word32 a0_44
	word32 s6_45
	Sec_Eng_SHA256_Update(a0, a1, a2, s5, dwArg98, out s0_21, out s1_43, out a0_44, out a1_14, out a4_17, out s2_23, out s3_24, out s4_25, out s5_26, out s6_45)
	a1Out = a1_14
	a2Out = dwArg10
	a4Out = a4_17
	s2Out = s2_23
	s3Out = s3_24
	s4Out = s4_25
	s5Out = s5_26
	return s0_21
bl_sha_update_exit:


word32 bl_sha_finish(word32 a1, word32 a4, word32 s5, word32 dwArg78, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_hmac_sha1_fast
// MayUse:  a1:[0..31] a4:[0..31] s5:[0..31] Stack +0078:[0..31]
// LiveOut: ra s0 s1 s2 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
bl_sha_finish_entry:
l23035602:
	word32 s0_19
	word32 s1_20
	word32 s2_21
	word32 s4_23
	word32 s5_24
	word32 s6_25
	word32 ra_18 = Sec_Eng_SHA256_Finish(a1, a4, s5, dwArg78, out s0_19, out s1_20, out s2_21, out s4_23, out s5_24, out s6_25)
	s0Out = s0_19
	s1Out = s1_20
	s2Out = s2_21
	s4Out = s4_23
	s5Out = s5_24
	s6Out = s6_25
	return ra_18
bl_sha_finish_exit:


void sha256_test_case0(word32 ra, word32 s1, word32 s2, word32 dwArg18, word32 dwArg48)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sec_sha_test
// MayUse:  ra:[0..31] s1:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +0048:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t6 tp
// Preserved: sp
sha256_test_case0_entry:
l23035614:
	word32 s3_52
	word32 a3_311
	word32 a2_310
	word32 a5_313
	word32 s2_316
	word32 a3_315
	word32 s1_314
	word32 a1_309
	word32 s4_317
	word32 s6_318
	word32 a4_312
	word32 t1_307
	word32 a0_308
	word32 ra_46 = bl_irq_register(memset(ra, fp + -220<i32>, 0<32>, 188<i32>, out t1_307, out a0_308, out a1_309, out a2_310, out a3_311, out a4_312, out a5_313), s1, 0x1E<32>, 0x230354BE<32>, s2, dwLocD8, dwLocB8, dwLocA0, dwLoc9C, dwLoc90, dwLoc8C, dwLoc70, dwLoc6C, dwLoc68, 0x50020000<32>, dwLoc48, dwLoc44, dwLoc24, out s1_314, out a3_315, out s2_316, out s3_52, out s4_317, out s6_318)
	Sec_Eng_SHA_Enable_Link(bl_irq_enable(0x1E<32>))
	word32 a4_96
	word32 s2_322
	word32 s3_323
	word32 s0_319
	word32 s1_320
	word32 a1_321
	Sec_Eng_SHA256_Link_Update(fp + -220<i32>, 0<32>, 0x230844BC<32>, 64<i32>, Sec_Eng_SHA256_Link_Init(ra_46, fp + -220<i32>, fp + -200<i32>, dwLoc5C, dwLoc3C), s3_52, dwArg48, out s0_319, out s1_320, out a1_321, out a4_96, out s2_322, out s3_323)
	word32 a5_114
	word32 ra_116 = Sec_Eng_SHA256_Link_Finish(fp + -220<i32>, 0<32>, fp + -192<i32>, a4_96, dwArg18, dwArg48, out a5_114)
	Sec_Eng_SHA_Disable_Link(a5_114)
	word32 s0_128 = fp + -220<i32>
	word32 a5_129 = 0<32>
	word32 s1_130 = 0<32>
	word32 s2_131 = 0x2308449C<32>
	word32 s5_133 = 0x23084000<32>
	word32 s3_134 = 32<i32>
l230356A4:
	word32 a3_139 = CONVERT(Mem37[s2_131 + s1_130:byte], byte, word32)
	branch a3_139 == CONVERT(Mem37[s0_128 + 28<i32>:byte], byte, word32) l230356C4
l230356B4:
	word32 s10_334
	word32 s11_335
	word32 s7_331
	word32 s8_332
	word32 s9_333
	word32 a5_328
	word32 s4_329
	word32 s6_330
	word32 a1_325
	word32 a2_326
	word32 a4_327
	word32 a0_324
	ra_116 = bl_printk(ra_116, s5_133 + 1092<i32>, a3_139, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, dwLoc48, dwLoc24, out s1_130, out a0_324, out a1_325, out a2_326, out a3_139, out a4_327, out a5_328, out s2_131, out s3_134, out s4_329, out s5_133, out s6_330, out s7_331, out s8_332, out s9_333, out s10_334, out s11_335)
	a5_129 = 1<32>
l230356C4:
	s1_130 = s1_130 + 1<32>
	s0_128 = s0_128 + 1<32>
	branch s1_130 != s3_134 l230356A4
l230356CC:
	word32 a0_182
	branch a5_129 == 0<32> l230356F0
l230356F0:
	a0_182 = 0x2308447C<32>
l230356D2:
	a0_182 = 0x2308445C<32>
l230356DA:
	word32 s3_344
	word32 s4_345
	word32 a5_342
	word32 s2_343
	word32 a3_340
	word32 a4_341
	word32 a1_338
	word32 a2_339
	word32 s1_336
	word32 a0_337
	word32 s5_346
	word32 s6_347
	word32 s7_348
	word32 s8_349
	word32 s9_350
	word32 s10_351
	word32 s11_352
	bl_printk(ra_116, a0_182, a3_139, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, dwLoc48, dwLoc24, out s1_336, out a0_337, out a1_338, out a2_339, out a3_340, out a4_341, out a5_342, out s2_343, out s3_344, out s4_345, out s5_346, out s6_347, out s7_348, out s8_349, out s9_350, out s10_351, out s11_352)
	return
sha256_test_case0_exit:


void bl_sec_sha_test(word32 ra, word32 s2, word32 dwArg08, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_sha
// MayUse:  ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t6 tp
// Preserved: sp
bl_sec_sha_test_entry:
l230356FA:
	word32 a0_78
	word32 a1_79
	word32 a2_80
	word32 a4_81
	word32 a5_82
	word32 s4_83
	word32 s8_84
	puts(0x230842AC<32>, out a0_78, out a1_79, out a2_80, out a4_81, out a5_82, out s4_83, out s8_84)
	word32 a0_85
	word32 a1_86
	word32 a2_87
	word32 a4_88
	word32 a5_89
	word32 s4_90
	word32 s8_91
	sha256_test_case0(ra, puts(0x23084384<32>, out a0_85, out a1_86, out a2_87, out a4_88, out a5_89, out s4_90, out s8_91), s2, dwArg08, dwArg38)
	word32 a0_92
	word32 a1_93
	word32 a2_94
	word32 a4_95
	word32 a5_96
	word32 s4_97
	word32 s8_98
	puts(0x2307E7BC<32>, out a0_92, out a1_93, out a2_94, out a4_95, out a5_96, out s4_97, out s8_98)
	return
bl_sec_sha_test_exit:


void bl_wifi_clock_enable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl606a0_wifi_init
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
bl_wifi_clock_enable_entry:
l2303572E:
	word32 a5_6 = Mem0[a4:word32]
	branch a4 != 0<32> l2303573E
l2303573A:
	Mem8[1<32>:word32] = a5_6
l2303573E:
	return
bl_wifi_clock_enable_exit:


word32 bl_wifi_enable_irq(word32 ra, word32 s1, word32 s2, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgAC, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_main_rtthread_start
// MayUse:  ra:[0..31] s1:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a4 a5 ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_wifi_enable_irq_entry:
l23035742:
	word32 s1_21
	word32 s2_24
	word32 a3_41
	word32 s3_52
	word32 a3_102
	word32 s3_103
	word32 s4_104
	word32 s6_105
	word32 s1_106
	word32 s2_107
	word32 s4_108
	word32 s6_109
	word32 ra_46 = bl_irq_register(bl_irq_register(ra, s1, 70<i32>, 0x23018F54<32>, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s1_21, out a3_102, out s2_24, out s3_103, out s4_104, out s6_105), s1_21, 79<i32>, 0x23018FA4<32>, s2_24, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s1_106, out a3_41, out s2_107, out s3_52, out s4_108, out s6_109)
	bl_irq_enable(70<i32>)
	bl_irq_enable(79<i32>)
	word32 a5_72
	word32 a4_75
	word32 a0_110
	word32 a1_111
	word32 a2_112
	word32 s4_113
	word32 s8_114
	puts(0x23084510<32>, out a0_110, out a1_111, out a2_112, out a4_75, out a5_72, out s4_113, out s8_114)
	a3Out = a3_41
	a4Out = a4_75
	a5Out = a5_72
	s3Out = s3_52
	return ra_46
bl_wifi_enable_irq_exit:


void bl_wifi_sta_mac_addr_set(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_wifi_sta_mac_addr_set_entry:
l2303578A:
	word32 a1_29
	word32 a2_30
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 a6_34
	word32 a7_35
	memcpy(0x4201FC64<32>, a0, 6<32>, out a1_29, out a2_30, out a3_31, out a4_32, out a5_33, out a6_34, out a7_35)
	return
bl_wifi_sta_mac_addr_set_exit:


void bl_wifi_ap_mac_addr_set(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_wifi_ap_mac_addr_set_entry:
l230357A6:
	word32 a1_29
	word32 a2_30
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 a6_34
	word32 a7_35
	memcpy(0x4201FC70<32>, a0, 6<32>, out a1_29, out a2_30, out a3_31, out a4_32, out a5_33, out a6_34, out a7_35)
	return
bl_wifi_ap_mac_addr_set_exit:


void bl_wifi_mac_addr_get(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_ap_start
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
//      bl606a0_wifi_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_wifi_mac_addr_get_entry:
l230357C2:
	word32 a1_28
	word32 a2_29
	word32 a3_30
	word32 a4_31
	word32 a5_32
	word32 a6_33
	word32 a7_34
	memcpy(a0, 0x4201FC64<32>, 6<32>, out a1_28, out a2_29, out a3_30, out a4_31, out a5_32, out a6_33, out a7_34)
	return
bl_wifi_mac_addr_get_exit:


word32 bl_wifi_country_code_set(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..7]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
bl_wifi_country_code_set_entry:
l230357DC:
	Mem5[0x42020C7C<32>:byte] = SLICE(a0, byte, 0)
	return 0x42020000<32>
bl_wifi_country_code_set_exit:


word32 bl_wifi_ap_info_set(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg0128, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_wifi_ap_info_set_entry:
l230357E8:
	word32 t1_99
	word32 a0_100
	word32 a1_101
	word32 a2_102
	word32 a3_103
	word32 a4_104
	word32 a5_105
	word32 ra_34 = memset(ra, 0x4201FC7D<32>, 0<32>, 99<i32>, out t1_99, out a0_100, out a1_101, out a2_102, out a3_103, out a4_104, out a5_105)
	word32 a3_45
	word32 a1_106
	word32 a2_107
	word32 a4_108
	word32 a5_109
	word32 a6_110
	word32 a7_111
	memcpy(0x4201FC7D<32>, a0, a1, out a1_106, out a2_107, out a3_45, out a4_108, out a5_109, out a6_110, out a7_111)
	word32 a4_58
	word32 a1_112
	word32 a2_113
	word32 a3_114
	word32 a5_115
	word32 a6_116
	word32 a7_117
	memcpy(0x4201FC9E<32>, a2, a3_45, out a1_112, out a2_113, out a3_114, out a4_58, out a5_115, out a6_116, out a7_117)
	Mem74[0x4201FCDF<32>:byte] = SLICE(a4_58, byte, 0)
	Mem76[0x4201FCE0<32>:byte] = 1<8>
	0<32> = dwArg0128
	s1Out = a2
	s2Out = a0
	return ra_34
bl_wifi_ap_info_set_exit:


word32 bl_wifi_sta_info_set(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg0128, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_wifi_sta_info_set_entry:
l23035852:
	word32 t1_96
	word32 a0_97
	word32 a1_98
	word32 a2_99
	word32 a3_100
	word32 a4_101
	word32 a5_102
	word32 ra_34 = memset(ra, 0x4201FCE1<32>, 0<32>, 99<i32>, out t1_96, out a0_97, out a1_98, out a2_99, out a3_100, out a4_101, out a5_102)
	word32 a3_45
	word32 a1_103
	word32 a2_104
	word32 a4_105
	word32 a5_106
	word32 a6_107
	word32 a7_108
	memcpy(0x4201FCE1<32>, a0, a1, out a1_103, out a2_104, out a3_45, out a4_105, out a5_106, out a6_107, out a7_108)
	word32 a4_58
	word32 a1_109
	word32 a2_110
	word32 a3_111
	word32 a5_112
	word32 a6_113
	word32 a7_114
	memcpy(0x4201FD02<32>, a2, a3_45, out a1_109, out a2_110, out a3_111, out a4_58, out a5_112, out a6_113, out a7_114)
	Mem75[0x42020D44<32>:byte] = SLICE(a4_58, byte, 0)
	0<32> = dwArg0128
	s1Out = a2
	s2Out = a0
	return ra_34
bl_wifi_sta_info_set_exit:


word32 bl_wifi_sta_info_get(word32 a0, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      check_dts_config
// MayUse:  a0:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_wifi_sta_info_get_entry:
l230358B2:
	branch CONVERT(Mem0[0x4201FD44<32>:byte], byte, word32) != 1<32> l230358DC
l230358DC:
	a3Out = a3
	return 0xFFFFFFFF<32>
l230358C0:
	word32 a3_20
	word32 a1_60
	word32 a2_61
	word32 a4_62
	word32 a5_63
	word32 a6_64
	word32 a7_65
	memcpy(a0, 0x4201FCE1<32>, 99<i32>, out a1_60, out a2_61, out a3_20, out a4_62, out a5_63, out a6_64, out a7_65)
	a3Out = a3_20
	return 0<32>
bl_wifi_sta_info_get_exit:


void cmd_timer_start(word32 ra, word32 s1, word32 s2, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg8C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s1:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
cmd_timer_start_entry:
l230358E0:
l230358E0_thunk_bl_timer_tick_enable:
	bl_timer_tick_enable(ra, s1, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg40, dwArg44, dwArg48, dwArg5C, dwArg68, dwArg6C, dwArg8C)
	return
cmd_timer_start_exit:


void cmd_wdt_disable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
cmd_wdt_disable_entry:
l230358E4:
l230358E4_thunk_bl_wdt_disable:
	bl_wdt_disable()
	return
cmd_wdt_disable_exit:


void cmd_wdt_feed()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
cmd_wdt_feed_entry:
l230358E8:
l230358E8_thunk_bl_wdt_feed:
	bl_wdt_feed()
	return
cmd_wdt_feed_exit:


void cmd_wdt_init(word32 ra, word32 a0, word32 a2, word32 s2, word32 dwArg08, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg98, word32 dwArg9C, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
cmd_wdt_init_entry:
l230358EC:
	branch a2 == 2<32> l23035944
l23035944:
	word32 a5_232
	word32 a4_231
	word32 a3_230
	word32 a2_229
	word32 a1_228
	word32 a0_23 = atoi(a0, out a1_228, out a2_229, out a3_230, out a4_231, out a5_232)
	branch Mem13[0x4200DE84<32>:int32] == 0<32> l23035988
l23035988:
	word32 a5_252
	xTaskGetTickCount(out a5_252)
l23035952:
	word32 a5_253
	xTaskGetTickCountFromISR(out a5_253)
l23035956:
	word32 s1_254
	word32 a0_255
	word32 a1_256
	word32 a2_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	word32 s2_261
	word32 s3_262
	word32 s4_263
	word32 s5_264
	word32 s6_265
	word32 s7_266
	word32 s8_267
	word32 s9_268
	word32 s10_269
	word32 s11_270
	bl_printk(ra, 0x23084558<32>, 0x23084524<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_254, out a0_255, out a1_256, out a2_257, out a3_258, out a4_259, out a5_260, out s2_261, out s3_262, out s4_263, out s5_264, out s6_265, out s7_266, out s8_267, out s9_268, out s10_269, out s11_270)
	branch a0_23 <= 0<32> l2303598E
l2303598E:
	return
l23035976:
l23035984_thunk_bl_wdt_init:
	bl_wdt_init(a0_23)
	return
l2303590C:
	branch Mem13[0x4200DE84<32>:int32] == 0<32> l2303593E
l2303593E:
	word32 a5_233
	xTaskGetTickCount(out a5_233)
l23035912:
	word32 a5_234
	xTaskGetTickCountFromISR(out a5_234)
l23035916:
l2303593A_thunk_bl_printk:
	word32 s1_235
	word32 a0_236
	word32 a1_237
	word32 a2_238
	word32 a3_239
	word32 a4_240
	word32 a5_241
	word32 s2_242
	word32 s3_243
	word32 s4_244
	word32 s5_245
	word32 s6_246
	word32 s7_247
	word32 s8_248
	word32 s9_249
	word32 s10_250
	word32 s11_251
	bl_printk(ra, 0x23084534<32>, 0x23084524<32>, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_235, out a0_236, out a1_237, out a2_238, out a3_239, out a4_240, out a5_241, out s2_242, out s3_243, out s4_244, out s5_245, out s6_246, out s7_247, out s8_248, out s9_249, out s10_250, out s11_251)
	return
cmd_wdt_init_exit:


void bl_wdt_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
bl_wdt_cli_init_entry:
l2303599C:
	return
bl_wdt_cli_init_exit:


word32 fdt32_to_cpu(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_init
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_to_cpu_entry:
l230359A0:
	return (a0 >>u 16<i32> & 255<i32>) << 8<i32> | ((a0 << 0x18<u32> | a0 >>u 0x18<u32>) | (a0 >>u 8<u32> & 255<i32>) << 16<i32>)
fdt32_to_cpu_exit:


word32 dev_uart_init(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg74, word32 dwArg78, word32 dwArg9C, word32 dwArgA8, word32 dwArgB4, word32 dwArgE8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a5 ra s0 s1 s2 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dev_uart_init_entry:
l230359C2:
	word32 a5_247
	word32 s1_109
	word32 a0_278
	branch a0 >u 2<32> l230359DE
l230359DA:
	branch a1 != 0<32> l23035A2C
l23035A2C:
	word32 a5_30
	s1_109 = a0
	branch a0 == 0<32> l23035ADC
l23035ADC:
	a5_30 = Mem19[0x4200DEC0<32>:int32]
l23035A34:
	branch a0 != 1<32> l23035A76
l23035A76:
	a5_247 = 4<32>
	branch CONVERT(Mem19[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l23035AC0
l23035A84:
	branch CONVERT(Mem19[0x4201FD46<32>:byte], byte, word32) >u 4<32> l23035AC0
l23035A90:
	branch Mem19[0x4200DE84<32>:int32] == 0<32> l23035AD6
l23035AD6:
	word32 a5_757
	xTaskGetTickCount(out a5_757)
l23035A9A:
	word32 a5_758
	xTaskGetTickCountFromISR(out a5_758)
l23035A9E:
	a0_278 = 0x2308462C<32>
l23035A3A:
	a5_30 = Mem19[0x4200DEC4<32>:int32]
l23035A46:
	branch a5_30 == 0<32> l23035AF0
l23035AF0:
	word32 a0_67
	word32 a1_733
	word32 s4_740
	word32 a2_734
	word32 a3_735
	word32 a5_737
	word32 a4_736
	word32 s3_739
	word32 s8_741
	word32 a6_738
	Mem82[a0_67:word32] = pvPortMalloc(ra, a0, 60<i32>, a3, a4, a5_30, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_109, out a0_67, out a1_733, out a2_734, out a3_735, out a4_736, out a5_737, out a6_738, out s2, out s3_739, out s4_740, out s8_741)
	branch a0_67 != 0<32> l23035B4A
l23035B4A:
	word32 a3_88
	word32 a4_89
	word32 a5_90
	word32 t1_744
	word32 a1_746
	word32 a0_745
	word32 a2_747
	ra = memset(ra, a0_67, 0<32>, 60<i32>, out t1_744, out a0_745, out a1_746, out a2_747, out a3_88, out a4_89, out a5_90)
	Mem97[a5_90 + 52<i32>:byte] = 2<8>
	word32 s0_98 = Mem97[a5_90:word32]
	Mem99[a5_90 + 56<i32>:word32] = 0<32>
	word32 s6_100 = Mem99[s0_98:int32]
	word32 a0_101
	word32 s4_112
	word32 a3_750
	word32 a1_748
	word32 a2_749
	word32 a6_753
	word32 a4_751
	word32 a5_752
	word32 s8_754
	word32 s3_111
	pvPortMalloc(ra, s1_109, 4<32>, a3_88, a4_89, a5_90, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_109, out a0_101, out a1_748, out a2_749, out a3_750, out a4_751, out a5_752, out a6_753, out s2, out s3_111, out s4_112, out s8_754)
	Mem116[s6_100 + 56<i32>:word32] = a0_101
	branch a0_101 != 0<32> l23035BAA
l23035BAA:
	word32 a5_141
	word32 a4_144
	word32 a4_125
	word32 a5_126
	word32 t1_759
	word32 a1_761
	word32 a0_760
	word32 a2_762
	word32 a3_124
	word32 ra_127 = memset(ra, a0_101, 0<32>, 4<32>, out t1_759, out a0_760, out a1_761, out a2_762, out a3_124, out a4_125, out a5_126)
	Mem132[a5_126 + 24<i32>:word32] = a2
	Mem134[a5_126 + 28<i32>:word32] = s4_112
	branch a5_126 != 0<32> l23035C34
l23035C34:
	Mem136[a5_126:byte] = SLICE(s1_109, byte, 0)
	Mem138[a5_126 + 52<i32>:byte] = SLICE(s2, byte, 0)
	Mem142[0x1C000204<32>:word32] = a4_125
	Mem145[0x1C000208<32>:byte] = 3<8>
	Mem147[0x1C000209<32>:byte] = 0<8>
	Mem149[0x1C00020A<32>:byte] = 0<8>
	Mem151[0x1C00020B<32>:byte] = 0<8>
	Mem153[0x1C00020C<32>:byte] = SLICE(s2, byte, 0)
	a5_141 = 0x1C000200<32>
	a4_144 = 3<32>
l23035BC2:
	a4_144 = CONVERT(Mem134[0x4201FC5C<32>:byte], byte, word32)
	a5_141 = 4<32>
	branch a4_144 >u 4<32> l23035C0C
l23035BD0:
	a4_144 = CONVERT(Mem134[0x4201FD46<32>:byte], byte, word32)
	branch a4_144 >u 4<32> l23035C0C
l23035BDC:
	branch Mem134[0x4200DE84<32>:int32] == 0<32> l23035C2E
l23035C2E:
	word32 a5_765
	xTaskGetTickCount(out a5_765)
l23035BE6:
	word32 a5_766
	xTaskGetTickCountFromISR(out a5_766)
l23035BEA:
	word32 s4_772
	word32 s10_777
	word32 s11_778
	word32 s8_776
	word32 s5_773
	word32 s7_775
	word32 s6_774
	word32 a0_768
	word32 a2_770
	word32 s2_771
	word32 a1_769
	word32 s1_767
	ra_127 = bl_printk(ra_127, 0x23084648<32>, 0x23084600<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_767, out a0_768, out a1_769, out a2_770, out a3_124, out a4_144, out a5_141, out s2_771, out s3_111, out s4_772, out s5_773, out s6_774, out s7_775, out s8_776, out s9, out s10_777, out s11_778)
l23035C0C:
	0<32> = dwArgA8
l23035C2A_thunk_aos_register_driver:
	word32 a0_221
	word32 a5_226
	word32 s0_228
	word32 s1_229
	word32 s2_230
	word32 s4_232
	word32 s6_779
	word32 ra_244 = aos_register_driver(ra_127, s3_111, dwArg48, a3_124, a4_144, a5_141, mstatus, dwArg74, dwArgB4, dwArgE8, dwArg0128, dwArg0168, out s0_228, out s1_229, out a0_221, out a5_226, out s2_230, out s4_232, out s6_779)
	s0Out = s0_228
	s1Out = s1_229
	a0Out = a0_221
	a5Out = a5_226
	s2Out = s2_230
	s4Out = s4_232
	s9Out = s9
	return ra_244
l23035B76:
	a5_247 = 4<32>
	branch CONVERT(Mem116[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l23035AC0
l23035B84:
	branch CONVERT(Mem116[0x4201FD46<32>:byte], byte, word32) >u 4<32> l23035AC0
l23035B90:
	branch Mem116[0x4200DE84<32>:int32] == 0<32> l23035BA4
l23035BA4:
	word32 a5_763
	xTaskGetTickCount(out a5_763)
l23035B9A:
	word32 a5_764
	xTaskGetTickCountFromISR(out a5_764)
l23035B9E:
l23035AFC:
	a5_247 = 4<32>
	branch CONVERT(Mem82[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l23035AC0
l23035B0A:
	branch CONVERT(Mem82[0x4201FD46<32>:byte], byte, word32) >u 4<32> l23035AC0
l23035B16:
	branch Mem82[0x4200DE84<32>:int32] == 0<32> l23035B44
l23035B44:
	word32 a5_755
	xTaskGetTickCount(out a5_755)
l23035B20:
	word32 a5_756
	xTaskGetTickCountFromISR(out a5_756)
l23035B24:
l23035B28:
	a0_278 = 0x23084648<32>
l23035A48:
	a5_247 = 4<32>
	branch CONVERT(Mem19[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l23035AC0
l23035A56:
	branch CONVERT(Mem19[0x4201FD46<32>:byte], byte, word32) >u 4<32> l23035AC0
l23035A62:
	branch Mem19[0x4200DE84<32>:int32] == 0<32> l23035AEA
l23035AEA:
	word32 a5_742
	xTaskGetTickCount(out a5_742)
l23035A6C:
	word32 a5_743
	xTaskGetTickCountFromISR(out a5_743)
l23035A70:
l230359DE:
	a5_247 = 4<32>
	s1_109 = s1
	branch CONVERT(Mem19[0x4201FC5C<32>:byte], byte, word32) >u 4<32> l23035AC0
l230359EC:
	s1_109 = s1
	branch CONVERT(Mem19[0x4201FD46<32>:byte], byte, word32) >u 4<32> l23035AC0
l230359F8:
	branch Mem19[0x4200DE84<32>:int32] == 0<32> l23035A26
l23035A26:
	word32 a5_718
	xTaskGetTickCount(out a5_718)
l23035A02:
	word32 a5_719
	xTaskGetTickCountFromISR(out a5_719)
l23035A06:
l23035A0A:
	a0_278 = 0x2308460C<32>
l23035ABC:
	word32 a0_720
	word32 s7_729
	word32 s3_725
	word32 a1_721
	word32 s4_726
	word32 s8_730
	word32 a4_724
	word32 s5_727
	word32 s6_728
	word32 s10_731
	word32 a3_723
	word32 s11_732
	word32 a2_722
	ra = bl_printk(ra, a0_278, 0x23084600<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_109, out a0_720, out a1_721, out a2_722, out a3_723, out a4_724, out a5_247, out s2, out s3_725, out s4_726, out s5_727, out s6_728, out s7_729, out s8_730, out s9, out s10_731, out s11_732)
l23035AC0:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_109
	a0Out = 0xFFFFFFFF<32>
	a5Out = a5_247
	s2Out = s2
	s4Out = dwArg04
	s9Out = s9
	return ra
dev_uart_init_exit:


void hal_uart_send_trigger(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_write
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
hal_uart_send_trigger_entry:
l23035C6A:
	bl_uart_int_tx_enable(a4)
	return
hal_uart_send_trigger_exit:


void hal_uart_send_trigger_off(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __uart_tx_irq
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
hal_uart_send_trigger_off_entry:
l23035C7E:
	bl_uart_int_tx_disable(a4)
	return
hal_uart_send_trigger_off_exit:


void hal_uart_init(word32 ra, word32 s0, word32 s1, word32 a0, word32 a4, word32 s2, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg5C, word32 dwArg8C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] s0:[24..31] s1:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +008C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
hal_uart_init_entry:
l23035C92:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 a0_12 = Mem9[a0 + 56<i32>:word32]
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg132 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg312 = <invalid>
	word32 stackArg376 = <invalid>
	word32 a0_162
	word32 a3_163
	word32 a4_164
	aos_mutex_new(ra, a0, a3, a4, a5, mstatus, stackArg0, stackArg4, stackArg132, stackArg248, stackArg312, stackArg376, out a0_162, out a3_163, out a4_164)
	byte bLoc11_74 = SLICE(s0, byte, 24)
	branch a0_12 != 0<32> l23035CC6
l23035CA6:
	bl_uart_getdefconfig(fp + 0xFFFFFFEF<32>)
	word32 a5_17 = CONVERT(bLoc11_74, byte, word32)
	branch a5_17 != 0<32> l23035CD2
l23035CD2:
	a4 = 1<32>
	branch a5_17 != 1<32> l23035CDE
l23035CDE:
	a5_17 = 2<32>
l23035CD8:
	Mem22[a0 + 9<i32>:byte] = SLICE(a5_17, byte, 0)
l23035CBA:
	Mem23[a0 + 9<i32>:byte] = 0<8>
l23035CBE:
	bl_uart_int_enable(ra, a0_12, CONVERT(Mem25[a0:byte], byte, word32), a4, s2, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg40, dwArg44, dwArg48, dwArg5C, s1, ra, dwArg8C)
l23035CC6:
	return
hal_uart_init_exit:


word32 hal_uart_recv_II(word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArg84, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cli_getchar
//      __uart_rx_irq
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] Stack +0084:[0..31]
// LiveOut: a0 a2 a4 a5 s0 s4 s8
// Trashed: a0 a2 a4 a5 s0 s1 s4 s8 t3 tp
// Preserved: sp
hal_uart_recv_II_entry:
l23035CE2:
	word32 s0_12 = 0<32>
l23035CEE:
	branch s0_12 == a2 l23035D0A
l23035CF2:
	dwLoc1C = a2
	word32 a0_24 = bl_uart_data_recv(s0_12, CONVERT(Mem16[a0:byte], byte, word32), out a4, out a5)
	s0_12 = a3
	a2 = dwArg84
	branch a0_24 >= 0<32> l23035D18
l23035D18:
	a5 = a1 + a3
	Mem32[a5:byte] = SLICE(a0_24, byte, 0)
	s0_12 = a3 + 1<32>
l23035D0A:
	Mem36[s0_12:word32] = a3
	a0Out = 0<32>
	a2Out = a2
	a4Out = a4
	a5Out = a5
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s0_12
hal_uart_recv_II_exit:


void hal_uart_send(word32 a0, word32 a1, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __uart_tx_irq
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s1 s2 s4 s8 t3 tp
// Preserved: s0 sp
hal_uart_send_entry:
l23035D24:
	word32 s0_15 = a1
	word32 s1_17 = a1 + a2
l23035D36:
	branch s0_15 != s1_17 l23035D48
l23035D48:
	word32 a0_61
	word32 a4_62
	word32 a5_63
	word32 s4_64
	word32 s8_65
	s0_15 = bl_uart_data_send(s1_17, CONVERT(Mem11[a0:byte], byte, word32), CONVERT(Mem11[s0_15:byte], byte, word32), out a0_61, out a4_62, out a5_63, out s4_64, out s8_65)
l23035D3A:
	0<32> = dwArg38
	return
hal_uart_send_exit:


void hal_uart_finalize(word32 ra, word32 s0, word32 s1, word32 a4, word32 s2, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg6C, word32 dwArg7C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_close
// MayUse:  a4:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +007C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
hal_uart_finalize_entry:
l23035D58:
	bl_uart_int_disable(ra, s1, CONVERT(Mem7[Mem7[s0 + 56<i32>:word32]:byte], byte, word32), a4, s2, dwArg20, dwArg24, dwArg30, dwArg34, dwArg58, dwArg6C, dwArg7C)
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg344 = <invalid>
	word32 stackArg408 = <invalid>
	word32 a0_57
	word32 a2_58
	word32 a4_59
	word32 a5_60
	aos_mutex_free(a0, a3, a4, mstatus, stackArg344, stackArg408, out a0_57, out a2_58, out a4_59, out a5_60)
	return
hal_uart_finalize_exit:


word32 hal_uart_notify_register(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
hal_uart_notify_register_entry:
l23035D78:
	branch a1 != 0<32> l23035D96
l23035D96:
	branch a1 != 1<32> l23035D8E
l23035D9E:
	bl_uart_int_rx_notify_register(CONVERT(Mem7[a0:byte], byte, word32), a2, a0)
l23035D82:
	bl_uart_int_tx_notify_register(CONVERT(Mem7[a0:byte], byte, word32), a2, a0)
l23035D8C:
l23035D8E:
	return a1
hal_uart_notify_register_exit:


word32 vfs_uart_init(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 s4, word32 s6, word32 s10, word32 mstatus, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg98, word32 dwArgA8, word32 dwArg0118, word32 dwArg0134, ptr32 & s2Out, ptr32 & s6Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s2:[0..7] s4:[0..31] s6:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0134:[0..31]
// LiveOut: ra s10 s2 s6 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_uart_init_entry:
l23035DAA:
	byte bLoc68_2953 = SLICE(s2, byte, 0)
	branch CONVERT(Mem0[0x4200DEC8<32>:int8], int8, int32) == 1<32> l23035F0E
l23035DDA:
	word32 a6_3251
	word32 a5_3250
	word32 a1_3246
	word32 a4_3249
	word32 a2_3247
	word32 a3_3248
	word32 a7_3252
	memcpy(fp + -112<i32>, 0x230845D0<32>, 48<i32>, out a1_3246, out a2_3247, out a3_3248, out a4_3249, out a5_3250, out a6_3251, out a7_3252)
	word32 s4_119 = a0
	word32 a5_1522 = fp + -120<i32>
	word32 s2_1525 = 0<32>
l23035E14:
	word32 a5_1217
	word32 a0_1383
	word32 a3_1380
	word32 s6_76 = Mem70[a5_1522:int32]
	word32 a0_81
	word32 s1_91
	word32 a5_3282
	word32 s5_3284
	word32 s6_3285
	word32 s3_3283
	word32 s0_1457
	word32 s2_117
	ra = fdt_subnode_offset(ra, 0x42020000<32>, s4_119, s6_76, s2_1525, s6_76, dwLocB8, dwLoc88, dwArg28, out s0_1457, out s1_91, out a0_81, out a5_3282, out s2_117, out s3_3283, out s4_119, out s5_3284, out s6_3285)
	branch a0_81 > 0<32> l23035E78
l23035E78:
	word32 a0_106
	word32 s0_115
	word32 s1_116
	word32 s3_3253
	word32 s5_3254
	word32 s6_3255
	word32 s8_3256
	ra = fdt_stringlist_count(ra, s4_119, 0x230846D0<32>, s2_117, dwLocB8, 0x23084688<32>, dwLoc08, dwArg28, out s0_115, out s1_116, out a0_106, out s2_117, out s3_3253, out s4_119, out s5_3254, out s6_3255, out s8_3256)
	branch a0_106 == 1<32> l23035EDA
l23035EDA:
	word32 a0_133
	word32 a4_137
	word32 s0_142
	word32 s1_143
	word32 s8_3279
	word32 s6_3278
	word32 a1_3272
	word32 s3_3276
	word32 a2_3273
	word32 a3_3274
	word32 a5_3275
	word32 s5_3277
	ra = fdt_stringlist_get(ra, s4_119, 0x230846D0<32>, dwLocAC, dwLoc18, s1, dwArg68, out s0_142, out s1_143, out a0_133, out a1_3272, out a2_3273, out a3_3274, out a4_137, out a5_3275, out s2_117, out s3_3276, out s4_119, out s5_3277, out s6_3278, out s8_3279)
	branch a4_137 == 4<32> l23035F2E
l23035F2E:
	word32 a2_3287
	word32 a3_3288
	word32 a5_3290
	word32 a4_3289
	word32 a1_3286
	branch memcmp(0x23084714<32>, a0_133, 4<32>, out a1_3286, out a2_3287, out a3_3288, out a4_3289, out a5_3290) != 0<32> l23035EF4
l23035F40:
	word32 a0_170
	word32 s0_179
	word32 s1_180
	word32 s6_185
	word32 s8_186
	word32 s5_3292
	word32 s3_3291
	ra = fdt_stringlist_count(ra, s4_119, 0x23084748<32>, s2_117, dwLocB8, 0x23084688<32>, dwLoc08, dwArg28, out s0_179, out s1_180, out a0_170, out s2_117, out s3_3291, out s4_119, out s5_3292, out s6_185, out s8_186)
	branch a0_170 == s6_185 l23035FD8
l23035FD8:
	word32 a0_196
	word32 a4_200
	word32 s0_205
	word32 s1_206
	word32 s3_3298
	word32 a5_3296
	word32 s2_3297
	word32 s5_3299
	word32 s8_3301
	word32 s6_3300
	word32 a3_3295
	word32 a2_3294
	word32 a1_3293
	word32 s4_209
	word32 ra_204 = fdt_stringlist_get(ra, s4_119, s8_186 + 1864<i32>, dwLocAC, dwLoc18, s1, dwArg68, out s0_205, out s1_206, out a0_196, out a1_3293, out a2_3294, out a3_3295, out a4_200, out a5_3296, out s2_3297, out s3_3298, out s4_209, out s5_3299, out s6_3300, out s8_3301)
	dwLoc28 = a0_196
	branch a4_200 <=u 32<i32> l23036036
l23035FF4:
	branch CONVERT(Mem217[s1_206 + -932<i32>:byte], byte, word32) >u 2<32> l23036036
l23035FFE:
	branch CONVERT(Mem217[0x4201FD46<32>:byte], byte, word32) >u 2<32> l23036036
l2303600A:
	branch Mem217[0x4200DE84<32>:int32] == 0<32> l2303608C
l2303608C:
	word32 a5_3314
	xTaskGetTickCount(out a5_3314)
l23036014:
	word32 a5_3315
	xTaskGetTickCountFromISR(out a5_3315)
l23036018:
	word32 a5_3322
	word32 s11_3330
	word32 s10_3329
	word32 s7_3327
	word32 s8_3328
	word32 s2_3323
	word32 s6_3326
	word32 s5_3325
	word32 s3_3324
	word32 a2_3319
	word32 a4_3321
	word32 a3_3320
	word32 s1_3316
	word32 a1_3318
	word32 a0_3317
	ra_204 = bl_printk(ra_204, 0x2308478C<32>, s0_205 + 1536<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3316, out a0_3317, out a1_3318, out a2_3319, out a3_3320, out a4_3321, out a5_3322, out s2_3323, out s3_3324, out s4_209, out s5_3325, out s6_3326, out s7_3327, out s8_3328, out s9, out s10_3329, out s11_3330)
l23036036:
	word32 a0_1306
	word32 a3_1303
	word32 a0_276
	word32 s0_285
	word32 s1_286
	word32 s8_3313
	word32 s6_3312
	word32 s5_3311
	word32 a5_3309
	word32 s3_3310
	word32 a4_3308
	word32 a3_3307
	word32 a1_3306
	ra = fdt_getprop(ra_204, s4_209, 0x230847BC<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_285, out s1_286, out a0_276, out a1_3306, out a3_3307, out a4_3308, out a5_3309, out s2_117, out s3_3310, out s4_119, out s5_3311, out s6_3312, out s8_3313)
	branch a0_276 != 0<32> l23036098
l23036098:
	word32 s7_297 = Mem217[a0_276:int32]
	word32 a0_302
	word32 s0_311
	word32 s1_312
	word32 a1_3331
	word32 a3_3332
	word32 s6_3337
	word32 s8_3338
	word32 a5_3334
	word32 s5_3336
	word32 s3_3335
	word32 a4_3333
	ra = fdt_getprop(ra, s4_119, 0x230847F8<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_311, out s1_312, out a0_302, out a1_3331, out a3_3332, out a4_3333, out a5_3334, out s2_117, out s3_3335, out s4_119, out s5_3336, out s6_3337, out s8_3338)
	branch a0_302 != 0<32> l230360F4
l230360F4:
	word32 s9_1041
	word32 a0_327
	word32 a5_3341
	word32 s5_3343
	word32 s3_3342
	word32 s1_1562
	word32 s6_1563
	ra = fdt_subnode_offset(ra, s1_312, s4_119, 0x23084824<32>, s2_117, Mem217[a0_302:int32], dwLocB8, dwLoc88, dwArg28, out s0_1457, out s1_1562, out a0_327, out a5_3341, out s2_117, out s3_3342, out s4_119, out s5_3343, out s6_1563)
	s9 = a0_327
	branch a0_327 > 0<32> l2303615E
l2303615E:
	word32 a0_353
	word32 s1_363
	word32 s8_3366
	word32 s6_3365
	word32 s3_3363
	word32 s5_3364
	word32 a1_3359
	word32 a5_3362
	word32 a4_3361
	word32 a3_3360
	ra = fdt_getprop(ra, s4_119, 0x23084870<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_1457, out s1_363, out a0_353, out a1_3359, out a3_3360, out a4_3361, out a5_3362, out s2_117, out s3_3363, out s4_119, out s5_3364, out s6_3365, out s8_3366)
	branch a0_353 != 0<32> l230361A8
l230361A8:
	word32 s10_374 = Mem217[a0_353:int32]
	word32 a0_379
	word32 a3_3370
	word32 a5_3372
	word32 s3_3373
	word32 s8_3375
	word32 a1_3369
	word32 s5_3374
	word32 a4_3371
	ra = fdt_getprop(ra, s4_119, 0x23084878<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_1457, out s1_1562, out a0_379, out a1_3369, out a3_3370, out a4_3371, out a5_3372, out s2_117, out s3_3373, out s4_119, out s5_3374, out s6_1563, out s8_3375)
	s9 = a0_379
	branch a0_379 != 0<32> l230361F8
l230361F8:
	fdt32_to_cpu(s10_374)
	s9_1041 = fdt32_to_cpu(Mem217[a0_379:int32])
l230361C2:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_1562 + -932<i32>:byte], byte, word32) >u 2<32> l23035EFE
l230361CC:
	branch CONVERT(Mem217[0x4201FD46<32>:byte], byte, word32) >u 2<32> l23035EFE
l230361D8:
	branch Mem217[0x4200DE84<32>:int32] == 0<32> l230361F2
l230361F2:
	word32 a5_3390
	xTaskGetTickCount(out a5_3390)
l230361E2:
	word32 a5_3391
	xTaskGetTickCountFromISR(out a5_3391)
l230361E6:
l23036172:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_363 + -932<i32>:byte], byte, word32) >u 2<32> l23035EFE
l2303617C:
	branch CONVERT(Mem217[0x4201FD46<32>:byte], byte, word32) >u 2<32> l23035EFE
l23036188:
	branch Mem217[0x4200DE84<32>:int32] == 0<32> l230361A2
l230361A2:
	word32 a5_3376
	xTaskGetTickCount(out a5_3376)
l23036192:
	word32 a5_3377
	xTaskGetTickCountFromISR(out a5_3377)
l23036196:
l2303610E:
	branch CONVERT(Mem217[s1_1562 + -932<i32>:byte], byte, word32) >u 2<32> l2303614E
l23036118:
	branch CONVERT(Mem217[0x4201FD46<32>:byte], byte, word32) >u 2<32> l2303614E
l23036124:
	branch Mem217[0x4200DE84<32>:int32] == 0<32> l23036158
l23036158:
	word32 a5_3367
	xTaskGetTickCount(out a5_3367)
l2303612E:
	word32 a5_3368
	xTaskGetTickCountFromISR(out a5_3368)
l23036132:
	word32 a2_3380
	word32 a5_3383
	word32 s5_3385
	word32 s9_3387
	word32 s11_3389
	word32 s10_3388
	word32 s8_3386
	word32 s3_3384
	word32 a4_3382
	word32 a3_3381
	word32 a1_3379
	word32 a0_3378
	ra = bl_printk(ra, 0x23084830<32>, s0_1457 + 1536<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3378, out a1_3379, out a2_3380, out a3_3381, out a4_3382, out a5_3383, out s2_117, out s3_3384, out s4_119, out s5_3385, out s6_1563, out s7_297, out s8_3386, out s9_3387, out s10_3388, out s11_3389)
l2303614E:
	s9_1041 = 512<i32>
l2303620A:
	branch CONVERT(Mem217[s1_1562 + -932<i32>:byte], byte, word32) >u 2<32> l2303624E
l23036214:
	branch CONVERT(Mem217[0x4201FD46<32>:byte], byte, word32) >u 2<32> l2303624E
l23036220:
	branch Mem217[0x4200DE84<32>:int32] == 0<32> l230362C0
l230362C0:
	word32 a5_3392
	xTaskGetTickCount(out a5_3392)
l2303622A:
	word32 a5_3393
	xTaskGetTickCountFromISR(out a5_3393)
l2303622E:
	word32 s3_3400
	word32 s10_3403
	word32 s8_3402
	word32 s5_3401
	word32 s11_3404
	word32 a5_3399
	word32 a4_3398
	word32 a2_3396
	word32 a3_3397
	word32 a1_3395
	word32 a0_3394
	ra = bl_printk(ra, 0x23084880<32>, s0_1457 + 1536<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3394, out a1_3395, out a2_3396, out a3_3397, out a4_3398, out a5_3399, out s2_117, out s3_3400, out s4_119, out s5_3401, out s6_1563, out s7_297, out s8_3402, out s9_1041, out s10_3403, out s11_3404)
l2303624E:
	fdt32_to_cpu(s7_297)
	word32 a0_567 = fdt32_to_cpu(s6_1563)
	dwLocAC = a0_567
	word32 s7_571 = fp + -112<i32>
	word32 s11_1564 = 0x42020000<32>
	word32 s10_1565 = 0x4200E000<32>
l2303626A:
	byte bLoc98_1813 = SLICE(dwLoc98, byte, 0)
	word32 a0_586
	word32 s0_595
	word32 a5_3410
	word32 s5_3412
	word32 s3_3411
	ra = fdt_subnode_offset(ra, s1_1562, s4_119, 0x230848C0<32>, s2_117, s6_1563, dwLocB8, dwLoc88, dwArg28, out s0_595, out s1_1562, out a0_586, out a5_3410, out s2_117, out s3_3411, out s4_119, out s5_3412, out s6_1563)
	branch a0_586 > 0<32> l230362CC
l230362CC:
	word32 a0_612
	word32 s0_621
	word32 s3_3405
	word32 s5_3406
	word32 s8_3407
	ra = fdt_stringlist_count(ra, s4_119, Mem585[s7_571:int32], s2_117, dwLocB8, 0x23084688<32>, dwLoc08, dwArg28, out s0_621, out s1_1562, out a0_612, out s2_117, out s3_3405, out s4_119, out s5_3406, out s6_1563, out s8_3407)
	branch a0_612 == 1<32> l2303632A
l2303632A:
	word32 a1_640
	word32 a4_643
	word32 s0_648
	word32 a2_3480
	word32 a0_3479
	word32 a3_3481
	word32 s3_3483
	word32 s5_3484
	word32 s8_3485
	word32 a5_3482
	ra = fdt_stringlist_get(ra, s4_119, s6_1563, a0_567, dwLoc18, s1, dwArg68, out s0_648, out s1_1562, out a0_3479, out a1_640, out a2_3480, out a3_3481, out a4_643, out a5_3482, out s2_117, out s3_3483, out s4_119, out s5_3484, out s6_1563, out s8_3485)
	branch a4_643 == 4<32> l23036386
l23036386:
	word32 a1_3488
	word32 a2_3489
	word32 a4_3491
	word32 a5_3492
	word32 a3_3490
	branch memcmp(0x23084714<32>, a1_640, 4<32>, out a1_3488, out a2_3489, out a3_3490, out a4_3491, out a5_3492) != 0<32> l23036342
l23036398:
	word32 a0_676
	word32 s0_685
	word32 s1_686
	word32 s4_689
	word32 a5_3513
	word32 s2_3514
	word32 s5_3516
	word32 s6_3517
	word32 s3_3515
	word32 ra_684 = fdt_subnode_offset(ra, s1_1562, s4_119, 0x23084964<32>, s2_117, s6_1563, dwLocB8, dwLoc88, dwArg28, out s0_685, out s1_686, out a0_676, out a5_3513, out s2_3514, out s3_3515, out s4_689, out s5_3516, out s6_3517)
	branch a0_676 > 0<32> l230364F4
l230364F4:
	word32 a0_702
	word32 s0_711
	word32 a3_3519
	word32 a5_3521
	word32 a4_3520
	word32 s3_3522
	word32 s8_3524
	word32 s5_3523
	word32 a1_3518
	ra = fdt_getprop(ra_684, s4_689, Mem660[s7_571 + 4<i32>:int32], dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_711, out s1_1562, out a0_702, out a1_3518, out a3_3519, out a4_3520, out a5_3521, out s2_117, out s3_3522, out s4_119, out s5_3523, out s6_1563, out s8_3524)
	branch a0_702 != 0<32> l23036548
l23036548:
	Mem726[s7_571 + 8<i32>:byte] = SLICE(fdt32_to_cpu(Mem660[a0_702:word32]), byte, 0)
l23036506:
	branch CONVERT(Mem660[s1_1562 + -932<i32>:byte], byte, word32) >u 2<32> l230362B6
l23036510:
	branch CONVERT(Mem660[s11_1564 + -698<i32>:byte], byte, word32) >u 2<32> l230362B6
l23036518:
	branch Mem660[s10_1565 + -380<i32>:int32] == 0<32> l23036542
l23036542:
	word32 a5_3527
	xTaskGetTickCount(out a5_3527)
l2303651E:
	word32 a5_3528
	xTaskGetTickCountFromISR(out a5_3528)
l23036522:
	word32 a2_3546
	word32 a5_3549
	word32 s5_3551
	word32 s8_3552
	word32 s3_3550
	word32 a4_3548
	word32 a3_3547
	word32 a1_3545
	word32 a0_3544
	ra = bl_printk(ra, 0x230846A8<32>, s0_711 + 1536<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3544, out a1_3545, out a2_3546, out a3_3547, out a4_3548, out a5_3549, out s2_117, out s3_3550, out s4_119, out s5_3551, out s6_1563, out s7_571, out s8_3552, out s9_1041, out s10_1565, out s11_1564)
l230363AE:
	branch CONVERT(Mem660[s1_686 + -932<i32>:byte], byte, word32) >u 2<32> l230363C4
l230363B8:
	branch CONVERT(Mem660[0x4201FD46<32>:byte], byte, word32) <=u 2<32> l23036458
l23036458:
	branch Mem660[0x4200DE84<32>:int32] == 0<32> l230364EE
l230364EE:
	word32 a5_3525
	xTaskGetTickCount(out a5_3525)
l23036462:
	word32 a5_3526
	xTaskGetTickCountFromISR(out a5_3526)
l23036466:
	word32 s2_3535
	word32 s11_3543
	word32 a0_3529
	word32 s4_3537
	word32 s3_3536
	word32 s5_3538
	word32 s7_3540
	word32 s8_3541
	word32 s10_3542
	word32 s6_3539
	word32 a1_3530
	word32 a3_3532
	word32 a4_3533
	word32 a5_3534
	word32 a2_3531
	bl_printk(ra_684, 0x23084968<32>, s0_685 + 1536<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3529, out a1_3530, out a2_3531, out a3_3532, out a4_3533, out a5_3534, out s2_3535, out s3_3536, out s4_3537, out s5_3538, out s6_3539, out s7_3540, out s8_3541, out s9_1041, out s10_3542, out s11_3543)
l23036342:
	branch CONVERT(Mem660[s1_1562 + -932<i32>:byte], byte, word32) >u 2<32> l230362B6
l2303634C:
	branch CONVERT(Mem660[s11_1564 + -698<i32>:byte], byte, word32) >u 2<32> l230362B6
l23036354:
	branch Mem660[s10_1565 + -380<i32>:int32] == 0<32> l23036452
l23036452:
	word32 a5_3493
	xTaskGetTickCount(out a5_3493)
l2303635C:
	word32 a5_3494
	xTaskGetTickCountFromISR(out a5_3494)
l23036360:
	word32 s5_3511
	word32 a1_3505
	word32 a0_3504
	word32 s8_3512
	word32 a2_3506
	word32 a4_3508
	word32 a5_3509
	word32 s3_3510
	word32 a3_3507
	ra = bl_printk(ra, 0x23084928<32>, s0_648 + 1536<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3504, out a1_3505, out a2_3506, out a3_3507, out a4_3508, out a5_3509, out s2_117, out s3_3510, out s4_119, out s5_3511, out s6_1563, out s7_571, out s8_3512, out s9_1041, out s10_1565, out s11_1564)
l230362E4:
	branch CONVERT(Mem609[s1_1562 + -932<i32>:byte], byte, word32) >u 2<32> l230362B6
l230362EE:
	branch CONVERT(Mem609[s11_1564 + -698<i32>:byte], byte, word32) >u 2<32> l230362B6
l230362F6:
	branch Mem609[s10_1565 + -380<i32>:int32] == 0<32> l23036324
l23036324:
	word32 a5_3486
	xTaskGetTickCount(out a5_3486)
l230362FE:
	word32 a5_3487
	xTaskGetTickCountFromISR(out a5_3487)
l23036302:
	word32 s5_3502
	word32 s8_3503
	word32 a1_3496
	word32 a0_3495
	word32 a2_3497
	word32 a4_3499
	word32 a5_3500
	word32 s3_3501
	word32 a3_3498
	ra = bl_printk(ra, 0x230848F4<32>, s0_621 + 1536<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3495, out a1_3496, out a2_3497, out a3_3498, out a4_3499, out a5_3500, out s2_117, out s3_3501, out s4_119, out s5_3502, out s6_1563, out s7_571, out s8_3503, out s9_1041, out s10_1565, out s11_1564)
l2303627E:
	branch CONVERT(Mem585[s1_1562 + -932<i32>:byte], byte, word32) >u 2<32> l230362B6
l23036288:
	branch CONVERT(Mem585[s11_1564 + -698<i32>:byte], byte, word32) >u 2<32> l230362B6
l23036290:
	branch Mem585[s10_1565 + -380<i32>:int32] == 0<32> l230362C6
l230362C6:
	word32 a5_3408
	xTaskGetTickCount(out a5_3408)
l23036296:
	word32 a5_3409
	xTaskGetTickCountFromISR(out a5_3409)
l2303629A:
	word32 a0_3413
	word32 a3_3416
	word32 a5_3418
	word32 s5_3420
	word32 s8_3421
	word32 s3_3419
	word32 a4_3417
	word32 a2_3415
	word32 a1_3414
	ra = bl_printk(ra, 0x230848C8<32>, s0_595 + 1536<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3413, out a1_3414, out a2_3415, out a3_3416, out a4_3417, out a5_3418, out s2_117, out s3_3419, out s4_119, out s5_3420, out s6_1563, out s7_571, out s8_3421, out s9_1041, out s10_1565, out s11_1564)
l230362B6:
	s7_571 = s7_571 + 0xC<32>
	branch fp + -64<i32> != s7_571 l2303626A
l230362BE:
l23036482:
	branch CONVERT(Mem980[s1_1562 + -932<i32>:byte], byte, word32) >u 2<32> l230363C4
l2303648C:
	branch CONVERT(Mem980[0x4201FD46<32>:byte], byte, word32) >u 2<32> l230363C4
l23036498:
	branch Mem980[0x4200DE84<32>:int32] == 0<32> l23036554
l23036554:
	word32 a5_3422
	xTaskGetTickCount(out a5_3422)
l230364A2:
	word32 a5_3423
	xTaskGetTickCountFromISR(out a5_3423)
l230364A6:
	word32 a5_1000 = CONVERT(bLoc44, byte, word32)
	word32 s3_3434
	word32 s7_3438
	word32 s10_3440
	word32 s5_3436
	word32 s11_3441
	word32 s4_3435
	word32 s8_3439
	word32 s6_3437
	word32 s2_3433
	word32 a5_3432
	word32 a3_3430
	word32 a4_3431
	word32 a2_3429
	word32 a1_3428
	word32 a0_3427
	word32 s1_3426
	bl_printk(dwArg0134, 0x23084990<32>, dwArg0134, a5_1000, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3426, out a0_3427, out a1_3428, out a2_3429, out a3_3430, out a4_3431, out a5_3432, out s2_3433, out s3_3434, out s4_3435, out s5_3436, out s6_3437, out s7_3438, out s8_3439, out s9_1041, out s10_3440, out s11_3441)
	dwLocB8 = a5_1000
l230363C4:
	word32 s5_1046 = CONVERT(bLoc98_1813, byte, word32)
	word32 a5_1050
	bl_uart_flush(s5_1046, out a5_1050)
	word32 s1_1069
	word32 s8_1073
	word32 s2_1070
	word32 a1_1060
	word32 ra_1067 = bl_uart_init(s5_1046, CONVERT(bLoc68_2953, byte, word32), CONVERT(bLoc5C, byte, word32), a5_1050, out s1_1069, out a1_1060, out s2_1070, out s8_1073)
	word32 a4_1081 = CONVERT(Mem1045[s1_1069 + -932<i32>:byte], byte, word32)
	branch a4_1081 >u 2<32> l230363FC
l230363F0:
	a4_1081 = CONVERT(Mem1045[0x4201FD46<32>:byte], byte, word32)
	branch a4_1081 <=u 2<32> l2303655A
l2303655A:
	branch Mem1045[0x4200DE84<32>:int32] == 0<32> l230365C6
l230365C6:
	word32 a5_3455
	xTaskGetTickCount(out a5_3455)
l23036564:
	word32 a5_3456
	xTaskGetTickCountFromISR(out a5_3456)
l23036568:
	word32 s1_1115
	word32 s10_1116
	word32 s7_1123
	word32 s11_3478
	word32 a0_3470
	word32 a3_3472
	word32 a2_3471
	word32 a4_3473
	word32 s3_3475
	word32 s4_3476
	word32 s6_3477
	word32 a5_3474
	ra_1067 = bl_printk(ra_1067, 0x230849E4<32>, dwArg0134 + 1536<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1115, out a0_3470, out a1_1060, out a2_3471, out a3_3472, out a4_3473, out a5_3474, out s2_1070, out s3_3475, out s4_3476, out s5_1046, out s6_3477, out s7_1123, out s8_1073, out s9_1041, out s10_1116, out s11_3478)
	a4_1081 = CONVERT(Mem1045[s1_1115 + -932<i32>:byte], byte, word32)
	branch a4_1081 >u 2<32> l230363FC
l23036594:
	a4_1081 = CONVERT(Mem1045[s7_1123 + -698<i32>:byte], byte, word32)
	branch a4_1081 >u 2<32> l230363FC
l2303659C:
	branch Mem1045[s10_1116 + -380<i32>:int32] == 0<32> l230365CC
l230365CC:
	word32 a5_3457
	xTaskGetTickCount(out a5_3457)
l230365A2:
	word32 a5_3458
	xTaskGetTickCountFromISR(out a5_3458)
l230365A6:
	word32 a3_3462
	word32 s3_3464
	word32 a5_3463
	word32 s4_3465
	word32 s7_3467
	word32 s10_3468
	word32 s11_3469
	word32 s6_3466
	word32 s1_3459
	word32 a0_3460
	word32 a2_3461
	ra_1067 = bl_printk(ra_1067, 0x23084A10<32>, dwArg0134 + 1536<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3459, out a0_3460, out a1_1060, out a2_3461, out a3_3462, out a4_1081, out a5_3463, out s2_1070, out s3_3464, out s4_3465, out s5_1046, out s6_3466, out s7_3467, out s8_1073, out s9_1041, out s10_3468, out s11_3469)
l230363FC:
	word32 a0_1214
	word32 s0_1219
	word32 s1_1228
	ra = dev_uart_init(ra_1067, s5_1046, a1_1060, s8_1073, s9_1041, a4_1081, s2_1070, mstatus, dwLocB8, dwLocA0, 0x23084688<32>, s10, s6, s4, dwLoc4C, dwLoc48, a1, dwLoc18, dwLoc0C, dwArg28, dwArg58, dwArg68, dwArg98, dwArgA8, out s0_1219, out s1_1228, out a0_1214, out a5_1217, out s2_117, out s4_119, out s9)
	branch a0_1214 == 0<32> l23035EFE
l2303640C:
	a5_1217 = 4<32>
	branch CONVERT(Mem1045[s1_1228 + -932<i32>:byte], byte, word32) >u 4<32> l23035EFE
l23036416:
	branch CONVERT(Mem1045[0x4201FD46<32>:byte], byte, word32) >u 4<32> l23035EFE
l23036422:
	branch Mem1045[0x4200DE84<32>:int32] == 0<32> l230365D2
l230365D2:
	word32 a5_3424
	xTaskGetTickCount(out a5_3424)
l2303642E:
	word32 a5_3425
	xTaskGetTickCountFromISR(out a5_3425)
l23036432:
	word32 a2_3445
	word32 s11_3454
	word32 a4_3447
	word32 s1_3442
	word32 a3_3446
	word32 s10_3453
	word32 s3_3448
	word32 s6_3450
	word32 s7_3451
	word32 s8_3452
	word32 s5_3449
	word32 a1_3444
	word32 a0_3443
	ra = bl_printk(ra, 0x23084A48<32>, s0_1219 + 1536<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3442, out a0_3443, out a1_3444, out a2_3445, out a3_3446, out a4_3447, out a5_1217, out s2_117, out s3_3448, out s4_119, out s5_3449, out s6_3450, out s7_3451, out s8_3452, out s9, out s10_3453, out s11_3454)
l230360B0:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_312 + -932<i32>:byte], byte, word32) >u 2<32> l23035EFE
l230360BA:
	branch CONVERT(Mem217[0x4201FD46<32>:byte], byte, word32) >u 2<32> l23035EFE
l230360C6:
	branch Mem217[0x4200DE84<32>:int32] == 0<32> l230360EE
l230360EE:
	word32 a5_3344
	xTaskGetTickCount(out a5_3344)
l230360D0:
	word32 a5_3345
	xTaskGetTickCountFromISR(out a5_3345)
l230360D4:
	a3_1303 = s0_311 + 1536<i32>
	a0_1306 = 0x230847FC<32>
l2303604A:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_286 + -932<i32>:byte], byte, word32) >u 2<32> l23035EFE
l23036054:
	branch CONVERT(Mem217[0x4201FD46<32>:byte], byte, word32) >u 2<32> l23035EFE
l23036060:
	branch Mem217[0x4200DE84<32>:int32] == 0<32> l23036092
l23036092:
	word32 a5_3339
	xTaskGetTickCount(out a5_3339)
l2303606A:
	word32 a5_3340
	xTaskGetTickCountFromISR(out a5_3340)
l2303606E:
	a3_1303 = s0_285 + 1536<i32>
	a0_1306 = 0x230847C8<32>
l23036086:
	word32 a2_3349
	word32 a3_3350
	word32 s11_3358
	word32 s7_3355
	word32 s10_3357
	word32 s8_3356
	word32 s3_3352
	word32 s6_3354
	word32 s5_3353
	word32 a4_3351
	word32 a1_3348
	word32 a0_3347
	word32 s1_3346
	ra = bl_printk(ra, a0_1306, a3_1303, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3346, out a0_3347, out a1_3348, out a2_3349, out a3_3350, out a4_3351, out a5_1217, out s2_117, out s3_3352, out s4_119, out s5_3353, out s6_3354, out s7_3355, out s8_3356, out s9, out s10_3357, out s11_3358)
l23035F56:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_180 + -932<i32>:byte], byte, word32) >u 2<32> l23035EFE
l23035F60:
	branch CONVERT(Mem70[0x4201FD46<32>:byte], byte, word32) >u 2<32> l23035EFE
l23035F6C:
	branch Mem70[0x4200DE84<32>:int32] == 0<32> l23035FD2
l23035FD2:
	word32 a5_3302
	xTaskGetTickCount(out a5_3302)
l23035F76:
	word32 a5_3303
	xTaskGetTickCountFromISR(out a5_3303)
l23035F7A:
	a3_1380 = s0_179 + 1536<i32>
	a0_1383 = 0x23084750<32>
l23035EF4:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_143 + -932<i32>:byte], byte, word32) <=u 2<32> l23035F96
l23035F96:
	branch CONVERT(Mem70[0x4201FD46<32>:byte], byte, word32) >u 2<32> l23035EFE
l23035FA2:
	branch Mem70[0x4200DE84<32>:int32] == 0<32> l23035FCC
l23035FCC:
	word32 a5_3304
	xTaskGetTickCount(out a5_3304)
l23035FAC:
	word32 a5_3305
	xTaskGetTickCountFromISR(out a5_3305)
l23035FB0:
	a3_1380 = s0_142 + 1536<i32>
	a0_1383 = 0x2308471C<32>
l23035E90:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_116 + -932<i32>:byte], byte, word32) >u 2<32> l23035EFE
l23035E9A:
	branch CONVERT(Mem70[0x4201FD46<32>:byte], byte, word32) >u 2<32> l23035EFE
l23035EA6:
	branch Mem70[0x4200DE84<32>:int32] == 0<32> l23035ED4
l23035ED4:
	word32 a5_3280
	xTaskGetTickCount(out a5_3280)
l23035EB0:
	word32 a5_3281
	xTaskGetTickCountFromISR(out a5_3281)
l23035EB4:
	a3_1380 = s0_115 + 1536<i32>
	a0_1383 = 0x230846D8<32>
l23035E2E:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_91 + -932<i32>:byte], byte, word32) >u 2<32> l23035EFE
l23035E38:
	branch CONVERT(Mem70[0x4201FD46<32>:byte], byte, word32) >u 2<32> l23035EFE
l23035E44:
	branch Mem70[0x4200DE84<32>:int32] == 0<32> l23035E72
l23035E72:
	word32 a5_3257
	xTaskGetTickCount(out a5_3257)
l23035E4E:
	word32 a5_3258
	xTaskGetTickCountFromISR(out a5_3258)
l23035E52:
l23035E5A:
	a3_1380 = s0_1457 + 1536<i32>
	a0_1383 = 0x230846A8<32>
l23035ECE:
	word32 a4_3264
	word32 s7_3268
	word32 s1_3259
	word32 a1_3261
	word32 a0_3260
	word32 a2_3262
	word32 a3_3263
	word32 s3_3265
	word32 s5_3266
	word32 s6_3267
	word32 s8_3269
	word32 s10_3270
	word32 s11_3271
	ra = bl_printk(ra, a0_1383, a3_1380, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_3259, out a0_3260, out a1_3261, out a2_3262, out a3_3263, out a4_3264, out a5_1217, out s2_117, out s3_3265, out s4_119, out s5_3266, out s6_3267, out s7_3268, out s8_3269, out s9, out s10_3270, out s11_3271)
l23035EFE:
	a5_1522 = a5_1217 + 4<32>
	branch s2_117 == 0<32> l23035E6E
l23035E6E:
	s2_1525 = 1<32>
l23035F08:
	Mem1527[a5_1522:byte] = SLICE(s2_117, byte, 0)
l23035F0E:
	word32 s10_1539 = Mem1529[dwArg0118 + 12<i32>:word32]
	word32 s6_1540 = Mem1529[dwArg0118 + 44<i32>:word32]
	s2Out = Mem1529[dwArg0118 + 76<i32>:word32]
	s6Out = s6_1540
	s9Out = s9
	s10Out = s10_1539
	return ra
vfs_uart_init_exit:


word32 hal_uart_send_flush(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_sync
// MayUse:  a0:[0..31]
// LiveOut: a5 s1
// Trashed: a0 a2 a5 s1 tp
// Preserved: sp
hal_uart_send_flush_entry:
l230365D8:
	word32 a5_10
	word32 s1_11 = bl_uart_flush(CONVERT(Mem5[a0:byte], byte, word32), out a5_10)
	a5Out = a5_10
	return s1_11
hal_uart_send_flush_exit:


void hal_uart_setbaud(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
hal_uart_setbaud_entry:
l230365EC:
	word32 a0_5 = CONVERT(Mem0[a0:byte], byte, word32)
l230365F0_thunk_bl_uart_setbaud:
	bl_uart_setbaud(a0_5)
	return
hal_uart_setbaud_exit:


void hal_uart_setconfig(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      uart_ioctl_cmd_setconfig
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
hal_uart_setconfig_entry:
l230365F4:
	word32 a0_5 = CONVERT(Mem0[a0:byte], byte, word32)
l230365F8_thunk_bl_uart_setconfig:
	bl_uart_setconfig(a0_5)
	return
hal_uart_setconfig_exit:


word32 hal_gpio_init_from_dts(word32 ra, word32 a0, word32 s2, word32 s9, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg14, word32 dwArg1C, word32 dwArg4C, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0174, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s2:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +001C:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0174:[0..31]
// LiveOut: a3 a4 a5 ra s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: mstatus sp
hal_gpio_init_from_dts_entry:
l230365FC:
	word32 dwLoc48_959 = s2
	word32 dwArg18_1007 = 0<32>
	word32 a0_38
	word32 a5_43
	word32 s6_2509
	word32 s0_2500
	word32 a1_2502
	word32 a3_2503
	word32 s1_2501
	word32 s5_2508
	word32 s4_2507
	word32 a4_2504
	word32 s3_2506
	word32 s2_2505
	word32 s8_2510
	word32 ra_108 = fdt_getprop(ra, a0, 0x23084A70<32>, dwLoc78, s10, dwLoc3C, dwArg58, dwArg88, out s0_2500, out s1_2501, out a0_38, out a1_2502, out a3_2503, out a4_2504, out a5_43, out s2_2505, out s3_2506, out s4_2507, out s5_2508, out s6_2509, out s8_2510)
	word32 s1_109 = 0xFFFFFFFF<32>
	branch a0_38 == 0<32> l23036652
l23036630:
	s1_109 = a5_43 << 0x18<u32> | a5_43 >>u 0x18<u32> | (a5_43 >>u 8<u32> & 255<i32>) << 16<i32> | (a5_43 >>u 16<i32> & 255<i32>) << 8<i32>
l23036652:
	word32 s0_175 = 0x42020000<32>
	word32 a4_106 = CONVERT(Mem37[0x4201FC5C<32>:byte], byte, word32)
	word32 a5_100 = 2<32>
	branch a4_106 >u 2<32> l2303669E
l23036660:
	a4_106 = CONVERT(Mem37[0x4201FD47<32>:byte], byte, word32)
	branch a4_106 >u 2<32> l2303669E
l2303666C:
	branch Mem37[0x4200DE84<32>:int32] == 0<32> l23036748
l23036748:
	word32 a5_2511
	xTaskGetTickCount(out a5_2511)
l23036676:
	word32 a5_2512
	xTaskGetTickCountFromISR(out a5_2512)
l2303667A:
	word32 a1_2544
	word32 s3_2548
	word32 s8_2553
	word32 s9_2554
	word32 s11_2556
	word32 s10_2555
	word32 a0_2543
	word32 a3_2546
	word32 a2_2545
	word32 s4_2549
	word32 s2_2547
	word32 s5_2550
	word32 s6_2551
	word32 s7_2552
	ra_108 = bl_printk(ra_108, 0x23084A84<32>, 0x23084A78<32>, dwLoc78, s10, dwLoc10, dwLoc0C, 0<32>, ra, out s1_109, out a0_2543, out a1_2544, out a2_2545, out a3_2546, out a4_106, out a5_100, out s2_2547, out s3_2548, out s4_2549, out s5_2550, out s6_2551, out s7_2552, out s8_2553, out s9_2554, out s10_2555, out s11_2556)
l2303669E:
	word32 s7_122 = 0<32>
	word32 s2_125 = 0x42020000<32>
	word32 s3_126 = 0x4200E000<32>
l230366B4:
	byte bLoc46_1013 = SLICE(dwLoc48_959, byte, 16)
	byte bLoc47_1009 = SLICE(dwLoc48_959, byte, 8)
	byte bLoc45_1021 = SLICE(dwLoc48_959, byte, 24)
	branch s7_122 >= s1_109 l23036728
l230366B8:
	word32 s1_147
	word32 s10_148
	word32 s11_149
	word32 s2_150
	word32 s5_153
	word32 s6_154
	word32 s9_157
	word32 a0_166
	word32 s5_180
	word32 a4_2518
	word32 a2_2516
	word32 s8_2523
	word32 s0_2513
	word32 a1_2515
	word32 a0_2514
	word32 a3_2517
	word32 a5_2519
	word32 s3_2521
	word32 a7_2520
	word32 a5_2525
	word32 s1_2524
	word32 s4_2522
	word32 s4_2526
	word32 s6_2527
	word32 s7_155
	word32 ra_174 = fdt_subnode_offset(snprintf(ra_108, fp + -88<i32>, 0xB<32>, 0x23084AB4<32>, dwLoc68, dwLoc48_959, dwLoc1C, dwArg00, dwArg04, s9, dwArg4C, out s0_2513, out s1_147, out a0_2514, out a1_2515, out a2_2516, out a3_2517, out a4_2518, out a5_2519, out a7_2520, out s2_150, out s3_2521, out s4_2522, out s5_153, out s6_154, out s7_155, out s8_2523, out s9_157, out s10_148, out s11_149), s1_147, s5_153, fp + -88<i32>, s2_150, s6_154, dwLoc78, dwLoc48_959, dwArg68, out s0_175, out s1_2524, out a0_166, out a5_2525, out s2_125, out s3_126, out s4_2526, out s5_180, out s6_2527)
	branch a0_166 >= 0<32> l23036754
l23036754:
	word32 dwLoc48_2478
	word32 a0_507
	word32 a3_505
	word32 a0_206
	word32 s5_220
	word32 a1_2530
	word32 s8_2540
	word32 t1_2528
	word32 a3_2532
	word32 a2_2531
	word32 a0_2529
	word32 a4_2533
	word32 a5_2534
	word32 a1_2535
	word32 a5_2538
	word32 a2_2536
	word32 s6_2539
	word32 a4_2537
	word32 s4_219
	word32 a3_209
	ra_108 = fdt_stringlist_get(memset(ra_174, fp + -76<i32>, 0<32>, 0xC<32>, out t1_2528, out a0_2529, out a1_2530, out a2_2531, out a3_2532, out a4_2533, out a5_2534), s5_180, 0x230846D0<32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_206, out a1_2535, out a2_2536, out a3_209, out a4_2537, out a5_2538, out s2_125, out s3_126, out s4_219, out s5_220, out s6_2539, out s8_2540)
	branch s9_157 == 4<32> l230367F0
l230367F0:
	word32 a1_2570
	word32 a2_2571
	word32 a4_2572
	word32 a5_2573
	branch memcmp(0x23084714<32>, a0_206, 4<32>, out a1_2570, out a2_2571, out a3_209, out a4_2572, out a5_2573) != 0<32> l23036780
l23036802:
	word32 a0_577
	word32 a3_575
	word32 a0_243
	word32 a5_248
	word32 s5_257
	word32 a4_2575
	word32 s6_2576
	word32 s8_2577
	word32 a1_2574
	ra_108 = fdt_getprop(ra_108, s5_220, s10_148 + -1692<i32>, dwLoc78, s10, dwLoc3C, dwArg58, dwArg88, out s0_175, out s1_109, out a0_243, out a1_2574, out a3_209, out a4_2575, out a5_248, out s2_125, out s3_126, out s4_219, out s5_257, out s6_2576, out s8_2577)
	branch a0_243 != 0<32> l23036890
l23036890:
	dwArg18_1007 = (a5_248 >>u 16<i32> & 255<i32>) << 8<i32> | ((a5_248 << 0x18<u32> | a5_248 >>u 0x18<u32>) | (a5_248 >>u 8<u32> & 255<i32>) << 16<i32>)
	word32 a0_281
	word32 a4_285
	word32 s5_295
	word32 a1_2578
	word32 s6_2581
	word32 s8_2582
	word32 a2_2579
	word32 a5_2580
	ra_108 = fdt_stringlist_get(ra_108, s5_257, s11_149 + -1856<i32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_281, out a1_2578, out a2_2579, out a3_209, out a4_285, out a5_2580, out s2_125, out s3_126, out s4_219, out s5_295, out s6_2581, out s8_2582)
	branch a4_285 != 3<32> l230369A6
l230368CE:
	word32 a1_2609
	word32 a5_2612
	word32 a2_2610
	word32 a4_2611
	branch memcmp(0x23086114<32>, a0_281, 3<32>, out a1_2609, out a2_2610, out a3_209, out a4_2611, out a5_2612) != 0<32> l230369A6
l230369A6:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem280[s0_175 + -932<i32>:byte], byte, word32) >u 4<32> l2303678A
l230369B0:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem280[s2_125 + -697<i32>:byte], byte, word32) >u 4<32> l2303678A
l230369B8:
	branch Mem280[s3_126 + -380<i32>:int32] == 0<32> l230369E2
l230369E2:
	word32 a5_2669
	xTaskGetTickCount(out a5_2669)
l230369BE:
	word32 a5_2670
	xTaskGetTickCountFromISR(out a5_2670)
l230369C2:
l230368E0:
	bLoc47_1009 = 0<8>
	word32 a0_340
	word32 a5_345
	word32 s5_354
	word32 s6_2616
	word32 s8_2617
	word32 a4_2615
	word32 a2_2614
	word32 a1_2613
	ra_108 = fdt_stringlist_get(ra_108, s5_295, 0x23084B34<32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_340, out a1_2613, out a2_2614, out a3_209, out a4_2615, out a5_345, out s2_125, out s3_126, out s4_219, out s5_354, out s6_2616, out s8_2617)
	branch a5_345 != 2<32> l23036A06
l23036902:
	word32 a5_369
	word32 a4_371
	word32 a2_2619
	word32 a1_2618
	branch memcmp(0x23084B70<32>, a0_340, 2<32>, out a1_2618, out a2_2619, out a3_209, out a4_371, out a5_369) != 0<32> l230369E8
l230369E8:
	branch a4_371 != a5_369 l23036A06
l230369EE:
	word32 a4_2647
	word32 a5_2648
	word32 a2_2646
	word32 a1_2645
	branch memcmp(0x23084B74<32>, a0_340, 2<32>, out a1_2645, out a2_2646, out a3_209, out a4_2647, out a5_2648) != 0<32> l23036A06
l23036A06:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word16, 16), 0<8>, 0<8>) (alias)
	branch CONVERT(Mem387[s0_175 + -932<i32>:byte], byte, word32) >u 4<32> l2303678A
l23036A10:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word16, 16), 0<8>, 0<8>) (alias)
	branch CONVERT(Mem387[s2_125 + -697<i32>:byte], byte, word32) >u 4<32> l2303678A
l23036A18:
	branch Mem387[s3_126 + -380<i32>:int32] == 0<32> l23036A2C
l23036A2C:
	word32 a5_2654
	xTaskGetTickCount(out a5_2654)
l23036A1E:
	word32 a5_2655
	xTaskGetTickCountFromISR(out a5_2655)
l23036A22:
l23036A00:
	bLoc46_1013 = 0<8>
l23036918:
	bLoc46_1013 = 1<8>
l2303691E:
	word32 a0_419
	word32 s5_433
	word32 a5_2651
	word32 s8_2653
	word32 s6_2652
	word32 a2_2650
	word32 a1_2649
	word32 a4_423
	ra_108 = fdt_stringlist_get(ra_108, s5_354, 0x2307DFD4<32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_419, out a1_2649, out a2_2650, out a3_209, out a4_423, out a5_2651, out s2_125, out s3_126, out s4_219, out s5_433, out s6_2652, out s8_2653)
	branch a4_423 != 5<32> l23036A32
l2303693C:
	word32 a1_2620
	word32 a5_2622
	word32 a2_2621
	branch memcmp(0x23084B78<32>, a0_419, 5<32>, out a1_2620, out a2_2621, out a3_209, out a4_423, out a5_2622) != 0<32> l23036A32
l23036A32:
	branch a4_423 != 9<32> l23036A54
l23036A3A:
	word32 a2_2637
	word32 a4_2638
	word32 a5_2639
	word32 a1_2636
	branch memcmp(0x23084B80<32>, a0_419, 9<32>, out a1_2636, out a2_2637, out a3_209, out a4_2638, out a5_2639) != 0<32> l23036A54
l23036A54:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem418[s0_175 + -932<i32>:byte], byte, word32) >u 4<32> l2303678A
l23036A5E:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem418[s2_125 + -697<i32>:byte], byte, word32) >u 4<32> l2303678A
l23036A66:
	branch Mem418[s3_126 + -380<i32>:int32] == 0<32> l23036A7A
l23036A7A:
	word32 a5_2667
	xTaskGetTickCount(out a5_2667)
l23036A6C:
	word32 a5_2668
	xTaskGetTickCountFromISR(out a5_2668)
l23036A70:
l230369CA:
	a3_505 = s4_219 + -1416<i32>
	a0_507 = 0x23084B3C<32>
l23036A4C:
	bLoc45_1021 = 1<8>
l23036950:
	bLoc45_1021 = 0<8>
l23036954:
	word32 a0_524
	word32 a5_529
	word32 s8_2644
	word32 s6_2643
	word32 s5_2642
	word32 a1_2640
	word32 a4_2641
	ra_108 = fdt_getprop(ra_108, s5_433, 0x230817E8<32>, dwLoc78, s10, dwLoc3C, dwArg58, dwArg88, out s0_175, out s1_109, out a0_524, out a1_2640, out a3_209, out a4_2641, out a5_529, out s2_125, out s3_126, out s4_219, out s5_2642, out s6_2643, out s8_2644)
	branch a0_524 != 0<32> l23036A86
l23036A86:
	word32 a3_549 = a5_529 >>u 8<u32> & 255<i32>
	a3_209 = a3_549 << 16<i32>
	dwArg1C = (a5_529 >>u 16<i32> & 255<i32>) << 8<i32> | ((a5_529 << 0x18<u32> | a5_529 >>u 0x18<u32>) | a3_549 << 16<i32>)
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 1<8>) (alias)
l2303696A:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem523[s0_175 + -932<i32>:byte], byte, word32) >u 4<32> l2303678A
l23036974:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem523[s2_125 + -697<i32>:byte], byte, word32) >u 4<32> l2303678A
l2303697C:
	branch Mem523[s3_126 + -380<i32>:int32] == 0<32> l23036A80
l23036A80:
	word32 a5_2623
	xTaskGetTickCount(out a5_2623)
l23036984:
	word32 a5_2624
	xTaskGetTickCountFromISR(out a5_2624)
l23036988:
	a3_575 = s4_219 + -1416<i32>
	a0_577 = 0x23084B8C<32>
l23036812:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch s9_157 <u CONVERT(Mem205[s0_175 + -932<i32>:byte], byte, word32) l2303678A
l2303681A:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch s9_157 <u CONVERT(Mem205[s2_125 + -697<i32>:byte], byte, word32) l2303678A
l23036822:
	branch Mem205[s3_126 + -380<i32>:int32] == 0<32> l2303688A
l2303688A:
	word32 a5_2583
	xTaskGetTickCount(out a5_2583)
l23036828:
	word32 a5_2584
	xTaskGetTickCountFromISR(out a5_2584)
l2303682C:
	a3_575 = s4_219 + -1416<i32>
	a0_577 = 0x23084B08<32>
l23036848:
	word32 a5_2629
	word32 s5_2630
	word32 s10_2634
	word32 s11_2635
	word32 s9_2633
	word32 s6_2631
	word32 s8_2632
	word32 a1_2626
	word32 a4_2628
	word32 a2_2627
	word32 a0_2625
	ra_108 = bl_printk(ra_108, a0_577, a3_575, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2625, out a1_2626, out a2_2627, out a3_209, out a4_2628, out a5_2629, out s2_125, out s3_126, out s4_219, out s5_2630, out s6_2631, out s7_155, out s8_2632, out s9_2633, out s10_2634, out s11_2635)
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, bLoc47_1009, 0<8>) (alias)
l23036780:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem205[s0_175 + -932<i32>:byte], byte, word32) <=u 2<32> l2303684E
l2303684E:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem205[s2_125 + -697<i32>:byte], byte, word32) >u 2<32> l2303678A
l23036856:
	branch Mem205[s3_126 + -380<i32>:int32] == 0<32> l23036884
l23036884:
	word32 a5_2671
	xTaskGetTickCount(out a5_2671)
l2303685C:
	word32 a5_2672
	xTaskGetTickCountFromISR(out a5_2672)
l23036860:
	a3_505 = s4_219 + -1416<i32>
	a0_507 = 0x23084AE0<32>
l2303687E:
	word32 a1_2657
	word32 a2_2658
	word32 s6_2662
	word32 s8_2663
	word32 s10_2665
	word32 s11_2666
	word32 s9_2664
	word32 s5_2661
	word32 a4_2659
	word32 a5_2660
	word32 a0_2656
	ra_108 = bl_printk(ra_108, a0_507, a3_505, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2656, out a1_2657, out a2_2658, out a3_209, out a4_2659, out a5_2660, out s2_125, out s3_126, out s4_219, out s5_2661, out s6_2662, out s7_155, out s8_2663, out s9_2664, out s10_2665, out s11_2666)
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, bLoc47_1009, 0<8>) (alias)
l2303678A:
	a5_100 = CONVERT(SLICE(dwLoc48_2478, byte, 0), byte, word32)
	a4_106 = 1<32>
	branch a5_100 != 1<32> l23036AB8
l23036AB8:
	branch a5_100 != 0<32> l230367EC
l23036ABC:
	a4_106 = CONVERT(Mem698[s0_175 + -932<i32>:byte], byte, word32)
	a5_100 = 4<32>
	branch a4_106 >u 4<32> l230367EC
l23036AC6:
	a4_106 = CONVERT(Mem698[s2_125 + -697<i32>:byte], byte, word32)
	branch a4_106 >u 4<32> l230367EC
l23036ACE:
	branch Mem698[s3_126 + -380<i32>:int32] == 0<32> l23036AFA
l23036AFA:
	word32 a5_2585
	xTaskGetTickCount(out a5_2585)
l23036AD4:
	word32 a5_2586
	xTaskGetTickCountFromISR(out a5_2586)
l23036AD8:
	word32 a3_2601
	word32 s4_2602
	word32 s9_2606
	word32 s10_2607
	word32 s11_2608
	word32 s8_2605
	word32 s5_2603
	word32 s6_2604
	word32 a0_2598
	word32 a2_2600
	word32 a1_2599
	ra_108 = bl_printk(ra_108, 0x23084B8C<32>, s4_219 + -1416<i32>, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2598, out a1_2599, out a2_2600, out a3_2601, out a4_106, out a5_100, out s2_125, out s3_126, out s4_2602, out s5_2603, out s6_2604, out s7_155, out s8_2605, out s9_2606, out s10_2607, out s11_2608)
l23036794:
	word32 a4_758 = CONVERT(Mem698[s0_175 + -932<i32>:byte], byte, word32)
	word32 a5_759 = 2<32>
	dwLoc48_1481 = dwLoc48_2478 (alias)
	branch a4_758 >u 2<32> l230367E4
l2303679E:
	a4_758 = CONVERT(Mem698[s2_125 + -697<i32>:byte], byte, word32)
	branch a4_758 >u 2<32> l230367E4
l230367A6:
	word32 a5_763
	branch Mem698[s3_126 + -380<i32>:int32] == 0<32> l23036AB2
l23036AB2:
	xTaskGetTickCount(out a5_763)
l230367AE:
	xTaskGetTickCountFromISR(out a5_763)
l230367B2:
	dwArg00 = a5_763
	word32 s9_2595
	word32 s10_2596
	word32 s11_2597
	word32 s5_2592
	word32 s8_2594
	word32 s6_2593
	word32 s4_2591
	word32 a1_2588
	word32 s3_2590
	word32 a2_2589
	word32 a0_2587
	ra_108 = bl_printk(ra_108, 0x23084BBC<32>, dwArg0174 + -1416<i32>, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2587, out a1_2588, out a2_2589, out a3_209, out a4_758, out a5_759, out s2_125, out s3_2590, out s4_2591, out s5_2592, out s6_2593, out s7_155, out s8_2594, out s9_2595, out s10_2596, out s11_2597)
l230367E4:
	ra_108 = loopset_led_trigger(ra_108, s1_109, a3_209, a4_758, a5_759, s2_125, mstatus, dwLoc78, dwLoc6C, dwLoc60, dwLoc5C, dwLoc48_2478, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg14, dwArg1C, dwArg64, dwArg80, dwArg84, dwArg98, dwArgA8, dwArgD8, out s0_175, out s1_109, out a4_106, out a5_100, out s2_125, out s3_126, out mstatus)
l230367EC:
	s7_122 = s7_155 + 1<32>
	dwLoc48_959 = dwLoc48_1481
l230366E0:
	a4_106 = CONVERT(Mem165[s0_175 + -932<i32>:byte], byte, word32)
	a5_100 = 2<32>
	branch a4_106 >u 2<32> l23036728
l230366EA:
	a4_106 = CONVERT(Mem165[0x4201FD47<32>:byte], byte, word32)
	branch a4_106 >u 2<32> l23036728
l230366F6:
	branch Mem165[0x4200DE84<32>:int32] == 0<32> l2303674E
l2303674E:
	word32 a5_2541
	xTaskGetTickCount(out a5_2541)
l23036700:
	word32 a5_2542
	xTaskGetTickCountFromISR(out a5_2542)
l23036704:
	word32 s9_2567
	word32 s11_2569
	word32 s10_2568
	word32 s8_2566
	word32 s5_2563
	word32 s7_2565
	word32 s6_2564
	word32 s4_2562
	word32 a3_2561
	word32 a1_2559
	word32 a2_2560
	word32 s1_2557
	word32 a0_2558
	bl_printk(ra_174, 0x23084ABC<32>, 0x23084A78<32>, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_2557, out a0_2558, out a1_2559, out a2_2560, out a3_2561, out a4_106, out a5_100, out s2_125, out s3_126, out s4_2562, out s5_2563, out s6_2564, out s7_2565, out s8_2566, out s9_2567, out s10_2568, out s11_2569)
l23036728:
	s0Out = s0_175
	a3Out = dwLoc14
	a4Out = a4_106
	a5Out = a5_100
	s2Out = s2_125
	s3Out = s3_126
	return dwArg0158
hal_gpio_init_from_dts_exit:


word32 _dump_partition(word32 ra, word32 a3, word32 s6, word32 dwArg1C, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_dump
//      hal_boot2_init
// MayUse:  a3:[0..31] ra:[0..31] s6:[0..31] Stack +001C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut: ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
_dump_partition_entry:
l23036B00:
	word32 a3_39
	word32 a3_64
	word32 a3_89
	word32 a3_114
	word32 a3_139
	word32 a3_164
	word32 s1_193
	word32 a5_540
	word32 a4_539
	word32 a2_538
	word32 a1_537
	word32 a0_536
	word32 s1_535
	word32 s2_541
	word32 s3_542
	word32 s4_543
	word32 s5_544
	word32 s6_545
	word32 s7_546
	word32 s8_547
	word32 s9_548
	word32 s10_549
	word32 s11_550
	word32 s1_551
	word32 a0_552
	word32 a1_553
	word32 a2_554
	word32 a4_555
	word32 a5_556
	word32 s2_557
	word32 s3_558
	word32 s4_559
	word32 s5_560
	word32 s6_561
	word32 s7_562
	word32 s8_563
	word32 s9_564
	word32 s10_565
	word32 s11_566
	word32 s1_567
	word32 a0_568
	word32 a1_569
	word32 a2_570
	word32 a4_571
	word32 a5_572
	word32 s2_573
	word32 s3_574
	word32 s4_575
	word32 s5_576
	word32 s6_577
	word32 s7_578
	word32 s8_579
	word32 s9_580
	word32 s10_581
	word32 s11_582
	word32 s1_583
	word32 a0_584
	word32 a1_585
	word32 a2_586
	word32 a4_587
	word32 a5_588
	word32 s2_589
	word32 s3_590
	word32 s4_591
	word32 s5_592
	word32 s6_593
	word32 s7_594
	word32 s8_595
	word32 s9_596
	word32 s10_597
	word32 s11_598
	word32 s1_599
	word32 a0_600
	word32 a1_601
	word32 a2_602
	word32 a4_603
	word32 a5_604
	word32 s2_605
	word32 s3_606
	word32 s4_607
	word32 s5_608
	word32 s6_609
	word32 s7_610
	word32 s8_611
	word32 s9_612
	word32 s10_613
	word32 s11_614
	word32 s1_615
	word32 a0_616
	word32 a1_617
	word32 a2_618
	word32 a4_619
	word32 a5_620
	word32 s2_621
	word32 s3_622
	word32 s4_623
	word32 s5_624
	word32 s6_625
	word32 s7_626
	word32 s8_627
	word32 s9_628
	word32 s10_629
	word32 s11_630
	word32 a0_631
	word32 a1_632
	word32 a2_633
	word32 a4_634
	word32 a5_635
	word32 s2_636
	word32 s3_637
	word32 s4_638
	word32 s5_639
	word32 s6_640
	word32 s7_641
	word32 s8_642
	word32 s9_643
	word32 s10_644
	word32 s11_645
	word32 a3_189
	word32 ra_192 = bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(ra, 0x23084C24<32>, a3, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_535, out a0_536, out a1_537, out a2_538, out a3_39, out a4_539, out a5_540, out s2_541, out s3_542, out s4_543, out s5_544, out s6_545, out s7_546, out s8_547, out s9_548, out s10_549, out s11_550), 0x23084C48<32>, a3_39, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_551, out a0_552, out a1_553, out a2_554, out a3_64, out a4_555, out a5_556, out s2_557, out s3_558, out s4_559, out s5_560, out s6_561, out s7_562, out s8_563, out s9_564, out s10_565, out s11_566), 0x23084C5C<32>, a3_64, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_567, out a0_568, out a1_569, out a2_570, out a3_89, out a4_571, out a5_572, out s2_573, out s3_574, out s4_575, out s5_576, out s6_577, out s7_578, out s8_579, out s9_580, out s10_581, out s11_582), 0x23084C70<32>, a3_89, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_583, out a0_584, out a1_585, out a2_586, out a3_114, out a4_587, out a5_588, out s2_589, out s3_590, out s4_591, out s5_592, out s6_593, out s7_594, out s8_595, out s9_596, out s10_597, out s11_598), 0x23084C80<32>, a3_114, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_599, out a0_600, out a1_601, out a2_602, out a3_139, out a4_603, out a5_604, out s2_605, out s3_606, out s4_607, out s5_608, out s6_609, out s7_610, out s8_611, out s9_612, out s10_613, out s11_614), 0x23084C8C<32>, a3_139, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_615, out a0_616, out a1_617, out a2_618, out a3_164, out a4_619, out a5_620, out s2_621, out s3_622, out s4_623, out s5_624, out s6_625, out s7_626, out s8_627, out s9_628, out s10_629, out s11_630), 0x23084C9C<32>, a3_164, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_193, out a0_631, out a1_632, out a2_633, out a3_189, out a4_634, out a5_635, out s2_636, out s3_637, out s4_638, out s5_639, out s6_640, out s7_641, out s8_642, out s9_643, out s10_644, out s11_645)
	word32 s2_206 = 0<32>
	word32 s1_207 = s1_193 + -1592<i32>
	word32 s5_208 = 0x23085000<32>
l23036BAE:
	branch s2_206 < CONVERT(Mem32[s1_207 + 10<i32>:uint16], uint16, word32) l23036BD6
l23036BD6:
	word32 a3_232
	word32 s6_243
	word32 a3_257
	word32 s7_269
	word32 a3_281
	word32 s8_294
	word32 a3_305
	word32 s9_319
	word32 a3_329
	word32 s4_338
	word32 a3_353
	word32 s4_362
	word32 a3_378
	word32 s4_387
	word32 a3_402
	word32 s4_411
	word32 a3_426
	word32 s10_431
	word32 s1_646
	word32 a0_647
	word32 a1_648
	word32 a2_649
	word32 a4_650
	word32 a5_651
	word32 s2_652
	word32 s3_653
	word32 s4_654
	word32 s5_655
	word32 s7_656
	word32 s8_657
	word32 s9_658
	word32 s10_659
	word32 s11_660
	word32 s1_661
	word32 a0_662
	word32 a1_663
	word32 a2_664
	word32 a4_665
	word32 a5_666
	word32 s2_667
	word32 s3_668
	word32 s4_669
	word32 s5_670
	word32 s6_671
	word32 s8_672
	word32 s9_673
	word32 s10_674
	word32 s11_675
	word32 s1_676
	word32 a0_677
	word32 a1_678
	word32 a2_679
	word32 a4_680
	word32 a5_681
	word32 s2_682
	word32 s3_683
	word32 s4_684
	word32 s5_685
	word32 s6_686
	word32 s7_687
	word32 s9_688
	word32 s10_689
	word32 s11_690
	word32 s1_691
	word32 a0_692
	word32 a1_693
	word32 a2_694
	word32 a4_695
	word32 a5_696
	word32 s2_697
	word32 s3_698
	word32 s4_699
	word32 s5_700
	word32 s6_701
	word32 s7_702
	word32 s8_703
	word32 s10_704
	word32 s11_705
	word32 s1_706
	word32 a0_707
	word32 a1_708
	word32 a2_709
	word32 a4_710
	word32 a5_711
	word32 s2_712
	word32 s3_713
	word32 s5_714
	word32 s6_715
	word32 s7_716
	word32 s8_717
	word32 s9_718
	word32 s10_719
	word32 s11_720
	word32 s1_721
	word32 a0_722
	word32 a1_723
	word32 a2_724
	word32 a4_725
	word32 a5_726
	word32 s2_727
	word32 s3_728
	word32 s5_729
	word32 s6_730
	word32 s7_731
	word32 s8_732
	word32 s9_733
	word32 s10_734
	word32 s11_735
	word32 s1_736
	word32 a0_737
	word32 a1_738
	word32 a2_739
	word32 a4_740
	word32 a5_741
	word32 s2_742
	word32 s3_743
	word32 s5_744
	word32 s6_745
	word32 s7_746
	word32 s8_747
	word32 s9_748
	word32 s10_749
	word32 s11_750
	word32 s1_751
	word32 a0_752
	word32 a1_753
	word32 a2_754
	word32 a4_755
	word32 a5_756
	word32 s2_757
	word32 s3_758
	word32 s5_759
	word32 s6_760
	word32 s7_761
	word32 s8_762
	word32 s9_763
	word32 s10_764
	word32 s11_765
	word32 s1_766
	word32 a0_767
	word32 a1_768
	word32 a2_769
	word32 a4_770
	word32 a5_771
	word32 s2_772
	word32 s3_773
	word32 s4_774
	word32 s5_775
	word32 s6_776
	word32 s7_777
	word32 s8_778
	word32 s9_779
	word32 s11_780
	word32 a0_781
	word32 a1_782
	word32 a2_783
	word32 a4_784
	word32 a5_785
	word32 s3_786
	word32 s4_787
	word32 s6_788
	word32 s7_789
	word32 s8_790
	word32 s9_791
	word32 s10_792
	word32 s11_793
	ra_192 = bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(ra_192, s5_208 + -772<i32>, a3_189, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_646, out a0_647, out a1_648, out a2_649, out a3_232, out a4_650, out a5_651, out s2_652, out s3_653, out s4_654, out s5_655, out s6_243, out s7_656, out s8_657, out s9_658, out s10_659, out s11_660), s6_243 + -764<i32>, a3_232, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_661, out a0_662, out a1_663, out a2_664, out a3_257, out a4_665, out a5_666, out s2_667, out s3_668, out s4_669, out s5_670, out s6_671, out s7_269, out s8_672, out s9_673, out s10_674, out s11_675), s7_269 + -752<i32>, a3_257, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_676, out a0_677, out a1_678, out a2_679, out a3_281, out a4_680, out a5_681, out s2_682, out s3_683, out s4_684, out s5_685, out s6_686, out s7_687, out s8_294, out s9_688, out s10_689, out s11_690), s8_294 + -756<i32>, a3_281, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_691, out a0_692, out a1_693, out a2_694, out a3_305, out a4_695, out a5_696, out s2_697, out s3_698, out s4_699, out s5_700, out s6_701, out s7_702, out s8_703, out s9_319, out s10_704, out s11_705), s9_319 + -744<i32>, a3_305, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_706, out a0_707, out a1_708, out a2_709, out a3_329, out a4_710, out a5_711, out s2_712, out s3_713, out s4_338, out s5_714, out s6_715, out s7_716, out s8_717, out s9_718, out s10_719, out s11_720), s4_338 + -732<i32>, a3_329, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_721, out a0_722, out a1_723, out a2_724, out a3_353, out a4_725, out a5_726, out s2_727, out s3_728, out s4_362, out s5_729, out s6_730, out s7_731, out s8_732, out s9_733, out s10_734, out s11_735), s4_362 + -732<i32>, a3_353, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_736, out a0_737, out a1_738, out a2_739, out a3_378, out a4_740, out a5_741, out s2_742, out s3_743, out s4_387, out s5_744, out s6_745, out s7_746, out s8_747, out s9_748, out s10_749, out s11_750), s4_387 + -732<i32>, a3_378, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_751, out a0_752, out a1_753, out a2_754, out a3_402, out a4_755, out a5_756, out s2_757, out s3_758, out s4_411, out s5_759, out s6_760, out s7_761, out s8_762, out s9_763, out s10_764, out s11_765), s4_411 + -732<i32>, a3_402, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_766, out a0_767, out a1_768, out a2_769, out a3_426, out a4_770, out a5_771, out s2_772, out s3_773, out s4_774, out s5_775, out s6_776, out s7_777, out s8_778, out s9_779, out s10_431, out s11_780), s10_431 + -724<i32>, a3_426, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_207, out a0_781, out a1_782, out a2_783, out a3_189, out a4_784, out a5_785, out s2_206, out s3_786, out s4_787, out s5_208, out s6_788, out s7_789, out s8_790, out s9_791, out s10_792, out s11_793)
l23036BBA:
	0<32> = dwArg0128
	0<32> = dwArg1C
	s2Out = s2_206
	return ra_192
_dump_partition_exit:


void hal_boot2_update_ptable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
hal_boot2_update_ptable_entry:
l23036C4C:
	word32 a5_10 = CONVERT(CONVERT(Mem5[a0 + 2<i32>:byte], byte, word32) <u 1<i32>, bool, word32)
	Mem11[a0 + 2<i32>:byte] = SLICE(a5_10, byte, 0)
	word32 a0_12 = Mem11[a5_10 + 32<i32>:word32]
	word32 a1_13 = CONVERT(Mem11[0x4200D9C8<32>:byte], byte, word32)
	Mem16[a5_10 + 0x21<32>:word32] = a0_12
	PtTable_Update_Entry(CONVERT(a1_13 <u 1<i32>, bool, word32), 0x4200D9CC<32>, a0_12)
	return
hal_boot2_update_ptable_exit:


word32 hal_boot2_get_flash_addr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl602_start
// MayUse: 
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
hal_boot2_get_flash_addr_entry:
l23036C82:
	return CONVERT(Mem0[0x4200D9D2<32>:uint16], uint16, word32) + 0x42049C3C<32>
hal_boot2_get_flash_addr_exit:


word32 hal_boot2_partition_bus_addr(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_partition_bus_addr_active
//      hal_boot2_partition_bus_addr_inactive
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_bus_addr_entry:
l23036C9E:
	branch Mem0[0x4200D9CC<32>:int32] != 0x54504642<32> l23036E0E
l23036E0E:
	s1Out = s1
	a0Out = 0xFFFFFFFB<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s6Out = s6
	return s0
l23036CB6:
	word32 s6_111 = 0x4200D9C8<32>
	word32 s4_47 = 0x4200D9DF<32>
	word32 s0_48 = 0<32>
	a4_106 = a4
	a3_105 = a3
l23036CE8:
	word32 a4_106
	word32 a3_105
	branch s0_48 >= CONVERT(Mem32[0x4200D9D2<32>:uint16], uint16, word32) l23036D00
l23036CF0:
	s4_47 = s4_47 + 36<i32>
	word32 a2_402
	word32 a5_403
	word32 a1_401
	branch strcmp(s4_47 + 0<i32>, a0, out a1_401, out a2_402, out a3_105, out a4_106, out a5_403) != 0<32> l23036D24
l23036D24:
	s0_48 = s0_48 + 1<32>
l23036D00:
	word32 a5_115 = CONVERT(Mem32[0x4200D9D2<32>:uint16], uint16, word32)
	word32 a0_116 = 0xFFFFFFFE<32>
	branch s0_48 != a5_115 l23036D28
l23036D28:
	word32 a2_74 = s0_48 + 36<i32>
	a4_106 = CONVERT(Mem32[a2_74 + 0x4200D9DE<32>:byte], byte, word32)
	word32 s5_79 = Mem32[a2_74 + 0x4200D9E8<32>:int32]
	word32 s4_80 = Mem32[a2_74 + 0x4200D9EC<32>:int32]
	Mem83[a5:word32] = a4_106
	Mem87[a3:word32] = a4_106
	Mem92[a4:word32] = 36<i32>
	word32 s0_112 = 0<32>
l23036D5C:
	branch s0_112 >= CONVERT(Mem92[0x4200D9D2<32>:uint16], uint16, word32) l23036D76
l23036D64:
	s6_111 = s6_111 + 36<i32>
	word32 a1_404
	word32 a5_406
	word32 a2_405
	branch strcmp(s6_111 + 23<i32>, 0x23080D18<32>, out a1_404, out a2_405, out a3_105, out a4_106, out a5_406) != 0<32> l23036E0A
l23036E0A:
	s0_112 = s0_112 + 1<32>
l23036D76:
	a5_115 = CONVERT(Mem92[0x4200D9D2<32>:uint16], uint16, word32)
	a0_116 = -140<i32>
	branch s0_112 == a5_115 l23036D0A
l23036D82:
	branch s5_79 == 0<32> l23036D9E
l23036D86:
	a0_116 = 0xFFFFFFEA<32>
	a5_115 = Mem92[a4_106 + 32<i32>:word32]
	branch s5_79 <u a4_106 l23036D0A
l23036D98:
	a5_115 = Mem92[a5_115 + 36<i32>:word32]
	branch s5_79 <u a5_115 l23036D0A
l23036D9E:
	branch s4_80 == 0<32> l23036DBA
l23036DA2:
	a0_116 = 0xFFFFFFEA<32>
	a5_115 = Mem92[a4_106 + 32<i32>:word32]
	branch s4_80 <u a4_106 l23036D0A
l23036DB4:
	a5_115 = Mem92[a5_115 + 36<i32>:word32]
	branch s4_80 <u a5_115 l23036D0A
l23036DBA:
	word32 a4_140 = s0_112 + 36<i32>
	a3_105 = 1<32>
	a0_116 = 0xFFFFFFF2<32>
	a4_106 = a4_140 + 0x4200D9C8<32>
	a5_115 = CONVERT(Mem92[a4_140 + 0x4200D9DE<32>:byte], byte, word32)
	branch a5_115 >u 1<32> l23036D0A
l23036DD0:
	Mem169[a1:word32] = s5_79 + 0x22FFF000<32> - Mem92[((a5_115 + (s0_112 + 9<32>)) + 4<32> << 2<i32>) + 0x4200D9D8<32>:word32]
	a5_115 = CONVERT(Mem169[a4_140 + 0x4200D9DE<32>:byte], byte, word32)
	Mem182[a2:word32] = s4_80 + 0x22FFF000<32> - a5_115
	a3_105 = 0x22FFF000<32>
	a0_116 = 0<32>
l23036D0A:
	0<32> = dwArg0128
	s1Out = 0x4200D9C8<32>
	a0Out = a0_116
	a3Out = a3_105
	a4Out = a4_106
	a5Out = a5_115
	s2Out = a2
	s3Out = a1
	s6Out = s6_111
	return s4
hal_boot2_partition_bus_addr_exit:


word32 hal_boot2_partition_bus_addr_active(word32 a0, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
//      bl_mtd_open
// MayUse:  a0:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 a5 s0 s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_bus_addr_active_entry:
l23036E12:
	word32 a0_20
	word32 a3_26
	word32 a4_27
	word32 a5_28
	word32 s1_30
	word32 s2_31
	word32 s3_32
	word32 s6_35
	word32 s0_29 = hal_boot2_partition_bus_addr(a0, fp + -36<i32>, fp + -32<i32>, fp + -28<i32>, fp + -24<i32>, fp + -20<i32>, dwArgF8, out s1_30, out a0_20, out a3_26, out a4_27, out a5_28, out s2_31, out s3_32, out s6_35)
	branch a0_20 != 0<32> l23036E3C
l23036E2E:
	branch a5_28 == 0<32> l23036E46
l23036E46:
l23036E32:
l23036E34:
	Mem48[a4_27:word32] = s1_30
	branch a5_28 == 0<32> l23036E4A
l23036E4A:
l23036E38:
l23036E3A:
	Mem56[a5_28:word32] = s0_29
l23036E3C:
	s1Out = s1_30
	a0Out = a0_20
	a3Out = a3_26
	a5Out = a5_28
	s2Out = s2_31
	s3Out = s3_32
	s6Out = s6_35
	return dwArgE4
hal_boot2_partition_bus_addr_active_exit:


word32 hal_boot2_partition_bus_addr_inactive(word32 a0, word32 dwArgF8, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_mtd_open
// MayUse:  a0:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_bus_addr_inactive_entry:
l23036E4E:
	word32 a0_20
	word32 a3_26
	word32 a4_27
	word32 a5_28
	word32 s1_30
	word32 s6_144
	word32 s2_142
	word32 s3_143
	word32 s0_29 = hal_boot2_partition_bus_addr(a0, fp + -36<i32>, fp + -32<i32>, fp + -28<i32>, fp + -24<i32>, fp + -20<i32>, dwArgF8, out s1_30, out a0_20, out a3_26, out a4_27, out a5_28, out s2_142, out s3_143, out s6_144)
	branch a0_20 != 0<32> l23036E78
l23036E6A:
	branch a5_28 == 0<32> l23036E82
l23036E82:
l23036E6E:
l23036E70:
	Mem48[a4_27:word32] = s1_30
	branch a5_28 == 0<32> l23036E86
l23036E86:
l23036E74:
l23036E76:
	Mem56[a5_28:word32] = s0_29
l23036E78:
	a0Out = a0_20
	a3Out = a3_26
	a5Out = a5_28
	return s1_30
hal_boot2_partition_bus_addr_inactive_exit:


word32 hal_boot2_partition_addr(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_partition_addr_active
//      hal_boot2_partition_addr_inactive
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_addr_entry:
l23036E8A:
	word32 a0_158
	word32 s1_170 = 0x4200E000<32>
	branch Mem25[0x4200D9CC<32>:int32] != 0x54504642<32> l23036F42
l23036F42:
	a0_158 = 0xFFFFFFFB<32>
l23036EB8:
	s2 = 0x4200D9C8<32>
	s1_170 = 0x4200D9C8<32>
	word32 s0_44 = 0<32>
l23036ECE:
	branch s0_44 >= CONVERT(Mem25[0x4200D9D2<32>:uint16], uint16, word32) l23036EE6
l23036ED6:
	s1_170 = s1_170 + 36<i32>
	word32 a1_195
	word32 a2_196
	word32 a5_197
	branch strcmp(s1_170 + 23<i32>, a0, out a1_195, out a2_196, out a3, out a4, out a5_197) != 0<32> l23036F08
l23036F08:
	s0_44 = s0_44 + 1<32>
l23036EE6:
	a5 = CONVERT(Mem25[0x4200D9D2<32>:uint16], uint16, word32)
	a0_158 = 0xFFFFFFFE<32>
	branch s0_44 != a5 l23036F0C
l23036F0C:
	Mem78[a1:word32] = a4
	Mem82[a2:word32] = a4
	word32 a0_83 = Mem82[a4 + 40<i32>:word32]
	Mem86[a3:word32] = a4
	Mem90[a4:word32] = 36<i32>
	a5 = CONVERT(Mem90[a0_83 + 22<i32>:byte], byte, word32)
	Mem95[a5:word32] = a5
	a0_158 = 0<32>
l23036EF0:
	0<32> = dwArg0128
	s1Out = s1_170
	a0Out = a0_158
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	return s4
hal_boot2_partition_addr_exit:


word32 hal_boot2_partition_addr_active(word32 a0, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
//      bl_mtd_open
// MayUse:  a0:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 a5 s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_addr_active_entry:
l23036F46:
	word32 a0_20
	word32 s1_25
	word32 a5_30
	word32 s2_31
	word32 a3_37
	word32 a4_38
	word32 s0_24 = hal_boot2_partition_addr(a0, fp + -36<i32>, fp + -32<i32>, fp + -28<i32>, fp + -24<i32>, fp + -20<i32>, dwArgF8, out s1_25, out a0_20, out a3_37, out a4_38, out a5_30, out s2_31)
	branch a0_20 != 0<32> l23036F70
l23036F62:
	branch a5_30 == 0<32> l23036F7A
l23036F7A:
l23036F66:
l23036F68:
	Mem47[a4_38:word32] = s1_25
	branch a5_30 == 0<32> l23036F7E
l23036F7E:
l23036F6C:
l23036F6E:
	Mem55[a5_30:word32] = s0_24
l23036F70:
	s1Out = s1_25
	a0Out = a0_20
	a3Out = a3_37
	a5Out = a5_30
	s2Out = s2_31
	return dwArgE4
hal_boot2_partition_addr_active_exit:


word32 hal_boot2_partition_addr_inactive(word32 a0, word32 dwArgF8, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_mtd_open
// MayUse:  a0:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_addr_inactive_entry:
l23036F82:
	word32 a0_20
	word32 s1_25
	word32 a5_30
	word32 a3_37
	word32 a4_38
	word32 s2_137
	word32 s0_24 = hal_boot2_partition_addr(a0, fp + -36<i32>, fp + -32<i32>, fp + -28<i32>, fp + -24<i32>, fp + -20<i32>, dwArgF8, out s1_25, out a0_20, out a3_37, out a4_38, out a5_30, out s2_137)
	branch a0_20 != 0<32> l23036FAC
l23036F9E:
	branch a5_30 == 0<32> l23036FB6
l23036FB6:
l23036FA2:
l23036FA4:
	Mem47[a4_38:word32] = s1_25
	branch a5_30 == 0<32> l23036FBA
l23036FBA:
l23036FA8:
l23036FAA:
	Mem55[a5_30:word32] = s0_24
l23036FAC:
	a3Out = a3_37
	a5Out = a5_30
	return a0_20
hal_boot2_partition_addr_inactive_exit:


void hal_boot2_get_active_partition()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse: 
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
hal_boot2_get_active_partition_entry:
l23036FBE:
	return
hal_boot2_get_active_partition_exit:


void hal_boot2_get_active_entries(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
hal_boot2_get_active_entries_entry:
l23036FC8:
	PtTable_Get_Active_Entries(0x4200D9CC<32>, a0 & 255<i32>, a1)
	return
hal_boot2_get_active_entries_exit:


void hal_boot2_dump(word32 ra, word32 a3, word32 s6, word32 dwArg0C, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_dump_cmd
// MayUse:  a3:[0..31] ra:[0..31] s6:[0..31] Stack +000C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
hal_boot2_dump_entry:
l23036FEC:
	word32 s2_44
	_dump_partition(ra, a3, s6, dwArg0C, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0118, out s2_44)
	return
hal_boot2_dump_exit:


word32 hal_boot2_init(word32 ra, word32 s6, word32 dwArg0C, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgAC, word32 dwArg0118, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  ra:[0..31] s6:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00AC:[0..31] Stack +0118:[0..31]
// LiveOut: ra s1 s10 s2 s4 s6 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
hal_boot2_init_entry:
l23036FFC:
	Mem11[0x4200E9C8<32>:byte] = SLICE(CONVERT(Mem8[0x42049C00<32>:byte], byte, word32), byte, 0)
	word32 a3_13 = CONVERT(Mem11[0x4201FC5C<32>:byte], byte, word32)
	branch a3_13 >u 2<32> l23037068
l23037020:
	branch CONVERT(Mem11[0x4201FD48<32>:byte], byte, word32) >u 2<32> l23037068
l23037030:
	branch Mem11[0x4200DE84<32>:int32] == 0<32> l2303707A
l2303707A:
	word32 a5_178
	xTaskGetTickCount(out a5_178)
l2303703A:
	word32 a5_179
	xTaskGetTickCountFromISR(out a5_179)
l2303703E:
	word32 s11_194
	word32 s9_192
	word32 s10_193
	word32 s7_190
	word32 s8_191
	word32 s4_188
	word32 s5_189
	word32 s2_186
	word32 s3_187
	word32 a4_184
	word32 a5_185
	word32 a1_182
	word32 a2_183
	word32 s1_180
	word32 a0_181
	ra = bl_printk(ra, 0x23084D40<32>, 0x23084D34<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_180, out a0_181, out a1_182, out a2_183, out a3_13, out a4_184, out a5_185, out s2_186, out s3_187, out s4_188, out s5_189, out s6, out s7_190, out s8_191, out s9_192, out s10_193, out s11_194)
l23037068:
	word32 s2_80
	word32 s4_99
	word32 s8_100
	word32 s1_107
	word32 s10_108
	word32 s2_110
	word32 s6_112
	word32 s9_114
	word32 ra_106 = bl_flash_config_update(_dump_partition(ra, a3_13, s6, dwArg0C, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0118, out s2_80), s2_80, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_107, out s2_110, out s4_99, out s6_112, out s8_100, out s9_114, out s10_108)
	s1Out = s1_107
	s2Out = s2_110
	s4Out = s4_99
	s6Out = s6_112
	s8Out = s8_100
	s9Out = s9_114
	s10Out = s10_108
	return ra_106
hal_boot2_init_exit:


void hal_reboot(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      reboot_cmd
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
hal_reboot_exit:
hal_reboot_entry:
l23037080:
l23037080_thunk_bl_sys_reset_por:
	bl_sys_reset_por(mstatus)


void hal_sys_reset(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      reset_cmd
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
hal_sys_reset_exit:
hal_sys_reset_entry:
l23037084:
l23037084_thunk_bl_sys_reset_system:
	bl_sys_reset_system(mstatus)


void hal_poweroff()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      poweroff_cmd
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
hal_poweroff_entry:
l23037088:
	return
hal_poweroff_exit:


word32 hal_sys_capcode_update(word32 ra, word32 a0, word32 a1, word32 s2, word32 s3, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg48, ptr32 & s1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start
//      wifi_capcode_cmd
//      hal_board_cfg
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0048:[0..31]
// LiveOut: a3 ra s1
// Trashed: a0 a1 a2 a3 a6 ra s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
hal_sys_capcode_update_entry:
l2303708A:
	word32 t1_15 = Mem14[0x2101081C<32>:int32]
	branch a0 == 255<i32> l230370D6
l230370B6:
	s2 = a1
	branch a1 == 255<i32> l230370D6
l230370D6:
	word32 s1_42
	word32 a3_43
	word32 ra_44
	call t1_15 (retsize: 0;)
		uses: a0:CONVERT(Mem14[0x4200DEC9<32>:byte], byte, word32),a1:CONVERT(Mem14[0x4200DECA<32>:byte], byte, word32),a2:dwArg48,a6:dwArg28,ra:ra,s0:0x4200DEC9<32>,s1:0x4200DECA<32>,s2:s2_38,s3:s3,s4:dwArg04,s8:dwLoc1C,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +0048:dwArg48,Stack +FFFFFFE4:dwLoc1C,t3:dwArg00
		defs: a3:a3_43,ra:ra_44,s1:s1_42
	s1Out = s1_42
	a3Out = a3_43
	return ra_44
l230370BC:
	word32 s0_57
	word32 s1_58
	word32 a3_59
	word32 ra_60
	word32 s2_61
	word32 s3_62
	call t1_15 (retsize: 0;)
		uses: a0:a0,a1:a1,ra:ra,s0:0x4200DEC9<32>,s1:0x4200DECA<32>,s2:a1,s3:a0,Stack +0004:dwLoc1C,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0048:dwArg28,Stack +0068:dwArg48
		defs: a3:a3_59,ra:ra_60,s0:s0_57,s1:s1_58,s2:s2_61,s3:s3_62
	Mem72[s0_57:byte] = SLICE(s3_62, byte, 0)
	Mem74[s1_58:byte] = SLICE(s2_61, byte, 0)
	s1Out = s1_58
	a3Out = a3_59
	return ra_60
hal_sys_capcode_update_exit:


void hal_sys_capcode_get()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_capcode_cmd
// MayUse: 
// LiveOut:
// Trashed: t1
// Preserved: sp
hal_sys_capcode_get_entry:
l230370EC:
	call 0x4200CDAE<p32> (retsize: 0;)
		uses: t1:0x4200D0EC<p32>
	return
hal_sys_capcode_get_exit:


word32 fdt32_to_cpu(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_to_cpu_entry:
l230370F4:
	return (a0 >>u 16<i32> & 255<i32>) << 8<i32> | ((a0 << 0x18<u32> | a0 >>u 0x18<u32>) | (a0 >>u 8<u32> & 255<i32>) << 16<i32>)
fdt32_to_cpu_exit:


word32 hal_board_get_factory_addr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
hal_board_get_factory_addr_entry:
l23037116:
	return Mem0[0x4200DECC<32>:int32]
hal_board_get_factory_addr_exit:


word32 hal_board_cfg(word32 ra, word32 s0, word32 s1, word32 s2, word32 s4, word32 s6, word32 s8, word32 s9, word32 s10, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg28, word32 dwArg94, word32 dwArgD4, word32 dwArgF4, ptr32 & gpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] s8:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0094:[0..31] Stack +00D4:[0..31] Stack +00F4:[0..31]
// LiveOut: gp ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t6 tp
// Preserved: mstatus sp t5
hal_board_cfg_entry:
	byte bLoc79_7680 = SLICE(dwLoc7C, byte, 24)
	byte bLoc7A_7727 = SLICE(dwLoc7C, byte, 16)
	word16 wLoc7C_8087 = SLICE(dwLoc7C, word16, 0)
	byte bLoc7C_12057 = SLICE(dwLoc7C, byte, 0)
	byte bLoc7B_12058 = SLICE(dwLoc7C, byte, 8)
	word16 wLocB0_11868 = SLICE(nLocB0, word16, 0)
l23037120:
	word32 s1_45
	word32 a3_12775
	word32 a5_12776
	word32 a0_12774
	word32 s2_115
	word32 s0_44 = hal_boot2_partition_addr_active(0x23084DA0<32>, s1, out s1_45, out a0_12774, out a3_12775, out a5_12776, out s2_115)
	word32 sp_3 = fp + -256<i32>
	word32 s3_108 = s1_45 + -308<i32>
	branch CONVERT(Mem34[s0_44 + -932<i32>:byte], byte, word32) >u 2<32> l230371A8
l23037164:
	branch CONVERT(Mem34[0x4201FD49<32>:byte], byte, word32) >u 2<32> l230371A8
l23037170:
	branch Mem34[0x4200DE84<32>:int32] == 0<32> l230371F6
l230371F6:
	word32 a5_12777
	xTaskGetTickCount(out a5_12777)
l2303717C:
	word32 a5_12778
	xTaskGetTickCountFromISR(out a5_12778)
l23037180:
	word32 a1_12787
	word32 a3_12789
	word32 a5_12791
	word32 s4_12792
	word32 s6_12794
	word32 s8_12796
	word32 s9_12797
	word32 s11_12799
	word32 s10_12798
	word32 s7_12795
	word32 s5_12793
	word32 a4_12790
	word32 a2_12788
	word32 a0_12786
	word32 s1_12785
	ra = bl_printk(ra, 0x23084DB4<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_12785, out a0_12786, out a1_12787, out a2_12788, out a3_12789, out a4_12790, out a5_12791, out s2_115, out s3_108, out s4_12792, out s5_12793, out s6_12794, out s7_12795, out s8_12796, out s9_12797, out s10_12798, out s11_12799)
l230371A8:
	branch Mem34[s3_108:int32] != 0<32> l23037202
l23037202:
	word32 a0_12780
	word32 a5_12782
	word32 a3_12781
	word32 s1_12779
	word32 s3_128
	word32 s2_127
	word32 s6_131
	word32 s0_125 = hal_boot2_partition_bus_addr_active(s2_115 + -608<i32>, s1, out s1_12779, out a0_12780, out a3_12781, out a5_12782, out s2_127, out s3_128, out s6_131)
	branch CONVERT(Mem34[s0_125 + -932<i32>:byte], byte, word32) >u 2<32> l2303725E
l2303721C:
	branch CONVERT(Mem34[0x4201FD49<32>:byte], byte, word32) >u 2<32> l2303725E
l23037228:
	branch Mem34[0x4200DE84<32>:int32] == 0<32> l230372AC
l230372AC:
	word32 a5_12817
	xTaskGetTickCount(out a5_12817)
l23037232:
	word32 a5_12818
	xTaskGetTickCountFromISR(out a5_12818)
l23037236:
	word32 a4_12830
	word32 s4_12832
	word32 s7_12834
	word32 s11_12838
	word32 s8_12835
	word32 s10_12837
	word32 s9_12836
	word32 s5_12833
	word32 a5_12831
	word32 a3_12829
	word32 a1_12827
	word32 a2_12828
	word32 a0_12826
	word32 s1_12825
	ra = bl_printk(ra, 0x23084E68<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_12825, out a0_12826, out a1_12827, out a2_12828, out a3_12829, out a4_12830, out a5_12831, out s2_127, out s3_128, out s4_12832, out s5_12833, out s6_131, out s7_12834, out s8_12835, out s9_12836, out s10_12837, out s11_12838)
l2303725E:
	word32 s1_192 = Mem34[s3_128:int32]
	branch s1_192 != 0<32> l230372B8
l230372B8:
	word32 a0_202
	word32 s0_211
	word32 a5_12819
	word32 s3_12820
	word32 s5_12822
	word32 s4_12821
	word32 s1_212
	word32 s2_213
	word32 s6_217
	word32 ra_210 = fdt_subnode_offset(ra, s1_192, s1_192, 0x23072C3C<32>, s2_127, s6_131, dwLocF8, dwLocC8, s9, out s0_211, out s1_212, out a0_202, out a5_12819, out s2_213, out s3_12820, out s4_12821, out s5_12822, out s6_217)
	branch a0_202 > 0<32> l23037318
l230372D0:
	branch CONVERT(Mem198[s0_211 + -932<i32>:byte], byte, word32) >u 4<32> l23037318
l230372DA:
	branch CONVERT(Mem198[0x4201FD49<32>:byte], byte, word32) >u 4<32> l23037318
l230372E6:
	branch Mem198[0x4200DE84<32>:int32] == 0<32> l23037474
l23037474:
	word32 a5_12861
	xTaskGetTickCount(out a5_12861)
l230372F2:
	word32 a5_12862
	xTaskGetTickCountFromISR(out a5_12862)
l230372F6:
	word32 a1_12894
	word32 a3_12896
	word32 a4_12897
	word32 s5_12901
	word32 s7_12902
	word32 s10_12905
	word32 s11_12906
	word32 s9_12904
	word32 s8_12903
	word32 s3_12899
	word32 s4_12900
	word32 a5_12898
	word32 a2_12895
	word32 a0_12893
	ra_210 = bl_printk(ra_210, 0x230806B8<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_212, out a0_12893, out a1_12894, out a2_12895, out a3_12896, out a4_12897, out a5_12898, out s2_213, out s3_12899, out s4_12900, out s5_12901, out s6_217, out s7_12902, out s8_12903, out s9_12904, out s10_12905, out s11_12906)
l23037318:
	word32 a0_278
	word32 s3_290
	word32 a5_12857
	word32 s2_12858
	word32 s5_12860
	word32 s4_12859
	word32 s0_12856
	word32 s1_1327
	word32 s6_1332
	word32 ra_1325 = fdt_subnode_offset(ra_210, s1_212, s1_212, 0x23080968<32>, s2_213, s6_217, dwLocF8, dwLocC8, s9, out s0_12856, out s1_1327, out a0_278, out a5_12857, out s2_12858, out s3_290, out s4_12859, out s5_12860, out s6_1332)
	word32 s2_1328 = a0_278
	branch a0_278 <= 0<32> l23037742
l23037330:
	dwLocD0 = 0<32>
	word32 a0_305
	word32 s3_317
	word32 s6_12872
	word32 s8_12873
	word32 s0_12868
	word32 s4_12870
	word32 s5_12871
	word32 s2_12869
	word32 s1_315
	word32 ra_313 = fdt_stringlist_count(ra_1325, s1_1327, 0x23084F18<32>, a0_278, dwLocF8, dwLocDC, dwLoc48, s9, out s0_12868, out s1_315, out a0_305, out s2_12869, out s3_317, out s4_12870, out s5_12871, out s6_12872, out s8_12873)
	branch a0_305 != 1<32> l230375A0
l23037348:
	word32 a0_331
	word32 s3_12887
	word32 s6_12889
	word32 s8_12890
	word32 s5_12888
	word32 a5_12886
	word32 a1_12883
	word32 a4_12885
	word32 a3_12884
	word32 a2_333
	word32 s0_340
	word32 s2_342
	word32 s4_344
	fdt_stringlist_get(ra_313, s1_315, s3_317 + -232<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_340, out s1_315, out a0_331, out a1_12883, out a2_333, out a3_12884, out a4_12885, out a5_12886, out s2_342, out s3_12887, out s4_344, out s5_12888, out s6_12889, out s8_12890)
	word32 s5_353 = a0_331
	branch CONVERT(Mem304[s0_340 + -932<i32>:byte], byte, word32) >u 2<32> l230373A4
l23037364:
	branch CONVERT(Mem304[0x4201FD49<32>:byte], byte, word32) >u 2<32> l230373A4
l23037370:
	branch Mem304[0x4200DE84<32>:int32] == 0<32> l2303747A
l2303747A:
	word32 a5_12891
	xTaskGetTickCount(out a5_12891)
l2303737C:
	word32 a5_12892
	xTaskGetTickCountFromISR(out a5_12892)
l23037380:
	word32 a5_12925
	word32 s7_12928
	word32 s9_12930
	word32 s11_12932
	word32 s10_12931
	word32 s8_12929
	word32 s6_12927
	word32 s3_12926
	word32 a4_12924
	word32 a3_12923
	word32 a1_12922
	word32 a0_12921
	bl_printk(dwArgF4, 0x23084F24<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_315, out a0_12921, out a1_12922, out a2_333, out a3_12923, out a4_12924, out a5_12925, out s2_342, out s3_12926, out s4_344, out s5_353, out s6_12927, out s7_12928, out s8_12929, out s9_12930, out s10_12931, out s11_12932)
l230373A4:
	ra_313 = dwArg94
	word32 s3_399 = 2<32>
	branch a2_333 > 2<32> l230375A0
l230373AC:
	word32 a6_13050
	word32 a7_13051
	word32 a4_13048
	word32 a5_13049
	word32 a1_13045
	word32 a3_13047
	word32 a2_13046
	memcpy(fp + -176<i32>, s5_353, a2_333, out a1_13045, out a2_13046, out a3_13047, out a4_13048, out a5_13049, out a6_13050, out a7_13051)
	nLocB0 = CONVERT(wLocB0_11868, word16, uint24) (alias)
	branch CONVERT(Mem304[s0_340 + -932<i32>:byte], byte, word32) >u 2<32> l230373FE
l230373C0:
	branch CONVERT(Mem420[0x4201FD49<32>:byte], byte, word32) >u 2<32> l230373FE
l230373CC:
	branch Mem420[0x4200DE84<32>:int32] == 0<32> l23037480
l23037480:
	word32 a5_13056
	xTaskGetTickCount(out a5_13056)
l230373D6:
	word32 a5_13057
	xTaskGetTickCountFromISR(out a5_13057)
l230373DA:
	word32 a0_13074
	word32 a1_13075
	word32 a3_13077
	word32 a5_13079
	word32 s5_13080
	word32 s9_13084
	word32 s10_13085
	word32 s11_13086
	word32 s7_13082
	word32 s8_13083
	word32 s6_13081
	word32 a4_13078
	word32 a2_13076
	ra_313 = bl_printk(dwArg94, 0x23084F50<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_315, out a0_13074, out a1_13075, out a2_13076, out a3_13077, out a4_13078, out a5_13079, out s2_342, out s3_399, out s4_344, out s5_13080, out s6_13081, out s7_13082, out s8_13083, out s9_13084, out s10_13085, out s11_13086)
l230373FE:
	word32 a4_13054
	word32 a5_13055
	word32 a1_13052
	word32 a2_13053
	word32 a3_467
	word32 s10_472 = strlen(fp + -176<i32>, out a1_13052, out a2_13053, out a3_467, out a4_13054, out a5_13055)
	word32 s5_473 = 0<32>
	word32 s7_475 = 0x4200E000<32>
	word32 s11_478 = 0x23085000<32>
l2303741C:
	word32 s5_670
	word32 s3_679
	branch s5_473 >= s10_472 l2303790C
l23037420:
	word32 s5_510
	word32 a0_587
	word32 a3_582
	word32 a5_485 = CONVERT(Mem484[sp_3 + 80<i32> + s5_473:byte], byte, word32)
	branch a5_485 == 70<i32> l23037486
l23037486:
	Mem494[sp_3 + 64<i32>:word32] = 0<32>
	word32 a0_496
	word32 a4_500
	word32 a5_13088
	word32 s3_13089
	word32 a1_13087
	word32 s6_511
	word32 s8_512
	ra_313 = fdt_getprop(ra_313, s1_315, 0x23080970<32>, Mem494[sp_3 + 8<i32>:word32], Mem494[sp_3 + 40<i32>:word32], Mem494[sp_3 + 68<i32>:word32], Mem494[sp_3 + 216<i32>:word32], Mem494[sp_3 + 264<i32>:word32], out s0_340, out s1_315, out a0_496, out a1_13087, out a3_467, out a4_500, out a5_13088, out s2_342, out s3_13089, out s4_344, out s5_510, out s6_511, out s8_512)
	sp_3 = Mem494[sp_3 + 196<i32>:word32]
	s3_399 = a0_496
	branch a4_500 != 0x14<32> l23037898
l23037898:
	branch CONVERT(Mem494[s0_340 + -932<i32>:byte], byte, word32) >u 4<32> l23037904
l230378A2:
	branch CONVERT(Mem494[s6_511 + -695<i32>:byte], byte, word32) >u 4<32> l230378CE
l230378AA:
	branch Mem494[s7_475 + -380<i32>:int32] == 0<32> l23037920
l23037920:
	word32 a5_13129
	xTaskGetTickCount(out a5_13129)
l230378B0:
	word32 a5_13130
	xTaskGetTickCountFromISR(out a5_13130)
l230378B4:
	word32 a0_13149
	word32 a2_13151
	word32 a5_13153
	word32 s9_13154
	word32 a4_13152
	word32 a1_13150
	ra_313 = bl_printk(ra_313, s11_478 + -80<i32>, s8_512 + -600<i32>, Mem494[sp_3 + 8<i32>:word32], Mem494[sp_3 + 40<i32>:word32], Mem494[sp_3 + 112<i32>:word32], Mem494[sp_3 + 116<i32>:word32], Mem494[sp_3 + 152<i32>:word32], Mem494[sp_3 + 188<i32>:word32], out s1_315, out a0_13149, out a1_13150, out a2_13151, out a3_467, out a4_13152, out a5_13153, out s2_342, out s3_399, out s4_344, out s5_510, out s6_511, out s7_475, out s8_512, out s9_13154, out s10_472, out s11_478)
l230378CE:
	branch CONVERT(Mem494[s0_340 + -932<i32>:byte], byte, word32) >u 1<32> l23037904
l230378D8:
	branch CONVERT(Mem494[s6_511 + -695<i32>:byte], byte, word32) >u 1<32> l23037904
l230378E0:
	branch Mem494[s7_475 + -380<i32>:int32] == 0<32> l2303792C
l2303792C:
	word32 a5_13147
	xTaskGetTickCount(out a5_13147)
l230378E6:
	word32 a5_13148
	xTaskGetTickCountFromISR(out a5_13148)
l230378EA:
	a3_582 = s8_512 + -600<i32>
	a0_587 = 0x23085000<32>
l230374A4:
	branch CONVERT(Mem494[s0_340 + -932<i32>:byte], byte, word32) >u 2<32> l23037536
l230374AE:
	branch CONVERT(Mem494[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037536
l230374BA:
	word32 a0_594
	branch Mem494[0x4200DE84<32>:int32] == 0<32> l23037892
l23037892:
	word32 a5_13110
	a0_594 = xTaskGetTickCount(out a5_13110)
l230374C6:
	word32 a5_13111
	a0_594 = xTaskGetTickCountFromISR(out a5_13111)
l230374CA:
	Mem600[sp_3 + 144<i32>:word32] = a0_594
	fdt32_to_cpu(Mem600[a0_496:int32])
	fdt32_to_cpu(Mem600[a0_496 + 4<i32>:int32])
	fdt32_to_cpu(Mem600[a0_496 + 8<i32>:int32])
	word32 a0_618 = fdt32_to_cpu(Mem600[a0_496 + 12<i32>:int32])
	Mem629[sp_3 + 128<i32>:word32] = fdt32_to_cpu(Mem600[a0_496 + 16<i32>:int32]) & 255<i32>
	Mem633[sp_3:word32] = a0_618 & 255<i32>
	word32 a0_13113
	word32 a2_13115
	word32 a3_13116
	word32 a5_13118
	word32 s5_13120
	word32 s6_13121
	word32 s7_13122
	word32 s11_13126
	word32 s8_13123
	word32 s10_13125
	word32 s9_13124
	word32 s4_13119
	word32 a4_13117
	word32 a1_13114
	word32 s1_13112
	ra_313 = bl_printk(ra_313, 0x23084F78<32>, 0x23084DA8<32>, Mem633[sp_3 + 8<i32>:word32], Mem633[sp_3 + 40<i32>:word32], Mem633[sp_3 + 112<i32>:word32], Mem633[sp_3 + 116<i32>:word32], Mem633[sp_3 + 152<i32>:word32], Mem633[sp_3 + 188<i32>:word32], out s1_13112, out a0_13113, out a1_13114, out a2_13115, out a3_13116, out a4_13117, out a5_13118, out s2_342, out s3_399, out s4_13119, out s5_13120, out s6_13121, out s7_13122, out s8_13123, out s9_13124, out s10_13125, out s11_13126)
l23037536:
	s5_670 = fdt32_to_cpu(Mem665[s3_399:int32]) & 255<i32>
	s3_679 = fdt32_to_cpu(Mem665[s3_399 + 4<i32>:int32]) & 255<i32>
	branch CONVERT(Mem665[s0_340 + -932<i32>:byte], byte, word32) >u 1<32> l23037596
l23037558:
	branch CONVERT(Mem665[0x4201FD49<32>:byte], byte, word32) >u 1<32> l23037596
l23037564:
	branch Mem665[0x4200DE84<32>:int32] == 0<32> l23037926
l23037926:
	word32 a5_13127
	xTaskGetTickCount(out a5_13127)
l23037570:
	word32 a5_13128
	xTaskGetTickCountFromISR(out a5_13128)
l23037574:
	word32 s7_13142
	word32 s9_13144
	word32 s11_13146
	word32 s10_13145
	word32 s8_13143
	word32 s4_13140
	word32 s6_13141
	word32 a4_13138
	word32 a5_13139
	word32 a2_13136
	word32 a3_13137
	word32 s1_13133
	word32 a1_13135
	word32 a0_13134
	ra_313 = bl_printk(ra_313, 0x23084FD4<32>, 0x23084DA8<32>, Mem665[sp_3 + 8<i32>:word32], Mem665[sp_3 + 40<i32>:word32], Mem665[sp_3 + 112<i32>:word32], Mem665[sp_3 + 116<i32>:word32], Mem665[sp_3 + 152<i32>:word32], Mem665[sp_3 + 188<i32>:word32], out s1_13133, out a0_13134, out a1_13135, out a2_13136, out a3_13137, out a4_13138, out a5_13139, out s2_342, out s3_679, out s4_13140, out s5_670, out s6_13141, out s7_13142, out s8_13143, out s9_13144, out s10_13145, out s11_13146)
l23037430:
	branch a5_485 == 77<i32> l23037932
l23037932:
	Mem726[sp_3 + 128<i32>:byte] = 0<8>
	word32 a0_732
	word32 s6_750
	word32 s8_752
	ra_313 = bl_efuse_read_capcode(ra_313, s0_340, s1_315, sp_3 + 128<i32>, a3_467, 77<i32>, s2_342, s3_399, s4_344, mstatus, Mem726[sp_3 + 40<i32>:word32], Mem726[sp_3 + 64<i32>:word32], Mem726[sp_3 + 68<i32>:word32], Mem726[sp_3 + 104<i32>:word32], Mem726[sp_3 + 140<i32>:word32], out s0_340, out s1_315, out a0_732, out a3_467, out s2_342, out s3_399, out s4_344, out s5_510, out s6_750, out s7_475, out s8_752, out s10_472, out s11_478, out mstatus)
	branch a0_732 != 0<32> l23037950
l23037950:
	branch CONVERT(Mem726[s0_340 + -932<i32>:byte], byte, word32) >u 1<32> l23037904
l2303795A:
	branch CONVERT(Mem726[s6_750 + -695<i32>:byte], byte, word32) >u 1<32> l23037904
l23037962:
	branch Mem726[s7_475 + -380<i32>:int32] == 0<32> l230379CA
l230379CA:
	word32 a5_13170
	xTaskGetTickCount(out a5_13170)
l23037968:
	word32 a5_13171
	xTaskGetTickCountFromISR(out a5_13171)
l2303796C:
	a3_582 = s8_752 + -600<i32>
	a0_587 = 0x23085058<32>
l23037900:
	word32 a0_13172
	word32 a1_13173
	word32 a5_13176
	word32 s6_13177
	word32 s9_13179
	word32 s8_13178
	word32 a4_13175
	word32 a2_13174
	ra_313 = bl_printk(ra_313, a0_587, a3_582, Mem785[sp_3 + 8<i32>:word32], Mem785[sp_3 + 40<i32>:word32], Mem785[sp_3 + 112<i32>:word32], Mem785[sp_3 + 116<i32>:word32], Mem785[sp_3 + 152<i32>:word32], Mem785[sp_3 + 188<i32>:word32], out s1_315, out a0_13172, out a1_13173, out a2_13174, out a3_467, out a4_13175, out a5_13176, out s2_342, out s3_399, out s4_344, out s5_510, out s6_13177, out s7_475, out s8_13178, out s9_13179, out s10_472, out s11_478)
l23037904:
	s5_473 = s5_510 + 1<32>
	branch s5_473 != 2<32> l2303741C
l2303790C:
	branch CONVERT(Mem819[s0_340 + -932<i32>:byte], byte, word32) <=u 2<32> l230379D6
l230379D6:
	branch CONVERT(Mem819[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037916
l230379E2:
	branch Mem819[0x4200DE84<32>:int32] == 0<32> l23037A14
l23037A14:
	word32 a5_13180
	xTaskGetTickCount(out a5_13180)
l230379EC:
	word32 a5_13181
	xTaskGetTickCountFromISR(out a5_13181)
l230379F0:
	word32 s10_13196
	word32 s11_13197
	word32 a0_13183
	word32 a1_13184
	word32 a2_13185
	word32 s9_13195
	word32 s8_13194
	word32 a3_13186
	word32 s7_13193
	word32 s6_13192
	word32 a4_13187
	word32 a5_13188
	word32 s3_13189
	word32 s5_13191
	word32 s4_13190
	word32 s1_13182
	ra_313 = bl_printk(ra_313, 0x23085084<32>, 0x23084DA8<32>, Mem819[sp_3 + 8<i32>:word32], Mem819[sp_3 + 40<i32>:word32], Mem819[sp_3 + 112<i32>:word32], Mem819[sp_3 + 116<i32>:word32], Mem819[sp_3 + 152<i32>:word32], Mem819[sp_3 + 188<i32>:word32], out s1_13182, out a0_13183, out a1_13184, out a2_13185, out a3_13186, out a4_13187, out a5_13188, out s2_342, out s3_13189, out s4_13190, out s5_13191, out s6_13192, out s7_13193, out s8_13194, out s9_13195, out s10_13196, out s11_13197)
l23037916:
	s3_679 = 50<i32>
	s5_670 = 50<i32>
l2303793E:
	s5_670 = CONVERT(Mem726[sp_3 + 128<i32>:byte], byte, word32)
	branch CONVERT(Mem726[s0_340 + -932<i32>:byte], byte, word32) <=u 1<32> l23037984
l23037984:
	s3_679 = s5_670
	branch CONVERT(Mem726[0x4201FD49<32>:byte], byte, word32) >u 1<32> l23037596
l23037992:
	branch Mem726[0x4200DE84<32>:int32] == 0<32> l230379C4
l230379C4:
	word32 a5_13131
	xTaskGetTickCount(out a5_13131)
l2303799C:
	word32 a5_13132
	xTaskGetTickCountFromISR(out a5_13132)
l230379A0:
	word32 a2_13158
	word32 a4_13160
	word32 s3_13162
	word32 s4_13163
	word32 s7_13165
	word32 s9_13167
	word32 s10_13168
	word32 s11_13169
	word32 s8_13166
	word32 s6_13164
	word32 a5_13161
	word32 a3_13159
	word32 a1_13157
	word32 a0_13156
	word32 s1_13155
	ra_313 = bl_printk(ra_313, 0x2308502C<32>, 0x23084DA8<32>, Mem726[sp_3 + 8<i32>:word32], Mem726[sp_3 + 40<i32>:word32], Mem726[sp_3 + 112<i32>:word32], Mem726[sp_3 + 116<i32>:word32], Mem726[sp_3 + 152<i32>:word32], Mem726[sp_3 + 188<i32>:word32], out s1_13155, out a0_13156, out a1_13157, out a2_13158, out a3_13159, out a4_13160, out a5_13161, out s2_342, out s3_13162, out s4_13163, out s5_670, out s6_13164, out s7_13165, out s8_13166, out s9_13167, out s10_13168, out s11_13169)
l2303794C:
	s3_679 = s5_670
l23037596:
	word32 a3_13109
	ra_313 = hal_sys_capcode_update(ra_313, s5_670, s3_679 & 255<i32>, s2_342, s3_679, Mem936[sp_3:word32], Mem936[sp_3 + 4<i32>:word32], Mem936[sp_3 + 40<i32>:word32], Mem936[sp_3 + 72<i32>:word32], out s1_315, out a3_13109)
l230375A0:
	word32 a4_969
	word32 s0_974
	word32 s3_12878
	word32 s5_12880
	word32 s8_12882
	word32 s6_12881
	word32 s4_12879
	word32 s2_12877
	word32 a3_12875
	word32 a5_12876
	word32 a1_12874
	word32 a0_1034
	word32 s1_1019
	word32 ra_1018 = fdt_getprop(ra_313, s1_315, 0x230809E4<32>, Mem964[sp_3 + 8<i32>:word32], Mem964[sp_3 + 40<i32>:word32], Mem964[sp_3 + 68<i32>:word32], Mem964[sp_3 + 216<i32>:word32], Mem964[sp_3 + 264<i32>:word32], out s0_974, out s1_1019, out a0_1034, out a1_12874, out a3_12875, out a4_969, out a5_12876, out s2_12877, out s3_12878, out s4_12879, out s5_12880, out s6_12881, out s8_12882)
	word32 s6_1088 = a0_1034
	branch a4_969 != 60<i32> l23037A20
l23037A20:
	branch CONVERT(Mem964[s0_974 + -932<i32>:byte], byte, word32) >u 4<32> l23037636
l23037A2A:
	branch CONVERT(Mem964[0x4201FD49<32>:byte], byte, word32) >u 4<32> l23037636
l23037A36:
	branch Mem964[0x4200DE84<32>:int32] == 0<32> l23037A68
l23037A68:
	word32 a5_13043
	xTaskGetTickCount(out a5_13043)
l23037A40:
	word32 a5_13044
	xTaskGetTickCountFromISR(out a5_13044)
l23037A44:
	word32 a2_13060
	word32 a3_13061
	word32 a5_13063
	word32 s3_13065
	word32 s8_13070
	word32 s10_13072
	word32 s11_13073
	word32 s9_13071
	word32 s7_13069
	word32 s4_13066
	word32 s6_13068
	word32 s5_13067
	word32 s2_13064
	word32 a4_13062
	word32 a0_13058
	word32 a1_13059
	ra_1018 = bl_printk(ra_1018, 0x23080A6C<32>, 0x23084DA8<32>, Mem964[sp_3 + 8<i32>:word32], Mem964[sp_3 + 40<i32>:word32], Mem964[sp_3 + 112<i32>:word32], Mem964[sp_3 + 116<i32>:word32], Mem964[sp_3 + 152<i32>:word32], Mem964[sp_3 + 188<i32>:word32], out s1_1019, out a0_13058, out a1_13059, out a2_13060, out a3_13061, out a4_13062, out a5_13063, out s2_13064, out s3_13065, out s4_13066, out s5_13067, out s6_13068, out s7_13069, out s8_13070, out s9_13071, out s10_13072, out s11_13073)
l230375BE:
	word32 s3_1032 = 0<32>
	word32 s5_1033 = 60<i32>
l230375C4:
	a0_1034 = fdt32_to_cpu(a0_1034)
	Mem1044[a0_1034:word32] = sp_3 + 128<i32> + s3_1032
	s3_1032 = s3_1032 + 4<32>
	branch s3_1032 != 60<i32> l230375C4
l230375DA:
	branch CONVERT(Mem1044[s0_974 + -932<i32>:byte], byte, word32) >u 2<32> l23037622
l230375E8:
	branch CONVERT(Mem1044[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037622
l230375F4:
	branch Mem1044[0x4200DE84<32>:int32] == 0<32> l23037A1A
l23037A1A:
	word32 a5_12919
	xTaskGetTickCount(out a5_12919)
l23037600:
	word32 a5_12920
	xTaskGetTickCountFromISR(out a5_12920)
l23037604:
	word32 s9_12959
	word32 s11_12961
	word32 s10_12960
	word32 s7_12957
	word32 s8_12958
	word32 a0_12948
	word32 s3_12955
	word32 s4_12956
	word32 a1_12949
	word32 a5_12953
	word32 s2_12954
	word32 a2_12950
	word32 a4_12952
	word32 a3_12951
	word32 s1_12947
	ra_1018 = bl_printk(ra_1018, 0x23080A2C<32>, 0x23084DA8<32>, Mem1044[sp_3 + 8<i32>:word32], Mem1044[sp_3 + 40<i32>:word32], Mem1044[sp_3 + 112<i32>:word32], Mem1044[sp_3 + 116<i32>:word32], Mem1044[sp_3 + 152<i32>:word32], Mem1044[sp_3 + 188<i32>:word32], out s1_12947, out a0_12948, out a1_12949, out a2_12950, out a3_12951, out a4_12952, out a5_12953, out s2_12954, out s3_12955, out s4_12956, out s5_1033, out s6_1088, out s7_12957, out s8_12958, out s9_12959, out s10_12960, out s11_12961)
l23037622:
	word32 a5_12910
	word32 s3_12912
	word32 s4_12913
	word32 s5_12914
	word32 s6_12915
	word32 s7_12916
	word32 s8_12917
	word32 s9_12918
	word32 s2_12911
	word32 a4_12909
	word32 a3_12908
	word32 s0_12907
	ra_1018 = log_buf_out(ra_1018, sp_3 + 128<i32>, 60<i32>, 0<32>, s5_1033, s6_1088, Mem1044[sp_3 + 20<i32>:word32], Mem1044[sp_3 + 32<i32>:word32], Mem1044[sp_3 + 36<i32>:word32], Mem1044[sp_3 + 48<i32>:word32], Mem1044[sp_3 + 88<i32>:word32], Mem1044[sp_3 + 108<i32>:word32], Mem1044[sp_3 + 124<i32>:word32], Mem1044[sp_3 + 268<i32>:word32], out s0_12907, out s1_1019, out a3_12908, out a4_12909, out a5_12910, out s2_12911, out s3_12912, out s4_12913, out s5_12914, out s6_12915, out s7_12916, out s8_12917, out s9_12918)
l23037636:
	word32 a0_1141
	word32 a4_1145
	word32 s0_1150
	word32 a1_13034
	word32 s6_13041
	word32 s8_13042
	word32 s4_13039
	word32 s5_13040
	word32 s3_13038
	word32 a3_13035
	word32 s2_13037
	word32 a5_13036
	word32 s1_1151
	word32 ra_1149 = fdt_getprop(ra_1018, s1_1019, 0x23080A58<32>, Mem1140[sp_3 + 8<i32>:word32], Mem1140[sp_3 + 40<i32>:word32], Mem1140[sp_3 + 68<i32>:word32], Mem1140[sp_3 + 216<i32>:word32], Mem1140[sp_3 + 264<i32>:word32], out s0_1150, out s1_1151, out a0_1141, out a1_13034, out a3_13035, out a4_1145, out a5_13036, out s2_13037, out s3_13038, out s4_13039, out s5_13040, out s6_13041, out s8_13042)
	branch a4_1145 != 56<i32> l23037A74
l23037A74:
	branch CONVERT(Mem1140[s0_1150 + -932<i32>:byte], byte, word32) >u 4<32> l230376CE
l23037A7E:
	branch CONVERT(Mem1140[0x4201FD49<32>:byte], byte, word32) >u 4<32> l230376CE
l23037A8A:
	branch Mem1140[0x4200DE84<32>:int32] == 0<32> l23037ABC
l23037ABC:
	word32 a5_12986
	xTaskGetTickCount(out a5_12986)
l23037A94:
	word32 a5_12987
	xTaskGetTickCountFromISR(out a5_12987)
l23037A98:
	word32 a3_13005
	word32 a5_13007
	word32 s2_13008
	word32 s3_13009
	word32 s4_13010
	word32 s11_13017
	word32 s10_13016
	word32 s5_13011
	word32 s6_13012
	word32 s7_13013
	word32 s9_13015
	word32 s8_13014
	word32 a4_13006
	word32 a2_13004
	word32 a1_13003
	word32 a0_13002
	ra_1149 = bl_printk(ra_1149, 0x23080AD4<32>, 0x23084DA8<32>, Mem1140[sp_3 + 8<i32>:word32], Mem1140[sp_3 + 40<i32>:word32], Mem1140[sp_3 + 112<i32>:word32], Mem1140[sp_3 + 116<i32>:word32], Mem1140[sp_3 + 152<i32>:word32], Mem1140[sp_3 + 188<i32>:word32], out s1_1151, out a0_13002, out a1_13003, out a2_13004, out a3_13005, out a4_13006, out a5_13007, out s2_13008, out s3_13009, out s4_13010, out s5_13011, out s6_13012, out s7_13013, out s8_13014, out s9_13015, out s10_13016, out s11_13017)
l23037652:
	word32 s5_1207 = sp_3 + 96<i32>
	word32 s3_1208 = a0_1141
	word32 s6_1210 = s5_1207
l2303765E:
	s5_1207 = s5_1207 + 2<32>
	Mem1220[s5_1207 + 4094<i32>:word16] = SLICE(fdt32_to_cpu(Mem1212[s3_1208:int32]), word16, 0)
	s3_1208 = s3_1208 + 4<32>
	branch a0_1141 + 56<i32> != s3_1208 l2303765E
l23037672:
	branch CONVERT(Mem1220[s0_1150 + -932<i32>:byte], byte, word32) >u 2<32> l230376BA
l23037680:
	branch CONVERT(Mem1220[0x4201FD49<32>:byte], byte, word32) >u 2<32> l230376BA
l2303768C:
	branch Mem1220[0x4200DE84<32>:int32] == 0<32> l23037A6E
l23037A6E:
	word32 a5_12945
	xTaskGetTickCount(out a5_12945)
l23037698:
	word32 a5_12946
	xTaskGetTickCountFromISR(out a5_12946)
l2303769C:
	word32 s7_12972
	word32 s2_12969
	word32 a2_12965
	word32 a3_12966
	word32 s8_12973
	word32 s10_12975
	word32 s11_12976
	word32 s9_12974
	word32 s3_12970
	word32 s4_12971
	word32 a4_12967
	word32 a5_12968
	word32 a0_12963
	word32 a1_12964
	word32 s1_12962
	ra_1149 = bl_printk(ra_1149, 0x23080A9C<32>, 0x23084DA8<32>, Mem1220[sp_3 + 8<i32>:word32], Mem1220[sp_3 + 40<i32>:word32], Mem1220[sp_3 + 112<i32>:word32], Mem1220[sp_3 + 116<i32>:word32], Mem1220[sp_3 + 152<i32>:word32], Mem1220[sp_3 + 188<i32>:word32], out s1_12962, out a0_12963, out a1_12964, out a2_12965, out a3_12966, out a4_12967, out a5_12968, out s2_12969, out s3_12970, out s4_12971, out s5_1207, out s6_1210, out s7_12972, out s8_12973, out s9_12974, out s10_12975, out s11_12976)
l230376BA:
	word32 s0_12933
	word32 a4_12935
	word32 s2_12937
	word32 s3_12938
	word32 s4_12939
	word32 s9_12944
	word32 s8_12943
	word32 s5_12940
	word32 s7_12942
	word32 s6_12941
	word32 a5_12936
	word32 a3_12934
	ra_1149 = log_buf_out(ra_1149, s6_1210, 56<i32>, 0<32>, s5_1207, s6_1210, Mem1220[sp_3 + 20<i32>:word32], Mem1220[sp_3 + 32<i32>:word32], Mem1220[sp_3 + 36<i32>:word32], Mem1220[sp_3 + 48<i32>:word32], Mem1220[sp_3 + 88<i32>:word32], Mem1220[sp_3 + 108<i32>:word32], Mem1220[sp_3 + 124<i32>:word32], Mem1220[sp_3 + 268<i32>:word32], out s0_12933, out s1_1151, out a3_12934, out a4_12935, out a5_12936, out s2_12937, out s3_12938, out s4_12939, out s5_12940, out s6_12941, out s7_12942, out s8_12943, out s9_12944)
l230376CE:
	word32 a0_1317
	word32 a4_1321
	word32 s0_1326
	word32 s3_12982
	word32 s5_12984
	word32 s8_12985
	word32 s4_12983
	word32 a5_12981
	word32 a3_12980
	word32 a1_12979
	ra_1325 = fdt_getprop(ra_1149, s1_1151, 0x23080AC8<32>, Mem1316[sp_3 + 8<i32>:word32], Mem1316[sp_3 + 40<i32>:word32], Mem1316[sp_3 + 68<i32>:word32], Mem1316[sp_3 + 216<i32>:word32], Mem1316[sp_3 + 264<i32>:word32], out s0_1326, out s1_1327, out a0_1317, out a1_12979, out a3_12980, out a4_1321, out a5_12981, out s2_1328, out s3_12982, out s4_12983, out s5_12984, out s6_1332, out s8_12985)
	branch a4_1321 != 4<32> l23037AC8
l23037AC8:
	branch CONVERT(Mem1316[s0_1326 + -932<i32>:byte], byte, word32) >u 4<32> l23037742
l23037AD0:
	branch CONVERT(Mem1316[0x4201FD49<32>:byte], byte, word32) >u 4<32> l23037742
l23037ADC:
	branch Mem1316[0x4200DE84<32>:int32] == 0<32> l23037B0E
l23037B0E:
	word32 a5_13018
	xTaskGetTickCount(out a5_13018)
l23037AE6:
	word32 a5_13019
	xTaskGetTickCountFromISR(out a5_13019)
l23037AEA:
	word32 a0_13020
	word32 a3_13023
	word32 a5_13025
	word32 s4_13027
	word32 s5_13028
	word32 s8_13030
	word32 s10_13032
	word32 s11_13033
	word32 s9_13031
	word32 s7_13029
	word32 s3_13026
	word32 a4_13024
	word32 a2_13022
	word32 a1_13021
	ra_1325 = bl_printk(ra_1325, 0x23080B28<32>, 0x23084DA8<32>, Mem1316[sp_3 + 8<i32>:word32], Mem1316[sp_3 + 40<i32>:word32], Mem1316[sp_3 + 112<i32>:word32], Mem1316[sp_3 + 116<i32>:word32], Mem1316[sp_3 + 152<i32>:word32], Mem1316[sp_3 + 188<i32>:word32], out s1_1327, out a0_13020, out a1_13021, out a2_13022, out a3_13023, out a4_13024, out a5_13025, out s2_1328, out s3_13026, out s4_13027, out s5_13028, out s6_1332, out s7_13029, out s8_13030, out s9_13031, out s10_13032, out s11_13033)
l230376E8:
	branch CONVERT(Mem1316[s0_1326 + -932<i32>:byte], byte, word32) >u 2<32> l23037742
l230376F2:
	branch CONVERT(Mem1316[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037742
l230376FE:
	word32 a0_1389
	word32 s2_1388 = Mem1316[a0_1317:int32]
	branch Mem1316[0x4200DE84<32>:int32] == 0<32> l23037AC2
l23037AC2:
	word32 a5_12977
	a0_1389 = xTaskGetTickCount(out a5_12977)
l2303770E:
	word32 a5_12978
	a0_1389 = xTaskGetTickCountFromISR(out a5_12978)
l23037712:
	Mem1395[sp_3 + 144<i32>:word32] = a0_1389
	fdt32_to_cpu(s2_1388)
	word32 a1_12989
	word32 a3_12991
	word32 a4_12992
	word32 s5_12996
	word32 s7_12997
	word32 s10_13000
	word32 s11_13001
	word32 s9_12999
	word32 s8_12998
	word32 s3_12994
	word32 s4_12995
	word32 a5_12993
	word32 a2_12990
	word32 a0_12988
	ra_1325 = bl_printk(ra_1325, 0x230850AC<32>, 0x23084DA8<32>, Mem1395[sp_3 + 8<i32>:word32], Mem1395[sp_3 + 40<i32>:word32], Mem1395[sp_3 + 112<i32>:word32], Mem1395[sp_3 + 116<i32>:word32], Mem1395[sp_3 + 152<i32>:word32], Mem1395[sp_3 + 188<i32>:word32], out s1_1327, out a0_12988, out a1_12989, out a2_12990, out a3_12991, out a4_12992, out a5_12993, out s2_1328, out s3_12994, out s4_12995, out s5_12996, out s6_1332, out s7_12997, out s8_12998, out s9_12999, out s10_13000, out s11_13001)
l23037742:
	word32 a0_1445
	word32 s3_12865
	word32 s4_12866
	word32 s5_12867
	word32 a5_12864
	word32 s0_12863
	word32 s1_1455
	word32 s2_1456
	word32 s6_1460
	word32 ra_1453 = fdt_subnode_offset(ra_1325, s1_1327, s1_1327, 0x23080748<32>, s2_1328, s6_1332, dwLocF8, dwLocC8, s9, out s0_12863, out s1_1455, out a0_1445, out a5_12864, out s2_1456, out s3_12865, out s4_12866, out s5_12867, out s6_1460)
	branch a0_1445 <= 0<32> l23037BCE
l23037758:
	word32 a0_1471
	word32 s3_13203
	word32 s4_13204
	word32 s8_13206
	word32 s5_13205
	word32 s0_13202
	ra_1453 = fdt_stringlist_count(ra_1453, s1_1455, 0x2307DFD4<32>, 0x2307E000<32>, dwLocF8, dwLocDC, dwLoc48, s9, out s0_13202, out s1_1455, out a0_1471, out s2_1456, out s3_13203, out s4_13204, out s5_13205, out s6_1460, out s8_13206)
	branch a0_1471 != 1<32> l23037BCE
l23037770:
	word32 a2_1525
	word32 s9_13230
	word32 s11_13232
	word32 s10_13231
	word32 a0_13208
	word32 a1_13209
	word32 s7_13228
	word32 s8_13229
	word32 a2_13210
	word32 s5_13217
	word32 s8_13219
	word32 s4_13226
	word32 s5_13227
	word32 a0_13220
	word32 a5_13224
	word32 s3_13225
	word32 a1_13221
	word32 a4_13223
	word32 a3_13222
	word32 s6_13218
	word32 s3_13215
	word32 s4_13216
	word32 s2_13214
	word32 a3_13211
	word32 a5_13213
	word32 a4_13212
	word32 s1_13207
	word32 s0_1506
	ra_1453 = bl_printk(fdt_stringlist_get(ra_1453, s1_1455, s2_1456 + -44<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_1506, out s1_13207, out a0_13208, out a1_13209, out a2_13210, out a3_13211, out a4_13212, out a5_13213, out s2_13214, out s3_13215, out s4_13216, out s5_13217, out s6_13218, out s8_13219), 0x230850D4<32>, dwLoc9C, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13220, out a1_13221, out a2_1525, out a3_13222, out a4_13223, out a5_13224, out s2_1456, out s3_13225, out s4_13226, out s5_13227, out s6_1460, out s7_13228, out s8_13229, out s9_13230, out s10_13231, out s11_13232)
	branch a2_1525 > 3<32> l23037BCE
l23037798:
	word32 a3_1552
	word32 a5_13236
	word32 a6_13237
	word32 a7_13238
	word32 a2_13234
	word32 a4_13235
	word32 a1_13233
	memcpy(fp - 176<i32>, s2_1456, a2_1525, out a1_13233, out a2_13234, out a3_1552, out a4_13235, out a5_13236, out a6_13237, out a7_13238)
	word32 a1_13240
	word32 a2_13241
	word32 a4_13243
	word32 s2_13245
	word32 s9_13250
	word32 s11_13252
	word32 s10_13251
	word32 s8_13249
	word32 s5_13246
	word32 s7_13248
	word32 s6_13247
	word32 a5_13244
	word32 a3_13242
	word32 a0_13239
	word32 s4_1578
	word32 s3_1577
	ra_1453 = bl_printk(ra_1453, 0x230850F4<32>, a3_1552, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13239, out a1_13240, out a2_13241, out a3_13242, out a4_13243, out a5_13244, out s2_13245, out s3_1577, out s4_1578, out s5_13246, out s6_13247, out s7_13248, out s8_13249, out s9_13250, out s10_13251, out s11_13252)
	word32 a2_13254
	word32 a4_13255
	word32 a5_13256
	word32 a1_13253
	word32 a3_1588
	word32 s10_1593 = strlen(fp - 176<i32>, out a1_13253, out a2_13254, out a3_1588, out a4_13255, out a5_13256)
	s2_1456 = 0<32>
	word32 s5_1595 = 0x42020000<32>
	s6_1460 = 0x4200E000<32>
	word32 s7_1597 = 0x23085000<32>
	word32 s11_1600 = 0x23080000<32>
	word32 dwLocB0_11890 = CONVERT(nLocB0, word24, uint32)
l230377D4:
	branch s2_1456 >= s10_1593 l23037876
l230377D8:
	word32 a0_1843
	word32 a3_1839
	word32 a0_1767
	word32 a5_1607 = CONVERT(Mem1606[fp - 176<i32> + s2_1456:byte], byte, word32)
	branch a5_1607 == 70<i32> l23037FE8
l23037FE8:
	word32 a0_1660
	word32 a3_1654
	word32 a0_1617
	word32 a5_1622
	word32 a1_13257
	word32 s8_13259
	word32 a4_13258
	fdt_getprop(ra_1453, s1_1455, 0x2308074C<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_1506, out s1_1455, out a0_1617, out a1_13257, out a3_1588, out a4_13258, out a5_1622, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s8_13259)
	ra_1453 = dwArgF4
	branch a5_1622 != 6<32> l23038066
l23038066:
	branch CONVERT(Mem1640[s0_1506 + -932<i32>:byte], byte, word32) >u 4<32> l2303786E
l23038070:
	branch CONVERT(Mem1640[s5_1595 + -695<i32>:byte], byte, word32) >u 4<32> l23038098
l23038078:
	branch Mem1640[s6_1460 + -380<i32>:int32] == 0<32> l230380CE
l230380CE:
	word32 a5_13376
	xTaskGetTickCount(out a5_13376)
l2303807E:
	word32 a5_13377
	xTaskGetTickCountFromISR(out a5_13377)
l23038082:
	a3_1654 = s7_1597 + -600<i32>
	a0_1660 = s11_1600 + 1928<i32>
l23038006:
	word32 a2_13339
	word32 a4_13341
	word32 a5_13342
	word32 a7_13344
	word32 a6_13343
	word32 a3_13340
	word32 a1_13338
	memcpy(fp - 128<i32>, a0_1617, 6<32>, out a1_13338, out a2_13339, out a3_13340, out a4_13341, out a5_13342, out a6_13343, out a7_13344)
	bl_wifi_sta_mac_addr_set(fp - 128<i32>)
	word32 a0_1696
	word32 a4_1700
	word32 a5_1701
	word32 s8_13346
	word32 a1_13345
	fdt_getprop(dwArgF4, s1_1455, 0x2308077C<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_1506, out s1_1455, out a0_1696, out a1_13345, out a3_1588, out a4_1700, out a5_1701, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s8_13346)
	ra_1453 = dwArgD4
	branch a4_1700 == a5_1701 l230380D4
l230380D4:
	word32 a1_13347
	word32 a5_13351
	word32 a6_13352
	word32 a7_13353
	word32 a3_13349
	word32 a4_13350
	word32 a2_13348
	memcpy(fp - 128<i32>, a0_1696, 6<32>, out a1_13347, out a2_13348, out a3_13349, out a4_13350, out a5_13351, out a6_13352, out a7_13353)
	bl_wifi_ap_mac_addr_set(fp - 128<i32>)
	branch CONVERT(Mem1640[s0_1506 + -932<i32>:byte], byte, word32) >u 1<32> l23037B5A
l230380EC:
	branch CONVERT(Mem1640[0x4201FD49<32>:byte], byte, word32) >u 1<32> l23037B64
l230380F8:
	branch Mem1640[0x4200DE84<32>:int32] == 0<32> l2303812C
l2303812C:
	word32 a5_13374
	xTaskGetTickCount(out a5_13374)
l23038102:
	word32 a5_13375
	xTaskGetTickCountFromISR(out a5_13375)
l23038106:
	a0_1767 = 0x23085190<32>
l23038030:
	branch CONVERT(Mem1640[s0_1506 + -932<i32>:byte], byte, word32) >u 4<32> l2303786E
l2303803A:
	branch CONVERT(Mem1640[s5_1595 + -695<i32>:byte], byte, word32) >u 4<32> l23038098
l23038042:
	branch Mem1640[s6_1460 + -380<i32>:int32] == 0<32> l23038126
l23038126:
	word32 a5_13354
	xTaskGetTickCount(out a5_13354)
l2303804A:
	word32 a5_13355
	xTaskGetTickCountFromISR(out a5_13355)
l2303804E:
	a3_1654 = s7_1597 + -600<i32>
	a0_1660 = 0x23085168<32>
l23038094:
	word32 a5_13360
	word32 s9_13362
	word32 s8_13361
	word32 a0_13356
	word32 a4_13359
	word32 a2_13358
	word32 a1_13357
	ra_1453 = bl_printk(ra_1453, a0_1660, a3_1654, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13356, out a1_13357, out a2_13358, out a3_1588, out a4_13359, out a5_13360, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s7_1597, out s8_13361, out s9_13362, out s10_1593, out s11_1600)
l23038098:
	branch CONVERT(Mem1640[s0_1506 + -932<i32>:byte], byte, word32) >u 1<32> l2303786E
l230380A2:
	branch CONVERT(Mem1640[s5_1595 + -695<i32>:byte], byte, word32) >u 1<32> l2303786E
l230380AA:
	branch Mem1640[s6_1460 + -380<i32>:int32] == 0<32> l23038132
l23038132:
	word32 a5_13372
	xTaskGetTickCount(out a5_13372)
l230380B0:
	word32 a5_13373
	xTaskGetTickCountFromISR(out a5_13373)
l230380B4:
	a3_1839 = s7_1597 + -600<i32>
	a0_1843 = 0x230851BC<32>
l230377E8:
	branch a5_1607 == 77<i32> l23038138
l23038138:
	word32 a0_1850
	ra_1453 = bl_efuse_read_mac_factory(ra_1453, s0_1506, s1_1455, fp - 128<i32>, a3_1588, 77<i32>, s2_1456, s3_1577, s4_1578, mstatus, dwLocF8, dwLocD8, dwLocC0, dwLocBC, dwLocB0_11890, dwLocAC, s10, s2, dwLoc74, dwLoc64, out s0_1506, out s1_1455, out a0_1850, out a3_1588, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s7_1597, out s10_1593, out s11_1600, out mstatus)
	branch a0_1850 != 0<32> l230381C0
l23038140:
	word32 a0_1879 = CONVERT(bLoc80, byte, word32)
	word32 a6_1880 = CONVERT(bLoc7F, byte, word32)
	word32 a1_1881 = CONVERT(bLoc7E, byte, word32)
	word32 a2_1882 = CONVERT(bLoc7D, byte, word32)
	word32 a3_1883 = CONVERT(bLoc7C_12057, byte, word32)
	word32 a4_1886 = CONVERT(bLoc7B_12058, byte, word32)
	a3_1588 = a3_1883 | (a2_1882 | (a1_1881 | (a0_1879 | a6_1880)))
	word32 a5_1893 = a0_1879 & a6_1880 & a1_1881 & a2_1882 & a3_1883 & a4_1886
	branch (a4_1886 | a3_1588) == 0<32> l230381C0
l23038172:
	branch a5_1893 == 1<32> l230381C0
l230381C0:
	branch CONVERT(Mem1606[s0_1506 + -932<i32>:byte], byte, word32) >u 1<32> l2303786E
l230381CA:
	branch CONVERT(Mem1606[s5_1595 + -695<i32>:byte], byte, word32) >u 1<32> l2303786E
l230381D2:
	branch Mem1606[s6_1460 + -380<i32>:int32] == 0<32> l230381F6
l230381F6:
	word32 a5_13363
	xTaskGetTickCount(out a5_13363)
l230381D8:
	word32 a5_13364
	xTaskGetTickCountFromISR(out a5_13364)
l230381DC:
	a3_1839 = s7_1597 + -600<i32>
	a0_1843 = 0x23085214<32>
l23038178:
	branch CONVERT(Mem1606[s0_1506 + -932<i32>:byte], byte, word32) >u 1<32> l23037B5A
l23038180:
	branch CONVERT(Mem1606[0x4201FD49<32>:byte], byte, word32) >u 1<32> l23037B64
l2303818C:
	branch Mem1606[0x4200DE84<32>:int32] == 0<32> l230381BA
l230381BA:
	word32 a5_13322
	xTaskGetTickCount(out a5_13322)
l23038196:
	word32 a5_13323
	xTaskGetTickCountFromISR(out a5_13323)
l2303819A:
	a0_1767 = 0x230851E8<32>
l230377F0:
	branch a5_1607 != 66<i32> l230381FC
l230381FC:
	branch Mem1606[0x4200DE84<32>:int32] == 0<32> l23038236
l23038236:
	word32 a5_13289
	xTaskGetTickCount(out a5_13289)
l23038206:
	word32 a5_13290
	xTaskGetTickCountFromISR(out a5_13290)
l2303820A:
	word32 s11_13321
	word32 s9_13319
	word32 s10_13320
	word32 a2_13308
	word32 a4_13310
	word32 s7_13317
	word32 s8_13318
	word32 a5_13311
	word32 s5_13315
	word32 s6_13316
	word32 s2_13312
	word32 s4_13314
	word32 s3_13313
	word32 a3_13309
	word32 a0_13306
	word32 a1_13307
	word32 s1_13305
	bl_printk(ra_1453, 0x2307C074<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13305, out a0_13306, out a1_13307, out a2_13308, out a3_13309, out a4_13310, out a5_13311, out s2_13312, out s3_13313, out s4_13314, out s5_13315, out s6_13316, out s7_13317, out s8_13318, out s9_13319, out s10_13320, out s11_13321)
l23038234:
l230377F8:
	word32 a0_1995 = CONVERT(bLoc80, byte, word32)
	word32 a6_1996 = CONVERT(bLoc7F, byte, word32)
	word32 a1_1997 = CONVERT(bLoc7E, byte, word32)
	word32 a2_1998 = CONVERT(bLoc7D, byte, word32)
	word32 a3_1999 = CONVERT(bLoc7C_12057, byte, word32)
	word32 a4_2002 = CONVERT(bLoc7B_12058, byte, word32)
	a3_1588 = a3_1999 | (a2_1998 | (a1_1997 | (a0_1995 | a6_1996)))
	ra_1453 = bl_efuse_read_mac(ra_1453, s0_1506, s1_1455, fp - 128<i32>, s2_1456, s3_1577, s4_1578, out s0_1506, out s1_1455, out s2_1456, out s3_1577, out s4_1578)
	word32 a5_2009 = a0_1995 & a6_1996 & a1_1997 & a2_1998 & a3_1999 & a4_2002
	branch (a4_2002 | a3_1588) == 0<32> l23037836
l23037830:
	branch a5_2009 != 1<32> l23037B14
l23037B14:
	branch CONVERT(Mem1606[s0_1506 + -932<i32>:byte], byte, word32) >u 1<32> l23037B5A
l23037B1C:
	branch CONVERT(Mem1606[0x4201FD49<32>:byte], byte, word32) >u 1<32> l23037B64
l23037B28:
	branch Mem1606[0x4200DE84<32>:int32] == 0<32> l23037FDA
l23037FDA:
	word32 a5_13269
	xTaskGetTickCount(out a5_13269)
l23037B34:
	word32 a5_13270
	xTaskGetTickCountFromISR(out a5_13270)
l23037B38:
	a0_1767 = 0x23085110<32>
l23037B56:
	word32 a3_13327
	word32 a4_13328
	word32 s3_13330
	word32 s5_13332
	word32 s11_13337
	word32 s10_13336
	word32 s7_13333
	word32 s9_13335
	word32 s8_13334
	word32 s4_13331
	word32 a5_13329
	word32 a1_13325
	word32 a2_13326
	word32 a0_13324
	ra_1453 = bl_printk(ra_1453, a0_1767, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13324, out a1_13325, out a2_13326, out a3_13327, out a4_13328, out a5_13329, out s2_1456, out s3_13330, out s4_13331, out s5_13332, out s6_1460, out s7_13333, out s8_13334, out s9_13335, out s10_13336, out s11_13337)
l23037836:
	branch CONVERT(Mem1606[s0_1506 + -932<i32>:byte], byte, word32) >u 1<32> l2303786E
l23037840:
	branch CONVERT(Mem1606[s5_1595 + -695<i32>:byte], byte, word32) >u 1<32> l2303786E
l23037848:
	branch Mem1606[s6_1460 + -380<i32>:int32] == 0<32> l23037FE0
l23037FE0:
	word32 a5_13260
	xTaskGetTickCount(out a5_13260)
l23037850:
	word32 a5_13261
	xTaskGetTickCountFromISR(out a5_13261)
l23037854:
	a3_1839 = s7_1597 + -600<i32>
	a0_1843 = 0x2308513C<32>
l2303786A:
	word32 a0_13365
	word32 s9_13371
	word32 a1_13366
	word32 a2_13367
	word32 a4_13368
	word32 s8_13370
	word32 a5_13369
	ra_1453 = bl_printk(ra_1453, a0_1843, a3_1839, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13365, out a1_13366, out a2_13367, out a3_1588, out a4_13368, out a5_13369, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s7_1597, out s8_13370, out s9_13371, out s10_1593, out s11_1600)
l2303786E:
	s2_1456 = s2_1456 + 1<32>
	branch s2_1456 != 3<32> l230377D4
l23037876:
	branch CONVERT(Mem2145[s0_1506 + -932<i32>:byte], byte, word32) <=u 2<32> l2303823C
l2303823C:
	branch CONVERT(Mem2145[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037880
l23038248:
	branch Mem2145[0x4200DE84<32>:int32] == 0<32> l2303827C
l2303827C:
	word32 a5_13287
	xTaskGetTickCount(out a5_13287)
l23038252:
	word32 a5_13288
	xTaskGetTickCountFromISR(out a5_13288)
l23038256:
	word32 a1_13292
	word32 a3_13294
	word32 a4_13295
	word32 s3_13297
	word32 s5_13299
	word32 s7_13300
	word32 s8_13301
	word32 s9_13302
	word32 s11_13304
	word32 s10_13303
	word32 s4_13298
	word32 a5_13296
	word32 a2_13293
	word32 a0_13291
	ra_1453 = bl_printk(ra_1453, 0x23085240<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13291, out a1_13292, out a2_13293, out a3_13294, out a4_13295, out a5_13296, out s2_1456, out s3_13297, out s4_13298, out s5_13299, out s6_1460, out s7_13300, out s8_13301, out s9_13302, out s10_13303, out s11_13304)
l23037880:
	word32 a3_13264
	word32 a4_13265
	word32 a7_13268
	word32 a6_13267
	word32 a5_13266
	word32 a1_13262
	word32 a2_13263
	memcpy(fp - 128<i32>, 0x2308DE80<32>, 6<32>, out a1_13262, out a2_13263, out a3_13264, out a4_13265, out a5_13266, out a6_13267, out a7_13268)
l23037B5A:
	wLoc7C_8087 = SLICE(dwLoc7C, word16, 0) (alias)
	branch CONVERT(Mem2220[s0_1506 + -932<i32>:byte], byte, word32) >u 2<32> l23037BC2
l23037B64:
	branch CONVERT(Mem2225[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037BC2
l23037B72:
	branch Mem2225[0x4200DE84<32>:int32] == 0<32> l23038282
l23038282:
	word32 a5_13271
	xTaskGetTickCount(out a5_13271)
l23037B7E:
	word32 a5_13272
	xTaskGetTickCountFromISR(out a5_13272)
l23037B82:
	word32 a0_13273
	word32 a2_13275
	word32 a3_13276
	word32 a4_13277
	word32 s11_13286
	word32 a5_13278
	word32 s10_13285
	word32 s9_13284
	word32 s3_13279
	word32 s4_13280
	word32 s5_13281
	word32 s8_13283
	word32 s7_13282
	word32 a1_13274
	ra_1453 = bl_printk(ra_1453, 0x23085270<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13273, out a1_13274, out a2_13275, out a3_13276, out a4_13277, out a5_13278, out s2_1456, out s3_13279, out s4_13280, out s5_13281, out s6_1460, out s7_13282, out s8_13283, out s9_13284, out s10_13285, out s11_13286)
l23037BC2:
	bl_wifi_ap_mac_addr_set(fp - 128<i32>)
	bl_wifi_sta_mac_addr_set(fp - 128<i32>)
l23037BCE:
	word32 a0_2355
	word32 s3_13199
	word32 s5_13201
	word32 s4_13200
	word32 s0_13198
	word32 s1_2365
	word32 a5_2360
	word32 s2_2366
	word32 s6_2370
	word32 ra_2363 = fdt_subnode_offset(ra_1453, s1_1455, s1_1455, 0x230806D8<32>, s2_1456, s6_1460, dwLocF8, dwLocC8, s9, out s0_13198, out s1_2365, out a0_2355, out a5_2360, out s2_2366, out s3_13199, out s4_13200, out s5_13201, out s6_2370)
	branch a0_2355 <= 0<32> l23037C64
l23037BE4:
	word32 a0_2380
	word32 a4_2384
	word32 s0_2389
	word32 a1_13383
	word32 a5_13385
	word32 s3_13387
	word32 s4_13388
	word32 s5_13389
	word32 s8_13390
	word32 s2_13386
	word32 a3_13384
	ra_2363 = fdt_getprop(ra_2363, s1_2365, 0x230806E0<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2389, out s1_2365, out a0_2380, out a1_13383, out a3_13384, out a4_2384, out a5_13385, out s2_13386, out s3_13387, out s4_13388, out s5_13389, out s6_2370, out s8_13390)
	a5_2360 = 4<32>
	s2_2366 = a0_2380
	branch a4_2384 != 4<32> l23038290
l23038290:
	branch CONVERT(Mem2353[s0_2389 + -932<i32>:byte], byte, word32) >u 4<32> l23037C64
l23038298:
	branch CONVERT(Mem2353[0x4201FD49<32>:byte], byte, word32) >u 4<32> l23037C64
l230382A4:
	branch Mem2353[0x4200DE84<32>:int32] == 0<32> l230382D6
l230382D6:
	word32 a5_13941
	xTaskGetTickCount(out a5_13941)
l230382AE:
	word32 a5_13942
	xTaskGetTickCountFromISR(out a5_13942)
l230382B2:
	word32 a2_13963
	word32 a4_13965
	word32 s3_13966
	word32 s4_13967
	word32 s5_13968
	word32 s7_13969
	word32 s8_13970
	word32 s9_13971
	word32 s11_13973
	word32 s10_13972
	word32 a3_13964
	word32 a1_13962
	word32 a0_13961
	ra_2363 = bl_printk(ra_2363, 0x23080720<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2365, out a0_13961, out a1_13962, out a2_13963, out a3_13964, out a4_13965, out a5_2360, out s2_2366, out s3_13966, out s4_13967, out s5_13968, out s6_2370, out s7_13969, out s8_13970, out s9_13971, out s10_13972, out s11_13973)
l23037BFE:
	branch CONVERT(Mem2353[s0_2389 + -932<i32>:byte], byte, word32) >u 2<32> l23037C54
l23037C08:
	branch CONVERT(Mem2353[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037C54
l23037C14:
	branch Mem2353[0x4200DE84<32>:int32] == 0<32> l2303828A
l2303828A:
	word32 a5_13391
	xTaskGetTickCount(out a5_13391)
l23037C20:
	word32 a5_13392
	xTaskGetTickCountFromISR(out a5_13392)
l23037C24:
	fdt32_to_cpu(Mem2458[a0_2380:int32])
	word32 a5_13415
	word32 s3_13416
	word32 s7_13419
	word32 s5_13418
	word32 s4_13417
	word32 s8_13420
	word32 s9_13421
	word32 s11_13423
	word32 s10_13422
	word32 a1_13411
	word32 a3_13413
	word32 a4_13414
	word32 a2_13412
	word32 a0_13410
	ra_2363 = bl_printk(ra_2363, 0x230852B4<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2365, out a0_13410, out a1_13411, out a2_13412, out a3_13413, out a4_13414, out a5_13415, out s2_2366, out s3_13416, out s4_13417, out s5_13418, out s6_2370, out s7_13419, out s8_13420, out s9_13421, out s10_13422, out s11_13423)
l23037C54:
	a5_2360 = bl_wifi_country_code_set(fdt32_to_cpu(Mem2497[s2_2366:int32]) & 255<i32>)
l23037C64:
	word32 a0_2522
	word32 s0_13378
	word32 s3_13380
	word32 s5_13382
	word32 s4_13381
	word32 a5_13379
	word32 s2_2533
	word32 s6_2537
	word32 s1_2532
	word32 ra_2530 = fdt_subnode_offset(ra_2363, s1_2365, s1_2365, a5_2360 + -1688<i32>, s2_2366, s6_2370, dwLocF8, dwLocC8, s9, out s0_13378, out s1_2532, out a0_2522, out a5_13379, out s2_2533, out s3_13380, out s4_13381, out s5_13382, out s6_2537)
	branch a0_2522 <= 0<32> l23038860
l23037C78:
	word32 a4_2552
	word32 s0_2557
	word32 s8_13407
	word32 s5_13405
	word32 s6_13406
	word32 a1_13399
	word32 s3_13403
	word32 s4_13404
	word32 a3_13400
	word32 s2_13402
	word32 a5_13401
	word32 a0_2548
	word32 s1_2558
	word32 ra_2556 = fdt_getprop(ra_2530, s1_2532, 0x230852DC<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2557, out s1_2558, out a0_2548, out a1_13399, out a3_13400, out a4_2552, out a5_13401, out s2_13402, out s3_13403, out s4_13404, out s5_13405, out s6_13406, out s8_13407)
	branch a4_2552 != 0x10<32> l230382E2
l230382E2:
	branch CONVERT(Mem2507[s0_2557 + -932<i32>:byte], byte, word32) >u 4<32> l23037D12
l230382EC:
	branch CONVERT(Mem2507[0x4201FD49<32>:byte], byte, word32) >u 4<32> l23037D12
l230382F8:
	branch Mem2507[0x4200DE84<32>:int32] == 0<32> l2303832C
l2303832C:
	word32 a5_13774
	xTaskGetTickCount(out a5_13774)
l23038302:
	word32 a5_13775
	xTaskGetTickCountFromISR(out a5_13775)
l23038306:
	word32 a3_13779
	word32 s2_13782
	word32 s4_13784
	word32 s6_13786
	word32 s7_13787
	word32 s9_13789
	word32 s11_13791
	word32 s10_13790
	word32 s8_13788
	word32 s5_13785
	word32 s3_13783
	word32 a5_13781
	word32 a4_13780
	word32 a2_13778
	word32 a1_13777
	word32 a0_13776
	ra_2556 = bl_printk(ra_2556, 0x2308531C<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2558, out a0_13776, out a1_13777, out a2_13778, out a3_13779, out a4_13780, out a5_13781, out s2_13782, out s3_13783, out s4_13784, out s5_13785, out s6_13786, out s7_13787, out s8_13788, out s9_13789, out s10_13790, out s11_13791)
l23037C94:
	word32 s2_2616 = 0<32>
l23037C98:
	a0_2548 = fdt32_to_cpu(a0_2548)
	Mem2629[fp - 128<i32> + s2_2616:byte] = SLICE(a0_2548, byte, 0)
	s2_2616 = s2_2616 + 1<32>
	branch s2_2616 != 4<32> l23037C98
l23037CB2:
	branch CONVERT(Mem2629[s0_2557 + -932<i32>:byte], byte, word32) >u 2<32> l23037D0C
l23037CBC:
	branch CONVERT(Mem2629[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037D0C
l23037CC8:
	branch Mem2629[0x4200DE84<32>:int32] == 0<32> l230382DC
l230382DC:
	word32 a5_13408
	xTaskGetTickCount(out a5_13408)
l23037CD4:
	word32 a5_13409
	xTaskGetTickCountFromISR(out a5_13409)
l23037CD8:
	word32 s2_13430
	word32 s4_13432
	word32 s6_13434
	word32 s11_13439
	word32 s10_13438
	word32 s7_13435
	word32 s9_13437
	word32 s8_13436
	word32 s5_13433
	word32 s3_13431
	word32 a4_13428
	word32 a5_13429
	word32 a3_13427
	word32 a1_13425
	word32 a2_13426
	word32 a0_13424
	ra_2556 = bl_printk(ra_2556, 0x230852EC<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2558, out a0_13424, out a1_13425, out a2_13426, out a3_13427, out a4_13428, out a5_13429, out s2_13430, out s3_13431, out s4_13432, out s5_13433, out s6_13434, out s7_13435, out s8_13436, out s9_13437, out s10_13438, out s11_13439)
l23037D0C:
	bl_tpc_update_power_rate_11b(fp - 128<i32>)
l23037D12:
	word32 dwLoc7C_12765
	word32 a4_2710
	word32 s0_2715
	word32 a5_13767
	word32 a1_13765
	word32 a3_13766
	word32 s2_13768
	word32 s3_13769
	word32 s4_13770
	word32 s5_13771
	word32 s6_13772
	word32 s8_13773
	word32 a0_2706
	word32 s1_2716
	word32 ra_2714 = fdt_getprop(ra_2556, s1_2558, 0x23085354<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2715, out s1_2716, out a0_2706, out a1_13765, out a3_13766, out a4_2710, out a5_13767, out s2_13768, out s3_13769, out s4_13770, out s5_13771, out s6_13772, out s8_13773)
	branch a4_2710 != 32<i32> l23038338
l23038338:
	dwLoc7C_12765 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8087) (alias)
	branch CONVERT(Mem2704[s0_2715 + -932<i32>:byte], byte, word32) >u 4<32> l23037DC6
l23038342:
	dwLoc7C_12765 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8087) (alias)
	branch CONVERT(Mem2704[0x4201FD49<32>:byte], byte, word32) >u 4<32> l23037DC6
l2303834E:
	branch Mem2704[0x4200DE84<32>:int32] == 0<32> l23038382
l23038382:
	word32 a5_13575
	xTaskGetTickCount(out a5_13575)
l23038358:
	word32 a5_13576
	xTaskGetTickCountFromISR(out a5_13576)
l2303835C:
	word32 s7_13725
	word32 s10_13728
	word32 s11_13729
	word32 s9_13727
	word32 s8_13726
	word32 a0_13714
	word32 s6_13724
	word32 s5_13723
	word32 a1_13715
	word32 s4_13722
	word32 s3_13721
	word32 a2_13716
	word32 a3_13717
	word32 a4_13718
	word32 s2_13720
	word32 a5_13719
	ra_2714 = bl_printk(ra_2714, 0x230853A0<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2716, out a0_13714, out a1_13715, out a2_13716, out a3_13717, out a4_13718, out a5_13719, out s2_13720, out s3_13721, out s4_13722, out s5_13723, out s6_13724, out s7_13725, out s8_13726, out s9_13727, out s10_13728, out s11_13729)
	dwLoc7C_12765 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8087) (alias)
l23037D30:
	word32 s2_2774 = 0<32>
l23037D34:
	a0_2706 = fdt32_to_cpu(a0_2706)
	Mem2787[fp - 128<i32> + s2_2774:byte] = SLICE(a0_2706, byte, 0)
	s2_2774 = s2_2774 + 1<32>
	branch s2_2774 != 8<32> l23037D34
l23037D4E:
	word32 dwLoc7C_12770 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8087)
	branch CONVERT(Mem2787[s0_2715 + -932<i32>:byte], byte, word32) >u 2<32> l23037DC0
l23037D58:
	dwLoc7C_12770 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8087) (alias)
	branch CONVERT(Mem2787[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037DC0
l23037D64:
	branch Mem2787[0x4200DE84<32>:int32] == 0<32> l23038332
l23038332:
	word32 a5_13440
	xTaskGetTickCount(out a5_13440)
l23037D70:
	word32 a5_13441
	xTaskGetTickCountFromISR(out a5_13441)
l23037D74:
	word32 a5_2803 = CONVERT(bLoc79_7680, byte, word32)
	dwLocF8 = a5_2803
	dwLoc7C_12770 = CONVERT(bLoc7A_7727, byte, word32)
	word32 a0_13444
	word32 a2_13446
	word32 a4_13448
	word32 a5_13449
	word32 s5_13453
	word32 s6_13454
	word32 s9_13457
	word32 s10_13458
	word32 s11_13459
	word32 s8_13456
	word32 s7_13455
	word32 s3_13451
	word32 s4_13452
	word32 s2_13450
	word32 a3_13447
	word32 a1_13445
	ra_2714 = bl_printk(ra_2714, 0x23085364<32>, 0x23084DA8<32>, a5_2803, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2716, out a0_13444, out a1_13445, out a2_13446, out a3_13447, out a4_13448, out a5_13449, out s2_13450, out s3_13451, out s4_13452, out s5_13453, out s6_13454, out s7_13455, out s8_13456, out s9_13457, out s10_13458, out s11_13459)
l23037DC0:
	bl_tpc_update_power_rate_11g(fp - 128<i32>)
	dwLoc7C_12765 = dwLoc7C_12770 (alias)
l23037DC6:
	byte bLoc7A_7839 = SLICE(dwLoc7C_12765, byte, 16)
	byte bLoc79_7820 = SLICE(dwLoc7C_12765, byte, 24)
	word32 a4_2875
	word32 s0_2880
	word32 s4_13571
	word32 s8_13574
	word32 s6_13573
	word32 s5_13572
	word32 s3_13570
	word32 s2_13569
	word32 a5_13568
	word32 a3_13567
	word32 a1_13566
	word32 a0_2871
	word32 s1_2881
	word32 ra_2879 = fdt_getprop(ra_2714, s1_2716, 0x230853D8<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2880, out s1_2881, out a0_2871, out a1_13566, out a3_13567, out a4_2875, out a5_13568, out s2_13569, out s3_13570, out s4_13571, out s5_13572, out s6_13573, out s8_13574)
	word32 dwLoc7C_7843 = dwLoc7C_12765
	branch a4_2875 != 32<i32> l2303838E
l2303838E:
	branch CONVERT(Mem2869[s0_2880 + -932<i32>:byte], byte, word32) >u 4<32> l23037E7A
l23038398:
	branch CONVERT(Mem2869[0x4201FD49<32>:byte], byte, word32) >u 4<32> l23037E7A
l230383A4:
	branch Mem2869[0x4200DE84<32>:int32] == 0<32> l230383D8
l230383D8:
	word32 a5_13465
	xTaskGetTickCount(out a5_13465)
l230383AE:
	word32 a5_13466
	xTaskGetTickCountFromISR(out a5_13466)
l230383B2:
	word32 s10_13497
	word32 s6_13493
	word32 s4_13491
	word32 s2_13489
	word32 a2_13485
	word32 a3_13486
	word32 s7_13494
	word32 s11_13498
	word32 s8_13495
	word32 s9_13496
	word32 s5_13492
	word32 s3_13490
	word32 a4_13487
	word32 a5_13488
	word32 a0_13483
	word32 a1_13484
	ra_2879 = bl_printk(ra_2879, 0x23085424<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2881, out a0_13483, out a1_13484, out a2_13485, out a3_13486, out a4_13487, out a5_13488, out s2_13489, out s3_13490, out s4_13491, out s5_13492, out s6_13493, out s7_13494, out s8_13495, out s9_13496, out s10_13497, out s11_13498)
l23037DE4:
	word32 s2_2939 = 0<32>
l23037DE8:
	a0_2871 = fdt32_to_cpu(a0_2871)
	Mem2952[fp - 128<i32> + s2_2939:byte] = SLICE(a0_2871, byte, 0)
	s2_2939 = s2_2939 + 1<32>
	branch s2_2939 != 8<32> l23037DE8
l23037E02:
	branch CONVERT(Mem2952[s0_2880 + -932<i32>:byte], byte, word32) >u 2<32> l23037E74
l23037E0C:
	branch CONVERT(Mem2952[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037E74
l23037E18:
	branch Mem2952[0x4200DE84<32>:int32] == 0<32> l23038388
l23038388:
	word32 a5_13442
	xTaskGetTickCount(out a5_13442)
l23037E24:
	word32 a5_13443
	xTaskGetTickCountFromISR(out a5_13443)
l23037E28:
	word32 a5_2968 = CONVERT(bLoc79_7820, byte, word32)
	dwLocF8 = a5_2968
	dwLoc7C_7843 = CONVERT(bLoc7A_7839, byte, word32)
	word32 s10_13481
	word32 s6_13477
	word32 s3_13474
	word32 a4_13471
	word32 a1_13468
	word32 s7_13478
	word32 s4_13475
	word32 a5_13472
	word32 a2_13469
	word32 s11_13482
	word32 s8_13479
	word32 s9_13480
	word32 s5_13476
	word32 s2_13473
	word32 a3_13470
	word32 a0_13467
	ra_2879 = bl_printk(ra_2879, 0x230853E8<32>, 0x23084DA8<32>, a5_2968, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2881, out a0_13467, out a1_13468, out a2_13469, out a3_13470, out a4_13471, out a5_13472, out s2_13473, out s3_13474, out s4_13475, out s5_13476, out s6_13477, out s7_13478, out s8_13479, out s9_13480, out s10_13481, out s11_13482)
l23037E74:
	bl_tpc_update_power_rate_11n(fp - 128<i32>)
l23037E7A:
	dwLocDC = 0<32>
	word32 a0_3034
	word32 s4_13462
	word32 s8_13464
	word32 s5_13463
	word32 s3_13461
	word32 s0_13460
	ra_2530 = fdt_stringlist_count(ra_2879, s1_2881, 0x2308545C<32>, 0x23085000<32>, dwLocF8, 0<32>, dwLoc48, s9, out s0_13460, out s1_2532, out a0_3034, out s2_2533, out s3_13461, out s4_13462, out s5_13463, out s6_2537, out s8_13464)
	branch a0_3034 != 1<32> l23038860
l23037E94:
	word32 a0_3061
	word32 s8_13506
	word32 s3_13505
	word32 s2_13504
	word32 a5_13503
	word32 a4_13502
	word32 a3_13501
	word32 s1_13499
	word32 a1_13500
	word32 a2_3063
	word32 s0_3070
	word32 s5_3075
	word32 s4_3074
	ra_2530 = fdt_stringlist_get(ra_2530, s1_2532, s2_2533 + 1116<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_3070, out s1_13499, out a0_3061, out a1_13500, out a2_3063, out a3_13501, out a4_13502, out a5_13503, out s2_13504, out s3_13505, out s4_3074, out s5_3075, out s6_2537, out s8_13506)
	word32 s3_3083 = a0_3061
	branch CONVERT(Mem3031[s0_3070 + -932<i32>:byte], byte, word32) >u 2<32> l23037EF0
l23037EB0:
	branch CONVERT(Mem3031[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037EF0
l23037EBC:
	branch Mem3031[0x4200DE84<32>:int32] == 0<32> l230383DE
l230383DE:
	word32 a5_13507
	xTaskGetTickCount(out a5_13507)
l23037EC8:
	word32 a5_13508
	xTaskGetTickCountFromISR(out a5_13508)
l23037ECC:
	word32 s10_13519
	word32 s11_13520
	word32 s9_13518
	word32 s8_13517
	word32 s1_13509
	word32 s7_13516
	word32 s2_13515
	word32 a0_13510
	word32 a1_13511
	word32 a3_13512
	word32 a5_13514
	word32 a4_13513
	ra_2530 = bl_printk(ra_2530, 0x23085468<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13509, out a0_13510, out a1_13511, out a2_3063, out a3_13512, out a4_13513, out a5_13514, out s2_13515, out s3_3083, out s4_3074, out s5_3075, out s6_2537, out s7_13516, out s8_13517, out s9_13518, out s10_13519, out s11_13520)
l23037EF0:
	s1_2532 = dwLoc7C_7843
	s2_2533 = 2<32>
	branch a2_3063 > 2<32> l23038860
l23037EF8:
	word32 a2_13522
	word32 a4_13524
	word32 a6_13526
	word32 a7_13527
	word32 a5_13525
	word32 a3_13523
	word32 a1_13521
	memcpy(fp - 196<i32>, s3_3083, a2_3063, out a1_13521, out a2_13522, out a3_13523, out a4_13524, out a5_13525, out a6_13526, out a7_13527)
	branch CONVERT(Mem3031[s0_3070 + -932<i32>:byte], byte, word32) >u 2<32> l23037F4C
l23037F0C:
	branch CONVERT(Mem3151[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23037F4C
l23037F18:
	branch Mem3151[0x4200DE84<32>:int32] == 0<32> l230383E4
l230383E4:
	word32 a5_13545
	xTaskGetTickCount(out a5_13545)
l23037F24:
	word32 a5_13546
	xTaskGetTickCountFromISR(out a5_13546)
l23037F28:
	word32 s11_13559
	word32 s2_13553
	word32 s7_13555
	word32 s9_13557
	word32 s10_13558
	word32 s8_13556
	word32 s6_13554
	word32 a4_13551
	word32 a5_13552
	word32 a2_13549
	word32 a3_13550
	word32 a0_13547
	word32 a1_13548
	ra_2530 = bl_printk(ra_2530, 0x23085490<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13547, out a1_13548, out a2_13549, out a3_13550, out a4_13551, out a5_13552, out s2_13553, out s3_3083, out s4_3074, out s5_3075, out s6_13554, out s7_13555, out s8_13556, out s9_13557, out s10_13558, out s11_13559)
l23037F4C:
	word32 a0_13529
	word32 a2_13531
	word32 a3_13532
	word32 a4_13533
	word32 a4_13540
	word32 a5_13541
	word32 a2_13538
	word32 a3_13539
	word32 a1_13537
	word32 a5_13534
	word32 a0_13536
	word32 t1_13535
	word32 a1_13530
	word32 t1_13528
	word32 ra_3219 = memset(memset(ra_2530, fp - 176<i32>, 0<32>, 0xE<32>, out t1_13528, out a0_13529, out a1_13530, out a2_13531, out a3_13532, out a4_13533, out a5_13534), fp - 160<i32>, 0<32>, 0xE<32>, out t1_13535, out a0_13536, out a1_13537, out a2_13538, out a3_13539, out a4_13540, out a5_13541)
	word32 a1_13542
	word32 a2_13543
	word32 a4_13544
	word32 a5_3226
	word32 a3_3224
	strlen(fp - 196<i32>, out a1_13542, out a2_13543, out a3_3224, out a4_13544, out a5_3226)
	word32 s2_3230 = fp - 196<i32>
	word32 s9_3232 = 0<32>
	word32 s7_3233 = 0x42020000<32>
	word32 s6_3235 = 0x23085000<32>
l23037F80:
	word32 a0_3670
	word32 a3_3668
	branch s9_3232 >= a5_3226 l230386C8
l23037F86:
	word32 s2_3271
	word32 a0_3353
	word32 a3_3347
	word32 a5_3243 = CONVERT(Mem3238[s2_3230:byte], byte, word32)
	branch a5_3243 == 70<i32> l230383FA
l23037F92:
	word32 a4_3245
	branch a5_3243 >u 70<i32> l230383EA
l230383EA:
	a4_3245 = 98<i32>
	branch a5_3243 == 98<i32> l2303859C
l230383F2:
	branch a5_3243 != 102<i32> l23037F9E
l230383FA:
	word32 a1_13560
	word32 a3_13561
	word32 a4_13562
	word32 a5_13563
	word32 s8_3276
	word32 a0_3260
	ra_3219 = fdt_getprop(ra_3219, s1_2532, 0x23085590<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_3070, out s1_2532, out a0_3260, out a1_13560, out a3_13561, out a4_13562, out a5_13563, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s8_3276)
	a3_3224 = 0<32>
	branch true l23038760
l23038760:
	branch CONVERT(Mem3257[s0_3070 + -932<i32>:byte], byte, word32) >u 4<32> l230386BE
l2303876A:
	branch CONVERT(Mem3257[s7_3233 + -695<i32>:byte], byte, word32) >u 4<32> l2303879C
l23038772:
	branch Mem3257[s8_3276 + -380<i32>:int32] == 0<32> l230387D2
l230387D2:
	word32 a5_13621
	xTaskGetTickCount(out a5_13621)
l23038778:
	word32 a5_13622
	xTaskGetTickCountFromISR(out a5_13622)
l2303877C:
	word32 s11_13644
	word32 a5_13642
	word32 s10_13643
	word32 a4_13641
	word32 a0_13638
	word32 a2_13640
	word32 a1_13639
	ra_3219 = bl_printk(ra_3219, 0x23085604<32>, s6_3235 + -600<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13638, out a1_13639, out a2_13640, out a3_3224, out a4_13641, out a5_13642, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_3276, out s9_3232, out s10_13643, out s11_13644)
l2303879C:
	branch CONVERT(Mem3257[s0_3070 + -932<i32>:byte], byte, word32) >u 1<32> l230386BE
l230387A6:
	branch CONVERT(Mem3257[s7_3233 + -695<i32>:byte], byte, word32) >u 1<32> l230386BE
l230387AE:
	branch Mem3257[s8_3276 + -380<i32>:int32] == 0<32> l23038AF4
l23038AF4:
	word32 a5_13658
	xTaskGetTickCount(out a5_13658)
l230387B6:
	word32 a5_13659
	xTaskGetTickCountFromISR(out a5_13659)
l230387BA:
	a3_3347 = s6_3235 + -600<i32>
	a0_3353 = 0x230856DC<32>
l2303841A:
	word32 s3_3354 = 0<32>
	word32 s5_3355 = 0xE<32>
l2303841E:
	a0_3260 = fdt32_to_cpu(a0_3260)
	Mem3369[fp - 160<i32> + s3_3354:byte] = SLICE(a0_3260, byte, 0)
	s3_3354 = s3_3354 + 1<32>
	branch s3_3354 != 0xE<32> l2303841E
l2303843C:
	branch CONVERT(Mem3369[s0_3070 + -932<i32>:byte], byte, word32) >u 2<32> l23038484
l2303844A:
	branch CONVERT(Mem3369[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23038484
l23038456:
	branch Mem3369[0x4200DE84<32>:int32] == 0<32> l23038754
l23038754:
	word32 a5_13585
	xTaskGetTickCount(out a5_13585)
l23038462:
	word32 a5_13586
	xTaskGetTickCountFromISR(out a5_13586)
l23038466:
	word32 s2_13611
	word32 s3_13612
	word32 s4_13613
	word32 s7_13614
	word32 s8_13615
	word32 s9_13616
	word32 s11_13618
	word32 s10_13617
	word32 a0_13605
	word32 a2_13607
	word32 a4_13609
	word32 a5_13610
	word32 a3_13608
	word32 a1_13606
	word32 s1_13604
	ra_3219 = bl_printk(ra_3219, 0x2308559C<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13604, out a0_13605, out a1_13606, out a2_13607, out a3_13608, out a4_13609, out a5_13610, out s2_13611, out s3_13612, out s4_13613, out s5_3355, out s6_3235, out s7_13614, out s8_13615, out s9_13616, out s10_13617, out s11_13618)
l23038484:
	word32 s0_3441
	word32 a3_13578
	word32 a4_13579
	word32 s4_13581
	word32 s8_13583
	word32 s9_13584
	word32 s7_13582
	word32 a5_13580
	word32 s1_13577
	word32 s2_3445
	word32 s3_3446
	ra_3219 = log_buf_out(ra_3219, fp - 160<i32>, 0xE<32>, 0<32>, s5_3355, s6_3235, s3_290, dwLocE0, 0<32>, dwLocD0, dwLocA8, s8, s0, dwArg0C, out s0_3441, out s1_13577, out a3_13578, out a4_13579, out a5_13580, out s2_3445, out s3_3446, out s4_13581, out s5_3075, out s6_3235, out s7_13582, out s8_13583, out s9_13584)
	word32 a5_3457 = fp - 160<i32>
l2303849C:
	a5_3457 = a5_3457 + 1<32>
	Mem3464[a5_3457 + 4095<i32>:byte] = SLICE(CONVERT(Mem3460[a5_3457:byte], byte, word32) + 0xFFFFFFF6<32>, byte, 0)
	branch fp - 146<i32> != a5_3457 l2303849C
l230384AC:
	branch CONVERT(Mem3464[s0_3441 + -932<i32>:byte], byte, word32) >u 2<32> l23038534
l230384B6:
	s5_3075 = 0x42020000<32>
	branch CONVERT(Mem3464[0x4201FD49<32>:byte], byte, word32) >u 2<32> l230384F4
l230384C4:
	branch Mem3464[0x4200DE84<32>:int32] == 0<32> l2303875A
l2303875A:
	word32 a5_13619
	xTaskGetTickCount(out a5_13619)
l230384D0:
	word32 a5_13620
	xTaskGetTickCountFromISR(out a5_13620)
l230384D4:
	word32 s1_13623
	word32 a2_13626
	word32 a4_13628
	word32 s4_13630
	word32 s7_13631
	word32 s9_13633
	word32 s11_13635
	word32 s10_13634
	word32 s8_13632
	word32 a5_13629
	word32 a3_13627
	word32 a1_13625
	word32 a0_13624
	ra_3219 = bl_printk(ra_3219, 0x230855C8<32>, s3_3446 + -600<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13623, out a0_13624, out a1_13625, out a2_13626, out a3_13627, out a4_13628, out a5_13629, out s2_3445, out s3_3446, out s4_13630, out s5_3075, out s6_3235, out s7_13631, out s8_13632, out s9_13633, out s10_13634, out s11_13635)
l230384F4:
	branch CONVERT(Mem3464[s0_3441 + -932<i32>:byte], byte, word32) >u 1<32> l23038534
l230384FE:
	branch CONVERT(Mem3464[s5_3075 + -695<i32>:byte], byte, word32) >u 1<32> l23038534
l23038506:
	branch Mem3464[0x4200DE84<32>:int32] == 0<32> l230387D8
l230387D8:
	word32 a5_13636
	xTaskGetTickCount(out a5_13636)
l23038512:
	word32 a5_13637
	xTaskGetTickCountFromISR(out a5_13637)
l23038516:
	word32 s11_13657
	word32 s9_13655
	word32 s10_13656
	word32 a0_13646
	word32 s7_13653
	word32 s8_13654
	word32 a1_13647
	word32 a5_13651
	word32 s4_13652
	word32 a2_13648
	word32 a4_13650
	word32 a3_13649
	word32 s1_13645
	ra_3219 = bl_printk(ra_3219, 0x23085638<32>, s3_3446 + -600<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13645, out a0_13646, out a1_13647, out a2_13648, out a3_13649, out a4_13650, out a5_13651, out s2_3445, out s3_3446, out s4_13652, out s5_3075, out s6_3235, out s7_13653, out s8_13654, out s9_13655, out s10_13656, out s11_13657)
l23038534:
	word32 a4_3574 = CONVERT(Mem3464[s0_3441 + -932<i32>:byte], byte, word32)
	branch CONVERT(Mem3464[s2_3445:byte], byte, word32) != 66<i32> l230387E4
l230387E4:
	branch a4_3574 >u 1<32> l23038824
l230387EA:
	branch CONVERT(Mem3464[0x4201FD49<32>:byte], byte, word32) >u 1<32> l23038824
l230387F6:
	branch Mem3464[0x4200DE84<32>:int32] == 0<32> l23038AEE
l23038AEE:
	word32 a5_13697
	xTaskGetTickCount(out a5_13697)
l23038802:
	word32 a5_13698
	xTaskGetTickCountFromISR(out a5_13698)
l23038806:
	word32 s11_13713
	word32 s3_13707
	word32 s7_13709
	word32 s9_13711
	word32 s10_13712
	word32 s8_13710
	word32 s4_13708
	word32 a5_13705
	word32 s2_13706
	word32 a3_13703
	word32 a4_13704
	word32 a1_13701
	word32 a2_13702
	word32 a0_13700
	word32 s1_13699
	ra_3219 = bl_printk(ra_3219, 0x2308569C<32>, s3_3446 + -600<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13699, out a0_13700, out a1_13701, out a2_13702, out a3_13703, out a4_13704, out a5_13705, out s2_13706, out s3_13707, out s4_13708, out s5_3075, out s6_3235, out s7_13709, out s8_13710, out s9_13711, out s10_13712, out s11_13713)
l23038824:
	word32 a4_3622 = fp - 176<i32>
	word32 a5_3623 = 0<32>
l2303882A:
	a4_3622 = a4_3622 + 1<32>
	Mem3636[a4_3622 + 4095<i32>:byte] = Mem3630[fp - 160<i32> + a5_3623:byte] + Mem3630[a4_3622:byte]
	a5_3623 = a5_3623 + 1<32>
	branch a5_3623 != 0xE<32> l2303882A
l23038544:
	word32 a5_3638 = 0<32>
l23038548:
	Mem3648[fp - 176<i32> + a5_3638:byte] = SLICE(CONVERT(Mem3644[fp - 160<i32> + a5_3638:byte], byte, word32), byte, 0)
	a5_3638 = a5_3638 + 1<32>
	branch a5_3638 != 0xE<32> l23038548
l2303855E:
	branch a4_3574 >u 1<32> l23038844
l23038564:
	branch CONVERT(Mem3648[0x4201FD49<32>:byte], byte, word32) >u 1<32> l23038844
l23038570:
	branch Mem3648[0x4200DE84<32>:int32] == 0<32> l230387DE
l230387DE:
	word32 a5_13695
	xTaskGetTickCount(out a5_13695)
l2303857C:
	word32 a5_13696
	xTaskGetTickCountFromISR(out a5_13696)
l23038580:
	a3_3668 = s3_3446 + -600<i32>
	a0_3670 = 0x2308566C<32>
l23037F96:
	a4_3245 = 66<i32>
	branch a5_3243 == 66<i32> l2303859C
l2303859C:
	word32 a0_3689
	word32 s8_3709
	ra_3219 = bl_efuse_read_pwroft(ra_3219, s0_3070, s1_2532, fp - 160<i32>, a3_3224, a4_3245, s2_3230, s3_3083, s4_3074, mstatus, dwLocD8, dwLocC0, dwLocBC, s10, dwLoc74, dwArg18, out s0_3070, out s1_2532, out a0_3689, out a3_3224, out s2_3271, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_3709, out s9_3232, out mstatus)
	s3_3083 = a0_3689
	word32 a4_3717 = CONVERT(Mem3238[s0_3070 + -932<i32>:byte], byte, word32)
	branch a0_3689 != 0<32> l2303871A
l2303871A:
	branch a4_3717 >u 1<32> l230386BE
l23038720:
	branch CONVERT(Mem3238[s7_3233 + -695<i32>:byte], byte, word32) >u 1<32> l230386BE
l23038728:
	branch Mem3238[s8_3709 + -380<i32>:int32] == 0<32> l2303874E
l2303874E:
	word32 a5_13763
	xTaskGetTickCount(out a5_13763)
l2303872E:
	word32 a5_13764
	xTaskGetTickCountFromISR(out a5_13764)
l23038732:
	a3_3347 = s6_3235 + -600<i32>
	a0_3353 = 0x23085558<32>
l23038748:
	word32 a4_13663
	word32 a5_13664
	word32 s8_13665
	word32 s10_13666
	word32 s11_13667
	word32 a1_13661
	word32 a2_13662
	word32 a0_13660
	ra_3219 = bl_printk(ra_3219, a0_3353, a3_3347, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13660, out a1_13661, out a2_13662, out a3_3224, out a4_13663, out a5_13664, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_13665, out s9_3232, out s10_13666, out s11_13667)
l230385AC:
	branch a4_3717 >u 2<32> l230385E2
l230385B2:
	branch CONVERT(Mem3238[s7_3233 + -695<i32>:byte], byte, word32) >u 2<32> l230385E2
l230385BA:
	branch Mem3238[s8_3709 + -380<i32>:int32] == 0<32> l2303865C
l2303865C:
	word32 a5_13733
	xTaskGetTickCount(out a5_13733)
l230385C0:
	word32 a5_13734
	xTaskGetTickCountFromISR(out a5_13734)
l230385C4:
	word32 s1_13737
	word32 a0_13738
	word32 a1_13739
	word32 s4_13746
	word32 s8_13748
	word32 s9_13749
	word32 s10_13750
	word32 s11_13751
	word32 s7_13747
	word32 s2_13744
	word32 s3_13745
	word32 a5_13743
	word32 a2_13740
	word32 a4_13742
	word32 a3_13741
	ra_3219 = bl_printk(ra_3219, 0x230854B4<32>, s6_3235 + -600<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13737, out a0_13738, out a1_13739, out a2_13740, out a3_13741, out a4_13742, out a5_13743, out s2_13744, out s3_13745, out s4_13746, out s5_3075, out s6_3235, out s7_13747, out s8_13748, out s9_13749, out s10_13750, out s11_13751)
l230385E2:
	word32 s8_3839
	word32 a3_13730
	word32 a5_13732
	word32 a4_13731
	ra_3219 = log_buf_out(ra_3219, fp - 160<i32>, 0xE<32>, 1<32>, s5_3075, s6_3235, s3_290, dwLocE0, 0<32>, dwLocD0, dwLocA8, s8, s0, dwArg0C, out s0_3070, out s1_2532, out a3_13730, out a4_13731, out a5_13732, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_3839, out s9_3232)
	branch CONVERT(Mem3238[s2_3271:byte], byte, word32) != 66<i32> l23038668
l23038668:
	branch CONVERT(Mem3238[s0_3070 + -932<i32>:byte], byte, word32) >u 1<32> l2303869E
l23038672:
	branch CONVERT(Mem3238[s7_3233 + -695<i32>:byte], byte, word32) >u 1<32> l2303869E
l2303867A:
	branch Mem3238[s8_3839 + -380<i32>:int32] == 0<32> l23038714
l23038714:
	word32 a5_13752
	xTaskGetTickCount(out a5_13752)
l23038680:
	word32 a5_13753
	xTaskGetTickCountFromISR(out a5_13753)
l23038684:
	word32 a5_13759
	word32 s10_13761
	word32 s11_13762
	word32 s8_13760
	word32 a3_13757
	word32 a4_13758
	word32 a1_13755
	word32 a2_13756
	word32 a0_13754
	ra_3219 = bl_printk(ra_3219, 0x23085518<32>, s6_3235 + -600<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13754, out a1_13755, out a2_13756, out a3_13757, out a4_13758, out a5_13759, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_13760, out s9_3232, out s10_13761, out s11_13762)
l2303869E:
	word32 a5_3890 = fp - 176<i32>
	a3_3224 = 0xE<32>
l230386A2:
	a5_3890 = a5_3890 + 1<32>
	Mem3903[a5_3890 + 4095<i32>:byte] = Mem3897[fp - 160<i32> + s3_3083:byte] + Mem3897[a5_3890:byte]
	s3_3083 = s3_3083 + 1<32>
	branch s3_3083 != 0xE<32> l230386A2
l230386BC:
l230386BE:
	s9_3232 = s9_3232 + 1<32>
	a5_3226 = 2<32>
	s2_3230 = s2_3271 + 1<32>
	branch s9_3232 != 2<32> l23037F80
l230386C8:
	branch a5_3226 != 0<32> l23038844
l230386CE:
	branch CONVERT(Mem3922[s0_3070 + -932<i32>:byte], byte, word32) >u 2<32> l23038844
l230386D8:
	branch CONVERT(Mem3922[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23038844
l230386E4:
	branch Mem3922[0x4200DE84<32>:int32] == 0<32> l23038B02
l23038B02:
	word32 a5_13678
	xTaskGetTickCount(out a5_13678)
l230386F0:
	word32 a5_13679
	xTaskGetTickCountFromISR(out a5_13679)
l230386F4:
	a3_3668 = 0x23084DA8<32>
	a0_3670 = 0x23085714<32>
l23038600:
l23038602:
	Mem3962[fp - 176<i32> + s3_3083:byte] = SLICE(CONVERT(Mem3958[fp - 160<i32> + s3_3083:byte], byte, word32), byte, 0)
	s3_3083 = s3_3083 + 1<32>
	branch s3_3083 != 0xE<32> l23038602
l23038618:
	branch CONVERT(Mem3962[s0_3070 + -932<i32>:byte], byte, word32) >u 1<32> l23038844
l23038622:
	branch CONVERT(Mem3962[0x4201FD49<32>:byte], byte, word32) >u 1<32> l23038844
l2303862E:
	branch Mem3962[0x4200DE84<32>:int32] == 0<32> l23038662
l23038662:
	word32 a5_13735
	xTaskGetTickCount(out a5_13735)
l23038638:
	word32 a5_13736
	xTaskGetTickCountFromISR(out a5_13736)
l2303863C:
	a3_3668 = s6_3235 + -600<i32>
	a0_3670 = 0x230854E8<32>
l23038656:
	word32 a0_13681
	word32 a1_13682
	word32 a3_13684
	word32 a5_13686
	word32 s2_13687
	word32 s11_13694
	word32 s9_13692
	word32 s10_13693
	word32 s8_13691
	word32 s3_13688
	word32 s7_13690
	word32 s4_13689
	word32 a4_13685
	word32 a2_13683
	word32 s1_13680
	ra_3219 = bl_printk(ra_3219, a0_3670, a3_3668, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13680, out a0_13681, out a1_13682, out a2_13683, out a3_13684, out a4_13685, out a5_13686, out s2_13687, out s3_13688, out s4_13689, out s5_3075, out s6_3235, out s7_13690, out s8_13691, out s9_13692, out s10_13693, out s11_13694)
l23038844:
	word32 s9_13677
	word32 s8_13676
	word32 s7_13675
	word32 s5_13674
	word32 s4_13673
	word32 s3_13672
	word32 a5_13671
	word32 s0_13668
	word32 a4_13670
	word32 a3_13669
	ra_2530 = log_buf_out(ra_3219, fp - 176<i32>, 0xE<32>, 1<32>, s5_3075, s6_3235, s3_290, dwLocE0, 0<32>, dwLocD0, dwLocA8, s8, s0, dwArg0C, out s0_13668, out s1_2532, out a3_13669, out a4_13670, out a5_13671, out s2_2533, out s3_13672, out s4_13673, out s5_13674, out s6_2537, out s7_13675, out s8_13676, out s9_13677)
	phy_powroffset_set(fp - 176<i32>)
l23038860:
	word32 a0_4107
	word32 s3_13396
	word32 s5_13398
	word32 s4_13397
	word32 a5_13394
	word32 s2_13395
	word32 s0_13393
	word32 s1_4117
	word32 s6_4122
	word32 ra_4115 = fdt_subnode_offset(ra_2530, s1_2532, s1_2532, 0x230807D0<32>, s2_2533, s6_2537, dwLocF8, dwLocC8, s9, out s0_13393, out s1_4117, out a0_4107, out a5_13394, out s2_13395, out s3_13396, out s4_13397, out s5_13398, out s6_4122)
	word32 s2_4127 = a0_4107
	branch a0_4107 <= 0<32> l2303892C
l23038878:
	word32 a0_4132
	word32 s3_4144
	word32 s5_13800
	word32 s8_13802
	word32 s6_13801
	word32 s0_13798
	word32 s4_13799
	word32 s2_4143
	word32 s1_4142
	word32 ra_4140 = fdt_stringlist_count(ra_4115, s1_4117, 0x23072164<32>, a0_4107, dwLocF8, dwLocDC, dwLoc48, s9, out s0_13798, out s1_4142, out a0_4132, out s2_4143, out s3_4144, out s4_13799, out s5_13800, out s6_13801, out s8_13802)
	branch a0_4132 == 1<32> l23038B08
l23038B08:
	word32 a0_4158
	word32 a5_4163
	word32 s0_4167
	word32 s6_13809
	word32 s8_13810
	word32 a1_13803
	word32 s4_13807
	word32 s5_13808
	word32 a3_13804
	word32 s3_13806
	word32 a4_13805
	word32 a2_4160
	ra_4140 = fdt_stringlist_get(ra_4140, s1_4142, s3_4144 + 356<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4167, out s1_4142, out a0_4158, out a1_13803, out a2_4160, out a3_13804, out a4_13805, out a5_4163, out s2_4143, out s3_13806, out s4_13807, out s5_13808, out s6_13809, out s8_13810)
	word32 s3_4180 = a0_4158
	branch a5_4163 >u 0xFFFFFFE1<32> l2303888E
l23038B24:
	branch CONVERT(Mem4102[s0_4167 + -932<i32>:byte], byte, word32) >u 2<32> l23038B70
l23038B2E:
	branch CONVERT(Mem4102[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23038B70
l23038B3A:
	branch Mem4102[0x4200DE84<32>:int32] == 0<32> l23038B8A
l23038B8A:
	word32 a5_13854
	xTaskGetTickCount(out a5_13854)
l23038B44:
	word32 a5_13855
	xTaskGetTickCountFromISR(out a5_13855)
l23038B48:
	word32 s11_13889
	word32 s9_13887
	word32 s7_13885
	word32 s5_13883
	word32 a5_13881
	word32 a3_13879
	word32 s10_13888
	word32 s8_13886
	word32 s6_13884
	word32 s4_13882
	word32 a4_13880
	word32 a0_13877
	word32 a1_13878
	ra_4140 = bl_printk(ra_4140, 0x23085744<32>, 0x23084DA8<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4142, out a0_13877, out a1_13878, out a2_4160, out a3_13879, out a4_13880, out a5_13881, out s2_4143, out s3_4180, out s4_13882, out s5_13883, out s6_13884, out s7_13885, out s8_13886, out s9_13887, out s10_13888, out s11_13889)
l23038B70:
	word32 a1_13847
	word32 a3_13849
	word32 a5_13851
	word32 a6_13852
	word32 a7_13853
	word32 a4_13850
	word32 a2_13848
	memcpy(fp - 160<i32>, s3_4180, a2_4160, out a1_13847, out a2_13848, out a3_13849, out a4_13850, out a5_13851, out a6_13852, out a7_13853)
	Mem4253[fp - 64<i32> + s3_4180 + 4000<i32>:byte] = 0<8>
l2303888E:
l23038890:
	word32 a0_4273
	word32 s5_4287
	word32 s3_13873
	word32 s6_13875
	word32 s8_13876
	word32 s4_13874
	word32 s0_13871
	word32 s2_13872
	word32 s1_4283
	word32 ra_4281 = fdt_stringlist_count(ra_4140, s1_4142, 0x2308082C<32>, s2_4143, dwLocF8, dwLocDC, dwLoc48, s9, out s0_13871, out s1_4283, out a0_4273, out s2_13872, out s3_13873, out s4_13874, out s5_4287, out s6_13875, out s8_13876)
	branch a0_4273 == 1<32> l23038B90
l23038B90:
	word32 a0_4299
	word32 a5_4304
	word32 s0_4308
	word32 s8_13819
	word32 a4_13813
	word32 s3_13815
	word32 s5_13817
	word32 s6_13818
	word32 s4_13816
	word32 s2_13814
	word32 a1_13811
	word32 a3_13812
	word32 a2_4301
	ra_4281 = fdt_stringlist_get(ra_4281, s1_4283, s5_4287 + -2004<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4308, out s1_4283, out a0_4299, out a1_13811, out a2_4301, out a3_13812, out a4_13813, out a5_4304, out s2_13814, out s3_13815, out s4_13816, out s5_13817, out s6_13818, out s8_13819)
	word32 s5_4321 = a0_4299
	branch a5_4304 >u 0xFFFFFFE1<32> l230388A6
l23038BAC:
	branch CONVERT(Mem4271[s0_4308 + -932<i32>:byte], byte, word32) >u 2<32> l23038BF8
l23038BB6:
	branch CONVERT(Mem4271[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23038BF8
l23038BC2:
	branch Mem4271[0x4200DE84<32>:int32] == 0<32> l23038C12
l23038C12:
	word32 a5_13845
	xTaskGetTickCount(out a5_13845)
l23038BCC:
	word32 a5_13846
	xTaskGetTickCountFromISR(out a5_13846)
l23038BD0:
	word32 a0_13890
	word32 s11_13903
	word32 s9_13901
	word32 s10_13902
	word32 s7_13899
	word32 s8_13900
	word32 s4_13897
	word32 s6_13898
	word32 s2_13895
	word32 s3_13896
	word32 a4_13893
	word32 a5_13894
	word32 a1_13891
	word32 a3_13892
	ra_4281 = bl_printk(ra_4281, 0x23085784<32>, 0x23084DA8<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4283, out a0_13890, out a1_13891, out a2_4301, out a3_13892, out a4_13893, out a5_13894, out s2_13895, out s3_13896, out s4_13897, out s5_4321, out s6_13898, out s7_13899, out s8_13900, out s9_13901, out s10_13902, out s11_13903)
l23038BF8:
	word32 a2_13839
	word32 a5_13842
	word32 a7_13844
	word32 a6_13843
	word32 a4_13841
	word32 a3_13840
	word32 a1_13838
	memcpy(fp - 128<i32>, s5_4321, a2_4301, out a1_13838, out a2_13839, out a3_13840, out a4_13841, out a5_13842, out a6_13843, out a7_13844)
	Mem4394[fp - 64<i32> + s5_4321 + 4032<i32>:byte] = 0<8>
l230388A6:
l230388A8:
	word32 a0_4415
	word32 s0_4424
	word32 a3_13906
	word32 a5_13908
	word32 s2_13909
	word32 s4_13910
	word32 s8_13912
	word32 s5_13911
	word32 a4_13907
	word32 a1_13905
	word32 s1_13904
	word32 s3_4427
	word32 ra_4423 = fdt_getprop(ra_4281, s1_4283, 0x23080888<32>, dwLocF8, 0<32>, dwLocBC, dwLoc28, dwArg08, out s0_4424, out s1_13904, out a0_4415, out a1_13905, out a3_13906, out a4_13907, out a5_13908, out s2_13909, out s3_4427, out s4_13910, out s5_13911, out s6_4122, out s8_13912)
	word32 s2_4435 = a0_4415
	branch a0_4415 == 0<32> l23038C1E
l23038C1E:
	branch CONVERT(Mem4413[s0_4424 + -932<i32>:byte], byte, word32) >u 4<32> l23038920
l23038C2A:
	branch CONVERT(Mem4413[0x4201FD49<32>:byte], byte, word32) >u 4<32> l23038920
l23038C38:
	branch Mem4413[0x4200DE84<32>:int32] == 0<32> l23038C6C
l23038C6C:
	word32 a5_13836
	xTaskGetTickCount(out a5_13836)
l23038C42:
	word32 a5_13837
	xTaskGetTickCountFromISR(out a5_13837)
l23038C46:
	word32 a3_13860
	word32 a5_13862
	word32 s10_13869
	word32 s11_13870
	word32 s2_13863
	word32 s8_13867
	word32 s9_13868
	word32 s4_13864
	word32 s7_13866
	word32 s5_13865
	word32 a4_13861
	word32 a1_13858
	word32 a2_13859
	word32 a0_13857
	word32 s1_13856
	ra_4423 = bl_printk(ra_4423, 0x230808D0<32>, 0x23084DA8<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_13856, out a0_13857, out a1_13858, out a2_13859, out a3_13860, out a4_13861, out a5_13862, out s2_13863, out s3_4427, out s4_13864, out s5_13865, out s6_4122, out s7_13866, out s8_13867, out s9_13868, out s10_13869, out s11_13870)
l230388C0:
	branch CONVERT(Mem4413[s0_4424 + -932<i32>:byte], byte, word32) >u 2<32> l23038914
l230388CA:
	branch CONVERT(Mem4413[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23038914
l230388D6:
	branch Mem4413[0x4200DE84<32>:int32] == 0<32> l23038C18
l23038C18:
	word32 a5_13820
	xTaskGetTickCount(out a5_13820)
l230388E2:
	word32 a5_13821
	xTaskGetTickCountFromISR(out a5_13821)
l230388E6:
	fdt32_to_cpu(Mem4495[a0_4415:int32])
	word32 a4_13827
	word32 a2_13825
	word32 a0_13823
	word32 a3_13826
	word32 a1_13824
	word32 s1_13822
	word32 a5_13828
	word32 s4_13829
	word32 s11_13835
	word32 s5_13830
	word32 s7_13831
	word32 s8_13832
	word32 s10_13834
	word32 s9_13833
	ra_4423 = bl_printk(ra_4423, 0x23080894<32>, 0x23084DA8<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_13822, out a0_13823, out a1_13824, out a2_13825, out a3_13826, out a4_13827, out a5_13828, out s2_4435, out s3_4427, out s4_13829, out s5_13830, out s6_4122, out s7_13831, out s8_13832, out s9_13833, out s10_13834, out s11_13835)
l23038914:
	fdt32_to_cpu(Mem4534[s2_4435:int32])
l23038920:
	ra_4115 = bl_wifi_ap_info_set(ra_4423, fp - 160<i32>, s3_4427, fp - 128<i32>, dwArg28, out s1_4117, out s2_4127)
l2303892C:
	word32 a0_4588
	word32 s0_13792
	word32 a5_13793
	word32 s5_13797
	word32 s2_13794
	word32 s4_13796
	word32 s3_13795
	word32 s1_4598
	word32 s6_4603
	word32 ra_4596 = fdt_subnode_offset(ra_4115, s1_4117, s1_4117, 0x230857C4<32>, s2_4127, s6_4122, dwLocF8, dwLocC8, s9, out s0_13792, out s1_4598, out a0_4588, out a5_13793, out s2_13794, out s3_13795, out s4_13796, out s5_13797, out s6_4603)
	word32 s2_4608 = a0_4588
	branch a0_4588 <= 0<32> l230389F6
l23038944:
	word32 a0_4613
	word32 s3_4625
	word32 s6_13920
	word32 s8_13921
	word32 s5_13919
	word32 s0_13917
	word32 s4_13918
	word32 s2_4624
	word32 s1_4623
	word32 ra_4621 = fdt_stringlist_count(ra_4596, s1_4598, 0x23072164<32>, a0_4588, dwLocF8, dwLocDC, dwLoc48, s9, out s0_13917, out s1_4623, out a0_4613, out s2_4624, out s3_4625, out s4_13918, out s5_13919, out s6_13920, out s8_13921)
	branch a0_4613 == 1<32> l23038C72
l23038C72:
	word32 a0_4639
	word32 a5_4644
	word32 s0_4648
	word32 a3_13923
	word32 s3_13925
	word32 s6_13928
	word32 s8_13929
	word32 s4_13926
	word32 s5_13927
	word32 a4_13924
	word32 a1_13922
	word32 a2_4641
	ra_4621 = fdt_stringlist_get(ra_4621, s1_4623, s3_4625 + 356<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4648, out s1_4623, out a0_4639, out a1_13922, out a2_4641, out a3_13923, out a4_13924, out a5_4644, out s2_4624, out s3_13925, out s4_13926, out s5_13927, out s6_13928, out s8_13929)
	word32 s3_4661 = a0_4639
	branch a5_4644 >u 0xFFFFFFE1<32> l2303895A
l23038C8E:
	branch CONVERT(Mem4582[s0_4648 + -932<i32>:byte], byte, word32) >u 2<32> l23038CDA
l23038C98:
	branch CONVERT(Mem4582[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23038CDA
l23038CA4:
	branch Mem4582[0x4200DE84<32>:int32] == 0<32> l23038CF4
l23038CF4:
	word32 a5_13959
	xTaskGetTickCount(out a5_13959)
l23038CAE:
	word32 a5_13960
	xTaskGetTickCountFromISR(out a5_13960)
l23038CB2:
	word32 a5_13978
	word32 s6_13981
	word32 s8_13983
	word32 s10_13985
	word32 s11_13986
	word32 s9_13984
	word32 s7_13982
	word32 s5_13980
	word32 s4_13979
	word32 a4_13977
	word32 a3_13976
	word32 a1_13975
	word32 a0_13974
	ra_4621 = bl_printk(ra_4621, 0x230857C8<32>, 0x23084DA8<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4623, out a0_13974, out a1_13975, out a2_4641, out a3_13976, out a4_13977, out a5_13978, out s2_4624, out s3_4661, out s4_13979, out s5_13980, out s6_13981, out s7_13982, out s8_13983, out s9_13984, out s10_13985, out s11_13986)
l23038CDA:
	word32 a3_13954
	word32 a4_13955
	word32 a7_13958
	word32 a6_13957
	word32 a5_13956
	word32 a1_13952
	word32 a2_13953
	memcpy(fp - 160<i32>, s3_4661, a2_4641, out a1_13952, out a2_13953, out a3_13954, out a4_13955, out a5_13956, out a6_13957, out a7_13958)
	Mem4734[fp - 64<i32> + s3_4661 + 4000<i32>:byte] = 0<8>
l2303895A:
l2303895C:
	word32 a0_4754
	word32 s4_4767
	word32 s2_13988
	word32 s5_13990
	word32 s6_13991
	word32 s8_13992
	word32 s3_13989
	word32 s0_13987
	word32 s1_4764
	word32 ra_4762 = fdt_stringlist_count(ra_4621, s1_4623, 0x2308082C<32>, s2_4624, dwLocF8, dwLocDC, dwLoc48, s9, out s0_13987, out s1_4764, out a0_4754, out s2_13988, out s3_13989, out s4_4767, out s5_13990, out s6_13991, out s8_13992)
	branch a0_4754 == 1<32> l23038CFA
l23038CFA:
	word32 a0_4780
	word32 a5_4785
	word32 s0_4789
	word32 s4_13935
	word32 s5_13936
	word32 s8_13938
	word32 s6_13937
	word32 s2_13933
	word32 s3_13934
	word32 a4_13932
	word32 a1_13930
	word32 a3_13931
	word32 a2_4782
	ra_4762 = fdt_stringlist_get(ra_4762, s1_4764, s4_4767 + -2004<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4789, out s1_4764, out a0_4780, out a1_13930, out a2_4782, out a3_13931, out a4_13932, out a5_4785, out s2_13933, out s3_13934, out s4_13935, out s5_13936, out s6_13937, out s8_13938)
	word32 s4_4802 = a0_4780
	branch a5_4785 >u 0xFFFFFFE1<32> l23038972
l23038D16:
	branch CONVERT(Mem4752[s0_4789 + -932<i32>:byte], byte, word32) >u 2<32> l23038D62
l23038D20:
	branch CONVERT(Mem4752[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23038D62
l23038D2C:
	branch Mem4752[0x4200DE84<32>:int32] == 0<32> l23038D7C
l23038D7C:
	word32 a5_14057
	xTaskGetTickCount(out a5_14057)
l23038D36:
	word32 a5_14058
	xTaskGetTickCountFromISR(out a5_14058)
l23038D3A:
	word32 a0_14068
	word32 a1_14069
	word32 s11_14081
	word32 s9_14079
	word32 s10_14080
	word32 s5_14075
	word32 s8_14078
	word32 s6_14076
	word32 s7_14077
	word32 a3_14070
	word32 a4_14071
	word32 s2_14073
	word32 s3_14074
	word32 a5_14072
	ra_4762 = bl_printk(ra_4762, 0x23085810<32>, 0x23084DA8<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4764, out a0_14068, out a1_14069, out a2_4782, out a3_14070, out a4_14071, out a5_14072, out s2_14073, out s3_14074, out s4_4802, out s5_14075, out s6_14076, out s7_14077, out s8_14078, out s9_14079, out s10_14080, out s11_14081)
l23038D62:
	word32 a4_14053
	word32 a7_14056
	word32 a5_14054
	word32 a6_14055
	word32 a1_14050
	word32 a2_14051
	word32 a3_14052
	memcpy(fp - 128<i32>, s4_4802, a2_4782, out a1_14050, out a2_14051, out a3_14052, out a4_14053, out a5_14054, out a6_14055, out a7_14056)
	Mem4875[fp - 64<i32> + s4_4802 + 4032<i32>:byte] = 0<8>
l23038972:
l23038974:
	word32 a0_4896
	word32 s0_4905
	word32 s8_14067
	word32 s1_14059
	word32 a5_14063
	word32 s2_14064
	word32 s5_14066
	word32 s4_14065
	word32 a3_14061
	word32 a4_14062
	word32 a1_14060
	word32 s3_4908
	word32 ra_4904 = fdt_getprop(ra_4762, s1_4764, 0x23085854<32>, dwLocF8, 0<32>, dwLocBC, dwLoc28, dwArg08, out s0_4905, out s1_14059, out a0_4896, out a1_14060, out a3_14061, out a4_14062, out a5_14063, out s2_14064, out s3_4908, out s4_14065, out s5_14066, out s6_4603, out s8_14067)
	word32 s2_4916 = a0_4896
	branch a0_4896 == 0<32> l230389EA
l2303898C:
	branch CONVERT(Mem4894[s0_4905 + -932<i32>:byte], byte, word32) >u 2<32> l230389E0
l23038996:
	branch CONVERT(Mem4894[0x4201FD49<32>:byte], byte, word32) >u 2<32> l230389E0
l230389A2:
	branch Mem4894[0x4200DE84<32>:int32] == 0<32> l23038D82
l23038D82:
	word32 a5_13939
	xTaskGetTickCount(out a5_13939)
l230389AE:
	word32 a5_13940
	xTaskGetTickCountFromISR(out a5_13940)
l230389B2:
	fdt32_to_cpu(Mem4930[a0_4896:int32])
	word32 a0_14018
	word32 a3_14021
	word32 a5_14023
	word32 s4_14024
	word32 s5_14025
	word32 s8_14027
	word32 s11_14030
	word32 s9_14028
	word32 s10_14029
	word32 s7_14026
	word32 a4_14022
	word32 a2_14020
	word32 a1_14019
	word32 s1_14017
	ra_4904 = bl_printk(ra_4904, 0x23085868<32>, 0x23084DA8<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_14017, out a0_14018, out a1_14019, out a2_14020, out a3_14021, out a4_14022, out a5_14023, out s2_4916, out s3_4908, out s4_14024, out s5_14025, out s6_4603, out s7_14026, out s8_14027, out s9_14028, out s10_14029, out s11_14030)
l230389E0:
	fdt32_to_cpu(Mem4969[s2_4916:int32])
l230389EA:
	ra_4596 = bl_wifi_sta_info_set(ra_4904, fp - 160<i32>, s3_4908, fp - 128<i32>, dwArg28, out s1_4598, out s2_4608)
l230389F6:
	word32 a0_5020
	word32 s0_5029
	word32 s4_13915
	word32 s5_13916
	word32 s2_13913
	word32 s3_13914
	word32 s1_5030
	word32 a5_5025
	word32 s6_5035
	word32 ra_5028 = fdt_subnode_offset(ra_4596, s1_4598, s1_4598, 0x23085898<32>, s2_4608, s6_4603, dwLocF8, dwLocC8, s9, out s0_5029, out s1_5030, out a0_5020, out a5_5025, out s2_13913, out s3_13914, out s4_13915, out s5_13916, out s6_5035)
	word32 s2_5040 = a0_5020
	branch a0_5020 > 0<32> l23038A54
l23038A0C:
	a5_5025 = 4<32>
	branch CONVERT(Mem5019[s0_5029 + -932<i32>:byte], byte, word32) >u 4<32> l23038A54
l23038A16:
	branch CONVERT(Mem5019[0x4201FD49<32>:byte], byte, word32) >u 4<32> l23038A54
l23038A22:
	branch Mem5019[0x4200DE84<32>:int32] == 0<32> l23038D88
l23038D88:
	word32 a5_13950
	xTaskGetTickCount(out a5_13950)
l23038A2E:
	word32 a5_13951
	xTaskGetTickCountFromISR(out a5_13951)
l23038A32:
	word32 s4_13999
	word32 s7_14001
	word32 s8_14002
	word32 s9_14003
	word32 s11_14005
	word32 s10_14004
	word32 s5_14000
	word32 a4_13997
	word32 s3_13998
	word32 a3_13996
	word32 a0_13993
	word32 a2_13995
	word32 a1_13994
	ra_5028 = bl_printk(ra_5028, 0x230858A4<32>, 0x23084DA8<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_5030, out a0_13993, out a1_13994, out a2_13995, out a3_13996, out a4_13997, out a5_5025, out s2_5040, out s3_13998, out s4_13999, out s5_14000, out s6_5035, out s7_14001, out s8_14002, out s9_14003, out s10_14004, out s11_14005)
l23038A54:
	word32 a0_5096
	word32 s1_5106
	word32 a5_13944
	word32 s2_13945
	word32 s4_13947
	word32 s6_13949
	word32 s5_13948
	word32 s3_13946
	word32 s0_13943
	word32 ra_5104 = fdt_subnode_offset(ra_5028, s1_5030, s1_5030, a5_5025 + -1688<i32>, s2_5040, s6_5035, dwLocF8, dwLocC8, s9, out s0_13943, out s1_5106, out a0_5096, out a5_13944, out s2_13945, out s3_13946, out s4_13947, out s5_13948, out s6_13949)
	branch a0_5096 <= 0<32> l23038ACE
l23038A68:
	word32 a0_5121
	word32 s0_5130
	word32 s3_14012
	word32 s5_14014
	word32 s8_14016
	word32 s6_14015
	word32 s4_14013
	word32 a5_14010
	word32 s2_14011
	word32 a3_14008
	word32 a4_14009
	word32 s1_14006
	word32 a1_14007
	ra_5104 = fdt_getprop(ra_5104, s1_5106, 0x230858C4<32>, dwLocF8, 0<32>, dwLocBC, dwLoc28, dwArg08, out s0_5130, out s1_14006, out a0_5121, out a1_14007, out a3_14008, out a4_14009, out a5_14010, out s2_14011, out s3_14012, out s4_14013, out s5_14014, out s6_14015, out s8_14016)
	branch a0_5121 == 0<32> l23038A84
l23038A7C:
	fdt32_to_cpu(Mem5019[a0_5121:word32])
l23038A84:
	branch CONVERT(Mem5019[s0_5130 + -932<i32>:byte], byte, word32) >u 2<32> l23038ACE
l23038A8E:
	branch CONVERT(Mem5019[0x4201FD49<32>:byte], byte, word32) >u 2<32> l23038ACE
l23038A9A:
	branch Mem5019[0x4200DE84<32>:int32] == 0<32> l23038D8E
l23038D8E:
	word32 a5_14031
	xTaskGetTickCount(out a5_14031)
l23038AA6:
	word32 a5_14032
	xTaskGetTickCountFromISR(out a5_14032)
l23038AAA:
	word32 a1_14035
	word32 s10_14048
	word32 s11_14049
	word32 a2_14036
	word32 a4_14038
	word32 s2_14040
	word32 s5_14043
	word32 s6_14044
	word32 s9_14047
	word32 s7_14045
	word32 s8_14046
	word32 s3_14041
	word32 s4_14042
	word32 a5_14039
	word32 a3_14037
	word32 a0_14034
	word32 s1_14033
	ra_5104 = bl_printk(ra_5104, 0x230858D4<32>, 0x23084DA8<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_14033, out a0_14034, out a1_14035, out a2_14036, out a3_14037, out a4_14038, out a5_14039, out s2_14040, out s3_14041, out s4_14042, out s5_14043, out s6_14044, out s7_14045, out s8_14046, out s9_14047, out s10_14048, out s11_14049)
l23038ACE:
	gpOut = dwArgD8
	return ra_5104
hal_board_cfg_exit:
l23037F9E:
	branch Mem3238[0x4200DE84<32>:int32] == 0<32> l23038AFA
l23038AFA:
	word32 a5_13564
	xTaskGetTickCount(out a5_13564)
l23037FAA:
	word32 a5_13565
	xTaskGetTickCountFromISR(out a5_13565)
l23037FAE:
	word32 s11_13603
	word32 a4_13592
	word32 s2_13594
	word32 s9_13601
	word32 s10_13602
	word32 s3_13595
	word32 s7_13599
	word32 s8_13600
	word32 s4_13596
	word32 s6_13598
	word32 s5_13597
	word32 a5_13593
	word32 a2_13590
	word32 a3_13591
	word32 a1_13589
	word32 a0_13588
	word32 s1_13587
	bl_printk(ra_3219, 0x2307C074<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13587, out a0_13588, out a1_13589, out a2_13590, out a3_13591, out a4_13592, out a5_13593, out s2_13594, out s3_13595, out s4_13596, out s5_13597, out s6_13598, out s7_13599, out s8_13600, out s9_13601, out s10_13602, out s11_13603)
l23037FD8:
l23037438:
	branch Mem484[0x4200DE84<32>:int32] == 0<32> l230379D0
l230379D0:
	word32 a5_13090
	xTaskGetTickCount(out a5_13090)
l23037444:
	word32 a5_13091
	xTaskGetTickCountFromISR(out a5_13091)
l23037448:
	word32 s11_13108
	word32 a0_13093
	word32 a2_13095
	word32 a3_13096
	word32 a4_13097
	word32 s10_13107
	word32 s9_13106
	word32 a5_13098
	word32 s8_13105
	word32 s7_13104
	word32 s2_13099
	word32 s3_13100
	word32 s4_13101
	word32 s6_13103
	word32 s5_13102
	word32 a1_13094
	word32 s1_13092
	bl_printk(ra_313, 0x2307C074<32>, 0x23084DA8<32>, Mem484[sp_3 + 8<i32>:word32], Mem484[sp_3 + 40<i32>:word32], Mem484[sp_3 + 112<i32>:word32], Mem484[sp_3 + 116<i32>:word32], Mem484[sp_3 + 152<i32>:word32], Mem484[sp_3 + 188<i32>:word32], out s1_13092, out a0_13093, out a1_13094, out a2_13095, out a3_13096, out a4_13097, out a5_13098, out s2_13099, out s3_13100, out s4_13101, out s5_13102, out s6_13103, out s7_13104, out s8_13105, out s9_13106, out s10_13107, out s11_13108)
l23037472:
l23037264:
	branch CONVERT(Mem34[s0_125 + -932<i32>:byte], byte, word32) >u 4<32> l230372AA
l2303726E:
	branch CONVERT(Mem34[0x4201FD49<32>:byte], byte, word32) >u 4<32> l230372AA
l2303727A:
	branch Mem34[0x4200DE84<32>:int32] == 0<32> l230372B2
l230372B2:
	word32 a5_12823
	xTaskGetTickCount(out a5_12823)
l23037284:
	word32 a5_12824
	xTaskGetTickCountFromISR(out a5_12824)
l23037288:
	word32 s1_12839
	word32 a1_12841
	word32 a3_12843
	word32 a4_12844
	word32 s2_12846
	word32 s4_12848
	word32 s5_12849
	word32 s9_12853
	word32 s10_12854
	word32 s11_12855
	word32 s7_12851
	word32 s8_12852
	word32 s6_12850
	word32 s3_12847
	word32 a5_12845
	word32 a2_12842
	word32 a0_12840
	bl_printk(ra, 0x23084EBC<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_12839, out a0_12840, out a1_12841, out a2_12842, out a3_12843, out a4_12844, out a5_12845, out s2_12846, out s3_12847, out s4_12848, out s5_12849, out s6_12850, out s7_12851, out s8_12852, out s9_12853, out s10_12854, out s11_12855)
l230372AA:
l230371AE:
	branch CONVERT(Mem34[s0_44 + -932<i32>:byte], byte, word32) >u 4<32> l230371F4
l230371B8:
	branch CONVERT(Mem34[0x4201FD49<32>:byte], byte, word32) >u 4<32> l230371F4
l230371C4:
	branch Mem34[0x4200DE84<32>:int32] == 0<32> l230371FC
l230371FC:
	word32 a5_12783
	xTaskGetTickCount(out a5_12783)
l230371CE:
	word32 a5_12784
	xTaskGetTickCountFromISR(out a5_12784)
l230371D2:
	word32 s8_12813
	word32 s9_12814
	word32 s10_12815
	word32 s11_12816
	word32 a0_12801
	word32 a1_12802
	word32 a4_12805
	word32 s5_12810
	word32 s7_12812
	word32 s6_12811
	word32 a5_12806
	word32 s4_12809
	word32 s3_12808
	word32 s2_12807
	word32 a3_12804
	word32 a2_12803
	word32 s1_12800
	bl_printk(ra, 0x23084E08<32>, 0x23084DA8<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_12800, out a0_12801, out a1_12802, out a2_12803, out a3_12804, out a4_12805, out a5_12806, out s2_12807, out s3_12808, out s4_12809, out s5_12810, out s6_12811, out s7_12812, out s8_12813, out s9_12814, out s10_12815, out s11_12816)
l230371F4:


word32 bl_tsen_adc_get(word32 ra, word32 s0, word32 a0, word32 a1, word32 fs1, word32 fflags, word32 frm, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg6C, ptr32 & s0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & fs1Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] fs1:[0..31] ra:[0..31] s0:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +006C:[0..31]
// LiveOut: a1 a3 fflags frm fs1 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa4 fa5 fflags frm fs0 fs1 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bl_tsen_adc_get_entry:
l23038D94:
	word32 a5_130 = 0xFFFFFFF<32>
	word32 s0_190 = 0x4200D948<32>
	branch CONVERT(Mem5[0x4200D948<32>:uint16], uint16, word32) != 0xFFFFFFF<32> l23038E46
l23038DBA:
	Mem28[0x4200D948<32>:word16] = 0<16>
	word32 a5_446
	word32 a6_447
	word32 a7_448
	word32 a1_442
	word32 a2_443
	word32 a4_445
	word32 a3_444
	memcpy(fp + -64<i32>, 0x2308591C<32>, 0xE<32>, out a1_442, out a2_443, out a3_444, out a4_445, out a5_446, out a6_447, out a7_448)
	GLB_Set_ADC_CLK(1<32>, 0<32>, 7<32>)
	ADC_Disable()
	ADC_Enable()
	ADC_Reset()
	ADC_Init(fp + -64<i32>)
	word32 a1_70 = ADC_Channel_Config(0xE<32>, 0x17<32>, 0<32>)
	ADC_FIFO_Cfg(fp + -68<i32>, ADC_Tsen_Init(0<32>))
	word32 sp_86
	word32 ra_93
	word32 a0_94
	call 0x4200C9E8<p32> (retsize: 0;)
		uses: a0:0x4200D948<32>,a1:a1_70,fflags:fflags,frm:frm,fs1:fs1,ra:0x4200CE08<p32>,s0:0x4200D948<32>,s1:0x4200E000<32>,s2:a0,s3:a1
		defs: a0:a0_94,ra:ra_93,s0:s0_90,sp:sp_86
	word32 a5_111 = Mem45[0x4200DE84<32>:int32]
	branch a0_94 != 1<32> l23038E8E
l23038E8E:
	branch a5_111 == 0<32> l23038EB8
l23038EB8:
	word32 a5_484
	xTaskGetTickCount(out a5_484)
l23038E90:
	word32 a5_485
	xTaskGetTickCountFromISR(out a5_485)
l23038E94:
	word32 s1_486
	word32 a2_489
	word32 a1_488
	word32 a0_487
	word32 a3_490
	word32 a4_491
	word32 s2_492
	word32 s3_493
	word32 s4_494
	word32 s5_495
	word32 s6_496
	word32 s7_497
	word32 s8_498
	word32 s9_499
	word32 s10_500
	word32 s11_501
	ra = bl_printk(ra_93, 0x230859CC<32>, 0x23085970<32>, Mem45[sp_86 + 8<i32>:word32], Mem45[sp_86 + 40<i32>:word32], Mem45[sp_86 + 112<i32>:word32], Mem45[sp_86 + 116<i32>:word32], Mem45[sp_86 + 152<i32>:word32], Mem45[sp_86 + 188<i32>:word32], out s1_486, out a0_487, out a1_488, out a2_489, out a3_490, out a4_491, out a5_130, out s2_492, out s3_493, out s4_494, out s5_495, out s6_496, out s7_497, out s8_498, out s9_499, out s10_500, out s11_501)
l23038E22:
	branch a5_111 == 0<32> l23038E88
l23038E88:
	word32 a5_449
	xTaskGetTickCount(out a5_449)
l23038E24:
	word32 a5_450
	xTaskGetTickCountFromISR(out a5_450)
l23038E28:
	word32 s1_468
	word32 a2_471
	word32 a1_470
	word32 a4_473
	word32 a0_469
	word32 s2_474
	word32 a3_472
	word32 s4_476
	word32 s5_477
	word32 s3_475
	word32 s7_479
	word32 s8_480
	word32 s6_478
	word32 s10_482
	word32 s11_483
	word32 s9_481
	ra = bl_printk(ra_93, 0x230859A0<32>, 0x23085970<32>, Mem45[sp_86 + 8<i32>:word32], Mem45[sp_86 + 40<i32>:word32], Mem45[sp_86 + 112<i32>:word32], Mem45[sp_86 + 116<i32>:word32], Mem45[sp_86 + 152<i32>:word32], Mem45[sp_86 + 188<i32>:word32], out s1_468, out a0_469, out a1_470, out a2_471, out a3_472, out a4_473, out a5_130, out s2_474, out s3_475, out s4_476, out s5_477, out s6_478, out s7_479, out s8_480, out s9_481, out s10_482, out s11_483)
l23038E46:
	word32 fa0_217
	word32 fflags_220
	word32 frm_221
	word32 fs1_223
	word32 s0_225
	word32 s3_230
	word32 s2_229
	word32 a1_210
	word32 ra_224 = TSEN_Get_Temp(ra, s0_190, a5_130, fs1, fflags, frm, dwLoc0C, s0, out s0_225, out a1_210, out s2_229, out s3_230, out fs1_223, out fa0_217, out fflags_220, out frm_221)
	branch s3_230 == 0<32> l23038E6A
l23038E56:
	word32 a1_247
	__extendsfdf2(ra_224, fa0_217, fflags_220, frm_221, out a1_247)
	word32 s3_458
	word32 a5_456
	word32 a7_457
	word32 s9_464
	word32 s8_463
	word32 s10_465
	word32 s6_461
	word32 s7_462
	word32 t4_467
	word32 s11_466
	word32 s5_460
	word32 s4_459
	word32 s1_451
	word32 a0_452
	word32 a2_453
	word32 a4_455
	word32 a3_454
	printf(ra_224, 0x230859F0<32>, a1_247, dwLoc48, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C, out s1_451, out a0_452, out a1_210, out a2_453, out a3_454, out a4_455, out a5_456, out a7_457, out s2_229, out s3_458, out s4_459, out s5_460, out s6_461, out s7_462, out s8_463, out s9_464, out s10_465, out s11_466, out t4_467)
l23038E6A:
	branch s2_229 == 0<32> l23038E76
l23038E6E:
	Mem279[s2_229:word16] = SLICE(CONVERT(fa0_217, word32, int32), word16, 0)
l23038E76:
	s0Out = s0_225
	a1Out = a1_210
	a3Out = s2
	fs1Out = fs1_223
	fflagsOut = fflags_220
	frmOut = frm_221
	return dwLoc08
bl_tsen_adc_get_exit:


word32 bl_rtc_get_counter(word32 a4, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rtc_get_timestamp_ms
// MayUse:  a4:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2 a3 a4 a5 s0 t3
// Preserved: sp
bl_rtc_get_counter_entry:
l23038EBE:
	word32 a0_9 = HBN_Get_RTC_Timer_Val(fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a4)
	a1Out = fp + 0xFFFFFFEC<32>
	return a0_9
bl_rtc_get_counter_exit:


word32 bl_rtc_get_timestamp_ms(word32 a4, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sys_time_sync_state
// MayUse:  a4:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 t3
// Preserved: sp
bl_rtc_get_timestamp_ms_entry:
l23038ED4:
	word32 a1_8
	word32 a0_7 = bl_rtc_get_counter(a4, out a1_8)
	a3Out = a1_8 >>u 5<u32>
	return (a0_7 >>u 5<u32> | a1_8 << 0x1B<u32>) - ((a1_8 << 0x14<u32> | a0_7 >>u 12<i32>) + (a0_7 >>u 0xB<u32> | a1_8 << 0x15<u32>))
bl_rtc_get_timestamp_ms_exit:


word32 hal_wifi_start_firmware_task(word32 ra, word32 mstatus, word32 dwArg14, word32 dwArgD8, word32 dwArg01A4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_stack_wifi
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +00D8:[0..31] Stack +01A4:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
hal_wifi_start_firmware_task_entry:
l23038F24:
	word32 tp_49
	word32 t0_50
	word32 s0_51
	word32 a0_52
	word32 a2_53
	word32 a3_54
	word32 a4_55
	word32 a5_56
	word32 s2_57
	return xTaskCreateStatic(ra, 0x2301339E<32>, 0x23085A1C<32>, 1536<i32>, 0<32>, 0x1E<32>, 0x42012BE8<32>, 0x420143E8<32>, mstatus, dwLoc0C, dwArg14, dwArgD8, dwArg01A4, out tp_49, out t0_50, out s0_51, out a0_52, out a2_53, out a3_54, out a4_55, out a5_56, out s2_57)
hal_wifi_start_firmware_task_exit:


void bl_sys_reset_por(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_reboot
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
bl_sys_reset_por_exit:
bl_sys_reset_por_entry:
l23038F5C:
	__csrrc(mstatus, 8<32>)
	call 0x4200C5A6<p32> (retsize: 0;)
		uses: mstatus:mstatus,ra:0x4200BF64<p32>
l23038F6C:


void bl_sys_reset_system(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_sys_reset
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
bl_sys_reset_system_exit:
bl_sys_reset_system_entry:
l23038F6E:
	__csrrc(mstatus, 8<32>)
	call 0x4200C592<p32> (retsize: 0;)
		uses: mstatus:mstatus,ra:0x4200BF76<p32>
l23038F7E:


word32 bl_sys_isxipaddr(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_mtd_write
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
bl_sys_isxipaddr_entry:
l23038F80:
	return CONVERT(((a0 & 0xFF000000<32>) + 0xDD000000<32> & 0xDF000000<32>) <u 1<i32>, bool, word32)
bl_sys_isxipaddr_exit:


void PtTable_Update_Entry(word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_update_ptable
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
PtTable_Update_Entry_entry:
l23038F98:
	branch a3 == 0<32> l2303907E
l23038F9C:
	branch a2 == 0<32> l2303907E
l2303907E:
	return
l23038F9E:
	branch a1 == 2<32> l2303906A
l23038FB8:
	word32 s4_110 = 0xE000000<32>
	branch a1 == 0<32> l23038FBE
l23038FBC:
	s4_110 = 0xF000000<32>
l23038FBE:
	word32 a4_27 = CONVERT(Mem18[a2 + 6<i32>:uint16], uint16, word32)
	word32 a5_32 = a2 + 16<i32>
	word32 s1_33 = 0<32>
	a3_100 = a3
	a2_101 = a2
l23038FCA:
	word32 a2_101
	word32 a3_100
	branch s1_33 >=u a4_27 l23038FEA
l23038FCE:
	a2_101 = CONVERT(Mem18[a5_32:byte], byte, word32)
	a3_100 = CONVERT(Mem18[a3:byte], byte, word32)
	a5_32 = a5_32 + 36<i32>
	branch a2_101 != a3_100 l2303907A
l2303907A:
	s1_33 = s1_33 + 1<32>
l23038FE0:
	word32 a4_356
	word32 a5_357
	word32 a7_359
	word32 a6_358
	word32 a1_355
	memcpy(a5_32, a3, 36<i32>, out a1_355, out a2_101, out a3_100, out a4_356, out a5_357, out a6_358, out a7_359)
l23038FEA:
	word32 a5_62 = CONVERT(Mem18[a2 + 6<i32>:uint16], uint16, word32)
	branch a5_62 != s1_33 l23039018
l23038FF2:
	branch s1_33 >u 0xF<32> l2303906A
l23038FFA:
	word32 a1_360
	word32 a6_363
	word32 a5_362
	word32 a7_364
	word32 a4_361
	memcpy(s1_33 + 36<i32> + (a2 + 16<i32>), a3, 36<i32>, out a1_360, out a2_101, out a3_100, out a4_361, out a5_362, out a6_363, out a7_364)
	word32 a5_87 = CONVERT(Mem18[a2 + 6<i32>:uint16], uint16, word32)
	Mem89[a2 + 6<i32>:word16] = SLICE(a5_87 + 1<32>, word16, 0)
	a5_62 = a5_87 + 1<32>
l23039018:
	word32 s0_92 = Mem91[a5_62 + 8<i32>:word32]
	word32 a5_95 = a5_62 + 1<32>
	Mem96[a5_95 + 8<i32>:word32] = s0_92
	word32 a0_116
	word32 a3_117
	word32 a2_118
	word32 s2_119
	word32 s0_121
	word32 s3_123
	word32 s4_124
	call 0x4200C9DE<p32> (retsize: 0;)
		uses: a0:s0_92,a1:0xC<32>,a2:a2_101,a3:a3_98,a4:a4_171,a5:a5_95,a6:a6_158,a7:a7_160,ra:0x4200D022<p32>,s0:s0_92,s1:s1_34,s2:a2 + 16<i32>,s3:a3,s4:s4_110,s8:s8_157,t0:t0_161,t1:t1_162,t3:t3_156,t4:t4_163,t5:t5_164,t6:t6_165
		defs: a0:a0_116,a2:a2_118,a3:a3_117,s0:s0_121,s2:s2_119,s3:s3_123,s4:s4_124
	word32 s1_137 = CONVERT(Mem96[s0_121 + 6<i32>:uint16], uint16, word32)
	Mem139[a0_116 + 12<i32>:word32] = s0_121
	word32 a0_145
	word32 s2_148
	word32 ra_149
	word32 s0_150
	word32 s1_151
	word32 s4_153
	word32 t3_156
	word32 s8_157
	word32 a6_158
	word32 a7_160
	word32 t0_161
	word32 t1_162
	word32 t4_163
	word32 t5_164
	word32 t6_165
	call 0x4200C9DE<p32> (retsize: 0;)
		uses: a0:s2_119,a1:s1_137 + 36<i32>,a2:a2_118,a3:a3_117,a4:a4_171,a5:36<i32>,a6:a6_158,a7:a7_160,ra:0x4200D03C<p32>,s0:s0_121,s1:s1_137 + 36<i32>,s2:s2_119,s3:s3_123,s4:s4_124,s8:s8_157,t0:t0_161,t1:t1_162,t3:t3_156,t4:t4_163,t5:t5_164,t6:t6_165
		defs: a0:a0_145,a6:a6_158,a7:a7_160,ra:ra_149,s0:s0_150,s1:s1_151,s2:s2_148,s4:s4_153,s8:s8_157,t0:t0_161,t1:t1_162,t3:t3_156,t4:t4_163,t5:t5_164,t6:t6_165
	Mem167[s2_148 + s1_151:word32] = a0_145
	word32 a0_170
	word32 ra_175 = bl_flash_erase(ra_149, s4_153, s1_151 + 20<i32>, out a0_170)
	branch (a0_170 & 255<i32>) != 0<32> l23039068
l23039058:
	word32 a0_180
	word32 a4_366
	word32 a1_365
	word32 a5_367
	bl_flash_write(ra_175, s4_153, s0_150, 596<i32>, out a0_180, out a1_365, out a4_366, out a5_367)
	branch (a0_180 & 255<i32>) == 0<32> l2303906A
l23039068:
l2303906A:
	return
PtTable_Update_Entry_exit:


word32 PtTable_Get_Active_Entries(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_get_active_entries
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
PtTable_Get_Active_Entries_entry:
l23039080:
	branch a0 == 0<32> l230390CE
l230390CE:
	return 5<32>
l23039082:
	branch a2 == 0<32> l230390D2
l230390D2:
	return 5<32>
l23039088:
	word32 a0_9 = CONVERT(Mem0[a0 + 6<i32>:uint16], uint16, word32)
	word32 a3_10 = a0 + 16<i32>
	word32 a5_11 = 0x34<32>
l23039092:
	branch a5_11 <u a0_9 l2303909A
l2303909A:
	a3_10 = a3_10 + 36<i32>
	branch CONVERT(Mem0[a3_10 + -36<i32>:byte], byte, word32) != a1 l230390CA
l230390CA:
	a5_11 = a5_11 + 1<32>
l230390A6:
	word32 a7_94
	word32 a6_93
	word32 a5_92
	word32 a4_91
	word32 a3_90
	word32 a2_89
	word32 a1_88
	memcpy(a2, a0 + (a5_11 + 0<32>), 36<i32>, out a1_88, out a2_89, out a3_90, out a4_91, out a5_92, out a6_93, out a7_94)
	return 0<32>
l23039096:
	return 2<32>
PtTable_Get_Active_Entries_exit:


word32 bl_gpio_enable_output(word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_gpio_func
//      loopset_led_trigger
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a5 ra t3
// Preserved: sp
bl_gpio_enable_output_entry:
l230390D4:
	branch a1 != 0<32> l23039112
l23039112:
l230390F2:
l230390F8:
	branch a2 == 0<32> l23039100
l230390FA:
l23039100:
	word32 ra_31
	call 0x4200C5D8<p32> (retsize: 0;)
		uses: a0:fp + 0xFFFFFFE8<32>,a1:a1,a2:a2,ra:0x4200C102<p32>
		defs: ra:ra_31
	return ra_31
bl_gpio_enable_output_exit:


void bl_gpio_enable_input(word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_gpio_func
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 ra t3
// Preserved: sp
bl_gpio_enable_input_entry:
l23039118:
	branch a1 != 0<32> l23039154
l23039154:
l23039134:
l2303913A:
	branch a2 == 0<32> l23039142
l2303913C:
l23039142:
	call 0x4200C5D8<p32> (retsize: 0;)
		uses: a0:fp + 0xFFFFFFE8<32>,a1:a1,a2:a2,ra:0x4200C144<p32>
	return
bl_gpio_enable_input_exit:


void bl_gpio_output_set(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_gpio_set
//      _cb_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
bl_gpio_output_set_entry:
l2303915A:
	GLB_GPIO_Write(a0, CONVERT(a1 != 0<32>, bool, word32), a3)
	return
bl_gpio_output_set_exit:


word32 bl_gpio_input_get(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_gpio_get
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a3 a4 a5 t3
// Preserved: sp
bl_gpio_input_get_entry:
l2303916E:
	Mem14[a1:byte] = SLICE(GLB_GPIO_Read(a0), byte, 0)
	return 0<32>
bl_gpio_input_get_exit:


word32 bl_flash_erase(word32 ra, word32 a0, word32 a1, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      PtTable_Update_Entry
//      bl_mtd_erase
//      bl_mtd_erase_all
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a0 ra
// Trashed: a0 a1 a2 a4 a5 ra
// Preserved: sp
bl_flash_erase_entry:
l23039186:
	branch CONVERT(Mem0[0x4200DC31<32>:byte], byte, word32) == 0<32> l230391B2
l230391B2:
	a0Out = 0xFFFFFFFF<32>
	return ra
l23039194:
	word32 a4_12 = Mem10[0x21010AB0<32>:int32]
	word32 ra_21
	call a4_12 (retsize: 0;)
		uses: a0:0x4200DC24<32>,a1:a0,a2:a1,a4:a4_12,ra:ra,Stack +0084:ra
		defs: ra:ra_21
	a0Out = 0<32>
	return ra_21
bl_flash_erase_exit:


word32 bl_flash_write(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      PtTable_Update_Entry
//      bl_mtd_write
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 a1 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra
// Preserved: sp
bl_flash_write_entry:
l230391B6:
	word32 a4_6 = CONVERT(Mem0[0x4200DC31<32>:byte], byte, word32)
	branch a4_6 == 0<32> l230391E4
l230391E4:
	a0Out = 0xFFFFFFFF<32>
	a1Out = a1
	a4Out = a4_6
	a5Out = 0x4200DC20<32>
	return ra
l230391C4:
	word32 a4_12 = Mem10[0x21010AAC<32>:int32]
	word32 a5_21
	word32 a4_22
	word32 ra_23
	word32 a1_26
	call a4_12 (retsize: 0;)
		uses: a0:0x4200DC24<32>,a1:a0,a2:a1,a3:a2,a4:a4_12,ra:ra,Stack +0084:ra
		defs: a1:a1_26,a4:a4_22,a5:a5_21,ra:ra_23
	a0Out = 0<32>
	a1Out = a1_26
	a4Out = a4_22
	a5Out = a5_21
	return ra_23
bl_flash_write_exit:


word32 bl_flash_read(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_mtd_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra
// Preserved: sp
bl_flash_read_entry:
l230391E8:
	word32 a4_6 = CONVERT(Mem0[0x4200DC31<32>:byte], byte, word32)
	branch a4_6 == 0<32> l23039216
l23039216:
	a1Out = a1
	a3Out = a3
	a4Out = a4_6
	return ra
l230391F6:
	word32 a4_12 = Mem10[0x21010AA8<32>:int32]
	word32 a4_22
	word32 ra_23
	word32 a3_25
	word32 a1_26
	call a4_12 (retsize: 0;)
		uses: a0:0x4200DC24<32>,a1:a0,a2:a1,a3:a2,a4:a4_12,ra:ra,Stack +0084:ra
		defs: a1:a1_26,a3:a3_25,a4:a4_22,ra:ra_23
	a1Out = a1_26
	a3Out = a3_25
	a4Out = a4_22
	return ra_23
bl_flash_read_exit:


word32 bl_flash_config_update(word32 ra, word32 s2, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_init
// MayUse:  ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: ra s1 s10 s2 s4 s6 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_flash_config_update_entry:
l2303921A:
	branch CONVERT(Mem5[0x4201FC5C<32>:byte], byte, word32) >u 2<32> l23039244
l23039238:
	branch CONVERT(Mem19[0x4201FD4B<32>:byte], byte, word32) <=u 2<32> l23039258
l23039258:
	branch Mem19[0x4200DE84<32>:int32] == 0<32> l230393FE
l230393FE:
	word32 a5_490
	xTaskGetTickCount(out a5_490)
l23039264:
	word32 a5_491
	xTaskGetTickCountFromISR(out a5_491)
l23039268:
	word32 s3_58
	word32 s4_59
	word32 s11_513
	word32 s8_512
	word32 a0_504
	word32 s7_511
	word32 s5_510
	word32 a5_509
	word32 a4_508
	word32 a3_507
	word32 a2_506
	word32 a1_505
	ra = bl_printk(ra, 0x23085A2C<32>, 0x23085A20<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_504, out a1_505, out a2_506, out a3_507, out a4_508, out a5_509, out s2, out s3_58, out s4_59, out s5_510, out s6, out s7_511, out s8_512, out s9, out s10, out s11_513)
	branch CONVERT(Mem19[s3_58 + -932<i32>:byte], byte, word32) >u 2<32> l23039244
l230392A8:
	branch CONVERT(Mem19[s4_59 + -693<i32>:byte], byte, word32) >u 2<32> l23039244
l230392B0:
	branch Mem19[s2 + -380<i32>:int32] == 0<32> l23039404
l23039404:
	word32 a5_492
	xTaskGetTickCount(out a5_492)
l230392B8:
	word32 a5_493
	xTaskGetTickCountFromISR(out a5_493)
l230392BC:
	word32 s3_103
	word32 s4_104
	word32 a0_566
	word32 a1_567
	word32 a2_568
	word32 a3_569
	word32 a4_570
	word32 a5_571
	word32 s5_572
	word32 s7_573
	word32 s8_574
	word32 s11_575
	ra = bl_printk(ra, 0x23085A78<32>, s1 + -1504<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_566, out a1_567, out a2_568, out a3_569, out a4_570, out a5_571, out s2, out s3_103, out s4_104, out s5_572, out s6, out s7_573, out s8_574, out s9, out s10, out s11_575)
	branch CONVERT(Mem19[s3_103 + -932<i32>:byte], byte, word32) >u 2<32> l23039244
l230392E4:
	branch CONVERT(Mem19[s4_104 + -693<i32>:byte], byte, word32) >u 2<32> l23039244
l230392EC:
	branch Mem19[s2 + -380<i32>:int32] == 0<32> l2303940A
l2303940A:
	word32 a5_494
	xTaskGetTickCount(out a5_494)
l230392F4:
	word32 a5_495
	xTaskGetTickCountFromISR(out a5_495)
l230392F8:
	word32 s3_147
	word32 s4_148
	word32 a0_556
	word32 a1_557
	word32 a2_558
	word32 a3_559
	word32 a4_560
	word32 a5_561
	word32 s5_562
	word32 s7_563
	word32 s8_564
	word32 s11_565
	ra = bl_printk(ra, 0x23085A98<32>, s1 + -1504<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_556, out a1_557, out a2_558, out a3_559, out a4_560, out a5_561, out s2, out s3_147, out s4_148, out s5_562, out s6, out s7_563, out s8_564, out s9, out s10, out s11_565)
	branch CONVERT(Mem19[s3_147 + -932<i32>:byte], byte, word32) >u 2<32> l23039244
l23039320:
	branch CONVERT(Mem19[s4_148 + -693<i32>:byte], byte, word32) >u 2<32> l23039244
l23039328:
	branch Mem19[s2 + -380<i32>:int32] == 0<32> l23039410
l23039410:
	word32 a5_496
	xTaskGetTickCount(out a5_496)
l23039330:
	word32 a5_497
	xTaskGetTickCountFromISR(out a5_497)
l23039334:
	word32 a0_546
	word32 s3_191
	word32 s4_192
	word32 a1_547
	word32 a2_548
	word32 a3_549
	word32 a4_550
	word32 a5_551
	word32 s5_552
	word32 s7_553
	word32 s8_554
	word32 s11_555
	ra = bl_printk(ra, 0x23085ABC<32>, s1 + -1504<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_546, out a1_547, out a2_548, out a3_549, out a4_550, out a5_551, out s2, out s3_191, out s4_192, out s5_552, out s6, out s7_553, out s8_554, out s9, out s10, out s11_555)
	branch CONVERT(Mem19[s3_191 + -932<i32>:byte], byte, word32) >u 2<32> l23039244
l2303935C:
	branch CONVERT(Mem19[s4_192 + -693<i32>:byte], byte, word32) >u 2<32> l23039244
l23039364:
	branch Mem19[s2 + -380<i32>:int32] == 0<32> l23039416
l23039416:
	word32 a5_498
	xTaskGetTickCount(out a5_498)
l2303936A:
	word32 a5_499
	xTaskGetTickCountFromISR(out a5_499)
l2303936E:
	word32 a0_536
	word32 a1_537
	word32 a2_538
	word32 a3_539
	word32 a4_540
	word32 a5_541
	word32 s5_542
	word32 s7_543
	word32 s8_544
	word32 s11_545
	word32 s3_235
	word32 s4_236
	ra = bl_printk(ra, 0x23085AE4<32>, s1 + -1504<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_536, out a1_537, out a2_538, out a3_539, out a4_540, out a5_541, out s2, out s3_235, out s4_236, out s5_542, out s6, out s7_543, out s8_544, out s9, out s10, out s11_545)
	branch CONVERT(Mem19[s3_235 + -932<i32>:byte], byte, word32) >u 2<32> l23039244
l23039396:
	branch CONVERT(Mem19[s4_236 + -693<i32>:byte], byte, word32) >u 2<32> l23039244
l2303939E:
	branch Mem19[s2 + -380<i32>:int32] == 0<32> l2303941C
l2303941C:
	word32 a5_500
	xTaskGetTickCount(out a5_500)
l230393A4:
	word32 a5_501
	xTaskGetTickCountFromISR(out a5_501)
l230393A8:
	word32 a0_526
	word32 a1_527
	word32 a2_528
	word32 a3_529
	word32 a4_530
	word32 a5_531
	word32 s5_532
	word32 s7_533
	word32 s8_534
	word32 s11_535
	word32 s3_279
	word32 s4_280
	ra = bl_printk(ra, 0x23085B10<32>, s1 + -1504<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_526, out a1_527, out a2_528, out a3_529, out a4_530, out a5_531, out s2, out s3_279, out s4_280, out s5_532, out s6, out s7_533, out s8_534, out s9, out s10, out s11_535)
	branch CONVERT(Mem19[s3_279 + -932<i32>:byte], byte, word32) >u 2<32> l23039244
l230393D0:
	branch CONVERT(Mem19[s4_280 + -693<i32>:byte], byte, word32) >u 2<32> l23039244
l230393D8:
	branch Mem19[s2 + -380<i32>:int32] == 0<32> l23039422
l23039422:
	word32 a5_502
	xTaskGetTickCount(out a5_502)
l230393DE:
	word32 a5_503
	xTaskGetTickCountFromISR(out a5_503)
l230393E2:
	word32 s11_525
	word32 s8_524
	word32 s7_523
	word32 s5_522
	word32 s4_521
	word32 s3_520
	word32 a5_519
	word32 a4_518
	word32 a3_517
	word32 a2_516
	word32 a1_515
	word32 a0_514
	ra = bl_printk(ra, 0x23085B38<32>, s1 + -1504<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_514, out a1_515, out a2_516, out a3_517, out a4_518, out a5_519, out s2, out s3_520, out s4_521, out s5_522, out s6, out s7_523, out s8_524, out s9, out s10, out s11_525)
l23039244:
	s1Out = s1
	s2Out = s2
	s4Out = dwArg04
	s6Out = s6
	s8Out = s4
	s9Out = s9
	s10Out = s10
	return ra
bl_flash_config_update_exit:


void bl_wdt_feed()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wdt_feed
// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
bl_wdt_feed_entry:
l23039428:
l23039428_thunk_WDT_ResetCounterValue:
	WDT_ResetCounterValue()
	return
bl_wdt_feed_exit:


void bl_wdt_disable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wdt_disable
// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
bl_wdt_disable_entry:
l2303942C:
l2303942C_thunk_WDT_Disable:
	WDT_Disable()
	return
bl_wdt_disable_exit:


void bl_wdt_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wdt_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: s0 sp
bl_wdt_init_entry:
l23039430:
	branch a0 > 0xFFFFFE<32> l23039472
l23039472:
	return
l23039438:
	WDT_Disable()
	WDT_Set_Clock(1<32>, 1<32>)
	WDT_SetCompValue(a0 << 0x14<32> >>u 16<i32>)
	WDT_ResetCounterValue()
	WDT_IntMask(0<32>, 1<32>)
	WDT_Enable()
	return
bl_wdt_init_exit:


void httpc_tcp_sent()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
httpc_tcp_sent_entry:
l23039476:
	return
httpc_tcp_sent_exit:


word32 httpc_get_internal_addr(word32 a0, word32 a1, word32 a4, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_dns_found
//      httpc_get_file_dns
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a5 t1
// Preserved: sp
httpc_get_internal_addr_entry:
l2303947A:
	branch a0 + 4<i32> == a1 l23039486
l23039482:
	Mem9[a4 + 4<i32>:word32] = a0
l23039486:
	word32 a0_13 = Mem11[a0:word32]
l23039496_thunk_altcp_connect:
	word32 a5_20
	word32 a0_18 = altcp_connect(a0_13, a0 + 4<i32>, out a5_20)
	a3Out = 0x23039820<32>
	a5Out = a5_20
	return a0_18
httpc_get_internal_addr_exit:


word32 httpc_free_state(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_connected
//      httpc_init_connection_common.constprop.5
//      httpc_get_file_dns
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut: a4 s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra s0 sp
httpc_free_state_entry:
l2303949A:
	word32 s0_19
	word32 ra_41
	word32 a0_12 = Mem9[a0 + 16<i32>:word32]
	ra_41 = ra
	s0_19 = s0
	branch a0_12 == 0<32> l230394B0
l230394A8:
	word32 s1_26
	word32 s6_253
	word32 a7_251
	word32 s8_254
	word32 s5_252
	word32 a2_249
	word32 a5_250
	word32 a1_248
	ra_41 = pbuf_free(ra, a0_12, a3, a4, s4, mstatus, dwArg0118, out s0_19, out s1_26, out a0_12, out a1_248, out a2_249, out a3, out a4, out a5_250, out a7_251, out s2, out s3, out s4, out s5_252, out s6_253, out s8_254, out mstatus)
	Mem42[s1_26 + 16<i32>:word32] = 0<32>
l230394B0:
	branch a0_12 == 0<32> l230394BC
l230394B4:
	word32 s1_61
	word32 a0_259
	word32 a1_260
	word32 a2_261
	word32 a5_262
	word32 a7_263
	word32 s5_264
	word32 s6_265
	word32 s8_266
	pbuf_free(ra_41, a0_12, a3, a4, s4, mstatus, dwArg0118, out s0_19, out s1_61, out a0_259, out a1_260, out a2_261, out a3, out a4, out a5_262, out a7_263, out s2, out s3, out s4, out s5_264, out s6_265, out s8_266, out mstatus)
	Mem77[s1_61 + 20<i32>:word32] = 0<32>
l230394BC:
	word32 a4_98
	word32 a5_99
	word32 s1_103
	word32 s2_104
	word32 s3_105
	word32 s5_107
	word32 s6_108
	word32 a3_255
	word32 a7_256
	word32 s4_257
	word32 s8_258
	word32 s0_102 = mem_free(Mem80[s0_19:word32], a3, a4, s2, s3, s4, mstatus, s0, dwLoc08, dwArg14, ra, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s1_103, out a3_255, out a4_98, out a5_99, out a7_256, out s2_104, out s3_105, out s4_257, out s5_107, out s6_108, out s8_258)
	branch s0_102 != 0<32> l230394D2
l230394D2:
	altcp_arg(s0_102, 0<32>)
	altcp_recv(s0_102, 0<32>)
	altcp_err(s0_102, 0<32>)
	word32 a5_130
	altcp_poll(s0_102, 0<32>, 0<32>, a5_99, out a5_130)
	altcp_sent(s0_102, 0<32>)
	word32 a5_136
	branch altcp_close(s0_102, a5_130, out a5_136) == 0<32> l230394C6
l23039504:
	altcp_abort(s0_102, a5_136)
l230394C6:
l230394C8:
	a4Out = a4_98
	s2Out = s2_104
	s3Out = s3_105
	s5Out = s5_107
	s6Out = s6_108
	return s1_103
httpc_free_state_exit:


void httpc_close(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a5, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_recv
//      httpc_dns_found
//      httpc_tcp_poll
//      httpc_tcp_err
//      httpc_tcp_connected
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 sp
httpc_close_entry:
l2303950E:
	branch a0 == 0<32> l23039536
l23039536:
	return
l23039510:
	word32 a0_10 = Mem8[a5 + 32<i32>:word32]
	word32 a4_12 = a3
	word32 s0_13 = a0_10
	word32 a3_15 = a2
	branch a5 == 0<32> l2303952A
l23039520:
	word32 a5_16 = Mem8[a5 + 20<i32>:word32]
	branch a5_16 == 0<32> l2303952A
l23039524:
	word32 a1_73
	word32 a6_74
	word32 a7_75
	word32 s1_76
	word32 s5_77
	word32 s6_78
	word32 s8_79
	word32 t0_80
	word32 t1_81
	word32 t3_82
	word32 t4_83
	word32 t5_84
	word32 t6_85
	word32 tp_86
	call a5_16 (retsize: 0;)
		uses: a0:Mem8[Mem8[a2 + 40<i32>:word32] + 36<i32>:word32],a1:a1_73,a2:a2,a3:a2,a4:a4_25,a5:a5_16,a6:a6_74,a7:a7_75,mstatus:mstatus,ra:ra,s0:a0_10,s1:s1_76,s2:s2,s3:s3,s4:s4,s5:s5_77,s6:s6_78,s8:s8_79,t0:t0_80,t1:t1_81,t3:t3_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
		defs: a1:a1_73,a3:a3_24,a4:a4_25,a6:a6_74,a7:a7_75,ra:ra_22,s0:s0_21,s1:s1_76,s5:s5_77,s6:s6_78,s8:s8_79,t0:t0_80,t1:t1_81,t3:t3_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
l2303952A:
l23039532_thunk_httpc_free_state:
	word32 s6_155
	word32 s5_154
	word32 s3_153
	word32 s2_152
	word32 a4_151
	httpc_free_state(ra, s0, s0_13, a3_15, a4_12, s2, s3, s4, mstatus, dwArg14, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out a4_151, out s2_152, out s3_153, out s5_154, out s6_155)
	return
httpc_close_exit:


void httpc_tcp_recv(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 mstatus, word32 dwArg14, word32 dwArg34, word32 dwArgC8, word32 dwArgE8, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s8 sp
httpc_tcp_recv_entry:
l23039538:
	word32 a2_481
	word32 a3_283
	Mem28[0x2A<32>:word32] = a0
	word32 sp_3 = fp + -64<i32>
	word32 s0_101 = a0
	word32 a5_265 = CONVERT(Mem28[a0 + 48<i32>:byte], byte, word32)
	branch a2 != 0<32> l2303959C
l2303959C:
	word32 s3_104 = a1
	word32 s1_102 = a2
	word32 s4_191 = a3
	branch a5_265 != 2<32> l230395C4
l230395C4:
	a0 = Mem28[a0 + 20<i32>:word32]
	branch a0 != 0<32> l23039774
l23039774:
	pbuf_cat(a0, a2, 2<32>)
l230395CA:
	Mem40[a2 + 20<i32>:word32] = a0
l230395CC:
	branch CONVERT(Mem42[a0 + 48<i32>:byte], byte, word32) != 0<32> l23039782
l230395D4:
	s6 = Mem42[a0 + 20<i32>:int32]
	word32 a5_973
	word32 a2_971
	word32 a4_972
	s0_101 = pbuf_memfind(s6, 2<32>, 0<32>, dwArg14, dwArgC8, out s1_102, out a0, out a2_971, out a3, out a4_972, out a5_973, out s2, out s3_104, out s4_191, out s8)
	s7 = 0xFFFFFFF<32>
	s5 = a0
	branch a0 == 0xFFFFFFF<32> l23039782
l230395F4:
	s9 = 0x23081000<32>
	word32 a2_974
	word32 a5_976
	word32 s2_977
	word32 a4_975
	s0_101 = pbuf_memfind(s6, 1<32>, 0<32>, dwArg14, dwArgC8, out s1_102, out a0, out a2_974, out a3, out a4_975, out a5_976, out s2_977, out s3_104, out s4_191, out s8)
	s2 = a0
	branch a0 == 0xFFFFFFF<32> l23039782
l2303960C:
	word32 a4_978
	word32 a5_979
	s0_101 = pbuf_memcmp(s6, 0<32>, 5<32>, dwArg34, dwArgE8, out s1_102, out a0, out a3, out a4_978, out a5_979, out s2, out s3_104)
	branch a0 != 0<32> l23039782
l23039622:
	word32 a4_980
	a0 = pbuf_get_at(s6, 6<32>, out a3, out a4_980)
	branch a0 != 46<i32> l23039782
l23039632:
	word32 s2_161
	word32 a4_982
	word32 a3_983
	word32 a4_984
	word32 a3_981
	Mem138[s0_101 + 24<i32>:word16] = SLICE(pbuf_get_at(s6, 7<32>, out a3_983, out a4_984) + -48<i32> | CONVERT(SLICE(pbuf_get_at(s6, 5<32>, out a3_981, out a4_982) + -48<i32>, word16, 0), word16, word32) << 8<i32>, word16, 0)
	word32 a0_146
	word32 s8_153
	word32 s2_158
	word32 s3_990
	word32 s4_991
	word32 s1_985
	word32 a2_986
	word32 a4_988
	word32 a5_989
	word32 a3_987
	pbuf_memfind(s6, 1<32>, CONVERT(SLICE(s2 + 1<i32>, word16, 0), word16, word32), dwArg14, dwArgC8, out s1_985, out a0_146, out a2_986, out a3_987, out a4_988, out a5_989, out s2_158, out s3_990, out s4_991, out s8_153)
	branch a0_146 == 0xFFFFFFF<32> l2303977C
l2303977C:
	s2_161 = a0 - s2_158
l23039678:
	s2_161 = a0_146 - s2_158
l2303967C:
	word32 a4_1014
	word32 a5_1015
	word32 t1_1009
	word32 a0_1010
	word32 a2_1012
	word32 a3_1013
	word32 a1_1011
	ra = memset(ra, fp + -64<i32>, 0<32>, 0xA<32>, out t1_1009, out a0_1010, out a1_1011, out a2_1012, out a3_1013, out a4_1014, out a5_1015)
	word32 a4_1018
	word32 a5_1019
	word32 a2_1017
	word32 a1_1016
	s0_101 = pbuf_copy_partial(s6, fp + -64<i32>, CONVERT(SLICE(s2_161 + 0xFFFFFFFF<32>, word16, 0), word16, word32), s8_153, out s1_102, out a0, out a1_1016, out a2_1017, out a3, out a4_1018, out a5_1019, out s2, out s3_104, out s4_191, out s8)
	branch s2 != a0 l23039782
l2303969C:
	word32 a4_994
	word32 a5_995
	word32 a2_993
	word32 a1_992
	a0 = atoi(fp + -64<i32>, out a1_992, out a2_993, out a3, out a4_994, out a5_995)
	branch a0 >u 0xF0000001<32> l23039782
l23039782:
	branch CONVERT(Mem227[s0_101 + 48<i32>:byte], byte, word32) == 1<32> l230396B8
l230396AE:
	Mem232[s0_101 + 26<i32>:word16] = SLICE(a0, word16, 0)
	Mem233[s0_101 + 48<i32>:byte] = 1<8>
l230396B8:
	s6 = Mem235[s0_101 + 20<i32>:int32]
	word32 a4_1021
	word32 a5_1022
	word32 s2_1023
	word32 a2_1020
	s0_101 = pbuf_memfind(s6, 4<32>, 0<32>, dwArg14, dwArgC8, out s1_102, out a0, out a2_1020, out a3, out a4_1021, out a5_1022, out s2_1023, out s3_104, out s4_191, out s8)
	s7 = 0x10000000<32>
	s2 = a0
	branch a0 >u 0xFFFFFFC<32> l2303978C
l2303978C:
	a5_265 = 2<32>
	branch CONVERT(Mem263[s0_101 + 48<i32>:byte], byte, word32) == 2<32> l230395A8
l230396DA:
	Mem268[0x2B<32>:word32] = s0_101
	word32 a0_273
	word32 s1_996
	word32 s2_285
	word32 s3_286
	word32 a5_276
	word32 s8_280
	word32 a2_274
	word32 a4_275
	pbuf_memfind(s6, 0x10<32>, 0<32>, dwArg14, dwArgC8, out s1_996, out a0_273, out a2_274, out a3_283, out a4_275, out a5_276, out s2_285, out s3_286, out s4, out s8_280)
	s7 = 0xFFFFFFF<32>
	branch a0_273 == 0xFFFFFFF<32> l23039744
l230396F8:
	word32 a0_295
	word32 s1_997
	pbuf_memfind(s6, 2<32>, a0_273, dwArg14, dwArgC8, out s1_997, out a0_295, out a2_274, out a3_283, out a4_275, out a5_276, out s2_285, out s3_286, out s4, out s8_280)
	branch a0_295 == 0xFFFFFFF<32> l23039744
l2303970E:
	word32 a3_1002
	word32 a4_1003
	word32 a5_1004
	word32 t1_998
	word32 a1_1000
	word32 a2_1001
	word32 a0_999
	ra = memset(ra, fp + -64<i32>, 0<32>, 0x10<32>, out t1_998, out a0_999, out a1_1000, out a2_1001, out a3_1002, out a4_1003, out a5_1004)
	word32 a0_334
	word32 s1_341
	word32 a1_1005
	word32 s0_337 = pbuf_copy_partial(s6, fp + -64<i32>, CONVERT(SLICE(a0_295 - a0_273 + 0xFFFFFFF0<32>, word16, 0), word16, word32), CONVERT(SLICE(a0_273 + 16<i32>, word16, 0), word16, word32), out s1_341, out a0_334, out a1_1005, out a2_274, out a3_283, out a4_275, out a5_276, out s2_285, out s3_286, out s4, out s8_280)
	branch s1_341 != a0_334 l23039744
l23039738:
	word32 a1_1006
	word32 a0_355 = atoi(fp + -64<i32>, out a1_1006, out a2_274, out a3_283, out a4_275, out a5_276)
	branch a0_355 < 0<32> l23039744
l23039742:
	Mem370[a0_355 + 44<i32>:word32] = s0_337
l23039744:
	word32 s1_374 = CONVERT(SLICE(s2_285 + 4<i32>, word16, 0), word16, word32)
	word32 a5_381
	word32 a0_379 = altcp_recved(s3_286, a5_276, out a5_381)
	branch a5_381 == 0<32> l2303979A
l23039758:
	word32 a5_384 = Mem382[a5_381 + 24<i32>:word32]
	branch a5_384 == 0<32> l2303979A
l2303975C:
	word32 s0_389 = Mem382[s1_374 + 36<i32>:word32]
	word32 t0_425
	word32 t1_426
	word32 a7_427
	word32 t4_428
	word32 t5_429
	word32 t6_430
	word32 t2_431
	call a5_384 (retsize: 0;)
		uses: a0:s0_389,a1:s1_374,a2:a2_387,a3:s1_374,a7:a7_427,mstatus:mstatus,ra:ra_392,s0:s0_389,s1:s1_374,s2:s2_371,s3:s3_376,s4:s4_393,s5:a0_273,s6:s6_236,s7:0xFFFFFFF<32>,s8:s8_397,s9:s9_399,Stack +0054:dwArg14,Stack +0074:dwArg34,Stack +0108:dwArgC8,Stack +0128:dwArgE8,t0:t0_425,t1:t1_426,t2:t2_431,t4:t4_428,t5:t5_429,t6:t6_430
		defs: a0:a0_417,a2:a2_418,a4:a4_419,a5:a5_416,a7:a7_427,ra:ra_406,s0:s0_405,s1:s1_407,s2:s2_408,s3:s3_409,s4:s4_410,s7:s7_413,s9:s9_415,sp:sp_404,t0:t0_425,t1:t1_426,t2:t2_431,t4:t4_428,t5:t5_429,t6:t6_430
	a3_283 = a0_379
	branch a0_379 == 0<32> l2303979A
l2303979A:
	word32 s0_452
	word32 s1_1007
	word32 a4_1008
	ra = pbuf_free_header(ra, s1_374, a0_379, s1_374, a2_274, a3_283, a4_275, s4, mstatus, Mem382[sp_3 + 68<i32>:word32], Mem382[sp_3 + 264<i32>:word32], out s0_452, out s1_1007, out a0, out a3, out a4_1008, out s2, out s3_104, out s4_191, out s5, out s6, out s8, out mstatus)
	Mem478[s0_452 + 20<i32>:word32] = 0<32>
	Mem479[s0_452 + 48<i32>:byte] = 2<8>
	a5_265 = 2<32>
	s1_102 = a0
	branch a0 == 0<32> l23039796
l230397B0:
l2303976C:
	a2_481 = CONVERT(Mem382[s0_101 + 26<i32>:uint16], uint16, word32)
l230395A8:
	word32 a4_488 = CONVERT(Mem487[s1_102 + 8<i32>:uint16], uint16, word32)
	word32 a5_491 = a5_265 + a4_488
	Mem492[a5_491 + 40<i32>:word32] = Mem487[a5_265 + 40<i32>:word32]
	branch a5_491 == 0<32> l230397B2
l230397B2:
	word32 a5_954
	altcp_recved(s3_104, a5_491, out a5_954)
	word32 s4_966
	word32 mstatus_970
	word32 s8_969
	word32 s5_967
	word32 s6_968
	word32 a1_958
	word32 a4_961
	word32 a5_962
	word32 s2_964
	word32 s3_965
	word32 a7_963
	word32 a2_959
	word32 a3_960
	word32 a0_957
	word32 s0_955
	word32 s1_956
	pbuf_free(ra, s1_102, a3, a4_488, s4_191, mstatus, Mem492[sp_3 + 296<i32>:word32], out s0_955, out s1_956, out a0_957, out a1_958, out a2_959, out a3_960, out a4_961, out a5_962, out a7_963, out s2_964, out s3_965, out s4_966, out s5_967, out s6_968, out s8_969, out mstatus_970)
l23039796:
l230395B8:
	word32 t0_600
	word32 t1_601
	word32 a7_602
	word32 t4_603
	word32 t5_604
	word32 t6_605
	word32 t2_606
	call a5_491 (retsize: 0;)
		uses: a0:a0_544,a1:s3_495,a2:s1_483,a3:s4_512,a7:a7_602,mstatus:mstatus_506,ra:ra_504,s0:Mem492[a0_544 + 36<i32>:word32],s1:s1_483,s2:s2_552,s3:s3_495,s4:s4_512,s5:s5_556,s6:s6_562,s7:s7_566,s8:s8_572,s9:s9_576,Stack +0014:dwArg14,Stack +0034:dwArg34,Stack +00C8:dwArgC8,Stack +00E8:dwArgE8,t0:t0_600,t1:t1_601,t2:t2_606,t4:t4_603,t5:t5_604,t6:t6_605
		defs: a7:a7_602,t0:t0_600,t1:t1_601,t2:t2_606,t4:t4_603,t5:t5_604,t6:t6_605
l2303955C:
	branch a5_265 != 2<32> l23039576
l23039564:
	branch a5_265 == 0xFFFFFFFF<32> l23039576
l2303956E:
	branch a5_265 == 0xFFFFFFFF<32> l23039576
l23039574:
l23039576:
	a2_481 = CONVERT(Mem28[a0 + 26<i32>:uint16], uint16, word32)
	a3_283 = 0<32>
l2303957C:
	httpc_close(ra, s0_101, s0_101, a2_481, a3_283, a5_265, s2, s3, s4, mstatus, Mem637[sp_3 + 20<i32>:word32], Mem637[sp_3 + 148<i32>:word32], Mem637[sp_3 + 200<i32>:word32], Mem637[sp_3 + 232<i32>:word32], Mem637[sp_3 + 264<i32>:word32], Mem637[sp_3 + 280<i32>:word32], Mem637[sp_3 + 296<i32>:word32], Mem637[sp_3 + 328<i32>:word32], Mem637[sp_3 + 360<i32>:word32], Mem637[sp_3 + 392<i32>:word32])
l23039582:
	0<32> = dwArg0198
	return
httpc_tcp_recv_exit:


void httpc_dns_found(word32 ra, word32 s0, word32 a1, word32 a2, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
httpc_dns_found_entry:
l230397C4:
	word32 a3_12
	branch a1 == 0<32> l230397E2
l230397E2:
	a3_12 = 0xFFFFFFF0<32>
l230397CE:
	word32 a3_129
	word32 a0_15 = httpc_get_internal_addr(a2, a1, a4, out a3_129, out a5)
	a3_12 = a0_15
	branch a0_15 != 0<32> l230397E6
l230397E6:
l230397F0_thunk_httpc_close:
	httpc_close(ra, s0, a2, 0<32>, a3_12, a5, s2, s3, s4, mstatus, dwArg14, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188)
	return
l230397DA:
	return
httpc_dns_found_exit:


void httpc_tcp_poll(word32 ra, word32 s0, word32 a0, word32 a5, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
httpc_tcp_poll_entry:
l230397F4:
	branch a0 == 0<32> l2303980A
l230397F6:
	word32 a0_6 = Mem0[a5 + 12<i32>:word32]
	branch a5 != 0<32> l23039804
l23039804:
	Mem8[a5 + 0xB<32>:word32] = a0_6
	a5 = a5 + 0xFFFFFFFF<32>
	branch a5 == 0xFFFFFFFF<32> l230397FA
l2303980A:
	return
l230397FA:
l23039800_thunk_httpc_close:
	httpc_close(ra, s0, a0_6, 0<32>, 0<32>, a5, s2, s3, s4, mstatus, dwArg14, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188)
	return
httpc_tcp_poll_exit:


void httpc_tcp_err(word32 ra, word32 s0, word32 a0, word32 a1, word32 a5, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
httpc_tcp_err_entry:
l2303980E:
	branch a0 == 0<32> l2303981E
l2303981E:
	return
l23039812:
	Mem6[a0:word32] = 0<32>
l2303981A_thunk_httpc_close:
	httpc_close(ra, s0, a0, 0<32>, a1, a5, s2, s3, s4, mstatus, dwArg14, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188)
	return
httpc_tcp_err_exit:


void httpc_tcp_connected(word32 ra, word32 s0, word32 a1, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
httpc_tcp_connected_entry:
l23039820:
	word32 a0_9 = Mem7[a5 + 16<i32>:word32]
	word32 a5_21
	word32 a0_19 = altcp_write(Mem7[a0_9:word32], Mem7[a1 + 4<i32>:word32], out a5_21)
	branch a0_19 == 0<32> l23039852
l23039852:
	word32 a0_26
	word32 a5_34
	word32 s0_130
	word32 s1_131
	word32 a1_132
	word32 a2_133
	word32 a3_134
	word32 a4_135
	word32 a7_136
	word32 s2_137
	word32 s3_138
	word32 s4_139
	word32 s5_140
	word32 s6_141
	word32 s8_142
	word32 mstatus_143
	pbuf_free(ra, a0_19, 1<32>, a4, s4, mstatus, dwArg0118, out s0_130, out s1_131, out a0_26, out a1_132, out a2_133, out a3_134, out a4_135, out a5_34, out a7_136, out s2_137, out s3_138, out s4_139, out s5_140, out s6_141, out s8_142, out mstatus_143)
	Mem52[Mem7[a0_26:word32] + 16<i32>:word32] = 0<32>
	altcp_output(a0_26, a5_34)
	return
l23039840:
l2303984E_thunk_httpc_close:
	httpc_close(ra, s0, a0_9, 0<32>, a0_19, a5_21, s2, s3, s4, mstatus, dwArg14, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188)
	return
httpc_tcp_connected_exit:


word32 httpc_create_request_string.constprop.6(word32 ra, word32 a0, word32 a2, word32 a4, word32 a5, word32 s3, word32 dwArg18, word32 dwArg24, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg64, word32 dwArg68, word32 dwArg80, word32 dwArg84, word32 dwArg8C, word32 dwArgA8, word32 dwArgCC, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_init_connection_common.constprop.5
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s3:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00CC:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
httpc_create_request_string.constprop.6_entry:
l2303986C:
	branch CONVERT(Mem5[a0 + 6<i32>:byte], byte, word32) == 0<32> l230398D8
l230398D8:
	branch CONVERT(Mem20[a0 + 7<i32>:byte], byte, word32) != 1<32> l2303993C
l2303993C:
l23039956_thunk_snprintf:
	word32 a0_38
	word32 a3_41
	word32 a4_42
	word32 s0_46
	word32 s1_47
	word32 s2_50
	word32 s3_51
	word32 s4_52
	word32 s5_53
	word32 s6_54
	word32 s7_55
	word32 s8_56
	word32 a1_299
	word32 a2_300
	word32 a5_301
	word32 a7_302
	word32 s9_303
	word32 s10_304
	word32 s11_305
	word32 ra_45 = snprintf(ra, a4, a5, 0x23085CDC<32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out s0_46, out s1_47, out a0_38, out a1_299, out a2_300, out a3_41, out a4_42, out a5_301, out a7_302, out s2_50, out s3_51, out s4_52, out s5_53, out s6_54, out s7_55, out s8_56, out s9_303, out s10_304, out s11_305)
	s0Out = s0_46
	s1Out = s1_47
	a0Out = a0_38
	a3Out = a3_41
	a4Out = a4_42
	s2Out = s2_50
	s3Out = s3_51
	s4Out = s4_52
	s5Out = s5_53
	s6Out = s6_54
	s7Out = s7_55
	s8Out = s8_56
	return ra_45
l230398E2:
	branch CONVERT(Mem20[a0 + 12<i32>:byte], byte, word32) >u 3<32> l23039900
l230398EE:
l23039900:
	word32 a1_84
	word32 a2_286
	word32 a3_287
	word32 a4_288
	word32 a5_289
	strlen(a4, out a1_84, out a2_286, out a3_287, out a4_288, out a5_289)
	word32 a0_99
	word32 a3_102
	word32 a4_103
	word32 s0_107
	word32 s1_108
	word32 s2_111
	word32 s3_112
	word32 s5_114
	word32 s6_115
	word32 s7_116
	word32 a1_290
	word32 a2_291
	word32 a5_292
	word32 a7_293
	word32 s4_294
	word32 s8_295
	word32 s9_296
	word32 s10_297
	word32 s11_298
	word32 ra_106 = snprintf(ra, a4, a1_84, 0x23085C64<32>, s3, dwLoc08, dwArg24, dwArg40, dwArg44, dwArg68, dwArg8C, out s0_107, out s1_108, out a0_99, out a1_290, out a2_291, out a3_102, out a4_103, out a5_292, out a7_293, out s2_111, out s3_112, out s4_294, out s5_114, out s6_115, out s7_116, out s8_295, out s9_296, out s10_297, out s11_298)
	s0Out = s0_107
	s1Out = s1_108
	a0Out = a0_99
	a3Out = a3_102
	a4Out = a4_103
	s2Out = s2_111
	s3Out = s3_112
	s4Out = dwArg0118
	s5Out = s5_114
	s6Out = s6_115
	s7Out = s7_116
	s8Out = dwArgD4
	return ra_106
l2303988C:
	branch a2 == 80<i32> l230398B6
l230398B6:
l230398D4_thunk_snprintf:
	word32 a0_142
	word32 a3_145
	word32 a4_146
	word32 s0_150
	word32 s1_151
	word32 s2_154
	word32 s3_155
	word32 s4_156
	word32 s5_157
	word32 s6_158
	word32 s7_159
	word32 s8_160
	word32 a1_306
	word32 a2_307
	word32 a5_308
	word32 a7_309
	word32 s9_310
	word32 s10_311
	word32 s11_312
	word32 ra_149 = snprintf(ra, a4, a5, 0x23085C0C<32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out s0_150, out s1_151, out a0_142, out a1_306, out a2_307, out a3_145, out a4_146, out a5_308, out a7_309, out s2_154, out s3_155, out s4_156, out s5_157, out s6_158, out s7_159, out s8_160, out s9_310, out s10_311, out s11_312)
	s0Out = s0_150
	s1Out = s1_151
	a0Out = a0_142
	a3Out = a3_145
	a4Out = a4_146
	s2Out = s2_154
	s3Out = s3_155
	s4Out = s4_156
	s5Out = s5_157
	s6Out = s6_158
	s7Out = s7_159
	s8Out = s8_160
	return ra_149
l23039894:
l230398B2_thunk_snprintf:
	word32 a0_177
	word32 a3_180
	word32 a4_181
	word32 s0_185
	word32 s1_186
	word32 s2_189
	word32 s3_190
	word32 s4_191
	word32 s5_192
	word32 s6_193
	word32 s7_194
	word32 s8_195
	word32 a1_279
	word32 a2_280
	word32 a5_281
	word32 a7_282
	word32 s9_283
	word32 s10_284
	word32 s11_285
	word32 ra_184 = snprintf(ra, a4, a5, 0x23085BB0<32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out s0_185, out s1_186, out a0_177, out a1_279, out a2_280, out a3_180, out a4_181, out a5_281, out a7_282, out s2_189, out s3_190, out s4_191, out s5_192, out s6_193, out s7_194, out s8_195, out s9_283, out s10_284, out s11_285)
	s0Out = s0_185
	s1Out = s1_186
	a0Out = a0_177
	a3Out = a3_180
	a4Out = a4_181
	s2Out = s2_189
	s3Out = s3_190
	s4Out = s4_191
	s5Out = s5_192
	s6Out = s6_193
	s7Out = s7_194
	s8Out = s8_195
	return ra_184
httpc_create_request_string.constprop.6_exit:


word32 httpc_init_connection_common.constprop.5(word32 ra, word32 s0, word32 a1, word32 a3, word32 s3, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s10, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_get_file_dns
// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a4 mstatus ra s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
httpc_init_connection_common.constprop.5_entry:
l2303995A:
	word32 a5_101
	word32 a0_49
	word32 a3_52
	word32 s0_58
	word32 s7_67
	word32 s8_509
	word32 s4_508
	word32 s6_238
	word32 s5_237
	word32 s3_235
	word32 s2_234
	word32 s1_231
	word32 a4_225
	word32 ra_137 = httpc_create_request_string.constprop.6(ra, a1, a3, 0<32>, 0<32>, s3, dwLoc18, dwLoc0C, dwArg08, dwArg10, dwArg14, dwArg34, dwArg38, s9, s7, s3, dwArg78, dwArg9C, dwArgE8, out s0_58, out s1_231, out a0_49, out a3_52, out a4_225, out s2_234, out s3_235, out s4_508, out s5_237, out s6_238, out s7_67, out s8_509)
	branch a0_49 >u 0xFFFFFFE<32> l23039A74
l2303999C:
	word32 a0_78
	word32 s8_515
	word32 s4_514
	word32 a7_513
	word32 a5_512
	word32 a3_511
	word32 a1_510
	s1_231 = mem_malloc(ra_137, s0_58, 52<i32>, a3_52, a4_225, s2_234, mstatus, s0, dwArg04, ra, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0158, out a0_78, out a1_510, out a3_511, out a4_225, out a5_512, out a7_513, out s2_234, out s3_235, out s4_514, out s5_237, out s6_238, out s8_515)
	a5_101 = 0xFFFFFFFF<32>
	branch a0_78 == 0<32> l230399DA
l230399AC:
	word32 a3_107
	word32 a4_108
	word32 a5_520
	word32 a2_519
	word32 a1_518
	word32 a0_517
	word32 t1_516
	word32 ra_110 = memset(ra_137, a0_78, 0<32>, 52<i32>, out t1_516, out a0_517, out a1_518, out a2_519, out a3_107, out a4_108, out a5_520)
	Mem116[0x2A<32>:word32] = a0_78
	word32 a0_120
	word32 a5_124
	word32 s0_125
	word32 a7_524
	word32 a2_523
	word32 a1_522
	word32 s1_521
	word32 s5_525
	word32 s6_526
	word32 s8_527
	word32 a4_123
	word32 a3_122
	word32 s4_133
	word32 s2_131
	word32 s3_132
	ra_137 = pbuf_alloc(ra_110, a0_78, s1_231, 0<32>, CONVERT(SLICE(s3_235 + 1<i32>, word16, 0), word16, word32), 640<i32>, a3_107, a4_108, mstatus, s8, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_125, out s1_521, out a0_120, out a1_522, out a2_523, out a3_122, out a4_123, out a5_124, out a7_524, out s2_131, out s3_132, out s4_133, out s5_525, out s6_526, out s8_527, out mstatus)
	Mem145[a0_120 + 16<i32>:word32] = s0_125
	branch a0_120 != 0<32> l230399F8
l230399F8:
	word32 a0_146 = Mem145[a5_124:word32]
	branch a5_124 != 0<32> l230399D2
l230399FC:
	Mem148[0x2B<32>:word32] = s0_125
	word32 a0_150
	word32 s1_160
	word32 s10_161
	word32 s9_170
	ra_137 = altcp_new(ra_137, Mem148[a0_146 + 16<i32>:word32], a0_146, a3_122, a4_123, s3_132, s4_133, s7_67, mstatus, s10, s6, dwLoc18, dwLoc08, dwArg08, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg48, s5, s3, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, out s1_160, out a0_150, out a3_122, out a4_123, out s2_131, out s3_132, out s4_133, out s9_170, out s10_161, out mstatus)
	Mem178[a0_150:word32] = s0_125
	branch a0_150 == 0<32> l230399D2
l23039A0A:
	word32 a5_179 = CONVERT(Mem178[s1_160 + 6<i32>:byte], byte, word32)
	branch a5_179 == 0<32> l23039A14
l23039A10:
	s2_131 = CONVERT(Mem178[s1_160 + 4<i32>:uint16], uint16, word32)
l23039A14:
	Mem184[s0_125 + 8<i32>:word16] = SLICE(s2_131, word16, 0)
	altcp_arg(a0_150, s0_125)
	altcp_recv(a0_150, 0x23039538<32>)
	altcp_err(a0_150, 0x2303980E<32>)
	word32 a5_528
	altcp_sent(altcp_poll(a0_150, 0x230397F4<32>, 1<32>, a5_179, out a5_528), 0x23039476<32>)
	word32 a0_221
	word32 a3_224
	word32 s0_230
	word32 s4_236
	word32 s7_239
	word32 s8_240
	ra_137 = httpc_create_request_string.constprop.6(ra_137, s1_160, s9_170, Mem184[a4_123 + 4<i32>:word32], s10_161, s3_132, dwLoc18, dwLoc0C, dwArg08, dwArg10, dwArg14, dwArg34, dwArg38, s9, s7, s3, dwArg78, dwArg9C, dwArgE8, out s0_230, out s1_231, out a0_221, out a3_224, out a4_225, out s2_234, out s3_235, out s4_236, out s5_237, out s6_238, out s7_239, out s8_240)
	branch s3_235 == a0_221 l23039A78
l23039A78:
	Mem245[s0_230 + 28<i32>:word32] = s8_240
	Mem246[s1_231 + 32<i32>:word32] = s0_230
	Mem247[s0_230 + 36<i32>:word32] = s7_239
	Mem248[s6_238:word32] = s0_230
	a5_101 = 0<32>
l23039A6E:
	s1_231 = httpc_free_state(ra_137, s0_230, s0_230, a3_224, a4_225, s2_234, s3_235, s4_236, mstatus, s0, ra, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out a4_225, out s2_234, out s3_235, out s5_237, out s6_238)
l23039A74:
	a5_101 = 0xFFFFFFFA<32>
l230399D2:
	s1_231 = httpc_free_state(ra_137, s0_125, s0_125, a3_122, a4_123, s2_131, s3_132, s4_133, mstatus, s0, ra, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out a4_225, out s2_234, out s3_235, out s5_237, out s6_238)
	a5_101 = 0xFFFFFFFF<32>
l230399DA:
	0<32> = dwArg0128
	0<32> = dwArg1C
	s1Out = s1_231
	a0Out = a5_101
	a4Out = a4_225
	s2Out = s2_234
	s3Out = s3_235
	s4Out = dwArg78
	s5Out = s5_237
	s6Out = s6_238
	s8Out = s5
	mstatusOut = mstatus
	return ra_137
httpc_init_connection_common.constprop.5_exit:


void httpc_get_file_dns(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a6, word32 s2, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s10, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_httpc_test
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
httpc_get_file_dns_entry:
l23039A8A:
	branch a0 == 0<32> l23039AD8
l23039A9C:
	branch a2 == 0<32> l23039AD8
l23039A9E:
	branch a4 == 0<32> l23039AD8
l23039AA0:
	word32 a0_41
	word32 s1_51
	word32 s5_57
	word32 s6_58
	word32 s8_60
	word32 mstatus_139
	word32 a4_114
	word32 s4_112
	word32 s2_110
	word32 s3_122
	word32 ra_136 = httpc_init_connection_common.constprop.5(ra, 0xFFFFFFF0<32>, a3, a1, a6, s5, s6, s7, s8, s9, s10, mstatus, dwLoc2C, dwLoc28, s2, s0, dwLoc18, dwLoc14, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s1_51, out a0_41, out a4_114, out s2_110, out s3_122, out s4_112, out s5_57, out s6_58, out s8_60, out mstatus_139)
	branch a0_41 != 0<32> l23039AD8
l23039ABC:
	word32 a3_118
	word32 a0_115
	word32 s1_108
	word32 a5_109
	branch CONVERT(Mem15[s2_110 + 6<i32>:byte], byte, word32) == 0<32> l23039AEA
l23039AEA:
	word32 s0_343
	word32 s1_344
	ra_136 = dns_gethostbyname(ra_136, s1_51, s4_112 + 4<i32>, s4_112, s4_112 + 4<i32>, s5_57, s6_58, s8_60, mstatus_139, dwLoc28, dwLoc14, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg78, dwArg88, dwArgB8, dwArgF8, dwArg0138, out s0_343, out s1_344, out a0_115, out a3_118, out a4_114, out s2_110, out s3_122, out s4_112, out mstatus_139)
	s1_108 = a0_115
	branch a0_115 == 0<32> l23039AC4
l23039B04:
	a5_109 = 0xFFFFFFFB<32>
	branch a0_115 != 0xFFFFFFFB<32> l23039AD0
l23039AC4:
	a0_115 = httpc_get_internal_addr(s4_112, s2_110, a4_114, out a3_118, out a5_109)
	s1_108 = a0_115
	branch a0_115 == 0<32> l23039B0A
l23039B0A:
	branch s3_122 == 0<32> l23039AD8
l23039B0E:
	Mem130[s3_122:word32] = a5_109
l23039AD0:
	word32 a4_345
	word32 s2_346
	word32 s3_347
	word32 s5_348
	word32 s6_349
	httpc_free_state(ra_136, s1_108, a0_115, a3_118, a4_114, s2_110, s3_122, s4_112, mstatus_139, s0, ra, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out a4_345, out s2_346, out s3_347, out s5_348, out s6_349)
l23039AD8:
	0<32> = dwArg0128
	return
httpc_get_file_dns_exit:


void proc_entry_looprt(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a4, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg4C, word32 dwArg5C, word32 dwArgC8, word32 dwArgF8, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +005C:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
l23039B2C:
	word32 a2_22
	word32 a5_23
	word32 a4_26
	word32 a0_65
	word32 a1_66
	word32 s4_67
	word32 s8_68
	puts(s0_43 + -596<i32>, out a0_65, out a1_66, out a2_22, out a4_26, out a5_23, out s4_67, out s8_68)
	word32 a3_39
	word32 s1_69
	word32 a0_70
	word32 a1_71
	word32 a2_72
	word32 a4_73
	word32 a5_74
	word32 s2_75
	word32 s3_76
	word32 s4_77
	word32 s8_78
	word32 s0_43 = vTaskDelay(1000<i32>, a2_22, a3_39, a4_26, a5_23, mstatus, Mem0[sp + 36<i32>:word32], Mem0[sp + 40<i32>:word32], Mem0[sp + 312<i32>:word32], Mem0[sp + 376<i32>:word32], out s1_69, out a0_70, out a1_71, out a2_72, out a3_39, out a4_73, out a5_74, out s2_75, out s3_76, out s4_77, out s8_78)
proc_entry_looprt_exit:
proc_entry_looprt_entry:
l23039B16:
	bloop_run(ra, s1, 0x42014448<32>, a1, a2, a3, a4, s5, s6, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg28, dwArg4C, dwArg5C, dwArgC8, dwArgF8, dwArg0138)


word32 looprt_evt_notify_async(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test_evt
//      cmd_looprt_test_evt_dump
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: a4 a5 mstatus ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
looprt_evt_notify_async_entry:
l23039B3E:
l23039B4A_thunk_bloop_evt_set_async:
	word32 mstatus_20
	word32 s1_23
	word32 ra_21 = bloop_evt_set_async(ra, 0x42014448<32>, a0, a1, a3, a4, mstatus, dwArg08, dwArg14, dwArg38, dwArg50, dwArg54, dwArg58, dwArg78, dwArg9C, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s1_23, out mstatus_20)
	s0Out = s0_22
	s1Out = s1_23
	a4Out = a4_18
	a5Out = a5_19
	s2Out = s2_24
	s3Out = s3_25
	mstatusOut = mstatus_20
	return ra_21
looprt_evt_notify_async_exit:


void looprt_evt_status_dump()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
//      cmd_looprt_test
//      cmd_looprt_test_status
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
looprt_evt_status_dump_entry:
l23039B4E:
l23039B56_thunk_bloop_status_dump:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg32 = <invalid>
	word32 stackArg36 = <invalid>
	word32 stackArg108 = <invalid>
	word32 stackArg268 = <invalid>
	word32 s0_12
	word32 s1_13
	word32 a3_14
	word32 s5_15
	bloop_status_dump(ra, a3, s5, stackArg32, stackArg36, stackArg108, stackArg268, out s0_12, out s1_13, out a3_14, out s5_15)
	return
looprt_evt_status_dump_exit:


void looprt_evt_schedule(word32 ra, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg94, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test_schedule_evt1
//      cmd_looprt_test_schedule_evt2
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0094:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
looprt_evt_schedule_entry:
l23039B5A:
	word32 a0_25
	word32 s2_34
	word32 a1_127
	word32 s1_126
	word32 a2_128
	word32 a3_129
	word32 a4_130
	word32 a5_131
	word32 a6_132
	word32 s3_133
	word32 s4_134
	word32 s8_135
	pvPortMalloc(ra, a2, 36<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_126, out a0_25, out a1_127, out a2_128, out a3_129, out a4_130, out a5_131, out a6_132, out s2_34, out s3_133, out s4_134, out s8_135)
	branch a0_25 == 0<32> l23039BA8
l23039BA8:
	return
l23039B76:
	word32 s0_69 = bloop_timer_configure(a0_25, bloop_timer_init(ra, a0_25, 1<32>), 0<32>, s2_34, dwArg94)
l23039BA4_thunk_bloop_timer_register:
	word32 a3_136
	word32 a4_137
	word32 a5_138
	bloop_timer_register(0x42014448<32>, s0_69, out a3_136, out a4_137, out a5_138)
	return
looprt_evt_schedule_exit:


word32 looprt_start(word32 ra, word32 s1, word32 a2, word32 a6, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg40, word32 dwArg44, word32 dwArg8C, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148, word32 dwArg0194, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a2:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +008C:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0194:[0..31]
// LiveOut: a3 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
looprt_start_entry:
l23039BB6:
	word32 s1_26
	word32 s3_127
	word32 ra_25 = bloop_init(ra, 0x42014448<32>, dwLoc08, dwArg18, dwArg40, dwArg44, s1, dwArg8C, out s1_26, out s3_127)
	word32 a5_47 = bloop_handler_register(0x42014448<32>, 0x4200D48C<32>, 0x1F<32>)
	looprt_evt_status_dump()
	word32 a2_62
	word32 a5_63
	word32 s0_65
	word32 a3_71
	word32 a4_72
	word32 tp_128
	word32 t0_129
	word32 a0_130
	word32 s2_131
	word32 ra_74 = xTaskCreateStatic(ra_25, 0x23039B16<32>, 0x23085DA0<32>, s1_26, 0<32>, 0x1A<32>, a5_47, a6, mstatus, a2, dwArg04, dwArgC8, dwArg0194, out tp_128, out t0_129, out s0_65, out a0_130, out a2_62, out a3_71, out a4_72, out a5_63, out s2_131)
	word32 a3_87
	word32 s2_92
	word32 s3_93
	word32 s1_91 = bloop_wait_startup(a2_62, a3_71, a4_72, a5_63, mstatus, dwLoc0C, dwLoc08, dwArg0108, dwArg0148, out a3_87, out s2_92, out s3_93)
	s0Out = s0_65
	s1Out = s1_91
	a3Out = a3_87
	s2Out = s2_92
	s3Out = s3_93
	return ra_74
looprt_start_exit:


void looprt_start_auto(word32 ra, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
looprt_start_auto_entry:
l23039C18:
	word32 s1_18
	word32 s3_22
	word32 ra_17 = bloop_init(ra, 0x42014448<32>, dwArg08, dwArg28, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_18, out s3_22)
	bloop_handler_register(0x42014448<32>, 0x4200D48C<32>, 0x1F<32>)
	looprt_evt_status_dump()
	word32 a2_53
	word32 a3_54
	word32 a4_55
	word32 a5_56
	xTaskCreate(ra_17, s1_18, 0x1000000<32>, 0<32>, 0x1A<32>, 0<32>, s3_22, mstatus, dwArg00, dwArg04, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out a2_53, out a3_54, out a4_55, out a5_56)
	word32 a3_107
	word32 s2_108
	word32 s3_109
	bloop_wait_startup(a2_53, a3_54, a4_55, a5_56, mstatus, dwArg04, dwArg08, dwArg0118, dwArg0158, out a3_107, out s2_108, out s3_109)
	return
looprt_start_auto_exit:


word32 looprt_handler_register(word32 a0, word32 a1, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_hook_on_looprt
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
looprt_handler_register_entry:
l23039C6E:
	branch Mem0[0x42014448<32>:int32] == 0<32> l23039C84
l23039C84:
	a5Out = 0x42014000<32>
	return <invalid>
l23039C7A:
l23039C80_thunk_bloop_handler_register:
	a5Out = bloop_handler_register(0x42014448<32>, a0, a1)
	return <invalid>
looprt_handler_register_exit:


word32 looprt_timer_register(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _led_bloop_evt
// MayUse:  a0:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
looprt_timer_register_entry:
l23039C88:
	word32 a3_11
	word32 a4_12
	word32 a5_13
	bloop_timer_register(0x42014448<32>, a0, out a3_11, out a4_12, out a5_13)
	a4Out = a4_12
	a5Out = a5_13
	return a3_11
looprt_timer_register_exit:


void cmd_looprt_test(word32 ra, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArg9C, word32 dwArgAC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
cmd_looprt_test_entry:
l23039CA2:
	word32 a0_118
	word32 a1_119
	word32 a2_120
	word32 a4_121
	word32 a5_122
	word32 s4_123
	word32 s8_124
	puts(0x23085DD0<32>, out a0_118, out a1_119, out a2_120, out a4_121, out a5_122, out s4_123, out s8_124)
	word32 a3_27
	word32 s1_125
	word32 a0_126
	word32 a1_127
	word32 a2_128
	word32 a4_129
	word32 a5_130
	word32 a7_131
	word32 s2_132
	word32 s3_133
	word32 s4_134
	word32 s5_135
	word32 s6_136
	word32 s7_137
	word32 s8_138
	word32 s9_139
	word32 s10_140
	word32 s11_141
	word32 t4_142
	word32 s1_143
	word32 a0_144
	word32 a1_145
	word32 a2_146
	word32 a3_147
	word32 a4_148
	word32 a5_149
	word32 a7_150
	word32 s2_151
	word32 s3_152
	word32 s4_153
	word32 s5_154
	word32 s6_155
	word32 s7_156
	word32 s8_157
	word32 s9_158
	word32 s10_159
	word32 s11_160
	word32 t4_161
	word32 ra_55 = printf(printf(ra, 0x23085DEC<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_125, out a0_126, out a1_127, out a2_128, out a3_27, out a4_129, out a5_130, out a7_131, out s2_132, out s3_133, out s4_134, out s5_135, out s6_136, out s7_137, out s8_138, out s9_139, out s10_140, out s11_141, out t4_142), 0x23085E0C<32>, a3_27, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_143, out a0_144, out a1_145, out a2_146, out a3_147, out a4_148, out a5_149, out a7_150, out s2_151, out s3_152, out s4_153, out s5_154, out s6_155, out s7_156, out s8_157, out s9_158, out s10_159, out s11_160, out t4_161)
l23039CD4_thunk_looprt_start_auto:
	looprt_start_auto(ra_55, mstatus, dwArg00, dwArg04, dwArg08, dwArg28, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158)
	return
cmd_looprt_test_exit:


void cmd_looprt_test_status()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s1 s4 s8 t3 tp
// Preserved: sp
cmd_looprt_test_status_entry:
l23039CD8:
	word32 a0_23
	word32 a1_24
	word32 a2_25
	word32 a4_26
	word32 a5_27
	word32 s4_28
	word32 s8_29
	puts(0x23085EB0<32>, out a0_23, out a1_24, out a2_25, out a4_26, out a5_27, out s4_28, out s8_29)
l23039CEC_thunk_looprt_evt_status_dump:
	looprt_evt_status_dump()
	return
cmd_looprt_test_status_exit:


void cmd_looprt_test_evt(word32 ra, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
cmd_looprt_test_evt_entry:
l23039CF0:
	word32 a4_13
	word32 a0_54
	word32 a1_55
	word32 a2_56
	word32 a5_57
	word32 s4_58
	word32 s8_59
	puts(0x23085E20<32>, out a0_54, out a1_55, out a2_56, out a4_13, out a5_57, out s4_58, out s8_59)
l23039D08_thunk_looprt_evt_notify_async:
	word32 s0_60
	word32 s1_61
	word32 a4_62
	word32 a5_63
	word32 s2_64
	word32 s3_65
	word32 mstatus_66
	looprt_evt_notify_async(ra, 0x1F<32>, 0<32>, a3, a4_13, mstatus, dwArg08, dwArg14, dwArg38, dwArg50, dwArg54, dwArg58, dwArg78, dwArg9C, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_60, out s1_61, out a4_62, out a5_63, out s2_64, out s3_65, out mstatus_66)
	return
cmd_looprt_test_evt_exit:


void cmd_looprt_test_evt_dump(word32 ra, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
cmd_looprt_test_evt_dump_entry:
l23039D0C:
	word32 a4_13
	word32 a0_54
	word32 a1_55
	word32 a2_56
	word32 a5_57
	word32 s4_58
	word32 s8_59
	puts(0x23085E3C<32>, out a0_54, out a1_55, out a2_56, out a4_13, out a5_57, out s4_58, out s8_59)
l23039D24_thunk_looprt_evt_notify_async:
	word32 s0_60
	word32 s1_61
	word32 a4_62
	word32 a5_63
	word32 s2_64
	word32 s3_65
	word32 mstatus_66
	looprt_evt_notify_async(ra, 0x1F<32>, 1<32>, a3, a4_13, mstatus, dwArg08, dwArg14, dwArg38, dwArg50, dwArg54, dwArg58, dwArg78, dwArg9C, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_60, out s1_61, out a4_62, out a5_63, out s2_64, out s3_65, out mstatus_66)
	return
cmd_looprt_test_evt_dump_exit:


void cmd_looprt_test_schedule_evt1(word32 ra, word32 a3, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg94, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0094:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
cmd_looprt_test_schedule_evt1_entry:
l23039D28:
	word32 a5_10
	word32 a4_13
	word32 a0_52
	word32 a1_53
	word32 a2_54
	word32 s4_55
	word32 s8_56
	puts(0x23085E60<32>, out a0_52, out a1_53, out a2_54, out a4_13, out a5_10, out s4_55, out s8_56)
l23039D46_thunk_looprt_evt_schedule:
	looprt_evt_schedule(ra, 0x4FFFE20<32>, a3, a4_13, a5_10, mstatus, dwArg20, dwArg24, dwArg94, dwArg0118, dwArg0158)
	return
cmd_looprt_test_schedule_evt1_exit:


void cmd_looprt_test_schedule_evt2(word32 ra, word32 a3, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg94, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0094:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
cmd_looprt_test_schedule_evt2_entry:
l23039D4A:
	word32 a5_10
	word32 a4_13
	word32 a0_52
	word32 a1_53
	word32 a2_54
	word32 s4_55
	word32 s8_56
	puts(0x23085E88<32>, out a0_52, out a1_53, out a2_54, out a4_13, out a5_10, out s4_55, out s8_56)
l23039D68_thunk_looprt_evt_schedule:
	looprt_evt_schedule(ra, 0x2000710<32>, a3, a4_13, a5_10, mstatus, dwArg20, dwArg24, dwArg94, dwArg0118, dwArg0158)
	return
cmd_looprt_test_schedule_evt2_exit:


void looprt_test_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
looprt_test_cli_init_entry:
l23039D6C:
	return
looprt_test_cli_init_exit:


void _cb_led_trigger(word32 ra, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
_cb_led_trigger_entry:
l23039D70:
	bl_gpio_output_set(CONVERT(Mem7[Mem7[a1 + 56<i32>:word32] + 48<i32>:byte], byte, word32), CONVERT(a1 != 0<32>, bool, word32), a3)
	word32 a5_21 = 1<32>
	branch CONVERT(Mem7[0x4201FD4C<32>:byte], byte, word32) >u 1<32> l23039DDE
l23039D94:
	word32 a4_23 = CONVERT(Mem7[0x4201FD4D<32>:byte], byte, word32)
	branch a4_23 >u 1<32> l23039DDE
l23039DA0:
	branch Mem7[0x4200DE84<32>:int32] == 0<32> l23039DEE
l23039DEE:
	word32 a5_150
	xTaskGetTickCount(out a5_150)
l23039DAA:
	word32 a5_151
	xTaskGetTickCountFromISR(out a5_151)
l23039DAE:
	branch a4_23 != 0<32> l23039DF4
l23039DF4:
l23039DB4:
l23039DBC:
	word32 s1_152
	word32 a0_153
	word32 a1_154
	word32 a2_155
	word32 a3_156
	word32 a4_157
	word32 s2_158
	word32 s3_159
	word32 s4_160
	word32 s5_161
	word32 s6_162
	word32 s7_163
	word32 s8_164
	word32 s9_165
	word32 s10_166
	word32 s11_167
	bl_printk(ra, 0x23085FB4<32>, 0x23085FA4<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_152, out a0_153, out a1_154, out a2_155, out a3_156, out a4_157, out a5_21, out s2_158, out s3_159, out s4_160, out s5_161, out s6_162, out s7_163, out s8_164, out s9_165, out s10_166, out s11_167)
l23039DDE:
	Mem82[CONVERT(a5_21 <u 1<i32>, bool, word32) + 56<i32>:word32] = Mem7[a5_21 + 56<i32>:word32]
	return
_cb_led_trigger_exit:


void _led_bloop_msg(word32 ra, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
_led_bloop_msg_entry:
l23039DFE:
	branch CONVERT(Mem0[0x4201FD4C<32>:byte], byte, word32) >u 1<32> l23039E7A
l23039E0C:
	branch CONVERT(Mem0[0x4201FD4D<32>:byte], byte, word32) >u 1<32> l23039E7A
l23039E7A:
	return
l23039E18:
	branch Mem0[0x4200DE84<32>:int32] == 0<32> l23039E74
l23039E74:
	word32 a5_157
	xTaskGetTickCount(out a5_157)
l23039E2A:
	word32 a5_158
	xTaskGetTickCountFromISR(out a5_158)
l23039E2E:
	word32 s11_175
	word32 s10_174
	word32 s9_173
	word32 s8_172
	word32 s7_171
	word32 s6_170
	word32 s5_169
	word32 s4_168
	word32 s3_167
	word32 s2_166
	word32 a5_165
	word32 a4_164
	word32 a3_163
	word32 a2_162
	word32 a1_161
	word32 a0_160
	word32 s1_159
	bl_printk(ra, 0x23086070<32>, 0x23085FA4<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_159, out a0_160, out a1_161, out a2_162, out a3_163, out a4_164, out a5_165, out s2_166, out s3_167, out s4_168, out s5_169, out s6_170, out s7_171, out s8_172, out s9_173, out s10_174, out s11_175)
	return
_led_bloop_msg_exit:


void _led_bloop_evt(word32 ra, word32 s1, word32 a1, word32 s6, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] ra:[0..31] s1:[0..31] s6:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
_led_bloop_evt_entry:
l23039E7E:
	word32 a3_162 = Mem25[s1:word32]
	word32 s9_153 = a1
	word32 s8_152 = a3_162
l23039EB4:
	branch (s1 & 1<i32>) == 0<32> l23039EDE
l23039EDE:
	branch (s1 & 2<i32>) == 0<32> l23039F9A
l23039F9A:
	branch s1 == 0<32> l23039EBE
l23039F9C:
	word32 s5_525
	word32 a7_521
	word32 a0_515
	word32 s1_514
	word32 s8_528
	word32 s9_529
	word32 s10_530
	word32 s11_531
	word32 t4_532
	word32 a2_517
	word32 a1_516
	word32 a4_519
	word32 a3_518
	word32 a5_520
	word32 s4_524
	word32 s3_523
	word32 s2_522
	word32 s6_526
	word32 s7_527
	printf(ra, 0x23086048<32>, a3_162, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_514, out a0_515, out a1_516, out a2_517, out a3_518, out a4_519, out a5_520, out a7_521, out s2_522, out s3_523, out s4_524, out s5_525, out s6_526, out s7_527, out s8_528, out s9_529, out s10_530, out s11_531, out t4_532)
l23039FB4:
l23039EE4:
	word32 s2_146 = Mem47[s9_153 + 12<i32>:int32]
	word32 s3_147 = 0<32>
	word32 s0_105 = Mem47[s2_146 + 12<i32>:int32]
	branch s0_105 == 0<32> l23039EF4
l23039EF0:
	s3_147 = Mem47[s0_105 + 4<i32>:int32]
l23039EF4:
l23039EFC:
	branch s0_105 != s2_146 + 8<i32> l23039F08
l23039F08:
	branch CONVERT(Mem81[0x4201FD4C<32>:byte], byte, word32) >u 2<32> l23039F64
l23039F16:
	word32 a4_85 = CONVERT(Mem81[0x4201FD4D<32>:byte], byte, word32)
	branch a4_85 >u 2<32> l23039F64
l23039F22:
	branch Mem81[0x4200DE84<32>:int32] == 0<32> l23039F94
l23039F94:
	word32 a5_533
	xTaskGetTickCount(out a5_533)
l23039F2C:
	word32 a5_534
	xTaskGetTickCountFromISR(out a5_534)
l23039F30:
	branch a4_85 != 0<32> l23039F3A
l23039F38:
l23039F3A:
	s0_105 = Mem81[a4_85 + 44<i32>:word32]
	branch a4_85 != 0<32> l23039F42
l23039F40:
l23039F42:
	word32 s10_545
	word32 s11_546
	word32 a0_535
	word32 a1_536
	word32 a2_537
	word32 a3_538
	word32 s7_544
	word32 a4_539
	word32 a5_540
	word32 s4_541
	word32 s5_542
	word32 s6_543
	ra = bl_printk(ra, 0x23085FFC<32>, 0x23085FA4<32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1, out a0_535, out a1_536, out a2_537, out a3_538, out a4_539, out a5_540, out s2_146, out s3_147, out s4_541, out s5_542, out s6_543, out s7_544, out s8_152, out s9_153, out s10_545, out s11_546)
l23039F64:
	word32 a4_163
	word32 a5_164
	a3_162 = looprt_timer_register(s0_105 + 8<i32>, out a4_163, out a5_164)
	word32 s0_169 = Mem81[a4_163:word32]
	Mem170[a5_164 + 4<i32>:word32] = a4_163
	Mem171[a4_163:word32] = a5_164
	word32 a5_173 = Mem171[s2_146 + 4<i32>:int32]
	Mem174[s0_169:word32] = s2_146
	Mem175[a5_173 + 4<i32>:word32] = s0_169
	Mem176[s2_146 + 4<i32>:word32] = s0_169
	Mem177[s0_169:word32] = a5_173
	word32 a5_178 = 0<32>
	branch s3_147 == 0<32> l23039F8E
l23039F8A:
	a5_178 = Mem177[s3_147 + 4<i32>:int32]
l23039F8E:
	s0_105 = s3_147
	s3_147 = a5_178
l23039F04:
	s1 = s1 & 0xFFFFFFFD<32>
l23039EBA:
	s1 = s1 & 0xFFFFFFFE<32>
l23039EBC:
	branch s1 != 0<32> l23039EB4
l23039EBE:
	Mem206[s8_152:word32] = 0<32>
	0<32> = dwArg0128
	return
_led_bloop_evt_exit:


word32 loopset_led_hook_on_looprt(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
loopset_led_hook_on_looprt_entry:
l23039FB6:
	Mem7[0x420148EC<32>:word32] = 0x420148E8<32>
	Mem8[0x420148E8<32>:word32] = 0x420148E8<32>
	Mem9[0x420148FC<32>:word32] = 0x420148E8<32>
	Mem10[0x420148F8<32>:word32] = 0x420148E8<32>
l23039FD4_thunk_looprt_handler_register:
	word32 a5_16
	word32 a4_15 = looprt_handler_register(0x23086060<32>, 1<32>, out a5_16)
	a5Out = a5_16
	return a4_15
loopset_led_hook_on_looprt_exit:


word32 loopset_led_trigger(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg94, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_gpio_init_from_dts
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a4 a5 mstatus ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
loopset_led_trigger_entry:
l23039FD8:
	word32 a0_23
	word32 s2_32
	word32 s3_33
	word32 s1_209
	word32 a1_210
	word32 a2_211
	word32 a3_212
	word32 a4_213
	word32 a5_214
	word32 a6_215
	word32 s4_216
	word32 s8_217
	pvPortMalloc(ra, s1, 60<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_209, out a0_23, out a1_210, out a2_211, out a3_212, out a4_213, out a5_214, out a6_215, out s2_32, out s3_33, out s4_216, out s8_217)
	branch a0_23 != 0<32> l2303A032
l2303A032:
	word32 t1_218
	word32 a0_219
	word32 a1_220
	word32 a2_221
	word32 a3_222
	word32 a4_223
	word32 a5_224
	word32 ra_47 = memset(ra, a0_23, 0<32>, 60<i32>, out t1_218, out a0_219, out a1_220, out a2_221, out a3_222, out a4_223, out a5_224)
	Mem51[a0_23 + 48<i32>:word32] = s2_32
	word32 s1_61 = bloop_timer_init(ra_47, a0_23 + 8<i32>, 0<32>)
	bloop_timer_repeat_enable(s1_61)
	word32 s0_78 = bloop_timer_configure(s1_61, s3_33, a0_23, 1<32>, dwArg94)
	word32 ra_89 = bl_gpio_enable_output(0<32>, 0<32>)
	word32 a5_225
	word32 a4_92 = vTaskEnterCritical(1<32>, mstatus, out a5_225)
	word32 a5_94 = Mem51[a4_92 + 12<i32>:word32]
	Mem96[a5_94 + 8<i32>:word32] = s0_78
	Mem97[a4_92 + 4<i32>:word32] = s0_78
	Mem98[s0_78 + 12<i32>:word32] = a5_94
	Mem99[s0_78:word32] = a4_92
	word32 a4_102
	word32 a5_226
	word32 a3_101 = vTaskExitCritical(a5_94 + 8<i32>, mstatus, out a4_102, out a5_226)
l2303A0A4_thunk_looprt_evt_notify_async:
	word32 a4_115
	word32 a5_116
	word32 mstatus_117
	word32 s0_119
	word32 s1_120
	word32 s2_121
	word32 s3_122
	word32 ra_118 = looprt_evt_notify_async(ra_89, 1<32>, 2<32>, a3_101, a4_102, mstatus, dwArg08, dwArg14, dwArg38, dwArg50, dwArg54, dwArg58, dwArg78, dwArg9C, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_119, out s1_120, out a4_115, out a5_116, out s2_121, out s3_122, out mstatus_117)
	s0Out = s0_119
	s1Out = s1_120
	a4Out = a4_115
	a5Out = a5_116
	s2Out = s2_121
	s3Out = s3_122
	mstatusOut = mstatus_117
	return ra_118
loopset_led_trigger_exit:
l23039FF2:
	branch Mem16[0x4200DE84<32>:int32] == 0<32> l2303A02C
l2303A02C:
	word32 a5_227
	xTaskGetTickCount(out a5_227)
l23039FFC:
	word32 a5_228
	xTaskGetTickCountFromISR(out a5_228)
l2303A000:
	word32 s1_229
	word32 a0_230
	word32 a1_231
	word32 a2_232
	word32 a3_233
	word32 a4_234
	word32 a5_235
	word32 s2_236
	word32 s3_237
	word32 s4_238
	word32 s5_239
	word32 s6_240
	word32 s7_241
	word32 s8_242
	word32 s9_243
	word32 s10_244
	word32 s11_245
	bl_printk(ra, 0x2307C074<32>, 0x23085FA4<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_229, out a0_230, out a1_231, out a2_232, out a3_233, out a4_234, out a5_235, out s2_236, out s3_237, out s4_238, out s5_239, out s6_240, out s7_241, out s8_242, out s9_243, out s10_244, out s11_245)
l2303A02A:


word32 sys_mbox_new(word32 ra, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0148, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_init
//      netconn_alloc
//      lwip_netconn_do_listen
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
sys_mbox_new_entry:
l2303A0A8:
	word32 a0_17
	word32 s1_25
	word32 s2_26
	word32 s3_27
	word32 s4_28
	word32 a3_81
	word32 a4_82
	word32 a2_80
	word32 a1_79
	word32 a5_83
	Mem33[a0_17:word32] = xQueueGenericCreate(ra, 50<i32>, 4<32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s1_25, out a0_17, out a1_79, out a2_80, out a3_81, out a4_82, out a5_83, out s2_26, out s3_27, out s4_28)
	word32 a5_38 = CONVERT(Mem33[0x4201FE98<32>:uint16], uint16, word32) + 1<32> << 16<i32>
	word32 a3_36 = CONVERT(Mem33[0x4201FE9A<32>:uint16], uint16, word32)
	Mem40[0x4201FE98<32>:word16] = SLICE(a5_38 >>u 16<i32>, word16, 0)
	branch a3_36 >=u a5_38 >>u 16<i32> l2303A0E0
l2303A0DC:
	Mem41[0x4201FE9A<32>:word16] = SLICE(a5_38 >>u 16<i32>, word16, 0)
l2303A0E0:
	a0Out = 0<32> - CONVERT(a0_17 <u 1<i32>, bool, word32)
	a2Out = dwArg10
	a3Out = a3_36
	a4Out = 0x4201FD98<32>
	a5Out = a5_38 >>u 16<i32>
	s2Out = s2_26
	s3Out = s3_27
	s4Out = s4_28
	return s1_25
sys_mbox_new_exit:


word32 sys_mbox_free(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_new_with_proto_and_callback
//      netconn_alloc
//      netconn_drain
//      accept_function
//      lwip_netconn_do_listen
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
sys_mbox_free_entry:
l2303A0F2:
	word32 a3_20
	word32 a4_21
	word32 a0_18 = uxQueueMessagesWaiting(Mem9[a0:word32], a3, a4, mstatus, out a3_20, out a4_21)
	branch a0_18 == 0<32> l2303A118
l2303A10C:
	Mem25[0x4201FE9C<32>:word16] = SLICE(CONVERT(Mem9[0x4201FE9C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303A118:
	word32 a0_33
	word32 a3_36
	word32 a4_37
	word32 s1_41
	word32 s4_42
	word32 a1_70
	word32 a2_71
	word32 a5_72
	word32 s0_40 = vQueueDelete(a0_18, a3_20, a4_21, mstatus, dwArg0148, dwArg0188, out s1_41, out a0_33, out a1_70, out a2_71, out a3_36, out a4_37, out a5_72, out s4_42)
	word32 a5_45 = CONVERT(Mem27[s0_40 + 256<i32>:uint16], uint16, word32)
	Mem49[s0_40 + 256<i32>:word16] = SLICE(a5_45 + 0xFFFFFFFF<32>, word16, 0)
	a0Out = a0_33
	a2Out = dwArg10
	a3Out = a3_36
	a4Out = a4_37
	a5Out = a5_45 + 0xFFFFFFFF<32>
	s4Out = s4_42
	return s1_41
sys_mbox_free_exit:


word32 sys_mbox_post(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_send_msg_wait_sem
//      tcpip_api_call
//      cmd_sntp_start
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 s0 s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_mbox_post_entry:
l2303A132:
l2303A140:
	word32 a3_28
	word32 s0_33
	word32 s1_34
	word32 s2_35
	word32 s3_36
	word32 s5_38
	word32 s6_39
	word32 a1_82
	word32 a2_83
	word32 a7_84
	word32 s4_85
	word32 s8_86
	xQueueGenericSend(a0, fp + 0xFFFFFFEC<32>, 0<32>, a4, a5, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s0_33, out s1_34, out a0, out a1_82, out a2_83, out a3_28, out a4, out a5, out a7_84, out s2_35, out s3_36, out s4_85, out s5_38, out s6_39, out s8_86)
	branch a0 != s0_33 l2303A140
l2303A150:
	s1Out = s1_34
	a3Out = a3_28
	a4Out = a4
	s2Out = s2_35
	s3Out = s3_36
	s5Out = s5_38
	s6Out = s6_39
	return s0_33
sys_mbox_post_exit:


word32 sys_mbox_trypost(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_input
//      tcpip_try_callback
//      recv_udp
//      err_tcp
//      recv_raw
//      recv_tcp
//      accept_function
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_mbox_trypost_entry:
l2303A15A:
	word32 a0_40
	word32 a0_16
	word32 a1_17
	word32 a3_19
	word32 a7_23
	word32 s0_24
	word32 s1_25
	word32 s2_26
	word32 s3_27
	word32 s4_28
	word32 s5_29
	word32 s6_30
	word32 s8_97
	word32 a5_96
	word32 a2_95
	word32 a4_20
	xQueueGenericSend(Mem5[a0:word32], fp + 0xFFFFFFEC<32>, 0<32>, a4, a5, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s0_24, out s1_25, out a0_16, out a1_17, out a2_95, out a3_19, out a4_20, out a5_96, out a7_23, out s2_26, out s3_27, out s4_28, out s5_29, out s6_30, out s8_97)
	word32 a5_39 = 1<32>
	branch a0_16 == 1<32> l2303A18C
l2303A18C:
	a0_40 = 0<32>
l2303A172:
	word32 a4_43 = CONVERT(Mem9[0x4201FE9C<32>:uint16], uint16, word32)
	Mem46[0x4201FE9C<32>:word16] = SLICE(a4_43 + 1<32>, word16, 0)
	a5_39 = 0x4201FD98<32>
	a0_40 = 0xFFFFFFFF<32>
	a4_20 = a4_43 + 1<32>
l2303A186:
	s1Out = s1_25
	a0Out = a0_40
	a1Out = a1_17
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_39
	a7Out = a7_23
	s2Out = s2_26
	s3Out = s3_27
	s4Out = s4_28
	s5Out = s5_29
	s6Out = s6_30
	return s0_24
sys_mbox_trypost_exit:


word32 sys_arch_mbox_fetch(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg64, word32 dwArgD8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_thread
//      netconn_accept
//      netconn_recv_data
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0064:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_arch_mbox_fetch_entry:
l2303A190:
	word32 a5_21
	xTaskGetTickCount(out a5_21)
	word32 s2_166 = a0
	word32 s1_164 = a1
	branch a1 != 0<32> l2303A1AE
l2303A1AC:
	s1_164 = fp + -36<i32>
l2303A1AE:
	word32 s0_163
	word32 a5_160
	word32 s3_168
	word32 a1_154
	word32 a0_153
	branch a2 == 0<32> l2303A1DE
l2303A1DE:
	word32 a0_38
	word32 a2_191
	word32 s4_192
	s0_163 = xQueueReceive(Mem15[s2_166:int32], s1_164, 0xFFFFFFFF<32>, a3, a4, a5_21, mstatus, dwLoc38, dwLoc1C, dwArg64, dwArgD8, dwArg0118, out s1_164, out a0_38, out a1_154, out a2_191, out a3, out a4, out a5_21, out s2_166, out s3_168, out s4_192)
	branch a0_38 != s3_168 l2303A1DE
l2303A1EE:
l2303A1B2:
	word32 a0_72
	word32 a2_193
	word32 a5_194
	word32 s4_195
	s0_163 = xQueueReceive(Mem15[a0:int32], s1_164, a2, a3, a4, a5_21, mstatus, dwLoc38, dwLoc1C, dwArg64, dwArgD8, dwArg0118, out s1_164, out a0_72, out a1_154, out a2_193, out a3, out a4, out a5_194, out s2_166, out s3_168, out s4_195)
	a5_160 = 1<32>
	branch a0_72 != 1<32> l2303A1CA
l2303A1CA:
	Mem94[s1_164:word32] = 0<32>
	a0_153 = 0xFFFFFFFF<32>
l2303A1C2:
	a0_153 = xTaskGetTickCount(out a5_160) - s0_163
l2303A1D0:
	s1Out = s1_164
	a0Out = a0_153
	a1Out = a1_154
	a3Out = a3
	a4Out = a4
	a5Out = a5_160
	s2Out = s2_166
	s3Out = s3_168
	s4Out = dwArgF4
	return s0_163
sys_arch_mbox_fetch_exit:


word32 sys_arch_mbox_tryfetch(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_accept
//      netconn_recv_data
//      netconn_drain
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a3 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_arch_mbox_tryfetch_entry:
l2303A1F0:
	branch a1 != 0<32> l2303A1F8
l2303A1F6:
	a1 = fp + 0xFFFFFFEC<32>
l2303A1F8:
	word32 a0_23
	word32 a1_24
	word32 a3_26
	word32 a4_27
	word32 s1_32
	word32 s2_33
	word32 s3_34
	word32 s4_35
	word32 a2_70
	word32 a5_71
	word32 s0_31 = xQueueReceive(Mem5[a0:word32], a1, 0<32>, a3, a4, a5, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_32, out a0_23, out a1_24, out a2_70, out a3_26, out a4_27, out a5_71, out s2_33, out s3_34, out s4_35)
	s1Out = s1_32
	a0Out = 0<32> - CONVERT(a0_23 != 0xFFFFFFFF<32>, bool, word32)
	a1Out = a1_24
	a3Out = a3_26
	a4Out = a4_27
	s2Out = s2_33
	s3Out = s3_34
	s4Out = s4_35
	return s0_31
sys_arch_mbox_tryfetch_exit:


word32 sys_mbox_valid(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_input
//      tcpip_try_callback
//      tcpip_send_msg_wait_sem
//      tcpip_api_call
//      netconn_new_with_proto_and_callback
//      netconn_accept
//      netconn_recv_data
//      netconn_recv_tcp_pbuf_flags
//      recv_udp
//      err_tcp
//      recv_raw
//      recv_tcp
//      netconn_free
//      netconn_drain
//      accept_function
//      lwip_netconn_do_listen
//      cmd_sntp_start
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
sys_mbox_valid_entry:
l2303A210:
	return CONVERT(Mem0[a0:word32] != 0<32>, bool, word32)
sys_mbox_valid_exit:


void sys_mbox_set_invalid(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_alloc
//      netconn_drain
//      accept_function
//      lwip_netconn_do_listen
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
sys_mbox_set_invalid_entry:
l2303A218:
	Mem4[a0:word32] = 0<32>
	return
sys_mbox_set_invalid_exit:


word32 sys_sem_new(word32 ra, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_select
//      tcpip_api_call
//      netconn_gethostbyname
//      netconn_alloc
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: a7 s0 s5 s6 sp t0 t1 t4 t5 t6
sys_sem_new_entry:
l2303A21E:
	word32 a0_21
	word32 a5_26
	word32 a2_23
	word32 a4_141
	word32 a3_139
	word32 a1_136
	word32 s1_150
	word32 s2_152
	word32 s3_155
	word32 s4_158
	Mem36[a0_21:word32] = xQueueGenericCreate(ra, 1<32>, 0<32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s1_150, out a0_21, out a1_136, out a2_23, out a3_139, out a4_141, out a5_26, out s2_152, out s3_155, out s4_158)
	branch a0_21 == 0<32> l2303A242
l2303A238:
	word32 s6_207
	word32 s8_208
	word32 a7_205
	word32 s5_206
	word32 s0_204
	xQueueGenericSend(a0_21, 0<32>, 0<32>, a4_141, a5_26, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s0_204, out s1_150, out a0_21, out a1_136, out a2_23, out a3_139, out a4_141, out a5_26, out a7_205, out s2_152, out s3_155, out s4_158, out s5_206, out s6_207, out s8_208)
l2303A242:
	word32 a0_102
	word32 a5_103
	word32 s0_67 = 0x4201FD98<32>
	branch a0_21 != 0<32> l2303A264
l2303A264:
	branch s1_150 != 0<32> l2303A26C
l2303A266:
	word32 a0_209
	word32 a2_210
	word32 a4_211
	word32 a5_212
	s0_67 = xQueueSemaphoreTake(a0_21, 1<32>, a2_23, a3_139, a4_141, a5_26, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_150, out a0_209, out a1_136, out a2_210, out a3_139, out a4_211, out a5_212, out s2_152, out s3_155, out s4_158)
l2303A26C:
	word32 a5_97 = CONVERT(Mem36[s0_67 + 244<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	a4_141 = CONVERT(Mem36[s0_67 + 246<i32>:uint16], uint16, word32)
	Mem99[s0_67 + 244<i32>:word16] = SLICE(a5_97 >>u 16<i32>, word16, 0)
	a0_102 = 0<32>
	a5_103 = a5_97 >>u 16<i32>
	branch a4_141 >=u a5_97 >>u 16<i32> l2303A25A
l2303A284:
	Mem100[s0_67 + 246<i32>:word16] = SLICE(a5_97 >>u 16<i32>, word16, 0)
l2303A24E:
	word32 a5_101 = CONVERT(Mem36[0x4201FE90<32>:uint16], uint16, word32)
	Mem104[0x4201FE90<32>:word16] = SLICE(a5_101 + 1<32>, word16, 0)
	a0_102 = 0xFFFFFFFF<32>
	a5_103 = a5_101 + 1<32>
l2303A25A:
	a0Out = a0_102
	a1Out = a1_136
	a2Out = dwArg10
	a3Out = a3_139
	a4Out = a4_141
	a5Out = a5_103
	s2Out = s2_152
	s3Out = s3_155
	s4Out = s4_158
	return s1_150
sys_sem_new_exit:


word32 sys_arch_sem_wait(word32 a1, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg44, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sys_mutex_lock
//      lwip_select
//      lwip_setsockopt
//      tcpip_send_msg_wait_sem
//      tcpip_api_call
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0044:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
sys_arch_sem_wait_entry:
l2303A28A:
	word32 s1_120
	word32 s0_119
	word32 s2_122
	word32 s3_124
	word32 a1_111
	word32 a5_66
	word32 a5_17
	word32 a0_16 = xTaskGetTickCount(out a5_17)
	word32 a2_18 = dwArg44
	branch a1 == 0<32> l2303A2C8
l2303A2C8:
	word32 s4_137
	s0_119 = xQueueSemaphoreTake(a0_16, 0xFFFFFFFF<32>, a2_18, a3, a4, a5_17, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_120, out a0_16, out a1_111, out a2_18, out a3, out a4, out a5_17, out s2_122, out s3_124, out s4_137)
	branch a0_16 != s2_122 l2303A2C8
l2303A2D4:
l2303A2A4:
	word32 a0_50
	word32 a2_138
	word32 a4_139
	word32 a5_140
	word32 s4_141
	s0_119 = xQueueSemaphoreTake(a0_16, a1, dwArg44, a3, a4, a5_17, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_120, out a0_50, out a1_111, out a2_138, out a3, out a4_139, out a5_140, out s2_122, out s3_124, out s4_141)
	a4 = 1<32>
	a5_66 = 0xFFFFFFFF<32>
	branch a0_50 != 1<32> l2303A2BA
l2303A2B2:
	word32 a5_142
	a5_66 = xTaskGetTickCount(out a5_142) - s0_119
l2303A2BA:
	s1Out = s1_120
	a0Out = a5_66
	a1Out = a1_111
	a3Out = a3
	a4Out = a4
	a5Out = a5_66
	s2Out = s2_122
	s3Out = s3_124
	s4Out = dwArg04
	return s0_119
sys_arch_sem_wait_exit:


word32 sys_sem_free(word32 a0, word32 a3, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_select
//      tcpip_api_call
//      netconn_new_with_proto_and_callback
//      netconn_gethostbyname
//      netconn_free
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a1 a2 a3 a4 a5 s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
sys_sem_free_entry:
l2303A2D6:
	word32 a4_6 = CONVERT(Mem0[0x4201FE8C<32>:uint16], uint16, word32)
	Mem8[0x4201FE8C<32>:word16] = SLICE(a4_6 + 0xFFFFFFFF<32>, word16, 0)
	word32 a0_10 = Mem8[a0:word32]
l2303A2EA_thunk_vQueueDelete:
	word32 a1_14
	word32 a2_15
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 s1_21
	word32 s4_22
	word32 a0_34
	word32 s0_20 = vQueueDelete(a0_10, a3, a4_6 + 0xFFFFFFFF<32>, mstatus, dwArg0158, dwArg0198, out s1_21, out a0_34, out a1_14, out a2_15, out a3_16, out a4_17, out a5_18, out s4_22)
	s1Out = s1_21
	a1Out = a1_14
	a2Out = a2_15
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_18
	s4Out = s4_22
	return s0_20
sys_sem_free_exit:


word32 sys_sem_valid(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_send_msg_wait_sem
//      netconn_new_with_proto_and_callback
//      err_tcp
//      lwip_netconn_do_delconn
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
sys_sem_valid_entry:
l2303A2EE:
	return CONVERT(Mem0[a0:word32] != 0<32>, bool, word32)
sys_sem_valid_exit:


void sys_sem_set_invalid(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_free
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
sys_sem_set_invalid_entry:
l2303A2F6:
	Mem4[a0:word32] = 0<32>
	return
sys_sem_set_invalid_exit:


void sys_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: sp
sys_init_entry:
l2303A2FC:
	Mem4[0x4200EED0<32>:word16] = 0<16>
	return
sys_init_exit:


void sys_mutex_new(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mem_init
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
sys_mutex_new_entry:
l2303A306:
	word32 a0_28
	word32 s6_97
	word32 s5_96
	word32 s4_95
	word32 s3_94
	word32 s2_93
	word32 a5_92
	word32 a4_91
	word32 a3_90
	word32 a1_89
	xQueueCreateMutex(ra, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out a0_28, out a1_89, out a3_90, out a4_91, out a5_92, out s2_93, out s3_94, out s4_95, out s5_96, out s6_97)
	Mem38[a0_28:word32] = a0
	branch a0_28 != 0<32> l2303A334
l2303A334:
	word32 a3_41 = CONVERT(Mem38[0x4201FE94<32>:uint16], uint16, word32)
	word32 a4_44 = CONVERT(Mem38[0x4201FE92<32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem46[0x4201FE92<32>:word16] = SLICE(a4_44 >>u 16<i32>, word16, 0)
	branch a3_41 >=u a4_44 >>u 16<i32> l2303A32C
l2303A34C:
	Mem47[0x4201FE94<32>:word16] = SLICE(a4_44 >>u 16<i32>, word16, 0)
l2303A320:
	Mem51[0x4201FE96<32>:word16] = SLICE(CONVERT(Mem38[0x4201FE96<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303A32C:
	return
sys_mutex_new_exit:


word32 sys_mutex_lock(word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg44, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mem_free
//      mem_trim
//      mem_malloc
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0044:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a1 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
sys_mutex_lock_entry:
l2303A352:
l2303A354_thunk_sys_arch_sem_wait:
	word32 a1_10
	word32 a4_13
	word32 s1_17
	word32 s2_18
	word32 s3_19
	word32 s4_20
	word32 a0_35
	word32 a3_36
	word32 a5_37
	word32 s0_16 = sys_arch_sem_wait(0<32>, a3, a4, s2, mstatus, dwArg04, dwArg44, dwArg84, dwArgF8, dwArg0138, out s1_17, out a0_35, out a1_10, out a3_36, out a4_13, out a5_37, out s2_18, out s3_19, out s4_20)
	s1Out = s1_17
	a1Out = a1_10
	a4Out = a4_13
	s2Out = s2_18
	s3Out = s3_19
	s4Out = s4_20
	return s0_16
sys_mutex_lock_exit:


word32 sys_mutex_unlock(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mem_free
//      mem_trim
//      mem_malloc
//      lwip_netconn_do_gethostbyname
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a1 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_mutex_unlock_entry:
l2303A358:
	word32 a0_5 = Mem0[a0:word32]
l2303A360_thunk_xQueueGenericSend:
	word32 a1_13
	word32 a3_15
	word32 a4_16
	word32 a5_17
	word32 a7_19
	word32 s0_20
	word32 s1_21
	word32 s2_22
	word32 s3_23
	word32 s4_24
	word32 s5_25
	word32 s6_26
	word32 s8_27
	word32 a0_53
	word32 a2_54
	xQueueGenericSend(a0_5, 0<32>, 0<32>, a4, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s0_20, out s1_21, out a0_53, out a1_13, out a2_54, out a3_15, out a4_16, out a5_17, out a7_19, out s2_22, out s3_23, out s4_24, out s5_25, out s6_26, out s8_27)
	s1Out = s1_21
	a1Out = a1_13
	a3Out = a3_15
	a4Out = a4_16
	a5Out = a5_17
	a7Out = a7_19
	s2Out = s2_22
	s3Out = s3_23
	s4Out = s4_24
	s5Out = s5_25
	s6Out = s6_26
	s8Out = s8_27
	return s0_20
sys_mutex_unlock_exit:


word32 sys_sem_signal(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt_callback
//      event_callback
//      lwip_netconn_do_dns_found
//      lwip_netconn_do_connected
//      err_tcp
//      lwip_netconn_do_newconn
//      lwip_netconn_do_delconn
//      lwip_netconn_do_bind
//      lwip_netconn_do_connect
//      lwip_netconn_do_disconnect
//      lwip_netconn_do_listen
//      lwip_netconn_do_send
//      lwip_netconn_do_recv
//      lwip_netconn_do_write
//      lwip_netconn_do_getaddr
//      lwip_netconn_do_close
//      lwip_netconn_do_join_leave_group
//      lwip_netconn_do_gethostbyname
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a1 a3 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_sem_signal_entry:
l2303A364:
l2303A364_thunk_sys_mutex_unlock:
	word32 a1_9
	word32 a3_11
	word32 s1_17
	word32 s2_18
	word32 s3_19
	word32 s4_20
	word32 s5_21
	word32 s6_22
	word32 s8_23
	word32 a4_46
	word32 a5_47
	word32 a7_48
	word32 s0_16 = sys_mutex_unlock(a0, a4, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_17, out a1_9, out a3_11, out a4_46, out a5_47, out a7_48, out s2_18, out s3_19, out s4_20, out s5_21, out s6_22, out s8_23)
	s1Out = s1_17
	a1Out = a1_9
	a3Out = a3_11
	s2Out = s2_18
	s3Out = s3_19
	s4Out = s4_20
	s5Out = s5_21
	s6Out = s6_22
	s8Out = s8_23
	return s0_16
sys_sem_signal_exit:


word32 sys_thread_new(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_init
// MayUse:  a2:[0..31] a3:[0..15] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a6 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
sys_thread_new_entry:
l2303A368:
	word32 a6_5 = CONVERT(Mem0[0x4200DED0<32>:uint16], uint16, word32)
	branch a6_5 <=u 5<32> l2303A382
l2303A382:
	word32 a5_126
	word32 a4_125
	word32 a3_124
	word32 a2_123
	branch xTaskCreate(ra, s1, CONVERT(SLICE(a3, word16, 0), word16, word32), a2, a4, fp + 0xFFFFFFEC<32>, s3, mstatus, dwLoc10, dwLoc0C, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out a2_123, out a3_124, out a4_125, out a5_126) != 1<32> l2303A37A
l2303A37A:
l2303A3A2:
l2303A37C:
	a6Out = a6_32
	return ra_44
l2303A376:
	a6Out = a6_5
	return ra
sys_thread_new_exit:


word32 sys_arch_protect(word32 a4, word32 mstatus, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      alloc_socket
//      lwip_link_select_cb
//      lwip_unlink_select_cb
//      lwip_selscan
//      free_socket
//      event_callback
//      lwip_accept
//      lwip_select
//      lwip_fcntl
//      mem_free
//      mem_trim
//      memp_malloc
//      memp_free
//      pbuf_free_ooseq_callback
//      pbuf_free
//      pbuf_alloc
//      pbuf_chain
//      netconn_err
//      err_tcp
// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a2 a4 a5
// Preserved: sp
sys_arch_protect_entry:
l2303A3A6:
	word32 a5_8
	word32 a4_9 = vTaskEnterCritical(a4, mstatus, out a5_8)
	a2Out = dwArg10
	a4Out = a4_9
	a5Out = a5_8
	return 1<32>
sys_arch_protect_exit:


word32 sys_arch_unprotect(word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      alloc_socket
//      lwip_link_select_cb
//      lwip_unlink_select_cb
//      lwip_selscan
//      free_socket
//      event_callback
//      lwip_accept
//      lwip_select
//      lwip_fcntl
//      mem_free
//      mem_trim
//      memp_malloc
//      memp_free
//      pbuf_free_ooseq_callback
//      pbuf_free
//      pbuf_alloc
//      pbuf_chain
//      netconn_err
//      err_tcp
// MayUse:  a3:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
sys_arch_unprotect_entry:
l2303A3B6:
l2303A3B6_thunk_vTaskExitCritical:
	word32 a5_5
	word32 a4_7
	word32 a3_6 = vTaskExitCritical(a3, mstatus, out a4_7, out a5_5)
	a4Out = a4_7
	a5Out = a5_5
	return a3_6
sys_arch_unprotect_exit:


word32 sys_now(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_cyclic_timer
//      sys_timeout
//      sys_check_timeouts
//      sys_timeouts_sleeptime
//      netconn_prepare_delete
//      netconn_write_vectors_partly
//      netconn_shutdown
//      lwip_netconn_do_write
//      lwip_netconn_do_close
//      ping_timeout
//      ping_recv
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
sys_now_entry:
l2303A3BA:
l2303A3BA_thunk_xTaskGetTickCount:
	word32 a5_4
	word32 a0_3 = xTaskGetTickCount(out a5_4)
	a5Out = a5_4
	return a0_3
sys_now_exit:


word32 lwip_gethostbyname(word32 ra, word32 s0, word32 a0, word32 a3, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_test_cmd
//      ota_tcp_cmd
//      ping_cmd
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_gethostbyname_entry:
l2303A3BE:
	word32 a5_111
	word32 a4_110
	word32 a0_106
	word32 a0_17
	word32 a4_22
	word32 s2_26
	word32 s3_27
	word32 s4_133
	word32 a1_132
	word32 a3_109
	word32 s1_114
	word32 s0_113 = netconn_gethostbyname(ra, s0, a0, fp + 0xFFFFFFEC<32>, a3, mstatus, dwArg78, dwArgB8, dwArgF8, dwArg0108, dwArg0138, dwArg0148, out s1_114, out a0_17, out a1_132, out a3_109, out a4_22, out s2_26, out s3_27, out s4_133)
	branch a0_17 == 0<32> l2303A3EC
l2303A3EC:
	Mem50[a4_22:word32] = 0x4200DED8<32>
	Mem51[0x4200DED8<32>:word32] = 0x4200DEDC<32>
	Mem52[0x4200DEE0<32>:word32] = 0<32>
	word32 a4_134
	word32 a5_135
	strncpy(0x4201490C<32>, s2_26, 256<i32>, out a3_109, out a4_134, out a5_135)
	Mem66[0x4200DED4<32>:word32] = 0<32>
	Mem67[0x4200DED8<32>:word32] = 0x420148F8<32>
	Mem69[0xA<32>:word32] = 0x420148F8<32>
	Mem71[0x42014A0C<32>:byte] = 0<8>
	Mem72[0x4201490C<32>:word32] = 0x420148F8<32>
	Mem73[0x10<32>:word32] = 0x420148F8<32>
	Mem74[0x4200DEEC<32>:word32] = 0x420148F8<32>
	s0_113 = 0x4200DEDC<32>
	s1_114 = 0x4201490C<32>
	a5_111 = 0x420148F8<32>
	a4_110 = 4<32>
	a0_106 = 0x420148F8<32>
l2303A3D2:
	Mem78[0x42020D54<32>:word32] = 210<i32>
	a5_111 = 0x42020000<32>
	a4_110 = 210<i32>
	a0_106 = 0<32>
l2303A3E0:
	s1Out = s1_114
	a0Out = a0_106
	a3Out = a3_109
	a4Out = a4_110
	a5Out = a5_111
	s2Out = s2_26
	s3Out = s3_27
	return s0_113
lwip_gethostbyname_exit:


word32 lwip_freeaddrinfo(word32 s0, word32 a0, word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_net_connect
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
lwip_freeaddrinfo_entry:
l2303A448:
	branch a0 != 0<32> l2303A44E
l2303A44E:
l2303A454:
	word32 a0_51
	word32 a2_52
	word32 a5_53
	word32 s1_22 = memp_free(0xC<32>, Mem9[s0 + 28<i32>:word32], a3, a4, mstatus, out a0_51, out a2_52, out a3, out a4, out a5_53)
	branch s0 != 0<32> l2303A454
l2303A460:
	return s1_22
l2303A44C:
	return s1
lwip_freeaddrinfo_exit:


word32 lwip_getaddrinfo(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg98, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0198, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_net_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a2 a3 a4 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
lwip_getaddrinfo_entry:
l2303A468:
	branch a3 != 0<32> l2303A472
l2303A472:
	word32 a5_190
	word32 s5_156
	word32 s3_115
	word32 a2_157
	Mem21[a3:word32] = 0<32>
	word32 s4_116 = a3
	word32 s1_113 = a2
	word32 s2_114 = a0
	branch a0 != 0<32> l2303A498
l2303A498:
	branch a2 == 0<32> l2303A4FE
l2303A4FE:
	branch a1 != 0<32> l2303A4AC
l2303A490:
	branch a1 != 0<32> l2303A4FA
l2303A4FA:
	branch a2 != 0<32> l2303A49A
l2303A49A:
	word32 s3_31 = Mem21[a2 + 4<i32>:int32]
	a5_190 = 204<i32>
	s3_115 = s3_31 & -3<i32>
	branch (s3_31 & -3<i32>) != 0<32> l2303A510
l2303A4AA:
	branch a1 == 0<32> l2303A526
l2303A526:
	branch a0 != 0<32> l2303A4CA
l2303A4FC:
l2303A4AC:
	word32 a5_642
	word32 a4_641
	word32 a3_640
	word32 a2_639
	word32 a0_38 = atoi(a1, out a1, out a2_639, out a3_640, out a4_641, out a5_642)
	a3 = a0_38 + -1<i32>
	a4 = 0xFFFFFFE<32>
	s3_115 = a0_38
	a5_190 = 201<i32>
	branch a0_38 >u 0xF0000001<32> l2303A510
l2303A4C4:
	branch a0 == 0<32> l2303A52A
l2303A52A:
	branch a2 == 0<32> l2303A4F0
l2303A52C:
	s1_113 = Mem21[a5_190:word32]
	branch (a5_190 & 1<32>) == 0<32> l2303A4F0
l2303A4F0:
l2303A532:
l2303A534:
	s5_156 = 0<32>
	a2_157 = 48<i32>
l2303A4C8:
	branch a2 == 0<32> l2303A502
l2303A4CA:
	s1_113 = Mem21[a5_190:word32]
	branch (a5_190 & 4<32>) == 0<32> l2303A502
l2303A502:
	word32 a0_105
	netconn_gethostbyname(ra, s0, a0, fp + -36<i32>, a3, mstatus, s1, dwArg98, dwArgD8, dwArgE8, dwArg0118, dwArg0128, out s1_113, out a0_105, out a1, out a3, out a4, out s2_114, out s3_115, out s4_116)
	branch a0_105 == 0<32> l2303A4DA
l2303A4D0:
	word32 a0_130
	word32 a5_643
	ip4addr_aton(a0, fp + -36<i32>, out a0_130, out a3, out a4, out a5_643, out s4_116)
	a1 = fp + -36<i32>
	branch a0_130 == 0<32> l2303A492
l2303A4DA:
	word32 a5_645
	word32 a2_644
	word32 a0_149 = strlen(s2_114, out a1, out a2_644, out a3, out a4, out a5_645)
	s5_156 = a0_149
	a2_157 = a0_149 + 49<i32>
	branch a0_149 <=u 256<i32> l2303A53C
l2303A53C:
	word32 a5_647
	word32 a0_182
	word32 a2_646
	word32 s1_187 = memp_malloc(s1_113, 0xC<32>, a3, a4, mstatus, out a0_182, out a2_646, out a3, out a4, out a5_647)
	word32 s0_189 = a0_182
	a5_190 = 203<i32>
	branch a0_182 == 0<32> l2303A510
l2303A54C:
	word32 a2_650
	word32 a0_649
	word32 t1_648
	word32 a5_204
	ra = memset(ra, a0_182, 0<32>, a2_157, out t1_648, out a0_649, out a1, out a2_650, out a3, out a4, out a5_204)
	Mem217[a5_204 + 36<i32>:word32] = a0_182
	Mem219[a0_182 + 32<i32>:word16] = 0x210<16>
	word32 a5_651
	Mem223[a0_182 + 34<i32>:word16] = SLICE(lwip_htons(CONVERT(SLICE(s3_115, word16, 0), word16, word32), out a5_651), word16, 0)
	Mem224[6<32>:word32] = a0_182
	branch s1_187 == 0<32> l2303A580
l2303A578:
	Mem226[0xA<32>:word32] = a0_182
	Mem228[0xE<32>:word32] = a0_182
l2303A580:
	branch s2_114 == 0<32> l2303A59A
l2303A584:
	Mem239[a0_182 + 72<i32>:word32] = a0_182
	word32 a7_654
	word32 a6_653
	word32 a2_652
	word32 a5_242
	memcpy(a0_182 + 48<i32>, s2_114, s5_156, out a1, out a2_652, out a3, out a4, out a5_242, out a6_653, out a7_654)
	s0_189 = Mem239[a5_242 + 24<i32>:word32]
	Mem256[s5_156 + a5_242:byte] = 0<8>
l2303A59A:
	Mem259[0x20<32>:word32] = s0_189
	Mem262[s0_189 + 20<i32>:word32] = a0_182 + 32<i32>
	Mem272[s4_116:word32] = s0_189
	a5_190 = 0<32>
l2303A4EE:
l2303A50C:
	a5_190 = 202<i32>
l2303A492:
	a5_190 = 200<i32>
l2303A510:
	0<32> = dwArg0198
	s0Out = dwArg0158
	a0Out = a5_190
	a1Out = a1
	a2Out = dwArg0138
	a3Out = a3
	a4Out = a4
	return ra
l2303A46A:
	s0Out = s0
	a0Out = 202<i32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	return ra
lwip_getaddrinfo_exit:


void netifapi_do_netif_add(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg78, word32 dwArgA4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +00A4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_do_netif_add_entry:
l2303A5AA:
	branch netif_add(ra, Mem5[Mem5[a1 + 12<i32>:word32] + 8<i32>:word32], a1, a2, a3, a5, Mem5[a0 + 32<i32>:int32], s4, s7, mstatus, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg48, dwArg58, dwArg64, dwArg78, dwArgA4, dwArgE8, dwArgF8, dwArg0118) == 0<32> l2303A5CC
l2303A5CC:
l2303A5C4:
l2303A5C6:
	return
netifapi_do_netif_add_exit:


void netifapi_do_netif_set_addr(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_do_netif_set_addr_entry:
l2303A5D0:
	word32 s0_71
	word32 s1_72
	word32 a1_73
	word32 a2_74
	word32 a3_75
	word32 a4_76
	word32 a5_77
	word32 s2_78
	word32 s3_79
	word32 s4_80
	word32 s5_81
	word32 s6_82
	word32 s7_83
	word32 mstatus_84
	netif_set_addr(ra, s1, Mem5[Mem5[a1 + 12<i32>:word32] + 8<i32>:word32], a1, a2, a3, a4, a5, s3, s4, s7, mstatus, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg1C, dwArg34, dwArg38, dwArg48, dwArg58, dwArg5C, dwArg64, dwArg68, dwArg78, dwArg88, dwArgA8, dwArg0118, dwArg0128, out s0_71, out s1_72, out a1_73, out a2_74, out a3_75, out a4_76, out a5_77, out s2_78, out s3_79, out s4_80, out s5_81, out s6_82, out s7_83, out mstatus_84)
	return
netifapi_do_netif_set_addr_exit:


void netifapi_do_netif_common(word32 ra, word32 a0, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 ra t1
// Preserved: sp
netifapi_do_netif_common_entry:
l2303A5E8:
	word32 t1_5 = Mem0[a0 + 16<i32>:int32]
	word32 a0_7 = Mem0[a0 + 8<i32>:word32]
	branch t1_5 == 0<32> l2303A5F6
l2303A5F6:
	call Mem10[a0 + 12<i32>:word32] (retsize: 0;)
		uses: a0:a0_7,ra:ra,Stack +0084:ra
	return
l2303A5F4:
	call t1_5 (retsize: 0;)
		uses: a0:a0_7,ra:ra,Stack +0010:dwArg10
	return
netifapi_do_netif_common_exit:


word32 netifapi_netif_add(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg88, word32 dwArg98, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_netif_add_entry:
l2303A606:
	branch a1 != 0<32> l2303A614
l2303A60C:
l2303A614:
	branch a2 != 0<32> l2303A61E
l2303A616:
l2303A61E:
	branch a3 != 0<32> l2303A628
l2303A620:
	a3 = 0x2308DE8C<32>
l2303A628:
	word32 s1_76
	word32 a5_140
	word32 s2_141
	word32 s3_142
	word32 a3_138
	word32 a4_139
	word32 s0_75 = tcpip_api_call(ra, s0, fp + -52<i32>, a3, a4, a5, s2, mstatus, a5, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, out s1_76, out a3_138, out a4_139, out a5_140, out s2_141, out s3_142)
	s1Out = s1_76
	return s0_75
netifapi_netif_add_exit:


word32 netifapi_netif_set_addr(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg88, word32 dwArg98, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & a4Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rx_sm_disconnect_ind
//      stateConnectedIPNoEnter
//      stateConnectedIPYes_exit
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_netif_set_addr_entry:
l2303A64A:
	branch a1 != 0<32> l2303A658
l2303A650:
l2303A658:
	branch a2 != 0<32> l2303A662
l2303A65A:
l2303A662:
	branch a3 != 0<32> l2303A66C
l2303A664:
	a3 = 0x2308DE8C<32>
l2303A66C:
	word32 a3_64
	word32 a4_65
	word32 s3_71
	word32 a5_134
	word32 s2_135
	word32 s1_133
	tcpip_api_call(ra, s0, fp + -52<i32>, a3, a4, a5, s2, mstatus, dwLoc2C, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, out s1_133, out a3_64, out a4_65, out a5_134, out s2_135, out s3_71)
	a4Out = a4_65
	s3Out = s3_71
	return a3_64
netifapi_netif_set_addr_exit:


word32 netifapi_netif_common(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg88, word32 dwArg98, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rx_sm_connect_ind
//      bl_rx_sm_disconnect_ind
//      stateConnectedIPNoEnter
//      stateGlobalGuard_AP
//      stateConnectedIPYes_exit
//      stateGlobalGuard_stop
//      wifi_netif_dhcp_start
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 a5 s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_netif_common_entry:
l2303A688:
	word32 a3_24
	word32 a4_25
	word32 a5_26
	word32 s2_30
	word32 s1_64
	word32 s3_65
	word32 s0_28 = tcpip_api_call(ra, s0, fp + -52<i32>, a3, a4, a5, s2, mstatus, dwLoc2C, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, out s1_64, out a3_24, out a4_25, out a5_26, out s2_30, out s3_65)
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_26
	s2Out = s2_30
	return s0_28
netifapi_netif_common_exit:


word32 alloc_socket(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_accept
//      lwip_socket
// MayUse:  a0:[0..31] a1:[0..15] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s3 s5
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
alloc_socket_entry:
l2303A6A6:
	word32 s2_123 = 0x42014B0C<32>
	word32 s4_23 = a1
	word32 s1_24 = 0<32>
	word32 s5_127 = 0x15<32>
l2303A6CA:
	word32 a2_138
	word32 a5_140
	word32 a4_139
	sys_arch_protect(a4, mstatus, out a2_138, out a4_139, out a5_140)
	branch Mem19[s2_123:int32] != 0<32> l2303A71A
l2303A71A:
	s1_24 = s1_24 + 1<32>
	word32 a5_135
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5_135)
	s2_123 = s2_123 + 0x10<32>
	branch s1_24 != 0x15<32> l2303A6CA
l2303A726:
	s1_24 = 0xFFFFFFFF<32>
l2303A6D4:
	s5_127 = s1_24 << 4<u32>
	Mem49[s5_127 + 0x42014B0C<32>:word32] = a0
	word32 a5_137
	word32 a4_136
	a3 = sys_arch_unprotect(a3, mstatus, out a4_136, out a5_137)
	Mem53[s5_127 + 0x42014B10<32>:word32] = 0<32>
	Mem54[s5_127 + 0x42014B14<32>:word16] = 0<16>
	s2_123 = s5_127 + 0x42014B0C<32>
	a4 = 0x10<32>
	branch (CONVERT(Mem54[a0:byte], byte, word32) & 240<i32>) == 0x10<32> l2303A6FC
l2303A6FA:
	s4_23 = 1<32>
l2303A6FC:
	Mem64[s5_127 + 0x42014B16<32>:word16] = SLICE(s4_23, word16, 0)
	Mem65[s5_127 + 0x42014B18<32>:word16] = 0<16>
l2303A706:
	s1Out = s1_24
	a0Out = s1_24
	a3Out = a3
	a4Out = a4
	s2Out = s2_123
	s3Out = a0
	s5Out = s5_127
	return s1
alloc_socket_exit:


word32 lwip_link_select_cb(word32 a0, word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_select
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a3
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
lwip_link_select_cb_entry:
l2303A72A:
	word32 a5_47
	word32 a2_45
	word32 a4_46
	sys_arch_protect(a4, mstatus, out a2_45, out a4_46, out a5_47)
	word32 a4_17 = Mem7[0x4200DEE8<32>:int32]
	Mem19[a4_17:word32] = a0
	branch a4_17 == 0<32> l2303A748
l2303A746:
	Mem20[a0 + 4<i32>:word32] = a4_17
l2303A748:
	Mem23[a0:word32] = 0x4200DEE8<32>
	Mem28[a4_17 + 1<32>:word32] = Mem23[a4_17:word32]
l2303A75E_thunk_sys_arch_unprotect:
	word32 a4_48
	word32 a5_49
	return sys_arch_unprotect(a3, mstatus, out a4_48, out a5_49)
lwip_link_select_cb_exit:


word32 lwip_unlink_select_cb(word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_select
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a3
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
lwip_unlink_select_cb_entry:
l2303A762:
	word32 a4_14
	word32 a5_15
	word32 a2_54
	sys_arch_protect(a4, mstatus, out a2_54, out a4_14, out a5_15)
	branch a5_15 == 0<32> l2303A776
l2303A772:
	Mem18[a4_14 + 4<i32>:word32] = a5_15
l2303A776:
	word32 a5_23 = Mem22[a3:word32]
	branch a3 != Mem22[a4_14:word32] l2303A7A0
l2303A7A0:
l2303A786:
	Mem29[a4_14:word32] = a5_23
	Mem33[a4_14 + 1<32>:word32] = Mem29[a4_14:word32]
l2303A79C_thunk_sys_arch_unprotect:
	word32 a4_55
	word32 a5_56
	return sys_arch_unprotect(a3, mstatus, out a4_55, out a5_56)
lwip_unlink_select_cb_exit:


word32 lwip_selscan(word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 a6, word32 mstatus, word32 dwArg74, word32 dwArg0184, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_select
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] Stack +0074:[0..31] Stack +0184:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s5 sp
lwip_selscan_entry:
l2303A7A4:
	word32 s8_168 = a4
	word32 a5_44 = 0<32>
l2303A7D2:
	Mem50[fp + -88<i32> + a5_44:byte] = 0<8>
	a5_44 = a5_44 + 1<32>
	branch a5_44 != 8<32> l2303A7D2
l2303A7E0:
	word32 a5_53 = 0<32>
l2303A7E4:
	Mem59[fp + -80<i32> + a5_53:byte] = 0<8>
	a5_53 = a5_53 + 1<32>
	branch a5_53 != 8<32> l2303A7E4
l2303A7F2:
	word32 a5_107 = 0<32>
	word32 a4_115 = 8<32>
l2303A7F6:
	word32 a3_129 = fp + -72<i32> + a5_107
	Mem68[a3_129:byte] = 0<8>
	a5_107 = a5_107 + 1<32>
	branch a5_107 != 8<32> l2303A7F6
l2303A804:
	word32 s2_137 = 0x42014B0C<32>
	word32 s0_165 = 0<32>
l2303A814:
	word32 a2_120
	branch s0_165 < a0 l2303A83E
l2303A83E:
	branch a1 == 0<32> l2303A854
l2303A842:
	a4_115 = Mem83[(s0_165 >>u 5<u32> << 2<i32>) + a1:word32]
	a5_107 = 1<32> << s0_165 & a4_115
	branch a5_107 != 0<32> l2303A882
l2303A854:
	branch a2 == 0<32> l2303A86A
l2303A858:
	a4_115 = Mem83[(s0_165 >>u 5<u32> << 2<i32>) + a2:word32]
	a5_107 = 1<32> << s0_165 & a4_115
	branch a5_107 != 0<32> l2303A882
l2303A86A:
	branch a3 == 0<32> l2303A902
l2303A86E:
	a5_107 = Mem83[(s0_165 >>u 5<u32> << 2<i32>) + a3:int32]
	branch (1<32> << s0_165 & a5_107) == 0<32> l2303A902
l2303A882:
	word32 a4_632
	word32 a5_633
	sys_arch_protect(a4_115, mstatus, out a2_120, out a4_632, out a5_633)
	branch s0_165 >u 0x14<32> l2303A908
l2303A908:
	sys_arch_unprotect(a3_129, mstatus, out a4_115, out a5_107)
l2303A88A:
	word32 a1_141 = CONVERT(Mem83[s2_137 + 10<i32>:uint16], uint16, word32)
	word32 a2_142 = CONVERT(Mem83[s2_137 + 12<i32>:uint16], uint16, word32)
	word32 a6_143 = Mem83[s2_137 + 4<i32>:int32]
	a3_129 = sys_arch_unprotect(a3_129, mstatus, out a4_115, out a5_107)
	0<32> = a6_143
	branch a1 == 0<32> l2303A8CE
l2303A8AE:
	a3_129 = 1<32> << s0_165
	a4_115 = Mem152[a1:int32] & a3_129
	branch a4_115 == 0<32> l2303A8CE
l2303A8BA:
	a2_142 = dwLoc68
	s0_165 = dwArg74
	branch a6_143 != 0<32> l2303A8C6
l2303A8C2:
	branch a5_107 <= 0<32> l2303A8CE
l2303A8C6:
	a5_107 = a5_107 | a3_129
	s8_168 = dwArg74
	dwLoc64 = a5_107
l2303A8CE:
	branch a2 == 0<32> l2303A8E8
l2303A8D2:
	a3_129 = 1<32> << s0_165
	a4_115 = Mem183[a2:int32] & a3_129
	branch a4_115 == 0<32> l2303A8E8
l2303A8DE:
	branch a1_141 == 0<32> l2303A8E8
l2303A8E0:
	0<32> = dwArg0184
	a5_107 = a5_107 | a3_129
l2303A8E8:
	branch a3 == 0<32> l2303A902
l2303A8EC:
	a3_129 = 1<32> << s0_165
	a4_115 = Mem203[a3:int32] & a3_129
	branch a4_115 == 0<32> l2303A902
l2303A8F8:
	branch a2_142 == 0<32> l2303A902
l2303A8FA:
	s0_165 = dwArg0184
	a5_107 = a5_107 | a3_129
l2303A902:
	s0_165 = s0_165 + 1<32>
	s2_137 = s2_137 + 0x10<32>
l2303A818:
	Mem231[dwArg74:word32] = a5_107
	Mem233[dwArg74 + 4<i32>:word32] = a5_107
	0<32> = dwArg0184
	Mem245[a5:word32] = a5_107
	Mem247[a5 + 4<i32>:word32] = a5_107
	Mem260[a6:word32] = a5_107
	Mem262[a6 + 4<i32>:word32] = a5_107
	s8_168 = dwArg74
	s0_165 = dwArg0184
	a2_120 = dwArg0184
l2303A90E:
	s0Out = s0_165
	s1Out = dwLoc64
	a0Out = dwArgA4
	a2Out = a2_120
	a3Out = dwArg78
	a4Out = a4_115
	a5Out = a5_107
	s2Out = s2_137
	s3Out = 1<32>
	s4Out = a6
	s7Out = 0x14<32>
	s8Out = s8_168
	return dwLoc24
lwip_selscan_exit:


word32 lwip_recv_tcp(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0198, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0198:[0..31]
// LiveOut: a4 mstatus ra s1 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_recv_tcp_entry:
l2303A92E:
	word32 s3_124 = a0
	word32 s5_102 = a1
	word32 s1_117 = a2
	branch a2 >= 0<32> l2303A956
l2303A94E:
	s1_117 = 0x7FFFFFFF<32>
l2303A956:
	word32 a2_199 = 8<32>
	branch (a3 & 8<i32>) == 0<32> l2303A960
l2303A95E:
	a2_199 = 0xC<32>
l2303A960:
	word32 s0_105 = 0<32>
	word32 s6_131 = a3 & 1<i32>
l2303A966:
	word32 a4_121
	branch Mem40[s3_124 + 4<i32>:int32] == 0<32> l2303A9C8
l2303A9C8:
	word32 a5_51
	word32 s4_63
	ra = netconn_recv_tcp_pbuf_flags(ra, Mem40[s3_124:int32], fp + -52<i32>, a2_199, a3, mstatus, dwArg18, dwArg24, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg98, dwArgA8, out s0_105, out s1_117, out a0, out a2_199, out a4_121, out a5_51, out s3_124, out s4_63, out s5_102, out s6_131, out mstatus)
	branch a0 == 0<32> l2303AA14
l2303AA14:
	Mem76[s3_124 + 4<i32>:word32] = a5_51
l2303A9D6:
	branch s0_105 == 0<32> l2303A9F8
l2303A9F8:
	word32 a5_557
	word32 a0_77 = err_to_errno(a0, out a4_121, out a5_557)
	branch a0_77 == 0<32> l2303AA06
l2303A9FE:
	Mem81[0x42020D50<32>:word32] = a0_77
l2303AA06:
l2303A9D8:
	branch (s4_63 & 1<i32>) == 0<32> l2303A9BC
l2303A96C:
l2303A96E:
	word32 s2_93 = CONVERT(Mem89[a0 + 8<i32>:uint16], uint16, word32)
	branch s2_93 < s1_117 l2303A980
l2303A978:
	s2_93 = CONVERT(SLICE(s1_117, word16, 0), word16, word32)
l2303A980:
	word32 a0_110
	word32 s4_114
	word32 s2_118
	word32 a3_120
	word32 a2_554
	word32 a1_553
	word32 s8_556
	word32 a5_555
	pbuf_copy_partial(a0, s5_102 + s0_105, s2_93, 0<32>, out s1_117, out a0_110, out a1_553, out a2_554, out a3_120, out a4_121, out a5_555, out s2_118, out s3_124, out s4_114, out s8_556)
	word32 s7_108 = s2_93 + s0_105
	branch s6_131 != 0<32> l2303AA26
l2303AA26:
	branch s7_108 != 0<32> l2303A9E0
l2303A994:
	word32 s2_154
	word32 s1_153
	branch CONVERT(Mem89[a0_110 + 8<i32>:uint16], uint16, word32) - s2_118 <= 0<32> l2303AA1C
l2303AA1C:
	Mem139[s3_124 + 4<i32>:word32] = 0<32>
	word32 a7_562
	word32 s4_563
	word32 a1_559
	word32 s0_558
	word32 a2_560
	word32 a5_561
	word32 s8_564
	ra = pbuf_free(ra, a0_110, a3_120, a4_121, s4_114, mstatus, dwArgE8, out s0_558, out s1_153, out a0, out a1_559, out a2_560, out a3, out a4_121, out a5_561, out a7_562, out s2_154, out s3_124, out s4_563, out s5_102, out s6_131, out s8_564, out mstatus)
l2303A9A2:
	word32 s8_567
	word32 s0_565
	word32 s4_566
	ra = pbuf_free_header(ra, s1_117, a0_110, s2_118, dwArg04, a3_120, a4_121, s4_114, mstatus, dwArg04, dwArgC8, out s0_565, out s1_153, out a0, out a3, out a4_121, out s2_154, out s3_124, out s4_566, out s5_102, out s6_131, out s8_567, out mstatus)
	Mem195[s3_124 + 4<i32>:word32] = a0
l2303A9AC:
	s1_117 = s1_153 - s2_154
	a2_199 = 0x1C<32>
	s0_105 = s7_108
	branch s1_117 > 0<32> l2303A966
l2303A9B8:
	branch s7_108 == 0<32> l2303AA2C
l2303AA2C:
l2303A9BC:
	s1_117 = netconn_tcp_recvd(Mem205[s3_124:int32], a2_199, mstatus, dwArg38, dwArg78, dwArgB8, out a4_121, out s3_124)
l2303A9E0:
	0<32> = dwArg0198
	s1Out = s1_117
	a4Out = a4_121
	s3Out = s3_124
	s4Out = dwArgF4
	mstatusOut = mstatus
	return ra
lwip_recv_tcp_exit:


word32 lwip_sock_make_addr.isra.3(word32 ra, word32 a1, word32 a2, word32 dwArg74, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recvfrom_udp_raw.isra.6
//      lwip_read
// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31] Stack +0074:[0..31]
// LiveOut: a0 a3 a4 a5 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_sock_make_addr.isra.3_entry:
l2303AA30:
	word32 a5_90
	lwip_htons(a1, out a5_90)
	word32 a4_32
	word32 t1_91
	word32 a0_92
	word32 a1_93
	word32 a2_94
	word32 a3_95
	word32 a5_96
	word32 ra_34 = memset(ra, fp + -24<i32>, 0<32>, 8<32>, out t1_91, out a0_92, out a1_93, out a2_94, out a3_95, out a4_32, out a5_96)
	word32 s0_39 = 1<32>
	word32 a3_40 = Mem27[a4_32:word32]
	branch a4_32 <u 0x10<32> l2303AA74
l2303AA6C:
	s0_39 = 0<32>
	branch a4_32 <=u 0x10<32> l2303AA74
l2303AA72:
	Mem42[0x10<32>:word32] = a3_40
l2303AA74:
	word32 a4_50
	word32 a5_51
	word32 a3_55
	word32 a1_97
	word32 a2_98
	word32 a6_99
	word32 a7_100
	memcpy(a2, fp + -32<i32>, dwArg74, out a1_97, out a2_98, out a3_55, out a4_50, out a5_51, out a6_99, out a7_100)
	s1Out = a2
	a0Out = s0_39
	a3Out = a3_55
	a4Out = a4_50
	a5Out = a5_51
	return ra_34
lwip_sock_make_addr.isra.3_exit:


word32 free_socket(word32 ra, word32 s1, word32 a1, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArgE8, word32 dwArg0108, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_accept
//      lwip_close
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a3 a4 a5 s1 s2 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3 tp
// Preserved: a1 a7 mstatus ra s3 s5 s6 sp t0 t1 t4 t5 t6
free_socket_entry:
l2303AA8A:
	word32 a5_163
	word32 a4_162
	word32 a2_161
	sys_arch_protect(a4, mstatus, out a2_161, out a4_162, out a5_163)
	word32 s0_22 = Mem15[s1 + 4<i32>:word32]
	word32 s2_23 = Mem15[s0_22:int32]
	Mem24[s0_22 + 4<i32>:word32] = 0<32>
	Mem25[s0_22:word32] = 0<32>
	word32 a4_28
	word32 a5_29
	word32 a3_27 = sys_arch_unprotect(a3, mstatus, out a4_28, out a5_29)
	branch s1 == 0<32> l2303AABA
l2303AAB0:
	branch a1 == 0<32> l2303AACE
l2303AACE:
	word32 a3_36
	word32 a4_37
	word32 a5_38
	s1 = netbuf_delete(ra, s1, a3_27, a4_28, s4, mstatus, dwArgE8, out a3_36, out a4_37, out a5_38)
l2303AAB6:
	word32 a3_47
	word32 a4_48
	word32 a5_49
	word32 s6_172
	word32 s5_171
	word32 s4_170
	word32 s3_169
	word32 a7_168
	word32 a2_167
	word32 a1_166
	word32 a0_165
	word32 s0_164
	word32 s8_173
	word32 mstatus_174
	pbuf_free(ra, s1, a3_27, a4_28, s4, mstatus, dwArg0108, out s0_164, out s1, out a0_165, out a1_166, out a2_167, out a3_47, out a4_48, out a5_49, out a7_168, out s2_23, out s3_169, out s4_170, out s5_171, out s6_172, out s8_173, out mstatus_174)
l2303AABA:
	branch s2_23 == 0<32> l2303AAD4
l2303AAD4:
	a3Out = <invalid>
	a4Out = <invalid>
	a5Out = <invalid>
	s2Out = <invalid>
	s4Out = <invalid>
	return s1
l2303AABE:
l2303AACA_thunk_netconn_delete:
	word32 s1_82 = netconn_delete(s2_23)
	a3Out = <invalid>
	a4Out = <invalid>
	a5Out = <invalid>
	s2Out = <invalid>
	s4Out = <invalid>
	return s1_82
free_socket_exit:


word32 lwip_recvfrom_udp_raw.isra.6(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg34, word32 dwArg68, word32 dwArg74, word32 dwArg88, word32 dwArgA4, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0198, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_read
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0034:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_recvfrom_udp_raw.isra.6_entry:
l2303AAE0:
	word32 a0_109
	a0_109 = a0
	branch a5 != 0<32> l2303AB02
l2303AAFA:
	a0_109 = 0xFFFFFFF0<32>
	branch a5 > 0<32> l2303AB7E
l2303AB02:
	word32 a3_123
	a5 = Mem21[a0 + 4<i32>:int32]
	word32 a2_36 = CONVERT((a1 & 8<i32>) != 0<32>, bool, word32)
	s2 = a1
	a3_123 = a3
	branch a5 != 0<32> l2303AB2C
l2303AB1A:
	ra = netconn_recv_udp_raw_netbuf_flags(ra, Mem38[a0:int32], fp + -52<i32>, a2_36 << 2<i32>, a3, mstatus, s4, dwLoc0C, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgC8, dwArgE8, out s1, out a0_109, out a1, out a3_123, out a4, out a5, out s2, out mstatus)
	branch a0_109 != 0<32> l2303AB7E
l2303AB26:
	Mem73[a0 + 4<i32>:word32] = a5
l2303AB2C:
	a5 = Mem75[a5:word32]
	word32 a2_114 = dwArgA4
	word32 s4_134 = 0<32>
	s1 = 0<32>
	word32 s6_81 = CONVERT(Mem75[a5 + 8<i32>:uint16], uint16, word32)
l2303AB38:
	branch s4_134 >= a5 l2303AB42
l2303AB3E:
	branch s1 <u s6_81 l2303AB94
l2303AB94:
	word32 s3_106 = CONVERT(SLICE(s6_81 - s1, word16, 0), word16, word32)
	branch s3_106 <u a4 l2303ABB4
l2303ABAC:
	s3_106 = CONVERT(SLICE(a4, word16, 0), word16, word32)
l2303ABB4:
	word32 s8_485
	word32 s4_117
	word32 s1_120
	word32 s3_484
	pbuf_copy_partial(a0_109, a1, s3_106, s1, out s1_120, out a0_109, out a1, out a2_114, out a3_123, out a4, out a5, out s2, out s3_484, out s4_117, out s8_485)
	s1 = s1_120 >>u 16<i32>
	s4_134 = s4_117 + 1<32>
l2303AB42:
	branch a2_114 == 0<32> l2303AB5A
l2303AB46:
	branch a5 == 0<32> l2303AB5A
l2303AB4A:
	ra = lwip_sock_make_addr.isra.3(ra, CONVERT(Mem75[a0_109 + 12<i32>:uint16], uint16, word32), dwArg04, dwArg34, out s1, out a0_109, out a3_123, out a4, out a5)
l2303AB5A:
	word32 s0_171 = Mem75[a5 + 16<i32>:word32]
	Mem172[s0_171 + 24<i32>:word32] = 0<32>
	branch a5 == 0<32> l2303AB66
l2303AB62:
	Mem173[s0_171 + 20<i32>:word32] = 0<32>
l2303AB66:
	s2 = s2 & 1<i32>
	branch s2 != 0<32> l2303AB78
l2303AB6E:
	Mem190[a0 + 4<i32>:word32] = 0<32>
	word32 a4_487
	word32 a3_486
	s1 = netbuf_delete(ra, a0_109, a3_123, a4, s4_134, mstatus, dwArgC8, out a3_486, out a4_487, out a5)
l2303AB78:
	Mem231[a3:word16] = SLICE(s6_81, word16, 0)
	a0_109 = 0<32>
l2303AB7E:
	0<32> = dwArg0198
	a0Out = a0_109
	a5Out = a5
	s2Out = s2
	return s1
lwip_recvfrom_udp_raw.isra.6_exit:


word32 get_socket(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_callback
//      lwip_accept
//      lwip_bind
//      lwip_close
//      lwip_connect
//      lwip_listen
//      lwip_read
//      lwip_sendto
//      lwip_write
//      lwip_shutdown
//      lwip_setsockopt
//      lwip_fcntl
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
get_socket_entry:
l2303ABCC:
	word32 a5_10
	word32 a0_13
	branch a0 >u 0x14<32> l2303ABE4
l2303ABD2:
	a5_10 = a0 << 4<u32>
	a0_13 = Mem0[a0 << 4<u32>:word32]
	branch a0 << 4<u32> != 0<32> l2303ABF0
l2303ABE4:
	Mem12[0x42020D50<32>:word32] = 9<32>
	a5_10 = 0x42020000<32>
	a4 = 9<32>
	a0_13 = 0<32>
l2303ABF0:
	a4Out = a4
	a5Out = a5_10
	return a0_13
get_socket_exit:


void lwip_setsockopt_callback(word32 ra, word32 s0, word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, word32 dwArg58, word32 dwArg74, word32 dwArgE4, word32 dwArgE8, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
lwip_setsockopt_callback_entry:
l2303ABF2:
	word32 s0_116
	word32 s3_17 = Mem15[a0:int32]
	word32 s1_23 = Mem15[a4 + 16<i32>:word32]
	word32 a0_100 = Mem15[Mem15[a5 + 8<i32>:word32] + 12<i32>:word32]
	branch s3_17 >u 0x14<32> l2303AFD0
l2303AC14:
	word32 a2_29 = Mem15[(s3_17 << 4<u32>) + 0x42014B0C<32>:word32]
	branch a2_29 == 0<32> l2303AFD0
l2303AFD0:
	s0_116 = 9<32>
l2303AC2C:
	branch s0 == 6<32> l2303AF4A
l2303AF4A:
	s0_116 = 0x16<32>
	branch a4 <=u 3<32> l2303AC7E
l2303AF52:
	word32 a2_35 = Mem15[a4 + 4<i32>:word32]
	branch a4 == 0<32> l2303AC7E
l2303AF58:
	s0_116 = 92<i32>
	branch (CONVERT(Mem15[a2_35:byte], byte, word32) & 240<i32>) != 0x10<32> l2303AC7E
l2303AF6A:
	s0_116 = 0x16<32>
	branch CONVERT(Mem15[a4 + 20<i32>:byte], byte, word32) == 1<32> l2303AC7E
l2303AF76:
	a5 = a5 + 0xFFFFFFFF<32>
	s0_116 = 92<i32>
	branch a5 >u 0xFFFFFFFB<32> l2303AC7E
l2303AF82:
	word32 a5_50 = Mem15[(a5 + 0xFFFFFFFF<32> << 2<i32>) + 0x2308613C<32>:word32]
	word32 t2_255
	call a5_50 (retsize: 0;)
		uses: a0:Mem15[92<i32>:word32],a3:0x2308613C<32>,a4:a4,a5:a5_50,mstatus:mstatus,ra:ra,s0:92<i32>,s1:s1_23,s2:0x42014B0C<32>,s3:s3_17,s4:s3_17 << 4<u32>,Stack +0008:dwLoc28,Stack +0024:dwLoc0C,Stack +0068:dwArg38,Stack +0088:dwArg58,Stack +00A4:dwArg74,Stack +0114:dwArgE4,Stack +0118:dwArgE8,Stack +0130:dwArg0100,Stack +0134:dwArg0104,Stack +0158:dwArg0128,Stack +0198:dwArg0168,t2:t2_255
		defs: t2:t2_255
	return
l2303AC32:
	branch s0 == 0xFFFFFF<32> l2303AC46
l2303AC46:
	branch a5 == 0x1000005<32> l2303AD0A
l2303AD0A:
	a5 = 0xF<32>
	s0_116 = 0x16<32>
	branch a4 <=u 0xF<32> l2303AC7E
l2303AD12:
	a0_100 = Mem15[0xF<32>:word32]
	a4 = a4 ^ 1000<i32>
	a5 = (a4 ^ 1000<i32>) + 0x3F7<32>
	branch a5 < 0<32> l2303AC7E
l2303AD28:
	Mem80[a5 + 28<i32>:word32] = a2_29
l2303AC4E:
	branch a5 > 0x1000005<32> l2303AC96
l2303AC96:
	branch a5 == 0x100000A<32> l2303AD2C
l2303AD2C:
	a5 = 3<32>
	s0_116 = 0x16<32>
	branch a4 <=u 3<32> l2303AC7E
l2303AD34:
	word32 a2_84 = Mem15[a4 + 4<i32>:word32]
	branch a4 == 0<32> l2303AC7E
l2303AD38:
	word32 a5_85 = CONVERT(Mem15[a2_84:byte], byte, word32)
	s0_116 = 92<i32>
	a5 = a5_85 & 240<i32>
	branch (a5_85 & 240<i32>) != 32<i32> l2303AC7E
l2303AD4C:
	a0_100 = Mem15[92<i32>:word32]
	word32 a5_90 = CONVERT(Mem15[a4 + 16<i32>:byte], byte, word32)
	branch false l2303AD5E
l2303AD5E:
	Mem92[a4 + 16<i32>:byte] = SLICE(a5_90 & 0xFFFFFFFE<32>, byte, 0)
	a5 = a5_90 & 0xFFFFFFFE<32>
l2303AD54:
	Mem94[a4 + 16<i32>:byte] = SLICE(a5_90 | 1<i32>, byte, 0)
	a5 = a5_90 | 1<i32>
l2303AC9E:
	branch a5 == 0x100000B<32> l2303AD66
l2303AD66:
	a5 = 5<32>
	s0_116 = 0x16<32>
	branch a4 <=u 5<32> l2303AC7E
l2303AD6E:
	word32 a1_115 = 0<32>
	branch CONVERT(Mem15[a0_100:byte], byte, word32) == 0<32> l2303AD82
l2303AD76:
	a0_100 = netif_find(a0_100, out a4, out a5)
	a1_115 = a0_100
	s0_116 = 0x13<32>
	branch a0_100 == 0<32> l2303AC7E
l2303AD82:
	word32 a5_121 = CONVERT(Mem15[a4:byte], byte, word32)
	a5 = a5_121 & 240<i32>
	branch (a5_121 & 240<i32>) == 32<i32> l2303ADB0
l2303ADB0:
	a4 = Mem15[a0_100 + 4<i32>:word32]
	a5 = udp_bind_netif(a0_100, a1_115)
l2303AD98:
	branch (a5_121 & 240<i32>) == 64<i32> l2303ADB8
l2303ADB8:
	a4 = Mem15[a0_100 + 4<i32>:word32]
	a5 = raw_bind_netif(a0_100, a1_115)
l2303ADA0:
	s0_116 = 0<32>
	branch (a5_121 & 240<i32>) != 0x10<32> l2303AC7E
l2303ADA8:
	a4 = Mem15[a0_100 + 4<i32>:word32]
	a5 = tcp_bind_netif(a0_100, a1_115)
l2303ACA6:
	branch a5 != 0x1000006<32> l2303AC40
l2303ACAC:
	a5 = 0xF<32>
	s0_116 = 0x16<32>
	branch a4 <=u 0xF<32> l2303AC7E
l2303ACB4:
	a0_100 = Mem15[0xF<32>:word32]
	a4 = a4 ^ 1000<i32>
	a5 = (a4 ^ 1000<i32>) + 0x3F7<32>
	branch a5 < 0<32> l2303AC7E
l2303ACCA:
	Mem143[a5 + 32<i32>:word32] = a2_29
l2303AC52:
	branch a5 == 8<32> l2303AC66
l2303AC58:
	branch a5 == 32<i32> l2303AC66
l2303AC60:
	branch a5 != 4<32> l2303AC40
l2303AC66:
	branch a5 != 32<i32> l2303ACCE
l2303ACCE:
	branch a5 == 4<32> l2303ACDC
l2303ACD4:
	branch a5 == 8<32> l2303ACDC
l2303ACDA:
	a5 = 0<32>
l2303AC6E:
	s0_116 = 92<i32>
	branch (CONVERT(Mem15[a2_29:byte], byte, word32) & 240<i32>) == a5 l2303ACDC
l2303ACDC:
	s0_116 = 0x16<32>
	branch a4 <=u 3<32> l2303AC7E
l2303ACE4:
	branch false l2303AC7E
l2303ACE8:
	word32 a5_165 = a5 << 24<i32>
	a0_100 = Mem15[0x16<32>:word32]
	word32 a4_166 = CONVERT(Mem15[0xC<32>:int8], int8, int32)
	a5 = a5_165 >> 24<i32>
	branch false l2303ACFE
l2303ACFE:
	a5 = ~(a5_165 >> 24<i32>)
	a4 = a4_166 & a5
	Mem170[0xC<32>:byte] = SLICE(a4, byte, 0)
l2303ACF4:
	a4 = a4_166 | a5_165 >> 24<i32>
	Mem172[0xC<32>:byte] = SLICE(a4, byte, 0)
l2303ACFA:
	s0_116 = 0<32>
l2303AC3C:
	branch s0 == 0<32> l2303ADC0
l2303ADC0:
	branch a5 >u 0xFFFFFFF9<32> l2303AC40
l2303ADC8:
l2303AC40:
	s0_116 = 92<i32>
l2303AC7E:
	Mem193[s0_116 + 20<i32>:word32] = Mem187[a0_100 + 24<i32>:word32]
	word32 s1_393
	word32 a1_394
	word32 a3_395
	word32 s5_399
	word32 s3_397
	word32 s4_398
	word32 s6_400
	word32 s8_401
	word32 s2_396
	sys_sem_signal(a0_100, a4, a5, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_393, out a1_394, out a3_395, out s2_396, out s3_397, out s4_398, out s5_399, out s6_400, out s8_401)
	0<32> = dwArg0128
	return
lwip_setsockopt_callback_exit:


void event_callback(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArgC8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5 a6 ra s0 s1 s2 s4 s8 t0 t3 tp
// Preserved: a1 a7 s10 s11 s3 s5 s6 s7 s9 sp t1 t4 t5 t6
event_callback_entry:
l2303AFD8:
	branch a0 == 0<32> l2303B1AC
l2303B1AC:
	return
l2303AFDC:
	branch s1 >= 0<32> l2303B03C
l2303B002:
	word32 a4_802
	word32 a5_803
	word32 a2_801
	sys_arch_protect(a4, mstatus, out a2_801, out a4_802, out a5_803)
	word32 s0_41 = Mem30[s1 + 24<i32>:word32]
	branch s1 >= 0<32> l2303B038
l2303B038:
	word32 a4_804
	word32 a5_805
	a3 = sys_arch_unprotect(a3, mstatus, out a4_804, out a5_805)
l2303B03C:
	word32 a4_50
	word32 a5_800
	word32 a0_49 = get_socket(s1, out a4_50, out a5_800)
	branch a0_49 == 0<32> l2303B18E
l2303B18E:
	0<32> = dwArg010C
	return
l2303B048:
	word32 a4_809
	word32 a5_810
	word32 a2_808
	sys_arch_protect(a4_50, mstatus, out a2_808, out a4_809, out a5_810)
	word32 a5_74 = 1<32>
	branch a1 >u 4<32> l2303B078
l2303B054:
	a1 = 0x23086150<32>
	switch ((a1 << 2<i32>) + 0x23086150<32>) { l2303B066 l2303B0C2 }
l2303B0C2:
	Mem83[a0_49 + 8<i32>:word16] = SLICE(CONVERT(Mem30[a0_49 + 8<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
	a5_74 = 0<32>
l2303B066:
	word32 a5_87 = CONVERT(Mem30[a0_49 + 8<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem89[a0_49 + 8<i32>:word16] = SLICE(a5_87 >> 16<i32>, word16, 0)
	a5_74 = CONVERT(a5_87 >> 16<i32> < 2<i32>, bool, word32)
l2303B078:
	branch CONVERT(Mem92[a0_49 + 14<i32>:byte], byte, word32) == 0<32> l2303B018
l2303B07E:
	branch a5_74 == 0<32> l2303B018
l2303B080:
	word32 s3_129 = CONVERT(Mem92[a0_49 + 8<i32>:int16], int16, int32)
	word32 s4_137 = CONVERT(Mem92[a0_49 + 10<i32>:uint16], uint16, word32)
	word32 s2_148 = CONVERT(Mem92[a0_49 + 12<i32>:uint16], uint16, word32)
	word32 a4_102
	word32 a5_811
	word32 a3_101 = sys_arch_unprotect(a3, mstatus, out a4_102, out a5_811)
	word32 a4_813
	word32 a5_814
	word32 a2_812
	word32 a4_111 = sys_arch_protect(a4_102, mstatus, out a2_812, out a4_813, out a5_814)
	word32 s11_112 = 1<32> << s1
	word32 s6_113 = 0x4200E000<32>
	word32 s8_114 = 0x4200E000<32>
	word32 s10_116 = s1 >>u 5<u32> << 2<i32>
l2303B0AC:
	word32 a5_118 = s6_113 + -284<i32>
	word32 s5_120 = Mem119[a5_118:int32]
	word32 s0_122 = Mem119[s8_114 + -280<i32>:int32]
	word32 s7_123 = s6_113 + -284<i32>
l2303B0BC:
	branch s0_122 != 0<32> l2303B0EE
l2303B0EE:
	word32 s0_127 = Mem126[a5_118 + 28<i32>:word32]
	branch a5_118 != 0<32> l2303B100
l2303B0F2:
	s0_127 = Mem126[a5_118 + 20<i32>:word32]
	branch a5_118 == 0<32> l2303B146
l2303B146:
	branch s3_129 <= 0<32> l2303B158
l2303B14A:
	s0_127 = Mem126[a5_118 + 8<i32>:word32]
	branch a5_118 == 0<32> l2303B158
l2303B14E:
	a5_118 = s11_112 & Mem126[a5_118 + s10_116:word32]
	branch a5_118 != 0<32> l2303B17C
l2303B158:
	branch s4_137 == 0<32> l2303B16A
l2303B15C:
	s0_127 = Mem126[a5_118 + 12<i32>:word32]
	branch a5_118 == 0<32> l2303B16A
l2303B160:
	a5_118 = s11_112 & Mem126[a5_118 + s10_116:word32]
	branch a5_118 != 0<32> l2303B17C
l2303B16A:
	branch s2_148 == 0<32> l2303B100
l2303B16E:
	s0_127 = Mem126[a5_118 + 16<i32>:word32]
	branch a5_118 == 0<32> l2303B100
l2303B172:
	a5_118 = s11_112 & Mem126[a5_118 + s10_116:word32]
	branch a5_118 == 0<32> l2303B100
l2303B0F6:
	s0_127 = Mem126[a1 + 24<i32>:word32]
	a5_118 = a5_118 + 4<32>
	a3_101 = 0<32>
l2303B0FC:
	branch a3_101 != a1 l2303B11C
l2303B11C:
	branch s1 != Mem126[a5_118 + -4<i32>:int32] l2303B140
l2303B124:
	branch s3_129 <= 0<32> l2303B130
l2303B128:
	branch (CONVERT(Mem126[a5_118:uint16], uint16, word32) & 1<32>) != 0<32> l2303B17C
l2303B130:
	branch s4_137 == 0<32> l2303B13C
l2303B134:
	branch (CONVERT(Mem126[a5_118:uint16], uint16, word32) & 2<32>) != 0<32> l2303B17C
l2303B13C:
	branch s2_148 != 0<32> l2303B17C
l2303B17C:
	Mem190[s0_127 + 28<i32>:word32] = 1<32>
	s0_127 = sys_sem_signal(s0_127 + 32<i32>, a4_111, a5_118, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, dwArg0148, out s1, out a1, out a3_101, out s2_148, out s3_129, out s4_137, out s5_120, out s6_113, out s8_114)
l2303B140:
	a3_101 = a3_101 + 1<32>
	a5_118 = a5_118 + 8<32>
l2303B100:
	word32 a4_254
	word32 a5_815
	a3_101 = sys_arch_unprotect(a3_101, mstatus, out a4_254, out a5_815)
	word32 a5_818
	word32 a2_816
	word32 a4_817
	word32 a0_256 = sys_arch_protect(a4_254, mstatus, out a2_816, out a4_817, out a5_818)
	a5_118 = Mem269[s7_123:int32]
	a4_111 = a0_256
	branch a5_118 != s5_120 l2303B0AC
l2303B114:
	s5_120 = Mem269[s7_123:int32]
	s0_122 = Mem269[s0_127:word32]
l2303B0BE:
l2303B00E:
	branch a1 != 0<32> l2303B016
l2303B012:
	Mem287[s1 + 0x17<32>:word32] = s0_41
l2303B016:
l2303B018:
	0<32> = dwArg010C
l2303B034_thunk_sys_arch_unprotect:
	word32 a4_806
	word32 a5_807
	sys_arch_unprotect(s2, mstatus, out a4_806, out a5_807)
	return
event_callback_exit:


word32 lwip_accept(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg68, word32 dwArg88, word32 dwArgA4, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, ptr32 & a0Out, ptr32 & a3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TCP_Server
//      iperf_server
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a3 mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_accept_entry:
l2303B1AE:
	word32 s0_103
	word32 sp_126 = fp + -64<i32>
	word32 a4_21
	word32 a5_447
	word32 a0_20 = get_socket(a0, out a4_21, out a5_447)
	branch a0_20 != 0<32> l2303B1DA
l2303B1DA:
	word32 a3_29
	word32 a4_30
	word32 a5_31
	word32 a0_227
	ra = netconn_accept(ra, Mem18[a0_20:word32], fp + -56<i32>, a3, a4_21, mstatus, dwLoc0C, dwArg14, dwArg68, dwArg88, dwArgA8, dwArgC8, dwArgE8, out a0_227, out a3_29, out a4_30, out a5_31, out mstatus)
	branch a0_227 == 0<32> l2303B212
l2303B212:
	word32 a0_53
	word32 a4_56
	word32 s1_60
	word32 s5_448
	word32 s3_101
	word32 s2_100
	alloc_socket(a0_227, 1<32>, a3_29, a4_30, mstatus, out s1_60, out a0_53, out a3, out a4_56, out s2_100, out s3_101, out s5_448)
	branch a0_53 != 0xFFFFFFFF<32> l2303B234
l2303B234:
	word32 a5_451
	word32 a4_450
	word32 a2_449
	word32 a0_107 = sys_arch_protect(a4_56, mstatus, out a2_449, out a4_450, out a5_451)
	Mem76[dwArgA4 + 24<i32>:word32] = Mem18[s1_60 + 24<i32>:word32]
	word32 a5_79
	word32 a4_114
	a3 = sys_arch_unprotect(a3, mstatus, out a4_114, out a5_79)
	s0_103 = dwArgA4
	word32 a5_112 = Mem76[a5_79 + 44<i32>:word32]
	branch a5_112 != 0<32> l2303B28E
l2303B28E:
	word32 s1_104 = CONVERT(SLICE(~s1_60, word16, 0), word16, int32)
l2303B296:
	branch s1_104 <= 0<32> l2303B248
l2303B29A:
	word32 tp_116
	word32 a7_117
	word32 t0_118
	word32 t1_119
	word32 t4_120
	word32 t5_121
	word32 t6_122
	word32 s5_123
	word32 s6_297
	call a5_112 (retsize: 0;)
		uses: a0:Mem76[a5_91 + 44<i32>:word32],a1:0<32>,a2:0<32>,a3:a3_98,a7:a7_117,mstatus:mstatus_97,ra:ra_96,s0:Mem76[sp_86 + 68<i32>:word32],s1:s1_85 + 0xFFFFFFFF<32>,s2:s2_94,s3:s3_95,s5:s5_123,s6:s6_297,Stack +0004:dwArg04,Stack +0014:dwArg14,Stack +0068:dwArg68,Stack +0088:dwArg88,Stack +00A4:dwArgA4,Stack +00A8:dwArgA8,Stack +00C8:dwArgC8,Stack +00E8:dwArgE8,Stack +FFFFFFF4:dwLoc0C,t0:t0_118,t1:t1_119,t4:t4_120,t5:t5_121,t6:t6_122,tp:tp_116
		defs: a0:a0_107,a3:a3_113,a4:a4_114,a5:a5_112,a7:a7_117,mstatus:mstatus_115,ra:ra_102,s0:s0_103,s1:s1_104,s2:s2_100,s3:s3_101,s5:s5_123,s6:s6_297,sp:sp_99,t0:t0_118,t1:t1_119,t4:t4_120,t5:t5_121,t6:t6_122,tp:tp_116
l2303B248:
	branch s3_101 == 0<32> l2303B1CA
l2303B24C:
	branch s2_100 == 0<32> l2303B1CA
l2303B250:
	s0_103 = Mem76[sp_126 + 68<i32>:word32]
	word32 a3_140
	word32 a4_141
	word32 s2_146
	word32 s3_147
	word32 s4_148
	word32 a0_137 = netconn_getaddr(a0_107, sp_126 + 12<i32>, sp_126 + 6<i32>, a4_114, mstatus, Mem76[sp_126 + 120<i32>:word32], Mem76[sp_126 + 184<i32>:word32], Mem76[sp_126 + 248<i32>:word32], out a3_140, out a4_141, out s2_146, out s3_147, out s4_148)
	branch a0_137 == 0<32> l2303B2A8
l2303B2A8:
	word32 a0_160 = CONVERT(Mem76[sp_126 + 6<i32>:uint16], uint16, word32)
	Mem162[sp_126 + 16<i32>:word16] = 0x210<16>
	word32 a5_164
	Mem166[sp_126 + 18<i32>:word16] = SLICE(lwip_htons(a0_160, out a5_164), word16, 0)
	Mem170[sp_126 + 136<i32>:word32] = a5_164
	word32 a5_460
	word32 a3_458
	word32 a4_459
	word32 a2_457
	word32 t1_454
	word32 a0_455
	word32 a1_456
	ra = memset(ra, sp_126 + 24<i32>, 0<32>, 8<32>, out t1_454, out a0_455, out a1_456, out a2_457, out a3_458, out a4_459, out a5_460)
	word32 a5_181 = CONVERT(Mem170[sp_126 + 16<i32>:byte], byte, word32)
	branch a5_181 >=u Mem170[s2_146:int32] l2303B2DA
l2303B2D6:
	Mem183[s2_146:word32] = a5_181
l2303B2DA:
	word32 a2_466
	word32 a7_470
	word32 a6_469
	word32 a5_468
	word32 a4_467
	word32 a1_465
	memcpy(s3_147, sp_126 + 16<i32>, Mem185[s2_146:int32], out a1_465, out a2_466, out a3, out a4_467, out a5_468, out a6_469, out a7_470)
l2303B262:
	word32 a4_461
	word32 a5_462
	word32 s4_464
	word32 s2_463
	a0_227 = free_socket(ra, netconn_delete(a0_137), 1<32>, a3_140, a4_141, s4_148, mstatus, Mem76[sp_126 + 232<i32>:word32], Mem76[sp_126 + 264<i32>:word32], out a3, out a4_461, out a5_462, out s2_463, out s4_464)
l2303B222:
	netconn_delete(a0_53)
	Mem235[0x42020D50<32>:word32] = 0x17<32>
	s0_103 = dwArg04
l2303B1E6:
	word32 a4_248
	a3 = 0x10<32>
	branch (CONVERT(Mem18[a5_31:byte], byte, word32) & 240<i32>) == 0x10<32> l2303B204
l2303B204:
	branch a0_227 != 0xFFFFFFF1<32> l2303B27E
l2303B27E:
	word32 a5_453
	word32 a4_452
	word32 a0_242 = err_to_errno(a0_227, out a4_452, out a5_453)
	branch a0_242 == 0<32> l2303B1C8
l2303B284:
	Mem246[0x42020D50<32>:word32] = a0_242
l2303B20A:
	a4_248 = 0x16<32>
l2303B1F6:
	a4_248 = 95<i32>
l2303B1FE:
	Mem253[0x42020D50<32>:word32] = a4_248
l2303B1C8:
	s0_103 = 0xFFFFFFFF<32>
l2303B1CA:
	a0Out = s0_103
	a3Out = a3
	mstatusOut = mstatus
	return ra
lwip_accept_exit:


word32 lwip_bind(word32 a0, word32 a1, word32 mstatus, word32 dwArg34, word32 dwArg48, word32 dwArg88, word32 dwArgC8, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TCP_Server
//      iperf_client_udp
//      iperf_server
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31]
// LiveOut: a0 a3 s0 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_bind_entry:
l2303B2E8:
	word32 a5_54
	word32 a5_190
	word32 a4_189
	branch get_socket(a0, out a4_189, out a5_190) != 0<32> l2303B300
l2303B300:
	word32 a0_32
	branch dwArg34 != 0x10<32> l2303B316
l2303B306:
	word32 a4_19 = CONVERT(Mem11[a1 + 1<i32>:byte], byte, word32)
	branch a4_19 != 2<32> l2303B316
l2303B310:
	branch (a1 & 3<i32>) == 0<32> l2303B328
l2303B328:
	word32 a5_27
	word32 a0_26 = lwip_htons(CONVERT(Mem11[Mem11[(a1 & 3<i32>) + 4<i32>:word32] + 2<i32>:uint16], uint16, word32), out a5_27)
	a0_32 = netconn_bind(a0_26, fp + -20<i32>, a0_26, a4_19, a5_27, mstatus, dwArg48, dwArg88, dwArgC8, out a3, out s3)
	a5_54 = 0<32>
	branch a0_32 != 0<32> l2303B318
l2303B316:
	a0_32 = 0xFFFFFFF0<32>
l2303B318:
	word32 a5_192
	word32 a4_191
	word32 a0_57 = err_to_errno(a0_32, out a4_191, out a5_192)
	branch a0_57 == 0<32> l2303B2FC
l2303B31E:
	Mem61[0x42020D50<32>:word32] = a0_57
l2303B2FC:
	a5_54 = 0xFFFFFFFF<32>
l2303B344:
	a0Out = a5_54
	a3Out = a3
	s3Out = s3
	return dwArgE4
lwip_bind_exit:


word32 lwip_close(word32 ra, word32 a0, word32 a2, word32 mstatus, word32 dwArg48, word32 dwArg88, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_test_cmd
//      ota_tcp_cmd
//      tcpc_entry
//      TCP_Server
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      mbedtls_net_connect
//      mbedtls_net_free
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0048:[0..31] Stack +0088:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_close_entry:
l2303B34E:
	word32 a0_144
	word32 a4_134
	word32 a5_135
	branch get_socket(a0, out a4_134, out a5_135) != 0<32> l2303B376
l2303B376:
	word32 s2_22 = Mem15[a5_135:word32]
	branch a5_135 == 0<32> l2303B38C
l2303B37E:
l2303B38C:
	word32 a4_31
	word32 a5_161
	word32 a0_30 = get_socket(a0, out a4_31, out a5_161)
	word32 s3_162 = a0_30
	branch a0_30 == 0<32> l2303B3D0
l2303B396:
	word32 s4_36 = 0x42014B0C<32>
l2303B3A2:
	word32 s0_39 = Mem38[a5_161:word32]
	branch s3_162 != a5_161 l2303B3CA
l2303B3A8:
	word32 s0_41 = Mem38[a5_161 + 8<i32>:word32]
	Mem42[s0_41:word32] = 0<32>
	Mem43[s0_41 + 8<i32>:word32] = 0<32>
	s0_39 = Mem45[a5_161 + 4<i32>:word32]
	Mem47[s0_39 + 4<i32>:word32] = 0<32>
	a2 = netconn_join_leave_group(Mem49[s3_162:int32], fp + -40<i32>, fp + -36<i32>, a4_31, a5_161, mstatus, dwArg48, dwArg88, dwArgC8, out a4_31, out a5_161, out s2_22, out s3_162, out s4_36)
l2303B3CA:
	branch s0_39 + 0xC<32> != s4_36 l2303B3A2
l2303B3D0:
	word32 a0_103
	word32 a4_107
	s1 = netconn_prepare_delete(Mem85[s2_22:int32], a2, a4_31, mstatus, dwArg48, dwArg88, dwArgC8, out a0_103, out a1, out a3, out a4_107, out s2, out s3, out s4, out s5, out s6)
	branch a0_103 == 0<32> l2303B3EA
l2303B3EA:
	a1 = s1
	s1 = free_socket(ra, s1, s1, a3, a4_107, s4, mstatus, dwArgB8, dwArgD8, out a3, out a4_134, out a5_135, out s2, out s4)
	a0_144 = 0<32>
l2303B3DA:
	word32 a0_145 = err_to_errno(a0_103, out a4_134, out a5_135)
	branch a0_145 == 0<32> l2303B364
l2303B3E0:
	Mem149[0x42020D50<32>:word32] = a0_145
	a5_135 = 0x42020000<32>
l2303B364:
	a0_144 = 0xFFFFFFFF<32>
l2303B366:
	0<32> = dwArg0128
	s1Out = s1
	a0Out = a0_144
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4_134
	a5Out = a5_135
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return dwArgE4
lwip_close_exit:


word32 lwip_connect(word32 a0, word32 a1, word32 mstatus, word32 dwArg34, word32 dwArg48, word32 dwArg88, word32 dwArgC8, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_test_cmd
//      ota_tcp_cmd
//      tcpc_entry
//      iperf_client_tcp
//      mbedtls_net_connect
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31]
// LiveOut: a0 a1 a2 a3 a4 s0 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_connect_entry:
l2303B3F6:
	word32 a5_78
	word32 a5_241
	word32 a4_134
	word32 a0_13 = get_socket(a0, out a4_134, out a5_241)
	branch a0_13 != 0<32> l2303B40E
l2303B40E:
	word32 a0_32
	word32 a5_18 = CONVERT(Mem11[a1 + 1<i32>:byte], byte, word32)
	branch a5_18 != 0<32> l2303B42A
l2303B42A:
	branch dwArg34 != 0x10<32> l2303B43C
l2303B430:
	branch a5_18 != 2<32> l2303B43C
l2303B436:
	branch (a1 & 3<i32>) == 0<32> l2303B44E
l2303B44E:
	word32 a5_27
	word32 a0_26 = lwip_htons(CONVERT(Mem11[Mem11[(a1 & 3<i32>) + 4<i32>:word32] + 2<i32>:uint16], uint16, word32), out a5_27)
	a0_32 = netconn_connect(a0_26, fp + -20<i32>, a0_26, 2<32>, a5_27, mstatus, dwArg48, dwArg88, dwArgC8, out a1, out a3, out a4_134, out s2, out s3, out s4)
l2303B43C:
	a0_32 = 0xFFFFFFF0<32>
l2303B416:
	a0_32 = netconn_disconnect(Mem11[a0_13:word32], dwArg34, a4_134, a5_18, mstatus, dwArg48, dwArg88, dwArgC8, out a1, out a3, out a4_134, out s2, out s3, out s4)
l2303B41C:
	a5_78 = 0<32>
	branch a0_32 != 0<32> l2303B43E
l2303B43E:
	word32 a5_242
	word32 a0_81 = err_to_errno(a0_32, out a4_134, out a5_242)
	branch a0_81 == 0<32> l2303B40A
l2303B444:
	Mem85[0x42020D50<32>:word32] = a0_81
l2303B40A:
	a5_78 = 0xFFFFFFFF<32>
l2303B420:
	a0Out = a5_78
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4_134
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return dwArgE4
lwip_connect_exit:


word32 lwip_listen(word32 a0, word32 a1, word32 mstatus, word32 dwArg44, word32 dwArg58, word32 dwArg98, word32 dwArgD8, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TCP_Server
//      iperf_server
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] Stack +0044:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a3 s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_listen_entry:
l2303B466:
	word32 a5_59
	word32 a4_12
	word32 a5_161
	word32 a0_11 = get_socket(a0, out a4_12, out a5_161)
	branch a0_11 != 0<32> l2303B482
l2303B482:
	branch a1 >= 0<32> l2303B48A
l2303B488:
	a1 = 0<32>
l2303B48A:
	branch a1 <= 255<i32> l2303B496
l2303B492:
l2303B496:
	s0 = Mem9[a0_11:word32]
	word32 a0_37 = netconn_listen_with_backlog(a0_11, dwArg44, a4_12, 255<i32>, mstatus, dwArg58, dwArg98, dwArgD8, out a3, out s2)
	a5_59 = 0<32>
	branch a0_37 == 0<32> l2303B478
l2303B4A4:
	s0 = Mem9[0<32>:word32]
	branch (CONVERT(Mem9[0<32>:byte], byte, word32) & 240<i32>) == 0x10<32> l2303B4C2
l2303B4C2:
	word32 a4_162
	word32 a5_163
	word32 a0_64 = err_to_errno(a0_37, out a4_162, out a5_163)
	branch a0_64 == 0<32> l2303B476
l2303B4C8:
	Mem68[0x42020D50<32>:word32] = a0_64
l2303B4B4:
	Mem71[0x42020D50<32>:word32] = 95<i32>
l2303B476:
	a5_59 = 0xFFFFFFFF<32>
l2303B478:
	a0Out = a5_59
	a3Out = a3
	s2Out = s2
	return s0
lwip_listen_exit:


word32 lwip_recvfrom(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_read
//      lwip_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_recvfrom_entry:
l2303B4D2:
	word32 s0_102
	word32 s2_117 = a2
	word32 s4_119 = a4
	word32 a5_29
	word32 a4_343
	branch get_socket(a0, out a4_343, out a5_29) == 0<32> l2303B580
l2303B4F0:
	word32 a0_30 = Mem17[a5_29:word32]
	branch (CONVERT(Mem17[a5_29:byte], byte, word32) & 240<i32>) != 0x10<32> l2303B542
l2303B542:
	branch a5 == 0<32> l2303B560
l2303B55E:
l2303B560:
	word32 a0_63
	word32 a5_65
	word32 s1_68 = lwip_recvfrom_udp_raw.isra.6(ra, a0_30, a3, fp + -70<i32>, 0x10<32>, 0<32>, a4, mstatus, dwLoc5C, dwLoc2C, dwArg08, dwArg14, dwArg28, s3, s1, dwArg68, dwArg88, dwArg0138, out a0_63, out a5_65, out s2_117)
	branch a0_63 == 0<32> l2303B584
l2303B584:
	s0_102 = 0<32>
	branch s2_117 >=u 0<32> l2303B58E
l2303B58C:
	s0_102 = s2_117
l2303B58E:
	branch s1_68 == 0<32> l2303B530
l2303B590:
	Mem96[a5_65:word32] = s1_68
	s0_102 = dwArg0194
l2303B572:
	word32 a4_351
	word32 a5_352
	word32 a0_97 = err_to_errno(a0_63, out a4_351, out a5_352)
	branch a0_97 == 0<32> l2303B580
l2303B578:
	Mem101[0x42020D50<32>:word32] = a0_97
l2303B580:
	s0_102 = 0xFFFFFFFF<32>
l2303B504:
	word32 a4_109
	word32 s1_116
	ra = lwip_recv_tcp(ra, a5, a0_30, a1, a2, a3, mstatus, dwLoc5C, dwLoc48, s4, s2, dwLoc28, dwArg08, dwArg18, dwArg38, s1, dwArg58, dwArg68, dwArg88, dwArg0138, out s1_116, out a4_109, out s3, out s4_119, out mstatus)
	s0_102 = a0_105
	branch s4_119 == 0<32> l2303B530
l2303B512:
	branch s1_116 == 0<32> l2303B530
l2303B514:
	word32 a3_344
	word32 a4_345
	netconn_getaddr(Mem17[s3:int32], fp + -60<i32>, fp + -68<i32>, a4_109, mstatus, dwArg18, dwArg58, dwArg98, out a3_344, out a4_345, out s2_117, out s3, out s4_119)
	word32 s1_346
	word32 a0_347
	word32 a3_348
	word32 a4_349
	word32 a5_350
	ra = lwip_sock_make_addr.isra.3(ra, CONVERT(wLoc44, uint16, word32), s4_119, dwArg14, out s1_346, out a0_347, out a3_348, out a4_349, out a5_350)
l2303B530:
	s0Out = s0_102
	s1Out = dwArg28
	a0Out = s0_102
	a2Out = a2
	a3Out = dwArg08
	s2Out = s2_117
	s3Out = s3
	s4Out = s4_119
	s5Out = s4
	s6Out = s6
	s8Out = s8
	s9Out = dwLoc5C
	mstatusOut = mstatus
	return ra
lwip_recvfrom_exit:


word32 lwip_read(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArg0138, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_test_cmd
//      ota_tcp_cmd
//      tcpc_entry
//      mbedtls_net_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_read_entry:
l2303B596:
l2303B59C_thunk_lwip_recvfrom:
	word32 a0_16
	word32 a3_17
	word32 s0_21
	word32 mstatus_31
	word32 s6_34
	word32 s1_58
	word32 a2_59
	word32 s2_60
	word32 s3_61
	word32 s4_62
	word32 s5_63
	word32 s8_64
	word32 s9_65
	word32 ra_32 = lwip_recvfrom(ra, s1, a0, a1, a2, 0<32>, 0<32>, 0<32>, s2, s3, s4, mstatus, dwArg08, dwArg14, dwArg18, dwArg28, dwArg38, dwArg58, dwArg68, dwArg88, dwArg98, dwArg0138, out s0_21, out s1_58, out a0_16, out a2_59, out a3_17, out s2_60, out s3_61, out s4_62, out s5_63, out s6_34, out s8_64, out s9_65, out mstatus_31)
	s0Out = s0_21
	a0Out = a0_16
	a3Out = a3_17
	s6Out = s6_34
	mstatusOut = mstatus_31
	return ra_32
lwip_read_exit:


word32 lwip_recv(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TCP_Server
//      iperf_server
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_recv_entry:
l2303B5A0:
l2303B5A4_thunk_lwip_recvfrom:
	word32 a0_16
	word32 a3_17
	word32 s0_21
	word32 s1_22
	word32 s2_23
	word32 s4_24
	word32 s5_25
	word32 s9_26
	word32 a2_29
	word32 mstatus_31
	word32 s3_33
	word32 s6_34
	word32 s8_36
	word32 ra_32 = lwip_recvfrom(ra, s1, a0, a1, a2, a3, 0<32>, 0<32>, s2, s3, s4, mstatus, dwArg08, dwArg14, dwArg18, dwArg28, dwArg38, dwArg58, dwArg68, dwArg88, dwArg98, dwArg0138, out s0_21, out s1_22, out a0_16, out a2_29, out a3_17, out s2_23, out s3_33, out s4_24, out s5_25, out s6_34, out s8_36, out s9_26, out mstatus_31)
	s0Out = s0_21
	s1Out = s1_22
	a0Out = a0_16
	a2Out = a2_29
	a3Out = a3_17
	s2Out = s2_23
	s3Out = s3_33
	s4Out = s4_24
	s5Out = s5_25
	s6Out = s6_34
	s8Out = s8_36
	s9Out = s9_26
	mstatusOut = mstatus_31
	return ra_32
lwip_recv_exit:


word32 lwip_sendto(word32 ra, word32 s0, word32 a0, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_send
//      iperf_client_udp
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 a3 mstatus ra s0 s1 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_sendto_entry:
l2303B5A8:
	word32 a0_217
	word32 s3_196 = a0
	word32 s2_195 = a1
	word32 s0_232 = dwArg74
	word32 a2_185 = ra
	word32 a5_30
	word32 a4_29
	branch get_socket(a0, out a4_29, out a5_30) != 0<32> l2303B5D2
l2303B5D2:
	word32 a2_37 = CONVERT(Mem21[ra:byte], byte, word32)
	word32 a0_34 = Mem21[ra:word32]
	a2_185 = a2_37 & 240<i32>
	branch (a2_37 & 240<i32>) != 0x10<32> l2303B5FC
l2303B5FC:
	word32 a3_39 = 0x10000000<32>
	branch dwArg74 <u 0x10000000<32> l2303B610
l2303B610:
	s4 = CONVERT(SLICE(dwArg74, word16, 0), word16, word32)
	branch a4_29 != 0<32> l2303B6B4
l2303B6B4:
	branch a5_30 != 0x10<32> l2303B61C
l2303B6B8:
	a3_39 = CONVERT(Mem21[a4_29 + 1<i32>:byte], byte, word32)
	branch a3_39 != 2<32> l2303B61C
l2303B6C2:
	a5_30 = a4_29 & 3<i32>
l2303B61A:
	branch a5_30 == 0<32> l2303B62E
l2303B62E:
	branch a4_29 == 0<32> l2303B6A4
l2303B6A4:
l2303B638:
	a4_29 = Mem49[a5_30 + 4<i32>:word32]
	word32 a5_491
	lwip_htons(CONVERT(Mem49[a4_29 + 2<i32>:uint16], uint16, word32), out a5_491)
l2303B644:
	word32 mstatus_83
	word32 s2_87
	word32 a0_124
	word32 a4_156
	word32 a3_155
	word32 s4_163
	word32 ra_84 = netbuf_alloc(ra, a0_34, fp + -52<i32>, s4, a3_39, a4_29, s4, mstatus, s0, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0_232, out a0_124, out a3_155, out a4_156, out s2_87, out s4_163, out mstatus_83)
	branch a0_124 == 0<32> l2303B686
l2303B654:
	word32 a5_110
	word32 a4_109
	word32 a2_113
	branch (CONVERT(Mem60[Mem60[a0_124 + 4<i32>:word32]:byte], byte, word32) & 240<i32>) == 64<i32> l2303B6AA
l2303B6AA:
	word32 a1_494
	word32 a3_495
	word32 a6_496
	word32 a7_497
	memcpy(a0_124, s2_87, s0_232, out a1_494, out a2_113, out a3_495, out a4_109, out a5_110, out a6_496, out a7_497)
l2303B66A:
	lwip_chksum_copy(a0_124, s2_87, s4_163, out a0_124, out a2_113, out a4_109)
	a5_110 = 2<32>
l2303B67C:
	a3_155 = netconn_send(a0_124, a2_113, a4_109, a5_110, mstatus_83, dwArg28, dwArg68, dwArgA8, out a4_156, out s4_163)
l2303B686:
	a2_185 = netbuf_free(ra_84, fp + -52<i32>, a3_155, a4_156, s4_163, mstatus_83, dwArgC8, out s2_195, out s3_196, out s4, out s5, out mstatus)
	word32 a5_493
	word32 a4_492
	word32 a0_209 = err_to_errno(s3_196, out a4_492, out a5_493)
	branch a0_209 == 0<32> l2303B69C
l2303B694:
	Mem213[0x42020D50<32>:word32] = a0_209
l2303B69C:
	a0_217 = s0_232
	branch s3_196 == 0<32> l2303B5EC
l2303B6A2:
l2303B61C:
	word32 a4_489
	word32 a5_490
	word32 a0_220 = err_to_errno(0xFFFFFFF0<32>, out a4_489, out a5_490)
	branch a0_220 == 0<32> l2303B5CE
l2303B624:
	Mem224[0x42020D50<32>:word32] = a0_220
l2303B602:
	Mem227[0x42020D50<32>:word32] = 90<i32>
l2303B5E4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg40 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg168 = <invalid>
	word32 a3_487
	word32 s8_488
	s0_232 = lwip_send(a0, a3, mstatus, stackArg40, stackArg104, stackArg168, out a0_217, out a2_185, out a3_487, out s2_195, out s3_196, out s4, out s5, out s8_488, out mstatus)
l2303B5CE:
	a0_217 = 0xFFFFFFFF<32>
l2303B5EC:
	s0Out = s0_232
	s1Out = a4
	a0Out = a0_217
	a2Out = a2_185
	a3Out = s2
	s2Out = s2_195
	s3Out = s3_196
	s4Out = s4
	s5Out = s5
	s8Out = dwArg0148
	mstatusOut = mstatus
	return dwLoc08
lwip_sendto_exit:


word32 lwip_send(word32 a0, word32 a3, word32 mstatus, word32 dwArg28, word32 dwArg68, word32 dwArgA8, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_sendto
//      lwip_write
//      TCP_Server
//      iperf_client_tcp
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a2 a3 mstatus s0 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra sp
lwip_send_entry:
l2303B6C8:
	word32 a0_103
	word32 a5_18
	word32 a4_232
	branch get_socket(a0, out a4_232, out a5_18) != 0<32> l2303B6EC
l2303B6EC:
	word32 a0_22 = Mem13[a5_18:word32]
	branch (CONVERT(Mem13[a5_18:byte], byte, word32) & 240<i32>) == 0x10<32> l2303B708
l2303B708:
	word32 a6_27 = 3<32>
	branch (a3 & 16<i32>) != 0<32> l2303B712
l2303B710:
	a6_27 = 1<32>
l2303B712:
	word32 a0_41 = netconn_write_partly(Mem30[a0_22:word32], a6_27 | a3 >> 1<i32> & 4<32>, fp + -20<i32>, mstatus, dwArg28, dwArg68, dwArgA8, out a3, out s2, out s3, out s4, out s5, out s8)
	word32 a4_248
	word32 a5_249
	a0_103 = err_to_errno(a0_41, out a4_248, out a5_249)
	branch a0_103 == 0<32> l2303B734
l2303B72C:
	Mem69[0x42020D50<32>:word32] = a0_103
l2303B734:
	branch a0_41 != 0<32> l2303B6E2
l2303B736:
l2303B6FC:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg40 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg116 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg232 = <invalid>
	word32 s0_244
	word32 s1_245
	word32 a2_246
	word32 mstatus_247
	lwip_sendto(ra, a1, a1, mstatus, stackArg40, stackArg56, stackArg72, stackArg104, stackArg116, stackArg120, stackArg136, stackArg168, stackArg184, stackArg200, stackArg232, out s0_244, out s1_245, out a0_103, out a2_246, out a3, out s2, out s3, out s4, out s5, out s8, out mstatus_247)
l2303B6E2:
	a0_103 = 0xFFFFFFFF<32>
l2303B6E4:
	a0Out = a0_103
	a2Out = dwArg0100
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	mstatusOut = <invalid>
	return dwArgE4
lwip_send_exit:


word32 lwip_socket(word32 ra, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg34, word32 dwArg68, word32 dwArgA8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_test_cmd
//      ota_tcp_cmd
//      tcpc_entry
//      TCP_Server
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      mbedtls_net_connect
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0068:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a1 a2 a3 a4 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
lwip_socket_entry:
l2303B73A:
	word32 a4_100
	word32 s1_104
	word32 a4_14
	word32 a0_15
	branch a1 == 2<32> l2303B786
l2303B786:
	a4_14 = 136<i32>
	a0_15 = 33<i32>
	branch a2 == 136<i32> l2303B796
l2303B792:
	a0_15 = 32<i32>
l2303B796:
l2303B74A:
	a4_14 = 3<32>
	branch a1 == 3<32> l2303B764
l2303B764:
	a0_15 = 64<i32>
l2303B750:
	branch a1 != 1<32> l2303B7A2
l2303B7A2:
	a4_100 = 0x16<32>
l2303B756:
	a0_15 = 0x10<32>
l2303B774:
	word32 a4_51
	word32 a0_70 = netconn_new_with_proto_and_callback(ra, a0_15, a3, a4_14, mstatus, dwArg34, dwArg68, dwArgA8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, dwArg0148, out a1, out a3, out a4_51, out s2, out s3, out s5)
	branch a0_70 != 0<32> l2303B7BA
l2303B7BA:
	a1 = 0<32>
	word32 a0_73
	word32 s1_213
	word32 s0_79 = alloc_socket(a0_70, 0<32>, a3, a4_51, mstatus, out s1_213, out a0_73, out a3, out a4_100, out s2, out s3, out s5)
	s1_104 = a0_73
	branch a0_73 != 0xFFFFFFFF<32> l2303B7DA
l2303B7DA:
	Mem90[a0_73 + 24<i32>:word32] = s0_79
l2303B7C8:
	s1_104 = netconn_delete(s0_79)
	Mem98[0x42020D50<32>:word32] = 0x17<32>
	a4_100 = 0x17<32>
l2303B77C:
	a4_100 = 105<i32>
l2303B7A8:
	Mem103[0x42020D50<32>:word32] = a4_100
	s1_104 = 0xFFFFFFFF<32>
l2303B7AE:
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_100
	s2Out = s2
	s3Out = s3
	s5Out = s5
	return s1_104
lwip_socket_exit:


word32 lwip_write(word32 a0, word32 mstatus, word32 dwArg28, word32 dwArg68, word32 dwArgA8, ptr32 & a3Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_test_cmd
//      tcpc_entry
//      mbedtls_net_send
// MayUse:  a0:[0..31] mstatus:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a3 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_write_entry:
l2303B7DE:
l2303B7E0_thunk_lwip_send:
	word32 a0_7
	word32 a3_10
	word32 s8_22
	word32 a2_35
	word32 s2_36
	word32 s3_37
	word32 s4_38
	word32 s5_39
	word32 mstatus_40
	lwip_send(a0, 0<32>, mstatus, dwArg28, dwArg68, dwArgA8, out a0_7, out a2_35, out a3_10, out s2_36, out s3_37, out s4_38, out s5_39, out s8_22, out mstatus_40)
	a3Out = a3_10
	s8Out = s8_22
	return a0_7
lwip_write_exit:


word32 lwip_select(word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg78, word32 dwArg88, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TCP_Server
//      mbedtls_net_recv_timeout
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
lwip_select_entry:
l2303B7E4:
	word32 a4_1008
	word32 a5_1010
	branch a0 <=u 64<i32> l2303B834
l2303B834:
	word32 a0_45
	word32 s8_61
	word32 a3_1121
	word32 s1_1120
	word32 s7_1122
	word32 ra_51 = lwip_selscan(a0, a1, a2, a3, fp + -116<i32>, fp + -108<i32>, mstatus, dwLoc0C, dwArg0104, out s0, out s1_1120, out a0_45, out a2, out a3_1121, out a4_1008, out a5_1010, out s2, out s3, out s4, out s7_1122, out s8_61)
	branch a0_45 >= 0<32> l2303B858
l2303B858:
	branch a0_45 != 0<32> l2303B9B6
l2303B85E:
	branch s8_61 == 0<32> l2303B876
l2303B862:
	a4_1008 = Mem29[s8_61 + 4<i32>:int32]
	a5_1010 = Mem29[s8_61:int32] | a4_1008
	branch a5_1010 != 0<32> l2303B876
l2303B86E:
	branch Mem29[s8_61 + 8<i32>:int32] == 0<32> l2303B9B6
l2303B876:
	word32 a3_83
	word32 a4_84
	word32 a5_85
	word32 a0_98
	word32 a3_101
	word32 a4_102
	word32 a5_1128
	word32 a2_1126
	word32 t1_1123
	word32 a0_1124
	word32 a1_1125
	word32 a1_1127
	word32 s1_105 = sys_sem_new(memset(ra_51, fp + -100<i32>, 0<32>, 36<i32>, out t1_1123, out a0_1124, out a1_1125, out a2_1126, out a3_83, out a4_84, out a5_85), a3_83, a4_84, a5_85, mstatus, dwLoc70, s3, s2, dwArg88, dwArgC8, dwArg0108, out a0_98, out a1_1127, out a2, out a3_101, out a4_102, out a5_1128, out s2, out s3, out s4)
	branch a0_98 == 0<32> l2303B89A
l2303B89A:
	word32 s7_114 = 0x42014B0C<32>
	word32 s10_115 = 0x42014B0C<32>
	word32 a3_118 = lwip_link_select_cb(fp + -100<i32>, a3_101, a4_102, mstatus)
	word32 s0_121 = 0<32>
l2303B8B6:
	word32 s6_216
	word32 s9_215
	word32 a3_177
	word32 a4_181
	branch s0_121 != a0 l2303B906
l2303B906:
	word32 a4_132
	branch s4 == 0<32> l2303B91C
l2303B90A:
	a4_132 = Mem131[(s0_121 >>u 5<u32> << 2<i32>) + s4:word32]
	branch (1<32> << s0_121 & a4_132) != 0<32> l2303B948
l2303B91C:
	branch s3 == 0<32> l2303B932
l2303B920:
	a4_132 = Mem131[(s0_121 >>u 5<u32> << 2<i32>) + s3:word32]
	branch (1<32> << s0_121 & a4_132) != 0<32> l2303B948
l2303B932:
	branch s2 == 0<32> l2303B9EC
l2303B936:
	a4_132 = Mem131[(s0_121 >>u 5<u32> << 2<i32>) + s2:word32]
	branch (1<32> << s0_121 & a4_132) == 0<32> l2303B9EC
l2303B948:
	word32 a2_1146
	word32 a4_1147
	word32 a5_1148
	sys_arch_protect(a4_132, mstatus, out a2_1146, out a4_1147, out a5_1148)
	branch s0_121 > 0x14<32> l2303B9F2
l2303B9F2:
	word32 a5_1150
	word32 a4_1149
	a3_177 = sys_arch_unprotect(a3_118, mstatus, out a4_1149, out a5_1150)
	a4_181 = 9<32>
l2303B950:
	word32 a5_189 = CONVERT(Mem131[s10_115 + 14<i32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem190[s10_115 + 14<i32>:byte] = SLICE(a5_189, byte, 0)
	branch a5_189 != 0<32> l2303B9E8
l2303B9E8:
	word32 a4_1151
	word32 a5_1152
	a3_118 = sys_arch_unprotect(a3_118, mstatus, out a4_1151, out a5_1152)
l2303B9EC:
	s0_121 = s0_121 + 1<32>
	s10_115 = s10_115 + 0x10<32>
l2303B960:
	Mem206[(s0_121 << 4<u32>) + 0x42014B1A<32>:byte] = 0xFF<8>
	word32 a5_1154
	word32 a4_1153
	a3_177 = sys_arch_unprotect(a3_118, mstatus, out a4_1153, out a5_1154)
	a4_181 = 0x10<32>
l2303B976:
	Mem214[0x42020D50<32>:word32] = a4_181
	s9_215 = 0xFFFFFFFF<32>
	s6_216 = 0<32>
l2303B8BA:
	word32 a0_229
	word32 s8_245
	word32 a5_1130
	word32 a2_1129
	lwip_selscan(a0, s4, s3, s2, fp + -116<i32>, fp + -108<i32>, mstatus, dwLoc0C, dwArg0104, out s0_121, out s1_105, out a0_229, out a2_1129, out a3_177, out a4_181, out a5_1130, out s2, out s3, out s4, out s7_114, out s8_245)
	s9_215 = a0_229
	s6_216 = 0<32>
	branch a0_229 != 0<32> l2303B97E
l2303B8D4:
	word32 a1_255 = 0<32>
	branch s8_245 == 0<32> l2303B8FA
l2303B8DA:
	a4_181 = Mem131[s8_245 + 8<i32>:int32] + 500<i32> ^ 1000<i32>
	a3_177 = 1000<i32>
	a1_255 = Mem131[s8_245:int32] + 1000<i32> + a4_181
	branch a1_255 > 0<32> l2303B8FA
l2303B8F8:
	a1_255 = 1<32>
l2303B8FA:
	word32 a0_272
	word32 a1_1131
	word32 a5_1132
	sys_arch_sem_wait(a1_255, a3_177, a4_181, s2, mstatus, dwLoc7C, dwLoc3C, dwArg04, dwArg78, dwArgB8, out s1_105, out a0_272, out a1_1131, out a3_177, out a4_181, out a5_1132, out s2, out s3, out s4)
	s6_216 = a0_272
	s0_121 = a0
l2303B97E:
l2303B986:
	branch s1_105 != s0_121 l2303B9FE
l2303B9FE:
	branch s4 == 0<32> l2303BA14
l2303BA02:
	a3_177 = Mem299[(s1_105 >>u 5<u32> << 2<i32>) + s4:word32]
	a4_181 = 1<32> << s1_105 & a3_177
	branch a4_181 != 0<32> l2303BA40
l2303BA14:
	branch s3 == 0<32> l2303BA2A
l2303BA18:
	a3_177 = Mem299[(s1_105 >>u 5<u32> << 2<i32>) + s3:word32]
	a4_181 = 1<32> << s1_105 & a3_177
	branch a4_181 != 0<32> l2303BA40
l2303BA2A:
	branch s2 == 0<32> l2303BA5E
l2303BA2E:
	a3_177 = Mem299[(s1_105 >>u 5<u32> << 2<i32>) + s2:word32]
	a4_181 = 1<32> << s1_105 & a3_177
	branch a4_181 == 0<32> l2303BA5E
l2303BA40:
	word32 a4_1142
	word32 a2_1141
	word32 a5_1143
	word32 a0_332 = sys_arch_protect(a4_181, mstatus, out a2_1141, out a4_1142, out a5_1143)
	branch s1_105 > 0x14<32> l2303BA64
l2303BA64:
	word32 a5_1144
	a3_177 = sys_arch_unprotect(a0_332, mstatus, out a4_181, out a5_1144)
	Mem351[0x42020D50<32>:word32] = 9<32>
	s9_215 = 0xFFFFFFFF<32>
l2303BA4C:
	word32 a4_357 = CONVERT(Mem299[s7_114 + 14<i32>:byte], byte, word32)
	branch a4_357 == 0<32> l2303BA58
l2303BA52:
	Mem359[s7_114 + 14<i32>:byte] = SLICE(a4_357 + 0xFFFFFFFF<32>, byte, 0)
l2303BA58:
	word32 a5_1145
	a3_177 = sys_arch_unprotect(a0_332, mstatus, out a4_181, out a5_1145)
l2303BA5E:
	s1_105 = s1_105 + 1<32>
	s7_114 = s7_114 + 0x10<32>
l2303B98A:
	word32 a1_1134
	word32 s1_1133
	word32 a3_1135
	s0 = sys_sem_free(fp + -68<i32>, lwip_unlink_select_cb(a3_177, a4_181, mstatus), mstatus, dwArgD8, dwArg0118, out s1_1133, out a1_1134, out a2, out a3_1135, out a4_1008, out a5_1010, out s4)
	branch s9_215 < 0<32> l2303B812
l2303B99A:
	a4_1008 = 0xFFFFFFFF<32>
	branch s6_216 == 0xFFFFFFFF<32> l2303B9B6
l2303B9A0:
	word32 s1_1136
	word32 s7_1139
	word32 a0_1137
	word32 a3_1138
	word32 s8_1140
	lwip_selscan(a0, s4, s3, s2, fp + -116<i32>, fp + -108<i32>, mstatus, dwLoc0C, dwArg0104, out s0, out s1_1136, out a0_1137, out a2, out a3_1138, out a4_1008, out a5_1010, out s2, out s3, out s4, out s7_1139, out s8_1140)
l2303B9B6:
	branch s4 == 0<32> l2303B9C6
l2303B9BA:
	Mem474[s4:word32] = a4_1008
	Mem476[s4 + 4<i32>:word32] = a4_1008
	s0 = dwArg44
l2303B9C6:
	branch s3 == 0<32> l2303B9D6
l2303B9CA:
	Mem483[s3:word32] = a4_1008
	Mem485[s3 + 4<i32>:word32] = a4_1008
	a2 = dwArg44
l2303B9D6:
	branch s2 == 0<32> l2303B814
l2303B9DA:
	Mem493[s2:word32] = a4_1008
	Mem495[s2 + 4<i32>:word32] = a4_1008
	s4 = dwArg44
l2303B892:
	a4_1008 = 0xC<32>
l2303B850:
	a4_1008 = 9<32>
l2303B808:
	a4_1008 = 0x16<32>
l2303B80E:
	Mem504[0x42020D50<32>:word32] = a4_1008
	a5_1010 = 0x42020000<32>
l2303B812:
l2303B814:
	s0Out = s0
	s1Out = dwArg0118
	a0Out = dwArg94
	a2Out = a2
	a3Out = dwLoc14
	a4Out = a4_1008
	a5Out = a5_1010
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return dwArg0158
lwip_select_exit:


word32 lwip_shutdown(word32 a0, word32 a1, word32 mstatus, word32 dwArg58, word32 dwArg98, word32 dwArgD8, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_net_free
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_shutdown_entry:
l2303BA70:
	word32 a0_108
	word32 a4_203
	word32 a5_204
	word32 a0_11 = get_socket(a0, out a4_203, out a5_204)
	branch a0_11 == 0<32> l2303BA9E
l2303BA7E:
	word32 a4_16
	word32 a0_14 = Mem9[a0_11:word32]
	branch a0_14 == 0<32> l2303BAA2
l2303BAA2:
	a4_16 = 107<i32>
l2303BA82:
	word32 a4_18 = 0x10<32>
	a2 = dwArg44
	branch (CONVERT(Mem9[a0_14:byte], byte, word32) & 240<i32>) == 0x10<32> l2303BAAC
l2303BAAC:
	branch a1 == 0<32> l2303BAC4
l2303BAC4:
	a2 = 0<32>
l2303BAAE:
	branch a1 == 1<32> l2303BAEE
l2303BAEE:
	a2 = 1<32>
l2303BAB4:
	a4_18 = 2<32>
	a2 = 1<32>
	branch a1 == 2<32> l2303BAC8
l2303BAC8:
	word32 a0_37 = netconn_shutdown(a0_14, a2, a4_18, mstatus, dwArg58, dwArg98, dwArgD8, out a2)
	word32 a5_206
	word32 a4_205
	word32 a0_60 = err_to_errno(a0_37, out a4_205, out a5_206)
	branch a0_60 == 0<32> l2303BADE
l2303BAD6:
	Mem64[0x42020D50<32>:word32] = a0_60
l2303BADE:
	a0_108 = 0<32> - CONVERT(a0_37 != 0<32>, bool, word32)
l2303BABC:
	a4_16 = 0x16<32>
l2303BA92:
	a4_16 = 95<i32>
l2303BA9A:
	Mem74[0x42020D50<32>:word32] = a4_16
l2303BA9E:
	a0_108 = 0xFFFFFFFF<32>
l2303BAE6:
	a2Out = a2
	return a0_108
lwip_shutdown_exit:


word32 lwip_setsockopt(word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpc_entry
//      TCP_Server
//      iperf_server
//      iperf_client_tcp
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 s0 s1 s2 s3 s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_setsockopt_entry:
l2303BAF4:
	word32 a0_127
	word32 a4_19
	word32 a5_207
	word32 a0_18 = get_socket(a0, out a4_19, out a5_207)
	0<32> = dwArg84
	word32 s0_150 = a1
	branch a0_18 != 0<32> l2303BB16
l2303BB16:
	branch a3 != 0<32> l2303BB24
l2303BB24:
	word32 a0_37
	word32 a4_40
	s0_150 = tcpip_callback(0x2303ABF2<32>, fp + -44<i32>, a3, a4_19, mstatus, dwArg98, dwArgD8, dwArg0118, out s1, out a0_37, out a3, out a4_40, out s2, out s3, out s4, out s6)
	branch a0_37 == 0<32> l2303BB54
l2303BB54:
	word32 a1_208
	word32 a4_209
	word32 a5_210
	sys_arch_sem_wait(0<32>, a3, a4_40, s2, mstatus, a2, dwArg04, a1, dwArgB8, dwArgF8, out s1, out a0_127, out a1_208, out a3, out a4_209, out a5_210, out s2, out s3, out s4)
	s0_150 = dwArg0114
	branch a0_127 != 0<32> l2303BB4A
l2303BB44:
	word32 a4_211
	word32 a5_212
	a0_127 = err_to_errno(a0_37, out a4_211, out a5_212)
	branch a0_127 == 0<32> l2303BB12
l2303BB4A:
	Mem83[0x42020D50<32>:word32] = a0_127
l2303BB18:
	Mem86[0x42020D50<32>:word32] = 0xE<32>
l2303BB12:
	a0_127 = 0xFFFFFFFF<32>
l2303BB60:
	s1Out = s1
	a0Out = a0_127
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s6Out = s6
	return s0_150
lwip_setsockopt_exit:


word32 lwip_fcntl(word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg44, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_would_block.isra.0
//      mbedtls_net_set_block
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a3 s0
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3
// Preserved: sp
lwip_fcntl_entry:
l2303BB68:
	word32 a0_120
	word32 a5_156
	word32 a4_155
	word32 a0_17 = get_socket(a0, out a4_155, out a5_156)
	branch a0_17 == 0<32> l2303BB9A
l2303BB7C:
	branch a1 == 3<32> l2303BB9E
l2303BB9E:
	s0 = 6<32>
	word32 s1_30 = CONVERT(Mem15[0x27<32>:byte], byte, word32) >> 1<i32> & 1<i32>
	branch (CONVERT(Mem15[3<32>:byte], byte, word32) & 240<i32>) != 0x10<32> l2303BBE4
l2303BBBA:
	word32 a4_158
	word32 a5_159
	word32 a2_157
	sys_arch_protect(0x10<32>, mstatus, out a2_157, out a4_158, out a5_159)
	s0 = 0<32>
	word32 a5_38 = Mem15[Mem15[a0_17:int32] + 4<i32>:word32]
	branch a5_38 == 0<32> l2303BBE0
l2303BBC8:
	word32 a5_39 = CONVERT(Mem15[a5_38 + 26<i32>:uint16], uint16, word32)
	word32 s0_41 = CONVERT((a5_39 & 16<i32>) <u 1<i32>, bool, word32)
	s0 = s0_41 << 1<i32>
	branch (a5_39 & 32<i32>) != 0<32> l2303BBE0
l2303BBDC:
	s0 = s0_41 << 1<i32> | 4<i32>
l2303BBE0:
	word32 a5_161
	word32 a4_160
	a3 = sys_arch_unprotect(a3, mstatus, out a4_160, out a5_161)
l2303BBE4:
	a0_120 = s0 | s1_30
l2303BB86:
	s0 = a1
	branch a1 == 4<32> l2303BBF4
l2303BBF4:
	a0_120 = dwArg44 & -8<i32>
	branch (dwArg44 & -8<i32>) != 0<32> l2303BB8E
l2303BBFA:
	word32 a5_62
	word32 a4_59 = Mem15[a0_17:int32]
	word32 a5_61 = CONVERT(Mem15[a4_59 + 36<i32>:byte], byte, word32)
	branch (dwArg44 & 1<32>) == 0<32> l2303BC10
l2303BC10:
	a5_62 = a5_61 & 0xFFFFFFFD<32>
l2303BC06:
	a5_62 = a5_61 | 2<i32>
l2303BC0A:
	Mem66[a4_59 + 36<i32>:byte] = SLICE(a5_62, byte, 0)
l2303BB8E:
	Mem69[0x42020D50<32>:word32] = 38<i32>
l2303BB9A:
	a0_120 = 0xFFFFFFFF<32>
l2303BBE8:
	a0Out = a0_120
	a3Out = a3
	return s0
lwip_fcntl_exit:


void tcpip_thread(word32 ra, word32 s0, word32 s1, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 s5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_thread_entry:
l2303BC14:
	word32 a5_106 = Mem0[0x4200DEEC<32>:int32]
	word32 sp_164 = fp + -48<i32>
	branch a5_106 == 0<32> l2303BC38
l2303BC2E:
	call a5_106 (retsize: 0;)
		uses: a0:Mem20[0x4200DEF0<32>:int32],a1:a1_35,a3:a3,a4:0x4200E000<32>,mstatus:mstatus,ra:ra,s0:s0,s1:s1,s2:s2,s3:s3,s4:s4,s5:s5
		defs: a1:a1_35,a4:a4_32,a5:a5_24,ra:ra_25,s0:s0_26,sp:sp_23
l2303BC38:
	word32 s2_111 = 0xFFFFFFFF<32>
	word32 s3_112 = 0x4200E000<32>
	word32 s1_110 = 0x23086164<32>
l2303BC48:
	word32 s4_113
	word32 a0_42 = sys_timeouts_sleeptime(a5_106)
	branch a0_42 != s2_111 l2303BC72
l2303BC72:
	branch a0_42 != 0<32> l2303BC7A
l2303BC7A:
	word32 a0_55
	s0 = sys_arch_mbox_fetch(s3_112 + -268<i32>, sp_164 + 12<i32>, a0_42, a3, a4, mstatus, Mem20[sp_164 + 100<i32>:word32], Mem20[sp_164 + 216<i32>:word32], Mem20[sp_164 + 280<i32>:word32], out s1_110, out a0_55, out a1, out a3, out a4, out a5_106, out s2_111, out s3_112, out s4_113)
	branch a0_55 == s2_111 l2303BC74
l2303BC88:
l2303BC74:
	s0 = sys_check_timeouts(ra, s0, s1_110, a1, mstatus, out a1, out a3, out a4, out a5_106, out s2_111, out s3_112)
l2303BC52:
	word32 a0_203
	s0 = sys_arch_mbox_fetch(s3_112 + -268<i32>, sp_164 + 12<i32>, 0<32>, a3, a4, mstatus, Mem20[sp_164 + 100<i32>:word32], Mem20[sp_164 + 216<i32>:word32], Mem20[sp_164 + 280<i32>:word32], out s1_110, out a0_203, out a1, out a3, out a4, out a5_106, out s2_111, out s3_112, out s4_113)
l2303BC5E:
	branch s0 == 0<32> l2303BC48
l2303BC62:
	a5_106 = CONVERT(Mem20[s0:byte], byte, word32)
	branch a5_106 >u 4<32> l2303BC48
l2303BC6A:
	word32 a5_132 = Mem20[(a5_106 << 2<i32>) + s1_110:word32]
	word32 a4_146
	word32 a1_149
	word32 mstatus_150
	word32 a3_151
	call a5_132 (retsize: 0;)
		uses: a1:a1_149,a3:a3_151,a4:a4_146,a5:a5_132,mstatus:mstatus_150,ra:ra_177,s0:s0_125,s1:s1_130,s2:s2_134,s3:s3_135,s4:s4_136,s5:4<32>
		defs: a1:a1_149,a3:a3_151,a4:a4_146,mstatus:mstatus_150
	return
tcpip_thread_exit:


void tcpip_inpkt(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_inpkt_entry:
l2303BCCE:
	sys_mbox_valid(0x4200DEF4<32>)
	word32 a0_25
	word32 a3_28
	word32 a4_29
	word32 a2_212
	word32 a5_213
	word32 s1_30 = memp_malloc(0x4200E000<32>, 9<32>, a3, a4, mstatus, out a0_25, out a2_212, out a3_28, out a4_29, out a5_213)
	branch a0_25 != 0<32> l2303BD10
l2303BD10:
	Mem35[a1 + 8<i32>:word32] = a0_25
	Mem37[a0_25:byte] = 2<8>
	Mem38[a0_25 + 4<i32>:word32] = a0
	Mem39[dwArg44 + 12<i32>:word32] = a0_25
	word32 a0_42
	word32 a3_45
	word32 s1_233
	word32 a1_234
	word32 a4_235
	word32 a5_236
	word32 a7_237
	word32 s2_238
	word32 s3_239
	word32 s4_240
	word32 s5_241
	word32 s6_242
	word32 s0_50 = sys_mbox_trypost(s1_30 + -268<i32>, a4_29, 2<32>, mstatus, a2, a1, dwArgD8, dwArg0118, dwArg0158, out s1_233, out a0_42, out a1_234, out a3_45, out a4_235, out a5_236, out a7_237, out s2_238, out s3_239, out s4_240, out s5_241, out s6_242)
	branch a0_42 == 0<32> l2303BD04
l2303BD2C:
	word32 a3_72
	word32 a4_73
	word32 s1_243
	word32 a0_244
	word32 a1_245
	word32 a2_246
	word32 a5_247
	word32 a7_248
	word32 s2_249
	word32 s3_250
	word32 s4_251
	word32 s5_252
	word32 s6_253
	word32 s7_254
	word32 s8_255
	word32 s9_256
	word32 s10_257
	word32 s11_258
	word32 t4_259
	printf(ra, 0x23086194<32>, a3_45, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_243, out a0_244, out a1_245, out a2_246, out a3_72, out a4_73, out a5_247, out a7_248, out s2_249, out s3_250, out s4_251, out s5_252, out s6_253, out s7_254, out s8_255, out s9_256, out s10_257, out s11_258, out t4_259)
	word32 a0_260
	word32 a2_261
	word32 a3_262
	word32 a4_263
	word32 a5_264
	memp_free(9<32>, s0_50, a3_72, a4_73, mstatus, out a0_260, out a2_261, out a3_262, out a4_263, out a5_264)
l2303BCF6:
	word32 s1_214
	word32 a0_215
	word32 a1_216
	word32 a2_217
	word32 a3_218
	word32 a4_219
	word32 a5_220
	word32 a7_221
	word32 s2_222
	word32 s3_223
	word32 s4_224
	word32 s5_225
	word32 s6_226
	word32 s7_227
	word32 s8_228
	word32 s9_229
	word32 s10_230
	word32 s11_231
	word32 t4_232
	printf(ra, 0x23086180<32>, a3_28, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_214, out a0_215, out a1_216, out a2_217, out a3_218, out a4_219, out a5_220, out a7_221, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_227, out s8_228, out s9_229, out s10_230, out s11_231, out t4_232)
l2303BD02:
l2303BD04:
	return
tcpip_inpkt_exit:


void tcpip_input(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_input_entry:
l2303BD42:
	word32 a2_10
	branch (CONVERT(Mem0[a1 + 65<i32>:byte], byte, word32) & 0x18<32>) == 0<32> l2303BD56
l2303BD56:
	a2_10 = 0x2303F4C0<32>
l2303BD4A:
	a2_10 = 0x23045AD6<32>
l2303BD52:
l2303BD52_thunk_tcpip_inpkt:
	tcpip_inpkt(ra, a0, a1, a2_10, a3, a4, s2, mstatus, dwArg08, dwArg44, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgD8, dwArg0118, dwArg0158)
	return
tcpip_input_exit:


word32 tcpip_callback(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt
//      cmd_netstat
//      cmd_sntp_start
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s3 s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_callback_entry:
l2303BD60:
	word32 a0_28
	sys_mbox_valid(0x4200DEF4<32>)
	word32 s0_44 = 0x4200E000<32>
	word32 a0_21
	word32 a2_119
	word32 a5_120
	word32 a3_24
	word32 a4_25
	word32 s1_26 = memp_malloc(a0, 8<32>, a3, a4, mstatus, out a0_21, out a2_119, out a3_24, out a4_25, out a5_120)
	branch a0_21 == 0<32> l2303BDA2
l2303BDA2:
	a0_28 = 0xFFFFFFFF<32>
l2303BD80:
	Mem31[a0_21:byte] = 3<8>
	Mem32[a1 + 8<i32>:word32] = a0_21
	Mem33[s1_26 + 4<i32>:word32] = a0_21
	word32 s5_121
	s0_44 = sys_mbox_post(0x4200DEF4<32>, a4_25, 3<32>, mstatus, dwLoc1C, a1, dwArgD8, dwArg0118, dwArg0158, out s1_26, out a3_24, out a4_25, out s2, out s3, out s5_121, out s6)
	a0_28 = 0<32>
l2303BD98:
	s1Out = s1_26
	a0Out = a0_28
	a3Out = a3_24
	a4Out = a4_25
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s6Out = s6
	return s0_44
tcpip_callback_exit:


word32 tcpip_try_callback(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_alloc
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_try_callback_entry:
l2303BDA6:
	word32 a0_101
	sys_mbox_valid(0x4200DEF4<32>)
	word32 s2_10 = a0
	word32 a0_23
	word32 a2_159
	word32 a3_106
	word32 a4_108
	word32 a5_110
	word32 s1_117 = memp_malloc(0x4200E000<32>, 8<32>, a3, a4, mstatus, out a0_23, out a2_159, out a3_106, out a4_108, out a5_110)
	branch a0_23 == 0<32> l2303BDEC
l2303BDC8:
	Mem33[a1 + 8<i32>:word32] = a0_23
	Mem34[a0_23:byte] = 3<8>
	Mem35[a0_23 + 4<i32>:word32] = a0
	word32 s4_160
	s0 = sys_mbox_trypost(s1_117 + -268<i32>, a4_108, 3<32>, mstatus, dwLoc1C, a1, dwArgD8, dwArg0118, dwArg0158, out s1_117, out a0_101, out a1, out a3_106, out a4_108, out a5_110, out a7, out s2_10, out s3, out s4_160, out s5, out s6)
	branch a0_101 == 0<32> l2303BDEE
l2303BDE4:
	a1 = s0
	word32 a0_161
	word32 a2_162
	s1_117 = memp_free(8<32>, s0, a3_106, a4_108, mstatus, out a0_161, out a2_162, out a3_106, out a4_108, out a5_110)
l2303BDEC:
	a0_101 = 0xFFFFFFFF<32>
l2303BDEE:
	s1Out = s1_117
	a0Out = a0_101
	a1Out = a1
	a3Out = a3_106
	a4Out = a4_108
	a5Out = a5_110
	a7Out = a7
	s2Out = s2_10
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	return s0
tcpip_try_callback_exit:


word32 tcpip_send_msg_wait_sem(word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_apimsg
//      netconn_gethostbyname
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_send_msg_wait_sem_entry:
l2303BDFA:
	sys_sem_valid(a2)
	sys_mbox_valid(0x4200DEF4<32>)
	word32 a3_33
	word32 a4_34
	word32 s2_40
	word32 s5_43
	word32 s6_44
	word32 s1_103
	word32 s3_104
	sys_mbox_post(0x4200DEF4<32>, a4, a5, mstatus, a2, a1, dwArgC8, dwArg0108, dwArg0148, out s1_103, out a3_33, out a4_34, out s2_40, out s3_104, out s5_43, out s6_44)
	word32 a1_57
	word32 a3_59
	word32 a4_60
	word32 a5_61
	word32 s1_64
	word32 s2_65
	word32 s3_66
	word32 s4_67
	word32 a0_105
	sys_arch_sem_wait(0<32>, a3_33, a4_34, s2_40, mstatus, a2, dwArg14, a1, dwArgC8, dwArg0108, out s1_64, out a0_105, out a1_57, out a3_59, out a4_60, out a5_61, out s2_65, out s3_66, out s4_67)
	s1Out = s1_64
	a0Out = 0<32>
	a1Out = a1_57
	a3Out = a3_59
	a4Out = a4_60
	a5Out = a5_61
	s2Out = s2_65
	s3Out = s3_66
	s4Out = s4_67
	s5Out = s5_43
	s6Out = s6_44
	return dwArgE4
tcpip_send_msg_wait_sem_exit:


word32 tcpip_api_call(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netifapi_netif_add
//      netifapi_netif_set_addr
//      netifapi_netif_common
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_api_call_entry:
l2303BE44:
	word32 a0_25
	word32 a1_170
	word32 a2_171
	word32 s4_172
	word32 a5_141
	word32 a4_140
	word32 a3_139
	word32 s2_146
	word32 s3_147
	word32 s1_145 = sys_sem_new(ra, a3, a4, a5, mstatus, s2, s0, ra, dwArgD8, dwArg0118, dwArg0158, out a0_25, out a1_170, out a2_171, out a3_139, out a4_140, out a5_141, out s2_146, out s3_147, out s4_172)
	branch a0_25 != 0<32> l2303BE96
l2303BE62:
	sys_mbox_valid(0x4200DEF4<32>)
	word32 a3_52
	word32 a4_53
	word32 s2_59
	word32 s1_173
	word32 s3_174
	word32 s5_175
	word32 s6_176
	sys_mbox_post(0x4200DEF4<32>, a4_140, 1<32>, mstatus, a1, s1_145, dwArgC8, dwArg0108, dwArg0148, out s1_173, out a3_52, out a4_53, out s2_59, out s3_174, out s5_175, out s6_176)
	word32 a3_77
	word32 s1_82
	word32 a0_177
	word32 a1_178
	word32 a4_179
	word32 a5_180
	word32 s4_181
	sys_arch_sem_wait(0<32>, a3_52, a4_53, s2_59, mstatus, a1, dwArg14, s1_145, dwArgC8, dwArg0108, out s1_82, out a0_177, out a1_178, out a3_77, out a4_179, out a5_180, out s2_146, out s3_147, out s4_181)
	word32 a1_182
	word32 a2_183
	word32 s4_184
	sys_sem_free(s1_82, a3_77, mstatus, dwArg0128, dwArg0168, out s1_145, out a1_182, out a2_183, out a3_139, out a4_140, out a5_141, out s4_184)
l2303BE96:
	0<32> = dwArg0128
	s1Out = s1_145
	a3Out = a3_139
	a4Out = a4_140
	a5Out = a5_141
	s2Out = s2_146
	s3Out = s3_147
	return dwArgE4
tcpip_api_call_exit:


word32 tcpip_init(word32 ra, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg40, word32 dwArg68, word32 dwArg8C, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0040:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a6 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_init_entry:
l2303BEA4:
	word32 a0_11
	word32 a1_12
	word32 a3_14
	word32 a4_15
	word32 ra_19 = lwip_init(ra, mstatus, dwLoc08, dwArg14, dwArg18, dwArg40, dwArg68, dwArg8C, dwArgC8, dwArg0108, dwArg0148, out a0_11, out a1_12, out a3_14, out a4_15)
	Mem42[0x4200EEEC<32>:word32] = a0_11
	Mem45[0x4200EEF0<32>:word32] = a1_12
	word32 s3_57
	word32 a0_115
	word32 a2_116
	word32 a3_117
	word32 a4_118
	word32 a5_119
	word32 s2_120
	word32 s4_121
	word32 s1_55 = sys_mbox_new(ra_19, a3_14, a4_15, 0x4200E000<32>, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out a0_115, out a2_116, out a3_117, out a4_118, out a5_119, out s2_120, out s3_57, out s4_121)
l2303BEF2_thunk_sys_thread_new:
	word32 a6_78
	word32 ra_80 = sys_thread_new(ra_19, s1_55, 0<32>, 0xFFFFA0<32>, 0x1E<32>, s3_57, mstatus, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out a6_78)
	a6Out = a6_78
	return ra_80
tcpip_init_exit:


word32 altcp_alloc(word32 ra, word32 s1, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_accept
//      altcp_tcp_new_ip_type
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: a2 a3 a4 ra s1
// Trashed: a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: s0 sp
altcp_alloc_entry:
l2303BEF6:
	word32 a0_13
	word32 a2_60
	word32 a5_61
	word32 a3_16
	word32 a4_17
	word32 s1_18 = memp_malloc(s1, 5<32>, a3, a4, mstatus, out a0_13, out a2_60, out a3_16, out a4_17, out a5_61)
	branch a0_13 == 0<32> l2303BF10
l2303BF06:
	word32 t1_62
	word32 a0_63
	word32 a1_64
	word32 a2_65
	word32 a5_66
	ra = memset(ra, a0_13, 0<32>, 44<i32>, out t1_62, out a0_63, out a1_64, out a2_65, out a3_16, out a4_17, out a5_66)
l2303BF10:
	s1Out = s1_18
	a2Out = dwArg10
	a3Out = a3_16
	a4Out = a4_17
	return ra
altcp_alloc_exit:


void altcp_free(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_err
//      altcp_tcp_close
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: ra sp t3
altcp_free_entry:
l2303BF1A:
	branch a0 == 0<32> l2303BF3A
l2303BF3A:
	return
l2303BF1C:
	word32 a0_6 = Mem0[a5:word32]
	word32 a1_17 = a0_6
	branch a5 == 0<32> l2303BF3C
l2303BF22:
	word32 a5_8 = Mem0[a5 + 68<i32>:word32]
	branch a5_8 == 0<32> l2303BF3C
l2303BF3C:
l2303BF26:
	word32 sp_14
	word32 tp_50
	word32 s1_49
	call a5_8 (retsize: 0;)
		uses: a0:a0_6,a1:a1_17,a2:a2_21,a3:a3,a4:a4,a5:a5_8,mstatus:mstatus,ra:ra,s1:s1_49,Stack +0084:a0_6,Stack +008C:ra,t3:t3_22,tp:tp_50
		defs: a1:a1_17,s1:s1_49,sp:sp_14,tp:tp_50
	word32 a2_21 = Mem13[sp_14 + 100<i32>:word32]
	word32 t3_22 = Mem13[sp_14 + 32<i32>:word32]
l2303BF36:
l2303BF36_thunk_memp_free:
	word32 a4_77
	word32 a3_76
	word32 a2_75
	word32 a0_74
	word32 a5_78
	memp_free(5<32>, a1_17, a3, a4, mstatus, out a0_74, out a2_75, out a3_76, out a4_77, out a5_78)
	return
altcp_free_exit:


word32 altcp_new_ip_type(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_new
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s2 s3 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_new_ip_type_entry:
l2303BF40:
	branch a0 != 0<32> l2303BF48
l2303BF48:
	word32 t1_8 = Mem0[a0:int32]
	branch t1_8 == 0<32> l2303BF54
l2303BF54:
	s1Out = s1
	a0Out = 0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s9Out = s9
	s10Out = s10
	mstatusOut = mstatus
	return ra
l2303BF50:
	word32 a0_12
	word32 ra_52
	word32 s1_53
	word32 s3_54
	word32 mstatus_55
	word32 a4_56
	word32 a3_57
	word32 s4_58
	word32 a2_60
	word32 a6_61
	word32 a7_62
	word32 s10_63
	word32 s11_64
	word32 s2_65
	word32 s5_66
	word32 s6_67
	word32 s8_68
	word32 s9_69
	word32 t0_70
	word32 t3_71
	word32 t4_72
	word32 t5_73
	word32 t6_74
	word32 tp_75
	call t1_8 (retsize: 0;)
		uses: a0:a1,a1:a1,a2:a2_60,a3:a3,a4:a4,a5:Mem0[a1 + 4<i32>:word32],a6:a6_61,a7:a7_62,mstatus:mstatus,ra:ra,s1:s1,s10:s10_63,s11:s11_64,s2:s2_65,s3:s3,s4:s4,s5:s5_66,s6:s6_67,s7:s7,s8:s8_68,s9:s9_69,Stack +0000:dwArg00,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0044:dwArg44,Stack +0048:dwArg48,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0078:dwArg78,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00AC:dwArgAC,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00CC:dwArgCC,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +00EC:dwArgEC,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,t0:t0_70,t3:t3_71,t4:t4_72,t5:t5_73,t6:t6_74,tp:tp_75
		defs: a0:a0_12,a2:a2_60,a3:a3_57,a4:a4_56,a6:a6_61,a7:a7_62,mstatus:mstatus_55,ra:ra_52,s1:s1_53,s10:s10_63,s11:s11_64,s2:s2_65,s3:s3_54,s4:s4_58,s5:s5_66,s6:s6_67,s8:s8_68,s9:s9_69,t0:t0_70,t3:t3_71,t4:t4_72,t5:t5_73,t6:t6_74,tp:tp_75
	s1Out = s1_53
	a0Out = a0_12
	a3Out = a3_57
	a4Out = a4_56
	s2Out = s2_65
	s3Out = s3_54
	s4Out = s4_58
	s9Out = s9_69
	s10Out = s10_63
	mstatusOut = mstatus_55
	return ra_52
l2303BF46:
l2303BF46_thunk_altcp_tcp_new_ip_type:
	altcp_tcp_new_ip_type(ra, s1, a3, a4, s3, s4, s7, mstatus, dwArg00, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgEC, dwArgF8, dwArg0108)
	s1Out = s1_34
	a0Out = a0_24
	a3Out = a3_27
	a4Out = a4_28
	s2Out = s2_37
	s3Out = s3_38
	s4Out = s4_39
	s9Out = s9_44
	s10Out = s10_35
	mstatusOut = mstatus_32
	return ra_33
altcp_new_ip_type_exit:


word32 altcp_new(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_init_connection_common.constprop.5
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s2 s3 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_new_entry:
l2303BF58:
l2303BF5A_thunk_altcp_new_ip_type:
	word32 a0_14
	word32 a3_19
	word32 a4_20
	word32 mstatus_23
	word32 s1_25
	word32 s10_26
	word32 s2_28
	word32 s3_29
	word32 s4_30
	word32 s9_35
	word32 ra_24 = altcp_new_ip_type(ra, s1, a0, 0<32>, a3, a4, s3, s4, s7, mstatus, dwArg00, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgEC, dwArgF8, dwArg0108, out s1_25, out a0_14, out a3_19, out a4_20, out s2_28, out s3_29, out s4_30, out s9_35, out s10_26, out mstatus_23)
	s1Out = s1_25
	a0Out = a0_14
	a3Out = a3_19
	a4Out = a4_20
	s2Out = s2_28
	s3Out = s3_29
	s4Out = s4_30
	s9Out = s9_35
	s10Out = s10_26
	mstatusOut = mstatus_23
	return ra_24
altcp_new_exit:


void altcp_arg(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_free_state
//      httpc_init_connection_common.constprop.5
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
altcp_arg_entry:
l2303BF5E:
	branch a0 == 0<32> l2303BF62
l2303BF60:
	Mem5[a1 + 8<i32>:word32] = a0
l2303BF62:
	return
altcp_arg_exit:


void altcp_recv(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_free_state
//      httpc_init_connection_common.constprop.5
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
altcp_recv_entry:
l2303BF64:
	branch a0 == 0<32> l2303BF68
l2303BF66:
	Mem5[a1 + 24<i32>:word32] = a0
l2303BF68:
	return
altcp_recv_exit:


void altcp_sent(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_free_state
//      httpc_init_connection_common.constprop.5
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
altcp_sent_entry:
l2303BF6A:
	branch a0 == 0<32> l2303BF6E
l2303BF6C:
	Mem5[a1 + 28<i32>:word32] = a0
l2303BF6E:
	return
altcp_sent_exit:


word32 altcp_poll(word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_free_state
//      httpc_init_connection_common.constprop.5
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a5 t1
// Preserved: sp
altcp_poll_entry:
l2303BF70:
	branch a0 == 0<32> l2303BF88
l2303BF72:
	a0 = Mem0[a5:word32]
	Mem8[a1 + 32<i32>:word32] = a0
	Mem10[a0 + 40<i32>:byte] = SLICE(a2, byte, 0)
	branch a5 == 0<32> l2303BF88
l2303BF7C:
	word32 t1_11 = Mem10[a5:int32]
	branch t1_11 == 0<32> l2303BF88
l2303BF88:
	a5Out = a5
	return a0
l2303BF84:
	word32 a0_14
	word32 a5_15
	word32 t1_18
	call t1_11 (retsize: 0;)
		uses: a0:a0_6,a1:a2,a2:a2,a5:a5,t1:t1_18
		defs: a0:a0_14,a5:a5_15,t1:t1_18
	a5Out = a5_15
	return a0_14
altcp_poll_exit:


void altcp_err(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_free_state
//      httpc_init_connection_common.constprop.5
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
altcp_err_entry:
l2303BF8A:
	branch a0 == 0<32> l2303BF8E
l2303BF8C:
	Mem5[a1 + 36<i32>:word32] = a0
l2303BF8E:
	return
altcp_err_exit:


word32 altcp_recved(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cb_altcp_recv_fn
//      httpc_tcp_recv
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_recved_entry:
l2303BF90:
	branch a0 == 0<32> l2303BFA0
l2303BF92:
	a0 = Mem0[a5:word32]
	branch a5 == 0<32> l2303BFA0
l2303BF96:
	word32 t1_7 = Mem0[a5 + 4<i32>:int32]
	branch t1_7 == 0<32> l2303BFA0
l2303BFA0:
	a5Out = a5
	return a0
l2303BF9E:
	word32 a0_9
	word32 a5_10
	word32 t1_11
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_11
		defs: a0:a0_9,a5:a5_10,t1:t1_11
	a5Out = a5_10
	return a0_9
altcp_recved_exit:


word32 altcp_connect(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_get_internal_addr
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_connect_entry:
l2303BFA2:
	branch a0 == 0<32> l2303BFB2
l2303BFA4:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l2303BFB2
l2303BFA8:
	word32 t1_7 = Mem0[a5 + 12<i32>:int32]
	branch t1_7 == 0<32> l2303BFB2
l2303BFB2:
	a5Out = a5
	return 0xFFFFFFFA<32>
l2303BFB0:
	word32 a0_10
	word32 a5_11
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: a0:a0_10,a5:a5_11,t1:t1_12
	a5Out = a5_11
	return a0_10
altcp_connect_exit:


void altcp_abort(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_free_state
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_abort_entry:
l2303BFB6:
	branch a0 == 0<32> l2303BFC6
l2303BFB8:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l2303BFC6
l2303BFBC:
	word32 t1_7 = Mem0[a5 + 20<i32>:int32]
	branch t1_7 == 0<32> l2303BFC6
l2303BFC6:
	return
l2303BFC4:
	word32 t1_11
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_11
		defs: t1:t1_11
	return
altcp_abort_exit:


word32 altcp_close(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_free_state
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_close_entry:
l2303BFC8:
	branch a0 == 0<32> l2303BFD8
l2303BFCA:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l2303BFD8
l2303BFCE:
	word32 t1_7 = Mem0[a5 + 24<i32>:int32]
	branch t1_7 == 0<32> l2303BFD8
l2303BFD8:
	a5Out = a5
	return 0xFFFFFFFA<32>
l2303BFD6:
	word32 a0_10
	word32 a5_11
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: a0:a0_10,a5:a5_11,t1:t1_12
	a5Out = a5_11
	return a0_10
altcp_close_exit:


word32 altcp_write(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_connected
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_write_entry:
l2303BFDC:
	branch a0 == 0<32> l2303BFEC
l2303BFDE:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l2303BFEC
l2303BFE2:
	word32 t1_7 = Mem0[a5 + 32<i32>:int32]
	branch t1_7 == 0<32> l2303BFEC
l2303BFEC:
	a5Out = a5
	return 0xFFFFFFFA<32>
l2303BFEA:
	word32 a0_10
	word32 a5_11
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: a0:a0_10,a5:a5_11,t1:t1_12
	a5Out = a5_11
	return a0_10
altcp_write_exit:


void altcp_output(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_connected
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_output_entry:
l2303BFF0:
	branch a0 == 0<32> l2303C000
l2303BFF2:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l2303C000
l2303BFF6:
	word32 t1_7 = Mem0[a5 + 36<i32>:int32]
	branch t1_7 == 0<32> l2303C000
l2303C000:
	return
l2303BFFE:
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: t1:t1_12
	return
altcp_output_exit:


void altcp_tcp_connected(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 t1
// Preserved: sp
altcp_tcp_connected_entry:
l2303C004:
	branch a0 == 0<32> l2303C014
l2303C008:
	word32 t1_6 = Mem0[a0 + 20<i32>:int32]
	branch t1_6 == 0<32> l2303C014
l2303C014:
	return
l2303C010:
	word32 t1_12
	call t1_6 (retsize: 0;)
		uses: a0:Mem0[a0 + 8<i32>:word32],t1:t1_12
		defs: t1:t1_12
	return
altcp_tcp_connected_exit:


void altcp_tcp_sent(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 t1
// Preserved: sp
altcp_tcp_sent_entry:
l2303C018:
	branch a0 == 0<32> l2303C028
l2303C01C:
	word32 t1_6 = Mem0[a0 + 28<i32>:int32]
	branch t1_6 == 0<32> l2303C028
l2303C028:
	return
l2303C024:
	word32 t1_12
	call t1_6 (retsize: 0;)
		uses: a0:Mem0[a0 + 8<i32>:word32],t1:t1_12
		defs: t1:t1_12
	return
altcp_tcp_sent_exit:


void altcp_tcp_poll(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 t1
// Preserved: sp
altcp_tcp_poll_entry:
l2303C02C:
	branch a0 == 0<32> l2303C03C
l2303C030:
	word32 t1_6 = Mem0[a0 + 32<i32>:int32]
	branch t1_6 == 0<32> l2303C03C
l2303C03C:
	return
l2303C038:
	word32 t1_12
	call t1_6 (retsize: 0;)
		uses: a0:Mem0[a0 + 8<i32>:word32],t1:t1_12
		defs: t1:t1_12
	return
altcp_tcp_poll_exit:


void altcp_tcp_mss(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_mss_entry:
l2303C040:
	branch a0 == 0<32> l2303C04A
l2303C04A:
	return
l2303C042:
	return
altcp_tcp_mss_exit:


void altcp_tcp_sndbuf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_sndbuf_entry:
l2303C04E:
	branch a0 == 0<32> l2303C058
l2303C058:
	return
l2303C050:
	return
altcp_tcp_sndbuf_exit:


void altcp_tcp_sndqueuelen(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_sndqueuelen_entry:
l2303C05C:
	branch a0 == 0<32> l2303C066
l2303C066:
	return
l2303C05E:
	return
altcp_tcp_sndqueuelen_exit:


void altcp_tcp_nagle_disable(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a4
// Preserved: sp
altcp_tcp_nagle_disable_entry:
l2303C06A:
	branch a0 == 0<32> l2303C07C
l2303C06C:
	branch a5 == 0<32> l2303C07C
l2303C070:
	Mem9[a5 + 26<i32>:word16] = SLICE(CONVERT(Mem0[a5 + 26<i32>:uint16], uint16, word32) | 64<i32>, word16, 0)
l2303C07C:
	return
altcp_tcp_nagle_disable_exit:


void altcp_tcp_nagle_enable(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a4
// Preserved: sp
altcp_tcp_nagle_enable_entry:
l2303C07E:
	branch a0 == 0<32> l2303C090
l2303C080:
	branch a5 == 0<32> l2303C090
l2303C084:
	Mem9[a5 + 26<i32>:word16] = SLICE(CONVERT(Mem0[a5 + 26<i32>:uint16], uint16, word32) & -65<i32>, word16, 0)
l2303C090:
	return
altcp_tcp_nagle_enable_exit:


void altcp_tcp_nagle_disabled(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_nagle_disabled_entry:
l2303C092:
	branch a0 == 0<32> l2303C0A4
l2303C0A4:
l2303C094:
	branch a5 == 0<32> l2303C0A6
l2303C0A6:
	return
l2303C09A:
	return
altcp_tcp_nagle_disabled_exit:


void altcp_tcp_dealloc()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
altcp_tcp_dealloc_entry:
l2303C0A8:
	return
altcp_tcp_dealloc_exit:


void altcp_tcp_get_ip(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_get_ip_entry:
l2303C0AA:
	branch a0 == 0<32> l2303C0B4
l2303C0AC:
	branch Mem0[a0 + 12<i32>:word32] == 0<32> l2303C0B4
l2303C0B0:
	branch a1 != 0<32> l2303C0B4
l2303C0B2:
l2303C0B4:
	return
altcp_tcp_get_ip_exit:


void altcp_tcp_get_port(word32 a0, word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_get_port_entry:
l2303C0B6:
	branch a0 == 0<32> l2303C0CC
l2303C0CC:
l2303C0B8:
	branch a5 == 0<32> l2303C0CE
l2303C0CE:
	return
l2303C0BE:
	branch a1 == 0<32> l2303C0C6
l2303C0C6:
	return
l2303C0C0:
	return
altcp_tcp_get_port_exit:


word32 altcp_tcp_setup_callbacks(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_close
//      altcp_tcp_accept
//      altcp_tcp_new_ip_type
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2
// Preserved: s0 sp
altcp_tcp_setup_callbacks_entry:
l2303C0D0:
	tcp_arg(a1, a0)
	tcp_recv(a1, 0x2303C256<32>)
	tcp_sent(a1, 0x2303C018<32>)
l2303C10C_thunk_tcp_err:
	tcp_err(a1, 0x2303C110<32>)
	return a1
altcp_tcp_setup_callbacks_exit:


void altcp_tcp_err(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: ra s0 sp
altcp_tcp_err_entry:
l2303C110:
	branch a0 == 0<32> l2303C132
l2303C132:
	return
l2303C112:
	word32 a0_10 = Mem8[a5 + 36<i32>:word32]
	Mem11[a0_10 + 12<i32>:word32] = 0<32>
	word32 s0_12 = a0_10
	branch a5 == 0<32> l2303C126
l2303C122:
	word32 a2_19
	word32 a1_48
	word32 s1_49
	word32 tp_50
	call a5 (retsize: 0;)
		uses: a0:Mem11[a0_10 + 8<i32>:word32],a1:a1_48,a2:a2_19,a3:a3,a4:a4,a5:a5,mstatus:mstatus,ra:ra,s0:a0_10,s1:s1_49,tp:tp_50
		defs: a1:a1_48,a2:a2_19,a5:a5_18,ra:ra_17,s0:s0_16,s1:s1_49,tp:tp_50
l2303C126:
l2303C12E_thunk_altcp_free:
	altcp_free(ra, s0_12, a3, a4, a5, mstatus)
	return
altcp_tcp_err_exit:


void altcp_tcp_get_tcp_addrinfo(word32 a0, word32 a1, word32 a2, word32 a3, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
altcp_tcp_get_tcp_addrinfo_entry:
l2303C134:
	branch a0 == 0<32> l2303C13C
l2303C13C:
	return
l2303C136:
	word32 a0_6 = Mem0[a0 + 12<i32>:word32]
l2303C138_thunk_tcp_tcp_get_tcp_addrinfo:
	tcp_tcp_get_tcp_addrinfo(a0_6, a1, a2, a3, a5)
	return
altcp_tcp_get_tcp_addrinfo_exit:


void altcp_tcp_setprio(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 sp
altcp_tcp_setprio_entry:
l2303C140:
	branch a0 == 0<32> l2303C148
l2303C148:
	return
l2303C142:
	word32 a0_5 = Mem0[a0 + 12<i32>:word32]
l2303C144_thunk_tcp_setprio:
	tcp_setprio(a0_5, a1)
	return
altcp_tcp_setprio_exit:


void altcp_tcp_output(word32 ra, word32 s1, word32 a0, word32 a2, word32 s7, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_output_entry:
l2303C14A:
	branch a0 == 0<32> l2303C152
l2303C152:
	return
l2303C14C:
	word32 a0_6 = Mem0[a0 + 12<i32>:word32]
l2303C14E_thunk_tcp_output:
	word32 s0_108
	word32 s1_109
	word32 a0_110
	word32 a2_111
	word32 a3_112
	word32 a4_113
	word32 a5_114
	word32 s2_115
	word32 s3_116
	word32 s4_117
	word32 s5_118
	word32 s6_119
	word32 s7_120
	word32 s8_121
	word32 s9_122
	word32 s10_123
	word32 s11_124
	word32 mstatus_125
	tcp_output(ra, s1, a0_6, a2, s7, mstatus, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg010C, dwArg0118, out s0_108, out s1_109, out a0_110, out a2_111, out a3_112, out a4_113, out a5_114, out s2_115, out s3_116, out s4_117, out s5_118, out s6_119, out s7_120, out s8_121, out s9_122, out s10_123, out s11_124, out mstatus_125)
	return
altcp_tcp_output_exit:


void altcp_tcp_write(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg19, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0019:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_write_entry:
l2303C156:
	branch a0 == 0<32> l2303C15E
l2303C15E:
	return
l2303C158:
	word32 a0_6 = Mem0[a0 + 12<i32>:word32]
l2303C15A_thunk_tcp_write:
	word32 a0_104
	word32 a1_105
	word32 a2_106
	word32 a3_107
	word32 a5_108
	word32 s2_109
	word32 s3_110
	word32 s4_111
	word32 s5_112
	word32 s6_113
	word32 s7_114
	word32 s8_115
	word32 mstatus_116
	tcp_write(ra, s1, a0_6, a1, a2, a3, mstatus, dwArg04, dwArg19, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a0_104, out a1_105, out a2_106, out a3_107, out a5_108, out s2_109, out s3_110, out s4_111, out s5_112, out s6_113, out s7_114, out s8_115, out mstatus_116)
	return
altcp_tcp_write_exit:


void altcp_tcp_shutdown(word32 ra, word32 a0, word32 a1, word32 a2, word32 s4, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_shutdown_entry:
l2303C162:
	branch a0 == 0<32> l2303C16A
l2303C16A:
	return
l2303C164:
	word32 a0_6 = Mem0[a0 + 12<i32>:word32]
l2303C166_thunk_tcp_shutdown:
	word32 s1_112
	word32 a0_113
	word32 a3_114
	word32 a4_115
	word32 a5_116
	word32 s3_117
	word32 s4_118
	word32 s5_119
	word32 s6_120
	word32 s7_121
	word32 mstatus_122
	tcp_shutdown(ra, a0_6, a1, a2, s4, s7, mstatus, dwArg10, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArgFC, dwArg0108, dwArg0118, out s1_112, out a0_113, out a3_114, out a4_115, out a5_116, out s3_117, out s4_118, out s5_119, out s6_120, out s7_121, out mstatus_122)
	return
altcp_tcp_shutdown_exit:


void altcp_tcp_close(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_close_entry:
l2303C16E:
	branch a0 == 0<32> l2303C1D2
l2303C17E:
	word32 s1_17 = Mem13[s0 + 12<i32>:word32]
	branch s0 == 0<32> l2303C1E6
l2303C184:
	tcp_arg(s0, 0<32>)
	tcp_recv(s0, 0<32>)
	tcp_sent(s0, 0<32>)
	tcp_err(s0, 0<32>)
	word32 a2_27 = CONVERT(Mem13[s0 + 29<i32>:byte], byte, word32)
	tcp_poll(s0, 0<32>, a2_27)
	word32 a0_35
	word32 s3_49
	word32 s2_187
	word32 s4_188
	word32 s5_189
	word32 s6_190
	word32 s7_191
	word32 s8_192
	word32 s9_193
	word32 s10_194
	word32 s11_195
	ra = tcp_close(ra, s0, a2_27, a3, s4, s7, mstatus, dwLoc10, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, out s1_17, out a0_35, out a3, out a4, out a5, out s2_187, out s3_49, out s4_188, out s5_189, out s6_190, out s7_191, out s8_192, out s9_193, out s10_194, out s11_195, out mstatus)
	branch a0_35 == 0<32> l2303C1E2
l2303C1E2:
	Mem64[s1_17 + 12<i32>:word32] = 0<32>
l2303C1E6:
	altcp_free(ra, s1_17, a3, a4, a5, mstatus)
l2303C1BE:
	altcp_tcp_setup_callbacks(s1_17, s0)
	tcp_poll(s0, s3_49, CONVERT(Mem13[s0 + 29<i32>:byte], byte, word32))
l2303C1D2:
	return
altcp_tcp_close_exit:


void altcp_tcp_abort(word32 ra, word32 s1, word32 a0, word32 a3, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_abort_entry:
l2303C1F0:
	branch a0 == 0<32> l2303C1FA
l2303C1F2:
	word32 a0_5 = Mem0[a0 + 12<i32>:word32]
	branch a0_5 == 0<32> l2303C1FA
l2303C1FA:
	return
l2303C1F6:
l2303C1F6_thunk_tcp_abort:
	word32 mstatus_155
	word32 s11_154
	word32 s10_153
	word32 s9_152
	word32 s7_151
	word32 s6_150
	word32 s5_149
	word32 s3_147
	word32 s4_148
	word32 s2_146
	word32 a5_145
	word32 a4_144
	word32 a3_143
	word32 a0_142
	word32 s1_141
	word32 s0_140
	tcp_abort(ra, s1, a0_5, a3, s3, s4, s7, mstatus, dwArg00, dwArg04, dwArg28, dwArg38, dwArg48, dwArg58, dwArg74, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s0_140, out s1_141, out a0_142, out a3_143, out a4_144, out a5_145, out s2_146, out s3_147, out s4_148, out s5_149, out s6_150, out s7_151, out s9_152, out s10_153, out s11_154, out mstatus_155)
	return
altcp_tcp_abort_exit:


void altcp_tcp_listen(word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
altcp_tcp_listen_entry:
l2303C1FC:
	branch a0 != 0<32> l2303C210
l2303C210:
	word32 a2_66
	word32 a3_67
	word32 a4_68
	word32 a5_69
	word32 a0_16 = tcp_listen_with_backlog_and_err(s1, Mem7[a0 + 12<i32>:word32], a2, a3, a4, mstatus, dwArg24, dwArg28, out a2_66, out a3_67, out a4_68, out a5_69)
	branch a0_16 == 0<32> l2303C204
l2303C21A:
	Mem25[a0_16 + 12<i32>:word32] = a0
	tcp_accept(a0_16, 0x2303C292<32>)
l2303C204:
l2303C206:
	return
altcp_tcp_listen_exit:


void altcp_tcp_connect(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg38, word32 dwArg48, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_connect_entry:
l2303C22A:
	branch a0 == 0<32> l2303C23C
l2303C23C:
	return
l2303C22C:
	Mem6[a3 + 20<i32>:word32] = a0
	word32 a0_7 = Mem6[a0 + 12<i32>:word32]
l2303C238_thunk_tcp_connect:
	word32 s1_113
	word32 a0_114
	word32 a4_115
	word32 a5_116
	word32 mstatus_117
	tcp_connect(ra, s1, a0_7, a1, a2, 0x2303C004<32>, s7, mstatus, dwArg04, dwArg24, dwArg38, dwArg48, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArg0118, out s1_113, out a0_114, out a4_115, out a5_116, out mstatus_117)
	return
altcp_tcp_connect_exit:


void altcp_tcp_bind(word32 s1, word32 a0, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg24, word32 dwArg44)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +0044:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s8 t1 t3 tp
// Preserved: sp
altcp_tcp_bind_entry:
l2303C240:
	branch a0 == 0<32> l2303C248
l2303C248:
	return
l2303C242:
	word32 a0_6 = Mem0[a0 + 12<i32>:word32]
l2303C244_thunk_tcp_bind:
	word32 a4_52
	tcp_bind(s1, a0_6, a1, a2, a5, mstatus, dwArg24, dwArg44, out a4_52)
	return
altcp_tcp_bind_exit:


void altcp_tcp_recved(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_recved_entry:
l2303C24C:
	branch a0 == 0<32> l2303C254
l2303C254:
	return
l2303C24E:
	word32 a0_5 = Mem0[a0 + 12<i32>:word32]
l2303C250_thunk_tcp_recved:
	word32 s0_108
	word32 s1_109
	word32 a0_110
	word32 a2_111
	word32 a3_112
	word32 a4_113
	word32 a5_114
	word32 s3_115
	word32 s4_116
	word32 s7_117
	word32 s9_118
	word32 s10_119
	word32 s11_120
	word32 mstatus_121
	tcp_recved(ra, s1, a0_5, a1, a2, a3, s7, mstatus, dwArg10, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg010C, dwArg0118, out s0_108, out s1_109, out a0_110, out a2_111, out a3_112, out a4_113, out a5_114, out s3_115, out s4_116, out s7_117, out s9_118, out s10_119, out s11_120, out mstatus_121)
	return
altcp_tcp_recved_exit:


void altcp_tcp_recv(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg10, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0010:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_recv_entry:
l2303C256:
	branch a0 == 0<32> l2303C268
l2303C25C:
	word32 t1_8 = Mem0[a0 + 24<i32>:int32]
	branch t1_8 == 0<32> l2303C268
l2303C268:
	branch a2 == 0<32> l2303C27A
l2303C27A:
	return
l2303C26A:
	word32 mstatus_162
	word32 s8_161
	word32 s6_160
	word32 s5_159
	word32 s4_158
	word32 s3_157
	word32 s2_156
	word32 a7_155
	word32 a5_154
	word32 a4_153
	word32 a3_152
	word32 a2_151
	word32 a1_150
	word32 a0_149
	word32 s1_148
	word32 s0_147
	pbuf_free(ra, a2, a3, a4, s4, mstatus, dwArg0118, out s0_147, out s1_148, out a0_149, out a1_150, out a2_151, out a3_152, out a4_153, out a5_154, out a7_155, out s2_156, out s3_157, out s4_158, out s5_159, out s6_160, out s8_161, out mstatus_162)
	return
l2303C264:
	word32 t1_57
	word32 s0_63
	word32 t3_64
	word32 tp_65
	word32 a5_66
	word32 s1_67
	word32 s2_68
	word32 s3_69
	word32 a6_70
	word32 a7_71
	word32 s5_72
	word32 s6_73
	word32 s8_74
	word32 t0_75
	word32 t4_76
	word32 t5_77
	word32 t6_78
	call t1_8 (retsize: 0;)
		uses: a0:a2,a1:Mem0[a2 + 8<i32>:word32],a2:a2,a3:a3,a4:a4,a5:a5_66,a6:a6_70,a7:a7_71,mstatus:mstatus,ra:ra,s0:s0_63,s1:s1_67,s2:s2_68,s3:s3_69,s4:s4,s5:s5_72,s6:s6_73,s8:s8_74,Stack +0010:dwArg10,Stack +0118:dwArg0118,t0:t0_75,t1:t1_57,t3:t3_64,t4:t4_76,t5:t5_77,t6:t6_78,tp:tp_65
		defs: a5:a5_66,a6:a6_70,a7:a7_71,s0:s0_63,s1:s1_67,s2:s2_68,s3:s3_69,s5:s5_72,s6:s6_73,s8:s8_74,t0:t0_75,t1:t1_57,t3:t3_64,t4:t4_76,t5:t5_77,t6:t6_78,tp:tp_65
	return
altcp_tcp_recv_exit:


void altcp_tcp_set_poll(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a2
// Preserved: a0 a1 sp
altcp_tcp_set_poll_entry:
l2303C27E:
	branch a0 == 0<32> l2303C290
l2303C290:
	return
l2303C282:
	word32 a0_7 = Mem0[a0 + 12<i32>:word32]
l2303C28C_thunk_tcp_poll:
	tcp_poll(a0_7, 0x2303C02C<32>, a1)
	return
altcp_tcp_set_poll_exit:


void altcp_tcp_accept(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg48)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0048:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
altcp_tcp_accept_entry:
l2303C292:
	branch a0 == 0<32> l2303C2DE
l2303C294:
	word32 a0_6 = Mem0[a5 + 16<i32>:word32]
	branch a5 == 0<32> l2303C2DE
l2303C2DE:
	return
l2303C298:
	word32 a3_28
	word32 a4_29
	word32 a2_140
	word32 s1_139
	word32 ra_34 = altcp_alloc(ra, s1, a3, a4, mstatus, out s1_139, out a2_140, out a3_28, out a4_29)
	branch a0_6 == 0<32> l2303C2E2
l2303C2E2:
	return
l2303C2B2:
	word32 a0_46 = altcp_tcp_setup_callbacks(a0_6, a1)
	Mem51[a0_6 + 12<i32>:word32] = a1
	Mem52[0x230861A8<32>:word32] = a0_6
	word32 t1_72
	word32 tp_80
	word32 t0_81
	call Mem52[a0_6 + 16<i32>:int32] (retsize: 0;)
		uses: a0:a0_46,a1:a0_6,a2:dwArg48,a3:a3_28,a4:a4_29,a5:0x230861A8<32>,a6:dwArg28,mstatus:mstatus,ra:ra_34,s0:Mem52[a0_46 + 8<i32>:word32],s1:a0_6,s2:a1,s3:a2,s4:dwArg04,s8:dwLoc1C,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +0048:dwArg48,Stack +FFFFFFE4:dwLoc1C,t0:t0_81,t1:t1_72,t3:dwArg00,tp:tp_80
		defs: t0:t0_81,t1:t1_72,tp:tp_80
	return
altcp_tcp_accept_exit:


void altcp_tcp_new_ip_type(word32 ra, word32 s1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_new
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
altcp_tcp_new_ip_type_entry:
l2303C2F2:
	word32 a0_16
	word32 a3_19
	word32 a4_20
	word32 mstatus_24
	word32 s4_32
	word32 s7_35
	word32 s1_163
	word32 a5_164
	word32 ra_25 = tcp_new_ip_type(ra, s1, a3, a4, s3, s4, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgCC, dwArgD8, out s1_163, out a0_16, out a3_19, out a4_20, out a5_164, out s4_32, out s7_35, out mstatus_24)
	branch a0_16 == 0<32> l2303C31E
l2303C302:
	word32 a2_47
	word32 a3_48
	word32 s1_51
	word32 a4_165
	word32 ra_54 = altcp_alloc(ra_25, a0_16, a3_19, a4_20, mstatus_24, out s1_51, out a2_47, out a3_48, out a4_165)
	branch a0_16 == 0<32> l2303C32A
l2303C32A:
	word32 s1_166
	word32 a0_167
	word32 a3_168
	word32 a4_169
	word32 a5_170
	word32 s2_171
	word32 s3_172
	word32 s4_173
	word32 s5_174
	word32 s6_175
	word32 s7_176
	word32 s8_177
	word32 s9_178
	word32 s10_179
	word32 s11_180
	word32 mstatus_181
	tcp_close(ra_54, s1_51, a2_47, a3_48, s4_32, s7_35, mstatus_24, dwArg00, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD8, dwArgDC, dwArgE8, dwArgEC, dwArgF8, dwArg0108, out s1_166, out a0_167, out a3_168, out a4_169, out a5_170, out s2_171, out s3_172, out s4_173, out s5_174, out s6_175, out s7_176, out s8_177, out s9_178, out s10_179, out s11_180, out mstatus_181)
l2303C30C:
	altcp_tcp_setup_callbacks(a0_16, s1_51)
	Mem93[s1_51 + 12<i32>:word32] = a0_16
	Mem94[0x230861A8<32>:word32] = a0_16
l2303C31E:
	return
altcp_tcp_new_ip_type_exit:


word32 lwip_htons(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_test_cmd
//      ota_tcp_cmd
//      get_dns_request
//      lwip_getaddrinfo
//      lwip_sock_make_addr.isra.3
//      lwip_accept
//      lwip_bind
//      lwip_connect
//      lwip_sendto
//      dns_check_entry
//      dns_recv
//      ip_chksum_pseudo
//      ip_chksum_pseudo_partial
//      etharp_request
//      ip4_input
//      ip4_output_if_opt
//      tcp_oos_insert_segment
//      tcp_free_acked_segments.isra.3
//      tcp_receive
//      tcp_input
//      tcp_create_segment
//      tcp_output_alloc_header_common.constprop.6
//      tcp_write
//      tcp_split_unsent_seg
//      tcp_send_fin
//      tcp_rexmit_rto_prepare
//      tcp_output
//      tcp_zero_window_probe
//      udp_input
//      udp_sendto
//      ethernet_output
//      tcpc_entry
//      TCP_Server
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      ping_free
//      ping_timeout
//      ping_recv
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
lwip_htons_entry:
l2303C332:
	a5Out = a0 << 8<u32>
	return CONVERT(SLICE(a0 >>u 8<i32> | a0 << 8<u32>, word16, 0), word16, word32)
lwip_htons_exit:


word32 lwip_htonl(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_recv
//      dhcp_create_msg
//      dhcp_select
//      dhcp_handle_ack.isra.3
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_stop
//      ip4addr_aton
//      tcp_free_acked_segments.isra.3
//      tcp_receive
//      tcp_input
//      tcp_create_segment
//      tcp_output_alloc_header_common.constprop.6
//      tcp_split_unsent_seg
//      tcp_rexmit_rto_prepare
//      tcp_rexmit
//      tcp_rst
//      tcp_send_empty_ack
//      tcp_output
//      tcp_keepalive
//      tcp_zero_window_probe
//      dhcp_server_recv
//      TCP_Server
//      iperf_client_udp
//      sntp_recv
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
lwip_htonl_entry:
l2303C340:
	a3Out = 0xFF0000<32>
	a4Out = 0xFFFFF00<32>
	word32 a5_10 = a0 << 0x18<u32> | a0 >>u 0x18<u32> | a0 << 8<u32> & 0xFF0000<32>
	a5Out = a5_10
	return a0 >>u 8<i32> & 0xFFFFF00<32> | a5_10
lwip_htonl_exit:


word32 lwip_strnicmp(word32 a0, word32 a1, word32 a2, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_gethostbyname
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
lwip_strnicmp_entry:
l2303C364:
	word32 a5_24 = 0<32>
l2303C36A:
	word32 a3_11 = CONVERT(Mem0[a0 + a5_24:byte], byte, word32)
	word32 a4_14 = CONVERT(Mem0[a1 + a5_24:byte], byte, word32)
	branch a3_11 == a4_14 l2303C396
l2303C37E:
	branch ((a3_11 | 32<i32>) + -97<i32> & 255<i32>) >u 0x19<32> l2303C3A2
l2303C38E:
	branch (a3_11 | 32<i32>) != (a4_14 | 32<i32>) l2303C3A2
l2303C3A2:
	a5Out = a5_24
	return 1<32>
l2303C396:
	branch a2 + 0xFFFFFFFF<32> == a5_24 l2303C39E
l2303C39A:
	a5_24 = a5_24 + 1<32>
	branch a3_11 != 0<32> l2303C36A
l2303C39E:
	a5Out = a5_24
	return 0<32>
lwip_strnicmp_exit:


word32 dns_call_found(word32 ra, word32 a0, word32 a2, word32 a3, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_check_entry
//      dns_recv
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a3 a4 a5 ra s1
// Trashed: a0 a2 a3 a4 a5 ra s1 tp
// Preserved: s0 sp
dns_call_found_entry:
l2303C3A6:
	word32 s1_27 = a0 << 3<u32>
	word32 a4_15 = Mem13[a3:word32]
	word32 s0_16 = 0x42014C5C<32>
	branch a3 == 0<32> l2303C3DC
l2303C3C4:
	call a3 (retsize: 0;)
		uses: a0:a0 + 0x42014D9B<32>,a2:a2,a3:a3,a4:0x42014C7C<32>,a5:272<i32>,ra:ra,s0:0x42014C5C<32>,s1:a0 << 3<u32>
		defs: a3:a3_32,a4:a4_28,ra:ra_31,s0:s0_30,s1:s1_27
l2303C3DC:
	word32 a5_37 = s0_16 + s1_27
	Mem38[a5_37:word32] = 0<32>
	s1Out = s1_27
	a3Out = a3
	a4Out = a4_15
	a5Out = a5_37
	return ra
dns_call_found_exit:


word32 dns_send(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 s4, word32 s9, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_check_entry
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a2 a3 a4 a5 mstatus ra s1 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
dns_send_entry:
l2303C3EE:
	word32 a5_307
	word32 a4_306
	word32 a3_305
	word32 ra_323
	word32 s1_308
	branch Mem32[(CONVERT(Mem32[a0 + 0x42014D97<32>:byte], byte, word32) << 2<i32>) + 0x4200DF00<32>:word32] != 0<32> l2303C458
l2303C458:
	word32 a3_46
	word32 a4_47
	word32 a0_57
	word32 s2_68
	word32 s5_75
	word32 s6_76
	word32 s3_548
	word32 s4_549
	word32 s8_550
	word32 s1_544
	word32 a1_545
	word32 a7_547
	word32 a2_546
	word32 a1_540
	word32 a2_541
	word32 s0_543
	word32 a5_542
	ra_323 = pbuf_alloc(ra, a0 + 0x42014D9B<32>, s1, 182<i32>, CONVERT(SLICE(strlen(a0 + 0x42014D9B<32>, out a1_540, out a2_541, out a3_46, out a4_47, out a5_542) + 18<i32>, word16, 0), word16, word32), 640<i32>, a3_46, a4_47, mstatus, dwLoc3C, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_543, out s1_544, out a0_57, out a1_545, out a2_546, out a3_305, out a4_306, out a5_307, out a7_547, out s2_68, out s3_548, out s4_549, out s5_75, out s6_76, out s8_550, out mstatus)
	s1_308 = a0_57
	branch a0_57 == 0<32> l2303C43A
l2303C482:
	word32 a3_555
	word32 a5_557
	word32 a4_556
	word32 a0_552
	word32 a2_554
	word32 a1_553
	word32 t1_551
	word32 ra_93 = memset(ra_323, fp + -60<i32>, 0<32>, 0xC<32>, out t1_551, out a0_552, out a1_553, out a2_554, out a3_555, out a4_556, out a5_557)
	word32 a5_558
	lwip_htons(CONVERT(Mem32[s2_68 + 8<i32>:uint16], uint16, word32), out a5_558)
	word32 s8_116
	word32 s4_561
	word32 s3_560
	word32 s2_559
	word32 s1_114
	word32 a4_120
	word32 a3_119
	word32 s0_113 = pbuf_take(a0_57, fp + -60<i32>, 0xC<32>, out s1_114, out a3_119, out a4_120, out s2_559, out s3_560, out s4_561, out s8_116)
	word32 s2_130 = 0xC<32>
	word32 s8_132 = s8_116 + 0xFFFFFFFE<32>
l2303C4C0:
	word32 s0_134 = s0_113 + 1<32>
	s9 = s0_134
	word32 a2_136 = 0<32>
	s0_137 = s0_134
l2303C4C6:
	word32 s0_137
	word32 a5_139 = CONVERT(Mem108[s0_137:byte], byte, word32)
	branch a5_139 != 46<i32> l2303C4EA
l2303C4EA:
	branch a5_139 == 0<32> l2303C4CE
l2303C4EC:
	a2_136 = a2_136 + 1<32> & 255<i32>
	s0_137 = s0_137 + 1<32>
l2303C4CE:
	word32 s4_154 = s2_130 + a2_136
	word32 s7_155 = CONVERT(SLICE(s0_137 - s0_134, word16, 0), word16, word32)
	branch s8_132 >= s4_154 l2303C4F6
l2303C4F6:
	pbuf_put_at(s0_137, s1_114, s2_130, a2_136)
	word32 s4_203 = CONVERT(SLICE(s4_200, word16, 0), word16, word32)
	word32 s2_206 = s4_203 + 1<i32> << 16<i32>
	word32 s4_200
	word32 s3_573
	s0_113 = pbuf_take_at(s1_114, s0_134, s7_155, CONVERT(SLICE(s2_130 + 1<i32>, word16, 0), word16, word32), dwArgE8, out s1_114, out a3_119, out a4_120, out s3_573, out s4_200, out s8_132)
	s2_130 = s2_206 >>u 0x10<u32>
	branch CONVERT(Mem108[s0_113:byte], byte, word32) != 0<32> l2303C4C0
l2303C526:
	pbuf_put_at(s0_113, s1_114, s2_206 >>u 0x10<u32>, 0<32>)
	word32 s8_576
	word32 s3_231
	word32 s1_237
	word32 s4_246
	word32 a4_575
	word32 a3_574
	pbuf_take_at(s1_114, fp + -64<i32>, 4<32>, CONVERT(SLICE(s4_203 + 2<32>, word16, 0), word16, word32), dwArgE8, out s1_237, out a3_574, out a4_575, out s3_231, out s4_246, out s8_576)
	word32 s3_578
	word32 s0_577
	word32 s5_580
	word32 s0_581
	word32 s4_579
	word32 a1_583
	word32 a0_582
	word32 a0_270
	word32 a3_273
	word32 a4_274
	word32 mstatus_278
	word32 s1_281
	word32 a2_584
	word32 a7_585
	word32 s2_586
	word32 s3_587
	word32 s4_588
	word32 s5_589
	word32 s6_590
	word32 s8_591
	ra_323 = pbuf_free(udp_sendto(ra_93, Mem226[0x4200DEF8<32>:int32], s1_237, (CONVERT(Mem226[s3_231 + (s5_75 + 272<i32>) + 11<i32>:byte], byte, word32) << 2<i32>) + (s6_76 + -256<i32>), 53<i32>, s4_246, mstatus, s4, dwLoc18, dwArg08, dwArg38, s9, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0_577, out s1_281, out a0_270, out a3_273, out a4_274, out s3_578, out s4_579, out s5_580, out s9, out mstatus_278), s1_281, a3_273, a4_274, a0_270, mstatus_278, dwArgE8, out s0_581, out s1_308, out a0_582, out a1_583, out a2_584, out a3_305, out a4_306, out a5_307, out a7_585, out s2_586, out s3_587, out s4_588, out s5_589, out s6_590, out s8_591, out mstatus)
l2303C4E0:
	word32 s5_570
	word32 s8_572
	word32 s6_571
	word32 s2_567
	word32 s4_569
	word32 s3_568
	word32 a1_564
	word32 a7_566
	word32 a2_565
	word32 a0_563
	word32 s0_562
	ra_323 = pbuf_free(ra_93, s1_114, a3_119, a4_120, s4_154, mstatus, dwArgE8, out s0_562, out s1_308, out a0_563, out a1_564, out a2_565, out a3_305, out a4_306, out a5_307, out a7_566, out s2_567, out s3_568, out s4_569, out s5_570, out s6_571, out s8_572, out mstatus)
l2303C42E:
	ra_323 = dns_call_found(ra, a0, a2, a3, out s1_308, out a3_305, out a4_306, out a5_307)
	Mem369[a0 + 0x42014D96<32>:byte] = 0<8>
l2303C43A:
	0<32> = dwArg0198
	s1Out = s1_308
	a2Out = dwArg0138
	a3Out = a3_305
	a4Out = a4_306
	a5Out = a5_307
	s4Out = dwLoc14
	s9Out = s9
	mstatusOut = mstatus
	return ra_323
dns_send_exit:


word32 dns_check_entry(word32 ra, word32 s1, word32 a0, word32 a2, word32 s4, word32 s9, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_recv
//      dns_tmr
//      dns_gethostbyname
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a2 a3 a4 a5 mstatus ra s1 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dns_check_entry_entry:
l2303C57A:
	word32 a3_147
	word32 a0_48
	word32 a3_15 = 2<32>
	word32 a5_17 = a0 + 0x42014D8C<32>
	word32 a4_18 = CONVERT(Mem14[a0 + 0x42014D96<32>:byte], byte, word32)
	branch a4_18 == 2<32> l2303C60A
l2303C60A:
	a4_18 = CONVERT(Mem14[a0 + 0x42014D98<32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem22[a0 + 0x42014D98<32>:byte] = SLICE(a4_18, byte, 0)
	branch a4_18 != 0<32> l2303C660
l2303C61A:
	word32 a4_26 = CONVERT(Mem22[a0 + 0x42014D99<32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem27[a0 + 0x42014D99<32>:byte] = SLICE(a4_26, byte, 0)
	a3_147 = 4<32>
	branch a4_26 != 4<32> l2303C66A
l2303C66A:
	Mem28[a0 + 0x42014D98<32>:byte] = SLICE(a4_26, byte, 0)
l2303C62E:
	branch CONVERT(Mem27[a0 + 0x42014D97<32>:byte], byte, word32) != 0<32> l2303C64A
l2303C634:
	branch Mem27[0x4200DF04<32>:int32] == 0<32> l2303C64A
l2303C64A:
	ra = dns_call_found(ra, a0, a2, 4<32>, out s1, out a3_15, out a4_18, out a5_17)
	a0_48 = s1 + 272<i32>
l2303C63E:
	Mem50[a0 + 0x42014D97<32>:byte] = 1<8>
	Mem51[a0 + 0x42014D98<32>:word16] = 1<16>
l2303C5A2:
	a3_15 = 3<32>
	branch a4_18 == 3<32> l2303C670
l2303C670:
	a5_17 = Mem14[a4_18:word32]
	branch a4_18 != 0<32> l2303C67E
l2303C67E:
	Mem55[a4_18 + 0xFFFFFFFF<32>:word32] = a5_17
	a4_18 = a4_18 + 0xFFFFFFFF<32>
	branch a4_18 == 0xFFFFFFFF<32> l2303C674
l2303C684:
l2303C674:
	a5_17 = 272<i32>
	a0_48 = a0 + 272<i32>
l2303C65A:
	Mem64[a0_48 + 0x42014C86<32>:byte] = 0<8>
l2303C5A8:
	a5_17 = 1<32>
	branch a4_18 != 1<32> l2303C660
l2303C660:
	s1Out = s1
	a2Out = dwArg10
	a3Out = a3_15
	a4Out = a4_18
	a5Out = a5_17
	s4Out = s4
	s9Out = s9
	mstatusOut = mstatus
	return ra
l2303C5AE:
	word32 a4_76 = CONVERT(Mem14[0x4200DF08<32>:uint16], uint16, word32)
	a3_147 = 0x4200DF08<32>
l2303C5C0:
	word32 a4_81 = a4_76 + 1<32>
	a4_76 = CONVERT(SLICE(a4_81, word16, 0), word16, word32)
	word32 a5_85 = 0x42014C7C<32>
l2303C5C8:
	branch CONVERT(Mem14[a5_85 + 10<i32>:byte], byte, word32) != 2<32> l2303C5D8
l2303C5D0:
	branch CONVERT(Mem14[a5_85 + 8<i32>:uint16], uint16, word32) == CONVERT(SLICE(a4_81, word16, 0), word16, word32) l2303C5C0
l2303C5D8:
	a5_85 = a5_85 + 272<i32>
	branch a5_85 != 0x420150BC<32> l2303C5C8
l2303C5E0:
	Mem105[0x4200DF08<32>:word16] = SLICE(a4_76, word16, 0)
	Mem110[a0 + 0x42014D96<32>:word16] = 2<16>
	Mem112[a0 + 0x42014D94<32>:word16] = SLICE(a4_76, word16, 0)
	Mem113[a0 + 0x42014D98<32>:word16] = 1<16>
l2303C5FE:
l2303C606_thunk_dns_send:
	word32 a2_150
	word32 a3_151
	word32 a4_152
	word32 a5_153
	word32 mstatus_156
	word32 s1_159
	word32 s4_162
	word32 s9_174
	word32 ra_157 = dns_send(ra, s1, a0, dwArg10, a3_147, s4, s9, mstatus, dwArg04, dwArg08, dwArg38, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, dwArg0198, out s1_159, out a2_150, out a3_151, out a4_152, out a5_153, out s4_162, out s9_174, out mstatus_156)
	s1Out = s1_159
	a2Out = a2_150
	a3Out = a3_151
	a4Out = a4_152
	a5Out = a5_153
	s4Out = s4_162
	s9Out = s9_174
	mstatusOut = mstatus_156
	return ra_157
dns_check_entry_exit:


void dns_recv(word32 ra, word32 a2, word32 a3, word32 s4, word32 s5, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg48, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArgA8, word32 dwArgB8, word32 dwArgE4, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s5:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E4:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s5 sp
dns_recv_entry:
	uint16 wLoc5E = SLICE(dwLoc60, uint16, 16)
	uint16 wLoc60 = SLICE(dwLoc60, uint16, 0)
l2303C686:
	uint16 wLoc44_1032 = SLICE(s4, uint16, 0)
	uint16 wLoc4A_1024 = SLICE(s8, uint16, 16)
	uint16 wLoc4C_1039 = SLICE(s8, uint16, 0)
	word32 a4_111 = CONVERT(Mem29[a2 + 8<i32>:uint16], uint16, word32)
	word32 s1_207 = a2
	branch a4_111 <=u 0xF<32> l2303C9BA
l2303C6AE:
	word32 a0_40
	word32 a2_1102
	word32 a1_1101
	word32 a5_1103
	word32 s8_1106
	word32 s2_1104
	word32 s3_1105
	pbuf_copy_partial(a2, fp + -88<i32>, 0xC<32>, 0<32>, out s1_207, out a0_40, out a1_1101, out a2_1102, out a3, out a4_111, out a5_1103, out s2_1104, out s3_1105, out s4, out s8_1106)
	word32 s0_119 = a0_40
	branch a0_40 != 0xC<32> l2303C9BA
l2303C6C4:
	word32 s2_64 = 0<32>
	word32 a5_1107
	word32 a0_65 = lwip_htons(CONVERT(wLoc58, uint16, word32), out a5_1107)
	word32 a5_67 = 0x42014C7C<32>
	a3 = 2<32>
	a4_111 = 4<32>
l2303C6DE:
	word32 s6_75 = s2_64 & 255<i32>
	branch CONVERT(Mem29[a5_67 + 10<i32>:byte], byte, word32) != 2<32> l2303C9F0
l2303C6EA:
	branch CONVERT(Mem29[a5_67 + 8<i32>:uint16], uint16, word32) != a0_65 l2303C9F0
l2303C9F0:
	s2_64 = s2_64 + 1<32>
	a5_67 = a5_67 + 272<i32>
	branch s2_64 != 4<32> l2303C6DE
l2303C9FA:
l2303C6F2:
	word32 a5_1108
	word32 a0_88 = lwip_htons(CONVERT(wLoc54, uint16, word32), out a5_1108)
	s4 = a0_88
	word32 a5_1109
	word32 s5_290 = lwip_htons(CONVERT(wLoc52, uint16, word32), out a5_1109)
	branch CONVERT(bLoc56, int8, int32) >= 0<32> l2303C9BA
l2303C70E:
	branch a0_88 != 1<32> l2303C9BA
l2303C714:
	s4 = s2_64 + 272<i32>
	a4_111 = Mem29[a3:int32]
	branch a4_111 != Mem29[(CONVERT(Mem29[s4 + 0x42014C87<32>:byte], byte, word32) << 2<i32>) + 0x4200DF00<32>:word32] l2303C9BA
l2303C73E:
	word32 s7_115 = s4 + 0x42014C8B<32>
l2303C752:
	word32 a5_1111
	word32 a0_123 = pbuf_try_get_at(s1_207, s0_119, out a3, out a4_111, out a5_1111)
	branch a0_123 < 0<32> l2303C9BA
l2303C75E:
	branch s0_119 == 0xFFFFFFF<32> l2303C9BA
l2303C762:
	a4_111 = 192<i32>
	s0_119 = CONVERT(SLICE(s0_119 + 1<32>, word16, 0), word16, word32)
	branch (a0_123 & 192<i32>) == 192<i32> l2303C9BA
l2303C774:
	word32 a5_136 = s7_115 + a0_123
l2303C778:
	branch s7_115 != a5_136 l2303C90E
l2303C90E:
	word32 a0_145 = pbuf_try_get_at(s1_207, s0_119, out a3, out a4_111, out a5_136)
	branch a0_145 < 0<32> l2303C9BA
l2303C91C:
	a4_111 = CONVERT(Mem144[s7_115:byte], byte, word32)
	branch (CONVERT(Mem144[a4_111 + 0x2308DC6D<32>:byte], byte, word32) & 3<32>) != 1<32> l2303C934
l2303C930:
	a4_111 = a4_111 + 32<i32>
l2303C934:
	word32 a3_164 = CONVERT(Mem144[(a0_145 & 255<i32>) + 0x2308DC6D<32>:byte], byte, word32)
	word32 a0_160 = a0_145 & 255<i32>
	a3 = a3_164 & 3<32>
	branch (a3_164 & 3<32>) != 1<32> l2303C94A
l2303C946:
	a0_160 = (a0_145 & 255<i32>) + 32<i32>
l2303C94A:
	branch a4_111 != a0_160 l2303C9BA
l2303C94E:
	branch s0_119 == 0xFFFFFFF<32> l2303C9BA
l2303C952:
	s0_119 = CONVERT(SLICE(s0_119 + 1<32>, word16, 0), word16, word32)
	s7_115 = s7_115 + 1<32>
l2303C77C:
	s7_115 = s7_115 + 1<32>
	word32 a5_1110
	word32 a0_185 = pbuf_try_get_at(s1_207, s0_119, out a3, out a4_111, out a5_1110)
	branch a0_185 < 0<32> l2303C9BA
l2303C78A:
	branch a0_185 != 0<32> l2303C752
l2303C78C:
	branch s0_119 == 0xFFFFFFF<32> l2303C9BA
l2303C796:
	word32 s7_195 = CONVERT(SLICE(s0_119 + 1<i32>, word16, 0), word16, word32)
	branch s7_195 == 0xFFFFFFF<32> l2303C9BA
l2303C7A4:
	word32 a0_200
	word32 a2_201
	word32 s8_205
	word32 s2_208
	word32 s3_214
	word32 a1_1112
	word32 a5_1113
	word32 s0_203 = pbuf_copy_partial(s1_207, fp + -96<i32>, 4<32>, s7_195, out s1_207, out a0_200, out a1_1112, out a2_201, out a3, out a4_111, out a5_1113, out s2_208, out s3_214, out s4, out s8_205)
	branch a0_200 != 4<32> l2303C9BA
l2303C7B6:
	word32 a5_224 = CONVERT(wLoc5E, uint16, word32)
	a4_111 = 256<i32>
	branch a5_224 != 256<i32> l2303C9BA
l2303C7C2:
	a4_111 = CONVERT(wLoc60, uint16, word32)
	branch a4_111 != a5_224 l2303C9BA
l2303C7CA:
	branch s7_195 >u 0xFFFFFFB<32> l2303C9BA
l2303C7D0:
	branch (CONVERT(bLoc55, byte, word32) & 0xF<32>) != 0<32> l2303C95C
l2303C95C:
	word32 a5_232 = s2_208 + 272<i32> + s3_214
	a4_111 = CONVERT(Mem221[a5_232 + 11<i32>:byte], byte, word32)
	branch a4_111 == 0<32> l2303C9A6
l2303C9A6:
	a4_111 = Mem221[s8_205 + 4<i32>:int32]
	branch a4_111 == 0<32> l2303C96C
l2303C9AC:
	Mem236[a5_232 + 12<i32>:word16] = 0x301<16>
	word32 a5_1162
	word32 s9_1163
	word32 a2_1161
	ra = dns_check_entry(ra, s1_207, s6_75, a2_201, s4, 0xFFFFFFB<32>, mstatus, dwLoc6C, dwLoc68, dwLoc60, dwLoc38, dwLoc08, dwArg08, dwArg18, dwArg28, s5, dwArg48, dwArg68, dwArg78, dwArgA8, dwArg0128, out s1_207, out a2_1161, out a3, out a4_111, out a5_1162, out s4, out s9_1163, out mstatus)
l2303C7DA:
	word32 s0_285 = CONVERT(SLICE(s0_203 + 5<32>, word16, 0), word16, word32)
	word32 s8_287 = 0xFFFFFFF<32>
l2303C7F2:
	branch s5_290 == 0<32> l2303C96C
l2303C7F6:
	a4_111 = CONVERT(Mem292[s1_207 + 8<i32>:uint16], uint16, word32)
	branch s0_285 >=u a4_111 l2303C96C
l2303C96C:
	word32 a2_311
	word32 a3_316
	word32 s2_320
	word32 s3_321
	word32 s6_326
	word32 s5_1122
	word32 s1_1125
	word32 a3_1126
	word32 a5_1128
	word32 a4_1127
	word32 mstatus_1124
	word32 s8_1123
	word32 s0_1114
	word32 a0_1116
	word32 a1_1117
	word32 a7_1120
	word32 s4_1121
	word32 a4_1118
	word32 a5_1119
	word32 s1_1115
	dns_call_found(pbuf_free(ra, s1_207, a3, a4_111, s4, mstatus, dwArgB8, out s0_1114, out s1_1115, out a0_1116, out a1_1117, out a2_311, out a3_316, out a4_1118, out a5_1119, out a7_1120, out s2_320, out s3_321, out s4_1121, out s5_1122, out s6_326, out s8_1123, out mstatus_1124), s6_326, a2_311, a3_316, out s1_1125, out a3_1126, out a4_1127, out a5_1128)
	Mem348[s3_321 + (s2_320 + 272<i32>) + 10<i32>:byte] = 0<8>
l2303C7FE:
	word32 a5_1129
	word32 a0_358 = pbuf_try_get_at(s1_207, s0_285, out a3, out a4_111, out a5_1129)
	branch a0_358 < 0<32> l2303C9BA
l2303C816:
	branch a3 == 0<32> l2303C9BA
l2303C81C:
	branch (a0_358 & 192<i32>) == 192<i32> l2303C9C2
l2303C9C2:
	s0_285 = a3
l2303C824:
	word32 a0_369 = a0_358 + a3
	branch a0_369 >= CONVERT(Mem357[s1_207 + 8<i32>:uint16], uint16, word32) l2303C9BA
l2303C82E:
	s0_285 = CONVERT(SLICE(a0_369, word16, 0), word16, word32)
	word32 a5_1130
	word32 a0_374 = pbuf_try_get_at(s1_207, s0_285, out a3, out a4_111, out a5_1130)
	branch a0_374 < 0<32> l2303C9BA
l2303C840:
	branch a0_374 != 0<32> l2303C7FE
l2303C842:
	branch s0_285 == s8_287 l2303C9BA
l2303C846:
	a4_111 = CONVERT(SLICE(s0_285 + 1<i32>, word16, 0), word16, word32)
	branch a4_111 == s8_287 l2303C9BA
l2303C852:
	word32 a0_394
	word32 s3_1136
	word32 a1_1131
	word32 a5_1134
	word32 s2_1135
	word32 a2_1132
	word32 a3_1133
	word32 s0_397 = pbuf_copy_partial(s1_207, fp + -76<i32>, 0xA<32>, a4_111, out s1_207, out a0_394, out a1_1131, out a2_1132, out a3_1133, out a4_111, out a5_1134, out s2_1135, out s3_1136, out s4, out s8_287)
	a3 = 0xA<32>
	branch a0_394 != 0xA<32> l2303C9BA
l2303C866:
	branch a4_111 >u 0xFFFFFF5<32> l2303C9BA
l2303C86C:
	word32 s0_420 = s0_397 + 11<i32> << 0x10<u32>
	word32 a0_423 = CONVERT(wLoc44_1032, uint16, word32)
	branch CONVERT(wLoc4A_1024, uint16, word32) != 256<i32> l2303C9CC
l2303C882:
	branch CONVERT(wLoc4C_1039, uint16, word32) != 256<i32> l2303C9CC
l2303C88A:
	branch a0_423 != 1024<i32> l2303C9CC
l2303C9CC:
	word32 a5_1137
	branch lwip_htons(a0_423, out a5_1137) + (s0_420 >>u 16<i32>) >= 0x10000000<32> l2303C9BA
l2303C9D6:
	word32 a5_1160
	s0_285 = CONVERT(SLICE(lwip_htons(CONVERT(wLoc44_1032, uint16, word32), out a5_1160) + (s0_420 >>u 16<i32>), word16, 0), word16, word32)
	s5_290 = CONVERT(SLICE(s5_290 + 0xFFFFFFFF<32>, word16, 0), word16, word32)
l2303C892:
	word32 a0_456
	word32 s2_464
	word32 a1_1138
	word32 a5_1140
	word32 a2_1139
	word32 s8_1142
	word32 s3_1141
	pbuf_copy_partial(s1_207, fp + -92<i32>, 4<32>, s0_420 >>u 16<i32>, out s1_207, out a0_456, out a1_1138, out a2_1139, out a3, out a4_111, out a5_1140, out s2_464, out s3_1141, out s4, out s8_1142)
	branch a0_456 != 4<32> l2303C9BA
l2303C9BA:
	word32 s8_1099
	word32 s4_1096
	word32 mstatus_1100
	word32 a0_1087
	word32 s0_1085
	word32 s6_1098
	word32 s1_1086
	word32 a1_1088
	word32 a2_1089
	word32 a5_1092
	word32 a3_1090
	word32 a4_1091
	word32 a7_1093
	word32 s2_1094
	word32 s3_1095
	word32 s5_1097
	pbuf_free(ra, s1_207, a3, a4_111, s4, mstatus, dwArgB8, out s0_1085, out s1_1086, out a0_1087, out a1_1088, out a2_1089, out a3_1090, out a4_1091, out a5_1092, out a7_1093, out s2_1094, out s3_1095, out s4_1096, out s5_1097, out s6_1098, out s8_1099, out mstatus_1100)
l2303C8A4:
	Mem550[s2_464 + 0x42014D90<32>:word32] = s2_464 + 272<i32>
	word32 a0_551
	word32 a2_552
	word32 s2_561
	word32 s3_562
	word32 s6_567
	word32 a5_1148
	word32 s5_1151
	word32 s8_1152
	word32 mstatus_1153
	word32 s4_1150
	word32 a7_1149
	word32 s0_1143
	word32 a3_1146
	word32 a4_1147
	word32 s1_1144
	word32 a1_1145
	word32 ra_575 = pbuf_free(ra, s1_207, a3, a4_111, dwArg74, mstatus, dwArgB8, out s0_1143, out s1_1144, out a0_551, out a1_1145, out a2_552, out a3_1146, out a4_1147, out a5_1148, out a7_1149, out s2_561, out s3_562, out s4_1150, out s5_1151, out s6_567, out s8_1152, out mstatus_1153)
	word32 a3_578
	word32 a4_1154
	word32 a5_1155
	word32 a0_577 = lwip_htonl(a0_551, out a3_578, out a4_1154, out a5_1155)
	Mem582[s3_562 + 10<i32>:byte] = 3<8>
	branch a0_577 >u 0x93A80<32> l2303C9C6
l2303C9C6:
	Mem585[s3_562:word32] = 0x93A80<32>
l2303C8DE:
	Mem586[s3_562:word32] = a0_577
l2303C8E2:
	word32 s1_1156
	word32 a3_1157
	word32 a4_1158
	word32 a5_1159
	dns_call_found(ra_575, s6_567, a2_552, a3_578, out s1_1156, out a3_1157, out a4_1158, out a5_1159)
	word32 s2_607 = s2_561 + 272<i32> + dwArgE4
	branch Mem608[s2_607:int32] != 0<32> l2303C988
l2303C8FE:
	branch CONVERT(Mem608[s2_607 + 10<i32>:byte], byte, word32) != 3<32> l2303C988
l2303C908:
	Mem612[s2_607 + 10<i32>:byte] = 0<8>
l2303C988:
	return
dns_recv_exit:


void dns_init(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a2
// Preserved: a0 a1 a3 a4 a5 a6 ra s0 s1 sp t0 t1 t3 tp
dns_init_entry:
l2303C9FC:
	word32 s0_8 = Mem5[a5:word32]
	branch a5 != 0<32> l2303CA3C
l2303CA3C:
	return
l2303CA0E:
	word32 s1_72
	word32 a3_73
	word32 a4_74
	word32 a5_75
	udp_new_ip_type(ra, s1, a3, a4, mstatus, out s1_72, out a3_73, out a4_74, out a5_75)
	Mem32[46<i32>:word32] = s0_8
	word32 a3_76
	word32 a4_77
	word32 a5_78
	word32 a0_33 = udp_bind(46<i32>, 0x2308DE8C<32>, 0<32>, out a3_76, out a4_77, out a5_78)
l2303CA38_thunk_udp_recv:
	udp_recv(a0_33, 0x2303C686<32>, 0<32>)
	return
dns_init_exit:


word32 dns_setserver(word32 a0, word32 a1, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoEnter
//      dhcp_handle_ack.isra.3
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
dns_setserver_entry:
l2303CA44:
	word32 a5_23 = 1<32>
	branch a0 >u 1<32> l2303CA5C
l2303CA4A:
	a0 = a0 << 2<i32>
	a5_23 = (a0 << 2<i32>) + 0x4200DF00<32>
	branch a1 == 0<32> l2303CA5E
l2303CA5E:
	a4 = Mem0[0x2308DE8C<32>:int32]
l2303CA58:
l2303CA5A:
	Mem17[a4:word32] = a5_23
l2303CA5C:
	a4Out = a4
	a5Out = a5_23
	return a0
dns_setserver_exit:


word32 dns_getserver(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_dns_get
//      netif_status_callback
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
dns_getserver_entry:
l2303CA68:
	branch a0 >u 1<32> l2303CA7E
l2303CA7E:
	return 1<32>
l2303CA6E:
	return a0 << 2<u32>
dns_getserver_exit:


void dns_tmr(word32 ra, word32 s1, word32 a2, word32 s4, word32 s9, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0188, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dns_tmr_entry:
l2303CA88:
	word32 a2_12
	word32 mstatus_21
	word32 s1_24
	word32 s4_28
	word32 s9_32
	word32 a2_40
	word32 mstatus_49
	word32 s1_52
	word32 s4_56
	word32 s9_60
	word32 mstatus_77
	word32 s1_80
	word32 s4_84
	word32 s9_88
	word32 a3_148
	word32 a4_149
	word32 a5_150
	word32 a3_151
	word32 a4_152
	word32 a5_153
	word32 a2_154
	word32 a3_155
	word32 a4_156
	word32 a5_157
	word32 ra_78 = dns_check_entry(dns_check_entry(dns_check_entry(ra, s1, 0<32>, a2, s4, s9, mstatus, dwLoc0C, dwLoc08, dwArg00, dwArg28, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_24, out a2_12, out a3_148, out a4_149, out a5_150, out s4_28, out s9_32, out mstatus_21), s1_24, 1<32>, a2_12, s4_28, s9_32, mstatus_21, dwLoc0C, dwLoc08, dwArg00, dwArg28, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_52, out a2_40, out a3_151, out a4_152, out a5_153, out s4_56, out s9_60, out mstatus_49), s1_52, 2<32>, a2_40, s4_56, s9_60, mstatus_49, dwLoc0C, dwLoc08, dwArg00, dwArg28, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_80, out a2_154, out a3_155, out a4_156, out a5_157, out s4_84, out s9_88, out mstatus_77)
l2303CAA4_thunk_dns_check_entry:
	word32 s1_158
	word32 a2_159
	word32 a3_160
	word32 a4_161
	word32 a5_162
	word32 s4_163
	word32 s9_164
	word32 mstatus_165
	dns_check_entry(ra_78, s1_80, 3<32>, dwArg10, s4_84, s9_88, mstatus_77, dwArg04, dwArg08, dwArg10, dwArg38, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, dwArg0198, out s1_158, out a2_159, out a3_160, out a4_161, out a5_162, out s4_163, out s9_164, out mstatus_165)
	return
dns_tmr_exit:


word32 dns_gethostbyname_addrtype(word32 ra, word32 a0, word32 a1, word32 a3, word32 s2, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg1C, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_gethostbyname
//      lwip_netconn_do_gethostbyname
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
dns_gethostbyname_addrtype_entry:
l2303CAA8:
	branch a1 != 0<32> l2303CAD0
l2303CAD0:
	word32 a4_101
	word32 s2_237 = a0
	branch a0 == 0<32> l2303CAB0
l2303CAEE:
	a5 = CONVERT(Mem28[a0:byte], byte, word32)
	branch a5 == 0<32> l2303CAB0
l2303CAF4:
	a5 = Mem28[0x4200DEF8<32>:int32]
	branch a5 == 0<32> l2303CAB0
l2303CAFE:
	word32 a4_574
	word32 a5_575
	word32 a1_572
	word32 a2_573
	word32 a0_39 = strlen(a0, out a1_572, out a2_573, out a3, out a4_574, out a5_575)
	a5 = 255<i32>
	s3 = a0_39
	branch a0_39 >u 255<i32> l2303CAB0
l2303CAB0:
	a4_101 = 0xFFFFFFF0<32>
l2303CB12:
	word32 a0_50
	word32 s4_65
	word32 a4_576
	ip4addr_aton(a0, a1, out a0_50, out a3, out a4_576, out a5, out s4_65)
	a4_101 = 0<32>
	branch a0_50 != 0<32> l2303CAB2
l2303CB1E:
	word32 s8_110 = 0x42014C7C<32>
	word32 s9_70 = 0x42014C7C<32>
	s1 = 0x110<32>
l2303CB34:
	branch CONVERT(Mem28[s9_70 + 10<i32>:byte], byte, word32) != 3<32> l2303CB62
l2303CB3C:
	branch lwip_strnicmp(a0, s9_70 + 15<i32>, 256<i32>, out a5) != 0<32> l2303CB62
l2303CB62:
	s1 = s1 + 1<32>
	s9_70 = s9_70 + 272<i32>
	branch s1 != 0xFFFFFEF4<32> l2303CB34
l2303CB6C:
	a5 = Mem28[0x4200DF00<32>:int32]
	a4_101 = 0xFFFFFFFA<32>
	branch a5 == 0<32> l2303CAB2
l2303CB78:
	a3 = CONVERT(Mem28[0x4200DEFC<32>:byte], byte, word32)
	a5 = 0<32>
	s1 = 4<32>
	word32 a2_106 = 0<32>
l2303CB8E:
	word32 s0_140
	word32 a4_112 = CONVERT(Mem28[s8_110 + 10<i32>:byte], byte, word32)
	word32 a1_114 = a5 & 255<i32>
	branch a4_112 != 0<32> l2303CBEC
l2303CBEC:
	branch a4_112 != 3<32> l2303CC04
l2303CBF0:
	word32 a4_118 = a3 - CONVERT(Mem28[s8_110 + 14<i32>:byte], byte, word32)
	branch a2_106 >=u (a4_118 & 255<i32>) l2303CC04
l2303CC00:
	s1 = a1_114
	a2_106 = a4_118 & 255<i32>
l2303CC04:
	a5 = a5 + 1<32>
	s8_110 = s8_110 + 272<i32>
	branch a5 != 4<32> l2303CB8E
l2303CC0E:
	a4_101 = 0xFFFFFFFF<32>
	branch s1 == a5 l2303CAB2
l2303CC14:
	word32 s0_133 = s1 + 272<i32>
	a5 = 3<32>
	a4_101 = 0xFFFFFFFF<32>
	s0_140 = s0_133 + 0x42014C7C<32>
	branch CONVERT(Mem28[s0_133 + 0x42014C86<32>:byte], byte, word32) != 3<32> l2303CAB2
l2303CC2A:
l2303CB98:
	s1 = a1_114
	s0_140 = a5 + 0x42014D8C<32>
l2303CBA6:
	Mem149[s0_140 + 10<i32>:byte] = 1<8>
	Mem157[s0_140 + 14<i32>:byte] = SLICE(a3, byte, 0)
	word32 a4_152 = s1 << 3<u32>
	Mem163[a4_152 + 0x42014C5C<32>:word32] = s4_65
	Mem169[a4_152 + 0x42014C60<32>:word32] = a3
	word32 a3_578
	word32 a1_577
	word32 a4_579
	word32 a5_580
	word32 a7_582
	word32 a2_186
	word32 a6_581
	memcpy(s0_140 + 15<i32>, a0, a0_39, out a1_577, out a2_186, out a3_578, out a4_579, out a5_580, out a6_581, out a7_582)
	word32 a5_198 = CONVERT(Mem169[0x4200DEFC<32>:byte], byte, word32)
	Mem200[s0_140 + a0_39 + 15<i32>:byte] = 0<8>
	Mem203[0x4200DEFC<32>:byte] = SLICE(a5_198 + 1<32>, byte, 0)
	word32 a4_584
	word32 s4_585
	word32 a2_583
	word32 s9_586
	ra = dns_check_entry(ra, s1, s1, a2_186, s4_65, s9_70, mstatus, s8, s6, s2, dwArg08, dwArg38, dwArg48, s5, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, dwArg0168, out s1, out a2_583, out a3, out a4_584, out a5, out s4_585, out s9_586, out mstatus)
	a4_101 = 0xFFFFFFFB<32>
l2303CB4C:
	Mem257[a1:word32] = a5
	s1 = s1 + 0<i32>
	a4_101 = 0<32>
l2303CAB2:
	0<32> = dwArg0128
	0<32> = dwArg1C
	s0Out = s4
	s1Out = s1
	a0Out = a4_101
	a3Out = a3
	a4Out = a4_101
	a5Out = a5
	s2Out = s2_237
	s3Out = s3
	s4Out = dwArg78
	mstatusOut = mstatus
	return ra
l2303CAAA:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = 0xFFFFFFF0<32>
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	mstatusOut = mstatus
	return ra
dns_gethostbyname_addrtype_exit:


word32 dns_gethostbyname(word32 ra, word32 a0, word32 a1, word32 a3, word32 s2, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg1C, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_get_file_dns
//      sntp_request
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
dns_gethostbyname_entry:
l2303CC2C:
l2303CC2E_thunk_dns_gethostbyname_addrtype:
	word32 a0_14
	word32 a4_16
	word32 s0_18
	word32 s2_19
	word32 s4_20
	word32 a3_26
	word32 s3_27
	word32 s1_37
	word32 mstatus_41
	word32 a5_64
	word32 ra_42 = dns_gethostbyname_addrtype(ra, a0, a1, a3, s2, s5, s6, s8, mstatus, dwArg08, dwArg1C, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, dwArg0128, dwArg0168, out s0_18, out s1_37, out a0_14, out a3_26, out a4_16, out a5_64, out s2_19, out s3_27, out s4_20, out mstatus_41)
	s0Out = s0_18
	s1Out = s1_37
	a0Out = a0_14
	a3Out = a3_26
	a4Out = a4_16
	s2Out = s2_19
	s3Out = s3_27
	s4Out = s4_20
	mstatusOut = mstatus_41
	return ra_42
dns_gethostbyname_exit:


word32 lwip_standard_chksum(word32 a0, word32 a1, word32 a4, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip_chksum_pseudo
//      ip_chksum_pseudo_partial
//      inet_chksum
//      inet_chksum_pbuf
//      lwip_chksum_copy
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
lwip_standard_chksum_entry:
l2303CC32:
	word32 a0_10
	word16 wLoc02_106 = 0<16>
	a0_10 = a0
	branch (a0 & 1<i32>) == 0<32> l2303CC4E
l2303CC3E:
	a0_10 = a0
	branch a1 <= 0<32> l2303CC4E
l2303CC42:
	a1 = a1 + 0xFFFFFFFF<32>
	a0_10 = a0 + 1<32>
	wLoc02_106 = SEQ(SLICE(CONVERT(Mem4[a0:byte], byte, word32), byte, 0), 0<8>) (alias)
l2303CC4E:
	byte bLoc01_118 = SLICE(wLoc02_106, byte, 8)
	word32 a5_101 = a0_10 & 3<i32>
	branch a5_101 == 0<32> l2303CC64
l2303CC54:
	a4 = 1<32>
	a5_101 = 0<32>
	branch a1 <= 1<32> l2303CC64
l2303CC5C:
	a5_101 = CONVERT(Mem17[a0_10:uint16], uint16, word32)
	a1 = a1 + 0xFFFFFFFE<32>
	a0_10 = a0_10 + 2<32>
l2303CC64:
	word32 a2_124 = 7<32>
l2303CC66:
	branch a1 > 7<32> l2303CCB8
l2303CCB8:
	word32 a0_26 = Mem17[a4:word32]
	a4 = a4 + a5_101
	branch a4 >=u a5_101 l2303CCC2
l2303CCC0:
	a4 = a4 + 1<32>
l2303CCC2:
	a0_10 = a0_26 + 8<32>
	a5_101 = Mem17[a0_26 + 4<32>:int32] + a4
	branch a5_101 >=u a4 l2303CCD0
l2303CCCE:
	a5_101 = a5_101 + 1<32>
l2303CCD0:
	a1 = a1 + 0xFFFFFFF8<32>
l2303CC6A:
	word32 a5_43 = CONVERT(SLICE(a5_101, word16, 0), word16, word32) + (a5_101 >>u 0x10<u32>)
l2303CC76:
	branch a1 > 1<32> l2303CCD4
l2303CCD4:
	a0_10 = a0_10 + 2<32>
	a2_124 = CONVERT(Mem17[a0_10 + -2<i32>:uint16], uint16, word32)
	a1 = a1 + 0xFFFFFFFE<32>
	a5_43 = a5_43 + a2_124
l2303CC7A:
	branch a1 != 1<32> l2303CC86
l2303CC7E:
	wLoc02_106 = SEQ(bLoc01_118, SLICE(CONVERT(Mem17[a0_10:byte], byte, word32), byte, 0)) (alias)
l2303CC86:
	word32 a0_68 = CONVERT(wLoc02_106, word16, word32) + a5_43
	word32 a5_71 = (a0_68 >>u 0x10<u32>) + (a0_68 & 0xFFFFFFF<32>)
	word32 a4_126 = 0xFFFFFFF<32>
	word32 a5_127 = a5_71 & 0xFFFFFFF<32>
	word32 a0_74 = (a5_71 >>u 0x10<u32>) + (a5_71 & 0xFFFFFFF<32>)
	branch (a0 & 1<i32>) == 0<32> l2303CCB0
l2303CCA2:
	a4_126 = a0_74 << 8<u32> & 0xFFFFFFF<32>
	a5_127 = a0_74 << 8<u32>
	a0_74 = a0_74 >>u 8<i32> & 255<i32> | a4_126
l2303CCB0:
	a2Out = a2_124
	a3Out = a0 & 1<i32>
	a4Out = a4_126
	a5Out = a5_127
	return CONVERT(SLICE(a0_74, word16, 0), word16, word32)
lwip_standard_chksum_exit:


word32 inet_chksum_pseudo(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip_chksum_pseudo
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a2 a3 a4 a6 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
inet_chksum_pseudo_entry:
l2303CCE0:
	word32 a4_19 = Mem17[a4:word32]
	word32 a3_21 = Mem17[a3:word32]
	word32 a3_30 = (a3_21 >>u 16<i32>) + (((a4_19 & 0xFFFFFFF<32>) + (a4_19 >>u 16<i32>)) + (a3_21 & 0xFFFFFFF<32>))
	word32 a3_33 = (a3_30 & 0xFFFFFFF<32>) + (a3_30 >>u 0x10<u32>)
	word32 a4_163 = a3_21 & 0xFFFFFFF<32>
	word32 a3_161 = a3_33 & 0xFFFFFFF<32>
	word32 s3_37 = a0
	word32 s0_121 = (a3_33 >>u 0x10<u32>) + (a3_33 & 0xFFFFFFF<32>)
	word32 s5_123 = 0<32>
l2303CD24:
	branch s3_37 != 0<32> l2303CD7E
l2303CD7E:
	word32 a2_178
	word32 a5_179
	word32 s0_57 = s0_121 + lwip_standard_chksum(Mem17[s3_37 + 4<i32>:int32], CONVERT(Mem17[s3_37 + 10<i32>:uint16], uint16, word32), a4_163, out a2_178, out a3_161, out a4_163, out a5_179)
	s0_121 = (s0_57 & 0xFFFFFFF<32>) + (s0_57 >>u 0x10<u32>)
	branch (CONVERT(Mem17[s3_37 + 10<i32>:uint16], uint16, word32) & 1<32>) == 0<32> l2303CDAE
l2303CD9C:
	s5_123 = s5_123 ^ 1<i32>
	s0_121 = s0_121 >>u 8<i32> & 255<i32> | s0_121 << 8<u32> & 0xFFFFFFF<32>
l2303CDAE:
	s3_37 = Mem17[s3_37:int32]
l2303CD28:
	branch s5_123 == 0<32> l2303CD3E
l2303CD2C:
	a4_163 = 0xFFFFFFF<32>
	s0_121 = s0_121 >>u 8<i32> & 255<i32> | s0_121 << 8<u32> & 0xFFFFFFF<32>
l2303CD3E:
	word32 a5_176
	word32 a0_85 = lwip_htons(a1, out a5_176)
	word32 a5_177
	word32 s0_97 = s0_121 + (lwip_htons(a2, out a5_177) + a0_85)
	s1Out = a0_85
	word32 s0_101 = (s0_97 & 0xFFFFFFF<32>) + (s0_97 >>u 0x10<u32>)
	a0Out = CONVERT(SLICE(~((s0_101 & 0xFFFFFFF<32>) + (s0_101 >>u 0x10<u32>)), word16, 0), word16, word32)
	a2Out = dwArg48
	a3Out = a3_161
	a4Out = a4_163
	a6Out = dwArg28
	s2Out = a2
	s3Out = s3_37
	s4Out = dwArg04
	s5Out = s5_123
	return s1
inet_chksum_pseudo_exit:


word32 ip_chksum_pseudo(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
//      tcp_output_control_segment
//      udp_input
//      udp_sendto
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a2 a3 a4 a6 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
ip_chksum_pseudo_entry:
l2303CDB4:
l2303CDB4_thunk_inet_chksum_pseudo:
	word32 a0_8
	word32 a2_10
	word32 a3_11
	word32 a4_12
	word32 a6_14
	word32 s1_16
	word32 s2_17
	word32 s3_18
	word32 s4_19
	word32 s5_20
	word32 s0_15 = inet_chksum_pseudo(a0, a1, a2, a3, a4, out s1_16, out a0_8, out a2_10, out a3_11, out a4_12, out a6_14, out s2_17, out s3_18, out s4_19, out s5_20)
	s1Out = s1_16
	a0Out = a0_8
	a2Out = a2_10
	a3Out = a3_11
	a4Out = a4_12
	a6Out = a6_14
	s2Out = s2_17
	s3Out = s3_18
	s4Out = s4_19
	s5Out = s5_20
	return s0_15
ip_chksum_pseudo_exit:


word32 inet_chksum_pseudo_partial(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip_chksum_pseudo_partial
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 s0 s1 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
inet_chksum_pseudo_partial_entry:
l2303CDB8:
	word32 a4_24 = Mem19[a4:word32]
	word32 a4_33 = (a4_24 >>u 16<i32>) + (((a2 & 0xFFFFFFF<32>) + (a2 >>u 16<i32>)) + (a4_24 & 0xFFFFFFF<32>))
	word32 a4_36 = (a4_33 & 0xFFFFFFF<32>) + (a4_33 >>u 0x10<u32>)
	word32 a4_100 = a4_36 & 0xFFFFFFF<32>
	word32 s4_40 = a0
	word32 s0_104 = (a4_36 >>u 0x10<u32>) + (a4_36 & 0xFFFFFFF<32>)
	word32 s6_154 = 0<32>
l2303CDFE:
	branch s4_40 != 0<32> l2303CE48
l2303CE48:
	branch a3 == 0<32> l2303CE02
l2303CE4A:
	word32 a5_49 = CONVERT(Mem48[s4_40 + 10<i32>:uint16], uint16, word32)
	word32 s3_50 = a5_49
	branch a3 >=u a5_49 l2303CE56
l2303CE54:
	s3_50 = a3
l2303CE56:
	word32 s3_53 = s3_50 << 16<i32>
	word32 a3_68
	word32 a5_238
	word32 a2_237
	word32 s0_73 = s0_104 + lwip_standard_chksum(Mem48[s4_40 + 4<i32>:int32], s3_53 >>u 0x10<u32>, a4_100, out a2_237, out a3_68, out a4_100, out a5_238)
	s3 = a3_68 - (s3_53 >>u 0x10<u32>)
	s0_104 = (s0_73 & 0xFFFFFFF<32>) + (s0_73 >>u 0x10<u32>)
	a3 = CONVERT(SLICE(s3, word16, 0), word16, word32)
	branch (CONVERT(Mem62[s4_40 + 10<i32>:uint16], uint16, word32) & 1<32>) == 0<32> l2303CE98
l2303CE86:
	s6_154 = s6_154 ^ 1<i32>
	s0_104 = s0_104 >>u 8<i32> & 255<i32> | s0_104 << 8<u32> & 0xFFFFFFF<32>
l2303CE98:
	s4_40 = Mem62[s4_40:int32]
l2303CE02:
	branch s6_154 != 0<32> l2303CE9E
l2303CE9E:
	a4_100 = 0xFFFFFFF<32>
	s0_104 = s0_104 >>u 8<i32> & 255<i32> | s0_104 << 8<u32> & 0xFFFFFFF<32>
l2303CE06:
	word32 a5_235
	word32 a0_111 = lwip_htons(a1, out a5_235)
	word32 a5_236
	word32 s0_125 = s0_104 + (lwip_htons(a2, out a5_236) + a0_111)
	0<32> = dwArg0128
	s1Out = a0_111
	word32 s0_129 = (s0_125 & 0xFFFFFFF<32>) + (s0_125 >>u 0x10<u32>)
	a0Out = CONVERT(SLICE(~((s0_129 & 0xFFFFFFF<32>) + (s0_129 >>u 0x10<u32>)), word16, 0), word16, word32)
	a4Out = a4_100
	s3Out = s3
	s4Out = dwArg78
	s5Out = a1
	s6Out = s6_154
	return dwArgE4
inet_chksum_pseudo_partial_exit:


word32 ip_chksum_pseudo_partial(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_output
//      udp_sendto
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 s0 s1 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
ip_chksum_pseudo_partial_entry:
l2303CEB2:
l2303CEB2_thunk_inet_chksum_pseudo_partial:
	word32 a0_9
	word32 a4_13
	word32 s1_17
	word32 s3_19
	word32 s4_20
	word32 s5_21
	word32 s6_22
	word32 s0_16 = inet_chksum_pseudo_partial(a0, a1, a2, a3, a4, dwArg0128, out s1_17, out a0_9, out a4_13, out s3_19, out s4_20, out s5_21, out s6_22)
	s1Out = s1_17
	a0Out = a0_9
	a4Out = a4_13
	s3Out = s3_19
	s4Out = s4_20
	s5Out = s5_21
	s6Out = s6_22
	return s0_16
ip_chksum_pseudo_partial_exit:


word32 inet_chksum(word32 a0, word32 a1, word32 a4, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_send
//      igmp_input
//      ip4_input
//      tcp_split_unsent_seg
//      icmp_input
//      icmp_dest_unreach
//      ping_timeout
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
inet_chksum_entry:
l2303CEB6:
	word32 a3_12
	word32 a4_13
	word32 a5_14
	word32 a2_26
	word32 a0_18 = CONVERT(SLICE(~lwip_standard_chksum(a0, a1, a4, out a2_26, out a3_12, out a4_13, out a5_14), word16, 0), word16, word32)
	a2Out = dwArg10
	a3Out = a3_12
	a4Out = a4_13
	a5Out = a5_14
	return a0_18
inet_chksum_exit:


word32 inet_chksum_pbuf(word32 a0, word32 a4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      icmp_input
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
inet_chksum_pbuf_entry:
l2303CECC:
	word32 s1_16 = a0
	word32 s3_17 = 0<32>
	word32 s0_18 = 0<32>
l2303CEE2:
	branch s1_16 != 0<32> l2303CF10
l2303CF10:
	word32 s1_24 = Mem14[a0 + 4<i32>:word32]
	word32 a2_124
	word32 a5_125
	a0 = lwip_standard_chksum(a0, CONVERT(Mem14[s1_16 + 10<i32>:uint16], uint16, word32), a4, out a2_124, out a3, out a4, out a5_125)
	word32 s0_33 = s0_18 + a0
	s0_18 = (s0_33 & 0xFFFFFFF<32>) + (s0_33 >>u 0x10<u32>)
	branch (CONVERT(Mem14[s1_24 + 10<i32>:uint16], uint16, word32) & 1<32>) == 0<32> l2303CF42
l2303CF2E:
	s3_17 = s3_17 ^ 1<i32>
	s0_18 = s0_18 >>u 8<i32> & 255<i32> | s0_18 << 8<u32> & 0xFFFFFFF<32>
l2303CF42:
	s1_16 = Mem14[s1_24:word32]
l2303CEE4:
	branch s3_17 == 0<32> l2303CEFA
l2303CEE8:
	a4 = 0xFFFFFFF<32>
	s0_18 = s0_18 >>u 8<i32> & 255<i32> | s0_18 << 8<u32> & 0xFFFFFFF<32>
l2303CEFA:
	s1Out = s1_16
	a0Out = CONVERT(SLICE(~s0_18, word16, 0), word16, word32)
	a3Out = a3
	a4Out = a4
	s2Out = 0xFFFFFFF<32>
	s4Out = dwArg04
	return s0_18
inet_chksum_pbuf_exit:


word32 lwip_chksum_copy(word32 a0, word32 a1, word32 a2, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_sendto
//      tcp_write
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
lwip_chksum_copy_entry:
l2303CF46:
	word32 a4_15
	word32 a1_48
	word32 a2_49
	word32 a3_50
	word32 a5_51
	word32 a6_52
	word32 a7_53
	memcpy(a0, a1, a2, out a1_48, out a2_49, out a3_50, out a4_15, out a5_51, out a6_52, out a7_53)
l2303CF62_thunk_lwip_standard_chksum:
	word32 a2_36
	word32 a4_38
	word32 a3_54
	word32 a5_55
	a0Out = lwip_standard_chksum(a0, a2, a4_15, out a2_36, out a3_54, out a4_38, out a5_55)
	a2Out = a2_36
	a4Out = a4_38
	return a2
lwip_chksum_copy_exit:


word32 lwip_init(word32 ra, word32 mstatus, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg60, word32 dwArg88, word32 dwArgAC, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_init
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_init_entry:
l2303CF66:
	stats_init()
	sys_init()
	mem_init(ra, mstatus, dwLoc10, dwLoc0C, ra, dwArgE8, dwArg0128, dwArg0168)
	word32 a2_31
	word32 a0_30 = memp_init(out a2_31)
	netif_init()
	word32 a2_45
	word32 a0_54
	word32 a3_57
	word32 s1_62
	word32 ra_61 = tcp_init(ra, udp_init(a0_30, a2_31, out a2_45), a2_45, dwLoc08, dwArg18, dwArg60, dwArg88, dwArgAC, out s1_62, out a0_54, out a3_57)
	word32 a5_78
	word32 a4_77 = igmp_init(out a5_78)
	dns_init(ra_61, s1_62, a3_57, a4_77, a5_78, mstatus)
l2303CF92_thunk_sys_timeouts_init:
	word32 a1_83
	word32 a3_85
	word32 a4_86
	a0Out = sys_timeouts_init(a0_54, a3_57, a4_77, mstatus, dwArg34, dwArg38, out a1_83, out a3_85, out a4_86)
	a1Out = a1_83
	a3Out = a3_85
	a4Out = a4_86
	return ra_61
lwip_init_exit:


word32 dhcp_set_state(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_check
//      dhcp_bind
//      dhcp_select
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_start
//      dhcp_coarse_tmr
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
dhcp_set_state_entry:
l2303CF96:
	word32 a5_5 = CONVERT(Mem0[a0 + 5<i32>:byte], byte, word32)
	branch a5_5 == a1 l2303CFAA
l2303CF9E:
	Mem7[a0 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a0 + 6<i32>:byte] = 0<8>
	Mem9[a0 + 8<i32>:word16] = 0<16>
l2303CFAA:
	return a5_5
dhcp_set_state_exit:


word32 dhcp_option_short(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_renew
//      dhcp_coarse_tmr
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a4 a5
// Preserved: sp
dhcp_option_short_entry:
l2303CFAC:
	Mem8[a1 + a0:byte] = SLICE(a2 >>u 8<u32>, byte, 0)
	Mem15[a1 + CONVERT(SLICE(a0 + 1<i32>, word16, 0), word16, word32):byte] = SLICE(a2, byte, 0)
	return CONVERT(SLICE(a0 + 2<32>, word16, 0), word16, word32)
dhcp_option_short_exit:


word32 dhcp_option_long(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a4 a5
// Preserved: sp
dhcp_option_long_entry:
l2303CFCE:
	Mem8[a1 + a0:byte] = SLICE(a2 >>u 0x18<u32>, byte, 0)
	Mem14[CONVERT(SLICE(a0 + 1<i32>, word16, 0), word16, word32) + a1:byte] = SLICE(a2 >>u 0x10<u32>, byte, 0)
	Mem20[CONVERT(SLICE(a0 + 2<i32>, word16, 0), word16, word32) + a1:byte] = SLICE(a2 >>u 8<u32>, byte, 0)
	Mem27[a1 + CONVERT(SLICE(a0 + 3<i32>, word16, 0), word16, word32):byte] = SLICE(a2, byte, 0)
	return CONVERT(SLICE(a0 + 4<32>, word16, 0), word16, word32)
dhcp_option_long_exit:


word32 dhcp_create_msg(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg24, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_coarse_tmr
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0024:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_create_msg_entry:
l2303D014:
	word32 s1_108
	word32 s5_184
	s1_108 = s1
	branch a0 != 0<32> l2303D040
l2303D040:
	s1_108 = s1
	branch a1 == 0<32> l2303D028
l2303D042:
	word32 a0_33
	word32 a2_34
	word32 s0_394
	word32 a1_395
	word32 s5_397
	word32 s8_398
	word32 a7_396
	word32 s4_179
	ra = pbuf_alloc(ra, s0, a0, 182<i32>, 308<i32>, 640<i32>, a3, a4, mstatus, s4, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_394, out s1_108, out a0_33, out a1_395, out a2_34, out a3, out a4, out a5, out a7_396, out s2, out s3, out s4_179, out s5_397, out s6, out s8_398, out mstatus)
	s5_184 = a0_33
	branch a0_33 == 0<32> l2303D028
l2303D05E:
	branch s2 != 3<32> l2303D06C
l2303D064:
	branch CONVERT(Mem19[s3 + 5<i32>:byte], byte, word32) != s2 l2303D086
l2303D06C:
	word32 a5_63 = CONVERT(Mem19[s3 + 6<i32>:byte], byte, word32)
	branch a5_63 != 0<32> l2303D080
l2303D07A:
	word32 a4_411
	word32 a3_410
	word32 a0_68
	word32 a1_409
	s1_108 = bl_rand(a0_33, a2_34, out a0_68, out a1_409, out a3_410, out a4_411, out a5_63, out s4_179)
	Mem79[a0_68:word32] = 0x4200DF14<32>
l2303D080:
	Mem84[s3:word32] = a5_63
l2303D086:
	word32 s0_89 = Mem88[a0_33 + 4<i32>:int32]
	word32 a3_403
	word32 a4_404
	word32 a5_405
	word32 a2_402
	word32 a1_401
	word32 a0_400
	word32 t1_399
	ra = memset(ra, s0_89, 0<32>, 308<i32>, out t1_399, out a0_400, out a1_401, out a2_402, out a3_403, out a4_404, out a5_405)
	Mem106[s0_89:byte] = 1<8>
	Mem107[s0_89 + 1<i32>:byte] = 1<8>
	Mem112[s0_89 + 2<i32>:byte] = SLICE(CONVERT(Mem107[s1_108 + 64<i32>:byte], byte, word32), byte, 0)
	word32 a5_408
	word32 a3_406
	word32 a4_407
	word32 a0_115 = lwip_htonl(Mem112[s3:int32], out a3_406, out a4_407, out a5_408)
	Mem120[s0_89 + 4<i32>:byte] = SLICE(a0_115, byte, 0)
	Mem121[s0_89 + 5<i32>:byte] = SLICE(a0_115 >>u 8<u32>, byte, 0)
	Mem124[s0_89 + 6<i32>:byte] = SLICE(a0_115 >>u 0x10<u32>, byte, 0)
	Mem125[s0_89 + 7<i32>:byte] = SLICE(a0_115 >>u 24<i32>, byte, 0)
	s6 = 1<32>
	word32 a5_126 = 4<32>
	branch s2 == 4<32> l2303D0F0
l2303D0D0:
	a5_126 = s2 + -7<i32> & 255<i32>
	branch a5_126 <=u 1<32> l2303D0F0
l2303D0DC:
	branch s2 != 3<32> l2303D10C
l2303D0E2:
	a5_126 = CONVERT(Mem125[s3 + 5<i32>:byte], byte, word32) + 0xFFFFFFFC<32> & 255<i32>
	branch a5_126 >u 1<32> l2303D10C
l2303D0F0:
	s1_108 = Mem125[a5_126 + 4<i32>:word32]
	Mem141[s0_89 + 12<i32>:byte] = SLICE(a5_126, byte, 0)
	Mem142[s0_89 + 13<i32>:byte] = SLICE(a5_126 >>u 8<u32>, byte, 0)
	Mem145[s0_89 + 14<i32>:byte] = SLICE(a5_126 >>u 0x10<u32>, byte, 0)
	Mem146[s0_89 + 15<i32>:byte] = SLICE(a5_126 >>u 24<i32>, byte, 0)
l2303D10C:
	word32 a5_148 = s1_108 + 58<i32>
	word32 a4_150 = s0_89 + 28<i32>
	s1_108 = s1_108 + 64<i32>
l2303D118:
	a3 = CONVERT(Mem153[a5_148:byte], byte, word32)
	a4_150 = a4_150 + 1<32>
	Mem158[a4_150 + 4095<i32>:byte] = SLICE(a3, byte, 0)
	a5_148 = a5_148 + 1<32>
	branch a5_148 != s1_108 l2303D118
l2303D128:
	Mem162[s0_89 + 236<i32>:byte] = 0x63<8>
	Mem164[s0_89 + 239<i32>:byte] = 0x63<8>
	Mem166[s0_89 + 237<i32>:byte] = 0x82<8>
	Mem167[s0_89 + 240<i32>:byte] = 0x35<8>
	Mem170[s0_89 + 241<i32>:byte] = 1<8>
	Mem171[s0_89 + 238<i32>:byte] = 0x53<8>
	Mem175[s0_89 + 242<i32>:byte] = SLICE(s2, byte, 0)
	Mem183[s4_179:word16] = 3<16>
	a4 = 83<i32>
	a5 = 3<32>
l2303D028:
	s5_184 = 0<32>
l2303D02A:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_108
	a0Out = s5_184
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5_184
	s6Out = s6
	mstatusOut = mstatus
	return ra
dhcp_create_msg_exit:


word32 dhcp_option_trailer(word32 ra, word32 a0, word32 a1, word32 a2, word32 s4, word32 mstatus, word32 dwArg0118, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_coarse_tmr
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0118:[0..31]
// LiveOut: mstatus ra s1 s2 s3 s4 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_option_trailer_entry:
l2303D15E:
	Mem10[a1 + a0:byte] = 0xFF<8>
	word32 a5_5 = a0 + 1<i32> << 16<i32>
	word32 a5_14 = a5_5 >>u 16<i32>
	word32 a1_11 = a1 + (a5_5 >>u 16<i32>)
l2303D176:
	branch a5_14 <=u 67<i32> l2303D188
l2303D188:
	Mem18[a1_11:byte] = 0<8>
	a5_14 = CONVERT(SLICE(a5_14 + 1<32>, word16, 0), word16, word32)
	a1_11 = a1_11 + 1<32>
l2303D17A:
	word32 a1_23 = CONVERT(SLICE(a5_14 + 240<i32>, word16, 0), word16, word32)
l2303D184_thunk_pbuf_realloc:
	word32 s1_40
	word32 mstatus_46
	word32 s2_48
	word32 s3_49
	word32 s4_50
	word32 s6_52
	word32 s8_53
	word32 a2_69
	word32 a3_70
	word32 a4_71
	word32 a5_72
	word32 s5_73
	word32 ra_47 = pbuf_realloc(ra, a2, a1_23, 0xFFFFFFFF<32>, 67<i32>, s4, mstatus, dwArg0118, out s1_40, out a2_69, out a3_70, out a4_71, out a5_72, out s2_48, out s3_49, out s4_50, out s5_73, out s6_52, out s8_53, out mstatus_46)
	s1Out = s1_40
	s2Out = s2_48
	s3Out = s3_49
	s4Out = s4_50
	s6Out = s6_52
	s8Out = s8_53
	mstatusOut = mstatus_46
	return ra_47
dhcp_option_trailer_exit:


word32 dhcp_discover(word32 ra, word32 s0, word32 s1, word32 a4, word32 s4, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_start
//      dhcp_fine_tmr
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_discover_entry:
l2303D196:
	word32 a0_14 = Mem13[s1 + 40<i32>:word32]
	Mem18[s1 + 28<i32>:word32] = 0<32>
	dhcp_set_state(s1, 6<32>)
	word32 s0_36
	word32 a0_51
	word32 a4_316
	word32 a5_317
	word32 s1_155
	word32 s2_156
	word32 mstatus_169
	word32 a3_152
	word32 s3_157
	word32 s4_160
	word32 s5_161
	word32 s6_162
	word32 ra_170 = dhcp_create_msg(ra, s0, a0_14, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_36, out s1_155, out a0_51, out a3_152, out a4_316, out a5_317, out s2_156, out s3_157, out s4_160, out s5_161, out s6_162, out mstatus_169)
	branch a0_51 == 0<32> l2303D282
l2303D1C2:
	word32 a5_53 = CONVERT(wLoc22, uint16, word32)
	word32 a0_52 = Mem18[s0_36 + 4<i32>:word32]
	Mem62[s0_36 + 240<i32> + a5_53:byte] = 0x39<8>
	Mem65[CONVERT(SLICE(a5_53 + 1<32>, word16, 0), word16, word32) + (s0_36 + 240<i32>):byte] = 2<8>
	word32 a0_71 = dhcp_option_short(CONVERT(SLICE(a5_53 + 2<i32>, word16, 0), word16, word32), s0_36 + 240<i32>, CONVERT(Mem65[s3_157 + 56<i32>:uint16], uint16, word32))
	Mem77[s0_36 + 240<i32> + a0_71:byte] = 0x37<8>
	Mem83[CONVERT(SLICE(a0_71 + 1<i32>, word16, 0), word16, word32) + (s0_36 + 240<i32>):byte] = 4<8>
	uint16 wLoc22_221 = SLICE(a0_71 + 2<32>, word16, 0)
	word32 a5_104 = 0x2308DE88<32>
l2303D22C:
	word32 a4_92 = CONVERT(wLoc22_221, uint16, word32)
	Mem102[a4_92 + (s0_36 + 240<i32>):byte] = SLICE(CONVERT(Mem91[a5_104 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_98 = a4_92 + 1<i32> << 16<i32>
	wLoc22_221 = SLICE(a0_98 >>u 16<i32>, word16, 0)
	a5_104 = a5_104 + 1<32>
	branch a5_104 != 0xDCF7217C<32> l2303D22C
l2303D250:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 mstatus_120
	word32 s2_123
	word32 s3_124
	word32 s4_125
	word32 s8_320
	word32 s1_318
	word32 s6_319
	word32 ra_121 = dhcp_option_trailer(ra_170, a0_98 >>u 16<i32>, s0_36 + 240<i32>, a0_52, s4_160, mstatus_169, dwArgE8, out s1_318, out s2_123, out s3_124, out s4_125, out s6_319, out s8_320, out mstatus_120)
	word32 stackArg20 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg296 = <invalid>
	word32 a3_336
	word32 a4_337
	word32 s2_338
	word32 s3_339
	word32 s4_340
	word32 mstatus_341
	udp_sendto_if_src(ra, a0, a1, a2, a3, a4, a5, s8, mstatus, stackArg20, stackArg120, stackArg136, stackArg168, stackArg184, stackArg200, stackArg232, stackArg248, stackArg296, out a3_336, out a4_337, out s2_338, out s3_339, out s4_340, out mstatus_341)
	word32 s0_342
	word32 a0_343
	word32 a1_344
	word32 a2_345
	word32 a4_346
	word32 a5_347
	word32 a7_348
	word32 s8_349
	ra_170 = pbuf_free(ra_121, s2_123, 67<i32>, s3_124, s4_125, mstatus_120, dwArgF8, out s0_342, out s1_155, out a0_343, out a1_344, out a2_345, out a3_152, out a4_346, out a5_347, out a7_348, out s2_156, out s3_157, out s4_160, out s5_161, out s6_162, out s8_349, out mstatus_169)
l2303D282:
	word32 a5_173 = CONVERT(Mem172[s1_155 + 6<i32>:byte], byte, word32)
	branch a5_173 == 255<i32> l2303D294
l2303D28E:
	Mem176[s1_155 + 6<i32>:byte] = SLICE(a5_173 + 1<32>, byte, 0)
l2303D294:
	word32 a5_182
	word32 a4_179 = CONVERT(Mem178[s1_155 + 6<i32>:byte], byte, word32)
	branch a4_179 >u 5<32> l2303D2D0
l2303D2D0:
	a5_182 = 0xEFFFA60<32>
l2303D29E:
	a5_182 = CONVERT(SLICE((1<32> << a4_179) + 1000<i32>, word16, 0), word16, word32)
l2303D2B0:
	word32 a5_190 = a5_182 + 499<i32>
	Mem195[s1_155 + 8<i32>:word16] = SLICE(a5_190 ^ 500<i32>, word16, 0)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_155
	a0Out = 0<32>
	a3Out = a3_152
	a4Out = 500<i32>
	a5Out = a5_190 ^ 500<i32>
	s2Out = s2_156
	s3Out = s3_157
	s4Out = s4_160
	s5Out = s5_161
	s6Out = s6_162
	mstatusOut = mstatus_169
	return ra_170
dhcp_discover_exit:


word32 dhcp_check(word32 ra, word32 s0, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg90, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF0, word32 dwArgF4, word32 dwArgF8, word32 dwArg0118, word32 dwArg0168, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_fine_tmr
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 mstatus ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
dhcp_check_entry:
l2303D2D8:
	word32 a0_10 = Mem9[s0 + 40<i32>:word32]
	dhcp_set_state(s0, 8<32>)
	word32 a3_23
	word32 s0_27
	word32 s2_28
	word32 s4_29
	word32 mstatus_33
	word32 s1_35
	word32 s3_36
	word32 s5_37
	word32 s6_38
	word32 s7_39
	word32 ra_34 = etharp_query(ra, a0_10, s0 + 28<i32>, s4, mstatus, dwArg04, dwArg28, dwArg38, dwArg48, dwArg64, dwArg68, ra, dwArg78, dwArg88, dwArg90, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF0, dwArgF4, dwArgF8, dwArg0118, dwArg0168, out s0_27, out s1_35, out a3_23, out s2_28, out s3_36, out s4_29, out s5_37, out s6_38, out s7_39, out mstatus_33)
	word32 a5_48 = CONVERT(Mem9[s0_27 + 6<i32>:byte], byte, word32)
	branch a5_48 == 255<i32> l2303D30A
l2303D304:
	Mem51[s0_27 + 6<i32>:byte] = SLICE(a5_48 + 1<32>, byte, 0)
l2303D30A:
	Mem54[s0_27 + 8<i32>:word16] = 1<16>
	s1Out = s1_35
	a3Out = a3_23
	a4Out = 255<i32>
	s2Out = s2_28
	s3Out = s3_36
	s4Out = s4_29
	s5Out = s5_37
	s6Out = s6_38
	s7Out = s7_39
	mstatusOut = mstatus_33
	return ra_34
dhcp_check_exit:


word32 dhcp_bind(word32 ra, word32 s0, word32 s1, word32 a0, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg98, word32 dwArg0108, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_fine_tmr
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_bind_entry:
l2303D31A:
	branch a0 == 0<32> l2303D454
l2303D454:
	s0Out = s0
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2303D31E:
	word32 a0_11 = Mem10[s0 + 40<i32>:word32]
	branch s0 == 0<32> l2303D3F8
l2303D32A:
	word32 s0_13 = Mem10[a5 + 40<i32>:word32]
	Mem14[s0_13 + 18<i32>:word16] = 0<16>
	branch a5 == 0xFFFFFFFF<32> l2303D354
l2303D336:
	word32 a4_19
	a5 = a5 + 0x1E<32>
	branch a5 >=u 0xFFC4001E<32> l2303D402
l2303D402:
	a4_19 = 0xFFFFFFF<32>
l2303D340:
	a5 = a5 + 0x1E<32> >>u 60<i32>
	a4_19 = CONVERT(SLICE(a5, word16, 0), word16, word32)
	branch a5 == 0<32> l2303D408
l2303D408:
	Mem25[s0_13 + 20<i32>:word16] = 1<16>
	a5 = 1<32>
l2303D350:
	Mem28[s0_13 + 20<i32>:word16] = SLICE(a4_19, word16, 0)
l2303D354:
	word32 s0_32 = Mem31[a5 + 44<i32>:word32]
	branch a5 == 0xFFFFFFFF<32> l2303D382
l2303D35C:
	word32 a4_37
	word32 a5_34 = a5 + 0x1E<32>
	branch a5_34 >=u 0x3C0000<32> l2303D410
l2303D410:
	a4_37 = 0xFFFFFFF<32>
l2303D366:
	a4_37 = CONVERT(SLICE(a5_34 >>u 60<i32>, word16, 0), word16, word32)
	branch a5_34 >>u 60<i32> == 0<32> l2303D416
l2303D416:
	Mem43[s0_32 + 10<i32>:word16] = 1<16>
l2303D376:
	Mem46[s0_32 + 10<i32>:word16] = SLICE(a4_37, word16, 0)
l2303D37A:
	a5 = CONVERT(Mem48[s0_32 + 10<i32>:uint16], uint16, word32)
	Mem50[s0_32 + 14<i32>:word16] = SLICE(a5, word16, 0)
l2303D382:
	word32 s0_53 = Mem52[a5 + 48<i32>:word32]
	branch a5 == 0xFFFFFFFF<32> l2303D3B0
l2303D38A:
	word32 a4_58
	word32 a5_55 = a5 + 0x1E<32>
	branch a5_55 >=u 0x3C0000<32> l2303D41E
l2303D41E:
	a4_58 = 0xFFFFFFF<32>
l2303D394:
	a4_58 = CONVERT(SLICE(a5_55 >>u 60<i32>, word16, 0), word16, word32)
	branch a5_55 >>u 60<i32> == 0<32> l2303D424
l2303D424:
	Mem64[s0_53 + 12<i32>:word16] = 1<16>
l2303D3A4:
	Mem67[s0_53 + 12<i32>:word16] = SLICE(a4_58, word16, 0)
l2303D3A8:
	Mem71[s0_53 + 16<i32>:word16] = SLICE(CONVERT(Mem69[s0_53 + 12<i32>:uint16], uint16, word32), word16, 0)
l2303D3B0:
	word32 a5_74 = CONVERT(Mem73[s0_53 + 12<i32>:uint16], uint16, word32)
	word32 a4_107 = CONVERT(Mem73[s0_53 + 10<i32>:uint16], uint16, word32)
	branch a4_107 <u a5_74 l2303D3C2
l2303D3BC:
	branch a5_74 == 0<32> l2303D3C2
l2303D3BE:
	Mem76[s0_53 + 10<i32>:word16] = 0<16>
l2303D3C2:
	word32 a5_79 = CONVERT(Mem78[s0_53 + 7<i32>:byte], byte, word32)
	branch a5_79 == 0<32> l2303D42C
l2303D42C:
	word32 a5_80 = CONVERT(Mem78[s0_53 + 28<i32>:byte], byte, word32)
	a4_107 = CONVERT(SLICE(a5_80, byte, 0), byte, int32)
	branch a4_107 < 0<32> l2303D440
l2303D440:
	word32 a5_84
	a4_107 = 191<i32>
	branch a5_80 <=u 191<i32> l2303D450
l2303D450:
	a5_84 = 0x10000000<32>
l2303D448:
	a5_84 = 0x1000000<32>
l2303D44C:
	a5_79 = a5_84 + 0xFFFFFFFF<32>
l2303D43A:
	a5_79 = 255<i32>
l2303D3C8:
l2303D3CA:
	word32 s0_103 = Mem102[a5_79 + 36<i32>:word32]
	branch a5_79 != 0<32> l2303D3E0
l2303D3D2:
	s0_103 = Mem104[a5_79 + 28<i32>:word32]
	a4_107 = 0x1000000<32>
l2303D3E0:
	word32 a1_580
	word32 a5_582
	word32 s4_583
	word32 a2_581
	ra = netif_set_addr(ra, a0_11, a0_11, s0_103 + 28<i32>, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a4_107, dhcp_set_state(s0_103, 0xA<32>), s3, s4, s7, mstatus, a5_79, dwLoc18, dwLoc08, dwArg08, dwArg0C, dwArg24, dwArg28, dwArg38, dwArg48, dwArg4C, dwArg54, dwArg58, s1, dwArg78, dwArg98, dwArg0108, dwArg0118, out s0, out s1, out a1_580, out a2_581, out a3, out a4, out a5_582, out s2, out s3, out s4_583, out s5, out s6, out s7, out mstatus)
l2303D3F8:
	s0Out = s0
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
dhcp_bind_exit:


word32 dhcp_inc_pcb_refcount(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg28, word32 dwArg38, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_start
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0028:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a4 a5 ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 t0 t1 t3 tp
// Preserved: s0 sp
dhcp_inc_pcb_refcount_entry:
l2303D456:
	word32 a5_100
	word32 a4_32
	branch CONVERT(Mem5[0x4200DF10<32>:byte], byte, word32) != 0<32> l2303D4BA
l2303D46E:
	word32 s1_23
	word32 a3_123
	word32 a4_124
	ra = udp_new(ra, 0x4200E000<32>, a3, a4, mstatus, out s1_23, out a3_123, out a4_124, out a5_100)
	Mem31[a0:word32] = s1_23 + -244<i32>
	a4_32 = 0xFFFFFFFF<32>
	branch a0 == 0<32> l2303D4C6
l2303D480:
	Mem37[a0 + 9<i32>:byte] = SLICE(CONVERT(Mem31[a0 + 9<i32>:byte], byte, word32) | 32<i32>, byte, 0)
	word32 a3_125
	word32 a4_126
	word32 a5_127
	word32 a4_128
	word32 a5_129
	udp_recv(udp_connect(udp_bind(a0, 0x2308DE8C<32>, 68<i32>, out a3_125, out a4_126, out a5_127), 0x2308DE8C<32>, 67<i32>, dwArg28, out a4_128, out a5_129, out s2), 0x2303D9D2<32>, 0<32>)
l2303D4BA:
	word32 a5_66 = CONVERT(Mem65[0x4200DF10<32>:byte], byte, word32)
	Mem69[0x4200DF10<32>:byte] = SLICE(a5_66 + 1<32>, byte, 0)
	a4_32 = 0<32>
	a5_100 = a5_66 + 1<32>
l2303D4C6:
	0<32> = dwArg38
	a0Out = a4_32
	a4Out = a4_32
	a5Out = a5_100
	s2Out = s2
	return ra
dhcp_inc_pcb_refcount_exit:


word32 dhcp_option_hostname.isra.0(word32 a0, word32 a1, word32 dwArg44, ptr32 & a0Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_renew
//      dhcp_coarse_tmr
// MayUse:  a0:[0..31] a1:[0..31] Stack +0044:[0..31]
// LiveOut: a0 s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t3
// Preserved: sp
dhcp_option_hostname.isra.0_entry:
l2303D4D4:
	word32 s0_59 = a0
	word32 a2_10 = Mem7[a0:word32]
	branch a0 == 0<32> l2303D52E
l2303D4E4:
	word32 a1_18
	word32 a2_99
	word32 a3_100
	word32 a4_101
	word32 a5_102
	word32 a0_14 = strlen(a0, out a1_18, out a2_99, out a3_100, out a4_101, out a5_102)
	branch a0_14 == 0<32> l2303D52E
l2303D4EA:
	word32 a4_22 = 65<i32> - a1
	word32 a2_24 = dwArg44
	branch a0_14 >=u a4_22 l2303D4FC
l2303D4FA:
	a4_22 = a0_14
l2303D4FC:
	Mem30[a1_18 + a1:byte] = 0xC<8>
	Mem39[CONVERT(SLICE(a1 + 1<i32>, word16, 0), word16, word32) + a1_18:byte] = SLICE(a4_22, byte, 0)
	word32 a3_34 = a1 + 2<i32> << 16<i32>
	word32 a0_41 = dwArg44 + a4_22
	word32 a5_42 = a3_34 >>u 16<i32>
l2303D522:
	branch a2_24 != a0_41 l2303D538
l2303D538:
	a2_24 = a2_24 + 1<32>
	Mem52[a5_42 + a1_18:byte] = SLICE(CONVERT(Mem46[a2_24 + -1<i32>:byte], byte, word32), byte, 0)
	a5_42 = CONVERT(SLICE(a5_42 + 1<i32>, word16, 0), word16, word32)
l2303D526:
	s0_59 = CONVERT(SLICE((a3_34 >>u 16<i32>) + a4_22, word16, 0), word16, word32)
l2303D52E:
	a0Out = s0_59
	s8Out = a2_10
	return s0_59
dhcp_option_hostname.isra.0_exit:


word32 dhcp_reboot(word32 ra, word32 s0, word32 s1, word32 a4, word32 s4, word32 s5, word32 mstatus, word32 dwArg14, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_network_changed
//      dhcp_fine_tmr
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0014:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a4 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_reboot_entry:
l2303D550:
	word32 a0_18 = Mem17[s1 + 40<i32>:word32]
	dhcp_set_state(s1, 3<32>)
	uint16 wLoc22_264 = SLICE(s4, uint16, 16)
	word32 a0_53
	word32 a4_366
	word32 a5_367
	word32 s4_368
	word32 a3_365
	word32 s0_364
	word32 s1_196
	word32 s6_203
	word32 s5_202
	word32 s2_197
	word32 s3_198
	word32 mstatus_210
	word32 ra_211 = dhcp_create_msg(ra, s0, a0_18, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, s5, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_364, out s1_196, out a0_53, out a3_365, out a4_366, out a5_367, out s2_197, out s3_198, out s4_368, out s5_202, out s6_203, out mstatus_210)
	branch a0_53 == 0<32> l2303D67E
l2303D580:
	word32 a5_56 = CONVERT(wLoc22_264, uint16, word32)
	word32 a0_55 = Mem17[3<32>:word32]
	Mem65[a5_56 + 0xEF<32>:byte] = 0x39<8>
	Mem69[CONVERT(SLICE(a5_56 + 1<32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 2<8>
	word32 a0_74 = dhcp_option_short(CONVERT(SLICE(a5_56 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, 576<i32>)
	Mem84[a0_74 + 0xEF<32>:byte] = 0x32<8>
	word32 a0_85 = CONVERT(SLICE(a0_74 + 1<32>, word16, 0), word16, word32) + 0xEF<32>
	Mem87[a0_85:byte] = 4<8>
	word32 s4_89 = a0_74 + 2<i32> << 16<i32>
	word32 a3_369
	word32 a4_370
	word32 a5_371
	word32 a0_99 = dhcp_option_long(s4_89 >>u 0x10<u32>, 0xEF<32>, lwip_htonl(a0_85, out a3_369, out a4_370, out a5_371))
	Mem105[a0_99 + 0xEF<32>:byte] = 0x37<8>
	Mem110[CONVERT(SLICE(a0_99 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	uint16 wLoc22_267 = SLICE(a0_99 + 2<32>, word16, 0)
	word32 a5_114 = 0x2308DE88<32>
l2303D620:
	word32 a4_119 = CONVERT(wLoc22_267, uint16, word32)
	Mem129[a4_119 + 0xEF<32>:byte] = SLICE(CONVERT(Mem118[a5_114 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_125 = a4_119 + 1<i32> << 16<i32>
	wLoc22_267 = SLICE(a0_125 >>u 16<i32>, word16, 0)
	a5_114 = a5_114 + 1<32>
	branch a5_114 != 0xDCF7217C<32> l2303D620
l2303D644:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 a0_144
	word32 mstatus_162
	word32 s2_165
	word32 s3_166
	word32 s4_167
	word32 s6_374
	word32 s8_372
	word32 s8_375
	word32 s1_373
	word32 ra_163 = dhcp_option_trailer(ra_211, a0_144, dhcp_option_hostname.isra.0(a0_125 >>u 16<i32>, 0xEF<32>, dwArg14, out a0_144, out s8_372), a0_55, s4_89 >>u 0x10<u32>, mstatus_210, dwArgE8, out s1_373, out s2_165, out s3_166, out s4_167, out s6_374, out s8_375, out mstatus_162)
	word32 stackArg20 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg296 = <invalid>
	word32 a3_390
	word32 a4_391
	word32 s2_392
	word32 s3_393
	word32 s4_394
	word32 s7_395
	word32 s8_396
	word32 mstatus_397
	udp_sendto_if(ra, a0, a1, a2, a3, a4, s8, mstatus, stackArg20, stackArg120, stackArg136, stackArg168, stackArg184, stackArg200, stackArg232, stackArg248, stackArg296, out a3_390, out a4_391, out s2_392, out s3_393, out s4_394, out s7_395, out s8_396, out mstatus_397)
	word32 s0_398
	word32 a0_399
	word32 a1_400
	word32 a2_401
	word32 a3_402
	word32 a4_403
	word32 a5_404
	word32 a7_405
	word32 s4_406
	word32 s8_407
	ra_211 = pbuf_free(ra_163, s2_165, 67<i32>, s3_166, s4_167, mstatus_162, dwArgF8, out s0_398, out s1_196, out a0_399, out a1_400, out a2_401, out a3_402, out a4_403, out a5_404, out a7_405, out s2_197, out s3_198, out s4_406, out s5_202, out s6_203, out s8_407, out mstatus_210)
l2303D67E:
	word32 a5_214 = CONVERT(Mem213[s1_196 + 6<i32>:byte], byte, word32)
	branch a5_214 == 255<i32> l2303D690
l2303D68A:
	Mem217[s1_196 + 6<i32>:byte] = SLICE(a5_214 + 1<32>, byte, 0)
l2303D690:
	word32 a5_223
	word32 a5_220 = CONVERT(Mem219[s1_196 + 6<i32>:byte], byte, word32)
	branch a5_220 >u 9<32> l2303D6CA
l2303D6CA:
	a5_223 = 0x2000710<32>
l2303D69A:
	a5_223 = CONVERT(SLICE(a5_220 + 1000<i32>, word16, 0), word16, word32)
l2303D6A6:
	Mem237[s1_196 + 8<i32>:word16] = SLICE(a5_223 + 499<i32> ^ 500<i32>, word16, 0)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_196
	a4Out = 500<i32>
	s2Out = s2_197
	s3Out = s3_198
	s4Out = dwArg78
	s5Out = s5_202
	s6Out = s6_203
	mstatusOut = mstatus_210
	return ra_211
dhcp_reboot_exit:


word32 dhcp_select(word32 ra, word32 s0, word32 s1, word32 a0, word32 a4, word32 s4, word32 s5, word32 mstatus, word32 dwArg14, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_fine_tmr
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0014:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s7 s9 sp
dhcp_select_entry:
l2303D6D2:
	uint16 wLoc22_325 = SLICE(s4, uint16, 16)
	branch a0 == 0<32> l2303D88C
l2303D6E8:
	word32 a0_20 = Mem17[s1 + 40<i32>:word32]
	branch s1 == 0<32> l2303D88C
l2303D6F0:
	dhcp_set_state(s1, 1<32>)
	word32 a0_56
	word32 s4_485
	word32 a5_483
	word32 s3_484
	word32 s0_481
	word32 a4_482
	ra = dhcp_create_msg(ra, 0xFFFFFFFA<32>, a0_20, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, s5, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_481, out s1, out a0_56, out a3, out a4_482, out a5_483, out s2, out s3_484, out s4_485, out s5, out s6, out mstatus)
	s3 = a0_56
	branch a0_56 == 0<32> l2303D84E
l2303D710:
	word32 a5_60 = CONVERT(wLoc22_325, uint16, word32)
	Mem68[a5_60 + 0xEF<32>:byte] = 0x39<8>
	Mem71[CONVERT(SLICE(a5_60 + 1<32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 2<8>
	word32 a0_77 = dhcp_option_short(CONVERT(SLICE(a5_60 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, CONVERT(Mem71[s2 + 56<i32>:uint16], uint16, word32))
	Mem83[a0_77 + 0xEF<32>:byte] = 0x32<8>
	Mem89[CONVERT(SLICE(a0_77 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	word32 a5_488
	word32 a4_487
	word32 a3_486
	word32 a0_102 = dhcp_option_long(CONVERT(SLICE(a0_77 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, lwip_htonl(a0_77, out a3_486, out a4_487, out a5_488))
	Mem108[a0_102 + 0xEF<32>:byte] = 0x36<8>
	Mem113[CONVERT(SLICE(a0_102 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	word32 s4_116 = a0_102 + 2<i32> << 16<i32>
	word32 a4_490
	word32 a3_489
	word32 a5_491
	word32 a0_126 = dhcp_option_long(s4_116 >>u 0x10<u32>, 0xEF<32>, lwip_htonl(a0_102, out a3_489, out a4_490, out a5_491))
	Mem132[a0_126 + 0xEF<32>:byte] = 0x37<8>
	Mem137[CONVERT(SLICE(a0_126 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	uint16 wLoc22_329 = SLICE(a0_126 + 2<32>, word16, 0)
	word32 a5_141 = 0x2308DE88<32>
l2303D7E8:
	word32 a4_146 = CONVERT(wLoc22_329, uint16, word32)
	Mem156[a4_146 + 0xEF<32>:byte] = SLICE(CONVERT(Mem145[a5_141 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_152 = a4_146 + 1<i32> << 16<i32>
	wLoc22_329 = SLICE(a0_152 >>u 16<i32>, word16, 0)
	a5_141 = a5_141 + 1<32>
	branch a5_141 != 0xDCF7217C<32> l2303D7E8
l2303D80C:
	word32 a0_171
	word32 mstatus_189
	word32 s2_192
	word32 s3_193
	word32 s8_197
	word32 a3_217
	word32 a4_218
	word32 mstatus_222
	word32 s3_227
	word32 s4_228
	word32 s8_492
	word32 s1_493
	word32 s4_494
	word32 s6_495
	word32 s2_496
	word32 s0_497
	word32 a0_498
	word32 a1_499
	word32 a2_500
	word32 a5_502
	word32 a4_501
	word32 a7_503
	word32 s4_504
	word32 s8_505
	ra = pbuf_free(udp_sendto_if_src(dhcp_option_trailer(ra, a0_171, dhcp_option_hostname.isra.0(a0_152 >>u 16<i32>, 0xEF<32>, dwArg14, out a0_171, out s8_492), a0_56, s4_116 >>u 0x10<u32>, mstatus, dwArgE8, out s1_493, out s2_192, out s3_193, out s4_494, out s6_495, out s8_197, out mstatus_189), Mem177[0x4200DF0C<32>:int32], s3_193, 0x2308DE90<32>, 67<i32>, s2_192, 0x2308DE8C<32>, s8_197, mstatus_189, s0, dwArg48, s5, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_217, out a4_218, out s2_496, out s3_227, out s4_228, out mstatus_222), s3_227, a3_217, a4_218, s4_228, mstatus_222, dwArgF8, out s0_497, out s1, out a0_498, out a1_499, out a2_500, out a3, out a4_501, out a5_502, out a7_503, out s2, out s3, out s4_504, out s5, out s6, out s8_505, out mstatus)
l2303D84E:
	word32 a5_270 = CONVERT(Mem269[s1 + 6<i32>:byte], byte, word32)
	branch a5_270 == 255<i32> l2303D860
l2303D85A:
	Mem273[s1 + 6<i32>:byte] = SLICE(a5_270 + 1<32>, byte, 0)
l2303D860:
	word32 a5_279
	word32 a4_276 = CONVERT(Mem275[s1 + 6<i32>:byte], byte, word32)
	branch a4_276 >u 5<32> l2303D8A0
l2303D8A0:
	a5_279 = 0xEFFFA60<32>
l2303D86A:
	a5_279 = CONVERT(SLICE((1<32> << a4_276) + 1000<i32>, word16, 0), word16, word32)
l2303D87C:
	Mem291[s1 + 8<i32>:word16] = SLICE(a5_279 + 499<i32> ^ 500<i32>, word16, 0)
	a4 = 500<i32>
l2303D88C:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg78
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
dhcp_select_exit:


word32 dhcp_dec_pcb_refcount(word32 a0, word32 a3, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_start
//      dhcp_stop
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
dhcp_dec_pcb_refcount_entry:
l2303D8A8:
	word32 a5_8 = CONVERT(Mem0[0x4200DF10<32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem9[0x4200DF10<32>:byte] = SLICE(a5_8, byte, 0)
	branch a5_8 != 0<32> l2303D8E0
l2303D8E0:
	a3Out = a3
	a4Out = 0x4200DF10<32>
	a5Out = a5_8
	return s1
l2303D8C0:
	word32 s0_15 = Mem12[a0:word32]
	word32 a3_23
	word32 a4_24
	word32 a5_25
	word32 a0_52
	word32 a2_53
	word32 s1_26 = udp_remove(a0, a3, mstatus, out a0_52, out a2_53, out a3_23, out a4_24, out a5_25)
	Mem29[s0_15:word32] = 0<32>
	a3Out = a3_23
	a4Out = a4_24
	a5Out = a5_25
	return s1_26
dhcp_dec_pcb_refcount_exit:


word32 dhcp_handle_ack.isra.3(word32 a0, word32 a1, word32 a4, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a5 s0 s1 s4
// Trashed: a0 a1 a3 a4 a5 s0 s1 s4 s8 t3
// Preserved: sp
dhcp_handle_ack.isra.3_entry:
l2303D8E2:
	word32 a5_12 = CONVERT(Mem10[0x4201FD83<32>:byte], byte, word32)
	Mem14[a0 + 32<i32>:word32] = 0<32>
	Mem15[a0 + 36<i32>:word32] = 0<32>
	word32 s0_111 = a0
	branch a5_12 == 0<32> l2303D910
l2303D906:
	Mem20[Mem15[0x4201FD64<32>:int32] + 40<i32>:word32] = a0
l2303D910:
	word32 a5_25
	word32 a5_23 = CONVERT(Mem22[0x4201FD84<32>:byte], byte, word32)
	branch a5_23 == 0<32> l2303D9BA
l2303D9BA:
	s0_111 = Mem22[a5_23 + 40<i32>:word32]
	a5_25 = a5_23 >>u 1<i32>
l2303D916:
	a5_25 = Mem22[0x4201FD68<32>:int32]
l2303D91E:
	word32 a5_40
	Mem31[a5_25 + 44<i32>:word32] = s0_111
	branch CONVERT(Mem31[0x4201FD85<32>:byte], byte, word32) == 0<32> l2303D9C0
l2303D9C0:
	s0_111 = Mem31[a4 + 40<i32>:word32]
	a5_40 = a4 + 7<32> >>u 3<i32>
l2303D926:
	a5_40 = Mem31[0x4201FD6C<32>:int32]
l2303D92E:
	Mem45[a5_40 + 48<i32>:word32] = s0_111
	Mem60[(CONVERT(Mem45[a1 + 19<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem45[a1 + 17<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem45[a1 + 16<i32>:byte], byte, word32)) | CONVERT(Mem45[a1 + 18<i32>:byte], byte, word32) << 16<i32>)) + 28<i32>:word32] = s0_111
	branch CONVERT(Mem60[0x4201FD86<32>:byte], byte, word32) == 0<32> l2303D9CC
l2303D9CC:
	Mem63[s0_111 + 7<i32>:byte] = 0<8>
l2303D954:
	word32 a3_176
	word32 a4_177
	word32 a5_178
	a0 = lwip_htonl(Mem60[0x4201FD70<32>:int32], out a3_176, out a4_177, out a5_178)
	Mem71[a0 + 32<i32>:word32] = s0_111
	Mem72[s0_111 + 7<i32>:byte] = 1<8>
l2303D968:
	branch CONVERT(Mem74[0x4201FD87<32>:byte], byte, word32) == 0<32> l2303D97C
l2303D96E:
	word32 a3_179
	word32 a4_180
	word32 a5_181
	a0 = lwip_htonl(Mem74[0x4201FD74<32>:int32], out a3_179, out a4_180, out a5_181)
	Mem83[a0 + 36<i32>:word32] = s0_111
l2303D97C:
	word32 a5_110 = CONVERT(Mem85[0x4201FD88<32>:byte], byte, word32)
	branch a5_110 == 0<32> l2303D9B0
l2303D982:
	s0_111 = Mem85[a0 + 32<i32>:word32]
	word32 a4_96
	word32 a3_182
	word32 a5_183
	lwip_htonl(a0, out a3_182, out a4_96, out a5_183)
	word32 a4_184
	word32 a5_185
	word32 a0_107 = dns_setserver(0<32>, fp + 0xFFFFFFEC<32>, a4_96, out a4_184, out a5_185)
	a5_110 = CONVERT(Mem103[0x4201FD89<32>:byte], byte, word32)
	branch a5_110 == 0<32> l2303D9B0
l2303D9A0:
	s0_111 = Mem103[a0_107 + 36<i32>:word32]
	word32 a4_114
	word32 a3_186
	word32 a5_187
	lwip_htonl(a0_107, out a3_186, out a4_114, out a5_187)
	word32 a4_188
	dns_setserver(1<32>, fp + 0xFFFFFFEC<32>, a4_114, out a4_188, out a5_110)
l2303D9B0:
	s1Out = 0x4201FD80<32>
	a5Out = a5_110
	s4Out = dwArg04
	return s0_111
dhcp_handle_ack.isra.3_exit:


void dhcp_recv(word32 ra, word32 s0, word32 a2, word32 a3, word32 a4, word32 s4, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s5 sp
dhcp_recv_entry:
l2303D9D2:
	word32 s1_7 = Mem6[0x4201FEC4<32>:int32]
	word32 s3_310 = Mem31[s1_7 + 40<i32>:int32]
	word32 s2_101 = a2
	branch s3_310 == 0<32> l2303DABA
l2303DA00:
	branch CONVERT(Mem31[s3_310 + 4<i32>:byte], byte, word32) == 0<32> l2303DABA
l2303DA06:
	a4 = CONVERT(Mem31[a2 + 10<i32>:uint16], uint16, word32)
	branch a4 <=u 43<i32> l2303DABA
l2303DA12:
	a4 = 2<32>
	a3 = CONVERT(Mem31[43<i32>:byte], byte, word32)
	branch a3 != 2<32> l2303DABA
l2303DA1E:
	word32 a2_41 = CONVERT(Mem31[s1_7 + 64<i32>:byte], byte, word32)
	a4 = 0<32>
	a3 = 6<32>
l2303DA26:
	branch (a4_2289 & 255<i32>) >=u a2_41 l2303DA32
l2303DA2E:
	branch a4_2289 != 6<32> l2303DAA4
l2303DAA4:
	a4 = a4_2289 + 1<32>
	a4_2289 = a4
	branch CONVERT(Mem31[a4 + 70<i32>:byte], byte, word32) == CONVERT(Mem31[(s1_7 + a4_2289) + 58<i32>:byte], byte, word32) l2303DA26
l2303DA32:
	word32 a5_2240
	branch lwip_htonl(CONVERT(Mem31[0x32<32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem31[0x31<32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem31[0x30<32>:byte], byte, word32) << 8<i32> | CONVERT(Mem31[0x2F<32>:byte], byte, word32))), out a3, out a4, out a5_2240) != Mem31[s3_310:int32] l2303DABA
l2303DA5A:
	word32 a1_2242
	word32 a5_2245
	word32 a2_2243
	word32 t1_2241
	word32 a4_2244
	word32 a0_296
	ra = memset(ra, 0x4201FD80<32>, 0<32>, 0xA<32>, out t1_2241, out a0_296, out a1_2242, out a2_2243, out a3, out a4_2244, out a5_2245)
	s4 = 0x42020000<32>
	a4 = CONVERT(Mem31[a2 + 10<i32>:uint16], uint16, word32)
	branch a4 <=u 43<i32> l2303DABA
l2303DA76:
	word32 s8_109 = CONVERT(Mem31[a2 + 8<i32>:uint16], uint16, word32)
	word32 s11_106 = 240<i32>
l2303DA88:
	word32 s6_102 = s2_101
l2303DA8A:
	word32 a5_105 = CONVERT(Mem904[s6_102 + 10<i32>:uint16], uint16, word32)
	branch s11_106 >=u a5_105 l2303DADE
l2303DADE:
	s6_102 = Mem904[s6_102:int32]
	s11_106 = CONVERT(SLICE(s11_106 - a5_105, word16, 0), word16, word32)
	s8_109 = CONVERT(SLICE(s8_109 - a5_105, word16, 0), word16, word32)
	branch s6_102 != 0<32> l2303DA8A
l2303DAFE:
l2303DA92:
	word32 s7_116 = 0x10000000<32>
	word32 s9_117 = s11_106
	word32 dwLoc68_1401 = Mem904[s6_102 + 4<i32>:int32]
	word32 a5_121 = 0xFFFFFFD<32>
l2303DCCC:
	byte bLoc44_2118 = SLICE(s4, byte, 0)
	branch s9_117 >=u s8_109 l2303DCE2
l2303DCD0:
	a4 = a5_121 + s9_117
	a3 = 255<i32>
	word32 a5_131 = CONVERT(Mem126[a4:byte], byte, word32)
	branch a5_131 != 255<i32> l2303DB00
l2303DB00:
	s7_116 = CONVERT(SLICE(s9_117 + 2<i32>, word16, 0), word16, word32)
	branch s7_116 <u s9_117 l2303DABA
l2303DB10:
	word32 s10_162
	a3 = s9_117 + 1<i32>
	branch a3 >= CONVERT(Mem126[s6_102 + 10<i32>:uint16], uint16, word32) l2303DB48
l2303DB48:
	word32 a4_138 = Mem126[s6_102:int32]
	branch a4_138 == 0<32> l2303DE54
l2303DE54:
	a4 = 51<i32>
	branch a5_131 == 51<i32> l2303DABA
l2303DE5C:
	branch a5_131 >u 51<i32> l2303DE76
l2303DE76:
	branch a5_131 == 54<i32> l2303DC76
l2303DC76:
	a4 = 0<32>
l2303DE7E:
	branch a5_131 >u 54<i32> l2303DE92
l2303DE92:
	branch a5_131 == 58<i32> l2303DC84
l2303DC84:
	a4 = 0<32>
l2303DE9A:
	a4 = 0<32>
l2303DE82:
	branch a5_131 == 52<i32> l2303DC60
l2303DC60:
	a4 = 0<32>
l2303DE8A:
	a4 = 0<32>
l2303DE60:
	a4 = 1<32>
	branch a5_131 == 1<32> l2303DABA
l2303DE66:
	branch a5_131 == 0<32> l2303DC92
l2303DE6A:
	a4 = 3<32>
	branch a5_131 == 3<32> l2303DABA
l2303DE70:
	a4 = 0<32>
l2303DB50:
	a4 = CONVERT(Mem126[Mem126[a4_138 + 4<i32>:word32]:byte], byte, word32)
l2303DB1C:
	a4 = CONVERT(Mem126[a4 + 1<i32>:byte], byte, word32)
l2303DB20:
	branch a5_131 == 51<i32> l2303DC54
l2303DC54:
	a5_131 = 4<32>
	branch a4 != 4<32> l2303DABA
l2303DC5A:
	s0 = 4<32>
	s10_162 = 3<32>
l2303DB28:
	branch a5_131 >u 51<i32> l2303DB58
l2303DB58:
	a3 = 54<i32>
	branch a5_131 == 54<i32> l2303DC78
l2303DC78:
	a5_131 = 4<32>
	branch a4 != 4<32> l2303DABA
l2303DC7E:
	s0 = 4<32>
	s10_162 = 2<32>
l2303DB60:
	branch a5_131 >u 54<i32> l2303DB80
l2303DB80:
	a3 = 58<i32>
	branch a5_131 == 58<i32> l2303DC86
l2303DC86:
	a5_131 = 4<32>
	branch a4 != 4<32> l2303DABA
l2303DC8C:
	s0 = 4<32>
	s10_162 = 4<32>
l2303DB88:
l2303DB8C:
	a3 = 59<i32>
	branch a5_131 != 59<i32> l2303DB42
l2303DB90:
	a5_131 = 4<32>
	branch a4 != 4<32> l2303DABA
l2303DB96:
	s0 = 4<32>
	s10_162 = 5<32>
l2303DB64:
	a3 = 52<i32>
	branch a5_131 == 52<i32> l2303DC62
l2303DC62:
	branch a4 != 1<32> l2303DABA
l2303DC68:
	a5_131 = 240<i32>
	branch s11_106 != 240<i32> l2303DABA
l2303DC70:
	s0 = 1<32>
	s10_162 = 0<32>
l2303DB6C:
l2303DB70:
	a3 = 53<i32>
	branch a5_131 != 53<i32> l2303DB42
l2303DB74:
	a5_131 = 1<32>
	branch a4 != 1<32> l2303DABA
l2303DB7A:
	s0 = 1<32>
	s10_162 = 1<32>
l2303DB2C:
	branch a5_131 == 1<32> l2303DB9C
l2303DB9C:
	a5_131 = 4<32>
	branch a4 != 4<32> l2303DABA
l2303DBA2:
	s0 = 4<32>
	s10_162 = 6<32>
l2303DB32:
	branch a5_131 == 0<32> l2303DC92
l2303DC92:
	s9_117 = CONVERT(SLICE(a3, word16, 0), word16, word32)
l2303DB36:
	a3 = 3<32>
	branch a5_131 == 3<32> l2303DC2E
l2303DC2E:
	branch a5_131 >=u a4 l2303DABA
l2303DC32:
	s10_162 = 7<32>
	s0 = 4<32>
l2303DB3C:
l2303DB3E:
	a3 = 6<32>
	branch a5_131 == 6<32> l2303DC38
l2303DC38:
	branch (a4 & 3<i32>) != 0<32> l2303DABA
l2303DC40:
	a5_131 = 8<32>
	s0 = a4 & 255<i32>
	branch a4 <=u 8<32> l2303DC4C
l2303DC4A:
	s0 = 8<32>
l2303DC4C:
	branch a4 <u s0 l2303DABA
l2303DC50:
	s10_162 = 8<32>
l2303DB42:
	s10_162 = 0xFFFFFFFF<32>
	s0 = 0<32>
l2303DBA6:
	s4 = dwArg74
	branch a5_131 < a4 + s9_117 l2303DABA
l2303DBB0:
	a4 = a4 + s7_116
	s9_117 = CONVERT(SLICE(a4, word16, 0), word16, word32)
	branch s0 == 0<32> l2303DC9A
l2303DBBC:
	dwArg24 = 0<32>
	word32 a5_274 = dwArg74 + -640<i32> + s10_162
l2303DBC4:
	a4 = CONVERT(Mem276[a5_274:byte], byte, word32)
	branch a4 != 0<32> l2303DC9A
l2303DBCC:
	word32 a4_280 = s0 & 255<i32>
	branch s0 <=u 4<32> l2303DBD6
l2303DBD4:
	a4_280 = 4<32>
l2303DBD6:
	dwLoc64 = a4_280
	word32 a5_308
	word32 a1_2283
	word32 a2_2284
	word32 s8_2285
	word32 s1_2282
	s0 = pbuf_copy_partial(s6_102, fp + -68<i32>, a4_280, s7_116, out s1_2282, out a0_296, out a1_2283, out a2_2284, out a3, out a4, out a5_308, out s2_101, out s3_310, out s4, out s8_2285)
	s8_109 = dwArg54
	branch a4 != a0_296 l2303DABA
l2303DBEC:
	branch s0 <=u 4<32> l2303DD36
l2303DD36:
	branch s0 != 4<32> l2303DD5E
l2303DD5E:
	branch s0 != 1<32> l2303DABA
l2303DD64:
	dwArg24 = CONVERT(bLoc44_2118, byte, word32)
l2303DD3A:
	word32 a5_2288
	word32 a4_2287
	a0_296 = lwip_htonl(a0_296, out a3, out a4_2287, out a5_2288)
	dwArg24 = a0_296
l2303DD42:
	word32 a5_332 = s10_162 + 0x4201FD80<32>
	Mem334[a5_332:byte] = 1<8>
	Mem342[(s10_162 << 2<i32>) + 0x4201FD58<32>:word32] = a5_332
	a4 = 1<32>
l2303DC9A:
	a5_121 = CONVERT(Mem356[s6_102 + 10<i32>:uint16], uint16, word32)
	branch s9_117 <u a5_121 l2303DCCC
l2303DCA2:
	s9_117 = CONVERT(SLICE(s9_117 - a5_121, word16, 0), word16, word32)
	s8_109 = CONVERT(SLICE(s8_109 - a5_121, word16, 0), word16, word32)
	branch s9_117 >=u s8_109 l2303DABA
l2303DCBE:
	s6_102 = Mem356[s6_102:int32]
	branch s6_102 == 0<32> l2303DABA
l2303DCC6:
	a5_121 = Mem356[s6_102 + 4<i32>:int32]
	dwLoc68_1401 = a5_121
l2303DBF2:
	a4 = s0 & 3<i32>
	branch (s0 & 3<i32>) != 0<32> l2303DABA
l2303DBFA:
	Mem392[a5_308:byte] = 1<8>
	word32 a5_397
	word32 a4_2286
	a0_296 = lwip_htonl(a0_296, out a3, out a4_2286, out a5_397)
	Mem400[a0_296:word32] = (s10_162 << 2<u32>) + 0x4201FD58<32>
	dwLoc64 = a5_308
	s8_109 = dwArg74
	a4 = CONVERT(SLICE(s7_116 + 4<i32>, word16, 0), word16, word32)
	s0 = s0 + 0xFFFFFFFC<32> & 255<i32>
	a5_274 = a5_397 + 1<32>
	branch a4 <u s7_116 l2303DABA
l2303DC28:
	s10_162 = s10_162 + 1<32>
	s7_116 = a4
l2303DCE2:
	a4 = s4 + -640<i32>
	word32 a5_421 = CONVERT(Mem126[a4:byte], byte, word32)
	branch a5_421 != 0<32> l2303DD6C
l2303DD6C:
	a5_421 = Mem126[0x4201FD58<32>:int32]
	Mem439[a4:byte] = 0<8>
	a4 = 1<32>
	branch a5_421 == 1<32> l2303DD96
l2303DD7A:
	a4 = 2<32>
	branch a5_421 != 2<32> l2303DD8C
l2303DD8C:
	a4 = 3<32>
	branch a5_421 != 3<32> l2303DCEC
l2303DD92:
l2303DD96:
	s8_109 = 236<i32>
	s11_106 = 108<i32>
l2303DCEC:
	branch a5_421 != 0<32> l2303DD80
l2303DD80:
	s8_109 = 108<i32>
	s11_106 = 44<i32>
l2303DCF0:
	branch CONVERT(Mem449[0x4201FD81<32>:byte], byte, word32) == 0<32> l2303DABA
l2303DD00:
	a4 = CONVERT(Mem449[0x4201FD5C<32>:byte], byte, word32)
	a3 = 5<32>
	word32 a1_481 = Mem449[s2_101 + 4<i32>:int32]
	branch a4 != 5<32> l2303DDBA
l2303DDBA:
	a3 = 6<32>
	branch a4 != 6<32> l2303DDFE
l2303DDFE:
	branch a4 != 2<32> l2303DABA
l2303DE04:
	a4 = CONVERT(Mem449[s3_310 + 5<i32>:byte], byte, word32)
	branch a4 != 6<32> l2303DABA
l2303DE0C:
	a4 = CONVERT(Mem449[0x4201FD82<32>:byte], byte, word32)
	branch a4 == 0<32> l2303DABA
l2303DE1C:
	word32 s1_522 = Mem449[s0 + 40<i32>:word32]
	Mem524[s0 + 8<i32>:word16] = 0<16>
	word32 a3_2274
	word32 a5_2276
	word32 a4_2275
	Mem552[lwip_htonl(a0_296, out a3_2274, out a4_2275, out a5_2276) + 24<i32>:word32] = s0
	word32 a4_560 = CONVERT(Mem552[a1_481 + 17<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem552[a1_481 + 16<i32>:byte], byte, word32) | CONVERT(Mem552[a1_481 + 18<i32>:byte], byte, word32) << 16<i32>
	Mem564[(CONVERT(Mem552[a1_481 + 19<i32>:byte], byte, word32) << 24<i32> | a4_560) + 28<i32>:word32] = s0
	word32 s0_2277
	word32 s1_2278
	word32 s6_2281
	word32 s5_2280
	word32 s3_2279
	ra = dhcp_select(ra, s0, s1_522, s1_522, a4_560, s4, 0x4201FD58<32>, mstatus, dwLoc5C, dwLoc28, dwLoc08, dwArg08, 0xFFFFFFD<32>, dwArg28, s5, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, out s0_2277, out s1_2278, out a3, out a4, out s2_101, out s3_2279, out s4, out s5_2280, out s6_2281, out mstatus)
l2303DDC0:
	a4 = CONVERT(Mem449[s3_310 + 5<i32>:byte], byte, word32)
	a3 = 2<32>
	branch (a4 + -3<i32> & 255<i32>) <=u 2<32> l2303DDD8
l2303DDD2:
	branch a4 != 1<32> l2303DABA
l2303DDD8:
	word32 s1_646 = Mem449[a0_296 + 40<i32>:word32]
	word32 a4_671
	word32 mstatus_675
	word32 s0_677
	word32 s1_678
	word32 s4_683
	word32 s1_2268
	word32 s7_2266
	word32 s6_2273
	word32 s0_2267
	word32 s6_2265
	word32 s2_2262
	word32 a5_2261
	word32 s3_2271
	word32 a2_2259
	word32 a1_2258
	word32 a3_2260
	word32 s3_2263
	word32 s5_2264
	word32 a5_2270
	word32 a0_2269
	word32 s5_2272
	ra = dhcp_discover(netif_set_addr(ra, s1_646, s1_646, 0x2308DE8C<32>, 0x2308DE8C<32>, 0x2308DE8C<32>, a4, dhcp_set_state(a0_296, 0xC<32>), s3_310, s4, s7_116, mstatus, dwLoc6C, dwLoc68_1401, dwLoc58, s6, s4, dwLoc2C, dwLoc28, dwLoc18, dwLoc08, dwLoc04, dwArg04, dwArg08, 0xFFFFFFD<32>, dwArg28, dwArg48, dwArgB8, dwArgC8, out s0_677, out s1_678, out a1_2258, out a2_2259, out a3_2260, out a4_671, out a5_2261, out s2_2262, out s3_2263, out s4_683, out s5_2264, out s6_2265, out s7_2266, out mstatus_675), s0_677, s1_678, a4_671, s4_683, mstatus_675, dwLoc18, dwLoc08, dwArg08, 0xFFFFFFD<32>, dwArg28, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, out s0_2267, out s1_2268, out a0_2269, out a3, out a4, out a5_2270, out s2_101, out s3_2271, out s4, out s5_2272, out s6_2273, out mstatus)
l2303DD16:
	word32 s4_732
	word32 a5_729
	word32 s1_731
	word32 s0_730
	word32 a0_738
	word32 a5_722 = CONVERT(Mem449[s3_310 + 5<i32>:byte], byte, word32)
	branch a5_722 != 1<32> l2303DDA0
l2303DDA0:
	a4 = 2<32>
	branch (a5_722 + 0xFFFFFFFD<32> & 255<i32>) >u 2<32> l2303DABA
l2303DDAC:
	s0_730 = dhcp_handle_ack.isra.3(a0_296, a1_481, 2<32>, out s1_731, out a5_729, out s4_732)
	a0_738 = s1_731
l2303DD20:
	word32 a5_2246
	s0_730 = dhcp_handle_ack.isra.3(a0_296, a1_481, 1<32>, out s1_731, out a5_2246, out s4_732)
	word32 a5_750 = CONVERT(Mem449[s1_731 + 65<i32>:byte], byte, word32)
	a0_738 = s1_731
	a5_729 = a5_750 & 8<32>
	branch (a5_750 & 8<32>) == 0<32> l2303DDB4
l2303DDB4:
	word32 s7_2252
	word32 s3_2249
	word32 s5_2250
	word32 s0_2247
	word32 s1_2248
	word32 s6_2251
	ra = dhcp_bind(ra, s0_730, s1_731, a0_738, a5_729, s3_310, s4_732, s7_116, mstatus, dwLoc68_1401, dwLoc64, s8, s6, dwLoc38, dwLoc28, dwLoc24, dwLoc1C, dwLoc18, dwArg08, dwArg28, dwArg98, dwArgA8, out s0_2247, out s1_2248, out a3, out a4, out s2_101, out s3_2249, out s4, out s5_2250, out s6_2251, out s7_2252, out mstatus)
l2303DD30:
	word32 s1_2253
	word32 s3_2254
	word32 s6_2256
	word32 s7_2257
	word32 s5_2255
	ra = dhcp_check(ra, s0_730, s4_732, mstatus, dwLoc6C, s6, dwLoc38, dwLoc28, dwLoc0C, dwLoc08, dwArg08, 0xFFFFFFD<32>, dwArg20, dwArg24, dwArg28, s5, dwArg48, dwArg58, dwArg64, dwArg68, dwArg78, dwArg80, dwArg84, dwArg88, dwArgA8, dwArgF8, out s1_2253, out a3, out a4, out s2_101, out s3_2254, out s4, out s5_2255, out s6_2256, out s7_2257, out mstatus)
l2303DABA:
	word32 s3_2234
	word32 s0_2224
	word32 s8_2238
	word32 s6_2237
	word32 mstatus_2239
	word32 s1_2225
	word32 a7_2232
	word32 s2_2233
	word32 s4_2235
	word32 a4_2230
	word32 s5_2236
	word32 a5_2231
	word32 a1_2227
	word32 a2_2228
	word32 a3_2229
	word32 a0_2226
	pbuf_free(ra, s2_101, a3, a4, s4, mstatus, dwArgB8, out s0_2224, out s1_2225, out a0_2226, out a1_2227, out a2_2228, out a3_2229, out a4_2230, out a5_2231, out a7_2232, out s2_2233, out s3_2234, out s4_2235, out s5_2236, out s6_2237, out s8_2238, out mstatus_2239)
	return
dhcp_recv_exit:


word32 dhcp_network_changed(word32 ra, word32 s0, word32 s1, word32 a5, word32 s4, word32 s5, word32 mstatus, word32 dwArg14, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_set_link_up
// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0014:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_network_changed_entry:
l2303DEA2:
	branch a5 == 0<32> l2303DECE
l2303DEA6:
	word32 a4_6 = CONVERT(Mem0[a5 + 5<i32>:byte], byte, word32)
	branch a4_6 >u 5<32> l2303DEC0
l2303DEC0:
	branch a4_6 != 0xA<32> l2303DEB8
l2303DEB0:
	branch a4_6 >=u 3<32> l2303DEC6
l2303DEC6:
	Mem11[a5 + 6<i32>:byte] = 0<8>
l2303DECA_thunk_dhcp_reboot:
	word32 mstatus_34
	word32 s0_36
	word32 s6_209
	word32 s5_208
	word32 s4_207
	word32 s3_206
	word32 s2_205
	word32 a4_204
	word32 s1_203
	word32 ra_35 = dhcp_reboot(ra, s0, s1, a4_6, s4, s5, mstatus, dwArg14, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s0_36, out s1_203, out a4_204, out s2_205, out s3_206, out s4_207, out s5_208, out s6_209, out mstatus_34)
	s0Out = s0_36
	mstatusOut = mstatus_34
	return ra_35
l2303DEB6:
	branch a4_6 == 0<32> l2303DECE
l2303DECE:
	s0Out = s0
	mstatusOut = mstatus
	return ra
l2303DEB8:
	Mem52[a5 + 6<i32>:byte] = 0<8>
l2303DEBC_thunk_dhcp_discover:
	word32 mstatus_68
	word32 s0_70
	word32 s6_202
	word32 s5_201
	word32 s4_200
	word32 s2_198
	word32 s3_199
	word32 a5_197
	word32 a4_196
	word32 a3_195
	word32 a0_194
	word32 s1_193
	word32 ra_69 = dhcp_discover(ra, s0, s1, a4_6, s4, mstatus, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s0_70, out s1_193, out a0_194, out a3_195, out a4_196, out a5_197, out s2_198, out s3_199, out s4_200, out s5_201, out s6_202, out mstatus_68)
	s0Out = s0_70
	mstatusOut = mstatus_68
	return ra_69
dhcp_network_changed_exit:


word32 dhcp_arp_reply(word32 ra, word32 s0, word32 a0, word32 s4, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[16..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 mstatus ra s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s7 s9 sp
dhcp_arp_reply_entry:
l2303DED0:
	branch a0 == 0<32> l2303DFB2
l2303DFB2:
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	mstatusOut = mstatus
	return ra
l2303DED2:
	uint16 wLoc22_209 = SLICE(s4, uint16, 16)
	word32 a0_17 = Mem16[s0 + 40<i32>:word32]
	branch s0 == 0<32> l2303DFA2
l2303DEE4:
	a4 = CONVERT(Mem16[s0 + 5<i32>:byte], byte, word32)
	branch a4 != 8<32> l2303DFA2
l2303DEEE:
	word32 s0_21 = Mem16[0x24<32>:word32]
	branch a4 != 8<32> l2303DFA2
l2303DEF6:
	dhcp_set_state(s0_21, 0xC<32>)
	word32 s1_41
	word32 a0_55
	word32 s6_358
	word32 s5_357
	word32 s2_356
	word32 a5_355
	word32 a4_354
	word32 s0_151
	ra = dhcp_create_msg(ra, s0_21, a0_17, s0_21, fp + -34<i32>, a4, a0_17, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_151, out s1_41, out a0_55, out a3, out a4_354, out a5_355, out s2_356, out s3, out s4, out s5_357, out s6_358, out mstatus)
	branch a0_55 == 0<32> l2303DF8A
l2303DF12:
	word32 a5_58 = CONVERT(wLoc22_209, uint16, word32)
	word32 a0_57 = Mem16[s1_41 + 4<i32>:word32]
	Mem66[s1_41 + 240<i32> + a5_58:byte] = 0x32<8>
	Mem69[CONVERT(SLICE(a5_58 + 1<32>, word16, 0), word16, word32) + (s1_41 + 240<i32>):byte] = 4<8>
	word32 mstatus_96
	word32 s2_99
	word32 s4_101
	word32 s8_104
	word32 a3_124
	word32 a4_125
	word32 mstatus_129
	word32 s2_133
	word32 s4_135
	word32 a0_367
	word32 a1_368
	word32 a2_369
	word32 s1_366
	word32 s3_365
	word32 s6_364
	word32 s3_363
	word32 s1_362
	word32 a5_361
	word32 a4_360
	word32 a3_359
	word32 a4_370
	word32 a5_371
	word32 a7_372
	word32 s2_373
	word32 s5_374
	word32 s6_375
	word32 s8_376
	ra = pbuf_free(udp_sendto_if_src(dhcp_option_trailer(ra, dhcp_option_long(CONVERT(SLICE(a5_58 + 2<i32>, word16, 0), word16, word32), s1_41 + 240<i32>, lwip_htonl(a0_57, out a3_359, out a4_360, out a5_361)), s1_41 + 240<i32>, a0_55, s4, mstatus, dwArgE8, out s1_362, out s2_99, out s3_363, out s4_101, out s6_364, out s8_104, out mstatus_96), Mem87[0x4200DF0C<32>:int32], s2_99, 0x2308DE90<32>, 67<i32>, s4_101, 0x2308DE8C<32>, s8_104, mstatus_96, s0, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_124, out a4_125, out s2_133, out s3_365, out s4_135, out mstatus_129), s2_133, a3_124, a4_125, s4_135, mstatus_129, dwArgF8, out s0_151, out s1_366, out a0_367, out a1_368, out a2_369, out a3, out a4_370, out a5_371, out a7_372, out s2_373, out s3, out s4, out s5_374, out s6_375, out s8_376, out mstatus)
l2303DF8A:
	word32 a5_176 = CONVERT(Mem175[s0_151 + 6<i32>:byte], byte, word32)
	a4 = 255<i32>
	branch a5_176 == 255<i32> l2303DF9C
l2303DF96:
	Mem179[s0_151 + 6<i32>:byte] = SLICE(a5_176 + 1<32>, byte, 0)
l2303DF9C:
	Mem182[s0_151 + 8<i32>:word16] = 0x14<16>
l2303DFA2:
	0<32> = dwArg0128
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	mstatusOut = mstatus
	return ra
dhcp_arp_reply_exit:


word32 dhcp_renew(word32 ra, word32 s0, word32 s1, word32 a4, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_coarse_tmr
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: mstatus ra s0 s1 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s7 s9 sp
dhcp_renew_entry:
l2303DFB4:
	word32 a0_14 = Mem13[s1 + 40<i32>:word32]
	dhcp_set_state(s1, 5<32>)
	word32 a0_50
	word32 s5_376
	word32 s6_377
	word32 a5_374
	word32 s2_375
	word32 a3_372
	word32 a4_373
	word32 s0_371
	word32 s1_195
	word32 s4_200
	word32 s3_197
	word32 mstatus_209
	word32 ra_210 = dhcp_create_msg(ra, s0, a0_14, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_371, out s1_195, out a0_50, out a3_372, out a4_373, out a5_374, out s2_375, out s3_197, out s4_200, out s5_376, out s6_377, out mstatus_209)
	branch a0_50 == 0<32> l2303E0A2
l2303DFDE:
	word32 a5_53 = CONVERT(wLoc22, uint16, word32)
	word32 a0_52 = Mem13[3<32>:word32]
	Mem62[a5_53 + 0xEF<32>:byte] = 0x39<8>
	Mem65[CONVERT(SLICE(a5_53 + 1<32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 2<8>
	word32 a0_71 = dhcp_option_short(CONVERT(SLICE(a5_53 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, CONVERT(Mem65[s3_197 + 56<i32>:uint16], uint16, word32))
	Mem77[a0_71 + 0xEF<32>:byte] = 0x37<8>
	Mem83[CONVERT(SLICE(a0_71 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	uint16 wLoc22_262 = SLICE(a0_71 + 2<32>, word16, 0)
	word32 a5_104 = 0x2308DE88<32>
l2303E048:
	word32 a4_92 = CONVERT(wLoc22_262, uint16, word32)
	Mem102[a4_92 + 0xEF<32>:byte] = SLICE(CONVERT(Mem91[a5_104 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_98 = a4_92 + 1<i32> << 16<i32>
	wLoc22_262 = SLICE(a0_98 >>u 16<i32>, word16, 0)
	a5_104 = a5_104 + 1<32>
	branch a5_104 != 0xDCF7217C<32> l2303E048
l2303E06C:
	word32 a0_117
	word32 mstatus_135
	word32 s1_137
	word32 s2_138
	word32 s3_139
	word32 s8_143
	word32 a3_160
	word32 a4_161
	word32 mstatus_165
	word32 s2_169
	word32 s4_171
	word32 s7_382
	word32 a0_385
	word32 s0_384
	word32 a2_387
	word32 a1_386
	word32 a4_389
	word32 a3_388
	word32 s5_393
	word32 a5_390
	word32 a7_391
	word32 s6_394
	word32 s8_395
	word32 s2_392
	word32 s8_383
	word32 s6_380
	word32 s3_381
	word32 s8_378
	word32 s4_379
	ra_210 = pbuf_free(udp_sendto_if(dhcp_option_trailer(ra_210, a0_117, dhcp_option_hostname.isra.0(a0_98 >>u 16<i32>, 0xEF<32>, dwArg14, out a0_117, out s8_378), a0_52, s4_200, mstatus_209, dwArgE8, out s1_137, out s2_138, out s3_139, out s4_379, out s6_380, out s8_143, out mstatus_135), Mem123[0x4200DF0C<32>:int32], s2_138, s1_137 + 24<i32>, 67<i32>, s3_139, s8_143, mstatus_135, s0, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_160, out a4_161, out s2_169, out s3_381, out s4_171, out s7_382, out s8_383, out mstatus_165), s2_169, a3_160, a4_161, s4_171, mstatus_165, dwArgF8, out s0_384, out s1_195, out a0_385, out a1_386, out a2_387, out a3_388, out a4_389, out a5_390, out a7_391, out s2_392, out s3_197, out s4_200, out s5_393, out s6_394, out s8_395, out mstatus_209)
l2303E0A2:
	word32 a5_213 = CONVERT(Mem212[s1_195 + 6<i32>:byte], byte, word32)
	branch a5_213 == 255<i32> l2303E0B4
l2303E0AE:
	Mem216[s1_195 + 6<i32>:byte] = SLICE(a5_213 + 1<32>, byte, 0)
l2303E0B4:
	word32 a5_222
	word32 a5_219 = CONVERT(Mem218[s1_195 + 6<i32>:byte], byte, word32)
	branch a5_219 >u 9<32> l2303E0EA
l2303E0EA:
	a5_222 = 0x4FFFE20<32>
l2303E0BE:
	a5_222 = CONVERT(SLICE(a5_219 + 2000<i32>, word16, 0), word16, word32)
l2303E0CA:
	Mem236[s1_195 + 8<i32>:word16] = SLICE(a5_222 + 499<i32> ^ 500<i32>, word16, 0)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_195
	s3Out = s3_197
	s4Out = s4_200
	mstatusOut = mstatus_209
	return ra_210
dhcp_renew_exit:


word32 dhcp_supplied_address(word32 a0, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_stop
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
dhcp_supplied_address_entry:
l2303E0F2:
	branch a0 == 0<32> l2303E114
l2303E114:
l2303E0F4:
	branch a5 == 0<32> l2303E116
l2303E116:
	a4Out = a4
	a5Out = a5
	return 0<32>
l2303E0FA:
	word32 a5_9 = CONVERT(Mem0[a5 + 5<i32>:byte], byte, word32)
	word32 a0_11 = 1<32>
	branch a5_9 == 0xA<32> l2303E10E
l2303E106:
	a0_11 = CONVERT(a5_9 <u -6<i32>, bool, word32)
l2303E10E:
	a4Out = 0xA<32>
	a5Out = a5_9
	return a0_11 & 255<i32>
dhcp_supplied_address_exit:


word32 dhcp_release_and_stop(word32 ra, word32 s0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_start
//      dhcp_coarse_tmr
//      dhcp_fine_tmr
//      dhcp_stop
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_release_and_stop_entry:
	uint16 wLoc26 = SLICE(dwLoc28, uint16, 16)
	word16 wLoc28 = SLICE(dwLoc28, word16, 0)
l2303E118:
	word32 a0_16 = Mem15[s0 + 40<i32>:word32]
	branch s0 == 0<32> l2303E212
l2303E12C:
	a5 = CONVERT(Mem15[s0 + 5<i32>:byte], byte, word32)
	branch a5 == 0<32> l2303E212
l2303E134:
	word32 s0_18 = Mem15[a5 + 24<i32>:word32]
	Mem19[s0_18 + 28<i32>:word32] = 0<32>
	Mem20[s0_18 + 24<i32>:word32] = 0<32>
	Mem21[s0_18 + 32<i32>:word32] = 0<32>
	Mem22[s0_18 + 36<i32>:word32] = 0<32>
	Mem23[s0_18 + 48<i32>:word32] = 0<32>
	Mem24[s0_18 + 44<i32>:word32] = 0<32>
	Mem25[s0_18 + 40<i32>:word32] = 0<32>
	Mem26[s0_18 + 14<i32>:word16] = 0<16>
	Mem27[s0_18 + 16<i32>:word32] = 0<32>
	Mem28[s0_18 + 20<i32>:word16] = 0<16>
	word32 s1_163 = a0_16
	word32 dwLoc28_277 = dwLoc28
	word32 a5_162
	word32 a4_161
	branch dhcp_supplied_address(a0_16, a5, out a4_161, out a5_162) == 0<32> l2303E1E6
l2303E168:
	word32 a0_63
	word32 s0_366
	word32 a3_367
	word32 s2_368
	word32 s3_369
	word32 s5_370
	word32 s6_371
	ra = dhcp_create_msg(ra, s0_18, a0_16, s0_18, fp + -38<i32>, a4_161, s4, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_366, out s1_163, out a0_63, out a3_367, out a4_161, out a5_162, out s2_368, out s3_369, out s4, out s5_370, out s6_371, out mstatus)
	s3 = a0_63
	branch a0_63 == 0<32> l2303E1E6
l2303E17A:
	word32 s2_65 = Mem30[a0_63 + 4<i32>:int32]
	word32 a5_66 = CONVERT(wLoc26, uint16, word32)
	Mem74[s2_65 + 240<i32> + a5_66:byte] = 0x36<8>
	Mem77[CONVERT(SLICE(a5_66 + 1<32>, word16, 0), word16, word32) + (s2_65 + 240<i32>):byte] = 4<8>
	word32 s4_79 = a5_66 + 2<i32> << 16<i32>
	word32 a3_372
	word32 a4_373
	word32 a5_374
	word32 a0_89 = dhcp_option_long(s4_79 >>u 0x10<u32>, s2_65 + 240<i32>, lwip_htonl(a0_63, out a3_372, out a4_373, out a5_374))
	word32 mstatus_104
	word32 s1_106
	word32 s3_108
	word32 s8_112
	word32 a3_129
	word32 a4_130
	word32 mstatus_134
	word32 s3_139
	word32 s4_140
	word32 s2_375
	word32 s4_376
	word32 s6_377
	word32 s2_378
	word32 s8_379
	word32 s0_380
	word32 a0_381
	word32 a1_382
	word32 a2_383
	word32 a3_384
	word32 a7_385
	word32 s2_386
	word32 s5_387
	word32 s6_388
	word32 s8_389
	ra = pbuf_free(udp_sendto_if(dhcp_option_trailer(ra, a0_89, s2_65 + 240<i32>, a0_63, s4_79 >>u 0x10<u32>, mstatus, dwArgE8, out s1_106, out s2_375, out s3_108, out s4_376, out s6_377, out s8_112, out mstatus_104), Mem95[0x4200DF0C<32>:int32], s3_108, fp + -36<i32>, 67<i32>, s1_106, s8_112, mstatus_104, s0, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_129, out a4_130, out s2_378, out s3_139, out s4_140, out s7, out s8_379, out mstatus_134), s3_139, a3_129, a4_130, s4_140, mstatus_134, dwArgF8, out s0_380, out s1_163, out a0_381, out a1_382, out a2_383, out a3_384, out a4_161, out a5_162, out a7_385, out s2_386, out s3, out s4, out s5_387, out s6_388, out s8_389, out mstatus)
	dwLoc28_277 = SEQ(SLICE(a0_89, word16, 0), wLoc28) (alias)
l2303E1E6:
	word32 s0_205
	word32 a1_390
	word32 a2_391
	word32 a5_392
	ra = netif_set_addr(ra, s1_163, s1_163, 0x2308DE8C<32>, 0x2308DE8C<32>, 0x2308DE8C<32>, a4_161, a5_162, s3, s4, s7, mstatus, dwLoc2C, dwLoc28_277, dwLoc18, dwLoc08, dwLoc04, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg68, dwArg88, dwArgF8, dwArg0108, out s0_205, out s1, out a1_390, out a2_391, out a3, out a4, out a5_392, out s2, out s3, out s4, out s5, out s6, out s7, out mstatus)
	dhcp_set_state(s0_205, 0<32>)
	a5 = CONVERT(Mem194[s0_205 + 4<i32>:byte], byte, word32)
	branch a5 == 0<32> l2303E212
l2303E20A:
	s1 = dhcp_dec_pcb_refcount(s0_205, a3, mstatus, out a3, out a4, out a5)
	Mem236[s0_205 + 4<i32>:byte] = 0<8>
l2303E212:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
dhcp_release_and_stop_exit:


word32 dhcp_start(word32 ra, word32 a0, word32 a3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_coarse_tmr
//      dhcp_fine_tmr
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
dhcp_start_entry:
l2303E222:
	word32 s1_12 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l2303E28C
l2303E230:
	word32 a5_14 = CONVERT(Mem11[a0 + 65<i32>:byte], byte, word32)
	s1_12 = 0xFFFFFFF0<32>
	a5 = a5_14 & 1<32>
	branch (a5_14 & 1<32>) == 0<32> l2303E28C
l2303E23A:
	a4 = CONVERT(Mem11[a0 + 56<i32>:uint16], uint16, word32)
	a5 = 575<i32>
	s2 = Mem11[a0 + 40<i32>:int32]
	branch a4 >u 575<i32> l2303E24E
l2303E24E:
	branch s2 != 0<32> l2303E29A
l2303E29A:
	branch CONVERT(Mem11[s2 + 4<i32>:byte], byte, word32) == 0<32> l2303E262
l2303E2A0:
	word32 a3_331
	word32 a4_332
	word32 a5_333
	dhcp_dec_pcb_refcount(a0, a3, mstatus, out a3_331, out a4_332, out a5_333)
l2303E254:
	word32 a0_33
	word32 a1_317
	word32 a3_318
	word32 a7_319
	word32 s2_320
	word32 s8_321
	mem_malloc(ra, a0, 52<i32>, a3, a4, s2, mstatus, dwArg04, dwArg24, dwArg84, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0178, out a0_33, out a1_317, out a3_318, out a4, out a5, out a7_319, out s2_320, out s3, out s4, out s5, out s6, out s8_321)
	s2 = a0_33
	branch a0_33 == 0<32> l2303E24A
l2303E260:
	Mem56[a0_33 + 40<i32>:word32] = a0
l2303E262:
	word32 a0_62
	word32 a3_65
	word32 a4_66
	word32 a0_74
	word32 t1_327
	word32 a1_328
	word32 a2_329
	word32 a5_330
	ra = dhcp_inc_pcb_refcount(memset(ra, s2, 0<32>, 52<i32>, out t1_327, out a0_62, out a1_328, out a2_329, out a3_65, out a4_66, out a5_330), a0_62, a3_65, a4_66, mstatus, dwArg18, dwArg28, out a0_74, out a4, out a5, out s2)
	s1_12 = a0_74
	branch a0_74 != 0<32> l2303E24A
l2303E276:
	Mem90[s2 + 4<i32>:byte] = 1<8>
	branch (CONVERT(Mem90[a0 + 65<i32>:byte], byte, word32) & 4<32>) != 0<32> l2303E2A6
l2303E2A6:
	word32 a0_97
	word32 s0_107
	word32 s1_322
	word32 a3_323
	ra = dhcp_discover(ra, a0, a0_74, a4, s4, mstatus, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out s0_107, out s1_322, out a0_97, out a3_323, out a4, out a5, out s2, out s3, out s4, out s5, out s6, out mstatus)
	s1_12 = a0_97
	branch a0_97 == 0<32> l2303E28C
l2303E2B0:
	word32 s0_324
	word32 s1_325
	word32 a3_326
	ra = dhcp_release_and_stop(ra, s0_107, s3, s4, s7, mstatus, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out s0_324, out s1_325, out a3_326, out a4, out a5, out s2, out s3, out s4, out s5, out s6, out s7, out mstatus)
l2303E284:
	a5 = dhcp_set_state(s2, 2<32>)
l2303E24A:
	s1_12 = 0xFFFFFFFF<32>
l2303E28C:
	0<32> = dwArg38
	s1Out = s1_12
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
dhcp_start_exit:


void dhcp_coarse_tmr(word32 ra, word32 s1, word32 s2, word32 s4, word32 s8, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] s8:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_coarse_tmr_entry:
l2303E2B8:
	word32 a5_112 = 0x42020000<32>
	word32 s0_33 = Mem6[0x4201FD90<32>:int32]
	uint16 wLoc32_518 = SLICE(s8, uint16, 16)
	word32 s3_140 = 1<32>
	word32 s4_141 = 0x2000710<32>
	word32 s7_254 = 0x2308E000<32>
	s1_138 = s1
l2303E2EE:
	word32 s1_138
	branch s0_33 != 0<32> l2303E308
l2303E308:
	word32 s0_345
	word32 s0_115 = Mem35[a5_112 + 40<i32>:word32]
	branch a5_112 == 0<32> l2303E336
l2303E30C:
	branch CONVERT(Mem35[a5_112 + 5<i32>:byte], byte, word32) == 0<32> l2303E336
l2303E312:
	word32 a3_38 = CONVERT(Mem35[a5_112 + 20<i32>:uint16], uint16, word32)
	branch a3_38 == 0<32> l2303E33A
l2303E318:
	word32 a4_41 = CONVERT(Mem35[a5_112 + 18<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem43[a5_112 + 18<i32>:word16] = SLICE(a4_41 >>u 16<i32>, word16, 0)
	branch a3_38 != a4_41 >>u 16<i32> l2303E33A
l2303E33A:
	word32 a4_46 = CONVERT(Mem45[a5_112 + 16<i32>:uint16], uint16, word32)
	branch a4_46 == 0<32> l2303E486
l2303E342:
	Mem48[a5_112 + 16<i32>:word16] = SLICE(a4_46 + -1<i32>, word16, 0)
	branch a4_46 != s3_140 l2303E486
l2303E486:
	word32 a4_53 = CONVERT(Mem52[a5_112 + 14<i32>:uint16], uint16, word32)
	branch a4_53 == 0<32> l2303E336
l2303E48E:
	Mem55[a5_112 + 14<i32>:word16] = SLICE(a4_53 + -1<i32>, word16, 0)
	branch a4_53 != s3_140 l2303E336
l2303E49A:
	a5_112 = CONVERT(Mem55[s1_138 + 5<i32>:byte], byte, word32)
	s0_115 = Mem55[s1_138 + 40<i32>:word32]
	word32 a4_62 = a5_112 & 251<i32>
	branch (a5_112 & 251<i32>) == s3_140 l2303E4AE
l2303E4A8:
	a4_62 = 0xA<32>
	branch a5_112 != 0xA<32> l2303E336
l2303E4AE:
	ra = dhcp_renew(ra, s0_115, s1_138, a4_62, s4_141, mstatus, s4, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, out s0_115, out s1_138, out s3_140, out s4_141, out mstatus)
	a5_112 = CONVERT(Mem55[s1_138 + 12<i32>:uint16] - Mem55[s1_138 + 18<i32>:uint16], uint16, uint16)
	branch s3_140 >= a5_112 l2303E336
l2303E4C2:
	Mem114[s1_138 + 14<i32>:word16] = SLICE(a5_112 >> 1<i32>, word16, 0)
	a5_112 = a5_112 >> 1<i32>
l2303E34E:
	s0_115 = Mem48[s1_138 + 40<i32>:word32]
	a5_112 = 0xA<32>
	word32 a4_117 = CONVERT(Mem48[s1_138 + 5<i32>:byte], byte, word32)
	branch a4_117 >u 0xA<32> l2303E336
l2303E35A:
	word32 a5_119 = 1074<i32> >>u a4_117
	a5_112 = a5_119 & 1<32>
	branch (a5_119 & 1<32>) == 0<32> l2303E336
l2303E366:
	dhcp_set_state(s1_138, 4<32>)
	word32 s5_142
	word32 a0_152
	word32 a5_971
	word32 a3_969
	word32 a4_970
	word32 s2_972
	word32 s6_973
	ra = dhcp_create_msg(ra, s0_115, s0_115, s1_138, fp + -50<i32>, a4_117, s4_141, mstatus, dwLoc1C, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out s0_115, out s1_138, out a0_152, out a3_969, out a4_970, out a5_971, out s2_972, out s3_140, out s4_141, out s5_142, out s6_973, out mstatus)
	branch a0_152 == 0<32> l2303E436
l2303E380:
	word32 s2_154 = Mem48[a0_152 + 4<i32>:int32]
	word32 a5_155 = CONVERT(wLoc32_518, uint16, word32)
	Mem163[s2_154 + 240<i32> + a5_155:byte] = 0x39<8>
	Mem166[CONVERT(SLICE(a5_155 + 1<32>, word16, 0), word16, word32) + (s2_154 + 240<i32>):byte] = 2<8>
	word32 a0_172 = dhcp_option_short(CONVERT(SLICE(a5_155 + 2<i32>, word16, 0), word16, word32), s2_154 + 240<i32>, CONVERT(Mem166[s0_115 + 56<i32>:uint16], uint16, word32))
	Mem178[s2_154 + 240<i32> + a0_172:byte] = 0x37<8>
	Mem184[CONVERT(SLICE(a0_172 + 1<i32>, word16, 0), word16, word32) + (s2_154 + 240<i32>):byte] = 4<8>
	uint16 wLoc32_520 = SLICE(a0_172 + 2<32>, word16, 0)
	word32 a5_187 = 0<32>
l2303E3E2:
	word32 a4_191 = CONVERT(wLoc32_520, uint16, word32)
	Mem201[a4_191 + (s2_154 + 240<i32>):byte] = SLICE(CONVERT(Mem190[s5_142 + a5_187:byte], byte, word32), byte, 0)
	word32 a0_197 = a4_191 + 1<i32> << 16<i32>
	wLoc32_520 = SLICE(a0_197 >>u 16<i32>, word16, 0)
	a5_187 = a5_187 + 1<32>
	branch a5_187 != 4<32> l2303E3E2
l2303E406:
	wLoc32_518 = SLICE(a0_216, word16, 0)
	word32 s8_210
	word32 a0_216
	word32 mstatus_233
	word32 s6_240
	word32 s8_241
	word32 a3_260
	word32 a4_261
	word32 mstatus_265
	word32 s4_271
	word32 s8_275
	word32 s3_979
	word32 a4_984
	word32 s6_989
	word32 s2_975
	word32 s1_974
	word32 s3_976
	word32 s4_977
	word32 s2_978
	word32 a0_980
	word32 a1_981
	word32 a2_982
	word32 s2_987
	word32 a3_983
	word32 a5_985
	word32 a7_986
	word32 s5_988
	word32 s8_990
	ra = pbuf_free(udp_sendto_if(dhcp_option_trailer(ra, a0_216, s2_154 + 240<i32>, s8_210, s4_141, mstatus, dwArgD8, out s1_974, out s2_975, out s3_976, out s4_977, out s6_240, out s8_241, out mstatus_233), Mem221[s6_240 + -244<i32>:int32], s8_241, s7_254 + -368<i32>, 67<i32>, dhcp_option_hostname.isra.0(a0_197 >>u 16<i32>, s2_154 + 240<i32>, dwArg04, out a0_216, out s8_210), s8_241, mstatus_233, s4, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out a3_260, out a4_261, out s2_978, out s3_979, out s4_271, out s7_254, out s8_275, out mstatus_265), s8_275, a3_260, a4_261, s4_271, mstatus_265, dwArgE8, out s0_115, out s1_138, out a0_980, out a1_981, out a2_982, out a3_983, out a4_984, out a5_985, out a7_986, out s2_987, out s3_140, out s4_141, out s5_988, out s6_989, out s8_990, out mstatus)
l2303E436:
	word32 a5_312 = CONVERT(Mem311[s1_138 + 6<i32>:byte], byte, word32)
	branch a5_312 == 255<i32> l2303E448
l2303E442:
	Mem315[s1_138 + 6<i32>:byte] = SLICE(a5_312 + 1<32>, byte, 0)
l2303E448:
	word32 a4_318 = CONVERT(Mem317[s1_138 + 6<i32>:byte], byte, word32)
	word32 a5_322 = s4_141
	branch a4_318 >u 9<32> l2303E460
l2303E454:
	a5_322 = CONVERT(SLICE(a4_318 + 1000<i32>, word16, 0), word16, word32)
l2303E460:
	word32 a4_333 = CONVERT(Mem317[s1_138 + 18<i32>:uint16], uint16, word32)
	Mem334[s1_138 + 8<i32>:word16] = SLICE(a5_322 + 499<i32> ^ 500<i32>, word16, 0)
	a5_112 = CONVERT(Mem334[s1_138 + 20<i32>:uint16], uint16, word32) - a4_333
	branch s3_140 >= a5_112 l2303E336
l2303E47E:
	Mem341[s1_138 + 16<i32>:word16] = SLICE(a5_112 >> 1<i32>, word16, 0)
	a5_112 = a5_112 >> 1<i32>
l2303E32A:
	word32 a3_351
	word32 mstatus_355
	word32 s4_362
	word32 s7_365
	word32 s2_961
	word32 a5_960
	word32 s1_958
	word32 a4_959
	word32 a4_965
	word32 s6_964
	word32 s3_962
	word32 s5_963
	word32 s2_966
	word32 s5_967
	word32 s6_968
	ra = dhcp_start(dhcp_release_and_stop(ra, s0_115, s3_140, s4_141, s7_254, mstatus, s4, s2, dwLoc18, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, out s0_345, out s1_958, out a3_351, out a4_959, out a5_960, out s2_961, out s3_962, out s4_362, out s5_963, out s6_964, out s7_365, out mstatus_355), s0_345, a3_351, s4_362, s7_365, mstatus_355, dwLoc3C, dwLoc38, s2, dwLoc1C, dwLoc18, dwLoc14, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0138, out s1_138, out a4_965, out a5_112, out s2_966, out s3_140, out s4_141, out s5_967, out s6_968, out s7_254, out mstatus)
	s0_115 = s0_345
l2303E336:
	s0_33 = Mem407[s0_115:word32]
l2303E2F0:
	0<32> = dwArg0198
	return
dhcp_coarse_tmr_exit:


void dhcp_fine_tmr(word32 ra, word32 s0, word32 s1, word32 a4, word32 s2, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_fine_tmr_entry:
l2303E4CA:
	word32 s0_262 = Mem6[0x4201FD90<32>:int32]
	word32 s1_113 = 1<32>
	word32 s2_114 = 0xC<32>
	word32 s3_115 = 6<32>
	word32 s4_116 = 8<32>
	word32 s5_117 = 3<32>
	word32 s6_118 = 5<32>
l2303E4F0:
	branch s0_262 != 0<32> l2303E506
l2303E506:
	word32 s0_135
	word32 s0_193 = Mem30[a4 + 40<i32>:word32]
	branch a4 == 0<32> l2303E518
l2303E50A:
	word32 a5_32 = CONVERT(Mem30[a4 + 8<i32>:uint16], uint16, word32)
	branch s1_113 >=u a5_32 l2303E51C
l2303E51C:
	branch a5_32 != s1_113 l2303E518
l2303E520:
	Mem34[a4 + 8<i32>:word16] = 0<16>
	s0_193 = Mem34[a4 + 40<i32>:word32]
	word32 a5_36 = CONVERT(Mem34[a4 + 5<i32>:byte], byte, word32)
	branch a5_36 == s2_114 l2303E532
l2303E52E:
	branch a5_36 != s3_115 l2303E53A
l2303E53A:
	branch a5_36 != s1_113 l2303E55A
l2303E55A:
	branch a5_36 != s4_116 l2303E574
l2303E574:
	branch a5_36 != s5_117 l2303E518
l2303E578:
	branch s1_113 <u CONVERT(Mem34[a4 + 6<i32>:byte], byte, word32) l2303E534
l2303E582:
	ra = dhcp_reboot(ra, s0_193, s1_113, a4, s4_116, s5_117, mstatus, dwLoc0C, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_193, out s1_113, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out mstatus)
l2303E55E:
	word32 a5_71 = CONVERT(Mem34[a4 + 6<i32>:byte], byte, word32)
	branch s1_113 <u a5_71 l2303E56E
l2303E56E:
	word32 a3_548
	ra = dhcp_bind(ra, s0_193, s1_113, s0_193, a5_71, s3_115, s4_116, s7, mstatus, s2, s0, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg58, dwArg78, dwArgE8, dwArgF8, out s0_193, out s1_113, out a3_548, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7, out mstatus)
l2303E568:
	word32 a3_549
	ra = dhcp_check(ra, s0_193, s4_116, mstatus, s4, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg58, s1, dwArg70, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD0, dwArgD4, dwArgD8, dwArgF8, dwArg0148, out s1_113, out a3_549, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7, out mstatus)
l2303E53E:
	branch s6_118 <u CONVERT(Mem34[a4 + 6<i32>:byte], byte, word32) l2303E54E
l2303E54E:
	word32 a3_141
	word32 mstatus_145
	word32 s4_152
	word32 s7_155
	word32 s2_542
	word32 s1_539
	word32 a4_540
	word32 a5_541
	word32 s3_543
	word32 s5_544
	word32 s6_545
	word32 a5_546
	ra = dhcp_start(dhcp_release_and_stop(ra, s0_193, s3_115, s4_116, s7, mstatus, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_135, out s1_539, out a3_141, out a4_540, out a5_541, out s2_542, out s3_543, out s4_152, out s5_544, out s6_545, out s7_155, out mstatus_145), s0_135, a3_141, s4_152, s7_155, mstatus_145, s4, s2, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0158, out s1_113, out a4, out a5_546, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7, out mstatus)
	s0_193 = s0_135
l2303E548:
	word32 a3_547
	ra = dhcp_select(ra, s0_193, s1_113, s0_193, a4, s4_116, s5_117, mstatus, dwLoc0C, dwArg28, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_193, out s1_113, out a3_547, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out mstatus)
l2303E532:
l2303E534:
	word32 a0_550
	word32 a3_551
	word32 a5_552
	ra = dhcp_discover(ra, s0_193, s1_113, a4, s4_116, mstatus, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_193, out s1_113, out a0_550, out a3_551, out a4, out a5_552, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out mstatus)
l2303E512:
	Mem259[a4 + 8<i32>:word16] = SLICE(a5_32 + 0xFFFFFFFF<32>, word16, 0)
l2303E518:
	s0_262 = Mem261[s0_193:word32]
l2303E4F2:
	0<32> = dwArgA8
	return
dhcp_fine_tmr_exit:


word32 dhcp_stop(word32 ra, word32 s0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, ptr32 & s1Out, ptr32 & s3Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcpd_start
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: mstatus ra s1 s3 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_stop_entry:
l2303E588:
l2303E588_thunk_dhcp_release_and_stop:
	word32 mstatus_22
	word32 s1_24
	word32 s3_28
	word32 s7_32
	word32 s0_63
	word32 a3_64
	word32 a4_65
	word32 a5_66
	word32 s2_67
	word32 s4_68
	word32 s5_69
	word32 s6_70
	word32 ra_23 = dhcp_release_and_stop(ra, s0, s3, s4, s7, mstatus, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s0_63, out s1_24, out a3_64, out a4_65, out a5_66, out s2_67, out s3_28, out s4_68, out s5_69, out s6_70, out s7_32, out mstatus_22)
	s1Out = s1_24
	s3Out = s3_28
	s7Out = s7_32
	mstatusOut = mstatus_22
	return ra_23
dhcp_stop_exit:


word32 etharp_free_entry(word32 ra, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArg38, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_find_entry
//      etharp_cleanup_netif
//      etharp_tmr
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0038:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
etharp_free_entry_entry:
l2303E58C:
	word32 s1_17 = a0
	word32 s0_18 = 0x420150BC<32>
	word32 s2_19 = a0 + 0x420150D4<32>
	word32 a0_20 = Mem16[a0 + 0x420150D4<32>:int32]
	branch a0_20 == 0<32> l2303E5BA
l2303E5B2:
	word32 a1_115
	word32 a2_116
	word32 a4_117
	word32 a5_118
	word32 a7_119
	word32 s8_120
	ra = pbuf_free(ra, a0_20, a3, a0 + 0x18<32>, s4, mstatus, dwArg0118, out s0_18, out s1_17, out a0_20, out a1_115, out a2_116, out a3, out a4_117, out a5_118, out a7_119, out s2_19, out s3, out s4, out s5, out s6, out s8_120, out mstatus)
	Mem49[s2_19:word32] = 0<32>
l2303E5BA:
	Mem55[s1_17 + 0x18<32> + s0_18 + 20<i32>:byte] = 0<8>
	0<32> = dwArg38
	s1Out = s1_17
	a0Out = a0_20
	a3Out = a3
	s2Out = s2_19
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
etharp_free_entry_exit:


word32 etharp_find_entry(word32 ra, word32 a0, word32 a1, word32 a2, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArgF8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
//      etharp_query
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
etharp_find_entry_entry:
l2303E5D2:
	word32 a3_145 = 0x420150BC<32>
	word32 t0_16 = 0<32>
	word32 t6_17 = 0<32>
	word32 t5_18 = 0<32>
	word32 t1_105 = 0xA<32>
	word32 a5_185 = 0<32>
	word32 a4_161 = 0xA<32>
	word32 a7_22 = 0xA<32>
	word32 s1_100 = 0xA<32>
	word32 s0_180 = 0x420150BC<32>
l2303E5FE:
	word32 t4_29 = CONVERT(Mem15[a3_145 + 20<i32>:byte], byte, word32)
	branch a4_161 != 0xA<32> l2303E63C
l2303E63C:
	branch t4_29 != 0<32> l2303E60A
l2303E606:
	branch t4_29 == 0<32> l2303E6C4
l2303E6C4:
	a4_161 = a5_185
l2303E60A:
	branch a0 == 0<32> l2303E622
l2303E60C:
	s2 = Mem15[a0:int32]
	branch s2 != Mem15[a3_145 + 4<i32>:int32] l2303E622
l2303E618:
	branch a2 == 0<32> l2303E6A0
l2303E61A:
	branch Mem15[a3_145 + 8<i32>:int32] == a2 l2303E6A0
l2303E622:
	word32 a6_45 = CONVERT(Mem15[a3_145 + 18<i32>:uint16], uint16, word32)
	branch t4_29 != 1<32> l2303E6BA
l2303E6BA:
	branch a6_45 <u t0_16 l2303E640
l2303E6BE:
	t0_16 = a6_45
	a7_22 = a5_185
l2303E62A:
	branch Mem15[a3_145:int32] == 0<32> l2303E6B0
l2303E6B0:
	branch a6_45 <u t6_17 l2303E640
l2303E6B4:
	t6_17 = a6_45
	s1_100 = a5_185
l2303E632:
	branch a6_45 <u t5_18 l2303E640
l2303E636:
	t5_18 = a6_45
	t1_105 = a5_185
l2303E640:
	word32 a6_72 = CONVERT(SLICE(a5_185 + 1<32>, word16, 0), word16, word32)
	a3_145 = a3_145 + 0x18<32>
	a5_185 = CONVERT(SLICE(a6_72, word16, 0), word16, int32)
	branch a6_72 != 0xA<32> l2303E5FE
l2303E656:
	a3_145 = 1<32>
	a5_185 = 0xFFFFFFFF<32>
	branch a1 != 1<32> l2303E6A0
l2303E65E:
	s3 = a2
	s2 = a0
	branch a4_161 != 0xA<32> l2303E67C
l2303E666:
	branch a7_22 != a4_161 l2303E6C8
l2303E6C8:
	s1_100 = a7_22
l2303E66A:
	branch s1_100 != a7_22 l2303E674
l2303E66E:
	branch t1_105 == s1_100 l2303E6A0
l2303E672:
	s1_100 = t1_105
l2303E674:
	word32 a0_351
	word32 s4_352
	ra = etharp_free_entry(ra, s1_100, 1<32>, s4, mstatus, dwArg18, dwArgF8, out s1_100, out a0_351, out a3_145, out s2, out s3, out s4_352, out s5, out s6, out mstatus)
	a4_161 = s1_100
l2303E67C:
	branch s2 == 0<32> l2303E68E
l2303E680:
	a3_145 = Mem15[s2:int32]
	Mem175[a3_145 + 4<i32>:word32] = a4_161 + 0x420150D4<32>
l2303E68E:
	word32 a5_178 = a4_161 + 0x18<32>
	Mem181[a5_178 + 0x420150CE<32>:word16] = 0<16>
	Mem184[a5_178 + 0x420150C4<32>:word32] = s3
	s0_180 = a5_178 + 0x420150BC<32>
	a5_185 = a4_161
l2303E6A0:
	s0Out = s0_180
	s1Out = s1_100
	a0Out = a5_185
	a3Out = a3_145
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
etharp_find_entry_exit:


word32 etharp_raw(word32 ra, word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg34, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
//      etharp_request
//      etharp_output_to_arp_index
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
etharp_raw_entry:
l2303E6CC:
	word32 a0_213
	word32 a0_47
	word32 s0_52
	word32 s1_53
	word32 s8_54
	word32 s4_60
	word32 a7_62
	word32 a2_312
	word32 a5_313
	word32 s3_199
	word32 s2_198
	word32 mstatus_211
	word32 a4_195
	word32 a3_194
	word32 a1_193
	word32 s5_203
	word32 s6_204
	word32 ra_212 = pbuf_alloc(ra, s0, 0x42020000<32>, 142<i32>, 0x1C<32>, 640<i32>, a3, a4, mstatus, dwLoc3C, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_52, out s1_53, out a0_47, out a1_193, out a2_312, out a3_194, out a4_195, out a5_313, out a7_62, out s2_198, out s3_199, out s4_60, out s5_203, out s6_204, out s8_54, out mstatus_211)
	word32 s1_197 = s1_53 + -616<i32>
	branch a0_47 != 0<32> l2303E734
l2303E734:
	word32 a0_74 = Mem36[s0_52 + 4<i32>:word32]
	word32 a5_314
	word32 a0_77 = lwip_htons(a7_62, out a5_314)
	Mem79[s0_52 + 6<i32>:byte] = SLICE(a0_77, byte, 0)
	Mem81[s0_52 + 7<i32>:byte] = SLICE(a0_77 >>u 8<i32>, byte, 0)
	word32 a1_315
	word32 a2_316
	word32 a3_317
	word32 a4_318
	word32 a5_319
	word32 a6_320
	word32 a7_321
	memcpy(s0_52 + 8<i32>, a3, 6<32>, out a1_315, out a2_316, out a3_317, out a4_318, out a5_319, out a6_320, out a7_321)
	word32 a1_322
	word32 a2_323
	word32 a3_324
	word32 a4_325
	word32 a5_326
	word32 a6_327
	word32 a7_328
	memcpy(s0_52 + 18<i32>, s8_54, 6<32>, out a1_322, out a2_323, out a3_324, out a4_325, out a5_326, out a6_327, out a7_328)
	word32 a1_329
	word32 a2_330
	word32 a3_331
	word32 a4_332
	word32 a5_333
	word32 a6_334
	word32 a7_335
	memcpy(s0_52 + 14<i32>, a4, 4<32>, out a1_329, out a2_330, out a3_331, out a4_332, out a5_333, out a6_334, out a7_335)
	word32 a1_336
	word32 a2_337
	word32 a3_338
	word32 a4_339
	word32 a5_340
	word32 a6_341
	word32 a7_342
	memcpy(s0_52 + 24<i32>, s6_204, 4<32>, out a1_336, out a2_337, out a3_338, out a4_339, out a5_340, out a6_341, out a7_342)
	Mem147[s0_52 + 1<i32>:byte] = 1<8>
	Mem149[s0_52 + 2<i32>:byte] = 8<8>
	Mem151[s0_52 + 4<i32>:byte] = 6<8>
	Mem154[s0_52 + 5<i32>:byte] = 4<8>
	Mem159[s0_52:byte] = 0<8>
	Mem160[s0_52 + 3<i32>:byte] = 0<8>
	word32 a3_165
	word32 a4_166
	word32 s1_169
	word32 s2_170
	word32 s4_172
	word32 s0_343
	word32 s3_344
	word32 ra_178 = ethernet_output(ra_212, s3_199, a0_74, s4_60, 0xFFF806<32>, dwLoc08, dwArg18, dwArg34, dwArgA4, dwArgC0, dwArgC4, dwArgE8, out s0_343, out s1_169, out a3_165, out a4_166, out s2_170, out s3_344, out s4_172)
	Mem187[s1_169 + 24<i32>:word16] = SLICE(CONVERT(Mem160[s1_169 + 24<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s0_345
	word32 a0_346
	word32 a2_347
	word32 a5_348
	word32 a7_349
	word32 s4_350
	word32 s8_351
	ra_212 = pbuf_free(ra_178, s2_170, a3_165, a4_166, s4_172, mstatus_211, dwArgE8, out s0_345, out s1_197, out a0_346, out a1_193, out a2_347, out a3_194, out a4_195, out a5_348, out a7_349, out s2_198, out s3_199, out s4_350, out s5_203, out s6_204, out s8_351, out mstatus_211)
	a0_213 = 0<32>
l2303E70E:
	Mem217[s1_53 + -580<i32>:word16] = SLICE(CONVERT(Mem36[s1_53 + -580<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	a0_213 = 0xFFFFFFFF<32>
l2303E71A:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_197
	a0Out = a0_213
	a1Out = a1_193
	a3Out = a3_194
	a4Out = a4_195
	s2Out = s2_198
	s3Out = s3_199
	s4Out = dwLoc14
	s5Out = s5_203
	s6Out = s6_204
	s7Out = a4
	mstatusOut = mstatus_211
	return ra_212
etharp_raw_exit:


word32 etharp_cleanup_netif(word32 ra, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArgF8, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_set_down
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +00F8:[0..31]
// LiveOut: s0 s4
// Trashed: a2 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a0 a1 a3 a4 a7 mstatus ra s5 s6 sp t0 t1 t4 t5 t6 tp
etharp_cleanup_netif_entry:
l2303E7BE:
	word32 s3_16 = a0
	word32 s0_17 = 0x420150BC<32>
	word32 s1_18 = 0<32>
	word32 s2_19 = 0xA<32>
l2303E7D8:
	word32 a5_22 = CONVERT(Mem14[s0_17 + 20<i32>:byte], byte, word32)
	branch a5_22 == 0<32> l2303E7EA
l2303E7DE:
	s0_17 = Mem14[a5_22 + 8<i32>:word32]
	branch a5_22 != s3_16 l2303E7EA
l2303E7E4:
	word32 a0_141
	word32 s5_142
	word32 s6_143
	ra = etharp_free_entry(ra, s1_18, a3, s4, mstatus, dwArg18, dwArgF8, out s1_18, out a0_141, out a3, out s2_19, out s3_16, out s4, out s5_142, out s6_143, out mstatus)
l2303E7EA:
	s1_18 = s1_18 + 1<32>
	s0_17 = s0_17 + 0x18<32>
	branch s1_18 != s2_19 l2303E7D8
l2303E7F2:
	s4Out = dwArg04
	return s0_17
etharp_cleanup_netif_exit:


void etharp_input(word32 ra, word32 s1, word32 a1, word32 a3, word32 s2, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ethernet_input
// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp t2
etharp_input_entry:
l2303E800:
	branch a1 == 0<32> l2303E998
l2303E998:
	return
l2303E804:
	word32 s3_130 = Mem22[s1 + 4<i32>:word32]
	word32 a4_227 = 256<i32>
	word32 s2_120 = 0x4201FD98<32>
	branch (CONVERT(Mem22[s1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem22[s1:byte], byte, word32)) != 256<i32> l2303E860
l2303E83A:
	a4_227 = CONVERT(Mem22[s1 + 4<i32>:byte], byte, word32)
	branch a4_227 != 6<32> l2303E860
l2303E844:
	a4_227 = CONVERT(Mem22[s1 + 5<i32>:byte], byte, word32)
	branch a4_227 != 4<32> l2303E860
l2303E84E:
	a4_227 = 8<32>
	branch (CONVERT(Mem22[s1 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem22[s1 + 2<i32>:byte], byte, word32)) == 8<32> l2303E890
l2303E890:
	word32 s5_134
	word32 s6_101
	Mem47[0x4201FDB2<32>:word16] = SLICE(CONVERT(Mem22[0x4201FDB2<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a2_590
	word32 a3_591
	word32 a1_589
	word32 a7_595
	word32 a4_592
	word32 a5_593
	word32 a6_594
	memcpy(fp + -56<i32>, s1 + 14<i32>, 4<32>, out a1_589, out a2_590, out a3_591, out a4_592, out a5_593, out a6_594, out a7_595)
	word32 a4_64
	word32 a5_65
	word32 a7_599
	word32 a2_597
	word32 a6_598
	word32 a1_596
	memcpy(fp + -52<i32>, s1 + 24<i32>, 4<32>, out a1_596, out a2_597, out a3, out a4_64, out a5_65, out a6_598, out a7_599)
	s4 = s1 + 8<i32>
	branch a5_65 == 0<32> l2303E8C0
l2303E8BA:
	branch a5_65 == a4_64 l2303E968
l2303E968:
	s5_134 = 1<32>
	s6_101 = 1<32>
l2303E8C0:
	s5_134 = 0<32>
	s6_101 = 2<32>
l2303E8C4:
	word32 s1_119
	word32 s0_118 = dwArg04
	s1_119 = s1
	branch fp == 0xFFFFFFCC<32> l2303E940
l2303E8C8:
	s1_119 = s1
	word32 a5_95
	word32 a4_600
	branch ip4_addr_isbroadcast_u32(fp + -52<i32>, dwArg04, out a3, out a4_600, out a5_95) != 0<32> l2303E940
l2303E8D0:
	s0_118 = dwArgA4
	s1_119 = s1
	branch (a5_95 & 240<i32>) == 224<i32> l2303E940
l2303E8DE:
	word32 a0_111
	word32 s6_601
	ra = etharp_find_entry(ra, fp + -56<i32>, s6_101, dwArgA4, s1 + 8<i32>, mstatus, s2, dwArgB8, out s0_118, out s1_119, out a0_111, out a3, out s2_120, out s3_130, out s4, out s5_134, out s6_601, out mstatus)
	branch a0_111 < 0<32> l2303E940
l2303E8EC:
	Mem146[a0_111 + 0x420150E8<32>:byte] = 2<8>
	Mem147[a0_111 + 0x420150DC<32>:word32] = s0_118
	word32 a5_605
	word32 a6_606
	word32 a7_607
	word32 a1_602
	word32 a2_603
	word32 a4_604
	memcpy(a0_111 + 0x420150E0<32>, s4, 6<32>, out a1_602, out a2_603, out a3, out a4_604, out a5_605, out a6_606, out a7_607)
	word32 s7_162 = Mem147[a0_111 + 0x420150D4<32>:int32]
	Mem163[a0_111 + 0x420150E6<32>:word16] = 0<16>
	branch s7_162 == 0<32> l2303E940
l2303E922:
	Mem165[a0_111 + 0x420150D4<32>:word32] = 0<32>
	word32 a3_174
	word32 a4_175
	word32 s4_181
	word32 a7_617
	word32 s6_618
	word32 s8_619
	word32 a2_614
	word32 a4_615
	word32 a5_616
	word32 s3_611
	word32 a0_612
	word32 a1_613
	word32 s0_608
	word32 s1_609
	word32 s2_610
	ra = pbuf_free(ethernet_output(ra, s0_118, s7_162, s0_118 + 58<i32>, 0xFFF800<32>, dwLoc08, dwArg18, dwArg34, dwArgA4, dwArgC0, dwArgC4, dwArgE8, out s0_608, out s1_609, out a3_174, out a4_175, out s2_610, out s3_611, out s4_181), s7_162, a3_174, a4_175, s4_181, mstatus, dwArgE8, out s0_118, out s1_119, out a0_612, out a1_613, out a2_614, out a3, out a4_615, out a5_616, out a7_617, out s2_120, out s3_130, out s4, out s5_134, out s6_618, out s8_619, out mstatus)
l2303E940:
	word32 a5_226 = CONVERT(Mem222[s1_119 + 7<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem222[s1_119 + 6<i32>:byte], byte, word32)
	a4_227 = 256<i32>
	branch a5_226 == 256<i32> l2303E96E
l2303E96E:
	branch s5_134 == 0<32> l2303E874
l2303E972:
	word32 s6_642
	word32 s7_643
	word32 s2_640
	word32 s5_641
	word32 a0_638
	word32 a1_639
	word32 s0_636
	word32 s1_637
	ra = etharp_raw(ra, s0_118, s0_118 + 58<i32>, s0_118 + 4<i32>, mstatus, dwLoc3C, s2, dwLoc0C, dwArg28, dwArg38, s1, dwArg64, dwArg68, dwArg78, dwArg80, dwArg84, dwArg98, dwArgA8, dwArgD8, dwArg0158, out s0_636, out s1_637, out a0_638, out a1_639, out a3, out a4_227, out s2_640, out s3_130, out s4, out s5_641, out s6_642, out s7_643, out mstatus)
l2303E954:
	a4_227 = 512<i32>
	branch a5_226 == 512<i32> l2303E98E
l2303E98E:
	ra = dhcp_arp_reply(ra, s0_118, s0_118, s4, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, out a3, out a4_227, out s3_130, out s4, out mstatus)
l2303E95C:
	Mem302[s2_120 + 44<i32>:word16] = SLICE(CONVERT(Mem222[s2_120 + 44<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303E860:
	Mem307[0x4201FDC0<32>:word16] = SLICE(CONVERT(Mem22[0x4201FDC0<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem310[0x4201FDB6<32>:word16] = SLICE(CONVERT(Mem307[0x4201FDB6<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303E874:
	word32 mstatus_635
	word32 s5_632
	word32 s6_633
	word32 s8_634
	word32 s2_629
	word32 s3_630
	word32 s4_631
	word32 a4_626
	word32 a5_627
	word32 a7_628
	word32 a1_623
	word32 a2_624
	word32 a3_625
	word32 s0_620
	word32 s1_621
	word32 a0_622
	pbuf_free(ra, s3_130, a3, a4_227, s4, mstatus, dwArgE8, out s0_620, out s1_621, out a0_622, out a1_623, out a2_624, out a3_625, out a4_626, out a5_627, out a7_628, out s2_629, out s3_630, out s4_631, out s5_632, out s6_633, out s8_634, out mstatus_635)
	0<32> = dwArg0198
	return
etharp_input_exit:


word32 etharp_request(word32 ra, word32 s0, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg34, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_tmr
//      etharp_output_to_arp_index
//      etharp_query
//      netif_issue_reports
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
etharp_request_entry:
l2303E99A:
l2303E9B8_thunk_etharp_raw:
	word32 a0_18
	word32 a1_19
	word32 a3_21
	word32 a4_22
	word32 mstatus_26
	word32 s0_28
	word32 s1_29
	word32 s2_30
	word32 s3_31
	word32 s4_32
	word32 s5_33
	word32 s6_34
	word32 s7_35
	word32 ra_27 = etharp_raw(ra, s0, a0 + 58<i32>, a0 + 4<i32>, mstatus, dwArg04, dwArg18, dwArg34, dwArg68, dwArg78, dwArg98, dwArgA4, dwArgA8, dwArgB8, dwArgC0, dwArgC4, dwArgD8, dwArgE8, dwArg0118, dwArg0198, out s0_28, out s1_29, out a0_18, out a1_19, out a3_21, out a4_22, out s2_30, out s3_31, out s4_32, out s5_33, out s6_34, out s7_35, out mstatus_26)
	s0Out = s0_28
	s1Out = s1_29
	a0Out = a0_18
	a1Out = a1_19
	a3Out = a3_21
	a4Out = a4_22
	s2Out = s2_30
	s3Out = s3_31
	s4Out = s4_32
	s5Out = s5_33
	s6Out = s6_34
	s7Out = s7_35
	mstatusOut = mstatus_26
	return ra_27
etharp_request_exit:


void etharp_tmr(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90, word32 dwArg94, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31] Stack +0094:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a2 a4 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a0 a1 a3 a5 a7 mstatus ra s9 sp t0 t1 t4 t5 t6
etharp_tmr_entry:
l2303E9BC:
	word32 s0_114 = 0x420150BC<32>
	word32 s1_112 = 0<32>
	word32 s4_102 = 299<i32>
	word32 s5_103 = 1<32>
	word32 s6_104 = 3<32>
	word32 s2_133 = 4<32>
	word32 s7_134 = 2<32>
	word32 s3_101 = 0xA<32>
l2303E9E8:
	word32 a4_33 = CONVERT(Mem32[s0_114 + 20<i32>:byte], byte, word32)
	branch a4_33 == 0<32> l2303EA0E
l2303E9EE:
	word32 a5_36 = CONVERT(Mem32[s0_114 + 18<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem38[s0_114 + 18<i32>:word16] = SLICE(a5_36 >>u 16<i32>, word16, 0)
	branch s4_102 <u a5_36 >>u 16<i32> l2303EA08
l2303EA00:
	branch a4_33 != s5_103 l2303EA2C
l2303EA2C:
	branch a4_33 != s6_104 l2303EA36
l2303EA36:
	branch a4_33 != s2_133 l2303EA0E
l2303EA3A:
	Mem44[s0_114 + 20<i32>:byte] = SLICE(s7_134, byte, 0)
l2303EA30:
	Mem45[s0_114 + 20<i32>:byte] = SLICE(s2_133, byte, 0)
l2303EA04:
	branch s2_133 >=u a5_36 >>u 16<i32> l2303EA40
l2303EA40:
	word32 a1_268
	word32 a4_269
	ra = etharp_request(ra, Mem38[a0 + 8<i32>:word32], a0, mstatus, dwLoc2C, dwLoc18, dwArg04, dwArg38, dwArg48, dwArg68, dwArg74, dwArg78, dwArg88, dwArg90, dwArg94, dwArgA8, dwArgB8, dwArgE8, dwArg0168, out s0_114, out s1_112, out a0, out a1_268, out a3, out a4_269, out s2_133, out s3_101, out s4_102, out s5_103, out s6_104, out s7_134, out mstatus)
l2303EA08:
	ra = etharp_free_entry(ra, s1_112, a3, s4_102, mstatus, dwArg08, dwArgE8, out s1_112, out a0, out a3, out s2_133, out s3_101, out s4_102, out s5_103, out s6_104, out mstatus)
l2303EA0E:
	s1_112 = s1_112 + 1<32>
	s0_114 = s0_114 + 0x18<32>
	branch s1_112 != s3_101 l2303E9E8
l2303EA16:
	0<32> = dwArg0128
	return
etharp_tmr_exit:


void etharp_output_to_arp_index(word32 ra, word32 a0, word32 a2, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA4, word32 dwArgB8, word32 dwArgC8, word32 dwArgE4, word32 dwArgF8, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_output
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E4:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus s5 s6 s7 s9 sp
etharp_output_to_arp_index_entry:
l2303EA4C:
	word32 s2_115 = a0
	branch CONVERT(Mem22[a2 + 0x420150E8<32>:byte], byte, word32) != 2<32> l2303EAA0
l2303EA84:
	word32 s1_100
	word32 a0_44
	word32 a5_31 = CONVERT(Mem22[a2 + 0x420150E6<32>:uint16], uint16, word32)
	branch a5_31 <=u 284<i32> l2303EAC0
l2303EAC0:
	branch a5_31 <=u 269<i32> l2303EAA0
l2303EAC8:
	word32 s0_232
	word32 a1_233
	word32 a3_234
	word32 a4_235
	word32 s3_236
	word32 s4_237
	word32 s5_238
	word32 s6_239
	word32 s7_240
	word32 mstatus_241
	ra = etharp_raw(ra, a2 + 0x420150E0<32>, a0 + 58<i32>, a0 + 4<i32>, mstatus, s4, dwLoc08, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s0_232, out s1_100, out a0_44, out a1_233, out a3_234, out a4_235, out s2_115, out s3_236, out s4_237, out s5_238, out s6_239, out s7_240, out mstatus_241)
l2303EA90:
	word32 s7_223
	word32 mstatus_224
	word32 s5_221
	word32 s6_222
	word32 s3_219
	word32 s4_220
	word32 a3_217
	word32 a4_218
	word32 s0_215
	word32 a1_216
	ra = etharp_request(ra, a2 + 0x420150E0<32>, a0, mstatus, s4, dwLoc08, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s0_215, out s1_100, out a0_44, out a1_216, out a3_217, out a4_218, out s2_115, out s3_219, out s4_220, out s5_221, out s6_222, out s7_223, out mstatus_224)
l2303EA98:
	branch a0_44 != 0<32> l2303EAA0
l2303EA9A:
	Mem101[s1_100 + 20<i32>:byte] = 3<8>
l2303EAA0:
l2303EABC_thunk_ethernet_output:
	word32 s0_225
	word32 s1_226
	word32 a3_227
	word32 a4_228
	word32 s2_229
	word32 s3_230
	word32 s4_231
	ethernet_output(ra, s2_115, dwArg04, dwArg48, 0xFFF800<32>, dwArg38, dwArg58, dwArg74, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_225, out s1_226, out a3_227, out a4_228, out s2_229, out s3_230, out s4_231)
	return
etharp_output_to_arp_index_exit:


word32 etharp_query(word32 ra, word32 a0, word32 a1, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0100, word32 dwArg0104, word32 dwArg0108, word32 dwArg0128, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_check
//      etharp_output
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0178:[0..31]
// LiveOut: a3 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
etharp_query_entry:
l2303EAE8:
	word32 s1_113
	word32 s2_12 = a0
	word32 a5_593
	word32 a4_592
	word32 a3_112
	branch ip4_addr_isbroadcast_u32(Mem9[a1:int32], a0, out a3_112, out a4_592, out a5_593) != 0<32> l2303EC02
l2303EB0A:
	word32 a5_29 = Mem21[a1:int32]
	a3_112 = a5_29 & 240<i32>
	branch (a5_29 & 240<i32>) == 224<i32> l2303EC02
l2303EB1A:
	branch a5_29 == 0<32> l2303EC02
l2303EC02:
	s1_113 = s1
l2303EB1C:
	word32 a0_37
	word32 s4_144
	word32 s0_118
	ra = etharp_find_entry(ra, a1, 1<32>, a0, a1, mstatus, dwLoc08, dwArgD8, out s0_118, out s1_113, out a0_37, out a3_112, out s2_12, out s3, out s4_144, out s5, out s6, out mstatus)
	branch a0_37 >= 0<32> l2303EB52
l2303EB52:
	word32 a4_65 = (a0_37 & 255<i32>) + 0x18<32>
	s3 = a0_37 & 255<i32>
	s1_113 = 0x420150BC<32>
	branch CONVERT(Mem21[a4_65 + 0x420150D0<32>:byte], byte, word32) == 0<32> l2303EBBE
l2303EBBE:
	Mem72[a4_65 + 0x420150D0<32>:byte] = 1<8>
	Mem73[a4_65 + 0x420150C4<32>:word32] = s2_12
l2303EB70:
	branch s0_118 != 0<32> l2303EB7E
l2303EB74:
	word32 a4_596
	word32 a0_594
	word32 a1_595
	ra = etharp_request(ra, s0_118, s2_12, mstatus, s4, dwLoc08, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s0_118, out s1_113, out a0_594, out a1_595, out a3_112, out a4_596, out s2_12, out s3, out s4_144, out s5, out s6, out s7, out mstatus)
	branch s0_118 == 0<32> l2303EB42
l2303EB7E:
	a3_112 = s3 + 0x18<32>
	word32 a4_116 = CONVERT(Mem115[s1_113 + a3_112 + 20<i32>:byte], byte, word32)
	branch a4_116 <=u 1<32> l2303EBCA
l2303EBCA:
	branch a4_116 != 1<32> l2303EB42
l2303EBCE:
	word32 a5_119 = s0_118
l2303EBD0:
	word32 a4_135
	word32 a0_155
	word32 a4_122 = CONVERT(Mem115[a5_119 + 12<i32>:byte], byte, word32)
	branch (a4_122 & 64<i32>) != 0<32> l2303EC06
l2303EC06:
	ra = pbuf_clone(ra, s0_118, 142<i32>, 640<i32>, s0_118, a3_112, a4_122 & 64<i32>, mstatus, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s1_113, out a0_155, out a3_112, out a4_135, out s2_12, out s3, out s4_144, out s5, out s6, out mstatus)
	s0_118 = a0_155
	branch a0_155 != 0<32> l2303EBE4
l2303EC18:
	Mem162[0x4201FDBC<32>:word16] = SLICE(CONVERT(Mem115[0x4201FDBC<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303EBDA:
	a5_119 = Mem115[a5_119:word32]
	branch a5_119 != 0<32> l2303EBD0
l2303EBDE:
	word32 a5_598
	a0_155 = pbuf_ref(s0_118, a3_112, a4_122 & 64<i32>, mstatus, out a3_112, out a4_135, out a5_598)
l2303EBE4:
	branch a0_155 == 0<32> l2303EBF4
l2303EBF0:
	word32 s8_606
	word32 s4_605
	word32 a7_604
	word32 a5_603
	word32 a4_602
	word32 a2_601
	word32 a1_600
	word32 a0_599
	ra = pbuf_free(ra, a0_155, a3_112, a4_135, s4_144, mstatus, dwArg0108, out s0_118, out s1_113, out a0_599, out a1_600, out a2_601, out a3_112, out a4_602, out a5_603, out a7_604, out s2_12, out s3, out s4_605, out s5, out s6, out s8_606, out mstatus)
l2303EBF4:
	s1_113 = s1_113 + (s3 + 0x18<32>)
	Mem219[s0_118:word32] = s1_113
l2303EB92:
	Mem226[0x4200EF18<32>:byte] = SLICE(s3, byte, 0)
	word32 a2_232 = s2_12 + 58<i32>
l2303EBBA_thunk_ethernet_output:
	word32 a3_243
	word32 s0_246
	word32 s1_247
	word32 s2_248
	word32 s3_249
	word32 s4_250
	word32 a4_597
	word32 ra_256 = ethernet_output(ra, s2_12, s0_118, a2_232, 0xFFF800<32>, dwArg38, dwArg58, dwArg74, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_246, out s1_247, out a3_243, out a4_597, out s2_248, out s3_249, out s4_250)
	s0Out = s0_246
	s1Out = s1_247
	a3Out = a3_243
	s2Out = s2_248
	s3Out = s3_249
	s4Out = s4_250
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra_256
l2303EB2A:
	branch s0_118 == 0<32> l2303EB3E
l2303EB2C:
	Mem266[0x4201FDBC<32>:word16] = SLICE(CONVERT(Mem21[0x4201FDBC<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303EB3E:
l2303EB42:
	s0Out = s1
	s1Out = s1_113
	a3Out = a3_112
	s2Out = s2_12
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
etharp_query_exit:


void etharp_output(word32 ra, word32 s1, word32 a0, word32 a1, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg78, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE0, word32 dwArgE4, word32 dwArgE8, word32 dwArg0108, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
etharp_output_entry:
l2303EC2E:
	word32 a5_22
	word32 a4_477
	word32 a3_476
	word32 a0_19 = ip4_addr_isbroadcast_u32(a0, a0, out a3_476, out a4_477, out a5_22)
	branch a0_19 != 0<32> l2303ED56
l2303ED56:
l2303EC4A:
	word32 s1_229 = Mem11[a5_22:word32]
	branch (a5_22 & 240<i32>) != 224<i32> l2303EC98
l2303EC98:
	word32 s0_30 = Mem11[(a5_22 & 240<i32>) + 8<i32>:word32]
	word32 a4_31 = a0_19
	branch ((a5_22 ^ 224<i32>) & (a5_22 & 240<i32>)) == 0<32> l2303ECBC
l2303ECA4:
	word32 a5_36 = CONVERT(SLICE(a5_22, word16, 0), word16, word32)
	branch a5_36 == 0xFFFFEA9<32> l2303ECBC
l2303ECB2:
	s0_30 = Mem11[a5_36 + 12<i32>:word32]
	branch a5_36 == 0<32> l2303ED0E
l2303ECB8:
	s1_229 = s0_30 + 12<i32>
l2303ECBC:
	word32 a2_136 = CONVERT(Mem11[0x4200DF18<32>:byte], byte, word32)
	word32 a5_49 = 0x420150BC<32>
	branch CONVERT(Mem11[a2_136 + 0x420150E8<32>:byte], byte, word32) <=u 1<32> l2303ED1A
l2303ECE6:
	word32 a3_53 = Mem11[9<32>:word32]
	branch s0_30 != 1<32> l2303ED1A
l2303ECEC:
	s1_229 = Mem11[1<32>:word32]
	branch Mem11[a3_53 + 4<i32>:word32] != 1<32> l2303ED1A
l2303ED1A:
l2303ED1E:
	word32 a0_61 = CONVERT(Mem11[a5_49 + 20<i32>:byte], byte, word32)
	branch a0_61 <=u 1<32> l2303ED3E
l2303ED26:
	a5_49 = Mem11[a0_61 + 8<i32>:word32]
	branch a0_61 != s0_30 l2303ED3E
l2303ED2C:
	a5_49 = Mem11[a0_61 + 4<i32>:word32]
	branch Mem11[s1_229:int32] != a0_61 l2303ED3E
l2303ED3E:
	word32 a4_70 = a4_31 + 1<32>
	a4_31 = a4_70 & 255<i32>
	a5_49 = a5_49 + 0x18<32>
	branch (a4_70 & 255<i32>) != 0xA<32> l2303ED1E
l2303ED4A:
	word32 s0_485
	word32 s1_486
	word32 a3_487
	word32 s4_490
	word32 s5_491
	word32 s3_489
	word32 s6_492
	word32 s2_488
	word32 s7_493
	word32 mstatus_494
	etharp_query(ra, s0_30, s1_229, s4, mstatus, dwLoc0C, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg64, s1, dwArg78, dwArg80, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgE0, dwArgE4, dwArgE8, dwArg0108, dwArg0158, out s0_485, out s1_486, out a3_487, out s2_488, out s3_489, out s4_490, out s5_491, out s6_492, out s7_493, out mstatus_494)
l2303ED36:
	Mem135[0x4200DF18<32>:byte] = SLICE(a4_31, byte, 0)
	a2_136 = a4_31
l2303ECF4:
	Mem141[0x4201FDC6<32>:word16] = SLICE(CONVERT(Mem11[0x4201FDC6<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303ED06:
	etharp_output_to_arp_index(ra, s0_30, a2_136, s4, mstatus, dwLoc1C, dwLoc0C, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg64, s1, dwArg78, dwArg80, dwArg84, dwArg98, dwArgA8, dwArgC4, dwArgD8, dwArgE0, dwArgE4, dwArg0108, dwArg0158)
l2303EC58:
l2303EC84:
	word32 s1_479
	word32 s0_478
	word32 a4_481
	word32 a3_480
	word32 s4_484
	word32 s3_483
	word32 s2_482
	ethernet_output(ra, a0, a1, a0 + 58<i32>, 0xFFF800<32>, dwArg18, dwArg38, dwArg54, dwArgC4, dwArgE0, dwArgE4, dwArg0108, out s0_478, out s1_479, out a3_480, out a4_481, out s2_482, out s3_483, out s4_484)
l2303ED0E:
	return
etharp_output_exit:


word32 igmp_send(word32 ra, word32 s0, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_joingroup_netif
//      igmp_leavegroup_netif
//      igmp_tmr
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
igmp_send_entry:
l2303ED60:
	word32 a5_166
	word32 s1_41
	word32 s4_48
	word32 s6_54
	word32 a1_271
	word32 a3_272
	word32 a5_273
	word32 a7_274
	word32 s8_275
	word32 s3_169
	word32 s5_173
	word32 s0_160
	word32 s2_168
	word32 mstatus_181
	word32 a2_159
	word32 a4_165
	word32 a0_158
	word32 ra_52 = pbuf_alloc(ra, s0, 0x42020000<32>, 182<i32>, 8<32>, 640<i32>, a3, a4, mstatus, dwLoc4C, dwLoc0C, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_160, out s1_41, out a0_158, out a1_271, out a2_159, out a3_272, out a4_165, out a5_273, out a7_274, out s2_168, out s3_169, out s4_48, out s5_173, out s6_54, out s8_275, out mstatus_181)
	branch a0_158 == 0<32> l2303EE54
l2303EE54:
	word32 a5_61 = CONVERT(Mem30[s1_41 + -510<i32>:uint16], uint16, word32)
	Mem63[s1_41 + -510<i32>:word16] = SLICE(a5_61 + 1<32>, word16, 0)
	a5_166 = a5_61 + 1<32>
l2303ED98:
	word32 a5_68 = Mem67[s3_169 + 4<i32>:int32]
	branch s5_173 != 0x16<32> l2303EE3A
l2303EE3A:
	Mem75[s0_160 + 4<i32>:byte] = SLICE(a5_68 & 255<i32>, byte, 0)
	Mem76[s0_160 + 5<i32>:byte] = SLICE(a5_68 >>u 8<u32>, byte, 0)
	Mem77[s0_160 + 6<i32>:byte] = SLICE(a5_68 >>u 0x10<u32>, byte, 0)
	Mem78[s0_160 + 7<i32>:byte] = SLICE(a5_68 >>u 24<i32>, byte, 0)
l2303EDBA:
	Mem80[s0_160 + 7<i32>:byte] = SLICE(a5_68 >>u 24<i32>, byte, 0)
	Mem81[s0_160 + 4<i32>:byte] = SLICE(a5_68 & 255<i32>, byte, 0)
	Mem82[s0_160 + 5<i32>:byte] = SLICE(a5_68 >>u 8<u32>, byte, 0)
	Mem83[s0_160 + 6<i32>:byte] = SLICE(a5_68 >>u 0x10<u32>, byte, 0)
	Mem86[s3_169 + 8<i32>:byte] = 1<8>
l2303EDD4:
	Mem90[s0_160:byte] = SLICE(s5_173, byte, 0)
	Mem91[s0_160 + 1<i32>:byte] = 0<8>
	Mem92[s0_160 + 2<i32>:byte] = 0<8>
	Mem93[s0_160 + 3<i32>:byte] = 0<8>
	word32 a2_101
	word32 a3_276
	word32 a4_277
	word32 a5_278
	word32 a0_99 = inet_chksum(s0_160, 8<32>, a5_68 >>u 0x10<u32>, out a2_101, out a3_276, out a4_277, out a5_278)
	Mem105[s0_160 + 2<i32>:byte] = SLICE(a0_99, byte, 0)
	Mem107[s0_160 + 3<i32>:byte] = SLICE(a0_99 >>u 8<i32>, byte, 0)
	Mem115[s1_41 + -520<i32>:word16] = SLICE(CONVERT(Mem109[s1_41 + -520<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a3_133
	word32 a4_134
	word32 s2_141
	word32 s4_143
	word32 s0_279
	word32 s1_280
	word32 a0_281
	word32 a5_282
	word32 a7_283
	word32 s3_284
	word32 s5_285
	word32 s6_286
	word32 s8_287
	word32 s9_288
	word32 s1_289
	word32 a1_290
	word32 a3_291
	word32 a7_292
	word32 s4_293
	word32 s6_294
	word32 s8_295
	pbuf_free(ip4_output_if_opt(ra_52, s0_160, s1_41 + -616<i32>, a0_158, fp + -40<i32>, a2_101, 1<32>, 0<32>, 2<32>, s4_48, fp + -36<i32>, s4_48, s5_173, s6_54, s7, 4<u16>, out s0_279, out s1_280, out a0_281, out a3_133, out a4_134, out a5_282, out a7_283, out s2_141, out s3_284, out s4_143, out s5_285, out s6_286, out s7, out s8_287, out s9_288), s2_141, a3_133, a4_134, s4_143, mstatus_181, dwArgD8, out s0_160, out s1_289, out a0_158, out a1_290, out a2_159, out a3_291, out a4_165, out a5_166, out a7_292, out s2_168, out s3_169, out s4_293, out s5_173, out s6_294, out s8_295, out mstatus_181)
l2303EE28:
	s0Out = s0_160
	s1Out = dwLoc4C
	a0Out = a0_158
	a2Out = a2_159
	a3Out = s2
	a4Out = a4_165
	a5Out = a5_166
	s2Out = s2_168
	s3Out = s3_169
	s4Out = dwArg0168
	s5Out = s5_173
	s7Out = s7
	mstatusOut = mstatus_181
	return dwLoc08
igmp_send_exit:


word32 igmp_delaying_member(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_input
//      netif_issue_reports
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a1 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
igmp_delaying_member_entry:
l2303EE60:
	word32 a5_5 = CONVERT(Mem0[a0 + 9<i32>:byte], byte, word32)
	word32 a4_31 = 2<32>
	branch a5_5 == 2<32> l2303EE7A
l2303EE6A:
	a4_31 = 1<32>
	branch a5_5 != 1<32> l2303EEB2
l2303EE70:
	a5_5 = CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32)
	branch a5_5 == 0<32> l2303EE7A
l2303EE76:
	branch a1 >=u a5_5 l2303EEB2
l2303EEB2:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = 1<32>
	a5Out = a5_5
	s4Out = s4
	return s1
l2303EE7A:
	word32 s1_25 = a0
	branch a1 >u 2<32> l2303EEA2
l2303EEA2:
	word32 a0_28
	word32 a5_122
	s1_25 = bl_rand(a0, a2, out a0_28, out a1, out a3, out a4_31, out a5_122, out s4)
	word32 s0_39 = a0_28 & a1
	Mem40[s1_25 + 10<i32>:word16] = SLICE(s0_39, word16, 0)
	branch s0_39 == 0<32> l2303EE8C
l2303EEB0:
l2303EE8C:
	Mem43[s1_25 + 10<i32>:word16] = 1<16>
l2303EE92:
	Mem46[s1_25 + 9<i32>:byte] = 1<8>
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_31
	a5Out = 1<32>
	s4Out = s4
	return s1_25
igmp_delaying_member_exit:


word32 igmp_init(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
igmp_init_entry:
l2303EEB4:
	Mem6[0x4200EF20<32>:word32] = 0x10000E0<32>
	Mem10[0x4200EF1C<32>:word32] = 0x20000E0<32>
	a5Out = 0x20000E0<32>
	return 0x4200E000<32>
igmp_init_exit:


word32 igmp_stop(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_remove
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0038:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 s2 tp
// Preserved: s0 sp
igmp_stop_entry:
l2303EED6:
	Mem14[Mem11[s0 + 44<i32>:word32] + 44<i32>:word32] = 0<32>
l2303EEE8:
	branch s0 != 0<32> l2303EEF8
l2303EEF8:
	word32 s1_18 = Mem14[a5 + 72<i32>:word32]
	word32 s2_19 = Mem14[s0:int32]
	branch a5 == 0<32> l2303EF0A
l2303EF00:
	word32 a5_33
	call a5 (retsize: 0;)
		uses: a0:s1_18,a1:s0_15 + 4<i32>,a2:0<32>,a3:a3_43,a4:a4_41,a5:a5_33,mstatus:mstatus,ra:ra_23,s0:s0_15,s1:s1_18,s2:s2_19
		defs: a5:a5_33,ra:ra_27,s0:s0_28,s2:s2_29
l2303EF0A:
	word32 a2_89
	word32 a0_88
	memp_free(0xA<32>, s0, a3, a4, mstatus, out a0_88, out a2_89, out a3, out a4, out a5)
	s0 = s2_19
l2303EEEA:
	0<32> = dwArg38
	a3Out = a3
	return ra
igmp_stop_exit:


word32 igmp_report_groups(word32 s0, word32 a2, word32 a5, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_issue_reports
// MayUse:  a2:[0..31] a5:[0..31] s0:[0..31]
// LiveOut: a1 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
igmp_report_groups_entry:
l2303EF16:
	branch a5 == 0<32> l2303EF38
l2303EF38:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	return s1
l2303EF1A:
	word32 a5_11 = Mem10[s0:word32]
l2303EF22:
	branch s0 != 0<32> l2303EF2C
l2303EF2C:
	s1 = igmp_delaying_member(s0, 5<32>, a2, out a1, out a2, out a3, out a4, out a5_11, out s4)
	s0 = Mem10[s0:word32]
l2303EF24:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5_11
	s4Out = s4
	return s1
igmp_report_groups_exit:


word32 igmp_lookfor_group(word32 a0, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_lookup_group
//      igmp_input
//      igmp_leavegroup_netif
//      ip4_input
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0
// Trashed: a0 a1
// Preserved: sp
igmp_lookfor_group_entry:
l2303EF3A:
	word32 a0_12 = Mem0[a0 + 44<i32>:word32]
l2303EF3C:
	branch a0_12 != 0<32> l2303EF40
l2303EF40:
	a0_12 = Mem0[a4 + 4<i32>:word32]
	branch a4 == a5 l2303EF3E
l2303EF48:
	a0_12 = Mem0[a0_12:word32]
l2303EF3E:
	return a0_12
igmp_lookfor_group_exit:


word32 igmp_lookup_group(word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_start
//      igmp_joingroup_netif
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a3 a4 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
igmp_lookup_group_entry:
l2303EF4C:
	word32 s1_13 = a0
	word32 a0_18 = igmp_lookfor_group(a0, a4, a5)
	branch a0_18 != 0<32> l2303EF86
l2303EF60:
	word32 a5_83
	word32 a2_82
	s1_13 = memp_malloc(Mem11[s0 + 44<i32>:word32], 0xA<32>, a3, a4, mstatus, out a0_18, out a2_82, out a3, out a4, out a5_83)
	branch a0_18 == 0<32> l2303EF86
l2303EF6A:
	word32 a5_31 = 0<32>
	branch a1 == 0<32> l2303EF74
l2303EF70:
	a5_31 = Mem11[a1:int32]
l2303EF74:
	Mem35[a5_31 + 4<i32>:word32] = a0_18
	Mem36[a0_18 + 8<i32>:word32] = 0<32>
	Mem37[a0_18 + 12<i32>:byte] = 0<8>
	branch s0 != 0<32> l2303EF92
l2303EF92:
	word32 s0_39 = Mem37[a5_31:word32]
	Mem40[a5_31:word32] = a0_18
	Mem41[a0_18:word32] = s0_39
l2303EF80:
	Mem42[a0_18:word32] = 0<32>
	Mem44[a0_18 + 44<i32>:word32] = s1_13
l2303EF86:
	0<32> = dwArg38
	a0Out = a0_18
	a3Out = a3
	a4Out = a4
	s2Out = a1
	return s1_13
igmp_lookup_group_exit:


void igmp_start(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_add
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s1 s2 tp
// Preserved: s0 sp
igmp_start_entry:
l2303EF9A:
	word32 a0_18
	word32 a3_24
	word32 a4_25
	word32 s2_76
	word32 s1_21 = igmp_lookup_group(a0, a0, 0x4200DF20<32>, a3, a4, a5, mstatus, dwArg28, out a0_18, out a3_24, out a4_25, out s2_76)
	branch a0_18 == 0<32> l2303EFDE
l2303EFDE:
l2303EFB2:
	Mem29[a0_18 + 9<i32>:byte] = 2<8>
	word32 a5_30 = CONVERT(Mem29[a0_18 + 12<i32>:byte], byte, word32)
	Mem32[a0_18 + 12<i32>:byte] = SLICE(a5_30 + 1<32>, byte, 0)
	word32 s0_33 = Mem32[a5_30 + 0x49<32>:word32]
	branch a5_30 == 1<32> l2303EFD4
l2303EFC8:
	call a5_30 + 1<32> (retsize: 0;)
		uses: a0:s0_33,a1:s1_21 + -224<i32>,a2:1<32>,a3:a3_24,a4:a4_25,a5:a5_30 + 1<32>,mstatus:mstatus,ra:ra,s0:s0_33,s1:s1_21,Stack +0038:dwArg28
l2303EFD4:
	return
igmp_start_exit:


word32 igmp_input(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
igmp_input_entry:
l2303EFE2:
	word32 s1_177
	Mem24[0x4201FDFA<32>:word16] = SLICE(CONVERT(Mem18[0x4201FDFA<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s0_102 = 0x4201FD98<32>
	word32 a1_26 = CONVERT(Mem24[a0 + 10<i32>:uint16], uint16, word32)
	branch a1_26 >u 7<32> l2303F030
l2303F030:
	word32 a0_28 = Mem24[s1 + 4<i32>:word32]
	word32 s4_115 = a2
	word32 a4_38
	word32 a5_39
	word32 a2_107
	word32 a3_111
	branch inet_chksum(s1, a1_26, a4, out a2_107, out a3_111, out a4_38, out a5_39) == 0<32> l2303F050
l2303F050:
	word32 a0_42 = igmp_lookfor_group(a1, a4_38, a5_39)
	branch a0_42 != 0<32> l2303F06C
l2303F06C:
	word32 a4_112
	word32 a5_44 = CONVERT(Mem24[s1:byte], byte, word32)
	branch a5_44 == 0x11<32> l2303F088
l2303F088:
	a3_111 = Mem24[a2:int32]
	word32 a5_57 = CONVERT(Mem24[s1 + 7<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem24[s1 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem24[s1 + 4<i32>:byte], byte, word32)) | CONVERT(Mem24[s1 + 6<i32>:byte], byte, word32) << 16<i32>)
	a4_112 = Mem24[0x4200DF20<32>:int32]
	branch a3_111 != a4_112 l2303F144
l2303F144:
	branch a5_57 == 0<32> l2303F07C
l2303F146:
l2303F0B8:
	branch a5_57 != 0<32> l2303F0FC
l2303F0FC:
	a0_42 = igmp_lookfor_group(a1, a4_112, a5_57)
	branch a0_42 == 0<32> l2303F11C
l2303F11C:
	Mem67[0x4201FDFC<32>:word16] = SLICE(CONVERT(Mem62[0x4201FDFC<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F108:
	Mem72[0x4201FE08<32>:word16] = SLICE(CONVERT(Mem69[0x4201FE08<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a1_431
	word32 a2_432
	word32 a5_433
	igmp_delaying_member(a0_42, CONVERT(Mem72[s1 + 1<i32>:byte], byte, word32), a2_107, out a1_431, out a2_432, out a3_111, out a4_112, out a5_433, out s4_115)
l2303F0BA:
	branch CONVERT(Mem24[s1 + 1<i32>:byte], byte, word32) != 0<32> l2303F0E2
l2303F0E2:
	Mem91[0x4201FE0A<32>:word16] = SLICE(CONVERT(Mem24[0x4201FE0A<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F0C0:
	Mem94[0x4201FE06<32>:word16] = SLICE(CONVERT(Mem24[0x4201FE06<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem96[s1 + 1<i32>:byte] = 0xA<8>
l2303F0D0:
	branch Mem98[a1 + 44<i32>:int32] == 0<32> l2303F0DA
l2303F0D6:
l2303F0D8:
	branch s0_102 != 0<32> l2303F0EE
l2303F0EE:
	word32 a1_429
	word32 a5_430
	s1 = igmp_delaying_member(s0_102, CONVERT(Mem98[s1 + 1<i32>:byte], byte, word32), a2_107, out a1_429, out a2_107, out a3_111, out a4_112, out a5_430, out s4_115)
	s0_102 = Mem98[s0_102:word32]
l2303F076:
	a4_112 = 0x16<32>
	branch a5_44 == 0x16<32> l2303F128
l2303F128:
	Mem123[0x4201FE0C<32>:word16] = SLICE(CONVERT(Mem24[0x4201FE0C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	a4_112 = CONVERT(Mem123[a0_42 + 9<i32>:byte], byte, word32)
	branch a4_112 != 1<32> l2303F0DA
l2303F13C:
	Mem127[0x208<32>:word32] = a0_42
l2303F07C:
	Mem132[0x4201FE04<32>:word16] = SLICE(CONVERT(Mem24[0x4201FE04<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F0DA:
	word32 s0_414
	word32 a0_415
	word32 a1_416
	word32 a2_417
	word32 a3_418
	word32 a4_419
	word32 a5_420
	word32 a7_421
	word32 s2_422
	word32 s3_423
	word32 s4_424
	word32 s5_425
	word32 s6_426
	word32 s8_427
	word32 mstatus_428
	pbuf_free(ra, a0_28, a3_111, a4_112, s4_115, mstatus, dwArgF8, out s0_414, out s1_177, out a0_415, out a1_416, out a2_417, out a3_418, out a4_419, out a5_420, out a7_421, out s2_422, out s3_423, out s4_424, out s5_425, out s6_426, out s8_427, out mstatus_428)
l2303F05A:
	word32 s0_196
	word32 a0_400
	word32 a1_401
	word32 a2_402
	word32 a3_403
	word32 a4_404
	word32 a5_405
	word32 a7_406
	word32 s2_407
	word32 s3_408
	word32 s4_409
	word32 s5_410
	word32 s6_411
	word32 s8_412
	word32 mstatus_413
	pbuf_free(ra, a0_28, a3_111, a4_38, a2, mstatus, dwArgF8, out s0_196, out s1_177, out a0_400, out a1_401, out a2_402, out a3_403, out a4_404, out a5_405, out a7_406, out s2_407, out s3_408, out s4_409, out s5_410, out s6_411, out s8_412, out mstatus_413)
	Mem221[s0_196 + 100<i32>:word16] = SLICE(CONVERT(Mem24[s0_196 + 100<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F03E:
	word32 a0_386
	word32 a1_387
	word32 a2_388
	word32 a7_392
	word32 a5_391
	word32 s2_393
	word32 s5_396
	word32 s3_394
	word32 a4_390
	word32 a3_389
	word32 s8_398
	word32 s6_397
	word32 mstatus_399
	word32 s4_395
	word32 s0_225
	pbuf_free(ra, a0_28, a3_111, a4_38, a2, mstatus, dwArgF8, out s0_225, out s1_177, out a0_386, out a1_387, out a2_388, out a3_389, out a4_390, out a5_391, out a7_392, out s2_393, out s3_394, out s4_395, out s5_396, out s6_397, out s8_398, out mstatus_399)
	Mem250[s0_225 + 102<i32>:word16] = SLICE(CONVERT(Mem24[s0_225 + 102<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F010:
	word32 s2_379
	word32 s4_381
	word32 s3_380
	word32 s5_382
	word32 a7_378
	word32 a5_377
	word32 s8_384
	word32 mstatus_385
	word32 s6_383
	word32 s0_254
	word32 a0_372
	word32 a4_376
	word32 a2_374
	word32 a3_375
	word32 a1_373
	pbuf_free(ra, a0, a3, a4, s4, mstatus, dwArgF8, out s0_254, out s1_177, out a0_372, out a1_373, out a2_374, out a3_375, out a4_376, out a5_377, out a7_378, out s2_379, out s3_380, out s4_381, out s5_382, out s6_383, out s8_384, out mstatus_385)
	Mem279[s0_254 + 104<i32>:word16] = SLICE(CONVERT(Mem24[s0_254 + 104<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F01E:
	0<32> = dwArg0128
	return s1_177
igmp_input_exit:


word32 igmp_joingroup_netif(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg28, word32 dwArg38, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_joingroup
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0028:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
igmp_joingroup_netif_entry:
l2303F148:
	word32 a1_5 = Mem0[a3:word32]
	branch (a3 & 240<i32>) != 224<i32> l2303F1EC
l2303F1EC:
l2303F156:
	word32 a5_11 = 0xFFFFFFFA<32>
	branch a3 == Mem0[0x4200DF20<32>:int32] l2303F1EE
l2303F1EE:
	s1Out = s1
	a0Out = 0xFFFFFFFA<32>
	a3Out = a3
	a4Out = a4
	a5Out = 0xFFFFFFFA<32>
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2303F164:
	word32 a3_24 = CONVERT(Mem22[a0 + 65<i32>:byte], byte, word32)
	word32 sp_14 = fp + 0xFFFFFFF0<32>
	word32 s1_109 = a0
	word32 a3_106 = a3_24 & 32<i32>
	branch (a3_24 & 32<i32>) == 0<32> l2303F1DE
l2303F17A:
	word32 a0_30
	word32 s2_34
	s1_109 = igmp_lookup_group(s0, a0, a1_5, a3_24 & 32<i32>, a4, 0xFFFFFFFA<32>, mstatus, dwArg28, out a0_30, out a3_106, out a4, out s2_34)
	word32 s0_123 = a0_30
	a5_11 = 0xFFFFFFFF<32>
	branch a0_30 == 0<32> l2303F1DE
l2303F186:
	branch CONVERT(Mem22[a0_30 + 9<i32>:byte], byte, word32) != 0<32> l2303F1D2
l2303F18C:
	word32 a5_42 = CONVERT(Mem22[a0_30 + 12<i32>:byte], byte, word32)
	branch a5_42 != 0<32> l2303F19E
l2303F192:
	word32 s1_43 = Mem22[a5_42 + 72<i32>:word32]
	branch a5_42 == 0<32> l2303F19E
l2303F196:
	word32 tp_58
	word32 a6_145
	word32 a7_146
	word32 s3_147
	word32 s4_148
	word32 s5_149
	word32 s6_150
	word32 s8_151
	word32 t0_152
	word32 t1_153
	word32 t3_154
	word32 t4_155
	word32 t5_156
	word32 t6_157
	word32 s9_158
	call a5_42 (retsize: 0;)
		uses: a0:s1_43,a1:s2_34,a2:1<32>,a3:a3_36,a4:a4_37,a6:a6_145,a7:a7_146,mstatus:mstatus,ra:ra,s0:a0_30,s1:s1_43,s2:s2_34,s3:s3_147,s4:s4_148,s5:s5_149,s6:s6_150,s7:s7,s8:s8_151,s9:s9_158,Stack +0038:dwArg28,t0:t0_152,t1:t1_153,t3:t3_154,t4:t4_155,t5:t5_156,t6:t6_157,tp:tp_58
		defs: a3:a3_49,a6:a6_145,a7:a7_146,mstatus:mstatus_59,ra:ra_53,s0:s0_54,s3:s3_147,s4:s4_148,s5:s5_149,s6:s6_150,s8:s8_151,s9:s9_158,sp:sp_47,t0:t0_152,t1:t1_153,t3:t3_154,t4:t4_155,t5:t5_156,t6:t6_157,tp:tp_58
l2303F19E:
	word32 a4_63 = CONVERT(Mem22[0x4201FE0E<32>:uint16], uint16, word32)
	Mem70[0x4201FE0E<32>:word16] = SLICE(a4_63 + 1<32>, word16, 0)
	word32 a0_77
	word32 a2_79
	word32 s1_320
	word32 s2_324
	word32 a5_323
	word32 a4_322
	word32 a3_321
	word32 s5_327
	word32 s4_326
	word32 s3_325
	ra = igmp_send(ra, s0_123, a3_106, a4_63 + 1<32>, s7, mstatus, Mem70[sp_14 + 88<i32>:word32], Mem70[sp_14 + 104<i32>:word32], Mem70[sp_14 + 136<i32>:word32], Mem70[sp_14 + 152<i32>:word32], Mem70[sp_14 + 168<i32>:word32], Mem70[sp_14 + 200<i32>:word32], Mem70[sp_14 + 216<i32>:word32], Mem70[sp_14 + 264<i32>:word32], out s0_123, out s1_320, out a0_77, out a2_79, out a3_321, out a4_322, out a5_323, out s2_324, out s3_325, out s4_326, out s5_327, out s7, out mstatus)
	word32 a0_104
	word32 s4_330
	word32 a5_329
	word32 a1_328
	s1_109 = bl_rand(a0_77, a2_79, out a0_104, out a1_328, out a3_106, out a4, out a5_329, out s4_330)
	word32 a0_116 = a0_104 & 5<32>
	branch (a0_104 & 5<32>) != 0<32> l2303F1C8
l2303F1C6:
	a0_116 = 1<32>
l2303F1C8:
	Mem121[s0_123 + 10<i32>:word16] = SLICE(a0_116, word16, 0)
	Mem122[s0_123 + 9<i32>:byte] = 1<8>
l2303F1D2:
	Mem127[s0_123 + 12<i32>:byte] = SLICE(CONVERT(Mem124[s0_123 + 12<i32>:byte], byte, word32) + 1<32>, byte, 0)
	a5_11 = 0<32>
l2303F1DE:
	0<32> = dwArg38
	s1Out = s1_109
	a0Out = a5_11
	a3Out = a3_106
	a4Out = a4
	a5Out = a5_11
	s7Out = s7
	mstatusOut = mstatus
	return ra
igmp_joingroup_netif_exit:


word32 igmp_joingroup(word32 ra, word32 a0, word32 a5, word32 s7, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_join_leave_group
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a4 a5 mstatus
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
igmp_joingroup_entry:
l2303F1F2:
	word32 a3_40 = a5 & 240<i32>
	branch (a5 & 240<i32>) != 224<i32> l2303F256
l2303F256:
	a4Out = 224<i32>
	a5Out = a5
	mstatusOut = mstatus
	return 0xFFFFFFFA<32>
l2303F200:
	word32 a4_10 = Mem0[0x4200DF20<32>:int32]
	word32 s1_21 = a0
	word32 a0_128 = 0xFFFFFFFA<32>
	branch a5 == a4_10 l2303F226
l2303F21A:
	a5 = 0x42020000<32>
	word32 s0_24 = Mem19[0x4201FD90<32>:int32]
l2303F224:
	branch s0_24 != 0<32> l2303F232
l2303F232:
	word32 a5_28 = CONVERT(Mem19[s0_24 + 65<i32>:byte], byte, word32)
	a5 = a5_28 & 32<i32>
	branch (a5_28 & 32<i32>) == 0<32> l2303F252
l2303F23C:
	branch s1_21 == 0<32> l2303F248
l2303F23E:
	s1_21 = Mem19[a5_28 & 32<i32>:word32]
	branch (a5_28 & 32<i32>) == 0<32> l2303F248
l2303F242:
	s0_24 = Mem19[a4_10 + 4<i32>:word32]
	branch (a5_28 & 32<i32>) != a4_10 l2303F252
l2303F248:
	ra = igmp_joingroup_netif(ra, s0_24, s0_24, a3_40, a4_10, s7, mstatus, dwArg18, dwArg28, out s1_21, out a0_128, out a3_40, out a4_10, out a5, out s7, out mstatus)
	branch a0_128 != 0<32> l2303F226
l2303F252:
	s0_24 = Mem19[s0_24:word32]
l2303F226:
	0<32> = dwArg38
	a4Out = a4_10
	a5Out = a5
	mstatusOut = mstatus
	return a0_128
igmp_joingroup_exit:


word32 igmp_leavegroup_netif(word32 ra, word32 a0, word32 a4, word32 s7, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_leavegroup
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a4 a5 mstatus ra s1 s2 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
igmp_leavegroup_netif_entry:
l2303F25A:
	word32 a1_5 = Mem0[a4:word32]
	branch (a4 & 240<i32>) != 224<i32> l2303F302
l2303F302:
l2303F268:
	word32 a3_10 = Mem0[0x4200DF20<32>:int32]
	word32 a5_11 = 0xFFFFFFFA<32>
	branch a4 == a3_10 l2303F304
l2303F304:
	s1Out = s1
	a0Out = 0xFFFFFFFA<32>
	a4Out = a4
	a5Out = 0xFFFFFFFA<32>
	s2Out = s2
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2303F276:
	word32 a4_24 = CONVERT(Mem22[a0 + 65<i32>:byte], byte, word32)
	word32 s1_153 = a0
	word32 a4_106 = a4_24 & 32<i32>
	branch (a4_24 & 32<i32>) == 0<32> l2303F2E8
l2303F28C:
	word32 a0_28 = igmp_lookfor_group(a0, a4_24 & 32<i32>, 0xFFFFFFFA<32>)
	s2 = a1_5
	word32 s0_109 = a0_28
	a5_11 = 0xFFFFFFFA<32>
	branch a0_28 == 0<32> l2303F2E8
l2303F298:
	word32 a5_32 = CONVERT(Mem22[a0_28 + 12<i32>:byte], byte, word32)
	a4_106 = 1<32>
	branch a5_32 >u 1<32> l2303F2FA
l2303F2FA:
	Mem35[a0_28 + 12<i32>:byte] = SLICE(a5_32 + 0xFFFFFFFF<32>, byte, 0)
l2303F2A2:
l2303F2A4:
	branch a5_32 == 0<32> l2303F2B0
l2303F2A6:
	word32 a5_40 = Mem22[1<32>:word32]
	branch a0_28 != 1<32> l2303F2F6
l2303F2F6:
	a5_32 = 1<32>
l2303F2AC:
	s0_109 = Mem22[1<32>:word32]
	Mem44[1<32>:word32] = a5_40
l2303F2B0:
	word32 a5_47 = CONVERT(Mem46[s0_109 + 8<i32>:byte], byte, word32)
	branch a5_47 == 0<32> l2303F2D2
l2303F2B6:
	word32 a4_50 = CONVERT(Mem46[0x4201FE10<32>:uint16], uint16, word32)
	Mem57[0x4201FE10<32>:word16] = SLICE(a4_50 + 1<32>, word16, 0)
	word32 s4_415
	word32 a2_413
	word32 s3_414
	word32 a0_412
	word32 s1_411
	word32 s5_416
	ra = igmp_send(ra, s0_109, a3_10, a4_50 + 1<32>, s7, mstatus, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out s0_109, out s1_411, out a0_412, out a2_413, out a3_10, out a4_106, out a5_47, out s2, out s3_414, out s4_415, out s5_416, out s7, out mstatus)
l2303F2D2:
	word32 s1_99 = Mem98[a5_47 + 72<i32>:word32]
	branch a5_47 == 0<32> l2303F2DE
l2303F2D6:
	word32 tp_124
	word32 a6_127
	word32 a7_128
	word32 s3_129
	word32 s4_130
	word32 s5_131
	word32 s6_132
	word32 s8_133
	word32 t0_134
	word32 t1_135
	word32 t3_136
	word32 t4_137
	word32 t5_138
	word32 t6_139
	word32 s9_140
	call a5_47 (retsize: 0;)
		uses: a0:s1_99,a1:s2_101,a2:0<32>,a4:a4_106,a6:a6_127,a7:a7_128,mstatus:mstatus_110,ra:ra_108,s0:s0_109,s1:s1_99,s2:s2_101,s3:s3_129,s4:s4_130,s5:s5_131,s6:s6_132,s7:s7_111,s8:s8_133,s9:s9_140,Stack +0058:dwArg48,Stack +0068:dwArg58,Stack +0088:dwArg78,Stack +0098:dwArg88,Stack +00A8:dwArg98,Stack +00C8:dwArgB8,Stack +00D8:dwArgC8,Stack +0108:dwArgF8,t0:t0_134,t1:t1_135,t3:t3_136,t4:t4_137,t5:t5_138,t6:t6_139,tp:tp_124
		defs: a3:a3_117,a4:a4_115,a6:a6_127,a7:a7_128,mstatus:mstatus_125,ra:ra_119,s0:s0_120,s2:s2_121,s3:s3_129,s4:s4_130,s5:s5_131,s6:s6_132,s7:s7_126,s8:s8_133,s9:s9_140,t0:t0_134,t1:t1_135,t3:t3_136,t4:t4_137,t5:t5_138,t6:t6_139,tp:tp_124
l2303F2DE:
	word32 a5_420
	word32 a3_419
	word32 a0_417
	word32 a2_418
	s1_153 = memp_free(0xA<32>, s0_109, a3_10, a4_106, mstatus, out a0_417, out a2_418, out a3_419, out a4_106, out a5_420)
l2303F2E6:
	a5_11 = 0<32>
l2303F2E8:
	0<32> = dwArg38
	s1Out = s1_153
	a0Out = a5_11
	a4Out = a4_106
	a5Out = a5_11
	s2Out = s2
	s7Out = s7
	mstatusOut = mstatus
	return ra
igmp_leavegroup_netif_exit:


word32 igmp_leavegroup(word32 ra, word32 s1, word32 a0, word32 a5, word32 s7, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_join_leave_group
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a4 a5 mstatus s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
igmp_leavegroup_entry:
l2303F308:
	word32 a4_16 = 224<i32>
	word32 s1_17 = 0xFFFFFFFA<32>
	branch (a5 & 240<i32>) != 224<i32> l2303F340
l2303F324:
	a4_16 = Mem13[0x4200DF20<32>:int32]
	s1_17 = 0xFFFFFFFA<32>
	branch a5 == a4_16 l2303F340
l2303F332:
	a5 = 0x42020000<32>
	s0 = Mem13[0x4201FD90<32>:int32]
	word32 s2_26 = a0
l2303F33E:
	branch s0 != 0<32> l2303F350
l2303F350:
	word32 a5_29 = CONVERT(Mem13[s0 + 65<i32>:byte], byte, word32)
	a5 = a5_29 & 32<i32>
	branch (a5_29 & 32<i32>) == 0<32> l2303F376
l2303F35A:
	branch s2_26 == 0<32> l2303F36A
l2303F35E:
	a5 = Mem13[s2_26:int32]
	branch a5 == 0<32> l2303F36A
l2303F364:
	s0 = Mem13[a4_16 + 4<i32>:word32]
	branch a5 != a4_16 l2303F376
l2303F36A:
	word32 a0_50
	ra = igmp_leavegroup_netif(ra, s0, a4_16, s7, mstatus, dwArg18, dwArg28, dwArg38, dwArg58, s1, dwArg78, dwArg98, dwArgA8, dwArgD8, out s1_17, out a0_50, out a4_16, out a5, out s2_26, out s7, out mstatus)
	branch s1_17 == 0<32> l2303F376
l2303F374:
	s1_17 = a0_50
l2303F376:
	s0 = Mem13[s0:word32]
l2303F340:
	a0Out = s1_17
	a4Out = a4_16
	a5Out = a5
	mstatusOut = mstatus
	return s0
igmp_leavegroup_exit:


void igmp_tmr(word32 ra, word32 s0, word32 s1, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
igmp_tmr_entry:
l2303F37A:
	word32 s1_25 = Mem6[0x4201FD90<32>:int32]
	word32 s3_21 = 1<32>
	word32 s4_102 = 0x4200E000<32>
	word32 s5_104 = 2<32>
	word32 s2_106 = 0x4201FD98<32>
l2303F3A2:
	branch s1_25 != 0<32> l2303F3B6
l2303F3B6:
	word32 s1_108 = Mem27[s0 + 44<i32>:word32]
l2303F3B8:
	branch s0 != 0<32> l2303F3BE
l2303F3BE:
	word32 a5_31 = CONVERT(Mem30[s0 + 10<i32>:uint16], uint16, word32)
	branch a5_31 == 0<32> l2303F3FA
l2303F3C4:
	word32 a5_33 = a5_31 + 0xFFFFFFFF<32> << 16<i32>
	Mem35[s0 + 10<i32>:word16] = SLICE(a5_33 >>u 16<i32>, word16, 0)
	branch a5_33 >>u 16<i32> != 0<32> l2303F3FA
l2303F3D0:
	branch CONVERT(Mem35[s0 + 9<i32>:byte], byte, word32) != s3_21 l2303F3FA
l2303F3D8:
	s0 = Mem35[a4 + 4<i32>:word32]
	branch a4 == Mem35[s4_102 + -224<i32>:int32] l2303F3FA
l2303F3E2:
	Mem43[s0 + 9<i32>:byte] = SLICE(s5_104, byte, 0)
	Mem51[s2_106 + 122<i32>:word16] = SLICE(CONVERT(Mem43[s2_106 + 122<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a0_217
	word32 a2_218
	word32 a5_219
	ra = igmp_send(ra, s0, a3, a4, s7, mstatus, dwArg38, dwArg48, s1, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0, out s1_108, out a0_217, out a2_218, out a3, out a4, out a5_219, out s2_106, out s3_21, out s4_102, out s5_104, out s7, out mstatus)
l2303F3FA:
	s0 = Mem85[s0:word32]
l2303F3BA:
	s1_25 = Mem30[s1_108:word32]
l2303F3A4:
	return
igmp_tmr_exit:


word32 ip4_input_accept(word32 a0, word32 a4, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
ip4_input_accept_entry:
l2303F3FE:
	branch (CONVERT(Mem0[a0 + 65<i32>:byte], byte, word32) & 1<32>) == 0<32> l2303F42E
l2303F42E:
	a3Out = a3
	a4Out = a4
	return 0<32>
l2303F406:
	word32 a0_9 = Mem0[a4 + 4<i32>:word32]
	word32 a0_11 = 0<32>
	branch a4 == 0<32> l2303F432
l2303F40E:
	word32 a5_13 = Mem0[0x4201FED4<32>:int32]
	a0_11 = 1<32>
	branch a4 == a5_13 l2303F432
l2303F432:
	a3Out = a3
	a4Out = a4
	return a0_11
l2303F41C:
	word32 a3_20
	word32 a4_21
	word32 a5_48
	word32 a0_25 = CONVERT(ip4_addr_isbroadcast_u32(a5_13, a0_9, out a3_20, out a4_21, out a5_48) != 0<32>, bool, word32)
	a3Out = a3_20
	a4Out = a4_21
	return a0_25
ip4_input_accept_exit:


word32 ip4_route(word32 a2, word32 a5, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_sendto
//      tcp_connect
//      tcp_input
//      tcp_output_control_segment
//      tcp_output
//      udp_sendto
//      icmp_dest_unreach
// MayUse:  a2:[0..31] a5:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
ip4_route_entry:
l2303F434:
	word32 a4_24
	word32 a0_12
	word32 a3_15 = a5 & 240<i32>
	branch (a5 & 240<i32>) != 224<i32> l2303F44C
l2303F442:
	a4_24 = 0x4200E000<32>
	a0_12 = Mem0[0x4200DF24<32>:int32]
	branch a0_12 != 0<32> l2303F4BE
l2303F44C:
	a0_12 = Mem0[0x4201FD90<32>:int32]
l2303F454:
	branch a0_12 != 0<32> l2303F490
l2303F490:
	a3_15 = CONVERT(Mem0[a0_12 + 65<i32>:byte], byte, word32)
	branch (a3_15 & 1<i32>) == 0<32> l2303F4B8
l2303F49A:
	word32 a4_18 = a3_15 >>u 2<u32> & 1<32>
	branch a4_18 == 0<32> l2303F4B8
l2303F4A2:
	a0_12 = Mem0[a4_18 + 4<i32>:word32]
	branch a4_18 == 0<32> l2303F4B8
l2303F4A6:
	a0_12 = Mem0[a2 + 8<i32>:word32]
	a4_24 = (a4_18 ^ a5) & a2
	branch a4_24 == 0<32> l2303F4BE
l2303F4AE:
	a3_15 = a3_15 & 2<32>
	branch (a3_15 & 2<32>) != 0<32> l2303F4B8
l2303F4B2:
	a0_12 = Mem0[a4_24 + 12<i32>:word32]
	branch a5 == a4_24 l2303F4BE
l2303F4B8:
	a0_12 = Mem0[a0_12:word32]
l2303F456:
	word32 a4_31 = Mem0[0x4201FD8C<32>:int32]
	branch a4_31 == 0<32> l2303F47C
l2303F460:
	word32 a3_32 = CONVERT(Mem0[a4_31 + 65<i32>:byte], byte, word32)
	a2 = 5<32>
	a3_15 = a3_32 & 5<32>
	branch (a3_32 & 5<32>) != 5<32> l2303F47C
l2303F46C:
	a4_24 = Mem0[(a3_32 & 5<32>) + 4<i32>:word32]
	branch (a3_32 & 5<32>) == 0<32> l2303F47C
l2303F470:
	a5 = a5 & 255<i32>
	a3_15 = 127<i32>
	branch (a5 & 255<i32>) != 127<i32> l2303F4BC
l2303F4BC:
	a0_12 = a4_24
l2303F4BE:
	a2Out = a2
	a3Out = a3_15
	a4Out = a4_24
	a5Out = a5
	return a0_12
l2303F47C:
	word32 a4_42 = CONVERT(Mem0[0x4201FDD6<32>:uint16], uint16, word32)
	Mem44[0x4201FDD6<32>:word16] = SLICE(a4_42 + 1<32>, word16, 0)
	a2Out = a2
	a3Out = a3_15
	a4Out = a4_42 + 1<32>
	a5Out = 0x4201FD98<32>
	return a0_12
ip4_route_exit:


void ip4_input(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s3, word32 s4, word32 s5, word32 s6, word32 s8, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD0, word32 dwArgD4, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ethernet_input
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_input_entry:
l2303F4C0:
	Mem28[0x4201FDCA<32>:word16] = SLICE(CONVERT(Mem24[0x4201FDCA<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s3_30 = Mem28[a0 + 4<i32>:int32]
	word32 s6_32 = CONVERT(Mem28[s3_30:byte], byte, word32)
	word32 a4_33 = s6_32 >>u 4<u32>
	branch s6_32 >>u 4<u32> == 4<32> l2303F52C
l2303F52C:
	word32 ra_244
	word32 s6_169 = (s6_32 & 15<i32>) << 2<i32>
	word32 a5_1491
	word32 a0_41 = lwip_htons(CONVERT(Mem28[s3_30 + 2<i32>:byte], byte, word32) | CONVERT(Mem28[s3_30 + 3<i32>:byte], byte, word32) << 8<i32>, out a5_1491)
	word32 s2_35 = a0
	word32 s4_122 = a1
	word32 s1_48 = CONVERT(SLICE(s6_169, word16, 0), word16, word32)
	word32 s5_49 = a0_41
	ra_244 = ra
	branch a0_41 >=u CONVERT(Mem28[a0 + 8<i32>:uint16], uint16, word32) l2303F562
l2303F55A:
	word32 s8_1509
	word32 a5_1508
	word32 a2_1507
	ra_244 = pbuf_realloc(ra, a0, a0_41, a3, s6_32 >>u 4<u32>, a1, mstatus, dwArgE8, out s1_48, out a2_1507, out a3, out a4_33, out a5_1508, out s2_35, out s3_30, out s4_122, out s5_49, out s6_169, out s8_1509, out mstatus)
l2303F562:
	word32 s0_567
	branch CONVERT(Mem28[s2_35 + 10<i32>:uint16], uint16, word32) <u s1_48 l2303F578
l2303F56A:
	branch CONVERT(Mem28[s2_35 + 8<i32>:uint16], uint16, word32) <u s5_49 l2303F578
l2303F572:
	branch s1_48 >u 0x13<32> l2303F594
l2303F594:
	word32 a3_92
	word32 a4_93
	word32 a5_1526
	word32 a2_1525
	word32 a0_124 = inet_chksum(s3_30, s1_48, a4_33, out a2_1525, out a3_92, out a4_93, out a5_1526)
	branch a0_124 == 0<32> l2303F5B0
l2303F5B0:
	word32 s5_133
	word32 a5_107 = CONVERT(Mem28[s3_30 + 19<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem28[s3_30 + 17<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem28[s3_30 + 16<i32>:byte], byte, word32)) | CONVERT(Mem28[s3_30 + 18<i32>:byte], byte, word32) << 16<i32>)
	Mem108[a5_107 + 20<i32>:word32] = 0x4201FEC0<32>
	word32 a3_116 = CONVERT(Mem108[s3_30 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem108[s3_30 + 12<i32>:byte], byte, word32) | CONVERT(Mem108[s3_30 + 14<i32>:byte], byte, word32) << 16<i32>
	Mem120[(CONVERT(Mem108[s3_30 + 15<i32>:byte], byte, word32) << 24<i32> | a3_116) + 16<i32>:word32] = 0x4201FEC0<32>
	word32 s1_102 = 0x4201FEC0<32>
	word32 a4_121 = 224<i32>
	branch (a5_107 & 240<i32>) != 224<i32> l2303F686
l2303F686:
	a0_124 = ip4_input_accept(s4_122, 224<i32>, out a3_116, out a4_121)
	branch a0_124 != 0<32> l2303F6BA
l2303F6BA:
	branch s4_122 != 0<32> l2303F63C
l2303F6BE:
l2303F68E:
	a4_121 = CONVERT(Mem120[0x4201FED4<32>:byte], byte, word32)
	branch a4_121 == 127<i32> l2303F60E
l2303F69A:
	s5_133 = Mem120[0x4201FD90<32>:int32]
l2303F6A2:
	branch s5_133 == 0<32> l2303F60E
l2303F6A6:
	branch s5_133 != s4_122 l2303F6B0
l2303F6B0:
	a0_124 = ip4_input_accept(s5_133, a4_121, out a3_116, out a4_121)
	branch a0_124 == 0<32> l2303F6AA
l2303F6B8:
l2303F6AA:
	s5_133 = Mem120[s5_133:int32]
l2303F604:
	word32 a5_148 = CONVERT(Mem120[s4_122 + 65<i32>:byte], byte, word32)
	branch (a5_148 & 32<i32>) != 0<32> l2303F61C
l2303F61C:
	a0_124 = igmp_lookfor_group(s4_122, 224<i32>, a5_148 & 32<i32>)
	branch a0_124 == 0<32> l2303F60E
l2303F62C:
	s1_102 = Mem120[240<i32>:word32]
	branch a3_116 == 0x10000E0<32> l2303F65E
l2303F65E:
	s5_133 = s4_122
	branch true l2303F63C
l2303F63C:
	s5_133 = s4_122
l2303F60E:
	a4_121 = CONVERT(Mem120[s3_30 + 9<i32>:byte], byte, word32)
	branch a4_121 == 0x11<32> l2303F6C0
l2303F6C0:
	word32 a4_172 = s3_30 + s6_169
	a3_116 = CONVERT(Mem120[a4_172 + 2<i32>:byte], byte, word32)
	a4_121 = 0x4000400<32>
	branch (CONVERT(Mem120[a4_172 + 3<i32>:byte], byte, word32) << 8<i32> | a3_116) != 0x4000400<32> l2303F618
l2303F6DA:
	s5_133 = s4_122
l2303F618:
	s5_133 = 0<32>
l2303F63E:
	s1_102 = Mem120[a0_124 + 16<i32>:word32]
	branch a0_124 == 0<32> l2303F6DC
l2303F642:
	word32 a5_198
	branch ip4_addr_isbroadcast_u32(a0_124, s4_122, out a3_116, out a4_121, out a5_198) != 0<32> l2303F656
l2303F648:
	s1_102 = Mem120[a5_198 + 16<i32>:word32]
	a4_121 = 224<i32>
	branch (a5_198 & 240<i32>) != 224<i32> l2303F6DC
l2303F6DC:
	branch s5_133 != 0<32> l2303F662
l2303F662:
	word32 a4_213 = CONVERT(Mem120[s3_30 + 7<i32>:byte], byte, word32)
	branch (CONVERT(Mem120[s3_30 + 6<i32>:byte], byte, word32) & 63<i32> | a4_213 << 8<i32>) == 0<32> l2303F6F2
l2303F6F2:
	Mem223[s1_102:word32] = s5_133
	Mem226[s1_102 + 4<i32>:word32] = s4_122
	Mem227[s1_102 + 8<i32>:word32] = s3_30
	Mem241[s1_102 + 12<i32>:word16] = SLICE((CONVERT(Mem227[s3_30:byte], byte, word32) & 0xF<32>) << 2<i32>, word16, 0)
	word32 a0_261
	word32 a2_263
	word32 s3_271
	word32 s5_273
	word32 s6_274
	word32 s8_276
	word32 s0_268
	word32 s2_270
	word32 s4_272
	word32 s1_269
	word32 ra_279 = raw_input(ra_244, s2_35, s4_122, dwArgF8, out s0_268, out s1_269, out a0_261, out a2_263, out s2_270, out s3_271, out s4_272, out s5_273, out s6_274, out s8_276)
	branch a0_261 == s8_276 l2303F790
l2303F71A:
	word32 a5_1574
	word32 a1_1572
	word32 a4_1573
	word32 a3_286
	word32 a0_283 = pbuf_remove_header(s2_270, s6_274, a2_263, out a1_1572, out a3_286, out a4_1573, out a5_1574)
	word32 a5_288 = CONVERT(Mem241[s3_271 + 9<i32>:byte], byte, word32)
	word32 a4_289 = 2<32>
	branch a5_288 == 2<32> l2303F7BE
l2303F7BE:
	s1_269 = igmp_input(ra_279, s1_269, s2_270, s4_272, 0x4201FED4<32>, a3_286, 2<32>, s4_272, mstatus, dwArgC8, dwArgF8)
l2303F72C:
	branch a5_288 >u 2<32> l2303F77C
l2303F77C:
	branch a5_288 == 6<32> l2303F7AA
l2303F7AA:
	s1_269 = tcp_input(ra_279, s0_268, s2_270, s3_271, s5_273, s6_274, a0_261, s10, s11, mstatus, s8, s6, dwLoc18, dwLoc14, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, s5, s3, ra, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgBC, dwArgDC, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178)
l2303F782:
	a4_289 = 0x11<32>
	branch a5_288 != 0x11<32> l2303F734
l2303F788:
	s1_269 = udp_input(ra_279, s2_270, s4_272, a2_263, s5_273, mstatus, dwArg08, dwArg18, dwArg38, dwArg48, s5, dwArg68, dwArg78, dwArg88, dwArgB4, dwArgB8, dwArgD0, dwArgD4, dwArgF8)
l2303F730:
	branch a5_288 == s8_276 l2303F7B4
l2303F7B4:
	s1_269 = icmp_input(ra_279, s2_270, s4_272, a3_286, s4_272, mstatus, s0, dwArg48, s5, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8)
l2303F734:
	branch a0_261 == 2<32> l2303F774
l2303F73A:
	word32 a5_448
	branch ip4_addr_isbroadcast_u32(a0_283, s5_273, out a3_286, out a4_289, out a5_448) != 0<32> l2303F760
l2303F742:
	word32 s1_450 = Mem241[a5_448 + 20<i32>:word32]
	a4_289 = 224<i32>
	branch (a5_448 & 240<i32>) == 224<i32> l2303F760
l2303F750:
	word32 a4_462
	word32 s1_1590
	ra_279 = icmp_dest_unreach(ra_279, s0_268, s1_450, pbuf_header_force(s2_270, s6_274, a2_263, out a4_462), a4_462, a0_261, mstatus, s8, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0_268, out s1_1590, out a3_286, out a4_289, out s2_270, out s4_272, out mstatus)
l2303F760:
	Mem501[s0_268 + 64<i32>:word16] = SLICE(CONVERT(Mem241[s0_268 + 64<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem504[s0_268 + 54<i32>:word16] = SLICE(CONVERT(Mem501[s0_268 + 54<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F774:
	word32 mstatus_1589
	word32 a4_1580
	word32 s8_1588
	word32 a5_1581
	word32 a7_1582
	word32 s3_1584
	word32 s4_1585
	word32 s5_1586
	word32 s6_1587
	word32 s2_1583
	word32 a3_1579
	word32 a0_1576
	word32 a1_1577
	word32 a2_1578
	word32 s0_1575
	pbuf_free(ra_279, s2_270, a3_286, a4_289, s4_272, mstatus, dwArgF8, out s0_1575, out s1_269, out a0_1576, out a1_1577, out a2_1578, out a3_1579, out a4_1580, out a5_1581, out a7_1582, out s2_1583, out s3_1584, out s4_1585, out s5_1586, out s6_1587, out s8_1588, out mstatus_1589)
l2303F790:
	Mem550[s1_269:word32] = 0<32>
	Mem551[s1_269 + 4<i32>:word32] = 0<32>
	Mem552[s1_269 + 8<i32>:word32] = 0<32>
	Mem553[s1_269 + 12<i32>:word16] = 0<16>
	Mem554[s1_269 + 16<i32>:word32] = 0<32>
	Mem555[s1_269 + 20<i32>:word32] = 0<32>
l2303F674:
	word32 s1_1557
	word32 a5_1563
	word32 a0_1558
	word32 a1_1559
	word32 a2_1560
	word32 a3_1561
	word32 a7_1564
	word32 a4_1562
	word32 s2_1565
	word32 s4_1567
	word32 s3_1566
	word32 s6_1569
	word32 mstatus_1571
	word32 s8_1570
	word32 s5_1568
	pbuf_free(ra_244, s2_35, a3_116, a4_213 << 8<i32>, s4_122, mstatus, dwArgF8, out s0_567, out s1_1557, out a0_1558, out a1_1559, out a2_1560, out a3_1561, out a4_1562, out a5_1563, out a7_1564, out s2_1565, out s3_1566, out s4_1567, out s5_1568, out s6_1569, out s8_1570, out mstatus_1571)
	Mem592[s0_567 + 66<i32>:word16] = SLICE(CONVERT(Mem120[s0_567 + 66<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F6E0:
	Mem604[0x4201FDCE<32>:word16] = SLICE(CONVERT(Mem120[0x4201FDCE<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a5_1598
	word32 mstatus_1606
	word32 a7_1599
	word32 s2_1600
	word32 s4_1602
	word32 s5_1603
	word32 s6_1604
	word32 s8_1605
	word32 s3_1601
	word32 a4_1597
	word32 s0_1591
	word32 a0_1593
	word32 a1_1594
	word32 a2_1595
	word32 a3_1596
	word32 s1_1592
	pbuf_free(ra_244, s2_35, a3_116, a4_121, s4_122, mstatus, dwArgF8, out s0_1591, out s1_1592, out a0_1593, out a1_1594, out a2_1595, out a3_1596, out a4_1597, out a5_1598, out a7_1599, out s2_1600, out s3_1601, out s4_1602, out s5_1603, out s6_1604, out s8_1605, out mstatus_1606)
l2303F656:
	word32 a2_1545
	word32 s1_1542
	word32 a0_1543
	word32 a3_1546
	word32 s5_1553
	word32 a7_1549
	word32 s6_1554
	word32 s8_1555
	word32 a5_1548
	word32 s2_1550
	word32 s3_1551
	word32 s4_1552
	word32 a4_1547
	word32 a1_1544
	word32 mstatus_1556
	pbuf_free(ra_244, s2_35, a3_116, a4_121, s4_122, mstatus, dwArgF8, out s0_567, out s1_1542, out a0_1543, out a1_1544, out a2_1545, out a3_1546, out a4_1547, out a5_1548, out a7_1549, out s2_1550, out s3_1551, out s4_1552, out s5_1553, out s6_1554, out s8_1555, out mstatus_1556)
l2303F59E:
	word32 a2_1530
	word32 a5_1533
	word32 a0_1528
	word32 a1_1529
	word32 s1_1527
	word32 a7_1534
	word32 a3_1531
	word32 mstatus_1541
	word32 s4_1537
	word32 s3_1536
	word32 s5_1538
	word32 s6_1539
	word32 s8_1540
	word32 s2_1535
	word32 a4_1532
	pbuf_free(ra_244, s2_35, a3_92, a4_93, s4_122, mstatus, dwArgF8, out s0_567, out s1_1527, out a0_1528, out a1_1529, out a2_1530, out a3_1531, out a4_1532, out a5_1533, out a7_1534, out s2_1535, out s3_1536, out s4_1537, out s5_1538, out s6_1539, out s8_1540, out mstatus_1541)
	Mem696[s0_567 + 56<i32>:word16] = SLICE(CONVERT(Mem28[s0_567 + 56<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F578:
	word32 a0_1511
	word32 a1_1512
	word32 a2_1513
	word32 a3_1514
	word32 s1_1510
	word32 a4_1515
	word32 a5_1516
	word32 a7_1517
	word32 s4_1520
	word32 s5_1521
	word32 s6_1522
	word32 s2_1518
	word32 s3_1519
	word32 s8_1523
	word32 mstatus_1524
	pbuf_free(ra_244, s2_35, a3, a4_33, s4_122, mstatus, dwArgF8, out s0_567, out s1_1510, out a0_1511, out a1_1512, out a2_1513, out a3_1514, out a4_1515, out a5_1516, out a7_1517, out s2_1518, out s3_1519, out s4_1520, out s5_1521, out s6_1522, out s8_1523, out mstatus_1524)
	Mem734[s0_567 + 58<i32>:word16] = SLICE(CONVERT(Mem28[s0_567 + 58<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F588:
	Mem739[s0_567 + 54<i32>:word16] = SLICE(CONVERT(Mem736[s0_567 + 54<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F4FA:
	word32 s1_749
	word32 a2_1495
	word32 a3_1496
	word32 a4_1497
	word32 a1_1494
	word32 a5_1498
	word32 s4_1502
	word32 a0_1493
	word32 s0_1492
	word32 mstatus_1506
	word32 s8_1505
	word32 s6_1504
	word32 s5_1503
	word32 s3_1501
	word32 s2_1500
	word32 a7_1499
	pbuf_free(ra, a0, a3, s6_32 >>u 4<u32>, s4, mstatus, dwArgF8, out s0_1492, out s1_749, out a0_1493, out a1_1494, out a2_1495, out a3_1496, out a4_1497, out a5_1498, out a7_1499, out s2_1500, out s3_1501, out s4_1502, out s5_1503, out s6_1504, out s8_1505, out mstatus_1506)
	Mem767[s1_749 + 68<i32>:word16] = SLICE(CONVERT(Mem28[s1_749 + 68<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem770[s1_749 + 54<i32>:word16] = SLICE(CONVERT(Mem767[s1_749 + 54<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303F512:
	0<32> = dwArg0128
	return
ip4_input_exit:


word32 ip4_output_if_opt_src(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s4, word32 s5, word32 s6, word32 s7, uint16 wArg00, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_output_if_opt
//      ip4_output_if_src
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0000:[0..15]
// LiveOut: a0 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_opt_src_entry:
l2303F7D0:
	word32 a6_275
	word32 s2_242
	word32 a0_303
	word32 a5_309
	word32 a4_308
	word32 s3_29 = a6
	word32 s9_111 = CONVERT(wArg00, uint16, word32)
	branch a2 == 0<32> l2303F9EC
l2303F9EC:
	s2_242 = s2
	branch CONVERT(Mem25[a0 + 10<i32>:uint16], uint16, word32) <=u 0x13<32> l2303F856
l2303F9F6:
	s2_242 = fp + -52<i32>
	a6_275 = a6
l2303F7F4:
	word32 s1_157
	s4 = a1
	s2_242 = a2
	s6 = a3
	s5 = a4
	s7 = a5
	branch s9_111 == 0<32> l2303F9E0
l2303F9E0:
	s1_157 = 0x14<32>
	s9_111 = 0<32>
	a6_275 = a6
l2303F802:
	branch s9_111 <=u 40<i32> l2303F838
l2303F838:
	word32 s0_62 = CONVERT(SLICE(s9_111 + 3<i32> & 0xFFFFFFFC<32>, word16, 0), word16, word32)
	s1_157 = CONVERT(SLICE(s0_62 + 20<i32>, word16, 0), word16, word32)
	word32 a3_517
	word32 a4_518
	word32 a5_519
	word32 a1_515
	word32 a2_516
	branch pbuf_add_header(a0, s0_62, out a1_515, out a2_516, out a3_517, out a4_518, out a5_519) == 0<32> l2303F86C
l2303F86C:
	word32 a2_521
	word32 a5_524
	word32 a3_522
	word32 a4_523
	word32 a1_520
	memcpy(Mem66[a0 + 4<i32>:int32], a7, s9_111, out a1_520, out a2_521, out a3_522, out a4_523, out a5_524, out a6_275, out a7)
	branch s9_111 >=u s0_62 l2303F88C
l2303F87C:
	word32 a2_528
	word32 a5_531
	word32 a3_529
	word32 a4_530
	word32 t1_525
	word32 a0_526
	word32 a1_527
	ra = memset(ra, Mem66[a0 + 4<i32>:int32] + s9_111, 0<32>, s0_62 - s9_111, out t1_525, out a0_526, out a1_527, out a2_528, out a3_529, out a4_530, out a5_531)
l2303F88C:
	word32 a3_107 = Mem66[a0 + 4<i32>:int32]
	word32 a5_110 = 0<32>
	s9_111 = 0<32>
l2303F896:
	a5_110 = a5_110 + 1<32>
	s9_111 = s9_111 + CONVERT(Mem66[(a5_110 << 1<u32>) + a3_107:uint16], uint16, word32)
	branch a5_110 < s0_62 >>u 1<i32> l2303F896
l2303F8A8:
	word32 a4_535
	word32 a5_536
	word32 a1_532
	word32 a2_533
	word32 a3_534
	branch pbuf_add_header(a0, 0x14<32>, out a1_532, out a2_533, out a3_534, out a4_535, out a5_536) != 0<32> l2303F856
l2303F8B2:
	word32 a4_209
	s0 = Mem132[a0 + 4<i32>:int32]
	Mem137[s0 + 8<i32>:byte] = SLICE(a3, byte, 0)
	Mem141[s0 + 9<i32>:byte] = SLICE(a5, byte, 0)
	word32 a5_145 = Mem141[a2:int32]
	Mem150[s0 + 16<i32>:byte] = SLICE(a5_145, byte, 0)
	Mem151[s0 + 17<i32>:byte] = SLICE(a5_145 >>u 8<u32>, byte, 0)
	Mem156[s0 + 18<i32>:byte] = SLICE(a5_145 >>u 0x10<u32>, byte, 0)
	word32 a4_162 = (s1_157 >>u 2<u32> | 64<i32>) & 255<i32>
	Mem163[s0:byte] = SLICE(a4_162, byte, 0)
	Mem179[s0 + 19<i32>:byte] = SLICE(a5_145 >>u 0x18<u32>, byte, 0)
	Mem180[s0 + 1<i32>:byte] = SLICE(a4, byte, 0)
	word32 a5_537
	word32 a0_188 = lwip_htons(CONVERT(Mem180[a0 + 8<i32>:uint16], uint16, word32), out a5_537)
	Mem191[s0 + 2<i32>:byte] = SLICE(a0_188, byte, 0)
	word32 a0_193 = CONVERT(Mem191[0x4200DF28<32>:uint16], uint16, word32)
	Mem194[s0 + 3<i32>:byte] = SLICE(a0_188 >>u 8<u32>, byte, 0)
	Mem195[s0 + 6<i32>:byte] = 0<8>
	Mem196[s0 + 7<i32>:byte] = 0<8>
	word32 a5_538
	word32 a0_197 = lwip_htons(a0_193, out a5_538)
	Mem200[s0 + 5<i32>:byte] = SLICE(a0_197 >>u 8<u32>, byte, 0)
	word32 a5_201 = CONVERT(Mem200[0x4200DF28<32>:uint16], uint16, word32)
	Mem202[s0 + 4<i32>:byte] = SLICE(a0_197, byte, 0)
	word32 s7_147 = a3 << 8<i32> | a5
	word32 a4_170 = a4_162 << 8<i32> | a4
	Mem205[0x4200DF28<32>:word16] = SLICE(a5_201 + 1<32>, word16, 0)
	s1 = CONVERT(SLICE(a4_170 >> 8<i32> | a4_170 << 8<u32>, word16, 0), word16, word32) + ((CONVERT(SLICE(s7_147 << 8<u32> | s7_147 >> 8<u32>, word16, 0), word16, word32) + (CONVERT(SLICE(a5_145, word16, 0), word16, word32) + (a5_145 >>u 0x10<u32>))) + s9_111) + a0_188
	s6 = a3 << 8<i32>
	s7 = s7_147 >> 8<u32>
	s5 = 0x4200DF28<32>
	word32 a0_203 = a0_197 + s1
	branch a1 != 0<32> l2303F9E6
l2303F9E6:
	a4_209 = Mem205[a1:int32]
l2303F972:
	a4_209 = Mem205[0x2308DE8C<32>:int32]
l2303F97A:
	Mem215[s0 + 15<i32>:byte] = SLICE(a4_209 >>u 0x18<u32>, byte, 0)
	Mem219[s0 + 12<i32>:byte] = SLICE(a4_209, byte, 0)
	Mem220[s0 + 13<i32>:byte] = SLICE(a4_209 >>u 8<u32>, byte, 0)
	word32 a5_221 = a4_209 >>u 0x10<u32>
	Mem226[s0 + 14<i32>:byte] = SLICE(a5_221, byte, 0)
	word32 a4_225 = (a4_209 & 0xFFFFFFF<32>) + a0_203 + a5_221
	word32 a4_229 = (a4_225 & 0xFFFFFFF<32>) + (a4_225 >>u 0x10<u32>)
	word32 a5_234 = CONVERT(SLICE(~((a4_229 >>u 0x10<u32>) + a4_229), word16, 0), word16, word32)
	Mem235[s0 + 10<i32>:byte] = SLICE(a5_234, byte, 0)
	Mem237[s0 + 11<i32>:byte] = SLICE(a5_234 >>u 8<i32>, byte, 0)
	a3 = 0xFFFFFFF<32>
l2303F9C0:
	word32 a4_241 = CONVERT(Mem240[0x4201FDC8<32>:uint16], uint16, word32)
	Mem249[0x4201FDC8<32>:word16] = SLICE(a4_241 + 1<32>, word16, 0)
	word32 a5_255 = Mem249[a6 + 20<i32>:int32]
	word32 t1_314
	word32 t4_315
	word32 t5_316
	word32 t6_317
	call a5_255 (retsize: 0;)
		uses: a0:a6,a1:a0,a2:s2_242,a3:a3_280,a4:a4_241 + 1<32>,a5:a5_255,a6:a6_275,a7:a7_281,ra:ra_259,s0:s0_264,s1:s1_265,s2:s2_242,s3:a6,s4:s4_267,s5:s5_269,s6:s6_271,s7:s7_273,s8:a0,s9:s9_257,Stack +0028:dwLoc28,Stack +0050:wArg00,t1:t1_314,t4:t4_315,t5:t5_316,t6:t6_317
		defs: a0:a0_303,a4:a4_308,a5:a5_309,a7:a7_313,s2:s2_298,s3:s3_292,s5:s5_300,s6:s6_301,s7:s7_302,s9:s9_294,t1:t1_314,t4:t4_315,t5:t5_316,t6:t6_317
l2303F856:
	word32 a4_321 = CONVERT(Mem320[0x4201FDDC<32>:uint16], uint16, word32)
	Mem324[0x4201FDDC<32>:word16] = SLICE(a4_321 + 1<32>, word16, 0)
	a5_309 = 0x4201FD98<32>
	a0_303 = 0xFFFFFFFE<32>
	a4_308 = a4_321 + 1<32>
l2303F80A:
	word32 a4_327 = CONVERT(Mem25[0x4201FDDC<32>:uint16], uint16, word32)
	Mem330[0x4201FDDC<32>:word16] = SLICE(a4_327 + 1<32>, word16, 0)
	a5_309 = 0x4201FD98<32>
	a0_303 = 0xFFFFFFFA<32>
	a4_308 = a4_327 + 1<32>
l2303F81E:
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = a0_303
	a3Out = s2
	a4Out = a4_308
	a5Out = a5_309
	a7Out = a7
	s2Out = s2_242
	s3Out = s3_29
	s4Out = dwArg0168
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArg0148
	s9Out = s9_111
	return dwLoc08
ip4_output_if_opt_src_exit:


word32 ip4_output_if_opt(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s4, word32 s5, word32 s6, word32 s7, uint16 wArg00, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_send
//      ip4_output_if
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0000:[0..15]
// LiveOut: a0 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_opt_entry:
l2303FA1C:
	word32 t1_4 = CONVERT(wArg00, uint16, word32)
	branch a2 == 0<32> l2303FA30
l2303FA22:
	branch a1 == 0<32> l2303FA2C
l2303FA24:
	branch Mem0[a1:int32] != 0<32> l2303FA30
l2303FA2C:
	a1 = a6 + 4<i32>
l2303FA30:
	uint16 wArg00_84 = SLICE(t1_4, uint16, 0)
l2303FA32_thunk_ip4_output_if_opt_src:
	word32 a0_56
	word32 a3_58
	word32 a4_59
	word32 a5_60
	word32 s0_63
	word32 s1_64
	word32 s3_65
	word32 s4_66
	word32 s8_67
	word32 s9_68
	word32 a7_73
	word32 s2_74
	word32 s5_75
	word32 s6_76
	word32 s7_77
	word32 ra_62 = ip4_output_if_opt_src(ra, s0, s1, a0, a1, a2, a3, a4, a5, a6, a7, s4, s5, s6, s7, wArg00_84, out s0_63, out s1_64, out a0_56, out a3_58, out a4_59, out a5_60, out a7_73, out s2_74, out s3_65, out s4_66, out s5_75, out s6_76, out s7_77, out s8_67, out s9_68)
	s0Out = s0_63
	s1Out = s1_64
	a0Out = a0_56
	a3Out = a3_58
	a4Out = a4_59
	a5Out = a5_60
	a7Out = a7_73
	s2Out = s2_74
	s3Out = s3_65
	s4Out = s4_66
	s5Out = s5_75
	s6Out = s6_76
	s7Out = s7_77
	s8Out = s8_67
	s9Out = s9_68
	return ra_62
ip4_output_if_opt_exit:


word32 ip4_output_if(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s4, word32 s5, word32 s6, word32 s7, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_sendto
//      tcp_output_control_segment
//      tcp_output
//      icmp_input
//      icmp_dest_unreach
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31]
// LiveOut: a0 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_entry:
l2303FA36:
	word32 a0_21
	word32 a3_24
	word32 a4_25
	word32 a5_26
	word32 a7_28
	word32 s0_30
	word32 s1_31
	word32 s2_32
	word32 s3_33
	word32 s4_34
	word32 s5_35
	word32 s6_36
	word32 s7_37
	word32 s8_38
	word32 s9_39
	word32 ra_29 = ip4_output_if_opt(ra, s0, s1, a0, a1, a2, a3, a4, a5, a6, 0<32>, s4, s5, s6, s7, 0<u16>, out s0_30, out s1_31, out a0_21, out a3_24, out a4_25, out a5_26, out a7_28, out s2_32, out s3_33, out s4_34, out s5_35, out s6_36, out s7_37, out s8_38, out s9_39)
	s0Out = s0_30
	s1Out = s1_31
	a0Out = a0_21
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_26
	a7Out = a7_28
	s2Out = s2_32
	s3Out = s3_33
	s4Out = s4_34
	s5Out = s5_35
	s6Out = s6_36
	s7Out = s7_37
	s8Out = s8_38
	s9Out = s9_39
	return ra_29
ip4_output_if_exit:


word32 ip4_output_if_src(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s4, word32 s5, word32 s6, word32 s7, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      udp_sendto
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31]
// LiveOut: a0 a3 a4 ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_src_entry:
l2303FA48:
	word32 a0_21
	word32 a3_23
	word32 a4_24
	word32 s1_29
	word32 s3_30
	word32 s4_31
	word32 s2_39
	word32 s5_40
	word32 s6_41
	word32 s0_62
	word32 a5_63
	word32 a7_64
	word32 s7_65
	word32 s8_66
	word32 s9_67
	word32 ra_27 = ip4_output_if_opt_src(ra, s0, s1, a0, a1, a2, a3, a4, a5, a6, 0<32>, s4, s5, s6, s7, 0<u16>, out s0_62, out s1_29, out a0_21, out a3_23, out a4_24, out a5_63, out a7_64, out s2_39, out s3_30, out s4_31, out s5_40, out s6_41, out s7_65, out s8_66, out s9_67)
	s1Out = s1_29
	a0Out = a0_21
	a3Out = a3_23
	a4Out = a4_24
	s2Out = s2_39
	s3Out = s3_30
	s4Out = s4_31
	s5Out = s5_40
	s6Out = s6_41
	return ra_27
ip4_output_if_src_exit:


word32 ip4_addr_isbroadcast_u32(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
//      etharp_query
//      etharp_output
//      ip4_input_accept
//      ip4_input
//      raw_input
//      tcp_input
//      udp_input
//      icmp_input
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
ip4_addr_isbroadcast_u32_entry:
l2303FA5A:
	word32 a0_11
	word32 a5_10 = 0xFFFFFFFD<32>
	branch a0 >u 2<32> l2303FA90
l2303FA90:
	a0_11 = 1<32>
l2303FA66:
	a5_10 = CONVERT(Mem0[a1 + 65<i32>:byte], byte, word32)
	a0_11 = a5_10 & 2<i32>
	branch (a5_10 & 2<i32>) == 0<32> l2303FA92
l2303FA70:
	a0_11 = 0<32>
	branch a5_10 == a0 l2303FA92
l2303FA78:
	a5_10 = (a5_10 ^ a0) & a0 + -1<i32>
	branch a5_10 != 0<32> l2303FA92
l2303FA92:
	a3Out = a0 + -1<i32>
	a4Out = <invalid>
	a5Out = a5_10
	return a0_11
l2303FA80:
	word32 a3_17 = ~(a0 + -1<i32>)
	a3Out = a3_17
	a4Out = <invalid>
	a5Out = a5_10
	return CONVERT((a3_17 & a0) - a3_17 <u 1<i32>, bool, word32)
ip4_addr_isbroadcast_u32_exit:


word32 ip4addr_aton(word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_getaddrinfo
//      dns_gethostbyname
//      ipaddr_addr
//      dhcpd_start
//      set_if
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s4
// Trashed: a0 a2 a3 a4 a5 a6 a7 s0 s4 s8 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ip4addr_aton_entry:
l2303FA94:
	word32 a5_102 = CONVERT(Mem7[a0:byte], byte, word32)
	word32 a4_10 = fp + -32<i32>
l2303FABC:
	word32 s0_114
	word32 a3_24 = CONVERT(Mem23[a5_102 + 0x2308DC6D<32>:byte], byte, word32)
	word32 a3_117 = a3_24 & 4<32>
	branch (a3_24 & 4<32>) == 0<32> l2303FBEE
l2303FACA:
	word32 a7_177 = 0xA<32>
	branch a5_102 != 48<i32> l2303FAE0
l2303FAD0:
	a5_102 = CONVERT(Mem23[a0 + 1<i32>:byte], byte, word32)
	branch (a5_102 & 223<i32>) == 88<i32> l2303FB06
l2303FB06:
	a5_102 = CONVERT(Mem23[a0 + 2<i32>:byte], byte, word32)
	a7_177 = 0x10<32>
	a0 = a0 + 2<32>
l2303FADC:
	a0 = a0 + 1<32>
	a7_177 = 8<32>
l2303FAE0:
	word32 a2_138 = a0
	word32 a0_103 = 0<32>
l2303FAE4:
	a3_117 = CONVERT(Mem23[a5_102 + 0x2308DC6D<32>:byte], byte, word32)
	branch (a3_117 & 4<i32>) == 0<32> l2303FB10
l2303FB10:
	branch a7_177 != 0x10<32> l2303FB36
l2303FB14:
	branch (a3_117 & 68<i32>) == 0<32> l2303FB36
l2303FB36:
	branch a5_102 != 46<i32> l2303FB4E
l2303FB4E:
	branch a5_102 == 0<32> l2303FB56
l2303FB50:
	a3_117 = a3_117 & 8<32>
	s0_114 = 0<32>
	branch (a3_117 & 8<32>) == 0<32> l2303FB78
l2303FB56:
	s0_114 = (a4_10 - (fp + -32<i32>) >> 2<i32>) + 1<32>
	a5_102 = 2<32>
	branch s0_114 == 2<32> l2303FBB4
l2303FBB4:
	a5_102 = 0x1000000<32>
	s0_114 = 0<32>
	branch a0_103 >=u 0x1000000<32> l2303FB78
l2303FBBE:
	a4_10 = 255<i32>
	branch true l2303FB78
l2303FBC8:
	a5_102 = 0<32>
l2303FB64:
	branch s0_114 > 2<32> l2303FB82
l2303FB82:
	word32 a5_84
	branch s0_114 == 3<32> l2303FBCE
l2303FBCE:
	a5_102 = 0x10000000<32>
	s0_114 = 0<32>
	branch a0_103 >=u 0x10000000<32> l2303FB78
l2303FBD6:
	a3_117 = 255<i32>
	branch true l2303FB78
l2303FBE0:
	s4 = dwArg94
	branch a4_10 >u 255<i32> l2303FB78
l2303FBE6:
	a5_84 = 0<32>
	a4_10 = a4_10 << 16<i32>
l2303FB88:
	a5_102 = 4<32>
	branch s0_114 != 4<32> l2303FB6A
l2303FB8E:
	s0_114 = 0<32>
	branch a0_103 >u 255<i32> l2303FB78
l2303FB98:
	branch false l2303FB78
l2303FB9E:
	s4 = dwArg74
	branch a3_117 >u 255<i32> l2303FB78
l2303FBA4:
	branch a4_10 >u 255<i32> l2303FB78
l2303FBAA:
	a3_117 = a3_117 << 16<i32>
	a5_84 = a3_117 | 0x4000000<32>
	a4_10 = a4_10 << 8<i32>
l2303FBEA:
	a5_102 = a5_84 | a4_10
l2303FBCA:
	a0_103 = a0_103 | a5_102
l2303FB68:
	branch s0_114 == 0<32> l2303FB78
l2303FB6A:
	s0_114 = 1<32>
	branch a1 == 0<32> l2303FB78
l2303FB70:
	Mem121[lwip_htonl(a0_103, out a3_117, out a4_10, out a5_102):word32] = a1
l2303FB3A:
	branch a4_10 == fp + -20<i32> l2303FBEE
l2303FBEE:
	s0_114 = 0<32>
l2303FB78:
	a0Out = s0_114
	a3Out = a3_117
	a4Out = a4_10
	a5Out = a5_102
	s4Out = s4
	return dwArgE4
ip4addr_aton_exit:
l2303FB3E:
	a4_10 = a4_10 + 4<32>
	Mem136[a4_10 + 4092<i32>:word32] = a0_103
	a5_102 = CONVERT(Mem136[a2_138 + 1<i32>:byte], byte, word32)
	a0 = a2_138 + 1<i32>
l2303FB1C:
	word32 a0_142 = a0_103 << 4<i32>
	word32 a5_143 = a5_102 + 0xA<32>
	word32 t1_144 = 97<i32>
	branch (a3_117 & 3<32>) == 2<32> l2303FB2E
l2303FB2A:
	t1_144 = 65<i32>
l2303FB2E:
	a0_103 = a0_142 | a5_143 - t1_144
l2303FAF4:
	a0_103 = a7_177 + a0_103 + a5_102 + -48<i32>
l2303FAFE:
	a5_102 = CONVERT(Mem23[a2_138 + 1<i32>:byte], byte, word32)
	a2_138 = a2_138 + 1<32>


word32 ipaddr_addr(word32 a0, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rx_sm_disconnect_ind
//      wifi_sta_ip_set_cmd
//      tcpc_entry
//      iperf_server_udp
//      iperf_client_udp
//      iperf_client_tcp
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s4 s8 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ipaddr_addr_entry:
l2303FBF2:
	word32 a3_10
	word32 s4_56
	word32 a5_55
	word32 a4_54
	word32 a0_25
	word32 s0_14 = ip4addr_aton(a0, fp + 0xFFFFFFEC<32>, out a0_25, out a3_10, out a4_54, out a5_55, out s4_56)
	branch a0_25 == 0<32> l2303FC06
l2303FC06:
	a0_25 = 0xFFFFFFFF<32>
l2303FBFE:
l2303FC00:
	a0Out = a0_25
	a3Out = a3_10
	return s0_14
ipaddr_addr_exit:


word32 ip4addr_ntoa_r(word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_sta_ip_set_cmd
//      ip4addr_ntoa
//      stats_netstat
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ip4addr_ntoa_r_entry:
l2303FC0A:
	word32 t4_42 = a1
	word32 a0_10 = 0<32>
	word32 a3_11 = fp + 0xFFFFFFFC<32>
l2303FC22:
	word32 a6_18 = CONVERT(Mem17[a3_11:byte], byte, word32)
	word32 a5_19 = 0<32>
l2303FC28:
	Mem31[fp + a5_19 + 4088<i32>:byte] = SLICE((a6_18 & 0xA<32>) + 48<i32>, byte, 0)
	word32 t3_27 = a5_19 + 1<i32>
	word32 a4_29 = a6_18 >>u 0xA<32>
	branch a6_18 >u 9<32> l2303FC7A
l2303FC7A:
	a6_18 = a4_29 & 255<i32>
	a5_19 = t3_27 & 255<i32>
l2303FC4E:
	Mem37[a3_11:byte] = SLICE(a4_29 & 255<i32>, byte, 0)
	word32 a6_40 = a0_10
	word32 a4_43 = t4_42
l2303FC56:
	word32 a0_62
	a0_10 = a0_10 + 1<32>
	branch a5_19 != 255<i32> l2303FC80
l2303FC80:
	word32 a7_48 = a5_19 + -1<i32>
	branch a6_40 >= a2 l2303FCA2
l2303FC8C:
	a4_43 = a4_43 + 1<32>
	Mem60[a4_43 + 4095<i32>:byte] = SLICE(CONVERT(Mem55[a5_19 + fp + -8<i32>:byte], byte, word32), byte, 0)
	a6_40 = a0_10
	a5_19 = a7_48 & 255<i32>
l2303FC5C:
	branch a6_40 >= a2 l2303FCA2
l2303FCA2:
	a0_62 = 0<32>
l2303FC60:
	Mem66[a4_43:byte] = 0x2E<8>
	a3_11 = a3_11 + 1<32>
	a5_19 = fp
	t4_42 = a4_43 + 1<i32>
	branch a3_11 != fp l2303FC22
l2303FC70:
	Mem71[a4_43:byte] = 0<8>
	a0_62 = a1
l2303FC76:
	a3Out = a3_11
	a4Out = a4_43
	a5Out = a5_19
	return a0_62
ip4addr_ntoa_r_exit:


word32 ip4addr_ntoa(ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_test_cmd
//      wifi_sta_ip_info
//      netif_status_callback
//      ota_tcp_cmd
//      TCP_Server
//      iperf_server
//      ping_recv
// MayUse: 
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ip4addr_ntoa_entry:
l2303FCA6:
l2303FCB0_thunk_ip4addr_ntoa_r:
	word32 a3_7
	word32 a4_8
	word32 a5_9
	word32 a0_6 = ip4addr_ntoa_r(0x420151AC<32>, 0x10<32>, out a3_7, out a4_8, out a5_9)
	a3Out = a3_7
	a4Out = a4_8
	a5Out = a5_9
	return a0_6
ip4addr_ntoa_exit:


void mem_init(word32 ra, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mem_init_entry:
l2303FCB4:
	Mem7[0x4200EF34<32>:word32] = 0x42047FC0<32>
	Mem11[0x2000000<32>:word32] = 0x42047FC0<32>
	Mem12[0x42047FC4<32>:byte] = 0<8>
	Mem13[0x4200EF38<32>:word32] = 0x44047FC0<32>
	Mem15[0x20002000<32>:word32] = 0x44047FC0<32>
	Mem17[0x44047FC4<32>:byte] = 1<8>
	Mem20[0x4200EF2C<32>:word32] = 0x42047FC0<32>
	Mem23[0x42020E46<32>:word16] = 0<16>
l2303FCFE_thunk_sys_mutex_new:
	sys_mutex_new(ra, 0x4200DF30<32>, 0x4200E000<32>, 0x2000000<32>, 0x42020000<32>, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178)
	return
mem_init_exit:


word32 mem_free(word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg24, word32 dwArg84, word32 dwArgA4, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0198, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_free_state
//      pbuf_free
//      dhcp_server_recv
//      dhcp_server_stop
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut: a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mem_free_entry:
l2303FD02:
	branch a0 == 0<32> l2303FE6C
l2303FE6C:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	return s0
l2303FD06:
	word32 s1_207
	word32 s2_208 = 0x4201FD98<32>
	s1_207 = s1
	branch (a0 & 3<i32>) == 0<32> l2303FD48
l2303FD48:
	s1_207 = a0 + -8<i32>
	branch a0 + -8<i32> <u Mem19[0x4200DF34<32>:int32] l2303FD26
l2303FD5C:
	a3 = Mem19[0x4200DF38<32>:int32]
	a4 = a0 + 12<i32>
	s3 = 0x4200DF38<32>
	branch a3 <u a0 + 12<i32> l2303FD26
l2303FD70:
	word32 s1_42
	word32 s2_43
	word32 s3_44
	word32 s4_45
	word32 a1_448
	word32 a4_194
	word32 s0_41 = sys_mutex_lock(a3, a0 + 12<i32>, 0x4201FD98<32>, mstatus, s4, dwArg24, s3, dwArgD8, dwArg0118, out s1_42, out a1_448, out a4_194, out s2_43, out s3_44, out s4_45)
	word32 a5_129 = CONVERT(Mem19[s0_41 + -4<i32>:byte], byte, word32)
	branch a5_129 != 0<32> l2303FD8C
l2303FD8C:
	word32 a1_50 = CONVERT(Mem19[s0_41 + -8<i32>:uint16], uint16, word32)
	a5_129 = 0x2000000<32>
	branch a1_50 >u 0x2000000<32> l2303FD82
l2303FD96:
	a4_194 = CONVERT(Mem19[s0_41 + -6<i32>:uint16], uint16, word32)
	branch a4_194 >u 0x2000000<32> l2303FD82
l2303FD9E:
	a5_129 = Mem19[s4_45:int32]
	word32 a2_56 = CONVERT(SLICE(s1_42 - a5_129, word16, 0), word16, word32)
	branch a2_56 == a4_194 l2303FDB8
l2303FDAE:
	a4_194 = CONVERT(Mem19[a4_194 + a5_129:uint16], uint16, word32)
	branch a4_194 != a2_56 l2303FD82
l2303FDB8:
	word32 a6_61 = Mem19[s3_44:int32]
	word32 a4_64 = a5_129 + a1_50
	branch a4_64 == a6_61 l2303FDCC
l2303FDC4:
	a4_194 = CONVERT(Mem19[a4_64 + 2<i32>:uint16], uint16, word32)
	branch a4_194 != a2_56 l2303FD82
l2303FDCC:
	word32 a3_69 = Mem19[0x4200DF2C<32>:int32]
	Mem72[s0_41 + 4092<i32>:byte] = 0<8>
	word32 a4_126 = 0x4200DF2C<32>
	branch s1_42 >=u a3_69 l2303FDE2
l2303FDE0:
	Mem76[s1_42:word32] = 0x4200DF2C<32>
l2303FDE2:
	Mem88[s2_43 + 176<i32>:word16] = SLICE(CONVERT(Mem80[s2_43 + 176<i32>:uint16], uint16, word32) - a1_50 + a2_56, word16, 0)
	word32 a3_93 = CONVERT(Mem88[s0_41 + -8<i32>:uint16], uint16, word32) + a5_129
	branch s1_42 == a3_93 l2303FE22
l2303FDF8:
	word32 a1_95 = CONVERT(Mem88[a3_93 + 4<i32>:byte], byte, word32)
	branch a1_95 != 0<32> l2303FE22
l2303FDFE:
	branch a6_61 == a3_93 l2303FE22
l2303FE02:
	a4_126 = Mem88[a1_95:word32]
	branch a3_93 != a1_95 l2303FE0A
l2303FE08:
	Mem99[s1_42:word32] = a4_126
l2303FE0A:
	Mem104[s0_41 + 4088<i32>:word16] = SLICE(CONVERT(Mem101[a3_93:uint16], uint16, word32), word16, 0)
	word32 a3_105 = CONVERT(Mem104[a3_93:uint16], uint16, word32)
	branch a3_105 == 0x2000000<32> l2303FE22
l2303FE1C:
	Mem110[a3_105 + a5_129 + 2<i32>:word16] = SLICE(a2_56, word16, 0)
l2303FE22:
	word32 a2_113 = CONVERT(Mem112[s0_41 + -6<i32>:uint16], uint16, word32)
	word32 a3_115 = a5_129 + a2_113
	branch s1_42 == a3_115 l2303FE54
l2303FE2E:
	word32 a1_118 = CONVERT(Mem112[a3_115 + 4<i32>:byte], byte, word32)
	branch a1_118 != 0<32> l2303FE54
l2303FE34:
	word32 a4_119 = Mem112[a1_118:word32]
	branch s1_42 != a1_118 l2303FE3C
l2303FE3A:
	Mem120[a3_115:word32] = a4_119
l2303FE3C:
	Mem125[a3_115:word16] = SLICE(CONVERT(Mem122[s0_41 + -8<i32>:uint16], uint16, word32), word16, 0)
	a4_126 = CONVERT(Mem125[s0_41 + -8<i32>:uint16], uint16, word32)
	branch a4_126 == 0x2000000<32> l2303FE54
l2303FE4E:
	a5_129 = a5_129 + a4_126
	Mem131[a5_129 + 2<i32>:word16] = SLICE(a2_113, word16, 0)
l2303FE54:
l2303FE68_thunk_sys_mutex_unlock:
	word32 a1_453
	word32 a3_171
	word32 a4_172
	word32 a5_173
	word32 a7_175
	word32 s1_177
	word32 s2_178
	word32 s3_179
	word32 s4_180
	word32 s5_181
	word32 s6_182
	word32 s8_183
	word32 s0_176 = sys_mutex_unlock(0x4200DF30<32>, a4_126, a5_129, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_177, out a1_453, out a3_171, out a4_172, out a5_173, out a7_175, out s2_178, out s3_179, out s4_180, out s5_181, out s6_182, out s8_183)
	s1Out = s1_177
	a3Out = a3_171
	a4Out = a4_172
	a5Out = a5_173
	a7Out = a7_175
	s2Out = s2_178
	s3Out = s3_179
	s4Out = s4_180
	s5Out = s5_181
	s6Out = s6_182
	s8Out = s8_183
	return s0_176
l2303FD82:
	word32 s8_452
	word32 s4_451
	word32 a1_449
	word32 a5_450
	sys_mutex_unlock(0x4200DF30<32>, a4_194, a5_129, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_207, out a1_449, out a3, out a4, out a5_450, out a7, out s2_208, out s3, out s4_451, out s5, out s6, out s8_452)
l2303FD26:
	word32 a4_446
	word32 a5_447
	word32 a2_445
	sys_arch_protect(a4, mstatus, out a2_445, out a4_446, out a5_447)
	Mem235[s2_208 + 180<i32>:word16] = SLICE(CONVERT(Mem19[s2_208 + 180<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2303FD44_thunk_sys_arch_unprotect:
	word32 a4_245
	word32 a5_246
	word32 a3_244 = sys_arch_unprotect(a3, mstatus, out a4_245, out a5_246)
	s1Out = s1_207
	a3Out = a3_244
	a4Out = a4_245
	a5Out = a5_246
	a7Out = a7
	s2Out = s2_208
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s8Out = s4
	return s1
mem_free_exit:


void mem_trim(word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg84, word32 dwArgA8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_option_trailer
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mem_trim_entry:
l2303FE6E:
	word32 s0_24 = CONVERT(SLICE(a1 + 3<i32> & 0xFFFFFFFC<32>, word16, 0), word16, word32)
	branch s0_24 <=u 0xB<32> l2303FE9C
l2303FE9C:
	s0_24 = 0xC<32>
l2303FE92:
	branch s0_24 <=u 0x2000000<32> l2303FE9E
l2303FE9E:
	branch s0_24 <u a1 l2303FE98
l2303FEA2:
	word32 a5_35 = Mem23[0x4200DF34<32>:int32]
	branch a0 <u a5_35 l2303FEBE
l2303FEB2:
	a4 = Mem23[0x4200DF38<32>:int32]
	branch a0 <u a4 l2303FEEE
l2303FEEE:
	word32 s2_44 = CONVERT(Mem23[a0 + -8<i32>:uint16], uint16, word32) + 0xFFFFFFF8<32> << 16<i32>
	word32 s3_49 = CONVERT(SLICE((s2_44 >>u 0x10<u32>) - CONVERT(SLICE((a0 + -8<i32>) - a5_35, word16, 0), word16, word32), word16, 0), word16, word32)
	branch s3_49 <u s0_24 l2303FE98
l2303FF12:
	branch s3_49 == s0_24 l2303FED8
l2303FF16:
	word32 a4_117
	word32 s0_110
	word32 a1_58
	word32 s1_65
	word32 s2_66
	word32 s3_67
	word32 s4_68
	word32 a4_438
	word32 s0_64 = sys_mutex_lock(a3, a4, s2_44 >>u 0x10<u32>, mstatus, s4, dwArg24, s3, dwArgD8, dwArg0118, out s1_65, out a1_58, out a4_438, out s2_66, out s3_67, out s4_68)
	word32 a5_148 = Mem23[0x4200DF34<32>:int32]
	word32 a2_74 = CONVERT(Mem23[s4_68 + -8<i32>:uint16], uint16, word32) + a5_148
	branch CONVERT(Mem23[a2_74 + 4<i32>:byte], byte, word32) != 0<32> l2303FF98
l2303FF98:
	a4_117 = s0_64 + 20<i32>
	branch s3_67 <u s0_64 + 20<i32> l2303FF8E
l2303FFA0:
	a4_117 = CONVERT(SLICE(s1_65 + 8<i32> + s0_64, word16, 0), word16, word32)
	word32 a2_81 = Mem23[a1_58:word32]
	word32 a3_83 = a5_148 + a4_117
	branch a3_83 >=u a1_58 l2303FFBE
l2303FFBC:
	Mem84[a3_83:word32] = a2_81
l2303FFBE:
	Mem86[a3_83 + 4<i32>:byte] = 0<8>
	word32 a2_88 = CONVERT(Mem86[s4_68 + -8<i32>:uint16], uint16, word32)
	Mem90[a3_83 + 2<i32>:word16] = SLICE(s1_65, word16, 0)
	Mem91[a3_83:word16] = SLICE(a2_88, word16, 0)
	Mem93[s4_68 + 4088<i32>:word16] = SLICE(a4_117, word16, 0)
	word32 a3_94 = CONVERT(Mem93[a3_83:uint16], uint16, word32)
	branch a3_94 == 0x2000000<32> l2303FFE2
l2303FFDC:
	Mem98[a5_148 + a3_94 + 2<i32>:word16] = SLICE(a4_117, word16, 0)
l2303FFE2:
	s0_110 = s0_64 + ((s1_65 - s2_66) + CONVERT(Mem105[0x4201FE48<32>:uint16], uint16, word32))
l2303FF32:
	a4_117 = CONVERT(SLICE(s1_65 + 8<i32> + s0_64, word16, 0), word16, word32)
	word32 a6_118 = CONVERT(Mem23[a2_74:uint16], uint16, word32)
	word32 a3_119 = a5_148 + a4_117
	branch Mem23[0x4200DF2C<32>:int32] != a2_74 l2303FF56
l2303FF54:
	Mem120[a3_119:word32] = 0x4200DF2C<32>
l2303FF56:
	Mem122[a3_119 + 4<i32>:byte] = 0<8>
	Mem124[a3_119:word16] = SLICE(a6_118, word16, 0)
	Mem126[a3_119 + 2<i32>:word16] = SLICE(s1_65, word16, 0)
	Mem129[s4_68 + 4088<i32>:word16] = SLICE(a4_117, word16, 0)
	word32 a3_130 = CONVERT(Mem129[a3_119:uint16], uint16, word32)
	branch a3_130 == 0x2000000<32> l2303FF76
l2303FF70:
	Mem134[a5_148 + a3_130 + 2<i32>:word16] = SLICE(a4_117, word16, 0)
l2303FF76:
	s0_110 = s0_64 + ((s1_65 - s2_66) + CONVERT(Mem141[0x4201FE48<32>:uint16], uint16, word32))
l2303FF8A:
	Mem149[0x4201FE48<32>:word16] = SLICE(s0_110, word16, 0)
	a5_148 = 0x4201FD98<32>
l2303FF8E:
	word32 a3_441
	word32 s1_439
	word32 a5_443
	word32 a1_440
	word32 a7_444
	word32 a4_442
	word32 s4_447
	word32 s2_445
	word32 s6_449
	word32 s3_446
	word32 s8_450
	word32 s5_448
	sys_mutex_unlock(0x4200DF30<32>, a4_117, a5_148, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_439, out a1_440, out a3_441, out a4_442, out a5_443, out a7_444, out s2_445, out s3_446, out s4_447, out s5_448, out s6_449, out s8_450)
l2303FEBE:
	word32 a5_435
	word32 a2_433
	word32 a4_434
	sys_arch_protect(a4, mstatus, out a2_433, out a4_434, out a5_435)
	Mem211[0x4201FE4C<32>:word16] = SLICE(CONVERT(Mem23[0x4201FE4C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a4_436
	word32 a5_437
	sys_arch_unprotect(a3, mstatus, out a4_436, out a5_437)
l2303FE98:
l2303FED8:
	0<32> = dwArgA8
	return
mem_trim_exit:


word32 mem_malloc(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArg34, word32 dwArg94, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_init_connection_common.constprop.5
//      dhcp_start
//      pbuf_alloc
//      dhcp_server_recv
//      dhcp_server_start
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +0094:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mem_malloc_entry:
l2303FFF8:
	word32 s0_18
	branch a0 == 0<32> l23040080
l23040002:
	s1 = CONVERT(SLICE(a0 + 3<i32> & 0xFFFFFFFC<32>, word16, 0), word16, word32)
	a5 = 0xB<32>
	branch s1 <=u 0xB<32> l23040026
l23040026:
	s1 = 0xC<32>
l23040012:
	a5 = 0x2000000<32>
	s0_18 = 0<32>
	branch s1 <=u 0x2000000<32> l23040028
l23040028:
	s0_18 = 0<32>
	branch s1 <u a0 l2304001A
l2304002E:
	word32 s1_42
	word32 s2_408
	word32 s3_409
	word32 s4_410
	word32 a1_406
	word32 a4_407
	word32 s0_41 = sys_mutex_lock(a3, a4, s2, mstatus, s0, dwArg34, ra, dwArgE8, dwArg0128, out s1_42, out a1_406, out a4_407, out s2_408, out s3_409, out s4_410)
	word32 a6_124 = Mem9[0x4200DF2C<32>:int32]
	word32 a7_52 = Mem9[0x4200DF34<32>:int32]
	word32 a3_57 = CONVERT(SLICE(a6_124 - a7_52, word16, 0), word16, word32)
	word32 a4_59 = 0x2000000<32> - s1_42
l23040062:
	branch a3_57 <u a4_59 l23040084
l23040084:
	word32 s0_64 = a7_52 + a3_57
	word32 a5_67 = CONVERT(Mem9[s0_64:uint16], uint16, word32)
	branch CONVERT(Mem9[s0_64 + 4<i32>:byte], byte, word32) != 0<32> l23040150
l23040092:
	word32 a2_70 = 0xFFFFFFF8<32> - a3_57 + a5_67
	branch a2_70 <u s1_42 l23040150
l23040150:
	a3_57 = a5_67
l2304009C:
	word32 a5_111
	word32 a4_126 = 0x4201FD98<32>
	branch a2_70 <u s1_42 + 20<i32> l23040124
l23040124:
	Mem78[s0_64 + 4<i32>:byte] = 1<8>
	word32 a3_83 = CONVERT(Mem78[0x4201FE4A<32>:uint16], uint16, word32)
	a5_111 = CONVERT(SLICE(a5_67 + CONVERT(Mem78[0x4201FE48<32>:uint16], uint16, word32) - a3_57, word16, 0), word16, word32)
	Mem85[0x4201FE48<32>:word16] = SLICE(a5_111, word16, 0)
	branch a3_83 >=u a5_111 l230400FE
l23040142:
	Mem86[0x4201FE4A<32>:word16] = SLICE(a5_111, word16, 0)
l230400AC:
	word32 a5_90 = CONVERT(SLICE(s1_42 + 8<i32> + a3_57, word16, 0), word16, word32)
	word32 a2_91 = a7_52 + a5_90
	Mem92[a2_91 + 4<i32>:byte] = 0<8>
	word32 a1_93 = CONVERT(Mem92[s0_64:uint16], uint16, word32)
	Mem94[a2_91 + 2<i32>:word16] = SLICE(a3_57, word16, 0)
	Mem96[a2_91:word16] = SLICE(a1_93, word16, 0)
	Mem97[s0_64:word16] = SLICE(a5_90, word16, 0)
	Mem98[s0_64 + 4<i32>:byte] = 1<8>
	word32 a3_99 = CONVERT(Mem98[a2_91:uint16], uint16, word32)
	branch a3_99 == 0x2000000<32> l230400E2
l230400DC:
	Mem103[a3_99 + a7_52 + 2<i32>:word16] = SLICE(a5_90, word16, 0)
l230400E2:
	a5_111 = CONVERT(Mem105[0x4201FE4A<32>:uint16], uint16, word32)
	word32 s1_112 = CONVERT(SLICE(s1_42 + (CONVERT(Mem105[0x4201FE48<32>:uint16], uint16, word32) + 8<32>), word16, 0), word16, word32)
	Mem113[0x4201FE48<32>:word16] = SLICE(s1_112, word16, 0)
	branch a5_111 >=u s1_112 l230400FE
l230400FA:
	Mem114[0x4201FE4A<32>:word16] = SLICE(s1_112, word16, 0)
l230400FE:
	branch a6_124 != s0_64 l23040118
l23040102:
	a5_111 = Mem122[0x4200DF38<32>:int32]
l2304010A:
	a4_126 = CONVERT(Mem122[a6_124 + 4<i32>:byte], byte, word32)
	branch a4_126 == 0<32> l23040114
l23040110:
	branch a5_111 != a6_124 l23040148
l23040148:
	a6_124 = CONVERT(Mem122[a6_124:uint16], uint16, word32) + a7_52
l23040114:
	Mem138[0x4200DF2C<32>:word32] = a6_124
l23040118:
	s0_18 = sys_mutex_unlock(s0_41 + -208<i32>, a4_126, a5_111, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1, out a1, out a3, out a4, out a5, out a7, out s2, out s3, out s4, out s5, out s6, out s8) + 8<32>
l23040066:
	word32 a4_194 = CONVERT(Mem9[0x4201FE44<32>:uint16], uint16, word32)
	Mem197[0x4201FE44<32>:word16] = SLICE(a4_194 + 1<32>, word16, 0)
	sys_mutex_unlock(s0_41 + -208<i32>, a4_194 + 1<32>, 0x4201FD98<32>, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1, out a1, out a3, out a4, out a5, out a7, out s2, out s3, out s4, out s5, out s6, out s8)
l23040080:
	s0_18 = 0<32>
l2304001A:
	a0Out = s0_18
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	return s1
mem_malloc_exit:


word32 do_memp_malloc_pool(word32 s1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memp_malloc
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
do_memp_malloc_pool_entry:
l23040154:
	word32 a4_16
	word32 a2_71
	word32 a5_72
	word32 a0_14 = sys_arch_protect(a4, mstatus, out a2_71, out a4_16, out a5_72)
	word32 a5_19 = Mem11[s1:word32]
	branch s1 == 0<32> l2304019E
l2304019E:
	Mem23[a4_16:word16] = SLICE(CONVERT(Mem11[a4_16:uint16], uint16, word32) + 1<32>, word16, 0)
l23040168:
	s1 = Mem11[a4_16:word32]
	Mem26[a4_16:word32] = a5_19
	word32 a5_28 = CONVERT(Mem26[a4_16 + 4<i32>:uint16], uint16, word32)
	Mem30[a4_16 + 4<i32>:word16] = SLICE(a5_28 + 1<32>, word16, 0)
	a3 = a0_14
	word32 a4_32 = CONVERT(Mem30[a5_28 + 5<32>:uint16], uint16, word32)
	branch CONVERT(Mem30[a5_28 + 7<32>:uint16], uint16, word32) >=u a4_32 l2304018C
l23040188:
	Mem34[a5_28 + 7<32>:word16] = SLICE(a4_32, word16, 0)
l2304018C:
l2304018E:
	word32 a4_42
	word32 a5_43
	word32 a3_41 = sys_arch_unprotect(a3, mstatus, out a4_42, out a5_43)
	a0Out = s1
	a2Out = dwArg10
	a3Out = a3_41
	a4Out = a4_42
	a5Out = a5_43
	return s1
do_memp_malloc_pool_exit:


word32 memp_init_pool(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memp_init
// MayUse:  a5:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
memp_init_pool_entry:
l230401AC:
	Mem7[a5:word32] = 0<32>
	word32 a4_14 = 0<32>
	word32 a0_11 = Mem7[a5 + 8<i32>:word32]
	word32 a5_10 = a5 + 3<32> & 0xFFFFFFFC<32>
l230401BA:
	word32 a3_13 = CONVERT(Mem12[a0_11 + 6<i32>:uint16], uint16, word32)
	branch a4_14 < a3_13 l230401CA
l230401CA:
	word32 a3_17 = Mem12[a3_13:word32]
	Mem19[a3_17:word32] = a5_10
	a0_11 = Mem19[a3_17 + 12<i32>:word32]
	Mem21[a5_10:word32] = a3_17
	a4_14 = a4_14 + 1<32>
	a5_10 = a5_10 + CONVERT(Mem21[a0_11 + 4<i32>:uint16], uint16, word32)
l230401C2:
	word32 a0_24 = Mem12[a5_10:word32]
	Mem25[a5_10 + 2<i32>:word16] = SLICE(a3_13, word16, 0)
	return a0_24
memp_init_pool_exit:


word32 memp_init(ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut: a0 a2
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
memp_init_entry:
l230401DE:
	word32 s0_18 = 0x4201FD98<32>
	word32 s1_19 = 0x230862EC<32>
l23040202:
	word32 a5_24 = s1_19 + 0<32>
	word32 s3_26 = Mem25[a5_24:int32]
	word32 a0_31 = memp_init_pool(a5_24)
	s0_18 = s0_18 + 4<32>
	Mem36[s0_18 + 180<i32>:word32] = Mem25[s3_26:int32]
	s1_19 = s1_19 + 4<32>
	branch s1_19 != 0xDCF79D50<32> l23040202
l23040220:
	a2Out = dwArg48
	return a0_31
memp_init_exit:


word32 memp_malloc(word32 s1, word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_getaddrinfo
//      tcpip_input
//      tcpip_try_callback
//      altcp_alloc
//      igmp_lookup_group
//      pbuf_alloc
//      raw_new
//      tcp_listen_with_backlog_and_err
//      tcp_seg_copy
//      tcp_new_ip_type
//      tcp_create_segment
//      sys_timeout
//      udp_new_ip_type
//      recv_udp
//      recv_raw
//      netconn_alloc
//      cmd_sntp_start
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: sp
memp_malloc_entry:
l23040230:
	branch a0 >u 0xE<32> l2304024A
l2304024A:
	a0Out = 0<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 0xE<32>
	return s1
l23040236:
l23040246_thunk_do_memp_malloc_pool:
	word32 a0_16
	word32 a2_17
	word32 a3_18
	word32 a4_19
	word32 a5_20
	word32 s1_22 = do_memp_malloc_pool(s1, a3, a4, mstatus, out a0_16, out a2_17, out a3_18, out a4_19, out a5_20)
	a0Out = a0_16
	a2Out = a2_17
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_20
	return s1_22
memp_malloc_exit:


word32 memp_free(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_freeaddrinfo
//      tcpip_input
//      tcpip_try_callback
//      altcp_free
//      igmp_stop
//      igmp_leavegroup_netif
//      pbuf_free
//      raw_remove
//      tcp_seg_free
//      tcp_abort
//      tcp_shutdown
//      sys_untimeout
//      sys_check_timeouts
//      udp_remove
//      netconn_new_with_proto_and_callback
//      netconn_alloc
//      netconn_free
//      netbuf_delete
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
memp_free_entry:
l2304024E:
	branch a0 >u 0xE<32> l23040294
l23040254:
	branch a1 == 0<32> l23040294
l23040294:
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 0xE<32>
	return s1
l23040256:
	word32 a4_22
	word32 a5_72
	word32 a2_71
	word32 a0_20 = sys_arch_protect(a4, mstatus, out a2_71, out a4_22, out a5_72)
	word32 a5_25 = CONVERT(Mem16[a4_22 + 4<i32>:uint16], uint16, word32)
	Mem27[a4_22 + 4<i32>:word16] = SLICE(a5_25 + 0xFFFFFFFF<32>, word16, 0)
	word32 a5_29 = Mem27[a5_25 + 0xFFFFFFFF<32>:word32]
	Mem30[a5_29:word32] = a1
	word32 s1_31 = Mem30[a5_29 + 12<i32>:word32]
	Mem32[a1:word32] = a5_29
l23040290_thunk_sys_arch_unprotect:
	word32 a4_39
	word32 a5_40
	word32 a3_38 = sys_arch_unprotect(a3, mstatus, out a4_39, out a5_40)
	a0Out = a0_20
	a2Out = dwArg10
	a3Out = a3_38
	a4Out = a4_39
	a5Out = a5_40
	return s1_31
memp_free_exit:


void netif_null_output_ip4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
netif_null_output_ip4_entry:
l23040296:
	return
netif_null_output_ip4_exit:


word32 netif_issue_reports(word32 ra, word32 s0, word32 a0, word32 a1, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg24, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB0, word32 dwArgB4, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0188, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_do_set_ipaddr
//      netif_set_up
//      netif_set_link_up
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0024:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0188:[0..31]
// LiveOut: a1 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
netif_issue_reports_entry:
l2304029A:
	word32 a4_108 = CONVERT(Mem0[a0 + 65<i32>:byte], byte, word32)
	word32 a3_104 = 5<32>
	branch (a4_108 & 5<i32>) != 5<32> l230402E2
l230402A8:
	a1 = a1 & 1<32>
	branch (a1 & 1<32>) == 0<32> l230402E2
l230402E2:
	s1Out = s1
	a1Out = a1
	a3Out = 5<32>
	a4Out = a4_108
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l230402AC:
	word32 a0_15 = Mem14[9<32>:word32]
	word32 s0_16 = a0_15
	branch false l230402DA
l230402B8:
	a4_108 = a4_108 & 8<32>
	branch (a4_108 & 8<32>) == 0<32> l230402C4
l230402BC:
	word32 a0_228
	ra = etharp_request(ra, a0_15, a0_15, mstatus, s0, dwArg08, dwArg24, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB0, dwArgB4, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s0_16, out s1, out a0_228, out a1, out a3_104, out a4_108, out s2, out s3, out s4, out s5, out s6, out s7, out mstatus)
l230402C4:
	word32 a5_48 = CONVERT(Mem14[s0_16 + 65<i32>:byte], byte, word32)
	a5 = a5_48 & 32<i32>
	branch (a5_48 & 32<i32>) == 0<32> l230402DA
l230402DA:
	s1Out = s1
	a1Out = a1
	a3Out = a3_104
	a4Out = a4_108
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l230402CE:
l230402D6_thunk_igmp_report_groups:
	word32 a1_61
	word32 a3_63
	word32 a4_64
	word32 a5_65
	word32 s4_67
	s1Out = igmp_report_groups(s0, dwArg10, a5_48 & 32<i32>, out a1_61, out a3_63, out a4_64, out a5_65, out s4_67)
	a1Out = a1_61
	a3Out = a3_63
	a4Out = a4_64
	a5Out = a5_65
	s2Out = s2
	s3Out = s3
	s4Out = s4_67
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
netif_issue_reports_exit:


word32 netif_do_set_ipaddr(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90, word32 dwArg94, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_set_ipaddr
//      netif_set_addr
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0168:[0..31]
// LiveOut: a1 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_do_set_ipaddr_entry:
l230402E4:
	word32 a0_5 = Mem0[a5 + 4<i32>:word32]
	word32 a1_7 = Mem0[a4:word32]
	branch a4 == a5 l2304033C
l2304033C:
	s0Out = s0
	s1Out = s1
	a1Out = a1_7
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l230402EC:
	Mem11[a5:word32] = a2
	word32 a3_35
	word32 a4_36
	word32 a5_37
	word32 mstatus_40
	word32 s1_42
	word32 s2_45
	word32 s4_251
	word32 ra_41 = tcp_netif_ip_addr_changed(ra, a2, fp + 0xFFFFFFEC<32>, a3, a4, s3, s4, s7, mstatus, s2, dwLoc08, dwArg08, dwArg18, dwArg34, dwArg38, dwArg48, dwArg58, dwArg5C, s1, dwArg78, dwArg98, dwArg9C, dwArgA8, dwArgC8, out s1_42, out a3_35, out a4_36, out a5_37, out s2_45, out s4_251, out mstatus_40)
	raw_netif_ip_addr_changed(s1_42, fp + 0xFFFFFFEC<32>, a3_35, a4_36, udp_netif_ip_addr_changed(s1_42, fp + 0xFFFFFFEC<32>, a3_35, a4_36, a5_37))
	Mem72[Mem24[s2_45:int32] + 4<i32>:word32] = a0_5
	word32 s4_252
	word32 a1_104
	word32 a3_102
	word32 a4_103
	word32 a5_106
	word32 mstatus_114
	word32 s1_107
	word32 s2_116
	word32 s3_117
	word32 s5_118
	word32 s6_119
	word32 s7_120
	word32 ra_115 = netif_issue_reports(ra_41, a0_5, a0_5, 1<32>, mstatus_40, s2, dwLoc10, dwArg04, dwArg38, dwArg48, s1, dwArg74, dwArg78, dwArg88, dwArg90, dwArg94, dwArgA8, dwArgB8, dwArgE8, dwArg0168, out s1_107, out a1_104, out a3_102, out a4_103, out a5_106, out s2_116, out s3_117, out s4_252, out s5_118, out s6_119, out s7_120, out mstatus_114)
	word32 s0_99 = Mem72[a5_106 + 28<i32>:word32]
	branch a5_106 == 0<32> l2304032E
l2304032A:
	call a5_106 (retsize: 0;)
		uses: a0:s0_99,a1:a1_76,mstatus:mstatus_86,ra:ra_87,s0:s0_99,Stack +0008:s2,Stack +0010:dwLoc10,Stack +0024:dwArg04,Stack +0058:dwArg38,Stack +0068:dwArg48,Stack +0088:s1,Stack +0094:dwArg74,Stack +0098:dwArg78,Stack +00A8:dwArg88,Stack +00B0:dwArg90,Stack +00B4:dwArg94,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +0108:dwArgE8,Stack +0188:dwArg0168
		defs: a1:a1_104,a3:a3_102,a4:a4_103,a5:a5_106,mstatus:mstatus_114,ra:ra_115,s1:s1_107,s2:s2_116,s3:s3_117,s5:s5_118,s6:s6_119,s7:s7_120
l2304032E:
	s0Out = s0_99
	s1Out = s1_107
	a1Out = a1_104
	a3Out = a3_102
	a4Out = a4_103
	a5Out = a5_106
	s2Out = s2_116
	s3Out = s3_117
	s4Out = dwArg04
	s5Out = s5_118
	s6Out = s6_119
	s7Out = s7_120
	mstatusOut = mstatus_114
	return ra_115
netif_do_set_ipaddr_exit:


