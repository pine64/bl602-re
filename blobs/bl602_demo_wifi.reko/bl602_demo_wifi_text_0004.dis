void netif_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
netif_init_entry:
l23040340:
	return
netif_init_exit:


word32 netif_set_ipaddr(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArg0148, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_if
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0148:[0..31]
// LiveOut: s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_set_ipaddr_entry:
l23040342:
	branch a0 == 0<32> l2304035E
l2304035E:
	s1Out = s1
	s2Out = s2
	return s0
l23040344:
	branch a1 != 0<32> l23040352
l2304034A:
l23040352:
	word32 s0_42
	word32 s1_43
	word32 s2_46
	word32 a1_155
	word32 a3_156
	word32 a4_157
	word32 a5_158
	word32 s3_159
	word32 s4_160
	word32 s5_161
	word32 s6_162
	word32 s7_163
	word32 mstatus_164
	netif_do_set_ipaddr(ra, s1, fp + 0xFFFFFFEC<32>, a3, a4, a5, s2, s3, s4, s7, mstatus, dwLoc1C, dwLoc18, dwLoc08, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg54, dwArg58, dwArg68, dwArg70, dwArg74, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArg0148, out s0_42, out s1_43, out a1_155, out a3_156, out a4_157, out a5_158, out s2_46, out s3_159, out s4_160, out s5_161, out s6_162, out s7_163, out mstatus_164)
	s1Out = s1_43
	s2Out = s2_46
	return s0_42
netif_set_ipaddr_exit:


void netif_set_netmask(word32 a0, word32 a1, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_if
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1
// Preserved: sp
netif_set_netmask_entry:
l23040360:
	branch a0 == 0<32> l23040376
l23040362:
	branch a1 != 0<32> l2304036C
l23040364:
l2304036C:
	word32 a0_14 = Mem0[a4 + 8<i32>:word32]
	branch a5 == a4 l23040376
l23040374:
	Mem15[a5 + 8<i32>:word32] = a0_14
l23040376:
	return
netif_set_netmask_exit:


void netif_set_gw(word32 a0, word32 a1, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_if
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1
// Preserved: sp
netif_set_gw_entry:
l23040378:
	branch a0 == 0<32> l2304038E
l2304037A:
	branch a1 != 0<32> l23040384
l2304037C:
l23040384:
	word32 a0_14 = Mem0[a4 + 12<i32>:word32]
	branch a5 == a4 l2304038E
l2304038C:
	Mem15[a5 + 12<i32>:word32] = a0_14
l2304038E:
	return
netif_set_gw_exit:


word32 netif_set_addr(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg2C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netifapi_do_netif_set_addr
//      dhcp_bind
//      dhcp_recv
//      dhcp_stop
//      netif_add
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_set_addr_entry:
l23040390:
	word32 s2_104 = a2
	branch a1 != 0<32> l230403AA
l230403A2:
l230403AA:
	branch a2 != 0<32> l230403B6
l230403AE:
	s2_104 = 0x2308DE8C<32>
l230403B6:
	branch a3 != 0<32> l230403C0
l230403B8:
	a3 = 0x2308DE8C<32>
l230403C0:
	word32 a5_102
	word32 ra_136
	branch a5 == 0<32> l230403C8
l230403C8:
	word32 a3_517
	word32 a5_519
	word32 s0_515
	word32 a4_518
	word32 s1_516
	ra_136 = netif_do_set_ipaddr(ra, a0, fp + -20<i32>, a3, a4, a5, s2_104, s3, s4, s7, mstatus, dwLoc2C, dwLoc28, dwLoc18, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg58, s1, ra, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgB8, dwArg0138, out s0_515, out s1_516, out a1, out a3_517, out a4_518, out a5_519, out s2_104, out s3, out s4, out s5, out s6, out s7, out mstatus)
	a2 = dwArg74
	a5_102 = 1<32>
l230403C4:
	a5_102 = 0<32>
	ra_136 = ra
l230403D8:
	word32 a4_106 = Mem105[s2_104:int32]
	word32 s1_111 = Mem105[a2 + 8<i32>:word32]
	branch a4_106 == a2 l230403E4
l230403E2:
	Mem112[a4_106 + 8<i32>:word32] = s1_111
l230403E4:
	word32 a3_115 = Mem114[a4_106:word32]
	word32 s1_116 = Mem114[a3_115 + 12<i32>:word32]
	branch a4_106 == a3_115 l230403EE
l230403EC:
	Mem117[a4_106 + 12<i32>:word32] = s1_116
l230403EE:
	branch a5_102 != 0<32> l230403FA
l230403F0:
	word32 s0_520
	ra_136 = netif_do_set_ipaddr(ra_136, s1_116, fp + -20<i32>, a3_115, a4_106, a5_102, s2_104, s3, s4, s7, mstatus, dwLoc2C, dwLoc28, dwLoc18, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg58, s1, ra, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgB8, dwArg0138, out s0_520, out s1_116, out a1, out a3_115, out a4_106, out a5_102, out s2_104, out s3, out s4, out s5, out s6, out s7, out mstatus)
l230403FA:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_116
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3_115
	a4Out = a4_106
	a5Out = a5_102
	s2Out = s2_104
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra_136
netif_set_addr_exit:


word32 netif_add(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 a6, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg74, word32 dwArg88, word32 dwArgB4, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netifapi_do_netif_add
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +00B4:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_add_entry:
l23040406:
	word32 s0_148
	branch a0 != 0<32> l23040426
l23040426:
	branch a5 == 0<32> l23040414
l23040428:
	word32 s1_18 = a1
	word32 s2_20 = a2
	branch a1 != 0<32> l23040438
l23040430:
	s1_18 = 0x2308DE8C<32>
l23040438:
	branch a2 != 0<32> l23040444
l2304043C:
	s2_20 = 0x2308DE8C<32>
l23040444:
	branch a3 != 0<32> l2304044E
l23040446:
l2304044E:
	Mem36[0x230402AA<32>:word32] = a0
	Mem39[a0 + 4<i32>:word32] = 0<32>
	Mem40[a0 + 8<i32>:word32] = 0<32>
	Mem41[a0 + 12<i32>:word32] = 0<32>
	Mem42[a0 + 56<i32>:word16] = 0<16>
	Mem43[a0 + 65<i32>:byte] = 0<8>
	word32 a3_70
	word32 a4_71
	word32 a5_72
	word32 t1_514
	word32 a0_515
	word32 a2_517
	word32 a1_516
	word32 ra_73 = memset(ra, a0 + 40<i32>, 0<32>, 0xC<32>, out t1_514, out a0_515, out a1_516, out a2_517, out a3_70, out a4_71, out a5_72)
	Mem79[a4_71 + 36<i32>:word32] = a0
	word32 a4_80 = CONVERT(Mem79[0x4200DF78<32>:byte], byte, word32)
	0<32> = dwArg74
	Mem81[a0 + 16<i32>:word32] = a6
	Mem82[a0 + 68<i32>:byte] = SLICE(a4_80, byte, 0)
	Mem91[a0 + 28<i32>:word32] = 0<32>
	Mem92[a0 + 32<i32>:word32] = 0<32>
	Mem93[a0 + 72<i32>:word32] = 0<32>
	word32 a1_107
	word32 a2_108
	word32 a3_109
	word32 a4_110
	word32 a5_111
	word32 mstatus_114
	word32 s1_117
	word32 s3_121
	word32 s4_122
	word32 s7_125
	word32 a0_138
	word32 mstatus_146
	word32 ra_147
	word32 s3_153
	call a5_111 (retsize: 0;)
		uses: a0:dwArgB4,a1:a1_107,a2:a2_108,a3:a3_109,a4:a4_110,a5:a5_111,mstatus:mstatus_114,ra:netif_set_addr(ra_73, s1_88, a0, s1_88, s2_84, a3_70, a4_80, a5_72, 0x4200E000<32>, s4, s7, mstatus, a5, dwLoc28, dwLoc18, dwLoc08, dwLoc04, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg68, dwArg88, dwArgF8, dwArg0108, out s0_518, out s1_117, out a1_107, out a2_108, out a3_109, out a4_110, out a5_111, out s2_519, out s3_121, out s4_122, out s5_520, out s6_521, out s7_125, out mstatus_114),s1:s1_117,s3:s3_121 + -136<i32>,s4:s4_122,s7:s7_125,Stack +0004:a5,Stack +0008:dwLoc28,Stack +0018:dwLoc18,Stack +0028:dwLoc08,Stack +002C:dwLoc04,Stack +0044:dwArg14,Stack +0048:dwArg18,Stack +0058:dwArg28,Stack +0068:dwArg38,Stack +006C:dwArg3C,Stack +0074:dwArg44,Stack +0078:dwArg48,Stack +0088:dwArg58,Stack +0098:dwArg68,Stack +00B8:dwArg88,Stack +0128:dwArgF8,Stack +0138:dwArg0108
		defs: a0:a0_138,mstatus:mstatus_146,ra:ra_147,s0:s0_148,s3:s3_153
	branch a0_138 != 0<32> l23040414
l230404BA:
	word32 a2_168 = Mem93[0x4201FD90<32>:int32]
l230404C8:
	branch CONVERT(Mem172[s0_148 + 68<i32>:byte], byte, word32) != 255<i32> l230404D4
l230404D0:
	Mem175[s0_148 + 68<i32>:byte] = 0<8>
l230404D4:
	word32 a5_178 = CONVERT(Mem177[s0_148 + 68<i32>:byte], byte, word32)
	word32 a3_181 = a2_168
l230404DA:
	branch a3_181 != 0<32> l23040508
l23040508:
	branch CONVERT(Mem177[a3_181 + 68<i32>:byte], byte, word32) != a5_178 l23040518
l23040518:
	a3_181 = Mem177[a3_181:word32]
l23040510:
	Mem189[s0_148 + 68<i32>:byte] = SLICE(a5_178 + 1<32>, byte, 0)
l230404DC:
	word32 a3_191 = 0<32>
	branch a5_178 == 254<i32> l230404EC
l230404E6:
	a3_191 = a5_178 + 1<32> & 255<i32>
l230404EC:
	word32 a5_196 = CONVERT(Mem177[s0_148 + 65<i32>:byte], byte, word32)
	Mem199[a2_168:word32] = s0_148
	Mem205[s3_153:byte] = SLICE(a3_191, byte, 0)
	Mem210[0x42020D90<32>:word32] = s0_148
	branch (a5_196 & 32<i32>) == 0<32> l23040416
l23040500:
	igmp_start(ra_147, s0_148, a3_191, 0x42020000<32>, a5_196 & 32<i32>, mstatus_146, dwLoc08)
l23040414:
	s0_148 = 0<32>
l23040416:
	0<32> = dwArg0128
	return s0_148
netif_add_exit:


void netif_set_default(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
netif_set_default_entry:
l2304051C:
	Mem5[0x42020D8C<32>:word32] = a0
	return
netif_set_default_exit:


word32 netif_set_up(word32 ra, word32 s0, word32 a0, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg24, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB0, word32 dwArgB4, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0188, ptr32 & a1Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
//      dhcpd_start
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0024:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0188:[0..31]
// LiveOut: a1 mstatus ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
netif_set_up_entry:
l23040526:
	branch a0 == 0<32> l2304055E
l2304055E:
	a1Out = a1
	s2Out = s2
	mstatusOut = mstatus
	return ra
l23040528:
	word32 a5_9 = CONVERT(Mem8[a0 + 65<i32>:byte], byte, word32)
	word32 s0_10 = a0
	branch (a5_9 & 1<i32>) != 0<32> l23040556
l23040556:
	a1Out = a1
	s2Out = s2
	mstatusOut = mstatus
	return ra
l2304053A:
	Mem16[a0 + 65<i32>:byte] = SLICE(a5_9 | 1<i32>, byte, 0)
	word32 a0_17 = Mem16[(a5_9 | 1<i32>) + 28<i32>:word32]
	branch (a5_9 | 1<i32>) == 0<32> l23040548
l23040546:
	word32 a5_22
	word32 a4_23
	word32 a2_24
	word32 a1_25
	word32 a3_67
	word32 s1_68
	word32 s4_69
	word32 s8_70
	word32 t3_71
	word32 tp_72
	word32 a6_73
	word32 a7_74
	word32 s2_75
	word32 s3_76
	word32 s5_77
	word32 s6_78
	word32 s7_79
	word32 s9_80
	word32 t0_81
	word32 t1_82
	word32 t4_83
	word32 t5_84
	word32 t6_85
	call a5_9 | 1<i32> (retsize: 0;)
		uses: a0:a0_17,a1:a1_25,a2:a2_24,a3:a3_67,a4:a4_23,a5:a5_22,a6:a6_73,a7:a7_74,mstatus:mstatus,ra:ra,s0:a0,s1:s1_68,s2:s2_75,s3:s3_76,s4:s4_69,s5:s5_77,s6:s6_78,s7:s7_79,s8:s8_70,s9:s9_80,Stack +0020:dwArg10,t0:t0_81,t1:t1_82,t3:t3_71,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_72
		defs: a1:a1_25,a2:a2_24,a3:a3_67,a4:a4_23,a5:a5_22,a6:a6_73,a7:a7_74,ra:ra_21,s0:s0_20,s1:s1_68,s2:s2_75,s3:s3_76,s4:s4_69,s5:s5_77,s6:s6_78,s7:s7_79,s8:s8_70,s9:s9_80,t0:t0_81,t1:t1_82,t3:t3_71,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_72
l23040548:
l23040552_thunk_netif_issue_reports:
	word32 a1_40
	word32 mstatus_50
	word32 s2_52
	word32 s7_178
	word32 s6_177
	word32 s5_176
	word32 s4_175
	word32 s3_174
	word32 a5_173
	word32 a4_172
	word32 a3_171
	word32 s1_170
	word32 ra_51 = netif_issue_reports(ra, s0, s0_10, 3<32>, mstatus, dwArg08, dwArg10, dwArg24, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB0, dwArgB4, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_170, out a1_40, out a3_171, out a4_172, out a5_173, out s2_52, out s3_174, out s4_175, out s5_176, out s6_177, out s7_178, out mstatus_50)
	a1Out = a1_40
	s2Out = s2_52
	mstatusOut = mstatus_50
	return ra_51
netif_set_up_exit:


word32 netif_set_down(word32 ra, word32 s0, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_remove
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +00E8:[0..31]
// LiveOut: s0
// Trashed: a0 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
netif_set_down_entry:
l23040560:
	branch a0 == 0<32> l2304059E
l2304059E:
	return s0
l23040562:
	word32 a5_9 = CONVERT(Mem8[a0 + 65<i32>:byte], byte, word32)
	word32 s0_10 = a0
	branch (a5_9 & 1<i32>) == 0<32> l23040596
l23040574:
	Mem13[a0 + 65<i32>:byte] = SLICE(a5_9 & -2<i32>, byte, 0)
	branch (a5_9 & 8<32>) == 0<32> l23040584
l23040580:
	s0_10 = etharp_cleanup_netif(ra, a0, a3, s4, mstatus, dwArg08, dwArgE8, out s4)
l23040584:
	word32 t1_30 = Mem13[s0_10 + 28<i32>:int32]
	branch t1_30 == 0<32> l23040596
l23040596:
	return s0
l2304058C:
	word32 s0_47
	word32 a5_49
	word32 a4_50
	word32 t1_51
	word32 a6_56
	word32 s1_57
	word32 s2_58
	word32 s3_59
	word32 s8_60
	word32 t3_61
	call t1_30 (retsize: 0;)
		uses: a0:s0_28,a2:dwArg10,a3:a3,a4:a4_50,a5:a5_49,a6:a6_56,mstatus:mstatus,ra:ra,s0:s0,s1:s1_57,s2:s2_58,s3:s3_59,s4:s4_44,s8:s8_60,Stack +0008:dwArg08,Stack +0010:dwArg10,Stack +00E8:dwArgE8,t1:t1_51,t3:t3_61
		defs: a4:a4_50,a5:a5_49,a6:a6_56,s0:s0_47,s1:s1_57,s2:s2_58,s3:s3_59,s8:s8_60,t1:t1_51,t3:t3_61
	return s0_47
netif_set_down_exit:


void netif_remove(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 tp
// Preserved: a1 a3 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t0 t1 t3 t4 t5 t6
netif_remove_entry:
l230405A0:
	branch a0 == 0<32> l23040626
l23040626:
	return
l230405A2:
	word32 a0_12 = Mem10[a5 + 4<i32>:word32]
	word32 s0_101 = a0_12
	branch a5 == 0<32> l230405CC
l230405B0:
	word32 a5_29
	word32 s1_34
	word32 s2_368
	ra = tcp_netif_ip_addr_changed(ra, a0_12 + 4<i32>, 0<32>, a3, a4, s3, s4, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArgA8, dwArgAC, dwArgB8, dwArgD8, out s1_34, out a3, out a4, out a5_29, out s2_368, out s4, out mstatus)
	raw_netif_ip_addr_changed(s1_34, 0<32>, a3, a4, udp_netif_ip_addr_changed(s1_34, 0<32>, a3, a4, a5_29))
l230405CC:
	word32 a5_63 = CONVERT(Mem10[a0_12 + 65<i32>:byte], byte, word32)
	branch (a5_63 & 32<i32>) == 0<32> l230405DC
l230405D6:
	ra = igmp_stop(ra, a0_12, a3, a4, a5_63 & 32<i32>, mstatus, dwArg28, out a3)
l230405DC:
	branch (CONVERT(Mem10[a0_12 + 65<i32>:byte], byte, word32) & 1<32>) == 0<32> l230405EA
l230405E4:
	s0_101 = netif_set_down(ra, a0_12, a0_12, a3, s4, mstatus, dwLoc08, dwArg00, dwArgD8)
l230405EA:
	branch Mem10[0x4201FD8C<32>:int32] != s0_101 l230405FA
l230405F6:
	Mem112[0x42020D8C<32>:word32] = 0<32>
l230405FA:
	word32 a5_115 = Mem114[0x4201FD90<32>:int32]
	branch a5_115 != s0_101 l23040618
l23040618:
	branch a5_115 == 0<32> l2304060C
l2304061A:
	word32 a5_120 = Mem114[0x42020000<32>:word32]
	branch s0_101 != 0x42020000<32> l23040616
l23040616:
	a5_115 = 0x42020000<32>
l23040620:
	Mem124[0x42020000<32>:word32] = a5_120
l23040606:
	Mem126[0x42020D90<32>:word32] = a5_115
l2304060C:
	return
netif_remove_exit:


void netif_set_status_callback(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl606a0_wifi_netif_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
netif_set_status_callback_entry:
l23040628:
	branch a0 == 0<32> l2304062C
l2304062A:
	Mem5[a1 + 28<i32>:word32] = a0
l2304062C:
	return
netif_set_status_callback_exit:


void netif_set_link_up(word32 ra, word32 s0, word32 s1, word32 a0, word32 s4, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_set_link_up_entry:
l2304062E:
	branch a0 == 0<32> l23040670
l23040670:
	return
l23040630:
	word32 a5_9 = CONVERT(Mem8[a0 + 65<i32>:byte], byte, word32)
	branch (a5_9 & 4<i32>) != 0<32> l23040668
l23040642:
	Mem13[a0 + 65<i32>:byte] = SLICE(a5_9 | 4<i32>, byte, 0)
	word32 mstatus_26
	word32 s0_28
	word32 s1_51
	word32 s4_52
	word32 mstatus_58
	word32 s5_62
	word32 a1_208
	word32 a3_209
	word32 a4_210
	word32 a5_211
	word32 s2_212
	word32 s3_213
	word32 s6_214
	word32 s7_215
	word32 ra_59 = netif_issue_reports(dhcp_network_changed(ra, a0, s1, a5_9 | 4<i32>, s4, s5, mstatus, dwArg04, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out s0_28, out mstatus_26), s0_28, s0_28, 3<32>, mstatus_26, dwLoc08, dwArg00, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s1_51, out a1_208, out a3_209, out a4_210, out a5_211, out s2_212, out s3_213, out s4_52, out s5_62, out s6_214, out s7_215, out mstatus_58)
	word32 t1_71 = Mem13[s0_28 + 32<i32>:int32]
	branch t1_71 == 0<32> l23040668
l23040668:
	return
l2304065E:
	word32 a5_85
	word32 a4_86
	word32 a1_87
	word32 t1_88
	word32 a3_94
	word32 a6_95
	word32 a7_96
	word32 s2_97
	word32 s3_98
	word32 s6_99
	word32 s8_100
	word32 t0_101
	word32 t3_102
	word32 t4_103
	word32 t5_104
	word32 t6_105
	word32 tp_106
	word32 s7_107
	word32 s9_108
	call t1_71 (retsize: 0;)
		uses: a0:s0_28,a1:a1_87,a2:dwArg10,a3:a3_94,a4:a4_86,a5:a5_85,a6:a6_95,a7:a7_96,mstatus:mstatus_58,ra:ra_59,s0:s0,s1:s1_51,s2:s2_97,s3:s3_98,s4:s4_52,s5:s5_62,s6:s6_99,s7:s7_107,s8:s8_100,s9:s9_108,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0048:dwArg48,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +0078:dwArg78,Stack +0084:dwArg84,Stack +0088:dwArg88,Stack +0098:dwArg98,Stack +00A0:dwArgA0,Stack +00A4:dwArgA4,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0118:dwArg0118,Stack +0178:dwArg0178,Stack +FFFFFFF8:dwLoc08,t0:t0_101,t1:t1_88,t3:t3_102,t4:t4_103,t5:t5_104,t6:t6_105,tp:tp_106
		defs: a1:a1_87,a3:a3_94,a4:a4_86,a5:a5_85,a6:a6_95,a7:a7_96,s2:s2_97,s3:s3_98,s6:s6_99,s7:s7_107,s8:s8_100,s9:s9_108,t0:t0_101,t1:t1_88,t3:t3_102,t4:t4_103,t5:t5_104,t6:t6_105,tp:tp_106
	return
netif_set_link_up_exit:


void netif_set_link_down(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 t1
// Preserved: sp
netif_set_link_down_entry:
l23040672:
	branch a0 == 0<32> l2304068E
l23040674:
	word32 a4_5 = CONVERT(Mem0[a0 + 65<i32>:byte], byte, word32)
	branch (a4_5 & 4<i32>) == 0<32> l2304068E
l2304067E:
	word32 t1_7 = Mem0[a0 + 32<i32>:int32]
	Mem9[a0 + 65<i32>:byte] = SLICE(a4_5 & 0xFFFFFFFB<32>, byte, 0)
	branch t1_7 == 0<32> l2304068E
l2304068E:
	return
l2304068C:
	word32 a4_12
	word32 a3_13
	word32 t1_14
	call t1_7 (retsize: 0;)
		uses: a0:a0,a3:a3_13,a4:a4_12,t1:t1_14
		defs: a3:a3_13,a4:a4_12,t1:t1_14
	return
netif_set_link_down_exit:


word32 netif_get_by_index(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_sendto
//      tcp_connect
//      tcp_output_control_segment
//      tcp_output
//      udp_sendto
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
netif_get_by_index_entry:
l23040690:
	word32 a5_14 = 0<32>
	branch a0 == 0<32> l2304069E
l23040694:
	a5_14 = Mem0[0x4201FD90<32>:int32]
l2304069C:
	branch a5_14 != 0<32> l230406A2
l230406A2:
	a4 = CONVERT(Mem0[a5_14 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
	branch a4 == a0 l2304069E
l230406B0:
	a5_14 = Mem0[a5_14:word32]
l2304069E:
	a4Out = a4
	a5Out = a5_14
	return a5_14
netif_get_by_index_exit:


word32 netif_find(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt_callback
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: s0 sp
netif_find_entry:
l230406B4:
	branch a0 != 0<32> l230406BA
l230406BA:
	word32 a5_136
	word32 a2_133
	word32 a3_134
	word32 a4_135
	word32 a1_132
	word32 a0_11 = atoi(a0 + 2<32>, out a1_132, out a2_133, out a3_134, out a4_135, out a5_136)
	word32 a4_26 = 0x42020000<32>
	word32 a0_28 = Mem10[0x4201FD90<32>:int32]
l230406D4:
	branch a0_28 != 0<32> l230406E0
l230406E0:
	a4_26 = CONVERT(Mem10[a0_28 + 68<i32>:byte], byte, word32)
	branch a4_26 != (a0_11 & 255<i32>) l23040700
l230406E8:
	a4_26 = CONVERT(Mem10[a0_28 + 66<i32>:byte], byte, word32)
	branch CONVERT(Mem10[a0:byte], byte, word32) != a4_26 l23040700
l230406F4:
	a4_26 = CONVERT(Mem10[a0_28 + 67<i32>:byte], byte, word32)
	branch CONVERT(Mem10[a0 + 1<i32>:byte], byte, word32) == a4_26 l230406D8
l23040700:
	a0_28 = Mem10[a0_28:word32]
l230406D6:
	a0_28 = 0<32>
l230406D8:
	a4Out = a4_26
	a5Out = a0_11 & 255<i32>
	return a0_28
l230406B6:
	a4Out = a4
	a5Out = a5
	return 0<32>
netif_find_exit:


void pbuf_skip_const(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_take_at
//      pbuf_try_get_at
//      pbuf_put_at
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 a1 a5 sp
pbuf_skip_const_entry:
l23040704:
	branch a0 == 0<32> l2304070E
l23040706:
	word32 a5_5 = CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32)
	branch a1 >=u a5_5 l23040716
l23040716:
	a1 = CONVERT(SLICE(a1 - a5_5, word16, 0), word16, word32)
	a0 = Mem0[a0:word32]
l2304070E:
	branch a2 == 0<32> l23040714
l23040710:
	Mem15[a2:word16] = SLICE(a1, word16, 0)
l23040714:
	return
pbuf_skip_const_exit:


void pbuf_free_ooseq_callback(word32 ra, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: sp
pbuf_free_ooseq_callback_entry:
l23040720:
	word32 a5_66
	word32 a4_65
	word32 a2_64
	sys_arch_protect(a4, mstatus, out a2_64, out a4_65, out a5_66)
	Mem13[0x42020D94<32>:byte] = 0<8>
	word32 a4_16
	word32 a5_67
	word32 a3_15 = sys_arch_unprotect(a3, mstatus, out a4_16, out a5_67)
	word32 a0_19 = Mem13[0x4201FEAC<32>:int32]
l2304073C:
	branch a0_19 != 0<32> l23040744
l23040744:
	word32 a0_23 = Mem13[0x42020074<32>:word32]
	branch false l23040750
l23040750:
	a0_19 = Mem13[a0_23 + 12<i32>:word32]
l23040748:
l2304074C_thunk_tcp_free_ooseq:
	word32 a0_68
	word32 a2_69
	word32 a3_70
	word32 a4_71
	tcp_free_ooseq(ra, a3_15, a4_16, 0x42020000<32>, s4, mstatus, dwArgE8, out a0_68, out a2_69, out a3_70, out a4_71)
	return
l2304073E:
	return
pbuf_free_ooseq_callback_exit:


word32 pbuf_add_header_impl(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_add_header
//      pbuf_header
//      pbuf_header_force
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_add_header_impl_entry:
l23040754:
	word32 a0_17
	branch a0 == 0<32> l230407B2
l230407B2:
	a0_17 = 1<32>
l23040758:
	a4 = 0x10000000<32>
	a0_17 = 1<32>
	branch a1 >=u 0x10000000<32> l230407B4
l23040760:
	a0_17 = 0<32>
	branch a1 == 0<32> l230407B4
l23040764:
	a3 = CONVERT(SLICE(a1, word16, 0), word16, word32)
	a4 = CONVERT(SLICE(CONVERT(Mem0[a0 + 8<i32>:uint16], uint16, word32) + a3, word16, 0), word16, word32)
	a0_17 = 1<32>
	branch a4 <u a3 l230407B4
l2304077A:
	word32 a1_22
	word32 a5_21
	branch CONVERT(Mem0[a0 + 12<i32>:int8], int8, int32) >= 0<32> l23040794
l23040794:
	a0_17 = 1<32>
	branch a2 == 0<32> l230407B4
l230407B4:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a0
	return a0_17
l23040798:
	a5_21 = Mem0[a2 + 4<i32>:word32]
	a1_22 = a2 - a1
l23040782:
	a5_21 = Mem0[a2 + 4<i32>:word32]
	a1_22 = a2 - a1
	branch a1_22 >=u a5_21 + 16<i32> l2304079E
l2304079E:
	word32 a2_29 = CONVERT(Mem0[a5_21 + 10<i32>:uint16], uint16, word32)
	Mem31[a1_22 + 4<i32>:word32] = a5_21
	Mem33[a5_21 + 8<i32>:word16] = SLICE(a4, word16, 0)
	word32 a3_35 = a3 + a2_29
	Mem36[a5_21 + 10<i32>:word16] = SLICE(a3_35, word16, 0)
	a1Out = a1_22
	a2Out = a2_29
	a3Out = a3_35
	a4Out = a4
	a5Out = a5_21
	return 0<32>
l23040792:
	a1Out = a1_22
	a2Out = a5_21 + 16<i32>
	a3Out = a3
	a4Out = a4
	a5Out = a5_21
	return 1<32>
pbuf_add_header_impl_exit:


word32 pbuf_alloc_reference(word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, byte bArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_alloc
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0044:[0..7]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s8
// Trashed: a0 a2 a3 a4 a5 s0 s1 s8 t3 tp
// Preserved: sp
pbuf_alloc_reference_entry:
l230407B6:
	word32 s0_27 = a0
	word32 a0_19
	word32 a3_22
	word32 a4_23
	word32 a2_21
	word32 a5_20
	word32 s1_24 = memp_malloc(s1, 0xD<32>, a3, a4, mstatus, out a0_19, out a2_21, out a3_22, out a4_23, out a5_20)
	branch a0_19 == 0<32> l230407EA
l230407CA:
	Mem29[a0_19:word32] = 0<32>
	Mem30[a1 + 4<i32>:word32] = a0_19
	Mem31[a0_19 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem32[a0_19 + 10<i32>:word16] = SLICE(a1, word16, 0)
	Mem33[a0_19 + 12<i32>:byte] = SLICE(dwArg44, byte, 0)
	Mem34[a0_19 + 13<i32>:byte] = 0<8>
	Mem35[a0_19 + 14<i32>:word16] = 1<16>
	a2_21 = dwArg44
	s0_27 = a1
	a5_20 = 1<32>
l230407EA:
	s1Out = s1_24
	a0Out = a0_19
	a2Out = a2_21
	a3Out = a3_22
	a4Out = a4_23
	a5Out = a5_20
	s8Out = a2
	return s0_27
pbuf_alloc_reference_exit:


word32 pbuf_alloced_custom(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_stack_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..7] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5 a6
// Preserved: sp
pbuf_alloced_custom_entry:
l230407F2:
	word32 a0_5 = a0 + 3<32> & 0xFFFFFFFC<32>
	branch a5 <u a1 + a0_5 l23040824
l23040824:
	a4Out = a4
	a5Out = a5
	return 0<32>
l230407FE:
	branch a4 == 0<32> l23040802
l23040800:
	a4 = a4 + a0_5
l23040802:
	Mem15[a3 + 13<i32>:byte] = 2<8>
	Mem18[a3:word32] = 0<32>
	Mem20[a4 + 4<i32>:word32] = a3
	Mem22[a3 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem23[a3 + 10<i32>:word16] = SLICE(a1, word16, 0)
	Mem26[a3 + 12<i32>:byte] = SLICE(a2, byte, 0)
	Mem27[a3 + 14<i32>:word16] = 1<16>
	a4Out = a4
	a5Out = 1<32>
	return a3
pbuf_alloced_custom_exit:


word32 pbuf_add_header(word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_output_if_opt
//      raw_sendto
//      tcp_create_segment
//      udp_sendto
//      ethernet_output
//      icmp_input
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_add_header_entry:
l23040828:
l2304082A_thunk_pbuf_add_header_impl:
	word32 a5_7
	word32 a4_8
	word32 a3_9
	word32 a1_10
	word32 a2_11
	word32 a0_6 = pbuf_add_header_impl(a0, a1, 0<32>, out a1_10, out a2_11, out a3_9, out a4_8, out a5_7)
	a1Out = a1_10
	a2Out = a2_11
	a3Out = a3_9
	a4Out = a4_8
	a5Out = a5_7
	return a0_6
pbuf_add_header_exit:


word32 pbuf_remove_header(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
//      pbuf_header
//      pbuf_header_force
//      pbuf_free_header
//      raw_sendto
//      tcp_receive
//      tcp_input
//      udp_input
//      ethernet_input
//      icmp_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
pbuf_remove_header_entry:
l2304082E:
	word32 a0_14
	branch a0 == 0<32> l23040868
l23040868:
	a0_14 = 1<32>
l23040832:
	a4 = 0x10000000<32>
	a0_14 = 1<32>
	branch a1 >=u 0x10000000<32> l2304086A
l2304083A:
	a0_14 = 0<32>
	branch a1 == 0<32> l2304086A
l2304083E:
	a4 = CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32)
	a3 = CONVERT(SLICE(a1, word16, 0), word16, word32)
	a0_14 = 1<32>
	branch a4 <u a3 l2304086A
l2304086A:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a0
	return a0_14
l2304084E:
	word32 a5_17 = Mem0[a2 + 4<i32>:word32]
	Mem18[a5_17 + 10<i32>:word16] = SLICE(a4 - a3, word16, 0)
	word32 a4_19 = CONVERT(Mem18[a5_17 + 8<i32>:uint16], uint16, word32)
	word32 a1_20 = a1 + a2
	Mem21[a1_20 + 4<i32>:word32] = a5_17
	word32 a4_22 = a4_19 - a3
	Mem23[a5_17 + 8<i32>:word16] = SLICE(a4_22, word16, 0)
	a1Out = a1_20
	a3Out = a3
	a4Out = a4_22
	a5Out = a5_17
	return 0<32>
pbuf_remove_header_exit:


word32 pbuf_header(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_output
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_header_entry:
l2304086C:
	branch a1 >= 0<32> l23040878
l23040878:
l2304087A_thunk_pbuf_add_header_impl:
	word32 a5_7
	word32 a3_9
	word32 a1_30
	word32 a2_31
	word32 a4_32
	word32 a0_6 = pbuf_add_header_impl(a0, a1, 0<32>, out a1_30, out a2_31, out a3_9, out a4_32, out a5_7)
	a3Out = a3_9
	a5Out = a5_7
	return a0_6
l23040870:
	word32 a1_12 = 0<32> - a1
l23040874_thunk_pbuf_remove_header:
	word32 a5_15
	word32 a3_17
	word32 a1_28
	word32 a4_29
	word32 a0_14 = pbuf_remove_header(a0, a1_12, a2, out a1_28, out a3_17, out a4_29, out a5_15)
	a3Out = a3_17
	a5Out = a5_15
	return a0_14
pbuf_header_exit:


word32 pbuf_header_force(word32 a0, word32 a1, word32 a2, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
//      udp_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3 a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_header_force_entry:
l2304087E:
	branch a1 >= 0<32> l2304088A
l2304088A:
l2304088C_thunk_pbuf_add_header_impl:
	word32 a4_8
	word32 a3_9
	word32 a1_29
	word32 a2_30
	word32 a5_31
	pbuf_add_header_impl(a0, a1, 1<32>, out a1_29, out a2_30, out a3_9, out a4_8, out a5_31)
	a4Out = a4_8
	return a3_9
l23040882:
	word32 a1_12 = 0<32> - a1
l23040886_thunk_pbuf_remove_header:
	word32 a4_16
	word32 a3_17
	word32 a1_27
	word32 a5_28
	pbuf_remove_header(a0, a1_12, a2, out a1_27, out a3_17, out a4_16, out a5_28)
	a4Out = a4_16
	return a3_17
pbuf_header_force_exit:


word32 pbuf_free(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cb_altcp_recv_fn
//      bl_txdatacfm
//      get_dns_request
//      httpc_free_state
//      httpc_tcp_recv
//      httpc_tcp_connected
//      lwip_recv_tcp
//      free_socket
//      altcp_tcp_recv
//      dns_check_entry
//      dns_recv
//      dhcp_option_trailer
//      dhcp_select
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_coarse_tmr
//      dhcp_stop
//      etharp_free_entry
//      etharp_input
//      etharp_request
//      etharp_query
//      igmp_send
//      igmp_input
//      ip4_input
//      pbuf_alloc
//      pbuf_free_header
//      raw_sendto
//      tcp_seg_free
//      tcp_pcb_purge
//      tcp_recv_null
//      tcp_shutdown
//      tcp_input
//      tcp_create_segment
//      tcp_output_control_segment
//      tcp_write
//      tcp_split_unsent_seg
//      udp_input
//      udp_sendto
//      ethernet_input
//      recv_udp
//      recv_raw
//      recv_tcp
//      netconn_drain
//      netbuf_delete
//      netbuf_alloc
//      netbuf_free
//      icmp_input
//      icmp_dest_unreach
//      dhcp_server_recv
//      iperf_server_udp_recv_fn
//      ping_timeout
//      ping_recv
//      sntp_recv
//      sntp_dns_found
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pbuf_free_entry:
l23040890:
	word32 sp_124 = fp + -48<i32>
	word32 s0_115 = 0<32>
	branch a0 == 0<32> l230408E0
l230408A0:
	a1 = a0
	s0_115 = 0<32>
	s2 = 2<32>
	s3 = 1<32>
l230408A8:
	Mem22[sp_124 + 132<i32>:word32] = a1
	word32 a5_260
	word32 a4_259
	word32 a2_258
	sys_arch_protect(a4, mstatus, out a2_258, out a4_259, out a5_260)
	word32 s1_30 = CONVERT(Mem22[a1 + 14<i32>:byte], byte, word32)
	s1 = s1_30 + 0xFFFFFFFF<32> & 255<i32>
	Mem33[a1 + 14<i32>:byte] = SLICE(s1, byte, 0)
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5)
	branch s1 != 0<32> l230408E0
l230408C4:
	word32 s8_109
	word32 s6_108
	word32 s5_107
	word32 a7_106
	word32 s4_104
	word32 a3_103
	word32 a4_102
	word32 mstatus_101
	word32 a5_98
	word32 a5_39 = CONVERT(Mem33[a1 + 13<i32>:byte], byte, word32)
	word32 a1_40 = Mem33[s1_30 + 0xFFFFFFFF<32> & 255<i32>:word32]
	branch (a5_39 & 2<32>) == 0<32> l230408F0
l230408F0:
	word32 a5_42 = CONVERT(Mem33[a1_40 + 12<i32>:byte], byte, word32)
	word32 a0_43 = 0xE<32>
	a5 = a5_42 & 0xF<32>
	branch (a5_42 & 0xF<32>) == s2 l23040902
l230408FC:
	branch (a5_42 & 0xF<32>) != s3 l23040908
l23040908:
	branch (a5_42 & 0xF<32>) != 0<32> l230408D6
l2304090A:
	s0_115 = mem_free(a1_40, a3, a4, s2, s3, s4, mstatus, Mem33[sp_124 + 4<i32>:word32], Mem33[sp_124 + 8<i32>:word32], Mem33[sp_124 + 36<i32>:word32], Mem33[sp_124 + 132<i32>:word32], Mem33[sp_124 + 164<i32>:word32], Mem33[sp_124 + 216<i32>:word32], Mem33[sp_124 + 248<i32>:word32], Mem33[sp_124 + 280<i32>:word32], Mem33[sp_124 + 312<i32>:word32], Mem33[sp_124 + 344<i32>:word32], Mem33[sp_124 + 376<i32>:word32], Mem33[sp_124 + 408<i32>:word32], out s1, out a3, out a4, out a5, out a7, out s2, out s3, out s4, out s5, out s6, out s8)
l23040900:
	a0_43 = 0xD<32>
l23040902:
	word32 a0_261
	word32 a2_262
	s1 = memp_free(a0_43, a1_40, a3, a4, mstatus, out a0_261, out a2_262, out a3, out a4, out a5)
l230408D0:
	word32 a1_85 = Mem33[(a5_39 & 2<32>) + 16<i32>:word32]
	word32 a6_105
	word32 t0_110
	word32 t1_111
	word32 t4_112
	word32 t5_113
	word32 t6_114
	call a5_39 & 2<32> (retsize: 0;)
		uses: a0:a1_85,a1:a1_85,a3:a3_103,a4:a4_102,a5:a5_98,a6:a6_105,a7:a7_106,mstatus:mstatus_101,ra:ra_88,s0:s0_87,s1:s1_30 + 0xFFFFFFFF<32> & 255<i32>,s2:s2_45,s3:s3_46,s4:s4_104,s5:s5_107,s6:s6_108,s8:s8_109,t0:t0_110,t1:t1_111,t4:t4_112,t5:t5_113,t6:t6_114
		defs: a3:a3_103,a4:a4_102,a5:a5_98,a6:a6_105,a7:a7_106,mstatus:mstatus_101,ra:ra_91,s0:s0_90,s1:s1_92,s2:s2_93,s3:s3_94,s4:s4_104,s5:s5_107,s6:s6_108,s8:s8_109,sp:sp_89,t0:t0_110,t1:t1_111,t4:t4_112,t5:t5_113,t6:t6_114
	a5 = a5_98
	mstatus = mstatus_101
	a4 = a4_102
	a3 = a3_103
	s4 = s4_104
	a7 = a7_106
	s5 = s5_107
	s6 = s6_108
	s8 = s8_109
l230408D6:
	s0_115 = s0_115 + 1<32> & 255<i32>
	a1 = s1
	branch s1 != 0<32> l230408A8
l230408E0:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a0Out = s0_115
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
pbuf_free_exit:


word32 pbuf_alloc(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg44, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      httpc_init_connection_common.constprop.5
//      dns_check_entry
//      dhcp_create_msg
//      etharp_request
//      igmp_send
//      pbuf_clone
//      raw_sendto
//      tcp_output_alloc_header_common.constprop.6
//      tcp_write
//      tcp_split_unsent_seg
//      tcp_send_fin
//      udp_sendto
//      netbuf_alloc
//      icmp_input
//      icmp_dest_unreach
//      dhcp_server_recv
//      ping_timeout
//      sntp_dns_found
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pbuf_alloc_entry:
l23040912:
	branch a2 == 65<i32> l23040A6C
l23040A6C:
l2304091A:
	word32 a5_101
	word32 s1_103
	branch a2 >u 65<i32> l23040946
l23040946:
	word32 s0_22 = CONVERT(SLICE(a0, word16, 0), word16, word32)
	branch a2 == 386<i32> l230409C0
l230409C0:
	s3 = 0<32>
	s1_103 = 0<32>
	s4 = 760<i32>
	s2 = 0x10000082<32>
l230409CE:
	word32 a0_36
	word32 a4_40
	word32 a5_494
	word32 a2_493
	s1_103 = memp_malloc(s1_103, 0xE<32>, a3, a4, mstatus, out a0_36, out a2_493, out a3, out a4_40, out a5_494)
	branch a0_36 != 0<32> l23040A20
l23040A20:
	word32 a5_48 = 760<i32> - (s0_22 + 3<i32> & 0xFFFFFFFC<32>)
	a4 = a5_48
	branch a1 >=u CONVERT(SLICE(a5_48, word16, 0), word16, word32) l23040A36
l23040A34:
	a4 = a1
l23040A36:
	Mem60[a0_36:word32] = 0<32>
	Mem61[(s0_22 + a0_36 + 0x13<32> & 0xFFFFFFFC<32>) + 4<i32>:word32] = a0_36
	Mem63[a0_36 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem64[a0_36 + 10<i32>:word16] = SLICE(a4, word16, 0)
	Mem67[a0_36 + 12<i32>:word32] = 0x10000082<32>
	word32 a5_59 = a4 << 0x10<u32>
	a5_101 = a5_59 >>u 16<i32>
	branch s1_103 == 0<32> l23040A68
l23040A68:
	s1_103 = a0_36
l23040A56:
	Mem73[s3:word32] = a0_36
l23040A5A:
	a1 = CONVERT(SLICE(a1 - (a5_59 >>u 16<i32>), word16, 0), word16, word32)
	s0_22 = 0<32>
	s3 = a0_36
	branch a1 != 0<32> l230409CE
l23040A66:
l230409DA:
	word32 a2_482
	word32 a4_483
	word32 a5_484
	sys_arch_protect(a4_40, mstatus, out a2_482, out a4_483, out a5_484)
	word32 s2_87 = CONVERT(Mem31[0x4201FD94<32>:byte], byte, word32)
	Mem89[0x42020D94<32>:byte] = 1<8>
	s2 = s2_87 & 255<i32>
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5_101)
	branch (s2_87 & 255<i32>) != 0<32> l23040A14
l230409F8:
	word32 a0_97
	word32 s0_111 = tcpip_try_callback(0x23040720<32>, 0<32>, a3, a4, mstatus, dwArgA8, dwArgE8, dwArg0128, out s1_103, out a0_97, out a1, out a3, out a4, out a5_101, out a7, out s2, out s3, out s4, out s5, out s6)
	branch a0_97 == 0<32> l23040A14
l23040A08:
	word32 a4_486
	word32 a5_487
	word32 a2_485
	sys_arch_protect(a4, mstatus, out a2_485, out a4_486, out a5_487)
	Mem124[s0_111 + 3476<i32>:byte] = 0<8>
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5_101)
l23040A14:
	branch s1_103 == 0<32> l23040932
l23040A18:
	word32 a0_490
	word32 a2_491
	word32 s8_492
	word32 s1_489
	word32 s0_488
	ra = pbuf_free(ra, s1_103, a3, a4, s4, mstatus, dwArgF8, out s0_488, out s1_489, out a0_490, out a1, out a2_491, out a3, out a4, out a5_101, out a7, out s2, out s3, out s4, out s5, out s6, out s8_492, out mstatus)
l23040954:
	a5_101 = 640<i32>
	branch a2 != 640<i32> l23040932
l2304095C:
	a5_101 = a1 + 3<i32> & 0xFFFFFFFC<32>
	word32 s0_173 = CONVERT(SLICE((s0_22 + 3<32> & 0xFFFFFFFC<32>) + a5_101, word16, 0), word16, word32)
	s2 = a0
	word32 a0_176 = s0_173 + 16<i32> << 16<i32>
	branch s0_173 <u a5_101 l23040932
l2304097C:
	branch a0_176 >>u 16<i32> <u a5_101 l23040932
l23040980:
	word32 a0_182
	word32 s8_481
	mem_malloc(ra, s0_173, a0_176 >>u 16<i32>, a3, a4, a0, mstatus, s0, dwArg04, ra, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0158, out a0_182, out a1, out a3, out a4, out a5_101, out a7, out s2, out s3, out s4, out s5, out s6, out s8_481)
	s1_103 = a0_182
	branch a0_182 == 0<32> l23040934
l23040988:
	Mem211[a0_182:word32] = 0<32>
	s2 = s2 + a0_182 + 0x13<32> & -4<i32>
	Mem212[a0_182 + 4<i32>:word32] = s2
	Mem213[a0_182 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem214[a0_182 + 10<i32>:word16] = SLICE(a1, word16, 0)
	Mem215[0x1000008C<32>:word32] = a0_182
	a5_101 = 0x10000080<32>
l2304092C:
	a5_101 = 1<32>
	branch a2 == 1<32> l230409AC
l230409AC:
	0<32> = dwArg0128
l230409BC:
l230409BC_thunk_pbuf_alloc_reference:
	word32 a0_232
	word32 a2_233
	word32 a3_234
	word32 a4_235
	word32 a5_236
	word32 s1_238
	word32 s8_239
	s0Out = pbuf_alloc_reference(s1, a1, a3, a4, mstatus, dwArg44, out s1_238, out a0_232, out a2_233, out a3_234, out a4_235, out a5_236, out s8_239)
	s1Out = s1_238
	a0Out = a0_232
	a1Out = a1
	a2Out = a2_233
	a3Out = a3_234
	a4Out = a4_235
	a5Out = a5_236
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8_239
	mstatusOut = mstatus
	return ra
l23040932:
	s1_103 = 0<32>
l23040934:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_103
	a0Out = s1_103
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	a5Out = a5_101
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = dwArg58
	mstatusOut = mstatus
	return ra
pbuf_alloc_exit:


word32 pbuf_realloc(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0118, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dhcp_option_trailer
//      ip4_input
//      tcp_oos_insert_segment
//      tcp_receive
//      tcp_split_unsent_seg
//      dhcp_server_recv
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0118:[0..31]
// LiveOut: a2 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
pbuf_realloc_entry:
l23040A70:
	word32 a5_5 = CONVERT(Mem0[a0 + 8<i32>:uint16], uint16, word32)
	branch a1 >=u a5_5 l23040AE8
l23040AE8:
	s1Out = s1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
l23040A78:
	word32 s0_14 = a0
	word32 s1_142 = a1
	word32 a5_16 = a1 - a5_5
	a4_122 = a4
l23040A88:
	word32 a4_122
	word32 a1_19 = CONVERT(Mem18[s0_14 + 10<i32>:uint16], uint16, word32)
	branch a1_19 <u s1_142 l23040AD4
l23040AD4:
	a4_122 = CONVERT(Mem18[s0_14 + 8<i32>:uint16], uint16, word32) + a5_16
	Mem26[s0_14 + 8<i32>:word16] = SLICE(a4_122, word16, 0)
	s1_142 = CONVERT(SLICE(s1_142 - a1_19, word16, 0), word16, word32)
	s0_14 = Mem26[s0_14:word32]
l23040A90:
	word32 a5_29 = CONVERT(Mem18[s0_14 + 12<i32>:byte], byte, word32)
	word32 a5_124 = a5_29 & 0xF<32>
	branch (a5_29 & 0xF<32>) != 0<32> l23040AB6
l23040A98:
	branch a1_19 == s1_142 l23040AB6
l23040A9C:
	word32 a5_31 = CONVERT(Mem18[s0_14 + 13<i32>:byte], byte, word32)
	a5_124 = a5_31 & 2<32>
	branch (a5_31 & 2<32>) != 0<32> l23040AB6
l23040AA4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	a0 = Mem18[a1_19 + 4<i32>:word32]
	word32 stackArg4 = <invalid>
	word32 stackArg36 = <invalid>
	word32 stackArg132 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg280 = <invalid>
	word32 stackArg312 = <invalid>
	word32 stackArg376 = <invalid>
	mem_trim(a0, a1, a3, a4, s2, s3, s4, mstatus, stackArg4, stackArg36, stackArg132, stackArg168, stackArg216, stackArg248, stackArg280, stackArg312, stackArg376)
l23040AB6:
	word32 s0_43 = Mem18[a0:word32]
	Mem45[s0_43 + 10<i32>:word16] = SLICE(s1_142, word16, 0)
	Mem46[s0_43 + 8<i32>:word16] = SLICE(s1_142, word16, 0)
	branch a0 == 0<32> l23040AC6
l23040AC2:
	word32 a7_227
	word32 a1_225
	word32 a2_226
	word32 a0_224
	ra = pbuf_free(ra, a0, a3, a4_122, s4, mstatus, dwArg0118, out s0_43, out s1_142, out a0_224, out a1_225, out a2_226, out a3, out a4_122, out a5_124, out a7_227, out s2, out s3, out s4, out s5, out s6, out s8, out mstatus)
l23040AC6:
	Mem89[s0_43:word32] = 0<32>
	s1Out = s1_142
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_122
	a5Out = a5_124
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
pbuf_realloc_exit:


word32 pbuf_free_header(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg44, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_recv
//      lwip_recv_tcp
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0044:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pbuf_free_header_entry:
l23040AEA:
	word32 s0_11 = a0
l23040AF4:
	branch a1 == 0<32> l23040B20
l23040AF6:
	branch s0_11 == 0<32> l23040B20
l23040AF8:
	branch a1 <u CONVERT(Mem14[s0_11 + 10<i32>:uint16], uint16, word32) l23040B1A
l23040B1A:
	word32 a5_154
	word32 a1_153
	pbuf_remove_header(s0_11, a1, a2, out a1_153, out a3, out a4, out a5_154)
l23040B20:
	s0Out = s0_11
	s1Out = s1
	a0Out = s0_11
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s8Out = dwLoc1C
	mstatusOut = mstatus
	return ra
pbuf_free_header_exit:
l23040B00:
	word32 s0_34 = Mem14[s1:word32]
	Mem37[s0_34:word32] = 0<32>
	word32 s0_155
	word32 a0_156
	word32 a2_157
	word32 a5_158
	word32 a7_159
	word32 s8_160
	ra = pbuf_free(ra, s0_34, a3, a4, s4, mstatus, dwArg0108, out s0_155, out s1, out a0_156, out a1, out a2_157, out a3, out a4, out a5_158, out a7_159, out s2, out s3, out s4, out s5, out s6, out s8_160, out mstatus)
	s0_11 = s1
	a2 = dwArg44


word32 pbuf_clen(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_free_acked_segments.isra.3
//      tcp_write
//      tcp_split_unsent_seg
//      tcp_send_fin
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
pbuf_clen_entry:
l23040B2C:
	word32 a5_3 = 0<32>
l23040B2E:
	branch a0 != 0<32> l23040B34
l23040B34:
	a5_3 = CONVERT(SLICE(a5_3 + 1<32>, word16, 0), word16, word32)
	a0 = Mem0[a0:word32]
l23040B30:
	return a5_3
pbuf_clen_exit:


word32 pbuf_ref(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_output
//      etharp_query
//      pbuf_chain
//      tcp_seg_copy
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
pbuf_ref_entry:
l23040B3E:
	branch a0 == 0<32> l23040B60
l23040B60:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return a0
l23040B40:
	word32 a2_41
	word32 a4_42
	word32 a5_43
	word32 a0_12 = sys_arch_protect(a4, mstatus, out a2_41, out a4_42, out a5_43)
	Mem18[a0 + 14<i32>:byte] = SLICE(CONVERT(Mem8[a0 + 14<i32>:byte], byte, word32) + 1<32>, byte, 0)
l23040B5C_thunk_sys_arch_unprotect:
	word32 a4_24
	word32 a5_25
	a3Out = sys_arch_unprotect(a3, mstatus, out a4_24, out a5_25)
	a4Out = a4_24
	a5Out = a5_25
	return a0_12
pbuf_ref_exit:


void pbuf_cat(word32 a0, word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_stack_input
//      httpc_tcp_recv
//      pbuf_chain
//      tcp_receive
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 a3 a5 sp
pbuf_cat_entry:
l23040B62:
	branch a0 == 0<32> l23040B82
l23040B64:
	branch a1 != 0<32> l23040B6A
l23040B6A:
	word32 a0_11 = Mem6[a4:word32]
	Mem15[a0_11 + 8<i32>:word16] = SLICE(CONVERT(CONVERT(Mem6[a0 + 8<i32>:uint16] + Mem6[a1 + 8<i32>:uint16], uint16, uint16), uint16, word32), word16, 0)
	branch a4 != 0<32> l23040B68
l23040B68:
	a0 = a4
l23040B80:
	Mem17[a1:word32] = a0_11
l23040B82:
	return
l23040B66:
	return
pbuf_cat_exit:


void pbuf_chain(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_sendto
//      udp_sendto
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
pbuf_chain_entry:
l23040B84:
	pbuf_cat(a0, a1, a4)
l23040B98_thunk_pbuf_ref:
	word32 a3_26
	word32 a4_27
	word32 a5_28
	pbuf_ref(a1, a3, a4, mstatus, out a3_26, out a4_27, out a5_28)
	return
pbuf_chain_exit:


word32 pbuf_copy(word32 a0, word32 a1, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_clone
//      icmp_input
//      dhcp_server_recv
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
pbuf_copy_entry:
l23040B9C:
	branch a0 == 0<32> l23040C46
l23040C46:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s0
l23040B9E:
	word32 a0_192
	word32 s1_111
	word32 s0_19 = a1
	s1_111 = s1
	branch a1 == 0<32> l23040C06
l23040BB0:
	a4 = CONVERT(Mem17[a0 + 8<i32>:uint16], uint16, word32)
	s1_111 = a0
	branch a4 <u CONVERT(Mem17[a1 + 8<i32>:uint16], uint16, word32) l23040C06
l23040BBE:
	word32 s4_118 = 0<32>
	s3 = 0<32>
l23040BC2:
	s2 = CONVERT(Mem17[s1_111 + 10<i32>:uint16], uint16, word32) - s3
	word32 a5_33 = CONVERT(Mem17[s0_19 + 10<i32>:uint16], uint16, word32) - s4_118
	branch a5_33 >=u s2 l23040BD8
l23040BD6:
	s2 = a5_33
l23040BD8:
	s0_19 = Mem17[a1 + 4<i32>:word32]
	s1_111 = Mem17[a0 + 4<i32>:word32]
	a0 = a0 + s3
	word32 a7_311
	word32 a6_310
	word32 a5_309
	word32 a2_307
	word32 a4_308
	memcpy(a0, a1 + s4_118, s2, out a1, out a2_307, out a3, out a4_308, out a5_309, out a6_310, out a7_311)
	a4 = CONVERT(Mem17[s0_19 + 10<i32>:uint16], uint16, word32)
	s4_118 = s4_118 + s2
	s3 = s3 + s2
	word32 a5_64 = CONVERT(Mem17[s1_111 + 10<i32>:uint16], uint16, word32)
	branch s4_118 <u a4 l23040BFA
l23040BF6:
	s0_19 = Mem17[s0_19:word32]
	s4_118 = 0<32>
l23040BFA:
	branch s3 != a5_64 l23040C1A
l23040BFE:
	s1_111 = Mem17[s1_111:word32]
	branch s1_111 != 0<32> l23040C18
l23040C18:
	s3 = 0<32>
l23040C1A:
	branch s0_19 == 0<32> l23040C2C
l23040C1C:
	a4 = CONVERT(Mem17[s0_19 + 10<i32>:uint16], uint16, word32)
	word32 a5_77 = CONVERT(Mem17[s0_19 + 8<i32>:uint16], uint16, word32)
	branch a4 != a5_77 l23040C2C
l23040C28:
	s0_19 = Mem17[a5_77:word32]
	branch a5_77 != 0<32> l23040C42
l23040C2C:
	a4 = CONVERT(Mem17[s1_111 + 10<i32>:uint16], uint16, word32)
	word32 a5_83 = CONVERT(Mem17[s1_111 + 8<i32>:uint16], uint16, word32)
	branch a4 != a5_83 l23040C3C
l23040C38:
	s1_111 = Mem17[a5_83:word32]
	branch a5_83 != 0<32> l23040C42
l23040C42:
	a0_192 = 0xFFFFFFFA<32>
l23040C3C:
	branch s0_19 != 0<32> l23040BC2
l23040C3E:
	a0_192 = 0<32>
l23040C02:
	a0_192 = 0<32>
	branch s0_19 == 0<32> l23040C08
l23040C06:
	a0_192 = 0xFFFFFFF0<32>
l23040C08:
	s1Out = s1_111
	a0Out = a0_192
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	return s1
pbuf_copy_exit:


word32 pbuf_copy_partial(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      httpc_tcp_recv
//      lwip_recv_tcp
//      lwip_recvfrom_udp_raw.isra.6
//      dns_recv
//      dhcp_recv
//      tcp_split_unsent_seg
//      tcp_zero_window_probe
//      sntp_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
pbuf_copy_partial_entry:
l23040C4A:
	word32 s1_158
	word32 s0_101 = 0<32>
	s1_158 = s1
	branch a0 == 0<32> l23040C6C
l23040C5C:
	s0_101 = 0<32>
	s1_158 = s1
	branch a1 == 0<32> l23040C6C
l23040C62:
	s2 = a0
	s1_158 = a2
l23040C66:
	branch s1_158 == 0<32> l23040C6C
l23040C68:
	branch s2 != 0<32> l23040C7E
l23040C7E:
	a1 = CONVERT(Mem15[s2 + 10<i32>:uint16], uint16, word32)
	branch a3 == 0<32> l23040C94
l23040C84:
	branch a3 <u a1 l23040C94
l23040C94:
	word32 a1_33 = CONVERT(SLICE(a1 - a3, word16, 0), word16, word32)
	word32 s3_34 = a1_33
	branch s1_158 >=u a1_33 l23040CA2
l23040CA0:
	s3_34 = s1_158
l23040CA2:
	word32 s3_43 = s3_34 << 16<i32>
	word32 a2_194
	word32 a3_195
	word32 a6_196
	word32 a7_197
	memcpy(a1 + s0_101, Mem15[s2 + 4<i32>:int32] + a3, s3_43 >>u 0x10<u32>, out a1, out a2_194, out a3_195, out a4, out a5, out a6_196, out a7_197)
	s3 = s3_43 >>u 0x10<u32>
	s0_101 = CONVERT(SLICE(s0_101 + (s3_43 >>u 0x10<u32>), word16, 0), word16, word32)
	s1_158 = CONVERT(SLICE(s1_158 - (s3_43 >>u 0x10<u32>), word16, 0), word16, word32)
	a3 = 0<32>
l23040C88:
	a3 = CONVERT(SLICE(a3 - a1, word16, 0), word16, word32)
l23040C8E:
	s2 = Mem15[s2:int32]
l23040C6C:
	s1Out = s1_158
	a0Out = s0_101
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = s4
	return s1
pbuf_copy_partial_exit:


word32 pbuf_take(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
//      pbuf_take_at
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3 a4 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
pbuf_take_entry:
l23040CCA:
	branch a0 == 0<32> l23040D24
l23040D24:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return s0
l23040CCC:
	word32 s1_126 = a0
	branch a1 == 0<32> l23040CF0
l23040CE2:
	word32 s0_24 = a2
	s3 = 0<32>
	branch CONVERT(Mem17[a0 + 8<i32>:uint16], uint16, word32) >=u a2 l23040D1E
l23040D1E:
	branch s0_24 != 0<32> l23040D00
l23040D00:
	s2 = CONVERT(Mem17[s1_126 + 10<i32>:uint16], uint16, word32)
	branch s0_24 >=u s2 l23040D0A
l23040D08:
	s2 = s0_24
l23040D0A:
	word32 s1_35 = Mem17[3<32>:word32]
	word32 a1_165
	word32 a2_166
	word32 a5_167
	word32 a6_168
	word32 a7_169
	memcpy(0xFFFFFFFF<32>, a1 + s3, s2, out a1_165, out a2_166, out a3, out a4, out a5_167, out a6_168, out a7_169)
	s1_126 = Mem17[s1_35:word32]
	s0_24 = s0_24 - s2
	s3 = s3 + s2
l23040D20:
l23040CF0:
	s1Out = s1_126
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = s4
	return s1
pbuf_take_exit:


word32 pbuf_take_at(word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArg0128, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 s0 s1 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pbuf_take_at_entry:
l23040D28:
	pbuf_skip_const(a0, a3, fp + -34<i32>)
	word32 s3_11 = a1
	branch a0 == 0<32> l23040D9C
l23040D9C:
l23040D44:
	a4 = CONVERT(wLoc22, uint16, word32)
	a3 = CONVERT(Mem20[a0 + 8<i32>:uint16], uint16, word32)
	s1 = a0
	branch a3 < a4 + a2 l23040D8E
l23040D58:
	word32 s2_29 = a2
	word32 a5_30 = CONVERT(Mem20[a0 + 10<i32>:uint16], uint16, word32) - a4
	branch a5_30 >= a2 l23040D6C
l23040D64:
	s2_29 = CONVERT(SLICE(a5_30, word16, 0), word16, word32)
l23040D6C:
	s1 = Mem20[3<32>:word32]
	word32 a1_147
	word32 a2_148
	word32 a5_149
	word32 a6_150
	word32 a7_151
	memcpy(a4 + 0xFFFFFFFF<32>, a1, s2_29, out a1_147, out a2_148, out a3, out a4, out a5_149, out a6_150, out a7_151)
	word32 a2_58 = CONVERT(SLICE(a2 - s2_29, word16, 0), word16, word32)
	branch a2_58 == 0<32> l23040D8E
l23040D84:
	word32 s2_152
	pbuf_take(0<32>, a1 + s2_29, a2_58, out s1, out a3, out a4, out s2_152, out s3_11, out s4, out s8)
l23040D8E:
	0<32> = dwArg0128
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s3Out = s3_11
	s4Out = s4
	s8Out = s8
	return dwArgE4
pbuf_take_at_exit:


word32 pbuf_clone(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_query
//      recv_raw
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0034:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
pbuf_clone_entry:
l23040DA0:
	word32 a0_19
	word32 mstatus_35
	word32 s5_37
	word32 s6_38
	word32 s0_122
	word32 a1_123
	word32 a2_124
	word32 a5_125
	word32 a7_126
	word32 s8_127
	word32 a4_22
	word32 a3_21
	word32 s1_25
	word32 s2_100
	word32 s3_101
	word32 s4_102
	word32 ra_36 = pbuf_alloc(ra, s0, a2, a0, CONVERT(Mem5[a2 + 8<i32>:uint16], uint16, word32), a1, a3, a4, mstatus, s0, dwArg34, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0148, out s0_122, out s1_25, out a0_19, out a1_123, out a2_124, out a3_21, out a4_22, out a5_125, out a7_126, out s2_100, out s3_101, out s4_102, out s5_37, out s6_38, out s8_127, out mstatus_35)
	word32 s0_44 = a0_19
	branch a0_19 == 0<32> l23040DBE
l23040DB8:
	word32 a0_128
	s0_44 = pbuf_copy(a0_19, s1_25, out s1_25, out a0_128, out a3_21, out a4_22, out s2_100, out s3_101, out s4_102)
l23040DBE:
	s1Out = s1_25
	a0Out = s0_44
	a3Out = a3_21
	a4Out = a4_22
	s2Out = s2_100
	s3Out = s3_101
	s4Out = s4_102
	s5Out = s5_37
	s6Out = s6_38
	mstatusOut = mstatus_35
	return ra_36
pbuf_clone_exit:


word32 pbuf_try_get_at(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_recv
//      pbuf_get_at
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5 t3
// Preserved: sp
pbuf_try_get_at_entry:
l23040DCA:
	pbuf_skip_const(a0, a1, fp + 0xFFFFFFEE<32>)
	word32 a5_12 = 0xFFFFFFFF<32>
	branch a0 == 0<32> l23040DF0
l23040DDA:
	a4 = CONVERT(wLoc12, uint16, word32)
	a3 = CONVERT(Mem6[a0 + 10<i32>:uint16], uint16, word32)
	a5_12 = 0xFFFFFFFF<32>
	branch a4 >=u a3 l23040DF0
l23040DE8:
	a5_12 = CONVERT(Mem6[a4 + 0xFFFFFFFF<32>:byte], byte, word32)
l23040DF0:
	a3Out = a3
	a4Out = a4
	a5Out = a5_12
	return a5_12
pbuf_try_get_at_exit:


word32 pbuf_get_at(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_recv
//      pbuf_memcmp
//      sntp_recv
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a2 a3 a4 a5 t3
// Preserved: sp
pbuf_get_at_entry:
l23040DF8:
	word32 a3_12
	word32 a4_13
	word32 a5_30
	word32 a0_14 = pbuf_try_get_at(a0, a1, out a3_12, out a4_13, out a5_30)
	branch a0_14 >= 0<32> l23040E06
l23040E04:
	a0_14 = 0<32>
l23040E06:
	a3Out = a3_12
	a4Out = a4_13
	return a0_14 & 255<i32>
pbuf_get_at_exit:


void pbuf_put_at(word32 s0, word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..7] s0:[16..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 s0 s8 t3
// Preserved: sp
pbuf_put_at_entry:
l23040E10:
	pbuf_skip_const(a0, a1, fp + 0xFFFFFFEE<32>)
	uint16 wLoc12_25 = SLICE(s0, uint16, 16)
	branch a0 == 0<32> l23040E36
l23040E22:
	word32 a4_13 = CONVERT(wLoc12_25, uint16, word32)
	word32 a5_14 = CONVERT(Mem10[a0 + 10<i32>:uint16], uint16, word32)
	branch a4_13 >=u a5_14 l23040E36
l23040E2E:
	Mem17[a5_14 + a4_13:byte] = SLICE(a2, byte, 0)
l23040E36:
	return
pbuf_put_at_exit:


word32 pbuf_memcmp(word32 a0, word32 a1, word32 a3, word32 dwArg74, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_recv
//      pbuf_memfind
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] Stack +0074:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 t3 tp
// Preserved: sp
pbuf_memcmp_entry:
l23040E3E:
	word32 a4_141 = CONVERT(Mem0[a0 + 8<i32>:uint16], uint16, word32)
	word32 a5_8 = a1 + a3
	branch a4_141 >= a5_8 l23040E50
l23040E50:
	word32 s1_20 = a0
	word32 s0_21 = a1
l23040E60:
	word32 a5_147 = CONVERT(Mem19[s1_20 + 10<i32>:uint16], uint16, word32)
	branch s0_21 <u a5_147 l23040E72
l23040E68:
	s1_20 = Mem19[s1_20:word32]
	s0_21 = CONVERT(SLICE(s0_21 - a5_147, word16, 0), word16, word32)
	branch s1_20 != 0<32> l23040E60
l23040E72:
	word32 s3_159 = 0<32>
l23040E74:
	word32 a0_129
	word32 s2_32 = s3_159 << 0x10<u32>
	branch s2_32 >>u 0x10<u32> <u a3 l23040E84
l23040E84:
	s3_159 = s3_159 + 1<32>
	word32 a0_45 = pbuf_get_at(s1_20, CONVERT(SLICE((s2_32 >>u 0x10<u32>) + s0_21, word16, 0), word16, word32), out a3, out a4_141)
	s0_21 = a3
	a5_147 = CONVERT(Mem44[dwArg74 + s3_159 + -1<i32>:byte], byte, word32)
	branch a5_147 == a0_45 l23040E74
l23040EA8:
	a5_147 = 0xFFFFFFE<32>
	word32 a0_58 = s2_32 >>u 0x10<u32>
	branch s2_32 >>u 0x10<u32> <=u 0xFFFFFFE<32> l23040EB4
l23040EB2:
	a0_58 = 0xFFFFFFFE<32>
l23040EB4:
	a0_129 = CONVERT(SLICE(a0_58 + 1<32>, word16, 0), word16, word32)
l23040E80:
	a0_129 = 0<32>
l23040EBA:
	0<32> = dwArg0128
	s1Out = s1_20
	a0Out = a0_129
	a3Out = a3
	a4Out = a4_141
	a5Out = a5_147
	s2Out = s2_32 >>u 0x10<u32>
	s3Out = s3_159
	return dwArgE4
l23040E4A:
	s1Out = s1
	a0Out = 0xFFFFFFF<32>
	a3Out = a3
	a4Out = a4_141
	a5Out = a5_8
	s2Out = s2
	s3Out = s3
	return s0
pbuf_memcmp_exit:


word32 pbuf_memfind(word32 a0, word32 a2, word32 a3, word32 dwArg54, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_recv
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] Stack +0054:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
pbuf_memfind_entry:
l23040EC8:
	word32 s1_114
	word32 s0_46
	word32 a5_111 = CONVERT(Mem15[a0 + 8<i32>:uint16], uint16, word32)
	word32 a4_108 = a2 + a3
	s1_114 = s1
	branch a5_111 < a4_108 l23040EF6
l23040EE2:
	a5_111 = a5_111 - a2
	s3 = a0
	s2 = a2
	word32 s0_27 = a3
	s1_114 = CONVERT(SLICE(a5_111, word16, 0), word16, word32)
l23040EF2:
	branch s1_114 >=u s0_27 l23040F0C
l23040F0C:
	word32 a0_40
	s0_46 = pbuf_memcmp(s3, s0_27, s2, dwArg54, dwArg0108, out s1_114, out a0_40, out a3, out a4_108, out a5_111, out s2, out s3)
	branch a0_40 == 0<32> l23040EFA
l23040F1A:
	s0_27 = CONVERT(SLICE(s0_46 + 1<32>, word16, 0), word16, word32)
l23040EF6:
	s0_46 = 0xFFFFFFF<32>
l23040EFA:
	s1Out = s1_114
	a0Out = s0_46
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4_108
	a5Out = a5_111
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = s4
	return s1
pbuf_memfind_exit:


word32 raw_input(word32 ra, word32 a0, word32 a1, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
raw_input_entry:
l23040F22:
	word32 a5_271
	word32 a3_269
	word32 a4_270
	word32 s6_118 = ip4_addr_isbroadcast_u32(a0, a1, out a3_269, out a4_270, out a5_271)
	word32 s4_116 = a0
	word32 s3_115 = 0<32>
	word32 s0_113 = Mem22[0x4200DF7C<32>:int32]
	word32 s5_117 = CONVERT(Mem22[Mem22[a0 + 4<i32>:int32] + 9<i32>:byte], byte, word32)
	word32 a0_130 = 0<32>
	word32 s1_111 = 0x4201FEC0<32>
	word32 s2_114 = 0x4200DF7C<32>
	word32 s7_119 = 0x42020000<32>
l23040F6A:
	branch s0_113 == 0<32> l23040FCA
l23040F6C:
	word32 a5_45 = CONVERT(Mem22[s0_113 + 16<i32>:byte], byte, word32)
	branch a5_45 != s5_117 l23040FE8
l23040F74:
	word32 a4_47 = CONVERT(Mem22[s0_113 + 8<i32>:byte], byte, word32)
	branch a4_47 == 0<32> l23040F8A
l23040F7A:
	s1_111 = Mem22[a5_45 + 4<i32>:word32]
	a5_45 = CONVERT(Mem22[a5_45 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
	branch a4_47 != a5_45 l23040FE8
l23040F8A:
	s0_113 = Mem22[a5_45:word32]
	branch s6_118 == 0<32> l23040FE0
l23040FE0:
	branch a5_45 == 0<32> l23040F92
l23040FE2:
	s1_111 = Mem22[a4_47 + 20<i32>:word32]
	branch a4_47 == a5_45 l23040F92
l23040F90:
	branch a5_45 != 0<32> l23040FE8
l23040F92:
	word32 a5_61 = CONVERT(Mem22[s0_113 + 17<i32>:byte], byte, word32)
	branch (a5_61 & 1<32>) == 0<32> l23040FA2
l23040F9A:
	s0_113 = Mem22[a4_47 + 4<i32>:word32]
	s1_111 = Mem22[(a5_61 & 1<32>) + 16<i32>:word32]
	branch a4_47 != (a5_61 & 1<32>) l23040FE8
l23040FA2:
	s0_113 = Mem22[(a5_61 & 1<32>) + 20<i32>:word32]
	branch (a5_61 & 1<32>) == 0<32> l23040FE8
l23040FA6:
	word32 s0_73 = Mem22[a0_130 + 24<i32>:word32]
	word32 a5_112
	word32 a0_121
	call a5_61 & 1<32> (retsize: 0;)
		uses: a0:a0_72,a1:s0_73,a2:s4_82,a3:s7_77 + -304<i32>,ra:ra_105,s0:s0_73,s1:s1_85,s2:s2_92,s3:s3_96,s4:s4_82,s5:s5_46,s6:s6_56,s7:s7_77
		defs: a0:a0_121,a5:a5_112,ra:ra_120,s0:s0_113,s1:s1_111,s2:s2_114,s3:s3_115,s4:s4_116,s5:s5_117,s6:s6_118,s7:s7_119
	branch a0_121 == 0<32> l23040FEE
l23040FEE:
	a0_130 = 2<32>
l23040FE8:
	s3_115 = s0_113
	s0_113 = Mem22[s0_113 + 12<i32>:word32]
l23040FB4:
	a0_130 = 1<32>
	branch s3_115 == 0<32> l23040FCA
l23040FBA:
	word32 s0_136 = Mem22[a5_112 + 12<i32>:word32]
	Mem137[s3_115 + 12<i32>:word32] = a5_112
	word32 a5_138 = Mem137[s2_114:int32]
	Mem139[s2_114:word32] = s0_136
	Mem140[a5_138 + 12<i32>:word32] = s0_136
l23040FCA:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_111
	a0Out = a0_130
	a2Out = dwArgB8
	s2Out = s2_114
	s3Out = s3_115
	s4Out = dwArg78
	s5Out = s5_117
	s6Out = s6_118
	s8Out = s5
	return ra
raw_input_exit:


word32 raw_bind(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_bind
//      ping_api_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a5
// Preserved: sp
raw_bind_entry:
l23040FF2:
	word32 a5_10 = 0xFFFFFFFA<32>
	branch a0 == 0<32> l23040FFE
l23040FF6:
	branch a1 == 0<32> l23040FFE
l23040FF8:
	Mem8[0xFFFFFFFA<32>:word32] = a0
	a5_10 = 0<32>
l23040FFE:
	return a5_10
raw_bind_exit:


word32 raw_bind_netif(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt_callback
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
raw_bind_netif_entry:
l23041002:
	word32 a5_3 = 0<32>
	branch a1 == 0<32> l23041010
l23041006:
	a5_3 = CONVERT(Mem0[a1 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
l23041010:
	Mem12[a0 + 8<i32>:byte] = SLICE(a5_3, byte, 0)
	return a5_3
raw_bind_netif_exit:


word32 raw_connect(word32 a0, word32 a1, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_connect
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
raw_connect_entry:
l23041016:
	branch a0 == 0<32> l23041032
l2304101C:
	branch a1 == 0<32> l23041032
l23041032:
	a4Out = a4
	a5Out = <invalid>
	return 0xFFFFFFFA<32>
l2304101E:
	Mem11[a4 + 4<i32>:word32] = a0
	word32 a4_12 = CONVERT(Mem11[a0 + 17<i32>:byte], byte, word32)
	Mem14[a0 + 17<i32>:byte] = SLICE(a4_12 | 1<i32>, byte, 0)
	a4Out = a4_12 | 1<i32>
	a5Out = <invalid>
	return 0<32>
raw_connect_exit:


void raw_recv(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_newconn
//      ping_api_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
raw_recv_entry:
l23041034:
	Mem5[a1 + 20<i32>:word32] = a0
	Mem7[a2 + 24<i32>:word32] = a0
	return
raw_recv_exit:


word32 raw_sendto_if_src(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 s5, word32 s6, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_sendto
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
raw_sendto_if_src_entry:
l2304103A:
	word32 s1_175
	branch a0 == 0<32> l23041150
l2304104E:
	branch a2 == 0<32> l23041150
l23041052:
	branch a3 == 0<32> l23041150
l23041056:
	word32 s0_136 = a1
	branch a4 == 0<32> l23041150
l2304105E:
	branch (CONVERT(Mem17[a0 + 17<i32>:byte], byte, word32) & 2<32>) == 0<32> l23041090
l23041090:
	a4 = CONVERT(Mem17[a1 + 8<i32>:uint16], uint16, word32)
	a5 = 0xFFFFFEB<32>
	branch a4 <=u 0xFFFFFEB<32> l230410B2
l230410B2:
	word32 s4_123 = a4
	word32 s1_31 = a0
	word32 s5_115 = a3
	word32 s3_35 = a2
	word32 a2_38
	word32 a3_39
	word32 a4_40
	word32 a1_449
	word32 a5_450
	branch pbuf_add_header(a1, 0x14<32>, out a1_449, out a2_38, out a3_39, out a4_40, out a5_450) == 0<32> l2304113C
l2304113C:
	word32 a1_474
	branch pbuf_remove_header(a1, 0x14<32>, a2_38, out a1_474, out a3, out a4, out a5) != 0<32> l2304109C
l23041146:
	s2 = a1
l230410C4:
	word32 a0_54
	word32 a1_451
	word32 a2_452
	word32 a7_453
	word32 s2_454
	word32 s8_455
	ra = pbuf_alloc(ra, a1, a0, 162<i32>, 0<32>, 640<i32>, a3_39, a4_40, mstatus, s4, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_136, out s1_31, out a0_54, out a1_451, out a2_452, out a3, out a4, out a5, out a7_453, out s2_454, out s3_35, out s4_123, out s5_115, out s6, out s8_455, out mstatus)
	s2 = a0_54
	branch a0_54 == 0<32> l2304109C
l230410D6:
	branch CONVERT(Mem17[s0_136 + 8<i32>:uint16], uint16, word32) == 0<32> l230410E2
l230410DC:
	pbuf_chain(a0_54, s0_136, a3, a4, mstatus)
l230410E2:
	word32 a3_107
	branch (CONVERT(Mem17[s1_31 + 17<i32>:byte], byte, word32) & 4<32>) == 0<32> l23041106
l230410EA:
	branch (Mem17[s3_35:int32] & 240<i32>) != 224<i32> l2304114A
l230410FA:
	Mem98[s2 + 13<i32>:byte] = SLICE(CONVERT(Mem17[s2 + 13<i32>:byte], byte, word32) | 4<i32>, byte, 0)
l23041106:
	branch (Mem100[s3_35:int32] & 240<i32>) != 224<i32> l2304114A
l2304114A:
	a3_107 = CONVERT(Mem106[s1_31 + 11<i32>:byte], byte, word32)
l23041116:
	a3_107 = CONVERT(Mem100[s1_31 + 19<i32>:byte], byte, word32)
l2304111A:
	word32 a0_149
	word32 s0_158
	word32 s4_162
	word32 s1_456
	word32 a7_457
	word32 s3_458
	word32 s5_459
	word32 s6_460
	word32 s7_461
	word32 s8_462
	word32 s9_463
	ra = ip4_output_if(ra, s0_136, s1_31, s2, s4_123, s3_35, a3_107, CONVERT(Mem110[s1_31 + 10<i32>:byte], byte, word32), CONVERT(Mem110[s1_31 + 16<i32>:byte], byte, word32), s5_115, s4_123, s5_115, s6, s7, out s0_158, out s1_456, out a0_149, out a3, out a4, out a5, out a7_457, out s2, out s3_458, out s4_162, out s5_459, out s6_460, out s7_461, out s8_462, out s9_463)
	s1_175 = a0_149
	branch s0_158 == s2 l2304109E
l23041134:
	word32 s0_464
	word32 a0_465
	word32 a1_466
	word32 a2_467
	word32 a7_468
	word32 s3_469
	word32 s4_470
	word32 s5_471
	word32 s6_472
	word32 s8_473
	ra = pbuf_free(ra, s2, a3, a4, s4_162, mstatus, dwArg0108, out s0_464, out s1_175, out a0_465, out a1_466, out a2_467, out a3, out a4, out a5, out a7_468, out s2, out s3_469, out s4_470, out s5_471, out s6_472, out s8_473, out mstatus)
l2304109C:
	s1_175 = 0xFFFFFFFF<32>
l23041066:
	a4 = CONVERT(Mem17[a1 + 10<i32>:uint16], uint16, word32)
	a5 = 0x13<32>
	branch a4 <=u 0x13<32> l23041150
l23041150:
	s1_175 = 0xFFFFFFFA<32>
l2304109E:
	s0Out = s1
	a0Out = s1_175
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s4Out = dwArg04
	mstatusOut = mstatus
	return ra
l23041070:
l2304108C_thunk_ip4_output_if:
	word32 s6_445
	word32 s8_447
	word32 s3_443
	word32 a7_442
	word32 s5_444
	word32 a0_244
	word32 a3_247
	word32 a4_248
	word32 a5_249
	word32 s0_253
	word32 s2_255
	word32 s4_257
	word32 s7_446
	word32 s9_448
	word32 s1_441
	word32 ra_252 = ip4_output_if(ra, s1, s1, a1, a4, 0<32>, 0<32>, 0<32>, 0<32>, a3, dwArg04, s5, s6, s7, out s0_253, out s1_441, out a0_244, out a3_247, out a4_248, out a5_249, out a7_442, out s2_255, out s3_443, out s4_257, out s5_444, out s6_445, out s7_446, out s8_447, out s9_448)
	s0Out = s0_253
	a0Out = a0_244
	a3Out = a3_247
	a4Out = a4_248
	a5Out = a5_249
	s2Out = s2_255
	s4Out = s4_257
	mstatusOut = mstatus
	return ra_252
raw_sendto_if_src_exit:


word32 raw_sendto(word32 ra, word32 a0, word32 a1, word32 a2, word32 a5, word32 s4, word32 s5, word32 s6, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg38, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_send
//      lwip_netconn_do_send
//      ping_timeout
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
raw_sendto_entry:
l23041154:
	branch a0 == 0<32> l230411D0
l23041156:
	branch a2 == 0<32> l230411D0
l230411D0:
	s0Out = s0
	a0Out = 0xFFFFFFFA<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s4Out = s4
	mstatusOut = mstatus
	return ra
l23041158:
	word32 a4_247
	word32 a0_25
	word32 a5_23
	word32 a0_16 = CONVERT(Mem14[a0 + 8<i32>:byte], byte, word32)
	branch a0_16 == 0<32> l23041182
l23041182:
	word32 a2_21 = Mem14[a5:word32]
	a5_23 = a5 & 240<i32>
	branch (a5 & 240<i32>) == 224<i32> l23041198
l23041198:
	word32 a4_338
	a0_25 = netif_get_by_index(CONVERT(Mem14[a0 + 18<i32>:byte], byte, word32), out a4_338, out a5_23)
	branch a0_25 == 0<32> l23041190
l23041190:
	word32 a2_339
	a0_25 = ip4_route(a2_21, a5_23, out a2_339, out a3, out a4_247, out a5_23)
l2304116E:
	a0_25 = netif_get_by_index(a0_16, out a4_247, out a5_23)
l23041172:
	branch a0_25 != 0<32> l230411A2
l230411A2:
	word32 a4_51
	word32 s0_46 = Mem14[a5_23:word32]
	branch a5_23 == 0<32> l230411CA
l230411A6:
	branch (a5_23 & 240<i32>) == 224<i32> l230411CA
l230411CA:
	a4_51 = a0_25 + 4<i32>
l230411B2:
	a4_51 = s0_46
l230411B4:
	0<32> = dwArg38
l230411C6_thunk_raw_sendto_if_src:
	word32 a0_116
	word32 s0_119
	word32 s4_121
	word32 a3_126
	word32 a4_127
	word32 a5_128
	word32 s2_131
	word32 mstatus_142
	word32 ra_130 = raw_sendto_if_src(ra, a2, s0_46, a1, a2, a0_25, a4_51, s4, s5, s6, s7, mstatus, dwArg04, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_119, out a0_116, out a3_126, out a4_127, out a5_128, out s2_131, out s4_121, out mstatus_142)
	s0Out = s0_119
	a0Out = a0_116
	a3Out = a3_126
	a4Out = a4_127
	a5Out = a5_128
	s2Out = s2_131
	s4Out = s4_121
	mstatusOut = mstatus_142
	return ra_130
l23041174:
	0<32> = dwArg38
	s0Out = s0
	a0Out = 0xFFFFFFFC<32>
	a3Out = a3
	a4Out = a4_247
	a5Out = a5_23
	s2Out = a1
	s4Out = s4
	mstatusOut = mstatus
	return ra
raw_sendto_exit:


word32 raw_send(word32 ra, word32 a0, word32 a1, word32 a5, word32 s4, word32 s5, word32 s6, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg38, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_send
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a4 a5 mstatus s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
raw_send_entry:
l230411D4:
l230411D8_thunk_raw_sendto:
	word32 a0_14
	word32 a4_18
	word32 a5_19
	word32 mstatus_22
	word32 s0_24
	word32 a3_56
	word32 s2_57
	word32 s4_58
	raw_sendto(ra, a0, a1, a0 + 4<i32>, a5, s4, s5, s6, s7, mstatus, dwArg04, dwArg24, dwArg38, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_24, out a0_14, out a3_56, out a4_18, out a5_19, out s2_57, out s4_58, out mstatus_22)
	a0Out = a0_14
	a4Out = a4_18
	a5Out = a5_19
	mstatusOut = mstatus_22
	return s0_24
raw_send_exit:


word32 raw_remove(word32 a0, word32 a3, word32 a5, word32 mstatus, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_delconn
//      ping_free
// MayUse:  a0:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: sp
raw_remove_entry:
l230411DC:
	word32 a4_6 = Mem0[a5:word32]
	word32 a1_15 = a0
	branch a5 != a0 l230411F8
l230411F8:
	branch a5 == 0<32> l230411F0
l230411FA:
	word32 a5_12 = Mem0[a4_6 + 12<i32>:word32]
	branch a4_6 == 0<32> l230411F0
l230411FE:
	branch a4_6 != a0 l230411F6
l230411F6:
	a5 = a4_6
l23041202:
	a1_15 = Mem0[a4_6 + 12<i32>:word32]
	Mem16[a4_6 + 12<i32>:word32] = a5_12
l230411EC:
	Mem18[a5:word32] = a4_6
l230411F0:
l230411F2_thunk_memp_free:
	word32 a5_28
	word32 a0_29
	word32 a2_30
	word32 a3_31
	word32 a4_32
	memp_free(0<32>, a1_15, a3, a4_6, mstatus, out a0_29, out a2_30, out a3_31, out a4_32, out a5_28)
	a2Out = a2_30
	a3Out = a3_31
	a4Out = a4_32
	a5Out = a5_28
	return a0_29
raw_remove_exit:


word32 raw_new(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_new_ip_type
//      ping_api_init
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a2 a3 a4 a5 ra s1
// Trashed: a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: s0 sp
raw_new_entry:
l23041208:
	word32 a0_16
	word32 a2_75
	word32 a3_19
	word32 a4_20
	word32 a5_17
	word32 s1_21 = memp_malloc(a0, 0<32>, a3, a4, mstatus, out a0_16, out a2_75, out a3_19, out a4_20, out a5_17)
	branch a0_16 == 0<32> l23041240
l2304121C:
	word32 t1_76
	word32 a0_77
	word32 a1_78
	word32 a2_79
	word32 a5_80
	ra = memset(ra, a0_16, 0<32>, 0x1C<32>, out t1_76, out a0_77, out a1_78, out a2_79, out a3_19, out a4_20, out a5_80)
	Mem36[a0_16 + 11<i32>:byte] = 0xFF<8>
	Mem37[a0_16 + 19<i32>:byte] = 0xFF<8>
	a5_17 = Mem37[a4_20:word32]
	Mem40[a0_16 + 16<i32>:byte] = SLICE(s1_21, byte, 0)
	Mem41[a0_16:word32] = a5_17
	Mem42[a4_20 + 12<i32>:word32] = a0_16
l23041240:
	s1Out = s1_21
	a2Out = dwArg10
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_17
	return ra
raw_new_exit:


word32 raw_new_ip_type(word32 ra, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_newconn
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a0 a2 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: sp
raw_new_ip_type_entry:
l2304124C:
l2304124E_thunk_raw_new:
	word32 a2_9
	word32 a4_11
	word32 a5_12
	word32 s1_13
	word32 a3_23
	raw_new(ra, a1, a3, a4, mstatus, out s1_13, out a2_9, out a3_23, out a4_11, out a5_12)
	a0Out = a1
	a2Out = a2_9
	a4Out = a4_11
	a5Out = a5_12
	return s1_13
raw_new_ip_type_exit:


void raw_netif_ip_addr_changed(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_do_set_ipaddr
//      netif_remove
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
raw_netif_ip_addr_changed_entry:
l23041252:
	branch a0 == 0<32> l23041268
l23041254:
	branch a5 == 0<32> l23041268
l23041258:
	branch a1 == 0<32> l23041268
l2304125A:
	branch a5 == 0<32> l23041268
l2304125E:
	word32 a5_10 = Mem0[0x4200DF7C<32>:int32]
l23041266:
	branch a5_10 != 0<32> l2304126A
l2304126A:
	word32 a5_14 = Mem13[a3:word32]
	branch a3 != a4 l23041276
l23041272:
	Mem18[a4:word32] = a5_14
l23041276:
	a5_10 = Mem20[a5_14 + 12<i32>:word32]
l23041268:
	return
raw_netif_ip_addr_changed_exit:


void raw_get_pcbs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stats_netstat
// MayUse: 
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
raw_get_pcbs_entry:
l2304127A:
	return
raw_get_pcbs_exit:


void stats_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
stats_init_entry:
l23041284:
	return
stats_init_exit:


void stats_netstat(word32 ra, word32 s0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
stats_netstat_entry:
l23041286:
	word32 a3_26
	word32 t1_527
	word32 a0_528
	word32 a1_529
	word32 a2_530
	word32 a4_531
	word32 a5_532
	word32 ra_29 = memset(ra, fp + -160<i32>, 0<32>, 128<i32>, out t1_527, out a0_528, out a1_529, out a2_530, out a3_26, out a4_531, out a5_532)
	tcp_get_pcbs(fp + -164<i32>)
	udp_get_pcbs()
	raw_get_pcbs()
	word32 a0_533
	word32 a1_534
	word32 a2_535
	word32 a3_536
	word32 a4_537
	word32 a5_538
	word32 a7_539
	word32 s3_540
	word32 s5_541
	word32 s6_542
	word32 s7_543
	word32 s8_544
	word32 s9_545
	word32 s10_546
	word32 s11_547
	word32 t4_548
	word32 s4_166
	word32 s1_161
	word32 s2_164
	word32 ra_104 = printf(ra_29, 0x23086328<32>, a3_26, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_161, out a0_533, out a1_534, out a2_535, out a3_536, out a4_537, out a5_538, out a7_539, out s2_164, out s3_540, out s4_166, out s5_541, out s6_542, out s7_543, out s8_544, out s9_545, out s10_546, out s11_547, out t4_548)
	word32 s3_165 = 0<32>
	word32 s5_102 = 0x23086000<32>
l230412D0:
	branch s3_165 < s4_166 l230412FE
l230412FE:
l2304130A:
	branch s0 != 0<32> l23041310
l23041310:
	word32 a3_87
	word32 a4_628
	word32 a5_629
	ip4addr_ntoa_r(fp + -160<i32>, 128<i32>, out a3_87, out a4_628, out a5_629)
	word32 s6_121
	word32 s1_630
	word32 a0_631
	word32 a1_632
	word32 a2_633
	word32 a3_634
	word32 a4_635
	word32 a5_636
	word32 a7_637
	word32 s2_638
	word32 s3_639
	word32 s4_640
	word32 s5_641
	word32 s7_642
	word32 s8_643
	word32 s9_644
	word32 s10_645
	word32 s11_646
	word32 t4_647
	word32 ra_113 = printf(ra_104, s5_102 + 824<i32>, a3_87, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_630, out a0_631, out a1_632, out a2_633, out a3_634, out a4_635, out a5_636, out a7_637, out s2_638, out s3_639, out s4_640, out s5_641, out s6_121, out s7_642, out s8_643, out s9_644, out s10_645, out s11_646, out t4_647)
	word32 a3_648
	word32 a4_649
	word32 a5_650
	ip4addr_ntoa_r(fp + -160<i32>, 128<i32>, out a3_648, out a4_649, out a5_650)
	word32 a0_651
	word32 a1_652
	word32 a2_653
	word32 a3_654
	word32 a4_655
	word32 a5_656
	word32 a7_657
	word32 s6_658
	word32 s7_659
	word32 s8_660
	word32 s9_661
	word32 s10_662
	word32 s11_663
	word32 t4_664
	ra_104 = printf(ra_113, s6_121 + 836<i32>, tcp_debug_state_str(CONVERT(Mem99[s0 + 20<i32>:byte], byte, word32)), dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_161, out a0_651, out a1_652, out a2_653, out a3_654, out a4_655, out a5_656, out a7_657, out s2_164, out s3_165, out s4_166, out s5_102, out s6_658, out s7_659, out s8_660, out s9_661, out s10_662, out s11_663, out t4_664)
	s0 = Mem145[s0 + 12<i32>:word32]
l2304130C:
	s3_165 = s3_165 + 1<32>
l230412D4:
l230412DC:
	branch s1_161 != 0<32> l23041356
l23041356:
	word32 a3_185
	word32 a4_549
	word32 a5_550
	ip4addr_ntoa_r(fp + -160<i32>, 128<i32>, out a3_185, out a4_549, out a5_550)
	word32 s3_216
	word32 s1_551
	word32 a0_552
	word32 a1_553
	word32 a2_554
	word32 a3_555
	word32 a4_556
	word32 a5_557
	word32 a7_558
	word32 s2_559
	word32 s4_560
	word32 s5_561
	word32 s6_562
	word32 s7_563
	word32 s8_564
	word32 s9_565
	word32 s10_566
	word32 s11_567
	word32 t4_568
	word32 ra_211 = printf(ra_104, 0x23086350<32>, a3_185, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_551, out a0_552, out a1_553, out a2_554, out a3_555, out a4_556, out a5_557, out a7_558, out s2_559, out s3_216, out s4_560, out s5_561, out s6_562, out s7_563, out s8_564, out s9_565, out s10_566, out s11_567, out t4_568)
	word32 a3_229
	word32 a4_569
	word32 a5_570
	ip4addr_ntoa_r(fp + -160<i32>, 128<i32>, out a3_229, out a4_569, out a5_570)
	word32 s1_253
	word32 a0_571
	word32 a1_572
	word32 a2_573
	word32 a3_574
	word32 a4_575
	word32 a5_576
	word32 a7_577
	word32 s3_578
	word32 s4_579
	word32 s5_580
	word32 s6_581
	word32 s7_582
	word32 s8_583
	word32 s9_584
	word32 s10_585
	word32 s11_586
	word32 t4_587
	ra_104 = printf(ra_211, s3_216 + 860<i32>, a3_229, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_253, out a0_571, out a1_572, out a2_573, out a3_574, out a4_575, out a5_576, out a7_577, out s2_164, out s3_578, out s4_579, out s5_580, out s6_581, out s7_582, out s8_583, out s9_584, out s10_585, out s11_586, out t4_587)
	s1_161 = Mem73[s1_253 + 12<i32>:word32]
l230412DE:
l230412E6:
	branch s2_164 != 0<32> l23041390
l23041390:
	word32 a3_275
	word32 a4_588
	word32 a5_589
	ip4addr_ntoa_r(fp + -160<i32>, 128<i32>, out a3_275, out a4_588, out a5_589)
	word32 s1_301
	word32 a0_590
	word32 a1_591
	word32 a2_592
	word32 a3_593
	word32 a4_594
	word32 a5_595
	word32 a7_596
	word32 s2_597
	word32 s3_598
	word32 s4_599
	word32 s5_600
	word32 s6_601
	word32 s7_602
	word32 s8_603
	word32 s9_604
	word32 s10_605
	word32 s11_606
	word32 t4_607
	word32 ra_300 = printf(ra_104, 0x23086368<32>, a3_275, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_301, out a0_590, out a1_591, out a2_592, out a3_593, out a4_594, out a5_595, out a7_596, out s2_597, out s3_598, out s4_599, out s5_600, out s6_601, out s7_602, out s8_603, out s9_604, out s10_605, out s11_606, out t4_607)
	word32 a3_318
	word32 a4_608
	word32 a5_609
	ip4addr_ntoa_r(fp + -160<i32>, 128<i32>, out a3_318, out a4_608, out a5_609)
	word32 s2_345
	word32 s1_610
	word32 a0_611
	word32 a1_612
	word32 a2_613
	word32 a3_614
	word32 a4_615
	word32 a5_616
	word32 a7_617
	word32 s3_618
	word32 s4_619
	word32 s5_620
	word32 s6_621
	word32 s7_622
	word32 s8_623
	word32 s9_624
	word32 s10_625
	word32 s11_626
	word32 t4_627
	ra_104 = printf(ra_300, s1_301 + 880<i32>, a3_318, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_610, out a0_611, out a1_612, out a2_613, out a3_614, out a4_615, out a5_616, out a7_617, out s2_345, out s3_618, out s4_619, out s5_620, out s6_621, out s7_622, out s8_623, out s9_624, out s10_625, out s11_626, out t4_627)
	s2_164 = Mem73[s2_345 + 12<i32>:int32]
l230412EA:
	return
stats_netstat_exit:


word32 tcp_new_port(word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_bind
//      tcp_connect
// MayUse:  a2:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
tcp_new_port_entry:
l230413C8:
	word32 a5_11 = CONVERT(Mem0[0x4200D950<32>:uint16], uint16, word32)
	word32 a0_34 = 0x4000000<32>
l230413DE:
	a5_11 = CONVERT(SLICE(a5_11 + 1<32>, word16, 0), word16, word32)
	branch a5_11 != 0xFFFFFFF<32> l230413EA
l230413E8:
	a5_11 = 0xC000000<32>
l230413EA:
l230413F2:
	word32 a3_23 = Mem0[a2:word32]
	a2 = Mem0[a2:word32]
l230413F6:
	branch a2 != 0<32> l23041406
l23041406:
	branch CONVERT(Mem0[a2 + 22<i32>:uint16], uint16, word32) != a5_11 l2304141C
l2304141C:
	a2 = Mem0[a2 + 12<i32>:word32]
l2304140E:
	a0_34 = CONVERT(SLICE(a0_34 + 0xFFFFFFFF<32>, word16, 0), word16, word32)
	branch a0_34 != 0<32> l230413DE
l23041416:
	Mem37[0x4200D950<32>:word16] = SLICE(a5_11, word16, 0)
	a3Out = a3_23
	a4Out = <invalid>
	a5Out = <invalid>
	return a0_34
l230413F8:
	branch a3_23 != 0xDCF79BC4<32> l230413F2
l230413FE:
	Mem42[0x4200D950<32>:word16] = SLICE(a5_11, word16, 0)
	a3Out = a3_23 + 4<32>
	a4Out = <invalid>
	a5Out = <invalid>
	return a5_11
tcp_new_port_exit:


word32 tcp_close_shutdown_fin(word32 ra, word32 s1, word32 a0, word32 a2, word32 s7, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_new_ip_type
//      tcp_fasttmr
//      tcp_shutdown
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_close_shutdown_fin_entry:
l23041420:
	word32 a5_16
	word32 a5_14
	word32 a4_154 = CONVERT(Mem7[a0 + 20<i32>:byte], byte, word32)
	branch a4_154 == 4<32> l23041440
l23041432:
	branch a4_154 == 7<32> l23041460
l23041460:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg36 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg312 = <invalid>
	tcp_send_fin(ra, s1, a3, a5, mstatus, stackArg36, stackArg56, stackArg136, stackArg152, stackArg184, stackArg200, stackArg216, stackArg248, stackArg264, stackArg312)
	branch a0 != 0<32> l2304146C
l23041468:
	a5_14 = 9<32>
l23041438:
	a3 = 3<32>
	a5_16 = 0<32>
	branch a4_154 != 3<32> l23041456
l23041440:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg36 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg312 = <invalid>
	tcp_send_fin(ra, s1, a3, a5, mstatus, stackArg36, stackArg56, stackArg136, stackArg152, stackArg184, stackArg200, stackArg216, stackArg248, stackArg264, stackArg312)
	branch a0 != 0<32> l2304146C
l2304146C:
	a5_16 = a0
	a4_154 = 0xFFFFFFFF<32>
	branch a0 != 0xFFFFFFFF<32> l23041456
l23041472:
	Mem27[a0 + 26<i32>:word16] = SLICE(CONVERT(Mem7[a0 + 26<i32>:uint16], uint16, word32) | 8<i32>, word16, 0)
l23041448:
	a5_14 = 5<32>
l2304144A:
	Mem31[a0 + 20<i32>:byte] = SLICE(a5_14, byte, 0)
	word32 a5_289
	word32 a0_287
	word32 a2_288
	word32 s0_286
	ra = tcp_output(ra, s1, a0, a2, s7, mstatus, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgF8, dwArgFC, dwArg0108, out s0_286, out s1, out a0_287, out a2_288, out a3, out a4_154, out a5_289, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
l23041454:
	a5_16 = 0<32>
l23041456:
	s1Out = s1
	a0Out = a5_16
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_154
	a5Out = a5_16
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_close_shutdown_fin_exit:


word32 tcp_init(word32 ra, word32 a0, word32 a2, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a3 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
tcp_init_entry:
l23041480:
	word32 a0_8
	word32 a3_10
	word32 a1_63
	word32 a4_64
	word32 a5_65
	word32 s4_66
	bl_rand(a0, a2, out a0_8, out a1_63, out a3_10, out a4_64, out a5_65, out s4_66)
	Mem27[0x4200E950<32>:word16] = SLICE(CONVERT(SLICE(CONVERT(SLICE(a0_8, word14, 0), word14, word32) + 0xFC000000<32>, word16, 0), word16, word32), word16, 0)
l230414AA_thunk_printf:
	word32 a0_31
	word32 a3_36
	word32 s1_40
	word32 a1_67
	word32 a2_68
	word32 a4_69
	word32 a5_70
	word32 a7_71
	word32 s2_72
	word32 s3_73
	word32 s4_74
	word32 s5_75
	word32 s6_76
	word32 s7_77
	word32 s8_78
	word32 s9_79
	word32 s10_80
	word32 s11_81
	word32 t4_82
	word32 ra_39 = printf(ra, 0x23086400<32>, a3_10, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_40, out a0_31, out a1_67, out a2_68, out a3_36, out a4_69, out a5_70, out a7_71, out s2_72, out s3_73, out s4_74, out s5_75, out s6_76, out s7_77, out s8_78, out s9_79, out s10_80, out s11_81, out t4_82)
	s1Out = s1_40
	a0Out = a0_31
	a3Out = a3_36
	return ra_39
tcp_init_exit:


word32 tcp_free(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_listen_with_backlog_and_err
//      tcp_abort
//      tcp_shutdown
//      tcp_tmr
//      tcp_input_delayed_close
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: sp
tcp_free_entry:
l230414AE:
l230414B2_thunk_memp_free:
	word32 a5_9
	word32 a0_10
	word32 a2_11
	word32 a3_12
	word32 a4_13
	word32 s1_14 = memp_free(2<32>, a0, a3, a4, mstatus, out a0_10, out a2_11, out a3_12, out a4_13, out a5_9)
	a0Out = a0_10
	a1Out = a0
	a2Out = a2_11
	a3Out = a3_12
	a4Out = a4_13
	a5Out = a5_9
	return s1_14
tcp_free_exit:


word32 tcp_bind(word32 s1, word32 a0, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg24, word32 dwArg44, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_bind
//      lwip_netconn_do_bind
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s8 t1 t3 tp
// Preserved: sp
tcp_bind_entry:
l230414B6:
	branch a1 != 0<32> l230414C8
l230414C0:
	a1 = 0x2308DE8C<32>
l230414C8:
	word32 a0_128 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l230414F0
l230414CC:
	a4 = CONVERT(Mem7[a0 + 20<i32>:byte], byte, word32)
	a0_128 = 0xFFFFFFFA<32>
	branch a4 != 0<32> l230414F0
l230414D4:
	word32 a3_18 = CONVERT(Mem7[a0 + 9<i32>:byte], byte, word32)
	word32 a3_110 = a3_18 & 4<32>
	word32 a6_20 = CONVERT((a3_18 & 4<32>) <u 1<i32>, bool, word32)
	branch a2 != 0<32> l230414F8
l230414F8:
	word32 a0_26 = 0<32>
l23041502:
	a4 = Mem7[a5:word32]
	a5 = Mem7[a5:word32]
l23041506:
	branch a5 != 0<32> l23041530
l23041530:
	branch CONVERT(Mem7[a5 + 22<i32>:uint16], uint16, word32) != a2 l2304155A
l23041538:
	branch (a3_18 & 4<32>) == 0<32> l23041546
l2304153A:
	branch (CONVERT(Mem7[a5 + 9<i32>:byte], byte, word32) & 4<i32>) != 0<32> l2304155A
l23041546:
	word32 t1_40 = Mem7[a5:int32]
	branch t1_40 == 0<32> l2304155E
l2304154E:
	word32 a7_43 = Mem7[a1:int32]
	branch a7_43 == 0<32> l2304155E
l23041556:
	branch t1_40 == a7_43 l2304155E
l2304155E:
	a0_128 = 0xFFFFFFF8<32>
l2304155A:
	a5 = Mem7[a5 + 12<i32>:word32]
l23041508:
	a0_26 = a0_26 + 1<32>
	branch a6_20 + 3<32> != a0_26 l23041502
l230414E2:
	tcp_new_port(a2, out a3_110, out a4, out a5)
	a2 = dwArg44
	a0_128 = 0xFFFFFFFE<32>
	branch dwArg44 != 0<32> l23041510
l23041510:
	branch a5 == 0<32> l23041516
l23041514:
	Mem83[a5:word32] = a0
l23041516:
	word32 a4_86 = Mem85[0x4201FEB0<32>:int32]
	Mem90[a0 + 22<i32>:word16] = SLICE(a2, word16, 0)
	Mem91[0x42020EB0<32>:word32] = a0
	Mem92[a4_86 + 12<i32>:word32] = a0
	word32 a0_233
	word32 a3_235
	word32 a2_234
	word32 s1_232
	word32 s8_236
	tcp_timer_needed(s1, a3_110, mstatus, dwArg24, out s1_232, out a0_233, out a2_234, out a3_235, out a4, out s8_236)
	a0_128 = 0<32>
l230414F0:
	a4Out = a4
	return a0_128
tcp_bind_exit:


word32 tcp_bind_netif(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt_callback
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
tcp_bind_netif_entry:
l23041562:
	word32 a5_3 = 0<32>
	branch a1 == 0<32> l23041570
l23041566:
	a5_3 = CONVERT(Mem0[a1 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
l23041570:
	Mem12[a0 + 8<i32>:byte] = SLICE(a5_3, byte, 0)
	return a5_3
tcp_bind_netif_exit:


word32 tcp_listen_with_backlog_and_err(word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg38, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_listen
//      lwip_netconn_do_listen
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0034:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5 s1 s2 tp
// Preserved: a1 s0 s8 sp t3
tcp_listen_with_backlog_and_err_entry:
l23041576:
	word32 s1_132
	word32 a5_136
	branch a0 == 0<32> l23041662
l23041662:
	s1_132 = 0<32>
	a5_136 = 0xFFFFFFF0<32>
l23041584:
	word32 s0_161 = a0
	branch CONVERT(Mem11[a0 + 20<i32>:byte], byte, word32) != 0<32> l23041668
l23041668:
	a5_136 = 0xFFFFFFF1<32>
l2304158C:
	branch (CONVERT(Mem11[a0 + 9<i32>:byte], byte, word32) & 4<32>) == 0<32> l2304159E
l23041594:
	word32 a5_23 = Mem11[0x4201FEA8<32>:int32]
l2304159C:
	branch a5_23 != 0<32> l2304163A
l2304163A:
	a3 = CONVERT(Mem11[a5_23 + 22<i32>:uint16], uint16, word32)
	a4 = CONVERT(Mem11[s0_161 + 22<i32>:uint16], uint16, word32)
	branch a3 != a4 l2304164E
l23041646:
	a5_23 = Mem11[a3:word32]
	s0_161 = Mem11[a4:word32]
	branch a3 == a4 l2304166E
l2304166E:
	a5_136 = 0xFFFFFFF8<32>
l2304166A:
	s1_132 = 0<32>
l2304164E:
	a5_23 = Mem11[a5_23 + 12<i32>:word32]
l2304159E:
	word32 a5_246
	word32 a0_52
	word32 a2_245
	memp_malloc(s1, 3<32>, a3, a4, mstatus, out a0_52, out a2_245, out a3, out a4, out a5_246)
	s1_132 = a0_52
	a5_136 = 0xFFFFFFFF<32>
	branch a0_52 == 0<32> l23041624
l230415AA:
	word32 s0_62 = Mem11[0xF<32>:word32]
	Mem63[0xF<32>:word32] = a0_52
	Mem65[a0_52 + 22<i32>:word16] = SLICE(CONVERT(Mem63[s0_62 + 22<i32>:uint16], uint16, word32), word16, 0)
	Mem67[a0_52 + 20<i32>:byte] = 1<8>
	Mem69[a0_52 + 21<i32>:byte] = SLICE(CONVERT(Mem67[s0_62 + 21<i32>:byte], byte, word32), byte, 0)
	word32 a5_70 = CONVERT(Mem69[s0_62 + 9<i32>:byte], byte, word32)
	Mem71[a0_52 + 8<i32>:byte] = 0<8>
	Mem72[a0_52 + 9<i32>:byte] = SLICE(a5_70, byte, 0)
	Mem74[a0_52 + 11<i32>:byte] = SLICE(CONVERT(Mem72[s0_62 + 11<i32>:byte], byte, word32), byte, 0)
	word32 a5_75 = CONVERT(Mem74[s0_62 + 10<i32>:byte], byte, word32)
	Mem76[a0_52 + 10<i32>:byte] = SLICE(a5_75, byte, 0)
	word32 s0_77 = Mem76[a5_75:word32]
	Mem78[a5_75:word32] = a0_52
	branch CONVERT(Mem78[s0_77 + 22<i32>:uint16], uint16, word32) == 0<32> l23041600
l230415EA:
	a4 = 0x42020000<32>
	word32 a5_81 = Mem78[0x4201FEB0<32>:int32]
	branch a5_81 != s0_77 l23041654
l23041654:
	branch a5_81 == 0<32> l230415FC
l23041656:
	word32 a5_85 = Mem78[0x4202000C<32>:word32]
	branch s0_77 != 0x42020000<32> l23041652
l23041652:
	a5_81 = 0x42020000<32>
l2304165C:
	s0_77 = Mem78[0x4202000C<32>:word32]
	Mem89[0x4202000C<32>:word32] = a5_85
l230415F6:
	s0_77 = Mem78[a5_81 + 12<i32>:word32]
	Mem91[0x42020EB0<32>:word32] = a5_81
l230415FC:
	Mem93[s0_77 + 12<i32>:word32] = 0<32>
l23041600:
	word32 a5_251
	word32 a1_248
	word32 a4_250
	word32 a0_247
	word32 a3_107
	word32 a2_249
	word32 s1_110 = tcp_free(s0_77, a3, a4, mstatus, out a0_247, out a1_248, out a2_249, out a3_107, out a4_250, out a5_251)
	Mem114[0x23041BDE<32>:word32] = s1_110
	word32 a4_116 = Mem114[0x4201FEA8<32>:int32]
	Mem117[0x42020EA8<32>:word32] = s1_110
	Mem118[a4_116 + 12<i32>:word32] = s1_110
	word32 a0_252
	word32 a2_253
	word32 s8_254
	tcp_timer_needed(s1_110, a3_107, mstatus, dwArg34, out s1_132, out a0_252, out a2_253, out a3, out a4, out s8_254)
	a5_136 = 0<32>
l23041624:
	branch a2 == 0<32> l2304162C
l23041628:
	Mem147[a2:byte] = SLICE(a5_136, byte, 0)
l2304162C:
	0<32> = dwArg38
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_136
	return s1_132
tcp_listen_with_backlog_and_err_exit:


word32 tcp_update_rcv_ann_wnd(word32 a0, word32 a2, word32 a3, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_recved
//      tcp_receive
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5 a6
// Preserved: sp
tcp_update_rcv_ann_wnd_entry:
l23041672:
	word32 a1_6 = CONVERT(Mem0[a0 + 40<i32>:uint16], uint16, word32)
	word32 a4_11 = CONVERT(Mem0[a0 + 50<i32>:uint16], uint16, word32)
	word32 a0_14 = a1_6 - a3 + a2
	branch a4_11 <=u 1032<i32> l23041692
l2304168E:
	a4_11 = 1032<i32>
l23041692:
	word32 a4_20 = a0_14 - CONVERT(SLICE(a4_11, word16, 0), word16, word32)
	branch a4_20 < 0<32> l230416A4
l230416A4:
	word32 a4_23 = a2 - a3
	branch a4_23 <= 0<32> l230416B4
l230416B4:
	a3 = a3 - a2
	Mem26[a0 + 42<i32>:word16] = SLICE(a3, word16, 0)
l230416AC:
	Mem27[a0 + 42<i32>:word16] = 0<16>
l230416B0:
	a1Out = <invalid>
	a3Out = a3
	a4Out = a4_23
	a5Out = <invalid>
	return 0<32>
l2304169E:
	Mem30[a0 + 42<i32>:word16] = SLICE(a1_6, word16, 0)
	a1Out = <invalid>
	a3Out = a3
	a4Out = a4_20
	a5Out = <invalid>
	return a0_14
tcp_update_rcv_ann_wnd_exit:


word32 tcp_recved(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_recved
//      tcp_recv_null
//      recv_tcp
//      lwip_netconn_do_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s10 s11 s3 s4 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_recved_entry:
l230416BC:
	branch a0 == 0<32> l23041710
l23041710:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l230416BE:
	word32 a4_9 = CONVERT(Mem8[a0 + 40<i32>:uint16], uint16, word32)
	word32 a1_15 = CONVERT(SLICE(a1 + a4_9, word16, 0), word16, word32)
	branch a1_15 >u 0xFFF810<32> l230416DC
l230416D8:
	branch a1_15 >=u a4_9 l230416DE
l230416DC:
	a1_15 = 0xFFF810<32>
l230416DE:
	Mem21[a0 + 40<i32>:word16] = SLICE(a1_15, word16, 0)
	word32 a3_31
	word32 a4_32
	word32 a1_235
	word32 a5_236
	word32 a0_29 = tcp_update_rcv_ann_wnd(a0, a2, a3, out a1_235, out a3_31, out a4_32, out a5_236)
	branch a0_29 <=u 1031<i32> l23041708
l23041708:
	s0Out = s0
	s1Out = s1
	a0Out = a0_29
	a2Out = dwArg10
	a3Out = a3_31
	a4Out = a4_32
	a5Out = 1031<i32>
	s3Out = s3
	s4Out = s4
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l230416F0:
	Mem44[a0 + 26<i32>:word16] = SLICE(CONVERT(Mem21[a0 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
l23041704_thunk_tcp_output:
	word32 a0_59
	word32 a5_60
	word32 a2_61
	word32 a3_62
	word32 a4_63
	word32 s0_66
	word32 s1_67
	word32 s4_69
	word32 s10_76
	word32 s11_77
	word32 s3_78
	word32 s7_79
	word32 s9_80
	word32 mstatus_87
	word32 s6_239
	word32 s8_240
	word32 s2_237
	word32 s5_238
	word32 ra_65 = tcp_output(ra, s1, a0, dwArg10, s7, mstatus, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg010C, dwArg0118, out s0_66, out s1_67, out a0_59, out a2_61, out a3_62, out a4_63, out a5_60, out s2_237, out s3_78, out s4_69, out s5_238, out s6_239, out s7_79, out s8_240, out s9_80, out s10_76, out s11_77, out mstatus_87)
	s0Out = s0_66
	s1Out = s1_67
	a0Out = a0_59
	a2Out = a2_61
	a3Out = a3_62
	a4Out = a4_63
	a5Out = a5_60
	s3Out = s3_78
	s4Out = s4_69
	s7Out = s7_79
	s9Out = s9_80
	s10Out = s10_76
	s11Out = s11_77
	mstatusOut = mstatus_87
	return ra_65
tcp_recved_exit:


word32 tcp_seg_free(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0108, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_segs_free
//      tcp_oos_insert_segment
//      tcp_free_acked_segments.isra.3
//      tcp_receive
//      tcp_input
//      tcp_create_segment
//      tcp_output
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: a6 a7 mstatus ra s0 s2 s3 s4 s5 s6 s8 sp t0 t1 t3 t4 t5 t6
tcp_seg_free_entry:
l23041712:
	branch a0 == 0<32> l23041730
l23041730:
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l23041714:
	word32 a1_21 = a0
	word32 a0_6 = Mem0[a0 + 4<i32>:word32]
	branch a0_6 == 0<32> l23041732
l23041732:
l2304171A:
	word32 s0_130
	word32 s1_131
	word32 a0_132
	word32 a2_133
	word32 a5_134
	word32 a7_135
	word32 s2_136
	word32 s3_137
	word32 s4_138
	word32 s5_139
	word32 s6_140
	word32 s8_141
	pbuf_free(ra, a0_6, a3, a4, s4, mstatus, dwArg0108, out s0_130, out s1_131, out a0_132, out a1_21, out a2_133, out a3, out a4, out a5_134, out a7_135, out s2_136, out s3_137, out s4_138, out s5_139, out s6_140, out s8_141, out mstatus)
l2304172C:
l2304172C_thunk_memp_free:
	word32 a5_50
	word32 a0_51
	word32 a2_52
	word32 a3_53
	word32 a4_54
	word32 s1_55 = memp_free(4<32>, a1_21, a3, a4, mstatus, out a0_51, out a2_52, out a3_53, out a4_54, out a5_50)
	a0Out = a0_51
	a1Out = a1_21
	a2Out = a2_52
	a3Out = a3_53
	a4Out = a4_54
	a5Out = a5_50
	return s1_55
tcp_seg_free_exit:


word32 tcp_segs_free(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArgF8, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_free_ooseq
//      tcp_pcb_purge
//      tcp_abort
//      tcp_oos_insert_segment
//      tcp_write
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
tcp_segs_free_entry:
l23041736:
	branch a0 != 0<32> l2304173A
l2304173A:
l23041740:
	word32 a1_19
	word32 a5_23
	word32 a0_61
	word32 a2_62
	word32 s1_24 = tcp_seg_free(ra, Mem8[s0:word32], a3, a4, s4, mstatus, dwArgF8, out a0_61, out a1_19, out a2_62, out a3, out a4, out a5_23)
	branch s0 != 0<32> l23041740
l2304174A:
	a0Out = s0
	a1Out = a1_19
	a3Out = a3
	a4Out = a4
	a5Out = a5_23
	return s1_24
l23041738:
	a0Out = a0
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
tcp_segs_free_exit:


void tcp_setprio(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_setprio
// MayUse:  a0:[0..31] a1:[0..7]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_setprio_entry:
l23041752:
	branch a0 == 0<32> l23041758
l23041754:
	Mem5[a0 + 21<i32>:byte] = SLICE(a1, byte, 0)
l23041758:
	return
tcp_setprio_exit:


word32 tcp_seg_copy(word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_seg_copy_entry:
l2304175A:
	word32 a0_15
	word32 a2_86
	word32 a3_18
	word32 a4_19
	word32 a5_16
	word32 s1_20 = memp_malloc(s1, 4<32>, a3, a4, mstatus, out a0_15, out a2_86, out a3_18, out a4_19, out a5_16)
	word32 s0_22 = a0_15
	branch a0_15 == 0<32> l2304177A
l2304176C:
	word32 a4_26
	word32 a3_31
	word32 a1_87
	word32 a2_88
	word32 a5_89
	word32 a6_90
	word32 a7_91
	memcpy(a0_15, a1, 0x14<32>, out a1_87, out a2_88, out a3_31, out a4_26, out a5_89, out a6_90, out a7_91)
	s0_22 = Mem10[a0_15 + 4<i32>:word32]
	pbuf_ref(a0_15, a3_31, a4_26, mstatus, out a3_18, out a4_19, out a5_16)
l2304177A:
	s1Out = s1_20
	a0Out = s0_22
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_16
	return s0_22
tcp_seg_copy_exit:


void tcp_arg(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_setup_callbacks
//      altcp_tcp_close
//      setup_tcp
//      accept_function
//      lwip_netconn_do_listen
//      lwip_netconn_do_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_arg_entry:
l23041784:
	branch a0 == 0<32> l23041788
l23041786:
	Mem5[a1 + 16<i32>:word32] = a0
l23041788:
	return
tcp_arg_exit:


void tcp_recv(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_setup_callbacks
//      altcp_tcp_close
//      setup_tcp
//      accept_function
//      lwip_netconn_do_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_recv_entry:
l2304178A:
	branch a0 == 0<32> l23041790
l2304178C:
	Mem5[a0 + 132<i32>:word32] = a1
l23041790:
	return
tcp_recv_exit:


void tcp_sent(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_setup_callbacks
//      altcp_tcp_close
//      setup_tcp
//      accept_function
//      lwip_netconn_do_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_sent_entry:
l23041792:
	branch a0 == 0<32> l23041798
l23041794:
	Mem5[a0 + 128<i32>:word32] = a1
l23041798:
	return
tcp_sent_exit:


void tcp_err(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_setup_callbacks
//      altcp_tcp_close
//      setup_tcp
//      accept_function
//      lwip_netconn_do_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_err_entry:
l2304179A:
	branch a0 == 0<32> l230417A0
l2304179C:
	Mem5[a0 + 144<i32>:word32] = a1
l230417A0:
	return
tcp_err_exit:


word32 tcp_accept(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_listen
//      lwip_netconn_do_listen
//      lwip_netconn_do_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a4
// Trashed: a4 a5
// Preserved: sp
tcp_accept_entry:
l230417A2:
	branch a0 == 0<32> l230417B0
l230417A4:
	a4 = CONVERT(Mem0[a0 + 20<i32>:byte], byte, word32)
	branch a4 != 1<32> l230417B0
l230417AE:
	Mem8[a1 + 24<i32>:word32] = a0
l230417B0:
	return a4
tcp_accept_exit:


void tcp_poll(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_close
//      altcp_tcp_set_poll
//      setup_tcp
//      accept_function
//      lwip_netconn_do_close
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..7]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_poll_entry:
l230417B2:
	branch a0 == 0<32> l230417BC
l230417B4:
	Mem5[a0 + 140<i32>:word32] = a1
	Mem7[a0 + 29<i32>:byte] = SLICE(a2, byte, 0)
l230417BC:
	return
tcp_poll_exit:


word32 tcp_next_iss(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_connect
//      tcp_input
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
tcp_next_iss_entry:
l230417BE:
	word32 a0_9 = a0 + Mem0[0x4201FEA4<32>:int32]
	Mem10[a0_9:word32] = Mem0[a0:word32]
	return a0_9
tcp_next_iss_exit:


word32 tcp_eff_send_mss_netif(word32 a0, word32 a1, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_connect
//      tcp_input
//      tcp_output
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
tcp_eff_send_mss_netif_entry:
l230417D6:
	branch a1 == 0<32> l230417FE
l230417D8:
	word32 a5_5 = CONVERT(Mem0[a1 + 56<i32>:uint16], uint16, word32)
	branch a5_5 == 0<32> l230417FE
l230417DE:
	a3 = 40<i32>
	word32 a4_11 = 0<32>
	branch a5_5 <=u 40<i32> l230417F8
l230417E8:
	word32 a5_9 = a5_5 + -40<i32> << 16<i32>
	a4_11 = a5_9 >>u 16<i32>
	branch a0 >=u a5_9 >>u 16<i32> l230417F8
l230417F6:
	a4_11 = a0
l230417F8:
	a0 = CONVERT(SLICE(a4_11, word16, 0), word16, word32)
l230417FE:
	a3Out = a3
	return a0
tcp_eff_send_mss_netif_exit:


word32 tcp_connect(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg38, word32 dwArg48, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_connect
//      lwip_netconn_do_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a4 a5 mstatus s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_connect_entry:
l23041800:
	word32 s1_104 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l2304185C
l23041816:
	branch a1 == 0<32> l2304185C
l23041818:
	a5 = CONVERT(Mem19[a0 + 20<i32>:byte], byte, word32)
	s1_104 = 0xFFFFFFF6<32>
	branch a5 != 0<32> l2304185C
l23041820:
	word32 a3_310
	word32 a2_40
	word32 a0_36
	word32 a1_25 = Mem19[a5:word32]
	Mem29[a5 + 4<i32>:word32] = a0
	Mem31[a0 + 24<i32>:word16] = SLICE(a2, word16, 0)
	word32 a0_32 = CONVERT(Mem31[a0 + 8<i32>:byte], byte, word32)
	branch a0_32 == 0<32> l23041872
l23041872:
	a0_36 = ip4_route(a2, a5, out a2_40, out a3_310, out a4, out a5)
l23041836:
	a0_36 = netif_get_by_index(a0_32, out a4, out a5)
	a2_40 = a2
	a3_310 = a3
l2304183A:
	s1_104 = 0xFFFFFFFC<32>
	branch a0_36 == 0<32> l2304185C
l23041840:
	word32 s0_105 = Mem31[a5:word32]
	branch a5 != 0<32> l23041848
l23041844:
	Mem51[a5:word32] = s0_105
l23041848:
	word32 s5_54 = CONVERT(Mem53[s0_105 + 22<i32>:uint16], uint16, word32)
	branch s5_54 != 0<32> l2304187C
l2304187C:
	branch (CONVERT(Mem53[s0_105 + 9<i32>:byte], byte, word32) & 4<32>) == 0<32> l230418C2
l23041884:
	a5 = Mem53[0x4201FEAC<32>:int32]
l2304188C:
	branch a5 == 0<32> l230418B8
l230418B8:
	a5 = Mem53[0x4201FEA0<32>:int32]
l230418C0:
	branch a5 != 0<32> l2304195E
l2304195E:
	branch CONVERT(Mem53[a5 + 22<i32>:uint16], uint16, word32) != s5_54 l23041980
l23041966:
	word32 a4_67 = CONVERT(Mem53[a5 + 24<i32>:uint16], uint16, word32)
	branch a4_67 != a2 l23041980
l2304196E:
	a5 = Mem53[a3_310:word32]
	s0_105 = Mem53[a4_67:word32]
	branch a3_310 != a4_67 l23041980
l23041976:
	a5 = Mem53[a3_310 + 4<i32>:word32]
	a4 = Mem53[a1_25:int32]
	branch a3_310 == a4 l230418B4
l23041980:
	a5 = Mem53[a5 + 12<i32>:word32]
l2304188E:
	branch CONVERT(Mem53[a5 + 22<i32>:uint16], uint16, word32) == s5_54 l2304189A
l2304189A:
	word32 a4_80 = CONVERT(Mem53[a5 + 24<i32>:uint16], uint16, word32)
	branch a4_80 != a2 l23041896
l230418A2:
	a5 = Mem53[a3_310:word32]
	s0_105 = Mem53[a4_80:word32]
	branch a3_310 != a4_80 l23041896
l230418AA:
	a5 = Mem53[a3_310 + 4<i32>:word32]
	a4 = Mem53[a1_25:int32]
	branch a3_310 != a4 l23041896
l230418B4:
	s1_104 = 0xFFFFFFF8<32>
l23041896:
	a5 = Mem53[a5 + 12<i32>:word32]
l23041850:
	word32 a3_664
	word32 a0_94 = tcp_new_port(a2_40, out a3_664, out a4, out a5)
	Mem103[s0_105 + 22<i32>:word16] = SLICE(a0_94, word16, 0)
	s1_104 = 0xFFFFFFFE<32>
	branch a0_94 != 0<32> l230418C2
l230418C2:
	word32 a0_111 = tcp_next_iss(s0_105)
	Mem116[0x8100838<32>:word32] = s0_105
	Mem119[a0_111 + 80<i32>:word32] = s0_105
	Mem120[s0_105 + 96<i32>:word16] = 0xF810<16>
	Mem123[a0_111 + 0x43<32>:word32] = s0_105
	Mem124[a0_111 + 0x57<32>:word32] = s0_105
	Mem125[a0_111 + 0x5B<32>:word32] = s0_105
	Mem126[s0_105 + 50<i32>:word16] = 0x218<16>
	Mem135[s0_105 + 36<i32>:word32] = 0<32>
	Mem136[s0_105 + 44<i32>:word32] = 0<32>
	word32 a3_140
	Mem143[s0_105 + 50<i32>:word16] = SLICE(tcp_eff_send_mss_netif(536<i32>, a0_36, out a3_140), word16, 0)
	Mem144[s0_105 + 72<i32>:word16] = 1<16>
	Mem152[s0_105 + 136<i32>:word32] = a3
	word32 a0_177
	word32 a3_180
	word32 s5_192
	word32 a2_666
	word32 s1_665
	word32 s3_667
	word32 s4_668
	word32 s0_187
	word32 ra_186 = tcp_enqueue_flags(ra, s0_105, 2<32>, a3_140, mstatus, dwArg04, s1, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_187, out s1_665, out a0_177, out a2_666, out a3_180, out a4, out a5, out s3_667, out s4_668, out s5_192, out mstatus)
	s1_104 = a0_177
	branch a0_177 != 0<32> l2304185C
l2304191E:
	Mem204[s0_187 + 20<i32>:byte] = 2<8>
	branch s5_192 == 0<32> l2304193A
l23041928:
	word32 a5_206 = Mem204[0x4201FEB0<32>:int32]
	branch a5_206 != s0_187 l23041986
l23041986:
	branch a5_206 == 0<32> l2304193A
l23041988:
	word32 a5_210 = Mem204[0x4202000C<32>:word32]
	branch s0_187 != 0x42020000<32> l23041984
l23041984:
	a5_206 = 0x42020000<32>
l2304198E:
	s0_187 = Mem204[0x4202000C<32>:word32]
	Mem214[0x4202000C<32>:word32] = a5_210
l23041934:
	s0_187 = Mem204[a5_206 + 12<i32>:word32]
	Mem216[0x42020EB0<32>:word32] = a5_206
l2304193A:
	word32 a4_219 = Mem218[0x4201FEAC<32>:int32]
	Mem221[0x42020EAC<32>:word32] = s0_187
	Mem222[a4_219 + 12<i32>:word32] = s0_187
	word32 a2_235
	word32 s1_238
	word32 a3_670
	word32 a0_669
	word32 a4_671
	word32 s8_672
	word32 s0_237 = tcp_timer_needed(a0_177, a3_180, mstatus, dwArg24, out s1_238, out a0_669, out a2_235, out a3_670, out a4_671, out s8_672)
	Mem245[0x42020EB4<32>:byte] = 1<8>
	word32 s3_678
	word32 a0_674
	word32 a2_675
	word32 s4_679
	word32 a3_676
	word32 s2_677
	word32 s0_673
	word32 s11_686
	word32 s6_681
	word32 s7_682
	word32 s5_680
	word32 s10_685
	word32 s9_684
	word32 s8_683
	tcp_output(ra_186, s1_238, s0_237, a2_235, s7, mstatus, dwArg38, dwArg48, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s0_673, out s1_104, out a0_674, out a2_675, out a3_676, out a4, out a5, out s2_677, out s3_678, out s4_679, out s5_680, out s6_681, out s7_682, out s8_683, out s9_684, out s10_685, out s11_686, out mstatus)
l2304185C:
	0<32> = dwArgA8
	s1Out = s1_104
	a0Out = s1_104
	a4Out = a4
	a5Out = a5
	mstatusOut = mstatus
	return s1
tcp_connect_exit:


word32 tcp_debug_state_str(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stats_netstat
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
tcp_debug_state_str_entry:
l23041994:
	return a0 << 2<i32>
tcp_debug_state_str_exit:


void tcp_tcp_get_tcp_addrinfo(word32 a0, word32 a1, word32 a2, word32 a3, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_get_tcp_addrinfo
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
tcp_tcp_get_tcp_addrinfo_entry:
l230419A4:
	branch a0 == 0<32> l230419CC
l230419CC:
	return
l230419A6:
	word32 a5_15
	branch a1 == 0<32> l230419BE
l230419BE:
	branch a2 == 0<32> l230419C4
l230419C0:
	a0 = Mem0[a5 + 4<i32>:word32]
	Mem10[a5:word32] = a2
l230419C4:
	branch a3 == 0<32> l230419B0
l230419C6:
	a5_15 = CONVERT(Mem14[a0 + 24<i32>:uint16], uint16, word32)
l230419A8:
	branch a2 == 0<32> l230419AE
l230419AA:
	a0 = Mem0[a5:word32]
	Mem17[a5:word32] = a2
l230419AE:
	branch a3 != 0<32> l230419B4
l230419B4:
	a5_15 = CONVERT(Mem20[a0 + 22<i32>:uint16], uint16, word32)
l230419B8:
	Mem24[a3:word16] = SLICE(a5_15, word16, 0)
l230419B0:
	return
tcp_tcp_get_tcp_addrinfo_exit:


word32 tcp_free_ooseq(word32 ra, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArgE8, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_free_ooseq_callback
//      tcp_pcb_purge
//      tcp_tmr
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
tcp_free_ooseq_entry:
l230419D0:
	word32 a0_5 = Mem0[a5 + 116<i32>:word32]
	branch a5 == 0<32> l230419EE
l230419EE:
	a0Out = a0_5
	a2Out = a2
	a3Out = a3
	a4Out = a4
	return s1
l230419D4:
	word32 a0_17
	word32 a3_20
	word32 a4_21
	word32 a1_51
	word32 a5_52
	word32 s1_23 = tcp_segs_free(ra, a0_5, a5, a3, a4, s4, mstatus, dwArgE8, out a0_17, out a1_51, out a3_20, out a4_21, out a5_52)
	Mem25[a0_5 + 116<i32>:word32] = 0<32>
	a0Out = a0_17
	a2Out = dwArg10
	a3Out = a3_20
	a4Out = a4_21
	return s1_23
tcp_free_ooseq_exit:


word32 tcp_pcb_purge(word32 ra, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_pcb_remove
//      tcp_shutdown
//      tcp_tmr
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: a6 a7 mstatus ra s0 s2 s3 s4 s5 s6 s8 sp t0 t1 t3 t4 t5 t6
tcp_pcb_purge_entry:
l230419F0:
	branch a0 == 0<32> l23041A46
l230419F2:
	a5 = CONVERT(Mem0[a0 + 20<i32>:byte], byte, word32)
	a4 = 1<32>
	branch a5 <=u 1<32> l23041A46
l230419FC:
	a4 = 0xA<32>
	branch a5 == 0xA<32> l23041A46
l23041A46:
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l23041A02:
	word32 a0_14 = Mem12[a0 + 120<i32>:word32]
	branch a0_14 == 0<32> l23041A16
l23041A0E:
	word32 s0_20
	word32 s8_221
	word32 s6_220
	word32 s5_219
	word32 s3_218
	word32 s2_217
	word32 a7_216
	word32 a2_215
	word32 a1_214
	word32 s1_213
	ra = pbuf_free(ra, a0_14, a3, 0xA<32>, s4, mstatus, dwArg0118, out s0_20, out s1_213, out a0_14, out a1_214, out a2_215, out a3, out a4, out a5, out a7_216, out s2_217, out s3_218, out s4, out s5_219, out s6_220, out s8_221, out mstatus)
	Mem43[s0_20 + 120<i32>:word32] = 0<32>
l23041A16:
	branch a5 == 0<32> l23041A20
l23041A1A:
	word32 a2_224
	tcp_free_ooseq(ra, a3, a4, a5, s4, mstatus, dwArgD8, out a0_14, out a2_224, out a3, out a4)
l23041A20:
	word32 s0_65 = Mem45[a0_14 + 108<i32>:word32]
	Mem67[s0_65 + 48<i32>:word16] = 0xFFFF<16>
	word32 a0_74
	word32 a3_77
	word32 a4_78
	word32 a5_223
	word32 a1_222
	tcp_segs_free(ra, s0_65, a0_14, a3, a4, s4, mstatus, dwArgE8, out a0_74, out a1_222, out a3_77, out a4_78, out a5_223)
	word32 s0_82 = Mem67[a0_74 + 112<i32>:word32]
	word32 a0_83
	word32 a1_84
	word32 a3_86
	word32 a4_87
	word32 a5_88
	word32 s1_89 = tcp_segs_free(ra, s0_82, a0_74, a3_77, a4_78, s4, mstatus, dwArgE8, out a0_83, out a1_84, out a3_86, out a4_87, out a5_88)
	Mem91[s0_82 + 108<i32>:word32] = 0<32>
	Mem92[s0_82 + 112<i32>:word32] = 0<32>
	Mem93[s0_82 + 104<i32>:word16] = 0<16>
	a0Out = a0_83
	a1Out = a1_84
	a2Out = dwArg10
	a3Out = a3_86
	a4Out = a4_87
	a5Out = a5_88
	return s1_89
tcp_pcb_purge_exit:


word32 tcp_pcb_remove(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 s4, word32 s7, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_abort
//      tcp_shutdown
//      tcp_input_delayed_close
//      tcp_input
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_pcb_remove_entry:
l23041A48:
	word32 a0_9 = Mem7[a5:word32]
	word32 s0_11 = a1
	branch a5 != a1 l23041A9E
l23041A9E:
	branch a5 == 0<32> l23041A5A
l23041AA0:
	word32 a5_15 = Mem7[a4 + 12<i32>:word32]
	branch a4 != a1 l23041A9C
l23041A9C:
	a5 = a4
l23041AA6:
	s0_11 = Mem7[a4 + 12<i32>:word32]
	Mem19[a4 + 12<i32>:word32] = a5_15
l23041A56:
	Mem21[a5:word32] = a0_9
l23041A5A:
	Mem23[s0_11 + 12<i32>:word32] = 0<32>
	word32 a2_42
	word32 a4_238
	word32 a5_239
	word32 a1_237
	word32 a0_145
	word32 a3_147
	word32 s1_160 = tcp_pcb_purge(ra, s0_11, a3, s4, mstatus, dwArgC8, dwArgD8, dwArg0108, out a0_145, out a1_237, out a2_42, out a3_147, out a4_238, out a5_239)
	word32 a5_46 = CONVERT(Mem23[s0_11 + 20<i32>:byte], byte, word32)
	word32 a4_148 = 0xA<32>
	branch a5_46 == 0xA<32> l23041A8C
l23041A6E:
	a4_148 = 1<32>
	branch a5_46 == 1<32> l23041A8C
l23041A74:
	word32 a5_49 = CONVERT(Mem23[s0_11 + 26<i32>:uint16], uint16, word32)
	a4_148 = a5_49 & 1<i32>
	branch (a5_49 & 1<i32>) == 0<32> l23041A8C
l23041A7E:
	Mem52[s0_11 + 26<i32>:word16] = SLICE(a5_49 | 2<i32>, word16, 0)
	word32 a5_236
	word32 a2_235
	ra = tcp_output(ra, s1_160, s0_11, a2_42, s7, mstatus, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgF8, dwArgFC, dwArg0108, out s0_11, out s1_160, out a0_145, out a2_235, out a3_147, out a4_148, out a5_236, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
l23041A8C:
	Mem87[s0_11 + 20<i32>:byte] = 0<8>
	Mem88[s0_11 + 22<i32>:word16] = 0<16>
	s1Out = s1_160
	a0Out = a0_145
	a3Out = a3_147
	a4Out = a4_148
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_pcb_remove_exit:


word32 tcp_abandon(word32 ra, word32 s1, word32 a0, word32 a3, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_abort
//      tcp_kill_state
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_abandon_entry:
l23041AAC:
	branch a0 == 0<32> l23041BBE
l23041BBE:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23041AB0:
	word32 a5_21 = CONVERT(Mem20[a0 + 20<i32>:byte], byte, word32)
	word32 a4_111 = 0xA<32>
	word32 s0_23 = a0
	branch a5_21 != 0xA<32> l23041AF4
l23041AF4:
	word32 s2_152
	word32 s5_173 = Mem20[a0 + 80<i32>:int32]
	word32 s6_166 = Mem20[a0 + 36<i32>:int32]
	word32 s3_200 = Mem20[a0 + 144<i32>:int32]
	word32 s4_101 = Mem20[a0 + 16<i32>:int32]
	word32 s1_28 = CONVERT(Mem20[a0 + 22<i32>:uint16], uint16, word32)
	branch a5_21 != 0<32> l23041B8E
l23041B8E:
	word32 s1_643
	word32 a4_644
	word32 s8_645
	ra = tcp_pcb_remove(ra, a0, a3, 0xA<32>, a5_21, s4_101, s7, mstatus, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, out s1_643, out a0, out a3, out a4_644, out s2_152, out s3_200, out s4_101, out s5_173, out s6_166, out s7, out s8_645, out s9, out s10, out s11, out mstatus)
	Mem67[0x42020EB4<32>:byte] = 1<8>
	a4_111 = 1<32>
l23041B0A:
	s2_152 = 0<32>
	branch s1_28 == 0<32> l23041B28
l23041B0E:
	a4_111 = 0x42020000<32>
	word32 a5_70 = Mem20[0x4201FEB0<32>:int32]
	branch a5_70 != a0 l23041B80
l23041B80:
	branch a5_70 == 0<32> l23041B20
l23041B82:
	word32 a5_74 = Mem20[0x4202000C<32>:word32]
	branch a0 != 0x42020000<32> l23041B7E
l23041B7E:
	a5_70 = 0x42020000<32>
l23041B88:
	s0_23 = Mem20[0x4202000C<32>:word32]
	Mem78[0x4202000C<32>:word32] = a5_74
l23041B1A:
	a0 = Mem20[a5_70 + 12<i32>:word32]
	Mem80[0x42020EB0<32>:word32] = a5_70
l23041B20:
	Mem82[s0_23 + 12<i32>:word32] = 0<32>
	s2_152 = 0<32>
l23041B28:
	word32 s0_89 = Mem88[a0 + 112<i32>:word32]
	branch a0 == 0<32> l23041B30
l23041B2C:
	word32 a1_630
	word32 a5_631
	tcp_segs_free(ra, s0_89, a0, a3, a4_111, s4_101, mstatus, dwArgD8, out a0, out a1_630, out a3, out a4_111, out a5_631)
l23041B30:
	word32 s0_117 = Mem88[a0 + 108<i32>:word32]
	branch a0 == 0<32> l23041B38
l23041B34:
	word32 a1_632
	word32 a5_633
	tcp_segs_free(ra, s0_117, a0, a3, a4_111, s4_101, mstatus, dwArgD8, out a0, out a1_632, out a3, out a4_111, out a5_633)
l23041B38:
	word32 s0_134 = Mem88[a0 + 116<i32>:word32]
	branch a0 == 0<32> l23041B40
l23041B3C:
	word32 a0_634
	word32 a1_635
	word32 a5_636
	tcp_segs_free(ra, s0_134, a0, a3, a4_111, s4_101, mstatus, dwArgD8, out a0_634, out a1_635, out a3, out a4_111, out a5_636)
l23041B40:
	branch s2_152 == 0<32> l23041B5A
l23041B44:
	word32 a5_639
	word32 s4_640
	word32 s8_641
	word32 a0_638
	word32 s1_637
	ra = tcp_rst(ra, s0_134, s5_173, s6_166, s7, mstatus, dwArg28, dwArg38, dwArg58, s1, dwArg74, dwArg78, dwArg98, dwArgA8, dwArgD8, dwArg0108, out s0_134, out s1_637, out a0_638, out a3, out a4_111, out a5_639, out s2_152, out s3_200, out s4_640, out s5_173, out s6_166, out s7, out s8_641, out s9, out mstatus)
l23041B5A:
	word32 a0_221
	word32 a1_222
	word32 a3_224
	word32 a4_225
	word32 a5_226
	word32 a2_642
	word32 s1_227 = tcp_free(s0_134, a3, a4_111, mstatus, out a0_221, out a1_222, out a2_642, out a3_224, out a4_225, out a5_226)
	branch s3_200 == 0<32> l23041BAA
l23041BAA:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_227
	a0Out = a0_221
	a1Out = a1_222
	a3Out = a3_224
	a4Out = a4_225
	a5Out = a5_226
	s2Out = s2_152
	s3Out = s3_200
	s4Out = dwArg04
	s5Out = s5_173
	s6Out = s6_166
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23041B64:
	0<32> = dwArgA8
	word32 a0_263
	word32 s0_264
	word32 ra_265
	word32 s1_266
	word32 s2_267
	word32 s3_268
	word32 s4_269
	word32 s5_270
	word32 s6_271
	word32 a5_272
	word32 a4_273
	word32 a1_274
	word32 a3_280
	word32 t1_281
	word32 mstatus_282
	word32 s7_283
	word32 a7_284
	word32 s10_285
	word32 s11_286
	word32 s9_287
	word32 t0_288
	word32 t4_289
	word32 t5_290
	word32 t6_291
	call s3_200 (retsize: 0;)
		uses: a0:dwArg04,a1:0xFFFFFFF3<32>,a2:dwArg48,a3:a3_224,a4:a4_273,a5:a5_272,a6:dwArg28,a7:a7_284,mstatus:mstatus_216,ra:ra_257,s0:s1,s1:s1_227,s10:s10_285,s11:s11_286,s2:s2_258,s3:s3_229,s4:dwArg04,s5:s5_259,s6:s6_260,s7:s7_261,s8:s4,s9:s9_287,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0058:dwArg58,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +0088:dwArg88,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +0108:dwArg0108,t0:t0_288,t1:t1_281,t3:dwArg00,t4:t4_289,t5:t5_290,t6:t6_291,tp:dwArg88
		defs: a0:a0_263,a1:a1_274,a3:a3_280,a4:a4_273,a5:a5_272,a7:a7_284,mstatus:mstatus_282,ra:ra_265,s0:s0_264,s1:s1_266,s10:s10_285,s11:s11_286,s2:s2_267,s3:s3_268,s4:s4_269,s5:s5_270,s6:s6_271,s7:s7_283,s9:s9_287,t0:t0_288,t1:t1_281,t4:t4_289,t5:t5_290,t6:t6_291
	s0Out = s0_264
	s1Out = s1_266
	a0Out = a0_263
	a1Out = a1_274
	a3Out = a3_280
	a4Out = a4_273
	a5Out = a5_272
	s2Out = s2_267
	s3Out = s3_268
	s4Out = s4_269
	s5Out = s5_270
	s6Out = s6_271
	s7Out = s7_283
	s9Out = s9_287
	s10Out = s10_285
	s11Out = s11_286
	mstatusOut = mstatus_282
	return ra_265
l23041ACE:
	word32 a3_298
	word32 a4_299
	word32 mstatus_305
	word32 s10_307
	word32 s11_308
	word32 s2_309
	word32 s3_310
	word32 s5_312
	word32 s6_313
	word32 s7_314
	word32 s9_316
	word32 s1_625
	word32 a0_626
	word32 s4_627
	word32 s8_628
	word32 ra_306 = tcp_pcb_remove(ra, a0, a3, 0xA<32>, a5_21, s4, s7, mstatus, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, out s1_625, out a0_626, out a3_298, out a4_299, out s2_309, out s3_310, out s4_627, out s5_312, out s6_313, out s7_314, out s8_628, out s9_316, out s10_307, out s11_308, out mstatus_305)
	0<32> = dwArgA8
l23041AF0_thunk_tcp_free:
	word32 a0_332
	word32 a1_333
	word32 a3_335
	word32 a4_336
	word32 a5_337
	word32 a2_629
	word32 s1_338 = tcp_free(a0, a3_298, a4_299, mstatus_305, out a0_332, out a1_333, out a2_629, out a3_335, out a4_336, out a5_337)
	s0Out = s1
	s1Out = s1_338
	a0Out = a0_332
	a1Out = a1_333
	a3Out = a3_335
	a4Out = a4_336
	a5Out = a5_337
	s2Out = s2_309
	s3Out = s3_310
	s4Out = dwArg04
	s5Out = s5_312
	s6Out = s6_313
	s7Out = s7_314
	s9Out = s9_316
	s10Out = s10_307
	s11Out = s11_308
	mstatusOut = mstatus_305
	return ra_306
tcp_abandon_exit:


word32 tcp_abort(word32 ra, word32 s1, word32 a0, word32 a3, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_abort
//      tcp_accept_null
//      tcp_netif_ip_addr_changed_pcblist.isra.2
//      tcp_new_ip_type
//      tcp_input
//      netconn_drain
//      lwip_netconn_do_close
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_abort_entry:
l23041BC0:
l23041BC2_thunk_tcp_abandon:
	word32 a0_13
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 mstatus_21
	word32 s0_23
	word32 s1_24
	word32 s10_25
	word32 s11_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 s7_32
	word32 s9_34
	word32 a1_75
	word32 ra_22 = tcp_abandon(ra, s1, a0, a3, s3, s4, s7, mstatus, dwArg00, dwArg04, dwArg28, dwArg38, dwArg48, dwArg58, dwArg74, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s0_23, out s1_24, out a0_13, out a1_75, out a3_16, out a4_17, out a5_18, out s2_27, out s3_28, out s4_29, out s5_30, out s6_31, out s7_32, out s9_34, out s10_25, out s11_26, out mstatus_21)
	s0Out = s0_23
	s1Out = s1_24
	a0Out = a0_13
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_18
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	s7Out = s7_32
	s9Out = s9_34
	s10Out = s10_25
	s11Out = s11_26
	mstatusOut = mstatus_21
	return ra_22
tcp_abort_exit:


void tcp_accept_null(word32 ra, word32 s1, word32 a1, word32 a3, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_accept_null_entry:
l23041BC6:
	word32 s0_65
	word32 s1_66
	word32 a0_67
	word32 a3_68
	word32 a4_69
	word32 a5_70
	word32 s2_71
	word32 s3_72
	word32 s4_73
	word32 s5_74
	word32 s6_75
	word32 s7_76
	word32 s9_77
	word32 s10_78
	word32 s11_79
	word32 mstatus_80
	tcp_abort(ra, s1, a1, a3, s3, s4, s7, mstatus, dwLoc10, dwLoc0C, dwArg18, dwArg28, dwArg38, dwArg48, dwArg64, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgC8, dwArgCC, dwArgD8, dwArgF8, out s0_65, out s1_66, out a0_67, out a3_68, out a4_69, out a5_70, out s2_71, out s3_72, out s4_73, out s5_74, out s6_75, out s7_76, out s9_77, out s10_78, out s11_79, out mstatus_80)
	return
tcp_accept_null_exit:


word32 tcp_netif_ip_addr_changed_pcblist.isra.2(word32 ra, word32 s0, word32 s1, word32 a1, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgF8, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_netif_ip_addr_changed
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s1 s2 s3 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_netif_ip_addr_changed_pcblist.isra.2_entry:
l23041BD8:
l23041BE2:
	branch a1 != 0<32> l23041BEE
l23041BEE:
	word32 a1_19 = Mem9[s1 + 12<i32>:word32]
	branch a4 != a5 l23041BFE
l23041BF8:
	word32 s0_196
	word32 a0_197
	word32 s5_198
	word32 s6_199
	word32 s9_200
	word32 s10_201
	word32 s11_202
	ra = tcp_abort(ra, s1, a1_19, a3, s3, s4, s7, mstatus, dwLoc10, s0, dwArg18, dwArg28, dwArg38, dwArg48, dwArg64, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgC8, dwArgCC, dwArgD8, dwArgF8, out s0_196, out s1, out a0_197, out a3, out a4, out a5, out s2, out s3, out s4, out s5_198, out s6_199, out s7, out s9_200, out s10_201, out s11_202, out mstatus)
l23041BFE:
	a1 = s1
l23041BE4:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s7Out = s7
	mstatusOut = mstatus
	return ra
tcp_netif_ip_addr_changed_pcblist.isra.2_exit:


word32 tcp_netif_ip_addr_changed(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgE8, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_do_set_ipaddr
//      netif_remove
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_netif_ip_addr_changed_entry:
l23041C02:
	branch a0 == 0<32> l23041C58
l23041C58:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s4Out = s4
	mstatusOut = mstatus
	return ra
l23041C04:
	word32 a0_12 = Mem10[a4:word32]
	branch a4 == 0<32> l23041C3E
l23041C12:
	word32 a3_26
	word32 a4_27
	word32 mstatus_31
	word32 s1_33
	word32 s3_37
	word32 s4_38
	word32 s7_41
	word32 s7_265
	word32 s2_263
	word32 s3_264
	word32 a5_262
	ra = tcp_netif_ip_addr_changed_pcblist.isra.2(tcp_netif_ip_addr_changed_pcblist.isra.2(ra, a0_12, a1, Mem10[0x4201FEAC<32>:int32], a3, a4, 0x42020000<32>, s3, s4, s7, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1_33, out a3_26, out a4_27, out a5_262, out s2_263, out s3_37, out s4_38, out s7_41, out mstatus_31), a0_12, s1_33, Mem10[0x4201FEB0<32>:int32], a3_26, a4_27, 0x42020000<32>, s3_37, s4_38, s7_41, mstatus_31, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1, out a3, out a4, out a5, out s2, out s3_264, out s4, out s7_265, out mstatus)
	branch s1 == 0<32> l23041C3E
l23041C30:
	s1 = Mem10[a5:word32]
	branch a5 == 0<32> l23041C3E
l23041C34:
	a5 = Mem10[0x4201FEA8<32>:int32]
l23041C3C:
	branch a5 != 0<32> l23041C48
l23041C48:
	word32 a5_88 = Mem87[a3:word32]
	branch a3 != a4 l23041C54
l23041C50:
	s1 = Mem87[a4:word32]
	Mem92[a4:word32] = a5_88
l23041C54:
	a5 = Mem94[a5_88 + 12<i32>:word32]
l23041C3E:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s4Out = s4
	mstatusOut = mstatus
	return ra
tcp_netif_ip_addr_changed_exit:


word32 tcp_kill_state(word32 ra, word32 s1, word32 a0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_new_ip_type
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a1 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_kill_state_entry:
l23041C5A:
	word32 a4_12 = 0x42020000<32>
	word32 a5_10 = Mem0[0x4201FEAC<32>:int32]
	word32 a1_7 = Mem0[0x4201FEA4<32>:int32]
	word32 a2_17 = 0<32>
	word32 a3_19 = 0<32>
l23041C6E:
	branch a5_10 != 0<32> l23041C7A
l23041C7A:
	a4_12 = CONVERT(Mem0[a5_10 + 20<i32>:byte], byte, word32)
	branch a4_12 != a0 l23041C90
l23041C82:
	a5_10 = Mem0[a4_12 + 32<i32>:word32]
	a4_12 = a1_7 - a4_12
	branch a4_12 <u a2_17 l23041C90
l23041C8C:
	a2_17 = a4_12
	a3_19 = a5_10
l23041C90:
	a5_10 = Mem0[a5_10 + 12<i32>:word32]
l23041C70:
	branch a3_19 == 0<32> l23041C94
l23041C94:
	s1Out = s1
	a1Out = a1_7
	a3Out = a3_19
	a4Out = a4_12
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23041C72:
l23041C76_thunk_tcp_abandon:
	word32 a1_48
	word32 a3_50
	word32 a4_51
	word32 mstatus_55
	word32 s1_58
	word32 s10_59
	word32 s11_60
	word32 s2_61
	word32 s3_62
	word32 s4_63
	word32 s5_64
	word32 s6_65
	word32 s7_66
	word32 s9_68
	word32 a0_229
	word32 a5_230
	word32 s0_228
	word32 ra_56 = tcp_abandon(ra, s1, a3_19, a3_19, s3, s4, s7, mstatus, dwArg00, dwArg04, dwArg28, dwArg38, dwArg48, dwArg58, dwArg74, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s0_228, out s1_58, out a0_229, out a1_48, out a3_50, out a4_51, out a5_230, out s2_61, out s3_62, out s4_63, out s5_64, out s6_65, out s7_66, out s9_68, out s10_59, out s11_60, out mstatus_55)
	s1Out = s1_58
	a1Out = a1_48
	a3Out = a3_50
	a4Out = a4_51
	s2Out = s2_61
	s3Out = s3_62
	s4Out = s4_63
	s5Out = s5_64
	s6Out = s6_65
	s7Out = s7_66
	s9Out = s9_68
	s10Out = s10_59
	s11Out = s11_60
	mstatusOut = mstatus_55
	return ra_56
tcp_kill_state_exit:


word32 tcp_alloc(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_new_ip_type
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_alloc_entry:
l23041C96:
	word32 a4_340
	word32 a3_339
	word32 a5_337
	word32 a0_20
	word32 a3_923
	word32 a5_924
	word32 a2_22
	word32 a4_116
	word32 s1_123 = memp_malloc(a0, 2<32>, a3, a4, mstatus, out a0_20, out a2_22, out a3_923, out a4_116, out a5_924)
	word32 s0_153 = a0_20
	branch a0_20 != 0<32> l23041D62
l23041CAE:
	s3 = 0x42020000<32>
	word32 a0_29 = Mem16[0x4201FEAC<32>:int32]
l23041CB6:
	branch a0_29 != 0<32> l23041DF4
l23041DF4:
	word32 a5_32 = CONVERT(Mem31[a0_29 + 26<i32>:uint16], uint16, word32)
	word32 a0_34 = Mem31[a0_20 + 12<i32>:word32]
	a4_116 = a5_32 & 8<i32>
	branch (a5_32 & 8<i32>) == 0<32> l23041E0A
l23041E00:
	Mem37[a0_34 + 26<i32>:word16] = SLICE(a5_32 & 0xFFFFFFF7<32>, word16, 0)
	word32 a3_950
	word32 s2_952
	word32 s8_953
	word32 a0_949
	word32 a5_951
	ra = tcp_close_shutdown_fin(ra, s1_123, a0_34, a2_22, s7, mstatus, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, out s1_123, out a0_949, out a2_22, out a3_950, out a4_116, out a5_951, out s2_952, out s3, out s4, out s5, out s6, out s7, out s8_953, out s9, out s10, out s11, out mstatus)
l23041E0A:
	a0_29 = a0_20
l23041CBA:
	s2 = 0x42020000<32>
	word32 a5_76 = Mem31[0x4201FEA0<32>:int32]
	word32 a2_77 = Mem31[0x4201FEA4<32>:int32]
	word32 a3_115 = 0<32>
l23041CCC:
	branch a5_76 != 0<32> l23041E0E
l23041E0E:
	word32 a5_82 = Mem31[a4_116 + 32<i32>:word32]
	a4_116 = a2_77 - a4_116
	branch a4_116 <u a3_115 l23041E1C
l23041E18:
	a3_115 = a4_116
	a0_29 = a5_82
l23041E1C:
	a5_76 = Mem31[a5_82 + 12<i32>:word32]
l23041CD0:
	branch a0_29 == 0<32> l23041CD6
l23041CD2:
	word32 a0_926
	word32 a5_927
	word32 s0_925
	ra = tcp_abort(ra, s1_123, a0_29, a3_115, s3, s4, s7, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s0_925, out s1_123, out a0_926, out a3_115, out a4_116, out a5_927, out s2, out s3, out s4, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
l23041CD6:
	word32 a0_146
	word32 a2_928
	word32 a5_931
	word32 a4_930
	word32 a3_929
	s1_123 = memp_malloc(s1_123, 2<32>, a3_115, a4_116, mstatus, out a0_146, out a2_928, out a3_929, out a4_930, out a5_931)
	s0_153 = a0_146
	branch a0_146 != 0<32> l23041D50
l23041CE0:
	word32 a3_163
	word32 a4_164
	word32 s1_172
	word32 s4_177
	word32 a1_932
	ra = tcp_kill_state(ra, s1_123, 9<32>, s3, s4, s7, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1_172, out a1_932, out a3_163, out a4_164, out s2, out s3, out s4_177, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
	word32 a0_191
	word32 a5_936
	word32 a3_934
	word32 a4_935
	word32 a2_933
	s1_123 = memp_malloc(s1_172, 2<32>, a3_163, a4_164, mstatus, out a0_191, out a2_933, out a3_934, out a4_935, out a5_936)
	s0_153 = a0_191
	branch a0_191 != 0<32> l23041D3E
l23041CF0:
	word32 a3_202
	word32 a4_203
	word32 s1_211
	word32 s4_216
	word32 a1_200
	ra = tcp_kill_state(ra, s1_123, 8<32>, s3, s4_177, s7, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1_211, out a1_200, out a3_202, out a4_203, out s2, out s3, out s4_216, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
	word32 a0_230
	word32 a2_937
	word32 a5_938
	word32 a4_234
	word32 a3_233
	s1_123 = memp_malloc(s1_211, 2<32>, a3_202, a4_203, mstatus, out a0_230, out a2_937, out a3_233, out a4_234, out a5_938)
	s0_153 = a0_230
	branch a0_230 != 0<32> l23041D2C
l23041D00:
	word32 a5_240
	branch CONVERT(SLICE(s1_123, byte, 0), byte, int32) < 0<32> l23041E20
l23041E20:
	a5_240 = 127<i32>
l23041D0A:
	a5_240 = s1_123
	branch s1_123 != 0<32> l23041E24
l23041E24:
	a4_234 = Mem31[s3 + -340<i32>:int32]
	word32 a0_246 = Mem31[s2 + -348<i32>:int32]
	word32 a5_249 = a5_240 + 0xFFFFFFFF<32> & 255<i32>
	a3_233 = 0<32>
l23041E34:
	branch a4_234 != 0<32> l23041E42
l23041E42:
	word32 a2_253 = CONVERT(Mem31[a4_234 + 21<i32>:byte], byte, word32)
	branch a2_253 <u a5_249 l23041E58
l23041E4A:
	branch a2_253 != a5_249 l23041E62
l23041E4E:
	a4_234 = Mem31[a1_200 + 32<i32>:word32]
	a1_200 = a0_246 - a1_200
	branch a1_200 <u a3_233 l23041E62
l23041E58:
	a4_234 = Mem31[a3_233 + 32<i32>:word32]
	a5_249 = a2_253
	s0_153 = a4_234
	a3_233 = a0_246 - a3_233
l23041E62:
	a4_234 = Mem31[a4_234 + 12<i32>:word32]
l23041E36:
	branch s0_153 == 0<32> l23041D10
l23041E3A:
	word32 a5_947
	word32 a0_946
	word32 s0_945
	word32 s4_948
	ra = tcp_abort(ra, s1_123, s0_153, a3_233, s3, s4_216, s7, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s0_945, out s1_123, out a0_946, out a3_233, out a4_234, out a5_947, out s2, out s3, out s4_948, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
l23041D10:
	word32 a0_336
	word32 a2_939
	s1_123 = memp_malloc(s1_123, 2<32>, a3_233, a4_234, mstatus, out a0_336, out a2_939, out a3_339, out a4_340, out a5_337)
	s0_153 = a0_336
	branch a0_336 == 0<32> l23041DE4
l23041D1A:
	word32 a4_346 = Mem31[0x4201FE58<32>:int32]
	Mem349[a4_346:word16] = SLICE(CONVERT(Mem31[a4_346:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l23041D2C:
	word32 a4_352 = Mem351[0x4201FE58<32>:int32]
	Mem355[a4_352:word16] = SLICE(CONVERT(Mem351[a4_352:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l23041D3E:
	word32 a4_358 = Mem357[0x4201FE58<32>:int32]
	Mem361[a4_358:word16] = SLICE(CONVERT(Mem357[a4_358:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l23041D50:
	word32 a4_364 = Mem363[0x4201FE58<32>:int32]
	Mem367[a4_364:word16] = SLICE(CONVERT(Mem363[a4_364:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l23041D62:
	word32 a0_941
	word32 t1_940
	word32 a1_942
	word32 a5_944
	word32 a2_943
	ra = memset(ra, s0_153, 0<32>, 164<i32>, out t1_940, out a0_941, out a1_942, out a2_943, out a3_339, out a4_340, out a5_944)
	Mem391[s0_153 + 100<i32>:word16] = 0x580<16>
	Mem394[0x8100838<32>:word32] = s0_153
	Mem396[s0_153 + 11<i32>:byte] = 0xFF<8>
	Mem398[s0_153 + 64<i32>:word16] = 6<16>
	Mem399[s0_153 + 62<i32>:word16] = 6<16>
	Mem402[0x219002F<32>:word32] = s0_153
	word32 a5_404 = Mem402[0x4201FEA4<32>:int32]
	Mem409[s0_153 + 21<i32>:byte] = SLICE(s1_123, byte, 0)
	Mem410[a5_404 + 32<i32>:word32] = s0_153
	Mem413[s0_153 + 30<i32>:byte] = SLICE(CONVERT(Mem410[0x4200DF81<32>:byte], byte, word32), byte, 0)
	Mem416[0x15800049<32>:word32] = s0_153
	Mem419[s0_153 + 132<i32>:word32] = 0x23041FCE<32>
	Mem422[s0_153 + 148<i32>:word32] = 0x6DDD00<32>
	Mem425[s0_153 + 152<i32>:word32] = 0x120004F8<32>
	Mem427[s0_153 + 156<i32>:word32] = 9<32>
	a5_337 = 9<32>
l23041DE4:
	s1Out = s1_123
	a0Out = s0_153
	a3Out = a3_339
	a4Out = a4_340
	a5Out = a5_337
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwLoc1C
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_alloc_exit:


word32 tcp_new_ip_type(word32 ra, word32 s1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_new_ip_type
//      lwip_netconn_do_newconn
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_new_ip_type_entry:
l23041E66:
l23041E6A_thunk_tcp_alloc:
	word32 a3_15
	word32 a4_16
	word32 a5_17
	word32 s1_21
	word32 s4_22
	word32 a0_28
	word32 mstatus_30
	word32 s7_37
	word32 s2_68
	word32 s3_69
	word32 s5_70
	word32 s6_71
	word32 s8_72
	word32 s9_73
	word32 s10_74
	word32 s11_75
	word32 ra_19 = tcp_alloc(ra, s1, 64<i32>, a3, a4, s3, s4, s7, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg78, dwArg7C, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgDC, dwArgE8, out s1_21, out a0_28, out a3_15, out a4_16, out a5_17, out s2_68, out s3_69, out s4_22, out s5_70, out s6_71, out s7_37, out s8_72, out s9_73, out s10_74, out s11_75, out mstatus_30)
	s1Out = s1_21
	a0Out = a0_28
	a3Out = a3_15
	a4Out = a4_16
	a5Out = a5_17
	s4Out = s4_22
	s7Out = s7_37
	mstatusOut = mstatus_30
	return ra_19
tcp_new_ip_type_exit:


word32 tcp_close_shutdown(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_close
//      tcp_shutdown
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_close_shutdown_entry:
l23041E6E:
	word32 a5_108
	word32 s1_113
	word32 s0_11 = a0
	word32 a5_12 = CONVERT(Mem9[a0 + 20<i32>:byte], byte, word32)
	branch a1 == 0<32> l23041F06
l23041E7E:
	a4 = 4<32>
	branch a5_12 == 4<32> l23041E8A
l23041E84:
	a4 = 7<32>
	branch a5_12 != 7<32> l23041F06
l23041E8A:
	s0_11 = Mem9[a4 + 120<i32>:word32]
	branch a4 != 0<32> l23041E9C
l23041E8E:
	a3 = CONVERT(Mem9[s0_11 + 40<i32>:uint16], uint16, word32)
	a4 = 0xFFF810<32>
	branch a3 == 0xFFF810<32> l23041F06
l23041F06:
	branch a5_12 == 1<32> l23041F56
l23041F56:
l23041F62:
	word32 a5_30 = Mem29[a4 + 4<i32>:word32]
	a4 = Mem29[a4:word32]
l23041F66:
	branch a4 != 0<32> l23041F86
l23041F86:
	word32 a4_35 = Mem34[a2 + 124<i32>:word32]
	branch s0_11 != a2 l23041F90
l23041F8C:
	Mem37[a4_35 + 124<i32>:word32] = 0<32>
l23041F90:
	a4 = Mem39[a4_35 + 12<i32>:word32]
l23041F68:
	branch a5_30 != 0xDCF79BC8<32> l23041F62
l23041F6E:
	word32 a3_81
	word32 a4_82
	word32 s1_707
	word32 a0_708
	ra = tcp_pcb_remove(ra, s0_11, 0x2308643C<32>, a4, a5_30 + 4<32>, s4, s7, mstatus, dwArg38, dwArg48, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s1_707, out a0_708, out a3_81, out a4_82, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
	word32 a0_709
	word32 a2_710
	s1_113 = memp_free(3<32>, s0_11, a3_81, a4_82, mstatus, out a0_709, out a2_710, out a3, out a4, out a5_108)
l23041F0C:
	branch a5_12 == 0<32> l23041F22
l23041F22:
	branch CONVERT(Mem9[s0_11 + 22<i32>:uint16], uint16, word32) == 0<32> l23041F3E
l23041F28:
	a4 = 0x42020000<32>
	word32 a5_119 = Mem9[0x4201FEB0<32>:int32]
	branch a5_119 != s0_11 l23041F48
l23041F48:
	branch a5_119 == 0<32> l23041F3A
l23041F4A:
	word32 a5_123 = Mem9[0x4202000C<32>:word32]
	branch s0_11 != 0x42020000<32> l23041F46
l23041F46:
	a5_119 = 0x42020000<32>
l23041F50:
	s0_11 = Mem9[0x4202000C<32>:word32]
	Mem127[0x4202000C<32>:word32] = a5_123
l23041F34:
	s0_11 = Mem9[a5_119 + 12<i32>:word32]
	Mem129[0x42020EB0<32>:word32] = a5_119
l23041F3A:
	Mem131[s0_11 + 12<i32>:word32] = 0<32>
l23041F0E:
	branch a5_12 == 2<32> l23041F94
l23041F94:
	word32 s1_144
	word32 a0_706
	ra = tcp_pcb_remove(ra, s0_11, a3, 2<32>, a5_12, s4, s7, mstatus, dwArg38, dwArg48, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s1_144, out a0_706, out a3, out a4, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
	Mem167[0x42020EB4<32>:byte] = SLICE(s1_144, byte, 0)
l23041F14:
l23041F1E_thunk_tcp_close_shutdown_fin:
	word32 a4_174
	word32 a5_175
	word32 a0_176
	word32 a3_178
	word32 mstatus_181
	word32 s1_183
	word32 s10_184
	word32 s11_185
	word32 s2_186
	word32 s3_187
	word32 s4_188
	word32 s5_189
	word32 s6_190
	word32 s7_191
	word32 s8_192
	word32 s9_193
	word32 a2_705
	word32 ra_182 = tcp_close_shutdown_fin(ra, 1<32>, s0_11, dwArg10, s7, mstatus, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgF8, dwArgFC, dwArg0108, out s1_183, out a0_176, out a2_705, out a3_178, out a4_174, out a5_175, out s2_186, out s3_187, out s4_188, out s5_189, out s6_190, out s7_191, out s8_192, out s9_193, out s10_184, out s11_185, out mstatus_181)
	s1Out = s1_183
	a0Out = a0_176
	a3Out = a3_178
	a4Out = a4_174
	a5Out = a5_175
	s2Out = s2_186
	s3Out = s3_187
	s4Out = s4_188
	s5Out = s5_189
	s6Out = s6_190
	s7Out = s7_191
	s8Out = s8_192
	s9Out = s9_193
	s10Out = s10_184
	s11Out = s11_185
	mstatusOut = mstatus_181
	return ra_182
l23041E9C:
	word32 a3_222
	word32 a4_695
	word32 a5_696
	word32 s1_693
	word32 a0_694
	ra = tcp_rst(ra, Mem9[a1 + 80<i32>:word32], a1, a2, s7, mstatus, dwArg38, dwArg48, dwArg68, dwArg78, dwArg84, dwArg88, dwArgA8, dwArgB8, dwArgE8, dwArg0118, out s0_11, out s1_693, out a0_694, out a3_222, out a4_695, out a5_696, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out mstatus)
	word32 a5_701
	word32 a2_699
	word32 a4_700
	word32 a0_697
	word32 a1_698
	s1_113 = tcp_pcb_purge(ra, s0_11, a3_222, s4, mstatus, dwArgC8, dwArgD8, dwArg0108, out a0_697, out a1_698, out a2_699, out a3, out a4_700, out a5_701)
	word32 a5_256 = Mem9[0x4201FEAC<32>:int32]
	branch a5_256 != s0_11 l23041EF8
l23041EF8:
	branch a5_256 == 0<32> l23041ECC
l23041EFA:
	word32 a5_260 = Mem9[0x4202000C<32>:word32]
	branch s0_11 != 0x42020000<32> l23041EF6
l23041EF6:
	a5_256 = 0x42020000<32>
l23041F00:
	s0_11 = Mem9[0x4202000C<32>:word32]
	Mem264[0x4202000C<32>:word32] = a5_260
l23041EC6:
	s0_11 = Mem9[a5_256 + 12<i32>:word32]
	Mem266[0x42020EAC<32>:word32] = a5_256
l23041ECC:
	Mem269[0x42020EB4<32>:byte] = 1<8>
	a5_108 = Mem269[0x4201FEB8<32>:int32]
	Mem273[s0_11 + 12<i32>:word32] = 0<32>
	a4 = 1<32>
	branch a5_108 != s0_11 l23041F3E
l23041F3E:
	word32 a1_703
	word32 a2_704
	word32 a0_702
	s1_113 = tcp_free(s0_11, a3, a4, mstatus, out a0_702, out a1_703, out a2_704, out a3, out a4, out a5_108)
l23041EE6:
	tcp_trigger_input_pcb_close()
l23041EEA:
	s1Out = s1_113
	a0Out = 0<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5_108
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_close_shutdown_exit:


word32 tcp_close(word32 ra, word32 a0, word32 a2, word32 a3, word32 s4, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_close
//      altcp_tcp_new_ip_type
//      tcp_recv_null
//      lwip_netconn_do_listen
//      lwip_netconn_do_close
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_close_entry:
l23041FAC:
	branch a0 == 0<32> l23041FCA
l23041FCA:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23041FAE:
	word32 a4_6 = CONVERT(Mem0[a0 + 20<i32>:byte], byte, word32)
	branch a4_6 == 1<32> l23041FC4
l23041FB8:
	Mem10[a0 + 26<i32>:word16] = SLICE(CONVERT(Mem0[a0 + 26<i32>:uint16], uint16, word32) | 16<i32>, word16, 0)
l23041FC4:
l23041FC6_thunk_tcp_close_shutdown:
	word32 a0_28
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 mstatus_36
	word32 s1_38
	word32 s10_39
	word32 s11_40
	word32 s2_41
	word32 s3_42
	word32 s4_43
	word32 s5_44
	word32 s6_45
	word32 s7_46
	word32 s8_47
	word32 s9_48
	word32 ra_37 = tcp_close_shutdown(ra, a0, 1<32>, a2, a3, a4_6, s4, s7, mstatus, dwArg10, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArgFC, dwArg0108, dwArg0118, out s1_38, out a0_28, out a3_31, out a4_32, out a5_33, out s2_41, out s3_42, out s4_43, out s5_44, out s6_45, out s7_46, out s8_47, out s9_48, out s10_39, out s11_40, out mstatus_36)
	s1Out = s1_38
	a0Out = a0_28
	a3Out = a3_31
	a4Out = a4_32
	a5Out = a5_33
	s2Out = s2_41
	s3Out = s3_42
	s4Out = s4_43
	s5Out = s5_44
	s6Out = s6_45
	s7Out = s7_46
	s8Out = s8_47
	s9Out = s9_48
	s10Out = s10_39
	s11Out = s11_40
	mstatusOut = mstatus_36
	return ra_37
tcp_close_exit:


word32 tcp_recv_null(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg10, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_process_refused_data
//      tcp_input
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0010:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_recv_null_entry:
l23041FCE:
	branch a1 == 0<32> l23041FFE
l23041FFE:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23041FD0:
	branch a2 == 0<32> l23041FF4
l23041FF4:
	branch a3 != 0<32> l23042002
l23042002:
	s1Out = s1
	a0Out = 0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23041FF8:
l23041FFA_thunk_tcp_close:
	word32 a0_14
	word32 a3_17
	word32 a4_18
	word32 mstatus_22
	word32 s1_24
	word32 s10_25
	word32 s11_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 s7_32
	word32 s8_33
	word32 s9_34
	word32 a5_208
	word32 ra_23 = tcp_close(ra, a1, a2, a3, s4, s7, mstatus, dwArg10, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArgFC, dwArg0108, dwArg0118, out s1_24, out a0_14, out a3_17, out a4_18, out a5_208, out s2_27, out s3_28, out s4_29, out s5_30, out s6_31, out s7_32, out s8_33, out s9_34, out s10_25, out s11_26, out mstatus_22)
	s1Out = s1_24
	a0Out = a0_14
	a3Out = a3_17
	a4Out = a4_18
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	s7Out = s7_32
	s8Out = s8_33
	s9Out = s9_34
	s10Out = s10_25
	s11Out = s11_26
	mstatusOut = mstatus_22
	return ra_23
l23041FD2:
	word32 a3_53
	word32 a4_54
	word32 mstatus_58
	word32 s0_60
	word32 s10_62
	word32 s11_63
	word32 s4_66
	word32 s7_69
	word32 s9_71
	word32 a3_86
	word32 a4_87
	word32 s1_89
	word32 s2_90
	word32 s3_91
	word32 s4_94
	word32 s5_95
	word32 s6_96
	word32 s8_97
	word32 mstatus_103
	word32 s1_197
	word32 a0_198
	word32 a2_199
	word32 a5_200
	word32 s3_201
	word32 s0_202
	word32 a0_203
	word32 a1_204
	word32 a2_205
	word32 a5_206
	word32 a7_207
	word32 ra_104 = pbuf_free(tcp_recved(ra, s1, a1, CONVERT(Mem0[a2 + 8<i32>:uint16], uint16, word32), a2, a3, s7, mstatus, dwArg00, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgF8, dwArgFC, dwArg0108, out s0_60, out s1_197, out a0_198, out a2_199, out a3_53, out a4_54, out a5_200, out s3_201, out s4_66, out s7_69, out s9_71, out s10_62, out s11_63, out mstatus_58), s0_60, a3_53, a4_54, s4_66, mstatus_58, dwArg0118, out s0_202, out s1_89, out a0_203, out a1_204, out a2_205, out a3_86, out a4_87, out a5_206, out a7_207, out s2_90, out s3_91, out s4_94, out s5_95, out s6_96, out s8_97, out mstatus_103)
	s1Out = s1_89
	a0Out = 0<32>
	a3Out = a3_86
	a4Out = a4_87
	s2Out = s2_90
	s3Out = s3_91
	s4Out = s4_94
	s5Out = s5_95
	s6Out = s6_96
	s7Out = s7_69
	s8Out = s8_97
	s9Out = s9_71
	s10Out = s10_62
	s11Out = s11_63
	mstatusOut = mstatus_103
	return ra_104
tcp_recv_null_exit:


word32 tcp_process_refused_data(word32 ra, word32 s1, word32 a0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_fasttmr
//      tcp_input
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_process_refused_data_entry:
l23042004:
	word32 s1_124 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l2304206A
l23042014:
	word32 s4_118
	word32 a0_28
	word32 s2_16 = Mem13[a0 + 120<i32>:int32]
	word32 a5_17 = Mem13[a0 + 132<i32>:int32]
	word32 s3_19 = CONVERT(Mem13[s2_16 + 13<i32>:byte], byte, word32)
	Mem20[a0 + 120<i32>:word32] = 0<32>
	s0 = a0
	branch a5_17 == 0<32> l2304207A
l2304207A:
	word32 s1_359
	word32 s8_360
	ra = tcp_recv_null(ra, 0xFFFFFFF0<32>, a0, s2_16, 0<32>, s4, s7, mstatus, dwLoc20, dwLoc10, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, out s1_359, out a0_28, out a3, out a4, out s2, out s3, out s4_118, out s5, out s6, out s7, out s8_360, out s9, out s10, out s11, out mstatus)
l2304202E:
	word32 a5_64
	word32 a1_67
	word32 a7_75
	word32 t0_81
	word32 t1_82
	word32 t4_83
	word32 t5_84
	word32 t6_85
	word32 tp_86
	call a5_17 (retsize: 0;)
		uses: a0:Mem20[a0 + 16<i32>:word32],a1:a1_67,a3:a3_65,a4:a4_68,a5:a5_64,a7:a7_75,mstatus:mstatus,ra:ra,s0:a0,s1:0xFFFFFFF0<32>,s10:s10_76,s11:s11_77,s2:s2_16,s3:s3_19,s4:s4,s5:s5_78,s6:s6_79,s7:s7,s9:s9_80,Stack +0000:dwLoc20,Stack +0010:dwLoc10,Stack +0038:dwArg18,Stack +0048:dwArg28,Stack +0058:dwArg38,Stack +0068:dwArg48,Stack +0078:dwArg58,Stack +0098:dwArg78,Stack +00A8:dwArg88,Stack +00AC:dwArg8C,Stack +00B8:dwArg98,Stack +00BC:dwArg9C,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00E8:dwArgC8,Stack +00EC:dwArgCC,Stack +00F8:dwArgD8,Stack +00FC:dwArgDC,Stack +0108:dwArgE8,Stack +0118:dwArgF8,t0:t0_81,t1:t1_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
		defs: a0:a0_63,a1:a1_67,a3:a3_65,a4:a4_68,a5:a5_64,a7:a7_75,mstatus:mstatus_73,ra:ra_59,s0:s0_60,s10:s10_76,s11:s11_77,s2:s2_61,s3:s3_62,s4:s4_72,s5:s5_78,s6:s6_79,s7:s7_74,s9:s9_80,t0:t0_81,t1:t1_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
l23042032:
	s1_124 = a0_28
	branch a0_28 != 0<32> l23042082
l23042082:
	branch a0_28 == 0xFFFFFFF3<32> l23042068
l23042088:
	Mem92[s0 + 120<i32>:word32] = s2
	s1_124 = 0xFFFFFFFB<32>
l23042036:
	s3 = s3 & 32<i32>
	branch s3 == 0<32> l2304206A
l2304203E:
	word32 a5_97 = CONVERT(Mem20[s0 + 40<i32>:uint16], uint16, word32)
	a4 = 0xFFF810<32>
	branch a5_97 == 0xFFF810<32> l23042052
l2304204C:
	Mem101[s0 + 40<i32>:word16] = SLICE(a5_97 + 1<32>, word16, 0)
l23042052:
	word32 a5_104 = Mem103[s0 + 132<i32>:int32]
	branch a5_104 == 0<32> l2304206A
l23042058:
	word32 s0_106 = Mem103[a0_28 + 16<i32>:word32]
	word32 a0_129
	word32 a7_141
	word32 t0_147
	word32 t1_148
	word32 t4_149
	word32 t5_150
	word32 t6_151
	word32 tp_152
	call a5_104 (retsize: 0;)
		uses: a0:a0_87,a1:s0_106,a2:0<32>,a3:0<32>,a4:a4_134,a5:0xFFFFFFF3<32>,a7:a7_141,mstatus:mstatus_116,ra:ra_112,s0:s0_106,s1:a0_87,s10:s10_142,s11:s11_143,s2:s2_90,s3:s3_95,s4:s4_118,s5:s5_144,s6:s6_145,s7:s7_120,s9:s9_146,Stack +0018:dwArg18,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0058:dwArg58,Stack +0078:dwArg78,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00CC:dwArgCC,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +FFFFFFE0:dwLoc20,Stack +FFFFFFF0:dwLoc10,t0:t0_147,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151,tp:tp_152
		defs: a0:a0_129,a3:a3_131,a4:a4_134,a7:a7_141,mstatus:mstatus_139,ra:ra_125,s0:s0_126,s1:s1_124,s10:s10_142,s11:s11_143,s2:s2_127,s3:s3_128,s5:s5_144,s6:s6_145,s7:s7_140,s9:s9_146,t0:t0_147,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151,tp:tp_152
	branch a0_129 != 0xFFFFFFF3<32> l2304206A
l23042068:
	s1_124 = 0xFFFFFFF3<32>
l2304206A:
	s0Out = s0
	s1Out = s1_124
	a0Out = s1_124
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwLoc1C
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_process_refused_data_exit:


word32 tcp_fasttmr(word32 ra, word32 s1, word32 a2, word32 s3, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s5 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_fasttmr_entry:
l23042090:
	Mem22[0x4200DF81<32>:byte] = SLICE(CONVERT(Mem16[0x4200DF81<32>:byte], byte, word32) + 1<32>, byte, 0)
	word32 a3_143 = 0x4200DF81<32>
	word32 s2_103 = 0x4200DF81<32>
	word32 s4_105 = 0x42020000<32>
	word32 s3_104 = 0x42020000<32>
	s1_100 = s1
	ra_128 = ra
l230420BC:
	word32 ra_128
	word32 s1_100
	word32 s0_166 = Mem25[s4_105 + -340<i32>:int32]
l230420C0:
	branch s0_166 != 0<32> l230420D2
l230420D2:
	word32 a5_30 = CONVERT(Mem29[s2_103:byte], byte, word32)
	branch CONVERT(Mem29[s0_166 + 30<i32>:byte], byte, word32) == a5_30 l23042134
l23042134:
l230420DE:
	Mem34[s0_166 + 30<i32>:byte] = SLICE(a5_30, byte, 0)
	word32 a5_35 = CONVERT(Mem34[s0_166 + 26<i32>:uint16], uint16, word32)
	branch (a5_35 & 1<i32>) == 0<32> l23042104
l230420EC:
	Mem38[s0_166 + 26<i32>:word16] = SLICE(a5_35 | 2<i32>, word16, 0)
	word32 s11_481
	word32 s9_479
	word32 s10_480
	word32 s8_478
	word32 a4_475
	word32 a5_476
	word32 s6_477
	ra_128 = tcp_output(ra_128, s1_100, s0_166, a2, s7, mstatus, dwArg38, dwArg48, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s0_166, out s1_100, out a0, out a2, out a3_143, out a4_475, out a5_476, out s2_103, out s3_104, out s4_105, out s5, out s6_477, out s7, out s8_478, out s9_479, out s10_480, out s11_481, out mstatus)
	Mem76[s0_166 + 26<i32>:word16] = SLICE(CONVERT(Mem38[s0_166 + 26<i32>:uint16], uint16, word32) & 0xFFFFFFFC<32>, word16, 0)
l23042104:
	word32 a5_118 = CONVERT(Mem78[s0_166 + 26<i32>:uint16], uint16, word32)
	branch (a5_118 & 8<i32>) == 0<32> l2304211A
l2304210E:
	Mem82[s0_166 + 26<i32>:word16] = SLICE(a5_118 & 0xFFFFFFF7<32>, word16, 0)
	word32 s10_486
	word32 s11_487
	word32 s8_484
	word32 s9_485
	word32 a4_482
	word32 s6_483
	ra_128 = tcp_close_shutdown_fin(ra_128, s1_100, s0_166, a2, s7, mstatus, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, out s1_100, out a0, out a2, out a3_143, out a4_482, out a5_118, out s2_103, out s3_104, out s4_105, out s5, out s6_483, out s7, out s8_484, out s9_485, out s10_486, out s11_487, out mstatus)
l2304211A:
	word32 s0_122 = Mem119[s1_100 + 12<i32>:word32]
	branch a5_118 == 0<32> l23042130
l23042120:
	Mem127[s3_104 + 3764<i32>:byte] = 0<8>
	word32 s11_494
	word32 s9_492
	word32 s10_493
	word32 s8_491
	word32 s6_490
	word32 a4_489
	word32 s0_488
	ra_128 = tcp_process_refused_data(ra_128, s1_100, s0_122, s3_104, s4_105, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg58, s1, ra, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, out s0_488, out s1_100, out a0, out a2, out a3_143, out a4_489, out s2_103, out s3_104, out s4_105, out s5, out s6_490, out s7, out s8_491, out s9_492, out s10_493, out s11_494, out mstatus)
	branch CONVERT(Mem127[s3_104 + -332<i32>:byte], byte, word32) != 0<32> l230420BC
l23042130:
	s0_166 = s1_100
l230420C2:
	s1Out = s1_100
	a0Out = a0
	a3Out = a3_143
	s5Out = s5
	s7Out = s7
	mstatusOut = mstatus
	return ra_128
tcp_fasttmr_exit:


word32 tcp_shutdown(word32 ra, word32 a0, word32 a1, word32 a2, word32 s4, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_shutdown
//      lwip_netconn_do_close
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_shutdown_entry:
l23042138:
	branch a0 == 0<32> l23042192
l23042192:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2304213A:
	word32 a0_156
	word32 a3_10 = CONVERT(Mem9[a0 + 20<i32>:byte], byte, word32)
	word32 a4_11 = 1<32>
	branch a3_10 == 1<32> l23042196
l2304214C:
	branch a1 == 0<32> l23042176
l23042176:
	branch a2 == 0<32> l23042162
l23042178:
	a5 = 7<32>
	branch a3_10 >u 7<32> l23042196
l2304217E:
	word32 a4_16 = 1<32> << a3_10
	a4_11 = a4_16 & 152<i32>
	branch (a4_16 & 152<i32>) == 0<32> l23042196
l23042196:
	a0_156 = 0xFFFFFFF5<32>
l2304214E:
	word32 a4_19 = CONVERT(Mem9[a0 + 26<i32>:uint16], uint16, word32)
	Mem22[a0 + 26<i32>:word16] = SLICE(a4_19 | 16<i32>, word16, 0)
	a1 = 1<32>
	a4_11 = a4_19 | 16<i32>
	branch a2 != 0<32> l23042188
l23042188:
l2304218E_thunk_tcp_close_shutdown:
	word32 a0_39
	word32 a3_42
	word32 a4_43
	word32 a5_44
	word32 mstatus_47
	word32 s1_49
	word32 s3_53
	word32 s4_54
	word32 s5_55
	word32 s6_56
	word32 s7_57
	word32 s9_304
	word32 s11_306
	word32 s10_305
	word32 s8_303
	word32 s2_302
	word32 ra_48 = tcp_close_shutdown(ra, a0, a1, dwArg10, a3_10, a4_11, s4, s7, mstatus, dwArg10, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArgFC, dwArg0108, dwArg0118, out s1_49, out a0_39, out a3_42, out a4_43, out a5_44, out s2_302, out s3_53, out s4_54, out s5_55, out s6_56, out s7_57, out s8_303, out s9_304, out s10_305, out s11_306, out mstatus_47)
	s1Out = s1_49
	a0Out = a0_39
	a3Out = a3_42
	a4Out = a4_43
	a5Out = a5_44
	s3Out = s3_53
	s4Out = s4_54
	s5Out = s5_55
	s6Out = s6_56
	s7Out = s7_57
	mstatusOut = mstatus_47
	return ra_48
l2304215E:
	word32 a0_67 = Mem22[a0 + 120<i32>:word32]
	branch a0_67 != 0<32> l2304216C
l2304216C:
	word32 s0_70
	word32 s8_301
	word32 s2_300
	word32 a7_299
	word32 a0_296
	word32 a2_298
	word32 a1_297
	ra = pbuf_free(ra, a0_67, a3_10, a4_19 | 16<i32>, s4, mstatus, dwArg0118, out s0_70, out s1, out a0_296, out a1_297, out a2_298, out a3_10, out a4_11, out a5, out a7_299, out s2_300, out s3, out s4, out s5, out s6, out s8_301, out mstatus)
	Mem93[s0_70 + 120<i32>:word32] = 0<32>
l23042162:
	a0_156 = 0<32>
l23042164:
	s1Out = s1
	a0Out = a0_156
	a3Out = a3_10
	a4Out = a4_11
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
tcp_shutdown_exit:


word32 tcp_slowtmr(word32 ra, word32 a0, word32 a2, word32 a3, word32 s5, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArg010C, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +010C:[0..31]
// LiveOut: a3 a4 mstatus s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_slowtmr_entry:
l2304219A:
	Mem35[0x42020EA4<32>:word32] = Mem5[0x4201FEA4<32>:int32] + 1<32>
	Mem40[0x4200DF81<32>:byte] = SLICE(CONVERT(Mem35[0x4200DF81<32>:byte], byte, word32) + 1<32>, byte, 0)
	word32 s2_222 = 0x42020000<32>
	word32 a4_17 = 0x4200DF81<32>
	word32 s5_225 = 0x4200DF81<32>
	word32 s7_178 = 0x42020000<32>
	word32 s8_228 = 0x230863F0<32>
	word32 s9_229 = 0x2308DE94<32>
	ra_162 = ra
	mstatus_194 = mstatus
	a0_208 = a0
	a3_211 = a3
l230421EE:
	word32 mstatus_718
	word32 a0_716
	word32 a2_714
	word32 a3_710
	word32 a3_211
	word32 a0_208
	word32 mstatus_194
	word32 ra_162
	word32 s6_226 = 0x42020000<32>
	word32 s0_100 = Mem46[0x4201FEAC<32>:int32]
	word32 s10_124 = 0x7FFFFFE<32>
	word32 s3_223 = 0<32>
	word32 s4_224 = 0x7FFFFFF<32>
l23042200:
	word32 sp_204 = fp - 80<i32>
	branch s0_100 != 0<32> l23042232
l23042232:
	word32 s11_583
	word32 a5_55 = CONVERT(Mem54[s5_225:byte], byte, word32)
	a4_17 = CONVERT(Mem54[s0_100 + 30<i32>:byte], byte, word32)
	branch a4_17 != a5_55 l23042248
l23042248:
	word32 a4_61
	a3_211 = CONVERT(Mem54[s0_100 + 20<i32>:byte], byte, word32)
	Mem58[s0_100 + 30<i32>:byte] = SLICE(a5_55, byte, 0)
	word32 a5_60 = CONVERT(Mem58[s0_100 + 66<i32>:byte], byte, word32)
	branch a3_211 != 2<32> l2304229E
l2304229E:
	a4_61 = 0xB<32>
l2304225A:
	a4_61 = 5<32>
l2304225C:
	word32 s1_219 = 1<32>
	branch a4_61 <u a5_60 l230422B2
l23042262:
	word32 s1_68 = CONVERT(Mem58[s0_100 + 161<i32>:byte], byte, word32)
	branch s1_68 == 0<32> l230423B6
l230423B6:
	word32 a5_69 = CONVERT(Mem58[s0_100 + 48<i32>:int16], int16, int32)
	branch a5_69 < 0<32> l23042456
l230423BE:
	branch a5_69 != s4_224 l23042450
l23042450:
	Mem73[s0_100 + 48<i32>:word16] = SLICE(a5_69 + 1<32>, word16, 0)
l23042456:
	a4_61 = CONVERT(Mem75[s0_100 + 48<i32>:int16], int16, int32)
	a5_69 = CONVERT(Mem75[s0_100 + 64<i32>:int16], int16, int32)
	branch a4_61 < a5_69 l230422B0
l23042462:
l230423C2:
	word32 a5_88
	word32 s1_90
	word32 a4_2062
	s0_100 = tcp_rexmit_rto_prepare(s1_68, a4_61, a5_69, out s1_90, out a0_208, out a2, out a3_211, out a4_2062, out a5_88, out s2_222, out s3_223, out s4_224, out s8_228)
	branch a0_208 == 0<32> l230423D6
l230423CA:
	s0_100 = Mem97[a5_88 + 112<i32>:word32]
	branch a5_88 != 0<32> l230422B0
l230423D0:
	s0_100 = Mem97[a5_88 + 108<i32>:word32]
	branch a5_88 == 0<32> l230422B0
l230423D6:
	branch CONVERT(Mem97[s0_100 + 20<i32>:byte], byte, word32) == 2<32> l23042410
l230423E0:
	word32 a5_108 = (CONVERT(Mem97[s0_100 + 60<i32>:int16], int16, int32) >> 3<i32>) + CONVERT(Mem97[s0_100 + 62<i32>:int16], int16, int32)
	word32 a4_109 = CONVERT(Mem97[s0_100 + 66<i32>:byte], byte, word32)
	branch a4_109 <=u 0xC<32> l230423F8
l230423F6:
	a4_109 = 0xC<32>
l230423F8:
	word32 a5_119 = a5_108 << CONVERT(Mem97[(a4_109 & 255<i32>) + s8_228:byte], byte, word32)
	branch s10_124 >= a5_119 l2304240C
l2304240A:
	a5_119 = s4_224
l2304240C:
	Mem132[s0_100 + 64<i32>:word16] = SLICE(a5_119, word16, 0)
l23042410:
	word32 a4_135 = CONVERT(Mem134[s0_100 + 72<i32>:uint16], uint16, word32)
	word32 a5_136 = CONVERT(Mem134[s0_100 + 96<i32>:uint16], uint16, word32)
	Mem137[s0_100 + 48<i32>:word16] = 0<16>
	branch a4_135 >=u a5_136 l23042422
l23042420:
	a5_136 = a4_135
l23042422:
	word32 a3_141 = CONVERT(Mem137[s0_100 + 50<i32>:uint16], uint16, word32)
	word32 a5_143 = a5_136 << 16<i32>
	Mem148[s0_100 + 74<i32>:word16] = SLICE(a5_143 >>u 17<i32>, word16, 0)
	word32 a4_149 = a3_141 << 0x11<32> >>u 16<i32>
	branch a5_143 >>u 17<i32> >=u a4_149 l23042440
l2304243C:
	Mem150[s0_100 + 74<i32>:word16] = SLICE(a4_149, word16, 0)
l23042440:
	Mem153[s0_100 + 72<i32>:word16] = SLICE(a3_141, word16, 0)
	Mem154[s0_100 + 106<i32>:word16] = 0<16>
	word32 s11_2064
	word32 a4_2063
	ra_162 = tcp_rexmit_rto_commit(ra_162, s1_90, s0_100, a2, s7_178, mstatus_194, dwArg08, dwArg18, dwArg38, s7, s5, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, out s0_100, out s1_219, out a0_208, out a2, out a3_211, out a4_2063, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out s10_124, out s11_2064, out mstatus_194)
l2304226A:
	branch CONVERT(Mem58[s0_100 + 162<i32>:byte], byte, word32) >u 0xB<32> l23042464
l23042464:
	s1_219 = 1<32>
l23042274:
	word32 s1_242 = s1_68 + s9_229
	word32 a4_243 = CONVERT(Mem58[s1_242 + -1<i32>:byte], byte, word32)
	word32 a5_244 = CONVERT(Mem58[s0_100 + 160<i32>:byte], byte, word32)
	branch a5_244 <u a4_243 l230422A2
l230422A2:
	word32 a5_246 = a5_244 + 1<32> & 255<i32>
	Mem247[s0_100 + 160<i32>:byte] = SLICE(a5_246, byte, 0)
	branch a5_246 >=u a4_243 l23042282
l23042282:
	branch CONVERT(Mem249[s0_100 + 96<i32>:uint16], uint16, word32) == 0<32> l23042398
l23042398:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg72 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg296 = <invalid>
	tcp_zero_window_probe(ra, a0, s4, s7, mstatus, stackArg72, stackArg88, stackArg120, stackArg136, stackArg152, stackArg184, stackArg200, stackArg248, stackArg296)
	a0_208 = s0_100
	branch s0_100 != 0<32> l230422B0
l2304228A:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg88 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg264 = <invalid>
	tcp_split_unsent_seg(ra, s0, a1, a3, a4, mstatus, stackArg88, stackArg104, stackArg136, stackArg152, stackArg168, stackArg200, stackArg216, stackArg264)
	a0_208 = s0_100
	branch s0_100 != 0<32> l230423A0
l23042294:
	word32 s1_2029
	word32 s11_2032
	word32 a4_2030
	word32 a5_2031
	ra_162 = tcp_output(ra_162, s1_242, s0_100, a2, s7_178, mstatus_194, dwArg08, dwArg18, dwArg38, s7, s5, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, out s0_100, out s1_2029, out a0_208, out a2, out a3_211, out a4_2030, out a5_2031, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out s10_124, out s11_2032, out mstatus_194)
	branch a0_208 == 0<32> l230422B0
l2304229C:
l230423A0:
	word32 a5_293 = CONVERT(Mem249[s0_100 + 161<i32>:byte], byte, word32)
	Mem294[s0_100 + 160<i32>:byte] = 0<8>
	branch a5_293 >u 6<32> l230422B0
l230423AE:
	Mem297[s0_100 + 161<i32>:byte] = SLICE(a5_293 + 1<32>, byte, 0)
l230422B0:
	s1_219 = 0<32>
l230422B2:
	word32 a5_303 = CONVERT(Mem301[s0_100 + 20<i32>:byte], byte, word32)
	branch a5_303 != 6<32> l230422DA
l230422BC:
	branch (CONVERT(Mem301[s0_100 + 26<i32>:uint16], uint16, word32) & 0x10<32>) == 0<32> l230422DA
l230422C4:
	s0_100 = Mem301[a3_211 + 32<i32>:word32]
	a3_211 = 40<i32>
	branch Mem301[s2_222 + -348<i32>:int32] - a3_211 <=u 40<i32> l230422DA
l230422D4:
	s1_219 = s1_219 + 1<32> & 255<i32>
l230422DA:
	word32 s11_329 = CONVERT(Mem301[s0_100 + 9<i32>:byte], byte, word32)
	word32 s11_330 = s11_329 & 8<i32>
	branch (s11_329 & 8<i32>) == 0<32> l23042322
l230422E6:
	branch a5_303 == 4<32> l230422F4
l230422EC:
	s11_330 = 0<32>
	branch a5_303 != 7<32> l23042322
l230422F4:
	a0_208 = Mem301[s0_100 + 152<i32>:int32]
	word32 a1_339 = Mem301[s0_100 + 148<i32>:int32]
	a2 = 500<i32>
	word32 s0_346 = Mem301[a5_303 + 32<i32>:word32]
	a3_211 = Mem301[s2_222 + -348<i32>:int32] - a5_303
	branch a0_208 + Mem301[s0_100 + 156<i32>:int32] + a1_339 >>u 500<i32> >=u a3_211 l23042468
l23042468:
	word32 a5_353 = CONVERT(Mem301[s0_346 + 163<i32>:byte], byte, word32) + a0_208 + a1_339
	s11_330 = 0<32>
	a5_303 = a5_353 >>u 500<i32>
	branch a5_353 >>u 500<i32> >=u a3_211 l23042322
l2304247C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg16 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg296 = <invalid>
	tcp_keepalive(ra, s0, a0, s7, mstatus, stackArg16, stackArg88, stackArg104, stackArg136, stackArg152, stackArg168, stackArg200, stackArg216, stackArg248, stackArg264, stackArg296)
	a0_208 = s0_346
	branch s0_346 != 0<32> l23042322
l23042486:
	word32 a5_356 = CONVERT(Mem301[s0_346 + 163<i32>:byte], byte, word32)
	Mem358[s0_346 + 163<i32>:byte] = SLICE(a5_356 + 1<32>, byte, 0)
	a5_303 = a5_356 + 1<32>
l2304231A:
	s1_219 = s1_219 + 1<32> & 255<i32>
	s11_330 = 1<32>
l23042322:
	s0_100 = Mem365[a5_303 + 116<i32>:word32]
	branch a5_303 == 0<32> l23042342
l23042326:
	s0_100 = Mem365[a5_303 + 32<i32>:word32]
	a3_211 = 6<32>
	word32 a4_371 = Mem365[s2_222 + -348<i32>:int32] - a5_303
	word32 a5_372 = CONVERT(Mem365[s0_100 + 64<i32>:int16], int16, int32)
	branch a4_371 <u a5_372 + 6<32> l23042342
l2304233C:
	word32 a4_2033
	s1_219 = tcp_free_ooseq(ra_162, 6<32>, a4_371, a5_372 + 6<32>, s4_224, mstatus_194, dwArg98, out a0_208, out a2, out a3_211, out a4_2033)
l23042342:
	word32 a5_411 = CONVERT(Mem365[s0_100 + 20<i32>:byte], byte, word32)
	branch a5_411 != 3<32> l23042492
l23042492:
	word32 a5_422
	word32 a4_423
	branch a5_411 != 9<32> l23042500
l23042500:
	word32 a4_414 = 5<32>
	branch a5_411 == 5<32> l2304250C
l23042506:
	a4_414 = 8<32>
	branch a5_411 != 8<32> l23042362
l2304250C:
	s0_100 = Mem365[a4_414 + 32<i32>:word32]
	a5_422 = Mem365[s2_222 + -348<i32>:int32] - a4_414
	a4_423 = 0xA<32>
l23042498:
	s0_100 = Mem365[0x29<32>:word32]
	a5_422 = Mem365[s2_222 + -348<i32>:int32] - 9<32>
	a4_423 = 240<i32>
l230424A4:
	branch a4_423 >=u a5_422 l23042362
l2304234C:
	s0_100 = Mem365[0x23<32>:word32]
	branch Mem365[s2_222 + -348<i32>:int32] <=u 0x2B<32> l23042362
l2304235C:
	s1_219 = s1_219 + 1<32> & 255<i32>
l23042362:
	branch s1_219 != 0<32> l230424A8
l230424A8:
	word32 a1_479
	word32 a2_480
	word32 a0_2037
	word32 a5_477
	word32 a4_476
	word32 a3_481
	tcp_pcb_purge(ra_162, s0_100, a3_211, s4_224, mstatus_194, dwArg88, dwArg98, dwArgC8, out a0_2037, out a1_479, out a2_480, out a3_481, out a4_476, out a5_477)
	branch s3_223 == 0<32> l23042518
l23042518:
	Mem516[s6_226 + 3756<i32>:word32] = a5_477
l230424B8:
	Mem517[s3_223 + 12<i32>:word32] = a5_477
l230424BC:
	branch s11_330 == 0<32> l230424D8
l230424C0:
	word32 s1_2039
	word32 a0_2040
	word32 s0_2038
	ra_162 = tcp_rst(ra_162, Mem526[a1_479 + 80<i32>:word32], a1_479, a2_480, s7_178, mstatus_194, dwLoc08, dwArg08, dwArg28, dwArg38, s7, s5, dwArg68, dwArg78, dwArgA8, dwArgD8, out s0_2038, out s1_2039, out a0_2040, out a3_481, out a4_476, out a5_477, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out mstatus_194)
l230424D8:
	word32 s0_581 = Mem526[a5_477 + 16<i32>:word32]
	s11_583 = Mem526[s0_581 + 12<i32>:int32]
	word32 a5_596
	word32 a1_2041
	word32 s1_597 = tcp_free(s0_581, a3_481, a4_476, mstatus_194, out a0_208, out a1_2041, out a2, out a3_211, out a4_17, out a5_596)
	Mem600[s7_178 + 3764<i32>:byte] = 0<8>
	branch s1_597 == 0<32> l230424FC
l230424EC:
	call s1_597 (retsize: 0;)
		uses: a0:a5_596,a3:a3_594,a4:a4_595,mstatus:mstatus_586
		defs: a0:a0_604,a2:a2_606,a3:a3_607,a4:a4_608
	branch CONVERT(Mem600[s7_178 + -332<i32>:byte], byte, word32) != 0<32> l230421EE
l230424FC:
	s0_100 = s3_223
l23042366:
	a4_17 = CONVERT(Mem365[s0_100 + 29<i32>:byte], byte, word32)
	s11_583 = Mem365[s0_100 + 12<i32>:int32]
	word32 a5_621 = CONVERT(Mem365[s0_100 + 28<i32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem622[s0_100 + 28<i32>:byte] = SLICE(a5_621, byte, 0)
	branch a5_621 <u a4_17 l23042242
l23042380:
	word32 a5_623 = Mem622[s0_100 + 140<i32>:int32]
	Mem624[s0_100 + 28<i32>:byte] = 0<8>
	Mem625[s7_178 + 3764<i32>:byte] = 0<8>
	branch a5_623 != 0<32> l2304251E
l2304251E:
	word32 s0_638 = Mem625[a0_208 + 16<i32>:word32]
	word32 a7_719
	word32 t1_720
	word32 t4_721
	word32 t5_722
	word32 t6_723
	call a5_623 (retsize: 0;)
		uses: a0:a0_716,a1:s0_638,a2:a2_714,a3:a3_710,a7:a7_719,mstatus:mstatus_718,ra:ra_377,s0:s0_638,s1:s1_438,s10:s10_687,s11:s11_619,s2:s2_314,s3:s3_490,s4:s4_389,s5:s5_646,s6:s6_505,s7:s7_544,s8:s8_660,s9:s9_674,t1:t1_720,t4:t4_721,t5:t5_722,t6:t6_723
		defs: a0:a0_716,a2:a2_714,a3:a3_710,a4:a4_701,a7:a7_719,mstatus:mstatus_718,ra:ra_702,s0:s0_703,s1:s1_704,s10:s10_708,s11:s11_709,s2:s2_695,s4:s4_706,s5:s5_697,s6:s6_707,s7:s7_698,s8:s8_699,s9:s9_700,sp:sp_694,t1:t1_720,t4:t4_721,t5:t5_722,t6:t6_723
	mstatus_194 = mstatus_718
	a2 = a2_714
	a0_208 = a0_716
	a3_211 = a3_710
	branch CONVERT(Mem625[s7_178 + -332<i32>:byte], byte, word32) != 0<32> l230421EE
l2304252C:
	mstatus_194 = mstatus_718
	a2 = a2_714
	a0_208 = a0_716
	a3_211 = a3_710
	branch a0_716 != 0<32> l23042242
l23042530:
	a2 = a2_714
	mstatus_194 = mstatus_718
l23042390:
	word32 a5_2035
	word32 s3_2036
	word32 s1_2034
	ra_162 = tcp_output(ra_162, s1_219, s0_100, a2, s7_178, mstatus_194, Mem625[sp_204 + 88<i32>:word32], Mem625[sp_204 + 104<i32>:word32], Mem625[sp_204 + 136<i32>:word32], Mem625[sp_204 + 148<i32>:word32], Mem625[sp_204 + 152<i32>:word32], Mem625[sp_204 + 168<i32>:word32], Mem625[sp_204 + 184<i32>:word32], Mem625[sp_204 + 200<i32>:word32], Mem625[sp_204 + 204<i32>:word32], Mem625[sp_204 + 216<i32>:word32], Mem625[sp_204 + 232<i32>:word32], Mem625[sp_204 + 264<i32>:word32], Mem625[sp_204 + 268<i32>:word32], Mem625[sp_204 + 280<i32>:word32], out s0_100, out s1_2034, out a0_208, out a2, out a3_211, out a4_17, out a5_2035, out s2_222, out s3_2036, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out s10_124, out s11_583, out mstatus_194)
l2304223E:
	s11_583 = Mem54[s0_100 + 12<i32>:int32]
l23042242:
	s3_223 = s0_100
	s0_100 = s11_583
l23042202:
	word32 s1_780 = Mem54[0x4201FEA0<32>:int32]
l23042210:
	branch s1_780 != 0<32> l23042532
l23042532:
	word32 s1_788 = Mem785[a4_17 + 32<i32>:word32]
	branch Mem785[s2_222 + -348<i32>:int32] - a4_17 <=u 240<i32> l2304254E
l2304254E:
	s0_100 = s1_788
	s1_780 = Mem785[s1_788 + 12<i32>:word32]
l2304253E:
	word32 a4_798
	word32 a5_799
	word32 a3_803
	word32 a1_2014
	word32 a2_2015
	word32 a0_2013
	tcp_pcb_purge(ra_162, s1_788, a3_211, 240<i32>, mstatus_194, dwArg88, dwArg98, dwArgC8, out a0_2013, out a1_2014, out a2_2015, out a3_803, out a4_798, out a5_799)
	word32 s1_806 = Mem785[a5_799 + 12<i32>:word32]
	branch s0_100 != 0<32> l23042554
l23042554:
	Mem808[a5_799 + 12<i32>:word32] = s0_100
l23042548:
	Mem810[0x42020EA0<32>:word32] = a5_799
l23042556:
	word32 s5_813 = Mem812[s1_806 + 12<i32>:int32]
	word32 a0_2016
	word32 a2_2018
	word32 a5_2019
	word32 a1_2017
	tcp_free(s1_806, a3_803, a4_798, mstatus_194, out a0_2016, out a1_2017, out a2_2018, out a3_211, out a4_17, out a5_2019)
	s1_780 = s5_813
l23042214:
	0<32> = dwArg010C
	a3Out = s2
	a4Out = a4_17
	mstatusOut = mstatus_194
	return dwLoc4C
tcp_slowtmr_exit:


word32 tcp_tmr(word32 ra, word32 s1, word32 a2, word32 s3, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg010C, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_tcp_timer
// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +010C:[0..31]
// LiveOut: a3 a4 mstatus s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_tmr_entry:
l23042564:
	word32 a0_11
	word32 a3_14
	word32 mstatus_19
	word32 s1_22
	word32 s5_28
	word32 s7_30
	word32 ra_20 = tcp_fasttmr(ra, s1, a2, s3, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg64, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, out s1_22, out a0_11, out a3_14, out s5_28, out s7_30, out mstatus_19)
	word32 a5_44 = CONVERT(Mem5[0x4200DF80<32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem45[0x4200DF80<32>:byte] = SLICE(a5_44, byte, 0)
	branch (a5_44 & 1<32>) == 0<32> l2304258E
l2304258E:
	a3Out = a3_14
	a4Out = 0x4200DF80<32>
	mstatusOut = mstatus_19
	return s1_22
l23042586:
l2304258A_thunk_tcp_slowtmr:
	word32 a3_54
	word32 a4_55
	word32 mstatus_59
	word32 s1_62 = tcp_slowtmr(ra_20, a0_11, dwArg10, a3_14, s5_28, s7_30, mstatus_19, dwArg08, dwArg18, dwArg28, dwArg38, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArg010C, out a3_54, out a4_55, out mstatus_59)
	a3Out = a3_54
	a4Out = a4_55
	mstatusOut = mstatus_59
	return s1_62
tcp_tmr_exit:


void tcp_get_pcbs(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stats_netstat
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
tcp_get_pcbs_entry:
l23042594:
	Mem6[0x23086430<32>:word32] = a0
	return
tcp_get_pcbs_exit:


word32 tcp_get_next_optbyte(ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_parseopt.isra.0.part.1
// MayUse: 
// LiveOut: a0 a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
tcp_get_next_optbyte_entry:
l230425A2:
	word32 a5_6 = CONVERT(Mem0[0x4200DF98<32>:uint16], uint16, word32)
	Mem8[0x4200DF98<32>:word16] = SLICE(a5_6 + 1<i32>, word16, 0)
	word32 a4_10 = Mem8[0x4200DFA4<32>:int32]
	branch a4_10 == 0<32> l230425CC
l230425C0:
	word32 a3_12 = CONVERT(Mem8[0x4200DFA0<32>:uint16], uint16, word32)
	branch a5_6 >=u a3_12 l230425DC
l230425DC:
	word32 a0_16 = CONVERT(Mem8[(a5_6 - a3_12 & 255<i32>) + a4_10:byte], byte, word32)
	a4Out = a4_10
	return a0_16
l230425CC:
	word32 a4_19 = Mem8[0x4200DF9C<32>:int32]
	word32 a0_22 = CONVERT(Mem8[a5_6 + a4_19 + 20<i32>:byte], byte, word32)
	a4Out = a4_19
	return a0_22
tcp_get_next_optbyte_exit:


word32 tcp_oos_insert_segment(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, ptr32 & s0Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31]
// LiveOut: mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_oos_insert_segment_entry:
l230425EA:
	word32 s1_103 = Mem13[a5 + 16<i32>:word32]
	word32 a5_255
	word32 a0_23 = lwip_htons(CONVERT(Mem13[a5 + 12<i32>:byte], byte, word32) | CONVERT(Mem13[a5 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_255)
	word32 s2_105 = a1
	word32 a0_110 = a0_23 & 1<32>
	branch (a0_23 & 1<32>) != 0<32> l23042674
l23042674:
	word32 a5_260
	word32 a4_259
	word32 a1_257
	word32 a3_258
	word32 a0_256
	s1_103 = tcp_segs_free(ra, s0, a1, a3, a4, s4, mstatus, dwArgD8, out a0_256, out a1_257, out a3_258, out a4_259, out a5_260)
l23042610:
l23042614:
	word32 a4_42 = Mem41[s2_105 + 16<i32>:int32]
	word32 a2_44 = Mem41[0x4200DF94<32>:int32]
	word32 a1_57 = CONVERT(Mem41[a4_42 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem41[a4_42 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem41[a4_42 + 4<i32>:byte], byte, word32) | CONVERT(Mem41[a4_42 + 5<i32>:byte], byte, word32) << 8<i32>))
	word32 a5_49 = CONVERT(Mem41[s1_103 + 8<i32>:uint16], uint16, word32) + a2_44
	word32 a3_60 = a5_49 - (CONVERT(Mem41[s2_105 + 8<i32>:uint16], uint16, word32) + a1_57)
	branch a3_60 >= 0<32> l2304267E
l2304267E:
	word32 a5_66
	branch (lwip_htons(CONVERT(Mem41[a4_42 + 12<i32>:byte], byte, word32) | CONVERT(Mem41[a4_42 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_66) & 1<32>) == 0<32> l230426B8
l23042692:
	word32 a5_75
	word32 a0_79 = CONVERT(SLICE(lwip_htons(1<32>, out a5_75) | (CONVERT(Mem41[a5_66 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem41[a5_66 + 12<i32>:byte], byte, word32)), word16, 0), word16, word32)
	Mem80[a5_75 + 12<i32>:byte] = SLICE(a0_79, byte, 0)
	Mem82[a5_75 + 13<i32>:byte] = SLICE(a0_79 >>u 8<i32>, byte, 0)
l230426B8:
	s0 = Mem84[s2_105:int32]
	word32 a5_274
	word32 a3_272
	word32 a4_273
	word32 a2_271
	word32 a1_270
	s1_103 = tcp_seg_free(ra, s2_105, a3_60, a4_42, s4, mstatus, dwArgE8, out a0_110, out a1_270, out a2_271, out a3_272, out a4_273, out a5_274)
	branch s0 == 0<32> l2304267A
l2304267A:
	s2_105 = 0<32>
l230426C4:
	s2_105 = s0
l2304264C:
	branch a5_49 - a1_57 <= 0<32> l23042662
l23042652:
	word32 a1_112 = CONVERT(SLICE(a1_57 - a2_44, word16, 0), word16, word32)
	Mem113[Mem41[a0_110 + 4<i32>:word32] + 8<i32>:word16] = SLICE(a1_112, word16, 0)
	word32 s8_269
	word32 s6_268
	word32 s4_266
	word32 s5_267
	word32 s3_265
	word32 a4_263
	word32 a5_264
	word32 a3_262
	word32 a2_261
	ra = pbuf_realloc(ra, a0_110, a1_112, a3_60, a4_42, s4, mstatus, dwArgF8, out s1_103, out a2_261, out a3_262, out a4_263, out a5_264, out s2_105, out s3_265, out s4_266, out s5_267, out s6_268, out s8_269, out mstatus)
l23042662:
	Mem147[s1_103:word32] = s2_105
	s0Out = s0
	mstatusOut = mstatus
	return ra
tcp_oos_insert_segment_exit:


word32 tcp_parseopt.isra.0.part.1(word32 a0, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a0:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 s0 s1 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
tcp_parseopt.isra.0.part.1_entry:
l230426C8:
	Mem21[0x4200EF98<32>:word16] = 0<16>
	a0_156 = a0
l230426FC:
	word32 a0_156
	word32 s0_37 = CONVERT(Mem36[0x4200DFA8<32>:uint16], uint16, word32)
	branch CONVERT(Mem36[0x4200DF98<32>:uint16], uint16, word32) <u s0_37 l23042720
l23042720:
	a0_156 = tcp_get_next_optbyte(out a4)
	branch a0_156 == 1<32> l230426FC
l23042728:
	branch CONVERT(SLICE(a0_156, byte, 0), byte, int32) == 0<32> l23042708
l23042730:
	branch a0_156 != 2<32> l23042772
l23042772:
	a0_156 = tcp_get_next_optbyte(out a4)
	branch a0_156 <=u 1<32> l23042708
l2304277A:
	Mem56[0x4200DF98<32>:word16] = SLICE(CONVERT(Mem36[0x4200DF98<32>:uint16], uint16, word32) + 0xFFFFFFFE<32> + a0_156, word16, 0)
l23042734:
	a0_156 = tcp_get_next_optbyte(out a4)
	branch a0_156 != 4<32> l23042708
l2304273C:
	branch CONVERT(Mem36[0x4200DF98<32>:uint16], uint16, word32) + 1<32> >= s0_37 l23042708
l23042746:
	word32 a4_183
	a0_156 = CONVERT(SLICE(tcp_get_next_optbyte(out a4) | (tcp_get_next_optbyte(out a4_183) << 0x18<32>) >>u 16<i32>, word16, 0), word16, word32)
	branch CONVERT(SLICE(a0_156 + -1<i32>, word16, 0), word16, word32) <=u 687<i32> l2304276C
l23042768:
	a0_156 = 688<i32>
l2304276C:
	Mem86[a0:word16] = SLICE(a0_156, word16, 0)
l23042708:
	0<32> = dwArg0128
	s1Out = 0x4200DF98<32>
	a0Out = a0_156
	a4Out = a4
	s2Out = 0x4200E000<32>
	s3Out = a0
	s4Out = dwArg78
	s5Out = 1<32>
	s6Out = 2<32>
	s7Out = 4<32>
	s8Out = s5
	return s4
tcp_parseopt.isra.0.part.1_exit:


word32 tcp_input_delayed_close(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 s7, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_input_delayed_close_entry:
l23042788:
	branch (CONVERT(Mem0[0x4200DF90<32>:byte], byte, word32) & 0x10<32>) == 0<32> l230427CE
l230427CE:
	s1Out = s1
	a0Out = 0<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23042794:
	word32 ra_23
	word32 a5_14 = CONVERT(Mem12[a0 + 26<i32>:uint16], uint16, word32)
	word32 s0_15 = a0
	word32 a5_16 = a5_14 & 0x10<32>
	ra_23 = ra
	branch (a5_14 & 0x10<32>) != 0<32> l230427B0
l230427A4:
	a5_16 = Mem12[a0 + 144<i32>:int32]
	ra_23 = ra
	branch a5_16 == 0<32> l230427B0
l230427AA:
	word32 a2_26
	word32 s1_93
	word32 tp_94
	word32 a6_95
	word32 a7_96
	word32 s10_97
	word32 s11_98
	word32 s2_99
	word32 s3_100
	word32 s5_101
	word32 s6_102
	word32 s8_103
	word32 s9_104
	word32 t0_105
	word32 t1_106
	word32 t3_107
	word32 t4_108
	word32 t5_109
	word32 t6_110
	call a5_16 (retsize: 0;)
		uses: a0:Mem12[a0 + 16<i32>:word32],a1:0xFFFFFFF1<32>,a2:a2_26,a3:a3,a4:a4,a6:a6_95,a7:a7_96,mstatus:mstatus,ra:ra,s0:a0,s1:s1_93,s10:s10_97,s11:s11_98,s2:s2_99,s3:s3_100,s4:s4,s5:s5_101,s6:s6_102,s7:s7,s8:s8_103,s9:s9_104,t0:t0_105,t1:t1_106,t3:t3_107,t4:t4_108,t5:t5_109,t6:t6_110,tp:tp_94
		defs: a2:a2_26,a5:a5_21,a6:a6_95,a7:a7_96,ra:ra_23,s0:s0_22,s1:s1_93,s10:s10_97,s11:s11_98,s2:s2_99,s3:s3_100,s5:s5_101,s6:s6_102,s8:s8_103,s9:s9_104,t0:t0_105,t1:t1_106,t3:t3_107,t4:t4_108,t5:t5_109,t6:t6_110,tp:tp_94
l230427B0:
	word32 a3_48
	word32 a4_49
	word32 mstatus_55
	word32 s10_57
	word32 s11_58
	word32 s2_59
	word32 s3_60
	word32 s4_61
	word32 s5_62
	word32 s6_63
	word32 s7_64
	word32 s8_65
	word32 s9_66
	word32 s1_207
	word32 a0_208
	word32 ra_56 = tcp_pcb_remove(ra_23, s0_15, a3, a4, a5_16, s4, s7, mstatus, dwArg38, dwArg48, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s1_207, out a0_208, out a3_48, out a4_49, out s2_59, out s3_60, out s4_61, out s5_62, out s6_63, out s7_64, out s8_65, out s9_66, out s10_57, out s11_58, out mstatus_55)
	word32 a3_77
	word32 a4_78
	word32 a0_209
	word32 a1_210
	word32 a2_211
	word32 a5_212
	s1Out = tcp_free(s0_15, a3_48, a4_49, mstatus_55, out a0_209, out a1_210, out a2_211, out a3_77, out a4_78, out a5_212)
	a0Out = 1<32>
	a2Out = dwArg10
	a3Out = a3_77
	a4Out = a4_78
	s2Out = s2_59
	s3Out = s3_60
	s4Out = s4_61
	s5Out = s5_62
	s6Out = s6_63
	s7Out = s7_64
	s8Out = s8_65
	s9Out = s9_66
	s10Out = s10_57
	s11Out = s11_58
	mstatusOut = mstatus_55
	return ra_56
tcp_input_delayed_close_exit:


word32 tcp_free_acked_segments.isra.3(word32 ra, word32 a0, word32 a1, word32 a4, word32 mstatus, word32 dwArgE8, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a1 a2 a4 a5 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
tcp_free_acked_segments.isra.3_entry:
l230427D2:
	word32 s0_21 = a1
l230427EE:
	branch s0_21 == 0<32> l2304283E
l230427F0:
	word32 a5_41
	word32 a3_151
	word32 a0_38 = lwip_htonl(CONVERT(Mem26[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem26[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem26[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem26[a4 + 4<i32>:byte], byte, word32))), out a3_151, out a4, out a5_41)
	s0_21 = Mem26[a5_41 + 16<i32>:word32]
	word32 s1_44 = CONVERT(Mem26[s0_21 + 8<i32>:uint16], uint16, word32)
	word32 a5_152
	word32 a0_49 = lwip_htons(CONVERT(Mem26[a5_41 + 12<i32>:byte], byte, word32) | CONVERT(Mem26[a5_41 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_152)
	a5 = Mem26[0x4200DF84<32>:int32]
	word32 a0_54 = CONVERT((a0_49 & 3<32>) != 0<32>, bool, word32)
	s5 = a0_38
	s1 = s1_44 - a5 + a0_38 + a0_54
	branch s1 <= 0<32> l23042852
l23042852:
	word32 s0_59 = Mem26[s1:word32]
	word32 a0_60 = pbuf_clen(a0_54)
	word32 a3_66 = CONVERT(Mem26[0x4200DF8A<32>:uint16], uint16, word32)
	Mem68[a0:word16] = SLICE(CONVERT(Mem26[a0:uint16], uint16, word32) - a0_60, word16, 0)
	Mem73[0x4200DF8A<32>:word16] = SLICE(CONVERT(Mem68[s0_59 + 8<i32>:uint16], uint16, word32) + a3_66, word16, 0)
	s0_21 = s1
	word32 a0_153
	word32 a2_154
	word32 a3_155
	s1 = tcp_seg_free(ra, s0_59, a3_66, 0x4200DF8A<32>, 0x4200E000<32>, mstatus, dwArgE8, out a0_153, out a1, out a2_154, out a3_155, out a4, out a5)
l2304283E:
	a0Out = s0_21
	a1Out = a1
	a2Out = dwArg48
	a4Out = a4
	a5Out = a5
	s2Out = a0
	s3Out = 0x4200E000<32>
	s4Out = dwArg04
	s5Out = s5
	return s1
tcp_free_acked_segments.isra.3_exit:


word32 tcp_receive(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 s5, word32 s7, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s7:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_receive_entry:
l23042882:
	word32 s5_115
	word32 a5_5 = CONVERT(Mem0[0x4200DF88<32>:byte], byte, word32)
	word32 s3_113 = 0x4200DF94<32>
	word32 s4_114 = 0x4200DFAA<32>
	s5_115 = s5
	branch (a5_5 & 0x10<32>) == 0<32> l23042A0C
l230428B6:
	word32 a0_33 = Mem26[(a5_5 & 0x10<32>) + 84<i32>:word32]
	word32 a1_32 = Mem26[0x4200DF94<32>:int32]
	word32 a6_35 = CONVERT(Mem26[a0_33 + 20<i32>:byte], byte, word32)
	a3 = CONVERT(Mem26[a0_33 + 96<i32>:uint16], uint16, word32)
	a0 = (a5_5 & 0x10<32>) - a1_32
	word32 a4_105 = Mem26[0x4200DF84<32>:int32]
	s1 = 0x4200DF84<32>
	branch a0 < 0<32> l23042904
l230428DA:
	branch (a5_5 & 0x10<32>) != a1_32 l230428E6
l230428DE:
	branch a2 - a4_105 < 0<32> l23042904
l230428E6:
	branch a2 != a4_105 l2304292E
l230428EA:
	a0 = Mem26[0x4200DF9C<32>:int32]
	branch a3 >=u (CONVERT(Mem26[a0 + 15<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem26[a0 + 14<i32>:byte], byte, word32)) l2304292E
l23042904:
	word32 a0_55 = Mem26[0x4200DF9C<32>:int32]
	a0 = CONVERT(Mem26[a0 + 98<i32>:uint16], uint16, word32)
	word32 a5_62 = CONVERT(Mem26[a0_55 + 15<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem26[a0_55 + 14<i32>:byte], byte, word32)
	Mem63[a0 + 96<i32>:word16] = SLICE(a5_62, word16, 0)
	branch a0 >=u a5_62 l2304292A
l23042926:
	Mem64[a0 + 98<i32>:word16] = SLICE(a5_62, word16, 0)
l2304292A:
	Mem69[a1_32 + 84<i32>:word32] = a0
	Mem72[a4_105 + 88<i32>:word32] = a0
l2304292E:
	word32 a5_106
	word32 s0_319 = Mem74[a1_32 + 68<i32>:word32]
	word32 a5_77 = a4_105 - a1_32
	branch a5_77 > 0<32> l23042C56
l23042C56:
	word32 s0_81 = Mem74[a3 + 80<i32>:word32]
	branch a4_105 - a3 > 0<32> l23042DA6
l23042DA6:
	word32 s8_2946
	ra = tcp_send_empty_ack(ra, s0_81, s0_81, s7, mstatus, dwArg28, dwArg38, s5, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, out s1, out a0, out a2, out a3, out a4_105, out a5_106, out s2, out s3_113, out s4_114, out s5_115, out s6, out s7, out s8_2946, out s9, out mstatus)
l23042C60:
	word32 a3_127 = CONVERT(Mem74[s0_81 + 26<i32>:uint16], uint16, word32)
	branch (a3_127 & 4<i32>) == 0<32> l23042C7C
l23042C6A:
	Mem130[s0_81 + 26<i32>:word16] = SLICE(a3_127 & 0xFFFFFFFB<32>, word16, 0)
	word32 a3_131 = CONVERT(Mem130[s0_81 + 74<i32>:uint16], uint16, word32)
	Mem132[s0_81 + 106<i32>:word16] = 0<16>
	Mem133[s0_81 + 72<i32>:word16] = SLICE(a3_131, word16, 0)
l23042C7C:
	word32 a3_136 = CONVERT(Mem135[s0_81 + 60<i32>:int16], int16, int32)
	word32 a2_137 = CONVERT(Mem135[s0_81 + 62<i32>:uint16], uint16, word32)
	Mem139[a4_105 + 68<i32>:word32] = s0_81
	Mem142[s0_81 + 64<i32>:word16] = SLICE((a3_136 >> 3<i32>) + a2_137, word16, 0)
	Mem143[s0_81 + 66<i32>:word16] = 0<16>
	word32 a4_144 = 3<32>
	branch a6_35 <=u 3<32> l23042CF8
l23042C98:
	word32 a5_167
	word32 a3_150 = CONVERT(Mem143[s0_81 + 72<i32>:uint16], uint16, word32)
	word32 a5_154 = CONVERT(SLICE(a5_77, word16, 0), word16, word32)
	branch a3_150 >=u CONVERT(Mem143[s0_81 + 74<i32>:uint16], uint16, word32) l23042CE2
l23042CE2:
	a4_144 = CONVERT(Mem143[s0_81 + 106<i32>:uint16], uint16, word32)
	word32 a5_158 = CONVERT(SLICE(a5_154 + a4_144, word16, 0), word16, word32)
	branch a5_158 <u a4_144 l23042D5C
l23042D5C:
	a5_158 = 0xFFFFFFF<32>
l23042CF0:
	branch a5_158 >=u a3_150 l23042D60
l23042D60:
	Mem165[s0_81 + 106<i32>:word16] = SLICE(a5_158 - a3_150, word16, 0)
	a5_167 = CONVERT(Mem165[s0_81 + 50<i32>:uint16], uint16, word32) + a3_150
l23042CF4:
	Mem168[s0_81 + 106<i32>:word16] = SLICE(a5_158, word16, 0)
l23042CA8:
	word32 a4_176 = CONVERT((CONVERT(Mem143[s0_81 + 26<i32>:uint16], uint16, word32) & 0xFFF800<32>) <u 1<i32>, bool, word32) + 1<32> + CONVERT(Mem143[s0_81 + 50<i32>:uint16], uint16, word32)
	word32 a2_177 = a4_176
	a4_144 = CONVERT(SLICE(a4_176, word16, 0), word16, word32)
	branch a5_154 >=u a4_144 l23042CCE
l23042CCC:
	a2_177 = a5_154
l23042CCE:
	a5_167 = a3_150 + a2_177
l23042CD2:
	word32 a5_185 = a5_167 << 16<i32>
	word32 a5_186 = a5_185 >>u 16<i32>
	branch a5_185 >>u 16<i32> >=u a3_150 l23042CDC
l23042CDA:
	a5_186 = 0xFFFFFFFF<32>
l23042CDC:
	Mem193[s0_81 + 72<i32>:word16] = SLICE(a5_186, word16, 0)
l23042CF8:
	word32 a0_227
	word32 s2_231
	word32 a1_237
	word32 a4_239
	word32 s3_2949
	word32 s5_2951
	word32 a2_2947
	word32 a5_2948
	word32 s4_2950
	tcp_free_acked_segments.isra.3(ra, Mem200[a1_32 + 112<i32>:word32] + 102<i32>, a1_32, a4_144, mstatus, dwArgB8, out a0_227, out a1_237, out a2_2947, out a4_239, out a5_2948, out s2_231, out s3_2949, out s4_2950, out s5_2951)
	Mem244[a0_227 + 112<i32>:word32] = Mem200[a1_237 + 108<i32>:word32]
	word32 a4_2953
	word32 a1_2952
	s1 = tcp_free_acked_segments.isra.3(ra, s2_231, a1_237, a4_239, mstatus, dwArgB8, out a0, out a1_2952, out a2, out a4_2953, out a5_106, out s2, out s3_113, out s4_114, out s5_115)
	word32 s0_262 = Mem244[a5_106 + 112<i32>:word32]
	Mem263[a0 + 108<i32>:word32] = s0_262
	Mem264[s0_262 + 28<i32>:byte] = 0<8>
	Mem267[s0_262 + 48<i32>:word16] = SLICE(0<32> - CONVERT(a5_106 <u 1<i32>, bool, word32), word16, 0)
	branch a0 != 0<32> l23042D28
l23042D24:
	Mem268[s0_262 + 104<i32>:word16] = 0<16>
l23042D28:
	Mem275[s0_262 + 100<i32>:word16] = CONVERT(Mem271[s0_262 + 100<i32>:uint16] + Mem271[0x4200DF8A<32>:uint16], uint16, uint16)
	a4_105 = CONVERT(Mem275[s0_262 + 26<i32>:uint16], uint16, word32)
	a3 = a4_105 << 0x14<u32>
	branch a4_105 << 0x14<u32> >= 0<32> l2304299C
l23042D46:
	branch a5_106 != 0<32> l23042D9E
l23042D9E:
	s2 = Mem275[s0_262 + 76<i32>:int32]
l23042D48:
	branch a0 != 0<32> l23042D6E
l23042D6E:
	s2 = Mem275[s0_262 + 76<i32>:int32]
l23042D74:
	a0 = s2 - lwip_htonl(CONVERT(Mem275[a4_105 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem275[a4_105 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem275[a4_105 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem275[a4_105 + 4<i32>:byte], byte, word32))), out a3, out a4_105, out a5_106)
	branch a0 > 0<32> l2304299C
l23042D9C:
l23042D4A:
	word32 a5_305 = CONVERT(Mem275[s0_262 + 26<i32>:uint16], uint16, word32)
	Mem309[s0_262 + 26<i32>:word16] = SLICE(a5_305 & 0xFF0007FF<32>, word16, 0)
	a4_105 = 0xFF0007FF<32>
	a5_106 = a5_305 & 0xFF0007FF<32>
l23042938:
	a5_106 = CONVERT(Mem74[0x4200DFAA<32>:uint16], uint16, word32)
	branch a5_106 != 0<32> l23042C50
l23042940:
	s0_319 = Mem74[a0 + 88<i32>:word32]
	a3 = a3 + a2
	a5_106 = CONVERT(Mem74[s0_319 + 96<i32>:uint16], uint16, word32) + a0
	branch a5_106 != a3 l23042C50
l2304294E:
	a5_106 = CONVERT(Mem74[s0_319 + 48<i32>:int16], int16, int32)
	branch a5_106 < 0<32> l23042C50
l23042956:
	branch a1_32 != a4_105 l23042C50
l23042C50:
	Mem327[s0_319 + 67<i32>:byte] = 0<8>
	s5_115 = s5
l2304295A:
	word32 a5_328 = CONVERT(Mem74[s0_319 + 67<i32>:byte], byte, word32)
	branch a5_328 == 255<i32> l2304296C
l23042966:
	Mem331[s0_319 + 67<i32>:byte] = SLICE(a5_328 + 1<32>, byte, 0)
l2304296C:
	a4_105 = CONVERT(Mem333[s0_319 + 67<i32>:byte], byte, word32)
	a5_106 = 3<32>
	branch a4_105 <=u 3<32> l23042992
l23042992:
	s5_115 = s5
	branch a4_105 != 3<32> l2304299C
l23042976:
	word32 a4_336 = CONVERT(Mem333[s0_319 + 72<i32>:uint16], uint16, word32)
	a5_106 = CONVERT(SLICE(CONVERT(Mem333[s0_319 + 50<i32>:uint16], uint16, word32) + a4_336, word16, 0), word16, word32)
	branch a5_106 >=u a4_336 l2304298C
l23042988:
	a5_106 = 0xFFFFFFF<32>
l2304298C:
	Mem345[s0_319 + 72<i32>:word16] = SLICE(a5_106, word16, 0)
l23042996:
	s1 = tcp_rexmit_fast(0x4200DF84<32>, a5_106, out a0, out a2, out a3, out a4_105, out a5_106, out s2, out s3_113, out s4_114)
	s5_115 = s5
l2304299C:
	branch a2 == 0<32> l23042A0C
l230429A0:
	word32 s0_379 = Mem374[a5_106 + 56<i32>:word32]
	s1 = Mem374[a4_105:word32]
	branch a5_106 - a4_105 >= 0<32> l23042A0C
l230429AA:
	word32 a3_384 = CONVERT(Mem374[s0_379 + 60<i32>:int16], int16, int32)
	word32 a4_386 = CONVERT(Mem374[0x4201FEA4<32>:uint16], uint16, word32)
	word32 a2_387 = a2 << 16<i32>
	word32 a1_390 = a3_384 >> 3<u32> << 16<i32>
	word32 a5_395 = CONVERT(SLICE(a4_386 - (a2_387 >>u 16<i32>) - (a1_390 >>u 16<i32>), word16, 0), word16, word32)
	word32 a5_399 = CONVERT(SLICE(a5_395 + a3_384, word16, 0), word16, int32)
	Mem401[s0_379 + 60<i32>:word16] = SLICE(a5_399, word16, 0)
	a0 = CONVERT(SLICE(a5_395, word16, 0), word16, int32)
	branch a0 >= 0<32> l230429EA
l230429E0:
	a0 = CONVERT(SLICE((a2_387 >>u 16<i32>) - a4_386 + (a1_390 >>u 16<i32>), word16, 0), word16, int32)
l230429EA:
	a3 = CONVERT(Mem401[s0_379 + 62<i32>:int16], int16, int32)
	Mem411[s0_379 + 52<i32>:word32] = 0<32>
	word32 a4_417 = CONVERT(SLICE(a3 - (a3 >> 2<u32>) + a0, word16, 0), word16, word32)
	Mem419[s0_379 + 62<i32>:word16] = SLICE(a4_417, word16, 0)
	Mem420[s0_379 + 64<i32>:word16] = SLICE((a5_399 >> 3<i32>) + a4_417, word16, 0)
l23042A0C:
	word32 a4_1562
	word32 a5_1563
	word32 a5_1564
	word32 a2_430 = CONVERT(Mem429[s4_114:uint16], uint16, word32)
	word32 s0_1434 = Mem429[a3 + 36<i32>:word32]
	word32 a5_450 = Mem429[s3_113:int32]
	branch a2_430 == 0<32> l23043240
l23042A1A:
	branch CONVERT(Mem429[s0_1434 + 20<i32>:byte], byte, word32) >u 6<32> l23043240
l23043240:
	a4_1562 = a5_450 - a3
	branch a4_1562 < 0<32> l23043256
l23043248:
	a4_1562 = CONVERT(Mem429[s0_1434 + 40<i32>:uint16], uint16, word32)
	branch a5_450 + 1<32> - a3 - a4_1562 <= 0<32> l23042FCE
l23043256:
	a5_1564 = CONVERT(Mem429[s0_1434 + 26<i32>:uint16], uint16, word32)
l23042A24:
	word32 a1_465 = a3 - a5_450
	word32 a4_1162 = a1_465 + -1<i32>
	branch a1_465 < 0xFFFFFFFF<32> l23042DC0
l23042A30:
	a4_1162 = 1<32> - a5_450 - a2_430 + a3
	branch a4_1162 > 0<32> l23042DC0
l23042DC0:
	branch a5_450 - a3 >= 0<32> l23042A90
l23042DC6:
	Mem478[s0_1434 + 26<i32>:word16] = SLICE(CONVERT(Mem429[s0_1434 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
l23042A3C:
	word32 a1_483 = CONVERT(SLICE(a1_465, word16, 0), word16, word32)
	Mem491[Mem429[a0 + 4<i32>:word32] + 8<i32>:word16] = SLICE(CONVERT(Mem429[0x42015278<32>:uint16], uint16, word32) - a1_483, word16, 0)
	word32 a5_496 = CONVERT(SLICE(CONVERT(Mem491[a0 + 8<i32>:uint16], uint16, word32) - a1_483, word16, 0), word16, word32)
l23042A62:
	word32 a4_499 = CONVERT(Mem498[a0 + 10<i32>:uint16], uint16, word32)
	branch a4_499 <u a1_483 l23042DAE
l23042DAE:
	Mem504[a0 + 8<i32>:word16] = SLICE(a5_496, word16, 0)
	Mem505[a0 + 10<i32>:word16] = 0<16>
	a1_483 = CONVERT(SLICE(a1_483 - a4_499, word16, 0), word16, word32)
	a0 = Mem505[a0:word32]
l23042A6A:
	word32 a3_2878
	word32 a5_510
	pbuf_remove_header(a0, a1_483, a2_430, out a1_465, out a3_2878, out a4_1162, out a5_510)
	s1 = Mem498[a4_1162 + 16<i32>:word32]
	Mem518[s3_113:word32] = a5_510
	Mem519[a4_1162 + 4<i32>:byte] = SLICE(a5_510, byte, 0)
	Mem520[a4_1162 + 5<i32>:byte] = SLICE(a5_510 >>u 8<u32>, byte, 0)
	Mem523[a4_1162 + 6<i32>:byte] = SLICE(a5_510 >>u 0x10<u32>, byte, 0)
	Mem524[a4_1162 + 7<i32>:byte] = SLICE(a5_510 >>u 24<i32>, byte, 0)
l23042A90:
	word32 a5_528 = Mem527[s3_113:int32]
	word32 s0_531 = Mem527[a4_1162 + 36<i32>:word32]
	branch a5_528 - a4_1162 < 0<32> l23042FFC
l23042A9E:
	word32 a2_1161 = CONVERT(Mem527[s0_531 + 40<i32>:uint16], uint16, word32)
	word32 a3_1166 = a5_528 + 1<i32> - a4_1162 - a2_1161
	branch a3_1166 > 0<32> l23042FFC
l23042AB0:
	branch a5_528 != a4_1162 l23042FE4
l23042FE4:
	s0_531 = Mem527[s1 + 116<i32>:word32]
	word32 s2_547 = 0<32>
	branch s1 != 0<32> l23043018
l23043018:
	word32 a3_583
	word32 a4_616
	word32 a1_652
	word32 a5_612
	word32 s1_857
	word32 a3_558 = CONVERT(Mem527[a2_1161 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem527[a2_1161 + 4<i32>:byte], byte, word32) | CONVERT(Mem527[a2_1161 + 6<i32>:byte], byte, word32) << 16<i32>
	word32 s1_551 = Mem527[a2_1161 + 16<i32>:word32]
	word32 a4_561 = CONVERT(Mem527[a2_1161 + 7<i32>:byte], byte, word32) << 24<i32> | a3_558
	branch a5_528 != a4_561 l2304306C
l2304306C:
	word32 a3_576
	branch s2_547 != 0<32> l2304308A
l2304308A:
	word32 a7_564 = Mem527[s2_547 + 16<i32>:int32]
	a1_465 = CONVERT(Mem527[a7_564 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem527[a7_564 + 4<i32>:byte], byte, word32) | CONVERT(Mem527[a7_564 + 6<i32>:byte], byte, word32) << 16<i32>
	a3_576 = a5_528 + -1<i32> - (CONVERT(Mem527[a7_564 + 7<i32>:byte], byte, word32) << 24<i32> | a1_465)
	branch a3_576 < 0<32> l23043116
l230430B2:
	a3_576 = a5_528 + 1<i32> - a4_561
	branch a3_576 > 0<32> l23043116
l230430BA:
	word32 a5_2922
	word32 a4_2921
	word32 a0_591
	word32 s1_587
	s0_531 = tcp_seg_copy(s1_551, a1_465, a3_576, a4_561, mstatus, out s1_587, out a0_591, out a3_583, out a4_2921, out a5_2922)
	s4_114 = a0_591
	branch a0_591 == 0<32> l23042FFC
l230430CA:
	word32 a4_601 = Mem527[s2_547 + 16<i32>:int32]
	a5_612 = CONVERT(Mem527[a4_601 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem527[a4_601 + 4<i32>:byte], byte, word32) | CONVERT(Mem527[a4_601 + 5<i32>:byte], byte, word32) << 8<i32>) | CONVERT(Mem527[a4_601 + 7<i32>:byte], byte, word32) << 24<i32>
	word32 a1_614 = Mem527[s3_113:int32]
	a4_616 = CONVERT(Mem527[s2_547 + 8<i32>:uint16], uint16, word32) + a5_612 - a1_614
	branch a4_616 <= 0<32> l2304310C
l230430FA:
	word32 a0_619 = Mem527[s2_547 + 4<i32>:int32]
	word32 a1_620 = CONVERT(SLICE(a1_614 - a5_612, word16, 0), word16, word32)
	Mem621[s2_547 + 8<i32>:word16] = SLICE(a1_620, word16, 0)
	word32 s8_2927
	word32 s6_2926
	word32 s3_2924
	word32 s5_2925
	word32 a2_2923
	ra = pbuf_realloc(ra, a0_619, a1_620, a3_583, a4_616, a0_591, mstatus, dwArgE8, out s1_587, out a2_2923, out a3_583, out a4_616, out a5_612, out s2_547, out s3_2924, out s4_114, out s5_2925, out s6_2926, out s8_2927, out mstatus)
l2304310C:
	Mem650[s2_547:word32] = s4_114
	a1_652 = s1_587
l23043070:
	a3_576 = a5_528 - a4_561
	branch a3_576 >= 0<32> l23043116
l23043116:
	word32 s1_657 = Mem527[a3_576:word32]
	s2_547 = s1_657
	branch a3_576 != 0<32> l23043016
l23043016:
l2304311E:
	branch a5_528 - a4_561 <= 0<32> l23042FFC
l23043124:
	word32 a5_2910
	branch (lwip_htons(CONVERT(Mem527[a2_1161 + 12<i32>:byte], byte, word32) | CONVERT(Mem527[a2_1161 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2910) & 1<32>) != 0<32> l23042FFC
l2304313A:
	word32 a5_2911
	word32 a3_679
	word32 a4_680
	word32 s1_683
	word32 a0_687
	s0_531 = tcp_seg_copy(s1_657, a1_465, a3_576, a4_561, mstatus, out s1_683, out a0_687, out a3_679, out a4_680, out a5_2911)
	Mem696[a0_687:word32] = s1_683
	branch a0_687 == 0<32> l23042FFC
l2304314C:
	word32 a5_708 = CONVERT(Mem696[a4_680 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem696[a4_680 + 4<i32>:byte], byte, word32) | CONVERT(Mem696[a4_680 + 5<i32>:byte], byte, word32) << 8<i32>) | CONVERT(Mem696[a4_680 + 7<i32>:byte], byte, word32) << 24<i32>
	word32 a1_710 = Mem696[s3_113:int32]
	word32 a4_712 = CONVERT(Mem696[Mem696[a4_680 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + a5_708 - a1_710
	branch a4_712 <= 0<32> l2304318A
l2304317A:
	word32 a1_716 = CONVERT(SLICE(a1_710 - a5_708, word16, 0), word16, word32)
	Mem717[Mem696[a0_687 + 4<i32>:word32] + 8<i32>:word16] = SLICE(a1_716, word16, 0)
	word32 s5_2918
	word32 s6_2919
	word32 a3_2914
	word32 a2_2913
	word32 s1_2912
	word32 a4_2915
	word32 s8_2920
	word32 s2_2917
	word32 a5_2916
	ra = pbuf_realloc(ra, a0_687, a1_716, a3_679, a4_712, s4_114, mstatus, dwArgE8, out s1_2912, out a2_2913, out a3_2914, out a4_2915, out a5_2916, out s2_2917, out s3_113, out s4_114, out s5_2918, out s6_2919, out s8_2920, out mstatus)
l2304318A:
	word32 a4_751 = Mem750[s3_113:int32]
	s0_531 = Mem750[a4_751 + 36<i32>:word32]
	word32 a4_757 = CONVERT(Mem750[s0_531 + 40<i32>:uint16], uint16, word32)
	word32 a5_758 = CONVERT(Mem750[s4_114:uint16], uint16, word32) + a4_751 - a4_751 - a4_757
	branch a5_758 <= 0<32> l23042FFC
l230431A2:
	word32 a5_760 = Mem750[a5_758 + 16<i32>:word32]
	word32 a5_766
	word32 a0_765 = lwip_htons(CONVERT(Mem750[a5_760 + 12<i32>:byte], byte, word32) | CONVERT(Mem750[a5_760 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_766)
	word32 a0_767 = a0_765 & 1<32>
	branch (a0_765 & 1<32>) == 0<32> l230431FA
l230431BA:
	word32 a5_769 = Mem750[a5_766 + 16<i32>:word32]
	word32 s2_773 = CONVERT(Mem750[a5_769 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem750[a5_769 + 12<i32>:byte], byte, word32)
	word32 a5_2939
	word32 a5_2938
	word32 a0_787 = CONVERT(SLICE(s2_773 & 0xFC0000FF<32> | lwip_htons(lwip_htons(s2_773, out a5_2938) & 62<i32>, out a5_2939), word16, 0), word16, word32)
	Mem788[a4_757 + 12<i32>:byte] = SLICE(a0_787, byte, 0)
	Mem790[a4_757 + 13<i32>:byte] = SLICE(a0_787 >>u 8<i32>, byte, 0)
	a0_767 = a0_787 >>u 8<i32>
l230431FA:
	word32 a3_793 = Mem792[s3_113:int32]
	s0_531 = Mem792[a3_793 + 36<i32>:word32]
	word32 a5_800 = CONVERT(Mem792[s0_531 + 40<i32>:uint16], uint16, word32) - a3_793 + a3_793
	Mem801[a4_757 + 8<i32>:word16] = SLICE(a5_800, word16, 0)
	word32 a2_2929
	word32 a5_813
	word32 s4_827
	word32 s1_2928
	word32 a4_2931
	word32 a3_2930
	word32 s5_2934
	word32 s6_2935
	word32 s8_2936
	word32 s2_2932
	word32 s3_2933
	ra = pbuf_realloc(ra, a0_767, CONVERT(Mem801[a5_800 + 8<i32>:uint16], uint16, word32), a3_793, a4_757, s4_114, mstatus, dwArgE8, out s1_2928, out a2_2929, out a3_2930, out a4_2931, out a5_813, out s2_2932, out s3_2933, out s4_827, out s5_2934, out s6_2935, out s8_2936, out mstatus)
	word32 a5_839 = Mem801[a5_813 + 16<i32>:word32]
	word32 a5_2937
	Mem849[s4_827:word16] = SLICE(CONVERT(Mem801[a5_813 + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem801[a5_839 + 12<i32>:byte], byte, word32) | CONVERT(Mem801[a5_839 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2937) & 3<32>) != 0<32>, bool, word32), word16, 0)
l23043078:
	word32 a0_861
	s0_531 = tcp_seg_copy(s1_551, a1_465, a3_576, a4_561, mstatus, out s1_857, out a0_861, out a3_583, out a4_616, out a5_612)
	branch a0_861 == 0<32> l23042FFC
l23043086:
	Mem870[a0_861 + 116<i32>:word32] = s0_531
l2304303A:
	word32 a4_873 = CONVERT(Mem527[0x42015278<32>:uint16], uint16, word32)
	branch CONVERT(Mem527[s1_551 + 8<i32>:uint16], uint16, word32) >=u a4_873 l23042FFC
l2304304E:
	word32 a0_885
	s0_531 = tcp_seg_copy(s1_551, a1_465, a3_558, a4_873, mstatus, out s1_857, out a0_885, out a3_583, out a4_616, out a5_612)
	branch a0_885 == 0<32> l23042FFC
l23043058:
	branch s2_547 == 0<32> l23043068
l23043068:
	Mem894[a0_885 + 116<i32>:word32] = s0_531
l2304305C:
	Mem895[s2_547:word32] = a0_885
l23043060:
	a1_652 = s1_857
l23043062:
	ra = tcp_oos_insert_segment(ra, s0_531, a1_652, a3_583, a4_616, a5_612, s4_114, mstatus, dwArgA8, dwArgB8, dwArgC8, out s0_531, out mstatus)
l23042FEE:
	word32 s1_2898
	word32 a5_2901
	word32 a0_973
	word32 a4_2900
	word32 a3_2899
	s0_531 = tcp_seg_copy(s1, a1_465, a3_1166, a4_1162, mstatus, out s1_2898, out a0_973, out a3_2899, out a4_2900, out a5_2901)
	Mem982[a0_973 + 116<i32>:word32] = s0_531
l23042FFC:
	0<32> = dwArg0128
l23043012_thunk_tcp_send_empty_ack:
	word32 a0_1053
	word32 a3_1056
	word32 a4_1057
	word32 mstatus_1061
	word32 s1_1063
	word32 s2_1064
	word32 s3_1065
	word32 s4_1066
	word32 s5_1067
	word32 s6_1068
	word32 s7_1069
	word32 s8_1070
	word32 s9_1071
	word32 a5_2945
	word32 a2_2944
	word32 ra_1062 = tcp_send_empty_ack(ra, dwArgE4, s0_531, s7, mstatus, s5, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s1_1063, out a0_1053, out a2_2944, out a3_1056, out a4_1057, out a5_2945, out s2_1064, out s3_1065, out s4_1066, out s5_1067, out s6_1068, out s7_1069, out s8_1070, out s9_1071, out mstatus_1061)
	s0Out = <invalid>
	s1Out = s1_1063
	a0Out = a0_1053
	a3Out = a3_1056
	a4Out = a4_1057
	s2Out = s2_1064
	s3Out = s3_1065
	s4Out = s4_1066
	s5Out = s5_1067
	s6Out = s6_1068
	s7Out = s7_1069
	s8Out = s8_1070
	s9Out = s9_1071
	mstatusOut = mstatus_1061
	return ra_1062
l23042AB4:
	word32 a5_1082 = Mem527[0x42015280<32>:word32]
	word32 a5_2879
	word32 a0_1092 = CONVERT((lwip_htons(CONVERT(Mem527[a5_1082 + 12<i32>:byte], byte, word32) | CONVERT(Mem527[a5_1082 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2879) & 3<32>) != 0<32>, bool, word32) + CONVERT(Mem527[0x42015278<32>:uint16], uint16, word32)
	word32 a5_1094 = CONVERT(Mem527[s0_531 + 40<i32>:uint16], uint16, word32)
	word32 a0_1095 = CONVERT(SLICE(a0_1092, word16, 0), word16, word32)
	Mem1096[s4_114:word16] = SLICE(a0_1095, word16, 0)
	branch a5_1094 >=u a0_1095 l23042B94
l23042AEE:
	word32 s1_1097 = Mem1096[a5_1094 + 16<i32>:word32]
	word32 a5_1103
	branch (lwip_htons(CONVERT(Mem1096[a5_1094 + 12<i32>:byte], byte, word32) | CONVERT(Mem1096[a5_1094 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1103) & 1<32>) == 0<32> l23042B40
l23042B04:
	word32 s2_1109 = CONVERT(Mem1096[a5_1103 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem1096[a5_1103 + 12<i32>:byte], byte, word32)
	word32 a5_2882
	word32 a5_2881
	word32 a0_1114 = lwip_htons(lwip_htons(s2_1109, out a5_2881) & 62<i32>, out a5_2882)
	s1_1097 = Mem1096[a4_1162 + 16<i32>:word32]
	word32 a0_1122 = CONVERT(SLICE(s2_1109 & 0xFC0000FF<32> | a0_1114, word16, 0), word16, word32)
	Mem1123[a4_1162 + 12<i32>:byte] = SLICE(a0_1122, byte, 0)
	Mem1125[a4_1162 + 13<i32>:byte] = SLICE(a0_1122 >>u 8<i32>, byte, 0)
l23042B40:
	word32 a5_1128 = CONVERT(Mem1127[s0_531 + 40<i32>:uint16], uint16, word32)
	Mem1130[s1_1097 + 8<i32>:word16] = SLICE(a5_1128, word16, 0)
	word32 s1_1131 = Mem1130[a5_1128 + 16<i32>:word32]
	word32 a5_2880
	word32 a0_1136 = lwip_htons(CONVERT(Mem1130[a5_1128 + 12<i32>:byte], byte, word32) | CONVERT(Mem1130[a5_1128 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2880)
	branch (a0_1136 & 2<32>) == 0<32> l23042B68
l23042B5E:
	Mem1141[s1_1131 + 8<i32>:word16] = SLICE(CONVERT(Mem1130[s1_1131 + 8<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l23042B68:
	word32 s6_2886
	word32 s8_2887
	word32 s1_2883
	word32 s5_2885
	word32 s2_2884
	word32 a5_1159
	ra = pbuf_realloc(ra, a0_1136 & 2<32>, CONVERT(Mem1143[s1_1131 + 8<i32>:uint16], uint16, word32), a3_1166, a4_1162, s4_114, mstatus, dwArgE8, out s1_2883, out a2_1161, out a3_1166, out a4_1162, out a5_1159, out s2_2884, out s3_113, out s4_114, out s5_2885, out s6_2886, out s8_2887, out mstatus)
	Mem1194[s4_114:word16] = SLICE(CONVERT(Mem1143[Mem1143[a5_1159 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem1143[a5_1159 + 12<i32>:byte], byte, word32) | CONVERT(Mem1143[a5_1159 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1094) & 3<32>) != 0<32>, bool, word32), word16, 0)
l23042B94:
	word32 s0_1197 = Mem1196[a5_1094 + 116<i32>:word32]
	branch a5_1094 == 0<32> l23042DE0
l23042B9A:
	word32 s1_1198 = Mem1196[a5_1094 + 16<i32>:word32]
	word32 a5_1204
	word32 a0_1203 = lwip_htons(CONVERT(Mem1196[a5_1094 + 12<i32>:byte], byte, word32) | CONVERT(Mem1196[a5_1094 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1204)
	word32 a0_1205 = a0_1203 & 1<32>
	branch (a0_1203 & 1<32>) != 0<32> l23042DDC
l23042DDC:
	s0_1197 = Mem1207[a0_1205 + 116<i32>:word32]
	branch a0_1205 != 0<32> l23042DD4
l23042DD4:
	word32 a0_1210 = Mem1207[a5_1204:word32]
	Mem1211[a5_1204 + 116<i32>:word32] = s0_1197
	word32 a1_2908
	tcp_seg_free(ra, a0_1210, a3_1166, a4_1162, s4_114, mstatus, dwArgD8, out a0_1205, out a1_2908, out a2_1161, out a3_1166, out a4_1162, out a5_1204)
l23042BB2:
	word32 s5_1226 = Mem1196[s0_1197 + 116<i32>:int32]
l23042BB6:
	word32 a1_1229 = Mem1228[s3_113:int32]
	word32 a4_1232 = CONVERT(Mem1228[s4_114:uint16], uint16, word32) + a1_1229
	branch s5_1226 == 0<32> l23042C4A
l23042BC4:
	word32 a3_1234 = Mem1228[s5_1226 + 16<i32>:int32]
	word32 a5_1244 = CONVERT(Mem1228[a3_1234 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem1228[a3_1234 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem1228[a3_1234 + 4<i32>:byte], byte, word32) | CONVERT(Mem1228[a3_1234 + 5<i32>:byte], byte, word32) << 8<i32>))
	a2_1161 = a4_1232 - (CONVERT(Mem1228[s5_1226 + 8<i32>:uint16], uint16, word32) + a5_1244)
	branch a2_1161 >= 0<32> l23042E48
l23042E48:
	word32 a5_1253
	branch (lwip_htons(CONVERT(Mem1228[a3_1234 + 12<i32>:byte], byte, word32) | CONVERT(Mem1228[a3_1234 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1253) & 1<32>) == 0<32> l23042EBE
l23042E5C:
	word32 a5_1261
	branch (lwip_htons(CONVERT(Mem1228[a5_1253 + 12<i32>:byte], byte, word32) | CONVERT(Mem1228[a5_1253 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1261) & 2<32>) != 0<32> l23042EBE
l23042E72:
	word32 a5_1270
	word32 a0_1274 = CONVERT(SLICE(CONVERT(Mem1228[a5_1261 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem1228[a5_1261 + 12<i32>:byte], byte, word32) | lwip_htons(1<32>, out a5_1270), word16, 0), word16, word32)
	Mem1275[a5_1270 + 12<i32>:byte] = SLICE(a0_1274, byte, 0)
	Mem1277[a5_1270 + 13<i32>:byte] = SLICE(a0_1274 >>u 8<i32>, byte, 0)
	word32 a5_2907
	Mem1289[s4_114:word16] = SLICE(CONVERT(Mem1277[Mem1277[a5_1270 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem1277[a5_1270 + 12<i32>:byte], byte, word32) | CONVERT(Mem1277[a5_1270 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2907) & 3<32>) != 0<32>, bool, word32), word16, 0)
l23042EBE:
	word32 s2_1292 = Mem1291[s5_1226:int32]
	word32 a1_2903
	word32 a5_2906
	word32 a0_2902
	word32 a4_2905
	word32 a3_2904
	s1_1198 = tcp_seg_free(ra, s5_1226, a3_1234, a4_1232, s4_114, mstatus, dwArgD8, out a0_2902, out a1_2903, out a2_1161, out a3_2904, out a4_2905, out a5_2906)
	s5_1226 = s2_1292
l23042BF2:
	word32 a4_1312 = a4_1232 - a5_1244
	branch a4_1312 <= 0<32> l23042C4A
l23042BF8:
	word32 a5_1313 = a5_1244 - a1_1229
	Mem1315[s1_1198 + 8<i32>:word16] = SLICE(a5_1313, word16, 0)
	word32 s1_1316 = Mem1315[a5_1313 + 16<i32>:word32]
	word32 a5_2890
	word32 a0_1321 = lwip_htons(CONVERT(Mem1315[a5_1313 + 12<i32>:byte], byte, word32) | CONVERT(Mem1315[a5_1313 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2890)
	branch (a0_1321 & 2<32>) == 0<32> l23042C1E
l23042C14:
	Mem1326[s1_1316 + 8<i32>:word16] = SLICE(CONVERT(Mem1315[s1_1316 + 8<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l23042C1E:
	word32 s1_2891
	word32 a3_2892
	word32 s8_2896
	word32 a4_2893
	word32 s6_2895
	word32 s2_2894
	word32 a5_1338
	ra = pbuf_realloc(ra, a0_1321 & 2<32>, CONVERT(Mem1328[s1_1316 + 8<i32>:uint16], uint16, word32), a3_1234, a4_1312, s4_114, mstatus, dwArgE8, out s1_2891, out a2_1161, out a3_2892, out a4_2893, out a5_1338, out s2_2894, out s3_113, out s4_114, out s5_1226, out s6_2895, out s8_2896, out mstatus)
	word32 a5_2897
	Mem1373[s4_114:word16] = SLICE(CONVERT(Mem1328[Mem1328[a5_1338 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem1328[a5_1338 + 12<i32>:byte], byte, word32) | CONVERT(Mem1328[a5_1338 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2897) & 3<32>) != 0<32>, bool, word32), word16, 0)
l23042C4A:
	Mem1379[s0_1197 + 116<i32>:word32] = s5_1226
l23042DE0:
	word32 a3_1384 = CONVERT(Mem1383[s4_114:uint16], uint16, word32)
	word32 a5_1393 = CONVERT(Mem1383[s0_1197 + 40<i32>:uint16], uint16, word32) - a3_1384
	Mem1395[Mem1383[s3_113:int32] + a3_1384 + 36<i32>:word32] = s0_1197
	Mem1396[s0_1197 + 40<i32>:word16] = SLICE(a5_1393, word16, 0)
	word32 a4_2889
	word32 a1_2888
	word32 a5_1406
	tcp_update_rcv_ann_wnd(s0_1197, a2_1161, a3_1384, out a1_2888, out a3, out a4_2889, out a5_1406)
	word32 s1_1408 = Mem1396[a5_1406 + 4<i32>:word32]
	word32 a4_1409 = CONVERT(Mem1396[a5_1406 + 8<i32>:uint16], uint16, word32)
	branch a4_1409 == 0<32> l23042E10
l23042E04:
	Mem1411[0x4200EF8C<32>:word32] = a5_1406
	Mem1412[s1_1408 + 4<i32>:word32] = 0<32>
	a4_1409 = 0x4200E000<32>
l23042E10:
	s1 = Mem1414[a5_1406 + 16<i32>:word32]
	word32 a5_2909
	word32 a0_1420 = lwip_htons(CONVERT(Mem1414[a5_1406 + 12<i32>:byte], byte, word32) | CONVERT(Mem1414[a5_1406 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2909)
	a0 = a0_1420 & 1<32>
	branch (a0_1420 & 1<32>) == 0<32> l23042E3A
l23042E26:
	word32 a4_1425 = CONVERT(Mem1414[0x4200DF90<32>:byte], byte, word32)
	Mem1427[0x4200DF90<32>:byte] = SLICE(a4_1425 | 32<i32>, byte, 0)
	a4_1409 = a4_1425 | 32<i32>
l23042E3A:
	s2 = 0x4200E000<32>
	s5_115 = 4<32>
	s6 = 7<32>
l23042F88:
	s0_1434 = Mem1433[s1 + 116<i32>:word32]
	branch s1 == 0<32> l23042FB0
l23042F8C:
	a3 = CONVERT(Mem1433[a4_1409 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem1433[a4_1409 + 4<i32>:byte], byte, word32) | CONVERT(Mem1433[a4_1409 + 6<i32>:byte], byte, word32) << 16<i32>
	s1 = Mem1433[a4_1409 + 16<i32>:word32]
	word32 a5_1446 = CONVERT(Mem1433[a4_1409 + 7<i32>:byte], byte, word32) << 24<i32> | a3
	s0_1434 = Mem1433[a3 + 36<i32>:word32]
	branch a5_1446 == a3 l23042ECC
l23042ECC:
	Mem1449[s3_113:word32] = a5_1446
	word32 s7_1452 = CONVERT(Mem1449[s1 + 8<i32>:uint16], uint16, word32)
	word32 a5_1456
	word32 a0_1455 = lwip_htons(CONVERT(Mem1449[a4_1409 + 12<i32>:byte], byte, word32) | CONVERT(Mem1449[a4_1409 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1456)
	word32 s0_1457 = Mem1449[a5_1456 + 36<i32>:word32]
	Mem1462[CONVERT((a0_1455 & 3<32>) != 0<32>, bool, word32) + (s7_1452 + a5_1456) + 36<i32>:word32] = s0_1457
	word32 a5_1469
	lwip_htons(CONVERT(Mem1462[a5_1456 + 12<i32>:byte], byte, word32) | CONVERT(Mem1462[a5_1456 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1469)
	s7 = CONVERT(Mem1462[Mem1462[a5_1469 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32)
	word32 a5_2940
	Mem1483[s0_1457 + 40<i32>:word16] = SLICE(CONVERT(Mem1462[s0_1457 + 40<i32>:uint16], uint16, word32) - (CONVERT((lwip_htons(CONVERT(Mem1462[a5_1469 + 12<i32>:byte], byte, word32) | CONVERT(Mem1462[a5_1469 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_2940) & 3<32>) != 0<32>, bool, word32) + s7), word16, 0)
	word32 a1_1487
	word32 a3_1488
	word32 a5_2941
	word32 a4_1489
	word32 a0_1486 = tcp_update_rcv_ann_wnd(s0_1457, a2_1161, a3, out a1_1487, out a3_1488, out a4_1489, out a5_2941)
	word32 s1_1492 = Mem1483[a1_1487 + 4<i32>:word32]
	word32 a5_1493 = CONVERT(Mem1483[a1_1487 + 8<i32>:uint16], uint16, word32)
	branch a5_1493 == 0<32> l23042F4C
l23042F3C:
	a5_1493 = Mem1483[a0_1486:word32]
	branch a0_1486 == 0<32> l23042FC2
l23042FC2:
	Mem1495[a1_1487:word32] = a5_1493
l23042F44:
	pbuf_cat(a0_1486, a1_1487, a4_1489)
l23042F48:
	Mem1497[s1_1492 + 4<i32>:word32] = 0<32>
l23042F4C:
	word32 a5_1507
	branch (lwip_htons(CONVERT(Mem1500[a5_1493 + 12<i32>:byte], byte, word32) | CONVERT(Mem1500[a5_1493 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1507) & 1<32>) == 0<32> l23042F7E
l23042F62:
	Mem1515[0x4200DF90<32>:byte] = SLICE(CONVERT(Mem1500[0x4200DF90<32>:byte], byte, word32) | 32<i32>, byte, 0)
	a4_1489 = 0x4200DF90<32>
	a5_1507 = CONVERT(Mem1515[s0_1457 + 20<i32>:byte], byte, word32)
	branch a5_1507 != 4<32> l23042F7E
l23042F7A:
	Mem1525[s0_1457 + 20<i32>:byte] = 7<8>
l23042F7E:
	word32 s1_1528 = Mem1527[a5_1507:word32]
	Mem1531[a5_1507 + 116<i32>:word32] = s0_1457
	word32 a5_2943
	word32 a1_2942
	s1 = tcp_seg_free(ra, s1_1528, a3_1488, a4_1489, 0x4200E000<32>, mstatus, dwArgD8, out a0, out a1_2942, out a2_1161, out a3, out a4_1409, out a5_2943)
l23042FB0:
	word32 a5_1561 = CONVERT(Mem1433[s0_1434 + 26<i32>:uint16], uint16, word32)
	a4_1562 = a5_1561 & 1<i32>
	branch (a5_1561 & 1<i32>) == 0<32> l23042FC6
l23042FC6:
	a5_1563 = a5_1561 | 1<i32>
l23042FBA:
	a5_1564 = a5_1561 & 0xFFFFFFFE<32>
l23042FBC:
	a5_1563 = a5_1564 | 2<i32>
l23042FCA:
	Mem1570[s0_1434 + 26<i32>:word16] = SLICE(a5_1563, word16, 0)
l23042FCE:
	0<32> = dwArg0128
	s0Out = <invalid>
	s1Out = s1
	a0Out = a0
	a3Out = a3
	a4Out = a4_1562
	s2Out = s2
	s3Out = s3_113
	s4Out = dwArg78
	s5Out = s5_115
	s6Out = s6
	s7Out = s7
	s8Out = s5
	s9Out = s9
	mstatusOut = mstatus
	return ra
tcp_receive_exit:


word32 tcp_input(word32 ra, word32 s0, word32 s2, word32 s3, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArg010C, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188, word32 dwArg01A8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +010C:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31] Stack +01A8:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp t2
tcp_input_entry:
l2304325C:
	word32 a5_32 = CONVERT(Mem30[0x4201FE2E<32>:uint16], uint16, word32)
	Mem36[0x4201FE2E<32>:word16] = SLICE(a5_32 + 1<32>, word16, 0)
	word32 a0_37 = Mem36[a5_32 + 5<32>:word32]
	Mem40[0x4200EF9C<32>:word32] = a5_32 + 1<32>
	word32 sp_1303 = fp + -80<i32>
	word32 a4_120 = 0x4201FD98<32>
	word32 s10_1133 = 0x4201FD98<32>
	branch CONVERT(Mem40[a0_37 + 10<i32>:uint16], uint16, word32) >u 0x13<32> l230432B0
l230432B0:
	word32 a5_5641
	word32 a3_5640
	branch ip4_addr_isbroadcast_u32(Mem40[0x4201FED4<32>:int32], Mem40[0x4201FEC0<32>:int32], out a3_5640, out a4_120, out a5_5641) != 0<32> l230432DA
l230432CA:
	a4_120 = 224<i32>
	branch (Mem40[0x4201FED4<32>:int32] & 240<i32>) != 224<i32> l230432F0
l230432F0:
	word32 s6_1000 = 0x42020000<32>
	word32 a0_62
	word32 s2_71
	word32 s4_73
	word32 s5_5646
	word32 a3_5643
	word32 s3_5645
	word32 a2_5642
	word32 a6_5644
	word32 s1_123
	word32 s0_69 = ip_chksum_pseudo(a0_37, 6<32>, CONVERT(Mem40[a0_37 + 8<i32>:uint16], uint16, word32), 0x4201FED0<32>, 0x4201FED4<32>, out s1_123, out a0_62, out a2_5642, out a3_5643, out a4_120, out a6_5644, out s2_71, out s3_5645, out s4_73, out s5_5646)
	branch a0_62 == 0<32> l2304331C
l2304331C:
	word32 a5_80 = Mem78[s2_71 + -100<i32>:int32]
	word32 s2_1097 = s2_71 + -100<i32>
	word32 a5_5647
	word32 a1_88 = lwip_htons(CONVERT(Mem78[a5_80 + 12<i32>:byte], byte, word32) | CONVERT(Mem78[a5_80 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_5647) >>u 0xA<u32> & 252<i32>
	branch s0_69 >=u a1_88 l230432A4
l23043340:
	a4_120 = CONVERT(SLICE(a1_88, word16, 0), word16, word32)
	branch CONVERT(Mem78[s1_123 + 8<i32>:uint16], uint16, word32) <u a4_120 l230432A4
l2304334E:
	word32 a5_94 = a4_120 + -20<i32> << 16<i32>
	word32 a3_96 = CONVERT(Mem78[s1_123 + 10<i32>:uint16], uint16, word32)
	Mem102[0x4200DFA8<32>:word16] = SLICE(a5_94 >>u 16<i32>, word16, 0)
	Mem103[0x4200DFA4<32>:word32] = 0<32>
	dwLoc4C = 0x4200DFA8<32>
	branch a3_96 <u a4_120 l230434F2
l230434F2:
	word32 a3_5664
	word32 a4_5665
	word32 a5_5666
	word32 a1_5663
	pbuf_remove_header(s1_123, 0x14<32>, 0x4200DFA8<32>, out a1_5663, out a3_5664, out a4_5665, out a5_5666)
	word32 s0_113 = CONVERT(Mem104[s1_123 + 10<i32>:uint16], uint16, word32)
	word32 s7_115 = CONVERT(Mem104[0x4200DFA8<32>:uint16], uint16, word32)
	Mem117[0x4200DFA0<32>:word16] = SLICE(s0_113, word16, 0)
	word32 a1_5667
	word32 a5_5669
	word32 a3_5668
	word32 a0_118 = pbuf_remove_header(s1_123, s0_113, 0x4200DFA8<32>, out a1_5667, out a3_5668, out a4_120, out a5_5669)
	s1_123 = Mem117[a0_118:word32]
	word32 a5_126 = CONVERT(Mem117[a0_118 + 10<i32>:uint16], uint16, word32)
	word32 s3_127 = CONVERT(SLICE(s7_115 - s0_113, word16, 0), word16, word32)
	branch a5_126 <u s3_127 l230432A4
l23043522:
	word32 a0_128 = Mem117[a5_126 + 4<i32>:word32]
	Mem130[0x4200DFA4<32>:word32] = a5_126
	word32 a5_5846
	word32 a4_5845
	word32 a3_5844
	word32 a1_5843
	pbuf_remove_header(a0_128, s3_127, 0x4200DFA8<32>, out a1_5843, out a3_5844, out a4_5845, out a5_5846)
	Mem139[s1_123 + 8<i32>:word16] = SLICE(s0_113 + CONVERT(Mem130[s1_123 + 8<i32>:uint16], uint16, word32) - s7_115, word16, 0)
l23043384:
	Mem141[0x4200DFA0<32>:word16] = SLICE(a5_94 >>u 16<i32>, word16, 0)
	word32 a3_5671
	word32 a1_5670
	word32 a4_5672
	word32 a5_5673
	pbuf_remove_header(s1_123, a1_88, 0x4200DFA8<32>, out a1_5670, out a3_5671, out a4_5672, out a5_5673)
l2304338E:
	word32 s0_149 = Mem148[s2_71 + -100<i32>:int32]
	word32 a5_5847
	word32 a0_157 = lwip_htons(CONVERT(Mem148[s0_149:byte], byte, word32) | CONVERT(Mem148[s0_149 + 1<i32>:byte], byte, word32) << 8<i32>, out a5_5847)
	Mem159[s0_149:byte] = SLICE(a0_157, byte, 0)
	Mem161[s0_149 + 1<i32>:byte] = SLICE(a0_157 >>u 8<i32>, byte, 0)
	word32 s0_162 = Mem161[s2_71 + -100<i32>:int32]
	word32 a5_5848
	word32 a0_167 = lwip_htons(CONVERT(Mem161[s0_162 + 2<i32>:byte], byte, word32) | CONVERT(Mem161[s0_162 + 3<i32>:byte], byte, word32) << 8<i32>, out a5_5848)
	Mem169[s0_162 + 2<i32>:byte] = SLICE(a0_167, byte, 0)
	Mem171[s0_162 + 3<i32>:byte] = SLICE(a0_167 >>u 8<i32>, byte, 0)
	word32 s0_172 = Mem171[s2_71 + -100<i32>:int32]
	word32 a3_5849
	word32 a5_5851
	word32 a4_5850
	word32 a0_183 = lwip_htonl(CONVERT(Mem171[s0_172 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem171[s0_172 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem171[s0_172 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem171[s0_172 + 4<i32>:byte], byte, word32))), out a3_5849, out a4_5850, out a5_5851)
	Mem188[s0_172 + 5<i32>:byte] = SLICE(a0_183 >>u 8<u32>, byte, 0)
	Mem190[s0_172 + 6<i32>:byte] = SLICE(a0_183 >>u 0x10<u32>, byte, 0)
	Mem192[s0_172 + 4<i32>:byte] = SLICE(a0_183, byte, 0)
	Mem193[s0_172 + 7<i32>:byte] = SLICE(a0_183 >>u 0x18<u32>, byte, 0)
	word32 s0_194 = Mem193[s2_71 + -100<i32>:int32]
	Mem195[0x4200EF94<32>:word32] = a0_183
	word32 a4_5853
	word32 a3_5852
	word32 a5_5854
	word32 a0_207 = lwip_htonl(CONVERT(Mem195[s0_194 + 11<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem195[s0_194 + 10<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem195[s0_194 + 9<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem195[s0_194 + 8<i32>:byte], byte, word32))), out a3_5852, out a4_5853, out a5_5854)
	Mem212[s0_194 + 9<i32>:byte] = SLICE(a0_207 >>u 8<u32>, byte, 0)
	Mem214[s0_194 + 10<i32>:byte] = SLICE(a0_207 >>u 0x10<u32>, byte, 0)
	Mem216[s0_194 + 8<i32>:byte] = SLICE(a0_207, byte, 0)
	Mem217[s0_194 + 11<i32>:byte] = SLICE(a0_207 >>u 0x18<u32>, byte, 0)
	word32 s0_218 = Mem217[s2_71 + -100<i32>:int32]
	Mem219[0x4200EF84<32>:word32] = a0_207
	word32 a5_5855
	word32 a0_225 = lwip_htons(CONVERT(Mem219[s0_218 + 14<i32>:byte], byte, word32) | CONVERT(Mem219[s0_218 + 15<i32>:byte], byte, word32) << 8<i32>, out a5_5855)
	word32 a5_227 = Mem219[s2_71 + -100<i32>:int32]
	Mem228[s0_218 + 14<i32>:byte] = SLICE(a0_225, byte, 0)
	Mem230[s0_218 + 15<i32>:byte] = SLICE(a0_225 >>u 8<i32>, byte, 0)
	word32 a5_5856
	word32 a0_235 = lwip_htons(CONVERT(Mem230[a5_227 + 12<i32>:byte], byte, word32) | CONVERT(Mem230[a5_227 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_5856)
	Mem239[0x4200EF88<32>:byte] = SLICE(a0_235 & 255<i32> & 63<i32>, byte, 0)
	word32 s11_1134 = 0x4200DF94<32>
	word32 s5_1100 = 0x4200DF84<32>
	a4_120 = a0_235 & 255<i32>
	word32 a3_243 = CONVERT(Mem239[s1_123 + 8<i32>:uint16], uint16, word32)
	word32 s7_1001 = 0x4200DF88<32>
	branch (a0_235 & 255<i32> & 3<i32>) == 0<32> l2304353E
l2304353E:
	Mem246[0x4200DFAA<32>:word16] = SLICE(a3_243, word16, 0)
l230434BA:
	word32 a5_248 = a3_243 + 1<i32> << 16<i32>
	Mem250[0x4200DFAA<32>:word16] = SLICE(a5_248 >>u 16<i32>, word16, 0)
	branch a5_248 >>u 16<i32> <u a3_243 l230432A4
l230434CA:
	word32 a6_253 = Mem252[0x4201FEAC<32>:int32]
	word32 s3_1098 = 0x42020000<32>
	word32 t4_256 = Mem252[s4_73 + 4<i32>:int32]
	word32 a3_1014 = Mem252[s2_71 + -100<i32>:int32]
	word32 t6_259 = Mem252[s4_73 + 16<i32>:int32]
	word32 t5_260 = Mem252[s4_73 + 20<i32>:int32]
	word32 s0_2313 = a6_253
	word32 a0_262 = 0<32>
l230434E6:
	branch s0_2313 != 0<32> l23043544
l23043544:
	word32 t3_265 = CONVERT(Mem252[s0_2313 + 8<i32>:byte], byte, word32)
	branch t3_265 == 0<32> l2304355A
l2304354C:
	branch t3_265 != (CONVERT(Mem252[t4_256 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>) l23043672
l2304355A:
	branch CONVERT(Mem252[s0_2313 + 24<i32>:uint16], uint16, word32) != (CONVERT(Mem252[a3_1014 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem252[a3_1014:byte], byte, word32)) l23043672
l23043570:
	word32 a5_283 = CONVERT(Mem252[a3_1014 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem252[a3_1014 + 2<i32>:byte], byte, word32)
	branch CONVERT(Mem252[s0_2313 + 22<i32>:uint16], uint16, word32) != a5_283 l23043672
l23043586:
	s0_2313 = Mem252[a5_283 + 4<i32>:word32]
	branch a5_283 != t6_259 l23043672
l2304358C:
	s0_2313 = Mem252[a5_283:word32]
	branch a5_283 != t5_260 l23043672
l23043672:
	a0_262 = s0_2313
	s0_2313 = Mem252[s0_2313 + 12<i32>:word32]
l23043592:
	branch a0_262 == 0<32> l23043666
l23043666:
	Mem303[0x4201FE42<32>:word16] = SLICE(CONVERT(Mem252[0x4201FE42<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23043594:
	word32 s0_304 = Mem252[a5_283 + 12<i32>:word32]
	Mem308[0x42020EAC<32>:word32] = s0_304
	Mem309[a5_283 + 12<i32>:word32] = a0_262
	Mem313[s0_304 + 12<i32>:word32] = a6_253
l230435A0:
	word32 a0_1085 = CONVERT(Mem319[s1_123 + 8<i32>:uint16], uint16, word32)
	Mem326[0x4200EF8C<32>:word32] = 0<32>
	Mem327[0x4200EF90<32>:byte] = 0<8>
	Mem328[0x4200EF8A<32>:word16] = 0<16>
	Mem329[0x42015270<32>:word32] = 0<32>
	Mem330[0x42015278<32>:word16] = SLICE(a0_1085, word16, 0)
	Mem331[s1_123 + 4<i32>:word32] = 0x42015270<32>
	Mem333[a3_1014 + 16<i32>:word32] = 0x42015270<32>
	word32 a5_322 = 0x42015270<32>
	word32 s4_1033 = 0x4200DF90<32>
	word32 s8_1102 = 0x4200DF8A<32>
	word32 s9_1002 = 0x4200DF8C<32>
	branch (a0_235 & 255<i32> & 8<32>) == 0<32> l230435EE
l230435E2:
	word32 a5_350 = CONVERT(Mem346[s1_123 + 13<i32>:byte], byte, word32)
	Mem352[s1_123 + 13<i32>:byte] = SLICE(a5_350 | 1<i32>, byte, 0)
	a5_322 = a5_350 | 1<i32>
l230435EE:
	word32 a4_1015
	word32 s0_1041 = Mem354[a5_322 + 120<i32>:word32]
	word32 s1_1096 = 0x42020000<32>
	branch a5_322 == 0<32> l2304391A
l230435F8:
	word32 a2_5675
	ra = tcp_process_refused_data(ra, 0x42020000<32>, s0_1041, 0x42020000<32>, 0x4200DF90<32>, 0x4200DF88<32>, mstatus, s6, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, s11, s5, s3, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, out s0_1041, out s1_1096, out a0_1085, out a2_5675, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out s10_1133, out s11_1134, out mstatus)
	branch a0_1085 == 0xFFFFFFF3<32> l2304361A
l23043604:
	s0_1041 = Mem354[0x6B<32>:word32]
	a4_1015 = 0x4200E000<32>
	branch false l2304391A
l23043612:
	branch CONVERT(Mem354[0x4200DFAA<32>:uint16], uint16, word32) == 0<32> l2304391A
l2304391A:
	word32 s0_1966
	word32 a5_1346
	word32 a5_1344
	a4_1015 = CONVERT(Mem354[s7_1001:byte], byte, word32)
	Mem422[s1_1096 + 3768<i32>:word32] = s0_1041
	branch (a4_1015 & 4<i32>) == 0<32> l2304399A
l2304399A:
	s10_1133 = a4_1015 & 2<i32>
	a5_1344 = CONVERT(Mem422[s0_1041 + 26<i32>:uint16], uint16, word32)
	branch (a4_1015 & 2<i32>) == 0<32> l230439BC
l230439A6:
	a0_1085 = 1<32>
	a3_1014 = CONVERT(Mem422[s0_1041 + 20<i32>:byte], byte, word32) + 0xFFFFFFFE<32> & 255<i32>
	branch a3_1014 <=u 1<32> l230439BC
l230439BC:
	word32 a5_431 = a5_1344 & 0x10<32>
	branch (a5_1344 & 0x10<32>) != 0<32> l230439CA
l230439C0:
	a5_431 = Mem422[0x4201FEA4<32>:int32]
	Mem436[a5_431 + 32<i32>:word32] = s0_1041
l230439CA:
	Mem442[dwArg94 + 162<i32>:word16] = 0<16>
	s0_1041 = dwArg94
	branch CONVERT(Mem442[a5_431:uint16], uint16, word32) == 0<32> l230439EA
l230439D6:
	tcp_parseopt.isra.0.part.1(dwArg94 + 50<i32>, dwArgD8, out s1_1096, out a0_1085, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102)
	dwLoc4C = a4_1015
	s0_1041 = dwArg74
l230439EA:
	a3_1014 = 7<32>
	word32 a5_474 = CONVERT(Mem470[s0_1041 + 20<i32>:byte], byte, word32) + 0xFFFFFFFE<32> & 255<i32>
	branch a5_474 >u 7<32> l23043952
l230439FA:
	word32 a5_1045
	word32 a3_590
	word32 s1_591
	word32 a5_593
	word32 a5_597
	word32 a4_585
	a3_1014 = 0x2308646C<32>
	word32 a5_479 = Mem470[(a5_474 << 2<i32>) + 0x2308646C<32>:word32]
	switch (a5_479) { l23043A0A l23043B40 l23043C3E l23043C46 l23043CEC l23043C3E l23043D24 l23043D5E }
l23043D5E:
	ra = tcp_receive(ra, s1_1096, s0_1041, 0x4200DFAA<32>, 0x2308646C<32>, s5_1100, s7_1001, mstatus, dwLoc28, dwLoc18, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgB8, dwArgC8, dwArgD8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	branch (CONVERT(Mem470[s7_1001:byte], byte, word32) & 0x10<32>) == 0<32> l23043952
l23043D6E:
	s0_1041 = Mem470[a4_1015 + 80<i32>:word32]
	word32 a5_546 = Mem470[s5_1100:int32]
	branch a4_1015 != a5_546 l23043952
l23043D78:
	s0_1041 = Mem470[a5_546 + 108<i32>:word32]
	branch a5_546 != 0<32> l23043952
l23043D7E:
	Mem550[s4_1033:byte] = SLICE(CONVERT(Mem470[s4_1033:byte], byte, word32) | 16<i32>, byte, 0)
l23043D24:
	ra = tcp_receive(ra, s1_1096, s0_1041, 0x4200DFAA<32>, 0x2308646C<32>, s5_1100, s7_1001, mstatus, dwLoc28, dwLoc18, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgB8, dwArgC8, dwArgD8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	branch (CONVERT(Mem470[s7_1001:byte], byte, word32) & 0x10<32>) == 0<32> l23043952
l23043D34:
	s0_1041 = Mem470[a4_1015 + 80<i32>:word32]
	word32 a5_582 = Mem470[s5_1100:int32]
	branch a4_1015 != a5_582 l23043952
l23043D3E:
	s0_1041 = Mem470[a5_582 + 108<i32>:word32]
	branch a5_582 != 0<32> l23043952
l23043D44:
	word32 a5_5814
	word32 a0_5811
	word32 a2_5813
	word32 a1_5812
	s1_591 = tcp_pcb_purge(ra, s0_1041, a3_1014, s4_1033, mstatus, dwArg88, dwArg98, dwArgC8, out a0_5811, out a1_5812, out a2_5813, out a3_590, out a4_585, out a5_5814)
	a5_593 = Mem470[s3_1098 + -340<i32>:int32]
	branch s0_1041 == a5_593 l23043C86
l23043D52:
	branch a5_593 == 0<32> l23043C9E
l23043D54:
	a5_597 = Mem470[a4_585 + 12<i32>:word32]
	branch s0_1041 == a4_585 l23043C94
l23043D5A:
	a5_593 = a4_585
l23043CEC:
	ra = tcp_receive(ra, s1_1096, s0_1041, 0x4200DFAA<32>, 0x2308646C<32>, s5_1100, s7_1001, mstatus, dwLoc28, dwLoc18, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgB8, dwArgC8, dwArgD8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	branch (CONVERT(Mem470[s4_1033:byte], byte, word32) & 32<i32>) == 0<32> l23043952
l23043CFE:
	Mem633[s0_1041 + 26<i32>:word16] = SLICE(CONVERT(Mem470[s0_1041 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
	word32 a5_5802
	word32 a2_5801
	word32 a0_5799
	word32 a1_5800
	s1_591 = tcp_pcb_purge(ra, s0_1041, a3_1014, s4_1033, mstatus, dwArg88, dwArg98, dwArgC8, out a0_5799, out a1_5800, out a2_5801, out a3_590, out a4_585, out a5_5802)
	a5_593 = Mem633[s3_1098 + -340<i32>:int32]
	branch s0_1041 == a5_593 l23043C86
l23043D18:
	branch a5_593 == 0<32> l23043C9E
l23043D1A:
	a5_597 = Mem633[a4_585 + 12<i32>:word32]
	branch s0_1041 == a4_585 l23043C94
l23043D20:
	a5_593 = a4_585
l23043C46:
	ra = tcp_receive(ra, s1_1096, s0_1041, 0x4200DFAA<32>, 0x2308646C<32>, s5_1100, s7_1001, mstatus, dwLoc28, dwLoc18, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgB8, dwArgC8, dwArgD8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	branch (CONVERT(Mem470[s4_1033:byte], byte, word32) & 32<i32>) == 0<32> l23043CCE
l23043CCE:
	branch (CONVERT(Mem470[s7_1001:byte], byte, word32) & 0x10<32>) == 0<32> l23043952
l23043CD8:
	s0_1041 = Mem470[a4_1015 + 80<i32>:word32]
	word32 a5_682 = Mem470[s5_1100:int32]
	branch a4_1015 != a5_682 l23043952
l23043CE2:
	s0_1041 = Mem470[a5_682 + 108<i32>:word32]
	branch a5_682 != 0<32> l23043952
l23043CE8:
	a5_1045 = 6<32>
l23043C56:
	word32 a4_685 = CONVERT(Mem470[s7_1001:byte], byte, word32)
	word32 a5_686 = CONVERT(Mem470[s0_1041 + 26<i32>:uint16], uint16, word32)
	a4_1015 = a4_685 & 0x10<32>
	branch (a4_685 & 0x10<32>) == 0<32> l23043CC2
l23043C62:
	s0_1041 = Mem470[a3_1014 + 80<i32>:word32]
	a4_1015 = Mem470[s5_1100:int32]
	branch a3_1014 != a4_1015 l23043CC2
l23043C6C:
	s0_1041 = Mem470[a4_1015 + 108<i32>:word32]
	branch a4_1015 != 0<32> l23043CC2
l23043CC2:
	Mem694[s0_1041 + 26<i32>:word16] = SLICE(a5_686 | 2<i32>, word16, 0)
	a5_1045 = 8<32>
l23043C70:
	Mem697[s0_1041 + 26<i32>:word16] = SLICE(a5_686 | 2<i32>, word16, 0)
	word32 a5_5818
	word32 a2_5817
	word32 a0_5815
	word32 a1_5816
	s1_591 = tcp_pcb_purge(ra, s0_1041, a3_1014, s4_1033, mstatus, dwArg88, dwArg98, dwArgC8, out a0_5815, out a1_5816, out a2_5817, out a3_590, out a4_585, out a5_5818)
	a5_593 = Mem697[s3_1098 + -340<i32>:int32]
	branch s0_1041 != a5_593 l23043C9C
l23043C9C:
	branch a5_593 != 0<32> l23043C8E
l23043C8E:
	a5_597 = Mem697[a4_585 + 12<i32>:word32]
	branch s0_1041 != a4_585 l23043C9A
l23043C9A:
	a5_593 = a4_585
l23043C94:
	s0_1041 = Mem715[a4_585 + 12<i32>:word32]
	Mem718[a4_585 + 12<i32>:word32] = a5_597
l23043C86:
	s0_1041 = Mem720[a5_593 + 12<i32>:word32]
	Mem723[s3_1098 + 3756<i32>:word32] = a5_593
l23043C9E:
	Mem726[0x42020EB4<32>:byte] = 1<8>
	Mem729[s0_1041 + 20<i32>:byte] = 0xA<8>
	word32 a4_731 = Mem729[0x4201FEA0<32>:int32]
	Mem732[0x42020EA0<32>:word32] = s0_1041
	Mem733[a4_731 + 12<i32>:word32] = s0_1041
	word32 a2_5803
	s0_1041 = tcp_timer_needed(s1_591, a3_590, mstatus, dwLoc0C, out s1_1096, out a0_1085, out a2_5803, out a3_1014, out a4_1015, out s8_1102)
l23043C3E:
	ra = tcp_receive(ra, s1_1096, s0_1041, 0x4200DFAA<32>, 0x2308646C<32>, s5_1100, s7_1001, mstatus, dwLoc28, dwLoc18, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgB8, dwArgC8, dwArgD8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
l23043B40:
	a4_1015 = a4_1015 & 0x10<32>
	branch a4_1015 == 0<32> l23043C26
l23043C26:
	branch (a4_1015 & 2<i32>) == 0<32> l23043952
l23043C2A:
	s0_1041 = Mem470[a5_479 + 36<i32>:word32]
	a4_1015 = Mem470[s11_1134:int32]
	branch a5_479 + 0xFFFFFFFF<32> != a4_1015 l23043952
l23043C36:
	word32 a5_5842
	s0_1041 = tcp_rexmit(s1_1096, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out a5_5842, out s2_1097, out s3_1098, out s4_1033, out s8_1102)
l23043B44:
	word32 a1_839 = Mem470[s5_1100:int32]
	word32 s0_840 = Mem470[a4_1015 + 68<i32>:word32]
	word32 a5_842 = a1_839 + -1<i32> - a4_1015
	branch a5_842 < 0<32> l23043BEA
l23043B54:
	s0_840 = Mem470[a5_842 + 80<i32>:word32]
	branch a1_839 - a5_842 > 0<32> l23043BEA
l23043BEA:
	word32 a5_5830
	ra = tcp_rst(ra, s0_840, a1_839, Mem470[s11_1134:int32] + CONVERT(Mem470[0x4200DFAA<32>:uint16], uint16, word32), s7_1001, mstatus, dwLoc08, dwArg08, dwArg28, dwArg38, s7, s5, dwArg68, dwArg78, dwArgA8, dwArgD8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out a5_5830, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
l23043B5E:
	Mem920[s0_840 + 20<i32>:byte] = 4<8>
	s0_1966 = Mem920[0x80<32>:word32]
	branch true l23043B70
l23043B70:
	word32 a5_922 = Mem920[0x1C<32>:word32]
	branch a5_922 == 0<32> l23043B68
l23043B74:
	word32 s0_928 = Mem920[a0_1085 + 16<i32>:word32]
	word32 s5_958
	word32 a2_968
	word32 t2_977
	call a5_922 (retsize: 0;)
		uses: a1:s0_928,a2:0<32>,mstatus:mstatus_514,ra:ra_484,s0:s0_928,s1:s1_485,s10:a4_419 & 2<i32>,s11:s11_816,s2:s2_846,s3:s3_931,s4:s4_935,s5:s5_488,s6:s6_873,s7:s7_498,s8:s8_939,s9:s9_947,Stack +0000:dwLoc50,Stack +0008:dwLoc48,Stack +0028:dwLoc28,Stack +0038:dwLoc18,Stack +0044:dwLoc0C,Stack +0048:dwLoc08,Stack +0054:dwArg04,Stack +0058:dwArg08,Stack +0068:dwArg18,Stack +0074:dwArg24,Stack +0078:dwArg28,Stack +007C:dwArg2C,Stack +0084:0x42015270<32>,Stack +0088:dwArg38,Stack +00A8:dwArg58,Stack +00B8:dwArg68,Stack +00BC:dwArg6C,Stack +00C4:dwArg74,Stack +00C8:dwArg78,Stack +00CC:dwArg7C,Stack +00D8:dwArg88,Stack +00DC:dwArg8C,Stack +00E4:dwArg94,Stack +00E8:dwArg98,Stack +00F8:dwArgA8,Stack +0108:dwArgB8,Stack +010C:dwArgBC,Stack +0118:dwArgC8,Stack +0128:dwArgD8,Stack +0138:dwArgE8,t2:t2_977
		defs: a0:a0_966,a2:a2_968,a3:a3_969,a4:a4_964,mstatus:mstatus_978,ra:ra_955,s0:s0_951,s1:s1_952,s10:s10_954,s11:s11_963,s3:s3_956,s4:s4_957,s5:s5_958,s7:s7_960,s9:s9_962,sp:sp_949,t2:t2_977
	branch a0_1085 == 0<32> l23043B86
l23043B86:
	word32 a4_5837
	word32 a3_5836
	ra = tcp_receive(ra, s1_1096, s0_1966, a2_968, a3_1014, s5_958, s7_1001, mstatus, Mem920[sp_1303 + 40<i32>:word32], Mem920[sp_1303 + 56<i32>:word32], Mem920[sp_1303 + 104<i32>:word32], Mem920[sp_1303 + 120<i32>:word32], Mem920[sp_1303 + 136<i32>:word32], Mem920[sp_1303 + 152<i32>:word32], Mem920[sp_1303 + 168<i32>:word32], Mem920[sp_1303 + 184<i32>:word32], Mem920[sp_1303 + 200<i32>:word32], Mem920[sp_1303 + 216<i32>:word32], Mem920[sp_1303 + 228<i32>:word32], Mem920[sp_1303 + 232<i32>:word32], Mem920[sp_1303 + 264<i32>:word32], Mem920[sp_1303 + 280<i32>:word32], Mem920[sp_1303 + 296<i32>:word32], out s0_1041, out s1_1096, out a0_1085, out a3_5836, out a4_5837, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	word32 a5_1008 = CONVERT(Mem920[s8_1102:uint16], uint16, word32)
	branch a5_1008 == 0<32> l23043B98
l23043B92:
	Mem1010[s8_1102:word16] = SLICE(a5_1008 + 0xFFFFFFFF<32>, word16, 0)
l23043B98:
	word32 a5_1013 = CONVERT(Mem1012[s0_1041 + 50<i32>:uint16], uint16, word32)
	a3_1014 = a5_1013 << 1<u32>
	a4_1015 = a5_1013 << 2<u32>
	word32 a5_1017 = 0x100011C<32>
	word32 a2_1018 = a5_1013 << 1<u32>
	branch a5_1013 << 1<u32> >=u 0x100011C<32> l23043BB2
l23043BB0:
	a2_1018 = 0x100011C<32>
l23043BB2:
	word32 a5_1024
	branch a5_1013 << 2<u32> >=u a2_1018 l23043BE0
l23043BE0:
	branch a5_1013 << 1<u32> <=u 0x100011C<32> l23043BBC
l23043BE4:
	a5_1024 = a5_1013 << 0x11<u32>
l23043BB6:
	a5_1024 = a5_1013 << 0x12<u32>
l23043BBA:
	a5_1017 = a5_1024 >>u 16<i32>
l23043BBC:
	Mem1032[s0_1041 + 72<i32>:word16] = SLICE(a5_1017, word16, 0)
l23043BC0:
	branch (CONVERT(Mem1038[s4_1033:byte], byte, word32) & 32<i32>) == 0<32> l23043952
l23043BCC:
	Mem1044[s0_1041 + 26<i32>:word16] = SLICE(CONVERT(Mem1038[s0_1041 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
	a5_1045 = 7<32>
l23043BDA:
	Mem1048[s0_1041 + 20<i32>:byte] = SLICE(a5_1045, byte, 0)
l23043B7E:
	branch a0_1085 == 0xFFFFFFF3<32> l23043630
l23043B84:
l23043A0A:
	word32 a5_1050 = a4_1015 & 18<i32>
	a3_1014 = 0x12<32>
	branch a5_1050 != 0x12<32> l23043AE6
l23043A14:
	s0_1041 = Mem470[a5_1050 + 68<i32>:word32]
	a3_1014 = Mem470[s5_1100:int32]
	branch a5_1050 + 1<32> != a3_1014 l23043AE6
l23043AE6:
	a4_1015 = a4_1015 & 0x10<32>
	branch a4_1015 == 0<32> l23043952
l23043AEC:
	word32 a4_5840
	word32 a5_5841
	ra = tcp_rst(ra, s0_1041, Mem470[s5_1100:int32], Mem470[s11_1134:int32] + CONVERT(Mem470[0x4200DFAA<32>:uint16], uint16, word32), s7_1001, mstatus, dwLoc08, dwArg08, dwArg28, dwArg38, s7, s5, dwArg68, dwArg78, dwArgA8, dwArgD8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_5840, out a5_5841, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	a4_1015 = CONVERT(Mem470[s0_1041 + 66<i32>:byte], byte, word32)
	branch a4_1015 >u 5<32> l23043952
l23043B34:
	Mem1114[s0_1041 + 48<i32>:word16] = 0<16>
	ra = tcp_rexmit_rto(ra, s1_1096, a4_1015, 5<32>, s7_1001, mstatus, s10, dwArg08, dwArg18, dwArg38, s7, s5, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out s10_1133, out s11_1134, out mstatus)
l23043A20:
	word32 a4_1145 = Mem470[s11_1134:int32]
	Mem1146[a5_1050 + 0x45<32>:word32] = s0_1041
	Mem1148[a4_1145 + 37<i32>:word32] = s0_1041
	Mem1149[a4_1145 + 45<i32>:word32] = s0_1041
	word32 a3_1150 = Mem1149[s2_1097:int32]
	s2_1097 = CONVERT(Mem1149[s0_1041 + 50<i32>:uint16], uint16, word32)
	word32 a5_1153 = CONVERT(Mem1149[a3_1150 + 15<i32>:byte], byte, word32)
	word32 a2_1154 = CONVERT(Mem1149[a3_1150 + 14<i32>:byte], byte, word32)
	Mem1155[a4_1145 + 0x53<32>:word32] = s0_1041
	word32 a5_1157 = a5_1153 << 8<i32> | a2_1154
	Mem1158[s0_1041 + 96<i32>:word16] = SLICE(a5_1157, word16, 0)
	Mem1160[s0_1041 + 98<i32>:word16] = SLICE(a5_1157, word16, 0)
	Mem1162[s0_1041 + 20<i32>:byte] = 4<8>
	word32 a3_5832
	word32 a5_5834
	word32 a3_5835
	word32 a4_5833
	word32 a2_5831
	word32 a0_1174 = tcp_eff_send_mss_netif(s2_1097, ip4_route(s0_1041 + 4<i32>, 4<32>, out a2_5831, out a3_5832, out a4_5833, out a5_5834), out a3_5835)
	Mem1178[s0_1041 + 50<i32>:word16] = SLICE(a0_1174, word16, 0)
	word32 a0_1181 = 0x100011C<32>
	word32 a3_1182 = a0_1174 << 1<u32>
	branch a0_1174 << 1<u32> >=u 0x100011C<32> l23043A84
l23043A82:
	a3_1182 = 0x100011C<32>
l23043A84:
	word32 a0_1188
	branch a0_1174 << 2<u32> >=u a3_1182 l23043ACC
l23043ACC:
	branch a0_1174 << 1<u32> <=u 0x100011C<32> l23043A8E
l23043AD0:
	a0_1188 = a0_1174 << 0x11<u32>
l23043A88:
	a0_1188 = a0_1174 << 0x12<u32>
l23043A8C:
	a0_1181 = a0_1188 >>u 16<i32>
l23043A8E:
	word32 a0_1204
	word32 a5_1198 = CONVERT(Mem1178[s0_1041 + 102<i32>:uint16], uint16, word32)
	Mem1200[s0_1041 + 72<i32>:word16] = SLICE(a0_1181, word16, 0)
	word32 s0_1201 = Mem1200[a0_1181 + 112<i32>:word32]
	Mem1203[s0_1201 + 102<i32>:word16] = SLICE(a5_1198 + 0xFFFFFFFF<32>, word16, 0)
	branch a0_1181 != 0<32> l23043AD6
l23043AD6:
	a0_1204 = Mem1203[a5_1198 + 0xFFFFFFFF<32>:word32]
	Mem1205[a5_1198 + 0x6F<32>:word32] = s0_1201
l23043AA0:
	a0_1204 = Mem1203[a5_1198 + 0xFFFFFFFF<32>:word32]
	Mem1208[a5_1198 + 0x6B<32>:word32] = Mem1203[a0_1181 + 108<i32>:word32]
l23043AA6:
	word32 a1_5838
	word32 a2_5839
	word32 a5_1238
	s1_1096 = tcp_seg_free(ra, a0_1204, a3_1182, a0_1174 << 1<u32>, s4_1033, mstatus, dwArgB8, out a0_1085, out a1_5838, out a2_5839, out a3_1014, out a4_1015, out a5_1238)
	s0_1041 = Mem1232[a5_1238 + 112<i32>:word32]
	branch a5_1238 != 0<32> l23043ADC
l23043ADC:
	Mem1242[s0_1041 + 48<i32>:word16] = 0<16>
	Mem1243[s0_1041 + 66<i32>:byte] = 0<8>
l23043AAE:
	Mem1245[s0_1041 + 48<i32>:word16] = 0xFFFF<16>
l23043AB4:
	word32 a5_1248 = Mem1247[s0_1041 + 136<i32>:int32]
	branch a5_1248 == 0<32> l23043994
l23043ABC:
	word32 s0_1250 = Mem1247[a0_1085 + 16<i32>:word32]
	word32 t2_1331
	call a5_1248 (retsize: 0;)
		uses: a1:s0_1250,a2:0<32>,mstatus:mstatus_514,ra:ra_484,s0:s0_1250,s1:s1_1239,s10:a4_419 & 2<i32>,s11:s11_816,s2:s2_1152,s3:s3_931,s4:s4_935,s5:s5_488,s6:s6_873,s7:s7_498,s8:s8_939,s9:s9_947,Stack +0000:dwLoc50,Stack +0008:dwLoc48,Stack +0028:dwLoc28,Stack +0038:dwLoc18,Stack +0044:dwLoc0C,Stack +0048:dwLoc08,Stack +0054:dwArg04,Stack +0058:dwArg08,Stack +0068:dwArg18,Stack +0074:dwArg24,Stack +0078:dwArg28,Stack +007C:dwArg2C,Stack +0084:0x42015270<32>,Stack +0088:dwArg38,Stack +00A8:dwArg58,Stack +00B8:dwArg68,Stack +00BC:dwArg6C,Stack +00C4:dwArg74,Stack +00C8:dwArg78,Stack +00CC:dwArg7C,Stack +00D8:dwArg88,Stack +00DC:dwArg8C,Stack +00E4:dwArg94,Stack +00E8:dwArg98,Stack +00F8:dwArgA8,Stack +0108:dwArgB8,Stack +010C:dwArgBC,Stack +0118:dwArgC8,Stack +0128:dwArgD8,Stack +0138:dwArgE8,t2:t2_1331
		defs: a0:a0_1320,a3:a3_1323,a4:a4_1318,mstatus:mstatus_1332,ra:ra_1309,s0:s0_1305,s1:s1_1306,s10:s10_1308,s11:s11_1317,s2:s2_1307,s3:s3_1310,s4:s4_1311,s5:s5_1312,s6:s6_1313,s7:s7_1314,s8:s8_1315,s9:s9_1316,sp:sp_1303,t2:t2_1331
	branch a0_1085 != 0xFFFFFFF3<32> l23043994
l23043ACA:
l23043928:
	a4_1015 = CONVERT(Mem422[s0_1041 + 20<i32>:byte], byte, word32)
	branch a4_1015 != 2<32> l2304397A
l2304397A:
	s0_1041 = Mem422[a4_1015 + 36<i32>:word32]
	word32 a5_1338 = Mem422[s11_1134:int32]
	branch a4_1015 == a5_1338 l2304393C
l23043984:
	word32 a5_1339 = a5_1338 - a4_1015
	branch a5_1339 < 0<32> l23043952
l2304398A:
	a4_1015 = CONVERT(Mem422[s0_1041 + 40<i32>:uint16], uint16, word32)
	branch a5_1339 - a4_1015 > 0<32> l23043952
l23043994:
	a5_1344 = CONVERT(Mem1343[s0_1041 + 26<i32>:uint16], uint16, word32)
l230439B6:
	a5_1346 = a5_1344 | 2<i32>
l23043932:
	s0_1041 = Mem422[a4_1015 + 80<i32>:word32]
	branch a4_1015 != Mem422[s5_1100:int32] l23043952
l2304393C:
	Mem1353[s4_1033:byte] = SLICE(CONVERT(Mem422[s4_1033:byte], byte, word32) | 8<i32>, byte, 0)
	a5_1346 = CONVERT(Mem1353[s0_1041 + 26<i32>:uint16], uint16, word32) & 0xFFFFFFFE<32>
l2304394E:
	Mem1360[s0_1041 + 26<i32>:word16] = SLICE(a5_1346, word16, 0)
l23043952:
	branch (CONVERT(Mem1374[s4_1033:byte], byte, word32) & 8<32>) == 0<32> l23043D8C
l23043D8C:
	branch CONVERT(Mem1374[s8_1102:uint16], uint16, word32) == 0<32> l23043D9C
l23043D92:
	word32 a5_1392 = Mem1374[s0_1041 + 128<i32>:int32]
	branch a5_1392 != 0<32> l23043DBC
l23043DBC:
	word32 s0_1406 = Mem1374[a0_1085 + 16<i32>:word32]
	word32 t2_1643
	call a5_1392 (retsize: 0;)
		uses: a1:s0_1406,mstatus:mstatus_1591,ra:ra_1463,s0:s0_1406,s1:s1_1408,s10:s10_1439,s11:s11_1572,s2:s2_1421,s3:s3_1481,s4:s4_1361,s5:s5_1499,s6:s6_1517,s7:s7_1535,s8:s8_1377,s9:s9_1553,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +002C:dwArg2C,Stack +0034:0x42015270<32>,Stack +0038:dwArg38,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0094:dwArg94,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +FFFFFFB0:dwLoc50,Stack +FFFFFFB8:dwLoc48,Stack +FFFFFFD8:dwLoc28,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF4:dwLoc0C,Stack +FFFFFFF8:dwLoc08,t2:t2_1643
		defs: a0:a0_1632,a3:a3_1635,a4:a4_1630,mstatus:mstatus_1644,ra:ra_1621,s0:s0_1617,s1:s1_1618,s4:s4_1623,s7:s7_1626,s8:s8_1627,s9:s9_1628,sp:sp_1615,t2:t2_1643
	branch a0_1085 != 0xFFFFFFF3<32> l23043D98
l23043DC8:
l23043D98:
	Mem1648[s8_1102:word16] = 0<16>
l23043D9C:
	word32 a2_5779
	word32 s2_1705
	word32 s10_1703
	word32 s3_1706
	word32 s5_1708
	word32 s6_1709
	word32 s8_1711
	word32 s11_1704
	ra = tcp_input_delayed_close(ra, s0_1041, a3_1014, a4_1015, s4_1033, s7_1001, mstatus, Mem1691[sp_1303 + 56<i32>:word32], Mem1691[sp_1303 + 72<i32>:word32], Mem1691[sp_1303 + 104<i32>:word32], Mem1691[sp_1303 + 120<i32>:word32], Mem1691[sp_1303 + 136<i32>:word32], Mem1691[sp_1303 + 152<i32>:word32], Mem1691[sp_1303 + 168<i32>:word32], Mem1691[sp_1303 + 172<i32>:word32], Mem1691[sp_1303 + 184<i32>:word32], Mem1691[sp_1303 + 200<i32>:word32], Mem1691[sp_1303 + 232<i32>:word32], Mem1691[sp_1303 + 236<i32>:word32], Mem1691[sp_1303 + 248<i32>:word32], out s1_1096, out a0_1085, out a2_5779, out a3_1014, out a4_1015, out s2_1705, out s3_1706, out s4_1033, out s5_1708, out s6_1709, out s7_1001, out s8_1711, out s9_1002, out s10_1703, out s11_1704, out mstatus)
	branch a0_1085 != 0<32> l23043630
l23043DA6:
	word32 a2_1720 = Mem1691[s9_1002:int32]
	branch a2_1720 == 0<32> l23043DE8
l23043DAC:
	branch (CONVERT(Mem1691[s0_1041 + 26<i32>:uint16], uint16, word32) & 0x10<32>) == 0<32> l23043DCC
l23043DCC:
	word32 a5_1723 = Mem1691[s0_1041 + 132<i32>:int32]
	branch a5_1723 == 0<32> l23043E1A
l23043E1A:
	ra = tcp_recv_null(ra, s1_1096, s0_1041, a2_1720, 0<32>, s4_1033, s7_1001, mstatus, Mem1691[sp_1303:word32], Mem1691[sp_1303 + 16<i32>:word32], Mem1691[sp_1303 + 56<i32>:word32], Mem1691[sp_1303 + 72<i32>:word32], Mem1691[sp_1303 + 88<i32>:word32], Mem1691[sp_1303 + 104<i32>:word32], Mem1691[sp_1303 + 120<i32>:word32], Mem1691[sp_1303 + 132<i32>:word32], Mem1691[sp_1303 + 136<i32>:word32], Mem1691[sp_1303 + 152<i32>:word32], Mem1691[sp_1303 + 168<i32>:word32], Mem1691[sp_1303 + 172<i32>:word32], Mem1691[sp_1303 + 184<i32>:word32], Mem1691[sp_1303 + 188<i32>:word32], Mem1691[sp_1303 + 200<i32>:word32], Mem1691[sp_1303 + 216<i32>:word32], Mem1691[sp_1303 + 232<i32>:word32], Mem1691[sp_1303 + 236<i32>:word32], Mem1691[sp_1303 + 248<i32>:word32], Mem1691[sp_1303 + 252<i32>:word32], Mem1691[sp_1303 + 264<i32>:word32], Mem1691[sp_1303 + 280<i32>:word32], out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1705, out s3_1706, out s4_1033, out s5_1708, out s6_1709, out s7_1001, out s8_1711, out s9_1002, out s10_1703, out s11_1704, out mstatus)
l23043DD6:
	word32 t2_1783
	call a5_1723 (retsize: 0;)
		uses: mstatus:mstatus_1700,ra:ra_1701,s0:Mem1691[a0_1692 + 16<i32>:word32],s1:s1_1702,s10:s10_1703,s11:s11_1704,s2:s2_1705,s3:s3_1706,s4:s4_1707,s5:s5_1708,s6:s6_1709,s7:s7_1710,s8:s8_1711,s9:s9_1712,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +002C:dwArg2C,Stack +0034:0x42015270<32>,Stack +0038:dwArg38,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0094:dwArg94,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +FFFFFFB0:dwLoc50,Stack +FFFFFFB8:dwLoc48,Stack +FFFFFFD8:dwLoc28,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF4:dwLoc0C,Stack +FFFFFFF8:dwLoc08,t2:t2_1783
		defs: a0:a0_1772,a3:a3_1775,a4:a4_1770,mstatus:mstatus_1784,ra:ra_1761,s0:s0_1757,s1:s1_1758,s10:s10_1760,s11:s11_1769,s2:s2_1759,s3:s3_1762,s4:s4_1763,s5:s5_1764,s6:s6_1765,s7:s7_1766,s8:s8_1767,s9:s9_1768,sp:sp_1755,t2:t2_1783
l23043DDA:
	branch a0_1085 == 0xFFFFFFF3<32> l23043630
l23043DE0:
	branch a0_1085 == 0<32> l23043DE8
l23043DE2:
	Mem1792[Mem1691[s9_1002:int32] + 120<i32>:word32] = s0_1041
l23043DE8:
	word32 a5_1796 = CONVERT(Mem1795[s4_1033:byte], byte, word32)
	branch (a5_1796 & 32<i32>) == 0<32> l23043E02
l23043DF2:
	s0_1041 = Mem1795[(a5_1796 & 32<i32>) + 120<i32>:word32]
	branch (a5_1796 & 32<i32>) == 0<32> l23043E20
l23043E20:
	word32 a5_1799 = CONVERT(Mem1795[s0_1041 + 40<i32>:uint16], uint16, word32)
	a4_1015 = 0xFFF810<32>
	branch a5_1799 == 0xFFF810<32> l23043E34
l23043E2E:
	Mem1803[s0_1041 + 40<i32>:word16] = SLICE(a5_1799 + 1<32>, word16, 0)
l23043E34:
	word32 a5_1806 = Mem1805[s0_1041 + 132<i32>:int32]
	branch a5_1806 == 0<32> l23043E02
l23043E3A:
	word32 s0_1809 = Mem1805[a0_1085 + 16<i32>:word32]
	word32 t2_1880
	call a5_1806 (retsize: 0;)
		uses: a1:s0_1809,a2:0<32>,a3:0<32>,mstatus:mstatus_1847,ra:ra_1823,s0:s0_1809,s1:s1_1814,s10:s10_1820,s11:s11_1844,s2:s2_1817,s3:s3_1826,s4:s4_1793,s5:s5_1830,s6:s6_1833,s7:s7_1836,s8:s8_1839,s9:s9_1842,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +002C:dwArg2C,Stack +0034:0x42015270<32>,Stack +0038:dwArg38,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0094:dwArg94,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +FFFFFFB0:dwLoc50,Stack +FFFFFFB8:dwLoc48,Stack +FFFFFFD8:dwLoc28,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF4:dwLoc0C,Stack +FFFFFFF8:dwLoc08,t2:t2_1880
		defs: a0:a0_1869,a3:a3_1872,a4:a4_1867,mstatus:mstatus_1881,ra:ra_1858,s0:s0_1854,s1:s1_1855,s4:s4_1860,s7:s7_1863,s9:s9_1865,sp:sp_1852,t2:t2_1880
	branch a0_1085 != 0xFFFFFFF3<32> l23043E02
l23043E4A:
l23043DF6:
	word32 a4_1884 = CONVERT(Mem1795[(a5_1796 & 32<i32>) + 13<i32>:byte], byte, word32)
	Mem1886[(a5_1796 & 32<i32>) + 13<i32>:byte] = SLICE(a4_1884 | 32<i32>, byte, 0)
	a4_1015 = a4_1884 | 32<i32>
l23043E02:
	Mem1891[s1_1096 + 3768<i32>:word32] = 0<32>
	word32 s11_5810
	word32 s10_5809
	word32 s8_5808
	word32 s5_5806
	word32 s2_5804
	word32 s6_5807
	word32 s3_5805
	word32 a2_1908
	word32 s7_1923
	ra = tcp_input_delayed_close(ra, s0_1041, a3_1014, a4_1015, s4_1033, s7_1001, mstatus, Mem1891[sp_1303 + 56<i32>:word32], Mem1891[sp_1303 + 72<i32>:word32], Mem1891[sp_1303 + 104<i32>:word32], Mem1891[sp_1303 + 120<i32>:word32], Mem1891[sp_1303 + 136<i32>:word32], Mem1891[sp_1303 + 152<i32>:word32], Mem1891[sp_1303 + 168<i32>:word32], Mem1891[sp_1303 + 172<i32>:word32], Mem1891[sp_1303 + 184<i32>:word32], Mem1891[sp_1303 + 200<i32>:word32], Mem1891[sp_1303 + 232<i32>:word32], Mem1891[sp_1303 + 236<i32>:word32], Mem1891[sp_1303 + 248<i32>:word32], out s1_1096, out a0_1085, out a2_1908, out a3_1014, out a4_1015, out s2_5804, out s3_5805, out s4_1033, out s5_5806, out s6_5807, out s7_1923, out s8_5808, out s9_1002, out s10_5809, out s11_5810, out mstatus)
	branch a0_1085 != 0<32> l23043630
l23043E10:
	word32 s7_5826
	word32 s8_5827
	word32 s5_5824
	word32 s6_5825
	word32 s10_5828
	word32 s11_5829
	word32 a5_5821
	word32 s0_5819
	word32 a2_5820
	word32 s2_5822
	word32 s3_5823
	ra = tcp_output(ra, s1_1096, s0_1041, a2_1908, s7_1923, mstatus, Mem1891[sp_1303 + 88<i32>:word32], Mem1891[sp_1303 + 104<i32>:word32], Mem1891[sp_1303 + 136<i32>:word32], Mem1891[sp_1303 + 148<i32>:word32], Mem1891[sp_1303 + 152<i32>:word32], Mem1891[sp_1303 + 168<i32>:word32], Mem1891[sp_1303 + 184<i32>:word32], Mem1891[sp_1303 + 200<i32>:word32], Mem1891[sp_1303 + 204<i32>:word32], Mem1891[sp_1303 + 216<i32>:word32], Mem1891[sp_1303 + 232<i32>:word32], Mem1891[sp_1303 + 264<i32>:word32], Mem1891[sp_1303 + 268<i32>:word32], Mem1891[sp_1303 + 280<i32>:word32], out s0_5819, out s1_1096, out a0_1085, out a2_5820, out a3_1014, out a4_1015, out a5_5821, out s2_5822, out s3_5823, out s4_1033, out s5_5824, out s6_5825, out s7_5826, out s8_5827, out s9_1002, out s10_5828, out s11_5829, out mstatus)
l23043DB4:
	word32 a7_5785
	word32 s5_5787
	word32 s2_5786
	word32 a1_5781
	word32 a0_5780
	word32 s6_5788
	word32 s8_5789
	word32 a2_5782
	word32 a5_5784
	word32 a4_5783
	ra = pbuf_free(ra, a2_1720, a3_1014, a4_1015, s4_1033, mstatus, Mem1691[sp_1303 + 296<i32>:word32], out s0_1966, out s1_1096, out a0_5780, out a1_5781, out a2_5782, out a3_1014, out a4_5783, out a5_5784, out a7_5785, out s2_5786, out s3_1098, out s4_1033, out s5_5787, out s6_5788, out s8_5789, out mstatus)
l23043B68:
	word32 s5_5794
	word32 s11_5798
	word32 s6_5795
	word32 s10_5797
	word32 s3_5793
	word32 s7_5796
	word32 s0_5790
	word32 a5_5791
	word32 s2_5792
	ra = tcp_abort(ra, s1_1096, s0_1966, a3_1014, s3_1098, s4_1033, s7_1001, mstatus, Mem1999[sp_1303:word32], Mem1999[sp_1303 + 4<i32>:word32], Mem1999[sp_1303 + 40<i32>:word32], Mem1999[sp_1303 + 56<i32>:word32], Mem1999[sp_1303 + 72<i32>:word32], Mem1999[sp_1303 + 88<i32>:word32], Mem1999[sp_1303 + 116<i32>:word32], Mem1999[sp_1303 + 120<i32>:word32], Mem1999[sp_1303 + 136<i32>:word32], Mem1999[sp_1303 + 152<i32>:word32], Mem1999[sp_1303 + 156<i32>:word32], Mem1999[sp_1303 + 168<i32>:word32], Mem1999[sp_1303 + 184<i32>:word32], Mem1999[sp_1303 + 216<i32>:word32], Mem1999[sp_1303 + 220<i32>:word32], Mem1999[sp_1303 + 232<i32>:word32], Mem1999[sp_1303 + 264<i32>:word32], out s0_5790, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out a5_5791, out s2_5792, out s3_5793, out s4_1033, out s5_5794, out s6_5795, out s7_5796, out s9_1002, out s10_5797, out s11_5798, out mstatus)
l2304395C:
	word32 a5_2029 = Mem1374[s0_1041 + 144<i32>:int32]
	branch a5_2029 == 0<32> l23043968
l23043962:
	word32 t2_2060
	call a5_2029 (retsize: 0;)
		uses: a1:0xFFFFFFF2<32>,mstatus:mstatus_1591,ra:ra_1463,s0:Mem1374[a0_1393 + 16<i32>:word32],s1:s1_1408,s10:s10_1439,s11:s11_1572,s2:s2_1421,s3:s3_1481,s4:s4_1361,s5:s5_1499,s6:s6_1517,s7:s7_1535,s8:s8_1377,s9:s9_1553,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +002C:dwArg2C,Stack +0034:0x42015270<32>,Stack +0038:dwArg38,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0094:dwArg94,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +FFFFFFB0:dwLoc50,Stack +FFFFFFB8:dwLoc48,Stack +FFFFFFD8:dwLoc28,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF4:dwLoc0C,Stack +FFFFFFF8:dwLoc08,t2:t2_2060
		defs: a3:a3_2052,a4:a4_2047,a5:a5_2048,mstatus:mstatus_2061,ra:ra_2038,s0:s0_2034,s4:s4_2040,s7:s7_2043,sp:sp_2032,t2:t2_2060
l23043968:
	word32 s11_5775
	word32 s10_5774
	word32 s6_5771
	word32 s8_5773
	word32 s5_5770
	word32 s3_5769
	word32 s7_5772
	word32 s1_5766
	word32 a0_5767
	word32 s2_5768
	word32 a3_2079
	word32 a4_2080
	ra = tcp_pcb_remove(ra, s0_1041, a3_1014, a4_1015, a5_2029, s4_1033, s7_1001, mstatus, Mem1374[sp_1303 + 72<i32>:word32], Mem1374[sp_1303 + 88<i32>:word32], Mem1374[sp_1303 + 120<i32>:word32], Mem1374[sp_1303 + 132<i32>:word32], Mem1374[sp_1303 + 136<i32>:word32], Mem1374[sp_1303 + 152<i32>:word32], Mem1374[sp_1303 + 168<i32>:word32], Mem1374[sp_1303 + 184<i32>:word32], Mem1374[sp_1303 + 188<i32>:word32], Mem1374[sp_1303 + 200<i32>:word32], Mem1374[sp_1303 + 216<i32>:word32], Mem1374[sp_1303 + 248<i32>:word32], Mem1374[sp_1303 + 252<i32>:word32], Mem1374[sp_1303 + 264<i32>:word32], out s1_5766, out a0_5767, out a3_2079, out a4_2080, out s2_5768, out s3_5769, out s4_1033, out s5_5770, out s6_5771, out s7_5772, out s8_5773, out s9_1002, out s10_5774, out s11_5775, out mstatus)
	word32 a5_5778
	word32 a2_5777
	word32 a1_5776
	s1_1096 = tcp_free(s0_1041, a3_2079, a4_2080, mstatus, out a0_1085, out a1_5776, out a2_5777, out a3_1014, out a4_1015, out a5_5778)
l2304361A:
	branch CONVERT(Mem354[s0_1041 + 42<i32>:uint16], uint16, word32) != 0<32> l23043626
l23043620:
	word32 s3_5679
	word32 s2_5678
	word32 a2_5676
	word32 a5_5677
	word32 s6_5681
	word32 s5_5680
	word32 s7_5682
	word32 s8_5683
	ra = tcp_send_empty_ack(ra, s0_1041, s0_1041, s7_1001, mstatus, dwArg08, dwArg18, dwArg38, s5, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, out s1_1096, out a0_1085, out a2_5676, out a3_1014, out a4_1015, out a5_5677, out s2_5678, out s3_5679, out s4_1033, out s5_5680, out s6_5681, out s7_5682, out s8_5683, out s9_1002, out mstatus)
l23043626:
	Mem2152[s10_1133 + 154<i32>:word16] = SLICE(CONVERT(Mem354[s10_1133 + 154<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23043630:
	Mem2160[s1_1096 + 3768<i32>:word32] = 0<32>
	Mem2164[s9_1002:word32] = 0<32>
	branch a0_1085 == 0<32> l23043648
l2304363E:
	word32 mstatus_5711
	word32 a4_5703
	word32 s5_5708
	word32 s6_5709
	word32 s4_5707
	word32 s8_5710
	word32 s3_5706
	word32 a1_5700
	word32 a3_5702
	word32 s2_5705
	word32 a0_5699
	word32 a7_5704
	word32 a2_5701
	word32 s0_5697
	word32 s1_5698
	word32 a5_2190
	pbuf_free(ra, a0_1085, a3_1014, a4_1015, s4_1033, mstatus, dwArgD8, out s0_5697, out s1_5698, out a0_5699, out a1_5700, out a2_5701, out a3_5702, out a4_5703, out a5_2190, out a7_5704, out s2_5705, out s3_5706, out s4_5707, out s5_5708, out s6_5709, out s8_5710, out mstatus_5711)
	Mem2208[a5_2190 + 4<i32>:word32] = 0<32>
l23043648:
	0<32> = dwArg010C
	return dwLoc4C
l230434E8:
	word32 a0_2225 = Mem252[0x4201FEA0<32>:int32]
l2304374C:
	word32 a2_2296
	word32 a1_2290
	word32 a2_2264
	branch a0_2225 != 0<32> l23043678
l23043678:
	word32 a6_2228 = CONVERT(Mem252[a0_2225 + 8<i32>:byte], byte, word32)
	branch a6_2228 == 0<32> l2304368E
l23043680:
	branch a6_2228 != (CONVERT(Mem252[t4_256 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>) l2304374A
l2304368E:
	branch CONVERT(Mem252[a0_2225 + 24<i32>:uint16], uint16, word32) != (CONVERT(Mem252[a3_1014 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem252[a3_1014:byte], byte, word32)) l2304374A
l230436A4:
	branch CONVERT(Mem252[a0_2225 + 22<i32>:uint16], uint16, word32) != (CONVERT(Mem252[a3_1014 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem252[a3_1014 + 2<i32>:byte], byte, word32)) l2304374A
l230436BA:
	branch t6_259 != Mem252[a0_2225 + 4<i32>:int32] l2304374A
l230436C2:
	branch t5_260 != Mem252[a0_2225:int32] l2304374A
l2304374A:
	a0_2225 = Mem252[a0_2225 + 12<i32>:word32]
l230436CA:
	branch (a0_235 & 255<i32> & 4<i32>) != 0<32> l23043728
l230436D0:
	a2_2264 = CONVERT(Mem252[0x4200DFAA<32>:uint16], uint16, word32)
	branch (a0_235 & 255<i32> & 2<i32>) == 0<32> l23043708
l23043708:
	a4_120 = a0_235 & 255<i32> & 1<32>
	branch a4_120 == 0<32> l23043716
l2304370C:
	Mem2268[Mem252[0x4201FEA4<32>:int32] + 32<i32>:word32] = a0_2225
l230436DA:
	word32 a7_2272 = Mem252[0x4200DF94<32>:int32]
	a0_2225 = Mem252[(a0_235 & 255<i32>) + 36<i32>:word32]
	a4_120 = a7_2272 - (a0_235 & 255<i32>)
	branch a4_120 < 0<32> l23043716
l230436E8:
	a4_120 = a4_120 - CONVERT(Mem252[a0_2225 + 40<i32>:uint16], uint16, word32)
	branch a4_120 > 0<32> l23043716
l23043716:
	branch a2_2264 == 0<32> l23043728
l23043718:
	Mem2282[a0_2225 + 26<i32>:word16] = SLICE(CONVERT(Mem2279[a0_2225 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
l230436F2:
	a1_2290 = Mem252[0x4200DF84<32>:int32]
	a2_2296 = a2_2264 + a7_2272
l2304374E:
	word32 t0_2298 = Mem252[0x4201FEA8<32>:int32]
	s7_1001 = 0<32>
	word32 t6_2300 = 0<32>
	word32 a5_2301 = t0_2298
l2304375C:
	branch a5_2301 != 0<32> l23043766
l23043766:
	word32 t2_2304 = CONVERT(Mem252[a5_2301 + 8<i32>:byte], byte, word32)
	branch t2_2304 == 0<32> l2304377C
l2304376E:
	branch t2_2304 != (CONVERT(Mem252[t4_256 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>) l230437A2
l2304377C:
	s0_2313 = CONVERT(Mem252[a3_1014 + 2<i32>:byte], byte, word32)
	branch CONVERT(Mem252[a5_2301 + 22<i32>:uint16], uint16, word32) != (CONVERT(Mem252[a3_1014 + 3<i32>:byte], byte, word32) << 8<i32> | s0_2313) l230437A2
l23043792:
	word32 a6_2318 = Mem252[a5_2301:int32]
	branch t5_260 == a6_2318 l230437A8
l230437A8:
	s7_1001 = a5_2301
l2304379A:
	branch a6_2318 != 0<32> l230437A2
l2304379E:
	s7_1001 = a5_2301
	t6_2300 = a0_2225
l230437A2:
	a0_2225 = a5_2301
	a5_2301 = Mem252[a5_2301 + 12<i32>:word32]
l2304375E:
	branch s7_1001 == 0<32> l23043E4E
l23043E4E:
	word32 a5_5674
	branch (lwip_htons(CONVERT(Mem252[a3_1014 + 12<i32>:byte], byte, word32) | CONVERT(Mem252[a3_1014 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_5674) & 4<32>) != 0<32> l23043728
l23043E6C:
	word32 a0_2356 = CONVERT(Mem252[0x4200DFAA<32>:uint16], uint16, word32)
	Mem2358[0x4201FE3C<32>:word16] = SLICE(CONVERT(Mem252[0x4201FE3C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a2_2363 = Mem2358[0x4200DF94<32>:int32]
	a1_2290 = Mem2358[0x4200DF84<32>:int32]
	Mem2369[0x4201FE32<32>:word16] = SLICE(CONVERT(Mem2358[0x4201FE32<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	a2_2296 = a2_2363 + a0_2356
l23043762:
	a0_2225 = t6_2300
l230437AA:
	branch a0_2225 == 0<32> l23043802
l23043802:
	Mem2398[0x4201FE42<32>:word16] = SLICE(CONVERT(Mem252[0x4201FE42<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l230437AC:
	word32 a5_2400 = Mem252[s7_1001 + 12<i32>:int32]
	Mem2405[0x42020EA8<32>:word32] = s7_1001
	Mem2406[a5_2400 + 12<i32>:word32] = a0_2225
	Mem2411[s7_1001 + 12<i32>:word32] = t0_2298
l230437BA:
	branch (a0_235 & 255<i32> & 4<i32>) != 0<32> l23043728
l230437C0:
	branch (a0_235 & 255<i32> & 16<i32>) == 0<32> l2304380E
l2304380E:
	a4_120 = a0_235 & 255<i32> & 2<32>
	branch a4_120 == 0<32> l23043728
l23043812:
	word32 a5_5713
	word32 a3_5712
	word32 s1_2478
	word32 s4_2479
	word32 s8_2480
	word32 a0_2485
	word32 s10_2488
	word32 s11_2489
	word32 s3_2491
	word32 s5_2492
	word32 s6_2493
	word32 s9_2495
	word32 s2_2490
	word32 ra_2476 = tcp_alloc(ra, s1_123, CONVERT(Mem2421[s7_1001 + 21<i32>:byte], byte, word32), a3_1014, a4_120, 0x42020000<32>, s4_73, s7_1001, mstatus, dwLoc48, s6, dwLoc28, dwLoc18, dwArg04, dwArg08, dwArg28, dwArg2C, dwArg38, s5, s3, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, out s1_2478, out a0_2485, out a3_5712, out a4_120, out a5_5713, out s2_2490, out s3_2491, out s4_2479, out s5_2492, out s6_2493, out s7_1001, out s8_2480, out s9_2495, out s10_2488, out s11_2489, out mstatus)
	branch a0_2485 != 0<32> l2304383C
l2304383C:
	word32 a4_2501 = Mem2421[s2_2490:int32]
	Mem2502[Mem2421[s4_2479 + 20<i32>:int32]:word32] = a0_2485
	Mem2504[Mem2502[s4_2479 + 16<i32>:int32] + 4<i32>:word32] = a0_2485
	Mem2506[a0_2485 + 22<i32>:word16] = SLICE(CONVERT(Mem2504[s7_1001 + 22<i32>:uint16], uint16, word32), word16, 0)
	word32 a3_2508 = CONVERT(Mem2506[a4_2501:byte], byte, word32)
	Mem2511[a0_2485 + 24<i32>:word16] = SLICE(CONVERT(Mem2506[a4_2501 + 1<i32>:byte], byte, word32) << 8<i32> | a3_2508, word16, 0)
	Mem2513[a0_2485 + 20<i32>:byte] = 3<8>
	word32 a5_2514 = Mem2513[s11_2489:int32]
	Mem2516[a5_2514 + 0x25<32>:word32] = a0_2485
	Mem2517[a5_2514 + 0x2D<32>:word32] = a0_2485
	word32 a0_2518 = tcp_next_iss(a0_2485)
	word32 a5_2521 = Mem2517[s11_2489:int32]
	Mem2522[a0_2518 + 88<i32>:word32] = a0_2485
	Mem2523[a0_2518 + 80<i32>:word32] = a0_2485
	Mem2525[a0_2518 + 68<i32>:word32] = a0_2485
	Mem2526[a0_2518 + 92<i32>:word32] = a0_2485
	Mem2527[a5_2521 + 0x53<32>:word32] = a0_2485
	word32 a5_2528 = Mem2527[s7_1001 + 16<i32>:int32]
	Mem2529[a0_2485 + 124<i32>:word32] = s7_1001
	Mem2530[a5_2528 + 16<i32>:word32] = a0_2485
	Mem2533[a0_2485 + 9<i32>:byte] = SLICE(CONVERT(Mem2530[s7_1001 + 9<i32>:byte], byte, word32) & 0xC<32>, byte, 0)
	Mem2535[a0_2485 + 8<i32>:byte] = SLICE(CONVERT(Mem2533[s7_1001 + 8<i32>:byte], byte, word32), byte, 0)
	word32 a5_2536 = Mem2535[s3_2491 + -340<i32>:int32]
	Mem2537[s3_2491 + 3756<i32>:word32] = a0_2485
	Mem2538[a5_2536 + 12<i32>:word32] = a0_2485
	word32 s8_5719
	word32 a4_5718
	word32 a2_5716
	word32 a3_5717
	word32 a0_5715
	word32 s1_5714
	tcp_timer_needed(s1_2478, a3_2508, mstatus, dwLoc0C, out s1_5714, out a0_5715, out a2_5716, out a3_5717, out a4_5718, out s8_5719)
	Mem2552[0x42020EB4<32>:byte] = 1<8>
	word32 s0_2553 = dwArg94
	branch CONVERT(Mem2552[0x42020000<32>:uint16], uint16, word32) == 0<32> l230438CC
l230438C4:
	word32 s3_5730
	word32 a0_5728
	word32 s4_5731
	word32 s8_5734
	word32 a4_5729
	word32 s6_5733
	word32 s5_5732
	word32 s1_5727
	s0_2553 = tcp_parseopt.isra.0.part.1(dwArg94 + 50<i32>, dwArgD8, out s1_5727, out a0_5728, out a4_5729, out s2_2490, out s3_5730, out s4_5731, out s5_5732, out s6_5733, out s7_1001, out s8_5734)
l230438CC:
	word32 a4_2575 = Mem2552[s2_2490:int32]
	word32 s2_2581 = CONVERT(Mem2552[s0_2553 + 50<i32>:uint16], uint16, word32)
	word32 a5_2583 = CONVERT(Mem2552[a4_2575 + 15<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem2552[a4_2575 + 14<i32>:byte], byte, word32)
	Mem2584[s0_2553 + 96<i32>:word16] = SLICE(a5_2583, word16, 0)
	Mem2585[s0_2553 + 98<i32>:word16] = SLICE(a5_2583, word16, 0)
	word32 a4_5722
	word32 a5_5723
	word32 a2_5720
	word32 a3_5721
	word32 a3_2598
	Mem2600[s0_2553 + 50<i32>:word16] = SLICE(tcp_eff_send_mss_netif(s2_2581, ip4_route(s0_2553 + 4<i32>, a5_2583, out a2_5720, out a3_5721, out a4_5722, out a5_5723), out a3_2598), word16, 0)
	word32 a5_5725
	word32 s5_5726
	word32 a4_5724
	word32 a0_2605
	word32 a3_2608
	word32 s0_2615
	word32 s3_2618
	word32 s4_2619
	ra = tcp_enqueue_flags(ra_2476, s0_2553, 0x12<32>, a3_2598, mstatus, s0, dwArg38, s5, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0_2615, out s1_123, out a0_2605, out a2_2264, out a3_2608, out a4_5724, out a5_5725, out s3_2618, out s4_2619, out s5_5726, out mstatus)
	branch a0_2605 == 0<32> l23043916
l23043916:
	a0_2225 = s0_2615
l23043724:
	word32 s8_5762
	word32 s7_5761
	word32 s10_5764
	word32 s11_5765
	word32 a2_5753
	word32 a5_5755
	word32 s9_5763
	word32 a3_5754
	word32 s4_5758
	word32 s5_5759
	word32 s6_5760
	word32 s3_5757
	word32 s2_5756
	word32 s0_5750
	word32 s1_5751
	word32 a0_5752
	tcp_output(ra, s1_123, a0_2225, a2_2264, s7_1001, mstatus, dwArg08, dwArg18, dwArg38, s7, s5, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, out s0_5750, out s1_5751, out a0_5752, out a2_5753, out a3_5754, out a4_120, out a5_5755, out s2_5756, out s3_5757, out s4_5758, out s5_5759, out s6_5760, out s7_5761, out s8_5762, out s9_5763, out s10_5764, out s11_5765, out mstatus)
l2304390C:
	word32 s9_5747
	word32 s7_5746
	word32 s6_5745
	word32 a1_5738
	word32 s2_5741
	word32 s5_5744
	word32 s4_5743
	word32 s3_5742
	word32 s11_5749
	word32 s10_5748
	word32 a5_5740
	word32 a0_5737
	word32 s1_5736
	word32 s0_5735
	word32 a3_5739
	tcp_abandon(ra, s1_123, s0_2615, a3_2608, s3_2618, s4_2619, s7_1001, mstatus, dwLoc50, 0x4200DFA8<32>, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg24, dwArg28, dwArg38, s5, s3, dwArg58, dwArg68, dwArg88, dwArg8C, dwArg98, dwArgB8, out s0_5735, out s1_5736, out a0_5737, out a1_5738, out a3_5739, out a4_120, out a5_5740, out s2_5741, out s3_5742, out s4_5743, out s5_5744, out s6_5745, out s7_5746, out s9_5747, out s10_5748, out s11_5749, out mstatus)
l2304381E:
	Mem2710[s10_2488 + 160<i32>:word16] = SLICE(CONVERT(Mem2421[s10_2488 + 160<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a5_2711 = Mem2710[s7_1001 + 24<i32>:int32]
	branch a5_2711 == 0<32> l23043728
l23043830:
	word32 t2_2743
	call a5_2711 (retsize: 0;)
		uses: a0:Mem2710[s7_2494 + 16<i32>:int32],a1:0<32>,a2:0xFFFFFFFF<32>,mstatus:mstatus_2487,ra:ra_2476,s0:a0_2485,s1:s1_2478,s10:s10_2488,s11:s11_2489,s2:s2_2490,s3:s3_2491,s4:s4_2479,s5:s5_2492,s6:s6_2493,s7:s7_2494,s8:s8_2480,s9:s9_2495,Stack +0000:dwLoc50,Stack +0008:dwLoc48,Stack +0028:dwLoc28,Stack +0038:dwLoc18,Stack +0044:dwLoc0C,Stack +0048:dwLoc08,Stack +0054:dwArg04,Stack +0058:dwArg08,Stack +0068:dwArg18,Stack +006C:dwArg1C,Stack +0074:dwArg24,Stack +0078:dwArg28,Stack +007C:dwArg2C,Stack +0084:dwArg34,Stack +0088:dwArg38,Stack +00A8:dwArg58,Stack +00B8:dwArg68,Stack +00BC:dwArg6C,Stack +00C4:dwArg74,Stack +00C8:dwArg78,Stack +00CC:dwArg7C,Stack +00D8:dwArg88,Stack +00DC:dwArg8C,Stack +00E4:dwArg94,Stack +00E8:dwArg98,Stack +00F8:dwArgA8,Stack +0108:dwArgB8,Stack +010C:dwArgBC,Stack +0118:dwArgC8,Stack +011C:dwArgCC,Stack +0128:dwArgD8,Stack +0138:dwArgE8,Stack +013C:dwArgEC,Stack +015C:dwArg010C,Stack +0178:dwArg0128,Stack +0198:dwArg0148,Stack +01B8:dwArg0168,Stack +01D8:dwArg0188,Stack +01F8:dwArg01A8,t2:t2_2743
		defs: a4:a4_2730,mstatus:mstatus_2744,t2:t2_2743
l230437C6:
	a2_2296 = Mem2421[0x4200DF94<32>:int32] + CONVERT(Mem2421[0x4200DFAA<32>:uint16], uint16, word32)
	a1_2290 = Mem2421[0x4200DF84<32>:int32]
l23043702:
	word32 s8_5695
	word32 a3_5687
	word32 s5_5692
	word32 s6_5693
	word32 s9_5696
	word32 s7_5694
	word32 s4_5691
	word32 s0_5684
	word32 s2_5689
	word32 a5_5688
	word32 s3_5690
	word32 a0_5686
	word32 s1_5685
	tcp_rst(ra, s0_2313, a1_2290, a2_2296, s7_1001, mstatus, dwLoc08, dwArg08, dwArg28, dwArg38, s7, s5, dwArg68, dwArg78, dwArgA8, dwArgD8, out s0_5684, out s1_5685, out a0_5686, out a3_5687, out a4_120, out a5_5688, out s2_5689, out s3_5690, out s4_5691, out s5_5692, out s6_5693, out s7_5694, out s8_5695, out s9_5696, out mstatus)
l23043310:
	Mem2820[0x4201FE34<32>:word16] = SLICE(CONVERT(Mem78[0x4201FE34<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l230432DA:
	Mem2825[0x4201FE3C<32>:word16] = SLICE(CONVERT(Mem40[0x4201FE3C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l230432A4:
	Mem2830[0x4201FE36<32>:word16] = SLICE(CONVERT(Mem2827[0x4201FE36<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l230432E4:
	Mem2835[0x4201FE32<32>:word16] = SLICE(CONVERT(Mem2832[0x4201FE32<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23043728:
	0<32> = dwArg010C
l23043746_thunk_pbuf_free:
	word32 s6_5660
	word32 a7_5655
	word32 mstatus_5662
	word32 s8_5661
	word32 s5_5659
	word32 s4_5658
	word32 s2_5656
	word32 a5_5654
	word32 s3_5657
	word32 a3_5652
	word32 a4_5653
	word32 a2_5651
	word32 a1_5650
	word32 s0_5648
	word32 a0_5649
	word32 s1_2873
	pbuf_free(dwLoc08, dwLoc4C, s2, a4_120, dwArg0168, mstatus, dwArg0128, out s0_5648, out s1_2873, out a0_5649, out a1_5650, out a2_5651, out a3_5652, out a4_5653, out a5_5654, out a7_5655, out s2_5656, out s3_5657, out s4_5658, out s5_5659, out s6_5660, out s8_5661, out mstatus_5662)
	return s1_2873
tcp_input_exit:


void tcp_trigger_input_pcb_close()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_shutdown
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
tcp_trigger_input_pcb_close_entry:
l23043EBE:
	Mem8[0x4200DF90<32>:byte] = SLICE(CONVERT(Mem0[0x4200DF90<32>:byte], byte, word32) | 16<i32>, byte, 0)
	return
tcp_trigger_input_pcb_close_exit:


word32 tcp_seg_add_chksum(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_write
//      tcp_split_unsent_seg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a1 a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
tcp_seg_add_chksum_entry:
l23043ED4:
	word32 a0_9 = a0 + CONVERT(Mem0[a2:uint16], uint16, word32)
	word32 a5_10 = a0_9 >>u 0x10<u32>
	word32 a0_13 = CONVERT(SLICE(a0_9 + (a0_9 >>u 0x10<u32>), word16, 0), word16, word32)
	branch (a1 & 1<32>) == 0<32> l23043F00
l23043EE8:
	a4 = CONVERT(Mem0[a3:byte], byte, word32)
	Mem18[a3:byte] = SLICE(1<32> - a4, byte, 0)
	a5_10 = a0_13 << 8<u32>
	a0_13 = CONVERT(SLICE(a0_13 >>u 8<i32> | a0_13 << 8<u32>, word16, 0), word16, word32)
l23043F00:
	Mem26[a2:word16] = SLICE(a0_13, word16, 0)
	a4Out = a4
	a5Out = a5_10
	return a1 & 1<32>
tcp_seg_add_chksum_exit:


word32 tcp_create_segment(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_write
//      tcp_split_unsent_seg
//      tcp_send_fin
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_create_segment_entry:
l23043F06:
	word32 s1_112
	word32 a1_107
	word32 a3_109
	word32 a4_110
	word32 a5_111
	word32 s0_103
	word32 s5_130 = a0
	word32 s2_125 = a1
	word32 s3_126 = a2
	word32 a0_31
	word32 a3_34
	word32 a4_35
	word32 a2_216
	word32 a5_217
	word32 s1_36 = memp_malloc(a4 << 2<u32>, 4<32>, a3, a4, mstatus, out a0_31, out a2_216, out a3_34, out a4_35, out a5_217)
	branch a0_31 != 0<32> l23043F4A
l23043F4A:
	Mem40[a0_31 + 13<i32>:byte] = SLICE(a4_35, byte, 0)
	Mem41[a0_31:word32] = 0<32>
	Mem42[a0_31 + 4<i32>:word32] = a1
	word32 a5_43 = CONVERT(Mem42[a1 + 8<i32>:uint16], uint16, word32)
	Mem45[a0_31 + 10<i32>:word16] = 0<16>
	Mem47[a0_31 + 8<i32>:word16] = SLICE(a5_43 - (s1_36 & 4<32>), word16, 0)
	Mem48[a0_31 + 12<i32>:byte] = 0<8>
	s1_112 = s1_36 & 4<32>
	word32 a3_54
	word32 a5_56
	word32 a2_218
	word32 a4_219
	branch pbuf_add_header(a1, 0x14<32>, out a1_107, out a2_218, out a3_54, out a4_219, out a5_56) == 0<32> l23043F90
l23043F90:
	word32 s0_57 = Mem48[a5_56 + 4<i32>:word32]
	word32 s2_58 = Mem48[a5_56 + 4<i32>:int32]
	Mem59[s0_57 + 16<i32>:word32] = s2_58
	word32 a5_225
	word32 a0_61 = lwip_htons(CONVERT(Mem59[a0 + 22<i32>:uint16], uint16, word32), out a5_225)
	Mem63[s2_58:byte] = SLICE(a0_61, byte, 0)
	Mem65[s2_58 + 1<i32>:byte] = SLICE(a0_61 >>u 8<i32>, byte, 0)
	word32 s2_67 = Mem65[s0_57 + 16<i32>:int32]
	word32 a5_226
	word32 a0_68 = lwip_htons(CONVERT(Mem65[a0 + 24<i32>:uint16], uint16, word32), out a5_226)
	Mem70[s2_67 + 2<i32>:byte] = SLICE(a0_68, byte, 0)
	Mem72[s2_67 + 3<i32>:byte] = SLICE(a0_68 >>u 8<i32>, byte, 0)
	word32 s2_73 = Mem72[s0_57 + 16<i32>:int32]
	word32 a5_227
	word32 a0_75 = lwip_htonl(a3, out a3_109, out a4_110, out a5_227)
	Mem80[s2_73 + 4<i32>:byte] = SLICE(a0_75, byte, 0)
	Mem81[s2_73 + 5<i32>:byte] = SLICE(a0_75 >>u 8<u32>, byte, 0)
	Mem84[s2_73 + 7<i32>:byte] = SLICE(a0_75 >>u 24<i32>, byte, 0)
	Mem86[s2_73 + 6<i32>:byte] = SLICE(a0_75 >>u 0x10<u32>, byte, 0)
	s2_125 = Mem86[s0_57 + 16<i32>:int32]
	word32 a0_91 = lwip_htons(((s1_36 & 4<32>) >>u 2<u32>) + 5<32> << 12<i32> | a2, out a5_111)
	Mem93[s2_125 + 12<i32>:byte] = SLICE(a0_91, byte, 0)
	Mem95[s2_125 + 13<i32>:byte] = SLICE(a0_91 >>u 8<i32>, byte, 0)
	s0_103 = Mem95[a5_111 + 16<i32>:word32]
	Mem97[a5_111 + 18<i32>:byte] = 0<8>
	Mem98[a5_111 + 19<i32>:byte] = 0<8>
l23043F74:
	word32 a4_101 = CONVERT(Mem48[0x4201FE40<32>:uint16], uint16, word32)
	Mem105[0x4201FE40<32>:word16] = SLICE(a4_101 + 1<32>, word16, 0)
	s0_103 = 0<32>
	word32 a0_228
	word32 a2_229
	s1_112 = tcp_seg_free(ra, a0_31, a3_54, a4_101 + 1<32>, a3, mstatus, dwArgD8, out a0_228, out a1_107, out a2_229, out a3_109, out a4_110, out a5_111)
l23043F30:
	word32 a0_220
	word32 a2_221
	word32 a7_222
	word32 s4_223
	word32 s8_224
	ra = pbuf_free(ra, a1, a3_34, a4_35, a3, mstatus, dwArgF8, out s0_103, out s1_112, out a0_220, out a1_107, out a2_221, out a3_109, out a4_110, out a5_111, out a7_222, out s2_125, out s3_126, out s4_223, out s5_130, out s6, out s8_224, out mstatus)
l23043F36:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_112
	a0Out = s0_103
	a1Out = a1_107
	a2Out = dwArg0100
	a3Out = a3_109
	a4Out = a4_110
	a5Out = a5_111
	s2Out = s2_125
	s3Out = s3_126
	s4Out = dwArg78
	s5Out = s5_130
	s6Out = s6
	s8Out = s5
	mstatusOut = mstatus
	return ra
tcp_create_segment_exit:


word32 tcp_output_alloc_header_common.constprop.6(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_output_alloc_header.constprop.5
//      tcp_rst
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_output_alloc_header_common.constprop.6_entry:
l23044010:
	word32 a0_39
	word32 s0_44
	word32 s3_51
	word32 s4_52
	word32 mstatus_55
	word32 s5_57
	word32 s6_58
	word32 a1_188
	word32 a2_189
	word32 a7_190
	word32 s2_191
	word32 s8_192
	word32 s1_167
	word32 a5_107
	word32 a4_162
	word32 a3_161
	word32 ra_56 = pbuf_alloc(ra, s0, a2, 162<i32>, CONVERT(SLICE(a1 + 0x14<32>, word16, 0), word16, word32), 640<i32>, a3, a4, mstatus, dwLoc2C, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_44, out s1_167, out a0_39, out a1_188, out a2_189, out a3_161, out a4_162, out a5_107, out a7_190, out s2_191, out s3_51, out s4_52, out s5_57, out s6_58, out s8_192, out mstatus_55)
	branch a0_39 == 0<32> l230440D6
l23044044:
	word32 a5_193
	word32 a0_68 = lwip_htons(a3_161, out a5_193)
	Mem70[s0_44:byte] = SLICE(a0_68, byte, 0)
	Mem72[s0_44 + 1<i32>:byte] = SLICE(a0_68 >>u 8<i32>, byte, 0)
	word32 a5_194
	word32 a0_74 = lwip_htons(s6_58, out a5_194)
	Mem77[s0_44 + 2<i32>:byte] = SLICE(a0_74, byte, 0)
	Mem78[s0_44 + 4<i32>:byte] = SLICE(s1_167, byte, 0)
	Mem80[s0_44 + 5<i32>:byte] = SLICE(s1_167 >>u 8<u32>, byte, 0)
	Mem83[s0_44 + 3<i32>:byte] = SLICE(a0_74 >>u 8<i32>, byte, 0)
	Mem84[s0_44 + 6<i32>:byte] = SLICE(s1_167 >>u 0x10<u32>, byte, 0)
	Mem85[s0_44 + 7<i32>:byte] = SLICE(s1_167 >>u 24<i32>, byte, 0)
	word32 a5_195
	word32 a0_87 = lwip_htonl(s5_57, out a3_161, out a4_162, out a5_195)
	Mem92[s0_44 + 8<i32>:byte] = SLICE(a0_87, byte, 0)
	Mem93[s0_44 + 9<i32>:byte] = SLICE(a0_87 >>u 8<u32>, byte, 0)
	Mem96[s0_44 + 11<i32>:byte] = SLICE(a0_87 >>u 24<i32>, byte, 0)
	Mem98[s0_44 + 10<i32>:byte] = SLICE(a0_87 >>u 0x10<u32>, byte, 0)
	word32 a5_196
	word32 a0_100 = lwip_htons(s4_52 | 0x5000000<32>, out a5_196)
	Mem102[s0_44 + 12<i32>:byte] = SLICE(a0_100, byte, 0)
	Mem104[s0_44 + 13<i32>:byte] = SLICE(a0_100 >>u 8<i32>, byte, 0)
	word32 a0_106 = lwip_htons(s3_51, out a5_107)
	Mem108[s0_44 + 14<i32>:byte] = SLICE(a0_106, byte, 0)
	Mem110[s0_44 + 15<i32>:byte] = SLICE(a0_106 >>u 8<i32>, byte, 0)
	Mem111[s0_44 + 16<i32>:byte] = 0<8>
	Mem112[s0_44 + 17<i32>:byte] = 0<8>
	Mem113[s0_44 + 18<i32>:byte] = 0<8>
	Mem114[s0_44 + 19<i32>:byte] = 0<8>
	s1_167 = s1_167 >>u 24<i32>
l230440D6:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_167
	a3Out = a3_161
	a4Out = a4_162
	a5Out = a5_107
	s2Out = a0_39
	s3Out = s3_51
	s4Out = dwArg78
	s5Out = s5_57
	s6Out = s6_58
	s8Out = s5
	mstatusOut = mstatus_55
	return ra_56
tcp_output_alloc_header_common.constprop.6_exit:


word32 tcp_output_alloc_header.constprop.5(word32 ra, word32 a0, word32 a1, word32 a2, word32 mstatus, word32 dwArg04, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_send_empty_ack
//      tcp_keepalive
//      tcp_zero_window_probe
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_output_alloc_header.constprop.5_entry:
l230440EC:
	word32 a0_13 = Mem7[a0 + 36<i32>:word32]
	word32 a3_20
	word32 mstatus_25
	word32 s0_27
	word32 s1_28
	word32 s2_29
	word32 s3_30
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 s8_34
	word32 a4_21
	word32 a5_22
	word32 ra_26 = tcp_output_alloc_header_common.constprop.6(ra, a0, a1, a2, CONVERT(Mem7[a0 + 22<i32>:uint16], uint16, word32), CONVERT(Mem7[a0 + 24<i32>:uint16], uint16, word32), mstatus, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_27, out s1_28, out a3_20, out a4_21, out a5_22, out s2_29, out s3_30, out s4_31, out s5_32, out s6_33, out s8_34, out mstatus_25)
	branch a0_13 == 0<32> l23044114
l2304410A:
	a4_21 = CONVERT(Mem7[s0_27 + 42<i32>:uint16], uint16, word32)
	a5_22 = a5_22 + a4_21
	Mem45[a5_22 + 44<i32>:word32] = Mem7[a5_22 + 36<i32>:word32]
l23044114:
	s1Out = s1_28
	a0Out = a0_13
	a3Out = a3_20
	a4Out = a4_21
	a5Out = a5_22
	s2Out = s2_29
	s3Out = s3_30
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	s8Out = s8_34
	mstatusOut = mstatus_25
	return ra_26
tcp_output_alloc_header.constprop.5_exit:


word32 tcp_output_control_segment(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 s6, word32 s7, word32 mstatus, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_rst
//      tcp_send_empty_ack
//      tcp_keepalive
//      tcp_zero_window_probe
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s6:[0..31] s7:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_output_control_segment_entry:
l2304411C:
	word32 a3_110
	word32 a4_111
	word32 a0_30
	word32 s0_116 = a1
	word32 s4_120 = a2
	branch a0 == 0<32> l230441A6
l23044134:
	word32 a0_24 = CONVERT(Mem15[a0 + 8<i32>:byte], byte, word32)
	branch a0_24 == 0<32> l230441A6
l230441A6:
	word32 a5_248
	word32 a2_247
	a0_30 = ip4_route(a2, a5, out a2_247, out a3_110, out a4_111, out a5_248)
l2304413A:
	word32 a5_249
	a0_30 = netif_get_by_index(a0_24, out a4_111, out a5_249)
	a3_110 = a3
l2304413E:
	branch a0_30 == 0<32> l2304418E
l23044144:
	word32 a4_106
	word32 a3_105
	word32 a0_54
	word32 a6_60
	word32 s1_62
	word32 s2_63
	word32 s3_64
	word32 s4_65
	word32 s5_66
	word32 a2_256
	word32 a4_258
	word32 a3_257
	word32 s0_61 = ip_chksum_pseudo(a1, 6<32>, CONVERT(Mem41[a1 + 8<i32>:uint16], uint16, word32), a2, a3, out s1_62, out a0_54, out a2_256, out a3_257, out a4_258, out a6_60, out s2_63, out s3_64, out s4_65, out s5_66)
	Mem70[s3_64 + 16<i32>:byte] = SLICE(a0_54, byte, 0)
	Mem72[s3_64 + 17<i32>:byte] = SLICE(a0_54 >>u 8<i32>, byte, 0)
	branch s1_62 == 0<32> l230441AE
l230441AE:
	a4_106 = 0<32>
	a3_105 = 255<i32>
l23044166:
	a3_105 = CONVERT(Mem72[s1_62 + 11<i32>:byte], byte, word32)
	a4_106 = CONVERT(Mem72[s1_62 + 10<i32>:byte], byte, word32)
l2304416E:
	Mem87[0x4201FE2C<32>:word16] = SLICE(CONVERT(Mem72[0x4201FE2C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s1_259
	word32 a0_260
	word32 a5_261
	word32 a7_262
	word32 s2_263
	word32 s3_264
	word32 s5_265
	word32 s6_266
	word32 s8_267
	ra = ip4_output_if(ra, s0_61, s1_62, s0_61, s4_65, s2_63, a3_105, a4_106, 6<32>, a6_60, s4_65, s5_66, s6, s7, out s0_116, out s1_259, out a0_260, out a3_110, out a4_111, out a5_261, out a7_262, out s2_263, out s3_264, out s4_120, out s5_265, out s6_266, out s7, out s8_267, out s9)
l2304418E:
	word32 s0_250
	word32 a1_252
	word32 a0_251
	word32 a7_254
	word32 a2_253
	word32 s8_255
	word32 a3_156
	word32 a4_157
	word32 a5_158
	word32 s1_159
	word32 s2_160
	word32 s3_161
	word32 s4_164
	word32 s5_165
	word32 s6_166
	word32 mstatus_173
	word32 ra_174 = pbuf_free(ra, s0_116, a3_110, a4_111, s4_120, mstatus, dwArgF8, out s0_250, out s1_159, out a0_251, out a1_252, out a2_253, out a3_156, out a4_157, out a5_158, out a7_254, out s2_160, out s3_161, out s4_164, out s5_165, out s6_166, out s8_255, out mstatus_173)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_159
	a0Out = s3_161
	a3Out = a3_156
	a4Out = a4_157
	a5Out = a5_158
	s2Out = s2_160
	s3Out = s3_161
	s4Out = s4_164
	s5Out = s5_165
	s6Out = s6_166
	s7Out = s7
	s8Out = dwArg58
	s9Out = s9
	mstatusOut = mstatus_173
	return ra_174
tcp_output_control_segment_exit:


word32 tcp_write(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg19, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_write
//      lwip_netconn_do_write
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..15] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0019:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a1 a2 a3 a5 mstatus ra s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_write_entry:
l230441B6:
	word32 s2_30 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l2304422A
l230441D6:
	word32 a5_32 = CONVERT(Mem29[a0 + 98<i32>:uint16], uint16, word32)
	word32 a4_33 = CONVERT(Mem29[a0 + 50<i32>:uint16], uint16, word32)
	a5 = a5_32 >>u 1<i32>
	word32 a7_35 = a5_32 >>u 1<i32>
	branch a4_33 >=u a5_32 >>u 1<i32> l230441E8
l230441E6:
	a7_35 = a4_33
l230441E8:
	word32 s8_38 = a7_35 << 0x10<u32>
	word32 s8_162 = s8_38 >>u 0x10<u32>
	branch s8_38 >>u 0x10<u32> != 0<32> l230441F6
l230441F4:
	s8_162 = a4_33
l230441F6:
	s2_30 = 0xFFFFFFF0<32>
	branch a1 == 0<32> l2304422A
l230441FA:
	a5 = CONVERT(Mem29[a0 + 20<i32>:byte], byte, word32)
	word32 a4_101 = 7<32>
	branch a5 == 7<32> l23044212
l23044204:
	a5 = a5 + 0xFFFFFFFE<32> & 255<i32>
	a4_101 = 2<32>
	s2_30 = 0xFFFFFFF5<32>
	branch a5 >u 2<32> l2304422A
l23044212:
	branch a2 == 0<32> l23044268
l23044214:
	branch CONVERT(Mem29[a0 + 100<i32>:uint16], uint16, word32) >=u a2 l2304424A
l2304424A:
	a4_101 = CONVERT(Mem29[a0 + 102<i32>:uint16], uint16, word32)
	a5 = 0xF<32>
	branch a4_101 <=u 0xF<32> l23044268
l23044268:
	word32 s1_114
	word32 s11_356
	word32 s2_106
	word32 a0_70 = Mem29[s1 + 108<i32>:word32]
	word32 s5_270 = CONVERT(Mem29[a0_70 + 102<i32>:uint16], uint16, word32)
	s1_114 = s1
	branch s1 == 0<32> l23044456
l23044456:
	s11_356 = 0<32>
	s7 = 0<32>
	s2_106 = 0<32>
	s1_114 = s1
l23044272:
	s11_356 = s1_1179
	s1_114 = Mem29[s1_1179:word32]
	s1_1179 = s1_114
	branch s1_114 != 0<32> l23044272
l23044278:
	s7 = CONVERT(Mem29[a0_70 + 104<i32>:uint16], uint16, word32)
	word32 t1_81 = CONVERT(Mem29[s1_1179 + 13<i32>:byte], byte, word32)
	a4_101 = CONVERT(Mem29[s1_1179 + 8<i32>:uint16], uint16, word32)
	s2_106 = 0<32>
	branch s7 == 0<32> l230442C8
l2304428A:
	word32 a4_91 = s8_162 - a4_101 - (t1_81 << 2<i32> & 4<i32>)
	word32 t1_92 = s7
	branch a2 >=u s7 l230442A0
l2304429E:
	t1_92 = a2
l230442A0:
	word32 s2_103 = a4_91
	a4_101 = CONVERT(SLICE(a4_91, word16, 0), word16, word32)
	branch CONVERT(SLICE(t1_92, word16, 0), word16, word32) >=u a4_101 l230442B4
l230442B2:
	s2_103 = t1_92
l230442B4:
	word32 s2_105 = s2_103 << 16<i32>
	s2_106 = s2_105 >>u 0x10<u32>
	s7 = CONVERT(SLICE(s7 - (s2_105 >>u 0x10<u32>), word16, 0), word16, word32)
	s1_114 = s1_1179
l230442C8:
	word16 wLoc5C_894 = SLICE(a3, word16, 0)
	s3 = a2
	word32 s0_147 = a0_70
	word32 s10_149 = s2_106
	word32 s4_150 = 0<32>
	word32 s9_151 = 0<32>
	word16 wLoc5A_577 = SLICE(s8_162, word16, 0)
l230443D2:
	branch s10_149 <u s3 l230442DC
l230442DC:
	word32 a3_158 = s3 - s10_149
	word32 a4_159 = a3_158
	word32 a3_161 = CONVERT(SLICE(a3_158, word16, 0), word16, word32)
	word32 dwLoc5C_592 = SEQ(wLoc5A_577, wLoc5C_894)
	branch s8_162 >=u a3_161 l230442EE
l230442EA:
	a4_159 = CONVERT(wLoc5A_577, word16, word32)
l230442EE:
	word32 a0_185
	word32 a4_188
	word32 a5_189
	word32 s5_203
	word32 s6_204
	word32 s2_1156
	word32 s1_1153
	word32 a2_1154
	word32 s8_1157
	word32 a7_1155
	word32 a3_187
	ra = pbuf_alloc(ra, s0_147, s1_114, 182<i32>, s8_162, 640<i32>, a3_161, a4_159, mstatus, dwLoc5C_592, dwLoc1C, s1, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out s0_147, out s1_1153, out a0_185, out a1, out a2_1154, out a3_187, out a4_188, out a5_189, out a7_1155, out s2_1156, out s3, out s4_150, out s5_203, out s6_204, out s8_1157, out mstatus)
	s6 = s6_204 >>u 0x10<u32>
	branch a0_185 == 0<32> l23044362
l23044312:
	0<32> = dwArg84
	word32 a6_213 = CONVERT(Mem175[a0_185 + 10<i32>:uint16], uint16, word32)
	Mem214[a0_185 + 8<i32>:word16] = SLICE(a4_188, word16, 0)
	Mem215[a0_185 + 10<i32>:word16] = SLICE(a4_188, word16, 0)
	word32 a0_222
	word32 a2_1161
	word32 a4_1162
	word32 s1_230 = lwip_chksum_copy(Mem215[a0_185 + 4<i32>:word32], a5_189 + s10_149, s6_204 >>u 0x10<u32>, out a0_222, out a2_1161, out a4_1162)
	word32 a4_244
	word32 a5_1163
	tcp_seg_add_chksum(a0_222, s6_204 >>u 0x10<u32>, fp + -66<i32>, fp + -67<i32>, out a4_244, out a5_1163)
	s7 = CONVERT(SLICE(a6_213 - (s6_204 >>u 0x10<u32>), word16, 0), word16, word32)
	branch CONVERT(SLICE(s5_203 + pbuf_clen(s1_230), word16, 0), word16, word32) <=u 0x10<32> l2304438C
l2304438C:
	word32 a0_259
	word32 a4_1166
	word32 s1_1164
	word32 a2_1165
	ra = tcp_create_segment(ra, dwArg19, s1_230, 0<32>, fp + -67<i32> + s10_149, 0<32>, mstatus, dwArg78, dwArg98, dwArgC8, out s0_147, out s1_1164, out a0_259, out a1, out a2_1165, out a3_187, out a4_1166, out a5, out s2_106, out s3, out s4_150, out s5_270, out s6, out s8_162, out mstatus)
	s1_114 = a0_259
	branch a0_259 == 0<32> l23044362
l230443A0:
	Mem286[a0_259 + 10<i32>:word16] = 0<16>
	Mem288[a0_259 + 12<i32>:byte] = 0<8>
	word32 a4_289 = CONVERT(Mem288[a0_259 + 13<i32>:byte], byte, word32)
	Mem291[a0_259 + 13<i32>:byte] = SLICE(a4_289 | 4<i32>, byte, 0)
	a4_101 = a4_289 | 4<i32>
	branch s4_150 == 0<32> l23044452
l23044452:
	s4_150 = a0_259
l230443C0:
	Mem295[s9_151:word32] = a0_259
l230443C4:
	s10_149 = CONVERT(SLICE(s10_149 + s6, word16, 0), word16, word32)
	s9_151 = a0_259
l2304435C:
	word32 s1_1167
	word32 a7_1172
	word32 a0_1168
	word32 a2_1169
	word32 a4_1170
	word32 a5_1171
	word32 s2_1173
	word32 s8_1175
	word32 s5_1174
	ra = pbuf_free(ra, s1_230, fp + -67<i32>, a4_244, s4_150, mstatus, dwArgC8, out s0_147, out s1_1167, out a0_1168, out a1, out a2_1169, out a3_187, out a4_1170, out a5_1171, out a7_1172, out s2_1173, out s3, out s4_150, out s5_1174, out s6, out s8_1175, out mstatus)
l23044362:
	Mem333[s0_147 + 26<i32>:word16] = SLICE(CONVERT(Mem330[s0_147 + 26<i32>:uint16], uint16, word32) | 128<i32>, word16, 0)
	word32 a4_336 = CONVERT(Mem333[0x4201FE38<32>:uint16], uint16, word32)
	Mem338[0x4201FE38<32>:word16] = SLICE(a4_336 + 1<32>, word16, 0)
	a5 = 0x4201FD98<32>
	branch s4_150 == 0<32> l23044228
l23044384:
	word32 a3_1177
	word32 a0_1176
	word32 a4_1178
	tcp_segs_free(ra, s0_147, s4_150, a3_187, a4_336 + 1<32>, s4_150, mstatus, dwArg98, out a0_1176, out a1, out a3_1177, out a4_1178, out a5)
l230443D6:
	branch s2_106 == 0<32> l230443F4
l230443DA:
	word32 s10_359 = Mem164[s11_356 + 4<i32>:int32]
	s6 = s11_356 + 12<i32>
	word32 s9_361 = s11_356 + 10<i32>
l230443E6:
	branch s10_359 != 0<32> l2304445E
l2304445E:
	Mem367[s10_359 + 8<i32>:word16] = SLICE(CONVERT(Mem363[s10_359 + 8<i32>:uint16], uint16, word32) + s2_106, word16, 0)
	branch Mem367[s10_359:int32] != 0<32> l230444A0
l2304446E:
	word32 a4_369 = CONVERT(Mem367[s10_359 + 10<i32>:uint16], uint16, word32)
	word32 a0_370 = Mem367[s10_359 + 4<i32>:int32]
	0<32> = dwArg04
	word32 a0_375
	word32 a2_1158
	word32 a4_1159
	s1_114 = lwip_chksum_copy(a0_370 + a4_369, a1, s2_106, out a0_375, out a2_1158, out a4_1159)
	word32 a4_1160
	a1 = tcp_seg_add_chksum(a0_375, s2_106, s9_361, s6, out a4_1160, out a5)
	Mem403[s11_356 + 13<i32>:byte] = SLICE(CONVERT(Mem367[s11_356 + 13<i32>:byte], byte, word32) | 4<i32>, byte, 0)
	Mem406[s10_359 + 10<i32>:word16] = SLICE(CONVERT(Mem403[s10_359 + 10<i32>:uint16], uint16, word32) + s2_106, word16, 0)
l230444A0:
	s10_359 = Mem408[s10_359:int32]
l230443EA:
	a4_101 = CONVERT(Mem363[s11_356 + 8<i32>:uint16], uint16, word32)
	Mem412[s11_356 + 8<i32>:word16] = SLICE(s2_106 + a4_101, word16, 0)
l230443F4:
	Mem422[s0_147 + 104<i32>:word16] = SLICE(s7, word16, 0)
	branch s11_356 != 0<32> l230444A6
l230444A6:
	Mem429[s11_356:word32] = s4_150
l230443FC:
	Mem430[s0_147 + 108<i32>:word32] = s4_150
l23044400:
	word32 s0_444 = Mem443[a5 + 92<i32>:word32]
	word32 a2_445 = CONVERT(Mem443[s0_444 + 100<i32>:uint16], uint16, word32)
	Mem456[s0_444 + 102<i32>:word16] = SLICE(s5_270, word16, 0)
	a5 = a5 + s3
	Mem463[a5 + 92<i32>:word32] = s0_444
	s3 = a2_445 - s3
	Mem464[s0_444 + 100<i32>:word16] = SLICE(s3, word16, 0)
	s2_30 = 0<32>
	branch s1_114 == 0<32> l2304422A
l2304441C:
	branch a5 == 0<32> l2304422A
l23044422:
	s7 = a4_101 & 2<i32>
	branch s7 != 0<32> l2304422A
l2304442C:
	word32 a0_493 = CONVERT(SLICE(lwip_htons(8<32>, out a5) | (CONVERT(Mem464[a5 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem464[a5 + 12<i32>:byte], byte, word32)), word16, 0), word16, word32)
	Mem494[a5 + 12<i32>:byte] = SLICE(a0_493, byte, 0)
	Mem496[a5 + 13<i32>:byte] = SLICE(a0_493 >>u 8<i32>, byte, 0)
l23044254:
	Mem501[0x4201FE38<32>:word16] = SLICE(CONVERT(Mem29[0x4201FE38<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2304421C:
	word32 a5_504 = CONVERT(Mem503[a0 + 26<i32>:uint16], uint16, word32)
	Mem506[a0 + 26<i32>:word16] = SLICE(a5_504 | 128<i32>, word16, 0)
	a5 = a5_504 | 128<i32>
l23044228:
	s2_30 = 0xFFFFFFFF<32>
l2304422A:
	a0Out = s2_30
	a1Out = a1
	a2Out = dwArg011C
	a3Out = dwArg08
	a5Out = a5
	s2Out = s2_30
	s3Out = s3
	s4Out = dwArgDC
	s5Out = s4
	s6Out = s6
	s7Out = s7
	s8Out = dwArgBC
	mstatusOut = mstatus
	return dwArg68
tcp_write_exit:


void tcp_split_unsent_seg(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_split_unsent_seg_entry:
l230444AC:
	branch s0 != 0<32> l230444D2
l230444D2:
	branch a1 == 0<32> l230444E0
l230444D6:
	word32 s6_29 = CONVERT(Mem26[s0 + 8<i32>:uint16], uint16, word32)
	branch a1 <u s6_29 l230444FA
l230444FA:
	word32 s7_36 = CONVERT(SLICE(s6_29 - a1, word16, 0), word16, word32)
	word32 a0_47
	word32 s1_53
	word32 s3_59
	word32 a4_636
	word32 a1_634
	word32 a2_635
	word32 s0_633
	word32 a5_637
	word32 a7_638
	word32 s2_639
	word32 s5_640
	word32 s6_641
	word32 s8_642
	word32 mstatus_197
	word32 a3_183
	word32 s4_205
	word32 ra_198 = pbuf_alloc(ra, s0, a1, 182<i32>, CONVERT(SLICE(s7_36 + ((CONVERT(Mem26[s0 + 13<i32>:byte], byte, word32) & 251<i32>) << 2<u32> & 4<i32>), word16, 0), word16, word32), 640<i32>, a3, a4, mstatus, dwLoc4C, dwLoc0C, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_633, out s1_53, out a0_47, out a1_634, out a2_635, out a3_183, out a4_636, out a5_637, out a7_638, out s2_639, out s3_59, out s4_205, out s5_640, out s6_641, out s8_642, out mstatus_197)
	word32 s5_191 = a0_47
	branch a0_47 == 0<32> l2304470E
l23044532:
	word32 a0_83
	word32 s1_90
	word32 s2_91
	word32 a4_94
	word32 s3_97
	word32 a1_643
	word32 a2_644
	word32 a5_645
	word32 s8_646
	pbuf_copy_partial(a0_47, Mem26[a0_47 + 4<i32>:int32] + s3_59, s7_36, CONVERT(SLICE(CONVERT(Mem26[a0_47 + 8<i32>:uint16] - Mem26[Mem26[a0_47 + 4<i32>:word32] + 8<i32>:uint16], uint16, uint16) + s1_53, word16, 0), word16, word32), out s1_90, out a0_83, out a1_643, out a2_644, out a3_183, out a4_94, out a5_645, out s2_91, out s3_97, out s4_205, out s8_646)
	branch a0_83 != s7_36 l2304470E
l23044556:
	word32 s3_132
	word32 a5_121
	word32 a4_122
	word32 a2_647
	word32 a4_649
	word32 a5_650
	word32 a3_648
	tcp_seg_add_chksum(CONVERT(SLICE(~inet_chksum(Mem26[a0_47 + 4<i32>:int32] + s3_97, a0_83, a4_94, out a2_647, out a3_648, out a4_649, out a5_650), word16, 0), word16, word32), a0_83, fp + -50<i32>, fp + -51<i32>, out a4_122, out a5_121)
	word32 a5_651
	word32 a0_128 = lwip_htons(CONVERT(Mem26[a5_121 + 12<i32>:byte], byte, word32) | CONVERT(Mem26[a5_121 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_651)
	word32 a2_131 = a0_128 & 255<i32> & 8<i32>
	branch a2_131 != 0<32> l230446CE
l230446CE:
	s3_132 = a0_128 & 255<i32> & 55<i32>
	a2_131 = 8<32>
l23044596:
	s3_132 = a0_128 & 255<i32> & 63<i32>
l2304459A:
	branch (s3_132 & 1<i32>) == 0<32> l230445A8
l230445A0:
	a2_131 = a2_131 | 1<i32>
l230445A8:
	word32 a0_180
	word32 a4_184
	word32 s1_187
	word32 s2_188
	word32 s6_199
	word32 a3_652
	word32 a4_653
	word32 s0_655
	word32 a5_654
	word32 a1_656
	word32 a2_657
	word32 a5_658
	word32 s3_659
	word32 s4_660
	word32 s8_661
	ra_198 = tcp_create_segment(ra_198, s2_91, a0_47, a2_131, s1_90 + lwip_htonl(CONVERT(Mem148[a4_122 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem148[a4_122 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem148[a4_122 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem148[a4_122 + 4<i32>:byte], byte, word32))), out a3_652, out a4_653, out a5_654), s4_205, mstatus_197, dwArg88, dwArgA8, dwArgD8, out s0_655, out s1_187, out a0_180, out a1_656, out a2_657, out a3_183, out a4_184, out a5_658, out s2_188, out s3_659, out s4_660, out s5_191, out s6_199, out s8_661, out mstatus_197)
	s4_205 = a0_180
	branch a0_180 == 0<32> l2304470E
l2304470E:
	word32 a4_209 = CONVERT(Mem208[0x4201FE38<32>:uint16], uint16, word32)
	Mem211[0x4201FE38<32>:word16] = SLICE(a4_209 + 1<32>, word16, 0)
	branch s5_191 == 0<32> l230444CE
l23044724:
	word32 s0_675
	word32 s1_676
	word32 a0_677
	word32 a1_678
	word32 a2_679
	word32 a3_680
	word32 a4_681
	word32 a5_682
	word32 a7_683
	word32 s2_684
	word32 s3_685
	word32 s4_686
	word32 s5_687
	word32 s6_688
	word32 s8_689
	word32 mstatus_690
	pbuf_free(ra_198, s5_191, a3_183, a4_209 + 1<32>, s4_205, mstatus_197, dwArgD8, out s0_675, out s1_676, out a0_677, out a1_678, out a2_679, out a3_680, out a4_681, out a5_682, out a7_683, out s2_684, out s3_685, out s4_686, out s5_687, out s6_688, out s8_689, out mstatus_690)
l230445E2:
	Mem247[a0_180 + 10<i32>:word16] = 0<16>
	Mem250[a0_180 + 12<i32>:byte] = 0<8>
	Mem253[a0_180 + 13<i32>:byte] = SLICE(CONVERT(Mem250[a0_180 + 13<i32>:byte], byte, word32) | 4<i32>, byte, 0)
	word32 a0_258 = CONVERT(Mem253[s2_188 + 102<i32>:uint16], uint16, word32) - pbuf_clen(a0_180)
	Mem259[s2_188 + 102<i32>:word16] = SLICE(a0_258, word16, 0)
	word32 s0_260 = Mem259[a0_258 + 4<i32>:word32]
	word32 a2_662
	word32 a3_663
	word32 a5_664
	word32 s5_665
	word32 mstatus_668
	word32 s6_666
	word32 s8_667
	word32 s1_269
	word32 s2_277
	word32 s3_278
	word32 s4_279
	word32 a4_268
	pbuf_realloc(ra_198, a0_258, CONVERT(CONVERT(Mem259[a0_258 + 8<i32>:uint16] + SLICE(s1_187 - s6_199, word16, 0), uint16, uint16), uint16, word32), a3_183, a4_184, a0_180, mstatus_197, dwArgC8, out s1_269, out a2_662, out a3_663, out a4_268, out a5_664, out s2_277, out s3_278, out s4_279, out s5_665, out s6_666, out s8_667, out mstatus_668)
	Mem292[Mem259[a4_268 + 16<i32>:word32] + 8<i32>:word16] = SLICE(s1_269 + CONVERT(Mem259[s0_260 + 8<i32>:uint16], uint16, word32), word16, 0)
	word32 s1_296 = CONVERT(Mem292[a4_268 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem292[a4_268 + 12<i32>:byte], byte, word32)
	word32 a5_669
	word32 a0_298 = lwip_htons(s3_278, out a5_669)
	word32 a5_303 = CONVERT(SLICE(s1_296 | a0_298, word16, 0), word16, word32)
	Mem304[a4_268 + 12<i32>:byte] = SLICE(a5_303, byte, 0)
	Mem306[a4_268 + 13<i32>:byte] = SLICE(a5_303 >>u 8<i32>, byte, 0)
	word32 s0_307 = Mem306[a0_298 + 4<i32>:word32]
	Mem312[s2_277 + 102<i32>:word16] = SLICE(pbuf_clen(a0_298) + CONVERT(Mem306[s2_277 + 102<i32>:uint16], uint16, word32), word16, 0)
	word32 s3_313 = Mem312[s0_307 + 4<i32>:int32]
	Mem314[s0_307 + 10<i32>:word16] = 0<16>
	Mem315[s0_307 + 12<i32>:byte] = 0<8>
	word32 s1_320 = CONVERT(CONVERT(Mem315[s3_313 + 8<i32>:uint16] - Mem315[s0_307 + 8<i32>:uint16], uint16, uint16), uint16, word32)
l23044684:
	word32 a1_323 = CONVERT(Mem315[s3_313 + 10<i32>:uint16], uint16, word32)
	branch a1_323 <u s1_320 l230446D6
l230446D6:
	s3_313 = Mem315[s3_313:int32]
	s1_320 = CONVERT(SLICE(s1_320 - a1_323, word16, 0), word16, word32)
	branch s3_313 != 0<32> l23044684
l2304468C:
l23044694:
	word32 a2_670
	word32 a4_672
	word32 a3_671
	word32 a5_673
	word32 a5_674
	tcp_seg_add_chksum(CONVERT(SLICE(~inet_chksum(Mem315[s3_313 + 4<i32>:int32] + s1_320, CONVERT(SLICE(CONVERT(Mem315[s3_313 + 10<i32>:uint16], uint16, word32) - s1_320, word16, 0), word16, word32), a4_268, out a2_670, out a3_671, out a4_672, out a5_673), word16, 0), word16, word32), CONVERT(SLICE(CONVERT(Mem315[s3_313 + 10<i32>:uint16], uint16, word32) - s1_320, word16, 0), word16, word32), s0_307 + 10<i32>, s0_307 + 12<i32>, out a4_268, out a5_674)
	s3_313 = Mem315[s3_313:int32]
	s1_320 = 0<32>
	branch s3_313 != 0<32> l23044694
l230446CC:
l230446E4:
	word32 a0_370 = pbuf_clen(Mem315[s4_279 + 4<i32>:int32])
	word32 a5_375 = CONVERT(Mem315[s2_277 + 102<i32>:uint16], uint16, word32)
	Mem377[s2_277 + 102<i32>:word16] = SLICE(a0_370 + a5_375, word16, 0)
	word32 s0_378 = Mem377[a5_375:word32]
	Mem379[s4_279:word32] = a5_375
	Mem380[s0_378:word32] = s4_279
	branch Mem380[s4_279:int32] != 0<32> l230444DE
l23044708:
	Mem382[s2_277 + 104<i32>:word16] = 0<16>
l230444DE:
l230444CE:
l230444E0:
	return
tcp_split_unsent_seg_exit:


word32 tcp_enqueue_flags(word32 ra, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg24, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_connect
//      tcp_input
//      tcp_send_fin
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0024:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_enqueue_flags_entry:
l2304472C:
	word32 a0_117
	word32 a5_114
	word32 a4_127
	word32 a4_6 = a1 >>u 1<u32> & 1<32>
	word32 a0_25
	word32 a4_28
	word32 s4_304
	word32 s6_305
	word32 s8_306
	word32 a2_300
	word32 a5_301
	word32 a7_302
	word32 s2_303
	word32 a1_299
	word32 a3_197
	word32 mstatus_214
	word32 s0_101
	word32 s1_100
	word32 s3_234
	word32 s5_240
	word32 ra_220 = pbuf_alloc(ra, a0, a1, 182<i32>, a4_6 << 2<u32>, 640<i32>, a3, a4_6, mstatus, dwLoc1C, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_101, out s1_100, out a0_25, out a1_299, out a2_300, out a3_197, out a4_28, out a5_301, out a7_302, out s2_303, out s3_234, out s4_304, out s5_240, out s6_305, out s8_306, out mstatus_214)
	word32 a2_191 = dwArgA4
	branch a0_25 != 0<32> l23044786
l23044786:
	word32 a0_55
	word32 s2_63
	word32 s4_308
	word32 s6_309
	word32 s8_310
	word32 a1_307
	word32 a5_60
	ra_220 = tcp_create_segment(ra_220, Mem22[a3_197 + 92<i32>:word32], a0_25, s1_100, a3_197, a4_28, mstatus_214, dwArgB8, dwArgD8, dwArg0108, out s0_101, out s1_100, out a0_55, out a1_307, out a2_191, out a3_197, out a4_127, out a5_60, out s2_63, out s3_234, out s4_308, out s5_240, out s6_309, out s8_310, out mstatus_214)
	branch a0_55 == 0<32> l2304475A
l23044794:
	s0_101 = Mem22[a5_60 + 108<i32>:word32]
	branch a5_60 != 0<32> l230447CE
l230447CE:
	a5_60 = Mem22[a4_127:word32]
	branch a4_127 != 0<32> l230447CC
l230447CC:
l230447D2:
	Mem86[a0_55:word32] = a5_60
l23044798:
	Mem87[a0_55 + 108<i32>:word32] = s0_101
l2304479A:
	Mem90[s0_101 + 104<i32>:word16] = 0<16>
	branch s2_63 == 0<32> l230447A8
l230447A2:
	s0_101 = Mem90[a5_60 + 92<i32>:word32]
	Mem96[a5_60 + 0x5D<32>:word32] = s0_101
l230447A8:
	s1_100 = s1_100 & 1<32>
	branch (s1_100 & 1<32>) == 0<32> l230447B8
l230447AC:
	Mem105[s0_101 + 26<i32>:word16] = SLICE(CONVERT(Mem102[s0_101 + 26<i32>:uint16], uint16, word32) | 32<i32>, word16, 0)
l230447B8:
	word32 a0_111 = pbuf_clen(Mem109[a0_55 + 4<i32>:word32])
	a5_114 = CONVERT(Mem109[s0_101 + 102<i32>:uint16], uint16, word32)
	Mem116[s0_101 + 102<i32>:word16] = SLICE(a0_111 + a5_114, word16, 0)
	a0_117 = 0<32>
l2304475A:
	Mem123[s0_101 + 26<i32>:word16] = SLICE(CONVERT(Mem22[s0_101 + 26<i32>:uint16], uint16, word32) | 128<i32>, word16, 0)
	word32 a4_126 = CONVERT(Mem123[0x4201FE38<32>:uint16], uint16, word32)
	Mem128[0x4201FE38<32>:word16] = SLICE(a4_126 + 1<32>, word16, 0)
	a0_117 = 0xFFFFFFFF<32>
	a5_114 = 0x4201FD98<32>
	a4_127 = a4_126 + 1<32>
l2304477A:
	s0Out = s0_101
	s1Out = s1_100
	a0Out = a0_117
	a2Out = a2_191
	a3Out = a3_197
	a4Out = a4_127
	a5Out = a5_114
	s3Out = s3_234
	s4Out = dwArg04
	s5Out = s5_240
	mstatusOut = mstatus_214
	return ra_220
tcp_enqueue_flags_exit:


void tcp_send_fin(word32 ra, word32 s1, word32 a3, word32 a5, word32 mstatus, word32 dwArg24, word32 dwArg38, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_shutdown
// MayUse:  a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_send_fin_entry:
l230447D6:
	word32 a0_12 = Mem11[s1 + 108<i32>:word32]
	branch s1 != 0<32> l230447FA
l230447FA:
	branch a5 != 0<32> l230447F8
l230447F8:
l230447FE:
	word32 a5_24
	branch (lwip_htons(CONVERT(Mem11[a5 + 12<i32>:byte], byte, word32) | CONVERT(Mem11[a5 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_24) & 7<32>) != 0<32> l230447E6
l23044814:
	word32 a5_33
	word32 a0_37 = CONVERT(SLICE(lwip_htons(1<32>, out a5_33) | (CONVERT(Mem11[a5_24 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem11[a5_24 + 12<i32>:byte], byte, word32)), word16, 0), word16, word32)
	Mem38[a5_33 + 12<i32>:byte] = SLICE(a0_37, byte, 0)
	Mem40[a5_33 + 13<i32>:byte] = SLICE(a0_37 >>u 8<i32>, byte, 0)
	Mem47[a0_12 + 26<i32>:word16] = SLICE(CONVERT(Mem40[a0_12 + 26<i32>:uint16], uint16, word32) | 32<i32>, word16, 0)
	0<32> = dwArg38
	return
l230447E6:
	0<32> = dwArg38
l230447F4_thunk_tcp_enqueue_flags:
	word32 mstatus_202
	word32 s5_201
	word32 s4_200
	word32 s3_199
	word32 a5_198
	word32 a4_197
	word32 a3_196
	word32 a2_195
	word32 a0_194
	word32 s1_193
	word32 s0_192
	tcp_enqueue_flags(ra, a0_12, 1<32>, a3, mstatus, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_192, out s1_193, out a0_194, out a2_195, out a3_196, out a4_197, out a5_198, out s3_199, out s4_200, out s5_201, out mstatus_202)
	return
tcp_send_fin_exit:


word32 tcp_rexmit_rto_prepare(word32 s1, word32 a4, word32 a5, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
//      tcp_rexmit_rto
// MayUse:  a4:[0..31] a5:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
tcp_rexmit_rto_prepare_entry:
l23044854:
	word32 a5_25
	word32 a3_109 = 1<32>
	branch s1 != 0<32> l23044870
l23044870:
	s1 = Mem13[a5:word32]
	a4 = CONVERT(Mem13[a4 + 14<i32>:byte], byte, word32)
	branch a5 != 0<32> l2304486A
l2304486A:
	s1 = a5
	branch a4 != 1<32> l23044866
l2304487A:
	a3_109 = 1<32>
	a5_25 = 0xFFFFFFFA<32>
	branch a4 != 1<32> l230448EC
l23044882:
	Mem29[0xFFFFFFFA<32>:word32] = s1
	word32 a0_30 = Mem29[0x6A<32>:word32]
	Mem31[a0_30 + 112<i32>:word32] = 0<32>
	Mem33[0x66<32>:word32] = a0_30
	Mem36[a0_30 + 26<i32>:word16] = SLICE(CONVERT(Mem33[a0_30 + 26<i32>:uint16], uint16, word32) | 0xFFF800<32>, word16, 0)
	word32 a5_51
	word32 a0_48 = lwip_htonl(CONVERT(Mem36[0xFFF807<32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem36[0xFFF806<32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem36[0xFFF805<32>:byte], byte, word32) << 8<i32> | CONVERT(Mem36[0xFFF804<32>:byte], byte, word32))), out a3_109, out a4, out a5_51)
	s1 = Mem36[a5_51 + 16<i32>:word32]
	s3 = CONVERT(Mem36[s1 + 8<i32>:uint16], uint16, word32)
	s2 = a0_48 + s3
	word32 a5_134
	Mem65[CONVERT((lwip_htons(CONVERT(Mem36[a5_51 + 12<i32>:byte], byte, word32) | CONVERT(Mem36[a5_51 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_134) & 3<32>) != 0<32>, bool, word32) + s2 + 76<i32>:word32] = a0_30
	Mem66[a0_30 + 52<i32>:word32] = 0<32>
	s0 = a0_30
	a5_25 = 0<32>
l23044866:
	a5_25 = 0xFFFFFFFA<32>
l230448EC:
	s1Out = s1
	a0Out = a5_25
	a2Out = dwArg48
	a3Out = a3_109
	a4Out = a4
	a5Out = a5_25
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s0
tcp_rexmit_rto_prepare_exit:


word32 tcp_rexmit(word32 s1, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
//      tcp_rexmit_fast
// MayUse:  s1:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
tcp_rexmit_entry:
l230448FC:
	word32 a0_14 = Mem13[s1 + 112<i32>:word32]
	word32 a5_15 = 0xFFFFFFFA<32>
	branch s1 == 0<32> l23044956
l2304490E:
	s1 = Mem13[0xFFFFFFFE<32>:word32]
	a4 = 1<32>
	a3 = CONVERT(Mem13[8<32>:byte], byte, word32)
	a5_15 = 0xFFFFFFFA<32>
	branch a3 != 1<32> l23044956
l2304491C:
	word32 s1_20 = Mem13[0xFFFFFFFA<32>:word32]
	Mem23[0x6A<32>:word32] = a0_14
	s0 = a0_14
	s2 = a0_14 + 108<i32>
l23044926:
	branch Mem23[s2:int32] != 0<32> l23044966
l23044966:
	word32 a4_41
	word32 a5_161
	word32 a3_160
	word32 a0_39 = lwip_htonl(CONVERT(Mem23[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem23[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem23[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem23[a4 + 4<i32>:byte], byte, word32))), out a3_160, out a4_41, out a5_161)
	s1_20 = Mem23[a4_41 + 16<i32>:word32]
	s3 = a0_39
	word32 a5_162
	branch a0_39 - lwip_htonl(CONVERT(Mem23[a4_41 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem23[a4_41 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem23[a4_41 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem23[a4_41 + 4<i32>:byte], byte, word32))), out a3, out a4, out a5_162) >= 0<32> l2304492C
l230449B4:
	s2 = Mem23[s2:int32]
l2304492C:
	word32 a5_63 = Mem23[s2:int32]
	Mem66[a5_63:word32] = s1_20
	Mem67[s2:word32] = s1_20
	s1 = Mem67[a5_63:word32]
	branch a5_63 != 0<32> l2304493E
l2304493A:
	Mem71[a0_14 + 104<i32>:word16] = 0<16>
l2304493E:
	word32 a5_74 = CONVERT(Mem73[a0_14 + 66<i32>:byte], byte, word32)
	a4 = 255<i32>
	branch a5_74 == 255<i32> l23044950
l2304494A:
	Mem77[a0_14 + 66<i32>:byte] = SLICE(a5_74 + 1<32>, byte, 0)
l23044950:
	Mem79[a0_14 + 52<i32>:word32] = 0<32>
	a5_15 = 0<32>
l23044956:
	s1Out = s1
	a0Out = a5_15
	a3Out = a3
	a4Out = a4
	a5Out = a5_15
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s0
tcp_rexmit_exit:


word32 tcp_rexmit_fast(word32 s1, word32 a5, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
// MayUse:  a5:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3
// Preserved: s0 sp
tcp_rexmit_fast_entry:
l230449BA:
	word32 a0_15 = Mem0[a5 + 112<i32>:word32]
	branch a5 == 0<32> l23044A24
l23044A24:
	a0Out = a0_15
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s1
l230449BE:
	word32 a5_11 = CONVERT(Mem10[a0_15 + 26<i32>:uint16], uint16, word32)
	word32 a5_13 = a5_11 & 4<32>
	branch (a5_11 & 4<32>) != 0<32> l23044A1C
l230449CE:
	word32 s8_128
	word32 s0_25 = tcp_rexmit(s1, out s1, out a0_15, out a3, out a4, out a5_13, out s2, out s3, out s4, out s8_128)
	branch a0_15 != 0<32> l23044A1C
l230449D4:
	word32 a4_28 = CONVERT(Mem10[s0_25 + 72<i32>:uint16], uint16, word32)
	word32 a5_29 = CONVERT(Mem10[s0_25 + 96<i32>:uint16], uint16, word32)
	branch a4_28 >=u a5_29 l230449E2
l230449E0:
	a5_29 = a4_28
l230449E2:
	word32 a4_35 = CONVERT(Mem10[s0_25 + 50<i32>:uint16], uint16, word32)
	word32 a5_37 = CONVERT(SLICE(a5_29, word16, 0), word16, word32) >> 1<i32>
	Mem38[s0_25 + 74<i32>:word16] = SLICE(a5_37, word16, 0)
	a3 = a4_35 << 1<u32>
	branch a5_37 >=u a4_35 << 1<u32> l230449FC
l230449F8:
	Mem40[s0_25 + 74<i32>:word16] = SLICE(a4_35 << 1<u32>, word16, 0)
l230449FC:
	word32 a5_46 = CONVERT(Mem45[s0_25 + 74<i32>:uint16], uint16, word32)
	Mem47[s0_25 + 48<i32>:word16] = 0<16>
	a4 = a4_35 + 3<32> + a5_46
	word32 a5_49 = CONVERT(Mem47[s0_25 + 26<i32>:uint16], uint16, word32)
	Mem50[s0_25 + 72<i32>:word16] = SLICE(a4, word16, 0)
	Mem52[s0_25 + 26<i32>:word16] = SLICE(a5_49 | 4<i32>, word16, 0)
	a5_13 = a5_49 | 4<i32>
l23044A1C:
	a0Out = a0_15
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_13
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s1
tcp_rexmit_fast_exit:


word32 tcp_rst(word32 ra, word32 s0, word32 a1, word32 a2, word32 s7, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_abort
//      tcp_shutdown
//      tcp_tmr
//      tcp_input
// MayUse:  a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_rst_entry:
l23044A26:
	word32 a3_29
	word32 a4_30
	word32 a3_43
	word32 a4_44
	word32 a5_45
	word32 mstatus_48
	word32 s0_50
	word32 s1_51
	word32 s2_52
	word32 s3_53
	word32 s4_54
	word32 s5_55
	word32 s6_56
	word32 s8_57
	word32 a5_173
	word32 ra_49 = tcp_output_alloc_header_common.constprop.6(ra, dwArg94, 0<32>, lwip_htonl(a1, out a3_29, out a4_30, out a5_173), a3_29, a4_30, mstatus, s0, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out s0_50, out s1_51, out a3_43, out a4_44, out a5_45, out s2_52, out s3_53, out s4_54, out s5_55, out s6_56, out s8_57, out mstatus_48)
	branch a2 == 0<32> l23044A72
l23044A72:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_51
	a0Out = a2
	a3Out = a3_43
	a4Out = a4_44
	a5Out = a5_45
	s2Out = s2_52
	s3Out = s3_53
	s4Out = s4_54
	s5Out = s5_55
	s6Out = s6_56
	s7Out = s7
	s8Out = s8_57
	s9Out = s9
	mstatusOut = mstatus_48
	return ra_49
l23044A5A:
	0<32> = dwArg0128
l23044A6E_thunk_tcp_output_control_segment:
	word32 a0_80
	word32 a3_83
	word32 a4_84
	word32 a5_85
	word32 mstatus_88
	word32 s0_90
	word32 s1_91
	word32 s2_92
	word32 s3_93
	word32 s4_94
	word32 s5_95
	word32 s6_96
	word32 s8_97
	word32 s7_105
	word32 s9_106
	word32 ra_89 = tcp_output_control_segment(ra_49, s0_50, a2, s1_51, s2_52, a5_45, s6_56, s7, mstatus_48, dwArgF8, dwArg0128, out s0_90, out s1_91, out a0_80, out a3_83, out a4_84, out a5_85, out s2_92, out s3_93, out s4_94, out s5_95, out s6_96, out s7_105, out s8_97, out s9_106, out mstatus_88)
	s0Out = s0_90
	s1Out = s1_91
	a0Out = a0_80
	a3Out = a3_83
	a4Out = a4_84
	a5Out = a5_85
	s2Out = s2_92
	s3Out = s3_93
	s4Out = s4_94
	s5Out = s5_95
	s6Out = s6_96
	s7Out = s7_105
	s8Out = s8_97
	s9Out = s9_106
	mstatusOut = mstatus_88
	return ra_89
tcp_rst_exit:


word32 tcp_send_empty_ack(word32 ra, word32 s0, word32 a0, word32 s7, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
//      tcp_input
//      tcp_output
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_send_empty_ack_entry:
l23044A80:
	word32 a5_116
	word32 a0_108
	word32 a0_19
	word32 a5_24
	word32 a5_175
	word32 a4_174
	word32 a3_173
	word32 a3_112
	word32 a4_114
	word32 mstatus_121
	word32 s1_125
	word32 s2_127
	word32 s3_129
	word32 s4_131
	word32 s5_133
	word32 s6_135
	word32 s8_139
	word32 ra_123 = tcp_output_alloc_header.constprop.5(ra, a0, 0<32>, lwip_htonl(Mem7[a0 + 80<i32>:word32], out a3_173, out a4_174, out a5_175), mstatus, s0, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s1_125, out a0_19, out a3_112, out a4_114, out a5_24, out s2_127, out s3_129, out s4_131, out s5_133, out s6_135, out s8_139, out mstatus_121)
	branch a0_19 != 0<32> l23044AB0
l23044AB0:
	word32 s0_58
	word32 a5_176
	ra_123 = tcp_output_control_segment(ra_123, a0, a0_19, a0, a0 + 4<i32>, a5_24, s6_135, s7, mstatus_121, dwArgE8, dwArg0118, out s0_58, out s1_125, out a0_108, out a3_112, out a4_114, out a5_176, out s2_127, out s3_129, out s4_131, out s5_133, out s6_135, out s7, out s8_139, out s9, out mstatus_121)
	word32 a5_75 = CONVERT(Mem7[s0_58 + 26<i32>:uint16], uint16, word32)
	branch a0_108 == 0<32> l23044ACE
l23044ACE:
	a5_116 = a5_75 & 0xFFFFFFFC<32>
l23044AC4:
	a5_116 = a5_75 | 3<i32>
l23044AC8:
	Mem80[s0_58 + 26<i32>:word16] = SLICE(a5_116, word16, 0)
l23044A9A:
	word32 a5_81 = CONVERT(Mem7[a0 + 26<i32>:uint16], uint16, word32)
	Mem84[a0 + 26<i32>:word16] = SLICE(a5_81 | 3<i32>, word16, 0)
	a0_108 = 0xFFFFFFFE<32>
	a5_116 = a5_81 | 3<i32>
l23044AA8:
	s1Out = s1_125
	a0Out = a0_108
	a2Out = dwArg10
	a3Out = a3_112
	a4Out = a4_114
	a5Out = a5_116
	s2Out = s2_127
	s3Out = s3_129
	s4Out = s4_131
	s5Out = s5_133
	s6Out = s6_135
	s7Out = s7
	s8Out = s8_139
	s9Out = s9
	mstatusOut = mstatus_121
	return ra_123
tcp_send_empty_ack_exit:


word32 tcp_output(word32 ra, word32 s1, word32 a0, word32 a2, word32 s7, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_output
//      tcp_recved
//      tcp_connect
//      tcp_pcb_remove
//      tcp_fasttmr
//      tcp_shutdown
//      tcp_tmr
//      tcp_input
//      tcp_rexmit_rto
//      lwip_netconn_do_write
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_output_entry:
l23044AD2:
	word32 a5_5 = Mem0[0x4201FEB8<32>:int32]
	branch a5_5 == a0 l23045002
l23045002:
	s0Out = s0
	s1Out = s1
	a0Out = 0<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23044ADE:
	word32 a5_1514
	word32 a0_1478
	word32 s2_1570
	word32 a0_35 = Mem34[s1 + 108<i32>:word32]
	word32 s0_36 = a0_35
	branch s1 != 0<32> l23044B2A
l23044B2A:
	word32 a0_43
	s6 = CONVERT(Mem34[a0_35 + 72<i32>:uint16], uint16, word32)
	s2_1570 = CONVERT(Mem34[a0_35 + 96<i32>:uint16], uint16, word32)
	s5 = a0_35 + 4<i32>
	word32 a0_40 = CONVERT(Mem34[a0_35 + 8<i32>:byte], byte, word32)
	branch a0_40 == 0<32> l23044BB8
l23044BB8:
	word32 a2_1745
	word32 a3_1746
	a0_43 = ip4_route(a2, a5_5, out a2_1745, out a3_1746, out a4, out a5_1514)
l23044B3C:
	a0_43 = netif_get_by_index(a0_40, out a4, out a5_1514)
l23044B40:
	word32 s4_226 = a0_43
	branch a0_43 == 0<32> l23045006
l23045006:
	a0_1478 = 0xFFFFFFFC<32>
l23044B46:
	word32 s0_56 = Mem34[a5_1514:word32]
	branch a5_1514 != 0<32> l23044B4E
l23044B4A:
	Mem58[a5_1514:word32] = s0_56
l23044B4E:
	word32 s3_61 = s6
	branch s2_1570 >=u s6 l23044B56
l23044B54:
	s3_61 = s2_1570
l23044B56:
	word32 s1_70 = Mem69[a4 + 16<i32>:word32]
	word32 s3_72 = s3_61 << 16<i32>
	word32 a5_1748
	word32 a3_1747
	word32 a0_84 = lwip_htonl(CONVERT(Mem69[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem69[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem69[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem69[a4 + 4<i32>:byte], byte, word32))), out a3_1747, out a4, out a5_1748)
	s3 = s3_72 >>u 0x10<u32>
	s0_36 = Mem69[a4 + 68<i32>:word32]
	branch s3_72 >>u 0x10<u32> >=u a0_84 + (CONVERT(Mem69[s1_70 + 8<i32>:uint16], uint16, word32) - a4) l23044BC0
l23044BC0:
	s2_1570 = Mem69[s0_36 + 112<i32>:int32]
	Mem93[s0_36 + 161<i32>:byte] = 0<8>
	branch s2_1570 != 0<32> l23044BE6
l23044BE6:
	word32 a5_96 = Mem93[s2_1570:int32]
	branch a5_96 != 0<32> l23044BE4
l23044BE4:
	s2_1570 = a5_96
l23044BEC:
l23044BCC:
	s9 = 0xF<32>
	s7 = 2<32>
	word32 s8_101 = 1<32>
	s6 = 0x4201FD98<32>
	s10 = 0x42020000<32>
	s11 = 0x2040000<32>
l23044F60:
	word32 s1_107 = Mem106[a4 + 16<i32>:word32]
	word32 a3_119
	word32 a5_121
	word32 a0_123 = lwip_htonl(CONVERT(Mem106[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem106[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem106[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem106[a4 + 4<i32>:byte], byte, word32))), out a3_119, out a4, out a5_121) - a5_121
	word32 a5_124 = CONVERT(Mem106[s1_107 + 8<i32>:uint16], uint16, word32)
	branch s3 <u a0_123 + a5_124 l23044FE2
l23044F90:
	word32 a5_133
	word32 a0_132 = lwip_htons(CONVERT(Mem106[a5_124 + 12<i32>:byte], byte, word32) | CONVERT(Mem106[a5_124 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_133)
	word32 s0_134 = Mem106[a5_133 + 112<i32>:word32]
	branch a5_133 == 0<32> l23044BEE
l23044FA8:
	word32 a5_135 = CONVERT(Mem106[s0_134 + 26<i32>:uint16], uint16, word32)
	a4 = a5_135 & 68<i32>
	branch (a5_135 & 68<i32>) != 0<32> l23044BEE
l23044FB4:
	s0_134 = Mem106[(a5_135 & 68<i32>) + 108<i32>:word32]
	branch (a5_135 & 68<i32>) == 0<32> l23044FCA
l23044FB8:
	a4 = Mem106[a3_119:word32]
	branch a3_119 != 0<32> l23044BEE
l23044FBE:
	a4 = CONVERT(Mem106[s0_134 + 50<i32>:uint16], uint16, word32)
	branch CONVERT(Mem106[a4 + 8<i32>:uint16], uint16, word32) >=u a4 l23044BEE
l23044FCA:
	a4 = CONVERT(Mem106[s0_134 + 100<i32>:uint16], uint16, word32)
	branch a4 == 0<32> l23044BEE
l23044FD2:
	a4 = CONVERT(Mem106[s0_134 + 102<i32>:uint16], uint16, word32)
	branch s9 <u a4 l23044BEE
l23044FDA:
	a5_124 = a5_135 & 160<i32>
	branch (a5_135 & 160<i32>) != 0<32> l23044BEE
l23044BEE:
	word32 a5_167
	word32 a5_151 = CONVERT(Mem106[s0_134 + 20<i32>:byte], byte, word32)
	branch a5_151 == s7 l23044C20
l23044BF6:
	word32 a0_172 = CONVERT(SLICE(lwip_htons(0x10<32>, out a5_167) | a5_167, word16, 0), word16, word32)
	Mem173[a4 + 12<i32>:byte] = SLICE(a0_172, byte, 0)
	Mem175[a4 + 13<i32>:byte] = SLICE(a0_172 >>u 8<i32>, byte, 0)
	s0_134 = dwArg94
	a0_132 = a0_172 >>u 8<i32>
	a5_151 = a5_167
l23044C20:
	word32 a5_179 = CONVERT(Mem177[a5_151 + 14<i32>:byte], byte, word32)
	branch a5_179 != s8_101 l23044E02
l23044C2A:
	word32 a5_194
	word32 a4_1749
	word32 a3_192
	word32 a0_191 = lwip_htonl(a0_132, out a3_192, out a4_1749, out a5_194)
	Mem197[a5_194 + 8<i32>:byte] = SLICE(a0_191, byte, 0)
	Mem198[a5_194 + 9<i32>:byte] = SLICE(a0_191 >>u 8<u32>, byte, 0)
	Mem201[a5_194 + 10<i32>:byte] = SLICE(a0_191 >>u 0x10<u32>, byte, 0)
	Mem202[a5_194 + 11<i32>:byte] = SLICE(a0_191 >>u 24<i32>, byte, 0)
	word32 s1_203 = Mem202[a5_194 + 16<i32>:word32]
	word32 a5_207
	word32 a0_206 = lwip_htons(CONVERT(Mem202[dwArg94 + 42<i32>:uint16], uint16, word32), out a5_207)
	Mem209[a5_207 + 14<i32>:byte] = SLICE(a0_206, byte, 0)
	Mem211[a5_207 + 15<i32>:byte] = SLICE(a0_206 >>u 8<i32>, byte, 0)
	word32 a4_212 = CONVERT(Mem211[dwArg94 + 42<i32>:uint16], uint16, word32)
	word32 s0_213 = Mem211[a5_207 + 36<i32>:word32]
	Mem215[a5_207 + a4_212 + 44<i32>:word32] = s0_213
	branch (CONVERT(Mem215[s1_203 + 13<i32>:byte], byte, word32) & 1<32>) == 0<32> l23044C96
l23044C7A:
	word32 a5_243
	word32 a3_1750
	Mem245[lwip_htonl(tcp_eff_send_mss_netif(688<i32>, s4_226, out a3_1750) | 0x2040000<32>, out a3_192, out a4_212, out a5_243) + 20<i32>:word32] = a5_243
	s0_213 = dwArg94
l23044C96:
	word32 a5_248 = CONVERT(Mem247[s0_213 + 48<i32>:int16], int16, int32)
	branch a5_248 >= 0<32> l23044CA2
l23044C9E:
	Mem249[s0_213 + 48<i32>:word16] = 0<16>
l23044CA2:
	word32 s0_252 = Mem251[a5_248 + 52<i32>:word32]
	branch a5_248 != 0<32> l23044CD0
l23044CA6:
	Mem260[Mem251[0x4201FEA4<32>:int32] + 52<i32>:word32] = s0_252
	word32 a4_1753
	Mem278[lwip_htonl(CONVERT(Mem260[a4_212 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem260[a4_212 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem260[a4_212 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem260[a4_212 + 4<i32>:byte], byte, word32))), out a3_192, out a4_1753, out a5_248) + 56<i32>:word32] = s0_252
l23044CD0:
	word32 a4_287 = Mem280[a3_192 + 4<i32>:word32]
	word32 a5_291 = CONVERT(SLICE(a5_248 - a3_192, word16, 0), word16, word32)
	word32 a3_292 = CONVERT(Mem280[a4_287 + 10<i32>:uint16], uint16, word32) - a5_291
	Mem293[a4_287 + 10<i32>:word16] = SLICE(a3_292, word16, 0)
	word32 a4_295 = CONVERT(Mem293[a3_292 + 8<i32>:uint16], uint16, word32)
	word32 a5_296 = a4_295 - a5_291
	Mem297[a3_292 + 8<i32>:word16] = SLICE(a5_296, word16, 0)
	word32 s1_299 = Mem297[a4_295 + 4<i32>:word32]
	Mem300[a5_296 + 4<i32>:word32] = a4_295
	Mem301[a5_296 + 16<i32>:byte] = 0<8>
	Mem302[a5_296 + 17<i32>:byte] = 0<8>
	word32 a5_303 = CONVERT(Mem302[s1_299 + 13<i32>:byte], byte, word32)
	word32 a5_304 = a5_303 & 4<32>
	branch (a5_303 & 4<32>) != 0<32> l23044D1C
l23044D0A:
	s1_299 = Mem302[(a5_303 & 4<32>) + 16<i32>:word32]
	lwip_htons(CONVERT(Mem302[(a5_303 & 4<32>) + 12<i32>:byte], byte, word32) | CONVERT(Mem302[(a5_303 & 4<32>) + 13<i32>:byte], byte, word32) << 8<i32>, out a5_304)
l23044D1C:
	word32 a6_314 = Mem302[s1_299 + 4<i32>:int32]
	word32 a0_342
	word32 s1_350
	word32 s4_353
	word32 s5_354
	word32 s6_355
	word32 s3_1764
	word32 a5_1763
	word32 a4_346
	word32 s0_349 = ip_chksum_pseudo_partial(a6_314, 6<32>, dwLoc48, lwip_htons(CONVERT(Mem323[a5_304 + 12<i32>:byte], byte, word32) | CONVERT(Mem323[a5_304 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1763) >>u 0xA<u32> & 252<i32>, a6_314, dwArgD8, out s1_350, out a0_342, out a4_346, out s3_1764, out s4_353, out s5_354, out s6_355)
	word32 a7_360 = 0<32>
	branch CONVERT(Mem323[s1_350 + 12<i32>:byte], byte, word32) == 0<32> l23044D70
l23044D5A:
	word32 a5_361 = CONVERT(Mem323[s1_350 + 10<i32>:uint16], uint16, word32)
	Mem362[s1_350 + 12<i32>:byte] = 0<8>
	Mem367[s1_350 + 10<i32>:word16] = SLICE(a5_361 >>u 8<i32> | a5_361 << 8<u32>, word16, 0)
	a7_360 = 1<32>
	a4_346 = a5_361 << 8<u32>
l23044D70:
	word32 a0_377 = CONVERT(Mem372[s1_350 + 10<i32>:uint16] + SLICE(~a0_342, word16, 0), uint16, uint16)
	word32 a5_382 = CONVERT(SLICE(~((a0_377 >>u 0x10<u32>) + a0_377), word16, 0), word16, word32)
	Mem383[a4_346 + 16<i32>:byte] = SLICE(a5_382, byte, 0)
	Mem385[a4_346 + 17<i32>:byte] = SLICE(a5_382 >>u 8<i32>, byte, 0)
	Mem393[s6_355 + 148<i32>:word16] = SLICE(CONVERT(Mem385[s6_355 + 148<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	dwLoc4C = a7_360
	word32 a7_425
	word32 s1_428
	word32 s0_1765
	word32 a3_1766
	ra = ip4_output_if(ra, s0_349, Mem393[a0_377 + 4<i32>:word32], a0_377, s0_349, s5_354, CONVERT(Mem393[s0_349 + 11<i32>:byte], byte, word32), CONVERT(Mem393[s0_349 + 10<i32>:byte], byte, word32), 6<32>, s4_353, s4_353, s5_354, s6_355, s7, out s0_1765, out s1_428, out a0_1478, out a3_1766, out a4, out a5_179, out a7_425, out s2_1570, out s3, out s4_226, out s5, out s6, out s7, out s8_101, out s9)
	s0_134 = dwLoc28
	branch a7_425 == 0<32> l23044DD6
l23044DC2:
	word32 a5_445 = CONVERT(Mem402[s1_428 + 10<i32>:uint16], uint16, word32)
	Mem446[s1_428 + 12<i32>:byte] = SLICE(s8_101, byte, 0)
	a5_179 = a5_445 >>u 8<i32> | a5_445 << 8<u32>
	Mem450[s1_428 + 10<i32>:word16] = SLICE(a5_179, word16, 0)
	a4 = a5_445 << 8<u32>
l23044DD6:
	branch a0_1478 == 0<32> l23044E02
l23044E02:
	Mem460[a5_179 + 108<i32>:word32] = s0_134
	branch CONVERT(Mem460[s0_134 + 20<i32>:byte], byte, word32) == s7 l23044E18
l23044E0E:
	Mem466[s0_134 + 26<i32>:word16] = SLICE(CONVERT(Mem460[s0_134 + 26<i32>:uint16], uint16, word32) & 0xFFFFFFFC<32>, word16, 0)
l23044E18:
	word32 s1_472 = Mem471[a4 + 16<i32>:word32]
	word32 a4_485
	word32 a5_1752
	word32 a3_1751
	lwip_htonl(CONVERT(Mem471[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem471[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem471[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem471[a4 + 4<i32>:byte], byte, word32))), out a3_1751, out a4_485, out a5_1752)
	word32 a3_487 = CONVERT(Mem471[s1_472 + 8<i32>:uint16], uint16, word32)
	word32 s1_488 = Mem471[a4_485 + 16<i32>:word32]
	word32 a5_504 = a5_499 + a3_487
	word32 a5_499
	word32 a0_505 = CONVERT((lwip_htons(CONVERT(Mem493[a4_485 + 12<i32>:byte], byte, word32) | CONVERT(Mem493[a4_485 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_499) & 3<32>) != 0<32>, bool, word32) + a5_504
	word32 s0_506 = Mem493[a5_504 + 80<i32>:word32]
	word32 a5_507 = a5_504 - a0_505
	branch a5_507 >= 0<32> l23044E6C
l23044E6A:
	Mem508[a0_505 + 80<i32>:word32] = s0_506
l23044E6C:
	a4 = CONVERT(Mem510[s1_488 + 8<i32>:uint16], uint16, word32)
	word32 s1_513 = Mem510[a5_507 + 16<i32>:word32]
	dwLoc4C = a4
	word32 a5_521
	branch CONVERT((lwip_htons(CONVERT(Mem515[a5_507 + 12<i32>:byte], byte, word32) | CONVERT(Mem515[a5_507 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_521) & 3<32>) != 0<32>, bool, word32) + a4 == 0<32> l23044FFA
l23044FFA:
	word32 a3_1757
	word32 a1_1755
	word32 a0_1754
	word32 a2_1756
	word32 a5_1758
	s1_513 = tcp_seg_free(ra, s1_513, a3_487, a4, s4_226, mstatus, dwArgB8, out a0_1754, out a1_1755, out a2_1756, out a3_1757, out a4, out a5_1758)
l23044E92:
	Mem557[s1_513:word32] = 0<32>
	word32 s0_558 = Mem557[a5_521 + 112<i32>:word32]
	branch a5_521 != 0<32> l23044EA0
l23044EA0:
	s1_513 = Mem557[a4 + 16<i32>:word32]
	word32 a5_1761
	word32 a3_1759
	word32 a4_1760
	word32 a0_570 = lwip_htonl(CONVERT(Mem557[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem557[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem557[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem557[a4 + 4<i32>:byte], byte, word32))), out a3_1759, out a4_1760, out a5_1761)
	word32 a4_582 = Mem557[s2_1570 + 16<i32>:int32]
	dwLoc4C = a0_570
	a3_604 = a3_595
	word32 a3_595
	word32 a5_1762
	branch a3_595 - lwip_htonl(CONVERT(Mem583[a4_582 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem583[a4_582 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem583[a4_582 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem583[a4_582 + 4<i32>:byte], byte, word32))), out a3_595, out a4, out a5_1762) < 0<32> l23044F52
l23044F52:
	word32 a3_604
	branch a4 != 0<32> l23044EFC
l23044EFC:
	word32 a3_619
	word32 a4_1767
	word32 a5_1768
	word32 a0_618 = lwip_htonl(CONVERT(Mem607[a3_604 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem607[a3_604 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem607[a3_604 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem607[a3_604 + 4<i32>:byte], byte, word32))), out a3_619, out a4_1767, out a5_1768)
	s1_513 = Mem607[a3_619 + 16<i32>:word32]
	dwLoc4C = a0_618
	word32 a5_1769
	branch dwArg94 - lwip_htonl(CONVERT(Mem623[a3_619 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem623[a3_619 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem623[a3_619 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem623[a3_619 + 4<i32>:byte], byte, word32))), out a3_604, out a4, out a5_1769) >= 0<32> l23044F56
l23044F50:
l23044F56:
	word32 a5_644 = Mem643[a4:word32]
	Mem647[a4:word32] = s1_513
	Mem648[s1_513:word32] = a5_644
l23044EF6:
	Mem649[s2_1570:word32] = s1_513
l23044E9A:
	Mem650[s1_513 + 112<i32>:word32] = s0_558
l23044E9C:
	s2_1570 = s1_513
l23044F5C:
	s0_36 = Mem654[s1_513 + 108<i32>:word32]
	branch s1_513 == 0<32> l23044FE6
l23044DD8:
	word32 a5_657 = CONVERT(Mem455[dwLoc28 + 26<i32>:uint16], uint16, word32)
	Mem659[dwLoc28 + 26<i32>:word16] = SLICE(a5_657 | 128<i32>, word16, 0)
	a5_1514 = a5_657 | 128<i32>
l23044FE2:
	s0_36 = Mem106[a5_124 + 108<i32>:word32]
	branch a5_124 != 0<32> l23044FEA
l23044FE6:
	Mem664[s0_36 + 104<i32>:word16] = 0<16>
l23044B8C:
	word32 a5_665 = CONVERT(Mem69[s0_36 + 96<i32>:uint16], uint16, word32)
	branch a5_665 != s3_72 >>u 0x10<u32> l23044BAA
l23044B94:
	s0_36 = Mem69[a5_665 + 112<i32>:word32]
	branch a5_665 != 0<32> l23044BAA
l23044B98:
	branch CONVERT(Mem69[s0_36 + 161<i32>:byte], byte, word32) != 0<32> l23044BAA
l23044B9E:
	Mem669[s0_36 + 160<i32>:word16] = 0x100<16>
	Mem670[s0_36 + 162<i32>:byte] = 0<8>
l23044BAA:
	branch (CONVERT(Mem672[s0_36 + 26<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l23044FEA
l23044BB4:
	a0_35 = s0_36
l23044B00:
	s2_1570 = s2
	branch (CONVERT(Mem34[a0_35 + 26<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l23044FEA
l23044FEA:
	word32 a5_680 = CONVERT(Mem679[s0_36 + 26<i32>:uint16], uint16, word32)
	Mem683[s0_36 + 26<i32>:word16] = SLICE(a5_680 & -129<i32>, word16, 0)
	a0_1478 = 0<32>
	a5_1514 = a5_680 & -129<i32>
l23044DE4:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = a0_1478
	a2Out = dwArg01A8
	a3Out = s2
	a4Out = a4
	a5Out = a5_1514
	s2Out = s2_1570
	s3Out = s3
	s4Out = dwArg0168
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArg0148
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return dwLoc08
l23044B0A:
	0<32> = dwArg010C
l23044B26_thunk_tcp_send_empty_ack:
	word32 a0_736
	word32 a2_738
	word32 a3_739
	word32 a4_740
	word32 a5_741
	word32 mstatus_744
	word32 s1_746
	word32 s2_747
	word32 s3_748
	word32 s4_749
	word32 s5_750
	word32 s6_751
	word32 s7_752
	word32 s8_753
	word32 s9_754
	word32 ra_745 = tcp_send_empty_ack(dwLoc08, dwArgCC, a0_35, s7, mstatus, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s1_746, out a0_736, out a2_738, out a3_739, out a4_740, out a5_741, out s2_747, out s3_748, out s4_749, out s5_750, out s6_751, out s7_752, out s8_753, out s9_754, out mstatus_744)
	s0Out = dwArgCC
	s1Out = s1_746
	a0Out = a0_736
	a2Out = a2_738
	a3Out = a3_739
	a4Out = a4_740
	a5Out = a5_741
	s2Out = s2_747
	s3Out = s3_748
	s4Out = s4_749
	s5Out = s5_750
	s6Out = s6_751
	s7Out = s7_752
	s8Out = s8_753
	s9Out = s9_754
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus_744
	return ra_745
tcp_output_exit:


word32 tcp_rexmit_rto_commit(word32 ra, word32 s1, word32 a0, word32 a2, word32 s7, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
//      tcp_rexmit_rto
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_rexmit_rto_commit_entry:
l2304500A:
	word32 a5_5 = CONVERT(Mem0[a0 + 66<i32>:byte], byte, word32)
	branch a5_5 == 255<i32> l2304501C
l23045016:
	Mem8[a0 + 66<i32>:byte] = SLICE(a5_5 + 1<32>, byte, 0)
l2304501C:
l2304501C_thunk_tcp_output:
	word32 a0_22
	word32 a2_24
	word32 a3_25
	word32 a4_26
	word32 s0_29
	word32 s1_30
	word32 s2_31
	word32 s4_32
	word32 s5_33
	word32 s6_34
	word32 s8_35
	word32 s10_39
	word32 s11_40
	word32 s3_41
	word32 s7_42
	word32 s9_43
	word32 mstatus_50
	word32 a5_96
	word32 ra_28 = tcp_output(ra, s1, a0, a2, s7, mstatus, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg010C, dwArg0118, out s0_29, out s1_30, out a0_22, out a2_24, out a3_25, out a4_26, out a5_96, out s2_31, out s3_41, out s4_32, out s5_33, out s6_34, out s7_42, out s8_35, out s9_43, out s10_39, out s11_40, out mstatus_50)
	s0Out = s0_29
	s1Out = s1_30
	a0Out = a0_22
	a2Out = a2_24
	a3Out = a3_25
	a4Out = a4_26
	s2Out = s2_31
	s3Out = s3_41
	s4Out = s4_32
	s5Out = s5_33
	s6Out = s6_34
	s7Out = s7_42
	s8Out = s8_35
	s9Out = s9_43
	s10Out = s10_39
	s11Out = s11_40
	mstatusOut = mstatus_50
	return ra_28
tcp_rexmit_rto_commit_exit:


word32 tcp_rexmit_rto(word32 ra, word32 s1, word32 a4, word32 a5, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_rexmit_rto_entry:
l23045020:
	word32 a0_13
	word32 a3_15
	word32 a4_16
	word32 s1_19
	word32 s4_20
	word32 s8_21
	word32 s2_24
	word32 s3_25
	word32 a2_140
	word32 a5_141
	word32 s0_23 = tcp_rexmit_rto_prepare(s1, a4, a5, out s1_19, out a0_13, out a2_140, out a3_15, out a4_16, out a5_141, out s2_24, out s3_25, out s4_20, out s8_21)
	branch a0_13 != 0<32> l2304503A
l2304503A:
	s0Out = s0
	s1Out = s1_19
	a0Out = a0_13
	a3Out = a3_15
	a4Out = a4_16
	s2Out = s2_24
	s3Out = s3_25
	s4Out = s4_20
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8_21
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2304502E:
l23045036_thunk_tcp_rexmit_rto_commit:
	word32 a0_35
	word32 a3_38
	word32 a4_39
	word32 mstatus_43
	word32 s0_45
	word32 s1_46
	word32 s10_47
	word32 s11_48
	word32 s2_49
	word32 s3_50
	word32 s4_51
	word32 s5_52
	word32 s6_53
	word32 s7_54
	word32 s8_55
	word32 s9_56
	word32 a2_142
	word32 ra_44 = tcp_rexmit_rto_commit(ra, s1_19, s0_23, dwArg10, s7, mstatus, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg010C, dwArg0118, out s0_45, out s1_46, out a0_35, out a2_142, out a3_38, out a4_39, out s2_49, out s3_50, out s4_51, out s5_52, out s6_53, out s7_54, out s8_55, out s9_56, out s10_47, out s11_48, out mstatus_43)
	s0Out = s0_45
	s1Out = s1_46
	a0Out = a0_35
	a3Out = a3_38
	a4Out = a4_39
	s2Out = s2_49
	s3Out = s3_50
	s4Out = s4_51
	s5Out = s5_52
	s6Out = s6_53
	s7Out = s7_54
	s8Out = s8_55
	s9Out = s9_56
	s10Out = s10_47
	s11Out = s11_48
	mstatusOut = mstatus_43
	return ra_44
tcp_rexmit_rto_exit:


void tcp_keepalive(word32 ra, word32 s0, word32 a0, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_keepalive_entry:
l23045042:
	word32 a0_20
	word32 a5_25
	word32 mstatus_28
	word32 s6_35
	word32 a3_124
	word32 a4_125
	word32 a5_126
	word32 s1_127
	word32 a3_128
	word32 a4_129
	word32 s2_130
	word32 s3_131
	word32 s4_132
	word32 s5_133
	word32 s8_134
	word32 ra_29 = tcp_output_alloc_header.constprop.5(ra, a0, 0<32>, lwip_htonl(Mem7[a0 + 80<i32>:word32] + 0xFFFFFFFF<32>, out a3_124, out a4_125, out a5_126), mstatus, s0, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s1_127, out a0_20, out a3_128, out a4_129, out a5_25, out s2_130, out s3_131, out s4_132, out s5_133, out s6_35, out s8_134, out mstatus_28)
	branch a0_20 == 0<32> l23045072
l23045072:
	return
l2304505E:
l2304506E_thunk_tcp_output_control_segment:
	word32 s0_135
	word32 s1_136
	word32 a0_137
	word32 a3_138
	word32 a4_139
	word32 a5_140
	word32 s2_141
	word32 s3_142
	word32 s4_143
	word32 s5_144
	word32 s6_145
	word32 s7_146
	word32 s8_147
	word32 s9_148
	word32 mstatus_149
	tcp_output_control_segment(ra_29, a0, a0_20, dwArg10, a0 + 4<i32>, a5_25, s6_35, s7, mstatus_28, dwArgF8, dwArg0128, out s0_135, out s1_136, out a0_137, out a3_138, out a4_139, out a5_140, out s2_141, out s3_142, out s4_143, out s5_144, out s6_145, out s7_146, out s8_147, out s9_148, out mstatus_149)
	return
tcp_keepalive_exit:


void tcp_zero_window_probe(word32 ra, word32 a0, word32 s4, word32 s7, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_zero_window_probe_entry:
l2304507C:
	word32 s2_17 = Mem15[a0 + 108<i32>:int32]
	branch s2_17 == 0<32> l23045196
l23045196:
l23045092:
	word32 a5_19 = CONVERT(Mem15[a0 + 162<i32>:byte], byte, word32)
	branch a5_19 == 255<i32> l230450A4
l2304509E:
	Mem22[a0 + 162<i32>:byte] = SLICE(a5_19 + 1<32>, byte, 0)
l230450A4:
	word32 a5_25 = Mem24[s2_17 + 16<i32>:int32]
	word32 s0_28 = 0<32>
	word32 a5_353
	branch (lwip_htons(CONVERT(Mem24[a5_25 + 12<i32>:byte], byte, word32) | CONVERT(Mem24[a5_25 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_353) & 1<32>) == 0<32> l230450C8
l230450C0:
	s0_28 = CONVERT(CONVERT(Mem24[s2_17 + 8<i32>:uint16], uint16, word32) <u 1<i32>, bool, word32)
l230450C8:
	word32 a4_40 = Mem24[s2_17 + 16<i32>:int32]
	word32 a4_356
	word32 s1_354
	word32 a0_62
	word32 mstatus_70
	word32 s6_77
	word32 a3_355
	word32 a5_357
	word32 s3_358
	word32 s4_359
	word32 s5_360
	word32 s8_361
	word32 s2_114
	word32 ra_71 = tcp_output_alloc_header.constprop.5(ra, a0, s0_28 ^ 1<i32>, CONVERT(Mem24[a4_40 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem24[a4_40 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem24[a4_40 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem24[a4_40 + 4<i32>:byte], byte, word32))), mstatus, s4, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out s1_354, out a0_62, out a3_355, out a4_356, out a5_357, out s2_114, out s3_358, out s4_359, out s5_360, out s6_77, out s8_361, out mstatus_70)
	word32 s3_120 = a0_62
	branch a0_62 == 0<32> l230451A8
l230451A8:
l23045198:
	return
l230450F6:
	word32 s4_97 = Mem24[a0_62 + 4<i32>:int32]
	branch s0_28 == 0<32> l23045178
l23045178:
	word32 a0_98 = Mem24[s2_114 + 4<i32>:int32]
	word32 s1_362
	word32 a0_363
	word32 a1_364
	word32 a2_365
	word32 a3_366
	word32 a4_367
	word32 a5_368
	word32 s4_369
	word32 s8_370
	pbuf_copy_partial(a0_98, s4_97 + 20<i32>, 1<32>, CONVERT(CONVERT(Mem24[a0_98 + 8<i32>:uint16] - Mem24[s2_114 + 8<i32>:uint16], uint16, uint16), uint16, word32), out s1_362, out a0_363, out a1_364, out a2_365, out a3_366, out a4_367, out a5_368, out s2_114, out s3_120, out s4_369, out s8_370)
l230450FC:
	word32 a5_371
	word32 a5_140 = CONVERT(SLICE(CONVERT(SLICE((CONVERT(Mem24[s4_97 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem24[s4_97 + 12<i32>:byte], byte, word32)) & 0xFC0000FF<32>, word16, 0), word16, int32) | lwip_htons(0x11<32>, out a5_371), word16, 0), word16, word32)
	Mem141[s4_97 + 12<i32>:byte] = SLICE(a5_140, byte, 0)
	Mem143[s4_97 + 13<i32>:byte] = SLICE(a5_140 >>u 8<i32>, byte, 0)
l2304512C:
	word32 a4_146 = Mem145[s2_114 + 16<i32>:int32]
	word32 a5_160
	word32 a3_372
	word32 a4_373
	word32 a0_157 = lwip_htonl(CONVERT(Mem145[a4_146 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem145[a4_146 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem145[a4_146 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem145[a4_146 + 4<i32>:byte], byte, word32))), out a3_372, out a4_373, out a5_160)
	word32 s1_161 = Mem145[a5_160 + 80<i32>:word32]
	word32 a5_163 = a5_160 - (a0_157 + 1<32>)
	branch a5_163 >= 0<32> l2304515C
l2304515A:
	Mem164[a0_157 + 0x51<32>:word32] = s1_161
l2304515C:
l23045174_thunk_tcp_output_control_segment:
	word32 s0_374
	word32 s1_375
	word32 a0_376
	word32 a3_377
	word32 a4_378
	word32 a5_379
	word32 s2_380
	word32 s3_381
	word32 s4_382
	word32 s5_383
	word32 s6_384
	word32 s7_385
	word32 s8_386
	word32 s9_387
	word32 mstatus_388
	tcp_output_control_segment(ra_71, s1_161, s3_120, dwArg48, s1_161 + 4<i32>, a5_163, s6_77, s7, mstatus_70, dwArgF8, dwArg0128, out s0_374, out s1_375, out a0_376, out a3_377, out a4_378, out a5_379, out s2_380, out s3_381, out s4_382, out s5_383, out s6_384, out s7_385, out s8_386, out s9_387, out mstatus_388)
	return
tcp_zero_window_probe_exit:


word32 sys_timeout_abs(word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_cyclic_timer
//      sys_timeout
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s8
// Trashed: a0 a2 a3 a4 a5 s0 s1 s8 t3 tp
// Preserved: sp
sys_timeout_abs_entry:
l230451AC:
	word32 s0_28 = a0
	word32 a0_19
	word32 a3_22
	word32 a2_21
	word32 a4_23
	word32 a5_20
	word32 s1_24 = memp_malloc(s1, 0xB<32>, a3, a4, mstatus, out a0_19, out a2_21, out a3_22, out a4_23, out a5_20)
	branch a0_19 == 0<32> l230451DC
l230451C0:
	a4_23 = Mem14[a5_20:word32]
	Mem30[a0_19:word32] = 0<32>
	Mem31[a1 + 8<i32>:word32] = a0_19
	Mem32[dwArg44 + 12<i32>:word32] = a0_19
	Mem33[a1 + 4<i32>:word32] = a0_19
	a2_21 = dwArg44
	s0_28 = a1
	branch a5_20 != 0<32> l230451E4
l230451E4:
	a5_20 = Mem33[a3_22 + 4<i32>:word32]
	a3_22 = a1 - a3_22
	branch a3_22 >= 0<32> l230451F4
l230451F4:
	a5_20 = Mem33[a4_23:word32]
	branch a4_23 == 0<32> l23045202
l230451F8:
	a4_23 = Mem33[a3_22 + 4<i32>:word32]
	a3_22 = a1 - a3_22
	branch a3_22 >= 0<32> l230451F2
l230451F2:
l23045202:
	Mem47[a4_23:word32] = a0_19
	Mem49[a0_19:word32] = a5_20
l230451EE:
	Mem50[a5_20:word32] = a0_19
l230451DA:
	Mem53[a0_19:word32] = a4_23
l230451DC:
	s1Out = s1_24
	a0Out = a0_19
	a2Out = a2_21
	a3Out = a3_22
	a4Out = a4_23
	a5Out = a5_20
	s8Out = a2
	return s0_28
sys_timeout_abs_exit:


void lwip_cyclic_timer(word32 ra, word32 s1, word32 a5, word32 mstatus, word32 dwArg44)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0044:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s8 t3 tp
// Preserved: sp
lwip_cyclic_timer_entry:
l23045208:
	word32 a0_7 = Mem5[a5 + 4<i32>:word32]
	word32 a4_14
	call a5 (retsize: 0;)
		uses: a0:a0_7,a5:a5,mstatus:mstatus,ra:ra,s1:s1,Stack +0084:a0_7,Stack +008C:ra
		defs: a4:a4_14
	word32 a5_64
	word32 a3_27 = Mem8[0x4200DFAC<32>:int32] + a4_14 - sys_now(out a5_64)
	branch a3_27 < 0<32> l23045238
l23045236:
l23045238:
l2304523C_thunk_sys_timeout_abs:
	word32 s1_65
	word32 a0_66
	word32 a2_67
	word32 a3_68
	word32 a4_69
	word32 a5_70
	word32 s8_71
	sys_timeout_abs(s1, 0x23045208<32>, a3_27, a4_14, mstatus, dwArg44, out s1_65, out a0_66, out a2_67, out a3_68, out a4_69, out a5_70, out s8_71)
	return
lwip_cyclic_timer_exit:


word32 sys_timeout(word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
//      tcp_timer_needed
//      tcpip_tcp_timer
//      ping_timeout
//      ping_api_init
//      sntp_recv
//      sntp_request
//      sntp_dns_found
//      sntp_init
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s8
// Trashed: a0 a2 a3 a4 a5 s0 s1 s8 t3 tp
// Preserved: sp
sys_timeout_entry:
l23045240:
	word32 a5_49
	sys_now(out a5_49)
l2304525C_thunk_sys_timeout_abs:
	word32 a0_26
	word32 a2_27
	word32 a3_28
	word32 a4_29
	word32 a5_30
	word32 s1_32
	word32 s8_33
	word32 s0_31 = sys_timeout_abs(s1, a1, a3, a4, mstatus, dwArg44, out s1_32, out a0_26, out a2_27, out a3_28, out a4_29, out a5_30, out s8_33)
	s1Out = s1_32
	a0Out = a0_26
	a2Out = a2_27
	a3Out = a3_28
	a4Out = a4_29
	a5Out = a5_30
	s8Out = s8_33
	return s0_31
sys_timeout_exit:


word32 tcp_timer_needed(word32 s1, word32 a3, word32 mstatus, word32 dwArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_bind
//      tcp_listen_with_backlog_and_err
//      tcp_connect
//      tcp_input
// MayUse:  a3:[0..31] mstatus:[0..31] s1:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a2 a3 a4 s0 s1 s8
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s8 t3 tp
// Preserved: sp
tcp_timer_needed_entry:
l23045260:
	word32 a4_10 = Mem0[0x4200DFB4<32>:int32]
	branch a4_10 != 0<32> l23045298
l2304526E:
	branch Mem0[0x4201FEAC<32>:int32] != 0<32> l23045282
l23045278:
	a4_10 = Mem0[0x4201FEA0<32>:int32]
	branch a4_10 == 0<32> l23045298
l23045298:
	s1Out = s1
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4_10
	s8Out = s8
	return s0
l23045282:
	Mem17[1<32>:word32] = 0x4200DFB4<32>
l23045294_thunk_sys_timeout:
	word32 a0_25
	word32 a2_26
	word32 a3_27
	word32 a4_28
	word32 s1_31
	word32 s8_32
	word32 a5_74
	word32 s0_30 = sys_timeout(s1, 0x2304529A<32>, a3, 1<32>, mstatus, dwArg44, out s1_31, out a0_25, out a2_26, out a3_27, out a4_28, out a5_74, out s8_32)
	s1Out = s1_31
	a0Out = a0_25
	a2Out = a2_26
	a3Out = a3_27
	a4Out = a4_28
	s8Out = s8_32
	return s0_30
tcp_timer_needed_exit:


void tcpip_tcp_timer(word32 ra, word32 s1, word32 a2, word32 s3, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgFC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00FC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_tcp_timer_entry:
l2304529A:
	word32 a3_14
	word32 a4_15
	word32 mstatus_19
	word32 s1_22 = tcp_tmr(ra, s1, a2, s3, s7, mstatus, dwLoc08, dwArg00, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgFC, out a3_14, out a4_15, out mstatus_19)
	branch Mem5[0x4201FEAC<32>:int32] != 0<32> l230452B6
l230452AC:
	branch Mem5[0x4201FEA0<32>:int32] == 0<32> l230452CC
l230452CC:
	Mem46[0x4200EFB4<32>:word32] = 0<32>
	return
l230452B6:
l230452C8_thunk_sys_timeout:
	word32 s8_154
	word32 a4_152
	word32 a5_153
	word32 a2_150
	word32 a3_151
	word32 s1_148
	word32 a0_149
	sys_timeout(s1_22, 0x2304529A<32>, a3_14, a4_15, mstatus_19, dwArg44, out s1_148, out a0_149, out a2_150, out a3_151, out a4_152, out a5_153, out s8_154)
	return
tcpip_tcp_timer_exit:


word32 sys_timeouts_init(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg38, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0034:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a1 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 s8 t3 tp
// Preserved: s0 sp
sys_timeouts_init_entry:
l230452DA:
l230452F8:
	a0_65 = a0
	a4_66 = a4
	a3_67 = a3
	word32 s1_34
	word32 a5_63
	word32 a2_62
	word32 s8_64
	branch s1_34 != sys_timeout(Mem13[a0_65:word32] + 8<32>, 0x23045208<32>, a3_67, a4_66, mstatus, dwArg34, out s1_34, out a0, out a2_62, out a3, out a4, out a5_63, out s8_64) l230452F8
l2304530A:
	0<32> = dwArg38
	a1Out = 0x23045208<32>
	a3Out = a3
	a4Out = a4
	return a0
sys_timeouts_init_exit:


word32 sys_untimeout(word32 a0, word32 a1, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping_timeout
//      sntp_recv
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 tp
// Preserved: sp
sys_untimeout_entry:
l23045316:
	word32 a5_19 = Mem0[0x4200DFB0<32>:int32]
	word32 a2_17 = 0<32>
	branch a5_19 != 0<32> l23045332
l23045332:
	word32 a5_12 = Mem0[0x4200E000<32>:word32]
	branch Mem0[a5_19 + 8<i32>:int32] != a0 l2304532C
l2304533C:
	branch Mem0[a5_12 + 12<i32>:int32] != a1 l2304532C
l2304532C:
	a2_17 = a5_12
	branch false l23045326
l23045330:
	a5_19 = 0x4200E000<32>
l23045344:
	branch a2_17 != 0<32> l23045328
l23045328:
	Mem21[0x4200E000<32>:word32] = a2_17
l23045346:
	Mem24[0x4200E000<32>:word32] = 0x4200DFB0<32>
l23045348:
l2304534C_thunk_memp_free:
	word32 a3_37
	word32 a4_38
	word32 a2_81
	word32 a5_82
	word32 a0_80
	word32 s1_39 = memp_free(0xB<32>, a5_12, 0x4200DFB0<32>, 0x4200E000<32>, mstatus, out a0_80, out a2_81, out a3_37, out a4_38, out a5_82)
	a3Out = a3_37
	a4Out = a4_38
	return s1_39
l23045326:
	a3Out = 0x4200DFB0<32>
	a4Out = 0x4200E000<32>
	return s1
sys_untimeout_exit:


word32 sys_check_timeouts(word32 ra, word32 s0, word32 s1, word32 a1, word32 mstatus, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_thread
// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31]
// LiveOut: a1 a3 a4 a5 s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s2 s3 s4 s8 t3
// Preserved: mstatus ra s1 sp tp
sys_check_timeouts_entry:
l23045350:
	word32 a5_17
	word32 s2_18 = sys_now(out a5_17)
	word32 s3_19 = 0x4200E000<32>
	word32 s4_20 = 0x4200E000<32>
	s1_43 = s1
l2304536C:
	word32 mstatus_74
	word32 a3_69
	word32 a1_67
	word32 s1_43
	word32 a4_23 = Mem22[a1:word32]
	branch a1 == 0<32> l23045398
l23045374:
	a1 = Mem22[a5_17 + 4<i32>:word32]
	a3 = s2_18 - a5_17
	branch a3 < 0<32> l23045398
l23045398:
	a1Out = a1
	a3Out = a3
	a4Out = a4_23
	a5Out = a5_17
	s2Out = s2_18
	s3Out = s3_19
	return s1
sys_check_timeouts_exit:
l2304537E:
	Mem42[a3:word32] = a4_23
	a1 = Mem42[s1_43 + 12<i32>:word32]
	Mem46[s4_20 + 4012<i32>:word32] = a5_17
	word32 a2_123
	word32 a4_124
	word32 a0_122
	s1_43 = memp_free(0xB<32>, a1, a3, a4_23, mstatus, out a0_122, out a2_123, out a3, out a4_124, out a5_17)
	branch s0 == 0<32> l2304536C
l23045392:
	word32 tp_75
	call s0 (retsize: 0;)
		uses: a0:s1_53,a1:a1_67,a3:a3_69,mstatus:mstatus_74,ra:ra_57,s0:s0_39,s1:s1_53,s2:s2_26,s3:s3_56,s4:s4_45,tp:tp_75
		defs: a1:a1_67,a3:a3_69,a5:a5_68,mstatus:mstatus_74,ra:ra_62,s0:s0_63,s1:s1_64,s2:s2_59,s3:s3_60,s4:s4_61,tp:tp_75
	a1 = a1_67
	mstatus = mstatus_74
	a3 = a3_69


word32 sys_timeouts_sleeptime(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_thread
// MayUse:  a5:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a5
// Preserved: s0 sp
sys_timeouts_sleeptime_entry:
l230453A8:
	word32 a0_11 = 0xFFFFFFFF<32>
	branch a5 == 0<32> l230453CE
l230453BC:
	word32 a5_13
	a0_11 = Mem10[a5_13 + 4<i32>:word32] - sys_now(out a5_13)
	branch a0_11 >= 0<32> l230453CE
l230453CC:
	a0_11 = 0<32>
l230453CE:
	return a0_11
sys_timeouts_sleeptime_exit:


word32 udp_init(word32 a0, word32 a2, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  a0:[0..31] a2:[0..31]
// LiveOut: a0 a2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: sp
udp_init_entry:
l230453D6:
	word32 a0_8
	word32 a1_30
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 s4_34
	bl_rand(a0, a2, out a0_8, out a1_30, out a3_31, out a4_32, out a5_33, out s4_34)
	word32 a0_22 = CONVERT(SLICE(a0_8, word14, 0), word14, word32)
	Mem25[0x4200E952<32>:word16] = SLICE(a0_22 + 0xFC000000<32>, word16, 0)
	a2Out = dwArg10
	return a0_22 + 0xFC000000<32>
udp_init_exit:


word32 udp_input(word32 ra, word32 a0, word32 a1, word32 a2, word32 s5, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgE4, word32 dwArgE8, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_input_entry:
l230453F4:
	word32 a4_113
	Mem26[0x4201FE16<32>:word16] = SLICE(CONVERT(Mem22[0x4201FE16<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a3_211 = CONVERT(Mem26[a0 + 10<i32>:uint16], uint16, word32)
	branch a3_211 >u 7<32> l23045450
l23045450:
	word32 s3_218 = Mem26[a0 + 4<i32>:int32]
	word32 a5_782
	word32 a3_781
	word32 a0_40 = ip4_addr_isbroadcast_u32(Mem26[0x4201FED4<32>:int32], Mem26[0x4201FEC0<32>:int32], out a3_781, out a4_113, out a5_782)
	word32 a5_783
	word32 a0_50 = lwip_htons(CONVERT(Mem26[s3_218:byte], byte, word32) | CONVERT(Mem26[s3_218 + 1<i32>:byte], byte, word32) << 8<i32>, out a5_783)
	word32 a5_784
	word32 a0_57 = lwip_htons(CONVERT(Mem26[s3_218 + 2<i32>:byte], byte, word32) | CONVERT(Mem26[s3_218 + 3<i32>:byte], byte, word32) << 8<i32>, out a5_784)
	word32 a7_60 = Mem26[0x4201FEBC<32>:int32]
	word32 s1_216 = a0
	word32 s5_220 = a1
	word32 s0_215 = 0x4201FD98<32>
	word32 s4_219 = 0x4201FEC0<32>
	word32 t3_61 = Mem26[0x4201FEC4<32>:int32]
	a3_211 = Mem26[0x4201FED4<32>:int32]
	word32 t4_63 = Mem26[0x4201FED0<32>:int32]
	word32 a5_120 = a7_60
	word32 s2_108 = 0<32>
	word32 a6_128 = 0<32>
l230454B4:
	branch a5_120 != 0<32> l230454C6
l230454C6:
	a4_113 = CONVERT(Mem26[a5_120 + 18<i32>:uint16], uint16, word32)
	branch a4_113 != a0_57 l2304552A
l230454CE:
	a2 = CONVERT(Mem26[a5_120 + 8<i32>:byte], byte, word32)
	branch a2 == 0<32> l230454E2
l230454D4:
	a4_113 = CONVERT(Mem26[t3_61 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
	branch a2 != a4_113 l2304552A
l230454E2:
	a5_120 = Mem26[a4_113:word32]
	branch a0_40 == 0<32> l23045524
l23045524:
	branch a4_113 == 0<32> l230454FC
l23045526:
	branch a4_113 == a3_211 l230454FC
l230454E8:
	branch a4_113 == 0<32> l230454FC
l230454EA:
	branch a3_211 == 0xFFFFFFFF<32> l230454FC
l230454EE:
	a2 = (a4_113 ^ a3_211) & Mem26[a1 + 8<i32>:int32]
	branch a2 != 0<32> l2304552A
l230454FC:
	word32 a2_93 = CONVERT(Mem26[a5_120 + 16<i32>:byte], byte, word32)
	a2 = a2_93 & 4<32>
	branch (a2_93 & 4<32>) != 0<32> l23045532
l23045504:
	branch s2_108 == 0<32> l23045520
l23045508:
	branch a0_40 == 0<32> l23045530
l2304550C:
	branch a3_211 != 0xFFFFFFFF<32> l23045530
l23045530:
	branch a4_113 != 0<32> l23045520
l23045510:
	a2 = Mem26[a1 + 4<i32>:int32]
	branch Mem26[s2_108:int32] == a2 l23045532
l2304551C:
	branch a2 != a4_113 l23045532
l23045520:
	s2_108 = a5_120
l23045532:
	a4_113 = CONVERT(Mem26[a5_120 + 20<i32>:uint16], uint16, word32)
	branch a4_113 != a0_50 l2304552A
l2304553A:
	a5_120 = Mem26[a4_113 + 4<i32>:word32]
	branch a4_113 == 0<32> l23045542
l2304553E:
	branch a4_113 != t4_63 l2304552A
l2304552A:
	a6_128 = a5_120
	a5_120 = Mem26[a5_120 + 12<i32>:word32]
l23045542:
	branch a6_128 == 0<32> l23045598
l23045598:
	Mem149[0x4201FE2A<32>:word16] = SLICE(CONVERT(Mem26[0x4201FE2A<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23045546:
	a5_120 = Mem26[a4_113 + 12<i32>:word32]
	Mem160[0x42020EBC<32>:word32] = a5_120
	Mem161[a6_128 + 12<i32>:word32] = a4_113
	Mem170[a5_120 + 12<i32>:word32] = a7_60
l23045554:
	s2_108 = a5_120
l230454B6:
	branch s2_108 != 0<32> l23045556
l230454BA:
	branch Mem26[a1 + 4<i32>:int32] == a3_211 l23045556
l23045556:
	branch (CONVERT(Mem185[s3_218 + 7<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem185[s3_218 + 6<i32>:byte], byte, word32)) == 0<32> l230455A4
l23045564:
	word32 a6_802
	word32 a0_208
	s0_215 = ip_chksum_pseudo(a0, 0x11<32>, CONVERT(Mem185[a0 + 8<i32>:uint16], uint16, word32), 0x4201FED0<32>, 0x4201FED4<32>, out s1_216, out a0_208, out a2, out a3_211, out a4_113, out a6_802, out s2_108, out s3_218, out s4_219, out s5_220)
	branch a0_208 == 0<32> l230455A4
l230455A4:
	word32 a1_800
	word32 a5_801
	branch pbuf_remove_header(s1_216, 8<32>, a2, out a1_800, out a3_211, out a4_113, out a5_801) != 0<32> l2304558C
l230455AE:
	branch s2_108 == 0<32> l230455E2
l230455E2:
	branch a0_40 != 0<32> l2304560E
l230455E6:
	a4_113 = 224<i32>
	branch (Mem185[s4_219 + 20<i32>:int32] & 240<i32>) == 224<i32> l2304560E
l230455F6:
	word32 s4_804
	word32 s2_803
	word32 a4_276
	ra = icmp_dest_unreach(ra, s0_215, s1_216, pbuf_header_force(s1_216, CONVERT(SLICE(CONVERT(Mem185[s4_219 + 12<i32>:uint16], uint16, word32) + 8<32>, word16, 0), word16, int32), a2, out a4_276), a4_276, a0_50, mstatus, dwLoc2C, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0_215, out s1_216, out a3_211, out a4_113, out s2_803, out s4_804, out mstatus)
l2304560E:
	Mem352[s0_215 + 140<i32>:word16] = SLICE(CONVERT(Mem185[s0_215 + 140<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l230455B2:
	word32 t1_353 = Mem185[s2_108 + 32<i32>:int32]
	branch t1_353 == 0<32> l230454C2
l230455BA:
	word32 a0_355 = Mem185[s2_108 + 36<i32>:int32]
	0<32> = dwArg0128
	word32 s1_379
	word32 s9_403
	call t1_353 (retsize: 0;)
		uses: a0:a0_355,a1:s2_243,a2:dwArgB8,a3:0x4201FED0<32>,a4:a0_50,a6:dwArg98,mstatus:mstatus,ra:ra,s0:dwArgE4,s1:s1_225,s2:s2_243,s3:s3_368,s4:dwArg78,s5:s5_369,s6:a0_40,s7:a0_50,s8:s5,s9:s9_403,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0068:dwArg68,Stack +0078:dwArg78,Stack +0088:dwArg88,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00E4:dwArgE4,Stack +00E8:dwArgE8,Stack +0100:dwArg0100,Stack +0104:dwArg0104,Stack +0128:dwArg0128,Stack +FFFFFFD4:dwLoc2C,t3:dwArg38,tp:dwArg0104
		defs: s1:s1_379,s9:s9_403
	return s1_379
l23045582:
	Mem406[s0_215 + 132<i32>:word16] = SLICE(CONVERT(Mem185[s0_215 + 132<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2304558C:
	Mem411[s0_215 + 130<i32>:word16] = SLICE(CONVERT(Mem408[s0_215 + 130<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l230454C2:
	a0 = s1_216
l23045424:
	Mem418[0x4201FE1E<32>:word16] = SLICE(CONVERT(Mem26[0x4201FE1E<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a4_419 = CONVERT(Mem418[0x4201FE1A<32>:uint16], uint16, word32)
	Mem421[0x4201FE1A<32>:word16] = SLICE(a4_419 + 1<32>, word16, 0)
	a4_113 = a4_419 + 1<32>
l23045438:
	0<32> = dwArg0128
l2304544C_thunk_pbuf_free:
	word32 a2_788
	word32 a1_787
	word32 a7_792
	word32 s2_793
	word32 s8_798
	word32 s5_796
	word32 mstatus_799
	word32 s6_797
	word32 a5_791
	word32 s4_795
	word32 s3_794
	word32 s1_465
	word32 s0_785
	word32 a4_790
	word32 a0_786
	word32 a3_789
	pbuf_free(ra, a0, a3_211, a4_113, dwArg78, mstatus, dwArg0128, out s0_785, out s1_465, out a0_786, out a1_787, out a2_788, out a3_789, out a4_790, out a5_791, out a7_792, out s2_793, out s3_794, out s4_795, out s5_796, out s6_797, out s8_798, out mstatus_799)
	return s1_465
udp_input_exit:


word32 udp_bind(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_server_init
//      dns_init
//      dhcp_inc_pcb_refcount
//      udp_sendto
//      udp_connect
//      lwip_netconn_do_bind
//      dhcp_server_start
//      iperf_server_udp
//      sntp_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5 a6 t3
// Preserved: a2 a7 sp t1 t4
udp_bind_entry:
l2304561A:
	branch a1 != 0<32> l23045626
l2304561E:
	a1 = 0x2308DE8C<32>
l23045626:
	word32 a0_109 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l23045678
l2304562A:
	a5 = Mem0[0x4201FEBC<32>:int32]
	a3 = 0x42020000<32>
	word32 a0_14 = a5
l23045634:
	word32 t3_17
	branch a0_14 != 0<32> l2304567A
l2304567A:
	branch a0_14 == a0 l23045682
l23045682:
	t3_17 = 1<32>
l2304567E:
	a0_14 = Mem0[a0_14 + 12<i32>:word32]
l23045636:
	t3_17 = 0<32>
l23045638:
	branch a2 != 0<32> l230456DA
l230456DA:
	branch a5 != 0<32> l230456AC
l230456AC:
	branch a5 == a0 l230456D8
l230456B0:
	branch (CONVERT(Mem0[a0 + 9<i32>:byte], byte, word32) & 4<32>) == 0<32> l230456C0
l230456B8:
	branch (CONVERT(Mem0[a5 + 9<i32>:byte], byte, word32) & 4<32>) != 0<32> l230456D8
l230456C0:
	word32 a0_34 = CONVERT(Mem0[a5 + 18<i32>:uint16], uint16, word32)
	branch a0_34 != a2 l230456D8
l230456C8:
	word32 a6_39 = Mem0[a1:int32]
	a5 = Mem0[a0_34:word32]
	branch a0_34 == a6_39 l230456A2
l230456D2:
	branch a6_39 == 0<32> l230456A2
l230456D6:
	branch a0_34 == 0<32> l230456A2
l230456D8:
	a5 = Mem0[a5 + 12<i32>:word32]
l230456DC:
l2304563A:
	a2 = CONVERT(Mem0[0x4200D952<32>:uint16], uint16, word32)
	word32 a6_48 = 0x4000000<32>
l2304564C:
	branch a2 == 0xFFFFFFF<32> l23045686
l23045686:
	a2 = 0xC000000<32>
l23045650:
	a2 = CONVERT(SLICE(a2 + 1<32>, word16, 0), word16, word32)
l23045656:
	word32 a7_59 = a5
l23045658:
	branch a7_59 != 0<32> l2304568A
l2304568A:
	branch CONVERT(Mem0[a7_59 + 18<i32>:uint16], uint16, word32) != a2 l230456A6
l230456A6:
	a7_59 = Mem0[a7_59 + 12<i32>:int32]
l23045692:
	a6_48 = CONVERT(SLICE(a6_48 + 0xFFFFFFFF<32>, word16, 0), word16, word32)
	branch a6_48 != 0<32> l2304564C
l2304569E:
	Mem74[0x4200D952<32>:word16] = SLICE(a2, word16, 0)
l230456A2:
	a3Out = 0x42020000<32>
	a4Out = <invalid>
	a5Out = a5
	return 0xFFFFFFF8<32>
l2304565C:
	Mem76[0x4200D952<32>:word16] = SLICE(a2, word16, 0)
l23045660:
	Mem87[a0 + 18<i32>:word16] = SLICE(a2, word16, 0)
	Mem88[a5:word32] = a0
	branch t3_17 != 0<32> l23045676
l2304566C:
	a5 = Mem88[0x4201FEBC<32>:int32]
	Mem107[0x42020EBC<32>:word32] = a0
	Mem108[a5 + 12<i32>:word32] = a0
l23045676:
	a0_109 = 0<32>
l23045678:
	a3Out = a3
	a4Out = <invalid>
	a5Out = a5
	return a0_109
udp_bind_exit:


word32 udp_sendto_if_src_chksum(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      udp_sendto_if_chksum
//      udp_sendto_if_src
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_if_src_chksum_entry:
l230456DE:
	word32 s5_176
	word32 s7_26 = 0xFFFFFFF0<32>
	s5_176 = s5
	branch a0 == 0<32> l23045736
l230456FA:
	s5_176 = s5
	branch a1 == 0<32> l23045736
l230456FC:
	s5_176 = s5
	branch a2 == 0<32> l23045736
l230456FE:
	s5_176 = s5
	branch a7 == 0<32> l23045736
l23045702:
	s5_176 = s5
	branch a4 == 0<32> l23045736
l23045704:
	word32 s8_154 = a5
	s1 = a0
	word32 s4_159 = a7
	word32 s0_171 = a6
	s5_176 = a4
	s9 = a3
	s3 = a2
	s2 = a1
	branch CONVERT(Mem25[a0 + 18<i32>:uint16], uint16, word32) == 0<32> l2304572A
l2304572A:
	word32 a0_46 = udp_bind(a0, a0, 0<32>, out a3, out a4, out a5)
	s7_26 = a0_46
	branch a0_46 == 0<32> l2304571A
l2304571A:
	a4 = CONVERT(Mem25[a1 + 8<i32>:uint16], uint16, word32)
	a5 = 0xFFFFFF7<32>
	branch a4 <=u 0xFFFFFF7<32> l23045752
l23045752:
	word32 s6_102
	word32 a3_64
	word32 a4_65
	word32 a1_590
	word32 a2_591
	word32 a5_592
	branch pbuf_add_header(a1, 8<32>, out a1_590, out a2_591, out a3_64, out a4_65, out a5_592) == 0<32> l23045868
l23045868:
	s6_102 = a1
l2304575E:
	word32 s6_596
	word32 a0_77
	word32 a7_595
	word32 a1_593
	word32 a2_594
	ra = pbuf_alloc(ra, a6, a0, 162<i32>, 8<32>, 640<i32>, a3_64, a4_65, mstatus, s8, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_171, out s1, out a0_77, out a1_593, out a2_594, out a3, out a4, out a5, out a7_595, out s2, out s3, out s4_159, out s5_176, out s6_596, out s8_154, out mstatus)
	s6_102 = a0_77
	branch a0_77 == 0<32> l23045726
l23045770:
	branch CONVERT(Mem25[s2 + 8<i32>:uint16], uint16, word32) == 0<32> l2304577C
l23045776:
	pbuf_chain(a0_77, s2, a3, a4, mstatus)
l2304577C:
	word32 s7_114 = Mem25[s6_102 + 4<i32>:int32]
	word32 a5_597
	word32 a0_115 = lwip_htons(CONVERT(Mem25[s1 + 18<i32>:uint16], uint16, word32), out a5_597)
	Mem117[s7_114:byte] = SLICE(a0_115, byte, 0)
	Mem119[s7_114 + 1<i32>:byte] = SLICE(a0_115 >>u 8<i32>, byte, 0)
	word32 a5_598
	word32 a0_123 = lwip_htons(a3, out a5_598)
	Mem125[s7_114 + 2<i32>:byte] = SLICE(a0_123, byte, 0)
	Mem127[s7_114 + 3<i32>:byte] = SLICE(a0_123 >>u 8<i32>, byte, 0)
	Mem128[s7_114 + 6<i32>:byte] = 0<8>
	Mem129[s7_114 + 7<i32>:byte] = 0<8>
	branch (CONVERT(Mem129[s1 + 16<i32>:byte], byte, word32) & 8<32>) == 0<32> l230457CE
l230457B2:
	branch (Mem129[s3:int32] & 240<i32>) != 224<i32> l230457CE
l230457C2:
	Mem139[s6_102 + 13<i32>:byte] = SLICE(CONVERT(Mem129[s6_102 + 13<i32>:byte], byte, word32) | 4<i32>, byte, 0)
l230457CE:
	word32 a5_599
	word32 a0_143 = lwip_htons(CONVERT(Mem141[s6_102 + 8<i32>:uint16], uint16, word32), out a5_599)
	Mem146[s7_114 + 4<i32>:byte] = SLICE(a0_143, byte, 0)
	Mem148[s7_114 + 5<i32>:byte] = SLICE(a0_143 >>u 8<i32>, byte, 0)
	branch (CONVERT(Mem148[s1 + 16<i32>:byte], byte, word32) & 1<32>) != 0<32> l23045822
l230457E8:
	word32 a0_164
	word32 a2_152 = CONVERT(Mem148[s6_102 + 8<i32>:uint16], uint16, word32)
	branch s8_154 == 0<32> l2304586C
l2304586C:
	word32 a2_611
	word32 a4_613
	word32 a3_612
	word32 s2_615
	word32 a6_614
	s0_171 = ip_chksum_pseudo(s6_102, 0x11<32>, a2_152, s4_159, s3, out s1, out a0_164, out a2_611, out a3_612, out a4_613, out a6_614, out s2_615, out s3, out s4_159, out s5_176)
l230457F0:
	word32 a0_191
	word32 a4_600
	word32 s0_198 = ip_chksum_pseudo_partial(s6_102, 0x11<32>, a2_152, 8<32>, s4_159, dwArgF8, out s1, out a0_191, out a4_600, out s3, out s4_159, out s5_176, out s6_102)
	word32 a0_209 = a0_191 + (s0_198 >>u 16<i32>)
	s0_171 = s0_198 >>u 16<i32>
	a0_164 = CONVERT(SLICE(a0_209 + (a0_209 >>u 0x10<u32>), word16, 0), word16, word32)
l23045812:
	branch a0_164 != 0<32> l23045818
l23045814:
	a0_164 = 0xFFFFFFF<32>
l23045818:
	Mem220[s7_114 + 6<i32>:byte] = SLICE(a0_164, byte, 0)
	Mem222[s7_114 + 7<i32>:byte] = SLICE(a0_164 >>u 8<i32>, byte, 0)
l23045822:
	word32 a3_233
	branch (Mem226[s3:int32] & 240<i32>) != 224<i32> l2304587A
l2304587A:
	a3_233 = CONVERT(Mem226[s1 + 11<i32>:byte], byte, word32)
l23045832:
	a3_233 = CONVERT(Mem226[s1 + 29<i32>:byte], byte, word32)
l23045836:
	word32 a0_272
	word32 a4_276
	word32 s4_285
	word32 s6_287
	ra = ip4_output_if_src(ra, s0_171, s1, s6_102, s4_159, s3, a3_233, CONVERT(Mem226[s1 + 10<i32>:byte], byte, word32), 0x11<32>, s5_176, s4_159, s5_176, s6_102, s7_114, out s1, out a0_272, out a3, out a4_276, out s2, out s3, out s4_285, out s5_176, out s6_287)
	s7_26 = a0_272
	branch s6_287 == s2 l23045854
l2304584E:
	word32 a2_604
	word32 s8_610
	word32 s6_609
	word32 a7_607
	word32 s4_608
	word32 a5_606
	word32 a4_605
	word32 a0_602
	word32 a1_603
	word32 s0_601
	ra = pbuf_free(ra, s6_287, a3, a4_276, s4_285, mstatus, dwArgF8, out s0_601, out s1, out a0_602, out a1_603, out a2_604, out a3, out a4_605, out a5_606, out a7_607, out s2, out s3, out s4_608, out s5_176, out s6_609, out s8_610, out mstatus)
l23045854:
	word32 a4_338 = CONVERT(Mem226[0x4201FE14<32>:uint16], uint16, word32)
	Mem340[0x4201FE14<32>:word16] = SLICE(a4_338 + 1<32>, word16, 0)
	a5 = 0x4201FD98<32>
	a4 = a4_338 + 1<32>
l23045726:
	s7_26 = 0xFFFFFFFF<32>
l23045736:
	0<32> = dwArg0128
	s0Out = s4
	s1Out = s1
	a0Out = s7_26
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg78
	s5Out = s5_176
	s7Out = s7_26
	s8Out = s5
	s9Out = s9
	mstatusOut = mstatus
	return ra
udp_sendto_if_src_chksum_exit:


word32 udp_sendto_if_chksum(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      udp_sendto_chksum
//      udp_sendto_if
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_if_chksum_entry:
l23045880:
	branch a0 == 0<32> l230458B0
l23045882:
	branch a1 == 0<32> l230458B0
l23045884:
	branch a2 == 0<32> l230458B0
l23045886:
	branch a4 == 0<32> l230458B0
l230458B0:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s7Out = s7
	s8Out = s8
	s9Out = s9
	mstatusOut = mstatus
	return ra
l23045888:
	word32 a7_14
	word32 a7_9 = Mem0[a0:int32]
	branch a7_9 == 0<32> l2304589C
l23045890:
	branch (a7_9 & 240<i32>) != 224<i32> l230458A4
l230458A4:
	branch a7_9 != Mem0[a4 + 4<i32>:int32] l230458B4
l230458B4:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFFC<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s7Out = s7
	s8Out = s8
	s9Out = s9
	mstatusOut = mstatus
	return ra
l230458AC:
	a7_14 = a0
l2304589C:
	a7_14 = a4 + 4<i32>
l230458A0:
l230458A0_thunk_udp_sendto_if_src_chksum:
	word32 a0_47
	word32 s0_50
	word32 s4_51
	word32 s7_52
	word32 s8_53
	word32 a3_57
	word32 a4_58
	word32 a5_59
	word32 s1_60
	word32 s2_61
	word32 s3_62
	word32 s5_63
	word32 s9_64
	word32 mstatus_73
	word32 ra_66 = udp_sendto_if_src_chksum(ra, a0, a1, a2, a3, a4, a5, a6, a7_14, s8, mstatus, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_50, out s1_60, out a0_47, out a3_57, out a4_58, out a5_59, out s2_61, out s3_62, out s4_51, out s5_63, out s7_52, out s8_53, out s9_64, out mstatus_73)
	s0Out = s0_50
	s1Out = s1_60
	a0Out = a0_47
	a3Out = a3_57
	a4Out = a4_58
	a5Out = a5_59
	s2Out = s2_61
	s3Out = s3_62
	s4Out = s4_51
	s5Out = s5_63
	s7Out = s7_52
	s8Out = s8_53
	s9Out = s9_64
	mstatusOut = mstatus_73
	return ra_66
udp_sendto_if_chksum_exit:


word32 udp_sendto_chksum(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      udp_send_chksum
//      udp_sendto
//      lwip_netconn_do_send
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s3 s4 s5 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_chksum_entry:
l230458B8:
	branch a0 == 0<32> l2304596A
l230458BA:
	branch a1 == 0<32> l2304596A
l230458BC:
	branch a2 == 0<32> l2304596A
l2304596A:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s9Out = s9
	mstatusOut = mstatus
	return ra
l230458BE:
	word32 a3_242
	word32 a0_40
	word32 s0_22 = a0
	word32 a0_23 = CONVERT(Mem21[a0 + 8<i32>:byte], byte, word32)
	branch a0_23 == 0<32> l2304590C
l2304590C:
	word32 a2_32 = Mem21[a5:word32]
	word32 a5_34 = a5 & 240<i32>
	branch (a5 & 240<i32>) == 224<i32> l23045922
l23045922:
	word32 a0_35 = CONVERT(Mem21[a0 + 28<i32>:byte], byte, word32)
	branch a0_35 == 0<32> l23045950
l23045950:
	s0_22 = Mem21[(a5 & 240<i32>) + 24<i32>:word32]
	branch (a5 & 240<i32>) == 0<32> l2304591A
l23045954:
	branch (a5 & 240<i32>) == Mem21[0x2308DE90<32>:int32] l2304591A
l23045960:
	word32 a4_354
	word32 a3_353
	a0_40 = ip4_route(a2_32, a5 & 240<i32>, out a2_32, out a3_353, out a4_354, out a5_34)
l23045928:
	word32 a4_352
	a0_40 = netif_get_by_index(a0_35, out a4_352, out a5_34)
l2304592C:
	branch a0_40 == 0<32> l2304591A
l2304591A:
	word32 a5_351
	word32 a4_350
	word32 a2_349
	a0_40 = ip4_route(a2_32, a5_34, out a2_349, out a3_242, out a4_350, out a5_351)
l230458E0:
	word32 a4_347
	word32 a5_348
	a0_40 = netif_get_by_index(a0_23, out a4_347, out a5_348)
	a3_242 = a3
l230458E4:
	branch a0_40 != 0<32> l2304592E
l2304592E:
l2304594C_thunk_udp_sendto_if_chksum:
	word32 a0_112
	word32 a3_115
	word32 a4_116
	word32 a5_117
	word32 mstatus_120
	word32 s0_122
	word32 s1_123
	word32 s3_125
	word32 s4_126
	word32 s5_127
	word32 s9_131
	word32 s2_355
	word32 s7_356
	word32 s8_357
	word32 ra_121 = udp_sendto_if_chksum(ra, s0_22, a1, dwArg48, a3, a0_40, a4, dwArg28, s4, mstatus, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_122, out s1_123, out a0_112, out a3_115, out a4_116, out a5_117, out s2_355, out s3_125, out s4_126, out s5_127, out s7_356, out s8_357, out s9_131, out mstatus_120)
	s0Out = s0_122
	s1Out = s1_123
	a0Out = a0_112
	a3Out = a3_115
	a4Out = a4_116
	a5Out = a5_117
	s3Out = s3_125
	s4Out = s4_126
	s5Out = s5_127
	s9Out = s9_131
	mstatusOut = mstatus_120
	return ra_121
l230458E6:
	word32 a4_141 = CONVERT(Mem21[0x4201FE22<32>:uint16], uint16, word32)
	Mem144[0x4201FE22<32>:word16] = SLICE(a4_141 + 1<32>, word16, 0)
	s0Out = s1
	s1Out = a2
	a0Out = 0xFFFFFFFC<32>
	a3Out = a3_242
	a4Out = a4_141 + 1<32>
	a5Out = 0x4201FD98<32>
	s3Out = a3
	s4Out = dwArg04
	s5Out = a5
	s9Out = s9
	mstatusOut = mstatus
	return ra
udp_sendto_chksum_exit:


word32 udp_send_chksum(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_send
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 a5 mstatus s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_send_chksum_entry:
l2304596E:
	branch a0 == 0<32> l23045982
l23045974:
	branch a1 == 0<32> l23045982
l23045982:
	a0Out = 0xFFFFFFF0<32>
	a4Out = a2
	a5Out = a3
	mstatusOut = mstatus
	return s0
l23045976:
	word32 a3_11 = CONVERT(Mem0[a0 + 20<i32>:uint16], uint16, word32)
l2304597E_thunk_udp_sendto_chksum:
	word32 a0_16
	word32 a4_20
	word32 a5_21
	word32 mstatus_24
	word32 s0_26
	word32 s9_136
	word32 s4_134
	word32 s5_135
	word32 s3_133
	word32 a3_132
	word32 s1_131
	udp_sendto_chksum(ra, a0, a1, a0 + 4<i32>, a3_11, a2, a3, s4, mstatus, dwArg14, dwArg28, dwArg48, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_26, out s1_131, out a0_16, out a3_132, out a4_20, out a5_21, out s3_133, out s4_134, out s5_135, out s9_136, out mstatus_24)
	a0Out = a0_16
	a4Out = a4_20
	a5Out = a5_21
	mstatusOut = mstatus_24
	return s0_26
udp_send_chksum_exit:


word32 udp_sendto(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
//      iperf_server_udp_recv_fn
//      sntp_dns_found
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s3 s4 s5 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_entry:
l23045986:
l2304598A_thunk_udp_sendto_chksum:
	word32 a0_13
	word32 a3_16
	word32 a4_17
	word32 mstatus_21
	word32 s0_23
	word32 s1_24
	word32 s3_26
	word32 s4_27
	word32 s5_28
	word32 s9_32
	word32 a5_61
	word32 ra_22 = udp_sendto_chksum(ra, a0, a1, a2, a3, 0<32>, 0<32>, s4, mstatus, dwArg14, dwArg28, dwArg48, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_23, out s1_24, out a0_13, out a3_16, out a4_17, out a5_61, out s3_26, out s4_27, out s5_28, out s9_32, out mstatus_21)
	s0Out = s0_23
	s1Out = s1_24
	a0Out = a0_13
	a3Out = a3_16
	a4Out = a4_17
	s3Out = s3_26
	s4Out = s4_27
	s5Out = s5_28
	s9Out = s9_32
	mstatusOut = mstatus_21
	return ra_22
udp_sendto_exit:


word32 udp_sendto_if(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_network_changed
//      dhcp_renew
//      dhcp_coarse_tmr
//      dhcp_stop
//      dhcp_server_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 mstatus ra s2 s3 s4 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_if_entry:
l2304598E:
l23045992_thunk_udp_sendto_if_chksum:
	word32 a3_17
	word32 a4_18
	word32 mstatus_22
	word32 s2_26
	word32 s3_27
	word32 s4_28
	word32 s7_31
	word32 s8_32
	word32 s0_58
	word32 s1_59
	word32 a0_60
	word32 a5_61
	word32 s5_62
	word32 s9_63
	word32 ra_23 = udp_sendto_if_chksum(ra, a0, a1, a2, a3, a4, 0<32>, 0<32>, s8, mstatus, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_58, out s1_59, out a0_60, out a3_17, out a4_18, out a5_61, out s2_26, out s3_27, out s4_28, out s5_62, out s7_31, out s8_32, out s9_63, out mstatus_22)
	a3Out = a3_17
	a4Out = a4_18
	s2Out = s2_26
	s3Out = s3_27
	s4Out = s4_28
	s7Out = s7_31
	s8Out = s8_32
	mstatusOut = mstatus_22
	return ra_23
udp_sendto_if_exit:


word32 udp_sendto_if_src(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_arp_reply
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 mstatus ra s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_if_src_entry:
l23045996:
l2304599C_thunk_udp_sendto_if_src_chksum:
	word32 s4_20
	word32 a3_26
	word32 a4_27
	word32 s2_30
	word32 s3_31
	word32 mstatus_42
	word32 s0_58
	word32 s1_59
	word32 a0_60
	word32 a5_61
	word32 s5_62
	word32 s7_63
	word32 s8_64
	word32 s9_65
	word32 ra_35 = udp_sendto_if_src_chksum(ra, a0, a1, a2, a3, a4, 0<32>, 0<32>, a5, s8, mstatus, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_58, out s1_59, out a0_60, out a3_26, out a4_27, out a5_61, out s2_30, out s3_31, out s4_20, out s5_62, out s7_63, out s8_64, out s9_65, out mstatus_42)
	a3Out = a3_26
	a4Out = a4_27
	s2Out = s2_30
	s3Out = s3_31
	s4Out = s4_20
	mstatusOut = mstatus_42
	return ra_35
udp_sendto_if_src_exit:


word32 udp_bind_netif(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt_callback
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
udp_bind_netif_entry:
l230459A0:
	word32 a5_3 = 0<32>
	branch a1 == 0<32> l230459AE
l230459A4:
	a5_3 = CONVERT(Mem0[a1 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
l230459AE:
	Mem12[a0 + 8<i32>:byte] = SLICE(a5_3, byte, 0)
	return a5_3
udp_bind_netif_exit:


word32 udp_connect(word32 a0, word32 a1, word32 a2, word32 dwArg38, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_inc_pcb_refcount
//      lwip_netconn_do_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..15] Stack +0038:[0..31]
// LiveOut: a0 a4 a5 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 t3 tp
// Preserved: s0 sp
udp_connect_entry:
l230459B4:
	branch a0 == 0<32> l23045A1C
l230459B8:
	branch a1 == 0<32> l23045A1C
l23045A1C:
	a4Out = a4
	a5Out = 0xFFFFFFF0<32>
	s2Out = s2
	return 0xFFFFFFF0<32>
l230459BA:
	word32 a4_106
	word32 a5_17 = CONVERT(Mem16[a0 + 18<i32>:uint16], uint16, word32)
	branch a5_17 == 0<32> l230459FA
l230459FA:
	word32 a5_144
	word32 a3_143
	word32 a0_24 = udp_bind(a0, a0, 0<32>, out a3_143, out a4_106, out a5_144)
	a5_17 = a0_24
	branch a0_24 == 0<32> l230459D0
l230459D0:
	Mem37[a0 + 20<i32>:word16] = SLICE(a2, word16, 0)
	Mem38[a5_17 + 4<i32>:word32] = a0
	Mem41[a0 + 16<i32>:byte] = SLICE(CONVERT(Mem38[a0 + 16<i32>:byte], byte, word32) | 4<i32>, byte, 0)
	word32 a3_43 = Mem41[0x4201FEBC<32>:int32]
	a4_106 = a3_43
l230459EE:
	branch a4_106 != 0<32> l23045A14
l23045A14:
	branch a4_106 == a0 l230459F6
l23045A18:
	a4_106 = Mem41[a4_106 + 12<i32>:word32]
l230459F0:
	Mem50[a3_43 + 12<i32>:word32] = a0
	Mem52[0x42020EBC<32>:word32] = a0
l230459F6:
	a5_17 = 0<32>
l23045A06:
	0<32> = dwArg38
	a4Out = a4_106
	a5Out = a5_17
	s2Out = a2
	return a5_17
udp_connect_exit:


word32 udp_disconnect(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_disconnect
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
udp_disconnect_entry:
l23045A20:
	branch a0 == 0<32> l23045A38
l23045A22:
	word32 a5_5 = CONVERT(Mem0[a0 + 16<i32>:byte], byte, word32)
	Mem6[a0 + 4<i32>:word32] = 0<32>
	Mem7[a0 + 20<i32>:word16] = 0<16>
	Mem9[a0 + 8<i32>:byte] = 0<8>
	Mem10[a0 + 16<i32>:byte] = SLICE(a5_5 & 0xFFFFFFFB<32>, byte, 0)
	a5 = a5_5 & 0xFFFFFFFB<32>
l23045A38:
	return a5
udp_disconnect_exit:


void udp_recv(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_server_init
//      dns_init
//      dhcp_inc_pcb_refcount
//      lwip_netconn_do_newconn
//      dhcp_server_start
//      iperf_server_udp
//      sntp_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
udp_recv_entry:
l23045A3A:
	branch a0 == 0<32> l23045A40
l23045A3C:
	Mem5[a1 + 32<i32>:word32] = a0
	Mem7[a2 + 36<i32>:word32] = a0
l23045A40:
	return
udp_recv_exit:


word32 udp_remove(word32 a0, word32 a3, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_server_init
//      dhcp_dec_pcb_refcount
//      lwip_netconn_do_delconn
//      dhcp_server_stop
//      iperf_server_udp
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: sp
udp_remove_entry:
l23045A42:
	word32 a1_14 = a0
	branch a0 == 0<32> l23045A70
l23045A70:
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l23045A46:
	word32 a5_13 = Mem0[0x4201FEBC<32>:int32]
	branch a5_13 != a0 l23045A60
l23045A60:
	branch a5_13 == 0<32> l23045A58
l23045A62:
	word32 a5_11 = Mem0[0x4202000C<32>:word32]
	branch false l23045A58
l23045A66:
	branch a0 != 0x42020000<32> l23045A5E
l23045A5E:
	a5_13 = 0x42020000<32>
l23045A6A:
	a1_14 = Mem0[0x4202000C<32>:word32]
	Mem15[0x4202000C<32>:word32] = a5_11
l23045A52:
	Mem17[0x42020EBC<32>:word32] = a5_13
l23045A58:
l23045A5A_thunk_memp_free:
	word32 a5_27
	word32 a0_28
	word32 a2_29
	word32 a3_30
	word32 a4_31
	word32 s1_32 = memp_free(1<32>, a1_14, a3, 0x42020000<32>, mstatus, out a0_28, out a2_29, out a3_30, out a4_31, out a5_27)
	a0Out = a0_28
	a2Out = a2_29
	a3Out = a3_30
	a4Out = a4_31
	a5Out = a5_27
	return s1_32
udp_remove_exit:


word32 udp_new(word32 ra, word32 s1, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_server_init
//      dhcp_inc_pcb_refcount
//      udp_new_ip_type
//      dhcp_server_start
//      iperf_server_udp
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: a3 a4 a5 ra s1
// Trashed: a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: s0 sp
udp_new_entry:
l23045A72:
	word32 a0_13
	word32 a2_63
	word32 a3_16
	word32 a4_17
	word32 a5_14
	word32 s1_18 = memp_malloc(s1, 1<32>, a3, a4, mstatus, out a0_13, out a2_63, out a3_16, out a4_17, out a5_14)
	branch a0_13 == 0<32> l23045A96
l23045A82:
	word32 t1_64
	word32 a0_65
	word32 a1_66
	word32 a2_67
	word32 a5_68
	ra = memset(ra, a0_13, 0<32>, 40<i32>, out t1_64, out a0_65, out a1_66, out a2_67, out a3_16, out a4_17, out a5_68)
	Mem33[a0_13 + 11<i32>:byte] = 0xFF<8>
	Mem34[a0_13 + 29<i32>:byte] = 0xFF<8>
	a5_14 = 0xFFFFFFFF<32>
l23045A96:
	s1Out = s1_18
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_14
	return ra
udp_new_exit:


word32 udp_new_ip_type(word32 ra, word32 s1, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_init
//      lwip_netconn_do_newconn
//      sntp_init
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: a3 a4 a5 ra s1
// Trashed: a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: sp
udp_new_ip_type_entry:
l23045AA0:
l23045AA0_thunk_udp_new:
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 s1_12
	word32 ra_15 = udp_new(ra, s1, a3, a4, mstatus, out s1_12, out a3_9, out a4_10, out a5_11)
	s1Out = s1_12
	a3Out = a3_9
	a4Out = a4_10
	a5Out = a5_11
	return ra_15
udp_new_ip_type_exit:


word32 udp_netif_ip_addr_changed(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_do_set_ipaddr
//      netif_remove
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a5
// Preserved: sp
udp_netif_ip_addr_changed_entry:
l23045AA4:
	branch a0 == 0<32> l23045ABA
l23045AA6:
	branch a5 == 0<32> l23045ABA
l23045AAA:
	branch a1 == 0<32> l23045ABA
l23045AAC:
	branch a5 == 0<32> l23045ABA
l23045AB0:
	a5 = Mem0[0x4201FEBC<32>:int32]
l23045AB8:
	branch a5 != 0<32> l23045ABC
l23045ABC:
	word32 a5_14 = Mem13[a3:word32]
	branch a3 != a4 l23045AC8
l23045AC4:
	Mem18[a4:word32] = a5_14
l23045AC8:
	a5 = Mem20[a5_14 + 12<i32>:word32]
l23045ABA:
	return a5
udp_netif_ip_addr_changed_exit:


void udp_get_pcbs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stats_netstat
// MayUse: 
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
udp_get_pcbs_entry:
l23045ACC:
	return
udp_get_pcbs_exit:


void ethernet_input(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s3, word32 s4, word32 s5, word32 s6, word32 s8, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg94, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgAC, word32 dwArgB0, word32 dwArgB4, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
ethernet_input_entry:
l23045AD6:
	word32 a4_194
	word32 s0_15 = a0
	branch CONVERT(Mem11[a0 + 10<i32>:uint16], uint16, word32) >u 0xE<32> l23045B00
l23045B00:
	branch CONVERT(Mem11[a0 + 15<i32>:byte], byte, word32) != 0<32> l23045B12
l23045B08:
	Mem21[a0 + 15<i32>:byte] = SLICE(CONVERT(Mem11[a1 + 68<i32>:byte], byte, word32) + 1<32>, byte, 0)
l23045B12:
	word32 a5_29 = CONVERT(Mem23[a0:byte], byte, word32)
	s0_15 = Mem23[a0 + 4<i32>:word32]
	word32 s1_28 = CONVERT(Mem23[a0 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem23[a0 + 12<i32>:byte], byte, word32)
	a4_194 = a5_29 & 1<i32>
	branch (a5_29 & 1<i32>) == 0<32> l23045B4E
l23045B2A:
	word32 a5_42
	a4_194 = 1<32>
	branch a5_29 != 1<32> l23045B92
l23045B92:
	word32 a5_485
	word32 a1_484
	branch memcmp(a0, 0x2308DE9C<32>, 6<32>, out a1_484, out a2, out a3, out a4_194, out a5_485) != 0<32> l23045B4E
l23045BA2:
	a5_42 = CONVERT(Mem23[s0_15 + 13<i32>:byte], byte, word32) | 8<i32>
l23045B30:
	branch CONVERT(Mem23[a0 + 1<i32>:byte], byte, word32) != 0<32> l23045B4E
l23045B36:
	a4_194 = CONVERT(Mem23[a0 + 2<i32>:byte], byte, word32)
	branch a4_194 != 94<i32> l23045B4E
l23045B42:
	a5_42 = CONVERT(Mem23[s0_15 + 13<i32>:byte], byte, word32) | 16<i32>
l23045B4A:
	Mem50[s0_15 + 13<i32>:byte] = SLICE(a5_42, byte, 0)
l23045B4E:
	branch s1_28 == 8<32> l23045BAC
l23045BAC:
	branch (CONVERT(Mem57[a1 + 65<i32>:byte], byte, word32) & 8<32>) == 0<32> l23045B8A
l23045BB4:
	word32 a5_506
	word32 a1_505
	branch pbuf_remove_header(s0_15, 0xE<32>, a2, out a1_505, out a3, out a4_194, out a5_506) != 0<32> l23045B8A
l23045BBE:
	ip4_input(ra, s0_15, s0_15, a1, a3, s3, s4, s5, s6, s8, s10, s11, mstatus, s0, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA4, dwArgA8, dwArgAC, dwArgB8, dwArgC0, dwArgC4, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168)
l23045B54:
	branch s1_28 != 1544<i32> l23045AEC
l23045B5C:
	branch (CONVERT(Mem57[a1 + 65<i32>:byte], byte, word32) & 8<32>) == 0<32> l23045B8A
l23045B64:
	word32 a4_503
	word32 a5_504
	word32 a1_502
	branch pbuf_remove_header(s0_15, 0xE<32>, a2, out a1_502, out a3, out a4_503, out a5_504) == 0<32> l23045BD4
l23045BD4:
	etharp_input(ra, s1_28, a1, a3, a1, s4, mstatus, s0, dwLoc08, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, dwArg54, dwArg58, dwArg68, s1, ra, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB0, dwArgB4, dwArgB8, dwArgC8, dwArgD8, dwArg0148, dwArg0188)
l23045B6E:
	Mem184[0x4201FDBA<32>:word16] = SLICE(CONVERT(Mem57[0x4201FDBA<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23045AEC:
	Mem190[0x4201FDC0<32>:word16] = SLICE(CONVERT(Mem187[0x4201FDC0<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23045B80:
	word32 a4_193 = CONVERT(Mem192[0x4201FDB6<32>:uint16], uint16, word32)
	Mem195[0x4201FDB6<32>:word16] = SLICE(a4_193 + 1<32>, word16, 0)
	a4_194 = a4_193 + 1<32>
l23045B8A:
	word32 a1_489
	word32 a0_488
	word32 s0_486
	word32 s1_487
	word32 s2_495
	word32 a7_494
	word32 a4_492
	word32 a5_493
	word32 a2_490
	word32 a3_491
	word32 s4_497
	word32 s5_498
	word32 s8_500
	word32 mstatus_501
	word32 s3_496
	word32 s6_499
	pbuf_free(ra, s0_15, a3, a4_194, s4, mstatus, dwArg0118, out s0_486, out s1_487, out a0_488, out a1_489, out a2_490, out a3_491, out a4_492, out a5_493, out a7_494, out s2_495, out s3_496, out s4_497, out s5_498, out s6_499, out s8_500, out mstatus_501)
l23045BC6:
	0<32> = dwArg38
	return
ethernet_input_exit:


word32 ethernet_output(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 dwArg38, word32 dwArg58, word32 dwArg74, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
//      etharp_request
//      etharp_output_to_arp_index
//      etharp_query
//      etharp_output
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ethernet_output_entry:
l23045BDE:
	word32 a5_170
	word32 a0_26 = lwip_htons(a4, out a5_170)
	word32 a3_34
	word32 a1_171
	word32 a2_172
	word32 a4_173
	word32 a5_174
	branch pbuf_add_header(a1, 0xE<32>, out a1_171, out a2_172, out a3_34, out a4_173, out a5_174) != 0<32> l23045C44
l23045C44:
	word32 a4_40 = CONVERT(Mem25[0x4201FDA2<32>:uint16], uint16, word32)
	Mem43[0x4201FDA2<32>:word16] = SLICE(a4_40 + 1<32>, word16, 0)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = a0_26
	a3Out = a3_34
	a4Out = a4_40 + 1<32>
	s2Out = a1
	s3Out = a0
	s4Out = a2
	return ra
l23045C08:
	word32 s0_50 = Mem25[a1 + 4<i32>:int32]
	Mem53[s0_50 + 12<i32>:byte] = SLICE(a0_26, byte, 0)
	Mem55[s0_50 + 13<i32>:byte] = SLICE(a0_26 >>u 8<i32>, byte, 0)
	word32 a1_175
	word32 a2_176
	word32 a3_177
	word32 a4_178
	word32 a5_179
	word32 a6_180
	word32 a7_181
	memcpy(s0_50, a3_34, 6<32>, out a1_175, out a2_176, out a3_177, out a4_178, out a5_179, out a6_180, out a7_181)
	word32 a4_73
	word32 a3_78
	word32 a1_182
	word32 a2_183
	word32 a5_184
	word32 a6_185
	word32 a7_186
	memcpy(s0_50 + 6<i32>, a2, 6<32>, out a1_182, out a2_183, out a3_78, out a4_73, out a5_184, out a6_185, out a7_186)
	word32 t1_87 = Mem55[a0 + 24<i32>:int32]
	0<32> = dwArg0128
	word32 s3_96
	word32 a4_98
	word32 a3_99
	word32 ra_100
	word32 s1_101
	word32 s2_102
	word32 s4_103
	word32 s0_106
	word32 t1_107
	word32 a7_112
	word32 a6_113
	word32 t0_114
	word32 t4_115
	word32 t5_116
	word32 t6_117
	call t1_87 (retsize: 0;)
		uses: a0:a0,a1:a1,a2:dwArg0100,a3:a3_78,a4:a4_73,a6:a6_113,a7:a7_112,ra:ra,s0:dwArgE4,s1:a0_26 >>u 8<i32>,s2:a1,s3:a0,s4:a2,s8:dwArg58,Stack +0038:dwArg38,Stack +0058:dwArg58,Stack +0074:dwArg74,Stack +00E4:dwArgE4,Stack +0100:dwArg0100,Stack +0104:dwArg0104,Stack +0128:dwArg0128,t0:t0_114,t1:t1_107,t3:dwArg38,t4:t4_115,t5:t5_116,t6:t6_117,tp:dwArg0104
		defs: a3:a3_99,a4:a4_98,a6:a6_113,a7:a7_112,ra:ra_100,s0:s0_106,s1:s1_101,s2:s2_102,s3:s3_96,s4:s4_103,t0:t0_114,t1:t1_107,t4:t4_115,t5:t5_116,t6:t6_117
	s0Out = s0_106
	s1Out = s1_101
	a3Out = a3_99
	a4Out = a4_98
	s2Out = s2_102
	s3Out = s3_96
	s4Out = s4_103
	return ra_100
ethernet_output_exit:


word32 netconn_apimsg(word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArgB8, word32 dwArgF8, word32 dwArg0138, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_new_with_proto_and_callback
//      netconn_prepare_delete
//      netconn_getaddr
//      netconn_bind
//      netconn_connect
//      netconn_disconnect
//      netconn_listen_with_backlog
//      netconn_tcp_recvd
//      netconn_send
//      netconn_write_vectors_partly
//      netconn_recv_tcp_pbuf_flags
//      netconn_shutdown
//      netconn_join_leave_group
// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
netconn_apimsg_entry:
l23045C68:
	word32 a1_17
	word32 a3_19
	word32 a4_20
	word32 a5_21
	word32 s1_25
	word32 s2_26
	word32 s3_27
	word32 s4_28
	word32 s5_29
	word32 s6_30
	word32 a0_16
	word32 s0_24 = tcpip_send_msg_wait_sem(Mem0[a2:word32], a2 + 0xC<32>, a4, a5, mstatus, dwArg04, dwArgB8, dwArgF8, dwArg0138, out s1_25, out a0_16, out a1_17, out a3_19, out a4_20, out a5_21, out s2_26, out s3_27, out s4_28, out s5_29, out s6_30)
	branch a0_16 != 0<32> l23045C7E
l23045C7A:
	a0_16 = CONVERT(Mem11[s0_24 + 4<i32>:int8], int8, int32)
l23045C7E:
	a0Out = a0_16
	a1Out = a1_17
	a2Out = dwArg10
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_21
	s2Out = s2_26
	s3Out = s3_27
	s4Out = s4_28
	s5Out = s5_29
	s6Out = s6_30
	return s1_25
netconn_apimsg_exit:


word32 netconn_close_shutdown(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_recv_tcp_pbuf_flags
//      netconn_shutdown
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a2 a5 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_close_shutdown_entry:
l23045C86:
	branch a0 == 0<32> l23045CAC
l23045CAC:
	a2Out = a2
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return 0xFFFFFFF0<32>
l23045C88:
	word32 a5_12
	sys_now(out a5_12)
	word32 a0_20
	word32 a2_22
	word32 a5_25
	word32 s3_30
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 a1_100
	word32 a3_101
	word32 a4_102
	word32 s2_103
	netconn_apimsg(a2, a4, a5_12, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_20, out a1_100, out a2_22, out a3_101, out a4_102, out a5_25, out s2_103, out s3_30, out s4_31, out s5_32, out s6_33)
	a2Out = a2_22
	a5Out = a5_25
	s3Out = s3_30
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	return a0_20
netconn_close_shutdown_exit:


word32 netconn_new_with_proto_and_callback(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg44, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_socket
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0044:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_new_with_proto_and_callback_entry:
l23045CB0:
	word32 a2_20
	word32 a5_23
	word32 a4_101
	word32 a3_100
	word32 a1_139
	word32 s2_147
	word32 s3_148
	word32 a0_27 = netconn_alloc(ra, a0, a3, a4, mstatus, dwLoc40, dwLoc3C, dwLoc08, dwArg44, dwArgB8, dwArgF8, dwArg0138, out a1_139, out a2_20, out a3_100, out a4_101, out a5_23, out s2_147, out s3_148)
	word32 s0_104 = a0_27
	branch a0_27 == 0<32> l23045D0E
l23045CC6:
	word32 a0_40
	word32 a2_170
	word32 a5_171
	word32 s4_172
	word32 s6_173
	netconn_apimsg(a2_20, a4_101, a5_23, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_40, out a1_139, out a2_170, out a3_100, out a4_101, out a5_171, out s2_147, out s3_148, out s4_172, out s5, out s6_173)
	branch a0_40 == 0<32> l23045D0E
l23045CDC:
	sys_mbox_valid(a0_27 + 16<i32>)
	sys_mbox_valid(a0_27 + 20<i32>)
	sys_sem_valid(a0_27 + 12<i32>)
	word32 a3_74
	word32 a4_75
	word32 s1_79
	word32 a1_174
	word32 a2_175
	word32 a5_176
	word32 s4_177
	word32 s0_78 = sys_sem_free(a0_27 + 12<i32>, a3_100, mstatus, dwArg0118, dwArg0158, out s1_79, out a1_174, out a2_175, out a3_74, out a4_75, out a5_176, out s4_177)
	word32 a3_87
	word32 a4_88
	word32 a0_178
	word32 a2_179
	word32 a5_180
	word32 s4_181
	sys_mbox_free(s1_79, a3_74, a4_75, mstatus, dwArg0108, dwArg0148, out a0_178, out a2_179, out a3_87, out a4_88, out a5_180, out s4_181)
	word32 a0_182
	word32 a2_183
	word32 a5_184
	memp_free(7<32>, s0_78, a3_87, a4_88, mstatus, out a0_182, out a2_183, out a3_100, out a4_101, out a5_184)
	s2_147 = a0_27 + 12<i32>
	a1_139 = s0_78
	s0_104 = 0<32>
l23045D0E:
	a1Out = a1_139
	a3Out = a3_100
	a4Out = a4_101
	s2Out = s2_147
	s3Out = s3_148
	s5Out = s5
	return s0_104
netconn_new_with_proto_and_callback_exit:


word32 netconn_prepare_delete(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      free_socket
//      lwip_close
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a1 a3 a4 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_prepare_delete_entry:
l23045D1C:
	branch a0 == 0<32> l23045D3E
l23045D3E:
	a0Out = 0<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return s1
l23045D1E:
	word32 a5_10
	sys_now(out a5_10)
	word32 a0_18
	word32 a1_19
	word32 a3_21
	word32 a4_22
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 a2_101
	word32 a5_102
	word32 s1_26 = netconn_apimsg(a2, a4, a5_10, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_18, out a1_19, out a2_101, out a3_21, out a4_22, out a5_102, out s2_27, out s3_28, out s4_29, out s5_30, out s6_31)
	a0Out = a0_18
	a1Out = a1_19
	a3Out = a3_21
	a4Out = a4_22
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	return s1_26
netconn_prepare_delete_exit:


word32 netconn_delete(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      free_socket
//      lwip_accept
//      lwip_socket
// MayUse:  a0:[0..31]
// LiveOut: s1
// Trashed: a0 a2 s1 tp
// Preserved: s0 sp
netconn_delete_entry:
l23045D42:
	word32 s1_10 = 0<32>
	branch a0 == 0<32> l23045D5E
l23045D4E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg120 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg248 = <invalid>
	word32 a0_37
	word32 a1_38
	word32 a3_39
	word32 a4_40
	word32 s2_41
	word32 s3_42
	word32 s4_43
	word32 s5_44
	word32 s6_45
	netconn_prepare_delete(a0, a2, a4, mstatus, stackArg120, stackArg184, stackArg248, out a0_37, out a1_38, out a3_39, out a4_40, out s2_41, out s3_42, out s4_43, out s5_44, out s6_45)
	s1_10 = a0
	branch a0 != 0<32> l23045D5E
l23045D58:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg328 = <invalid>
	word32 stackArg392 = <invalid>
	word32 a4_49
	word32 a5_50
	netconn_free(a0, a3, mstatus, stackArg328, stackArg392, out a4_49, out a5_50)
l23045D5E:
	return s1_10
netconn_delete_exit:


word32 netconn_getaddr(word32 a0, word32 a1, word32 a2, word32 a4, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_accept
//      lwip_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 a4 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_getaddr_entry:
l23045D6A:
	branch a0 == 0<32> l23045D96
l23045D96:
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return 0xFFFFFFF0<32>
l23045D6C:
	branch a1 == 0<32> l23045D9A
l23045D72:
	branch a2 == 0<32> l23045D9A
l23045D9A:
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return 0xFFFFFFF0<32>
l23045D74:
	word32 a0_22
	word32 a3_25
	word32 a4_26
	word32 s2_31
	word32 s3_32
	word32 s4_33
	word32 s6_128
	word32 s5_127
	word32 a5_126
	word32 a2_125
	word32 a1_124
	netconn_apimsg(a2, a4, a0, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_22, out a1_124, out a2_125, out a3_25, out a4_26, out a5_126, out s2_31, out s3_32, out s4_33, out s5_127, out s6_128)
	a3Out = a3_25
	a4Out = a4_26
	s2Out = s2_31
	s3Out = s3_32
	s4Out = s4_33
	return a0_22
netconn_getaddr_exit:


word32 netconn_bind(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a3Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_bind
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_bind_entry:
l23045D9C:
	branch a0 == 0<32> l23045DC8
l23045DC8:
	a3Out = a3
	s3Out = s3
	return 0xFFFFFFF0<32>
l23045D9E:
	branch a1 != 0<32> l23045DAC
l23045DA4:
l23045DAC:
	word32 a0_28
	word32 a3_31
	word32 s3_38
	word32 a1_108
	word32 a2_109
	word32 a4_110
	word32 a5_111
	word32 s2_112
	word32 s4_113
	word32 s5_114
	word32 s6_115
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_28, out a1_108, out a2_109, out a3_31, out a4_110, out a5_111, out s2_112, out s3_38, out s4_113, out s5_114, out s6_115)
	a3Out = a3_31
	s3Out = s3_38
	return a0_28
netconn_bind_exit:


word32 netconn_connect(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a1 a3 a4 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_connect_entry:
l23045DCC:
	branch a0 == 0<32> l23045DF8
l23045DF8:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return 0xFFFFFFF0<32>
l23045DCE:
	branch a1 != 0<32> l23045DDC
l23045DD4:
l23045DDC:
	word32 a0_28
	word32 a1_29
	word32 a3_31
	word32 a4_32
	word32 s2_37
	word32 s3_38
	word32 s4_39
	word32 a2_112
	word32 a5_113
	word32 s5_114
	word32 s6_115
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_28, out a1_29, out a2_112, out a3_31, out a4_32, out a5_113, out s2_37, out s3_38, out s4_39, out s5_114, out s6_115)
	a1Out = a1_29
	a3Out = a3_31
	a4Out = a4_32
	s2Out = s2_37
	s3Out = s3_38
	s4Out = s4_39
	return a0_28
netconn_connect_exit:


word32 netconn_disconnect(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_connect
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a1 a3 a4 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_disconnect_entry:
l23045DFC:
	branch a0 == 0<32> l23045E18
l23045E18:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return 0xFFFFFFF0<32>
l23045DFE:
	word32 a0_16
	word32 a1_17
	word32 a3_19
	word32 a4_20
	word32 s2_25
	word32 s3_26
	word32 s4_27
	word32 a2_94
	word32 a5_95
	word32 s5_96
	word32 s6_97
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_16, out a1_17, out a2_94, out a3_19, out a4_20, out a5_95, out s2_25, out s3_26, out s4_27, out s5_96, out s6_97)
	a1Out = a1_17
	a3Out = a3_19
	a4Out = a4_20
	s2Out = s2_25
	s3Out = s3_26
	s4Out = s4_27
	return a0_16
netconn_disconnect_exit:


word32 netconn_listen_with_backlog(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_listen
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_listen_with_backlog_entry:
l23045E1C:
	branch a0 == 0<32> l23045E38
l23045E38:
	a3Out = a3
	s2Out = s2
	return 0xFFFFFFF0<32>
l23045E1E:
	word32 a0_16
	word32 a3_19
	word32 s2_25
	word32 a1_90
	word32 a2_91
	word32 a4_92
	word32 a5_93
	word32 s3_94
	word32 s4_95
	word32 s5_96
	word32 s6_97
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_16, out a1_90, out a2_91, out a3_19, out a4_92, out a5_93, out s2_25, out s3_94, out s4_95, out s5_96, out s6_97)
	a3Out = a3_19
	s2Out = s2_25
	return a0_16
netconn_listen_with_backlog_exit:


word32 netconn_tcp_recvd(word32 a0, word32 a2, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a4Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recv_tcp
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a4 s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_tcp_recvd_entry:
l23045E3C:
	branch a0 == 0<32> l23045E6C
l23045E6C:
	a4Out = a4
	s3Out = s3
	return s1
l23045E3E:
	word32 a4_6 = CONVERT(Mem0[a0:byte], byte, word32)
	branch (a4_6 & 240<i32>) != 0x10<32> l23045E70
l23045E70:
	a4Out = a4_6 & 240<i32>
	s3Out = s3
	return s1
l23045E50:
	word32 a4_26
	word32 s3_32
	word32 a0_98
	word32 a1_99
	word32 a2_100
	word32 a3_101
	word32 a5_102
	word32 s2_103
	word32 s4_104
	word32 s5_105
	word32 s6_106
	word32 s1_30 = netconn_apimsg(a2, a4_6 & 240<i32>, a0, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_98, out a1_99, out a2_100, out a3_101, out a4_26, out a5_102, out s2_103, out s3_32, out s4_104, out s5_105, out s6_106)
	a4Out = a4_26
	s3Out = s3_32
	return s1_30
netconn_tcp_recvd_exit:


word32 netconn_send(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a4Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_sendto
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a3 a4 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_send_entry:
l23045E72:
	branch a0 == 0<32> l23045E90
l23045E90:
	a4Out = a4
	s4Out = s4
	return a3
l23045E74:
	word32 a3_21
	word32 a4_22
	word32 s4_29
	word32 a0_92
	word32 a1_93
	word32 a2_94
	word32 a5_95
	word32 s2_96
	word32 s3_97
	word32 s5_98
	word32 s6_99
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_92, out a1_93, out a2_94, out a3_21, out a4_22, out a5_95, out s2_96, out s3_97, out s4_29, out s5_98, out s6_99)
	a4Out = a4_22
	s4Out = s4_29
	return a3_21
netconn_send_exit:


word32 netconn_write_vectors_partly(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_write_partly
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_write_vectors_partly_entry:
l23045E94:
	branch a0 == 0<32> l23045F44
l23045F44:
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	return 0xFFFFFFF0<32>
l23045E96:
	word32 a0_10 = 0xFFFFFFFA<32>
	branch (CONVERT(Mem0[a0:byte], byte, word32) & 240<i32>) != 0x10<32> l23045EDE
l23045EA8:
	word32 t1_12 = Mem0[a0 + 28<i32>:int32]
	branch (CONVERT((CONVERT(Mem0[a0 + 36<i32>:byte], byte, word32) & 2<32> | a3 & 4<i32>) != 0<32>, bool, word32) | t1_12) == 0<32> l23045EE0
l23045EC2:
	branch a4 != 0<32> l23045EE0
l23045EE0:
	word32 a7_23 = a1 + 4<i32>
	word32 a0_24 = 0<32>
	word32 a5_25 = 0<32>
l23045ED6:
	branch a0_24 < a2 l23045EC8
l23045EC8:
	word32 t3_30 = Mem0[a7_23:int32]
	a7_23 = a7_23 + 8<32>
	a5_25 = a5_25 + t3_30
	branch a5_25 <u t3_30 l23045F48
l23045F48:
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	return 0xFFFFFFFA<32>
l23045ED4:
	a0_24 = a0_24 + 1<32>
l23045EDA:
	branch a5_25 != 0<32> l23045EF4
l23045EF4:
	branch a5_25 >= 0<32> l23045F04
l23045EF8:
	a0_10 = 0xFFFFFFFA<32>
	branch a4 == 0<32> l23045EDE
l23045EFC:
	a5_25 = 0x7FFFFFFF<32>
l23045F04:
	branch t1_12 == 0<32> l23045F40
l23045F40:
l23045F22:
	sys_now(out a5_25)
l23045F28:
	word32 a3_97
	word32 a5_99
	word32 s2_103
	word32 s3_104
	word32 s4_105
	word32 s5_106
	word32 a4_297
	word32 s6_298
	word32 a2_296
	word32 a1_295
	word32 a0_117
	netconn_apimsg(a2, a4, a5_25, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_117, out a1_295, out a2_296, out a3_97, out a4_297, out a5_99, out s2_103, out s3_104, out s4_105, out s5_106, out s6_298)
	branch a0_117 != 0<32> l23045EEC
l23045F38:
	branch a4 == 0<32> l23045EEA
l23045EEA:
	a0_117 = 0<32>
l23045F3A:
	Mem119[a5_99:word32] = a4
l23045EEC:
	a3Out = a3_97
	s2Out = s2_103
	s3Out = s3_104
	s4Out = s4_105
	s5Out = s5_106
	s8Out = dwArgD4
	return a0_117
l23045EDC:
	a0_10 = 0<32>
l23045EDE:
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	return a0_10
l23045EC6:
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	return 0xFFFFFFFA<32>
netconn_write_vectors_partly_exit:


word32 netconn_write_partly(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg58, word32 dwArg98, word32 dwArgD8, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_send
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a3 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_write_partly_entry:
l23045F4C:
	word32 a3_24
	word32 s2_28
	word32 s3_29
	word32 s4_30
	word32 s5_31
	word32 s8_33
	word32 a0_16 = netconn_write_vectors_partly(a0, fp + 0xFFFFFFE8<32>, 1<32>, a3, a4, mstatus, dwArg58, dwArg98, dwArgD8, out a3_24, out s2_28, out s3_29, out s4_30, out s5_31, out s8_33)
	a3Out = a3_24
	s2Out = s2_28
	s3Out = s3_29
	s4Out = s4_30
	s5Out = s5_31
	s8Out = s8_33
	return a0_16
netconn_write_partly_exit:


word32 netconn_err(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_accept
//      netconn_recv_data
//      netconn_recv_tcp_pbuf_flags
//      lwip_netconn_do_send
//      lwip_netconn_do_write
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
netconn_err_entry:
l23045F62:
	word32 s1_10 = 0<32>
	branch a0 == 0<32> l23045F80
l23045F6E:
	word32 a2_50
	word32 a4_51
	word32 a5_52
	sys_arch_protect(a4, mstatus, out a2_50, out a4_51, out a5_52)
	s1_10 = CONVERT(Mem9[a0 + 8<i32>:int8], int8, int32)
	Mem20[a0 + 8<i32>:byte] = 0<8>
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5)
l23045F80:
	a0Out = s1_10
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1_10
netconn_err_exit:


word32 netconn_accept(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg54, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_accept
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0054:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_accept_entry:
l23045F8C:
	word32 s0_104
	word32 sp_102 = fp + -48<i32>
	branch a1 != 0<32> l23045FAC
l23045FAC:
	Mem15[a1:word32] = 0<32>
	branch a0 == 0<32> l23045F9A
l23045FB4:
	word32 a0_22
	word32 a2_23
	word32 s1_24 = netconn_err(a0, a3, a4, mstatus, out a0_22, out a2_23, out a3, out a4, out a5)
	s0_104 = a0_22
	branch a0_22 != 0<32> l23045F9C
l23045FC2:
	branch sys_mbox_valid(s1_24 + 20<i32>) != 0<32> l23045FD2
l23045FD2:
	a5 = CONVERT(Mem29[s1_24 + 36<i32>:byte], byte, word32)
	a4 = a5 & 1<i32>
	branch (a5 & 1<i32>) != 0<32> l23045FCE
l23045FDC:
	word32 s2_106
	word32 a0_109
	word32 s3_51
	branch (a5 & 2<32>) == 0<32> l23046004
l23046004:
	word32 s1_297
	word32 a1_298
	word32 a5_299
	word32 s4_300
	s0_104 = sys_arch_mbox_fetch(s1_24 + 20<i32>, fp + -36<i32>, a2_23, a3, a5 & 1<i32>, mstatus, dwArg34, dwArgA8, dwArgE8, out s1_297, out a0_109, out a1_298, out a3, out a4, out a5_299, out s2_106, out s3_51, out s4_300)
	a5 = 0xFFFFFFFF<32>
	branch a0_109 != 0xFFFFFFFF<32> l23045FEE
l23046014:
	s0_104 = 0xFFFFFFFD<32>
l23045FE0:
	word32 s4_303
	word32 a1_302
	word32 s1_301
	s0_104 = sys_arch_mbox_tryfetch(s1_24 + 20<i32>, fp + -36<i32>, a3, a5 & 1<i32>, a5 & 2<32>, mstatus, dwLoc2C, dwArg54, dwArgC8, dwArg0108, out s1_301, out a0_109, out a1_302, out a3, out a4, out s2_106, out s3_51, out s4_303)
	a5 = 0xFFFFFFFF<32>
	branch a0_109 == 0xFFFFFFFF<32> l2304602C
l2304602C:
	s0_104 = 0xFFFFFFF9<32>
l23045FEE:
	word32 s1_90 = Mem29[0x2B<32>:word32]
	branch true l23046018
l23046018:
	word32 a5_113
	word32 a6_117
	word32 a7_118
	word32 s4_119
	word32 s8_120
	word32 t0_121
	word32 t1_122
	word32 t4_123
	word32 t5_124
	word32 t6_125
	call 0xFFFFFFFF<32> (retsize: 0;)
		uses: a0:s1_90,a1:1<32>,a2:0<32>,a3:a3_100,a4:a4_99,a5:a5_113,a6:a6_117,a7:a7_118,mstatus:mstatus,ra:ra,s0:s0_95,s1:s1_90,s2:s2_96,s3:s3_97,s4:s4_119,s8:s8_120,Stack +0004:dwLoc2C,Stack +0064:dwArg34,Stack +0084:dwArg54,Stack +00D8:dwArgA8,Stack +00F8:dwArgC8,Stack +0118:dwArgE8,Stack +0138:dwArg0108,t0:t0_121,t1:t1_122,t4:t4_123,t5:t5_124,t6:t6_125
		defs: a0:a0_109,a3:a3_116,a5:a5_113,a6:a6_117,a7:a7_118,mstatus:mstatus_115,ra:ra_103,s0:s0_104,s2:s2_106,s4:s4_119,s8:s8_120,sp:sp_102,t0:t0_121,t1:t1_122,t4:t4_123,t5:t5_124,t6:t6_125
l23045FF2:
	branch lwip_netconn_is_err_msg(a0_109, sp_102 + 11<i32>, out a4, out a5) == 0<32> l23046022
l23046022:
	branch a5 == 0<32> l23045FCE
l23046026:
	Mem137[s2_106:word32] = a5
l23045FFE:
	s0_104 = CONVERT(Mem29[sp_102 + 11<i32>:int8], int8, int32)
l23045FCE:
	s0_104 = 0xFFFFFFF1<32>
l23045F9A:
	s0_104 = 0xFFFFFFF0<32>
l23045F9C:
	0<32> = dwArg0128
	a0Out = s0_104
	a3Out = a3
	a4Out = a4
	a5Out = a5
	mstatusOut = mstatus
	return ra
netconn_accept_exit:


word32 netconn_recv_data(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg34, word32 dwArgA8, word32 dwArgB4, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_recv_udp_raw_netbuf_flags
//      netconn_recv_tcp_pbuf_flags
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_recv_data_entry:
l23046030:
	word32 a5_101
	branch a1 != 0<32> l23046052
l23046052:
	Mem16[a1:word32] = 0<32>
	branch a0 == 0<32> l23046040
l23046058:
	s2 = a0 + 16<i32>
	s3 = a1
	branch sys_mbox_valid(a0 + 16<i32>) != 0<32> l23046078
l23046078:
	word32 a0_111
	word32 s0_102
	word32 a5_25 = CONVERT(Mem16[a0 + 36<i32>:byte], byte, word32)
	word32 a5_27 = a5_25 & 3<32>
	word32 a2_28 = a2 & 4<i32> | a5_25 & 3<32>
	branch a2_28 != 0<32> l2304608C
l23046086:
	a5_27 = CONVERT(Mem16[a0 + 8<i32>:int8], int8, int32)
	branch a5_27 == 0<32> l230460D8
l230460D8:
	word32 a5_412
	word32 a4_411
	s0_102 = sys_arch_mbox_fetch(a0 + 16<i32>, fp + -36<i32>, a2_28, a3, a4, mstatus, dwArg34, dwArgA8, dwArgE8, out s1, out a0_111, out a1, out a3, out a4_411, out a5_412, out s2, out s3, out s4)
	a4 = 0xFFFFFFFF<32>
	a5_101 = 0xFFFFFFFD<32>
	branch a0_111 != 0xFFFFFFFF<32> l2304609A
l230460EA:
l2304608C:
	word32 a4_72
	s0_102 = sys_arch_mbox_tryfetch(a0 + 16<i32>, fp + -36<i32>, a3, a4, a5_27, mstatus, dwLoc2C, 0<32>, dwArgC8, dwArg0108, out s1, out a0_111, out a1, out a3, out a4_72, out s2, out s3, out s4)
	branch a0_111 == 0xFFFFFFFF<32> l230460C2
l230460C2:
	word32 a0_91
	word32 a5_414
	word32 a2_413
	s1 = netconn_err(s0_102, a3, a4_72, mstatus, out a0_91, out a2_413, out a3, out a4, out a5_414)
	a5_101 = a0_91
	branch a0_91 != 0<32> l23046042
l230460CC:
	branch (CONVERT(Mem16[s0_102 + 36<i32>:byte], byte, word32) & 1<32>) != 0<32> l23046074
l230460D4:
	a5_101 = 0xFFFFFFF9<32>
l2304609A:
	word32 a5_104 = CONVERT(Mem16[s0_102:byte], byte, word32)
	a4 = 0x10<32>
	word32 a5_108 = a5_104 & 240<i32>
	branch (a5_104 & 240<i32>) != 0x10<32> l23046104
l23046104:
l230460AA:
	a1 = fp + -37<i32>
	branch lwip_netconn_is_err_msg(a0_111, fp + -37<i32>, out a4, out a5_108) == 0<32> l230460EC
l230460EC:
l230460EE:
	word32 a2_118 = CONVERT(Mem16[a5_108 + 8<i32>:uint16], uint16, word32)
	word32 s0_119 = Mem16[a5_108 + 44<i32>:word32]
	branch a5_108 == 0<32> l230460FC
l230460F6:
	word32 a6_152
	word32 a7_153
	word32 s8_155
	word32 t0_156
	word32 t1_157
	word32 t4_158
	word32 t5_159
	word32 t6_160
	call a5_108 (retsize: 0;)
		uses: a0:s0_119,a1:1<32>,a2:a2_118,a3:a3_135,a4:a4_133,a6:a6_152,a7:a7_153,mstatus:mstatus,ra:ra,s0:s0_119,s1:s1_126,s2:s2_128,s3:s3_130,s4:s4_154,s8:s8_155,Stack +0004:dwLoc2C,Stack +000B:bLoc25,Stack +0044:dwArg14,Stack +0064:dwArg34,Stack +00D8:dwArgA8,Stack +00E4:dwArgB4,Stack +00F8:dwArgC8,Stack +0118:dwArgE8,Stack +0138:dwArg0108,t0:t0_156,t1:t1_157,t4:t4_158,t5:t5_159,t6:t6_160
		defs: a1:a1_143,a3:a3_151,a4:a4_149,a5:a5_144,a6:a6_152,a7:a7_153,mstatus:mstatus_150,ra:ra_138,s1:s1_140,s2:s2_141,s3:s3_142,s4:s4_154,s8:s8_155,t0:t0_156,t1:t1_157,t4:t4_158,t5:t5_159,t6:t6_160
l230460FC:
	Mem166[s3:word32] = a5_108
l230460B4:
	a5_101 = CONVERT(bLoc25, int8, int32)
	a4 = 0xFFFFFFF1<32>
	branch a5_101 != 0xFFFFFFF1<32> l23046042
l230460BE:
	a5_101 = 0<32>
l2304606A:
	word32 a0_171
	word32 a5_410
	word32 a2_409
	s1 = netconn_err(a0, a3, a4, mstatus, out a0_171, out a2_409, out a3, out a4, out a5_410)
	a5_101 = a0_171
	branch a0_171 != 0<32> l23046042
l23046074:
	a5_101 = 0xFFFFFFF5<32>
l23046040:
	a5_101 = 0xFFFFFFF0<32>
l23046042:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a0Out = a5_101
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	a5Out = a5_101
	s2Out = s2
	s3Out = s3
	s4Out = s4
	mstatusOut = mstatus
	return ra
netconn_recv_data_exit:


word32 netconn_recv_udp_raw_netbuf_flags(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg14, word32 dwArg34, word32 dwArgA8, word32 dwArgB4, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recvfrom_udp_raw.isra.6
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_recv_udp_raw_netbuf_flags_entry:
l23046108:
	branch a0 == 0<32> l2304611C
l2304610A:
	word32 a5_5 = CONVERT(Mem0[a0:byte], byte, word32)
	a4 = 0x10<32>
	a5 = a5_5 & 240<i32>
	branch (a5_5 & 240<i32>) == 0x10<32> l2304611C
l2304611C:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	mstatusOut = mstatus
	return ra
l23046118:
l23046118_thunk_netconn_recv_data:
	word32 a1_14
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 s1_22
	word32 s2_23
	word32 a0_34
	word32 mstatus_35
	word32 s4_120
	word32 s3_119
	word32 a2_118
	word32 s0_117
	word32 ra_36 = netconn_recv_data(ra, a0, a1, a2, a3, 0x10<32>, mstatus, dwArg14, dwArg34, dwArgA8, dwArgB4, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out s0_117, out s1_22, out a0_34, out a1_14, out a2_118, out a3_16, out a4_17, out a5_18, out s2_23, out s3_119, out s4_120, out mstatus_35)
	s1Out = s1_22
	a0Out = a0_34
	a1Out = a1_14
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_18
	s2Out = s2_23
	mstatusOut = mstatus_35
	return ra_36
netconn_recv_udp_raw_netbuf_flags_exit:


word32 netconn_recv_data_tcp(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_recv_tcp_pbuf_flags
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 a4 a5 mstatus ra s0 s1 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_recv_data_tcp_entry:
l23046120:
	word32 sp_129 = fp + -80<i32>
	word32 s0_157 = a0
	word32 s3_119 = a1
	word32 s2_118 = a2
	word32 s1_115 = 0xFFFFFFF5<32>
	branch sys_mbox_valid(a0 + 0x10<32>) == 0<32> l230461CC
l2304613C:
	word32 a5_23 = CONVERT(Mem16[a0 + 36<i32>:byte], byte, word32)
	a4 = CONVERT(SLICE(a5_23, byte, 0), byte, int32)
	branch a4 >= 0<32> l23046170
l23046170:
	word32 a0_51
	word32 s1_382
	word32 a1_383
	word32 s2_40
	ra = netconn_recv_data(ra, a0, a1, a2, a3, a4, mstatus, dwLoc3C, dwLoc1C, dwArg58, dwArg64, dwArg78, dwArg98, dwArgB8, dwArgD8, out s0_157, out s1_382, out a0_51, out a1_383, out a2, out a3, out a4, out a5, out s2_40, out s3_119, out s4, out mstatus)
	s1_115 = a0_51
	branch a0_51 != 0<32> l230461CC
l2304617E:
	a5 = s2_40 & 8<i32>
	s3_119 = Mem16[s3_119:int32]
	branch (s2_40 & 8<i32>) != 0<32> l230461B2
l23046188:
	a4 = 1<32>
	branch s3_119 == 0<32> l23046192
l2304618E:
	a4 = CONVERT(Mem16[s3_119 + 8<i32>:uint16], uint16, word32)
l23046192:
	word32 a5_61 = CONVERT(Mem16[s0_157:byte], byte, word32)
	a3 = 0x10<32>
	a5 = a5_61 & 240<i32>
	branch (a5_61 & 240<i32>) != 0x10<32> l230461B2
l230461A0:
	word32 a1_385
	word32 a0_384
	s1_115 = netconn_apimsg(a2, a4, a5_61 & 240<i32>, mstatus, dwLoc4C, dwArg68, dwArgA8, dwArgE8, out a0_384, out a1_385, out a2, out a3, out a4, out a5, out s2_40, out s3_119, out s4, out s5, out s6)
l230461B2:
	branch s3_119 != 0<32> l230461CC
l230461B6:
	s2_118 = s2_40 & 16<i32>
	branch s2_118 == 0<32> l23046152
l230461BE:
	word32 a5_102 = CONVERT(Mem101[s0_157 + 36<i32>:byte], byte, word32)
	Mem105[s0_157 + 36<i32>:byte] = SLICE(a5_102 | -128<i32>, byte, 0)
	a5 = a5_102 | -128<i32>
l2304614A:
	Mem107[a0 + 36<i32>:byte] = SLICE(a5_23 & 127<i32>, byte, 0)
	a5 = a5_23 & 127<i32>
l23046152:
	word32 s0_111 = Mem110[a5 + 44<i32>:word32]
	branch a5 == 0<32> l2304615E
l23046156:
	word32 a6_144
	word32 a7_145
	word32 s8_147
	word32 t1_148
	word32 t4_149
	word32 t5_150
	word32 t6_151
	word32 tp_152
	call a5 (retsize: 0;)
		uses: a0:s0_111,a1:1<32>,a2:0<32>,a3:a3_125,a4:a4_139,a5:a5_138,a6:a6_144,a7:a7_145,mstatus:mstatus_123,ra:ra_120,s0:s0_111,s1:s1_115,s2:s2_118,s3:s3_119,s4:s4_146,s5:s5_153,s6:s6_154,s8:s8_147,Stack +0004:dwLoc4C,Stack +0014:dwLoc3C,Stack +0034:dwLoc1C,Stack +00A8:dwArg58,Stack +00B4:dwArg64,Stack +00B8:dwArg68,Stack +00C8:dwArg78,Stack +00E8:dwArg98,Stack +00F8:dwArgA8,Stack +0108:dwArgB8,Stack +0128:dwArgD8,Stack +0138:dwArgE8,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151,tp:tp_152
		defs: a2:a2_137,a3:a3_140,a4:a4_139,a5:a5_138,a6:a6_144,a7:a7_145,mstatus:mstatus_143,s3:s3_134,s4:s4_146,s5:s5_153,s6:s6_154,s8:s8_147,sp:sp_129,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151,tp:tp_152
l2304615E:
	s0_157 = Mem110[a5 + 4<i32>:word32]
	branch a5 != 0<32> l230461DC
l230461DC:
	netconn_close_shutdown(s0_157, a2, a4, mstatus, Mem110[sp_129 + 120<i32>:word32], Mem110[sp_129 + 184<i32>:word32], Mem110[sp_129 + 248<i32>:word32], out a2, out a5, out s3_119, out s4, out s5, out s6)
l23046162:
	word32 a0_193
	word32 a3_381
	netconn_err(s0_157, a3, a4, mstatus, out a0_193, out a2, out a3_381, out a4, out a5)
	branch a0_193 != 0<32> l230461CC
l2304616C:
l230461CC:
	s0Out = s0_157
	s1Out = dwLoc4C
	a0Out = dwLoc4C
	a2Out = a2
	a4Out = a4
	a5Out = a5
	s3Out = s3_119
	s4Out = s4
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return dwLoc08
netconn_recv_data_tcp_exit:


word32 netconn_recv_tcp_pbuf_flags(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recv_tcp
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 a4 a5 mstatus ra s0 s1 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_recv_tcp_pbuf_flags_entry:
l230461E8:
	branch a0 == 0<32> l230461FC
l230461EA:
	word32 a5_5 = CONVERT(Mem0[a0:byte], byte, word32)
	a4 = 0x10<32>
	a5 = a5_5 & 240<i32>
	branch (a5_5 & 240<i32>) != 0x10<32> l230461FC
l230461FC:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a2Out = a2
	a4Out = a4
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
l230461F8:
l230461F8_thunk_netconn_recv_data_tcp:
	word32 a0_14
	word32 s0_17
	word32 s1_18
	word32 s3_20
	word32 a2_24
	word32 a4_25
	word32 a5_26
	word32 mstatus_29
	word32 s4_30
	word32 s5_37
	word32 s6_38
	word32 ra_16 = netconn_recv_data_tcp(ra, a0, a1, a2, a3, mstatus, dwArg58, dwArg64, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, out s0_17, out s1_18, out a0_14, out a2_24, out a4_25, out a5_26, out s3_20, out s4_30, out s5_37, out s6_38, out mstatus_29)
	s0Out = s0_17
	s1Out = s1_18
	a0Out = a0_14
	a2Out = a2_24
	a4Out = a4_25
	a5Out = a5_26
	s3Out = s3_20
	s4Out = s4_30
	s5Out = s5_37
	s6Out = s6_38
	mstatusOut = mstatus_29
	return ra_16
netconn_recv_tcp_pbuf_flags_exit:


word32 netconn_shutdown(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_shutdown
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_shutdown_entry:
l23046200:
	word32 a2_4 = CONVERT(a2 != 0<32>, bool, word32)
l2304620C_thunk_netconn_close_shutdown:
	word32 a2_15
	word32 a5_39
	word32 s3_40
	word32 s4_41
	word32 s5_42
	word32 s6_43
	word32 a0_13 = netconn_close_shutdown(a0, a2_4 << 1<i32>, a4, mstatus, dwArg78, dwArgB8, dwArgF8, out a2_15, out a5_39, out s3_40, out s4_41, out s5_42, out s6_43)
	a2Out = a2_15
	return a0_13
netconn_shutdown_exit:


word32 netconn_join_leave_group(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_close
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a2 a4 a5 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_join_leave_group_entry:
l23046210:
	branch a0 == 0<32> l23046248
l23046248:
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return a2
l23046212:
	branch a1 != 0<32> l23046220
l23046218:
l23046220:
	branch a2 != 0<32> l2304622A
l23046222:
	a2 = 0x2308DE8C<32>
l2304622A:
	word32 a2_43
	word32 a4_45
	word32 a5_46
	word32 s2_50
	word32 s3_51
	word32 s4_52
	word32 a0_129
	word32 a1_130
	word32 a3_131
	word32 s5_132
	word32 s6_133
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_129, out a1_130, out a2_43, out a3_131, out a4_45, out a5_46, out s2_50, out s3_51, out s4_52, out s5_132, out s6_133)
	a4Out = a4_45
	a5Out = a5_46
	s2Out = s2_50
	s3Out = s3_51
	s4Out = s4_52
	return a2_43
netconn_join_leave_group_exit:


word32 netconn_gethostbyname(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg98, word32 dwArgD8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_gethostbyname
//      lwip_getaddrinfo
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a3 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_gethostbyname_entry:
l2304624C:
	word32 s0_36 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l23046294
l23046256:
	branch a1 == 0<32> l23046294
l23046258:
	word32 a0_21
	word32 a2_23
	word32 a5_26
	s1 = sys_sem_new(ra, a3, fp + -37<i32>, a0, mstatus, dwLoc20, s0, ra, dwArgD8, dwArg0118, dwArg0158, out a0_21, out a1, out a2_23, out a3, out a4, out a5_26, out s2, out s3, out s4)
	byte bLoc25_96 = SLICE(a0_21, byte, 0)
	s0_36 = a0_21
	branch a0_21 != 0<32> l23046294
l23046276:
	word32 a0_41
	word32 a3_44
	word32 s1_152
	word32 a1_153
	word32 a4_154
	word32 a5_155
	word32 s4_156
	word32 s5_157
	word32 s6_158
	tcpip_send_msg_wait_sem(fp + -32<i32>, a2_23, a4, a5_26, mstatus, s0, dwArg98, dwArgD8, dwArg0118, out s1_152, out a0_41, out a1_153, out a3_44, out a4_154, out a5_155, out s2, out s3, out s4_156, out s5_157, out s6_158)
	word32 a2_159
	word32 a5_160
	s0_36 = sys_sem_free(a0_41, a3_44, mstatus, dwArg0128, dwArg0168, out s1, out a1, out a2_159, out a3, out a4, out a5_160, out s4)
	branch s0_36 != 0<32> l23046294
l23046290:
	s0_36 = CONVERT(bLoc25_96, byte, int32)
l23046294:
	s1Out = s1
	a0Out = s0_36
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return dwArgE4
netconn_gethostbyname_exit:


void lwip_netconn_do_dns_found(word32 a0, word32 a1, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_dns_found_entry:
l2304629E:
	branch a1 != 0<32> l230462AE
l230462AE:
	Mem7[a5:byte] = 0<8>
	Mem11[a4:word32] = a5
l230462A2:
	Mem13[a5:byte] = 0xFA<8>
	a4 = 0xFFFFFFFA<32>
l230462A8:
l230462AA_thunk_sys_sem_signal:
	word32 s3_62
	word32 s4_63
	word32 s2_61
	word32 a3_60
	word32 a1_59
	word32 s1_58
	word32 s5_64
	word32 s6_65
	word32 s8_66
	sys_sem_signal(a0, a4, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_58, out a1_59, out a3_60, out s2_61, out s3_62, out s4_63, out s5_64, out s6_65, out s8_66)
	return
lwip_netconn_do_dns_found_exit:


void recv_udp(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 s5, word32 mstatus, word32 dwArg38, word32 dwArg78, word32 dwArgC8, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
recv_udp_entry:
l230462BA:
	branch a0 != 0<32> l230462E4
l230462E4:
	branch sys_mbox_valid(a0 + 16<i32>) == 0<32> l230462CE
l230462F6:
	word32 a0_31
	word32 a2_260
	word32 a5_261
	memp_malloc(a0, 6<32>, a3, a4, mstatus, out a0_31, out a2_260, out a3, out a4, out a5_261)
	branch a0_31 == 0<32> l230462CE
l23046300:
	Mem39[a0_31:word32] = a2
	Mem40[a0_31 + 4<i32>:word32] = a2
	word32 a5_41 = 0<32>
	branch a3 == 0<32> l23046312
l2304630E:
	a5_41 = Mem40[a3:int32]
l23046312:
	Mem45[a5_41 + 8<i32>:word32] = a0_31
	Mem47[a0_31 + 12<i32>:word16] = SLICE(a4, word16, 0)
	word32 a0_57
	word32 a3_60
	word32 a4_61
	word32 s1_66
	word32 s2_67
	word32 s3_68
	word32 s5_70
	word32 a1_262
	word32 a5_263
	word32 a7_264
	word32 s4_265
	word32 s6_266
	word32 s0_65 = sys_mbox_trypost(a0 + 16<i32>, a4, a5_41, mstatus, dwLoc2C, CONVERT(Mem47[a2 + 8<i32>:uint16], uint16, word32), dwArgC8, dwArg0108, dwArg0148, out s1_66, out a0_57, out a1_262, out a3_60, out a4_61, out a5_263, out a7_264, out s2_67, out s3_68, out s4_265, out s5_70, out s6_266)
	branch a0_57 == 0<32> l23046340
l23046340:
	word32 t1_81 = Mem54[s1_66 + 44<i32>:int32]
	branch t1_81 == 0<32> l2304635E
l2304635E:
	0<32> = dwArg0128
	return
l23046348:
	0<32> = dwArg0128
	call t1_81 (retsize: 0;)
		uses: a0:s1_66,a1:0<32>,a2:dwArg0100,a3:a3_60,a4:a4_61,mstatus:mstatus,ra:ra,s0:dwArgE4,s1:s1_66,s2:s2_67,s3:s3_68,s4:dwArg78,s5:s5_70,s8:s5,Stack +0038:dwArg38,Stack +0078:dwArg78,Stack +00C8:dwArgC8,Stack +00E4:dwArgE4,Stack +0100:dwArg0100,Stack +0104:dwArg0104,Stack +0108:dwArg0108,Stack +0128:dwArg0128,Stack +0148:dwArg0148,Stack +FFFFFFD4:dwLoc2C,t3:dwArg38,tp:dwArg0104
	return
l2304632A:
	0<32> = dwArg0128
l2304633C_thunk_netbuf_delete:
	word32 a3_267
	word32 a4_268
	word32 a5_269
	netbuf_delete(ra, s0_65, a3_60, a4_61, dwArg78, mstatus, dwArg0108, out a3_267, out a4_268, out a5_269)
	return
l230462CE:
	0<32> = dwArg0128
l230462E0_thunk_pbuf_free:
	word32 s0_244
	word32 s1_245
	word32 a0_246
	word32 a1_247
	word32 a2_248
	word32 a3_249
	word32 a4_250
	word32 a5_251
	word32 a7_252
	word32 s2_253
	word32 s3_254
	word32 s4_255
	word32 s5_256
	word32 s6_257
	word32 s8_258
	word32 mstatus_259
	pbuf_free(ra, a2, a3, a4, dwArg78, mstatus, dwArg0128, out s0_244, out s1_245, out a0_246, out a1_247, out a2_248, out a3_249, out a4_250, out a5_251, out a7_252, out s2_253, out s3_254, out s4_255, out s5_256, out s6_257, out s8_258, out mstatus_259)
	return
recv_udp_exit:


word32 setup_tcp(word32 s0, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_connected
//      lwip_netconn_do_newconn
//      accept_function
//      lwip_netconn_do_connect
// MayUse:  s0:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2
// Preserved: s0 sp
setup_tcp_entry:
l23046370:
	tcp_arg(s0, Mem7[s0 + 4<i32>:word32])
	tcp_recv(s0, 0x230469FE<32>)
	tcp_sent(s0, 0x23046994<32>)
	tcp_poll(s0, 0x23046898<32>, 2<32>)
l230463BC_thunk_tcp_err:
	tcp_err(s0, 0x2304642E<32>)
	a1Out = 0x2304642E<32>
	return s0
setup_tcp_exit:


void lwip_netconn_do_connected(word32 ra, word32 s1, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
lwip_netconn_do_connected_entry:
l230463C0:
	word32 sp_3 = fp + 0xFFFFFFF0<32>
	branch a0 == 0<32> l23046420
l230463CE:
	word32 a0_14 = Mem11[s1 + 40<i32>:word32]
	branch s1 == 0<32> l230463DC
l230463D2:
	Mem16[s1 + 4<i32>:byte] = SLICE(a2, byte, 0)
	a0_14 = Mem16[a5 + 40<i32>:word32]
	s1 = s1 + 0xC<32>
l230463DC:
	word32 a4_24 = 0x10<32>
	branch (CONVERT(Mem22[a0_14:byte], byte, word32) & 240<i32>) != 0x10<32> l230463F2
l230463EC:
	branch a2 != 0<32> l230463F2
l230463EE:
	word32 a1_225
	setup_tcp(a0_14, out a1_225)
l230463F2:
	word32 a5_33 = CONVERT(Mem22[a0_14 + 36<i32>:byte], byte, word32)
	Mem34[a0_14 + 40<i32>:word32] = 0<32>
	Mem35[a0_14 + 1<i32>:byte] = 0<8>
	Mem38[a0_14 + 36<i32>:byte] = SLICE(a5_33 & 0xFFFFFFFB<32>, byte, 0)
	word32 s2_36 = a5_33 & 4<i32>
	word32 a5_37 = a5_33 & 0xFFFFFFFB<32>
	word32 s0_39 = Mem38[(a5_33 & 0xFFFFFFFB<32>) + 44<i32>:word32]
	branch (a5_33 & 0xFFFFFFFB<32>) == 0<32> l23046414
l2304640C:
	word32 s8_116
	word32 s6_115
	word32 s5_114
	word32 s3_112
	word32 s4_113
	word32 a7_111
	word32 a3_109
	word32 a6_110
	word32 t0_117
	word32 t1_118
	word32 t3_119
	word32 t4_120
	word32 t5_121
	word32 t6_122
	call a5_33 & 0xFFFFFFFB<32> (retsize: 0;)
		uses: a0:s0_39,a1:2<32>,a2:0<32>,a3:a3_109,a4:a4_58,a5:a5_33 & 0xFFFFFFFB<32>,a6:a6_110,a7:a7_111,mstatus:mstatus,ra:ra,s0:s0_39,s1:s1_46,s2:a5_33 & 4<i32>,s3:s3_112,s4:s4_113,s5:s5_114,s6:s6_115,s8:s8_116,t0:t0_117,t1:t1_118,t3:t3_119,t4:t4_120,t5:t5_121,t6:t6_122
		defs: a3:a3_109,a4:a4_58,a5:a5_56,a6:a6_110,a7:a7_111,s1:s1_52,s2:s2_53,s3:s3_112,s4:s4_113,s5:s5_114,s6:s6_115,s8:s8_116,sp:sp_49,t0:t0_117,t1:t1_118,t3:t3_119,t4:t4_120,t5:t5_121,t6:t6_122
l23046414:
	branch s2_36 != 0<32> l23046420
l2304641A:
	word32 a3_228
	word32 s1_226
	word32 a1_227
	word32 s4_231
	word32 s5_232
	word32 s3_230
	word32 s2_229
	word32 s8_234
	word32 s6_233
	sys_sem_signal(s1, a4_24, a5_37, mstatus, Mem38[sp_3 + 8<i32>:word32], Mem38[sp_3 + 36<i32>:word32], Mem38[sp_3 + 164<i32>:word32], Mem38[sp_3 + 280<i32>:word32], Mem38[sp_3 + 344<i32>:word32], Mem38[sp_3 + 408<i32>:word32], out s1_226, out a1_227, out a3_228, out s2_229, out s3_230, out s4_231, out s5_232, out s6_233, out s8_234)
l23046420:
	0<32> = dwArg38
	return
lwip_netconn_do_connected_exit:


void err_tcp(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra sp
err_tcp_entry:
l2304642E:
	word32 a2_557
	word32 a4_558
	word32 a5_559
	sys_arch_protect(a4, mstatus, out a2_557, out a4_558, out a5_559)
	word32 a5_26 = CONVERT(Mem19[a0 + 36<i32>:byte], byte, word32)
	word32 s2_144 = CONVERT(Mem19[a0 + 1<i32>:byte], byte, word32)
	Mem28[a0 + 4<i32>:word32] = 0<32>
	Mem30[a0 + 36<i32>:byte] = SLICE(a5_26 | 1<i32>, byte, 0)
	Mem31[a0 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem32[a0 + 1<i32>:byte] = 0<8>
	word32 s1_108 = a1
	word32 a5_36
	word32 a4_35
	word32 a3_34 = sys_arch_unprotect(a3, mstatus, out a4_35, out a5_36)
	branch a5_36 == 0<32> l23046470
l23046468:
	call a5_36 (retsize: 0;)
		uses: a3:a3_34,mstatus:mstatus
		defs: a3:a3_41,a4:a4_42,a5:a5_43
l23046470:
	word32 s4_67
	word32 s3_66
	word32 s0_46 = Mem32[a5_36 + 44<i32>:word32]
	s3_66 = s3
	s4_67 = s4
	branch a5_36 == 0<32> l2304647C
l23046474:
	word32 tp_285
	word32 t5_283
	word32 t6_284
	word32 t0_280
	word32 t4_282
	word32 t1_281
	word32 s6_279
	word32 a7_277
	word32 s5_278
	call a5_36 (retsize: 0;)
		uses: a0:s0_46,a1:0<32>,a2:0<32>,a3:a3_57,a4:a4_56,a7:a7_277,mstatus:mstatus,ra:ra,s0:s0_46,s1:a1,s2:s2_27,s3:s3,s4:s4,s5:s5_278,s6:s6_279,t0:t0_280,t1:t1_281,t4:t4_282,t5:t5_283,t6:t6_284,tp:tp_285
		defs: a3:a3_75,a4:a4_70,a5:a5_68,a7:a7_277,mstatus:mstatus_74,ra:ra_60,s1:s1_62,s2:s2_65,s3:s3_66,s4:s4_67,s5:s5_278,s6:s6_279,t0:t0_280,t1:t1_281,t4:t4_282,t5:t5_283,t6:t6_284,tp:tp_285
l2304647C:
	word32 s0_120 = Mem32[a5_36 + 44<i32>:word32]
	branch a5_36 == 0<32> l23046488
l23046480:
	word32 tp_294
	word32 t6_293
	word32 t5_292
	word32 t4_291
	word32 t1_290
	word32 t0_289
	word32 s6_288
	word32 s5_287
	word32 a7_286
	call a5_36 (retsize: 0;)
		uses: a0:s0_78,a1:2<32>,a2:0<32>,a3:a3_89,a4:a4_88,a7:a7_286,mstatus:mstatus_87,ra:ra_82,s0:s0_78,s1:s1_83,s2:s2_84,s3:s3_85,s4:s4_86,s5:s5_287,s6:s6_288,t0:t0_289,t1:t1_290,t4:t4_291,t5:t5_292,t6:t6_293,tp:tp_294
		defs: a7:a7_286,mstatus:mstatus_106,s0:s0_93,s1:s1_94,s2:s2_97,s5:s5_287,s6:s6_288,t0:t0_289,t1:t1_290,t4:t4_291,t5:t5_292,t6:t6_293,tp:tp_294
l23046488:
	word32 a5_109 = s1_108 + 15<i32>
	word32 a5_110 = a5_109 & 255<i32>
	word32 a4_111 = 2<32>
	branch (a5_109 & 255<i32>) >u 2<32> l230464A8
l23046498:
	a4_111 = 0x230864BC<32>
	a5_110 = ((a5_109 & 255<i32>) << 2<i32>) + 0x230864BC<32>
l230464A8:
	word32 s4_121 = s0_120 + 16<i32>
	branch sys_mbox_valid(s4_121) == 0<32> l230464BC
l230464B4:
	word32 s4_565
	word32 s5_566
	word32 s6_567
	word32 a0_560
	word32 a1_561
	word32 a3_562
	word32 a7_563
	word32 s3_564
	s0_120 = sys_mbox_trypost(s4_121, a4_111, a5_110, mstatus, s4, s3, dwArgD8, dwArg0118, dwArg0158, out s1_108, out a0_560, out a1_561, out a3_562, out a4_111, out a5_110, out a7_563, out s2_144, out s3_564, out s4_565, out s5_566, out s6_567)
l230464BC:
	word32 s4_158 = s0_120 + 20<i32>
	branch sys_mbox_valid(s4_158) == 0<32> l230464D0
l230464C8:
	word32 a7_573
	word32 s3_574
	word32 s4_575
	word32 s5_576
	word32 s6_577
	word32 a0_568
	word32 a1_569
	word32 a3_570
	word32 a4_571
	word32 a5_572
	s0_120 = sys_mbox_trypost(s4_158, a4_111, a5_110, mstatus, s4, s3, dwArgD8, dwArg0118, dwArg0158, out s1_108, out a0_568, out a1_569, out a3_570, out a4_571, out a5_572, out a7_573, out s2_144, out s3_574, out s4_575, out s5_576, out s6_577)
l230464D0:
	branch s2_144 == 1<32> l230464E2
l230464D6:
	branch (s2_144 + -3<i32> & 255<i32>) >u 1<32> l23046524
l230464E2:
	word32 a5_203 = CONVERT(Mem32[s0_120 + 36<i32>:byte], byte, word32)
	Mem205[s0_120 + 36<i32>:byte] = SLICE(a5_203 & -5<i32>, byte, 0)
	branch (a5_203 & 4<32>) != 0<32> l23046524
l23046524:
	return
l230464F2:
	branch s2_144 != 4<32> l230464FC
l230464FA:
	s1_108 = 0<32>
l230464FC:
	Mem228[(a5_203 & 4<32>) + 4<i32>:byte] = SLICE(s1_108, byte, 0)
	word32 s0_229 = Mem228[(a5_203 & 4<32>) + 40<i32>:word32]
	word32 a5_230 = Mem228[s1_108:word32]
	word32 s1_231 = s1_108 + 0xC<32>
	sys_sem_valid(s1_231)
	Mem234[s0_229 + 40<i32>:word32] = 0<32>
l23046520_thunk_sys_sem_signal:
	word32 s5_584
	word32 s6_585
	word32 s8_586
	word32 s2_581
	word32 s3_582
	word32 s4_583
	word32 s1_578
	word32 a1_579
	word32 a3_580
	sys_sem_signal(s1_231, 4<32>, a5_230, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_578, out a1_579, out a3_580, out s2_581, out s3_582, out s4_583, out s5_584, out s6_585, out s8_586)
	return
err_tcp_exit:


word32 lwip_netconn_do_writemore(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a5, word32 s5, word32 s6, word32 s7, word32 s8, word32 mstatus, word32 dwArg28, word32 dwArg48, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgC8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      poll_tcp
//      sent_tcp
//      lwip_netconn_do_write
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +0128:[0..31]
// LiveOut: a5 mstatus ra s0 s1 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_writemore_entry:
l23046534:
	word32 a4_170
	word32 a5_169
	word32 s6_394
	word32 s3_401
	word32 s5_393
	word32 s1_390
	word32 s3_160 = CONVERT(Mem23[a5 + 28<i32>:byte], byte, word32)
	word32 sp_277 = fp + -48<i32>
	word32 s4_146 = CONVERT(Mem23[Mem23[a5 + 40<i32>:word32] + 36<i32>:byte], byte, word32) & 2<i32> | s3_160 & 4<i32>
	word32 a0_138 = Mem23[(s3_160 & 4<i32>) + 28<i32>:word32]
	branch (s3_160 & 4<i32>) == 0<32> l23046596
l23046566:
	a0_138 = sys_now(out a5_169) - a5_169
	branch a0_138 < a5_169 l23046596
l23046596:
	word32 s5_147 = 0x10000000<32>
	s7 = 0xFFFFFFF<32>
	word32 s8_148 = 1<32>
l2304659E:
	word32 s2_100
	word32 a4_49 = Mem44[a3 + 16<i32>:word32]
	word32 a1_53 = a1 + a3
	word32 a5_54 = Mem44[Mem44[a1:word32] + 4<i32>:word32] - a3
	branch a5_54 <u s5_147 l23046612
l23046612:
	s2_100 = CONVERT(SLICE(a5_54, word16, 0), word16, word32)
l230465B0:
	s3_160 = s3_160 | 2<i32>
	s2_100 = s7
l230465B6:
	word32 a3_66 = CONVERT(Mem44[a0_138 + 100<i32>:uint16], uint16, word32)
	branch a3_66 >=u s2_100 l23046624
l23046624:
	branch s2_100 != s7 l2304662C
l23046628:
	branch a5_54 >=u s5_147 l2304663E
l230465C0:
	branch s4_146 == 0<32> l2304661C
l2304661C:
	s3_160 = s3_160 | 2<i32>
l230465C4:
	branch a3_66 != 0<32> l23046620
l23046620:
	s2_100 = a3_66
l2304662C:
	branch CONVERT(SLICE(a5_54, word16, 0), word16, word32) != s2_100 l23046644
l23046636:
	branch s8_148 >=u CONVERT(Mem44[a4_49 + 12<i32>:uint16], uint16, word32) l23046644
l2304663E:
	s3_160 = s3_160 | 2<i32>
l23046644:
	word32 a5_154
	ra = tcp_write(ra, s1, a0_138, a1_53, s2_100, s3_160, mstatus, s8, dwLoc17, dwArg28, dwArg48, s7, s5, dwArg68, dwArg88, dwArg98, dwArgC8, out a0_138, out a1, out a2, out a3, out a5_154, out s2_100, out s3_160, out s4_146, out s5_147, out s6, out s7, out s8_148, out mstatus)
	s1 = a0_138
	branch a0_138 != 0<32> l23046692
l23046692:
	a5_169 = a0_138 + 1<i32> & 255<i32>
	a4_170 = 1<32>
	branch a5_169 >u 1<32> l2304657E
l230466A0:
	s1 = 0xFFFFFFFF<32>
l23046650:
	word32 a5_174 = a5_154 + s2_100
	Mem175[a5_174 + 24<i32>:word32] = Mem44[a5_154 + 24<i32>:word32]
	word32 a4_177 = Mem175[a5_174 + 16<i32>:word32]
	s2_100 = s2_100 + a5_174
	Mem179[a4_177 + 16<i32>:word32] = s2_100
	word32 a5_182 = Mem179[a3 + 16<i32>:word32]
	a4_170 = Mem179[a4_177 + 4<i32>:word32]
	branch a3 != a4_170 l2304668C
l2304666E:
	Mem186[a5_182 + 12<i32>:word16] = SLICE(CONVERT(Mem179[a5_182 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
	a4_170 = CONVERT(Mem186[a5_182 + 12<i32>:uint16], uint16, word32)
	branch a4_170 == 0<32> l2304668C
l23046680:
	word32 a5_189 = Mem186[a4_170 + 8<i32>:word32]
	Mem191[a4_170 + 0x10<32>:word32] = a5_189
	Mem193[a5_189 + 16<i32>:word32] = 0<32>
	a4_170 = a4_170 + 8<32>
l2304668C:
	branch s6 != 0<32> l2304659E
l23046690:
l230466A2:
	branch s4_146 != 0<32> l230465CE
l230465C6:
	a4_170 = Mem44[a5_54 + 24<i32>:word32]
	s1 = 0xFFFFFFF9<32>
	branch a5_54 == 0<32> l230465CE
l230465CC:
	s1 = 0<32>
l230465CE:
	word32 a5_211 = Mem203[Mem203[a4_170 + 24<i32>:word32] + 20<i32>:word32]
	branch a4_170 >=u a5_211 l230466A6
l230466A6:
	word32 a5_216 = 0xFFFAC0<32>
	branch CONVERT(Mem213[a4_170 + 100<i32>:uint16], uint16, word32) <=u 0xFFFAC0<32> l230466C0
l230466B6:
	a4_170 = CONVERT(Mem213[a4_170 + 102<i32>:uint16], uint16, word32)
	a5_216 = 7<32>
	branch a4_170 <=u 7<32> l230465F0
l230466C0:
	word32 s0_222 = Mem213[a5_216 + 44<i32>:word32]
	branch a5_216 == 0<32> l230465F0
l230466C4:
	word32 a3_295
	word32 s9_299
	word32 s10_302
	word32 s11_303
	call a5_216 (retsize: 0;)
		uses: a0:s0_222,a1:3<32>,a2:0<32>,a3:a3_295,a4:a4_271,a5:a5_220,mstatus:mstatus_297,ra:ra_227,s0:s0_222,s1:s1_232,s10:s10_302,s11:s11_303,s2:s2_237,s3:s3_242,s4:s4_247,s5:s5_250,s6:s6_255,s7:s7_262,s8:s8_267,s9:s9_299,Stack +0019:dwLoc17,Stack +0058:dwArg28,Stack +0078:dwArg48,Stack +0098:dwArg68,Stack +00B8:dwArg88,Stack +00C8:dwArg98,Stack +00F8:dwArgC8
		defs: a0:a0_289,a2:a2_291,a3:a3_295,a4:a4_290,mstatus:mstatus_297,ra:ra_279,s1:s1_280,s10:s10_302,s11:s11_303,s4:s4_283,s7:s7_286,s9:s9_299,sp:sp_277
l230465D8:
	word32 s0_307 = Mem203[a5_211 + 44<i32>:word32]
	branch a5_211 == 0<32> l230465E4
l230465DC:
	word32 a3_329
	word32 s9_333
	word32 s10_336
	word32 s11_337
	call a5_211 (retsize: 0;)
		uses: a0:s0_307,a1:3<32>,a2:0<32>,a3:a3_329,a4:a4_207,a5:a5_211,mstatus:mstatus_331,ra:ra_228,s0:s0_307,s1:s1_233,s10:s10_336,s11:s11_337,s2:s2_238,s3:s3_243,s4:s4_248,s5:s5_251,s6:s6_256,s7:s7_263,s8:s8_268,s9:s9_333,Stack +0019:dwLoc17,Stack +0058:dwArg28,Stack +0078:dwArg48,Stack +0098:dwArg68,Stack +00B8:dwArg88,Stack +00C8:dwArg98,Stack +00F8:dwArgC8
		defs: a0:a0_323,a2:a2_325,a3:a3_329,a4:a4_324,mstatus:mstatus_331,ra:ra_313,s0:s0_312,s1:s1_314,s10:s10_336,s11:s11_337,s4:s4_317,s7:s7_320,s9:s9_333,sp:sp_311
l230465E4:
	Mem345[s0_307 + 36<i32>:byte] = SLICE(CONVERT(Mem203[s0_307 + 36<i32>:byte], byte, word32) | 16<i32>, byte, 0)
l230465F0:
	branch s1 != 0<32> l230466CE
l230466CE:
	a5_169 = 0xFFFFFFFF<32>
	branch s1 != 0xFFFFFFFF<32> l2304657E
l230466D4:
	word32 s4_392
	word32 s0_962
	word32 a2_963
	word32 s2_966
	word32 s8_967
	word32 s10_969
	word32 s11_970
	word32 s9_968
	word32 a5_965
	word32 a3_964
	ra = tcp_output(ra, s1, a0_138, a2, s7, mstatus, Mem356[sp_277 + 88<i32>:word32], Mem356[sp_277 + 104<i32>:word32], Mem356[sp_277 + 136<i32>:word32], Mem356[sp_277 + 148<i32>:word32], Mem356[sp_277 + 152<i32>:word32], Mem356[sp_277 + 168<i32>:word32], Mem356[sp_277 + 184<i32>:word32], Mem356[sp_277 + 200<i32>:word32], Mem356[sp_277 + 204<i32>:word32], Mem356[sp_277 + 216<i32>:word32], Mem356[sp_277 + 232<i32>:word32], Mem356[sp_277 + 264<i32>:word32], Mem356[sp_277 + 268<i32>:word32], Mem356[sp_277 + 280<i32>:word32], out s0_962, out s1_390, out a0_138, out a2_963, out a3_964, out a4_170, out a5_965, out s2_966, out s3_401, out s4_392, out s5_393, out s6_394, out s7, out s8_967, out s9_968, out s10_969, out s11_970, out mstatus)
	a5_169 = 0xFFFFFFFC<32>
	branch a0_138 == 0xFFFFFFFC<32> l2304660E
l230466E0:
	branch s4_392 == 0<32> l230466EE
l230466E4:
	a5_169 = Mem356[0x14<32>:word32]
l230465F2:
	word32 s1_416 = 1<32>
	branch a4_170 == Mem356[Mem356[a4_170 + 24<i32>:word32] + 20<i32>:word32] l23046602
l230465FE:
	s1_416 = CONVERT(s4_146 != 0<32>, bool, word32)
l23046602:
	word32 s4_957
	word32 s8_958
	word32 s10_960
	word32 s11_961
	word32 s9_959
	word32 s2_956
	word32 s0_952
	word32 a3_954
	word32 a5_955
	word32 a2_953
	ra = tcp_output(ra, s1_416, a0_138, a2, s7, mstatus, Mem356[sp_277 + 88<i32>:word32], Mem356[sp_277 + 104<i32>:word32], Mem356[sp_277 + 136<i32>:word32], Mem356[sp_277 + 148<i32>:word32], Mem356[sp_277 + 152<i32>:word32], Mem356[sp_277 + 168<i32>:word32], Mem356[sp_277 + 184<i32>:word32], Mem356[sp_277 + 200<i32>:word32], Mem356[sp_277 + 204<i32>:word32], Mem356[sp_277 + 216<i32>:word32], Mem356[sp_277 + 232<i32>:word32], Mem356[sp_277 + 264<i32>:word32], Mem356[sp_277 + 268<i32>:word32], Mem356[sp_277 + 280<i32>:word32], out s0_952, out s1_390, out a0_138, out a2_953, out a3_954, out a4_170, out a5_955, out s2_956, out s3_401, out s4_957, out s5_393, out s6_394, out s7, out s8_958, out s9_959, out s10_960, out s11_961, out mstatus)
	a5_169 = 0xFFFFFFFC<32>
	branch a0_138 != 0xFFFFFFFC<32> l230466EA
l230466EA:
	branch s1_390 != 0<32> l2304657C
l2304660E:
	a5_169 = 0xFFFFFFFC<32>
	s1 = 0xFFFFFFFC<32>
l23046576:
	a4_170 = Mem23[a5_169 + 24<i32>:word32]
l23046578:
	s1 = 0xFFFFFFF9<32>
	branch a5_169 == 0<32> l2304657E
l2304657C:
	s1 = 0<32>
l2304657E:
	word32 s0_475 = Mem471[a5_169 + 40<i32>:word32]
	word32 a5_480 = Mem471[a0_138:word32]
	Mem482[a5_480 + 4<i32>:byte] = SLICE(s1, byte, 0)
	Mem483[s0_475 + 40<i32>:word32] = 0<32>
	Mem484[s0_475 + 1<i32>:byte] = 0<8>
	word32 a1_947
	word32 s2_949
	word32 s4_950
	word32 s8_951
	word32 a3_948
	sys_sem_signal(a0_138 + 0xC<32>, a4_170, a5_480, mstatus, Mem484[sp_277 + 8<i32>:word32], Mem484[sp_277 + 36<i32>:word32], Mem484[sp_277 + 164<i32>:word32], Mem484[sp_277 + 280<i32>:word32], Mem484[sp_277 + 344<i32>:word32], Mem484[sp_277 + 408<i32>:word32], out s1_390, out a1_947, out a3_948, out s2_949, out s3_401, out s4_950, out s5_393, out s6_394, out s8_951)
l230466EE:
	0<32> = dwArg0128
	s0Out = s4
	s1Out = s1_390
	a5Out = a5_169
	s3Out = s3_401
	s4Out = dwArg78
	s5Out = s5_393
	s6Out = s6_394
	s7Out = s7
	s8Out = s5
	mstatusOut = mstatus
	return ra
lwip_netconn_do_writemore_exit:


word32 lwip_netconn_do_close_internal(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 a5, word32 s3, word32 s4, word32 s6, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      poll_tcp
//      sent_tcp
//      lwip_netconn_do_delconn
//      lwip_netconn_do_close
// MayUse:  a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31]
// LiveOut: a5 mstatus ra s0 s1 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_close_internal_entry:
l23046708:
	word32 s4_33
	word32 sp_296 = fp + 0xFFFFFFE0<32>
	word32 a5_24 = CONVERT(Mem19[a5 + 8<i32>:byte], byte, word32)
	branch a5_24 == 3<32> l2304675C
l23046732:
	branch (a5_24 & 1<i32>) == 0<32> l2304674E
l23046736:
	word32 a4_28 = CONVERT(Mem19[s0 + 20<i32>:byte], byte, word32)
	a3 = 1<32>
	branch (a4_28 + -5<i32> & 255<i32>) <=u 1<32> l2304675C
l23046748:
	branch a4_28 == 8<32> l2304675C
l2304674E:
	s4_33 = 0<32>
	branch (a5_24 & 2<i32>) == 0<32> l23046766
l23046754:
	branch (CONVERT(Mem19[s0 + 26<i32>:uint16], uint16, word32) & 0x10<32>) == 0<32> l23046766
l2304675C:
	tcp_arg(s0, 0<32>)
	s4_33 = 1<32>
l23046766:
	word32 a5_125
	word32 mstatus_128
	word32 ra_129
	word32 s3_134
	word32 s5_136
	word32 s6_137
	word32 s7_138
	word32 a4_124
	word32 a3_123
	word32 s4_135
	word32 s1_130
	word32 a0_120
	branch CONVERT(Mem19[s0 + 20<i32>:byte], byte, word32) != 1<32> l23046788
l23046788:
	branch (a5_24 & 1<i32>) == 0<32> l2304679C
l2304678C:
	tcp_recv(s0, 0<32>)
	tcp_accept(s0, 0<32>)
l2304679C:
	branch (a5_24 & 2<i32>) == 0<32> l230467A8
l230467A0:
	tcp_sent(s0, 0<32>)
l230467A8:
	branch s4_33 == 0<32> l2304677C
l230467AC:
	tcp_poll(s0, 0<32>, 0<32>)
	tcp_err(s0, 0<32>)
	a2 = 0<32>
l23046770:
	tcp_accept(s0, 0<32>)
	branch s4_33 != 0<32> l230467BE
l230467BE:
	word32 s10_962
	word32 s8_960
	word32 s2_959
	word32 s9_961
	word32 s11_963
	ra_129 = tcp_close(ra, s0, a2, a3, s4_33, s7, mstatus, dwLoc10, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, out s1_130, out a0_120, out a3_123, out a4_124, out a5_125, out s2_959, out s3_134, out s4_135, out s5_136, out s6_137, out s7_138, out s8_960, out s9_961, out s10_962, out s11_963, out mstatus_128)
l2304677C:
	ra_129 = tcp_shutdown(ra, s0, a5_24 & 1<i32>, a5_24 & 2<i32>, s4_33, s7, mstatus, dwLoc10, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, out s1_130, out a0_120, out a3_123, out a4_124, out a5_125, out s3_134, out s4_135, out s5_136, out s6_137, out s7_138, out mstatus_128)
l230467C4:
	word32 s1_202
	word32 s2_192 = a0_120
	branch a0_120 == 0<32> l230467F6
l230467C8:
	a5_125 = 0xFFFFFFFF<32>
	branch a0_120 != 0xFFFFFFFF<32> l230467F6
l230467CE:
	s5_136 = Mem19[s1_130 + 28<i32>:int32]
	branch s5_136 > 0<32> l230467DC
l230467D6:
	s5_136 = 0x1000388<32>
l230467DC:
	word32 a5_200
	word32 a0_199 = sys_now(out a5_200)
	a5_125 = Mem19[a5_200 + 12<i32>:word32]
	s1_202 = Mem19[a5_200 + 40<i32>:word32]
	branch a0_199 - a5_125 < s5_136 l2304685E
l2304685E:
	branch s3_134 == 0<32> l23046870
l23046862:
	tcp_sent(s0, 0x23046994<32>)
l23046870:
	tcp_poll(s0, 0x23046898<32>, 1<32>)
	tcp_err(s0, 0x2304642E<32>)
	tcp_arg(s0, s1_202)
l230467EA:
	branch s4_135 == 0<32> l230467F6
l230467EE:
	word32 a0_949
	word32 s1_948
	word32 s2_950
	word32 s9_951
	word32 s10_952
	word32 s11_953
	ra_129 = tcp_abort(ra_129, s1_202, s0, a3_123, s3_134, s4_135, s7_138, mstatus_128, s6, s4, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s0, out s1_948, out a0_949, out a3_123, out a4_124, out a5_125, out s2_950, out s3_134, out s4_135, out s5_136, out s6_137, out s7_138, out s9_951, out s10_952, out s11_953, out mstatus_128)
	s2_192 = 0<32>
l230467F6:
	word32 s1_270 = Mem19[a5_125 + 40<i32>:word32]
	word32 a5_272 = Mem19[s0:word32]
	Mem275[a5_272 + 4<i32>:byte] = SLICE(s2_192, byte, 0)
	Mem276[s1_270 + 40<i32>:word32] = 0<32>
	Mem277[s1_270 + 1<i32>:byte] = 0<8>
	word32 s0_278 = s0 + 0xC<32>
	branch s2_192 != 0<32> l23046840
l2304680C:
	branch s4_135 == 0<32> l23046820
l23046810:
	word32 s1_280 = Mem277[a5_272 + 44<i32>:word32]
	Mem281[s1_280 + 4<i32>:word32] = 0<32>
	branch a5_272 == 0<32> l23046820
l23046818:
	call a5_272 (retsize: 0;)
		uses: a0:s1_280,a1:4<32>,a2:0<32>,a3:a3_294,a5:a5_272,mstatus:mstatus_292,ra:ra_289,s0:s0_278,s1:s1_280,s2:s2_273,s3:s3_285,s4:s4_279,s5:s5_290,s6:s6_286,s7:s7_293,Stack +0010:dwLoc10,Stack +0028:dwArg08,Stack +0038:dwArg18,Stack +0048:dwArg28,Stack +0058:dwArg38,Stack +0068:dwArg48,Stack +0074:dwArg54,Stack +0078:dwArg58,Stack +0098:dwArg78,Stack +009C:dwArg7C,Stack +00A8:dwArg88,Stack +00AC:dwArg8C,Stack +00B8:dwArg98,Stack +00BC:dwArg9C,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00DC:dwArgBC,Stack +00E8:dwArgC8,Stack +00EC:dwArgCC,Stack +00F8:dwArgD8,Stack +00FC:dwArgDC,Stack +0108:dwArgE8,Stack +0118:dwArgF8
		defs: a3:a3_308,a4:a4_307,a5:a5_305,mstatus:mstatus_315,ra:ra_300,s0:s0_301,s2:s2_302,s3:s3_298,s4:s4_303,s5:s5_304,s6:s6_299,s7:s7_316,sp:sp_296
l23046820:
	branch s6_137 == 0<32> l23046830
l23046824:
	word32 s1_329 = Mem328[a5_272 + 44<i32>:word32]
	branch a5_272 == 0<32> l23046830
l23046828:
	call a5_272 (retsize: 0;)
		uses: a0:s1_329,a1:0<32>,a2:0<32>,a3:a3_341,a5:a5_327,mstatus:mstatus_339,ra:ra_334,s0:s0_335,s1:s1_329,s2:s2_336,s3:s3_333,s4:s4_337,s5:s5_338,s6:s6_326,s7:s7_340,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0054:dwArg54,Stack +0058:dwArg58,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00CC:dwArgCC,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +FFFFFFF0:dwLoc10
		defs: a3:a3_355,a4:a4_354,a5:a5_352,mstatus:mstatus_362,ra:ra_347,s0:s0_348,s2:s2_349,s3:s3_345,s4:s4_350,s5:s5_351,s6:s6_346,s7:s7_363,sp:sp_343
l23046830:
	branch s3_134 == 0<32> l23046840
l23046834:
	word32 s1_376 = Mem328[a5_272 + 44<i32>:word32]
	branch a5_272 == 0<32> l23046840
l23046838:
	call a5_272 (retsize: 0;)
		uses: a0:s1_376,a1:2<32>,a2:0<32>,a3:a3_388,a5:a5_374,mstatus:mstatus_386,ra:ra_381,s0:s0_382,s1:s1_376,s2:s2_383,s3:s3_373,s4:s4_384,s5:s5_385,s6:s6_380,s7:s7_387,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0054:dwArg54,Stack +0058:dwArg58,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00CC:dwArgCC,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +FFFFFFF0:dwLoc10
		defs: a4:a4_401,a5:a5_399,mstatus:mstatus_409,ra:ra_394,s0:s0_395,s7:s7_410,sp:sp_390
l23046840:
	word32 a1_954
	word32 s4_957
	word32 a3_955
	word32 s8_958
	word32 s2_956
	sys_sem_signal(s0_278, a4_124, a5_272, mstatus_128, Mem431[sp_296 + 8<i32>:word32], Mem431[sp_296 + 36<i32>:word32], Mem431[sp_296 + 164<i32>:word32], Mem431[sp_296 + 280<i32>:word32], Mem431[sp_296 + 344<i32>:word32], Mem431[sp_296 + 408<i32>:word32], out s1_202, out a1_954, out a3_955, out s2_956, out s3_134, out s4_957, out s5_136, out s6_137, out s8_958)
l23046848:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_202
	a5Out = a5_125
	s3Out = s3_134
	s4Out = dwArg04
	s5Out = s5_136
	s6Out = s6_137
	s7Out = s7_138
	s8Out = s4
	mstatusOut = mstatus_128
	return ra_129
lwip_netconn_do_close_internal_exit:


void poll_tcp(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
poll_tcp_entry:
l23046898:
	word32 a5_9 = CONVERT(Mem7[a0 + 1<i32>:byte], byte, word32)
	word32 s0_11 = a0
	branch a5_9 != 1<32> l230468F0
l230468F0:
	branch a5_9 != 4<32> l230468AE
l230468F6:
	word32 a5_254
	ra = lwip_netconn_do_close_internal(ra, a0, s1, a2, a3, a5_9, s3, s4, s6, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgE8, out s0_11, out s1, out a5_254, out s3, out s4, out s5, out s6, out s7, out s8, out mstatus)
l230468AA:
	word32 a5_253
	ra = lwip_netconn_do_writemore(ra, s1, a1, a2, a3, a5_9, s5, s6, s7, s8, mstatus, dwArg18, dwArg38, dwArg58, dwArg78, dwArg88, dwArgB8, dwArg0118, out s0_11, out s1, out a5_253, out s3, out s4, out s5, out s6, out s7, out s8, out mstatus)
l230468AE:
	word32 a5_84 = CONVERT(Mem7[s0_11 + 36<i32>:byte], byte, word32)
	branch (a5_84 & 16<i32>) == 0<32> l230468E6
l230468B8:
	word32 s0_86 = Mem7[(a5_84 & 16<i32>) + 4<i32>:word32]
	branch (a5_84 & 16<i32>) == 0<32> l230468E6
l230468BC:
	branch CONVERT(Mem7[(a5_84 & 16<i32>) + 100<i32>:uint16], uint16, word32) <=u 0xFFFAC0<32> l230468E6
l230468CA:
	word32 a3_90 = CONVERT(Mem7[(a5_84 & 16<i32>) + 102<i32>:uint16], uint16, word32)
	branch a3_90 >u 7<32> l230468E6
l230468D4:
	Mem93[s0_86 + 36<i32>:byte] = SLICE(a5_84 & 0xFFFFFFEF<32>, byte, 0)
	word32 s0_94 = Mem93[(a5_84 & 0xFFFFFFEF<32>) + 44<i32>:word32]
	branch (a5_84 & 0xFFFFFFEF<32>) == 0<32> l230468E6
l230468DE:
	word32 a6_123
	word32 a7_124
	word32 s10_125
	word32 s11_126
	word32 s2_127
	word32 s9_130
	word32 t0_131
	word32 t1_132
	word32 t3_133
	word32 t4_134
	word32 t5_135
	word32 t6_136
	word32 tp_137
	call a5_84 & 0xFFFFFFEF<32> (retsize: 0;)
		uses: a0:s0_94,a1:2<32>,a2:0<32>,a3:a3_90,a6:a6_123,a7:a7_124,mstatus:mstatus_103,ra:ra_98,s0:s0_94,s1:s1_99,s10:s10_125,s11:s11_126,s2:s2_127,s3:s3_100,s4:s4_102,s5:s5_105,s6:s6_101,s7:s7_104,s8:s8_106,s9:s9_130,Stack +0008:dwLoc08,Stack +0018:dwArg08,Stack +0028:dwArg18,Stack +0038:dwArg28,Stack +0048:dwArg38,Stack +0054:dwArg44,Stack +0058:dwArg48,Stack +0068:dwArg58,Stack +0078:dwArg68,Stack +007C:dwArg6C,Stack +0088:dwArg78,Stack +008C:dwArg7C,Stack +0098:dwArg88,Stack +009C:dwArg8C,Stack +00A8:dwArg98,Stack +00B8:dwArgA8,Stack +00BC:dwArgAC,Stack +00C8:dwArgB8,Stack +00CC:dwArgBC,Stack +00D8:dwArgC8,Stack +00DC:dwArgCC,Stack +00E8:dwArgD8,Stack +00F8:dwArgE8,Stack +0128:dwArg0118,t0:t0_131,t1:t1_132,t3:t3_133,t4:t4_134,t5:t5_135,t6:t6_136,tp:tp_137
		defs: a6:a6_123,a7:a7_124,s10:s10_125,s11:s11_126,s2:s2_127,s9:s9_130,t0:t0_131,t1:t1_132,t3:t3_133,t4:t4_134,t5:t5_135,t6:t6_136,tp:tp_137
l230468E6:
	return
poll_tcp_exit:


void recv_raw(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
recv_raw_entry:
l230468FC:
	branch a0 == 0<32> l23046990
l23046990:
	return
l230468FE:
	branch sys_mbox_valid(a0 + 16<i32>) == 0<32> l2304693E
l23046920:
	word32 a3_34
	word32 a4_35
	word32 mstatus_39
	word32 s1_41
	word32 s3_43
	word32 s4_44
	word32 a0_55
	word32 s2_263
	word32 s5_264
	word32 s6_265
	word32 ra_40 = pbuf_clone(ra, s0, 0<32>, 640<i32>, a2, a3, a4, mstatus, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s1_41, out a0_55, out a3_34, out a4_35, out s2_263, out s3_43, out s4_44, out s5_264, out s6_265, out mstatus_39)
	branch a0_55 == 0<32> l2304693E
l2304692E:
	word32 a0_58
	word32 a3_61
	word32 a4_62
	word32 a2_266
	word32 a5_267
	memp_malloc(s1_41, 6<32>, a3_34, a4_35, mstatus_39, out a0_58, out a2_266, out a3_61, out a4_62, out a5_267)
	branch a0_58 != 0<32> l23046950
l23046950:
	Mem66[a0_58:word32] = a0_55
	Mem67[a0_58 + 4<i32>:word32] = a0_55
	Mem71[Mem67[0x4201FED0<32>:int32] + 8<i32>:word32] = a0_58
	word32 a5_72 = CONVERT(Mem71[s3_43 + 16<i32>:byte], byte, word32)
	Mem73[a0_58 + 12<i32>:word16] = SLICE(a5_72, word16, 0)
	word32 a2_74 = CONVERT(Mem73[a0_55 + 8<i32>:uint16], uint16, word32)
	word32 a0_77
	word32 a3_80
	word32 a4_81
	word32 a5_82
	word32 s4_89
	word32 s1_268
	word32 a1_269
	word32 a7_270
	word32 s2_271
	word32 s3_272
	word32 s5_273
	word32 s6_274
	word32 s0_85 = sys_mbox_trypost(s4_44, a4_62, a5_72, mstatus_39, dwLoc2C, a2_74, dwArgC8, dwArg0108, dwArg0148, out s1_268, out a0_77, out a1_269, out a3_80, out a4_81, out a5_82, out a7_270, out s2_271, out s3_272, out s4_89, out s5_273, out s6_274)
	branch a0_77 == 0<32> l23046984
l23046984:
	word32 s1_101 = Mem76[a5_82 + 44<i32>:word32]
	branch a5_82 == 0<32> l2304693E
l23046988:
	call a5_82 (retsize: 0;)
		uses: a0:s1_101,a4:a4_81,a5:a5_82,mstatus:mstatus_39,Stack +0004:dwLoc2C,Stack +0084:a2_74,Stack +00F8:dwArgC8,Stack +0138:dwArg0108,Stack +0178:dwArg0148
l2304697C:
	word32 a3_291
	word32 a4_292
	word32 a5_293
	netbuf_delete(ra_40, s0_85, a3_80, a4_81, s4_89, mstatus_39, dwArgD8, out a3_291, out a4_292, out a5_293)
l23046938:
	word32 s0_275
	word32 s1_276
	word32 a0_277
	word32 a1_278
	word32 a2_279
	word32 a3_280
	word32 a4_281
	word32 a5_282
	word32 a7_283
	word32 s2_284
	word32 s3_285
	word32 s4_286
	word32 s5_287
	word32 s6_288
	word32 s8_289
	word32 mstatus_290
	pbuf_free(ra_40, a0_55, a3_61, a4_62, s4_44, mstatus_39, dwArgF8, out s0_275, out s1_276, out a0_277, out a1_278, out a2_279, out a3_280, out a4_281, out a5_282, out a7_283, out s2_284, out s3_285, out s4_286, out s5_287, out s6_288, out s8_289, out mstatus_290)
l2304693E:
	0<32> = dwArg0128
	return
recv_raw_exit:


void sent_tcp(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
sent_tcp_entry:
l23046994:
	branch a0 == 0<32> l230469FA
l230469FA:
	return
l23046996:
	word32 a5_12 = CONVERT(Mem11[a0 + 1<i32>:byte], byte, word32)
	word32 s1_16 = a2
	branch a5_12 != 1<32> l230469EE
l230469EE:
	branch a5_12 != 4<32> l230469B0
l230469F4:
	word32 s0_292
	ra = lwip_netconn_do_close_internal(ra, a0, a2, a2, a3, a5_12, s3, s4, s6, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgE8, out s0_292, out s1_16, out a5_12, out s3, out s4, out s5, out s6, out s7, out s8, out mstatus)
l230469AC:
	word32 s0_291
	ra = lwip_netconn_do_writemore(ra, a2, a1, a2, a3, a5_12, s5, s6, s7, s8, mstatus, dwArg18, dwArg38, dwArg58, dwArg78, dwArg88, dwArgB8, dwArg0118, out s0_291, out s1_16, out a5_12, out s3, out s4, out s5, out s6, out s7, out s8, out mstatus)
l230469B0:
	word32 s0_87 = Mem11[a5_12 + 4<i32>:word32]
	branch a5_12 == 0<32> l230469E2
l230469B4:
	word32 a3_88 = CONVERT(Mem11[a5_12 + 100<i32>:uint16], uint16, word32)
	branch a3_88 <=u 0xFFFAC0<32> l230469E2
l230469C2:
	branch CONVERT(Mem11[a5_12 + 102<i32>:uint16], uint16, word32) >u 7<32> l230469E2
l230469CC:
	word32 a5_93 = CONVERT(Mem11[s0_87 + 36<i32>:byte], byte, word32)
	Mem95[s0_87 + 36<i32>:byte] = SLICE(a5_93 & 0xFFFFFFEF<32>, byte, 0)
	word32 s0_96 = Mem95[(a5_93 & 0xFFFFFFEF<32>) + 44<i32>:word32]
	branch (a5_93 & 0xFFFFFFEF<32>) == 0<32> l230469E2
l230469DA:
	word32 a5_115
	word32 a4_116
	word32 tp_120
	word32 a6_126
	word32 a7_127
	word32 s10_128
	word32 s11_129
	word32 s2_130
	word32 s9_133
	word32 t0_134
	word32 t1_135
	word32 t3_136
	word32 t4_137
	word32 t5_138
	word32 t6_139
	call a5_93 & 0xFFFFFFEF<32> (retsize: 0;)
		uses: a0:s0_96,a1:2<32>,a2:s1_97,a3:a3_88,a4:a4_116,a5:a5_115,a6:a6_126,a7:a7_127,mstatus:mstatus_105,ra:ra_101,s0:s0_96,s1:s1_97,s10:s10_128,s11:s11_129,s2:s2_130,s3:s3_102,s4:s4_104,s5:s5_107,s6:s6_103,s7:s7_106,s8:s8_108,s9:s9_133,Stack +0008:dwLoc08,Stack +0018:dwArg08,Stack +0028:dwArg18,Stack +0038:dwArg28,Stack +0048:dwArg38,Stack +0054:dwArg44,Stack +0058:dwArg48,Stack +0068:dwArg58,Stack +0078:dwArg68,Stack +007C:dwArg6C,Stack +0088:dwArg78,Stack +008C:dwArg7C,Stack +0098:dwArg88,Stack +009C:dwArg8C,Stack +00A8:dwArg98,Stack +00B8:dwArgA8,Stack +00BC:dwArgAC,Stack +00C8:dwArgB8,Stack +00CC:dwArgBC,Stack +00D8:dwArgC8,Stack +00DC:dwArgCC,Stack +00E8:dwArgD8,Stack +00F8:dwArgE8,Stack +0128:dwArg0118,t0:t0_134,t1:t1_135,t3:t3_136,t4:t4_137,t5:t5_138,t6:t6_139,tp:tp_120
		defs: a4:a4_116,a5:a5_115,a6:a6_126,a7:a7_127,s10:s10_128,s11:s11_129,s2:s2_130,s9:s9_133,t0:t0_134,t1:t1_135,t3:t3_136,t4:t4_137,t5:t5_138,t6:t6_139,tp:tp_120
l230469E2:
	return
sent_tcp_exit:


void recv_tcp(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s7, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s7:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
recv_tcp_entry:
l230469FE:
	branch a0 == 0<32> l23046A24
l23046A0E:
	branch sys_mbox_valid(a0 + 16<i32>) != 0<32> l23046A46
l23046A46:
	word32 a2_26
	branch a2 == 0<32> l23046A68
l23046A68:
	a2_26 = 0<32>
l23046A48:
	a2_26 = CONVERT(Mem13[a2 + 8<i32>:uint16], uint16, word32)
l23046A4C:
	word32 a0_41
	word32 a4_45
	word32 a5_46
	word32 s1_303
	word32 a1_304
	word32 a3_305
	word32 a7_306
	word32 s2_307
	word32 s3_308
	word32 s4_309
	word32 s5_310
	word32 s6_311
	sys_mbox_trypost(a0 + 16<i32>, a4, a5, mstatus, dwLoc2C, a2_26, dwArgC8, dwArg0108, dwArg0148, out s1_303, out a0_41, out a1_304, out a3_305, out a4_45, out a5_46, out a7_306, out s2_307, out s3_308, out s4_309, out s5_310, out s6_311)
	branch a0_41 != 0<32> l23046A74
l23046A74:
l23046A5A:
	word32 s1_66 = Mem34[a5_46 + 44<i32>:word32]
	branch a5_46 == 0<32> l23046A22
l23046A5E:
	call a5_46 (retsize: 0;)
		uses: a0:s1_66,a4:a4_45,a5:a5_46,mstatus:mstatus,Stack +0004:dwLoc2C,Stack +0084:a2_32,Stack +00F8:dwArgC8,Stack +0138:dwArg0108,Stack +0178:dwArg0148
l23046A20:
	branch a2 != 0<32> l23046A34
l23046A34:
	word32 s3_282
	word32 a3_100
	word32 a4_101
	word32 mstatus_105
	word32 s0_107
	word32 s4_113
	word32 a5_281
	word32 a2_280
	word32 a0_279
	word32 s1_278
	word32 s7_283
	word32 s9_284
	word32 s10_285
	word32 s11_286
	word32 s0_287
	word32 s1_288
	word32 a0_289
	word32 a1_290
	word32 a2_291
	word32 a3_292
	word32 a4_293
	word32 a5_294
	word32 a7_295
	word32 s2_296
	word32 s3_297
	word32 s4_298
	word32 s5_299
	word32 s6_300
	word32 s8_301
	word32 mstatus_302
	pbuf_free(tcp_recved(ra, a0, a1, CONVERT(Mem13[a2 + 8<i32>:uint16], uint16, word32), a2, a3, s7, mstatus, s2, dwArg28, dwArg38, dwArg58, ra, dwArg68, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, out s0_107, out s1_278, out a0_279, out a2_280, out a3_100, out a4_101, out a5_281, out s3_282, out s4_113, out s7_283, out s9_284, out s10_285, out s11_286, out mstatus_105), s0_107, a3_100, a4_101, s4_113, mstatus_105, dwArgF8, out s0_287, out s1_288, out a0_289, out a1_290, out a2_291, out a3_292, out a4_293, out a5_294, out a7_295, out s2_296, out s3_297, out s4_298, out s5_299, out s6_300, out s8_301, out mstatus_302)
l23046A22:
l23046A24:
	0<32> = dwArg0128
	return
recv_tcp_exit:


word32 lwip_netconn_is_err_msg(word32 a0, word32 a1, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_accept
//      netconn_recv_data
//      netconn_drain
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
lwip_netconn_is_err_msg_entry:
l23046A78:
	word32 a5_10
	word32 a5_11
	branch a0 != 0x2308DEAA<32> l23046A90
l23046A90:
	branch a0 != 0x2308DEAC<32> l23046AA0
l23046AA0:
	a4 = 0x2308DEAB<32>
	a5_10 = 0<32>
	branch a0 != 0x2308DEAB<32> l23046A8C
l23046AAE:
	a5_11 = 0xFFFFFFF1<32>
l23046A9C:
	a5_11 = 0xFFFFFFF2<32>
l23046A84:
	a5_11 = 0xFFFFFFF3<32>
l23046A86:
	Mem17[a1:byte] = SLICE(a5_11, byte, 0)
	a5_10 = 1<32>
l23046A8C:
	a4Out = a4
	a5Out = a5_10
	return a5_10
lwip_netconn_is_err_msg_exit:


void lwip_netconn_do_newconn(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra s10 s11 s7 s9 sp
lwip_netconn_do_newconn_entry:
l23046AB2:
	word32 a0_10 = Mem9[s1:word32]
	Mem11[a0_10 + 4<i32>:byte] = 0<8>
	word32 s0_100 = a0_10
	word32 s1_14 = Mem11[a5 + 4<i32>:word32]
	branch a5 != 0<32> l23046B1C
l23046AC6:
	word32 a5_105
	word32 a5_15 = CONVERT(Mem11[s1_14:byte], byte, word32)
	branch (a5_15 & 240<i32>) == 32<i32> l23046B2C
l23046B2C:
	word32 a4_24
	word32 s1_27
	word32 a3_267
	udp_new_ip_type(ra, s1_14, a3, 32<i32>, mstatus, out s1_27, out a3_267, out a4_24, out a5_105)
	Mem31[4<i32>:word32] = s1_27
	a0_10 = 0<32>
	s0_100 = Mem31[a4_24:word32]
	a4 = Mem31[a5_105 + 4<i32>:word32]
	branch a5_105 == 0<32> l23046B66
l23046B3A:
	a4 = 34<i32>
	branch CONVERT(Mem31[a4:byte], byte, word32) != 34<i32> l23046B4C
l23046B46:
	Mem37[a5_105 + 16<i32>:byte] = 1<8>
	a4 = 1<32>
l23046B4C:
	udp_recv(0<32>, 0x230462BA<32>, Mem39[4<32>:word32])
l23046AD6:
	branch (a5_15 & 240<i32>) == 64<i32> l23046AF8
l23046AF8:
	word32 a2_50
	Mem59[a0_10 + 4<i32>:word32] = raw_new_ip_type(ra, CONVERT(Mem11[a0_10 + 8<i32>:byte], byte, word32), a3, 64<i32>, mstatus, out a0_10, out a2_50, out a4, out a5_105)
	s0_100 = Mem59[a2_50:word32]
	word32 a2_61 = Mem59[a0_10 + 4<i32>:word32]
	branch a0_10 == 0<32> l23046B66
l23046B0A:
	raw_recv(a0_10, 0x230468FC<32>, a2_61)
l23046ADE:
	a4 = 0x10<32>
	branch (a5_15 & 240<i32>) != 0x10<32> l23046B5E
l23046B5E:
	a5 = 0xFFFFFFFA<32>
l23046AE4:
	word32 a0_70
	word32 s1_81
	word32 a3_268
	word32 s4_269
	word32 s7_270
	tcp_new_ip_type(ra, s1_14, a3, 0x10<32>, s3, s4, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgCC, dwArgD8, out s1_81, out a0_70, out a3_268, out a4, out a5_105, out s4_269, out s7_270, out mstatus)
	Mem99[a0_70 + 4<i32>:word32] = s1_81
	s0_100 = Mem99[a0_70:word32]
	a0_10 = Mem99[a5_105 + 4<i32>:word32]
	branch a5_105 == 0<32> l23046B66
l23046AF2:
	word32 a1_271
	a0_10 = setup_tcp(s0_100, out a1_271)
l23046B16:
	s0_100 = Mem107[a5_105:word32]
	a5 = Mem107[a5_105 + 4<i32>:word32]
	branch a5 == 0<32> l23046B66
l23046B66:
	a5 = 0xFFFFFFFF<32>
l23046B60:
	Mem114[s0_100 + 4<i32>:byte] = SLICE(a5, byte, 0)
l23046B1C:
	word32 a0_129 = a0_10 + 0xC<32>
l23046B28_thunk_sys_sem_signal:
	word32 s6_279
	word32 s8_280
	word32 a3_274
	word32 s4_277
	word32 s5_278
	word32 s2_275
	word32 s3_276
	word32 s1_272
	word32 a1_273
	sys_sem_signal(a0_129, a4, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_272, out a1_273, out a3_274, out s2_275, out s3_276, out s4_277, out s5_278, out s6_279, out s8_280)
	return
lwip_netconn_do_newconn_exit:


word32 netconn_alloc(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg38, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_new_with_proto_and_callback
//      accept_function
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0038:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
netconn_alloc_entry:
l23046B6A:
	word32 s2_16 = a1
	word32 a0_20
	word32 a2_200
	word32 a4_110
	word32 a5_112
	word32 a3_111
	word32 s1_25 = memp_malloc(a0, 7<32>, a3, a4, mstatus, out a0_20, out a2_200, out a3_111, out a4_110, out a5_112)
	word32 s0_119 = a0_20
	branch a0_20 == 0<32> l23046BFE
l23046B82:
	Mem28[a0_20 + 8<i32>:byte] = 0<8>
	Mem29[a0_20:byte] = SLICE(s1_25, byte, 0)
	Mem30[a0_20 + 4<i32>:word32] = 0<32>
	word32 a5_31 = 32<i32>
	branch (s1_25 & 240<i32>) == 32<i32> l23046BA8
l23046B9A:
	a5_31 = 64<i32>
	branch (s1_25 & 240<i32>) == 64<i32> l23046BD6
l23046BD6:
l23046BA2:
	a5_31 = 0x10<32>
	branch (s1_25 & 240<i32>) != 0x10<32> l23046BCA
l23046BA8:
l23046BAC:
	word32 a0_55
	word32 a5_60
	word32 a2_210
	word32 s4_211
	sys_mbox_new(ra, a3_111, a4_110, a5_31, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out a0_55, out a2_210, out a3_111, out a4_110, out a5_60, out s2_16, out s3, out s4_211)
	branch a0_55 != 0<32> l23046BCA
l23046BB8:
	word32 a0_71
	word32 a2_203
	word32 a5_204
	word32 s4_205
	word32 s1_78 = sys_sem_new(ra, a3_111, a4_110, a5_60, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out a0_71, out a1, out a2_203, out a3_111, out a4_110, out a5_204, out s2_16, out s3, out s4_205)
	branch a0_71 == 0<32> l23046BDA
l23046BDA:
	sys_mbox_set_invalid(a0_20 + 20<i32>)
	Mem87[a0_20 + 1<i32>:byte] = 0<8>
	Mem88[0x17<32>:word32] = a0_20
	Mem89[a0_20 + 44<i32>:word32] = s2_16
	Mem90[a0_20 + 40<i32>:word32] = 0<32>
	Mem91[a0_20 + 28<i32>:word32] = 0<32>
	Mem92[a0_20 + 32<i32>:word32] = 0<32>
	Mem93[a0_20 + 36<i32>:byte] = 0<8>
	a5_112 = 0xFFFFFFFF<32>
l23046BC4:
	word32 a0_206
	word32 a2_207
	word32 a5_208
	word32 s4_209
	sys_mbox_free(s1_78, a3_111, a4_110, mstatus, dwArg0138, dwArg0178, out a0_206, out a2_207, out a3_111, out a4_110, out a5_208, out s4_209)
l23046BCA:
	word32 a0_201
	word32 a2_202
	memp_free(7<32>, a0_20, a3_111, a4_110, mstatus, out a0_201, out a2_202, out a3_111, out a4_110, out a5_112)
	a1 = a0_20
	s0_119 = 0<32>
l23046BFE:
	0<32> = dwArg38
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3_111
	a4Out = a4_110
	a5Out = a5_112
	s2Out = s2_16
	s3Out = s3
	return s0_119
netconn_alloc_exit:


word32 netconn_free(word32 a0, word32 a3, word32 mstatus, word32 dwArg0148, word32 dwArg0188, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      free_socket
//      netconn_drain
//      accept_function
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
netconn_free_entry:
l23046C0C:
	sys_mbox_valid(a0 + 0x10<32>)
	sys_mbox_valid(a0 + 20<i32>)
	word32 a3_23
	word32 a4_24
	word32 s1_28
	word32 a1_55
	word32 a2_56
	word32 a5_57
	word32 s4_58
	word32 s0_27 = sys_sem_free(a0 + 12<i32>, a3, mstatus, dwArg0148, dwArg0188, out s1_28, out a1_55, out a2_56, out a3_23, out a4_24, out a5_57, out s4_58)
	sys_sem_set_invalid(s1_28)
l23046C40_thunk_memp_free:
	word32 a5_39
	word32 a3_42
	word32 a4_43
	word32 a0_59
	word32 a2_60
	memp_free(7<32>, s0_27, a3_23, a4_24, mstatus, out a0_59, out a2_60, out a3_42, out a4_43, out a5_39)
	a4Out = a4_43
	a5Out = a5_39
	return a3_42
netconn_free_exit:


word32 netconn_drain(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_drain
//      lwip_netconn_do_delconn
//      lwip_netconn_do_close
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s3 s4 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_drain_entry:
l23046C44:
	word32 s1_101 = a0 + 16<i32>
	word32 s0_10 = a0
	branch sys_mbox_valid(a0 + 16<i32>) == 0<32> l23046C7A
l23046C5E:
l23046C62:
	word32 a0_30
	word32 a4_34
	word32 s2_40
	word32 s4_42
	word32 a1_515
	s0_10 = sys_arch_mbox_tryfetch(s1_101, fp + -36<i32>, a3, a4, a5, mstatus, dwLoc2C, dwArg54, dwArgC8, dwArg0108, out s1_101, out a0_30, out a1_515, out a3, out a4_34, out s2_40, out s3, out s4_42)
	branch a0_30 != s2_40 l23046C94
l23046C94:
	branch (CONVERT(Mem17[s0_10:byte], byte, word32) & 240<i32>) != s3 l23046CB4
l23046CB4:
	s1_101 = netbuf_delete(ra, a0_30, a3, a4_34, s4_42, mstatus, dwArgD8, out a3, out a4, out a5)
l23046CA2:
	word32 a0_64 = lwip_netconn_is_err_msg(a0_30, fp + -37<i32>, out a4, out a5)
	branch a0_64 != 0<32> l23046C62
l23046CAC:
	word32 s3_522
	word32 a1_518
	word32 s5_524
	word32 s8_525
	word32 s4_523
	word32 a7_520
	word32 s2_521
	word32 a2_519
	word32 s0_516
	word32 a0_517
	ra = pbuf_free(ra, a0_64, a3, a4, s4_42, mstatus, dwArgF8, out s0_516, out s1_101, out a0_517, out a1_518, out a2_519, out a3, out a4, out a5, out a7_520, out s2_521, out s3_522, out s4_523, out s5_524, out s6, out s8_525, out mstatus)
l23046C6E:
	word32 a2_510
	word32 a0_509
	s1_101 = sys_mbox_free(s1_101, a3, a4_34, mstatus, dwArg0118, dwArg0158, out a0_509, out a2_510, out a3, out a4, out a5, out s4)
	sys_mbox_set_invalid(s1_101)
l23046C7A:
	word32 s0_107 = s0_10 + 0x14<32>
	word32 a0_109 = sys_mbox_valid(s0_107)
	branch a0_109 != 0<32> l23046CDE
l23046CDE:
	word32 a0_120
	word32 a4_124
	word32 s1_129
	word32 s2_130
	word32 s4_512
	word32 a1_511
	s0_107 = sys_arch_mbox_tryfetch(s0_107, fp + -36<i32>, a3, a4, a5, mstatus, dwLoc2C, dwArg54, dwArgC8, dwArg0108, out s1_129, out a0_120, out a1_511, out a3, out a4_124, out s2_130, out s3, out s4_512)
	branch a0_120 != s2_130 l23046CBA
l23046CBA:
	branch lwip_netconn_is_err_msg(a0_120, fp + -37<i32>, out a4, out a5) != 0<32> l23046CDE
l23046CC6:
	word32 a3_180
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg8 = <invalid>
	word32 stackArg24 = <invalid>
	word32 stackArg40 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg84 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg108 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg172 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 a0_151
	word32 s3_155
	word32 a5_160
	word32 mstatus_161
	word32 a4_162
	word32 a3_163
	word32 s4_166
	word32 s7_542
	word32 s1_541
	ra = netconn_drain(ra, s1_129, a3_163, a4_162, a5_160, s7, mstatus_161, stackArg8, stackArg24, stackArg40, dwArg14, stackArg72, stackArg84, stackArg88, stackArg104, stackArg108, stackArg120, stackArg136, stackArg168, stackArg172, stackArg184, stackArg200, stackArg216, dwArgC8, dwArgD8, dwArg0118, dwArgF8, dwArg0158, out s0_107, out s1_541, out a0_151, out a3_163, out a4_162, out a5_160, out s3_155, out s4_166, out s6, out s7_542, out mstatus_161)
	word32 s1_175 = Mem119[a0_151 + 4<i32>:word32]
	mstatus = mstatus_161
	a3_180 = a3_163
	branch a0_151 == 0<32> l23046CD8
l23046CD0:
	word32 s9_550
	word32 s2_546
	word32 s11_552
	word32 s10_551
	word32 s4_548
	word32 s5_549
	word32 s3_547
	word32 a4_544
	word32 a5_545
	word32 a0_543
	ra = tcp_abort(ra, s1_175, a0_151, a3_163, s3_155, s4_166, s7, mstatus_161, dwLoc30, dwLoc2C, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArgA8, dwArgAC, dwArgB8, dwArgD8, out s0_107, out s1_175, out a0_543, out a3_180, out a4_544, out a5_545, out s2_546, out s3_547, out s4_548, out s5_549, out s6, out s7, out s9_550, out s10_551, out s11_552, out mstatus)
	Mem206[s1_175 + 4<i32>:word32] = 0<32>
l23046CD8:
	a3 = netconn_free(s1_175, a3_180, mstatus, dwArg0118, dwArg0158, out a4, out a5)
l23046CEA:
	word32 a2_514
	word32 a0_513
	s1_101 = sys_mbox_free(s0_107, a3, a4_124, mstatus, dwArg0118, dwArg0158, out a0_513, out a2_514, out a3, out a4, out a5, out s4)
	sys_mbox_set_invalid(s0_107)
	a0_109 = s0_107
l23046C86:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_101
	a0Out = a0_109
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
netconn_drain_exit:


void accept_function(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg18, word32 dwArgD8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0018:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
accept_function_entry:
l23046CF8:
	branch a0 != 0<32> l23046D18
l23046D18:
	branch sys_mbox_valid(a0 + 20<i32>) == 0<32> l23046D06
l23046D28:
	branch a1 != 0<32> l23046D4A
l23046D4A:
	word32 a3_117
	word32 a4_118
	word32 s3_125
	word32 s2_137
	word32 s1_123
	word32 a5_119
	word32 s0_21 = Mem13[a1 + 44<i32>:word32]
	word32 a4_28
	word32 a5_29
	word32 s2_31
	word32 s3_36
	word32 a1_339
	word32 a3_341
	word32 a2_340
	word32 a0_33 = netconn_alloc(ra, CONVERT(Mem13[s0_21:byte], byte, word32), a3, a4, mstatus, dwLoc20, dwLoc1C, dwArg18, s3, dwArgD8, dwArg0118, dwArg0158, out a1_339, out a2_340, out a3_341, out a4_28, out a5_29, out s2_31, out s3_36)
	branch a0_33 != 0<32> l23046D78
l23046D78:
	Mem41[a0_33 + 4<i32>:word32] = s3_36
	word32 a1_351
	setup_tcp(s0_21, out a1_351)
	word32 a0_47
	word32 a1_352
	word32 a7_353
	word32 s2_354
	word32 s4_355
	word32 s5_356
	word32 s6_357
	word32 s0_55 = sys_mbox_trypost(s2_31, a4_28, a5_29, mstatus, dwLoc1C, s3, dwArgD8, dwArg0118, dwArg0158, out s1_123, out a0_47, out a1_352, out a3_117, out a4_118, out a5_119, out a7_353, out s2_354, out s3_125, out s4_355, out s5_356, out s6_357)
	s2_137 = a0_47
	branch a0_47 == 0<32> l23046D6A
l23046D8C:
	word32 s1_71 = Mem41[s0_55 + 4<i32>:word32]
	tcp_arg(s0_55, 0<32>)
	tcp_recv(s0_55, 0<32>)
	tcp_sent(s0_55, 0<32>)
	tcp_poll(s0_55, 0<32>, 0<32>)
	tcp_err(s0_55, 0<32>)
	Mem86[s1_71 + 4<i32>:word32] = 0<32>
	word32 a3_90
	word32 a0_364
	word32 a2_365
	word32 a4_366
	word32 a5_367
	word32 s4_368
	word32 s1_94 = sys_mbox_free(s1_71 + 16<i32>, a3_117, a4_118, mstatus, dwArg0128, dwArg0168, out a0_364, out a2_365, out a3_90, out a4_366, out a5_367, out s4_368)
	sys_mbox_set_invalid(s1_71 + 16<i32>)
	word32 a4_369
	word32 a5_370
	netconn_free(s1_94, a3_90, mstatus, dwArg0128, dwArg0168, out a4_369, out a5_370)
l23046D58:
	word32 a0_114
	word32 a1_358
	word32 a7_359
	word32 s2_360
	word32 s4_361
	word32 s5_362
	word32 s6_363
	sys_mbox_trypost(s2_31, a4_28, a5_29, mstatus, dwLoc1C, s3, dwArgD8, dwArg0118, dwArg0158, out s1_123, out a0_114, out a1_358, out a3_117, out a4_118, out a5_119, out a7_359, out s2_360, out s3_125, out s4_361, out s5_362, out s6_363)
	s2_137 = 0xFFFFFFFF<32>
	branch a0_114 != 0<32> l23046D08
l23046D6A:
	word32 s0_140 = Mem139[a5_119 + 44<i32>:word32]
	branch a5_119 == 0<32> l23046D08
l23046D6E:
	word32 a5_165
	word32 tp_169
	word32 a7_170
	word32 s5_171
	word32 s6_172
	word32 t0_173
	word32 t1_174
	word32 t4_175
	word32 t5_176
	word32 t6_177
	call a5_119 (retsize: 0;)
		uses: a0:s0_140,a1:0<32>,a2:0<32>,a3:a3_150,a4:a4_149,a5:a5_165,a7:a7_170,mstatus:mstatus,ra:ra,s0:s0_140,s1:s1_145,s2:s2_146,s3:s3_147,s5:s5_171,s6:s6_172,Stack +0000:dwLoc20,Stack +0004:dwLoc1C,Stack +0038:dwArg18,Stack +00F8:dwArgD8,Stack +0138:dwArg0118,Stack +0148:dwArg0128,Stack +0178:dwArg0158,Stack +0188:dwArg0168,t0:t0_173,t1:t1_174,t4:t4_175,t5:t5_176,t6:t6_177,tp:tp_169
		defs: a5:a5_165,a7:a7_170,s5:s5_171,s6:s6_172,t0:t0_173,t1:t1_174,t4:t4_175,t5:t5_176,t6:t6_177,tp:tp_169
l23046D2C:
	word32 a0_182
	word32 a4_186
	word32 a5_187
	word32 s6_350
	word32 s4_348
	word32 s5_349
	word32 a7_345
	word32 s3_347
	word32 s2_346
	word32 s1_342
	word32 a3_344
	word32 a1_343
	sys_mbox_trypost(a0 + 20<i32>, a4, a5, mstatus, dwLoc1C, s3, dwArgD8, dwArg0118, dwArg0158, out s1_342, out a0_182, out a1_343, out a3_344, out a4_186, out a5_187, out a7_345, out s2_346, out s3_347, out s4_348, out s5_349, out s6_350)
	branch a0_182 != 0<32> l23046D06
l23046D3C:
	word32 s0_205 = Mem13[a5_187 + 44<i32>:word32]
	branch a5_187 == 0<32> l23046D06
l23046D40:
	call a5_187 (retsize: 0;)
		uses: a0:s0_205,a4:a4_186,a5:a5_187,mstatus:mstatus,Stack +0004:dwLoc1C,Stack +0084:s3,Stack +00F8:dwArgD8,Stack +0138:dwArg0118,Stack +0178:dwArg0158
l23046D06:
l23046D08:
	return
accept_function_exit:


void lwip_netconn_do_delconn(word32 ra, word32 s0, word32 a0, word32 a3, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_delconn_entry:
l23046DD6:
	word32 a5_110
	word32 a0_10 = Mem7[a0:word32]
	word32 a5_11 = CONVERT(Mem7[a0_10 + 1<i32>:byte], byte, word32)
	word32 a4_111 = a5_11 & 253<i32>
	branch (a5_11 & 253<i32>) == 0<32> l23046E16
l23046DEA:
	a4_111 = 3<32>
	branch a5_11 != 3<32> l23046DF8
l23046DF0:
	word32 a5_14 = CONVERT(Mem7[a0_10 + 36<i32>:byte], byte, word32)
	a5_11 = a5_14 & 4<32>
	branch (a5_14 & 4<32>) != 0<32> l23046E16
l23046E16:
	Mem17[a0 + 4<i32>:byte] = 0<8>
	word32 a4_33
	word32 s1_40
	word32 s3_44
	word32 s4_45
	word32 s6_47
	word32 s0_620
	word32 a0_29
	word32 a3_100
	word32 s7_116
	word32 ra_108 = netconn_drain(ra, a0_10, a3, a4_111, a5_11, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg34, dwArg38, dwArg44, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0148, out s0_620, out s1_40, out a0_29, out a3_100, out a4_33, out a5_110, out s3_44, out s4_45, out s6_47, out s7_116, out mstatus)
	word32 s0_58 = Mem17[a4_33:word32]
	a4_111 = Mem17[a0_29 + 4<i32>:word32]
	branch a0_29 == 0<32> l23046E68
l23046E24:
	word32 a5_60 = CONVERT(Mem17[a4_111:byte], byte, word32)
	a5_110 = a5_60 & 240<i32>
	branch (a5_60 & 240<i32>) == 32<i32> l23046E82
l23046E82:
	Mem63[a0_29 + 36<i32>:word32] = 0<32>
	word32 a2_630
	udp_remove(a0_29, 32<i32>, mstatus, out a0_29, out a2_630, out a3_100, out a4_111, out a5_110)
l23046E34:
	branch (a5_60 & 240<i32>) == 64<i32> l23046E5E
l23046E5E:
	word32 a2_631
	a0_29 = raw_remove(a0_29, 64<i32>, a5_60 & 240<i32>, mstatus, out a2_631, out a3_100, out a4_111, out a5_110)
l23046E3C:
	a3_100 = 0x10<32>
	branch (a5_60 & 240<i32>) != 0x10<32> l23046E62
l23046E62:
	Mem87[a5_110 + 4<i32>:word32] = 0<32>
l23046E68:
	word32 s0_91 = Mem90[a0_29:word32]
	word32 a0_109 = Mem90[a5_110 + 44<i32>:word32]
	branch a5_110 == 0<32> l23046E74
l23046E6E:
	word32 a6_117
	word32 a7_118
	word32 s1_119
	word32 s10_120
	word32 s11_121
	word32 s2_122
	word32 s3_123
	word32 s4_124
	word32 s5_125
	word32 s6_126
	word32 s8_127
	word32 s9_128
	word32 t0_129
	word32 t1_130
	word32 t3_131
	word32 t4_132
	word32 t5_133
	word32 t6_134
	word32 tp_135
	call a5_110 (retsize: 0;)
		uses: a0:a0_93,a1:0<32>,a2:0<32>,a3:a3_100,a6:a6_117,a7:a7_118,mstatus:mstatus_37,ra:ra_38,s0:s0_91,s1:s1_119,s10:s10_120,s11:s11_121,s2:s2_122,s3:s3_123,s4:s4_124,s5:s5_125,s6:s6_126,s7:s7_48,s8:s8_127,s9:s9_128,Stack +0008:dwLoc08,Stack +0018:dwArg08,Stack +0020:dwArg10,Stack +0028:dwArg18,Stack +0038:dwArg28,Stack +0044:dwArg34,Stack +0048:dwArg38,Stack +0054:dwArg44,Stack +0058:dwArg48,Stack +0064:dwArg54,Stack +0068:dwArg58,Stack +006C:dwArg5C,Stack +0078:dwArg68,Stack +0088:dwArg78,Stack +008C:dwArg7C,Stack +0098:dwArg88,Stack +009C:dwArg8C,Stack +00A8:dwArg98,Stack +00AC:dwArg9C,Stack +00B8:dwArgA8,Stack +00C8:dwArgB8,Stack +00CC:dwArgBC,Stack +00D8:dwArgC8,Stack +00DC:dwArgCC,Stack +00E8:dwArgD8,Stack +00EC:dwArgDC,Stack +00F8:dwArgE8,Stack +0108:dwArgF8,Stack +0118:dwArg0108,Stack +0128:dwArg0118,Stack +0158:dwArg0148,t0:t0_129,t1:t1_130,t3:t3_131,t4:t4_132,t5:t5_133,t6:t6_134,tp:tp_135
		defs: a0:a0_109,a3:a3_113,a4:a4_111,a5:a5_110,a6:a6_117,a7:a7_118,mstatus:mstatus_115,ra:ra_108,s1:s1_119,s10:s10_120,s11:s11_121,s2:s2_122,s3:s3_123,s4:s4_124,s5:s5_125,s6:s6_126,s7:s7_116,s8:s8_127,s9:s9_128,t0:t0_129,t1:t1_130,t3:t3_131,t4:t4_132,t5:t5_133,t6:t6_134,tp:tp_135
l23046E74:
	word32 s0_138 = Mem90[a0_109:word32]
	a0_10 = Mem90[a5_110 + 44<i32>:word32]
	branch a5_110 == 0<32> l23046DFE
l23046E7A:
	word32 a6_159
	word32 a7_160
	word32 s1_161
	word32 s10_162
	word32 s11_163
	word32 s2_164
	word32 s3_165
	word32 s4_166
	word32 s5_167
	word32 s6_168
	word32 s8_169
	word32 s9_170
	word32 t0_171
	word32 t1_172
	word32 t3_173
	word32 t4_174
	word32 t5_175
	word32 t6_176
	word32 tp_177
	call a5_110 (retsize: 0;)
		uses: a0:a0_140,a1:2<32>,a2:0<32>,a3:a3_145,a6:a6_159,a7:a7_160,mstatus:mstatus_144,ra:ra_143,s0:s0_138,s1:s1_161,s10:s10_162,s11:s11_163,s2:s2_164,s3:s3_165,s4:s4_166,s5:s5_167,s6:s6_168,s7:s7_146,s8:s8_169,s9:s9_170,Stack +0008:dwArg08,Stack +0010:dwArg10,Stack +0018:dwArg18,Stack +0028:dwArg28,Stack +0034:dwArg34,Stack +0038:dwArg38,Stack +0044:dwArg44,Stack +0048:dwArg48,Stack +0054:dwArg54,Stack +0058:dwArg58,Stack +005C:dwArg5C,Stack +0068:dwArg68,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00CC:dwArgCC,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,Stack +0118:dwArg0118,Stack +0148:dwArg0148,Stack +FFFFFFF8:dwLoc08,t0:t0_171,t1:t1_172,t3:t3_173,t4:t4_174,t5:t5_175,t6:t6_176,tp:tp_177
		defs: a0:a0_151,a4:a4_153,a5:a5_152,a6:a6_159,a7:a7_160,mstatus:mstatus_157,s1:s1_161,s10:s10_162,s11:s11_163,s2:s2_164,s3:s3_165,s4:s4_166,s5:s5_167,s6:s6_168,s8:s8_169,s9:s9_170,t0:t0_171,t1:t1_172,t3:t3_173,t4:t4_174,t5:t5_175,t6:t6_176,tp:tp_177
l23046E42:
	Mem179[a4_111 + 1<i32>:byte] = 4<8>
	Mem181[s0_58 + 8<i32>:byte] = 3<8>
	Mem183[Mem181[3<32>:word32] + 40<i32>:word32] = 3<32>
l23046E5A_thunk_lwip_netconn_do_close_internal:
	word32 mstatus_641
	word32 s8_640
	word32 a5_634
	word32 s7_639
	word32 s4_636
	word32 s3_635
	word32 s6_638
	word32 s5_637
	word32 s1_633
	word32 s0_632
	lwip_netconn_do_close_internal(ra_108, s0, s1_40, dwArg10, 0x10<32>, 3<32>, s3_44, s4_45, s6_47, s7_116, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg54, dwArg58, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, out s0_632, out s1_633, out a5_634, out s3_635, out s4_636, out s5_637, out s6_638, out s7_639, out s8_640, out mstatus_641)
	return
l23046DF8:
	Mem219[a0 + 4<i32>:byte] = 0xFB<8>
	a5_110 = 0xFFFFFFFB<32>
l23046DFE:
	word32 a0_225 = sys_sem_valid(a0_10 + 0xC<32>)
	branch a0_225 == 0<32> l23046E90
l23046E90:
	return
l23046E08:
l23046E12_thunk_sys_sem_signal:
	word32 s6_628
	word32 s8_629
	word32 a1_622
	word32 s5_627
	word32 a3_623
	word32 s2_624
	word32 s4_626
	word32 s3_625
	word32 s1_621
	sys_sem_signal(a0_225 + 0xC<32>, a4_111, a5_110, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_621, out a1_622, out a3_623, out s2_624, out s3_625, out s4_626, out s5_627, out s6_628, out s8_629)
	return
lwip_netconn_do_delconn_exit:


void lwip_netconn_do_bind(word32 s1, word32 a1, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg24, word32 dwArg34, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0034:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_bind_entry:
l23046E98:
	word32 a0_19 = Mem7[a4:word32]
	word32 a5_11 = 0xFFFFFFFA<32>
	word32 a4_12 = Mem7[a0_19 + 4<i32>:word32]
	branch a0_19 == 0<32> l23046EC8
l23046EA8:
	word32 a5_13 = CONVERT(Mem7[a4_12:byte], byte, word32)
	branch (a5_13 & 240<i32>) == 32<i32> l23046EE4
l23046EE4:
	word32 a3_119
	word32 a5_120
	a0_19 = udp_bind(a0_19, a1, CONVERT(Mem7[a0_19 + 12<i32>:uint16], uint16, word32), out a3_119, out a4_12, out a5_120)
l23046EB8:
	a4_12 = 64<i32>
	branch (a5_13 & 240<i32>) == 64<i32> l23046EDA
l23046EDA:
	a0_19 = raw_bind(a0_19, a1)
l23046EC0:
	a4_12 = 0x10<32>
	branch (a5_13 & 240<i32>) == 0x10<32> l23046EF0
l23046EF0:
	a0_19 = tcp_bind(s1, a0_19, a1, CONVERT(Mem7[a0_19 + 12<i32>:uint16], uint16, word32), a5_13 & 240<i32>, mstatus, dwArg14, dwArg34, out a4_12)
l23046EE0:
	a5_11 = a0_19
l23046EC6:
	a5_11 = 0xFFFFFFFA<32>
l23046EC8:
	Mem58[Mem7[a0_19:word32] + 4<i32>:byte] = SLICE(a5_11, byte, 0)
	word32 a0_63 = a0_19 + 0xC<32>
l23046ED6_thunk_sys_sem_signal:
	word32 s8_129
	word32 s5_127
	word32 s6_128
	word32 s3_125
	word32 s4_126
	word32 a3_123
	word32 s2_124
	word32 s1_121
	word32 a1_122
	sys_sem_signal(a0_63, a4_12, a5_11, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_121, out a1_122, out a3_123, out s2_124, out s3_125, out s4_126, out s5_127, out s6_128, out s8_129)
	return
lwip_netconn_do_bind_exit:


void lwip_netconn_do_connect(word32 ra, word32 s0, word32 a1, word32 a4, word32 a5, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_connect_entry:
l23046EFC:
	word32 a0_100
	word32 a0_11 = Mem9[a4:word32]
	word32 s0_104 = a0_11
	word32 a4_101 = Mem9[a0_11 + 4<i32>:word32]
	branch a0_11 == 0<32> l23046FB6
l23046FB6:
	a0_100 = 0xFFFFFFF1<32>
l23046F0C:
	word32 a5_15 = CONVERT(Mem9[a4_101:byte], byte, word32)
	a5 = a5_15 & 240<i32>
	branch (a5_15 & 240<i32>) == 32<i32> l23046F92
l23046F92:
	s0_104 = Mem9[a1 + 8<i32>:word32]
	word32 s2_213
	a0_100 = udp_connect(a0_11, a1, CONVERT(Mem9[a0_11 + 12<i32>:uint16], uint16, word32), dwArg28, out a4_101, out a5, out s2_213)
l23046F1C:
	branch (a5_15 & 240<i32>) == 64<i32> l23046F78
l23046F78:
	s0_104 = Mem9[a1 + 8<i32>:word32]
	a0_100 = raw_connect(a0_11, a1, a4_101, out a4_101, out a5)
l23046F24:
	a0_100 = 0xFFFFFFFA<32>
	branch (a5_15 & 240<i32>) != 0x10<32> l23046F7E
l23046F2C:
	a5 = CONVERT(Mem9[a4_101 + 1<i32>:byte], byte, word32)
	branch a5 == 3<32> l23046FBA
l23046FBA:
	a0_100 = 0xFFFFFFF7<32>
l23046F36:
	a0_100 = 0xFFFFFFF6<32>
	branch a5 != 0<32> l23046F7E
l23046F3A:
	word32 a1_46
	word32 s1_60
	s0_104 = tcp_connect(ra, 3<32>, setup_tcp(a0_11, out a1_46), a1_46, CONVERT(Mem9[Mem9[a5:word32] + 12<i32>:uint16], uint16, word32), 0x230463C0<32>, s7, mstatus, s0, dwArg14, dwArg28, dwArg38, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s1_60, out a0_100, out a4_101, out a5, out mstatus)
	branch a0_100 != 0<32> l23046F7E
l23046F58:
	word32 a4_86 = CONVERT(Mem9[a5 + 36<i32>:byte], byte, word32)
	Mem87[a5 + 1<i32>:byte] = SLICE(s1_60, byte, 0)
	s0_104 = Mem87[a5:word32]
	branch (a4_86 & 2<32>) == 0<32> l23046F9E
l23046F9E:
	Mem92[a5 + 36<i32>:byte] = SLICE(CONVERT(Mem87[a5 + 36<i32>:byte], byte, word32) & 0xFFFFFFFB<32>, byte, 0)
	Mem94[Mem92[a5:word32] + 40<i32>:word32] = a5
	return
l23046F68:
	word32 a4_99 = CONVERT(Mem87[a5 + 36<i32>:byte], byte, word32)
	Mem102[a5 + 36<i32>:byte] = SLICE(a4_99 | 4<i32>, byte, 0)
	a0_100 = 0xFFFFFFFB<32>
	a4_101 = a4_99 | 4<i32>
l23046F7E:
	Mem105[s0_104 + 4<i32>:byte] = SLICE(a0_100, byte, 0)
	word32 a0_111 = a0_100 + 0xC<32>
l23046F8E_thunk_sys_sem_signal:
	word32 s1_214
	word32 a1_215
	word32 a3_216
	word32 s2_217
	word32 s3_218
	word32 s4_219
	word32 s5_220
	word32 s6_221
	word32 s8_222
	sys_sem_signal(a0_111, a4_101, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_214, out a1_215, out a3_216, out s2_217, out s3_218, out s4_219, out s5_220, out s6_221, out s8_222)
	return
lwip_netconn_do_connect_exit:


void lwip_netconn_do_disconnect(word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_disconnect_entry:
l23046FBE:
	word32 a5_14
	word32 a0_9 = Mem7[a4:word32]
	branch (CONVERT(Mem7[a4:byte], byte, word32) & 240<i32>) != 32<i32> l23046FF0
l23046FF0:
	Mem15[a0_9 + 4<i32>:byte] = 0xFA<8>
	a5_14 = 0xFFFFFFFA<32>
l23046FD8:
	a4 = Mem7[a0_9 + 4<i32>:word32]
	a5_14 = udp_disconnect(a0_9)
	Mem18[a0_9 + 4<i32>:byte] = 0<8>
l23046FE2:
l23046FEC_thunk_sys_sem_signal:
	word32 s6_78
	word32 s5_77
	word32 s4_76
	word32 s3_75
	word32 s2_74
	word32 a3_73
	word32 a1_72
	word32 s1_71
	word32 s8_79
	sys_sem_signal(a0_9 + 0xC<32>, a4, a5_14, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_71, out a1_72, out a3_73, out s2_74, out s3_75, out s4_76, out s5_77, out s6_78, out s8_79)
	return
lwip_netconn_do_disconnect_exit:


void lwip_netconn_do_listen(word32 ra, word32 s0, word32 s1, word32 a4, word32 a5, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[24..31] s1:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_listen_entry:
l23046FF8:
	word32 a5_146
	word32 a0_100 = Mem9[a5:word32]
	byte bLoc11_197 = SLICE(s0, byte, 24)
	word32 a5_13 = Mem9[a0_100 + 4<i32>:word32]
	branch a0_100 == 0<32> l230470D0
l23047008:
	word32 a4_14 = CONVERT(Mem9[a5_13:byte], byte, word32)
	a4 = a4_14 & 240<i32>
	branch (a4_14 & 240<i32>) != 0x10<32> l230470D4
l230470D4:
	a5_146 = 0xFFFFFFF0<32>
l23047016:
	word32 a5_18 = CONVERT(Mem9[a5_13 + 1<i32>:byte], byte, word32)
	branch a5_18 != 0<32> l230470C4
l230470C4:
	a4 = 2<32>
	branch a5_18 != 2<32> l230470D0
l230470D0:
	a5_146 = 0xFFFFFFF5<32>
l230470CA:
	bLoc11_197 = 0<8>
l2304701C:
	branch CONVERT(Mem9[a0_100 + 20<i32>:byte], byte, word32) == 0<32> l2304702A
l2304702A:
	word32 a5_28
	word32 a3_32
	word32 a2_27
	a0_100 = tcp_listen_with_backlog_and_err(s1, a0_100, fp + 0xFFFFFFEF<32>, 0x10<32>, a4_14 & 240<i32>, mstatus, dwArg14, dwArg18, out a2_27, out a3_32, out a4, out a5_28)
	word32 s1_34 = a0_100
	branch a0_100 == 0<32> l2304709C
l2304703A:
	word32 a0_37 = sys_mbox_valid(a0_100 + 0x10<32>)
	branch a0_37 == 0<32> l23047054
l23047044:
	word32 a0_40
	s1_34 = sys_mbox_free(a0_37 + 0x10<32>, a3_32, a4, mstatus, dwArg0128, dwArg0168, out a0_40, out a2_27, out a3_32, out a4, out a5_28, out s4)
	sys_mbox_set_invalid(a0_40 + 0x10<32>)
	a0_37 = a0_40 + 0x10<32>
l23047054:
	bLoc11_197 = 0<8>
	a0_100 = sys_mbox_valid(a0_37 + 0x14<32>)
	branch a0_100 != 0<32> l23047072
l23047062:
	word32 a4_350
	word32 s2_352
	word32 a5_351
	word32 s3_353
	s1_34 = sys_mbox_new(ra, a3_32, a4, a5_28, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out a0_100, out a2_27, out a3_32, out a4_350, out a5_351, out s2_352, out s3_353, out s4)
	bLoc11_197 = SLICE(a0_100, byte, 0)
l23047072:
	word32 a5_85 = CONVERT(bLoc11_197, byte, int32)
	branch a5_85 != 0<32> l230470B6
l230470B6:
	word32 a5_105
	word32 s9_363
	word32 s10_364
	word32 s11_365
	word32 s4_358
	word32 s7_361
	word32 s8_362
	word32 s5_359
	word32 s6_360
	word32 s3_357
	word32 s1_354
	word32 a3_355
	word32 s2_356
	tcp_close(ra, s1_34, a2_27, a3_32, s4, s7, mstatus, dwLoc10, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, dwArg64, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, out s1_354, out a0_100, out a3_355, out a4, out a5_105, out s2_356, out s3_357, out s4_358, out s5_359, out s6_360, out s7_361, out s8_362, out s9_363, out s10_364, out s11_365, out mstatus)
	Mem129[a5_105 + 4<i32>:word32] = 0<32>
l23047078:
	Mem132[a5_85 + 1<i32>:byte] = 2<8>
	Mem134[s1_34 + 4<i32>:word32] = a5_85
	tcp_arg(a0_100, Mem134[a0_100 + 4<i32>:word32])
	a4 = tcp_accept(a0_100, 0x23046CF8<32>)
l23047022:
	a5_146 = 0xFFFFFFFA<32>
l23047024:
	bLoc11_197 = SLICE(a5_146, byte, 0)
l2304709C:
	word32 a5_153 = CONVERT(bLoc11_197, byte, word32)
	Mem158[Mem152[a0_100:word32] + 4<i32>:byte] = SLICE(a5_153, byte, 0)
	word32 a1_342
	word32 s2_344
	word32 s1_341
	word32 a3_343
	word32 s3_345
	word32 s4_346
	word32 s8_349
	word32 s5_347
	word32 s6_348
	sys_sem_signal(a0_100 + 0xC<32>, a4, a5_153, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_341, out a1_342, out a3_343, out s2_344, out s3_345, out s4_346, out s5_347, out s6_348, out s8_349)
	return
lwip_netconn_do_listen_exit:


void lwip_netconn_do_send(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s4, word32 s5, word32 s6, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra s7 s9 sp
lwip_netconn_do_send_entry:
l230470D8:
	word32 a3_287
	word32 a2_286
	word32 a0_113
	word32 a4_103
	word32 a5_118
	netconn_err(Mem7[a0:word32], a3, a4, mstatus, out a0_113, out a2_286, out a3_287, out a4_103, out a5_118)
	word32 s0_123 = a0
	branch a0_113 != 0<32> l23047120
l230470E8:
	s0_123 = Mem7[a5_118:word32]
	a0_113 = 0xFFFFFFF5<32>
	word32 a7_23 = Mem7[a5_118 + 4<i32>:int32]
	branch a7_23 == 0<32> l23047120
l230470F4:
	word32 a5_24 = CONVERT(Mem7[a5_118:byte], byte, word32)
	a5_118 = a5_24 & 240<i32>
	branch (a5_24 & 240<i32>) == 32<i32> l23047138
l23047138:
	word32 a6_27 = Mem7[s0_123 + 8<i32>:int32]
	word32 a4_28 = CONVERT(Mem7[a6_27 + 14<i32>:byte], byte, word32)
	word32 a1_30 = Mem7[a6_27:int32]
	word32 a5_32 = CONVERT(Mem7[a6_27 + 16<i32>:uint16], uint16, word32)
	branch a6_27 == 8<32> l23047156
l23047150:
	branch Mem7[a6_27 + 8<i32>:int32] != 0<32> l23047162
l23047162:
	word32 s9_305
	word32 s5_304
	word32 s3_302
	word32 s4_303
	word32 a3_301
	word32 s1_300
	udp_sendto_chksum(ra, a7_23, a1_30, a6_27 + 8<i32>, CONVERT(Mem7[a6_27 + 12<i32>:uint16], uint16, word32), a4_28 & 2<32>, a5_32, s4, mstatus, dwArg04, dwArg18, dwArg38, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_123, out s1_300, out a0_113, out a3_301, out a4_103, out a5_118, out s3_302, out s4_303, out s5_304, out s9_305, out mstatus)
l23047156:
	s0_123 = udp_send_chksum(ra, a7_23, a1_30, a4_28 & 2<32>, a5_32, s4, mstatus, dwArg04, dwArg18, dwArg38, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out a0_113, out a4_103, out a5_118, out mstatus)
l23047104:
	a4_103 = 64<i32>
	branch (a5_24 & 240<i32>) != 64<i32> l23047120
l2304710C:
	word32 a2_106 = (a5_24 & 240<i32>) + 8<i32>
	word32 a5_108 = Mem7[a1:word32]
	branch a2_106 == 0<32> l2304711C
l23047118:
	a5_108 = Mem7[a5_108 + 8<i32>:word32]
	branch a5_108 != 0<32> l23047132
l23047132:
	word32 a3_288
	word32 s4_290
	word32 s2_289
	raw_sendto(ra, a7_23, a1, a2_106, a5_108, s4, s5, s6, s7, mstatus, s0, dwArg14, dwArg28, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_123, out a0_113, out a3_288, out a4_103, out a5_118, out s2_289, out s4_290, out mstatus)
l2304711C:
	s0_123 = raw_send(ra, a7_23, a1, a5_108, s4, s5, s6, s7, mstatus, s0, dwArg14, dwArg28, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out a0_113, out a4_103, out a5_118, out mstatus)
l23047120:
	Mem180[s0_123 + 4<i32>:byte] = SLICE(a0_113, byte, 0)
	word32 a0_185 = a0_113 + 0xC<32>
l2304712E_thunk_sys_sem_signal:
	word32 s8_299
	word32 s4_296
	word32 s6_298
	word32 s5_297
	word32 s2_294
	word32 s3_295
	word32 s1_291
	word32 a3_293
	word32 a1_292
	sys_sem_signal(a0_185, a4_103, a5_118, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_291, out a1_292, out a3_293, out s2_294, out s3_295, out s4_296, out s5_297, out s6_298, out s8_299)
	return
lwip_netconn_do_send_exit:


void lwip_netconn_do_recv(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArg38, word32 dwArg48, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_recv_entry:
l2304716E:
	word32 a0_17 = Mem15[a5:word32]
	Mem18[a0_17 + 4<i32>:byte] = 0<8>
	word32 a5_102 = Mem18[a4 + 4<i32>:word32]
	branch a4 != 0<32> l2304719E
l2304719E:
	word32 a5_22 = CONVERT(Mem18[a5_102:byte], byte, word32)
	a4 = 0x10<32>
	a5_102 = a5_22 & 240<i32>
	branch (a5_22 & 240<i32>) != 0x10<32> l23047188
l230471AC:
	a0_17 = Mem18[s1 + 8<i32>:word32]
	word32 s3_26 = 0x10000000<32>
	word32 s4_27 = 0xFFFFFFF<32>
	s1_28 = s1
l230471B4:
	word32 s1_28
	word32 s2_29 = s1_28
	branch s1_28 <u s3_26 l230471BC
l230471BA:
	s2_29 = s4_27
l230471BC:
	word32 s11_240
	word32 s0_237
	word32 s9_238
	word32 s10_239
	ra = tcp_recved(ra, s1_28 - s2_29, a0_17, CONVERT(SLICE(s2_29, word16, 0), word16, word32), a2, a3, s7, mstatus, dwLoc10, dwArg38, dwArg48, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s0_237, out s1_28, out a0_17, out a2, out a3, out a4, out a5_102, out s3_26, out s4_27, out s7, out s9_238, out s10_239, out s11_240, out mstatus)
	branch s1_28 != 0<32> l230471B4
l230471D0:
l23047188:
	word32 a0_97 = a0_17 + 0xC<32>
l2304719A_thunk_sys_sem_signal:
	word32 s4_233
	word32 s5_234
	word32 s6_235
	word32 s8_236
	word32 s3_232
	word32 s2_231
	word32 a3_230
	word32 s1_228
	word32 a1_229
	sys_sem_signal(a0_97, a4, a5_102, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_228, out a1_229, out a3_230, out s2_231, out s3_232, out s4_233, out s5_234, out s6_235, out s8_236)
	return
lwip_netconn_do_recv_exit:


void lwip_netconn_do_write(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s5, word32 s6, word32 s7, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgC8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_write_entry:
l230471D2:
	word32 a3_169
	word32 a2_168
	word32 a0_14
	word32 a5_20
	word32 a4_19
	word32 s1_16 = netconn_err(Mem7[a0:word32], a3, a4, mstatus, out a0_14, out a2_168, out a3_169, out a4_19, out a5_20)
	word32 s0_21 = Mem7[a5_20:word32]
	branch a0_14 != 0<32> l23047218
l230471E4:
	word32 a4_22 = CONVERT(Mem7[a5_20:byte], byte, word32)
	a0_14 = 0xFFFFFFFA<32>
	a4_19 = a4_22 & 240<i32>
	branch (a4_22 & 240<i32>) != 0x10<32> l23047218
l230471F4:
	a4_19 = CONVERT(Mem7[a5_20 + 1<i32>:byte], byte, word32)
	branch a4_19 != 0<32> l23047216
l23047216:
	a0_14 = 0xFFFFFFFB<32>
l230471FA:
	a5_20 = Mem7[a4_19 + 4<i32>:word32]
	a0_14 = 0xFFFFFFF5<32>
	branch a4_19 == 0<32> l23047218
l23047218:
	Mem32[s0_21 + 4<i32>:byte] = SLICE(a0_14, byte, 0)
	word32 a0_37 = a5_20 + 12<i32>
l23047226_thunk_sys_sem_signal:
	word32 a3_172
	word32 a1_171
	word32 s1_170
	word32 s2_173
	word32 s3_174
	word32 s4_175
	word32 s5_176
	word32 s6_177
	word32 s8_178
	sys_sem_signal(a0_37, a4_19, a5_20, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_170, out a1_171, out a3_172, out s2_173, out s3_174, out s4_175, out s5_176, out s6_177, out s8_178)
	return
l23047200:
	Mem65[a5_20 + 1<i32>:byte] = 1<8>
	Mem67[Mem65[a5_20:word32] + 40<i32>:word32] = a5_20
l23047212_thunk_lwip_netconn_do_writemore:
	word32 s0_179
	word32 s1_180
	word32 a5_181
	word32 s3_182
	word32 s4_183
	word32 s5_184
	word32 s6_185
	word32 s7_186
	word32 s8_187
	word32 mstatus_188
	lwip_netconn_do_writemore(ra, s1_16, a1, dwArg10, 0x10<32>, a5_20, s5, s6, s7, s8, mstatus, dwArg28, dwArg48, dwArg68, dwArg88, dwArg98, dwArgC8, dwArg0128, out s0_179, out s1_180, out a5_181, out s3_182, out s4_183, out s5_184, out s6_185, out s7_186, out s8_187, out mstatus_188)
	return
lwip_netconn_do_write_exit:


void lwip_netconn_do_getaddr(word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_getaddr_entry:
l2304722A:
	word32 a5_19
	word32 a0_15 = Mem0[a5:word32]
	word32 a5_6 = Mem0[a5 + 4<i32>:word32]
	branch a5_6 == 0<32> l23047272
l23047230:
	word32 a5_10
	branch CONVERT(Mem0[a0_15 + 16<i32>:byte], byte, word32) == 0<32> l2304727A
l2304727A:
	a5_10 = Mem0[a5_6 + 4<i32>:word32]
l23047238:
	a5_10 = Mem0[a5_6:word32]
l2304723A:
	Mem14[a5_10:word32] = a4
	a0_15 = Mem14[a4:word32]
	Mem16[a0_15 + 4<i32>:byte] = 0<8>
	word32 a5_18 = CONVERT(Mem16[a4:byte], byte, word32)
	a5_19 = a5_18 & 240<i32>
	branch (a5_18 & 240<i32>) == 32<i32> l23047298
l23047298:
	a4 = CONVERT(Mem16[a0_15 + 16<i32>:byte], byte, word32)
	branch a4 == 0<32> l230472AC
l230472AC:
	word32 a4_22 = CONVERT(Mem16[(a5_18 & 240<i32>) + 16<i32>:byte], byte, word32)
	a4 = a4_22 & 4<32>
	branch (a4_22 & 4<32>) == 0<32> l23047272
l230472B4:
	a0_15 = Mem16[(a4_22 & 4<32>) + 12<i32>:word32]
	a5_19 = CONVERT(Mem16[(a5_18 & 240<i32>) + 20<i32>:uint16], uint16, word32)
l230472A0:
	a0_15 = Mem16[a4 + 12<i32>:word32]
	a5_19 = CONVERT(Mem16[(a5_18 & 240<i32>) + 18<i32>:uint16], uint16, word32)
l23047252:
	branch (a5_18 & 240<i32>) == 64<i32> l2304727E
l2304727E:
	a5_19 = CONVERT(Mem16[a0_15 + 16<i32>:byte], byte, word32)
	branch a5_19 == 0<32> l23047272
l23047284:
	a0_15 = Mem16[a5_19 + 12<i32>:word32]
	a4 = CONVERT(Mem16[Mem16[a4 + 4<i32>:word32] + 16<i32>:byte], byte, word32)
	Mem33[a5_19:word16] = SLICE(a4, word16, 0)
l2304725A:
	branch (a5_18 & 240<i32>) != 0x10<32> l23047290
l23047260:
	a4 = CONVERT(Mem16[a0_15 + 16<i32>:byte], byte, word32)
	branch a4 != 0<32> l230472BC
l230472BC:
	a5_19 = CONVERT(Mem16[(a5_18 & 240<i32>) + 22<i32>:uint16], uint16, word32)
l23047268:
	a4 = 1<32>
	branch CONVERT(Mem16[(a5_18 & 240<i32>) + 20<i32>:byte], byte, word32) >u 1<32> l230472C4
l230472C4:
	a5_19 = CONVERT(Mem16[(a5_18 & 240<i32>) + 24<i32>:uint16], uint16, word32)
l230472C0:
	a0_15 = Mem16[a4 + 12<i32>:word32]
l230472A6:
	Mem47[a4:word16] = SLICE(a5_19, word16, 0)
l23047272:
	Mem50[a0_15 + 4<i32>:byte] = 0xF5<8>
	a5_19 = 0xFFFFFFF5<32>
l23047290:
	word32 a0_54 = Mem53[a0_15:word32]
l23047294_thunk_sys_sem_signal:
	word32 s4_134
	word32 s8_137
	word32 s5_135
	word32 s6_136
	word32 s1_129
	word32 s3_133
	word32 s2_132
	word32 a1_130
	word32 a3_131
	sys_sem_signal(a0_54 + 0xC<32>, a4, a5_19, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_129, out a1_130, out a3_131, out s2_132, out s3_133, out s4_134, out s5_135, out s6_136, out s8_137)
	return
lwip_netconn_do_getaddr_exit:


void lwip_netconn_do_close(word32 ra, word32 s0, word32 s1, word32 a0, word32 a4, word32 a5, word32 s3, word32 s4, word32 s6, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_close_entry:
l230472CA:
	word32 a4_122
	word32 a0_12 = Mem7[a4 + 4<i32>:word32]
	branch a4 == 0<32> l23047300
l230472D8:
	branch (CONVERT(Mem7[a0_12:byte], byte, word32) & 240<i32>) != 0x10<32> l23047300
l230472E6:
	word32 a4_16 = CONVERT(Mem7[a0 + 8<i32>:byte], byte, word32)
	word32 a3_18 = CONVERT(Mem7[a0_12 + 1<i32>:byte], byte, word32)
	branch a4_16 == 3<32> l230472FA
l230472F4:
	branch a3_18 == 2<32> l23047300
l230472FA:
	branch a3_18 != 3<32> l23047312
l23047312:
	branch a3_18 != 1<32> l2304731C
l2304731C:
	branch (a4_16 & 1<32>) == 0<32> l23047324
l23047320:
	word32 a0_333
	word32 s0_332
	word32 a4_334
	ra = netconn_drain(ra, a0_12, a3_18, a4_16 & 1<32>, a5, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg34, dwArg38, dwArg44, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0148, out s0_332, out s1, out a0_333, out a3_18, out a4_334, out a5, out s3, out s4, out s6, out s7, out mstatus)
l23047324:
	Mem68[a5 + 1<i32>:byte] = 4<8>
	Mem70[Mem68[a5:word32] + 40<i32>:word32] = a5
l23047338_thunk_lwip_netconn_do_close_internal:
	word32 s8_343
	word32 mstatus_344
	word32 s6_341
	word32 s7_342
	word32 s4_339
	word32 s5_340
	word32 s3_338
	word32 a5_337
	word32 s1_336
	word32 s0_335
	lwip_netconn_do_close_internal(ra, s0, s1, dwArg10, a3_18, a5, s3, s4, s6, s7, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg54, dwArg58, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, out s0_335, out s1_336, out a5_337, out s3_338, out s4_339, out s5_340, out s6_341, out s7_342, out s8_343, out mstatus_344)
	return
l23047318:
	a4_122 = 0xFFFFFFFB<32>
l23047300:
	a4_122 = 0xFFFFFFF5<32>
l23047302:
	Mem128[a0 + 4<i32>:byte] = SLICE(a4_122, byte, 0)
l2304730E_thunk_sys_sem_signal:
	word32 a3_325
	word32 a1_324
	word32 s1_323
	word32 s3_327
	word32 s2_326
	word32 s6_330
	word32 s4_328
	word32 s5_329
	word32 s8_331
	sys_sem_signal(a0_12 + 0xC<32>, a4_122, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_323, out a1_324, out a3_325, out s2_326, out s3_327, out s4_328, out s5_329, out s6_330, out s8_331)
	return
lwip_netconn_do_close_exit:


void lwip_netconn_do_join_leave_group(word32 ra, word32 s1, word32 a0, word32 a1, word32 a4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgC8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra s7 s9 sp
lwip_netconn_do_join_leave_group_entry:
l2304733C:
	Mem10[a0 + 4<i32>:byte] = 0xF5<8>
	word32 a0_11 = Mem10[0xFFFFFFF5<32>:word32]
	word32 a5_14 = Mem10[a4 + 4<i32>:word32]
	branch a4 == 0<32> l23047372
l23047350:
	a4 = 32<i32>
	branch (CONVERT(Mem10[a5_14:byte], byte, word32) & 240<i32>) != 32<i32> l23047386
l23047386:
	Mem19[a0_11 + 4<i32>:byte] = 0xFA<8>
	a5_14 = 0xFFFFFFFA<32>
l23047360:
	word32 a5_20 = CONVERT(Mem10[a0_11 + 17<i32>:byte], byte, word32)
	word32 a0_21 = Mem10[a0_11 + 12<i32>:word32]
	word32 s0_23 = Mem10[a1 + 8<i32>:word32]
	branch a5_20 != 0<32> l23047380
l23047380:
	s0_23 = igmp_leavegroup(ra, s1, a0_21, a5_20, s7, mstatus, dwArg08, dwArg18, dwArg28, dwArg48, dwArg68, dwArg88, dwArg98, dwArgC8, out a0_11, out a4, out a5_14, out mstatus)
l2304736A:
	a0_11 = igmp_joingroup(ra, a0_21, a5_20, s7, mstatus, dwArg08, dwArg18, dwArg28, out a4, out a5_14, out mstatus)
l2304736E:
	Mem82[s0_23 + 4<i32>:byte] = SLICE(a0_11, byte, 0)
l23047372:
	word32 a0_90 = a0_11 + 0xC<32>
l2304737C_thunk_sys_sem_signal:
	word32 s6_167
	word32 s8_168
	word32 s4_165
	word32 s5_166
	word32 s2_163
	word32 s3_164
	word32 a1_161
	word32 a3_162
	word32 s1_160
	sys_sem_signal(a0_90, a4, a5_14, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_160, out a1_161, out a3_162, out s2_163, out s3_164, out s4_165, out s5_166, out s6_167, out s8_168)
	return
lwip_netconn_do_join_leave_group_exit:


void lwip_netconn_do_gethostbyname(word32 ra, word32 s1, word32 a1, word32 s2, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_gethostbyname_entry:
l2304738E:
	word32 a0_24
	word32 a5_34
	word32 s1_47
	word32 mstatus_51
	word32 s4_145
	word32 s3_144
	word32 s2_143
	word32 a4_142
	word32 a3_141
	word32 s0_140
	dns_gethostbyname_addrtype(ra, Mem9[Mem9[a1 + 4<i32>:word32]:word32], a1, Mem9[s1 + 12<i32>:word32], s2, s5, s6, s8, mstatus, dwLoc08, dwArg0C, dwArg28, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgD8, dwArg0118, dwArg0158, out s0_140, out s1_47, out a0_24, out a3_141, out a4_142, out a5_34, out s2_143, out s3_144, out s4_145, out mstatus_51)
	Mem53[s1_47:byte] = SLICE(a0_24, byte, 0)
	word32 a4_55 = CONVERT(Mem53[a5_34:int8], int8, int32)
	branch a4_55 == 0xFFFFFFFB<32> l230473CC
l230473CC:
	return
l230473BE:
l230473C8_thunk_sys_sem_signal:
	word32 s1_146
	word32 a1_147
	word32 a3_148
	word32 s2_149
	word32 s3_150
	word32 s4_151
	word32 s5_152
	word32 s6_153
	word32 s8_154
	sys_sem_signal(a0_24, a4_55, 0xFFFFFFFB<32>, mstatus_51, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_146, out a1_147, out a3_148, out s2_149, out s3_150, out s4_151, out s5_152, out s6_153, out s8_154)
	return
lwip_netconn_do_gethostbyname_exit:


word32 err_to_errno(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recv_tcp
//      lwip_accept
//      lwip_bind
//      lwip_close
//      lwip_connect
//      lwip_listen
//      lwip_read
//      lwip_sendto
//      lwip_send
//      lwip_shutdown
//      lwip_setsockopt
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
err_to_errno_entry:
l230473D6:
	word32 a5_5 = a0 + 16<i32> & 255<i32>
	branch a5_5 >u 0x10<32> l230473F6
l230473F6:
	a4Out = <invalid>
	a5Out = a5_5
	return 5<32>
l230473E4:
	word32 a0_13 = Mem0[0x230864C8<32> - (a0 << 2<u32>):word32]
	a4Out = <invalid>
	a5Out = a0 << 2<u32>
	return a0_13
err_to_errno_exit:


word32 netbuf_delete(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0108, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      free_socket
//      lwip_recvfrom_udp_raw.isra.6
//      recv_udp
//      recv_raw
//      netconn_drain
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0108:[0..31]
// LiveOut: a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: a6 a7 mstatus ra s0 s2 s3 s4 s5 s6 s8 sp t0 t1 t3 t4 t5 t6
netbuf_delete_entry:
l230473FA:
	branch a0 == 0<32> l23047420
l23047420:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l230473FC:
	word32 a1_21 = a0
	word32 a0_6 = Mem0[a0:word32]
	branch a0_6 == 0<32> l23047422
l23047422:
l23047402:
	word32 s0_129
	word32 s1_130
	word32 a0_131
	word32 a2_132
	word32 a5_133
	word32 a7_134
	word32 s2_135
	word32 s3_136
	word32 s4_137
	word32 s5_138
	word32 s6_139
	word32 s8_140
	pbuf_free(ra, a0_6, a3, a4, s4, mstatus, dwArg0108, out s0_129, out s1_130, out a0_131, out a1_21, out a2_132, out a3, out a4, out a5_133, out a7_134, out s2_135, out s3_136, out s4_137, out s5_138, out s6_139, out s8_140, out mstatus)
	Mem43[a1_21 + 4<i32>:word32] = 0<32>
	Mem44[a1_21:word32] = 0<32>
l2304741C:
l2304741C_thunk_memp_free:
	word32 a5_52
	word32 a3_55
	word32 a4_56
	word32 a0_141
	word32 a2_142
	word32 s1_57 = memp_free(6<32>, a1_21, a3, a4, mstatus, out a0_141, out a2_142, out a3_55, out a4_56, out a5_52)
	a3Out = a3_55
	a4Out = a4_56
	a5Out = a5_52
	return s1_57
netbuf_delete_exit:


word32 netbuf_alloc(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg24, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_sendto
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0024:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netbuf_alloc_entry:
l23047426:
	branch a0 != 0<32> l23047436
l23047436:
	word32 s0_19 = a0
	word32 a0_10 = Mem8[a0:word32]
	branch a0_10 == 0<32> l2304744A
l23047442:
	word32 a5_201
	word32 a7_202
	word32 s2_203
	word32 s3_204
	word32 a2_200
	word32 a0_199
	word32 s4_205
	word32 s5_206
	word32 s6_207
	word32 s8_208
	ra = pbuf_free(ra, a0_10, a3, a4, s4, mstatus, dwArg0108, out s0_19, out s1, out a0_199, out a1, out a2_200, out a3, out a4, out a5_201, out a7_202, out s2_203, out s3_204, out s4_205, out s5_206, out s6_207, out s8_208, out mstatus)
l2304744A:
	word32 a0_119
	word32 a0_55
	word32 a3_57
	word32 a4_58
	word32 s0_60
	word32 s2_66
	word32 s4_68
	word32 mstatus_71
	word32 s8_198
	word32 s6_197
	word32 s5_196
	word32 s3_195
	word32 a7_194
	word32 a5_193
	word32 a2_192
	word32 a1_191
	word32 s1_190
	word32 ra_72 = pbuf_alloc(ra, s0_19, s1, 182<i32>, a1, 640<i32>, a3, a4, mstatus, dwLoc1C, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_60, out s1_190, out a0_55, out a1_191, out a2_192, out a3_57, out a4_58, out a5_193, out a7_194, out s2_66, out s3_195, out s4_68, out s5_196, out s6_197, out s8_198, out mstatus_71)
	Mem80[a0_55:word32] = s0_60
	branch a0_55 == 0<32> l2304742C
l2304742C:
	a0_119 = 0<32>
l2304745A:
	Mem82[a0_55 + 4<i32>:word32] = s0_60
	a0_119 = Mem82[a0_55 + 4<i32>:word32]
l2304742E:
	s0Out = s0_60
	a0Out = a0_119
	a3Out = a3_57
	a4Out = a4_58
	s2Out = s2_66
	s4Out = s4_68
	mstatusOut = mstatus_71
	return ra_72
l23047428:
	s0Out = s0
	a0Out = 0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s4Out = s4
	mstatusOut = mstatus
	return ra
netbuf_alloc_exit:


word32 netbuf_free(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0118, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_sendto
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0118:[0..31]
// LiveOut: a2 mstatus s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
netbuf_free_entry:
l23047460:
	branch a0 == 0<32> l2304748A
l2304748A:
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	mstatusOut = mstatus
	return a2
l23047462:
	word32 s0_17 = a0
	word32 a0_10 = Mem8[a0:word32]
	branch a0_10 == 0<32> l23047472
l2304746E:
	word32 s1_127
	word32 a0_128
	word32 a1_129
	word32 a2_130
	word32 a3_131
	word32 a4_132
	word32 a5_133
	word32 a7_134
	word32 s6_135
	word32 s8_136
	pbuf_free(ra, a0_10, a3, a4, s4, mstatus, dwArg0118, out s0_17, out s1_127, out a0_128, out a1_129, out a2_130, out a3_131, out a4_132, out a5_133, out a7_134, out s2, out s3, out s4, out s5, out s6_135, out s8_136, out mstatus)
l23047472:
	Mem41[s0_17 + 4<i32>:word32] = 0<32>
	Mem42[s0_17:word32] = 0<32>
	Mem43[s0_17 + 14<i32>:byte] = 0<8>
	Mem44[s0_17 + 16<i32>:word16] = 0<16>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	mstatusOut = mstatus
	return dwArg10
netbuf_free_exit:


word32 icmp_input(word32 ra, word32 a0, word32 a1, word32 a3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s9 sp
icmp_input_entry:
l2304748C:
	word32 s1_458
	Mem28[0x4201FDE2<32>:word16] = SLICE(CONVERT(Mem22[0x4201FDE2<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s7_30 = Mem28[0x4201FEC8<32>:int32]
	word32 a4_26 = 0x13<32>
	word32 s0_108 = a0
	branch (CONVERT(Mem28[s7_30:byte], byte, word32) & 0xF<32>) << 2<i32> <=u 0x13<32> l230476BC
l230474D2:
	a3 = CONVERT(Mem28[a0 + 10<i32>:uint16], uint16, word32)
	a4_26 = 3<32>
	branch a3 <=u 3<32> l230476BC
l230474DC:
	word32 a0_39 = Mem28[7<32>:word32]
	word32 a4_250 = CONVERT(Mem28[3<32>:byte], byte, word32)
	branch a4_250 == 0<32> l2304767C
l230474E6:
	a3 = 8<32>
	branch a4_250 != 8<32> l230476A6
l230476A6:
	Mem44[0x4201FDF0<32>:word16] = SLICE(CONVERT(Mem28[0x4201FDF0<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem47[0x4201FDE6<32>:word16] = SLICE(CONVERT(Mem44[0x4201FDE6<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l230474EC:
	word32 a4_125 = 224<i32>
	a3 = a0_39 & 240<i32>
	branch (a0_39 & 240<i32>) == 224<i32> l23047588
l230474FA:
	s4 = a1
	word32 a5_705
	branch ip4_addr_isbroadcast_u32(a0_39, a1, out a3, out a4_125, out a5_705) != 0<32> l23047588
l23047504:
	a4_26 = CONVERT(Mem28[a0 + 8<i32>:uint16], uint16, word32)
	branch a4_26 <=u 7<32> l230476BC
l230476BC:
	word32 s2_82
	word32 s6_688
	word32 mstatus_690
	word32 s8_689
	word32 s0_677
	word32 a3_681
	word32 a4_682
	word32 a1_679
	word32 a2_680
	word32 s4_686
	word32 a0_678
	word32 s3_685
	word32 a5_683
	word32 s5_687
	word32 a7_684
	pbuf_free(ra, a0, a3, a4_26, s4, mstatus, dwArgF8, out s0_677, out s1_458, out a0_678, out a1_679, out a2_680, out a3_681, out a4_682, out a5_683, out a7_684, out s2_82, out s3_685, out s4_686, out s5_687, out s6_688, out s8_689, out mstatus_690)
	Mem99[s2_82 + 82<i32>:word16] = SLICE(CONVERT(Mem28[s2_82 + 82<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2304750E:
	word32 a0_101
	word32 a3_104
	word32 a4_105
	word32 s1_109
	word32 s2_110
	s0_108 = inet_chksum_pbuf(a0, a4_26, out s1_109, out a0_101, out a3_104, out a4_105, out s2_110, out s4)
	branch a0_101 == 0<32> l2304753C
l2304753C:
	word32 s6_119 = 0x4201FEC0<32>
	word32 s3_120 = CONVERT(SLICE(s1_109, word16, 0), word16, word32)
	word32 a2_123
	word32 a1_706
	word32 a5_707
	branch pbuf_add_header(s0_108, s1_109 + 142<i32>, out a1_706, out a2_123, out a3, out a4_125, out a5_707) == 0<32> l23047696
l23047696:
	word32 a1_737
	word32 a5_738
	branch pbuf_remove_header(s0_108, s1_109 + 142<i32>, a2_123, out a1_737, out a3, out a4_125, out a5_738) == 0<32> l230475C4
l230476A0:
l23047558:
	word32 a5_134 = CONVERT(Mem28[s0_108 + 8<i32>:uint16], uint16, word32)
	word32 a1_137 = CONVERT(SLICE(a5_134 + s3_120, word16, 0), word16, word32)
	branch a1_137 <u a5_134 l23047588
l23047568:
	word32 a0_140
	word32 s1_146
	word32 a1_739
	word32 a2_740
	word32 a5_741
	word32 a7_742
	word32 s2_743
	word32 s3_744
	word32 s5_745
	word32 s6_746
	word32 s8_747
	ra = pbuf_alloc(ra, s0_108, s1_109, 142<i32>, a1_137, 640<i32>, a3, a4_125, mstatus, dwLoc2C, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_108, out s1_146, out a0_140, out a1_739, out a2_740, out a3, out a4_125, out a5_741, out a7_742, out s2_743, out s3_744, out s4, out s5_745, out s6_746, out s8_747, out mstatus)
	branch a0_140 == 0<32> l23047588
l23047578:
	word32 a4_166 = CONVERT(Mem28[a0_140 + 10<i32>:uint16], uint16, word32)
	branch a4_166 >=u s1_146 + 8<i32> l2304759A
l2304759A:
	word32 a2_175
	word32 a1_748
	word32 a3_749
	word32 a4_750
	word32 a5_751
	word32 a6_752
	word32 a7_753
	memcpy(Mem28[a0_140 + 4<i32>:word32], s7_30, s1_146, out a1_748, out a2_175, out a3_749, out a4_750, out a5_751, out a6_752, out a7_753)
	word32 a1_754
	word32 a5_755
	branch pbuf_remove_header(a0_140, s1_146, a2_175, out a1_754, out a3, out a4_166, out a5_755) == 0<32> l230475B2
l230475B2:
	word32 a0_193
	word32 s1_770
	word32 s2_771
	word32 s3_772
	word32 s0_196 = pbuf_copy(a0_140, s0_108, out s1_770, out a0_193, out a3, out a4_166, out s2_771, out s3_772, out s4)
	branch a0_193 != 0<32> l230475AE
l230475BC:
	word32 s5_229
	word32 s0_773
	word32 a0_774
	word32 a1_775
	word32 a2_776
	word32 a3_777
	word32 a4_778
	word32 a5_779
	word32 a7_780
	word32 s8_781
	ra = pbuf_free(ra, s0_196, a3, a4_166, s4, mstatus, dwArgF8, out s0_773, out s1_109, out a0_774, out a1_775, out a2_776, out a3_777, out a4_778, out a5_779, out a7_780, out s2_110, out s3_120, out s4, out s5_229, out s6_119, out s8_781, out mstatus)
	s0_108 = s5_229
l230475C4:
	word32 s5_245 = Mem28[s0_108 + 4<i32>:int32]
	word32 a1_767
	word32 a2_768
	word32 a5_769
	branch pbuf_add_header(s0_108, s1_109, out a1_767, out a2_768, out a3, out a4_250, out a5_769) != 0<32> l2304767C
l230475D2:
	word32 a5_277
	word32 a5_253 = Mem28[s6_119 + 20<i32>:int32]
	word32 s0_254 = Mem28[s1_109 + 4<i32>:word32]
	Mem256[s1_109 + 12<i32>:byte] = SLICE(a5_253, byte, 0)
	Mem257[s1_109 + 13<i32>:byte] = SLICE(a5_253 >>u 8<u32>, byte, 0)
	Mem260[s1_109 + 14<i32>:byte] = SLICE(a5_253 >>u 0x10<u32>, byte, 0)
	Mem261[s1_109 + 15<i32>:byte] = SLICE(a5_253 >>u 24<i32>, byte, 0)
	word32 a5_262 = Mem261[s6_119 + 16<i32>:int32]
	Mem264[s1_109 + 16<i32>:byte] = SLICE(a5_262, byte, 0)
	Mem265[s1_109 + 17<i32>:byte] = SLICE(a5_262 >>u 8<u32>, byte, 0)
	Mem268[s1_109 + 18<i32>:byte] = SLICE(a5_262 >>u 0x10<u32>, byte, 0)
	Mem269[s1_109 + 19<i32>:byte] = SLICE(a5_262 >>u 24<i32>, byte, 0)
	word32 a5_270 = CONVERT(Mem269[s5_245 + 3<i32>:byte], byte, word32)
	word32 a4_271 = CONVERT(Mem269[s5_245 + 2<i32>:byte], byte, word32)
	Mem272[s5_245:byte] = 0<8>
	word32 a5_274 = a5_270 << 8<i32> | a4_271
	branch a5_274 <=u 0xFFFFFF7<32> l230476A2
l230476A2:
	a5_277 = a5_274 + 8<32>
l23047628:
	a5_277 = a5_274 + 9<32>
l2304762A:
	word32 a5_280 = a5_277 << 16<i32>
	Mem283[s5_245 + 2<i32>:byte] = SLICE(a5_280 >>u 16<i32>, byte, 0)
	Mem285[s5_245 + 3<i32>:byte] = SLICE(a5_280 >>u 24<i32>, byte, 0)
	Mem288[s1_109 + 8<i32>:byte] = 0xFF<8>
	Mem292[s1_109 + 10<i32>:byte] = 0<8>
	Mem293[s1_109 + 11<i32>:byte] = 0<8>
	word32 a2_782
	word32 a3_783
	word32 a4_784
	word32 a5_785
	word32 a0_296 = inet_chksum(s1_109, s3_120, 0xFFFFFF7<32>, out a2_782, out a3_783, out a4_784, out a5_785)
	Mem302[s1_109 + 10<i32>:byte] = SLICE(a0_296, byte, 0)
	Mem304[s1_109 + 11<i32>:byte] = SLICE(a0_296 >>u 8<i32>, byte, 0)
	Mem313[s2_110 + 72<i32>:word16] = SLICE(CONVERT(Mem304[s2_110 + 72<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s1_786
	word32 a0_787
	word32 a5_788
	word32 a7_789
	word32 s2_790
	word32 s3_791
	word32 s4_792
	word32 s5_793
	word32 s6_794
	word32 s7_795
	word32 s8_796
	word32 s9_797
	ra = ip4_output_if(ra, s0_254, s1_109, s0_254, 0x4201FED4<32>, 0<32>, 255<i32>, 0<32>, 1<32>, s4, s4, s5_245, s6_119, s7_30, out s0_108, out s1_786, out a0_787, out a3, out a4_250, out a5_788, out a7_789, out s2_790, out s3_791, out s4_792, out s5_793, out s6_794, out s7_795, out s8_796, out s9_797)
l2304767C:
	0<32> = dwArg0128
l23047692_thunk_pbuf_free:
	word32 s1_382
	word32 s0_722
	word32 a0_723
	word32 a1_724
	word32 a2_725
	word32 a3_726
	word32 a4_727
	word32 a5_728
	word32 a7_729
	word32 s2_730
	word32 s3_731
	word32 s4_732
	word32 s5_733
	word32 s6_734
	word32 s8_735
	word32 mstatus_736
	pbuf_free(ra, s0_108, a3, a4_250, dwArg78, mstatus, dwArg0128, out s0_722, out s1_382, out a0_723, out a1_724, out a2_725, out a3_726, out a4_727, out a5_728, out a7_729, out s2_730, out s3_731, out s4_732, out s5_733, out s6_734, out s8_735, out mstatus_736)
	return s1_382
l230475AE:
l23047584:
	word32 s1_756
	word32 a0_757
	word32 a1_758
	word32 a2_759
	word32 a5_760
	word32 a7_761
	word32 s2_762
	word32 s3_763
	word32 s5_764
	word32 s6_765
	word32 s8_766
	ra = pbuf_free(ra, a0_140, a3, a4_166, s4, mstatus, dwArgF8, out s0_108, out s1_756, out a0_757, out a1_758, out a2_759, out a3, out a4_125, out a5_760, out a7_761, out s2_762, out s3_763, out s4, out s5_764, out s6_765, out s8_766, out mstatus)
l23047588:
	word32 s0_691
	word32 a3_695
	word32 a4_696
	word32 a2_694
	word32 a7_698
	word32 s3_699
	word32 a5_697
	word32 s5_701
	word32 s6_702
	word32 s4_700
	word32 s8_703
	word32 s2_459
	word32 a1_693
	word32 a0_692
	word32 mstatus_704
	pbuf_free(ra, s0_108, a3, a4_125, s4, mstatus, dwArgF8, out s0_691, out s1_458, out a0_692, out a1_693, out a2_694, out a3_695, out a4_696, out a5_697, out a7_698, out s2_459, out s3_699, out s4_700, out s5_701, out s6_702, out s8_703, out mstatus_704)
	Mem476[s2_459 + 92<i32>:word16] = SLICE(CONVERT(Mem28[s2_459 + 92<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23047516:
	word32 s3_489
	word32 s0_708
	word32 a0_709
	word32 a1_710
	word32 a2_711
	word32 a3_712
	word32 a4_713
	word32 a5_714
	word32 a7_715
	word32 s2_716
	word32 s4_717
	word32 s5_718
	word32 s6_719
	word32 s8_720
	word32 mstatus_721
	pbuf_free(ra, s0_108, a3_104, a4_105, s4, mstatus, dwArgF8, out s0_708, out s1_458, out a0_709, out a1_710, out a2_711, out a3_712, out a4_713, out a5_714, out a7_715, out s2_716, out s3_489, out s4_717, out s5_718, out s6_719, out s8_720, out mstatus_721)
	Mem505[s3_489 + 80<i32>:word16] = SLICE(CONVERT(Mem28[s3_489 + 80<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23047526:
	0<32> = dwArg0128
	return s1_458
icmp_input_exit:


word32 icmp_dest_unreach(word32 ra, word32 s0, word32 s1, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
//      udp_input
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
icmp_dest_unreach_entry:
l230476CE:
	word32 a0_26
	word32 s0_31
	word32 s3_38
	word32 s5_44
	word32 s6_45
	word32 a1_259
	word32 a2_260
	word32 a5_261
	word32 a7_262
	word32 s8_263
	word32 s4_135
	word32 s1_166
	word32 s2_167
	word32 mstatus_180
	word32 a3_163
	word32 a4_164
	word32 ra_130 = pbuf_alloc(ra, s0, s1, 162<i32>, 36<i32>, 640<i32>, a3, a4, mstatus, dwLoc3C, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_31, out s1_166, out a0_26, out a1_259, out a2_260, out a3_163, out a4_164, out a5_261, out a7_262, out s2_167, out s3_38, out s4_135, out s5_44, out s6_45, out s8_263, out mstatus_180)
	branch a0_26 == 0<32> l23047792
l230476F2:
	word32 a0_51 = Mem22[s0_31 + 4<i32>:word32]
	word32 s2_53 = Mem22[s3_38 + 4<i32>:int32]
	Mem54[s0_31:byte] = 3<8>
	Mem55[s0_31 + 1<i32>:byte] = SLICE(s4_135, byte, 0)
	Mem56[s0_31 + 4<i32>:byte] = 0<8>
	Mem57[s0_31 + 5<i32>:byte] = 0<8>
	Mem58[s0_31 + 6<i32>:byte] = 0<8>
	Mem59[s0_31 + 7<i32>:byte] = 0<8>
	word32 a2_69
	word32 a6_71
	word32 a1_264
	word32 a3_265
	word32 a4_266
	word32 a5_267
	word32 a7_268
	memcpy(Mem59[a0_51 + 4<i32>:word32] + 8<32>, Mem59[s3_38 + 4<i32>:int32], 0x1C<32>, out a1_264, out a2_69, out a3_265, out a4_266, out a5_267, out a6_71, out a7_268)
	word32 s1_132 = a0_51
	word32 a2_269
	word32 a5_270
	word32 a4_126
	word32 a3_125
	branch ip4_route(a2_69, CONVERT(Mem59[s2_53 + 15<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem59[s2_53 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem59[s2_53 + 12<i32>:byte], byte, word32)) | CONVERT(Mem59[s2_53 + 14<i32>:byte], byte, word32) << 16<i32>), out a2_269, out a3_125, out a4_126, out a5_270) == 0<32> l2304778C
l2304774A:
	Mem96[s0_31 + 2<i32>:byte] = 0<8>
	Mem97[s0_31 + 3<i32>:byte] = 0<8>
	word32 a2_282
	word32 a3_283
	word32 a4_284
	word32 a5_285
	word32 a0_100 = inet_chksum(s0_31, CONVERT(Mem97[a0_51 + 10<i32>:uint16], uint16, word32), a4_126, out a2_282, out a3_283, out a4_284, out a5_285)
	Mem106[s0_31 + 2<i32>:byte] = SLICE(a0_100, byte, 0)
	Mem109[s0_31 + 3<i32>:byte] = SLICE(a0_100 >>u 8<i32>, byte, 0)
	Mem115[0x4201FDE0<32>:word16] = SLICE(CONVERT(Mem109[0x4201FDE0<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s0_286
	word32 a0_287
	word32 a5_288
	word32 a7_289
	word32 s2_290
	word32 s3_291
	word32 s5_292
	word32 s6_293
	word32 s7_294
	word32 s8_295
	word32 s9_296
	ra_130 = ip4_output_if(ra_130, s0_31, a0_51, a0_51, 0<32>, fp + -36<i32>, 255<i32>, 0<32>, 1<32>, a6_71, s4_135, s5_44, s6_45, s7, out s0_286, out s1_132, out a0_287, out a3_125, out a4_126, out a5_288, out a7_289, out s2_290, out s3_291, out s4_135, out s5_292, out s6_293, out s7_294, out s8_295, out s9_296)
l2304778C:
	word32 s0_271
	word32 a0_272
	word32 a1_273
	word32 a2_274
	word32 a5_275
	word32 a7_276
	word32 s3_277
	word32 s4_278
	word32 s5_279
	word32 s6_280
	word32 s8_281
	ra_130 = pbuf_free(ra_130, s1_132, a3_125, a4_126, s4_135, mstatus_180, dwArgE8, out s0_271, out s1_166, out a0_272, out a1_273, out a2_274, out a3_163, out a4_164, out a5_275, out a7_276, out s2_167, out s3_277, out s4_278, out s5_279, out s6_280, out s8_281, out mstatus_180)
l23047792:
	s0Out = dwArg0158
	s1Out = s1_166
	a3Out = a3_163
	a4Out = a4_164
	s2Out = s2_167
	s4Out = dwArgF4
	mstatusOut = mstatus_180
	return ra_130
icmp_dest_unreach_exit:


word32 dhcp_server_option_find(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_server_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a1 a4
// Trashed: a0 a1 a4 a5
// Preserved: sp
dhcp_server_option_find_entry:
l230477A2:
	word32 a1_5 = a1 + a0
l230477A8:
	branch a0 >=u a1_5 l230477B4
l230477AC:
	word32 a5_10 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_10 != 255<i32> l230477B8
l230477B8:
	branch a5_10 == a2 l230477B6
l230477BC:
	a0 = a0 + (CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) + 2<32>)
l230477B4:
	a0 = 0<32>
l230477B6:
	a1Out = a1_5
	a4Out = 255<i32>
	return a0
dhcp_server_option_find_exit:


word32 dhcp_client_find_by_ip.isra.0(word32 a1, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_server_recv
// MayUse:  a1:[0..31]
// LiveOut: a0 a1 a3 a4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s8 t0 t1 t3 t4 t5 t6
// Preserved: s0 sp
dhcp_client_find_by_ip.isra.0_entry:
l230477C6:
	word32 a4_13
	word32 a5_14
	word32 a1_16
	word32 a3_18
	word32 a7_80
	word32 a2_78
	word32 a6_79
	memcpy(fp + 0xFFFFFFEC<32>, a1, 4<32>, out a1_16, out a2_78, out a3_18, out a4_13, out a5_14, out a6_79, out a7_80)
	word32 a0_28 = fp + 0xFFFFFFEC<32>
l230477DA:
	branch a0_28 != 0<32> l230477E4
l230477E4:
	a0_28 = Mem11[a4_13 + 12<i32>:word32]
	branch a5_14 == a4_13 l230477DC
l230477EA:
	a0_28 = Mem11[a0_28:word32]
l230477DC:
	a1Out = a1_16
	a3Out = a3_18
	a4Out = a4_13
	s8Out = dwLoc1C
	return a0_28
dhcp_client_find_by_ip.isra.0_exit:


void dhcp_server_recv(word32 ra, word32 a0, word32 a2, word32 a5, word32 s3, word32 s4, word32 s9, word32 mstatus, word32 dwArg04, word32 dwArg38, word32 dwArg44, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
dhcp_server_recv_entry:
l230477EE:
	word32 a0_816
	word32 a3_162 = Mem25[a5:word32]
	word32 a4_100 = CONVERT(Mem25[a2 + 10<i32>:uint16], uint16, word32)
	word32 s0_34 = a2
	branch a4_100 >u 43<i32> l2304783A
l2304783A:
	word32 a0_43
	word32 s5_1298
	word32 s1_1291
	word32 a1_1292
	word32 s3_1297
	word32 a5_1294
	word32 s2_1296
	word32 a7_1295
	word32 s8_1300
	word32 s6_1299
	word32 a2_1293
	ra = pbuf_alloc(ra, a2, a0, 182<i32>, 1500<i32>, 640<i32>, a3_162, a4_100, mstatus, a5, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_34, out s1_1291, out a0_43, out a1_1292, out a2_1293, out a3_162, out a4_100, out a5_1294, out a7_1295, out s2_1296, out s3_1297, out s4, out s5_1298, out s6_1299, out s8_1300, out mstatus)
	branch a0_43 == 0<32> l2304781A
l23047852:
	a4_100 = CONVERT(Mem32[a0_43 + 8<i32>:uint16], uint16, word32)
	branch a4_100 <u CONVERT(Mem32[s0_34 + 8<i32>:uint16], uint16, word32) l2304781A
l2304785E:
	word32 s4_76
	word32 a4_79
	word32 a3_83
	word32 s1_102
	word32 a2_1308
	word32 a5_1309
	word32 s8_1312
	word32 a7_1310
	word32 s3_1311
	word32 s0_1305
	word32 s2_1303
	word32 a0_1302
	word32 s1_1301
	word32 s3_1304
	word32 a1_1307
	word32 a0_1306
	word32 s6_109
	word32 s5_108
	word32 s2_103
	ra = pbuf_free(ra, pbuf_copy(a0_43, s0_34, out s1_1301, out a0_1302, out a3_83, out a4_79, out s2_1303, out s3_1304, out s4_76), a3_83, a4_79, s4_76, mstatus, dwArgE8, out s0_1305, out s1_102, out a0_1306, out a1_1307, out a2_1308, out a3_162, out a4_100, out a5_1309, out a7_1310, out s2_103, out s3_1311, out s4, out s5_108, out s6_109, out s8_1312, out mstatus)
	word32 s0_118 = Mem32[s2_103 + 4<i32>:int32]
	word32 s3_120 = CONVERT(Mem32[s0_118:byte], byte, word32)
	branch s3_120 != 1<32> l23047A90
l23047878:
	a4_100 = 0x63538263<32>
	branch (CONVERT(Mem32[s0_118 + 239<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem32[s0_118 + 237<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem32[s0_118 + 236<i32>:byte], byte, word32)) | CONVERT(Mem32[s0_118 + 238<i32>:byte], byte, word32) << 16<i32>)) != 0x63538263<32> l23047A90
l230478A0:
	word32 s8_133 = CONVERT(Mem32[s0_118 + 2<i32>:byte], byte, word32)
	branch s8_133 >u 6<32> l23047A90
l230478AA:
	word32 s4_139 = CONVERT(Mem32[s2_103 + 8<i32>:uint16], uint16, word32) + -240<i32> << 16<i32>
	s4 = s4_139 >>u 0x10<u32>
	word32 a1_1313
	word32 a0_143 = dhcp_server_option_find(s0_118 + 240<i32>, s4_139 >>u 0x10<u32>, 53<i32>, out a1_1313, out a4_100)
	branch a0_143 == 0<32> l23047A90
l230478CC:
	word32 a4_411
	word32 a3_399
	word32 a1_413
	word32 a1_305
	word32 a5_147 = CONVERT(Mem32[a0_143 + 2<i32>:byte], byte, word32)
	branch a5_147 != s3_120 l23047A94
l23047A94:
	branch a5_147 != 3<32> l23047B8C
l23047B8C:
	a4_100 = 7<32>
	branch a5_147 != 7<32> l23047A90
l23047B92:
	word32 s3_150 = Mem32[s1_102 + 12<i32>:int32]
	s4 = 0<32>
l23047B9C:
	branch s3_150 == 0<32> l23047A90
l23047BA0:
	word32 a1_1461
	word32 a2_1462
	word32 a5_1463
	word32 a0_160 = memcmp(s3_150 + 4<i32>, s0_118 + 28<i32>, CONVERT(Mem32[s0_118 + 2<i32>:byte], byte, word32), out a1_1461, out a2_1462, out a3_162, out a4_100, out a5_1463)
	word32 a5_166 = Mem32[s3_150:int32]
	branch a0_160 != 0<32> l23047BCA
l23047BCA:
	s4 = s3_150
	s3_150 = Mem32[a5_166:int32]
l23047BB4:
	word32 s1_169 = Mem32[a4_100 + 12<i32>:word32]
	branch a4_100 != s3_150 l23047BC4
l23047BC4:
	Mem171[s4:word32] = a5_166
l23047BBA:
	Mem172[a5_166 + 12<i32>:word32] = s1_169
l23047BBC:
	word32 s8_1470
	word32 a7_1466
	word32 s6_1469
	word32 s3_1467
	word32 s5_1468
	word32 a5_1465
	word32 s1_1464
	mem_free(s3_150, a3_162, a4_100, s2_103, s3_150, s4, mstatus, a5, dwLoc38, dwLoc1C, dwArg44, dwArg64, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s1_1464, out a3_162, out a4_100, out a5_1465, out a7_1466, out s2_103, out s3_1467, out s4, out s5_1468, out s6_1469, out s8_1470)
l23047A9A:
	word32 s3_208 = Mem32[s1_102 + 12<i32>:int32]
l23047AA2:
	word32 a1_220
	branch s3_208 != 0<32> l23047B78
l23047B78:
	word32 a5_1380
	word32 a3_1378
	word32 a4_1379
	word32 a2_1377
	branch memcmp(s3_208 + 4<i32>, s0_118 + 28<i32>, s8_133, out a1_220, out a2_1377, out a3_1378, out a4_1379, out a5_1380) == 0<32> l23047BD2
l23047B86:
	s3_208 = Mem32[s3_208:int32]
l23047AA6:
	word32 a4_1381
	word32 a1_230
	word32 a0_229 = dhcp_server_option_find(s0_118 + 240<i32>, s4_139 >>u 0x10<u32>, 50<i32>, out a1_230, out a4_1381)
	branch a0_229 == 0<32> l23047AE0
l23047AB4:
	word32 a4_1402
	word32 a3_1401
	word32 a0_236 = dhcp_client_find_by_ip.isra.0(a0_229 + 2<i32>, out a1_230, out a3_1401, out a4_1402, out s8_133)
	s3_208 = a0_236
	branch a0_236 == 0<32> l23047AE0
l23047AC4:
	word32 a2_1403
	word32 a5_1406
	word32 a3_1404
	word32 a4_1405
	branch memcmp(a0_236 + 4<32>, s0_118 + 28<i32>, CONVERT(Mem32[s0_118 + 2<i32>:byte], byte, word32), out a1_220, out a2_1403, out a3_1404, out a4_1405, out a5_1406) == 0<32> l23047BD2
l23047BD2:
	Mem265[s3_208 + 16<i32>:word32] = 0x80510100<32>
	Mem268[s0_118:byte] = 2<8>
	Mem269[s0_118 + 3<i32>:byte] = 0<8>
	Mem270[s0_118 + 8<i32>:byte] = 0<8>
	Mem271[s0_118 + 9<i32>:byte] = 0<8>
	word32 a7_1413
	word32 a6_1412
	word32 a5_1411
	word32 a1_1407
	word32 a3_1409
	word32 a4_1410
	word32 a2_1408
	memcpy(s0_118 + 20<i32>, a1_220 + 4<32>, 4<32>, out a1_1407, out a2_1408, out a3_1409, out a4_1410, out a5_1411, out a6_1412, out a7_1413)
	Mem292[s0_118 + 237<i32>:byte] = 0x82<8>
	Mem294[s0_118 + 236<i32>:byte] = 0x63<8>
	Mem295[s0_118 + 239<i32>:byte] = 0x63<8>
	Mem296[s0_118 + 44<i32>:byte] = 0<8>
	Mem297[s0_118 + 108<i32>:byte] = 0<8>
	Mem298[s0_118 + 238<i32>:byte] = 0x53<8>
	word32 a3_1415
	word32 a4_1416
	word32 a7_1419
	word32 a6_1418
	word32 a5_1417
	word32 a2_1414
	memcpy(s0_118 + 16<i32>, s3_208 + 12<i32>, 4<32>, out a1_305, out a2_1414, out a3_1415, out a4_1416, out a5_1417, out a6_1418, out a7_1419)
	Mem316[s0_118 + 240<i32>:byte] = 0x35<8>
	Mem319[s0_118 + 241<i32>:byte] = 1<8>
	Mem320[s0_118 + 242<i32>:byte] = 5<8>
l23047AD4:
	word32 a4_1422
	word32 a5_1423
	word32 a2_1421
	word32 a0_1420
	puts(0x2308650C<32>, out a0_1420, out a1_230, out a2_1421, out a4_1422, out a5_1423, out s4, out s8_133)
l23047AE0:
	Mem335[s0_118:byte] = 2<8>
	Mem336[s0_118 + 3<i32>:byte] = 0<8>
	Mem337[s0_118 + 8<i32>:byte] = 0<8>
	Mem338[s0_118 + 9<i32>:byte] = 0<8>
	word32 a3_1384
	word32 a6_1387
	word32 a7_1388
	word32 a5_1386
	word32 a4_1385
	word32 a2_1383
	word32 a1_1382
	memcpy(s0_118 + 20<i32>, a1_230 + 4<32>, 4<32>, out a1_1382, out a2_1383, out a3_1384, out a4_1385, out a5_1386, out a6_1387, out a7_1388)
	Mem359[s0_118 + 237<i32>:byte] = 0x82<8>
	Mem361[s0_118 + 238<i32>:byte] = 0x53<8>
	Mem362[s0_118 + 236<i32>:byte] = 0x63<8>
	Mem363[s0_118 + 239<i32>:byte] = 0x63<8>
	Mem366[s0_118 + 44<i32>:byte] = 0<8>
	Mem367[s0_118 + 108<i32>:byte] = 0<8>
	word32 a1_372
	word32 a2_1391
	word32 a4_1393
	word32 a5_1394
	word32 a3_1392
	word32 a0_1390
	word32 t1_1389
	ra = memset(ra, s0_118 + 16<i32>, 0<32>, 4<32>, out t1_1389, out a0_1390, out a1_372, out a2_1391, out a3_1392, out a4_1393, out a5_1394)
	Mem381[s0_118 + 240<i32>:byte] = 0x35<8>
	Mem383[s0_118 + 241<i32>:byte] = 1<8>
	Mem385[s0_118 + 242<i32>:byte] = 6<8>
	Mem387[s0_118 + 243<i32>:byte] = 0x36<8>
	Mem389[s0_118 + 244<i32>:byte] = 4<8>
	word32 a2_1396
	word32 a4_1397
	word32 a7_1400
	word32 a6_1399
	word32 a5_1398
	word32 a1_1395
	memcpy(s0_118 + 245<i32>, a1_372 + 4<32>, 4<32>, out a1_1395, out a2_1396, out a3_399, out a4_1397, out a5_1398, out a6_1399, out a7_1400)
	Mem408[s0_118 + 249<i32>:byte] = 0xFF<8>
	a4_411 = CONVERT(Mem408[s2_103 + 8<i32>:uint16], uint16, word32)
	branch a4_411 <=u 250<i32> l23047A7E
l23047B72:
	a1_413 = 250<i32>
l230478D4:
	word32 s3_414 = Mem32[s1_102 + 12<i32>:int32]
l230478DC:
	word32 a1_426
	branch s3_414 != 0<32> l23047934
l23047934:
	word32 a3_1315
	word32 a4_1316
	word32 a5_1317
	word32 a2_1314
	branch memcmp(s3_414 + 4<i32>, s0_118 + 28<i32>, s8_133, out a1_426, out a2_1314, out a3_1315, out a4_1316, out a5_1317) == 0<32> l23047970
l23047942:
	s3_414 = Mem32[s3_414:int32]
l230478E0:
	word32 a1_1318
	word32 a4_1319
	word32 a0_435 = dhcp_server_option_find(s0_118 + 240<i32>, s4_139 >>u 0x10<u32>, 50<i32>, out a1_1318, out a4_1319)
	branch a0_435 == 0<32> l23047900
l230478F2:
	word32 a4_1321
	word32 a3_1320
	word32 a0_443 = dhcp_client_find_by_ip.isra.0(a0_435 + 2<i32>, out a1_426, out a3_1320, out a4_1321, out s8_133)
	s3_414 = a0_443
	branch a0_443 != 0<32> l23047970
l23047900:
l23047904:
	word32 a3_468
	word32 a4_469
	word32 s8_1373
	word32 a1_1372
	word32 a0_465 = dhcp_client_find_by_ip.isra.0(s1_102 + 24<i32>, out a1_1372, out a3_468, out a4_469, out s8_1373)
	branch a0_465 == 0<32> l23047948
l23047948:
	word32 a0_487
	word32 a1_1335
	word32 a7_1337
	word32 a5_1336
	word32 s3_1338
	mem_malloc(ra, s0_118, 0x14<32>, a3_468, a4_469, s2_103, mstatus, s4, dwLoc0C, s3, dwArgA8, dwArgC8, dwArgE8, dwArg0108, dwArg0148, out a0_487, out a1_1335, out a3_162, out a4_100, out a5_1336, out a7_1337, out s2_103, out s3_1338, out s4, out s5_108, out s6_109, out s8_133)
	s3_414 = a0_487
	branch a0_487 == 0<32> l23047A90
l23047954:
	word32 a5_515
	word32 a2_1367
	word32 a7_1371
	word32 a4_1369
	word32 a3_1368
	word32 a6_1370
	memcpy(a0_487 + 4<32>, s0_118 + 28<i32>, CONVERT(Mem486[s0_118 + 2<i32>:byte], byte, word32), out a1_426, out a2_1367, out a3_1368, out a4_1369, out a5_515, out a6_1370, out a7_1371)
	Mem528[a0_487 + 12<i32>:word32] = a5_515
	word32 s1_529 = Mem528[a5_515 + 12<i32>:word32]
	Mem530[a0_487:word32] = a5_515
	Mem531[s1_529 + 12<i32>:word32] = a0_487
l23047970:
	Mem535[s3_414 + 16<i32>:word32] = 0x80510100<32>
	Mem539[s0_118:byte] = 2<8>
	Mem540[s0_118 + 3<i32>:byte] = 0<8>
	Mem541[s0_118 + 8<i32>:byte] = 0<8>
	Mem542[s0_118 + 9<i32>:byte] = 0<8>
	word32 a4_1325
	word32 a1_1322
	word32 a2_1323
	word32 a3_1324
	word32 a5_1326
	word32 a7_1328
	word32 a6_1327
	memcpy(s0_118 + 20<i32>, a1_426 + 4<32>, 4<32>, out a1_1322, out a2_1323, out a3_1324, out a4_1325, out a5_1326, out a6_1327, out a7_1328)
	Mem563[s0_118 + 237<i32>:byte] = 0x82<8>
	Mem565[s0_118 + 236<i32>:byte] = 0x63<8>
	Mem566[s0_118 + 239<i32>:byte] = 0x63<8>
	Mem567[s0_118 + 44<i32>:byte] = 0<8>
	Mem568[s0_118 + 108<i32>:byte] = 0<8>
	Mem569[s0_118 + 238<i32>:byte] = 0x53<8>
	word32 a2_1329
	word32 a3_1330
	word32 a4_1331
	word32 a5_1332
	word32 a7_1334
	word32 a6_1333
	memcpy(s0_118 + 16<i32>, s3_414 + 12<i32>, 4<32>, out a1_305, out a2_1329, out a3_1330, out a4_1331, out a5_1332, out a6_1333, out a7_1334)
	Mem588[s0_118 + 240<i32>:byte] = 0x35<8>
	Mem589[s0_118 + 241<i32>:byte] = 1<8>
	Mem590[s0_118 + 242<i32>:byte] = 2<8>
l230479E0:
	Mem594[s0_118 + 243<i32>:byte] = 0x36<8>
	Mem595[s0_118 + 244<i32>:byte] = 4<8>
	word32 a7_1430
	word32 a3_1426
	word32 a5_1428
	word32 a6_1429
	word32 a4_1427
	word32 a2_1425
	word32 a1_1424
	memcpy(s0_118 + 245<i32>, a1_305 + 4<32>, 4<32>, out a1_1424, out a2_1425, out a3_1426, out a4_1427, out a5_1428, out a6_1429, out a7_1430)
	Mem615[s0_118 + 249<i32>:byte] = 0x33<8>
	Mem625[s0_118 + 250<i32>:byte] = 4<8>
	word32 a1_631
	word32 a2_1431
	word32 a3_1432
	word32 a6_1435
	word32 a7_1436
	word32 a5_1434
	word32 a4_1433
	memcpy(s0_118 + 251<i32>, fp + -52<i32>, 4<32>, out a1_631, out a2_1431, out a3_1432, out a4_1433, out a5_1434, out a6_1435, out a7_1436)
	Mem642[s0_118 + 255<i32>:byte] = 1<8>
	Mem643[s0_118 + 256<i32>:byte] = 4<8>
	word32 a1_651
	word32 a7_1442
	word32 a3_1438
	word32 a6_1441
	word32 a4_1439
	word32 a5_1440
	word32 a2_1437
	memcpy(s0_118 + 257<i32>, a1_631 + 8<32>, 4<32>, out a1_651, out a2_1437, out a3_1438, out a4_1439, out a5_1440, out a6_1441, out a7_1442)
	Mem662[s0_118 + 261<i32>:byte] = 6<8>
	Mem663[s0_118 + 262<i32>:byte] = 4<8>
	word32 a1_671
	word32 a6_1447
	word32 a7_1448
	word32 a5_1446
	word32 a3_1444
	word32 a4_1445
	word32 a2_1443
	memcpy(s0_118 + 263<i32>, a1_651 + 4<32>, 4<32>, out a1_671, out a2_1443, out a3_1444, out a4_1445, out a5_1446, out a6_1447, out a7_1448)
	Mem682[s0_118 + 267<i32>:byte] = 3<8>
	Mem683[s0_118 + 268<i32>:byte] = 4<8>
	word32 a1_1449
	word32 a5_1452
	word32 a6_1453
	word32 a7_1454
	word32 a4_1451
	word32 a2_1450
	memcpy(s0_118 + 269<i32>, a1_671 + 4<32>, 4<32>, out a1_1449, out a2_1450, out a3_399, out a4_1451, out a5_1452, out a6_1453, out a7_1454)
	Mem702[s0_118 + 273<i32>:byte] = 0xFF<8>
	s4 = 1<32>
	a4_411 = CONVERT(Mem702[s2_103 + 8<i32>:uint16], uint16, word32)
	branch a4_411 <=u 274<i32> l23047A7E
l23047A74:
	a1_413 = 274<i32>
l23047A78:
	word32 s4_1460
	word32 a2_1456
	word32 a5_1458
	word32 s3_1459
	word32 a3_1457
	word32 s1_1455
	ra = pbuf_realloc(ra, s2_103, a1_413, a3_399, a4_411, s4, mstatus, dwArgD8, out s1_1455, out a2_1456, out a3_1457, out a4_411, out a5_1458, out s2_103, out s3_1459, out s4_1460, out s5_108, out s6_109, out s8_133, out mstatus)
l23047A7E:
	word32 s8_1376
	word32 s7_1375
	word32 s3_1374
	ra = udp_sendto_if(ra, s5_108, s2_103, fp + -56<i32>, s6_109, a4_411, s8_133, mstatus, s4, dwArg38, s9, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out a3_162, out a4_100, out s2_103, out s3_1374, out s4, out s7_1375, out s8_1376, out mstatus)
l23047A90:
	a0_816 = s2_103
l2304790E:
	word32 a3_1339
	word32 a5_1341
	word32 a4_1340
	word32 a0_818 = lwip_htonl(a0_465, out a3_1339, out a4_1340, out a5_1341)
	word32 s1_823 = Mem486[a0_818 + 20<i32>:word32]
	word32 s3_822 = a0_818 + 1<i32>
	word32 a3_1342
	word32 a5_1344
	word32 a4_1343
	word32 a0_824 = lwip_htonl(a0_818, out a3_1342, out a4_1343, out a5_1344)
	branch a0_824 >=u a0_818 + 1<i32> l2304792A
l23047922:
	s1_823 = Mem486[a0_824 + 16<i32>:word32]
	word32 a5_1350
	word32 a3_1348
	word32 a4_1349
	s3_822 = lwip_htonl(a0_824, out a3_1348, out a4_1349, out a5_1350)
l2304792A:
	word32 a4_1346
	word32 a5_1347
	word32 a3_1345
	Mem841[lwip_htonl(s3_822, out a3_1345, out a4_1346, out a5_1347) + 24<i32>:word32] = s1_823
l2304781A:
	a0_816 = s0_34
l2304781C:
	word32 a1_1354
	word32 a5_1358
	word32 s4_1362
	word32 s2_1360
	word32 a7_1359
	word32 s3_1361
	word32 s6_1364
	word32 s5_1363
	word32 mstatus_1366
	word32 s8_1365
	word32 a3_1356
	word32 a4_1357
	word32 a2_1355
	word32 s1_1352
	word32 a0_1353
	word32 s0_1351
	pbuf_free(ra, a0_816, a3_162, a4_100, s4, mstatus, dwArgE8, out s0_1351, out s1_1352, out a0_1353, out a1_1354, out a2_1355, out a3_1356, out a4_1357, out a5_1358, out a7_1359, out s2_1360, out s3_1361, out s4_1362, out s5_1363, out s6_1364, out s8_1365, out mstatus_1366)
	0<32> = dwArg0198
	return
dhcp_server_recv_exit:


word32 dhcp_server_start(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg74, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcpd_start
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0014:[0..31] Stack +0074:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_server_start_entry:
l23047C46:
	word32 a5_19 = Mem5[0x4200DFB8<32>:int32]
l23047C60:
	word32 a0_121
	branch a5_19 != 0<32> l23047C84
l23047C84:
	word32 a5_22 = Mem17[a4 + 4<i32>:word32]
	branch a4 != a0 l23047C9A
l23047C9A:
	a5_19 = Mem17[a5_22:word32]
l23047C8A:
	Mem26[a4 + 16<i32>:word32] = a5_22
	Mem28[a4 + 20<i32>:word32] = a5_22
	Mem30[a4 + 24<i32>:word32] = a5_22
l23047C62:
	word32 a0_47
	word32 s2_57
	word32 s3_58
	word32 s4_59
	word32 s8_268
	word32 s6_267
	word32 s5_266
	word32 a7_265
	word32 a5_264
	word32 a4_263
	word32 a1_262
	mem_malloc(ra, s0, 0x1C<32>, a3, a4, 0x4200DFB8<32>, mstatus, dwLoc0C, dwArg14, dwArg74, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0168, out a0_47, out a1_262, out a3, out a4_263, out a5_264, out a7_265, out s2_57, out s3_58, out s4_59, out s5_266, out s6_267, out s8_268)
	branch a0_47 != 0<32> l23047C9E
l23047C9E:
	word32 a0_72
	word32 a3_75
	word32 a4_76
	word32 a5_272
	word32 a2_271
	word32 a1_270
	word32 t1_269
	word32 ra_78 = memset(ra, a0_47, 0<32>, 0x1C<32>, out t1_269, out a0_72, out a1_270, out a2_271, out a3_75, out a4_76, out a5_272)
	word32 a5_81 = Mem17[s2_57:int32]
	Mem82[a0_47 + 4<i32>:word32] = s4_59
	Mem83[a0_47 + 12<i32>:word32] = 0<32>
	Mem84[a5_81:word32] = a0_47
	Mem86[s2_57:word32] = a0_47
	Mem87[a5_81 + 16<i32>:word32] = a0_47
	word32 a5_88 = Mem87[s3_58:int32]
	Mem89[a5_88 + 20<i32>:word32] = a0_47
	word32 s1_90 = Mem89[a5_88:word32]
	Mem91[a5_88 + 24<i32>:word32] = a0_47
	word32 a4_274
	word32 s1_273
	word32 a5_275
	ra = udp_new(ra_78, s1_90, a3_75, a4_76, mstatus, out s1_273, out a3, out a4_274, out a5_275)
	Mem102[a0_72 + 8<i32>:word32] = a0_47
	branch a0_72 == 0<32> l23047C72
l23047CCE:
	Mem107[a0_72 + 9<i32>:byte] = SLICE(CONVERT(Mem102[a0_72 + 9<i32>:byte], byte, word32) | 32<i32>, byte, 0)
	word32 a4_276
	word32 a5_277
	word32 a0_110 = udp_bind(a0_72, 0x2308DE8C<32>, 67<i32>, out a3, out a4_276, out a5_277)
	udp_recv(a0_110, 0x230477EE<32>, Mem107[a0_110 + 8<i32>:word32])
l23047C96:
	a0_121 = 0<32>
l23047C72:
	a0_121 = 0xFFFFFFFF<32>
l23047C74:
	a0Out = a0_121
	a3Out = a3
	return ra
dhcp_server_start_exit:


void dhcp_server_stop(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg94, word32 dwArgAC, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
dhcp_server_stop_entry:
l23047CFE:
	word32 s0_13 = Mem6[0x4200DFB8<32>:int32]
	word32 s1_12 = 0x4200DFB8<32>
l23047D12:
	branch s0_13 != 0<32> l23047D24
l23047D24:
	word32 s0_16 = Mem11[0x4200E004<32>:word32]
	branch a0 == 0x4200E000<32> l23047D2E
l23047D2E:
	word32 s0_18 = Mem11[a0 + 8<i32>:word32]
	branch a0 == 0<32> l23047D36
l23047D32:
	word32 a0_239
	word32 a2_240
	word32 a5_241
	s1_12 = udp_remove(a0, a3, mstatus, out a0_239, out a2_240, out a3, out a4, out a5_241)
l23047D36:
	Mem33[s1_12:word32] = 0<32>
	word32 s1_228
	word32 a3_229
	word32 a4_230
	word32 a5_231
	word32 a7_232
	word32 s2_233
	word32 s3_234
	word32 s4_235
	word32 s5_236
	word32 s6_237
	word32 s8_238
	mem_free(s0_18, a3, a4, s2, s3, s4, mstatus, s0, dwLoc08, dwArg14, ra, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s1_228, out a3_229, out a4_230, out a5_231, out a7_232, out s2_233, out s3_234, out s4_235, out s5_236, out s6_237, out s8_238)
l23047D2A:
	s0_13 = Mem11[s0_16:word32]
l23047D14:
	word32 a2_212
	word32 s5_220
	word32 a3_213
	word32 a4_214
	word32 a5_215
	word32 s6_221
	word32 s2_217
	word32 a7_216
	word32 s4_219
	word32 s3_218
	word32 a1_211
	word32 a0_210
	word32 s1_209
	word32 s7_222
	word32 s8_223
	word32 s9_224
	word32 s10_225
	word32 s11_226
	word32 t4_227
	printf(ra, 0x23086538<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_209, out a0_210, out a1_211, out a2_212, out a3_213, out a4_214, out a5_215, out a7_216, out s2_217, out s3_218, out s4_219, out s5_220, out s6_221, out s7_222, out s8_223, out s9_224, out s10_225, out s11_226, out t4_227)
l23047D42:
	return
dhcp_server_stop_exit:


void dhcpd_start(word32 ra, word32 s0, word32 s1, word32 s2, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
dhcpd_start_entry:
l23047D4C:
	word32 a0_324
	word32 mstatus_27
	word32 s1_30
	word32 s3_34
	word32 s7_38
	word32 ra_28 = dhcp_stop(ra, s0, s3, s4, s7, mstatus, dwLoc2C, s2, dwLoc18, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, out s1_30, out s3_34, out s7_38, out mstatus_27)
	word32 s1_57
	word32 s0_56 = set_if(ra_28, s1_30, 0x23086584<32>, 0x2307C4CC<32>, 0x23086574<32>, s3_34, s7_38, mstatus_27, dwLoc38, s2, s0, dwLoc0C, dwLoc08, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg38, dwArg48, dwArg68, dwArgE8, out s1_57)
	word32 mstatus_84
	word32 s2_485
	word32 a1_484
	word32 ra_311 = netif_set_up(ra_28, s0_56, s1_57, mstatus_27, dwLoc38, dwLoc30, dwLoc1C, dwArg18, dwArg28, dwArg48, s3, s1, dwArg68, dwArg70, dwArg74, dwArg88, dwArg98, dwArgC8, dwArg0148, out a1_484, out s2_485, out mstatus_84)
	word32 a3_488
	word32 a4_489
	word32 a5_490
	word32 a6_491
	word32 a2_487
	word32 a1_486
	word32 a7_492
	memcpy(fp + -52<i32>, s0_56 + 1412<i32>, 0xE<32>, out a1_486, out a2_487, out a3_488, out a4_489, out a5_490, out a6_491, out a7_492)
	word32 a1_493
	word32 a2_494
	word32 a4_495
	word32 a5_496
	word32 a3_124
	word32 a0_127 = strchr(fp + -52<i32>, 46<i32>, out a1_493, out a2_494, out a3_124, out a4_495, out a5_496)
	word32 dwLoc28_407 = CONVERT(SLICE(s2, word16, 0), word16, uint32)
	branch a0_127 != 0<32> l23047DC2
l23047DC2:
	word32 a1_497
	word32 a2_498
	word32 a4_499
	word32 a5_500
	word32 a0_138 = strchr(a0_127 + 1<32>, 46<i32>, out a1_497, out a2_498, out a3_124, out a4_499, out a5_500)
	branch a0_138 == 0<32> l23047DA6
l23047DCE:
	word32 a1_501
	word32 a2_502
	word32 a4_503
	word32 a5_504
	word32 a0_149 = strchr(a0_138 + 1<32>, 46<i32>, out a1_501, out a2_502, out a3_124, out a4_503, out a5_504)
	branch a0_149 == 0<32> l23047DA6
l23047DDA:
	word32 a3_186
	word32 s3_217
	word32 s2_241
	word32 a3_256
	word32 a3_278
	word32 a4_279
	word32 s1_282
	word32 a0_298
	word32 s0_505
	word32 s1_506
	word32 a0_507
	word32 a5_508
	word32 s2_509
	word32 s3_510
	word32 s4_511
	word32 s5_512
	word32 s6_513
	word32 s7_514
	word32 s9_515
	word32 s10_516
	word32 s11_517
	word32 a0_518
	word32 a4_519
	word32 a5_520
	word32 s4_521
	word32 s1_522
	word32 a0_523
	word32 a1_524
	word32 a2_525
	word32 a3_526
	word32 a4_527
	word32 a5_528
	word32 a7_529
	word32 s2_530
	word32 s4_531
	word32 s5_532
	word32 s6_533
	word32 s7_534
	word32 s8_535
	word32 s9_536
	word32 s10_537
	word32 s11_538
	word32 t4_539
	word32 s0_540
	word32 s1_541
	word32 a0_542
	word32 a5_543
	word32 s3_544
	word32 s4_545
	word32 s5_546
	word32 s6_547
	word32 s7_548
	word32 s9_549
	word32 s10_550
	word32 s11_551
	word32 a0_552
	word32 a4_553
	word32 a5_554
	word32 s4_555
	word32 a0_556
	word32 a1_557
	word32 a2_558
	word32 a5_559
	word32 a7_560
	word32 s2_561
	word32 s3_562
	word32 s4_563
	word32 s5_564
	word32 s6_565
	word32 s7_566
	word32 s8_567
	word32 s9_568
	word32 s10_569
	word32 s11_570
	word32 t4_571
	ra_311 = dhcp_server_start(printf(sprintf(printf(sprintf(ra_311, a0_149 + 1<i32>, 0x230899B8<32>, dwLoc28_407, dwLoc08, dwArg24, dwArg40, dwArg44, dwArg68, dwArg8C, out s0_505, out s1_506, out a0_507, out a5_508, out s2_509, out s3_510, out s4_511, out s5_512, out s6_513, out s7_514, out s9_515, out s10_516, out s11_517), 0x230865B8<32>, a3_186, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_522, out a0_523, out a1_524, out a2_525, out a3_526, out a4_527, out a5_528, out a7_529, out s2_530, out s3_217, out s4_531, out s5_532, out s6_533, out s7_534, out s8_535, out s9_536, out s10_537, out s11_538, out t4_539), ip4addr_aton(fp + -52<i32>, fp + -60<i32>, out a0_518, out a3_186, out a4_519, out a5_520, out s4_521), s3_217 + -1608<i32>, dwLoc28_407, dwLoc08, dwArg24, dwArg40, dwArg44, dwArg68, dwArg8C, out s0_540, out s1_541, out a0_542, out a5_543, out s2_241, out s3_544, out s4_545, out s5_546, out s6_547, out s7_548, out s9_549, out s10_550, out s11_551), s2_241 + 1464<i32>, a3_256, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_282, out a0_556, out a1_557, out a2_558, out a3_278, out a4_279, out a5_559, out a7_560, out s2_561, out s3_562, out s4_563, out s5_564, out s6_565, out s7_566, out s8_567, out s9_568, out s10_569, out s11_570, out t4_571), ip4addr_aton(fp + -52<i32>, fp + -56<i32>, out a0_552, out a3_256, out a4_553, out a5_554, out s4_555), s1_282, a3_278, a4_279, mstatus_84, dwLoc2C, dwArg34, dwArg88, dwArgA8, dwArgC8, dwArgE8, dwArg0128, out a0_298, out a3_124)
	branch a0_298 == 0<32> l23047DB4
l23047E32:
	a0_324 = 0x230865D0<32>
l23047DA6:
	a0_324 = 0x23086594<32>
l23047DB0:
	word32 s1_572
	word32 a0_573
	word32 a1_574
	word32 a2_575
	word32 a3_576
	word32 a4_577
	word32 a5_578
	word32 a7_579
	word32 s2_580
	word32 s3_581
	word32 s4_582
	word32 s5_583
	word32 s6_584
	word32 s7_585
	word32 s8_586
	word32 s9_587
	word32 s10_588
	word32 s11_589
	word32 t4_590
	printf(ra_311, a0_324, a3_124, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_572, out a0_573, out a1_574, out a2_575, out a3_576, out a4_577, out a5_578, out a7_579, out s2_580, out s3_581, out s4_582, out s5_583, out s6_584, out s7_585, out s8_586, out s9_587, out s10_588, out s11_589, out t4_590)
l23047DB4:
	return
dhcpd_start_exit:


void tcpc_entry(word32 ra, word32 s0, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg3C, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
tcpc_entry_entry:
l23047E3C:
	word32 a2_515
	word32 a5_518
	word32 s5_471
	word32 s0_26 = Mem24[0x4200DFC0<32>:int32]
	Mem35[0x4200DFC0<32>:word32] = s0_26 + 1<i32>
	word32 a5_37
	word32 a3_41
	word32 a4_42
	word32 s1_45
	word32 a0_763
	word32 t4_777
	word32 s11_776
	word32 s6_771
	word32 s7_772
	word32 s8_773
	word32 s9_774
	word32 s10_775
	word32 a7_766
	word32 s2_767
	word32 s3_768
	word32 s4_769
	word32 s5_770
	word32 a1_764
	word32 a2_765
	word32 ra_44 = printf(ra, 0x2308661C<32>, s0_26, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_45, out a0_763, out a1_764, out a2_765, out a3_41, out a4_42, out a5_37, out a7_766, out s2_767, out s3_768, out s4_769, out s5_770, out s6_771, out s7_772, out s8_773, out s9_774, out s10_775, out s11_776, out t4_777)
	word32 a0_60
	word32 a3_63
	word32 s3_785
	word32 s4_786
	word32 s8_787
	word32 a2_780
	word32 a4_781
	word32 a5_782
	word32 a6_783
	word32 s2_784
	word32 a1_779
	word32 s1_778
	pvPortMalloc(ra_44, s1_45, 1024<i32>, a3_41, a4_42, a5_37, mstatus, dwLoc10, dwLoc0C, dwArg3C, dwArgE8, dwArg0128, out s1_778, out a0_60, out a1_779, out a2_780, out a3_63, out a4_781, out a5_782, out a6_783, out s2_784, out s3_785, out s4_786, out s8_787)
	branch a0_60 != 0<32> l23047EB4
l23047EB4:
	word32 a2_460
	word32 a5_463
	word32 s1_467
	word32 s5_90
	word32 s2_792
	word32 s3_793
	word32 a4_791
	word32 a3_790
	word32 a1_788
	word32 a2_789
	word32 a0_100 = lwip_socket(ra_44, 1<32>, 6<32>, a3_63, mstatus, dwLoc1C, dwArg18, dwArg58, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArgF8, out a1_788, out a2_789, out a3_790, out a4_791, out s2_792, out s3_793, out s5_90)
	branch a0_100 >= 0<32> l23047EE2
l23047EE2:
	word32 a2_406
	word32 ra_410
	word32 s2_414
	word32 a5_810
	lwip_htons(0x1FFFB58<32>, out a5_810)
	word32 a0_110
	word32 a3_811
	ipaddr_addr(s5_90, out a0_110, out a3_811)
	word32 a0_132
	word32 a3_135
	word32 s4_817
	word32 s3_816
	word32 a2_813
	word32 a4_814
	word32 s2_815
	word32 a1_812
	lwip_connect(a0_100, fp + -64<i32>, mstatus, dwLoc1C, dwLoc08, a0_110, dwArg78, out a0_132, out a1_812, out a2_813, out a3_135, out a4_814, out s2_815, out s3_816, out s4_817)
	branch a0_132 >= 0<32> l23047F26
l23047F26:
	word32 s2_172
	word32 s1_844
	word32 a0_845
	word32 a1_846
	word32 a2_847
	word32 a3_848
	word32 a4_849
	word32 a5_850
	word32 a7_851
	word32 s3_852
	word32 s4_853
	word32 s5_854
	word32 s6_855
	word32 s7_856
	word32 s8_857
	word32 s9_858
	word32 s10_859
	word32 s11_860
	word32 t4_861
	word32 ra_168 = printf(ra_44, 0x230866F4<32>, a3_135, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_844, out a0_845, out a1_846, out a2_847, out a3_848, out a4_849, out a5_850, out a7_851, out s2_172, out s3_852, out s4_853, out s5_854, out s6_855, out s7_856, out s8_857, out s9_858, out s10_859, out s11_860, out t4_861)
	word32 a0_862
	word32 a3_863
	word32 s2_864
	word32 s3_865
	word32 s4_866
	word32 s6_867
	word32 s1_198
	lwip_setsockopt(s2_172, 6<32>, 1<32>, fp + -68<i32>, mstatus, dwLoc4C, 1<32>, s5, dwArg68, dwArg88, dwArgA8, dwArgC8, out s1_198, out a0_862, out a3_863, out s2_864, out s3_865, out s4_866, out s6_867)
	word32 t1_868
	word32 a0_869
	word32 a1_870
	word32 a2_871
	word32 a3_872
	word32 a4_873
	word32 a5_874
	word32 ra_221 = memset(ra_168, s1_198, 0<32>, 1024<i32>, out t1_868, out a0_869, out a1_870, out a2_871, out a3_872, out a4_873, out a5_874)
	word32 s7_225 = 0x23086000<32>
l23047F68:
	word32 a0_392
	word32 s2_250
	word32 s0_967
	word32 s1_968
	word32 a0_969
	word32 a1_970
	word32 a2_971
	word32 a3_972
	word32 a4_973
	word32 a5_974
	word32 a7_975
	word32 s3_976
	word32 s4_977
	word32 s5_978
	word32 s6_979
	word32 s7_980
	word32 s8_981
	word32 s9_982
	word32 s10_983
	word32 s11_984
	word32 ra_245 = snprintf(ra_221, s1_198, 1024<i32>, s7_225 + 1844<i32>, s6, dwLoc18, dwArg14, dwArg30, 1<32>, dwArg58, dwArg7C, out s0_967, out s1_968, out a0_969, out a1_970, out a2_971, out a3_972, out a4_973, out a5_974, out a7_975, out s2_250, out s3_976, out s4_977, out s5_978, out s6_979, out s7_980, out s8_981, out s9_982, out s10_983, out s11_984)
	word32 s8_280
	word32 a3_985
	word32 a0_265 = lwip_write(s2_250, mstatus, dwLoc28, dwArg18, dwArg58, out a3_985, out s8_280)
	word32 a3_288 = a0_265
	branch a0_265 >= 0<32> l23047FA0
l23047FA0:
	word32 s1_302
	word32 s2_305
	word32 s3_306
	word32 s4_307
	word32 a0_318
	word32 s6_334
	word32 a0_901
	word32 a1_902
	word32 a2_903
	word32 a3_904
	word32 a4_905
	word32 a5_906
	word32 a7_907
	word32 s5_908
	word32 s6_909
	word32 s7_910
	word32 s8_911
	word32 s9_912
	word32 s10_913
	word32 s11_914
	word32 t4_915
	word32 s0_916
	word32 a3_917
	ra_245 = lwip_read(printf(ra_245, s8_280 + 1908<i32>, a0_265, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_302, out a0_901, out a1_902, out a2_903, out a3_904, out a4_905, out a5_906, out a7_907, out s2_305, out s3_306, out s4_307, out s5_908, out s6_909, out s7_910, out s8_911, out s9_912, out s10_913, out s11_914, out t4_915), s1_302, s2_305, s1_302, 1024<i32>, s2_305, s3_306, s4_307, mstatus, dwLoc48, s8, s6, dwLoc28, dwLoc18, dwArg08, dwArg18, a0_110, s5, dwArgE8, out s0_916, out a0_318, out a3_917, out s6_334, out mstatus)
	a3_288 = a0_318
	branch a0_318 >= 0<32> l23047FD2
l23047FD2:
	word32 a5_351
	word32 a2_354
	word32 a3_355
	word32 a4_356
	word32 s1_926
	word32 a0_927
	word32 a1_928
	word32 a7_929
	word32 s2_930
	word32 s3_931
	word32 s4_932
	word32 s5_933
	word32 s6_934
	word32 s8_935
	word32 s9_936
	word32 s10_937
	word32 s11_938
	word32 t4_939
	ra_221 = printf(ra_245, s6_334 + 2020<i32>, a0_318, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_926, out a0_927, out a1_928, out a2_354, out a3_355, out a4_356, out a5_351, out a7_929, out s2_930, out s3_931, out s4_932, out s5_933, out s6_934, out s7_225, out s8_935, out s9_936, out s10_937, out s11_938, out t4_939)
	word32 a0_940
	word32 a1_941
	word32 a2_942
	word32 a3_943
	word32 a4_944
	word32 a5_945
	word32 s2_946
	word32 s3_947
	word32 s4_948
	word32 s8_949
	vTaskDelay(1000<i32>, a2_354, a3_355, a4_356, a5_351, mstatus, s0, dwLoc28, dwArgE8, dwArg0128, out s1_198, out a0_940, out a1_941, out a2_942, out a3_943, out a4_944, out a5_945, out s2_946, out s3_947, out s4_948, out s8_949)
l23047FC2:
	a0_392 = 0x230867B0<32>
l23047F8C:
	a0_392 = 0x23086740<32>
l23047F9A:
	word32 s1_950
	word32 a0_951
	word32 a1_952
	word32 a3_953
	word32 a4_954
	word32 a5_955
	word32 a7_956
	word32 s3_957
	word32 s4_958
	word32 s5_959
	word32 s6_960
	word32 s7_961
	word32 s8_962
	word32 s9_963
	word32 s10_964
	word32 s11_965
	word32 t4_966
	ra_410 = printf(ra_245, a0_392, a3_288, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_950, out a0_951, out a1_952, out a2_406, out a3_953, out a4_954, out a5_955, out a7_956, out s2_414, out s3_957, out s4_958, out s5_959, out s6_960, out s7_961, out s8_962, out s9_963, out s10_964, out s11_965, out t4_966)
l23047F0C:
	word32 s1_875
	word32 a0_876
	word32 a1_877
	word32 a3_878
	word32 a4_879
	word32 a5_880
	word32 a7_881
	word32 s3_882
	word32 s4_883
	word32 s5_884
	word32 s6_885
	word32 s7_886
	word32 s8_887
	word32 s9_888
	word32 s10_889
	word32 s11_890
	word32 t4_891
	ra_410 = printf(ra_44, 0x230866C8<32>, a3_135, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_875, out a0_876, out a1_877, out a2_406, out a3_878, out a4_879, out a5_880, out a7_881, out s2_414, out s3_882, out s4_883, out s5_884, out s6_885, out s7_886, out s8_887, out s9_888, out s10_889, out s11_890, out t4_891)
l23047F1E:
	word32 a0_918
	word32 a1_919
	word32 a3_920
	word32 a4_921
	word32 s2_922
	word32 s3_923
	word32 s4_924
	word32 s6_925
	lwip_close(ra_410, s2_414, a2_406, mstatus, dwLoc08, a0_110, dwArg68, dwArg78, dwArg88, dwArgD8, out s1_467, out a0_918, out a1_919, out a2_460, out a3_920, out a4_921, out a5_463, out s2_922, out s3_923, out s4_924, out s5_471, out s6_925)
l23047EC6:
	word32 a4_821
	word32 a3_820
	word32 a1_819
	word32 a0_818
	word32 a7_822
	word32 s2_823
	word32 s3_824
	word32 s4_825
	word32 s6_826
	word32 s7_827
	word32 s8_828
	word32 s9_829
	word32 s10_830
	word32 s11_831
	word32 t4_832
	printf(ra_44, 0x23086684<32>, a0_100, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_467, out a0_818, out a1_819, out a2_460, out a3_820, out a4_821, out a5_463, out a7_822, out s2_823, out s3_824, out s4_825, out s5_471, out s6_826, out s7_827, out s8_828, out s9_829, out s10_830, out s11_831, out t4_832)
l23047EDA:
	word32 s0_892
	word32 s1_893
	word32 a0_894
	word32 a1_895
	word32 a3_896
	word32 a4_897
	word32 a6_898
	word32 s4_899
	word32 t3_900
	vPortFree(s1_467, a2_460, a5_463, mstatus, dwArg0108, dwArg0148, out s0_892, out s1_893, out a0_894, out a1_895, out a2_515, out a3_896, out a4_897, out a5_518, out a6_898, out s4_899, out t3_900)
l23047E84:
	word32 t4_809
	word32 s9_806
	word32 s10_807
	word32 s11_808
	word32 s6_803
	word32 s7_804
	word32 s8_805
	word32 s2_800
	word32 s3_801
	word32 s4_802
	word32 a1_796
	word32 a3_797
	word32 a4_798
	word32 a7_799
	word32 s1_794
	word32 a0_795
	printf(ra_44, 0x23086650<32>, a3_63, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_794, out a0_795, out a1_796, out a2_515, out a3_797, out a4_798, out a5_518, out a7_799, out s2_800, out s3_801, out s4_802, out s5_471, out s6_803, out s7_804, out s8_805, out s9_806, out s10_807, out s11_808, out t4_809)
l23047E96:
	word32 s0_833
	word32 s1_834
	word32 a0_835
	word32 a1_836
	word32 a2_837
	word32 a3_838
	word32 a4_839
	word32 a5_840
	word32 a6_841
	word32 s4_842
	word32 t3_843
	vPortFree(s5_471, a2_515, a5_518, mstatus, dwArg0108, dwArg0148, out s0_833, out s1_834, out a0_835, out a1_836, out a2_837, out a3_838, out a4_839, out a5_840, out a6_841, out s4_842, out t3_843)
	return
tcpc_entry_exit:


void tcpclient_cmd(word32 ra, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0164)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0164:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
tcpclient_cmd_entry:
l23047FEE:
	branch a2 == 2<32> l23048012
l23048012:
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 a0_23
	word32 a3_26
	word32 a1_243
	word32 a2_244
	word32 s1_245
	word32 a2_246
	word32 a4_247
	word32 a5_248
	word32 a6_249
	word32 s2_250
	word32 s3_251
	word32 s4_252
	word32 s8_253
	word32 a1_24
	pvPortMalloc(ra, Mem9[a0 + 4<i32>:word32], strlen(a0, out a1_243, out a2_244, out a3_16, out a4_17, out a5_18) + 4<32>, a3_16, a4_17, a5_18, mstatus, dwArg10, dwArg14, dwArg5C, dwArg0108, dwArg0148, out s1_245, out a0_23, out a1_24, out a2_246, out a3_26, out a4_247, out a5_248, out a6_249, out s2_250, out s3_251, out s4_252, out s8_253)
	branch a0_23 != 0<32> l23048030
l23048024:
	word32 s1_289
	word32 a0_290
	word32 a2_291
	word32 a3_292
	word32 a4_293
	word32 a5_294
	word32 a7_295
	word32 s2_296
	word32 s3_297
	word32 s4_298
	word32 s5_299
	word32 s6_300
	word32 s7_301
	word32 s8_302
	word32 s9_303
	word32 s10_304
	word32 s11_305
	word32 t4_306
	ra = printf(ra, 0x23086858<32>, a3_26, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_289, out a0_290, out a1_24, out a2_291, out a3_292, out a4_293, out a5_294, out a7_295, out s2_296, out s3_297, out s4_298, out s5_299, out s6_300, out s7_301, out s8_302, out s9_303, out s10_304, out s11_305, out t4_306)
l23048030:
	word32 a4_273
	word32 a5_274
	strcpy(a0_23, a1_24, out a4_273, out a5_274)
	Mem80[0x4200DFBC<32>:byte] = SLICE(CONVERT(Mem9[0x4200DFBC<32>:byte], byte, word32) + 1<i32>, byte, 0)
	word32 a4_86
	word32 a5_87
	word32 s0_90
	word32 s1_91
	word32 s4_96
	word32 a0_275
	word32 a1_276
	word32 a2_277
	word32 a3_278
	word32 a7_279
	word32 s2_280
	word32 s3_281
	word32 s5_282
	word32 s6_283
	word32 s7_284
	word32 s8_285
	word32 s9_286
	word32 s10_287
	word32 s11_288
	aos_task_new(snprintf(ra, fp + -48<i32>, 32<i32>, 0x23086880<32>, dwLoc18, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C, out s0_90, out s1_91, out a0_275, out a1_276, out a2_277, out a3_278, out a4_86, out a5_87, out a7_279, out s2_280, out s3_281, out s4_96, out s5_282, out s6_283, out s7_284, out s8_285, out s9_286, out s10_287, out s11_288), s1_91, 0x23047E3C<32>, s0_90, 0xFFF800<32>, a4_86, a5_87, s4_96, mstatus, dwLoc2C, dwLoc10, dwLoc0C, dwArg78, dwArg98, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0164)
l23047FFC:
	word32 s1_254
	word32 a0_255
	word32 a1_256
	word32 a2_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	word32 a7_261
	word32 s2_262
	word32 s3_263
	word32 s4_264
	word32 s5_265
	word32 s6_266
	word32 s7_267
	word32 s8_268
	word32 s9_269
	word32 s10_270
	word32 s11_271
	word32 t4_272
	printf(ra, 0x23086820<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_254, out a0_255, out a1_256, out a2_257, out a3_258, out a4_259, out a5_260, out a7_261, out s2_262, out s3_263, out s4_264, out s5_265, out s6_266, out s7_267, out s8_268, out s9_269, out s10_270, out s11_271, out t4_272)
l23048008:
	return
tcpclient_cmd_exit:


void network_netutils_tcpclinet_cli_register()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
network_netutils_tcpclinet_cli_register_entry:
l23048076:
	return
network_netutils_tcpclinet_cli_register_exit:


void TCP_Server(word32 ra, word32 s1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s9, word32 s10, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgB8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s3:[0..31] s9:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
TCP_Server_entry:
	uint16 wLoc9E_1986 = SLICE(dwLocA0, uint16, 16)
l2304807A:
	word32 ra_1098
	word32 s3_156
	word32 a0_39
	word32 a3_108
	word32 a4_2036
	word32 a0_2033
	word32 a4_2030
	word32 a1_2027
	word32 a5_2024
	word32 a2_2021
	word32 t1_2018
	word32 a3_2015
	word32 a1_2013
	word32 a3_2008
	word32 s8_2003
	word32 a5_1998
	word32 s1_1993
	word32 a2_2035
	word32 a3_2029
	word32 a0_2026
	word32 a4_2023
	word32 a1_2020
	word32 a5_2017
	word32 t1_2032
	word32 a5_2031
	word32 a2_2014
	word32 a2_2028
	word32 t1_2025
	word32 a3_2022
	word32 a0_2019
	word32 a4_2016
	word32 a5_2037
	word32 a1_2034
	word32 t1_2011
	word32 a0_2012
	word32 a4_2009
	word32 a5_2010
	word32 a1_2006
	word32 a2_2007
	word32 t1_2004
	word32 a0_2005
	word32 s3_2001
	word32 s4_2002
	word32 a6_1999
	word32 s2_2000
	word32 a3_1996
	word32 a4_1997
	word32 a1_1994
	word32 a2_1995
	word32 ra_111 = memset(memset(memset(memset(memset(ra, a0_39, 0<32>, pvPortMalloc(ra, s1, 0x2FFF800<32>, a3, a4, 1<32>, mstatus, dwLocA0, dwLoc9C, dwLoc54, dwArg58, dwArg98, out s1_1993, out a0_39, out a1_1994, out a2_1995, out a3_1996, out a4_1997, out a5_1998, out a6_1999, out s2_2000, out s3_2001, out s4_2002, out s8_2003) + -2048<i32>, out t1_2004, out a0_2005, out a1_2006, out a2_2007, out a3_2008, out a4_2009, out a5_2010), fp + -84<i32>, 0<32>, 0x14<32>, out t1_2011, out a0_2012, out a1_2013, out a2_2014, out a3_2015, out a4_2016, out a5_2017), fp + -124<i32>, 0<32>, 0x14<32>, out t1_2018, out a0_2019, out a1_2020, out a2_2021, out a3_2022, out a4_2023, out a5_2024), fp + -104<i32>, 0<32>, 0x14<32>, out t1_2025, out a0_2026, out a1_2027, out a2_2028, out a3_2029, out a4_2030, out a5_2031), fp + -144<i32>, 0<32>, 0x14<32>, out t1_2032, out a0_2033, out a1_2034, out a2_2035, out a3_108, out a4_2036, out a5_2037)
	word32 a3_119
	word32 s3_2042
	word32 a2_2039
	word32 s2_2041
	word32 a1_2038
	word32 s5_2043
	word32 a4_2040
	branch lwip_socket(ra_111, 1<32>, 6<32>, a3_108, mstatus, dwLocAC, s2, dwLoc38, s1, dwArg18, dwArg28, dwArg48, dwArg58, dwArg68, out a1_2038, out a2_2039, out a3_119, out a4_2040, out s2_2041, out s3_2042, out s5_2043) >= 0<32> l23048158
l23048158:
	word32 s9_2058
	word32 a1_2046
	word32 s1_2044
	word32 a0_2045
	word32 s11_2060
	word32 t4_2061
	word32 s10_2059
	word32 a3_2048
	word32 a4_2049
	word32 a7_2051
	word32 a5_2050
	word32 a2_2047
	word32 s7_2056
	word32 s8_2057
	word32 s5_2054
	word32 s6_2055
	word32 s2_2052
	word32 s4_2053
	ra_1098 = printf(ra_111, 0x230868A0<32>, a3_119, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, dwLoc48, dwLoc24, out s1_2044, out a0_2045, out a1_2046, out a2_2047, out a3_2048, out a4_2049, out a5_2050, out a7_2051, out s2_2052, out s3_156, out s4_2053, out s5_2054, out s6_2055, out s7_2056, out s8_2057, out s9_2058, out s10_2059, out s11_2060, out t4_2061)
l230480EC:
	word32 a5_168
	word32 a2_171
	word32 s4_181
	word32 s5_2070
	word32 s7_2072
	word32 s8_2073
	word32 s10_2075
	word32 s9_2074
	word32 s6_2071
	word32 s11_2076
	word32 t4_2077
	word32 a0_2063
	word32 s1_2062
	word32 s2_2068
	word32 s3_2069
	word32 a4_2066
	word32 a7_2067
	word32 a1_2064
	word32 a3_2065
	ra_1098 = printf(ra_111, 0x23086888<32>, a3_119, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, dwLoc48, dwLoc24, out s1_2062, out a0_2063, out a1_2064, out a2_171, out a3_2065, out a4_2066, out a5_168, out a7_2067, out s2_2068, out s3_2069, out s4_181, out s5_2070, out s6_2071, out s7_2072, out s8_2073, out s9_2074, out s10_2075, out s11_2076, out t4_2077)
	word32 a2_190
	word32 a3_191
	word32 a4_192
	word32 a5_193
	word32 a1_2081
	word32 s4_2083
	word32 t3_2084
	word32 a6_2082
	word32 a0_2080
	word32 s0_2078
	word32 s1_2079
	vPortFree(s4_181, a2_171, a5_168, mstatus, dwArg78, dwArgB8, out s0_2078, out s1_2079, out a0_2080, out a1_2081, out a2_190, out a3_191, out a4_192, out a5_193, out a6_2082, out s4_2083, out t3_2084)
	s3_156 = vTaskDelete(0<32>, a2_190, a3_191, a4_192, a5_193, mstatus)
l23048104:
	word32 a0_1285
	word32 a0_227
	word32 s3_238
	word32 s4_2091
	word32 s6_2092
	word32 s1_2089
	word32 s2_2090
	word32 a3_1293
	word32 s0_235 = lwip_setsockopt(s3_156, 0xFFFFFF<32>, 4<32>, fp + -204<i32>, mstatus, dwLocDC, dwLoc5C, dwLoc48, dwLoc28, s9, dwArg18, dwArg38, out s1_2089, out a0_227, out a3_1293, out s2_2090, out s3_238, out s4_2091, out s6_2092)
	branch a0_227 != 0xFFFFFFFF<32> l23048168
l23048168:
	word32 a5_2085
	lwip_htons(s0_235 + 1054<i32>, out a5_2085)
	word32 a3_2086
	word32 a4_2087
	word32 a5_2088
	word32 a0_258 = lwip_htonl(0<32>, out a3_2086, out a4_2087, out a5_2088)
	word32 a0_266
	word32 s3_277
	lwip_bind(s3_238, fp + -176<i32>, mstatus, dwLocAC, dwLoc98, 1<32>, dwLoc18, out a0_266, out a3_1293, out s3_277)
	dwLoc48 = a0_258
	branch a0_266 >= 0<32> l2304819A
l2304819A:
	word32 a0_291
	word32 s2_2093
	lwip_listen(s3_277, 5<32>, mstatus, dwLoc9C, s10, a0_258, s9, out a0_291, out a3_1293, out s2_2093)
	branch a0_291 >= 0<32> l230481B0
l230481B0:
	word32 a3_322
	word32 s5_356
	word32 s11_2161
	word32 t4_2162
	word32 s10_2160
	word32 s6_2156
	word32 a7_2152
	word32 a2_2148
	word32 t4_2144
	word32 s8_2140
	word32 s4_2136
	word32 s1_2127
	word32 s8_2158
	word32 s7_2157
	word32 s9_2159
	word32 s3_2154
	word32 s2_2153
	word32 s4_2155
	word32 a4_2150
	word32 a3_2149
	word32 a5_2151
	word32 a0_2146
	word32 s1_2145
	word32 a1_2147
	word32 s10_2142
	word32 s9_2141
	word32 s11_2143
	word32 s6_2138
	word32 s5_2137
	word32 s7_2139
	word32 a0_2128
	word32 s2_2134
	word32 s3_2135
	word32 a4_2131
	word32 a5_2132
	word32 a7_2133
	word32 a1_2129
	word32 a2_2130
	ra_1098 = printf(printf(ra_1098, 0x230868E0<32>, a3_1293, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2127, out a0_2128, out a1_2129, out a2_2130, out a3_322, out a4_2131, out a5_2132, out a7_2133, out s2_2134, out s3_2135, out s4_2136, out s5_2137, out s6_2138, out s7_2139, out s8_2140, out s9_2141, out s10_2142, out s11_2143, out t4_2144), 0x2308690C<32>, a3_322, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2145, out a0_2146, out a1_2147, out a2_2148, out a3_2149, out a4_2150, out a5_2151, out a7_2152, out s2_2153, out s3_2154, out s4_2155, out s5_356, out s6_2156, out s7_2157, out s8_2158, out s9_2159, out s10_2160, out s11_2161, out t4_2162)
	dwLocD8 = 0x10<32>
	word32 a5_2163
	word32 a0_365 = xTaskGetTickCount(out a5_2163)
	word32 s0_368 = 0<32>
l230481D6:
	Mem375[fp + -104<i32> + s0_368:word32] = a0_365
	word32 a1_2164
	word32 a5_2167
	word32 a3_2165
	word32 a4_2166
	word32 a2_1094
	Mem395[atoi(s5_356, out a1_2164, out a2_1094, out a3_2165, out a4_2166, out a5_2167):word32] = fp + -144<i32> + s0_368
	s0_368 = s0_368 + 4<32>
	branch s0_368 != 0x14<32> l230481D6
l230481F0:
l230481FC:
	word32 s0_1389 = 1<32>
l23048202:
	word32 a5_407 = 0<32>
l23048206:
	Mem413[fp + -200<i32> + a5_407:byte] = 0<8>
	a5_407 = a5_407 + 1<32>
	branch a5_407 != 8<32> l23048206
l23048214:
	word32 s8_416 = s3
	word32 s10_427 = 0<32>
	word32 s9_1391 = 999<i32>
	word32 s2_429 = 0x14<32>
l2304822A:
	word32 s11_433 = fp + -84<i32> + s10_427
	byte bLoc8D_1828 = SLICE(dwLoc90, byte, 24)
	word32 a5_435 = Mem434[s11_433:int32]
	branch a5_435 == 0<32> l230482C0
l23048236:
	word32 a4_439 = (a5_435 >>u 5<u32> << 2<i32>) + (fp + -64<i32>)
	Mem444[a4_439 + 3960<i32>:word32] = s0_1389 << a5_435 | Mem434[a4_439 + -136<i32>:int32]
	word32 a5_2168
	word32 a0_445 = xTaskGetTickCount(out a5_2168)
	word32 a5_451 = a0_445 - (fp + -104<i32>)
	Mem452[a5_451:word32] = fp + -124<i32> + s10_427
	branch s9_1391 >=u a5_451 l230482C0
l23048268:
	Mem455[a0_445:word32] = dwLoc68
	word24 nLoc90_1827 = SLICE(dwLoc90, word24, 8)
	dwLoc90 = SEQ(bLoc8D_1828, nLoc90_1827) (alias)
	dwLoc90 = SEQ(bLoc8D_1828, nLoc90_1827) (alias)
	branch fp > 0xFFFFFF6F<32> l230482C0
l2304827A:
	word32 s5_479
	word32 a4_2174
	word32 s2_2176
	word32 a5_2175
	word32 s6_2179
	word32 s3_2177
	word32 s4_2178
	word32 a0_2170
	word32 s1_2169
	word32 a3_2173
	word32 a1_2171
	word32 a2_2172
	lwip_close(ra_1098, Mem458[s11_433:int32], a2_1094, mstatus, dwLoc98, 1<32>, dwLoc28, dwLoc18, s9, dwArg48, out s1_2169, out a0_2170, out a1_2171, out a2_2172, out a3_2173, out a4_2174, out a5_2175, out s2_2176, out s3_2177, out s4_2178, out s5_479, out s6_2179)
	word32 a4_494
	word32 a1_2180
	word32 a3_2182
	word32 a2_2181
	word32 a5_2183
	word32 a0_490 = atoi(s5_479, out a1_2180, out a2_2181, out a3_2182, out a4_494, out a5_2183)
	word32 a5_505 = Mem460[s11_433:int32]
	Mem508[s11_433:word32] = 0<32>
	Mem509[a0_490:word32] = a4_494
	word32 a4_512 = (a5_505 >>u 5<u32> << 2<i32>) + (fp + -64<i32>)
	word32 a3_513 = Mem509[a4_512 + -136<i32>:int32]
	Mem517[a4_512 + 3960<i32>:word32] = ~(dwLoc1C << a5_505) & a3_513
	dwLocDC = dwLoc90
	s0_1389 = dwLoc1C
	word32 s4_2192
	word32 a1_2186
	word32 s6_2194
	word32 s5_2193
	word32 t4_2197
	word32 s7_2195
	word32 s11_2196
	word32 a4_2188
	word32 a3_2187
	word32 s3_2191
	word32 a5_2189
	word32 a7_2190
	word32 a0_2185
	word32 s1_2184
	ra_1098 = printf(ra_1098, 0x23086928<32>, a3_513, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2184, out a0_2185, out a1_2186, out a2_1094, out a3_2187, out a4_2188, out a5_2189, out a7_2190, out s2_429, out s3_2191, out s4_2192, out s5_2193, out s6_2194, out s7_2195, out s8_416, out s9_1391, out s10_427, out s11_2196, out t4_2197)
l230482C0:
	s10_427 = s10_427 + 4<32>
	branch s10_427 != s2_429 l2304822A
l230482C6:
	word32 a0_556
	word32 s2_2198
	word32 a5_561
	word32 a4_560
	word32 s3_570
	word32 s1_1395
	word32 s4_1418
	ra_1098 = lwip_select(s8_416 + 1<i32>, fp + -200<i32>, 0<32>, 0<32>, mstatus, dwLocDC, dwLoc68, 1<32>, dwLoc28, dwLoc18, s9, dwArg24, dwArg28, dwArg38, out s0_1389, out s1_1395, out a0_556, out a2_1094, out a3_1293, out a4_560, out a5_561, out s2_2198, out s3_570, out s4_1418)
	branch a0_556 >= 0<32> l230482E4
l230482E4:
	branch a0_556 == 0<32> l23048202
l230482E6:
	word32 s6_585 = 0<32>
	word32 s7_1416 = 0x2FFF800<32>
l230482F4:
	branch a5_561 == s3_570 l2304837E
l230482FA:
	a4_560 = Mem588[(a5_561 >>u 5<u32> << 2<i32>) + (fp + -64<i32>) + -136<i32>:int32]
	a3_1293 = fp + -64<i32>
	branch (1<32> << a5_561 & a4_560) == 0<32> l2304837E
l23048312:
	word32 s1_839
	word32 s0_870
	word32 a5_2199
	xTaskGetTickCount(out a5_2199)
	word32 a0_609
	word32 a0_624
	word32 a3_627
	word32 s5_639
	word32 s6_640
	word32 s0_2206
	word32 s2_2209
	word32 s1_2207
	word32 a2_2208
	word32 s8_2212
	word32 s9_2213
	word32 s3_2210
	word32 s4_2211
	word32 a4_2204
	word32 a5_2205
	word32 a1_2201
	word32 a2_2202
	word32 a3_2203
	word32 t1_2200
	word32 ra_633 = lwip_recv(memset(ra_1098, s4_1418, 0<32>, s7_1416, out t1_2200, out a0_609, out a1_2201, out a2_2202, out a3_2203, out a4_2204, out a5_2205), s1_1395, a0_609, s4_1418, s7_1416, 0<32>, 1<32>, s3_570, s4_1418, mstatus, 0x10<32>, 0<32>, dwLocC8, dwLocB8, dwLocA8, s10, s2, 1<32>, a0_258, dwArg58, out s0_2206, out s1_2207, out a0_624, out a2_2208, out a3_627, out s2_2209, out s3_2210, out s4_2211, out s5_639, out s6_640, out s8_2212, out s9_2213, out mstatus)
	branch a0_624 > 0<32> l230483B0
l230483B0:
	word32 a5_671 = fp + -144<i32> + (s6_640 << 2<u32>)
	word32 a3_657
	word32 a4_658
	word32 a2_2215
	word32 a5_2216
	word32 a1_2214
	Mem672[atoi(s5_639, out a1_2214, out a2_2215, out a3_657, out a4_658, out a5_2216):word32] = a5_671
	Mem676[a4_658:word32] = fp + -104<i32> + (s6_640 << 2<u32>)
	word32 a3_686
	word32 a0_706
	word32 a5_2222
	word32 s2_2242
	word32 s3_2243
	word32 s4_2244
	word32 s7_2247
	word32 s5_2245
	word32 s6_2246
	word32 s10_2250
	word32 s11_2251
	word32 t4_2252
	word32 s8_2248
	word32 s9_2249
	word32 s7_2229
	word32 a7_2241
	word32 s8_2230
	word32 s9_2231
	word32 t4_2234
	word32 s10_2232
	word32 s11_2233
	word32 a5_2240
	word32 a2_2237
	word32 a3_2238
	word32 a4_2239
	word32 s1_2235
	word32 a1_2236
	word32 s5_2227
	word32 s6_2228
	word32 s3_2225
	word32 s4_2226
	word32 a7_2223
	word32 s2_2224
	word32 a4_2221
	word32 a1_2219
	word32 a2_2220
	word32 s1_2217
	word32 a0_2218
	word32 ra_714 = printf(printf(ra_633, 0x2308696C<32>, a3_657, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2217, out a0_2218, out a1_2219, out a2_2220, out a3_686, out a4_2221, out a5_2222, out a7_2223, out s2_2224, out s3_2225, out s4_2226, out s5_2227, out s6_2228, out s7_2229, out s8_2230, out s9_2231, out s10_2232, out s11_2233, out t4_2234), 0x230867A8<32>, a3_686, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2235, out a0_706, out a1_2236, out a2_2237, out a3_2238, out a4_2239, out a5_2240, out a7_2241, out s2_2242, out s3_2243, out s4_2244, out s5_2245, out s6_2246, out s7_2247, out s8_2248, out s9_2249, out s10_2250, out s11_2251, out t4_2252)
	word32 a0_732
	word32 a3_735
	word32 s3_2255
	word32 s4_2256
	word32 s5_2257
	word32 s8_2258
	word32 mstatus_2259
	word32 s2_2254
	word32 a2_2253
	lwip_send(a0_706, 0<32>, mstatus, dwLocB8, s2, dwLoc38, out a0_732, out a2_2253, out a3_735, out s2_2254, out s3_2255, out s4_2256, out s5_2257, out s8_2258, out mstatus_2259)
	dwLocDC = a5_671
	branch a0_732 > 0<32> l23048434
l23048434:
	word32 a3_764
	word32 s9_2310
	word32 s10_2311
	word32 s11_2312
	word32 t4_2313
	word32 s8_2309
	word32 t4_2302
	word32 a0_2303
	word32 a5_2305
	word32 a1_2304
	word32 s5_2308
	word32 a7_2306
	word32 s2_2307
	word32 s11_2301
	word32 s4_2294
	word32 s5_2295
	word32 s7_2297
	word32 s6_2296
	word32 s10_2300
	word32 s8_2298
	word32 s9_2299
	word32 s3_2293
	word32 a0_2286
	word32 s1_2285
	word32 s2_2292
	word32 a4_2289
	word32 a5_2290
	word32 a7_2291
	word32 a1_2287
	word32 a2_2288
	ra_1098 = printf(printf(ra_714, 0x230869A0<32>, a3_735, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2285, out a0_2286, out a1_2287, out a2_2288, out a3_764, out a4_2289, out a5_2290, out a7_2291, out s2_2292, out s3_2293, out s4_2294, out s5_2295, out s6_2296, out s7_2297, out s8_2298, out s9_2299, out s10_2300, out s11_2301, out t4_2302), 0x230727FC<32>, a3_764, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_1395, out a0_2303, out a1_2304, out a2_1094, out a3_1293, out a4_560, out a5_2305, out a7_2306, out s2_2307, out s3_570, out s4_1418, out s5_2308, out s6_585, out s7_1416, out s8_2309, out s9_2310, out s10_2311, out s11_2312, out t4_2313)
l230483F6:
	word32 a0_807
	word32 a2_811
	word32 s5_2323
	word32 s6_2324
	word32 s8_2325
	word32 s11_2328
	word32 s9_2326
	word32 s10_2327
	word32 t4_2329
	word32 s4_2322
	word32 a1_2315
	word32 s1_2314
	word32 s3_2321
	word32 a5_2318
	word32 a7_2319
	word32 s2_2320
	word32 a3_2316
	word32 a4_2317
	ra_1098 = printf(ra_714, 0x2307D9E4<32>, a3_735, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2314, out a0_807, out a1_2315, out a2_811, out a3_2316, out a4_2317, out a5_2318, out a7_2319, out s2_2320, out s3_2321, out s4_2322, out s5_2323, out s6_2324, out s7_1416, out s8_2325, out s9_2326, out s10_2327, out s11_2328, out t4_2329)
	word32 s2_840
	word32 s5_843
	word32 a5_2335
	word32 a4_2334
	word32 a1_2331
	word32 a2_2332
	word32 a3_2333
	word32 a0_2330
	lwip_close(ra_1098, a0_807, a2_811, mstatus, dwLoc98, 1<32>, dwLoc28, dwLoc18, s9, dwArg48, out s1_839, out a0_2330, out a1_2331, out a2_2332, out a3_2333, out a4_2334, out a5_2335, out s2_840, out s3_570, out s4_1418, out s5_843, out s6_585)
	word32 a4_858
	word32 a5_859
	word32 a3_2337
	word32 a1_2336
	Mem873[atoi(s5_843, out a1_2336, out a2_1094, out a3_2337, out a4_858, out a5_859):word32] = a5_859
	word32 a5_876 = (a4_858 >>u 5<u32> << 2<i32>) + (fp + -64<i32>)
	a4_560 = Mem873[a5_876 + -136<i32>:int32]
	Mem880[a5_876 + 3960<i32>:word32] = ~(s2_840 << a4_858) & a4_560
	s0_870 = s3
l23048338:
	word32 a0_884
	word32 a2_888
	word32 s10_894
	word32 s4_2268
	word32 s5_2269
	word32 s6_2270
	word32 s11_2273
	word32 s8_2271
	word32 s9_2272
	word32 t4_2274
	word32 s3_2267
	word32 s1_2260
	word32 s2_2266
	word32 a4_2263
	word32 a5_2264
	word32 a7_2265
	word32 a1_2261
	word32 a3_2262
	ra_1098 = printf(ra_633, 0x23086958<32>, a3_627, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2260, out a0_884, out a1_2261, out a2_888, out a3_2262, out a4_2263, out a5_2264, out a7_2265, out s2_2266, out s3_2267, out s4_2268, out s5_2269, out s6_2270, out s7_1416, out s8_2271, out s9_2272, out s10_894, out s11_2273, out t4_2274)
	word32 s2_917
	word32 s5_920
	word32 a5_2280
	word32 a4_2279
	word32 a1_2276
	word32 a2_2277
	word32 a3_2278
	word32 a0_2275
	lwip_close(ra_1098, a0_884, a2_888, mstatus, dwLoc98, 1<32>, dwLoc28, dwLoc18, s9, dwArg48, out s1_839, out a0_2275, out a1_2276, out a2_2277, out a3_2278, out a4_2279, out a5_2280, out s2_917, out s3_570, out s4_1418, out s5_920, out s6_585)
	word32 a5_947 = fp + -144<i32> + s10_894
	word32 a1_2281
	word32 a3_2282
	word32 a4_2283
	word32 a5_2284
	Mem948[atoi(s5_920, out a1_2281, out a2_1094, out a3_2282, out a4_2283, out a5_2284):word32] = a5_947
	a4_560 = (a5_947 >>u 5<u32> << 2<i32>) + (fp + -64<i32>)
	s0_870 = Mem948[a5_947:word32]
	Mem958[a4_560 + 3960<i32>:word32] = ~(s2_917 << a5_947) & Mem948[a4_560 + -136<i32>:int32]
l23048378:
	Mem960[s0_870:word32] = 0<32>
	a3_1293 = fp + -64<i32>
	s1_1395 = s1_839 + 0xFFFFFFFF<32>
l2304837E:
	s6_585 = s6_585 + 1<32>
	a5_561 = 5<32>
	branch s6_585 != 5<32> l230482F4
l23048388:
	branch (a4_560 & 5<32>) == 0<32> l230481FC
l23048392:
	word32 a0_991
	word32 a3_994
	word32 ra_1000 = lwip_accept(ra_1098, s3_570, a3_1293, mstatus, dwLocDC, 0<32>, s2, 1<32>, dwLoc3C, dwLoc38, dwLoc18, s1, out a0_991, out a3_994, out mstatus)
	branch a0_991 > 0<32> l23048450
l23048450:
	word32 s8_2352
	word32 s9_2353
	word32 s10_2354
	word32 s11_2355
	word32 t4_2356
	word32 a0_2339
	word32 s7_2351
	word32 a1_2340
	word32 a2_2341
	word32 a5_2344
	word32 a3_2342
	word32 a4_2343
	word32 s6_2350
	word32 s3_2347
	word32 s4_2348
	word32 s5_2349
	word32 a7_2345
	word32 s2_2346
	word32 s1_2338
	word32 ra_1028 = printf(ra_1000, 0x230869E0<32>, a3_994, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2338, out a0_2339, out a1_2340, out a2_2341, out a3_2342, out a4_2343, out a5_2344, out a7_2345, out s2_2346, out s3_2347, out s4_2348, out s5_2349, out s6_2350, out s7_2351, out s8_2352, out s9_2353, out s10_2354, out s11_2355, out t4_2356)
	word32 a3_1046
	word32 a4_2357
	word32 a5_2358
	dwLocDC = ip4addr_ntoa(out a3_1046, out a4_2357, out a5_2358)
	word32 a5_2359
	lwip_htons(CONVERT(wLoc9E_1986, uint16, word32), out a5_2359)
	word32 a3_1071
	word32 a3_1095
	word32 s1_1099
	word32 s2_1102
	word32 s5_1105
	word32 s8_1108
	word32 t4_2389
	word32 s10_2387
	word32 s11_2388
	word32 s6_2385
	word32 s7_2386
	word32 s3_2383
	word32 s4_2384
	word32 a5_2381
	word32 a7_2382
	word32 a1_2379
	word32 a4_2380
	word32 t4_2377
	word32 a0_2378
	word32 s10_2375
	word32 s11_2376
	word32 s8_2373
	word32 s9_2374
	word32 s6_2371
	word32 s7_2372
	word32 s5_2370
	word32 s4_2369
	word32 s3_2368
	word32 s2_2367
	word32 a7_2366
	word32 a5_2365
	word32 a4_2364
	word32 a2_2363
	word32 s1_2360
	word32 a0_2361
	word32 a1_2362
	word32 s9_1109
	ra_1098 = printf(printf(ra_1028, 0x230869F0<32>, a3_1046, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2360, out a0_2361, out a1_2362, out a2_2363, out a3_1071, out a4_2364, out a5_2365, out a7_2366, out s2_2367, out s3_2368, out s4_2369, out s5_2370, out s6_2371, out s7_2372, out s8_2373, out s9_2374, out s10_2375, out s11_2376, out t4_2377), 0x23086A20<32>, a3_1071, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_1099, out a0_2378, out a1_2379, out a2_1094, out a3_1095, out a4_2380, out a5_2381, out a7_2382, out s2_1102, out s3_2383, out s4_2384, out s5_1105, out s6_2385, out s7_2386, out s8_1108, out s9_1109, out s10_2387, out s11_2388, out t4_2389)
	branch s1_1099 > 4<32> l230484D8
l230484D8:
	word32 s2_1127
	word32 s11_2424
	word32 t4_2425
	word32 s4_2417
	word32 s5_2418
	word32 s7_2420
	word32 s8_2421
	word32 s10_2423
	word32 s9_2422
	word32 s6_2419
	word32 a7_2415
	word32 s3_2416
	word32 a4_2413
	word32 a5_2414
	word32 a2_2411
	word32 a3_2412
	word32 a0_2409
	word32 a1_2410
	word32 s1_2408
	ra_1098 = printf(ra_1098, 0x23086A50<32>, a3_1095, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2408, out a0_2409, out a1_2410, out a2_2411, out a3_2412, out a4_2413, out a5_2414, out a7_2415, out s2_1127, out s3_2416, out s4_2417, out s5_2418, out s6_2419, out s7_2420, out s8_2421, out s9_2422, out s10_2423, out s11_2424, out t4_2425)
	word32 a2_1144
	word32 s2_1152
	word32 s8_2431
	word32 mstatus_2432
	word32 a3_2427
	word32 s3_2428
	word32 s5_2430
	word32 s4_2429
	word32 a0_2426
	lwip_send(s2_1127, 0<32>, mstatus, dwLocB8, s2, dwLoc38, out a0_2426, out a2_1144, out a3_2427, out s2_1152, out s3_2428, out s4_2429, out s5_2430, out s8_2431, out mstatus_2432)
	word32 s6_2443
	word32 s4_2441
	word32 s5_2442
	word32 s2_2439
	word32 s3_2440
	word32 a4_2437
	word32 a5_2438
	word32 a1_2435
	word32 a3_2436
	word32 s1_2433
	word32 a0_2434
	lwip_close(ra_1098, s2_1152, a2_1144, mstatus, dwLoc98, 1<32>, dwLoc28, dwLoc18, s9, dwArg48, out s1_2433, out a0_2434, out a1_2435, out a2_1094, out a3_2436, out a4_2437, out a5_2438, out s2_2439, out s3_2440, out s4_2441, out s5_2442, out s6_2443)
l23048490:
	word32 s0_1189 = 0<32>
l23048494:
	branch Mem1058[s9_1109:int32] != 0<32> l230484CE
l230484CE:
	s0_1189 = s0_1189 + 1<32>
	s9_1109 = s9_1109 + 4<32>
	branch s0_1189 != 5<32> l23048494
l230484D6:
l2304849A:
	word32 s0_1203 = (s0_1189 << 2<i32>) + (fp + -64<i32>)
	word32 a5_2444
	Mem1204[s0_1203 + 4056<i32>:word32] = xTaskGetTickCount(out a5_2444)
	word32 a3_1210
	word32 a5_2448
	word32 a1_2445
	word32 a2_2446
	word32 a4_2447
	Mem1222[s0_1203 + 4016<i32>:word32] = atoi(s5_1105, out a1_2445, out a2_2446, out a3_1210, out a4_2447, out a5_2448)
	Mem1224[s0_1203 + 4076<i32>:word32] = s2_1102
	branch s8_1108 >= s2_1102 l230484BC
l230484BA:
l230484BC:
	word32 t4_2466
	word32 s11_2465
	word32 s10_2464
	word32 s9_2463
	word32 s8_2462
	word32 s7_2461
	word32 s6_2460
	word32 s3_2457
	word32 s4_2458
	word32 s5_2459
	word32 s2_2456
	word32 a7_2455
	word32 a3_2452
	word32 a4_2453
	word32 a5_2454
	word32 a1_2451
	word32 a0_2450
	word32 s1_2449
	ra_1098 = printf(ra_1098, 0x23086A44<32>, a3_1210, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2449, out a0_2450, out a1_2451, out a2_1094, out a3_2452, out a4_2453, out a5_2454, out a7_2455, out s2_2456, out s3_2457, out s4_2458, out s5_2459, out s6_2460, out s7_2461, out s8_2462, out s9_2463, out s10_2464, out s11_2465, out t4_2466)
l230483A2:
	word32 t4_2407
	word32 s10_2405
	word32 s11_2406
	word32 s3_2398
	word32 s4_2399
	word32 s6_2401
	word32 s7_2402
	word32 s9_2404
	word32 s8_2403
	word32 s5_2400
	word32 a0_2391
	word32 a1_2392
	word32 a4_2394
	word32 a5_2395
	word32 s2_2397
	word32 a7_2396
	word32 a3_2393
	word32 s1_2390
	ra_1098 = printf(ra_1000, 0x230869D0<32>, a3_994, 0x10<32>, dwLocB8, dwLoc70, dwLoc6C, a0_258, dwLoc24, out s1_2390, out a0_2391, out a1_2392, out a2_1094, out a3_2393, out a4_2394, out a5_2395, out a7_2396, out s2_2397, out s3_2398, out s4_2399, out s5_2400, out s6_2401, out s7_2402, out s8_2403, out s9_2404, out s10_2405, out s11_2406, out t4_2407)
l230482DA:
	a0_1285 = 0x23086948<32>
l230481A6:
	a0_1285 = 0x230868D0<32>
l23048190:
	a0_1285 = 0x230868C0<32>
l2304811C:
	a0_1285 = 0x230868AC<32>
l23048124:
	word32 a5_1298
	word32 a2_1301
	word32 s3_1310
	word32 s4_1311
	word32 s11_2107
	word32 s9_2105
	word32 s6_2102
	word32 a7_2099
	word32 a1_2096
	word32 s8_2104
	word32 a0_2095
	word32 s5_2101
	word32 s2_2100
	word32 s1_2094
	word32 s10_2106
	word32 s7_2103
	word32 t4_2108
	word32 a3_2097
	word32 a4_2098
	word32 ra_1305 = printf(ra_1098, a0_1285, a3_1293, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, dwLoc48, dwLoc24, out s1_2094, out a0_2095, out a1_2096, out a2_1301, out a3_2097, out a4_2098, out a5_1298, out a7_2099, out s2_2100, out s3_1310, out s4_1311, out s5_2101, out s6_2102, out s7_2103, out s8_2104, out s9_2105, out s10_2106, out s11_2107, out t4_2108)
	word32 a2_1321
	word32 t3_2118
	word32 s4_2117
	word32 a5_2115
	word32 a6_2116
	word32 a4_2114
	word32 a0_2111
	word32 a1_2112
	word32 a3_2113
	word32 s0_2109
	word32 s1_2110
	vPortFree(s4_1311, a2_1301, a5_1298, mstatus, dwArg78, dwArgB8, out s0_2109, out s1_2110, out a0_2111, out a1_2112, out a2_1321, out a3_2113, out a4_2114, out a5_2115, out a6_2116, out s4_2117, out t3_2118)
	word32 a2_1336
	word32 a3_1337
	word32 a4_1338
	word32 a5_1339
	word32 s1_2119
	word32 s5_2125
	word32 s6_2126
	word32 s2_2122
	word32 s3_2123
	word32 s4_2124
	word32 a0_2120
	word32 a1_2121
	lwip_close(ra_1305, s3_1310, a2_1321, mstatus, dwLoc98, 1<32>, dwLoc28, dwLoc18, s9, dwArg48, out s1_2119, out a0_2120, out a1_2121, out a2_1336, out a3_1337, out a4_1338, out a5_1339, out s2_2122, out s3_2123, out s4_2124, out s5_2125, out s6_2126)
	vTaskDelete(0<32>, a2_1336, a3_1337, a4_1338, a5_1339, mstatus)
	return
TCP_Server_exit:


void cmd_tcp_server(word32 ra, word32 s1, word32 a2, word32 a3, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
cmd_tcp_server_entry:
l230484FE:
	branch a2 == 2<32> l23048510
l23048510:
	word32 a3_7 = Mem0[a3 + 4<i32>:word32]
l2304852A_thunk_xTaskCreate:
	word32 a2_132
	word32 a3_133
	word32 a4_134
	word32 a5_135
	xTaskCreate(ra, s1, 1024<i32>, a3_7, 0x14<32>, 0<32>, s3, mstatus, dwArg10, dwArg14, dwArgF8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out a2_132, out a3_133, out a4_134, out a5_135)
	return
l23048504:
l2304850C_thunk_printf:
	word32 s1_113
	word32 a0_114
	word32 a1_115
	word32 a2_116
	word32 a3_117
	word32 a4_118
	word32 a5_119
	word32 a7_120
	word32 s2_121
	word32 s3_122
	word32 s4_123
	word32 s5_124
	word32 s6_125
	word32 s7_126
	word32 s8_127
	word32 s9_128
	word32 s10_129
	word32 s11_130
	word32 t4_131
	printf(ra, 0x23086A70<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_113, out a0_114, out a1_115, out a2_116, out a3_117, out a4_118, out a5_119, out a7_120, out s2_121, out s3_122, out s4_123, out s5_124, out s6_125, out s7_126, out s8_127, out s9_128, out s10_129, out s11_130, out t4_131)
	return
cmd_tcp_server_exit:


void network_netutils_tcpserver_cli_register()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
network_netutils_tcpserver_cli_register_entry:
l2304852E:
	return
network_netutils_tcpserver_cli_register_exit:


void iperf_server_udp_entry(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg44, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipus_test_cmd
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
iperf_server_udp_entry_entry:
l23048532:
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 a0_17
	word32 a1_18
	word32 s1_25
	word32 s4_28
	word32 a1_82
	word32 a2_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a6_88
	word32 s2_89
	word32 s3_90
	word32 s8_91
	pvPortMalloc(ra, s1, strlen(a0, out a1_82, out a2_83, out a3_9, out a4_10, out a5_11) + 1<32>, a3_9, a4_10, a5_11, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_25, out a0_17, out a1_18, out a2_84, out a3_85, out a4_86, out a5_87, out a6_88, out s2_89, out s3_90, out s4_28, out s8_91)
	word32 a4_35
	word32 a5_36
	strcpy(a0_17, a1_18, out a4_35, out a5_36)
l23048562_thunk_aos_task_new:
	aos_task_new(ra, s1_25, 0x23048602<32>, dwArg44, 0x1000000<32>, a4_35, a5_36, s4_28, mstatus, dwArg04, dwArg20, dwArg24, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
iperf_server_udp_entry_exit:


void iperf_client_udp_entry(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg44, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipu_test_cmd
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
iperf_client_udp_entry_entry:
l23048566:
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 a0_17
	word32 a1_18
	word32 s1_25
	word32 s4_28
	word32 a1_82
	word32 a2_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a6_88
	word32 s2_89
	word32 s3_90
	word32 s8_91
	pvPortMalloc(ra, s1, strlen(a0, out a1_82, out a2_83, out a3_9, out a4_10, out a5_11) + 4<32>, a3_9, a4_10, a5_11, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_25, out a0_17, out a1_18, out a2_84, out a3_85, out a4_86, out a5_87, out a6_88, out s2_89, out s3_90, out s4_28, out s8_91)
	word32 a4_35
	word32 a5_36
	strcpy(a0_17, a1_18, out a4_35, out a5_36)
l23048596_thunk_aos_task_new:
	aos_task_new(ra, s1_25, 0x23048968<32>, dwArg44, 0x1000000<32>, a4_35, a5_36, s4_28, mstatus, dwArg04, dwArg20, dwArg24, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
iperf_client_udp_entry_exit:


void iperf_server_entry(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg44, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ips_test_cmd
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
iperf_server_entry_entry:
l2304859A:
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 a0_17
	word32 a1_18
	word32 s1_25
	word32 s4_28
	word32 a1_82
	word32 a2_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a6_88
	word32 s2_89
	word32 s3_90
	word32 s8_91
	pvPortMalloc(ra, s1, strlen(a0, out a1_82, out a2_83, out a3_9, out a4_10, out a5_11) + 4<32>, a3_9, a4_10, a5_11, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_25, out a0_17, out a1_18, out a2_84, out a3_85, out a4_86, out a5_87, out a6_88, out s2_89, out s3_90, out s4_28, out s8_91)
	word32 a4_35
	word32 a5_36
	strcpy(a0_17, a1_18, out a4_35, out a5_36)
l230485CA_thunk_aos_task_new:
	aos_task_new(ra, s1_25, 0x23048BE2<32>, dwArg44, 0x1000000<32>, a4_35, a5_36, s4_28, mstatus, dwArg04, dwArg20, dwArg24, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
iperf_server_entry_exit:


void iperf_client_tcp_entry(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg44, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipc_test_cmd
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
iperf_client_tcp_entry_entry:
l230485CE:
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 a0_17
	word32 a1_18
	word32 s1_25
	word32 s4_28
	word32 a1_82
	word32 a2_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a6_88
	word32 s2_89
	word32 s3_90
	word32 s8_91
	pvPortMalloc(ra, s1, strlen(a0, out a1_82, out a2_83, out a3_9, out a4_10, out a5_11) + 4<32>, a3_9, a4_10, a5_11, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_25, out a0_17, out a1_18, out a2_84, out a3_85, out a4_86, out a5_87, out a6_88, out s2_89, out s3_90, out s4_28, out s8_91)
	word32 a4_35
	word32 a5_36
	strcpy(a0_17, a1_18, out a4_35, out a5_36)
l230485FE_thunk_aos_task_new:
	aos_task_new(ra, s1_25, 0x23048E3A<32>, dwArg44, 0x1000000<32>, a4_35, a5_36, s4_28, mstatus, dwArg04, dwArg20, dwArg24, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
iperf_client_tcp_entry_exit:


void iperf_server_udp(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg5C, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
iperf_server_udp_entry:
l23048602:
	branch a0 != 0<32> l23048612
l2304860E:
	word32 a5_326
	vAssertCalled(a4, mstatus, out a5_326)
l23048612:
	word32 a2_173
	word32 a5_176
	word32 s1_177
	word32 a3_23
	word32 s1_26
	word32 a5_325
	word32 a4_324
	word32 ra_139 = udp_new(ra, a0, a3, a4, mstatus, out s1_26, out a3_23, out a4_324, out a5_325)
	branch a0 != 0<32> l23048636
l23048636:
	word32 a0_136
	word32 a3_328
	word32 a0_327
	word32 s0_127 = ipaddr_addr(s1_26, out a0_327, out a3_328)
	word32 a4_329
	word32 a5_330
	word32 a3_118
	branch udp_bind(s0_127, fp + -84<i32>, 0x1000389<32>, out a3_118, out a4_329, out a5_330) == 0<32> l23048662
l23048662:
	word32 s1_347
	word32 a0_348
	word32 a1_349
	word32 a2_350
	word32 a3_351
	word32 a4_352
	word32 a5_353
	word32 a7_354
	word32 s2_355
	word32 s3_356
	word32 s4_357
	word32 s5_358
	word32 s6_359
	word32 s7_360
	word32 s8_361
	word32 s9_362
	word32 s10_363
	word32 s11_364
	word32 t4_365
	word32 t1_366
	word32 a0_367
	word32 a1_368
	word32 a2_369
	word32 a5_370
	word32 a4_117
	ra_139 = memset(printf(ra_139, 0x23086C80<32>, a3_118, dwLoc58, dwLoc38, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_347, out a0_348, out a1_349, out a2_350, out a3_351, out a4_352, out a5_353, out a7_354, out s2_355, out s3_356, out s4_357, out s5_358, out s6_359, out s7_360, out s8_361, out s9_362, out s10_363, out s11_364, out t4_365), fp + -80<i32>, 0<32>, 64<i32>, out t1_366, out a0_367, out a1_368, out a2_369, out a3_118, out a4_117, out a5_370)
	udp_recv(s0_127, 0x230486B0<32>, fp + -80<i32>)
	word32 a5_105 = 0xFFFFFFFF<32>
	word32 a2_106 = fp + -80<i32>
l23048698:
	branch a5_105 == 0<32> l230486A6
l230486A6:
	word32 s1_382
	word32 a0_383
	word32 a1_384
	word32 s2_385
	word32 s3_386
	word32 s4_387
	word32 s8_388
	s0_127 = vTaskDelay(1000<i32>, a2_106, a3_118, a4_117, a5_105, mstatus, dwLoc3C, dwLoc38, dwArgD8, dwArg0118, out s1_382, out a0_383, out a1_384, out a2_106, out a3_118, out a4_117, out a5_105, out s2_385, out s3_386, out s4_387, out s8_388)
l2304869C:
	a0_136 = 0x23086CA0<32>
l2304864E:
	a0_136 = 0x23086C70<32>
l23048656:
	word32 a3_150
	word32 s1_389
	word32 a0_390
	word32 a1_391
	word32 a2_392
	word32 a4_393
	word32 a5_394
	word32 a7_395
	word32 s2_396
	word32 s3_397
	word32 s4_398
	word32 s5_399
	word32 s6_400
	word32 s7_401
	word32 s8_402
	word32 s9_403
	word32 s10_404
	word32 s11_405
	word32 t4_406
	printf(ra_139, a0_136, a3_118, dwLoc58, dwLoc38, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_389, out a0_390, out a1_391, out a2_392, out a3_150, out a4_393, out a5_394, out a7_395, out s2_396, out s3_397, out s4_398, out s5_399, out s6_400, out s7_401, out s8_402, out s9_403, out s10_404, out s11_405, out t4_406)
	word32 a0_407
	word32 a3_408
	word32 a4_409
	s1_177 = udp_remove(s0_127, a3_150, mstatus, out a0_407, out a2_173, out a3_408, out a4_409, out a5_176)
l2304861A:
	word32 s7_341
	word32 s8_342
	word32 s9_343
	word32 t4_346
	word32 s10_344
	word32 s11_345
	word32 a7_335
	word32 s5_339
	word32 s6_340
	word32 s3_337
	word32 s4_338
	word32 s2_336
	word32 a4_334
	word32 a0_331
	word32 a1_332
	word32 a3_333
	printf(ra_139, 0x23086C4C<32>, a3_23, dwLoc58, dwLoc38, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_177, out a0_331, out a1_332, out a2_173, out a3_333, out a4_334, out a5_176, out a7_335, out s2_336, out s3_337, out s4_338, out s5_339, out s6_340, out s7_341, out s8_342, out s9_343, out s10_344, out s11_345, out t4_346)
l23048626:
	word32 s0_371
	word32 s1_372
	word32 a0_373
	word32 a1_374
	word32 a2_375
	word32 a3_376
	word32 a4_377
	word32 a5_378
	word32 a6_379
	word32 s4_380
	word32 t3_381
	vPortFree(s1_177, a2_173, a5_176, mstatus, dwArgF8, dwArg0138, out s0_371, out s1_372, out a0_373, out a1_374, out a2_375, out a3_376, out a4_377, out a5_378, out a6_379, out s4_380, out t3_381)
	return
iperf_server_udp_exit:


void iperf_server_udp_recv_fn(word32 ra, word32 s1, word32 a0, word32 a2, word32 s3, word32 s5, word32 s6, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg68, word32 dwArg98, word32 dwArg0144)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0098:[0..31] Stack +0144:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: fa0 fa5 fflags frm fs0 fs1 fs2 s10 s11 sp t2
iperf_server_udp_recv_fn_entry:
l230486B0:
	word32 s5_11 = a2
	word32 t1_768
	word32 a2_771
	word32 a4_773
	word32 a1_770
	word32 a3_772
	word32 a0_769
	word32 a5_774
	word32 ra_296 = memset(ra, fp + -96<i32>, 0<32>, 32<i32>, out t1_768, out a0_769, out a1_770, out a2_771, out a3_772, out a4_773, out a5_774)
	branch a2 == 0<32> l23048846
l230486E8:
	word32 a1_52
	word32 a5_56
	word32 a2_775
	word32 a3_776
	word32 a4_55
	word32 a0_51 = bl_timer_now_us(out a1_52, out a2_775, out a3_776, out a4_55, out a5_56)
	word32 s9_63 = Mem37[a0 + 24<i32>:int32]
	Mem64[a0_51 + 32<i32>:word32] = a0
	word32 s4_302 = a0_51
	branch s9_63 != 0<32> l230486FA
l230486F8:
	s9_63 = a0_51
l230486FA:
	word32 s0_69 = Mem64[a4_55 + 28<i32>:word32]
	Mem71[s0_69 + 24<i32>:word32] = s9_63
	branch a4_55 != 0<32> l23048704
l23048702:
	a4_55 = a0_51
l23048704:
	word32 a5_111
	Mem76[a4_55 + 28<i32>:word32] = s0_69
	word32 s2_79 = CONVERT(Mem76[a2 + 8<i32>:uint16], uint16, word32)
	word32 s1_90 = s1 + (s2_79 + 54<i32>)
	word32 s0_89 = Mem76[a5_56 + 4<i32>:word32]
	Mem94[s1_90 + 48<i32>:word32] = s0_89
	word32 s2_93 = CONVERT(s1_90 <u s2_79 + 54<i32>, bool, word32) + a1_52
	Mem95[s0_89 + 52<i32>:word32] = s2_93
	Mem96[a5_56 + 5<32>:word32] = s0_89
	word32 a5_97 = Mem96[a2 + 4<i32>:int32]
	word32 a3_104 = CONVERT(Mem96[a5_97:byte], byte, word32) << 24<i32> | CONVERT(Mem96[a5_97 + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem96[a5_97 + 3<i32>:byte], byte, word32)
	word32 s3_107 = CONVERT(Mem96[a5_97 + 2<i32>:byte], byte, word32) << 8<i32> | a3_104
	branch s3_107 >= 0<32> l23048866
l23048866:
	a5_111 = 0x7A11F<32>
	branch a0_51 - a4_55 <=u 0x7A11F<32> l2304882C
l23048876:
	word32 a0_122
	word32 a1_123
	word32 fflags_131
	word32 frm_132
	word32 s2_134
	word32 a3_795
	word32 s6_799
	word32 s4_797
	word32 s5_798
	word32 a5_796
	word32 s9_801
	word32 fa0_802
	word32 s7_800
	word32 s1_133 = __floatundisf(ra_296, s1_90, s2_93, fflags, frm, out a0_122, out a1_123, out a3_795, out a5_796, out s2_134, out s4_797, out s5_798, out s6_799, out s7_800, out s9_801, out fa0_802, out fflags_131, out frm_132)
	word32 a0_154 = a0_122 + s1_133
	word32 fs1_150 = Mem96[0x23087CB8<32>:real32]
	word32 s0_152 = Mem96[a1_123 + 44<i32>:word32]
	Mem160[a0_154 + 40<i32>:word32] = s0_152
	word32 a1_158 = a1_123 + s2_134 + CONVERT(a0_154 <u s1_133, bool, word32)
	Mem161[a1_158 + 44<i32>:word32] = s0_152
	word32 fs2_162 = Mem161[0x23087CBC<32>:real32]
	word32 a0_164
	word32 a3_167
	word32 a5_169
	word32 fa0_172
	word32 fflags_173
	word32 frm_174
	word32 s4_178
	word32 s9_183
	word32 s6_806
	word32 s5_805
	word32 a1_803
	word32 s2_804
	word32 s7_807
	__floatundisf(ra_296, a0_154, a1_158, fflags_131, frm_132, out a0_164, out a1_803, out a3_167, out a5_169, out s2_804, out s4_178, out s5_805, out s6_806, out s7_807, out s9_183, out fa0_172, out fflags_173, out frm_174)
	word32 fa5_194 = fa0_172 * fs1_150 / CONVERT(s4_178 - s9_183, word32, real32)
	word32 fs2_195 = fa5_194 * fs2_162
	word32 a5_197 = CONVERT(Mem161[a5_169 + 56<i32>:real32] < fa5_194, bool, word32)
	branch a5_197 == 0<32> l230488D2
l230488D0:
	Mem198[s0_152 + 56<i32>:real32] = s0_152
l230488D2:
	branch CONVERT(fa5_194 < Mem200[a5_197 + 60<i32>:real32], bool, word32) == 0<32> l230488DC
l230488DA:
	Mem205[s0_152 + 60<i32>:real32] = s0_152
l230488DC:
	word32 fs0_209 = Mem208[a0_164 + 56<i32>:real32]
	word32 a1_824
	__extendsfdf2(ra_296, fa0_172, fflags_173, frm_174, out a1_824)
	word32 a1_825
	__extendsfdf2(ra_296, fs0_209, fflags_173, frm_174, out a1_825)
	word32 a1_241
	__extendsfdf2(ra_296, fs0_209, fflags_173, frm_174, out a1_241)
	word32 a1_250
	__extendsfdf2(ra_296, fs2_195, fflags_173, frm_174, out a1_250)
	0<32> = dwArg0144
	word32 a3_265
	word32 a5_289
	word32 a4_294
	word32 s0_826
	word32 s1_827
	word32 a0_828
	word32 a1_829
	word32 a2_830
	word32 a4_831
	word32 a5_832
	word32 a7_833
	word32 s2_834
	word32 s3_835
	word32 s4_836
	word32 s5_837
	word32 s6_838
	word32 s7_839
	word32 s8_840
	word32 s9_841
	word32 s10_842
	word32 s11_843
	word32 s1_844
	word32 a0_845
	word32 a1_846
	word32 a2_847
	word32 a7_848
	word32 s2_849
	word32 s6_850
	word32 s7_851
	word32 s8_852
	word32 s9_853
	word32 s10_854
	word32 s11_855
	word32 t4_856
	ra_296 = printf(snprintf(ra_296, fp + -96<i32>, 32<i32>, 0x23086CF0<32>, dwLoc78, s6, dwLoc2C, a1_250, a1_241, dwArg18, dwArg3C, out s0_826, out s1_827, out a0_828, out a1_829, out a2_830, out a3_265, out a4_831, out a5_832, out a7_833, out s2_834, out s3_835, out s4_836, out s5_837, out s6_838, out s7_839, out s8_840, out s9_841, out s10_842, out s11_843), 0x23085CD8<32>, a3_265, a3_167, dwLoc68, dwLoc20, dwLoc1C, dwArg08, s3, out s1_844, out a0_845, out a1_846, out a2_847, out a3_104, out a4_294, out a5_289, out a7_848, out s2_849, out s3_107, out s4_302, out s5_11, out s6_850, out s7_851, out s8_852, out s9_853, out s10_854, out s11_855, out t4_856)
	word32 s0_311 = Mem258[a4_294 + 20<i32>:word32]
	Mem313[a5_289 + 28<i32>:word32] = s0_311
	Mem315[48<i32>:word32] = s0_311
	word32 s0_316 = Mem315[0xC<32>:word32]
	Mem317[s0_316 + 52<i32>:word32] = 0<32>
	Mem318[s0_316 + 20<i32>:word32] = 0<32>
	Mem320[a4_294 + 12<i32>:word32] = s0_316
	a5_111 = a4_294
l23048750:
	Mem322[a5_97 + 12<i32>:byte] = 0x80<8>
	Mem323[a5_97 + 13<i32>:byte] = 0<8>
	Mem324[a5_97 + 14<i32>:byte] = 0<8>
	Mem325[a5_97 + 15<i32>:byte] = 0<8>
	Mem326[a5_97 + 16<i32>:byte] = 0<8>
	Mem327[a5_97 + 17<i32>:byte] = 0<8>
	Mem328[a5_97 + 18<i32>:byte] = 0<8>
	Mem329[a5_97 + 19<i32>:byte] = 0<8>
	Mem331[a5_97 + 24<i32>:byte] = 0<8>
	Mem332[a5_97 + 25<i32>:byte] = 0<8>
	Mem334[a5_97 + 20<i32>:byte] = 0xFF<8>
	Mem336[a5_97 + 21<i32>:byte] = 0xFF<8>
	Mem338[a5_97 + 22<i32>:byte] = 0xFF<8>
	Mem339[a5_97 + 23<i32>:byte] = 0x80<8>
	Mem340[a5_97 + 26<i32>:byte] = 0<8>
	Mem341[a5_97 + 27<i32>:byte] = 0<8>
	Mem342[a5_97 + 28<i32>:byte] = 0<8>
	Mem343[a5_97 + 29<i32>:byte] = 0<8>
	Mem344[a5_97 + 30<i32>:byte] = 0<8>
	Mem345[a5_97 + 31<i32>:byte] = 0<8>
	Mem350[a5_97 + 32<i32>:byte] = 0xFF<8>
	Mem352[a5_97 + 33<i32>:byte] = 0xFF<8>
	Mem354[a5_97 + 34<i32>:byte] = 0xFF<8>
	Mem355[a5_97 + 35<i32>:byte] = 0x80<8>
	Mem358[a5_97 + 36<i32>:byte] = 0xFF<8>
	Mem360[a5_97 + 37<i32>:byte] = 0xFF<8>
	Mem362[a5_97 + 38<i32>:byte] = 0xFF<8>
	Mem363[a5_97 + 39<i32>:byte] = 0x80<8>
	Mem366[a5_97 + 40<i32>:byte] = 0xFF<8>
	Mem368[a5_97 + 41<i32>:byte] = 0xFF<8>
	Mem370[a5_97 + 42<i32>:byte] = 0xFF<8>
	Mem371[a5_97 + 43<i32>:byte] = 0x80<8>
	word32 s1_777
	word32 s4_390
	word32 s5_391
	word32 s6_392
	word32 s7_393
	word32 s8_394
	word32 s0_415
	word32 a1_779
	word32 a0_778
	word32 a2_780
	word32 a3_781
	word32 s2_785
	word32 a5_783
	word32 a4_782
	word32 a7_784
	word32 s11_789
	word32 s9_787
	word32 s10_788
	word32 s3_786
	word32 s1_791
	word32 a0_792
	word32 a4_793
	word32 s9_794
	word32 t4_790
	ra_296 = udp_sendto(printf(ra_296, 0x23086CC0<32>, 0xFFFFFF<32>, dwLoc88, dwLoc68, dwLoc20, dwLoc1C, dwArg08, s3, out s1_777, out a0_778, out a1_779, out a2_780, out a3_781, out a4_782, out a5_783, out a7_784, out s2_785, out s3_786, out s4_390, out s5_391, out s6_392, out s7_393, out s8_394, out s9_787, out s10_788, out s11_789, out t4_790), s6_392, s5_391, s7_393, s8_394, s4_390, mstatus, dwLoc7C, dwLoc68, dwLoc48, dwLoc18, dwLoc08, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg98, out s0_415, out s1_791, out a0_792, out a3_104, out a4_793, out s3_107, out s4_302, out s5_11, out s9_794, out mstatus)
	Mem433[1<32>:word32] = s0_415
	a5_111 = 1<32>
l2304882C:
	word32 s0_436 = Mem435[a5_111 + 8<i32>:word32]
	word32 a4_437 = a5_111 + 1<i32>
	branch s3_107 == a4_437 l23048962
l23048962:
	branch a5_111 < s3_107 l2304895C
l23048966:
l23048836:
	branch a5_111 < s3_107 l23048950
l23048950:
	s0_436 = Mem435[a4_437 + 16<i32>:word32]
	Mem443[s3_107 - a5_111 + (a4_437 + 0xFFFFFFFF<32>) + 16<i32>:word32] = s0_436
	a4_437 = a4_437 + 0xFFFFFFFF<32>
l2304895C:
	Mem446[s0_436 + 8<i32>:word32] = s3_107
l2304883A:
	Mem449[a5_111 + 0x15<32>:word32] = Mem435[a5_111 + 20<i32>:word32]
l23048840:
	word32 a4_814
	word32 a5_815
	word32 a3_813
	word32 s4_819
	word32 a7_816
	word32 s2_817
	word32 s3_818
	word32 s8_822
	word32 mstatus_823
	word32 s5_820
	word32 s6_821
	word32 s0_808
	word32 s1_809
	word32 a1_811
	word32 a2_812
	word32 a0_810
	pbuf_free(ra_296, s5_11, a3_104, a4_437, s4_302, mstatus, dwArg98, out s0_808, out s1_809, out a0_810, out a1_811, out a2_812, out a3_813, out a4_814, out a5_815, out a7_816, out s2_817, out s3_818, out s4_819, out s5_820, out s6_821, out s8_822, out mstatus_823)
l23048846:
	return
iperf_server_udp_recv_fn_exit:


void iperf_client_udp(word32 ra, word32 s0, word32 s1, word32 s2, word32 s4, word32 s5, word32 s9, word32 fflags, word32 frm, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg98)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] s5:[0..63] s9:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa5 fflags frm fs0 fs1 fs2 fs3 fs4 fs5 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
iperf_client_udp_entry:
	word32 dwLoc98 = SLICE(qwLoc98, word32, 0)
	word32 dwLocD8 = SLICE(qwLocD8, word32, 0)
l23048968:
	word32 a3_44
	word32 a4_45
	word32 a5_46
	word32 a1_1248
	word32 t1_1246
	word32 a2_1249
	word32 a0_1247
	word32 ra_47 = memset(ra, fp + -160<i32>, 0<32>, 64<i32>, out t1_1246, out a0_1247, out a1_1248, out a2_1249, out a3_44, out a4_45, out a5_46)
	word32 a0_52
	word32 s2_1255
	word32 s1_1250
	word32 a6_1254
	word32 s4_1256
	word32 a1_1251
	word32 a3_1252
	word32 a4_1253
	word32 s8_1257
	word32 s3_62
	word32 a5_57
	word32 a2_54
	pvPortMalloc(ra_47, s1, 1300<i32>, a3_44, a4_45, a5_46, mstatus, dwLocA0, dwLoc9C, SLICE(s5, word32, 32), dwArg58, dwArg98, out s1_1250, out a0_52, out a1_1251, out a2_54, out a3_1252, out a4_1253, out a5_57, out a6_1254, out s2_1255, out s3_62, out s4_1256, out s8_1257)
	word32 dwLoc58_1116 = s5
	branch a0_52 != 0<32> l230489D8
l230489D8:
	word32 a5_68 = 0<32>
l230489E0:
	word32 a3_72 = a0_52 + a5_68
	Mem73[a3_72:byte] = SLICE(a5_68, byte, 0)
	a5_68 = a5_68 + 1<32>
	branch a5_68 != 1300<i32> l230489E0
l230489EE:
	word32 a2_584
	word32 a3_585
	word32 a4_586
	word32 a5_587
	word32 a3_84
	word32 a2_1270
	word32 a1_1269
	word32 s2_1272
	word32 s3_1273
	word32 a4_1271
	word32 s5_1274
	word32 a0_103 = lwip_socket(ra_47, 2<32>, 0x11<32>, a3_72, mstatus, dwLocAC, s2, dwLoc38, s1, dwArg18, dwArg28, dwArg48, dwArg58, dwArg68, out a1_1269, out a2_1270, out a3_84, out a4_1271, out s2_1272, out s3_1273, out s5_1274)
	branch a0_103 >= 0<32> l23048A14
l23048A14:
	word32 t1_1275
	word32 a5_1281
	word32 a0_1276
	word32 a1_1277
	word32 a2_1278
	word32 a4_1280
	word32 a3_1279
	word32 ra_114 = memset(ra_47, fp + -192<i32>, 0<32>, 0x10<32>, out t1_1275, out a0_1276, out a1_1277, out a2_1278, out a3_1279, out a4_1280, out a5_1281)
	word32 a5_1282
	lwip_htons(0x100038A<32>, out a5_1282)
	word32 a3_1284
	word32 a0_1283
	ipaddr_addr(0x2307C4CC<32>, out a0_1283, out a3_1284)
	word32 a0_148
	word32 a3_151
	word32 s3_1285
	lwip_bind(a0_103, fp + -192<i32>, mstatus, dwLocAC, dwLoc98, s5, dwLoc18, out a0_148, out a3_151, out s3_1285)
	branch a0_148 != 0xFFFFFFFF<32> l23048A64
l23048A64:
	word32 s2_186
	word32 s3_187
	word32 a3_1321
	word32 a4_1322
	word32 a5_1323
	word32 a2_1320
	word32 s10_1314
	word32 t4_1316
	word32 s11_1315
	word32 a1_1319
	word32 t1_1317
	word32 a0_1318
	word32 a3_1304
	word32 s7_1311
	word32 s8_1312
	word32 s9_1313
	word32 a4_1305
	word32 a7_1307
	word32 a5_1306
	word32 s6_1310
	word32 s4_1308
	word32 s5_1309
	word32 a0_1301
	word32 a1_1302
	word32 a2_1303
	word32 s1_183
	word32 ra_205 = memset(printf(ra_114, 0x23086C80<32>, a3_151, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, s1, dwLoc24, out s1_183, out a0_1301, out a1_1302, out a2_1303, out a3_1304, out a4_1305, out a5_1306, out a7_1307, out s2_186, out s3_187, out s4_1308, out s5_1309, out s6_1310, out s7_1311, out s8_1312, out s9_1313, out s10_1314, out s11_1315, out t4_1316), fp + -176<i32>, 0<32>, 0x10<32>, out t1_1317, out a0_1318, out a1_1319, out a2_1320, out a3_1321, out a4_1322, out a5_1323)
	word32 a5_1324
	lwip_htons(s2_186 + 905<i32>, out a5_1324)
	word32 a0_214
	word32 a3_1325
	word32 s0_222 = ipaddr_addr(s3_187, out a0_214, out a3_1325)
	word32 a5_1326
	word32 a0_233 = xTaskGetTickCount(out a5_1326)
	word32 fs3_236 = Mem232[0x23087C48<32>:real32]
	word32 fs5_238 = Mem232[0x23087B80<32>:real32]
	word32 fs4_240 = 0<32>
	word32 fs2_241 = Mem232[0x23087B84<32>:real32]
	word32 s11_243 = a0_233
	word32 s4_244 = 1<32>
	word32 s3_245 = 0<32>
	word32 s5_246 = 0<32>
	word32 s10_247 = 0<32>
	word32 s2_248 = s2_186 + 903<i32>
l23048ACA:
	word32 a5_1371
	word32 a5_254 = xTaskGetTickCount(out a5_1371) - s11_243
	branch s2_248 >=u a5_254 l23048B88
l23048AD8:
	word32 s10_264 = s10_247 + s3_245
	word32 fa0_284
	word32 s6_292
	word32 s7_293
	word32 a5_1366
	word32 s2_1367
	word32 s5_1369
	word32 s4_1368
	word32 s9_1370
	word32 a0_1363
	word32 a1_1364
	word32 a3_1365
	__floatundisf(ra_205, s10_264, s5_246 + (s10_247 >> 0x1F<u32>) + CONVERT(s10_264 <u s3_245, bool, word32), fflags, frm, out a0_1363, out a1_1364, out a3_1365, out a5_1366, out s2_1367, out s4_1368, out s5_1369, out s6_292, out s7_293, out s9_1370, out fa0_284, out fflags, out frm)
	word32 fs0_309 = CONVERT(s10_247, word32, real32) / fs5_238 / CONVERT(a5_254, word32, real32) * fs2_241 / fs2_241
	word32 fs1_313 = fa0_284 / fs5_238 / CONVERT(s7_293 - s6_292, word32, real32) * fs2_241 / fs2_241
	branch CONVERT(fs0_309 < fs3_236, bool, word32) == 0<32> l23048B2A
l23048B26:
	fs3_236 = fs0_309
l23048B2A:
	branch CONVERT(fs4_240 < fs0_309, bool, word32) == 0<32> l23048B34
l23048B30:
	fs4_240 = fs0_309
l23048B34:
	word32 a1_1407
	__extendsfdf2(ra_205, fs3_236, fflags, frm, out a1_1407)
	word32 a1_345
	word32 a0_344 = __extendsfdf2(ra_205, fs0_309, fflags, frm, out a1_345)
	word32 a1_353
	__extendsfdf2(ra_205, fs4_240, fflags, frm, out a1_353)
	word32 a1_362
	__extendsfdf2(ra_205, fs1_313, fflags, frm, out a1_362)
	dwLoc58_1116 = a1_345
	word32 a3_377
	word32 s9_393
	word32 s7_1435
	word32 s8_1436
	word32 s9_1437
	word32 t4_1438
	word32 s2_1431
	word32 s3_1432
	word32 s5_1433
	word32 s6_1434
	word32 a5_1429
	word32 a7_1430
	word32 a3_1427
	word32 a4_1428
	word32 a1_1425
	word32 a2_1426
	word32 s11_1423
	word32 a0_1424
	word32 s10_1422
	word32 s8_1421
	word32 s6_1419
	word32 s7_1420
	word32 s5_1418
	word32 s4_1417
	word32 s2_1415
	word32 s3_1416
	word32 a4_1412
	word32 a5_1413
	word32 a7_1414
	word32 a0_1409
	word32 a1_1410
	word32 a2_1411
	word32 s1_1408
	ra_205 = printf(snprintf(ra_205, fp + -160<i32>, 64<i32>, a0_344 + -1120<i32>, dwLocC8, dwLocA8, s4, a1_362, a1_353, dwLoc38, dwLoc14, out s0_222, out s1_1408, out a0_1409, out a1_1410, out a2_1411, out a3_377, out a4_1412, out a5_1413, out a7_1414, out s2_1415, out s3_1416, out s4_1417, out s5_1418, out s6_1419, out s7_1420, out s8_1421, out s9_393, out s10_1422, out s11_1423), s9_393 + -808<i32>, a3_377, a0_344, dwLocB8, dwLoc70, dwLoc6C, a0_214, dwLoc24, out s1_183, out a0_1424, out a1_1425, out a2_1426, out a3_1427, out a4_1428, out a5_1429, out a7_1430, out s2_1431, out s3_1432, out s4_244, out s5_1433, out s6_1434, out s7_1435, out s8_1436, out s9_1437, out s10_247, out s11_243, out t4_1438)
l23048B88:
	word32 a5_1362
	word32 a3_1360
	word32 a4_1361
	Mem430[lwip_htonl(s4_244, out a3_1360, out a4_1361, out a5_1362):word32] = s0_222
	Mem431[s0_222 + 4<i32>:word32] = 0<32>
	Mem432[s0_222 + 8<i32>:word32] = 0<32>
l23048B98:
	word32 a0_445
	word32 a2_447
	word32 s4_459
	word32 s8_1373
	word32 a3_1372
	ra_205 = lwip_sendto(ra_205, s0_222, s1_183, mstatus, dwLocB8, dwLocA8, dwLoc98, s2, dwLoc6C, dwLoc68, dwLoc58_1116, dwLoc38, dwLoc28, dwLoc18, s1, out s0_222, out s1_183, out a0_445, out a2_447, out a3_1372, out s2_248, out s3_245, out s4_459, out s5_246, out s8_1373, out mstatus)
	branch a0_445 <= 0<32> l23048BB4
l23048BB4:
	branch a0_445 == 0<32> l23048BB0
l23048BB6:
	branch a0_445 == 0xFFFFFFFF<32> l23048B98
l23048BBC:
	word32 a2_475
	word32 a3_476
	word32 a4_477
	word32 a5_478
	word32 a1_1376
	word32 s2_1377
	word32 s4_1379
	word32 s3_1378
	word32 s5_1380
	word32 s6_1381
	word32 s1_1374
	word32 a0_1375
	lwip_close(ra_205, s1_183, a2_447, mstatus, dwLoc98, dwLoc58_1116, dwLoc28, dwLoc18, s9, dwArg48, out s1_1374, out a0_1375, out a1_1376, out a2_475, out a3_476, out a4_477, out a5_478, out s2_1377, out s3_1378, out s4_1379, out s5_1380, out s6_1381)
	word32 a3_500
	word32 s4_1390
	word32 s8_1391
	word32 s2_1388
	word32 s3_1389
	word32 a4_1386
	word32 a5_1387
	word32 a0_1383
	word32 a1_1384
	word32 a2_1385
	word32 s1_1382
	vTaskDelay(2000<i32>, a2_475, a3_476, a4_477, a5_478, mstatus, dwLocBC, dwLocB8, dwArg58, dwArg98, out s1_1382, out a0_1383, out a1_1384, out a2_1385, out a3_500, out a4_1386, out a5_1387, out s2_1388, out s3_1389, out s4_1390, out s8_1391)
	word32 a5_516
	word32 a2_519
	word32 a3_520
	word32 a4_521
	word32 s8_1402
	word32 s10_1404
	word32 s9_1403
	word32 s11_1405
	word32 t4_1406
	word32 s5_1399
	word32 s6_1400
	word32 s7_1401
	word32 s3_1397
	word32 s4_1398
	word32 s2_1396
	word32 a1_1394
	word32 a7_1395
	word32 s1_1392
	word32 a0_1393
	printf(ra_205, 0x23086BC0<32>, a3_500, a0_445, dwLocB8, dwLoc70, dwLoc6C, a0_214, dwLoc24, out s1_1392, out a0_1393, out a1_1394, out a2_519, out a3_520, out a4_521, out a5_516, out a7_1395, out s2_1396, out s3_1397, out s4_1398, out s5_1399, out s6_1400, out s7_1401, out s8_1402, out s9_1403, out s10_1404, out s11_1405, out t4_1406)
	vTaskDelete(0<32>, a2_519, a3_520, a4_521, a5_516, mstatus)
l23048BAE:
	s10_247 = s10_247 + a0_445
l23048BB0:
	s4_244 = s4_459 + 1<32>
l23048A50:
	word32 a2_563
	word32 s1_568
	word32 a1_1346
	word32 s2_1347
	word32 s4_1349
	word32 s3_1348
	word32 s5_1350
	word32 s6_1351
	word32 s5_1336
	word32 t4_1343
	word32 s1_1344
	word32 a0_1345
	word32 s6_1337
	word32 s8_1339
	word32 s7_1338
	word32 s11_1342
	word32 s9_1340
	word32 s10_1341
	word32 s3_1334
	word32 s4_1335
	word32 a5_1331
	word32 s2_1333
	word32 a7_1332
	word32 a1_1328
	word32 a3_1329
	word32 a4_1330
	word32 a0_1327
	lwip_close(printf(ra_114, 0x23086C70<32>, a3_151, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, s1, dwLoc24, out s1_568, out a0_1327, out a1_1328, out a2_563, out a3_1329, out a4_1330, out a5_1331, out a7_1332, out s2_1333, out s3_1334, out s4_1335, out s5_1336, out s6_1337, out s7_1338, out s8_1339, out s9_1340, out s10_1341, out s11_1342, out t4_1343), s1_568, a2_563, mstatus, dwLoc98, s5, dwLoc28, dwLoc18, s9, dwArg48, out s1_1344, out a0_1345, out a1_1346, out a2_584, out a3_585, out a4_586, out a5_587, out s2_1347, out s3_1348, out s4_1349, out s5_1350, out s6_1351)
l230489FE:
	word32 s6_1294
	word32 s7_1295
	word32 s9_1297
	word32 s8_1296
	word32 t4_1300
	word32 s10_1298
	word32 s11_1299
	word32 s3_1291
	word32 s4_1292
	word32 s5_1293
	word32 a0_1287
	word32 s1_1286
	word32 s2_1290
	word32 a1_1288
	word32 a7_1289
	printf(ra_47, 0x23086B88<32>, a3_84, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, s1, dwLoc24, out s1_1286, out a0_1287, out a1_1288, out a2_584, out a3_585, out a4_586, out a5_587, out a7_1289, out s2_1290, out s3_1291, out s4_1292, out s5_1293, out s6_1294, out s7_1295, out s8_1296, out s9_1297, out s10_1298, out s11_1299, out t4_1300)
l23048A0A:
	word32 a4_1356
	word32 s2_1357
	word32 s8_1359
	word32 s4_1358
	word32 a0_1353
	word32 a1_1354
	word32 a3_1355
	word32 s1_1352
	vTaskDelay(1000<i32>, a2_584, a3_585, a4_586, a5_587, mstatus, dwLocBC, dwLocB8, dwArg58, dwArg98, out s1_1352, out a0_1353, out a1_1354, out a2_54, out a3_1355, out a4_1356, out a5_57, out s2_1357, out s3_62, out s4_1358, out s8_1359)
l230489A8:
	word32 t3_1268
	word32 s1_1259
	word32 a1_1261
	word32 a6_1266
	word32 a0_1260
	word32 a2_1262
	word32 s0_1258
	word32 a3_1263
	word32 s4_1267
	word32 a5_1265
	word32 a4_1264
	vPortFree(s3_62, a2_54, a5_57, mstatus, dwArg78, s0, out s0_1258, out s1_1259, out a0_1260, out a1_1261, out a2_1262, out a3_1263, out a4_1264, out a5_1265, out a6_1266, out s4_1267, out t3_1268)
l230489AE:
	return
iperf_client_udp_exit:


void iperf_server(word32 ra, word32 s0, word32 a0, word32 s3, word32 s4, word32 s5, word32 s6, word32 s11, word32 fflags, word32 frm, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..63] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s11:[0..31] s3:[32..63] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
iperf_server_entry:
	uint16 wLoc8E_934 = SLICE(dwLoc90, uint16, 16)
l23048BE2:
	word32 a2_620
	word32 a5_623
	word32 s1_624
	word32 a3_45
	word32 a4_46
	word32 a5_47
	word32 t1_1037
	word32 a1_1039
	word32 a0_1038
	word32 a2_1040
	word32 ra_48 = memset(ra, fp + -128<i32>, 0<32>, 32<i32>, out t1_1037, out a0_1038, out a1_1039, out a2_1040, out a3_45, out a4_46, out a5_47)
	word32 a0_53
	word32 a3_56
	word32 a5_1045
	word32 s3_1048
	word32 s4_1049
	word32 a6_1046
	word32 s1_1041
	word32 a2_1043
	word32 a4_1044
	word32 s8_1050
	word32 s2_1047
	word32 a1_1042
	pvPortMalloc(ra_48, a0, 0x1000450<32>, a3_45, a4_46, a5_47, mstatus, dwLoc90, dwLoc8C, SLICE(a0, word32, 32), dwArg68, s4, out s1_1041, out a0_53, out a1_1042, out a2_1043, out a3_56, out a4_1044, out a5_1045, out a6_1046, out s2_1047, out s3_1048, out s4_1049, out s8_1050)
	word32 dwLoc48_756 = a0
	word32 dwLoc4C_775 = SLICE(s3, word32, 32)
	branch a0_53 != 0<32> l23048C62
l23048C62:
	word32 a2_568
	word32 a5_571
	word32 s3_577
	word32 a3_74
	word32 s2_80
	word32 s5_1055
	word32 a2_1052
	word32 a4_1053
	word32 s3_1054
	word32 a1_1051
	word32 a0_93 = lwip_socket(ra_48, 1<32>, 0<32>, a3_56, mstatus, dwLoc9C, dwLoc68, dwLoc28, dwArg18, dwArg28, dwArg38, dwArg58, dwArg68, dwArg78, out a1_1051, out a2_1052, out a3_74, out a4_1053, out s2_80, out s3_1054, out s5_1055)
	branch a0_93 >= 0<32> l23048C88
l23048C88:
	word32 a0_533
	word32 a5_1083
	lwip_htons(s2_80 + 905<i32>, out a5_1083)
	word32 a5_1090
	word32 t1_1084
	word32 a4_1089
	word32 a0_1085
	word32 a1_1086
	word32 a2_1087
	word32 a3_1088
	word32 ra_111 = memset(ra_48, fp + -152<i32>, 0<32>, 8<32>, out t1_1084, out a0_1085, out a1_1086, out a2_1087, out a3_1088, out a4_1089, out a5_1090)
	word32 a0_117
	word32 s3_1091
	word32 a3_120
	word32 s0_125 = lwip_bind(a0_93, fp + -160<i32>, mstatus, dwLoc9C, dwLoc88, a0, dwLoc08, out a0_117, out a3_120, out s3_1091)
	branch a0_117 != 0xFFFFFFFF<32> l23048CCA
l23048CCA:
	word32 a0_143
	word32 s2_153
	s0_125 = lwip_listen(s0_125, 5<32>, mstatus, dwLoc8C, s6, 0<32>, s5, out a0_143, out a3_120, out s2_153)
	branch a0_143 != s2_153 l23048CE0
l23048CE0:
	word32 fs3_167 = Mem104[0x23087C48<32>:real32]
	word32 fs5_169 = Mem104[0x23087B80<32>:real32]
	word32 fs4_171 = 0<32>
	word32 fs2_172 = Mem104[0x23087B84<32>:real32]
l23048D00:
	word32 a0_1154
	word32 a3_1155
	word32 ra_194 = lwip_accept(ra_111, s0_125, a3_120, mstatus, dwLocCC, 0x10<32>, dwLoc68, dwLoc48_756, dwLoc2C, dwLoc28, dwLoc08, dwArg18, out a0_1154, out a3_1155, out mstatus)
	word32 a3_215
	word32 a5_1157
	word32 a4_1156
	word32 a0_212 = ip4addr_ntoa(out a3_215, out a4_1156, out a5_1157)
	word32 a5_1158
	lwip_htons(CONVERT(wLoc8E_934, uint16, word32), out a5_1158)
	word32 s1_246
	word32 t4_1176
	word32 s9_1173
	word32 s10_1174
	word32 s11_1175
	word32 s7_1171
	word32 s8_1172
	word32 s4_1168
	word32 s5_1169
	word32 s6_1170
	word32 s3_1167
	word32 s2_1166
	word32 a7_1165
	word32 a5_1164
	word32 a4_1163
	word32 a3_1162
	word32 a2_1161
	word32 a1_1160
	word32 a0_1159
	ra_111 = printf(ra_194, 0x23086C1C<32>, a3_215, a0_212, dwLocA8, dwLoc60, dwLoc5C, 0<32>, dwLoc14, out s1_246, out a0_1159, out a1_1160, out a2_1161, out a3_1162, out a4_1163, out a5_1164, out a7_1165, out s2_1166, out s3_1167, out s4_1168, out s5_1169, out s6_1170, out s7_1171, out s8_1172, out s9_1173, out s10_1174, out s11_1175, out t4_1176)
	word32 a0_1177
	word32 a3_1178
	word32 s6_280
	word32 s3_277
	word32 s1_275
	word32 s2_276
	word32 s4_278
	lwip_setsockopt(s1_246, 6<32>, 1<32>, fp + -164<i32>, mstatus, dwLocCC, dwLoc4C_775, 0<32>, dwLoc18, s5, dwArg28, dwArg48, out s1_275, out a0_1177, out a3_1178, out s2_276, out s3_277, out s4_278, out s6_280)
	word32 dwLocC8_766 = a0_212
	word32 a5_1179
	word32 s10_292 = xTaskGetTickCount(out a5_1179)
l23048D50:
	word32 s11_295 = s6_280 + 1104<i32>
l23048D56:
	word32 a0_309
	word32 a2_311
	word32 s8_327
	word32 s9_328
	word32 s5_1144
	word32 s6_1145
	ra_111 = lwip_recv(ra_111, s1_275, s1_275, s3_277, s11_295, 0<32>, s2_276, s3_277, s4_278, mstatus, dwLocC8_766, 0x10<32>, dwLocB8, dwLocA8, dwLoc98, s6, dwLoc68, dwLoc48_756, 0<32>, dwArg68, out s0_125, out s1_275, out a0_309, out a2_311, out a3_120, out s2_276, out s3_277, out s4_278, out s5_1144, out s6_1145, out s8_327, out s9_328, out mstatus)
	branch a0_309 <= 0<32> l23048E2E
l23048E2E:
	branch s1_275 < 0<32> l23048D00
l23048E32:
	word32 s5_1189
	word32 s6_1190
	word32 s2_1186
	word32 s3_1187
	word32 s4_1188
	word32 a4_1184
	word32 a5_1185
	word32 a1_1182
	word32 a2_1183
	word32 s1_1180
	word32 a0_1181
	s0_125 = lwip_close(ra_111, s1_275, a2_311, mstatus, dwLoc88, dwLoc48_756, dwLoc18, dwLoc08, s5, dwArg58, out s1_1180, out a0_1181, out a1_1182, out a2_1183, out a3_120, out a4_1184, out a5_1185, out s2_1186, out s3_1187, out s4_1188, out s5_1189, out s6_1190)
l23048D66:
	word32 s9_360 = s9_328 + a0_309
	word32 a5_1143
	word32 a5_364 = xTaskGetTickCount(out a5_1143) - s10_292
	branch s8_327 >=u a5_364 l23048D56
l23048D76:
	word32 s9_372 = s9_360 + s2_276
	word32 fa0_392
	word32 s5_399
	word32 s7_401
	word32 s6_1152
	word32 s9_1153
	word32 s4_1151
	word32 s2_1150
	word32 a0_1146
	word32 a1_1147
	word32 a3_1148
	word32 a5_1149
	__floatundisf(ra_111, s9_372, s4_278 + (s9_360 >> 0x1F<u32>) + CONVERT(s9_372 <u s2_276, bool, word32), fflags, frm, out a0_1146, out a1_1147, out a3_1148, out a5_1149, out s2_1150, out s4_1151, out s5_399, out s6_1152, out s7_401, out s9_1153, out fa0_392, out fflags, out frm)
	word32 fs0_418 = CONVERT(s9_360, word32, real32) / fs5_169 / CONVERT(a5_364, word32, real32) * fs2_172 / fs2_172
	word32 fs1_423 = fa0_392 / fs5_169 / CONVERT(s7_401 - s5_399, word32, real32) * fs2_172 / fs2_172
	branch CONVERT(fs0_418 < fs3_167, bool, word32) == 0<32> l23048DC8
l23048DC4:
	fs3_167 = fs0_418
l23048DC8:
	branch CONVERT(fs4_171 < fs0_418, bool, word32) == 0<32> l23048DD2
l23048DCE:
	fs4_171 = fs0_418
l23048DD2:
	word32 a1_1191
	__extendsfdf2(ra_111, fs3_167, fflags, frm, out a1_1191)
	word32 a1_454
	word32 a0_453 = __extendsfdf2(ra_111, fs0_418, fflags, frm, out a1_454)
	word32 a1_462
	dwLocCC = __extendsfdf2(ra_111, fs4_171, fflags, frm, out a1_462)
	word32 a1_471
	__extendsfdf2(ra_111, fs1_423, fflags, frm, out a1_471)
	dwLocC8_766 = a0_453
	dwLoc48_756 = a1_454
	dwLoc4C_775 = a1_462
	word32 a3_487
	word32 a5_1198
	word32 a7_1199
	word32 a1_1195
	word32 a2_1196
	word32 a4_1197
	word32 s0_1192
	word32 s1_1193
	word32 a0_1194
	word32 s2_1200
	word32 s3_1201
	word32 s4_1202
	word32 s5_1203
	word32 s6_1204
	word32 s7_1205
	word32 s8_1206
	word32 s9_1207
	word32 s10_1208
	word32 s11_1209
	word32 a0_1210
	word32 a1_1211
	word32 a2_1212
	word32 a3_1213
	word32 a4_1214
	word32 a5_1215
	word32 a7_1216
	word32 s5_1217
	word32 s7_1218
	word32 s8_1219
	word32 s9_1220
	word32 s11_1221
	word32 t4_1222
	ra_111 = printf(snprintf(ra_111, fp + -128<i32>, 32<i32>, 0x23086BA0<32>, dwLocB8, dwLoc98, s0, a1_471, a1_462, dwLoc28, s11, out s0_1192, out s1_1193, out a0_1194, out a1_1195, out a2_1196, out a3_487, out a4_1197, out a5_1198, out a7_1199, out s2_1200, out s3_1201, out s4_1202, out s5_1203, out s6_1204, out s7_1205, out s8_1206, out s9_1207, out s10_1208, out s11_1209), 0x23085CD8<32>, a3_487, a0_453, dwLocA8, dwLoc60, dwLoc5C, 0<32>, dwLoc14, out s1_275, out a0_1210, out a1_1211, out a2_1212, out a3_1213, out a4_1214, out a5_1215, out a7_1216, out s2_276, out s3_277, out s4_278, out s5_1217, out s6_280, out s7_1218, out s8_1219, out s9_1220, out s10_292, out s11_1221, out t4_1222)
l23048CD6:
	a0_533 = 0x23086C0C<32>
l23048CB6:
	a0_533 = 0x23086BF8<32>
l23048CBE:
	word32 a2_545
	word32 s6_1142
	word32 a4_1138
	word32 s2_1139
	word32 s4_1140
	word32 s5_1141
	word32 a0_1135
	word32 a1_1136
	word32 a3_1137
	word32 s10_1131
	word32 s11_1132
	word32 t4_1133
	word32 s1_1134
	word32 s9_1130
	word32 s5_1126
	word32 s6_1127
	word32 s7_1128
	word32 s8_1129
	word32 a7_1122
	word32 s2_1123
	word32 s3_1124
	word32 s4_1125
	word32 a1_1118
	word32 a3_1119
	word32 a4_1120
	word32 a5_1121
	word32 s1_1116
	word32 a0_1117
	lwip_close(printf(ra_111, a0_533, a3_120, dwLocC8, dwLocA8, dwLoc60, dwLoc5C, 0<32>, dwLoc14, out s1_1116, out a0_1117, out a1_1118, out a2_545, out a3_1119, out a4_1120, out a5_1121, out a7_1122, out s2_1123, out s3_1124, out s4_1125, out s5_1126, out s6_1127, out s7_1128, out s8_1129, out s9_1130, out s10_1131, out s11_1132, out t4_1133), s0_125, a2_545, mstatus, dwLoc88, a0, dwLoc18, dwLoc08, s5, dwArg58, out s1_1134, out a0_1135, out a1_1136, out a2_568, out a3_1137, out a4_1138, out a5_571, out s2_1139, out s3_577, out s4_1140, out s5_1141, out s6_1142)
l23048C74:
	word32 a3_1095
	word32 s6_1101
	word32 s11_1106
	word32 t4_1107
	word32 s7_1102
	word32 s8_1103
	word32 s9_1104
	word32 s10_1105
	word32 s5_1100
	word32 a4_1096
	word32 a7_1097
	word32 s2_1098
	word32 s4_1099
	word32 s1_1092
	word32 a0_1093
	word32 a1_1094
	printf(ra_48, 0x23086BE8<32>, a3_74, dwLocC8, dwLocA8, dwLoc60, dwLoc5C, dwLoc38, dwLoc14, out s1_1092, out a0_1093, out a1_1094, out a2_568, out a3_1095, out a4_1096, out a5_571, out a7_1097, out s2_1098, out s3_577, out s4_1099, out s5_1100, out s6_1101, out s7_1102, out s8_1103, out s9_1104, out s10_1105, out s11_1106, out t4_1107)
l23048C80:
	word32 s4_1114
	word32 t3_1115
	word32 a1_1110
	word32 a3_1111
	word32 a4_1112
	word32 a6_1113
	word32 s0_1108
	word32 a0_1109
	vPortFree(s3_577, a2_568, a5_571, mstatus, dwArg88, dwArgC8, out s0_1108, out s1_624, out a0_1109, out a1_1110, out a2_620, out a3_1111, out a4_1112, out a5_623, out a6_1113, out s4_1114, out t3_1115)
l23048C24:
	word32 s11_1070
	word32 s7_1066
	word32 s6_1065
	word32 a7_1060
	word32 t4_1071
	word32 s8_1067
	word32 s9_1068
	word32 s10_1069
	word32 s2_1061
	word32 s3_1062
	word32 s4_1063
	word32 s5_1064
	word32 a0_1056
	word32 a1_1057
	word32 a3_1058
	word32 a4_1059
	printf(ra_48, 0x23086BDC<32>, a3_56, dwLocC8, dwLocA8, dwLoc60, dwLoc5C, dwLoc38, dwLoc14, out s1_624, out a0_1056, out a1_1057, out a2_620, out a3_1058, out a4_1059, out a5_623, out a7_1060, out s2_1061, out s3_1062, out s4_1063, out s5_1064, out s6_1065, out s7_1066, out s8_1067, out s9_1068, out s10_1069, out s11_1070, out t4_1071)
l23048C30:
	branch s1_624 == 0<32> l23048C38
l23048C32:
	word32 s0_1072
	word32 a3_1077
	word32 a5_1079
	word32 a4_1078
	word32 a1_1075
	word32 a6_1080
	word32 s4_1081
	word32 t3_1082
	word32 a2_1076
	word32 s1_1073
	word32 a0_1074
	vPortFree(s1_624, a2_620, a5_623, mstatus, dwArg88, dwArgC8, out s0_1072, out s1_1073, out a0_1074, out a1_1075, out a2_1076, out a3_1077, out a4_1078, out a5_1079, out a6_1080, out s4_1081, out t3_1082)
l23048C38:
	return
iperf_server_exit:


void iperf_client_tcp(word32 ra, word32 s0, word32 s1, word32 a0, word32 s3, word32 s7, word32 s9, word32 s10, word32 fflags, word32 frm, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s3:[0..63] s7:[0..31] s9:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s8 s9 t0 t1 t3 t4 t5 tp
// Preserved: sp
iperf_client_tcp_entry:
l23048E3A:
	word32 a3_45
	word32 a4_46
	word32 a5_47
	word32 a1_949
	word32 t1_947
	word32 a2_950
	word32 a0_948
	word32 ra_48 = memset(ra, fp + -128<i32>, 0<32>, 32<i32>, out t1_947, out a0_948, out a1_949, out a2_950, out a3_45, out a4_46, out a5_47)
	word32 dwLoc4C_881 = SLICE(s3, word32, 32)
	word32 a0_53
	word32 a2_55
	word32 a5_58
	word32 s4_957
	word32 a6_954
	word32 s8_958
	word32 s3_956
	word32 s2_955
	word32 a4_953
	word32 a1_952
	word32 s1_951
	word32 a3_492
	word32 s0_60 = pvPortMalloc(ra_48, s1, 0x1000450<32>, a3_45, a4_46, a5_47, mstatus, dwLoc80, dwLoc7C, dwLoc34, dwArg78, s0, out s1_951, out a0_53, out a1_952, out a2_55, out a3_492, out a4_953, out a5_58, out a6_954, out s2_955, out s3_956, out s4_957, out s8_958)
	branch a0_53 != 0<32> l23048EAC
l23048EAC:
	word32 a5_69 = 0<32>
l23048EB4:
	Mem74[a0_53 + a5_69:byte] = SLICE(a5_69, byte, 0)
	a5_69 = a5_69 + 1<32>
	branch a5_69 != s0_60 + 1104<i32> l23048EB4
l23048EC2:
	word32 fs3_293 = Mem74[0x23087C48<32>:real32]
	word32 fs5_80 = Mem74[0x23087B80<32>:real32]
	word32 fs4_298 = 0<32>
	word32 fs2_83 = Mem74[0x23087B84<32>:real32]
l23048EE2:
	word32 a2_538
	word32 a3_539
	word32 a4_540
	word32 a5_541
	word32 a3_96
	word32 s5_105
	word32 s3_997
	word32 a1_993
	word32 s2_996
	word32 a4_995
	word32 a2_994
	branch lwip_socket(ra_48, 1<32>, 6<32>, a3_492, mstatus, dwLoc8C, a0, dwLoc18, dwArg28, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, out a1_993, out a2_994, out a3_96, out a4_995, out s2_996, out s3_997, out s5_105) >= 0<32> l23048F08
l23048F08:
	word32 a5_970
	lwip_htons(0x1000389<32>, out a5_970)
	dwLoc28 = a0_125
	word32 a0_125
	word32 a0_147
	word32 a3_150
	word32 a4_974
	word32 a1_972
	word32 s2_975
	word32 a2_973
	word32 a3_971
	word32 s3_976
	word32 s4_977
	word32 s0_155 = lwip_connect(ipaddr_addr(s5_105, out a0_125, out a3_971), fp + -144<i32>, mstatus, dwLoc8C, s10, dwLoc38, s9, out a0_147, out a1_972, out a2_973, out a3_150, out a4_974, out s2_975, out s3_976, out s4_977)
	branch a0_147 != 0xFFFFFFFF<32> l23048F48
l23048F48:
	word32 s9_1013
	word32 s4_1008
	word32 s3_1007
	word32 a3_1002
	word32 s10_1014
	word32 s11_1015
	word32 t4_1016
	word32 s8_1012
	word32 s7_1011
	word32 s6_1010
	word32 s5_1009
	word32 a4_1003
	word32 s2_1006
	word32 a7_1005
	word32 a5_1004
	word32 s1_998
	word32 a2_1001
	word32 a1_1000
	word32 a0_999
	word32 ra_181 = printf(ra_48, 0x23086B44<32>, a3_150, dwLocB8, dwLoc98, s3, dwLoc4C_881, a0_125, dwLoc04, out s1_998, out a0_999, out a1_1000, out a2_1001, out a3_1002, out a4_1003, out a5_1004, out a7_1005, out s2_1006, out s3_1007, out s4_1008, out s5_1009, out s6_1010, out s7_1011, out s8_1012, out s9_1013, out s10_1014, out s11_1015, out t4_1016)
	word32 s1_211
	word32 s6_1020
	word32 s3_1019
	word32 a3_1018
	word32 a0_1017
	word32 s2_212
	word32 s4_214
	word32 s0_210 = lwip_setsockopt(s0_155, 6<32>, 1<32>, fp + -148<i32>, mstatus, dwLocBC, dwLoc3C, a0_125, dwLoc08, s1, dwArg38, dwArg58, out s1_211, out a0_1017, out a3_1018, out s2_212, out s3_1019, out s4_214, out s6_1020)
	word32 s8_227 = s1_211 + 903<i32>
	word32 a5_1021
	word32 s11_229 = xTaskGetTickCount(out a5_1021)
	word32 s10_230 = 0<32>
l23048F7C:
	word32 a5_1070
	word32 a5_236 = xTaskGetTickCount(out a5_1070) - s11_229
	branch s8_227 >=u a5_236 l2304903E
l23048F8A:
	word32 s10_246 = s10_230 + s2_212
	word32 a5_1065
	word32 fa0_266
	word32 s6_274
	word32 s7_275
	word32 s2_1066
	word32 s4_1067
	word32 s5_1068
	word32 s9_1069
	word32 a3_1064
	word32 a1_1063
	word32 a0_1062
	__floatundisf(ra_181, s10_246, s4_214 + (s10_230 >> 0x1F<u32>) + CONVERT(s10_246 <u s2_212, bool, word32), fflags, frm, out a0_1062, out a1_1063, out a3_1064, out a5_1065, out s2_1066, out s4_1067, out s5_1068, out s6_274, out s7_275, out s9_1069, out fa0_266, out fflags, out frm)
	word32 fs0_291 = CONVERT(s10_230, word32, real32) / fs5_80 / CONVERT(a5_236, word32, real32) * fs2_83 / fs2_83
	word32 fs1_295 = fa0_266 / fs5_80 / CONVERT(s7_275 - s6_274, word32, real32) * fs2_83 / fs2_83
	branch CONVERT(fs0_291 < fs3_293, bool, word32) == 0<32> l23048FDC
l23048FD8:
	fs3_293 = fs0_291
l23048FDC:
	branch CONVERT(fs4_298 < fs0_291, bool, word32) == 0<32> l23048FE6
l23048FE2:
	fs4_298 = fs0_291
l23048FE6:
	word32 a1_1071
	__extendsfdf2(ra_181, fs3_293, fflags, frm, out a1_1071)
	word32 a1_327
	word32 a0_326 = __extendsfdf2(ra_181, fs0_291, fflags, frm, out a1_327)
	word32 a1_335
	dwLocBC = __extendsfdf2(ra_181, fs4_298, fflags, frm, out a1_335)
	word32 a1_344
	__extendsfdf2(ra_181, fs1_295, fflags, frm, out a1_344)
	dwLocB8 = a0_326
	dwLoc38 = a1_327
	dwLoc3C = a1_335
	word32 a3_360
	word32 s9_376
	word32 s1_1072
	word32 t4_1104
	word32 s7_1101
	word32 s8_1102
	word32 s9_1103
	word32 s4_1098
	word32 s5_1099
	word32 s6_1100
	word32 a7_1095
	word32 s2_1096
	word32 s3_1097
	word32 a3_1092
	word32 a4_1093
	word32 a5_1094
	word32 a0_1089
	word32 a1_1090
	word32 a2_1091
	word32 s1_1088
	word32 s11_1087
	word32 s10_1086
	word32 s8_1085
	word32 s7_1084
	word32 s6_1083
	word32 s5_1082
	word32 s4_1081
	word32 s3_1080
	word32 s2_1079
	word32 a7_1078
	word32 a5_1077
	word32 a0_1073
	word32 a1_1074
	word32 a2_1075
	word32 a4_1076
	ra_181 = printf(snprintf(ra_181, fp + -128<i32>, 32<i32>, 0x23086BA0<32>, dwLocA8, dwLoc88, dwLoc5C, a1_344, a1_335, dwLoc18, s7, out s0_210, out s1_1072, out a0_1073, out a1_1074, out a2_1075, out a3_360, out a4_1076, out a5_1077, out a7_1078, out s2_1079, out s3_1080, out s4_1081, out s5_1082, out s6_1083, out s7_1084, out s8_1085, out s9_376, out s10_1086, out s11_1087), s9_376 + -808<i32>, a3_360, a0_326, dwLoc98, s3, dwLoc4C_881, a0_125, dwLoc04, out s1_1088, out a0_1089, out a1_1090, out a2_1091, out a3_1092, out a4_1093, out a5_1094, out a7_1095, out s2_1096, out s3_1097, out s4_1098, out s5_1099, out s6_1100, out s7_1101, out s8_1102, out s9_1103, out s10_230, out s11_229, out t4_1104)
l2304903E:
	word32 a0_421
	word32 a2_423
	word32 mstatus_1061
	word32 s5_1060
	word32 s3_1059
	word32 a3_1058
	s0_210 = lwip_send(s0_210, 0<32>, mstatus, dwLoc98, a0, dwLoc18, out a0_421, out a2_423, out a3_1058, out s2_212, out s3_1059, out s4_214, out s5_1060, out s8_227, out mstatus_1061)
	branch a0_421 <= 0<32> l23049052
l23049052:
	branch a0_421 == 0<32> l23048F7C
l23049054:
	word32 a2_448
	word32 a3_449
	word32 a4_450
	word32 a5_451
	word32 s4_1110
	word32 s5_1111
	word32 s6_1112
	word32 a1_1107
	word32 s2_1108
	word32 s3_1109
	word32 s1_1105
	word32 a0_1106
	lwip_close(ra_181, s0_210, a2_423, mstatus, s10, dwLoc38, dwLoc08, s9, s1, dwArg68, out s1_1105, out a0_1106, out a1_1107, out a2_448, out a3_449, out a4_450, out a5_451, out s2_1108, out s3_1109, out s4_1110, out s5_1111, out s6_1112)
	word32 a3_473
	word32 s8_1122
	word32 s3_1120
	word32 s4_1121
	word32 a5_1118
	word32 s2_1119
	word32 a4_1117
	word32 a0_1114
	word32 a1_1115
	word32 a2_1116
	word32 s1_1113
	vTaskDelay(2000<i32>, a2_448, a3_449, a4_450, a5_451, mstatus, dwLoc9C, dwLoc98, dwArg78, s0, out s1_1113, out a0_1114, out a1_1115, out a2_1116, out a3_473, out a4_1117, out a5_1118, out s2_1119, out s3_1120, out s4_1121, out s8_1122)
	word32 t4_1140
	word32 s10_1138
	word32 s11_1139
	word32 s8_1136
	word32 s9_1137
	word32 s6_1134
	word32 s7_1135
	word32 s4_1132
	word32 s5_1133
	word32 s2_1130
	word32 s3_1131
	word32 a5_1128
	word32 a7_1129
	word32 a2_1126
	word32 a4_1127
	word32 a0_1124
	word32 a1_1125
	word32 s1_1123
	ra_48 = printf(ra_181, 0x23086B6C<32>, a3_473, dwLocB8, dwLoc98, s3, dwLoc4C_881, a0_125, dwLoc04, out s1_1123, out a0_1124, out a1_1125, out a2_1126, out a3_492, out a4_1127, out a5_1128, out a7_1129, out s2_1130, out s3_1131, out s4_1132, out s5_1133, out s6_1134, out s7_1135, out s8_1136, out s9_1137, out s10_1138, out s11_1139, out t4_1140)
l2304904E:
	s10_230 = s10_230 + a0_421
l23048F34:
	word32 a2_517
	word32 t4_1039
	word32 s11_1038
	word32 s10_1037
	word32 s9_1036
	word32 s8_1035
	word32 s7_1034
	word32 s6_1033
	word32 s5_1032
	word32 s4_1031
	word32 s3_1030
	word32 s2_1029
	word32 a7_1028
	word32 a5_1027
	word32 a4_1026
	word32 a3_1025
	word32 a1_1024
	word32 a0_1023
	word32 s1_1022
	ra_48 = printf(ra_48, 0x23086B30<32>, a3_150, dwLocB8, dwLoc98, s3, dwLoc4C_881, a0_125, dwLoc04, out s1_1022, out a0_1023, out a1_1024, out a2_517, out a3_1025, out a4_1026, out a5_1027, out a7_1028, out s2_1029, out s3_1030, out s4_1031, out s5_1032, out s6_1033, out s7_1034, out s8_1035, out s9_1036, out s10_1037, out s11_1038, out t4_1039)
	word32 s1_1040
	word32 s6_1047
	word32 s5_1046
	word32 s4_1045
	word32 a0_1041
	word32 a1_1042
	word32 s2_1043
	word32 s3_1044
	lwip_close(ra_48, s0_155, a2_517, mstatus, s10, dwLoc38, dwLoc08, s9, s1, dwArg68, out s1_1040, out a0_1041, out a1_1042, out a2_538, out a3_539, out a4_540, out a5_541, out s2_1043, out s3_1044, out s4_1045, out s5_1046, out s6_1047)
l23048EF2:
	word32 s11_991
	word32 t4_992
	word32 s10_990
	word32 s5_985
	word32 a1_980
	word32 s6_986
	word32 s9_989
	word32 s8_988
	word32 s7_987
	word32 a7_981
	word32 s4_984
	word32 s3_983
	word32 s2_982
	word32 a0_979
	word32 s1_978
	ra_48 = printf(ra_48, 0x23086B88<32>, a3_96, dwLocB8, dwLoc98, s3, dwLoc4C_881, dwLoc28, dwLoc04, out s1_978, out a0_979, out a1_980, out a2_538, out a3_539, out a4_540, out a5_541, out a7_981, out s2_982, out s3_983, out s4_984, out s5_985, out s6_986, out s7_987, out s8_988, out s9_989, out s10_990, out s11_991, out t4_992)
l23048EFE:
	word32 s2_1054
	word32 s3_1055
	word32 s4_1056
	word32 s8_1057
	word32 a5_1053
	word32 a4_1052
	word32 s1_1048
	word32 a0_1049
	word32 a1_1050
	word32 a2_1051
	vTaskDelay(1000<i32>, a2_538, a3_539, a4_540, a5_541, mstatus, dwLoc9C, dwLoc98, dwArg78, s0, out s1_1048, out a0_1049, out a1_1050, out a2_1051, out a3_492, out a4_1052, out a5_1053, out s2_1054, out s3_1055, out s4_1056, out s8_1057)
l23048E7C:
	word32 a0_961
	word32 s0_959
	word32 t3_969
	word32 a2_963
	word32 a4_965
	word32 a6_967
	word32 s4_968
	word32 a5_966
	word32 a3_964
	word32 a1_962
	word32 s1_960
	vPortFree(a0, a2_55, a5_58, mstatus, dwArg98, dwArgD8, out s0_959, out s1_960, out a0_961, out a1_962, out a2_963, out a3_964, out a4_965, out a5_966, out a6_967, out s4_968, out t3_969)
	return
iperf_client_tcp_exit:


void ipus_test_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgBC, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ipus_test_cmd_entry:
l23049070:
	branch a2 != 1<32> l23049096
l23049096:
	branch a2 != 2<32> l230490A0
l230490A0:
l230490A8_thunk_printf:
	word32 s1_188
	word32 a0_189
	word32 a1_190
	word32 a2_191
	word32 a3_192
	word32 a4_193
	word32 a5_194
	word32 a7_195
	word32 s2_196
	word32 s3_197
	word32 s4_198
	word32 s5_199
	word32 s6_200
	word32 s7_201
	word32 s8_202
	word32 s9_203
	word32 s10_204
	word32 s11_205
	word32 t4_206
	printf(ra, 0x23086E34<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_188, out a0_189, out a1_190, out a2_191, out a3_192, out a4_193, out a5_194, out a7_195, out s2_196, out s3_197, out s4_198, out s5_199, out s6_200, out s7_201, out s8_202, out s9_203, out s10_204, out s11_205, out t4_206)
	return
l2304909C:
l23049076:
	word32 a0_170
	word32 a1_171
	word32 a2_172
	word32 a3_173
	word32 a4_174
	word32 a5_175
	word32 a7_176
	word32 s2_177
	word32 s3_178
	word32 s4_179
	word32 s5_180
	word32 s6_181
	word32 s7_182
	word32 s8_183
	word32 s9_184
	word32 s10_185
	word32 s11_186
	word32 t4_187
	ra = printf(ra, 0x23086DF4<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_170, out a1_171, out a2_172, out a3_173, out a4_174, out a5_175, out a7_176, out s2_177, out s3_178, out s4_179, out s5_180, out s6_181, out s7_182, out s8_183, out s9_184, out s10_185, out s11_186, out t4_187)
	a0 = 0x2307C4CC<32>
l23049092:
l23049092_thunk_iperf_server_udp_entry:
	iperf_server_udp_entry(ra, s1, a0, mstatus, dwArg04, dwArg20, dwArg24, dwArg44, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
ipus_test_cmd_exit:


void ipu_test_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgBC, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ipu_test_cmd_entry:
l230490AC:
	branch a2 != 1<32> l230490D2
l230490D2:
	branch a2 != 2<32> l230490DC
l230490DC:
l230490E4_thunk_printf:
	word32 s1_188
	word32 a0_189
	word32 a1_190
	word32 a2_191
	word32 a3_192
	word32 a4_193
	word32 a5_194
	word32 a7_195
	word32 s2_196
	word32 s3_197
	word32 s4_198
	word32 s5_199
	word32 s6_200
	word32 s7_201
	word32 s8_202
	word32 s9_203
	word32 s10_204
	word32 s11_205
	word32 t4_206
	printf(ra, 0x23086DD0<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_188, out a0_189, out a1_190, out a2_191, out a3_192, out a4_193, out a5_194, out a7_195, out s2_196, out s3_197, out s4_198, out s5_199, out s6_200, out s7_201, out s8_202, out s9_203, out s10_204, out s11_205, out t4_206)
	return
l230490D8:
l230490B2:
	word32 a0_170
	word32 a1_171
	word32 a2_172
	word32 a3_173
	word32 a4_174
	word32 a5_175
	word32 a7_176
	word32 s2_177
	word32 s3_178
	word32 s4_179
	word32 s5_180
	word32 s6_181
	word32 s7_182
	word32 s8_183
	word32 s9_184
	word32 s10_185
	word32 s11_186
	word32 t4_187
	ra = printf(ra, 0x23086D7C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_170, out a1_171, out a2_172, out a3_173, out a4_174, out a5_175, out a7_176, out s2_177, out s3_178, out s4_179, out s5_180, out s6_181, out s7_182, out s8_183, out s9_184, out s10_185, out s11_186, out t4_187)
	a0 = 0x23086DC0<32>
l230490CE:
l230490CE_thunk_iperf_client_udp_entry:
	iperf_client_udp_entry(ra, s1, a0, mstatus, dwArg04, dwArg20, dwArg24, dwArg44, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
ipu_test_cmd_exit:


void ipc_test_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgBC, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ipc_test_cmd_entry:
l230490E8:
	branch a2 != 1<32> l2304910E
l2304910E:
	branch a2 != 2<32> l23049118
l23049118:
l23049120_thunk_printf:
	word32 s1_188
	word32 a0_189
	word32 a1_190
	word32 a2_191
	word32 a3_192
	word32 a4_193
	word32 a5_194
	word32 a7_195
	word32 s2_196
	word32 s3_197
	word32 s4_198
	word32 s5_199
	word32 s6_200
	word32 s7_201
	word32 s8_202
	word32 s9_203
	word32 s10_204
	word32 s11_205
	word32 t4_206
	printf(ra, 0x23086B0C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_188, out a0_189, out a1_190, out a2_191, out a3_192, out a4_193, out a5_194, out a7_195, out s2_196, out s3_197, out s4_198, out s5_199, out s6_200, out s7_201, out s8_202, out s9_203, out s10_204, out s11_205, out t4_206)
	return
l23049114:
l230490EE:
	word32 a0_170
	word32 a1_171
	word32 a2_172
	word32 a3_173
	word32 a4_174
	word32 a5_175
	word32 a7_176
	word32 s2_177
	word32 s3_178
	word32 s4_179
	word32 s5_180
	word32 s6_181
	word32 s7_182
	word32 s8_183
	word32 s9_184
	word32 s10_185
	word32 s11_186
	word32 t4_187
	ra = printf(ra, 0x23086AC8<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_170, out a1_171, out a2_172, out a3_173, out a4_174, out a5_175, out a7_176, out s2_177, out s3_178, out s4_179, out s5_180, out s6_181, out s7_182, out s8_183, out s9_184, out s10_185, out s11_186, out t4_187)
	a0 = 0x23086DC0<32>
l2304910A:
l2304910A_thunk_iperf_client_tcp_entry:
	iperf_client_tcp_entry(ra, s1, a0, mstatus, dwArg04, dwArg20, dwArg24, dwArg44, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
ipc_test_cmd_exit:


void ips_test_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgA8, word32 dwArgBC, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ips_test_cmd_entry:
l23049124:
	branch a2 != 1<32> l2304914A
l2304914A:
	branch a2 != 2<32> l23049154
l23049154:
l2304915C_thunk_printf:
	word32 s1_159
	word32 a0_160
	word32 a1_161
	word32 a2_162
	word32 a3_163
	word32 a4_164
	word32 a5_165
	word32 a7_166
	word32 s2_167
	word32 s3_168
	word32 s4_169
	word32 s5_170
	word32 s6_171
	word32 s7_172
	word32 s8_173
	word32 s9_174
	word32 s10_175
	word32 s11_176
	word32 t4_177
	printf(ra, 0x23086D58<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_159, out a0_160, out a1_161, out a2_162, out a3_163, out a4_164, out a5_165, out a7_166, out s2_167, out s3_168, out s4_169, out s5_170, out s6_171, out s7_172, out s8_173, out s9_174, out s10_175, out s11_176, out t4_177)
	return
l23049150:
l2304912A:
	word32 a4_155
	word32 a2_154
	word32 a1_153
	word32 a0_152
	word32 a5_156
	word32 s4_157
	word32 s8_158
	s1 = puts(0x23086D20<32>, out a0_152, out a1_153, out a2_154, out a4_155, out a5_156, out s4_157, out s8_158)
	a0 = 0x23086DC0<32>
l23049146:
l23049146_thunk_iperf_server_entry:
	iperf_server_entry(ra, s1, a0, mstatus, dwArg04, dwArg20, dwArg24, dwArg44, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
ips_test_cmd_exit:


void network_netutils_iperf_cli_register()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
network_netutils_iperf_cli_register_entry:
l23049160:
	return
network_netutils_iperf_cli_register_exit:


void cmd_netstat(word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
cmd_netstat_entry:
l23049164:
l2304916E_thunk_tcpip_callback:
	word32 s1_36
	word32 a0_37
	word32 a3_38
	word32 a4_39
	word32 s2_40
	word32 s3_41
	word32 s4_42
	word32 s6_43
	tcpip_callback(0x23041286<32>, 0<32>, a3, a4, mstatus, dwArgD8, dwArg0118, dwArg0158, out s1_36, out a0_37, out a3_38, out a4_39, out s2_40, out s3_41, out s4_42, out s6_43)
	return
cmd_netstat_exit:


void network_netutils_netstat_cli_register()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
network_netutils_netstat_cli_register_entry:
l23049172:
	return
network_netutils_netstat_cli_register_exit:


void ping_usage(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping_cmd
// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ping_usage_entry:
l23049176:
l23049186_thunk_printf:
	word32 s1_38
	word32 a0_39
	word32 a1_40
	word32 a2_41
	word32 a3_42
	word32 a4_43
	word32 a5_44
	word32 a7_45
	word32 s2_46
	word32 s3_47
	word32 s4_48
	word32 s5_49
	word32 s6_50
	word32 s7_51
	word32 s8_52
	word32 s9_53
	word32 s10_54
	word32 s11_55
	word32 t4_56
	printf(ra, 0x23085CD8<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_38, out a0_39, out a1_40, out a2_41, out a3_42, out a4_43, out a5_44, out a7_45, out s2_46, out s3_47, out s4_48, out s5_49, out s6_50, out s7_51, out s8_52, out s9_53, out s10_54, out s11_55, out t4_56)
	return
ping_usage_exit:


void ping_free(word32 ra, word32 a0, word32 a3, word32 a5, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
ping_free_entry:
l2304918A:
	word32 s1_16 = 0x23087000<32>
l230491A0:
	word32 s0_20 = Mem19[a5 + 32<i32>:word32]
	branch a5 != 0<32> l230491C2
l230491C2:
	word32 a5_166
	lwip_htons(CONVERT(Mem19[a5 + 4<i32>:uint16], uint16, word32), out a5_166)
	word32 a5_31
	word32 a2_34
	word32 a4_36
	word32 a0_167
	word32 a1_168
	word32 a3_169
	word32 a7_170
	word32 s2_171
	word32 s3_172
	word32 s4_173
	word32 s5_174
	word32 s6_175
	word32 s7_176
	word32 s8_177
	word32 s9_178
	word32 s10_179
	word32 s11_180
	word32 t4_181
	ra = printf(ra, s1_16 + -84<i32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_16, out a0_167, out a1_168, out a2_34, out a3_169, out a4_36, out a5_31, out a7_170, out s2_171, out s3_172, out s4_173, out s5_174, out s6_175, out s7_176, out s8_177, out s9_178, out s10_179, out s11_180, out t4_181)
	word32 a5_182
	word32 a2_183
	word32 a4_184
	a0 = utils_memp_free(Mem19[s0_20 + 24<i32>:int32], utils_list_pop_front(a4_36, a5_31, out a5_182), a2_34, a4_36, out a2_183, out a3, out a4_184)
	word32 a5_63 = CONVERT(Mem19[s0_20 + 18<i32>:byte], byte, word32)
	Mem65[s0_20 + 18<i32>:byte] = SLICE(a5_63 + 0xFFFFFFFF<32>, byte, 0)
	a5 = a5_63 + 0xFFFFFFFF<32>
l230491A4:
	word32 a2_72
	word32 a5_75
	word32 a5_84
	word32 a3_185
	word32 a4_186
	word32 s0_86 = utils_memp_deinit(raw_remove(a0, a3, a5, mstatus, out a2_72, out a3_185, out a4_186, out a5_75), a2_72, a5_75, mstatus, dwArg0128, dwArg0168, out a5_84)
l230491BE_thunk_vPortFree:
	word32 s0_187
	word32 s1_188
	word32 a0_189
	word32 a1_190
	word32 a2_191
	word32 a3_192
	word32 a4_193
	word32 a5_194
	word32 a6_195
	word32 s4_196
	word32 t3_197
	vPortFree(s0_86, dwArg48, a5_84, mstatus, dwArg0158, dwArg0198, out s0_187, out s1_188, out a0_189, out a1_190, out a2_191, out a3_192, out a4_193, out a5_194, out a6_195, out s4_196, out t3_197)
	return
ping_free_exit:


void ping_timeout(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ping_timeout_entry:
l230491F2:
	word32 s1_20 = 0x23087000<32>
l2304920C:
	word32 s0_24 = Mem23[a5 + 32<i32>:word32]
	branch a5 != 0<32> l23049354
l23049354:
	word32 a5_26
	word32 a0_25 = sys_now(out a5_26)
	s0_24 = Mem23[a4 + 32<i32>:word32]
	word32 a4_29 = Mem23[a5_26 + 8<i32>:word32]
	branch CONVERT(Mem23[s0_24 + 16<i32>:uint16], uint16, word32) >=u a0_25 - a5_26 l23049212
l23049366:
	word32 a5_561
	lwip_htons(CONVERT(Mem23[a4_29 + 4<i32>:uint16], uint16, word32), out a5_561)
	word32 a5_42
	word32 a2_45
	word32 a4_47
	word32 a0_562
	word32 s3_567
	word32 a1_563
	word32 a7_565
	word32 s2_566
	word32 s4_568
	word32 s5_569
	word32 t4_575
	word32 s9_572
	word32 s10_573
	word32 a3_564
	word32 s8_571
	word32 s11_574
	word32 s6_570
	ra = printf(ra, s1_20 + -84<i32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_20, out a0_562, out a1_563, out a2_45, out a3_564, out a4_47, out a5_42, out a7_565, out s2_566, out s3_567, out s4_568, out s5_569, out s6_570, out s7, out s8_571, out s9_572, out s10_573, out s11_574, out t4_575)
	word32 a5_576
	utils_memp_free(Mem23[s0_24 + 24<i32>:int32], utils_list_pop_front(a4_47, a5_42, out a5_576), a2_45, a4_47, out a2, out a3, out a4)
	word32 a5_74 = CONVERT(Mem23[s0_24 + 18<i32>:byte], byte, word32)
	Mem76[s0_24 + 18<i32>:byte] = SLICE(a5_74 + 0xFFFFFFFF<32>, byte, 0)
	a5 = a5_74 + 0xFFFFFFFF<32>
l23049212:
	word32 a4_115 = CONVERT(Mem23[s0_24 + 18<i32>:byte], byte, word32)
	branch a4_115 != 0xA<32> l23049238
l2304921C:
	s0_24 = Mem23[s1_20 + 24<i32>:word32]
	word32 a5_559
	word32 a2_560
	utils_memp_free(s1_20, utils_list_pop_front(a4_115, 0xA<32>, out a5_559), a2, a4_115, out a2_560, out a3, out a4_115)
	Mem98[s0_24 + 18<i32>:byte] = SLICE(CONVERT(Mem23[s0_24 + 18<i32>:byte], byte, word32) + 0xFFFFFFFF<32>, byte, 0)
l23049238:
	word32 a0_120
	word32 s1_126
	word32 s3_132
	word32 s6_139
	word32 s0_551
	word32 a1_552
	word32 a2_553
	word32 a5_554
	word32 a7_555
	word32 s5_557
	word32 s8_558
	word32 s2_556
	word32 s4_133
	word32 mstatus_136
	word32 a4_123
	word32 a3_122
	word32 ra_137 = pbuf_alloc(ra, s0_24, s1_20, 162<i32>, CONVERT(SLICE(CONVERT(Mem100[s0_24 + 10<i32>:uint16], uint16, word32) + 8<32>, word16, 0), word16, word32), 640<i32>, a3, a4_115, mstatus, s4, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_551, out s1_126, out a0_120, out a1_552, out a2_553, out a3_122, out a4_123, out a5_554, out a7_555, out s2_556, out s3_132, out s4_133, out s5_557, out s6_139, out s8_558, out mstatus_136)
	word32 s2_145 = a0_120
	branch a0_120 == 0<32> l2304930E
l23049256:
	word32 a4_146 = CONVERT(Mem100[a0_120 + 10<i32>:uint16], uint16, word32)
	word32 a5_147 = CONVERT(Mem100[a0_120 + 8<i32>:uint16], uint16, word32)
	branch a4_146 != a5_147 l23049308
l23049262:
	branch a5_147 != 0<32> l23049308
l23049266:
	word32 a0_149 = Mem100[s1_126 + 4<i32>:word32]
	word32 s0_150 = Mem100[a0_149 + 24<i32>:word32]
	word32 a0_151 = utils_memp_malloc(a0_149, a3_122, a4_146, out a4_146)
	s4_133 = a0_151
	branch a0_151 == 0<32> l23049308
l23049272:
	Mem156[s1_126:byte] = 8<8>
	Mem157[s1_126 + 1<i32>:byte] = 0<8>
	Mem158[s1_126 + 2<i32>:byte] = 0<8>
	Mem159[s1_126 + 3<i32>:byte] = 0<8>
	word32 a5_160 = CONVERT(Mem159[s0_150 + 14<i32>:uint16], uint16, word32)
	Mem162[s1_126 + 4<i32>:byte] = SLICE(a5_160, byte, 0)
	Mem164[s1_126 + 5<i32>:byte] = SLICE(a5_160 >>u 8<i32>, byte, 0)
	word32 a0_167 = CONVERT(Mem164[s0_150 + 12<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem169[s0_150 + 12<i32>:word16] = SLICE(a0_167 >>u 16<i32>, word16, 0)
	word32 a5_594
	word32 a0_170 = lwip_htons(a0_167 >>u 16<i32>, out a5_594)
	Mem172[s1_126 + 6<i32>:byte] = SLICE(a0_170, byte, 0)
	Mem174[s1_126 + 7<i32>:byte] = SLICE(a0_170 >>u 8<i32>, byte, 0)
	word32 a5_175 = 0<32>
l230492B4:
	branch a5_175 <u s3_132 + -8<i32> l23049396
l23049396:
	a4_146 = s1_126 + a5_175
	Mem180[a4_146 + 8<i32>:byte] = SLICE(a5_175, byte, 0)
	a5_175 = a5_175 + 1<32>
l230492B8:
	word32 a4_597
	word32 a5_598
	word32 a2_595
	word32 a3_596
	word32 a0_186 = inet_chksum(s1_126, s3_132, a4_146, out a2_595, out a3_596, out a4_597, out a5_598)
	word32 a5_193 = CONVERT(Mem192[s1_126 + 7<i32>:byte], byte, word32)
	word32 a4_194 = CONVERT(Mem192[s1_126 + 6<i32>:byte], byte, word32)
	Mem195[s1_126 + 2<i32>:byte] = SLICE(a0_186, byte, 0)
	Mem199[s1_126 + 3<i32>:byte] = SLICE(a0_186 >>u 8<i32>, byte, 0)
	word32 a5_198 = a5_193 << 8<i32> | a4_194
	Mem201[a0_151 + 4<i32>:word16] = SLICE(a5_198, word16, 0)
	word32 s0_225
	word32 a5_600
	word32 a0_599
	ra_137 = raw_sendto(ra_137, a0_186 >>u 8<i32>, a0_120, Mem201[(a0_186 >>u 8<i32>) + 28<i32>:word32] + 20<i32>, a5_198, a0_151, s3_132 + -8<i32>, s6_139, s7, mstatus_136, s4, dwArg04, dwArg18, s1, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_225, out a0_599, out a3_122, out a4_146, out a5_600, out s2_145, out s4_133, out mstatus_136)
	word32 a5_243
	Mem244[s4_133 + 8<i32>:word32] = sys_now(out a5_243)
	utils_list_push_back(s4_133, a5_243)
	word32 a5_248 = CONVERT(Mem244[s0_225 + 18<i32>:byte], byte, word32)
	Mem250[s0_225 + 18<i32>:byte] = SLICE(a5_248 + 1<32>, byte, 0)
	Mem253[a5_248 + 6<32>:word32] = Mem250[a5_248 + 5<32>:word32]
l23049308:
	word32 s5_591
	word32 s6_592
	word32 s8_593
	word32 a7_587
	word32 s2_588
	word32 s3_589
	word32 s4_590
	word32 a0_583
	word32 a1_584
	word32 a2_585
	word32 a5_586
	word32 s0_581
	word32 s1_582
	pbuf_free(ra_137, s2_145, a3_122, a4_146, s4_133, mstatus_136, dwArg0108, out s0_581, out s1_582, out a0_583, out a1_584, out a2_585, out a3_122, out a4_123, out a5_586, out a7_587, out s2_588, out s3_589, out s4_590, out s5_591, out s6_592, out s8_593, out mstatus_136)
l2304930E:
	word32 a4_301
	word32 a5_302
	word32 s1_304
	word32 a3_579
	word32 s8_580
	word32 a0_577
	word32 a2_578
	sys_timeout(0x23049000<32>, 0x230491F2<32>, a3_122, a4_123, mstatus_136, dwArg24, out s1_304, out a0_577, out a2_578, out a3_579, out a4_301, out a5_302, out s8_580)
	word32 s0_309 = Mem289[a5_302:word32]
	branch a4_301 != a5_302 l230493A2
l230493A2:
	return
l23049328:
	word32 a3_323
	word32 a4_324
	word32 s1_327 = sys_untimeout(s1_304 + 498<i32>, s0_309, mstatus_136, out a3_323, out a4_324)
l23049350_thunk_sys_timeout:
	word32 a5_606
	word32 s8_607
	word32 a2_603
	word32 a3_604
	word32 a4_605
	word32 s1_601
	word32 a0_602
	sys_timeout(s1_327, 0x2304918A<32>, a3_323, a4_324, mstatus_136, dwArg44, out s1_601, out a0_602, out a2_603, out a3_604, out a4_605, out a5_606, out s8_607)
	return
ping_timeout_exit:


void ping_recv(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg94, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0094:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ping_recv_entry:
l230493B4:
	word32 a4_7 = CONVERT(Mem0[a2 + 8<i32>:uint16], uint16, word32)
	branch a4_7 != CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32) + 0x1C<32> l230494AE
l230494AE:
l230493C2:
	word32 a0_11 = Mem0[a1 + 20<i32>:word32]
	branch a1 != a4_7 l230494B0
l230494B0:
	return
l230493CC:
	word32 a7_395
	word32 a6_394
	word32 a5_393
	word32 a4_392
	word32 a3_391
	word32 a2_390
	word32 a1_389
	memcpy(fp + -24<i32>, a1 + 0x14<32>, 8<32>, out a1_389, out a2_390, out a3_391, out a4_392, out a5_393, out a6_394, out a7_395)
	word32 a5_46 = CONVERT(bLoc18, byte, word32) | CONVERT(bLoc17, byte, word32)
	branch a5_46 != 0<32> l2304949E
l2304949E:
l230493F2:
	branch CONVERT(wLoc14, uint16, word32) != CONVERT(Mem24[a0_11 + 14<i32>:uint16], uint16, word32) l230494A0
l230493FE:
	branch CONVERT(Mem24[a0_11 + 18<i32>:byte], byte, word32) == 0<32> l230494A0
l23049404:
	word32 s0_51 = Mem24[s1 + 32<i32>:word32]
	word32 a4_52 = CONVERT(wLoc12, uint16, word32)
	branch s1 == 0<32> l230494A0
l2304940C:
	word32 a3_53 = CONVERT(Mem24[s1 + 4<i32>:uint16], uint16, word32)
	branch a4_52 <u a3_53 l230494A0
l23049414:
	branch a4_52 != a3_53 l2304947C
l2304947C:
	word32 s1_56 = Mem24[a3_53:word32]
	branch a3_53 == 0<32> l230494A0
l23049480:
	word32 a2_57 = CONVERT(Mem24[a3_53 + 4<i32>:uint16], uint16, word32)
	branch a2_57 <u a4_52 l2304947A
l2304947A:
l23049488:
	branch a4_52 != a2_57 l230494A0
l2304948C:
	word32 s0_61 = Mem24[a5_46 + 36<i32>:word32]
	branch a3_53 != a5_46 l23049494
l23049492:
	Mem62[s1_56 + 36<i32>:word32] = s0_61
l23049494:
	Mem68[a4_52:word32] = Mem64[a5_46:word32]
l23049418:
	Mem71[a5_46 + 32<i32>:word32] = s0_51
l2304941C:
	word32 a3_87
	word32 a5_397
	word32 a4_396
	ip4addr_ntoa(out a3_87, out a4_396, out a5_397)
	word32 a5_398
	lwip_htons(CONVERT(wLoc12, uint16, word32), out a5_398)
	word32 a5_399
	sys_now(out a5_399)
	0<32> = dwArg94
	word32 a0_119
	word32 a2_123
	word32 a4_125
	word32 s1_128
	word32 s2_131
	word32 s4_133
	word32 t4_412
	word32 s11_411
	word32 s10_410
	word32 s9_409
	word32 s8_408
	word32 s7_407
	word32 s6_406
	word32 s5_405
	word32 s3_404
	word32 a7_403
	word32 a5_402
	word32 a3_401
	word32 a1_400
	word32 ra_127 = printf(ra, 0x23086FD0<32>, a3_87, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_128, out a0_119, out a1_400, out a2_123, out a3_401, out a4_125, out a5_402, out a7_403, out s2_131, out s3_404, out s4_133, out s5_405, out s6_406, out s7_407, out s8_408, out s9_409, out s10_410, out s11_411, out t4_412)
	word32 s0_141 = Mem106[a0_119 + 24<i32>:word32]
	word32 a3_144
	word32 a4_146
	word32 a2_413
	utils_memp_free(a0_119, s1_128, a2_123, a4_125, out a2_413, out a3_144, out a4_146)
	Mem151[s0_141 + 18<i32>:byte] = SLICE(CONVERT(Mem106[s0_141 + 18<i32>:byte], byte, word32) + 0xFFFFFFFF<32>, byte, 0)
	word32 a7_422
	word32 a4_420
	word32 a5_421
	word32 a3_419
	word32 s2_423
	word32 s3_424
	word32 s4_425
	word32 s5_426
	word32 s6_427
	word32 mstatus_429
	word32 s8_428
	word32 a2_418
	word32 a1_417
	word32 a0_416
	word32 s1_415
	word32 s0_414
	pbuf_free(ra_127, s2_131, a3_144, a4_146, s4_133, mstatus, dwArgF8, out s0_414, out s1_415, out a0_416, out a1_417, out a2_418, out a3_419, out a4_420, out a5_421, out a7_422, out s2_423, out s3_424, out s4_425, out s5_426, out s6_427, out s8_428, out mstatus_429)
l230494A0:
	0<32> = dwArg0128
	return
ping_recv_exit:


void ping_api_init(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping_cmd
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ping_api_init_entry:
l230494B4:
	word32 a0_27
	word32 a1_28
	word32 a3_30
	word32 s2_36
	word32 s3_37
	word32 s1_300
	word32 a2_301
	word32 a4_302
	word32 a5_303
	word32 a6_304
	word32 s4_305
	word32 s8_306
	pvPortMalloc(ra, a4, 40<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_300, out a0_27, out a1_28, out a2_301, out a3_30, out a4_302, out a5_303, out a6_304, out s2_36, out s3_37, out s4_305, out s8_306)
	branch a0_27 != 0<32> l230494F6
l230494F6:
	word32 a0_122
	Mem44[dwArg34:word32] = a0_27
	Mem45[a0_27 + 10<i32>:word16] = SLICE(a1_28, word16, 0)
	Mem46[a0_27 + 4<i32>:word32] = 0<32>
	Mem47[a0_27 + 8<i32>:word16] = SLICE(s3_37, word16, 0)
	Mem48[a0_27 + 12<i32>:word16] = 0<16>
	word32 a0_49
	word32 a4_52
	word32 a5_53
	word32 a1_307
	word32 a3_308
	word32 s4_309
	bl_rand(a0_27, dwArg34, out a0_49, out a1_307, out a3_308, out a4_52, out a5_53, out s4_309)
	Mem60[a1 + 14<i32>:word16] = SLICE(a0_49, word16, 0)
	Mem61[a1 + 16<i32>:word16] = SLICE(s2_36, word16, 0)
	Mem62[a1 + 18<i32>:byte] = 0<8>
	Mem66[a5_53 + 20<i32>:word32] = a1
	word32 a0_69
	word32 a4_73
	word32 a3_126
	word32 s0_76 = utils_memp_init(ra, 0xC<32>, 0xA<32>, 4<32>, a4_52, s3_37, mstatus, s2, s0, dwArg04, dwArgD8, dwArgF8, dwArg0118, out a0_69, out a3_126, out a4_73)
	branch a0_69 == 0<32> l2304954C
l2304954C:
	utils_list_init(s0_76 + 32<i32>)
	word32 a4_88
	word32 s1_329
	word32 a2_330
	word32 a5_331
	ra = raw_new(ra, 1<32>, a3_126, a4_73, mstatus, out s1_329, out a2_330, out a3_126, out a4_88, out a5_331)
	branch true l23049568
l23049568:
	Mem99[0x1D<32>:word32] = s0_76
	raw_recv(1<32>, 0x230493B4<32>, s0_76)
	raw_bind(1<32>, 0x2308DE8C<32>)
	word32 s1_332
	word32 a0_333
	word32 a2_334
	word32 a3_335
	word32 a4_336
	word32 a5_337
	word32 s8_338
	sys_timeout(1<32>, 0x230491F2<32>, a3_126, a4_88, mstatus, dwArg14, out s1_332, out a0_333, out a2_334, out a3_335, out a4_336, out a5_337, out s8_338)
l2304955E:
	a0_122 = 0x23086EF8<32>
l2304952C:
	a0_122 = 0x23086EE4<32>
l23049534:
	word32 a3_135
	word32 a5_155
	word32 a2_158
	word32 s1_339
	word32 a0_340
	word32 a1_341
	word32 a2_342
	word32 a4_343
	word32 a5_344
	word32 a7_345
	word32 s2_346
	word32 s3_347
	word32 s4_348
	word32 s5_349
	word32 s6_350
	word32 s7_351
	word32 s8_352
	word32 s9_353
	word32 s10_354
	word32 s11_355
	word32 t4_356
	word32 s1_357
	word32 a0_358
	word32 a1_359
	word32 a3_360
	word32 a4_361
	word32 a7_362
	word32 s2_363
	word32 s3_364
	word32 s4_365
	word32 s5_366
	word32 s6_367
	word32 s7_368
	word32 s8_369
	word32 s9_370
	word32 s10_371
	word32 s11_372
	word32 t4_373
	printf(printf(ra, a0_122, a3_126, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_339, out a0_340, out a1_341, out a2_342, out a3_135, out a4_343, out a5_344, out a7_345, out s2_346, out s3_347, out s4_348, out s5_349, out s6_350, out s7_351, out s8_352, out s9_353, out s10_354, out s11_355, out t4_356), 0x23086F34<32>, a3_135, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_357, out a0_358, out a1_359, out a2_158, out a3_360, out a4_361, out a5_155, out a7_362, out s2_363, out s3_364, out s4_365, out s5_366, out s6_367, out s7_368, out s8_369, out s9_370, out s10_371, out s11_372, out t4_373)
	word32 s0_374
	word32 s1_375
	word32 a0_376
	word32 a1_377
	word32 a2_378
	word32 a3_379
	word32 a4_380
	word32 a5_381
	word32 a6_382
	word32 s4_383
	word32 t3_384
	vPortFree(s0_76, a2_158, a5_155, mstatus, dwArg0128, dwArg0168, out s0_374, out s1_375, out a0_376, out a1_377, out a2_378, out a3_379, out a4_380, out a5_381, out a6_382, out s4_383, out t3_384)
l230494DA:
	word32 s1_310
	word32 a0_311
	word32 a1_312
	word32 a2_313
	word32 a3_314
	word32 a4_315
	word32 a5_316
	word32 a7_317
	word32 s2_318
	word32 s3_319
	word32 s4_320
	word32 s5_321
	word32 s6_322
	word32 s7_323
	word32 s8_324
	word32 s9_325
	word32 s10_326
	word32 s11_327
	word32 t4_328
	printf(ra, 0x23086ECC<32>, a3_30, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_310, out a0_311, out a1_312, out a2_313, out a3_314, out a4_315, out a5_316, out a7_317, out s2_318, out s3_319, out s4_320, out s5_321, out s6_322, out s7_323, out s8_324, out s9_325, out s10_326, out s11_327, out t4_328)
l230494E6:
	0<32> = dwArg0128
	return
ping_api_init_exit:


void ping_cmd(word32 ra, word32 a2, word32 a3, word32 a4, word32 s2, word32 s9, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg2C, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s2:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ping_cmd_entry:
l23049598:
	utils_getopt_init(fp + -84<i32>, 0<32>)
	word32 s5_34 = a2
	word32 s8_345 = 0x23087000<32>
	ra_179 = ra
l230495E2:
	word32 ra_179
l230495E6:
	word32 a0_60
	word32 s10_72
	word32 s11_73
	word32 s6_78
	word32 s7_79
	word32 s9_81
	word32 s3_620
	word32 s4_621
	word32 a1_619
	word32 a3_161
	ra_179 = utils_getopt(ra_179, fp + -84<i32>, s5_34, a3, s8_345 + -152<i32>, a4, s10, dwArg00, dwArg04, dwArg28, ra, out a0_60, out a1_619, out a3_161, out s3_620, out s4_621, out s5_34, out s6_78, out s7_79, out s8_345, out s9_81, out s10_72, out s11_73)
	a4 = 87<i32>
	branch a0_60 != s7_79 l23049640
l23049640:
	branch a0_60 == s6_78 l2304969C
l2304969C:
	word32 a5_614
	word32 a2_612
	word32 a3_613
	word32 a1_611
	atoi(a0_60, out a1_611, out a2_612, out a3_613, out a4, out a5_614)
l23049644:
	branch s6_78 < a0_60 l2304966A
l2304966A:
	branch a0_60 == s9_81 l2304967C
l2304967C:
	word32 a3_624
	word32 a5_625
	word32 a1_622
	word32 a2_623
	atoi(a0_60, out a1_622, out a2_623, out a3_624, out a4, out a5_625)
l2304966E:
	branch a0_60 == s10_72 l2304968C
l2304968C:
	word32 a3_628
	word32 a5_629
	word32 a1_626
	word32 a2_627
	atoi(a0_60, out a1_626, out a2_627, out a3_628, out a4, out a5_629)
l23049672:
	branch a0_60 != s11_73 l230495E6
l23049648:
	word32 a0_142
	branch a0_60 == 63<i32> l230496B4
l230496B4:
	a0_142 = 0x2307D904<32>
l2304964C:
	branch a0_60 == 87<i32> l230496A6
l230496A6:
	word32 a3_617
	word32 a5_618
	word32 a1_615
	word32 a2_616
	atoi(a0_60, out a1_615, out a2_616, out a3_617, out a4, out a5_618)
l23049650:
	a3_161 = 58<i32>
	branch a0_60 != 58<i32> l230495E6
l23049658:
	a0_142 = 0x23086F48<32>
l23049664:
	word32 s11_646
	word32 t4_647
	word32 s9_644
	word32 s10_645
	word32 s7_642
	word32 s8_643
	word32 s5_640
	word32 s6_641
	word32 s3_638
	word32 s4_639
	word32 a7_636
	word32 s2_637
	word32 a4_634
	word32 a5_635
	word32 a1_632
	word32 a2_633
	word32 s1_630
	word32 a0_631
	ra_179 = printf(ra_179, a0_142, a3_161, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_630, out a0_631, out a1_632, out a2_633, out a3_161, out a4_634, out a5_635, out a7_636, out s2_637, out s3_638, out s4_639, out s5_640, out s6_641, out s7_642, out s8_643, out s9_644, out s10_645, out s11_646, out t4_647)
l23049600:
	branch s5_34 != 0x40<32> l230496D4
l230496D4:
	word32 a0_574
	word32 s11_589
	word32 t4_590
	word32 a2_576
	word32 s1_573
	word32 a1_575
	word32 a4_577
	word32 a5_578
	word32 a7_579
	word32 s4_582
	word32 s3_581
	word32 s2_580
	word32 s6_584
	word32 s7_585
	word32 s9_587
	word32 s8_586
	word32 s10_588
	word32 s5_583
	ra_179 = printf(ra_179, 0x23086F94<32>, a3_161, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_573, out a0_574, out a1_575, out a2_576, out a3_161, out a4_577, out a5_578, out a7_579, out s2_580, out s3_581, out s4_582, out s5_583, out s6_584, out s7_585, out s8_586, out s9_587, out s10_588, out s11_589, out t4_590)
l23049676:
	ping_usage(ra_179, a3_161, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C)
l2304960A:
	word32 a0_250
	word32 a3_253
	word32 a4_254
	word32 s1_259
	word32 s2_260
	word32 s3_261
	word32 a5_591
	word32 s0_258 = lwip_gethostbyname(ra_179, Mem32[a0_60:word32], a0_60, a3_161, mstatus, dwArg18, dwArg58, dwArg98, dwArgA8, dwArgD8, dwArgE8, out s1_259, out a0_250, out a3_253, out a4_254, out a5_591, out s2_260, out s3_261)
	branch a0_250 != 0<32> l230496C2
l230496C2:
	ping_api_init(ra_179, s0_258, s3_261, s1_259, a4_254, Mem32[a4_254:word32], s2_260, s3_261, mstatus, dwLoc5C, dwLoc50, dwLoc4C, dwLoc2C, dwLoc20, dwLoc1C, dwArg08, dwArg2C, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108)
l23049616:
	word32 s11_609
	word32 t4_610
	word32 s6_604
	word32 s9_607
	word32 s10_608
	word32 s7_605
	word32 s8_606
	word32 s3_601
	word32 s4_602
	word32 s5_603
	word32 a5_598
	word32 a7_599
	word32 s2_600
	word32 a0_593
	word32 a3_596
	word32 a4_597
	word32 a1_594
	word32 a2_595
	word32 s1_592
	printf(ra_179, 0x23086F74<32>, a3_253, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_592, out a0_593, out a1_594, out a2_595, out a3_596, out a4_597, out a5_598, out a7_599, out s2_600, out s3_601, out s4_602, out s5_603, out s6_604, out s7_605, out s8_606, out s9_607, out s10_608, out s11_609, out t4_610)
l23049622:
	return
ping_cmd_exit:


void network_netutils_ping_cli_register()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
network_netutils_ping_cli_register_entry:
l230496E2:
	return
network_netutils_ping_cli_register_exit:


word32 dirent_type(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      file_info
//      romfs_readdir
//      romfs_stat
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a4 a5
// Preserved: sp
dirent_type_entry:
l230496E6:
	word32 a0_11
	word32 a5_5 = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32)
	branch (a5_5 & 7<32>) == 0<32> l23049702
l23049702:
	a0_11 = 0<32>
l230496EE:
	a0_11 = 2<32>
	branch (a5_5 & 7<32>) == 2<32> l23049704
l230496F6:
	a0_11 = 3<32>
	branch (a5_5 & 7<32>) != 1<32> l23049704
l23049704:
	a5Out = <invalid>
	return a0_11
l230496FE:
	a5Out = <invalid>
	return 1<32>
dirent_type_exit:


word32 dirent_hardfh(word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      file_info
//      romfs_readdir
// MayUse:  a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
dirent_hardfh_entry:
l23049706:
	word32 a5_16 = a5 >>u 8<i32> & 0xFFFFF00<32>
	a5Out = a5_16
	return (a5 << 0x18<u32> | a5 >>u 0x18<u32> | a5 << 8<u32> & 0xFF0000<32> | a5_16) & 0xFFFFFFF0<32>
dirent_hardfh_exit:


word32 dirent_childaddr(word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dirent_file
//      romfs_opendir
// MayUse:  a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
dirent_childaddr_entry:
l2304972E:
	word32 a5_16 = a5 >>u 8<i32> & 0xFFFFF00<32>
	a5Out = a5_16
	return (a5 << 0x18<u32> | a5 >>u 0x18<u32> | a5 << 8<u32> & 0xFF0000<32> | a5_16) & 0xFFFFFFF0<32>
dirent_childaddr_exit:


word32 dirent_size(word32 a5, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      romfs_ioctl
//      romfs_read
//      romfs_lseek
//      romfs_stat
// MayUse:  a5:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
dirent_size_entry:
l23049756:
	a3Out = 0xFF0000<32>
	return a5 << 0x18<u32> | a5 >>u 0x18<u32> | a5 << 8<u32> & 0xFF0000<32> | a5 >>u 8<i32> & 0xFFFFF00<32>
dirent_size_exit:


void romfs_close(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
romfs_close_entry:
l2304977C:
	Mem4[a0 + 4<i32>:word32] = 0<32>
	Mem5[a0 + 8<i32>:word32] = 0<32>
	return
romfs_close_exit:


void romfs_ioctl(word32 a0, word32 a1, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
romfs_ioctl_entry:
l23049788:
	branch a0 == 0<32> l230497D2
l2304978C:
	branch a2 == 0<32> l230497D2
l2304978E:
	branch a1 != 1<32> l230497D2
l230497D2:
	return
l23049796:
	word32 s2_20 = Mem19[a0 + 4<i32>:int32]
	word32 a5_27
	word32 a4_80
	word32 a3_79
	word32 a2_78
	word32 a1_77
	Mem34[(strlen(s2_20 + 16<i32>, out a1_77, out a2_78, out a3_79, out a4_80, out a5_27) + 0x10<32> & 0xFFFFFFF0<32>) + 0x10<32> + s2_20:word32] = a2
	word32 a3_81
	Mem40[dirent_size(a5_27, out a3_81) + 4<i32>:word32] = a2
	0<32> = dwArg38
	return
romfs_ioctl_exit:


void romfs_read(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
romfs_read_entry:
l230497D6:
	word32 s3_19 = Mem17[a0 + 4<i32>:int32]
	word32 a5_29
	word32 a4_136
	word32 a3_135
	word32 a2_134
	word32 a1_133
	word32 a0_26 = strlen(s3_19 + 16<i32>, out a1_133, out a2_134, out a3_135, out a4_136, out a5_29)
	word32 a3_137
	word32 a0_34 = dirent_size(a5_29, out a3_137)
	word32 a2_38 = Mem17[a0 + 8<i32>:int32]
	branch a2_38 >=u a0_34 l23049858
l23049858:
l2304980A:
	word32 a1_46 = (a0_26 + 16<i32> & 0xFFFFFFF0<32>) + 0x10<32> + a2_38 + s3_19
	branch a2_38 + a2 >=u a0_34 l23049846
l23049846:
	word32 a1_138
	word32 a2_139
	word32 a3_140
	word32 a4_141
	word32 a5_142
	word32 a6_143
	word32 a7_144
	memcpy(a1, a1_46, a0_34 - a2_38, out a1_138, out a2_139, out a3_140, out a4_141, out a5_142, out a6_143, out a7_144)
	Mem63[a0 + 8<i32>:word32] = a0_34
l23049820:
	word32 a1_145
	word32 a2_146
	word32 a3_147
	word32 a4_148
	word32 a5_149
	word32 a6_150
	word32 a7_151
	memcpy(a1, a1_46, a2, out a1_145, out a2_146, out a3_147, out a4_148, out a5_149, out a6_150, out a7_151)
	Mem81[a0 + 8<i32>:word32] = Mem17[a0 + 8<i32>:int32] + a2
l23049832:
	return
romfs_read_exit:


word32 file_info(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 s4, word32 dwArg18, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg3C, word32 dwArg7C, word32 dwArgCC, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dirent_file
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +003C:[0..31] Stack +007C:[0..31] Stack +00CC:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a5 ra s0 s1 s2 s3 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t3 t4 tp
// Preserved: s8 sp
file_info_entry:
l2304985C:
	word32 a0_302
	word32 s2_172 = a0
	word32 s5_175 = a1
	word32 a5_160 = 64<i32>
	word32 a5_663
	word32 a2_660
	word32 a4_662
	word32 a1_659
	word32 a3_661
	branch strlen(a0, out a1_659, out a2_660, out a3_661, out a4_662, out a5_663) >u 64<i32> l230499B6
l23049888:
	s3 = 0x4200DFC8<32>
	branch Mem23[0x4200DFC8<32>:int32] != s0 l230498AA
l23049898:
	word32 a3_666
	word32 a4_667
	word32 a1_664
	word32 a2_665
	word32 a5_668
	s0 = s0 + ((strlen(s0 + 16<i32>, out a1_664, out a2_665, out a3_666, out a4_667, out a5_668) + 0x10<32> & 0xFFFFFFF0<32>) + 80<i32>)
l230498AA:
	s7 = 1<32>
l230498AE:
	word32 a0_211
	word32 s1_210
	word32 a5_194
	word32 a0_57 = dirent_type(s0, out a5_194)
	branch a0_57 != 1<32> l2304990E
l2304990E:
	branch a0_57 != 2<32> l23049940
l23049940:
	branch a0_57 == 0<32> l230499C6
l23049942:
	branch Mem23[0x4200DE84<32>:int32] == 0<32> l230499BA
l230499BA:
	word32 a5_698
	xTaskGetTickCount(out a5_698)
l2304994E:
	word32 a5_699
	xTaskGetTickCountFromISR(out a5_699)
l23049952:
	word32 a5_712
	dirent_type(s0, out a5_712)
	word32 s5_106
	word32 s6_107
	word32 s1_128
	word32 s3_132
	word32 s9_738
	word32 s0_728
	word32 a5_731
	word32 s4_733
	word32 s5_734
	word32 s6_735
	word32 s8_737
	word32 s7_736
	word32 s2_732
	word32 a3_729
	word32 a4_730
	word32 a4_718
	word32 s3_721
	word32 s7_723
	word32 s8_724
	word32 s9_725
	word32 s11_727
	word32 s10_726
	word32 s4_722
	word32 a5_719
	word32 s2_720
	word32 s1_713
	word32 a0_714
	word32 a1_715
	word32 a3_717
	word32 a2_716
	word32 ra_126 = log_buf_out(bl_printk(ra, 0x230871F0<32>, 0x230871E4<32>, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_713, out a0_714, out a1_715, out a2_716, out a3_717, out a4_718, out a5_719, out s2_720, out s3_721, out s4_722, out s5_106, out s6_107, out s7_723, out s8_724, out s9_725, out s10_726, out s11_727), s0, 8<32>, 0<32>, s5_106, s6_107, s4, dwLoc20, dwLoc1C, dwLoc10, dwArg18, dwArg2C, dwArg3C, dwArgCC, out s0_728, out s1_128, out a3_729, out a4_730, out a5_731, out s2_732, out s3_132, out s4_733, out s5_734, out s6_735, out s7_736, out s8_737, out s9_738)
	branch Mem73[s3_132 + -380<i32>:int32] == 0<32> l230499C0
l230499C0:
	word32 a5_700
	xTaskGetTickCount(out a5_700)
l23049998:
	word32 a5_701
	xTaskGetTickCountFromISR(out a5_701)
l2304999C:
	word32 s8_708
	word32 s11_711
	word32 s9_709
	word32 s10_710
	word32 a1_703
	word32 a2_704
	word32 a3_705
	word32 s4_707
	word32 a4_706
	word32 a0_702
	ra = bl_printk(ra_126, 0x23087234<32>, s1_128 + 484<i32>, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1, out a0_702, out a1_703, out a2_704, out a3_705, out a4_706, out a5_160, out s2_172, out s3, out s4_707, out s5_175, out s6, out s7, out s8_708, out s9_709, out s10_710, out s11_711)
l23049912:
	word32 a4_687
	word32 a1_684
	word32 a3_686
	word32 a3_691
	word32 a4_692
	word32 a2_690
	word32 a5_688
	word32 a1_689
	word32 a2_685
	branch memcmp(a0, s0 + 16<i32>, strlen(a0, out a1_684, out a2_685, out a3_686, out a4_687, out a5_688), out a1_689, out a2_690, out a3_691, out a4_692, out a5_194) != 0<32> l230499C6
l23049926:
	word32 a1_693
	word32 a2_694
	word32 a3_695
	word32 a5_697
	word32 a4_696
	a5_194 = CONVERT(Mem23[strlen(a0, out a1_693, out a2_694, out a3_695, out a4_696, out a5_697) + s0 + 16<i32>:byte], byte, word32)
	branch a5_194 != 0<32> l230499C6
l23049934:
	s1_210 = Mem23[0x4200DFC8<32>:int32]
	a0_211 = dirent_hardfh(a5_194, out a5_160)
l230498B8:
	word32 a3_671
	word32 a2_670
	word32 a1_669
	word32 a4_672
	word32 a5_673
	word32 a4_677
	word32 a3_676
	word32 a1_674
	word32 a2_675
	branch memcmp(a0, s0 + 16<i32>, strlen(a0, out a1_669, out a2_670, out a3_671, out a4_672, out a5_673), out a1_674, out a2_675, out a3_676, out a4_677, out a5_194) != 0<32> l230499C6
l230498CE:
	word32 a4_682
	word32 a1_679
	word32 a3_681
	word32 a2_680
	word32 a5_683
	a5_194 = CONVERT(Mem23[strlen(a0, out a1_679, out a2_680, out a3_681, out a4_682, out a5_683) + s0 + 16<i32>:byte], byte, word32)
	branch a5_194 != 0<32> l230499C6
l230499C6:
	s6 = Mem23[0x4200DFC8<32>:int32]
	word32 a5_678
	s0 = s6 + dirent_hardfh(a5_194, out a5_678)
	branch s0 <u s1 l230498AE
l230499D8:
	branch Mem23[0x4200DE84<32>:int32] == 0<32> l23049A10
l23049A10:
	word32 a5_739
	xTaskGetTickCount(out a5_739)
l230499E2:
	word32 a5_740
	xTaskGetTickCountFromISR(out a5_740)
l230499E6:
	word32 a4_745
	word32 a3_744
	word32 s8_747
	word32 s4_746
	word32 s10_749
	word32 s9_748
	word32 s11_750
	word32 a1_742
	word32 a2_743
	word32 a0_741
	ra = bl_printk(ra, 0x23087264<32>, 0x230871E4<32>, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1, out a0_741, out a1_742, out a2_743, out a3_744, out a4_745, out a5_160, out s2_172, out s3, out s4_746, out s5_175, out s6, out s7, out s8_747, out s9_748, out s10_749, out s11_750)
l230499B6:
	a0_302 = 0xFFFFFFFF<32>
l230498DE:
	a0_211 = dirent_hardfh(a5_194, out a5_160)
	branch a0_211 == 0<32> l230498EC
l230498E6:
	s1_210 = Mem23[0x4200DFC8<32>:int32]
l230498EA:
	s1 = s1_210 + a0_211
l230498EC:
	Mem319[a1:word32] = s0
	Mem326[a2:word32] = s1
	a0_302 = 0<32>
l230498F6:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1
	a0Out = a0_302
	a2Out = dwArg0138
	a5Out = a5_160
	s2Out = s2_172
	s3Out = s3
	s5Out = s5_175
	s6Out = s6
	s7Out = s7
	return ra
file_info_exit:


void romfs_closedir(word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
romfs_closedir_entry:
l23049A16:
	branch a1 == 0<32> l23049A2A
l23049A2A:
	return
l23049A18:
	word32 s1_52
	word32 a0_53
	word32 a2_54
	word32 a3_55
	word32 a4_56
	word32 a5_57
	word32 a6_58
	word32 t3_59
	aos_free(a1, a2, a5, mstatus, dwArg0148, dwArg0188, out s1_52, out a0_53, out a2_54, out a3_55, out a4_56, out a5_57, out a6_58, out t3_59)
	return
romfs_closedir_exit:


void romfs_lseek(word32 ra, word32 a0, word32 a1, word32 a5, word32 dwArg08, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
romfs_lseek_entry:
l23049A2E:
	word32 a1_12 = 0xFFFFFFFF<32>
	branch a0 == 0<32> l23049A5C
l23049A3C:
	word32 a3_18
	word32 a0_17 = dirent_size(a5, out a3_18)
	word32 s0_21 = a1
	branch dwArg44 != 0<32> l23049A66
l23049A66:
	branch dwArg44 != 2<32> l23049A9A
l23049A9A:
	branch dwArg44 != 1<32> l23049AA6
l23049AA6:
	word32 s1_316
	word32 a0_317
	word32 a1_318
	word32 a2_319
	word32 a3_320
	word32 a4_321
	word32 a5_322
	word32 a7_323
	word32 s2_324
	word32 s3_325
	word32 s4_326
	word32 s5_327
	word32 s6_328
	word32 s7_329
	word32 s8_330
	word32 s9_331
	word32 s10_332
	word32 s11_333
	word32 t4_334
	printf(ra, 0x230872BC<32>, a3_18, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_316, out a0_317, out a1_318, out a2_319, out a3_320, out a4_321, out a5_322, out a7_323, out s2_324, out s3_325, out s4_326, out s5_327, out s6_328, out s7_329, out s8_330, out s9_331, out s10_332, out s11_333, out t4_334)
l23049AA0:
	s0_21 = Mem11[9<32>:word32]
	a1_12 = 0<32>
l23049A6C:
	branch true l23049A80
l23049A80:
	a1_12 = a0_17 + 0xFFFFFFFF<32>
l23049A82:
	branch a1_12 < 0<32> l23049A8A
l23049A70:
	word32 s1_297
	word32 a0_298
	word32 a1_299
	word32 a2_300
	word32 a3_301
	word32 a4_302
	word32 a5_303
	word32 a7_304
	word32 s2_305
	word32 s3_306
	word32 s4_307
	word32 s5_308
	word32 s6_309
	word32 s7_310
	word32 s8_311
	word32 s9_312
	word32 s10_313
	word32 s11_314
	word32 t4_315
	printf(ra, 0x230872BC<32>, a3_18, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_297, out a0_298, out a1_299, out a2_300, out a3_301, out a4_302, out a5_303, out a7_304, out s2_305, out s3_306, out s4_307, out s5_308, out s6_309, out s7_310, out s8_311, out s9_312, out s10_313, out s11_314, out t4_315)
l23049A4A:
	branch false l23049A86
l23049A86:
	branch a0_17 >=u a1_12 l23049AB6
l23049AB6:
	Mem84[a1_12 + 8<i32>:word32] = s0_21
l23049A8A:
	word32 a0_279
	word32 a2_281
	word32 a3_282
	word32 a4_283
	word32 a5_284
	word32 s2_286
	word32 a7_285
	word32 s3_287
	word32 s4_288
	word32 a1_280
	word32 s1_278
	word32 s5_289
	word32 s6_290
	word32 s7_291
	word32 s8_292
	word32 s9_293
	word32 s10_294
	word32 s11_295
	word32 t4_296
	printf(ra, 0x230872BC<32>, a3_18, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_278, out a0_279, out a1_280, out a2_281, out a3_282, out a4_283, out a5_284, out a7_285, out s2_286, out s3_287, out s4_288, out s5_289, out s6_290, out s7_291, out s8_292, out s9_293, out s10_294, out s11_295, out t4_296)
l23049A4E:
	word32 t4_277
	word32 s10_275
	word32 s11_276
	word32 s8_273
	word32 s9_274
	word32 s6_271
	word32 s7_272
	word32 s4_269
	word32 s5_270
	word32 s2_267
	word32 s3_268
	word32 a5_265
	word32 a7_266
	word32 a3_263
	word32 a4_264
	word32 a1_261
	word32 a2_262
	word32 s1_259
	word32 a0_260
	printf(ra, 0x230872BC<32>, a3_18, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_259, out a0_260, out a1_261, out a2_262, out a3_263, out a4_264, out a5_265, out a7_266, out s2_267, out s3_268, out s4_269, out s5_270, out s6_271, out s7_272, out s8_273, out s9_274, out s10_275, out s11_276, out t4_277)
l23049A5C:
	return
romfs_lseek_exit:


void romfs_readdir(word32 a1, word32 a5, word32 dwArg1C, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a5:[0..31] Stack +001C:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t1 t3 tp
// Preserved: sp
romfs_readdir_entry:
l23049ABA:
	branch a1 == 0<32> l23049B94
l23049B94:
	return
l23049ABC:
	a1_70 = a1
l23049AF6:
	word32 a1_70
	word32 s0_41 = Mem40[a5 + 16<i32>:word32]
	branch a5 != 0<32> l23049B50
l23049B50:
	word32 s8_42 = Mem40[s0_41 + 12<i32>:int32]
	branch a5 >=u s8_42 l23049B32
l23049B58:
	word32 s9_44 = Mem40[0x4200DFC8<32>:int32]
l23049B5E:
	word32 s7_48 = Mem47[s0_41 + 16<i32>:int32]
	branch s7_48 >=u s8_42 l23049B32
l23049B66:
	word32 a5_351
	word32 a0_52 = dirent_hardfh(a5, out a5_351)
	branch a0_52 == 0<32> l23049AFE
l23049B70:
	branch s7_48 == 0<32> l23049B32
l23049B32:
l23049B74:
	branch dirent_type(s7_48, out a5) <=u 0xFFFFFFFE<32> l23049AFE
l23049B80:
	Mem66[a0_52 + s9_44 + 16<i32>:word32] = s0_41
l23049AFA:
	Mem68[a5 + 16<i32>:word32] = Mem40[a5 + 8<i32>:word32]
l23049AFE:
	word32 a5_81
	word32 a4_353
	word32 a3_352
	a1_70 = strncpy(a1 + 25<i32>, a1_70 + 0x10<32>, 64<i32>, out a3_352, out a4_353, out a5_81)
	Mem90[Mem72[a1 + 41<i32>:word32] + 89<i32>:byte] = 0<8>
	word32 a5_100
	word32 a0_103 = dirent_hardfh(a5_81, out a5_100)
	branch a0_103 != 0<32> l23049B86
l23049B86:
	a5_100 = Mem90[0x4200DFC8<32>:int32]
	a0_103 = a0_103 + a5_100
l23049B18:
l23049B1A:
	word32 s0_102 = Mem90[a5_100 + 24<i32>:word32]
	Mem104[a0_103 + 16<i32>:word32] = s0_102
	a5 = a5_100 & 0xFFFF00<32>
	branch a5 != 0x2E2E00<32> l23049B8E
l23049B8E:
	branch a5 != 0x2FFFE00<32> l23049B2C
l23049B92:
l23049B26:
	a5 = CONVERT(Mem104[s0_102 + 27<i32>:byte], byte, word32)
	branch a5 == 0<32> l23049AF6
l23049B2C:
l23049B34:
	0<32> = dwArg0128
	0<32> = dwArg1C
	return
romfs_readdir_exit:


word32 dirent_file(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 s4, word32 s6, word32 dwArg18, word32 dwArg4C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      romfs_opendir
//      romfs_stat
//      romfs_open
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +004C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a2 a5 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dirent_file_entry:
l23049B98:
	word32 a0_122
	word32 s0_171 = a0
	word32 s2_172 = a1
	word32 s1_162 = a2
	word32 s3_113 = 0x23081000<32>
	word32 a4_776
	word32 a3_771
	word32 a5_773
	word32 a2_770
	word32 a1_769
	word32 a4_772
	word32 a3_775
	word32 a1_774
	word32 a5_120
	word32 a2_166
	branch strlen(a0, out a1_769, out a2_770, out a3_771, out a4_772, out a5_773) <u strlen(0x2308149C<32>, out a1_774, out a2_166, out a3_775, out a4_776, out a5_120) l23049C0E
l23049BC8:
	word32 a0_204
	word32 ra_130
	word32 a2_783
	word32 a3_784
	word32 a5_781
	word32 a1_782
	word32 a3_779
	word32 a2_778
	word32 a1_777
	word32 a4_780
	word32 a4_785
	word32 a5_786
	branch memcmp(a0, 0x2308149C<32>, strlen(0x2308149C<32>, out a1_777, out a2_778, out a3_779, out a4_780, out a5_781), out a1_782, out a2_783, out a3_784, out a4_785, out a5_786) == 0<32> l23049C18
l23049C18:
	word32 a1_787
	word32 a5_791
	word32 a2_788
	word32 a3_789
	word32 a4_790
	s0_171 = a0 + strlen(0x2308149C<32>, out a1_787, out a2_788, out a3_789, out a4_790, out a5_791)
	word32 a5_67 = CONVERT(Mem21[s0_171:byte], byte, word32)
	branch a5_67 == 47<i32> l23049C4A
l23049C4A:
	s0_171 = s0_171 + 1<32>
l23049C2E:
	branch a5_67 == 0<32> l23049C4C
l23049C4C:
	a2_166 = 0x4200E000<32>
	word32 s4_109 = 0<32>
	s3_113 = 0x4200DFC8<32>
	word32 s7_110 = 1<32>
	s6_115 = s6
	ra_130 = ra
l23049C86:
	word32 s6_115
	a5_120 = CONVERT(Mem95[s0_171:byte], byte, word32)
	branch a5_120 == 0<32> l23049DA2
l23049C8E:
	word32 a5_102
	word32 a3_797
	word32 a4_798
	word32 a1_796
	word32 a0_103 = strchr(s0_171, 47<i32>, out a1_796, out a2_166, out a3_797, out a4_798, out a5_102)
	branch s4_109 != s7_110 l23049CB2
l23049C9E:
	s4_109 = Mem95[s3_113:int32]
	branch s6_115 == dirent_childaddr(a5_102, out a5_120) + s4_109 l23049DC4
l23049DC4:
	a0_122 = 0xFFFFFFFE<32>
l23049CB0:
l23049CB2:
	branch a0_103 != 0<32> l23049D42
l23049D42:
	word32 a2_802
	word32 t1_799
	word32 a0_800
	word32 a1_801
	word32 a3_803
	word32 a4_804
	word32 a5_805
	word32 ra_137 = memset(ra_130, fp + -116<i32>, 0<32>, 65<i32>, out t1_799, out a0_800, out a1_801, out a2_802, out a3_803, out a4_804, out a5_805)
	word32 a5_810
	word32 a3_808
	word32 a2_807
	word32 a1_806
	word32 a4_809
	word32 a6_811
	word32 a7_812
	memcpy(fp + -116<i32>, s0_171, a0_103 - s0_171, out a1_806, out a2_807, out a3_808, out a4_809, out a5_810, out a6_811, out a7_812)
	word32 a0_164
	word32 s5_174
	word32 a5_813
	ra_130 = file_info(ra_137, s0_171, s1_162, fp + -116<i32>, fp + -124<i32>, fp + -120<i32>, s4_109, dwLoc68, dwLoc54, s6, s4, s0, dwLoc04, dwArg4C, dwArg0118, out s0_171, out s1_162, out a0_164, out a2_166, out a5_813, out s2_172, out s3_113, out s5_174, out s6_115, out s7_110)
	branch a0_164 == 0<32> l23049D9A
l23049D9A:
	s0_171 = s5_174 + 1<i32>
	s4_109 = 1<32>
l23049D66:
	branch Mem163[0x4200DE84<32>:int32] == 0<32> l23049D94
l23049D94:
	word32 a5_840
	xTaskGetTickCount(out a5_840)
l23049D70:
	word32 a5_841
	xTaskGetTickCountFromISR(out a5_841)
l23049D74:
	a0_204 = 0x230871BC<32>
l23049CB6:
	word32 a3_816
	word32 a5_818
	word32 a4_817
	word32 a2_815
	word32 a1_814
	branch strlen(s0_171, out a1_814, out a2_815, out a3_816, out a4_817, out a5_818) <=u 64<i32> l23049CF8
l23049CF8:
	word32 a0_216
	word32 s7_822
	word32 s0_819
	word32 s6_821
	word32 s5_820
	word32 ra_230 = file_info(ra_130, s0_171, s1_162, s0_171, fp + -124<i32>, fp + -120<i32>, s4_109, dwLoc68, dwLoc54, s6, s4, s0, dwLoc04, dwArg4C, dwArg0118, out s0_819, out s1_162, out a0_216, out a2_166, out a5_120, out s2_172, out s3_113, out s5_820, out s6_821, out s7_822)
	branch a0_216 == 0<32> l23049DA2
l23049DA2:
	Mem248[s2_172:word32] = a5_120
	Mem251[a5_120:word32] = s1_162
	a0_122 = 0<32>
	s0_171 = dwArg64
l23049D04:
	branch Mem163[0x4200DE84<32>:int32] == 0<32> l23049D3C
l23049D3C:
	word32 a5_838
	xTaskGetTickCount(out a5_838)
l23049D0E:
	word32 a5_839
	xTaskGetTickCountFromISR(out a5_839)
l23049D12:
	word32 s9_852
	word32 s10_853
	word32 s11_854
	word32 a4_846
	word32 s6_849
	word32 s8_851
	word32 s7_850
	word32 s5_848
	word32 s4_847
	word32 a0_843
	word32 a3_845
	word32 a1_844
	word32 s1_842
	bl_printk(ra_230, 0x23087168<32>, 0x230871E4<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_842, out a0_843, out a1_844, out a2_166, out a3_845, out a4_846, out a5_120, out s2_172, out s3_113, out s4_847, out s5_848, out s6_849, out s7_850, out s8_851, out s9_852, out s10_853, out s11_854)
	s0_171 = dwLoc58
l23049CC4:
	branch Mem163[0x4200DE84<32>:int32] == 0<32> l23049CF2
l23049CF2:
	word32 a5_823
	xTaskGetTickCount(out a5_823)
l23049CCE:
	word32 a5_824
	xTaskGetTickCountFromISR(out a5_824)
l23049CD2:
	a0_204 = 0x23087144<32>
l23049C30:
	branch Mem21[0x4200DE84<32>:int32] == 0<32> l23049C44
l23049C44:
	word32 a5_794
	xTaskGetTickCount(out a5_794)
l23049C3A:
	word32 a5_795
	xTaskGetTickCountFromISR(out a5_795)
l23049C3E:
l23049BDE:
	branch Mem21[0x4200DE84<32>:int32] == 0<32> l23049C12
l23049C12:
	word32 a5_792
	xTaskGetTickCount(out a5_792)
l23049BE8:
	word32 a5_793
	xTaskGetTickCountFromISR(out a5_793)
l23049BEC:
l23049BF0:
	a0_204 = 0x2308711C<32>
	ra_130 = ra
l23049C0A:
	word32 s8_834
	word32 s11_837
	word32 s10_836
	word32 s9_835
	word32 a3_828
	word32 s5_831
	word32 s7_833
	word32 s6_832
	word32 s4_830
	word32 a4_829
	word32 s1_825
	word32 a1_827
	word32 a0_826
	bl_printk(ra_130, a0_204, 0x230871E4<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_825, out a0_826, out a1_827, out a2_166, out a3_828, out a4_829, out a5_120, out s2_172, out s3_113, out s4_830, out s5_831, out s6_832, out s7_833, out s8_834, out s9_835, out s10_836, out s11_837)
l23049C0E:
	a0_122 = 0xFFFFFFFF<32>
l23049DAE:
	s0Out = s0_171
	s1Out = dwArg0118
	a0Out = a0_122
	a2Out = a2_166
	a5Out = a5_120
	s2Out = s2_172
	s3Out = s3_113
	return dwArg0158
dirent_file_exit:


void romfs_opendir(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 s6, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg2C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s6:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
romfs_opendir_entry:
l23049DC8:
	branch Mem12[0x4200DFC8<32>:int32] != 0<32> l23049E24
l23049E24:
	word32 a0_22
	word32 s1_30
	word32 s4_33
	word32 s3_305
	word32 s2_304
	word32 a5_303
	word32 a4_302
	word32 a3_301
	aos_malloc(ra, a1, 93<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_30, out a0_22, out a3_301, out a4_302, out a5_303, out s2_304, out s3_305, out s4_33)
	branch a0_22 != 0<32> l23049E36
l23049E36:
	word32 a0_53
	word32 a2_55
	word32 a5_58
	word32 s0_61
	word32 s1_62
	word32 s2_63
	word32 s3_315
	word32 a5_314
	word32 a4_313
	word32 a3_312
	word32 a2_311
	word32 a1_310
	word32 a0_309
	word32 t1_308
	dirent_file(memset(ra, a0_22, 0<32>, 93<i32>, out t1_308, out a0_309, out a1_310, out a2_311, out a3_312, out a4_313, out a5_314), a0_22, s1_30, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, s4_33, s6, dwLoc08, dwArg2C, dwArgF8, out s0_61, out s1_62, out a0_53, out a2_55, out a5_58, out s2_63, out s3_315)
	branch a0_53 != 0<32> l23049E84
l23049E84:
	word32 a2_318
	word32 a3_319
	word32 a0_317
	word32 s1_316
	word32 a4_320
	word32 a5_321
	word32 a6_322
	word32 t3_323
	aos_free(s0_61, a2_55, a5_58, mstatus, dwArg0138, dwArg0178, out s1_316, out a0_317, out a2_318, out a3_319, out a4_320, out a5_321, out a6_322, out t3_323)
l23049E4C:
	word32 a5_100
	word32 s2_95 = Mem12[s2_63:int32]
	branch s1_62 != s2_95 l23049E74
l23049E74:
	word32 a0_97 = dirent_childaddr(a5_58, out a5_100)
	branch a0_97 == 0<32> l23049E32
l23049E7C:
	Mem102[dwArg04 + 8<i32>:word32] = s2_95 + a0_97
l23049E56:
	word32 a1_324
	word32 a2_325
	word32 a3_326
	word32 a4_327
	Mem114[s1_62 + ((strlen(s1_62 + 16<i32>, out a1_324, out a2_325, out a3_326, out a4_327, out a5_100) + 0x10<32> & 0xFFFFFFF0<32>) + 80<i32>) + 8<i32>:word32] = dwArg04
l23049E6A:
	Mem119[dwArg04 + 16<i32>:word32] = 0<32>
	Mem121[a5_100 + 12<i32>:word32] = dwArg04
l23049E32:
l23049DE0:
	branch Mem12[0x4200DE84<32>:int32] == 0<32> l23049E1E
l23049E1E:
	word32 a5_306
	xTaskGetTickCount(out a5_306)
l23049DEA:
	word32 a5_307
	xTaskGetTickCountFromISR(out a5_307)
l23049DEE:
	word32 s1_328
	word32 a0_329
	word32 a1_330
	word32 a2_331
	word32 a3_332
	word32 a4_333
	word32 a5_334
	word32 s2_335
	word32 s3_336
	word32 s4_337
	word32 s5_338
	word32 s6_339
	word32 s7_340
	word32 s8_341
	word32 s9_342
	word32 s10_343
	word32 s11_344
	bl_printk(ra, 0x23087374<32>, 0x230871E4<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_328, out a0_329, out a1_330, out a2_331, out a3_332, out a4_333, out a5_334, out s2_335, out s3_336, out s4_337, out s5_338, out s6_339, out s7_340, out s8_341, out s9_342, out s10_343, out s11_344)
l23049E10:
	return
romfs_opendir_exit:


void romfs_stat(word32 ra, word32 s0, word32 a1, word32 s2, word32 s4, word32 s6, word32 dwArg08, word32 dwArg2C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +002C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
romfs_stat_entry:
l23049E8C:
	word32 a0_22
	word32 s1_31
	word32 s2_32
	word32 s0_263
	word32 s3_266
	word32 a5_265
	word32 a2_264
	word32 ra_29 = dirent_file(ra, s0, a1, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, s4, s6, dwLoc08, dwArg2C, dwArgF8, out s0_263, out s1_31, out a0_22, out a2_264, out a5_265, out s2_32, out s3_266)
	branch a0_22 == 0<32> l23049EF2
l23049EF2:
	branch s2_32 != Mem19[0x4200DFC8<32>:int32] l23049F06
l23049F06:
	word32 a5_107
	word32 a5_269
	word32 a0_55 = dirent_type(s2_32, out a5_269)
	branch a0_55 != 1<32> l23049F1C
l23049F1C:
	branch a0_55 != 2<32> l23049F2E
l23049F2E:
	branch Mem19[0x4200DE84<32>:int32] == 0<32> l23049F62
l23049F62:
	word32 a5_288
	xTaskGetTickCount(out a5_288)
l23049F38:
	word32 a5_289
	xTaskGetTickCountFromISR(out a5_289)
l23049F3C:
	word32 s1_290
	word32 a0_291
	word32 a1_292
	word32 a2_293
	word32 a3_294
	word32 a4_295
	word32 a5_296
	word32 s2_297
	word32 s3_298
	word32 s4_299
	word32 s5_300
	word32 s6_301
	word32 s7_302
	word32 s8_303
	word32 s9_304
	word32 s10_305
	word32 s11_306
	bl_printk(ra_29, 0x230874D8<32>, 0x230871E4<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_290, out a0_291, out a1_292, out a2_293, out a3_294, out a4_295, out a5_296, out s2_297, out s3_298, out s4_299, out s5_300, out s6_301, out s7_302, out s8_303, out s9_304, out s10_305, out s11_306)
l23049F22:
	word32 a3_270
	Mem106[dirent_size(2<32>, out a3_270) + 16<i32>:word32] = s1_31
	a5_107 = 0x8000000<32>
l23049F12:
	Mem108[s1_31 + 16<i32>:word32] = 0<32>
	a5_107 = 0x4000000<32>
l23049F18:
	Mem112[a5_107 + 4<i32>:word32] = s1_31
l23049F00:
	Mem113[s1_31 + 16<i32>:word32] = 0<32>
l23049EAA:
	branch Mem19[0x4200DE84<32>:int32] == 0<32> l23049EEC
l23049EEC:
	word32 a5_267
	xTaskGetTickCount(out a5_267)
l23049EB4:
	word32 a5_268
	xTaskGetTickCountFromISR(out a5_268)
l23049EB8:
	word32 s6_282
	word32 s7_283
	word32 s8_284
	word32 s9_285
	word32 s10_286
	word32 s11_287
	word32 s5_281
	word32 s4_280
	word32 a4_276
	word32 s3_279
	word32 s2_278
	word32 a5_277
	word32 a3_275
	word32 s1_271
	word32 a2_274
	word32 a1_273
	word32 a0_272
	bl_printk(ra_29, 0x230874AC<32>, 0x230871E4<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_271, out a0_272, out a1_273, out a2_274, out a3_275, out a4_276, out a5_277, out s2_278, out s3_279, out s4_280, out s5_281, out s6_282, out s7_283, out s8_284, out s9_285, out s10_286, out s11_287)
l23049EDE:
	return
romfs_stat_exit:


void romfs_open(word32 ra, word32 a1, word32 s4, word32 s6, word32 dwArg1C, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgE8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] ra:[0..31] s4:[0..31] s6:[0..31] Stack +001C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
romfs_open_entry:
l23049F68:
	word32 a0_219
	branch Mem0[0x4200DFC8<32>:int32] != 0<32> l23049FCE
l23049FCE:
	word32 a0_116
	word32 a3_618
	word32 a2_617
	word32 a4_619
	word32 a5_620
	word32 a1_616
	word32 a0_27 = strlen(a1, out a1_616, out a2_617, out a3_618, out a4_619, out a5_620)
	word32 a2_622
	word32 a1_621
	word32 a4_624
	word32 a5_625
	word32 a1_626
	word32 a2_627
	word32 a3_623
	word32 a4_629
	word32 a5_630
	word32 a3_628
	branch strncmp(a1, 0x2308149C<32>, strlen(0x2308149C<32>, out a1_621, out a2_622, out a3_623, out a4_624, out a5_625), out a1_626, out a2_627, out a3_628, out a4_629, out a5_630) != 0<32> l2304A01C
l2304A01C:
	branch Mem20[0x4200DE84<32>:int32] == 0<32> l2304A04E
l2304A04E:
	word32 a5_637
	xTaskGetTickCount(out a5_637)
l2304A026:
	word32 a5_638
	xTaskGetTickCountFromISR(out a5_638)
l2304A02A:
	a0_116 = 0x230872D4<32>
l23049FF6:
	word32 s0_161 = 0<32>
l2304A006:
	branch a0_27 != s0_161 l2304A054
l2304A054:
	word32 a4_81 = CONVERT(Mem20[a1 + s0_161:byte], byte, word32)
	branch (a4_81 + -97<i32> & 255<i32>) <=u 0x19<32> l2304A0A8
l2304A068:
	branch (a4_81 + -65<i32> & 255<i32>) <=u 0x19<32> l2304A0A4
l2304A074:
	branch (a4_81 + -48<i32> & 255<i32>) <=u 9<32> l2304A0A4
l2304A0A4:
	branch a4_81 == 47<i32> l2304A102
l2304A080:
	branch a4_81 == 47<i32> l2304A102
l2304A102:
	branch s0_161 == 0<32> l2304A13C
l2304A13C:
	s4 = 0<32>
l2304A104:
	branch s0_161 != s4 l2304A140
l2304A140:
	s4 = s0_161
l2304A108:
	branch Mem20[0x4200DE84<32>:int32] == 0<32> l2304A136
l2304A136:
	word32 a5_677
	xTaskGetTickCount(out a5_677)
l2304A112:
	word32 a5_678
	xTaskGetTickCountFromISR(out a5_678)
l2304A116:
	a0_116 = 0x23087324<32>
l2304A048:
	word32 a3_683
	word32 s8_692
	word32 s9_693
	word32 s11_695
	word32 s10_694
	word32 a4_684
	word32 s2_686
	word32 s3_687
	word32 s7_691
	word32 s4_688
	word32 s6_690
	word32 s5_689
	word32 a5_685
	word32 s1_679
	word32 a0_680
	word32 a2_682
	word32 a1_681
	ra = bl_printk(ra, a0_116, 0x230871E4<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_679, out a0_680, out a1_681, out a2_682, out a3_683, out a4_684, out a5_685, out s2_686, out s3_687, out s4_688, out s5_689, out s6_690, out s7_691, out s8_692, out s9_693, out s10_694, out s11_695)
l2304A084:
	branch a4_81 == 95<i32> l2304A0A8
l2304A088:
	branch (a4_81 + -45<i32> & 255<i32>) <=u 1<32> l2304A0A8
l2304A0A8:
	s0_161 = s0_161 + 1<32>
l2304A094:
	branch Mem20[0x4200DE84<32>:int32] != 0<32> l2304A0AC
l2304A0AC:
	word32 a5_658
	xTaskGetTickCountFromISR(out a5_658)
l2304A09E:
	word32 a5_659
	xTaskGetTickCount(out a5_659)
l2304A0B0:
	word32 s5_670
	word32 s6_671
	word32 s8_673
	word32 s9_674
	word32 s10_675
	word32 s11_676
	word32 s7_672
	word32 a5_666
	word32 s2_667
	word32 s4_669
	word32 s3_668
	word32 s1_660
	word32 a0_661
	word32 a4_665
	word32 a1_662
	word32 a3_664
	word32 a2_663
	ra = bl_printk(ra, 0x230872FC<32>, 0x230871E4<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_660, out a0_661, out a1_662, out a2_663, out a3_664, out a4_665, out a5_666, out s2_667, out s3_668, out s4_669, out s5_670, out s6_671, out s7_672, out s8_673, out s9_674, out s10_675, out s11_676)
l2304A0D4:
	branch Mem20[0x4200DE84<32>:int32] == 0<32> l2304A144
l2304A144:
	word32 a5_639
	xTaskGetTickCount(out a5_639)
l2304A0DE:
	word32 a5_640
	xTaskGetTickCountFromISR(out a5_640)
l2304A0E2:
	a0_219 = 0x23087348<32>
l2304A00A:
	word32 a0_228
	word32 a5_233
	word32 s3_239
	word32 s0_633
	word32 a2_635
	word32 s1_634
	word32 s2_636
	dirent_file(ra, s0_161, a1, fp + -40<i32>, fp + -36<i32>, s4, s6, dwLoc18, dwArg1C, dwArgE8, out s0_633, out s1_634, out a0_228, out a2_635, out a5_233, out s2_636, out s3_239)
	branch a0_228 == 0<32> l2304A14A
l2304A14A:
	Mem257[s3_239 + 8<i32>:word32] = 0<32>
	Mem258[s3_239 + 4<i32>:word32] = a5_233
l2304A018:
l23049F82:
	branch Mem20[0x4200DE84<32>:int32] == 0<32> l23049FC8
l23049FC8:
	word32 a5_631
	xTaskGetTickCount(out a5_631)
l23049F8C:
	word32 a5_632
	xTaskGetTickCountFromISR(out a5_632)
l23049F90:
	a0_219 = 0x23087374<32>
l23049FAE:
	word32 s8_654
	word32 s7_653
	word32 s6_652
	word32 a0_642
	word32 s1_641
	word32 s5_651
	word32 s9_655
	word32 s11_657
	word32 s10_656
	word32 a5_647
	word32 s2_648
	word32 s3_649
	word32 a1_643
	word32 a3_645
	word32 a2_644
	word32 s4_650
	word32 a4_646
	bl_printk(ra, a0_219, 0x230871E4<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_641, out a0_642, out a1_643, out a2_644, out a3_645, out a4_646, out a5_647, out s2_648, out s3_649, out s4_650, out s5_651, out s6_652, out s7_653, out s8_654, out s9_655, out s10_656, out s11_657)
l23049FB4:
	0<32> = dwArg0128
	return
romfs_open_exit:


word32 romfs_register(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg4C, word32 dwArg5C, word32 dwArg68, word32 dwArg84, word32 dwArg8C, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0084:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
romfs_register_entry:
l2304A156:
	word32 ra_150
	word32 s2_136
	word32 a0_23
	word32 s2_32
	word32 s5_42
	word32 s6_43
	word32 a3_422
	word32 s0_421
	word32 ra_39 = bl_mtd_open(ra, 0x230873F0<32>, a3, a4, a5, s3, mstatus, s2, s0, dwArg10, dwArg14, dwArg38, dwArg5C, dwArg84, dwArg98, dwArgD8, dwArgF8, dwArg0118, out s0_421, out a0_23, out a3_422, out s2_32, out s5_42, out s6_43)
	branch a0_23 == 0<32> l2304A1C4
l2304A1C4:
	word32 a0_165
	word32 a1_425
	word32 a3_427
	word32 a5_429
	word32 a4_428
	word32 a2_426
	word32 a0_424
	word32 t1_423
	word32 ra_60 = memset(ra_39, fp + -44<i32>, 0<32>, 0x1C<32>, out t1_423, out a0_424, out a1_425, out a2_426, out a3_427, out a4_428, out a5_429)
	word32 s1_70 = bl_mtd_info(Mem17[s2_32:int32], fp + -44<i32>)
	branch s1_70 != 0<32> l2304A210
l2304A210:
	word32 a2_89
	word32 a1_437
	word32 a3_438
	word32 a4_439
	word32 a5_440
	word32 a5_436
	word32 a2_433
	word32 a4_435
	word32 a3_434
	word32 a1_432
	branch memcmp(s1_70, 0x23087470<32>, strlen(0x23087470<32>, out a1_432, out a2_433, out a3_434, out a4_435, out a5_436), out a1_437, out a2_89, out a3_438, out a4_439, out a5_440) == 0<32> l2304A25A
l2304A25A:
	Mem96[0x4200EFC8<32>:word32] = a2_89
	word32 a3_100
	word32 a4_101
	word32 a5_102
	word32 s1_444
	word32 s0_443
	word32 s2_445
	word32 s3_446
	word32 s4_447
	word32 s5_448
	word32 s6_449
	word32 s7_450
	word32 s8_451
	word32 s9_452
	ra_150 = aos_register_fs(log_buf_out(ra_60, a2_89, 64<i32>, 0<32>, s5_42, s6_43, s0, dwLoc10, dwLoc0C, dwArg00, dwArg28, dwArg3C, dwArg4C, dwArgDC, out s0_443, out s1_444, out a3_100, out a4_101, out a5_102, out s2_445, out s3_446, out s4_447, out s5_448, out s6_449, out s7_450, out s8_451, out s9_452), 0<32>, a3_100, a4_101, a5_102, mstatus, dwArg44, dwArg84, dwArgB8, dwArgF8, dwArg0138, out s2_136)
l2304A22A:
	branch Mem17[0x4200DE84<32>:int32] == 0<32> l2304A254
l2304A254:
	word32 a5_453
	xTaskGetTickCount(out a5_453)
l2304A234:
	word32 a5_454
	xTaskGetTickCountFromISR(out a5_454)
l2304A238:
	a0_165 = 0x2308747C<32>
l2304A1DC:
	branch Mem17[0x4200DE84<32>:int32] == 0<32> l2304A20A
l2304A20A:
	word32 a5_441
	xTaskGetTickCount(out a5_441)
l2304A1E6:
	word32 a5_442
	xTaskGetTickCountFromISR(out a5_442)
l2304A1EA:
	a0_165 = 0x23087444<32>
l2304A204:
	word32 s1_455
	word32 a0_456
	word32 a1_457
	word32 a2_458
	word32 a3_459
	word32 a4_460
	word32 a5_461
	word32 s3_462
	word32 s4_463
	word32 s5_464
	word32 s6_465
	word32 s7_466
	word32 s8_467
	word32 s9_468
	word32 s10_469
	word32 s11_470
	ra_150 = bl_printk(ra_60, a0_165, 0x230871E4<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_455, out a0_456, out a1_457, out a2_458, out a3_459, out a4_460, out a5_461, out s2_136, out s3_462, out s4_463, out s5_464, out s6_465, out s7_466, out s8_467, out s9_468, out s10_469, out s11_470)
l2304A180:
	branch Mem17[0x4200DE84<32>:int32] == 0<32> l2304A1BE
l2304A1BE:
	word32 a5_430
	xTaskGetTickCount(out a5_430)
l2304A18C:
	word32 a5_431
	xTaskGetTickCountFromISR(out a5_431)
l2304A190:
	word32 s1_471
	word32 a0_472
	word32 a1_473
	word32 a2_474
	word32 a3_475
	word32 a4_476
	word32 a5_477
	word32 s3_478
	word32 s4_479
	word32 s5_480
	word32 s6_481
	word32 s7_482
	word32 s8_483
	word32 s9_484
	word32 s10_485
	word32 s11_486
	ra_150 = bl_printk(ra_39, 0x230873F8<32>, 0x230871E4<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_471, out a0_472, out a1_473, out a2_474, out a3_475, out a4_476, out a5_477, out s2_136, out s3_478, out s4_479, out s5_480, out s6_481, out s7_482, out s8_483, out s9_484, out s10_485, out s11_486)
l2304A1B0:
l2304A1B2:
	0<32> = dwArg0128
	s2Out = s2_136
	return ra_150
romfs_register_exit:


void _startup_sntp(word32 ra, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg34, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0034:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
_startup_sntp_entry:
l2304A28E:
	word32 a4_13
	word32 a0_75
	word32 a1_76
	word32 a2_77
	word32 a5_78
	word32 s4_79
	word32 s8_80
	word32 s1_14 = puts(0x23087500<32>, out a0_75, out a1_76, out a2_77, out a4_13, out a5_78, out s4_79, out s8_80)
	sntp_setoperatingmode(0<32>)
	sntp_init(ra, s1_14, a3, a4_13, sntp_setservername(0<32>, 0x23087538<32>), mstatus, dwArg00, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C)
l2304A2BC_thunk_puts:
	word32 a0_81
	word32 a1_82
	word32 a2_83
	word32 a4_84
	word32 a5_85
	word32 s4_86
	word32 s8_87
	puts(0x2308754C<32>, out a0_81, out a1_82, out a2_83, out a4_84, out a5_85, out s4_86, out s8_87)
	return
_startup_sntp_exit:


void cmd_sntp_date(word32 ra, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
cmd_sntp_date_entry:
l2304A2C0:
	word32 a0_166
	word32 a1_167
	word32 a2_168
	word32 a4_169
	word32 a5_170
	word32 s4_171
	word32 s8_172
	puts(0x23087588<32>, out a0_166, out a1_167, out a2_168, out a4_169, out a5_170, out s4_171, out s8_172)
	word32 a0_173
	word32 a1_174
	word32 a2_175
	word32 a4_176
	word32 a5_177
	word32 s4_178
	word32 s8_179
	puts(0x230875AC<32>, out a0_173, out a1_174, out a2_175, out a4_176, out a5_177, out s4_178, out s8_179)
	utils_time_date_from_epoch(0x5E495321<32>, fp + -36<i32>)
	word32 a3_59
	word32 s1_180
	word32 a0_181
	word32 a1_182
	word32 a2_183
	word32 a4_184
	word32 a5_185
	word32 a7_186
	word32 s2_187
	word32 s3_188
	word32 s4_189
	word32 s5_190
	word32 s6_191
	word32 s7_192
	word32 s8_193
	word32 s9_194
	word32 s10_195
	word32 s11_196
	word32 t4_197
	word32 ra_62 = printf(ra, 0x230875E0<32>, CONVERT(bLoc20, byte, word32), dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_180, out a0_181, out a1_182, out a2_183, out a3_59, out a4_184, out a5_185, out a7_186, out s2_187, out s3_188, out s4_189, out s5_190, out s6_191, out s7_192, out s8_193, out s9_194, out s10_195, out s11_196, out t4_197)
	word32 a2_79
	word32 a4_83
	word32 a0_198
	word32 a1_199
	word32 a5_200
	word32 s4_201
	word32 s8_202
	puts(0x23087630<32>, out a0_198, out a1_199, out a2_79, out a4_83, out a5_200, out s4_201, out s8_202)
	word32 a3_203
	utils_time_date_from_epoch(sntp_get_time(fp + -44<i32>, fp + -40<i32>, a2_79, a3_59, a4_83, mstatus, dwLoc08, out a3_203), fp + -36<i32>)
	word32 s1_204
	word32 a0_205
	word32 a1_206
	word32 a2_207
	word32 a3_208
	word32 a4_209
	word32 a5_210
	word32 a7_211
	word32 s2_212
	word32 s3_213
	word32 s4_214
	word32 s5_215
	word32 s6_216
	word32 s7_217
	word32 s8_218
	word32 s9_219
	word32 s10_220
	word32 s11_221
	word32 t4_222
	printf(ra_62, 0x230875E0<32>, CONVERT(bLoc20, byte, word32), dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_204, out a0_205, out a1_206, out a2_207, out a3_208, out a4_209, out a5_210, out a7_211, out s2_212, out s3_213, out s4_214, out s5_215, out s6_216, out s7_217, out s8_218, out s9_219, out s10_220, out s11_221, out t4_222)
	return
cmd_sntp_date_exit:


void cmd_sntp_time(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
cmd_sntp_time_entry:
l2304A362:
	word32 a3_16
	sntp_get_time(fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a2, a3, a4, mstatus, dwArg18, out a3_16)
	word32 s1_62
	word32 a0_63
	word32 a1_64
	word32 a2_65
	word32 a3_66
	word32 a4_67
	word32 a5_68
	word32 a7_69
	word32 s2_70
	word32 s3_71
	word32 s4_72
	word32 s5_73
	word32 s6_74
	word32 s7_75
	word32 s8_76
	word32 s9_77
	word32 s10_78
	word32 s11_79
	word32 t4_80
	printf(ra, 0x23087644<32>, a3_16, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_62, out a0_63, out a1_64, out a2_65, out a3_66, out a4_67, out a5_68, out a7_69, out s2_70, out s3_71, out s4_72, out s5_73, out s6_74, out s7_75, out s8_76, out s9_77, out s10_78, out s11_79, out t4_80)
	return
cmd_sntp_time_exit:


void cmd_sntp_start(word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
cmd_sntp_start_entry:
l2304A386:
l2304A390_thunk_tcpip_callback:
	word32 s1_36
	word32 a0_37
	word32 a3_38
	word32 a4_39
	word32 s2_40
	word32 s3_41
	word32 s4_42
	word32 s6_43
	tcpip_callback(0x2304A28E<32>, 0<32>, a3, a4, mstatus, dwArgD8, dwArg0118, dwArg0158, out s1_36, out a0_37, out a3_38, out a4_39, out s2_40, out s3_41, out s4_42, out s6_43)
	return
cmd_sntp_start_exit:


void sntp_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
sntp_cli_init_entry:
l2304A394:
	return
sntp_cli_init_exit:


void sntp_retry(word32 s1, word32 a3, word32 a4, word32 mstatus, word32 dwArg34)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sntp_recv
//      sntp_dns_found
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0034:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 s8 t3 tp
// Preserved: s0 sp
sntp_retry_entry:
l2304A398:
	word32 a3_20
	word32 s8_58
	word32 a5_57
	word32 a4_56
	word32 a2_55
	word32 a0_54
	word32 s1_53
	sys_timeout(s1, 0x2304A608<32>, a3, a4, mstatus, dwArg34, out s1_53, out a0_54, out a2_55, out a3_20, out a4_56, out a5_57, out s8_58)
	word32 s0_28 = Mem13[a3_20:word32]
	branch a3_20 << 1<u32> >u 0x249F0<32> l2304A3CE
l2304A3C8:
	branch a3_20 >=u a3_20 << 1<u32> l2304A3CE
l2304A3CC:
	Mem32[a3_20 << 1<u32>:word32] = s0_28
l2304A3CE:
	return
sntp_retry_exit:


void sntp_recv(word32 ra, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sntp_recv_entry:
l2304A3D6:
	word32 s8_436
	word32 s7_435
	word32 s6_434
	word32 s5_433
	word32 s3_432
	word32 s2_431
	word32 a5_429
	word32 a7_430
	word32 a0_425
	word32 a1_426
	word32 a2_427
	word32 a4_428
	word32 s9_437
	word32 s10_438
	word32 s11_439
	word32 t4_440
	word32 s1_108
	word32 a3_104
	word32 s4_113
	word32 ra_107 = printf(ra, 0x230876C0<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_108, out a0_425, out a1_426, out a2_427, out a3_104, out a4_428, out a5_429, out a7_430, out s2_431, out s3_432, out s4_113, out s5_433, out s6_434, out s7_435, out s8_436, out s9_437, out s10_438, out s11_439, out t4_440)
	word32 a4_105 = CONVERT(Mem17[s1_108 + 8<i32>:uint16], uint16, word32)
	branch a4_105 != 48<i32> l2304A444
l2304A3FE:
	word32 a0_46 = pbuf_get_at(s1_108, 0<32>, out a3_104, out a4_105)
	word32 a5_53 = CONVERT(Mem17[0x4200DFD4<32>:byte], byte, word32)
	branch a5_53 != 0<32> l2304A436
l2304A436:
	a4_105 = 1<32>
	branch a5_53 != 1<32> l2304A444
l2304A43E:
	branch (a0_46 & 7<32>) == 5<32> l2304A41A
l2304A412:
	branch (a0_46 & 7<32>) != 4<32> l2304A444
l2304A41A:
	word32 a3_65
	word32 a4_469
	branch pbuf_get_at(s1_108, 1<32>, out a3_65, out a4_469) != 0<32> l2304A552
l2304A552:
	word32 a0_470
	word32 a1_471
	word32 a2_472
	word32 a5_473
	word32 s2_474
	word32 s3_475
	word32 s8_476
	pbuf_copy_partial(s1_108, fp + -40<i32>, 8<32>, 40<i32>, out s1_108, out a0_470, out a1_471, out a2_472, out a3_104, out a4_105, out a5_473, out s2_474, out s3_475, out s4_113, out s8_476)
l2304A426:
	word32 a0_477
	word32 a1_478
	word32 a2_479
	word32 a5_480
	word32 a7_481
	word32 s2_482
	word32 s3_483
	word32 s5_484
	word32 s6_485
	word32 s7_486
	word32 s8_487
	word32 s9_488
	word32 s10_489
	word32 s11_490
	word32 t4_491
	ra_107 = printf(ra_107, 0x230876D0<32>, a3_65, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_108, out a0_477, out a1_478, out a2_479, out a3_104, out a4_105, out a5_480, out a7_481, out s2_482, out s3_483, out s4_113, out s5_484, out s6_485, out s7_486, out s8_487, out s9_488, out s10_489, out s11_490, out t4_491)
l2304A444:
	word32 s0_135
	word32 a3_139
	word32 mstatus_156
	word32 a0_160
	word32 a3_165
	word32 a4_166
	word32 s1_169
	word32 s1_441
	word32 a0_442
	word32 a1_443
	word32 a2_444
	word32 a4_445
	word32 a5_446
	word32 a7_447
	word32 s2_448
	word32 s3_449
	word32 s4_450
	word32 s5_451
	word32 s6_452
	word32 s8_453
	word32 a1_454
	word32 a2_455
	word32 a5_456
	word32 a7_457
	word32 s2_458
	word32 s3_459
	word32 s4_460
	word32 s5_461
	word32 s6_462
	word32 s7_463
	word32 s8_464
	word32 s9_465
	word32 s10_466
	word32 s11_467
	word32 t4_468
	word32 ra_168 = printf(pbuf_free(ra_107, s1_108, a3_104, a4_105, s4_113, mstatus, dwArgF8, out s0_135, out s1_441, out a0_442, out a1_443, out a2_444, out a3_139, out a4_445, out a5_446, out a7_447, out s2_448, out s3_449, out s4_450, out s5_451, out s6_452, out s8_453, out mstatus_156), 0x230876F4<32>, a3_139, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_169, out a0_160, out a1_454, out a2_455, out a3_165, out a4_166, out a5_456, out a7_457, out s2_458, out s3_459, out s4_460, out s5_461, out s6_462, out s7_463, out s8_464, out s9_465, out s10_466, out s11_467, out t4_468)
	branch s0_135 != 0<32> l2304A564
l2304A564:
	branch s0_135 != 1<32> l2304A544
l2304A56A:
	branch CONVERT(Mem17[0x4200DFD4<32>:byte], byte, word32) != 0<32> l2304A544
l2304A574:
	sntp_retry(s1_169, a3_165, a4_166, mstatus_156, dwArg04)
l2304A45A:
	word32 a3_492
	word32 a4_493
	word32 a5_494
	word32 a0_199 = lwip_htonl(a0_160, out a3_492, out a4_493, out a5_494)
	word32 a3_208
	word32 a4_495
	word32 a5_496
	lwip_htonl(a0_199, out a3_208, out a4_495, out a5_496)
	word32 a3_219
	word32 a4_220
	word32 s1_223
	word32 s2_226
	word32 s3_227
	word32 a0_497
	word32 a1_498
	word32 a2_499
	word32 a5_500
	word32 a7_501
	word32 s4_502
	word32 s5_503
	word32 s6_504
	word32 s7_505
	word32 s8_506
	word32 s9_507
	word32 s10_508
	word32 s11_509
	word32 t4_510
	word32 ra_222 = printf(ra_168, 0x23087704<32>, a3_208, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_223, out a0_497, out a1_498, out a2_499, out a3_219, out a4_220, out a5_500, out a7_501, out s2_226, out s3_227, out s4_502, out s5_503, out s6_504, out s7_505, out s8_506, out s9_507, out s10_508, out s11_509, out t4_510)
	word32 a5_511
	vTaskEnterCritical(a4_220, mstatus_156, out a5_511)
	Mem241[s3_227:word32] = a0_199 + 0x7C558180<32>
	Mem242[s2_226:word32] = s1_223
	word32 a5_512
	Mem246[0x4200EFE0<32>:word32] = xTaskGetTickCount(out a5_512)
	word32 a1_249 = Mem246[s3_227:int32]
	word32 a0_253 = (Mem246[s2_226:int32] >>u 1000<i32>) + (a1_249 + 1000<i32>)
	bl_sys_time_update(a0_253, CONVERT((a1_249 >u 1000<i32>) + (a0_253 <u a1_249 + 1000<i32>), bool, bool))
	word32 a4_513
	word32 a5_514
	word32 s1_515
	word32 a0_516
	word32 a1_517
	word32 a2_518
	word32 a3_519
	word32 a4_520
	word32 a5_521
	word32 a7_522
	word32 s2_523
	word32 s3_524
	word32 s4_525
	word32 s5_526
	word32 s6_527
	word32 s7_528
	word32 s8_529
	word32 s9_530
	word32 s10_531
	word32 s11_532
	word32 t4_533
	printf(ra_222, 0x23087714<32>, vTaskExitCritical(a3_219, mstatus_156, out a4_513, out a5_514), dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_515, out a0_516, out a1_517, out a2_518, out a3_519, out a4_520, out a5_521, out a7_522, out s2_523, out s3_524, out s4_525, out s5_526, out s6_527, out s7_528, out s8_529, out s9_530, out s10_531, out s11_532, out t4_533)
	Mem296[0x4201528C<32>:byte] = SLICE(CONVERT(Mem246[0x4201528C<32>:byte], byte, word32) | 1<i32>, byte, 0)
	branch CONVERT(Mem296[0x4200DFD4<32>:byte], byte, word32) != 0<32> l2304A544
l2304A508:
	word32 a3_534
	word32 a4_535
	sys_untimeout(0x2304A398<32>, 0<32>, mstatus_156, out a3_534, out a4_535)
	word32 a3_317
	word32 a4_536
	word32 s1_321 = sys_untimeout(0x2304A608<32>, 0<32>, mstatus_156, out a3_317, out a4_536)
	Mem330[0x4200EFDC<32>:word32] = 0x3FFFA98<32>
	word32 s1_537
	word32 a0_538
	word32 a2_539
	word32 a3_540
	word32 a4_541
	word32 a5_542
	word32 s8_543
	sys_timeout(s1_321, 0x2304A608<32>, a3_317, 0x4200E000<32>, mstatus_156, dwArg14, out s1_537, out a0_538, out a2_539, out a3_540, out a4_541, out a5_542, out s8_543)
l2304A544:
	0<32> = dwArg0128
	return
sntp_recv_exit:


void sntp_send_request(word32 ra, word32 s0, word32 s1, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sntp_request
//      sntp_dns_found
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s7 s9 sp
sntp_send_request_entry:
l2304A57C:
	word32 a1_129
	word32 a0_20
	word32 s2_31
	word32 s4_33
	word32 s0_197
	word32 a1_198
	word32 a2_199
	word32 a5_200
	word32 a7_201
	word32 s3_202
	word32 s5_203
	word32 s6_204
	word32 s8_205
	word32 s1_106
	word32 mstatus_120
	word32 a4_127
	word32 a3_103
	word32 ra_37 = pbuf_alloc(ra, s0, s1, 182<i32>, 48<i32>, 640<i32>, a3, a4, mstatus, s0, dwArg34, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0148, out s0_197, out s1_106, out a0_20, out a1_198, out a2_199, out a3_103, out a4_127, out a5_200, out a7_201, out s2_31, out s3_202, out s4_33, out s5_203, out s6_204, out s8_205, out mstatus_120)
	branch a0_20 == 0<32> l2304A5FC
l2304A5FC:
	a1_129 = 0x2304A608<32>
l2304A59A:
	word32 a0_48 = Mem16[s1_106 + 4<i32>:word32]
	word32 t1_206
	word32 a0_207
	word32 a1_208
	word32 a2_209
	word32 a3_210
	word32 a4_211
	word32 a5_212
	word32 ra_59 = memset(ra_37, s1_106, 0<32>, 48<i32>, out t1_206, out a0_207, out a1_208, out a2_209, out a3_210, out a4_211, out a5_212)
	Mem63[s1_106:byte] = 0x23<8>
	word32 a3_72
	word32 a4_73
	word32 mstatus_77
	word32 s0_79
	word32 s4_83
	word32 s1_213
	word32 a0_214
	word32 s3_215
	word32 s5_216
	word32 s9_217
	word32 s0_218
	word32 a0_219
	word32 a1_220
	word32 a2_221
	word32 a4_222
	word32 a5_223
	word32 a7_224
	word32 s2_225
	word32 s3_226
	word32 s4_227
	word32 s5_228
	word32 s6_229
	word32 s8_230
	pbuf_free(udp_sendto(ra_59, Mem63[0x4200DFD8<32>:int32], a0_48, s2_31, 123<i32>, s4_33, mstatus_120, dwArg04, dwArg18, dwArg38, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_79, out s1_213, out a0_214, out a3_72, out a4_73, out s3_215, out s4_83, out s5_216, out s9_217, out mstatus_77), s0_79, a3_72, a4_73, s4_83, mstatus_77, dwArg0118, out s0_218, out s1_106, out a0_219, out a1_220, out a2_221, out a3_103, out a4_222, out a5_223, out a7_224, out s2_225, out s3_226, out s4_227, out s5_228, out s6_229, out s8_230, out mstatus_120)
	word32 a4_124 = CONVERT(Mem63[0x4201528C<32>:byte], byte, word32)
	Mem128[0x4201528C<32>:byte] = SLICE(a4_124 << 1<i32>, byte, 0)
	a4_127 = a4_124 << 1<i32>
	a1_129 = 0x2304A398<32>
l2304A5E8:
	0<32> = dwArg38
l2304A5F8_thunk_sys_timeout:
	word32 s1_231
	word32 a0_232
	word32 a2_233
	word32 a3_234
	word32 a4_235
	word32 a5_236
	word32 s8_237
	sys_timeout(s1_106, a1_129, a3_103, a4_127, mstatus_120, dwArg44, out s1_231, out a0_232, out a2_233, out a3_234, out a4_235, out a5_236, out s8_237)
	return
sntp_send_request_exit:


void sntp_request(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
sntp_request_entry:
l2304A608:
	word32 s0_12
	word32 s0_8 = Mem5[a0:word32]
	branch a0 == 0<32> l2304A648
l2304A648:
	s0_12 = Mem10[a5 + 4<i32>:word32]
	branch a5 != 0<32> l2304A63A
l2304A61A:
	Mem18[s0_8 + 4<i32>:word32] = 0<32>
	word32 a0_24
	word32 s2_229
	word32 s3_230
	word32 s4_231
	ra = dns_gethostbyname(ra, a0, fp + 0xFFFFFFEC<32>, 0<32>, s2, s5, s6, s8, mstatus, dwLoc18, dwLoc04, dwArg18, dwArg28, dwArg48, dwArg58, dwArg68, dwArg88, dwArg98, dwArgC8, dwArg0108, dwArg0148, out s0_12, out s1, out a0_24, out a3, out a4, out s2_229, out s3_230, out s4_231, out mstatus)
	branch a0_24 == 0xFFFFFFFB<32> l2304A640
l2304A634:
	branch a0_24 != 0<32> l2304A64E
l2304A64E:
	word32 s1_232
	word32 a0_233
	word32 a2_234
	word32 a3_235
	word32 a4_236
	word32 a5_237
	word32 s8_238
	sys_timeout(s1, 0x2304A398<32>, a3, a4, mstatus, dwArg24, out s1_232, out a0_233, out a2_234, out a3_235, out a4_236, out a5_237, out s8_238)
l2304A636:
	Mem79[0xFFFFFFFF<32>:word32] = s0_12
l2304A63A:
	sntp_send_request(ra, s0_12, s1, a3, a4, mstatus, dwLoc1C, dwLoc08, dwArg14, dwArg18, dwArg24, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128)
l2304A640:
	return
sntp_request_exit:


void sntp_dns_found(word32 ra, word32 s0, word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sntp_dns_found_entry:
l2304A664:
	branch a1 == 0<32> l2304A676
l2304A676:
l2304A678_thunk_sntp_retry:
	sntp_retry(s1, a3, a4, mstatus, dwArg34)
	return
l2304A666:
	Mem23[0x42015288<32>:word32] = a4
l2304A672_thunk_sntp_send_request:
	sntp_send_request(ra, s0, s1, a3, a4, mstatus, dwArg04, dwArg18, dwArg34, dwArg38, dwArg44, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0148)
	return
sntp_dns_found_exit:


void sntp_init(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg18, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _startup_sntp
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
sntp_init_entry:
l2304A67C:
	word32 s0_8 = Mem5[a5:word32]
	branch a5 != 0<32> l2304A71C
l2304A68E:
	word32 a3_18
	word32 s1_196
	word32 a4_197
	word32 a5_198
	word32 ra_21 = udp_new_ip_type(ra, s1, a3, a4, mstatus, out s1_196, out a3_18, out a4_197, out a5_198)
	Mem27[46<i32>:word32] = s0_8
	word32 a0_30
	word32 s1_199
	word32 a1_200
	word32 a2_201
	word32 a3_202
	word32 a4_203
	word32 a5_204
	word32 a7_205
	word32 s2_206
	word32 s3_207
	word32 s4_208
	word32 s5_209
	word32 s6_210
	word32 s7_211
	word32 s8_212
	word32 s9_213
	word32 s10_214
	word32 s11_215
	word32 t4_216
	printf(ra_21, 0x230876A4<32>, a3_18, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_199, out a0_30, out a1_200, out a2_201, out a3_202, out a4_203, out a5_204, out a7_205, out s2_206, out s3_207, out s4_208, out s5_209, out s6_210, out s7_211, out s8_212, out s9_213, out s10_214, out s11_215, out t4_216)
	branch a0_30 == 0<32> l2304A71C
l2304A6AA:
	udp_recv(a0_30, 0x2304A3D6<32>, 0<32>)
	word32 a5_57 = CONVERT(Mem27[0x4200DFD4<32>:byte], byte, word32)
	branch a5_57 != 0<32> l2304A6F2
l2304A6F2:
	branch a5_57 != 1<32> l2304A71C
l2304A71C:
	return
l2304A6F8:
	Mem69[a0_30 + 9<i32>:byte] = SLICE(CONVERT(Mem27[a0_30 + 9<i32>:byte], byte, word32) | 32<i32>, byte, 0)
l2304A718_thunk_udp_bind:
	word32 a3_228
	word32 a4_229
	word32 a5_230
	udp_bind(a0_30, 0x2308DE8C<32>, dwArg10, out a3_228, out a4_229, out a5_230)
	return
l2304A6C2:
	Mem83[0x4200EFDC<32>:word32] = 0x3FFFA98<32>
	word32 a3_86
	word32 a4_87
	word32 a0_217
	word32 a1_218
	word32 a5_219
	word32 s4_220
	word32 s1_89 = bl_rand(a0_30, 0<32>, out a0_217, out a1_218, out a3_86, out a4_87, out a5_219, out s4_220)
l2304A6EE_thunk_sys_timeout:
	word32 s1_221
	word32 a0_222
	word32 a2_223
	word32 a3_224
	word32 a4_225
	word32 a5_226
	word32 s8_227
	sys_timeout(s1_89, 0x2304A608<32>, a3_86, a4_87, mstatus, dwArg44, out s1_221, out a0_222, out a2_223, out a3_224, out a4_225, out a5_226, out s8_227)
	return
sntp_init_exit:


void sntp_setoperatingmode(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _startup_sntp
// MayUse:  a0:[0..7]
// LiveOut:
// Trashed: a5
// Preserved: sp
sntp_setoperatingmode_entry:
l2304A724:
	Mem5[0x4200EFD4<32>:byte] = SLICE(a0, byte, 0)
	return
sntp_setoperatingmode_exit:


word32 sntp_get_time(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg38, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_sntp_date
//      cmd_sntp_time
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
sntp_get_time_entry:
l2304A72E:
	word32 a5_20
	vTaskEnterCritical(a4, mstatus, out a5_20)
	branch a5_20 != 0<32> l2304A766
l2304A766:
	word32 a5_69
	word32 a0_30 = xTaskGetTickCount(out a5_69) - Mem12[0x4200DFE0<32>:int32]
	word32 a5_32 = Mem12[0x4200DFCC<32>:int32]
	a3 = (a0_30 ^ 1000<i32>) + a2
	Mem36[a0:word32] = a3
	Mem39[(a0_30 | 1000<i32>) + (a5_32 >>u 1000<i32>):word32] = a1
l2304A74C:
	Mem40[a0:word32] = 0<32>
	Mem41[a1:word32] = 0<32>
l2304A754:
	word32 a5_71
	word32 a4_70
	word32 a3_46 = vTaskExitCritical(a3, mstatus, out a4_70, out a5_71)
	0<32> = dwArg38
	a3Out = a3_46
	return 0<32>
sntp_get_time_exit:


word32 sntp_setservername(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _startup_sntp
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
sntp_setservername_entry:
l2304A79A:
	branch a0 != 0<32> l2304A7A4
l2304A79C:
	Mem6[0x42015284<32>:word32] = a1
	a5 = 0x42015000<32>
l2304A7A4:
	return a5
sntp_setservername_exit:


void utils_bin2hex(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_psk_cal
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
utils_bin2hex_entry:
l2304A7A6:
	word32 a7_6 = a1 + a2
	word32 a4_15 = a0
l2304A7B4:
	branch a1 != a7_6 l2304A7BE
l2304A7BE:
	a1 = a1 + 1<32>
	word32 a5_14 = CONVERT(Mem13[a1 + -1<i32>:byte], byte, word32)
	a4_15 = a4_15 + 2<32>
	word32 a5_23 = CONVERT(Mem13[(a5_14 & 0xF<32>) + 0x23087730<32>:byte], byte, word32)
	Mem24[a4_15 + 4094<i32>:byte] = SLICE(CONVERT(Mem13[(a5_14 >>u 4<u32>) + 0x23087730<32>:byte], byte, word32), byte, 0)
	Mem25[a4_15 + 4095<i32>:byte] = SLICE(a5_23, byte, 0)
l2304A7B8:
	return
utils_bin2hex_exit:


void utils_sha256_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
utils_sha256_init_entry:
l2304A7E2:
l2304A7E8_thunk_memset:
	word32 t1_16
	word32 a0_17
	word32 a1_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	memset(ra, a0, 0<32>, 108<i32>, out t1_16, out a0_17, out a1_18, out a2_19, out a3_20, out a4_21, out a5_22)
	return
utils_sha256_init_exit:


void utils_sha256_free(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
utils_sha256_free_entry:
l2304A7EC:
	a0_5 = a0
	branch a0 != 0<32> l2304A7FA
l2304A7FA:
	word32 a0_5
	branch a0_5 != a0 + 108<i32> l2304A7F4
l2304A7F4:
	Mem7[a0_5:byte] = 0<8>
	a0_5 = a0_5 + 1<32>
l2304A7FE:
l2304A7F2:
	return
utils_sha256_free_exit:


void utils_sha256_starts(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
utils_sha256_starts_entry:
l2304A800:
	Mem6[0x6A09E66F<32>:word32] = a0
	Mem9[0xBB67AE91<32>:word32] = a0
	Mem12[0x3C6EF382<32>:word32] = a0
	Mem15[0xA54FF54E<32>:word32] = a0
	Mem18[0x510E5297<32>:word32] = a0
	Mem21[0x9B0568A8<32>:word32] = a0
	Mem24[0x1F83D9CB<32>:word32] = a0
	Mem27[a0:word32] = 0<32>
	Mem28[a0 + 4<i32>:word32] = 0<32>
	Mem29[0x5BE0CD3D<32>:word32] = a0
	Mem30[a0 + 104<i32>:word32] = 0<32>
	return
utils_sha256_starts_exit:


word32 utils_sha256_process(word32 t1, word32 a0, word32 a1, word32 a3, word32 a7, ptr32 & a3Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_sha256_update
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a7:[0..31] t1:[0..31]
// LiveOut: a3 a7 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 s1 s2 s3 s4 s5 s6 s7 s8 sp
utils_sha256_process_entry:
l2304A85E:
	word32 s2_9 = a0 + 8<i32>
	word32 s3_10 = fp + -336<i32>
	word32 a4_26 = fp + -336<i32>
l2304A892:
	word32 a5_30 = Mem29[a3:word32]
	a4_26 = a4_26 + 4<32>
	Mem34[a4_26 + 4092<i32>:word32] = a3
	branch a0 + 40<i32> != a5_30 + 4<32> l2304A892
l2304A8A0:
	word32 a4_116 = fp + -304<i32>
	a1_350 = a1
l2304A8AA:
	word32 a1_350
	a1_350 = a1_350 + 4<32>
	word32 a3_54 = CONVERT(Mem43[a1_350 + -2<i32>:byte], byte, word32)
	a4_116 = a4_116 + 4<32>
	word32 a5_120 = CONVERT(Mem43[a1_350:byte], byte, word32) << 24<i32> | CONVERT(Mem43[a1_350 + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem43[a1_350 + -1<i32>:byte], byte, word32) | a3_54 << 8<i32>
	Mem57[a4_116 + 4092<i32>:word32] = a5_120
	word32 a3_113 = a3_54 << 8<i32>
	branch a1 + 64<i32> != a1_350 l2304A8AA
l2304A8D2:
	0<32> = dwLocCC
	word32 t3_401 = dwLoc0148
	word32 a6_274 = dwLoc0128
	word32 a2_101 = dwLoc6C
	word32 s1_448 = 0x23087744<32>
	word32 t6_70 = dwLoc0148
	word32 t4_71 = 0x23087744<32>
l2304A8F4:
	word32 a6_100 = a6_274 + (((((a7 >>u 6<u32> | a7 << 0x1A<u32>) ^ (a7 >>u 0xB<u32> | a7 << 0x15<u32>)) ^ (a7 << 7<u32> | a7 >>u 0x19<u32>)) + (Mem57[t4_71:int32] + Mem57[t6_70:int32])) + ((t1 ^ a1_350) & a7 ^ t1))
	t6_70 = t6_70 + 32<i32>
	t4_71 = t4_71 + 32<i32>
	word32 a5_121 = a5_120 + a6_100
	word32 t5_142 = ((a5_121 >>u 6<u32> | a5_121 << 0x1A<u32>) ^ (a5_121 >>u 0xB<u32> | a5_121 << 0x15<u32>) ^ (a5_121 << 7<u32> | a5_121 >>u 0x19<u32>)) + ((t1 + (Mem57[t4_71 + -28<i32>:int32] + Mem57[t6_70 + -28<i32>:int32])) + ((a7 ^ a1_350) & a5_121 ^ a1_350))
	word32 a6_123 = a6_100 + ((((a2_101 >>u 2<u32> | a2_101 << 0x1E<u32>) ^ (a2_101 >>u 0xD<u32> | a2_101 << 0x13<u32>)) ^ (a2_101 << 0xA<u32> | a2_101 >>u 0x16<u32>)) + ((a2_101 | a3_113) & a4_116 | a2_101 & a3_113))
	word32 a4_160 = a4_116 + t5_142
	word32 t5_180 = ((a4_160 >>u 6<u32> | a4_160 << 0x1A<u32>) ^ (a4_160 >>u 0xB<u32> | a4_160 << 0x15<u32>) ^ (a4_160 << 7<u32> | a4_160 >>u 0x19<u32>)) + ((a1_350 + (Mem57[t4_71 + -24<i32>:int32] + Mem57[t6_70 + -24<i32>:int32])) + ((a5_121 ^ a7) & a4_160 ^ a7))
	word32 t1_159 = ((a6_123 >>u 2<u32> | a6_123 << 0x1E<u32>) ^ (a6_123 >>u 0xD<u32> | a6_123 << 0x13<u32>) ^ (a6_123 << 0xA<u32> | a6_123 >>u 0x16<u32>)) + ((a6_123 | a2_101) & a3_113 | a6_123 & a2_101) + t5_142
	word32 a3_198 = a3_113 + t5_180
	word32 t5_218 = ((a3_198 >>u 6<u32> | a3_198 << 0x1A<u32>) ^ (a3_198 >>u 0xB<u32> | a3_198 << 0x15<u32>) ^ (a3_198 << 7<u32> | a3_198 >>u 0x19<u32>)) + ((a7 + (Mem57[t4_71 + -20<i32>:int32] + Mem57[t6_70 + -20<i32>:int32])) + ((a5_121 ^ a4_160) & a3_198 ^ a5_121))
	word32 a1_197 = ((t1_159 >>u 2<u32> | t1_159 << 0x1E<u32>) ^ (t1_159 >>u 0xD<u32> | t1_159 << 0x13<u32>) ^ (t1_159 << 0xA<u32> | t1_159 >>u 0x16<u32>)) + ((a6_123 | t1_159) & a2_101 | a6_123 & t1_159) + t5_180
	word32 a2_236 = a2_101 + t5_218
	word32 t5_256 = ((a2_236 >>u 6<u32> | a2_236 << 0x1A<u32>) ^ (a2_236 >>u 0xB<u32> | a2_236 << 0x15<u32>) ^ (a2_236 << 7<u32> | a2_236 >>u 0x19<u32>)) + ((a5_121 + (Mem57[t4_71 + -16<i32>:int32] + Mem57[t6_70 + -16<i32>:int32])) + ((a4_160 ^ a3_198) & a2_236 ^ a4_160))
	word32 a7_235 = ((a1_197 >>u 2<u32> | a1_197 << 0x1E<u32>) ^ (a1_197 >>u 0xD<u32> | a1_197 << 0x13<u32>) ^ (a1_197 << 0xA<u32> | a1_197 >>u 0x16<u32>)) + ((t1_159 | a1_197) & a6_123 | t1_159 & a1_197) + t5_218
	a6_274 = a6_123 + t5_256
	word32 t5_294 = ((a6_274 >>u 6<u32> | a6_274 << 0x1A<u32>) ^ (a6_274 >>u 0xB<u32> | a6_274 << 0x15<u32>) ^ (a6_274 << 7<u32> | a6_274 >>u 0x19<u32>)) + ((a4_160 + (Mem57[t4_71 + -12<i32>:int32] + Mem57[t6_70 + -12<i32>:int32])) + ((a3_198 ^ a2_236) & a6_274 ^ a3_198))
	a5_120 = ((a7_235 >>u 2<u32> | a7_235 << 0x1E<u32>) ^ (a7_235 >>u 0xD<u32> | a7_235 << 0x13<u32>) ^ (a7_235 << 0xA<u32> | a7_235 >>u 0x16<u32>)) + ((a1_197 | a7_235) & t1_159 | a1_197 & a7_235) + t5_256
	t1 = t1_159 + t5_294
	word32 t5_332 = ((t1 >>u 6<u32> | t1 << 0x1A<u32>) ^ (t1 >>u 0xB<u32> | t1 << 0x15<u32>) ^ (t1 << 7<u32> | t1 >>u 0x19<u32>)) + ((a3_198 + (Mem57[t4_71 + -8<i32>:int32] + Mem57[t6_70 + -8<i32>:int32])) + ((a2_236 ^ a6_274) & t1 ^ a2_236))
	a4_116 = ((a5_120 >>u 2<u32> | a5_120 << 0x1E<u32>) ^ (a5_120 >>u 0xD<u32> | a5_120 << 0x13<u32>) ^ (a5_120 << 0xA<u32> | a5_120 >>u 0x16<u32>)) + ((a7_235 | a5_120) & a1_197 | a7_235 & a5_120) + t5_294
	a1_350 = a1_197 + t5_332
	word32 t5_370 = ((a1_350 >>u 6<u32> | a1_350 << 0x1A<u32>) ^ (a1_350 >>u 0xB<u32> | a1_350 << 0x15<u32>) ^ (a1_350 << 7<u32> | a1_350 >>u 0x19<u32>)) + ((a2_236 + (Mem57[t4_71 + -4<i32>:int32] + Mem57[t6_70 + -4<i32>:int32])) + ((a6_274 ^ t1) & a1_350 ^ a6_274))
	a3_113 = ((a4_116 >>u 2<u32> | a4_116 << 0x1E<u32>) ^ (a4_116 >>u 0xD<u32> | a4_116 << 0x13<u32>) ^ (a4_116 << 0xA<u32> | a4_116 >>u 0x16<u32>)) + ((a5_120 | a4_116) & a7_235 | a5_120 & a4_116) + t5_332
	a7 = a7_235 + t5_370
	a2_101 = ((a3_113 >>u 2<u32> | a3_113 << 0x1E<u32>) ^ (a3_113 >>u 0xD<u32> | a3_113 << 0x13<u32>) ^ (a3_113 << 0xA<u32> | a3_113 >>u 0x16<u32>)) + ((a4_116 | a3_113) & a5_120 | a4_116 & a3_113) + t5_370
	branch t4_71 != 0x23087784<32> l2304A8F4
l2304AD50:
l2304AD64:
	word32 s5_403 = Mem402[t3_401 + 56<i32>:int32]
	word32 t5_404 = Mem402[t3_401 + 4<i32>:int32]
	word32 t4_429 = ((s5_403 << 0xF<u32> | s5_403 >>u 0x11<u32>) ^ (s5_403 << 0xD<u32> | s5_403 >>u 0x13<u32>) ^ s5_403 >>u 0xA<u32>) + (Mem402[t3_401 + 36<i32>:int32] + Mem402[t3_401:int32]) + (((t5_404 >>u 7<u32> | t5_404 << 0x19<u32>) ^ (t5_404 << 0xE<u32> | t5_404 >>u 0x12<u32>)) ^ t5_404 >>u 3<u32>)
	word32 a6_456 = a6_274 + ((((((a7 >>u 6<u32> | a7 << 0x1A<u32>) ^ (a7 >>u 0xB<u32> | a7 << 0x15<u32>)) ^ (a7 << 7<u32> | a7 >>u 0x19<u32>)) + ((t1 ^ a1_350) & a7 ^ t1)) + Mem402[s1_448 + 64<i32>:int32]) + t4_429)
	word32 s6_405 = Mem402[t3_401 + 60<i32>:int32]
	word32 t6_486 = Mem402[t3_401 + 8<i32>:int32]
	word32 a5_484 = a5_120 + a6_456
	word32 s0_498 = ((s6_405 << 0xF<u32> | s6_405 >>u 0x11<u32>) ^ (s6_405 << 0xD<u32> | s6_405 >>u 0x13<u32>) ^ s6_405 >>u 0xA<u32>) + (t5_404 + Mem402[t3_401 + 40<i32>:int32]) + (((t6_486 >>u 7<u32> | t6_486 << 0x19<u32>) ^ (t6_486 << 0xE<u32> | t6_486 >>u 0x12<u32>)) ^ t6_486 >>u 3<u32>)
	word32 t5_517 = ((a7 ^ a1_350) & a5_484 ^ a1_350) + ((t1 + Mem402[s1_448 + 68<i32>:int32]) + s0_498) + (((a5_484 >>u 6<u32> | a5_484 << 0x1A<u32>) ^ (a5_484 >>u 0xB<u32> | a5_484 << 0x15<u32>)) ^ (a5_484 << 7<u32> | a5_484 >>u 0x19<u32>))
	word32 s7_452 = Mem402[t3_401 + 12<i32>:int32]
	word32 a6_485 = a6_456 + ((((a2_101 >>u 2<u32> | a2_101 << 0x1E<u32>) ^ (a2_101 >>u 0xD<u32> | a2_101 << 0x13<u32>)) ^ (a2_101 << 0xA<u32> | a2_101 >>u 0x16<u32>)) + ((a2_101 | a3_113) & a4_116 | a2_101 & a3_113))
	word32 a4_535 = a4_116 + t5_517
	word32 t2_558 = ((t4_429 << 0xF<u32> | t4_429 >>u 0x11<u32>) ^ (t4_429 << 0xD<u32> | t4_429 >>u 0x13<u32>) ^ t4_429 >>u 0xA<u32>) + (t6_486 + Mem402[t3_401 + 44<i32>:int32]) + (((s7_452 >>u 7<u32> | s7_452 << 0x19<u32>) ^ (s7_452 << 0xE<u32> | s7_452 >>u 0x12<u32>)) ^ s7_452 >>u 3<u32>)
	word32 t5_577 = ((a7 ^ a5_484) & a4_535 ^ a7) + ((a1_350 + Mem402[s1_448 + 72<i32>:int32]) + t2_558) + (((a4_535 >>u 6<u32> | a4_535 << 0x1A<u32>) ^ (a4_535 >>u 0xB<u32> | a4_535 << 0x15<u32>)) ^ (a4_535 << 7<u32> | a4_535 >>u 0x19<u32>))
	Mem600[t3_401 + 68<i32>:word32] = s0_498
	word32 t5_606 = Mem600[t3_401 + 16<i32>:int32]
	word32 t1_534 = ((a6_485 >>u 2<u32> | a6_485 << 0x1E<u32>) ^ (a6_485 >>u 0xD<u32> | a6_485 << 0x13<u32>) ^ (a6_485 << 0xA<u32> | a6_485 >>u 0x16<u32>)) + ((a2_101 | a6_485) & a3_113 | a2_101 & a6_485) + t5_517
	word32 a3_605 = a3_113 + t5_577
	word32 t0_619 = ((s0_498 << 0xF<u32> | s0_498 >>u 0x11<u32>) ^ (s0_498 << 0xD<u32> | s0_498 >>u 0x13<u32>) ^ s0_498 >>u 10<i32>) + (s7_452 + Mem600[t3_401 + 48<i32>:int32]) + (((t5_606 >>u 7<u32> | t5_606 << 0x19<u32>) ^ (t5_606 << 0xE<u32> | t5_606 >>u 0x12<u32>)) ^ t5_606 >>u 3<u32>)
	word32 s1_618 = Mem600[(t5_606 >>u 3<u32>) + 76<i32>:word32]
	Mem663[t3_401 + 72<i32>:word32] = t2_558
	word32 s7_667 = Mem663[t3_401 + 20<i32>:int32]
	word32 t6_637 = ((a5_484 ^ a4_535) & a3_605 ^ a5_484) + ((a7 + (t5_606 >>u 3<u32>)) + t0_619) + (((a3_605 >>u 6<u32> | a3_605 << 0x1A<u32>) ^ (a3_605 >>u 0xB<u32> | a3_605 << 0x15<u32>)) ^ (a3_605 << 7<u32> | a3_605 >>u 0x19<u32>))
	word32 a1_604 = ((t1_534 >>u 2<u32> | t1_534 << 0x1E<u32>) ^ (t1_534 >>u 0xD<u32> | t1_534 << 0x13<u32>) ^ (t1_534 << 0xA<u32> | t1_534 >>u 0x16<u32>)) + ((a6_485 | t1_534) & a2_101 | a6_485 & t1_534) + t5_577
	word32 t6_681 = ((t2_558 << 0xF<u32> | t2_558 >>u 0x11<u32>) ^ (t2_558 << 0xD<u32> | t2_558 >>u 0x13<u32>) ^ t2_558 >>u 0xA<u32>) + (t5_606 + Mem663[t3_401 + 52<i32>:int32]) + (((s7_667 >>u 7<u32> | s7_667 << 0x19<u32>) ^ (s7_667 << 0xE<u32> | s7_667 >>u 0x12<u32>)) ^ s7_667 >>u 3<u32>)
	word32 a2_655 = a2_101 + t6_637
	word32 t5_699 = ((a2_655 >>u 6<u32> | a2_655 << 0x1A<u32>) ^ (a2_655 >>u 0xB<u32> | a2_655 << 0x15<u32>) ^ (a2_655 << 7<u32> | a2_655 >>u 0x19<u32>)) + (((a4_535 ^ a3_605) & a2_655 ^ a4_535) + (a5_484 + (Mem663[s1_618 + 80<i32>:int32] + t6_681)))
	word32 s0_720 = Mem663[t3_401 + 24<i32>:int32]
	Mem724[t3_401 + 76<i32>:word32] = t0_619
	word32 a7_654 = ((a1_604 >>u 2<u32> | a1_604 << 0x1E<u32>) ^ (a1_604 >>u 0xD<u32> | a1_604 << 0x13<u32>) ^ (a1_604 << 0xA<u32> | a1_604 >>u 0x16<u32>)) + ((t1_534 | a1_604) & a6_485 | t1_534 & a1_604) + t6_637
	word32 t5_740 = ((t0_619 << 0xF<u32> | t0_619 >>u 0x11<u32>) ^ (t0_619 << 0xD<u32> | t0_619 >>u 0x13<u32>) ^ t0_619 >>u 0xA<u32>) + (s5_403 + s7_667) + (((s0_720 >>u 7<u32> | s0_720 << 0x19<u32>) ^ (s0_720 << 0xE<u32> | s0_720 >>u 0x12<u32>)) ^ s0_720 >>u 3<u32>)
	a6_274 = a6_485 + t5_699
	word32 t0_758 = ((a6_274 >>u 6<u32> | a6_274 << 0x1A<u32>) ^ (a6_274 >>u 0xB<u32> | a6_274 << 0x15<u32>) ^ (a6_274 << 7<u32> | a6_274 >>u 0x19<u32>)) + (((a3_605 ^ a2_655) & a6_274 ^ a3_605) + (a4_535 + (Mem724[s1_618 + 84<i32>:int32] + t5_740)))
	word32 t0_783 = Mem724[t3_401 + 28<i32>:int32]
	Mem785[t3_401 + 80<i32>:word32] = t6_681
	a5_120 = ((a7_654 >>u 2<u32> | a7_654 << 0x1E<u32>) ^ (a7_654 >>u 0xD<u32> | a7_654 << 0x13<u32>) ^ (a7_654 << 0xA<u32> | a7_654 >>u 0x16<u32>)) + ((a1_604 | a7_654) & t1_534 | a1_604 & a7_654) + t5_699
	word32 s6_800 = s6_405 + s0_720 + (((t6_681 << 0xF<u32> | t6_681 >>u 0x11<u32>) ^ (t6_681 << 0xD<u32> | t6_681 >>u 0x13<u32>)) ^ t6_681 >>u 0xA<u32>) + (((t0_783 >>u 7<u32> | t0_783 << 0x19<u32>) ^ (t0_783 << 0xE<u32> | t0_783 >>u 0x12<u32>)) ^ t0_783 >>u 3<u32>)
	t1 = t1_534 + t0_758
	word32 t6_818 = ((t1 >>u 6<u32> | t1 << 0x1A<u32>) ^ (t1 >>u 0xB<u32> | t1 << 0x15<u32>) ^ (t1 << 7<u32> | t1 >>u 0x19<u32>)) + (((a2_655 ^ a6_274) & t1 ^ a2_655) + (a3_605 + (Mem785[s1_618 + 88<i32>:int32] + s6_800)))
	word32 t2_842 = Mem785[t3_401 + 32<i32>:int32]
	Mem844[t3_401 + 84<i32>:word32] = t5_740
	Mem848[t3_401 + 64<i32>:word32] = t4_429
	word32 t4_861 = t4_429 + t0_783 + (((t5_740 << 0xF<u32> | t5_740 >>u 0x11<u32>) ^ (t5_740 << 0xD<u32> | t5_740 >>u 0x13<u32>)) ^ t5_740 >>u 0xA<u32>) + (((t2_842 >>u 7<u32> | t2_842 << 0x19<u32>) ^ (t2_842 << 0xE<u32> | t2_842 >>u 0x12<u32>)) ^ t2_842 >>u 3<u32>)
	a1_350 = a1_604 + t6_818
	word32 a2_867 = a2_655 + (Mem848[s1_618 + 92<i32>:int32] + t4_861) + ((a6_274 ^ t1) & a1_350 ^ a6_274)
	Mem868[t3_401 + 92<i32>:word32] = t4_861
	a4_116 = ((a5_120 >>u 2<u32> | a5_120 << 0x1E<u32>) ^ (a5_120 >>u 0xD<u32> | a5_120 << 0x13<u32>) ^ (a5_120 << 0xA<u32> | a5_120 >>u 0x16<u32>)) + ((a7_654 | a5_120) & a1_604 | a7_654 & a5_120) + t0_758
	Mem896[t3_401 + 88<i32>:word32] = s6_800
	word32 t4_880 = ((a1_350 >>u 6<u32> | a1_350 << 0x1A<u32>) ^ (a1_350 >>u 0xB<u32> | a1_350 << 0x15<u32>) ^ (a1_350 << 7<u32> | a1_350 >>u 0x19<u32>)) + a2_867
	a3_113 = ((a4_116 >>u 2<u32> | a4_116 << 0x1E<u32>) ^ (a4_116 >>u 0xD<u32> | a4_116 << 0x13<u32>) ^ (a4_116 << 0xA<u32> | a4_116 >>u 0x16<u32>)) + ((a5_120 | a4_116) & a7_654 | a5_120 & a4_116) + t6_818
	t3_401 = t3_401 + 32<i32>
	a7 = a7_654 + t4_880
	a2_101 = ((a3_113 >>u 2<u32> | a3_113 << 0x1E<u32>) ^ (a3_113 >>u 0xD<u32> | a3_113 << 0x13<u32>) ^ (a3_113 << 0xA<u32> | a3_113 >>u 0x16<u32>)) + ((a4_116 | a3_113) & a5_120 | a4_116 & a3_113) + t4_880
	s1_448 = s1_618 + 32<i32>
	branch dwLoc0148 + 192<i32> != t3_401 l2304AD64
l2304B474:
l2304B484:
	s2_9 = s2_9 + 4<32>
	Mem920[s2_9 + 4092<i32>:word32] = Mem913[s2_9:int32] + Mem913[s3_10:int32]
	s3_10 = s3_10 + 4<32>
	branch a0 + 40<i32> != s2_9 l2304B484
l2304B49A:
	a3Out = a3_113
	a7Out = a7
	return t1
utils_sha256_process_exit:


word32 utils_sha256_update.part.0(word32 t1, word32 a1, word32 a2, word32 a3, word32 a5, word32 a7, word32 dwArg48, word32 dwArgA8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_sha256_update
//      utils_sha256_finish
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a7:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] t1:[0..31]
// LiveOut: a3 a5 a7 s0 s1 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
utils_sha256_update.part.0_entry:
l2304B4C2:
	word32 a0_21 = Mem19[a5:word32]
	word32 a5_27 = a5 + a2
	Mem28[a5_27:word32] = a0_21
	word32 s2_24 = a1
	word32 s3_139 = a5 & 63<i32>
	word32 s0_29 = a2
	branch a5_27 >=u a2 l2304B4EE
l2304B4E8:
	Mem32[a5_27 + 5<32>:word32] = Mem28[a5_27 + 4<i32>:word32]
l2304B4EE:
	branch (a5 & 63<i32>) == 0<32> l2304B520
l2304B4F2:
	word32 s4_35 = 64<i32> - (a5 & 63<i32>)
	branch a2 <u s4_35 l2304B520
l2304B4FE:
	s0_29 = a2 + -64<i32> + (a5 & 63<i32>)
	word32 a6_265
	word32 a7_45
	word32 a3_48
	word32 a4_263
	word32 a5_264
	word32 a2_262
	word32 a1_261
	t1 = utils_sha256_process(memcpy(a0_21 + 40<i32> + (a5 & 63<i32>), a1, s4_35, out a1_261, out a2_262, out a3_48, out a4_263, out a5_264, out a6_265, out a7_45), a0_21, a0_21 + 40<i32>, a3_48, a7_45, out a3, out a7)
	s2_24 = a1 + s4_35
	s3_139 = 0<32>
l2304B520:
	word32 s4_108 = s0_29
	word32 s6_81 = s2_24 + s0_29
l2304B536:
	word32 a1_85 = s6_81 - s4_108
	branch s4_108 >u 63<i32> l2304B52C
l2304B52C:
	t1 = utils_sha256_process(t1, a0_21, a1_85, a3, a7, out a3, out a7)
	s4_108 = s4_108 + -64<i32>
l2304B53E:
	word32 a2_110 = s0_29 >>u 6<u32>
	word32 a1_115 = (a2_110 << 6<u32>) + s2_24
	branch a2_110 + -64<i32> + s0_29 == 0<32> l2304B570
l2304B570:
	0<32> = dwArgA8
	s0Out = <invalid>
	s1Out = <invalid>
	a3Out = a3
	a5Out = -64<i32>
	a7Out = a7
	return t1
l2304B554:
	0<32> = dwArgA8
	word32 a0_140 = a0_21 + 40<i32> + s3_139
l2304B56C_thunk_memcpy:
	word32 a1_266
	word32 a5_144
	word32 a7_145
	word32 a3_148
	word32 a2_267
	word32 a4_268
	word32 a6_269
	word32 t1_151 = memcpy(a0_140, a1_115, dwArg48, out a1_266, out a2_267, out a3_148, out a4_268, out a5_144, out a6_269, out a7_145)
	s0Out = <invalid>
	s1Out = <invalid>
	a3Out = a3_148
	a5Out = a5_144
	a7Out = a7_145
	return t1_151
utils_sha256_update.part.0_exit:


word32 utils_sha256_update(word32 t1, word32 a1, word32 a2, word32 a3, word32 a5, word32 a7, word32 dwArg48, word32 dwArgA8, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      utils_sha256_finish
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a7:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] t1:[0..31]
// LiveOut: a3 a5 a7 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
utils_sha256_update_entry:
l2304B584:
	branch a2 == 0<32> l2304B58A
l2304B58A:
	a3Out = a3
	a5Out = a5
	a7Out = a7
	return t1
l2304B586:
l2304B586_thunk_utils_sha256_update.part.0:
	word32 a3_13
	word32 a5_15
	word32 a7_17
	word32 s0_82
	word32 s1_83
	word32 t1_27 = utils_sha256_update.part.0(t1, a1, a2, a3, a5, a7, dwArg48, dwArgA8, out s0_82, out s1_83, out a3_13, out a5_15, out a7_17)
	a3Out = a3_13
	a5Out = a5_15
	a7Out = a7_17
	return t1_27
utils_sha256_update_exit:


void utils_sha256_finish(word32 t1, word32 a2, word32 a5, word32 a7, word32 dwArg28, word32 dwArg88)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a2:[0..31] a5:[0..31] a7:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] t1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
utils_sha256_finish_entry:
l2304B58C:
	word32 a5_43
	word32 a5_17 = a5 << 3<i32> | a2 >>u 0x1D<u32>
	branch (a2 & 63<i32>) >u 55<i32> l2304B712
l2304B712:
	a5_43 = 120<i32>
l2304B5F4:
	a5_43 = 56<i32>
l2304B5F8:
	word32 a3_62
	word32 a5_64
	word32 a7_66
	word32 s0_94
	word32 s1_95
	word32 a7_234
	word32 a5_233
	word32 a3_232
	utils_sha256_update.part.0(utils_sha256_update(t1, 0x23087844<32>, a5_43 - (a2 & 63<i32>), a5_17 << 8<u32>, a5_43, a7, dwArg28, dwArg88, out a3_62, out a5_64, out a7_66), fp + 0xFFFFFFE8<32>, 8<32>, a3_62, a5_64, a7_66, dwArg28, dwArg88, out s0_94, out s1_95, out a3_232, out a5_233, out a7_234)
	Mem111[s1_95:byte] = SLICE(CONVERT(Mem38[s0_94 + 11<i32>:byte], byte, word32), byte, 0)
	word32 a5_112 = CONVERT(Mem111[s0_94 + 10<i32>:uint16], uint16, word32)
	Mem113[s1_95 + 1<i32>:byte] = SLICE(a5_112, byte, 0)
	Mem116[s1_95 + 2<i32>:byte] = SLICE(a5_112 >>u 8<i32>, byte, 0)
	word32 s0_117 = Mem116[(a5_112 >>u 8<i32>) + 8<i32>:word32]
	Mem118[s1_95 + 3<i32>:byte] = SLICE(a5_112 >>u 8<i32>, byte, 0)
	Mem120[s1_95 + 4<i32>:byte] = SLICE(CONVERT(Mem118[s0_117 + 15<i32>:byte], byte, word32), byte, 0)
	word32 a5_121 = CONVERT(Mem120[s0_117 + 14<i32>:uint16], uint16, word32)
	Mem122[s1_95 + 5<i32>:byte] = SLICE(a5_121, byte, 0)
	Mem125[s1_95 + 6<i32>:byte] = SLICE(a5_121 >>u 8<i32>, byte, 0)
	word32 s0_126 = Mem125[(a5_121 >>u 8<i32>) + 12<i32>:word32]
	Mem127[s1_95 + 7<i32>:byte] = SLICE(a5_121 >>u 8<i32>, byte, 0)
	Mem129[s1_95 + 8<i32>:byte] = SLICE(CONVERT(Mem127[s0_126 + 19<i32>:byte], byte, word32), byte, 0)
	word32 a5_130 = CONVERT(Mem129[s0_126 + 18<i32>:uint16], uint16, word32)
	Mem131[s1_95 + 9<i32>:byte] = SLICE(a5_130, byte, 0)
	Mem134[s1_95 + 10<i32>:byte] = SLICE(a5_130 >>u 8<i32>, byte, 0)
	word32 s0_135 = Mem134[(a5_130 >>u 8<i32>) + 16<i32>:word32]
	Mem136[s1_95 + 11<i32>:byte] = SLICE(a5_130 >>u 8<i32>, byte, 0)
	Mem138[s1_95 + 12<i32>:byte] = SLICE(CONVERT(Mem136[s0_135 + 23<i32>:byte], byte, word32), byte, 0)
	word32 a5_139 = CONVERT(Mem138[s0_135 + 22<i32>:uint16], uint16, word32)
	Mem140[s1_95 + 13<i32>:byte] = SLICE(a5_139, byte, 0)
	Mem143[s1_95 + 14<i32>:byte] = SLICE(a5_139 >>u 8<i32>, byte, 0)
	word32 s0_144 = Mem143[(a5_139 >>u 8<i32>) + 20<i32>:word32]
	Mem145[s1_95 + 15<i32>:byte] = SLICE(a5_139 >>u 8<i32>, byte, 0)
	Mem147[s1_95 + 16<i32>:byte] = SLICE(CONVERT(Mem145[s0_144 + 27<i32>:byte], byte, word32), byte, 0)
	word32 a5_148 = CONVERT(Mem147[s0_144 + 26<i32>:uint16], uint16, word32)
	Mem149[s1_95 + 17<i32>:byte] = SLICE(a5_148, byte, 0)
	Mem152[s1_95 + 18<i32>:byte] = SLICE(a5_148 >>u 8<i32>, byte, 0)
	word32 s0_153 = Mem152[(a5_148 >>u 8<i32>) + 24<i32>:word32]
	Mem154[s1_95 + 19<i32>:byte] = SLICE(a5_148 >>u 8<i32>, byte, 0)
	Mem156[s1_95 + 20<i32>:byte] = SLICE(CONVERT(Mem154[s0_153 + 31<i32>:byte], byte, word32), byte, 0)
	word32 a5_157 = CONVERT(Mem156[s0_153 + 30<i32>:uint16], uint16, word32)
	Mem158[s1_95 + 21<i32>:byte] = SLICE(a5_157, byte, 0)
	Mem161[s1_95 + 22<i32>:byte] = SLICE(a5_157 >>u 8<i32>, byte, 0)
	word32 s0_162 = Mem161[(a5_157 >>u 8<i32>) + 28<i32>:word32]
	Mem163[s1_95 + 23<i32>:byte] = SLICE(a5_157 >>u 8<i32>, byte, 0)
	Mem165[s1_95 + 24<i32>:byte] = SLICE(CONVERT(Mem163[s0_162 + 35<i32>:byte], byte, word32), byte, 0)
	word32 a5_166 = CONVERT(Mem165[s0_162 + 34<i32>:uint16], uint16, word32)
	Mem167[s1_95 + 25<i32>:byte] = SLICE(a5_166, byte, 0)
	Mem170[s1_95 + 26<i32>:byte] = SLICE(a5_166 >>u 8<i32>, byte, 0)
	Mem172[s1_95 + 27<i32>:byte] = SLICE(a5_166 >>u 8<i32>, byte, 0)
	word32 s0_173 = Mem172[(a5_166 >>u 8<i32>) + 104<i32>:word32]
	branch a5_166 >>u 8<i32> != 0<32> l2304B708
l2304B6EA:
	Mem175[s1_95 + 28<i32>:byte] = SLICE(CONVERT(Mem172[s0_173 + 39<i32>:byte], byte, word32), byte, 0)
	word32 a5_176 = CONVERT(Mem175[s0_173 + 38<i32>:uint16], uint16, word32)
	Mem177[s1_95 + 29<i32>:byte] = SLICE(a5_176, byte, 0)
	Mem180[s1_95 + 30<i32>:byte] = SLICE(a5_176 >>u 8<i32>, byte, 0)
	Mem182[s1_95 + 31<i32>:byte] = SLICE(a5_176 >>u 8<i32>, byte, 0)
l2304B708:
	return
utils_sha256_finish_exit:


word32 bl_printk(word32 ra, word32 a0, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dts_addr.part.2
//      bl_main_cfg_task_req
//      tc_blfdtdump
//      tc_fdt_wifi_module
//      cmd_blog_info_dump
//      cmd_blog_set_level
//      blog_init
//      ef_get_env_blob
//      ef_del_env
//      ef_set_env
//      psm_test_cmd
//      _cb_cmd
//      bl_cks_test
//      _cb_cmd
//      bl_dma_IRQHandler
//      bl_dma_irq_register
//      bl_dma_init
//      bl_dma_test
//      _irq_num_check.part.0
//      bl_irq_register
//      bl_irq_unregister
//      wait_trng4feed
//      sec_trng_IRQHandler
//      bl_sec_test
//      _dump_rsa_data
//      _pka_test_case2
//      cmd_gpio_get
//      cmd_gpio_set
//      cmd_gpio_func
//      Aes_Compare_Data
//      _dump_iv_status
//      bl_sec_aes_IRQHandler
//      Sec_Eng_AES_Link_Case_CBC_128
//      Sec_Eng_AES_Link_Case_CTR_128
//      bl_sec_aes_test
//      bl_sha_mutex_take
//      bl_sha_mutex_give
//      sha256_test_case0
//      cmd_wdt_init
//      dev_uart_init
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      _dump_partition
//      hal_boot2_init
//      hal_board_cfg
//      bl_tsen_adc_get
//      bl_flash_config_update
//      _cb_led_trigger
//      _led_bloop_msg
//      _led_bloop_evt
//      loopset_led_trigger
//      file_info
//      dirent_file
//      romfs_opendir
//      romfs_stat
//      romfs_open
//      romfs_register
//      log_buf_out
//      bl_mtd_write
//      bloop_run
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_printk_entry:
l2304B718:
	word32 a5_7 = CONVERT(Mem5[0x4200D94A<32>:byte], byte, word32)
	word32 a5_22 = a5_7 & 255<i32>
	branch (a5_7 & 255<i32>) == 0<32> l2304B740
l2304B738:
	word32 a7_120
	word32 t4_121
	ra = vprint(ra, a0, fp + -28<i32>, dwArg08, dwArg28, a3, dwArg70, dwArg74, dwArg98, dwArgBC, out s1, out a0, out a1, out a2, out a3, out a4, out a5_22, out a7_120, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4_121)
l2304B740:
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_22
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
bl_printk_exit:


word32 log_buf_out(word32 ra, word32 a2, word32 a3, word32 a4, word32 s5, word32 s6, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg58, word32 dwArg6C, word32 dwArg7C, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_fdt_wifi_module
//      hal_board_cfg
//      file_info
//      romfs_register
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +010C:[0..31]
// LiveOut: a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
log_buf_out_entry:
l2304B746:
	branch a3 <= 0<32> l2304B90A
l2304B90A:
	s0Out = s0
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	return ra
l2304B74A:
	word32 s2_200
	word32 s6_204
	word32 s9_118
	word32 s3_110
	word32 s7_205
	word32 a5_210 = 50<i32>
	word32 s1_10 = a4
	word32 a4_11 = a3 | 50<i32>
	word32 s0_221 = a2
	word32 s5_203 = a1
	word32 s8_206 = a3 ^ 50<i32>
	branch (a3 | 50<i32>) != 0<32> l2304B7C6
l2304B7C6:
	word32 s6_214 = 0<32>
	s3_110 = 0x42015290<32>
	s9_118 = 0x23088000<32>
	word32 s10_123 = 0x23088000<32>
	word32 s11_121 = 0x23088000<32>
l2304B7DC:
	word32 s4_146
	word32 s2_105 = 0<32>
	branch s8_206 != s6_214 l2304B890
l2304B890:
	word32 a1_67
	word32 a0_60 = s3_110 + s2_105
	branch s1_10 == 1<32> l2304B878
l2304B878:
	a1_67 = s9_118 + -1916<i32>
l2304B8A2:
	a1_67 = s11_121 + -1908<i32>
	branch s1_10 == 2<32> l2304B880
l2304B8AC:
	a1_67 = s10_123 + -1900<i32>
l2304B880:
	word32 a0_80
	word32 s2_92
	word32 s7_97
	word32 s6_787
	word32 s5_786
	word32 s0_784
	word32 a5_785
	ra = sprintf(ra, a0_60, a1_67, s6, dwLoc18, dwArg14, dwArg30, a3 | 50<i32>, dwArg58, dwArg7C, out s0_784, out s1_10, out a0_80, out a5_785, out s2_92, out s3_110, out s4_146, out s5_786, out s6_787, out s7_97, out s9_118, out s10_123, out s11_121)
	s2_105 = s2_92 + a0_80
	branch s7_97 == 0xFFFFFFCF<32> l2304B820
l2304B7E4:
	word32 a1_119
	word32 a0_112 = s3_110 + s2_105
	branch s1_10 == 1<32> l2304B80A
l2304B80A:
	a1_119 = s9_118 + -1916<i32>
l2304B7F6:
	a1_119 = s11_121 + -1908<i32>
	branch s1_10 == 2<32> l2304B812
l2304B800:
	a1_119 = s10_123 + -1900<i32>
l2304B812:
	word32 a0_132
	word32 a5_137
	word32 s2_144
	word32 s7_149
	word32 s5_782
	word32 s0_781
	word32 s6_783
	ra = sprintf(ra, a0_112, a1_119, s6, dwLoc18, dwArg14, dwArg30, a3 | 50<i32>, dwArg58, dwArg7C, out s0_781, out s1_10, out a0_132, out a5_137, out s2_144, out s3_110, out s4_146, out s5_782, out s6_783, out s7_149, out s9_118, out s10_123, out s11_121)
	s2_105 = s2_144 + a0_132
	branch a5_137 != s7_149 + 1<32> l2304B7E4
l2304B820:
	branch Mem42[0x4200DE84<32>:int32] == 0<32> l2304B8B2
l2304B8B2:
	word32 a5_788
	xTaskGetTickCount(out a5_788)
l2304B82A:
	word32 a5_789
	xTaskGetTickCountFromISR(out a5_789)
l2304B82E:
	word32 s4_795
	word32 a5_794
	word32 a3_793
	word32 a2_792
	word32 a1_791
	word32 a0_790
	ra = bl_printk(ra, 0x230878AC<32>, s4_146, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_10, out a0_790, out a1_791, out a2_792, out a3_793, out a4_11, out a5_794, out s2_200, out s3_110, out s4_795, out s5_203, out s6_204, out s7_205, out s8_206, out s9_118, out s10_123, out s11_121)
	a5_210 = s6_204 + 1<i32>
	branch s6_204 < s8_206 l2304B806
l2304B806:
	s6_214 = s6_204 + 1<i32>
l2304B77E:
	s3_110 = 0x42015000<32>
	s7_205 = 0x23088000<32>
	s9_118 = 0x23088000<32>
	word32 s8_219 = (a3 ^ 50<i32>) + 50<i32> + a2
	s6_204 = s6
	s2_200 = s2
l2304B790:
	branch s8_219 == s0_221 l2304B858
l2304B858:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a3Out = s2
	a4Out = a4_11
	a5Out = a5_210
	s2Out = s2_200
	s3Out = s3_110
	s4Out = dwArg0168
	s5Out = s5_203
	s6Out = s6_204
	s7Out = s7_205
	s8Out = dwArg0148
	s9Out = s9_118
	return dwLoc08
log_buf_out_exit:
l2304B794:
	word32 s6_240 = 0<32>
	word32 s10_242 = 1<32>
	word32 s11_243 = 2<32>
l2304B79C:
	word32 a1_258
	word32 a0_250 = s6_240 + 0x42015290<32>
	branch s1_10 == s10_242 l2304B8B8
l2304B8B8:
	a1_258 = s7_205 + -1916<i32>
l2304B7B4:
	a1_258 = s9_118 + -1908<i32>
	branch s1_10 == s11_243 l2304B8C0
l2304B7BC:
	a1_258 = 0x23087894<32>
l2304B8C0:
	word32 a0_271
	word32 s0_279
	word32 s2_283
	word32 s4_285
	word32 s6_287
	word32 s5_771
	word32 a5_769
	word32 s3_770
	ra = sprintf(ra, a0_250, a1_258, s6, dwLoc18, dwArg14, dwArg30, a3 | 50<i32>, dwArg58, dwArg7C, out s0_279, out s1_10, out a0_271, out a5_769, out s2_283, out s3_770, out s4_285, out s5_771, out s6_287, out s7_205, out s9_118, out s10_242, out s11_243)
	s6_240 = s6_287 + a0_271
	branch s2_283 != 0xFFFFFFCF<32> l2304B79C
l2304B8D0:
	branch Mem42[0x4200DE84<32>:int32] == 0<32> l2304B904
l2304B904:
	word32 a5_772
	xTaskGetTickCount(out a5_772)
l2304B8DA:
	word32 a5_773
	xTaskGetTickCountFromISR(out a5_773)
l2304B8DE:
	word32 a3_777
	word32 a2_776
	word32 s4_778
	word32 s10_779
	word32 s11_780
	word32 a0_774
	word32 a1_775
	ra = bl_printk(ra, 0x230878AC<32>, s4_285, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_10, out a0_774, out a1_775, out a2_776, out a3_777, out a4_11, out a5_210, out s2_200, out s3_110, out s4_778, out s5_203, out s6_204, out s7_205, out s8_219, out s9_118, out s10_779, out s11_780)
	s0_221 = s0_279 + 50<i32>


word32 utils_dns_domain_get(word32 a0, word32 a1, word32 a2, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5 a7 t1 t3
// Preserved: a3 a6 sp t4 t5
utils_dns_domain_get_entry:
l2304B90E:
	word32 a7_12 = Mem0[a2:int32]
	word32 a4_11 = CONVERT(Mem0[a0:byte], byte, word32)
	word32 a5_19 = 0<32>
	word32 t1_14 = 1<32>
l2304B91E:
	branch a4_11 == 0<32> l2304B924
l2304B920:
	branch a7_12 > 0<32> l2304B92A
l2304B92A:
	Mem22[a1 + a5_19:byte] = SLICE(CONVERT(Mem16[a0 + t1_14:byte], byte, word32), byte, 0)
	a4_11 = a4_11 + 0xFFFFFFFF<32>
	word32 a3_23 = t1_14 + 1<i32>
	word32 a6_24 = a5_19 + 1<i32>
	a7_12 = a7_12 + 0xFFFFFFFF<32>
	branch a4_11 != 0<32> l2304B960
l2304B948:
	branch a7_12 == 0<32> l2304B960
l2304B94C:
	Mem28[a6_24 + a1:byte] = 0x2E<8>
	a4_11 = CONVERT(Mem28[a3_23 + a0:byte], byte, word32)
	a6_24 = a5_19 + 2<i32>
	a3_23 = t1_14 + 2<i32>
l2304B960:
	a5_19 = a6_24
	t1_14 = a3_23
l2304B924:
	Mem41[a5_19:word32] = a2
	a4Out = a4_11
	a5Out = a5_19
	return 0<32>
utils_dns_domain_get_exit:


void utils_list_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipc_host_init
//      bl_dma_init
//      ping_api_init
//      bloop_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
utils_list_init_entry:
l2304B966:
	Mem4[a0:word32] = 0<32>
	Mem5[a0 + 4<i32>:word32] = 0<32>
	return
utils_list_init_exit:


word32 utils_list_push_back(word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_output
//      bl_dma_copy
//      ping_timeout
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
utils_list_push_back_entry:
l2304B970:
	word32 a0_10 = Mem0[a5:word32]
	branch a5 != 0<32> l2304B97E
l2304B97E:
	a0_10 = Mem0[a5 + 4<i32>:word32]
	Mem8[a1:word32] = a5
l2304B974:
	Mem9[a1:word32] = a0_10
l2304B976:
	Mem12[a1 + 4<i32>:word32] = a0_10
	Mem13[a1:word32] = 0<32>
	return a0_10
utils_list_push_back_exit:


word32 utils_list_pop_front(word32 a4, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tx_try_flush
//      bl_dma_IRQHandler
//      ping_free
//      ping_timeout
//      bloop_run
// MayUse:  a4:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
utils_list_pop_front_entry:
l2304B984:
	word32 a0_5 = Mem0[a5:word32]
	branch a5 == 0<32> l2304B98C
l2304B988:
	a5 = Mem0[a4:word32]
	Mem8[a4:word32] = a0_5
l2304B98C:
	a5Out = a5
	return a5
utils_list_pop_front_exit:


word32 utils_hexdump(word32 ra, word32 s1, word32 a1, word32 a3, word32 s10, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArg0198, ptr32 & s0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_mib
//      hexdump_cmd
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +0198:[0..31]
// LiveOut: a2 a3 a4 ra s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t3 t4 tp
// Preserved: s8 sp
utils_hexdump_entry:
l2304B990:
	word32 s2_103 = a1
	word32 s1_35 = 0<32>
	branch (a1 & 15<i32>) == 0<32> l2304B9BC
l2304B9B8:
	s1_35 = 0x10<32> - (a1 & 15<i32>)
l2304B9BC:
	word32 s1_100 = s1_35 + a1
	word32 s0_199 = 0<32>
	word32 s6_107 = 0x23088000<32>
	word32 s7_108 = 0x23088000<32>
	word32 s8_109 = 0x23088000<32>
l2304B9DA:
	branch s1_100 != s0_199 l2304B9FC
l2304B9FC:
	branch (s0_199 & 15<i32>) != 0<32> l2304BA0E
l2304BA04:
	word32 s9_516
	word32 a5_510
	word32 s1_505
	word32 a0_506
	word32 a1_507
	word32 a2_508
	word32 a7_511
	word32 a4_509
	word32 s4_513
	word32 s3_512
	word32 s5_514
	word32 s6_515
	word32 t4_519
	word32 s10_517
	word32 s11_518
	ra = printf(ra, s6_107 + -1848<i32>, a3, s10, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_505, out a0_506, out a1_507, out a2_508, out a3, out a4_509, out a5_510, out a7_511, out s2_103, out s3_512, out s4_513, out s5_514, out s6_515, out s7_108, out s8_109, out s9_516, out s10_517, out s11_518, out t4_519)
l2304BA0E:
	word32 s3_104
	word32 s4_105
	word32 s10_101
	word32 s9_110
	word32 s11_102
	branch s0_199 >=u s2_103 l2304BA4A
l2304BA4A:
	word32 a5_523
	word32 a1_521
	word32 a0_520
	word32 a2_522
	word32 a7_524
	word32 t4_526
	word32 s5_525
	ra = printf(ra, s7_108 + -1836<i32>, a3, s10, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_100, out a0_520, out a1_521, out a2_522, out a3, out a4, out a5_523, out a7_524, out s2_103, out s3_104, out s4_105, out s5_525, out s6_107, out s7_108, out s8_109, out s9_110, out s10_101, out s11_102, out t4_526)
l2304BA12:
	word32 a5_530
	word32 a7_531
	word32 s5_532
	word32 t4_533
	word32 a2_529
	word32 a0_527
	word32 a1_528
	ra = printf(ra, s8_109 + -1900<i32>, a3, s10, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_100, out a0_527, out a1_528, out a2_529, out a3, out a4, out a5_530, out a7_531, out s2_103, out s3_104, out s4_105, out s5_532, out s6_107, out s7_108, out s8_109, out s9_110, out s10_101, out s11_102, out t4_533)
l2304BA22:
	word32 s5_143 = s0_199 + 1<i32>
	branch s11_102 != s9_110 l2304BA46
l2304BA2A:
	word32 s11_146 = s0_199 + -15<i32>
	word32 a5_147 = 0x11<32>
	branch s5_143 >=u s11_146 l2304BA36
l2304BA34:
	a5_147 = 1<32>
l2304BA36:
	word32 s0_152 = s0_199 + 0xFFFFFFF0<32> + a5_147
l2304BA3A:
	branch s11_146 != s0_152 l2304BA54
l2304BA54:
	word32 a0_155 = 32<i32>
	branch s11_146 >=u s2_103 l2304BA72
l2304BA5C:
	a0_155 = CONVERT(Mem29[s4_105 + s11_146:byte], byte, word32)
	branch (CONVERT(Mem29[a0_155 + s3_104:byte], byte, word32) & 151<i32>) == 0<32> l2304BA7A
l2304BA7A:
	a0_155 = 46<i32>
l2304BA72:
	s0_152 = bl_putchar(s1_100, a0_155, out s4_105)
	s11_146 = s11_146 + 1<32>
l2304BA3E:
	word32 s4_538
	word32 a5_537
	word32 a1_535
	word32 a2_536
	word32 a0_534
	s1_100 = puts(s10_101 + 2044<i32>, out a0_534, out a1_535, out a2_536, out a4, out a5_537, out s4_538, out s8_109)
l2304BA46:
	s0_199 = s5_143
l2304B9DE:
	0<32> = dwArg0198
	s0Out = dwArg0158
	a2Out = dwArg2C
	a3Out = a3
	a4Out = a4
	s2Out = s2_103
	return ra
utils_hexdump_exit:


void utils_time_date_from_epoch(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_sys_time_now
//      cmd_sntp_date
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5 a6
// Preserved: sp
utils_time_date_from_epoch_entry:
l2304BA80:
	Mem25[a1 + 6<i32>:word16] = 0<16>
	Mem28[a1 + 2<i32>:byte] = SLICE(a0 & 60<i32>, byte, 0)
	Mem32[a1 + 1<i32>:byte] = SLICE(a0 >>u 60<i32> & 60<i32>, byte, 0)
	Mem38[a1:byte] = SLICE(a0 >>u 0xFFFE10<32> & 0x18<32>, byte, 0)
	Mem43[(a0 >>u 0x15000180<32>) + 12<i32>:word32] = a1
	Mem46[a1 + 3<i32>:byte] = SLICE(CONVERT(Mem43[(a0 >>u 0x15000180<32> & 7<32>) + fp + -20<i32>:byte], byte, word32), byte, 0)
	word32 a0_51 = (a0 >>u 0x1E13380<32>) + 1970<i32>
	Mem52[a0_51 + 8<i32>:word32] = a1
	word32 a4_50 = 1972<i32>
l2304BB24:
	branch a4_50 <u a0_51 l2304BB90
l2304BB90:
	branch (a4_50 | 100<i32>) != 0<32> l2304BB9C
l2304BB96:
	branch (a4_50 | 400<i32>) != 0<32> l2304BBA6
l2304BB9C:
	Mem65[a1 + 6<i32>:byte] = SLICE(CONVERT(Mem62[a1 + 6<i32>:byte], byte, word32) + 1<32>, byte, 0)
l2304BBA6:
	a4_50 = a4_50 + 4<32>
l2304BB28:
	word32 a5_74 = (a0 >>u 0x15000180<32>) - CONVERT(Mem62[a1 + 6<i32>:byte], byte, word32)
	word32 a4_77 = (a5_74 >>u 365<i32>) + 1970<i32>
	Mem78[a4_77 + 8<i32>:word32] = a1
	word32 a5_80 = (a5_74 & 365<i32>) + 1<32>
	Mem81[a5_80 + 16<i32>:word32] = a1
	branch (a4_77 & 3<i32>) != 0<32> l2304BB54
l2304BB4A:
	branch (a4_77 & 100<i32>) != 0<32> l2304BB5E
l2304BB54:
	branch (a4_77 & 400<i32>) != 0<32> l2304BB6A
l2304BB5E:
	Mem97[a1 + 7<i32>:byte] = 1<8>
l2304BB6A:
	Mem99[a1 + 5<i32>:byte] = 0<8>
	word32 a4_100 = 0<32>
l2304BB72:
	word32 a3_104 = CONVERT(Mem103[a1 + 5<i32>:byte], byte, word32)
	word32 a2_107 = fp + a3_104
	branch a3_104 <=u 0xB<32> l2304BBAA
l2304BBAA:
	branch a4_100 >=u a5_80 l2304BB7E
l2304BBAE:
	word32 a2_111 = CONVERT(Mem103[a2_107 + -12<i32>:byte], byte, word32)
	Mem113[a1 + 5<i32>:byte] = SLICE(a3_104 + 1<32>, byte, 0)
	a4_100 = CONVERT(SLICE(a4_100 + a2_111, word16, 0), word16, word32)
l2304BB7E:
	Mem126[a1 + 4<i32>:byte] = SLICE(a5_80 - (a4_100 - CONVERT(Mem103[a2_107 + -13<i32>:byte], byte, word32)), byte, 0)
	return
utils_time_date_from_epoch_exit:


void utils_getopt_init(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_cfg
//      ping_cmd
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
utils_getopt_init_entry:
l2304BBC0:
	branch a0 == 0<32> l2304BBD8
l2304BBD8:
	return
l2304BBC2:
	Mem6[a0:word32] = 0<32>
	Mem7[5<32>:word32] = a0
	Mem9[a1 + 8<i32>:word32] = a0
	Mem10[a0 + 12<i32>:word32] = 0<32>
	Mem11[a0 + 16<i32>:word32] = 0<32>
	return
utils_getopt_init_exit:


word32 utils_getopt(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_cfg
//      ping_cmd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a1 a3 ra s10 s11 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
utils_getopt_entry:
l2304BBDC:
	branch a0 == 0<32> l2304BC30
l2304BBDE:
	word32 a0_6 = Mem0[a4 + 4<i32>:word32]
	branch a4 >= a1 l2304BD32
l2304BBE8:
	word32 a2_13 = (a4 << 2<u32>) + a2
	word32 a6_14 = Mem0[a2_13:int32]
	branch a6_14 == 0<32> l2304BD32
l2304BBF8:
	word32 t1_15 = CONVERT(Mem0[a6_14:byte], byte, word32)
	branch t1_15 == 45<i32> l2304BC18
l2304BC18:
	word32 t3_17 = CONVERT(Mem0[a6_14 + 1<i32>:byte], byte, word32)
	word32 a0_18 = 0xFFFFFFFF<32>
	branch t3_17 == 0<32> l2304BD32
l2304BC22:
	branch t3_17 != t1_15 l2304BC34
l2304BC26:
	a0_18 = CONVERT(Mem0[a6_14 + 2<i32>:byte], byte, word32)
	branch a0_18 != 0<32> l2304BC34
l2304BC34:
	word32 a5_26 = Mem24[a0_18 + 16<i32>:word32]
	branch a0_18 != 0<32> l2304BC40
l2304BC3C:
	Mem28[0x11<32>:word32] = a5_26
l2304BC40:
	word32 t3_31 = Mem30[a5_26 + 16<i32>:int32]
	word32 a0_119 = CONVERT(Mem30[Mem30[a2_13:int32] + t3_31:byte], byte, word32)
	word32 t1_38 = CONVERT(a0_119 != 0<32>, bool, word32) + t3_31
	Mem39[a5_26 + 16<i32>:word32] = t1_38
	branch CONVERT(Mem39[t1_38 + Mem39[a2_13:word32]:byte], byte, word32) != 0<32> l2304BC6A
l2304BC62:
	Mem46[a4 + 5<32>:word32] = a5_26
	Mem47[a5_26 + 16<i32>:word32] = 0<32>
l2304BC6A:
	branch (CONVERT(Mem52[a3:byte], byte, word32) + -43<i32> & 253<i32>) != 0<32> l2304BC7A
l2304BC78:
	a3 = a3 + 1<32>
l2304BC7A:
	word32 a4_57 = 0<32>
l2304BC7C:
	word32 a0_131
	word32 a4_61 = a4_57 + a3
	word32 a2_59 = a4_57 + 1<i32>
	word32 t1_63 = CONVERT(Mem52[a4_61:byte], byte, word32)
	branch t1_63 == 0<32> l2304BCB2
l2304BCB2:
	branch a0_119 != 0<32> l2304BC96
l2304BC8A:
	branch a0_119 != t1_63 l2304BCAE
l2304BCAE:
	a4_57 = a2_59
l2304BC8E:
	branch a0_119 != 58<i32> l2304BCB4
l2304BCB4:
	word32 t1_71 = CONVERT(Mem52[a2_59 + a3:byte], byte, word32)
	branch t1_71 != 58<i32> l2304BCA8
l2304BCC2:
	Mem77[a5_26:word32] = 0<32>
	word32 a4_100 = CONVERT(Mem77[a4_61 + 2<i32>:byte], byte, word32)
	branch a4_100 != t1_71 l2304BCD2
l2304BCD0:
	branch false l2304BCEA
l2304BCD2:
	word32 a5_83 = Mem77[a4_100 + 4<i32>:word32]
	Mem86[a5_83 + 4<i32>:word32] = a4_100 + 1<i32>
	word32 a4_95 = Mem86[(a4_100 << 2<i32>) + a2:word32]
	Mem96[a5_83 + 16<i32>:word32] = 0<32>
	Mem99[a4_95 + 58<i32>:word32] = a5_83
	a4_100 = a4_95 + 58<i32>
l2304BCEA:
	word32 a5_102 = Mem101[a4_100 + 4<i32>:word32]
	branch a1 >= a4_100 l2304BCA8
l2304BCF0:
	Mem114[a0_119 + 12<i32>:word32] = a5_102
	a3 = CONVERT(Mem114[a3:byte], byte, word32)
	a0_119 = 58<i32>
	branch a3 == 58<i32> l2304BCA8
l2304BD02:
	branch Mem114[a5_102 + 8<i32>:word32] == 0<32> l2304BCA4
l2304BD06:
	a0_131 = 0x230878F8<32>
l2304BC96:
	Mem134[a0_119 + 12<i32>:word32] = a5_26
	a3 = CONVERT(Mem134[a3:byte], byte, word32)
	branch a3 != 58<i32> l2304BD18
l2304BD18:
	branch Mem134[a5_26 + 8<i32>:word32] == 0<32> l2304BCA4
l2304BD1C:
	a0_131 = 0x230878D8<32>
l2304BD2C:
	word32 s2_572
	word32 t4_573
	word32 a2_568
	word32 a4_569
	word32 a5_570
	word32 a7_571
	word32 a0_567
	word32 s1_566
	ra = printf(ra, a0_131, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_566, out a0_567, out a1, out a2_568, out a3, out a4_569, out a5_570, out a7_571, out s2_572, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4_573)
l2304BCA4:
	a0_119 = 63<i32>
l2304BCA8:
	a0Out = a0_119
	a1Out = a1
	a3Out = a3
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
l2304BC2C:
	Mem196[a4 + 5<32>:word32] = a0_6
l2304BC30:
	a0Out = 0xFFFFFFFF<32>
	a1Out = a1
	a3Out = a3
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
l2304BC04:
	a3 = CONVERT(Mem0[a3:byte], byte, word32)
	branch a3 != 45<i32> l2304BD32
l2304BD32:
	a0Out = 0xFFFFFFFF<32>
	a1Out = a1
	a3Out = a3
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
l2304BC0C:
	Mem200[a4 + 5<32>:word32] = a0_6
	Mem203[a4 + 1<32>:word32] = a0_6
	a0Out = 1<32>
	a1Out = a1
	a3Out = a3
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
utils_getopt_exit:


word32 Bl_F_fast.constprop.0(word32 ra, word32 a0, word32 a2, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg6C, word32 dwArgA4, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_wifi_psk_cal_fast_bin
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +006C:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0198:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
Bl_F_fast.constprop.0_entry:
l2304BD34:
	word32 a3_36
	word32 a5_325
	word32 a2_323
	word32 a4_324
	word32 a1_322
	strlen(a2, out a1_322, out a2_323, out a3_36, out a4_324, out a5_325)
	word32 a5_50
	word32 a2_53
	word32 a3_54
	word32 a7_329
	word32 a4_327
	word32 a6_328
	word32 a1_326
	memcpy(a0, a3_36, a4, out a1_326, out a2_53, out a3_54, out a4_327, out a5_50, out a6_328, out a7_329)
	word32 a4_63 = a0 + dwArgA4
	Mem64[a4_63:byte] = 0<8>
	Mem65[a4_63 + 3<i32>:byte] = SLICE(a5_50, byte, 0)
	Mem66[a4_63 + 1<i32>:byte] = 0<8>
	Mem67[a4_63 + 2<i32>:byte] = 0<8>
	word32 s1_77
	word32 s2_78
	word32 s3_79
	word32 s4_80
	word32 s5_88
	word32 ra_85 = bl_sha_mutex_take(ra, a2_53, a3_54, a4_63, mstatus, s4, s2, dwArg20, dwArg24, dwArg48, s3, dwArg6C, dwArgC8, dwArg0108, out s1_77, out s2_78, out s3_79, out s4_80, out s5_88)
	utils_hmac_sha1_fast(ra_85, 1<32>, s3_79, s4_80, s2_78)
	word32 a6_335
	word32 a7_336
	word32 a4_333
	word32 a5_334
	word32 a2_331
	word32 a3_332
	word32 a1_330
	memcpy(s5_88, s2_78, 0x14<32>, out a1_330, out a2_331, out a3_332, out a4_333, out a5_334, out a6_335, out a7_336)
	word32 s0_137 = 0xFFFFFF<32>
l2304BDAC:
	utils_hmac_sha1_fast(ra_85, 1<32>, s3_79, s4_80, s1_77)
	word32 a7_343
	word32 a5_341
	word32 a6_342
	word32 a3_339
	word32 a4_340
	word32 a1_337
	word32 a2_338
	memcpy(s2_78, s1_77, 0x14<32>, out a1_337, out a2_338, out a3_339, out a4_340, out a5_341, out a6_342, out a7_343)
	word32 a5_190 = 0<32>
l2304BDCA:
	word32 a3_193 = s5_88 + a5_190
	word32 a4_200 = CONVERT(Mem196[s1_77 + a5_190:byte], byte, word32) ^ CONVERT(Mem196[a3_193:byte], byte, word32)
	Mem201[a3_193:byte] = SLICE(a4_200, byte, 0)
	a5_190 = a5_190 + 1<32>
	branch a5_190 != 0x14<32> l2304BDCA
l2304BDE6:
	s0_137 = s0_137 + 0xFFFFFFFF<32>
	branch s0_137 != 0<32> l2304BDAC
l2304BDEA:
	word32 s1_219
	word32 s2_220
	word32 s3_221
	word32 ra_233 = bl_sha_mutex_give(ra_85, a4_200, mstatus, s4, s2, dwArg20, dwArg24, dwArg48, s3, dwArg6C, dwArgC8, dwArg0108, dwArg0148, out s1_219, out s2_220, out s3_221)
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_219
	s2Out = s2_220
	s3Out = s3_221
	s4Out = dwArgF4
	return ra_233
Bl_F_fast.constprop.0_exit:


void utils_wifi_psk_cal_fast_bin(word32 ra, word32 a0, word32 a1, word32 a2, word32 s3, word32 s4, word32 mstatus, word32 dwArg0C, word32 dwArg68, word32 dwArgA8, word32 dwArgE8, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheGeneratePSK
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] Stack +000C:[0..31] Stack +0068:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
utils_wifi_psk_cal_fast_bin_entry:
l2304BE02:
	word32 a1_184
	word32 a2_185
	word32 a3_186
	word32 a4_187
	word32 a5_188
	branch strlen(a0, out a1_184, out a2_185, out a3_186, out a4_187, out a5_188) >u 63<i32> l2304BE6C
l2304BE6C:
l2304BE22:
	branch a2 > 32<i32> l2304BE5E
l2304BE2C:
	word32 s0_50
	word32 s1_51
	word32 s2_54
	word32 s3_55
	word32 s4_56
	word32 ra_49 = Bl_F_fast.constprop.0(ra, fp + -68<i32>, a0, a2, a0, a1, s4, mstatus, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, s3, dwArg68, dwArgA8, dwArgE8, dwArg0138, out s0_50, out s1_51, out s2_54, out s3_55, out s4_56)
	word32 a1_189
	word32 a2_190
	word32 a3_191
	word32 a4_192
	word32 a5_193
	word32 a6_194
	word32 a7_195
	memcpy(s0_50 + 20<i32>, s0_50, 0xC<32>, out a1_189, out a2_190, out a3_191, out a4_192, out a5_193, out a6_194, out a7_195)
	word32 s0_196
	word32 s1_197
	word32 s2_198
	word32 s3_199
	word32 s4_200
	Bl_F_fast.constprop.0(ra_49, fp + -68<i32>, s2_54, s1_51, s2_54, s3_55, s4_56, mstatus, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, s3, dwArg68, dwArgA8, dwArgE8, dwArg0138, out s0_196, out s1_197, out s2_198, out s3_199, out s4_200)
l2304BE5E:
	return
utils_wifi_psk_cal_fast_bin_exit:


word32 utils_memp_init(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg34, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping_api_init
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
utils_memp_init_entry:
l2304BE70:
	word32 a0_118
	word32 s2_8 = a3 + 3<32> & 252<i32>
	word32 a5_12 = CONVERT(SLICE(s2_8, word16, 0), word16, word32)
	word32 s1_19 = CONVERT(SLICE(a1 + 3<i32> + a5_12 & 0<32> - a5_12, word16, 0), word16, word32)
	word32 a0_38
	word32 a1_39
	word32 s1_46
	word32 s2_47
	word32 s3_48
	word32 s8_141
	word32 a6_139
	word32 s4_140
	word32 a5_138
	word32 a2_137
	word32 a4_122
	word32 a3_121
	pvPortMalloc(ra, s1_19, s1_19 + a2 + (0<32> - s2_8 & s2_8 + 31<i32>), a3 + 3<32>, a4, s2_8 + 31<i32>, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_46, out a0_38, out a1_39, out a2_137, out a3_121, out a4_122, out a5_138, out a6_139, out s2_47, out s3_48, out s4_140, out s8_141)
	branch a0_38 == 0<32> l2304BEFE
l2304BEFE:
	a0_118 = 0xFFFFFFFF<32>
l2304BEB4:
	word32 a5_56 = a0_38 + a1
	Mem57[a5_56 + 20<i32>:word32] = a0_38
	Mem58[a1_39:word32] = a0_38
	Mem59[dwArg34 + 4<i32>:word32] = a0_38
	Mem60[a0_38 + 8<i32>:word32] = 0<32>
	Mem61[a0_38 + 12<i32>:byte] = SLICE(s2_47, byte, 0)
	Mem62[s1_46 + 16<i32>:word32] = a0_38
	Mem63[a0_38 + 28<i32>:word32] = 0<32>
	a4_122 = 0<32>
	a3_121 = 0<32>
l2304BED4:
	branch a4_122 != dwArg34 l2304BEF0
l2304BEF0:
	Mem72[a3_121:word32] = a5_56
	a4_122 = CONVERT(SLICE(a4_122 + 1<32>, word16, 0), word16, word32)
	a3_121 = a5_56
	a5_56 = a5_56 + s1_46
l2304BED8:
	Mem78[a3_121 + 28<i32>:word32] = a0_38
	Mem79[a3_121 + 24<i32>:word32] = a0_38
	Mem81[s3_48:word32] = a0_38
	a0_118 = 0<32>
l2304BEE2:
	0<32> = dwArg0128
	a0Out = a0_118
	a3Out = a3_121
	a4Out = a4_122
	return dwArgE4
utils_memp_init_exit:


word32 utils_memp_deinit(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0148, word32 dwArg0188, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping_free
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
utils_memp_deinit_entry:
l2304BF02:
	branch a0 == 0<32> l2304BF14
l2304BF14:
	a5Out = a5
	return s0
l2304BF04:
	word32 a5_14
	word32 s0_20
	word32 s1_53
	word32 a0_54
	word32 a1_55
	word32 a2_56
	word32 a3_57
	word32 a4_58
	word32 a6_59
	word32 s4_60
	word32 t3_61
	vPortFree(a0, a2, a5, mstatus, dwArg0148, dwArg0188, out s0_20, out s1_53, out a0_54, out a1_55, out a2_56, out a3_57, out a4_58, out a5_14, out a6_59, out s4_60, out t3_61)
	a5Out = a5_14
	return s0_20
utils_memp_deinit_exit:


word32 utils_memp_malloc(word32 a0, word32 a3, word32 a4, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping_timeout
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
utils_memp_malloc_entry:
l2304BF18:
	word32 a5_10 = 0<32>
	branch a0 == 0<32> l2304BF3A
l2304BF1C:
	a5_10 = 0<32>
	branch a4 == a3 l2304BF3A
l2304BF26:
	word32 a0_11 = Mem0[0x1C<32>:word32]
	branch true l2304BF3A
l2304BF2A:
	word32 a5_12 = Mem0[a3:word32]
	Mem14[a4 + 9<32>:word32] = a0_11
	Mem15[a3 + 28<i32>:word32] = a0_11
	Mem17[165<i32>:word32] = a5_12
	a4 = 165<i32>
	a5_10 = a5_12 + 4<32>
l2304BF3A:
	a4Out = a4
	return a5_10
utils_memp_malloc_exit:


word32 utils_memp_free(word32 a0, word32 a1, word32 a2, word32 a4, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping_free
//      ping_timeout
//      ping_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a0 a2 a3 a4
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
utils_memp_free_entry:
l2304BF3E:
	branch a0 == 0<32> l2304BF84
l2304BF48:
	branch a1 == 0xFFFFFFFC<32> l2304BF84
l2304BF4A:
	branch a4 == 0<32> l2304BF84
l2304BF4E:
	branch a1 + -4<i32> <u a4 l2304BF84
l2304BF54:
	branch a2 <u a1 + -4<i32> l2304BF84
l2304BF5A:
	a4 = a1 + -4<i32> - a4 & a2
	branch a4 != 0<32> l2304BF84
l2304BF66:
	a2 = Mem0[a1 + -4<i32>:int32]
	a4 = 165<i32>
	branch a2 != 165<i32> l2304BF84
l2304BF84:
	a2Out = a2
	a3Out = <invalid>
	a4Out = a4
	return 0xFFFFFFFF<32>
l2304BF72:
	Mem21[a1 + 4092<i32>:word32] = 165<i32>
	word32 a5_22 = Mem21[173<i32>:word32]
	Mem23[a1 + 24<i32>:word32] = a5_22
	Mem25[0xAC<32>:word32] = a5_22
	a2Out = a2
	a3Out = <invalid>
	a4Out = 0xA4<32>
	return 0<32>
utils_memp_free_exit:


word32 utils_tlv_bl_pack_auto(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_main_cfg_task_req
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
utils_tlv_bl_pack_auto_entry:
l2304BF86:
	word32 a5_12
	branch a2 == 1<32> l2304BF98
l2304BF98:
	a4 = CONVERT(Mem0[a3:byte], byte, word32)
l2304BF8C:
	branch a2 == 7<32> l2304BFAA
l2304BFAA:
l2304BF9C:
	a5_12 = 0xFFFFFFFF<32>
	branch a1 <= 3<32> l2304BF94
l2304BFA4:
	Mem18[a4:word32] = a0
	a5_12 = 4<32>
l2304BF92:
	a5_12 = 0xFFFFFFFE<32>
l2304BF94:
	return a5_12
utils_tlv_bl_pack_auto_exit:


void utils_tlv_bl_unpack_auto(word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cfg_start_req_handler
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
utils_tlv_bl_unpack_auto_entry:
l2304BFAE:
	branch a2 == 1<32> l2304BFBE
l2304BFBE:
	word32 a5_12
	branch a1 <= 3<32> l2304BFD2
l2304BFD2:
	a5_12 = 1<32>
l2304BFC4:
	a5_12 = CONVERT(true, bool, word32)
l2304BFCC:
	Mem16[a3:byte] = SLICE(a5_12, byte, 0)
	return
l2304BFB4:
	branch a2 == 7<32> l2304BFD8
l2304BFD8:
	word32 a5_18 = 3<32>
	branch a1 <= 3<32> l2304BFE6
l2304BFE6:
	a5_18 = 0<32>
l2304BFDE:
l2304BFE2:
	Mem25[a5_18:word32] = a3
	return
l2304BFBA:
	return
utils_tlv_bl_unpack_auto_exit:


void utils_hmac_sha1_fast(word32 ra, word32 a2, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_F_fast.constprop.0
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s11 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
utils_hmac_sha1_fast_entry:
l2304BFEC:
	word32 s5_165 = a5
	word32 s2_113 = a3
	word32 s1_111 = a4
	branch a4 <= 64<i32> l2304C046
l2304C02A:
	bl_sha_init(ra, fp + -196<i32>, 2<32>, 64<i32>, dwLoc8C)
	word32 a4_62
	word32 s2_68
	word32 s5_71
	word32 a1_473
	word32 a2_474
	word32 s3_475
	word32 s4_476
	bl_sha_update(fp + -196<i32>, a3, a4, a5, dwLoc88, out a1_473, out a2_474, out a4_62, out s2_68, out s3_475, out s4_476, out s5_71)
	word32 s0_477
	word32 s1_478
	word32 s4_479
	word32 s6_480
	ra = bl_sha_finish(s2_68, a4_62, s5_71, dwLocA8, out s0_477, out s1_478, out s2_113, out s4_479, out s5_165, out s6_480)
	s1_111 = 0x14<32>
l2304C046:
	word32 t1_460
	word32 a4_465
	word32 a5_466
	word32 a0_461
	word32 a1_462
	word32 a2_463
	word32 a3_464
	word32 ra_108 = memset(ra, fp + -288<i32>, 0<32>, 64<i32>, out t1_460, out a0_461, out a1_462, out a2_463, out a3_464, out a4_465, out a5_466)
	word32 a4_469
	word32 a5_470
	word32 a6_471
	word32 a7_472
	word32 a1_467
	word32 a2_468
	word32 a3_121
	memcpy(fp + -288<i32>, s2_113, s1_111, out a1_467, out a2_468, out a3_121, out a4_469, out a5_470, out a6_471, out a7_472)
l2304C06C:
	word32 a5_136 = Mem135[a3_121:word32]
	Mem140[a5_136 + 0x1000<32>:word32] = a3_121 ^ 0x36363636<32>
	word32 a3_141 = Mem140[a5_136 + 4<32>:int32]
	Mem143[a5_136 + 0x1004<32>:word32] = a3_141 ^ 0x36363636<32>
	a3_121 = a3_141 ^ 0x36363636<32>
	branch a5_136 + 8<32> != fp + -224<i32> l2304C06C
l2304C084:
	bl_sha_init(ra_108, fp + -196<i32>, 2<32>, a5_136 + 8<32>, dwLoc8C)
	word32 s2_481
	word32 s3_482
	word32 a2_168
	word32 a1_167
	word32 s5_179
	word32 s4_178
	word32 a4_170
	bl_sha_update(fp + -196<i32>, fp + -288<i32>, 64<i32>, s5_165, dwLoc88, out a1_167, out a2_168, out a4_170, out s2_481, out s3_482, out s4_178, out s5_179)
	word32 s3_184 = 0<32>
l2304C09A:
	branch s3_184 < a2 l2304C136
l2304C136:
	word32 s2_483
	bl_sha_update(fp + -196<i32>, a1_167, a2_168, s5_179, dwLoc88, out a1_167, out a2_168, out a4_170, out s2_483, out s3_184, out s4_178, out s5_179)
l2304C09E:
	word32 s1_228
	word32 s2_229
	word32 s4_231
	word32 s5_232
	word32 a2_489
	word32 a3_490
	word32 a4_491
	word32 a5_492
	word32 s6_485
	word32 t1_486
	word32 a0_487
	word32 a1_488
	word32 s0_484
	word32 ra_246 = memset(bl_sha_finish(s4_178, a4_170, s5_179, dwLocA8, out s0_484, out s1_228, out s2_229, out s4_231, out s5_232, out s6_485), fp + -288<i32>, 0<32>, 64<i32>, out t1_486, out a0_487, out a1_488, out a2_489, out a3_490, out a4_491, out a5_492)
	word32 a6_497
	word32 a7_498
	word32 a1_493
	word32 a2_494
	word32 a3_495
	word32 a5_496
	word32 a4_252
	memcpy(fp + -288<i32>, s2_229, s1_228, out a1_493, out a2_494, out a3_495, out a4_252, out a5_496, out a6_497, out a7_498)
l2304C0C4:
	word32 s0_269 = Mem268[a4_252:word32]
	Mem273[s0_269 + 0x1000<32>:word32] = a4_252 ^ 0x5C5C5C5C<32>
	word32 a4_274 = Mem273[s0_269 + 4<32>:int32]
	Mem276[s0_269 + 0x1004<32>:word32] = a4_274 ^ 0x5C5C5C5C<32>
	a4_252 = a4_274 ^ 0x5C5C5C5C<32>
	branch s0_269 + 8<32> != s4_231 l2304C0C4
l2304C0DC:
	bl_sha_init(ra_246, fp + -196<i32>, 2<32>, 0x5C5C5C5C<32>, dwLoc8C)
	word32 s3_508
	word32 s2_511
	word32 s1_510
	word32 s5_311
	word32 a4_323
	word32 s5_332
	word32 s0_347
	word32 s5_352
	word32 s6_353
	word32 s4_509
	word32 a1_505
	word32 a2_506
	word32 s2_507
	word32 s3_503
	word32 s4_504
	word32 s2_502
	word32 a4_501
	word32 a1_499
	word32 a2_500
	word32 s4_512
	bl_sha_finish(bl_sha_update(fp + -196<i32>, bl_sha_update(fp + -196<i32>, fp + -288<i32>, 64<i32>, s5_232, dwLoc88, out a1_499, out a2_500, out a4_501, out s2_502, out s3_503, out s4_504, out s5_311), 0x14<32>, s5_311, dwLoc88, out a1_505, out a2_506, out a4_323, out s2_507, out s3_508, out s4_509, out s5_332), a4_323, s5_332, dwLocA8, out s0_347, out s1_510, out s2_511, out s4_512, out s5_352, out s6_353)
	word32 a1_513
	word32 a2_514
	word32 a3_515
	word32 a4_516
	word32 a5_517
	word32 a6_518
	word32 a7_519
	memcpy(s5_352, s0_347, s6_353, out a1_513, out a2_514, out a3_515, out a4_516, out a5_517, out a6_518, out a7_519)
	return
utils_hmac_sha1_fast_exit:


word32 vfs_init(word32 ra, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0178, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
vfs_init_entry:
l2304C14E:
	word32 a4_22 = CONVERT(Mem5[0x4200DFE4<32>:byte], byte, word32)
	word32 a5_14 = 0<32>
	branch a4_22 == 1<32> l2304C18C
l2304C16A:
	word32 a0_31
	word32 a2_115
	word32 s1_24 = xQueueCreateMutexStatic(1<32>, 0x42015490<32>, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0108, dwArg0138, dwArg0178, out a0_31, out a2_115, out a3, out a4_22)
	Mem42[0x42020ED8<32>:word32] = a0_31
	a5_14 = 0xFFFFFFFF<32>
	branch a0_31 == 0<32> l2304C18C
l2304C184:
	ra = inode_init(ra, out a3, out a4_22)
	Mem54[0x4200DFE4<32>:byte] = SLICE(s1_24, byte, 0)
	a5_14 = 0<32>
l2304C18C:
	a3Out = a3
	a4Out = a4_22
	a5Out = a5_14
	return ra
vfs_init_exit:


word32 aos_open(word32 ra, word32 a0, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArg88, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
//      aws_main_entry
//      cat_cmd
//      hexdump_cmd
//      aos_event_service_init
//      mbedtls_pk_load_file
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aos_open_entry:
l2304C198:
	word32 s0_107
	branch a0 == 0<32> l2304C24C
l2304C24C:
	s0_107 = 0xFFFFFFEA<32>
l2304C1A8:
	s2 = a0
	s3 = a1
	a5 = 1024<i32>
	word32 a2_26
	word32 a5_368
	word32 a1_367
	branch strlen(a0, out a1_367, out a2_26, out a3, out a4, out a5_368) >u 1024<i32> l2304C250
l2304C250:
	s0_107 = -91<i32>
l2304C1B8:
	word32 a0_33
	word32 a5_372
	word32 s4_373
	word32 a1_370
	word32 a2_371
	word32 s1_369
	xQueueSemaphoreTake(Mem15[0x4201FED8<32>:int32], 0xFFFFFFFF<32>, a2_26, a3, a4, 1024<i32>, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_369, out a0_33, out a1_370, out a2_371, out a3, out a4, out a5_372, out s2, out s3, out s4_373)
	a5 = 1<32>
	branch a0_33 != 1<32> l2304C256
l2304C256:
	s0_107 = 0xFFFFFFFF<32>
l2304C1CC:
	word32 a0_51
	word32 a2_53
	word32 a4_55
	word32 a5_56
	word32 s3_62
	word32 s4_63
	inode_open(s2, dwArg88, out a0_51, out a2_53, out a4_55, out a5_56, out s3_62, out s4_63)
	branch a0_51 != 0<32> l2304C1F6
l2304C1F6:
	Mem73[a0_51 + 12<i32>:word32] = s3_62
	word32 a5_78
	word32 s4_96
	word32 s0_374
	word32 a0_375
	word32 a1_376
	word32 a2_377
	word32 a7_378
	word32 s5_379
	word32 s8_380
	word32 s1_117
	xQueueGenericSend(Mem73[s4_63 + -296<i32>:int32], 0<32>, 0<32>, new_file(a0_51, a2_53, out a5_78), a5_78, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s0_374, out s1_117, out a0_375, out a1_376, out a2_377, out a3, out a4, out a5, out a7_378, out s2, out s3, out s4_96, out s5_379, out s6, out s8_380)
	branch s1_117 == 0<32> l2304C25A
l2304C25A:
	s0_107 = 0xFFFFFFE9<32>
l2304C20E:
	word32 a0_121
	word32 s0_108 = Mem73[a5:word32]
	a3 = CONVERT(Mem73[s0_108 + 16<i32>:byte], byte, word32)
	a4 = 3<32>
	word32 a5_111 = Mem73[a5:word32]
	branch a3 != 3<32> l2304C230
l2304C230:
	branch a5_111 == 0<32> l2304C23A
l2304C232:
	word32 a5_123
	word32 tp_131
	word32 a7_132
	word32 s5_133
	word32 t1_135
	word32 t0_136
	word32 t2_137
	word32 t4_138
	word32 t5_139
	word32 t6_140
	call a5_111 (retsize: 0;)
		uses: a0:s0_108,a1:s1_93,a3:a3_124,a4:a4_129,a5:a5_123,a7:a7_132,mstatus:mstatus,ra:ra,s0:s0_108,s1:s1_93,s2:s2_94,s3:s3_95,s4:s4_96,s5:s5_133,s6:s6_134,Stack +0024:dwArg04,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +0118:dwArgF8,Stack +0158:dwArg0138,Stack +0198:dwArg0178,t0:t0_136,t1:t1_135,t2:t2_137,t4:t4_138,t5:t5_139,t6:t6_140,tp:tp_131
		defs: a0:a0_121,a3:a3_124,a4:a4_129,a5:a5_123,a7:a7_132,mstatus:mstatus_130,ra:ra_115,s1:s1_117,s2:s2_118,s3:s3_119,s5:s5_133,s6:s6_134,t0:t0_136,t1:t1_135,t2:t2_137,t4:t4_138,t5:t5_139,t6:t6_140,tp:tp_131
l2304C21C:
	branch a5_111 == 0<32> l2304C23A
l2304C21E:
	word32 a5_153
	word32 tp_161
	word32 a7_162
	word32 s5_163
	word32 t1_165
	word32 t0_166
	word32 t2_167
	word32 t4_168
	word32 t5_169
	word32 t6_170
	call a5_111 (retsize: 0;)
		uses: a0:s1_93,a1:s2_94,a2:s3_95,a3:a3_154,a4:a4_159,a5:a5_153,a7:a7_162,mstatus:mstatus,ra:ra,s0:s0_108,s1:s1_93,s2:s2_94,s3:s3_95,s4:s4_96,s5:s5_163,s6:s6_164,Stack +0024:dwArg04,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +0118:dwArgF8,Stack +0158:dwArg0138,Stack +0198:dwArg0178,t0:t0_166,t1:t1_165,t2:t2_167,t4:t4_168,t5:t5_169,t6:t6_170,tp:tp_161
		defs: a0:a0_151,a3:a3_154,a4:a4_159,a5:a5_153,a7:a7_162,mstatus:mstatus_160,ra:ra_145,s1:s1_147,s2:s2_148,s3:s3_149,s5:s5_163,s6:s6_164,t0:t0_166,t1:t1_165,t2:t2_167,t4:t4_168,t5:t5_169,t6:t6_170,tp:tp_161
l2304C226:
	s0_107 = a0_121
	branch a0_121 == 0<32> l2304C23A
l2304C23A:
l2304C24A_thunk_get_fd:
	word32 a5_188
	word32 a0_187 = get_fd(s1_117, out a5_188)
	s0Out = <invalid>
	a0Out = a0_187
	a3Out = a3
	a4Out = a4
	a5Out = a5_188
	s2Out = s2
	s3Out = s3
	s6Out = s6
	mstatusOut = mstatus
	return ra
l2304C22A:
	a5 = del_file(s1_117)
l2304C1D4:
	word32 s0_381
	word32 s1_382
	word32 a0_383
	word32 a1_384
	word32 a2_385
	word32 a7_386
	word32 s4_387
	word32 s5_388
	word32 s8_389
	xQueueGenericSend(Mem15[s4_63 + -296<i32>:int32], 0<32>, 0<32>, a4_55, a5_56, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s0_381, out s1_382, out a0_383, out a1_384, out a2_385, out a3, out a4, out a5, out a7_386, out s2, out s3, out s4_387, out s5_388, out s6, out s8_389)
	s0_107 = 0xFFFFFFFE<32>
l2304C1E4:
	s0Out = <invalid>
	a0Out = s0_107
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s6Out = s6
	mstatusOut = mstatus
	return ra
aos_open_exit:


word32 aos_close(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg38, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
//      cat_cmd
//      hexdump_cmd
//      mbedtls_pk_load_file
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0038:[0..31]
// LiveOut: a2 a3 a4 a5 s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 sp
aos_close_entry:
l2304C25E:
	word32 sp_22 = fp + 0xFFFFFFF0<32>
	word32 a5_126
	branch get_file(a0, out a5_126) == 0<32> l2304C2A4
l2304C26E:
	word32 a0_17 = Mem11[a4:word32]
	word32 a4_20 = Mem11[a5_126:word32]
	word32 a5_21 = Mem11[a5_126 + 4<i32>:word32]
	branch a5_21 == 0<32> l2304C27E
l2304C27A:
	word32 a1_32
	word32 a6_109
	word32 s3_110
	word32 s4_111
	word32 s8_112
	word32 t3_113
	word32 a7_114
	word32 t0_117
	word32 t1_118
	word32 t4_119
	word32 t5_120
	word32 t6_121
	call a5_21 (retsize: 0;)
		uses: a0:a0_17,a1:a1_32,a2:a2_30,a3:a3_33,a4:a4_20,a6:a6_109,a7:a7_114,mstatus:mstatus,ra:ra,s0:0<32>,s1:a0_17,s2:s2,s3:s3_110,s4:s4_111,s5:s5_115,s6:s6_116,s8:s8_112,t0:t0_117,t1:t1_118,t3:t3_113,t4:t4_119,t5:t5_120,t6:t6_121
		defs: a1:a1_32,a2:a2_30,a3:a3_33,a4:a4_28,a5:a5_29,a6:a6_109,a7:a7_114,s3:s3_110,s4:s4_111,s5:s5_115,s6:s6_116,s8:s8_112,sp:sp_22,t0:t0_117,t1:t1_118,t3:t3_113,t4:t4_119,t5:t5_120,t6:t6_121
l2304C27E:
	word32 a0_48
	word32 a1_185
	word32 a2_186
	word32 a5_187
	word32 s4_188
	xQueueSemaphoreTake(Mem11[0x4201FED8<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4_20, a5_21, mstatus, Mem11[sp_22 + 8<i32>:word32], Mem11[sp_22 + 36<i32>:word32], Mem11[sp_22 + 164<i32>:word32], Mem11[sp_22 + 280<i32>:word32], Mem11[sp_22 + 344<i32>:word32], out s1, out a0_48, out a1_185, out a2_186, out a3, out a4, out a5_187, out s2, out s3, out s4_188)
	a5_126 = 1<32>
	branch a0_48 != 1<32> l2304C2B2
l2304C2B2:
l2304C292:
	word32 s0_189
	word32 a0_190
	word32 a1_191
	word32 a2_192
	word32 a7_193
	word32 s4_194
	word32 s8_195
	xQueueGenericSend(Mem11[s2 + -296<i32>:int32], 0<32>, 0<32>, a4, del_file(s1), mstatus, Mem11[sp_22 + 8<i32>:word32], Mem11[sp_22 + 36<i32>:word32], Mem11[sp_22 + 164<i32>:word32], Mem11[sp_22 + 280<i32>:word32], Mem11[sp_22 + 344<i32>:word32], Mem11[sp_22 + 408<i32>:word32], out s0_189, out s1, out a0_190, out a1_191, out a2_192, out a3, out a4, out a5_126, out a7_193, out s2, out s3, out s4_194, out s5, out s6, out s8_195)
l2304C2A4:
	0<32> = dwArg38
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_126
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return s1
aos_close_exit:


word32 aos_read(word32 ra, word32 a0, word32 a1, word32 a4, word32 dwArg00, word32 dwArg44, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cat_cmd
//      console_cb_read
//      event_read_cb
//      mbedtls_pk_load_file
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a1 a2 a4 a5 ra s0
// Trashed: a0 a1 a2 a4 a5 ra s0 t1 t3
// Preserved: sp
aos_read_entry:
l2304C2B6:
	word32 a0_13
	word32 a5_12
	branch get_file(a0, out a5_12) == 0<32> l2304C2D8
l2304C2D8:
	a0_13 = 0xFFFFFFFE<32>
l2304C2C2:
	word32 a0_14 = Mem9[a5_12:word32]
	s0 = a1
	a2 = dwArg44
	a5_12 = Mem9[a4:word32]
	word32 t1_19 = Mem9[a4 + 8<i32>:int32]
	branch t1_19 == 0<32> l2304C2E0
l2304C2E0:
	a0_13 = 0xFFFFFFFF<32>
l2304C2DA:
	s0Out = s0
	a0Out = a0_13
	a1Out = a1
	a2Out = a2
	a4Out = a4
	a5Out = a5_12
	return ra
l2304C2D2:
	word32 ra_28
	word32 a1_29
	word32 a2_30
	word32 a0_31
	word32 a5_32
	word32 s0_33
	word32 a4_34
	word32 t1_35
	call t1_19 (retsize: 0;)
		uses: a0:a0_14,a1:a1,a2:dwArg44,a4:a4,ra:ra,s0:s0_33,Stack +0000:dwArg00,Stack +0044:dwArg44,t1:t1_35,t3:dwArg00
		defs: a0:a0_31,a1:a1_29,a2:a2_30,a4:a4_34,a5:a5_32,ra:ra_28,s0:s0_33,t1:t1_35
	s0Out = s0_33
	a0Out = a0_31
	a1Out = a1_29
	a2Out = a2_30
	a4Out = a4_34
	a5Out = a5_32
	return ra_28
aos_read_exit:


word32 aos_write(word32 ra, word32 a0, word32 a1, word32 a4, word32 dwArg00, word32 dwArg44, ptr32 & t1Out, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cli_putstr
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a1 a4 a5 ra s0 t1
// Trashed: a0 a1 a2 a4 a5 ra s0 t1 t3
// Preserved: sp
aos_write_entry:
l2304C2E4:
	word32 a0_13
	word32 a5_12
	branch get_file(a0, out a5_12) == 0<32> l2304C306
l2304C306:
	a0_13 = 0xFFFFFFFE<32>
l2304C2F0:
	word32 a0_14 = Mem9[a5_12:word32]
	s0 = a1
	a5_12 = Mem9[a4:word32]
	t1 = Mem9[a4 + 12<i32>:int32]
	branch t1 == 0<32> l2304C30E
l2304C30E:
	a0_13 = 0xFFFFFFFF<32>
l2304C308:
	t1Out = t1
	s0Out = s0
	a0Out = a0_13
	a1Out = a1
	a4Out = a4
	a5Out = a5_12
	return ra
l2304C300:
	word32 ra_28
	word32 a1_29
	word32 a0_31
	word32 a5_32
	word32 s0_33
	word32 a4_34
	word32 t1_35
	call t1 (retsize: 0;)
		uses: a0:a0_14,a1:a1,a2:dwArg44,a4:a4,ra:ra,s0:s0_33,Stack +0000:dwArg00,Stack +0044:dwArg44,t1:t1_35,t3:dwArg00
		defs: a0:a0_31,a1:a1_29,a4:a4_34,a5:a5_32,ra:ra_28,s0:s0_33,t1:t1_35
	t1Out = t1_35
	s0Out = s0_33
	a0Out = a0_31
	a1Out = a1_29
	a4Out = a4_34
	a5Out = a5_32
	return ra_28
aos_write_exit:


word32 aos_ioctl(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 dwArg00, word32 dwArg44, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
//      hexdump_cmd
//      aos_post_event
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a1 a3 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 t1 t3
// Preserved: sp
aos_ioctl_entry:
l2304C312:
	branch a0 < 0<32> l2304C348
l2304C348:
	s0Out = s0
	a0Out = 0xFFFFFFEA<32>
	a1Out = a1
	a3Out = a3
	return ra
l2304C316:
	word32 a0_14
	word32 a5_13
	branch get_file(a0, out a5_13) == 0<32> l2304C34C
l2304C34C:
	a0_14 = 0xFFFFFFFE<32>
l2304C322:
	word32 t1_22
	word32 a0_16 = Mem11[a4:word32]
	s0 = dwArg44
	a3 = CONVERT(Mem11[a4 + 16<i32>:byte], byte, word32)
	branch a3 != 3<32> l2304C342
l2304C342:
	t1_22 = Mem11[a5_13 + 16<i32>:int32]
l2304C334:
	t1_22 = Mem11[a5_13 + 68<i32>:int32]
l2304C338:
	branch t1_22 == 0<32> l2304C354
l2304C354:
	a0_14 = -88<i32>
l2304C34E:
	s0Out = s0
	a0Out = a0_14
	a1Out = a1
	a3Out = a3
	return ra
l2304C33C:
	word32 a0_40
	word32 ra_41
	word32 a1_43
	word32 s0_45
	word32 a3_46
	word32 a5_47
	word32 t1_48
	call t1_22 (retsize: 0;)
		uses: a0:a0_16,a1:a1,a2:a2,a3:a3_46,a4:3<32>,a5:a5_47,ra:ra,s0:s0_45,Stack +0000:dwArg00,Stack +0044:dwArg44,t1:t1_48,t3:dwArg00
		defs: a0:a0_40,a1:a1_43,a3:a3_46,a5:a5_47,ra:ra_41,s0:s0_45,t1:t1_48
	s0Out = s0_45
	a0Out = a0_40
	a1Out = a1_43
	a3Out = a3_46
	return ra_41
aos_ioctl_exit:


word32 aos_lseek(word32 ra, word32 a0, word32 a1, word32 dwArg00, word32 dwArg44, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_load_file
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a2 a3 a4 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 t1 t3
// Preserved: sp
aos_lseek_entry:
l2304C35A:
	word32 a0_13
	word32 a5_12
	branch get_file(a0, out a5_12) == 0<32> l2304C386
l2304C386:
	a0_13 = 0xFFFFFFFE<32>
l2304C366:
	word32 a0_14 = Mem9[a5_12:word32]
	a4 = 3<32>
	a3 = CONVERT(Mem9[a5_12 + 16<i32>:byte], byte, word32)
	branch a3 != 3<32> l2304C38E
l2304C372:
	word32 t1_18 = Mem9[Mem9[a5_12:word32] + 16<i32>:int32]
	branch t1_18 == 0<32> l2304C38E
l2304C38E:
	a0_13 = -88<i32>
l2304C388:
	s0Out = s0
	a0Out = a0_13
	a2Out = a2
	a3Out = a3
	a4Out = a4
	return ra
l2304C37C:
	word32 ra_31
	word32 a2_33
	word32 a0_34
	word32 a4_36
	word32 a3_37
	word32 t1_38
	word32 s0_39
	call t1_18 (retsize: 0;)
		uses: a0:a0_14,a1:a1,a2:dwArg44,a3:a3_37,a4:a4_36,ra:ra,s0:a1,Stack +0000:dwArg00,Stack +0044:dwArg44,t1:t1_38,t3:dwArg00
		defs: a0:a0_34,a2:a2_33,a3:a3_37,a4:a4_36,ra:ra_31,s0:s0_39,t1:t1_38
	s0Out = s0_39
	a0Out = a0_34
	a2Out = a2_33
	a3Out = a3_37
	a4Out = a4_36
	return ra_31
aos_lseek_exit:


word32 aos_stat(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArg88, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ls_cmd
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a5 mstatus ra s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aos_stat_entry:
l2304C394:
	word32 sp_113 = fp + 0xFFFFFFE0<32>
	word32 s0_104 = 0xFFFFFFEA<32>
	branch a0 == 0<32> l2304C3C4
l2304C3A8:
	word32 a0_31
	word32 s1_39
	word32 a5_344
	word32 s2_345
	word32 s4_346
	word32 a1_341
	word32 a2_342
	word32 a4_343
	s2 = xQueueSemaphoreTake(Mem17[0x4201FED8<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_39, out a0_31, out a1_341, out a2_342, out a3, out a4_343, out a5_344, out s2_345, out s3, out s4_346)
	branch a0_31 == 1<32> l2304C3D8
l2304C3D8:
	word32 a0_49
	word32 a2_51
	word32 a4_53
	word32 a5_54
	word32 s3_347
	word32 s4_348
	word32 s0_57 = inode_open(s1_39, dwArg88, out a0_49, out a2_51, out a4_53, out a5_54, out s3_347, out s4_348)
	branch a0_49 != 0<32> l2304C3F2
l2304C3F2:
	word32 a5_75
	word32 s1_90
	word32 s4_93
	word32 a0_350
	word32 a1_351
	word32 a4_352
	word32 s0_349
	word32 a7_353
	word32 s8_354
	word32 a2_127
	xQueueGenericSend(Mem17[s0_57 + -296<i32>:int32], 0<32>, 0<32>, new_file(a0_49, a2_51, out a5_75), a5_75, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s0_349, out s1_90, out a0_350, out a1_351, out a2_127, out a3, out a4_352, out a5, out a7_353, out s2, out s3, out s4_93, out s5, out s6, out s8_354)
	s0_104 = 0xFFFFFFFE<32>
	branch s3 == 0<32> l2304C3C4
l2304C40A:
	word32 a4_105 = CONVERT(Mem17[s5 + 16<i32>:byte], byte, word32)
	word32 a5_106 = 3<32>
	branch a4_105 != 3<32> l2304C42A
l2304C418:
	a5_106 = Mem17[Mem17[s5:int32] + 24<i32>:word32]
	branch a5_106 == 0<32> l2304C42A
l2304C420:
	word32 a7_132
	word32 t1_134
	word32 t0_135
	word32 t2_136
	word32 t4_137
	word32 t5_138
	word32 t6_139
	call a5_106 (retsize: 0;)
		uses: a0:s3_92,a1:s1_90,a2:s4_93,a3:a3_84,a4:a4_105,a5:a5_109,a7:a7_132,mstatus:mstatus,ra:ra,s0:-88<i32>,s1:s1_90,s2:s2_91,s3:s3_92,s4:s4_93,s5:s5_94,s6:s6_133,Stack +0024:dwArg04,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +0118:dwArgF8,Stack +0158:dwArg0138,Stack +0198:dwArg0178,t0:t0_135,t1:t1_134,t2:t2_136,t4:t4_137,t5:t5_138,t6:t6_139
		defs: a2:a2_127,a3:a3_129,a4:a4_130,a5:a5_123,a7:a7_132,mstatus:mstatus_131,ra:ra_115,s2:s2_117,s5:s5_120,s6:s6_133,sp:sp_113,t0:t0_135,t1:t1_134,t2:t2_136,t4:t4_137,t5:t5_138,t6:t6_139
l2304C42A:
	word32 a0_151
	word32 a4_155
	word32 s1_364
	word32 a1_365
	word32 a2_366
	word32 a5_367
	word32 s4_368
	xQueueSemaphoreTake(Mem17[s2 + -296<i32>:int32], 0xFFFFFFFF<32>, a2_127, a3, a4_105, a5_106, mstatus, Mem17[sp_113 + 8<i32>:word32], Mem17[sp_113 + 36<i32>:word32], Mem17[sp_113 + 164<i32>:word32], Mem17[sp_113 + 280<i32>:word32], Mem17[sp_113 + 344<i32>:word32], out s1_364, out a0_151, out a1_365, out a2_366, out a3, out a4_155, out a5_367, out s2, out s3, out s4_368)
	branch a0_151 != 1<32> l2304C3C2
l2304C43A:
	word32 s1_369
	word32 a0_370
	word32 a1_371
	word32 a2_372
	word32 a4_373
	word32 a7_374
	word32 s4_375
	word32 s8_376
	xQueueGenericSend(Mem17[s2 + -296<i32>:int32], 0<32>, 0<32>, a4_155, del_file(s3), mstatus, Mem17[sp_113 + 8<i32>:word32], Mem17[sp_113 + 36<i32>:word32], Mem17[sp_113 + 164<i32>:word32], Mem17[sp_113 + 280<i32>:word32], Mem17[sp_113 + 344<i32>:word32], Mem17[sp_113 + 408<i32>:word32], out s0_104, out s1_369, out a0_370, out a1_371, out a2_372, out a3, out a4_373, out a5, out a7_374, out s2, out s3, out s4_375, out s5, out s6, out s8_376)
l2304C3E0:
	word32 s0_355
	word32 s1_356
	word32 a0_357
	word32 a1_358
	word32 a2_359
	word32 a4_360
	word32 a7_361
	word32 s4_362
	word32 s8_363
	xQueueGenericSend(Mem17[s0_57 + -296<i32>:int32], 0<32>, 0<32>, a4_53, a5_54, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s0_355, out s1_356, out a0_357, out a1_358, out a2_359, out a3, out a4_360, out a5, out a7_361, out s2, out s3, out s4_362, out s5, out s6, out s8_363)
	s0_104 = 0xFFFFFFED<32>
l2304C3C2:
	a5 = 1<32>
	s0_104 = 0xFFFFFFFF<32>
l2304C3C4:
	a0Out = s0_104
	a3Out = a3
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
aos_stat_exit:


word32 aos_opendir(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArg88, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ls_cmd
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aos_opendir_entry:
l2304C44E:
	word32 s0_132
	word32 sp_105 = fp + 0xFFFFFFE0<32>
	branch a0 != 0<32> l2304C462
l2304C462:
	word32 a0_27
	word32 s1_35
	word32 s3_336
	word32 s4_337
	word32 a4_333
	word32 a5_334
	word32 s2_335
	word32 a1_331
	word32 a2_332
	xQueueSemaphoreTake(Mem15[0x4201FED8<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_35, out a0_27, out a1_331, out a2_332, out a3, out a4_333, out a5_334, out s2_335, out s3_336, out s4_337)
	branch a0_27 != 1<32> l2304C45E
l2304C47A:
	word32 a0_44
	word32 a2_46
	word32 a4_48
	word32 a5_49
	word32 s3_55
	word32 s4_338
	inode_open(s1_35, dwArg88, out a0_44, out a2_46, out a4_48, out a5_49, out s3_55, out s4_338)
	branch a0_44 != 0<32> l2304C4A2
l2304C4A2:
	word32 a5_70
	word32 s0_84
	word32 s1_85
	word32 s2_86
	word32 s3_87
	word32 a5_342
	word32 a7_343
	word32 s5_344
	word32 a0_339
	word32 a1_340
	word32 a4_341
	word32 s6_345
	word32 s8_346
	word32 s4_111
	word32 a2_116
	xQueueGenericSend(Mem15[s3_55 + -296<i32>:int32], 0<32>, 0<32>, new_file(a0_44, a2_46, out a5_70), a5_70, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s0_84, out s1_85, out a0_339, out a1_340, out a2_116, out a3, out a4_341, out a5_342, out a7_343, out s2_86, out s3_87, out s4_111, out s5_344, out s6_345, out s8_346)
	branch s2_86 == 0<32> l2304C45E
l2304C4B8:
	word32 a4_120 = CONVERT(Mem15[s0_84 + 16<i32>:byte], byte, word32)
	word32 a5_100 = 3<32>
	branch a4_120 == 3<32> l2304C4E6
l2304C4E6:
	word32 s0_101 = Mem15[3<32>:word32]
	a5_100 = Mem15[0x27<32>:word32]
	branch a5_100 == 0<32> l2304C4C2
l2304C4EC:
	word32 s2_109
	word32 a0_112
	word32 tp_122
	word32 a7_123
	word32 s5_124
	word32 s6_125
	word32 t1_126
	word32 t0_127
	word32 t2_128
	word32 t4_129
	word32 t5_130
	word32 t6_131
	call a5_100 (retsize: 0;)
		uses: a0:s2_86,a1:s1_85,a2:a2_78,a3:a3_79,a4:a4_99,a5:a5_102,a7:a7_123,mstatus:mstatus,ra:ra,s0:s0_101,s1:s1_85,s2:s2_86,s3:s3_87,s4:s4_88,s5:s5_124,s6:s6_125,Stack +0024:dwArg04,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +0118:dwArgF8,Stack +0158:dwArg0138,Stack +0198:dwArg0178,t0:t0_127,t1:t1_126,t2:t2_128,t4:t4_129,t5:t5_130,t6:t6_131,tp:tp_122
		defs: a0:a0_112,a2:a2_116,a3:a3_115,a4:a4_120,a5:a5_114,a7:a7_123,mstatus:mstatus_121,ra:ra_106,s2:s2_109,s4:s4_111,s5:s5_124,s6:s6_125,sp:sp_105,t0:t0_127,t1:t1_126,t2:t2_128,t4:t4_129,t5:t5_130,t6:t6_131,tp:tp_122
	s0_132 = a0_112
	branch a0_112 == 0<32> l2304C4C2
l2304C4F6:
	word32 a5_379
	Mem136[get_fd(s2_109, out a5_379):word32] = a0_112
l2304C4C2:
	word32 a0_147
	word32 a4_151
	word32 s2_156
	word32 s4_158
	word32 s1_360
	word32 a1_361
	word32 a2_362
	word32 a5_363
	word32 s3_364
	xQueueSemaphoreTake(Mem15[s4_111 + -296<i32>:int32], 0xFFFFFFFF<32>, a2_116, a3, a4_120, a5_100, mstatus, Mem15[sp_105 + 8<i32>:word32], Mem15[sp_105 + 36<i32>:word32], Mem15[sp_105 + 164<i32>:word32], Mem15[sp_105 + 280<i32>:word32], Mem15[sp_105 + 344<i32>:word32], out s1_360, out a0_147, out a1_361, out a2_362, out a3, out a4_151, out a5_363, out s2_156, out s3_364, out s4_158)
	branch a0_147 != 1<32> l2304C45E
l2304C4D2:
	word32 s0_365
	word32 s1_366
	word32 a0_367
	word32 a1_368
	word32 a2_369
	word32 a4_370
	word32 a5_371
	word32 a7_372
	word32 s2_373
	word32 s3_374
	word32 s4_375
	word32 s5_376
	word32 s6_377
	word32 s8_378
	xQueueGenericSend(Mem15[s4_158 + -296<i32>:int32], 0<32>, 0<32>, a4_151, del_file(s2_156), mstatus, Mem15[sp_105 + 8<i32>:word32], Mem15[sp_105 + 36<i32>:word32], Mem15[sp_105 + 164<i32>:word32], Mem15[sp_105 + 280<i32>:word32], Mem15[sp_105 + 344<i32>:word32], Mem15[sp_105 + 408<i32>:word32], out s0_365, out s1_366, out a0_367, out a1_368, out a2_369, out a3, out a4_370, out a5_371, out a7_372, out s2_373, out s3_374, out s4_375, out s5_376, out s6_377, out s8_378)
l2304C482:
	word32 s1_347
	word32 a0_348
	word32 a1_349
	word32 a2_350
	word32 a4_351
	word32 a5_352
	word32 a7_353
	word32 s2_354
	word32 s3_355
	word32 s4_356
	word32 s5_357
	word32 s6_358
	word32 s8_359
	xQueueGenericSend(Mem15[s3_55 + -296<i32>:int32], 0<32>, 0<32>, a4_48, a5_49, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s0_132, out s1_347, out a0_348, out a1_349, out a2_350, out a3, out a4_351, out a5_352, out a7_353, out s2_354, out s3_355, out s4_356, out s5_357, out s6_358, out s8_359)
l2304C45E:
	s0_132 = 0<32>
l2304C490:
	s0Out = s1
	a0Out = s0_132
	a3Out = a3
	mstatusOut = mstatus
	return ra
aos_opendir_exit:


word32 aos_closedir(word32 ra, word32 a0, word32 s2, word32 mstatus, word32 dwArg44, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ls_cmd
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0044:[0..31]
// LiveOut: a2 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra sp
aos_closedir_entry:
l2304C4FE:
	word32 sp_28 = fp + 0xFFFFFFE0<32>
	word32 s0_103 = 0xFFFFFFEA<32>
	branch a0 == 0<32> l2304C55C
l2304C50C:
	s0_103 = 0xFFFFFFFE<32>
	word32 a0_18 = get_file(Mem11[a0:word32], out a5)
	branch a0_18 == 0<32> l2304C55C
l2304C51A:
	word32 a0_21 = Mem16[a5:word32]
	word32 a4_22 = 3<32>
	word32 a3_24 = CONVERT(Mem16[a5 + 16<i32>:byte], byte, word32)
	word32 a2_25 = dwArg44
	branch a3_24 != 3<32> l2304C536
l2304C52C:
	a5 = Mem16[Mem16[a5:word32] + 44<i32>:word32]
	branch a5 == 0<32> l2304C536
l2304C532:
	word32 a1_34
	word32 s3_119
	word32 tp_120
	word32 a7_121
	word32 s5_122
	word32 s6_123
	word32 t0_124
	word32 t1_125
	word32 t4_126
	word32 t5_127
	word32 t6_128
	call a5 (retsize: 0;)
		uses: a0:a0_21,a1:a1_34,a2:a2_38,a3:a3_37,a4:a4_36,a5:a5_35,a7:a7_121,mstatus:mstatus,ra:ra,s0:-88<i32>,s1:a0_18,s2:s2,s3:s3_119,s5:s5_122,s6:s6_123,Stack +0064:dwArg44,t0:t0_124,t1:t1_125,t4:t4_126,t5:t5_127,t6:t6_128,tp:tp_120
		defs: a1:a1_34,a2:a2_38,a3:a3_37,a4:a4_36,a5:a5_35,a7:a7_121,s3:s3_119,s5:s5_122,s6:s6_123,sp:sp_28,t0:t0_124,t1:t1_125,t4:t4_126,t5:t5_127,t6:t6_128,tp:tp_120
l2304C536:
	word32 a0_55
	word32 a4_59
	word32 s1_63
	word32 s2_64
	word32 s4_190
	word32 a5_188
	word32 s3_189
	word32 a1_186
	word32 a3_187
	xQueueSemaphoreTake(Mem16[0x4201FED8<32>:int32], 0xFFFFFFFF<32>, a2_25, a3_24, a4_22, a5, mstatus, Mem16[sp_28 + 8<i32>:word32], Mem16[sp_28 + 36<i32>:word32], Mem16[sp_28 + 164<i32>:word32], Mem16[sp_28 + 280<i32>:word32], Mem16[sp_28 + 344<i32>:word32], out s1_63, out a0_55, out a1_186, out a2, out a3_187, out a4_59, out a5_188, out s2_64, out s3_189, out s4_190)
	a5 = 1<32>
	branch a0_55 != 1<32> l2304C56A
l2304C56A:
	s0_103 = 0xFFFFFFFF<32>
l2304C54A:
	word32 s1_191
	word32 a0_192
	word32 a1_193
	word32 a3_194
	word32 a4_195
	word32 a7_196
	word32 s2_197
	word32 s3_198
	word32 s4_199
	word32 s5_200
	word32 s6_201
	word32 s8_202
	xQueueGenericSend(Mem16[s2_64 + -296<i32>:int32], 0<32>, 0<32>, a4_59, del_file(s1_63), mstatus, Mem16[sp_28 + 8<i32>:word32], Mem16[sp_28 + 36<i32>:word32], Mem16[sp_28 + 164<i32>:word32], Mem16[sp_28 + 280<i32>:word32], Mem16[sp_28 + 344<i32>:word32], Mem16[sp_28 + 408<i32>:word32], out s0_103, out s1_191, out a0_192, out a1_193, out a2, out a3_194, out a4_195, out a5, out a7_196, out s2_197, out s3_198, out s4_199, out s5_200, out s6_201, out s8_202)
l2304C55C:
	a2Out = a2
	a5Out = a5
	return s0_103
aos_closedir_exit:


word32 aos_readdir(word32 ra, word32 a0, word32 dwArg00, word32 dwArg44, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ls_cmd
// MayUse:  a0:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31]
// LiveOut: a0 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t1 t3
// Preserved: sp
aos_readdir_entry:
l2304C56E:
	branch a0 == 0<32> l2304C5A4
l2304C5A4:
	a0Out = 0<32>
	return ra
l2304C570:
	word32 a5_12
	branch get_file(Mem7[a0:word32], out a5_12) == 0<32> l2304C59C
l2304C57E:
	word32 a0_13 = Mem10[a5_12:word32]
	branch CONVERT(Mem10[a5_12 + 16<i32>:byte], byte, word32) != 3<32> l2304C59C
l2304C58A:
	word32 t1_17 = Mem10[Mem10[a5_12:word32] + 40<i32>:int32]
	branch t1_17 == 0<32> l2304C59C
l2304C59C:
	a0Out = 0<32>
	return ra
l2304C594:
	word32 a0_27
	word32 ra_28
	word32 a1_29
	word32 a5_30
	word32 a4_31
	word32 a3_32
	word32 t1_33
	call t1_17 (retsize: 0;)
		uses: a0:a0_13,a1:a1_29,a2:dwArg44,a3:a3_32,a4:a4_31,a5:a5_30,ra:ra,Stack +0000:dwArg00,Stack +0044:dwArg44,t1:t1_33,t3:dwArg00
		defs: a0:a0_27,a1:a1_29,a3:a3_32,a4:a4_31,a5:a5_30,ra:ra_28,t1:t1_33
	a0Out = a0_27
	return ra_28
aos_readdir_exit:


word32 new_file(word32 a0, word32 a2, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_open
//      aos_stat
//      aos_opendir
// MayUse:  a0:[0..31] a2:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
new_file_entry:
l2304C5A8:
	word32 a5_10 = 0xC<32>
l2304C5C0:
	word32 a4_18
	word32 a4_15 = Mem9[a2:word32]
	branch a2 != 0<32> l2304C5E2
l2304C5E2:
	a5_10 = a5_10 + 1<32>
	a4_18 = a4_15 + 0xC<32>
	branch a5_10 != 0x30<32> l2304C5C0
l2304C5EA:
l2304C5C4:
	word32 a5_22 = a5_10 + 0<32>
	Mem27[a0:word32] = a5_22 + 0x420154E0<32>
	Mem28[a5_22 + 0x420154E4<32>:word32] = 0<32>
	Mem29[a5_22 + 0x420154E8<32>:word32] = 0<32>
	a4_18 = 0xC<32>
	a5_10 = inode_ref(a0)
l2304C5D8:
	a5Out = a5_10
	return a4_18
new_file_exit:


word32 del_file(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_open
//      aos_close
//      aos_stat
//      aos_opendir
//      aos_closedir
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a2 a5
// Preserved: s0 sp
del_file_entry:
l2304C5EE:
	word32 a5_11 = inode_unref(Mem7[a0:word32])
	Mem13[a0:word32] = 0<32>
	return a5_11
del_file_exit:


word32 get_fd(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_open
//      aos_opendir
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
get_fd_entry:
l2304C606:
	a5Out = 0xAAAAAAAB<32>
	return (a0 - 0x420154E0<32> >> 2<i32>) + 0xAAAAAAAD<32>
get_fd_exit:


word32 get_file(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_close
//      aos_read
//      aos_write
//      aos_ioctl
//      aos_lseek
//      aos_closedir
//      aos_readdir
//      aos_poll
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
get_file_entry:
l2304C622:
	word32 a0_15
	word32 a5_12 = 59<i32>
	branch a0 >u 0xFFFFFFC3<32> l2304C644
l2304C644:
	a0_15 = 0<32>
l2304C62C:
	a0_15 = a0 + 0xA<32>
	a5_12 = Mem0[a0 + 0xA<32>:word32]
	branch a0 == 0xA<32> l2304C646
l2304C646:
	a5Out = a5_12
	return a0_15
l2304C640:
	a5Out = a5_12
	return a5_12
get_file_exit:


word32 inode_init(word32 ra, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_init
// MayUse:  ra:[0..31]
// LiveOut: a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
inode_init_entry:
l2304C648:
	word32 a3_13
	word32 a4_14
	word32 t1_26
	word32 a0_27
	word32 a1_28
	word32 a2_29
	word32 a5_30
	word32 ra_16 = memset(ra, 0x420157B0<32>, 0<32>, 600<i32>, out t1_26, out a0_27, out a1_28, out a2_29, out a3_13, out a4_14, out a5_30)
	a3Out = a3_13
	a4Out = a4_14
	return ra_16
inode_init_exit:


word32 inode_alloc(ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      inode_reserve
// MayUse: 
// LiveOut: a0 a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
inode_alloc_entry:
l2304C666:
	word32 a5_12 = 0x420157C0<32>
	word32 a0_10 = 0<32>
l2304C672:
	branch CONVERT(Mem0[a5_12 + 0<i32>:byte], byte, word32) == 0<32> l2304C682
l2304C678:
	a0_10 = a0_10 + 1<32>
	a5_12 = a5_12 + 0x14<32>
	branch a0_10 != 0x1E<32> l2304C672
l2304C680:
	a0_10 = 0xFFFFFFF4<32>
l2304C682:
	a4Out = 0x1E<32>
	return a0_10
inode_alloc_exit:


word32 inode_open(word32 a0, word32 dwArgA8, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_open
//      aos_stat
//      aos_opendir
// MayUse:  a0:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a2 a4 a5 s0 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 tp
// Preserved: sp
inode_open_entry:
l2304C684:
	word32 s0_27 = 0x420157B0<32>
	a0_107 = a0
l2304C6AA:
	word32 a0_107
	word32 s2_29 = Mem21[s0_27 + 8<i32>:int32]
	word32 s3_30 = s0_27
	branch s2_29 != 0<32> l2304C6D2
l2304C6D2:
	branch CONVERT(Mem21[s0_27 + 16<i32>:byte], byte, word32) == 3<32> l2304C6E6
l2304C6E6:
	word32 a1_199
	word32 a2_200
	word32 a3_201
	word32 a4_202
	word32 a5_203
	word32 a1_204
	word32 a2_205
	word32 a3_206
	word32 a4_207
	word32 a5_208
	a0_107 = strncmp(s2_29, a0, strlen(s2_29, out a1_199, out a2_200, out a3_201, out a4_202, out a5_203), out a1_204, out a2_205, out a3_206, out a4_207, out a5_208)
	branch a0_107 != 0<32> l2304C6DA
l2304C6F8:
	word32 a1_212
	word32 a2_213
	word32 a3_214
	word32 a5_215
	a0_107 = strlen(a0_107, out a1_212, out a2_213, out a3_214, out a4, out a5_215) + a0
	a5 = CONVERT(Mem21[a0_107:byte], byte, word32)
	branch a5 != 47<i32> l2304C6DA
l2304C708:
l2304C6DA:
	s0_27 = Mem21[a0_107 + 8<i32>:word32]
	word32 a1_209
	word32 a2_210
	word32 a3_211
	a0_107 = strcmp(a0_107, a0, out a1_209, out a2_210, out a3_211, out a4, out a5)
	branch a0_107 != 0<32> l2304C6B4
l2304C6E4:
l2304C6B4:
	s0_27 = s0_27 + 0x14<32>
	branch s0_27 != 0x42015A08<32> l2304C6AA
l2304C6BA:
	s3_30 = 0<32>
l2304C6BC:
	0<32> = dwArgA8
	a0Out = s3_30
	a2Out = dwArg48
	a4Out = a4
	a5Out = a5
	s3Out = s3_30
	s4Out = dwArg04
	return s1
inode_open_exit:


word32 inode_forearch_name(word32 ra, word32 a0, word32 a1, word32 a5, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ls_cmd
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a2 a5 s0
// Trashed: a0 a1 a2 a5 a6 ra s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
inode_forearch_name_entry:
l2304C70A:
	word32 s3_19 = a0
	word32 s4_21 = a1
	word32 s2_22 = 0x42015A08<32>
	word32 s1_23 = 0<32>
l2304C72A:
	word32 s0_26 = Mem17[a5 + 8<i32>:word32]
	branch a5 == 0<32> l2304C738
l2304C72E:
	word32 a0_43
	call s3_19 (retsize: 0;)
		uses: a0:s4_28,a1:s0_26,a5:a5_45,ra:ra_34,s0:s0_26,s1:s1_30 + 1<32>,s2:s2_33,s3:s3_32,s4:s4_28
		defs: a0:a0_43,a5:a5_45,ra:ra_42,s0:s0_37,s1:s1_38,s2:s2_39,s3:s3_40,s4:s4_41
	branch a0_43 != 0<32> l2304C73E
l2304C738:
	branch s0_26 + 0x14<32> != s2_22 l2304C72A
l2304C73E:
	a2Out = dwArg48
	a5Out = a5
	return s1
inode_forearch_name_exit:


word32 inode_ref(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      new_file
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
inode_ref_entry:
l2304C750:
	word32 a5_5 = CONVERT(Mem0[a0 + 17<i32>:byte], byte, word32)
	Mem7[a0 + 17<i32>:byte] = SLICE(a5_5 + 1<32>, byte, 0)
	return a5_5 + 1<32>
inode_ref_exit:


word32 inode_unref(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      del_file
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
inode_unref_entry:
l2304C75C:
	word32 a5_5 = CONVERT(Mem0[a0 + 17<i32>:byte], byte, word32)
	branch a5_5 == 0<32> l2304C768
l2304C762:
	Mem7[a0 + 17<i32>:byte] = SLICE(a5_5 + 0xFFFFFFFF<32>, byte, 0)
	a5_5 = a5_5 + 0xFFFFFFFF<32>
l2304C768:
	return a5_5
inode_unref_exit:


word32 inode_reserve(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg0118, word32 dwArg0158, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_register_driver
//      aos_register_fs
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a4 a5 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
inode_reserve_entry:
l2304C76A:
	branch a0 != 0<32> l2304C772
l2304C772:
	branch a1 == 0<32> l2304C76C
l2304C774:
	Mem5[a1:word32] = 0<32>
	a4 = CONVERT(Mem5[a0:byte], byte, word32)
	branch a4 != 47<i32> l2304C76C
l2304C784:
	word32 a4_145
	word32 a0_23 = inode_alloc(out a4_145)
	word32 s1_159 = a0
	word32 a5_27 = a0_23
	branch a0_23 < 0<32> l2304C7E4
l2304C7A0:
	branch a0_23 > 0x1D<32> l2304C7B8
l2304C7A8:
l2304C7B8:
	word32 a3_38
	word32 a4_39
	word32 a5_40
	word32 a0_50
	word32 s4_61
	word32 s8_219
	word32 s2_218
	word32 a6_217
	word32 a5_216
	word32 a3_215
	word32 a2_214
	word32 a1_213
	word32 a2_212
	word32 a1_211
	word32 s0_57 = pvPortMalloc(ra, a0, strlen(a0, out a1_211, out a2_212, out a3_38, out a4_39, out a5_40) + 1<32>, a3_38, a4_39, a5_40, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_159, out a0_50, out a1_213, out a2_214, out a3_215, out a4_145, out a5_216, out a6_217, out s2_218, out s3, out s4_61, out s8_219)
	s2 = a0_50
	a5_27 = 0xFFFFFFF4<32>
	branch a0_50 == 0<32> l2304C7E4
l2304C7CC:
	word32 a7_225
	word32 a6_224
	word32 a5_223
	word32 a3_222
	word32 a2_221
	word32 a1_220
	memcpy(a0_50, s1_159, s3, out a1_220, out a2_221, out a3_222, out a4_145, out a5_223, out a6_224, out a7_225)
	Mem82[s0_57 + 8<i32>:word32] = a0_50
	s2 = a0_50 + s3
	Mem84[s2:byte] = 0<8>
	Mem85[s4_61:word32] = s0_57
	a5_27 = 0<32>
l2304C7E4:
	a0Out = a5_27
	a4Out = a4_145
	a5Out = a5_27
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	return s1_159
l2304C76C:
	a0Out = 0xFFFFFFEA<32>
	a4Out = a4
	a5Out = 0xFFFFFFEA<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s1
inode_reserve_exit:


word32 aos_register_driver(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg74, word32 dwArgB4, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dev_uart_init
//      vfs_device_init
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0074:[0..31] Stack +00B4:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a5 ra s0 s1 s2 s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aos_register_driver_entry:
l2304C7F6:
	word32 s0_143
	word32 a0_32
	word32 a1_273
	word32 a2_274
	word32 a3_275
	word32 a4_276
	word32 a5_277
	word32 s3_278
	word32 s4_279
	word32 s2_235
	word32 s1_118
	xQueueSemaphoreTake(Mem8[0x4201FED8<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_118, out a0_32, out a1_273, out a2_274, out a3_275, out a4_276, out a5_277, out s2_235, out s3_278, out s4_279)
	word32 a5_111 = 1<32>
	branch a0_32 != 1<32> l2304C868
l2304C822:
	word32 a4_53
	word32 a5_54
	word32 s4_58
	word32 a0_61
	word32 s2_63
	word32 s3_64
	word32 s1_57 = inode_reserve(ra, a0, fp + -36<i32>, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out a0_61, out a4_53, out a5_54, out s2_63, out s3_64, out s4_58)
	branch a0_61 != 0<32> l2304C840
l2304C830:
	Mem74[a5_54:word32] = s4_58
	Mem75[a5_54 + 16<i32>:byte] = SLICE(s2_63, byte, 0)
	Mem77[a5_54 + 4<i32>:word32] = s3_64
l2304C840:
	word32 a1_280
	word32 a2_281
	word32 a3_282
	word32 a4_283
	word32 a5_284
	word32 a7_285
	word32 s3_286
	word32 s4_287
	word32 s5_288
	word32 s8_289
	word32 a0_120
	xQueueGenericSend(Mem79[s1_57 + -296<i32>:int32], 0<32>, 0<32>, a4_53, a5_54, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s0_143, out s1_118, out a0_120, out a1_280, out a2_281, out a3_282, out a4_283, out a5_284, out a7_285, out s2_235, out s3_286, out s4_287, out s5_288, out s6, out s8_289)
	a5_111 = 1<32>
	branch a0_120 == 1<32> l2304C86A
l2304C854:
	word32 a5_113 = Mem79[a0_120 + 8<i32>:word32]
	branch a0_120 == 0<32> l2304C85E
l2304C85A:
	word32 s0_296
	word32 a1_297
	word32 a2_298
	word32 a3_299
	word32 a4_300
	word32 a5_301
	word32 a6_302
	word32 s4_303
	word32 t3_304
	vPortFree(a0_120, dwArgB4, a5_113, mstatus, dwArg0128, dwArg0168, out s0_296, out s1_118, out a0_120, out a1_297, out a2_298, out a3_299, out a4_300, out a5_301, out a6_302, out s4_303, out t3_304)
l2304C85E:
	word32 t1_290
	word32 a0_291
	word32 a1_292
	word32 a2_293
	word32 a3_294
	word32 a4_295
	ra = memset(ra, a0_120, 0<32>, 0x14<32>, out t1_290, out a0_291, out a1_292, out a2_293, out a3_294, out a4_295, out a5_111)
l2304C868:
	s0_143 = 0xFFFFFFFF<32>
l2304C86A:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_118
	a0Out = s0_143
	a5Out = a5_111
	s2Out = s2_235
	s4Out = dwArg78
	s6Out = s6
	return ra
aos_register_driver_exit:


word32 aos_register_fs(word32 ra, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg74, word32 dwArgB4, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      romfs_register
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0074:[0..31] Stack +00B4:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aos_register_fs_entry:
l2304C87E:
	word32 a0_30
	word32 s4_41
	word32 a4_267
	word32 a5_268
	word32 s3_269
	word32 a3_266
	word32 a2_265
	word32 a1_264
	word32 s1_263
	word32 s2_227
	xQueueSemaphoreTake(Mem8[0x4201FED8<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_263, out a0_30, out a1_264, out a2_265, out a3_266, out a4_267, out a5_268, out s2_227, out s3_269, out s4_41)
	branch a0_30 != 1<32> l2304C8EE
l2304C8A8:
	word32 a5_51
	word32 a0_58
	word32 s2_60
	word32 s3_61
	word32 s4_270
	word32 a4_50
	word32 s1_54 = inode_reserve(ra, s4_41, fp + -36<i32>, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out a0_58, out a4_50, out a5_51, out s2_60, out s3_61, out s4_270)
	branch a0_58 != 0<32> l2304C8C6
l2304C8B4:
	Mem72[a5_51:word32] = s3_61
	Mem73[a5_51 + 16<i32>:byte] = 3<8>
	Mem75[a5_51 + 4<i32>:word32] = s2_60
	a4_50 = 3<32>
l2304C8C6:
	word32 s0_271
	word32 s1_272
	word32 a1_273
	word32 a2_274
	word32 a3_275
	word32 a4_276
	word32 a5_277
	word32 a7_278
	word32 s3_279
	word32 s4_280
	word32 s5_281
	word32 s6_282
	word32 s8_283
	word32 a0_118
	xQueueGenericSend(Mem77[s1_54 + -296<i32>:int32], 0<32>, 0<32>, a4_50, a5_51, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s0_271, out s1_272, out a0_118, out a1_273, out a2_274, out a3_275, out a4_276, out a5_277, out a7_278, out s2_227, out s3_279, out s4_280, out s5_281, out s6_282, out s8_283)
	branch a0_118 == 1<32> l2304C8F0
l2304C8DA:
	word32 a5_111 = Mem77[a0_118 + 8<i32>:word32]
	branch a0_118 == 0<32> l2304C8E4
l2304C8E0:
	word32 s0_291
	word32 s1_292
	word32 a1_293
	word32 a2_294
	word32 a3_295
	word32 a4_296
	word32 a5_297
	word32 a6_298
	word32 s4_299
	word32 t3_300
	vPortFree(a0_118, dwArgB4, a5_111, mstatus, dwArg0128, dwArg0168, out s0_291, out s1_292, out a0_118, out a1_293, out a2_294, out a3_295, out a4_296, out a5_297, out a6_298, out s4_299, out t3_300)
l2304C8E4:
	word32 t1_284
	word32 a0_285
	word32 a1_286
	word32 a2_287
	word32 a3_288
	word32 a4_289
	word32 a5_290
	ra = memset(ra, a0_118, 0<32>, 0x14<32>, out t1_284, out a0_285, out a1_286, out a2_287, out a3_288, out a4_289, out a5_290)
l2304C8EE:
l2304C8F0:
	0<32> = dwArg0128
	s2Out = s2_227
	return ra
aos_register_fs_exit:


void vfs_uart_open(word32 ra, word32 s0, word32 a1, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg5C, word32 dwArg8C, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +008C:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_uart_open_entry:
l2304C902:
	branch a1 != 0<32> l2304C912
l2304C912:
	branch a5 == 0<32> l2304C904
l2304C916:
	word32 a3_7 = CONVERT(Mem0[a5 + 17<i32>:byte], byte, word32)
	branch a3_7 != 1<32> l2304C906
l2304C922:
	word32 a0_18
	word32 a3_21
	word32 a4_22
	aos_mutex_new(ra, s0 + 32<i32>, a3_7, 1<32>, Mem14[s0 + 4<i32>:word32], mstatus, dwLoc10, s0, ra, dwArgE8, dwArg0128, dwArg0168, out a0_18, out a3_21, out a4_22)
	word32 a3_45
	word32 a4_46
	word32 s0_49
	word32 a0_57
	word32 a5_294
	word32 s2_295
	word32 s1_293
	word32 ra_58 = xStreamBufferGenericCreate(ra, a0_18, 1<32>, 0<32>, a3_21, a4_22, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_49, out s1_293, out a0_57, out a3_45, out a4_46, out a5_294, out s2_295)
	Mem61[a0_57 + 16<i32>:word32] = s0_49
	word32 a5_69
	word32 s1_72
	word32 s2_73
	word32 a0_79
	word32 a3_297
	word32 a4_298
	word32 s0_296
	word32 ra_80 = xStreamBufferGenericCreate(ra_58, a0_57, 1<32>, 0<32>, a3_45, a4_46, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_296, out s1_72, out a0_79, out a3_297, out a4_298, out a5_69, out s2_73)
	word32 s0_83 = Mem61[a5_69 + 16<i32>:word32]
	Mem84[a0_79 + 20<i32>:word32] = s0_83
	branch a5_69 == 0<32> l2304C908
l2304C94E:
	branch a0_79 == 0<32> l2304C908
l2304C908:
	return
l2304C950:
	hal_uart_notify_register(s0_83, 0<32>, 0x2304C9CE<32>)
	word32 a4_109 = hal_uart_notify_register(s0_83, 1<32>, 0x2304C97C<32>)
l2304C978_thunk_hal_uart_init:
	hal_uart_init(ra_80, s0, s1_72, s0_83, a4_109, s2_73, dwArg10, dwArg14, dwArg20, dwArg24, dwArg40, dwArg44, dwArg48, dwArg5C, dwArg8C)
	return
l2304C904:
l2304C906:
	return
vfs_uart_open_exit:


void __uart_rx_irq(word32 ra, word32 a0, word32 mstatus, word32 dwArg1C, word32 dwArg84, word32 dwArg98, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +001C:[0..31] Stack +0084:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
__uart_rx_irq_entry:
l2304C97C:
	word32 a2_22
	word32 s4_183
	word32 s8_184
	word32 a5_24
	word32 a4_23
	word32 a0_16
	hal_uart_recv_II(a0, fp + -80<i32>, 64<i32>, fp + -88<i32>, 0<32>, out a0_16, out a2_22, out a4_23, out a5_24, out s4_183, out s8_184)
	branch a2_22 == 0<32> l2304C9AC
l2304C99A:
	word32 a3_33
	word32 s2_40
	ra = xStreamBufferSendFromISR(ra, a0_16, fp + -80<i32>, a2_22, fp + -84<i32>, a4_23, mstatus, dwLoc4C, dwArg98, dwArgC8, out a0_16, out a3_33, out a4_23, out a5_24, out s2_40, out mstatus)
	branch a5_24 == 0<32> l2304C9AC
l2304C9A8:
	vTaskSwitchContext(ra, a3_33, s2_40, mstatus, dwLoc30, dwLoc2C, dwLoc08, dwArg1C, out a0_16, out a4_23, out a5_24)
l2304C9AC:
	branch a5_24 == 0<32> l2304C9C6
l2304C9B0:
	word32 a5_72 = CONVERT(Mem15[a4_23 + 6<i32>:uint16], uint16, word32)
	Mem74[a4_23 + 6<i32>:word16] = SLICE(a5_72 | 1<i32>, word16, 0)
	word32 a6_100
	word32 a7_101
	word32 s2_102
	word32 s3_103
	word32 t0_104
	word32 t1_105
	word32 t5_106
	word32 t6_107
	call a5_72 | 1<i32> (retsize: 0;)
		uses: a0:a0_78,a5:a5_72 | 1<i32>,a6:a6_100,a7:a7_101,mstatus:mstatus_81,ra:ra_80,s0:Mem74[a0_78 + 40<i32>:word32],s2:s2_102,s3:s3_103,Stack +0014:dwLoc4C,Stack +0030:dwLoc30,Stack +0034:dwLoc2C,Stack +0058:dwLoc08,Stack +007C:dwArg1C,Stack +00E4:dwArg84,Stack +00F8:dwArg98,Stack +0128:dwArgC8,t0:t0_104,t1:t1_105,t5:t5_106,t6:t6_107
		defs: a6:a6_100,a7:a7_101,s2:s2_102,s3:s3_103,t0:t0_104,t1:t1_105,t5:t5_106,t6:t6_107
l2304C9C6:
	return
__uart_rx_irq_exit:


void __uart_tx_irq(word32 ra, word32 s0, word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg24, word32 dwArg28, word32 dwArg4C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
__uart_tx_irq_entry:
l2304C9CE:
	word32 a3_20
	word32 a5_22
	word32 s2_27
	word32 mstatus_41
	word32 a0_40
	word32 s0_25
	word32 a4_21
	word32 ra_42 = xStreamBufferReceiveFromISR(ra, a0, Mem7[a0 + 20<i32>:word32], fp + -21<i32>, 1<32>, a4, a5, mstatus, s0, dwArg24, dwArgF8, out s0_25, out a0_40, out a3_20, out a4_21, out a5_22, out s2_27, out mstatus_41)
	branch a5_22 == 0<32> l2304C9F2
l2304C9EA:
	word32 a5_152
	s0_25 = vTaskSwitchContext(ra_42, a3_20, s2_27, mstatus_41, dwArg00, dwArg04, dwArg28, dwArg4C, out a0_40, out a4_21, out a5_152)
l2304C9F2:
	branch a0_40 != 1<32> l2304CA0E
l2304CA0E:
	hal_uart_send_trigger_off(a4_21)
l2304C9F8:
	hal_uart_send(s0_25, fp + -21<i32>, 1<32>, dwArg08)
l2304CA06:
	return
__uart_tx_irq_exit:


void vfs_uart_close(word32 ra, word32 s0, word32 a0, word32 a5, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg6C, word32 dwArg7C, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
vfs_uart_close_entry:
l2304CA16:
	branch a0 == 0<32> l2304CA52
l2304CA18:
	branch a5 == 0<32> l2304CA52
l2304CA52:
	return
l2304CA1C:
	word32 a3_8 = CONVERT(Mem0[a5 + 17<i32>:byte], byte, word32)
	branch a3_8 != 1<32> l2304CA60
l2304CA60:
	return
l2304CA28:
	branch s0 == 0<32> l2304CA56
l2304CA56:
	return
l2304CA32:
	word32 a0_23
	word32 a2_25
	word32 a4_27
	word32 a5_182
	aos_mutex_free(s0 + 32<i32>, a3_8, 1<32>, mstatus, dwArg0148, dwArg0188, out a0_23, out a2_25, out a4_27, out a5_182)
	word32 a0_36
	word32 a2_38
	word32 a4_40
	word32 a4_56
	word32 s1_64
	word32 a2_185
	word32 a0_184
	word32 s1_183
	word32 ra_58 = vStreamBufferDelete(vStreamBufferDelete(ra, a0_23, a2_25, a4_27, mstatus, dwArg14, dwArg0148, dwArg0188, out s1_183, out a0_36, out a2_38, out a4_40), a0_36, a2_38, a4_40, mstatus, dwArg14, dwArg0148, dwArg0188, out s1_64, out a0_184, out a2_185, out a4_56)
l2304CA4E_thunk_hal_uart_finalize:
	hal_uart_finalize(ra_58, s0, s1_64, a4_56, s2, dwArg20, dwArg24, dwArg30, dwArg34, dwArg58, dwArg6C, dwArg7C)
	return
vfs_uart_close_exit:


void vfs_uart_read(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg74, word32 dwArg94, word32 dwArgB0, word32 dwArgB4, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0074:[0..31] Stack +0094:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_uart_read_entry:
l2304CA62:
	branch a0 == 0<32> l2304CAC6
l2304CA76:
	branch a5 == 0<32> l2304CAC6
l2304CA7C:
	word32 s3_23 = Mem17[a5 + 4<i32>:int32]
	branch a2 == 0<32> l2304CAC6
l2304CA82:
	branch s3_23 == 0<32> l2304CAC6
l2304CA86:
	word32 a3_226
	word32 a0_225
	word32 s1_224
	word32 s3_44
	word32 s2_43
	word32 s4_45
	word32 a4_38
	word32 a5_39
	aos_mutex_lock(s3_23 + 32<i32>, 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_224, out a0_225, out a3_226, out a4_38, out a5_39, out s2_43, out s3_44, out s4_45)
	word32 s0_50 = 0<32>
	word32 s1_53 = 0<32> - CONVERT(CONVERT(Mem17[s3_44 + 52<i32>:byte], byte, word32) <u 0xFFFFFFFE<32>, bool, word32)
l2304CAA6:
	word32 a0_69
	word32 s0_77
	word32 s5_82
	word32 s8_229
	word32 a1_227
	word32 a2_228
	ra = xStreamBufferReceive(ra, s0_50, Mem17[s3_44 + 16<i32>:int32], s4_45 + s0_50, s2_43 - s0_50, s1_53, a4_38, a5_39, mstatus, s2, dwArg08, dwArg94, dwArgB0, dwArgB4, dwArgD8, dwArg0108, dwArg0148, out s0_77, out s1_53, out a0_69, out a1_227, out a2_228, out a4_38, out a5_39, out s2_43, out s3_44, out s4_45, out s5_82, out s8_229, out mstatus)
	s0_50 = s0_77 + a0_69
	branch s0_50 == s2_43 l2304CAC0
l2304CABE:
	branch s1_53 != 0<32> l2304CAA6
l2304CAC0:
	aos_mutex_unlock(s5_82, a4_38, a5_39, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168)
l2304CAC6:
	return
vfs_uart_read_exit:


void vfs_uart_write(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 s2, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg94, word32 dwArgB0, word32 dwArgB4, word32 dwArgD8, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0094:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
vfs_uart_write_entry:
l2304CADA:
	branch a0 == 0<32> l2304CB04
l2304CAE6:
	word32 a0_13 = Mem9[a5:word32]
	branch a5 == 0<32> l2304CB04
l2304CAEC:
	branch s1 == 0<32> l2304CB04
l2304CAF0:
	word32 a4_27
	word32 a0_44
	word32 s1_111
	word32 a1_112
	word32 a3_113
	word32 s3_114
	word32 mstatus_115
	xStreamBufferSend(ra, a0_13, a1, a2, 0<32>, a4, s2, s4, mstatus, dwArg08, dwArg94, dwArgB0, dwArgB4, dwArgD8, dwArg0108, dwArg0148, out s1_111, out a0_44, out a1_112, out a3_113, out a4_27, out s3_114, out mstatus_115)
	branch a0_44 <= 0<32> l2304CB04
l2304CAFE:
	hal_uart_send_trigger(a4_27)
l2304CB04:
	return
vfs_uart_write_exit:


void vfs_uart_poll(word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg74, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0074:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_uart_poll_entry:
l2304CB10:
	word32 a5_61
	word32 a4_55
	word32 a0_33
	word32 a3_36
	word32 a4_37
	word32 s2_42
	word32 s3_43
	word32 s4_44
	word32 a5_158
	word32 s1_41
	word32 s0_40 = aos_mutex_lock(s0 + 32<i32>, 0xFFFFFFFF<32>, a2, a3, a4, Mem17[s0 + 4<i32>:word32], mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_41, out a0_33, out a3_36, out a4_37, out a5_158, out s2_42, out s3_43, out s4_44)
	branch a1 != 0<32> l2304CB66
l2304CB66:
	word32 a5_159
	vTaskEnterCritical(a4_37, mstatus, out a5_159)
	Mem50[s0_40 + 36<i32>:word32] = s2_42
	Mem51[s0_40 + 40<i32>:word32] = s3_43
	Mem52[s0_40 + 44<i32>:word32] = s4_44
	word32 a5_53
	word32 a3_54 = vTaskExitCritical(a3_36, mstatus, out a4_55, out a5_53)
	a5_61 = 1<32>
	word32 a2_58
	branch xStreamBufferIsEmpty(a0_33, a4_55, a5_53, mstatus, out a2_58) == 1<32> l2304CB4C
l2304CB86:
	word32 a5_65 = CONVERT(Mem52[a4_55 + 6<i32>:uint16], uint16, word32)
	Mem67[a4_55 + 6<i32>:word16] = SLICE(a5_65 | 1<i32>, word16, 0)
	call s2_42 (retsize: 0;)
		uses: a0:s3_43,a1:s4_44,a2:a2_58,a3:a3_54,a4:a4_55,a5:a5_65 | 1<i32>,mstatus:mstatus,Stack +0014:dwLoc0C,Stack +0094:dwArg74,Stack +0108:dwArgE8,Stack +0148:dwArg0128
		defs: a4:a4_72,a5:a5_73,s1:s1_76
l2304CB3C:
	word32 a5_160
	vTaskEnterCritical(a4_37, mstatus, out a5_160)
	Mem85[s0_40 + 36<i32>:word32] = 0<32>
	Mem86[s0_40 + 44<i32>:word32] = 0<32>
	vTaskExitCritical(a3_36, mstatus, out a4_55, out a5_61)
l2304CB4C:
	aos_mutex_unlock(s1_41, a4_55, a5_61, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168)
	return
vfs_uart_poll_exit:


void vfs_uart_sync(word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
vfs_uart_sync_entry:
l2304CB9C:
	branch a0 == 0<32> l2304CBD6
l2304CBD6:
	return
l2304CB9E:
	branch a5 == 0<32> l2304CBDA
l2304CBDA:
	return
l2304CBA4:
	word32 a5_16 = Mem15[s0 + 4<i32>:word32]
	branch s0 == 0<32> l2304CBCC
l2304CBB0:
	word32 a4_28
	word32 a5_43
	word32 s1_150
	word32 a0_151
	word32 a3_152
	word32 a5_153
	word32 s2_154
	word32 s3_155
	word32 s4_156
	aos_mutex_unlock(hal_uart_send_flush(aos_mutex_lock(s0 + 32<i32>, 0xFFFFFFFF<32>, a2, a3, a4, a5_16, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_150, out a0_151, out a3_152, out a4_28, out a5_153, out s2_154, out s3_155, out s4_156), out a5_43), a4_28, a5_43, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178)
l2304CBCC:
	return
vfs_uart_sync_exit:


void uart_ioctl_cmd_waimode(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 s6, word32 mstatus, word32 dwArg84, word32 dwArgA0, word32 dwArgA4, word32 dwArgC8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s6:[0..31] Stack +0084:[0..31] Stack +00A0:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
uart_ioctl_cmd_waimode_entry:
l2304CBDC:
	branch a2 == 0<32> l2304CC3C
l2304CBF6:
	word32 s6_28 = Mem23[a2 + 4<i32>:int32]
	word32 s4_34 = a0
	word32 s0_35 = 0<32>
	word32 s3_38 = Mem23[a2 + 8<i32>:int32] + 1000<i32> >>u 1000<i32>
l2304CC18:
	word32 a0_55
	word32 s0_63
	word32 s2_65
	word32 s5_68
	word32 s8_69
	word32 a2_177
	word32 s1_176
	ra = xStreamBufferReceive(ra, s0_35, Mem23[s4_34 + 16<i32>:int32], a1 + s0_35, s6_28 - s0_35, s3_38, a4, a5, mstatus, s6, dwLoc08, dwArg84, dwArgA0, dwArgA4, dwArgC8, dwArgF8, dwArg0138, out s0_63, out s1_176, out a0_55, out a1, out a2_177, out a4, out a5, out s2_65, out s3_38, out s4_34, out s5_68, out s8_69, out mstatus)
	s0_35 = s0_63 + a0_55
	branch s6_28 == s0_35 l2304CC3C
l2304CC30:
	branch s2_65 <=u 999<i32> l2304CC3C
l2304CC34:
	branch s5_68 != s8_69 l2304CC18
l2304CC38:
	branch s0_35 <= 0<32> l2304CC18
l2304CC3C:
	0<32> = dwArg0128
	return
uart_ioctl_cmd_waimode_exit:


void uart_ioctl_cmd_setconfig(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
uart_ioctl_cmd_setconfig_entry:
l2304CC56:
	branch a1 == 0<32> l2304CC7C
l2304CC7C:
	return
l2304CC58:
	word32 a2_8 = CONVERT(Mem7[a1 + 4<i32>:byte], byte, word32)
	branch a2_8 == 1<32> l2304CC6E
l2304CC66:
	branch a2_8 == 2<32> l2304CC6E
l2304CC6C:
l2304CC6E:
	hal_uart_setconfig(a0)
	return
uart_ioctl_cmd_setconfig_exit:


void vfs_uart_ioctl(word32 ra, word32 s0, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_uart_ioctl_entry:
l2304CC80:
	branch a0 == 0<32> l2304CCD2
l2304CC90:
	branch a5 == 0<32> l2304CCD2
l2304CC96:
	word32 a5_19 = Mem13[s1 + 4<i32>:word32]
	branch s1 == 0<32> l2304CCD2
l2304CC9A:
	word32 s2_39
	word32 s3_40
	word32 s1_134
	word32 a0_135
	word32 a3_136
	word32 a4_137
	word32 a5_138
	word32 s4_139
	aos_mutex_lock(s1 + 32<i32>, 0xFFFFFFFF<32>, a2, a3, a4, a5_19, mstatus, s0, ra, dwArgD8, dwArg0118, out s1_134, out a0_135, out a3_136, out a4_137, out a5_138, out s2_39, out s3_40, out s4_139)
	branch s2_39 >u 0xFFFFFFF8<32> l2304CCCE
l2304CCCE:
	aos_mutex_unlock(s3_40, 6<32>, s2_39 + -2<i32>, mstatus, s0, ra, dwArgD8, dwArg0118, dwArg0158)
l2304CCD2:
	0<32> = dwArg0128
	return
vfs_uart_ioctl_exit:
l2304CCB2:


word32 get_context(word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_set_eventfd
//      aos_poll_read_fd
//      aos_post_delayed_action
//      aos_loop_run
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 s8 t3 tp
// Preserved: s0 sp
get_context_entry:
l2304CD0E:
	word32 s1_21 = Mem5[a0:word32]
	word32 a4_15
	word32 a3_17
	word32 a5_16
	word32 a0_13 = aos_task_getspecific(a0, out a3_17, out a4_15, out a5_16)
	branch a0_13 != 0<32> l2304CD34
l2304CD24:
	s1_21 = Mem12[a0_13:word32]
	aos_task_setspecific(a0_13, a1, out a0_13, out a3_17, out a4_15, out a5_16)
l2304CD34:
	a0Out = a0_13
	a3Out = a3_17
	a4Out = a4_15
	a5Out = a5_16
	return s1_21
get_context_exit:


void aos_loop_set_eventfd(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_event_service_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5 s1 s8 t3 tp
// Preserved: s0 sp
aos_loop_set_eventfd_entry:
l2304CD3E:
	word32 a0_11
	word32 a3_27
	word32 a4_28
	word32 a5_29
	get_context(a0, a1, out a0_11, out a3_27, out a4_28, out a5_29)
	Mem20[a0 + 16<i32>:word32] = a0_11
	return
aos_loop_set_eventfd_exit:


word32 aos_loop_init(word32 ra, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg9C, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: mstatus ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aos_loop_init_entry:
l2304CD54:
	word32 ra_132
	word32 s2_136
	word32 a5_286
	word32 a4_19
	word32 a3_21
	word32 a0_17 = aos_task_getspecific(Mem5[0x4200DFE8<32>:int32], out a3_21, out a4_19, out a5_286)
	word32 a5_22 = Mem16[0x4200DFEC<32>:int32]
	branch a5_22 != 0<32> l2304CDB0
l2304CDB0:
	branch a0_17 == 0<32> l2304CD82
l2304CDB4:
	word32 s9_315
	word32 s10_316
	word32 s11_317
	word32 t4_318
	word32 s8_314
	word32 s5_311
	word32 s6_312
	word32 s7_313
	word32 a7_308
	word32 s3_309
	word32 s4_310
	word32 a3_305
	word32 a4_306
	word32 a5_307
	word32 a0_302
	word32 a1_303
	word32 a2_304
	word32 s1_301
	ra_132 = printf(ra, 0x23087958<32>, a3_21, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_301, out a0_302, out a1_303, out a2_304, out a3_305, out a4_306, out a5_307, out a7_308, out s2_136, out s3_309, out s4_310, out s5_311, out s6_312, out s7_313, out s8_314, out s9_315, out s10_316, out s11_317, out t4_318)
l2304CD7C:
	a3_21 = aos_task_key_create(0x4200DFE8<32>, out a4_19, out a5_22)
l2304CD82:
	word32 a0_66
	word32 s2_75
	word32 s3_76
	word32 s4_299
	word32 s8_300
	word32 a4_297
	word32 a6_298
	word32 a1_294
	word32 a2_295
	word32 a3_296
	word32 s1_293
	word32 a5_71
	pvPortMalloc(ra, 0x4200DFEC<32>, 0x1C<32>, a3_21, a4_19, a5_22, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_293, out a0_66, out a1_294, out a2_295, out a3_296, out a4_297, out a5_71, out a6_298, out s2_75, out s3_76, out s4_299, out s8_300)
	branch a0_66 == 0<32> l2304CD94
l2304CD8C:
	word32 a3_291
	word32 a4_292
	word32 a0_288
	word32 a1_289
	word32 a2_290
	word32 t1_287
	ra = memset(ra, a0_66, 0<32>, 0x1C<32>, out t1_287, out a0_288, out a1_289, out a2_290, out a3_291, out a4_292, out a5_71)
l2304CD94:
	word32 s1_95 = Mem16[a5_71:word32]
	branch a5_71 != 0<32> l2304CD9A
l2304CD98:
	Mem97[a0_66:word32] = s1_95
l2304CD9A:
	Mem99[a0_66:word32] = a0_66
	word32 a0_102 = Mem99[s3_76:int32]
	Mem104[0xF<32>:word32] = a0_66
	Mem106[a0_66 + 4<i32>:word32] = a0_66
	word32 a0_319
	word32 a3_320
	word32 a4_321
	word32 a5_322
	ra_132 = aos_event_service_init(ra, aos_task_setspecific(a0_102, a0_66, out a0_319, out a3_320, out a4_321, out a5_322), s2_75, mstatus, dwLoc20, dwLoc1C, dwArg10, dwArg14, dwArg38, dwArg58, dwArg5C, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0148, out s2_136, out mstatus)
l2304CDC0:
	s2Out = s2_136
	mstatusOut = mstatus
	return ra_132
aos_loop_init_exit:


word32 aos_poll_read_fd(word32 ra, word32 a0, word32 a1, word32 a2, word32 s3, word32 s6, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & s0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
//      aos_event_service_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a1 a3 a4 a5 ra s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aos_poll_read_fd_entry:
l2304CDD0:
	word32 s2_182 = a0
	word32 a0_30
	word32 a5_161
	word32 a3_146
	word32 a4_147
	word32 s1_35 = get_context(a0, a1, out a0_30, out a3_146, out a4_147, out a5_161)
	branch a0 < 0<32> l2304CEB2
l2304CEB2:
l2304CDF4:
	word32 s5_40 = CONVERT(Mem25[a0_30 + 22<i32>:byte], byte, word32)
	word32 a0_47
	word32 a3_50
	word32 a4_51
	word32 a5_52
	word32 s4_58
	word32 s1_326
	word32 a1_327
	word32 a2_328
	word32 a6_329
	word32 s2_330
	word32 s3_331
	word32 s8_332
	pvPortMalloc(ra, s1_35, s5_40 + 0xD<32>, a3_146, a4_147, a5_161, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_326, out a0_47, out a1_327, out a2_328, out a3_50, out a4_51, out a5_52, out a6_329, out s2_330, out s3_331, out s4_58, out s8_332)
	word32 a0_64
	word32 a3_67
	word32 s1_72
	word32 s8_76
	word32 a1_333
	word32 a2_334
	word32 a4_335
	word32 a5_336
	word32 a6_337
	word32 s3_338
	word32 s4_339
	word32 s0_71 = pvPortMalloc(ra, a0_47, s4_58 << 3<u32>, a3_50, a4_51, a5_52, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_72, out a0_64, out a1_333, out a2_334, out a3_67, out a4_335, out a5_336, out a6_337, out s2_182, out s3_338, out s4_339, out s8_76)
	branch s1_72 == 0<32> l2304CE1A
l2304CE18:
	branch a0_64 != 0<32> l2304CE4C
l2304CE4C:
	aos_fcntl(s2_182)
	aos_fcntl(s2_182)
	Mem98[Mem25[0x10<32>:word32] + 22<i32>:byte] = SLICE(CONVERT(Mem25[s0_71 + 22<i32>:byte], byte, word32) + 1<32>, byte, 0)
	word32 a5_101
	word32 a2_104
	word32 a1_370
	word32 a3_371
	word32 a4_372
	word32 a6_373
	word32 a7_374
	memcpy(s1_72, 4<32>, s5_40 + s8_76, out a1_370, out a2_104, out a3_371, out a4_372, out a5_101, out a6_373, out a7_374)
	word32 s1_118
	word32 a1_121
	word32 s4_124
	word32 s0_375
	word32 a0_376
	word32 a2_377
	word32 a3_378
	word32 a4_379
	word32 a5_380
	word32 a6_381
	word32 t3_382
	vPortFree(s1_72, a2_104, a5_101, mstatus, dwArg0128, dwArg0168, out s0_375, out s1_118, out a0_376, out a1_121, out a2_377, out a3_378, out a4_379, out a5_380, out a6_381, out s4_124, out t3_382)
	Mem127[s1_118 + 12<i32>:word32] = Mem98[a1_121 + 8<i32>:word32]
	word32 a5_131
	word32 a2_134
	word32 a1_383
	word32 a3_384
	word32 a4_385
	word32 a6_386
	word32 a7_387
	memcpy(s4_124, a1_121, s5_40 << 3<u32>, out a1_383, out a2_134, out a3_384, out a4_385, out a5_131, out a6_386, out a7_387)
	word32 s1_149
	word32 s0_154
	word32 s4_155
	word32 a0_388
	word32 a2_389
	word32 a5_390
	word32 a6_391
	word32 t3_392
	vPortFree(s4_124, a2_134, a5_131, mstatus, dwArg0128, dwArg0168, out s0_154, out s1_149, out a0_388, out a1, out a2_389, out a3_146, out a4_147, out a5_390, out a6_391, out s4_155, out t3_392)
	Mem157[s0_154 + 8<i32>:word32] = s4_155
	Mem158[s1_149:word32] = s2_182
	Mem159[s1_149 + 4<i32>:word32] = a2
	Mem160[s1_149 + 8<i32>:word32] = a1
	a5_161 = CONVERT(Mem160[s0_154 + 20<i32>:uint16], uint16, word32)
	branch a5_161 >= s2_182 l2304CE34
l2304CEAC:
	Mem163[s0_154 + 20<i32>:word16] = SLICE(s2_182, word16, 0)
l2304CE1A:
	word32 a5_171
	word32 a2_174
	word32 s1_179
	word32 a0_340
	word32 a1_341
	word32 a3_342
	word32 a4_343
	word32 a7_344
	word32 s3_345
	word32 s4_346
	word32 s5_347
	word32 s6_348
	word32 s7_349
	word32 s8_350
	word32 s9_351
	word32 s10_352
	word32 s11_353
	word32 t4_354
	ra = printf(ra, 0x23087984<32>, a3_67, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_179, out a0_340, out a1_341, out a2_174, out a3_342, out a4_343, out a5_171, out a7_344, out s2_182, out s3_345, out s4_346, out s5_347, out s6_348, out s7_349, out s8_350, out s9_351, out s10_352, out s11_353, out t4_354)
	word32 a2_194
	word32 a5_197
	word32 s4_204
	word32 s0_355
	word32 s1_356
	word32 a0_357
	word32 a1_358
	word32 a3_359
	word32 a4_360
	word32 a6_361
	word32 t3_362
	vPortFree(s1_179, a2_174, a5_171, mstatus, dwArg0128, dwArg0168, out s0_355, out s1_356, out a0_357, out a1_358, out a2_194, out a3_359, out a4_360, out a5_197, out a6_361, out s4_204, out t3_362)
	word32 s0_363
	word32 s1_364
	word32 a0_365
	word32 a2_366
	word32 a6_367
	word32 s4_368
	word32 t3_369
	vPortFree(s4_204, a2_194, a5_197, mstatus, dwArg0128, dwArg0168, out s0_363, out s1_364, out a0_365, out a1, out a2_366, out a3_146, out a4_147, out a5_161, out a6_367, out s4_368, out t3_369)
l2304CE34:
	0<32> = dwArg0128
	s0Out = s4
	a1Out = a1
	a3Out = a3_146
	a4Out = a4_147
	a5Out = a5_161
	s2Out = s2_182
	return ra
aos_poll_read_fd_exit:


void aos_post_delayed_action(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_cb_wifi_event_mgmr
//      trigger_auto_denoise
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
aos_post_delayed_action_entry:
l2304CEB6:
	branch a1 == 0<32> l2304CF36
l2304CF36:
	return
l2304CEB8:
	word32 a3_25
	word32 a4_26
	word32 a5_27
	word32 a0_35
	word32 a3_38
	word32 s1_43
	word32 s2_44
	word32 s3_45
	word32 s4_46
	word32 a5_198
	word32 a6_199
	word32 s8_200
	word32 a0_194
	word32 a1_195
	word32 a2_196
	word32 a4_197
	pvPortMalloc(ra, get_context(a0, a1, out a0_194, out a3_25, out a4_26, out a5_27), 32<i32>, a3_25, a4_26, a5_27, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_43, out a0_35, out a1_195, out a2_196, out a3_38, out a4_197, out a5_198, out a6_199, out s2_44, out s3_45, out s4_46, out s8_200)
	branch a0_35 == 0<32> l2304CF22
l2304CEE0:
	word32 a0_60 = a0_52 + s1_43
	word32 a0_52
	word32 a1_53
	word32 a4_202
	word32 a5_203
	word32 a2_201
	word32 s0_57 = aos_now_ms(a3_38, out a0_52, out a1_53, out a2_201, out a4_202, out a5_203)
	Mem64[a0_60 + 8<i32>:word32] = s0_57
	word32 a4_63 = CONVERT(a0_60 <u s1_43, bool, word32) + (a1_53 + (s1_43 >> 0x1F<u32>))
	Mem65[a4_63 + 12<i32>:word32] = s0_57
	Mem66[s0_57 + 16<i32>:word32] = s3_45
	Mem67[s0_57 + 20<i32>:word32] = s2_44
	Mem68[s1_43 + 24<i32>:word32] = s0_57
	word32 a5_69 = Mem68[s4_46 + 4<i32>:int32]
l2304CF02:
	branch a5_69 == s4_46 l2304CF16
l2304CF06:
	word32 a5_74 = Mem68[a3_38 + 12<i32>:word32]
	branch a4_63 < a3_38 l2304CF16
l2304CF0C:
	branch a3_38 != a4_63 l2304CF32
l2304CF10:
	a5_74 = Mem68[a3_38 + 8<i32>:word32]
	branch a0_60 >=u a3_38 l2304CF32
l2304CF32:
	a5_69 = Mem68[a5_74 + 4<i32>:word32]
l2304CF16:
	word32 a5_83 = Mem68[a4_63:word32]
	Mem87[a5_83 + 4<i32>:word32] = s0_57
	Mem89[a4_63:word32] = s0_57
	Mem90[s0_57 + 4<i32>:word32] = a4_63
	Mem91[s0_57:word32] = a5_83
l2304CF22:
	return
aos_post_delayed_action_exit:


word32 aos_loop_run(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgBC, word32 dwArgC8, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 mstatus
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
aos_loop_run_entry:
l2304CF3A:
	word32 a5_693
	word32 a3_107
	word32 a4_108
	word32 a0_127
	word32 s1_176 = get_context(a0, a1, out a0_127, out a3_107, out a4_108, out a5_693)
	word32 s0_130 = a0_127
	word32 s3_116 = 0xC<32>
	word32 s4_117 = 1<32>
l2304CF58:
	branch CONVERT(Mem36[s0_130 + 24<i32>:byte], byte, word32) != 0<32> l2304CF6C
l2304CF5E:
	s0_130 = Mem36[s1_176 + 4<i32>:word32]
	word32 s2_40 = CONVERT(Mem36[s0_130 + 22<i32>:byte], byte, word32)
	branch s0_130 != s1_176 l2304CF84
l2304CF68:
	branch s2_40 != 0<32> l2304CF84
l2304CF84:
	branch s0_130 == s1_176 l2304CF9E
l2304CF8A:
	word32 a1_47
	word32 a2_48
	word32 a5_50
	aos_now_ms(a3_107, out a0_127, out a1_47, out a2_48, out a4_108, out a5_50)
	branch a1_47 < a5_50 l2304CF9C
l2304CF94:
	branch a5_50 != a1_47 l2304CFD8
l2304CF98:
	branch a0_127 >=u a2_48 l2304CFD8
l2304CFD8:
l2304CF9C:
l2304CF9E:
	word32 a5_60 = 0<32>
l2304CFA0:
	branch a5_60 < s2_40 l2304CFDC
l2304CFDC:
	word32 a1_70 = a5_60 << 3<u32>
	word32 a4_67 = a5_60 + s3_116
	a0_127 = a0_127 + a1_70
	a3_107 = Mem62[a4_67:word32]
	Mem74[a4_67:word32] = a0_127
	a4_108 = a4_67 + a1_70
	Mem78[a4_108 + 4<i32>:word16] = SLICE(s4_117, word16, 0)
	a5_60 = a5_60 + 1<32>
l2304CFA6:
	word32 a0_104
	word32 s1_114
	word32 s2_115
	word32 a5_109
	word32 a1_105
	word32 s5_118
	ra = aos_poll(ra, a0_127, a3_107, a4_108, a5_60, mstatus, dwArg88, dwArgC8, dwArgF8, dwArg0138, dwArg0178, out s1_114, out a0_104, out a1_105, out a3_107, out a4_108, out a5_109, out s2_115, out s3_116, out s4_117, out s5_118, out mstatus)
	word32 s6_124 = a0_104
	a0_127 = a0_104
	branch a0_104 >= 0<32> l2304CFFA
l2304CFB0:
	__errno(out a5_109)
	a0_127 = Mem62[a5_109:word32]
	branch a5_109 == s5_118 l2304CFFA
l2304CFFA:
	s0_130 = Mem62[s1_114 + 4<i32>:word32]
	branch s0_130 == s1_114 l2304D026
l2304D000:
	word32 a2_712
	s0_130 = aos_now_ms(a3_107, out a0_127, out a1_105, out a2_712, out a4_108, out a5_109)
	branch a1_105 < a5_109 l2304D026
l2304D008:
	branch a5_109 != a1_105 l2304D012
l2304D00C:
	branch a0_127 <u a5_109 l2304D026
l2304D012:
	Mem146[a5_109 + 4<i32>:word32] = a4_108
	Mem147[a4_108:word32] = a5_109
	word32 a2_154
	word32 a5_156
	call a5_109 (retsize: 0;)
		uses: a3:a3_107
		defs: a2:a2_154,a5:a5_156
	word32 a6_715
	word32 t3_716
	word32 s1_713
	word32 a2_714
	vPortFree(Mem147[a5_109 + 20<i32>:word32], a2_154, a5_156, mstatus, dwArg0138, dwArg0178, out s0_130, out s1_713, out a0_127, out a1_105, out a2_714, out a3_107, out a4_108, out a5_109, out a6_715, out s4_117, out t3_716)
l2304D026:
	s1_176 = 0<32>
	branch a0_104 <= 0<32> l2304CF58
l2304D02C:
	branch s1_176 == s2_115 l2304CF58
l2304D030:
	word32 mstatus_221
	a4_108 = s1_176 << 3<u32>
	word32 a5_187 = CONVERT(Mem271[a5_109 + a4_108 + 6<i32>:uint16], uint16, word32)
	s0_130 = Mem271[a5_109 + 8<i32>:word32]
	a5_109 = a5_187 & 1<32>
	branch (a5_187 & 1<32>) == 0<32> l2304D050
l2304D040:
	word32 s7_222
	word32 t0_351
	word32 t4_352
	word32 s9_350
	word32 s11_349
	word32 s10_348
	word32 a7_347
	call a4_108 (retsize: 0;)
		uses: a0:a0_195,a1:a1_193,a5:Mem271[a0_195:word32],a7:a7_347,mstatus:mstatus_221,ra:ra_199,s0:Mem271[a4_185 + 12<i32>:word32],s1:s1_180,s10:s10_348,s11:s11_349,s2:s2_181,s3:s3_189,s4:s4_197,s5:s5_198,s6:s6_200,s7:s7_222,s9:s9_350,t0:t0_351,t4:t4_352
		defs: a0:a0_211,a1:a1_218,a3:a3_220,a4:a4_219,a5:a5_212,a7:a7_347,mstatus:mstatus_221,ra:ra_207,s0:s0_203,s1:s1_208,s10:s10_348,s11:s11_349,s2:s2_209,s3:s3_204,s4:s4_205,s5:s5_206,s6:s6_210,s7:s7_222,s9:s9_350,t0:t0_351,t4:t4_352
	mstatus = mstatus_221
l2304D050:
	s1_176 = s1_176 + 1<32>
l2304CFBA:
	0<32> = dwArgA8
l2304CFD4_thunk_printf:
	word32 a3_240
	word32 a1_696
	word32 s7_706
	word32 a7_700
	word32 s10_709
	word32 t4_711
	word32 s11_710
	word32 s8_707
	word32 s9_708
	word32 s4_703
	word32 s6_705
	word32 s5_704
	word32 s2_701
	word32 s3_702
	word32 a5_699
	word32 a2_697
	word32 a4_698
	word32 a0_695
	word32 s1_694
	printf(ra, 0x23087974<32>, a3_107, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_694, out a0_695, out a1_696, out a2_697, out a3_240, out a4_698, out a5_699, out a7_700, out s2_701, out s3_702, out s4_703, out s5_704, out s6_705, out s7_706, out s8_707, out s9_708, out s10_709, out s11_710, out t4_711)
	mstatusOut = mstatus
	return a3_240
l2304CF6C:
	Mem258[s0_130 + 24<i32>:byte] = 0<8>
	0<32> = dwArgA8
	mstatusOut = mstatus
	return a3_107
aos_loop_run_exit:


void vfs_poll_notify(word32 ra, word32 a1, word32 a2, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg5C, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_poll_notify_entry:
l2304D054:
l2304D056_thunk_aos_sem_signal:
	aos_sem_signal(ra, a1, a2, a4, s2, mstatus, dwArg04, dwArg10, dwArg14, dwArg38, dwArg5C, dwArg84, dwArgF8, dwArg0138, dwArg0178)
	return
vfs_poll_notify_exit:


word32 aos_poll(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArgA8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_run
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
aos_poll_entry:
l2304D058:
	word32 sp_282 = fp + -64<i32>
	word32 s0_284 = a0
	word32 s3_100
	word32 s2_159
	word32 a2_107 = aos_sem_new(ra, a0, 0<32>, a3, a4, a5, mstatus, dwArgA8, dwArgE8, out s2_159, out s3_100)
	word32 a5_48 = 0<32>
l2304D07C:
	word32 a3_110 = fp + -56<i32> + a5_48
	Mem54[a3_110:byte] = 0<8>
	a5_48 = a5_48 + 1<32>
	branch a5_48 != 8<32> l2304D07C
l2304D08A:
	word32 s1_102 = a0 + 6<i32>
	word32 a4_109 = a0 + 6<i32>
	word32 a5_108 = 0<32>
l2304D092:
	branch a5_108 < s2_159 l2304D0B6
l2304D0B6:
	Mem64[a4_109:word16] = 0<16>
	a5_108 = a5_108 + 1<32>
	a4_109 = a4_109 + 8<32>
l2304D096:
	word32 s6_105 = a0
	word32 s7_106 = 0<32>
	word32 s4_103 = 1<32>
	word32 s5_104 = 0x2304D000<32>
l2304D0A0:
	word32 s4_188
	word32 a0_150
	branch s7_106 < s2_159 l2304D0C0
l2304D0C0:
	word32 a0_76 = Mem75[s6_105:int32]
	branch s4_103 < a0_76 l2304D0E6
l2304D0E6:
	word32 a5_79
	a0_150 = get_file(a0_76, out a5_79)
	branch a0_150 == 0<32> l2304D15C
l2304D15C:
	s4_188 = 0xFFFFFFFF<32>
l2304D0EC:
	word32 a5_89 = Mem75[Mem75[a5_79:word32] + 20<i32>:word32]
	call a5_89 (retsize: 0;)
		uses: a0:Mem75[a5_79:word32],a1:1<32>,a2:s5_86 + 84<i32>,a3:s6_74,a4:sp_82 + 4<i32>,a5:a5_89,mstatus:mstatus_94,ra:ra_92,s0:s0_90,s1:s1_93,s2:s2_73,s3:s3_91,s4:s4_77,s5:s5_86,s6:s6_74,s7:s7_72,Stack +00A8:dwArgA8,Stack +00E8:dwArgE8
		defs: a2:a2_107,a3:a3_110,a4:a4_109,a5:a5_108,mstatus:mstatus_115,ra:ra_101,s0:s0_96,s1:s1_102,s2:s2_97,s3:s3_100,s4:s4_103,s5:s5_104,s6:s6_105,s7:s7_106,sp:sp_95
l2304D0C8:
	a5_108 = (a0_76 >>u 5<u32> << 2<i32>) + (sp_282 + 16<i32>)
	a4_109 = Mem75[a5_108 + -8<i32>:int32]
	Mem123[a5_108 + 4088<i32>:word32] = s4_103 << a0_76 | a4_109
l2304D0E0:
	s7_106 = s7_106 + 1<32>
	s6_105 = s6_105 + 8<32>
l2304D0A4:
	word32 a1_128 = s3_100
	branch s3_100 >= 0<32> l2304D0AC
l2304D0AA:
	a1_128 = 0xFFFFFFFF<32>
l2304D0AC:
	word32 s1_158 = aos_sem_wait(sp_282 + 4<i32>, a1_128, a2_107, a3_110, a4_109, a5_108, mstatus, Mem75[sp_282 + 20<i32>:word32], Mem75[sp_282 + 148<i32>:word32], Mem75[sp_282 + 264<i32>:word32], Mem75[sp_282 + 328<i32>:word32], out a0_150, out a4_109, out s2_159)
	a3_110 = 0<32>
l2304D12A:
	branch a3_110 < s2_159 l2304D100
l2304D100:
	word32 a5_171 = Mem170[s1_158 + -6<i32>:int32]
	a4_109 = Mem170[(a5_171 >>u 5<u32> << 2<i32>) + (sp_282 + 16<i32>) + -8<i32>:int32]
	branch (1<32> << a5_171 & a4_109) == 0<32> l2304D126
l2304D11A:
	Mem183[s1_158:word16] = SLICE(CONVERT(Mem170[s1_158:uint16], uint16, word32) | 1<i32>, word16, 0)
l2304D126:
	a3_110 = a3_110 + 1<32>
	s1_158 = s1_158 + 8<32>
l2304D12E:
	s4_188 = 0<32>
l2304D130:
	word32 s1_189 = 0<32>
	word32 s3_190 = 0<32>
	word32 s5_191 = 1<32>
l2304D136:
	branch s3_190 < s2_159 l2304D160
l2304D160:
	word32 s0_196 = Mem307[a0_150:word32]
	branch s5_191 >= a0_150 l2304D184
l2304D166:
	word32 a5_199
	a0_150 = get_file(a0_150, out a5_199)
	branch a0_150 == 0<32> l2304D184
l2304D16C:
	word32 a5_206 = Mem307[Mem307[a5_199:word32] + 20<i32>:word32]
	word32 s0_215
	call a5_206 (retsize: 0;)
		uses: a0:Mem307[a5_199:word32],a1:0<32>,a2:0<32>,a3:0<32>,a4:0<32>,a5:a5_206,mstatus:mstatus_212,ra:ra_207,s0:s0_196,s1:s1_208,s2:s2_193,s3:s3_192,s4:s4_209,s5:s5_197,s6:s6_210,s7:s7_211,Stack +00A8:dwArgA8,Stack +00E8:dwArgE8,Stack +0128:dwArgE8
		defs: a0:a0_217,a3:a3_229,a4:a4_228,mstatus:mstatus_234,ra:ra_220,s0:s0_215,s1:s1_221,s2:s2_216,s3:s3_219,s4:s4_222,s5:s5_223,s6:s6_224,s7:s7_225
	branch CONVERT(Mem307[s0_215 + 6<i32>:int16], int16, int32) == 0<32> l2304D184
l2304D182:
	s1_189 = s1_189 + 1<32>
l2304D184:
	s3_190 = s3_190 + 1<32>
l2304D13A:
	word32 a1_251
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 s4_259
	word32 s1_258 = aos_sem_free(fp - 60<i32>, a3_110, a4_109, mstatus, dwArg0118, dwArg0158, out a1_251, out a3_253, out a4_254, out a5_255, out s4_259)
	branch s4_259 == 0<32> l2304D144
l2304D142:
	s1_258 = 0<32>
l2304D144:
	0<32> = dwArg0198
	s1Out = s1_258
	a0Out = s1_258
	a1Out = a1_251
	a3Out = a3_253
	a4Out = a4_254
	a5Out = a5_255
	s2Out = s2_159
	s3Out = s3_190
	s4Out = dwArgF4
	s5Out = s5_191
	mstatusOut = mstatus
	return ra
aos_poll_exit:


void aos_fcntl(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_poll_read_fd
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
aos_fcntl_entry:
l2304D18A:
	branch a0 < 0<32> l2304D19A
l2304D190:
	branch a0 > 1<32> l2304D19A
l2304D198:
l2304D19A:
	return
aos_fcntl_exit:


void dfl_entry(word32 s0, word32 a2, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
dfl_entry_entry:
l2304D19E:
	word32 a2_15
	word32 a5_18
	word32 s1_19
	word32 s0_24
	word32 a0_66
	word32 a1_67
	word32 a3_68
	word32 a4_69
	word32 a6_70
	word32 s4_71
	word32 t3_72
	vPortFree(Mem9[s0 + 4<i32>:word32], a2, a5, mstatus, dwArg0148, dwArg0188, out s0_24, out s1_19, out a0_66, out a1_67, out a2_15, out a3_68, out a4_69, out a5_18, out a6_70, out s4_71, out t3_72)
	word32 a3_29
	word32 a4_30
	word32 a5_31
	call s0_24 (retsize: 0;)
		uses: a0:s1_19,a2:a2_15,a5:a5_18,mstatus:mstatus,Stack +0158:dwArg0148,Stack +0198:dwArg0188
		defs: a3:a3_29,a4:a4_30,a5:a5_31
l2304D1BC_thunk_vTaskDelete:
	vTaskDelete(0<32>, dwArg10, a3_29, a4_30, a5_31, mstatus)
	return
dfl_entry_exit:


void aos_task_new(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_cmd
//      tcpclient_cmd
//      ipus_test_cmd
//      ipu_test_cmd
//      ipc_test_cmd
//      ips_test_cmd
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
aos_task_new_entry:
l2304D1C0:
	word32 a3_35
	word32 a4_36
	word32 a5_37
	word32 s1_40
	word32 s8_259
	word32 s4_258
	word32 s3_257
	word32 s2_256
	word32 a6_255
	word32 a2_254
	word32 a1_253
	word32 a0_252
	pvPortMalloc(ra, s1, 156<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_40, out a0_252, out a1_253, out a2_254, out a3_35, out a4_36, out a5_37, out a6_255, out s2_256, out s3_257, out s4_258, out s8_259)
	word32 a0_49
	word32 a3_52
	word32 a4_53
	word32 a5_54
	word32 s3_59
	word32 s1_260
	word32 a1_261
	word32 a2_262
	word32 a6_263
	word32 s2_264
	word32 s4_265
	word32 s8_266
	pvPortMalloc(ra, s1_40, 0xC<32>, a3_35, a4_36, a5_37, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_260, out a0_49, out a1_261, out a2_262, out a3_52, out a4_53, out a5_54, out a6_263, out s2_264, out s3_59, out s4_265, out s8_266)
	word32 a0_66
	word32 s1_74
	word32 s3_76
	word32 s4_77
	word32 a1_267
	word32 a2_268
	word32 a3_269
	word32 a4_270
	word32 a5_271
	word32 a6_272
	word32 s2_273
	word32 s8_274
	word32 s0_73 = pvPortMalloc(ra, a0_49, s3_59, a3_52, a4_53, a5_54, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_74, out a0_66, out a1_267, out a2_268, out a3_269, out a4_270, out a5_271, out a6_272, out s2_273, out s3_76, out s4_77, out s8_274)
	word32 t1_275
	word32 a0_276
	word32 a1_277
	word32 a2_278
	word32 a3_279
	word32 a4_280
	word32 a5_281
	word32 t1_282
	word32 a0_283
	word32 a1_284
	word32 a2_285
	word32 a3_286
	word32 a4_287
	word32 a5_288
	word32 ra_102 = memset(memset(ra, a0_66, 0<32>, s3_76, out t1_275, out a0_276, out a1_277, out a2_278, out a3_279, out a4_280, out a5_281), s0_73, 0<32>, 156<i32>, out t1_282, out a0_283, out a1_284, out a2_285, out a3_286, out a4_287, out a5_288)
	Mem106[0x50<32>:word32] = s0_73
	Mem109[s0_73 + 116<i32>:word32] = a0_66
	word32 a3_289
	word32 a4_290
	word32 a5_291
	strncpy(s0_73 + 120<i32>, s4_77, 0x1F<32>, out a3_289, out a4_290, out a5_291)
	Mem122[s0_73 + 152<i32>:word32] = 0x20171020<32>
	Mem124[s0_73:word32] = s1_74
	Mem125[s1_74 + 4<i32>:word32] = a1
	Mem126[s1_74 + 8<i32>:word32] = a2
	word32 a0_134
	word32 a2_135
	word32 a5_136
	word32 s0_138
	word32 s2_148
	word32 tp_292
	word32 t0_293
	word32 a3_294
	word32 a4_295
	xTaskCreateStatic(ra_102, 0x2304D19E<32>, s4_77, s3_76 >>u 2<u32>, s1_74, 0xA<32>, a0_66, s0_73, mstatus, s4, dwArg04, dwArgC8, dwArg0194, out tp_292, out t0_293, out s0_138, out a0_134, out a2_135, out a3_294, out a4_295, out a5_136, out s2_148)
	branch a0_134 != 0<32> l2304D276
l2304D276:
l2304D24E:
	word32 a2_158
	word32 a5_161
	word32 s0_296
	word32 s1_297
	word32 a0_298
	word32 a1_299
	word32 a3_300
	word32 a4_301
	word32 a6_302
	word32 s4_303
	word32 t3_304
	vPortFree(s0_138, a2_135, a5_136, mstatus, dwArg0138, dwArg0178, out s0_296, out s1_297, out a0_298, out a1_299, out a2_158, out a3_300, out a4_301, out a5_161, out a6_302, out s4_303, out t3_304)
	word32 a2_171
	word32 a5_174
	word32 s1_175
	word32 s0_305
	word32 a0_306
	word32 a1_307
	word32 a3_308
	word32 a4_309
	word32 a6_310
	word32 s4_311
	word32 t3_312
	vPortFree(s2_148, a2_158, a5_161, mstatus, dwArg0138, dwArg0178, out s0_305, out s1_175, out a0_306, out a1_307, out a2_171, out a3_308, out a4_309, out a5_174, out a6_310, out s4_311, out t3_312)
	word32 s0_313
	word32 s1_314
	word32 a0_315
	word32 a1_316
	word32 a2_317
	word32 a3_318
	word32 a4_319
	word32 a5_320
	word32 a6_321
	word32 s4_322
	word32 t3_323
	vPortFree(s1_175, a2_171, a5_174, mstatus, dwArg0138, dwArg0178, out s0_313, out s1_314, out a0_315, out a1_316, out a2_317, out a3_318, out a4_319, out a5_320, out a6_321, out s4_322, out t3_323)
l2304D262:
	0<32> = dwArgA8
	return
aos_task_new_exit:


void aos_task_exit(word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tftp_ota_thread
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
aos_task_exit_entry:
l2304D27A:
l2304D27C_thunk_vTaskDelete:
	vTaskDelete(0<32>, a2, a3, a4, a5, mstatus)
	return
aos_task_exit_exit:


word32 aos_task_key_create(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_init
// MayUse:  a0:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
aos_task_key_create_entry:
l2304D280:
	word32 a4_15
	word32 a5_14 = 0x20171020<32>
	word32 a5_59
	branch Mem7[xTaskGetCurrentTaskHandle(out a5_59) + 152<i32>:int32] != 0x20171020<32> l2304D2E0
l2304D2E0:
	a4_15 = 0xFFFFFFFF<32>
l2304D29C:
	word32 a4_18
	word32 a0_16 = Mem7[0x20171080<32>:word32]
	branch true l2304D2CE
l2304D2CE:
	a4_18 = 0<32>
	a3 = 1<32>
l2304D2A4:
	branch true l2304D2D4
l2304D2D4:
	a4_18 = 1<32>
	a3 = 2<32>
l2304D2AA:
	branch true l2304D2DA
l2304D2DA:
	a4_18 = 2<32>
	a3 = 4<32>
l2304D2B0:
	a3 = 0<32>
	a4_15 = 0xFFFFFFFF<32>
	branch false l2304D2C4
l2304D2B8:
	a4_18 = 3<32>
	a3 = 8<32>
l2304D2BC:
	a5_14 = a3 | 0x20171020<32>
	Mem34[a5_14 + 96<i32>:word32] = a0_16
	Mem37[a4_18:word32] = a0
	a4_15 = 0<32>
l2304D2C4:
	a4Out = a4_15
	a5Out = a5_14
	return a3
aos_task_key_create_exit:


word32 aos_task_setspecific(word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_context
//      aos_loop_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5 s0
// Trashed: a0 a2 a3 a4 a5 s0 s8 t3
// Preserved: sp
aos_task_setspecific_entry:
l2304D2E4:
	word32 a0_15
	word32 s0_24 = a0
	word32 a5_13
	word32 a0_12 = xTaskGetCurrentTaskHandle(out a5_13)
	word32 a4_14 = 3<32>
	branch a0 >u 3<32> l2304D320
l2304D320:
	a0_15 = 0xFFFFFFFF<32>
l2304D2F8:
	a3 = Mem11[a0_12 + 152<i32>:int32]
	a4_14 = 0x20171020<32>
	a5_13 = a0_12
	a0_15 = 0xFFFFFFFF<32>
	branch a3 != 0x20171020<32> l2304D318
l2304D30C:
	s0_24 = (a0 + 0x18<32> << 2<i32>) + a0_12
	Mem25[a1 + 4<i32>:word32] = s0_24
	a0_15 = 0<32>
l2304D318:
	a0Out = a0_15
	a3Out = a3
	a4Out = a4_14
	a5Out = a5_13
	return s0_24
aos_task_setspecific_exit:


word32 aos_task_getspecific(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_context
//      aos_loop_init
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
aos_task_getspecific_entry:
l2304D324:
	word32 a5_11
	word32 a0_10 = xTaskGetCurrentTaskHandle(out a5_11)
	word32 a4_12 = 3<32>
	branch a0 >u 3<32> l2304D35A
l2304D35A:
l2304D336:
	a3 = Mem7[a0_10 + 152<i32>:int32]
	a4_12 = 0x20171020<32>
	a5_11 = a0_10
	branch a3 != 0x20171020<32> l2304D352
l2304D34A:
l2304D352:
	a3Out = a3
	a4Out = a4_12
	a5Out = a5_11
	return 0<32>
aos_task_getspecific_exit:


word32 aos_mutex_new(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
//      event_open
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
aos_mutex_new_entry:
l2304D35E:
	word32 a3_17
	word32 a4_18
	word32 a0_28
	word32 a1_55
	word32 a5_56
	word32 s2_57
	word32 s3_58
	word32 s4_59
	word32 s5_60
	word32 s6_61
	word32 s1_21 = xQueueCreateMutex(ra, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out a0_28, out a1_55, out a3_17, out a4_18, out a5_56, out s2_57, out s3_58, out s4_59, out s5_60, out s6_61)
	Mem37[a0_28:word32] = a0
	a0Out = 0<32> - CONVERT(a0_28 <u 1<i32>, bool, word32)
	a3Out = a3_17
	a4Out = a4_18
	return s1_21
aos_mutex_new_exit:


word32 aos_mutex_free(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_close
//      event_close
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a4 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
aos_mutex_free_entry:
l2304D37E:
	word32 a0_5 = Mem0[a0:word32]
l2304D380_thunk_vQueueDelete:
	word32 a0_9
	word32 a2_11
	word32 a4_13
	word32 a5_14
	word32 s1_27
	word32 a1_28
	word32 a3_29
	word32 s4_30
	word32 s0_16 = vQueueDelete(a0_5, a3, a4, mstatus, dwArg0158, dwArg0198, out s1_27, out a0_9, out a1_28, out a2_11, out a3_29, out a4_13, out a5_14, out s4_30)
	a0Out = a0_9
	a2Out = a2_11
	a4Out = a4_13
	a5Out = a5_14
	return s0_16
aos_mutex_free_exit:


word32 aos_mutex_lock(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_read
//      vfs_uart_poll
//      vfs_uart_sync
//      vfs_uart_ioctl
//      event_poll
//      event_write
//      event_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
aos_mutex_lock_entry:
l2304D384:
	branch a0 == 0<32> l2304D398
l2304D398:
	s1Out = s1
	a0Out = <invalid>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s0
l2304D386:
	word32 a3_18
	word32 a4_19
	word32 a5_20
	word32 s1_23
	word32 s2_24
	word32 s3_25
	word32 s4_26
	word32 a0_73
	word32 a1_74
	word32 a2_75
	word32 s0_22 = xQueueSemaphoreTake(Mem7[a0:word32], a1, a2, a3, a4, a5, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_23, out a0_73, out a1_74, out a2_75, out a3_18, out a4_19, out a5_20, out s2_24, out s3_25, out s4_26)
	s1Out = s1_23
	a0Out = <invalid>
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_20
	s2Out = s2_24
	s3Out = s3_25
	s4Out = s4_26
	return s0_22
aos_mutex_lock_exit:


void aos_mutex_unlock(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_read
//      vfs_uart_poll
//      vfs_uart_sync
//      vfs_uart_ioctl
//      event_poll
//      event_write
//      event_read
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aos_mutex_unlock_entry:
l2304D39C:
	branch a0 == 0<32> l2304D3B6
l2304D3B6:
	return
l2304D39E:
	word32 s0_93
	word32 s1_94
	word32 a0_95
	word32 a1_96
	word32 a2_97
	word32 a3_98
	word32 a4_99
	word32 a5_100
	word32 a7_101
	word32 s2_102
	word32 s3_103
	word32 s4_104
	word32 s5_105
	word32 s6_106
	word32 s8_107
	xQueueGenericSend(Mem7[a0:word32], 0<32>, 0<32>, a4, a5, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s0_93, out s1_94, out a0_95, out a1_96, out a2_97, out a3_98, out a4_99, out a5_100, out a7_101, out s2_102, out s3_103, out s4_104, out s5_105, out s6_106, out s8_107)
	return
aos_mutex_unlock_exit:


word32 aos_sem_new(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArgE8, word32 dwArg0128, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_poll
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a2 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
aos_sem_new_entry:
l2304D3BA:
	word32 a0_16
	word32 s2_25
	word32 s3_26
	Mem31[a0_16:word32] = xQueueCreateCountingSemaphore(ra, 128<i32>, a1, a3, a4, a5, mstatus, dwLoc10, s0, dwArgE8, dwArg0128, out a0_16, out s2_25, out s3_26)
	s2Out = s2_25
	s3Out = s3_26
	return dwArg10
aos_sem_new_exit:


word32 aos_sem_free(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_poll
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a1 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
aos_sem_free_entry:
l2304D3D6:
	branch a0 == 0<32> l2304D3DE
l2304D3DE:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	return s1
l2304D3D8:
	word32 a0_5 = Mem0[a0:word32]
l2304D3DA_thunk_vQueueDelete:
	word32 a1_10
	word32 a3_12
	word32 a4_13
	word32 a5_14
	word32 s1_17
	word32 s4_18
	word32 a0_50
	word32 a2_51
	vQueueDelete(a0_5, a3, a4, mstatus, dwArg0158, dwArg0198, out s1_17, out a0_50, out a1_10, out a2_51, out a3_12, out a4_13, out a5_14, out s4_18)
	a1Out = a1_10
	a3Out = a3_12
	a4Out = a4_13
	a5Out = a5_14
	s4Out = s4_18
	return s1_17
aos_sem_free_exit:


word32 aos_sem_wait(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_poll
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a4 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
aos_sem_wait_entry:
l2304D3E0:
	branch a0 == 0<32> l2304D3FC
l2304D3FC:
	a0Out = 0xFFFFFFFF<32>
	a4Out = a4
	s2Out = s2
	return s1
l2304D3E2:
	word32 a0_15
	word32 a4_19
	word32 s1_23
	word32 s2_24
	word32 a1_70
	word32 a2_71
	word32 a3_72
	word32 a5_73
	word32 s3_74
	word32 s4_75
	xQueueSemaphoreTake(Mem7[a0:word32], a1, a2, a3, a4, a5, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_23, out a0_15, out a1_70, out a2_71, out a3_72, out a4_19, out a5_73, out s2_24, out s3_74, out s4_75)
	a0Out = 0<32> - CONVERT(a0_15 != 0xFFFFFFFF<32>, bool, word32)
	a4Out = a4_19
	s2Out = s2_24
	return s1_23
aos_sem_wait_exit:


void aos_sem_signal(word32 ra, word32 a0, word32 a2, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg5C, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_poll_notify
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aos_sem_signal_entry:
l2304D400:
	branch a0 == 0<32> l2304D422
l2304D408:
	word32 a5_9 = Mem6[0x4200DE84<32>:int32]
	word32 a0_10 = Mem6[a0:word32]
	branch a5_9 == 0<32> l2304D428
l2304D428:
	word32 s0_122
	word32 s1_123
	word32 a0_124
	word32 a1_125
	word32 a2_126
	word32 a3_127
	word32 a4_128
	word32 a5_129
	word32 a7_130
	word32 s2_131
	word32 s3_132
	word32 s4_133
	word32 s5_134
	word32 s6_135
	word32 s8_136
	xQueueGenericSend(a0_10, 0<32>, 0<32>, a4, a5_9, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s0_122, out s1_123, out a0_124, out a1_125, out a2_126, out a3_127, out a4_128, out a5_129, out a7_130, out s2_131, out s3_132, out s4_133, out s5_134, out s6_135, out s8_136)
l2304D414:
	word32 a5_43
	word32 a3_46 = xQueueGiveFromISR(a0_10, fp + 0xFFFFFFEC<32>, a2, a4, a5_9, mstatus, out a5_43)
	branch a5_43 == 0<32> l2304D422
l2304D41E:
	word32 a0_137
	word32 a4_138
	word32 a5_139
	vTaskSwitchContext(ra, a3_46, s2, mstatus, dwArg10, dwArg14, dwArg38, dwArg5C, out a0_137, out a4_138, out a5_139)
l2304D422:
	return
aos_sem_signal_exit:


word32 aos_malloc(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg8C, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_cli_init
//      proc_onecmd
//      romfs_opendir
//      event_open
//      event_write
//      aos_register_event_filter
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +008C:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
aos_malloc_entry:
l2304D434:
l2304D434_thunk_pvPortMalloc:
	word32 a0_11
	word32 a3_14
	word32 a4_15
	word32 a5_16
	word32 s1_19
	word32 s2_20
	word32 s3_21
	word32 s4_22
	word32 a1_39
	word32 a2_40
	word32 a6_41
	word32 s8_42
	word32 s0_18 = pvPortMalloc(ra, s1, a0, a3, a4, a5, mstatus, dwArg40, dwArg44, dwArg8C, dwArg0138, dwArg0178, out s1_19, out a0_11, out a1_39, out a2_40, out a3_14, out a4_15, out a5_16, out a6_41, out s2_20, out s3_21, out s4_22, out s8_42)
	s1Out = s1_19
	a0Out = a0_11
	a3Out = a3_14
	a4Out = a4_15
	a5Out = a5_16
	s2Out = s2_20
	s3Out = s3_21
	s4Out = s4_22
	return s0_18
aos_malloc_exit:


word32 aos_free(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & t3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      proc_onecmd
//      romfs_closedir
//      romfs_opendir
//      event_close
//      event_read
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a6 s1 t3 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
aos_free_entry:
l2304D438:
l2304D438_thunk_vPortFree:
	word32 a2_8
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 s1_12
	word32 a0_14
	word32 a6_16
	word32 t3_19
	word32 s0_30
	word32 a1_31
	word32 s4_32
	word32 tp_13 = vPortFree(a0, a2, a5, mstatus, dwArg0158, dwArg0198, out s0_30, out s1_12, out a0_14, out a1_31, out a2_8, out a3_9, out a4_10, out a5_11, out a6_16, out s4_32, out t3_19)
	s1Out = s1_12
	a0Out = a0_14
	a2Out = a2_8
	a3Out = a3_9
	a4Out = a4_10
	a5Out = a5_11
	a6Out = a6_16
	t3Out = t3_19
	return tp_13
aos_free_exit:


word32 aos_now_ms(word32 a3, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_cb_wifi_event
//      uptime_cmd
//      sec_trng_IRQHandler
//      aos_post_delayed_action
//      aos_loop_run
// MayUse:  a3:[0..31]
// LiveOut: a0 a1 a2 a4 a5 s0
// Trashed: a0 a1 a2 a4 a5 s0 t3
// Preserved: sp
aos_now_ms_entry:
l2304D43C:
	word32 a0_10 = xTaskGetTickCount2(fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>)
	branch a0_10 == 1<32> l2304D454
l2304D454:
	word32 a5_19 = 0<32> - a3
	word32 a0_21 = a0_10 + a5_19
	a0Out = a0_21
	word32 a4_18 = CONVERT(a3 >u 0xFFFFFFFF<32>, bool, word32)
	word32 a5_23 = CONVERT(a0_21 <u a5_19, bool, word32)
	a1Out = (a3 >>u 0x1F<u32>) + a4_18 + a5_23
	a2Out = dwArg84
	a4Out = a4_18
	a5Out = a5_23
	return dwArg24
aos_now_ms_exit:
l2304D452:


void event_poll(word32 ra, word32 s0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg74, word32 dwArg84, word32 dwArgA4, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0074:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
event_poll_entry:
l2304D476:
	word32 a3_26
	word32 s1_31
	word32 s4_140
	word32 s3_139
	word32 s2_138
	word32 a0_137
	word32 a4_27
	word32 a5_28
	aos_mutex_lock(s0, 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_31, out a0_137, out a3_26, out a4_27, out a5_28, out s2_138, out s3_139, out s4_140)
	word32 s0_39 = dwArg84
	branch s1_31 != 0<32> l2304D4B2
l2304D4B2:
	s0_39 = Mem20[a5_28 + 16<i32>:word32]
	Mem42[a2 + 4<i32>:word32] = s0_39
	Mem43[a3_26 + 8<i32>:word32] = s0_39
	Mem44[a4_27 + 12<i32>:word32] = s0_39
	branch a5_28 == 0<32> l2304D4A0
l2304D4BC:
	word32 a5_45 = CONVERT(Mem44[a3_26 + 6<i32>:uint16], uint16, word32)
	Mem49[a3_26 + 6<i32>:word16] = SLICE(a5_45 | 1<i32>, word16, 0)
	call a2 (retsize: 0;)
		uses: a0:a3_26,a1:a4_27,a2:a2,a3:a3_26,a4:a4_27,a5:a5_45 | 1<i32>,mstatus:mstatus,ra:ra,s0:s0_41,s1:s1_31,Stack +0014:dwLoc0C,Stack +0094:dwArg74,Stack +00A4:dwArg84,Stack +00C4:dwArgA4,Stack +0108:dwArgE8,Stack +0148:dwArg0128
		defs: a4:a4_58,a5:a5_63,mstatus:mstatus_64,s0:s0_53
l2304D498:
	Mem68[dwArg84 + 4<i32>:word32] = 0<32>
	Mem69[dwArg84 + 12<i32>:word32] = 0<32>
l2304D4A0:
	aos_mutex_unlock(s0_39, a4_27, a5_28, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168)
	return
event_poll_exit:


void event_open(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
event_open_entry:
l2304D4D0:
	word32 a0_17
	word32 s1_91
	word32 a3_92
	word32 a4_93
	word32 a5_94
	word32 s2_95
	word32 s3_96
	word32 s4_97
	aos_malloc(ra, a1, 40<i32>, a3, a4, a5, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_91, out a0_17, out a3_92, out a4_93, out a5_94, out s2_95, out s3_96, out s4_97)
	word32 a3_38
	word32 a4_39
	word32 a5_40
	word32 t1_98
	word32 a0_99
	word32 a1_100
	word32 a2_101
	word32 a0_102
	word32 a3_103
	word32 a4_104
	word32 s1_53 = aos_mutex_new(memset(ra, a0_17, 0<32>, 40<i32>, out t1_98, out a0_99, out a1_100, out a2_101, out a3_38, out a4_39, out a5_40), a0_17, a3_38, a4_39, a5_40, mstatus, dwLoc10, s0, ra, dwArgE8, dwArg0128, dwArg0168, out a0_102, out a3_103, out a4_104)
	Mem68[a0_17 + 40<i32>:word32] = a0_17
	Mem69[a0_17 + 44<i32>:word32] = a0_17
	Mem71[a0_17 + 64<i32>:word32] = a0_17
	Mem72[a0_17 + 68<i32>:word32] = a0_17
	Mem73[a0_17 + 4<i32>:word32] = s1_53
	return
event_open_exit:


void _event_write.isra.0(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_ioctl
//      event_write
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
_event_write.isra.0_entry:
l2304D512:
	word32 a5_156
	word32 a4_107
	word32 s0_121
	word32 s1_73
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 a0_287
	word32 s2_288
	word32 s1_36
	word32 s4_39
	word32 s3_108
	aos_mutex_lock(a0, 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, s0, ra, dwArgD8, dwArg0118, out s1_36, out a0_287, out a3_31, out a4_32, out a5_33, out s2_288, out s3_108, out s4_39)
	word32 s2_134 = a2
	branch a5_33 <= 0<32> l2304D5A4
l2304D538:
	s1_36 = Mem22[a5_33 + 8<i32>:word32]
	branch a2 != a5_33 l2304D5A4
l2304D5A4:
	word32 a0_58
	word32 s1_292
	word32 a3_293
	s0_121 = aos_malloc(ra, s1_36, a2 + 12<i32>, a3_31, a4_32, a5_33, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_292, out a0_58, out a3_293, out a4_107, out a5_156, out s2_134, out s3_108, out s4_39)
	s1_73 = a0_58
	branch a0_58 != 0<32> l2304D54E
l2304D5B4:
l2304D540:
	s1_73 = Mem22[a4_32:word32]
	Mem78[a5_33 + 4<i32>:word32] = a4_32
	Mem79[a4_32:word32] = a5_33
	Mem82[a5_33 + 0x1B<32>:word32] = Mem79[a5_33 + 28<i32>:word32]
	a5_156 = a5_33 + 0xFFFFFFFF<32>
l2304D54E:
	word32 s0_85 = Mem84[a5_156 + 16<i32>:word32]
	Mem91[a5_156 + 0x11<32>:word32] = s0_85
	Mem93[a2 + 8<i32>:word32] = s1_73
	word32 a0_89 = s1_73 + 12<i32>
	word32 a1_97
	word32 a2_98
	word32 a3_99
	word32 a7_291
	word32 a4_289
	word32 a6_290
	memcpy(a0_89, s4_39, a2, out a1_97, out a2_98, out a3_99, out a4_289, out a5_156, out a6_290, out a7_291)
	a4_107 = s0_85 + 20<i32>
	branch s3_108 == 0<32> l2304D5B8
l2304D5B8:
	word32 s0_109 = Mem93[a5_156 + 20<i32>:word32]
	Mem110[s0_85 + 24<i32>:word32] = s1_73
	Mem111[a5_156:word32] = s1_73
	Mem112[s1_73 + 4<i32>:word32] = a5_156
	Mem113[s1_73 + 20<i32>:word32] = s0_109
l2304D568:
	word32 s0_114 = Mem93[a5_156 + 24<i32>:word32]
	Mem115[s0_85 + 20<i32>:word32] = s1_73
	Mem116[a5_156 + 4<i32>:word32] = s1_73
	Mem117[s1_73 + 24<i32>:word32] = s0_114
	Mem118[s1_73:word32] = a5_156
l2304D572:
	s0_121 = Mem120[a5_156 + 4<i32>:word32]
	branch a5_156 == 0<32> l2304D58C
l2304D576:
	word32 a5_124 = CONVERT(Mem120[s0_85 + 26<i32>:uint16], uint16, word32)
	Mem126[s0_85 + 26<i32>:word16] = SLICE(a5_124 | 1<i32>, word16, 0)
	call a5_124 | 1<i32> (retsize: 0;)
		uses: a0:a0_89,a1:a1_97,a2:a2_98,a3:a3_99,a4:s0_85 + 20<i32>,a5:a5_124 | 1<i32>,mstatus:mstatus,ra:ra,s0:Mem126[a0_89 + 8<i32>:word32],s1:s1_88,s2:s2_134,s3:s3_108,s4:s4_86,Stack +0040:dwArg10,Stack +0044:dwArg14,Stack +0108:dwArgD8,Stack +0138:dwArg0108,Stack +0148:dwArg0118,Stack +0178:dwArg0148
		defs: a4:a4_157,a5:a5_156,mstatus:mstatus_161,s0:s0_148
l2304D58C:
	aos_mutex_unlock(s0_121, a4_107, a5_156, mstatus, s0, ra, dwArgD8, dwArg0118, dwArg0158)
	0<32> = dwArg0128
	return
_event_write.isra.0_exit:


void event_ioctl(word32 ra, word32 s0, word32 a0, word32 a1, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
event_ioctl_entry:
l2304D5C4:
	word32 a3_10
	word32 a4_11 = 1<32>
	branch (a1 & 0xF<32>) == 1<32> l2304D5DE
l2304D5DE:
	a3_10 = 0<32>
l2304D5D4:
	a4_11 = 2<32>
	branch (a1 & 0xF<32>) == 2<32> l2304D5E6
l2304D5E6:
	a3_10 = 1<32>
l2304D5E0:
	word32 a0_17 = Mem0[a0 + 4<i32>:word32]
l2304D5E2_thunk__event_write.isra.0:
	_event_write.isra.0(ra, s0, a0_17, a1 >> 4<u32>, a3_10, a4_11, a1 & 0xF<32>, s3, mstatus, dwArg10, dwArg14, dwArgD8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0158)
	return
l2304D5DA:
	return
event_ioctl_exit:


void event_write(word32 ra, word32 s0, word32 a0, word32 a2, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
event_write_entry:
l2304D5EA:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
l2304D5EE_thunk__event_write.isra.0:
	_event_write.isra.0(ra, s0, a0_5, a2, 0<32>, a4, a5, s3, mstatus, dwArg10, dwArg14, dwArgD8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0158)
	return
event_write_exit:


void event_close(word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
event_close_entry:
l2304D5F2:
	word32 a0_15
	word32 a4_19
	word32 a5_20
	word32 a2_17
	word32 s1_27 = aos_mutex_free(s0, a3, a4, mstatus, dwArg0148, dwArg0188, out a0_15, out a2_17, out a4_19, out a5_20) + 20<i32>
l2304D606:
	word32 s0_30 = Mem29[a0_15 + 24<i32>:word32]
	branch a0_15 != s1_27 l2304D628
l2304D628:
	word32 a0_35 = Mem29[a5_20 + 4<i32>:word32]
	Mem36[a5_20 + 4<i32>:word32] = a4_19
	Mem37[a4_19:word32] = a5_20
	word32 t3_116
	word32 a6_115
	word32 a3_114
	aos_free(a0_35, a2_17, a5_20, mstatus, dwArg0148, dwArg0188, out s1_27, out a0_15, out a2_17, out a3_114, out a4_19, out a5_20, out a6_115, out t3_116)
l2304D60C:
	word32 s1_53 = s0_30 + 32<i32>
l2304D610:
	word32 s0_56 = Mem55[a0_15 + 36<i32>:word32]
	branch a0_15 != s1_53 l2304D636
l2304D636:
	word32 a0_61 = Mem55[a5_20 + 4<i32>:word32]
	Mem62[a5_20 + 4<i32>:word32] = a4_19
	Mem63[a4_19:word32] = a5_20
	word32 a3_117
	word32 a6_118
	word32 t3_119
	aos_free(a0_61, a2_17, a5_20, mstatus, dwArg0148, dwArg0188, out s1_53, out a0_15, out a2_17, out a3_117, out a4_19, out a5_20, out a6_118, out t3_119)
l2304D616:
	word32 a2_122
	word32 a3_123
	word32 s1_120
	word32 a0_121
	word32 a4_124
	word32 a5_125
	word32 a6_126
	word32 t3_127
	aos_free(s0_56, a2_17, a5_20, mstatus, dwArg0148, dwArg0188, out s1_120, out a0_121, out a2_122, out a3_123, out a4_124, out a5_125, out a6_126, out t3_127)
	return
event_close_exit:


void event_read(word32 s0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg74, word32 dwArgE8, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0074:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
event_read_entry:
l2304D644:
	branch Mem15[s0 + 16<i32>:int32] == 0<32> l2304D6B0
l2304D65C:
	word32 a4_32
	word32 a5_33
	word32 s3_38
	word32 s4_39
	word32 a3_212
	word32 s2_213
	word32 s1_210
	word32 a0_211
	aos_mutex_lock(s0, 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_210, out a0_211, out a3_212, out a4_32, out a5_33, out s2_213, out s3_38, out s4_39)
	word32 s1_45 = Mem15[a5_33 + 4<i32>:word32]
	Mem46[a5_33 + 4<i32>:word32] = a4_32
	Mem47[a4_32:word32] = a5_33
	word32 s2_48 = Mem47[s1_45 + 8<i32>:int32]
	branch s3_38 >=u s2_48 l2304D67C
l2304D67A:
	s2_48 = s3_38
l2304D67C:
	word32 a4_103
	word32 a5_80
	word32 a4_56
	word32 a2_60
	word32 a3_215
	word32 a1_214
	word32 a5_216
	word32 a6_217
	word32 a7_218
	memcpy(s4_39, s1_45 + 12<i32>, s2_48, out a1_214, out a2_60, out a3_215, out a4_56, out a5_216, out a6_217, out a7_218)
	branch a4_56 > 3<32> l2304D6C2
l2304D6C2:
	word32 s1_219
	word32 a0_220
	word32 a2_221
	word32 a3_222
	word32 a6_223
	word32 t3_224
	aos_free(s1_45, a2_60, 3<32>, mstatus, dwArg0138, dwArg0178, out s1_219, out a0_220, out a2_221, out a3_222, out a4_103, out a5_80, out a6_223, out t3_224)
l2304D690:
	word32 s0_87 = Mem47[0x27<32>:word32]
	Mem89[s0_87 + 32<i32>:word32] = s1_45
	Mem90[7<32>:word32] = s1_45
	Mem91[s1_45 + 36<i32>:word32] = s0_87
	Mem92[s1_45:word32] = 3<32>
	Mem95[0x20<32>:word32] = Mem92[0x1F<32>:word32]
	a4_103 = s0_87 + 32<i32>
	a5_80 = 4<32>
l2304D6A4:
	word32 s0_98 = Mem97[a5_80 + 16<i32>:word32]
	word32 a5_100 = a5_80 + 0xFFFFFFFF<32>
	Mem101[a5_100 + 16<i32>:word32] = s0_98
	aos_mutex_unlock(s0_98, a4_103, a5_100, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168)
l2304D6B0:
	return
event_read_exit:


word32 vfs_device_init(word32 ra, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg64, word32 dwArgA4, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0064:[0..31] Stack +00A4:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: ra s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
vfs_device_init_entry:
l2304D6CA:
	branch a5 == 1<32> l2304D6FE
l2304D6E4:
	word32 a0_23
	word32 s0_30
	word32 s1_31
	word32 a5_104
	word32 s2_105
	word32 s4_106
	ra = aos_register_driver(ra, 0x230879B4<32>, 0<32>, a3, a4, a5, mstatus, dwArg64, dwArgA4, dwArgD8, dwArg0118, dwArg0158, out s0_30, out s1_31, out a0_23, out a5_104, out s2_105, out s4_106, out s6)
	branch a0_23 != 0<32> l2304D6FE
l2304D6FC:
	Mem47[s1_31:word32] = s0_30
l2304D6FE:
	s6Out = s6
	return ra
vfs_device_init_exit:


void event_read_cb(word32 ra, word32 s1, word32 a0, word32 a4, word32 dwArg24, word32 dwArgC4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +00C4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 ra s0 s1 s4 s8 t1 t3
// Preserved: sp
event_read_cb_entry:
	uint16 wLoc1C = SLICE(dwLoc1C, uint16, 0)
l2304D708:
	word32 sp_3 = fp + 0xFFFFFFE0<32>
	word32 a0_14
	word32 a4_141
	word32 a5_142
	word32 a2_140
	word32 s0_18
	word32 a1_20
	word32 ra_22 = aos_read(ra, a0, fp + 0xFFFFFFE0<32>, a4, dwLoc20, dwArg24, out s0_18, out a0_14, out a1_20, out a2_140, out a4_141, out a5_142)
	branch a0_14 != 0x10<32> l2304D730
l2304D71E:
	word32 a4_24 = CONVERT(wLoc1C, uint16, word32)
	branch a4_24 != 256<i32> l2304D73A
l2304D73A:
	word32 a4_27 = Mem11[s0_18 + 4<i32>:word32]
	word32 s1_28 = 0x4200D954<32>
l2304D748:
	branch s0_18 == s1_28 l2304D730
l2304D74C:
	word32 a5_32 = CONVERT(Mem11[s0_18 + 16<i32>:uint16], uint16, word32)
	branch a5_32 == 0<32> l2304D75A
l2304D752:
	a4_27 = CONVERT(Mem11[sp_3 + 4<i32>:uint16], uint16, word32)
	branch a4_27 != a5_32 l2304D762
l2304D75A:
	call a5_32 (retsize: 0;)
		uses: a0:sp_33,a4:a4_46,ra:ra_44,s0:Mem11[a1_39 + 12<i32>:word32],s1:s1_30,Stack +0024:dwArg24,Stack +00C4:dwArgC4,Stack +FFFFFFE0:dwLoc20,Stack +FFFFFFE4:wLoc1C
		defs: a1:a1_50,a4:a4_56,ra:ra_51,s0:s0_52,s1:s1_53,sp:sp_48
l2304D762:
	s0_18 = Mem11[s0_18 + 4<i32>:word32]
l2304D72A:
	call 256<i32> (retsize: 0;)
		uses: a0:a0_14,a2:dwArg24,a4:a4_24,ra:ra_22,s0:dwArgC4,s1:s1,Stack +0000:dwLoc20,Stack +0004:wLoc1C,Stack +0044:dwArg24,Stack +00E4:dwArgC4
l2304D730:
	return
event_read_cb_exit:


word32 aos_event_service_init(word32 ra, word32 s0, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0168, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_init
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: mstatus ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
aos_event_service_init_entry:
l2304D766:
	word32 a0_13
	word32 a4_22
	word32 s3_25
	word32 s6_30
	word32 mstatus_37
	word32 s2_131
	word32 a5_130
	word32 a3_129
	word32 s0_128
	word32 ra_38 = aos_open(ra, 0x230879B4<32>, s2, mstatus, s0, ra, dwArg78, dwArgE8, dwArg0128, dwArg0168, out s0_128, out a0_13, out a3_129, out a4_22, out a5_130, out s2_131, out s3_25, out s6_30, out mstatus_37)
	word32 a5_40 = Mem10[a4_22 + 4<i32>:word32]
	branch a4_22 >= 0<32> l2304D78C
l2304D78A:
	Mem42[a0_13 + 4<i32>:word32] = a5_40
l2304D78C:
	word32 s0_60
	word32 s2_62
	word32 a1_69
	word32 a5_134
	word32 a4_133
	word32 a3_132
	word32 ra_71 = aos_poll_read_fd(ra_38, a0_13, 0x2304D708<32>, 0<32>, s3_25, s6_30, mstatus_37, dwArg00, dwArg04, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_60, out a1_69, out a3_132, out a4_133, out a5_134, out s2_62)
	aos_loop_set_eventfd(s0_60, a1_69)
	s2Out = s2_62
	mstatusOut = mstatus_37
	return ra_71
aos_event_service_init_exit:


word32 aos_post_event(word32 ra, word32 a0, word32 a4, word32 dwArg24, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_stack_wifi
//      bl_rx_apm_sta_del_ind
//      bl_rx_apm_sta_add_ind
//      stateConnectingEnter
//      stateDisconnect_action_reconnect
//      stateConnectedIPNoEnter
//      stateGlobalGuard_AP
//      stateGlobalGuard_denoise
//      stateGlobalGuard_stop
//      stateDisconnect_enter
//      stateGlobalGuard_fw_scan
//      stateConnectedIPYes_enter
//      wifi_mgmr_start
//      cb_event_ind
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] Stack +0024:[0..31]
// LiveOut: a0 a1 a3 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 t1 t3
// Preserved: sp
aos_post_event_entry:
l2304D7AC:
	word32 a0_22
	word32 a3_25
	word32 s0_27
	word32 a1_29
	word32 ra_31 = aos_ioctl(ra, Mem10[0x4200D960<32>:int32], (a0 >>u 0xF<u32>) + 257<i32>, fp + 0xFFFFFFE0<32>, a4, 0<32>, dwArg24, out s0_27, out a0_22, out a1_29, out a3_25)
	s0Out = s0_27
	a0Out = a0_22
	a1Out = a1_29
	a3Out = a3_25
	return ra_31
aos_post_event_exit:


word32 aos_register_event_filter(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg7C, word32 dwArg0128, word32 dwArg0168, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
//      wifi_mgmr_start
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +007C:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a4 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
aos_register_event_filter_entry:
l2304D7E0:
	branch a1 == 0<32> l2304D826
l2304D826:
	s2Out = s2
	s3Out = s3
	return a4
l2304D7E2:
	word32 a0_24
	word32 a3_27
	word32 s1_32
	word32 s2_33
	word32 s3_34
	word32 s4_110
	word32 a5_109
	word32 a4_28
	word32 s0_31 = aos_malloc(ra, a2, 0x14<32>, a3, a4, a5, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_32, out a0_24, out a3_27, out a4_28, out a5_109, out s2_33, out s3_34, out s4_110)
	branch a0_24 == 0<32> l2304D81A
l2304D7FE:
	a4_28 = Mem16[a3_27:word32]
	Mem43[s0_31 + 8<i32>:word32] = a0_24
	Mem44[a0_24 + 16<i32>:word16] = SLICE(s2_33, word16, 0)
	Mem45[a3_27:word32] = a0_24
	Mem46[s1_32 + 12<i32>:word32] = a0_24
	Mem47[a4_28 + 4<i32>:word32] = a0_24
	Mem48[a0_24 + 4<i32>:word32] = a3_27
	Mem49[a0_24:word32] = a4_28
l2304D81A:
	0<32> = dwArg38
	s2Out = s2_33
	s3Out = s3_34
	return a4_28
aos_register_event_filter_exit:


word32 aws_iot_shadow_init(word32 ra, word32 a0, word32 a1, word32 s2, word32 mstatus, word32 dwArg78, word32 dwArg88, word32 dwArgB8, word32 dwArgC8, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut: a0 a3 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_shadow_init_entry:
l2304D82A:
	word32 a1_160
	word32 a2_161
	word32 a4_162
	word32 a5_163
	word32 a6_164
	word32 a7_165
	word32 a3_127
	memcpy(fp + -68<i32>, 0x230879C0<32>, 52<i32>, out a1_160, out a2_161, out a3_127, out a4_162, out a5_163, out a6_164, out a7_165)
	word32 s0_133 = a1
	word32 a0_124 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l2304D89C
l2304D84C:
	branch a1 == 0<32> l2304D89C
l2304D84E:
	ra = aws_iot_mqtt_init(ra, a0, fp + -68<i32>, s2, mstatus, SEQ(wLoc3A, SLICE(CONVERT(Mem37[Mem35[CONVERT(Mem17[a1 + 20<i32>:byte], byte, word32):word32] + 4<i32>:uint16], uint16, word32), word16, 0)), dwLoc28, dwLoc04, 0x1000388<32>, dwArg78, dwArg88, dwArgB8, dwArgC8, out s0_133, out a0_124, out a3_127)
	branch a0_124 != 0<32> l2304D89C
l2304D88A:
	resetClientTokenSequenceNum()
	Mem86[0x4200EFFC<32>:word32] = 0<32>
	a3_127 = initDeltaTokens()
l2304D89C:
	s0Out = s0_133
	a0Out = a0_124
	a3Out = a3_127
	return ra
aws_iot_shadow_init_exit:


word32 aws_iot_shadow_connect(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s10 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_shadow_connect_entry:
l2304D8A6:
	word32 a5_24
	word32 a1_302
	word32 a2_303
	word32 a3_304
	word32 a4_305
	word32 a6_306
	word32 a7_307
	memcpy(fp + -88<i32>, 0x23087C2C<32>, 56<i32>, out a1_302, out a2_303, out a3_304, out a4_305, out a5_24, out a6_306, out a7_307)
	word32 s0_112 = a1
	word32 s2_126 = a0
	word32 s1_138 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l2304D97A
l2304D8CE:
	branch a1 == 0<32> l2304D97A
l2304D8D0:
	s0_112 = Mem21[a5_24 + 4<i32>:word32]
	branch a5_24 == 0<32> l2304D97A
l2304D8D4:
	word32 s1_52
	word32 a3_74
	word32 a4_75
	word32 s1_80
	word32 s2_83
	word32 s3_84
	word32 s4_85
	word32 s0_308
	word32 a0_309
	word32 a1_310
	word32 a2_311
	word32 a3_312
	word32 a4_313
	word32 a5_314
	word32 a7_315
	word32 s2_316
	word32 s3_317
	word32 s4_318
	word32 s5_319
	word32 s6_320
	word32 s7_321
	word32 s8_322
	word32 s9_323
	word32 s10_324
	word32 s11_325
	word32 s0_326
	word32 a0_327
	word32 a1_328
	word32 a2_329
	word32 a5_330
	word32 a7_331
	word32 s5_332
	word32 s6_333
	word32 s7_334
	word32 s8_335
	word32 s9_336
	word32 s10_337
	word32 s11_338
	word32 ra_78 = snprintf(snprintf(ra, 0x42020800<32>, 0x14<32>, 0x23085CD8<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_308, out s1_52, out a0_309, out a1_310, out a2_311, out a3_312, out a4_313, out a5_314, out a7_315, out s2_316, out s3_317, out s4_318, out s5_319, out s6_320, out s7_321, out s8_322, out s9_323, out s10_324, out s11_325), 0x420200E0<32>, 80<i32>, s1_52 + -808<i32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_326, out s1_80, out a0_327, out a1_328, out a2_329, out a3_74, out a4_75, out a5_330, out a7_331, out s2_83, out s3_84, out s4_85, out s5_332, out s6_333, out s7_334, out s8_335, out s9_336, out s10_337, out s11_338)
	word32 dwLoc4C_247 = SEQ(0x258<16>, SLICE(CONVERT(Mem103[Mem99[5<32>:word32] + 8<i32>:uint16], uint16, word32), word16, 0))
	word32 a0_109
	word32 s1_339
	word32 a3_340
	word32 a4_341
	word32 s4_342
	word32 s6_343
	ra = aws_iot_mqtt_connect(ra_78, s1_80, s2_83, a3_74, a4_75, s3_84, s4_85, mstatus, dwLoc4C_247, dwArg1C, dwArg38, dwArg78, dwArgB8, out s0_112, out s1_339, out a0_109, out a3_340, out a4_341, out s2_126, out s3, out s4_342, out s6_343, out s10, out mstatus)
	s1_138 = a0_109
	branch a0_109 != 0<32> l2304D97A
l2304D932:
	word32 a5_142 = initializeRecords(s2_126)
	s0_112 = Mem107[a5_142 + 12<i32>:word32]
	branch a5_142 == 0<32> l2304D97A
l2304D93C:
	word32 s1_159
	word32 s10_160
	word32 s2_162
	word32 s6_166
	word32 s0_344
	word32 a0_345
	word32 a1_346
	word32 a2_347
	word32 a3_348
	word32 a4_349
	word32 a5_350
	word32 a7_351
	word32 s3_352
	word32 s4_353
	word32 s5_354
	word32 s7_355
	word32 s8_356
	word32 s9_357
	word32 s11_358
	snprintf(ra, 0x42015A08<32>, 80<i32>, 0x23087A20<32>, 0<32>, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_344, out s1_159, out a0_345, out a1_346, out a2_347, out a3_348, out a4_349, out a5_350, out a7_351, out s2_162, out s3_352, out s4_353, out s5_354, out s6_166, out s7_355, out s8_356, out s9_357, out s10_160, out s11_358)
	word32 a4_176
	word32 a1_359
	word32 a2_360
	word32 a3_361
	word32 a5_362
	strlen(s1_159 + -1528<i32>, out a1_359, out a2_360, out a3_361, out a4_176, out a5_362)
	word32 a0_187
	word32 s1_363
	word32 a2_364
	word32 a3_365
	word32 a4_366
	word32 s4_367
	word32 s5_368
	word32 s6_369
	word32 s7_370
	ra = aws_iot_mqtt_subscribe(s2_162, s1_159 + -1528<i32>, 1<32>, a4_176, s6_166, s10_160, mstatus, dwLoc5C, dwLoc4C_247, s2, dwArg08, dwArg18, dwArg28, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, out s0_112, out s1_363, out a0_187, out a2_364, out a3_365, out a4_366, out s2_126, out s3, out s4_367, out s5_368, out s6_369, out s7_370, out s10, out mstatus)
	s1_138 = a0_187
l2304D97A:
	s0Out = s0_112
	s1Out = s1_138
	a0Out = s1_138
	a3Out = dwArg08
	s2Out = s2_126
	s3Out = s3
	s10Out = s10
	mstatusOut = mstatus
	return ra
aws_iot_shadow_connect_exit:


word32 aws_iot_shadow_register_delta(word32 ra, word32 s1, word32 a0, word32 a1, word32 a4, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 s8 t3
// Preserved: sp
aws_iot_shadow_register_delta_entry:
l2304D98A:
	branch a0 == 0<32> l2304D9A8
l2304D98C:
	branch a1 == 0<32> l2304D9A8
l2304D9A8:
	a3Out = a3
	return 0xFFFFFFFE<32>
l2304D98E:
	branch aws_iot_mqtt_is_client_connected(a0) == 0<32> l2304D9AC
l2304D9AC:
	a3Out = a3
	return 0xFFFFFFE6<32>
l2304D99C:
l2304D9A4_thunk_registerJsonTokenOnDelta:
	word32 a3_27
	word32 a0_25 = registerJsonTokenOnDelta(ra, s1, dwArg10, a4, s3, mstatus, dwArg08, dwArg18, dwArg44, dwArg48, dwArg58, dwArg60, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgD8, dwArgE8, out a3_27)
	a3Out = a3_27
	return a0_25
aws_iot_shadow_register_delta_exit:


word32 aws_iot_shadow_yield(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 s10, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg38, word32 dwArg98, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0198, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 mstatus ra s0 s10 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_shadow_yield_entry:
l2304D9B6:
	branch a0 == 0<32> l2304D9D0
l2304D9D0:
	s0Out = s0
	a0Out = 0xFFFFFFFE<32>
	a2Out = a2
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s10Out = s10
	mstatusOut = mstatus
	return ra
l2304D9B8:
	word32 s4_23 = HandleExpiredResponseCallbacks(ra, a2, a3, a4, s2, mstatus, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg1C, dwArg38, dwArgE8, dwArg0128)
l2304D9CC_thunk_aws_iot_mqtt_yield:
	word32 a0_31
	word32 a2_32
	word32 s0_34
	word32 s2_41
	word32 s3_42
	word32 a3_44
	word32 mstatus_54
	word32 s10_56
	word32 ra_55 = aws_iot_mqtt_yield(ra, a0, a1, a3, a4, s4_23, s10, mstatus, dwArg98, dwArgD8, dwArg0118, dwArg0198, out s0_34, out a0_31, out a2_32, out a3_44, out s2_41, out s3_42, out s10_56, out mstatus_54)
	s0Out = s0_34
	a0Out = a0_31
	a2Out = a2_32
	a3Out = a3_44
	s2Out = s2_41
	s3Out = s3_42
	s10Out = s10_56
	mstatusOut = mstatus_54
	return ra_55
aws_iot_shadow_yield_exit:


word32 aws_iot_shadow_disconnect(word32 ra, word32 a0, word32 a3, word32 a4, word32 s3, word32 s4, word32 mstatus, word32 dwArg24, word32 dwArg34, word32 dwArg98, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0148, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] Stack +0024:[0..31] Stack +0034:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_shadow_disconnect_entry:
l2304D9D4:
l2304D9D4_thunk_aws_iot_mqtt_disconnect:
	word32 a0_11
	word32 a5_12
	word32 a2_13
	word32 a3_17
	word32 a4_18
	word32 mstatus_33
	word32 s1_49
	word32 s2_50
	word32 s3_51
	word32 s4_52
	word32 s5_53
	word32 s6_54
	word32 ra_34 = aws_iot_mqtt_disconnect(ra, a0, a3, a4, s3, s4, mstatus, dwArg24, dwArg34, dwArg98, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0148, out s1_49, out a0_11, out a2_13, out a3_17, out a4_18, out a5_12, out s2_50, out s3_51, out s4_52, out s5_53, out s6_54, out mstatus_33)
	a0Out = a0_11
	a2Out = a2_13
	a3Out = a3_17
	a4Out = a4_18
	a5Out = a5_12
	mstatusOut = mstatus_33
	return ra_34
aws_iot_shadow_disconnect_exit:


word32 aws_iot_shadow_update(word32 ra, word32 a0, word32 a1, word32 a2, word32 a6, word32 s4, word32 s6, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg38, word32 dwArg48, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, ptr32 & a3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s6:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31]
// LiveOut: a3 mstatus ra s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_shadow_update_entry:
l2304D9D8:
	branch a0 == 0<32> l2304DA24
l2304DA24:
	a3Out = a3
	s4Out = s4
	mstatusOut = mstatus
	return ra
l2304D9DA:
	branch aws_iot_mqtt_is_client_connected(a0) == 0<32> l2304DA28
l2304DA28:
	a3Out = a3
	s4Out = dwArg04
	mstatusOut = mstatus
	return ra
l2304D9FC:
	word32 a1_162
	word32 a2_163
	word32 a3_164
	word32 a4_165
	word32 a5_166
	word32 a0_43 = strlen(a2, out a1_162, out a2_163, out a3_164, out a4_165, out a5_166)
l2304DA22_thunk_aws_iot_shadow_internal_action:
	word32 a3_66
	word32 mstatus_79
	word32 s4_86
	word32 ra_80 = aws_iot_shadow_internal_action(ra, a1, dwArg48, a0_43, a6, s6, s4, mstatus, dwArg04, dwArg08, dwArg18, dwArg1C, dwArg38, dwArg78, dwArg84, dwArg88, dwArg98, out a3_66, out s4_86, out mstatus_79)
	a3Out = a3_66
	s4Out = s4_86
	mstatusOut = mstatus_79
	return ra_80
aws_iot_shadow_update_exit:


word32 aws_iot_shadow_set_autoreconnect_status(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
aws_iot_shadow_set_autoreconnect_status_entry:
l2304DA3C:
l2304DA3C_thunk_aws_iot_mqtt_autoreconnect_set_status:
	return aws_iot_mqtt_autoreconnect_set_status(a0, a1)
aws_iot_shadow_set_autoreconnect_status_exit:


word32 aws_iot_shadow_internal_action(word32 ra, word32 a0, word32 a2, word32 a3, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg38, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, ptr32 & a3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_update
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31]
// LiveOut: a3 mstatus ra s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_shadow_internal_action_entry:
	byte bLoc8D_321 = SLICE(dwLoc90, byte, 24)
l2304DA40:
	branch a0 == 0<32> l2304DAAA
l2304DA5C:
	branch a2 == 0<32> l2304DAAA
l2304DA5E:
	word32 a0_47
	word32 s3_60
	word32 s1_375
	word32 s4_376
	word32 s5_131
	word32 s2_128
	word32 s0_124 = extractClientToken(a2, a3, dwLoc84, dwLoc7C, dwArg88, dwArg98, out s1_375, out a0_47, out s2_128, out s3_60, out s4_376, out s5_131)
	branch a0_47 == 0<32> l2304DAFC
l2304DA7E:
	branch s3_60 == 0<32> l2304DAFC
l2304DAFC:
l2304DA82:
	word32 a0_78 = getNextFreeIndexOfAckWaitList(fp + -141<i32>)
	s4 = a0_78
	branch a0_78 == 0<32> l2304DAAA
l2304DA90:
	word32 a0_84
	word32 s0_93
	word32 s10_95
	word32 s2_97
	word32 s7_102
	word32 ra_92 = isSubscriptionPresent(ra, s2_128, dwLoc28, out s0_93, out a0_84, out s2_97, out s7_102, out s10_95)
	branch a0_84 != 0<32> l2304DAC6
l2304DAC6:
	ra = incrementSubscriptionCnt(ra_92, s0_93, s2_97, s2_97, dwLoc18, out s0_124, out s2_128, out s5_131)
l2304DAA2:
	word32 a0_143
	ra = subscribeToShadowActionAcks(ra_92, a0_84, s2_97, s2_97, s7_102, s10_95, mstatus, dwLoc90, dwLoc8C, dwLoc88, dwLoc78, dwLoc68, dwLoc38, dwLoc28, dwLoc18, dwArg08, dwArg18, dwArg1C, dwArg38, dwArg78, out s0_124, out a0_143, out s2_128, out s4, out s5_131, out mstatus)
	branch a0_143 == 0<32> l2304DACC
l2304DACC:
	word32 a0_191
	word32 s0_201
	word32 s2_205
	word32 s3_206
	word32 s9_212
	ra = publishToShadowAction(ra, s0_124, s0_124, s2_128, s5_131, mstatus, dwLoc88, dwLoc68, dwLoc64, s6, dwLoc48, dwLoc28, dwLoc1C, dwLoc18, dwArg04, s5, dwArg84, out s0_201, out a0_191, out s2_205, out s3_206, out s4, out s9_212, out mstatus)
	branch s9_212 == 0<32> l2304DAAA
l2304DADC:
	branch s3_206 == 0<32> l2304DAAA
l2304DAE0:
	branch a0_191 != 0<32> l2304DAAA
l2304DAE2:
	branch s4 == 0<32> l2304DAAA
l2304DAE6:
	s4 = addToAckWaitList(ra, CONVERT(bLoc8D_321, byte, word32), s0_201, s2_205, fp + -140<i32>, s3_206, dwLoc60, s8, dwLoc38, dwLoc14, dwArg98)
l2304DAAA:
	a3Out = Mem25[dwLoc48 + 504<i32>:word32]
	s4Out = s4
	mstatusOut = mstatus
	return ra
aws_iot_shadow_internal_action_exit:


word32 convertDataToString(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 fa0, word32 fflags, word32 frm, word32 dwArg08, word32 dwArg28, word32 dwArg54, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_add_reported
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] fa0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0054:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a3 ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a7 fa3 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
convertDataToString_entry:
l2304DB00:
	branch a1 != 0<32> l2304DB0A
l2304DB0A:
	word32 s1_130
	word32 a5_144
	word32 a0_121
	word32 a2_101
	word32 s0_11 = a1
	branch a2 != 0<32> l2304DB26
l2304DB26:
	branch a2 != 1<32> l2304DB3A
l2304DB3A:
	branch a2 != 2<32> l2304DB4E
l2304DB4E:
	branch a2 != 3<32> l2304DB60
l2304DB60:
	branch a2 != 4<32> l2304DB74
l2304DB74:
	branch a2 != 5<32> l2304DB88
l2304DB88:
	branch a2 != 7<32> l2304DBB2
l2304DBB2:
	s1_130 = a0
	branch a2 != 6<32> l2304DBD2
l2304DBD2:
	branch a2 != 8<32> l2304DBFA
l2304DBFA:
	branch a2 != 9<32> l2304DC0E
l2304DC0E:
	a0_121 = 0<32>
	branch a2 == 0xA<32> l2304DBE6
l2304DC00:
	a2_101 = 0x23087ACC<32>
l2304DBD8:
	branch CONVERT(Mem10[a3:byte], byte, word32) != 0<32> l2304DBF0
l2304DBF0:
l2304DBDE:
l2304DBE6:
	a2_101 = 0x23087AC8<32>
l2304DC08:
l2304DBBA:
	word32 a1_348
	__extendsfdf2(ra, fa0, fflags, frm, out a1_348)
l2304DB8E:
l2304DB9A:
	word32 a1_349
	word32 a2_350
	word32 a4_351
	word32 a5_352
	word32 a7_353
	word32 s8_354
	word32 s9_355
	word32 s10_356
	word32 s11_357
	ra = snprintf(ra, a0, a1, 0x23087AC4<32>, dwArg08, dwArg28, dwArg54, s1, ra, dwArg98, dwArgBC, out s0_11, out s1_130, out a0_121, out a1_349, out a2_350, out a3, out a4_351, out a5_352, out a7_353, out s2, out s3, out s4, out s5, out s6, out s7, out s8_354, out s9_355, out s10_356, out s11_357)
l2304DB7A:
	a2_101 = 0x23087ABC<32>
l2304DB66:
	a2_101 = 0x23087AB4<32>
l2304DB54:
	a2_101 = 0x23087AAC<32>
l2304DB40:
	a2_101 = 0x23087AA4<32>
l2304DB2C:
	a2_101 = 0x23087A9C<32>
l2304DB16:
	a2_101 = 0x23087A94<32>
l2304DB20:
	word32 a1_339
	word32 a2_340
	word32 a4_341
	word32 a5_342
	word32 a7_343
	word32 s8_344
	word32 s9_345
	word32 s10_346
	word32 s11_347
	ra = snprintf(ra, a0, a1, a2_101, dwArg08, dwArg28, dwArg54, s1, ra, dwArg98, dwArgBC, out s0_11, out s1_130, out a0_121, out a1_339, out a2_340, out a3, out a4_341, out a5_342, out a7_343, out s2, out s3, out s4, out s5, out s6, out s7, out s8_344, out s9_345, out s10_346, out s11_347)
l2304DB9E:
	a5_144 = -45<i32>
	branch a0_121 >= 0<32> l2304DC16
l2304DC16:
	a5_144 = 0<32>
	branch a0_121 <u s0_11 l2304DBA6
l2304DC1C:
	a5_144 = -44<i32>
l2304DBA6:
	s1Out = s1_130
	a0Out = a5_144
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	return ra
l2304DB02:
	s1Out = s1
	a0Out = -45<i32>
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	return ra
convertDataToString_exit:


void resetClientTokenSequenceNum()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_init
// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: sp
resetClientTokenSequenceNum_entry:
l2304DC22:
	Mem4[0x4200EFF4<32>:word32] = 0<32>
	return
resetClientTokenSequenceNum_exit:


word32 aws_iot_shadow_init_json_document(word32 ra, word32 a0, word32 a1, word32 dwArg08, word32 dwArg28, word32 dwArg54, word32 dwArg70, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a3 ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
aws_iot_shadow_init_json_document_entry:
l2304DC2C:
	branch a0 == 0<32> l2304DC5E
l2304DC5E:
	s1Out = s1
	a0Out = 0xFFFFFFFE<32>
	a3Out = a3
	s2Out = s2
	return ra
l2304DC2E:
	word32 a0_15
	word32 a3_18
	word32 s0_23
	word32 s1_24
	word32 s2_27
	word32 s11_137
	word32 s10_136
	word32 s9_135
	word32 s8_134
	word32 s7_133
	word32 s6_132
	word32 s5_131
	word32 s4_130
	word32 s3_129
	word32 a7_128
	word32 a5_127
	word32 a4_126
	word32 a2_125
	word32 a1_124
	word32 ra_22 = snprintf(ra, a0, a1, 0x23087A88<32>, dwArg08, dwArg28, dwArg54, dwArg70, ra, dwArg98, dwArgBC, out s0_23, out s1_24, out a0_15, out a1_124, out a2_125, out a3_18, out a4_126, out a5_127, out a7_128, out s2_27, out s3_129, out s4_130, out s5_131, out s6_132, out s7_133, out s8_134, out s9_135, out s10_136, out s11_137)
	word32 a5_38 = -45<i32>
	branch a0_15 < 0<32> l2304DC54
l2304DC4A:
	a5_38 = 0<32>
	branch a0_15 <u s0_23 l2304DC54
l2304DC50:
	a5_38 = -44<i32>
l2304DC54:
	s1Out = s1_24
	a0Out = a5_38
	a3Out = a3_18
	s2Out = s2_27
	return ra_22
aws_iot_shadow_init_json_document_exit:


word32 aws_iot_shadow_add_reported(word32 ra, word32 s1, word32 a0, word32 a1, word32 a4, word32 a5, word32 s2, word32 fa0, word32 fflags, word32 frm, word32 dwArg04, word32 dwArg20, word32 dwArg5C, word32 dwArg6C, word32 dwArg0178, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] fa0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +005C:[0..31] Stack +006C:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 ra s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
aws_iot_shadow_add_reported_entry:
l2304DC64:
	word32 a5_182
	word32 dwArg24_262 = fp + -20<i32>
	branch a0 != 0<32> l2304DCA2
l2304DCA2:
	word32 a1_424
	word32 a2_425
	word32 a4_426
	word32 a5_427
	s3 = a1 - strlen(a0, out a1_424, out a2_425, out a3, out a4_426, out a5_427)
	branch s3 >u 1<32> l2304DCBC
l2304DCBC:
	word32 a0_59
	word32 a1_428
	word32 a2_429
	word32 a3_430
	word32 a4_431
	word32 a5_432
	word32 a1_433
	word32 a2_434
	word32 a4_435
	word32 a5_436
	word32 a7_437
	word32 s6_438
	word32 s7_439
	word32 s8_440
	word32 s9_441
	word32 s10_442
	word32 s11_443
	word32 s0_127
	word32 s5_172
	word32 s4_171
	word32 s1_102
	ra = snprintf(ra, strlen(a0, out a1_428, out a2_429, out a3_430, out a4_431, out a5_432) + a0, s3, 0x23087A78<32>, s2, dwLoc28, dwArg04, dwArg20, fp + -20<i32>, a5, dwArg6C, out s0_127, out s1_102, out a0_59, out a1_433, out a2_434, out a3, out a4_435, out a5_436, out a7_437, out s2, out s3, out s4_171, out s5_172, out s6_438, out s7_439, out s8_440, out s9_441, out s10_442, out s11_443)
	a5_182 = -45<i32>
	branch a0_59 < 0<32> l2304DC8A
l2304DCDA:
	s2 = 0<32>
	branch a0_59 >=u s3 l2304DD10
l2304DCE0:
	word32 s6_173 = 1<32>
	word32 s7_114 = 0x23088000<32>
l2304DCE6:
	branch s2 < s5_172 l2304DD16
l2304DD16:
	word32 a1_444
	word32 a2_445
	word32 a4_446
	word32 a5_447
	s3 = s4_171 - strlen(s0_127, out a1_444, out a2_445, out a3, out a4_446, out a5_447)
	branch s6_173 >=u s3 l2304DCB6
l2304DD22:
	word32 a5_103 = Mem100[s1_102:word32]
	dwArg24_262 = a5_103 + 4<i32>
	branch s1_102 == 0<32> l2304DC88
l2304DD2E:
	word32 a0_119
	word32 a5_124
	word32 a1_468
	word32 a2_469
	word32 a3_470
	word32 a4_471
	word32 a5_472
	word32 s1_473
	word32 a1_474
	word32 a2_475
	word32 a4_476
	word32 a7_477
	word32 s4_478
	word32 s5_479
	word32 s6_480
	word32 s7_481
	word32 s8_482
	word32 s9_483
	word32 s10_484
	word32 s11_485
	ra = snprintf(ra, strlen(s0_127, out a1_468, out a2_469, out a3_470, out a4_471, out a5_472) + s0_127, s3, s7_114 + -1428<i32>, s2, dwLoc28, dwArg04, dwArg20, a5_103 + 4<i32>, a5, dwArg6C, out s0_127, out s1_473, out a0_119, out a1_474, out a2_475, out a3, out a4_476, out a5_124, out a7_477, out s2, out s3, out s4_478, out s5_479, out s6_480, out s7_481, out s8_482, out s9_483, out s10_484, out s11_485)
	branch a0_119 < 0<32> l2304DCB6
l2304DD46:
	branch a0_119 >=u s3 l2304DD10
l2304DD4A:
	branch a5_124 == 0<32> l2304DC88
l2304DD4E:
	branch a5_124 == 0<32> l2304DC88
l2304DD52:
	word32 a3_146
	word32 a1_486
	word32 a2_487
	word32 a4_488
	word32 a5_489
	word32 a0_145 = strlen(s0_127, out a1_486, out a2_487, out a3_146, out a4_488, out a5_489)
	word32 s1_151 = Mem105[a3_146 + 4<i32>:word32]
	word32 a0_158
	ra = convertDataToString(ra, s1_151, a0_145 + s0_127, s3, CONVERT(Mem105[s1_151 + 12<i32>:byte], byte, word32), a3_146, fa0, fflags, frm, dwLoc58, a4, dwLoc0C, s1, dwArg5C, out s1_102, out a0_158, out a3, out s2, out s3, out s4_171, out s5_172, out s6_173, out s7_114)
	a5_182 = a0_158
	branch a0_158 != 0<32> l2304DC8A
l2304DD6C:
	s2 = CONVERT(SLICE(s2 + 1<32>, byte, 0), byte, int32)
l2304DCEC:
	word32 a0_198
	word32 a1_448
	word32 a2_449
	word32 a3_450
	word32 a4_451
	word32 a5_452
	word32 s0_453
	word32 s1_454
	word32 a1_455
	word32 a2_456
	word32 a4_457
	word32 a5_458
	word32 a7_459
	word32 s4_460
	word32 s5_461
	word32 s6_462
	word32 s7_463
	word32 s8_464
	word32 s9_465
	word32 s10_466
	word32 s11_467
	ra = snprintf(ra, strlen(s0_127, out a1_448, out a2_449, out a3_450, out a4_451, out a5_452) + 0xFFFFFFFF<32> + s0_127, s3, 0x23087A74<32>, s2, dwLoc28, dwArg04, dwArg20, dwArg24_262, a5, dwArg6C, out s0_453, out s1_454, out a0_198, out a1_455, out a2_456, out a3, out a4_457, out a5_458, out a7_459, out s2, out s3, out s4_460, out s5_461, out s6_462, out s7_463, out s8_464, out s9_465, out s10_466, out s11_467)
	a5_182 = -45<i32>
	branch a0_198 < 0<32> l2304DC8A
l2304DD0A:
	a5_182 = 0<32>
	branch a0_198 <u s3 l2304DC8A
l2304DD10:
	a5_182 = -44<i32>
l2304DCB6:
	a5_182 = -45<i32>
l2304DC88:
	a5_182 = 0xFFFFFFFE<32>
l2304DC8A:
	0<32> = dwArg0178
	a0Out = a5_182
	a3Out = a3
	s2Out = s2
	s3Out = s3
	return ra
aws_iot_shadow_add_reported_exit:


word32 FillWithClientTokenSize(word32 ra, word32 a0, word32 a1, word32 a4, word32 dwArg18, word32 dwArg38, word32 dwArg64, word32 dwArg80, word32 dwArg84, word32 dwArgA8, word32 dwArgCC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_finalize_json_document
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0064:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00CC:[0..31]
// LiveOut: a0 a3 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
FillWithClientTokenSize_entry:
l2304DD76:
	Mem10[a4 + 1<i32>:word32] = Mem0[a4:word32]
l2304DD96_thunk_snprintf:
	word32 a0_16
	word32 a3_19
	word32 s0_24
	word32 s1_25
	word32 s2_28
	word32 s3_29
	word32 a1_52
	word32 a2_53
	word32 a4_54
	word32 a5_55
	word32 a7_56
	word32 s4_57
	word32 s5_58
	word32 s6_59
	word32 s7_60
	word32 s8_61
	word32 s9_62
	word32 s10_63
	word32 s11_64
	word32 ra_23 = snprintf(ra, a0, a1, 0x23087AE8<32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out s0_24, out s1_25, out a0_16, out a1_52, out a2_53, out a3_19, out a4_54, out a5_55, out a7_56, out s2_28, out s3_29, out s4_57, out s5_58, out s6_59, out s7_60, out s8_61, out s9_62, out s10_63, out s11_64)
	s0Out = s0_24
	s1Out = s1_25
	a0Out = a0_16
	a3Out = a3_19
	s2Out = s2_28
	s3Out = s3_29
	return ra_23
FillWithClientTokenSize_exit:


word32 aws_iot_finalize_json_document(word32 ra, word32 a0, word32 a1, word32 s3, word32 dwArg18, word32 dwArg44, word32 dwArg60, word32 dwArg88, word32 dwArgAC, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_main_entry
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s3:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
aws_iot_finalize_json_document_entry:
l2304DD9A:
	branch a0 == 0<32> l2304DE4C
l2304DE4C:
	a0Out = 0xFFFFFFFE<32>
	a3Out = a3
	return ra
l2304DD9C:
	word32 a5_147
	word32 a1_289
	word32 a2_290
	word32 a4_291
	word32 a5_292
	word32 a3_107
	word32 s3_26 = a1 - strlen(a0, out a1_289, out a2_290, out a3_107, out a4_291, out a5_292)
	branch s3_26 >u 1<32> l2304DDCE
l2304DDCE:
	word32 a0_42
	word32 s0_50
	word32 s1_51
	word32 s2_54
	word32 s3_55
	word32 a1_293
	word32 a2_294
	word32 a3_295
	word32 a4_296
	word32 a5_297
	word32 a1_298
	word32 a2_299
	word32 a4_300
	word32 a5_301
	word32 a7_302
	word32 s4_303
	word32 s5_304
	word32 s6_305
	word32 s7_306
	word32 s8_307
	word32 s9_308
	word32 s10_309
	word32 s11_310
	ra = snprintf(ra, strlen(a0, out a1_293, out a2_294, out a3_295, out a4_296, out a5_297) + 0xFFFFFFFF<32> + a0, s3_26, 0x23087A54<32>, dwLoc08, dwArg18, dwArg44, dwArg60, s3, dwArg88, dwArgAC, out s0_50, out s1_51, out a0_42, out a1_298, out a2_299, out a3_107, out a4_300, out a5_301, out a7_302, out s2_54, out s3_55, out s4_303, out s5_304, out s6_305, out s7_306, out s8_307, out s9_308, out s10_309, out s11_310)
	branch a0_42 < 0<32> l2304DDBA
l2304DDF2:
	branch a0_42 >=u s3_55 l2304DE46
l2304DDF6:
	word32 a1_311
	word32 a2_312
	word32 a4_313
	word32 a5_314
	word32 s3_72 = s1_51 - strlen(s0_50, out a1_311, out a2_312, out a3_107, out a4_313, out a5_314)
	branch s2_54 >=u s3_72 l2304DDBA
l2304DE04:
	word32 a4_76
	word32 a0_82
	word32 s0_90
	word32 s1_91
	word32 s2_94
	word32 s3_95
	word32 a1_315
	word32 a2_316
	word32 a3_317
	word32 a5_318
	ra = FillWithClientTokenSize(ra, strlen(s0_50, out a1_315, out a2_316, out a3_317, out a4_76, out a5_318) + s0_50, s3_72, a4_76, dwLoc08, dwArg18, dwArg44, dwArg60, s3, dwArg88, dwArgAC, out s0_90, out s1_91, out a0_82, out a3_107, out s2_94, out s3_95)
	branch a0_82 < 0<32> l2304DDBA
l2304DE16:
	branch a0_82 >=u s3_95 l2304DE46
l2304DE1A:
	word32 a1_319
	word32 a2_320
	word32 a4_321
	word32 a5_322
	word32 s1_112 = s1_91 - strlen(s0_90, out a1_319, out a2_320, out a3_107, out a4_321, out a5_322)
	branch s2_94 >=u s1_112 l2304DDBA
l2304DE26:
	word32 a0_124
	word32 s1_133
	word32 a1_323
	word32 a2_324
	word32 a3_325
	word32 a4_326
	word32 a5_327
	word32 s0_328
	word32 a1_329
	word32 a2_330
	word32 a4_331
	word32 a5_332
	word32 a7_333
	word32 s2_334
	word32 s3_335
	word32 s4_336
	word32 s5_337
	word32 s6_338
	word32 s7_339
	word32 s8_340
	word32 s9_341
	word32 s10_342
	word32 s11_343
	ra = snprintf(ra, strlen(s0_90, out a1_323, out a2_324, out a3_325, out a4_326, out a5_327) + s0_90, s1_112, 0x23087AF0<32>, dwLoc08, dwArg18, dwArg44, dwArg60, s3, dwArg88, dwArgAC, out s0_328, out s1_133, out a0_124, out a1_329, out a2_330, out a3_107, out a4_331, out a5_332, out a7_333, out s2_334, out s3_335, out s4_336, out s5_337, out s6_338, out s7_339, out s8_340, out s9_341, out s10_342, out s11_343)
	branch a0_124 < 0<32> l2304DDBA
l2304DE40:
	a5_147 = 0<32>
	branch a0_124 <u s1_133 l2304DDBE
l2304DE46:
	a5_147 = -44<i32>
l2304DDBA:
	a5_147 = -45<i32>
l2304DDBE:
	a0Out = a5_147
	a3Out = a3_107
	return ra
aws_iot_finalize_json_document_exit:


word32 isJsonValidAndParse(word32 a0, word32 a1, word32 dwArg0C, word32 dwArg0118, word32 dwArg0128, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      shadow_delta_callback
//      AckStatusCallback
// MayUse:  a0:[0..31] a1:[0..31] Stack +000C:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
isJsonValidAndParse_entry:
l2304DE52:
	jsmn_init(0x420161D8<32>)
	word32 a0_30
	word32 s4_37
	word32 s1_48
	word32 s2_49
	word32 s5_116
	word32 s3_115
	jsmn_parse(0x420161D8<32>, a0, a1, 0x42015A58<32>, 120<i32>, dwArg0C, dwArg0118, out s1_48, out a0_30, out s2_49, out s3_115, out s4_37, out s5_116)
	word32 a5_57 = 0<32>
	branch a0_30 <= 0<32> l2304DEA2
l2304DE92:
	a5_57 = 0<32>
	branch CONVERT(Mem19[s2_49:byte], byte, word32) != 1<32> l2304DEA2
l2304DE9E:
	Mem61[a0_30:word32] = s1_48
	a5_57 = 1<32>
l2304DEA2:
	0<32> = dwArg0128
	a0Out = a5_57
	a2Out = dwArg0100
	s4Out = s4_37
	return s1_48
isJsonValidAndParse_exit:


word32 isJsonKeyMatchingAndUpdateValue(word32 ra, word32 a0, word32 a2, word32 a4, word32 a5, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      shadow_delta_callback
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a0 a2 a4 a5 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
isJsonKeyMatchingAndUpdateValue_entry:
l2304DEB2:
	word32 s1_26 = a0
	word32 s5_169 = a4
	word32 s6_170 = a5
	word32 s2_107 = 1<32>
	word32 s3_103 = 0x42015A58<32>
	a2_41 = a2
l2304DEE0:
	word32 a0_401
	word32 a2_41
	branch s2_107 >= a2 l2304E03A
l2304DEE4:
	word32 a0_50
	word32 s1_57
	word32 s4_58
	word32 s8_59
	word32 a2_563
	word32 a5_566
	word32 a4_565
	word32 a3_564
	word32 a1_562
	word32 s0_56 = jsoneq(s1_26, (s2_107 << 4<u32>) + 0x42015A58<32>, a2_41, dwLoc0C, out s1_57, out a0_50, out a1_562, out a2_563, out a3_564, out a4_565, out a5_566, out s4_58, out s8_59)
	branch a0_50 != 0<32> l2304E02C
l2304E02C:
	word32 a0_67
	word32 a1_567
	word32 a3_568
	word32 s4_569
	word32 s8_570
	jsoneq(s1_57, s4_58, s8_59 + -1284<i32>, dwLoc0C, out s1_26, out a0_67, out a1_567, out a2_41, out a3_568, out a4, out a5, out s4_569, out s8_570)
	branch a0_67 != 0<32> l2304E03E
l2304E03E:
	s2_107 = s2_107 + 1<32>
l2304E03A:
	a0_401 = 0<32>
l2304DEF8:
	word32 s2_85 = (s2_107 + 1<32> << 4<i32>) + 0x42015A58<32>
	word32 a1_571
	word32 a3_573
	word32 a2_572
	word32 a4_574
	word32 a5_575
	word32 a6_576
	word32 a7_577
	memcpy(fp + -80<i32>, s2_85, 0x10<32>, out a1_571, out a2_572, out a3_573, out a4_574, out a5_575, out a6_576, out a7_577)
	word32 a5_102 = Mem24[s2_85 + 8<i32>:int32]
	s3_103 = Mem24[s2_85 + 4<i32>:int32]
	word32 a1_113
	word32 a2_578
	word32 a3_579
	word32 a4_580
	word32 a5_581
	word32 a6_582
	word32 a7_583
	memcpy(fp + -64<i32>, fp + -80<i32>, 0x10<32>, out a1_113, out a2_578, out a3_579, out a4_580, out a5_581, out a6_582, out a7_583)
	s2_107 = a5_102 - s3_103
	dwLoc4C = a5_102
	a5 = CONVERT(Mem109[s0_56 + 12<i32>:byte], byte, word32)
	a4 = 8<32>
	branch a5 != 8<32> l2304DF5C
l2304DF5C:
	branch a5 != 0<32> l2304DF72
l2304DF72:
	a4 = 1<32>
	branch a5 != 1<32> l2304DF8A
l2304DF8A:
	branch a5 != 2<32> l2304DFA0
l2304DFA0:
	branch a5 != 3<32> l2304DFB8
l2304DFB8:
	branch a5 != 4<32> l2304DFD0
l2304DFD0:
	a4 = 5<32>
	branch a5 != 5<32> l2304DFE6
l2304DFE6:
	a4 = 6<32>
	branch a5 != 6<32> l2304E000
l2304E000:
	a4 = 7<32>
	branch a5 != 7<32> l2304E018
l2304E018:
	a4 = 9<32>
	branch a5 != 9<32> l2304DF3A
l2304E01E:
	a4 = parseStringValue(s1_57, fp + -64<i32>, a1_113, s1_57, fp + -64<i32>, out a5)
l2304E006:
	branch a5 >=u 7<32> l2304DF3A
l2304E00C:
	a4 = parseDoubleValue(ra, fp + -64<i32>, s1_57, fp + -64<i32>, a5_102, out a5, out s2_107, out s3_103, out s5_169, out s6_170)
l2304DFEC:
	a5 = 3<32>
	branch false l2304DF3A
l2304DFF4:
	a4 = parseFloatValue(ra, fp + -64<i32>, s1_57, fp + -64<i32>, a5_102, out a5, out s2_107, out s3_103, out s5_169, out s6_170)
l2304DFD6:
	branch a5 == 0<32> l2304DF3A
l2304DFDA:
	a4 = parseUnsignedInteger8Value(ra, s1_57, fp + -64<i32>, out a5, out s2_107, out s3_103, out s5_169, out s6_170)
l2304DFBE:
	branch a5 <=u 1<32> l2304DF3A
l2304DFC4:
	a4 = parseUnsignedInteger16Value(ra, s1_57, fp + -64<i32>, a5_102, out a5, out s2_107, out s3_103, out s5_169, out s6_170)
l2304DFA6:
	branch a5 >=u 1<32> l2304DF3A
l2304DFAC:
	word32 s0_584
	word32 s1_585
	word32 a0_586
	word32 a3_587
	word32 s4_588
	parseUnsignedInteger32Value(ra, s1_57, fp + -64<i32>, a5_102, out s0_584, out s1_585, out a0_586, out a3_587, out a4, out a5, out s2_107, out s3_103, out s4_588, out s5_169, out s6_170)
l2304DF90:
	branch a5 == 0<32> l2304DF3A
l2304DF94:
	a4 = parseInteger8Value(ra, fp + -64<i32>, s1_57, fp + -64<i32>, out a5, out s2_107, out s3_103, out s5_169, out s6_170)
l2304DF78:
	branch a5 >=u 1<32> l2304DF3A
l2304DF7E:
	a4 = parseInteger16Value(ra, fp + -64<i32>, s1_57, fp + -64<i32>, out a5, out s2_107, out s3_103, out s5_169, out s6_170)
l2304DF5E:
	a5 = 3<32>
	branch false l2304DF3A
l2304DF66:
	a4 = parseInteger32Value(ra, fp + -64<i32>, s1_57, fp + -64<i32>, a5_102, out a5, out s2_107, out s3_103, out s5_169, out s6_170)
l2304DF2C:
	branch a5 == 0<32> l2304DF3A
l2304DF30:
	a4 = parseBooleanValue(fp + -64<i32>, s1_57, fp + -64<i32>, dwLoc18, out a5, out s2_107)
l2304DF3A:
	Mem396[s6_170:word32] = s3_103
	Mem400[s5_169:word32] = s2_107
	a0_401 = 1<32>
l2304DF44:
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = a0_401
	a2Out = dwArg01A8
	a4Out = a4
	a5Out = a5
	s2Out = s2_107
	s3Out = s3_103
	s4Out = dwArg0168
	return dwLoc08
isJsonKeyMatchingAndUpdateValue_exit:


word32 extractClientToken(word32 a0, word32 a1, word32 dwArg0C, word32 dwArg14, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_internal_action
//      AckStatusCallback
// MayUse:  a0:[0..31] a1:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
extractClientToken_entry:
l2304E042:
	word32 a0_118
	jsmn_init(0x420161D8<32>)
	word32 a0_38
	word32 s2_57
	word32 s5_61
	word32 s4_239
	word32 s1_193
	word32 s3_203
	word32 s0_43 = jsmn_parse(0x420161D8<32>, a0, a1, 0x42015A58<32>, 120<i32>, dwArg0C, dwArg0118, out s1_193, out a0_38, out s2_57, out s3_203, out s4_239, out s5_61)
	branch a0_38 > 0<32> l2304E09C
l2304E09C:
	word32 s0_65 = s0_43 + -1448<i32>
	branch CONVERT(Mem25[s0_43 + -1448<i32>:byte], byte, word32) != 1<32> l2304E086
l2304E0AA:
	s3_203 = a0_38
	s1_193 = 1<32>
l2304E0B2:
	branch s1_193 == a0_38 l2304E086
l2304E0B6:
	word32 a0_82
	word32 a1_83
	word32 s1_89
	word32 s4_90
	word32 a4_242
	word32 a5_243
	word32 s8_244
	word32 a2_240
	word32 a3_241
	s0_65 = jsoneq(s2_57, (s1_193 << 4<u32>) + s0_65, 0x23087A48<32>, dwArg14, out s1_89, out a0_82, out a1_83, out a2_240, out a3_241, out a4_242, out a5_243, out s4_90, out s8_244)
	s1_193 = s1_89 + 1<32>
	branch a0_82 != 0<32> l2304E0B2
l2304E0CA:
	word32 s0_100 = Mem25[Mem25[a1_83 + 4<i32>:word32] + 8<i32>:word32] - a1_83
	s1_193 = s1_89 + 1<32> << 4<i32>
	branch s5_61 <u (s0_100 & 255<i32>) + 1<i32> l2304E086
l2304E0E0:
	word32 a3_245
	word32 a4_246
	word32 a5_247
	strncpy(s4_90, a1_83 + s2_57, s0_100 & 255<i32>, out a3_245, out a4_246, out a5_247)
	Mem117[(s0_100 & 255<i32>) + s4_90:byte] = 0<8>
	a0_118 = 1<32>
l2304E086:
	a0_118 = 0<32>
l2304E088:
	0<32> = dwArg0128
	s1Out = s1_193
	a0Out = a0_118
	s2Out = s2_57
	s3Out = s3_203
	s4Out = dwArg78
	s5Out = s5_61
	return dwArgE4
extractClientToken_exit:


word32 extractVersionNumber(word32 ra, word32 a0, word32 a2, word32 s4, word32 dwArg24, word32 dwArgA8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      shadow_delta_callback
//      AckStatusCallback
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] s4:[0..31] Stack +0024:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a2 a3 a4 ra s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
extractVersionNumber_entry:
l2304E0F4:
	word32 s3_22 = a0
	word32 s4_24 = a2
	word32 s0_27 = 1<32>
	word32 s1_146 = 0x42015A58<32>
	word32 s6_29 = 0x23088000<32>
l2304E11A:
	word32 a0_130
	branch s0_27 < s4_24 l2304E134
l2304E134:
	word32 s2_32 = s0_27 << 4<u32>
	word32 a0_41
	word32 a1_179
	word32 a2_180
	word32 a5_181
	word32 s8_182
	s0_27 = jsoneq(s3_22, s1_146 + s2_32, s6_29 + -1292<i32>, dwArg24, out s1_146, out a0_41, out a1_179, out a2_180, out a3, out a4, out a5_181, out s4_24, out s8_182) + 1<32>
	branch a0_41 != 0<32> l2304E11A
l2304E14A:
	word32 a0_62
	word32 a5_183
	word32 s2_184
	word32 s5_185
	ra = parseUnsignedInteger32Value(ra, s3_22, s2_32 + 16<i32> + s1_146, s4, out s0_27, out s1_146, out a0_62, out a3, out a4, out a5_183, out s2_184, out s3_22, out s4_24, out s5_185, out s6_29)
	branch a0_62 != 0<32> l2304E11A
l2304E15A:
	a0_130 = 1<32>
l2304E11E:
	a0_130 = 0<32>
l2304E120:
	0<32> = dwArgA8
	s1Out = s1_146
	a0Out = a0_130
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	s4Out = dwArg04
	return ra
extractVersionNumber_exit:


void shadow_delta_callback(word32 ra, word32 a1, word32 a2, word32 s4, word32 dwArg78, word32 dwArg94, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31] s4:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
shadow_delta_callback_entry:
l2304E15E:
	branch a2 >u 512<i32> l2304E1EC
l2304E178:
	word32 a4_25
	word32 a3_365
	word32 a6_367
	word32 a5_366
	word32 a2_364
	word32 a1_363
	word32 a7_368
	memcpy(0x4201FEDC<32>, a1, a2, out a1_363, out a2_364, out a3_365, out a4_25, out a5_366, out a6_367, out a7_368)
	Mem45[a4_25 + 0x4201FEDC<32>:byte] = 0<8>
	word32 a0_46
	word32 s4_369
	word32 a2_107
	word32 s1_126 = isJsonValidAndParse(0x4201FEDC<32>, 513<i32>, s4, dwArgE8, dwArgF8, out a0_46, out a2_107, out s4_369)
	branch a0_46 == 0<32> l2304E1EC
l2304E1AA:
	branch CONVERT(Mem45[0x4200D964<32>:byte], byte, word32) == 0<32> l2304E1D6
l2304E1B4:
	0<32> = 0<32>
	word32 a0_80
	word32 a3_83
	word32 a4_84
	word32 s4_370
	ra = extractVersionNumber(ra, s1_126 + -292<i32>, a2_107, s1_126 + -292<i32>, dwLoc0C, dwArg78, out s1_126, out a0_80, out a2_107, out a3_83, out a4_84, out s4_370)
	branch a0_80 == 0<32> l2304E1D6
l2304E1C4:
	a2_107 = dwArg94
	word32 a5_108 = Mem45[a3_83:word32]
	branch a3_83 >=u a4_84 l2304E1EC
l2304E1D4:
	Mem109[a4_84:word32] = a5_108
l2304E1D6:
	word32 s0_111 = 0x420161E4<32>
	word32 s2_112 = 0<32>
	word32 s3_113 = 0x4200E000<32>
l2304E1E4:
	branch s2_112 <u Mem204[s3_113:int32] l2304E1FC
l2304E1FC:
	branch CONVERT(Mem204[s0_111 + 12<i32>:byte], byte, word32) != 0<32> l2304E224
l2304E202:
	0<32> = 0<32>
	word32 a0_130
	word32 s4_139
	word32 a4_147
	word32 a5_148
	ra = isJsonKeyMatchingAndUpdateValue(ra, s1_126 + -292<i32>, a2_107, fp + -40<i32>, fp + -44<i32>, out s0_111, out s1_126, out a0_130, out a2_107, out a4_147, out a5_148, out s2_112, out s3_113, out s4_139)
	branch a0_130 == 0<32> l2304E224
l2304E216:
	s0_111 = Mem204[a5_148 + 8<i32>:word32]
	branch a5_148 == 0<32> l2304E224
l2304E21A:
	call a5_148 (retsize: 0;)
		uses: a0:a0_130 + s4_139,a2:a2_131,a4:a4_147,a5:a5_148,ra:ra_134
		defs: a2:a2_164,ra:ra_167,s0:s0_168,s1:s1_169,s2:s2_170,s3:s3_171
l2304E224:
	s2_112 = s2_112 + 1<32>
	s0_111 = s0_111 + 0x10<32>
l2304E1EC:
	0<32> = dwArg0128
	return
shadow_delta_callback_exit:


word32 findIndexOfSubscriptionList(word32 a0, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      unsubscribeFromAcceptedAndRejected
// MayUse:  a0:[0..31]
// LiveOut: a0 a2 a3 s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t0 t1 t2 t3
// Preserved: sp
findIndexOfSubscriptionList_entry:
l2304E22A:
	word32 s1_17 = 0x42020180<32>
	word32 s0_18 = 0<32>
l2304E244:
	word32 a0_43
	branch CONVERT(Mem14[s1_17 + 81<i32>:byte], byte, word32) != 0<32> l2304E268
l2304E24A:
	word32 a1_119
	word32 a2_120
	word32 a4_121
	word32 a5_122
	branch strcmp(a0, s1_17, out a1_119, out a2_120, out a3, out a4_121, out a5_122) != 0<32> l2304E268
l2304E268:
	word32 s0_37 = s0_18 + 1<32>
	s0_18 = s0_37 & 255<i32>
	s1_17 = s1_17 + 83<i32>
	branch (s0_37 & 255<i32>) != 0x14<32> l2304E244
l2304E276:
	a0_43 = 0xFFFFFFFF<32>
l2304E254:
	a0_43 = CONVERT(SLICE(s0_18, word16, 0), word16, int32)
l2304E25A:
	s1Out = s1_17
	a0Out = a0_43
	a2Out = dwArg48
	a3Out = a3
	s2Out = 0x14<32>
	return s0_18
findIndexOfSubscriptionList_exit:


word32 topicNameFromThingAndAction(word32 ra, word32 a0, word32 a2, word32 a3, word32 dwArg08, word32 dwArg34, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      unsubscribeFromAcceptedAndRejected
//      isSubscriptionPresent
//      subscribeToShadowActionAcks
//      incrementSubscriptionCnt
//      publishToShadowAction
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0034:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0128:[0..31]
// LiveOut: ra s0 s1 s10 s11 s2 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
topicNameFromThingAndAction_entry:
l2304E27A:
	word32 a1_23
	branch a2 != 0<32> l2304E2D4
l2304E2D4:
	branch a2 != 1<32> l2304E2E6
l2304E2E6:
	branch a2 != 2<32> l2304E29C
l2304E2EC:
	a1_23 = 0x23087B4C<32>
l2304E2DA:
	a1_23 = 0x23087B44<32>
l2304E28C:
	a1_23 = 0x2308276C<32>
l2304E296:
	word32 a3_231
	word32 a4_232
	word32 a5_233
	strncpy(fp + -40<i32>, a1_23, 0xA<32>, out a3_231, out a4_232, out a5_233)
l2304E29C:
	word32 s10_124
	word32 s1_123
	word32 ra_121
	word32 s2_126
	word32 s11_125
	word32 s5_129
	word32 s6_130
	word32 s7_131
	word32 s8_132
	word32 a1_86
	branch a3 != 0<32> l2304E2F8
l2304E2F8:
	branch a3 != 1<32> l2304E30A
l2304E30A:
	word32 s0_234
	word32 a0_235
	word32 a1_236
	word32 a2_237
	word32 a3_238
	word32 a4_239
	word32 a5_240
	word32 a7_241
	word32 s3_242
	word32 s4_243
	word32 s9_244
	ra_121 = snprintf(ra, a0, 80<i32>, 0x23087B60<32>, dwLoc18, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C, out s0_234, out s1_123, out a0_235, out a1_236, out a2_237, out a3_238, out a4_239, out a5_240, out a7_241, out s2_126, out s3_242, out s4_243, out s5_129, out s6_130, out s7_131, out s8_132, out s9_244, out s10_124, out s11_125)
l2304E2FE:
	a1_86 = 0x23087B54<32>
l2304E2A0:
	a1_86 = 0x23087B0C<32>
l2304E2AA:
	word32 a3_245
	word32 a4_246
	word32 a5_247
	strncpy(fp + -28<i32>, a1_86, 0xA<32>, out a3_245, out a4_246, out a5_247)
	word32 s0_248
	word32 a0_249
	word32 a1_250
	word32 a2_251
	word32 a3_252
	word32 a4_253
	word32 a5_254
	word32 a7_255
	word32 s3_256
	word32 s4_257
	word32 s9_258
	ra_121 = snprintf(ra, a0, 80<i32>, 0x23087B7C<32>, dwLoc18, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C, out s0_248, out s1_123, out a0_249, out a1_250, out a2_251, out a3_252, out a4_253, out a5_254, out a7_255, out s2_126, out s3_256, out s4_257, out s5_129, out s6_130, out s7_131, out s8_132, out s9_258, out s10_124, out s11_125)
l2304E2C8:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_123
	s2Out = s2_126
	s5Out = s5_129
	s6Out = s6_130
	s7Out = s7_131
	s8Out = s8_132
	s10Out = s10_124
	s11Out = s11_125
	return ra_121
topicNameFromThingAndAction_exit:


word32 unsubscribeFromAcceptedAndRejected(word32 ra, word32 s0, word32 a0, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg78, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      AckStatusCallback
//      HandleExpiredResponseCallbacks
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31]
// LiveOut: a2 a3 a4 mstatus ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
unsubscribeFromAcceptedAndRejected_entry:
l2304E322:
	word32 s0_32
	word32 s1_412
	word32 s5_414
	word32 s2_413
	word32 s7_415
	word32 s8_416
	word32 s10_417
	word32 s11_418
	word32 s0_411
	word32 s11_410
	word32 s10_409
	word32 s8_408
	word32 s7_407
	word32 s6_406
	word32 s5_405
	word32 s2_404
	word32 s1_403
	word32 s6_150
	word32 ra_135 = topicNameFromThingAndAction(topicNameFromThingAndAction(ra, fp + -176<i32>, CONVERT(Mem16[a0 + 0x4202090A<32>:byte], byte, word32), 0<32>, dwLocA8, dwLoc7C, s2, s0, dwLoc38, dwLoc14, dwArg78, out s0_32, out s1_403, out s2_404, out s5_405, out s6_406, out s7_407, out s8_408, out s10_409, out s11_410), fp + -96<i32>, CONVERT(Mem16[s0_32 + 110<i32>:byte], byte, word32), 1<32>, dwLocA8, dwLoc7C, s2, s0, dwLoc38, dwLoc14, dwArg78, out s0_411, out s1_412, out s2_413, out s5_414, out s6_150, out s7_415, out s8_416, out s10_417, out s11_418)
	word32 a0_81
	word32 a3_421
	word32 s1_419
	word32 a2_420
	word32 s2_422
	findIndexOfSubscriptionList(fp + -176<i32>, out s1_419, out a0_81, out a2_420, out a3_421, out s2_422)
	branch a0_81 < 0<32> l2304E3B2
l2304E36A:
	word32 s0_105 = CONVERT(Mem16[a0_81 + 0x42020223<32>:byte], byte, word32)
	branch CONVERT(Mem16[a0_81 + 0x42020225<32>:byte], byte, word32) != 0<32> l2304E410
l2304E38A:
	branch s0_105 != 1<32> l2304E410
l2304E410:
	branch s0_105 <=u 1<32> l2304E3B2
l2304E416:
	Mem115[a0_81 + 0x42020223<32>:byte] = SLICE(s0_105 + 0xFFFFFFFF<32>, byte, 0)
l2304E390:
	word32 s2_117 = Mem16[0x420207FC<32>:int32]
	word32 a3_120
	word32 a4_121
	word32 a1_423
	word32 a2_424
	word32 a5_425
	strlen(fp + -176<i32>, out a1_423, out a2_424, out a3_120, out a4_121, out a5_425)
	word32 a0_130
	word32 s0_136
	word32 s1_137
	word32 a3_427
	word32 a2_426
	word32 s5_429
	word32 s2_428
	ra_135 = aws_iot_mqtt_unsubscribe(ra_135, a0_81 + 0x420201D3<32>, s2_117, fp + -176<i32>, a3_120, a4_121, s6_150, mstatus, dwLocAC, dwLoc9C, dwLoc88, dwLoc48, dwLoc38, dwLoc28, dwArg08, dwArg18, dwArg28, dwArg48, dwArg58, dwArg5C, out s0_136, out s1_137, out a0_130, out a2_426, out a3_427, out s2_428, out s5_429, out s6_150, out mstatus)
	branch a0_130 != 0<32> l2304E3B2
l2304E3AE:
	Mem159[s1_137 + 81<i32>:byte] = SLICE(s0_136, byte, 0)
l2304E3B2:
	word32 a0_163
	word32 s2_169
	word32 s1_168
	word32 a3_175
	word32 a2_164
	word32 s0_167 = findIndexOfSubscriptionList(fp + -96<i32>, out s1_168, out a0_163, out a2_164, out a3_175, out s2_169)
	branch a0_163 < 0<32> l2304E404
l2304E3BC:
	s1_168 = a0_163 + 0x420201D3<32>
	s0_167 = CONVERT(Mem186[a0_163 + 0x42020223<32>:byte], byte, word32)
	branch CONVERT(Mem186[a0_163 + 0x42020225<32>:byte], byte, word32) != 0<32> l2304E428
l2304E3DC:
	branch s0_167 != 1<32> l2304E428
l2304E428:
	branch s0_167 <=u 1<32> l2304E404
l2304E42E:
	Mem199[a0_163 + 0x42020223<32>:byte] = SLICE(s0_167 + 0xFFFFFFFF<32>, byte, 0)
	s0_167 = s0_167 + 0xFFFFFFFF<32>
l2304E3E2:
	word32 s2_201 = Mem186[0x420207FC<32>:int32]
	word32 a3_204
	word32 a4_205
	word32 a1_430
	word32 a2_431
	word32 a5_432
	strlen(fp + -96<i32>, out a1_430, out a2_431, out a3_204, out a4_205, out a5_432)
	word32 a0_219
	word32 s5_433
	word32 s6_434
	ra_135 = aws_iot_mqtt_unsubscribe(ra_135, a0_163 + 0x420201D3<32>, s2_201, fp + -96<i32>, a3_204, a4_205, s6_150, mstatus, dwLocAC, dwLoc9C, dwLoc88, dwLoc48, dwLoc38, dwLoc28, dwArg08, dwArg18, dwArg28, dwArg48, dwArg58, dwArg5C, out s0_167, out s1_168, out a0_219, out a2_164, out a3_175, out s2_169, out s5_433, out s6_434, out mstatus)
	branch a0_219 != 0<32> l2304E404
l2304E400:
	Mem248[s1_168 + 81<i32>:byte] = SLICE(s0_167, byte, 0)
l2304E404:
	s0Out = s0_167
	s1Out = s1_168
	a2Out = a2_164
	a3Out = a3_175
	a4Out = dwArg80
	s2Out = s2_169
	mstatusOut = mstatus
	return ra_135
unsubscribeFromAcceptedAndRejected_exit:


void AckStatusCallback(word32 ra, word32 a1, word32 a2, word32 mstatus, word32 dwArg68, word32 dwArg78)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0068:[0..31] Stack +0078:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
AckStatusCallback_entry:
l2304E440:
	branch a2 >u 512<i32> l2304E5A8
l2304E5A8:
	return
l2304E44A:
	word32 a4_34
	word32 a6_539
	word32 a7_540
	word32 a3_537
	word32 a5_538
	word32 a1_535
	word32 a2_536
	memcpy(0x4201FEDC<32>, a1, a2, out a1_535, out a2_536, out a3_537, out a4_34, out a5_538, out a6_539, out a7_540)
	Mem54[a4_34 + 0x4201FEDC<32>:byte] = 0<8>
	word32 sp_287 = fp + -176<i32>
	word32 a0_55
	word32 a2_541
	word32 s4_146
	word32 s1_64 = isJsonValidAndParse(0x4201FEDC<32>, 513<i32>, dwLocA4, dwArg68, dwArg78, out a0_55, out a2_541, out s4_146)
	branch a0_55 == 0<32> l2304E55E
l2304E490:
	word32 a5_545
	word32 a3_543
	word32 a4_544
	word32 a1_542
	branch strstr(ra, s1_64, 0x42020800<32>, out a1_542, out a3_543, out a4_544, out a5_545) == 0<32> l2304E4C2
l2304E4A0:
	word32 a3_550
	word32 a1_549
	word32 a4_551
	word32 a5_552
	branch strstr(ra, s1_64, 0x23087B08<32>, out a1_549, out a3_550, out a4_551, out a5_552) == 0<32> l2304E576
l2304E576:
	word32 a1_553
	word32 a3_554
	word32 a4_555
	word32 a5_556
	branch strstr(ra, s1_64, 0x23087B18<32>, out a1_553, out a3_554, out a4_555, out a5_556) != 0<32> l2304E4B0
l2304E586:
l2304E4B0:
	word32 a0_131
	word32 a3_134
	word32 a4_135
	word32 s1_557
	word32 a2_558
	ra = extractVersionNumber(ra, s4_146 + -292<i32>, dwLoc2C, s4_146, dwLoc8C, dwLoc08, out s1_557, out a0_131, out a2_558, out a3_134, out a4_135, out s4_146)
	branch a0_131 != 0<32> l2304E588
l2304E588:
	word32 a5_159 = Mem129[a3_134:word32]
	branch a3_134 >=u a4_135 l2304E4C2
l2304E598:
	Mem160[a4_135:word32] = a5_159
l2304E4C2:
	word32 a0_168
	word32 s1_177
	word32 s4_182
	word32 s3_547
	word32 s5_548
	word32 s2_546
	extractClientToken(s4_146 + -292<i32>, 513<i32>, dwLocA4, dwLoc9C, dwArg68, dwArg78, out s1_177, out a0_168, out s2_546, out s3_547, out s4_182, out s5_548)
	branch a0_168 == 0<32> l2304E55E
l2304E4D6:
	word32 s3_197 = 0x42020814<32>
	word32 s0_198 = 0<32>
	word32 s2_199 = 0x42020814<32>
l2304E4EA:
	word32 s6_206 = s0_198 & 255<i32>
	branch CONVERT(Mem167[s3_197 + 120<i32>:byte], byte, word32) != 0<32> l2304E59C
l2304E4F4:
	word32 s5_211 = s0_198 + 136<i32>
	word32 a1_559
	word32 a2_560
	word32 a3_561
	word32 a4_562
	word32 a5_563
	branch strcmp(s3_197, fp + -160<i32>, out a1_559, out a2_560, out a3_561, out a4_562, out a5_563) != 0<32> l2304E59C
l2304E59C:
	s0_198 = s0_198 + 1<32>
	s3_197 = s3_197 + 136<i32>
	branch s0_198 != 0xA<32> l2304E4EA
l2304E5A6:
l2304E502:
	word32 a2_245 = 2<32>
	word32 a1_564
	word32 a3_565
	word32 a5_566
	word32 a4_239
	branch strstr(ra, s1_177, 0x23087B0C<32>, out a1_564, out a3_565, out a4_239, out a5_566) != 0<32> l2304E524
l2304E514:
	word32 a1_567
	word32 a3_568
	word32 a5_569
	strstr(ra, s1_177, 0x23087B54<32>, out a1_567, out a3_568, out a4_239, out a5_569)
	a2_245 = 1<32>
l2304E524:
	word32 a6_268 = Mem167[s0_198 + 0x4202090C<32>:int32]
	branch a6_268 == 0<32> l2304E548
l2304E536:
	word32 a5_270 = Mem167[a4_239 + 116<i32>:word32]
	word32 a4_303
	word32 a6_304
	word32 t1_305
	word32 t5_306
	word32 s10_307
	word32 a7_308
	word32 t0_309
	word32 t3_310
	word32 t4_311
	word32 t6_312
	word32 s11_313
	word32 s9_314
	word32 t2_315
	word32 tp_316
	call a6_268 (retsize: 0;)
		uses: a0:s5_211 + 0x4202086E<32>,a1:CONVERT(Mem167[a5_270 + 110<i32>:byte], byte, word32),a2:a2_279,a3:s4_182 + -292<i32>,a4:a4_303,a5:a5_270,a6:a6_304,a7:a7_308,mstatus:mstatus,ra:ra_233,s0:s0_205,s1:s1_177,s10:s10_307,s11:s11_313,s2:0x42020814<32>,s3:s3_202,s4:s4_182,s5:s5_211,s6:s6_206,s7:0xA<32>,s8:136<i32>,s9:s9_314,Stack +000C:dwLocA4,Stack +0014:dwLoc9C,Stack +0024:dwLoc8C,Stack +0084:dwLoc2C,Stack +00A8:dwLoc08,Stack +0118:dwArg68,Stack +0128:dwArg78,t0:t0_309,t1:t1_305,t2:t2_315,t3:t3_310,t4:t4_311,t5:t5_306,t6:t6_312,tp:tp_316
		defs: a4:a4_303,a6:a6_304,a7:a7_308,ra:ra_294,s0:s0_291,s10:s10_307,s11:s11_313,s2:s2_295,s6:s6_298,s9:s9_314,sp:sp_287,t0:t0_309,t1:t1_305,t2:t2_315,t3:t3_310,t4:t4_311,t5:t5_306,t6:t6_312,tp:tp_316
l2304E548:
	word32 s0_340
	word32 s2_344
	word32 s1_570
	word32 a2_571
	word32 a3_572
	word32 a4_573
	word32 mstatus_574
	unsubscribeFromAcceptedAndRejected(ra, s0_198, s6_206, s2_199, mstatus, Mem167[sp_287 + 8<i32>:word32], Mem167[sp_287 + 24<i32>:word32], Mem167[sp_287 + 40<i32>:word32], Mem167[sp_287 + 72<i32>:word32], Mem167[sp_287 + 88<i32>:word32], Mem167[sp_287 + 92<i32>:word32], Mem167[sp_287 + 120<i32>:word32], out s0_340, out s1_570, out a2_571, out a3_572, out a4_573, out s2_344, out mstatus_574)
	Mem365[s2_344 + (s0_340 + 136<i32>) + 120<i32>:byte] = 1<8>
l2304E55E:
	return
AckStatusCallback_exit:


word32 initDeltaTokens()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_init
// MayUse: 
// LiveOut: a3
// Trashed: a3 a4 a5
// Preserved: sp
initDeltaTokens_entry:
l2304E5AA:
	word32 a5_10 = 0x420161F0<32>
l2304E5B8:
	Mem9[a5_10 + 0<i32>:byte] = 1<8>
	a5_10 = a5_10 + 0x10<32>
	branch a5_10 != 0x42016958<32> l2304E5B8
l2304E5C2:
	Mem13[0x4200E000<32>:word32] = 0<32>
	Mem15[0x4200EFF8<32>:byte] = 0<8>
	return 1<32>
initDeltaTokens_exit:


word32 registerJsonTokenOnDelta(word32 ra, word32 s1, word32 a2, word32 a4, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_register_delta
// MayUse:  a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 s8 t3
// Preserved: a7 mstatus ra s10 s11 s2 s3 s5 s6 s7 s9 sp t0 t1 t4 t5 t6 tp
registerJsonTokenOnDelta_entry:
l2304E5D4:
	word32 a0_104 = 0<32>
	branch CONVERT(Mem5[0x4200DFF8<32>:byte], byte, word32) != 0<32> l2304E644
l2304E5F2:
	word32 s10_37
	word32 s2_39
	word32 s6_43
	word32 s11_237
	word32 s9_236
	word32 s8_235
	word32 s7_234
	word32 s5_233
	word32 s4_232
	word32 s3_231
	word32 a7_230
	word32 a5_229
	word32 a4_228
	word32 a3_227
	word32 a2_226
	word32 a1_225
	word32 a0_224
	word32 s1_223
	word32 s0_222
	snprintf(ra, 0x42020130<32>, 80<i32>, 0x23087B20<32>, dwLoc08, dwArg18, dwArg44, dwArg60, s3, dwArg88, dwArgAC, out s0_222, out s1_223, out a0_224, out a1_225, out a2_226, out a3_227, out a4_228, out a5_229, out a7_230, out s2_39, out s3_231, out s4_232, out s5_233, out s6_43, out s7_234, out s8_235, out s9_236, out s10_37, out s11_237)
	word32 s3_51 = Mem16[0x420207FC<32>:int32]
	word32 a1_238
	word32 a2_239
	word32 a3_240
	word32 a4_241
	word32 a5_242
	strlen(s2_39 + 304<i32>, out a1_238, out a2_239, out a3_240, out a4_241, out a5_242)
	word32 s0_72
	word32 s1_243
	word32 a3_244
	word32 s2_245
	word32 s3_246
	word32 s4_247
	word32 s5_248
	word32 s6_249
	word32 s7_250
	word32 s10_251
	word32 mstatus_252
	aws_iot_mqtt_subscribe(s3_51, s2_39 + 304<i32>, 0<32>, 0x2304E15E<32>, s6_43, s10_37, mstatus, dwLoc1C, dwLoc0C, dwArg08, dwArg48, dwArg58, s1, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, out s0_72, out s1_243, out a0_104, out a2, out a3_244, out a4, out s2_245, out s3_246, out s4_247, out s5_248, out s6_249, out s7_250, out s10_251, out mstatus_252)
	Mem97[s0_72:byte] = 1<8>
l2304E644:
	word32 a3_102 = Mem101[a4:word32]
	branch a4 >u 119<i32> l2304E684
l2304E684:
	a0_104 = 0xFFFFFFFF<32>
l2304E656:
	word32 a1_109 = a4 << 4<u32>
	Mem112[a2:word32] = a1_109 + 0x420161E4<32>
	Mem115[Mem112[a2 + 16<i32>:word32] + 4<i32>:word32] = a1_109 + 0x420161E4<32>
	Mem116[a2 + 8<i32>:word32] = a1_109 + 0x420161E4<32>
	Mem117[a1_109 + 0x420161F0<32>:byte] = 0<8>
	Mem118[a4 + 1<32>:word32] = a3_102
l2304E676:
	a3Out = a3_102
	return a0_104
registerJsonTokenOnDelta_exit:


word32 initializeRecords(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_connect
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a3 a4 a5
// Preserved: sp
initializeRecords_entry:
l2304E688:
	word32 a5_10 = 0x4202088C<32>
l2304E696:
	Mem9[a5_10 + 0<i32>:byte] = 1<8>
	a5_10 = a5_10 + 136<i32>
	branch a5_10 != 0x42020CEC<32> l2304E696
l2304E6A2:
	word32 a5_13 = 0x42020180<32>
l2304E6B0:
	Mem18[a5_13 + 81<i32>:byte] = 1<8>
	Mem19[a5_13 + 80<i32>:byte] = 0<8>
	Mem20[a5_13 + 82<i32>:byte] = 0<8>
	a5_13 = a5_13 + 83<i32>
	branch a5_13 != 0x420207FC<32> l2304E6B0
l2304E6C4:
	Mem27[0x420207FC<32>:word32] = a0
	return 0x42020000<32>
initializeRecords_exit:


word32 isSubscriptionPresent(word32 ra, word32 a1, word32 dwArg68, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_internal_action
// MayUse:  a1:[0..31] ra:[0..31] Stack +0068:[0..31]
// LiveOut: a0 ra s0 s10 s2 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 tp
// Preserved: sp t2
isSubscriptionPresent_entry:
l2304E6CE:
	word32 s1_31
	word32 s0_62
	word32 s7_71
	word32 s10_241
	word32 s11_242
	word32 s5_238
	word32 s6_239
	word32 s8_240
	word32 s11_235
	word32 s1_236
	word32 s2_237
	word32 s10_234
	word32 s8_233
	word32 s7_232
	word32 s2_229
	word32 s5_230
	word32 s6_231
	word32 s0_228
	word32 ra_61 = topicNameFromThingAndAction(topicNameFromThingAndAction(ra, fp + -192<i32>, a1, 0<32>, dwLocB8, dwLoc8C, dwLoc70, dwLoc6C, dwLoc48, dwLoc24, dwArg68, out s0_228, out s1_31, out s2_229, out s5_230, out s6_231, out s7_232, out s8_233, out s10_234, out s11_235), fp + -112<i32>, s1_31, 1<32>, dwLocB8, dwLoc8C, dwLoc70, dwLoc6C, dwLoc48, dwLoc24, dwArg68, out s0_62, out s1_236, out s2_237, out s5_238, out s6_239, out s7_71, out s8_240, out s10_241, out s11_242)
	word32 s1_110 = 0<32>
	word32 s2_117 = 0<32>
	s0_112 = s0_62
l2304E706:
	word32 s0_112
	branch CONVERT(Mem21[s0_112 + 81<i32>:byte], byte, word32) != 0<32> l2304E722
l2304E70C:
	word32 a5_247
	word32 a2_244
	word32 a3_245
	word32 a4_246
	word32 a1_243
	branch strcmp(fp + -192<i32>, s0_112, out a1_243, out a2_244, out a3_245, out a4_246, out a5_247) == 0<32> l2304E73E
l2304E73E:
	s2_117 = 1<32>
l2304E716:
	word32 a4_251
	word32 a5_252
	word32 a3_250
	word32 a1_248
	word32 a2_249
	branch strcmp(fp + -112<i32>, s0_112, out a1_248, out a2_249, out a3_250, out a4_251, out a5_252) != 0<32> l2304E722
l2304E720:
	s1_110 = 1<32>
l2304E722:
	s0_112 = s0_112 + 83<i32>
	branch s0_112 != s0_62 + 1660<i32> l2304E706
l2304E72A:
	branch s1_110 == 0<32> l2304E72E
l2304E72C:
	s1_110 = s2_117
l2304E72E:
	s0Out = s0_112
	a0Out = s1_110
	s2Out = dwArg98
	s7Out = s7_71
	s10Out = dwArg54
	return ra_61
isSubscriptionPresent_exit:


word32 subscribeToShadowActionAcks(word32 ra, word32 s1, word32 a1, word32 s2, word32 s7, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgC8, word32 dwArg0108, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_internal_action
// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 mstatus ra s0 s2 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
subscribeToShadowActionAcks_entry:
l2304E742:
	word32 a4_15 = 0x420201D1<32>
	word32 a3_16 = 0x420201D1<32>
	word32 a5_39 = 0<32>
	word32 s5_156 = 0x42020180<32>
l2304E778:
	word32 s3_166
	word32 a1_46 = a5_39 & 255<i32>
	branch CONVERT(Mem34[a3_16 + 0<i32>:byte], byte, word32) == 0<32> l2304E878
l2304E878:
	a5_39 = a5_39 + 1<32>
	a3_16 = a3_16 + 83<i32>
	branch a5_39 != 0x14<32> l2304E778
l2304E882:
	s3_166 = 0xFFFFFFFF<32>
l2304E784:
	Mem57[a5_39 + 0x42020224<32>:byte] = 0<8>
	s3_166 = CONVERT(SLICE(a1_46, word16, 0), word16, int32)
l2304E79A:
	word32 s0_152 = 0<32>
l2304E79E:
	word32 s2_176
	word32 s6_157
	word32 s6_64 = s0_152 & 255<i32>
	branch CONVERT(Mem388[a4_15 + 0<i32>:byte], byte, word32) == 0<32> l2304E886
l2304E886:
	s0_152 = s0_152 + 1<32>
	a4_15 = a4_15 + 83<i32>
	branch s0_152 != 0x14<32> l2304E79E
l2304E890:
	branch s3_166 == 0xFFFFFFFF<32> l2304E856
l2304E896:
	s6_157 = 0xFFFFFFFF<32>
	s2_176 = 0<32>
l2304E7AA:
	word32 s0_74 = s0_152 + 83<i32>
	Mem82[s0_74 + 0x420201D1<32>:byte] = 0<8>
	s6_157 = CONVERT(SLICE(s6_64, word16, 0), word16, int32)
	s2_176 = 0<32>
	s0_152 = s0_74 + 0x42020180<32>
	branch s3_166 == 0xFFFFFFFF<32> l2304E8D6
l2304E7C6:
	word32 s1_112
	word32 s10_113
	word32 s11_114
	word32 s6_119
	word32 s8_121
	word32 s0_728
	word32 s7_731
	word32 s2_729
	word32 s5_730
	topicNameFromThingAndAction(ra, s3_166 + 0x420201D3<32>, a1, 0<32>, dwLoc58, dwLoc2C, dwLoc10, dwLoc0C, dwArg18, s7, dwArgC8, out s0_728, out s1_112, out s2_729, out s5_730, out s6_119, out s7_731, out s8_121, out s10_113, out s11_114)
	word32 s2_130 = Mem82[s11_114 + 2044<i32>:int32]
	word32 a1_732
	word32 a2_733
	word32 a4_735
	word32 a5_736
	word32 a3_734
	strlen(s1_112, out a1_732, out a2_733, out a3_734, out a4_735, out a5_736)
	word32 a0_148
	word32 s4_155
	word32 s10_174
	word32 a2_737
	word32 a3_738
	word32 a4_739
	word32 s2_740
	word32 s7_741
	ra = aws_iot_mqtt_subscribe(s2_130, s1_112, 0<32>, s8_121 + 1088<i32>, s6_119, s10_113, mstatus, dwLoc5C, dwLoc4C, s2, dwArg08, dwArg18, dwArg28, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, out s0_152, out s1, out a0_148, out a2_737, out a3_738, out a4_739, out s2_740, out s3_166, out s4_155, out s5_156, out s6_157, out s7_741, out s10_174, out mstatus)
	s2_176 = a0_148
	branch a0_148 != 0<32> l2304E89A
l2304E804:
	Mem181[s1 + 80<i32>:byte] = 1<8>
	Mem182[s1 + 82<i32>:byte] = SLICE(s4_155, byte, 0)
	word32 s0_192
	word32 s10_194
	word32 s11_195
	word32 s6_200
	word32 s8_202
	word32 s2_743
	word32 s1_742
	word32 s5_744
	word32 s7_745
	topicNameFromThingAndAction(ra, s0_152, s10_174, 1<32>, dwLoc58, dwLoc2C, dwLoc10, dwLoc0C, dwArg18, s7, dwArgC8, out s0_192, out s1_742, out s2_743, out s5_744, out s6_200, out s7_745, out s8_202, out s10_194, out s11_195)
	word32 s1_211 = Mem182[s11_195 + 2044<i32>:int32]
	word32 a2_747
	word32 a1_746
	word32 a3_748
	word32 a4_749
	word32 a5_750
	strlen(s0_192, out a1_746, out a2_747, out a3_748, out a4_749, out a5_750)
	word32 a0_225
	word32 s4_232
	word32 s7_249
	word32 a2_751
	word32 s2_752
	word32 s10_753
	word32 a4_240
	word32 a3_227
	ra = aws_iot_mqtt_subscribe(s1_211, s0_192, 0<32>, s8_202 + 1088<i32>, s6_200, s10_194, mstatus, dwLoc5C, dwLoc4C, s2, dwArg08, dwArg18, dwArg28, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, out s0_152, out s1, out a0_225, out a2_751, out a3_227, out a4_240, out s2_752, out s3_166, out s4_232, out s5_156, out s6_157, out s7_249, out s10_753, out mstatus)
	s2_176 = a0_225
	branch a0_225 != 0<32> l2304E89A
l2304E89A:
	word32 a1_259 = s3_166 + 83<i32> + s5_156
	word32 a4_261 = CONVERT(Mem260[a1_259 + 80<i32>:byte], byte, word32)
	Mem262[a1_259 + 81<i32>:byte] = 1<8>
	branch a4_261 != 1<32> l2304E8D0
l2304E8B2:
	word32 s0_265 = Mem262[0x420207FC<32>:int32]
	word32 a3_269
	word32 a4_270
	word32 a1_272
	word32 a2_762
	word32 a5_763
	strlen(a1_259, out a1_272, out a2_762, out a3_269, out a4_270, out a5_763)
	word32 a3_767
	word32 s1_764
	word32 a0_765
	word32 a2_766
	aws_iot_mqtt_unsubscribe(ra, s1, s0_265, a1_272, a3_269, a4_270, s6_157, mstatus, dwLoc5C, dwLoc4C, s2, dwArg08, dwArg18, dwArg28, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgAC, out s0_152, out s1_764, out a0_765, out a2_766, out a3_767, out s2_176, out s5_156, out s6_157, out mstatus)
l2304E8D0:
	branch s6_157 == 0xFFFFFFFF<32> l2304E858
l2304E8D6:
	Mem323[s5_156 + (s6_157 + 83<i32>) + 81<i32>:byte] = 1<8>
l2304E83E:
	Mem325[s0_152 + 80<i32>:byte] = SLICE(s7_249, byte, 0)
	Mem326[s0_152 + 82<i32>:byte] = SLICE(s4_232, byte, 0)
	init_timer(fp + -76<i32>)
	word32 s1_754
	word32 a1_755
	word32 a2_331
	s0_152 = countdown_sec(ra, fp + -76<i32>, 2<32>, a3_227, s10, dwArg00, dwArg04, dwArg28, ra, out s1_754, out a1_755, out a2_331)
l2304E850:
	word32 a0_345
	word32 s2_758
	word32 s3_759
	word32 s4_760
	word32 s8_761
	word32 a5_757
	word32 a1_756
	has_timer_expired(a2_331, a3_227, a4_240, mstatus, dwLoc4C, s10, dwLoc28, dwArgC8, dwArg0108, out a0_345, out a1_756, out a2_331, out a3_227, out a4_240, out a5_757, out s2_758, out s3_759, out s4_760, out s8_761)
	branch a0_345 == 0<32> l2304E850
l2304E856:
	s2_176 = 0<32>
l2304E858:
	s0Out = s0_152
	a0Out = s2_176
	s2Out = s2_176
	s4Out = dwArgDC
	s5Out = s4
	mstatusOut = mstatus
	return dwArg68
subscribeToShadowActionAcks_exit:


word32 incrementSubscriptionCnt(word32 ra, word32 s0, word32 a1, word32 s2, word32 dwArg78, ptr32 & s0Out, ptr32 & s2Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_internal_action
// MayUse:  a1:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0078:[0..31]
// LiveOut: ra s0 s2 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp t2
incrementSubscriptionCnt_entry:
l2304E8E8:
	word32 s1_31
	word32 s0_62
	word32 s2_66
	word32 s5_69
	word32 s10_231
	word32 s11_232
	word32 s6_228
	word32 s8_230
	word32 s7_229
	word32 s10_225
	word32 s1_227
	word32 s11_226
	word32 s6_222
	word32 s8_224
	word32 s7_223
	word32 s0_219
	word32 s5_221
	word32 s2_220
	word32 ra_61 = topicNameFromThingAndAction(topicNameFromThingAndAction(ra, fp + -176<i32>, a1, 0<32>, dwLocA8, dwLoc7C, s2, s0, dwLoc38, dwLoc14, dwArg78, out s0_219, out s1_31, out s2_220, out s5_221, out s6_222, out s7_223, out s8_224, out s10_225, out s11_226), fp + -96<i32>, s1_31, 1<32>, dwLocA8, dwLoc7C, s2, s0, dwLoc38, dwLoc14, dwArg78, out s0_62, out s1_227, out s2_66, out s5_69, out s6_228, out s7_229, out s8_230, out s10_231, out s11_232)
	s0_116 = s0_62
l2304E91C:
	word32 s0_116
	branch CONVERT(Mem82[s0_116 + 81<i32>:byte], byte, word32) != 0<32> l2304E93A
l2304E922:
	word32 a5_237
	word32 a2_234
	word32 a4_236
	word32 a3_235
	word32 a1_233
	branch strcmp(fp + -176<i32>, s0_116, out a1_233, out a2_234, out a3_235, out a4_236, out a5_237) != 0<32> l2304E94E
l2304E94E:
	word32 a3_240
	word32 a5_242
	word32 a4_241
	word32 a2_239
	word32 a1_238
	branch strcmp(fp + -96<i32>, s0_116, out a1_238, out a2_239, out a3_240, out a4_241, out a5_242) == 0<32> l2304E92C
l2304E958:
l2304E92C:
	word32 a5_109 = CONVERT(Mem82[s0_116 + 80<i32>:byte], byte, word32)
	Mem112[s0_116 + 82<i32>:byte] = SLICE(s2_66, byte, 0)
	Mem114[s0_116 + 80<i32>:byte] = SLICE(a5_109 + 1<32>, byte, 0)
l2304E93A:
	s0_116 = s0_116 + 83<i32>
	branch s0_116 != s0_62 + 1660<i32> l2304E91C
l2304E942:
	s0Out = s0_116
	s2Out = s2_66
	s5Out = s5_69
	return ra_61
incrementSubscriptionCnt_exit:


word32 publishToShadowAction(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg94, word32 dwArgB8, word32 dwArg0114, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_internal_action
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +00B8:[0..31] Stack +0114:[0..31]
// LiveOut: a0 mstatus ra s0 s2 s3 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
publishToShadowAction_entry:
l2304E95A:
	branch a0 == 0<32> l2304E9AA
l2304E9AA:
	s0Out = s0
	a0Out = 0xFFFFFFFE<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s9Out = s9
	mstatusOut = mstatus
	return ra
l2304E95C:
	branch a2 == 0<32> l2304E9AE
l2304E9AE:
	s0Out = s0
	a0Out = 0xFFFFFFFE<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s9Out = s9
	mstatusOut = mstatus
	return ra
l2304E962:
	word32 s0_27
	word32 s7_36
	word32 s1_185
	word32 s2_186
	word32 s5_187
	word32 s6_188
	word32 s8_189
	word32 s10_190
	word32 s11_191
	word32 ra_26 = topicNameFromThingAndAction(ra, fp + -96<i32>, a1, 2<32>, dwLoc68, s0, dwLoc20, dwLoc1C, dwArg08, dwArg2C, dwArgB8, out s0_27, out s1_185, out s2_186, out s5_187, out s6_188, out s7_36, out s8_189, out s10_190, out s11_191)
	word32 a1_192
	word32 a2_193
	word32 a3_194
	word32 a4_195
	word32 a5_196
	strlen(s0_27, out a1_192, out a2_193, out a3_194, out a4_195, out a5_196)
	word32 a4_60
	word32 a0_70
	word32 s0_75
	word32 s3_77
	word32 s9_78
	word32 s2_86
	word32 s4_87
	word32 mstatus_97
	word32 a1_197
	word32 a2_198
	word32 a3_199
	word32 a5_200
	word32 ra_74 = aws_iot_mqtt_publish(ra_26, Mem55[0x420207FC<32>:int32], fp + -96<i32>, CONVERT(SLICE(strlen(fp + -96<i32>, out a1_197, out a2_198, out a3_199, out a4_60, out a5_200), word16, 0), word16, word32), fp + -112<i32>, a4_60, s7_36, mstatus, dwLoc68, dwLoc28, dwLoc18, dwLoc08, dwArg28, dwArg38, dwArg48, dwArg68, dwArg74, dwArg78, dwArg94, dwArg0114, out s0_75, out a0_70, out s2_86, out s3_77, out s4_87, out s9_78, out mstatus_97)
	s0Out = s0_75
	a0Out = a0_70
	s2Out = s2_86
	s3Out = s3_77
	s4Out = s4_87
	s9Out = s9_78
	mstatusOut = mstatus_97
	return ra_74
publishToShadowAction_exit:


word32 getNextFreeIndexOfAckWaitList(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_internal_action
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a3
// Preserved: a2 a4 a5 sp
getNextFreeIndexOfAckWaitList_entry:
l2304E9B0:
	word32 a3_11 = 0<32>
	branch a0 == 0<32> l2304E9CA
l2304E9B4:
	word32 a4_15 = 0x4202088C<32>
	word32 a5_12 = 0<32>
l2304E9C0:
	a3_11 = CONVERT(Mem0[a4_15 + 0<i32>:byte], byte, word32)
	branch a3_11 == 0<32> l2304E9CE
l2304E9CE:
	word32 a5_13 = a5_12 + 1<32>
	a5_12 = a5_13 & 255<i32>
	a4_15 = a4_15 + 136<i32>
	branch (a5_13 & 255<i32>) != 0xA<32> l2304E9C0
l2304E9DC:
l2304E9C6:
	Mem18[a0:byte] = SLICE(a5_12, byte, 0)
l2304E9CA:
	return a3_11
getNextFreeIndexOfAckWaitList_exit:


word32 addToAckWaitList(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_internal_action
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..7] a3:[0..31] a4:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +0128:[0..31]
// LiveOut: s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
addToAckWaitList_entry:
l2304E9DE:
	Mem32[a4 + 112<i32>:word32] = a0 + 0x4202089C<32>
	word32 a1_111
	word32 a2_112
	word32 a3_113
	word32 a4_114
	word32 a5_115
	word32 a6_116
	word32 a7_117
	memcpy(a0 + 0x4202089C<32>, a3, 90<i32>, out a1_111, out a2_112, out a3_113, out a4_114, out a5_115, out a6_116, out a7_117)
	word32 a5_54
	word32 a3_58
	word32 a6_59
	word32 a1_118
	word32 a2_119
	word32 a4_120
	word32 a7_121
	memcpy(a0 + 0x420208F6<32>, a1, 0x14<32>, out a1_118, out a2_119, out a3_58, out a4_120, out a5_54, out a6_59, out a7_121)
	Mem69[a5_54 + 116<i32>:word32] = a0 + 0x4202089C<32>
	Mem70[a0 + 0x4202090A<32>:byte] = SLICE(a2, byte, 0)
	init_timer(a0 + 0x42020918<32>)
	word32 s1_80
	word32 a1_122
	word32 a2_123
	countdown_sec(ra, dwLoc28, a6_59, a3_58, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_80, out a1_122, out a2_123)
	Mem84[s1_80 + 120<i32>:byte] = 0<8>
	0<32> = dwArg0128
	return a1
addToAckWaitList_exit:


word32 HandleExpiredResponseCallbacks(word32 ra, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_yield
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: s4
// Trashed: a2 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a0 a1 a3 a4 a7 mstatus ra s10 s11 s5 s6 s7 s9 sp t0 t1 t2 t4 t5 t6 tp
HandleExpiredResponseCallbacks_entry:
l2304EA52:
	word32 s0_109 = 0x42020814<32>
	word32 s1_105 = 0<32>
	word32 s2_111 = 0xA<32>
l2304EA72:
	branch CONVERT(Mem23[s0_109 + 120<i32>:byte], byte, word32) != 0<32> l2304EAA0
l2304EA78:
	word32 a0_31
	word32 a5_33
	word32 s4_42
	word32 a1_249
	word32 s8_250
	word32 s3_41
	s1_105 = has_timer_expired(a2, a3, a4, mstatus, dwLoc0C, dwLoc08, dwArg18, dwArg0108, dwArg0148, out a0_31, out a1_249, out a2, out a3, out a4, out a5_33, out s2_111, out s3_41, out s4_42, out s8_250)
	branch a0_31 == 0<32> l2304EAA0
l2304EA80:
	word32 s0_45 = Mem23[a5_33 + 112<i32>:word32]
	branch a5_33 == 0<32> l2304EA96
l2304EA84:
	call a5_33 (retsize: 0;)
		uses: a2:0<32>,a3:s4_42 + -292<i32>,a4:a4_39,mstatus:mstatus_27,Stack +0014:dwLoc0C,Stack +0018:dwLoc08,Stack +0038:dwArg18,Stack +0128:dwArg0108,Stack +0168:dwArg0148
		defs: s1:s1_54,s2:s2_55,s3:s3_61
	s0_45 = Mem23[a4 + 116<i32>:word32]
l2304EA96:
	Mem69[s0_45 + 120<i32>:byte] = SLICE(s3_41, byte, 0)
	ra = unsubscribeFromAcceptedAndRejected(ra, s0_45, s1_105, s2_111, mstatus, s2, dwLoc08, dwArg08, dwArg28, dwArg38, dwArg3C, dwArg58, out s0_109, out s1_105, out a2, out a3, out a4, out s2_111, out mstatus)
l2304EAA0:
	word32 s1_107 = s1_105 + 1<32>
	s1_105 = s1_107 & 255<i32>
	s0_109 = s0_109 + 136<i32>
	branch (s1_107 & 255<i32>) != s2_111 l2304EA72
l2304EAAE:
	return dwArg04
HandleExpiredResponseCallbacks_exit:


word32 has_timer_expired(word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      subscribeToShadowActionAcks
//      HandleExpiredResponseCallbacks
//      aws_iot_mqtt_yield
//      iot_tls_write
//      iot_tls_read
//      aws_iot_mqtt_internal_send_packet
//      aws_iot_mqtt_internal_wait_for_read
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
has_timer_expired_entry:
l2304EABE:
	word32 a5_15
	word32 a0_14 = xTaskGetTickCount(out a5_15)
	word32 a5_20 = a0_14 - a5_15
	word32 s0_18 = Mem13[a4 + 4<i32>:word32]
	word32 s2_19 = a0_14
	word32 s1_22 = CONVERT(a5_20 <u a4, bool, word32) ^ 1<i32>
	branch a5_20 >=u a4 l2304EAF0
l2304EAE4:
	s0_18 = Mem13[a5_20 + 8<i32>:word32]
	branch a5_20 != a0_14 l2304EAF0
l2304EAEA:
	word32 a0_92
	word32 a2_93
	s0_18 = vTaskDelay(1<32>, a2, a3, a4, a5_20, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_22, out a0_92, out a1, out a2_93, out a3, out a4, out a5_20, out s2_19, out s3, out s4, out s8)
l2304EAF0:
	Mem45[s0_18 + 8<i32>:word32] = s2_19
	0<32> = dwArg38
	a0Out = s1_22
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_20
	s2Out = s2_19
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return s1_22
has_timer_expired_exit:


word32 countdown_ms(word32 a0, word32 a1, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      countdown_sec
//      aws_iot_mqtt_connect
//      _aws_iot_mqtt_internal_disconnect
//      aws_iot_mqtt_publish
//      aws_iot_mqtt_subscribe
//      aws_iot_mqtt_resubscribe
//      aws_iot_mqtt_unsubscribe
//      aws_iot_mqtt_yield
//      aws_iot_mqtt_internal_cycle_read
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a2 s0
// Trashed: a0 a2 a5 s0 s8 t3
// Preserved: sp
countdown_ms_entry:
l2304EB02:
	word32 a5_28
	Mem15[xTaskGetTickCount(out a5_28):word32] = a0
	Mem16[a0 + 8<i32>:word32] = 0<32>
	Mem17[a1 + 4<i32>:word32] = a0
	a2Out = dwArg44
	return a0
countdown_ms_exit:


word32 left_ms(word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iot_tls_read
// MayUse:  a4:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a3 a5
// Preserved: s0 sp
left_ms_entry:
l2304EB22:
	word32 a0_16
	word32 a5_11
	word32 a0_10 = xTaskGetTickCount(out a5_11)
	branch a0_10 - a5_11 >=u a4 l2304EB48
l2304EB48:
	a0_16 = 0<32>
l2304EB3A:
	a5_11 = a5_11 + a4
	a0_16 = a5_11 - a0_10
l2304EB40:
	a5Out = a5_11
	return a0_16
left_ms_exit:


word32 countdown_sec(word32 ra, word32 a0, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      subscribeToShadowActionAcks
//      addToAckWaitList
//      aws_iot_mqtt_yield
//      aws_iot_mqtt_internal_cycle_read
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a1 a2 s0 s1
// Trashed: a0 a1 a2 a5 s0 s1 s8 t3 tp
// Preserved: a3 a4 a7 ra s10 s11 s2 s3 s4 s5 s6 s7 s9 sp t0 t4
countdown_sec_entry:
l2304EB4C:
	word32 s1_13 = a0
	branch a1 <=u 0x418937<32> l2304EB7E
l2304EB64:
	word32 a0_116
	word32 a1_117
	word32 a2_118
	word32 a4_119
	word32 a5_120
	word32 s4_121
	word32 s8_122
	puts(0x23087B98<32>, out a0_116, out a1_117, out a2_118, out a4_119, out a5_120, out s4_121, out s8_122)
	word32 a0_123
	word32 a1_124
	word32 a2_125
	word32 a3_126
	word32 a4_127
	word32 a5_128
	word32 a7_129
	word32 s2_130
	word32 s3_131
	word32 s4_132
	word32 s5_133
	word32 s6_134
	word32 s7_135
	word32 s8_136
	word32 s9_137
	word32 s10_138
	word32 s11_139
	word32 t4_140
	printf(ra, 0x23087BA4<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_13, out a0_123, out a1_124, out a2_125, out a3_126, out a4_127, out a5_128, out a7_129, out s2_130, out s3_131, out s4_132, out s5_133, out s6_134, out s7_135, out s8_136, out s9_137, out s10_138, out s11_139, out t4_140)
l2304EB7E:
l2304EB90_thunk_countdown_ms:
	word32 a2_66
	word32 s0_68 = countdown_ms(s1_13, a1 + 1000<i32>, out a2_66)
	s1Out = s1_13
	a1Out = a1 + 1000<i32>
	a2Out = a2_66
	return s0_68
countdown_sec_exit:


void init_timer(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      subscribeToShadowActionAcks
//      addToAckWaitList
//      aws_iot_mqtt_init
//      aws_iot_mqtt_connect
//      _aws_iot_mqtt_internal_disconnect
//      aws_iot_mqtt_publish
//      aws_iot_mqtt_subscribe
//      aws_iot_mqtt_resubscribe
//      aws_iot_mqtt_unsubscribe
//      aws_iot_mqtt_yield
//      aws_iot_mqtt_internal_cycle_read
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
init_timer_entry:
l2304EB94:
	Mem4[a0:word32] = 0<32>
	Mem5[a0 + 4<i32>:word32] = 0<32>
	Mem6[a0 + 8<i32>:word32] = 0<32>
	return
init_timer_exit:


word32 jsmn_parse(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg3C, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonValidAndParse
//      extractClientToken
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] Stack +003C:[0..31] Stack +0148:[0..31]
// LiveOut: a0 s0 s1 s2 s3 s4 s5
// Trashed: a0 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
jsmn_parse_entry:
l2304EBA2:
	word32 a0_1155 = Mem27[a0 + 4<i32>:word32]
l2304EBDA:
	word32 a7_41 = Mem40[a0:int32]
	branch a7_41 >=u a2 l2304EBEE
l2304EBE2:
	word32 t1_45 = CONVERT(Mem40[a1 + a7_41:byte], byte, word32)
	branch t1_45 != 0<32> l2304EC1C
l2304EC1C:
	branch t1_45 == 44<i32> l2304EE94
l2304EE94:
	branch a3 == 0<32> l2304ED68
l2304EE98:
	word32 a7_48 = Mem40[a0 + 8<i32>:int32]
	branch a7_48 == 0xFFFFFFFF<32> l2304ED68
l2304EEA0:
	branch (CONVERT(Mem40[(a7_48 << 4<i32>) + a3:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>) <=u 1<32> l2304ED68
l2304EEB2:
	word32 a7_56 = Mem40[a0 + 4<i32>:int32]
	word32 t3_57 = a7_56 + -1<i32>
	word32 a7_59 = (a7_56 << 4<i32>) + a3
l2304EEBE:
	branch t3_57 < 0<32> l2304ED68
l2304EEC2:
	branch (CONVERT(Mem40[a7_59 + -16<i32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>) >u 1<32> l2304EEE6
l2304EED0:
	branch Mem40[a7_59 + -12<i32>:int32] == 0xFFFFFFFF<32> l2304EEE6
l2304EED8:
	branch Mem40[a7_59 + -8<i32>:int32] != 0xFFFFFFFF<32> l2304EEE6
l2304EEE6:
	t3_57 = t3_57 + 0xFFFFFFFF<32>
	a7_59 = a7_59 + 0xFFFFFFF0<32>
l2304EEE0:
	Mem76[a0 + 8<i32>:word32] = t3_57
l2304EC20:
	branch t1_45 >u 44<i32> l2304EC88
l2304EC88:
	branch t1_45 == 93<i32> l2304ED06
l2304EC8C:
	branch t1_45 >u 93<i32> l2304ECFA
l2304ECFA:
	branch t1_45 == 123<i32> l2304EC9C
l2304ED02:
	branch t1_45 != 125<i32> l2304EC38
l2304ED06:
	branch a3 == 0<32> l2304ED68
l2304ED08:
	s2 = 1<32>
	branch t1_45 == 125<i32> l2304ED10
l2304ED0E:
	s2 = 2<32>
l2304ED10:
	word32 t3_89 = Mem40[a0 + 4<i32>:int32]
	word32 t1_102 = t3_89 + -1<i32>
	word32 t3_104 = (t3_89 << 4<i32>) + a3
l2304ED1C:
	branch t1_102 >= 0<32> l2304ED28
l2304ED28:
	s1 = t3_104 + -16<i32>
	branch Mem40[t3_104 + -12<i32>:int32] == 0xFFFFFFFF<32> l2304ED74
l2304ED34:
	branch Mem40[t3_104 + -8<i32>:int32] != 0xFFFFFFFF<32> l2304ED74
l2304ED74:
	t1_102 = t1_102 + 0xFFFFFFFF<32>
	t3_104 = s1
l2304ED3C:
	branch CONVERT(Mem40[s1:byte], byte, word32) != s2 l2304ED24
l2304ED44:
	Mem116[a0 + 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem117[s1 + 8<i32>:word32] = a7_41 + 1<32>
	word32 a7_121 = (t1_102 << 4<u32>) + a3
l2304ED54:
	branch Mem117[a7_121 + 4<i32>:int32] == 0xFFFFFFFF<32> l2304ED7A
l2304ED5C:
	branch Mem117[a7_121 + 8<i32>:int32] != 0xFFFFFFFF<32> l2304ED7A
l2304ED7A:
	t1_102 = t1_102 + 0xFFFFFFFF<32>
	a7_121 = a7_121 + 0xFFFFFFF0<32>
	branch t1_102 != 0xFFFFFFFF<32> l2304ED54
l2304ED82:
l2304ED64:
	Mem135[a0 + 8<i32>:word32] = t1_102
l2304ED20:
	branch t1_102 != 0xFFFFFFFF<32> l2304ED68
l2304EC90:
	branch t1_45 == 58<i32> l2304ECEE
l2304EC94:
	branch t1_45 != 91<i32> l2304EC38
l2304EC9C:
	a0_1155 = a0_1155 + 1<32>
	branch a3 == 0<32> l2304ED68
l2304ECA0:
	word32 a7_144 = Mem40[a0 + 4<i32>:int32]
	branch a7_144 >=u a4 l2304ED96
l2304ECA8:
	Mem149[a0 + 4<i32>:word32] = a7_144 + 1<i32>
	word32 a7_150 = (a7_144 << 4<i32>) + a3
	Mem152[a7_150 + 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem153[a7_150 + 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem154[a7_150 + 12<i32>:word32] = 0<32>
	word32 t3_155 = Mem154[a0 + 8<i32>:int32]
	branch t3_155 == 0xFFFFFFFF<32> l2304ECD6
l2304ECC8:
	word32 t3_157 = (t3_155 << 4<i32>) + a3
	Mem160[t3_157 + 12<i32>:word32] = Mem154[t3_157 + 12<i32>:int32] + 1<32>
l2304ECD6:
	s1 = 123<i32>
	word32 t3_162 = 1<32>
	branch t1_45 == 123<i32> l2304ECE2
l2304ECE0:
	t3_162 = 2<32>
l2304ECE2:
	Mem169[a7_150:byte] = SLICE(t3_162, byte, 0)
	Mem173[a7_150 + 4<i32>:word32] = Mem169[a0:int32]
l2304ECEE:
	Mem178[a0 + 8<i32>:word32] = Mem175[a0 + 4<i32>:int32] + 0xFFFFFFFF<32>
l2304EC24:
	branch t1_45 == 0xD<32> l2304ED68
l2304EC2A:
	branch t1_45 >u 0xD<32> l2304EC3C
l2304EC3C:
	branch t1_45 == 32<i32> l2304ED68
l2304EC40:
	branch t1_45 != 34<i32> l2304EC38
l2304EC48:
	Mem183[a0:word32] = a7_41 + 1<i32>
	s5 = 34<i32>
l2304EC6C:
	word32 t3_193 = Mem192[a0:int32]
	branch t3_193 >=u a2 l2304EC80
l2304EC74:
	word32 t1_197 = CONVERT(Mem192[a1 + t3_193:byte], byte, word32)
	branch t1_197 != 0<32> l2304ED84
l2304ED84:
	branch t1_197 != 34<i32> l2304EDE2
l2304EDE2:
	branch t1_197 != 92<i32> l2304EE0C
l2304EDE6:
	branch t3_193 + 1<i32> >=u a2 l2304EE0C
l2304EDEE:
	Mem201[a0:word32] = t3_193 + 1<i32>
	word32 t1_203 = CONVERT(Mem201[t3_193 + 1<i32> + a1:byte], byte, word32)
	branch t1_203 == 102<i32> l2304EE0C
l2304EDFC:
	branch t1_203 >u 102<i32> l2304EE26
l2304EE26:
	branch t1_203 == 114<i32> l2304EE0C
l2304EE2A:
	branch t1_203 >u 114<i32> l2304EE34
l2304EE34:
	s1 = 116<i32>
	branch t1_203 == 116<i32> l2304EE0C
l2304EE3C:
	s1 = 117<i32>
	branch t1_203 != 117<i32> l2304EE20
l2304EE44:
	Mem209[a0:word32] = t3_193 + 2<32>
	s1 = 4<32>
l2304EE4C:
	word32 t3_213 = Mem212[a0:int32]
	branch t3_213 >=u a2 l2304EE88
l2304EE54:
	word32 t1_217 = CONVERT(Mem212[a1 + t3_213:byte], byte, word32)
	branch t1_217 == 0<32> l2304EE88
l2304EE60:
	s2 = t1_217 + -48<i32> & 255<i32>
	branch s2 <=u 9<32> l2304EE7E
l2304EE6C:
	s2 = 5<32>
	branch ((t1_217 & -33<i32>) + -65<i32> & 255<i32>) >u 5<32> l2304EE20
l2304EE7E:
	Mem228[a0:word32] = t3_213 + 1<32>
	s1 = s1 + 0xFFFFFFFF<32>
	branch s1 != 0<32> l2304EE4C
l2304EE88:
	Mem236[a0:word32] = Mem233[a0:int32] + 0xFFFFFFFF<32>
l2304EE2E:
	branch t1_203 != 110<i32> l2304EE20
l2304EE32:
l2304EE00:
	branch t1_203 == 47<i32> l2304EE0C
l2304EE04:
	branch t1_203 >u 47<i32> l2304EE18
l2304EE18:
	branch t1_203 == 92<i32> l2304EE0C
l2304EE1C:
	branch t1_203 == 98<i32> l2304EE0C
l2304EE08:
	branch t1_203 != 34<i32> l2304EE20
l2304EE0C:
	Mem244[a0:word32] = Mem241[a0:int32] + 1<32>
l2304ED88:
	branch a3 == 0<32> l2304EDC6
l2304ED8A:
	word32 t1_250 = Mem192[a0 + 4<i32>:int32]
	branch t1_250 <u a4 l2304ED9A
l2304ED9A:
	Mem257[a0 + 4<i32>:word32] = t1_250 + 1<i32>
	word32 a7_259 = (t1_250 << 4<u32>) + a3
	Mem265[a7_259 + 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem266[a7_259 + 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem267[a7_259 + 12<i32>:word32] = 0<32>
	word32 t1_268 = Mem267[a0:int32]
	Mem270[a7_259:byte] = 3<8>
	Mem276[a7_259 + 4<i32>:word32] = a7_41 + 1<i32>
	Mem277[a7_259 + 8<i32>:word32] = t1_268
l2304EC80:
	Mem285[a0:word32] = a7_41
l2304EC2E:
	branch (t1_45 + 0xFFFFFFF7<32> & 255<i32>) <=u 1<32> l2304ED68
l2304EC38:
	s1 = 0xD<32>
l2304EF0C:
	word32 t3_291 = Mem290[a0:int32]
	branch t3_291 >=u a2 l2304EF36
l2304EF14:
	word32 t1_295 = CONVERT(Mem290[a1 + t3_291:byte], byte, word32)
	branch t1_295 == 0<32> l2304EF36
l2304EF20:
	branch t1_295 == 32<i32> l2304EF36
l2304EF24:
	branch t1_295 >u 32<i32> l2304EEEC
l2304EEEC:
	branch t1_295 == 58<i32> l2304EF36
l2304EEF0:
	branch t1_295 >u 58<i32> l2304EF40
l2304EF40:
	branch t1_295 == 93<i32> l2304EF36
l2304EF44:
	branch t1_295 != 125<i32> l2304EEF8
l2304EF48:
l2304EEF4:
	branch t1_295 == 44<i32> l2304EF36
l2304EF28:
	branch t1_295 <u 9<32> l2304EEF8
l2304EF2C:
	s2 = 0xA<32>
	branch t1_295 <=u 0xA<32> l2304EF36
l2304EF32:
	branch t1_295 != 0xD<32> l2304EEF8
l2304EEF8:
	s2 = 94<i32>
	branch (t1_295 + 0xFFFFFFE0<32> & 255<i32>) >u 94<i32> l2304EE20
l2304EE20:
	Mem313[a0:word32] = a7_41
l2304ED24:
	a0_1155 = 0xFFFFFFFE<32>
l2304EF06:
	Mem317[a0:word32] = t3_291 + 1<32>
l2304EF36:
	branch a3 != 0<32> l2304EF4A
l2304EF4A:
	word32 t1_324 = Mem290[a0 + 4<i32>:int32]
	branch t1_324 >=u a4 l2304ED92
l2304ED92:
	Mem332[a0:word32] = a7_41
l2304ED96:
	a0_1155 = 0xFFFFFFFF<32>
l2304EF52:
	Mem336[a0 + 4<i32>:word32] = t1_324 + 1<i32>
	word32 t1_337 = (t1_324 << 4<i32>) + a3
	Mem342[t1_337 + 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem343[t1_337 + 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem344[t1_337 + 12<i32>:word32] = 0<32>
	word32 t3_345 = Mem344[a0:int32]
	Mem347[t1_337:byte] = 4<8>
	Mem348[t1_337 + 4<i32>:word32] = a7_41
	Mem349[t1_337 + 8<i32>:word32] = t3_345
	Mem352[a0:word32] = Mem349[a0:int32] + 0xFFFFFFFF<32>
	s1 = 4<32>
l2304EF38:
	Mem355[a0:word32] = t3_291 + 0xFFFFFFFF<32>
l2304EDC6:
	word32 a7_358 = Mem357[a0 + 8<i32>:int32]
	a0_1155 = a0_1155 + 1<32>
	branch a7_358 == 0xFFFFFFFF<32> l2304ED68
l2304EDD0:
	branch a3 == 0<32> l2304ED68
l2304EDD2:
	word32 a7_373 = (a7_358 << 4<i32>) + a3
	Mem376[a7_373 + 12<i32>:word32] = Mem357[a7_373 + 12<i32>:int32] + 1<32>
l2304ED68:
	Mem382[a0:word32] = Mem378[a0:int32] + 1<32>
l2304EBEE:
	branch a3 == 0<32> l2304EC00
l2304EBF0:
	word32 a5_386 = Mem40[a0 + 4<i32>:word32]
	word32 a4_387 = a5_386 + -1<i32>
	word32 a3_389 = a3 + (a5_386 << 4<i32>)
l2304EBFC:
	branch a4_387 >= 0<32> l2304EF88
l2304EF88:
	branch Mem40[a3_389 + -12<i32>:int32] == 0xFFFFFFFF<32> l2304EF98
l2304EF90:
	branch Mem40[a3_389 + -8<i32>:int32] == 0xFFFFFFFF<32> l2304EC84
l2304EC84:
	a0_1155 = 0xFFFFFFFD<32>
l2304EF98:
	a4_387 = a4_387 + 0xFFFFFFFF<32>
	a3_389 = a3_389 + 0xFFFFFFF0<32>
l2304EC00:
	0<32> = dwArg0148
	0<32> = dwArg3C
	s1Out = s1
	a0Out = a0_1155
	s2Out = s2
	s3Out = 9<32>
	s4Out = dwArg98
	s5Out = s5
	return dwLoc04
jsmn_parse_exit:


void jsmn_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonValidAndParse
//      extractClientToken
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
jsmn_init_entry:
l2304EF9E:
	Mem5[a0:word32] = 0<32>
	Mem6[a0 + 4<i32>:word32] = 0<32>
	Mem7[7<32>:word32] = a0
	return
jsmn_init_exit:


word32 jsoneq(word32 a0, word32 a1, word32 a2, word32 dwArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonKeyMatchingAndUpdateValue
//      extractClientToken
//      extractVersionNumber
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s4 s8 t1 t3
// Preserved: sp
jsoneq_entry:
l2304EFAC:
	word32 a4_5 = CONVERT(Mem0[a1:byte], byte, word32)
	branch a4_5 == 3<32> l2304EFC6
l2304EFC6:
	word32 a0_30
	word32 a5_23
	word32 a2_105
	word32 a1_24
	word32 a3_21
	word32 a4_22
	word32 a0_20 = strlen(a2, out a1_24, out a2_105, out a3_21, out a4_22, out a5_23)
	word32 a2_26 = a0_20
	word32 s0_28 = Mem19[a0_20 + 4<i32>:word32]
	word32 a5_29 = a5_23 - a0_20
	branch a0_20 != a5_29 l2304EFBA
l2304EFBA:
	a0_30 = 0xFFFFFFFF<32>
l2304EFE6:
	a0_30 = 0<32> - CONVERT(strncmp(a0_20 + a0, a1_24, dwArg44, out a1_24, out a2_26, out a3_21, out a4_22, out a5_29) != 0<32>, bool, word32)
l2304EFBC:
	s1Out = a0
	a0Out = a0_30
	a1Out = a1_24
	a2Out = a2_26
	a3Out = a3_21
	a4Out = a4_22
	a5Out = a5_29
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s0_28
l2304EFB6:
	s1Out = s1
	a0Out = 0xFFFFFFFF<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4_5
	a5Out = 3<32>
	s4Out = s4
	s8Out = s8
	return s0
jsoneq_exit:


word32 parseUnsignedInteger32Value(word32 ra, word32 a1, word32 a2, word32 dwArg04, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonKeyMatchingAndUpdateValue
//      extractVersionNumber
// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31] Stack +0004:[0..31]
// LiveOut: a0 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
parseUnsignedInteger32Value_entry:
l2304EFF8:
	word32 a4_5 = CONVERT(Mem0[a2:byte], byte, word32)
	branch a4_5 != 4<32> l2304F03A
l2304F002:
	a4_5 = 45<i32>
	a3 = CONVERT(Mem0[a1 + 4<32>:byte], byte, word32)
	branch a3 == 45<i32> l2304F03A
l2304F03A:
	s0Out = s0
	s1Out = s1
	a0Out = -42<i32>
	a3Out = a3
	a4Out = a4_5
	a5Out = -42<i32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return ra
l2304F012:
	word32 a0_22
	word32 a3_25
	word32 s0_30
	word32 s1_31
	word32 s2_34
	word32 s3_35
	word32 s4_36
	word32 s5_37
	word32 s6_38
	word32 a4_157
	word32 ra_29 = sscanf(ra, a1 + 4<32>, 0x2308C990<32>, dwArg04, out s0_30, out s1_31, out a0_22, out a3_25, out a4_157, out s2_34, out s3_35, out s4_36, out s5_37, out s6_38)
	word32 a5_47 = 0<32>
	branch a0_22 == 1<32> l2304F032
l2304F02E:
	a5_47 = -42<i32>
l2304F032:
	s0Out = s0_30
	s1Out = s1_31
	a0Out = a5_47
	a3Out = a3_25
	a4Out = 1<32>
	a5Out = a5_47
	s2Out = s2_34
	s3Out = s3_35
	s4Out = s4_36
	s5Out = s5_37
	s6Out = s6_38
	return ra_29
parseUnsignedInteger32Value_exit:


word32 parseUnsignedInteger16Value(word32 ra, word32 a1, word32 a2, word32 dwArg04, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonKeyMatchingAndUpdateValue
// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31] Stack +0004:[0..31]
// LiveOut: a4 a5 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
parseUnsignedInteger16Value_entry:
l2304F042:
	word32 a4_5 = CONVERT(Mem0[a2:byte], byte, word32)
	branch a4_5 != 4<32> l2304F084
l2304F04C:
	a4_5 = 45<i32>
	branch CONVERT(Mem0[a1 + 4<32>:byte], byte, word32) == 45<i32> l2304F084
l2304F084:
	a5Out = -42<i32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return a4_5
l2304F05C:
	word32 a0_22
	word32 s2_34
	word32 s3_35
	word32 s5_37
	word32 s6_38
	word32 s4_155
	word32 a4_154
	word32 a3_153
	word32 s1_152
	word32 s0_151
	sscanf(ra, a1 + 4<32>, 0x23087BD8<32>, dwArg04, out s0_151, out s1_152, out a0_22, out a3_153, out a4_154, out s2_34, out s3_35, out s4_155, out s5_37, out s6_38)
	word32 a5_47 = 0<32>
	branch a0_22 == 1<32> l2304F07C
l2304F078:
	a5_47 = -42<i32>
l2304F07C:
	a5Out = a5_47
	s2Out = s2_34
	s3Out = s3_35
	s5Out = s5_37
	s6Out = s6_38
	return 1<32>
parseUnsignedInteger16Value_exit:


word32 parseUnsignedInteger8Value(word32 ra, word32 a1, word32 a2, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonKeyMatchingAndUpdateValue
// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a4 a5 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
parseUnsignedInteger8Value_entry:
l2304F08C:
	word32 a4_5 = CONVERT(Mem0[a2:byte], byte, word32)
	word32 a5_10 = 4<32>
	branch a4_5 == 4<32> l2304F0A8
l2304F0A8:
	a4_5 = 45<i32>
	a5_10 = a1 + 4<32>
	branch CONVERT(Mem0[a1 + 4<32>:byte], byte, word32) == 45<i32> l2304F096
l2304F0B8:
	word32 a0_23
	word32 s0_31
	word32 s2_35
	word32 s3_36
	word32 s5_38
	word32 s6_39
	word32 s4_187
	word32 a3_186
	word32 s1_185
	word32 a4_27
	sscanf(ra, a1 + 4<32>, 0x2308C990<32>, dwLoc0C, out s0_31, out s1_185, out a0_23, out a3_186, out a4_27, out s2_35, out s3_36, out s4_187, out s5_38, out s6_39)
	branch a0_23 != 1<32> l2304F09C
l2304F0D6:
	a4_27 = 255<i32>
	branch false l2304F09C
l2304F09C:
l2304F0E0:
	Mem51[s0_31:byte] = 1<8>
l2304F0A0:
	a5Out = 1<32>
	s2Out = s2_35
	s3Out = s3_36
	s5Out = s5_38
	s6Out = s6_39
	return a4_27
l2304F096:
	a5Out = a5_10
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return a4_5
parseUnsignedInteger8Value_exit:


word32 parseInteger32Value(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg04, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonKeyMatchingAndUpdateValue
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0004:[0..31]
// LiveOut: a4 a5 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
parseInteger32Value_entry:
l2304F0E8:
	word32 a4_5 = CONVERT(Mem0[a2:byte], byte, word32)
	branch a4_5 != 4<32> l2304F120
l2304F120:
	a5Out = -42<i32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return a4_5
l2304F0F2:
	word32 a0_20
	word32 s2_32
	word32 s3_33
	word32 s5_35
	word32 s6_36
	word32 s4_130
	word32 a4_129
	word32 a3_128
	word32 s1_127
	word32 s0_126
	sscanf(ra, a0 + a1, 0x23075514<32>, dwArg04, out s0_126, out s1_127, out a0_20, out a3_128, out a4_129, out s2_32, out s3_33, out s4_130, out s5_35, out s6_36)
	word32 a5_45 = 0<32>
	branch a0_20 == 1<32> l2304F118
l2304F114:
	a5_45 = -42<i32>
l2304F118:
	a5Out = a5_45
	s2Out = s2_32
	s3Out = s3_33
	s5Out = s5_35
	s6Out = s6_36
	return 1<32>
parseInteger32Value_exit:


word32 parseInteger16Value(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonKeyMatchingAndUpdateValue
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a4 a5 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
parseInteger16Value_entry:
l2304F128:
	word32 a4_5 = CONVERT(Mem0[a2:byte], byte, word32)
	branch a4_5 == 4<32> l2304F144
l2304F144:
	word32 a0_21
	word32 a4_25
	word32 s0_29
	word32 s2_33
	word32 s3_34
	word32 s5_36
	word32 s6_37
	word32 a3_162
	word32 s4_163
	word32 s1_161
	sscanf(ra, a0 + a1, 0x23087BD4<32>, dwLoc0C, out s0_29, out s1_161, out a0_21, out a3_162, out a4_25, out s2_33, out s3_34, out s4_163, out s5_36, out s6_37)
	word32 a5_45 = 1<32>
	branch a0_21 != 1<32> l2304F138
l2304F166:
	a5_45 = a4_25 + 0x8000000<32>
	branch a4_25 >=u 0xF8000000<32> l2304F138
l2304F138:
l2304F172:
	Mem51[s0_29:word16] = SLICE(a4_25, word16, 0)
l2304F13C:
	a5Out = a5_45
	s2Out = s2_33
	s3Out = s3_34
	s5Out = s5_36
	s6Out = s6_37
	return a4_25
l2304F132:
	a5Out = 4<32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return a4_5
parseInteger16Value_exit:


word32 parseInteger8Value(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonKeyMatchingAndUpdateValue
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a4 a5 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
parseInteger8Value_entry:
l2304F17A:
	word32 a4_5 = CONVERT(Mem0[a2:byte], byte, word32)
	branch a4_5 == 4<32> l2304F196
l2304F196:
	word32 a0_21
	word32 s0_29
	word32 s2_33
	word32 s3_34
	word32 s5_36
	word32 s6_37
	word32 a3_161
	word32 s4_162
	word32 s1_160
	word32 a4_25
	sscanf(ra, a0 + a1, 0x23087BD4<32>, dwLoc0C, out s0_29, out s1_160, out a0_21, out a3_161, out a4_25, out s2_33, out s3_34, out s4_162, out s5_36, out s6_37)
	branch a0_21 != 1<32> l2304F18A
l2304F1B8:
	a4_25 = 255<i32>
	branch false l2304F18A
l2304F18A:
l2304F1C6:
	Mem50[s0_29:byte] = 1<8>
l2304F18E:
	a5Out = 1<32>
	s2Out = s2_33
	s3Out = s3_34
	s5Out = s5_36
	s6Out = s6_37
	return a4_25
l2304F184:
	a5Out = 4<32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return a4_5
parseInteger8Value_exit:


word32 parseFloatValue(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg04, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonKeyMatchingAndUpdateValue
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0004:[0..31]
// LiveOut: a4 a5 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
parseFloatValue_entry:
l2304F1CE:
	word32 a4_5 = CONVERT(Mem0[a2:byte], byte, word32)
	branch a4_5 != 4<32> l2304F206
l2304F206:
	a5Out = -42<i32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return a4_5
l2304F1D8:
	word32 a0_20
	word32 s2_32
	word32 s3_33
	word32 s5_35
	word32 s6_36
	word32 s4_130
	word32 a4_129
	word32 a3_128
	word32 s1_127
	word32 s0_126
	sscanf(ra, a0 + a1, 0x23087BD0<32>, dwArg04, out s0_126, out s1_127, out a0_20, out a3_128, out a4_129, out s2_32, out s3_33, out s4_130, out s5_35, out s6_36)
	word32 a5_45 = 0<32>
	branch a0_20 == 1<32> l2304F1FE
l2304F1FA:
	a5_45 = -42<i32>
l2304F1FE:
	a5Out = a5_45
	s2Out = s2_32
	s3Out = s3_33
	s5Out = s5_35
	s6Out = s6_36
	return 1<32>
parseFloatValue_exit:


word32 parseDoubleValue(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg04, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonKeyMatchingAndUpdateValue
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0004:[0..31]
// LiveOut: a4 a5 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
parseDoubleValue_entry:
l2304F20E:
	word32 a4_5 = CONVERT(Mem0[a2:byte], byte, word32)
	branch a4_5 != 4<32> l2304F246
l2304F246:
	a5Out = -42<i32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return a4_5
l2304F218:
	word32 a0_20
	word32 s2_32
	word32 s3_33
	word32 s5_35
	word32 s6_36
	word32 s4_130
	word32 a4_129
	word32 a3_128
	word32 s1_127
	word32 s0_126
	sscanf(ra, a0 + a1, 0x23087BCC<32>, dwArg04, out s0_126, out s1_127, out a0_20, out a3_128, out a4_129, out s2_32, out s3_33, out s4_130, out s5_35, out s6_36)
	word32 a5_45 = 0<32>
	branch a0_20 == 1<32> l2304F23E
l2304F23A:
	a5_45 = -42<i32>
l2304F23E:
	a5Out = a5_45
	s2Out = s2_32
	s3Out = s3_33
	s5Out = s5_35
	s6Out = s6_36
	return 1<32>
parseDoubleValue_exit:


word32 parseBooleanValue(word32 a0, word32 a1, word32 a2, word32 dwArg38, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonKeyMatchingAndUpdateValue
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut: a4 a5 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 t1 t3 tp
// Preserved: s0 sp
parseBooleanValue_entry:
l2304F24E:
	word32 a4_5 = CONVERT(Mem0[a2:byte], byte, word32)
	branch a4_5 == 4<32> l2304F26E
l2304F26E:
	word32 a5_45
	word32 a1_107
	word32 a2_108
	word32 a3_109
	word32 a5_110
	word32 a4_29
	word32 a0_26 = strncmp(a0 + a1, 0x23072E58<32>, 4<32>, out a1_107, out a2_108, out a3_109, out a4_29, out a5_110)
	branch a0_26 != 0<32> l2304F29A
l2304F29A:
	word32 a1_111
	word32 a2_112
	word32 a3_113
	branch strncmp(a0_26 + a1, 0x23072E60<32>, 5<32>, out a1_111, out a2_112, out a3_113, out a4_29, out a5_45) != 0<32> l2304F25E
l2304F25E:
l2304F2AE:
	Mem52[a0:byte] = 0<8>
l2304F292:
	Mem54[a0:byte] = 1<8>
	a5_45 = 1<32>
l2304F262:
	0<32> = dwArg38
	a5Out = a5_45
	s2Out = a1
	return a4_29
l2304F258:
	a5Out = 4<32>
	s2Out = s2
	return a4_5
parseBooleanValue_exit:


word32 parseStringValue(word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      isJsonKeyMatchingAndUpdateValue
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] s1:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t1 t3 tp
// Preserved: s0 sp
parseStringValue_entry:
l2304F2B4:
	word32 a4_16
	word32 a6_11 = Mem9[a3 + 4<i32>:int32]
	word32 s1_15 = s1 - a6_11
	branch CONVERT(Mem9[Mem9[s1 + 8<i32>:word32]:byte], byte, word32) != 3<32> l2304F2FE
l2304F2FE:
	a4_16 = -42<i32>
l2304F2D0:
	a4_16 = -45<i32>
	branch a1 <u s1_15 + 1<i32> l2304F2F2
l2304F2DC:
	word32 a3_67
	word32 a4_68
	word32 a5_69
	strncpy(a0, a2 + a6_11, s1_15, out a3_67, out a4_68, out a5_69)
	a5 = a0 + s1_15
	Mem36[a5:byte] = 0<8>
	a4_16 = 0<32>
l2304F2F2:
	a5Out = a5
	return a4_16
parseStringValue_exit:


word32 aws_iot_mqtt_get_client_state(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      aws_iot_mqtt_disconnect
//      aws_iot_mqtt_attempt_reconnect
//      aws_iot_mqtt_publish
//      aws_iot_mqtt_subscribe
//      aws_iot_mqtt_resubscribe
//      aws_iot_mqtt_unsubscribe
//      aws_iot_mqtt_yield
//      aws_iot_mqtt_internal_cycle_read
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
aws_iot_mqtt_get_client_state_entry:
l2304F304:
	branch a0 == 0<32> l2304F30C
l2304F30C:
	return 0<32>
l2304F306:
	return CONVERT(Mem0[a0 + 24<i32>:byte], byte, word32)
aws_iot_mqtt_get_client_state_exit:


word32 aws_iot_mqtt_client_lock_mutex(word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_set_client_state
//      aws_iot_mqtt_internal_send_packet
//      aws_iot_mqtt_internal_cycle_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a2 a3 a4 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
aws_iot_mqtt_client_lock_mutex_entry:
l2304F310:
	branch a0 == 0<32> l2304F324
l2304F312:
	branch a1 == 0<32> l2304F324
l2304F324:
	a0Out = 0xFFFFFFFE<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s1
l2304F314:
	branch CONVERT(Mem0[a0 + 1088<i32>:byte], byte, word32) != 0<32> l2304F320
l2304F320:
l2304F320_thunk_aws_iot_thread_mutex_lock:
	word32 a0_14
	word32 a1_15
	word32 a2_16
	word32 a3_17
	word32 a4_18
	word32 s2_22
	word32 s3_23
	word32 s4_24
	word32 s1_21 = aws_iot_thread_mutex_lock(s1, a1, a2, a3, a4, mstatus, dwArg04, dwArg28, dwArg84, dwArgF8, dwArg0138, out a0_14, out a1_15, out a2_16, out a3_17, out a4_18, out s2_22, out s3_23, out s4_24)
	a0Out = a0_14
	a1Out = a1_15
	a2Out = a2_16
	a3Out = a3_17
	a4Out = a4_18
	s2Out = s2_22
	s3Out = s3_23
	s4Out = s4_24
	return s1_21
l2304F31C:
l2304F31C_thunk_aws_iot_thread_mutex_trylock:
	word32 a0_28
	word32 a1_29
	word32 a2_30
	word32 a3_31
	word32 a4_32
	word32 s2_36
	word32 s3_37
	word32 s4_38
	word32 s1_35 = aws_iot_thread_mutex_trylock(s1, a1, a2, a3, a4, mstatus, dwArg04, dwArg28, dwArg84, dwArgF8, dwArg0138, out a0_28, out a1_29, out a2_30, out a3_31, out a4_32, out s2_36, out s3_37, out s4_38)
	a0Out = a0_28
	a1Out = a1_29
	a2Out = a2_30
	a3Out = a3_31
	a4Out = a4_32
	s2Out = s2_36
	s3Out = s3_37
	s4Out = s4_38
	return s1_35
aws_iot_mqtt_client_lock_mutex_exit:


word32 aws_iot_mqtt_client_unlock_mutex(word32 a0, word32 a1, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_set_client_state
//      aws_iot_mqtt_internal_send_packet
//      aws_iot_mqtt_internal_cycle_read
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 s1 s2 s3 s5 s6 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_mqtt_client_unlock_mutex_entry:
l2304F328:
	branch a0 == 0<32> l2304F332
l2304F32A:
	branch a1 == 0<32> l2304F332
l2304F332:
	s1Out = s1
	a0Out = 0xFFFFFFFE<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return t1
l2304F32C:
l2304F32E_thunk_aws_iot_thread_mutex_unlock:
	word32 a0_10
	word32 a1_11
	word32 a2_12
	word32 a3_13
	word32 a4_14
	word32 s1_18
	word32 s2_19
	word32 s3_20
	word32 s5_22
	word32 s6_23
	word32 t1_26 = aws_iot_thread_mutex_unlock(a1, a4, mstatus, dwArg04, dwArg28, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_18, out a0_10, out a1_11, out a2_12, out a3_13, out a4_14, out s2_19, out s3_20, out s5_22, out s6_23)
	s1Out = s1_18
	a0Out = a0_10
	a1Out = a1_11
	a2Out = a2_12
	a3Out = a3_13
	a4Out = a4_14
	s2Out = s2_19
	s3Out = s3_20
	s5Out = s5_22
	s6Out = s6_23
	return t1_26
aws_iot_mqtt_client_unlock_mutex_exit:


word32 aws_iot_mqtt_set_client_state(word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_connect
//      aws_iot_mqtt_disconnect
//      aws_iot_mqtt_attempt_reconnect
//      aws_iot_mqtt_publish
//      aws_iot_mqtt_subscribe
//      aws_iot_mqtt_resubscribe
//      aws_iot_mqtt_unsubscribe
//      aws_iot_mqtt_yield
//      aws_iot_mqtt_internal_cycle_read
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_mqtt_set_client_state_entry:
l2304F336:
	branch a0 == 0<32> l2304F384
l2304F384:
	s1Out = s1
	a0Out = 0xFFFFFFFE<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return s0
l2304F338:
	word32 s4_38
	word32 a2_182
	word32 a4_125
	word32 a3_123
	word32 a1_120
	word32 a0_118
	word32 s2_138
	word32 s3_140
	word32 s1_136 = aws_iot_mqtt_client_lock_mutex(s1, a0, a0 + 1092<i32>, a2, a3, a4, mstatus, s4, dwArg08, s3, dwArgD8, dwArg0118, out a0_118, out a1_120, out a2_182, out a3_123, out a4_125, out s2_138, out s3_140, out s4_38)
	branch a0_118 != 0<32> l2304F374
l2304F358:
	branch CONVERT(Mem21[a0 + 24<i32>:byte], byte, word32) != s3_140 l2304F368
l2304F362:
	Mem44[a0 + 24<i32>:byte] = SLICE(s2_138, byte, 0)
l2304F368:
	word32 a2_183
	aws_iot_mqtt_client_unlock_mutex(a0, s4_38, a4_125, mstatus, s4, dwArg08, s3, dwArgD8, dwArg0118, dwArg0158, out s1_136, out a0_118, out a1_120, out a2_183, out a3_123, out a4_125, out s2_138, out s3_140, out s5, out s6)
	branch s1_136 == 0<32> l2304F374
l2304F372:
	a0_118 = s1_136
l2304F374:
	s1Out = s1_136
	a0Out = a0_118
	a1Out = a1_120
	a2Out = dwArg48
	a3Out = a3_123
	a4Out = a4_125
	s2Out = s2_138
	s3Out = s3_140
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	return s1
aws_iot_mqtt_set_client_state_exit:


word32 aws_iot_mqtt_set_connect_params(word32 ra, word32 s1, word32 a0, word32 a1, word32 dwArg08, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_init
//      aws_iot_mqtt_connect
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a1 a3 a4 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
aws_iot_mqtt_set_connect_params_entry:
l2304F388:
	branch a0 == 0<32> l2304F44C
l2304F44C:
	s1Out = s1
	a0Out = 0xFFFFFFFE<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return ra
l2304F38A:
	word32 s0_14 = a0
	word32 a0_125 = 0xFFFFFFFE<32>
	branch a1 == 0<32> l2304F440
l2304F39A:
	Mem20[a0 + 1121<i32>:byte] = SLICE(CONVERT(Mem13[a1 + 17<i32>:byte], byte, word32), byte, 0)
	word32 a5_21 = CONVERT(Mem20[a1 + 4<i32>:byte], byte, word32)
	Mem23[a0 + 1108<i32>:byte] = SLICE(a5_21, byte, 0)
	word32 a1_24 = Mem23[a5_21 + 8<i32>:word32]
	Mem25[a0 + 1112<i32>:word32] = a5_21
	Mem27[a0 + 1116<i32>:word16] = SLICE(CONVERT(Mem25[a1_24 + 12<i32>:uint16], uint16, word32), word16, 0)
	s2 = 0x42017000<32>
	word32 a1_210
	word32 a2_211
	word32 a3_212
	word32 a4_213
	word32 a5_214
	branch strlen(0x42016964<32>, out a1_210, out a2_211, out a3_212, out a4_213, out a5_214) != 0<32> l2304F3E0
l2304F3C8:
	word32 s1_216
	word32 a0_217
	word32 a1_218
	word32 a2_219
	word32 a3_220
	word32 a4_221
	word32 a5_222
	word32 a7_223
	word32 s5_224
	word32 s6_225
	word32 s7_226
	word32 s8_227
	word32 s9_228
	word32 s10_229
	word32 s11_230
	ra = snprintf(ra, 0x42016964<32>, 0x19<32>, 0x23087C14<32>, dwArg08, dwArg28, dwArg54, s1, ra, dwArg98, dwArgBC, out s0_14, out s1_216, out a0_217, out a1_218, out a2_219, out a3_220, out a4_221, out a5_222, out a7_223, out s2, out s3, out s4, out s5_224, out s6_225, out s7_226, out s8_227, out s9_228, out s10_229, out s11_230)
l2304F3E0:
	Mem67[s0_14 + 1144<i32>:word32] = s2 + -1692<i32>
	word32 a5_72
	word32 a2_215
	Mem75[s0_14 + 1148<i32>:word16] = SLICE(strlen(s2 + -1692<i32>, out a1, out a2_215, out a3, out a4, out a5_72), word16, 0)
	word32 s1_76 = Mem75[a5_72 + 48<i32>:word32]
	Mem78[s0_14 + 1152<i32>:word32] = a5_72
	word32 a5_79 = CONVERT(Mem78[s1_76 + 52<i32>:uint16], uint16, word32)
	Mem80[s0_14 + 1156<i32>:word16] = SLICE(a5_79, word16, 0)
	word32 s1_81 = Mem80[a5_79 + 24<i32>:word32]
	Mem82[s0_14 + 1128<i32>:word32] = a5_79
	word32 a5_83 = CONVERT(Mem82[s1_81 + 28<i32>:uint16], uint16, word32)
	Mem84[s0_14 + 1132<i32>:word16] = SLICE(a5_83, word16, 0)
	s1 = Mem84[a5_83 + 32<i32>:word32]
	Mem86[s0_14 + 1136<i32>:word32] = a5_83
	Mem88[s0_14 + 1140<i32>:word16] = SLICE(CONVERT(Mem86[s1 + 36<i32>:uint16], uint16, word32), word16, 0)
	Mem90[s0_14 + 1143<i32>:byte] = SLICE(CONVERT(Mem88[s1 + 39<i32>:byte], byte, word32), byte, 0)
	Mem92[s0_14 + 1142<i32>:byte] = SLICE(CONVERT(Mem90[s1 + 38<i32>:byte], byte, word32), byte, 0)
	Mem94[s0_14 + 1118<i32>:word16] = SLICE(CONVERT(Mem92[s1 + 14<i32>:uint16], uint16, word32), word16, 0)
	Mem96[s0_14 + 1120<i32>:byte] = SLICE(CONVERT(Mem94[s1 + 16<i32>:byte], byte, word32), byte, 0)
	a0_125 = 0<32>
l2304F440:
	0<32> = dwArg38
	s1Out = s1
	a0Out = a0_125
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return ra
aws_iot_mqtt_set_connect_params_exit:


word32 aws_iot_mqtt_init(word32 ra, word32 a0, word32 a1, word32 s2, word32 mstatus, word32 dwArg24, word32 dwArg38, word32 dwArg5C, word32 dwArg98, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_init
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_mqtt_init_entry:
l2304F450:
	word32 a5_30
	word32 a7_388
	word32 a6_387
	word32 a1_383
	word32 a2_384
	word32 a3_385
	word32 a4_386
	memcpy(fp + -88<i32>, 0x23087BDC<32>, 56<i32>, out a1_383, out a2_384, out a3_385, out a4_386, out a5_30, out a6_387, out a7_388)
	word32 s0_13 = a0
	word32 s2_127 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l2304F50E
l2304F47C:
	branch a1 == 0<32> l2304F50E
l2304F47E:
	word32 s1_42 = Mem27[a5_30 + 4<i32>:word32]
	branch a5_30 == 0<32> l2304F50E
l2304F482:
	word32 a5_43 = CONVERT(Mem27[s1_42 + 8<i32>:uint16], uint16, word32)
	branch a5_43 == 0<32> l2304F50E
l2304F488:
	branch a5_43 == 0<32> l2304F50E
l2304F48C:
	branch a5_43 == 0<32> l2304F50E
l2304F490:
	branch a5_43 == 0<32> l2304F50E
l2304F494:
	word32 a5_47 = a0 + 1160<i32>
l2304F49C:
	Mem50[a5_47:word32] = 0<32>
	Mem51[a5_47 + 8<i32>:word32] = 0<32>
	Mem52[a5_47 + 12<i32>:word32] = 0<32>
	Mem53[a5_47 + 6<i32>:byte] = 0<8>
	a5_47 = a5_47 + 0x10<32>
	branch a5_47 != a0 + 1240<i32> l2304F49C
l2304F4B2:
	Mem61[a5_47 + 32<i32>:word32] = a0
	Mem63[a0 + 48<i32>:word32] = 0<32>
	Mem65[a5_47 + 36<i32>:word32] = a0
	Mem67[0x234<32>:word32] = a0
	Mem68[0x238<32>:word32] = a0
	Mem70[a0 + 1240<i32>:word32] = 512<i32>
	word32 s1_71 = Mem70[556<i32>:word32]
	Mem72[a0 + 28<i32>:word16] = 1<16>
	Mem73[a0 + 1244<i32>:word32] = 512<i32>
	word32 s2_390
	word32 a0_75
	word32 a3_79
	word32 a4_80
	word32 s1_82
	word32 a1_389
	word32 s3_391
	word32 s4_392
	word32 ra_85 = aws_iot_mqtt_set_connect_params(ra, s1_71, a0, fp + -88<i32>, dwLoc58, s2, dwLoc28, dwLoc0C, dwArg38, dwArg5C, out s1_82, out a0_75, out a1_389, out a3_79, out a4_80, out s2_390, out s3_391, out s4_392)
	s2_127 = a0_75
	branch a0_75 != 0<32> l2304F50E
l2304F4E4:
	word32 a5_99 = CONVERT(Mem73[s1_82 + 48<i32>:byte], byte, word32)
	Mem102[a0 + 1088<i32>:byte] = SLICE(a5_99, byte, 0)
	word32 a0_105
	word32 a3_108
	word32 a4_109
	word32 a5_110
	word32 a1_393
	word32 a2_394
	word32 s3_395
	word32 s4_396
	word32 s5_397
	word32 s6_398
	aws_iot_thread_mutex_init(ra_85, a0 + 1092<i32>, a3_79, a4_80, a5_99, mstatus, dwLoc60, dwLoc5C, dwArg24, dwArg98, dwArgD8, dwArg0118, out a0_105, out a1_393, out a2_394, out a3_108, out a4_109, out a5_110, out s3_395, out s4_396, out s5_397, out s6_398)
	s2_127 = a0_105
	branch a0_105 != 0<32> l2304F50E
l2304F4FA:
	word32 a0_130
	word32 a5_135
	word32 a1_399
	word32 a2_400
	word32 s4_401
	word32 s5_402
	word32 s6_403
	word32 s3_140
	word32 a4_134
	word32 a3_133
	aws_iot_thread_mutex_init(ra_85, a0 + 1096<i32>, a3_108, a4_109, a5_110, mstatus, dwLoc60, dwLoc5C, dwArg24, dwArg98, dwArgD8, dwArg0118, out a0_130, out a1_399, out a2_400, out a3_133, out a4_134, out a5_135, out s3_140, out s4_401, out s5_402, out s6_403)
	s2_127 = a0_130
	branch a0_130 == 0<32> l2304F524
l2304F524:
	word32 a0_155
	word32 a1_156
	word32 a2_157
	word32 a3_158
	word32 a4_159
	word32 s4_166
	word32 s5_167
	word32 s6_168
	word32 a5_404
	word32 s1_163 = aws_iot_thread_mutex_init(ra_85, a0 + 1100<i32>, a3_133, a4_134, a5_135, mstatus, dwLoc60, dwLoc5C, dwArg24, dwArg98, dwArgD8, dwArg0118, out a0_155, out a1_156, out a2_157, out a3_158, out a4_159, out a5_404, out s3_140, out s4_166, out s5_167, out s6_168)
	s2_127 = a0_155
	branch a0_155 == 0<32> l2304F53A
l2304F53A:
	Mem178[a0 + 25<i32>:byte] = 0<8>
	Mem181[a0 + 26<i32>:byte] = SLICE(CONVERT(Mem178[s1_163:byte], byte, word32), byte, 0)
	word32 a0_189 = iot_tls_init(a0 + 1248<i32>, a1_156, a2_157, a3_158, a4_159, CONVERT(Mem181[s1_163 + 8<i32>:uint16], uint16, word32), Mem181[s1_163 + 32<i32>:int32], CONVERT(Mem181[s1_163 + 36<i32>:byte], byte, word32))
	s2_127 = a0_189
	branch a0_189 == 0<32> l2304F57E
l2304F57E:
	init_timer(a0)
	init_timer(a0 + 12<i32>)
	Mem194[a0 + 24<i32>:byte] = SLICE(s5_167, byte, 0)
l2304F566:
	word32 a3_199
	word32 a4_200
	aws_iot_thread_mutex_destroy(s4_166, a3_158, a4_159, mstatus, dwArgE8, dwArg0128, out a3_199, out a4_200)
	word32 a3_212
	word32 a4_213
	aws_iot_thread_mutex_destroy(s3_140, a3_199, a4_200, mstatus, dwArgE8, dwArg0128, out a3_212, out a4_213)
	word32 a3_407
	word32 a4_408
	s0_13 = aws_iot_thread_mutex_destroy(s6_168, a3_212, a4_213, mstatus, dwArgE8, dwArg0128, out a3_407, out a4_408)
	Mem234[s0_13 + 24<i32>:byte] = 0<8>
l2304F532:
	aws_iot_thread_mutex_destroy(s4_166, a3_158, a4_159, mstatus, dwArgE8, dwArg0128, out a3_133, out a4_134)
l2304F508:
	word32 a3_405
	word32 a4_406
	s0_13 = aws_iot_thread_mutex_destroy(s3_140, a3_133, a4_134, mstatus, dwArgE8, dwArg0128, out a3_405, out a4_406)
l2304F50E:
	s0Out = s0_13
	a0Out = s2_127
	a3Out = dwArg08
	return dwArg68
aws_iot_mqtt_init_exit:


word32 aws_iot_mqtt_get_next_packet_id(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_publish
//      aws_iot_mqtt_subscribe
//      aws_iot_mqtt_resubscribe
//      aws_iot_mqtt_unsubscribe
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
aws_iot_mqtt_get_next_packet_id_entry:
l2304F592:
	word32 a5_11
	word32 a5_5 = CONVERT(Mem0[a0 + 28<i32>:uint16], uint16, word32)
	branch a5_5 == 0xFFFFFFF<32> l2304F5AC
l2304F5AC:
	a5_11 = 1<32>
l2304F59E:
	a5_11 = CONVERT(SLICE(a5_5 + 1<32>, word16, 0), word16, word32)
l2304F5A4:
	Mem14[a0 + 28<i32>:word16] = SLICE(a5_11, word16, 0)
	return a5_11
aws_iot_mqtt_get_next_packet_id_exit:


word32 aws_iot_mqtt_is_client_connected(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_register_delta
//      aws_iot_shadow_update
//      aws_iot_mqtt_disconnect
//      aws_iot_mqtt_attempt_reconnect
//      aws_iot_mqtt_publish
//      aws_iot_mqtt_subscribe
//      aws_iot_mqtt_resubscribe
//      aws_iot_mqtt_unsubscribe
//      aws_iot_mqtt_yield
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
aws_iot_mqtt_is_client_connected_entry:
l2304F5B0:
	branch a0 == 0<32> l2304F5BE
l2304F5BE:
	return 0<32>
l2304F5B2:
	return CONVERT(CONVERT(Mem0[a0 + 24<i32>:byte], byte, word32) <u 0xFFFFFFF6<32>, bool, word32)
aws_iot_mqtt_is_client_connected_exit:


word32 aws_iot_mqtt_autoreconnect_set_status(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_set_autoreconnect_status
// MayUse:  a0:[0..31] a1:[0..7]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
aws_iot_mqtt_autoreconnect_set_status_entry:
l2304F5C2:
	branch a0 == 0<32> l2304F5CC
l2304F5CC:
	return 0xFFFFFFFE<32>
l2304F5C4:
	Mem6[a0 + 26<i32>:byte] = SLICE(a1, byte, 0)
	return 0<32>
aws_iot_mqtt_autoreconnect_set_status_exit:


word32 aws_iot_mqtt_connect(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg7C, word32 dwArg98, word32 dwArgD8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_connect
//      aws_iot_mqtt_attempt_reconnect
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s10 s2 s3 s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_mqtt_connect_entry:
l2304F5D0:
	word32 s1_16 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l2304F858
l2304F5E4:
	aws_iot_mqtt_internal_flushBuffers(a0)
	s2 = a1
	word32 a0_23 = aws_iot_mqtt_get_client_state(a0)
	branch a0_23 == 1<32> l2304F614
l2304F5FA:
	s1_16 = 0xFFFFFFF1<32>
	branch CONVERT(SLICE(a0_23, byte, 0), byte, int32) == 0<32> l2304F858
l2304F606:
	a4 = 2<32>
	branch (a0_23 + -11<i32> & 255<i32>) >u 2<32> l2304F858
l2304F614:
	word32 sp_111
	word32 a2_423
	word32 s1_238
	word32 a1_119
	word32 s1_567
	word32 s6_1135
	word32 s5_1134
	word32 s3_1133
	word32 a0_1130
	word32 a1_1131
	word32 a2_1132
	word32 s1_103
	word32 s2_105
	word32 a4_108
	word32 a3_109
	word32 s4_106
	word32 s0_114 = aws_iot_mqtt_set_client_state(s1_16, a0, 2<32>, a3, a4, s3, s4, mstatus, dwLoc38, dwArg98, dwArgD8, dwArg0118, out s1_103, out a0_1130, out a1_1131, out a2_1132, out a3_109, out a4_108, out s2_105, out s3_1133, out s4_106, out s5_1134, out s6_1135)
	s3 = s0_114 + 1248<i32>
	branch s2_105 != 0<32> l2304F664
l2304F664:
	word32 a0_73
	ra = aws_iot_mqtt_set_connect_params(ra, s1_103, s0_114, s2_105, dwLoc38, dwLoc18, dwLoc08, dwArg14, s1, dwArg7C, out s1_103, out a0_73, out a1_119, out a3_109, out a4_108, out s2_105, out s3, out s4_106)
	branch a0_73 == 0<32> l2304F624
l2304F66E:
	s1_567 = 0xFFFFFFE6<32>
l2304F624:
	word32 s1_112
	word32 a5_120
	word32 tp_128
	word32 a7_129
	word32 s5_130
	word32 s6_131
	word32 t0_132
	word32 t1_133
	word32 t4_134
	word32 t5_135
	word32 t6_136
	word32 s11_138
	word32 s7_139
	word32 s9_140
	word32 a0_118
	call Mem15[s0_114 + 1248<i32>:int32] (retsize: 0;)
		uses: a0:s3_101,a1:0<32>,a3:a3_109,a4:a4_108,a5:a5_120,a7:a7_129,mstatus:mstatus,ra:ra_104,s0:s0_53,s1:s1_103,s10:s10_137,s11:s11_138,s2:s2_105,s3:s3_101,s4:s4_106,s5:s5_130,s6:s6_131,s7:s7_139,s9:s9_140,Stack +0008:dwLoc38,Stack +0028:dwLoc18,Stack +0038:dwLoc08,Stack +0054:dwArg14,Stack +00BC:dwArg7C,Stack +00D8:dwArg98,Stack +0118:dwArgD8,Stack +0158:dwArg0118,t0:t0_132,t1:t1_133,t4:t4_134,t5:t5_135,t6:t6_136,tp:tp_128
		defs: a0:a0_118,a1:a1_119,a3:a3_126,a4:a4_121,a5:a5_120,a7:a7_129,mstatus:mstatus_127,ra:ra_113,s0:s0_114,s1:s1_112,s10:s10_137,s11:s11_138,s2:s2_115,s3:s3_116,s4:s4_117,s5:s5_130,s6:s6_131,s7:s7_139,s9:s9_140,sp:sp_111,t0:t0_132,t1:t1_133,t4:t4_134,t5:t5_135,t6:t6_136,tp:tp_128
	branch a0_118 != 0<32> l2304F660
l2304F630:
	init_timer(sp_111 + 20<i32>)
	word32 s0_142 = Mem15[a1_119 + 36<i32>:word32]
	word32 a2_1136
	word32 a5_151 = CONVERT(Mem15[countdown_ms(sp_111 + 20<i32>, a1_119, out a2_1136) + 1118<i32>:uint16], uint16, word32)
	Mem152[sp_111 + 12<i32>:byte] = 0<8>
	s0_114 = Mem152[s1_112 + 52<i32>:word32]
	Mem154[s0_114 + 40<i32>:word16] = SLICE(a5_151, word16, 0)
	s4_106 = s0_142 + 64<i32>
	s2_105 = CONVERT(Mem154[s0_114 + 1116<i32>:uint16], uint16, word32)
	branch Mem154[s0_114 + 1112<i32>:int32] != 0<32> l2304F672
l2304F672:
	branch s2_105 == 0<32> l2304F65E
l2304F65A:
	branch s2_105 == 0<32> l2304F676
l2304F676:
	a4_108 = CONVERT(Mem154[s0_114 + 1108<i32>:byte], byte, word32)
	a0_118 = -37<i32>
	branch a4_108 != 4<32> l2304F660
l2304F684:
	word32 a5_162 = CONVERT(Mem154[s0_114 + 1121<i32>:byte], byte, word32)
	Mem165[sp_111 + 8<i32>:word32] = s0_142 + 64<i32>
	s2_105 = s2_105 + 0xC<32>
	branch a5_162 == 0<32> l2304F69C
l2304F68E:
	s2_105 = s2_105 + 0xC<32> + (CONVERT(Mem165[s0_114 + 1132<i32>:uint16] + Mem165[s0_114 + 1140<i32>:uint16], uint16, uint16) + 4<32>)
l2304F69C:
	branch Mem165[s0_114 + 1144<i32>:int32] == 0<32> l2304F6AA
l2304F6A2:
	s2_105 = s2_105 + (CONVERT(Mem165[s0_114 + 1148<i32>:uint16], uint16, word32) + 2<32>)
l2304F6AA:
	branch Mem165[s0_114 + 1152<i32>:int32] == 0<32> l2304F6B8
l2304F6B0:
	s2_105 = s2_105 + (CONVERT(Mem165[s0_114 + 1156<i32>:uint16], uint16, word32) + 2<32>)
l2304F6B8:
	branch s1_112 >=u aws_iot_mqtt_internal_get_final_packet_length_from_remaining_length(s2_105, out a3_109, out a4_108) l2304F6C8
l2304F6C8:
	word32 a5_208
	a0_118 = aws_iot_mqtt_internal_init_header(sp_111 + 12<i32>, 1<32>, 0<32>, 0<32>, 0<32>, out a1_119, out a3_109, out a4_108, out a5_208)
	branch a0_118 != 0<32> l2304F660
l2304F6DA:
	word32 a5_224
	word32 a5_1142
	word32 a1_1143
	word32 a3_1144
	word32 a4_1145
	Mem230[sp_111 + 8<i32>:word32] = aws_iot_mqtt_internal_write_len_to_buffer(aws_iot_mqtt_internal_write_char(CONVERT(Mem165[sp_111 + 12<i32>:byte], byte, word32), a5_208, out a5_1142), s2_105, out a1_1143, out a3_1144, out a4_1145, out a5_224) + a5_224
	word32 a5_237
	word32 a4_1148
	word32 s2_1149
	word32 a0_1146
	word32 a1_1147
	s1_238 = aws_iot_mqtt_internal_write_utf8_string(0x23087C7C<32>, 4<32>, a5_224, Mem230[sp_111 + 56<i32>:word32], out a0_1146, out a1_1147, out a3, out a4_1148, out a5_237, out s2_1149)
	word32 a5_1150
	aws_iot_mqtt_internal_write_char(CONVERT(Mem230[s0_114 + 1108<i32>:byte], byte, word32), a5_237, out a5_1150)
	word32 a1_257 = CONVERT(CONVERT(Mem230[s0_114 + 1120<i32>:byte], byte, word32) != 0<32>, bool, word32)
	word32 a1_258 = a1_257 << 1<i32>
	branch CONVERT(Mem230[s0_114 + 1121<i32>:byte], byte, word32) == 0<32> l2304F734
l2304F71C:
	a1_258 = (a1_257 << 1<i32> | 4<i32> | (CONVERT(Mem230[s0_114 + 1143<i32>:byte], byte, word32) << 3<i32> | CONVERT(Mem230[s0_114 + 1142<i32>:byte], byte, word32) << 5<i32>)) & 255<i32>
l2304F734:
	branch Mem230[s0_114 + 1152<i32>:int32] == 0<32> l2304F73E
l2304F73A:
	a1_258 = a1_258 | 64<i32>
l2304F73E:
	word32 a5_274 = Mem230[s0_114 + 1144<i32>:int32]
	branch a5_274 == 0<32> l2304F748
l2304F744:
	a1_258 = a1_258 | 128<i32>
l2304F748:
	word32 a5_284
	aws_iot_mqtt_internal_write_char(a1_258, a5_274, out a5_284)
	word32 a5_291
	word32 a4_1151
	aws_iot_mqtt_internal_write_uint_16(CONVERT(Mem230[s0_114 + 1118<i32>:uint16], uint16, word32), a5_284, out a4_1151, out a5_291)
	word32 a1_292 = Mem230[s0_114 + 1112<i32>:int32]
	branch a1_292 != 0<32> l2304F834
l2304F834:
	word32 s2_1155
	word32 a1_1153
	word32 a5_1154
	word32 a0_1152
	s1_238 = aws_iot_mqtt_internal_write_utf8_string(a1_292, CONVERT(Mem230[s0_114 + 1116<i32>:uint16], uint16, word32), a5_291, Mem230[sp_111 + 56<i32>:word32], out a0_1152, out a1_1153, out a3, out a4, out a5_1154, out s2_1155)
l2304F760:
	word32 a5_1156
	aws_iot_mqtt_internal_write_uint_16(a1_292, a5_291, out a4, out a5_1156)
l2304F766:
	word32 a5_318 = CONVERT(Mem230[s0_114 + 1121<i32>:byte], byte, word32)
	branch a5_318 == 0<32> l2304F788
l2304F76C:
	word32 a5_327
	word32 a0_1157
	word32 a1_1158
	word32 a4_1160
	word32 a3_1159
	word32 s2_1161
	aws_iot_mqtt_internal_write_utf8_string(Mem230[s0_114 + 1128<i32>:int32], CONVERT(Mem230[s0_114 + 1132<i32>:uint16], uint16, word32), a5_318, Mem230[sp_111 + 56<i32>:word32], out a0_1157, out a1_1158, out a3_1159, out a4_1160, out a5_327, out s2_1161)
	word32 a0_1162
	word32 a1_1163
	word32 s2_1164
	s1_238 = aws_iot_mqtt_internal_write_utf8_string(Mem230[s0_114 + 1136<i32>:int32], CONVERT(Mem230[s0_114 + 1140<i32>:uint16], uint16, word32), a5_327, Mem230[sp_111 + 56<i32>:word32], out a0_1162, out a1_1163, out a3, out a4, out a5_318, out s2_1164)
l2304F788:
	word32 a1_362 = Mem230[s0_114 + 1144<i32>:int32]
	branch a1_362 == 0<32> l2304F798
l2304F78E:
	word32 a1_1166
	word32 s2_1167
	word32 a0_1165
	s1_238 = aws_iot_mqtt_internal_write_utf8_string(a1_362, CONVERT(Mem230[s0_114 + 1148<i32>:uint16], uint16, word32), a5_318, Mem230[sp_111 + 56<i32>:word32], out a0_1165, out a1_1166, out a3, out a4, out a5_318, out s2_1167)
l2304F798:
	word32 a1_386 = Mem230[s0_114 + 1152<i32>:int32]
	branch a1_386 == 0<32> l2304F7A8
l2304F79E:
	word32 a5_1169
	word32 s2_1170
	word32 a0_1168
	s1_238 = aws_iot_mqtt_internal_write_utf8_string(a1_386, CONVERT(Mem230[s0_114 + 1156<i32>:uint16], uint16, word32), a5_318, Mem230[sp_111 + 56<i32>:word32], out a0_1168, out a1_386, out a3, out a4, out a5_1169, out s2_1170)
l2304F7A8:
	word32 a1_422 = a1_386 - (s0_142 + 64<i32>)
	branch a1_422 == 0<32> l2304F84E
l2304F84E:
	a2_423 = 3<32>
l2304F7B0:
	word32 s5_1173
	word32 s6_1174
	word32 s1_1171
	word32 a2_1172
	ra = aws_iot_mqtt_internal_send_packet(ra, s0_114, a1_422, sp_111 + 20<i32>, a3, a4, mstatus, Mem230[sp_111 + 84<i32>:word32], Mem230[sp_111 + 200<i32>:word32], Mem230[sp_111 + 264<i32>:word32], Mem230[sp_111 + 296<i32>:word32], out s0_114, out s1_1171, out a0_118, out a1_119, out a2_1172, out a3_109, out a4_108, out s2_105, out s3, out s4_106, out s5_1173, out s6_1174, out mstatus)
	branch a0_118 != 0<32> l2304F660
l2304F7BC:
	word32 s7_1175
	word32 s10_1176
	word32 s1_501
	ra = aws_iot_mqtt_internal_wait_for_read(ra, s0_114, sp_111 + 20<i32>, a3_109, a4_108, s10, mstatus, Mem230[sp_111 + 4<i32>:word32], Mem230[sp_111 + 24<i32>:word32], Mem230[sp_111 + 100<i32>:word32], Mem230[sp_111 + 120<i32>:word32], Mem230[sp_111 + 184<i32>:word32], Mem230[sp_111 + 264<i32>:word32], Mem230[sp_111 + 328<i32>:word32], out s0_114, out s1_501, out a0_118, out a1_119, out a3_109, out a4_108, out s2_105, out s3, out s4_106, out s7_1175, out s10_1176, out mstatus)
	branch a0_118 != 0<32> l2304F660
l2304F7CA:
	s0_114 = Mem230[a3_109 + 56<i32>:word32]
	a4_108 = 3<32>
	a0_118 = 0xFFFFFFE0<32>
	branch a3_109 <=u 3<32> l2304F660
l2304F7D8:
	Mem532[sp_111 + 4<i32>:word32] = s0_114 + 576<i32>
	Mem533[sp_111 + 132<i32>:word32] = 0<32>
	Mem534[sp_111 + 8<i32>:word32] = 0<32>
	word32 a5_1177
	s2_105 = aws_iot_mqtt_internal_read_char(s0_114 + 576<i32>, out a4_108, out a5_1177) >>u 4<i32> & 255<i32>
	a0_118 = 0xFFFFFFFF<32>
	branch s2_105 != 2<32> l2304F660
l2304F7F2:
	s0_114 = Mem534[sp_111 + 68<i32>:word32]
	a1_119 = sp_111 + 12<i32>
	word32 a5_547
	a0_118 = aws_iot_mqtt_internal_decode_remaining_length_from_buffer(0xFFFFFFFF<32>, sp_111 + 12<i32>, sp_111 + 16<i32>, out a3_109, out a4_108, out a5_547)
	branch a0_118 != 0<32> l2304F660
l2304F800:
	s0_114 = Mem534[sp_111 + 228<i32>:word32]
	word32 a5_555 = a5_547 + a4_108
	Mem556[sp_111 + 4<i32>:word32] = a5_555
	a0_118 = -35<i32>
	branch a5_555 != s2_105 l2304F660
l2304F812:
	word32 a4_1178
	word32 a5_561
	aws_iot_mqtt_internal_read_char(a5_555, out a4_1178, out a5_561)
	word32 a5_1179
	branch aws_iot_mqtt_internal_read_char(a5_561, out a4_108, out a5_1179) >u 5<32> l2304F89E
l2304F89E:
	s1_567 = -36<i32>
l2304F824:
	word32 s1_573
	word32 ra_574
	word32 s0_575
	word32 s2_576
	word32 s3_577
	word32 s4_578
	word32 a0_579
	word32 a4_582
	word32 a3_587
	word32 mstatus_588
	word32 tp_589
	word32 a7_590
	word32 s5_591
	word32 s6_592
	word32 t0_593
	word32 t1_594
	word32 t4_595
	word32 t5_596
	word32 t6_597
	word32 s10_598
	word32 s11_599
	word32 s7_600
	word32 s9_601
	call 0x23087C64<32> (retsize: 0;)
		uses: a0:Mem556[0x23087C64<32>:word32],a1:sp_111 + 12<i32>,a3:a3_546,a4:a4_564,a5:0x23087C64<32>,a7:a7_590,mstatus:mstatus_515,ra:ra_516,s0:s0_552,s1:s1_501,s10:s10_598,s11:s11_599,s2:s2_539,s3:s3_512,s4:s4_502,s5:s5_591,s6:s6_592,s7:s7_600,s9:s9_601,Stack +0014:dwArg14,Stack +007C:dwArg7C,Stack +0098:dwArg98,Stack +00D8:dwArgD8,Stack +0118:dwArg0118,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF8:dwLoc08,t0:t0_593,t1:t1_594,t4:t4_595,t5:t5_596,t6:t6_597,tp:tp_589
		defs: a0:a0_579,a3:a3_587,a4:a4_582,a7:a7_590,mstatus:mstatus_588,ra:ra_574,s0:s0_575,s1:s1_573,s10:s10_598,s11:s11_599,s2:s2_576,s3:s3_577,s4:s4_578,s5:s5_591,s6:s6_592,s7:s7_600,s9:s9_601,t0:t0_593,t1:t1_594,t4:t4_595,t5:t5_596,t6:t6_597,tp:tp_589
	s0Out = s0_575
	s1Out = s1_573
	a0Out = a0_579
	a3Out = a3_587
	a4Out = a4_582
	s2Out = s2_576
	s3Out = s3_577
	s4Out = s4_578
	s6Out = s6_592
	s10Out = s10_598
	mstatusOut = mstatus_588
	return ra_574
l2304F6C2:
	a0_118 = -33<i32>
l2304F65E:
	a0_118 = 0xFFFFFFFE<32>
l2304F660:
	s1_567 = a0_118
l2304F86E:
	word32 s1_652
	word32 ra_653
	word32 s0_654
	word32 s2_655
	word32 s3_656
	word32 s4_657
	word32 a1_659
	word32 a4_661
	word32 a3_666
	word32 mstatus_667
	call Mem609[s0_114 + 1260<i32>:int32] (retsize: 0;)
		uses: a0:s3_613,a1:a1_631,a3:a3_644,a4:a4_641,a5:a5_692,a7:a7_701,mstatus:mstatus_638,ra:ra_622,s0:s0_606,s1:s1_621,s10:s10_709,s11:s11_710,s2:s2_625,s3:s3_613,s4:s4_628,s5:s5_702,s6:s6_703,s7:s7_711,s9:s9_712,Stack +0014:dwArg14,Stack +007C:dwArg7C,Stack +0098:dwArg98,Stack +00D8:dwArgD8,Stack +0118:dwArg0118,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF8:dwLoc08,t0:t0_704,t1:t1_705,t4:t4_706,t5:t5_707,t6:t6_708,tp:tp_700
		defs: a1:a1_659,a3:a3_666,a4:a4_661,mstatus:mstatus_667,ra:ra_653,s0:s0_654,s1:s1_652,s2:s2_655,s3:s3_656,s4:s4_657
	word32 a0_690
	word32 a5_692
	word32 tp_700
	word32 a7_701
	word32 s5_702
	word32 t0_704
	word32 t1_705
	word32 t4_706
	word32 t5_707
	word32 t6_708
	word32 s11_710
	word32 s7_711
	word32 s9_712
	call Mem609[s0_654 + 1268<i32>:int32] (retsize: 0;)
		uses: a0:s3_656,a1:a1_659,a3:a3_666,a4:a4_661,a5:a5_692,a7:a7_701,mstatus:mstatus_667,ra:ra_653,s0:s0_654,s1:s1_652,s10:s10_709,s11:s11_710,s2:s2_655,s3:s3_656,s4:s4_657,s5:s5_702,s6:s6_703,s7:s7_711,s9:s9_712,Stack +0014:dwArg14,Stack +007C:dwArg7C,Stack +0098:dwArg98,Stack +00D8:dwArgD8,Stack +0118:dwArg0118,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF8:dwLoc08,t0:t0_704,t1:t1_705,t4:t4_706,t5:t5_707,t6:t6_708,tp:tp_700
		defs: a0:a0_690,a3:a3_698,a4:a4_693,a5:a5_692,a7:a7_701,mstatus:mstatus_699,ra:ra_685,s0:s0_686,s1:s1_684,s10:s10_709,s11:s11_710,s2:s2_687,s3:s3_688,s4:s4_689,s5:s5_702,s6:s6_703,s7:s7_711,s9:s9_712,sp:sp_683,t0:t0_704,t1:t1_705,t4:t4_706,t5:t5_707,t6:t6_708,tp:tp_700
	a2_423 = 0xB<32>
	branch a0_690 == 0<32> l2304F850
l2304F850:
	word32 a0_1137
	word32 a2_1139
	word32 s4_1140
	word32 s5_1141
	word32 a1_1138
	aws_iot_mqtt_set_client_state(s1_238, s0_114, a2_423, a3, a4, s3, s4_106, mstatus, Mem739[sp_111 + 8<i32>:word32], Mem739[sp_111 + 216<i32>:word32], Mem739[sp_111 + 280<i32>:word32], Mem739[sp_111 + 344<i32>:word32], out s1_16, out a0_1137, out a1_1138, out a2_1139, out a3, out a4, out s2, out s3, out s4_1140, out s5_1141, out s6)
l2304F882:
	s1_16 = 0xFFFFFFF3<32>
l2304F858:
	s0Out = dwArg0158
	s1Out = s1_16
	a0Out = s1_16
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArgF4
	s6Out = s6
	s10Out = s10
	mstatusOut = mstatus
	return ra
aws_iot_mqtt_connect_exit:


word32 _aws_iot_mqtt_internal_disconnect(word32 ra, word32 a1, word32 mstatus, word32 dwArg34, word32 dwArg44, word32 dwArgA8, word32 dwArgE8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_disconnect
// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
_aws_iot_mqtt_internal_disconnect_entry:
l2304F8A4:
	word32 a2_204
	word32 s4_205
	word32 a1_24
	word32 a4_117
	word32 a3_110
	word32 a0_131
	word32 s1_107
	word32 s2_118
	word32 s0_105 = aws_iot_mqtt_internal_serialize_zero(Mem9[a1 + 52<i32>:word32] + 64<i32>, a1, 0xE<32>, fp + 0xFFFFFFE0<32>, out s1_107, out a0_131, out a1_24, out a2_204, out a3_110, out a4_117, out s2_118, out s4_205)
	branch a0_131 != 0<32> l2304F8F6
l2304F8C0:
	init_timer(fp + 0xFFFFFFE4<32>)
	word32 a2_206
	word32 s0_36 = countdown_ms(fp + 0xFFFFFFE4<32>, a1_24, out a2_206)
	0<32> = dwArg44
	branch a1_24 == 0<32> l2304F8DA
l2304F8D2:
	word32 s1_207
	word32 a0_208
	word32 a2_209
	word32 a3_210
	word32 a4_211
	word32 s2_212
	word32 s3_213
	word32 s4_214
	word32 s5_215
	word32 s6_216
	ra = aws_iot_mqtt_internal_send_packet(ra, s0_36, a1_24, fp + 0xFFFFFFE4<32>, a3_110, a4_117, mstatus, dwArg34, dwArgA8, dwArgE8, dwArg0108, out s0_36, out s1_207, out a0_208, out a1_24, out a2_209, out a3_210, out a4_211, out s2_212, out s3_213, out s4_214, out s5_215, out s6_216, out mstatus)
l2304F8DA:
	word32 s1_70 = s0_36 + 1248<i32>
	word32 s0_77
	word32 ra_78
	word32 s1_79
	word32 a1_81
	word32 mstatus_91
	call Mem16[s0_36 + 1260<i32>:int32] (retsize: 0;)
		uses: a0:s1_70,a1:a1_73,a7:a7_122,mstatus:mstatus_74,ra:ra_72,s0:s0_67,s1:s1_70,s3:s3_121,s5:s5_123,s6:s6_124,Stack +0054:dwArg34,Stack +0064:dwArg44,Stack +00C8:dwArgA8,Stack +0108:dwArgE8,Stack +0128:dwArg0108,t0:t0_125,t1:t1_126,t4:t4_127,t5:t5_128,t6:t6_129,tp:tp_120
		defs: a1:a1_81,mstatus:mstatus_91,ra:ra_78,s0:s0_77,s1:s1_79
	word32 a0_108
	word32 tp_120
	word32 a7_122
	word32 t0_125
	word32 t1_126
	word32 t4_127
	word32 t5_128
	word32 t6_129
	call Mem16[s0_77 + 1268<i32>:int32] (retsize: 0;)
		uses: a0:s1_79,a1:a1_81,a7:a7_122,mstatus:mstatus_91,ra:ra_78,s0:s0_77,s1:s1_79,s3:s3_121,s5:s5_123,s6:s6_124,Stack +0034:dwArg34,Stack +0044:dwArg44,Stack +00A8:dwArgA8,Stack +00E8:dwArgE8,Stack +0108:dwArg0108,t0:t0_125,t1:t1_126,t4:t4_127,t5:t5_128,t6:t6_129,tp:tp_120
		defs: a0:a0_108,a3:a3_110,a4:a4_117,a7:a7_122,mstatus:mstatus_119,ra:ra_106,s0:s0_105,s1:s1_107,s2:s2_118,s3:s3_121,s5:s5_123,s6:s6_124,t0:t0_125,t1:t1_126,t4:t4_127,t5:t5_128,t6:t6_129,tp:tp_120
	a0_131 = 0<32> - CONVERT(a0_108 != 0<32>, bool, word32)
l2304F8F6:
	s0Out = s0_105
	s1Out = s1_107
	a0Out = a0_131
	a3Out = a3_110
	a4Out = a4_117
	s2Out = s2_118
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
_aws_iot_mqtt_internal_disconnect_exit:


word32 aws_iot_mqtt_disconnect(word32 ra, word32 a0, word32 a3, word32 a4, word32 s3, word32 s4, word32 mstatus, word32 dwArg24, word32 dwArg34, word32 dwArg98, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_disconnect
//      _aws_iot_mqtt_handle_disconnect
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] Stack +0024:[0..31] Stack +0034:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
aws_iot_mqtt_disconnect_entry:
l2304F900:
	branch a0 == 0<32> l2304F94C
l2304F94C:
	s1Out = s1
	a0Out = 0xFFFFFFFE<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 0xFFFFFFFE<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
l2304F902:
	word32 a0_14 = aws_iot_mqtt_get_client_state(a0)
	word32 s1_129 = a0_14
	word32 a5_18 = 0xFFFFFFF3<32>
	branch aws_iot_mqtt_is_client_connected(a0) == 0<32> l2304F938
l2304F91C:
	word32 a0_27
	word32 a1_28
	word32 a2_179
	aws_iot_mqtt_set_client_state(a0_14, a0, 0xA<32>, a3, a4, s3, s4, mstatus, dwLoc08, dwArgC8, dwArg0108, dwArg0148, out s1_129, out a0_27, out a1_28, out a2_179, out a3, out a4, out s2, out s3, out s4, out s5, out s6)
	a5_18 = a0_27
	branch a0_27 != 0<32> l2304F938
l2304F92A:
	word32 a0_52
	word32 s0_59
	ra = _aws_iot_mqtt_internal_disconnect(ra, a1_28, mstatus, dwArg24, dwArg34, dwArg98, dwArgD8, dwArgF8, out s0_59, out s1_129, out a0_52, out a3, out a4, out s2, out s3, out s4, out s5, out s6, out mstatus)
	a5_18 = a0_52
	branch a0_52 == 0<32> l2304F944
l2304F944:
	Mem79[s0_59 + 24<i32>:byte] = 0xC<8>
	a4 = 0xC<32>
l2304F934:
	Mem80[s0_59 + 24<i32>:byte] = SLICE(s1_129, byte, 0)
l2304F938:
	s1Out = s1_129
	a0Out = a5_18
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_18
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
aws_iot_mqtt_disconnect_exit:


word32 aws_iot_mqtt_attempt_reconnect(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_yield
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a1 a2 a3 a4 mstatus ra s1 s10 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
aws_iot_mqtt_attempt_reconnect_entry:
l2304F952:
	branch a0 == 0<32> l2304F99A
l2304F99A:
	s1Out = s1
	a0Out = 0xFFFFFFFE<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s10Out = s10
	mstatusOut = mstatus
	return ra
l2304F954:
	word32 a5_111 = 0xFFFFFFF1<32>
	branch aws_iot_mqtt_is_client_connected(a0) != 0<32> l2304F984
l2304F964:
	word32 s0_25
	word32 s1_26
	word32 s4_27
	word32 a3_31
	word32 a4_32
	word32 s3_40
	word32 s6_42
	word32 a0_225
	word32 s2_226
	ra = aws_iot_mqtt_connect(ra, s1, a0, a3, a4, s3, s4, mstatus, dwArg04, dwArg6C, dwArg88, dwArgC8, dwArg0108, out s0_25, out s1_26, out a0_225, out a3_31, out a4_32, out s2_226, out s3_40, out s4_27, out s6_42, out s10, out mstatus)
	branch aws_iot_mqtt_get_client_state(s0_25) == 3<32> l2304F98E
l2304F98E:
	word32 a0_55
	ra = aws_iot_mqtt_resubscribe(s1_26, s0_25, a3_31, s3_40, s4_27, s6_42, s10, mstatus, s0, dwArg04, dwArg18, dwArg58, dwArg68, dwArg78, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, out s1, out a0_55, out a1, out a3, out a4, out s3, out s4, out s5, out s6, out s10, out mstatus)
	a5_111 = a0_55
	branch a0_55 != 0<32> l2304F984
l2304F996:
	a5_111 = 3<32>
l2304F978:
	word32 a0_227
	word32 a2_228
	word32 s2_229
	aws_iot_mqtt_set_client_state(s1_26, s0_25, 0xD<32>, a3_31, a4_32, s3_40, s4_27, mstatus, dwLoc08, dwArgC8, dwArg0108, dwArg0148, out s1, out a0_227, out a1, out a2_228, out a3, out a4, out s2_229, out s3, out s4, out s5, out s6)
	a5_111 = 4<32>
l2304F984:
	s1Out = s1
	a0Out = a5_111
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s10Out = s10
	mstatusOut = mstatus
	return ra
aws_iot_mqtt_attempt_reconnect_exit:


word32 aws_iot_mqtt_internal_serialize_ack(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg0128, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_internal_cycle_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 t3 tp
// Preserved: sp
aws_iot_mqtt_internal_serialize_ack_entry:
l2304F9A0:
	word32 s0_15 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l2304FA04
l2304F9B4:
	branch a5 == 0<32> l2304FA04
l2304F9B6:
	s0_15 = -33<i32>
	branch a1 <=u 3<32> l2304FA04
l2304F9C2:
	word32 a5_36
	word32 a0_33 = aws_iot_mqtt_internal_init_header(fp + -40<i32>, a2, CONVERT(a2 <u 0xFFFFFFF9<32>, bool, word32), a3, 0<32>, out a1, out a3, out a4, out a5_36)
	s2 = a4
	s3 = a5
	s0_15 = a0_33
	branch a0_33 != 0<32> l2304FA04
l2304F9DC:
	word32 a5_51
	word32 a5_109
	word32 a1_110
	word32 a4_111
	aws_iot_mqtt_internal_write_len_to_buffer(aws_iot_mqtt_internal_write_char(0<32>, a5_36, out a5_109), 2<32>, out a1_110, out a3, out a4_111, out a5_51)
	word32 a5_112
	Mem63[a5:word32] = aws_iot_mqtt_internal_write_uint_16(a4, a5_51, out a4, out a5_112) - a0
	a1 = a4
l2304FA04:
	0<32> = dwArg0128
	a0Out = s0_15
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	return dwArgE4
aws_iot_mqtt_internal_serialize_ack_exit:


word32 aws_iot_mqtt_internal_deserialize_publish(word32 t1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 dwArgA4, word32 dwArg0198, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_internal_cycle_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] Stack +00A4:[0..31] Stack +0198:[0..31] t1:[0..31]
// LiveOut: a0 a1 a2 a3 a4 ra s0 s2 s3 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 t0 t1 t3 tp
// Preserved: s8 sp
aws_iot_mqtt_internal_deserialize_publish_entry:
l2304FA14:
	word32 s7_110
	branch a0 != 0<32> l2304FA52
l2304FA52:
	branch a1 == 0<32> l2304FA36
l2304FA54:
	branch a2 == 0<32> l2304FA36
l2304FA56:
	branch a3 == 0<32> l2304FA36
l2304FA58:
	s7_110 = 0xFFFFFFE0<32>
	branch t1 <=u 3<32> l2304FA38
l2304FA60:
	word32 a5_233
	word32 a0_50 = aws_iot_mqtt_internal_read_char(a5, out a4, out a5_233)
	s3 = a7
	s2 = a6
	s6 = a4
	branch (a0_50 >>u 4<u32> & 255<i32>) != 3<32> l2304FA36
l2304FA82:
	Mem57[a0:byte] = SLICE(a0_50 >> 3<u32> & 1<32>, byte, 0)
	Mem60[a1:byte] = SLICE(a0_50 >> 1<u32> & 3<32>, byte, 0)
	Mem62[a2:byte] = SLICE(a0_50 & 1<32>, byte, 0)
	word32 a5_68
	word32 a0_66 = aws_iot_mqtt_internal_decode_remaining_length_from_buffer(a0_50 & 1<32>, fp + -56<i32>, fp + -52<i32>, out a3, out a4, out a5_68)
	a1 = fp + -56<i32>
	s7_110 = a0_66
	branch a0_66 != 0<32> l2304FA38
l2304FAAA:
	a4 = 1<32>
	word32 s0_79 = dwArgA4 + a5_68
	branch a5_68 <= 1<32> l2304FA36
l2304FABC:
	word32 a5_234
	word32 a0_81 = aws_iot_mqtt_internal_read_uint16_t(1<32>, out a3, out a4, out a5_234)
	Mem86[a5:word16] = SLICE(a0_81, word16, 0)
	branch s0_79 <u a0_81 + dwArgA4 l2304FA36
l2304FACE:
	Mem88[a4:word32] = dwArgA4
	branch s0_79 - (dwArgA4 + CONVERT(Mem88[a5:uint16], uint16, word32)) < 0<32> l2304FA36
l2304FAE2:
	word32 a5_104 = CONVERT(Mem91[a1:byte], byte, word32)
	branch a5_104 == 0<32> l2304FAF2
l2304FAE8:
	Mem99[a3:word16] = SLICE(aws_iot_mqtt_internal_read_uint16_t(a4, out a3, out a4, out a5_104), word16, 0)
l2304FAF2:
	Mem107[a7:word32] = s0_79 - a5_104
	Mem109[a6:word32] = a5_104
l2304FA36:
	s7_110 = 0xFFFFFFFF<32>
l2304FA38:
	0<32> = dwArg0198
	s0Out = dwArg0158
	a0Out = s7_110
	a1Out = a1
	a2Out = dwArg0138
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s6Out = s6
	s7Out = s7_110
	return dwArg4C
aws_iot_mqtt_internal_deserialize_publish_exit:


word32 aws_iot_mqtt_internal_deserialize_ack(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_publish
//      aws_iot_mqtt_unsubscribe
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t1 t3 tp
// Preserved: sp
aws_iot_mqtt_internal_deserialize_ack_entry:
l2304FB00:
	word32 s0_16 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l2304FB66
l2304FB14:
	branch a1 == 0<32> l2304FB66
l2304FB16:
	branch a2 == 0<32> l2304FB66
l2304FB18:
	branch a3 == 0<32> l2304FB66
l2304FB1A:
	s0_16 = 0xFFFFFFE0<32>
	branch a4 <=u 3<32> l2304FB66
l2304FB22:
	word32 a4_107
	word32 a5_108
	word32 a0_27 = aws_iot_mqtt_internal_read_char(3<32>, out a4_107, out a5_108)
	Mem32[a1:byte] = SLICE(a0_27 >> 3<u32> & 1<32>, byte, 0)
	Mem34[a0:byte] = SLICE(a0_27 >>u 4<i32>, byte, 0)
	word32 a5_109
	word32 a0_38 = aws_iot_mqtt_internal_decode_remaining_length_from_buffer(a0_27 >>u 4<i32>, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, out a3, out a4, out a5_109)
	s1 = a1
	s2 = a2
	s0_16 = a0_38
	branch a0_38 != 0<32> l2304FB66
l2304FB4C:
	s0_16 = dwArgA4
	branch a4 <= 1<32> l2304FB74
l2304FB74:
	s0_16 = 0xFFFFFFFF<32>
l2304FB5C:
	word32 a5_110
	Mem58[a2:word16] = SLICE(aws_iot_mqtt_internal_read_uint16_t(a4, out a3, out a4, out a5_110), word16, 0)
l2304FB66:
	s1Out = s1
	a0Out = s0_16
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s4Out = dwArg04
	s8Out = 0<32>
	return s0_16
aws_iot_mqtt_internal_deserialize_ack_exit:


word32 aws_iot_mqtt_publish(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArg0104, word32 dwArg0184, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      publishToShadowAction
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +0104:[0..31] Stack +0184:[0..31]
// LiveOut: a0 mstatus ra s0 s2 s3 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s5 sp
aws_iot_mqtt_publish_entry:
l2304FB78:
	branch a0 == 0<32> l2304FD06
l2304FB7E:
	branch a1 == 0<32> l2304FD06
l2304FB82:
	branch a2 == 0<32> l2304FD06
l2304FB86:
	branch a3 == 0<32> l2304FD06
l2304FD06:
	s0Out = s0
	a0Out = 0xFFFFFFFE<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s9Out = s9
	mstatusOut = mstatus
	return ra
l2304FB8A:
	word32 s0_332 = a0
	word32 s3_241 = a2
	word32 a5_348 = 0xFFFFFFF3<32>
	branch aws_iot_mqtt_is_client_connected(a0) == 0<32> l2304FCE6
l2304FBB8:
	word32 a0_44 = aws_iot_mqtt_get_client_state(a0)
	s4 = a0_44
	branch a0_44 == 3<32> l2304FBCE
l2304FBC6:
	a4 = 9<32>
	a5_348 = 0xFFFFFFE2<32>
	branch a0_44 != 9<32> l2304FCE6
l2304FBCE:
	word32 a0_63
	word32 a1_64
	word32 s5_79
	word32 s6_663
	word32 a2_661
	word32 a4_662
	word32 s1_239
	word32 a3_130
	s0_332 = aws_iot_mqtt_set_client_state(a3, a0, 5<32>, a3, a4, a2, a0_44, mstatus, dwLoc68, dwArg68, dwArgA8, dwArgE8, out s1_239, out a0_63, out a1_64, out a2_661, out a3_130, out a4_662, out s2, out s3_241, out s4, out s5_79, out s6_663)
	a5_348 = a0_63
	branch a0_63 != 0<32> l2304FCE6
l2304FBDE:
	init_timer(fp + -76<i32>)
	word32 a2_664
	word32 s0_93 = countdown_ms(fp + -76<i32>, a1_64, out a2_664)
	branch CONVERT(Mem36[s1_239:byte], byte, word32) != 1<32> l2304FC00
l2304FBF6:
	Mem102[s1_239 + 4<i32>:word16] = SLICE(aws_iot_mqtt_get_next_packet_id(s0_93), word16, 0)
l2304FC00:
	word32 s9_105 = Mem104[s1_239 + 8<i32>:int32]
	word32 s0_111 = Mem107[a3_130 + 52<i32>:word32]
	word32 s7_112 = CONVERT(Mem107[s1_239:byte], byte, word32)
	word32 a4_113 = CONVERT(Mem107[s1_239 + 1<i32>:byte], byte, word32)
	word32 s10_114 = CONVERT(Mem107[s1_239 + 4<i32>:uint16], uint16, word32)
	word32 s6_115 = Mem107[s1_239 + 12<i32>:int32]
	branch s9_105 == 0<32> l2304FCD4
l2304FC24:
	word32 a5_118 = s3_241 + s6_115
	word32 s11_120 = a5_118 + 4<i32>
	branch s7_112 != 0<32> l2304FC36
l2304FC32:
	s11_120 = a5_118 + 2<i32>
l2304FC36:
	s0_111 = s7
	branch a3_130 <u aws_iot_mqtt_internal_get_final_packet_length_from_remaining_length(s11_120, out a3_130, out a4_113) l2304FCD4
l2304FC4C:
	word32 a5_144
	word32 a1_672
	branch aws_iot_mqtt_internal_init_header(fp + -84<i32>, 3<32>, s7_112, 0<32>, a4_113, out a1_672, out a3_130, out a4_113, out a5_144) != 0<32> l2304FCD4
l2304FC5C:
	word32 a5_673
	word32 a0_150 = aws_iot_mqtt_internal_write_char(0<32>, a5_144, out a5_673)
	0<32> = dwArgE4
	word32 a5_158
	word32 a1_674
	word32 a4_676
	word32 a3_675
	aws_iot_mqtt_internal_write_len_to_buffer(a0_150, s11_120, out a1_674, out a3_675, out a4_676, out a5_158)
	0<32> = dwArg0184
	word32 a5_172
	word32 a1_677
	word32 s2_680
	word32 a3_678
	word32 a4_679
	word32 a0_168
	aws_iot_mqtt_internal_write_utf8_string(s5_79, s3_241, a5_158, dwLoc38, out a0_168, out a1_677, out a3_678, out a4_679, out a5_172, out s2_680)
	branch s7_112 == 0<32> l2304FC8A
l2304FC82:
	word32 a5_691
	word32 a4_690
	a0_168 = aws_iot_mqtt_internal_write_uint_16(s10_114, a5_172, out a4_690, out a5_691)
l2304FC8A:
	0<32> = dwArgE4
	word32 a4_200
	word32 a1_203
	word32 a3_205
	word32 a5_682
	word32 a2_681
	word32 a6_683
	word32 a7_684
	memcpy(a0_168, s9_105, s6_115, out a1_203, out a2_681, out a3_205, out a4_200, out a5_682, out a6_683, out a7_684)
	0<32> = dwArg0104
	word32 a0_227
	word32 s5_688
	word32 s6_689
	word32 a1_685
	word32 a2_686
	word32 s2_687
	word32 ra_251 = aws_iot_mqtt_internal_send_packet(ra, s7, a1_203 + s6_115 - (s0_93 + 64<i32>), fp + -76<i32>, a3_205, a4_200, mstatus, dwLoc1C, dwArg58, dwArg98, dwArgB8, out s0_111, out s1_239, out a0_227, out a1_685, out a2_686, out a3_130, out a4_113, out s2_687, out s3_241, out s4, out s5_688, out s6_689, out mstatus)
	branch a0_227 != 0<32> l2304FCD4
l2304FCA8:
	a4_113 = CONVERT(Mem166[s1_239:byte], byte, word32)
	branch a4_113 != 1<32> l2304FCD4
l2304FCB2:
	word32 a0_259
	word32 s10_695
	word32 a1_692
	word32 s2_693
	word32 s7_694
	aws_iot_mqtt_internal_wait_for_read(ra_251, s0_111, fp + -76<i32>, a3_130, a4_113, s10_114, mstatus, a3_130, dwLoc58, dwLoc0C, dwArg08, dwArg48, dwArg98, dwArgD8, out s0_111, out s1_239, out a0_259, out a1_692, out a3_130, out a4_113, out s2_693, out s3_241, out s4, out s7_694, out s10_695, out mstatus)
	branch a0_259 != 0<32> l2304FCD4
l2304FCC0:
	word32 a0_696
	word32 s2_697
	word32 s8_698
	s0_111 = aws_iot_mqtt_internal_deserialize_ack(fp + -84<i32>, fp + -85<i32>, fp + -80<i32>, Mem166[a4_113 + 56<i32>:word32] + 576<i32>, a4_113, out s1_239, out a0_696, out a3_130, out a4_113, out s2_697, out s4, out s8_698)
l2304FCD4:
	word32 a0_325
	word32 a1_666
	word32 s1_665
	word32 a3_668
	word32 a2_667
	word32 a4_669
	word32 s5_670
	word32 s6_671
	s0_332 = aws_iot_mqtt_set_client_state(s1_239, s0_111, s4, a3_130, a4_113, s3_241, s4, mstatus, dwLoc68, dwArg68, dwArgA8, dwArgE8, out s1_665, out a0_325, out a1_666, out a2_667, out a3_668, out a4_669, out s2, out s3_241, out s4, out s5_670, out s6_671)
	a5_348 = a0_325
	branch s2 == 0<32> l2304FCE6
l2304FCE4:
	a5_348 = s2
l2304FCE6:
	s0Out = s0_332
	a0Out = a5_348
	s2Out = s2
	s3Out = s3_241
	s4Out = s4
	s9Out = dwArg18
	mstatusOut = mstatus
	return dwLoc24
aws_iot_mqtt_publish_exit:


word32 _aws_iot_mqtt_deserialize_suback.constprop.0(word32 a0, word32 a1, word32 a2, word32 a4, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_subscribe
//      aws_iot_mqtt_resubscribe
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 t1 t3 tp
// Preserved: sp
_aws_iot_mqtt_deserialize_suback.constprop.0_entry:
l2304FD0A:
	word32 a5_146 = 4<32>
	word32 s3_23 = 0xFFFFFFE0<32>
	branch a4 <=u 4<32> l2304FD42
l2304FD28:
	s2 = a0
	s1 = a1
	word32 a5_178
	word32 a0_36 = aws_iot_mqtt_internal_read_char(4<32>, out a4, out a5_178) >>u 4<i32> & 255<i32>
	a5_146 = 9<32>
	branch a0_36 == 9<32> l2304FD56
l2304FD56:
	word32 a0_41 = aws_iot_mqtt_internal_decode_remaining_length_from_buffer(a0_36, fp + -40<i32>, fp + -36<i32>, out a3, out a4, out a5_146)
	a1 = fp + -40<i32>
	s3_23 = a0_41
	branch a0_41 != 0<32> l2304FD42
l2304FD64:
	word32 s0_54 = a5_146 + a4 + a4
	a5_146 = 1<32>
	branch a4 <= 1<32> l2304FD40
l2304FD78:
	Mem61[a0:word16] = SLICE(aws_iot_mqtt_internal_read_uint16_t(a4, out a3, out a4, out a5_146), word16, 0)
	Mem62[a1:word32] = 0<32>
	s5 = 1<32>
l2304FD88:
	branch a5_146 >=u s0_54 l2304FD42
l2304FD8E:
	s1 = Mem65[a5_146:word32]
	branch a5_146 >u 1<32> l2304FD40
l2304FD94:
	Mem72[a5_146 + 1<i32>:word32] = s1
	s2 = a2 + a5_146
	Mem79[s2:byte] = SLICE(aws_iot_mqtt_internal_read_char(a5_146, out a4, out a5_146), byte, 0)
l2304FD40:
	s3_23 = 0xFFFFFFFF<32>
l2304FD42:
	0<32> = dwArg0128
	s1Out = s1
	a0Out = s3_23
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5_146
	s2Out = s2
	s3Out = s3_23
	s4Out = dwArg78
	s5Out = s5
	return dwArgE4
_aws_iot_mqtt_deserialize_suback.constprop.0_exit:


word32 _aws_iot_mqtt_serialize_subscribe.constprop.1(word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_subscribe
//      aws_iot_mqtt_resubscribe
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31]
// LiveOut: a0 a1 a3 a4 ra s0 s1 s3 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
_aws_iot_mqtt_serialize_subscribe.constprop.1_entry:
l2304FDAA:
	word32 s0_23 = CONVERT(Mem21[a4:uint16], uint16, word32)
	word32 a3_183
	word32 a4_154
	branch a1 <u aws_iot_mqtt_internal_get_final_packet_length_from_remaining_length(s0_23 + 5<32>, out a3_183, out a4_154) l2304FE3C
l2304FDE8:
	word32 a5_55
	word32 a3_184
	branch aws_iot_mqtt_internal_init_header(fp + -56<i32>, 8<32>, 1<32>, 0<32>, 0<32>, out a1, out a3_184, out a4_154, out a5_55) != 0<32> l2304FE3C
l2304FDFA:
	word32 a5_70
	word32 a5_185
	word32 a1_186
	word32 a3_187
	word32 a4_188
	aws_iot_mqtt_internal_write_len_to_buffer(aws_iot_mqtt_internal_write_char(0<32>, a5_55, out a5_185), s0_23 + 5<32>, out a1_186, out a3_187, out a4_188, out a5_70)
	word32 a5_79
	word32 a4_189
	aws_iot_mqtt_internal_write_uint_16(a2, a5_70, out a4_189, out a5_79)
	word32 a5_87
	word32 s2_89
	word32 a0_190
	word32 a1_191
	word32 a3_192
	aws_iot_mqtt_internal_write_utf8_string(Mem75[a3:int32], CONVERT(Mem75[a4:uint16], uint16, word32), a5_79, dwLoc18, out a0_190, out a1_191, out a3_192, out a4_154, out a5_87, out s2_89)
	a1 = CONVERT(Mem75[a5:byte], byte, word32)
	word32 a5_193
	Mem106[a6:word32] = aws_iot_mqtt_internal_write_char(a1, a5_87, out a5_193) - s2_89
l2304FE3C:
	s0Out = s0_23 + 5<32>
	s1Out = dwLoc4C
	a0Out = dwLoc4C
	a1Out = a1
	a3Out = s2
	a4Out = a4_154
	s3Out = a4
	s4Out = dwArg0168
	s7Out = a2
	return dwLoc08
_aws_iot_mqtt_serialize_subscribe.constprop.1_exit:


word32 aws_iot_mqtt_subscribe(word32 a0, word32 a1, word32 a3, word32 a4, word32 s6, word32 s10, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg28, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_connect
//      registerJsonTokenOnDelta
//      subscribeToShadowActionAcks
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s10:[0..31] s6:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_mqtt_subscribe_entry:
l2304FE54:
	branch a0 == 0<32> l2304FF8E
l2304FE5A:
	branch a1 == 0<32> l2304FF8E
l2304FE5E:
	branch a4 == 0<32> l2304FF8E
l2304FF8E:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFFE<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s10Out = s10
	mstatusOut = mstatus
	return ra
l2304FE62:
	word32 s0_26 = a0
	word32 s5_276 = a5
	word32 s2_269 = a3
	word32 s6_277 = a2
	branch aws_iot_mqtt_is_client_connected(a0) == 0<32> l2304FF20
l2304FE88:
	word32 a0_38 = aws_iot_mqtt_get_client_state(a0)
	s3 = a0_38
	branch a0_38 == 3<32> l2304FE9E
l2304FE96:
	branch a0_38 != 9<32> l2304FF20
l2304FE9E:
	word32 a0_56
	word32 a1_57
	word32 s1_64
	word32 a3_509
	word32 s4_510
	s0_26 = aws_iot_mqtt_set_client_state(a1, a0, 6<32>, a3, a4, a0_38, a4, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s1_64, out a0_56, out a1_57, out a2, out a3_509, out a4, out s2_269, out s3, out s4_510, out s5_276, out s6_277)
	branch a0_56 != 0<32> l2304FF20
l2304FEAC:
	init_timer(fp + -44<i32>)
	byte bLoc41_401 = SLICE(s1_64, byte, 24)
	word32 a0_108
	word32 a1_126
	word32 a2_511
	word32 s3_118
	word32 s0_115
	word32 s4_119
	word32 s1_116
	word32 a4_111
	word32 a3_110
	word32 ra_114 = _aws_iot_mqtt_serialize_subscribe.constprop.1(a1_57, aws_iot_mqtt_get_next_packet_id(countdown_ms(fp + -44<i32>, a1_57, out a2_511)), fp + -56<i32>, fp + -64<i32>, fp + -65<i32>, fp + -52<i32>, out s0_115, out s1_116, out a0_108, out a1_126, out a3_110, out a4_111, out s3_118, out s4_119, out s7)
	branch a0_108 != 0<32> l2304FF0E
l2304FEF6:
	s1_116 = 0<32>
	a4_111 = 5<32>
l2304FEFE:
	branch a3_110 == 0<32> l2304FF36
l2304FF36:
	word32 a0_149
	word32 s2_519
	word32 s5_520
	word32 s6_521
	word32 a1_517
	word32 a2_518
	word32 ra_173 = aws_iot_mqtt_internal_send_packet(ra_114, s0_115, a1_126, fp + -44<i32>, a3_110, 5<32>, mstatus, dwArg04, dwArg78, dwArgB8, dwArgD8, out s0_115, out s1_116, out a0_149, out a1_517, out a2_518, out a3_110, out a4_111, out s2_519, out s3_118, out s4_119, out s5_520, out s6_521, out mstatus)
	branch a0_149 != 0<32> l2304FF0E
l2304FF44:
	word32 a0_179
	word32 a1_522
	word32 s2_523
	aws_iot_mqtt_internal_wait_for_read(ra_173, s0_115, fp + -44<i32>, a3_110, a4_111, s10, mstatus, dwLoc4C, s6, dwArg14, dwArg28, dwArg68, dwArgB8, dwArgF8, out s0_115, out s1_116, out a0_179, out a1_522, out a3_110, out a4_111, out s2_523, out s3_118, out s4_119, out s7, out s10, out mstatus)
	branch a0_179 != 0<32> l2304FF0E
l2304FF52:
	word32 a0_213
	word32 a5_215
	word32 s5_230
	word32 s2_525
	word32 a1_524
	s0_115 = _aws_iot_mqtt_deserialize_suback.constprop.0(fp + -62<i32>, fp + -48<i32>, fp + -60<i32>, a4_111, dwArgD8, out s1_116, out a0_213, out a1_524, out a3_110, out a4_111, out a5_215, out s2_525, out s3_118, out s4_119, out s5_230)
	branch a0_213 != 0<32> l2304FF0E
l2304FF68:
	a3_110 = (s1_116 << 4<u32>) + s0_115
	Mem235[a3_110 + 1160<i32>:word32] = a5_215
	Mem237[a3_110 + 1168<i32>:word32] = s4_119
	Mem238[a3_110 + 1172<i32>:word32] = s5_230
	Mem239[a3_110 + 1164<i32>:word16] = 0<16>
	Mem241[a3_110 + 1166<i32>:byte] = SLICE(CONVERT(bLoc41_401, byte, word32), byte, 0)
l2304FF02:
	s1_116 = s1_116 + 1<32>
	branch s1_116 != 5<32> l2304FEFE
l2304FF0A:
l2304FF0E:
	word32 s1_512
	word32 a0_513
	word32 a1_514
	word32 s4_516
	word32 a3_515
	s0_26 = aws_iot_mqtt_set_client_state(s1_116, s0_115, s3_118, a3_110, a4_111, s3_118, s4_119, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s1_512, out a0_513, out a1_514, out a2, out a3_515, out a4, out s2_269, out s3, out s4_516, out s5_276, out s6_277)
	branch s2_269 == 0<32> l2304FF20
l2304FF1E:
l2304FF20:
	s0Out = s0_26
	s1Out = dwLoc4C
	a0Out = dwArg0188
	a2Out = a2
	a3Out = s2
	a4Out = a4
	s2Out = s2_269
	s3Out = s3
	s4Out = dwArg0168
	s5Out = s5_276
	s6Out = s6_277
	s7Out = s7
	s10Out = s10
	mstatusOut = mstatus
	return dwLoc08
aws_iot_mqtt_subscribe_exit:


word32 aws_iot_mqtt_resubscribe(word32 s1, word32 a0, word32 a3, word32 s3, word32 s4, word32 s6, word32 s10, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg28, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_attempt_reconnect
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] s1:[0..31] s10:[0..31] s3:[0..31] s4:[0..31] s6:[24..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s1 s10 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_mqtt_resubscribe_entry:
l2304FF92:
	branch a0 == 0<32> l2305009C
l2305009C:
	s1Out = s1
	a0Out = 0xFFFFFFFE<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s10Out = s10
	mstatusOut = mstatus
	return ra
l2304FF96:
	byte bLoc35_433 = SLICE(s6, byte, 24)
	word32 a5_25 = 0xFFFFFFF3<32>
	branch aws_iot_mqtt_is_client_connected(a0) == 0<32> l23050086
l2304FFB2:
	a4 = 3<32>
	a5_25 = 0xFFFFFFE2<32>
	branch aws_iot_mqtt_get_client_state(a0) != 3<32> l23050086
l2304FFC0:
	word32 a0_35
	word32 s1_528
	word32 s2_530
	word32 s4_531
	word32 a2_529
	word32 a3_112
	word32 s0_117 = aws_iot_mqtt_set_client_state(s1, a0, 8<32>, a3, 3<32>, s3, s4, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s1_528, out a0_35, out a1, out a2_529, out a3_112, out a4, out s2_530, out s3, out s4_531, out s5, out s6)
	a5_25 = a0_35
	branch a0_35 != 0<32> l23050086
l2304FFCE:
	word32 s2_219 = s0_117 + 1160<i32>
	word32 s3_120 = 0<32>
	word32 a4_113 = 5<32>
	word32 dwLoc38_434 = SEQ(bLoc35_433, 0<8>, 0<16>)
l2304FFE8:
	branch a3_112 == 0<32> l2304FFF4
l2304FFEC:
	s3_120 = s3_120 + 1<32>
	branch s3_120 != 5<32> l2304FFE8
l2304FFF4:
	word32 s4_121 = 0<32>
l2304FFFE:
	word32 s1_135
	branch s3_120 != s4_121 l23050006
l23050006:
	branch Mem83[s2_219:int32] != 0<32> l23050012
l23050012:
	init_timer(fp + -44<i32>)
	word32 a2_536
	countdown_ms(fp + -44<i32>, a1, out a2_536)
	word32 a0_110
	word32 a1_128
	word32 s1_537
	word32 s7_538
	word32 ra_116 = _aws_iot_mqtt_serialize_subscribe.constprop.1(a1, aws_iot_mqtt_get_next_packet_id(Mem83[a1 + 52<i32>:word32]), s2_219, s2_219 + 4<i32>, s2_219 + 6<i32>, fp + -52<i32>, out s0_117, out s1_537, out a0_110, out a1_128, out a3_112, out a4_113, out s3_120, out s4_121, out s7_538)
	s1_135 = a0_110
	branch a0_110 != 0<32> l23050076
l23050046:
	word32 a0_140
	word32 s2_542
	word32 s5_543
	word32 s6_544
	word32 a1_540
	word32 a2_541
	word32 s1_539
	word32 ra_164 = aws_iot_mqtt_internal_send_packet(ra_116, s0_117, a1_128, fp + -44<i32>, a3_112, a4_113, mstatus, dwArg04, dwArg78, dwArgB8, dwArgD8, out s0_117, out s1_539, out a0_140, out a1_540, out a2_541, out a3_112, out a4_113, out s2_542, out s3_120, out s4_121, out s5_543, out s6_544, out mstatus)
	s1_135 = a0_140
	branch a0_140 != 0<32> l23050076
l23050054:
	word32 a0_170
	word32 s2_547
	word32 s7_548
	word32 s1_545
	word32 a1_546
	aws_iot_mqtt_internal_wait_for_read(ra_164, s0_117, fp + -44<i32>, a3_112, a4_113, s10, mstatus, dwLoc4C, dwLoc38_434, dwArg14, dwArg28, dwArg68, dwArgB8, dwArgF8, out s0_117, out s1_545, out a0_170, out a1_546, out a3_112, out a4_113, out s2_547, out s3_120, out s4_121, out s7_548, out s10, out mstatus)
	s1_135 = a0_170
	branch a0_170 != 0<32> l23050076
l23050062:
	word32 a0_204
	word32 a5_550
	word32 s5_551
	word32 s1_549
	s0_117 = _aws_iot_mqtt_deserialize_suback.constprop.0(fp + -58<i32>, fp + -48<i32>, fp + -56<i32>, a4_113, dwArgD8, out s1_549, out a0_204, out a1, out a3_112, out a4_113, out a5_550, out s2_219, out s3_120, out s4_121, out s5_551)
	s1_135 = a0_204
	branch a0_204 == 0<32> l2305000C
l2305000C:
	s4_121 = s4_121 + 1<32>
	s2_219 = s2_219 + 0x10<32>
l23050002:
	s1_135 = 0<32>
l23050076:
	word32 a0_248
	word32 s1_256
	word32 a2_532
	word32 a3_533
	word32 s4_535
	word32 s2_534
	aws_iot_mqtt_set_client_state(s1_135, s0_117, 3<32>, a3_112, a4_113, s3_120, s4_121, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s1_256, out a0_248, out a1, out a2_532, out a3_533, out a4, out s2_534, out s3, out s4_535, out s5, out s6)
	a5_25 = a0_248
	branch s1_256 == 0<32> l23050086
l23050084:
	a5_25 = s1_256
l23050086:
	s1Out = dwLoc4C
	a0Out = a5_25
	a1Out = a1
	a3Out = s2
	a4Out = a4
	s3Out = s3
	s4Out = dwArg0168
	s5Out = s5
	s6Out = s6
	s10Out = s10
	mstatusOut = mstatus
	return dwLoc08
aws_iot_mqtt_resubscribe_exit:


word32 aws_iot_mqtt_unsubscribe(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s6, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg28, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      unsubscribeFromAcceptedAndRejected
//      subscribeToShadowActionAcks
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s6:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31]
// LiveOut: a0 a2 a3 mstatus ra s0 s1 s2 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_mqtt_unsubscribe_entry:
l230500A2:
	branch a0 == 0<32> l23050224
l230500A8:
	branch a1 == 0<32> l23050224
l23050224:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFFE<32>
	a2Out = a2
	a3Out = a3
	s2Out = s2
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
l230500AC:
	word32 s2_351
	word32 s5_35 = a2
	word32 a5_365 = 0xFFFFFFF3<32>
	s2_351 = s2
	branch aws_iot_mqtt_is_client_connected(a0) == 0<32> l23050102
l230500D4:
	word32 a0_40 = aws_iot_mqtt_get_client_state(a0)
	branch a0_40 == 3<32> l230500EA
l230500E2:
	a4 = 9<32>
	a5_365 = 0xFFFFFFE2<32>
	s2_351 = s2
	branch a0_40 != 9<32> l23050102
l230500EA:
	word32 s1_68
	word32 s5_76
	word32 s6_742
	word32 a1_739
	word32 a2_740
	word32 s2_741
	word32 s4_190
	word32 s3_200
	word32 a4_124
	word32 a3_123
	word32 a0_410
	word32 s0_109 = aws_iot_mqtt_set_client_state(s1, a0, 7<32>, a3, a4, a1, a0_40, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s1_68, out a0_410, out a1_739, out a2_740, out a3_123, out a4_124, out s2_741, out s3_200, out s4_190, out s5_76, out s6_742)
	branch a0_410 == 0<32> l23050120
l23050120:
l2305012A:
	word32 s1_126
	word32 s1_88 = Mem32[a0_410:word32]
	branch a0_410 != 0<32> l23050148
l23050148:
	word32 a1_92
	word32 a5_751
	word32 a2_750
	a0_410 = strcmp(a0_410, s3_200, out a1_92, out a2_750, out a3_123, out a4_124, out a5_751)
	branch a0_410 != 0<32> l2305012E
l23050150:
	init_timer(fp + -60<i32>)
	word32 a2_752
	s0_109 = countdown_ms(fp + -60<i32>, a1_92, out a2_752)
	word32 s10_113 = Mem32[s0_109 + 52<i32>:int32]
	word32 a0_114 = aws_iot_mqtt_get_next_packet_id(s0_109)
	dwLoc48 = s0_109 + 64<i32>
	s1_126 = -33<i32>
	branch s10_113 <u aws_iot_mqtt_internal_get_final_packet_length_from_remaining_length(s5_76 + 4<i32>, out a3_123, out a4_124) l23050136
l23050186:
	word32 a5_135
	word32 a1_759
	word32 a0_132 = aws_iot_mqtt_internal_init_header(fp + -68<i32>, 0xA<32>, 1<32>, 0<32>, 0<32>, out a1_759, out a3_123, out a4_124, out a5_135)
	s1_126 = a0_132
	branch a0_132 != 0<32> l23050136
l23050198:
	word32 a5_150
	word32 a4_763
	word32 a1_761
	word32 a5_760
	word32 a3_762
	word32 a0_154 = aws_iot_mqtt_internal_write_len_to_buffer(aws_iot_mqtt_internal_write_char(0<32>, a5_135, out a5_760), s5_76 + 4<i32>, out a1_761, out a3_762, out a4_763, out a5_150) + a5_150
	word32 a5_159
	word32 a4_764
	aws_iot_mqtt_internal_write_uint_16(a0_114, a5_150, out a4_764, out a5_159)
	word32 a1_164
	word32 a4_166
	word32 a3_171
	word32 s2_767
	word32 a5_766
	word32 a0_765
	aws_iot_mqtt_internal_write_utf8_string(s3_200, s5_76, a5_159, dwLoc18, out a0_765, out a1_164, out a3_171, out a4_166, out a5_766, out s2_767)
	dwLoc48 = a0_154
	word24 nLoc48_456 = SLICE(a0_154, word24, 0)
	word32 a0_186
	word32 a2_770
	word32 a1_769
	word32 s1_768
	word32 s2_771
	word32 s5_772
	word32 s6_773
	word32 ra_210 = aws_iot_mqtt_internal_send_packet(ra, s0_109, a1_164 - (s0_109 + 64<i32>), fp + -60<i32>, a3_171, a4_166, mstatus, dwArg04, dwArg78, dwArgB8, dwArgD8, out s0_109, out s1_768, out a0_186, out a1_769, out a2_770, out a3_123, out a4_124, out s2_771, out s3_200, out s4_190, out s5_772, out s6_773, out mstatus)
	s1_126 = a0_186
	branch a0_186 != 0<32> l23050136
l230501D4:
	word32 a0_215
	word32 s2_776
	word32 s7_777
	word32 s10_778
	word32 s1_774
	word32 a1_775
	aws_iot_mqtt_internal_wait_for_read(ra_210, s0_109, fp + -60<i32>, a3_123, a4_124, s10_113, mstatus, dwLoc4C, s6, dwArg14, dwArg28, dwArg68, dwArgB8, dwArgF8, out s0_109, out s1_774, out a0_215, out a1_775, out a3_123, out a4_124, out s2_776, out s3_200, out s4_190, out s7_777, out s10_778, out mstatus)
	s1_126 = a0_215
	branch a0_215 != 0<32> l23050136
l230501E2:
	word32 a0_251
	word32 s8_255
	word32 s1_779
	word32 s2_264
	s0_109 = aws_iot_mqtt_internal_deserialize_ack(fp + -69<i32>, fp + -68<i32>, fp + -64<i32>, Mem155[a4_124 + 56<i32>:word32] + 576<i32>, a4_124, out s1_779, out a0_251, out a3_123, out a4_124, out s2_264, out s4_190, out s8_255)
	s1_126 = a0_251
	branch a0_251 != 0<32> l23050136
l23050200:
	a4_124 = 0<32>
	dwLoc48 = CONVERT(nLoc48_456, word24, uint32) (alias)
	branch true l23050134
l2305020A:
	word32 a0_272 = Mem271[s2_264:int32]
	branch a0_272 == 0<32> l2305021C
l23050210:
	word32 a1_780
	word32 a2_781
	word32 a5_782
	branch strcmp(a0_272, s3_200, out a1_780, out a2_781, out a3_123, out a4_124, out a5_782) != 0<32> l2305021C
l23050218:
	Mem284[s2_264:word32] = 0<32>
l2305021C:
	s2_264 = s2_264 + 0x10<32>
	branch s2_264 != s8_255 l2305020A
l23050222:
l2305012E:
	branch s1_88 + 0x10<32> != s0_109 + 1240<i32> l2305012A
l23050134:
	s1_126 = 0xFFFFFFFF<32>
l23050136:
	word32 a0_342
	word32 s1_350
	word32 a2_754
	word32 a1_753
	word32 a3_755
	word32 s3_757
	word32 a4_756
	word32 s4_758
	aws_iot_mqtt_set_client_state(s1_126, s0_109, s4_190, a3_123, a4_124, s3_200, s4_190, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s1_350, out a0_342, out a1_753, out a2_754, out a3_755, out a4_756, out s2_351, out s3_757, out s4_758, out s5_35, out s6)
	a5_365 = a0_342
	branch s1_350 == 0<32> l23050102
l23050144:
	a5_365 = s1_350
l230500F6:
	word32 a0_370
	word32 s1_743
	word32 a3_746
	word32 a1_744
	word32 a2_745
	word32 s3_748
	word32 s4_749
	word32 a4_747
	aws_iot_mqtt_set_client_state(s1_68, s0_109, s4_190, a3_123, a4_124, s3_200, s4_190, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s1_743, out a0_370, out a1_744, out a2_745, out a3_746, out a4_747, out s2_351, out s3_748, out s4_749, out s5_35, out s6)
	a5_365 = a0_370
l23050102:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = a5_365
	a2Out = dwArg01A8
	a3Out = s2
	s2Out = s2_351
	s5Out = s5_35
	s6Out = s6
	mstatusOut = mstatus
	return dwLoc08
aws_iot_mqtt_unsubscribe_exit:


word32 _aws_iot_mqtt_handle_disconnect(word32 ra, word32 a0, word32 a3, word32 a4, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg24, word32 dwArg88, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_mqtt_yield
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0088:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
_aws_iot_mqtt_handle_disconnect_entry:
l23050228:
	word32 s0_100 = a0
	word32 a0_17
	word32 a2_217
	word32 a5_218
	word32 a4_110
	word32 a3_111
	word32 mstatus_109
	word32 s1_106
	word32 s2_129
	word32 s3_108
	word32 s4_107
	word32 s5_130
	word32 s6_131
	word32 ra_105 = aws_iot_mqtt_disconnect(ra, a0, a3, a4, s3, s4, mstatus, dwArg14, dwArg24, dwArg88, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0138, out s1_106, out a0_17, out a2_217, out a3_111, out a4_110, out a5_218, out s2_129, out s3_108, out s4_107, out s5_130, out s6_131, out mstatus_109)
	branch a0_17 == 0<32> l23050252
l23050238:
	Mem42[a0 + 24<i32>:byte] = 0xB<8>
	word32 a5_43 = Mem42[a0 + 1260<i32>:int32]
	word32 s0_47
	word32 ra_48
	word32 s1_49
	word32 s4_55
	word32 s3_56
	word32 mstatus_57
	word32 a4_58
	word32 a3_59
	call a5_43 (retsize: 0;)
		uses: a0:a0 + 1248<i32>,a3:a3_23,a4:a4_24,a5:a5_43,mstatus:mstatus_39,ra:ra_40,s0:a0,s1:a0 + 1248<i32>,s3:s3_28,s4:s4_29,Stack +0024:dwArg14,Stack +0034:dwArg24,Stack +0098:dwArg88,Stack +00C8:dwArgB8,Stack +00D8:dwArgC8,Stack +00F8:dwArgE8,Stack +0108:dwArgF8,Stack +0148:dwArg0138
		defs: a3:a3_59,a4:a4_58,mstatus:mstatus_57,ra:ra_48,s0:s0_47,s1:s1_49,s3:s3_56,s4:s4_55
	call Mem42[s0_47 + 1268<i32>:int32] (retsize: 0;)
		uses: a0:s1_49,a3:a3_59,a4:a4_58,mstatus:mstatus_57,ra:ra_48,s0:s0_47,s1:s1_49,s3:s3_56,s4:s4_55,Stack +0014:dwArg14,Stack +0024:dwArg24,Stack +0088:dwArg88,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0138:dwArg0138
		defs: a3:a3_87,a4:a4_86,mstatus:mstatus_85,ra:ra_76,s0:s0_75,s1:s1_77,s2:s2_90,s3:s3_84,s4:s4_83,s5:s5_91,s6:s6_92
l23050252:
	word32 a5_102 = Mem101[s0_100 + 1240<i32>:int32]
	branch a5_102 == 0<32> l23050260
l23050258:
	call a5_102 (retsize: 0;)
		uses: a0:s0_100,a1:Mem101[s0_100 + 1244<i32>:int32],a3:a3_111,a4:a4_110,mstatus:mstatus_109,ra:ra_105,s0:s0_100,s1:s1_106,s3:s3_108,s4:s4_107,Stack +0014:dwArg14,Stack +0024:dwArg24,Stack +0088:dwArg88,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0138:dwArg0138
		defs: a3:a3_126,a4:a4_125,mstatus:mstatus_124,ra:ra_115,s0:s0_114,s1:s1_116,s2:s2_129,s3:s3_123,s4:s4_122,s5:s5_130,s6:s6_131
l23050260:
	Mem141[s0_100 + 24<i32>:byte] = 0xB<8>
	s1Out = s1_106
	a0Out = 0xFFFFFFF3<32>
	a2Out = dwArg10
	a3Out = a3_111
	a4Out = a4_110
	s2Out = s2_129
	s3Out = s3_108
	s4Out = s4_107
	s5Out = s5_130
	s6Out = s6_131
	mstatusOut = mstatus_109
	return ra_105
_aws_iot_mqtt_handle_disconnect_exit:


word32 aws_iot_mqtt_yield(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s4, word32 s10, word32 mstatus, word32 dwArg98, word32 dwArgD8, word32 dwArg0118, word32 dwArg0198, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aws_iot_shadow_yield
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s4:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 mstatus ra s0 s10 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aws_iot_mqtt_yield_entry:
l23050272:
	word32 sp_3 = fp + -64<i32>
	word32 s0_124 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l23050340
l23050288:
	branch a1 == 0<32> l23050340
l2305028A:
	word32 a0_25 = aws_iot_mqtt_get_client_state(a0)
	word32 s1_101 = a0
	s2 = a1
	s3 = a0_25
	s0_124 = 5<32>
	branch a0_25 == 0xC<32> l23050340
l2305029C:
	branch a0_25 != 0xD<32> l2305031E
l2305031E:
	branch aws_iot_mqtt_is_client_connected(a0) != 0<32> l2305032A
l2305032A:
	s0_124 = 0xFFFFFFE2<32>
	branch a0_25 != 3<32> l23050340
l23050332:
	word32 a0_40
	word32 s6_877
	word32 s5_876
	word32 s4_875
	word32 a1_873
	word32 a2_874
	aws_iot_mqtt_set_client_state(a0, a0, 4<32>, a3, a4, a0_25, s4, mstatus, dwLoc38, dwArg98, dwArgD8, dwArg0118, out s1_101, out a0_40, out a1_873, out a2_874, out a3, out a4, out s2, out s3, out s4_875, out s5_876, out s6_877)
	s0_124 = a0_40
	branch a0_40 == 0<32> l230502A2
l230502A2:
	init_timer(fp + -56<i32>)
	word32 a2_317
	countdown_ms(fp + -56<i32>, s2, out a2_317)
	word32 s4_102 = s1_101 + 12<i32>
	word32 s5_103 = s1_101 + 64<i32>
	s3 = 0x1F000400<32>
	word32 s6_116 = s1_101 + 1248<i32>
l230502C2:
	word32 a2_110
	branch aws_iot_mqtt_get_client_state(s1_101) != 0xD<32> l2305036E
l2305036E:
	word32 a0_96
	word32 s7_843
	word32 a1_842
	word32 s0_841
	ra = aws_iot_mqtt_internal_cycle_read(ra, s1_101, sp_3 + 8<i32>, sp_3 + 3<i32>, a3, a4, s2, s10, mstatus, Mem95[sp_3 + 36<i32>:word32], Mem95[sp_3 + 132<i32>:word32], Mem95[sp_3 + 152<i32>:word32], Mem95[sp_3 + 216<i32>:word32], out s0_841, out s1_101, out a0_96, out a1_842, out a2_110, out a3, out a4, out s2, out s3, out s4_102, out s5_103, out s6_116, out s7_843, out s10, out mstatus)
	s0_124 = a0_96
	branch a0_96 != 0<32> l2305040E
l2305040E:
	a4 = 0xFFFFFFF4<32>
	branch CONVERT(SLICE(a0_96 & -3<i32>, byte, 0), byte, int32) == 0xFFFFFFF4<32> l23050392
l2305041C:
	branch a0_96 == 0xFFFFFFF9<32> l23050392
l23050422:
	branch a0_96 == 0xFFFFFFF3<32> l230503A0
l23050428:
l2305037E:
	branch CONVERT(Mem95[s1_101 + 40<i32>:uint16], uint16, word32) == 0<32> l2305030E
l23050384:
	word32 a0_133
	word32 a1_139
	word32 a5_861
	word32 s2_862
	word32 s8_863
	s1_101 = has_timer_expired(a2_110, a3, a4, mstatus, Mem95[sp_3 + 20<i32>:word32], Mem95[sp_3 + 24<i32>:word32], Mem95[sp_3 + 56<i32>:word32], Mem95[sp_3 + 296<i32>:word32], Mem95[sp_3 + 360<i32>:word32], out a0_133, out a1_139, out a2_110, out a3, out a4, out a5_861, out s2_862, out s3, out s4_102, out s8_863)
	branch a0_133 == 0<32> l2305030E
l2305038C:
	branch CONVERT(Mem95[s1_101 + 25<i32>:byte], byte, word32) == 0<32> l230503CE
l230503CE:
	init_timer(sp_3 + 20<i32>)
	word32 a2_864
	countdown_ms(sp_3 + 20<i32>, a1_139, out a2_864)
	Mem161[sp_3 + 128<i32>:word32] = 0<32>
	word32 a0_162
	word32 a1_169
	aws_iot_mqtt_internal_serialize_zero(s5_103, a1_139, 0xC<32>, sp_3 + 4<i32>, out s1_101, out a0_162, out a1_169, out a2_110, out a3, out a4, out s2, out s4_102)
	s0_124 = a0_162
	branch a0_162 != 0<32> l2305039A
l230503EE:
	word32 a0_179
	word32 a1_868
	word32 a2_869
	word32 s2_870
	word32 s0_867
	ra = aws_iot_mqtt_internal_send_packet(ra, s1_101, a1_169, sp_3 + 20<i32>, a3, a4, mstatus, Mem161[sp_3 + 84<i32>:word32], Mem161[sp_3 + 200<i32>:word32], Mem161[sp_3 + 264<i32>:word32], Mem161[sp_3 + 296<i32>:word32], out s0_867, out s1_101, out a0_179, out a1_868, out a2_869, out a3, out a4, out s2_870, out s3, out s4_102, out s5_103, out s6_116, out mstatus)
	branch a0_179 != 0<32> l23050392
l230503FC:
	word32 a1_205 = CONVERT(Mem161[s1_101 + 40<i32>:uint16], uint16, word32)
	Mem207[s1_101 + 25<i32>:byte] = 1<8>
	word32 s1_871
	word32 a1_872
	s0_124 = countdown_sec(ra, s1_101, a1_205, a3, Mem207[sp_3 + 24<i32>:word32], Mem207[sp_3 + 96<i32>:word32], Mem207[sp_3 + 100<i32>:word32], Mem207[sp_3 + 136<i32>:word32], Mem207[sp_3 + 172<i32>:word32], out s1_871, out a1_872, out a2_110)
l23050392:
	word32 a0_228
	ra = _aws_iot_mqtt_handle_disconnect(ra, s1_101, a3, a4, s3, s4_102, mstatus, Mem227[sp_3 + 20<i32>:word32], Mem227[sp_3 + 36<i32>:word32], Mem227[sp_3 + 136<i32>:word32], Mem227[sp_3 + 184<i32>:word32], Mem227[sp_3 + 200<i32>:word32], Mem227[sp_3 + 232<i32>:word32], Mem227[sp_3 + 248<i32>:word32], Mem227[sp_3 + 312<i32>:word32], out s1_101, out a0_228, out a2_110, out a3, out a4, out s2, out s3, out s4_102, out s5_103, out s6_116, out mstatus)
	s0_124 = a0_228
l2305039A:
	branch s0_124 != 0xFFFFFFF3<32> l2305042A
l2305042A:
	branch s0_124 == 0<32> l2305030E
l230503A0:
	word32 s1_258 = Mem256[0x23<32>:word32]
	Mem260[0x24<32>:word32] = s1_258
	branch CONVERT(Mem260[s1_258 + 26<i32>:byte], byte, word32) == 0<32> l23050326
l230503AC:
	word32 a0_277
	word32 a2_866
	word32 a1_865
	aws_iot_mqtt_set_client_state(s1_258, s1_258, 0xD<32>, a3, a4, s3, s4_102, mstatus, Mem260[sp_3 + 8<i32>:word32], Mem260[sp_3 + 216<i32>:word32], Mem260[sp_3 + 280<i32>:word32], Mem260[sp_3 + 344<i32>:word32], out s1_101, out a0_277, out a1_865, out a2_866, out a3, out a4, out s2, out s3, out s4_102, out s5_103, out s6_116)
	s0_124 = a0_277
	branch a0_277 != 0<32> l23050316
l230503BA:
	Mem302[0x414<32>:word32] = s1_101
	countdown_ms(s4_102, 1000<i32>, out a2_110)
	s0_124 = 4<32>
l230502CE:
	s1_101 = Mem95[0x39<32>:word32]
	branch s3 <u 0xD<32> l23050446
l23050446:
	s0_124 = 0xFFFFFFF2<32>
l230502D4:
	word32 a0_318
	word32 s2_322
	word32 a5_844
	word32 s8_845
	word32 a1_324
	word32 s3_328
	word32 s4_329
	word32 s1_321 = has_timer_expired(a2_317, a3, a4, mstatus, Mem95[sp_3 + 20<i32>:word32], Mem95[sp_3 + 24<i32>:word32], Mem95[sp_3 + 56<i32>:word32], Mem95[sp_3 + 296<i32>:word32], Mem95[sp_3 + 360<i32>:word32], out a0_318, out a1_324, out a2_110, out a3, out a4, out a5_844, out s2_322, out s3_328, out s4_329, out s8_845)
	s0_124 = 4<32>
	branch a0_318 == 0<32> l2305030E
l230502DE:
	word32 s2_334
	word32 s10_364
	word32 a5_333 = Mem95[s1_321 + 1264<i32>:int32]
	branch a5_333 == 0<32> l23050356
l23050356:
	s2_334 = 0xFFFFFFEE<32>
l230502E4:
	word32 s0_339
	word32 s1_341
	word32 a0_347
	word32 a7_358
	word32 t0_359
	word32 t1_360
	word32 t4_361
	word32 t5_362
	word32 t6_363
	word32 s9_365
	word32 s7_366
	word32 s11_574
	call a5_333 (retsize: 0;)
		uses: a0:s6_335,a1:a1_324,a3:a3_325,a4:a4_326,a5:6<32>,a7:a7_358,mstatus:mstatus_92,ra:ra_89,s0:4<32>,s1:s1_321,s10:s10_364,s11:s11_574,s2:s2_322,s3:s3_328,s4:s4_329,s5:s5_337,s6:s6_335,s7:s7_366,s9:s9_365,Stack +0098:dwArg98,Stack +00D8:dwArgD8,Stack +0118:dwArg0118,Stack +FFFFFFC8:dwLoc38,t0:t0_359,t1:t1_360,t4:t4_361,t5:t5_362,t6:t6_363
		defs: a0:a0_347,a1:a1_348,a2:a2_350,a3:a3_356,a4:a4_355,a7:a7_358,mstatus:mstatus_357,ra:ra_340,s0:s0_339,s1:s1_341,s10:s10_364,s11:s11_574,s3:s3_343,s4:s4_344,s5:s5_345,s6:s6_346,s7:s7_366,s9:s9_365,sp:sp_338,t0:t0_359,t1:t1_360,t4:t4_361,t5:t5_362,t6:t6_363
	s2_334 = a0_347
	s10 = s10_364
	branch a0_347 != 6<32> l23050358
l230502F0:
	word32 a0_370
	word32 s1_380
	ra = aws_iot_mqtt_attempt_reconnect(ra, s0_339, s1_341, s1_341, a3, a4, s3_328, s4_329, mstatus, Mem95[sp_3 + 4<i32>:word32], Mem95[sp_3 + 24<i32>:word32], Mem95[sp_3 + 88<i32>:word32], Mem95[sp_3 + 104<i32>:word32], Mem95[sp_3 + 108<i32>:word32], Mem95[sp_3 + 120<i32>:word32], Mem95[sp_3 + 136<i32>:word32], Mem95[sp_3 + 168<i32>:word32], Mem95[sp_3 + 184<i32>:word32], Mem95[sp_3 + 200<i32>:word32], Mem95[sp_3 + 232<i32>:word32], Mem95[sp_3 + 248<i32>:word32], Mem95[sp_3 + 264<i32>:word32], Mem95[sp_3 + 328<i32>:word32], out s1_380, out a0_370, out a1_324, out a2_110, out a3, out a4, out s3_328, out s4_329, out s5_103, out s6_116, out s10, out mstatus)
	s2_334 = a0_370
	branch a0_370 != 3<32> l23050358
l23050358:
	word32 a1_404 = a1_324 << 1<i32>
	Mem405[a1_404 + 44<i32>:word32] = Mem95[a1_324 + 44<i32>:word32]
	s0_124 = 0xFFFFFFF2<32>
	branch s3_328 <u a1_404 l2305030E
l23050364:
	countdown_ms(s4_329, a1_404, out a2_110)
	s0_124 = s2_334
l230502FE:
	word32 a0_420
	word32 s1_849
	word32 s4_853
	word32 a1_850
	word32 s2_851
	word32 s3_852
	aws_iot_mqtt_set_client_state(s1_380, s1_380, 4<32>, a3, a4, s3_328, s4_329, mstatus, Mem95[sp_3 + 8<i32>:word32], Mem95[sp_3 + 216<i32>:word32], Mem95[sp_3 + 280<i32>:word32], Mem95[sp_3 + 344<i32>:word32], out s1_849, out a0_420, out a1_850, out a2_110, out a3, out a4, out s2_851, out s3_852, out s4_853, out s5_103, out s6_116)
	s0_124 = a0_420
	branch a0_420 != 0<32> l2305030E
l2305030C:
	s0_124 = 3<32>
l2305030E:
	word32 a0_458
	word32 a1_846
	word32 a5_847
	word32 s8_848
	s1_101 = has_timer_expired(a2_110, a3, a4, mstatus, Mem457[sp_3 + 20<i32>:word32], Mem457[sp_3 + 24<i32>:word32], Mem457[sp_3 + 56<i32>:word32], Mem457[sp_3 + 296<i32>:word32], Mem457[sp_3 + 360<i32>:word32], out a0_458, out a1_846, out a2_317, out a3, out a4, out a5_847, out s2, out s3, out s4_102, out s8_848)
	branch a0_458 == 0<32> l230502C2
l23050316:
	branch s0_124 == 0xFFFFFFF3<32> l23050326
l23050326:
	s0_124 = 0xFFFFFFF3<32>
l2305031C:
l2305042E:
	branch s0_124 == 4<32> l23050340
l23050434:
	word32 a0_498
	word32 a1_855
	word32 a4_857
	word32 s4_858
	word32 s5_859
	word32 s6_860
	word32 a2_856
	word32 s1_854
	s0_124 = aws_iot_mqtt_set_client_state(s1_101, s1_101, 3<32>, a3, a4, s3, s4_102, mstatus, Mem496[sp_3 + 8<i32>:word32], Mem496[sp_3 + 216<i32>:word32], Mem496[sp_3 + 280<i32>:word32], Mem496[sp_3 + 344<i32>:word32], out s1_854, out a0_498, out a1_855, out a2_856, out a3, out a4_857, out s2, out s3, out s4_858, out s5_859, out s6_860)
	branch s0_124 != 0<32> l23050340
l23050442:
	s0_124 = a0_498
l23050340:
	0<32> = dwArg0198
	s0Out = dwArg0158
	a0Out = s0_124
	a2Out = dwArg0138
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s10Out = s10
	mstatusOut = mstatus
	return ra
aws_iot_mqtt_yield_exit:


