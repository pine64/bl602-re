word32 process_wpa_ie(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_ind_handler
//      bl_rx_scanu_result_ind
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a2 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: a7 s5 sp t0 t1 t4 t5 t6
process_wpa_ie_entry:
l23010304:
	branch (CONVERT(Mem17[a0 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem17[a0 + 12<i32>:byte], byte, word32)) != 2<32> l2301036C
l23010334:
	Mem32[a0 + 1<i32>:byte] = 0x16<8>
	Mem35[a0 + 12<i32>:byte] = 1<8>
	Mem36[a0 + 13<i32>:byte] = 0<8>
	word32 a2_314
	word32 a4_316
	word32 a5_317
	word32 a3_315
	word32 a1_313
	branch memcmp(a0 + 18<i32>, 0x2308DDBC<32>, 4<32>, out a1_313, out a2_314, out a3_315, out a4_316, out a5_317) != 0<32> l23010360
l23010356:
	word32 a1_325
	word32 a6_330
	word32 a4_328
	word32 a2_326
	word32 a3_327
	word32 a5_329
	word32 a7_331
	memcpy(a0 + 14<i32>, a0 + 18<i32>, 4<32>, out a1_325, out a2_326, out a3_327, out a4_328, out a5_329, out a6_330, out a7_331)
l23010360:
	word32 a5_322
	word32 a4_321
	word32 a2_319
	word32 a3_320
	word32 a6_323
	word32 a7_324
	word32 a1_318
	memcpy(a0 + 18<i32>, a0 + 22<i32>, 8<32>, out a1_318, out a2_319, out a3_320, out a4_321, out a5_322, out a6_323, out a7_324)
l2301036C:
	word32 a5_108
	word32 a3_310
	word32 a5_312
	word32 a4_311
	word32 a1_308
	word32 a2_309
	branch memcmp(a0 + 14<i32>, 0x2308DDBC<32>, 4<32>, out a1_308, out a2_309, out a3_310, out a4_311, out a5_312) != 0<32> l230103C0
l230103C0:
	word32 a3_334
	word32 a1_332
	word32 a2_333
	word32 a4_335
	word32 a5_336
	branch memcmp(a0 + 14<i32>, 0x2308DDB8<32>, 4<32>, out a1_332, out a2_333, out a3_334, out a4_335, out a5_336) != 0<32> l23010386
l230103D2:
	a5_108 = CONVERT(Mem105[a2:byte], byte, word32) | 4<i32>
l2301037A:
	a5_108 = CONVERT(Mem105[a2:byte], byte, word32) | 8<i32>
l23010382:
	Mem113[a2:byte] = SLICE(a5_108, byte, 0)
l23010386:
	word32 a5_165
	word32 a1_341
	word32 a2_342
	word32 a3_343
	word32 a5_344
	word32 a4_126
	branch memcmp(a0 + 8<i32>, 0x2308DDBC<32>, 4<32>, out a1_341, out a2_342, out a3_343, out a4_126, out a5_344) != 0<32> l230103DC
l230103DC:
	word32 a1_337
	word32 a2_338
	word32 a3_339
	word32 a5_340
	branch memcmp(a0 + 8<i32>, 0x2308DDB8<32>, 4<32>, out a1_337, out a2_338, out a3_339, out a4_126, out a5_340) != 0<32> l230103F8
l230103F8:
	word32 a1_345
	word32 a2_346
	word32 a3_347
	word32 a5_348
	branch memcmp(a0 + 8<i32>, 0x2308DDC0<32>, 4<32>, out a1_345, out a2_346, out a3_347, out a4_126, out a5_348) != 0<32> l23010414
l23010414:
	word32 a1_349
	word32 a2_350
	word32 a3_351
	word32 a5_352
	branch memcmp(a0 + 8<i32>, 0x2308DDB4<32>, 4<32>, out a1_349, out a2_350, out a3_351, out a4_126, out a5_352) != 0<32> l230103A4
l23010426:
	a5_165 = CONVERT(Mem163[a1:byte], byte, word32) | 1<i32>
l2301040A:
	a5_165 = CONVERT(Mem163[a1:byte], byte, word32) | 2<i32>
l230103EE:
	a5_165 = CONVERT(Mem163[a1:byte], byte, word32) | 4<i32>
l23010398:
	a5_165 = CONVERT(Mem163[a1:byte], byte, word32) | 8<i32>
l230103A0:
	Mem174[a1:byte] = SLICE(a5_165, byte, 0)
l230103A4:
	s1Out = a1
	a2Out = dwArg48
	a4Out = a4_126
	s2Out = a0 + 8<i32>
	s3Out = 0x2308E000<32>
	s4Out = dwArg04
	return s1
process_wpa_ie_exit:


void keyMgmtStaRsnSecuredTimeoutHandler(word32 ra, word32 a3, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgB8, word32 dwArgBC, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a3 a4 a7 ra s10 s11 s9 sp t0 t1 t4 t5 t6
keyMgmtStaRsnSecuredTimeoutHandler_entry:
l23010430:
	word32 a5_21
	word32 s1_24
	word32 s2_29
	word32 s5_31
	word32 a2_145
	word32 a6_146
	word32 s3_147
	word32 s4_148
	word32 s6_149
	word32 s7_150
	word32 s8_151
	dbg_test_print(0x23075D64<32>, dwArg0168, out s1_24, out a2_145, out a5_21, out a6_146, out s2_29, out s3_147, out s4_148, out s5_31, out s6_149, out s7_150, out s8_151)
	branch s1_24 == 0<32> l23010472
l23010460:
	word32 s1_34 = Mem9[a5_21 + 120<i32>:word32]
	branch a5_21 != 0<32> l23010472
l23010464:
	word32 a4_152
	word32 s10_153
	sm_handle_supplicant_result(ra, s1_34, CONVERT(Mem9[Mem9[s1_34 + 280<i32>:int32] + 1<i32>:byte], byte, word32), 0xF<32>, a3, s2_29, s5_31, fflags, frm, mstatus, dwLoc08, dwArg08, dwArg30, dwArg34, dwArg40, dwArg44, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgB8, dwArgBC, dwArgD8, dwArgF8, dwArg0118, out a4_152, out s10_153)
l23010472:
l23010496_thunk_dbg_test_print:
	word32 s1_154
	word32 a2_155
	word32 a5_156
	word32 a6_157
	word32 s2_158
	word32 s3_159
	word32 s4_160
	word32 s5_161
	word32 s6_162
	word32 s7_163
	word32 s8_164
	dbg_test_print(0x23075D78<32>, dwArg0178, out s1_154, out a2_155, out a5_156, out a6_157, out s2_158, out s3_159, out s4_160, out s5_161, out s6_162, out s7_163, out s8_164)
	return
keyMgmtStaRsnSecuredTimeoutHandler_exit:


word32 supplicantGenerateRand(word32 ra, word32 dwArg10, word32 dwArg14, word32 dwArg5C, word32 dwArg0108, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GetKeyMsgNonceFromEAPOL
//      GeneratePWKMsg1
//      GenerateGTK_internal
// MayUse:  ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +005C:[0..31] Stack +0108:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s10 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
supplicantGenerateRand_entry:
l2301049A:
	word32 a2_28
	word32 s4_33
	word32 s3_38
	word32 s5_39
	word32 s1_121
	word32 a5_122
	word32 a6_123
	word32 s2_124
	word32 s6_125
	word32 s7_126
	word32 s8_127
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_121, out a2_28, out a5_122, out a6_123, out s2_124, out s3_38, out s4_33, out s5_39, out s6_125, out s7_126, out s8_127)
	word32 a3_47
	word32 a4_48
	word32 s10_55
	word32 s9_64
	word32 s0_128
	word32 s2_129
	word32 ra_52 = bl_rand_stream(ra, s3_38, s4_33, a2_28, s5_39, dwArg10, dwArg14, dwArg5C, dwArg0108, out s0_128, out a3_47, out a4_48, out s2_129, out s9_64, out s10_55)
l230104FA_thunk_dbg_test_print:
	word32 s1_88
	word32 a2_130
	word32 a5_131
	word32 a6_132
	word32 s2_133
	word32 s3_134
	word32 s4_135
	word32 s5_136
	word32 s6_137
	word32 s7_138
	word32 s8_139
	s0Out = dbg_test_print(0x23075D78<32>, dwArg0178, out s1_88, out a2_130, out a5_131, out a6_132, out s2_133, out s3_134, out s4_135, out s5_136, out s6_137, out s7_138, out s8_139)
	s1Out = s1_88
	a0Out = 0x23075D78<32>
	a3Out = a3_47
	a4Out = a4_48
	s9Out = s9_64
	s10Out = s10_55
	return ra_52
supplicantGenerateRand_exit:


word32 ComputeEAPOL_MIC(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      IsEAPOL_MICValid
//      KeyMgmtSta_PopulateEAPOLLengthMic
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] ra:[0..31]
// LiveOut: ra s1 s10 s2 s3 s4 s5 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ComputeEAPOL_MIC_entry:
l230104FE:
	branch a4 != 0<32> l23010510
l2301050A:
	a4 = CONVERT(Mem9[a0 + 6<i32>:byte], byte, word32) & 7<32>
l23010510:
	branch a4 == 1<32> l2301052E
l2301052E:
	Bl_hmac_md5(ra, a0, a1, a2, a3)
l2301051A:
	branch a4 == 2<32> l2301053C
l2301053C:
	Bl_hmac_sha1(ra, 1<32>, a2, a3, a0 + 81<i32>, 0x10<32>)
l23010520:
	ra = bl_aes_cmac(ra, a2, out s1, out s2, out s3, out s4, out s5, out s7, out s9, out s10)
l23010536:
	s1Out = s1
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s7Out = s7
	s9Out = s9
	s10Out = s10
	return ra
ComputeEAPOL_MIC_exit:


word32 keyMgmtGetKeySize_internal(word32 dwArg38, word32 dwArg0168, ptr32 & a0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      keyMgmtGetKeySize
// MayUse:  Stack +0038:[0..31] Stack +0168:[0..31]
// LiveOut: a0 s1 s2
// Trashed: a0 a1 a2 a4 a5 a6 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: s0 sp
keyMgmtGetKeySize_internal_entry:
l2301054E:
	word32 s1_28
	word32 s2_33
	word32 a2_97
	word32 a5_98
	word32 a6_99
	word32 s3_100
	word32 s4_101
	word32 s5_102
	word32 s6_103
	word32 s7_104
	word32 s8_105
	dbg_test_print(0x23075D64<32>, dwArg0168, out s1_28, out a2_97, out a5_98, out a6_99, out s2_33, out s3_100, out s4_101, out s5_102, out s6_103, out s7_104, out s8_105)
	branch s2_33 == 0<32> l230105C2
l230105C2:
	word32 a5_39 = CONVERT(Mem11[s1_28 + 3<i32>:byte], byte, word32)
	branch (a5_39 & 8<i32>) != 0<32> l23010594
l230105CE:
	branch (a5_39 & 2<i32>) != 0<32> l23010594
l230105D6:
	branch (a5_39 & 1<32>) == 0<32> l23010594
l230105DE:
l23010586:
	branch (CONVERT(Mem11[s1_28 + 4<i32>:byte], byte, word32) & 8<32>) == 0<32> l23010594
l23010592:
l23010594:
	word32 s1_65
	word32 s2_70
	word32 a2_106
	word32 a5_107
	word32 a6_108
	word32 s3_109
	word32 s4_110
	word32 s5_111
	word32 s6_112
	word32 s7_113
	word32 s8_114
	word32 a0_75 = dbg_test_print(0x23075D78<32>, dwArg0168, out s1_65, out a2_106, out a5_107, out a6_108, out s2_70, out s3_109, out s4_110, out s5_111, out s6_112, out s7_113, out s8_114)
	0<32> = dwArg38
	a0Out = a0_75
	s2Out = s2_70
	return s1_65
keyMgmtGetKeySize_internal_exit:


word32 isApReplayCounterFresh(word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_IsRxEAPOLValid
// MayUse:  Stack +0158:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
isApReplayCounterFresh_entry:
l230105E2:
	word32 s2_33
	word32 s1_162
	word32 a2_163
	word32 a5_164
	word32 a6_165
	word32 s3_166
	word32 s4_167
	word32 s5_168
	word32 s6_169
	word32 s7_170
	word32 s8_171
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_162, out a2_163, out a5_164, out a6_165, out s2_33, out s3_166, out s4_167, out s5_168, out s6_169, out s7_170, out s8_171)
	word32 a1_172
	word32 a2_173
	word32 a3_174
	word32 a4_175
	word32 a5_176
	word32 a6_177
	word32 a7_178
	memcpy(fp + 0xFFFFFFE8<32>, s2_33, 4<32>, out a1_172, out a2_173, out a3_174, out a4_175, out a5_176, out a6_177, out a7_178)
	word32 a4_57
	word32 a1_179
	word32 a2_180
	word32 a3_181
	word32 a5_182
	word32 a6_183
	word32 a7_184
	memcpy(fp + 0xFFFFFFEC<32>, s2_33 + 4<i32>, 4<32>, out a1_179, out a2_180, out a3_181, out a4_57, out a5_182, out a6_183, out a7_184)
	word32 a1_81 = a4_57 >>u 8<u32> & 0xFFFFF00<32>
	word32 a4_149 = 0x10000000<32>
	word32 a3_148 = (a4_57 << 0x18<u32>) + (a4_57 >>u 0x18<u32>) + (a4_57 << 8<u32> & 0xFF0000<32>) + a1_81
	branch a1_81 <u a3_148 l23010696
l2301065C:
	branch a1_81 != a3_148 l23010696
l23010662:
	a3_148 = 0<32>
	a4_149 = 0x100000<32>
	branch true l23010696
l23010686:
	branch true l23010696
l2301068C:
	branch (a1_81 | 0x100000<32>) != 0<32> l23010696
l23010690:
l23010696:
	word32 s1_117
	word32 s2_122
	word32 s7_126
	word32 a2_185
	word32 a5_186
	word32 a6_187
	word32 s3_188
	word32 s4_189
	word32 s5_190
	word32 s6_191
	word32 s8_192
	word32 s0_116 = dbg_test_print(0x23075D78<32>, dwArg0158, out s1_117, out a2_185, out a5_186, out a6_187, out s2_122, out s3_188, out s4_189, out s5_190, out s6_191, out s7_126, out s8_192)
	s1Out = s1_117
	a0Out = s0_116
	a3Out = a3_148
	a4Out = a4_149
	s2Out = s2_122
	s7Out = s7_126
	return s0_116
isApReplayCounterFresh_exit:


word32 updateApReplayCounter(word32 dwArg84, word32 dwArg0158, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
//      KeyMgmtStaHsk_Recvd_GrpMsg1
//      KeyMgmtStaHsk_Recvd_PWKMsg3
// MayUse:  Stack +0084:[0..31] Stack +0158:[0..31]
// LiveOut: a4 s0 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
updateApReplayCounter_entry:
l230106C4:
	word32 s1_28
	word32 s2_33
	word32 a2_152
	word32 a5_153
	word32 a6_154
	word32 s3_155
	word32 s4_156
	word32 s5_157
	word32 s6_158
	word32 s7_159
	word32 s8_160
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_28, out a2_152, out a5_153, out a6_154, out s2_33, out s3_155, out s4_156, out s5_157, out s6_158, out s7_159, out s8_160)
	word32 a1_161
	word32 a2_162
	word32 a3_163
	word32 a4_164
	word32 a5_165
	word32 a6_166
	word32 a7_167
	memcpy(fp + 0xFFFFFFE8<32>, s2_33, 4<32>, out a1_161, out a2_162, out a3_163, out a4_164, out a5_165, out a6_166, out a7_167)
	word32 a3_62
	word32 a1_168
	word32 a2_169
	word32 a4_170
	word32 a5_171
	word32 a6_172
	word32 a7_173
	memcpy(fp + 0xFFFFFFEC<32>, s2_33 + 4<i32>, 4<32>, out a1_168, out a2_169, out a3_62, out a4_170, out a5_171, out a6_172, out a7_173)
	word32 a5_82 = (a3_62 << 0x18<u32>) + (a3_62 >>u 0x18<u32>) + (a3_62 << 8<u32> & 0xFF0000<32>) + (a3_62 >>u 8<u32> & dwArg84)
	Mem92[a5_82 + 100<i32>:word32] = s1_28
	word32 a4_91 = (dwArg84 & 0x100000<32>) + 0x10<32>
	Mem93[a4_91 + 96<i32>:word32] = s1_28
	branch (a5_82 | a4_91) != 0<32> l23010758
l23010754:
	Mem96[0x69<32>:word32] = s1_28
l23010758:
	word32 s3_117
	word32 s5_118
	word32 s1_174
	word32 a2_175
	word32 a5_176
	word32 a6_177
	word32 s2_178
	word32 s4_179
	word32 s6_180
	word32 s7_181
	word32 s8_182
	word32 s0_110 = dbg_test_print(0x23075D78<32>, dwArg0158, out s1_174, out a2_175, out a5_176, out a6_177, out s2_178, out s3_117, out s4_179, out s5_118, out s6_180, out s7_181, out s8_182)
	a4Out = a4_91
	s3Out = s3_117
	s5Out = s5_118
	return s0_110
updateApReplayCounter_exit:


word32 formEAPOLEthHdr(word32 dwArg0158, word32 dwArg0178, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_PrepareEAPOLFrame
//      PrepDefaultEapolMsg
// MayUse:  Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
formEAPOLEthHdr_entry:
l23010784:
	word32 s4_37
	word32 s5_43
	word32 s1_128
	word32 a2_129
	word32 a5_130
	word32 a6_131
	word32 s2_132
	word32 s3_133
	word32 s6_134
	word32 s7_135
	word32 s8_136
	word32 s0_35 = dbg_test_print(0x23075D64<32>, dwArg0158, out s1_128, out a2_129, out a5_130, out a6_131, out s2_132, out s3_133, out s4_37, out s5_43, out s6_134, out s7_135, out s8_136)
	word32 a1_137
	word32 a2_138
	word32 a3_139
	word32 a4_140
	word32 a5_141
	word32 a6_142
	word32 a7_143
	memcpy(s0_35, s5_43, 6<32>, out a1_137, out a2_138, out a3_139, out a4_140, out a5_141, out a6_142, out a7_143)
	word32 a4_65
	word32 a1_144
	word32 a2_145
	word32 a3_146
	word32 a5_147
	word32 a6_148
	word32 a7_149
	memcpy(s0_35 + 6<i32>, s4_37, 6<32>, out a1_144, out a2_145, out a3_146, out a4_65, out a5_147, out a6_148, out a7_149)
	Mem79[s0_35 + 12<i32>:byte] = 0x88<8>
	Mem81[s0_35 + 13<i32>:byte] = 0x8E<8>
l23010808_thunk_dbg_test_print:
	word32 s1_99
	word32 s4_100
	word32 s2_104
	word32 s3_105
	word32 a2_150
	word32 a5_151
	word32 a6_152
	word32 s5_153
	word32 s6_154
	word32 s7_155
	word32 s8_156
	word32 s0_98 = dbg_test_print(0x23075D78<32>, dwArg0178, out s1_99, out a2_150, out a5_151, out a6_152, out s2_104, out s3_105, out s4_100, out s5_153, out s6_154, out s7_155, out s8_156)
	s1Out = s1_99
	a4Out = a4_65
	s2Out = s2_104
	s3Out = s3_105
	s4Out = s4_100
	return s0_98
formEAPOLEthHdr_exit:


word32 IsEAPOL_MICValid(word32 ra, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_IsRxEAPOLValid
//      ProcessPWKMsg4
//      ProcessPWKMsg2
// MayUse:  ra:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s10 s2 s5 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
IsEAPOL_MICValid_entry:
l2301080C:
	word32 a0_124
	word32 s1_35
	word32 s5_42
	word32 a2_207
	word32 a5_208
	word32 a6_209
	word32 s2_210
	word32 s3_211
	word32 s4_212
	word32 s6_213
	word32 s7_214
	word32 s8_215
	word32 s0_34 = dbg_test_print(0x23075D64<32>, dwArg0148, out s1_35, out a2_207, out a5_208, out a6_209, out s2_210, out s3_211, out s4_212, out s5_42, out s6_213, out s7_214, out s8_215)
	word32 a1_216
	word32 a2_217
	word32 a3_218
	word32 a4_219
	word32 a5_220
	word32 a6_221
	word32 a7_222
	memcpy(fp + -48<i32>, s1_35, 0x10<32>, out a1_216, out a2_217, out a3_218, out a4_219, out a5_220, out a6_221, out a7_222)
	word32 t1_223
	word32 a0_224
	word32 a1_225
	word32 a2_226
	word32 a3_227
	word32 a4_228
	word32 a5_229
	word32 ra_70 = memset(ra, s1_35, 0<32>, 0x10<32>, out t1_223, out a0_224, out a1_225, out a2_226, out a3_227, out a4_228, out a5_229)
	word32 a5_77 = CONVERT(Mem17[s0_34 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem17[s0_34 + 2<i32>:byte], byte, word32)
	word32 s10_106
	word32 s9_113
	word32 s3_230
	word32 s4_231
	word32 s1_105
	word32 s2_107
	word32 s5_110
	word32 s7_112
	word32 ra_103 = ComputeEAPOL_MIC(ra_70, s0_34, CONVERT(SLICE((a5_77 >>u 8<i32> | a5_77 << 8<u32>) + 4<i32>, word16, 0), word16, word32), s5_42, 0x10<32>, 0<32>, out s1_105, out s2_107, out s3_230, out s4_231, out s5_110, out s7_112, out s9_113, out s10_106)
	word32 a3_120
	word32 a4_121
	word32 a1_232
	word32 a2_233
	word32 a5_234
	branch memcmp(s1_105, fp + -48<i32>, 0x10<32>, out a1_232, out a2_233, out a3_120, out a4_121, out a5_234) != 0<32> l230108BC
l230108BC:
	a0_124 = 0<32>
l23010890:
	word32 a2_235
	word32 a5_236
	word32 a6_237
	word32 s3_238
	word32 s4_239
	word32 s6_240
	word32 s8_241
	dbg_test_print(0x23075D78<32>, dwArg0148, out s1_105, out a2_235, out a5_236, out a6_237, out s2_107, out s3_238, out s4_239, out s5_110, out s6_240, out s7_112, out s8_241)
	a0_124 = 1<32>
l230108AA:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_105
	a0Out = a0_124
	a3Out = a3_120
	a4Out = a4_121
	s2Out = s2_107
	s5Out = s5_110
	s7Out = s7_112
	s9Out = s9_113
	s10Out = s10_106
	return ra_103
IsEAPOL_MICValid_exit:


word32 KeyMgmtSta_PopulateEAPOLLengthMic(word32 ra, word32 a4, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg2
//      GenerateGrpMsg2
//      GeneratePWKMsg4
//      GeneratePWKMsg3
// MayUse:  a4:[0..31] ra:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtSta_PopulateEAPOLLengthMic_entry:
l230108C0:
	word32 s5_48
	word32 s6_49
	word32 s1_199
	word32 a2_200
	word32 a5_201
	word32 a6_202
	word32 s2_203
	word32 s3_204
	word32 s4_205
	word32 s7_206
	word32 s8_207
	word32 s0_40 = dbg_test_print(0x23075D64<32>, dwArg0148, out s1_199, out a2_200, out a5_201, out a6_202, out s2_203, out s3_204, out s4_205, out s5_48, out s6_49, out s7_206, out s8_207)
	branch s0_40 == 0<32> l23010980
l23010902:
	word32 a1_55 = CONVERT(Mem21[s0_40 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem21[s0_40 + 111<i32>:byte], byte, word32)
	Mem60[s0_40 + 15<i32>:byte] = 3<8>
	word32 s4_57 = a1_55 + 95<i32> << 16<i32>
	word32 a5_65 = CONVERT(SLICE(s4_57 >>u 0x10<u32> << 8<u32> | s4_57 >>u 0x18<u32>, word16, 0), word16, word32)
	Mem66[s0_40 + 16<i32>:byte] = SLICE(a5_65, byte, 0)
	Mem69[s0_40 + 17<i32>:byte] = SLICE(a5_65 >>u 8<i32>, byte, 0)
	word32 a5_73 = CONVERT(SLICE(a1_55 << 8<u32> | a1_55 >>u 8<u32>, word16, 0), word16, word32)
	Mem75[s0_40 + 111<i32>:byte] = SLICE(a5_73, byte, 0)
	Mem81[s0_40 + 14<i32>:byte] = SLICE(s6_49, byte, 0)
	Mem82[s0_40 + 112<i32>:byte] = SLICE(a5_73 >>u 8<i32>, byte, 0)
	word32 s1_208
	word32 s2_209
	word32 s3_210
	word32 s4_211
	word32 s5_212
	word32 s7_213
	word32 s9_214
	word32 s10_215
	ra = ComputeEAPOL_MIC(ra, s0_40 + 14<i32>, CONVERT(SLICE(a1_55 + 99<i32>, word16, 0), word16, word32), s5_48, 0x10<32>, a4, out s1_208, out s2_209, out s3_210, out s4_211, out s5_212, out s7_213, out s9_214, out s10_215)
	word32 s1_216
	word32 a2_217
	word32 a5_218
	word32 a6_219
	word32 s2_220
	word32 s3_221
	word32 s4_222
	word32 s5_223
	word32 s6_224
	word32 s7_225
	word32 s8_226
	dbg_test_print(0x23075D78<32>, dwArg0148, out s1_216, out a2_217, out a5_218, out a6_219, out s2_220, out s3_221, out s4_222, out s5_223, out s6_224, out s7_225, out s8_226)
l23010980:
	0<32> = dwArg0128
	return ra
KeyMgmtSta_PopulateEAPOLLengthMic_exit:


word32 parseKeyKDE(word32 dwArg0168, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      parseKeyKDE_DataType
// MayUse:  Stack +0168:[0..31]
// LiveOut: a0 a3 a4 s1 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: s0 sp
parseKeyKDE_entry:
l23010996:
	word32 a2_119
	word32 a5_120
	word32 a6_121
	word32 s2_122
	word32 s8_123
	word32 s1_102
	word32 s3_104
	word32 s4_105
	word32 s5_106
	word32 s6_107
	word32 s7_108
	word32 s0_23 = dbg_test_print(0x23075D64<32>, dwArg0168, out s1_102, out a2_119, out a5_120, out a6_121, out s2_122, out s3_104, out s4_105, out s5_106, out s6_107, out s7_108, out s8_123)
	word32 a4_34 = CONVERT(Mem9[s0_23:byte], byte, word32)
	branch a4_34 == 221<i32> l230109FE
l230109FE:
	a4_34 = CONVERT(Mem9[s0_23 + 1<i32>:byte], byte, word32)
	branch a4_34 <=u 7<32> l230109D0
l23010A08:
	word32 a1_129
	word32 a2_130
	word32 a5_131
	branch memcmp(s0_23 + 2<i32>, 0x2308DD94<32>, 3<32>, out a1_129, out a2_130, out a3, out a4_34, out a5_131) == 0<32> l230109F2
l23010A1C:
l230109D0:
	word32 a2_124
	word32 a5_125
	word32 a6_126
	word32 s2_127
	word32 s8_128
	s0_23 = dbg_test_print(0x23075D78<32>, dwArg0168, out s1_102, out a2_124, out a5_125, out a6_126, out s2_127, out s3_104, out s4_105, out s5_106, out s6_107, out s7_108, out s8_128)
l230109F2:
	a0Out = s0_23
	a3Out = a3
	a4Out = a4_34
	s3Out = s3_104
	s4Out = s4_105
	s5Out = s5_106
	s6Out = s6_107
	s7Out = s7_108
	return s1_102
parseKeyKDE_exit:


word32 parseKeyKDE_DataType(word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      parseKeyDataGTK
// MayUse:  Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
parseKeyKDE_DataType_entry:
l23010A1E:
	word32 s8_230
	word32 s4_226
	word32 s5_227
	word32 s6_228
	word32 s7_229
	word32 a2_222
	word32 a5_223
	word32 a6_224
	word32 s2_225
	word32 s1_221
	word32 s3_46
	word32 s0_111 = dbg_test_print(0x23075D64<32>, dwArg0148, out s1_221, out a2_222, out a5_223, out a6_224, out s2_225, out s3_46, out s4_226, out s5_227, out s6_228, out s7_229, out s8_230)
	branch s0_111 == 0<32> l23010A8E
l23010A5E:
	word32 s1_50 = s0_111
	word32 s4_135 = 2<32>
	word32 s6_137 = 221<i32>
	word32 s7_53 = 0xFFFFFFFE<32>
l23010A68:
	branch s4_135 < s3_46 l23010AA6
l23010AA6:
	branch CONVERT(Mem21[s1_50:byte], byte, word32) != s6_137 l23010AC8
l23010AAE:
	word32 a0_62
	word32 s5_73
	s1_50 = parseKeyKDE(dwArg0138, out a0_62, out a3, out a4, out s3_46, out s4_135, out s5_73, out s6_137, out s7_53)
	s0_111 = a0_62
	branch a0_62 == 0<32> l23010AC0
l23010AB8:
	branch CONVERT(Mem21[a0_62 + 5<i32>:byte], byte, word32) == s5_73 l23010A8E
l23010AC0:
	branch CONVERT(Mem21[s1_50 + 1<i32>:byte], byte, word32) != 0<32> l23010AC8
l23010AC6:
	s3_46 = 2<32>
l23010AC8:
	word32 a5_87 = CONVERT(Mem21[s1_50 + 1<i32>:byte], byte, word32)
	a4 = s7_53 - a5_87
	s3_46 = s3_46 + a4
	s1_50 = s1_50 + (a5_87 + 2<32>)
l23010A6C:
	word32 s5_238
	word32 s6_239
	word32 s7_240
	word32 s8_241
	word32 a6_234
	word32 s2_235
	word32 s3_236
	word32 s4_237
	word32 s1_231
	word32 a2_232
	word32 a5_233
	s0_111 = dbg_test_print(0x23075D78<32>, dwArg0148, out s1_231, out a2_232, out a5_233, out a6_234, out s2_235, out s3_236, out s4_237, out s5_238, out s6_239, out s7_240, out s8_241)
l23010A8E:
	0<32> = dwArg0128
	a0Out = s0_111
	a3Out = a3
	a4Out = a4
	return dwArgE4
parseKeyKDE_DataType_exit:


word32 parseKeyDataGTK(word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessRxEAPOL_PwkMsg3
//      ProcessRxEAPOL_GrpMsg1
// MayUse:  Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
parseKeyDataGTK_entry:
l23010AD8:
	word32 s1_199
	word32 a2_200
	word32 a5_201
	word32 a6_202
	word32 s2_203
	word32 s3_204
	word32 s4_205
	word32 s5_206
	word32 s6_207
	word32 s7_208
	word32 s8_209
	dbg_test_print(0x23075D64<32>, dwArg0148, out s1_199, out a2_200, out a5_201, out a6_202, out s2_203, out s3_204, out s4_205, out s5_206, out s6_207, out s7_208, out s8_209)
	word32 a0_45
	word32 a4_121
	word32 a3_126
	word32 s0_50 = parseKeyKDE_DataType(dwArgF8, dwArg0108, dwArg0118, out a0_45, out a3_126, out a4_121)
	branch a0_45 == 0<32> l23010B5A
l23010B1C:
	word32 a1_221
	word32 a2_222
	word32 a3_223
	word32 a4_224
	word32 a5_225
	word32 a6_226
	word32 a7_227
	memcpy(s0_50, a0_45 + 8<i32>, CONVERT(Mem13[a0_45 + 1<i32>:byte], byte, word32) + 0xFFFFFFFA<32>, out a1_221, out a2_222, out a3_223, out a4_224, out a5_225, out a6_226, out a7_227)
	Mem85[s0_50 + 38<i32>:word16] = SLICE(CONVERT(Mem13[a0_45 + 6<i32>:byte], byte, word32) & 3<32>, word16, 0)
	word32 a1_228
	word32 a2_229
	word32 a3_230
	word32 a4_231
	word32 a5_232
	word32 a6_233
	word32 a7_234
	memcpy(fp + -40<i32>, s0_50 + 24<i32>, 8<32>, out a1_228, out a2_229, out a3_230, out a4_231, out a5_232, out a6_233, out a7_234)
	word32 a1_235
	word32 a2_236
	word32 a3_237
	word32 a4_238
	word32 a5_239
	word32 a6_240
	word32 a7_241
	memcpy(s0_50 + 24<i32>, s0_50 + 0x10<32>, 8<32>, out a1_235, out a2_236, out a3_237, out a4_238, out a5_239, out a6_240, out a7_241)
	word32 a1_242
	word32 a2_243
	word32 a5_244
	word32 a6_245
	word32 a7_246
	memcpy(s0_50 + 0x10<32>, fp + -40<i32>, 8<32>, out a1_242, out a2_243, out a3_126, out a4_121, out a5_244, out a6_245, out a7_246)
l23010B5A:
	word32 s1_210
	word32 a2_211
	word32 a5_212
	word32 a6_213
	word32 s2_214
	word32 s3_215
	word32 s4_216
	word32 s5_217
	word32 s6_218
	word32 s7_219
	word32 s8_220
	dbg_test_print(0x23075D78<32>, dwArg0148, out s1_210, out a2_211, out a5_212, out a6_213, out s2_214, out s3_215, out s4_216, out s5_217, out s6_218, out s7_219, out s8_220)
	0<32> = dwArg0128
	a4Out = a4_121
	return a3_126
parseKeyDataGTK_exit:


word32 KeyMgmtSta_ApplyKEK(word32 dwArg0158, word32 dwArg0178, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessRxEAPOL_PwkMsg3
//      ProcessRxEAPOL_GrpMsg1
// MayUse:  Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 s0 s1 s10 s3 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtSta_ApplyKEK_entry:
l23010B8A:
	word32 a3_116
	word32 a4_117
	word32 s2_37
	word32 s3_38
	word32 s1_195
	word32 a2_196
	word32 a5_197
	word32 a6_198
	word32 s4_199
	word32 s5_200
	word32 s6_201
	word32 s7_202
	word32 s8_203
	word32 s0_31 = dbg_test_print(0x23075D64<32>, dwArg0158, out s1_195, out a2_196, out a5_197, out a6_198, out s2_37, out s3_38, out s4_199, out s5_200, out s6_201, out s7_202, out s8_203)
	word32 a5_42 = CONVERT(Mem13[s0_31 + 66<i32>:byte], byte, word32)
	Mem46[s2_37 + 36<i32>:word16] = SLICE(a5_42 << 8<i32>, word16, 0)
	Mem49[s2_37 + 36<i32>:word16] = SLICE(a5_42 << 8<i32> | CONVERT(Mem46[s0_31 + 65<i32>:byte], byte, word32), word16, 0)
	Mem51[s2_37 + 32<i32>:word32] = 0xFFFFFFFF<32>
	word32 a5_55 = CONVERT(Mem51[s0_31 + 98<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem51[s0_31 + 97<i32>:byte], byte, word32)
	word32 a4_60 = CONVERT(SLICE(a5_55 << 8<u32> | a5_55 >>u 8<i32>, word16, 0), word16, word32)
	Mem62[s0_31 + 98<i32>:byte] = SLICE(a4_60 >>u 8<u32>, byte, 0)
	word32 a5_63 = CONVERT(Mem62[s0_31 + 6<i32>:byte], byte, word32)
	Mem64[s0_31 + 97<i32>:byte] = SLICE(a4_60, byte, 0)
	branch (a5_63 & 7<32>) != 1<32> l23010C4A
l23010C4A:
	a3_116 = BL_AesUnWrap(s3_38, 2<32>, (a4_60 >>u 3<u32>) + 0xFFFFFFFF<32>, s0_31 + 99<i32>, s0_31 + 99<i32>, out s9, out s10)
	a4_117 = CONVERT(Mem64[s0_31 + 97<i32>:byte], byte, word32)
	word32 a5_96 = (CONVERT(Mem64[s0_31 + 98<i32>:byte], byte, word32) << 8<i32> | a4_117) + 0xFFFFFFF8<32> << 16<i32>
	Mem98[s0_31 + 97<i32>:byte] = SLICE(a5_96 >>u 16<i32>, byte, 0)
	Mem100[s0_31 + 98<i32>:byte] = SLICE(a5_96 >>u 24<i32>, byte, 0)
l23010C0E:
	a3_116 = RC4_Encrypt(s3_38, s0_31 + 49<i32>, 0x10<32>, s0_31 + 99<i32>, a4_60, 256<i32>, out a4_117)
l23010C1E:
l23010C46_thunk_dbg_test_print:
	word32 s1_147
	word32 s3_153
	word32 a2_204
	word32 a5_205
	word32 a6_206
	word32 s2_207
	word32 s4_208
	word32 s5_209
	word32 s6_210
	word32 s7_211
	word32 s8_212
	word32 s0_146 = dbg_test_print(0x23075D78<32>, dwArg0178, out s1_147, out a2_204, out a5_205, out a6_206, out s2_207, out s3_153, out s4_208, out s5_209, out s6_210, out s7_211, out s8_212)
	s1Out = s1_147
	a3Out = a3_116
	a4Out = a4_117
	s3Out = s3_153
	s9Out = s9
	s10Out = s10
	return s0_146
KeyMgmtSta_ApplyKEK_exit:


word32 KeyMgmtSta_IsRxEAPOLValid(word32 ra, word32 dwArg38, word32 dwArg0118, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GetKeyMsgNonceFromEAPOL
// MayUse:  ra:[0..31] Stack +0038:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 ra s1 s10 s2 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
KeyMgmtSta_IsRxEAPOLValid_entry:
l23010C7A:
	word32 a0_136
	word32 a2_257
	word32 a5_258
	word32 a6_259
	word32 s3_260
	word32 s4_261
	word32 s5_262
	word32 s6_263
	word32 s8_264
	word32 s1_126
	word32 s2_131
	word32 s7_101
	word32 s0_27 = dbg_test_print(0x23075D64<32>, dwArg0168, out s1_126, out a2_257, out a5_258, out a6_259, out s2_131, out s3_260, out s4_261, out s5_262, out s6_263, out s7_101, out s8_264)
	branch s1_126 != 0<32> l23010CBC
l23010CBC:
	branch s0_27 == 0<32> l23010CAE
l23010CBE:
	word32 a0_40
	word32 s0_48 = isApReplayCounterFresh(dwArg0148, out s1_126, out a0_40, out a3, out a4, out s2_131, out s7_101)
	branch a0_40 == 0<32> l23010CAE
l23010CCA:
	branch (CONVERT(Mem11[s0_48 + 5<i32>:byte], byte, word32) & 1<32>) != 0<32> l23010CF6
l23010CF6:
	branch (CONVERT(Mem11[s0_48 + 6<i32>:byte], byte, word32) & 8<32>) != 0<32> l23010D0C
l23010D0C:
	word32 a1_273
	word32 a2_274
	word32 a5_275
	branch memcmp(s0_48 + 17<i32>, s1_126, 32<i32>, out a1_273, out a2_274, out a3, out a4, out a5_275) == 0<32> l23010CFE
l23010D1C:
l23010CFE:
	word32 a0_84
	word32 s0_276
	word32 s5_277
	ra = IsEAPOL_MICValid(ra, dwArg0118, dwArg0138, out s0_276, out s1_126, out a0_84, out a3, out a4, out s2_131, out s5_277, out s7_101, out s9, out s10)
	branch a0_84 != 0<32> l23010CD2
l23010D0A:
l23010CD2:
	word32 a2_265
	word32 a5_266
	word32 a6_267
	word32 s3_268
	word32 s4_269
	word32 s5_270
	word32 s6_271
	word32 s8_272
	dbg_test_print(0x23075D78<32>, dwArg0168, out s1_126, out a2_265, out a5_266, out a6_267, out s2_131, out s3_268, out s4_269, out s5_270, out s6_271, out s7_101, out s8_272)
	a0_136 = 1<32>
l23010CAE:
	a0_136 = 0<32>
l23010CB0:
	0<32> = dwArg38
	s1Out = s1_126
	a0Out = a0_136
	a3Out = a3
	a4Out = a4
	s2Out = s2_131
	s7Out = s7_101
	s9Out = s9
	s10Out = s10
	return ra
KeyMgmtSta_IsRxEAPOLValid_exit:


word32 KeyMgmtSta_PrepareEAPOLFrame(word32 ra, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg2
//      GenerateGrpMsg2
//      GeneratePWKMsg4
// MayUse:  ra:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a4 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtSta_PrepareEAPOLFrame_entry:
l23010D1E:
	word32 s1_40
	word32 s8_302
	word32 s7_301
	word32 s6_300
	word32 s5_299
	word32 s4_298
	word32 s3_297
	word32 s2_296
	word32 a6_295
	word32 a5_294
	word32 a2_293
	word32 s0_39 = dbg_test_print(0x23075D64<32>, dwArg0158, out s1_40, out a2_293, out a5_294, out a6_295, out s2_296, out s3_297, out s4_298, out s5_299, out s6_300, out s7_301, out s8_302)
	branch s0_39 == 0<32> l23010E6C
l23010D60:
	branch s1_40 == 0<32> l23010E6C
l23010E6C:
	s0Out = s1
	a4Out = a4
	return ra
l23010D64:
	word32 a1_305
	word32 a2_306
	word32 a3_307
	word32 a4_308
	word32 a5_309
	word32 a0_304
	word32 t1_303
	word32 ra_69 = memset(ra, s0_39, 0<32>, 114<i32>, out t1_303, out a0_304, out a1_305, out a2_306, out a3_307, out a4_308, out a5_309)
	word32 s1_84
	word32 s3_86
	word32 a4_310
	word32 s2_311
	word32 s4_312
	word32 s0_83 = formEAPOLEthHdr(dwArg0138, dwArg0158, out s1_84, out a4_310, out s2_311, out s3_86, out s4_312)
	Mem100[s0_83 + 18<i32>:byte] = SLICE(CONVERT(Mem17[s1_84 + 4<i32>:byte], byte, word32), byte, 0)
	word32 a5_105 = CONVERT(Mem100[s0_83 + 20<i32>:byte], byte, word32) & 0xFFFFFFF7<32> | CONVERT(Mem100[s1_84 + 6<i32>:byte], byte, word32) & 8<i32>
	word32 a4_106 = CONVERT(Mem100[s0_83 + 19<i32>:byte], byte, word32)
	Mem107[s0_83 + 20<i32>:byte] = SLICE(a5_105, byte, 0)
	Mem110[s0_83 + 19<i32>:byte] = SLICE(a4_106 | 1<i32>, byte, 0)
	Mem115[s0_83 + 19<i32>:byte] = SLICE((a4_106 | 1<i32>) & 0xFFFFFFFD<32> | CONVERT(Mem110[s1_84 + 5<i32>:byte], byte, word32) & 2<32>, byte, 0)
	word32 a3_125 = CONVERT(Mem115[s1_84 + 12<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem115[s1_84 + 10<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem115[s1_84 + 9<i32>:byte], byte, word32)) | CONVERT(Mem115[s1_84 + 11<i32>:byte], byte, word32) << 16<i32>)
	Mem127[s0_83 + 23<i32>:byte] = SLICE(a3_125, byte, 0)
	Mem128[s0_83 + 24<i32>:byte] = SLICE(a3_125 >>u 8<u32>, byte, 0)
	Mem131[s0_83 + 25<i32>:byte] = SLICE(a3_125 >>u 0x10<u32>, byte, 0)
	Mem132[s0_83 + 26<i32>:byte] = SLICE(a3_125 >>u 24<i32>, byte, 0)
	word32 a3_142 = CONVERT(Mem132[s1_84 + 16<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem132[s1_84 + 14<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem132[s1_84 + 13<i32>:byte], byte, word32)) | CONVERT(Mem132[s1_84 + 15<i32>:byte], byte, word32) << 16<i32>)
	Mem144[s0_83 + 27<i32>:byte] = SLICE(a3_142, byte, 0)
	Mem145[s0_83 + 28<i32>:byte] = SLICE(a3_142 >>u 8<u32>, byte, 0)
	Mem148[s0_83 + 29<i32>:byte] = SLICE(a3_142 >>u 0x10<u32>, byte, 0)
	Mem149[s0_83 + 30<i32>:byte] = SLICE(a3_142 >>u 24<i32>, byte, 0)
	word32 a4_150 = CONVERT(Mem149[s1_84 + 6<i32>:byte], byte, word32)
	Mem153[s0_83 + 20<i32>:byte] = SLICE(a5_105 & 0xFFFFFFF8<32> | a4_150 & 7<32>, byte, 0)
	word32 a4_151 = a4_150 & 7<32>
	branch s3_86 == 0<32> l23010E3C
l23010E2E:
	word32 a1_313
	word32 a2_314
	word32 a3_315
	word32 a5_316
	word32 a6_317
	word32 a7_318
	memcpy(s0_83 + 31<i32>, s3_86, 32<i32>, out a1_313, out a2_314, out a3_315, out a4_151, out a5_316, out a6_317, out a7_318)
l23010E3C:
l23010E68_thunk_dbg_test_print:
	word32 s1_319
	word32 a2_320
	word32 a5_321
	word32 a6_322
	word32 s2_323
	word32 s3_324
	word32 s4_325
	word32 s5_326
	word32 s6_327
	word32 s7_328
	word32 s8_329
	s0Out = dbg_test_print(0x23075D78<32>, dwArg0178, out s1_319, out a2_320, out a5_321, out a6_322, out s2_323, out s3_324, out s4_325, out s5_326, out s6_327, out s7_328, out s8_329)
	a4Out = a4_151
	return ra_69
KeyMgmtSta_PrepareEAPOLFrame_exit:


word32 supplicantAkmIsWpaWpa2(word32 dwArg0158, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
//      supplicantAkmIsWpaWpa2Psk
// MayUse:  Stack +0158:[0..31]
// LiveOut: a0 a4 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
supplicantAkmIsWpaWpa2_entry:
l23010E7E:
	word32 a0_110
	word32 a6_142
	word32 a5_141
	word32 a2_140
	word32 s4_143
	word32 s5_144
	word32 s6_145
	word32 s7_146
	word32 s8_147
	word32 s1_121
	word32 s2_123
	word32 s3_125
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_121, out a2_140, out a5_141, out a6_142, out s2_123, out s3_125, out s4_143, out s5_144, out s6_145, out s7_146, out s8_147)
	word32 a1_148
	word32 a2_149
	word32 a3_150
	word32 a5_151
	word32 a4_115
	branch memcmp(s3_125, 0x2308DDB0<32>, 3<32>, out a1_148, out a2_149, out a3_150, out a4_115, out a5_151) != 0<32> l23010ED2
l23010ED2:
	word32 a1_152
	word32 a2_153
	word32 a3_154
	word32 a5_155
	branch memcmp(s3_125, 0x2308DD94<32>, 3<32>, out a1_152, out a2_153, out a3_154, out a4_115, out a5_155) == 0<32> l23010EC2
l23010EE4:
	word32 a2_156
	word32 a5_157
	word32 a6_158
	word32 s4_159
	word32 s5_160
	word32 s6_161
	word32 s7_162
	word32 s8_163
	dbg_test_print(0x23075D78<32>, dwArg0158, out s1_121, out a2_156, out a5_157, out a6_158, out s2_123, out s3_125, out s4_159, out s5_160, out s6_161, out s7_162, out s8_163)
	a0_110 = 0<32>
l23010EC2:
	a0_110 = 1<32>
l23010EC4:
	a0Out = a0_110
	a4Out = a4_115
	s2Out = s2_123
	s3Out = s3_125
	s4Out = dwArg04
	return s1_121
supplicantAkmIsWpaWpa2_exit:


word32 supplicantAkmIsWpa2(word32 dwArg0158, ptr32 & a0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantAkmUsesKdf
// MayUse:  Stack +0158:[0..31]
// LiveOut: a0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
supplicantAkmIsWpa2_entry:
l23010F00:
	word32 a0_48
	word32 s3_34
	word32 a2_108
	word32 a5_109
	word32 a6_110
	word32 s4_111
	word32 s5_112
	word32 s6_113
	word32 s7_114
	word32 s8_115
	word32 s1_28
	word32 s2_100
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_28, out a2_108, out a5_109, out a6_110, out s2_100, out s3_34, out s4_111, out s5_112, out s6_113, out s7_114, out s8_115)
	word32 a1_116
	word32 a2_117
	word32 a3_118
	word32 a4_119
	word32 a5_120
	branch memcmp(s3_34, 0x2308DD94<32>, 3<32>, out a1_116, out a2_117, out a3_118, out a4_119, out a5_120) == 0<32> l23010F6C
l23010F6C:
	a0_48 = 1<32>
l23010F44:
	word32 a2_121
	word32 a5_122
	word32 a6_123
	word32 s3_124
	word32 s4_125
	word32 s5_126
	word32 s6_127
	word32 s7_128
	word32 s8_129
	dbg_test_print(0x23075D78<32>, dwArg0158, out s1_28, out a2_121, out a5_122, out a6_123, out s2_100, out s3_124, out s4_125, out s5_126, out s6_127, out s7_128, out s8_129)
	a0_48 = 0<32>
l23010F5E:
	a0Out = a0_48
	s2Out = s2_100
	return s1_28
supplicantAkmIsWpa2_exit:


word32 supplicantAkmIsWpaWpa2Psk(word32 dwArg0138, word32 dwArg0158, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
// MayUse:  Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
supplicantAkmIsWpaWpa2Psk_entry:
l23010F70:
	word32 s0_68
	word32 s1_126
	word32 a2_127
	word32 a5_128
	word32 a6_129
	word32 s2_130
	word32 s3_131
	word32 s4_132
	word32 s5_133
	word32 s6_134
	word32 s7_135
	word32 s8_136
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_126, out a2_127, out a5_128, out a6_129, out s2_130, out s3_131, out s4_132, out s5_133, out s6_134, out s7_135, out s8_136)
	word32 a0_41
	word32 s4_52
	word32 s2_137
	word32 s3_138
	word32 a4_116
	supplicantAkmIsWpaWpa2(dwArg0138, out a0_41, out a4_116, out s2_137, out s3_138, out s4_52)
	branch a0_41 == 0<32> l23010FD6
l23010FD6:
	word32 s1_139
	word32 a2_140
	word32 a5_141
	word32 a6_142
	word32 s2_143
	word32 s3_144
	word32 s4_145
	word32 s5_146
	word32 s6_147
	word32 s7_148
	word32 s8_149
	s0_68 = dbg_test_print(0x23075D78<32>, dwArg0158, out s1_139, out a2_140, out a5_141, out a6_142, out s2_143, out s3_144, out s4_145, out s5_146, out s6_147, out s7_148, out s8_149)
l23010FAC:
	word32 a5_79 = CONVERT(Mem15[s4_52 + 3<i32>:byte], byte, word32)
	a4_116 = 2<32>
	s0_68 = 1<32>
	branch (a5_79 & 251<i32>) == 2<32> l23010FC4
l23010FBC:
	s0_68 = CONVERT(a5_79 <u -5<i32>, bool, word32)
l23010FC4:
	a4Out = a4_116
	return s0_68
supplicantAkmIsWpaWpa2Psk_exit:


word32 supplicantAkmUsesKdf(word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
// MayUse:  Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: s0 sp
supplicantAkmUsesKdf_entry:
l23010FF2:
	word32 s1_120
	word32 a2_121
	word32 a5_122
	word32 a6_123
	word32 s2_124
	word32 s3_125
	word32 s4_126
	word32 s5_127
	word32 s6_128
	word32 s7_129
	word32 s8_130
	dbg_test_print(0x23075D64<32>, dwArg0168, out s1_120, out a2_121, out a5_122, out a6_123, out s2_124, out s3_125, out s4_126, out s5_127, out s6_128, out s7_129, out s8_130)
	word32 a0_35
	word32 s2_112
	word32 s1_43 = supplicantAkmIsWpa2(dwArg0148, out a0_35, out s2_112)
	branch a0_35 == 0<32> l2301103A
l23011028:
	branch (CONVERT(Mem9[s1_43 + 3<i32>:byte], byte, word32) + 0xFFFFFFFD<32> & 255<i32>) <=u 3<32> l2301105C
l2301103A:
	word32 s1_131
	word32 a2_132
	word32 a5_133
	word32 a6_134
	word32 s3_135
	word32 s4_136
	word32 s5_137
	word32 s6_138
	word32 s7_139
	word32 s8_140
	dbg_test_print(0x23075D78<32>, dwArg0168, out s1_131, out a2_132, out a5_133, out a6_134, out s2_112, out s3_135, out s4_136, out s5_137, out s6_138, out s7_139, out s8_140)
l2301105C:
	return s2_112
supplicantAkmUsesKdf_exit:


word32 supplicantConstructContext(word32 dwArgA8, word32 dwArg0158, word32 dwArg0178, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmt_DerivePTK
// MayUse:  Stack +00A8:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a6 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
supplicantConstructContext_entry:
l23011066:
	word32 a1_79
	word32 s4_44
	word32 s2_48
	word32 s3_49
	word32 s5_50
	word32 s6_51
	word32 s8_257
	word32 a6_255
	word32 s7_256
	word32 a2_253
	word32 a5_254
	word32 s1_252
	word32 s0_42 = dbg_test_print(0x23075D64<32>, dwArg0158, out s1_252, out a2_253, out a5_254, out a6_255, out s2_48, out s3_49, out s4_44, out s5_50, out s6_51, out s7_256, out s8_257)
	word32 a4_261
	word32 a5_262
	word32 a2_259
	word32 a3_260
	word32 a1_258
	branch memcmp(s4_44, s5_50, 6<32>, out a1_258, out a2_259, out a3_260, out a4_261, out a5_262) >= 0<32> l2301112E
l2301112E:
	word32 a4_266
	word32 a3_265
	word32 a1_263
	word32 a2_264
	word32 a5_267
	word32 a6_268
	word32 a7_269
	memcpy(s0_42, s5_50, 6<32>, out a1_263, out a2_264, out a3_265, out a4_266, out a5_267, out a6_268, out a7_269)
	a1_79 = s4_44
l230110BA:
	word32 a1_270
	word32 a2_271
	word32 a3_272
	word32 a4_273
	word32 a5_274
	word32 a6_275
	word32 a7_276
	memcpy(s0_42, s4_44, 6<32>, out a1_270, out a2_271, out a3_272, out a4_273, out a5_274, out a6_275, out a7_276)
	a1_79 = s5_50
l230110C6:
	word32 a1_145
	word32 a1_298
	word32 a2_299
	word32 a3_300
	word32 a4_301
	word32 a5_302
	word32 a6_303
	word32 a7_304
	memcpy(s6_51, a1_79, 6<32>, out a1_298, out a2_299, out a3_300, out a4_301, out a5_302, out a6_303, out a7_304)
	word32 a1_305
	word32 a2_306
	word32 a3_307
	word32 a4_308
	word32 a5_309
	branch memcmp(s2_48, s3_49, 32<i32>, out a1_305, out a2_306, out a3_307, out a4_308, out a5_309) >= 0<32> l2301113C
l2301113C:
	word32 a1_277
	word32 a2_278
	word32 a3_279
	word32 a4_280
	word32 a5_281
	word32 a6_282
	word32 a7_283
	memcpy(s0_42 + 12<i32>, s3_49, 32<i32>, out a1_277, out a2_278, out a3_279, out a4_280, out a5_281, out a6_282, out a7_283)
	a1_145 = s2_48
l230110E8:
	word32 a1_284
	word32 a2_285
	word32 a3_286
	word32 a4_287
	word32 a5_288
	word32 a6_289
	word32 a7_290
	memcpy(s0_42 + 12<i32>, s2_48, 32<i32>, out a1_284, out a2_285, out a3_286, out a4_287, out a5_288, out a6_289, out a7_290)
	a1_145 = s3_49
l230110F6:
	word32 a1_310
	word32 a2_311
	word32 a3_312
	word32 a4_313
	word32 a5_314
	word32 a6_315
	word32 a7_316
	memcpy(s0_42 + 44<i32>, a1_145, 32<i32>, out a1_310, out a2_311, out a3_312, out a4_313, out a5_314, out a6_315, out a7_316)
	0<32> = dwArgA8
l2301112A_thunk_dbg_test_print:
	word32 a6_203
	word32 s1_205
	word32 s2_210
	word32 s3_211
	word32 a2_291
	word32 a5_292
	word32 s4_293
	word32 s5_294
	word32 s6_295
	word32 s7_296
	word32 s8_297
	dbg_test_print(0x23075D78<32>, dwArg0178, out s1_205, out a2_291, out a5_292, out a6_203, out s2_210, out s3_211, out s4_293, out s5_294, out s6_295, out s7_296, out s8_297)
	a6Out = a6_203
	s2Out = s2_210
	s3Out = s3_211
	return s1_205
supplicantConstructContext_exit:


word32 KeyMgmt_DerivePTK(word32 ra, word32 dwArg04, word32 dwArg78, word32 dwArg0128, word32 dwArg0148, word32 dwArg0178, ptr32 & s1Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_DeriveKeys
// MayUse:  ra:[0..31] Stack +0004:[0..31] Stack +0078:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s1 s3 s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s11 sp
KeyMgmt_DerivePTK_entry:
l2301114C:
	word32 s1_236
	word32 a2_237
	word32 a5_238
	word32 a6_239
	word32 s2_240
	word32 s3_241
	word32 s4_242
	word32 s5_243
	word32 s6_244
	word32 s7_245
	word32 s8_246
	dbg_test_print(0x23075D64<32>, dwArg0148, out s1_236, out a2_237, out a5_238, out a6_239, out s2_240, out s3_241, out s4_242, out s5_243, out s6_244, out s7_245, out s8_246)
	word32 a6_68
	word32 s2_72
	word32 s3_73
	word32 s1_71 = supplicantConstructContext(dwArg78, dwArg0128, dwArg0148, out a6_68, out s2_72, out s3_73)
	branch a6_68 == 0<32> l230111F8
l230111F8:
	word32 s0_247
	word32 s1_248
	word32 s4_249
	Bl_PRF(ra, s3_73, 32<i32>, 0x23076090<32>, 0x16<32>, s1_71, 76<i32>, s2_72, 64<i32>, dwArg04, out s0_247, out s1_248, out s4_249)
l230111AC:
	bl_sha256_crypto_kdf(ra, s3_73, 32<i32>, s1_71, 76<i32>, s2_72, 384<i32>)
l230111C6:
	0<32> = dwArg0128
l230111F4_thunk_dbg_test_print:
	word32 s1_179
	word32 s4_180
	word32 s3_185
	word32 s6_187
	word32 a2_250
	word32 a5_251
	word32 a6_252
	word32 s2_253
	word32 s5_254
	word32 s7_255
	word32 s8_256
	word32 s0_178 = dbg_test_print(0x23075D78<32>, dwArg0178, out s1_179, out a2_250, out a5_251, out a6_252, out s2_253, out s3_185, out s4_180, out s5_254, out s6_187, out s7_255, out s8_256)
	s1Out = s1_179
	s3Out = s3_185
	s4Out = s4_180
	s6Out = s6_187
	return s0_178
KeyMgmt_DerivePTK_exit:


word32 KeyMgmtSta_DeriveKeys(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
//      KeyMgmtAp_DerivePTK
// MayUse:  ra:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
KeyMgmtSta_DeriveKeys_entry:
l23011216:
	word32 s4_55
	word32 s5_61
	word32 s1_263
	word32 a2_264
	word32 a5_265
	word32 a6_266
	word32 s2_267
	word32 s3_268
	word32 s6_269
	word32 s7_270
	word32 s8_271
	word32 s0_53 = dbg_test_print(0x23075D64<32>, dwLocC8, out s1_263, out a2_264, out a5_265, out a6_266, out s2_267, out s3_268, out s4_55, out s5_61, out s6_269, out s7_270, out s8_271)
	branch s5_61 == 0<32> l230112E6
l2301127E:
	branch s4_55 == 0<32> l230112E6
l23011282:
	branch s0_53 == 0<32> l230112E6
l23011284:
	word32 s4_85
	word32 s6_87
	word32 s1_272
	word32 s3_273
	word32 s0_80 = KeyMgmt_DerivePTK(ra, dwLoc023C, dwLoc01C8, dwLoc0118, dwLocF8, dwLocC8, out s1_272, out s3_273, out s4_85, out s6_87)
	word32 a1_274
	word32 a2_275
	word32 a3_276
	word32 a4_277
	word32 a5_278
	word32 a6_279
	word32 a7_280
	memcpy(s4_85, fp + -548<i32>, 0x10<32>, out a1_274, out a2_275, out a3_276, out a4_277, out a5_278, out a6_279, out a7_280)
	word32 a1_281
	word32 a2_282
	word32 a3_283
	word32 a4_284
	word32 a5_285
	word32 a6_286
	word32 a7_287
	memcpy(s6_87, fp + -532<i32>, 0x10<32>, out a1_281, out a2_282, out a3_283, out a4_284, out a5_285, out a6_286, out a7_287)
	word32 a1_288
	word32 a2_289
	word32 a3_290
	word32 a4_291
	word32 a5_292
	word32 a6_293
	word32 a7_294
	memcpy(s0_80, fp + -516<i32>, 0x10<32>, out a1_288, out a2_289, out a3_290, out a4_291, out a5_292, out a6_293, out a7_294)
	word32 a1_295
	word32 a2_296
	word32 a3_297
	word32 a4_298
	word32 a5_299
	word32 a6_300
	word32 a7_301
	memcpy(s0_80 + 16<i32>, fp + -500<i32>, 8<32>, out a1_295, out a2_296, out a3_297, out a4_298, out a5_299, out a6_300, out a7_301)
	word32 a1_302
	word32 a2_303
	word32 a3_304
	word32 a5_305
	word32 a6_306
	word32 a7_307
	memcpy(s0_80 + 24<i32>, fp + -492<i32>, 8<32>, out a1_302, out a2_303, out a3_304, out a4, out a5_305, out a6_306, out a7_307)
	word32 s1_308
	word32 a2_309
	word32 a5_310
	word32 a6_311
	word32 s2_312
	word32 s3_313
	word32 s4_314
	word32 s5_315
	word32 s6_316
	word32 s7_317
	word32 s8_318
	dbg_test_print(0x23075D78<32>, dwLocC8, out s1_308, out a2_309, out a5_310, out a6_311, out s2_312, out s3_313, out s4_314, out s5_315, out s6_316, out s7_317, out s8_318)
l230112E6:
	return a4
KeyMgmtSta_DeriveKeys_exit:


word32 SetEAPOLKeyDescTypeVersion(word32 dwArg0158, word32 dwArg0178, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      PrepDefaultEapolMsg
// MayUse:  Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a5 s1 s3 s5
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
SetEAPOLKeyDescTypeVersion_entry:
l23011318:
	word32 s1_32
	word32 a2_90
	word32 a5_91
	word32 a6_92
	word32 s2_93
	word32 s3_94
	word32 s4_95
	word32 s5_96
	word32 s6_97
	word32 s7_98
	word32 s8_99
	word32 s0_31 = dbg_test_print(0x23075D64<32>, dwArg0158, out s1_32, out a2_90, out a5_91, out a6_92, out s2_93, out s3_94, out s4_95, out s5_96, out s6_97, out s7_98, out s8_99)
	word32 a2_42 = CONVERT(Mem15[s1_32 + 20<i32>:byte], byte, word32)
	Mem44[s1_32 + 18<i32>:byte] = 2<8>
	Mem49[s1_32 + 20<i32>:byte] = SLICE(a2_42 & 0xFFFFFFF8<32> | CONVERT(s0_31 != 0<32>, bool, word32) + 2<32>, byte, 0)
l23011388_thunk_dbg_test_print:
	word32 a5_62
	word32 s1_65
	word32 s3_71
	word32 s5_72
	word32 a2_100
	word32 a6_101
	word32 s2_102
	word32 s4_103
	word32 s6_104
	word32 s7_105
	word32 s8_106
	dbg_test_print(0x23075D78<32>, dwArg0178, out s1_65, out a2_100, out a5_62, out a6_101, out s2_102, out s3_71, out s4_103, out s5_72, out s6_104, out s7_105, out s8_106)
	a5Out = a5_62
	s3Out = s3_71
	s5Out = s5_72
	return s1_65
SetEAPOLKeyDescTypeVersion_exit:


word32 GetKeyMsgNonceFromEAPOL(word32 ra, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg4C, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
//      ProcessRxEAPOL_PwkMsg3
//      ProcessRxEAPOL_GrpMsg1
// MayUse:  ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +004C:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 ra s1 s10 s2 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
GetKeyMsgNonceFromEAPOL_entry:
l2301138C:
	word32 s0_130
	word32 s1_223
	word32 a2_224
	word32 a5_225
	word32 a6_226
	word32 s2_227
	word32 s3_228
	word32 s4_229
	word32 s5_230
	word32 s6_231
	word32 s7_232
	word32 s8_233
	word32 s0_38 = Mem11[dbg_test_print(0x23075D64<32>, dwArg0168, out s1_223, out a2_224, out a5_225, out a6_226, out s2_227, out s3_228, out s4_229, out s5_230, out s6_231, out s7_232, out s8_233) + 8<i32>:word32]
	word32 a0_41
	word32 a4_179
	word32 a3_177
	word32 s1_131
	word32 s10_100
	word32 s2_136
	word32 s7_140
	word32 s9_109
	word32 ra_185 = KeyMgmtSta_IsRxEAPOLValid(ra, dwArg28, dwArg0108, dwArg0128, dwArg0138, dwArg0158, out s1_131, out a0_41, out a3_177, out a4_179, out s2_136, out s7_140, out s9_109, out s10_100)
	branch a0_41 == 0<32> l2301141A
l2301141A:
	s0_130 = 0<32>
l230113CA:
	branch (CONVERT(Mem11[s0_38 + 5<i32>:byte], byte, word32) & 1<32>) != 0<32> l230113EC
l230113D2:
	word32 a1_242
	word32 a2_243
	word32 a3_244
	word32 a4_245
	word32 a5_246
	word32 a6_247
	word32 a7_248
	memcpy(s2_136, s0_38 + 17<i32>, 32<i32>, out a1_242, out a2_243, out a3_244, out a4_245, out a5_246, out a6_247, out a7_248)
	word32 s0_249
	word32 s1_250
	word32 a0_251
	ra_185 = supplicantGenerateRand(ra_185, dwArg00, dwArg04, dwArg4C, dwArgF8, dwArg0148, dwArg0168, out s0_249, out s1_250, out a0_251, out a3_177, out a4_179, out s9_109, out s10_100)
l230113EC:
	word32 a2_234
	word32 a5_235
	word32 a6_236
	word32 s3_237
	word32 s4_238
	word32 s5_239
	word32 s6_240
	word32 s8_241
	s0_130 = dbg_test_print(0x23075D78<32>, dwArg0168, out s1_131, out a2_234, out a5_235, out a6_236, out s2_136, out s3_237, out s4_238, out s5_239, out s6_240, out s7_140, out s8_241)
l2301140C:
	0<32> = dwArg38
	s1Out = s1_131
	a0Out = s0_130
	a3Out = a3_177
	a4Out = a4_179
	s2Out = s2_136
	s7Out = s7_140
	s9Out = s9_109
	s10Out = s10_100
	return ra_185
GetKeyMsgNonceFromEAPOL_exit:


word32 ProcessRxEAPOL_PwkMsg3(word32 ra, word32 dwArg08, word32 dwArg18, word32 dwArg2C, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg3
// MayUse:  ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 ra s1 s10 s2 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ProcessRxEAPOL_PwkMsg3_entry:
l2301141E:
	word32 s0_172
	word32 s1_300
	word32 a2_301
	word32 a5_302
	word32 a6_303
	word32 s2_304
	word32 s3_305
	word32 s4_306
	word32 s5_307
	word32 s6_308
	word32 s7_309
	word32 s8_310
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_300, out a2_301, out a5_302, out a6_303, out s2_304, out s3_305, out s4_306, out s5_307, out s6_308, out s7_309, out s8_310)
	word32 a0_42
	word32 a4_139
	word32 a3_138
	word32 s1_119
	word32 s10_253
	word32 s2_120
	word32 s7_125
	word32 s9_103
	word32 ra_50 = GetKeyMsgNonceFromEAPOL(ra, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg2C, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s1_119, out a0_42, out a3_138, out a4_139, out s2_120, out s7_125, out s9_103, out s10_253)
	branch a0_42 != 0<32> l2301146E
l2301146E:
	Mem71[s1_119 + 248<i32>:word16] = 1<16>
	Mem72[s1_119 + 244<i32>:word32] = 0<32>
	branch (CONVERT(Mem72[a0_42 + 5<i32>:byte], byte, word32) & 0x10<32>) == 0<32> l230114BA
l23011482:
	word32 a2_319
	word32 a5_320
	mm_timer_clear(s1_119 + 264<i32>, a4_139, out a2_319, out a5_320)
	word32 s1_321
	word32 s3_322
	KeyMgmtSta_ApplyKEK(dwArg0138, dwArg0158, out s1_321, out a3_138, out a4_139, out s3_322, out s9_103, out s10_253)
	word32 a0_114
	s1_119 = keyMgmtProcessMsgExt(dwArg18, dwArg0148, out a0_114, out s2_120, out s7_125)
	branch a0_114 == 0<32> l2301145C
l230114A4:
	a3_138 = parseKeyDataGTK(dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out a4_139)
l230114BA:
	word32 a2_311
	word32 a5_312
	word32 a6_313
	word32 s3_314
	word32 s4_315
	word32 s5_316
	word32 s6_317
	word32 s8_318
	s0_172 = dbg_test_print(0x23075D78<32>, dwArg0158, out s1_119, out a2_311, out a5_312, out a6_313, out s2_120, out s3_314, out s4_315, out s5_316, out s6_317, out s7_125, out s8_318)
l2301145C:
	s0_172 = 0<32>
l2301145E:
	s1Out = s1_119
	a0Out = s0_172
	a3Out = a3_138
	a4Out = a4_139
	s2Out = s2_120
	s7Out = s7_125
	s9Out = s9_103
	s10Out = s10_253
	return ra_50
ProcessRxEAPOL_PwkMsg3_exit:


word32 ProcessRxEAPOL_GrpMsg1(word32 ra, word32 dwArg08, word32 dwArg1C, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_GrpMsg1
// MayUse:  ra:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 ra s10 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ProcessRxEAPOL_GrpMsg1_entry:
l230114DC:
	word32 s0_240
	word32 a0_373
	word32 s2_374
	word32 s7_375
	word32 s1_372
	word32 s9_376
	word32 a4_166
	word32 a3_171
	word32 s10_28
	word32 ra_26 = GetKeyMsgNonceFromEAPOL(ra, dwLoc30, dwLoc2C, dwLoc08, dwArg08, dwArg1C, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s1_372, out a0_373, out a3_171, out a4_166, out s2_374, out s7_375, out s9_376, out s10_28)
	word32 s1_377
	word32 a2_378
	word32 a5_379
	word32 a6_380
	word32 s3_381
	word32 s4_382
	word32 s5_383
	word32 s6_384
	word32 s7_385
	word32 s8_386
	word32 s2_218
	branch dbg_test_print(0x23075D64<32>, dwArg0148, out s1_377, out a2_378, out a5_379, out a6_380, out s2_218, out s3_381, out s4_382, out s5_383, out s6_384, out s7_385, out s8_386) != 0<32> l2301152C
l2301152C:
	word32 a4_77
	word32 s1_82
	word32 s3_85
	word32 a3_387
	word32 s9_388
	word32 s0_81 = KeyMgmtSta_ApplyKEK(dwArg0128, dwArg0148, out s1_82, out a3_387, out a4_77, out s3_85, out s9_388, out s10_28)
	Mem101[0x75<32>:word32] = s1_82
	word32 a2_389
	word32 a5_390
	mm_timer_clear(s1_82 + 264<i32>, a4_77, out a2_389, out a5_390)
	word32 a5_110 = CONVERT(Mem101[s0_81 + 97<i32>:byte], byte, word32)
	word32 a2_111 = CONVERT(Mem101[s0_81 + 98<i32>:byte], byte, word32)
	branch CONVERT(Mem101[s0_81 + 4<i32>:byte], byte, word32) != 2<32> l23011596
l23011596:
	word32 a1_391
	word32 a2_392
	word32 a3_393
	word32 a4_394
	word32 a5_395
	word32 a6_396
	word32 a7_397
	memcpy(s3_85, s0_81 + 99<i32>, a2_111 << 8<i32> | a5_110, out a1_391, out a2_392, out a3_393, out a4_394, out a5_395, out a6_396, out a7_397)
	word32 a1_398
	word32 a2_399
	word32 a3_400
	word32 a4_401
	word32 a5_402
	word32 a6_403
	word32 a7_404
	memcpy(fp + -40<i32>, s1_82 + 196<i32>, 8<32>, out a1_398, out a2_399, out a3_400, out a4_401, out a5_402, out a6_403, out a7_404)
	word32 a1_405
	word32 a2_406
	word32 a3_407
	word32 a4_408
	word32 a5_409
	word32 a6_410
	word32 a7_411
	memcpy(s1_82 + 196<i32>, s1_82 + 188<i32>, 8<32>, out a1_405, out a2_406, out a3_407, out a4_408, out a5_409, out a6_410, out a7_411)
	word32 a1_412
	word32 a2_413
	word32 a5_414
	word32 a6_415
	word32 a7_416
	memcpy(s1_82 + 188<i32>, fp + -40<i32>, 8<32>, out a1_412, out a2_413, out a3_171, out a4_166, out a5_414, out a6_415, out a7_416)
	Mem182[s1_82 + 210<i32>:word16] = SLICE(CONVERT(Mem101[s0_81 + 6<i32>:byte], byte, word32) >>u 4<i32> & 3<32>, word16, 0)
l2301155E:
	a3_171 = parseKeyDataGTK(dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out a4_166)
	word32 a0_212
	word32 s7_417
	keyMgmtProcessMsgExt(dwArg08, dwArg0138, out a0_212, out s2_218, out s7_417)
	branch a0_212 == 0<32> l23011518
l23011574:
	word32 s1_418
	word32 a2_419
	word32 a5_420
	word32 a6_421
	word32 s3_422
	word32 s4_423
	word32 s5_424
	word32 s6_425
	word32 s7_426
	word32 s8_427
	s0_240 = dbg_test_print(0x23075D78<32>, dwArg0148, out s1_418, out a2_419, out a5_420, out a6_421, out s2_218, out s3_422, out s4_423, out s5_424, out s6_425, out s7_426, out s8_427)
l23011518:
	s0_240 = 0<32>
l2301151A:
	0<32> = dwArg0128
	a0Out = s0_240
	a3Out = a3_171
	a4Out = a4_166
	s2Out = s2_218
	s10Out = s10_28
	return ra_26
ProcessRxEAPOL_GrpMsg1_exit:


word32 KeyMgmtResetCounter(word32 dwArg0168, word32 dwArg0178, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantInit
// MayUse:  Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: s1 s3
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
KeyMgmtResetCounter_entry:
l230115D6:
	word32 s1_24
	word32 a6_76
	word32 a5_75
	word32 a2_74
	word32 s2_77
	word32 s3_78
	word32 s4_79
	word32 s5_80
	word32 s6_81
	word32 s7_82
	word32 s8_83
	dbg_test_print(0x23075D64<32>, dwArg0168, out s1_24, out a2_74, out a5_75, out a6_76, out s2_77, out s3_78, out s4_79, out s5_80, out s6_81, out s7_82, out s8_83)
	branch s1_24 == 0<32> l2301160E
l23011606:
	Mem34[s1_24 + 112<i32>:word32] = 0<32>
	Mem35[s1_24 + 108<i32>:word32] = 0<32>
l2301160E:
l23011632_thunk_dbg_test_print:
	word32 s1_52
	word32 s3_58
	word32 a2_84
	word32 a5_85
	word32 a6_86
	word32 s2_87
	word32 s4_88
	word32 s5_89
	word32 s6_90
	word32 s7_91
	word32 s8_92
	dbg_test_print(0x23075D78<32>, dwArg0178, out s1_52, out a2_84, out a5_85, out a6_86, out s2_87, out s3_58, out s4_88, out s5_89, out s6_90, out s7_91, out s8_92)
	s3Out = s3_58
	return s1_52
KeyMgmtResetCounter_exit:


word32 keyMgmtSta_StartSession_internal(word32 a4, word32 mstatus, word32 dwArg0158, word32 dwArg0178, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      keyMgmtSta_StartSession
// MayUse:  a4:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: s1 s3
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a4 sp
keyMgmtSta_StartSession_internal_entry:
l23011636:
	word32 s2_35
	word32 s3_36
	word32 a6_115
	word32 a5_114
	word32 a2_113
	word32 s1_112
	word32 s4_116
	word32 s5_117
	word32 s6_118
	word32 s7_119
	word32 s8_120
	word32 s0_29 = dbg_test_print(0x23075D64<32>, dwArg0158, out s1_112, out a2_113, out a5_114, out a6_115, out s2_35, out s3_36, out s4_116, out s5_117, out s6_118, out s7_119, out s8_120)
	branch Mem13[s0_29 + 260<i32>:int32] != 0<32> l2301167E
l23011670:
	word32 s1_121
	word32 a0_122
	word32 a1_123
	word32 a2_124
	word32 a4_125
	word32 a5_126
	word32 s2_127
	word32 s3_128
	word32 s4_129
	word32 s8_130
	s0_29 = mm_timer_set(s0_29 + 264<i32>, Mem13[s2_35 + 288<i32>:int32] + s3_36, a4, mstatus, out s1_121, out a0_122, out a1_123, out a2_124, out a4_125, out a5_126, out s2_127, out s3_128, out s4_129, out s8_130)
l2301167E:
	Mem60[s0_29 + 96<i32>:word32] = 0<32>
	Mem61[s0_29 + 100<i32>:word32] = 0<32>
	Mem62[s0_29 + 104<i32>:word32] = 0<32>
l230116B2_thunk_dbg_test_print:
	word32 s1_82
	word32 s3_88
	word32 a2_131
	word32 a5_132
	word32 a6_133
	word32 s2_134
	word32 s4_135
	word32 s5_136
	word32 s6_137
	word32 s7_138
	word32 s8_139
	dbg_test_print(0x23075D78<32>, dwArg0178, out s1_82, out a2_131, out a5_132, out a6_133, out s2_134, out s3_88, out s4_135, out s5_136, out s6_137, out s7_138, out s8_139)
	s3Out = s3_88
	return s1_82
keyMgmtSta_StartSession_internal_exit:


word32 KeyMgmtSta_InitSession(word32 dwArg0158, word32 dwArg0178, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtInitSta
// MayUse:  Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s2
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
KeyMgmtSta_InitSession_entry:
l230116B6:
	word32 s1_84
	word32 a2_85
	word32 a5_86
	word32 a6_87
	word32 s2_88
	word32 s3_89
	word32 s4_90
	word32 s5_91
	word32 s6_92
	word32 s7_93
	word32 s8_94
	word32 s0_27 = dbg_test_print(0x23075D64<32>, dwArg0158, out s1_84, out a2_85, out a5_86, out a6_87, out s2_88, out s3_89, out s4_90, out s5_91, out s6_92, out s7_93, out s8_94)
	Mem40[s0_27 + 116<i32>:word32] = 0<32>
	Mem41[s0_27 + 120<i32>:word32] = 0<32>
	Mem42[s0_27 + 128<i32>:word32] = 0<32>
	Mem43[s0_27 + 124<i32>:word32] = 0<32>
	Mem44[s0_27 + 268<i32>:word32] = 0x23010430<32>
	Mem45[s0_27 + 272<i32>:word32] = s0_27
l23011728_thunk_dbg_test_print:
	word32 s2_66
	word32 s1_95
	word32 a2_96
	word32 a5_97
	word32 a6_98
	word32 s3_99
	word32 s4_100
	word32 s5_101
	word32 s6_102
	word32 s7_103
	word32 s8_104
	word32 s0_60 = dbg_test_print(0x23075D78<32>, dwArg0178, out s1_95, out a2_96, out a5_97, out a6_98, out s2_66, out s3_99, out s4_100, out s5_101, out s6_102, out s7_103, out s8_104)
	s2Out = s2_66
	return s0_60
KeyMgmtSta_InitSession_exit:


word32 set_psk(word32 ra, word32 mstatus, word32 dwArg38, word32 dwArg78, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_add
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
set_psk_entry:
l2301172C:
	word32 s3_42
	word32 s1_142
	word32 a2_143
	word32 a5_144
	word32 a6_145
	word32 s2_146
	word32 s4_147
	word32 s5_148
	word32 s6_149
	word32 s7_150
	word32 s8_151
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_142, out a2_143, out a5_144, out a6_145, out s2_146, out s3_42, out s4_147, out s5_148, out s6_149, out s7_150, out s8_151)
	word32 t1_152
	word32 a0_153
	word32 a1_154
	word32 a2_155
	word32 a3_156
	word32 a4_157
	word32 a5_158
	word32 ra_56 = memset(ra, 0x42047EA4<32>, 255<i32>, 67<i32>, out t1_152, out a0_153, out a1_154, out a2_155, out a3_156, out a4_157, out a5_158)
	word32 a1_159
	word32 a2_160
	word32 a3_161
	word32 a4_162
	word32 a5_163
	strlen(s3_42, out a1_159, out a2_160, out a3_161, out a4_162, out a5_163)
	word32 s2_164
	pmkCacheSetPassphrase(ra_56, mstatus, dwLoc08, dwArg38, dwArg78, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s2_164)
l230117B0_thunk_dbg_test_print:
	word32 s1_104
	word32 s4_105
	word32 s2_109
	word32 s3_110
	word32 a2_165
	word32 a5_166
	word32 a6_167
	word32 s5_168
	word32 s6_169
	word32 s7_170
	word32 s8_171
	word32 s0_103 = dbg_test_print(0x23075D78<32>, dwArg0178, out s1_104, out a2_165, out a5_166, out a6_167, out s2_109, out s3_110, out s4_105, out s5_168, out s6_169, out s7_170, out s8_171)
	s1Out = s1_104
	s2Out = s2_109
	s3Out = s3_110
	s4Out = s4_105
	return s0_103
set_psk_exit:


word32 remove_psk(word32 ra, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0158, word32 dwArg0178, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_del
// MayUse:  ra:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: s1 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
remove_psk_entry:
l230117B4:
	word32 s1_106
	word32 a2_107
	word32 a5_108
	word32 a6_109
	word32 s2_110
	word32 s3_111
	word32 s4_112
	word32 s5_113
	word32 s6_114
	word32 s7_115
	word32 s8_116
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_106, out a2_107, out a5_108, out a6_109, out s2_110, out s3_111, out s4_112, out s5_113, out s6_114, out s7_115, out s8_116)
	word32 s2_117
	pmkCacheDeletePSK(ra, dwArgF8, dwArg0108, dwArg0118, dwArg0148, dwArg0158, out s2_117)
l23011812_thunk_dbg_test_print:
	word32 s1_78
	word32 s3_84
	word32 s6_86
	word32 a2_118
	word32 a5_119
	word32 a6_120
	word32 s2_121
	word32 s4_122
	word32 s5_123
	word32 s7_124
	word32 s8_125
	dbg_test_print(0x23075D78<32>, dwArg0178, out s1_78, out a2_118, out a5_119, out a6_120, out s2_121, out s3_84, out s4_122, out s5_123, out s6_86, out s7_124, out s8_125)
	s3Out = s3_84
	s6Out = s6_86
	return s1_78
remove_psk_exit:


void bl_sha256_crypto_kdf(word32 ra, word32 a0, word32 a1, word32 a4, word32 a5, word32 a6, word32 a7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmt_DerivePTK
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_sha256_crypto_kdf_entry:
l23011816:
	word32 s2_14 = a4 + a5
	word32 s7_41 = a1
	word16 wLoc72_156 = SLICE(a7, word16, 0)
	word16 wLoc62_157 = 1<16>
	word32 s1_106 = s2_14
	word32 s0_107 = a7 + 255<i32> >> 8<i32> & 255<i32>
l23011862:
	branch s0_107 >=u CONVERT(wLoc62_157, word16, word32) l23011896
l23011896:
	a6 = hmac_sha256_vector(ra, a0, s7_41, 4<32>, fp + -96<i32>, fp + -80<i32>, s1_106, out s7_41)
	s1_106 = s1_106 + 32<i32>
	s0_107 = dwLoc78
	wLoc62_157 = SLICE(CONVERT(SLICE(a5, word16, 16), word16, word32) + 1<32>, word16, 0)
l2301186A:
	word32 a7_207
	word32 a6_206
	word32 a5_205
	word32 a4_204
	word32 a3_203
	word32 a2_202
	word32 a1_201
	memcpy(a6, s2_14, CONVERT(wLoc72_156, word16, word32) >>u 3<i32>, out a1_201, out a2_202, out a3_203, out a4_204, out a5_205, out a6_206, out a7_207)
	return
bl_sha256_crypto_kdf_exit:


word32 pmkCacheFindPSK(word32 ra, word32 mstatus, word32 dwArg18, word32 dwArg58, word32 dwArg98, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtStaHsk_Recvd_PWKMsg1
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
pmkCacheFindPSK_entry:
l230118CA:
	word32 a6_204
	word32 a5_203
	word32 a2_202
	word32 s1_201
	word32 s2_205
	word32 s3_206
	word32 s4_207
	word32 s5_208
	word32 s6_209
	word32 s7_210
	word32 s8_211
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_201, out a2_202, out a5_203, out a6_204, out s2_205, out s3_206, out s4_207, out s5_208, out s6_209, out s7_210, out s8_211)
	word32 s3_212
	word32 s4_213
	word32 s5_214
	word32 a4_117
	branch pmkCacheFindPSKElement(dwArg0108, dwArg0118, dwArg0128, out a4_117, out s3_212, out s4_213, out s5_214) == 0<32> l23011940
l23011940:
	branch CONVERT(Mem15[0x42047F70<32>:byte], byte, word32) == 0<32> l2301190E
l2301194A:
	pmkCacheAddPSK(ra, dwArgE8, dwArgF8, dwArg0108, dwArg0138, dwArg0158)
	word32 s4_100
	word32 a4_226
	word32 s3_227
	word32 s5_228
	word32 a0_89 = pmkCacheFindPSKElement(dwArg0108, dwArg0118, dwArg0128, out a4_226, out s3_227, out s4_100, out s5_228)
	word32 a1_229
	word32 a2_230
	word32 a3_231
	word32 a4_232
	word32 a5_233
	word32 s1_234
	word32 a5_235
	pmkCacheGeneratePSK(ra, strlen(s4_100 + -144<i32>, out a1_229, out a2_230, out a3_231, out a4_232, out a5_233) & 255<i32>, s4_100, mstatus, dwArg18, dwArg58, dwArg98, dwArgE8, dwArg0108, dwArg0128, dwArg0158, out s1_234, out a5_235)
	a4_117 = a0_89 + 32<i32>
l2301190A:
l2301190E:
	word32 s1_215
	word32 a2_216
	word32 a5_217
	word32 a6_218
	word32 s2_219
	word32 s3_220
	word32 s4_221
	word32 s5_222
	word32 s6_223
	word32 s7_224
	word32 s8_225
	word32 a0_163 = dbg_test_print(0x23075D78<32>, dwArg0158, out s1_215, out a2_216, out a5_217, out a6_218, out s2_219, out s3_220, out s4_221, out s5_222, out s6_223, out s7_224, out s8_225)
	a4Out = a4_117
	return a0_163
pmkCacheFindPSK_exit:


word32 pmkCacheSetPassphrase(word32 ra, word32 mstatus, word32 dwArg18, word32 dwArg58, word32 dwArg98, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_psk
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s2
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a3 a4 a7 sp t0 t1 t4 t5 t6
pmkCacheSetPassphrase_entry:
l2301197A:
	word32 s1_38
	word32 a2_205
	word32 a5_206
	word32 a6_207
	word32 s2_208
	word32 s3_209
	word32 s4_210
	word32 s5_211
	word32 s6_212
	word32 s7_213
	word32 s8_214
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_38, out a2_205, out a5_206, out a6_207, out s2_208, out s3_209, out s4_210, out s5_211, out s6_212, out s7_213, out s8_214)
	branch s1_38 == 0<32> l230119EA
l230119B8:
	word32 a1_215
	word32 a2_216
	word32 a3_217
	word32 a4_218
	word32 a5_219
	word32 a6_220
	word32 a7_221
	memcpy(0x42047F70<32>, s1_38, 64<i32>, out a1_215, out a2_216, out a3_217, out a4_218, out a5_219, out a6_220, out a7_221)
	pmkCacheAddPSK(ra, dwArgE8, dwArgF8, dwArg0108, dwArg0138, dwArg0158)
	word32 s3_99
	word32 s4_100
	word32 a4_222
	word32 s5_223
	pmkCacheFindPSKElement(dwArg0108, dwArg0118, dwArg0128, out a4_222, out s3_99, out s4_100, out s5_223)
	word32 s1_224
	word32 a5_225
	pmkCacheGeneratePSK(ra, s3_99, s4_100, mstatus, dwArg18, dwArg58, dwArg98, dwArgE8, dwArg0108, dwArg0128, dwArg0158, out s1_224, out a5_225)
l230119EA:
l23011A16_thunk_dbg_test_print:
	word32 s2_153
	word32 s1_226
	word32 a2_227
	word32 a5_228
	word32 a6_229
	word32 s3_230
	word32 s4_231
	word32 s5_232
	word32 s6_233
	word32 s7_234
	word32 s8_235
	word32 s0_147 = dbg_test_print(0x23075D78<32>, dwArg0178, out s1_226, out a2_227, out a5_228, out a6_229, out s2_153, out s3_230, out s4_231, out s5_232, out s6_233, out s7_234, out s8_235)
	s2Out = s2_153
	return s0_147
pmkCacheSetPassphrase_exit:


word32 pmkCacheInit(word32 ra, word32 dwArg38, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantRestoreDefaults
// MayUse:  ra:[0..31] Stack +0038:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
pmkCacheInit_entry:
l23011A1A:
	word32 s1_94
	word32 a2_95
	word32 a5_96
	word32 a6_97
	word32 s2_98
	word32 s3_99
	word32 s4_100
	word32 s5_101
	word32 s6_102
	word32 s7_103
	word32 s8_104
	dbg_test_print(0x23075D64<32>, dwArg0168, out s1_94, out a2_95, out a5_96, out a6_97, out s2_98, out s3_99, out s4_100, out s5_101, out s6_102, out s7_103, out s8_104)
	word32 t1_105
	word32 a0_106
	word32 a1_107
	word32 a2_108
	word32 a3_109
	word32 a4_110
	word32 a5_111
	word32 t1_112
	word32 a0_113
	word32 a1_114
	word32 a2_115
	word32 a3_116
	word32 a4_117
	word32 a5_118
	word32 ra_57 = memset(memset(ra, 0x42047EE8<32>, 0<32>, 134<i32>, out t1_105, out a0_106, out a1_107, out a2_108, out a3_109, out a4_110, out a5_111), 0x42047F70<32>, 0<32>, 64<i32>, out t1_112, out a0_113, out a1_114, out a2_115, out a3_116, out a4_117, out a5_118)
	Mem61[0x42048FB0<32>:byte] = 0<8>
	0<32> = dwArg38
l23011A92_thunk_dbg_test_print:
	word32 s1_119
	word32 a2_120
	word32 a5_121
	word32 a6_122
	word32 s2_123
	word32 s3_124
	word32 s4_125
	word32 s5_126
	word32 s6_127
	word32 s7_128
	word32 s8_129
	dbg_test_print(0x23075D78<32>, dwArg0178, out s1_119, out a2_120, out a5_121, out a6_122, out s2_123, out s3_124, out s4_125, out s5_126, out s6_127, out s7_128, out s8_129)
	return ra_57
pmkCacheInit_exit:


word32 pmkCacheRomInit(word32 dwArg38, word32 dwArg0168, word32 dwArg0178, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantRestoreDefaults
// MayUse:  Stack +0038:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s2
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
pmkCacheRomInit_entry:
l23011A96:
	word32 s1_78
	word32 a2_79
	word32 a5_80
	word32 a6_81
	word32 s2_82
	word32 s3_83
	word32 s4_84
	word32 s5_85
	word32 s6_86
	word32 s7_87
	word32 s8_88
	dbg_test_print(0x23075D64<32>, dwArg0168, out s1_78, out a2_79, out a5_80, out a6_81, out s2_82, out s3_83, out s4_84, out s5_85, out s6_86, out s7_87, out s8_88)
	Mem36[0x42048FBC<32>:word32] = 2<32>
	Mem40[0x42048FB8<32>:word32] = 0x42047EE8<32>
	Mem44[0x42048FB4<32>:word32] = 0x42047F70<32>
	0<32> = dwArg38
l23011B0C_thunk_dbg_test_print:
	word32 s2_63
	word32 s1_89
	word32 a2_90
	word32 a5_91
	word32 a6_92
	word32 s3_93
	word32 s4_94
	word32 s5_95
	word32 s6_96
	word32 s7_97
	word32 s8_98
	word32 s0_57 = dbg_test_print(0x23075D78<32>, dwArg0178, out s1_89, out a2_90, out a5_91, out a6_92, out s2_63, out s3_93, out s4_94, out s5_95, out s6_96, out s7_97, out s8_98)
	s2Out = s2_63
	return s0_57
pmkCacheRomInit_exit:


word32 pmkCacheNewElement(word32 ra, word32 dwArg0128, word32 dwArg0148, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheAddPSK
// MayUse:  ra:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
pmkCacheNewElement_entry:
l23011B10:
	word32 s4_43
	word32 s2_47
	word32 s5_49
	word32 s6_50
	word32 a6_249
	word32 s7_250
	word32 s8_251
	word32 a5_248
	word32 s1_246
	word32 a2_247
	word32 s3_102
	word32 s0_109 = dbg_test_print(0x23075D64<32>, dwArg0148, out s1_246, out a2_247, out a5_248, out a6_249, out s2_47, out s3_102, out s4_43, out s5_49, out s6_50, out s7_250, out s8_251)
l23011B5E:
	word32 a5_54 = Mem53[s5_49 + -68<i32>:int32]
	branch s0_109 < a5_54 l23011BA0
l23011BA0:
	branch CONVERT(Mem53[s2_47 + -80<i32>:int8], int8, int32) != a5_54 l23011BBC
l23011BA8:
	word32 a5_62 = s0_109 + s6_50 + Mem53[s4_43 + -72<i32>:int32]
	Mem65[a5_62 + 66<i32>:byte] = SLICE(CONVERT(Mem53[a5_62 + 66<i32>:byte], byte, word32) + 0xFFFFFFFF<32>, byte, 0)
l23011BBC:
	branch s3_102 != 0<32> l23011BFE
l23011BC0:
	word32 s7_70 = s0_109 + s6_50
	word32 s1_74 = Mem72[s4_43 + -72<i32>:int32] + s7_70
	branch CONVERT(Mem72[s1_74 + 66<i32>:int8], int8, int32) != 0<32> l23011BFE
l23011BD0:
	word32 t1_260
	word32 a2_263
	word32 a3_264
	word32 a1_262
	word32 a0_261
	word32 a4_265
	word32 a5_266
	ra = memset(ra, s1_74, 0<32>, 67<i32>, out t1_260, out a0_261, out a1_262, out a2_263, out a3_264, out a4_265, out a5_266)
	word32 a5_91 = CONVERT(Mem72[s2_47 + -80<i32>:int8], int8, int32)
	branch a5_91 >= Mem72[s5_49 + -68<i32>:int32] l23011BEE
l23011BE8:
	Mem95[s2_47 + 4016<i32>:byte] = SLICE(a5_91 + 1<32>, byte, 0)
l23011BEE:
	Mem105[Mem97[s4_43 + -72<i32>:int32] + s7_70 + 66<i32>:byte] = SLICE(CONVERT(Mem97[s2_47 + -80<i32>:byte], byte, word32), byte, 0)
	s3_102 = s1_74
l23011BFE:
	s0_109 = s0_109 + 1<32> & 255<i32>
l23011B66:
	word32 a2_253
	word32 s8_259
	word32 s7_258
	word32 s6_257
	word32 s2_134
	word32 s3_135
	word32 s5_136
	word32 a5_254
	word32 s4_256
	word32 a6_255
	word32 s1_252
	dbg_test_print(0x23075D78<32>, dwArg0148, out s1_252, out a2_253, out a5_254, out a6_255, out s2_134, out s3_135, out s4_256, out s5_136, out s6_257, out s7_258, out s8_259)
	0<32> = dwArg0128
	s2Out = s2_134
	s3Out = s3_135
	s4Out = dwArg78
	s5Out = s5_136
	return s3_135
pmkCacheNewElement_exit:


void pmkCacheUpdateReplacementRank(word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheFindPSKElement
// MayUse:  Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a3 a4 a7 sp
pmkCacheUpdateReplacementRank_entry:
l23011C06:
	word32 s1_24
	word32 a2_125
	word32 a5_126
	word32 a6_127
	word32 s2_128
	word32 s3_129
	word32 s4_130
	word32 s5_131
	word32 s6_132
	word32 s7_133
	word32 s8_134
	dbg_test_print(0x23075D64<32>, dwArg0168, out s1_24, out a2_125, out a5_126, out a6_127, out s2_128, out s3_129, out s4_130, out s5_131, out s6_132, out s7_133, out s8_134)
	branch s1_24 == 0<32> l23011C64
l23011C36:
	word32 a2_35 = CONVERT(Mem9[0x42047FB0<32>:int8], int8, int32)
	branch CONVERT(Mem9[s1_24 + 66<i32>:int8], int8, int32) == a2_35 l23011C64
l23011C46:
	word32 a1_38 = Mem9[0x42047FBC<32>:int32]
	word32 a0_40 = Mem9[0x42047FB8<32>:int32]
	word32 a5_42 = 0<32>
l23011C5C:
	branch a5_42 < a1_38 l23011C8C
l23011C8C:
	word32 a4_51 = a5_42 + 67<i32> + a0_40
	word32 a3_52 = CONVERT(Mem48[a4_51 + 66<i32>:int8], int8, int32)
	branch CONVERT(Mem48[s1_24 + 66<i32>:int8], int8, int32) >= a3_52 l23011CA4
l23011C9E:
	Mem54[a4_51 + 66<i32>:byte] = SLICE(a3_52 + 0xFFFFFFFF<32>, byte, 0)
l23011CA4:
	a5_42 = a5_42 + 1<32> & 255<i32>
l23011C60:
	Mem60[s1_24 + 66<i32>:byte] = SLICE(a2_35, byte, 0)
l23011C64:
l23011C88_thunk_dbg_test_print:
	word32 s1_135
	word32 a2_136
	word32 a5_137
	word32 a6_138
	word32 s2_139
	word32 s3_140
	word32 s4_141
	word32 s5_142
	word32 s6_143
	word32 s7_144
	word32 s8_145
	dbg_test_print(0x23075D78<32>, dwArg0178, out s1_135, out a2_136, out a5_137, out a6_138, out s2_139, out s3_140, out s4_141, out s5_142, out s6_143, out s7_144, out s8_145)
	return
pmkCacheUpdateReplacementRank_exit:


word32 pmkCacheFindPSKElement(word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheFindPSK
//      pmkCacheSetPassphrase
//      pmkCacheAddPSK
//      pmkCacheDeletePSK
// MayUse:  Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a4 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
pmkCacheFindPSKElement_entry:
l23011CAC:
	word32 s8_47
	word32 s2_50
	word32 s3_51
	word32 s6_53
	word32 s7_54
	word32 s4_198
	word32 s5_199
	word32 a5_196
	word32 a6_197
	word32 s1_194
	word32 a2_195
	word32 s0_44 = dbg_test_print(0x23075D64<32>, dwArg0148, out s1_194, out a2_195, out a5_196, out a6_197, out s2_50, out s3_51, out s4_198, out s5_199, out s6_53, out s7_54, out s8_47)
l23011CFA:
	branch s0_44 < Mem23[s7_54 + -68<i32>:int32] l23011D42
l23011D42:
	word32 a0_63 = Mem23[s3_51 + -72<i32>:int32] + (s0_44 + s8_47)
	branch CONVERT(Mem23[a0_63 + 66<i32>:int8], int8, int32) == 0<32> l23011D6A
l23011D52:
	branch CONVERT(Mem23[a0_63 + 64<i32>:byte], byte, word32) != s2_50 l23011D6A
l23011D5A:
	word32 a1_208
	word32 a2_209
	word32 a3_210
	word32 a5_211
	branch memcmp(a0_63, s6_53, s2_50, out a1_208, out a2_209, out a3_210, out a4, out a5_211) != 0<32> l23011D6A
l23011D64:
l23011D6A:
	s0_44 = s0_44 + 1<32> & 255<i32>
l23011D02:
	pmkCacheUpdateReplacementRank(dwArg0138, dwArg0148)
	word32 s4_204
	word32 s8_207
	word32 s1_113
	word32 s3_119
	word32 s5_120
	word32 s7_206
	word32 s6_205
	word32 a6_202
	word32 s2_203
	word32 a2_200
	word32 a5_201
	dbg_test_print(0x23075D78<32>, dwArg0148, out s1_113, out a2_200, out a5_201, out a6_202, out s2_203, out s3_119, out s4_204, out s5_120, out s6_205, out s7_206, out s8_207)
	0<32> = dwArg0128
	a4Out = a4
	s3Out = s3_119
	s4Out = dwArg78
	s5Out = s5_120
	return s1_113
pmkCacheFindPSKElement_exit:


void pmkCacheAddPSK(word32 ra, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheFindPSK
//      pmkCacheSetPassphrase
// MayUse:  ra:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a7 ra sp t0 t1 t4 t5 t6
pmkCacheAddPSK_entry:
l23011D72:
	word32 s1_219
	word32 a2_220
	word32 a5_221
	word32 a6_222
	word32 s2_223
	word32 s3_224
	word32 s4_225
	word32 s5_226
	word32 s6_227
	word32 s7_228
	word32 s8_229
	dbg_test_print(0x23075D64<32>, dwArg0158, out s1_219, out a2_220, out a5_221, out a6_222, out s2_223, out s3_224, out s4_225, out s5_226, out s6_227, out s7_228, out s8_229)
	word32 a4_230
	word32 s4_231
	word32 s3_107
	word32 s5_125
	word32 a0_50 = pmkCacheFindPSKElement(dwArg0108, dwArg0118, dwArg0128, out a4_230, out s3_107, out s4_231, out s5_125)
	word32 s0_110 = a0_50
	branch a0_50 != 0<32> l23011DCC
l23011DBA:
	word32 s2_79
	word32 s4_81
	word32 a0_69 = pmkCacheNewElement(ra, dwArg0108, dwArg0128, out s2_79, out s3_107, out s4_81, out s5_125)
	word32 a1_232
	word32 a2_233
	word32 a3_234
	word32 a4_235
	word32 a5_236
	word32 a6_237
	word32 a7_238
	memcpy(a0_69, s4_81, s2_79, out a1_232, out a2_233, out a3_234, out a4_235, out a5_236, out a6_237, out a7_238)
	Mem106[a0_69 + 64<i32>:byte] = SLICE(s2_79, byte, 0)
	s0_110 = a0_69
l23011DCC:
	branch s3_107 == 0<32> l23011DE2
l23011DD0:
	word32 a1_239
	word32 a2_240
	word32 a3_241
	word32 a4_242
	word32 a5_243
	word32 a6_244
	word32 a7_245
	memcpy(s0_110 + 32<i32>, s3_107, 32<i32>, out a1_239, out a2_240, out a3_241, out a4_242, out a5_243, out a6_244, out a7_245)
	Mem126[s0_110 + 65<i32>:byte] = SLICE(s5_125, byte, 0)
l23011DE2:
l23011E0E_thunk_dbg_test_print:
	word32 s1_246
	word32 a2_247
	word32 a5_248
	word32 a6_249
	word32 s2_250
	word32 s3_251
	word32 s4_252
	word32 s5_253
	word32 s6_254
	word32 s7_255
	word32 s8_256
	dbg_test_print(0x23075D78<32>, dwArg0178, out s1_246, out a2_247, out a5_248, out a6_249, out s2_250, out s3_251, out s4_252, out s5_253, out s6_254, out s7_255, out s8_256)
	return
pmkCacheAddPSK_exit:


word32 pmkCacheDeletePSK(word32 ra, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      remove_psk
// MayUse:  ra:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: ra sp t0 t1
pmkCacheDeletePSK_entry:
l23011E12:
	word32 a4_115
	word32 s3_116
	word32 s4_117
	word32 s5_118
	pmkCacheFindPSKElement(dwArg0118, dwArg0128, dwArg0138, out a4_115, out s3_116, out s4_117, out s5_118)
	word32 s1_41
	word32 a2_119
	word32 a5_120
	word32 a6_121
	word32 s2_122
	word32 s3_123
	word32 s4_124
	word32 s5_125
	word32 s6_126
	word32 s7_127
	word32 s8_128
	dbg_test_print(0x23075D64<32>, dwArg0168, out s1_41, out a2_119, out a5_120, out a6_121, out s2_122, out s3_123, out s4_124, out s5_125, out s6_126, out s7_127, out s8_128)
	branch s1_41 == 0<32> l23011E60
l23011E46:
	word32 t1_129
	word32 a0_130
	word32 a1_131
	word32 a2_132
	word32 a3_133
	word32 a4_134
	word32 a5_135
	memset(ra, s1_41, 0<32>, 67<i32>, out t1_129, out a0_130, out a1_131, out a2_132, out a3_133, out a4_134, out a5_135)
	Mem66[0x42048FB0<32>:byte] = SLICE(CONVERT(Mem9[0x42047FB0<32>:byte], byte, word32) + 0xFFFFFFFF<32>, byte, 0)
l23011E60:
l23011E84_thunk_dbg_test_print:
	word32 s2_88
	word32 s1_136
	word32 a2_137
	word32 a5_138
	word32 a6_139
	word32 s3_140
	word32 s4_141
	word32 s5_142
	word32 s6_143
	word32 s7_144
	word32 s8_145
	word32 s0_82 = dbg_test_print(0x23075D78<32>, dwArg0178, out s1_136, out a2_137, out a5_138, out a6_139, out s2_88, out s3_140, out s4_141, out s5_142, out s6_143, out s7_144, out s8_145)
	s2Out = s2_88
	return s0_82
pmkCacheDeletePSK_exit:


word32 pmkCacheGetHexNibble(word32 dwArg0158, ptr32 & a0Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheGeneratePSK
// MayUse:  Stack +0158:[0..31]
// LiveOut: a0 s1 s3 s4 s5
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
pmkCacheGetHexNibble_entry:
l23011E88:
	word32 s0_49
	word32 a2_101
	word32 a5_102
	word32 a6_103
	word32 s2_104
	word32 s4_105
	word32 s6_106
	word32 s7_107
	word32 s8_108
	word32 s3_34
	word32 s1_28
	word32 s5_35
	word32 s0_27 = dbg_test_print(0x23075D64<32>, dwArg0158, out s1_28, out a2_101, out a5_102, out a6_103, out s2_104, out s3_34, out s4_105, out s5_35, out s6_106, out s7_107, out s8_108)
	branch s0_27 <=u 96<i32> l23011ED8
l23011ED8:
	branch s0_27 <=u 64<i32> l23011EE6
l23011EE6:
	word32 a2_109
	word32 a5_110
	word32 a6_111
	word32 s2_112
	word32 s4_113
	word32 s6_114
	word32 s7_115
	word32 s8_116
	s0_49 = dbg_test_print(0x23075D78<32>, dwArg0158, out s1_28, out a2_109, out a5_110, out a6_111, out s2_112, out s3_34, out s4_113, out s5_35, out s6_114, out s7_115, out s8_116)
l23011EE0:
	s0_49 = s0_27 + -55<i32>
l23011EC2:
	s0_49 = s0_27 + -87<i32>
l23011EC6:
	a0Out = s0_49 & 255<i32>
	s3Out = s3_34
	s4Out = dwArg04
	s5Out = s5_35
	return s1_28
pmkCacheGetHexNibble_exit:


word32 pmkCacheGeneratePSK(word32 ra, word32 a3, word32 s4, word32 mstatus, word32 dwArg38, word32 dwArg78, word32 dwArgB8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0178, ptr32 & s1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheFindPSK
//      pmkCacheSetPassphrase
//      KeyMgmtInit
// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0178:[0..31]
// LiveOut: a5 s0 s1
// Trashed: a0 a1 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a3 a4 a7 ra s10 s11 s9 sp t0 t1 t4 t5 t6
pmkCacheGeneratePSK_entry:
l23011F04:
	word32 s1_40
	word32 s4_41
	word32 s3_46
	word32 s5_239
	word32 s6_240
	word32 s7_241
	word32 s8_242
	word32 s2_238
	word32 a6_237
	word32 a5_236
	word32 a2_235
	word32 s0_39 = dbg_test_print(0x23075D64<32>, dwArg0148, out s1_40, out a2_235, out a5_236, out a6_237, out s2_238, out s3_46, out s4_41, out s5_239, out s6_240, out s7_241, out s8_242)
	branch s4_41 == 0<32> l23011F62
l23011F46:
	branch s0_39 == 0<32> l23011F62
l23011F48:
	branch a3 >u -63<i32> l23011F92
l23011F92:
	branch a3 != 64<i32> l23011F62
l23011F9A:
l23011FA0:
	word32 a0_252
	word32 s3_253
	word32 s4_254
	word32 s5_255
	pmkCacheGetHexNibble(dwArg0128, out a0_252, out s3_253, out s4_254, out s5_255)
	word32 a0_79
	word32 s3_87
	word32 s4_88
	word32 s5_89
	Mem99[(s3_87 >> 1<u32>) + s4_88:byte] = SLICE(a0_79 | pmkCacheGetHexNibble(dwArg0128, out a0_79, out s3_87, out s4_88, out s5_89) << 4<u32>, byte, 0)
	branch s3_87 + 2<32> != s5_89 l23011FA0
l23011FCA:
l23011F56:
	utils_wifi_psk_cal_fast_bin(ra, s0_39, s1_40, s3_46, s3_46, s4_41, mstatus, s4, dwArg38, dwArg78, dwArgB8, dwArg0108)
l23011F62:
	0<32> = dwArg0128
l23011F8E_thunk_dbg_test_print:
	word32 a5_152
	word32 s1_155
	word32 a6_244
	word32 a2_243
	word32 s2_245
	word32 s3_246
	word32 s4_247
	word32 s5_248
	word32 s6_249
	word32 s7_250
	word32 s8_251
	word32 s0_154 = dbg_test_print(0x23075D78<32>, dwArg0178, out s1_155, out a2_243, out a5_152, out a6_244, out s2_245, out s3_246, out s4_247, out s5_248, out s6_249, out s7_250, out s8_251)
	s1Out = s1_155
	a5Out = a5_152
	return s0_154
pmkCacheGeneratePSK_exit:


void prepare_key(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      RC4_Encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
prepare_key_entry:
l23011FCC:
	word32 a5_3 = 0<32>
l23011FD2:
	Mem8[a2 + a5_3:byte] = SLICE(a5_3, byte, 0)
	a5_3 = a5_3 + 1<32>
	branch a5_3 != 256<i32> l23011FD2
l23011FE0:
	Mem11[a2 + 256<i32>:byte] = 0<8>
	Mem12[a2 + 257<i32>:byte] = 0<8>
	word32 a3_13 = a2
	word32 a7_15 = 0<32>
	word32 a4_16 = 0<32>
l23011FF2:
	word32 a6_25 = CONVERT(Mem24[a3_13:byte], byte, word32)
	word32 a5_30 = CONVERT(Mem24[a0 + a4_16:byte], byte, word32) + a6_25 + a7_15
	word32 a5_34 = (a5_30 & 255<i32>) + a2
	a3_13 = a3_13 + 1<32>
	Mem36[a3_13 + 4095<i32>:byte] = SLICE(CONVERT(Mem24[a5_34:byte], byte, word32), byte, 0)
	Mem37[a5_34:byte] = SLICE(a6_25, byte, 0)
	a7_15 = a5_30 & 255<i32>
	a4_16 = (a4_16 + 1<32> | a1) & 255<i32>
	branch a2 + 256<i32> != a3_13 l23011FF2
l23012028:
	return
prepare_key_exit:


word32 rc4(word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      RC4_Encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a4
// Trashed: a2 a4 a5 a6 a7 t1 t3 t4
// Preserved: sp
rc4_entry:
l2301202A:
	word32 t3_5 = CONVERT(Mem0[a3 + 256<i32>:byte], byte, word32)
	word32 a4_21 = CONVERT(Mem0[a3 + 257<i32>:byte], byte, word32)
	word32 a5_26 = 0<32>
l23012034:
	word32 a6_10 = t3_5 + a5_26
	branch a5_26 < a2 l23012058
l23012058:
	word32 a6_16 = ((a6_10 & 255<i32>) + 1<32> & 255<i32>) + a3
	word32 t1_18 = CONVERT(Mem17[a6_16:byte], byte, word32)
	word32 a4_22 = a4_21 + t1_18
	word32 a7_24 = a3 + (a4_22 & 255<i32>)
	Mem27[a6_16:byte] = SLICE(CONVERT(Mem17[a7_24:byte], byte, word32), byte, 0)
	Mem28[a7_24:byte] = SLICE(t1_18, byte, 0)
	a4_21 = a4_22 & 255<i32>
	a5_26 = CONVERT(SLICE(a5_26 + 1<32>, word16, 0), word16, int32)
l23012040:
	word32 a7_29 = 0<32>
l23012042:
	word32 a5_32 = (a6_10 & 255<i32>) + a7_29
	branch a7_29 < a1 l23012082
l23012082:
	word32 a5_38 = ((a5_32 & 255<i32>) + 1<32> & 255<i32>) + a3
	word32 a2_40 = CONVERT(Mem39[a5_38:byte], byte, word32)
	word32 a4_42 = a4_21 + a2_40
	word32 t1_44 = a3 + (a4_42 & 255<i32>)
	Mem46[a5_38:byte] = SLICE(CONVERT(Mem39[t1_44:byte], byte, word32), byte, 0)
	Mem47[t1_44:byte] = SLICE(a2_40, byte, 0)
	word32 t1_50 = a0 + a7_29
	Mem60[t1_50:byte] = SLICE(CONVERT(Mem47[(a2_40 + CONVERT(Mem47[a5_38:byte], byte, word32) & 255<i32>) + a3:byte], byte, word32) ^ CONVERT(Mem47[t1_50:byte], byte, word32), byte, 0)
	a4_21 = a4_42 & 255<i32>
	a7_29 = CONVERT(SLICE(a7_29 + 1<32>, word16, 0), word16, int32)
l2301204E:
	Mem61[a3 + 256<i32>:byte] = SLICE(a5_32 & 255<i32>, byte, 0)
	Mem62[a3 + 257<i32>:byte] = SLICE(a4_21, byte, 0)
	return a4_21
rc4_exit:


word32 RC4_Encrypt(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_ApplyKEK
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
RC4_Encrypt_entry:
l230120CC:
	branch a2 > -16<i32> l23012122
l230120E8:
	word32 a1_136
	word32 a2_137
	word32 a3_138
	word32 a4_139
	word32 a5_140
	word32 a6_141
	word32 a7_142
	memcpy(fp + -64<i32>, a1, a2, out a1_136, out a2_137, out a3_138, out a4_139, out a5_140, out a6_141, out a7_142)
	word32 a1_143
	word32 a2_144
	word32 a3_145
	word32 a4_146
	word32 a5_147
	word32 a6_148
	word32 a7_149
	memcpy(fp + -64<i32> + a2, a0, 0x10<32>, out a1_143, out a2_144, out a3_145, out a4_146, out a5_147, out a6_148, out a7_149)
	prepare_key(fp + -64<i32>, a2 + 16<i32>, 0x420116D8<32>)
	a3 = 0x420116D8<32>
	a4 = rc4(a3, a4, a5, 0x420116D8<32>)
l23012122:
	a4Out = a4
	return a3
RC4_Encrypt_exit:


word32 sha256_compress(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha256_vector
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
sha256_compress_entry:
l23012134:
	word32 a6_253
	word32 a7_254
	word32 a1_248
	word32 a2_249
	word32 a5_252
	word32 a4_251
	word32 a3_250
	memcpy(a2 + 256<i32>, a0 + 8<i32>, 32<i32>, out a1_248, out a2_249, out a3_250, out a4_251, out a5_252, out a6_253, out a7_254)
	word32 s2_11 = a2 + 256<i32>
	word32 s4_20 = a1
	word32 a3_41 = a2
l23012162:
	word32 a5_48 = CONVERT(Mem43[s4_20 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem43[s4_20:byte], byte, word32)
	s4_20 = s4_20 + 4<32>
	a3_41 = a3_41 + 4<32>
	Mem62[a3_41 + 4092<i32>:word32] = (CONVERT(SLICE(a5_48 >>u 8<i32> | a5_48 << 8<u32>, word16, 0), word16, word32) << 8<i32> | CONVERT(Mem43[s4_20 + -2<i32>:byte], byte, word32)) << 8<i32> | CONVERT(Mem43[s4_20 + -1<i32>:byte], byte, word32)
	branch s4_20 != a1 + 64<i32> l23012162
l23012196:
	word32 a4_65 = a2 + 64<i32>
l2301219A:
	word32 a3_68 = Mem67[a4_65 + -8<i32>:int32]
	a4_65 = a4_65 + 4<32>
	word32 a2_69 = Mem67[a4_65 + -60<i32>:int32]
	Mem94[a4_65 + 4092<i32>:word32] = ((a3_68 << 0xF<u32> | a3_68 >>u 0x11<u32>) ^ (a3_68 << 0xD<u32> | a3_68 >>u 0x13<u32>) ^ a3_68 >>u 10<i32>) + (Mem67[a4_65 + -32<i32>:int32] + Mem67[a4_65 + -68<i32>:int32]) + (((a2_69 >>u 7<u32> | a2_69 << 0x19<u32>) ^ (a2_69 << 0xE<u32> | a2_69 >>u 0x12<u32>)) ^ a2_69 >>u 3<i32>)
	branch a2 + 256<i32> != a4_65 l2301219A
l230121EE:
	word32 a1_125 = 0<32>
l230121FC:
	word32 a2_102 = Mem101[a2 + 272<i32>:int32]
	word32 t3_103 = Mem101[a2 + 280<i32>:int32]
	word32 t4_104 = Mem101[a2 + 276<i32>:int32]
	word32 a3_121 = Mem101[a2 + 256<i32>:int32]
	word32 t1_122 = Mem101[a2 + 268<i32>:int32]
	word32 a7_128 = Mem101[a2 + 260<i32>:int32]
	word32 t5_129 = Mem101[a2 + 264<i32>:int32]
	word32 a5_130 = ((a2_102 >>u 6<u32> | a2_102 << 0x1A<u32>) ^ (a2_102 >>u 0xB<u32> | a2_102 << 0x15<u32>) ^ (a2_102 << 7<u32> | a2_102 >>u 0x19<u32>)) + ((t3_103 ^ t4_104) & a2_102 ^ t3_103) + Mem101[a2 + 284<i32>:int32] + Mem101[a1_125 + 0x23076448<32>:word32]
	word32 a4_132 = Mem101[a2 + a1_125:word32]
	Mem133[a2 + 276<i32>:word32] = a2_102
	word32 a5_135 = a5_130 + a4_132
	Mem139[a2 + 272<i32>:word32] = t1_122 + a5_135
	Mem148[a2 + 260<i32>:word32] = a3_121
	Mem155[a2 + 284<i32>:word32] = t3_103
	Mem156[a2 + 280<i32>:word32] = t4_104
	Mem157[a2 + 268<i32>:word32] = t5_129
	Mem158[a2 + 264<i32>:word32] = a7_128
	word32 a5_154 = a5_135 + ((((a3_121 >>u 2<u32> | a3_121 << 0x1E<u32>) ^ (a3_121 >>u 0xD<u32> | a3_121 << 0x13<u32>)) ^ (a3_121 << 0xA<u32> | a3_121 >>u 0x16<u32>)) + (a3_121 & a7_128 | (a3_121 | a7_128) & t5_129))
	Mem159[a2 + 256<i32>:word32] = a5_154
	a1_125 = a1_125 + 4<32>
	branch a1_125 != 256<i32> l230121FC
l230122C0:
l230122C4:
	word32 s1_168 = Mem167[a5_154:word32]
	word32 a4_170 = Mem167[s2_11:int32]
	a5_154 = a5_154 + a4_170
	Mem174[s1_168 + 0x1000<32>:word32] = a5_154
	s2_11 = s2_11 + 4<32>
	branch a0 + 40<i32> != s1_168 + 4<32> l230122C4
l230122D8:
	s1Out = s1_168 + 4<32>
	a0Out = 0<32>
	a2Out = dwArg48
	a4Out = a4_170
	a5Out = a5_154
	s2Out = s2_11
	s3Out = a0 + 40<i32>
	s4Out = dwArg04
	s8Out = s4
	return s1
sha256_compress_exit:


word32 sha256_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha256_vector
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5 a6
// Preserved: sp
sha256_init_entry:
l230122EA:
	Mem5[0<32>:word32] = a0
	Mem8[0x6A09E66F<32>:word32] = a0
	Mem11[0xBB67AE91<32>:word32] = a0
	Mem14[0x3C6EF382<32>:word32] = a0
	Mem17[0xA54FF54E<32>:word32] = a0
	Mem20[0x510E5297<32>:word32] = a0
	Mem23[0x9B0568A8<32>:word32] = a0
	Mem26[0x1F83D9CB<32>:word32] = a0
	Mem30[a0 + 40<i32>:word32] = 0<32>
	Mem31[a0 + 4<i32>:word32] = 0<32>
	Mem32[0x5BE0CD3D<32>:word32] = a0
	return 0x5BE0CD19<32>
sha256_init_exit:


word32 sha256_vector(word32 s1, word32 a0, word32 a2, word32 a4, word32 dwArg74, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hmac_sha256_vector
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] s1:[0..31] Stack +0074:[0..31] Stack +010C:[0..31]
// LiveOut: a6 ra s0 s1 s2 s3 s4 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sha256_vector_entry:
l2301234A:
	word32 a0_112 = a4
	word32 s2_122 = a3
	word32 s4_108 = a4 + 112<i32>
	word32 a5_103 = sha256_init(a4)
	word32 s8_125 = 0<32>
	a4_116 = a4
l2301238A:
	word32 a4_116
	branch s8_125 != a0 << 2<i32> l2301247E
l2301247E:
	a2 = dwArg74
	s3 = Mem50[a4_116 + s8_125:int32]
	branch a5_103 <=u 64<i32> l230124C4
l230124C4:
	word32 s0_64 = Mem63[a0_112 + 40<i32>:word32]
	branch s1 != 0<32> l23012496
l23012496:
	branch a0_112 != 0<32> l230124CA
l23012498:
	branch s1 <=u 63<i32> l230124CA
l230124CA:
	word32 s11_70 = 64<i32> - a0_112
	branch s1 >=u s11_70 l230124D4
l230124D2:
	s11_70 = s1
l230124D4:
	a0_112 = a0_112 + (a4 + 44<i32>)
	word32 a5_85
	word32 a1_611
	word32 a3_612
	word32 a6_613
	word32 a7_614
	memcpy(a0_112, s3, s11_70, out a1_611, out a2, out a3_612, out a4_116, out a5_85, out a6_613, out a7_614)
	word32 s0_99 = Mem63[a5_85 + 40<i32>:word32]
	a5_103 = a5_85 + s11_70
	Mem104[a5_103 + 40<i32>:word32] = s0_99
	s3 = s3 + s11_70
	s1 = s1 - s11_70
	branch a5_103 != 64<i32> l230124C4
l230124EE:
	sha256_compress(s0_99, a4 + 44<i32>, s4_108, out s1, out a0_112, out a2, out a4_116, out a5_103, out s2_122, out s3, out s4_108, out s8_125)
	branch a0_112 < 0<32> l23012492
l230124FC:
	word32 s0_133 = Mem104[a2 + 4<i32>:word32]
	Mem134[s0_133 + 40<i32>:word32] = 0<32>
	Mem138[a5_103 + 512<i32>:word32] = s0_133
	a5_103 = CONVERT(a5_103 + 512<i32> <u a5_103, bool, word32) + a2
	Mem139[a5_103 + 4<i32>:word32] = s0_133
l2301249C:
	sha256_compress(s0_64, s3, s4_108, out s1, out a0_112, out a2, out a4_116, out a5_103, out s2_122, out s3, out s4_108, out s8_125)
	branch a0_112 < 0<32> l23012492
l230124AA:
	word32 s0_164 = Mem63[a2 + 4<i32>:word32]
	Mem169[a5_103 + 512<i32>:word32] = s0_164
	a5_103 = CONVERT(a5_103 + 512<i32> <u a5_103, bool, word32) + a2
	Mem170[a5_103 + 4<i32>:word32] = s0_164
	s3 = s3 + 64<i32>
	s1 = s1 + -64<i32>
l230124C8:
l23012492:
	s8_125 = s8_125 + 4<32>
l23012390:
	branch a5_103 >u 63<i32> l23012460
l23012398:
	word32 a3_183 = a5_103 << 3<u32>
	word32 s0_182 = Mem50[a2 + 4<i32>:word32]
	Mem187[CONVERT(a3_183 <u 0<i32>, bool, word32) + a2 + 4<i32>:word32] = s0_182
	Mem189[a3_183 + 63<i32>:word32] = s0_182
	word32 a4_188 = a5_103 + 1<i32>
	Mem191[a4_188 + 40<i32>:word32] = s0_182
	Mem193[a5_103 + s0_182 + 44<i32>:byte] = 0x80<8>
	word32 a5_194 = 56<i32>
	branch a4_188 <=u 56<i32> l230123DE
l230123C4:
l230123C8:
	word32 s0_198 = Mem197[a5_194 + 40<i32>:word32]
	branch a5_194 <=u 63<i32> l23012514
l23012514:
	Mem201[a5_194 + 41<i32>:word32] = s0_198
	a5_194 = a5_194 + s0_198
	Mem203[a5_194 + 44<i32>:byte] = 0<8>
l230123CE:
	word32 a2_599
	word32 s1_597
	word32 a4_600
	word32 s2_601
	word32 s3_602
	word32 a0_598
	word32 s8_603
	Mem230[sha256_compress(s0_198, s0_198 + 44<i32>, s4_108, out s1_597, out a0_598, out a2_599, out a4_600, out a5_194, out s2_601, out s3_602, out s4_108, out s8_603) + 40<i32>:word32] = 0<32>
l230123DE:
l230123E2:
	word32 s0_234 = Mem233[a5_194 + 40<i32>:word32]
	branch a5_194 <=u 55<i32> l23012522
l23012522:
	Mem237[a5_194 + 41<i32>:word32] = s0_234
	a5_194 = a5_194 + s0_234
	Mem239[a5_194 + 44<i32>:byte] = 0<8>
l230123E8:
	word32 s0_240 = Mem233[a5_194:word32]
	Mem244[s0_240 + 104<i32>:byte] = SLICE(a5_194 >>u 0x18<u32>, byte, 0)
	Mem246[s0_240 + 105<i32>:byte] = SLICE(a5_194 >>u 0x10<u32>, byte, 0)
	Mem247[s0_240 + 107<i32>:byte] = SLICE(a5_194, byte, 0)
	word32 s0_249 = Mem247[a5_194 + 4<i32>:word32]
	Mem250[s0_249 + 106<i32>:byte] = SLICE(a5_194 >>u 8<u32>, byte, 0)
	Mem255[s0_249 + 100<i32>:byte] = SLICE(a5_194 >>u 0x18<u32>, byte, 0)
	Mem257[s0_249 + 101<i32>:byte] = SLICE(a5_194 >>u 0x10<u32>, byte, 0)
	Mem259[s0_249 + 103<i32>:byte] = SLICE(a5_194, byte, 0)
	Mem260[s0_249 + 102<i32>:byte] = SLICE(a5_194 >>u 8<u32>, byte, 0)
	word32 s8_610
	word32 a0_605
	word32 a2_606
	word32 a4_607
	word32 s1_604
	word32 a5_608
	word32 s4_609
	word32 s0_269 = sha256_compress(s0_240, s0_240 + 44<i32>, s4_108, out s1_604, out a0_605, out a2_606, out a4_607, out a5_608, out s2_122, out s3, out s4_609, out s8_610)
	word32 a5_281 = s0_269 + 8<i32>
l23012438:
	a5_281 = a5_281 + 4<32>
	word32 a4_286 = Mem285[a5_281 + -4<i32>:int32]
	s2_122 = s2_122 + 4<32>
	Mem290[s2_122 + 4092<i32>:byte] = SLICE(a4_286 >>u 0x18<u32>, byte, 0)
	Mem292[s2_122 + 4093<i32>:byte] = SLICE(a4_286 >>u 0x10<u32>, byte, 0)
	Mem294[s2_122 + 4094<i32>:byte] = SLICE(a4_286 >>u 8<u32>, byte, 0)
	Mem295[s2_122 + 4095<i32>:byte] = SLICE(a4_286, byte, 0)
	branch a5_281 != s0_269 + 40<i32> l23012438
l23012460:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a6Out = dwArg0188
	s2Out = s2_122
	s3Out = s3
	s4Out = dwArg0168
	s6Out = 64<i32>
	s7Out = a4 + 44<i32>
	return dwLoc08
sha256_vector_exit:


word32 hmac_sha256_vector(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sha256_crypto_kdf
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
hmac_sha256_vector_entry:
l23012530:
	word32 s1_145 = a5
	word32 dwLoc01DC_285 = a0
	word32 s2_121 = a2
	word32 s3_274 = a3
	word32 s4_276 = a4
	branch a1 <=u 64<i32> l23012580
l2301256A:
	word32 s0_48
	word32 s7_360
	word32 a6_358
	word32 s6_359
	ra = sha256_vector(a5, 1<32>, fp + -600<i32>, fp + -436<i32>, dwLoc01EC, dwLoc0154, out s0_48, out s1_145, out a6_358, out s2_121, out s3_274, out s4_276, out s6_359, out s7_360)
	dwLoc01DC_285 = s0_48
l23012580:
	word32 a1_76
	word32 a3_348
	word32 a4_349
	word32 a5_350
	word32 t1_345
	word32 a0_346
	word32 a2_347
	memset(ra, fp + -532<i32>, 0<32>, 64<i32>, out t1_345, out a0_346, out a1_76, out a2_347, out a3_348, out a4_349, out a5_350)
	word32 a6_356
	word32 a7_357
	word32 a2_352
	word32 a3_353
	word32 a4_354
	word32 a5_355
	word32 a1_351
	memcpy(fp + -532<i32>, a1_76, dwLoc01FC, out a1_351, out a2_352, out a3_353, out a4_354, out a5_355, out a6_356, out a7_357)
	word32 a4_102 = fp + -532<i32>
l230125A0:
	a4_102 = a4_102 + 4<32>
	Mem110[a4_102 + 4092<i32>:word32] = Mem106[a4_102 + -4<i32>:int32] ^ 0x36363636<32>
	branch a4_102 != dwLoc01DC_285 l230125A0
l230125B0:
	word32 a2_115 = fp + -580<i32>
	word32 a3_117 = fp + -556<i32>
	word32 a4_119 = 0<32>
	word32 a5_122 = s2_121 << 2<u32>
l230125C8:
	a2_115 = a2_115 + 4<32>
	a3_117 = a3_117 + 4<32>
	branch a4_119 != a5_122 l23012656
l23012656:
	Mem135[Mem133[s3_274 + a4_119:word32]:word32] = a2_115
	Mem140[Mem135[s4_276 + a4_119:word32]:word32] = a3_117
	a4_119 = a4_119 + 4<32>
l230125D0:
	word32 s1_163
	word32 s6_170
	word32 a1_185
	word32 a5_372
	word32 a0_368
	word32 a2_369
	word32 a3_370
	word32 a4_371
	word32 s3_364
	word32 s4_365
	word32 s7_366
	word32 t1_367
	word32 s0_361
	word32 a6_362
	word32 s2_363
	memset(sha256_vector(s1_145, s2_121 + 1<i32>, fp + -556<i32>, fp + -436<i32>, dwLoc01EC, dwLoc0154, out s0_361, out s1_163, out a6_362, out s2_363, out s3_364, out s4_365, out s6_170, out s7_366), fp + -532<i32>, 0<32>, 64<i32>, out t1_367, out a0_368, out a1_185, out a2_369, out a3_370, out a4_371, out a5_372)
	word32 a6_378
	word32 a7_379
	word32 a5_377
	word32 a4_376
	word32 a1_373
	word32 a2_374
	word32 a3_375
	memcpy(fp + -532<i32>, a1_185, dwLoc01FC, out a1_373, out a2_374, out a3_375, out a4_376, out a5_377, out a6_378, out a7_379)
	word32 a4_210 = fp + -532<i32>
l23012600:
	a4_210 = a4_210 + 4<32>
	Mem218[a4_210 + 4092<i32>:word32] = Mem214[a4_210 + -4<i32>:int32] ^ 0x5C5C5C5C<32>
	branch a4_210 != dwLoc01DC_285 l23012600
l23012610:
	word32 s6_385
	word32 a6_242
	word32 s7_254
	word32 s2_382
	word32 s3_383
	word32 s4_384
	word32 s0_380
	word32 s1_381
	sha256_vector(s1_163, 2<32>, s6_170, fp + -436<i32>, dwLoc01EC, dwLoc0154, out s0_380, out s1_381, out a6_242, out s2_382, out s3_383, out s4_384, out s6_385, out s7_254)
	s7Out = s7_254
	return a6_242
hmac_sha256_vector_exit:


word32 KeyMgmtInit(word32 ra, word32 a0, word32 mstatus, word32 dwArg18, word32 dwArg58, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0158, ptr32 & s1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      InitGroupKey
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a5 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtInit_entry:
l2301266A:
	word32 a5_139
	word32 a4_138
	word32 a0_12 = cm_GetApInfo(a0, out a4_138, out a5_139)
	word32 s0_28
	word32 s4_34
	word32 s1_121
	word32 ra_27 = ROM_InitGTK(ra, a0_12 + 204<i32>, a0_12 + 244<i32>, a0 + 70<i32>, dwLoc08, dwArg58, dwArgA8, dwArgC8, out s0_28, out s1_121, out s4_34)
	word32 a5_116 = 1<32>
	branch Mem9[s0_28 + 184<i32>:int32] != 1<32> l230126BE
l23012694:
	word32 a5_144
	word32 a4_143
	word32 a3_142
	word32 a2_141
	word32 a1_140
	Mem82[pmkCacheGeneratePSK(ra_27, strlen(s0_28 + 24<i32>, out a1_140, out a2_141, out a3_142, out a4_143, out a5_144) & 255<i32>, s4_34, mstatus, dwArg18, dwArg58, dwArg98, dwArgE8, dwArg0108, dwArg0128, dwArg0158, out s1_121, out a5_116) + 184<i32>:word32] = 0<32>
l230126BE:
	s1Out = s1_121
	a5Out = a5_116
	return ra_27
KeyMgmtInit_exit:


word32 PrepDefaultEapolMsg(word32 ra, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg0118, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg1
//      GeneratePWKMsg3
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a4 a5 ra s1 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
PrepDefaultEapolMsg_entry:
l230126C8:
	word32 a4_203
	word32 a5_204
	cm_GetApData(a0, out a4_203, out a5_204)
	word32 a4_28
	word32 a5_205
	cm_GetApInfo(a0, out a4_28, out a5_205)
	word32 a0_36
	word32 s1_206
	word32 a5_113
	word32 a4_170
	word32 s5_120
	word32 ra_176 = GetTxEAPOLBuffer(ra, a3, a4_28, mstatus, s2, dwArg0118, out s1_206, out a0_36, out a4_170, out a5_113, out s5_120)
	word32 s1_116 = a0_36
	branch a0_36 == 0<32> l2301273A
l230126F8:
	word32 t1_207
	word32 a0_208
	word32 a1_209
	word32 a2_210
	word32 a3_211
	word32 a4_212
	word32 a5_213
	ra_176 = memset(ra_176, a0_36, 0<32>, 114<i32>, out t1_207, out a0_208, out a1_209, out a2_210, out a3_211, out a4_212, out a5_213)
	word32 s2_83
	word32 s1_214
	word32 s3_215
	word32 s4_216
	formEAPOLEthHdr(dwArg0118, dwArg0138, out s1_214, out a4_170, out s2_83, out s3_215, out s4_216)
	branch (CONVERT(Mem19[s2_83 + 20<i32>:byte], byte, word32) & 8<32>) != 0<32> l2301272E
l23012726:
l2301272E:
	word32 s3_118
	s1_116 = SetEAPOLKeyDescTypeVersion(dwArg0118, dwArg0138, out a5_113, out s3_118, out s5_120)
	Mem127[s3_118:word32] = a5_113
l2301273A:
	s1Out = s1_116
	a0Out = s1_116
	a4Out = a4_170
	a5Out = a5_113
	s4Out = dwArgF4
	s5Out = s5_120
	return ra_176
PrepDefaultEapolMsg_exit:


word32 GeneratePWKMsg1(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg24, word32 dwArg2C, word32 dwArg48, word32 dwArg68, word32 dwArg88, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GenerateApEapolMsg
// MayUse:  a0:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a4 s1 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
GeneratePWKMsg1_entry:
l2301274C:
	word32 a0_172
	word32 a4_254
	word32 a5_255
	cm_GetApData(a0, out a4_254, out a5_255)
	word32 a5_29
	word32 a0_45
	word32 s4_256
	word32 s5_160
	word32 s1_154
	word32 a4_148
	word32 ra_31 = PrepDefaultEapolMsg(ra, a0, a3, s2, mstatus, dwArgE8, dwArg0108, out s1_154, out a0_45, out a4_148, out a5_29, out s4_256, out s5_160)
	branch a0_45 == 0<32> l230127F2
l230127F2:
	a0_172 = 1<32>
l2301276C:
	Mem54[a5_29 + 0x1D<32>:word32] = Mem15[a5_29 + 28<i32>:word32]
	branch a5_29 != 1<32> l2301277C
l23012776:
	Mem57[a4_148 + 0x21<32>:word32] = Mem54[a4_148 + 32<i32>:word32]
l2301277C:
	word32 a0_70
	word32 s0_79
	word32 s1_80
	word32 a3_257
	word32 a4_258
	word32 s9_259
	word32 s10_260
	word32 ra_78 = supplicantGenerateRand(ra_31, s2, s0, dwArg2C, dwArgD8, dwArg0128, dwArg0148, out s0_79, out s1_80, out a0_70, out a3_257, out a4_258, out s9_259, out s10_260)
	word32 a4_108
	PopulateKeyMsg(a0_70, s0_79 + 20<i32>, 0xFFF800<32>, fp + -24<i32>, s1_80, out a4_108)
	word32 a1_126 = (CONVERT(Mem68[a4_108 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem68[a4_108 + 111<i32>:byte], byte, word32)) + 95<i32> << 16<i32>
	Mem128[a4_108 + 14<i32>:byte] = SLICE(CONVERT(Mem68[s0_79 + 84<i32>:byte], byte, word32), byte, 0)
	Mem130[a4_108 + 15<i32>:byte] = 3<8>
	word32 a5_135 = CONVERT(SLICE(a1_126 >>u 16<i32> << 8<u32> | a1_126 >>u 0x18<32>, word16, 0), word16, word32)
	Mem136[a4_108 + 16<i32>:byte] = SLICE(a5_135, byte, 0)
	Mem138[a4_108 + 17<i32>:byte] = SLICE(a5_135 >>u 8<i32>, byte, 0)
	word32 s3_261
	word32 s7_262
	UpdateEAPOLWcbLenAndTransmit(ra_78, fflags, frm, mstatus, dwLoc08, dwArg24, dwArg2C, dwArg48, dwArg68, dwArg88, dwArg0128, dwArg0148, out s1_154, out a4_148, out s3_261, out s5_160, out s7_262, out s10)
	a0_172 = 0<32>
l230127E6:
	0<32> = dwArg0128
	a0Out = a0_172
	a4Out = a4_148
	s5Out = s5_160
	s10Out = s10
	return s1_154
GeneratePWKMsg1_exit:


word32 GeneratePWKMsg3(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg24, word32 dwArg2C, word32 dwArg48, word32 dwArg68, word32 dwArg88, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GenerateApEapolMsg
// MayUse:  a0:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a4 s1 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
GeneratePWKMsg3_entry:
l230127F6:
	word32 a0_272
	word32 s4_34
	word32 a0_43
	word32 a5_508
	word32 s5_184
	word32 s1_254
	word32 a4_248
	word32 ra_182 = PrepDefaultEapolMsg(ra, a0, a3, s2, mstatus, dwArgE8, dwArg0108, out s1_254, out a0_43, out a4_248, out a5_508, out s4_34, out s5_184)
	branch a0_43 == 0<32> l23012890
l23012810:
	word32 a4_509
	word32 a5_510
	cm_GetApData(s4_34, out a4_509, out a5_510)
	word32 a5_57
	word32 a4_56
	word32 a0_55 = cm_GetApInfo(s4_34, out a4_56, out a5_57)
	word32 s0_58 = Mem18[a5_57 + 28<i32>:word32]
	Mem61[a5_57 + 0x1D<32>:word32] = s0_58
	branch a5_57 != 1<32> l23012830
l2301282A:
	s0_58 = Mem61[a4_56 + 32<i32>:word32]
	Mem64[a4_56 + 0x21<32>:word32] = s0_58
	a4_56 = a4_56 + 1<32>
l23012830:
	word32 s0_76 = Mem70[a4_56 + 32<i32>:word32]
	word32 a4_511
	word32 a0_89 = PopulateKeyMsg(a0_55, s0_76 + 20<i32>, CONVERT(SLICE(CONVERT(Mem66[s0_58 + 18<i32>:uint16], uint16, word32) << 10<i32> & 0xF8000000<32> | 0xFFF880<32>, word16, 0), word16, word32), fp + -40<i32>, s4_34 + 164<i32>, out a4_511)
	word32 a5_103 = CONVERT(Mem82[s0_76 + 18<i32>:uint16], uint16, word32)
	word32 a3_104 = 0<32>
	branch (a5_103 & 8<i32>) != 0<32> l23012876
l23012868:
	branch (a5_103 & 32<i32>) == 0<32> l23012876
l2301286E:
	a3_104 = 0x4201D0F8<32>
l23012876:
	word32 a4_121
	word32 a5_122
	word32 a2_119
	word32 a0_117 = KeyData_UpdateKeyMaterial(a0_89, s0_76 + 18<i32>, 0<32>, a3_104, out a2_119, out a4_121, out a5_122)
	branch a0_117 != 0<32> l23012894
l23012894:
	branch (CONVERT(Mem82[s0_76 + 18<i32>:uint16], uint16, word32) & 32<i32>) == 0<32> l230128B6
l2301289E:
	word32 s0_142
	word32 a0_146
	word32 a3_148
	word32 s1_152
	word32 s3_154
	ra_182 = Encrypt_keyData(prepareKDE(ra_182, a0_117, a0_55 + 204<i32>, a0_55 + 8<i32>, out s0_142, out s1_152, out a0_146, out a3_148, out s3_154), s1_152, a0_146, s0_142 + 68<i32>, s3_154, a3_148, s3_154, mstatus, s2, s0, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out a0_117, out a2_119, out a4_121, out a5_122, out s5_184, out s10)
	branch a0_117 == 0<32> l23012884
l230128B6:
	word32 s3_529
	word32 s7_530
	UpdateEAPOLWcbLenAndTransmit(KeyMgmtSta_PopulateEAPOLLengthMic(ra_182, a4_121, dwArgF8, dwArg0118), fflags, frm, mstatus, dwLoc08, dwArg24, dwArg2C, dwArg48, dwArg68, dwArg88, dwArg0128, dwArg0148, out s1_254, out a4_248, out s3_529, out s5_184, out s7_530, out s10)
	a0_272 = 0<32>
l23012884:
	word32 a2_280
	word32 a5_283
	word32 s1_284
	word32 s0_512
	word32 a0_513
	word32 a1_514
	word32 a3_515
	word32 a4_516
	word32 a6_517
	word32 s4_518
	word32 t3_519
	vPortFree(a0_117, a2_119, a5_122, mstatus, dwArg0128, dwArg0168, out s0_512, out s1_284, out a0_513, out a1_514, out a2_280, out a3_515, out a4_516, out a5_283, out a6_517, out s4_518, out t3_519)
	word32 s0_520
	word32 a0_521
	word32 a1_522
	word32 a2_523
	word32 a3_524
	word32 a5_525
	word32 a6_526
	word32 s4_527
	word32 t3_528
	vPortFree(s1_284, a2_280, a5_283, mstatus, dwArg0128, dwArg0168, out s0_520, out s1_254, out a0_521, out a1_522, out a2_523, out a3_524, out a4_248, out a5_525, out a6_526, out s4_527, out t3_528)
l23012890:
	a0_272 = 1<32>
l230128D4:
	0<32> = dwArg0128
	a0Out = a0_272
	a4Out = a4_248
	s5Out = s5_184
	s10Out = s10
	return s1_254
GeneratePWKMsg3_exit:


word32 ProcessPWKMsg4(word32 ra, word32 s0, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg6C, word32 dwArgB8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg01A4, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessKeyMgmtDataAp
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +006C:[0..31] Stack +00B8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +01A4:[0..31]
// LiveOut: a4 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
ProcessPWKMsg4_entry:
l230128E4:
	word32 a4_173
	word32 a5_174
	cm_GetApData(s0, out a4_173, out a5_174)
	word32 a0_21
	word32 s0_30
	word32 s1_31
	word32 a3_175
	word32 s2_176
	word32 s7_177
	word32 s9_178
	word32 a4_147
	word32 s10_153
	word32 s5_159
	word32 ra_29 = IsEAPOL_MICValid(ra, dwArg0118, dwArg0138, out s0_30, out s1_31, out a0_21, out a3_175, out a4_147, out s2_176, out s5_159, out s7_177, out s9_178, out s10_153)
	branch a0_21 == 0<32> l23012954
l23012954:
l23012908:
	Mem51[s0_30 + 232<i32>:byte] = 1<8>
	Mem53[s0_30 + 233<i32>:byte] = 0<8>
	Mem54[s0_30 + 228<i32>:byte] = 0<8>
	Mem55[s0_30 + 229<i32>:byte] = 0<8>
	Mem56[s0_30 + 230<i32>:byte] = 0<8>
	Mem57[s0_30 + 231<i32>:byte] = 0<8>
	word32 a4_63
	word32 s1_179
	word32 a0_180
	word32 a3_181
	word32 a5_182
	word32 s2_183
	word32 s1_99 = apm_sta_add(add_key_to_mac(ra_29, s1_31, s0_30, 1<32>, dwArg20, dwArg24, dwArg6C, dwArgB8, dwArg0108, dwArg0118, dwArg01A4, out s1_179, out a0_180, out a3_181, out a4_63, out a5_182, out s2_183, out s5_159, out s10_153), a4_63, mstatus, dwLoc08, dwArg28, out a4_147)
	word32 a5_111 = CONVERT(Mem57[s1_99 + 18<i32>:uint16], uint16, word32)
	Mem112[s1_99 + 24<i32>:byte] = 0<8>
	branch (a5_111 & 32<i32>) == 0<32> l23012948
l23012942:
	Mem116[s1_99 + 22<i32>:byte] = 0xA<8>
l23012948:
	0<32> = dwArg38
	s5Out = s5_159
	s10Out = s10_153
	return a4_147
ProcessPWKMsg4_exit:


word32 GenerateApEapolMsg(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg0C, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0178, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessPWKMsg2
//      SendEAPOLMsgUsingBufDesc
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0178:[0..31]
// LiveOut: a4 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
GenerateApEapolMsg_entry:
l23012958:
	word32 a5_313
	word32 a4_312
	word32 a0_18 = cm_GetApData(a0, out a4_312, out a5_313)
	word32 s0_25 = a1
	word32 s1_117 = a0_18
	branch (a1 & 1<i32>) != 0<32> l2301297C
l23012976:
	s0_25 = a1 + 0xFFFFFFFF<32> & 255<i32>
l2301297C:
	word32 a4_111 = CONVERT(Mem17[a0_18 + 12<i32>:byte], byte, word32)
	Mem30[a0_18 + 22<i32>:byte] = SLICE(s0_25, byte, 0)
	branch a4_111 == 1<32> l230129A2
l2301298A:
	word32 a0_107
	branch s0_25 != 1<32> l230129B0
l230129B0:
	branch s0_25 != 3<32> l230129BE
l230129BE:
	branch a1 == 0<32> l230129D2
l230129C2:
	word32 a5_45
	word32 a1_49
	word32 t3_322
	word32 s4_321
	word32 a6_320
	word32 a4_319
	word32 a3_318
	word32 a2_317
	word32 a0_316
	word32 s1_315
	word32 s0_314
	vPortFree(a0_18, dwArg44, 3<32>, mstatus, dwArg0138, dwArg0178, out s0_314, out s1_315, out a0_316, out a1_49, out a2_317, out a3_318, out a4_319, out a5_45, out a6_320, out s4_321, out t3_322)
	word32 s0_323
	word32 s1_324
	word32 a0_325
	word32 a1_326
	word32 a2_327
	word32 a3_328
	word32 a5_329
	word32 a6_330
	word32 s4_331
	word32 t3_332
	vPortFree(a1_49, dwArg44, a5_45, mstatus, dwArg0138, dwArg0178, out s0_323, out s1_324, out a0_325, out a1_326, out a2_327, out a3_328, out a4_111, out a5_329, out a6_330, out s4_331, out t3_332)
l230129B6:
	s1_117 = GeneratePWKMsg3(ra, s0_25, a0, a3, a0, fflags, frm, mstatus, dwArg04, dwArg0C, dwArg28, dwArg48, s1, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, out a0_107, out a4_111, out s5, out s10)
l2301298E:
	s1_117 = GeneratePWKMsg1(ra, s0_25, a0, a3, a0, fflags, frm, mstatus, dwArg04, dwArg0C, dwArg28, dwArg48, s1, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out a0_107, out a4_111, out s5, out s10)
l23012994:
	branch a0_107 != 0<32> l230129D2
l23012998:
	Mem141[s1_117 + 22<i32>:byte] = SLICE(CONVERT(Mem30[s1_117 + 22<i32>:byte], byte, word32) + 1<32>, byte, 0)
l230129A2:
	Mem147[s1_117 + 24<i32>:byte] = SLICE(CONVERT(Mem143[s1_117 + 24<i32>:byte], byte, word32) + 1<32>, byte, 0)
l230129D2:
	s5Out = s5
	s10Out = s10
	return a4_111
GenerateApEapolMsg_exit:


word32 ProcessPWKMsg2(word32 ra, word32 s0, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg0C, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0178, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessKeyMgmtDataAp
// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0178:[0..31]
// LiveOut: a4 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ProcessPWKMsg2_entry:
l230129E0:
	word32 a4_194
	word32 a5_195
	cm_GetApData(s0, out a4_194, out a5_195)
	word32 a4_196
	word32 a5_197
	cm_GetApInfo(s0, out a4_196, out a5_197)
	KeyMgmtAp_DerivePTK(ra, s0 + 196<i32>)
	word32 a0_56
	word32 a3_59
	word32 a4_60
	word32 s0_65
	word32 s1_66
	word32 s10_67
	word32 s2_68
	word32 s5_71
	word32 s7_198
	word32 s9_199
	word32 ra_64 = IsEAPOL_MICValid(ra, dwArgF8, dwArg0118, out s0_65, out s1_66, out a0_56, out a3_59, out a4_60, out s2_68, out s5_71, out s7_198, out s9_199, out s10_67)
	branch a0_56 == 0<32> l23012A54
l23012A54:
	0<32> = dwArg0128
	s5Out = s5_71
	s10Out = s10_67
	return a4_60
l23012A2C:
	Mem90[s2_68 + 24<i32>:byte] = 0<8>
	word32 a5_91 = CONVERT(Mem90[s1_66 + 100<i32>:byte], byte, word32)
	0<32> = dwArg0128
	Mem99[0x4200ECB4<32>:byte] = SLICE(a5_91 + 2<32>, byte, 0)
l23012A50_thunk_GenerateApEapolMsg:
	word32 s10_122
	word32 s5_125
	word32 a4_108 = GenerateApEapolMsg(ra_64, s1_66, s0_65, 3<32>, a3_59, fflags, frm, mstatus, dwArg04, dwArg0C, dwArg28, dwArg44, dwArg48, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0178, out s5_125, out s10_122)
	s5Out = s5_125
	s10Out = s10_122
	return a4_108
ProcessPWKMsg2_exit:


void SendEAPOLMsgUsingBufDesc(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArg28, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_sta_add_cfm_handler
// MayUse:  a0:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
SendEAPOLMsgUsingBufDesc_entry:
l23012A64:
	word32 a4_126
	word32 a5_127
	word32 a1_15 = CONVERT(Mem9[cm_GetApData(a0, out a4_126, out a5_127) + 22<i32>:byte], byte, word32)
	branch (a1_15 & 1<i32>) == 0<32> l23012A86
l23012A7E:
	word32 s5_128
	word32 s10_129
	GenerateApEapolMsg(ra, s1, a0, a1_15, a3, fflags, frm, mstatus, dwLoc1C, s0, dwArg08, dwArg24, dwArg28, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0158, out s5_128, out s10_129)
l23012A86:
	return
SendEAPOLMsgUsingBufDesc_exit:


word32 ProcessKeyMgmtDataAp(word32 ra, word32 s0, word32 a0, word32 fflags, word32 frm, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg4C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0184, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessEAPoLPkt
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0184:[0..31]
// LiveOut: a4 s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ProcessKeyMgmtDataAp_entry:
l23012A8E:
	word32 a5_256
	word32 a4_119
	cm_GetApData(Mem11[a0:word32], out a4_119, out a5_256)
	word32 s2_18 = Mem11[a0 + 8<i32>:int32]
	branch (CONVERT(Mem11[s2_18 + 5<i32>:byte], byte, word32) & 4<32>) == 0<32> l23012AB8
l23012AB8:
	word32 a7_263
	word32 a6_262
	word32 a5_261
	word32 a4_260
	word32 a3_259
	word32 a2_258
	word32 a1_257
	memcpy(fp + 0xFFFFFFE8<32>, s2_18 + 9<i32>, 4<32>, out a1_257, out a2_258, out a3_259, out a4_260, out a5_261, out a6_262, out a7_263)
	word32 a5_42
	word32 a1_264
	word32 a2_265
	word32 a3_266
	word32 a4_267
	word32 a6_268
	word32 a7_269
	memcpy(fp + 0xFFFFFFEC<32>, s2_18 + 13<i32>, 4<32>, out a1_264, out a2_265, out a3_266, out a4_267, out a5_42, out a6_268, out a7_269)
	a4_119 = (a5_42 >>u 8<u32> & 0xFFFFF00<32>) + ((a5_42 << 8<u32> & 0xFF0000<32>) + ((a5_42 << 0x18<u32>) + (a5_42 >>u 0x18<u32>)))
	branch a4_119 != 0x10000000<32> l23012AAA
l23012AFE:
	a4_119 = 0x10<32>
	word32 s1_78 = Mem11[0x2C<32>:word32]
	branch (dwArgC4 & 0x100000<32>) != 0<32> l23012AAA
l23012B1E:
	word32 a5_79 = CONVERT(Mem11[s1_78 + 22<i32>:byte], byte, word32)
	branch a5_79 != 2<32> l23012B30
l23012B30:
	a4_119 = 4<32>
	branch a5_79 != 4<32> l23012AAA
l23012B36:
	a4_119 = ProcessPWKMsg4(ra, dwArgC4, mstatus, dwArg00, dwArg04, dwArg08, dwArg18, dwArg4C, dwArg98, dwArgE8, dwArgF8, dwArg0118, dwArg0184, out s5, out s10)
l23012B28:
	a4_119 = ProcessPWKMsg2(ra, dwArgC4, fflags, frm, mstatus, dwLoc1C, s0, dwArg08, dwArg24, dwArg28, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0158, out s5, out s10)
l23012AAA:
l23012AAC:
	s5Out = s5
	s10Out = s10
	return a4_119
ProcessKeyMgmtDataAp_exit:


word32 InitStaKeyInfo(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg74, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_assoc_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0074:[0..31] Stack +0128:[0..31]
// LiveOut: ra s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
InitStaKeyInfo_entry:
l23012B3E:
	word32 a4_88
	word32 a5_89
	word32 a0_23 = cm_GetApData(a0, out a4_88, out a5_89)
	word32 t1_90
	word32 a0_91
	word32 a1_92
	word32 a2_93
	word32 a3_94
	word32 a4_95
	word32 a5_96
	word32 ra_37 = memset(ra, a0_23 + 16<i32>, 0<32>, 72<i32>, out t1_90, out a0_91, out a1_92, out a2_93, out a3_94, out a4_95, out a5_96)
	word32 s1_54
	word32 s4_56
	Mem65[InitKeyMgmtInfo(a0_23 + 16<i32>, a1, a2, dwArg74, out s1_54, out s4_56) + 84<i32>:byte] = 1<8>
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_54
	s4Out = s4_56
	return ra_37
InitStaKeyInfo_exit:


word32 RemoveAPKeyInfo(word32 a0, word32 dwArg0118, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_stop_req_handler
// MayUse:  a0:[0..31] Stack +0118:[0..31]
// LiveOut: a2 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
RemoveAPKeyInfo_entry:
l23012B86:
	word32 a0_5 = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32)
	branch a0_5 == 255<i32> l23012B96
l23012B96:
	s2Out = s2
	return a2
l23012B92:
l23012B92_thunk_mm_sec_machwkey_del:
	word32 a2_9
	word32 s2_16
	word32 a4_62
	word32 s3_63
	word32 s6_64
	mm_sec_machwkey_del(a0_5, dwArg0118, out a2_9, out a4_62, out s2_16, out s3_63, out s6_64)
	s2Out = s2_16
	return a2_9
RemoveAPKeyInfo_exit:


word32 InitGroupKey(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg6C, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgBC, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg01A4, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_req_handler
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +006C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +01A4:[0..31]
// LiveOut: a4 ra s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
InitGroupKey_entry:
l23012B98:
	word32 a5_180
	word32 a4_179
	word32 a0_12 = cm_GetApInfo(a0, out a4_179, out a5_180)
	Mem16[a0_12 + 276<i32>:word32] = 0<32>
	Mem17[a0_12 + 280<i32>:word32] = 0<32>
	word32 a5_25
	word32 s1_30
	word32 ra_28 = KeyMgmtInit(ra, a0, mstatus, dwArg08, dwArg48, dwArg88, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0148, out s1_30, out a5_25)
	word32 s0_48 = Mem17[a5_25 + 20<i32>:word32]
	branch a5_25 == 0<32> l23012BE8
l23012BB8:
	word32 a5_189
	word32 a4_188
	word32 a3_187
	word32 a1_186
	word32 a0_60 = __udivdi3(a5_25 + 0x1EFFF7CB<32>, CONVERT(a5_25 + 0x1EFFF7CB<32> <u a5_25 + 0x1EFFF848<32>, bool, word32) + (CONVERT(a5_25 <u 0x1EFFF848<32>, bool, word32) + 0xFFFFFFFF<32>), CONVERT(Mem17[s0_48 + 166<i32>:uint16], uint16, word32) << 7<i32>, 0<32>, out a1_186, out a3_187, out a4_188, out a5_189)
	Mem73[s0_48 + 276<i32>:word32] = a0_60 + 1<32>
	Mem74[s0_48 + 280<i32>:word32] = a0_60 + 1<32>
l23012BE8:
	word32 a0_81
	word32 a3_84
	word32 s1_91
	word32 s10_185
	word32 s5_184
	word32 s2_183
	word32 a5_182
	word32 a4_181
	word32 ra_89 = add_key_to_mac(ra_28, s1_30, s1_30, 0<32>, dwArg20, dwArg24, dwArg6C, dwArgB8, dwArg0108, dwArg0118, dwArg01A4, out s1_91, out a0_81, out a3_84, out a4_181, out a5_182, out s2_183, out s5_184, out s10_185)
	Mem110[s1_91 + 3<i32>:byte] = SLICE(a0_81, byte, 0)
l23012C06_thunk_printf:
	word32 a4_123
	word32 s2_129
	word32 s4_131
	word32 a0_191
	word32 s1_190
	word32 a1_192
	word32 a2_193
	word32 a3_194
	word32 a5_195
	word32 a7_196
	word32 s3_197
	word32 s5_198
	word32 s6_199
	word32 s7_200
	word32 s8_201
	word32 s9_202
	word32 s10_203
	word32 s11_204
	word32 t4_205
	word32 ra_125 = printf(ra_89, 0x23076548<32>, a3_84, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_190, out a0_191, out a1_192, out a2_193, out a3_194, out a4_123, out a5_195, out a7_196, out s2_129, out s3_197, out s4_131, out s5_198, out s6_199, out s7_200, out s8_201, out s9_202, out s10_203, out s11_204, out t4_205)
	a4Out = a4_123
	s2Out = s2_129
	s4Out = s4_131
	return ra_125
InitGroupKey_exit:


word32 GenerateGTK_internal(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg18, word32 dwArg78, word32 dwArgC8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ROM_InitGTK
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: ra s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
GenerateGTK_internal_entry:
l23012C0A:
	word32 a1_282
	word32 a2_283
	word32 a3_284
	word32 a4_285
	word32 a5_286
	word32 a6_287
	word32 a7_288
	memcpy(fp + -140<i32>, 0x2307655C<32>, 0x14<32>, out a1_282, out a2_283, out a3_284, out a4_285, out a5_286, out a6_287, out a7_288)
	word32 s1_152 = a1
	word32 s0_14 = a0
	branch a0 == 0<32> l23012C9E
l23012C2C:
	branch a1 == 0<32> l23012C9E
l23012C2E:
	word32 a1_289
	word32 a2_290
	word32 a3_291
	word32 a4_292
	word32 a5_293
	word32 a6_294
	word32 a7_295
	memcpy(fp + -56<i32>, a2, 6<32>, out a1_289, out a2_290, out a3_291, out a4_292, out a5_293, out a6_294, out a7_295)
	word32 s1_63
	word32 s0_296
	word32 a0_297
	word32 a3_298
	word32 a4_299
	word32 s9_300
	word32 s10_301
	word32 ra_61 = supplicantGenerateRand(ra, dwLoc80, dwLoc7C, dwLoc34, dwArg78, dwArgC8, dwArgE8, out s0_296, out s1_63, out a0_297, out a3_298, out a4_299, out s9_300, out s10_301)
	word32 a1_302
	word32 a2_303
	word32 a3_304
	word32 a4_305
	word32 a5_306
	word32 a6_307
	word32 a7_308
	memcpy(fp + -50<i32>, s1_63, 32<i32>, out a1_302, out a2_303, out a3_304, out a4_305, out a5_306, out a6_307, out a7_308)
	word32 s0_309
	word32 s1_310
	word32 a0_311
	word32 a3_312
	word32 a4_313
	word32 s9_314
	word32 s10_315
	word32 a1_316
	word32 a2_317
	word32 a3_318
	word32 a4_319
	word32 a5_320
	ra = Bl_PRF(supplicantGenerateRand(ra_61, dwLoc80, dwLoc7C, dwLoc34, dwArg78, dwArgC8, dwArgE8, out s0_309, out s1_310, out a0_311, out a3_312, out a4_313, out s9_314, out s10_315), fp + -88<i32>, 32<i32>, fp + -140<i32>, strlen(fp + -140<i32>, out a1_316, out a2_317, out a3_318, out a4_319, out a5_320), fp + -56<i32>, 38<i32>, fp + -120<i32>, 32<i32>, dwLoc5C, out s0_14, out s1_152, out s4)
	word32 a1_321
	word32 a2_322
	word32 a3_323
	word32 a4_324
	word32 a5_325
	word32 a6_326
	word32 a7_327
	memcpy(s0_14, fp + -120<i32>, 0x10<32>, out a1_321, out a2_322, out a3_323, out a4_324, out a5_325, out a6_326, out a7_327)
	word32 a1_328
	word32 a2_329
	word32 a3_330
	word32 a4_331
	word32 a5_332
	word32 a6_333
	word32 a7_334
	memcpy(s0_14 + 24<i32>, fp + -104<i32>, 8<32>, out a1_328, out a2_329, out a3_330, out a4_331, out a5_332, out a6_333, out a7_334)
	word32 a1_335
	word32 a2_336
	word32 a3_337
	word32 a4_338
	word32 a5_339
	word32 a6_340
	word32 a7_341
	memcpy(s0_14 + 16<i32>, fp + -96<i32>, 8<32>, out a1_335, out a2_336, out a3_337, out a4_338, out a5_339, out a6_340, out a7_341)
l23012C9E:
	s0Out = s0_14
	s1Out = s1_152
	s4Out = s4
	return ra
GenerateGTK_internal_exit:


word32 PopulateKeyMsg(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg1
//      GeneratePWKMsg3
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
PopulateKeyMsg_entry:
l23012CAA:
	branch a0 == 0<32> l23012DB4
l23012CAE:
	branch a1 == 0<32> l23012DB4
l23012DB4:
	a4Out = a4
	return a0
l23012CB2:
	word32 a5_10
	word32 a5_6 = CONVERT(Mem0[a1:byte], byte, word32)
	branch (a5_6 & 4<i32>) == 0<32> l23012D96
l23012D96:
	branch (a5_6 & 8<32>) == 0<32> l23012CC8
l23012D9A:
	Mem9[a0 + 21<i32>:byte] = 0<8>
	a5_10 = 0x10<32>
l23012CBC:
	Mem11[a0 + 21<i32>:byte] = 0<8>
	a5_10 = 32<i32>
l23012CC4:
	Mem15[a0 + 22<i32>:byte] = SLICE(a5_10, byte, 0)
l23012CC8:
	word32 a5_29
	word32 a2_27
	word32 a1_18 = CONVERT(Mem17[a0 + 20<i32>:byte], byte, word32)
	Mem20[a0 + 20<i32>:byte] = SLICE(a1_18 | -128<i32>, byte, 0)
	branch a2 << 0x14<u32> >= 0<32> l23012DA2
l23012DA2:
	a2_27 = a2 >>u 15<i32> << 4<i32>
	a5_29 = CONVERT(Mem20[a0 + 19<i32>:byte], byte, word32) & 236<i32> | 3<i32>
l23012CDC:
	Mem31[a0 + 20<i32>:byte] = SLICE(a1_18 | -120<i32>, byte, 0)
	branch (a2 & 128<i32>) == 0<32> l23012D0E
l23012CEA:
	word32 a5_33 = CONVERT(Mem31[a0 + 19<i32>:byte], byte, word32)
	Mem37[a0 + 20<i32>:byte] = SLICE(a1_18 | -56<i32>, byte, 0)
	a5_29 = (a5_33 | 1<i32>) & 237<i32> | (a2 >>u 15<i32>) << 1<u32>
	a2_27 = a2 >>u 15<i32> << 4<i32>
l23012D08:
	Mem46[a0 + 19<i32>:byte] = SLICE(a2_27 | a5_29, byte, 0)
l23012D0E:
	word32 a6_53 = Mem52[a3:int32]
	word32 a2_67 = (a6_53 << 0x18<u32>) + (a6_53 >>u 0x18<u32>) + (a6_53 << 8<u32> & 0xFF0000<32>) + (a6_53 >>u 8<u32> & 0xFFFFF00<32>)
	Mem69[a0 + 0x1017<32>:byte] = SLICE(a2_67, byte, 0)
	Mem70[a0 + 0x1018<32>:byte] = SLICE(a2_67 >>u 8<u32>, byte, 0)
	Mem73[a0 + 0x1019<32>:byte] = SLICE(a2_67 >>u 0x10<u32>, byte, 0)
	Mem74[a0 + 0x101A<32>:byte] = SLICE(a2_67 >>u 24<i32>, byte, 0)
	word32 a3_75 = Mem74[a3 + 4<i32>:word32]
	word32 a5_84 = (a3_75 << 0x18<u32>) + (a3_75 >>u 0x18<u32>) + (a3_75 << 8<u32> & 0xFF0000<32>) + (a3_75 >>u 8<i32> & 0xFFFFF00<32>)
	Mem86[a0 + 0x101B<32>:byte] = SLICE(a5_84, byte, 0)
	Mem87[a0 + 0x101C<32>:byte] = SLICE(a5_84 >>u 8<u32>, byte, 0)
	Mem90[a0 + 0x101D<32>:byte] = SLICE(a5_84 >>u 0x10<u32>, byte, 0)
	Mem91[a0 + 0x101E<32>:byte] = SLICE(a5_84 >>u 24<i32>, byte, 0)
l23012D92_thunk_memcpy:
	word32 a4_99
	word32 a7_161
	word32 a6_160
	word32 a5_159
	word32 a3_158
	word32 a2_157
	word32 a1_156
	memcpy(a0 + 0x1F<32>, a4, 32<i32>, out a1_156, out a2_157, out a3_158, out a4_99, out a5_159, out a6_160, out a7_161)
	a4Out = a4_99
	return a0 + 0x1F<32>
PopulateKeyMsg_exit:


word32 prepareKDE(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg3
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 a3 ra s0 s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
prepareKDE_entry:
l23012DB6:
	branch a0 == 0<32> l23012EC2
l23012EC2:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a3Out = a3
	s3Out = s3
	return ra
l23012DBA:
	word32 s0_110 = a1
	branch a1 == 0<32> l23012EB4
l23012DCA:
	branch a2 == 0<32> l23012EB4
l23012DCC:
	s1 = a0 + 113<i32> + CONVERT(Mem14[a0 + 111<i32>:byte], byte, word32)
	Mem23[s1:byte] = 0xDD<8>
	Mem25[s1 + 1<i32>:byte] = 0x16<8>
	Mem30[s1 + 2<i32>:byte] = SLICE(CONVERT(Mem25[0x2308DD94<32>:byte], byte, word32), byte, 0)
	word32 a5_32 = CONVERT(Mem30[0x2308DD96<32>:byte], byte, word32)
	Mem34[s1 + 3<i32>:byte] = SLICE(CONVERT(Mem30[0x2308DD95<32>:byte], byte, word32), byte, 0)
	Mem35[s1 + 4<i32>:byte] = SLICE(a5_32, byte, 0)
	Mem37[s1 + 5<i32>:byte] = 1<8>
	Mem42[s1 + 6<i32>:byte] = SLICE(CONVERT(Mem37[s1 + 6<i32>:byte], byte, word32) & 0xFFFFFFFC<32> | 1<i32>, byte, 0)
	word32 a1_232
	word32 a2_233
	word32 a4_234
	word32 a5_235
	word32 a6_236
	word32 a7_237
	memcpy(s1 + 8<i32>, a1, 0x10<32>, out a1_232, out a2_233, out a3, out a4_234, out a5_235, out a6_236, out a7_237)
	s3 = a2
	a0 = s1 + 24<i32>
	branch (CONVERT(Mem42[a2:byte], byte, word32) & 4<32>) == 0<32> l23012E58
l23012E32:
	Mem63[s1 + 1<i32>:byte] = SLICE(CONVERT(Mem42[s1 + 1<i32>:byte], byte, word32) + 0x10<32>, byte, 0)
	word32 a1_238
	word32 a2_239
	word32 a3_240
	word32 a4_241
	word32 a5_242
	word32 a6_243
	word32 a7_244
	memcpy(s1 + 24<i32>, a1 + 24<i32>, 8<32>, out a1_238, out a2_239, out a3_240, out a4_241, out a5_242, out a6_243, out a7_244)
	word32 a1_245
	word32 a2_246
	word32 a4_247
	word32 a5_248
	word32 a6_249
	word32 a7_250
	memcpy(s1 + 32<i32>, a1 + 16<i32>, 8<32>, out a1_245, out a2_246, out a3, out a4_247, out a5_248, out a6_249, out a7_250)
	a0 = s1 + 40<i32>
l23012E58:
	word32 s0_105 = CONVERT(SLICE((CONVERT(Mem95[a0 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem95[a0 + 111<i32>:byte], byte, word32)) + 2<32> + CONVERT(Mem95[s1 + 1<i32>:byte], byte, word32), word16, 0), word16, word32)
	Mem107[a0 + 111<i32>:byte] = SLICE(s0_105, byte, 0)
	Mem109[a0 + 112<i32>:byte] = SLICE(s0_105 >>u 8<u32>, byte, 0)
	word32 s0_108 = 0<32> - s0_105
	s0_110 = s0_108 & 7<32>
	branch (s0_108 & 7<32>) == 0<32> l23012EB4
l23012E84:
	Mem113[a0:byte] = 0xDD<8>
	word32 t1_251
	word32 a1_252
	word32 a2_253
	word32 a4_254
	word32 a5_255
	ra = memset(ra, a0 + 1<32>, 0<32>, (s0_108 & 7<32>) + -1<i32>, out t1_251, out a0, out a1_252, out a2_253, out a3, out a4_254, out a5_255)
	word32 s0_133 = CONVERT(SLICE((s0_108 & 7<32>) + (CONVERT(Mem113[a0 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem113[a0 + 111<i32>:byte], byte, word32)), word16, 0), word16, word32)
	Mem134[a0 + 111<i32>:byte] = SLICE(s0_133, byte, 0)
	Mem136[a0 + 112<i32>:byte] = SLICE(s0_133 >>u 8<i32>, byte, 0)
	s0_110 = s0_133 >>u 8<i32>
l23012EB4:
	s0Out = s0_110
	s1Out = s1
	a0Out = a0
	a3Out = a3
	s3Out = s3
	return ra
prepareKDE_exit:


word32 Encrypt_keyData(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg3
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a4 a5 ra s10 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
Encrypt_keyData_entry:
l23012EC4:
	branch a0 != 0<32> l23012EDA
l23012EDA:
	branch a1 == 0<32> l23012EC6
l23012EDC:
	branch a2 == 0<32> l23012EC6
l23012EDE:
	word32 a5_7 = CONVERT(Mem0[a2:byte], byte, word32)
	branch (a5_7 & 8<i32>) == 0<32> l23012F70
l23012F70:
	a0Out = a5_7 >>u 2<u32> & 1<32>
	a2Out = a2
	a4Out = a5_7 & 8<i32>
	a5Out = a5_7
	s5Out = s5
	s10Out = s10
	return ra
l23012EE8:
	word32 a0_168
	word32 a0_27
	word32 a3_30
	word32 s8_340
	word32 s4_339
	word32 s3_338
	word32 s2_337
	word32 a6_336
	word32 a2_335
	word32 a1_334
	word32 s1_333
	word32 a4_158
	word32 a5_159
	pvPortMalloc(ra, s1, 0xC<32>, a3, a5_7 & 8<i32>, a5_7, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_333, out a0_27, out a1_334, out a2_335, out a3_30, out a4_158, out a5_159, out a6_336, out s2_337, out s3_338, out s4_339, out s8_340)
	branch a0_27 == 0<32> l23012ECA
l23012F02:
	word32 a0_44
	word32 s1_52
	word32 s3_54
	word32 s8_347
	word32 s4_346
	word32 s2_345
	word32 a6_344
	word32 a3_343
	word32 a2_342
	word32 a1_341
	word32 s0_51 = pvPortMalloc(ra, a0_27, 400<i32>, a3_30, a4_158, a5_159, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_52, out a0_44, out a1_341, out a2_342, out a3_343, out a4_158, out a5_159, out a6_344, out s2_345, out s3_54, out s4_346, out s8_347)
	Mem59[a0_44 + 8<i32>:word32] = s1_52
	branch a0_44 == 0<32> l23012ECA
l23012ECA:
	a0_168 = 0<32>
l23012F10:
	word32 a7_354
	word32 a6_353
	word32 a5_352
	word32 a4_351
	word32 a3_350
	word32 a2_349
	word32 a1_348
	memcpy(fp + -48<i32>, s3_54, 0x10<32>, out a1_348, out a2_349, out a3_350, out a4_351, out a5_352, out a6_353, out a7_354)
	word32 s0_98
	word32 s2_101
	word32 s3_102
	ra = BL_AesWrap(fp + -48<i32>, 2<32>, (CONVERT(Mem59[s0_51 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem59[s0_51 + 111<i32>:byte], byte, word32)) >>u 3<i32>, s0_51 + 113<i32>, 0<32>, a0_44, out s0_98, out s2_101, out s3_102, out s5, out s10)
	word32 a2_123 = (CONVERT(Mem59[s0_98 + 112<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem59[s0_98 + 111<i32>:byte], byte, word32)) + 8<32> << 16<i32>
	Mem126[s0_98 + 111<i32>:byte] = SLICE(a2_123 >>u 16<i32>, byte, 0)
	Mem127[s0_98 + 112<i32>:byte] = SLICE(a2_123 >>u 0x18<32>, byte, 0)
	word32 a5_130
	word32 a2_133
	word32 a7_359
	word32 a6_358
	word32 a4_357
	word32 a3_356
	word32 a1_355
	memcpy(s3_102, s2_101, a2_123 >>u 16<i32>, out a1_355, out a2_133, out a3_356, out a4_357, out a5_130, out a6_358, out a7_359)
	word32 a2_143
	word32 a5_146
	word32 s1_147
	word32 a6_365
	word32 s4_366
	word32 t3_367
	word32 a4_364
	word32 a3_363
	word32 a1_362
	word32 a0_361
	word32 s0_360
	vPortFree(s3_102, a2_133, a5_130, mstatus, dwArg0128, dwArg0168, out s0_360, out s1_147, out a0_361, out a1_362, out a2_143, out a3_363, out a4_364, out a5_146, out a6_365, out s4_366, out t3_367)
	word32 s0_368
	word32 s1_369
	word32 a0_370
	word32 a1_371
	word32 a2_372
	word32 a3_373
	word32 a6_374
	word32 s4_375
	word32 t3_376
	vPortFree(s1_147, a2_143, a5_146, mstatus, dwArg0128, dwArg0168, out s0_368, out s1_369, out a0_370, out a1_371, out a2_372, out a3_373, out a4_158, out a5_159, out a6_374, out s4_375, out t3_376)
	a0_168 = 1<32>
l23012ECC:
	0<32> = dwArg0128
	a0Out = a0_168
	a2Out = dwArg0100
	a4Out = a4_158
	a5Out = a5_159
	s5Out = s5
	s10Out = s10
	return ra
l23012EC6:
	a0Out = 0<32>
	a2Out = a2
	a4Out = a4
	a5Out = a5
	s5Out = s5
	s10Out = s10
	return ra
Encrypt_keyData_exit:


void KeyMgmtAp_DerivePTK(word32 ra, word32 a7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ProcessPWKMsg2
// MayUse:  a7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
KeyMgmtAp_DerivePTK_entry:
l23012F78:
	KeyMgmtSta_DeriveKeys(ra)
	word32 a1_94
	word32 a2_95
	word32 a3_96
	word32 a4_97
	word32 a5_98
	word32 a6_99
	word32 a7_100
	memcpy(fp + -24<i32>, a7 + 16<i32>, 8<32>, out a1_94, out a2_95, out a3_96, out a4_97, out a5_98, out a6_99, out a7_100)
	word32 a1_101
	word32 a2_102
	word32 a3_103
	word32 a4_104
	word32 a5_105
	word32 a6_106
	word32 a7_107
	memcpy(a7 + 16<i32>, a7 + 0x18<32>, 8<32>, out a1_101, out a2_102, out a3_103, out a4_104, out a5_105, out a6_106, out a7_107)
	word32 a1_108
	word32 a2_109
	word32 a3_110
	word32 a4_111
	word32 a5_112
	word32 a6_113
	word32 a7_114
	memcpy(a7 + 0x18<32>, fp + -24<i32>, 8<32>, out a1_108, out a2_109, out a3_110, out a4_111, out a5_112, out a6_113, out a7_114)
	return
KeyMgmtAp_DerivePTK_exit:


word32 KeyData_CopyWPAWP2(word32 a0, word32 a1, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyData_UpdateKeyMaterial
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
KeyData_CopyWPAWP2_entry:
l23012FB8:
	branch a1 == 0<32> l23012FE0
l23012FE0:
	a5Out = a5
	return 0<32>
l23012FBA:
	word32 a2_6 = CONVERT(Mem0[a1 + 1<i32>:byte], byte, word32)
	Mem13[a0 + 111<i32>:byte] = SLICE(a2_6 + 2<32>, byte, 0)
	Mem14[a0 + 112<i32>:byte] = SLICE(a2_6 + 2<32> >>u 8<u32>, byte, 0)
	word32 a5_17
	word32 a1_62
	word32 a2_63
	word32 a3_64
	word32 a4_65
	word32 a6_66
	word32 a7_67
	memcpy(a0 + 113<i32>, a1, a2_6 + 2<32>, out a1_62, out a2_63, out a3_64, out a4_65, out a5_17, out a6_66, out a7_67)
	a5Out = a5_17
	return 1<32>
KeyData_CopyWPAWP2_exit:


word32 KeyData_UpdateKeyMaterial(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GeneratePWKMsg3
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
KeyData_UpdateKeyMaterial_entry:
l23012FE4:
	word32 a4_12
	word32 a5_11
	word32 a5_7 = CONVERT(Mem5[a1:byte], byte, word32)
	word32 a1_14 = a2
	branch (a5_7 & 24<i32>) != 0<32> l23012FFE
l23012FF4:
	a5_11 = a5_7 & 32<i32>
	a4_12 = 1<32>
	branch (a5_7 & 32<i32>) == 0<32> l23013006
l23012FFC:
	a1_14 = a3
l23012FFE:
	a4_12 = CONVERT(KeyData_CopyWPAWP2(a0, a1_14, out a5_11) != 0<32>, bool, word32)
l23013006:
	a2Out = dwArg10
	a4Out = a4_12
	a5Out = a5_11
	return a4_12
KeyData_UpdateKeyMaterial_exit:


word32 ROM_InitGTK(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg18, word32 dwArg78, word32 dwArgC8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtInit
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: ra s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ROM_InitGTK_entry:
l2301300E:
	Mem6[a0 + 32<i32>:word32] = 0<32>
	Mem7[0x10000025<32>:word32] = a0
l23013018_thunk_GenerateGTK_internal:
	word32 s0_19
	word32 s1_20
	word32 s4_32
	word32 ra_28 = GenerateGTK_internal(ra, a0, a1, a2, dwArg18, dwArg78, dwArgC8, dwArgE8, out s0_19, out s1_20, out s4_32)
	s0Out = s0_19
	s1Out = s1_20
	s4Out = s4_32
	return ra_28
ROM_InitGTK_exit:


word32 InitKeyMgmtInfo(word32 a0, word32 a1, word32 a2, word32 dwArgA4, ptr32 & s1Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      InitStaKeyInfo
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +00A4:[0..31]
// LiveOut: s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
InitKeyMgmtInfo_entry:
l2301301C:
	Mem14[a0 + 6<i32>:byte] = 1<8>
	word32 a7_106
	word32 a6_105
	word32 a5_104
	word32 a4_103
	word32 a3_102
	word32 a2_101
	word32 a1_100
	memcpy(a0 + 2<32>, a1, 2<32>, out a1_100, out a2_101, out a3_102, out a4_103, out a5_104, out a6_105, out a7_106)
	word32 a4_42
	word32 a3_47
	word32 a5_109
	word32 a6_110
	word32 a7_111
	word32 a2_108
	word32 a1_107
	memcpy(a0 + 4<i32>, a2, 1<32>, out a1_107, out a2_108, out a3_47, out a4_42, out a5_109, out a6_110, out a7_111)
	Mem56[dwArgA4 + 5<i32>:byte] = SLICE(a4_42, byte, 0)
	branch (CONVERT(Mem56[a1:byte], byte, word32) & 32<i32>) == 0<32> l23013060
l2301305A:
	Mem60[dwArgA4:word16] = SLICE(a3_47, word16, 0)
l23013060:
	s1Out = a1
	s4Out = dwArg04
	return dwArgA4
InitKeyMgmtInfo_exit:


word32 cm_GetApInfo(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      add_key_to_mac
//      KeyMgmtInit
//      PrepDefaultEapolMsg
//      GeneratePWKMsg3
//      ProcessPWKMsg2
//      InitGroupKey
//      ap_setpsk
//      InitializeAp
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
cm_GetApInfo_entry:
l2301306C:
	branch a0 == 0<32> l2301307E
l2301306E:
	a4 = CONVERT(Mem0[a0:byte], byte, word32)
	a5 = 2<32>
	branch a4 != 2<32> l2301307C
l2301307C:
	a0 = 0<32>
l2301307E:
	a4Out = a4
	a5Out = a5
	return a0
l23013078:
	word32 a0_8 = Mem0[a0 + 76<i32>:word32]
	a4Out = a4
	a5Out = 2<32>
	return a0_8
cm_GetApInfo_exit:


word32 cm_GetApData(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      PrepDefaultEapolMsg
//      GeneratePWKMsg1
//      GeneratePWKMsg3
//      ProcessPWKMsg4
//      GenerateApEapolMsg
//      ProcessPWKMsg2
//      SendEAPOLMsgUsingBufDesc
//      ProcessKeyMgmtDataAp
//      InitStaKeyInfo
//      cm_AllocResources
//      cm_DeleteConnection
//      InitializeAp
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
cm_GetApData_entry:
l23013080:
	branch a0 == 0<32> l23013094
l23013082:
	a4 = CONVERT(Mem0[a0:byte], byte, word32)
	a5 = 2<32>
	branch a4 != 2<32> l23013092
l23013092:
	a0 = 0<32>
l23013094:
	a4Out = a4
	a5Out = a5
	return a0
l2301308C:
	a4Out = a4
	a5Out = 2<32>
	return a0 + 76<i32>
cm_GetApData_exit:


word32 cm_AllocAPResources(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg7C, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cm_AllocResources
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +007C:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
cm_AllocAPResources_entry:
l23013096:
	word32 a0_38
	word32 a4_15
	word32 a5_16
	cm_GetApData(a0, out a4_15, out a5_16)
	word32 s2_104 = a0
	word32 a0_17 = Mem11[a5_16 + 4<i32>:word32]
	branch a5_16 != 0<32> l230130CE
l230130AA:
	word32 a0_22
	word32 a3_25
	word32 a4_26
	word32 a5_27
	word32 a1_121
	word32 a2_122
	word32 a6_123
	word32 s3_124
	word32 s4_125
	word32 s8_126
	pvPortMalloc(ra, a0_17, 0xC<32>, a3, a4_15, a5_16, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1, out a0_22, out a1_121, out a2_122, out a3_25, out a4_26, out a5_27, out a6_123, out s2_104, out s3_124, out s4_125, out s8_126)
	a0_38 = 1<32>
	branch a0_22 == 0<32> l230130D0
l230130B8:
	word32 a0_40
	word32 a5_45
	word32 a1_127
	word32 a2_128
	word32 a3_129
	word32 a4_130
	word32 a6_131
	word32 s3_132
	word32 s4_133
	word32 s8_134
	word32 s0_47 = pvPortMalloc(ra, s1, 288<i32>, a3_25, a4_26, a5_27, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1, out a0_40, out a1_127, out a2_128, out a3_129, out a4_130, out a5_45, out a6_131, out s2_104, out s3_132, out s4_133, out s8_134)
	Mem55[a0_40 + 8<i32>:word32] = s0_47
	Mem56[s0_47 + 4<i32>:word32] = s1
	Mem59[a5_45:word32] = s1
	InitializeAp(ra, a0)
l230130CE:
	a0_38 = 0<32>
l230130D0:
	0<32> = dwArg38
	a0Out = a0_38
	a2Out = dwArg10
	s2Out = s2_104
	return s1
cm_AllocAPResources_exit:


word32 cm_AllocResources(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg7C, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cm_InitConnection
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +007C:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
cm_AllocResources_entry:
l230130DC:
	branch CONVERT(Mem0[a0:byte], byte, word32) != 2<32> l230130EA
l230130EA:
	a0Out = 0<32>
	a2Out = a2
	s2Out = s2
	return s1
l230130E6:
l230130E6_thunk_cm_AllocAPResources:
	word32 a0_11
	word32 a2_12
	word32 s2_15
	word32 s1_20 = cm_AllocAPResources(ra, a0, a3, mstatus, dwArg30, dwArg34, dwArg38, dwArg7C, dwArg0128, dwArg0168, out a0_11, out a2_12, out s2_15)
	a0Out = a0_11
	a2Out = a2_12
	s2Out = s2_15
	return s1_20
cm_AllocResources_exit:


word32 cm_InitConnection(word32 ra, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg5C, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_req_handler
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +005C:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a0 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
cm_InitConnection_entry:
l230130EE:
	word32 a0_23
	word32 s3_33
	word32 a1_232
	word32 a2_233
	word32 a3_234
	word32 a4_235
	word32 a5_236
	word32 a6_237
	word32 s4_238
	word32 s8_239
	word32 s1_149
	word32 s2_210
	pvPortMalloc(ra, a3, 236<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_149, out a0_23, out a1_232, out a2_233, out a3_234, out a4_235, out a5_236, out a6_237, out s2_210, out s3_33, out s4_238, out s8_239)
	word32 s0_157 = a0_23
	branch a0_23 == 0<32> l2301312E
l2301310C:
	word32 a3_44
	word32 t1_240
	word32 a0_241
	word32 a1_242
	word32 a2_243
	word32 a4_244
	word32 a5_245
	ra = memset(ra, a0_23, 0<32>, 236<i32>, out t1_240, out a0_241, out a1_242, out a2_243, out a3_44, out a4_244, out a5_245)
	Mem51[a0_23:byte] = SLICE(s3_33, byte, 0)
	word32 a0_52
	word32 a2_56
	s1_149 = cm_AllocResources(ra, a0_23, a3_44, mstatus, dwArg10, dwArg14, dwArg18, dwArg5C, dwArg0108, dwArg0148, out a0_52, out a2_56, out s2_210)
	branch a0_52 != 1<32> l2301313E
l2301313E:
	branch s2_210 == 0<32> l2301314E
l23013142:
	word32 a1_270
	word32 a2_271
	word32 a3_272
	word32 a4_273
	word32 a5_274
	word32 a6_275
	word32 a7_276
	memcpy(a0_23 + 64<i32>, s2_210, 6<32>, out a1_270, out a2_271, out a3_272, out a4_273, out a5_274, out a6_275, out a7_276)
l2301314E:
	word32 t1_256
	word32 a0_257
	word32 a1_258
	word32 a2_259
	word32 a3_260
	word32 a4_261
	word32 a5_262
	word32 t1_263
	word32 a0_264
	word32 a1_265
	word32 a2_266
	word32 a3_267
	word32 a4_268
	word32 a5_269
	ra = memset(memset(ra, a0_23 + 48<i32>, 0<32>, 6<32>, out t1_256, out a0_257, out a1_258, out a2_259, out a3_260, out a4_261, out a5_262), a0_23 + 12<i32>, 0<32>, 32<i32>, out t1_263, out a0_264, out a1_265, out a2_266, out a3_267, out a4_268, out a5_269)
	Mem110[a0_23 + 44<i32>:byte] = 0<8>
	s2_210 = a0_23 + 48<i32>
	branch s1_149 == 0<32> l2301312E
l23013170:
	word32 a1_277
	word32 a2_278
	word32 a3_279
	word32 a4_280
	word32 a5_281
	word32 a6_282
	word32 a7_283
	memcpy(a0_23 + 48<i32>, s1_149, 6<32>, out a1_277, out a2_278, out a3_279, out a4_280, out a5_281, out a6_282, out a7_283)
	word32 a1_284
	word32 a2_285
	word32 a3_286
	word32 a4_287
	word32 a5_288
	word32 a6_289
	word32 a7_290
	memcpy(a0_23 + 70<i32>, s1_149, 6<32>, out a1_284, out a2_285, out a3_286, out a4_287, out a5_288, out a6_289, out a7_290)
l23013126:
	word32 s0_246
	word32 a0_247
	word32 a1_248
	word32 a2_249
	word32 a3_250
	word32 a4_251
	word32 a5_252
	word32 a6_253
	word32 s4_254
	word32 t3_255
	vPortFree(a0_23, a2_56, 1<32>, mstatus, dwArg0138, dwArg0178, out s0_246, out s1_149, out a0_247, out a1_248, out a2_249, out a3_250, out a4_251, out a5_252, out a6_253, out s4_254, out t3_255)
	s0_157 = 0<32>
l2301312E:
	s0Out = s0_157
	s1Out = s1_149
	a0Out = s0_157
	s2Out = s2_210
	return ra
cm_InitConnection_exit:


word32 cm_DeleteConnection(word32 a0, word32 a2, word32 mstatus, word32 dwArg10, word32 dwArg0148, word32 dwArg0158, word32 dwArg0188, word32 dwArg0198, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_stop_req_handler
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut: a4 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
cm_DeleteConnection_entry:
l23013188:
	word32 a5_12 = 2<32>
	word32 s1_13 = a0
	branch CONVERT(Mem9[a0:byte], byte, word32) != 2<32> l230131BA
l2301319C:
	word32 a4_86
	cm_GetApData(a0, out a4_86, out a5_12)
	word32 a0_17 = Mem9[a5_12 + 4<i32>:word32]
	branch a5_12 == 0<32> l230131BA
l230131A6:
	word32 a2_22
	word32 a5_25
	word32 a0_28
	word32 a1_89
	word32 s1_88
	word32 s0_87
	word32 a3_90
	word32 a4_91
	word32 a6_92
	word32 s4_93
	word32 t3_94
	vPortFree(a0_17, a2, Mem9[a0_17 + 8<i32>:word32], mstatus, dwArg0148, dwArg0188, out s0_87, out s1_88, out a0_28, out a1_89, out a2_22, out a3_90, out a4_91, out a5_25, out a6_92, out s4_93, out t3_94)
	word32 s0_44
	word32 a0_95
	word32 a1_96
	word32 a2_97
	word32 a3_98
	word32 a4_99
	word32 a6_100
	word32 s4_101
	word32 t3_102
	vPortFree(a0_28, a2_22, a5_25, mstatus, dwArg0148, dwArg0188, out s0_44, out s1_13, out a0_95, out a1_96, out a2_97, out a3_98, out a4_99, out a5_12, out a6_100, out s4_101, out t3_102)
	Mem47[s0_44 + 4<i32>:word32] = 0<32>
	Mem48[s0_44:word32] = 0<32>
l230131BA:
l230131C4_thunk_vPortFree:
	word32 a4_61
	word32 s0_68
	word32 s1_103
	word32 a0_104
	word32 a1_105
	word32 a2_106
	word32 a3_107
	word32 a5_108
	word32 a6_109
	word32 s4_110
	word32 t3_111
	vPortFree(s1_13, dwArg10, a5_12, mstatus, dwArg0158, dwArg0198, out s0_68, out s1_103, out a0_104, out a1_105, out a2_106, out a3_107, out a4_61, out a5_108, out a6_109, out s4_110, out t3_111)
	a4Out = a4_61
	return s0_68
cm_DeleteConnection_exit:


void cm_SetPeerAddr(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_assoc_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
cm_SetPeerAddr_entry:
l230131C8:
	branch a1 == 0<32> l230131E0
l230131D6:
	word32 a1_108
	word32 a2_109
	word32 a3_110
	word32 a4_111
	word32 a5_112
	word32 a6_113
	word32 a7_114
	memcpy(a0 + 48<i32>, a1, 6<32>, out a1_108, out a2_109, out a3_110, out a4_111, out a5_112, out a6_113, out a7_114)
l230131E0:
	branch a2 == 0<32> l230131F6
l230131F6:
	return
l230131E2:
l230131F2_thunk_memcpy:
	word32 a1_115
	word32 a2_116
	word32 a3_117
	word32 a4_118
	word32 a5_119
	word32 a6_120
	word32 a7_121
	memcpy(a0 + 64<i32>, a2, 6<32>, out a1_115, out a2_116, out a3_117, out a4_118, out a5_119, out a6_120, out a7_121)
	return
cm_SetPeerAddr_exit:


word32 cm_SetComData(word32 a0, word32 a1, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_req_handler
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a3 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
cm_SetComData_entry:
l23013200:
	branch a1 == 0<32> l2301323C
l2301323C:
	a3Out = a3
	return s0
l23013202:
	word32 a1_17
	word32 a5_101
	word32 a4_100
	word32 a3_99
	word32 a2_98
	Mem20[a0 + 44<i32>:byte] = SLICE(strlen(a1, out a1_17, out a2_98, out a3_99, out a4_100, out a5_101), byte, 0)
	word32 a3_28
	word32 a7_107
	word32 a6_106
	word32 a5_105
	word32 a4_104
	word32 a2_103
	word32 a1_102
	memcpy(a0 + 12<i32>, a1_17, 32<i32>, out a1_102, out a2_103, out a3_28, out a4_104, out a5_105, out a6_106, out a7_107)
	word32 s0_38 = a0
	word32 a0_36 = CONVERT(Mem20[a0 + 44<i32>:byte], byte, word32)
	branch a0_36 >u 0x1F<32> l23013234
l2301322E:
	s0_38 = a0 + a0_36
	Mem39[s0_38 + 12<i32>:byte] = 0<8>
l23013234:
	a3Out = a3_28
	return s0_38
cm_SetComData_exit:


word32 assert_rec(word32 mstatus, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_rx_duration
//      rxl_mpdu_transfer
//      rxl_timer_int_handler
//      rxl_cntrl_evt
//      txl_payload_handle_backup
//      txl_frame_get
//      rxu_cntrl_frame_handle
//      hal_machw_idle_req
//      hal_machw_gen_handler
//      my_pbuf_free_custom
// MayUse:  mstatus:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a2 a4 a5
// Preserved: sp
assert_rec_entry:
l2301323E:
	branch CONVERT(Mem0[0x4200DCA8<32>:byte], byte, word32) != 1<32> l2301327C
l2301327C:
	a2Out = a2
	a4Out = <invalid>
	a5Out = 1<32>
	return a0
l2301324C:
	__csrrc(mstatus, 8<32>)
	word32 a5_9 = Mem0[0x4201BC58<32>:int32]
	branch a5_9 < 0<32> l23013276
l23013276:
	__csrrs(mstatus, 8<32>)
	a2Out = a2
	a4Out = <invalid>
	a5Out = a5_9
	return a0
l2301325C:
	hal_machw_disable_int(a3)
	word32 a5_30
	ke_evt_set(a0, a4, mstatus, out a5_30)
	__csrrs(mstatus, 8<32>)
	a2Out = dwArg10
	a4Out = <invalid>
	a5Out = a5_9
	return 0x80000000<32>
assert_rec_exit:


void assert_err()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blmac_encr_cntrl_pack.constprop.8
//      hal_machw_rx_duration
//      mm_tbtt_evt
//      mm_sec_machwkey_wr
//      mm_back_to_host_idle
//      mm_bcn_transmit
//      mm_bcn_transmitted
//      mm_timer_schedule
//      rxl_frame_release
//      rxl_pd_append
//      scan_send_cancel_cfm
//      blmac_abs_timer_set
//      txl_cntrl_halt_ac
//      txl_transmit_trigger
//      txl_frame_push
//      txl_frame_push_force
//      txl_frame_send_eapol_frame
//      me_mic_end
//      me_init_bcmc_rate
//      me_tx_cfm_singleton
//      me_check_rc
//      me_beacon_check
//      me_sta_bw_nss_max_upd
//      rc_update_bw_nss_max
//      rc_init
//      sm_send_next_bss_param
//      txu_cntrl_cfm
//      apm_send_next_bss_param
//      co_list_push_back
//      co_list_remove
//      ke_evt_schedule
//      ke_malloc
//      ke_msg_alloc
//      ke_task_local
//      ke_handler_search
//      ke_state_get
//      ke_task_schedule
//      ke_timer_set
//      ke_timer_clear
//      add_key_to_mac
//      ipc_emb_init
//      ipc_emb_msg_evt
//      mdm_txcbwmax_setf
//      phy_hw_set_channel
//      phy_init
//      intc_spurious
//      mac_irq
//      bl_irq_handler
//      blmac_pwr_mgt_setf
//      chan_get_next_chan
//      chan_tbtt_insert
//      chan_upd_ctxt_status
//      chan_conn_less_delay_evt
//      chan_tx_cfm
//      chan_scan_req
//      chan_ctxt_del
//      chan_bcn_detect_start
//      chan_ctxt_link
//      chan_ctxt_unlink
//      blmac_soft_reset_getf
//      hal_machw_init
//      hal_machw_sleep_check
//      mm_cfg_rssi_req_handler
//      mm_set_ps_options_req_handler
//      mm_key_del_req_handler
//      mm_key_add_req_handler
//      mm_set_idle_req_handler
//      mm_start_req_handler
//      mm_force_idle_req_handler
//      mm_hw_config_handler
//      scan_start_req_handler
//      mm_scan_channel_end_ind_handler
//      mm_scan_channel_start_ind_handler
//      txl_cfm_evt
//      me_extract_rate_set
//      me_rc_set_rate_req_handler
//      mm_set_ps_mode_cfm_handler
//      mm_set_idle_cfm_handler
//      scanu_join_req_handler
//      me_set_ps_disable_cfm_handler
//      mm_bss_param_setting_handler
//      scanu_start_cfm_handler
//      scanu_join_cfm_handler
//      sm_connect_req_handler
//      me_set_active_cfm_handler
//      mm_sta_add_cfm_handler
//      me_set_ps_disable_cfm_handler
//      mm_bss_param_setting_handler
//      mm_bcn_change_cfm_handler
//      apm_start_req_handler
//      me_set_active_cfm_handler
//      dbg_test_print
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
assert_err_exit:
assert_err_entry:
l2301327E:


void assert_warn()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_legacy_rate_bitfield_build
//      rxu_mpdu_upload_and_indicate.constprop.11
//      rxu_mgt_frame_check
//      sm_auth_handler
//      apm_tx_int_ps_get_postpone
//      chan_cde_evt
//      bam_send_air_action_frame
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
assert_warn_entry:
l23013280:
	return
assert_warn_exit:


void coex_dump_pta()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_coex_dump
// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: sp
coex_dump_pta_entry:
l23013282:
	return
coex_dump_pta_exit:


void coex_dump_wifi()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_coex_dump
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
coex_dump_wifi_entry:
l2301328A:
	return
coex_dump_wifi_exit:


void coex_wifi_rf_forece_enable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_coex_rf_force_off
//      cmd_wifi_coex_rf_force_on
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1
// Preserved: a0 sp
coex_wifi_rf_forece_enable_entry:
l2301329C:
	branch a0 == 0<32> l230132A2
l230132A0:
l230132A2:
l230132A2_thunk_rfc_coex_force_to:
	rfc_coex_force_to(a0, a1, a5)
	return
coex_wifi_rf_forece_enable_exit:


void coex_wifi_pti_forece_enable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_coex_pti_force_off
//      cmd_wifi_coex_pti_force_on
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
coex_wifi_pti_forece_enable_entry:
l230132A6:
	word32 a4_12
	word32 a4_5 = Mem0[0x44B00400<32>:int32]
	branch a0 == 0<32> l230132E6
l230132E6:
	a4_12 = a4_5 & 0xFFFFFFEF<32>
l230132B0:
	Mem10[0x44B00400<32>:word32] = a4_5 | 0xF0000000<32>
	a4_12 = Mem10[0x44B00400<32>:int32] | 16<i32>
l230132C2:
	word32 a4_23
	Mem15[0x44B00400<32>:word32] = a4_12
	branch Mem15[0x44B00400<32>:int32] << 4<u32> >= 0<32> l230132EA
l230132EA:
	a4_23 = Mem15[0x44B00400<32>:int32] & 0xFBFFFFFF<32> | 0x4000000<32>
l230132DA:
	a4_23 = Mem15[0x44B00400<32>:int32] & 0xFBFFFFFF<32>
l230132E0:
	Mem28[0x44B00400<32>:word32] = a4_23
	return
coex_wifi_pti_forece_enable_exit:


word32 coex_wifi_pta_forece_enable(word32 a0, word32 a3, word32 mstatus, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
//      cmd_wifi_coex_pta_force_off
//      cmd_wifi_coex_pta_force_on
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 mstatus ra s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
coex_wifi_pta_forece_enable_entry:
l230132F8:
	word32 a5_7 = Mem5[0x4200D904<32>:int32]
	branch a5_7 == a0 l23013342
l23013312:
	word32 s1_20 = 0x4200D904<32>
	s2 = a0
	word32 s0_101 = 0x4200DCC4<32>
	branch a5_7 != 0<32> l23013352
l23013352:
	branch a5_7 != 1<32> l23013338
l23013358:
	word32 a5_25
	word32 a0_24 = xTaskGetTickCount(out a5_25)
	s0_101 = Mem17[a3:word32]
	Mem32[a5_25 - a3 + a0_24:word32] = Mem17[a5_25:word32]
	__csrrc(mstatus, 8<32>)
	bl_nap_calculate()
	__csrrs(mstatus, 8<32>)
	s3 = 1000<i32>
	branch a0_24 <=u 1000<i32> l23013338
l23013384:
	word32 sp_37
	word32 a5_39
	word32 s3_43
	word32 s4_44
	word32 a4_46
	word32 a3_47
	word32 a2_51
	word32 mstatus_52
	word32 a1_119
	word32 tp_120
	call 0x4200C4E8<p32> (retsize: 0;)
		uses: a0:a0_24,a1:a1_119,a3:a3,a4:a4_79,mstatus:mstatus,ra:0x4200C384<p32>,s0:s0_29,s1:0x4200D904<32>,s2:a0,s3:1000<i32>,s4:a0_24,tp:tp_120
		defs: a1:a1_119,a2:a2_51,a3:a3_47,a4:a4_46,a5:a5_39,mstatus:mstatus_52,s3:s3_43,s4:s4_44,sp:sp_37,tp:tp_120
	word32 a0_54
	word32 a3_57
	word32 s1_62
	word32 s2_63
	word32 s3_64
	word32 s4_65
	word32 a4_79
	call 0x4200C4F2<p32> (retsize: 0;)
		uses: a0:a0_54,a1:a1_119,a3:a3_57,a4:a4_79,mstatus:mstatus_52,ra:0x4200C394<p32>,s0:vTaskDelay(s4_44 >>u s3_43, a2_51, a3_47, a4_46, a5_39, mstatus_52, Mem32[sp_37 + 36<i32>:word32], Mem32[sp_37 + 40<i32>:word32], Mem32[sp_37 + 312<i32>:word32], Mem32[sp_37 + 376<i32>:word32], out s1_62, out a0_54, out a1_166, out a2_167, out a3_57, out a4_168, out a5_169, out s2_63, out s3_64, out s4_65, out s8_170),s1:s1_62,s2:s2_63,s3:s3_64,s4:s4_65,tp:tp_120
		defs: a3:a3_80,a4:a4_79,mstatus:mstatus_85,ra:ra_73,s0:s0_74,s1:s1_71,s2:s2_75,s3:s3_76
l23013322:
	word32 a5_89
	word32 a0_88 = xTaskGetTickCount(out a5_89)
	s0_101 = Mem17[a3:word32]
	Mem95[a5_89 - a3 + a0_88:word32] = Mem17[a5_89:word32]
l23013338:
	Mem98[s1_20:word32] = s2
	word32 a5_165
	a0 = xTaskGetTickCount(out a5_165)
	Mem102[a0:word32] = s0_101
l23013342:
	s0Out = s1
	a0Out = a0
	a2Out = dwArg48
	a3Out = a3
	s2Out = s2
	s3Out = s3
	mstatusOut = mstatus
	return ra
coex_wifi_pta_forece_enable_exit:


void wifi_main(word32 ra, word32 s1, word32 s2, word32 s3, word32 s6, word32 s7, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg7C, word32 dwArg88, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
wifi_main_exit:
wifi_main_entry:
l2301339E:
	word32 s0_41
	word32 ra_40 = rfc_init(0x44B00000<32>, s1, 0x2625A00<32>, s2, s3, s6, s7, fflags, frm, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg38, dwArg44, s3, s1, out s0_41)
	Mem65[s0_41 + 1024<i32>:word32] = Mem22[s0_41 + 1024<i32>:int32] | 1<i32>
	mpif_clk_init()
	sysctrl_init()
	intc_init()
	word32 s0_92
	word32 s2_129
	word32 s3_141
	word32 a3_148
	word32 a2_150
	word32 a0_153
	word32 ra_211 = bl_init(ipc_emb_init(ra_40), mstatus, s2, dwLoc10, dwLoc0C, dwLoc08, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg5C, ra, dwArg7C, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_92, out a0_153, out a2_150, out a3_148, out s2_129, out s3_141)
	Mem111[s0_92 + 1028<i32>:word32] = 0x24F037<32>
	Mem113[s0_92 + 1024<i32>:word32] = 1<32>
	Mem114[s0_92 + 1024<i32>:word32] = 0<32>
	Mem116[s0_92 + 1024<i32>:word32] = 105<i32>
	Mem121[s0_92 + 1024<i32>:word32] = Mem116[s0_92 + 1024<i32>:int32] & -33<i32>
	Mem124[0x50100023<32>:word32] = 0x44920000<32>
	word32 s0_125 = 0x44900000<32>
	word32 s5_126 = 0x40007000<32>
	word32 s6_128 = 0x5C2000<32>
l23013430:
	word32 a5_135
	word32 a5_131 = Mem130[s2_129 + 288<i32>:int32]
	word32 a5_134 = Mem130[s0_125 + 132<i32>:int32]
	branch a5_131 << 0xC<u32> >= 0<32> l230134C6
l230134C6:
	a5_135 = a5_134 & 0xFFFFFFFE<32>
l23013440:
	a5_135 = a5_134 | 1<i32>
l23013444:
	Mem139[s0_125 + 132<i32>:word32] = a5_135
	word32 a5_143 = Mem139[s3_141 + -936<i32>:word32]
	branch a5_143 != 0<32> l23013452
l23013450:
	a0_153 = ipc_emb_wait(a2_150, a3_148, a5_131 << 0xC<u32>, a5_143, mstatus, s2, dwArgF8, out a5_143)
l23013452:
	Mem169[a5_143 + 1<i32>:word32] = Mem139[a5_143:word32]
	branch (a5_143 & 0xF<32>) != 0<32> l230134B4
l23013462:
	word32 a5_174 = Mem169[s5_126 + 24<i32>:int32]
	word32 a4_176 = a5_174 >>u 24<i32> & 7<i32>
	branch a4_176 == 0<32> l23013496
l2301346E:
	branch a4_176 == 3<32> l2301347E
l23013474:
	Mem181[0x40017<32>:word32] = Mem169[0x17<32>:word32]
l2301347E:
	branch a4_176 == 0<32> l23013496
l23013480:
	branch a4_176 == 3<32> l23013496
l23013486:
	Mem187[64<i32>:word32] = Mem184[0x43<32>:word32]
	Mem190[68<i32>:word32] = Mem187[68<i32>:word32]
l23013496:
	word32 a5_193 = a5_174 >>u 24<i32> & 4<32>
	branch a5_193 == 0<32> l230134B4
l2301349A:
	Mem203[(a5_193 | s6_128) + 20<i32>:word32] = Mem194[a5_193 + 20<i32>:word32]
	Mem207[0x4001090C<32>:word32] = Mem203[0x4000F90C<32>:int32] & 0xFFFFFFFE<32> | 4<i32>
l230134B4:
	word32 a0_255
	s5_126 = ke_evt_schedule(ra_211, a0_153, dwArg88, out s6_128)
	word32 a3_249
	branch bl_sleep(dwArg08, out a3_249) == 0<32> l230134CA
l230134CA:
	a0_255 = 1<32>
l230134BE:
	a0_255 = 0<32>
l230134C0:
	ra_211 = coex_wifi_pta_forece_enable(a0_255, a3_249, mstatus, out s0_125, out a0_153, out a2_150, out a3_148, out s2_129, out s3_141, out mstatus)


void ipc_emb_notify(word32 ra, word32 a0, word32 mstatus, word32 dwArg18, word32 dwArg38, word32 dwArgC4, word32 dwArgE0, word32 dwArgE4, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mac_irq
//      bl_irq_handler
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +00C4:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
ipc_emb_notify_entry:
l230134CE:
	word32 a4_5 = Mem0[0x4200DCC8<32>:int32]
	branch a4_5 != 0<32> l230134FA
l230134FA:
	word32 a5_18 = Mem10[0x4200DE84<32>:int32]
	branch a5_18 == 0<32> l2301351C
l2301351C:
	word32 s0_92
	word32 s1_93
	word32 a0_94
	word32 a1_95
	word32 a2_96
	word32 a3_97
	word32 a4_98
	word32 a5_99
	word32 s2_100
	word32 s3_101
	word32 s4_102
	word32 mstatus_103
	xTaskGenericNotify(ra, a0, 0<32>, 2<32>, 0<32>, a4_5, mstatus, dwLoc0C, dwArg18, dwArg38, dwArgC4, dwArgE0, dwArgE4, dwArg0108, out s0_92, out s1_93, out a0_94, out a1_95, out a2_96, out a3_97, out a4_98, out a5_99, out s2_100, out s3_101, out s4_102, out mstatus_103)
l23013506:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg56 = <invalid>
	vTaskNotifyGiveFromISR(a0, a1, a2, a4, mstatus, stackArg56)
	branch a5_18 == 0<32> l23013514
l23013510:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg48 = <invalid>
	word32 stackArg52 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg124 = <invalid>
	word32 a0_89
	word32 a4_90
	word32 a5_91
	vTaskSwitchContext(ra, a3, s2, mstatus, stackArg48, stackArg52, stackArg88, stackArg124, out a0_89, out a4_90, out a5_91)
l23013514:
	return
ipc_emb_notify_exit:
l230134E2:
	assert_err()


word32 ipc_emb_wait(word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg0118, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 t3 tp
// Preserved: sp
ipc_emb_wait_entry:
l23013528:
	word32 a2_34
	word32 a3_35
	word32 a4_36
	word32 s2_37
	word32 s3_38
	ulTaskNotifyTake(1<32>, 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwArg08, dwArg0118, out a2_34, out a3_35, out a4_36, out s2_37, out s3_38)
	word32 a5_24 = Mem7[0x4201D114<32>:int32]
	Mem27[0x4201D114<32>:word32] = a5_24 + 1<32>
	a5Out = a5_24 + 1<32>
	return 1<32>
ipc_emb_wait_exit:


word32 ipc_emb_init(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse:  ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
ipc_emb_init_entry:
l23013548:
	word32 a5_110
	Mem12[0x4200ECC8<32>:word32] = xTaskGetCurrentTaskHandle(out a5_110)
	word32 t1_111
	word32 a0_112
	word32 a1_113
	word32 a2_114
	word32 a3_115
	word32 a4_116
	word32 a5_117
	word32 ra_22 = memset(ra, 0x4201D118<32>, 0<32>, 32<i32>, out t1_111, out a0_112, out a1_113, out a2_114, out a3_115, out a4_116, out a5_117)
	Mem28[0x42042220<32>:word32] = 0x4201D118<32>
	branch Mem28[0x44800140<32>:int32] == 0x49504332<32> l230135A6
l230135A6:
	Mem39[0x44800114<32>:word32] = 0<32>
	Mem40[0x44800118<32>:word32] = 0<32>
	Mem45[0x44800114<32>:word32] = Mem40[0x44800114<32>:int32] & 0xFFFFFFFC<32>
	Mem51[0x44800114<32>:word32] = Mem45[0x44800114<32>:int32] & 0xFFFFFFF3<32> | 4<i32>
	Mem55[0x44800114<32>:word32] = Mem51[0x44800114<32>:int32] & -769<i32> | 512<i32>
	Mem61[0x44800114<32>:word32] = Mem55[0x44800114<32>:int32] & 0xFF0003FF<32> | 0xFFF800<32>
	Mem68[0x44800114<32>:word32] = Mem61[0x44800114<32>:int32] & 0xFCFFFFFF<32> | 0x2000000<32>
	Mem74[0x44800114<32>:word32] = Mem68[0x44800114<32>:int32] & 0xFFFCFFFF<32> | 0x30000<32>
	Mem81[0x44800114<32>:word32] = Mem74[0x44800114<32>:int32] & 0xFFF3FFFF<32> | 0xC0000<32>
	Mem88[0x44800114<32>:word32] = Mem81[0x44800114<32>:int32] & 0xFFCFFFFF<32> | 0x300000<32>
	Mem95[0x44800114<32>:word32] = Mem88[0x44800114<32>:int32] & 0xFF3FFFFF<32> | 0xC00000<32>
	Mem102[0x44800114<32>:word32] = Mem95[0x44800114<32>:int32] & 0xFCFFFFFF<32> | 0x3000000<32>
	Mem103[0x4480010C<32>:word32] = 0x1FFFF03<32>
	return ra_22
ipc_emb_init_exit:
l2301358E:
	assert_err()


void ipc_emb_tx_irq(word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 s1 tp
// Preserved: s0 sp
ipc_emb_tx_irq_entry:
l23013682:
	word32 s0_11 = Mem9[0x4480011C<32>:int32]
	branch (s0_11 & 0x1FFFF00<32>) == 0<32> l230136AC
l2301369C:
	word32 a5_41
	ke_evt_set((s0_11 & 0x1FFFF00<32>) >>u 1<u32>, a4, mstatus, out a5_41)
	Mem20[0x44800110<32>:word32] = s0_11 & 0x1FFFF00<32>
	Mem21[0x44800108<32>:word32] = s0_11 & 0x1FFFF00<32>
l230136AC:
	return
ipc_emb_tx_irq_exit:


void ipc_emb_tx_evt(word32 ra, word32 a0, word32 a4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg68, word32 dwArg9C, word32 dwArgAC, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0068:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ipc_emb_tx_evt_entry:
l230136B6:
	word32 s2_11 = Mem10[(a0 << 2<i32>) + 0x23076570<32>:int32]
	ke_evt_clear(s2_11, a4, mstatus)
	word32 s5_138 = 0xFFFFFFFF<32>
	word32 s1_127 = s2_11 & 0xFFF800<32>
	word32 s6_139 = 0x4201C000<32>
	word32 s3_128 = 0x440800<32>
	word32 s7_140 = 0x44800000<32>
l2301371E:
	word32 s0_55 = Mem54[816<i32>:word32]
	branch s5_138 == 816<i32> l2301374A
l2301374A:
	branch s1_127 != 0<32> l23013776
l2301374C:
	branch (Mem54[s6_139 + -936<i32>:word32] & s3_128) == 0<32> l23013776
l23013776:
	Mem68[s7_140 + 264<i32>:word32] = 256<i32>
	word32 a4_78
	word32 t1_337
	word32 a0_338
	word32 a1_339
	word32 a2_340
	word32 a3_341
	word32 a5_342
	word32 ra_80 = memset(ra, s0_55 + 84<i32>, 0<32>, 716<i32>, out t1_337, out a0_338, out a1_339, out a2_340, out a3_341, out a4_78, out a5_342)
	Mem84[s0_55 + 196<i32>:word32] = s0_55 + 268<i32>
	Mem86[s0_55 + 192<i32>:word32] = s0_55 + 196<i32>
l230137A2:
	word32 a5_90 = Mem89[a4_78:word32]
	Mem92[a4_78 + 80<i32>:word32] = a5_90 + 4<32>
	branch s0_55 + 84<i32> != a5_90 + 4<32> l230137A2
l230137AC:
	word32 a5_95 = Mem92[s0_55 + 192<i32>:int32]
	Mem96[s0_55 + 184<i32>:word32] = 0<32>
	Mem100[Mem96[a5_95:word32] + 16<i32>:word32] = 0<32>
	Mem101[s0_55 + 240<i32>:word32] = 0<32>
	Mem102[s0_55 + 244<i32>:word32] = 0<32>
	Mem103[s0_55 + 248<i32>:word32] = 0<32>
	Mem104[s0_55 + 168<i32>:word32] = 0<32>
	word32 s0_126
	word32 s8_141
	ra = txu_cntrl_push(ra_80, s0_55, s0_55 + 84<i32>, 0<32>, s6_139, fflags, frm, mstatus, dwLoc30, dwLoc10, dwLoc0C, dwLoc08, dwArg18, dwArg38, dwArg3C, dwArg68, dwArg9C, dwArgAC, dwArgF8, dwArg0138, out s0_126, out s1_127, out a4, out s2_11, out s3_128, out s5_138, out s6_139, out s7_140, out s8_141)
	Mem149[1<32>:word32] = s0_126
	Mem153[s8_141 + 24<i32>:word32] = Mem149[s8_141 + 24<i32>:int32] + 1<32>
l23013758:
	0<32> = dwArg0128
l23013772_thunk_ke_evt_set:
	word32 a5_343
	ke_evt_set(s2_11, a4, mstatus, out a5_343)
	return
l23013724:
	Mem175[0x4480010C<32>:word32] = 256<i32>
	0<32> = dwArg0128
	return
ipc_emb_tx_evt_exit:


void ipc_emb_cfmback_irq(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
ipc_emb_cfmback_irq_entry:
l230137EE:
	word32 s0_9 = Mem7[0x4480011C<32>:int32]
	branch (s0_9 & 32<i32>) == 0<32> l23013816
l23013802:
	Mem12[0x44800110<32>:word32] = 32<i32>
	Mem13[0x44800108<32>:word32] = 32<i32>
	word32 a5_51
	ke_evt_set(0x40000<32>, 32<i32>, mstatus, out a5_51)
l23013816:
	branch (s0_9 & 0x10<32>) == 0<32> l23013836
l23013836:
	return
l2301381A:
	Mem27[0x44800110<32>:word32] = 0x10<32>
	Mem28[0x44800108<32>:word32] = 0x10<32>
l23013832_thunk_ke_evt_set:
	word32 a5_52
	ke_evt_set(0x80000<32>, 0x10<32>, mstatus, out a5_52)
	return
ipc_emb_cfmback_irq_exit:


word32 ipc_emb_txcfm_ind(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cfm_evt
//      txl_cfm_flush
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
ipc_emb_txcfm_ind_entry:
l2301383E:
	Mem6[0x44800100<32>:word32] = a0 << 7<i32>
	return 0x44800000<32>
ipc_emb_txcfm_ind_exit:


void ipc_emb_msg_irq(word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
ipc_emb_msg_irq_entry:
l2301384A:
	branch (Mem7[0x4480011C<32>:int32] & 2<32>) == 0<32> l2301386A
l2301385C:
	word32 a5_32
	ke_evt_set(0x2000000<32>, a4, mstatus, out a5_32)
	Mem17[0x44800110<32>:word32] = 2<32>
l2301386A:
	return
ipc_emb_msg_irq_exit:


void ipc_emb_msg_evt(word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
ipc_emb_msg_evt_entry:
l23013872:
	word32 a5_114 = Mem21[0x44800104<32>:int32]
	word32 s1_106 = 0x42042000<32>
l230138AE:
	branch (a5_114 & 2<32>) != 0<32> l230138DA
l230138DA:
	Mem36[0x44800108<32>:word32] = 2<32>
	word32 a0_43
	word32 s2_47
	word32 a5_177
	word32 s1_46 = ke_malloc(CONVERT(Mem36[s1_106 + 10<i32>:uint16], uint16, word32) + 0xC<32>, a3, 2<32>, mstatus, dwArg08, out a0_43, out a5_177, out s2_47)
	branch a0_43 != 0<32> l23013902
l23013902:
	Mem55[a0_43:word32] = 0<32>
	Mem57[a0_43 + 4<i32>:word16] = SLICE(CONVERT(Mem55[s1_46 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem59[a0_43 + 6<i32>:word16] = SLICE(CONVERT(Mem57[s1_46 + 6<i32>:uint16], uint16, word32), word16, 0)
	Mem61[a0_43 + 8<i32>:word16] = 0xD<16>
	Mem63[a0_43 + 10<i32>:word16] = SLICE(CONVERT(Mem61[s1_46 + 10<i32>:uint16], uint16, word32), word16, 0)
	word32 a5_64 = 0xC<32>
l23013926:
	word32 a3_67 = CONVERT(Mem66[a0_43 + 10<i32>:uint16], uint16, word32)
	branch a5_64 + -12<i32> < a3_67 l2301396E
l2301396E:
	Mem73[a3_67:word32] = a0_43 + a5_64
	a5_64 = a5_64 + 4<32>
l23013932:
	word32 a5_75 = CONVERT(Mem66[s2_47 + 21<i32>:byte], byte, word32)
	Mem77[s2_47 + 21<i32>:byte] = SLICE(a5_75 + 1<i32>, byte, 0)
	Mem79[s1_46 + 8<i32>:word16] = SLICE(a5_75, word16, 0)
	word32 a5_80 = CONVERT(Mem79[a0_43 + 6<i32>:uint16], uint16, word32)
	branch a5_80 <=u 0xE<32> l2301397E
l2301397E:
	branch a5_80 >u 0xC<32> l2301395C
l2301395C:
	assert_err()
l23013984:
	Mem96[0x44800100<32>:word32] = 4<32>
	word32 s8_185
	word32 s3_183
	word32 s4_184
	word32 a5_181
	word32 s2_182
	word32 a1_179
	word32 a2_180
	word32 a0_178
	ke_msg_send(a0_43 + 12<i32>, mstatus, out s1_106, out a0_178, out a1_179, out a2_180, out a3, out a4, out a5_181, out s2_182, out s3_183, out s4_184, out s8_185)
	a5_114 = Mem96[0x44800104<32>:int32]
l2301394C:
	assert_err()
l230138F2:
	assert_err()
l230138B2:
	ke_evt_clear(0x2000000<32>, a4, mstatus)
	Mem122[0x4480010C<32>:word32] = 2<32>
	0<32> = dwArg0128
	return
ipc_emb_msg_evt_exit:


void ipc_emb_msg_dma_int_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
ipc_emb_msg_dma_int_handler_entry:
l2301399C:
	return
ipc_emb_msg_dma_int_handler_exit:


void ipc_emb_dbg_dma_int_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
ipc_emb_dbg_dma_int_handler_entry:
l2301399E:
	Mem5[0xA0<32>:word32] = 0x44A00000<32>
	Mem8[0x44800100<32>:word32] = 1<32>
	return
ipc_emb_dbg_dma_int_handler_exit:


void ipc_emb_dump()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl60x_fw_dump_statistic
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
ipc_emb_dump_entry:
l230139B4:
	return
ipc_emb_dump_exit:


word32 rf_set_channel(word32 ra, word32 a1, word32 s2, word32 fflags, word32 frm, ptr32 & s1Out, ptr32 & s4Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
// MayUse:  a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s2:[0..31]
// LiveOut: fflags frm ra s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
rf_set_channel_entry:
l230139B6:
l230139B8_thunk_rfc_config_channel:
	word32 fflags_17
	word32 frm_18
	word32 s1_21
	word32 s4_24
	word32 ra_19 = rfc_config_channel(ra, a1, s2, fflags, frm, out s1_21, out s4_24, out fflags_17, out frm_18)
	s1Out = s1_21
	s4Out = s4_24
	fflagsOut = fflags_17
	frmOut = frm_18
	return ra_19
rf_set_channel_exit:


void rf_dump_status()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_tx_cfm_singleton
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
rf_dump_status_entry:
l230139BC:
	return
rf_dump_status_exit:


word32 mdm_txcbwmax_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
//      phy_init
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
mdm_txcbwmax_setf_entry:
l230139BE:
	branch (a0 << 0x18<u32> & 0xFC000000<32>) == 0<32> l230139EA
l230139EA:
	Mem24[0x44C01824<32>:word32] = Mem10[0x44C00824<32>:int32] & 0xFCFFFFFF<32> | a0 << 0x18<u32>
	return 0xFCFFFFFF<32>
mdm_txcbwmax_setf_exit:
l230139D0:
	assert_err()


word32 phy_config_rxgain(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      agc_config
//      phy_tcal_callback
// MayUse:  a0:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
phy_config_rxgain_entry:
l23013A08:
	word32 a4_4 = 0x4200D90C<32>
	branch CONVERT(Mem0[0x4200D90C<32>:int8], int8, int32) == a0 l23013B24
l23013A18:
	word32 a0_9 = CONVERT(SLICE(a0, byte, 0), byte, int32)
	Mem10[0x4200D90C<32>:byte] = SLICE(a0_9, byte, 0)
	Mem17[0x44C0C080<32>:word32] = a0_9 + 3<32> & 255<i32> | Mem10[0x44C0C080<32>:int32] & -256<i32>
	Mem29[0x44C0C080<32>:word32] = CONVERT(Mem17[0x4200D90C<32>:int8], int8, int32) + 0xB<32> << 8<i32> & 0xFFFFFFF<32> | Mem17[0x44C0C080<32>:int32] & 0xF00000FF<32>
	Mem41[0x44C0C080<32>:word32] = CONVERT(Mem29[0x4200D90C<32>:int8], int8, int32) + 0x12<32> << 16<i32> & 0xFF0000<32> | Mem29[0x44C0C080<32>:int32] & 0xFF00FFFF<32>
	Mem49[0x44C0C080<32>:word32] = CONVERT(Mem41[0x4200D90C<32>:int8], int8, int32) + 0x19<32> << 24<i32> | Mem41[0x44C0C080<32>:int32] & 0xFFFFFF<32>
	Mem56[0x44C0C084<32>:word32] = CONVERT(Mem49[0x4200D90C<32>:int8], int8, int32) + 32<i32> & 255<i32> | Mem49[0x44C0C084<32>:int32] & -256<i32>
	Mem64[0x44C0C084<32>:word32] = CONVERT(Mem56[0x4200D90C<32>:int8], int8, int32) + 39<i32> << 8<i32> & 0xFFFFFFF<32> | Mem56[0x44C0C084<32>:int32] & 0xF00000FF<32>
	Mem72[0x44C0C084<32>:word32] = CONVERT(Mem64[0x4200D90C<32>:int8], int8, int32) + 45<i32> << 16<i32> & 0xFF0000<32> | Mem64[0x44C0C084<32>:int32] & 0xFF00FFFF<32>
	Mem79[0x44C0C084<32>:word32] = CONVERT(Mem72[0x4200D90C<32>:int8], int8, int32) + 53<i32> << 24<i32> | Mem72[0x44C0C084<32>:int32] & 0xFFFFFF<32>
	a4_4 = CONVERT(Mem79[0x4200D90C<32>:int8], int8, int32) + 59<i32> & 255<i32> | Mem79[0x44C0C088<32>:int32] & -256<i32>
	Mem86[0x44C0C088<32>:word32] = a4_4
l23013B24:
	return a4_4
phy_config_rxgain_exit:


word32 agc_config(ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse: 
// LiveOut: a2 s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
agc_config_entry:
l23013B26:
	Mem21[0x44C0B390<32>:word32] = Mem16[0x44C0B390<32>:int32] & 0xEFFFFFFF<32>
	Mem26[0x44C0B390<32>:word32] = Mem21[0x44C0B390<32>:int32] & -1025<i32>
	Mem31[0x44C0B3A4<32>:word32] = Mem26[0x44C0B3A4<32>:int32] & -256<i32>
	Mem36[0x44C0B3A4<32>:word32] = Mem31[0x44C0B3A4<32>:int32] & 0xF00000FF<32>
	Mem42[0x44C0B394<32>:word32] = Mem36[0x44C0B394<32>:int32] & 0xFF00FFFF<32> | 0xF80000<32>
	Mem48[0x44C0B398<32>:word32] = Mem42[0x44C0B398<32>:int32] & 0xF00000FF<32> | 0x9FFFE00<32>
	Mem53[0x44C0B3C4<32>:word32] = Mem48[0x44C0B3C4<32>:int32] & -256<i32> | 206<i32>
	Mem60[0x44C0B364<32>:word32] = Mem53[0x44C0B364<32>:int32] & 0xE0FFFFFF<32> | 0x8000000<32>
	Mem67[0x44C0B364<32>:word32] = Mem60[0x44C0B364<32>:int32] & 0xFFC0FFFF<32> | 0x3C0000<32>
	Mem75[0x44C0B364<32>:word32] = Mem67[0x44C0B364<32>:int32] & 0xFC0000FF<32> | 0x3FFF800<32>
	Mem81[0x44C0B364<32>:word32] = Mem75[0x44C0B364<32>:int32] & -64<i32> | 57<i32>
	Mem86[0x44C0B368<32>:word32] = Mem81[0x44C0B368<32>:int32] & 0xFFC00FFF<32> | 0x70000<32>
	Mem90[0x44C0B368<32>:word32] = Mem86[0x44C0B368<32>:int32] & -1024<i32> | 112<i32>
	Mem94[0x44C0B36C<32>:word32] = Mem90[0x44C0B36C<32>:int32] & -256<i32> | 18<i32>
	Mem98[0x44C0B36C<32>:word32] = Mem94[0x44C0B36C<32>:int32] & -1793<i32> | 1280<i32>
	Mem103[0x44C0B36C<32>:word32] = Mem98[0x44C0B36C<32>:int32] & 0xFF00FFFF<32> | 0x280000<32>
	Mem110[0x44C0B36C<32>:word32] = Mem103[0x44C0B36C<32>:int32] & 0xF8FFFFFF<32> | 0x7000000<32>
	Mem117[0x44C0B370<32>:word32] = Mem110[0x44C0B370<32>:int32] & 0xFF80FFFF<32> | 0x580000<32>
	Mem124[0x44C0B3C0<32>:word32] = CONVERT(Mem117[0x44C0B3C0<32>:word24], word24, word32) | 0x18000000<32>
	Mem130[0x44C0B380<32>:word32] = Mem124[0x44C0B380<32>:int32] & 0xFFF03FFF<32> | 0xF8000<32>
	Mem136[0x44C0B380<32>:word32] = Mem130[0x44C0B380<32>:int32] & 0xFC0FFFFF<32> | 0x3700000<32>
	Mem140[0x44C0B380<32>:word32] = Mem136[0x44C0B380<32>:int32] & 0x3FFFFFF<32> | 0x4000000<32>
	Mem145[0x44C0B380<32>:word32] = Mem140[0x44C0B380<32>:int32] & 0xFDFFFFFF<32>
	Mem151[0x44C0B380<32>:word32] = Mem145[0x44C0B380<32>:int32] & 0xFE0003FF<32> | 1024<i32>
	Mem155[0x44C0B384<32>:word32] = Mem151[0x44C0B384<32>:int32] & 0x3FFFFFF<32> | 0xE4000000<32>
	Mem160[0x44C0B384<32>:word32] = Mem155[0x44C0B384<32>:int32] & 0xFC0FFFFF<32> | 0x3700000<32>
	Mem165[0x44C0B384<32>:word32] = Mem160[0x44C0B384<32>:int32] & 0xFFF03FFF<32> | 0x50000<32>
	Mem168[0x44C0B384<32>:word32] = Mem165[0x44C0B384<32>:int32] & 0xFDFFFFFF<32>
	Mem174[0x44C0B384<32>:word32] = Mem168[0x44C0B384<32>:int32] & 0xFE0003FF<32> | 0xFFF800<32>
	Mem179[0x44C0B388<32>:word32] = Mem174[0x44C0B388<32>:int32] & 0x3FFFFFF<32> | 0x3C000000<32>
	Mem184[0x44C0B388<32>:word32] = Mem179[0x44C0B388<32>:int32] & 0xFC0FFFFF<32> | 0x1700000<32>
	Mem189[0x44C0B388<32>:word32] = Mem184[0x44C0B388<32>:int32] & 0xFFF03FFF<32> | 0xA8000<32>
	Mem192[0x44C0B388<32>:word32] = Mem189[0x44C0B388<32>:int32] & 0xFDFFFFFF<32>
	Mem197[0x44C0B388<32>:word32] = Mem192[0x44C0B388<32>:int32] & 0xFE0003FF<32> | 0x1000400<32>
	Mem201[0x44C0B38C<32>:word32] = Mem197[0x44C0B38C<32>:int32] & 0x3FFFFFF<32> | 0x64000000<32>
	Mem205[0x44C0B38C<32>:word32] = Mem201[0x44C0B38C<32>:int32] & 0xFC0FFFFF<32>
	Mem209[0x44C0B38C<32>:word32] = Mem205[0x44C0B38C<32>:int32] & 0xFFF03FFF<32> | 0x38000<32>
	Mem213[0x44C0B38C<32>:word32] = Mem209[0x44C0B38C<32>:int32] & 0xFE0003FF<32> | 0xFFF800<32>
	Mem218[0x44C0D830<32>:word32] = Mem213[0x44C0C830<32>:int32] & 0x3FFFFFF<32> | 0xFC000000<32>
	Mem224[0x44C0D830<32>:word32] = Mem218[0x44C0C830<32>:int32] & 0xFC0FFFFF<32> | 0x100000<32>
	Mem229[0x44C0D830<32>:word32] = Mem224[0x44C0C830<32>:int32] & 0xFFF03FFF<32> | 0xD8000<32>
	word32 a4_230 = Mem229[0x44C0C830<32>:int32]
	Mem235[0x44C0D830<32>:word32] = a4_230 & 0xFE0003FF<32> | 0x1000400<32>
	Mem238[0x44C0D814<32>:word32] = Mem235[0x44C0C814<32>:int32] & 0xFFFFFFFC<32>
	Mem242[0x44C0D814<32>:word32] = Mem238[0x44C0C814<32>:int32] & -61<i32> | 8<i32>
	Mem246[0x44C0D814<32>:word32] = Mem242[0x44C0C814<32>:int32] & -61<i32> | 8<i32>
	word32 a4_250 = a4_230 & 0xFE0FFFFF<32> | 0xC00000<32>
	Mem251[a4_250 + 64<i32>:word32] = Mem246[a4_230 + 64<i32>:word32]
	word32 a4_257 = a4_250 & 0xFFF07FFF<32> | 0x18000000<32>
	Mem258[a4_257 + 64<i32>:word32] = Mem251[a4_250 + 64<i32>:word32]
	word32 a4_261 = a4_257 & 0xF00000FF<32> | 0xFFF800<32>
	Mem262[a4_261 + 68<i32>:word32] = Mem258[a4_257 + 68<i32>:word32]
	Mem265[(a4_261 & -256<i32>) + 68<i32>:word32] = Mem262[a4_261 + 68<i32>:word32]
	phy_config_rxgain(0<32>)
	Mem281[0x44C0B3A0<32>:word32] = Mem265[0x44C0B3A0<32>:int32] & -256<i32> | 158<i32>
	Mem285[0x44C0B3C0<32>:word32] = Mem281[0x44C0B3C0<32>:int32] & -256<i32> | 164<i32>
	word32 s2_288 = Mem285[0x44C0B3C0<32>:int32] & 0xF00000FF<32> | 0xA000300<32>
	Mem289[0x44C0B3C0<32>:word32] = s2_288
	Mem293[0x44C0D82C<32>:word32] = Mem289[0x44C0C82C<32>:int32] & -256<i32> | 181<i32>
	Mem298[0x44C0D82C<32>:word32] = Mem293[0x44C0C82C<32>:int32] | 256<i32>
	Mem302[0x44C0D82C<32>:word32] = Mem298[0x44C0C82C<32>:int32] & 0xFF0007FF<32> | 0xFFF800<32>
	Mem307[0x44C0D838<32>:word32] = Mem302[0x44C0C838<32>:int32] & 0x7FFFFFFF<32> | 0x80000000<32>
	Mem311[0x44C0D838<32>:word32] = Mem307[0x44C0C838<32>:int32] & 0xFFF80000<32> | 256<i32>
	Mem316[0x44C0D83C<32>:word32] = Mem311[0x44C0C83C<32>:int32] & 0x7FFFFFFF<32> | 0x80000000<32>
	Mem320[0x44C0D83C<32>:word32] = Mem316[0x44C0C83C<32>:int32] & 0xFFF00000<32> | 380<i32>
	Mem325[0x44C0D840<32>:word32] = Mem320[0x44C0C840<32>:int32] & 0x7FFFFFFF<32> | 0x80000000<32>
	Mem329[0x44C0D840<32>:word32] = Mem325[0x44C0C840<32>:int32] & 0xFFC00000<32> | 256<i32>
	Mem336[0x44C0D82C<32>:word32] = Mem329[0x44C0C82C<32>:int32] & 0xFF007FFF<32> | 0x200000<32>
	a2Out = dwArg48
	s2Out = s2_288
	s3Out = 0xFFF800<32>
	return s1
agc_config_exit:


void mdm_reset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
//      phy_init
//      phy_rc_isr
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
mdm_reset_entry:
l23013F6A:
	Mem6[0x44C01888<32>:word32] = 0x1000111<32>
	Mem7[0x44C01888<32>:word32] = 0<32>
	return
mdm_reset_exit:


void phy_powroffset_set(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
phy_powroffset_set_entry:
l23013F7E:
	word32 a5_14 = 0<32>
l23013F8A:
	Mem15[a5_14 + 0x420117DC<32>:byte] = SLICE(CONVERT(Mem10[a0 + a5_14:int8], int8, int32), byte, 0)
	a5_14 = a5_14 + 1<32>
	branch a5_14 != 0xE<32> l23013F8A
l23013FA0:
	return
phy_powroffset_set_exit:


word32 phy_hw_set_channel(word32 ra, word32 a0, word32 a2, word32 a3, word32 s3, word32 fflags, word32 frm, word32 dwArg24, word32 dwArg44, word32 dwArg84, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_set_channel
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s3:[0..31] Stack +0024:[0..31] Stack +0044:[0..31] Stack +0084:[0..31] Stack +0178:[0..31]
// LiveOut: fflags frm ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
phy_hw_set_channel_entry:
l23013FA2:
	branch a3 == 0<32> l23013FD4
l23013FD4:
	branch a0 == 0<32> l23013FF0
l23013FF0:
	Mem40[0x44C0B390<32>:word32] = Mem17[0x44C0B390<32>:int32] & -257<i32>
	Mem43[0x44C01820<32>:word32] = Mem40[0x44C00820<32>:int32] | 1<i32>
	Mem44[0x44C01800<32>:word32] = 0<32>
	mdm_reset()
	Mem48[0x44C01838<32>:word32] = 180<i32>
	Mem51[0x44C0188C<32>:word32] = 0x1FFFC13<32>
	Mem54[0x44C01898<32>:word32] = 0x2D00438<32>
	Mem59[0x44C01858<32>:word32] = Mem54[0x44C00858<32>:int32] & -256<i32>
	Mem62[0x44C0181C<32>:word32] = 0xFFFF0F<32>
	Mem66[0x44C0181C<32>:word32] = Mem62[0x44C0081C<32>:int32] & -128<i32> | 7<i32>
	Mem71[0x44C01834<32>:word32] = CONVERT(Mem66[0x44C00834<32>:word24], word24, word32) | 0x6000000<32>
	Mem74[0x44C01818<32>:word32] = 0x1880C06<32>
	Mem77[0x44C01860<32>:word32] = 0x7FFFF03<32>
	Mem78[0x44C0B340<32>:word32] = 0<32>
	Mem79[0x44C0B344<32>:word32] = 0<32>
	Mem80[0x44C0B348<32>:word32] = 0<32>
	mdm_txcbwmax_setf(a3)
	branch Mem80[0x44C0B000<32>:int32] << 0xA<u32> >= 0<32> l230140A8
l230140A2:
	Mem88[0x44C0B118<32>:word32] = 1<32>
l230140A8:
	word32 a0_128
	word32 a0_135
	word32 fflags_107
	word32 frm_108
	word32 s1_111
	word32 s4_114
	word32 ra_109 = rf_set_channel(ra, a2, 0x44C0B000<32>, fflags, frm, out s1_111, out s4_114, out fflags_107, out frm_108)
	branch s4_114 != 0<32> l2301410C
l2301410C:
	a0_128 = 0<32>
	branch s4_114 != 1<32> l230140E2
l23014114:
	branch CONVERT(SLICE(s1_111 + 0xFEFFFC73<32>, word16, 0), word16, word32) >u 820<i32> l230140E2
l23014128:
	a0_135 = 0xFEFFFC78<32>
l230140B4:
	a0_128 = 0<32>
	branch CONVERT(SLICE(s1_111 + 0xFF000694<32>, word16, 0), word16, word32) >u 72<i32> l230140E2
l230140CA:
	a0_128 = 0xE<32>
	branch s1_111 == 0xFFF9B4<32> l230140E2
l230140D6:
	a0_135 = 0xFF000699<32>
l230140DA:
	a0_128 = s1_111 + a0_135 ^ 5<32>
l230140E2:
	word32 s2_173
	word32 s3_174
	word32 s1_171 = rfc_apply_tx_power_offset(a0_128 & 255<i32>, 0x420117DC<32>, dwArg24, dwArg44, s3, dwArg84, dwArg0178, out s2_173, out s3_174)
	word32 a0_195 = CONVERT(SLICE(s3_174, byte, 0), byte, int32)
l23014108_thunk_trpc_update_vs_channel:
	trpc_update_vs_channel(a0_195)
	s0Out = s1
	s1Out = s1_171
	s2Out = s2_173
	s3Out = s3_174
	fflagsOut = fflags_107
	frmOut = frm_108
	return ra_109
phy_hw_set_channel_exit:
l23013FD8:
	assert_err()
l23013FBC:
	assert_err()


word32 phy_get_channel(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ps_send_pspoll
//      rxl_mpdu_transfer
//      txl_frame_send_null_frame
//      txl_frame_send_qosnull_frame
//      txl_frame_send_eapol_frame
//      rxu_mgt_frame_check
//      bam_send_air_action_frame
// MayUse:  a0:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
phy_get_channel_entry:
l2301412E:
	word32 a3_11 = CONVERT(Mem0[0x4201D142<32>:byte], byte, word32)
	Mem14[CONVERT(Mem0[0x4201D143<32>:byte], byte, word32) << 8<i32> | CONVERT(Mem0[0x4201D13C<32>:uint16], uint16, word32) << 16<i32> | a3_11:word32] = a0
	word32 a4_15 = CONVERT(Mem14[0x4201D13E<32>:uint16], uint16, word32)
	word32 a5_18 = CONVERT(Mem14[0x4201D140<32>:uint16], uint16, word32) << 16<i32> | a4_15
	Mem19[a5_18 + 4<i32>:word32] = a0
	a4Out = a4_15
	a5Out = a5_18
	return a3_11
phy_get_channel_exit:


word32 phy_set_channel(word32 ra, word32 a0, word32 a1, word32 a3, word32 s3, word32 fflags, word32 frm, word32 dwArg04, word32 dwArg24, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tx_cfm
//      chan_ctxt_update
//      mm_monitor_channel_req_handler
//      mm_monitor_enable_req_handler
//      mm_start_req_handler
//      mm_hw_config_handler
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0158:[0..31]
// LiveOut: fflags frm ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
phy_set_channel_entry:
l2301415C:
	branch CONVERT(SLICE(a3 + 0xFF000694<32>, word16, 0), word16, word32) <=u 72<i32> l23014172
l23014170:
	branch a0 == 0<32> l230141BC
l23014172:
	branch a0 >u 1<32> l230141BC
l230141BC:
	s0Out = s0
	s1Out = s1
	s2Out = s2
	s3Out = s3
	fflagsOut = fflags
	frmOut = frm
	return ra
l23014178:
	word32 fflags_54
	word32 frm_55
	word32 s0_57
	word32 s1_58
	word32 s2_60
	word32 s3_61
	word32 ra_56 = phy_hw_set_channel(ra, a0, a3, a1, a1, fflags, frm, dwArg04, dwArg24, s3, dwArg0158, out s0_57, out s1_58, out s2_60, out s3_61, out fflags_54, out frm_55)
	Mem78[0x4201D142<32>:byte] = SLICE(s0_57, byte, 0)
	Mem79[0x4201D143<32>:byte] = SLICE(s3_61, byte, 0)
	Mem80[0x4201D13C<32>:word16] = SLICE(s2_60, word16, 0)
	Mem81[0x4201D13E<32>:word16] = SLICE(s1_58, word16, 0)
	s0Out = s0_57
	s1Out = s1_58
	s2Out = s2_60
	s3Out = s3_61
	fflagsOut = fflags_54
	frmOut = frm_55
	return ra_56
phy_set_channel_exit:


void phy_get_version(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_version_req_handler
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
phy_get_version_entry:
l230141BE:
	Mem7[Mem0[0x44C00000<32>:word32]:word32] = a0
	Mem9[a1:word32] = 0<32>
	return
phy_get_version_exit:


word32 phy_vht_supported(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse:  a4:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a5
// Preserved: sp
phy_vht_supported_entry:
l230141CC:
	word32 a0_10 = 1<32>
	branch a4 << 9<u32> < 0<32> l230141E2
l230141DC:
	a0_10 = 0<32>
l230141E2:
	return a0_10
phy_vht_supported_exit:


word32 phy_init(word32 ra, word32 s1, word32 dwArg38, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_monitor_enable_req_handler
//      mm_start_req_handler
// MayUse:  ra:[0..31] s1:[0..31] Stack +0038:[0..31]
// LiveOut: ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
phy_init_entry:
l230141E4:
	Mem13[0x44C01800<32>:word32] = 0<32>
	mdm_reset()
	Mem19[0x44C01820<32>:word32] = 525<i32>
	branch false l23014236
l23014236:
	Mem37[0x44C01820<32>:word32] = Mem19[0x44C00820<32>:int32] & -113<i32> | 0xFF0<32>
	word32 s1_43 = (s1 >>u 12<i32> & 0xF<32>) + 0xFFFFFFFF<32> & 255<i32>
	branch (s1_43 << 12<i32> & 0xF8000<32>) == 0<32> l2301427C
l2301427C:
	word32 a5_53 = Mem37[0x44C00820<32>:int32]
	Mem58[0x44C01820<32>:word32] = s1_43 << 12<i32> | a5_53 & 0xF8FFFFFF<32>
	word32 a4_60 = Mem58[0x44C00820<32>:int32]
	Mem65[0x44C01820<32>:word32] = (a5_53 & 0xF8FFFFFF<32>) >>u 19<i32> & 256<i32> | a4_60 & -257<i32>
	word32 a0_66 = phy_vht_supported(a4_60 & -257<i32>)
	word32 a5_69 = Mem65[0x44C00820<32>:int32]
	word32 a0_73 = a0_66 << 1<i32> | a5_69 & 0xFFFFFFFD<32>
	Mem74[0x44C01820<32>:word32] = a0_73
	word32 a5_82 = ((a5_69 & 0xFFFFFFFD<32>) >>u 30<i32> & 1<32>) << 16<i32> | Mem74[0x44C00820<32>:int32] & 0xEFFFFFFF<32>
	Mem83[0x44C01820<32>:word32] = a5_82
	word32 a5_92 = (a5_82 >>u 30<i32> & 1<32>) << 20<i32> | Mem83[0x44C00820<32>:int32] & 0xFFEFFFFF<32>
	Mem93[0x44C01820<32>:word32] = a5_92
	Mem100[(a5_92 & 0xFFC0FFFF<32> | 0x2D0000<32>) + 36<i32>:word32] = Mem93[a5_92 + 36<i32>:word32]
	Mem102[0x44C0189C<32>:word32] = 0xFFFFFFFF<32>
	Mem104[0x44C01824<32>:word32] = 525<i32>
	word32 s1_105 = Mem104[0x44C01000<32>:word32]
	branch false l23014340
l23014340:
	Mem122[0x44C01824<32>:word32] = Mem104[0x44C00824<32>:int32] & -113<i32> | 0xFF0<32>
	word32 s1_128 = (s1_105 >>u 4<i32> & 0xF<32>) + 0xFFFFFFFF<32> & 255<i32>
	branch (s1_128 << 20<i32> & 0xF800000<32>) == 0<32> l23014386
l23014386:
	Mem143[0x44C01824<32>:word32] = s1_128 << 20<i32> | Mem122[0x44C00824<32>:int32] & 0xFF8FFFFF<32>
	word32 a5_150 = mdm_txcbwmax_setf(a0_73 >>u 24<i32> & 3<32>)
	word32 a4_152 = Mem143[0x44C00824<32>:int32]
	Mem157[0x44C01824<32>:word32] = a5_150 >>u 18<i32> & 256<i32> | a4_152 & -257<i32>
	word32 a0_158 = phy_vht_supported(a4_152 & -257<i32>)
	word32 a5_161 = Mem157[0x44C00824<32>:int32]
	Mem166[0x44C01824<32>:word32] = a0_158 << 1<i32> | a5_161 & 0xFFFFFFFD<32>
	Mem174[0x44C01824<32>:word32] = (a5_161 & 0xFFFFFFFD<32>) >>u 31<i32> << 16<i32> | Mem166[0x44C00824<32>:int32] & 0xEFFFFFFF<32>
	Mem179[0x44C01834<32>:word32] = Mem174[0x44C00834<32>:int32] | 1<i32>
	Mem184[0x44C01818<32>:word32] = Mem179[0x44C00818<32>:int32] & 0xFFFBFFFF<32>
	Mem191[0x44C01830<32>:word32] = Mem184[0x44C00830<32>:int32] & 0xF00000FF<32> | 0x1FFFB00<32>
	Mem196[0x44C01830<32>:word32] = Mem191[0x44C00830<32>:int32] & -256<i32> | 15<i32>
	Mem199[0x44C0183C<32>:word32] = 0x4920492<32>
	Mem203[0x44C01874<32>:word32] = Mem199[0x44C00874<32>:int32] & 0xF7FFFFFF<32> | 0x8000000<32>
	word32 a4_209 = Mem203[0x44C0B500<32>:int32] & 0xFCFFFFFF<32> | 0x2000000<32>
	Mem210[0x44C0B500<32>:word32] = a4_209
	word32 a5_211 = Mem210[a4_209:word32]
	branch a4_209 << 0xA<u32> >= 0<32> l23014498
l2301446C:
	Mem215[a5_211 + 272<i32>:word32] = Mem210[a5_211 + 272<i32>:int32] & 0xFFFFFFF7<32>
	Mem218[a5_211 + 272<i32>:word32] = Mem215[a5_211 + 272<i32>:int32] & 0xFFFFFFFB<32>
	Mem221[a5_211 + 272<i32>:word32] = Mem218[a5_211 + 272<i32>:int32] & 0xFFFFFFFD<32>
	Mem224[a5_211 + 272<i32>:word32] = Mem221[a5_211 + 272<i32>:int32] & 0xFFFFFFFE<32>
	Mem225[a5_211 + 280<i32>:word32] = 0<32>
l23014498:
	Mem228[5<32>:word32] = 0x44C0B000<32>
	Mem232[0x44C0B390<32>:word32] = Mem228[0x44C0B390<32>:int32] & 0xFFFFFFFC<32> | 1<i32>
	Mem235[0x44C0B3BC<32>:word32] = 0x3D0900<32>
	Mem238[0x44C0B414<32>:word32] = Mem235[0x44C0B414<32>:int32] | 256<i32>
	word32 a2_241
	word32 s2_249
	word32 s3_250
	word32 s0_247 = agc_config(out a2_241, out s2_249, out s3_250)
	Mem262[s0_247 + 912<i32>:word32] = Mem238[s0_247 + 912<i32>:int32] & 0xFEFFFFFF<32> | 0x1000000<32>
	Mem269[0x44C01874<32>:word32] = Mem262[0x44C00874<32>:int32] & 0xDFFFFFFF<32> | 0x20000000<32>
	word32 a4_273 = 0x54C0A000<32>
l2301450A:
	a4_273 = a4_273 + 4<32>
	Mem281[a4_273 + 4092<i32>:word32] = a2_241
	branch a4_273 != 0x54C0A800<32> l2301450A
l23014518:
	Mem288[0x44C01874<32>:word32] = Mem281[0x44C00874<32>:int32] & 0xDFFFFFFF<32>
	word32 a5_290 = Mem288[0x44C0B390<32>:int32]
	Mem294[0x44C0B390<32>:word32] = a5_290 & 0xFEFFFFFF<32>
	Mem301[(a5_290 & 0xFEFFFFFF<32> & 0xFC00FFFF<32> | 0x140000<32>) + 32<i32>:word32] = Mem294[(a5_290 & 0xFEFFFFFF<32>) + 32<i32>:word32]
	Mem306[Mem301[s2_249:int32]:word32] = 0x4201D138<32>
	Mem309[0xFF0103<32>:word32] = 0x4201D138<32>
	Mem312[0x5000107<32>:word32] = 0x4201D138<32>
	trpc_init()
	pa_init()
	word32 ra_329 = phy_tcal_reset(ra)
	0<32> = dwArg38
l23014588_thunk_phy_tcal_start:
	phy_tcal_start()
	s3Out = s3_250
	return ra_329
phy_init_exit:
l2301436C:
	assert_err()
l23014326:
	assert_err()
l23014262:
	assert_err()
l2301421C:
	assert_err()


word32 phy_get_nss(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_config_req_handler
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
phy_get_nss_entry:
l2301458C:
	return (a0 >>u 8<i32> & 0xF<32>) + 0xFFFFFFFF<32> & 255<i32>
phy_get_nss_exit:


word32 phy_get_ntx(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_frame_init
//      rc_init
//      hal_machw_init
//      txl_buffer_init
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
phy_get_ntx_entry:
l2301459E:
	return (a0 >>u 4<i32> & 0xF<32>) + 0xFFFFFFFF<32> & 255<i32>
phy_get_ntx_exit:


void phy_stop()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_reset_req_handler
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
phy_stop_entry:
l230145B0:
	return
phy_stop_exit:


word32 phy_ldpc_tx_supported(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rc_init
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
phy_ldpc_tx_supported_entry:
l230145B2:
	return a0 >>u 26<i32> & 1<32>
phy_ldpc_tx_supported_exit:


word32 phy_get_mac_freq()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_init
// MayUse: 
// LiveOut: a0
// Trashed: a0
// Preserved: sp
phy_get_mac_freq_entry:
l230145BE:
	return 40<i32>
phy_get_mac_freq_exit:


word32 phy_get_rf_gain_idx(word32 a0, word32 a1, word32 a3, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tpc_update_vif_tx_power
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: s0 sp
phy_get_rf_gain_idx_entry:
l230145C4:
	word32 a3_19
	word32 a4_20
	word32 a0_16 = rfc_get_power_level(2<32>, CONVERT(Mem7[a0:int8], int8, int32) + 0xA<32>, a3, out a3_19, out a4_20)
	Mem23[a1:byte] = SLICE(a0_16, byte, 0)
	a3Out = a3_19
	a4Out = a4_20
	return a0_16
phy_get_rf_gain_idx_exit:


word32 phy_get_rf_gain_capab(word32 a0, word32 a1, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_associate_req
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: s0 s8
// Trashed: a0 a2 a5 s0 s8 t3
// Preserved: sp
phy_get_rf_gain_capab_entry:
l230145E8:
	Mem14[a0:byte] = SLICE(trpc_get_rf_max_power(), byte, 0)
	Mem18[a1:byte] = SLICE(trpc_get_rf_min_power(), byte, 0)
	s8Out = dwLoc1C
	return a0
phy_get_rf_gain_capab_exit:


void mpif_clk_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
mpif_clk_init_entry:
l23014608:
	return
mpif_clk_init_exit:


void phy_mdm_isr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
phy_mdm_isr_entry:
l2301460A:
	return
phy_mdm_isr_exit:


void phy_rc_isr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
phy_rc_isr_entry:
l2301460C:
	word32 a5_5 = Mem0[0x44C0B41C<32>:int32]
	Mem6[0x44C0B420<32>:word32] = a5_5
	branch (a5_5 & 256<i32>) == 0<32> l23014622
l23014622:
	return
l2301461E:
l2301461E_thunk_mdm_reset:
	mdm_reset()
	return
phy_rc_isr_exit:


void pa_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse: 
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
pa_init_entry:
l23014624:
	word32 a5_26 = 0x420117EC<32>
l23014630:
	Mem7[a5_26 + 115<i32>:byte] = 0<8>
	Mem8[a5_26 + 120<i32>:word32] = 0<32>
	Mem9[a5_26 + 108<i32>:word32] = 0<32>
	Mem10[a5_26 + 104<i32>:byte] = 0<8>
	Mem11[a5_26 + 135<i32>:byte] = 0<8>
	Mem12[a5_26 + 128<i32>:word32] = 0<32>
	Mem13[a5_26 + 136<i32>:byte] = 0<8>
	Mem14[a5_26 + 137<i32>:byte] = 0<8>
	word32 a4_15 = a5_26
	word32 a3_16 = 8<32>
l23014654:
	Mem18[a4_15 + 16<i32>:byte] = 0<8>
	Mem19[a4_15 + 8<i32>:byte] = 0<8>
	Mem20[a4_15 + 9<i32>:byte] = 0<8>
	Mem21[a4_15 + 12<i32>:word32] = 0<32>
	a3_16 = a3_16 + 0xFFFFFFFF<32>
	a4_15 = a4_15 + 0xC<32>
	branch a3_16 != 0<32> l23014654
l2301466A:
	a5_26 = a5_26 + 140<i32>
	branch a5_26 != 0x42011A1C<32> l23014630
l23014672:
	return
pa_init_exit:


word32 pa_input(word32 ra, word32 a0, word32 fflags, word32 frm, word32 dwArg38, ptr32 & a2Out, ptr32 & fa0Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_cntrl_evt
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut: a2 fa0 fflags frm ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fflags frm ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
pa_input_entry:
l23014674:
	branch a0 >u 3<32> l23014774
l23014774:
	a2Out = 3<32>
	fa0Out = fa0
	fflagsOut = fflags
	frmOut = frm
	return ra
l2301467A:
	word32 s1_114
	word32 s2_115
	word32 s0_113
	word32 ra_112
	word32 fflags_110
	word32 a0_132
	word32 a1_133
	word32 frm_111
	word32 a1_19 = Mem17[a0 + 32<i32>:word32]
	word32 s2_22 = CONVERT(Mem17[a0 + 0x420118E0<32>:int8], int8, int32)
	Mem23[a0 + 108<i32>:word32] = a0 + 0x42011878<32>
	word32 a4_26 = s2_22 + 0xC<32> + (a0 + 140<i32>)
	Mem29[a4_26 + 0x420117FC<32>:byte] = 1<8>
	word32 a4_30 = CONVERT(Mem29[a1_19 + 51<i32>:int8], int8, int32)
	Mem31[a4_26 + 0x420117F4<32>:byte] = SLICE(a4_30, byte, 0)
	word32 a4_34 = a4_30 << 20<i32> >> 28<i32>
	Mem35[a4_26 + 0x420117F5<32>:byte] = SLICE(a4_34, byte, 0)
	word32 a1_36 = Mem35[a4_34 + 44<i32>:word32]
	branch (a4_34 & 0x70000<32>) != 0<32> l2301473A
l230146D2:
	a1_36 = Mem35[(a4_34 & 0x70000<32>) + 40<i32>:word32]
	word32 a0_40 = CONVERT(Mem35[a1_36 + 59<i32>:byte], byte, word32)
	branch ((a4_34 & 0x70000<32>) >>u 12<i32> & 0xF<32>) >u 3<32> l2301473A
l2301473A:
	word32 a1_53
	word32 a0_64
	word32 a1_65
	word32 fflags_79
	word32 frm_80
	word32 s9_331
	word32 s3_330
	word32 a3_329
	word32 s9_328
	word32 s8_327
	word32 s7_326
	word32 s6_325
	word32 s5_324
	word32 s4_323
	word32 s3_322
	word32 s2_321
	word32 a7_320
	word32 a5_319
	word32 a4_318
	word32 s1_317
	word32 s0_316
	ra_112 = __divdf3(__muldf3(ra, __floatsidf(0<32> - CONVERT(SLICE((CONVERT(Mem35[a1_36 + 60<i32>:byte], byte, word32) << 8<i32>) + CONVERT(Mem35[a1_36 + 59<i32>:byte], byte, word32), word16, 0), word16, int32), out a1_53), a1_53, Mem35[0x23076798<32>:int32], Mem35[0x2307679C<32>:int32], fflags, frm, out s0_316, out s1_317, out a0_64, out a1_65, out a4_318, out a5_319, out a7_320, out s2_321, out s3_322, out s4_323, out s5_324, out s6_325, out s7_326, out s8_327, out s9_328, out fflags_79, out frm_80), a0_64, a1_65, Mem35[0x230767A0<32>:int32], Mem35[0x230767A4<32>:int32], fflags_79, frm_80, out s0_113, out s1_114, out a0_132, out a1_133, out a3_329, out s2_115, out s3_330, out s9_331, out fflags_110, out frm_111)
l230146E0:
	word32 a4_332
	word32 a1_126
	word32 a5_333
	word32 a7_334
	word32 s3_335
	word32 s4_336
	word32 s5_337
	word32 s6_338
	word32 s7_339
	word32 s8_340
	word32 s9_341
	ra_112 = __muldf3(ra, __floatsidf(CONVERT(SLICE(a0_40, byte, 0), byte, int32), out a1_126), a1_126, Mem35[0x23076790<32>:int32], Mem35[0x23076794<32>:int32], fflags, frm, out s0_113, out s1_114, out a0_132, out a1_133, out a4_332, out a5_333, out a7_334, out s2_115, out s3_335, out s4_336, out s5_337, out s6_338, out s7_339, out s8_340, out s9_341, out fflags_110, out frm_111)
l230146F8:
	word32 fa0_172
	word32 a2_342
	word32 a3_343
	word32 a4_344
	word32 a5_345
	__truncdfsf2(ra_112, a0_132, a1_133, fflags_110, frm_111, out a2_342, out a3_343, out a4_344, out a5_345, out fa0_172)
	Mem183[a0_132 + 12<i32>:real32] = s2_115 + 0xC<32> + (s0_113 + 140<i32>) + s1_114
	word32 a5_185 = 0<32>
	branch s2_115 == 7<32> l23014720
l23014718:
	a5_185 = CONVERT(SLICE(s2_115 + 1<32>, byte, 0), byte, int32)
l23014720:
	Mem195[s0_113 + 140<i32> + s1_114 + 104<i32>:byte] = SLICE(a5_185, byte, 0)
	0<32> = dwArg38
	a2Out = dwArg10
	fa0Out = fa0_172
	fflagsOut = fflags_110
	frmOut = frm_111
	return ra_112
pa_input_exit:


word32 pa_adapt(word32 ra, word32 a0, word32 a2, word32 fa0, word32 fflags, word32 frm, word32 mstatus, word32 dwArgC8, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_cntrl_evt
// MayUse:  a0:[0..31] a2:[0..31] fa0:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +00C8:[0..31]
// LiveOut: a4 a5 fflags frm ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa4 fa5 fflags frm ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
pa_adapt_entry:
l23014776:
	branch a0 >u 3<32> l23014A16
l23014A16:
	s1Out = s1
	a4Out = a4
	a5Out = 3<32>
	fflagsOut = fflags
	frmOut = frm
	return ra
l2301477C:
	word32 a4_277
	Mem28[a2 + 1<32>:word32] = Mem22[a2:word32]
	word32 s0_251 = 0x420117EC<32>
	word32 t3_33 = CONVERT(Mem28[a0 + 0x420118E0<32>:int8], int8, int32)
	branch t3_33 != 0<32> l23014920
l23014920:
	a4_277 = a0 + 0x94<32> + (t3_33 + 0xB<32>) + 0x420117EC<32>
l230147BA:
	a4_277 = a0 + 0x420118D4<32>
l230147C0:
	word32 a5_134 = CONVERT(Mem28[a4_277 + 8<i32>:byte], byte, word32)
	branch a5_134 == 0<32> l2301490C
l230147C8:
	word32 s2_48 = CONVERT(Mem28[a4_277:int8], int8, int32)
	word32 a1_51 = CONVERT(Mem28[a0 + 0x420118EB<32>:int8], int8, int32)
	branch a1_51 == 0<32> l23014968
l23014968:
	word32 a5_52 = Mem28[a1_51 + 120<i32>:word32]
	branch a1_51 <=u 6<32> l230149D0
l230149D0:
	Mem55[a1_51 + 0x79<32>:word32] = a5_52
l23014970:
	Mem57[a5_52 + 115<i32>:byte] = 1<8>
	word32 a6_58 = 1<32>
	word32 a7_59 = 100<i32>
	word32 t1_60 = -100<i32>
	word32 a5_61 = 0<32>
l2301498A:
	word32 a3_78 = CONVERT(Mem57[(t3_33 - a6_58 | 8<32>) + 0xC<32> + (a0 + 140<i32>) + 0x420117F4<32>:int8], int8, int32)
	a5_61 = a5_61 + a3_78
	branch t1_60 >= a3_78 l230149A6
l230149A4:
	t1_60 = a3_78
l230149A6:
	branch a3_78 >= a7_59 l230149AC
l230149AA:
	a7_59 = a3_78
l230149AC:
	a6_58 = a6_58 + 1<32>
	branch a6_58 != 7<32> l2301498A
l230149B2:
	Mem110[a0 + 0x420118E8<32>:byte] = SLICE(a5_61 - t1_60 - a7_59 ^ 4<32>, byte, 0)
l230147E0:
	word32 a1_111 = CONVERT(Mem28[a0 + 0x420118EC<32>:byte], byte, word32)
	branch a1_111 <=u 4<32> l23014934
l23014934:
	branch s2_48 >u 0<i32> l230147F6
l23014940:
	word32 a6_115 = CONVERT(Mem28[a0 + 0x420118E8<32>:int8], int8, int32)
	word32 a3_117 = s2_48 - a6_115
	branch a3_117 <=u 0xFFFFFFF6<32> l2301495A
l2301495A:
	Mem121[a0 + 0x420118EC<32>:byte] = 0<8>
	Mem122[a0 + 0x420118E8<32>:byte] = SLICE((a3_117 >> 2<i32>) + a6_115, byte, 0)
l23014952:
	Mem124[a0 + 0x420118EC<32>:byte] = SLICE(a1_111 + 1<32>, byte, 0)
l230147EA:
	Mem125[a0 + 0x420118EC<32>:byte] = 0<8>
	Mem126[a0 + 0x420118EB<32>:byte] = 0<8>
	Mem127[a0 + 0x420118F0<32>:word32] = 0<32>
l230147F6:
	a5_134 = 0xF<32>
	branch (a2 + 1<32> & 0xF<32>) != 0xF<32> l2301490C
l230147FE:
	s1 = a0
	branch s2_48 - CONVERT(Mem142[a0 + 0x420118E8<32>:int8], int8, int32) >u 0xFFFFFFF6<32> l23014884
l2301481A:
	word32 a5_161
	branch CONVERT(fa0 >= 0.0F, bool, word32) == 0<32> l230149D6
l230149D6:
	a5_161 = CONVERT(fa0 < Mem142[0x23076770<32>:real32], bool, word32)
l23014828:
	a5_161 = CONVERT(Mem142[0x2307676C<32>:real32] < fa0, bool, word32)
l23014834:
	branch a5_161 == 0<32> l23014884
l23014836:
	word32 a3_210
	word32 a2_209
	word32 a1_188
	word32 a0_187 = __extendsfdf2(ra, fa0, fflags, frm, out a1_188)
	branch s2_48 >= -85<i32> l230149E4
l230149E4:
	word32 a1_752
	__extendsfdf2(ra, Mem142[a0 + 0x420118F8<32>:real32], fflags, frm, out a1_752)
	a2_209 = Mem142[0x23076788<32>:int32]
	a3_210 = Mem142[0x2307678C<32>:int32]
l23014846:
	word32 a1_753
	__extendsfdf2(ra, Mem142[a0 + 0x420118F8<32>:real32], fflags, frm, out a1_753)
	a2_209 = Mem142[0x23076780<32>:int32]
	a3_210 = Mem142[0x23076784<32>:int32]
l23014868:
	word32 a0_233
	word32 a1_234
	word32 s6_257
	word32 s7_258
	word32 s9_762
	word32 s4_759
	word32 s8_761
	word32 s5_760
	word32 s2_757
	word32 s3_758
	word32 a4_754
	word32 a7_756
	word32 a5_755
	ra = __muldf3(ra, a0_187, a1_188, a2_209, a3_210, fflags, frm, out s0_251, out s1, out a0_233, out a1_234, out a4_754, out a5_755, out a7_756, out s2_757, out s3_758, out s4_759, out s5_760, out s6_257, out s7_258, out s8_761, out s9_762, out fflags, out frm)
	word32 a1_266
	word32 a0_265 = __adddf3(ra, s6_257, s7_258, a0_233, a1_234, fflags, frm, out a1_266)
	word32 fa0_281
	word32 a3_764
	word32 a5_765
	word32 a2_763
	__truncdfsf2(ra, a0_265, a1_266, fflags, frm, out a2_763, out a3_764, out a4_277, out a5_765, out fa0_281)
	Mem283[a0_265 + 512<i32>:real32] = fa0_281
l23014884:
	word32 fa5_291 = Mem290[s1 + 140<i32> + s0_251 + 128<i32>:real32]
	branch CONVERT(fa5_291 >= 0.0F, bool, word32) == 0<32> l23014A08
l23014A08:
	a5_134 = CONVERT(Mem290[0x23076778<32>:real32] < fa5_291, bool, word32)
l2301489E:
	a5_134 = CONVERT(fa5_291 < Mem290[0x23076774<32>:real32], bool, word32)
l230148AA:
	branch a5_134 != 0<32> l2301490C
l230148AC:
	__csrrc(mstatus, 8<32>)
	branch CONVERT(Mem290[s1 + 140<i32> + s0_251 + 128<i32>:real32] > 0.0F, bool, word32) == 0<32> l230148D2
l230148C8:
	branch hal_get_capcode() == 0<32> l230148D2
l230148CC:
	word32 a5_766
	a4_277 = hal_set_capcode(hal_get_capcode() + 0xFFFFFFFF<32>, out a5_766)
l230148D2:
	a5_134 = CONVERT(Mem290[s1 + 140<i32> + s0_251 + 128<i32>:real32] < 0.0F, bool, word32)
	branch a5_134 == 0<32> l230148FA
l230148EA:
	a5_134 = 62<i32>
	branch hal_get_capcode() >u 62<i32> l230148FA
l230148F4:
	a4_277 = hal_set_capcode(hal_get_capcode() + 1<32>, out a5_134)
l230148FA:
	s1 = s1 + 140<i32>
	Mem354[s0_251 + s1 + 128<i32>:word32] = 0<32>
	__csrrs(mstatus, 8<32>)
l2301490C:
	0<32> = dwArgC8
	s1Out = s1
	a4Out = a4_277
	a5Out = a5_134
	fflagsOut = fflags
	frmOut = frm
	return ra
pa_adapt_exit:


word32 hal_get_capcode()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pa_adapt
// MayUse: 
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
hal_get_capcode_entry:
l23014A18:
	return Mem0[0x4000F884<32>:int32] >>u 22<i32> & 63<i32>
hal_get_capcode_exit:


word32 hal_set_capcode(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pa_adapt
// MayUse:  a0:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
hal_set_capcode_entry:
l23014A28:
	word32 a4_5 = Mem0[0x4000F884<32>:int32]
	word32 a5_13 = a0 << 0x10<u32> | a0 << 22<i32> | a4_5 & 0xF000FFFF<32>
	Mem14[0x40010884<32>:word32] = a5_13
	a5Out = a5_13
	return a4_5 & 0xF000FFFF<32>
hal_set_capcode_exit:


word32 hal_get_temperature(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_callback
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
hal_get_temperature_entry:
l23014A48:
	Mem7[a0:word16] = SLICE(CONVERT(Mem0[0x4200DCD0<32>:uint16], uint16, word32), word16, 0)
	return 1<32>
hal_get_temperature_exit:


void hal_set_temperature(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_callback
// MayUse:  a0:[0..15]
// LiveOut:
// Trashed: a5
// Preserved: sp
hal_set_temperature_entry:
l23014A58:
	Mem5[0x4200ECD0<32>:word16] = SLICE(a0, word16, 0)
	return
hal_set_temperature_exit:


void trpc_update_power(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_update_power_table
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
trpc_update_power_entry:
l23014A62:
	word32 a5_24 = 0x4200CEFC<32>
	word32 a3_23 = 0<32>
l23014A70:
	word32 t1_10 = a0 + a3_23
	word32 a4_11 = 0<32>
l23014A76:
	Mem20[a5_24 + a4_11:byte] = SLICE(CONVERT(Mem15[t1_10 + a4_11:int8], int8, int32), byte, 0)
	a4_11 = a4_11 + 1<32>
	branch a4_11 != 8<32> l23014A76
l23014A8C:
	a3_23 = a3_23 + 8<32>
	a5_24 = a5_24 + 8<32>
	branch a3_23 != 0x18<32> l23014A70
l23014A94:
	return
trpc_update_power_exit:


void trpc_power_get(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_power_table_get
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
trpc_power_get_entry:
l23014A96:
l23014AA0_thunk_memcpy:
	word32 a1_20
	word32 a2_21
	word32 a3_22
	word32 a4_23
	word32 a5_24
	word32 a6_25
	word32 a7_26
	memcpy(a0, 0x4200CEFC<32>, 0x18<32>, out a1_20, out a2_21, out a3_22, out a4_23, out a5_24, out a6_25, out a7_26)
	return
trpc_power_get_exit:


void trpc_update_power_11b(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_update_power_rate_11b
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
trpc_update_power_11b_entry:
l23014AA4:
	word32 a5_14 = 0<32>
l23014AB0:
	Mem15[a5_14 + 0x4200CEFC<32>:byte] = SLICE(CONVERT(Mem10[a0 + a5_14:int8], int8, int32), byte, 0)
	a5_14 = a5_14 + 1<32>
	branch a5_14 != 4<32> l23014AB0
l23014AC6:
	return
trpc_update_power_11b_exit:


void trpc_update_power_11g(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_update_power_rate_11g
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
trpc_update_power_11g_entry:
l23014AC8:
	word32 a5_13 = 0x4200CEFC<32>
	word32 a4_12 = 0<32>
l23014AD4:
	a5_13 = a5_13 + 1<32>
	Mem15[a5_13 + 7<i32>:byte] = SLICE(CONVERT(Mem10[a0 + a4_12:int8], int8, int32), byte, 0)
	a4_12 = a4_12 + 1<32>
	branch a4_12 != 8<32> l23014AD4
l23014AE8:
	return
trpc_update_power_11g_exit:


void trpc_update_power_11n(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_update_power_rate_11n
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
trpc_update_power_11n_entry:
l23014AEA:
	word32 a5_13 = 0x4200CEFC<32>
	word32 a4_12 = 0<32>
l23014AF6:
	a5_13 = a5_13 + 1<32>
	Mem15[a5_13 + 15<i32>:byte] = SLICE(CONVERT(Mem10[a0 + a4_12:int8], int8, int32), byte, 0)
	a4_12 = a4_12 + 1<32>
	branch a4_12 != 8<32> l23014AF6
l23014B0A:
	return
trpc_update_power_11n_exit:


void trpc_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse: 
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
trpc_init_entry:
l23014B0C:
	Mem12[0x4201D148<32>:word16] = 0xF98A<16>
	Mem16[0x4201D144<32>:byte] = SLICE(rf_pri_get_txgain_max(), byte, 0)
	word32 a0_17 = rf_pri_get_txgain_min()
	Mem21[0x4201D146<32>:byte] = 0x1E<8>
	Mem23[0x4201D145<32>:byte] = SLICE(a0_17, byte, 0)
	Mem24[0x4201D14A<32>:word16] = 0x19<16>
	return
trpc_init_exit:


word32 trpc_get_rf_max_power()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_get_rf_gain_capab
// MayUse: 
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
trpc_get_rf_max_power_entry:
l23014B48:
	return CONVERT(Mem0[0x4201D144<32>:int8], int8, int32)
trpc_get_rf_max_power_exit:


word32 trpc_get_rf_min_power()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_get_rf_gain_capab
// MayUse: 
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
trpc_get_rf_min_power_entry:
l23014B52:
	return CONVERT(Mem0[0x4201D145<32>:int8], int8, int32)
trpc_get_rf_min_power_exit:


word32 trpc_get_power_idx(word32 ra, word32 a0, word32 a1, word32 a2, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      trpc_get_default_power_idx
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: s0 sp
trpc_get_power_idx_entry:
l23014B5C:
	word32 a4_11 = 2<32>
	branch a0 >u 2<32> l23014B70
l23014B6C:
	a4_11 = a0 & 255<i32>
l23014B70:
	word32 a7_13 = 3<32>
	branch a0 == 0<32> l23014B76
l23014B74:
	a7_13 = 7<32>
l23014B76:
	word32 a5_21 = CONVERT(Mem7[0x4201D146<32>:byte], byte, word32)
	word32 a0_20 = CONVERT(Mem7[0x4201D144<32>:int8], int8, int32)
	branch a0_20 >= CONVERT(SLICE(a5_21, byte, 0), byte, int32) l23014B98
l23014B96:
	a5_21 = a0_20
l23014B98:
	branch a2 >= CONVERT(SLICE(a5_21, byte, 0), byte, int32) l23014BA4
l23014BA2:
	a5_21 = a2
l23014BA4:
	word32 a5_35 = a5_21 << 24<i32>
	branch a7_13 >= a1 l23014BAE
l23014BAC:
	a1 = a7_13
l23014BAE:
	word32 a4_60 = CONVERT(Mem7[a1 + ((a4_11 << 3<u32>) + 0x4200CEFC<32>):byte], byte, word32)
	branch a5_35 >> 24<i32> >= CONVERT(SLICE(a4_60, byte, 0), byte, int32) l23014BCE
l23014BCC:
	a4_60 = a5_35 >> 24<i32>
l23014BCE:
	word32 a5_70 = CONVERT(Mem7[0x4201D145<32>:byte], byte, word32)
	branch CONVERT(SLICE(a5_70, byte, 0), byte, int32) >= CONVERT(SLICE(a4_60, byte, 0), byte, int32) l23014BE4
l23014BE2:
	a5_70 = a4_60
l23014BE4:
	word32 a1_91
	word32 a4_209
	word32 a1_122
	word32 a1_131
	word32 a3_133
	word32 a5_210
	word32 a0_130 = __fixdfsi(ra, __adddf3(ra, __floatsidf(CONVERT(SLICE(a5_70, byte, 0), byte, int32) + -510<i32> + a0_20 ^ 512<i32>, out a1_91), a1_91, Mem7[0x230767A8<32>:int32], Mem7[0x230767AC<32>:int32], fflags, frm, out a1_122), a1_122, fflags, frm, out a1_131, out a3_133, out a4_209, out a5_210)
	word32 a5_138 = 3<32>
	branch a0 == 0<32> l23014C1C
l23014C1A:
	a5_138 = 0<32>
l23014C1C:
	word32 a5_148 = a5_138 + (a0_130 & 255<i32>)
	word32 a0_151 = a5_148 & 255<i32>
	branch (a5_148 & 255<i32>) <=u 0xF<32> l23014C2C
l23014C2A:
	a0_151 = 0xF<32>
l23014C2C:
	a1Out = a1_131
	a3Out = a3_133
	a4Out = 0xF<32>
	a5Out = a5_148 & 255<i32>
	return a0_151 << 2<i32> & 252<i32>
trpc_get_power_idx_exit:


word32 trpc_get_default_power_idx(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tpc_update_vif_tx_power
//      tpc_get_vif_tx_power_vs_rate
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
trpc_get_default_power_idx_entry:
l23014C3A:
	word32 a4_18 = a0 & 255<i32>
	branch a0 <=u 2<32> l23014C46
l23014C44:
	a4_18 = 2<32>
l23014C46:
	word32 a5_10 = 3<32>
	branch a0 == 0<32> l23014C4C
l23014C4A:
	a5_10 = 7<32>
l23014C4C:
	branch a5_10 >= a1 l23014C52
l23014C50:
	a1 = a5_10
l23014C52:
	word32 a2_28 = CONVERT(Mem0[(a4_18 << 3<u32>) + 0x4200CEFC<32> + a1:int8], int8, int32)
	word32 a1_29 = a1 & 255<i32>
l23014C6C_thunk_trpc_get_power_idx:
	word32 a1_44
	word32 a3_46
	word32 a4_47
	word32 a5_48
	word32 a0_43 = trpc_get_power_idx(ra, a4_18, a1_29, a2_28, fflags, frm, out a1_44, out a3_46, out a4_47, out a5_48)
	a1Out = a1_44
	a3Out = a3_46
	a4Out = a4_47
	a5Out = a5_48
	return a0_43
trpc_get_default_power_idx_exit:


void trpc_update_vs_channel(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
// MayUse:  a0:[0..15]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
trpc_update_vs_channel_entry:
l23014C70:
	Mem11[0x4201D148<32>:word16] = SLICE(a0, word16, 0)
	Mem15[0x4201D144<32>:byte] = SLICE(rf_pri_get_txgain_max(), byte, 0)
	Mem19[0x4201D145<32>:byte] = SLICE(rf_pri_get_txgain_min(), byte, 0)
	return
trpc_update_vs_channel_exit:


void trpc_update_vs_temperature(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_txpwr
// MayUse:  a0:[0..7]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
trpc_update_vs_temperature_entry:
l23014C9A:
	Mem11[0x4201D14A<32>:byte] = SLICE(a0, byte, 0)
	Mem15[0x4201D144<32>:byte] = SLICE(rf_pri_get_txgain_max(), byte, 0)
	Mem19[0x4201D145<32>:byte] = SLICE(rf_pri_get_txgain_min(), byte, 0)
	return
trpc_update_vs_temperature_exit:


word32 phy_tcal_reset(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse:  ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
phy_tcal_reset_entry:
l23014CC4:
	word32 t1_36
	word32 a0_37
	word32 a1_38
	word32 a2_39
	word32 a3_40
	word32 a4_41
	word32 a5_42
	word32 ra_19 = memset(ra, 0x42011A1C<32>, 0<32>, 56<i32>, out t1_36, out a0_37, out a1_38, out a2_39, out a3_40, out a4_41, out a5_42)
	Mem23[0x2D<32>:word32] = 0x42011A1C<32>
	Mem24[0x31<32>:word32] = 0x42011A1C<32>
	Mem25[0x35<32>:word32] = 0x42011A1C<32>
	Mem26[0x39<32>:word32] = 0x42011A1C<32>
	Mem27[0x42011A1C<32>:word16] = 0x19<16>
	Mem29[0x42011A50<32>:byte] = 1<8>
	return ra_19
phy_tcal_reset_exit:


void phy_tcal_start()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_init
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
phy_tcal_start_entry:
l23014CFC:
	Mem5[0x42012A50<32>:byte] = 1<8>
	return
phy_tcal_start_exit:


void phy_tcal_txpwr(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_callback
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: s0 sp
phy_tcal_txpwr_entry:
l23014D08:
	rf_pri_tx_gain_comp(a0, a1, a3)
	word32 a0_23 = CONVERT(SLICE(a0, byte, 0), byte, int32)
l23014D20_thunk_trpc_update_vs_temperature:
	trpc_update_vs_temperature(a0_23)
	return
phy_tcal_txpwr_exit:


word32 phy_tcal_handle(word32 s0, word32 a1, word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_callback
// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] s0:[16..31]
// LiveOut: a4 a5 s0 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t1 t3
// Preserved: sp
phy_tcal_handle_entry:
l23014D24:
	word32 a5_14
	int16 wLoc12_95 = SLICE(s0, int16, 16)
	branch hal_get_temperature(fp + 0xFFFFFFEE<32>) == 0<32> l23014DB6
l23014D38:
	phy_tcal_txpwr(CONVERT(wLoc12_95, int16, int32), a1, a3)
	word32 a5_26 = CONVERT(wLoc12_95, int16, word32)
	branch CONVERT(SLICE(a5_26, word16, 0), word16, int32) <= 125<i32> l23014D56
l23014D52:
	a5_26 = 125<i32>
l23014D56:
	word32 a4_32 = a5_26 << 0x10<u32>
	a4 = a4_32 >> 16<i32>
	branch a4_32 >> 16<i32> >= -40<i32> l23014D68
l23014D64:
	a5_26 = -40<i32>
l23014D68:
	word32 s2_37 = a5_26 << 0x10<u32>
	int16 wLoc12_96 = SLICE(a5_26, word16, 0)
	word32 a5_43 = CONVERT(SLICE(a5_26 + 0xFFFFFFE7<32>, word16, 0), word16, int32)
	branch a5_43 > 0<32> l23014DC2
l23014DC2:
	s0 = CONVERT(SLICE(0<32> - (a5_43 + 6<32> >> 8<i32>), word16, 0), word16, int32)
l23014D7E:
	s0 = a5_43 + 0xFFFFFFFA<32> >> 8<u32>
l23014D88:
	branch s0 == Mem40[0x42011A48<32>:word32] l23014DAE
l23014D9A:
	__csrrc(mstatus, 8<32>)
	a4 = phy_config_rxgain(s0)
	__csrrs(mstatus, 8<32>)
	Mem76[0x42011A38<32>:word32] = s2_37 >> 0x10<u32>
	Mem77[s0 + 44<i32>:word32] = 0x42011A1C<32>
l23014DAE:
	a5_14 = CONVERT(wLoc12_96, int16, word32)
	Mem83[0x42011A1C<32>:word16] = SLICE(a5_14, word16, 0)
l23014DB6:
	a4Out = a4
	a5Out = a5_14
	s4Out = dwArg04
	return s0
phy_tcal_handle_exit:


word32 phy_tcal_callback(word32 s0, word32 a0, word32 a1, word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a4 a5 s0 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t1 t3
// Preserved: sp
phy_tcal_callback_entry:
l23014DD4:
	hal_set_temperature(a0)
	word32 a5_9 = CONVERT(Mem5[0x42011A50<32>:byte], byte, word32)
	branch a5_9 == 0<32> l23014DEE
l23014DEE:
	a4Out = a4
	a5Out = a5_9
	s4Out = s4
	return s0
l23014DE6:
l23014DEA_thunk_phy_tcal_handle:
	word32 a5_19
	word32 s4_21
	word32 a4_27
	word32 s0_29 = phy_tcal_handle(s0, a1, a3, mstatus, out a4_27, out a5_19, out s4_21)
	a4Out = a4_27
	a5Out = a5_19
	s4Out = s4_21
	return s0_29
phy_tcal_callback_exit:


word32 rf_fsm_ctrl_en_setf(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
//      rfc_init
//      cmd_wifi_coex_rf_force_on
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
rf_fsm_ctrl_en_setf_entry:
l23014DF4:
	word32 a4_5 = Mem0[a5 + 4<i32>:word32]
	Mem10[(a0 << 1<i32> | a5 & 0xFFFFFFFD<32>) + 4<i32>:word32] = a4_5
	a5Out = a5 & 0xFFFFFFFD<32>
	return a4_5
rf_fsm_ctrl_en_setf_exit:


word32 rf_fsm_st_dbg_en_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
//      rfc_init
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a4 a5
// Preserved: sp
rf_fsm_st_dbg_en_setf_entry:
l23014E04:
	word32 a5_5 = Mem0[0x4000126C<32>:int32]
	Mem10[0x4000126C<32>:word32] = a0 << 3<i32> | a5_5 & 0xFFFFFFF7<32>
	return a5_5 & 0xFFFFFFF7<32>
rf_fsm_st_dbg_en_setf_exit:


void rf_tx_dvga_gain_qdb_gc3_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc3_setf_entry:
l23014E18:
	Mem14[0x40001630<32>:word32] = a0 << 24<i32> & 0x7F000000<32> | Mem0[0x40001630<32>:int32] & 0x80FFFFFF<32>
	return
rf_tx_dvga_gain_qdb_gc3_setf_exit:


void rf_tx_dvga_gain_qdb_gc2_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc2_setf_entry:
l23014E38:
	Mem14[0x40001630<32>:word32] = a0 << 16<i32> & 0x7F0000<32> | Mem0[0x40001630<32>:int32] & 0xFF80FFFF<32>
	return
rf_tx_dvga_gain_qdb_gc2_setf_exit:


void rf_tx_dvga_gain_qdb_gc1_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc1_setf_entry:
l23014E58:
	Mem15[0x40001630<32>:word32] = a0 << 8<i32> & 0x7FFFF00<32> | Mem0[0x40001630<32>:int32] & 0xF80000FF<32>
	return
rf_tx_dvga_gain_qdb_gc1_setf_exit:


void rf_tx_dvga_gain_qdb_gc0_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc0_setf_entry:
l23014E7A:
	Mem10[0x40001630<32>:word32] = a0 & 127<i32> | Mem0[0x40001630<32>:int32] & -128<i32>
	return
rf_tx_dvga_gain_qdb_gc0_setf_exit:


void rf_tx_dvga_gain_qdb_gc7_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc7_setf_entry:
l23014E92:
	Mem14[0x40001634<32>:word32] = a0 << 24<i32> & 0x7F000000<32> | Mem0[0x40001634<32>:int32] & 0x80FFFFFF<32>
	return
rf_tx_dvga_gain_qdb_gc7_setf_exit:


void rf_tx_dvga_gain_qdb_gc6_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc6_setf_entry:
l23014EB2:
	Mem14[0x40001634<32>:word32] = a0 << 16<i32> & 0x7F0000<32> | Mem0[0x40001634<32>:int32] & 0xFF80FFFF<32>
	return
rf_tx_dvga_gain_qdb_gc6_setf_exit:


void rf_tx_dvga_gain_qdb_gc5_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc5_setf_entry:
l23014ED2:
	Mem15[0x40001634<32>:word32] = a0 << 8<i32> & 0x7FFFF00<32> | Mem0[0x40001634<32>:int32] & 0xF80000FF<32>
	return
rf_tx_dvga_gain_qdb_gc5_setf_exit:


void rf_tx_dvga_gain_qdb_gc4_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc4_setf_entry:
l23014EF4:
	Mem10[0x40001634<32>:word32] = a0 & 127<i32> | Mem0[0x40001634<32>:int32] & -128<i32>
	return
rf_tx_dvga_gain_qdb_gc4_setf_exit:


void rf_tx_dvga_gain_qdb_gc11_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc11_setf_entry:
l23014F0C:
	Mem14[0x40001638<32>:word32] = a0 << 24<i32> & 0x7F000000<32> | Mem0[0x40001638<32>:int32] & 0x80FFFFFF<32>
	return
rf_tx_dvga_gain_qdb_gc11_setf_exit:


void rf_tx_dvga_gain_qdb_gc10_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc10_setf_entry:
l23014F2C:
	Mem14[0x40001638<32>:word32] = a0 << 16<i32> & 0x7F0000<32> | Mem0[0x40001638<32>:int32] & 0xFF80FFFF<32>
	return
rf_tx_dvga_gain_qdb_gc10_setf_exit:


void rf_tx_dvga_gain_qdb_gc9_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc9_setf_entry:
l23014F4C:
	Mem15[0x40001638<32>:word32] = a0 << 8<i32> & 0x7FFFF00<32> | Mem0[0x40001638<32>:int32] & 0xF80000FF<32>
	return
rf_tx_dvga_gain_qdb_gc9_setf_exit:


void rf_tx_dvga_gain_qdb_gc8_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc8_setf_entry:
l23014F6E:
	Mem10[0x40001638<32>:word32] = a0 & 127<i32> | Mem0[0x40001638<32>:int32] & -128<i32>
	return
rf_tx_dvga_gain_qdb_gc8_setf_exit:


word32 rf_tx_dvga_gain_qdb_gc15_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc15_setf_entry:
l23014F86:
	word32 a5_5 = Mem0[0x4000163C<32>:int32]
	Mem14[0x4000163C<32>:word32] = a0 << 24<i32> & 0x7F000000<32> | a5_5 & 0x80FFFFFF<32>
	return a5_5 & 0x80FFFFFF<32>
rf_tx_dvga_gain_qdb_gc15_setf_exit:


void rf_tx_dvga_gain_qdb_gc14_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc14_setf_entry:
l23014FA6:
	Mem14[0x4000163C<32>:word32] = a0 << 16<i32> & 0x7F0000<32> | Mem0[0x4000163C<32>:int32] & 0xFF80FFFF<32>
	return
rf_tx_dvga_gain_qdb_gc14_setf_exit:


void rf_tx_dvga_gain_qdb_gc13_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc13_setf_entry:
l23014FC6:
	Mem15[0x4000163C<32>:word32] = a0 << 8<i32> & 0x7FFFF00<32> | Mem0[0x4000163C<32>:int32] & 0xF80000FF<32>
	return
rf_tx_dvga_gain_qdb_gc13_setf_exit:


void rf_tx_dvga_gain_qdb_gc12_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
rf_tx_dvga_gain_qdb_gc12_setf_entry:
l23014FE8:
	Mem10[0x4000163C<32>:word32] = a0 & 127<i32> | Mem0[0x4000163C<32>:int32] & -128<i32>
	return
rf_tx_dvga_gain_qdb_gc12_setf_exit:


void wait_us(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
//      _print_channel_info
//      rfc_init
//      cmd_wifi_coex_rf_force_on
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a0 a2 a4
// Preserved: sp
wait_us_entry:
l23015000:
l23015006:
	branch a5 != 0<32> l23015006
l23015010:
	return
wait_us_exit:


void _print_channel_info(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a0 a2 a4
// Preserved: s0 sp
_print_channel_info_entry:
l23015014:
	word32 s0_10 = 8<32>
l2301501C:
	wait_us(a5)
	s0_10 = s0_10 + 0xFFFFFFFF<32>
	branch s0_10 != 0<32> l2301501C
l23015028:
	word32 s0_16 = 8<32>
l2301502A:
	wait_us(a5)
	s0_16 = s0_16 + 0xFFFFFFFF<32>
	branch s0_16 != 0<32> l2301502A
l23015036:
	return
_print_channel_info_exit:


word32 rfc_init(word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s6, word32 s7, word32 fflags, word32 frm, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg58, word32 dwArg64, word32 dwArg84, word32 dwArg88, ptr32 & s0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] s0:[0..31] s1:[32..63] s2:[0..31] s3:[0..31] s6:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0084:[0..31] Stack +0088:[0..31]
// LiveOut: ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa5 fflags frm fs0 fs1 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
rfc_init_entry:
	word32 dwLoc58 = SLICE(qwLoc58, word32, 0)
	word32 dwLoc14 = SLICE(qwLoc18, word32, 32)
l2301503E:
	word32 a0_49
	Mem37[0x40001220<32>:word32] = Mem31[0x40001220<32>:int32] & 0xFBFFFFFF<32>
	Mem44[0x40001220<32>:word32] = Mem37[0x40001220<32>:int32] & 0xF7FFFFFF<32> | 0x8000000<32>
	word32 dwLoc44_824 = SLICE(s1, word32, 32)
	branch a0 == 0x1E84800<32> l230150E0
l230150E0:
	a0_49 = 2<32>
l23015096:
	branch a0 >u 0x1E84800<32> l230150BA
l230150BA:
	branch a0 == 0x2625A00<32> l230150B6
l230150C6:
	a0_49 = 5<32>
	branch a0 == 0x3197500<32> l230150E2
l230150D4:
	branch a0 != 0x249F000<32> l230150B6
l230150DC:
	a0_49 = 3<32>
l2301509A:
	a0_49 = 0<32>
	branch a0 == 0x16E3600<32> l230150E2
l230150A8:
	a0_49 = 1<32>
	branch a0 == 0x18CBA80<32> l230150E2
l230150B6:
	a0_49 = 4<32>
l230150E2:
	word32 fa0_136
	rf_pri_xtalfreq(a0_49)
	word32 fflags_97
	word32 frm_98
	word32 s1_100
	word32 s2_103
	word32 s0_119
	word32 ra_99 = rf_pri_init(a0, CONVERT(CONVERT(Mem44[0x4200DCD4<32>:byte], byte, word32) <u 1<i32>, bool, word32), 1<32>, 0x4200E000<32>, s6, fflags, frm, dwLoc60, dwLoc5C, dwLoc58, dwLoc44_824, s2, dwLoc30, dwLoc2C, dwLoc28, dwLoc14, dwLoc10, dwLoc0C, dwLoc08, dwArg18, dwArg1C, dwArg28, s7, dwArg58, dwArg88, s0, out s0_119, out s1_100, out s2_103, out fflags_97, out frm_98)
	Mem121[s0_119:byte] = 1<8>
	word32 a1_126
	Mem132[s2_103 + 2320<i32>:word32] = __floatunsidf(s1_100 >>u 0xF4240<32>, out a1_126)
	Mem133[s2_103 + 2324<i32>:word32] = a1_126
	branch s1_100 == 0x2625A00<32> l23015622
l23015622:
	fa0_136 = Mem133[0x23077FC0<32>:real32]
l2301512C:
	fa0_136 = Mem133[0x23077FC4<32>:real32]
l23015134:
	Mem153[0x400011C0<32>:word32] = CONVERT(fa0_136, word32, uint32) & 0xFFFFFF<32> | Mem133[0x400011C0<32>:int32] & 0xFF000000<32>
	word32 fs0_140 = CONVERT(s1_100 >>u 0xF4240<32>, word32, real32)
	word32 fs1_161 = Mem153[0x23077FD0<32>:real32]
	word32 a0_157 = Mem153[0x400011C4<32>:int32]
	word32 a1_175
	word32 a1_181
	word32 a4_1017
	word32 a0_189 = __fixunsdfsi(ra_99, __adddf3(ra_99, __extendsfdf2(ra_99, fa0_136 * Mem153[0x23077FC8<32>:real32] / Mem153[0x23077FCC<32>:real32] / fs0_140 * fs1_161, fflags_97, frm_98, out a1_175), a1_175, Mem153[0x230767A8<32>:int32], Mem153[0x230767AC<32>:int32], fflags_97, frm_98, out a1_181), a1_181, fflags_97, frm_98, out a4_1017)
	word32 fa0_199 = Mem153[0x23077FD4<32>:real32] / fs0_140
	Mem201[0x400011C4<32>:word32] = CONVERT(SLICE(a0_189, word29, 0), word29, word32) | a0_157 & 0xE0000000<32>
	word32 a0_202 = Mem201[0x400011C8<32>:int32]
	word32 a1_208
	word32 a1_214
	word32 a4_1018
	word32 a0_222 = __fixunsdfsi(ra_99, __adddf3(ra_99, __extendsfdf2(ra_99, fa0_199 * fs1_161, fflags_97, frm_98, out a1_208), a1_208, Mem201[0x230767A8<32>:int32], Mem201[0x230767AC<32>:int32], fflags_97, frm_98, out a1_214), a1_214, fflags_97, frm_98, out a4_1018)
	word32 fa0_232 = Mem201[0x23077FD8<32>:real32] / fs0_140
	Mem233[0x400011C8<32>:word32] = a0_222 & 0xFFFFF<32> | a0_202 & 0xFFF00000<32>
	word32 a1_239
	word32 a1_246
	word32 a4_1019
	Mem263[0x400011CC<32>:word32] = __fixunsdfsi(ra_99, __adddf3(ra_99, __extendsfdf2(ra_99, fa0_232 * fs1_161, fflags_97, frm_98, out a1_239), a1_239, Mem233[0x230767A8<32>:int32], Mem233[0x230767AC<32>:int32], fflags_97, frm_98, out a1_246), a1_246, fflags_97, frm_98, out a4_1019) & 0xFFFFF<32> | Mem233[0x400011CC<32>:int32] & 0xFFF00000<32>
	word32 s1_166 = 0xFFF964<32>
	word32 s5_235 = 0<32>
	word32 s4_244 = 0<32>
l23015240:
	word32 a0_271 = rf_pri_get_vco_freq_cw(ra_99, s1_166, fflags_97, frm_98)
	word32 s2_281 = a0_271
	word32 a0_283 = rf_pri_get_vco_idac_cw(ra_99, s1_166, fflags_97, frm_98)
	branch s1_166 != 0xFFF964<32> l23015254
l23015252:
	s2_281 = a0_271 + 1<32>
l23015254:
	word32 a0_301 = s2_281 << 8<i32> | a0_283
	branch (s4_244 & 1<i32>) == 0<32> l2301562C
l2301562C:
	s5_235 = a0_301
l23015262:
	s5_235 = s5_235 | a0_301 << 16<i32>
	Mem312[(s4_244 >> 1<u32> << 2<i32>) + 0x4000113C<32>:word32] = s5_235
l23015274:
	branch s1_166 != 0xFFF9B4<32> l23015284
l23015278:
	Mem324[(s4_244 >> 1<u32> << 2<i32>) + 0x4000113C<32>:word32] = s5_235
l23015284:
	s1_166 = s1_166 + 4<32>
	s4_244 = s4_244 + 1<32>
	branch s1_166 != 0xFFF9B8<32> l23015240
l2301528C:
	word32 a5_1020
	word32 a0_342 = rf_pri_query_txgain_table(0<32>, fp + -88<i32>, fp + -84<i32>, out a5_1020)
	word32 a5_349 = Mem345[0x40001640<32>:int32]
	Mem358[dwArg84 + 1600<i32>:word32] = a5_349 & 7<32> | a5_349 & -8<i32>
	rf_tx_dvga_gain_qdb_gc0_setf(a0_342)
	word32 a5_1021
	word32 a0_368 = rf_pri_query_txgain_table(1<32>, fp + -88<i32>, fp + -84<i32>, out a5_1021)
	word32 a5_371 = Mem358[dwArg84 + 1600<i32>:int32]
	Mem381[dwArg84 + 1600<i32>:word32] = a5_371 << 4<i32> & 112<i32> | a5_371 & -113<i32>
	rf_tx_dvga_gain_qdb_gc1_setf(a0_368)
	word32 a5_1022
	word32 a0_392 = rf_pri_query_txgain_table(2<32>, fp + -88<i32>, fp + -84<i32>, out a5_1022)
	word32 a5_395 = Mem381[dwArg84 + 1600<i32>:int32]
	Mem409[dwArg84 + 1600<i32>:word32] = a5_395 << 8<i32> & 1792<i32> | a5_395 & -1793<i32>
	rf_tx_dvga_gain_qdb_gc2_setf(a0_392)
	word32 a5_1023
	word32 a0_418 = rf_pri_query_txgain_table(3<32>, fp + -88<i32>, fp + -84<i32>, out a5_1023)
	word32 a5_421 = Mem409[dwArg84 + 1600<i32>:int32]
	Mem427[dwArg84 + 1600<i32>:word32] = a5_421 << 12<i32> & 0x7000000<32> | a5_421 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc3_setf(a0_418)
	word32 a5_1024
	word32 a0_436 = rf_pri_query_txgain_table(4<32>, fp + -88<i32>, fp + -84<i32>, out a5_1024)
	word32 a5_439 = Mem427[dwArg84 + 1600<i32>:int32]
	Mem445[dwArg84 + 1600<i32>:word32] = a5_439 << 16<i32> & 0x70000<32> | a5_439 & 0xFFF8FFFF<32>
	rf_tx_dvga_gain_qdb_gc4_setf(a0_436)
	word32 a5_1025
	word32 a0_453 = rf_pri_query_txgain_table(5<32>, fp + -88<i32>, fp + -84<i32>, out a5_1025)
	word32 a5_456 = Mem445[dwArg84 + 1600<i32>:int32]
	Mem462[dwArg84 + 1600<i32>:word32] = a5_456 << 20<i32> & 0x700000<32> | a5_456 & 0xFF8FFFFF<32>
	rf_tx_dvga_gain_qdb_gc5_setf(a0_453)
	word32 a5_1026
	word32 a0_471 = rf_pri_query_txgain_table(6<32>, fp + -88<i32>, fp + -84<i32>, out a5_1026)
	word32 a5_474 = Mem462[dwArg84 + 1600<i32>:int32]
	Mem480[dwArg84 + 1600<i32>:word32] = a5_474 << 24<i32> & 0x7000000<32> | a5_474 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc6_setf(a0_471)
	word32 a5_491
	word32 a0_489 = rf_pri_query_txgain_table(7<32>, fp + -88<i32>, fp + -84<i32>, out a5_491)
	Mem498[dwArg84 + 1600<i32>:word32] = a5_491 << 28<i32> & 0x70000000<32> | Mem480[dwArg84 + 1600<i32>:int32] & 0x8FFFFFFF<32>
	rf_tx_dvga_gain_qdb_gc7_setf(a0_489)
	word32 a5_1027
	word32 a0_507 = rf_pri_query_txgain_table(8<32>, fp + -88<i32>, fp + -84<i32>, out a5_1027)
	word32 a5_510 = Mem498[dwArg84 + 1604<i32>:int32]
	Mem515[dwArg84 + 1604<i32>:word32] = a5_510 & 7<32> | a5_510 & -8<i32>
	rf_tx_dvga_gain_qdb_gc8_setf(a0_507)
	word32 a5_1028
	word32 a0_523 = rf_pri_query_txgain_table(9<32>, fp + -88<i32>, fp + -84<i32>, out a5_1028)
	word32 a5_526 = Mem515[dwArg84 + 1604<i32>:int32]
	Mem532[dwArg84 + 1604<i32>:word32] = a5_526 << 4<i32> & 112<i32> | a5_526 & -113<i32>
	rf_tx_dvga_gain_qdb_gc9_setf(a0_523)
	word32 a5_1029
	word32 a0_541 = rf_pri_query_txgain_table(0xA<32>, fp + -88<i32>, fp + -84<i32>, out a5_1029)
	word32 a2_544 = Mem532[dwArg84 + 1604<i32>:int32]
	Mem550[dwArg24 + 1604<i32>:word32] = a2_544 << 8<i32> & 1792<i32> | a2_544 & -1793<i32>
	rf_tx_dvga_gain_qdb_gc10_setf(a0_541)
	word32 a5_1030
	word32 a0_559 = rf_pri_query_txgain_table(0xB<32>, fp + -88<i32>, fp + -84<i32>, out a5_1030)
	word32 a2_562 = Mem550[dwArg24 + 1604<i32>:int32]
	Mem568[dwArg24 + 1604<i32>:word32] = a2_562 << 12<i32> & 0x7000000<32> | a2_562 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc11_setf(a0_559)
	word32 a5_1031
	word32 a0_577 = rf_pri_query_txgain_table(0xC<32>, fp + -88<i32>, fp + -84<i32>, out a5_1031)
	word32 a2_580 = Mem568[dwArg24 + 1604<i32>:int32]
	Mem586[dwArg24 + 1604<i32>:word32] = a2_580 << 16<i32> & 0x70000<32> | a2_580 & 0xFFF8FFFF<32>
	rf_tx_dvga_gain_qdb_gc12_setf(a0_577)
	word32 a5_1032
	word32 a0_594 = rf_pri_query_txgain_table(0xD<32>, fp + -88<i32>, fp + -84<i32>, out a5_1032)
	word32 a3_597 = Mem586[dwArg24 + 1604<i32>:int32]
	Mem603[s3 + 1604<i32>:word32] = a3_597 << 20<i32> & 0x700000<32> | a3_597 & 0xFF8FFFFF<32>
	rf_tx_dvga_gain_qdb_gc13_setf(a0_594)
	word32 a5_1033
	word32 a0_612 = rf_pri_query_txgain_table(0xE<32>, fp + -88<i32>, fp + -84<i32>, out a5_1033)
	word32 a4_615 = Mem603[s3 + 1604<i32>:int32]
	Mem621[dwArg64 + 1604<i32>:word32] = a4_615 << 24<i32> & 0x7000000<32> | a4_615 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc14_setf(a0_612)
	word32 a5_1034
	word32 a0_630 = rf_pri_query_txgain_table(0xF<32>, fp + -88<i32>, fp + -84<i32>, out a5_1034)
	word32 a5_633 = Mem621[dwArg64 + 1604<i32>:int32]
	Mem639[dwArg84 + 1604<i32>:word32] = a5_633 << 28<i32> & 0x70000000<32> | a5_633 & 0x8FFFFFFF<32>
	word32 a5_645 = rf_tx_dvga_gain_qdb_gc15_setf(a0_630)
	word32 s0_646 = Mem639[a5_645 + 4<i32>:word32]
	Mem650[(a5_645 & 0xFF0007FF<32>) + 4<i32>:word32] = s0_646
	rf_fsm_st_dbg_en_setf(0<32>)
	word32 a5_655 = Mem650[s0_646 + 616<i32>:int32]
	Mem659[s0_646 + 616<i32>:word32] = a5_655 & 0xF0000000<32> | 0x1000040<32>
	word32 a5_1035
	word32 a4_661 = rf_fsm_ctrl_en_setf(1<32>, a5_655 & 0xF0000000<32>, out a5_1035)
	word32 s0_663 = Mem659[a4_661 + 12<i32>:word32]
	Mem667[(a4_661 | 4<i32>) + 12<i32>:word32] = s0_663
	Mem672[s0_663 + 1536<i32>:word32] = Mem667[s0_663 + 1536<i32>:int32] | 0x80000000<32>
	word32 a4_673 = Mem672[s0_663 + 1536<i32>:int32]
	Mem675[s0_663 + 1536<i32>:word32] = a4_673 & 0x80FFFFFF<32>
	word32 a4_677 = a4_673 & 0x80FFFFFF<32> | 32<i32>
	Mem678[a4_677 + 12<i32>:word32] = Mem675[(a4_673 & 0x80FFFFFF<32>) + 12<i32>:word32]
	word32 s0_679 = Mem678[a4_677 + 12<i32>:word32]
	Mem681[(a4_677 | 2<i32>) + 12<i32>:word32] = s0_679
	Mem685[0x44C0C218<32>:word32] = Mem681[0x44C0C218<32>:int32] & 0xF0000000<32>
	Mem688[0x44C03030<32>:word32] = 0<32>
	Mem690[0xA027FB3<32>:word32] = 0x44C03000<32>
	Mem693[0x2328234F<32>:word32] = 0x44C03000<32>
	Mem696[0x7F020A53<32>:word32] = 0x44C03000<32>
	Mem698[0xBF<32>:word32] = 0x44C03000<32>
	word32 a5_699 = Mem698[s0_679 + 544<i32>:int32]
	Mem703[s0_679 + 544<i32>:word32] = a5_699 & 0xF7FFFFFF<32>
	Mem707[(a5_699 & 0xF7FFFFFF<32> & 0xFFFFFFF3<32>) + 4<i32>:word32] = Mem703[(a5_699 & 0xF7FFFFFF<32>) + 4<i32>:word32]
	word32 a5_708 = Mem707[0x4000E41C<32>:int32]
	Mem710[0x4000E41C<32>:word32] = a5_708 & -65<i32>
	wait_us(a5_708 & -65<i32>)
	word32 s0_714 = Mem710[(a5_708 & -65<i32>) + 4<i32>:word32]
	word32 a5_716 = a5_708 & -65<i32> & 0xFFFFFFF3<32>
	Mem718[(a5_716 | 4<i32>) + 4<i32>:word32] = s0_714
	wait_us(a5_716 | 4<i32>)
	Mem724[0x4000E41C<32>:word32] = Mem718[0x4000E41C<32>:int32] | 64<i32>
	s0Out = s0_714
	return dwArg68
rfc_init_exit:


void rfc_rxdfe_set_notch0(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
rfc_rxdfe_set_notch0_entry:
l23015630:
	Mem11[0x40001700<32>:word32] = a1 & 7<32> | Mem0[0x40001700<32>:int32] & 0xFFFFFFF8<32>
	Mem21[0x40001700<32>:word32] = a2 << 8<i32> & 0xFFFFFFF<32> | Mem11[0x40001700<32>:int32] & 0xF00000FF<32>
	Mem28[0x40001700<32>:word32] = a0 << 6<i32> & 64<i32> | Mem21[0x40001700<32>:int32] & -65<i32>
	return
rfc_rxdfe_set_notch0_exit:


word32 rfc_config_channel(word32 ra, word32 a0, word32 s2, word32 fflags, word32 frm, ptr32 & s1Out, ptr32 & s4Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s2:[24..31]
// LiveOut: fflags frm ra s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
rfc_config_channel_entry:
l23015672:
	word32 a5_13 = Mem12[0x40001228<32>:int32]
	Mem17[0x40001228<32>:word32] = a5_13 | 8<i32>
	word32 a5_22 = a5_13 | 8<i32> | 64<i32>
	Mem23[a5_22 + 12<i32>:word32] = Mem17[(a5_13 | 8<i32>) + 12<i32>:word32]
	Mem26[(a5_22 | 512<i32>) + 12<i32>:word32] = Mem23[a5_22 + 12<i32>:word32]
	word32 s0_27 = Mem26[(a5_22 | 512<i32>) + 12<i32>:word32]
	Mem29[(a5_22 | 512<i32> | 1<i32>) + 12<i32>:word32] = s0_27
	Mem35[s0_27 + 612<i32>:word32] = CONVERT(SLICE(a0, word12, 0), word12, word32) | Mem29[s0_27 + 612<i32>:int32] & 0xFF000000<32>
	word32 a5_40 = Mem35[s0_27 + 616<i32>:int32] & 0xDFFFFFFF<32> | 0x20000<32>
	Mem41[s0_27 + 616<i32>:word32] = a5_40
	wait_us(a5_40)
	word32 a5_45 = Mem41[s0_27 + 616<i32>:int32]
	Mem48[s0_27 + 616<i32>:word32] = a5_45 & 0xDFFFFFFF<32>
	wait_us(a5_45)
	word32 a5_55
	rf_fsm_ctrl_en_setf(0<32>, a5_45, out a5_55)
	wait_us(a5_55)
	word32 a5_63
	rf_fsm_ctrl_en_setf(1<32>, a5_55, out a5_63)
	wait_us(a5_63)
	word32 a5_71 = Mem48[s0_27 + 620<i32>:int32] & 0xFFFFFFF8<32> | 1<i32>
	Mem72[s0_27 + 620<i32>:word32] = a5_71
	wait_us(a5_71)
	wait_us(rf_fsm_st_dbg_en_setf(1<32>))
	word32 a5_87 = Mem72[s0_27 + 620<i32>:int32] & 0xFFFFFFF8<32> | 2<i32>
	Mem88[s0_27 + 620<i32>:word32] = a5_87
	wait_us(a5_87)
	word32 a5_95 = rf_fsm_st_dbg_en_setf(0<32>)
	wait_us(a5_95)
	_print_channel_info(a5_95)
	rf_pri_update_param(a0)
	word32 a1_122
	word32 a0_130
	word32 a1_131
	word32 fflags_145
	word32 frm_146
	word32 a0_161
	word32 a1_162
	word32 fflags_176
	word32 frm_177
	word32 s0_179
	word32 s1_180
	word32 s0_240
	word32 s1_241
	word32 a3_242
	word32 s2_243
	word32 s3_244
	word32 s9_245
	word32 a4_246
	word32 a5_247
	word32 a7_248
	word32 s2_249
	word32 s3_250
	word32 s4_251
	word32 s5_252
	word32 s6_253
	word32 s7_254
	word32 s8_255
	word32 s9_256
	word32 ra_178 = __muldf3(__divdf3(ra, __floatsidf(rf_pri_get_notch_param(a0, fp + 0xFFFFFFEB<32>, fp + 0xFFFFFFEC<32>), out a1_122), a1_122, Mem88[0x23076FB0<32>:int32], Mem88[0x23076FB4<32>:int32], fflags, frm, out s0_240, out s1_241, out a0_130, out a1_131, out a3_242, out s2_243, out s3_244, out s9_245, out fflags_145, out frm_146), a0_130, a1_131, Mem88[0x23076FB8<32>:int32], Mem88[0x23076FBC<32>:int32], fflags_145, frm_146, out s0_179, out s1_180, out a0_161, out a1_162, out a4_246, out a5_247, out a7_248, out s2_249, out s3_250, out s4_251, out s5_252, out s6_253, out s7_254, out s8_255, out s9_256, out fflags_176, out frm_177)
	word32 a1_193
	word32 a1_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	rfc_rxdfe_set_notch0(CONVERT(SLICE(s2, byte, 24), byte, word32), 1<32>, CONVERT(SLICE(__fixdfsi(ra_178, __adddf3(ra_178, a0_161, a1_162, Mem88[0x230767A8<32>:int32], Mem88[0x230767AC<32>:int32], fflags_176, frm_177, out a1_193), a1_193, fflags_176, frm_177, out a1_257, out a3_258, out a4_259, out a5_260), byte, 0), byte, int32))
	Mem220[s0_179 + 552<i32>:word32] = Mem88[s0_179 + 552<i32>:int32] & 0xFFFFFFF7<32>
	s1Out = s1_180
	s4Out = dwArg04
	fflagsOut = fflags_176
	frmOut = frm_177
	return ra_178
rfc_config_channel_exit:


void rfc_coex_force_to(word32 a0, word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_coex_rf_force_on
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s0 s8 t3
// Preserved: sp
rfc_coex_force_to_entry:
l230157B4:
	word32 a5_16
	rf_fsm_ctrl_en_setf(0<32>, a5, out a5_16)
	wait_us(a5_16)
	Mem31[0x40001220<32>:word32] = a1 << 26<i32> & 0x4000000<32> | Mem12[0x40001220<32>:int32] & 0xFBFFFFFF<32>
	Mem39[0x40001220<32>:word32] = CONVERT(a0 != 0<32>, bool, word32) << 27<i32> | Mem31[0x40001220<32>:int32] & 0xF7FFFFFF<32>
	wait_us(0x40001000<32>)
l23015810_thunk_rf_fsm_ctrl_en_setf:
	word32 a5_57
	rf_fsm_ctrl_en_setf(1<32>, 0x40001000<32>, out a5_57)
	return
rfc_coex_force_to_exit:


word32 rfc_get_power_level(word32 a0, word32 a1, word32 a3, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_get_rf_gain_idx
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
rfc_get_power_level_entry:
l23015814:
	word32 a1_10 = 0<32>
	branch a0 == 0<32> l2301582A
l23015820:
	a1_10 = 1<32>
	branch a0 == 1<32> l2301582A
l23015828:
	a1_10 = 2<32>
l2301582A:
	word32 a3_21
	word32 a4_22
	word32 a0_28 = rf_pri_get_txgain_index(a1, a1_10, a3, out a3_21, out a4_22) << 2<i32>
	a3Out = a3_21
	a4Out = a4_22
	return a0_28
rfc_get_power_level_exit:


void rfc_apply_tx_dvga(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
rfc_apply_tx_dvga_entry:
l23015836:
	rf_tx_dvga_gain_qdb_gc0_setf(CONVERT(Mem7[a0:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc1_setf(CONVERT(Mem7[a0 + 1<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc2_setf(CONVERT(Mem7[a0 + 2<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc3_setf(CONVERT(Mem7[a0 + 3<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc4_setf(CONVERT(Mem7[a0 + 4<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc5_setf(CONVERT(Mem7[a0 + 5<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc6_setf(CONVERT(Mem7[a0 + 6<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc7_setf(CONVERT(Mem7[a0 + 7<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc8_setf(CONVERT(Mem7[a0 + 8<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc9_setf(CONVERT(Mem7[a0 + 9<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc10_setf(CONVERT(Mem7[a0 + 10<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc11_setf(CONVERT(Mem7[a0 + 11<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc12_setf(CONVERT(Mem7[a0 + 12<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc13_setf(CONVERT(Mem7[a0 + 13<i32>:int8], int8, int32))
	rf_tx_dvga_gain_qdb_gc14_setf(CONVERT(Mem7[a0 + 14<i32>:int8], int8, int32))
	word32 a0_81 = CONVERT(Mem7[a0 + 15<i32>:int8], int8, int32)
l230158C0_thunk_rf_tx_dvga_gain_qdb_gc15_setf:
	rf_tx_dvga_gain_qdb_gc15_setf(a0_81)
	return
rfc_apply_tx_dvga_exit:


word32 rfc_apply_tx_power_offset(word32 a0, word32 a1, word32 dwArg44, word32 dwArg64, word32 dwArg84, word32 dwArgA4, word32 dwArg0198, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
// MayUse:  a0:[0..31] a1:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31] Stack +0198:[0..31]
// LiveOut: s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
rfc_apply_tx_power_offset_entry:
l230158C4:
	rf_pri_update_tx_power_offset(a0, a1)
	word32 a5_390
	word32 a0_54 = rf_pri_query_txgain_table(0<32>, fp + -56<i32>, fp + -52<i32>, out a5_390)
	word32 a5_57 = Mem27[0x40001640<32>:int32]
	Mem66[dwArgA4 + 1600<i32>:word32] = a5_57 & 7<32> | a5_57 & -8<i32>
	rf_tx_dvga_gain_qdb_gc0_setf(a0_54)
	word32 a5_391
	word32 a0_76 = rf_pri_query_txgain_table(1<32>, fp + -56<i32>, fp + -52<i32>, out a5_391)
	word32 a5_79 = Mem66[dwArgA4 + 1600<i32>:int32]
	Mem89[dwArgA4 + 1600<i32>:word32] = a5_79 << 4<i32> & 112<i32> | a5_79 & -113<i32>
	rf_tx_dvga_gain_qdb_gc1_setf(a0_76)
	word32 a5_392
	word32 a0_100 = rf_pri_query_txgain_table(2<32>, fp + -56<i32>, fp + -52<i32>, out a5_392)
	word32 a5_103 = Mem89[dwArgA4 + 1600<i32>:int32]
	Mem112[dwArgA4 + 1600<i32>:word32] = a5_103 << 8<i32> & 1792<i32> | a5_103 & -1793<i32>
	rf_tx_dvga_gain_qdb_gc2_setf(a0_100)
	word32 a5_393
	word32 a0_121 = rf_pri_query_txgain_table(3<32>, fp + -56<i32>, fp + -52<i32>, out a5_393)
	word32 a5_124 = Mem112[dwArgA4 + 1600<i32>:int32]
	Mem130[dwArgA4 + 1600<i32>:word32] = a5_124 << 12<i32> & 0x7000000<32> | a5_124 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc3_setf(a0_121)
	word32 a5_394
	word32 a0_139 = rf_pri_query_txgain_table(4<32>, fp + -56<i32>, fp + -52<i32>, out a5_394)
	word32 a5_142 = Mem130[dwArgA4 + 1600<i32>:int32]
	Mem148[dwArgA4 + 1600<i32>:word32] = a5_142 << 16<i32> & 0x70000<32> | a5_142 & 0xFFF8FFFF<32>
	rf_tx_dvga_gain_qdb_gc4_setf(a0_139)
	word32 a5_395
	word32 a0_156 = rf_pri_query_txgain_table(5<32>, fp + -56<i32>, fp + -52<i32>, out a5_395)
	word32 a5_159 = Mem148[dwArgA4 + 1600<i32>:int32]
	Mem165[dwArgA4 + 1600<i32>:word32] = a5_159 << 20<i32> & 0x700000<32> | a5_159 & 0xFF8FFFFF<32>
	rf_tx_dvga_gain_qdb_gc5_setf(a0_156)
	word32 a5_396
	word32 a0_174 = rf_pri_query_txgain_table(6<32>, fp + -56<i32>, fp + -52<i32>, out a5_396)
	word32 a5_177 = Mem165[dwArgA4 + 1600<i32>:int32]
	Mem183[dwArgA4 + 1600<i32>:word32] = a5_177 << 24<i32> & 0x7000000<32> | a5_177 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc6_setf(a0_174)
	word32 a5_194
	word32 a0_192 = rf_pri_query_txgain_table(7<32>, fp + -56<i32>, fp + -52<i32>, out a5_194)
	Mem201[dwArgA4 + 1600<i32>:word32] = a5_194 << 28<i32> & 0x70000000<32> | Mem183[dwArgA4 + 1600<i32>:int32] & 0x8FFFFFFF<32>
	rf_tx_dvga_gain_qdb_gc7_setf(a0_192)
	word32 a5_397
	word32 a0_210 = rf_pri_query_txgain_table(8<32>, fp + -56<i32>, fp + -52<i32>, out a5_397)
	word32 a5_213 = Mem201[dwArgA4 + 1604<i32>:int32]
	Mem218[dwArgA4 + 1604<i32>:word32] = a5_213 & 7<32> | a5_213 & -8<i32>
	rf_tx_dvga_gain_qdb_gc8_setf(a0_210)
	word32 a5_398
	word32 a0_226 = rf_pri_query_txgain_table(9<32>, fp + -56<i32>, fp + -52<i32>, out a5_398)
	word32 a2_229 = Mem218[dwArgA4 + 1604<i32>:int32]
	Mem235[dwArg44 + 1604<i32>:word32] = a2_229 << 4<i32> & 112<i32> | a2_229 & -113<i32>
	rf_tx_dvga_gain_qdb_gc9_setf(a0_226)
	word32 a5_399
	word32 a0_244 = rf_pri_query_txgain_table(0xA<32>, fp + -56<i32>, fp + -52<i32>, out a5_399)
	word32 a2_247 = Mem235[dwArg44 + 1604<i32>:int32]
	Mem253[dwArg44 + 1604<i32>:word32] = a2_247 << 8<i32> & 1792<i32> | a2_247 & -1793<i32>
	rf_tx_dvga_gain_qdb_gc10_setf(a0_244)
	word32 a5_400
	word32 a0_262 = rf_pri_query_txgain_table(0xB<32>, fp + -56<i32>, fp + -52<i32>, out a5_400)
	word32 a2_265 = Mem253[dwArg44 + 1604<i32>:int32]
	Mem271[dwArg44 + 1604<i32>:word32] = a2_265 << 12<i32> & 0x7000000<32> | a2_265 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc11_setf(a0_262)
	word32 a5_401
	word32 a0_280 = rf_pri_query_txgain_table(0xC<32>, fp + -56<i32>, fp + -52<i32>, out a5_401)
	word32 a2_283 = Mem271[dwArg44 + 1604<i32>:int32]
	Mem289[dwArg44 + 1604<i32>:word32] = a2_283 << 16<i32> & 0x70000<32> | a2_283 & 0xFFF8FFFF<32>
	rf_tx_dvga_gain_qdb_gc12_setf(a0_280)
	word32 a5_402
	word32 a0_297 = rf_pri_query_txgain_table(0xD<32>, fp + -56<i32>, fp + -52<i32>, out a5_402)
	word32 a3_300 = Mem289[dwArg44 + 1604<i32>:int32]
	Mem306[dwArg64 + 1604<i32>:word32] = a3_300 << 20<i32> & 0x700000<32> | a3_300 & 0xFF8FFFFF<32>
	rf_tx_dvga_gain_qdb_gc13_setf(a0_297)
	word32 a5_403
	word32 a0_315 = rf_pri_query_txgain_table(0xE<32>, fp + -56<i32>, fp + -52<i32>, out a5_403)
	word32 a4_318 = Mem306[dwArg64 + 1604<i32>:int32]
	Mem324[dwArg84 + 1604<i32>:word32] = a4_318 << 24<i32> & 0x7000000<32> | a4_318 & 0xF8FFFFFF<32>
	rf_tx_dvga_gain_qdb_gc14_setf(a0_315)
	word32 a5_404
	word32 a0_333 = rf_pri_query_txgain_table(0xF<32>, fp + -56<i32>, fp + -52<i32>, out a5_404)
	word32 a5_336 = Mem324[dwArg84 + 1604<i32>:int32]
	Mem342[dwArgA4 + 1604<i32>:word32] = a5_336 << 28<i32> & 0x70000000<32> | a5_336 & 0x8FFFFFFF<32>
	rf_tx_dvga_gain_qdb_gc15_setf(a0_333)
	0<32> = dwArg0198
	s2Out = a5_336 & 0x8FFFFFFF<32>
	s3Out = 0x7000000<32>
	return 0x70000000<32>
rfc_apply_tx_power_offset_exit:


word32 rf_pri_set_gain_table_regs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_update_tx_power_offset
//      rf_pri_init
// MayUse: 
// LiveOut: a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5 t6
// Preserved: sp
rf_pri_set_gain_table_regs_entry:
l23015B8E:
	Mem51[0x40001118<32>:word32] = ((Mem0[0x42011CCC<32>:int32] << 24<i32> | (Mem0[0x42011CD0<32>:int32] << 16<i32> | (Mem0[0x42011CFC<32>:int32] << 14<i32> | (Mem0[0x42011D00<32>:int32] << 12<i32> | (Mem0[0x42011D04<32>:int32] << 8<i32> | (Mem0[0x40001118<32>:int32] & 0xFFFFFFE0<32> | Mem0[0x42011D08<32>:int32]) & -1793<i32>) & 0xFCFFFFFF<32>) & 0xF3FFFFFF<32>) & 0xFFE0FFFF<32>) & 0xF8FFFFFF<32>) & 0xCFFFFFFF<32> | Mem0[0x42011CC8<32>:int32] << 28<i32>) & 0x3FFFFFFF<32> | Mem0[0x42011CC4<32>:int32] << 30<i32>
	word32 a3_83 = (Mem51[0x42011C58<32>:int32] << 28<i32> | (Mem51[0x42011C5C<32>:int32] << 24<i32> | (Mem51[0x42011C60<32>:int32] << 16<i32> | (Mem51[0x42011C8C<32>:int32] << 14<i32> | (Mem51[0x42011C90<32>:int32] << 12<i32> | (Mem51[0x42011C94<32>:int32] << 8<i32> | (Mem51[0x4000111C<32>:int32] & 0xFFFFFFE0<32> | Mem51[0x42011C98<32>:int32]) & -1793<i32>) & 0xFCFFFFFF<32>) & 0xF3FFFFFF<32>) & 0xFFE0FFFF<32>) & 0xF8FFFFFF<32>) & 0xCFFFFFFF<32>) & 0x3FFFFFFF<32> | Mem51[0x42011C54<32>:int32] << 30<i32>
	Mem84[0x4000111C<32>:word32] = a3_83
	word32 a5_87 = Mem84[a3_83 + 112<i32>:word32]
	word32 a2_102 = Mem84[a5_87 + 168<i32>:int32] << 14<i32> | (Mem84[a5_87 + 172<i32>:int32] << 12<i32> | (Mem84[a5_87 + 176<i32>:int32] << 8<i32> | (Mem84[0x40001120<32>:int32] & 0xFFFFFFE0<32> | Mem84[0x42011C28<32>:int32]) & -1793<i32>) & 0xFCFFFFFF<32>) & 0xF3FFFFFF<32>
	word32 a5_104 = Mem84[a2_102 + 124<i32>:word32]
	word32 a6_110 = Mem84[a5_104 + 120<i32>:int32] << 24<i32> | (a2_102 << 16<i32> | a2_102 & 0xFFE0FFFF<32>) & 0xF8FFFFFF<32>
	Mem117[0x40001120<32>:word32] = a3_83 << 30<i32> | (Mem84[a5_104 + 116<i32>:int32] << 28<i32> | a6_110 & 0xCFFFFFFF<32>) & 0x3FFFFFFF<32>
	word32 a1_126 = (Mem117[0x40001124<32>:int32] & -32<i32> | 0xFFE10000<32>) & -1793<i32> | 0xE1000000<32>
	word32 a3_141 = (a3_83 << 46<i32> | ((a1_126 & 0xFCFFFFFF<32>) << 14<i32> | (a1_126 & 0xFCFFFFFF<32>) & 0xF3FFFFFF<32>) & 0xFFE0FFFF<32>) & 0xF8FFFFFF<32> | (a6_110 & 0xCFFFFFFF<32>) << 24<i32>
	word32 a3_149 = (a3_141 << 28<i32> | a3_141 & 0xCFFFFFFF<32>) & 0x3FFFFFFF<32> | Mem117[Mem117[a3_141 + 4<i32>:word32]:word32] << 30<i32>
	Mem150[0x40001124<32>:word32] = a3_149
	return a3_149
rf_pri_set_gain_table_regs_exit:


word32 rf_pri_manu_pu(word32 a0, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
//      rf_pri_roscal
//      rf_pri_rccal
//      rf_pri_lo_acal
//      rf_pri_fcal
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a3 a5
// Trashed: a3 a4 a5
// Preserved: sp
rf_pri_manu_pu_entry:
l23015D58:
	word32 a5_11
	word32 a3_21
	word32 a4_14
	word32 a3_15
	word32 a5_5 = Mem0[a4 + 4<i32>:word32]
	Mem7[(a4 & 0xFFFFFFFD<32>) + 4<i32>:word32] = a5_5
	Mem8[a5_5 + 12<i32>:word32] = 0<32>
	branch a0 == 5<32> l23015DC6
l23015DC6:
	a5_11 = Mem8[0x35<32>:word32]
	a4_14 = 5<32>
	a3_15 = 0xC6FF7000<32>
l23015D6C:
	branch a0 >u 5<32> l23015D94
l23015D94:
	branch a0 >u 7<32> l23015D76
l23015D9A:
	a5_11 = Mem8[0x37<32>:word32]
	a4_14 = 7<32>
	a3_21 = 0xF00000<32>
l23015D70:
	branch a0 == 4<32> l23015DB0
l23015DB0:
	a5_11 = Mem8[0x34<32>:word32]
	a4_14 = 4<32>
	a3_15 = 0x24F87000<32>
l23015DC0:
	a3_21 = a3_15 + -2048<i32>
l23015DAA:
	Mem36[(a4_14 | a3_21) + 48<i32>:word32] = a5_11
	a5Out = a5_11
	return a3_21
l23015D76:
	word32 a3_39 = Mem8[a5_5 + 48<i32>:word32]
	word32 a5_45 = a5_5 & 0x2DF0FEFF<32> | 0x25F06E00<32>
	Mem46[a5_45 + 48<i32>:word32] = a3_39
	a5Out = a5_45
	return a3_39
rf_pri_manu_pu_exit:


word32 rf_pri_save_state_for_cal(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
//      rf_pri_roscal
//      rf_pri_rccal
//      rf_pri_lo_acal
//      rf_pri_fcal
// MayUse:  a3:[0..31]
// LiveOut: a4
// Trashed: a3 a4 a5
// Preserved: sp
rf_pri_save_state_for_cal_entry:
l23015DD8:
	Mem7[0x4200ED10<32>:word32] = a3
	Mem10[0x4200ED1C<32>:word32] = a3
	Mem13[0x4200ED18<32>:word32] = a3
	word32 a5_14 = Mem13[a3 + 48<i32>:word32]
	Mem16[0x4200ED08<32>:word32] = a3
	Mem19[0x4200ED00<32>:word32] = Mem16[a5_14 + 184<i32>:int32]
	Mem22[0x4200ED24<32>:word32] = Mem19[a5_14 + 192<i32>:int32]
	Mem25[0x4200ED28<32>:word32] = Mem22[a5_14 + 196<i32>:int32]
	Mem28[0x4200ED0C<32>:word32] = Mem25[a5_14 + 132<i32>:int32]
	Mem31[0x4200ECEC<32>:word32] = Mem28[a5_14 + 140<i32>:int32]
	Mem34[0x4200ECF0<32>:word32] = Mem31[a5_14 + 1536<i32>:int32]
	Mem37[0x4200ECF4<32>:word32] = Mem34[a5_14 + 1548<i32>:int32]
	Mem40[0x4200ECF8<32>:word32] = Mem37[a5_14 + 1560<i32>:int32]
	word32 a3_41 = Mem40[a5_14 + 1564<i32>:int32]
	Mem43[0x4200ECFC<32>:word32] = a3_41
	word32 a5_44 = Mem43[a3_41 + 72<i32>:word32]
	Mem46[0x4200ED4C<32>:word32] = a3_41
	Mem49[0x4200ED2C<32>:word32] = Mem46[a5_44 + 524<i32>:int32]
	Mem52[0x4200ED30<32>:word32] = Mem49[a5_44 + 532<i32>:int32]
	Mem55[0x4200ED34<32>:word32] = Mem52[a5_44 + 536<i32>:int32]
	Mem58[0x4200ED38<32>:word32] = Mem55[a5_44 + 572<i32>:int32]
	Mem61[0x4200ED3C<32>:word32] = Mem58[a5_44 + 576<i32>:int32]
	Mem64[0x4200ED40<32>:word32] = Mem61[a5_44 + 580<i32>:int32]
	word32 a3_65 = Mem64[a5_44 + 240<i32>:int32]
	Mem67[0x4200ED14<32>:word32] = a3_65
	Mem70[0x4200ED04<32>:word32] = a3_65
	word32 a5_71 = Mem70[a3_65 + 88<i32>:word32]
	Mem73[0x4200ED48<32>:word32] = a3_65
	word32 a3_74 = Mem73[a5_71 + 544<i32>:int32]
	Mem76[0x4200ED20<32>:word32] = a3_74
	word32 a5_77 = Mem76[a3_74 + 112<i32>:word32]
	Mem79[0x4200ED44<32>:word32] = a3_74
	word32 a4_80 = Mem79[a5_77 + 164<i32>:int32]
	Mem82[0x4200ED50<32>:word32] = a4_80
	return a4_80
rf_pri_save_state_for_cal_exit:


word32 rf_pri_restore_state_for_cal()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
//      rf_pri_roscal
//      rf_pri_rccal
//      rf_pri_lo_acal
//      rf_pri_fcal
// MayUse: 
// LiveOut: a5
// Trashed: a4 a5
// Preserved: sp
rf_pri_restore_state_for_cal_entry:
l23015F06:
	Mem7[Mem0[0x4200DD10<32>:int32] + 4<i32>:word32] = 0x40001000<32>
	Mem10[Mem7[0x4200DD1C<32>:int32] + 12<i32>:word32] = 0x40001000<32>
	Mem13[Mem10[0x4200DD18<32>:int32] + 28<i32>:word32] = 0x40001000<32>
	Mem16[Mem13[0x4200DD08<32>:int32] + 48<i32>:word32] = 0x40001000<32>
	Mem19[0x400010B8<32>:word32] = Mem16[0x4200DD00<32>:int32]
	Mem22[0x400010C0<32>:word32] = Mem19[0x4200DD24<32>:int32]
	Mem25[0x400010C4<32>:word32] = Mem22[0x4200DD28<32>:int32]
	Mem28[0x40001084<32>:word32] = Mem25[0x4200DD0C<32>:int32]
	Mem31[0x4000108C<32>:word32] = Mem28[0x4200DCEC<32>:int32]
	Mem34[0x40001600<32>:word32] = Mem31[0x4200DCF0<32>:int32]
	Mem37[0x4000160C<32>:word32] = Mem34[0x4200DCF4<32>:int32]
	Mem40[0x40001618<32>:word32] = Mem37[0x4200DCF8<32>:int32]
	Mem43[0x4000161C<32>:word32] = Mem40[0x4200DCFC<32>:int32]
	Mem46[Mem43[0x4200DD4C<32>:int32] + 72<i32>:word32] = 0x40001000<32>
	Mem49[0x4000120C<32>:word32] = Mem46[0x4200DD2C<32>:int32]
	Mem52[0x40001214<32>:word32] = Mem49[0x4200DD30<32>:int32]
	Mem55[0x40001218<32>:word32] = Mem52[0x4200DD34<32>:int32]
	Mem58[0x4000123C<32>:word32] = Mem55[0x4200DD38<32>:int32]
	Mem61[0x40001240<32>:word32] = Mem58[0x4200DD3C<32>:int32]
	Mem64[0x40001244<32>:word32] = Mem61[0x4200DD40<32>:int32]
	Mem67[0x400010F0<32>:word32] = Mem64[0x4200DD14<32>:int32]
	Mem70[Mem67[0x4200DD04<32>:int32] + 100<i32>:word32] = 0x40001000<32>
	Mem73[Mem70[0x4200DD48<32>:int32] + 88<i32>:word32] = 0x40001000<32>
	Mem76[0x40001220<32>:word32] = Mem73[0x4200DD20<32>:int32]
	Mem79[Mem76[0x4200DD44<32>:int32] + 112<i32>:word32] = 0x40001000<32>
	Mem82[0x400010A4<32>:word32] = Mem79[0x4200DD50<32>:int32]
	return 0x40001000<32>
rf_pri_restore_state_for_cal_exit:


void rf_pri_singen_start()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_iq
//      rf_pri_txcal
// MayUse: 
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
rf_pri_singen_start_entry:
l23016034:
	Mem9[0x4000120C<32>:word32] = Mem0[0x4000120C<32>:int32] & 0x7FFFFFFF<32>
	Mem12[0x4000120C<32>:word32] = Mem9[0x4000120C<32>:int32] | 0x80000000<32>
	return
rf_pri_singen_start_exit:


word32 rf_pri_pm_pwr(ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal_search_core
//      rf_pri_rccal_iq
// MayUse: 
// LiveOut: a0 a2 a3 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
rf_pri_pm_pwr_entry:
l23016056:
	Mem9[0x40001618<32>:word32] = Mem0[0x40001618<32>:int32] & 0xDFEFFFFF<32>
	Mem13[0x40001618<32>:word32] = Mem9[0x40001618<32>:int32] | 0x20100000<32>
l23016078:
	word32 a4_16 = Mem13[0x40001618<32>:int32]
	branch a4_16 << 3<u32> >= 0<32> l23016078
l23016088:
	word32 a5_25 = Mem13[0x40001624<32>:int32] << 7<i32> >> 16<i32>
	word32 a2_21 = Mem13[a4_16:word32]
	word32 a0_24 = Mem13[0x40001620<32>:int32] << 7<i32> >> 16<i32>
	Mem30[a4_16 & 0xDFEFFFFF<32>:word32] = a2_21
	a2Out = a2_21
	a3Out = 0xDFEFFFFF<32>
	a5Out = a5_25 * 2<32>
	return a0_24 * 2<32> + a5_25 * 2<32>
rf_pri_pm_pwr_exit:


word32 rf_pri_start_txdfe(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_iq
//      rf_pri_txcal
//      rf_pri_init
// MayUse: 
// LiveOut: a3 a5
// Trashed: a3 a4 a5
// Preserved: sp
rf_pri_start_txdfe_entry:
l230160B0:
	Mem9[0x40001220<32>:word32] = Mem0[0x40001220<32>:int32] & -385<i32>
	Mem15[0x40001220<32>:word32] = Mem9[0x40001220<32>:int32] & 0xFE0007FF<32> | 0x1000082<32>
	Mem18[0x40001220<32>:word32] = Mem15[0x40001220<32>:int32] | 256<i32>
	a5Out = 0x40001000<32>
	return 0x1000082<32>
rf_pri_start_txdfe_exit:


word32 rf_pri_pm_pwr_avg(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_iq
//      rf_pri_roscal_iq.isra.3
//      rf_pri_txcal
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
rf_pri_pm_pwr_avg_entry:
l230160E6:
	Mem9[0x40001618<32>:word32] = Mem0[0x40001618<32>:int32] & 0xDFEFFFFF<32>
	Mem17[0x4000161C<32>:word32] = a1 << 16<i32> | CONVERT(Mem9[0x4000161C<32>:word16], word16, word32)
	Mem20[0x40001618<32>:word32] = Mem17[0x40001618<32>:int32] | 0x20000000<32>
l23016118:
	branch Mem20[0x40001618<32>:int32] << 3<u32> >= 0<32> l23016118
l23016124:
	word32 a0_27
	branch a0 == 0<32> l23016144
l23016144:
	a0_27 = Mem20[0x40001624<32>:int32]
l23016126:
	a0_27 = Mem20[0x40001620<32>:int32]
l2301612A:
	word32 a5_31 = Mem20[0x40001618<32>:int32]
	Mem37[0x40001618<32>:word32] = a5_31 & 0xDFEFFFFF<32>
	a3Out = 0x40001000<32>
	a5Out = a5_31 & 0xDFEFFFFF<32>
	return CONVERT(SLICE(a0_27, word25, 0), word25, int32)
rf_pri_pm_pwr_avg_exit:


word32 rf_pri_txcal_config_hw(word32 a2, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
//      rf_pri_init
// MayUse:  a2:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
rf_pri_txcal_config_hw_entry:
l2301614A:
	word32 a2_14 = a2 & 63<i32> | Mem0[0x40001180<32>:int32] & -64<i32>
	word32 a2_22 = (a2_14 >>u 6<i32> & 63<i32>) << 8<i32> | a2_14 & 0xFC0000FF<32>
	word32 a2_35 = ((a2_22 & 0xFFC0FFFF<32>) >>u 6<i32> & 63<i32>) << 24<i32> | (a2_22 & 0xFFC0FFFF<32>) & 0xC0FFFFFF<32>
	Mem36[0x40001180<32>:word32] = a2_35
	word32 a2_42 = a2_35 & 63<i32> | Mem36[0x40001184<32>:int32] & -64<i32>
	word32 a1_44 = Mem36[a2_42 + 120<i32>:word32]
	Mem60[0x40001184<32>:word32] = (Mem36[a1_44 + 128<i32>:int32] >>u 6<i32> & 63<i32>) << 24<i32> | (((a2_42 >>u 6<i32> & 63<i32>) << 8<i32> | a2_42 & 0xFC0000FF<32>) & 0xFFC0FFFF<32> | (Mem36[a1_44 + 128<i32>:int32] & 63<i32>) << 16<i32>) & 0xC0FFFFFF<32>
	word32 t1_61 = Mem60[0x4200D92C<32>:int32]
	Mem84[0x40001188<32>:word32] = (Mem60[t1_61 + 144<i32>:int32] >>u 6<i32> & 63<i32>) << 24<i32> | (((Mem60[t1_61 + 136<i32>:int32] >>u 6<i32> & 63<i32>) << 8<i32> | (Mem60[t1_61 + 136<i32>:int32] & 63<i32> | Mem60[0x40001188<32>:int32] & -64<i32>) & 0xFC0000FF<32>) & 0xFFC0FFFF<32> | (Mem60[t1_61 + 144<i32>:int32] & 63<i32>) << 16<i32>) & 0xC0FFFFFF<32>
	word32 a1_86 = Mem84[0x4200D92C<32>:int32]
	Mem108[0x4000118C<32>:word32] = (Mem84[a1_86 + 160<i32>:int32] >>u 6<i32> & 63<i32>) << 24<i32> | (((Mem84[a1_86 + 152<i32>:int32] >>u 6<i32> & 63<i32>) << 8<i32> | (Mem84[a1_86 + 152<i32>:int32] & 63<i32> | Mem84[0x4000118C<32>:int32] & -64<i32>) & 0xFC0000FF<32>) & 0xFFC0FFFF<32> | (Mem84[a1_86 + 160<i32>:int32] & 63<i32>) << 16<i32>) & 0xC0FFFFFF<32>
	word32 a3_110 = Mem108[0x40001190<32>:int32]
	Mem123[0x40001190<32>:word32] = ((a3_110 >>u 12<i32> & 2047<i32>) << 16<i32> | a3_110 & 0xF800FFFF<32>) & -1024<i32> | (a3_110 & 0xF800FFFF<32>) & 1023<i32>
	word32 a3_124 = Mem123[0x40001194<32>:int32]
	Mem136[0x40001194<32>:word32] = ((a3_124 >>u 12<i32> & 2047<i32>) << 16<i32> | a3_124 & 0xF800FFFF<32>) & -1024<i32> | (a3_124 & 0xF800FFFF<32>) & 1023<i32>
	word32 a3_137 = Mem136[0x40001198<32>:int32]
	Mem149[0x40001198<32>:word32] = ((a3_137 >>u 12<i32> & 2047<i32>) << 16<i32> | a3_137 & 0xF800FFFF<32>) & -1024<i32> | (a3_137 & 0xF800FFFF<32>) & 1023<i32>
	word32 a0_151 = Mem149[0x4200D92C<32>:int32]
	Mem162[0x4000119C<32>:word32] = ((Mem149[a0_151 + 128<i32>:int32] >>u 12<i32> & 2047<i32>) << 16<i32> | Mem149[0x4000119C<32>:int32] & 0xF800FFFF<32>) & -1024<i32> | Mem149[a0_151 + 132<i32>:int32] & 1023<i32>
	word32 a0_164 = Mem162[0x4200D92C<32>:int32]
	Mem175[0x400011A0<32>:word32] = ((Mem162[a0_164 + 136<i32>:int32] >>u 12<i32> & 2047<i32>) << 16<i32> | Mem162[0x400011A0<32>:int32] & 0xF800FFFF<32>) & -1024<i32> | Mem162[a0_164 + 140<i32>:int32] & 1023<i32>
	word32 a0_177 = Mem175[0x4200D92C<32>:int32]
	Mem188[0x400011A4<32>:word32] = ((Mem175[a0_177 + 144<i32>:int32] >>u 12<i32> & 2047<i32>) << 16<i32> | Mem175[0x400011A4<32>:int32] & 0xF800FFFF<32>) & -1024<i32> | Mem175[a0_177 + 148<i32>:int32] & 1023<i32>
	word32 a0_190 = Mem188[0x4200D92C<32>:int32]
	Mem201[0x400011A8<32>:word32] = ((Mem188[a0_190 + 152<i32>:int32] >>u 12<i32> & 2047<i32>) << 16<i32> | Mem188[0x400011A8<32>:int32] & 0xF800FFFF<32>) & -1024<i32> | Mem188[a0_190 + 156<i32>:int32] & 1023<i32>
	word32 a3_204 = Mem201[0x4200D92C<32>:int32]
	word32 a4_213 = ((Mem201[a3_204 + 160<i32>:int32] >>u 12<i32> & 2047<i32>) << 16<i32> | Mem201[0x400011AC<32>:int32] & 0xF800FFFF<32>) & -1024<i32> | Mem201[a3_204 + 164<i32>:int32] & 1023<i32>
	Mem214[0x400011AC<32>:word32] = a4_213
	a5Out = 0x40001000<32>
	return a4_213
rf_pri_txcal_config_hw_exit:


word32 rf_pri_fcal_meas(word32 ra, word32 s0, word32 a0, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_fcal
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a2 a3 a4 a5 ra
// Preserved: s0 sp
rf_pri_fcal_meas_entry:
l230163EC:
	word32 a5_9 = Mem7[0x400010A0<32>:int32]
	Mem13[0x400010A0<32>:word32] = a0 | a5_9 & -256<i32>
	word32 s0_17
	word32 ra_18
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:100<i32>,a5:a5_9 & -256<i32>,ra:0x4200C408<p32>,s0:0x40001000<32>,Stack +0004:s0,Stack +0084:ra
		defs: ra:ra_18,s0:s0_17
	Mem26[s0_17 + 172<i32>:word32] = Mem13[s0_17 + 172<i32>:int32] | 16<i32>
l23016420:
	word32 a3_30 = Mem26[0x400010AC<32>:int32]
	branch a3_30 << 0xB<u32> >= 0<32> l23016420
l23016430:
	word32 a0_35 = Mem26[0x400010A8<32>:int32] >>u 16<i32>
	Mem37[Mem26[0x400010AC<32>:int32] & 0xFFFFFFEF<32>:word32] = 0x400010AC<32>
	a0Out = a0_35
	a3Out = a3_30
	return ra_18
rf_pri_fcal_meas_exit:


word32 rf_pri_rccal_config.part.0(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_config
//      rf_pri_rccal
// MayUse:  a0:[0..31]
// LiveOut: a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_pri_rccal_config.part.0_entry:
l23016446:
	Mem17[0x40001080<32>:word32] = a0 << 8<i32> | (a0 << 0x18<u32> | Mem0[0x40001080<32>:int32] & 0xC0FFFFFF<32>) & 0xFC0000FF<32>
	return 0x40001000<32>
rf_pri_rccal_config.part.0_exit:


word32 rf_pri_rccal_config(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_iq
//      rf_pri_rccal
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
rf_pri_rccal_config_entry:
l2301646E:
	branch a0 == 0<32> l23016476
l23016476:
	Mem15[0x40001080<32>:word32] = (a1 << 0x10<u32> | Mem0[0x40001080<32>:int32] & 0xFFC0FFFF<32>) & -64<i32> | a1
	return 0x40001000<32>
l23016470:
l23016472_thunk_rf_pri_rccal_config.part.0:
	return rf_pri_rccal_config.part.0(a1)
rf_pri_rccal_config_exit:


word32 rf_pri_txcal_config(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal_search_core
//      rf_pri_txcal
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a1 a3 a4
// Trashed: a1 a3 a4 a5
// Preserved: sp
rf_pri_txcal_config_entry:
l23016498:
	branch a0 != 2<32> l230164BE
l230164BE:
	branch a0 != 3<32> l230164E4
l230164E4:
	word32 a5_11
	word32 a1_13
	branch a0 != 0<32> l230164FC
l230164FC:
	branch a0 != 1<32> l230164FA
l23016502:
	a3 = Mem0[0x71<32>:word32]
	a4 = 0xFFC0FFFF<32>
	a5_11 = 1<32>
	a1_13 = a1 << 16<i32>
l230164E6:
	a3 = Mem0[0x73<32>:word32]
	a4 = 0xC0FFFFFF<32>
	a5_11 = 3<32>
	a1_13 = a1 << 24<i32>
l230164F6:
	a1 = a1_13 | a5_11
	Mem23[a1 + 112<i32>:word32] = a3
l230164FA:
	a3Out = a3
	a4Out = a4
	return a1
l230164C4:
	branch a1 >= 0<32> l230164CC
l230164C8:
	a1 = a1 + 1024<i32>
l230164CC:
	word32 a1_30 = a1 | Mem0[0x40001600<32>:int32] & -1024<i32>
	Mem32[0x40001600<32>:word32] = a1_30 | 1024<i32>
	a3Out = a3
	a4Out = 0x40001000<32>
	return a1_30 | 1024<i32>
l2301649E:
	word32 a1_39 = a1 << 12<i32> | Mem0[0x40001600<32>:int32] & 0xFF800FFF<32>
	Mem42[0x40001600<32>:word32] = a1_39 | 0x800000<32>
	a3Out = 0x40001000<32>
	a4Out = 0xFF800FFF<32>
	return a1_39 | 0x800000<32>
rf_pri_txcal_config_exit:


word32 rf_pri_txcal_search_core(word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s11, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] s0:[0..31] s1:[0..31] s11:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +010C:[0..31]
// LiveOut: a0 a5 ra s0 s1 s11 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 tp
// Preserved: sp
rf_pri_txcal_search_core_entry:
l23016514:
	word32 a3_40
	word32 a3_46
	word32 s10_185
	word32 s2_203
	word32 s3_177
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a1:rf_pri_txcal_config(a0, a1, out a3_40, out a4_392),a2:a2,a3:a3_40,ra:0x4200C53E<p32>,s0:s0,s1:s1,s10:a2,s11:s11,s2:a1,s3:a0,s4:s4,s5:s5,s6:s6,s7:s7,s8:s8,s9:s9
		defs: a3:a3_46,s10:s10_56,s2:s2_47,s3:s3_48
	Mem75[0x40001618<32>:word32] = a3_46 << 10<i32> | Mem37[0x40001618<32>:int32] & 0xFFF00000<32>
	word32 a3_393
	word32 a5_394
	word32 a2_164
	word32 s11_159 = rf_pri_pm_pwr(out a2_164, out a3_393, out a5_394)
	word32 s4_179 = 1<32>
	word32 s5_180 = 2<32>
	word32 s6_181 = -512<i32>
	word32 s7_182 = 511<i32>
	word32 s8_103 = 2047<i32>
	word32 s9_108 = 63<i32>
l23016578:
	word32 s0_101 = s2_203 - s10_185
	word32 s1_100 = s2_203 + s10_185
	branch s4_179 <u s3_177 l230165F2
l230165F2:
	branch s3_177 != s5_180 l23016606
l23016606:
	branch s0_101 >= s6_181 l2301660E
l2301660A:
	s0_101 = -512<i32>
l2301660E:
	branch s7_182 >= s1_100 l23016592
l23016612:
	s1_100 = 511<i32>
l230165F6:
	branch s0_101 >= 0<32> l230165FC
l230165FA:
	s0_101 = 0<32>
l230165FC:
	branch s8_103 >= s1_100 l23016592
l23016600:
	s1_100 = 2047<i32>
l23016584:
	branch s0_101 >= 0<32> l2301658A
l23016588:
	s0_101 = 0<32>
l2301658A:
	branch s9_108 >= s1_100 l23016592
l2301658E:
	s1_100 = 63<i32>
l23016592:
	word32 a3_123
	word32 s2_176
	word32 s11_186
	word32 s0_189
	word32 s1_190
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a1:rf_pri_txcal_config(s3_93, s0_111, out a3_123, out a4_395),a2:a2_164,a3:a3_123,ra:0x4200C5A0<p32>,s0:s0_111,s1:s1_167,s10:s10_89 >> 1<u32>,s11:s11_159,s2:s2_88,s3:s3_93,s4:s4_92,s5:s5_94,s6:s6_95,s7:s7_98,s8:s8_103,s9:s9_108
		defs: s0:s0_189,s1:s1_190,s10:s10_185,s11:s11_186,s2:s2_176,s3:s3_177,s4:s4_179,s5:s5_180,s6:s6_181,s7:s7_182,s8:s8_183,s9:s9_184
	word32 a3_396
	word32 a5_201
	word32 a0_197 = rf_pri_pm_pwr(out a2_164, out a3_396, out a5_201)
	branch a0_197 <u s11_186 l23016618
l23016618:
	s11_159 = a0_197
	s2_203 = s0_189
l230165B0:
	word32 a3_208
	word32 s1_229
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a1:rf_pri_txcal_config(s3_177, s1_190, out a3_208, out a4_397),a2:a2_198,a3:a3_208,ra:0x4200C5BA<p32>,s0:s0_189,s1:s1_190,s10:s10_185,s11:s11_186,s2:s2_176,s3:s3_177,s4:s4_179,s5:s5_180,s6:s6_181,s7:s7_182,s8:s8_183,s9:s9_184
		defs: s1:s1_229,s10:s10_224,s11:s11_225,s2:s2_215,s3:s3_216,s4:s4_218,s5:s5_219,s6:s6_220,s7:s7_221,s8:s8_222,s9:s9_223
	word32 a3_398
	word32 a0_236 = rf_pri_pm_pwr(out a2_164, out a3_398, out a5_201)
	branch a0_236 >=u s11_159 l230165CE
l230165CA:
	s11_159 = a0_236
	s2_203 = s1_229
l230165CE:
	branch s10_185 != 0<32> l23016578
l230165D2:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = s2_203
	a5Out = a5_201
	s4Out = dwArg0168
	s5Out = s5_180
	s6Out = s6_181
	s7Out = s7_182
	s8Out = dwArg0148
	s9Out = s9_108
	s11Out = s11_159
	return dwLoc08
rf_pri_txcal_search_core_exit:


word32 rf_pri_singen_config.constprop.8(word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal_iq
//      rf_pri_txcal
// MayUse:  a0:[0..31]
// LiveOut: a3 a4
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
rf_pri_singen_config.constprop.8_entry:
l2301661E:
	Mem12[0x4000120C<32>:word32] = a0 << 16<i32> | Mem0[0x4000120C<32>:int32] & 0xFC00FFFF<32>
	Mem17[0x40001214<32>:word32] = Mem12[0x40001214<32>:int32] & 0x3FFFFF<32>
	word32 a4_21 = Mem17[0x40001218<32>:int32] & 0x3FFFFF<32> | 0xC0000000<32>
	Mem22[0x40001218<32>:word32] = a4_21
	a4Out = a4_21
	return 0xC0000000<32>
rf_pri_singen_config.constprop.8_exit:


word32 rf_pri_rccal_iq(word32 ra, word32 a0, word32 fflags, word32 frm, word32 dwArgA8, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_rccal
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a3 fflags frm ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
rf_pri_rccal_iq_entry:
l2301665C:
	word32 a4_29
	word32 a4_21 = Mem19[0x4000160C<32>:int32]
	branch a0 == 0<32> l2301679A
l2301679A:
	Mem25[0x4000160C<32>:word32] = a4_21 | 1024<i32>
	a4_29 = Mem25[0x4000160C<32>:int32] & 0xFBFFFFFF<32>
l2301667C:
	Mem31[0x4000160C<32>:word32] = a4_21 & -1025<i32>
	a4_29 = Mem31[0x4000160C<32>:int32] | 0x4000000<32>
l2301668E:
	Mem37[0x4000160C<32>:word32] = a4_29
	word32 s0_38 = Mem37[0x40001048<32>:word32]
	Mem46[0x43001148<32>:word32] = s0_38
	word32 a4_416
	rf_pri_singen_config.constprop.8(3<32>, out a4_416)
	Mem56[s0_38 + 532<i32>:word32] = Mem46[s0_38 + 532<i32>:int32] & -2048<i32> | 1023<i32>
	Mem60[s0_38 + 536<i32>:word32] = Mem56[s0_38 + 536<i32>:int32] & -2048<i32> | 1023<i32>
	rf_pri_singen_start()
	word32 a5_417
	rf_pri_start_txdfe(out a5_417)
	Mem73[s0_38 + 1560<i32>:word32] = Mem60[s0_38 + 1560<i32>:int32] & 0xFFF00000<32> | 0xFFFC00<32>
	word32 a3_418
	word32 a5_419
	rf_pri_pm_pwr_avg(a0, 1024<i32>, out a3_418, out a5_419)
	word32 a1_87
	word32 a0_100
	word32 a1_101
	word32 fflags_115
	word32 frm_116
	word32 s1_119
	word32 s2_120
	word32 s4_122
	word32 s6_429
	word32 s7_430
	word32 s8_431
	word32 s9_432
	word32 s0_423
	word32 a4_424
	word32 a5_425
	word32 s3_427
	word32 s5_428
	word32 a7_426
	word32 a3_421
	word32 a5_422
	word32 a2_420
	word32 ra_117 = __muldf3(ra, __floatunsidf(rf_pri_pm_pwr(out a2_420, out a3_421, out a5_422), out a1_87), a1_87, Mem73[0x230770E0<32>:int32], Mem73[0x230770E4<32>:int32], fflags, frm, out s0_423, out s1_119, out a0_100, out a1_101, out a4_424, out a5_425, out a7_426, out s2_120, out s3_427, out s4_122, out s5_428, out s6_429, out s7_430, out s8_431, out s9_432, out fflags_115, out frm_116)
	word32 a4_132
	word32 a0_128 = __fixunsdfsi(ra_117, a0_100, a1_101, fflags_115, frm_116, out a4_132)
	word32 s0_134 = Mem73[a4_132 + 72<i32>:word32]
	Mem139[(a4_132 & s1_119 | 0x6000200<32>) + 72<i32>:word32] = s0_134
	word32 a4_433
	rf_pri_singen_config.constprop.8(181<i32>, out a4_433)
	rf_pri_singen_start()
	word32 a5_434
	rf_pri_start_txdfe(out a5_434)
	Mem159[s0_134 + 1560<i32>:word32] = Mem139[s0_134 + 1560<i32>:int32] & s4_122 | 0x2D400<32>
	word32 s1_160 = 0<32>
	word32 s0_161 = 6<32>
	word32 s4_162 = 32<i32>
l23016754:
	word32 s5_165 = s4_162 + s1_160
	rf_pri_rccal_config(s2_120, s5_165)
	word32 a2_435
	word32 a3_436
	word32 a5_437
	branch a0_128 >=u rf_pri_pm_pwr(out a2_435, out a3_436, out a5_437) l2301676A
l23016768:
	s1_160 = s5_165
l2301676A:
	s0_161 = s0_161 + 0xFFFFFFFF<32>
	s4_162 = s4_162 >>u 1<u32>
	branch s0_161 != 0<32> l23016754
l23016772:
	word32 s4_185 = 63<i32>
l2301677A:
	word32 a0_214
	rf_pri_rccal_config(s2_120, s1_160)
	word32 s0_202 = s0_161 << 1<i32>
	word32 a3_198
	word32 a5_439
	word32 a2_438
	branch a0_128 >=u rf_pri_pm_pwr(out a2_438, out a3_198, out a5_439) l230167B0
l230167B0:
	s0_161 = s0_202 & 0xF<32>
	s1_160 = s1_160 + 0xFFFFFFFF<32>
	branch (s0_202 & 0xF<32>) == 0xA<32> l23016796
l2301678C:
	s0_161 = s0_202 + 1<32> & 0xF<32>
	s1_160 = s1_160 + 1<32>
	branch s0_161 != 5<32> l230167B8
l230167B8:
	s4_185 = s4_185 + 0xFFFFFFFF<32>
	branch s4_185 != 0<32> l2301677A
l230167BE:
	a0_214 = 2<32>
l23016796:
	a0_214 = 3<32>
l230167C0:
	0<32> = dwArgA8
	a0Out = a0_214
	a3Out = a3_198
	s2Out = s2_120
	fflagsOut = fflags_115
	frmOut = frm_116
	return ra_117
rf_pri_rccal_iq_exit:


word32 rf_pri_config_channel.constprop.9(word32 s6, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg8C, word32 dwArg98, word32 dwArgBC, word32 dwArg0128, ptr32 & a5Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_txcal
//      rf_pri_roscal
// MayUse:  s6:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +0128:[0..31]
// LiveOut: a5 ra s10 s11 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
rf_pri_config_channel.constprop.9_entry:
l230167D4:
	word32 a2_7 = Mem5[0x4200D92C<32>:int32]
	Mem41[0x400010A0<32>:word32] = (CONVERT(Mem23[a2_7 + 46<i32>:uint16], uint16, word32) >>u 8<i32> & 0x1F<32>) << 16<i32> | (CONVERT(Mem23[a2_7 + 46<i32>:uint16], uint16, word32) & 255<i32> | Mem23[0x400010A0<32>:int32] & -256<i32>) & 0xFFE0FFFF<32>
	Mem56[0x400010BC<32>:word32] = (CONVERT(Mem41[Mem41[0x4200D92C<32>:int32] + 46<i32>:uint16], uint16, word32) & 255<i32>) >>u 4<i32> << 20<i32> | Mem41[0x400010BC<32>:int32] & 0xFF0FFFFF<32>
	Mem65[0x400010C4<32>:word32] = Mem56[0x400010C4<32>:int32] & 0xC0000000<32> | Mem56[0x4200CF64<32>:int32]
	Mem70[0x400010C0<32>:word32] = Mem65[0x400010C0<32>:int32] & 0xFEFFFFFF<32>
	word32 s1_230 = 0x4200E000<32>
	word32 s0_164 = 0x40001000<32>
	word32 s5_236 = 0x10000000<32>
	word32 s2_233 = 0xEFFFFFFF<32>
	word32 s6_237 = 0x10000000<32>
	word32 s3_234 = 0xEFFFFFFF<32>
	word32 s7_238 = 0x1100000<32>
	word32 s4_235 = 0x2308B000<32>
l23016882:
	word32 a5_76 = Mem72[s0_164 + 184<i32>:int32] | s5_236
	Mem77[s0_164 + 184<i32>:word32] = a5_76
	word32 s1_87
	word32 s0_89
	word32 s2_90
	word32 s3_91
	word32 s4_92
	word32 s5_93
	word32 s6_94
	word32 s7_95
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a5:a5_76,ra:0x4200C890<p32>,s0:s0_71,s1:s1_79,s2:s2_80,s3:s3_81,s4:s4_82,s5:s5_75,s6:s6_83,s7:s7_84
		defs: s0:s0_89,s1:s1_87,s2:s2_90,s3:s3_91,s4:s4_92,s5:s5_93,s6:s6_94,s7:s7_95
	word32 a5_108 = Mem77[s0_89 + 184<i32>:int32] & s2_90
	Mem109[s0_89 + 184<i32>:word32] = a5_108
	word32 s1_112
	word32 s0_114
	word32 s2_115
	word32 s3_116
	word32 s4_117
	word32 s5_118
	word32 s6_119
	word32 s7_120
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a5:a5_108,ra:0x4200C8A8<p32>,s0:s0_89,s1:s1_87,s2:s2_90,s3:s3_91,s4:s4_92,s5:s5_93,s6:s6_94,s7:s7_95
		defs: s0:s0_114,s1:s1_112,s2:s2_115,s3:s3_116,s4:s4_117,s5:s5_118,s6:s6_119,s7:s7_120
	word32 a5_133 = Mem109[s0_114 + 176<i32>:int32] | s6_119
	Mem134[s0_114 + 176<i32>:word32] = a5_133
	word32 s1_137
	word32 s0_139
	word32 s2_140
	word32 s3_141
	word32 s4_142
	word32 s5_143
	word32 s6_144
	word32 s7_145
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a5:a5_133,ra:0x4200C8BE<p32>,s0:s0_114,s1:s1_112,s2:s2_115,s3:s3_116,s4:s4_117,s5:s5_118,s6:s6_119,s7:s7_120
		defs: s0:s0_139,s1:s1_137,s2:s2_140,s3:s3_141,s4:s4_142,s5:s5_143,s6:s6_144,s7:s7_145
	word32 a5_158 = Mem134[s0_139 + 176<i32>:int32] & s3_141
	Mem159[s0_139 + 176<i32>:word32] = a5_158
	word32 s4_167
	word32 s7_170
	word32 ra_171
	word32 a3_173
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a5:a5_158,ra:0x4200C8D6<p32>,s0:s0_139,s1:s1_137,s2:s2_140,s3:s3_141,s4:s4_142,s5:s5_143,s6:s6_144,s7:s7_145
		defs: a3:a3_173,ra:ra_171,s0:s0_164,s4:s4_167,s7:s7_170
	branch (Mem159[s0_164 + 180<i32>:int32] & s7_170) == 0<32> l230168F2
l230168F2:
	0<32> = dwArg0128
l2301691C_thunk_printf:
	word32 a5_199
	word32 s10_208
	word32 s11_209
	word32 s9_217
	word32 a2_334
	word32 a1_333
	word32 a0_332
	word32 s1_331
	word32 a3_335
	word32 a4_336
	word32 a7_337
	word32 s2_338
	word32 s3_339
	word32 s4_340
	word32 s5_341
	word32 s6_342
	word32 s7_343
	word32 s8_344
	word32 t4_345
	word32 ra_206 = printf(ra_171, 0x23077024<32>, a3_173, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_331, out a0_332, out a1_333, out a2_334, out a3_335, out a4_336, out a5_199, out a7_337, out s2_338, out s3_339, out s4_340, out s5_341, out s6_342, out s7_343, out s8_344, out s9_217, out s10_208, out s11_209, out t4_345)
	a5Out = a5_199
	s9Out = s9_217
	s10Out = s10_208
	s11Out = s11_209
	return ra_206
rf_pri_config_channel.constprop.9_exit:
l230168E8:
	word32 t4_330
	word32 s11_329
	word32 s10_328
	word32 s9_327
	word32 s8_326
	word32 a7_325
	word32 a5_324
	word32 a4_323
	word32 a3_322
	word32 a2_321
	word32 a1_320
	word32 a0_319
	printf(ra_171, s4_167 + -1236<i32>, a3_173, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_230, out a0_319, out a1_320, out a2_321, out a3_322, out a4_323, out a5_324, out a7_325, out s2_233, out s3_234, out s4_235, out s5_236, out s6_237, out s7_238, out s8_326, out s9_327, out s10_328, out s11_329, out t4_330)


word32 rf_pri_roscal_iq.isra.3(word32 a0, word32 a5, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_roscal
// MayUse:  a0:[0..31] a5:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a5 s0 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
rf_pri_roscal_iq.isra.3_entry:
l23016920:
	word32 s0_100 = 6<32>
	word32 s2_101 = 0<32>
	word32 s4_27 = 32<i32>
l23016948:
	word32 a5_38
	word32 s1_32 = Mem31[a5 + 124<i32>:word32]
	word32 s6_35 = s4_27 + s2_101
	branch a0 == 0<32> l230169CC
l230169CC:
	a5_38 = s6_35 | a5 & -64<i32>
l23016952:
	a5_38 = s6_35 << 8<u32> | a5 & 0xFC0000FF<32>
l2301695C:
	Mem45[a5_38 + 124<i32>:word32] = s1_32
	word32 a3_243
	branch rf_pri_pm_pwr_avg(a0, 1024<i32>, out a3_243, out a5) > 0<32> l2301696E
l2301696C:
	s2_101 = s6_35
l2301696E:
	s0_100 = s0_100 + 0xFFFFFFFF<32>
	s4_27 = s4_27 >>u 1<u32>
	branch s0_100 != 0<32> l23016948
l23016976:
	word32 s4_106 = 63<i32>
l23016988:
	word32 a5_75
	word32 s1_71 = Mem70[a5 + 124<i32>:word32]
	branch a0 == 0<32> l230169D6
l230169D6:
	a5_75 = a5 & -64<i32> | s2_101
l2301698E:
	a5_75 = s2_101 << 8<u32> | a5 & 0xFC0000FF<32>
l23016998:
	Mem82[a5_75 + 124<i32>:word32] = s1_71
	word32 s0_93 = s0_100 << 1<i32>
	word32 a3_88
	branch rf_pri_pm_pwr_avg(a0, 1024<i32>, out a3_88, out a5) <= 0<32> l230169E0
l230169E0:
	s0_100 = s0_93 & 0xF<32>
	s2_101 = s2_101 + 1<32>
	branch (s0_93 & 0xF<32>) == 0xA<32> l230169B4
l230169AA:
	s0_100 = s0_93 + 1<32> & 0xF<32>
	s2_101 = s2_101 + 0xFFFFFFFF<32>
	branch s0_100 != 5<32> l230169E8
l230169E8:
	s4_106 = s4_106 + 0xFFFFFFFF<32>
	branch s4_106 != 0<32> l23016988
l230169EE:
l230169B4:
	0<32> = dwArg0128
	a0Out = s2_101
	a3Out = a3_88
	a5Out = a5
	s4Out = dwArg78
	s5Out = 0xFC0000FF<32>
	s8Out = s5
	return dwArgE4
rf_pri_roscal_iq.isra.3_exit:


void rf_pri_chipv(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
rf_pri_chipv_entry:
l230169F0:
	branch a0 != 0<32> l23016AE4
l23016AE4:
	branch a0 != 1<32> l23016BD6
l23016AEA:
	Mem9[0x50005<32>:word32] = 0x4200D924<32>
	Mem14[0x4200D928<32>:word16] = 5<16>
	word32 a4_16 = 0x1C<32>
l23016B1E:
	word32 a5_21 = a4_16 + -28<i32>
l23016B22:
	word32 a0_26 = Mem25[a5_21 + 0x230773EC<32>:word32]
	Mem29[a5_21 + 0x42011B74<32>:word32] = a0_26
	Mem32[a5_21 + 0x42011D34<32>:word32] = a0_26
	a5_21 = a5_21 + 4<32>
	branch a5_21 != a4_16 l23016B22
l23016B3E:
	a4_16 = a5_21 + 28<i32>
	branch a5_21 != -448<i32> l23016B1E
l23016B46:
	word32 a5_40 = 0<32>
	word32 a2_43 = 56<i32>
l23016B5C:
	Mem52[Mem47[a5_40 + 0x42011B3C<32>:word32]:word32] = a5_40 + 0x42011B04<32>
	a5_40 = a5_40 + 4<32>
	branch a5_40 != 56<i32> l23016B5C
l23016B6E:
	word32 a4_57 = 0x42011EF4<32>
l23016B82:
	word32 a5_61 = Mem60[a2_43:word32]
	a4_57 = a4_57 + 0x10<32>
	Mem65[a4_57 + 4080<i32>:word32] = a2_43
	Mem67[a4_57 + 4084<i32>:word32] = Mem65[a5_61 + 4<32>:int32]
	Mem69[a4_57 + 4088<i32>:word32] = Mem67[a5_61 + 8<32>:int32]
	a2_43 = Mem69[a5_61 + 0xC<32>:int32]
	Mem71[a4_57 + 4092<i32>:word32] = a2_43
	branch a5_61 != 0xDCF88964<32> l23016B82
l23016BA8:
	word32 a5_74 = Mem71[a4_57:word32]
	Mem76[0xC<32>:word32] = a4_57
	word32 a5_77 = Mem76[a5_74:word32]
	Mem79[9<32>:word32] = a5_77
	Mem80[0x14<32>:word32] = a5_77
	Mem81[0x11<32>:word32] = a5_77
	Mem82[0x1C<32>:word32] = a5_77
	Mem83[0x19<32>:word32] = a5_77
	Mem84[0x24<32>:word32] = a5_77
	Mem85[0x21<32>:word32] = a5_77
	Mem87[0x21<32>:word32] = a5_77
	Mem88[0x25<32>:word32] = a5_77
	Mem89[0x25<32>:word32] = a5_77
	Mem90[0x2D<32>:word32] = a5_77
	Mem92[0x32<32>:word32] = a5_77
l23016BD6:
	return
l230169F2:
	Mem97[0x60003<32>:word32] = 0x4200D924<32>
	Mem102[0x4200D928<32>:word16] = 6<16>
	word32 a4_104 = 0x1C<32>
l23016A26:
	word32 a5_109 = a4_104 + -28<i32>
l23016A2A:
	word32 a0_114 = Mem113[a5_109 + 0x2307722C<32>:word32]
	Mem117[a5_109 + 0x42011B74<32>:word32] = a0_114
	Mem120[a5_109 + 0x42011D34<32>:word32] = a0_114
	a5_109 = a5_109 + 4<32>
	branch a4_104 != a5_109 l23016A2A
l23016A46:
	a4_104 = a4_104 + 0x1C<32>
	branch a4_104 != 476<i32> l23016A26
l23016A4C:
	word32 a5_128 = 0<32>
	word32 a2_131 = 56<i32>
l23016A62:
	Mem140[Mem135[a5_128 + 0x230771F4<32>:word32]:word32] = a5_128 + 0x42011B04<32>
	a5_128 = a5_128 + 4<32>
	branch a5_128 != 56<i32> l23016A62
l23016A74:
	word32 a4_145 = 0x42011EF4<32>
l23016A88:
	word32 a5_149 = Mem148[a2_131:word32]
	a4_145 = a4_145 + 0x10<32>
	Mem153[a4_145 + 4080<i32>:word32] = a2_131
	Mem155[a4_145 + 4084<i32>:word32] = Mem153[a5_149 + 4<32>:int32]
	Mem157[a4_145 + 4088<i32>:word32] = Mem155[a5_149 + 8<32>:int32]
	a2_131 = Mem157[a5_149 + 0xC<32>:int32]
	Mem159[a4_145 + 4092<i32>:word32] = a2_131
	branch a5_149 != 0xDCF889E4<32> l23016A88
l23016AAE:
	word32 a5_162 = Mem159[a4_145:word32]
	Mem164[0xA<32>:word32] = a4_145
	word32 a5_165 = Mem164[a5_162:word32]
	Mem167[7<32>:word32] = a5_165
	Mem168[0x12<32>:word32] = a5_165
	Mem169[0xF<32>:word32] = a5_165
	Mem170[0x1A<32>:word32] = a5_165
	Mem171[0x17<32>:word32] = a5_165
	Mem172[0x22<32>:word32] = a5_165
	Mem173[0x1F<32>:word32] = a5_165
	Mem174[a5_165 + 32<i32>:word32] = 0<32>
	Mem175[a5_165 + 36<i32>:word32] = 0<32>
	Mem176[a5_165 + 36<i32>:word32] = 0<32>
	Mem177[a5_165 + 44<i32>:word32] = 0<32>
	Mem178[a5_165 + 48<i32>:word32] = 0<32>
	return
rf_pri_chipv_exit:


void rf_pri_update_tx_power_offset(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_apply_tx_power_offset
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
rf_pri_update_tx_power_offset_entry:
l23016BD8:
	word32 s1_17 = CONVERT(Mem16[a1 + a0:int8], int8, int32)
	word32 a6_97
	word32 a5_96
	word32 a1_93
	word32 a2_94
	word32 a3_95
	word32 a7_98
	word32 a4_24
	memcpy(0x42011B74<32>, 0x42011D34<32>, 448<i32>, out a1_93, out a2_94, out a3_95, out a4_24, out a5_96, out a6_97, out a7_98)
	word32 s1_40 = (s1_17 ^ 4<32>) + 0xFFFFFFF6<32>
l23016C1A:
	word32 a5_45 = Mem44[a4_24 + 20<i32>:word32]
	Mem49[a5_45 + 0x1014<32>:word32] = a4_24 + (s1_17 | 4<32>)
	a4_24 = Mem49[a5_45 + 0x18<32>:int32] + s1_40
	Mem53[a5_45 + 0x1018<32>:word32] = a4_24
	branch a5_45 != 0xBDFEE2E8<32> l23016C1A
l23016C32:
l23016C3E_thunk_rf_pri_set_gain_table_regs:
	rf_pri_set_gain_table_regs()
	return
rf_pri_update_tx_power_offset_exit:


word32 rf_pri_get_notch_param(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
rf_pri_get_notch_param_entry:
l23016C42:
	word32 a5_11 = 0xD<32>
	branch a0 >u 0xFFF9A8<32> l23016C5C
l23016C4E:
	a5_11 = a0 + 0xFF000694<32> >>u 5<32>
l23016C5C:
	word32 a5_20 = Mem0[Mem0[0xFFF9A8<32>:word32] + 4<i32>:word32]
	Mem23[a1:byte] = 0xA8<8>
	Mem26[a5_20:word32] = a2
	return a5_11 << 3<u32>
rf_pri_get_notch_param_exit:


void rf_pri_update_param(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_set_channel
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 t1 t3 t4
// Preserved: sp
rf_pri_update_param_entry:
l23016C76:
	word32 a4_23
	word32 a5_24
	word32 a5_15
	Mem4[0x4200ECE0<32>:word32] = 0<32>
	Mem6[0x4200ECE4<32>:word32] = 0<32>
	Mem8[0x4200ECDC<32>:word32] = 0<32>
	Mem10[0x4200ED5C<32>:word32] = 0<32>
	branch a0 <=u 0xFFF96B<32> l23016E46
l23016CA0:
	branch a0 <=u 0xFFF970<32> l23016E46
l23016E46:
	a5_15 = 0<32>
l23016CA8:
	branch a0 <=u 0xFFF97A<32> l23016E3A
l23016E3A:
	a5_15 = 1<32>
l23016CB0:
	branch a0 <=u 0xFFF989<32> l23016E3E
l23016E3E:
	a5_15 = 2<32>
l23016CB8:
	branch a0 <=u 0xFFF998<32> l23016E42
l23016E42:
	a5_15 = 3<32>
l23016CC0:
	a4_23 = 8<32>
	a5_24 = 7<32>
	branch a0 >u 0xFFF9A7<32> l23016D38
l23016CCC:
	a5_15 = 4<32>
l23016CCE:
	word32 a2_29 = a5_15 << 2<u32>
	word32 a7_33 = Mem10[a2_29 + 0x2307700C<32>:int32]
	word32 a6_35 = 0<32>
	branch a7_33 == a0 l23016CEE
l23016CEA:
	a6_35 = a0 - a7_33
l23016CEE:
	word32 t1_47 = Mem10[a2_29 + 0x23076FDC<32>:int32]
	word32 a1_60 = a2_29 + 0x23076FDC<32> - a7_33
	word32 a2_53 = Mem10[a2_29 + 0x23076FF4<32>:word32]
	a4_23 = (Mem10[a2_29 + 0x23076FDC<32>:word32] - t1_47 + a6_35 >>u a1_60) + t1_47
	a5_24 = ((a5_15 + 1<32> << 2<i32>) - a2_53 + a6_35 >>u a1_60) + a2_53
l23016D38:
	Mem70[a5_24 + 31<i32>:word32] = 0x4200D004<32>
	Mem77[55<i32> - a4_23 + 20<i32>:word32] = 0x4200D004<32>
	word32 a7_101 = 0x4200D004<32>
	word32 a6_240 = 0<32>
	word32 a3_100 = 0xA<32>
	word32 a5_80 = 0x14<32> - a5_24
l23016D62:
	word32 a1_132 = Mem83[a7_101 + 16<i32>:int32] + a6_240 - a5_80
	a6_240 = 0<32>
	branch a3_100 >= a1_132 l23016D74
l23016D70:
	a6_240 = a1_132 - a3_100
l23016D74:
	branch a3_100 >= a1_132 l23016D7A
l23016D78:
	a1_132 = a3_100
l23016D7A:
	Mem98[a7_101 + 12<i32>:word32] = a1_132
	a3_100 = a3_100 + 0xFFFFFFFB<32>
	a7_101 = a7_101 + 0xFFFFFFFC<32>
	branch a3_100 != 0xFFFFFFF6<32> l23016D62
l23016D86:
	word32 a3_110 = 56<i32>
	word32 a7_111 = 0<32>
	word32 a5_114 = 0<32> - (a4_23 ^ 4<32>)
	word32 a5_116 = 0x14<32>
	word32 a4_117 = 0x14<32> - a4_23
l23016DA8:
	word32 a2_120 = Mem119[a5_116 + 20<i32>:word32]
	a5_116 = a5_116 - a7_111 + a4_117
	branch a5_116 > 95<i32> l23016E4A
l23016E4A:
	a5_116 = a5_116 + (a5_114 + 5<i32>)
l23016DB4:
	Mem130[a5_116 + 24<i32>:word32] = a2_120
	word32 a2_133 = Mem130[a1_132 + 24<i32>:word32]
	a7_111 = 0<32>
	branch a1_132 >= a3_110 l23016DC2
l23016DBE:
	a7_111 = a3_110 - a1_132
l23016DC2:
	branch a1_132 >= a3_110 l23016DC8
l23016DC6:
	a1_132 = a3_110
l23016DC8:
	Mem144[a1_132 + 24<i32>:word32] = a2_133
	a3_110 = a3_110 + 5<32>
	branch a3_110 != 91<i32> l23016DA8
l23016DD2:
	word32 a3_177
	word32 a5_178
	Mem160[0x4200D014<32>:word32] = 0xF<32>
	Mem163[0x4200D018<32>:word32] = 51<i32>
	branch a0 >u 0xFFF985<32> l23016E4E
l23016E4E:
	a3_177 = Mem163[0xFFF9F1<32>:word32]
	a5_178 = CONVERT(Mem163[0x4200D928<32>:uint16], uint16, word32)
l23016DF6:
	a3_177 = Mem163[0xFFF9F1<32>:word32]
	a5_178 = CONVERT(Mem163[0x4200D926<32>:uint16], uint16, word32)
l23016DFE:
	word32 a5_194
	Mem187[(a5_178 | 0xFFF980<32>) + 108<i32>:word32] = a3_177
	branch a0 == 0xFFF98A<32> l23016EFE
l23016EFE:
	a5_194 = Mem187[0x42011B1C<32>:int32]
l23016E14:
	branch a0 >u 0xFFF98A<32> l23016E7A
l23016E7A:
	branch a0 == 0xFFF99E<32> l23016F1C
l23016F1C:
	a5_194 = Mem187[0x42011B2C<32>:int32]
l23016E82:
	branch a0 >u 0xFFF99E<32> l23016EA8
l23016EA8:
	branch a0 == 0xFFF9A8<32> l23016F26
l23016F26:
	a5_194 = Mem187[0x42011B34<32>:int32]
l23016EB0:
	branch a0 == 0xFFF9B4<32> l23016F30
l23016F30:
	a5_194 = Mem187[0x42011B38<32>:int32]
l23016EB8:
	branch a0 != 0xFFF9A3<32> l23016E34
l23016EC0:
	a5_194 = Mem187[0x42011B30<32>:int32]
l23016E86:
	branch a0 == 0xFFF994<32> l23016F08
l23016F08:
	a5_194 = Mem187[0x42011B24<32>:int32]
l23016E8E:
	branch a0 == 0xFFF999<32> l23016F12
l23016F12:
	a5_194 = Mem187[0x42011B28<32>:int32]
l23016E96:
	branch a0 != 0xFFF98F<32> l23016E34
l23016E9E:
	a5_194 = Mem187[0x42011B20<32>:int32]
l23016E18:
	branch a0 == 0xFFF976<32> l23016EE0
l23016EE0:
	a5_194 = Mem187[0x42011B0C<32>:int32]
l23016E20:
	branch a0 >u 0xFFF976<32> l23016E58
l23016E58:
	branch a0 == 0xFFF980<32> l23016EEA
l23016EEA:
	a5_194 = Mem187[0x42011B14<32>:int32]
l23016E60:
	branch a0 == 0xFFF985<32> l23016EF4
l23016EF4:
	a5_194 = Mem187[0x42011B18<32>:int32]
l23016E68:
	branch a0 != 0xFFF97B<32> l23016E34
l23016E70:
	a5_194 = Mem187[0x42011B10<32>:int32]
l23016E24:
	branch a0 == 0xFFF96C<32> l23016ECA
l23016ECA:
	a5_194 = Mem187[0x42011B04<32>:int32]
l23016E2C:
	branch a0 == 0xFFF971<32> l23016ED6
l23016ED6:
	a5_194 = Mem187[0x42011B08<32>:int32]
l23016ED2:
	Mem236[a5_194:word32] = 0x4200DD54<32>
	return
l23016E34:
	Mem238[0x4200DD54<32>:word32] = 0<32>
	return
rf_pri_update_param_exit:


void rf_pri_xtalfreq(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
rf_pri_xtalfreq_entry:
l23016F3A:
	word32 a4_456
	branch a0 != 0<32> l23017142
l23017142:
	word32 a4_603
	branch a0 != 1<32> l23017364
l23017364:
	branch a0 != 2<32> l23017556
l23017556:
	branch a0 != 3<32> l23017758
l23017758:
	branch a0 != 4<32> l2301795C
l2301795C:
	branch a0 != 5<32> l23017362
l23017962:
	Mem13[0xF690690<32>:word32] = 0x4200CF40<32>
	Mem16[0xF6F96FD<32>:word32] = 0x4200CF40<32>
	Mem19[0xF76276A<32>:word32] = 0x4200CF40<32>
	Mem22[0xF7CB7D7<32>:word32] = 0x4200CF40<32>
	Mem25[0xF834845<32>:word32] = 0x4200CF40<32>
	Mem28[0xF89D8B2<32>:word32] = 0x4200CF40<32>
	Mem31[0xF90691F<32>:word32] = 0x4200CF40<32>
	Mem34[0xF96F98C<32>:word32] = 0x4200CF40<32>
	Mem37[0xF9D89F9<32>:word32] = 0x4200CF40<32>
	Mem40[0xFA41A66<32>:word32] = 0x4200CF40<32>
	Mem43[0xFAAAAD3<32>:word32] = 0x4200CF40<32>
	Mem46[0xFB13B40<32>:word32] = 0x4200CF40<32>
	Mem49[0xFB7CBAD<32>:word32] = 0x4200CF40<32>
	Mem52[0xFBE5C1A<32>:word32] = 0x4200CF40<32>
	Mem55[0xFC4EC87<32>:word32] = 0x4200CF40<32>
	Mem58[0xFCB7CF4<32>:word32] = 0x4200CF40<32>
	Mem61[0xFD20D61<32>:word32] = 0x4200CF40<32>
	Mem64[0xFD89DCE<32>:word32] = 0x4200CF40<32>
	Mem67[0xFDF2E3B<32>:word32] = 0x4200CF40<32>
	Mem70[0xFE5BEA8<32>:word32] = 0x4200CF40<32>
	Mem73[0xFEC4F15<32>:word32] = 0x4200CF40<32>
	Mem78[0xA734A6ED<32>:word32] = 0x4200CF14<32>
	Mem81[0xA7C2A77F<32>:word32] = 0x4200CF14<32>
	Mem84[0xA850A811<32>:word32] = 0x4200CF14<32>
	Mem87[0xA8DEA8A3<32>:word32] = 0x4200CF14<32>
	Mem90[0xA96DA935<32>:word32] = 0x4200CF14<32>
	Mem93[0xA9FBA9C8<32>:word32] = 0x4200CF14<32>
	Mem96[0xAA89AA5A<32>:word32] = 0x4200CF14<32>
	Mem99[0xAB17AAEC<32>:word32] = 0x4200CF14<32>
	Mem102[0xABA5AB7E<32>:word32] = 0x4200CF14<32>
	Mem105[0xAC34AC10<32>:word32] = 0x4200CF14<32>
	Mem108[0x4200CF3C<32>:word16] = 0xFC7B<16>
	Mem114[0xA6E2A6A2<32>:word32] = 0x4200D918<32>
	Mem115[0x4200D91C<32>:word16] = 0xFCE2<16>
	Mem119[0x4200E91E<32>:word16] = 0xFAD5<16>
	Mem122[0x29<32>:word32] = 0x4200CF94<32>
	Mem123[0x31<32>:word32] = 0x4200CF94<32>
	Mem124[0x39<32>:word32] = 0x4200CF94<32>
	Mem125[0x41<32>:word32] = 0x4200CF94<32>
	Mem128[0x6ACFEC<32>:word32] = 0x4200CF94<32>
	Mem131[0x1E84B4<32>:word32] = 0x4200CF94<32>
	Mem134[0xFFD2397C<32>:word32] = 0x4200CF94<32>
	Mem137[0x4200CF94<32>:word32] = 0<32>
	Mem138[0x4200CF9C<32>:word32] = 0<32>
	Mem139[0x4200CFA4<32>:word32] = 0<32>
	Mem140[0x4200CFAC<32>:word32] = 0<32>
	Mem141[0x4200CFB4<32>:word32] = 0<32>
	Mem142[0x4200CFDC<32>:word32] = 0<32>
	Mem143[0x4200CFE4<32>:word32] = 0<32>
	Mem144[0x4200CFEC<32>:word32] = 0<32>
	Mem145[0x4200CFF4<32>:word32] = 0<32>
	Mem146[0x4200CFFC<32>:word32] = 0<32>
	Mem147[0x4200CF98<32>:word32] = 0<32>
	Mem148[0x4200CFA0<32>:word32] = 0<32>
	Mem149[0x4200CFA8<32>:word32] = 0<32>
	Mem150[0x4200CFB0<32>:word32] = 0<32>
	Mem151[0x4200CFB8<32>:word32] = 0<32>
	Mem152[0xFF85EE44<32>:word32] = 0x4200CF94<32>
	Mem153[0x4200CFE0<32>:word32] = 0<32>
	Mem154[0x4200CFE8<32>:word32] = 0<32>
	Mem155[0x4200CFF0<32>:word32] = 0<32>
l2301775E:
	Mem160[0x14088889<32>:word32] = 0x4200CF40<32>
	Mem163[0x14111115<32>:word32] = 0x4200CF40<32>
	Mem166[0x141999A2<32>:word32] = 0x4200CF40<32>
	Mem169[0x1422222E<32>:word32] = 0x4200CF40<32>
	Mem172[0x142AAABB<32>:word32] = 0x4200CF40<32>
	Mem175[0x14333347<32>:word32] = 0x4200CF40<32>
	Mem178[0x143BBBD4<32>:word32] = 0x4200CF40<32>
	Mem181[0x14444460<32>:word32] = 0x4200CF40<32>
	Mem184[0x144CCCED<32>:word32] = 0x4200CF40<32>
	Mem187[0x14555579<32>:word32] = 0x4200CF40<32>
	Mem190[0x145DDE06<32>:word32] = 0x4200CF40<32>
	Mem193[0x14666692<32>:word32] = 0x4200CF40<32>
	Mem196[0x146EEF1F<32>:word32] = 0x4200CF40<32>
	Mem199[0x147777AB<32>:word32] = 0x4200CF40<32>
	Mem201[0x14800038<32>:word32] = 0x4200CF40<32>
	Mem204[0x148888C5<32>:word32] = 0x4200CF40<32>
	Mem207[0x14911151<32>:word32] = 0x4200CF40<32>
	Mem210[0x149999DE<32>:word32] = 0x4200CF40<32>
	Mem213[0x14A2226A<32>:word32] = 0x4200CF40<32>
	Mem216[0x14AAAAF7<32>:word32] = 0x4200CF40<32>
	Mem219[0x14B33383<32>:word32] = 0x4200CF40<32>
	Mem224[0xA732A6EB<32>:word32] = 0x4200CF14<32>
	Mem227[0xA7C0A77D<32>:word32] = 0x4200CF14<32>
	Mem230[0xA84FA810<32>:word32] = 0x4200CF14<32>
	Mem233[0xA8DDA8A2<32>:word32] = 0x4200CF14<32>
	Mem236[0xA96BA934<32>:word32] = 0x4200CF14<32>
	Mem239[0xA9F9A9C6<32>:word32] = 0x4200CF14<32>
	Mem242[0xAA87AA58<32>:word32] = 0x4200CF14<32>
	Mem245[0xAB16AAEB<32>:word32] = 0x4200CF14<32>
	Mem248[0xABA4AB7D<32>:word32] = 0x4200CF14<32>
	Mem251[0xAC32AC0F<32>:word32] = 0x4200CF14<32>
	Mem254[0x4200CF3C<32>:word16] = 0xFC79<16>
	Mem260[0xA6E0A6A0<32>:word32] = 0x4200D918<32>
	Mem261[0x4200D91C<32>:word16] = 0xFCE0<16>
	Mem265[0x4200E91E<32>:word16] = 0xF855<16>
	Mem270[0x21<32>:word32] = 0x4200CF94<32>
	Mem271[0x29<32>:word32] = 0x4200CF94<32>
	Mem272[0x31<32>:word32] = 0x4200CF94<32>
	Mem273[0x39<32>:word32] = 0x4200CF94<32>
	Mem274[0x61<32>:word32] = 0x4200CF94<32>
	Mem275[0x69<32>:word32] = 0x4200CF94<32>
	Mem276[0x2DC6EC<32>:word32] = 0x4200CF94<32>
	Mem281[0x7A1224<32>:word32] = 0x4200CF94<32>
	Mem282[0xFFE17BB4<32>:word32] = 0x4200CF94<32>
	Mem283[0x7A1264<32>:word32] = 0x4200CF94<32>
	Mem288[0x4200CF94<32>:word32] = 0<32>
	Mem289[0x4200CF9C<32>:word32] = 0<32>
	Mem290[0x4200CFA4<32>:word32] = 0<32>
	Mem291[0x4200CFAC<32>:word32] = 0<32>
	Mem292[0x4200CFD4<32>:word32] = 0<32>
	Mem293[0x4200CFDC<32>:word32] = 0<32>
	Mem294[0x4200CFE4<32>:word32] = 0<32>
	Mem295[0x4200CFEC<32>:word32] = 0<32>
	Mem296[0x4200CF98<32>:word32] = 0<32>
	Mem297[0x4200CFA0<32>:word32] = 0<32>
	Mem298[0x4200CFA8<32>:word32] = 0<32>
	Mem299[0x4200CFB0<32>:word32] = 0<32>
	Mem300[0xFF95307C<32>:word32] = 0x4200CF94<32>
	Mem301[0x4200CFD8<32>:word32] = 0<32>
	Mem302[0x4200CFE0<32>:word32] = 0<32>
	Mem303[0x4200CFE8<32>:word32] = 0<32>
	Mem304[0x4200CFF0<32>:word32] = 0<32>
	Mem305[0xFFC2F76C<32>:word32] = 0x4200CF94<32>
	return
l2301755C:
	Mem310[0x14DE38E4<32>:word32] = 0x4200CF40<32>
	Mem313[0x14E71C76<32>:word32] = 0x4200CF40<32>
	Mem315[0x14F00008<32>:word32] = 0x4200CF40<32>
	Mem318[0x14F8E39A<32>:word32] = 0x4200CF40<32>
	Mem321[0x1501C72C<32>:word32] = 0x4200CF40<32>
	Mem324[0x150AAABF<32>:word32] = 0x4200CF40<32>
	Mem327[0x15138E51<32>:word32] = 0x4200CF40<32>
	Mem330[0x151C71E3<32>:word32] = 0x4200CF40<32>
	Mem333[0x15255575<32>:word32] = 0x4200CF40<32>
	Mem336[0x152E3908<32>:word32] = 0x4200CF40<32>
	Mem339[0x15371C9A<32>:word32] = 0x4200CF40<32>
	Mem341[0x1540002C<32>:word32] = 0x4200CF40<32>
	Mem344[0x1548E3BE<32>:word32] = 0x4200CF40<32>
	Mem347[0x1551C750<32>:word32] = 0x4200CF40<32>
	Mem350[0x155AAAE3<32>:word32] = 0x4200CF40<32>
	Mem353[0x15638E75<32>:word32] = 0x4200CF40<32>
	Mem356[0x156C7207<32>:word32] = 0x4200CF40<32>
	Mem359[0x15755599<32>:word32] = 0x4200CF40<32>
	Mem362[0x157E392C<32>:word32] = 0x4200CF40<32>
	Mem365[0x15871CBE<32>:word32] = 0x4200CF40<32>
	Mem367[0x15900050<32>:word32] = 0x4200CF40<32>
	Mem372[0xA739A6F2<32>:word32] = 0x4200CF14<32>
	Mem375[0xA7C7A784<32>:word32] = 0x4200CF14<32>
	Mem378[0xA855A816<32>:word32] = 0x4200CF14<32>
	Mem381[0xA8E4A8A8<32>:word32] = 0x4200CF14<32>
	Mem384[0xA972A93B<32>:word32] = 0x4200CF14<32>
	Mem387[0xAA00A9CD<32>:word32] = 0x4200CF14<32>
	Mem390[0xAA8EAA5F<32>:word32] = 0x4200CF14<32>
	Mem393[0xAB1CAAF1<32>:word32] = 0x4200CF14<32>
	Mem396[0xABABAB84<32>:word32] = 0x4200CF14<32>
	Mem399[0xAC39AC16<32>:word32] = 0x4200CF14<32>
	Mem402[0x4200CF3C<32>:word16] = 0xFC80<16>
	Mem408[0xA6E7A6A7<32>:word32] = 0x4200D918<32>
	Mem409[0x4200D91C<32>:word16] = 0xFCE7<16>
	Mem413[0x4200E91E<32>:word16] = 0xF800<16>
	Mem416[1<32>:word32] = 0x4200CF94<32>
	Mem417[9<32>:word32] = 0x4200CF94<32>
	Mem418[0x11<32>:word32] = 0x4200CF94<32>
	Mem419[0x19<32>:word32] = 0x4200CF94<32>
	Mem420[0x41<32>:word32] = 0x4200CF94<32>
	Mem421[0x49<32>:word32] = 0x4200CF94<32>
	Mem422[0x51<32>:word32] = 0x4200CF94<32>
	Mem423[0x59<32>:word32] = 0x4200CF94<32>
	Mem426[0x6DDD04<32>:word32] = 0x4200CF94<32>
	Mem429[0x2191CC<32>:word32] = 0x4200CF94<32>
	Mem432[0xFFD54694<32>:word32] = 0x4200CF94<32>
	Mem435[0xFF88FB5C<32>:word32] = 0x4200CF94<32>
	Mem438[0x557344<32>:word32] = 0x4200CF94<32>
	Mem441[0x9280C<32>:word32] = 0x4200CF94<32>
	Mem444[0xFFBCDCD4<32>:word32] = 0x4200CF94<32>
	Mem446[0x4200CFB4<32>:word32] = 0<32>
	Mem447[0x4200CFBC<32>:word32] = 0<32>
	Mem448[0x4200CFC4<32>:word32] = 0<32>
	Mem449[0x4200CFCC<32>:word32] = 0<32>
	Mem450[0x4200CFF4<32>:word32] = 0<32>
	Mem451[0x4200CFFC<32>:word32] = 0<32>
	Mem452[0x4200CFB8<32>:word32] = 0<32>
	Mem453[0x4200CFC0<32>:word32] = 0<32>
	Mem454[0x4200CFC8<32>:word32] = 0<32>
	Mem455[0x4200CFD0<32>:word32] = 0<32>
	a4_456 = 0xFF709140<32>
l2301736A:
	Mem461[0x190AAAAB<32>:word32] = 0x4200CF40<32>
	Mem464[0x19155559<32>:word32] = 0x4200CF40<32>
	Mem466[0x19200008<32>:word32] = 0x4200CF40<32>
	Mem469[0x192AAAB7<32>:word32] = 0x4200CF40<32>
	Mem472[0x19355565<32>:word32] = 0x4200CF40<32>
	Mem474[0x19400014<32>:word32] = 0x4200CF40<32>
	Mem477[0x194AAAC3<32>:word32] = 0x4200CF40<32>
	Mem480[0x19555571<32>:word32] = 0x4200CF40<32>
	Mem482[0x19600020<32>:word32] = 0x4200CF40<32>
	Mem485[0x196AAACF<32>:word32] = 0x4200CF40<32>
	Mem488[0x1975557D<32>:word32] = 0x4200CF40<32>
	Mem490[0x1980002C<32>:word32] = 0x4200CF40<32>
	Mem493[0x198AAADB<32>:word32] = 0x4200CF40<32>
	Mem496[0x19955589<32>:word32] = 0x4200CF40<32>
	Mem498[0x19A00038<32>:word32] = 0x4200CF40<32>
	Mem501[0x19AAAAE7<32>:word32] = 0x4200CF40<32>
	Mem504[0x19B55595<32>:word32] = 0x4200CF40<32>
	Mem506[0x19C00044<32>:word32] = 0x4200CF40<32>
	Mem509[0x19CAAAF3<32>:word32] = 0x4200CF40<32>
	Mem512[0x19D555A1<32>:word32] = 0x4200CF40<32>
	Mem514[0x19E00050<32>:word32] = 0x4200CF40<32>
	Mem519[0xA741A6FA<32>:word32] = 0x4200CF14<32>
	Mem522[0xA7D0A78C<32>:word32] = 0x4200CF14<32>
	Mem525[0xA85EA81F<32>:word32] = 0x4200CF14<32>
	Mem528[0xA8ECA8B1<32>:word32] = 0x4200CF14<32>
	Mem531[0xA97AA943<32>:word32] = 0x4200CF14<32>
	Mem534[0xAA09A9D5<32>:word32] = 0x4200CF14<32>
	Mem537[0xAA97AA68<32>:word32] = 0x4200CF14<32>
	Mem540[0xAB25AAFA<32>:word32] = 0x4200CF14<32>
	Mem543[0xABB3AB8C<32>:word32] = 0x4200CF14<32>
	Mem546[0xAC42AC1E<32>:word32] = 0x4200CF14<32>
	Mem549[0x4200CF3C<32>:word16] = 0xFC89<16>
	Mem555[0xA6EFA6AF<32>:word32] = 0x4200D918<32>
	Mem556[0x4200D91C<32>:word16] = 0xFCF0<16>
	Mem559[0x4200E91E<32>:word16] = 0x6AB<16>
	Mem562[0x11<32>:word32] = 0x4200CF94<32>
	Mem563[0x19<32>:word32] = 0x4200CF94<32>
	Mem564[0x21<32>:word32] = 0x4200CF94<32>
	Mem565[0x29<32>:word32] = 0x4200CF94<32>
	Mem566[0x31<32>:word32] = 0x4200CF94<32>
	Mem567[0x49<32>:word32] = 0x4200CF94<32>
	Mem568[0x51<32>:word32] = 0x4200CF94<32>
	Mem569[0x59<32>:word32] = 0x4200CF94<32>
	Mem570[0x61<32>:word32] = 0x4200CF94<32>
	Mem573[0x989694<32>:word32] = 0x4200CF94<32>
	Mem576[0x4C4B5C<32>:word32] = 0x4200CF94<32>
	Mem579[0xFFB3B4EC<32>:word32] = 0x4200CF94<32>
	Mem582[0xFF6769B4<32>:word32] = 0x4200CF94<32>
	Mem585[0x6AD00C<32>:word32] = 0x4200CF94<32>
	Mem588[0x1E84D4<32>:word32] = 0x4200CF94<32>
	Mem591[0xFFD2399C<32>:word32] = 0x4200CF94<32>
	Mem593[0x4200CF94<32>:word32] = 0<32>
	Mem594[0x4200CF9C<32>:word32] = 0<32>
	Mem595[0x4200CFCC<32>:word32] = 0<32>
	Mem596[0x4200CFD4<32>:word32] = 0<32>
	Mem597[0x4200CFFC<32>:word32] = 0<32>
	Mem598[0x4200CF98<32>:word32] = 0<32>
	Mem599[0x4200CFA0<32>:word32] = 0<32>
	Mem600[0x4200CFB8<32>:word32] = 0<32>
	Mem601[0x4200CFD0<32>:word32] = 0<32>
	Mem602[0x4200CFD8<32>:word32] = 0<32>
	a4_603 = 0xFF85EE00<32>
l23017148:
	Mem608[0x1ED20D21<32>:word32] = 0x4200CF40<32>
	Mem611[0x1EDF2DF7<32>:word32] = 0x4200CF40<32>
	Mem614[0x1EEC4ECD<32>:word32] = 0x4200CF40<32>
	Mem617[0x1EF96FA3<32>:word32] = 0x4200CF40<32>
	Mem620[0x1F069079<32>:word32] = 0x4200CF40<32>
	Mem623[0x1F13B14F<32>:word32] = 0x4200CF40<32>
	Mem626[0x1F20D225<32>:word32] = 0x4200CF40<32>
	Mem629[0x1F2DF2FB<32>:word32] = 0x4200CF40<32>
	Mem632[0x1F3B13D1<32>:word32] = 0x4200CF40<32>
	Mem635[0x1F4834A7<32>:word32] = 0x4200CF40<32>
	Mem638[0x1F55557D<32>:word32] = 0x4200CF40<32>
	Mem641[0x1F627653<32>:word32] = 0x4200CF40<32>
	Mem644[0x1F6F9729<32>:word32] = 0x4200CF40<32>
	Mem647[0x1F7CB7FF<32>:word32] = 0x4200CF40<32>
	Mem650[0x1F89D8D6<32>:word32] = 0x4200CF40<32>
	Mem653[0x1F96F9AC<32>:word32] = 0x4200CF40<32>
	Mem656[0x1FA41A82<32>:word32] = 0x4200CF40<32>
	Mem659[0x1FB13B58<32>:word32] = 0x4200CF40<32>
	Mem662[0x1FBE5C2E<32>:word32] = 0x4200CF40<32>
	Mem665[0x1FCB7D04<32>:word32] = 0x4200CF40<32>
	Mem668[0x1FD89DDA<32>:word32] = 0x4200CF40<32>
	Mem673[0xA743A6FC<32>:word32] = 0x4200CF14<32>
	Mem676[0xA7D1A78E<32>:word32] = 0x4200CF14<32>
	Mem679[0xA860A821<32>:word32] = 0x4200CF14<32>
	Mem682[0xA8EEA8B3<32>:word32] = 0x4200CF14<32>
	Mem685[0xA97CA945<32>:word32] = 0x4200CF14<32>
	Mem688[0xAA0AA9D7<32>:word32] = 0x4200CF14<32>
	Mem691[0xAA99AA6A<32>:word32] = 0x4200CF14<32>
	Mem694[0xAB27AAFC<32>:word32] = 0x4200CF14<32>
	Mem697[0xABB5AB8E<32>:word32] = 0x4200CF14<32>
	Mem700[0xAC43AC20<32>:word32] = 0x4200CF14<32>
	Mem703[0x4200CF3C<32>:word16] = 0xFC8B<16>
	Mem709[0xA6F1A6B1<32>:word32] = 0x4200D918<32>
	Mem710[0x4200D91C<32>:word16] = 0xFCF2<16>
	Mem713[0x4200E91E<32>:word16] = 0x56B<16>
	Mem718[0x5B8D84<32>:word32] = 0x4200CF94<32>
	Mem721[0xF424C<32>:word32] = 0x4200CF94<32>
	Mem724[0xFFC2F714<32>:word32] = 0x4200CF94<32>
	Mem727[0xFF76ABDC<32>:word32] = 0x4200CF94<32>
	Mem730[0x6ACFEC<32>:word32] = 0x4200CF94<32>
	Mem733[0x1E84B4<32>:word32] = 0x4200CF94<32>
	Mem736[0xFFD2397C<32>:word32] = 0x4200CF94<32>
	Mem739[0xFF85EE44<32>:word32] = 0x4200CF94<32>
	Mem742[0x7A1254<32>:word32] = 0x4200CF94<32>
	Mem745[0x2DC71C<32>:word32] = 0x4200CF94<32>
	Mem747[a0:word32] = 0x4200CF94<32>
	Mem748[a0 + 8<i32>:word32] = 0x4200CF94<32>
	Mem749[a0 + 16<i32>:word32] = 0x4200CF94<32>
	Mem750[a0 + 24<i32>:word32] = 0x4200CF94<32>
	Mem751[0x4200CFB4<32>:word32] = 0<32>
	Mem752[a0 + 40<i32>:word32] = 0x4200CF94<32>
	Mem753[a0 + 48<i32>:word32] = 0x4200CF94<32>
	Mem754[a0 + 56<i32>:word32] = 0x4200CF94<32>
	Mem755[a0 + 64<i32>:word32] = 0x4200CF94<32>
	Mem756[0x4200CFDC<32>:word32] = 0<32>
	Mem757[a0 + 80<i32>:word32] = 0x4200CF94<32>
	Mem758[a0 + 88<i32>:word32] = 0x4200CF94<32>
	Mem759[a0 + 96<i32>:word32] = 0x4200CF94<32>
	Mem760[0x4200CFFC<32>:word32] = 0<32>
	Mem761[0x4200CFB8<32>:word32] = 0<32>
	Mem762[0x4200CFE0<32>:word32] = 0<32>
	a4_603 = 0xFFE17B80<32>
l2301735C:
	Mem766[a4_603 + 100<i32>:word32] = 0x4200CF94<32>
l23016F3E:
	Mem771[0x21638E39<32>:word32] = 0x4200CF40<32>
	Mem774[0x2171C720<32>:word32] = 0x4200CF40<32>
	Mem776[0x21800008<32>:word32] = 0x4200CF40<32>
	Mem779[0x218E38F0<32>:word32] = 0x4200CF40<32>
	Mem782[0x219C71D7<32>:word32] = 0x4200CF40<32>
	Mem785[0x21AAAABF<32>:word32] = 0x4200CF40<32>
	Mem788[0x21B8E3A6<32>:word32] = 0x4200CF40<32>
	Mem791[0x21C71C8E<32>:word32] = 0x4200CF40<32>
	Mem794[0x21D55575<32>:word32] = 0x4200CF40<32>
	Mem797[0x21E38E5D<32>:word32] = 0x4200CF40<32>
	Mem800[0x21F1C744<32>:word32] = 0x4200CF40<32>
	Mem802[0x2200002C<32>:word32] = 0x4200CF40<32>
	Mem805[0x220E3914<32>:word32] = 0x4200CF40<32>
	Mem808[0x221C71FB<32>:word32] = 0x4200CF40<32>
	Mem811[0x222AAAE3<32>:word32] = 0x4200CF40<32>
	Mem814[0x2238E3CA<32>:word32] = 0x4200CF40<32>
	Mem817[0x22471CB2<32>:word32] = 0x4200CF40<32>
	Mem820[0x22555599<32>:word32] = 0x4200CF40<32>
	Mem823[0x22638E81<32>:word32] = 0x4200CF40<32>
	Mem826[0x2271C768<32>:word32] = 0x4200CF40<32>
	Mem828[0x22800050<32>:word32] = 0x4200CF40<32>
	Mem833[0xA739A6F2<32>:word32] = 0x4200CF14<32>
	Mem836[0xA7C7A784<32>:word32] = 0x4200CF14<32>
	Mem839[0xA855A816<32>:word32] = 0x4200CF14<32>
	Mem842[0xA8E4A8A8<32>:word32] = 0x4200CF14<32>
	Mem845[0xA972A93B<32>:word32] = 0x4200CF14<32>
	Mem848[0xAA00A9CD<32>:word32] = 0x4200CF14<32>
	Mem851[0xAA8EAA5F<32>:word32] = 0x4200CF14<32>
	Mem854[0xAB1CAAF1<32>:word32] = 0x4200CF14<32>
	Mem857[0xABABAB84<32>:word32] = 0x4200CF14<32>
	Mem860[0xAC39AC16<32>:word32] = 0x4200CF14<32>
	Mem863[0x4200CF3C<32>:word16] = 0xFC80<16>
	Mem869[0xA6E7A6A7<32>:word32] = 0x4200D918<32>
	Mem870[0x4200D91C<32>:word16] = 0xFCE7<16>
	Mem873[0x4200E91E<32>:word16] = 0x500<16>
	Mem877[9<32>:word32] = 0x4200CF94<32>
	Mem878[0x11<32>:word32] = 0x4200CF94<32>
	Mem879[0x19<32>:word32] = 0x4200CF94<32>
	Mem880[0x21<32>:word32] = 0x4200CF94<32>
	Mem881[0x31<32>:word32] = 0x4200CF94<32>
	Mem882[0x39<32>:word32] = 0x4200CF94<32>
	Mem883[0x41<32>:word32] = 0x4200CF94<32>
	Mem884[0x49<32>:word32] = 0x4200CF94<32>
	Mem885[0x59<32>:word32] = 0x4200CF94<32>
	Mem886[0x61<32>:word32] = 0x4200CF94<32>
	Mem889[0x6ACFCC<32>:word32] = 0x4200CF94<32>
	Mem892[0x1E8494<32>:word32] = 0x4200CF94<32>
	Mem895[0xFFD2395C<32>:word32] = 0x4200CF94<32>
	Mem898[0xFF85EE24<32>:word32] = 0x4200CF94<32>
	Mem901[0x5B8DB4<32>:word32] = 0x4200CF94<32>
	Mem904[0xF427C<32>:word32] = 0x4200CF94<32>
	Mem907[0xFFC2F744<32>:word32] = 0x4200CF94<32>
	Mem910[0xFF76AC0C<32>:word32] = 0x4200CF94<32>
	Mem912[0x4200CF94<32>:word32] = 0<32>
	Mem913[0x4200CFBC<32>:word32] = 0<32>
	Mem914[0x4200CFE4<32>:word32] = 0<32>
	Mem915[0x4200CFFC<32>:word32] = 0<32>
	Mem916[0x4200CF98<32>:word32] = 0<32>
	Mem917[0x4200CFC0<32>:word32] = 0<32>
	Mem918[0x4200CFE8<32>:word32] = 0<32>
	a4_456 = 0x4C4B40<32>
l2301713A:
	Mem922[a4_456 + 92<i32>:word32] = 0x4200CF94<32>
l2301713C:
	Mem924[0x4200CFF8<32>:word32] = 0<32>
l2301735E:
	Mem926[0x4200D000<32>:word32] = 0<32>
l23017362:
	return
rf_pri_xtalfreq_exit:


word32 rf_pri_get_vco_freq_cw(word32 ra, word32 a0, word32 fflags, word32 frm)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
rf_pri_get_vco_freq_cw_entry:
l23017B5E:
	word32 a1_11
	word32 a1_22
	word32 a5_64
	word32 a4_63
	word32 a3_62
	word32 a1_61
	word32 a0_30 = __fixdfsi(ra, __adddf3(ra, __floatunsidf(a0 + 0xFF00069C<32> >>u 2<i32>, out a1_11), a1_11, Mem10[0x230767A8<32>:int32], Mem10[0x230767AC<32>:int32], fflags, frm, out a1_22), a1_22, fflags, frm, out a1_61, out a3_62, out a4_63, out a5_64)
	branch a0_30 <= 0x14<32> l23017B8C
l23017B8A:
	a0_30 = 0x14<32>
l23017B8C:
	return CONVERT(Mem10[(a0_30 + 8<32> << 1<i32>) + Mem10[0x4200D92C<32>:int32] + 12<i32>:uint16], uint16, word32) & 255<i32>
rf_pri_get_vco_freq_cw_exit:


word32 rf_pri_get_vco_idac_cw(word32 ra, word32 a0, word32 fflags, word32 frm)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
rf_pri_get_vco_idac_cw_entry:
l23017BA8:
	word32 a1_11
	word32 a1_22
	word32 a5_65
	word32 a4_64
	word32 a3_63
	word32 a1_62
	word32 a0_30 = __fixdfsi(ra, __adddf3(ra, __floatunsidf(a0 + 0xFF00069C<32> >>u 2<i32>, out a1_11), a1_11, Mem10[0x230767A8<32>:int32], Mem10[0x230767AC<32>:int32], fflags, frm, out a1_22), a1_22, fflags, frm, out a1_62, out a3_63, out a4_64, out a5_65)
	branch a0_30 <= 0x14<32> l23017BD6
l23017BD4:
	a0_30 = 0x14<32>
l23017BD6:
	return CONVERT(Mem10[(a0_30 + 8<32> << 1<i32>) + Mem10[0x4200D92C<32>:int32] + 12<i32>:uint16], uint16, word32) >>u 8<i32> & 0x1F<32>
rf_pri_get_vco_idac_cw_exit:


word32 rf_pri_get_txgain_max()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
//      trpc_init
//      phy_tcal_txpwr
// MayUse: 
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
rf_pri_get_txgain_max_entry:
l23017BF2:
	return Mem0[0x4200DD58<32>:int32] + (Mem0[0x42011B8C<32>:int32] + Mem0[0x4200DD54<32>:int32])
rf_pri_get_txgain_max_exit:


word32 rf_pri_get_txgain_min()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_hw_set_channel
//      trpc_init
//      phy_tcal_txpwr
// MayUse: 
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
rf_pri_get_txgain_min_entry:
l23017C10:
	return Mem0[0x4200DD58<32>:int32] + (Mem0[0x42011D30<32>:int32] + Mem0[0x4200DD54<32>:int32])
rf_pri_get_txgain_min_exit:


word32 rf_pri_get_txgain_index(word32 a0, word32 a1, word32 a3, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_get_power_level
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
rf_pri_get_txgain_index_entry:
l23017C2E:
	branch a1 != 0<32> l23017C32
l23017C30:
	a0 = a0 + 0xFFFFFFE2<32>
l23017C32:
	word32 a1_9 = Mem0[0x4200DD54<32>:int32]
	word32 a6_12 = Mem0[0x4200DD58<32>:int32]
	word32 a5_14 = 0<32>
l23017C4E:
	word32 a4_18 = Mem0[a3 + 24<i32>:word32]
	a3 = a3 + a1_9 + a6_12
	branch a0 >= a3 l23017C62
l23017C58:
	a5_14 = a5_14 + 1<32>
	a4_18 = a4_18 + 0x1C<32>
	branch a5_14 != 0x10<32> l23017C4E
l23017C60:
	a5_14 = 0xF<32>
l23017C62:
	a3Out = a3
	a4Out = a4_18
	return a5_14
rf_pri_get_txgain_index_exit:


word32 rf_pri_query_txgain_table(word32 a0, word32 a1, word32 a2, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
//      rfc_apply_tx_power_offset
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a4 a5
// Preserved: sp
rf_pri_query_txgain_table_entry:
l23017C66:
	branch a0 <=u 0xF<32> l23017C6E
l23017C6C:
	a0 = 0xF<32>
l23017C6E:
	Mem12[7<32> - (a0 >>u 1<u32>):word32] = a1
	word32 a0_17 = Mem12[0x42011B88<32>:word32]
	Mem20[0x42011B74<32>:word32] = a2
	a5Out = 0x42011B74<32>
	return a0_17
rf_pri_query_txgain_table_exit:


void rf_pri_update_dvga_os(word32 a0, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_tx_gain_comp
// MayUse:  a0:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6
// Preserved: sp
rf_pri_update_dvga_os_entry:
l23017C8E:
	word32 a4_13 = 0x4200D038<32>
l23017CA2:
	a3 = a3 + a0
	Mem18[a4_13 + 0<32>:byte] = SLICE(a3, byte, 0)
	a4_13 = a4_13 + 1<32>
	branch a4_13 != 0xBDFF2FD8<32> l23017CA2
l23017CB6:
	return
rf_pri_update_dvga_os_exit:


void rf_pri_tx_gain_comp(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      phy_tcal_txpwr
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
rf_pri_tx_gain_comp_entry:
l23017CB8:
	word32 a0_100
	word32 a5_5 = Mem0[0x4200DD5C<32>:int32]
	branch a5_5 != 1<32> l23017D12
l23017D12:
	branch a5_5 != 0xFFFFFFFF<32> l23017D2A
l23017D18:
	word32 a5_13 = Mem8[0x4200DCD8<32>:int32]
	branch a5_13 >= a0 l23017D2A
l23017D24:
	branch a0 < a5_13 + 5<32> l23017CE0
l23017CCE:
	word32 a5_17 = Mem8[0x4200DCD8<32>:int32]
	branch a0 >= a5_17 l23017D2A
l23017CDA:
	branch a5_17 + 0xFFFFFFFB<32> >= a0 l23017D2A
l23017D2A:
	word32 a4_21 = 0xC<32>
l23017D3A:
	branch a0 >= a1 l23017D48
l23017D40:
	a4_21 = a4_21 + 0xFFFFFFFF<32>
	branch a4_21 != 0xFFFFFFFF<32> l23017D3A
l23017D48:
	branch a4_21 >= 0<32> l23017D4E
l23017D4C:
	a4_21 = 0<32>
l23017D4E:
	word32 a5_102 = a4_21 + -4<i32>
	word32 a3_45 = Mem8[(a4_21 << 2<u32>) + 0x4200D004<32>:word32]
	branch a0 <= 34<i32> l23017DC6
l23017DC6:
	branch a3_45 < a0 l23017DD0
l23017DD0:
	word32 a4_52 = Mem8[(a4_21 + 1<32> << 2<i32>) + 0x4200D004<32>:word32]
	branch a4_52 <= 34<i32> l23017DDE
l23017DDC:
	a4_52 = a3_45
l23017DDE:
	Mem56[a4_52:word32] = 0x4200DCD8<32>
l23017DCA:
	a5_102 = a4_21 + -5<i32>
l23017D6A:
	branch a3_45 > 35<i32> l23017D7C
l23017D72:
	a3_45 = Mem8[(a4_21 + 1<32> << 2<u32>) + 0x4200D004<32>:word32]
l23017D7C:
	Mem65[a3_45:word32] = 0x4200DCD8<32>
l23017D7E:
	a3 = Mem67[0x4200DCE4<32>:int32]
	branch a3 >= a5_102 l23017DE2
l23017DE2:
	branch a5_102 >= a3 l23017D94
l23017DE6:
	a3 = 0xFFFFFFFF<32>
l23017D8E:
	a3 = 1<32>
l23017D90:
	Mem84[0x4200DD5C<32>:word32] = a3
l23017D94:
	Mem89[a5_102:word32] = 0x4200DCE4<32>
	branch a5_102 <= 0<32> l23017DEA
l23017DEA:
	a0_100 = 0<32>
	branch a5_102 == 0<32> l23017DA6
l23017DEE:
	a0_100 = 0xFFFFFFFF<32>
	branch (a5_102 & 1<i32>) == 0<32> l23017DF8
l23017DF6:
	a0_100 = 1<32>
l23017DF8:
	a5_102 = a5_102 + 0xFFFFFFFF<32> ^ 2<32>
l23017D9A:
	word32 a5_98 = a5_102 + 1<32>
	a0_100 = a5_98 & 1<i32>
	branch (a5_98 & 1<i32>) != 0<32> l23017DA4
l23017DA2:
	a0_100 = 0xFFFFFFFF<32>
l23017DA4:
	a5_102 = a5_98 >> 1<i32>
l23017DA6:
	Mem105[0x4200ECE0<32>:word32] = a5_102
	Mem110[0x4200ECDC<32>:word32] = a0_100
	Mem114[0x4200ED58<32>:word32] = a5_102 + 0xFFFFFFF6<32>
l23017CE0:
	Mem121[0x4200ED58<32>:word32] = Mem8[0x4200DCE0<32>:int32] + 0xFFFFFFF6<32>
	a0_100 = CONVERT(Mem121[0x4200DCDC<32>:int8], int8, int32)
l23017CFE:
	rf_pri_update_dvga_os(a0_100, a3)
l23017D0E_thunk_rfc_apply_tx_dvga:
	rfc_apply_tx_dvga(0x4200D038<32>)
	return
rf_pri_tx_gain_comp_exit:


word32 rf_pri_txcal(word32 a3, word32 a5, word32 s2, word32 s6, word32 s9, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg2C, word32 dwArg5C, word32 dwArgAC, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a3:[0..31] a5:[0..31] s2:[0..31] s6:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +002C:[0..31] Stack +005C:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
rf_pri_txcal_entry:
l23017E02:
	Mem37[(a5 & 0xFF0FFFFF<32> | 0x500000<32>) + 20<i32>:word32] = Mem29[a5 + 20<i32>:word32]
	word32 a5_829
	rf_pri_manu_pu(5<32>, rf_pri_save_state_for_cal(a3), out a5_829)
	word32 a5_51
	word32 s9_156
	word32 s10_157
	word32 s11_158
	rf_pri_config_channel.constprop.9(s6, dwLoc58, s2, dwLoc20, dwLoc1C, dwArg08, dwArg10, dwArg14, dwArg2C, s9, dwArg5C, dwArgC8, out a5_51, out s9_156, out s10_157, out s11_158)
	word32 s0_71 = Mem37[a5_51 + 28<i32>:word32]
	Mem75[(a5_51 | 0x3000000<32>) + 28<i32>:word32] = s0_71
	word32 a5_76 = Mem75[s0_71 + 132<i32>:int32]
	Mem80[s0_71 + 132<i32>:word32] = a5_76 | 0x80000000<32>
	word32 a5_84 = a5_76 | 0x80000000<32> | 0x400000<32>
	Mem85[a5_84 + 100<i32>:word32] = Mem80[(a5_76 | 0x80000000<32>) + 100<i32>:word32]
	Mem95[(CONVERT(Mem85[0x4200D924<32>:uint16], uint16, word32) | a5_84 & -8<i32>) + 108<i32>:word32] = Mem85[a5_84 + 108<i32>:word32]
	word32 sp_116 = fp + -96<i32>
	word32 s2_155 = 7<32>
	word32 a4_119
	word32 a3_159 = rf_pri_singen_config.constprop.8(61<i32>, out a4_119)
	word32 a5_104 = 0xFFFFFFF<32>
	word32 s3_105 = 0x42011EF4<32>
	word32 s8_106 = 0x42011B74<32>
	word32 s4_108 = 0xFFC3FFFF<32>
	word32 s5_109 = 0xFFF8FFFF<32>
	word32 s6_110 = 0xCFFFFFFF<32>
	word32 s7_111 = 0xFE08FFFF<32>
	word32 s1_112 = 0xFFC0FFFF<32>
l23017EB4:
	word32 a2_117 = Mem114[sp_116 + 196<i32>:word32]
	word32 a5_129 = (Mem114[s3_105:int32] << 28<i32> | a4_119 & a5_104) & s4_108 | Mem114[s3_105 + 8<i32>:int32] << 18<i32>
	Mem130[a5_129 + 100<i32>:word32] = Mem114[a5_104 + 100<i32>:word32]
	word32 a5_136 = Mem130[s3_105 + 4<i32>:int32] << 16<i32> | a5_129 & s5_109
	Mem137[a5_136 + 88<i32>:word32] = Mem130[a5_129 + 88<i32>:word32]
	word32 s0_138 = Mem137[a5_136 + 72<i32>:word32]
	word32 a5_149 = (Mem137[s8_106:int32] << 28<i32> | a5_136 & s6_110) & s7_111 | Mem137[s8_106 + 12<i32>:int32] << 20<i32>
	Mem152[(a5_149 | 0x70000<32>) + 72<i32>:word32] = s0_138
	word32 s0_162
	word32 s1_163
	word32 s2_164
	word32 s3_165
	word32 s4_166
	word32 s5_167
	word32 s6_168
	word32 s7_169
	word32 s8_170
	word32 s11_173
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a2:a2_117,a3:a3_159,a4:0x70000<32>,a5:a5_149 | 0x70000<32>,ra:0x4200BF04<p32>,s0:s0_138,s1:s1_154,s10:s10_157,s11:s11_158,s2:s2_155,s3:s3_121,s4:s4_126,s5:s5_132,s6:s6_139,s7:s7_146,s8:s8_141,s9:s9_156,Stack +0008:dwArg08,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +002C:dwArg2C,Stack +005C:dwArg5C,Stack +00C8:dwArgC8,Stack +FFFFFFA8:dwLoc58,Stack +FFFFFFE0:dwLoc20,Stack +FFFFFFE4:dwLoc1C
		defs: s0:s0_162,s1:s1_163,s11:s11_173,s2:s2_164,s3:s3_165,s4:s4_166,s5:s5_167,s6:s6_168,s7:s7_169,s8:s8_170
	word32 s9_187 = Mem152[s3_165 + 12<i32>:int32]
	word32 s10_188 = s9_187 >>u 1<u32>
l23017F14:
	Mem195[s0_162 + 532<i32>:word32] = s9_187 | Mem190[s0_162 + 532<i32>:int32] & -2048<i32>
	Mem199[s0_162 + 536<i32>:word32] = s9_187 | Mem195[s0_162 + 536<i32>:int32] & -2048<i32>
	rf_pri_singen_start()
	word32 a5_206
	word32 ra_221
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a3:rf_pri_start_txdfe(out a5_206),a5:a5_206,ra:0x4200BF3E<p32>,s0:s0_189,s1:s1_209,s10:s10_217,s11:s11_218,s2:s2_210,s3:s3_211,s4:s4_212,s5:s5_213,s6:s6_214,s7:s7_215,s8:s8_216,s9:s9_193,Stack +0008:dwArg08,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +002C:dwArg2C,Stack +005C:dwArg5C,Stack +00C8:dwArgC8,Stack +FFFFFFA8:dwLoc58,Stack +FFFFFFE0:dwLoc20,Stack +FFFFFFE4:dwLoc1C
		defs: ra:ra_221,s0:s0_222
	word32 s10_270
	word32 t4_281
	word32 a5_873
	word32 a7_874
	word32 a3_871
	word32 a4_872
	word32 a1_869
	word32 a2_870
	word32 a5_867
	word32 a0_868
	word32 a3_866
	printf(ra_221, 0x23077188<32>, rf_pri_pm_pwr_avg(1<32>, 1024<i32>, out a3_866, out a5_867) >> 0xA<u32>, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_163, out a0_868, out a1_869, out a2_870, out a3_871, out a4_872, out a5_873, out a7_874, out s2_164, out s3_165, out s4_166, out s5_167, out s6_168, out s7_169, out s8_170, out s9_187, out s10_270, out s11_173, out t4_281)
	sp_116 = fp - 96<i32>
	branch s11_173 <= 320<i32> l23017F80
l23017F80:
	branch s11_173 > 191<i32> l23017F88
l23017F84:
	s9_187 = s9_187 + s10_270
l23017F72:
	s9_187 = s9_187 - s10_270
l23017F76:
	branch s10_270 == 0<32> l23017F88
l23017F88:
	word32 a5_831
	word32 a3_830
	rf_pri_pm_pwr_avg(1<32>, 0x1000000<32>, out a3_830, out a5_831)
	word32 a0_320
	word32 s0_328
	word32 s1_329
	word32 s11_331
	word32 s4_334
	word32 s5_335
	word32 s6_336
	word32 s7_337
	word32 s8_338
	word32 s9_833
	word32 a5_832
	rf_pri_txcal_search_core(s0_162, s1_163, 0<32>, 32<i32>, 0x10<32>, s4_166, s5_167, s6_168, s7_169, s8_170, s9_187, s11_173, dwArgAC, out s0_328, out s1_329, out a0_320, out a5_832, out s4_334, out s5_335, out s6_336, out s7_337, out s8_338, out s9_833, out s11_331)
	word32 a4_835
	word32 a3_834
	rf_pri_txcal_config(0<32>, a0_320, out a3_834, out a4_835)
	word32 a0_354
	word32 a5_359
	word32 s1_363
	word32 s11_365
	word32 s4_368
	word32 s5_369
	word32 s6_370
	word32 s7_371
	word32 s8_372
	word32 s9_373
	word32 s0_836
	rf_pri_txcal_search_core(s0_328, s1_329, 1<32>, 32<i32>, 0x10<32>, s4_334, s5_335, s6_336, s7_337, s8_338, a0_320, s11_331, dwArgAC, out s0_836, out s1_363, out a0_354, out a5_359, out s4_368, out s5_369, out s6_370, out s7_371, out s8_372, out s9_373, out s11_365)
	word32 s0_377 = Mem199[a5_359 + 112<i32>:word32]
	Mem383[(a0_354 << 0x10<u32> | a5_359 & s1_363) + 112<i32>:word32] = s0_377
	word32 a0_387
	word32 s0_395
	word32 s1_396
	word32 s11_398
	word32 s4_401
	word32 s5_402
	word32 s6_403
	word32 s7_404
	word32 s8_405
	word32 s9_406
	word32 a5_837
	rf_pri_txcal_search_core(s0_377, s1_363, 0<32>, s9_373, 2<32>, s4_368, s5_369, s6_370, s7_371, s8_372, s9_373, s11_365, dwArgAC, out s0_395, out s1_396, out a0_387, out a5_837, out s4_401, out s5_402, out s6_403, out s7_404, out s8_405, out s9_406, out s11_398)
	word32 a4_839
	word32 a3_838
	rf_pri_txcal_config(0<32>, a0_387, out a3_838, out a4_839)
	word32 a0_421
	word32 s0_429
	word32 s1_430
	word32 s11_432
	word32 s4_435
	word32 s5_436
	word32 s6_437
	word32 s7_438
	word32 s8_439
	word32 s9_841
	word32 a5_840
	rf_pri_txcal_search_core(s0_395, s1_396, 2<32>, 1024<i32>, 128<i32>, s4_401, s5_402, s6_403, s7_404, s8_405, s9_406, s11_398, dwArgAC, out s0_429, out s1_430, out a0_421, out a5_840, out s4_435, out s5_436, out s6_437, out s7_438, out s8_439, out s9_841, out s11_432)
	word32 a4_843
	word32 a3_842
	rf_pri_txcal_config(2<32>, a0_421, out a3_842, out a4_843)
	word32 a0_455
	word32 s0_463
	word32 s1_464
	word32 s11_466
	word32 s4_469
	word32 s5_470
	word32 s6_471
	word32 s7_472
	word32 s8_473
	word32 s9_474
	word32 a5_844
	rf_pri_txcal_search_core(s0_429, s1_430, 3<32>, 0<32>, 64<i32>, s4_435, s5_436, s6_437, s7_438, s8_439, a0_421, s11_432, dwArgAC, out s0_463, out s1_464, out a0_455, out a5_844, out s4_469, out s5_470, out s6_471, out s7_472, out s8_473, out s9_474, out s11_466)
	word32 a3_845
	word32 a4_846
	rf_pri_txcal_config(3<32>, a0_455, out a3_845, out a4_846)
	word32 a0_488
	word32 s0_496
	word32 s1_497
	word32 s11_499
	word32 s4_502
	word32 s5_503
	word32 s6_504
	word32 s7_505
	word32 s8_506
	word32 s9_507
	word32 a5_847
	rf_pri_txcal_search_core(s0_463, s1_464, 2<32>, s9_474, 64<i32>, s4_469, s5_470, s6_471, s7_472, s8_473, s9_474, s11_466, dwArgAC, out s0_496, out s1_497, out a0_488, out a5_847, out s4_502, out s5_503, out s6_504, out s7_505, out s8_506, out s9_507, out s11_499)
	word32 a4_849
	word32 a3_848
	rf_pri_txcal_config(2<32>, a0_488, out a3_848, out a4_849)
	word32 s6_855
	word32 s1_851
	word32 a0_522
	word32 s4_853
	word32 s8_857
	word32 s11_859
	word32 s9_858
	word32 s7_856
	word32 s5_854
	word32 a5_852
	word32 s0_850
	word32 ra_529 = rf_pri_txcal_search_core(s0_496, s1_497, 3<32>, 0<32>, 32<i32>, s4_502, s5_503, s6_504, s7_505, s8_506, s9_507, s11_499, dwArgAC, out s0_850, out s1_851, out a0_522, out a5_852, out s4_853, out s5_854, out s6_855, out s7_856, out s8_857, out s9_858, out s11_859)
	word32 a4_551
	word32 a3_860
	rf_pri_txcal_config(3<32>, a0_522, out a3_860, out a4_551)
	word32 a3_553 = Mem546[0x4200D92C<32>:int32]
	word32 a3_563 = a3_553 & -64<i32> | 0x3F<32>
	Mem564[a3_563 + 8<i32>:word32] = Mem546[a3_553 + 8<i32>:word32]
	word32 a3_571 = a3_563 & 0xFF00003F<32> | (a0_354 & 63<i32>) << 6<i32>
	Mem572[a3_571 + 8<i32>:word32] = Mem564[a3_563 + 8<i32>:word32]
	word32 a3_582 = a3_571 & 0xFF800FFF<32> | (t4_281 & 2047<i32>) << 12<i32>
	Mem583[a3_582 + 8<i32>:word32] = Mem572[a3_571 + 8<i32>:word32]
	Mem590[(a3_582 & -1024<i32> | a4_551 & 1023<i32>) + 12<i32>:word32] = Mem583[a3_582 + 12<i32>:word32]
	word32 a2_599
	word32 s2_607
	word32 s3_608
	word32 s8_613
	word32 a0_861
	word32 t4_865
	word32 a5_863
	word32 a7_864
	word32 a1_862
	printf(ra_529, 0x230771AC<32>, t4_281, a0_522, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_112, out a0_861, out a1_862, out a2_599, out a3_159, out a4_119, out a5_863, out a7_864, out s2_607, out s3_608, out s4_108, out s5_109, out s6_110, out s7_111, out s8_613, out s9_156, out s10_157, out s11_158, out t4_865)
	s2_155 = s2_607 + 0xFFFFFFFF<32>
	a5_104 = 0xFFFFFFFF<32>
	s3_105 = s3_608 + 0x10<32>
	s8_106 = s8_613 + 56<i32>
	branch s2_607 != 0<32> l23017EB4
l230180C8:
	word32 a5_626
	rf_pri_txcal_config_hw(a2_599, out a5_626)
	Mem634[(a5_626 & 0xFCFFFFFF<32>) + 28<i32>:word32] = Mem590[a5_626 + 28<i32>:word32]
	word32 a5_636 = rf_pri_restore_state_for_cal()
	Mem640[(a5_636 | 0xF00000<32>) + 20<i32>:word32] = Mem634[a5_636 + 20<i32>:word32]
	word32 a3_642 = Mem640[s11_158 + -1748<i32>:int32]
	word32 s0_641 = Mem640[(a5_636 | 0xF00000<32>) + 112<i32>:word32]
	Mem657[((Mem640[a3_642 + 128<i32>:int32] >>u 6<i32> & 63<i32>) << 16<i32> | ((Mem640[a3_642 + 128<i32>:int32] & 63<i32>) << 24<i32> | (a5_636 | 0xF00000<32>) & 0xC0FFFFFF<32>) & s1_112) + 112<i32>:word32] = s0_641
	word32 a4_659 = Mem657[s11_158 + -1748<i32>:int32]
	word32 a5_664 = Mem657[a4_659 + 132<i32>:int32]
	Mem668[s0_641 + 1536<i32>:word32] = a5_664 & 1023<i32> | (Mem657[a4_659 + 128<i32>:int32] & 0x7FF000<32> | Mem657[s0_641 + 1536<i32>:int32] & s9_156) & -1024<i32>
	return a5_664 & 1023<i32>
rf_pri_txcal_exit:
l23017F7A:
	s10_188 = s10_270 >>u 1<u32>


word32 rf_pri_roscal(word32 a3, word32 s3, word32 s6, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a3:[0..31] s3:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
rf_pri_roscal_entry:
l2301815E:
	word32 s0_28 = Mem23[0xF4000014<32>:word32]
	word32 a5_30 = 0xF0000000<32>
	branch (a3 & 256<i32>) != 0<32> l230181A4
l230181A4:
	Mem33[0xF4000014<32>:word32] = s0_28
	word32 a5_40
	rf_pri_manu_pu(3<32>, rf_pri_save_state_for_cal(a3 & 256<i32>), out a5_40)
	Mem45[(a5_40 | 512<i32>) + 28<i32>:word32] = Mem33[a5_40 + 28<i32>:word32]
	word32 a5_51
	word32 s9_484
	word32 s10_485
	word32 s11_486
	word32 ra_54 = rf_pri_config_channel.constprop.9(s6, s6, dwLoc08, dwArg10, dwArg14, dwArg38, dwArg40, dwArg44, s3, dwArg68, dwArg8C, dwArgF8, out a5_51, out s9_484, out s10_485, out s11_486)
	word32 a5_77 = a5_51 & 0xF8FFFFFF<32> | 0x6000300<32>
	Mem78[a5_77 + 72<i32>:word32] = Mem45[a5_51 + 72<i32>:word32]
	word32 a0_80
	word32 a3_83
	word32 a5_85
	word32 s5_92
	word32 s4_487
	word32 s8_488
	word32 s0_87 = rf_pri_roscal_iq.isra.3(1<32>, a5_77, dwArgF8, out a0_80, out a3_83, out a5_85, out s4_487, out s5_92, out s8_488)
	Mem106[(a5_85 & -64<i32> | a0_80 & 63<i32>) + 96<i32>:word32] = Mem78[a5_85 + 96<i32>:word32]
	Mem112[s0_87 + 364<i32>:word32] = Mem106[s0_87 + 364<i32>:int32] & s5_92 + 0xFFFFFFFF<32> | a0_80 << 0x10<u32>
	word32 a5_115
	word32 a3_119
	word32 s2_126
	word32 s3_127
	word32 s1_489
	word32 a0_490
	word32 a1_491
	word32 a2_492
	word32 a4_493
	word32 a7_494
	word32 s4_495
	word32 s5_496
	word32 s6_497
	word32 s7_498
	word32 s8_499
	word32 s9_500
	word32 s10_501
	word32 s11_502
	word32 t4_503
	word32 ra_122 = printf(ra_54, 0x230770E8<32>, a3_83, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_489, out a0_490, out a1_491, out a2_492, out a3_119, out a4_493, out a5_115, out a7_494, out s2_126, out s3_127, out s4_495, out s5_496, out s6_497, out s7_498, out s8_499, out s9_500, out s10_501, out s11_502, out t4_503)
	Mem144[(a5_115 & -64<i32> | s3_127) + 88<i32>:word32] = Mem112[a5_115 + 88<i32>:word32]
	Mem150[s0_87 + 364<i32>:word32] = s2_126 | Mem144[s0_87 + 364<i32>:int32] & -64<i32>
	word32 a5_152
	word32 a3_156
	word32 s3_164
	word32 s4_165
	word32 s5_166
	word32 s1_504
	word32 a0_505
	word32 a1_506
	word32 a2_507
	word32 a4_508
	word32 a7_509
	word32 s2_510
	word32 s6_511
	word32 s7_512
	word32 s8_513
	word32 s9_514
	word32 s10_515
	word32 s11_516
	word32 t4_517
	word32 ra_159 = printf(ra_122, 0x230770FC<32>, a3_119, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_504, out a0_505, out a1_506, out a2_507, out a3_156, out a4_508, out a5_152, out a7_509, out s2_510, out s3_164, out s4_165, out s5_166, out s6_511, out s7_512, out s8_513, out s9_514, out s10_515, out s11_516, out t4_517)
	Mem181[(a5_152 & -64<i32> | s3_164) + 80<i32>:word32] = Mem150[a5_152 + 80<i32>:word32]
	Mem185[s0_87 + 360<i32>:word32] = s4_165 | Mem181[s0_87 + 360<i32>:int32] & s5_166
	word32 a5_187
	word32 a3_191
	word32 s2_198
	word32 s3_199
	word32 s1_518
	word32 a0_519
	word32 a1_520
	word32 a2_521
	word32 a4_522
	word32 a7_523
	word32 s4_524
	word32 s5_525
	word32 s6_526
	word32 s7_527
	word32 s8_528
	word32 s9_529
	word32 s10_530
	word32 s11_531
	word32 t4_532
	word32 ra_194 = printf(ra_159, 0x23077110<32>, a3_156, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_518, out a0_519, out a1_520, out a2_521, out a3_191, out a4_522, out a5_187, out a7_523, out s2_198, out s3_199, out s4_524, out s5_525, out s6_526, out s7_527, out s8_528, out s9_529, out s10_530, out s11_531, out t4_532)
	Mem216[(a5_187 & -64<i32> | s3_199) + 72<i32>:word32] = Mem185[a5_187 + 72<i32>:word32]
	Mem221[s0_87 + 360<i32>:word32] = s2_198 | Mem216[s0_87 + 360<i32>:int32] & -64<i32>
	word32 a5_223
	word32 s1_533
	word32 a0_534
	word32 a1_535
	word32 a2_536
	word32 a3_537
	word32 a4_538
	word32 a7_539
	word32 s2_540
	word32 s3_541
	word32 s4_542
	word32 s5_543
	word32 s6_544
	word32 s7_545
	word32 s8_546
	word32 s9_547
	word32 s10_548
	word32 s11_549
	word32 t4_550
	word32 ra_230 = printf(ra_194, 0x23077124<32>, a3_191, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_533, out a0_534, out a1_535, out a2_536, out a3_537, out a4_538, out a5_223, out a7_539, out s2_540, out s3_541, out s4_542, out s5_543, out s6_544, out s7_545, out s8_546, out s9_547, out s10_548, out s11_549, out t4_550)
	word32 a0_245
	word32 a3_248
	word32 a5_250
	word32 s4_256
	word32 s8_260
	word32 s5_551
	word32 s0_252 = rf_pri_roscal_iq.isra.3(0<32>, a5_223, dwArgF8, out a0_245, out a3_248, out a5_250, out s4_256, out s5_551, out s8_260)
	Mem271[(a5_250 & s4_256 | (a0_245 & 63<i32>) << 6<i32>) + 96<i32>:word32] = Mem221[a5_250 + 96<i32>:word32]
	Mem277[s0_252 + 364<i32>:word32] = Mem271[s0_252 + 364<i32>:int32] & s8_260 | a0_245 << 0x18<u32>
	word32 a5_280
	word32 a3_284
	word32 s2_291
	word32 s3_292
	word32 s4_293
	word32 s6_295
	word32 s1_552
	word32 a0_553
	word32 a1_554
	word32 a2_555
	word32 a4_556
	word32 a7_557
	word32 s5_558
	word32 s7_559
	word32 s8_560
	word32 s9_561
	word32 s10_562
	word32 s11_563
	word32 t4_564
	word32 ra_287 = printf(ra_230, 0x23077138<32>, a3_248, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_552, out a0_553, out a1_554, out a2_555, out a3_284, out a4_556, out a5_280, out a7_557, out s2_291, out s3_292, out s4_293, out s5_558, out s6_295, out s7_559, out s8_560, out s9_561, out s10_562, out s11_563, out t4_564)
	Mem309[(a5_280 & s4_293 | s3_292) + 88<i32>:word32] = Mem277[a5_280 + 88<i32>:word32]
	Mem313[s0_252 + 364<i32>:word32] = Mem309[s0_252 + 364<i32>:int32] & s6_295 | s2_291 << 8<u32>
	word32 a5_315
	word32 a3_319
	word32 s3_327
	word32 s4_328
	word32 s7_331
	word32 s8_332
	word32 s1_565
	word32 a0_566
	word32 a1_567
	word32 a2_568
	word32 a4_569
	word32 a7_570
	word32 s2_571
	word32 s5_572
	word32 s6_573
	word32 s9_574
	word32 s10_575
	word32 s11_576
	word32 t4_577
	word32 ra_322 = printf(ra_287, 0x2307714C<32>, a3_284, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_565, out a0_566, out a1_567, out a2_568, out a3_319, out a4_569, out a5_315, out a7_570, out s2_571, out s3_327, out s4_328, out s5_572, out s6_573, out s7_331, out s8_332, out s9_574, out s10_575, out s11_576, out t4_577)
	Mem343[(a5_315 & s4_328 | s3_327) + 80<i32>:word32] = Mem313[a5_315 + 80<i32>:word32]
	Mem347[s0_252 + 360<i32>:word32] = s7_331 | Mem343[s0_252 + 360<i32>:int32] & s8_332
	word32 a5_349
	word32 a3_353
	word32 s3_361
	word32 s4_362
	word32 s5_363
	word32 s6_364
	word32 s1_578
	word32 a0_579
	word32 a1_580
	word32 a2_581
	word32 a4_582
	word32 a7_583
	word32 s2_584
	word32 s7_585
	word32 s8_586
	word32 s9_587
	word32 s10_588
	word32 s11_589
	word32 t4_590
	word32 ra_356 = printf(ra_322, 0x23077160<32>, a3_319, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_578, out a0_579, out a1_580, out a2_581, out a3_353, out a4_582, out a5_349, out a7_583, out s2_584, out s3_361, out s4_362, out s5_363, out s6_364, out s7_585, out s8_586, out s9_587, out s10_588, out s11_589, out t4_590)
	Mem377[Mem347[a5_349 + 72<i32>:word32] + 72<i32>:word32] = a5_349 & s4_362 | s3_361
	Mem381[s0_252 + 360<i32>:word32] = s5_363 | Mem377[s0_252 + 360<i32>:int32] & s6_364
	word32 s1_591
	word32 a0_592
	word32 a1_593
	word32 a2_594
	word32 a3_595
	word32 a4_596
	word32 a5_597
	word32 a7_598
	word32 s2_599
	word32 s3_600
	word32 s4_601
	word32 s5_602
	word32 s6_603
	word32 s7_604
	word32 s8_605
	word32 s9_606
	word32 s10_607
	word32 s11_608
	word32 t4_609
	ra = printf(ra_356, 0x23077174<32>, a3_353, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_591, out a0_592, out a1_593, out a2_594, out a3_595, out a4_596, out a5_597, out a7_598, out s2_599, out s3_600, out s4_601, out s5_602, out s6_603, out s7_604, out s8_605, out s9_606, out s10_607, out s11_608, out t4_609)
	word32 a5_405 = rf_pri_restore_state_for_cal()
	s0_28 = Mem381[a5_405 + 20<i32>:word32]
	a5_30 = a5_405 | 0xC000000<32>
l2301818A:
	Mem411[a5_30 + 20<i32>:word32] = s0_28
	0<32> = dwArg0128
	return ra
rf_pri_roscal_exit:


word32 rf_pri_rccal(word32 ra, word32 fflags, word32 frm, word32 dwArg18, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg98, word32 dwArgAC, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s6Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  fflags:[0..31] frm:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a5 s2 s6 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
rf_pri_rccal_entry:
l23018392:
	word32 a3_13 = Mem11[0x40001020<32>:int32]
	word32 a5_16 = Mem11[0x40001014<32>:int32]
	word32 s2_12 = 0x40001000<32>
	word32 a3_17 = a3_13 & 1024<i32>
	word32 a5_18 = a5_16 & 0xFFF3FFFF<32>
	branch (a3_13 & 1024<i32>) != 0<32> l230183C8
l230183C8:
	Mem21[0x40001014<32>:word32] = a5_16 & 0xFFF3FFFF<32> | 0x40000<32>
	word32 a5_518
	rf_pri_manu_pu(4<32>, rf_pri_save_state_for_cal(a3_13 & 1024<i32>), out a5_518)
	Mem35[0x40001084<32>:word32] = Mem21[0x40001084<32>:int32] & 0xFCFFFFFF<32> | 0x2000000<32>
	Mem40[0x4000108C<32>:word32] = Mem35[0x4000108C<32>:int32] | 0x1000000<32>
	Mem44[0x4000101C<32>:word32] = Mem40[0x4000101C<32>:int32] | 0xFFF800<32>
	word32 fflags_55
	word32 frm_56
	word32 a0_78
	word32 a3_81
	word32 s2_91
	word32 a0_519
	word32 a3_520
	word32 s2_521
	word32 fflags_522
	word32 frm_523
	word32 ra_88 = rf_pri_rccal_iq(rf_pri_rccal_iq(ra, 1<32>, fflags, frm, dwArg98, out a0_519, out a3_520, out s2_521, out fflags_55, out frm_56), 0<32>, fflags_55, frm_56, dwArg98, out a0_78, out a3_81, out s2_91, out fflags_522, out frm_523)
	word32 a4_107 = Mem44[s2_91 + 128<i32>:int32]
	word32 a3_116 = a3_81 & -64<i32> | a4_107 >>u 0x18<u32> & 63<i32>
	Mem117[a3_116 + 8<i32>:word32] = Mem44[a3_81 + 8<i32>:word32]
	word32 a3_123 = a3_116 & 0xFF00003F<32> | (a4_107 >>u 0x10<u32> & 63<i32>) << 6<i32>
	Mem124[a3_123 + 8<i32>:word32] = Mem117[a3_116 + 8<i32>:word32]
	word32 a3_132 = a3_123 & 0xFFFC0FFF<32> | (a4_107 >>u 8<u32> & 63<i32>) << 12<i32>
	Mem133[a3_132 + 8<i32>:word32] = Mem124[a3_123 + 8<i32>:word32]
	Mem141[((a4_107 & 63<i32>) << 18<i32> | a3_132 & 0xFF03FFFF<32>) + 8<i32>:word32] = Mem133[a3_132 + 8<i32>:word32]
	word32 a0_156
	word32 a5_157
	word32 a3_161
	word32 t4_539
	word32 s11_538
	word32 s10_537
	word32 s9_536
	word32 s4_531
	word32 s5_532
	word32 s6_533
	word32 s7_534
	word32 s8_535
	word32 a2_526
	word32 a4_527
	word32 a7_528
	word32 s2_529
	word32 s3_530
	word32 a1_525
	word32 s1_524
	word32 ra_164 = printf(ra_88, 0x23077094<32>, (a3_132 & 0xFF03FFFF<32>) >>u 6<i32> & 63<i32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_524, out a0_156, out a1_525, out a2_526, out a3_161, out a4_527, out a5_157, out a7_528, out s2_529, out s3_530, out s4_531, out s5_532, out s6_533, out s7_534, out s8_535, out s9_536, out s10_537, out s11_538, out t4_539)
	word32 a5_181 = a5_157 & 63<i32>
	word32 a3_183 = a3_161 >>u 6<i32> & 63<i32>
	branch (a5_157 & 63<i32>) >=u a3_183 l230184C6
l230184BE:
	a5_181 = (a5_157 & 63<i32>) >>u 6<i32> & 63<i32>
l230184C6:
	word32 a3_191 = a3_183 >>u 12<i32> & 63<i32>
	branch a5_181 >=u a3_191 l230184DA
l230184D2:
	a5_181 = a5_181 >>u 12<i32> & 63<i32>
l230184DA:
	branch a5_181 >=u (a3_191 >>u 18<i32> & 63<i32>) l230184EE
l230184E6:
	a5_181 = a5_181 >>u 18<i32> & 63<i32>
l230184EE:
	word32 a3_206 = 0x18<32>
	branch a5_181 <= 39<i32> l230184FE
l230184F8:
	a3_206 = 63<i32> - a5_181
l230184FE:
	word32 a3_217 = a3_206 & 255<i32>
	word32 a2_219 = a3_217 + 39<i32> & 63<i32>
	word32 a5_221 = a5_181 & -64<i32> | a2_219
	Mem222[a5_221 + 8<i32>:word32] = Mem141[a5_181 + 8<i32>:word32]
	word32 a5_232 = ((a5_221 >>u 6<i32>) + a3_217 & 63<i32>) << 6<i32> | a2_219 & 0xFF00003F<32>
	Mem233[a5_232 + 8<i32>:word32] = Mem222[a2_219 + 8<i32>:word32]
	word32 a5_243 = ((a5_232 >>u 12<i32>) + a3_217 & 63<i32>) << 12<i32> | (a2_219 & 0xFF00003F<32>) & 0xFFFC0FFF<32>
	Mem244[a5_243 + 8<i32>:word32] = Mem233[(a2_219 & 0xFF00003F<32>) + 8<i32>:word32]
	Mem255[(((a5_243 >>u 18<i32>) + a3_217 & 63<i32>) << 18<i32> | a3_217 & 0xFF03FFFF<32>) + 8<i32>:word32] = Mem244[a3_217 + 8<i32>:word32]
	rf_pri_rccal_config.part.0(a0_156 & 63<i32>)
	word32 s11_553
	word32 s10_552
	word32 s8_551
	word32 s3_547
	word32 a7_546
	word32 s4_548
	word32 a4_544
	word32 a3_543
	word32 a5_545
	word32 s1_310
	word32 s5_549
	word32 s7_550
	word32 t4_554
	word32 a2_542
	word32 a1_541
	word32 a0_540
	printf(ra_164, 0x23077090<32>, rf_pri_rccal_config(0<32>, 0x3F<32>) >>u 6<i32> & 63<i32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_310, out a0_540, out a1_541, out a2_542, out a3_543, out a4_544, out a5_545, out a7_546, out s2_12, out s3_547, out s4_548, out s5_549, out s6, out s7_550, out s8_551, out s9, out s10_552, out s11_553, out t4_554)
	rf_pri_restore_state_for_cal()
	branch s1_310 == 2<32> l230185BA
l230185B6:
	branch a0_78 != 2<32> l230185D2
l230185D2:
	Mem333[0xC0016<32>:word32] = Mem255[0x16<32>:word32]
	a3_17 = 0xC0000<32>
	a5_18 = 0xC0002<32>
l230185BA:
	a3_17 = Mem255[0x16<32>:word32]
	Mem342[0x80016<32>:word32] = a3_17
	a5_18 = 0x80002<32>
l230183B8:
	Mem343[0x40001014<32>:word32] = a5_16 & 0xFFF3FFFF<32>
l230183BC:
	0<32> = dwArg38
	a5Out = a5_18
	s2Out = s2_12
	s6Out = s6
	s9Out = s9
	return a3_17
rf_pri_rccal_exit:


word32 rf_pri_lo_acal(word32 a3, word32 a5, word32 s6, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a3:[0..31] a5:[0..31] s6:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
rf_pri_lo_acal_entry:
l230185E2:
	Mem32[(a5 & -193<i32> | 64<i32>) + 20<i32>:word32] = Mem25[a5 + 20<i32>:word32]
	word32 a5_225
	rf_pri_manu_pu(6<32>, rf_pri_save_state_for_cal(a3), out a5_225)
	word32 s3_226 = 0x4200CF40<32>
	word32 s2_224 = 0<32>
	word32 s4_216 = 0xFFE0FFFF<32>
	word32 s6_218 = 0x4200E000<32>
	word32 s5_217 = 0xFE0000FF<32>
l23018632:
	word32 s0_50 = Mem49[a5_225 + 28<i32>:word32]
	Mem55[(a5_225 | 16<i32>) + 28<i32>:word32] = s0_50
	Mem61[s0_50 + 164<i32>:word32] = Mem55[s0_50 + 164<i32>:int32] & -1793<i32> | 1024<i32>
	Mem68[s0_50 + 160<i32>:word32] = Mem61[s0_50 + 160<i32>:int32] & s4_216 | 0x100000<32>
	word32 s7_53 = s2_224 + 8<i32>
	word32 a5_69 = Mem68[s0_50 + 160<i32>:int32]
	Mem78[s0_50 + 160<i32>:word32] = CONVERT(Mem68[Mem68[s6_218 + -1748<i32>:int32] + (s7_53 << 1<u32>) + 12<i32>:uint16], uint16, word32) & 255<i32> | a5_69 & -256<i32>
	word32 a5_80 = Mem78[s3_226:int32]
	Mem81[s0_50 + 196<i32>:word32] = a5_80
	word32 s0_106
	word32 s4_112
	word32 s8_116
	word32 s9_117
	word32 s2_119
	word32 s3_120
	word32 s5_121
	word32 s6_122
	word32 s7_123
	word32 s1_109
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:1<32>,a3:s7_53 << 1<u32>,a4:a5_69 & -256<i32>,a5:a5_80,ra:0x4200C690<p32>,s0:s0_50,s1:0x10<32>,s2:s2_52,s3:s3_79,s4:s4_65,s5:s5_83,s6:s6_72,s7:s7_53,s8:3<32>,s9:0xFFFFFFFF<32>
		defs: s0:s0_87,s1:s1_94,s2:s2_88,s3:s3_89,s4:s4_90,s5:s5_91,s6:s6_92,s7:s7_95,s8:s8_96,s9:s9_97
l23018698:
	word32 a3_110 = s1_109 << 0x10<u32>
	word32 a5_114 = Mem107[s0_106 + 160<i32>:int32] & s4_112 | a3_110
	Mem115[s0_106 + 160<i32>:word32] = a5_114
	branch s8_116 != s9_117 l2301872C
l2301872C:
	word32 s1_134
	word32 s8_136
	call 0x4200C506<p32> (retsize: 0;)
		uses: a3:a3_110,a5:a5_114,ra:0x4200C72C<p32>,s0:s0_106,s1:s1_109,s2:s2_119,s3:s3_120,s4:s4_112,s5:s5_121,s6:s6_122,s7:s7_123,s8:s8_116,s9:s9_117
		defs: s0:s0_127,s1:s1_134,s2:s2_128,s3:s3_129,s4:s4_130,s5:s5_131,s6:s6_132,s7:s7_135,s8:s8_136,s9:s9_137
	word32 a5_148 = 1<32> << s8_136
	branch Mem115[s0_106 + 164<i32>:int32] << 0x13<u32> >= 0<32> l2301874C
l2301874C:
	s1_109 = s1_134 + a5_148
l23018746:
	s1_109 = s1_134 - a5_148
l23018748:
	s8_116 = s8_136 + 0xFFFFFFFF<32>
l230186B0:
	word32 ra_156
	word32 s0_157
	word32 s5_161
	word32 s6_162
	word32 s7_165
	word32 a3_170
	word32 s1_164
	call 0x4200C506<p32> (retsize: 0;)
		uses: a3:a3_110,a5:a5_114,ra:0x4200C6B0<p32>,s0:s0_106,s1:s1_109,s2:s2_119,s3:s3_120,s4:s4_112,s5:s5_121,s6:s6_122,s7:s7_123,s8:s8_116,s9:s9_117
		defs: a3:a3_170,ra:ra_156,s0:s0_157,s1:s1_164,s5:s5_161,s6:s6_162,s7:s7_165
	branch Mem115[s0_157 + 164<i32>:int32] << 0x13<u32> < 0<32> l230186CC
l230186C4:
	branch s1_164 >u 0x1E<32> l230186CC
l230186CA:
	s1_164 = s1_164 + 1<32>
l230186CC:
	word32 s7_187 = (s7_165 << 1<i32>) + Mem115[s6_162 + -1748<i32>:int32]
	Mem194[s7_187 + 12<i32>:word16] = SLICE(CONVERT(Mem115[s7_187 + 12<i32>:uint16], uint16, word32) & s5_161 | (s1_164 & 31<i32>) << 8<i32>, word16, 0)
	word32 a3_207
	word32 s2_214
	word32 s3_215
	word32 a2_368
	word32 a1_367
	word32 a0_366
	word32 s1_365
	word32 t4_377
	word32 s8_373
	word32 s10_375
	word32 s11_376
	word32 s9_374
	word32 a4_369
	word32 a7_371
	word32 s7_372
	word32 a5_370
	printf(ra_156, 0x23077070<32>, a3_170, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_365, out a0_366, out a1_367, out a2_368, out a3_207, out a4_369, out a5_370, out a7_371, out s2_214, out s3_215, out s4_216, out s5_217, out s6_218, out s7_372, out s8_373, out s9_374, out s10_375, out s11_376, out t4_377)
	s2_224 = s2_214 + 1<32>
	a5_225 = 0x15<32>
	s3_226 = s3_215 + 4<32>
	branch s2_214 != 0xFFFFFFEC<32> l23018632
l23018702:
	word32 a5_228 = rf_pri_restore_state_for_cal()
	Mem231[(a5_228 | 192<i32>) + 20<i32>:word32] = Mem194[a5_228 + 20<i32>:word32]
	0<32> = dwArg0128
	s3Out = s3_215 + 4<32>
	s6Out = s6_218
	return a3_207
rf_pri_lo_acal_exit:


word32 rf_pri_fcal(word32 a3, word32 s6, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128, ptr32 & a5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a3:[0..31] s6:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
rf_pri_fcal_entry:
l23018750:
	word32 s4_28 = CONVERT(Mem26[0x4200D918<32>:uint16], uint16, word32)
	word32 s5_29 = CONVERT(Mem26[0x4200D91A<32>:uint16], uint16, word32)
	word32 s3_30 = CONVERT(Mem26[0x4200D91C<32>:uint16], uint16, word32)
	Mem36[0x4200D92C<32>:word32] = Mem26[0x4200D92C<32>:word32]
	word32 a5_44
	word32 a3_42 = rf_pri_manu_pu(7<32>, rf_pri_save_state_for_cal(a3), out a5_44)
	word32 s0_45 = Mem36[a5_44 + 28<i32>:word32]
	Mem49[(a5_44 | 8<i32>) + 28<i32>:word32] = s0_45
	Mem55[s0_45 + 160<i32>:word32] = Mem49[s0_45 + 160<i32>:int32] & -256<i32> | 128<i32>
	Mem60[s0_45 + 184<i32>:word32] = Mem55[s0_45 + 184<i32>:int32] & 0xFCFFFFFF<32>
	Mem68[s0_45 + 168<i32>:word32] = CONVERT(Mem60[0x4200D91E<32>:uint16], uint16, word32) | Mem60[s0_45 + 168<i32>:int32] & 0xF0000000<32>
	Mem70[s0_45 + 196<i32>:word32] = 0x1000000<32>
	Mem74[s0_45 + 192<i32>:word32] = Mem70[s0_45 + 192<i32>:int32] | 0x1000000<32>
	word32 a5_75 = Mem74[s0_45 + 192<i32>:int32]
	Mem77[s0_45 + 192<i32>:word32] = a5_75 & 0xEFFFFFFF<32>
	word32 a4_78 = Mem77[s0_45 + 184<i32>:int32]
	Mem80[s0_45 + 184<i32>:word32] = a4_78 | 0x10000000<32>
	word32 s0_85
	word32 s1_86
	word32 s2_87
	word32 s6_88
	word32 s7_89
	word32 s8_90
	word32 s9_91
	word32 s3_92
	word32 s4_93
	word32 s5_94
	word32 a3_98
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:0xA<32>,a3:a3_42,a4:a4_78 | 0x10000000<32>,a5:a5_75 & 0xEFFFFFFF<32>,ra:0x4200C80E<p32>,s0:s0_45,s1:0xEFFFFFFF<32>,s2:0x10000000<32>,s3:s3_30,s4:s4_28,s5:s5_29,s6:1<32>,s7:0x23077000<32>,s8:0xE<32>,s9:0xFFFFFFFF<32>
		defs: a3:a3_98,s0:s0_85,s1:s1_86,s2:s2_87,s3:s3_92,s4:s4_93,s5:s5_94,s6:s6_88,s7:s7_89,s8:s8_90,s9:s9_91
	Mem106[s0_85 + 192<i32>:word32] = Mem80[s0_85 + 192<i32>:int32] | s2_87
	word32 a5_108 = Mem106[s0_85 + 184<i32>:int32] & s1_86
	Mem109[s0_85 + 184<i32>:word32] = a5_108
	word32 s0_114
	word32 s1_115
	word32 s2_116
	word32 s6_117
	word32 s7_118
	word32 s8_119
	word32 s9_120
	word32 s3_121
	word32 s4_122
	word32 s5_123
	word32 a3_127
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a3:a3_98,a5:a5_108,ra:0x4200C830<p32>,s0:s0_85,s1:s1_86,s2:s2_87,s3:s3_92,s4:s4_93,s5:s5_94,s6:s6_88,s7:s7_89,s8:s8_90,s9:s9_91
		defs: a3:a3_127,s0:s0_114,s1:s1_115,s2:s2_116,s3:s3_121,s4:s4_122,s5:s5_123,s6:s6_117,s7:s7_118,s8:s8_119,s9:s9_120
	word32 a5_135 = Mem109[s0_114 + 164<i32>:int32] & 0xFFFFFFFC<32> | 2<i32>
	Mem136[s0_114 + 164<i32>:word32] = a5_135
	word32 s8_146
	word32 s7_145
	word32 a3_154
	word32 s9_147
	word32 ra_140
	word32 s4_149
	word32 s6_144
	word32 s5_150
	word32 s3_148
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a3:a3_127,a5:a5_135,ra:0x4200C84A<p32>,s0:s0_114,s1:s1_115,s2:s2_116,s3:s3_121,s4:s4_122,s5:s5_123,s6:s6_117,s7:s7_118,s8:s8_119,s9:s9_120
		defs: a3:a3_154,ra:ra_140,s3:s3_148,s4:s4_149,s5:s5_150,s6:s6_144,s7:s7_145,s8:s8_146,s9:s9_147
l23018852:
	word32 s2_159 = 6<32>
	word32 s0_160 = 128<i32>
l23018858:
	branch s2_159 == s9_147 l2301886A
l2301885C:
	word32 s0_175
	word32 a0_166
	ra_140 = rf_pri_fcal_meas(ra_140, s0_160, s0_160, out a0_166, out a3_154)
	branch a0_166 <u s4_149 l230188D4
l230188D4:
	s0_175 = s0_160 - (s6_144 << s2_159)
l23018866:
	branch s5_150 <u a0_166 l230188E2
l230188E2:
	s0_175 = s0_160 + (s6_144 << s2_159)
l230188DA:
	s0_160 = CONVERT(SLICE(s0_175, word16, 0), word16, word32)
	s2_159 = s2_159 + 0xFFFFFFFF<32>
l2301886A:
	branch s8_146 >=u s0_160 l230188EA
l230188EA:
	word32 a5_693
	word32 a3_214
	word32 s1_218
	word32 s3_222
	word32 s4_223
	word32 s5_224
	word32 s6_225
	word32 s7_226
	word32 s8_227
	word32 s9_228
	word32 a7_694
	word32 s10_696
	word32 s2_695
	word32 s11_697
	word32 t4_698
	word32 a1_690
	word32 a0_689
	word32 a2_691
	word32 a4_692
	printf(ra_140, s7_145 + 56<i32>, a3_154, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_218, out a0_689, out a1_690, out a2_691, out a3_214, out a4_692, out a5_693, out a7_694, out s2_695, out s3_222, out s4_223, out s5_224, out s6_225, out s7_226, out s8_227, out s9_228, out s10_696, out s11_697, out t4_698)
	word32 a5_234 = Mem207[0x400010C0<32>:int32] & s1_218
	Mem235[0x400010C0<32>:word32] = a5_234
	word32 a4_236 = Mem235[0x400010B8<32>:int32]
	Mem238[0x400010B8<32>:word32] = a4_236 | 0x10000000<32>
	word32 s0_243
	word32 s1_244
	word32 s2_245
	word32 s6_246
	word32 s7_247
	word32 s8_248
	word32 s9_249
	word32 s3_250
	word32 s4_251
	word32 s5_252
	word32 a3_256
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a3:a3_214,a4:a4_236 | 0x10000000<32>,a5:a5_234,ra:0x4200C914<p32>,s0:0x40001000<32>,s1:s1_218,s2:0x10000000<32>,s3:s3_222,s4:s4_223,s5:s5_224,s6:s6_225,s7:s7_226,s8:s8_227,s9:s9_228
		defs: a3:a3_256,s0:s0_243,s1:s1_244,s2:s2_245,s3:s3_250,s4:s4_251,s5:s5_252,s6:s6_246,s7:s7_247,s8:s8_248,s9:s9_249
	Mem269[s0_243 + 192<i32>:word32] = Mem238[s0_243 + 192<i32>:int32] | s2_245
	word32 a5_271 = Mem269[s0_243 + 184<i32>:int32] & s1_244
	Mem272[s0_243 + 184<i32>:word32] = a5_271
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:50<i32>,a3:a3_256,a5:a5_271,ra:0x4200C936<p32>,s0:s0_243,s1:s1_244,s2:s2_245,s3:s3_250,s4:s4_251,s5:s5_252,s6:s6_246,s7:s7_247,s8:s8_248,s9:s9_249
		defs: a3:a3_290,ra:ra_276,s3:s3_284,s4:s4_285,s5:s5_286,s6:s6_280,s7:s7_281,s8:s8_282,s9:s9_283
l2301886E:
	word32 s1_302 = CONVERT(SLICE(s0_160 + 1<i32>, word16, 0), word16, word32)
	word32 a3_699
	word32 a0_304
	word32 ra_309 = rf_pri_fcal_meas(ra_140, s0_160, s1_302, out a0_304, out a3_699)
	Mem313[0x42012A54<32>:word16] = SLICE(a0_304, word16, 0)
	word32 s4_314 = 0x42011A56<32>
	word32 s2_315 = CONVERT(SLICE(s0_160 + -38<i32>, word16, 0), word16, word32)
l23018896:
	word32 s1_318 = s1_302 + 0xFFFFFFFF<32>
	s1_302 = CONVERT(SLICE(s1_318, word16, 0), word16, word32)
	word32 a0_324
	word32 a3_700
	ra_309 = rf_pri_fcal_meas(ra_309, s0_160, s1_302, out a0_324, out a3_700)
	Mem331[s4_314 + 0<i32>:word16] = SLICE(a0_324, word16, 0)
	branch s3_148 <u a0_324 l230188B0
l230188AA:
	s4_314 = s4_314 + 2<32>
	branch CONVERT(SLICE(s1_318, word16, 0), word16, word32) != s2_315 l23018896
l230188B0:
	word32 a3_337 = 0<32>
	word32 a5_338 = 0<32>
	word32 s0_342 = s0_160 + 2<32>
l230188CA:
	word32 a0_348 = CONVERT(Mem347[a3_337 + 0x4200CF14<32>:uint16], uint16, word32)
l23018948:
	word32 a4_355 = a5_338 << 0x10<u32>
	branch CONVERT(Mem347[(a5_338 << 1<u32>) + 0x42011A54<32>:uint16], uint16, word32) <u a0_348 l23018940
l23018940:
	a5_338 = CONVERT(SLICE((a4_355 >>u 16<i32>) + 1<i32>, word16, 0), word16, int32)
l2301895C:
	Mem368[a3_337 + 0x42011AA4<32>:word16] = SLICE(s0_342 - (a4_355 >>u 16<i32>), word16, 0)
	branch a5_338 <= 0<32> l230189E6
l230189E6:
	a5_338 = 0<32>
l2301896C:
	a5_338 = CONVERT(SLICE((a4_355 >>u 16<i32>) + -1<i32>, word16, 0), word16, int32)
l23018974:
	a3_337 = a3_337 + 2<32>
	branch a3_337 != 42<i32> l230188CA
l2301897A:
	rf_pri_restore_state_for_cal()
	word32 s0_379 = 0x42011AA4<32>
	word32 s1_382 = 0<32>
	word32 s4_383 = 0x4200E000<32>
	word32 s3_384 = 0x23077000<32>
l2301898C:
	word32 a4_392 = Mem387[s4_383 + -1748<i32>:int32] + (s1_382 + 8<i32> << 1<i32>)
	word32 a2_394 = CONVERT(Mem387[s0_379:uint16], uint16, word32)
	Mem400[a4_392 + 12<i32>:word16] = SLICE(CONVERT(Mem387[a4_392 + 12<i32>:uint16], uint16, word32) & -256<i32> | a2_394 & 255<i32>, word16, 0)
	word32 a7_705
	word32 s11_711
	word32 a5_407
	word32 a3_411
	word32 s2_418
	word32 s6_422
	word32 t4_712
	word32 s5_706
	word32 s8_708
	word32 s7_707
	word32 s9_709
	word32 s10_710
	word32 a1_702
	word32 a0_701
	word32 a2_703
	word32 a4_704
	ra_309 = printf(ra_309, s3_384 + 76<i32>, a2_394 & 255<i32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_382, out a0_701, out a1_702, out a2_703, out a3_411, out a4_704, out a5_407, out a7_705, out s2_418, out s3_384, out s4_383, out s5_706, out s6_422, out s7_707, out s8_708, out s9_709, out s10_710, out s11_711, out t4_712)
	s0_379 = s0_379 + 2<32>
	branch s1_382 != s2_418 l2301898C
l230189C0:
	Mem431[(a5_407 | 48<i32>) + 20<i32>:word32] = Mem400[a5_407 + 20<i32>:word32]
	0<32> = dwArg0128
	a5Out = a5_407 | 48<i32>
	s6Out = s6_422
	return a3_411
rf_pri_fcal_exit:


word32 rf_pri_full_cal(word32 s6, word32 fflags, word32 frm, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg1C, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg9C, word32 dwArgB8, word32 dwArgE8, word32 dwArg0118, ptr32 & s1Out, ptr32 & s2Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  fflags:[0..31] frm:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: fflags frm ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
rf_pri_full_cal_entry:
l230189EA:
	Mem11[0x40001220<32>:word32] = Mem7[0x40001220<32>:int32] & -97<i32>
	Mem14[0x40001220<32>:word32] = Mem11[0x40001220<32>:int32] | 33<i32>
	Mem17[0x40001220<32>:word32] = Mem14[0x40001220<32>:int32] | 64<i32>
	word32 a5_27
	word32 s6_39
	word32 s3_61
	word32 s6_64
	word32 a5_104
	word32 s2_113
	word32 s6_117
	word32 s9_120
	word32 a5_195
	word32 a5_134 = rf_pri_txcal(rf_pri_rccal(rf_pri_roscal(rf_pri_lo_acal(rf_pri_fcal(rf_pri_start_txdfe(out a5_195), s6, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0118, out a5_27, out s6_39), a5_27, s6_39, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0118, out s3_61, out s6_64), s3_61, s6_64, dwArg00, dwArg04, dwArg28, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgE8, dwArg0118), fflags, frm, dwArg08, dwArg28, dwArg50, dwArg54, dwArg78, dwArg88, dwArg9C, out a5_104, out s2_113, out s6_117, out s9_120), a5_104, s2_113, s6_117, s9_120, dwLoc08, dwArg00, dwArg04, dwArg1C, dwArg4C, dwArg9C, dwArgB8)
	word32 s0_155 = Mem17[a5_134 + 12<i32>:word32]
	Mem159[(a5_134 | 6<i32>) + 12<i32>:word32] = s0_155
	Mem162[s0_155 + 544<i32>:word32] = Mem159[s0_155 + 544<i32>:int32] & -98<i32>
	Mem165[s0_155 + 544<i32>:word32] = Mem162[s0_155 + 544<i32>:int32] & 0xFE00067D<32>
	s1Out = s1_139
	s2Out = s2_142
	fflagsOut = fflags_107
	frmOut = frm_108
	return ra_137
rf_pri_full_cal_exit:


word32 rf_pri_restore_cal_reg(word32 a3, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rf_pri_init
// MayUse:  a3:[0..31]
// LiveOut: s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
rf_pri_restore_cal_reg_entry:
l23018A5C:
	word32 a3_24 = a3 & 63<i32> | Mem15[0x40001168<32>:int32] & -64<i32>
	word32 a3_32 = (a3_24 >>u 6<i32> & 63<i32>) << 8<i32> | a3_24 & 0xFC0000FF<32>
	word32 a2_41 = Mem15[(a3_32 & 0xFFC0FFFF<32>) + 80<i32>:word32]
	word32 a3_45 = ((a3_32 & 0xFFC0FFFF<32>) >>u 6<i32> & 63<i32>) << 24<i32> | (a3_32 & 0xFFC0FFFF<32>) & 0xC0FFFFFF<32>
	Mem46[0x40001168<32>:word32] = a3_45
	word32 a3_52 = a3_45 & 63<i32> | Mem46[0x4000116C<32>:int32] & -64<i32>
	word32 a3_63 = ((a3_52 >>u 6<i32> & 63<i32>) << 8<i32> | a3_52 & 0xFC0000FF<32>) & 0xFFC0FFFF<32> | (a2_41 & 63<i32>) << 16<i32>
	Mem70[0x4000116C<32>:word32] = (a3_63 >>u 6<i32> & 63<i32>) << 24<i32> | a3_63 & 0xC0FFFFFF<32>
	word32 a4_71 = Mem70[0x40001080<32>:int32]
	word32 a4_77 = (a4_71 & 63<i32>) << 24<i32> | a4_71 & 0xC0FFFFFF<32>
	word32 a4_84 = a4_77 & 0xFC0000FF<32> & 0xFFC0FFFF<32>
	Mem95[0x40001080<32>:word32] = (((a4_77 & 0xFC0000FF<32>) >>u 6<i32> & 63<i32>) << 16<i32> | a4_84) & -64<i32> | a4_84 >>u 18<i32> & 63<i32>
	word32 a5_151
	word32 a4_100 = rf_pri_txcal_config_hw(a4_71 & 0xC0FFFFFF<32>, out a5_151)
	word32 a3_105 = Mem95[0x4200D92C<32>:int32]
	word32 s0_106 = Mem95[a4_100 + 112<i32>:word32]
	Mem119[((Mem95[a3_105 + 128<i32>:int32] >>u 6<i32> & 63<i32>) << 16<i32> | ((Mem95[a3_105 + 128<i32>:int32] & 63<i32>) << 24<i32> | a4_100 & 0xC0FFFFFF<32>) & 0xFFC0FFFF<32>) + 112<i32>:word32] = s0_106
	word32 a3_121 = Mem119[0x4200D92C<32>:int32]
	Mem132[s0_106 + 1536<i32>:word32] = (Mem119[a3_121 + 128<i32>:int32] & 0x7FF000<32> | Mem119[s0_106 + 1536<i32>:int32] & 0xFF800FFF<32>) & -1024<i32> | Mem119[a3_121 + 132<i32>:int32] & 1023<i32>
	s1Out = 0x4200E000<32>
	s2Out = 0xFFC0FFFF<32>
	return s0_106
rf_pri_restore_cal_reg_exit:


word32 rf_pri_init(word32 s1, word32 a0, word32 a1, word32 s2, word32 s6, word32 fflags, word32 frm, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg1C, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg9C, word32 dwArgB8, word32 dwArgE8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rfc_init
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] s1:[0..31] s2:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: fflags frm ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
rf_pri_init_entry:
l23018BC0:
	rf_pri_chipv(a1)
	Mem27[CONVERT(a0 <u 1<i32>, bool, word32):word32] = 0x4200DCE8<32>
	word32 a5_33 = Mem27[0x4000F814<32>:int32] & 0xFF0000FF<32> | 768<i32>
	Mem34[0x40010814<32>:word32] = a5_33
	word32 a5_40 = a5_33 & 0xF0FFFFFF<32> | 0x8000000<32>
	Mem41[a5_40 + 48<i32>:word32] = Mem34[a5_33 + 48<i32>:word32]
	word32 a1_42 = Mem41[a5_40 + 48<i32>:word32]
	Mem46[(a5_40 | 0x1000001<32>) + 48<i32>:word32] = a1_42
	word32 a5_47 = Mem46[0x4000F884<32>:int32]
	Mem49[0x40010884<32>:word32] = a5_47 | 4<i32>
	word32 s0_207 = a0
	word32 a5_48 = a5_47 | 4<i32>
	branch (a5_47 | 4<i32>) != 0<32> l23018C36
l23018C2C:
	word32 s10_279
	word32 s11_280
	word32 s5_281
	word32 s7_282
	word32 s9_283
	word32 t0_284
	word32 t2_285
	call 0x4200C510<p32> (retsize: 0;)
		uses: a0:0xA<32>,a1:a1_42,fflags:fflags,frm:frm,ra:0x4200CC2E<p32>,s0:a0,s1:s1,s10:s10_279,s11:s11_280,s2:s2,s5:s5_281,s6:s6,s7:s7_282,s9:s9_283,t0:t0_284,t2:t2_285
		defs: a1:a1_56,a5:a5_61,ra:ra_57,s0:s0_54,s10:s10_279,s11:s11_280,s5:s5_281,s7:s7_282,s9:s9_283,t0:t0_284,t2:t2_285
l23018C36:
	word32 a1_84 = a1_42 << 8<i32>
	word32 a3_77 = Mem49[a5_48 + 100<i32>:word32]
	word32 a5_88 = (a5_48 & 0xF80000FF<32> | a1_84) & -248<i32> | Mem49[Mem49[a1_42:word32] + 4<i32>:word32] << 4<i32>
	Mem92[(a5_88 | 0x4000002<32>) + 100<i32>:word32] = a3_77
	word32 a2_93 = Mem92[a5_88 | 0x4000002<32>:word32]
	Mem109[a3_77 + 296<i32>:word32] = (Mem92[a3_77 + 296<i32>:int32] & 0xFF80FFFF<32> | a1_84 << 0x10<u32>) & 0xF0FFFFFF<32> | Mem92[Mem92[a1_84 + 8<i32>:word32] + 12<i32>:int32] << 0xC<u32> | 0x400000<32>
	word32 a6_110 = Mem109[a2_93:int32]
	Mem129[a3_77 + 300<i32>:word32] = ((Mem109[a3_77 + 300<i32>:int32] & -2048<i32> | Mem109[a6_110 + 16<i32>:int32] << 4<i32> | Mem109[a6_110 + 20<i32>:int32]) & 0xFF80FFFF<32> | 1024<i32> | Mem109[a6_110 + 24<i32>:int32] << 0x10<u32>) & 0xF0FFFFFF<32> | Mem109[a6_110 + 28<i32>:int32] << 0xC<u32> | 0x400000<32>
	Mem133[a3_77 + 144<i32>:word32] = Mem129[a3_77 + 144<i32>:int32] | 0x10000000<32>
	word32 a5_134 = Mem133[a3_77 + 184<i32>:int32]
	Mem140[a3_77 + 184<i32>:word32] = Mem133[a5_134 + 32<i32>:word32] << 4<i32> | a5_134 & -17<i32>
	word32 a4_145 = (a5_134 & -17<i32>) << 1<i32>
	Mem149[a3_77 + 312<i32>:word32] = Mem140[a3_77 + 312<i32>:int32] & 0xFFFFFFFC<32> | a4_145 | a4_145
	Mem155[a3_77 + 312<i32>:word32] = Mem149[a3_77 + 312<i32>:int32] & 0xFFFCFFF7<32> | 768<i32>
	Mem160[a3_77 + 304<i32>:word32] = Mem155[a3_77 + 304<i32>:int32] & 0xEFFFFFFE<32>
	word32 a5_161 = Mem160[0x4000E400<32>:int32]
	Mem167[0x4000E400<32>:word32] = Mem160[a5_161 + 44<i32>:word32] << 1<i32> | a5_161 & -3<i32>
	word32 a5_168 = Mem167[0x4000E418<32>:int32]
	Mem176[0x4000E418<32>:word32] = Mem167[a5_168 + 48<i32>:word32] << 24<i32> | a5_168 & 0xFCFFFFFF<32>
	word32 a5_181 = Mem176[a3_77 + 140<i32>:int32] & 0xFFFFFFFC<32> | 2<i32>
	Mem182[a3_77 + 140<i32>:word32] = a5_181
	Mem187[(a5_181 & 0xFFF0FFFF<32> | 0xC0000<32>) + 48<i32>:word32] = Mem182[a5_181 + 48<i32>:word32]
	word32 a3_191 = rf_pri_set_gain_table_regs()
	Mem203[0x4000E404<32>:word32] = Mem187[0x4000E404<32>:int32] | 0x10000000<32>
	Mem206[0x4000E41C<32>:word32] = Mem203[0x4000E41C<32>:int32] | 255<i32>
	branch s0_207 != 0<32> l23018DB6
l23018DB6:
	0<32> = dwArg38
l23018DC0_thunk_rf_pri_full_cal:
	word32 fflags_227
	word32 frm_228
	word32 s1_230
	word32 s2_233
	word32 ra_229 = rf_pri_full_cal(s6, fflags, frm, dwArg00, dwArg04, dwArg08, dwArg1C, dwArg28, dwArg30, dwArg34, dwArg4C, dwArg50, dwArg54, dwArg58, dwArg78, dwArg7C, dwArg88, dwArg9C, dwArgB8, dwArgE8, dwArg0118, out s1_230, out s2_233, out fflags_227, out frm_228)
	s0Out = s0
	s1Out = s1_230
	s2Out = s2_233
	fflagsOut = fflags_227
	frmOut = frm_228
	return ra_229
l23018DA8:
	0<32> = dwArg38
l23018DB2_thunk_rf_pri_restore_cal_reg:
	word32 s1_262
	word32 s2_263
	s0Out = rf_pri_restore_cal_reg(a3_191, out s1_262, out s2_263)
	s1Out = s1_262
	s2Out = s2_263
	fflagsOut = fflags
	frmOut = frm
	return ra
rf_pri_init_exit:


void rf_pri_update_power_offset(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tpc_update_power_table
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6
// Preserved: sp
rf_pri_update_power_offset_entry:
l23018DC4:
	word32 a5_10 = 0<32>
l23018DDA:
	word32 a2_13 = Mem12[a0 + a5_10:word32]
	Mem16[a5_10 + 0x42011B3C<32>:word32] = a2_13
	Mem19[a5_10 + 0x42011B04<32>:word32] = a2_13
	a5_10 = a5_10 + 4<32>
	branch a5_10 != 56<i32> l23018DDA
l23018DF6:
	return
rf_pri_update_power_offset_exit:


word32 phyif_utils_decode(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_frame_check
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a1 fflags frm ra s2 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa5 fflags frm ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: s0 sp
phyif_utils_decode_entry:
l23018DF8:
	word32 a0_59
	word32 a4_9 = CONVERT(Mem7[a0 + 6<i32>:uint16], uint16, word32)
	word32 s0_12 = a1
	word32 a5_14 = CONVERT(Mem7[a0 + 19<i32>:byte], byte, word32)
	branch (a4_9 & 7<32>) <=u 1<32> l23018E3A
l23018E3A:
	a0 = Mem7[a4_9 & 7<32>:word32]
	branch ((a4_9 & 7<32>) >>u 12<i32> & 0xF<32>) >u 3<32> l23018E10
l23018E46:
	word32 a1_23
	word32 a0_31
	word32 a1_32
	word32 s9_177
	word32 s8_176
	word32 s7_175
	word32 s4_174
	word32 s3_173
	word32 a7_172
	word32 a5_171
	word32 a4_170
	word32 s1_169
	ra = __muldf3(ra, __floatsidf(0<32> - CONVERT(SLICE(a5_14, byte, 0), byte, int32), out a1_23), a1_23, Mem7[0x23076790<32>:int32], Mem7[0x23076794<32>:int32], fflags, frm, out s0_12, out s1_169, out a0_31, out a1_32, out a4_170, out a5_171, out a7_172, out s2, out s3_173, out s4_174, out s5, out s6, out s7_175, out s8_176, out s9_177, out fflags, out frm)
	word32 a5_180
	word32 a4_179
	word32 a3_178
	a0_59 = __fixdfsi(ra, a0_31, a1_32, fflags, frm, out a1, out a3_178, out a4_179, out a5_180)
l23018E10:
	a0_59 = CONVERT(SLICE(CONVERT(Mem7[a0 + 20<i32>:byte], byte, word32) << 8<i32> | a5_14, word16, 0), word16, int32) ^ 122<i32>
l23018E24:
	Mem85[s0_12:byte] = SLICE(CONVERT(CONVERT(a0_59, word32, real32), real32, int32), byte, 0)
	a1Out = a1
	s2Out = s2
	s5Out = s5
	s6Out = s6
	fflagsOut = fflags
	frmOut = frm
	return ra
phyif_utils_decode_exit:


void sysctrl_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse: 
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
sysctrl_init_entry:
l23018E6A:
	Mem6[0x80000074<32>:word32] = 0x44900000<32>
	Mem11[0x449000E0<32>:word32] = Mem6[0x449000E0<32>:int32] | 0x1FF00<32>
	return
sysctrl_init_exit:


void intc_spurious()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
intc_spurious_exit:
intc_spurious_entry:
l23018E8A:
l23018E9E_thunk_assert_err:
	assert_err()


void intc_enable_irq(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      intc_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
intc_enable_irq_entry:
l23018EA2:
	Mem11[1<32> << a0:word32] = (a0 >> 5<i32>) + 0x11244004<32> << 2<i32>
	return
intc_enable_irq_exit:


void intc_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse: 
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: sp
intc_init_entry:
l23018EB8:
	intc_enable_irq(63<i32>)
	intc_enable_irq(62<i32>)
	intc_enable_irq(61<i32>)
	intc_enable_irq(0x18<32>)
	intc_enable_irq(0x19<32>)
	intc_enable_irq(0x1A<32>)
	intc_enable_irq(0x1B<32>)
	intc_enable_irq(0x1C<32>)
	intc_enable_irq(0x1D<32>)
	intc_enable_irq(0x1E<32>)
	intc_enable_irq(0x1F<32>)
	intc_enable_irq(32<i32>)
	intc_enable_irq(33<i32>)
	intc_enable_irq(35<i32>)
	intc_enable_irq(55<i32>)
	intc_enable_irq(53<i32>)
	intc_enable_irq(50<i32>)
	intc_enable_irq(52<i32>)
	intc_enable_irq(54<i32>)
	intc_enable_irq(0xA<32>)
l23018F50_thunk_intc_enable_irq:
	intc_enable_irq(0xB<32>)
	return
intc_init_exit:


void mac_irq(word32 ra, word32 s0, word32 a4, word32 mstatus, word32 dwArg10, word32 dwArg18, word32 dwArg38, word32 dwArgC4, word32 dwArgE0, word32 dwArgE4, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +00C4:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mac_irq_entry:
l23018F54:
	word32 a5_5 = Mem0[a4:word32]
	branch a4 != 0<32> l23018F60
l23018F5C:
	branch Mem0[a5_5 + 4<i32>:word32] == 0<32> l23018FA2
l23018FA2:
	return
l23018F60:
	word32 a5_16 = Mem14[0x44910040<32>:word32]
	branch s0 != 0<32> l23018F96
l23018F96:
	word32 a3_58
	word32 ra_30
	word32 a1_31
	word32 a0_32
	word32 s1_59
	word32 s2_60
	word32 s3_61
	word32 s4_62
	word32 s8_63
	word32 t3_64
	word32 tp_65
	call s0 (retsize: 0;)
		uses: a0:a0_32,a1:a1_31,a2:dwArg10,a3:a3_58,a4:a5_16 << 2<u32>,mstatus:mstatus,ra:ra,s0:s0,s1:s1_59,s2:s2_60,s3:s3_61,s4:s4_62,s8:s8_63,t3:t3_64,tp:tp_65
		defs: a0:a0_32,a1:a1_31,a3:a3_58,ra:ra_30,s1:s1_59,s2:s2_60,s3:s3_61,s4:s4_62,s8:s8_63,t3:t3_64,tp:tp_65
l23018F9E_thunk_ipc_emb_notify:
	ipc_emb_notify(ra_30, a0_32, mstatus, dwArg18, dwArg38, dwArgC4, dwArgE0, dwArgE4, dwArg0108)
	return
mac_irq_exit:
l23018F7E:
	assert_err()


void bl_irq_handler(word32 ra, word32 mstatus, word32 dwArg18, word32 dwArg38, word32 dwArgC4, word32 dwArgE0, word32 dwArgE4, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_output
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +00C4:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bl_irq_handler_entry:
l23018FA4:
	word32 a5_38
	ke_evt_set(0x40000000<32>, ipc_host_disable_irq_e2a(), mstatus, out a5_38)
l23018FB8_thunk_ipc_emb_notify:
	ipc_emb_notify(ra, 0x40000000<32>, mstatus, dwArg18, dwArg38, dwArgC4, dwArgE0, dwArgE4, dwArg0108)
	return
bl_irq_handler_exit:


word32 blmac_pwr_mgt_setf(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_goto_idle_cb
//      chan_tx_cfm
//      chan_ctxt_op_evt
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a5
// Preserved: s0 sp
blmac_pwr_mgt_setf_entry:
l23018FBC:
	branch (a0 << 2<u32> & -5<i32>) == 0<32> l23018FE6
l23018FE6:
	word32 a5_17 = Mem9[a0 + 76<i32>:word32]
	word32 a0_19 = a0 & 0xFFFFFFFB<32> | a0 << 2<u32>
	Mem20[a0_19 + 76<i32>:word32] = a5_17
	a5Out = a5_17
	return a0_19
blmac_pwr_mgt_setf_exit:
l23018FCC:
	assert_err()


word32 chan_get_next_chan(word32 s0, word32 s1, word32 a4, word32 dwArg38, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_cde_evt
//      chan_ctxt_op_evt
//      chan_bcn_to_evt
// MayUse:  a4:[0..31] s0:[0..31] s1:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2
// Trashed: a0 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
chan_get_next_chan_entry:
l23018FFA:
	word32 a5_15 = 0x44B00000<32>
	word32 s2_16 = Mem12[0x44B00120<32>:int32]
	word32 a3_159 = 0x4201D1D8<32>
	branch s0 == 0<32> l23019044
l2301901E:
	branch s1 == 0<32> l2301902A
l23019020:
	a4 = CONVERT(Mem12[s1 + 10<i32>:byte], byte, word32)
	a5_15 = 2<32>
	branch a4 == 2<32> l2301910E
l2301902A:
	a3_159 = Mem12[a5_15 + 68<i32>:word32]
	a4 = s2_16 + 0x1000400<32> - a5_15
	branch a4 >= 0<32> l2301910E
l2301903A:
	a4 = CONVERT(Mem12[s0 + 22<i32>:byte], byte, word32)
	a5_15 = 4<32>
	branch a4 == 4<32> l2301910E
l23019044:
	branch s1 == 0<32> l230190B6
l23019046:
	s1 = Mem12[a5_15 + 4<i32>:word32]
	branch a5_15 - a4 >= 0<32> l230190B6
l23019050:
	word32 a5_40 = CONVERT(Mem12[s1 + 8<i32>:byte], byte, word32)
	a3_159 = 1496<i32>
	a5_15 = a5_40 + 1496<i32>
	branch s0 != 0<32> l23019082
l23019082:
	s1 = Mem12[a5_40 + 1500<i32>:word32]
	a4 = s2_16 + 0x1000400<32> - (a5_40 + 1496<i32>)
	branch a4 >= 0<32> l230190F4
l23019092:
	a4 = CONVERT(Mem12[s0 + 18<i32>:uint16], uint16, word32)
	word32 a2_59 = CONVERT(Mem12[s0 + 20<i32>:uint16], uint16, word32)
	a3_159 = 0<32>
	branch a2_59 >=u a4 l230190A8
l230190A0:
	a4 = a4 - a2_59
	a3_159 = CONVERT(SLICE(a4, word16, 0), word16, word32)
l230190A8:
	word32 a5_68 = a5_40 + 1496<i32> - s2_16 >>u 10<i32> << 16<i32>
	a5_15 = a5_68 >>u 16<i32>
	branch a3_159 >=u a5_68 >>u 16<i32> l2301910E
l230190B6:
	a5_15 = 0x4201D14C<32>
	a4 = 0<32>
	branch CONVERT(Mem12[0x4201D162<32>:byte], byte, word32) == 0<32> l230190CE
l230190C6:
	a4 = CONVERT(Mem12[0x4201D15E<32>:uint16], uint16, word32)
	s0 = 0x4201D14C<32>
l230190CE:
	branch CONVERT(Mem12[0x4201D17E<32>:byte], byte, word32) == 0<32> l230190E6
l230190D4:
	word32 a3_82 = CONVERT(Mem12[0x4201D17A<32>:uint16], uint16, word32)
	branch a3_82 <u a4 l230190E6
l230190DC:
	a4 = a3_82
	s0 = 0x4201D168<32>
l230190E6:
	a3_159 = CONVERT(Mem12[0x4201D19A<32>:byte], byte, word32)
	branch a3_159 == 0<32> l230190F4
l230190EC:
	a5_15 = CONVERT(Mem12[0x4201D196<32>:uint16], uint16, word32)
	branch a5_15 >=u a4 l2301911C
l2301911C:
	s0 = 0x4201D184<32>
l230190F4:
	branch s0 != 0<32> l2301910E
l2301910E:
	0<32> = dwArg38
	a0Out = s0
	a3Out = a3_159
	a4Out = a4
	a5Out = a5_15
	s2Out = s2_16
	return s1
chan_get_next_chan_exit:
l230190F6:
	assert_err()
l2301906A:
	assert_err()


word32 chan_conn_less_delay_prog(word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_ctxt_op_evt
//      chan_scan_req
//      chan_roc_req
// MayUse:  mstatus:[0..31]
// LiveOut: a0 a1 a4 s0
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
chan_conn_less_delay_prog_entry:
l23019126:
	word32 a4_6 = CONVERT(Mem0[0x4201D248<32>:byte], byte, word32)
	Mem10[0x4201D248<32>:byte] = SLICE(a4_6 | 16<i32>, byte, 0)
	word32 a1_12 = Mem10[0x44B00120<32>:int32]
l23019152_thunk_mm_timer_set:
	word32 a0_17
	word32 a1_18
	word32 a4_29
	word32 s1_33
	word32 a2_34
	word32 a5_35
	word32 s2_36
	word32 s3_37
	word32 s4_38
	word32 s8_39
	word32 s0_22 = mm_timer_set(0x4201D230<32>, a1_12 + 0x7000530<32>, a4_6 | 16<i32>, mstatus, out s1_33, out a0_17, out a1_18, out a2_34, out a4_29, out a5_35, out s2_36, out s3_37, out s4_38, out s8_39)
	a0Out = a0_17
	a1Out = a1_18
	a4Out = a4_29
	return s0_22
chan_conn_less_delay_prog_exit:


word32 chan_upd_nb_rem_slots.isra.3(word32 a0, word32 a1, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tbtt_schedule
//      chan_ctxt_op_evt
//      chan_bcn_to_evt
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a1 a4 a5
// Trashed: a1 a4 a5
// Preserved: sp
chan_upd_nb_rem_slots.isra.3_entry:
l23019156:
	word32 a5_5 = Mem0[0x4201D244<32>:int32]
	word32 a1_11 = a1 - a5_5 >>u 10<i32> << 16<i32>
	word32 a4_7 = CONVERT(Mem0[a0:uint16], uint16, word32)
	word32 a1_12 = a1_11 >>u 16<i32>
	branch a4_7 >=u a1_11 >>u 16<i32> l23019170
l2301916E:
	a1_12 = a4_7
l23019170:
	word32 a1_16 = a4_7 - a1_12
	Mem18[a0:word16] = SLICE(a1_16, word16, 0)
	a4Out = a4_7
	a5Out = a5_5
	return a1_16
chan_upd_nb_rem_slots.isra.3_exit:


word32 chan_tbtt_detect_conflict.isra.8(word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tbtt_insert
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
chan_tbtt_detect_conflict.isra.8_entry:
l2301917A:
	word32 a0_11
	word32 a4_5 = a0 - a1
	branch a4_5 < 0<32> l23019194
l23019184:
	a5 = a1 + 0x2FFF800<32> - a0
	a0_11 = 1<32>
	branch a5 >= 0<32> l230191AA
l23019194:
	a1 = a1 - a0
	a0_11 = 0<32>
	branch a1 < 0<32> l230191AA
l2301919C:
	a0_11 = ~(a4_5 + 0x2FFF800<32>) >>u 31<i32>
l230191AA:
	a1Out = a1
	a3Out = a0
	a4Out = a4_5
	a5Out = a5
	return a0_11
chan_tbtt_detect_conflict.isra.8_exit:


word32 chan_tbtt_insert(word32 a0, word32 a3, word32 a4, word32 dwArg0138, word32 dwArg0198, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tbtt_schedule
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a4 a5 s1 s10 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t3 tp
// Preserved: a3 s8 sp
chan_tbtt_insert_entry:
l230191AC:
	word32 a5_126 = 0x4201D000<32>
	word32 s2_40 = Mem6[0x4201D1E8<32>:int32]
	word32 s6_182 = 0<32>
	word32 s0_140 = 0<32>
	word32 s1_136 = 0<32>
	a0_132 = a0
l230191E2:
	word32 s2_142
	word32 a0_132
	branch s2_40 != 0<32> l23019204
l23019204:
	branch s2_40 != a0 l23019218
l23019218:
	a5_126 = CONVERT(Mem31[s2_40 + 10<i32>:byte], byte, word32)
	word32 s4_49 = Mem31[a0 + 4<i32>:int32]
	word32 s5_50 = Mem31[s2_40 + 4<i32>:int32]
	branch a5_126 == 2<32> l23019256
l23019256:
	branch s4_49 <u s5_50 l23019264
l2301925A:
	a0_132 = chan_tbtt_detect_conflict.isra.8(s4_49, s5_50, out a1, out a3, out a4, out a5_126)
	branch a0_132 == 0<32> l23019252
l23019228:
	a0_132 = chan_tbtt_detect_conflict.isra.8(s4_49, s5_50, out a1, out a3, out a4, out a5_126)
	branch a0_132 == 0<32> l2301924E
l2301924E:
	branch s4_49 <u s5_50 l230191E6
l23019252:
	s6_182 = s2_40
l23019232:
	a4 = CONVERT(Mem31[a0 + 9<i32>:byte], byte, word32)
	a5_126 = CONVERT(Mem31[s2_40 + 9<i32>:byte], byte, word32)
	branch a5_126 >=u a4 l23019264
l23019264:
	s0_140 = a0
	s1_136 = 1<32>
	s2_142 = 0<32>
l2301923E:
	branch s0_140 != 0<32> l23019242
l23019240:
	s0_140 = s2_40
l23019242:
	s1_136 = s1_136 + 1<32> & 255<i32>
l23019248:
	s2_40 = Mem31[s2_40:int32]
l23019208:
	assert_err()
l230191E6:
	s2_142 = 1<32>
l230191E8:
l230192AC:
	word32 s1_95 = s1_136 + 0xFFFFFFFF<32>
	branch (s1_95 & 255<i32>) != 255<i32> l2301926C
l2301926C:
	branch s0_140 != 0<32> l2301927E
l2301927E:
	branch s0_140 == a0 l230192A0
l23019282:
	word32 a5_106 = CONVERT(Mem105[s0_140 + 10<i32>:byte], byte, word32)
	branch a5_106 != 1<32> l23019296
l2301928A:
	word32 a2_472
	mm_timer_clear(0x4201D200<32>, a4, out a2_472, out a5_106)
	Mem115[s0_140 + 10<i32>:byte] = 0<8>
l23019296:
	co_list_extract(0x4201D1E8<32>, s0_140, a4, a5_106, out a5_126)
l230192A0:
	s1_136 = co_list_push_back(s0_140, a5_126)
	a1 = s0_140
	a0_132 = 0x4201D1F0<32>
	s0_140 = Mem138[s0_140:word32]
l2301926E:
	assert_err()
l230192B6:
	branch s2_142 == 0<32> l230192E6
l230192E6:
	0<32> = dwArg0198
	a0Out = a0_132
	a1Out = a1
	a4Out = a4
	a5Out = a5_126
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s9Out = <invalid>
	s10Out = <invalid>
	return s1_95 & 255<i32>
l230192BA:
	0<32> = dwArg0198
l230192E2_thunk_co_list_insert_after:
	word32 a0_204
	word32 a4_206
	word32 a5_207
	word32 a1_208
	word32 s1_209 = co_list_insert_after(0x4201D1E8<32>, s6_182, dwArg0138, a3, a5_126, out a0_204, out a1_208, out a4_206, out a5_207)
	a0Out = a0_204
	a1Out = a1_208
	a4Out = a4_206
	a5Out = a5_207
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s9Out = <invalid>
	s10Out = <invalid>
	return s1_209
chan_tbtt_insert_exit:


word32 chan_upd_ctxt_status(word32 a0, word32 a1, word32 mstatus, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_switch_start
//      chan_cde_evt
//      chan_goto_idle_cb
//      chan_tx_cfm
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31]
// LiveOut: a1 a2 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
chan_upd_ctxt_status_entry:
l23019304:
	word32 a5_27
	word32 a5_13
	word32 a3_5 = Mem0[0x44B00120<32>:int32]
	word32 a4_17 = 2<32>
	branch a1 != 2<32> l2301933C
l2301933C:
	a2 = 4<32>
	a5_27 = 0<32>
	branch a1 != 4<32> l23019324
l23019344:
	a2 = CONVERT(Mem0[a0 + 23<i32>:byte], byte, word32)
	branch a2 >u 2<32> l2301937E
l2301937E:
	a5_13 = CONVERT(Mem0[a0 + 18<i32>:uint16], uint16, word32) << 10<i32>
l2301934C:
	a2 = 0x4201D1D8<32>
	a4_17 = 1<32>
	branch CONVERT(Mem0[0x4201D24A<32>:byte], byte, word32) <=u 1<32> l23019386
l2301935E:
	a4_17 = CONVERT(Mem0[a0 + 18<i32>:uint16], uint16, word32)
	word32 a6_19 = CONVERT(Mem0[a0 + 20<i32>:uint16], uint16, word32)
	branch a6_19 >=u a4_17 l23019386
l2301936A:
	a4_17 = CONVERT(SLICE(a4_17 - a6_19, word16, 0), word16, word32)
	branch a1 >=u a4_17 l23019386
l23019386:
	a1 = 5<32>
l23019376:
	Mem24[a3_5 + 108<i32>:word32] = 0x4201D1D8<32>
	a5_13 = a4_17 << 0xA<u32>
l23019312:
	a4_17 = CONVERT(Mem0[a0 + 23<i32>:byte], byte, word32)
	a5_27 = 0<32>
	branch a1 <u a4_17 l23019324
l2301931C:
	a5_13 = 0xFFFFA0<32>
l23019322:
	a5_27 = a5_13 + a3_5
l23019324:
	Mem38[a0 + 22<i32>:byte] = SLICE(a1, byte, 0)
	branch a5_27 != 0<32> l2301938A
l2301938A:
	Mem42[0x4201D228<32>:word32] = a0
l2301939C_thunk_mm_timer_set:
	word32 a1_51
	word32 a2_52
	word32 a5_53
	word32 s1_56
	word32 s2_57
	word32 s3_58
	word32 s4_59
	word32 a4_62
	word32 s8_139
	word32 a0_138
	word32 s0_55 = mm_timer_set(0x4201D220<32>, a5_27, 0x4201D000<32>, mstatus, out s1_56, out a0_138, out a1_51, out a2_52, out a4_62, out a5_53, out s2_57, out s3_58, out s4_59, out s8_139)
	s1Out = s1_56
	a1Out = a1_51
	a2Out = a2_52
	a3Out = <invalid>
	a4Out = a4_62
	a5Out = a5_53
	s2Out = s2_57
	s3Out = s3_58
	s4Out = s4_59
	return s0_55
l2301932A:
	branch a1 == 3<32> l230193A0
l230193A0:
	s1Out = s1
	a1Out = a1
	a2Out = a2
	a3Out = <invalid>
	a4Out = a4_17
	a5Out = 3<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s0
l23019330:
l23019338_thunk_mm_timer_clear:
	word32 a2_71
	word32 a5_72
	word32 a1_70 = mm_timer_clear(0x4201D220<32>, a4_17, out a2_71, out a5_72)
	s1Out = s1
	a1Out = a1_70
	a2Out = a2_71
	a3Out = <invalid>
	a4Out = a4_17
	a5Out = a5_72
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s0
chan_upd_ctxt_status_exit:


word32 chan_switch_start(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg08, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_conn_less_delay_evt
//      chan_tbtt_schedule
//      chan_cde_evt
//      chan_ctxt_op_evt
//      chan_roc_req
//      chan_bcn_to_evt
//      chan_ctxt_link
//      chan_ctxt_unlink
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31]
// LiveOut: a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
chan_switch_start_entry:
l230193A2:
	word32 a5_107
	word32 a5_6 = Mem0[a3 + 32<i32>:word32]
	branch a3 != a0 l230193CA
l230193CA:
	a5_107 = Mem0[a3 + 36<i32>:word32]
	branch a3 != 0<32> l230193FC
l230193CE:
	Mem13[a0 + 36<i32>:word32] = a5_107
	word32 a4_19
	word32 s3_161
	word32 s2_160
	word32 a5_159
	word32 a3_158
	word32 a2_157
	word32 a1_156
	word32 s1_155
	word32 s4_162
	chan_upd_ctxt_status(a0, 2<32>, mstatus, out s1_155, out a1_156, out a2_157, out a3_158, out a4_19, out a5_159, out s2_160, out s3_161, out s4_162)
	word32 a0_33
	word32 s0_163
	word32 s1_164
	word32 a1_165
	word32 a2_166
	word32 a3_167
	word32 a4_168
	word32 a5_169
	word32 a6_170
	word32 s2_171
	word32 s3_172
	word32 s4_173
	word32 s8_174
	word32 ra_40 = ke_msg_alloc(ra, 96<i32>, 0<32>, 4<32>, a4_19, mstatus, dwArg08, out s0_163, out s1_164, out a0_33, out a1_165, out a2_166, out a3_167, out a4_168, out a5_169, out a6_170, out s2_171, out s3_172, out s4_173, out s8_174)
	Mem53[0x230199EC<32>:word32] = a0_33
l230193F8_thunk_ke_msg_send:
	word32 a2_57
	word32 a3_58
	word32 a4_59
	word32 a5_60
	word32 s1_63
	word32 s2_64
	word32 s3_65
	word32 s4_66
	word32 a1_70
	word32 a0_175
	word32 s8_176
	s0Out = ke_msg_send(a0_33, mstatus, out s1_63, out a0_175, out a1_70, out a2_57, out a3_58, out a4_59, out a5_60, out s2_64, out s3_65, out s4_66, out s8_176)
	s1Out = s1_63
	a1Out = a1_70
	a2Out = a2_57
	a3Out = a3_58
	a4Out = a4_59
	a5Out = a5_60
	s2Out = s2_64
	s3Out = s3_65
	s4Out = s4_66
	return ra_40
l230193B0:
	a4 = CONVERT(Mem0[a5_6 + 114<i32>:byte], byte, word32)
	a5_107 = 1<32>
	branch a4 <=u 1<32> l230193FC
l230193BA:
	a4 = CONVERT(Mem0[a3 + 23<i32>:byte], byte, word32)
	a5_107 = 2<32>
	branch a4 >u 2<32> l230193FC
l230193FC:
	s0Out = s0
	s1Out = s1
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_107
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return ra
l230193C4:
l230193C6_thunk_chan_upd_ctxt_status:
	word32 a1_77
	word32 a2_78
	word32 a3_79
	word32 a4_80
	word32 a5_81
	word32 s1_84
	word32 s2_85
	word32 s3_86
	word32 s4_87
	s0Out = chan_upd_ctxt_status(a0, 4<32>, mstatus, out s1_84, out a1_77, out a2_78, out a3_79, out a4_80, out a5_81, out s2_85, out s3_86, out s4_87)
	s1Out = s1_84
	a1Out = a1_77
	a2Out = a2_78
	a3Out = a3_79
	a4Out = a4_80
	a5Out = a5_81
	s2Out = s2_85
	s3Out = s3_86
	s4Out = s4_87
	return ra
chan_switch_start_exit:


void chan_conn_less_delay_evt(word32 ra, word32 a3, word32 mstatus, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
chan_conn_less_delay_evt_entry:
l230193FE:
	word32 a0_22
	word32 a5_24
	word32 a5_10 = CONVERT(Mem9[0x4201D248<32>:byte], byte, word32)
	branch (a5_10 & 1<i32>) == 0<32> l2301945A
l2301945A:
	branch (a5_10 & 2<i32>) == 0<32> l23019494
l23019460:
	branch (a5_10 & 8<32>) == 0<32> l2301947C
l2301947C:
	a5_24 = CONVERT(Mem9[0x4201D248<32>:byte], byte, word32) & 0xFFFFFFFD<32> | 8<i32>
	Mem25[0x4201D248<32>:byte] = SLICE(a5_24, byte, 0)
	a0_22 = 0x4201D1A0<32>
l23019464:
	assert_err()
l2301941A:
	branch (a5_10 & 4<32>) == 0<32> l23019436
l23019436:
	a5_24 = CONVERT(Mem9[0x4201D248<32>:byte], byte, word32) & 0xFFFFFFFE<32> | 4<i32>
	Mem37[0x4201D248<32>:byte] = SLICE(a5_24, byte, 0)
	a0_22 = 0x4201D1BC<32>
l2301944C:
	branch a5_24 != 0<32> l23019494
l23019494:
	return
l23019450:
l23019456_thunk_chan_switch_start:
	word32 s3_150
	word32 s4_151
	word32 a5_148
	word32 s2_149
	word32 a3_146
	word32 a4_147
	word32 a1_144
	word32 a2_145
	word32 s0_142
	word32 s1_143
	chan_switch_start(ra, a0_22, a3, mstatus, dwArg08, out s0_142, out s1_143, out a1_144, out a2_145, out a3_146, out a4_147, out a5_148, out s2_149, out s3_150, out s4_151)
	return
chan_conn_less_delay_evt_exit:
l2301941E:
	assert_err()


word32 chan_tbtt_switch_evt(word32 ra, word32 a0, word32 mstatus, word32 dwArg08, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tbtt_schedule
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31]
// LiveOut: a1 a2 a3 a4 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
chan_tbtt_switch_evt_entry:
l2301949C:
	word32 s0_147 = 0x4201D000<32>
	word32 s3_16 = Mem13[0x44B00120<32>:int32]
	word32 a4_140 = CONVERT(Mem13[0x4201D24A<32>:byte], byte, word32)
	branch a4_140 <=u 1<32> l23019534
l230194C2:
	s0_147 = 0x4201D1D8<32>
	branch (CONVERT(Mem13[0x4201D248<32>:byte], byte, word32) & 0xC<32>) != 0<32> l23019534
l230194CE:
	word32 a4_24 = CONVERT(Mem13[a0 + 8<i32>:byte], byte, word32)
	a3 = 1496<i32>
	a4_140 = a4_24 + 1496<i32>
	s2 = Mem13[a4_24 + 0x4201AA28<32>:int32]
	s0_147 = Mem13[a4_24 + 0x4201AA0C<32>:word32]
	branch a4_24 == 0x4201A9E8<32> l230194F0
l230194EC:
	branch a4_24 + 0x4201A9E8<32> != s2 l23019534
l230194F0:
	Mem33[a0 + 9<i32>:byte] = 0<8>
	word32 s0_35 = Mem33[a0 + 32<i32>:word32]
	word32 a5_183
	word32 a4_182
	a1 = chan_upd_nb_rem_slots.isra.3(a0 + 0x12<32>, s3_16, out a4_182, out a5_183)
	word32 a5_43 = CONVERT(Mem33[s2 + 20<i32>:uint16], uint16, word32)
	s1 = a0
	a3 = 0xA<32>
	a4_140 = a5_43
	branch a5_43 <=u 0xA<32> l2301950E
l2301950C:
	a4_140 = 0xA<32>
l2301950E:
	Mem51[s2 + 20<i32>:word16] = SLICE(a5_43 - a4_140, word16, 0)
	Mem54[s0_35 + 108<i32>:word32] = s3_16
	Mem57[a0 + 10<i32>:byte] = 2<8>
	s0_147 = Mem57[0x26<32>:word32]
	branch true l23019534
l23019534:
	s0Out = s0_147
	s1Out = s1
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4_140
	s2Out = s2
	s3Out = s3_16
	s4Out = dwArg04
	return ra
l23019522:
l23019530_thunk_chan_switch_start:
	word32 a1_84
	word32 a2_85
	word32 a3_86
	word32 a4_87
	word32 s0_90
	word32 s1_91
	word32 s2_92
	word32 s3_93
	word32 s4_94
	word32 a5_184
	word32 ra_89 = chan_switch_start(ra, s2, 0xA<32>, mstatus, dwArg08, out s0_90, out s1_91, out a1_84, out a2_85, out a3_86, out a4_87, out a5_184, out s2_92, out s3_93, out s4_94)
	s0Out = s0_90
	s1Out = s1_91
	a1Out = a1_84
	a2Out = a2_85
	a3Out = a3_86
	a4Out = a4_87
	s2Out = s2_92
	s3Out = s3_93
	s4Out = s4_94
	return ra_89
chan_tbtt_switch_evt_exit:


word32 chan_tbtt_schedule(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArgA8, word32 dwArg0118, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tbtt_switch_update
//      chan_bcn_to_evt
//      chan_ctxt_unlink
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0178:[0..31]
// LiveOut: a1 a2 a3 a4 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: sp
chan_tbtt_schedule_entry:
l23019542:
	word32 s1_100
	s1_100 = s1
	branch a0 != 0<32> l23019576
l23019576:
	s3 = 0x4201D000<32>
	word32 s10_34
	word32 s2_36
	word32 s7_41
	word32 s9_42
	word32 s3_353
	word32 s4_354
	word32 s5_355
	word32 s6_356
	word32 a5_30
	s1_100 = chan_tbtt_insert(a0, a3, a4, dwArg0118, dwArg0178, out a0, out a1, out a4, out a5_30, out s2_36, out s3_353, out s4_354, out s5_355, out s6_356, out s7_41, out s9_42, out s10_34) + 1040<i32>
	word32 s4_105 = 1496<i32>
	s2 = s2_36 + -224<i32>
	word32 s5_106 = 432<i32>
	word32 s6_107 = 4<32>
l23019598:
	branch a5_30 == 0<32> l2301955E
l2301959C:
	word32 a5_67
	word32 a5_357
	word32 a5_64 = CONVERT(Mem53[co_list_pop_front(a4, a5_30, out a5_357) + 8<i32>:byte], byte, word32) + s4_105 + s1_100
	word32 a4_65 = CONVERT(Mem53[a5_64 + 86<i32>:byte], byte, word32)
	branch a4_65 != 0<32> l230195DA
l230195DA:
	a5_67 = CONVERT(Mem53[a5_64 + 830<i32>:uint16], uint16, word32) << 10<i32>
l230195B4:
	a5_67 = Mem53[CONVERT(Mem53[a5_64 + 96<i32>:byte], byte, word32) + s5_106 + s2 + 4<i32>:word32]
l230195C0:
	word32 a0_76 = Mem53[a4_65 + 4<i32>:word32]
	Mem79[a5_67 + a4_65 + 4<i32>:word32] = a0_76
	word32 a5_80 = CONVERT(Mem79[a0_76 + 9<i32>:byte], byte, word32)
	branch s6_107 <u a5_80 l230195D4
l230195CE:
	Mem84[a0_76 + 9<i32>:byte] = SLICE(a5_80 + 1<32>, byte, 0)
l230195D4:
	word32 s10_101
	word32 s7_108
	word32 s9_109
	s1_100 = chan_tbtt_insert(a0_76, a3, a4_65, dwArg0118, dwArg0178, out a0, out a1, out a4, out a5_30, out s2, out s3, out s4_105, out s5_106, out s6_107, out s7_108, out s9_109, out s10_101)
l2301955E:
	word32 s0_116 = Mem115[a0 + 16<i32>:word32]
	branch a0 != 0<32> l230195E2
l230195E2:
	branch CONVERT(Mem115[a0 + 10<i32>:byte], byte, word32) != 0<32> l23019562
l230195E8:
	word32 a4_119 = Mem115[0x44B00120<32>:int32]
	word32 a0_120 = Mem115[0x44B00004<32>:word32]
	branch 0x44B00000<32> - a4_119 >= 0xFFFFF830<32> l23019612
l23019612:
	Mem123[a0_120 + 48<i32>:word32] = s0_116
	Mem125[a0_120 + 10<i32>:byte] = 1<8>
	0<32> = dwArgA8
l23019636_thunk_mm_timer_set:
	word32 a1_147
	word32 a2_148
	word32 s1_152
	word32 s2_153
	word32 s3_154
	word32 s4_155
	word32 a4_158
	word32 a0_358
	word32 a5_359
	word32 s8_360
	s0Out = mm_timer_set(0x4201D200<32>, a1, a4_119, mstatus, out s1_152, out a0_358, out a1_147, out a2_148, out a4_158, out a5_359, out s2_153, out s3_154, out s4_155, out s8_360)
	s1Out = s1_152
	a1Out = a1_147
	a2Out = a2_148
	a3Out = a3
	a4Out = a4_158
	s2Out = s2_153
	s3Out = s3_154
	s4Out = s4_155
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s9Out = <invalid>
	s10Out = <invalid>
	return ra
l230195FC:
	0<32> = dwArgA8
l2301960E_thunk_chan_tbtt_switch_evt:
	word32 a2_171
	word32 a4_172
	word32 s0_175
	word32 s3_176
	word32 s4_177
	word32 a1_181
	word32 a3_182
	word32 s1_183
	word32 s2_184
	word32 ra_185 = chan_tbtt_switch_evt(ra, a0_120, mstatus, dwArg08, out s0_175, out s1_183, out a1_181, out a2_171, out a3_182, out a4_172, out s2_184, out s3_176, out s4_177)
	s0Out = s0_175
	s1Out = s1_183
	a1Out = a1_181
	a2Out = a2_171
	a3Out = a3_182
	a4Out = a4_172
	s2Out = s2_184
	s3Out = s3_176
	s4Out = s4_177
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s9Out = <invalid>
	s10Out = <invalid>
	return ra_185
l23019562:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_100
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s9Out = <invalid>
	s10Out = <invalid>
	return ra
chan_tbtt_schedule_exit:


word32 chan_cde_evt(word32 ra, word32 mstatus, word32 dwArg08, word32 dwArg18, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_tx_cfm
//      chan_ctxt_op_evt
//      chan_ctxt_link
//      chan_ctxt_unlink
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31]
// LiveOut: a1 a3 a4 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
chan_cde_evt_entry:
l2301963A:
	word32 s1_260
	word32 s2_17 = 0x4201D000<32>
	word32 s3_18 = Mem15[0x44B00120<32>:int32]
	word32 a4_20 = CONVERT(Mem15[0x4201D24A<32>:byte], byte, word32)
	s1_260 = s1
	branch a4_20 <=u 1<32> l230197E8
l23019662:
	s2_17 = 0x4201D1D8<32>
	s1_260 = s1
	branch (CONVERT(Mem15[0x4201D248<32>:byte], byte, word32) & 44<i32>) != 0<32> l230197E8
l23019672:
	word32 a2_34
	word32 s2_39
	word32 s3_40
	word32 a5_561
	word32 a4_560
	word32 s8_563
	word32 s4_562
	word32 a0_558
	word32 a1_559
	word32 s1_216
	word32 s0_312 = mm_timer_set(0x4201D210<32>, Mem15[0x4201D240<32>:int32] + s3_18, a4_20, mstatus, out s1_216, out a0_558, out a1_559, out a2_34, out a4_560, out a5_561, out s2_39, out s3_40, out s4_562, out s8_563)
	word32 a5_47 = Mem15[0x4201AFC8<32>:word32]
	Mem49[s2_39 + 108<i32>:word32] = s3_40
	s3_18 = 0<32>
l230196A6:
	branch a5_47 != 0<32> l23019738
l23019738:
	word32 a5_57 = Mem56[a2_34 + 64<i32>:word32]
	branch a2_34 == 0<32> l23019768
l2301973C:
	s0_312 = s0_312 + 1<32> & 255<i32>
	branch (CONVERT(Mem56[CONVERT(Mem56[a5_57 + 87<i32>:byte], byte, word32) + 0x4201A3A5<32>:byte], byte, word32) & 3<32>) != 0<32> l2301975A
l23019754:
	branch CONVERT(Mem56[a5_57 + 88<i32>:byte], byte, word32) != 0<32> l23019760
l2301975A:
	s3_18 = s3_18 + 1<32> & 255<i32>
l23019760:
	Mem75[a2_34 + 16<i32>:word16] = 0<16>
	Mem76[a2_34 + 20<i32>:word16] = 0<16>
l23019768:
	a5_47 = Mem80[a5_57:word32]
l230196A8:
	branch s0_312 == Mem56[s2_39 + 104<i32>:int32] >>u 0xCFFF800<32> l230196D2
l230196BA:
	assert_warn()
l230196D2:
	word32 s0_105
	branch s3_18 == 0<32> l2301976C
l230196D6:
	branch s0_312 == s3_18 l2301976C
l2301976C:
	s0_105 = 0<32>
	a1 = 50<i32>
l230196DA:
	a1 = 0xA<32>
	s0_105 = CONVERT(SLICE(s0_312 - s3_18 + 40<i32>, word16, 0), word16, word32) ^ s3_18
l230196F0:
	word32 a4_116 = Mem56[0x4201AFC8<32>:int32]
	word32 s0_125 = s0_105 + 50<i32>
l23019712:
	branch a4_116 != 0<32> l23019774
l23019774:
	word32 a4_129 = Mem128[0x4201A3A0<32>:word32]
	branch false l230197D2
l23019778:
	word32 a5_140
	word32 a2_136 = CONVERT(Mem128[CONVERT(Mem128[a4_129 + 87<i32>:byte], byte, word32) + 0x4201A3A5<32>:byte], byte, word32)
	word32 a5_131 = CONVERT(Mem128[0x4201A370<32>:uint16], uint16, word32)
	word32 a2_137 = a2_136 & 3<32>
	branch (a2_136 & 3<32>) != 0<32> l23019794
l2301978E:
	a2_137 = CONVERT(Mem128[a4_129 + 88<i32>:byte], byte, word32)
	branch a2_137 != 0<32> l230197D6
l230197D6:
	a5_140 = a5_131 + a1
l23019794:
	a5_140 = a5_131 + s0_125
l23019796:
	word32 a5_146 = a5_140 << 16<i32>
	Mem150[0x4201A370<32>:word16] = SLICE(a5_146 >>u 16<i32>, word16, 0)
	Mem151[0x4201A372<32>:word16] = SLICE(a5_146 >>u 16<i32>, word16, 0)
	branch CONVERT(Mem151[a4_129 + 86<i32>:byte], byte, word32) != 0<32> l230197DA
l230197DA:
	a2_137 = CONVERT(Mem151[a4_129 + 830<i32>:uint16], uint16, word32) << 0xA<u32>
l230197A8:
l230197B4:
	word32 a5_172 = Mem151[s2_39 + 104<i32>:int32] >>u a2_137
	branch a5_172 != 0<32> l230197C0
l230197BE:
	a5_172 = 1<32>
l230197C0:
	Mem187[0x4201A374<32>:word16] = SLICE((a5_172 & 255<i32>) + 0xA<32> + CONVERT(Mem151[0x4201A374<32>:uint16], uint16, word32), word16, 0)
l230197D2:
	a4_116 = Mem191[a4_129:word32]
l23019714:
	word32 a0_193 = Mem128[s2_39 + 32<i32>:int32]
	branch a0_193 == 0<32> l23019720
l2301971A:
	word32 s4_569
	word32 s2_568
	word32 a5_567
	word32 a2_565
	word32 a3_566
	s0_125 = chan_upd_ctxt_status(a0_193, 1<32>, mstatus, out s1_216, out a1, out a2_565, out a3_566, out a4_116, out a5_567, out s2_568, out s3_18, out s4_569)
l23019720:
	word32 a5_564
	word32 a0_253
	s1_260 = chan_get_next_chan(s0_125, s1_216, a4_116, dwArg18, out a0_253, out a3, out a4_20, out a5_564, out s2_17)
	branch s1_260 != 0<32> l230197E4
l230197E4:
	Mem261[s2_17 + 36<i32>:word32] = a0_253
l230197E8:
	s0Out = s1
	s1Out = s1_260
	a1Out = a1
	a3Out = a3
	a4Out = a4_20
	s2Out = s2_17
	s3Out = s3_18
	return ra
l23019726:
l23019734_thunk_chan_switch_start:
	word32 a2_570
	word32 a5_571
	word32 s4_572
	word32 a1_295
	word32 a3_297
	word32 a4_298
	word32 s0_301
	word32 s1_302
	word32 s2_303
	word32 s3_304
	word32 ra_300 = chan_switch_start(ra, a0_253, a3, mstatus, dwArg08, out s0_301, out s1_302, out a1_295, out a2_570, out a3_297, out a4_298, out a5_571, out s2_303, out s3_304, out s4_572)
	s0Out = s0_301
	s1Out = s1_302
	a1Out = a1_295
	a3Out = a3_297
	a4Out = a4_298
	s2Out = s2_303
	s3Out = s3_304
	return ra_300
chan_cde_evt_exit:


void chan_pre_switch_channel(word32 ra, word32 s1, word32 a4, word32 s2, word32 s3, word32 s4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg8C, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_goto_idle_cb
//      chan_tx_cfm
// MayUse:  a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s11 sp
chan_pre_switch_channel_entry:
l230197F8:
	word32 a2_878
	word32 a5_879
	mm_timer_clear(0x4201D220<32>, a4, out a2_878, out a5_879)
	word32 s0_28 = 0x4201D1D8<32>
	branch (CONVERT(Mem20[0x4201D248<32>:byte], byte, word32) & 32<i32>) == 0<32> l2301984C
l2301982A:
	word32 a5_30 = CONVERT(Mem20[0x4201D24A<32>:byte], byte, word32)
	a4 = 1<32>
	branch a5_30 <=u 1<32> l23019840
l23019834:
	s0_28 = Mem20[a5_30 + 36<i32>:word32]
	branch a5_30 == 0<32> l23019840
l23019838:
	Mem33[a5_30 + 22<i32>:byte] = 1<8>
	Mem34[s0_28 + 36<i32>:word32] = 0<32>
l23019840:
	Mem39[s0_28 + 112<i32>:byte] = SLICE(CONVERT(Mem36[s0_28 + 112<i32>:byte], byte, word32) & -33<i32>, byte, 0)
l2301984C:
	word32 a5_48
	word32 a5_42 = CONVERT(Mem41[s0_28 + 112<i32>:byte], byte, word32)
	word32 s0_45 = Mem41[a4 + 36<i32>:word32]
	branch (a5_42 & 8<i32>) != 0<32> l23019870
l23019870:
	a5_48 = 0x4201D1A0<32>
l23019858:
	branch (a5_42 & 4<32>) == 0<32> l2301987A
l2301987A:
	branch a4 != 0<32> l2301988C
l2301987C:
	word32 a4_50 = CONVERT(Mem41[s0_45 + 114<i32>:byte], byte, word32)
	a5_48 = 1<32>
	branch a4_50 <=u 1<32> l23019928
l23019928:
	branch a4_50 != 1<32> l2301988C
l2301992C:
	s0_45 = Mem41[9<32>:word32]
l23019886:
	word32 s0_908
	word32 s2_912
	word32 a1_909
	word32 a3_910
	word32 a4_911
	ra = chan_cde_evt(ra, mstatus, s2, dwLoc08, out s0_908, out s1, out a1_909, out a3_910, out a4_911, out s2_912, out s3)
l2301985C:
	a5_48 = 0x4201D1BC<32>
l23019864:
	branch a4 == 0<32> l2301986C
l23019866:
	Mem84[a4 + 22<i32>:byte] = 1<8>
l2301986C:
	Mem89[a5_48 + 36<i32>:word32] = s0_45
l2301988C:
	branch s1 == 0<32> l230199DA
l230199DA:
	return
l23019892:
	word32 a4_223
	word32 fflags_143
	word32 frm_144
	word32 s0_146
	word32 s1_147
	word32 s2_149
	word32 s3_880
	word32 ra_145 = phy_set_channel(ra, CONVERT(Mem95[s1 + 4<i32>:byte], byte, word32), CONVERT(Mem95[s1 + 5<i32>:byte], byte, word32), CONVERT(Mem95[s1 + 8<i32>:uint16], uint16, word32), s3, fflags, frm, s4, dwArg04, dwArg0138, out s0_146, out s1_147, out s2_149, out s3_880, out fflags_143, out frm_144)
	word32 a4_881
	word32 a5_882
	tpc_update_tx_power(ra_145, fflags_143, frm_144, out a4_881, out a5_882)
	Mem177[s2_149 + 220<i32>:word32] = 0x10<32>
	Mem180[s1_147 + 32<i32>:word32] = s0_146
	Mem181[s0_146 + 36<i32>:word32] = 0<32>
	word32 s2_194
	word32 a4_886
	word32 a5_887
	word32 s3_888
	word32 s4_889
	word32 a3_885
	word32 a1_883
	word32 a2_884
	word32 s1_193
	word32 s0_192 = chan_upd_ctxt_status(s1_147, 4<32>, mstatus, out s1_193, out a1_883, out a2_884, out a3_885, out a4_886, out a5_887, out s2_194, out s3_888, out s4_889)
	word32 a5_199 = CONVERT(Mem181[s1_193 + 23<i32>:byte], byte, word32)
	branch a5_199 == 3<32> l230199C6
l230199C6:
	Mem201[s2_194 + 544<i32>:word32] = 0<32>
	word32 s8_907
	word32 a0_902
	word32 a3_903
	word32 s2_904
	word32 s3_905
	word32 s4_906
	ke_msg_send_basic(ra_145, 97<i32>, 2<32>, 3<32>, mstatus, s2, out s0_192, out s1_193, out a0_902, out a3_903, out s2_904, out s3_905, out s4_906, out s8_907)
l230198D6:
	a4_223 = 4<32>
	branch a5_199 == 4<32> l230198FA
l230198DC:
	branch CONVERT(Mem181[0x42018EB0<32>:byte], byte, word32) == 0<32> l23019930
l230198EA:
	branch (Mem181[0x42018EB4<32>:word32] & 8<32>) != 0<32> l23019930
l23019930:
	word32 s2_232 = Mem181[0x4201AFC8<32>:int32]
	word32 s3_234 = Mem181[s0_192 + 32<i32>:int32]
	word32 a5_893
	blmac_pwr_mgt_setf(0<32>, out a5_893)
l23019942:
	branch s2_232 == 0<32> l230198F0
l23019946:
	branch s3_234 != Mem181[s2_232 + 64<i32>:int32] l23019966
l2301994E:
	branch CONVERT(Mem181[s2_232 + 86<i32>:byte], byte, word32) != 0<32> l23019966
l23019954:
	branch CONVERT(Mem181[s2_232 + 88<i32>:byte], byte, word32) == 0<32> l23019966
l2301995A:
	word32 s7_901
	word32 s5_899
	word32 s6_900
	word32 a0_894
	word32 a3_895
	word32 a4_896
	word32 a5_897
	word32 s4_898
	ra_145 = txl_frame_send_null_frame(ra_145, CONVERT(Mem181[s2_232 + 96<i32>:byte], byte, word32), 0<32>, fflags_143, frm_144, mstatus, dwArg28, dwArg58, dwArg8C, dwArgA8, dwArgC8, dwArgE8, dwArg0178, out s0_192, out s1_193, out a0_894, out a3_895, out a4_896, out a5_897, out s2_232, out s3_234, out s4_898, out s5_899, out s6_900, out s7_901)
l23019966:
	s2_232 = Mem181[s2_232:int32]
l230198F0:
	a4_223 = CONVERT(Mem181[s1_193 + 23<i32>:byte], byte, word32)
	branch a4_223 <=u 2<32> l2301996C
l2301996C:
	word32 s2_291 = Mem181[0x4201AFC8<32>:int32]
	word32 s3_293 = 0x4201A360<32>
	word32 s4_294 = 36<i32>
	word32 s5_295 = 1<32>
l23019982:
	branch s2_291 != 0<32> l230199A4
l230199A4:
	branch s1_193 != Mem297[s2_291 + 64<i32>:int32] l230199C0
l230199AC:
	Mem307[CONVERT(Mem297[s2_291 + 87<i32>:byte], byte, word32) + s4_294 + s3_293 + 35<i32>:byte] = SLICE(s5_295, byte, 0)
	ra_145 = vif_mgmt_send_postponed_frame(ra_145, s2_291, s5_295, mstatus, dwArg48, dwArg58, dwArg8C, dwArgF8, out s1_193, out s2_291, out s3_293, out s4_294, out s5_295)
l230199C0:
	s2_291 = Mem335[s2_291:int32]
l23019986:
	a4_223 = CONVERT(Mem338[s1_193 + 23<i32>:byte], byte, word32)
	branch a4_223 >u 2<32> l230198FA
l230198FA:
	__csrrc(mstatus, 8<32>)
	Mem349[(a4_223 | 2<i32>) + 4<i32>:word32] = Mem346[a4_223 + 4<i32>:word32]
	__csrrs(mstatus, 8<32>)
	Mem362[s0_192 + 115<i32>:byte] = SLICE(Mem349[0x44B0004C<32>:word32] >>u 2<i32> & 1<32>, byte, 0)
	word32 a5_890
	blmac_pwr_mgt_setf(0<32>, out a5_890)
l23019990:
l230199A0_thunk_mm_active:
	word32 a4_891
	word32 s2_892
	mm_active(mstatus, out a4_891, out s2_892)
	return
chan_pre_switch_channel_exit:


void chan_goto_idle_cb(word32 ra, word32 a4, word32 s5, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg28, word32 dwArg3C, word32 dwArg48, word32 dwArg78, word32 dwArg7C, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
chan_goto_idle_cb_entry:
l230199EC:
	word32 s2_484
	word32 s4_485
	word32 s1_102
	word32 s3_104
	word32 a4_152
	word32 ra_116 = mm_force_idle_req(ra, a4, mstatus, dwLoc18, dwLoc10, dwLoc0C, dwArg18, dwArg3C, dwArgD8, dwArgE8, out s1_102, out a4_152, out s2_484, out s3_104, out s4_485)
	word32 s2_103 = Mem21[s1_102 + 504<i32>:int32]
	branch s2_103 == 0<32> l23019AB6
l23019A14:
	s1_102 = s1_102 + 472<i32>
	branch (CONVERT(Mem21[s1_102 + 584<i32>:byte], byte, word32) & 32<i32>) != 0<32> l23019AB6
l23019A22:
	a4_152 = CONVERT(Mem21[0x42018EB0<32>:byte], byte, word32)
	branch a4_152 == 0<32> l23019A36
l23019A30:
	branch (Mem21[0x42018EB4<32>:word32] & 8<32>) == 0<32> l23019AB6
l23019A36:
	word32 s0_128 = Mem21[0x4201AFC8<32>:int32]
	s3_104 = 0<32>
	word32 a5_234
	word32 a0_192 = blmac_pwr_mgt_setf(1<32>, out a5_234)
	word32 s4_105 = 255<i32>
	word32 s5_106 = 6<32>
	word32 s6_107 = 0x2301A000<32>
l23019A50:
	branch s0_128 != 0<32> l23019A7A
l23019A7A:
	word32 s0_101 = Mem74[a5_234 + 64<i32>:word32]
	branch s2_103 != a5_234 l23019AB2
l23019A80:
	a5_234 = CONVERT(Mem74[s0_101 + 86<i32>:byte], byte, word32)
	branch a5_234 != 0<32> l23019AB2
l23019A86:
	a5_234 = CONVERT(Mem74[s0_101 + 88<i32>:byte], byte, word32)
	branch a5_234 == 0<32> l23019AB2
l23019A8C:
	a5_234 = CONVERT(Mem74[s0_101 + 96<i32>:byte], byte, word32)
	branch a5_234 == s4_105 l23019AB2
l23019A94:
	Mem83[s2_103 + 22<i32>:byte] = SLICE(s5_106, byte, 0)
	word32 s7_119
	word32 a3_497
	ra_116 = txl_frame_send_null_frame(ra_116, CONVERT(Mem83[s0_101 + 96<i32>:byte], byte, word32), s6_107 + -1330<i32>, fflags, frm, mstatus, dwArg18, dwArg48, dwArg7C, dwArg98, dwArgB8, dwArgD8, dwArg0168, out s0_101, out s1_102, out a0_192, out a3_497, out a4_152, out a5_234, out s2_103, out s3_104, out s4_105, out s5_106, out s6_107, out s7_119)
	branch a0_192 != 0<32> l23019AAE
l23019AAC:
	s3_104 = s3_104 + 1<32>
l23019AAE:
	Mem124[s2_103 + 22<i32>:byte] = SLICE(s7_119, byte, 0)
l23019AB2:
	s0_128 = Mem127[s0_101:word32]
l23019A52:
	Mem136[s1_102 + 113<i32>:byte] = SLICE(s3_104, byte, 0)
	branch s3_104 == 0<32> l23019AB6
l23019AB6:
	0<32> = dwArg0128
l23019ACA_thunk_chan_pre_switch_channel:
	chan_pre_switch_channel(ra_116, s1_102, a4_152, s2_103, s3_104, dwArg78, fflags, frm, mstatus, dwArg04, dwArg28, dwArg48, s5, dwArg8C, dwArgA8, dwArgC8, dwArgE8, dwArgF8, dwArg0138, dwArg0178)
	return
l23019A5A:
	word32 s1_486
	word32 a1_487
	word32 a2_488
	word32 a3_489
	word32 s3_493
	word32 a5_491
	word32 s2_492
	word32 a4_490
	word32 s4_494
	chan_upd_ctxt_status(a0_192, 3<32>, mstatus, out s1_486, out a1_487, out a2_488, out a3_489, out a4_490, out a5_491, out s2_492, out s3_493, out s4_494)
	0<32> = dwArg0128
l23019A76_thunk_mm_active:
	word32 a4_495
	word32 s2_496
	mm_active(mstatus, out a4_495, out s2_496)
	return
chan_goto_idle_cb_exit:


void chan_tx_cfm(word32 ra, word32 a4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg8C, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
chan_tx_cfm_entry:
l23019ACE:
	branch CONVERT(Mem9[0x4201D249<32>:byte], byte, word32) != 0<32> l23019AFE
l23019AFE:
	word32 a5_19 = CONVERT(Mem9[0x4201D249<32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem20[0x4201D249<32>:byte] = SLICE(a5_19, byte, 0)
	branch a5_19 != 0<32> l23019B1C
l23019B1C:
	return
l23019B0E:
	word32 a4_30
	word32 s1_36
	word32 s2_39
	word32 s3_40
	word32 s4_41
	word32 ra_34 = mm_force_idle_req(ra, a4, mstatus, dwArg08, dwArg10, dwArg14, dwArg38, dwArg5C, dwArgF8, dwArg0108, out s1_36, out a4_30, out s2_39, out s3_40, out s4_41)
l23019B18_thunk_chan_pre_switch_channel:
	chan_pre_switch_channel(ra_34, s1_36, a4_30, s2_39, s3_40, s4_41, fflags, frm, mstatus, dwArg04, dwArg28, dwArg48, dwArg58, dwArg8C, dwArgA8, dwArgC8, dwArgE8, dwArgF8, dwArg0138, dwArg0178)
	return
chan_tx_cfm_exit:
l23019AE6:
	assert_err()


word32 chan_ctxt_op_evt(word32 ra, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg4C, word32 dwArgE8, word32 dwArgF8, ptr32 & s0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_roc_req
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31]
// LiveOut: ra s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
chan_ctxt_op_evt_entry:
l23019B24:
	word32 s2_15 = CONVERT(Mem13[a0 + 22<i32>:byte], byte, word32)
	branch s2_15 <u 2<32> l23019B46
l23019B3A:
	branch s2_15 <=u 3<32> l23019B54
l23019B54:
	Mem22[0x4201D248<32>:byte] = SLICE(CONVERT(Mem13[0x4201D248<32>:byte], byte, word32) | 32<i32>, byte, 0)
l23019B40:
	branch s2_15 == 4<32> l23019B6A
l23019B6A:
	word32 a0_179
	word32 a4_24 = CONVERT(Mem13[a0 + 23<i32>:byte], byte, word32)
	word32 s1_202 = a0
	word32 s0_27 = 0x4201D1D8<32>
	branch a4_24 >u 2<32> l23019BBE
l23019BBE:
	__csrrc(mstatus, 8<32>)
	Mem32[(a4_24 & 0xFFFFFFFD<32>) + 4<i32>:word32] = Mem13[a4_24 + 4<i32>:word32]
	__csrrs(mstatus, 8<32>)
	word32 a5_422
	a0_179 = blmac_pwr_mgt_setf(CONVERT(Mem32[0x4201D24B<32>:byte], byte, word32), out a5_422)
	Mem37[0x4201D1F8<32>:word32] = 0<32>
	word32 a5_38 = CONVERT(Mem37[a0 + 23<i32>:byte], byte, word32)
	branch a5_38 != 3<32> l23019C22
l23019C22:
	branch a5_38 != s2_15 l23019C00
l23019C26:
	branch CONVERT(Mem37[a0 + 14<i32>:uint16], uint16, word32) != 0<32> l23019C38
l23019C2C:
	Mem42[0x4201D248<32>:byte] = SLICE(CONVERT(Mem37[0x4201D248<32>:byte], byte, word32) & -65<i32>, byte, 0)
l23019C38:
	Mem47[0x4201D248<32>:byte] = SLICE(CONVERT(Mem44[0x4201D248<32>:byte], byte, word32) & 0xFFFFFFFB<32>, byte, 0)
l23019BE8:
	Mem53[0x4201D248<32>:byte] = SLICE(CONVERT(Mem37[0x4201D248<32>:byte], byte, word32) & 0xFFFFFFF7<32>, byte, 0)
	word32 s8_434
	word32 s2_431
	word32 s3_432
	word32 s4_433
	ra = ke_msg_send_basic(ra, 98<i32>, 2<32>, a4_24 & 0xFFFFFFFD<32>, mstatus, s2, out s0_27, out s1_202, out a0_179, out a3, out s2_431, out s3_432, out s4_433, out s8_434)
l23019C00:
	Mem75[s1_202 + 23<i32>:byte] = 0xFF<8>
	word32 a5_77 = CONVERT(Mem75[s0_27 + 112<i32>:byte], byte, word32)
	branch (a5_77 & 3<i32>) == 0<32> l23019C44
l23019C44:
	Mem80[s0_27 + 112<i32>:byte] = SLICE(a5_77 & 0xFFFFFFEF<32>, byte, 0)
l23019C10:
	word32 a1_435
	word32 a4_436
	s0_27 = chan_conn_less_delay_prog(mstatus, out a0_179, out a1_435, out a4_436)
l23019C14:
	word32 a4_98 = CONVERT(Mem97[s0_27 + 114<i32>:byte], byte, word32)
	branch a4_98 != 1<32> l23019C4C
l23019C4C:
	branch a4_98 <=u 1<32> l23019C62
l23019C62:
	word32 s1_441
	word32 s2_443
	word32 s3_444
	word32 s4_445
	word32 a4_442
	word32 ra_115 = mm_force_idle_req(ra, a4_98, mstatus, dwLoc08, dwArg00, dwArg04, dwArg28, dwArg4C, dwArgE8, dwArgF8, out s1_441, out a4_442, out s2_443, out s3_444, out s4_445)
l23019C72_thunk_mm_back_to_host_idle:
	word32 s2_147
	s0Out = mm_back_to_host_idle(mstatus, dwArg28, out s2_147)
	s2Out = s2_147
	return ra_115
l23019C50:
l23019C5E_thunk_chan_cde_evt:
	word32 s0_164
	word32 s2_165
	word32 a1_447
	word32 a4_449
	word32 s3_450
	word32 a3_448
	word32 s1_446
	word32 ra_174 = chan_cde_evt(ra, mstatus, dwArg08, dwArg18, out s0_164, out s1_446, out a1_447, out a3_448, out a4_449, out s2_165, out s3_450)
	s0Out = s0_164
	s2Out = s2_165
	return ra_174
l23019C1E:
l23019B7C:
	Mem184[a0 + 22<i32>:byte] = 1<8>
	word32 a4_185 = CONVERT(Mem184[0x4201D24A<32>:byte], byte, word32)
	branch a4_185 != 1<32> l23019B9E
l23019B9E:
	branch a4_185 <=u 1<32> l23019B8C
l23019BA2:
	word32 s2_187 = Mem184[0x44B00120<32>:int32]
	word32 a4_191
	word32 a5_437
	chan_upd_nb_rem_slots.isra.3(a0 + 0x12<32>, s2_187, out a4_191, out a5_437)
	Mem193[0x4201D244<32>:word32] = s2_187
	word32 a0_194
	word32 s2_440
	word32 a4_438
	word32 a5_439
	chan_get_next_chan(0x4201D1D8<32>, a0, a4_191, dwArg18, out a0_194, out a3, out a4_438, out a5_439, out s2_440)
	s1_202 = a0_194
l23019B8A:
l23019B8C:
	a0_179 = s1_202
l23019B8E:
l23019B9A_thunk_chan_switch_start:
	word32 s0_235
	word32 s2_237
	word32 s3_429
	word32 s4_430
	word32 a5_428
	word32 a4_427
	word32 a3_426
	word32 s1_423
	word32 a1_424
	word32 a2_425
	word32 ra_234 = chan_switch_start(ra, a0_179, a3, mstatus, dwArg08, out s0_235, out s1_423, out a1_424, out a2_425, out a3_426, out a4_427, out a5_428, out s2_237, out s3_429, out s4_430)
	s0Out = s0_235
	s2Out = s2_237
	return ra_234
l23019B46:
	s0Out = s0
	s2Out = s2_15
	return ra
chan_ctxt_op_evt_exit:


word32 chan_init(word32 ra, word32 dwArg0128, ptr32 & s0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_init
// MayUse:  ra:[0..31] Stack +0128:[0..31]
// LiveOut: ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
chan_init_entry:
l23019C76:
	word32 s1_29 = 0x4201D14C<32>
	word32 a4_164
	word32 a5_165
	word32 a2_162
	word32 a3_163
	word32 a1_161
	word32 a0_160
	word32 t1_159
	word32 ra_36 = memset(ra, 0x4201D1D8<32>, 0<32>, 116<i32>, out t1_159, out a0_160, out a1_161, out a2_162, out a3_163, out a4_164, out a5_165)
	word32 s2_39 = 0<32>
l23019CB8:
	word32 a5_56
	word32 a4_171
	word32 a3_170
	word32 a1_168
	word32 a2_169
	word32 t1_166
	word32 a0_167
	ra_36 = memset(ra_36, s1_29, 0<32>, 0x1C<32>, out t1_166, out a0_167, out a1_168, out a2_169, out a3_170, out a4_171, out a5_56)
	Mem61[s1_29 + 14<i32>:word16] = 0xFF<16>
	Mem63[s1_29 + 23<i32>:byte] = 0xFF<8>
	branch s2_39 > 2<32> l23019D28
l23019D28:
	branch s2_39 != 3<32> l23019CD8
l23019D2C:
	Mem68[0x4201D1AA<32>:word16] = 0<16>
	Mem69[0x4201D1A5<32>:byte] = 0<8>
l23019CCE:
	s1_29 = co_list_push_back(s1_29, a5_56)
l23019CD8:
	s2_39 = s2_39 + 1<32>
	s1_29 = s1_29 + 0x1C<32>
	branch s2_39 != 5<32> l23019CB8
l23019CE0:
	Mem86[0x230194C8<32>:word32] = 0x4201D1D8<32>
	Mem89[0x23019676<32>:word32] = 0x4201D1D8<32>
	Mem92[0x23019B70<32>:word32] = 0x4201D1D8<32>
	Mem95[0x4201D218<32>:word32] = 0<32>
	Mem96[0x2301945A<32>:word32] = 0x4201D1D8<32>
	0<32> = dwArg0128
	s0Out = s4
	return ra_36
chan_init_exit:


word32 chan_scan_req(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg0128, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scan_set_channel_request
// MayUse:  a0:[0..7] a1:[0..15] a2:[0..7] a3:[0..15] a4:[0..7] mstatus:[0..31] Stack +0128:[0..31]
// LiveOut: a1 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
chan_scan_req_entry:
l23019D36:
	branch CONVERT(Mem15[0x4201D1B7<32>:byte], byte, word32) == 255<i32> l23019D82
l23019D82:
	Mem36[0x4201D1B9<32>:byte] = SLICE(a4, byte, 0)
	Mem39[0x4201D1AE<32>:word16] = 0xFF<16>
	Mem41[0x4201D1B6<32>:word16] = 0x301<16>
	word32 a5_42 = CONVERT(Mem41[0x4201D248<32>:byte], byte, word32)
	Mem44[0x4201D1B2<32>:word16] = SLICE(a3 >>u 10<i32>, word16, 0)
	Mem46[0x4201D1A4<32>:byte] = SLICE(a0, byte, 0)
	Mem47[0x4201D1A8<32>:word16] = SLICE(a1, word16, 0)
	Mem48[0x4201D1A6<32>:word16] = SLICE(a1, word16, 0)
	Mem49[0x4201D1AC<32>:byte] = SLICE(a2, byte, 0)
	Mem50[0x4201D248<32>:byte] = SLICE(a5_42 | 2<i32>, byte, 0)
	branch (a5_42 & 0x10<32>) != 0<32> l23019DD4
l23019DD4:
	0<32> = dwArg0128
	a1Out = a1
	return dwArgE4
l23019DC4:
	0<32> = dwArg0128
l23019DD0_thunk_chan_conn_less_delay_prog:
	word32 a1_64
	word32 a0_108
	word32 a4_109
	word32 s0_69 = chan_conn_less_delay_prog(mstatus, out a0_108, out a1_64, out a4_109)
	a1Out = a1_64
	return s0_69
chan_scan_req_exit:
l23019D60:
	assert_err()


word32 chan_roc_req(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArgD8, word32 dwArgE8, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_remain_on_channel_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
chan_roc_req_entry:
l23019DE2:
	word32 s1_13 = CONVERT(Mem11[a0:byte], byte, word32)
	branch s1_13 == 0<32> l23019DFC
l23019DFC:
	word32 a3_16 = CONVERT(Mem11[0x4201D1D3<32>:byte], byte, word32)
	a4 = 255<i32>
	branch a3_16 != 255<i32> l23019DF8
l23019E10:
	Mem19[0x4201D1D3<32>:byte] = 4<8>
	Mem21[0x4201D1C0<32>:byte] = SLICE(CONVERT(Mem19[a0 + 2<i32>:byte], byte, word32), byte, 0)
	Mem23[0x4201D1C1<32>:byte] = SLICE(CONVERT(Mem21[a0 + 3<i32>:byte], byte, word32), byte, 0)
	Mem25[0x4201D1C2<32>:word16] = SLICE(CONVERT(Mem23[a0 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem27[0x4201D1C4<32>:word16] = SLICE(CONVERT(Mem25[a0 + 6<i32>:uint16], uint16, word32), word16, 0)
	word32 a4_28 = CONVERT(Mem27[a0 + 8<i32>:uint16], uint16, word32)
	Mem30[0x4201D1CA<32>:word16] = SLICE(a1, word16, 0)
	Mem31[0x4201D1C6<32>:word16] = SLICE(a4_28, word16, 0)
	Mem33[0x4201D1D2<32>:byte] = 1<8>
	word32 a0_34 = Mem33[a3_16 + 12<i32>:word32]
	Mem38[0x4201D1CE<32>:word16] = SLICE(a3_16 + 1000<i32> >>u 10<i32>, word16, 0)
	Mem40[0x4201D1D5<32>:byte] = SLICE(CONVERT(Mem38[a0_34 + 1<i32>:byte], byte, word32), byte, 0)
	Mem42[0x4201D1C8<32>:byte] = SLICE(CONVERT(Mem40[a0_34 + 16<i32>:int8], int8, int32), byte, 0)
	a4 = CONVERT(Mem42[0x4201D248<32>:byte], byte, word32)
	branch a1 != 0<32> l23019EA0
l23019EA0:
	Mem47[0x4201D248<32>:byte] = SLICE(a4 | 1<i32>, byte, 0)
	branch (a4 & 16<i32>) != 0<32> l23019E82
l23019EAE:
	word32 a1_309
	word32 a0_308
	chan_conn_less_delay_prog(mstatus, out a0_308, out a1_309, out a4)
l23019E76:
	Mem64[0x4201D248<32>:byte] = SLICE(a4 | 4<i32>, byte, 0)
	a4 = a4 | 4<i32>
	branch Mem64[0x4201D1FC<32>:word32] == 0<32> l23019E86
l23019E86:
	word32 s4_307
	word32 s3_306
	word32 s2_305
	word32 a5_304
	word32 a3_303
	word32 a2_302
	word32 a1_301
	word32 s1_300
	word32 s0_299
	ra = chan_switch_start(ra, 0x4201D1BC<32>, a3_16, mstatus, dwLoc08, out s0_299, out s1_300, out a1_301, out a2_302, out a3_303, out a4, out a5_304, out s2_305, out s3_306, out s4_307)
l23019DF2:
	branch s1_13 == 1<32> l23019EB4
l23019EB4:
	a4 = CONVERT(Mem11[0x4201D1D3<32>:byte], byte, word32)
	word32 s2_109 = 0x4201D14C<32>
	branch a4 == 255<i32> l23019E82
l23019ECC:
	word32 a5_92 = CONVERT(Mem11[0x4201D1D2<32>:byte], byte, word32)
	word32 s0_120 = 0x4201D1D8<32>
	branch a5_92 >u 3<32> l23019F1A
l23019F1A:
	branch a5_92 != 4<32> l23019EE8
l23019F20:
	word32 a5_313
	word32 a2_312
	mm_timer_clear(0x4201D220<32>, 4<32>, out a2_312, out a5_313)
	ra = chan_ctxt_op_evt(ra, 0x4201D1BC<32>, a3, 0x4201D14C<32>, mstatus, s2, s0, dwLoc08, dwArg08, dwArg18, dwArg3C, dwArgD8, dwArgE8, out s0_120, out s2_109)
l23019EDE:
	branch a5_92 >=u 2<32> l23019F46
l23019F46:
	word32 a5_133 = CONVERT(Mem11[0x4201D248<32>:byte], byte, word32)
	Mem134[0x4201D1FC<32>:word32] = 0<32>
	Mem136[0x4201D248<32>:byte] = SLICE(a5_133 & 0xFFFFFFFB<32>, byte, 0)
l23019EE4:
	branch a5_92 == s1_13 l23019F3A
l23019F3A:
	Mem139[0x4201D248<32>:byte] = SLICE(CONVERT(Mem11[0x4201D248<32>:byte], byte, word32) & 0xFFFFFFFE<32>, byte, 0)
l23019EE8:
	Mem142[s2_109 + 135<i32>:byte] = 0xFF<8>
	word32 a5_144 = CONVERT(Mem142[s0_120 + 112<i32>:byte], byte, word32)
	a4 = 0x10<32>
	branch (a5_144 & 18<i32>) != 0x10<32> l23019E82
l23019EFC:
	Mem150[s0_120 + 112<i32>:byte] = SLICE(a5_144 & 0xFFFFFFEF<32>, byte, 0)
	word32 a5_311
	word32 a2_310
	mm_timer_clear(0x4201D230<32>, 0x10<32>, out a2_310, out a5_311)
	Mem157[s0_120 + 112<i32>:byte] = SLICE(CONVERT(Mem150[s0_120 + 112<i32>:byte], byte, word32) & 0xFFFFFFEF<32>, byte, 0)
l23019E82:
l23019DF8:
l23019E92:
	0<32> = dwArg38
	a4Out = a4
	return ra
chan_roc_req_exit:


word32 chan_ctxt_add(word32 a0, word32 a1, word32 a4, word32 dwArgA8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vif_mgmt_switch_channel
//      me_add_chan_ctx
//      sm_add_chan_ctx
//      apm_start_cac_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a4 s0 s1 s2 s3 s5 s6
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: a1 a3 sp
chan_ctxt_add_entry:
l23019F56:
	word32 s3_152 = 0x4201D14C<32>
	word32 s2_151 = 0<32>
l23019F80:
	word32 a0_140
	word32 a5_32 = CONVERT(Mem20[s3_152 + 23<i32>:byte], byte, word32)
	branch a5_32 == 255<i32> l23019FAE
l23019F88:
	word32 a2_163
	word32 a1_162
	word32 a3_164
	a0_140 = memcmp(a0, s3_152 + 4<i32>, 8<32>, out a1_162, out a2_163, out a3_164, out a4, out a5_32)
	branch a0_140 != 0<32> l23019FAE
l23019FAE:
	s2_151 = s2_151 + 1<32>
	s3_152 = s3_152 + 0x1C<32>
	branch s2_151 != 3<32> l23019F80
l23019FB6:
	word32 a5_165
	word32 a0_57 = co_list_pop_front(a4, a5_32, out a5_165)
	a4 = a0_57
	a0_140 = 1<32>
	branch a0_57 == 0<32> l23019F9A
l23019FC8:
	word32 a5_69 = (a0_57 - 0x4201D14C<32> >> 2<i32>) + 0xB6DB6DB7<32> & 255<i32>
	Mem70[a0_57 + 23<i32>:byte] = SLICE(a5_69, byte, 0)
	Mem73[a1:byte] = SLICE(a5_69, byte, 0)
	Mem76[a0_57 + 4<i32>:byte] = SLICE(CONVERT(Mem73[a0:byte], byte, word32), byte, 0)
	Mem78[a0_57 + 5<i32>:byte] = SLICE(CONVERT(Mem76[a0 + 1<i32>:byte], byte, word32), byte, 0)
	Mem80[a0_57 + 8<i32>:word16] = SLICE(CONVERT(Mem78[a0 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem82[a0_57 + 10<i32>:word16] = SLICE(CONVERT(Mem80[a0 + 6<i32>:uint16], uint16, word32), word16, 0)
	Mem84[a0_57 + 6<i32>:word16] = SLICE(CONVERT(Mem82[a0 + 2<i32>:uint16], uint16, word32), word16, 0)
	Mem86[a0_57 + 12<i32>:byte] = SLICE(CONVERT(Mem84[a0 + 8<i32>:int8], int8, int32), byte, 0)
	a0_140 = 0<32>
l23019F96:
	Mem87[a1:byte] = SLICE(s2_151, byte, 0)
l23019F9A:
	0<32> = dwArgA8
	s1Out = a0
	a0Out = a0_140
	a4Out = a4
	s2Out = s2_151
	s3Out = s3_152
	s5Out = 3<32>
	s6Out = 255<i32>
	return s1
chan_ctxt_add_exit:


word32 chan_ctxt_del(word32 ra, word32 a0, word32 dwArg38, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      chan_ctxt_unlink
// MayUse:  a0:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut: a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 s2 t0 t1 tp
// Preserved: s0 sp
chan_ctxt_del_entry:
l2301A01A:
	branch CONVERT(Mem16[a0 + 0x4201D17F<32>:byte], byte, word32) != 255<i32> l2301A060
l2301A060:
	word32 a5_31 = CONVERT(Mem16[a0 + 0x4201D180<32>:byte], byte, word32)
	branch a5_31 == 0<32> l2301A088
l2301A088:
	word32 a1_48
	word32 a3_50
	word32 a4_51
	word32 t1_77
	word32 a0_78
	word32 a2_79
	word32 a5_80
	word32 ra_53 = memset(ra, co_list_push_back(a0 + 0x4201D168<32>, a5_31), 0<32>, 0x1C<32>, out t1_77, out a0_78, out a1_48, out a2_79, out a3_50, out a4_51, out a5_80)
	Mem60[a0 + 0x4201D176<32>:word16] = 0xFF<16>
	Mem62[a0 + 0x4201D17F<32>:byte] = 0xFF<8>
	0<32> = dwArg38
	a1Out = a1_48
	a3Out = a3_50
	a4Out = a4_51
	return ra_53
chan_ctxt_del_exit:
l2301A06E:
	assert_err()
l2301A046:
	assert_err()


word32 chan_ctxt_update(word32 ra, word32 s0, word32 a0, word32 a1, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 fflags, word32 frm, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, ptr32 & a4Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_hw_config_handler
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut: a4 ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa5 fflags frm ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
chan_ctxt_update_entry:
l2301A0C2:
	word32 a4_11 = CONVERT(Mem9[a0:byte], byte, word32)
	word32 a3_13 = CONVERT(Mem9[a0 + 1<i32>:byte], byte, word32)
	Mem18[a4_11 + 0x4201D16C<32>:byte] = SLICE(a3_13, byte, 0)
	Mem20[a4_11 + 0x4201D16D<32>:byte] = SLICE(CONVERT(Mem18[a0 + 2<i32>:byte], byte, word32), byte, 0)
	Mem22[a4_11 + 0x4201D170<32>:word16] = SLICE(CONVERT(Mem20[a0 + 6<i32>:uint16], uint16, word32), word16, 0)
	Mem24[a4_11 + 0x4201D172<32>:word16] = SLICE(CONVERT(Mem22[a0 + 8<i32>:uint16], uint16, word32), word16, 0)
	Mem26[a4_11 + 0x4201D16E<32>:word16] = SLICE(CONVERT(Mem24[a0 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem28[a4_11 + 0x4201D174<32>:byte] = SLICE(CONVERT(Mem26[a0 + 10<i32>:int8], int8, int32), byte, 0)
	branch Mem28[0x4201D1F8<32>:int32] != a4_11 + 0x4201D168<32> l2301A158
l2301A158:
	a4Out = 0x4201D000<32>
	s3Out = s3
	return ra
l2301A11A:
	__csrrc(mstatus, 8<32>)
	word32 a4_39
	word32 s3_45
	word32 s4_46
	word32 s8_47
	word32 s0_63
	word32 fflags_76
	word32 frm_77
	word32 s3_81
	word32 ra_62 = rxl_cntrl_evt(ra, rxl_timer_int_handler(a0, a1, mstatus, out a4_39, out s3_45, out s4_46, out s8_47), a1, a3_13, a4_39, s3_45, s4_46, s5, s6, s7, s8_47, s10, s11, fflags, frm, mstatus, s0, dwLoc08, dwArg14, dwArg18, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg64, dwArg68, dwArg78, dwArg84, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, out s0_63, out s3_81, out fflags_76, out frm_77)
	__csrrs(mstatus, 8<32>)
	word32 fflags_103
	word32 frm_104
	word32 s3_110
	word32 s0_215
	word32 s1_216
	word32 s2_217
	word32 ra_105 = phy_set_channel(ra_62, CONVERT(Mem28[s0_63 + 1<i32>:byte], byte, word32), CONVERT(Mem28[s0_63 + 2<i32>:byte], byte, word32), CONVERT(Mem28[s0_63 + 6<i32>:uint16], uint16, word32), s3_81, fflags_76, frm_77, s0, dwArg14, dwArg0148, out s0_215, out s1_216, out s2_217, out s3_110, out fflags_103, out frm_104)
l2301A154_thunk_tpc_update_tx_power:
	word32 a4_134
	word32 a5_218
	tpc_update_tx_power(ra_105, fflags_103, frm_104, out a4_134, out a5_218)
	a4Out = a4_134
	s3Out = s3_110
	return ra_105
chan_ctxt_update_exit:


word32 chan_tbtt_switch_update(word32 ra, word32 a1, word32 a3, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArgA8, word32 dwArg0118, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_tbtt_evt
//      mm_sta_tbtt
//      rxl_cntrl_evt
// MayUse:  a1:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0178:[0..31]
// LiveOut: a1 a2 a3 a4 ra s0 s1 s10 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: sp
chan_tbtt_switch_update_entry:
l2301A162:
	branch a5 == 0<32> l2301A1BC
l2301A166:
	branch CONVERT(Mem0[a5 + 22<i32>:byte], byte, word32) == 0<32> l2301A1BC
l2301A16C:
	a1 = a1 + 0xFF00063C<32>
	word32 a0_11 = Mem0[0xFF000684<32>:word32]
	branch a1 == 0<32> l2301A1BC
l2301A17A:
	Mem13[a1 + 0xFF000684<32>:word32] = a0_11
	a4 = CONVERT(Mem13[0x4201D24A<32>:byte], byte, word32)
	branch a4 <=u 1<32> l2301A1BC
l2301A18A:
	a4 = CONVERT(Mem13[a0_11 + 78<i32>:byte], byte, word32)
	branch a4 == 2<32> l2301A1BC
l2301A1BC:
	s0Out = s0
	s1Out = s1
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	return ra
l2301A194:
	Mem24[a0_11 + 78<i32>:byte] = 0<8>
	word32 a5_150
	co_list_extract(0x4201D1E8<32>, a0_11 + 68<i32>, a4, 2<32>, out a5_150)
l2301A1B8_thunk_chan_tbtt_schedule:
	word32 a1_39
	word32 a2_40
	word32 a4_41
	word32 s0_44
	word32 s1_45
	word32 s10_46
	word32 s3_49
	word32 s4_50
	word32 s5_51
	word32 s6_52
	word32 s7_53
	word32 s9_55
	word32 a3_58
	word32 s2_151
	word32 ra_59 = chan_tbtt_schedule(ra, a0_11 + 68<i32>, a0_11 + 68<i32>, a3, a4, mstatus, dwArg08, dwArgA8, dwArg0118, dwArg0178, out s0_44, out s1_45, out a1_39, out a2_40, out a3_58, out a4_41, out s2_151, out s3_49, out s4_50, out s5_51, out s6_52, out s7_53, out s9_55, out s10_46)
	s0Out = s0_44
	s1Out = s1_45
	a1Out = a1_39
	a2Out = a2_40
	a3Out = a3_58
	a4Out = a4_41
	s3Out = s3_49
	s4Out = s4_50
	s5Out = s5_51
	s6Out = s6_52
	s7Out = s7_53
	s9Out = s9_55
	s10Out = s10_46
	return ra_59
chan_tbtt_switch_update_exit:


word32 chan_bcn_to_evt(word32 ra, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg88, word32 dwArgF8, word32 dwArg0158, ptr32 & s0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vif_mgmt_bcn_recv
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0088:[0..31] Stack +00F8:[0..31] Stack +0158:[0..31]
// LiveOut: a1 a2 a3 a4 a5 ra s0 s10 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: sp
chan_bcn_to_evt_entry:
l2301A1BE:
	word32 a4_18 = CONVERT(Mem15[a0 + 78<i32>:byte], byte, word32)
	word32 a5_188 = 2<32>
	branch a4_18 != 2<32> l2301A268
l2301A1DE:
	Mem23[a0 + 78<i32>:byte] = 0<8>
	word32 a5_260
	co_list_extract(0x4201D1E8<32>, a0 + 68<i32>, a4_18, 2<32>, out a5_260)
	a1 = a0 + 68<i32>
	a4_18 = CONVERT(Mem23[0x4201D24A<32>:byte], byte, word32)
	a5_188 = 1<32>
	branch a4_18 <=u 1<32> l2301A268
l2301A20E:
	word32 s0_45
	word32 s1_46
	word32 s2_49
	word32 s3_262
	word32 s4_263
	word32 a2_261
	ra = chan_tbtt_schedule(ra, a0 + 68<i32>, a0 + 68<i32>, a3, a4_18, mstatus, s2, dwArg88, dwArgF8, dwArg0158, out s0_45, out s1_46, out a1, out a2_261, out a3, out a4_18, out s2_49, out s3_262, out s4_263, out s5, out s6, out s7, out s9, out s10)
	word32 a5_63 = CONVERT(Mem23[s0_45 + 112<i32>:byte], byte, word32)
	a5_188 = a5_63 & 0xC<32>
	branch (a5_63 & 0xC<32>) != 0<32> l2301A268
l2301A21C:
	word32 s0_65 = Mem23[(a5_63 & 0xC<32>) + 36<i32>:word32]
	branch (a5_63 & 0xC<32>) != 0<32> l2301A268
l2301A220:
	word32 a5_70
	word32 a4_264
	a1 = chan_upd_nb_rem_slots.isra.3(s2_49 + 18<i32>, s1_46, out a4_264, out a5_70)
	word32 a4_71 = CONVERT(Mem23[s2_49 + 20<i32>:uint16], uint16, word32)
	branch a4_71 == 0<32> l2301A24A
l2301A230:
	word32 a5_75 = s1_46 - a5_70 >>u 10<i32> << 16<i32>
	s0_65 = Mem23[a5_70 + 108<i32>:word32]
	word32 a5_76 = a5_75 >>u 16<i32>
	branch a4_71 >=u a5_75 >>u 16<i32> l2301A242
l2301A240:
	a5_76 = a4_71
l2301A242:
	Mem82[s2_49 + 20<i32>:word16] = SLICE(a4_71 - a5_76, word16, 0)
l2301A24A:
	Mem87[s1_46 + 108<i32>:word32] = s0_65
	word32 a0_91
	word32 s2_265
	chan_get_next_chan(s0_65, s1_46, a4_71, dwArg18, out a0_91, out a3, out a4_18, out a5_188, out s2_265)
	branch a5_188 == a0_91 l2301A268
l2301A268:
	s0Out = s1
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4_18
	a5Out = a5_188
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	return ra
l2301A256:
l2301A264_thunk_chan_switch_start:
	word32 a5_120
	word32 a1_122
	word32 a2_123
	word32 a3_124
	word32 a4_125
	word32 s0_128
	word32 s4_132
	word32 s1_266
	word32 s2_267
	word32 s3_268
	word32 ra_127 = chan_switch_start(ra, a0_91, a3, mstatus, dwArg08, out s0_128, out s1_266, out a1_122, out a2_123, out a3_124, out a4_125, out a5_120, out s2_267, out s3_268, out s4_132)
	s0Out = s0_128
	a1Out = a1_122
	a2Out = a2_123
	a3Out = a3_124
	a4Out = a4_125
	a5Out = a5_120
	s4Out = s4_132
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	return ra_127
chan_bcn_to_evt_exit:


word32 chan_bcn_detect_start(word32 ra, word32 s0, word32 mstatus, ptr32 & s0Out, ptr32 & a3Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_tbtt
//      mm_hw_config_handler
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a3 ra s0 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
chan_bcn_detect_start_entry:
l2301A278:
	word32 s3_133 = Mem13[s0 + 64<i32>:word32]
	branch s0 != 0<32> l2301A2A4
l2301A2A4:
	branch (CONVERT(Mem13[0x4201D248<32>:byte], byte, word32) & 64<i32>) != 0<32> l2301A344
l2301A2B6:
	word32 a4_26 = CONVERT(Mem13[0x4201D24A<32>:byte], byte, word32)
	branch a4_26 <=u 1<32> l2301A344
l2301A2C0:
	word32 a0_34
	word32 s0_42
	word32 s2_44
	word32 s3_45
	word32 s1_143
	word32 a1_144
	word32 a2_145
	word32 a3_146
	word32 a4_147
	word32 a5_148
	word32 a6_149
	word32 s4_150
	word32 s8_151
	ra = ke_msg_alloc(ra, 70<i32>, 0<32>, 0x14<32>, a4_26, mstatus, dwLoc08, out s0_42, out s1_143, out a0_34, out a1_144, out a2_145, out a3_146, out a4_147, out a5_148, out a6_149, out s2_44, out s3_45, out s4_150, out s8_151)
	Mem52[a0_34:byte] = 0<8>
	Mem56[a0_34 + 1<i32>:byte] = SLICE(CONVERT(Mem52[s3_45 + 87<i32>:byte], byte, word32), byte, 0)
	Mem60[a0_34 + 2<i32>:byte] = SLICE(CONVERT(Mem56[s0_42 + 4<i32>:byte], byte, word32), byte, 0)
	Mem62[a0_34 + 3<i32>:byte] = SLICE(CONVERT(Mem60[s0_42 + 5<i32>:byte], byte, word32), byte, 0)
	Mem64[a0_34 + 4<i32>:word16] = SLICE(CONVERT(Mem62[s0_42 + 6<i32>:uint16], uint16, word32), word16, 0)
	Mem66[a0_34 + 6<i32>:word16] = SLICE(CONVERT(Mem64[s0_42 + 8<i32>:uint16], uint16, word32), word16, 0)
	Mem68[a0_34 + 8<i32>:word16] = SLICE(CONVERT(Mem66[s0_42 + 10<i32>:uint16], uint16, word32), word16, 0)
	Mem76[(Mem68[s2_44 + 0x420190D4<32>:word32] + 0xFEFFFC78<32> >>u 1000<i32>) + 12<i32>:word32] = a0_34
	Mem78[a0_34 + 16<i32>:byte] = SLICE(CONVERT(Mem76[s0_42 + 12<i32>:int8], int8, int32), byte, 0)
	word32 s1_86
	word32 a0_152
	word32 a1_153
	word32 a2_154
	word32 a4_155
	word32 a5_156
	word32 s2_157
	word32 s4_158
	word32 s8_159
	s0 = ke_msg_send(a0_34, mstatus, out s1_86, out a0_152, out a1_153, out a2_154, out a3, out a4_155, out a5_156, out s2_157, out s3_133, out s4_158, out s8_159)
	Mem96[s1_86 + 112<i32>:byte] = SLICE(CONVERT(Mem78[s1_86 + 112<i32>:byte], byte, word32) | 64<i32>, byte, 0)
l2301A344:
	s0Out = s0
	a3Out = a3
	s3Out = s3_133
	return ra
chan_bcn_detect_start_exit:
l2301A28A:
	assert_err()


word32 chan_is_on_channel(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_sta_tbtt
//      ps_uapsd_timer_handle
//      ps_set_mode
//      ps_traffic_status_update
//      tpc_update_vif_tx_power
//      txl_cntrl_tx_check
//      bl_sleep
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
chan_is_on_channel_entry:
l2301A352:
	word32 a5_25 = Mem0[0x4201D1F8<32>:int32]
	branch a5_25 == 0<32> l2301A37E
l2301A37E:
	a3Out = a3
	a4Out = a4
	a5Out = a5_25
	return 0<32>
l2301A35C:
	word32 a0_12
	word32 a3_7 = CONVERT(Mem0[a5_25 + 23<i32>:byte], byte, word32)
	branch a3_7 >u 2<32> l2301A370
l2301A370:
	a5_25 = CONVERT(Mem0[a5_25 + 25<i32>:byte], byte, word32)
	a0_12 = a5_25 - CONVERT(Mem0[a0 + 87<i32>:byte], byte, word32)
l2301A366:
	a0_12 = Mem0[a0 + 64<i32>:word32] - a5_25
l2301A36A:
	a3Out = a3_7
	a4Out = 2<32>
	a5Out = a5_25
	return CONVERT(a0_12 <u 1<i32>, bool, word32)
chan_is_on_channel_exit:


word32 chan_is_tx_allowed(word32 a0, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_tx_check
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
chan_is_tx_allowed_entry:
l2301A382:
	word32 a3_9
	word32 a4_10
	word32 a5_30
	word32 a0_16 = chan_is_on_channel(a0, out a3_9, out a4_10, out a5_30)
	branch a0_16 == 0<32> l2301A3A4
l2301A38C:
	word32 a5_12 = Mem5[a4_10 + 36<i32>:word32]
	branch a4_10 == 0<32> l2301A3A4
l2301A398:
	a0_16 = CONVERT(CONVERT(Mem5[Mem5[a5_12 + 32<i32>:word32] + 22<i32>:byte], byte, word32) <u 0xFFFFFFF9<32>, bool, word32)
l2301A3A4:
	a3Out = a3_9
	a4Out = a4_10
	return a0_16
chan_is_tx_allowed_exit:


word32 chan_is_on_operational_channel(ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_bcn_transmit
// MayUse: 
// LiveOut: a0 a4
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
chan_is_on_operational_channel_entry:
l2301A3AA:
	word32 a4_5 = Mem0[0x4201D1F8<32>:int32]
	word32 a5_12 = 0<32>
	branch a4_5 == 0<32> l2301A3CA
l2301A3B6:
	a5_12 = 0<32>
	branch CONVERT(Mem0[a4_5 + 23<i32>:byte], byte, word32) >u 2<32> l2301A3CA
l2301A3C2:
	a5_12 = CONVERT(0<32> - a4_5 <u 1<i32>, bool, word32)
l2301A3CA:
	a4Out = a4_5
	return a5_12
chan_is_on_operational_channel_exit:


word32 chan_update_tx_power(word32 a0, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tpc_update_vif_tx_power
//      chan_ctxt_link
//      chan_ctxt_unlink
// MayUse:  a0:[0..31] a3:[0..31]
// LiveOut: a4
// Trashed: a2 a3 a4 a5
// Preserved: a1 sp
chan_update_tx_power_entry:
l2301A3CE:
	branch CONVERT(Mem0[a0 + 24<i32>:byte], byte, word32) == 0<32> l2301A43E
l2301A3D4:
	word32 a5_10 = 127<i32>
	branch a0 != a3 l2301A408
l2301A3EA:
	word32 a5_12 = CONVERT(Mem0[0x4201A46A<32>:byte], byte, word32)
	word32 a3_11 = CONVERT(Mem0[0x4201A469<32>:byte], byte, word32)
	branch CONVERT(SLICE(a3_11, byte, 0), byte, int32) >= CONVERT(SLICE(a5_12, byte, 0), byte, int32) l2301A404
l2301A402:
	a5_12 = a3_11
l2301A404:
	a5_10 = CONVERT(SLICE(a5_12, byte, 0), byte, int32)
l2301A408:
	branch a0 != Mem0[0x4201AA28<32>:int32] l2301A42E
l2301A410:
	word32 a3_28 = CONVERT(Mem0[0x4201AA42<32>:byte], byte, word32)
	branch a5_10 >= CONVERT(SLICE(a3_28, byte, 0), byte, int32) l2301A420
l2301A41E:
	a3_28 = a5_10
l2301A420:
	word32 a5_37 = a3_28 << 0x18<u32>
	a4 = CONVERT(Mem0[0x4201AA41<32>:int8], int8, int32)
	a5_10 = a5_37 >> 24<i32>
	branch a4 < a5_37 >> 24<i32> l2301A438
l2301A438:
	a5_10 = a4
l2301A42E:
	a4 = 127<i32>
	branch a5_10 != 127<i32> l2301A43A
l2301A43A:
	Mem46[a0 + 12<i32>:byte] = SLICE(a5_10, byte, 0)
l2301A43E:
	return a4
l2301A436:
	return 127<i32>
chan_update_tx_power_exit:


word32 chan_ctxt_link(word32 ra, word32 a0, word32 a1, word32 a3, word32 s2, word32 mstatus, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vif_mgmt_switch_channel
//      scanu_join_cfm_handler
//      apm_start_cac_req_handler
//      apm_start_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31]
// LiveOut: a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a7 ra sp t0 t1 tp
chan_ctxt_link_entry:
l2301A440:
	word32 s3_118 = a0
	word32 s2_117 = a1 + 0x4201D168<32>
	branch Mem28[a0 + 0x4201AA28<32>:word32] == 0<32> l2301A49A
l2301A49A:
	branch CONVERT(Mem28[a1 + 0x4201D17F<32>:byte], byte, word32) != 255<i32> l2301A4C8
l2301A4C8:
	word32 s0_59 = Mem28[359<i32>:word32]
	word32 s1_101 = CONVERT(Mem28[a1 + 0x4201D180<32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem63[0xCFFF967<32>:word32] = s0_59
	Mem65[a0 + 0x4201AA28<32>:word32] = a1 + 0x4201D168<32>
	Mem66[a1 + 0x4201D180<32>:byte] = SLICE(s1_101, byte, 0)
	branch s1_101 != 1<32> l2301A53C
l2301A506:
	word32 a5_68 = CONVERT(Mem66[s0_59 + 114<i32>:byte], byte, word32)
	Mem70[a1 + 0x4201D17E<32>:byte] = SLICE(s1_101, byte, 0)
	Mem74[s0_59 + 114<i32>:byte] = SLICE(a5_68 + 1<32>, byte, 0)
	s1_101 = co_list_push_back(a1 + 0x4201D168<32>, a5_68 + 1<32>)
	word32 s0_78 = Mem74[a5_68 + 0x25<32>:word32]
	branch a5_68 != 1<32> l2301A558
l2301A558:
	Mem79[a5_68 + 0x17<32>:byte] = SLICE(s1_101, byte, 0)
	Mem80[s0_78 + 36<i32>:word32] = 0<32>
l2301A526:
	branch (CONVERT(Mem74[s0_78 + 112<i32>:byte], byte, word32) & 0xC<32>) != 0<32> l2301A53C
l2301A52E:
	branch CONVERT(Mem74[s0_78 + 114<i32>:byte], byte, word32) != s1_101 l2301A550
l2301A550:
	word32 s0_175
	word32 a1_176
	word32 a4_177
	chan_cde_evt(ra, mstatus, s2, dwLoc08, out s0_175, out s1_101, out a1_176, out a3, out a4_177, out s2_117, out s3_118)
l2301A536:
	word32 s0_178
	word32 a1_179
	word32 a2_180
	word32 a4_181
	word32 a5_182
	word32 s4_183
	chan_switch_start(ra, a1 + 0x4201D168<32>, a3, mstatus, s2, out s0_178, out s1_101, out a1_179, out a2_180, out a3, out a4_181, out a5_182, out s2_117, out s3_118, out s4_183)
l2301A53C:
l2301A54C_thunk_chan_update_tx_power:
	word32 a4_139 = chan_update_tx_power(s2_117, a3)
	s1Out = s1_101
	a4Out = a4_139
	s2Out = s2_117
	s3Out = s3_118
	s4Out = dwArg04
	return s1
chan_ctxt_link_exit:
l2301A4AE:
	assert_err()
l2301A480:
	assert_err()


word32 chan_ctxt_unlink(word32 ra, word32 s0, word32 a0, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArg0108, word32 dwArg0168, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s6Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vif_mgmt_switch_channel
//      sm_delete_resources
//      apm_stop
//      apm_stop_cac_req_handler
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +0108:[0..31] Stack +0168:[0..31]
// LiveOut: a4 ra s1 s10 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: a7 s0 sp
chan_ctxt_unlink_entry:
l2301A562:
	word32 a4_104 = a0 + 1496<i32>
	branch s0 != 0<32> l2301A5A2
l2301A5A2:
	word32 a5_254
	word32 s1_34 = co_list_extract(0x4201D1E8<32>, a0 + 0x4201AA2C<32>, a0 + 1496<i32>, 1496<i32>, out a5_254)
	Mem37[s1_34 + 78<i32>:byte] = 0<8>
	Mem38[s1_34 + 64<i32>:word32] = 0<32>
	Mem41[s0 + 24<i32>:byte] = SLICE(CONVERT(Mem38[s0 + 24<i32>:byte], byte, word32) + 0xFFFFFFFF<32>, byte, 0)
	word32 a1_114 = a0 + 0x4201AA2C<32>
	word32 a5_42 = CONVERT(Mem41[s0 + 22<i32>:byte], byte, word32)
	branch a5_42 == 0<32> l2301A648
l2301A5D6:
	a3 = Mem41[a5_42 + 104<i32>:word32]
	Mem48[a5_42 + 0xF3FFF868<32>:word32] = a3
	a4_104 = 0xF3FFF800<32>
	word32 a5_49 = CONVERT(Mem48[s0 + 24<i32>:byte], byte, word32)
	branch a5_49 != 0<32> l2301A656
l2301A5F4:
	word32 s2_54 = Mem48[0x4201D1FC<32>:int32]
	word32 a5_264
	word32 s1_56 = co_list_extract(0x4201D1E0<32>, s0, 0xF3FFF800<32>, a5_49, out a5_264)
	Mem59[s0 + 22<i32>:byte] = 0<8>
	word32 s1_61 = Mem59[0xF3FFF820<32>:word32]
	word32 a5_63 = CONVERT(Mem59[s1_56 + 114<i32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem64[s1_61 + 114<i32>:byte] = SLICE(a5_63, byte, 0)
	a1_114 = s0
	branch s0 != 0xF3FFF800<32> l2301A634
l2301A634:
	branch s2_54 != s0 l2301A622
l2301A638:
	Mem65[s1_61 + 36<i32>:word32] = 0<32>
l2301A61E:
	Mem66[s1_61 + 32<i32>:word32] = 0<32>
l2301A622:
	branch s2_54 != 0<32> l2301A63C
l2301A63C:
	Mem74[s1_61 + 112<i32>:byte] = SLICE(CONVERT(Mem70[s1_61 + 112<i32>:byte], byte, word32) | 32<i32>, byte, 0)
l2301A626:
	a4_104 = 1<32>
	branch a5_63 <=u 1<32> l2301A66C
l2301A66C:
	branch a5_63 != 1<32> l2301A648
l2301A670:
	word32 s4_273
	word32 s3_272
	word32 s2_271
	word32 a5_270
	word32 a2_269
	word32 s1_268
	ra = chan_switch_start(ra, 0x4201D1E0<32>, a3, mstatus, dwLoc08, out s0, out s1_268, out a1_114, out a2_269, out a3, out a4_104, out a5_270, out s2_271, out s3_272, out s4_273)
l2301A62C:
	word32 s2_266
	word32 s3_267
	word32 s1_265
	ra = chan_cde_evt(ra, mstatus, dwLoc08, dwArg08, out s0, out s1_265, out a1_114, out a3, out a4_104, out s2_266, out s3_267)
l2301A648:
	branch CONVERT(Mem125[s0 + 24<i32>:byte], byte, word32) != 0<32> l2301A656
l2301A64E:
	ra = chan_ctxt_del(ra, CONVERT(Mem125[s0 + 23<i32>:byte], byte, word32), dwArg28, out a1_114, out a3, out a4_104)
l2301A656:
	word32 s0_169
	word32 s1_170
	word32 s10_171
	word32 s6_177
	word32 a3_183
	word32 s9_263
	word32 s3_259
	word32 s4_260
	word32 s7_262
	word32 s5_261
	word32 a1_255
	word32 a2_256
	word32 s2_258
	word32 a4_257
	word32 ra_184 = chan_tbtt_schedule(ra, 0<32>, a1_114, a3, a4_104, mstatus, dwLoc08, dwArg98, dwArg0108, dwArg0168, out s0_169, out s1_170, out a1_255, out a2_256, out a3_183, out a4_257, out s2_258, out s3_259, out s4_260, out s5_261, out s6_177, out s7_262, out s9_263, out s10_171)
	0<32> = dwArg38
l2301A668_thunk_chan_update_tx_power:
	word32 a4_194 = chan_update_tx_power(s0_169, a3_183)
	s1Out = s1_170
	a4Out = a4_194
	s6Out = s6_177
	s10Out = s10_171
	return ra_184
chan_ctxt_unlink_exit:
l2301A588:
	assert_err()


void hal_dma_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_init
// MayUse: 
// LiveOut:
// Trashed: a0 a2 a5 s1 tp
// Preserved: s0 sp
hal_dma_init_entry:
l2301A678:
	co_list_init(0x4201D24C<32>)
	Mem17[0x4201D264<32>:word16] = Mem11[0x44A000A4<32>:word16]
	co_list_init(0x4201D254<32>)
	Mem21[0x4201D266<32>:word16] = Mem17[0x44A000AC<32>:word16]
	return
hal_dma_init_exit:


void hal_dma_push(word32 s0, word32 a1, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scanu_start
// MayUse:  a1:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
hal_dma_push_entry:
l2301A6BA:
	word32 s1_13 = a1
	word32 a0_14 = Mem9[s0 + 4<i32>:word32]
	branch a5 == 0<32> l2301A72E
l2301A72E:
	Mem15[s0 + 10<i32>:word16] = 0<16>
l2301A6CA:
	word32 a5_19 = CONVERT(Mem9[a1 + 0x2308DDD0<32>:byte], byte, word32)
	Mem25[s0 + 10<i32>:word16] = SLICE(a5_19 << 8<i32> | (a5_19 | 16<i32>) | 0x1000000<32>, word16, 0)
	__csrrc(mstatus, 8<32>)
	s1_13 = co_list_push_back(a0_14, a1 << 3<u32>)
	__csrrs(mstatus, 8<32>)
	a1 = a0_14
	a0_14 = (a1 << 3<u32>) + 0x4201D24C<32>
l2301A704:
	word32 a0_56
	word32 a6_141
	word32 a7_142
	word32 a1_139
	word32 a5_140
	word32 a4_102
	word32 a3_47
	word32 a2_46
	memcpy(a0_14, a1, CONVERT(Mem36[s0 + 8<i32>:uint16], uint16, word32), out a1_139, out a2_46, out a3_47, out a4_102, out a5_140, out a6_141, out a7_142)
	branch s1_13 == 0<32> l2301A734
l2301A734:
	a0_56 = 64<i32>
l2301A712:
	word32 a5_57 = 1<32>
	branch s1_13 == 1<32> l2301A744
l2301A744:
	a0_56 = 0x10000000<32>
l2301A738:
l2301A740_thunk_ke_evt_set:
	word32 a5_157
	ke_evt_set(a0_56, a4_102, mstatus, out a5_157)
	return
hal_dma_push_exit:
l2301A718:
l2301A71C:
	word32 s4_151
	word32 s3_150
	word32 s1_143
	word32 a1_145
	word32 a4_147
	word32 s2_149
	word32 a0_144
	word32 a2_146
	word32 a5_148
	word32 s8_152
	word32 a0_153
	word32 a1_154
	word32 s4_155
	word32 s8_156
	puts(vTaskDelay(1000<i32>, a2_46, a3_47, a4_102, a5_57, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_143, out a0_144, out a1_145, out a2_146, out a3_47, out a4_147, out a5_148, out s2_149, out s3_150, out s4_151, out s8_152) + -1584<i32>, out a0_153, out a1_154, out a2_46, out a4_102, out a5_57, out s4_155, out s8_156)


void hal_dma_evt(word32 a0, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 s1 tp
// Preserved: s0 sp
hal_dma_evt_entry:
l2301A74A:
	word32 a0_12
	branch a0 != 0<32> l2301A786
l2301A786:
	a0_12 = 0x10000000<32>
l2301A756:
	a0_12 = 64<i32>
l2301A75A:
	ke_evt_clear(a0_12, a4, mstatus)
	__csrrc(mstatus, 8<32>)
	word32 a5_24 = 0x4201D24C<32>
l2301A770:
	word32 a0_30 = co_list_pop_front(a4, a5_24, out a5_24)
	__csrrs(mstatus, 8<32>)
	branch a0_30 != 0<32> l2301A78C
l2301A78C:
	branch a5_24 == 0<32> l2301A796
l2301A790:
	call a5_24 (retsize: 0;)
		uses: a4:a4,a5:a5_31
		defs: a5:a5_39
l2301A796:
	__csrrc(mstatus, 8<32>)
l2301A77C:
	return
hal_dma_evt_exit:


word32 blmac_soft_reset_getf(word32 s0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_stop
//      hal_machw_init
// MayUse:  s0:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a5
// Preserved: s0 sp
blmac_soft_reset_getf_entry:
l2301A79C:
	branch (s0 & -2<i32>) == 0<32> l2301A7C6
l2301A7C6:
	return s0 & 255<i32>
blmac_soft_reset_getf_exit:
l2301A7AE:
	assert_err()


void blmac_wt_2_crypt_clk_ratio_setf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
blmac_wt_2_crypt_clk_ratio_setf_entry:
l2301A7D2:
	Mem9[0x44B000F0<32>:word32] = a0 | Mem0[0x44B000F0<32>:int32] & 0xFFFFFFFC<32>
	return
blmac_wt_2_crypt_clk_ratio_setf_exit:


word32 blmac_rx_flow_cntrl_en_setf.constprop.9(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_init
//      hal_machw_reset
// MayUse:  a5:[0..31]
// LiveOut: a3
// Trashed: a3 a4 a5
// Preserved: sp
blmac_rx_flow_cntrl_en_setf.constprop.9_entry:
l2301A7E4:
	word32 a3_5 = Mem0[a5 + 84<i32>:word32]
	Mem11[(a5 & 0xEFFFFFFF<32> | 0x10000000<32>) + 84<i32>:word32] = a3_5
	return a3_5
blmac_rx_flow_cntrl_en_setf.constprop.9_exit:


word32 blmac_key_sto_ram_reset_setf.constprop.12(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_machw_init
//      hal_machw_monitor_mode
// MayUse:  a5:[0..31]
// LiveOut: a4
// Trashed: a3 a4 a5
// Preserved: sp
blmac_key_sto_ram_reset_setf.constprop.12_entry:
l2301A7F8:
	Mem11[(a5 & 0xFDFFFFFF<32> | 0x2000000<32>) + 76<i32>:word32] = Mem0[a5 + 76<i32>:word32]
	return 0x2000000<32>
blmac_key_sto_ram_reset_setf.constprop.12_exit:


void hal_machw_idle_req(word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_set_idle_req_handler
//      mm_start_req_handler
//      mm_force_idle_req_handler
//      mm_hw_config_handler
// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
hal_machw_idle_req_entry:
l2301A80C:
	word32 a5_5 = Mem0[a4 + 56<i32>:word32]
	branch (a4 & 0xF<32>) != 0<32> l2301A82E
l2301A82E:
	__csrrc(mstatus, 8<32>)
	Mem12[a5_5 + 316<i32>:word32] = Mem0[a5_5 + 288<i32>:int32] + 0xC000350<32>
	Mem15[0x44B08088<32>:word32] = 32<i32>
	Mem18[0x44B0808C<32>:word32] = Mem15[0x44B0808C<32>:int32] | 32<i32>
	Mem19[a5_5 + 56<i32>:word32] = 0<32>
	Mem23[0x44B08008<32>:word32] = Mem19[0x44B08004<32>:word32]
	__csrrs(mstatus, 8<32>)
	return
l2301A816:
l2301A82A_thunk_assert_rec:
	word32 a2_44
	word32 a4_45
	word32 a5_46
	assert_rec(mstatus, out a2_44, out a4_45, out a5_46)
	return
hal_machw_idle_req_exit:


void hal_machw_stop(word32 s0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_reset_req_handler
// MayUse:  s0:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: sp
hal_machw_stop_entry:
l2301A874:
	Mem8[0x51<32>:word32] = 0x44B08000<32>
l2301A880:
	branch blmac_soft_reset_getf(s0) != 0<32> l2301A880
l2301A886:
	return
hal_machw_stop_exit:


word32 hal_machw_init(word32 ra, word32 s0, word32 dwArg18, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_init
// MayUse:  ra:[0..31] s0:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
hal_machw_init_entry:
l2301A88C:
	Mem14[0x51<32>:word32] = 0x44B08000<32>
l2301A89E:
	branch blmac_soft_reset_getf(s0) != 0<32> l2301A89E
l2301A8A4:
	Mem22[0x44B00404<32>:word32] = 0x24F637<32>
	Mem24[0x44B00400<32>:word32] = 1<32>
	Mem25[0x44B00400<32>:word32] = 0<32>
	Mem27[0x44B00400<32>:word32] = 105<i32>
	Mem31[0x44B00400<32>:word32] = Mem27[0x44B00400<32>:int32] & -33<i32>
	Mem34[0x50100023<32>:word32] = 0x44920000<32>
	word32 a0_35 = phy_get_mac_freq()
	word32 s0_36 = Mem34[0x44B000E4<32>:int32]
	Mem42[0x44B000E4<32>:word32] = Mem34[0x44B000E4<32>:int32] & -256<i32> | 40<i32>
	word32 a5_50 = (Mem42[0x44B000E4<32>:int32] >>u 8<i32> & 1023<i32>) + a0_35 >>u (s0_36 & 255<i32>)
	word32 s2_52 = a5_50 << 8<i32> & 0xFFFF00<32>
	branch (a5_50 << 8<i32> & 0xFC0000<32>) == 0<32> l2301A93E
l2301A93E:
	Mem66[0x44B000E4<32>:word32] = Mem42[0x44B000E4<32>:int32] & 0xFFFC00FF<32> | s2_52
	Mem73[0x44B000E4<32>:word32] = Mem66[0x44B000E4<32>:int32] & 0xF003FFFF<32> | 0x2200000<32>
	Mem91[0x44B000E8<32>:word32] = CONVERT(SLICE(Mem73[0x44B000E8<32>:int32] >>u 8<i32>, word16, 0), word16, word32) + a0_35 >>u (s0_36 & 255<i32>) << 8<i32> & 0xFFFF00<32> | Mem73[0x44B000E8<32>:int32] & 0xFF0000FF<32>
	Mem98[0x44B000EC<32>:word32] = Mem91[0x44B000EC<32>:int32] & 0xC00FFFFF<32> | 0x2700000<32>
	word32 a5_104 = (Mem98[0x44B000EC<32>:int32] >>u 10<i32> & 1023<i32>) + a0_35 >>u (s0_36 & 255<i32>)
	word32 s2_106 = a5_104 << 10<i32> & 0x3FFFC00<32>
	branch (a5_104 << 10<i32> & 0x3F00000<32>) == 0<32> l2301A9F8
l2301A9F8:
	Mem120[0x44B000EC<32>:word32] = Mem98[0x44B000EC<32>:int32] & 0xFFF003FF<32> | s2_106
	Mem125[0x44B000EC<32>:word32] = Mem120[0x44B000EC<32>:int32] & -1024<i32> | 180<i32>
	word32 a0_122 = 3<32>
	branch a0_35 <=u 0x1D<32> l2301AA36
l2301AA2A:
	a0_122 = 2<32>
	branch a0_35 <=u 59<i32> l2301AA36
l2301AA34:
	a0_122 = 1<32>
l2301AA36:
	blmac_wt_2_crypt_clk_ratio_setf(a0_122)
	Mem154[0x44B000F4<32>:word32] = (Mem125[0x44B000F4<32>:int32] >>u 8<i32> & 0xFFFFFFF<32>) + a0_35 >>u (s0_36 & 255<i32>) << 8<i32> & 0xFFFF00<32> | Mem125[0x44B000F4<32>:int32] & 0xFF0000FF<32>
	Mem165[0x44B000F8<32>:word32] = (Mem154[0x44B000F8<32>:int32] >>u 8<i32> & 0xFFFFFFF<32>) + a0_35 >>u (s0_36 & 255<i32>) << 8<i32> & 0xFFFF00<32> | Mem154[0x44B000F8<32>:int32] & 0xFF0000FF<32>
	word32 s2_171 = (Mem165[0x44B00104<32>:int32] >>u 0x14<u32> & 1023<i32>) + a0_35 >>u (s0_36 & 255<i32>)
	branch (s2_171 << 20<i32> & 0xC0000000<32>) == 0<32> l2301AAD0
l2301AAD0:
	Mem186[0x44B00104<32>:word32] = Mem165[0x44B00104<32>:int32] & 0xC00FFFFF<32> | s2_171 << 20<i32>
	word32 a5_194 = (Mem186[0x44B00104<32>:int32] >>u 10<i32> & 1023<i32>) + a0_35 >>u (s0_36 & 255<i32>)
	word32 s2_196 = a5_194 << 10<i32> & 0x3FFFC00<32>
	branch (a5_194 << 10<i32> & 0x3F00000<32>) == 0<32> l2301AB2A
l2301AB2A:
	Mem210[0x44B00104<32>:word32] = Mem186[0x44B00104<32>:int32] & 0xFFF003FF<32> | s2_196
	word32 s0_214 = (Mem210[0x44B00104<32>:int32] & 1023<i32>) + a0_35 >>u (s0_36 & 255<i32>)
	word32 s2_219 = CONVERT(SLICE(s0_214, word16, 0), word16, word32)
	branch (s0_214 & 0xFFFFC00<32>) == 0<32> l2301AB80
l2301AB80:
	Mem231[0x44B00104<32>:word32] = Mem210[0x44B00104<32>:int32] & -1024<i32> | s2_219
	Mem234[0x8373F1C0<32>:word32] = 0x44B08000<32>
	word32 a5_235 = Mem234[0x8373F198<32>:word32]
	Mem239[0x83000198<32>:word32] = a5_235
	branch Mem239[a5_235 + 216<i32>:int32] >>u 24<i32> >u 0x10<32> l2301ABD2
l2301ABD2:
	word32 s11_402
	word32 a0_257
	word32 t4_403
	word32 s9_400
	word32 s10_401
	word32 s7_398
	word32 s8_399
	word32 s5_396
	word32 s6_397
	word32 s3_394
	word32 s4_395
	word32 a7_392
	word32 s2_393
	word32 a4_390
	word32 a5_391
	word32 a2_388
	word32 a3_389
	word32 s1_386
	word32 a1_387
	word32 ra_265 = printf(ra, 0x23077F68<32>, 8<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_386, out a0_257, out a1_387, out a2_388, out a3_389, out a4_390, out a5_391, out a7_392, out s2_393, out s3_394, out s4_395, out s5_396, out s6_397, out s7_398, out s8_399, out s9_400, out s10_401, out s11_402, out t4_403)
	Mem282[0x44B000D8<32>:word32] = 0x21108<32>
	Mem286[0x44B08080<32>:word32] = 0x800A07C0<32>
	word32 s0_287 = Mem286[0x800A080C<32>:word32]
	Mem291[0x840A080C<32>:word32] = s0_287
	blmac_rx_flow_cntrl_en_setf.constprop.9(0x840A07C0<32>)
	Mem297[0x8000003E<32>:word32] = s0_287
	Mem300[s0_287 + 276<i32>:word32] = 0x3010A<32>
	Mem303[0xFF9000C8<32>:word32] = s0_287
	Mem305[s0_287 + 336<i32>:word32] = 0x1000000<32>
	Mem307[s0_287 + 548<i32>:word32] = 0<32>
	Mem309[s0_287 + 160<i32>:word32] = 0x2000020<32>
	word32 s0_310 = Mem309[0x200006C<32>:word32]
	Mem315[0x300006C<32>:word32] = s0_310
	blmac_key_sto_ram_reset_setf.constprop.12(0x3000020<32>)
	Mem320[s0_310 + 1296<i32>:word32] = 0x1FFFC25<32>
	Mem323[s0_310 + 784<i32>:word32] = Mem320[s0_310 + 784<i32>:int32] | 128<i32>
	word32 s0_327 = phy_get_ntx(a0_257) + 1<32> << 0x1A<u32>
	branch (s0_327 & 0xE0000000<32>) == 0<32> l2301AC9A
l2301AC9A:
	Mem341[0x44B0009C<32>:word32] = Mem323[0x44B0009C<32>:int32] & 0xE3FFFFFF<32> | s0_327
	Mem348[0xE400004B<32>:word32] = Mem341[0xE400004B<32>:word32]
	0<32> = dwArg38
	return ra_265
hal_machw_init_exit:
l2301AC82:
	assert_err()
l2301ABBA:
	assert_err()
l2301AB66:
	assert_err()
l2301AB10:
	assert_err()
l2301AAB6:
	assert_err()
l2301A9DE:
	assert_err()
l2301A924:
	assert_err()


void hal_machw_disable_int(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      my_pbuf_free_custom
// MayUse:  a3:[0..31]
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
hal_machw_disable_int_entry:
l2301ACCE:
	word32 a5_5 = Mem0[a3 + 116<i32>:word32]
	Mem9[(a3 & 0x7FFFFFFF<32>) + 116<i32>:word32] = a5_5
	Mem12[a5_5 + 128<i32>:word32] = Mem9[a5_5 + 128<i32>:int32] & 0x7FFFFFFF<32>
	return
hal_machw_disable_int_exit:


word32 hal_machw_reset(word32 a4, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_force_idle_req
//      bl_reset_evt
// MayUse:  a4:[0..31] Stack +0028:[0..31]
// LiveOut: a4
// Trashed: a1 a2 a3 a4 a5
// Preserved: a0 s0 s1 s2 sp tp
hal_machw_reset_entry:
l2301ACEC:
	branch (Mem7[0x44B00038<32>:word32] & 0xF<32>) == 0<32> l2301AD08
l2301ACFC:
	a4 = helper_record_all_states(0x230779F8<32>, dwArg28)
l2301AD08:
	word32 a5_25 = Mem7[a4 + 76<i32>:word32]
	Mem28[(a4 & -129<i32>) + 76<i32>:word32] = a5_25
	Mem29[a5_25 + 56<i32>:word32] = 0<32>
	Mem31[0xD0<32>:word32] = a5_25
l2301AD22:
	a5_25 = a5_25 & 0xF<32>
	branch a5_25 != 0<32> l2301AD22
l2301AD28:
	word32 a5_38 = Mem31[128<i32>:word32]
	Mem40[0x7C<32>:word32] = a5_38
	word32 a3_41 = blmac_rx_flow_cntrl_en_setf.constprop.9(a5_38)
	Mem49[0x44B0808C<32>:word32] = Mem40[0x44B0808C<32>:int32] & -64<i32>
	Mem51[0x7B<32>:word32] = 0x44B08000<32>
	Mem54[0x37FF1F7<32>:word32] = 0x44B08000<32>
	word32 a5_55 = Mem54[a3_41 + 116<i32>:word32]
	Mem58[(a3_41 & 0x7FFFFFFF<32> | 0x80000000<32>) + 116<i32>:word32] = a5_55
	word32 a4_61 = Mem58[a5_55 + 128<i32>:int32] & 0x7FFFFFFF<32> | 0x80000000<32>
	Mem62[a5_55 + 128<i32>:word32] = a4_61
	Mem65[(a5_55 | 128<i32>) + 76<i32>:word32] = Mem62[a5_55 + 76<i32>:word32]
	return a4_61
hal_machw_reset_exit:


word32 hal_machw_search_addr(word32 a0, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_cntrl_frame_handle
//      apm_auth_handler
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
hal_machw_search_addr_entry:
l2301AD84:
	Mem16[0x44B000BC<32>:word32] = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem0[a0:byte], byte, word32)) | CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) << 16<i32>)
	Mem21[0x44B000C0<32>:word32] = CONVERT(Mem16[a0 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem16[a0 + 4<i32>:byte], byte, word32)
	Mem23[0x44B000C4<32>:word32] = 0x20000000<32>
l2301ADC0:
	word32 a5_26 = Mem23[0x44B000C4<32>:int32]
	branch a5_26 << 2<u32> < 0<32> l2301ADC0
l2301ADCC:
	word32 a0_29 = 255<i32>
	branch a5_26 << 3<u32> < 0<32> l2301ADE2
l2301ADD8:
	a0_29 = (a5_26 >>u 0x10<u32>) + 0xFFFFFFF8<32> & 255<i32>
l2301ADE2:
	a3Out = a5_26 << 2<u32>
	a4Out = a5_26 << 3<u32>
	return a0_29
hal_machw_search_addr_exit:


word32 hal_machw_monitor_mode(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_hw_config_handler
// MayUse:  a4:[0..31]
// LiveOut: a4
// Trashed: a3 a4 a5
// Preserved: sp
hal_machw_monitor_mode_entry:
l2301ADE4:
	Mem9[(a4 & 0xFFFFFFFE<32>) + 116<i32>:word32] = Mem0[a4 + 116<i32>:word32]
	word32 a4_11 = a4 & 0xFFFFFFFE<32> & 0xFFFFFFFD<32>
	Mem12[a4_11 + 116<i32>:word32] = Mem9[(a4 & 0xFFFFFFFE<32>) + 116<i32>:word32]
	word32 a5_13 = Mem12[a4_11 + 76<i32>:word32]
	Mem15[(a4_11 | 1792<i32>) + 76<i32>:word32] = a5_13
	Mem18[0x7FFFFFDE<32>:word32] = 0x42018E58<32>
	word32 a3_19 = Mem18[0x42018E5C<32>:word32]
	Mem21[(a3_19 | 0x7FFFFFDE<32>) + 96<i32>:word32] = a5_13
	word32 a5_22 = Mem21[(a3_19 | 0x7FFFFFDE<32>) + 76<i32>:word32]
	Mem28[((a3_19 | 0x7FFFFFDE<32>) & 0xE3FFFFFF<32> | 0xC000000<32>) + 76<i32>:word32] = a5_22
l2301AE26_thunk_blmac_key_sto_ram_reset_setf.constprop.12:
	return blmac_key_sto_ram_reset_setf.constprop.12(a5_22)
hal_machw_monitor_mode_exit:


word32 hal_machw_sleep_check(ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sleep
// MayUse: 
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t4
// Preserved: s0 sp
hal_machw_sleep_check_entry:
l2301AE2A:
	word32 a0_10 = Mem8[0x44B0808C<32>:int32]
	word32 a5_12 = 0<32>
l2301AE4A:
	word32 s0_35
	branch (1<32> << a5_12 & a0_10) == 0<32> l2301AEA2
l2301AE52:
	word32 a3_21 = a5_12 << 2<u32>
	a3 = a3_21 + 0x44B00128<32>
	word32 a4_30 = -2000<i32> - Mem8[0x44B00120<32>:int32] + Mem8[a3_21 + 0x44B00128<32>:int32]
	branch a4_30 >= 0<32> l2301AEA2
l2301AEA2:
	a5_12 = a5_12 + 1<32>
	branch a5_12 != 9<32> l2301AE4A
l2301AEA8:
	s0_35 = 1<32>
l2301AE6A:
	a3 = Mem8[0x44B00120<32>:int32]
	s0_35 = 0<32>
	branch 0x1000388<32> - a3 + a4_30 >= 0<32> l2301AE98
l2301AE98:
	a3Out = a3
	return s0_35
hal_machw_sleep_check_exit:
l2301AE80:
	assert_err()


void hal_machw_gen_handler(word32 s0, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 tp
// Preserved: s0 s1 sp
hal_machw_gen_handler_entry:
l2301AEAC:
	word32 s0_13 = s0 & a4
	Mem14[s0_13 + 112<i32>:word32] = Mem9[s0 + 116<i32>:word32]
	branch (s0_13 & 0x40001<32>) == 0<32> l2301AED2
l2301AECA:
	word32 a5_322
	a4 = ke_evt_set(0x400000<32>, a4, mstatus, out a5_322)
l2301AED2:
	branch (s0_13 & 0x80002<32>) == 0<32> l2301AEE4
l2301AEDC:
	word32 a5_323
	a4 = ke_evt_set(0x200000<32>, a4, mstatus, out a5_323)
l2301AEE4:
	branch (s0_13 & 4<i32>) == 0<32> l2301AF0C
l2301AEEA:
	branch (Mem14[0x44B00038<32>:word32] & 0xF<32>) == 0<32> l2301AFA6
l2301AFA6:
	Mem42[0x44B0808C<32>:word32] = Mem14[0x44B0808C<32>:int32] & -33<i32>
	Mem46[0x44B08004<32>:word32] = Mem42[0x44B08004<32>:word32]
	word32 a5_324
	a4 = ke_evt_set(0x800000<32>, 0x44B08000<32>, mstatus, out a5_324)
l2301AEF4:
	word32 a5_326
	word32 a2_325
	assert_rec(mstatus, out a2_325, out a4, out a5_326)
l2301AF0C:
	branch (s0_13 & 8<i32>) == 0<32> l2301AF80
l2301AF12:
	word32 s1_63 = Mem62[0x44B08084<32>:int32]
	Mem64[0x44B08088<32>:word32] = s1_63
	branch (s1_63 & 256<i32>) == 0<32> l2301AF2C
l2301AF24:
	word32 a5_327
	a4 = ke_evt_set(0x4000000<32>, a4, mstatus, out a5_327)
l2301AF2C:
	branch (s1_63 & 64<i32>) == 0<32> l2301AF36
l2301AF32:
	a4 = rxl_timeout_int_handler()
l2301AF36:
	branch (s1_63 & 128<i32>) == 0<32> l2301AF44
l2301AF3C:
	word32 a5_331
	ke_evt_set(0x8000000<32>, a4, mstatus, out a5_331)
l2301AF44:
	branch (s1_63 & 1<i32>) == 0<32> l2301AF62
l2301AF4A:
	word32 a2_332
	word32 a4_333
	word32 a5_334
	assert_rec(mstatus, out a2_332, out a4_333, out a5_334)
l2301AF62:
	branch (s1_63 & 2<i32>) == 0<32> l2301AFCE
l2301AFCE:
	branch (s1_63 & 4<i32>) == 0<32> l2301AFEA
l2301AFEA:
	branch (s1_63 & 8<i32>) == 0<32> l2301B006
l2301B006:
	branch (s1_63 & 16<i32>) == 0<32> l2301B022
l2301B022:
	branch (s1_63 & 32<i32>) == 0<32> l2301AF80
l2301B028:
l2301B00C:
l2301AFF0:
l2301AFD4:
l2301AF68:
l2301AF7C:
	word32 a2_335
	word32 a4_336
	word32 a5_337
	assert_rec(mstatus, out a2_335, out a4_336, out a5_337)
l2301AF80:
	branch (s0_13 & 128<i32>) == 0<32> l2301B03E
l2301B03E:
	branch (s0_13 & 256<i32>) == 0<32> l2301B05A
l2301B05A:
	branch s0_13 << 0x13<u32> >= 0<32> l2301B078
l2301B078:
	branch s0_13 << 0x12<u32> >= 0<32> l2301B096
l2301B096:
	branch s0_13 << 0x11<u32> >= 0<32> l2301B0B4
l2301B0B4:
	branch s0_13 << 0x10<u32> >= 0<32> l2301B0D2
l2301B0D2:
	branch s0_13 << 0xF<u32> >= 0<32> l2301B0F0
l2301B0F0:
	branch s0_13 << 0xE<u32> >= 0<32> l2301B10E
l2301B10E:
	branch s0_13 << 0xA<u32> >= 0<32> l2301B12C
l2301B12C:
	branch s0_13 << 9<u32> >= 0<32> l2301B14A
l2301B14A:
	branch s0_13 << 7<u32> >= 0<32> l2301B168
l2301B168:
	branch s0_13 << 6<u32> >= 0<32> l2301B186
l2301B186:
	branch s0_13 << 0xB<u32> >= 0<32> l2301B1A4
l2301B1A4:
	return
l2301B18E:
l2301B170:
l2301B152:
l2301B134:
l2301B116:
l2301B0F8:
l2301B0DA:
l2301B0BC:
l2301B09E:
l2301B080:
l2301B062:
l2301B044:
l2301AF86:
l2301AF9A:
l2301AFA2_thunk_assert_rec:
	word32 a5_330
	word32 a2_328
	word32 a4_329
	assert_rec(mstatus, out a2_328, out a4_329, out a5_330)
	return
hal_machw_gen_handler_exit:


word32 hal_mib_dump(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl60x_fw_dump_statistic
//      cmd_wifi_mib
// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 ra s1 s10
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
hal_mib_dump_entry:
l2301B1AE:
	word32 a0_71
	word32 a1_72
	word32 a2_73
	word32 a4_74
	word32 a5_75
	word32 s4_76
	word32 s8_77
	puts(0x23078024<32>, out a0_71, out a1_72, out a2_73, out a4_74, out a5_75, out s4_76, out s8_77)
	word32 s10_34
	word32 s1_78
	word32 a0_79
	word32 a1_80
	word32 a2_81
	word32 a3_82
	word32 a4_83
	word32 a5_84
	word32 a7_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s5_89
	word32 s6_90
	word32 s7_91
	word32 s8_92
	word32 s9_93
	word32 s11_94
	word32 t4_95
	word32 ra_32 = printf(ra, 0x2307804C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_78, out a0_79, out a1_80, out a2_81, out a3_82, out a4_83, out a5_84, out a7_85, out s2_86, out s3_87, out s4_88, out s5_89, out s6_90, out s7_91, out s8_92, out s9_93, out s10_34, out s11_94, out t4_95)
l2301B1E0_thunk_puts:
	word32 a0_50
	word32 a1_96
	word32 a2_97
	word32 a4_98
	word32 a5_99
	word32 s4_100
	word32 s8_101
	s1Out = puts(0x230727FC<32>, out a0_50, out a1_96, out a2_97, out a4_98, out a5_99, out s4_100, out s8_101)
	a0Out = a0_50
	s10Out = s10_34
	return ra_32
hal_mib_dump_exit:


void mm_monitor_channel_req_handler(word32 ra, word32 s0, word32 a3, word32 a4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
mm_monitor_channel_req_handler_entry:
l2301B1E4:
	word32 a0_18
	word32 a1_19
	word32 a2_20
	word32 s3_29
	word32 s1_151
	word32 a4_152
	word32 a5_153
	word32 s0_150
	word32 a6_154
	word32 s2_155
	word32 s4_156
	word32 s8_157
	word32 a3_21
	word32 ra_25 = ke_msg_alloc(ra, 95<i32>, a3, 40<i32>, a4, mstatus, dwArg08, out s0_150, out s1_151, out a0_18, out a1_19, out a2_20, out a3_21, out a4_152, out a5_153, out a6_154, out s2_155, out s3_29, out s4_156, out s8_157)
	Mem38[1<32>:word32] = a0_18
	Mem41[0x1111111D<32>:word32] = a0_18
	Mem44[0x22222232<32>:word32] = a0_18
	Mem47[0x33333347<32>:word32] = a0_18
	Mem50[0x4444445C<32>:word32] = a0_18
	Mem53[0x55555571<32>:word32] = a0_18
	Mem56[0x66666686<32>:word32] = a0_18
	Mem59[a0_18 + 8<i32>:word32] = 0<32>
	Mem60[0x7777779B<32>:word32] = a0_18
	Mem63[a2_20 + 4<i32>:word32] = a0_18
	word32 a2_66 = CONVERT(SLICE(a2_20, word16, 0), word16, word32)
	branch a1_19 != 0<32> l2301B282
l2301B282:
	a3_21 = a2_66 + 10<i32>
	branch true l2301B25A
l2301B28A:
	a3_21 = a2_66 + -10<i32>
l2301B25A:
	word32 s0_97
	word32 s1_158
	word32 s2_159
	word32 s3_160
	word32 fflags_161
	word32 frm_162
	phy_set_channel(ra_25, 0<32>, CONVERT(a1_19 != 0<32>, bool, word32), CONVERT(SLICE(a3_21, word16, 0), word16, word32), s3_29, fflags, frm, s0, dwArg14, dwArg0148, out s0_97, out s1_158, out s2_159, out s3_160, out fflags_161, out frm_162)
	Mem117[s0_97:word32] = 0<32>
	word32 s1_163
	word32 a0_164
	word32 a1_165
	word32 a2_166
	word32 a3_167
	word32 a4_168
	word32 a5_169
	word32 s2_170
	word32 s3_171
	word32 s4_172
	word32 s8_173
	ke_msg_send(s0_97, mstatus, out s1_163, out a0_164, out a1_165, out a2_166, out a3_167, out a4_168, out a5_169, out s2_170, out s3_171, out s4_172, out s8_173)
	return
mm_monitor_channel_req_handler_exit:


void mm_monitor_enable_req_handler(word32 ra, word32 s0, word32 a3, word32 a4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mm_monitor_enable_req_handler_entry:
l2301B290:
	word32 a0_18
	word32 s0_179
	word32 s1_180
	word32 a1_181
	word32 a2_182
	word32 a3_183
	word32 a4_184
	word32 a5_185
	word32 a6_186
	word32 s2_187
	word32 s3_188
	word32 s4_189
	word32 s8_190
	word32 ra_25 = ke_msg_alloc(ra, 93<i32>, a3, 40<i32>, a4, mstatus, dwLoc38, out s0_179, out s1_180, out a0_18, out a1_181, out a2_182, out a3_183, out a4_184, out a5_185, out a6_186, out s2_187, out s3_188, out s4_189, out s8_190)
	Mem37[1<32>:word32] = a0_18
	Mem40[0x1111111D<32>:word32] = a0_18
	Mem43[0x22222232<32>:word32] = a0_18
	Mem46[0x33333347<32>:word32] = a0_18
	Mem49[0x4444445C<32>:word32] = a0_18
	Mem52[0x55555571<32>:word32] = a0_18
	Mem55[0x66666686<32>:word32] = a0_18
	Mem58[a0_18 + 8<i32>:word32] = 0<32>
	Mem59[0x7777779B<32>:word32] = a0_18
	word32 s1_60 = Mem59[0x77777777<32>:word32]
	Mem63[0x7777777B<32>:word32] = a0_18
	word32 s3_88
	word32 t1_191
	word32 a0_192
	word32 a1_193
	word32 a2_194
	word32 a3_195
	word32 a4_196
	word32 a5_197
	word32 s0_198
	word32 s1_199
	word32 s2_200
	word32 s3_201
	word32 fflags_202
	word32 frm_203
	phy_set_channel(phy_init(memset(ra_25, fp + -80<i32>, 0<32>, 64<i32>, out t1_191, out a0_192, out a1_193, out a2_194, out a3_195, out a4_196, out a5_197), s1_60, dwLoc18, out s3_88), 0<32>, 0<32>, 0xFFF985<32>, s3_88, fflags, frm, dwLoc4C, s0, dwArg0108, out s0_198, out s1_199, out s2_200, out s3_201, out fflags_202, out frm_203)
	word32 a4_204
	word32 s2_205
	word32 s0_140 = mm_active(mstatus, out a4_204, out s2_205)
	Mem149[s0_140:word32] = 0<32>
	word32 s1_206
	word32 a0_207
	word32 a1_208
	word32 a2_209
	word32 a3_210
	word32 a4_211
	word32 a5_212
	word32 s2_213
	word32 s3_214
	word32 s4_215
	word32 s8_216
	ke_msg_send(s0_140, mstatus, out s1_206, out a0_207, out a1_208, out a2_209, out a3_210, out a4_211, out a5_212, out s2_213, out s3_214, out s4_215, out s8_216)
	return
mm_monitor_enable_req_handler_exit:


void mm_cfg_rssi_req_handler(word32 a1, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
mm_cfg_rssi_req_handler_entry:
l2301B33E:
	word32 s1_13 = CONVERT(Mem11[a1:byte], byte, word32)
	branch CONVERT(Mem11[s1_13 + 0x4201AA3E<32>:byte], byte, word32) == 0<32> l2301B384
l2301B384:
	Mem33[s1_13 + 0x4201AA5E<32>:byte] = SLICE(CONVERT(Mem11[a1 + 1<i32>:int8], int8, int32), byte, 0)
	word32 a4_34 = CONVERT(Mem33[a1 + 2<i32>:byte], byte, word32)
	Mem35[s1_13 + 0x4201AA60<32>:byte] = 0<8>
	Mem36[s1_13 + 0x4201AA5F<32>:byte] = SLICE(a4_34, byte, 0)
	0<32> = dwArg38
	return
mm_cfg_rssi_req_handler_exit:
l2301B36A:
	assert_err()


void mm_set_ps_options_req_handler(word32 ra, word32 a1, word32 a3, word32 mstatus, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
mm_set_ps_options_req_handler_entry:
l2301B3B0:
	word32 s1_15 = CONVERT(Mem13[a1:byte], byte, word32)
	branch CONVERT(Mem13[s1_15 + 0x4201AA3E<32>:byte], byte, word32) == 0<32> l2301B3FE
l2301B3FE:
	Mem41[s1_15 + 0x4201AA44<32>:word16] = SLICE(CONVERT(Mem13[a1 + 2<i32>:uint16], uint16, word32), word16, 0)
	word32 a4_42 = CONVERT(Mem41[a1 + 4<i32>:byte], byte, word32)
	Mem43[s1_15 + 0x4201AA46<32>:byte] = SLICE(a4_42, byte, 0)
	word32 s0_81
	word32 s1_82
	word32 a0_83
	word32 a3_84
	word32 s2_85
	word32 s3_86
	word32 s4_87
	word32 s8_88
	ke_msg_send_basic(ra, 76<i32>, a3, a4_42, mstatus, dwLoc28, out s0_81, out s1_82, out a0_83, out a3_84, out s2_85, out s3_86, out s4_87, out s8_88)
	0<32> = dwArg0128
	return
mm_set_ps_options_req_handler_exit:
l2301B3E0:
	assert_err()


void mm_tim_update_req_handler(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t1 t3 tp
// Preserved: sp
mm_tim_update_req_handler_entry:
l2301B434:
	mm_tim_update(a1)
	return
mm_tim_update_req_handler_exit:


void mm_bcn_change_req_handler(word32 ra, word32 a1, word32 a4, word32 s3, word32 s5, word32 s6, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg7C, word32 dwArgB8, word32 dwArgE8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +007C:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mm_bcn_change_req_handler_entry:
l2301B446:
	mm_bcn_change(ra, a1, a4, s3, s5, s6, fflags, frm, mstatus, dwArg08, dwArg7C, dwArgB8, dwArgE8, dwArg0118)
	return
mm_bcn_change_req_handler_exit:


void mm_remain_on_channel_req_handler(word32 ra, word32 a1, word32 a3, word32 s2, word32 mstatus, word32 dwArg18, word32 dwArg1C, word32 dwArgB8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mm_remain_on_channel_req_handler_entry:
l2301B458:
	word32 a4_24
	word32 ra_35 = chan_roc_req(ra, a3, a1, a3, a3, s2, mstatus, s2, dwLoc08, dwArg18, dwArg1C, dwArgB8, dwArgC8, out a4_24)
	branch a3 == 0<32> l2301B498
l2301B474:
	word32 a0_51
	word32 s1_60
	word32 s2_61
	word32 s3_143
	word32 a6_142
	word32 a5_141
	word32 a4_140
	word32 a3_139
	word32 a2_138
	word32 a1_137
	word32 s0_136
	word32 s4_144
	word32 s8_145
	ke_msg_alloc(ra_35, 71<i32>, a3, 3<32>, a4_24, mstatus, dwLoc08, out s0_136, out s1_60, out a0_51, out a1_137, out a2_138, out a3_139, out a4_140, out a5_141, out a6_142, out s2_61, out s3_143, out s4_144, out s8_145)
	word32 a4_69 = CONVERT(Mem18[s1_60:byte], byte, word32)
	Mem70[a0_51 + 1<i32>:byte] = SLICE(s2_61, byte, 0)
	Mem71[a0_51:byte] = SLICE(a4_69, byte, 0)
	Mem73[a0_51 + 2<i32>:byte] = 4<8>
	word32 s1_146
	word32 a0_147
	word32 a1_148
	word32 a2_149
	word32 a3_150
	word32 a4_151
	word32 a5_152
	word32 s2_153
	word32 s3_154
	word32 s4_155
	word32 s8_156
	ke_msg_send(a0_51, mstatus, out s1_146, out a0_147, out a1_148, out a2_149, out a3_150, out a4_151, out a5_152, out s2_153, out s3_154, out s4_155, out s8_156)
l2301B498:
	return
mm_remain_on_channel_req_handler_exit:


void mm_sta_del_req_handler(word32 ra, word32 s1, word32 a1, word32 s2, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg88, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0088:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
mm_sta_del_req_handler_entry:
l2301B4A6:
	word32 a3_18
	word32 a4_19
	word32 s0_78
	word32 s1_79
	word32 a0_80
	word32 a3_81
	word32 s2_82
	word32 s3_83
	word32 s4_84
	word32 s8_85
	ke_msg_send_basic(mm_sta_del(ra, s1, CONVERT(Mem5[a1:byte], byte, word32), s2, mstatus, dwArg28, dwArg38, ra, dwArg88, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out a3_18, out a4_19), 0xD<32>, a3_18, a4_19, mstatus, dwLoc18, out s0_78, out s1_79, out a0_80, out a3_81, out s2_82, out s3_83, out s4_84, out s8_85)
	return
mm_sta_del_req_handler_exit:


void mm_sta_add_req_handler(word32 ra, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg28, word32 dwArg4C, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mm_sta_add_req_handler_entry:
l2301B4CA:
	word32 a0_18
	word32 a4_22
	word32 a5_23
	word32 s1_27
	word32 s2_28
	word32 s0_49
	word32 a0_68
	word32 s0_110
	word32 a1_111
	word32 a2_112
	word32 a3_113
	word32 a6_114
	word32 s3_115
	word32 s4_116
	word32 s8_117
	word32 s4_118
	word32 s5_119
	mm_sta_add(ke_msg_alloc(ra, 0xB<32>, a3, 3<32>, a4, mstatus, dwArg08, out s0_110, out s1_27, out a0_18, out a1_111, out a2_112, out a3_113, out a4_22, out a5_23, out a6_114, out s2_28, out s3_115, out s4_116, out s8_117), s1_27, s1_27, a0_18 + 1<i32>, a4_22, a5_23, s2_28, s7, mstatus, dwArg00, dwArg04, dwArg08, dwArg28, dwArg4C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgE8, dwArg0108, out s0_49, out a0_68, out s4_118, out s5_119)
	Mem69[s0_49:byte] = SLICE(a0_68, byte, 0)
	word32 s1_120
	word32 a0_121
	word32 a1_122
	word32 a2_123
	word32 a3_124
	word32 a4_125
	word32 a5_126
	word32 s2_127
	word32 s3_128
	word32 s4_129
	word32 s8_130
	ke_msg_send(s0_49, mstatus, out s1_120, out a0_121, out a1_122, out a2_123, out a3_124, out a4_125, out a5_126, out s2_127, out s3_128, out s4_129, out s8_130)
	return
mm_sta_add_req_handler_exit:


void mm_key_del_req_handler(word32 ra, word32 a1, word32 mstatus, word32 dwArg38, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: s0 sp
mm_key_del_req_handler_entry:
l2301B504:
	branch (Mem11[0x44B000D8<32>:int32] >>u 24<i32>) + 1<32> >= CONVERT(Mem11[a1:byte], byte, word32) l2301B540
l2301B540:
	word32 a4_33
	word32 a2_83
	word32 s2_84
	word32 s3_85
	word32 s6_86
	word32 s0_87
	word32 s1_88
	word32 a0_89
	word32 a3_90
	word32 s2_91
	word32 s3_92
	word32 s4_93
	word32 s8_94
	ke_msg_send_basic(ra, 39<i32>, mm_sec_machwkey_del(CONVERT(Mem11[a1:byte], byte, word32), dwArg0108, out a2_83, out a4_33, out s2_84, out s3_85, out s6_86), a4_33, mstatus, dwLoc08, out s0_87, out s1_88, out a0_89, out a3_90, out s2_91, out s3_92, out s4_93, out s8_94)
	0<32> = dwArg38
	return
mm_key_del_req_handler_exit:
l2301B528:
	assert_err()


void mm_key_add_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: s0 sp
mm_key_add_req_handler_entry:
l2301B562:
	word32 s0_26
	word32 s1_111
	word32 a0_112
	word32 a1_113
	word32 a2_114
	word32 a3_115
	word32 a4_116
	word32 a5_117
	word32 a6_118
	word32 s2_119
	word32 s3_120
	word32 s4_121
	word32 s8_122
	word32 ra_25 = ke_msg_alloc(ra, 37<i32>, a3, 2<32>, a4, mstatus, dwArg08, out s0_26, out s1_111, out a0_112, out a1_113, out a2_114, out a3_115, out a4_116, out a5_117, out a6_118, out s2_119, out s3_120, out s4_121, out s8_122)
	branch CONVERT(Mem15[s0_26:byte], byte, word32) <=u 3<32> l2301B59C
l2301B59C:
	branch CONVERT(Mem15[s0_26 + 4<i32>:byte], byte, word32) <=u 32<i32> l2301B5C0
l2301B5C0:
	branch CONVERT(Mem15[s0_26 + 40<i32>:byte], byte, word32) <=u 5<32> l2301B5E2
l2301B5E2:
	word32 a0_59
	word32 s1_69
	word32 s0_123
	word32 a3_124
	word32 a4_125
	word32 a5_126
	word32 s2_127
	word32 s3_128
	word32 s4_129
	word32 s5_130
	mm_sec_machwkey_wr(ra_25, s0_26, dwArgF8, out s0_123, out s1_69, out a0_59, out a3_124, out a4_125, out a5_126, out s2_127, out s3_128, out s4_129, out s5_130)
	Mem81[s1_69 + 1<i32>:byte] = SLICE(a0_59, byte, 0)
	Mem82[s1_69:byte] = 0<8>
	word32 s1_131
	word32 a0_132
	word32 a1_133
	word32 a2_134
	word32 a3_135
	word32 a4_136
	word32 a5_137
	word32 s2_138
	word32 s3_139
	word32 s4_140
	word32 s8_141
	ke_msg_send(s1_69, mstatus, out s1_131, out a0_132, out a1_133, out a2_134, out a3_135, out a4_136, out a5_137, out s2_138, out s3_139, out s4_140, out s8_141)
	return
mm_key_add_req_handler_exit:
l2301B5CA:
	assert_err()
l2301B5A8:
	assert_err()
l2301B584:
	assert_err()


void mm_set_power_req_handler(word32 ra, word32 a3, word32 a4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
mm_set_power_req_handler_entry:
l2301B602:
	word32 a0_21
	word32 a3_24
	word32 s1_30
	word32 s2_31
	word32 s0_100
	word32 a1_101
	word32 a2_102
	word32 a4_103
	word32 a5_104
	word32 a6_105
	word32 s3_106
	word32 s4_107
	word32 s8_108
	word32 ra_28 = ke_msg_alloc(ra, 47<i32>, a3, 2<32>, a4, mstatus, dwArg08, out s0_100, out s1_30, out a0_21, out a1_101, out a2_102, out a3_24, out a4_103, out a5_104, out a6_105, out s2_31, out s3_106, out s4_107, out s8_108)
	Mem48[s1_30 + 0x4201AA42<32>:byte] = SLICE(CONVERT(Mem18[s2_31 + 1<i32>:int8], int8, int32), byte, 0)
	Mem50[a0_21 + 1<i32>:byte] = SLICE(CONVERT(Mem48[s1_30 + 0x4201AA41<32>:int8], int8, int32), byte, 0)
	Mem52[s1_30 + 0x4201AA41<32>:byte] = 0x7F<8>
	word32 s1_109
	word32 a3_110
	word32 a4_111
	word32 s2_112
	word32 s3_113
	word32 s1_114
	word32 a0_115
	word32 a1_116
	word32 a2_117
	word32 a3_118
	word32 a4_119
	word32 a5_120
	word32 s2_121
	word32 s3_122
	word32 s4_123
	word32 s8_124
	ke_msg_send(tpc_update_vif_tx_power(ra_28, s1_30 + 0x4201A9E8<32>, a0_21 + 1<i32>, a0_21, a3_24, fflags, frm, out s1_109, out a3_110, out a4_111, out s2_112, out s3_113), mstatus, out s1_114, out a0_115, out a1_116, out a2_117, out a3_118, out a4_119, out a5_120, out s2_121, out s3_122, out s4_123, out s8_124)
	0<32> = dwArg38
	return
mm_set_power_req_handler_exit:


void mm_set_idle_req_handler(word32 ra, word32 a1, word32 a2, word32 s2, word32 mstatus, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
mm_set_idle_req_handler_entry:
l2301B668:
	word32 a0_19
	word32 s2_190
	word32 a4_189
	word32 a2_188
	ke_state_get(a2, dwArg18, out a0_19, out a2_188, out a4_189, out s2_190)
	branch a0_19 != 3<32> l2301B696
l2301B696:
	word32 a4_46
	word32 s2_51
	word32 a4_28 = CONVERT(Mem15[a1:byte], byte, word32)
	Mem31[0x42018E7A<32>:byte] = SLICE(a4_28, byte, 0)
	branch a4_28 == 0<32> l2301B6FE
l2301B6FE:
	word32 a0_34
	word32 a4_192
	word32 s2_193
	word32 a2_191
	ke_state_get(a2, dwArg18, out a0_34, out a2_191, out a4_192, out s2_193)
	branch a0_34 == 2<32> l2301B686
l2301B708:
	mm_active(mstatus, out a4_46, out s2_51)
l2301B6AE:
	word32 a0_57
	word32 a2_194
	word32 s1_61 = ke_state_get(a2, dwArg18, out a0_57, out a2_194, out a4_46, out s2_51)
	branch a0_57 == 0<32> l2301B6C8
l2301B6C8:
	branch (Mem31[0x44B00038<32>:word32] & 0xF<32>) == 0<32> l2301B6EA
l2301B6EA:
	Mem72[s1_61 + 18<i32>:word16] = 0<16>
l2301B6EE:
	word32 s0_203
	word32 s1_204
	word32 a0_205
	word32 a3_206
	word32 s2_207
	word32 s3_208
	word32 s4_209
	word32 s8_210
	ke_msg_send_basic(ra, 35<i32>, s2_51, a4_46, mstatus, s2, out s0_203, out s1_204, out a0_205, out a3_206, out s2_207, out s3_208, out s4_209, out s8_210)
l2301B6D2:
	assert_err()
l2301B6B4:
	branch a0_57 == 2<32> l2301B688
l2301B6BA:
	hal_machw_idle_req(a4_46, mstatus)
	word32 s1_195
	word32 a0_196
	word32 a1_197
	word32 a4_198
	word32 a5_199
	word32 s2_200
	word32 s3_201
	word32 s4_202
	ke_state_set(a2, 2<32>, mstatus, out s1_195, out a0_196, out a1_197, out a4_198, out a5_199, out s2_200, out s3_201, out s4_202)
l2301B686:
l2301B688:
	return
mm_set_idle_req_handler_exit:


void mm_reset_req_handler(word32 ra, word32 s0, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg68, word32 dwArg7C, word32 dwArg8C, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mm_reset_req_handler_entry:
l2301B70E:
	__csrrc(mstatus, 8<32>)
	hal_machw_stop(s0)
	phy_stop()
	word32 s0_24
	word32 a3_37
	word32 a4_38
	word32 s0_127
	word32 ra_42 = mm_init(me_init(ra, mstatus, out s0_24), s0_24, mstatus, dwLoc18, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg68, ra, dwArg7C, dwArg8C, dwArgD8, dwArgE8, dwArgF8, dwArg0148, out s0_127, out a3_37, out a4_38)
	__csrrs(mstatus, 8<32>)
	word32 s0_128
	word32 s1_129
	word32 a0_130
	word32 a3_131
	word32 s2_132
	word32 s3_133
	word32 s4_134
	word32 s8_135
	ke_msg_send_basic(ra_42, 1<32>, a3_37, a4_38, mstatus, dwLoc18, out s0_128, out s1_129, out a0_130, out a3_131, out s2_132, out s3_133, out s4_134, out s8_135)
	word32 s1_136
	word32 a0_137
	word32 a1_138
	word32 a4_139
	word32 a5_140
	word32 s2_141
	word32 s3_142
	word32 s4_143
	ke_state_set(0<32>, 0<32>, mstatus, out s1_136, out a0_137, out a1_138, out a4_139, out a5_140, out s2_141, out s3_142, out s4_143)
	return
mm_reset_req_handler_exit:


void mm_version_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
mm_version_req_handler_entry:
l2301B74A:
	word32 a0_14
	word32 a4_18
	word32 s0_69
	word32 s1_70
	word32 a1_71
	word32 a2_72
	word32 a3_73
	word32 a5_74
	word32 a6_75
	word32 s2_76
	word32 s3_77
	word32 s4_78
	word32 s8_79
	ke_msg_alloc(ra, 5<32>, a3, 0x18<32>, a4, mstatus, dwArg08, out s0_69, out s1_70, out a0_14, out a1_71, out a2_72, out a3_73, out a4_18, out a5_74, out a6_75, out s2_76, out s3_77, out s4_78, out s8_79)
	Mem33[0x5040000<32>:word32] = a0_14
	word32 a5_34 = Mem33[a4_18 + 4<i32>:word32]
	Mem37[a4_18 + 4<i32>:word32] = a0_14
	Mem40[a0_14 + 0x1008<32>:word32] = Mem37[a5_34 + 8<i32>:word32]
	phy_get_version(a0_14 + 0xC<32>, a0_14 + 16<i32>)
	Mem45[0x8FFF9F3<32>:word32] = a0_14
	word32 s1_80
	word32 a0_81
	word32 a1_82
	word32 a2_83
	word32 a3_84
	word32 a4_85
	word32 a5_86
	word32 s2_87
	word32 s3_88
	word32 s4_89
	word32 s8_90
	ke_msg_send(a0_14, mstatus, out s1_80, out a0_81, out a1_82, out a2_83, out a3_84, out a4_85, out a5_86, out s2_87, out s3_88, out s4_89, out s8_90)
	return
mm_version_req_handler_exit:


void mm_start_req_handler(word32 ra, word32 s0, word32 a2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
mm_start_req_handler_entry:
l2301B792:
	word32 a0_19
	word32 a2_181
	word32 a4_182
	word32 s2_183
	word32 s1_23 = ke_state_get(a2, dwArg28, out a0_19, out a2_181, out a4_182, out s2_183)
	branch a0_19 == 0<32> l2301B7C2
l2301B7C2:
	word32 s3_43
	word32 fflags_67
	word32 frm_68
	word32 s2_73
	word32 s0_184
	word32 s1_185
	word32 s3_186
	word32 ra_69 = phy_set_channel(phy_init(ra, s1_23, dwArg28, out s3_43), 0<32>, 0<32>, 0xFFF96C<32>, s3_43, fflags, frm, s0, dwArg14, dwArg0148, out s0_184, out s1_185, out s2_73, out s3_186, out fflags_67, out frm_68)
	word32 a5_95
	word32 a4_187
	tpc_update_tx_power(ra_69, fflags_67, frm_68, out a4_187, out a5_95)
	word32 s1_100 = Mem13[a5_95 + 64<i32>:word32]
	Mem107[0x42019ED0<32>:word32] = a5_95 + 1000<i32>
	word32 a4_108 = CONVERT(Mem107[s1_100 + 68<i32>:uint16], uint16, word32)
	Mem110[0x42019E78<32>:word16] = SLICE(a4_108, word16, 0)
	word32 s0_188
	word32 s1_189
	word32 a0_190
	word32 a3_191
	word32 s2_192
	word32 s3_193
	word32 s4_194
	word32 s8_195
	ke_msg_send_basic(ra_69, 3<32>, s2_73, a4_108, mstatus, dwLoc08, out s0_188, out s1_189, out a0_190, out a3_191, out s2_192, out s3_193, out s4_194, out s8_195)
	word32 a4_133
	word32 s2_196
	word32 s0_136 = mm_active(mstatus, out a4_133, out s2_196)
	hal_machw_idle_req(a4_133, mstatus)
	word32 s1_197
	word32 a0_198
	word32 a1_199
	word32 a4_200
	word32 a5_201
	word32 s2_202
	word32 s3_203
	word32 s4_204
	ke_state_set(s0_136, 2<32>, mstatus, out s1_197, out a0_198, out a1_199, out a4_200, out a5_201, out s2_202, out s3_203, out s4_204)
	0<32> = dwArg38
	return
mm_start_req_handler_exit:
l2301B7AA:
	assert_err()


void mm_set_ps_mode_req_handler(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg18, word32 dwArg38, word32 dwArg48, word32 dwArg78, word32 dwArg7C, word32 dwArg98, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mm_set_ps_mode_req_handler_entry:
l2301B828:
	word32 a0_9 = CONVERT(Mem7[a1:byte], byte, word32)
	branch a0_9 != 3<32> l2301B874
l2301B874:
	ps_set_mode(ra, a0_9, a3, fflags, frm, mstatus, dwLoc10, s0, dwArg18, dwArg38, dwArg48, dwArg7C, dwArg98, dwArgB8, dwArgD8, dwArg0168)
l2301B838:
	word32 s0_48 = Mem7[0x4201AFC8<32>:int32]
l2301B840:
	branch s0_48 != 0<32> l2301B85E
l2301B85E:
	branch CONVERT(Mem7[s0_48 + 86<i32>:byte], byte, word32) != 0<32> l2301B870
l2301B864:
	branch CONVERT(Mem7[s0_48 + 88<i32>:byte], byte, word32) == 0<32> l2301B870
l2301B86A:
	ra = ps_polling_frame(ra, fflags, frm, mstatus, dwLoc08, dwArg48, dwArg78, dwArgAC, dwArgC8, dwArgE8, dwArg0108, dwArg0118, out s0_48, out a4)
l2301B870:
	s0_48 = Mem7[s0_48:word32]
l2301B842:
	word32 s0_225
	word32 s1_226
	word32 a0_227
	word32 a3_228
	word32 s2_229
	word32 s3_230
	word32 s4_231
	word32 s8_232
	ke_msg_send_basic(ra, 50<i32>, CONVERT(Mem7[0x42018EB2<32>:uint16], uint16, word32), a4, mstatus, dwLoc08, out s0_225, out s1_226, out a0_227, out a3_228, out s2_229, out s3_230, out s4_231, out s8_232)
l2301B854:
	return
mm_set_ps_mode_req_handler_exit:


void mm_force_idle_req_handler(word32 a2, word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] mstatus:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
mm_force_idle_req_handler_entry:
l2301B87C:
	word32 a0_15
	word32 a4_17
	word32 a2_120
	word32 s2_121
	word32 s1_19 = ke_state_get(a2, dwArg28, out a0_15, out a2_120, out a4_17, out s2_121)
	branch a0_15 == 0<32> l2301B8AE
l2301B8AE:
	branch (Mem11[0x44B00038<32>:word32] & 0xF<32>) == 0<32> l2301B8D0
l2301B8D0:
	word32 a0_33
	word32 a5_36
	word32 a1_45
	word32 s1_130
	word32 a4_131
	word32 s2_132
	word32 s3_133
	word32 s4_134
	ke_state_set(s1_19, 3<32>, mstatus, out s1_130, out a0_33, out a1_45, out a4_131, out a5_36, out s2_132, out s3_133, out s4_134)
	call a5_36 (retsize: 0;)
		uses: a0:a0_33,a1:a1_45,mstatus:mstatus
l2301B8B8:
	assert_err()
l2301B890:
	branch a0_15 == 2<32> l2301B8A2
l2301B896:
	hal_machw_idle_req(a4_17, mstatus)
	word32 s1_122
	word32 a0_123
	word32 a1_124
	word32 a4_125
	word32 a5_126
	word32 s2_127
	word32 s3_128
	word32 s4_129
	ke_state_set(s1_19, 2<32>, mstatus, out s1_122, out a0_123, out a1_124, out a4_125, out a5_126, out s2_127, out s3_128, out s4_129)
l2301B8A2:
	return
mm_force_idle_req_handler_exit:


void mm_hw_config_handler(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 s3, word32 s5, word32 s6, word32 s7, word32 s8, word32 s10, word32 s11, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa5 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mm_hw_config_handler_entry:
l2301B8E0:
	word32 s0_144 = a1
	word32 s3_136 = a3
	word32 a0_33
	word32 s2_38
	word32 a2_1298
	word32 a4_154
	word32 s1_37 = ke_state_get(a2, dwArg08, out a0_33, out a2_1298, out a4_154, out s2_38)
	branch a0_33 == 0<32> l2301B916
l2301B916:
	branch (Mem27[0x44B00038<32>:word32] & 0xF<32>) == 0<32> l2301B938
l2301B938:
	word32 s1_594
	word32 s4_597
	word32 a1_177
	word32 a0_178
	branch s2_38 == 0x16<32> l2301BB48
l2301BB48:
	a4_154 = Mem27[0x4201D1F8<32>:int32]
	word32 s0_54 = Mem27[a3:word32]
	Mem58[a3 + 4<i32>:word32] = (CONVERT(Mem27[a1 + 5<i32>:byte], byte, word32) + 4<32> << 2<i32>) + 0x42018E58<32>
	branch a4_154 == 0<32> l2301BB76
l2301BB60:
	a4_154 = CONVERT(Mem58[a4_154 + 4<i32>:byte], byte, word32)
	branch a4_154 != CONVERT(Mem58[s0_54 + 5<i32>:byte], byte, word32) l2301BB76
l2301BB6C:
	Mem63[0x44B000DC<32>:word32] = 0x10<32>
	a4_154 = 0x10<32>
l2301BB76:
	a1_177 = a3
	a0_178 = 0x17<32>
l2301B946:
	word32 a0_197
	branch s2_38 >u 0x16<32> l2301B9C2
l2301B9C2:
	branch s2_38 == 0x1E<32> l2301BCCC
l2301BCCC:
	word32 s7_70 = CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32)
	word32 a4_77 = CONVERT(Mem27[s7_70 + 0x4201AA3E<32>:byte], byte, word32)
	branch a4_77 != 0<32> l2301BD76
l2301BCEC:
	branch CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32) == 0<32> l2301BDB2
l2301BDB2:
	word32 a5_1376
	word32 a2_1375
	mm_timer_clear(s7_70 + 0x4201AA00<32>, a4_77, out a2_1375, out a5_1376)
l2301BCF6:
	word32 a5_85 = CONVERT(Mem27[s7_70 + 0x4201AA48<32>:byte], byte, word32)
	word32 s2_103
	word32 s4_105
	word32 s8_106
	word32 a0_1378
	word32 s1_1377
	word32 a1_1379
	word32 a2_1380
	word32 s3_1383
	word32 a5_1382
	word32 a4_1381
	word32 s0_101 = mm_timer_set(s7_70 + 0x4201AA00<32>, Mem27[0x44B00120<32>:int32] + Mem27[a5_85 + 0x420190D4<32>:int32], 432<i32>, mstatus, out s1_1377, out a0_1378, out a1_1379, out a2_1380, out a4_1381, out a5_1382, out s2_103, out s3_1383, out s4_105, out s8_106)
	word32 a5_109 = CONVERT(Mem27[s0_101:uint16], uint16, word32)
	word32 a4_110 = Mem27[a5_85 + 0x420190D4<32>:int32]
	Mem111[s2_103 + 92<i32>:word16] = 0<16>
	Mem112[a5_85 + 0x420190E8<32>:word16] = SLICE(a5_109, word16, 0)
	word32 a5_113 = CONVERT(Mem112[s4_105 + 32<i32>:uint16], uint16, word32)
	Mem114[s2_103 + 94<i32>:byte] = 0<8>
	Mem121[a5_85 + 0x420190E6<32>:word16] = SLICE(a5_113 + 0x14<32> + a4_110 >>u 0xF4240<32>, word16, 0)
	word32 a5_122 = Mem121[s8_106 + 288<i32>:int32]
	Mem123[s2_103 + 116<i32>:byte] = 0<8>
	Mem124[s2_103 + 112<i32>:word32] = 0<32>
	Mem125[s2_103 + 100<i32>:word32] = a5_122
	Mem128[s2_103 + 4<i32>:word32] = Mem125[s2_103 + 4<i32>:int32] | 1<i32>
	Mem130[s2_103 + 108<i32>:word32] = Mem128[s8_106 + 288<i32>:int32]
	ra = chan_bcn_detect_start(ra, s0_101, mstatus, out s0_144, out a3, out s3_136)
l2301BD76:
	a4_154 = CONVERT(Mem153[s0_144 + 2<i32>:byte], byte, word32)
	Mem157[s7_70 + 0x4201AA40<32>:byte] = SLICE(a4_154, byte, 0)
	branch a4_154 == 0<32> l2301BDAA
l2301BD8A:
	Mem161[0x44B00200<32>:word32] = a3
	Mem163[0x44B00204<32>:word32] = a3
	word32 a5_164 = Mem163[a3 + 20<i32>:word32]
	Mem165[0x44B00208<32>:word32] = a3
	Mem167[0x44B0020C<32>:word32] = Mem165[a5_164 + 20<i32>:word32]
	a4_154 = mm_env_max_ampdu_duration_set()
l2301BDAA:
	a1_177 = s3_136
	a0_178 = 0x1F<32>
l2301B9C8:
	branch s2_38 >u 0x1E<32> l2301BA50
l2301BA50:
	branch s2_38 == 40<i32> l2301BDB8
l2301BDB8:
	word32 a5_180 = CONVERT(Mem27[a1:byte], byte, word32)
	branch a5_180 == 0<32> l2301BDCE
l2301BDC0:
	a4_154 = Mem27[a5_180 + 84<i32>:word32]
	Mem185[(a5_180 | 128<i32>) + 84<i32>:word32] = a4_154
l2301BDCE:
	word32 s8_1365
	word32 s0_205
	word32 s2_207
	word32 a5_1361
	word32 a4_1360
	word32 s4_1364
	word32 s3_1363
	word32 a3_1359
	word32 a6_1362
	word32 a1_1357
	word32 s1_1356
	word32 a2_1358
	ke_msg_alloc(ra, 41<i32>, a3, 3<32>, a4_154, mstatus, dwLoc18, out s0_205, out s1_1356, out a0_197, out a1_1357, out a2_1358, out a3_1359, out a4_1360, out a5_1361, out a6_1362, out s2_207, out s3_1363, out s4_1364, out s8_1365)
	Mem216[a0_197:byte] = SLICE(CONVERT(Mem196[s0_205 + 1<i32>:byte], byte, word32), byte, 0)
	word32 a4_217 = CONVERT(Mem216[s0_205 + 2<i32>:byte], byte, word32)
	Mem218[a0_197 + 2<i32>:byte] = SLICE(s2_207, byte, 0)
	Mem219[a0_197 + 1<i32>:byte] = SLICE(a4_217, byte, 0)
l2301BA58:
	branch s2_38 == 59<i32> l2301BDF2
l2301BDF2:
	word32 s3_243
	ra = chan_ctxt_update(ra, a1, a1, a1, s5, s6, s7, s10, s11, fflags, frm, mstatus, s0, dwLoc18, dwArg08, dwArg0C, dwArg18, dwArg28, dwArg34, dwArg38, dwArg48, s7, s5, s3, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0118, out a4_154, out s3_243)
	a1_177 = s3_243
	a0_178 = 60<i32>
l2301BA60:
	branch s2_38 != 32<i32> l2301B960
l2301BA68:
	word32 a3_263 = CONVERT(Mem27[a1:byte], byte, word32)
	Mem271[0x44B000E8<32>:word32] = a3_263 + (Mem27[0x44B000E4<32>:int32] & 255<i32>) << 8<i32> | a3_263
	a4_154 = 0x44B00000<32>
	a1_177 = a3
	a0_178 = 33<i32>
l2301B9CC:
	branch s2_38 == 0x1A<32> l2301BBF2
l2301BBF2:
	word32 s5_273 = CONVERT(Mem27[a1 + 6<i32>:byte], byte, word32)
	word32 s0_278 = Mem27[a3:word32]
	Mem284[a3 + 8<i32>:word32] = (s5_273 + 374<i32> + CONVERT(Mem27[a1 + 5<i32>:byte], byte, word32) << 2<i32>) + 0x4201A410<32>
	a4_154 = s5_273 + 0x4201A9E8<32>
	word32 a5_288 = CONVERT(Mem284[s5_273 + 0x4201AA40<32>:byte], byte, word32)
	branch a5_288 == 0<32> l2301BC52
l2301BC28:
	word32 a4_289 = CONVERT(Mem284[s0_278 + 5<i32>:byte], byte, word32)
	s0_278 = Mem284[a5_288:word32]
	branch a4_289 == 1<32> l2301BC76
l2301BC76:
	Mem293[0x44B00204<32>:word32] = a5_288
l2301BC34:
	branch a4_289 == 0<32> l2301BC46
l2301BC46:
	Mem295[0x44B00200<32>:word32] = a5_288
l2301BC36:
	branch a4_289 == 2<32> l2301BC80
l2301BC80:
	Mem298[0x44B00208<32>:word32] = a5_288
l2301BC3C:
	Mem300[0x44B0020C<32>:word32] = a5_288
l2301BC4E:
	a4_154 = mm_env_max_ampdu_duration_set()
l2301BC52:
	branch CONVERT(Mem312[s5_273 + 0x4201AA3E<32>:byte], byte, word32) != 0<32> l2301BC6E
l2301BC62:
	a4_154 = ps_uapsd_set(s5_273 + 0x4201A9E8<32>, CONVERT(Mem312[s0_278 + 5<i32>:byte], byte, word32), CONVERT(Mem312[s0_278 + 4<i32>:byte], byte, word32), a4_154, mstatus, out s3_136)
l2301BC6E:
	a1_177 = s3_136
	a0_178 = 0x1B<32>
l2301B9D2:
	branch s2_38 == 0x1C<32> l2301BC8A
l2301BC8A:
	word32 a5_345 = CONVERT(Mem27[a1:byte], byte, word32)
	word32 a5_348 = a5_345 << 0xE<u32> & 0x3E0000<32>
	branch a5_348 == 0<32> l2301BCB4
l2301BCB4:
	Mem360[(a5_348 & 0xE3FFFFFF<32> | a5_345 << 0xE<u32>) + 76<i32>:word32] = Mem27[a5_348 + 76<i32>:word32]
	a4_154 = 0xE3FFFFFF<32>
	a1_177 = a3
	a0_178 = 0x1D<32>
l2301BC9A:
	assert_err()
l2301B9D8:
	branch s2_38 != 0x18<32> l2301B960
l2301B9DE:
	word32 a7_1326
	word32 a5_1324
	word32 a6_1325
	word32 a4_1323
	word32 a3_1322
	word32 a2_1321
	word32 a1_1320
	memcpy(CONVERT(Mem27[a1 + 6<i32>:byte], byte, word32) + 0x4201AA20<32>, a1, 6<32>, out a1_1320, out a2_1321, out a3_1322, out a4_1323, out a5_1324, out a6_1325, out a7_1326)
	a4_154 = 1<32>
	branch Mem27[0x4201AFD0<32>:byte] + Mem27[0x4201AFD1<32>:byte] != 1<32> l2301BA48
l2301BA18:
	Mem404[(CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem27[a1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1:byte], byte, word32)) | CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32) << 16<i32>)) + 32<i32>:word32] = 0x44B00000<32>
	Mem409[(CONVERT(Mem404[a1 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem404[a1 + 4<i32>:byte], byte, word32)) + 36<i32>:word32] = 0x44B00000<32>
	a4_154 = 0x44B00000<32>
l2301BA48:
	a1_177 = a3
	a0_178 = 0x19<32>
l2301B94A:
	branch s2_38 == 0xE<32> l2301BA8E
l2301BA8E:
	word32 a4_417 = Mem27[0x42018E5C<32>:int32]
	Mem419[0x42018E58<32>:word32] = 0xE<32>
	Mem422[(a4_417 | 0xE<32>) + 96<i32>:word32] = 0x44B00000<32>
	a4_154 = 0x44B00000<32>
	a1_177 = a3
	a0_178 = 0xF<32>
l2301B950:
	word32 s2_489
	branch s2_38 >u 0xE<32> l2301B97C
l2301B97C:
	branch s2_38 == 0x12<32> l2301BBC6
l2301BBC6:
	Mem432[0x44B00090<32>:word32] = CONVERT(Mem27[a1:byte], byte, word32) | Mem27[0x44B00090<32>:int32] & -256<i32>
	word32 a4_433 = Mem432[0x44B00090<32>:int32]
	Mem437[0x44B00090<32>:word32] = a4_433 | 0x80000000<32>
	a1_177 = a3
	a4_154 = a4_433 | 0x80000000<32>
	a0_178 = 0x13<32>
l2301B982:
	branch s2_38 == 0x14<32> l2301BB7E
l2301BB7E:
	word32 a5_440 = CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32)
	word32 a1_445 = CONVERT(Mem27[a1:uint16], uint16, word32)
	branch CONVERT(Mem27[a5_440 + 0x4201AA3E<32>:byte], byte, word32) != 0<32> l2301BBC0
l2301BBC0:
	a4_154 = vif_mgmt_set_ap_bcn_int(a5_440 + 0x4201A9E8<32>, a1_445, mstatus)
l2301BB9E:
	word32 a4_452 = CONVERT(Mem27[a5_440 + 0x4201AA48<32>:byte], byte, word32)
	Mem459[(a1_445 << 10<i32>) + 4<i32>:word32] = a4_452 + 0x420190D0<32>
	a4_154 = a4_452 + 432<i32>
l2301BBB8:
	a1_177 = a3
	a0_178 = 0x15<32>
l2301B988:
	branch s2_38 != 0x10<32> l2301B960
l2301B98E:
	word32 a0_470
	word32 s0_478
	word32 s3_481
	word32 s8_1336
	word32 s2_1334
	word32 s4_1335
	word32 a6_1333
	word32 a5_1332
	word32 a4_1331
	word32 a3_1330
	word32 a2_1329
	word32 s1_1327
	word32 a1_1328
	word32 ra_477 = ke_msg_alloc(ra, 0x11<32>, a3, 2<32>, a4_154, mstatus, dwLoc18, out s0_478, out s1_1327, out a0_470, out a1_1328, out a2_1329, out a3_1330, out a4_1331, out a5_1332, out a6_1333, out s2_1334, out s3_481, out s4_1335, out s8_1336)
	s2_489 = a0_470
	branch CONVERT(Mem27[s0_478 + 8<i32>:byte], byte, word32) == 0<32> l2301B9BA
l2301B9A2:
	word32 frm_1341
	word32 s1_1338
	word32 s3_1339
	word32 fflags_1340
	word32 s0_1337
	phy_set_channel(ra_477, CONVERT(Mem27[s0_478:byte], byte, word32), CONVERT(Mem27[s0_478 + 1<i32>:byte], byte, word32), CONVERT(Mem27[s0_478 + 4<i32>:uint16], uint16, word32), s3_481, fflags, frm, s8, dwLoc0C, dwArg0128, out s0_1337, out s1_1338, out s2_489, out s3_1339, out fflags_1340, out frm_1341)
l2301B954:
	branch s2_38 == 6<32> l2301BAFC
l2301BAFC:
	word32 s0_538
	word32 s1_539
	word32 s8_1319
	word32 s4_1318
	word32 a6_1315
	word32 s2_1316
	word32 s3_1317
	word32 a4_1313
	word32 a5_1314
	word32 a2_1311
	word32 a3_1312
	word32 a1_1310
	word32 a0_1309
	Mem581[s2_489:byte] = SLICE(vif_mgmt_register(ke_msg_alloc(ra, 7<32>, a3, 2<32>, a4_154, mstatus, dwLoc18, out s0_538, out s1_539, out a0_1309, out a1_1310, out a2_1311, out a3_1312, out a4_1313, out a5_1314, out a6_1315, out s2_1316, out s3_1317, out s4_1318, out s8_1319), s1_539, s0_538 + 1<i32>, CONVERT(Mem27[s0_538:byte], byte, word32), CONVERT(Mem27[s0_538 + 7<i32>:byte], byte, word32), mstatus, dwLoc18, dwArg10, dwArg14, s3, out s2_489), byte, 0)
l2301B9BA:
	a0_197 = s2_489
l2301B9BC:
	word32 a3_1369
	word32 a1_1367
	word32 a0_1366
	word32 a2_1368
	word32 s2_1372
	word32 s3_1373
	word32 a4_1370
	word32 s8_1374
	word32 a5_1371
	ke_msg_send(a0_197, mstatus, out s1_594, out a0_1366, out a1_1367, out a2_1368, out a3_1369, out a4_1370, out a5_1371, out s2_1372, out s3_1373, out s4_597, out s8_1374)
l2301B95A:
	branch s2_38 == 8<32> l2301BB24
l2301BB24:
	word32 a0_603 = CONVERT(Mem27[a1:byte], byte, word32)
	branch a0_603 >u 1<32> l2301BB32
l2301BB2E:
	ra = vif_mgmt_unregister(ra, s1_37, a0_603, a3, a4_154, 1<32>, mstatus, dwLoc18, dwArg10, dwArg14, dwArg48, s3, out a4_154, out s3_136)
l2301BB32:
	branch Mem27[0x4201AFC8<32>:int32] != 0<32> l2301BB40
l2301BB3C:
	a4_154 = hal_machw_monitor_mode(a4_154)
l2301BB40:
	a1_177 = s3_136
	a0_178 = 9<32>
l2301BAA6:
	word32 s8_1355
	word32 s3_1354
	word32 a0_1351
	word32 a3_1352
	word32 s2_1353
	word32 s0_1350
	ke_msg_send_basic(ra, a0_178, a1_177, a4_154, mstatus, s6, out s0_1350, out s1_594, out a0_1351, out a3_1352, out s2_1353, out s3_1354, out s4_597, out s8_1355)
l2301BAAA:
l2301BAAC:
	word32 s2_720 = CONVERT(Mem717[s4_597 + 19<i32>:byte], byte, word32)
	branch (s2_720 << 4<i32> & -241<i32>) == 0<32> l2301BAD0
l2301BAD0:
	Mem729[0x44B00038<32>:word32] = s2_720 << 4<i32>
	word32 s4_1349
	word32 s3_1348
	word32 s2_1347
	word32 a5_1346
	word32 a4_1345
	word32 a1_1344
	word32 a0_1343
	word32 s1_1342
	ke_state_set(s1_594, CONVERT(Mem729[s4_597 + 18<i32>:byte], byte, word32), mstatus, out s1_1342, out a0_1343, out a1_1344, out a4_1345, out a5_1346, out s2_1347, out s3_1348, out s4_1349)
l2301BAB8:
	assert_err()
l2301B960:
	assert_err()
l2301B920:
	assert_err()
l2301B906:
	branch CONVERT(SLICE(a0_33 + 0xFFFFFFFE<32>, word16, 0), word16, word32) >u 1<32> l2301BE02
l2301BE02:
	Mem758[0x42018E6B<32>:byte] = SLICE(Mem27[0x44B00038<32>:word32] & 0xF<32>, byte, 0)
	word32 a0_759
	word32 a4_761
	word32 a2_1299
	word32 s2_1300
	word32 s1_763 = ke_state_get(s1_37, dwArg08, out a0_759, out a2_1299, out a4_761, out s2_1300)
	Mem766[0x42018E6A<32>:byte] = SLICE(a0_759, byte, 0)
	hal_machw_idle_req(a4_761, mstatus)
	word32 s4_1308
	word32 s3_1307
	word32 s2_1306
	word32 a1_1303
	word32 a4_1304
	word32 a5_1305
	word32 s1_1301
	word32 a0_1302
	ke_state_set(s1_763, 2<32>, mstatus, out s1_1301, out a0_1302, out a1_1303, out a4_1304, out a5_1305, out s2_1306, out s3_1307, out s4_1308)
l2301B912:
l2301BAE2:
	0<32> = dwArg0128
	return
mm_hw_config_handler_exit:


void bl60x_edca_get(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_edca_dump_cmd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a4 a5 a6
// Preserved: sp
bl60x_edca_get_entry:
l2301BE2E:
	word32 a5_10
	branch a0 == 1<32> l2301BE80
l2301BE80:
	a5_10 = Mem0[0x44B00204<32>:int32]
l2301BE34:
	branch a0 > 1<32> l2301BE3E
l2301BE3E:
	branch a0 == 2<32> l2301BEAE
l2301BEAE:
	a5_10 = Mem0[0x44B00208<32>:int32]
l2301BE44:
	branch a0 != 3<32> l2301BE3A
l2301BE4A:
	a5_10 = Mem0[0x44B0020C<32>:int32]
l2301BE88:
	Mem18[a4:word16] = SLICE(a5_10 >>u 0xC<u32>, word16, 0)
	Mem23[a3:byte] = SLICE(a5_10 >>u 8<u32> & 0xF<32>, byte, 0)
	Mem28[a2:byte] = SLICE(a5_10 >>u 4<u32> & 0xF<32>, byte, 0)
	Mem32[a1:byte] = SLICE(a5_10 & 0xF<32>, byte, 0)
	return
l2301BE38:
	branch a0 == 0<32> l2301BE54
l2301BE54:
	word32 a5_35 = Mem0[0x44B00200<32>:int32]
	Mem37[a4:word16] = SLICE(a5_35 >>u 0xC<u32>, word16, 0)
	Mem40[a3:byte] = SLICE(a5_35 >>u 8<u32> & 0xF<32>, byte, 0)
	Mem43[a2:byte] = SLICE(a5_35 >>u 4<u32> & 0xF<32>, byte, 0)
	Mem45[a1:byte] = SLICE(a5_35 & 0xF<32>, byte, 0)
	return
l2301BE3A:
	return
bl60x_edca_get_exit:


word32 bl_init(word32 ra, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg8C, word32 dwArg9C, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a2 a3 ra s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
bl_init_entry:
l2301BEB8:
	Mem7[0x4200ED60<32>:word32] = 0x4201D274<32>
	Mem13[0x4201D270<32>:word32] = 0<32>
	word32 s0_33
	word32 a4_47
	word32 s0_52
	word32 a3_172
	word32 ra_51 = mm_init(me_init(dbg_init(ra), mstatus, out s0_33), s0_33, mstatus, dwLoc08, dwArg08, dwArg10, dwArg14, dwArg18, dwArg30, dwArg34, dwArg38, dwArg40, dwArg44, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg7C, dwArg8C, dwArg9C, dwArgE8, dwArgF8, dwArg0108, dwArg0158, out s0_52, out a3_172, out a4_47)
	ke_init(a4_47, mstatus)
	word32 t1_173
	word32 a0_174
	word32 a1_175
	word32 a2_176
	word32 a3_177
	word32 a4_178
	word32 a5_179
	word32 ra_81 = memset(ra_51, s0_52 + -1832<i32>, 0<32>, 236<i32>, out t1_173, out a0_174, out a1_175, out a2_176, out a3_177, out a4_178, out a5_179)
	Mem86[s0_52 + -1828<i32>:word16] = 0xFFFF<16>
	Mem87[s0_52 + -1832<i32>:byte] = 0<8>
	Mem88[s0_52 + -1829<i32>:byte] = 0xFF<8>
	word32 ra_96 = supplicantFuncInit(ra_81, dwArg08, dwArg18, dwArg28, dwArg0138, dwArg0148, dwArg0158, dwArg0168)
l2301BF18_thunk_allocSupplicantData:
	word32 a0_114
	word32 a2_116
	word32 s2_120
	word32 s3_121
	word32 a3_129
	word32 s0_132
	word32 ra_131 = allocSupplicantData(ra_96, dwArg38, dwArg0128, dwArg0138, dwArg0148, dwArg0168, dwArg0178, out s0_132, out a0_114, out a2_116, out a3_129, out s2_120, out s3_121)
	s0Out = s0_132
	a0Out = a0_114
	a2Out = a2_116
	a3Out = a3_129
	s2Out = s2_120
	s3Out = s3_121
	return ra_131
bl_init_exit:


void bl_reset_evt(word32 ra, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg58, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
bl_reset_evt_entry:
l2301BF1C:
	__csrrc(mstatus, 8<32>)
	ke_evt_clear(0x80000000<32>, a4, mstatus)
	word32 a4_20
	word32 s5_55
	word32 ra_49 = txl_reset(rxl_reset(ra, hal_machw_reset(a4, dwArg18), mstatus, dwArg20, dwArg24, dwArg48, dwArg6C, dwArg0108, out a4_20), a4_20, mstatus, dwArg0118, out s5_55)
	mm_reset(mstatus, dwArg18)
	vif_mgmt_reset(ra_49, s5_55, mstatus, dwArg48, dwArg58, dwArg8C, dwArgF8)
	__csrrs(mstatus, 8<32>)
	return
bl_reset_evt_exit:


word32 bl_sleep(word32 dwArg28, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_main
// MayUse:  Stack +0028:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 t1 t4 tp
// Preserved: s0 sp
bl_sleep_entry:
l2301BF4A:
	branch Mem0[0x4201BC58<32>:int32] == 0<32> l2301BF62
l2301BF62:
	word32 a0_38
	word32 a0_12
	word32 a4_142
	word32 s2_143
	word32 a2_141
	ke_state_get(4<32>, dwArg28, out a0_12, out a2_141, out a4_142, out s2_143)
	branch a0_12 != 0<32> l2301BF58
l2301BF70:
	branch CONVERT(Mem11[0x42018EB0<32>:byte], byte, word32) == 0<32> l2301BF58
l2301BF7E:
	branch Mem11[0x42018EB4<32>:word32] != 0<32> l2301BF58
l2301BF82:
	word32 s0_24 = Mem11[0x4201AFC8<32>:int32]
l2301BF8A:
	branch s0_24 != 0<32> l2301BF9C
l2301BF9C:
	word32 a5_28
	word32 a4_144
	branch chan_is_on_channel(s0_24, out a3, out a4_144, out a5_28) == 0<32> l2301BFA8
l2301BFA4:
	s0_24 = Mem11[a5_28 + 4<i32>:word32]
	branch a5_28 != 0<32> l2301BF58
l2301BFA8:
	s0_24 = Mem11[s0_24:word32]
l2301BF8C:
	branch Mem11[0x4201A3F8<32>:int32] != 0<32> l2301BF58
l2301BF58:
	a0_38 = 0<32>
l2301BF96:
	a0_38 = hal_machw_sleep_check(out a3)
l2301BF5A:
	a3Out = a3
	return a0_38
l2301BF54:
	a3Out = a3
	return 0<32>
bl_sleep_exit:


void bl_nap_calculate()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_coex_pta_force_on
// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 a6 a7 t1
// Preserved: a3 sp
bl_nap_calculate_entry:
l2301BFAC:
	word32 a6_5 = Mem0[0x44B0808C<32>:int32]
	word32 a4_13 = 0<32>
	word32 a0_29 = 0xFFFFFFFF<32>
l2301BFC4:
	branch (1<32> << a4_13 & a6_5) == 0<32> l2301BFE6
l2301BFCE:
	word32 a5_25
	word32 a5_21 = Mem0[(a4_13 << 2<u32>) + 0x44B00128<32>:word32]
	word32 a3_23 = Mem0[0x44B00120<32>:int32]
	branch a3_23 >=u a5_21 l2301BFEE
l2301BFEE:
	a5_25 = a3_23 + 0xFFFFFFFF<32> - a5_21
l2301BFDE:
	a5_25 = a5_21 - a3_23
l2301BFE0:
	branch a5_25 >=u a0_29 l2301BFE6
l2301BFE4:
	a0_29 = a5_25
l2301BFE6:
	a4_13 = a4_13 + 1<32>
	branch a4_13 != 9<32> l2301BFC4
l2301BFEC:
	return
bl_nap_calculate_exit:


void rx_swdesc_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_init
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
rx_swdesc_init_entry:
l2301BFF6:
	Mem7[0x42043004<32>:word32] = 0x4201D280<32>
	Mem10[0x42043088<32>:word32] = 0x4201D280<32>
	Mem13[0x4204310C<32>:word32] = 0x4201D280<32>
	Mem16[0x42043190<32>:word32] = 0x4201D280<32>
	Mem19[0x4201D304<32>:word32] = 0x42043190<32>
	Mem22[0x4201D324<32>:word32] = 0x420431F4<32>
	Mem25[0x4201D344<32>:word32] = 0x42043258<32>
	Mem28[0x4201D364<32>:word32] = 0x420432BC<32>
	Mem31[0x4201D384<32>:word32] = 0x42043320<32>
	Mem34[0x4201D3A4<32>:word32] = 0x42043384<32>
	Mem37[0x4201D3C4<32>:word32] = 0x420433E8<32>
	Mem40[0x4201D3E4<32>:word32] = 0x4204344C<32>
	Mem43[0x4201D404<32>:word32] = 0x420434B0<32>
	return
rx_swdesc_init_exit:


void scan_cancel_req_handler(word32 ra, word32 a3, word32 mstatus, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
scan_cancel_req_handler_entry:
l2301C094:
	word32 a0_9
	word32 a4_11
	word32 a2_77
	word32 s2_78
	ke_state_get(2<32>, dwArg18, out a0_9, out a2_77, out a4_11, out s2_78)
	branch a0_9 == 0<32> l2301C0B6
l2301C0B6:
	scan_send_cancel_cfm(ra, a3, a4_11, mstatus, dwLoc18)
l2301C0A4:
	Mem40[0x42019F13<32>:byte] = 1<8>
l2301C0AE:
	return
scan_cancel_req_handler_exit:


void scan_start_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg38, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
scan_start_req_handler_entry:
l2301C0C0:
	word32 a0_22
	word32 a2_126
	word32 s0_123
	word32 s1_124
	word32 a1_125
	word32 a3_127
	word32 a4_128
	word32 a5_129
	word32 a6_130
	word32 s2_131
	word32 s3_132
	word32 s4_133
	word32 s8_134
	ke_msg_alloc(ra, 0xFFF801<32>, a3, 1<32>, a4, mstatus, dwArg08, out s0_123, out s1_124, out a0_22, out a1_125, out a2_126, out a3_127, out a4_128, out a5_129, out a6_130, out s2_131, out s3_132, out s4_133, out s8_134)
	word32 s0_40 = a0_22
	word32 a0_42
	word32 s2_47
	word32 a2_135
	word32 a4_136
	word32 s1_46 = ke_state_get(2<32>, dwArg28, out a0_42, out a2_135, out a4_136, out s2_47)
	branch a0_42 != 0<32> l2301C136
l2301C136:
	Mem50[a0_22:byte] = 8<8>
l2301C0E6:
	branch CONVERT(Mem19[s1_46 + 335<i32>:byte], byte, word32) != 0<32> l2301C104
l2301C104:
	Mem59[a0_22:byte] = 0<8>
	Mem62[s1_46 + 16<i32>:word32] = 0x42018EF8<32>
	Mem63[0x42018F12<32>:byte] = 0<8>
	Mem64[0x42018F10<32>:word16] = SLICE(s2_47, word16, 0)
	s0_40 = scan_ie_download(0x42018EF8<32>, mstatus, dwArgE8)
l2301C122:
	word32 s1_137
	word32 a0_138
	word32 a1_139
	word32 a2_140
	word32 a3_141
	word32 a4_142
	word32 a5_143
	word32 s2_144
	word32 s3_145
	word32 s4_146
	word32 s8_147
	ke_msg_send(s0_40, mstatus, out s1_137, out a0_138, out a1_139, out a2_140, out a3_141, out a4_142, out a5_143, out s2_144, out s3_145, out s4_146, out s8_147)
	0<32> = dwArg38
	return
scan_start_req_handler_exit:
l2301C0EC:
	assert_err()


void mm_scan_channel_end_ind_handler(word32 ra, word32 mstatus, word32 dwArg28, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0028:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
mm_scan_channel_end_ind_handler_entry:
l2301C140:
	word32 a0_9
	word32 a2_178
	word32 a4_179
	word32 s2_180
	ke_state_get(2<32>, dwArg28, out a0_9, out a2_178, out a4_179, out s2_180)
	branch a0_9 == 3<32> l2301C16A
l2301C16A:
	word32 a4_23 = Mem8[7<32>:word32]
	Mem27[7<32>:word32] = a4_23
	Mem32[(Mem27[a4_23:word32] | 3<32>) + 96<i32>:word32] = 0x44B00000<32>
	word32 a4_35 = Mem32[a0_9 + 16<i32>:word32]
	word32 a3_38 = CONVERT(Mem32[a0_9 + 335<i32>:byte], byte, word32)
	word32 a5_39 = CONVERT(Mem32[0x42018F12<32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem40[a4_35 + 26<i32>:byte] = SLICE(a5_39, byte, 0)
	branch a5_39 >=u a3_38 l2301C1C0
l2301C1AC:
	word32 a5_41 = CONVERT(Mem40[a4_35 + 27<i32>:byte], byte, word32)
	branch a5_41 != 0<32> l2301C1C0
l2301C1C0:
	word32 a4_48
	word32 s1_181
	word32 a3_182
	word32 a5_183
	word32 s2_184
	word32 s4_185
	word32 s0_51 = ke_msg_free(a0_9 + 0xFFFFFFF4<32>, mstatus, out s1_181, out a3_182, out a4_48, out a5_183, out s2_184, out s4_185)
	word32 a1_60 = CONVERT(Mem40[s0_51 + 24<i32>:uint16], uint16, word32)
	branch CONVERT(Mem40[s0_51 + 27<i32>:byte], byte, word32) == 0<32> l2301C1E4
l2301C1E4:
	word32 s0_188
	word32 s1_189
	word32 a0_190
	word32 a3_191
	word32 s2_192
	word32 s3_193
	word32 s4_194
	word32 s8_195
	ke_msg_send_basic(ra, 0xFFF802<32>, a1_60, a4_48, mstatus, dwLoc08, out s0_188, out s1_189, out a0_190, out a3_191, out s2_192, out s3_193, out s4_194, out s8_195)
l2301C1D0:
	Mem103[scan_send_cancel_cfm(ra, a1_60, a4_48, mstatus, dwLoc08) + 27<i32>:byte] = 0<8>
l2301C1DA:
	word32 s1_196
	word32 a0_197
	word32 a1_198
	word32 a4_199
	word32 a5_200
	word32 s2_201
	word32 s3_202
	word32 s4_203
	ke_state_set(2<32>, 0<32>, mstatus, out s1_196, out a0_197, out a1_198, out a4_199, out a5_200, out s2_201, out s3_202, out s4_203)
l2301C1B2:
	word32 a0_186
	word32 a4_187
	scan_set_channel_request(a5_41, mstatus, dwArg0108, out a0_186, out a4_187)
l2301C1B6:
	return
mm_scan_channel_end_ind_handler_exit:
l2301C152:
	assert_err()


void mm_scan_channel_start_ind_handler(word32 ra, word32 s0, word32 s5, word32 fflags, word32 frm, word32 mstatus, word32 dwArg28, word32 dwArg78, word32 dwArgAC, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] Stack +0028:[0..31] Stack +0078:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mm_scan_channel_start_ind_handler_entry:
l2301C1F2:
	word32 a0_14
	word32 a2_139
	word32 a4_140
	word32 s2_141
	word32 s1_18 = ke_state_get(2<32>, dwArg28, out a0_14, out a2_139, out a4_140, out s2_141)
	branch a0_14 == 2<32> l2301C22C
l2301C22C:
	word32 a4_28 = Mem10[6<32>:word32]
	Mem32[0x2000206<32>:word32] = a4_28
	Mem36[(Mem32[a4_28:word32] | 0x2000202<32>) + 96<i32>:word32] = 0x44B00000<32>
	branch (CONVERT(Mem36[s0 + (s1_18 + 6<32>) + 3<i32>:byte], byte, word32) & 1<32>) != 0<32> l2301C25E
l2301C25A:
	scan_probe_req_tx(ra, s1_18 + 6<32>, s5, fflags, frm, mstatus, dwLoc08, dwArg78, dwArgAC, dwArgC8, dwArgE8, dwArg0108, dwArg0118)
l2301C25E:
	word32 s1_142
	word32 a0_143
	word32 a1_144
	word32 a4_145
	word32 a5_146
	word32 s2_147
	word32 s3_148
	word32 s4_149
	ke_state_set(2<32>, 3<32>, mstatus, out s1_142, out a0_143, out a1_144, out a4_145, out a5_146, out s2_147, out s3_148, out s4_149)
	return
mm_scan_channel_start_ind_handler_exit:
l2301C214:
	assert_err()


void txl_buffer_reinit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_reset
//      txl_buffer_init
// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: sp
txl_buffer_reinit_entry:
l2301C272:
	Mem5[0x4201D4D8<32>:word32] = 0<32>
	Mem6[0x4201D4DC<32>:word32] = 0<32>
	return
txl_buffer_reinit_exit:


void txl_buffer_init(word32 a0, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_init
// MayUse:  a0:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
txl_buffer_init_entry:
l2301C284:
	txl_buffer_reinit()
	word32 s0_13 = 0x4204643C<32>
l2301C2C6:
	Mem37[s0_13:word32] = 0xBADCAB1E<32>
	word32 a0_39 = phy_get_ntx(a0)
	Mem42[(a0_39 << 14<i32>) + 4<i32>:word32] = s0_13
	word32 a0_47 = 1<32> << phy_get_ntx(a0_39 << 14<i32>) + 1<32>
	Mem49[a0_47 + 7<32>:word32] = s0_13
	Mem50[s0_13 + 12<i32>:word32] = 0<32>
	Mem52[s0_13 + 16<i32>:word32] = 0xF0000704<32>
	Mem53[s0_13 + 20<i32>:word32] = 0<32>
	Mem54[s0_13 + 24<i32>:word32] = 0<32>
	Mem55[s0_13 + 28<i32>:word32] = 0<32>
	Mem56[s0_13 + 32<i32>:word32] = 0<32>
	s0_13 = s0_13 + 60<i32>
	Mem61[s0_13 + 4072<i32>:word32] = Mem56[0x44B000A0<32>:int32] & 255<i32>
	Mem64[s0_13 + 4076<i32>:word32] = Mem61[0x44B000A0<32>:int32] & 255<i32>
	Mem67[s0_13 + 4080<i32>:word32] = Mem64[0x44B000A0<32>:int32] & 255<i32>
	word32 a5_68 = Mem67[0x44B000A0<32>:int32]
	Mem70[s0_13 + 4088<i32>:word32] = 0x2000200<32>
	Mem72[s0_13 + 4092<i32>:word32] = 0x3F0000<32>
	Mem74[s0_13 + 4084<i32>:word32] = a5_68 & 255<i32>
	a0 = a0_47 + 0xFFFFFFFF<32>
	branch s0_13 != 0x42046694<32> l2301C2C6
l2301C338:
	word32 s0_110 = 0x420463C4<32>
l2301C35C:
	Mem88[s0_110:word32] = 0xBADCAB1E<32>
	word32 a0_90 = phy_get_ntx(a0)
	Mem93[(a0_90 << 14<i32>) + 4<i32>:word32] = s0_110
	word32 a0_98 = 1<32> << phy_get_ntx(a0_90 << 14<i32>) + 1<32>
	Mem100[a0_98 + 7<32>:word32] = s0_110
	Mem101[s0_110 + 12<i32>:word32] = 0<32>
	Mem103[0xF0000714<32>:word32] = s0_110
	Mem104[s0_110 + 20<i32>:word32] = 0<32>
	Mem105[s0_110 + 24<i32>:word32] = 0<32>
	Mem106[s0_110 + 28<i32>:word32] = 0<32>
	Mem107[s0_110 + 32<i32>:word32] = 0<32>
	word32 a5_109 = Mem107[0x44B000A0<32>:int32]
	s0_110 = s0_110 + 60<i32>
	Mem111[s0_110 + 4076<i32>:word32] = 0<32>
	Mem113[s0_110 + 4072<i32>:word32] = a5_109 & 255<i32>
	Mem114[s0_110 + 4080<i32>:word32] = 0<32>
	Mem115[s0_110 + 4084<i32>:word32] = 0<32>
	Mem116[s0_110 + 4088<i32>:word32] = 0<32>
	Mem118[s0_110 + 4092<i32>:word32] = 0x3F0000<32>
	a0 = a0_98 + 0xFFFFFFFF<32>
	branch s0_110 != 0x4204643C<32> l2301C35C
l2301C3B4:
	0<32> = dwArg0128
	return
txl_buffer_init_exit:


void txl_buffer_reset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_flush_ac
// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: sp
txl_buffer_reset_entry:
l2301C3CA:
	Mem5[0x4201D4D8<32>:word32] = 0<32>
	Mem6[0x4201D4DC<32>:word32] = 0<32>
	return
txl_buffer_reset_exit:


word32 txl_buffer_alloc(word32 a0, word32 a1, word32 a2, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_push
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a3 a5
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: a1 a6 a7 s0 sp t1 t3
txl_buffer_alloc_entry:
l2301C3DC:
	word32 a4_11 = CONVERT(Mem9[a0 + 94<i32>:byte], byte, word32)
	Mem13[a0 + 440<i32>:byte] = SLICE(a2, byte, 0)
	Mem18[a0 + 212<i32>:word32] = (a4_11 + 15<i32> & 0xFFFFFFF0<32>) - a4_11
	Mem21[a0 + 260<i32>:word32] = 0xCAFEFADE<32>
	word32 a5_22 = CONVERT(Mem21[a0 + 50<i32>:uint16], uint16, word32)
	Mem23[a0 + 208<i32>:word32] = a4_11
	branch (a5_22 & 8<32>) != 0<32> l2301C420
l2301C416:
	a1 = txu_cntrl_frame_build(a0, a0 + 536<i32> + a4_11, out a2)
l2301C420:
	word32 s0_41 = Mem23[a1 + 84<i32>:word32]
	word32 a5_42 = 0<32>
l2301C428:
	word32 a3_49 = s0_41 + a5_42
	Mem51[a3_49 + 444<i32>:word32] = a2
	a5_42 = a5_42 + 4<32>
	branch a5_42 != 60<i32> l2301C428
l2301C43C:
	branch Mem51[0x4201D4D8<32>:int32] != 0<32> l2301C466
l2301C466:
	Mem60[a0 + 220<i32>:word32] = Mem51[0x4201D4DC<32>:int32]
l2301C44E:
	Mem61[0x4201D4D8<32>:word32] = a0 + 204<i32>
l2301C452:
	Mem64[0x4201D4DC<32>:word32] = a0 + 204<i32>
	Mem66[s0_41 + 220<i32>:word32] = 0<32>
	a2Out = dwArg10
	a3Out = a3_49
	a5Out = 0x4201D424<32>
	return a0 + 204<i32>
txl_buffer_alloc_exit:


word32 txl_buffer_update_thd(word32 ra, word32 a2, word32 a3, word32 a5, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_push
// MayUse:  a2:[0..31] a3:[0..31] a5:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
txl_buffer_update_thd_entry:
l2301C46E:
	word32 a7_7 = Mem0[Mem0[a5 + 104<i32>:word32] + 108<i32>:int32]
	word32 a4_17 = a5 + 76<i32>
	word32 a1_10 = 0<32>
l2301C488:
	branch a3 != 0<32> l2301C4A8
l2301C4A8:
	Mem18[a4_17:word32] = 0xCAFEFADE<32>
	word32 a0_19 = Mem18[a3:word32]
	a4_17 = a4_17 + 0x14<32>
	Mem22[a4_17 + 4084<i32>:word32] = a3
	word32 t3_23 = Mem22[a0_19 + 16<i32>:int32]
	Mem24[a4_17 + 4092<i32>:word32] = 0<32>
	word32 a3_27 = a3 + t3_23
	Mem29[a4_17 + 4088<i32>:word32] = a3_27 + 0xFFFFFFFF<32>
	Mem30[a4_17 + 4<i32>:word32] = a4_17
	a2 = a4_17
	a1_10 = a1_10 + 1<32>
	a3 = a3_27 + 0xFFFFFFFF<32>
l2301C48C:
	branch a1_10 != 0<32> l2301C4CE
l2301C4CE:
	word32 a5_32 = Mem14[a4_17 + 4<i32>:word32]
	Mem38[0xCAFEFB16<32>:word32] = a5_32
	Mem39[a5_32 + 396<i32>:word32] = a5_32
	Mem40[a4_17 + 0xFFFFFFFF<32> + (a5_32 + 332<i32>) + 68<i32>:word32] = a5_32
	Mem42[a5_32 + 60<i32>:word32] = a5 + 76<i32>
	Mem43[a5_32 + 72<i32>:word32] = 0<32>
	Mem46[a7_7 + 16<i32>:word32] = a5_32 + 56<i32>
	Mem49[a2 + 16<i32>:word32] = 0<32>
	Mem51[a7_7 + 60<i32>:word32] = 256<i32>
	Mem52[a2 + 4<i32>:word32] = 0<32>
	return 256<i32>
txl_buffer_update_thd_exit:
l2301C48E:
	word32 a1_102
	word32 a2_103
	word32 a0_101
	word32 s1_100
	word32 a3_104
	word32 a4_105
	word32 a5_106
	word32 a7_107
	word32 s2_108
	word32 s3_109
	word32 s4_110
	word32 s5_111
	word32 s6_112
	word32 s7_113
	word32 s8_114
	word32 s9_115
	word32 s10_116
	word32 s11_117
	word32 t4_118
	printf(ra, 0x230783B8<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_100, out a0_101, out a1_102, out a2_103, out a3_104, out a4_105, out a5_106, out a7_107, out s2_108, out s3_109, out s4_110, out s5_111, out s6_112, out s7_113, out s8_114, out s9_115, out s10_116, out s11_117, out t4_118)
l2301C4A6:


word32 txl_cfm_init(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_init
//      txl_reset
// MayUse:  ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
txl_cfm_init_entry:
l2301C508:
	word32 t1_36
	word32 a0_37
	word32 a1_38
	word32 a2_39
	word32 a3_40
	word32 a4_41
	word32 a5_42
	word32 ra_18 = memset(ra, 0x4201D500<32>, 0<32>, 40<i32>, out t1_36, out a0_37, out a1_38, out a2_39, out a3_40, out a4_41, out a5_42)
	co_list_init(0x4201D500<32>)
	co_list_init(0x4201D508<32>)
	co_list_init(0x4201D510<32>)
	co_list_init(0x4201D518<32>)
l2301C55A_thunk_co_list_init:
	co_list_init(0x4201D520<32>)
	return ra_18
txl_cfm_init_exit:


word32 txl_cfm_push(word32 a1, word32 a2, word32 a5, word32 mstatus, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_transmit_trigger
//      txu_cntrl_push
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a4 s1
// Trashed: a0 a1 a2 a4 a5 s1 t3 tp
// Preserved: sp
txl_cfm_push_entry:
l2301C55E:
	word32 a0_7 = Mem5[a5 + 108<i32>:word32]
	Mem13[a1 + 16<i32>:word32] = Mem10[a5:word32]
	word32 a0_17 = (a2 << 3<u32>) + 0x4201D500<32>
	word32 s1_19 = co_list_push_back(a0_7, 0x4201D500<32>)
l2301C596_thunk_ke_evt_set:
	word32 a5_35
	a4Out = ke_evt_set(a0_17, a2 << 3<u32>, mstatus, out a5_35)
	return s1_19
txl_cfm_push_exit:


void txl_cfm_evt(word32 s0, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a1 a3 s10 s5 s6 s7 s9 sp tp
txl_cfm_evt_entry:
l2301C59A:
	word32 a4_5 = a0 << 2<u32>
	word32 s1_16 = (a0 << 3<u32>) + 0x4201D500<32>
	branch (Mem14[0x4201BC58<32>:int32] & s0) != 0<32> l2301C5EE
l2301C5EE:
	word32 a5_37 = ke_evt_clear(s0, a0 << 2<u32>, mstatus)
l2301C5FC:
	branch Mem40[s1_16:int32] == 0<32> l2301C62C
l2301C62C:
	return
txl_cfm_evt_exit:
l2301C604:
	__csrrc(mstatus, 8<32>)
	word32 a5_54
	co_list_pop_front(a4_5, a5_37, out a5_54)
	__csrrs(mstatus, 8<32>)
	word32 a5_81
	word32 s2_83
	word32 a1_131
	word32 s3_132
	word32 s4_133
	word32 s5_134
	word32 mstatus_135
	txu_cntrl_cfm(me_tx_cfm_singleton(a5_54, dwLoc04, dwArg04, dwArg0108), dwArg18, out s1_16, out a1_131, out a4_5, out a5_81, out s2_83, out s3_132, out s4_133, out s5_134, out mstatus_135)
	Mem88[a5_81 + 0x4F<32>:word32] = Mem40[a5_81 + 80<i32>:word32]
	a5_37 = ipc_emb_txcfm_ind(s2_83)
l2301C5D6:
	assert_err()


word32 txl_cfm_flush(word32 ra, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_cntrl_flush_ac
//      txl_reset
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a1 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a2 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: a1 a4 mstatus ra sp
txl_cfm_flush_entry:
l2301C63A:
	word32 s5_22 = a1
	word32 s4_24 = a2
	word32 s3_27 = a2 | 0x3C000000<32>
l2301C664:
	word32 a5_34
	branch co_list_pop_front(a4, a5, out a5_34) == 0<32> l2301C6A6
l2301C6A6:
	word32 s2_45
	word32 s3_46
	word32 s1_44 = txl_frame_evt(ra, a1, a4, mstatus, out s2_45, out s3_46)
l2301C6BC_thunk_ipc_emb_txcfm_ind:
	word32 a5_62 = ipc_emb_txcfm_ind(s2_45)
	s0Out = s1
	s1Out = s1_44
	a1Out = <invalid>
	a4Out = <invalid>
	a5Out = a5_62
	s2Out = s2_45
	s3Out = s3_46
	s4Out = dwArg04
	s5Out = s5_22
	s6Out = <invalid>
	s8Out = s4
	return <invalid>
txl_cfm_flush_exit:
l2301C66E:
	word32 a5_65 = Mem51[a5_34:word32]
	branch a4 == 0<32> l2301C686
l2301C686:
	a5_65 = Mem51[a4 + 16<i32>:word32]
	branch a4 < 0<32> l2301C67A
l2301C68C:
	Mem68[a5_65 + 16<i32>:word32] = s4_24
l2301C676:
	Mem70[a5_65 + 16<i32>:word32] = s3_27
l2301C67A:
	word32 s0_73 = Mem72[a5_65 + 8<i32>:word32]
	branch a5_65 != 0<32> l2301C692
l2301C692:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg56 = <invalid>
	word32 s1_161
	word32 a5_98
	word32 s2_162
	ra = txu_cntrl_cfm(a5_98 + 0xFFFFFFFF<32>, stackArg56, out s1_161, out a1, out a4, out a5_98, out s2_162, out s3_27, out s4_24, out s5_22, out mstatus)
	Mem107[a5_98 + 0x4F<32>:word32] = Mem72[a5_98 + 80<i32>:word32]
	a5 = a5_98 + 0xFFFFFFFF<32>
	word32 s0_108 = Mem107[a5_98 + 0x67<32>:word32]
	branch a5_98 == 0xFFFFFFFF<32> l2301C664
l2301C6A0:
	Mem109[s0_108 + 104<i32>:word32] = 0<32>
l2301C680:
	a1 = txl_frame_cfm(s0_73, a4, a5_65, mstatus, out a4, out a5)


void txl_cfm_dma_int_handler(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
txl_cfm_dma_int_handler_entry:
l2301C6C0:
	word32 a4_5 = Mem0[a5 + 36<i32>:word32]
	Mem7[(a5 & 256<i32>) + 32<i32>:word32] = a4_5
	Mem11[(a4_5 & 0xFFFFFFFE<32>) + 4<i32>:word32] = Mem7[a4_5 + 4<i32>:word32]
	return
txl_cfm_dma_int_handler_exit:


void txl_cfm_dump(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl60x_fw_dump_statistic
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 s1 tp
// Preserved: s0 sp
txl_cfm_dump_entry:
l2301C6DC:
	word32 s0_13 = 0x4201D500<32>
l2301C6F0:
	branch co_list_cnt(a5, out a5) == 0<32> l2301C6FC
l2301C6F8:
	s0_13 = Mem11[a5:word32]
l2301C6FA:
	branch a5 != 0<32> l2301C70C
l2301C70C:
	a5 = Mem11[a5:word32]
l2301C6FC:
	s0_13 = s0_13 + 8<32>
	branch s0_13 != 0x4201D528<32> l2301C6F0
l2301C702:
	return
txl_cfm_dump_exit:


word32 bam_init(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_init
// MayUse:  mstatus:[0..31]
// LiveOut: s0
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bam_init_entry:
l2301C710:
	Mem7[0x4201D534<32>:byte] = 0xFF<8>
l2301C71E_thunk_ke_state_set:
	word32 s1_23
	word32 a0_24
	word32 a1_25
	word32 a4_26
	word32 a5_27
	word32 s2_28
	word32 s3_29
	word32 s4_30
	return ke_state_set(8<32>, 0<32>, mstatus, out s1_23, out a0_24, out a1_25, out a4_26, out a5_27, out s2_28, out s3_29, out s4_30)
bam_init_exit:


void bam_send_air_action_frame(word32 ra, word32 a0, word32 a2, word32 a5, word32 s10, word32 fflags, word32 frm, word32 mstatus, word32 dwArg28, word32 dwArg58, word32 dwArg64, word32 dwArg8C, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..7] Stack +0028:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bam_send_air_action_frame_entry:
l2301C722:
	word32 a4_53
	word32 a5_54
	phy_get_channel(fp + -72<i32>, out a4_53, out a5_54)
	word32 s1_66
	word32 s4_67
	word32 s8_68
	word32 a0_71
	word32 s2_75
	word32 s3_76
	word32 s0_449
	word32 a1_450
	word32 a3_451
	word32 a4_452
	word32 a5_453
	word32 s5_454
	word32 s6_455
	word32 s7_456
	word32 s9_457
	word32 s10_458
	word32 s11_459
	txl_frame_get(ra, CONVERT(CONVERT(SLICE(s10, byte, 0), byte, word32) != 0<32>, bool, word32), 256<i32>, a4_53, a5_54, fflags, frm, mstatus, dwArgA8, dwArgC8, dwArgE8, out s0_449, out s1_66, out a0_71, out a1_450, out a3_451, out a4_452, out a5_453, out s2_75, out s3_76, out s4_67, out s5_454, out s6_455, out s7_456, out s8_68, out s9_457, out s10_458, out s11_459)
	branch a0_71 == 0<32> l2301C8D2
l2301C780:
	word32 a5_132
	word32 a4_97
	word32 a3_193 = tpc_update_frame_tx_power(ra, s4_67 + 0x4201A9E8<32>, fflags, frm, out a4_97)
	word32 a1_103 = Mem92[a0_71 + 104<i32>:int32]
	Mem106[a1_103 + 332<i32>:byte] = 0xD0<8>
	Mem107[a1_103 + 333<i32>:byte] = 0<8>
	Mem108[a1_103 + 334<i32>:byte] = 0<8>
	Mem109[a1_103 + 335<i32>:byte] = 0<8>
	word32 s8_89 = s8_68 + (a0 + 0x1CE<32>)
	Mem113[a1_103 + 336<i32>:word16] = SLICE(CONVERT(Mem109[s8_89:uint16], uint16, word32), word16, 0)
	Mem115[a1_103 + 338<i32>:word16] = SLICE(CONVERT(Mem113[s8_89 + 2<i32>:uint16], uint16, word32), word16, 0)
	Mem117[a1_103 + 340<i32>:word16] = SLICE(CONVERT(Mem115[s8_89 + 4<i32>:uint16], uint16, word32), word16, 0)
	Mem121[a1_103 + 342<i32>:word16] = SLICE(CONVERT(Mem117[s4_67 + 0x4201AA38<32>:uint16], uint16, word32), word16, 0)
	Mem123[a1_103 + 344<i32>:word16] = SLICE(CONVERT(Mem121[s4_67 + 0x4201AA3A<32>:uint16], uint16, word32), word16, 0)
	Mem125[a1_103 + 346<i32>:word16] = SLICE(CONVERT(Mem123[s4_67 + 0x4201AA3C<32>:uint16], uint16, word32), word16, 0)
	branch CONVERT(Mem125[a4_97 + 86<i32>:byte], byte, word32) != 2<32> l2301C87C
l2301C87C:
	Mem129[a1_103 + 348<i32>:word16] = SLICE(CONVERT(Mem125[s8_89:uint16], uint16, word32), word16, 0)
	Mem131[a1_103 + 350<i32>:word16] = SLICE(CONVERT(Mem129[s8_89 + 2<i32>:uint16], uint16, word32), word16, 0)
	a5_132 = CONVERT(Mem131[s8_89 + 4<i32>:uint16], uint16, word32)
l2301C804:
	Mem134[a1_103 + 348<i32>:word16] = SLICE(CONVERT(Mem125[s4_67 + 0x4201AA38<32>:uint16], uint16, word32), word16, 0)
	Mem136[a1_103 + 350<i32>:word16] = SLICE(CONVERT(Mem134[s4_67 + 0x4201AA3A<32>:uint16], uint16, word32), word16, 0)
	a5_132 = CONVERT(Mem136[s4_67 + 0x4201AA3C<32>:uint16], uint16, word32)
l2301C818:
	word32 s0_181
	word32 a0_185
	word32 a5_173
	word32 a0_170
	Mem140[a1_103 + 352<i32>:word16] = SLICE(a5_132, word16, 0)
	word32 a6_145 = CONVERT(Mem140[0x4201A3FC<32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem147[0x4201A3FC<32>:word16] = SLICE(a6_145 >>u 0x10<u32>, word16, 0)
	word32 a6_150 = CONVERT(SLICE(a6_145 >>u 0x10<u32> << 4<i32>, word16, 0), word16, word32)
	Mem151[a1_103 + 354<i32>:byte] = SLICE(a6_150, byte, 0)
	Mem153[a1_103 + 355<i32>:byte] = SLICE(a6_150 >>u 8<u32>, byte, 0)
	Mem156[a0_71 + 47<i32>:byte] = SLICE(s4_67, byte, 0)
	Mem158[a0_71 + 48<i32>:byte] = SLICE(s3_76, byte, 0)
	branch a2 == 1<32> l2301C8F0
l2301C8F0:
	a0_170 = me_build_add_ba_rsp(a1_103 + 0x164<32>, dwArg64, a3_193, a5, out a5_173)
l2301C856:
	branch a2 == 0<32> l2301C892
l2301C892:
	s0_181 = CONVERT(Mem158[(dwArg64 >> 2<i32> & 0xF<32>) + 0x23075D40<32>:byte], byte, word32)
	a0_185 = me_build_add_ba_req(a1_103 + 0x164<32>, s1_66, out a5_173) + 0x18<32>
l2301C85A:
	a5_173 = 2<32>
	branch a2 == 2<32> l2301C902
l2301C902:
	a0_170 = me_build_del_ba(a1_103 + 0x164<32>, s1_66, a5, out a3_193, out a5_173)
l2301C8FC:
	a0_185 = a0_170 + 0x18<32>
l2301C860:
	assert_warn()
	a0_185 = 0x18<32>
l2301C8FE:
	s0_181 = 3<32>
l2301C8AE:
	word32 a4_215 = Mem158[a5_173 + 20<i32>:word32]
	word32 a5_219 = a5_173 + 0xFFFFFFFF<32> + a0_185
	Mem221[a5_219 + 24<i32>:word32] = a4_215
	Mem222[a0_185 + 0x20<32>:word32] = a4_215
	branch s2_75 == 0<32> l2301C8CA
l2301C8C2:
	Mem227[a0_71 + 716<i32>:word32] = s2_75
	Mem231[a0_71 + 720<i32>:word32] = s1_66
l2301C8CA:
	word32 s7_472
	word32 s9_473
	word32 s10_474
	word32 s11_475
	word32 a5_466
	word32 s2_467
	word32 s3_468
	word32 s4_469
	word32 s6_471
	word32 s5_470
	word32 s1_461
	word32 a0_462
	word32 a1_463
	word32 a4_465
	word32 a3_464
	word32 s0_460
	txl_frame_push(ra, s0_181, s0_181, a3_193, a5_219, mstatus, dwLoc28, dwArg28, dwArg58, dwArg8C, out s0_460, out s1_461, out a0_462, out a1_463, out a3_464, out a4_465, out a5_466, out s2_467, out s3_468, out s4_469, out s5_470, out s6_471, out s7_472, out s9_473, out s10_474, out s11_475)
l2301C8D2:
	return
bam_send_air_action_frame_exit:


void rxu_mgt_ind_handler(word32 ra, word32 a1, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg38, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg88, word32 dwArg9C, word32 dwArgA8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rxu_mgt_ind_handler_entry:
l2301C90E:
	branch CONVERT(Mem0[a1 + 29<i32>:byte], byte, word32) != 0<32> l2301C9E2
l2301C9E2:
	return
l2301C914:
	word32 s0_26 = CONVERT(Mem21[a1 + 32<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem21[a1 + 31<i32>:byte], byte, word32)
	branch (s0_26 & 1<i32>) == 0<32> l2301C94E
l2301C946:
l2301C94E:
	branch (s0_26 & 2<i32>) != 0<32> l2301C964
l2301C95C:
l2301C964:
	word32 s1_301
	word32 s3_65
	word32 a1_303
	word32 a0_302
	word32 a3_305
	word32 a2_304
	word32 a4_306
	word32 a5_307
	word32 a7_308
	word32 s2_309
	word32 s4_310
	word32 s5_311
	word32 s6_312
	word32 s7_313
	word32 s8_314
	word32 s9_315
	word32 s10_316
	word32 s11_317
	word32 t4_318
	word32 ra_60 = printf(ra, 0x23078440<32>, s0_26 >> 2<u32> & 0xF<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_301, out a0_302, out a1_303, out a2_304, out a3_305, out a4_306, out a5_307, out a7_308, out s2_309, out s3_65, out s4_310, out s5_311, out s6_312, out s7_313, out s8_314, out s9_315, out s10_316, out s11_317, out t4_318)
	word32 a3_75 = s3_65
	branch s3_65 <=u 8<32> l2301C986
l2301C984:
	a3_75 = 8<32>
l2301C986:
	word32 s1_110
	word32 s10_111
	word32 a0_319
	word32 a1_320
	word32 a2_321
	word32 a3_322
	word32 a4_323
	word32 a5_324
	word32 a7_325
	word32 s2_326
	word32 s3_327
	word32 s4_328
	word32 s5_329
	word32 s6_330
	word32 s7_331
	word32 s8_332
	word32 s9_333
	word32 s11_334
	word32 t4_335
	bam_send_air_action_frame(printf(ra_60, 0x230784B8<32>, CONVERT(SLICE(CONVERT(SLICE(a3_75, word16, 0), word16, word32) << 6<i32> | (s0_26 & 62<i32> | 2<i32>), word16, 0), word16, int32) >> 2<i32> & 0xF<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_110, out a0_319, out a1_320, out a2_321, out a3_322, out a4_323, out a5_324, out a7_325, out s2_326, out s3_327, out s4_328, out s5_329, out s6_330, out s7_331, out s8_332, out s9_333, out s10_111, out s11_334, out t4_335), s1_110, 1<32>, 0<32>, s10_111, fflags, frm, mstatus, dwArg08, dwArg38, dwArg44, ra, dwArg88, dwArgA8, dwArgC8)
	return
rxu_mgt_ind_handler_exit:


word32 co_pack8p(word32 a0, word32 a1, word32 a2, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_add_ie_ssid
//      me_add_ie_supp_rates
//      me_add_ie_ext_supp_rates
//      me_add_ie_ht_capa
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
co_pack8p_entry:
l2301C9E6:
	word32 a5_12 = 0<32>
l2301C9E8:
	branch a2 != a5_12 l2301C9EE
l2301C9EE:
	a3 = CONVERT(Mem8[a1 + a5_12:byte], byte, word32)
	a4 = a0 + a5_12
	Mem13[a4:byte] = SLICE(a3, byte, 0)
	a5_12 = a5_12 + 1<32>
l2301C9EC:
	a4Out = a4
	a5Out = a5_12
	return a3
co_pack8p_exit:


word32 phy_freq_to_channel(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_add_ie_ht_oper
//      me_build_associate_req
//      me_extract_country_reg
//      me_build_probe_rsp
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
phy_freq_to_channel_entry:
l2301CA02:
	word32 a4_11
	word32 a5_20
	word32 a5_13
	branch a0 != 0<32> l2301CA36
l2301CA36:
	a4_11 = 1<32>
	a5_20 = 0<32>
	branch a0 != 1<32> l2301CA32
l2301CA3E:
	word32 a4_10 = a1 + 0xFEFFFC73<32> << 16<i32>
	a4_11 = a4_10 >>u 16<i32>
	a3 = 820<i32>
	branch a4_10 >>u 16<i32> >u 820<i32> l2301CA32
l2301CA52:
	a5_13 = 0xFEFFFC78<32>
l2301CA04:
	word32 a4_17 = a1 + 0xFF000694<32> << 16<i32>
	a4_11 = a4_17 >>u 16<i32>
	a3 = 72<i32>
	a5_20 = 0<32>
	branch a4_17 >>u 16<i32> >u 72<i32> l2301CA32
l2301CA1A:
	a4_11 = 0xFFF9B4<32>
	a5_20 = 0xE<32>
	branch a1 == 0xFFF9B4<32> l2301CA32
l2301CA26:
	a5_13 = 0xFF000699<32>
l2301CA2A:
	a5_20 = a1 + a5_13 ^ 5<32>
l2301CA32:
	a3Out = a3
	a4Out = a4_11
	a5Out = a5_20
	return a5_20
phy_freq_to_channel_exit:


word32 phy_channel_to_freq(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_extract_csa
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a4 a5
// Preserved: sp
phy_channel_to_freq_entry:
l2301CA58:
	word32 a1_10
	branch a0 != 0<32> l2301CA7E
l2301CA7E:
	branch a1 >u -165<i32> l2301CA9C
l2301CA86:
	a1_10 = 0x1000388<32>
l2301CA5E:
	branch a1 >u 0xFFFFFFF2<32> l2301CA9C
l2301CA9C:
	return 0xFFFFFFF<32>
l2301CA64:
	branch a1 == 0xE<32> l2301CA94
l2301CA94:
	return 0xFFF9B4<32>
l2301CA6A:
	a1_10 = 0xFFF967<32>
l2301CA76:
	return CONVERT(SLICE(a1 + 5<32> + a1_10, word16, 0), word16, word32)
phy_channel_to_freq_exit:


word32 me_add_ie_ssid(word32 a1, word32 a2, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
me_add_ie_ssid_entry:
l2301CAA2:
	Mem15[a4:byte] = 0<8>
	word32 a0_16 = Mem15[a4:word32]
	Mem18[a4 + 1<i32>:byte] = SLICE(a1, byte, 0)
	word32 a5_14 = a1
	branch a1 == 0<32> l2301CACC
l2301CAC0:
	word32 a4_51
	co_pack8p(Mem18[a0_16:word32] + 2<32>, a2, a1, out a4_51, out a5_14)
l2301CACC:
	Mem35[a5_14 + (a1 + 2<i32>):word32] = Mem18[a5_14:word32]
	return a1 + 2<i32>
me_add_ie_ssid_exit:


word32 me_add_ie_supp_rates(word32 a1, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
// MayUse:  a1:[0..31]
// LiveOut: a0 a3 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
me_add_ie_supp_rates_entry:
l2301CADE:
	word32 a5_11 = CONVERT(Mem9[a1:byte], byte, word32)
	word32 a2_15 = 8<32>
	branch a5_11 >u 8<32> l2301CAF6
l2301CAF4:
	a2_15 = a5_11
l2301CAF6:
	Mem22[8<32>:byte] = 1<8>
	word32 s1_24 = a2_15 + 2<i32>
	word32 a4_27 = a5_11
	branch a5_11 <=u 8<32> l2301CB0E
l2301CB0C:
	a4_27 = 8<32>
l2301CB0E:
	Mem31[2<32>:byte] = SLICE(a4_27, byte, 0)
	word32 a4_66
	word32 a5_41
	word32 a3_39 = co_pack8p(0xA<32>, a1 + 1<32>, a2_15, out a4_66, out a5_41)
	Mem49[a5_41 + s1_24:word32] = Mem31[a5_41:word32]
	a0Out = s1_24
	a3Out = a3_39
	return s1_24
me_add_ie_supp_rates_exit:


word32 me_add_ie_ext_supp_rates(word32 a1, word32 a5, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a0 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
me_add_ie_ext_supp_rates_entry:
l2301CB2E:
	word32 a2_14 = CONVERT(Mem9[a1:byte], byte, word32)
	Mem15[a5:byte] = 0x32<8>
	word32 a0_16 = Mem15[a5:word32]
	Mem19[a5 + 1<i32>:byte] = SLICE(a2_14 + 0xFFFFFFF8<32>, byte, 0)
	word32 a4_25
	word32 a5_26
	word32 a3_24 = co_pack8p(Mem19[a0_16:word32] + 2<32>, a1 + 9<32>, a2_14 + 0xFFFFFFF8<32>, out a4_25, out a5_26)
	word32 a5_30 = a5_26 + (a2_14 + -6<i32>)
	Mem31[a5_30:word32] = Mem19[a5_26:word32]
	a0Out = a2_14 + -6<i32>
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_30
	return a2_14 + -6<i32>
me_add_ie_ext_supp_rates_exit:


word32 me_add_ie_ds(word32 a1, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
//      me_build_probe_rsp
// MayUse:  a1:[0..7] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
me_add_ie_ds_entry:
l2301CB6E:
	Mem7[a5:byte] = 3<8>
	Mem10[a5 + 1<i32>:byte] = 1<8>
	Mem13[a5 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem16[a5 + 3<32>:word32] = Mem13[a5:word32]
	a4Out = 1<32>
	a5Out = a5 + 3<32>
	return 3<32>
me_add_ie_ds_exit:


word32 me_add_ie_erp(word32 a1, word32 a5, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
//      me_build_probe_rsp
// MayUse:  a1:[0..7] a5:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
me_add_ie_erp_entry:
l2301CB8E:
	Mem7[a5:byte] = 0x2A<8>
	Mem10[a5 + 1<i32>:byte] = 1<8>
	Mem13[a5 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem16[a5 + 3<32>:word32] = Mem13[a5:word32]
	a4Out = 1<32>
	return 3<32>
me_add_ie_erp_exit:


word32 me_add_ie_rsn(word32 a1, word32 a4, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
//      me_build_probe_rsp
// MayUse:  a1:[0..31] a4:[0..31]
// LiveOut: a0 a2 a5
// Trashed: a0 a2 a3 a4 a5 a6
// Preserved: sp
me_add_ie_rsn_entry:
l2301CBB0:
	word32 a0_11
	branch a1 != 1<32> l2301CC3C
l2301CC3C:
	a0_11 = 0<32>
	branch a1 != 2<32> l2301CC34
l2301CC44:
	Mem13[a4:byte] = 0x30<8>
	Mem17[a4 + 1<i32>:byte] = 0x18<8>
	Mem21[a4 + 2<i32>:byte] = 1<8>
	Mem22[a4 + 3<i32>:byte] = 0<8>
	Mem24[a4 + 4<i32>:byte] = 0<8>
	Mem25[a4 + 5<i32>:byte] = 0xF<8>
	Mem26[a4 + 6<i32>:byte] = 0xAC<8>
	Mem27[a4 + 7<i32>:byte] = SLICE(a1, byte, 0)
	Mem29[a4 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem30[a4 + 9<i32>:byte] = 0<8>
	Mem32[a4 + 10<i32>:byte] = 0<8>
	Mem33[a4 + 11<i32>:byte] = 0xF<8>
	Mem34[a4 + 12<i32>:byte] = 0xAC<8>
	Mem35[a4 + 13<i32>:byte] = SLICE(a1, byte, 0)
	Mem37[a4 + 17<i32>:byte] = 4<8>
	Mem38[a4 + 14<i32>:byte] = 0<8>
	Mem39[a4 + 15<i32>:byte] = 0xF<8>
	Mem40[a4 + 16<i32>:byte] = 0xAC<8>
	Mem43[a4 + 18<i32>:byte] = 1<8>
	Mem44[a4 + 19<i32>:byte] = 0<8>
	Mem46[a4 + 20<i32>:byte] = 0<8>
	Mem47[a4 + 21<i32>:byte] = 0xF<8>
	Mem48[a4 + 22<i32>:byte] = 0xAC<8>
	Mem49[a4 + 23<i32>:byte] = SLICE(a1, byte, 0)
	Mem51[a4 + 24<i32>:byte] = 0<8>
	Mem52[a4 + 25<i32>:byte] = 0<8>
	a2 = 0xF<32>
	a0_11 = 0x1A<32>
l2301CBBA:
	Mem54[a4:byte] = 0x30<8>
	Mem58[a4 + 1<i32>:byte] = 0x14<8>
	Mem61[a4 + 2<i32>:byte] = SLICE(a1, byte, 0)
	Mem62[a4 + 3<i32>:byte] = 0<8>
	Mem65[a4 + 6<i32>:byte] = 0xAC<8>
	Mem66[a4 + 7<i32>:byte] = 4<8>
	Mem67[a4 + 4<i32>:byte] = 0<8>
	Mem68[a4 + 5<i32>:byte] = 0xF<8>
	Mem70[a4 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem71[a4 + 9<i32>:byte] = 0<8>
	Mem73[a4 + 12<i32>:byte] = 0xAC<8>
	Mem74[a4 + 13<i32>:byte] = 4<8>
	Mem75[a4 + 10<i32>:byte] = 0<8>
	Mem76[a4 + 11<i32>:byte] = 0xF<8>
	Mem79[a4 + 14<i32>:byte] = SLICE(a1, byte, 0)
	Mem80[a4 + 15<i32>:byte] = 0<8>
	Mem82[a4 + 18<i32>:byte] = 0xAC<8>
	Mem84[a4 + 16<i32>:byte] = 0<8>
	Mem85[a4 + 17<i32>:byte] = 0xF<8>
	Mem86[a4 + 19<i32>:byte] = 2<8>
	Mem88[a4 + 20<i32>:byte] = 0<8>
	Mem89[a4 + 21<i32>:byte] = 0<8>
	a2 = 0xF<32>
	a0_11 = 0x16<32>
l2301CC34:
	word32 a5_92 = Mem91[a4:word32]
	Mem95[a4 + a0_11:word32] = a5_92
	a2Out = a2
	a5Out = a5_92
	return a0_11
me_add_ie_rsn_exit:


word32 me_add_ie_wpa(word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
//      me_build_probe_rsp
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a3 a4 a5 a6
// Preserved: sp
me_add_ie_wpa_entry:
l2301CCD0:
	word32 a4_20 = 2<32>
	word32 a0_50 = 0<32>
	branch a1 != 2<32> l2301CD70
l2301CCDA:
	Mem12[2<32>:byte] = 0xDD<8>
	Mem16[3<32>:byte] = 0x1C<8>
	Mem21[a2 + 5<i32>:byte] = 1<8>
	Mem22[a2 + 2<i32>:byte] = 0<8>
	Mem23[a2 + 3<i32>:byte] = 0x50<8>
	Mem24[a2 + 4<i32>:byte] = 0xF2<8>
	Mem26[a2 + 6<i32>:byte] = 1<8>
	Mem27[a2 + 7<i32>:byte] = 0<8>
	Mem29[a2 + 8<i32>:byte] = 0<8>
	Mem30[a2 + 9<i32>:byte] = 0x50<8>
	Mem31[a2 + 10<i32>:byte] = 0xF2<8>
	Mem32[a2 + 11<i32>:byte] = SLICE(a1, byte, 0)
	Mem34[a2 + 12<i32>:byte] = SLICE(a1, byte, 0)
	Mem35[a2 + 13<i32>:byte] = 0<8>
	Mem37[a2 + 14<i32>:byte] = 0<8>
	Mem38[a2 + 15<i32>:byte] = 0x50<8>
	Mem39[a2 + 16<i32>:byte] = 0xF2<8>
	Mem40[a2 + 17<i32>:byte] = SLICE(a1, byte, 0)
	Mem42[a2 + 18<i32>:byte] = 0<8>
	Mem43[a2 + 19<i32>:byte] = 0x50<8>
	Mem44[a2 + 20<i32>:byte] = 0xF2<8>
	Mem45[a2 + 21<i32>:byte] = 4<8>
	Mem47[a2 + 22<i32>:byte] = 1<8>
	Mem48[a2 + 23<i32>:byte] = 0<8>
	Mem51[a2 + 24<i32>:byte] = 0<8>
	Mem52[a2 + 25<i32>:byte] = 0x50<8>
	Mem53[a2 + 26<i32>:byte] = 0xF2<8>
	Mem54[a2 + 27<i32>:byte] = SLICE(a1, byte, 0)
	a3 = 80<i32>
	a4_20 = 0xFFFFFFF2<32>
	a0_50 = 0x1E<32>
l2301CD70:
	word32 a4_59 = a4_20 + a0_50
	Mem60[a4_59:word32] = Mem56[a4_20:word32]
	a3Out = a3
	a4Out = a4_59
	return a0_50
me_add_ie_wpa_exit:


word32 me_add_ie_tim(word32 a1, word32 a5, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
// MayUse:  a1:[0..7] a5:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
me_add_ie_tim_entry:
l2301CD78:
	Mem7[a5:byte] = 5<8>
	Mem10[a5 + 1<i32>:byte] = 4<8>
	Mem13[a5 + 3<i32>:byte] = SLICE(a1, byte, 0)
	Mem16[a5 + 6<32>:word32] = Mem13[a5:word32]
	a4Out = 4<32>
	return 6<32>
me_add_ie_tim_exit:


word32 me_add_ie_ht_capa(word32 a4, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_associate_req
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
// MayUse:  a4:[0..31]
// LiveOut: a0 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
me_add_ie_ht_capa_entry:
l2301CD98:
	word32 a5_15 = CONVERT(Mem9[0x4201AFE0<32>:uint16], uint16, word32)
	Mem16[a4:byte] = 0x2D<8>
	Mem20[a4 + 1<i32>:byte] = 0x1A<8>
	word32 a5_22 = a5_15 & 0xFFFFFFF3<32> | 12<i32>
	Mem24[a4 + 2<i32>:byte] = SLICE(a5_22, byte, 0)
	Mem26[a4 + 3<i32>:byte] = SLICE(a5_22 >>u 8<i32>, byte, 0)
	word32 a0_28 = Mem26[a5_22 >>u 8<i32>:word32]
	Mem31[(a5_22 >>u 8<i32>) + 4<i32>:byte] = SLICE(CONVERT(Mem26[0x4201AFE2<32>:byte], byte, word32), byte, 0)
	word32 a0_32 = Mem31[a0_28:word32]
	word32 a4_36
	word32 a5_69
	co_pack8p(a0_32 + 5<32>, 0x4201AFE3<32>, 0x10<32>, out a4_36, out a5_69)
	word32 a5_38 = CONVERT(Mem31[0x4201AFF4<32>:uint16], uint16, word32)
	Mem42[a4_36 + 21<i32>:byte] = SLICE(a5_38, byte, 0)
	Mem44[a4_36 + 22<i32>:byte] = SLICE(a5_38 >>u 8<i32>, byte, 0)
	word32 a5_50
	word32 a4_70
	co_pack8p(a0_32 + 0x1C<32>, 0x4201AFF8<32>, 4<32>, out a4_70, out a5_50)
	Mem54[a5_50 + 27<i32>:byte] = SLICE(CONVERT(Mem44[0x4201AFFC<32>:byte], byte, word32), byte, 0)
	Mem59[a5_50 + 0x1C<32>:word32] = Mem54[a5_50:word32]
	a0Out = 0x1C<32>
	a5Out = a5_50 + 0x1C<32>
	return 0x4201AFD4<32>
me_add_ie_ht_capa_exit:


word32 me_add_ie_ht_oper(word32 s1, word32 a5, ptr32 & a2Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_build_beacon
//      me_build_probe_rsp
//      me_build_associate_rsp
// MayUse:  a5:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3
// Trashed: a0 a1 a2 a3 a4 a5 tp
// Preserved: s0 sp
me_add_ie_ht_oper_entry:
l2301CE2C:
	Mem14[a5:byte] = 0x3D<8>
	Mem18[a5 + 1<i32>:byte] = 0x16<8>
	word32 a5_23
	word32 a4_22
	word32 a3_24
	Mem27[a5_23 + 2<i32>:byte] = SLICE(phy_freq_to_channel(CONVERT(Mem18[s1 + 4<i32>:byte], byte, word32), CONVERT(Mem18[s1 + 6<i32>:uint16], uint16, word32), out a3_24, out a4_22, out a5_23), byte, 0)
	word32 a5_28 = CONVERT(Mem27[s1 + 5<i32>:byte], byte, word32)
	branch a5_28 == 0<32> l2301CE72
l2301CE62:
	a3_24 = CONVERT(Mem27[s1 + 6<i32>:uint16], uint16, word32)
	a4_22 = CONVERT(Mem27[s1 + 8<i32>:uint16], uint16, word32)
	a5_28 = 7<32>
	branch a4_22 <u a3_24 l2301CE72
l2301CE70:
	a5_28 = 5<32>
l2301CE72:
	Mem38[a4_22 + 3<i32>:byte] = SLICE(a5_28, byte, 0)
	Mem41[a5_28 + 4<i32>:byte] = 3<8>
	Mem42[a5_28 + 5<i32>:byte] = 0<8>
	Mem45[a5_28 + 6<i32>:byte] = 0<8>
	Mem46[a5_28 + 7<i32>:byte] = 0<8>
	Mem48[a5_28 + 8<i32>:byte] = 0xFF<8>
	Mem54[a5_28 + 0x18<32>:word32] = Mem48[a5_28:word32]
	a2Out = dwArg10
	a3Out = a3_24
	return 0x18<32>
me_add_ie_ht_oper_exit:


word32 me_build_authenticate(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_auth_send
//      apm_send_mlme
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a5
// Preserved: sp
me_build_authenticate_entry:
l2301CEA8:
	Mem5[a0:byte] = SLICE(a1, byte, 0)
	Mem7[a0 + 2<i32>:byte] = SLICE(a2, byte, 0)
	Mem11[a0 + 4<i32>:byte] = SLICE(a3, byte, 0)
	Mem13[a0 + 1<i32>:byte] = SLICE(a1 >>u 8<i32>, byte, 0)
	Mem14[a0 + 3<i32>:byte] = SLICE(a2 >>u 8<i32>, byte, 0)
	Mem15[a0 + 5<i32>:byte] = SLICE(a3 >>u 8<i32>, byte, 0)
	branch a4 == 0<32> l2301CEFA
l2301CEFA:
	a3Out = a3 >>u 8<i32>
	a5Out = a5
	return 6<32>
l2301CEC8:
	Mem19[a0 + 6<i32>:byte] = 0x10<8>
	Mem21[a0 + 7<i32>:byte] = 0x80<8>
	word32 a5_24 = 0<32>
l2301CEDE:
	Mem33[a0 + 8<32> + a5_24:byte] = SLICE(CONVERT(Mem28[a4 + a5_24:byte], byte, word32), byte, 0)
	a5_24 = a5_24 + 1<32>
	branch a5_24 != 128<i32> l2301CEDE
l2301CEF4:
	a3Out = 128<i32>
	a5Out = a5_24
	return 136<i32>
me_build_authenticate_exit:


word32 me_build_deauthenticate(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_disconnect
//      sm_handle_supplicant_result
//      apm_send_mlme
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a1
// Preserved: sp
me_build_deauthenticate_entry:
l2301CEFE:
	Mem5[a0:byte] = SLICE(a1, byte, 0)
	Mem7[a0 + 1<i32>:byte] = SLICE(a1 >>u 8<i32>, byte, 0)
	return 2<32>
me_build_deauthenticate_exit:


word32 me_build_associate_req(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 a6, word32 s6, word32 s8, word32 s10, word32 s11, word32 dwArg04, word32 dwArg40, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sm_assoc_req_send
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s6:[0..7] s8:[24..31] Stack +0004:[0..31] Stack +0040:[0..31]
// LiveOut: a0 a3 a4 ra s2 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s10 sp t1
me_build_associate_req_entry:
l2301CF0C:
	int8 bLoc50_515 = SLICE(s6, int8, 0)
	byte bLoc51_523 = SLICE(s8, byte, 24)
	word32 s0_31 = CONVERT(Mem29[a6 + 56<i32>:uint16], uint16, word32)
	word32 s5_41 = CONVERT(Mem33[a6 + 54<i32>:uint16], uint16, word32)
	word32 s8_154 = CONVERT(Mem33[a6 + 60<i32>:byte], byte, word32)
	branch s0_31 != 0<32> l2301CF42
l2301CF40:
	s0_31 = 5<32>
l2301CF42:
	word32 a2_52
	word32 a5_55
	word32 a4_835
	word32 a3_834
	word32 a0_51 = me_build_capability(a3, out a2_52, out a3_834, out a4_835, out a5_55)
	0<32> = dwArg04
	Mem58[a5_55:byte] = SLICE(a0_51, byte, 0)
	Mem59[a5_55 + 1<i32>:byte] = SLICE(a0_51 >>u 8<u32>, byte, 0)
	Mem63[a5_55 + 2<i32>:byte] = SLICE(s0_31, byte, 0)
	Mem65[a5_55 + 3<i32>:byte] = SLICE(s0_31 >>u 8<i32>, byte, 0)
	word32 a4_57 = a0_51 >>u 8<u32>
	word32 s0_66 = 4<32>
	branch a2_52 == 0<32> l2301CF8C
l2301CF6C:
	Mem70[a5_55 + 4<i32>:word16] = SLICE(CONVERT(Mem65[a2_52:uint16], uint16, word32), word16, 0)
	Mem73[a5_55 + 6<i32>:word16] = SLICE(CONVERT(Mem70[a2_52 + 2<i32>:uint16], uint16, word32), word16, 0)
	a4_57 = CONVERT(Mem73[a2_52 + 4<i32>:uint16], uint16, word32)
	Mem76[a5_55 + 8<i32>:word16] = SLICE(a4_57, word16, 0)
	s0_66 = 0xA<32>
l2301CF8C:
	Mem89[a4:word32] = a5_55 + s0_66
	word32 a0_94 = me_add_ie_ssid(CONVERT(Mem89[a1 + 38<i32>:byte], byte, word32), a1 + 39<i32>, a4_57)
	word32 a0_105
	word32 a3_108
	word32 s1_111 = me_add_ie_supp_rates(a1 + 88<i32>, out a0_105, out a3_108)
	word32 a5_117 = 8<32>
	word32 s0_118 = CONVERT(SLICE(s0_66 + (a0_105 + a0_94), word16, 0), word16, word32)
	branch CONVERT(Mem91[a1 + 88<i32>:byte], byte, word32) <=u 8<32> l2301CFD2
l2301CFC4:
	word32 a0_121
	word32 a4_836
	s1_111 = me_add_ie_ext_supp_rates(a1 + 88<i32>, 8<32>, out a0_121, out a3_108, out a4_836, out a5_117)
	s0_118 = CONVERT(SLICE(s0_118 + a0_121, word16, 0), word16, word32)
l2301CFD2:
	word32 s2_134 = a0_51 & 256<i32>
	branch (a0_51 & 256<i32>) == 0<32> l2301D0AA
l2301CFDA:
	Mem144[a5_117:byte] = 0x21<8>
	Mem149[a5_117:byte] = 2<8>
	word32 s0_153 = phy_get_rf_gain_capab(fp + -80<i32>, fp + -81<i32>, out s8_154)
	word32 a5_159 = CONVERT(Mem149[Mem149[a1 + 76<i32>:int32] + 4<i32>:int8], int8, int32)
	branch a5_159 >= CONVERT(bLoc50_515, int8, int32) l2301D016
l2301D012:
	bLoc50_515 = SLICE(a5_159, byte, 0)
l2301D016:
	word32 a6_190
	Mem168[a5_159:byte] = SLICE(CONVERT(bLoc51_523, byte, word32), byte, 0)
	Mem173[a5_159:byte] = SLICE(CONVERT(bLoc50_515, int8, word32), byte, 0)
	Mem178[a5_159:byte] = 0x24<8>
	word32 dwArg0C_531 = a3_108 + 1<i32>
	branch CONVERT(Mem183[Mem183[a1 + 76<i32>:int32] + 2<i32>:byte], byte, word32) != 0<32> l2301D176
l2301D176:
	a6_190 = CONVERT(Mem183[0x4201B101<32>:byte], byte, word32)
	s2_134 = 0x4201B058<32>
l2301D062:
	a6_190 = CONVERT(Mem183[0x4201B100<32>:byte], byte, word32)
	s2_134 = 0x4201B004<32>
l2301D070:
	word32 a7_197 = 0<32>
	word32 s4_198 = 0<32>
	word32 s10_199 = 0<32>
	word32 t1_200 = 0<32>
	a5_117 = 0<32>
l2301D07A:
	word32 s9_206 = a7_197 + 2<i32>
	branch s10_199 != a6_190 l2301D186
l2301D186:
	branch (CONVERT(Mem203[s2_134 + 3<i32>:byte], byte, word32) & 2<32>) != 0<32> l2301D1F2
l2301D190:
	word32 a5_847
	word32 a4_846
	word32 a0_227 = phy_freq_to_channel(CONVERT(Mem214[s2_134 + 2<i32>:byte], byte, word32), CONVERT(Mem214[s2_134:uint16], uint16, word32), out a3_108, out a4_846, out a5_847)
	0<32> = s11
	a6_190 = s10
	word32 s4_235 = a7_197
	a5_117 = a0_227 & 255<i32>
	branch a7_197 == 0<32> l2301D1E8
l2301D1BA:
	s0_153 = dwArg40
	branch (a0_227 & 255<i32>) - t1_200 == dwLoc14 l2301D1E8
l2301D1CA:
	Mem245[s11:byte] = SLICE(a0_227 & 255<i32>, byte, 0)
	Mem249[dwArg0C_531:byte] = SLICE(a7_197, byte, 0)
	s8_154 = dwLoc14
	a7_197 = s9_206 & 255<i32>
	dwArg0C_531 = dwArg0C_531 + 1<i32>
	s4_235 = a7_197 + 1<i32> & 255<i32>
l2301D1E8:
	s4_198 = s4_235 + 1<32> & 255<i32>
	s2_134 = s2_134 + 6<32>
	t1_200 = a0_227 & 255<i32>
l2301D1F2:
	s10_199 = s10_199 + 1<32> & 255<i32>
l2301D08C:
	Mem263[s11:byte] = SLICE(a5_117, byte, 0)
	Mem276[a5_117:byte] = SLICE(s4_198, byte, 0)
	Mem278[a3_108:byte] = SLICE(s9_206 & 255<i32>, byte, 0)
	s0_118 = CONVERT(SLICE(s0_153 + 6<32> + (s9_206 & 255<i32>), word16, 0), word16, word32)
l2301D0AA:
	word32 a4_299 = s1_111 + s5_41
	word32 a6_300 = s1_111
	word32 a5_302 = a5_117 - s1_111
l2301D0B4:
	branch a4_299 != a6_300 l2301D1FA
l2301D1FA:
	Mem310[a5_302 + a6_300:byte] = SLICE(CONVERT(Mem305[a6_300 + 64<i32>:byte], byte, word32), byte, 0)
	a6_300 = a6_300 + 1<32>
l2301D0B8:
	word32 s5_319 = s5_41 + a5_302
	word32 s0_328 = CONVERT(SLICE(s0_118 + s5_41, word16, 0), word16, word32)
	branch (Mem305[a1 + 136<i32>:int32] & 1<32>) == 0<32> l2301D12C
l2301D0CC:
	word32 a3_841
	word32 a4_842
	word32 a1_839
	word32 t1_837
	word32 a0_838
	word32 a5_843
	word32 a2_840
	memset(ra, fp + -78<i32>, 0<32>, 0xE<32>, out t1_837, out a0_838, out a1_839, out a2_840, out a3_841, out a4_842, out a5_843)
	branch Mem359[0x42018ED0<32>:int32] == 0<32> l2301D10C
l2301D100:
	branch CONVERT(Mem359[a1 + 104<i32>:int8], int8, int32) >= 0<32> l2301D10C
l2301D108:
l2301D10C:
	word32 a4_844
	word32 a5_845
	co_pack8p(s5_319, fp + -80<i32>, 9<32>, out a4_844, out a5_845)
	a4_299 = 7<32>
	s0_328 = CONVERT(SLICE(s0_328 + 9<32>, word16, 0), word16, word32)
l2301D12C:
	word32 a5_396 = Mem395[a1 + 136<i32>:int32]
	word32 a5_397 = a5_396 & 2<32>
	branch (a5_396 & 2<32>) == 0<32> l2301D14A
l2301D134:
	a5_397 = CONVERT(Mem395[0x4201B002<32>:byte], byte, word32)
	branch a5_397 == 0<32> l2301D14A
l2301D13E:
	word32 a0_403
	me_add_ie_ht_capa(a4_299, out a0_403, out a5_397)
	s0_328 = CONVERT(SLICE(s0_328 + a0_403, word16, 0), word16, word32)
l2301D14A:
	word32 a4_427 = Mem395[a4:int32]
	Mem449[a5:word16] = SLICE(a5_397 - a4_427, word16, 0)
	a0Out = s0_328
	a3Out = dwLoc14
	a4Out = a4_427
	s2Out = s2_134
	s8Out = s8_154
	return dwArg0158
me_build_associate_req_exit:


word32 me_build_add_ba_req(word32 a0, word32 a1, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bam_send_air_action_frame
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a4 a5
// Preserved: sp
me_build_add_ba_req_entry:
l2301D20A:
	Mem5[a0:byte] = 3<8>
	Mem6[a0 + 1<i32>:byte] = 0<8>
	Mem9[a0 + 2<i32>:byte] = SLICE(CONVERT(Mem6[a1 + 17<i32>:byte], byte, word32), byte, 0)
	word32 a5_17 = CONVERT(Mem9[a1 + 14<i32>:byte], byte, word32) << 1<i32> | CONVERT(Mem9[a1 + 16<i32>:byte], byte, word32) << 2<i32> | CONVERT(Mem9[a1 + 15<i32>:byte], byte, word32) << 6<i32>
	Mem18[a0 + 3<i32>:byte] = SLICE(a5_17, byte, 0)
	Mem20[a0 + 4<i32>:byte] = SLICE(a5_17 >>u 8<i32>, byte, 0)
	word32 a5_21 = CONVERT(Mem20[a1 + 10<i32>:uint16], uint16, word32)
	Mem22[a0 + 5<i32>:byte] = SLICE(a5_21, byte, 0)
	Mem24[a0 + 6<i32>:byte] = SLICE(a5_21 >>u 8<i32>, byte, 0)
	word32 a5_28 = CONVERT(Mem24[a1 + 8<i32>:uint16], uint16, word32) << 20<i32> >>u 16<i32>
	Mem29[a0 + 7<i32>:byte] = SLICE(a5_28, byte, 0)
	Mem31[a0 + 8<i32>:byte] = SLICE(a5_28 >>u 8<i32>, byte, 0)
	a5Out = a5_28 >>u 8<i32>
	return 9<32>
me_build_add_ba_req_exit:


word32 me_build_add_ba_rsp(word32 a0, word32 a2, word32 a3, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bam_send_air_action_frame
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..7] a4:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a4 a5
// Preserved: sp
me_build_add_ba_rsp_entry:
l2301D262:
	Mem5[a0:byte] = 3<8>
	Mem7[a0 + 1<i32>:byte] = 1<8>
	Mem9[a0 + 5<i32>:byte] = SLICE(a2, byte, 0)
	Mem13[a0 + 4<i32>:byte] = SLICE(a4 >>u 8<u32>, byte, 0)
	Mem15[a0 + 2<i32>:byte] = SLICE(a3, byte, 0)
	Mem16[a0 + 3<i32>:byte] = SLICE(a4, byte, 0)
	Mem17[a0 + 6<i32>:byte] = SLICE(a2 >>u 8<i32>, byte, 0)
	branch a4 == 0<32> l2301D29A
l2301D29A:
	Mem20[a0 + 7<i32>:byte] = 0xD0<8>
	Mem22[a0 + 8<i32>:byte] = 7<8>
l2301D28E:
	Mem23[a0 + 7<i32>:byte] = 0<8>
	Mem24[a0 + 8<i32>:byte] = 0<8>
l2301D296:
	a5Out = a0 + 7<i32>
	return 9<32>
me_build_add_ba_rsp_exit:


word32 me_build_del_ba(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bam_send_air_action_frame
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
me_build_del_ba_entry:
l2301D2AA:
	Mem5[a0:byte] = 3<8>
	Mem7[a0 + 1<i32>:byte] = 2<8>
	word32 a5_15 = CONVERT(Mem7[a1 + 16<i32>:byte], byte, word32) << 28<i32> >>u 16<i32>
	branch CONVERT(Mem7[a1 + 13<i32>:byte], byte, word32) != 1<32> l2301D2DA
l2301D2CE:
	a5_15 = CONVERT(SLICE(a5_15 | 0xFFF800<32>, word16, 0), word16, word32)
l2301D2DA:
	Mem22[a0 + 2<i32>:byte] = 0<8>
	word32 a5_24 = a5_15 >>u 8<i32>
	Mem26[a0 + 3<i32>:byte] = SLICE(a5_24, byte, 0)
	Mem29[a0 + 4<i32>:byte] = SLICE(a2, byte, 0)
	Mem31[a0 + 5<i32>:byte] = SLICE(a2 >>u 8<i32>, byte, 0)
	a3Out = a0 + 2<i32>
	a5Out = a5_24
	return 6<32>
me_build_del_ba_exit:


void me_extract_rate_set(word32 a0, word32 a1, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
me_extract_rate_set_entry:
l2301D2F2:
	Mem14[a2:byte] = 0<8>
	word32 a5_120
	word32 a0_22 = mac_ie_find(a0, a1, 1<32>, out a5_120)
	branch a0_22 == 0<32> l2301D386
l2301D30E:
	word32 a4_23 = CONVERT(Mem14[a0_22 + 1<i32>:byte], byte, word32)
	branch a4_23 >u 0xC<32> l2301D386
l2301D318:
	word32 a5_25 = a2 + 1<i32>
	word32 a3_26 = a4_23
l2301D320:
	a3_26 = a3_26 + 0xFFFFFFFF<32>
	branch a3_26 != 0xFFFFFFFF<32> l2301D392
l2301D392:
	a5_25 = a5_25 + 1<32>
	Mem39[a5_25 + 4095<i32>:byte] = SLICE(CONVERT(Mem37[a5_25 - a2 + a0_22:byte], byte, word32), byte, 0)
l2301D326:
	Mem43[a2:byte] = SLICE(a4_23, byte, 0)
	word32 a5_121
	word32 a0_49 = mac_ie_find(a0, a1, 50<i32>, out a5_121)
	branch a0_49 == 0<32> l2301D386
l2301D33A:
	word32 s1_51 = CONVERT(Mem43[a0_49 + 1<i32>:byte], byte, word32)
	branch CONVERT(Mem43[a2:byte], byte, word32) + s1_51 <= 0xC<32> l2301D362
l2301D362:
	word32 a5_60 = CONVERT(Mem43[a2:byte], byte, word32)
	branch a5_60 + s1_51 > 0xC<32> l2301D386
l2301D370:
	word32 a5_65 = 0<32>
l2301D378:
	branch s1_51 != a5_65 l2301D3A4
l2301D3A4:
	Mem76[a5_60 + 1<i32> + a5_65 + a2:byte] = SLICE(CONVERT(Mem70[a0_49 + 2<32> + a5_65:byte], byte, word32), byte, 0)
	a5_65 = a5_65 + 1<32>
l2301D37C:
	Mem80[a2:byte] = SLICE(s1_51 + CONVERT(Mem70[a2:byte], byte, word32), byte, 0)
l2301D386:
	0<32> = dwArg38
	return
me_extract_rate_set_exit:
l2301D34A:
	assert_err()


void me_extract_power_constraint(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_beacon_check
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5
// Preserved: s0 sp
me_extract_power_constraint_entry:
l2301D3BA:
	word32 a5_32
	word32 a0_15 = mac_ie_find(a0, a1, 32<i32>, out a5_32)
	word32 a5_16 = 0<32>
	branch a0_15 == 0<32> l2301D3D2
l2301D3CE:
	a5_16 = CONVERT(Mem10[a0_15 + 2<i32>:byte], byte, word32)
l2301D3D2:
	Mem20[a2 + 132<i32>:byte] = SLICE(a5_16, byte, 0)
	return
me_extract_power_constraint_exit:


void me_extract_country_reg(word32 a0, word32 a1, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 tp
// Preserved: s0 sp
me_extract_country_reg_entry:
l2301D3DE:
	word32 a5_118
	word32 a0_19 = mac_ie_find(a0, a1, 7<32>, out a5_118)
	branch a0_19 == 0<32> l2301D43E
l2301D3F2:
	word32 s0_20 = Mem14[a2 + 76<i32>:word32]
	word32 s2_22 = 1<32>
	word32 a0_23 = CONVERT(Mem14[s0_20 + 2<i32>:byte], byte, word32)
	branch a0_23 == 0<32> l2301D400
l2301D3FE:
	s2_22 = 4<32>
l2301D400:
	word32 a3_119
	word32 a4_120
	word32 a5_121
	word32 a0_29 = phy_freq_to_channel(a0_23, CONVERT(Mem14[s0_20:uint16], uint16, word32), out a3_119, out a4_120, out a5_121)
	word32 a2_35 = CONVERT(Mem14[a0_19 + 1<i32>:byte], byte, word32)
	word32 a5_37 = 5<32>
l2301D414:
	branch a2_35 + 1<32> < a5_37 l2301D43E
l2301D418:
	word32 a1_42 = a5_37 + a0_19
	word32 a3_44 = CONVERT(Mem14[a1_42:byte], byte, word32)
	word32 a6_45 = CONVERT(Mem14[a1_42 + 1<i32>:byte], byte, word32)
	word32 a4_46 = 0<32>
l2301D426:
	branch a4_46 != a6_45 l2301D432
l2301D432:
	branch a3_44 != (a0_29 & 255<i32>) l2301D44A
l2301D44A:
	a3_44 = a3_44 + s2_22 & 255<i32>
	a4_46 = a4_46 + 1<32> & 255<i32>
l2301D436:
	Mem61[s0_20 + 4<i32>:byte] = SLICE(CONVERT(Mem14[a1_42 + 2<i32>:byte], byte, word32), byte, 0)
l2301D43E:
	0<32> = dwArg38
	return
me_extract_country_reg_exit:
l2301D42A:
	a5_37 = a5_37 + 3<32> & 255<i32>


void me_extract_mobility_domain(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxu_mgt_ind_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: s0 sp
me_extract_mobility_domain_entry:
l2301D458:
	word32 a5_40
	word32 a0_15 = mac_ie_find(a0, a1, 54<i32>, out a5_40)
	branch a0_15 != 0<32> l2301D47A
l2301D47A:
	Mem20[a2 + 140<i32>:word16] = SLICE(CONVERT(Mem10[a0_15 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem10[a0_15 + 2<i32>:byte], byte, word32), word16, 0)
	Mem22[a2 + 142<i32>:byte] = SLICE(CONVERT(Mem20[a0_15 + 4<i32>:byte], byte, word32), byte, 0)
l2301D46A:
	Mem23[a2 + 140<i32>:word16] = 0<16>
	Mem24[a2 + 142<i32>:byte] = 0<8>
l2301D472:
	return
me_extract_mobility_domain_exit:


word32 me_extract_csa(word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArgA8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      me_beacon_check
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
me_extract_csa_entry:
l2301D494:
	word32 a0_163
	word32 a5_289
	word32 a0_31 = mac_ie_find(a0, a1, 37<i32>, out a5_289)
	word32 a5_290
	word32 a0_38 = mac_ie_find(a0, a1, 60<i32>, out a5_290)
	word32 s5_276 = a2
	word32 s1_160 = a1
	word32 s2_102 = a0_31
	branch (a0_31 | a0_38) == 0<32> l2301D5CE
l2301D5CE:
	a0_163 = 0<32>
l2301D4CC:
	word32 a5_291
	word32 a0_47 = mac_ie_find(a0, a1, 62<i32>, out a5_291)
	word32 a5_292
	word32 a0_54 = mac_ie_find(a0, a1, 196<i32>, out a5_292)
	s6 = a0_47
	word32 s0_55 = a0_54
	branch a0_54 == 0<32> l2301D4FC
l2301D4EC:
	word32 a5_293
	s0_55 = mac_ie_find(a0_54 + 2<32>, CONVERT(Mem28[a0_54 + 1<i32>:byte], byte, word32), 194<i32>, out a5_293)
l2301D4FC:
	word32 a1_70
	branch a0_31 == 0<32> l2301D58E
l2301D58E:
	s1_160 = CONVERT(Mem28[a0_38 + 5<i32>:byte], byte, word32)
	Mem69[a2:byte] = SLICE(CONVERT(Mem28[a0_38 + 2<i32>:byte], byte, word32), byte, 0)
	a1_70 = CONVERT(Mem69[a0_38 + 4<i32>:byte], byte, word32)
l2301D500:
	s1_160 = CONVERT(Mem28[a0_31 + 4<i32>:byte], byte, word32)
	Mem73[a2:byte] = SLICE(CONVERT(Mem28[a0_31 + 2<i32>:byte], byte, word32), byte, 0)
	a1_70 = CONVERT(Mem73[a0_31 + 3<i32>:byte], byte, word32)
l2301D510:
	branch s1_160 != 0<32> l2301D514
l2301D512:
	s1_160 = 2<32>
l2301D514:
	word32 s0_100
	word32 a0_101
	word32 s3_79 = CONVERT(a1_70 <u 15<i32>, bool, word32)
	word32 a0_82 = phy_channel_to_freq(s3_79 ^ 1<i32>, a1_70)
	s3 = s3_79 ^ 1<i32>
	s5_276 = a0_82
	branch s0_55 == 0<32> l2301D5A0
l2301D5A0:
	branch a0_47 == 0<32> l2301D5C6
l2301D5A4:
	word32 a5_95 = CONVERT(Mem94[a0_47 + 2<i32>:byte], byte, word32)
	word32 s0_103 = a0_82 + 10<i32>
	branch a5_95 == 1<32> l2301D5BC
l2301D5B2:
	branch a5_95 != 3<32> l2301D5C6
l2301D5C6:
	s0_100 = a0_82
	a0_101 = 0<32>
	s2_102 = 0<32>
l2301D5B8:
	s0_103 = a0_82 + -10<i32>
l2301D5BC:
	s0_100 = CONVERT(SLICE(s0_103, word16, 0), word16, word32)
	a0_101 = 0<32>
	s2_102 = 1<32>
l2301D526:
	word32 a1_111 = CONVERT(Mem94[s0_55 + 3<i32>:byte], byte, word32)
	word32 a5_113 = CONVERT(Mem94[s0_55 + 2<i32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	s6 = CONVERT(Mem94[s0_55 + 4<i32>:byte], byte, word32)
	s2_102 = 1<32>
	branch a5_113 >u 2<32> l2301D54E
l2301D540:
	s2_102 = CONVERT(Mem94[a5_113 + 0x2308DDF4<32>:byte], byte, word32)
l2301D54E:
	s0_100 = phy_channel_to_freq(s3_79 ^ 1<i32>, a1_111)
	a0_101 = 0<32>
	branch s6 == 0<32> l2301D564
l2301D55C:
	a0_101 = phy_channel_to_freq(s3_79 ^ 1<i32>, s6)
l2301D564:
	Mem144[a3 + 6<i32>:word16] = SLICE(a0_101, word16, 0)
	Mem148[a3:byte] = SLICE(s3_79 ^ 1<i32>, byte, 0)
	Mem151[a3 + 1<i32>:byte] = SLICE(s2_102, byte, 0)
	Mem155[a3 + 2<i32>:word16] = SLICE(a0_82, word16, 0)
	Mem157[a3 + 4<i32>:word16] = SLICE(s0_100, word16, 0)
	a0_163 = s1_160
l2301D57A:
	0<32> = dwArgA8
	s1Out = s1_160
	a0Out = a0_163
	s2Out = s2_102
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5_276
	s6Out = s6
	s8Out = s4
	return s1
me_extract_csa_exit:


word32 me_build_beacon(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s5, word32 dwArg20, word32 dwArg24, word32 dwArg6C, word32 dwArg94, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_start_req_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s5:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +006C:[0..31] Stack +0094:[0..31]
// LiveOut: a0 a4 ra s0 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s10 s11 s9 sp
me_build_beacon_entry:
l2301D5D2:
	word32 s3_163 = CONVERT(Mem30[a1 + 0x4201AE00<32>:byte], byte, word32)
	Mem37[a0:byte] = 0x80<8>
	Mem38[a0 + 1<i32>:byte] = 0<8>
	Mem39[a0 + 2<i32>:byte] = 0<8>
	Mem40[a0 + 3<i32>:byte] = 0<8>
	word32 a3_621
	word32 a1_619
	word32 a2_620
	word32 a4_622
	word32 a5_623
	word32 a6_624
	word32 a7_625
	memcpy(a0 + 4<32>, 0x2308DD8C<32>, 6<32>, out a1_619, out a2_620, out a3_621, out a4_622, out a5_623, out a6_624, out a7_625)
	word32 a3_628
	word32 a4_629
	word32 a1_626
	word32 a2_627
	word32 a7_632
	word32 a6_631
	word32 a5_630
	memcpy(a0 + 10<i32>, a1 + 0x4201AA38<32>, 6<32>, out a1_626, out a2_627, out a3_628, out a4_629, out a5_630, out a6_631, out a7_632)
	word32 a4_636
	word32 a1_633
	word32 a2_634
	word32 a3_635
	word32 a5_637
	word32 a6_638
	word32 a7_639
	memcpy(a0 + 16<i32>, a1 + 0x4201AA38<32>, 6<32>, out a1_633, out a2_634, out a3_635, out a4_636, out a5_637, out a6_638, out a7_639)
	word32 a5_102 = CONVERT(Mem47[0x4201A3FC<32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem104[0x4201A3FC<32>:word16] = SLICE(a5_102 >>u 16<i32>, word16, 0)
	word32 a5_107 = CONVERT(SLICE(a5_102 >>u 16<i32> << 4<i32>, word16, 0), word16, word32)
	Mem108[a0 + 22<i32>:byte] = SLICE(a5_107, byte, 0)
	Mem110[a0 + 23<i32>:byte] = SLICE(a5_107 >>u 8<i32>, byte, 0)
	word32 a5_111 = CONVERT(Mem110[a1 + 0x4201ADFA<32>:uint16], uint16, word32)
	Mem113[0x4201A3C8<32>:byte] = SLICE(a5_111, byte, 0)
	Mem115[0x4201A3C9<32>:byte] = SLICE(a5_111 >>u 8<i32>, byte, 0)
	word32 s4_164 = a1 + 1496<i32>
	word32 s6_166 = a2
	word32 s5_165 = a3
	word32 s2_100 = 0x4201A410<32>
	word32 a3_118
	word32 a5_120
	word32 a2_640
	word32 a4_119
	word32 a0_116 = me_build_capability(a1, out a2_640, out a3_118, out a4_119, out a5_120)
	branch s3_163 == 0<32> l2301D698
l2301D690:
	a0_116 = CONVERT(SLICE(a0_116 | 16<i32>, word16, 0), word16, word32)
l2301D698:
	word32 a1_144
	Mem132[a5_120 + 34<i32>:byte] = SLICE(a0_116, byte, 0)
	Mem134[a5_120 + 35<i32>:byte] = SLICE(a0_116 >>u 8<i32>, byte, 0)
	word32 a2_135 = dwArg94
	branch a4_119 == 0<32> l2301D8E2
l2301D8E2:
	a1_144 = CONVERT(Mem137[a1 + 0x4201AD66<32>:byte], byte, word32)
l2301D6B6:
	word32 s10_651
	word32 s11_652
	word32 t4_653
	word32 a5_646
	word32 a7_647
	word32 s7_648
	word32 s8_649
	word32 s9_650
	word32 a1_643
	word32 a2_644
	word32 a3_645
	word32 s1_641
	word32 a0_642
	ra = printf(ra, 0x23078530<32>, a3_118, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_641, out a0_642, out a1_643, out a2_644, out a3_645, out a4_119, out a5_646, out a7_647, out s2_100, out s3_163, out s4_164, out s5_165, out s6_166, out s7_648, out s8_649, out s9_650, out s10_651, out s11_652, out t4_653)
	a2_135 = 0<32>
	a1_144 = 0<32>
l2301D6C8:
	word32 s7_191 = s4_164 + 944<i32> + s2_100
	word32 s0_206 = CONVERT(SLICE(me_add_ie_ssid(a1_144, a2_135, a4_119) + 36<i32>, word16, 0), word16, word32) + a0_195
	word32 a0_195
	word32 a3_665
	word32 s1_201 = me_add_ie_supp_rates(s7_191, out a0_195, out a3_665)
	word32 s0_208 = CONVERT(SLICE(s0_206, word16, 0), word16, word32)
	branch CONVERT(Mem137[s1_201 + 1496<i32> + s2_100 + 944<i32>:byte], byte, word32) <=u 8<32> l2301D70E
l2301D700:
	word32 a0_215
	word32 a3_662
	word32 a4_663
	word32 a5_664
	s1_201 = me_add_ie_ext_supp_rates(s7_191, 8<32>, out a0_215, out a3_662, out a4_663, out a5_664)
	s0_208 = CONVERT(SLICE(CONVERT(SLICE(s0_206, word16, 0), word16, word32) + a0_215, word16, 0), word16, word32)
l2301D70E:
	word32 s7_232 = s1_201 + 1496<i32> + s2_100
	word32 a5_245
	word32 a4_654
	word32 s0_249 = CONVERT(SLICE(s0_208 + me_add_ie_ds((CONVERT(Mem137[Mem137[s7_232 + 932<i32>:int32]:uint16], uint16, word32) + 0xFF000694<32> ^ 5<32>) + 1<32> & 255<i32>, 5<32>, out a4_654, out a5_245), word16, 0), word16, word32)
	Mem253[s6_166:word16] = SLICE(s0_249, word16, 0)
	word32 a4_257
	word32 a0_256 = me_add_ie_tim(CONVERT(Mem253[s7_232 + 940<i32>:byte], byte, word32), a5_245, out a4_257)
	Mem263[s5_165:byte] = SLICE(a0_256 & 255<i32>, byte, 0)
	word32 a2_655
	word32 a5_656
	word32 a0_270 = me_add_ie_rsn(s3_163, a4_257, out a2_655, out a5_656)
	word32 a5_283
	word32 a3_658
	word32 a4_659
	word32 a6_660
	word32 a7_661
	word32 a1_657
	word32 a2_286
	memcpy(0x4201D0F8<32>, s3_163 - (a0_270 & 255<i32>), a0_270 & 255<i32>, out a1_657, out a2_286, out a3_658, out a4_659, out a5_283, out a6_660, out a7_661)
	word32 a4_298
	word32 s0_308 = CONVERT(SLICE(CONVERT(SLICE(s0_249 + (a0_256 & 255<i32>), word16, 0), word16, word32) + me_add_ie_erp(0<32>, a5_283, out a4_298) + (a0_270 & 255<i32>), word16, 0), word16, word32)
	branch (Mem263[s7_232 + 992<i32>:int32] & 2<32>) == 0<32> l2301D7B0
l2301D796:
	word32 a0_310
	word32 a5_315
	s1_201 = me_add_ie_ht_capa(a4_298, out a0_310, out a5_315)
	word32 a3_667
	s0_308 = CONVERT(SLICE(s0_308 + (me_add_ie_ht_oper(s1_201, a5_315, out a2_286, out a3_667) + a0_310), word16, 0), word16, word32)
l2301D7B0:
	word32 a3_666
	word32 a4_339
	word32 s0_349 = CONVERT(SLICE(s0_308 + me_add_ie_wpa(s3_163, a2_286, out a3_666, out a4_339), word16, 0), word16, word32)
	word32 s2_351 = s2_100 + (s1_201 + 1496<i32>)
	branch (Mem263[s2_351 + 992<i32>:int32] & 1<32>) == 0<32> l2301D8C8
l2301D7D2:
	word32 a1_669
	word32 a2_670
	word32 a3_671
	word32 a4_672
	word32 a5_673
	word32 a0_361
	word32 t1_668
	memset(ra, fp + -62<i32>, 0<32>, 0xE<32>, out t1_668, out a0_361, out a1_669, out a2_670, out a3_671, out a4_672, out a5_673)
	word32 a5_674
	word32 a4_384
	word32 a3_383 = co_pack8p(a0_361, fp + -64<i32>, 9<32>, out a4_384, out a5_674)
	word32 a5_387 = CONVERT(Mem382[a4_384 + 1<i32>:byte], byte, word32)
	Mem389[a4_384 + 1<i32>:byte] = SLICE(a5_387 + 0x11<32>, byte, 0)
	Mem395[a5_387 + 0x1A<32>:byte] = 0<8>
	word32 a5_397 = Mem395[s2_351 + 12<i32>:int32]
	Mem400[a3_383 + 1<i32>:byte] = SLICE(a5_397, byte, 0)
	Mem402[a3_383 + 2<i32>:byte] = SLICE(a5_397 >>u 8<u32>, byte, 0)
	Mem405[a3_383 + 3<i32>:byte] = SLICE(a5_397 >>u 0x10<u32>, byte, 0)
	Mem406[a3_383 + 4<i32>:byte] = SLICE(a5_397 >>u 24<i32>, byte, 0)
	word32 a5_408 = Mem406[s2_351 + 8<i32>:int32]
	Mem411[(a5_397 >>u 0x10<u32>) + 4<i32>:byte] = SLICE(a5_408, byte, 0)
	word32 a4_409 = (a5_397 >>u 0x10<u32>) + 4<i32>
	Mem413[a4_409 + 1<i32>:byte] = SLICE(a5_408 >>u 8<u32>, byte, 0)
	Mem416[a4_409 + 2<i32>:byte] = SLICE(a5_408 >>u 0x10<u32>, byte, 0)
	Mem417[a4_409 + 3<i32>:byte] = SLICE(a5_408 >>u 24<i32>, byte, 0)
	word32 a5_419 = Mem417[s2_351 + 16<i32>:int32]
	Mem422[(a5_408 >>u 0x10<u32>) + 4<i32>:byte] = SLICE(a5_419, byte, 0)
	a4_339 = (a5_408 >>u 0x10<u32>) + 4<i32>
	Mem424[a4_339 + 1<i32>:byte] = SLICE(a5_419 >>u 8<u32>, byte, 0)
	Mem427[a4_339 + 2<i32>:byte] = SLICE(a5_419 >>u 0x10<u32>, byte, 0)
	Mem428[a4_339 + 3<i32>:byte] = SLICE(a5_419 >>u 24<i32>, byte, 0)
	word32 a5_429 = Mem428[s2_351 + 20<i32>:int32]
	Mem432[a4_339 + 4<i32>:byte] = SLICE(a5_429, byte, 0)
	Mem433[a4_339 + 5<i32>:byte] = SLICE(a5_429 >>u 8<u32>, byte, 0)
	Mem436[a4_339 + 6<i32>:byte] = SLICE(a5_429 >>u 0x10<u32>, byte, 0)
	Mem437[a4_339 + 7<i32>:byte] = SLICE(a5_429 >>u 24<i32>, byte, 0)
	s0_349 = CONVERT(SLICE(s0_349 + 0x1A<32>, word16, 0), word16, word32)
l2301D8C8:
	s0Out = dwArgCC
	a0Out = s0_349
	a4Out = a4_339
	s2Out = s2_351
	s4Out = dwArg0168
	return dwLoc08
me_build_beacon_exit:


word32 me_build_probe_rsp(word32 ra, word32 a0, word32 a1, word32 dwArgA4, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_send_mlme
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +00A4:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a3 a5 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 tp
// Preserved: sp
me_build_probe_rsp_entry:
l2301D8F2:
	word32 s3_26 = CONVERT(Mem24[a1 + 0x4201AE00<32>:byte], byte, word32)
	word32 a5_27 = CONVERT(Mem24[a1 + 0x4201ADFA<32>:uint16], uint16, word32)
	Mem31[a0 + 8<i32>:byte] = SLICE(a5_27, byte, 0)
	Mem33[a0 + 9<i32>:byte] = SLICE(a5_27 >>u 8<i32>, byte, 0)
	word32 a4_38
	word32 a5_39
	word32 a3_403
	word32 a2_402
	word32 a0_35 = me_build_capability(a1, out a2_402, out a3_403, out a4_38, out a5_39)
	branch s3_26 == 0<32> l2301D942
l2301D93A:
	a0_35 = CONVERT(SLICE(a0_35 | 16<i32>, word16, 0), word16, word32)
l2301D942:
	Mem54[a5_39 + 10<i32>:byte] = SLICE(a0_35, byte, 0)
	Mem56[a5_39 + 11<i32>:byte] = SLICE(a0_35 >>u 8<i32>, byte, 0)
	word32 a0_67 = me_add_ie_ssid(CONVERT(Mem56[a1 + 0x4201AD66<32>:byte], byte, word32), dwArgA4, a4_38)
	word32 s0_89 = a0_67 + a0_78 + 0xC<32> << 16<i32>
	word32 a0_78
	word32 a3_404
	word32 s1_100 = me_add_ie_supp_rates(a1 + 0x4201AD98<32>, out a0_78, out a3_404)
	word32 s0_104 = s0_89 >>u 16<i32>
	branch CONVERT(Mem64[a1 + 0x4201AD98<32>:byte], byte, word32) <=u 8<32> l2301D99E
l2301D990:
	word32 a0_94
	word32 a4_409
	word32 a5_410
	word32 a3_408
	s1_100 = me_add_ie_ext_supp_rates(a1 + 0x4201AD98<32>, 8<32>, out a0_94, out a3_408, out a4_409, out a5_410)
	s0_104 = CONVERT(SLICE((s0_89 >>u 16<i32>) + a0_94, word16, 0), word16, word32)
l2301D99E:
	word32 s5_107 = s1_100 + 1496<i32>
	word32 a5_111 = Mem64[s5_107 + 0x4201A7B4<32>:int32]
	word32 a5_116
	word32 a4_123
	word32 a5_132
	word32 a4_142
	word32 a5_407
	word32 a4_406
	word32 a3_405
	word32 a2_134
	word32 s0_150 = CONVERT(SLICE(CONVERT(SLICE(s0_104 + (me_add_ie_rsn(s3_26, a4_123, out a2_134, out a5_132) + me_add_ie_ds(phy_freq_to_channel(CONVERT(Mem64[a5_111 + 2<i32>:byte], byte, word32), CONVERT(Mem64[a5_111:uint16], uint16, word32), out a3_405, out a4_406, out a5_116) & 255<i32>, a5_116, out a4_123, out a5_407)), word16, 0), word16, word32) + me_add_ie_erp(0<32>, a5_132, out a4_142), word16, 0), word16, word32)
	branch (Mem64[s5_107 + 0x4201A7F0<32>:int32] & 2<32>) == 0<32> l2301DA04
l2301D9EA:
	word32 a0_152
	word32 a5_157
	s1_100 = me_add_ie_ht_capa(a4_142, out a0_152, out a5_157)
	word32 a3_412
	s0_150 = CONVERT(SLICE(s0_150 + (me_add_ie_ht_oper(s1_100, a5_157, out a2_134, out a3_412) + a0_152), word16, 0), word16, word32)
l2301DA04:
	word32 s1_187 = s1_100 + 1496<i32>
	word32 a4_411
	word32 a3_183
	word32 s0_191 = CONVERT(SLICE(s0_150 + me_add_ie_wpa(s3_26, a2_134, out a3_183, out a4_411), word16, 0), word16, word32)
	word32 a5_195 = Mem64[s1_187 + 0x4201A7F0<32>:int32]
	word32 a5_196 = a5_195 & 1<32>
	branch (a5_195 & 1<32>) == 0<32> l2301DB1C
l2301DA26:
	word32 a0_203
	word32 a4_417
	word32 a5_418
	word32 t1_413
	word32 a1_414
	word32 a2_415
	word32 a3_416
	ra = memset(ra, fp + -46<i32>, 0<32>, 0xE<32>, out t1_413, out a0_203, out a1_414, out a2_415, out a3_416, out a4_417, out a5_418)
	word32 a4_226
	word32 a5_419
	word32 a3_225 = co_pack8p(a0_203, fp + -48<i32>, 9<32>, out a4_226, out a5_419)
	word32 a5_229 = CONVERT(Mem224[a4_226 + 1<i32>:byte], byte, word32)
	Mem231[a4_226 + 1<i32>:byte] = SLICE(a5_229 + 0x11<32>, byte, 0)
	Mem237[a5_229 + 0x1A<32>:byte] = 0<8>
	word32 a5_239 = Mem237[s1_187 + 0x4201A41C<32>:int32]
	Mem242[a3_225 + 1<i32>:byte] = SLICE(a5_239, byte, 0)
	Mem244[a3_225 + 2<i32>:byte] = SLICE(a5_239 >>u 8<u32>, byte, 0)
	Mem247[a3_225 + 3<i32>:byte] = SLICE(a5_239 >>u 0x10<u32>, byte, 0)
	Mem248[a3_225 + 4<i32>:byte] = SLICE(a5_239 >>u 24<i32>, byte, 0)
	word32 a5_250 = Mem248[s1_187 + 0x4201A418<32>:int32]
	Mem253[(a5_239 >>u 0x10<u32>) + 4<i32>:byte] = SLICE(a5_250, byte, 0)
	word32 a4_251 = (a5_239 >>u 0x10<u32>) + 4<i32>
	Mem255[a4_251 + 1<i32>:byte] = SLICE(a5_250 >>u 8<u32>, byte, 0)
	Mem258[a4_251 + 2<i32>:byte] = SLICE(a5_250 >>u 0x10<u32>, byte, 0)
	Mem259[a4_251 + 3<i32>:byte] = SLICE(a5_250 >>u 24<i32>, byte, 0)
	word32 a5_261 = Mem259[s1_187 + 0x4201A420<32>:int32]
	Mem264[(a5_250 >>u 0x10<u32>) + 4<i32>:byte] = SLICE(a5_261, byte, 0)
	word32 a4_262 = (a5_250 >>u 0x10<u32>) + 4<i32>
	Mem266[a4_262 + 1<i32>:byte] = SLICE(a5_261 >>u 8<u32>, byte, 0)
	Mem269[a4_262 + 2<i32>:byte] = SLICE(a5_261 >>u 0x10<u32>, byte, 0)
	Mem270[a4_262 + 3<i32>:byte] = SLICE(a5_261 >>u 24<i32>, byte, 0)
	word32 a5_271 = Mem270[s1_187 + 0x4201A424<32>:int32]
	Mem274[a4_262 + 4<i32>:byte] = SLICE(a5_271, byte, 0)
	Mem275[a4_262 + 5<i32>:byte] = SLICE(a5_271 >>u 8<u32>, byte, 0)
	Mem278[a4_262 + 6<i32>:byte] = SLICE(a5_271 >>u 0x10<u32>, byte, 0)
	Mem279[a4_262 + 7<i32>:byte] = SLICE(a5_271 >>u 24<i32>, byte, 0)
	a3_183 = a5_271 >>u 0x10<u32>
	a5_196 = a5_271 >>u 24<i32>
	s0_191 = CONVERT(SLICE(s0_191 + 0x1A<32>, word16, 0), word16, word32)
l2301DB1C:
	0<32> = dwArg0198
	s1Out = s1_187
	a0Out = s0_191
	a3Out = a3_183
	a5Out = a5_196
	s2Out = s1_187 + 0x4201A410<32>
	s3Out = s3_26
	s4Out = dwArgF4
	return ra
me_build_probe_rsp_exit:


word32 me_build_associate_rsp(word32 ra, word32 a0, word32 a1, word32 a3, word32 dwArgA4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      apm_send_mlme
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] Stack +00A4:[0..31]
// LiveOut: a0 a3 a5 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
me_build_associate_rsp_entry:
l2301DB32:
	word32 a5_35
	word32 a2_344
	word32 a4_346
	word32 a3_345
	word32 a0_31 = me_build_capability(a1, out a2_344, out a3_345, out a4_346, out a5_35)
	branch a0 == 0<32> l2301DB74
l2301DB6C:
	a0_31 = CONVERT(SLICE(a0_31 | 16<i32>, word16, 0), word16, word32)
l2301DB74:
	Mem48[a5_35:byte] = SLICE(a0_31, byte, 0)
	Mem50[a5_35 + 1<i32>:byte] = SLICE(a0_31 >>u 8<i32>, byte, 0)
	Mem53[a5_35 + 2<i32>:byte] = SLICE(dwArgA4, byte, 0)
	Mem54[a5_35 + 3<i32>:byte] = SLICE(dwArgA4 >>u 8<u32>, byte, 0)
	word32 a5_56 = CONVERT(Mem54[a3 + 68<i32>:uint16], uint16, word32)
	Mem59[(dwArgA4 >>u 8<u32>) + 4<i32>:byte] = SLICE(a5_56 | 0xC000000<32>, byte, 0)
	word32 a5_60 = (a5_56 | 0xC000000<32>) >>u 8<i32>
	Mem61[(dwArgA4 >>u 8<u32>) + 5<i32>:byte] = SLICE(a5_60, byte, 0)
	word32 a3_121 = 0xC000000<32>
	word32 s0_126 = 6<32>
	word32 a5_133 = a5_60 + 6<32>
	branch dwArgA4 != 0<32> l2301DD04
l2301DBAE:
	word32 a0_68
	s1 = me_add_ie_supp_rates(a3 + 6<i32>, out a0_68, out a3_121)
	word32 s0_78 = a0_68 + 6<32> << 0x10<u32>
	word32 a4_100 = CONVERT(Mem64[a3 + 6<i32>:byte], byte, word32)
	s0_126 = s0_78 >>u 16<i32>
	branch a4_100 <=u 8<32> l2301DBDA
l2301DBCC:
	word32 a0_83
	word32 a5_347
	s1 = me_add_ie_ext_supp_rates(s1, 8<32>, out a0_83, out a3_121, out a4_100, out a5_347)
	s0_126 = CONVERT(SLICE((s0_78 >>u 16<i32>) + a0_83, word16, 0), word16, word32)
l2301DBDA:
	branch (Mem64[a3 + 64<i32>:int32] & 2<32>) == 0<32> l2301DC02
l2301DBE2:
	word32 a0_101
	word32 a5_106
	me_add_ie_ht_capa(a4_100, out a0_101, out a5_106)
	s1 = a0_101
	word32 a2_348
	s0_126 = CONVERT(SLICE(s0_126 + (me_add_ie_ht_oper(a0_101, a5_106, out a2_348, out a3_121) + a0_101), word16, 0), word16, word32)
l2301DC02:
	word32 a5_132 = Mem64[a3 + 64<i32>:int32]
	a5_133 = a5_132 & 1<32>
	branch (a5_132 & 1<32>) == 0<32> l2301DD04
l2301DC0C:
	word32 t1_349
	word32 a1_350
	word32 a2_351
	word32 a0_144
	word32 a3_352
	word32 a4_353
	word32 a5_354
	ra = memset(ra, fp + -46<i32>, 0<32>, 0xE<32>, out t1_349, out a0_144, out a1_350, out a2_351, out a3_352, out a4_353, out a5_354)
	word32 a4_169
	word32 a5_355
	word32 a3_168 = co_pack8p(a0_144, fp + -48<i32>, 9<32>, out a4_169, out a5_355)
	word32 a5_172 = CONVERT(Mem167[a4_169 + 1<i32>:byte], byte, word32)
	Mem174[a4_169 + 1<i32>:byte] = SLICE(a5_172 + 0x11<32>, byte, 0)
	Mem180[a5_172 + 0x1A<32>:byte] = 0<8>
	Mem185[a3_168 + 1<i32>:byte] = SLICE(a5_172 + 0x1A<32>, byte, 0)
	Mem187[a3_168 + 2<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 8<u32>, byte, 0)
	Mem190[a3_168 + 3<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x10<u32>, byte, 0)
	Mem191[a3_168 + 4<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 24<i32>, byte, 0)
	Mem196[(a5_172 + 0x1A<32> >>u 0x10<u32>) + 4<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 24<i32>, byte, 0)
	word32 a4_194 = (a5_172 + 0x1A<32> >>u 0x10<u32>) + 4<i32>
	Mem198[a4_194 + 1<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x20<32>, byte, 0)
	Mem201[a4_194 + 2<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x28<32>, byte, 0)
	Mem202[a4_194 + 3<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 48<i32>, byte, 0)
	Mem207[(a5_172 + 0x1A<32> >>u 0x28<32>) + 4<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 48<i32>, byte, 0)
	word32 a4_205 = (a5_172 + 0x1A<32> >>u 0x28<32>) + 4<i32>
	Mem209[a4_205 + 1<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x38<32>, byte, 0)
	Mem212[a4_205 + 2<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x40<32>, byte, 0)
	Mem213[a4_205 + 3<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 72<i32>, byte, 0)
	s1 = Mem213[(a5_172 + 0x1A<32> >>u 72<i32>) + 20<i32>:word32]
	Mem217[a4_205 + 4<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 72<i32>, byte, 0)
	Mem218[a4_205 + 5<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x50<32>, byte, 0)
	Mem221[a4_205 + 6<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 0x58<32>, byte, 0)
	Mem222[a4_205 + 7<i32>:byte] = SLICE(a5_172 + 0x1A<32> >>u 96<i32>, byte, 0)
	a3_121 = a5_172 + 0x1A<32> >>u 0x58<32>
	a5_133 = a5_172 + 0x1A<32> >>u 96<i32>
	s0_126 = CONVERT(SLICE(s0_126 + 0x1A<32>, word16, 0), word16, word32)
l2301DD04:
	s1Out = s1
	a0Out = s0_126
	a3Out = a3_121
	a5Out = a5_133
	s2Out = a1
	s3Out = 0x4201A410<32>
	s4Out = dwArgF4
	return ra
me_build_associate_rsp_exit:


void me_rc_set_rate_req_handler(word32 a1, word32 dwArgB8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] Stack +00B8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
me_rc_set_rate_req_handler_entry:
l2301DD16:
	word32 s2_15 = CONVERT(Mem13[a1:byte], byte, word32)
	word32 s0_23 = Mem13[s2_15 + 0x420191E0<32>:int32]
	branch s0_23 != 0<32> l2301DD5C
l2301DD5C:
	word32 s3_29 = CONVERT(Mem13[a1 + 2<i32>:uint16], uint16, word32)
	branch s3_29 == 0xFFFFFFF<32> l2301DD96
l2301DD96:
	Mem33[s0_23 + 198<i32>:word16] = 0xFFFF<16>
	word32 a2_35 = CONVERT(Mem33[s0_23 + 188<i32>:byte], byte, word32)
	word32 a1_36 = CONVERT(Mem33[s0_23 + 187<i32>:byte], byte, word32)
	Mem38[s0_23 + 175<i32>:byte] = SLICE(CONVERT(Mem33[s0_23 + 175<i32>:byte], byte, word32) & -97<i32>, byte, 0)
	word32 s0_130
	word32 s1_131
	word32 a1_132
	word32 a4_133
	word32 s3_134
	word32 s5_135
	word32 s6_136
	word32 s7_137
	rc_update_bw_nss_max(CONVERT(Mem38[s2_15 + 0x420190EB<32>:byte], byte, word32), a1_36, a2_35, dwArgB8, out s0_130, out s1_131, out a1_132, out a4_133, out s3_134, out s5_135, out s6_136, out s7_137)
l2301DD68:
	word32 a0_67
	word32 s0_72 = rc_check_fixed_rate_config(s0_23, s3_29, out a0_67)
	branch a0_67 == 0<32> l2301DD86
l2301DD72:
	word32 a5_77 = CONVERT(Mem13[s0_72 + 175<i32>:byte], byte, word32)
	Mem78[s0_72 + 198<i32>:word16] = SLICE(s3_29, word16, 0)
	Mem81[s0_72 + 175<i32>:byte] = SLICE(a5_77 & -97<i32> | 32<i32>, byte, 0)
l2301DD86:
	return
me_rc_set_rate_req_handler_exit:
l2301DD44:
	assert_err()


void me_rc_stats_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
me_rc_stats_req_handler_entry:
l2301DDC4:
	word32 a0_21
	word32 s1_30
	word32 a3_188
	word32 a4_189
	word32 a5_190
	word32 a6_191
	word32 s2_192
	word32 a2_187
	word32 a1_186
	word32 s0_185
	word32 s3_193
	word32 s4_194
	word32 s8_195
	ke_msg_alloc(ra, 0x100040F<32>, a3, 208<i32>, a4, mstatus, dwArg08, out s0_185, out s1_30, out a0_21, out a1_186, out a2_187, out a3_188, out a4_189, out a5_190, out a6_191, out s2_192, out s3_193, out s4_194, out s8_195)
	word32 a3_39 = CONVERT(Mem18[s1_30:byte], byte, word32)
	word32 s1_112 = Mem18[a3_39 + 0x420191E0<32>:int32]
	Mem47[a0_21:byte] = SLICE(a3_39, byte, 0)
	word32 s0_106 = a0_21
	branch s1_112 == 0<32> l2301DE8C
l2301DE8C:
	Mem48[a0_21 + 2<i32>:word16] = 0<16>
l2301DE02:
	Mem52[a0_21 + 2<i32>:word16] = SLICE(CONVERT(Mem47[s1_112 + 192<i32>:uint16], uint16, word32), word16, 0)
	Mem56[a0_21 + 0x1004<32>:word16] = SLICE(CONVERT(Mem52[s1_112 + 164<i32>:uint16], uint16, word32), word16, 0)
	Mem58[a0_21 + 0x1006<32>:word16] = SLICE(CONVERT(Mem56[s1_112 + 166<i32>:uint16], uint16, word32), word16, 0)
	Mem60[a0_21 + 0x1008<32>:word32] = Mem58[s1_112 + 168<i32>:int32]
	Mem62[a0_21 + 0x100C<32>:byte] = SLICE(CONVERT(Mem60[s1_112 + 176<i32>:byte], byte, word32), byte, 0)
	Mem64[a0_21 + 0x100D<32>:byte] = SLICE(CONVERT(Mem62[s1_112 + 172<i32>:byte], byte, word32), byte, 0)
	word32 a1_196
	word32 a2_197
	word32 a3_198
	word32 a4_199
	word32 a5_200
	word32 a6_201
	word32 a7_202
	memcpy(a0_21 + 0x10<32>, s1_112 + 124<i32>, 32<i32>, out a1_196, out a2_197, out a3_198, out a4_199, out a5_200, out a6_201, out a7_202)
	word32 a1_203
	word32 a2_204
	word32 a3_205
	word32 a4_206
	word32 a5_207
	word32 a6_208
	word32 a7_209
	memcpy(a0_21 + 48<i32>, s1_112 + 4<i32>, 120<i32>, out a1_203, out a2_204, out a3_205, out a4_206, out a5_207, out a6_208, out a7_209)
	word32 s2_122 = 0<32>
l2301DE52:
	branch s2_122 <u CONVERT(Mem95[s1_112 + 192<i32>:uint16], uint16, word32) l2301DE6E
l2301DE6E:
	word32 a0_101
	word32 s2_113
	word32 a3_210
	word32 s3_211
	word32 s4_212
	word32 s8_213
	s0_106 = rc_calc_tp(s1_112, s2_122 & 255<i32>, dwArg08, out s1_112, out a0_101, out a3_210, out s2_113, out s3_211, out s4_212, out s8_213)
	Mem121[a0_101 + 8<i32>:word32] = (s2_113 + 40<i32> << 2<i32>) + s0_106
	s2_122 = CONVERT(SLICE(s2_113 + 1<32>, word16, 0), word16, word32)
l2301DE5A:
	word32 s1_214
	word32 a0_215
	word32 a1_216
	word32 a2_217
	word32 a3_218
	word32 a4_219
	word32 a5_220
	word32 s2_221
	word32 s3_222
	word32 s4_223
	word32 s8_224
	ke_msg_send(s0_106, mstatus, out s1_214, out a0_215, out a1_216, out a2_217, out a3_218, out a4_219, out a5_220, out s2_221, out s3_222, out s4_223, out s8_224)
	0<32> = dwArg38
	return
me_rc_stats_req_handler_exit:


void me_traffic_ind_req_handler(word32 ra, word32 a1, word32 a3, word32 s2, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
me_traffic_ind_req_handler_entry:
l2301DE92:
	word32 s1_17 = CONVERT(Mem15[a1:byte], byte, word32)
	word32 s3_100 = a3
	word32 a3_28 = CONVERT(Mem15[a1 + 1<i32>:byte], byte, word32)
	word32 a4_116 = s1_17 + 0x420190D0<32>
	word32 a5_31 = CONVERT(Mem15[s1_17 + 0x42019102<32>:byte], byte, word32)
	branch CONVERT(Mem15[a1 + 2<i32>:byte], byte, word32) == 0<32> l2301DF44
l2301DF44:
	word32 a5_32
	branch a3_28 == 0<32> l2301DF50
l2301DF50:
	a5_32 = a5_31 & 0xFFFFFFFE<32>
l2301DF46:
	a5_32 = a5_31 | 1<i32>
l2301DF4A:
	Mem36[s1_17 + 0x42019102<32>:byte] = SLICE(a5_32, byte, 0)
l2301DECE:
	word32 a4_37 = a5_31 & 251<i32>
	branch a3_28 == 0<32> l2301DED8
l2301DED4:
	a4_37 = a5_31 | 4<i32>
l2301DED8:
	Mem45[s1_17 + 0x42019102<32>:byte] = SLICE(a4_37, byte, 0)
	a4_116 = CONVERT(Mem45[s1_17 + 0x420191C2<32>:byte], byte, word32)
	branch a4_116 != 0xF<32> l2301DF24
l2301DEF0:
	word32 a0_64
	word32 s0_72
	word32 s1_73
	word32 s2_74
	word32 s8_195
	word32 a5_191
	word32 a6_192
	word32 s4_194
	word32 s3_193
	word32 a1_187
	word32 a2_188
	word32 a4_190
	word32 a3_189
	ra = ke_msg_alloc(ra, 65<i32>, 0<32>, 4<32>, a4_116, mstatus, dwLoc08, out s0_72, out s1_73, out a0_64, out a1_187, out a2_188, out a3_189, out a4_190, out a5_191, out a6_192, out s2_74, out s3_193, out s4_194, out s8_195)
	word32 s0_84 = s0_72 + (s1_73 + 432<i32>)
	Mem86[a0_64:word16] = SLICE(CONVERT(Mem63[s0_84 + 24<i32>:uint16], uint16, word32), word16, 0)
	Mem88[a0_64 + 3<i32>:byte] = SLICE(CONVERT(Mem86[s0_84 + 26<i32>:byte], byte, word32), byte, 0)
	Mem90[a0_64 + 2<i32>:byte] = SLICE(CONVERT(Mem88[s2_74 + 1<i32>:byte], byte, word32), byte, 0)
	word32 s4_203
	word32 s8_204
	word32 a2_199
	word32 a3_200
	word32 s2_202
	word32 a5_201
	word32 s1_196
	word32 a1_198
	word32 a0_197
	ke_msg_send(a0_64, mstatus, out s1_196, out a0_197, out a1_198, out a2_199, out a3_200, out a4_116, out a5_201, out s2_202, out s3_100, out s4_203, out s8_204)
l2301DF24:
	word32 a3_208
	word32 a0_207
	word32 s4_211
	word32 s8_212
	word32 s3_210
	word32 s2_209
	word32 s1_206
	word32 s0_205
	ke_msg_send_basic(ra, 0x100040D<32>, s3_100, a4_116, mstatus, s2, out s0_205, out s1_206, out a0_207, out a3_208, out s2_209, out s3_210, out s4_211, out s8_212)
	return
me_traffic_ind_req_handler_exit:


void me_sta_del_req_handler(word32 ra, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
me_sta_del_req_handler_entry:
l2301DF54:
	word32 a0_24
	word32 s0_32
	word32 a4_159
	word32 a3_158
	word32 a2_157
	word32 a1_156
	word32 s1_155
	word32 a5_160
	word32 a6_161
	word32 s2_162
	word32 s3_163
	word32 s4_164
	word32 s8_165
	word32 ra_113 = ke_msg_alloc(ra, 0xC<32>, 0<32>, 1<32>, a4, mstatus, dwArg08, out s0_32, out s1_155, out a0_24, out a1_156, out a2_157, out a3_158, out a4_159, out a5_160, out a6_161, out s2_162, out s3_163, out s4_164, out s8_165)
	Mem43[a0_24:byte] = SLICE(CONVERT(Mem21[s0_32:byte], byte, word32), byte, 0)
	word32 a0_166
	word32 a1_167
	word32 a2_168
	word32 a3_169
	word32 a5_170
	word32 s2_171
	word32 s3_172
	word32 s4_173
	word32 s8_174
	word32 s1_110
	word32 a4_115
	branch CONVERT(Mem43[ke_msg_send(a0_24, mstatus, out s1_110, out a0_166, out a1_167, out a2_168, out a3_169, out a4_115, out a5_170, out s2_171, out s3_172, out s4_173, out s8_174) + 1<i32>:byte], byte, word32) == 0<32> l2301DFB8
l2301DF82:
	word32 a0_65
	word32 s0_73
	word32 s1_183
	word32 a1_184
	word32 a2_185
	word32 a3_186
	word32 a4_187
	word32 a5_188
	word32 a6_189
	word32 s2_190
	word32 s3_191
	word32 s4_192
	word32 s8_193
	ra_113 = ke_msg_alloc(ra_113, 0x1000413<32>, 5<32>, 2<32>, a4_115, mstatus, dwArg08, out s0_73, out s1_183, out a0_65, out a1_184, out a2_185, out a3_186, out a4_187, out a5_188, out a6_189, out s2_190, out s3_191, out s4_192, out s8_193)
	Mem83[a0_65:byte] = 0<8>
	Mem91[a0_65 + 1<i32>:byte] = SLICE(CONVERT(Mem83[CONVERT(Mem83[s0_73:byte], byte, word32) + 0x420190EA<32>:byte], byte, word32), byte, 0)
	word32 a0_194
	word32 a1_195
	word32 a2_196
	word32 a3_197
	word32 a5_198
	word32 s2_199
	word32 s3_200
	word32 s4_201
	word32 s8_202
	ke_msg_send(a0_65, mstatus, out s1_110, out a0_194, out a1_195, out a2_196, out a3_197, out a4_115, out a5_198, out s2_199, out s3_200, out s4_201, out s8_202)
l2301DFB8:
	word32 s0_175
	word32 s1_176
	word32 a0_177
	word32 a3_178
	word32 s2_179
	word32 s3_180
	word32 s4_181
	word32 s8_182
	ke_msg_send_basic(ra_113, 0x100040A<32>, s1_110, a4_115, mstatus, dwLoc08, out s0_175, out s1_176, out a0_177, out a3_178, out s2_179, out s3_180, out s4_181, out s8_182)
	0<32> = dwArg38
	return
me_sta_del_req_handler_exit:


void me_set_control_port_req_handler(word32 ra, word32 a1, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
me_set_control_port_req_handler_entry:
l2301DFD4:
	word32 a5_13 = CONVERT(Mem11[a1:byte], byte, word32)
	word32 a3_26 = CONVERT(Mem11[a5_13 + 0x420190EA<32>:byte], byte, word32)
	word32 a5_29 = CONVERT(CONVERT(Mem11[a1 + 1<i32>:byte], byte, word32) != 0<32>, bool, word32)
	Mem31[a5_13 + 0x42019101<32>:byte] = SLICE(a5_29 + 1<32>, byte, 0)
	word32 s1_19 = a3
	word32 a4_33 = CONVERT(Mem31[a3_26 + 0x4201AA3E<32>:byte], byte, word32)
	branch a4_33 != 0<32> l2301E048
l2301E022:
	a4_33 = 2<32>
	branch a5_29 != 0xFFFFFFFF<32> l2301E048
l2301E028:
	word32 a0_41
	word32 s0_49
	word32 s1_133
	word32 a1_134
	word32 a2_135
	word32 a3_136
	word32 a4_137
	word32 a5_138
	word32 a6_139
	word32 s2_140
	word32 s3_141
	word32 s4_142
	word32 s8_143
	ra = ke_msg_alloc(ra, 0x1000413<32>, 5<32>, 2<32>, 2<32>, mstatus, dwArg08, out s0_49, out s1_133, out a0_41, out a1_134, out a2_135, out a3_136, out a4_137, out a5_138, out a6_139, out s2_140, out s3_141, out s4_142, out s8_143)
	Mem59[a0_41:byte] = 0<8>
	Mem61[a0_41 + 1<i32>:byte] = SLICE(CONVERT(Mem59[s0_49 + 26<i32>:byte], byte, word32), byte, 0)
	word32 a0_144
	word32 a1_145
	word32 a2_146
	word32 a3_147
	word32 a5_148
	word32 s2_149
	word32 s3_150
	word32 s4_151
	word32 s8_152
	ke_msg_send(a0_41, mstatus, out s1_19, out a0_144, out a1_145, out a2_146, out a3_147, out a4_33, out a5_148, out s2_149, out s3_150, out s4_151, out s8_152)
l2301E048:
	word32 s2_129
	word32 a3_128
	word32 a0_127
	word32 s1_126
	word32 s0_125
	word32 s3_130
	word32 s4_131
	word32 s8_132
	ke_msg_send_basic(ra, 0x1000405<32>, s1_19, a4_33, mstatus, dwLoc08, out s0_125, out s1_126, out a0_127, out a3_128, out s2_129, out s3_130, out s4_131, out s8_132)
	0<32> = dwArg38
	return
me_set_control_port_req_handler_exit:


void me_chan_config_req_handler(word32 ra, word32 a1, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
me_chan_config_req_handler_entry:
l2301E064:
	word32 a4_16
	word32 a3_21
	word32 a1_64
	word32 a2_65
	word32 a5_66
	word32 a6_67
	word32 a7_68
	memcpy(0x4201B004<32>, a1, 254<i32>, out a1_64, out a2_65, out a3_21, out a4_16, out a5_66, out a6_67, out a7_68)
	word32 s0_69
	word32 s1_70
	word32 a0_71
	word32 a3_72
	word32 s2_73
	word32 s3_74
	word32 s4_75
	word32 s8_76
	ke_msg_send_basic(ra, 0x1000403<32>, a3_21, a4_16, mstatus, dwLoc18, out s0_69, out s1_70, out a0_71, out a3_72, out s2_73, out s3_74, out s4_75, out s8_76)
	return
me_chan_config_req_handler_exit:


void mm_set_ps_mode_cfm_handler(word32 ra, word32 a2, word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
mm_set_ps_mode_cfm_handler_entry:
l2301E098:
	word32 a0_11
	word32 a4_13
	word32 a2_87
	word32 s2_88
	ke_state_get(a2, dwArg28, out a0_11, out a2_87, out a4_13, out s2_88)
	word32 s0_10 = a2
	branch a0_11 == 1<32> l2301E0C4
l2301E0C4:
	word32 a1_25 = CONVERT(Mem9[0x4201AFDC<32>:uint16], uint16, word32)
	branch a1_25 == 255<i32> l2301E0E0
l2301E0D4:
	word32 s1_97
	word32 a0_98
	word32 a3_99
	word32 s2_100
	word32 s3_101
	word32 s4_102
	word32 s8_103
	ke_msg_send_basic(ra, 0x1000414<32>, a1_25, a4_13, mstatus, dwLoc08, out s0_10, out s1_97, out a0_98, out a3_99, out s2_100, out s3_101, out s4_102, out s8_103)
l2301E0E0:
	word32 s1_89
	word32 a0_90
	word32 a1_91
	word32 a4_92
	word32 a5_93
	word32 s2_94
	word32 s3_95
	word32 s4_96
	ke_state_set(s0_10, 0<32>, mstatus, out s1_89, out a0_90, out a1_91, out a4_92, out a5_93, out s2_94, out s3_95, out s4_96)
	return
mm_set_ps_mode_cfm_handler_exit:
l2301E0AC:
	assert_err()


void mm_set_idle_cfm_handler(word32 ra, word32 a2, word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
mm_set_idle_cfm_handler_entry:
l2301E0F2:
	word32 a0_11
	word32 a4_13
	word32 a2_87
	word32 s2_88
	ke_state_get(a2, dwArg28, out a0_11, out a2_87, out a4_13, out s2_88)
	word32 s0_10 = a2
	branch a0_11 == 1<32> l2301E11E
l2301E11E:
	word32 a1_25 = CONVERT(Mem9[0x4201AFDC<32>:uint16], uint16, word32)
	branch a1_25 == 255<i32> l2301E13A
l2301E12E:
	word32 s1_97
	word32 a0_98
	word32 a3_99
	word32 s2_100
	word32 s3_101
	word32 s4_102
	word32 s8_103
	ke_msg_send_basic(ra, 0x1000412<32>, a1_25, a4_13, mstatus, dwLoc08, out s0_10, out s1_97, out a0_98, out a3_99, out s2_100, out s3_101, out s4_102, out s8_103)
l2301E13A:
	word32 s1_89
	word32 a0_90
	word32 a1_91
	word32 a4_92
	word32 a5_93
	word32 s2_94
	word32 s3_95
	word32 s4_96
	ke_state_set(s0_10, 0<32>, mstatus, out s1_89, out a0_90, out a1_91, out a4_92, out a5_93, out s2_94, out s3_95, out s4_96)
	return
mm_set_idle_cfm_handler_exit:
l2301E106:
	assert_err()


void me_config_req_handler(word32 ra, word32 a4, word32 s2, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
me_config_req_handler_entry:
l2301E14C:
	word32 s1_39
	word32 s4_42
	word32 s8_224
	word32 s2_222
	word32 s3_223
	word32 a5_220
	word32 a6_221
	word32 a3_218
	word32 a4_219
	word32 a1_216
	word32 a2_217
	word32 s0_214
	word32 a0_215
	word32 ra_37 = ke_msg_alloc(ra, 49<i32>, 0<32>, 1<32>, a4, mstatus, dwLoc08, out s0_214, out s1_39, out a0_215, out a1_216, out a2_217, out a3_218, out a4_219, out a5_220, out a6_221, out s2_222, out s3_223, out s4_42, out s8_224)
	Mem55[0x4201B002<32>:byte] = SLICE(CONVERT(Mem27[s1_39 + 46<i32>:byte], byte, word32), byte, 0)
	word32 a4_56
	word32 a2_226
	word32 a5_228
	word32 a7_230
	word32 a3_227
	word32 a6_229
	word32 a1_225
	memcpy(0x4201AFE0<32>, s1_39, 32<i32>, out a1_225, out a2_226, out a3_227, out a4_56, out a5_228, out a6_229, out a7_230)
	word32 a0_73
	word32 s0_81
	word32 s1_82
	word32 s2_83
	word32 s3_84
	word32 a3_231
	word32 s4_232
	word32 s8_233
	ke_msg_send_basic(ra_37, 0x1000401<32>, s4_42, a4_56, mstatus, s2, out s0_81, out s1_82, out a0_73, out a3_231, out s2_83, out s3_84, out s4_232, out s8_233)
	branch CONVERT(Mem55[s2_83 + 46<i32>:byte], byte, word32) == 0<32> l2301E202
l2301E202:
	Mem93[s0_81 + 258<i32>:word16] = 0<16>
l2301E1A8:
	word32 a0_94 = phy_get_nss(a0_73)
	word32 a5_100 = CONVERT(Mem55[s0_81 + -32<i32>:uint16], uint16, word32) >>u 1<i32> & 1<32>
	Mem101[s0_81 + 258<i32>:byte] = SLICE(a0_94 + 1<32> >> 1<i32>, byte, 0)
	Mem102[s0_81 + 259<i32>:byte] = SLICE(a5_100, byte, 0)
l2301E1C0:
	Mem107[s0_81:word16] = SLICE(CONVERT(Mem104[s1_82 + 44<i32>:uint16], uint16, word32), word16, 0)
	word32 a5_108 = CONVERT(Mem107[s1_82 + 48<i32>:byte], byte, word32)
	Mem109[s0_81 + 260<i32>:byte] = SLICE(a5_108, byte, 0)
	branch a5_108 == 0<32> l2301E1EE
l2301E1D2:
	Mem111[s0_81 + -36<i32>:word16] = 0xFF<16>
	Mem115[s3_84:byte] = 2<8>
	word32 s1_234
	word32 a0_235
	word32 a1_236
	word32 a2_237
	word32 a3_238
	word32 a4_239
	word32 a5_240
	word32 s2_241
	word32 s3_242
	word32 s4_243
	word32 s8_244
	ke_msg_send(s3_84, mstatus, out s1_234, out a0_235, out a1_236, out a2_237, out a3_238, out a4_239, out a5_240, out s2_241, out s3_242, out s4_243, out s8_244)
	word32 s1_245
	word32 a0_246
	word32 a1_247
	word32 a4_248
	word32 a5_249
	word32 s2_250
	word32 s3_251
	word32 s4_252
	ke_state_set(5<32>, 1<32>, mstatus, out s1_245, out a0_246, out a1_247, out a4_248, out a5_249, out s2_250, out s3_251, out s4_252)
l2301E1EE:
	return
me_config_req_handler_exit:


void me_set_ps_disable_req_handler(word32 ra, word32 a1, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
me_set_ps_disable_req_handler_entry:
l2301E208:
	word32 s2_126 = a3
	branch CONVERT(Mem8[0x4201B104<32>:byte], byte, word32) != 0<32> l2301E24A
l2301E24A:
	word32 a0_26
	word32 a2_237
	word32 a4_238
	ke_state_get(5<32>, dwArg18, out a0_26, out a2_237, out a4_238, out s2_126)
	branch a0_26 == 1<32> l2301E238
l2301E25A:
	a4 = Mem18[0x4201AFD8<32>:int32]
	word32 a3_37 = CONVERT(Mem18[a1:byte], byte, word32)
	branch a4 == 0<32> l2301E2AA
l2301E2AA:
	branch a3_37 == 0<32> l2301E228
l2301E2AC:
l2301E268:
	branch a3_37 != 0<32> l2301E2BE
l2301E2BE:
	Mem41[0x4201AFD8<32>:word32] = 1<32> << CONVERT(Mem18[a1 + 1<i32>:byte], byte, word32) | a4
l2301E26A:
	word32 a5_77
	word32 s0_75
	word32 a0_53
	word32 s2_63
	word32 s3_64
	word32 s0_247
	word32 s1_248
	word32 a1_249
	word32 a2_250
	word32 a3_251
	word32 a4_252
	word32 a5_253
	word32 a6_254
	word32 s4_255
	word32 s8_256
	ke_msg_alloc(ra, 49<i32>, 0<32>, 1<32>, a4, mstatus, dwLoc08, out s0_247, out s1_248, out a0_53, out a1_249, out a2_250, out a3_251, out a4_252, out a5_253, out a6_254, out s2_63, out s3_64, out s4_255, out s8_256)
	word32 a4_72 = CONVERT(Mem18[s3_64 + 1<i32>:byte], byte, word32)
	branch CONVERT(Mem18[s3_64:byte], byte, word32) == 0<32> l2301E2AE
l2301E2AE:
	s0_75 = Mem18[a4_72 + 4<i32>:word32]
	a5_77 = ~(1<32> << a4_72) & a4_72
l2301E282:
	s0_75 = Mem18[a4_72 + 4<i32>:word32]
	a5_77 = 1<32> << a4_72 | a4_72
l2301E28C:
	Mem84[a5_77 + 4<i32>:word32] = s0_75
	Mem87[s0_75 + 8<i32>:word16] = SLICE(s2_63, word16, 0)
	Mem90[a0_53:byte] = SLICE(CONVERT(a5_77 <u 1<i32>, bool, word32) << 1<i32>, byte, 0)
	word32 s1_99
	word32 a0_257
	word32 a1_258
	word32 a2_259
	word32 a3_260
	word32 a4_261
	word32 a5_262
	word32 s2_263
	word32 s3_264
	word32 s4_265
	word32 s8_266
	ke_msg_send(a0_53, mstatus, out s1_99, out a0_257, out a1_258, out a2_259, out a3_260, out a4_261, out a5_262, out s2_263, out s3_264, out s4_265, out s8_266)
	word32 s1_267
	word32 a0_268
	word32 a1_269
	word32 a4_270
	word32 a5_271
	word32 s2_272
	word32 s3_273
	word32 s4_274
	ke_state_set(s1_99, 1<32>, mstatus, out s1_267, out a0_268, out a1_269, out a4_270, out a5_271, out s2_272, out s3_273, out s4_274)
l2301E228:
	word32 a3_242
	word32 s3_244
	word32 a0_241
	word32 s1_240
	word32 s4_245
	word32 s8_246
	word32 s2_243
	word32 s0_239
	ke_msg_send_basic(ra, 0x1000414<32>, s2_126, a4, mstatus, s2, out s0_239, out s1_240, out a0_241, out a3_242, out s2_243, out s3_244, out s4_245, out s8_246)
l2301E236:
l2301E238:
	return
me_set_ps_disable_req_handler_exit:


void me_set_active_req_handler(word32 ra, word32 a1, word32 a3, word32 s2, word32 mstatus, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
me_set_active_req_handler_entry:
l2301E2CE:
	word32 a0_21
	word32 s2_26
	word32 a2_227
	word32 a4_228
	ke_state_get(5<32>, dwArg18, out a0_21, out a2_227, out a4_228, out s2_26)
	branch a0_21 == 1<32> l2301E354
l2301E2EE:
	word32 a4_31 = Mem14[a3:word32]
	word32 a2_32 = CONVERT(Mem14[a1:byte], byte, word32)
	branch a3 == 0<32> l2301E342
l2301E342:
	branch a2_32 != 0<32> l2301E304
l2301E302:
	branch a2_32 != 0<32> l2301E374
l2301E374:
	Mem37[1<32> << CONVERT(Mem14[a1 + 1<i32>:byte], byte, word32) | a3:word32] = a4_31
l2301E344:
	word32 s0_257
	word32 s1_258
	word32 a0_259
	word32 a3_260
	word32 s2_261
	word32 s3_262
	word32 s4_263
	word32 s8_264
	ke_msg_send_basic(ra, 0x1000412<32>, s2_26, a4_31, mstatus, s2, out s0_257, out s1_258, out a0_259, out a3_260, out s2_261, out s3_262, out s4_263, out s8_264)
l2301E304:
	word32 a5_102
	word32 s0_100
	word32 a0_78
	word32 s2_88
	word32 s3_89
	word32 s0_229
	word32 s1_230
	word32 a1_231
	word32 a2_232
	word32 a3_233
	word32 a4_234
	word32 a5_235
	word32 a6_236
	word32 s4_237
	word32 s8_238
	ke_msg_alloc(ra, 34<i32>, 0<32>, 1<32>, a4_31, mstatus, dwLoc08, out s0_229, out s1_230, out a0_78, out a1_231, out a2_232, out a3_233, out a4_234, out a5_235, out a6_236, out s2_88, out s3_89, out s4_237, out s8_238)
	word32 a4_97 = CONVERT(Mem14[s3_89 + 1<i32>:byte], byte, word32)
	branch CONVERT(Mem14[s3_89:byte], byte, word32) == 0<32> l2301E364
l2301E364:
	s0_100 = Mem14[a4_97:word32]
	a5_102 = ~(1<32> << a4_97) & a4_97
l2301E31C:
	s0_100 = Mem14[a4_97:word32]
	a5_102 = 1<32> << a4_97 | a4_97
l2301E326:
	Mem109[a5_102:word32] = s0_100
	Mem111[s0_100 + 8<i32>:word16] = SLICE(s2_88, word16, 0)
	Mem114[a0_78:byte] = SLICE(CONVERT(a5_102 <u 1<i32>, bool, word32), byte, 0)
	word32 s1_123
	word32 a0_239
	word32 a1_240
	word32 a2_241
	word32 a3_242
	word32 a4_243
	word32 a5_244
	word32 s2_245
	word32 s3_246
	word32 s4_247
	word32 s8_248
	ke_msg_send(a0_78, mstatus, out s1_123, out a0_239, out a1_240, out a2_241, out a3_242, out a4_243, out a5_244, out s2_245, out s3_246, out s4_247, out s8_248)
	word32 s1_249
	word32 a0_250
	word32 a1_251
	word32 a4_252
	word32 a5_253
	word32 s2_254
	word32 s3_255
	word32 s4_256
	ke_state_set(s1_123, 1<32>, mstatus, out s1_249, out a0_250, out a1_251, out a4_252, out a5_253, out s2_254, out s3_255, out s4_256)
l2301E352:
l2301E354:
	return
me_set_active_req_handler_exit:


void me_sta_add_req_handler(word32 ra, word32 s1, word32 a3, word32 a4, word32 s4, word32 s7, word32 s9, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
me_sta_add_req_handler_entry:
	word16 wLoc46_502 = SLICE(dwLoc48, word16, 16)
l2301E382:
	word32 s2_112
	word32 s1_107
	word32 a0_35
	word32 a3_679
	word32 s0_675
	word32 a2_678
	word32 s1_676
	word32 a1_677
	word32 a4_680
	word32 a5_681
	word32 s3_684
	word32 a6_682
	word32 s4_685
	word32 s2_683
	word32 s8_686
	word32 ra_42 = ke_msg_alloc(ra, 0x1000408<32>, a3, 3<32>, a4, mstatus, dwLoc48, out s0_675, out s1_676, out a0_35, out a1_677, out a2_678, out a3_679, out a4_680, out a5_681, out a6_682, out s2_683, out s3_684, out s4_685, out s8_686)
	word32 a5_55 = rxu_cntrl_get_pm()
	word32 s0_56 = Mem32[a5_55 + 64<i32>:word32]
	branch (a5_55 & 2<32>) == 0<32> l2301E58C
l2301E58C:
	s2_112 = 0<32>
	s1_107 = 0<32>
l2301E3BE:
	word32 a5_62 = CONVERT(Mem32[s0_56 + 22<i32>:byte], byte, word32)
	s2_112 = 1<32>
	word32 a5_67 = a5_62 >> 2<i32> & 7<32>
	branch a5_67 <= 2<32> l2301E3DC
l2301E3D2:
	s2_112 = 1<32> << a5_67 + 0xFFFFFFFD<32> & 255<i32>
l2301E3DC:
	s1_107 = CONVERT(SLICE((1<32> << (a5_62 & 3<i32>) + 13<i32>) + 0xFFFFFFFF<32>, word16, 0), word16, word32)
l2301E3EC:
	word32 a4_86
	word32 a3_689
	word32 a6_691
	word32 a7_692
	word32 a5_690
	word32 a2_688
	word32 a1_687
	memcpy(fp + -70<i32>, s0_56, 6<32>, out a1_687, out a2_688, out a3_689, out a4_86, out a5_690, out a6_691, out a7_692)
	word32 a5_99 = CONVERT(Mem85[s0_56 + 84<i32>:byte], byte, word32)
	word32 dwLoc48_504 = SEQ(wLoc46_502, SLICE(s1_107, word16, 0))
	word32 s0_135
	word32 s4_141
	word32 a0_154
	word32 s5_142
	word32 ra_134 = mm_sta_add(ra_42, s1_107, fp + -80<i32>, a0_35, a4_86, CONVERT(Mem115[Mem109[a5_99 + 80<i32>:word32] + 85<i32>:byte], byte, word32), s2_112, s7, mstatus, dwLoc50, a5_99, dwLoc48_504, dwLoc28, dwLoc04, dwArg08, dwArg18, 0<32>, s9, s1, dwArg58, dwArg78, dwArg98, dwArgB8, out s0_135, out a0_154, out s4_141, out s5_142)
	Mem155[s5_142 + 1<i32>:byte] = SLICE(a0_154, byte, 0)
	branch a0_154 != 0<32> l2301E56A
l2301E434:
	word32 s9_221
	word32 s1_156 = CONVERT(Mem155[s5_142:byte], byte, word32)
	word32 a5_169
	word32 a7_709
	word32 a2_705
	word32 a3_706
	word32 a4_707
	word32 a6_708
	word32 a1_704
	memcpy(s1_156 + 0x42019180<32>, s0_135 + 6<i32>, 0xD<32>, out a1_704, out a2_705, out a3_706, out a4_707, out a5_169, out a6_708, out a7_709)
	word32 s0_181 = Mem155[a5_169 + 64<i32>:word32]
	branch (a5_169 & 1<32>) != 0<32> l2301E592
l2301E592:
	word32 a5_183 = Mem155[s1_156 + 0x420191BC<32>:int32]
	Mem185[s1_156 + 0x420191BC<32>:word32] = a5_183 | 1<i32>
	s0_181 = Mem185[(a5_183 | 1<i32>) + 64<i32>:word32]
	branch ((a5_183 | 1<i32>) & 2<32>) == 0<32> l2301E46C
l2301E5A6:
	branch CONVERT(Mem185[0x4201B002<32>:byte], byte, word32) == 0<32> l2301E46C
l2301E5B2:
	Mem191[s1_156 + 0x420191BC<32>:word32] = a5_183 | 3<i32>
	word32 a1_713
	word32 a7_719
	word32 a3_715
	word32 a4_716
	word32 a5_717
	word32 a6_718
	word32 a2_714
	memcpy(s1_156 + 0x42019190<32>, s0_181 + 20<i32>, 32<i32>, out a1_713, out a2_714, out a3_715, out a4_716, out a5_717, out a6_718, out a7_719)
	word32 a4_720
	s9_221 = me_set_sta_ht_vht_param(s1_156 + 0x420190D0<32>, s4_141 + 0x4201AD40<32>, out a4_720)
l2301E46C:
	s9_221 = 0<32>
l2301E46E:
	Mem238[s1_156 + 0x420191C2<32>:byte] = SLICE(CONVERT(Mem229[s0_181 + 70<i32>:byte], byte, word32), byte, 0)
	Mem240[s1_156 + 0x420191C3<32>:byte] = SLICE(CONVERT(Mem238[s0_181 + 71<i32>:byte], byte, word32), byte, 0)
	Mem242[s1_156 + 0x420190E8<32>:word16] = SLICE(CONVERT(Mem240[s0_181 + 68<i32>:uint16], uint16, word32), word16, 0)
	word32 a5_265
	word32 s8_279
	word32 s9_280
	word32 a3_721
	word32 s1_270
	word32 s3_274
	word32 s7_278
	word32 s6_277
	word32 s4_275
	word32 ra_268 = me_init_rate(ra_134, s1_156 + 0x420190D0<32>, s9_221, fflags, frm, mstatus, dwLoc54, s4, dwLoc28, dwArg08, dwArg88, dwArgB8, dwArg0138, out s1_270, out a3_721, out a5_265, out s3_274, out s4_275, out s5_142, out s6_277, out s7_278, out s8_279, out s9_280)
	word32 s0_288 = Mem242[a5_265 + 64<i32>:word32]
	branch (a5_265 & 0x10<32>) == 0<32> l2301E4B8
l2301E49C:
	word32 a1_290 = CONVERT(Mem242[s0_288 + 72<i32>:byte], byte, word32)
	branch CONVERT(SLICE(a1_290, byte, 0), byte, int32) < 0<32> l2301E4B8
l2301E4AA:
	word32 a4_711
	word32 a5_712
	word32 a1_710
	ra_268 = me_sta_bw_nss_max_upd(CONVERT(Mem242[s8_279 + 27<i32>:byte], byte, word32), a1_290 & 3<32>, a1_290 >>u 4<u32>, dwArg58, out s1_270, out a1_710, out a4_711, out a5_712, out s3_274, out s4_275, out s5_142, out s6_277, out s7_278)
l2301E4B8:
	branch s9_280 == 0<32> l2301E4D4
l2301E4BC:
	word32 a4_723
	word32 a5_724
	word32 a1_722
	ra_268 = me_sta_bw_nss_max_upd(CONVERT(Mem242[s1_270 + 432<i32> + s3_274 + 27<i32>:byte], byte, word32), 255<i32>, 0<32>, dwArg58, out s1_270, out a1_722, out a4_723, out a5_724, out s3_274, out s4_275, out s5_142, out s6_277, out s7_278)
l2301E4D4:
	word32 a5_355 = s1_270 + 432<i32> + s3_274
	Mem359[a5_355 + 282<i32>:byte] = SLICE(CONVERT(Mem242[a5_355 + 282<i32>:byte], byte, word32) | 16<i32>, byte, 0)
	word32 a4_366 = s4_275 + 1496<i32> + s7_278
	Mem371[a5_355 + 49<i32>:byte] = SLICE(CONVERT((Mem359[a4_366 + 1476<i32>:int32] & 1<32>) <u 1<i32>, bool, word32) + 1<32>, byte, 0)
	word32 a3_372 = CONVERT(Mem371[a4_366 + 844<i32>:uint16], uint16, word32)
	Mem376[a5_355 + 56<i32>:word16] = SLICE(a3_372 >>u 8<i32> | a3_372 << 8<u32>, word16, 0)
	Mem381[s5_142 + 2<i32>:byte] = SLICE(s6_277, byte, 0)
	branch s6_277 == 0<32> l2301E56A
l2301E51C:
	Mem382[a5_355 + 28<i32>:byte] = SLICE(s6_277, byte, 0)
	branch CONVERT(Mem382[a4_366 + 842<i32>:byte], byte, word32) != 0<32> l2301E556
l2301E526:
	word32 a0_397
	word32 s0_405
	word32 s2_407
	word32 s3_408
	word32 s8_733
	word32 s1_725
	word32 a6_731
	word32 s4_732
	word32 a2_727
	word32 a3_728
	word32 a4_729
	word32 a5_730
	word32 a1_726
	ke_msg_alloc(ra_268, 73<i32>, 0xD<32>, 2<32>, a4_366, mstatus, dwLoc48_504, out s0_405, out s1_725, out a0_397, out a1_726, out a2_727, out a3_728, out a4_729, out a5_730, out a6_731, out s2_407, out s3_408, out s4_732, out s8_733)
	Mem417[s3_408 + s2_407 + 28<i32>:byte] = 1<8>
	Mem418[a0_397:byte] = SLICE(s0_405, byte, 0)
	Mem419[a0_397 + 1<i32>:byte] = 1<8>
	word32 s2_741
	word32 s3_742
	word32 s8_743
	word32 a4_739
	word32 a5_740
	word32 a0_735
	word32 a1_736
	word32 a2_737
	word32 a3_738
	word32 s1_734
	ke_msg_send(a0_397, mstatus, out s1_734, out a0_735, out a1_736, out a2_737, out a3_738, out a4_739, out a5_740, out s2_741, out s3_742, out s4_275, out s8_743)
l2301E556:
	word32 s7_439 = s7_278 + (s4_275 + 1496<i32>)
	Mem443[s7_439 + 842<i32>:byte] = SLICE(CONVERT(Mem440[s7_439 + 842<i32>:byte], byte, word32) + 1<32>, byte, 0)
l2301E56A:
	word32 s8_703
	word32 a3_697
	word32 a5_699
	word32 s2_700
	word32 s3_701
	word32 s4_702
	word32 a4_698
	word32 a1_695
	word32 a2_696
	word32 s1_693
	word32 a0_694
	ke_msg_send(s5_142, mstatus, out s1_693, out a0_694, out a1_695, out a2_696, out a3_697, out a4_698, out a5_699, out s2_700, out s3_701, out s4_702, out s8_703)
	return
me_sta_add_req_handler_exit:


void cfm_raw_send(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
cfm_raw_send_entry:
l2301E5E2:
l2301E5EA_thunk_printf:
	word32 s1_36
	word32 a0_37
	word32 a1_38
	word32 a2_39
	word32 a3_40
	word32 a4_41
	word32 a5_42
	word32 a7_43
	word32 s2_44
	word32 s3_45
	word32 s4_46
	word32 s5_47
	word32 s6_48
	word32 s7_49
	word32 s8_50
	word32 s9_51
	word32 s10_52
	word32 s11_53
	word32 t4_54
	printf(ra, 0x23078624<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_36, out a0_37, out a1_38, out a2_39, out a3_40, out a4_41, out a5_42, out a7_43, out s2_44, out s3_45, out s4_46, out s5_47, out s6_48, out s7_49, out s8_50, out s9_51, out s10_52, out s11_53, out t4_54)
	return
cfm_raw_send_exit:


void scanu_raw_send_req_handler(word32 ra, word32 a3, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgA8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scanu_raw_send_req_handler_entry:
l2301E5EE:
	word32 a3_26
	word32 a4_27
	word32 a4_51
	word32 a5_52
	word32 s1_206
	word32 a0_207
	word32 a1_208
	word32 a2_209
	word32 a5_210
	word32 a7_211
	word32 s2_212
	word32 s3_213
	word32 s4_214
	word32 s5_215
	word32 s6_216
	word32 s7_217
	word32 s8_218
	word32 s9_219
	word32 s10_220
	word32 s11_221
	word32 t4_222
	word32 ra_54 = scanu_raw_send_cfm(printf(ra, 0x23078698<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_206, out a0_207, out a1_208, out a2_209, out a3_26, out a4_27, out a5_210, out a7_211, out s2_212, out s3_213, out s4_214, out s5_215, out s6_216, out s7_217, out s8_218, out s9_219, out s10_220, out s11_221, out t4_222), a3_26, a4_27, mstatus, s2, out a4_51, out a5_52)
	word32 s1_76
	word32 a0_81
	word32 s2_85
	word32 s0_223
	word32 a1_224
	word32 a3_225
	word32 a4_226
	word32 a5_227
	word32 s3_228
	word32 s4_229
	word32 s5_230
	word32 s6_231
	word32 s7_232
	word32 s8_233
	word32 s9_234
	word32 s10_235
	word32 s11_236
	txl_frame_get(ra_54, 0<32>, 256<i32>, a4_51, a5_52, fflags, frm, mstatus, dwArgE8, dwArg0108, dwArg0128, out s0_223, out s1_76, out a0_81, out a1_224, out a3_225, out a4_226, out a5_227, out s2_85, out s3_228, out s4_229, out s5_230, out s6_231, out s7_232, out s8_233, out s9_234, out s10_235, out s11_236)
	branch a0_81 == 0<32> l2301E672
l2301E628:
	word32 a4_97
	word32 a1_237
	word32 a2_238
	word32 a3_239
	word32 a5_240
	word32 a6_241
	word32 a7_242
	memcpy(Mem20[a0_81 + 104<i32>:word32] + 332<i32>, s2_85, s1_76, out a1_237, out a2_238, out a3_239, out a4_97, out a5_240, out a6_241, out a7_242)
	Mem111[a0_81 + 48<i32>:byte] = 0xFF<8>
	Mem114[a0_81 + 716<i32>:word32] = 0x2301E5E2<32>
	word32 s0_115 = Mem114[0x2301E64E<32>:word32]
	Mem116[s0_115 + 47<i32>:byte] = 0<8>
	Mem117[s0_115 + 94<i32>:byte] = 0<8>
	Mem118[s0_115 + 96<i32>:byte] = 0<8>
	Mem119[s0_115 + 720<i32>:word32] = s0_115
	word32 a5_120 = Mem119[a4_97 + 20<i32>:word32]
	Mem124[a4_97 + (s1_76 + -1<i32>) + 24<i32>:word32] = a5_120
	Mem125[s1_76 + 0x20<32>:word32] = a5_120
	txl_frame_push_force(ra_54, 3<32>, s1_76 + -1<i32>, a5_120, mstatus, dwArg18, dwArg78, dwArgA8, dwArgDC)
l2301E672:
	return
scanu_raw_send_req_handler_exit:


void scanu_join_req_handler(word32 ra, word32 s0, word32 a1, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..15] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scanu_join_req_handler_entry:
l2301E680:
	Mem13[CONVERT(Mem5[a1 + 334<i32>:byte], byte, word32) + 0x4201ADC8<32>:word32] = 0<32>
	Mem18[0x4201BBAC<32>:word16] = SLICE(a3, word16, 0)
	Mem19[0x4201BBAE<32>:word16] = 1<16>
	word32 a4_20 = Mem19[a1 + 320<i32>:int32]
	Mem21[a1:word32] = 0x4201BA44<32>
	Mem22[0x4201BBB0<32>:word32] = a4_20
	Mem24[0x4201BBB4<32>:word16] = SLICE(CONVERT(Mem22[a1 + 324<i32>:uint16], uint16, word32), word16, 0)
	branch (CONVERT(Mem24[a1 + 320<i32>:byte], byte, word32) & 1<32>) == 0<32> l2301E6E2
l2301E6E2:
	scanu_start(ra, s0, mstatus, dwArg04, dwArg08, dwArg0118, dwArg0158)
	return
scanu_join_req_handler_exit:
l2301E6CA:
	assert_err()


void scanu_start_req_handler(word32 ra, word32 s0, word32 a1, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..15] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scanu_start_req_handler_entry:
l2301E6EE:
	Mem9[0x4201BBAC<32>:word16] = SLICE(a3, word16, 0)
	Mem10[0x4201BBAE<32>:word16] = 0<16>
	word32 a4_12 = Mem10[a1 + 320<i32>:int32]
	Mem13[a1:word32] = 0x4201BA44<32>
	Mem14[0x4201BBB0<32>:word32] = a4_12
	Mem16[0x4201BBB4<32>:word16] = SLICE(CONVERT(Mem14[a1 + 324<i32>:uint16], uint16, word32), word16, 0)
	scanu_start(ra, s0, mstatus, dwArg04, dwArg08, dwArg0118, dwArg0158)
	return
scanu_start_req_handler_exit:


void rxu_mgt_ind_handler(word32 ra, word32 a1, word32 s3, word32 s6, word32 dwArg08, word32 dwArg98)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] ra:[0..31] s3:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0098:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rxu_mgt_ind_handler_entry:
l2301E720:
l2301E722_thunk_scanu_frame_handler:
	scanu_frame_handler(ra, a1, s3, s6, dwArg08, dwArg98)
	return
rxu_mgt_ind_handler_exit:


void scan_done_ind_handler(word32 ra, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scan_done_ind_handler_entry:
l2301E726:
	word32 a4_8 = CONVERT(Mem6[0x4201BBAF<32>:byte], byte, word32)
	Mem10[0x4201BBAF<32>:byte] = SLICE(a4_8 + 1<32>, byte, 0)
	scanu_scan_next(ra, a4_8 + 1<32>, mstatus)
	return
scan_done_ind_handler_exit:


void scan_start_cfm_handler(word32 ra, word32 a1, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
scan_start_cfm_handler_entry:
l2301E748:
	branch CONVERT(Mem0[a1:byte], byte, word32) == 0<32> l2301E75E
l2301E75E:
	return
l2301E74E:
	scanu_confirm(ra, a4, mstatus)
	return
scan_start_cfm_handler_exit:


void me_set_ps_disable_cfm_handler(word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
me_set_ps_disable_cfm_handler_entry:
l2301E762:
	word32 a0_7
	word32 s2_107
	word32 a4_106
	word32 a2_105
	ke_state_get(6<32>, dwArg28, out a0_7, out a2_105, out a4_106, out s2_107)
	branch a0_7 == 4<32> l2301E79E
l2301E772:
	word32 a0_16
	word32 s2_112
	word32 a4_111
	word32 a2_110
	ke_state_get(6<32>, dwArg28, out a0_16, out a2_110, out a4_111, out s2_112)
	branch a0_16 == 0<32> l2301E79E
l2301E77A:
	word32 a0_24
	word32 a2_113
	word32 a4_114
	word32 s2_115
	ke_state_get(6<32>, dwArg28, out a0_24, out a2_113, out a4_114, out s2_115)
	branch a0_24 == 8<32> l2301E79E
l2301E79E:
	word32 a0_40
	word32 a4_42
	word32 s2_109
	word32 a2_108
	ke_state_get(6<32>, dwArg28, out a0_40, out a2_108, out a4_42, out s2_109)
	branch a0_40 != 4<32> l2301E7AE
l2301E7AA:
	sm_send_next_bss_param(a4_42, 4<32>, mstatus)
l2301E7AE:
	return
me_set_ps_disable_cfm_handler_exit:
l2301E786:
	assert_err()


void mm_bss_param_setting_handler(word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mm_bss_param_setting_handler_entry:
l2301E7B6:
	word32 a0_7
	word32 a4_9
	word32 a2_42
	word32 s2_43
	ke_state_get(6<32>, dwArg28, out a0_7, out a2_42, out a4_9, out s2_43)
	branch a0_7 == 4<32> l2301E7DE
l2301E7DE:
	sm_send_next_bss_param(a4_9, 4<32>, mstatus)
	return
mm_bss_param_setting_handler_exit:
l2301E7C6:
	assert_err()


void sm_rsp_timeout_ind_handler(word32 ra, word32 s0, word32 s5, word32 s6, word32 mstatus, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, word32 dwArgB8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] s6:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00B8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sm_rsp_timeout_ind_handler_entry:
l2301E7EA:
	word32 a0_7
	word32 a2_131
	word32 a4_132
	word32 s2_133
	ke_state_get(6<32>, dwArg28, out a0_7, out a2_131, out a4_132, out s2_133)
	branch a0_7 != 5<32> l2301E808
l2301E808:
	word32 a0_16
	word32 a2_134
	word32 a4_135
	word32 s2_136
	ke_state_get(6<32>, dwArg28, out a0_16, out a2_134, out a4_135, out s2_136)
	branch a0_16 == 6<32> l2301E7FA
l2301E814:
l2301E7FA:
	word32 a4_137
	word32 s2_138
	word32 s3_139
	word32 s4_140
	word32 s10_141
	sm_connect_ind(ra, s0, s5, s6, mstatus, dwLoc08, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgB8, dwArg0118, out a4_137, out s2_138, out s3_139, out s4_140, out s10_141)
l2301E800:
	return
sm_rsp_timeout_ind_handler_exit:


void scanu_start_cfm_handler(word32 ra, word32 a3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg5C, word32 dwArgA8, word32 dwArgC8, word32 dwArg0108, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scanu_start_cfm_handler_entry:
l2301E816:
	word32 a0_9
	word32 a2_169
	word32 a4_170
	word32 s2_171
	word32 s1_13 = ke_state_get(6<32>, dwArg18, out a0_9, out a2_169, out a4_170, out s2_171)
	branch a0_9 == 1<32> l2301E842
l2301E842:
	word32 a0_25
	word32 a1_26
	word32 a4_29
	word32 s5_41
	word32 s6_42
	word32 ra_33 = sm_get_bss_params(ra, s1_13, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a3, dwArg10, dwArg14, dwArg5C, dwArgC8, dwArg0178, out a0_25, out a1_26, out a4_29, out s5_41, out s6_42)
	branch a0_25 == 0<32> l2301E860
l2301E84E:
	branch a1_26 == 0<32> l2301E860
l2301E860:
	word32 a4_172
	word32 s2_173
	word32 s3_174
	word32 s4_175
	word32 s10_176
	sm_connect_ind(ra_33, dwArg24, s5_41, s6_42, mstatus, dwLoc18, dwArg20, dwArg24, dwArg48, ra, dwArgA8, dwArg0108, out a4_172, out s2_173, out s3_174, out s4_175, out s10_176)
l2301E852:
	sm_join_bss(ra_33, a0_25, a4_29, mstatus)
l2301E858:
	return
scanu_start_cfm_handler_exit:
l2301E82A:
	assert_err()


void mm_connection_loss_ind_handler(word32 ra, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArgD8, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +00D8:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: s0 sp
mm_connection_loss_ind_handler_entry:
l2301E868:
	word32 a0_15
	word32 s2_20
	word32 a2_133
	word32 a4_134
	ke_state_get(6<32>, dwArg28, out a0_15, out a2_133, out a4_134, out s2_20)
	branch a0_15 != 0<32> l2301E8B0
l2301E880:
	branch CONVERT(Mem11[s2_20 + 0x4201AA3E<32>:byte], byte, word32) != 0<32> l2301E8B0
l2301E89A:
	branch CONVERT(Mem11[s2_20 + 0x4201AA40<32>:byte], byte, word32) == 0<32> l2301E8B0
l2301E8A0:
	word32 a4_36
	word32 s1_135
	word32 a0_136
	word32 a1_137
	word32 a5_138
	word32 s2_139
	word32 s3_140
	word32 s4_141
	ke_state_set(6<32>, 8<32>, mstatus, out s1_135, out a0_136, out a1_137, out a4_36, out a5_138, out s2_139, out s3_140, out s4_141)
	word32 a4_142
	word32 s4_143
	sm_disconnect_process(ra, a4_36, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg68, dwArgD8, dwArg0138, out a4_142, out s4_143)
l2301E8B0:
	0<32> = dwArg38
	return
mm_connection_loss_ind_handler_exit:


void scanu_join_cfm_handler(word32 ra, word32 s3, word32 s4, word32 s5, word32 s6, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg58, word32 dwArg98, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[24..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
scanu_join_cfm_handler_entry:
l2301E8BE:
	word32 s3_12 = Mem11[0x4201BBD8<32>:int32]
	word32 a0_19
	word32 s2_403
	word32 a2_401
	word32 a4_402
	ke_state_get(6<32>, dwArg08, out a0_19, out a2_401, out a4_402, out s2_403)
	byte bLoc21_303 = SLICE(s4, byte, 24)
	branch a0_19 == 2<32> l2301E8FC
l2301E8FC:
	word32 s4_33 = CONVERT(Mem18[s3_12 + 61<i32>:byte], byte, word32)
	branch Mem18[s4_33 + 0x4201ADC8<32>:int32] >= 0<32> l2301E9EA
l2301E9EA:
	word32 a4_41 = CONVERT(Mem18[0x4201BBE8<32>:byte], byte, word32)
	branch a4_41 == 0<32> l2301EA02
l2301EA02:
	word32 a4_442
	word32 s2_443
	word32 s3_444
	word32 s4_445
	word32 s10_446
	sm_connect_ind(ra, 0x4201BBD8<32>, s5, s6, mstatus, dwLoc28, dwArg10, dwArg14, dwArg38, s3, dwArg98, dwArgF8, out a4_442, out s2_443, out s3_444, out s4_445, out s10_446)
l2301E9F0:
	sm_join_bss(ra, s4_33 + 0x4201AD60<32>, a4_41, mstatus)
l2301E920:
	word32 s2_133
	word32 s3_134
	word32 s4_135
	word32 a0_102
	word32 a4_106
	word32 s5_114
	word32 s6_115
	word32 s0_109 = sm_add_chan_ctx(fp + -33<i32>, dwArg58, out a0_102, out a4_106, out s5_114, out s6_115)
	branch a0_102 != 0<32> l2301E9E2
l2301E9E2:
	word32 s10_405
	word32 a4_404
	sm_connect_ind(ra, s0_109, s5_114, s6_115, mstatus, dwLoc28, dwArg10, dwArg14, dwArg38, s3, dwArg98, dwArgF8, out a4_404, out s2_133, out s3_134, out s4_135, out s10_405)
l2301E92A:
	word32 a3_155
	word32 s2_162
	word32 s3_163
	word32 s1_181
	word32 s3_183
	word32 s2_417
	word32 s4_418
	word32 s8_415
	word32 a4_416
	word32 a6_413
	word32 s4_414
	word32 a4_411
	word32 a5_412
	word32 a1_409
	word32 a2_410
	word32 s1_407
	word32 a0_408
	word32 s0_406
	word32 s0_180 = chan_ctxt_link(ke_msg_alloc(ra, 0xA<32>, 0<32>, 32<i32>, a4_106, mstatus, dwLoc18, out s0_406, out s1_407, out a0_408, out a1_409, out a2_410, out a3_155, out a4_411, out a5_412, out a6_413, out s2_162, out s3_163, out s4_414, out s8_415), CONVERT(Mem18[s3_163 + 61<i32>:byte], byte, word32), CONVERT(bLoc21_303, byte, word32), a3_155, s2_162, mstatus, out s1_181, out a4_416, out s2_417, out s3_183, out s4_418)
	Mem190[s0_180 + 17<i32>:byte] = SLICE(CONVERT(Mem18[s3_183 + 61<i32>:byte], byte, word32), byte, 0)
	word32 a3_421
	word32 a4_422
	word32 a5_423
	word32 a6_424
	word32 a7_425
	word32 a1_419
	word32 a2_420
	memcpy(s0_180 + 10<i32>, s1_181 + 888<i32>, 6<32>, out a1_419, out a2_420, out a3_421, out a4_422, out a5_423, out a6_424, out a7_425)
	Mem205[s0_180 + 18<i32>:byte] = 0<8>
	branch (Mem205[s1_181 + 992<i32>:int32] & 2<32>) == 0<32> l2301E99A
l2301E968:
	word32 a5_208 = CONVERT(Mem205[s1_181 + 858<i32>:byte], byte, word32)
	word32 a4_210 = 1<32>
	word32 a5_213 = a5_208 >> 2<i32> & 7<32>
	branch a5_213 <= 2<32> l2301E986
l2301E97C:
	a4_210 = 1<32> << a5_213 + 0xFFFFFFFD<32> & 255<i32>
l2301E986:
	Mem219[s0_180 + 16<i32>:byte] = SLICE(a4_210, byte, 0)
	Mem225[s0_180 + 8<i32>:word16] = SLICE((1<32> << (a5_208 & 3<i32>) + 13<i32>) + 0xFFFFFFFF<32>, word16, 0)
l2301E99A:
	Mem228[s0_180 + 4<i32>:word32] = 0<32>
	word32 s1_426
	word32 a0_427
	word32 a1_428
	word32 a2_429
	word32 a3_430
	word32 a4_431
	word32 a5_432
	word32 s2_433
	word32 s3_434
	word32 s4_435
	word32 s8_436
	ke_msg_send(s0_180, mstatus, out s1_426, out a0_427, out a1_428, out a2_429, out a3_430, out a4_431, out a5_432, out s2_433, out s3_434, out s4_435, out s8_436)
	word32 s1_437
	word32 a0_438
	word32 a1_439
	word32 a4_440
	word32 a5_441
	ke_state_set(6<32>, 3<32>, mstatus, out s1_437, out a0_438, out a1_439, out a4_440, out a5_441, out s2_133, out s3_134, out s4_135)
l2301E9AC:
	word32 a5_269 = s4_135 + 1496<i32> + s2_133
	Mem270[a5_269 + 1476<i32>:word32] = Mem266[s3_134 + 48<i32>:int32]
	branch (Mem270[s3_134 + 48<i32>:int32] & 4<32>) == 0<32> l2301E9D0
l2301E9C6:
	Mem275[a5_269 + 992<i32>:word32] = Mem270[a5_269 + 992<i32>:int32] & 0xFFFFFFF9<32>
l2301E9D0:
	0<32> = dwArg0128
	return
scanu_join_cfm_handler_exit:
l2301E8E4:
	assert_err()


void sm_connect_req_handler(word32 ra, word32 a3, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg8C, word32 dwArgB8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sm_connect_req_handler_entry:
l2301EA0A:
	word32 a0_30
	word32 a4_32
	word32 a2_596
	word32 s2_597
	ke_state_get(6<32>, dwArg08, out a0_30, out a2_596, out a4_32, out s2_597)
	branch a0_30 == 8<32> l2301EB48
l2301EA38:
	word32 a5_103
	word32 a0_45
	word32 s0_53
	word32 s3_56
	word32 s1_598
	word32 a1_599
	word32 a3_601
	word32 a2_600
	word32 a5_603
	word32 a4_602
	word32 s2_605
	word32 a6_604
	word32 s8_607
	word32 s4_606
	word32 ra_52 = ke_msg_alloc(ra, 0x1FFF801<32>, a3, 1<32>, a4_32, mstatus, dwLoc18, out s0_53, out s1_598, out a0_45, out a1_599, out a2_600, out a3_601, out a4_602, out a5_603, out a6_604, out s2_605, out s3_56, out s4_606, out s8_607)
	word32 a0_65
	word32 a4_609
	word32 a2_608
	word32 s2_610
	ke_state_get(6<32>, dwArg08, out a0_65, out a2_608, out a4_609, out s2_610)
	word32 s4_249 = a0_45
	branch a0_65 != 0<32> l2301EBEC
l2301EBEC:
	a5_103 = 8<32>
l2301EA54:
	word32 a3_78 = CONVERT(Mem28[s0_53 + 59<i32>:byte], byte, word32)
	word32 a4_136 = CONVERT(Mem28[s3_56 + 0x4201AA3E<32>:byte], byte, word32)
	branch a4_136 != 0<32> l2301EA7C
l2301EA74:
	a4_136 = CONVERT(Mem28[s3_56 + 0x4201AA40<32>:byte], byte, word32)
	branch a4_136 == 0<32> l2301EB5E
l2301EB5E:
	a4_136 = 2<32>
	branch a3_78 == 2<32> l2301EA82
l2301EB64:
	a4_136 = CONVERT(Mem28[s3_56 + 0x4201AA48<32>:byte], byte, word32)
	branch a4_136 == 255<i32> l2301EB88
l2301EB88:
	branch Mem28[s3_56 + 0x4201AA28<32>:int32] == 0<32> l2301EA82
l2301EB9A:
	assert_err()
l2301EB70:
	assert_err()
l2301EA7C:
	branch a3_78 != 2<32> l2301EBF2
l2301EBF2:
	a5_103 = 9<32>
l2301EA82:
	word32 a5_107 = Mem28[0x4201BBD8<32>:int32]
	branch a5_107 == 0<32> l2301EAA8
l2301EAA8:
	Mem117[s0_53:word32] = Mem28[a5_107 + 4<i32>:word32]
	branch a5_107 == 0<32> l2301EAC6
l2301EAC6:
	word32 a1_622
	word32 a2_623
	word32 a5_625
	word32 a4_624
	word32 a6_626
	word32 s2_627
	word32 s4_629
	word32 s3_628
	word32 a0_140
	word32 a3_143
	word32 s0_148
	word32 s1_149
	word32 s8_630
	word32 ra_147 = ke_msg_alloc(ra_52, 0x1FFF802<32>, a3, 852<i32>, a4_136, mstatus, dwLoc18, out s0_148, out s1_149, out a0_140, out a1_622, out a2_623, out a3_143, out a4_624, out a5_625, out a6_626, out s2_627, out s3_628, out s4_629, out s8_630)
	Mem159[a0_140 + 4<i32>:word32] = s1_149
	Mem163[0x13<32>:word32] = s1_149
	Mem164[s1_149 + 17<i32>:byte] = 0<8>
	word32 a2_631
	word32 a3_170
	word32 s1_174
	word32 s2_177
	word32 a4_632
	word32 a5_633
	word32 a7_634
	word32 s3_635
	word32 s4_636
	word32 s5_637
	word32 s6_638
	word32 s7_639
	word32 s8_640
	word32 s9_641
	word32 s10_642
	word32 s11_643
	word32 t4_644
	word32 a0_165
	word32 a1_168
	word32 ra_173 = printf(ra_147, 0x230788EC<32>, a3_143, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_174, out a0_165, out a1_168, out a2_631, out a3_170, out a4_632, out a5_633, out a7_634, out s2_177, out s3_635, out s4_636, out s5_637, out s6_638, out s7_639, out s8_640, out s9_641, out s10_642, out s11_643, out t4_644)
	branch CONVERT(Mem164[s0_148 + 59<i32>:byte], byte, word32) != 2<32> l2301EBB4
l2301EBB4:
	word32 a4_189 = CONVERT(Mem164[s0_148 + 40<i32>:uint16], uint16, word32)
	branch a4_189 == 0xFFFFFFF<32> l2301EBDC
l2301EBDC:
	word32 s5_660
	word32 s6_661
	ra_173 = sm_get_bss_params(ra_173, s1_174, fp + -40<i32>, fp + -36<i32>, a3_170, dwArg00, dwArg04, dwArg4C, dwArgB8, dwArg0168, out a0_165, out a1_168, out a4_189, out s5_660, out s6_661)
l2301EBC0:
l2301EBCC:
	branch a0_165 == 0<32> l2301EBE6
l2301EBD2:
	branch a1_168 == 0<32> l2301EBE6
l2301EBE6:
	s4_249 = sm_scan_bss(ra_173, a4_189, mstatus, dwArgF8)
l2301EBD4:
	s4_249 = sm_join_bss(ra_173, a0_165, a4_189, mstatus)
l2301EAFC:
	word32 a1_283 = CONVERT(Mem164[s0_148 + 61<i32>:byte], byte, word32)
	Mem285[s1_174 + 17<i32>:byte] = 1<8>
	word32 a1_645
	word32 a2_646
	word32 a3_647
	word32 a4_648
	word32 a5_649
	word32 a6_650
	word32 a7_651
	memcpy(0x4201BBF0<32>, a1_283 + 1552<i32> + s2_177, 6<32>, out a1_645, out a2_646, out a3_647, out a4_648, out a5_649, out a6_650, out a7_651)
	word32 a4_310
	word32 s1_652
	word32 a0_653
	word32 a1_654
	word32 a5_655
	word32 s2_656
	word32 s3_657
	word32 s4_658
	ke_state_set(6<32>, 8<32>, mstatus, out s1_652, out a0_653, out a1_654, out a4_310, out a5_655, out s2_656, out s3_657, out s4_658)
	word32 a4_659
	sm_disconnect_process(ra_173, a4_310, mstatus, s6, dwLoc18, dwLoc08, dwArg08, dwArg48, dwArgB8, dwArg0118, out a4_659, out s4_249)
l2301EB3A:
	a5_103 = 0<32>
l2301EB3E:
	Mem356[s4_249:byte] = SLICE(a5_103, byte, 0)
	word32 s4_620
	word32 s8_621
	word32 s2_618
	word32 s3_619
	word32 a4_616
	word32 a5_617
	word32 a2_614
	word32 a3_615
	word32 a0_612
	word32 a1_613
	word32 s1_611
	ke_msg_send(s4_249, mstatus, out s1_611, out a0_612, out a1_613, out a2_614, out a3_615, out a4_616, out a5_617, out s2_618, out s3_619, out s4_620, out s8_621)
l2301EB48:
	0<32> = dwArg0128
	return
sm_connect_req_handler_exit:
l2301EAAE:
	assert_err()
l2301EA90:
	assert_err()


void rxu_mgt_ind_handler(word32 ra, word32 s0, word32 a1, word32 a3, word32 s5, word32 s6, word32 s7, word32 s9, word32 s10, word32 s11, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rxu_mgt_ind_handler_entry:
l2301EBF8:
	word32 a5_5 = CONVERT(Mem0[a1 + 2<i32>:uint16], uint16, word32)
	branch (a5_5 & 252<i32>) != 176<i32> l2301EC2C
l2301EC2C:
	branch (a5_5 & 252<i32>) != 0x10<32> l2301EC46
l2301EC46:
	branch (a5_5 & 252<i32>) == 48<i32> l2301EC32
l2301EC4E:
	branch (a5_5 & 252<i32>) == 192<i32> l2301EC5E
l2301EC56:
	branch (a5_5 & 252<i32>) != 160<i32> l2301EC22
l2301EC5E:
	word32 a0_21
	word32 s2_26
	word32 a4_349
	word32 a2_348
	ke_state_get(6<32>, dwArg28, out a0_21, out a2_348, out a4_349, out s2_26)
	branch a0_21 != 0<32> l2301EC22
l2301EC66:
l2301EC6E_thunk_sm_deauth_handler:
	sm_deauth_handler(ra, a3, s2_26, s5, s6, mstatus, dwArg08, dwArg18, dwArg20, dwArg24, dwArg48, dwArg50, dwArg54, dwArg58, dwArg78, dwArg9C, dwArgA8, dwArgC8, dwArg0108, dwArg0128)
	return
l2301EC32:
	word32 a0_73
	word32 s2_347
	word32 a4_346
	word32 a2_345
	word32 s1_77 = ke_state_get(6<32>, dwArg28, out a0_73, out a2_345, out a4_346, out s2_347)
	branch a0_73 != 6<32> l2301EC22
l2301EC3E:
	sm_assoc_rsp_handler(ra, a1, s1_77, a1, s7, s9, fflags, frm, mstatus, dwLoc10, s0, dwArg18, dwArg20, dwArg24, dwArg38, dwArg6C, dwArg78, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0188)
l2301EC10:
	word32 a0_122
	word32 s2_344
	word32 a4_343
	word32 a2_342
	word32 s1_126 = ke_state_get(6<32>, dwArg28, out a0_122, out a2_342, out a4_343, out s2_344)
	branch a0_122 != 5<32> l2301EC22
l2301EC1C:
	sm_auth_handler(ra, a1, s1_126, a1, s5, s6, s7, s9, s10, s11, fflags, frm, mstatus, dwLoc10, s0, dwLoc08, dwArg08, dwArg18, dwArg20, dwArg24, dwArg30, dwArg34, dwArg48, dwArg50, dwArg54, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0188)
l2301EC22:
	return
rxu_mgt_ind_handler_exit:


void mm_set_vif_state_cfm_handler(word32 ra, word32 s2, word32 s5, word32 s6, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArgA8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mm_set_vif_state_cfm_handler_entry:
l2301EC72:
	word32 a0_17
	word32 a4_19
	word32 s2_275
	word32 a2_274
	ke_state_get(6<32>, dwArg18, out a0_17, out a2_274, out a4_19, out s2_275)
	branch a0_17 != 7<32> l2301ED52
l2301EC8C:
	word32 a0_40
	word32 s1_49
	word32 a4_280
	word32 a5_281
	word32 a3_279
	word32 a2_278
	word32 a1_277
	word32 s0_276
	word32 a6_282
	word32 s2_283
	word32 s3_284
	word32 s4_285
	word32 s8_286
	word32 ra_107 = ke_msg_alloc(ra, 75<i32>, 0<32>, 6<32>, a4_19, mstatus, dwLoc08, out s0_276, out s1_49, out a0_40, out a1_277, out a2_278, out a3_279, out a4_280, out a5_281, out a6_282, out s2_283, out s3_284, out s4_285, out s8_286)
	Mem59[a0_40 + 4<i32>:byte] = SLICE(CONVERT(Mem16[s1_49 + 58<i32>:byte], byte, word32), byte, 0)
	Mem61[a0_40 + 2<i32>:word16] = SLICE(CONVERT(Mem59[s1_49 + 56<i32>:uint16], uint16, word32), word16, 0)
	Mem63[a0_40:byte] = SLICE(CONVERT(Mem61[s1_49 + 61<i32>:byte], byte, word32), byte, 0)
	word32 s1_71
	word32 s3_73
	word32 s4_74
	word32 a0_287
	word32 a1_288
	word32 a2_289
	word32 a3_290
	word32 a4_291
	word32 a5_292
	word32 s8_293
	word32 s2_129
	word32 s0_127 = ke_msg_send(a0_40, mstatus, out s1_71, out a0_287, out a1_288, out a2_289, out a3_290, out a4_291, out a5_292, out s2_129, out s3_73, out s4_74, out s8_293)
	word32 a5_85 = CONVERT((Mem63[s3_73 + 1476<i32>:int32] & 1<32>) <u 1<i32>, bool, word32)
	Mem88[s4_74 + 0x42019101<32>:byte] = SLICE(a5_85 + 1<32>, byte, 0)
	word32 a3_89 = CONVERT(Mem88[s1_71 + 52<i32>:uint16], uint16, word32)
	Mem93[s4_74 + 0x42019108<32>:word16] = SLICE(a3_89 >>u 8<i32> | a3_89 << 8<u32>, word16, 0)
	branch a5_85 != 0xFFFFFFFF<32> l2301ED34
l2301ED14:
	word32 a0_100
	word32 s1_109
	word32 s0_294
	word32 a1_295
	word32 a2_296
	word32 a3_297
	word32 a4_298
	word32 a5_299
	word32 a6_300
	word32 s2_301
	word32 s3_302
	word32 s4_303
	word32 s8_304
	ra_107 = ke_msg_alloc(ra_107, 0x1000413<32>, 5<32>, 2<32>, 2<32>, mstatus, dwLoc08, out s0_294, out s1_109, out a0_100, out a1_295, out a2_296, out a3_297, out a4_298, out a5_299, out a6_300, out s2_301, out s3_302, out s4_303, out s8_304)
	Mem118[a0_100:byte] = 0<8>
	Mem120[a0_100 + 1<i32>:byte] = SLICE(CONVERT(Mem118[s1_109 + 61<i32>:byte], byte, word32), byte, 0)
	word32 s1_305
	word32 a0_306
	word32 a1_307
	word32 a2_308
	word32 a3_309
	word32 a4_310
	word32 a5_311
	word32 s3_312
	word32 s4_313
	word32 s8_314
	s0_127 = ke_msg_send(a0_100, mstatus, out s1_305, out a0_306, out a1_307, out a2_308, out a3_309, out a4_310, out a5_311, out s2_129, out s3_312, out s4_313, out s8_314)
l2301ED34:
	word32 s0_142 = s0_127 + (s2_129 + 1496<i32>)
	branch (Mem143[s0_142 + 1000<i32>:int32] & 0x12FFF800<32>) != 0<32> l2301ED52
l2301ED4C:
	word32 a4_315
	word32 s2_316
	word32 s3_317
	word32 s4_318
	word32 s10_319
	sm_connect_ind(ra_107, s0_142, s5, s6, mstatus, s2, dwArg20, dwArg24, dwArg48, ra, dwArgA8, dwArg0108, out a4_315, out s2_316, out s3_317, out s4_318, out s10_319)
l2301ED52:
	return
mm_set_vif_state_cfm_handler_exit:


void me_set_active_cfm_handler(word32 ra, word32 a3, word32 s5, word32 s7, word32 s9, word32 s10, word32 s11, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg8C, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
me_set_active_cfm_handler_entry:
l2301ED64:
	word32 a0_7
	word32 s2_295
	word32 a4_294
	word32 a2_293
	ke_state_get(6<32>, dwArg18, out a0_7, out a2_293, out a4_294, out s2_295)
	branch a0_7 == 4<32> l2301ED98
l2301ED74:
	word32 a0_16
	word32 a2_298
	word32 a4_299
	word32 s2_300
	ke_state_get(6<32>, dwArg18, out a0_16, out a2_298, out a4_299, out s2_300)
	branch a0_16 == 8<32> l2301ED98
l2301ED98:
	word32 a0_32
	word32 s2_37
	word32 a4_297
	word32 a2_296
	word32 s1_36 = ke_state_get(6<32>, dwArg18, out a0_32, out a2_296, out a4_297, out s2_37)
	word32 a5_42 = CONVERT(Mem6[0x4201BBE9<32>:byte], byte, word32)
	branch a0_32 != 8<32> l2301EDDA
l2301EDDA:
	branch a5_42 == 0<32> l2301EDE2
l2301EDE2:
	sm_auth_send(ra, 1<32>, 0<32>, s5, fflags, frm, mstatus, dwLoc18, dwArg20, dwArg24, dwArg48, dwArg58, dwArg68, ra, dwArg9C, dwArgA8, dwArgB8, dwArgC4, dwArgD8, dwArgF8, dwArg0108)
l2301EDDC:
	sm_assoc_req_send(ra, 8<32>, s2_37, s7, s9, s10, s11, fflags, frm, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg48, dwArg58, dwArg68, dwArg8C, dwArgA8, dwArgC8, dwArgE8, dwArg0178)
l2301EDB0:
	branch a5_42 == 0<32> l2301EDD0
l2301EDD0:
	word32 s1_301
	word32 a0_302
	word32 a1_303
	word32 a4_304
	word32 a5_305
	word32 s2_306
	word32 s3_307
	word32 s4_308
	ke_state_set(6<32>, 0<32>, mstatus, out s1_301, out a0_302, out a1_303, out a4_304, out a5_305, out s2_306, out s3_307, out s4_308)
l2301EDB2:
	word32 a0_139
	word32 a4_143
	word32 a1_309
	word32 s5_310
	word32 s6_311
	sm_join_bss(sm_get_bss_params(ra, s1_36, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a3, dwArg10, dwArg14, dwArg5C, dwArgC8, dwArg0178, out a0_139, out a1_309, out a4_143, out s5_310, out s6_311), a0_139, a4_143, mstatus)
l2301EDC8:
	return
me_set_active_cfm_handler_exit:
l2301ED80:
	assert_err()


void mm_sta_add_cfm_handler(word32 ra, word32 a1, word32 s2, word32 s5, word32 s6, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArgA8, word32 dwArgD8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mm_sta_add_cfm_handler_entry:
l2301EDEC:
	word32 a0_21
	word32 a2_261
	word32 a4_262
	word32 s2_263
	ke_state_get(6<32>, dwArg18, out a0_21, out a2_261, out a4_262, out s2_263)
	branch a0_21 == 3<32> l2301EE22
l2301EE22:
	branch CONVERT(Mem18[a1:byte], byte, word32) != 0<32> l2301EEDA
l2301EEDA:
	word32 a4_264
	word32 s3_266
	word32 s2_265
	word32 s4_267
	word32 s10_268
	sm_connect_ind(ra, a1, s5, s6, mstatus, s2, dwArg20, dwArg24, dwArg48, ra, dwArgA8, dwArg0108, out a4_264, out s2_265, out s3_266, out s4_267, out s10_268)
l2301EE28:
	word32 s4_66 = CONVERT(Mem18[a1 + 1<i32>:byte], byte, word32)
	word32 s1_77 = CONVERT(Mem18[s4_66 + 0x420190EA<32>:byte], byte, word32)
	word32 a1_269
	word32 a2_270
	word32 a3_271
	word32 a4_272
	word32 a5_273
	word32 a6_274
	word32 a7_275
	memcpy(s4_66 + 0x42019180<32>, s1_77 + 0x4201AD98<32>, 0xD<32>, out a1_269, out a2_270, out a3_271, out a4_272, out a5_273, out a6_274, out a7_275)
	word32 a5_96 = Mem18[s1_77 + 0x4201ADC8<32>:int32]
	word32 a4_140 = a5_96 & 1<i32>
	branch (a5_96 & 1<i32>) == 0<32> l2301EE80
l2301EE74:
	word32 a4_98 = Mem18[s4_66 + 0x420191BC<32>:int32]
	Mem100[s4_66 + 0x420191BC<32>:word32] = a4_98 | 1<i32>
	a4_140 = a4_98 | 1<i32>
l2301EE80:
	branch (a5_96 & 2<32>) == 0<32> l2301EEC2
l2301EE84:
	Mem116[s4_66 + 0x420191BC<32>:word32] = Mem112[s4_66 + 0x420191BC<32>:int32] | 2<i32>
	word32 a1_276
	word32 a2_277
	word32 a3_278
	word32 a4_279
	word32 a5_280
	word32 a6_281
	word32 a7_282
	memcpy(s4_66 + 0x42019190<32>, s1_77 + 0x4201AD40<32>, 32<i32>, out a1_276, out a2_277, out a3_278, out a4_279, out a5_280, out a6_281, out a7_282)
	me_set_sta_ht_vht_param(s4_66 + 0x420190D0<32>, s1_77 + 0x4201AD40<32>, out a4_140)
l2301EEC2:
	sm_set_bss_param(ra, a4_140, mstatus, dwArgD8, dwArg0108)
l2301EEC6:
	return
mm_sta_add_cfm_handler_exit:
l2301EE0A:
	assert_err()


void sm_disconnect_req_handler(word32 ra, word32 a1, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgBC, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
sm_disconnect_req_handler_entry:
l2301EEE2:
	word32 a0_11
	word32 a2_141
	word32 a4_142
	word32 s2_143
	word32 s1_15 = ke_state_get(6<32>, dwArg28, out a0_11, out a2_141, out a4_142, out s2_143)
	branch a0_11 != 0<32> l2301EF10
l2301EEF4:
	word32 a4_35
	word32 s0_144
	word32 s1_145
	word32 a0_146
	word32 a3_147
	word32 s2_148
	word32 s3_149
	word32 s4_150
	word32 s8_151
	ke_msg_send_basic(sm_disconnect(ra, s1_15, CONVERT(Mem8[a1 + 2<i32>:byte], byte, word32), CONVERT(Mem8[a1:uint16], uint16, word32), fflags, frm, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg68, dwArg88, dwArg98, dwArgBC, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out a4_35), 0x1FFF804<32>, 0xD<32>, a4_35, mstatus, dwLoc08, out s0_144, out s1_145, out a0_146, out a3_147, out s2_148, out s3_149, out s4_150, out s8_151)
l2301EF10:
	return
sm_disconnect_req_handler_exit:


void apm_sta_connect_timeout_ind_handler(word32 ra, word32 s1, word32 a3, word32 a4, word32 mstatus, word32 dwArg88, word32 dwArgD8, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0088:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: a7 s7 sp t0 t1
apm_sta_connect_timeout_ind_handler_entry:
l2301EF1A:
	word32 a5_155
	word32 s4_105 = xTaskGetTickCount(out a5_155)
	word32 s1_21 = 0x42018F20<32>
	word32 s0_22 = 0<32>
	word32 s2_106 = 0x7000530<32>
	word32 s3_24 = 0xC<32>
l2301EF40:
	word32 a5_27 = Mem15[s1_21 + 424<i32>:int32]
	branch a5_27 == 0<32> l2301EF54
l2301EF46:
	branch s2_106 >= s4_105 - a5_27 l2301EF54
l2301EF4E:
	ra = apm_sta_fw_delete(ra, a4, mstatus, s1, dwArgD8, out s0_22, out s1_21, out a3, out a4, out s2_106, out s3_24, out s4_105)
l2301EF54:
	word32 s0_60 = s0_22 + 1<32>
	s0_22 = s0_60 & 255<i32>
	s1_21 = s1_21 + 432<i32>
	branch (s0_60 & 255<i32>) != s3_24 l2301EF40
l2301EF62:
	ke_timer_set(ra, 0x1FFFC0A<32>, 7<32>, 0x4C4B40<32>, a3, a4, mstatus, dwLoc08, dwArg88, dwArgE8)
	return
apm_sta_connect_timeout_ind_handler_exit:


void rxu_mgt_ind_handler(word32 ra, word32 a1, word32 s10, word32 fflags, word32 frm, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg18, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rxu_mgt_ind_handler_entry:
l2301EF88:
	word32 a5_7 = CONVERT(Mem5[a1 + 2<i32>:uint16], uint16, word32)
	branch (a5_7 & 252<i32>) != 64<i32> l2301EFAA
l2301EFAA:
	word32 a4_11 = 176<i32>
	branch (a5_7 & 252<i32>) != 176<i32> l2301EFB8
l2301EFB8:
	word32 a1_12 = 0<32>
	branch (a5_7 & 252<i32>) == 0<32> l2301EFC6
l2301EFBC:
	a4_11 = 32<i32>
	branch (a5_7 & 252<i32>) != 32<i32> l2301EFCC
l2301EFCC:
	branch (a5_7 & 252<i32>) != 192<i32> l2301EFDA
l2301EFDA:
	branch (a5_7 & 252<i32>) != 160<i32> l2301EFE8
l2301EFE8:
	branch (a5_7 & 252<i32>) != 128<i32> l2301EFA2
l2301EFF0:
	apm_beacon_handler()
l2301EFE2:
	apm_disassoc_handler(ra, a1, 160<i32>, fflags, frm, mstatus, dwArg28, dwArg58, dwArg64, dwArg78, dwArgA8, dwArgC8, dwArgD4, dwArgDC, dwArgE8, dwArg0108, dwArg0118, dwArg0158)
l2301EFD4:
	apm_deauth_handler(ra, a1, mstatus, dwArg78, dwArgE8)
l2301EFC4:
	a1_12 = 1<32>
l2301EFC6:
	apm_assoc_req_handler(ra, a1, a1_12, a4_11, s10, fflags, frm, mstatus, dwArg04, dwArg18, dwArg48, dwArg68, ra, dwArg7C, dwArg88, dwArgA8, dwArgB8, dwArgF8)
l2301EFB2:
	apm_auth_handler(ra, a1, fflags, frm, mstatus, dwArg00, dwArg28, dwArg68, dwArg78, dwArgA8, dwArgC8, dwArgD4, dwArgD8, dwArgDC, dwArgE8, dwArg0108, dwArg0118, dwArg0158)
l2301EF9E:
	apm_probe_req_handler(ra, a1, fflags, frm, mstatus, dwArg28, dwArg78, dwArgA8, dwArgC8, dwArgD4, dwArgDC, dwArgE8, dwArg0108, dwArg0118, dwArg0158)
l2301EFA2:
	return
rxu_mgt_ind_handler_exit:


void apm_sta_add_cfm_handler(word32 ra, word32 s0, word32 s1, word32 a1, word32 a3, word32 fflags, word32 frm, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
apm_sta_add_cfm_handler_entry:
l2301EFF6:
	word32 a4_5 = Mem0[0x4201B9C4<32>:int32]
	word32 a0_10 = CONVERT(Mem8[a1:byte], byte, word32)
	branch a4_5 == 0<32> l2301F01E
l2301F01E:
	word32 a4_128
	apm_sta_add(ra, a4_5, mstatus, dwLoc08, dwArg28, out a4_128)
l2301F008:
	Mem34[a4_5 + 1<i32>:byte] = SLICE(a0_10, byte, 0)
	SendEAPOLMsgUsingBufDesc(ra, s0, s1, Mem34[0x4201B9C4<32>:int32], a3, fflags, frm, mstatus, dwLoc08, dwArg14, dwArg18, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0148)
l2301F016:
	return
apm_sta_add_cfm_handler_exit:


void apm_sta_del_req_handler(word32 ra, word32 a3, word32 a4, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgB8, word32 dwArgC4, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
apm_sta_del_req_handler_entry:
l2301F024:
	word32 a0_19
	word32 s1_28
	word32 s8_180
	word32 s4_179
	word32 s3_178
	word32 s2_177
	word32 a6_176
	word32 a5_175
	word32 a4_174
	word32 a3_173
	word32 a2_172
	word32 a1_171
	word32 s0_170
	word32 ra_26 = ke_msg_alloc(ra, 0x1FFFC0C<32>, a3, 3<32>, a4, mstatus, dwArg08, out s0_170, out s1_28, out a0_19, out a1_171, out a2_172, out a3_173, out a4_174, out a5_175, out a6_176, out s2_177, out s3_178, out s4_179, out s8_180)
	word32 a0_38 = CONVERT(Mem16[s1_28:byte], byte, word32)
	word32 s0_37 = a0_19
	branch CONVERT(Mem16[a0_38 + 0x4201AA3E<32>:byte], byte, word32) != 2<32> l2301F082
l2301F05E:
	word32 a1_46 = CONVERT(Mem16[s1_28 + 1<i32>:byte], byte, word32)
	branch a1_46 >u 0xC<32> l2301F082
l2301F082:
	Mem50[a0_19:byte] = 0xFF<8>
l2301F068:
	s0_37 = apm_sta_remove(ra_26, a0_38, a1_46, fflags, frm, mstatus, dwArg18, dwArg54, dwArg68, dwArg78, dwArg98, dwArgB8, dwArgC4, dwArgCC, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0148)
	Mem81[s0_37:byte] = 0<8>
l2301F070:
	word32 s1_181
	word32 a0_182
	word32 a1_183
	word32 a2_184
	word32 a3_185
	word32 a4_186
	word32 a5_187
	word32 s2_188
	word32 s3_189
	word32 s4_190
	word32 s8_191
	ke_msg_send(s0_37, mstatus, out s1_181, out a0_182, out a1_183, out a2_184, out a3_185, out a4_186, out a5_187, out s2_188, out s3_189, out s4_190, out s8_191)
	return
apm_sta_del_req_handler_exit:


void apm_stop_cac_req_handler(word32 ra, word32 a1, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg78, word32 dwArgE8, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0078:[0..31] Stack +00E8:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 tp
// Preserved: sp
apm_stop_cac_req_handler_entry:
l2301F08A:
	word32 a4_11 = CONVERT(Mem9[a1:byte], byte, word32)
	word32 s1_13 = a3
	word32 a3_19 = CONVERT(Mem9[a4_11 + 0x4201AA3E<32>:byte], byte, word32)
	word32 a4_20 = 2<32>
	branch a3_19 != 2<32> l2301F0E8
l2301F0B4:
	branch CONVERT(Mem9[a4_11 + 0x4201AA40<32>:byte], byte, word32) != 0<32> l2301F0E8
l2301F0BA:
	word32 a0_26
	word32 a2_133
	word32 s2_134
	s1_13 = ke_state_get(7<32>, dwArg18, out a0_26, out a2_133, out a4_20, out s2_134)
	branch a0_26 != 0<32> l2301F0E8
l2301F0C8:
	word32 a4_40
	word32 s6_135
	word32 s10_136
	ra = chan_ctxt_unlink(ra, a1, CONVERT(Mem24[a1:byte], byte, word32), a3_19, mstatus, dwLoc18, dwArg08, dwArg18, dwArg78, dwArgE8, dwArg0148, out s1_13, out a4_40, out s6_135, out s10_136)
	__csrrc(mstatus, 8<32>)
	Mem62[(a4_40 & 0xFFFFFFEF<32>) + 4<i32>:word32] = Mem24[a4_40 + 4<i32>:word32]
	__csrrs(mstatus, 8<32>)
	a4_20 = a4_40 & 0xFFFFFFEF<32>
l2301F0E8:
	word32 s0_125
	word32 s1_126
	word32 a0_127
	word32 a3_128
	word32 s2_129
	word32 s3_130
	word32 s4_131
	word32 s8_132
	ke_msg_send_basic(ra, 0x1FFFC07<32>, s1_13, a4_20, mstatus, dwLoc18, out s0_125, out s1_126, out a0_127, out a3_128, out s2_129, out s3_130, out s4_131, out s8_132)
	return
apm_stop_cac_req_handler_exit:


void apm_conf_max_sta_req_handler(word32 ra, word32 a1, word32 a3, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
apm_conf_max_sta_req_handler_entry:
l2301F100:
	word32 a4_10 = CONVERT(Mem5[a1:byte], byte, word32)
	branch a4_10 <=u 0xC<32> l2301F114
l2301F112:
	a4_10 = 0xC<32>
l2301F114:
	Mem19[0x4201BC0F<32>:byte] = SLICE(a4_10, byte, 0)
	word32 s0_50
	word32 s1_51
	word32 a0_52
	word32 a3_53
	word32 s2_54
	word32 s3_55
	word32 s4_56
	word32 s8_57
	ke_msg_send_basic(ra, 0x1FFFC0E<32>, a3, a4_10, mstatus, dwLoc08, out s0_50, out s1_51, out a0_52, out a3_53, out s2_54, out s3_55, out s4_56, out s8_57)
	return
apm_conf_max_sta_req_handler_exit:


void apm_start_cac_req_handler(word32 ra, word32 a1, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg78, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0078:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 tp
// Preserved: sp
apm_start_cac_req_handler_entry:
l2301F130:
	word32 a4_15 = CONVERT(Mem13[a1 + 17<i32>:byte], byte, word32)
	word32 s2_17 = a3
	word32 a3_27 = CONVERT(Mem22[a4_15 + 0x4201AA3E<32>:byte], byte, word32)
	word32 a4_103 = 2<32>
	branch a3_27 != 2<32> l2301F16E
l2301F166:
	branch CONVERT(Mem22[a4_15 + 0x4201AA40<32>:byte], byte, word32) == 0<32> l2301F19E
l2301F19E:
	word32 a0_32
	word32 a2_212
	ke_state_get(7<32>, dwArg08, out a0_32, out a2_212, out a4_103, out s2_17)
	branch a0_32 != 0<32> l2301F16C
l2301F1A8:
	word32 a0_51
	word32 s1_213
	word32 s3_214
	word32 s5_215
	word32 s6_216
	word32 s0_56 = chan_ctxt_add(fp + -44<i32>, fp + -45<i32>, a4_103, dwArg78, out s1_213, out a0_51, out a4_103, out s2_17, out s3_214, out s5_215, out s6_216)
	branch a0_51 != 0<32> l2301F200
l2301F200:
l2301F1DA:
	word32 a4_75
	word32 s1_217
	word32 s3_218
	word32 s4_219
	chan_ctxt_link(ra, CONVERT(Mem50[s0_56 + 17<i32>:byte], byte, word32), 0<32>, a3_27, s2_17, mstatus, out s1_217, out a4_75, out s2_17, out s3_218, out s4_219)
	__csrrc(mstatus, 8<32>)
	Mem88[(a4_75 | 16<i32>) + 4<i32>:word32] = Mem50[a4_75 + 4<i32>:word32]
	__csrrs(mstatus, 8<32>)
	a4_103 = a4_75 | 16<i32>
l2301F16C:
l2301F16E:
	word32 a0_109
	word32 s1_118
	word32 s3_198
	word32 s4_199
	word32 a6_196
	word32 s2_197
	word32 a4_194
	word32 a5_195
	word32 a2_192
	word32 a3_193
	word32 s0_190
	word32 a1_191
	word32 s8_200
	ke_msg_alloc(ra, 0x1FFFC05<32>, s2_17, 2<32>, a4_103, mstatus, dwLoc18, out s0_190, out s1_118, out a0_109, out a1_191, out a2_192, out a3_193, out a4_194, out a5_195, out a6_196, out s2_197, out s3_198, out s4_199, out s8_200)
	Mem127[a0_109:byte] = SLICE(s1_118, byte, 0)
	Mem129[a0_109 + 1<i32>:byte] = 0<8>
	word32 s1_201
	word32 a0_202
	word32 a1_203
	word32 a2_204
	word32 a3_205
	word32 a4_206
	word32 a5_207
	word32 s2_208
	word32 s3_209
	word32 s4_210
	word32 s8_211
	ke_msg_send(a0_109, mstatus, out s1_201, out a0_202, out a1_203, out a2_204, out a3_205, out a4_206, out a5_207, out s2_208, out s3_209, out s4_210, out s8_211)
	0<32> = dwArg0128
	return
apm_start_cac_req_handler_exit:


void me_set_ps_disable_cfm_handler(word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
me_set_ps_disable_cfm_handler_entry:
l2301F204:
	word32 a0_7
	word32 s2_98
	word32 a4_97
	word32 a2_96
	ke_state_get(7<32>, dwArg28, out a0_7, out a2_96, out a4_97, out s2_98)
	branch a0_7 == 1<32> l2301F234
l2301F214:
	word32 a0_16
	word32 s2_103
	word32 a4_102
	word32 a2_101
	ke_state_get(7<32>, dwArg28, out a0_16, out a2_101, out a4_102, out s2_103)
	branch a0_16 == 0<32> l2301F234
l2301F234:
	word32 a0_31
	word32 a4_33
	word32 s2_100
	word32 a2_99
	ke_state_get(7<32>, dwArg28, out a0_31, out a2_99, out a4_33, out s2_100)
	branch a0_31 != 1<32> l2301F244
l2301F240:
	apm_send_next_bss_param(a4_33, 1<32>, mstatus)
l2301F244:
	return
me_set_ps_disable_cfm_handler_exit:
l2301F21C:
	assert_err()


void mm_bss_param_setting_handler(word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mm_bss_param_setting_handler_entry:
l2301F24C:
	word32 a0_7
	word32 a4_9
	word32 a2_42
	word32 s2_43
	ke_state_get(7<32>, dwArg28, out a0_7, out a2_42, out a4_9, out s2_43)
	branch a0_7 == 1<32> l2301F274
l2301F274:
	apm_send_next_bss_param(a4_9, 1<32>, mstatus)
	return
mm_bss_param_setting_handler_exit:
l2301F25C:
	assert_err()


void mm_bcn_change_cfm_handler(word32 ra, word32 mstatus, word32 dwArg28, word32 dwArg68, word32 dwArgC8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 tp
// Preserved: sp
mm_bcn_change_cfm_handler_entry:
l2301F280:
	word32 a0_7
	word32 a4_9
	word32 a2_51
	word32 s2_52
	ke_state_get(7<32>, dwArg28, out a0_7, out a2_51, out a4_9, out s2_52)
	branch a0_7 == 2<32> l2301F2A8
l2301F2A8:
	apm_start_cfm(ra, 0<32>, a4_9, mstatus, dwArg68, dwArgC8, dwArg0118)
	return
mm_bcn_change_cfm_handler_exit:
l2301F290:
	assert_err()


void apm_stop_req_handler(word32 ra, word32 s1, word32 a1, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
apm_stop_req_handler_entry:
l2301F2B6:
	word32 s0_15 = CONVERT(Mem13[a1:byte], byte, word32)
	word32 s2_108 = a3
	word32 a4_113 = 2<32>
	branch CONVERT(Mem13[s0_15 + 0x4201AA3E<32>:byte], byte, word32) != 2<32> l2301F334
l2301F2E6:
	branch CONVERT(Mem13[s0_15 + 0x4201AA40<32>:byte], byte, word32) == 0<32> l2301F334
l2301F2EC:
	word32 a0_30
	word32 a2_232
	word32 a4_233
	word32 s2_234
	ke_state_get(7<32>, dwArg18, out a0_30, out a2_232, out a4_233, out s2_234)
	branch a0_30 != 0<32> l2301F344
l2301F2FA:
	word32 a4_40 = CONVERT(Mem13[0x4201BC0C<32>:byte], byte, word32)
	branch a4_40 == 0<32> l2301F30C
l2301F308:
	Mem41[0x4201BC0C<32>:byte] = 0<8>
l2301F30C:
	word32 s0_62
	ra = apm_stop(ra, a4_40, mstatus, s2, dwLoc08, dwArg08, dwArg18, s1, dwArgD8, dwArgE8, dwArg0138, out s0_62, out a4_113, out s2_108)
	word32 a0_72 = Mem53[s0_62 + -1596<i32>:int32]
	branch a0_72 == 0<32> l2301F334
l2301F324:
	Mem104[cm_DeleteConnection(Mem53[s0_62 + -1596<i32>:int32], RemoveAPKeyInfo(a0_72, dwArgF8, out s2_108), mstatus, dwLoc10, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a4_113) + 2500<i32>:word32] = 0<32>
l2301F334:
	word32 s0_224
	word32 s1_225
	word32 a0_226
	word32 a3_227
	word32 s2_228
	word32 s3_229
	word32 s4_230
	word32 s8_231
	ke_msg_send_basic(ra, 0x1FFFC03<32>, s2_108, a4_113, mstatus, s2, out s0_224, out s1_225, out a0_226, out a3_227, out s2_228, out s3_229, out s4_230, out s8_231)
l2301F344:
	return
apm_stop_req_handler_exit:


void apm_start_req_handler(word32 ra, word32 s1, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 s6, word32 s8, word32 s9, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg1C, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg78, word32 dwArg7C, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0164, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s6:[0..31] s8:[8..15] s9:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0164:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
apm_start_req_handler_entry:
l2301F354:
	word32 a3_42
	word32 s10_940
	word32 s11_941
	word32 t4_942
	word32 s3_933
	word32 s9_939
	word32 s4_934
	word32 s5_935
	word32 s8_938
	word32 s6_936
	word32 s7_937
	word32 s2_932
	word32 a1_927
	word32 a2_928
	word32 a7_931
	word32 a4_929
	word32 a5_930
	word32 s1_925
	word32 a0_926
	word32 ra_368 = printf(ra, 0x23078A2C<32>, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_925, out a0_926, out a1_927, out a2_928, out a3_42, out a4_929, out a5_930, out a7_931, out s2_932, out s3_933, out s4_934, out s5_935, out s6_936, out s7_937, out s8_938, out s9_939, out s10_940, out s11_941, out t4_942)
	byte bLoc33_692 = SLICE(s8, byte, 8)
	branch CONVERT(Mem34[CONVERT(Mem34[a1 + 51<i32>:byte], byte, word32) + 0x4201AA3E<32>:byte], byte, word32) != 2<32> l2301F66E
l2301F3AC:
	word32 a0_69
	word32 a2_70
	word32 s2_982
	word32 a4_981
	word32 s1_73 = ke_state_get(7<32>, dwLoc08, out a0_69, out a2_70, out a4_981, out s2_982)
	branch a0_69 != 0<32> l2301F66C
l2301F66C:
l2301F3B6:
	word32 a5_77 = CONVERT(Mem34[s1_73 + 88<i32>:byte], byte, word32)
	branch a5_77 != 0<32> l2301F6A6
l2301F6A6:
l2301F3BE:
	branch a5_77 == 0<32> l2301F3DE
l2301F3DE:
	word32 a4_86 = CONVERT(Mem34[a1 + 28<i32>:byte], byte, word32)
	Mem92[0x4201CBF8<32>:word32] = Mem34[a2_70 + 20<i32>:word32]
	word32 a0_93
	word32 s2_101
	word32 s3_102
	word32 s6_105
	word32 s0_99 = me_add_chan_ctx(fp + -51<i32>, a4_86, s9, out a0_93, out s2_101, out s3_102, out s6_105)
	branch a0_93 != 0<32> l2301F66E
l2301F66E:
	word32 a4_126
	word32 s5_135
	word32 a0_149
	word32 s0_157
	word32 s4_161
	word32 s8_969
	word32 a2_962
	word32 s3_968
	word32 a3_963
	word32 a4_964
	word32 s2_967
	word32 a5_965
	word32 a6_966
	word32 s8_955
	word32 a1_961
	word32 s9_956
	word32 s10_957
	word32 s1_960
	word32 s11_958
	word32 t4_959
	word32 s3_951
	word32 s7_954
	word32 s4_952
	word32 s6_953
	word32 a3_947
	word32 s2_950
	word32 a5_948
	word32 a7_949
	word32 a2_946
	word32 a1_945
	word32 s1_943
	word32 a0_944
	ke_msg_alloc(printf(ra_368, 0x23078A94<32>, a3_42, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_943, out a0_944, out a1_945, out a2_946, out a3_947, out a4_126, out a5_948, out a7_949, out s2_950, out s3_951, out s4_952, out s5_135, out s6_953, out s7_954, out s8_955, out s9_956, out s10_957, out s11_958, out t4_959), 0x1FFFC01<32>, s5_135, 4<32>, a4_126, mstatus, s2, out s0_157, out s1_960, out a0_149, out a1_961, out a2_962, out a3_963, out a4_964, out a5_965, out a6_966, out s2_967, out s3_968, out s4_161, out s8_969)
	Mem167[a0_149:byte] = SLICE(s4_161, byte, 0)
	Mem169[a0_149 + 1<i32>:byte] = SLICE(CONVERT(Mem167[s0_157 + 51<i32>:byte], byte, word32), byte, 0)
	word32 s8_980
	word32 s3_978
	word32 s4_979
	word32 a5_976
	word32 s2_977
	word32 a4_975
	word32 s1_970
	word32 a0_971
	word32 a3_974
	word32 a1_972
	word32 a2_973
	ke_msg_send(a0_149, mstatus, out s1_970, out a0_971, out a1_972, out a2_973, out a3_974, out a4_975, out a5_976, out s2_977, out s3_978, out s4_979, out s8_980)
l2301F404:
	word32 a3_189
	word32 a0_188 = me_freq_to_chan_ptr(CONVERT(Mem92[s0_99 + 16<i32>:byte], byte, word32), CONVERT(Mem92[s0_99 + 14<i32>:uint16], uint16, word32), out a3_189)
	word32 a5_194 = s3_102 + 1496<i32> + s2_101
	Mem195[a5_194 + 932<i32>:word32] = a0_188
	word32 a4_196 = CONVERT(Mem195[s0_99 + 18<i32>:int8], int8, int32)
	Mem197[a0_188 + 4<i32>:byte] = SLICE(a4_196, byte, 0)
	Mem199[a5_194 + 936<i32>:word16] = SLICE(a4_196, word16, 0)
	word32 s0_200 = Mem199[a4_196 + 24<i32>:word32]
	Mem201[a5_194 + 938<i32>:word16] = SLICE(a4_196, word16, 0)
	word32 a5_202 = CONVERT(Mem201[s0_200 + 28<i32>:byte], byte, word32)
	branch a5_202 != 4<32> l2301F43E
l2301F43C:
	a5_202 = 3<32>
l2301F43E:
	word32 s5_212 = s2_101 + (s3_102 + 1496<i32>)
	Mem214[s5_212 + 986<i32>:byte] = SLICE(a5_202, byte, 0)
	word32 a5_216 = CONVERT(Mem214[s0_200 + 28<i32>:byte], byte, word32)
	Mem217[s5_212 + 988<i32>:byte] = 0<8>
	Mem218[s5_212 + 987<i32>:byte] = SLICE(a5_216, byte, 0)
	word32 s3_233
	word32 a4_984
	word32 s1_983
	word32 s4_234
	word32 s2_232
	word32 s0_230 = chan_ctxt_link(ra_368, CONVERT(Mem218[s0_200 + 51<i32>:byte], byte, word32), CONVERT(bLoc33_692, byte, word32), a3_189, s2_101, mstatus, out s1_983, out a4_984, out s2_232, out s3_233, out s4_234)
	Mem240[s6_105 + -1012<i32>:byte] = SLICE(CONVERT(Mem218[s0_230 + 52<i32>:byte], byte, word32), byte, 0)
	Mem242[s6_105 + -1011<i32>:byte] = SLICE(CONVERT(Mem240[s0_230 + 29<i32>:byte], byte, word32), byte, 0)
	word32 a4_245
	branch apm_embedded_enabled(s5_212, out a4_245) == 0<32> l2301F5D6
l2301F480:
	me_get_basic_rates(s0_230 + 53<i32>, s0_230)
	branch CONVERT(Mem242[s0_230 + 67<i32>:byte], byte, word32) == 0<32> l2301F49E
l2301F492:
	Mem256[s5_212 + 992<i32>:word32] = Mem242[s5_212 + 992<i32>:int32] | 1<i32>
l2301F49E:
	branch CONVERT(Mem258[0x4201B002<32>:byte], byte, word32) == 0<32> l2301F4BE
l2301F4A8:
	word32 a5_264 = s3_233 + 1496<i32> + s2_232
	Mem267[a5_264 + 992<i32>:word32] = Mem258[a5_264 + 992<i32>:int32] | 2<i32>
l2301F4BE:
	word32 s1_278 = s2_232 + (s3_233 + 1496<i32>)
	Mem279[s1_278 + 1042<i32>:word16] = SLICE(CONVERT(Mem273[s0_230 + 40<i32>:uint16], uint16, word32), word16, 0)
	Mem282[s1_278 + 940<i32>:word16] = SLICE(CONVERT(Mem279[s0_230 + 66<i32>:byte], byte, word32), word16, 0)
	Mem284[s1_278 + 1048<i32>:byte] = SLICE(CONVERT(Mem282[s0_230 + 102<i32>:byte], byte, word32), byte, 0)
	word32 a5_1022
	word32 a6_1023
	word32 a7_1024
	word32 a2_1019
	word32 a3_1020
	word32 a4_1021
	word32 a1_1018
	memcpy(s1_278 + 894<i32>, s0_230 + 68<i32>, 34<i32>, out a1_1018, out a2_1019, out a3_1020, out a4_1021, out a5_1022, out a6_1023, out a7_1024)
	word32 a5_303 = CONVERT(Mem284[s1_278 + 894<i32>:byte], byte, word32) + s1_278
	Mem304[a5_303 + 895<i32>:byte] = 0<8>
	word32 s1_305 = Mem304[a5_303 + 80<i32>:word32]
	Mem307[s1_305 + 888<i32>:word32] = a5_303
	Mem309[s1_305 + 892<i32>:word16] = SLICE(CONVERT(Mem307[s1_305 + 84<i32>:uint16], uint16, word32), word16, 0)
	word32 a3_315
	word32 a5_1028
	word32 a6_1029
	word32 a7_1030
	word32 a1_1025
	word32 a2_1026
	word32 a4_1027
	memcpy(s1_305 + 944<i32>, s0_230 + 53<i32>, 0xD<32>, out a1_1025, out a2_1026, out a3_315, out a4_1027, out a5_1028, out a6_1029, out a7_1030)
	Mem326[Mem309[0x44B00200<32>:int32] + 8<i32>:word32] = s1_305
	Mem328[Mem326[0x44B00204<32>:int32] + 12<i32>:word32] = s1_305
	word32 a4_329 = Mem328[0x44B00208<32>:int32]
	Mem330[a4_329 + 16<i32>:word32] = s1_305
	word32 a5_331 = Mem330[0x44B0020C<32>:int32]
	Mem332[s1_305 + 960<i32>:byte] = 0<8>
	Mem333[a5_331 + 20<i32>:word32] = s1_305
	Mem338[s3_233 + 0x4201ADFC<32>:word32] = 0xF0000000<32>
	word32 a0_343
	word32 a5_1031
	word32 s2_1032
	word32 a1_349 = CONVERT(Mem338[ke_malloc(333<i32>, a3_315, a4_329, mstatus, dwLoc08, out a0_343, out a5_1031, out s2_1032) + 87<i32>:byte], byte, word32)
	Mem355[s6_105 + -1016<i32>:word32] = a0_343
	word32 a0_360
	ra_368 = me_build_beacon(ra_368, a0_343, a1_349, s0_230 + 38<i32>, s0_230 + 50<i32>, s5_212, dwLoc20, dwLoc1C, dwArg2C, s3, out s0_230, out a0_360, out a4_245, out s2_232, out s4_234)
	word32 a5_385 = CONVERT(Mem355[s0_230 + 102<i32>:byte], byte, word32)
	Mem386[s0_230 + 36<i32>:word16] = SLICE(a0_360, word16, 0)
	branch a5_385 == 0<32> l2301F654
l2301F654:
	Mem388[0x4201C9C4<32>:word32] = 0<32>
l2301F576:
	word32 s0_404
	word32 s1_405
	word32 s2_406
	word32 a0_419
	word32 ra_412 = cm_InitConnection(ra_368, s4_234 + 888<i32> + s2_232, 0<32>, 0<32>, mstatus, s6, s4, s2, dwLoc20, dwLoc1C, dwArg1C, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s0_404, out s1_405, out a0_419, out s2_406)
	Mem423[s1_405 + 2500<i32>:word32] = a0_419
	word32 s6_420 = s4_234 + 895<i32> + s2_406
	word32 s1_427 = ap_setpsk(a0_419, s6_420, s0_404 + 103<i32>)
	word32 a3_447
	s0_230 = cm_SetComData(Mem423[s1_427 + -1596<i32>:int32], s6_420, out a3_447)
	Mem464[Mem423[s1_427 + -1596<i32>:int32] + 2<i32>:byte] = SLICE(CONVERT(Mem423[s0_230 + 51<i32>:byte], byte, word32), byte, 0)
	word32 s1_477
	word32 s11_1049
	word32 t4_1050
	word32 s8_1046
	word32 s9_1047
	word32 s10_1048
	word32 s5_1043
	word32 s6_1044
	word32 s7_1045
	word32 s2_1040
	word32 s3_1041
	word32 s4_1042
	word32 a4_1037
	word32 a5_1038
	word32 a7_1039
	word32 a1_1034
	word32 a2_1035
	word32 a3_1036
	word32 a0_1033
	ra_368 = InitGroupKey(printf(ra_412, 0x23078A4C<32>, a3_447, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_477, out a0_1033, out a1_1034, out a2_1035, out a3_1036, out a4_1037, out a5_1038, out a7_1039, out s2_1040, out s3_1041, out s4_1042, out s5_1043, out s6_1044, out s7_1045, out s8_1046, out s9_1047, out s10_1048, out s11_1049, out t4_1050), s1_477, Mem464[s1_477 + -1596<i32>:int32], mstatus, dwLoc38, dwLoc20, dwLoc1C, dwLoc18, dwArg08, dwArg2C, s9, s1, dwArg78, dwArg7C, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArg0108, dwArg0164, out a4_245, out s2_232, out s4_234)
l2301F5D6:
	branch CONVERT(Mem519[s0_230 + 16<i32>:byte], byte, word32) != 0<32> l2301F604
l2301F5DC:
	word32 a0_527
	word32 s2_535
	word32 s3_536
	word32 s8_1016
	word32 s5_1013
	word32 s6_1014
	word32 s7_1015
	word32 s1_1010
	word32 a4_1011
	word32 s4_1012
	me_legacy_rate_bitfield_build(s4_234 + 944<i32> + s2_232, 1<32>, dwArgE8, out s1_1010, out a0_527, out a4_1011, out s2_535, out s3_536, out s4_1012, out s5_1013, out s6_1014, out s7_1015, out s8_1016)
	branch (a0_527 & 0xF<32>) == 0<32> l2301F65A
l2301F65A:
	Mem549[s3_536 + 1496<i32> + s2_535 + 983<i32>:byte] = 1<8>
	a4_245 = 1<32>
l2301F5EC:
	word32 a4_1017
	Mem558[s3_536 + 1496<i32> + s2_535 + 983<i32>:byte] = SLICE(0x1F<32> - __clzsi2(a0_527 & 0xF<32>, out a4_1017), byte, 0)
	a4_245 = 0x1F<32>
l2301F604:
	word32 a3_570
	word32 s5_581
	word32 s3_986
	word32 s2_985
	word32 ra_575 = apm_set_bss_param(ra_368, a4_245, mstatus, dwArgB8, dwArgE8, out a3_570, out s2_985, out s3_986, out s5_581)
	word32 a3_618
	word32 s2_989
	word32 s3_990
	word32 a4_988
	word32 s1_987
	tpc_update_vif_tx_power(ra_575, s5_581, fp + -50<i32>, fp + -49<i32>, a3_570, fflags, frm, out s1_987, out a3_618, out a4_988, out s2_989, out s3_990)
	word32 s10_1007
	word32 s11_1008
	word32 t4_1009
	word32 s7_1004
	word32 s8_1005
	word32 s9_1006
	word32 s4_1001
	word32 s5_1002
	word32 s6_1003
	word32 a7_998
	word32 s2_999
	word32 s3_1000
	word32 a3_995
	word32 a4_996
	word32 a5_997
	word32 s1_991
	word32 a2_994
	word32 a0_992
	word32 a1_993
	printf(ra_575, 0x23078A70<32>, a3_618, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_991, out a0_992, out a1_993, out a2_994, out a3_995, out a4_996, out a5_997, out a7_998, out s2_999, out s3_1000, out s4_1001, out s5_1002, out s6_1003, out s7_1004, out s8_1005, out s9_1006, out s10_1007, out s11_1008, out t4_1009)
l2301F63A:
	0<32> = dwArg0198
	return
apm_start_req_handler_exit:
l2301F3C6:
	assert_err()


void me_set_active_cfm_handler(word32 ra, word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
me_set_active_cfm_handler_entry:
l2301F6AA:
	word32 a0_7
	word32 s2_134
	word32 a4_133
	word32 a2_132
	ke_state_get(7<32>, dwArg28, out a0_7, out a2_132, out a4_133, out s2_134)
	branch a0_7 == 1<32> l2301F6DA
l2301F6BA:
	word32 a0_16
	word32 s2_139
	word32 a4_138
	word32 a2_137
	ke_state_get(7<32>, dwArg28, out a0_16, out a2_137, out a4_138, out s2_139)
	branch a0_16 == 0<32> l2301F6DA
l2301F6DA:
	word32 a0_31
	word32 a4_33
	word32 s2_136
	word32 a2_135
	ke_state_get(7<32>, dwArg28, out a0_31, out a2_135, out a4_33, out s2_136)
	branch a0_31 != 1<32> l2301F70C
l2301F6E6:
	branch Mem6[0x4201BBFC<32>:int32] == 0<32> l2301F708
l2301F708:
	apm_bcn_set(ra, a4_33, mstatus, dwLoc08, dwArg28)
l2301F70C:
	return
me_set_active_cfm_handler_exit:
l2301F6F0:
	assert_err()
l2301F6C2:
	assert_err()


void hostapd_mgt_ind_handler(word32 a1, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 s1 s2 tp
// Preserved: sp
hostapd_mgt_ind_handler_entry:
l2301F714:
	word32 a5_5 = CONVERT(Mem0[a1 + 2<i32>:uint16], uint16, word32)
	branch (a5_5 & 252<i32>) != 64<i32> l2301F736
l2301F736:
	branch (a5_5 & 252<i32>) == 176<i32> l2301F724
l2301F73E:
	return
l2301F724:
	word32 a0_43
	word32 a2_44
	word32 a4_45
	word32 s2_46
	ke_state_get(0xA<32>, dwArg28, out a0_43, out a2_44, out a4_45, out s2_46)
	return
hostapd_mgt_ind_handler_exit:


word32 dump_cfg_entries(word32 ra, word32 s1, word32 a3, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArg0198, ptr32 & s1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cfg_start_req_handler
// MayUse:  a3:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +0198:[0..31]
// LiveOut: a4 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t3 t4 tp
// Preserved: s8 sp
dump_cfg_entries_entry:
l2301F742:
	word32 s0_183 = 0x2308E3E0<32>
	word32 a0_325
	word32 a1_326
	word32 a2_327
	word32 a4_328
	word32 a5_329
	word32 s4_330
	word32 s8_331
	word32 s1_240 = puts(0x23078BB8<32>, out a0_325, out a1_326, out a2_327, out a4_328, out a5_329, out s4_330, out s8_331) + 1076<i32>
	word32 s2_222 = 0x23079000<32>
l2301F790:
	branch s0_183 <u s1_240 l2301F7B8
l2301F7B8:
	word32 a1_59
	word32 a3_61
	word32 s3_69
	word32 s1_332
	word32 a0_333
	word32 a2_334
	word32 a4_335
	word32 a5_336
	word32 a7_337
	word32 s2_338
	word32 s4_339
	word32 s5_340
	word32 s6_341
	word32 s7_342
	word32 s8_343
	word32 s9_344
	word32 s10_345
	word32 s11_346
	word32 t4_347
	word32 ra_64 = printf(ra, s2_222 + -1048<i32>, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_332, out a0_333, out a1_59, out a2_334, out a3_61, out a4_335, out a5_336, out a7_337, out s2_338, out s3_69, out s4_339, out s5_340, out s6_341, out s7_342, out s8_343, out s9_344, out s10_345, out s11_346, out t4_347)
	word32 s0_78 = Mem27[a1_59:word32]
	word32 a3_86
	word32 s4_95
	word32 a3_110
	word32 s5_120
	word32 a3_134
	word32 s6_145
	word32 a3_158
	word32 s7_170
	word32 a3_191
	word32 s8_204
	word32 s1_348
	word32 a0_349
	word32 a1_350
	word32 a2_351
	word32 a4_352
	word32 a5_353
	word32 a7_354
	word32 s2_355
	word32 s3_356
	word32 s5_357
	word32 s6_358
	word32 s7_359
	word32 s8_360
	word32 s9_361
	word32 s10_362
	word32 s11_363
	word32 t4_364
	word32 s1_365
	word32 a0_366
	word32 a1_367
	word32 a2_368
	word32 a4_369
	word32 a5_370
	word32 a7_371
	word32 s2_372
	word32 s3_373
	word32 s4_374
	word32 s6_375
	word32 s7_376
	word32 s8_377
	word32 s9_378
	word32 s10_379
	word32 s11_380
	word32 t4_381
	word32 s1_382
	word32 a0_383
	word32 a1_384
	word32 a2_385
	word32 a4_386
	word32 a5_387
	word32 a7_388
	word32 s2_389
	word32 s3_390
	word32 s4_391
	word32 s5_392
	word32 s7_393
	word32 s8_394
	word32 s9_395
	word32 s10_396
	word32 s11_397
	word32 t4_398
	word32 s1_399
	word32 a0_400
	word32 a1_401
	word32 a2_402
	word32 a4_403
	word32 a5_404
	word32 a7_405
	word32 s2_406
	word32 s3_407
	word32 s4_408
	word32 s5_409
	word32 s6_410
	word32 s8_411
	word32 s9_412
	word32 s10_413
	word32 s11_414
	word32 t4_415
	word32 s1_416
	word32 a0_417
	word32 a1_418
	word32 a2_419
	word32 a4_420
	word32 a5_421
	word32 a7_422
	word32 s2_423
	word32 s3_424
	word32 s4_425
	word32 s5_426
	word32 s6_427
	word32 s7_428
	word32 s9_429
	word32 s10_430
	word32 s11_431
	word32 t4_432
	word32 s1_433
	word32 a0_434
	word32 a1_435
	word32 a2_436
	word32 a4_437
	word32 a5_438
	word32 a7_439
	word32 s3_440
	word32 s4_441
	word32 s5_442
	word32 s6_443
	word32 s7_444
	word32 s8_445
	word32 s9_446
	word32 s10_447
	word32 s11_448
	word32 t4_449
	ra = printf(printf(cfg_api_element_dump(printf(printf(printf(printf(ra_64, s3_69 + -1036<i32>, a3_61, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_348, out a0_349, out a1_350, out a2_351, out a3_86, out a4_352, out a5_353, out a7_354, out s2_355, out s3_356, out s4_95, out s5_357, out s6_358, out s7_359, out s8_360, out s9_361, out s10_362, out s11_363, out t4_364), s4_95 + -1016<i32>, a3_86, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_365, out a0_366, out a1_367, out a2_368, out a3_110, out a4_369, out a5_370, out a7_371, out s2_372, out s3_373, out s4_374, out s5_120, out s6_375, out s7_376, out s8_377, out s9_378, out s10_379, out s11_380, out t4_381), s5_120 + -996<i32>, a3_110, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_382, out a0_383, out a1_384, out a2_385, out a3_134, out a4_386, out a5_387, out a7_388, out s2_389, out s3_390, out s4_391, out s5_392, out s6_145, out s7_393, out s8_394, out s9_395, out s10_396, out s11_397, out t4_398), s6_145 + -976<i32>, a3_134, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_399, out a0_400, out a1_401, out a2_402, out a3_158, out a4_403, out a5_404, out a7_405, out s2_406, out s3_407, out s4_408, out s5_409, out s6_410, out s7_170, out s8_411, out s9_412, out s10_413, out s11_414, out t4_415), s0_78 + 0x1C<32>, CONVERT(Mem27[s0_78 + 6<32>:byte], byte, word32), fp + -64<i32>, out s0_183), s7_170 + -956<i32>, a3_158, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_416, out a0_417, out a1_418, out a2_419, out a3_191, out a4_420, out a5_421, out a7_422, out s2_423, out s3_424, out s4_425, out s5_426, out s6_427, out s7_428, out s8_204, out s9_429, out s10_430, out s11_431, out t4_432), s8_204 + -936<i32>, a3_191, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_433, out a0_434, out a1_435, out a2_436, out a3, out a4_437, out a5_438, out a7_439, out s2_222, out s3_440, out s4_441, out s5_442, out s6_443, out s7_444, out s8_445, out s9_446, out s10_447, out s11_448, out t4_449)
	word32 a0_450
	word32 a1_451
	word32 a2_452
	word32 a4_453
	word32 a5_454
	word32 s4_455
	word32 s8_456
	s1_240 = puts(0x2307E7F8<32>, out a0_450, out a1_451, out a2_452, out a4_453, out a5_454, out s4_455, out s8_456)
l2301F794:
	word32 a4_251
	word32 a0_457
	word32 a1_458
	word32 a2_459
	word32 a5_460
	word32 s4_461
	word32 s8_462
	word32 s1_252 = puts(0x2307EF64<32>, out a0_457, out a1_458, out a2_459, out a4_251, out a5_460, out s4_461, out s8_462)
	0<32> = dwArg0198
	s1Out = s1_252
	a4Out = a4_251
	return ra
dump_cfg_entries_exit:


void cfg_start_req_handler(word32 ra, word32 a3, word32 a5, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg5C, word32 dwArg78, word32 dwArg9C, word32 dwArg0108, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0108:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
cfg_start_req_handler_entry:
l2301F822:
	word32 a4_116
	word32 a1_13 = Mem11[a5:word32]
	word32 s1_109 = a3
	branch a5 == 0<32> l2301F85E
l2301F85E:
	utils_tlv_bl_unpack_auto(Mem11[a1_13 + 16<i32>:word32], CONVERT(Mem11[a1_13 + 12<i32>:uint16], uint16, word32), fp + 0xFFFFFFEC<32>)
	word32 a0_29
	word32 a5_30
	word32 a1_32
	word32 a2_33
	word32 s6_45
	word32 s1_203
	word32 a3_204
	word32 a4_205
	word32 a7_206
	word32 s2_207
	word32 s3_208
	word32 s4_209
	word32 s5_210
	word32 s7_211
	word32 s8_212
	word32 s9_213
	word32 s10_214
	word32 s11_215
	word32 t4_216
	ra = cfg_api_element_set(printf(ra, 0x23078B94<32>, fp + 0xFFFFFFEC<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_203, out a0_29, out a1_32, out a2_33, out a3_204, out a4_205, out a5_30, out a7_206, out s2_207, out s3_208, out s4_209, out s5_210, out s6_45, out s7_211, out s8_212, out s9_213, out s10_214, out s11_215, out t4_216), a0_29, a1_32, a2_33, fp + 0xFFFFFFEC<32>, 0<32>, a5_30, s6_45, dwArg20, dwArg24, dwArg48, ra, dwArg0108, out s1_109, out a4_116)
l2301F834:
	a4_116 = 2<32>
	branch a5 >u 2<32> l2301F890
l2301F890:
	ra = dump_cfg_entries(ra, a3, a3, dwArg10, dwArg14, dwArg5C, dwArg0178, out s1_109, out a4_116)
l2301F83A:
	word32 a0_119
	word32 s0_217
	word32 s1_218
	word32 a1_219
	word32 a2_220
	word32 a3_221
	word32 a4_222
	word32 a5_223
	word32 a6_224
	word32 s2_225
	word32 s3_226
	word32 s4_227
	word32 s8_228
	ke_msg_alloc(ra, 0x3000001<32>, s1_109, 1<32>, a4_116, mstatus, dwLoc08, out s0_217, out s1_218, out a0_119, out a1_219, out a2_220, out a3_221, out a4_222, out a5_223, out a6_224, out s2_225, out s3_226, out s4_227, out s8_228)
	Mem137[a0_119:byte] = 0<8>
	word32 s1_229
	word32 a0_230
	word32 a1_231
	word32 a2_232
	word32 a3_233
	word32 a4_234
	word32 a5_235
	word32 s2_236
	word32 s3_237
	word32 s4_238
	word32 s8_239
	ke_msg_send(a0_119, mstatus, out s1_229, out a0_230, out a1_231, out a2_232, out a3_233, out a4_234, out a5_235, out s2_236, out s3_237, out s4_238, out s8_239)
	return
cfg_start_req_handler_exit:


word32 dbg_init(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_init
// MayUse:  ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
dbg_init_entry:
l2301F896:
	word32 t1_32
	word32 a0_33
	word32 a1_34
	word32 a2_35
	word32 a3_36
	word32 a4_37
	word32 a5_38
	word32 ra_18 = memset(ra, 0x4201D5A4<32>, 0<32>, 8<32>, out t1_32, out a0_33, out a1_34, out a2_35, out a3_36, out a4_37, out a5_38)
	Mem23[0xFFFFFFFF<32>:word32] = 0x4201D5A4<32>
	Mem25[6<32>:word32] = 0x4201D5A4<32>
	return ra_18
dbg_init_exit:


word32 dbg_test_print(word32 a0, word32 dwArg0178, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GetTxEAPOLBuffer
//      UpdateEAPOLWcbLenAndTransmit
//      keyMgmtProcessMsgExt
//      KeyMgmtInitSta
//      keyMgmtSta_StartSession
//      init_customApp_mibs
//      supplicantIsEnabled
//      supplicantInitSession
//      supplicantDisable
//      supplicantEnable
//      keyMgmtFormatWpaRsnIe
//      GeneratePWKMsg2
//      KeyMgmtStaHsk_Recvd_PWKMsg1
//      supplicantInit
//      keyMgmtGetKeySize
//      keyMgmtKeyGroupTxDone.isra.1
//      GenerateGrpMsg2
//      KeyMgmtStaHsk_Recvd_GrpMsg1
//      keyMgmtPlumbPairwiseKey
//      keyMgmtKeyPairwiseTxDone.isra.2
//      GeneratePWKMsg4
//      KeyMgmtStaHsk_Recvd_PWKMsg3
//      ProcessKeyMgmtDataSta
//      ProcessEAPoLPkt
//      keyMgmtStaRsnSecuredTimeoutHandler
//      supplicantGenerateRand
//      isApReplayCounterFresh
//      updateApReplayCounter
//      formEAPOLEthHdr
//      IsEAPOL_MICValid
//      KeyMgmtSta_PopulateEAPOLLengthMic
//      parseKeyKDE
//      parseKeyKDE_DataType
//      parseKeyDataGTK
//      KeyMgmtSta_ApplyKEK
//      KeyMgmtSta_IsRxEAPOLValid
//      KeyMgmtSta_PrepareEAPOLFrame
//      supplicantAkmIsWpaWpa2
//      supplicantAkmIsWpa2
//      supplicantAkmIsWpaWpa2Psk
//      supplicantAkmUsesKdf
//      supplicantConstructContext
//      KeyMgmt_DerivePTK
//      KeyMgmtSta_DeriveKeys
//      SetEAPOLKeyDescTypeVersion
//      GetKeyMsgNonceFromEAPOL
//      ProcessRxEAPOL_PwkMsg3
//      ProcessRxEAPOL_GrpMsg1
//      KeyMgmtResetCounter
//      keyMgmtSta_StartSession_internal
//      KeyMgmtSta_InitSession
//      set_psk
//      remove_psk
//      pmkCacheFindPSK
//      pmkCacheSetPassphrase
//      pmkCacheInit
//      pmkCacheRomInit
//      pmkCacheNewElement
//      pmkCacheUpdateReplacementRank
//      pmkCacheFindPSKElement
//      pmkCacheAddPSK
//      pmkCacheDeletePSK
//      pmkCacheGetHexNibble
//      pmkCacheGeneratePSK
//      bl_init
//      supplicantRestoreDefaults
//      supplicantFuncInit
// MayUse:  a0:[0..31] Stack +0178:[0..31]
// LiveOut: a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8
// Trashed: a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
dbg_test_print_entry:
l2301F8C0:
	word32 s1_156 = 0x4201D000<32>
	word32 a5_155 = Mem36[0x4201D5A8<32>:word32]
	branch a5_155 == 0<32> l2301F918
l2301F8EE:
	s2 = a0
	s1_156 = 0x4201D5A4<32>
	s3 = a0 + 2<i32>
	s5 = 5<32>
	s6 = 0x23074000<32>
	s7 = 0x23079000<32>
l2301F906:
	word32 s0_49 = CONVERT(Mem36[s2:byte], byte, word32)
	branch CONVERT(SLICE(s0_49, byte, 0), byte, int32) < 0<32> l2301F92E
l2301F92E:
	branch s0_49 >u 135<i32> l2301F94C
l2301F94C:
	a5_155 = s0_49 + 102<i32> & 255<i32>
	branch a5_155 <=u 5<32> l2301F968
l2301F968:
	s1_156 = Mem36[a5_155 + 4<i32>:word32]
	branch s0_49 + -154<i32> <u a5_155 l2301F944
l2301F972:
l2301F958:
	assert_err()
l2301F932:
	a5_155 = ~CONVERT(SLICE(s0_49, byte, 0), byte, int32)
	s1_156 = Mem36[CONVERT(SLICE(s0_49, byte, 0), byte, int32):word32]
	branch (a5_155 >>u s0_49 + -128<i32> & 1<32>) != 0<32> l2301F918
l2301F944:
	s2 = s2 + 1<32>
	branch a0 + 2<i32> != s2 l2301F906
l2301F94A:
l2301F914:
	a5_155 = fp + -28<i32>
l2301F918:
	0<32> = dwArg0178
	s1Out = s1_156
	a2Out = dwArg0118
	a5Out = a5_155
	a6Out = dwArgF8
	s2Out = s2
	s3Out = s3
	s4Out = dwArgD4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArgB4
	return dwArg0138
dbg_test_print_exit:


void dbg_get_sys_stat_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
dbg_get_sys_stat_req_handler_entry:
l2301F974:
	word32 a0_12
	word32 s0_54
	word32 s1_55
	word32 a1_56
	word32 a2_57
	word32 a3_58
	word32 a4_59
	word32 a5_60
	word32 a6_61
	word32 s2_62
	word32 s3_63
	word32 s4_64
	word32 s8_65
	ke_msg_alloc(ra, 1034<i32>, a3, 0xC<32>, a4, mstatus, dwArg08, out s0_54, out s1_55, out a0_12, out a1_56, out a2_57, out a3_58, out a4_59, out a5_60, out a6_61, out s2_62, out s3_63, out s4_64, out s8_65)
	Mem30[a0_12:word32] = 0<32>
	Mem31[a0_12 + 4<i32>:word32] = 0<32>
	Mem32[a0_12 + 8<i32>:word32] = 0<32>
	word32 s1_66
	word32 a0_67
	word32 a1_68
	word32 a2_69
	word32 a3_70
	word32 a4_71
	word32 a5_72
	word32 s2_73
	word32 s3_74
	word32 s4_75
	word32 s8_76
	ke_msg_send(a0_12, mstatus, out s1_66, out a0_67, out a1_68, out a2_69, out a3_70, out a4_71, out a5_72, out s2_73, out s3_74, out s4_75, out s8_76)
	return
dbg_get_sys_stat_req_handler_exit:


void dbg_mem_write_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
dbg_mem_write_req_handler_entry:
l2301F99C:
	word32 a0_16
	word32 a3_19
	word32 a4_20
	word32 s0_64
	word32 s1_65
	word32 a1_66
	word32 a2_67
	word32 a5_68
	word32 a6_69
	word32 s2_70
	word32 s3_71
	word32 s4_72
	word32 s8_73
	ke_msg_alloc(ra, 1027<i32>, a3, 8<32>, a4, mstatus, dwArg08, out s0_64, out s1_65, out a0_16, out a1_66, out a2_67, out a3_19, out a4_20, out a5_68, out a6_69, out s2_70, out s3_71, out s4_72, out s8_73)
	Mem36[a3_19:word32] = a4_20
	Mem38[a4_20:word32] = a0_16
	Mem40[Mem38[a4_20:word32] + 4<i32>:word32] = a0_16
	word32 s1_74
	word32 a0_75
	word32 a1_76
	word32 a2_77
	word32 a3_78
	word32 a4_79
	word32 a5_80
	word32 s2_81
	word32 s3_82
	word32 s4_83
	word32 s8_84
	ke_msg_send(a0_16, mstatus, out s1_74, out a0_75, out a1_76, out a2_77, out a3_78, out a4_79, out a5_80, out s2_81, out s3_82, out s4_83, out s8_84)
	return
dbg_mem_write_req_handler_exit:


void dbg_mem_read_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
dbg_mem_read_req_handler_entry:
l2301F9CC:
	word32 a0_16
	word32 a4_20
	word32 s0_62
	word32 s1_63
	word32 a1_64
	word32 a2_65
	word32 a3_66
	word32 a5_67
	word32 a6_68
	word32 s2_69
	word32 s3_70
	word32 s4_71
	word32 s8_72
	ke_msg_alloc(ra, 1025<i32>, a3, 8<32>, a4, mstatus, dwArg08, out s0_62, out s1_63, out a0_16, out a1_64, out a2_65, out a3_66, out a4_20, out a5_67, out a6_68, out s2_69, out s3_70, out s4_71, out s8_72)
	word32 a4_35 = Mem13[a4_20:word32]
	Mem36[a4_35 + 4<i32>:word32] = a0_16
	Mem38[a4_35:word32] = a0_16
	word32 s1_73
	word32 a0_74
	word32 a1_75
	word32 a2_76
	word32 a3_77
	word32 a4_78
	word32 a5_79
	word32 s2_80
	word32 s3_81
	word32 s4_82
	word32 s8_83
	ke_msg_send(a0_16, mstatus, out s1_73, out a0_74, out a1_75, out a2_76, out a3_77, out a4_78, out a5_79, out s2_80, out s3_81, out s4_82, out s8_83)
	return
dbg_mem_read_req_handler_exit:


void dbg_set_sev_filter_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
dbg_set_sev_filter_req_handler_entry:
l2301F9F8:
	Mem12[0x4201D5A8<32>:word32] = a4
	word32 s0_38
	word32 s1_39
	word32 a0_40
	word32 a3_41
	word32 s2_42
	word32 s3_43
	word32 s4_44
	word32 s8_45
	ke_msg_send_basic(ra, 1031<i32>, a3, a4, mstatus, dwLoc08, out s0_38, out s1_39, out a0_40, out a3_41, out s2_42, out s3_43, out s4_44, out s8_45)
	return
dbg_set_sev_filter_req_handler_exit:


void dbg_set_mod_filter_req_handler(word32 ra, word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
dbg_set_mod_filter_req_handler_entry:
l2301FA18:
	Mem12[0x4201D5A4<32>:word32] = a4
	word32 s0_38
	word32 s1_39
	word32 a0_40
	word32 a3_41
	word32 s2_42
	word32 s3_43
	word32 s4_44
	word32 s8_45
	ke_msg_send_basic(ra, 1029<i32>, a3, a4, mstatus, dwLoc08, out s0_38, out s1_39, out a0_40, out a3_41, out s2_42, out s3_43, out s4_44, out s8_45)
	return
dbg_set_mod_filter_req_handler_exit:


word32 ke_queue_extract(word32 ra, word32 s0, word32 a1, word32 a2, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_back_to_host_idle
//      ke_timer_set
//      ke_timer_clear
// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] Stack +0128:[0..31]
// LiveOut: a0 ra s0 s1 s2
// Trashed: a0 a1 a2 a5 ra s0 s1 s2 s3 t3 tp
// Preserved: sp
ke_queue_extract_entry:
l2301FA38:
	word32 sp_23 = fp + -48<i32>
	word32 s2_15 = Mem13[s0:word32]
	word32 s3_17 = a1
	word32 s1_18 = 0<32>
l2301FA4C:
	word32 a2_42
	branch s0 == 0<32> l2301FA68
l2301FA4E:
	Mem24[sp_23 + 132<i32>:word32] = a2
	word32 a0_35
	word32 a5_38
	call s3_17 (retsize: 0;)
		uses: a0:s0_19,a1:a2_20,a2:a2_42,a5:a5_38,ra:ra_28,s0:s0_19,s1:s1_26,s2:s2_27,s3:s3_25
		defs: a0:a0_35,a5:a5_38,ra:ra_33,s1:s1_30,s2:s2_31,s3:s3_32,sp:sp_29
	word32 s0_41 = Mem24[a5_38:word32]
	a2_42 = Mem24[sp_23 + 132<i32>:word32]
	branch a0_35 == 0<32> l2301FA84
l2301FA84:
	s1_18 = s0_41
	s0 = a5_38
	a2 = a2_42
l2301FA5C:
	branch s1_18 == 0<32> l2301FA78
l2301FA78:
	Mem45[s2_15:word32] = a5_38
l2301FA5E:
	Mem46[a5_38:word32] = s1_18
l2301FA60:
	s0 = Mem48[a5_38:word32]
	branch a5_38 == 0<32> l2301FA7E
l2301FA7E:
	Mem52[s2_15 + 4<i32>:word32] = s1_18
l2301FA64:
	Mem53[s0:word32] = 0<32>
l2301FA68:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_18
	a0Out = s0
	s2Out = s2_15
	return ra
ke_queue_extract_exit:


word32 bl_aes_128(word32 a0, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      generate_subkey
//      bl_aes_cmac
// MayUse:  a0:[0..31]
// LiveOut: s10 s2 s3 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bl_aes_128_entry:
l2301FA8A:
l2301FA90_thunk_BL_AesEncrypt:
	word32 s10_17
	word32 s3_19
	word32 s4_20
	word32 s7_23
	word32 s5_38
	word32 s6_39
	word32 s8_40
	word32 s2_18 = BL_AesEncrypt(a0, 2<32>, out s3_19, out s4_20, out s5_38, out s6_39, out s7_23, out s8_40, out s10_17)
	s3Out = s3_19
	s4Out = s4_20
	s7Out = s7_23
	s10Out = s10_17
	return s2_18
bl_aes_128_exit:


void xor_128(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      generate_subkey
//      bl_aes_cmac
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a3 a4 a5 a6 a7
// Preserved: sp
xor_128_entry:
l2301FA92:
	word32 a5_15 = 0<32>
l2301FA96:
	Mem17[a2 + a5_15:byte] = SLICE(CONVERT(Mem10[a0 + a5_15:byte], byte, word32) ^ CONVERT(Mem10[a1 + a5_15:byte], byte, word32), byte, 0)
	a5_15 = a5_15 + 1<32>
	branch a5_15 != 0x10<32> l2301FA96
l2301FAB8:
	return
xor_128_exit:


void leftshift_onebit(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      generate_subkey
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5 a6 a7
// Preserved: sp
leftshift_onebit_entry:
l2301FABA:
	word32 a5_15 = 0<32>
	word32 a4_13 = 0xF<32>
l2301FAC0:
	word32 a2_8 = a0 + a4_13
	Mem17[a1 + a4_13:byte] = SLICE(a5_15 | CONVERT(Mem9[a2_8:byte], byte, word32) << 1<i32>, byte, 0)
	a4_13 = a4_13 + 0xFFFFFFFF<32>
	a5_15 = CONVERT(Mem17[a2_8:byte], byte, word32) >>u 7<i32>
	branch a4_13 != 0xFFFFFFFF<32> l2301FAC0
l2301FAE0:
	return
leftshift_onebit_exit:


word32 generate_subkey(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_aes_cmac
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: ra s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
generate_subkey_entry:
l2301FAE2:
	word32 a4_185
	word32 a5_186
	word32 a2_183
	word32 a3_184
	word32 a0_181
	word32 a1_182
	word32 t1_180
	word32 ra_27 = memset(ra, fp + -48<i32>, 0<32>, 0x10<32>, out t1_180, out a0_181, out a1_182, out a2_183, out a3_184, out a4_185, out a5_186)
	word32 s7_189
	word32 s10_190
	word32 s3_187
	word32 s4_188
	word32 s2_42 = bl_aes_128(a0, out s3_187, out s4_188, out s7_189, out s10_190)
	branch CONVERT(bLoc40, int8, int32) < 0<32> l2301FB32
l2301FB32:
	leftshift_onebit(fp + -64<i32>, fp + -32<i32>)
	xor_128(fp + -32<i32>, 0x23078CC4<32>, a1)
l2301FB0E:
	leftshift_onebit(fp + -64<i32>, a1)
l2301FB16:
	branch CONVERT(Mem20[a1:int8], int8, int32) < 0<32> l2301FB4C
l2301FB4C:
	leftshift_onebit(a1, fp + -32<i32>)
	xor_128(fp + -32<i32>, 0x23078CC4<32>, a2)
l2301FB1E:
	leftshift_onebit(a1, a2)
l2301FB26:
	s1Out = a2
	s2Out = s2_42
	s4Out = dwArgF4
	return ra_27
generate_subkey_exit:


void padding(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_aes_cmac
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a3 a4 a5 a6 a7
// Preserved: sp t1
padding_entry:
l2301FB66:
	word32 a5_24 = 0<32>
	word32 a3_6 = a1 + a2
l2301FB72:
	branch a5_24 >= a2 l2301FB8E
l2301FB8E:
	branch a2 != a5_24 l2301FB98
l2301FB98:
	Mem13[a1 + a5_24:byte] = 0<8>
l2301FB92:
	Mem16[a3_6:byte] = 0x80<8>
l2301FB76:
	Mem22[a1 + a5_24:byte] = SLICE(CONVERT(Mem19[a0 + a5_24:byte], byte, word32), byte, 0)
l2301FB86:
	a5_24 = a5_24 + 1<32>
	branch a5_24 != 0x10<32> l2301FB72
l2301FB8C:
	return
padding_exit:


word32 bl_aes_cmac(word32 ra, word32 a0, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ComputeEAPOL_MIC
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: ra s1 s10 s2 s3 s4 s5 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bl_aes_cmac_entry:
l2301FBA2:
	word32 a1_75
	word32 a0_76
	word32 s1_35
	word32 s2_113
	word32 s4_123
	word32 ra_33 = generate_subkey(ra, a0, fp + -64<i32>, fp + -48<i32>, out s1_35, out s2_113, out s4_123)
	word32 s0_106 = s1_35 + 15<i32> ^ 0x10<32>
	branch s0_106 == 0<32> l2301FC32
l2301FC32:
	s0_106 = 1<32>
l2301FBCC:
	branch (s1_35 & 15<i32>) != 0<32> l2301FC34
l2301FC34:
	padding((s0_106 + -1<i32> << 4<i32>) + s2_113, fp + -80<i32>, s1_35 | 0x10<32>)
	a1_75 = fp + -48<i32>
	a0_76 = fp + -80<i32>
l2301FBD2:
	a1_75 = fp + -64<i32>
	a0_76 = (s0_106 + -1<i32> << 4<i32>) + s2_113
l2301FBDE:
	xor_128(a0_76, a1_75, fp + -96<i32>)
	word32 a3_282
	word32 a1_280
	word32 a0_279
	word32 t1_278
	word32 a5_284
	word32 a4_283
	word32 a2_281
	word32 ra_102 = memset(ra_33, fp + -128<i32>, 0<32>, 0x10<32>, out t1_278, out a0_279, out a1_280, out a2_281, out a3_282, out a4_283, out a5_284)
	word32 s1_105 = 0<32>
	word32 s0_107 = s0_106 + 0xFFFFFFFF<32>
l2301FBF0:
	branch s1_105 < s0_107 l2301FC50
l2301FC50:
	xor_128(fp + -128<i32>, (s1_105 << 4<u32>) + s2_113, fp + -112<i32>)
	word32 s10_277
	word32 s7_276
	word32 s3_275
	s2_113 = bl_aes_128(s4_123, out s3_275, out s4_123, out s7_276, out s10_277)
	s1_105 = s1_105 + 1<32>
l2301FBF4:
	xor_128(fp + -128<i32>, fp + -96<i32>, fp + -112<i32>)
	word32 s10_170
	word32 s3_172
	word32 s4_173
	word32 s7_176
	word32 s2_171 = bl_aes_128(s4_123, out s3_172, out s4_173, out s7_176, out s10_170)
	word32 a5_187 = 0<32>
l2301FC0C:
	Mem197[s3_172 + a5_187:byte] = SLICE(CONVERT(Mem192[fp + -128<i32> + a5_187:byte], byte, word32), byte, 0)
	a5_187 = a5_187 + 1<32>
	branch a5_187 != 0x10<32> l2301FC0C
l2301FC22:
	s1Out = dwArg0118
	s2Out = s2_171
	s3Out = s3_172
	s4Out = s4_173
	s5Out = dwArgB4
	s7Out = s7_176
	s9Out = dwArg94
	s10Out = s10_170
	return ra_102
bl_aes_cmac_exit:


word32 BL_AES_MEMCMP(word32 a0, word32 a1, word32 a2, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      BL_AesUnWrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a2 a3 a4 a5 a6
// Preserved: sp
BL_AES_MEMCMP_entry:
l2301FC6C:
	word32 a5_18 = 0<32>
	a2_15 = a2
l2301FC70:
	word32 a2_15
	branch a2 != a5_18 l2301FC7E
l2301FC7E:
	a3 = CONVERT(Mem0[a0 + a5_18:byte], byte, word32)
	branch a3 != CONVERT(Mem0[a1 + a5_18:byte], byte, word32) l2301FC94
l2301FC92:
	a2_15 = a2_15 + 0xFFFFFFFF<32>
l2301FC94:
	a5_18 = a5_18 + 1<32>
l2301FC74:
	a3Out = a3
	return 0<32> - CONVERT(a2_15 != 0<32>, bool, word32)
BL_AES_MEMCMP_exit:


void BL_AES_MEMSET(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      BL_AesWrap
//      BL_AesUnWrap
// MayUse:  a0:[0..31] a1:[0..7] a2:[0..31]
// LiveOut:
// Trashed: a0 a2
// Preserved: sp
BL_AES_MEMSET_entry:
l2301FC98:
	word32 a2_5 = a2 + a0
l2301FC9A:
	branch a0 != a2_5 l2301FCA0
l2301FCA0:
	a0 = a0 + 1<32>
	Mem10[a0 + 4095<i32>:byte] = SLICE(a1, byte, 0)
l2301FC9E:
	return
BL_AES_MEMSET_exit:


void BL_AES_MEMCPY(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      BL_AesWrap
//      BL_AesUnWrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5
// Preserved: sp
BL_AES_MEMCPY_entry:
l2301FCA8:
	branch a0 >=u a1 l2301FCDA
l2301FCDA:
	a2 = a2 + 0xFFFFFFFF<32>
	branch a2 != 0xFFFFFFFF<32> l2301FCCA
l2301FCCA:
	Mem15[a0 + a2:byte] = SLICE(CONVERT(Mem11[a1 + a2:byte], byte, word32), byte, 0)
l2301FCE0:
	return
l2301FCAE:
	word32 a5_16 = 0<32>
l2301FCB0:
	branch a5_16 != a2 l2301FCB6
l2301FCB6:
	Mem26[a0 + a5_16:byte] = SLICE(CONVERT(Mem21[a1 + a5_16:byte], byte, word32), byte, 0)
	a5_16 = a5_16 + 1<32>
l2301FCB4:
	return
BL_AES_MEMCPY_exit:


word32 BL_AesEncrypt(word32 a0, word32 a1, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_aes_128
//      BL_AesWrap
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: s10 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 sp
BL_AesEncrypt_entry:
l2301FCE2:
	word32 s1_29
	word32 s10_49
	word32 s3_51
	word32 s4_52
	word32 s5_53
	word32 s6_54
	word32 s7_55
	word32 s8_56
	word32 s2_84
	word32 s3_85
	word32 s2_50 = rijndael_encrypt(rijndael_set_key(fp + -416<i32>, a0, a1 << 6<u32>, 1<32>, out s1_29, out s2_84, out s3_85), s1_29, dwLoc0164, dwLocBC, dwLoc58, out s3_51, out s4_52, out s5_53, out s6_54, out s7_55, out s8_56, out s10_49)
	s3Out = s3_51
	s4Out = s4_52
	s5Out = s5_53
	s6Out = s6_54
	s7Out = s7_55
	s8Out = s8_56
	s10Out = s10_49
	return s2_50
BL_AesEncrypt_exit:


word32 BL_AesWrap(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, ptr32 & s0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Encrypt_keyData
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: ra s0 s10 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
BL_AesWrap_entry:
l2301FD1E:
	branch a2 == 0<32> l2301FDFE
l2301FDFE:
	s0Out = s0
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s10Out = s10
	return ra
l2301FD22:
	BL_AES_MEMSET(fp + -64<i32>, 0<32>, 0x10<32>)
	word32 s7_110 = a1
	word32 s6_109 = a0
	word32 s2_105 = a5
	word32 a1_44 = a4
	branch a4 != 0<32> l2301FD60
l2301FD58:
	a1_44 = 0x2308DE40<32>
l2301FD60:
	BL_AES_MEMCPY(fp + -72<i32>, a1_44, 8<32>)
	BL_AES_MEMCPY(a5 + 8<i32>, a3, a2 << 3<u32>)
	word32 s8_111 = a2 & 255<i32>
	word32 s3_106 = 0<32>
	word32 s5_108 = 6<32>
l2301FD7C:
	word32 s1_136 = 1<32>
l2301FDC4:
	word32 s4_73 = (s1_136 << 3<u32>) + s2_105
	branch s1_136 != a2 + 1<32> l2301FD80
l2301FD80:
	BL_AES_MEMCPY(fp + -64<i32>, fp + -72<i32>, 8<32>)
	BL_AES_MEMCPY(fp + -56<i32>, s4_73, 8<32>)
	word32 s4_107
	s2_105 = BL_AesEncrypt(s6_109, s7_110, out s3_106, out s4_107, out s5_108, out s6_109, out s7_110, out s8_111, out s10)
	BL_AES_MEMCPY(fp + -72<i32>, fp + -64<i32>, 8<32>)
	BL_AES_MEMCPY(s4_107, fp + -56<i32>, 8<32>)
	s1_136 = s1_136 + 1<32>
l2301FDCE:
	s5_108 = s5_108 + 0xFFFFFFFF<32>
	s3_106 = s3_106 + s8_111 & 255<i32>
	branch s5_108 != 0<32> l2301FD7C
l2301FDDA:
	BL_AES_MEMCPY(s2_105, fp + -72<i32>, 8<32>)
	s0Out = dwArgCC
	s2Out = s2_105
	s3Out = s3_106
	s5Out = s5_108
	s10Out = s10
	return dwLoc08
BL_AesWrap_exit:


word32 BL_AesUnWrap(word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmtSta_ApplyKEK
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut: a3 s10 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 sp
BL_AesUnWrap_entry:
l2301FE02:
	branch a2 == 0<32> l2301FF2A
l2301FF2A:
	s9Out = s9
	s10Out = s10
	return a3
l2301FE06:
	BL_AES_MEMSET(fp + -472<i32>, 0<32>, 8<32>)
	BL_AES_MEMSET(fp + -464<i32>, 0<32>, 0x10<32>)
	BL_AES_MEMCPY(fp + -472<i32>, a3, 8<32>)
	BL_AES_MEMCPY(a5, a3 + 8<i32>, a2 << 3<u32>)
	word32 s3_129
	word32 s2_128
	word32 s1_126
	rijndael_set_key(fp + -448<i32>, a0, a1 << 6<u32>, 0<32>, out s1_126, out s2_128, out s3_129)
	word32 s6_132 = 6<32>
l2301FE88:
	word32 s4_159 = s2_128
	word32 s5_104 = s1_126
l2301FE8C:
	branch s4_159 > 0<32> l2301FEE4
l2301FEE4:
	BL_AES_MEMCPY(fp + -464<i32>, fp + -472<i32>, 8<32>)
	BL_AES_MEMCPY(fp + -456<i32>, s5_104, 8<32>)
	word32 s4_130
	word32 s5_131
	s1_126 = rijndael_decrypt(fp + -464<i32>, fp + -464<i32>, dwLoc01A4, dwLocFC, dwLoc98, out s2_128, out s3_129, out s4_130, out s5_131, out s6_132, out s9, out s10)
	BL_AES_MEMCPY(fp + -472<i32>, fp + -464<i32>, 8<32>)
	BL_AES_MEMCPY(s5_131, fp + -456<i32>, 8<32>)
	s5_104 = s5_131 + 0xFFFFFFF8<32>
	s4_159 = s4_130 + 0xFFFFFFFF<32>
l2301FE90:
	s6_132 = s6_132 + 0xFFFFFFFF<32>
	branch s6_132 != 0<32> l2301FE88
l2301FE9E:
	word32 a0_171 = s3_129
	branch s3_129 != 0<32> l2301FEB0
l2301FEA8:
	a0_171 = 0x2308DE40<32>
l2301FEB0:
	word32 a3_179
	BL_AES_MEMCMP(a0_171, fp + -472<i32>, 8<32>, out a3_179)
	s9Out = s9
	s10Out = s10
	return a3_179
BL_AesUnWrap_exit:


void Bl_hmac_md5(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ComputeEAPOL_MIC
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s8 t0 t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
Bl_hmac_md5_entry:
l2301FF2E:
	word32 s1_26 = a2
	word32 s3_28 = a3
	branch a3 <= 64<i32> l2301FF80
l2301FF64:
	word32 s2_399
	word32 s3_400
	word32 s4_401
	word32 s1_397
	word32 a5_398
	wpa_MD5Update(ra, a2, a3, wpa_MD5Init(fp + -584<i32>), dwLoc0234, dwLoc0208, dwLoc01B8, dwLoc0128, out s1_397, out a5_398, out s2_399, out s3_400, out s4_401)
	word32 s1_402
	word32 s2_403
	word32 s3_404
	ra = wpa_MD5Final(ra, fp + -584<i32>, dwLoc0228, dwLoc01D8, dwLoc0148, out s1_402, out s2_403, out s3_404)
	s3_28 = 0x10<32>
	s1_26 = fp + -280<i32>
l2301FF80:
	word32 a5_390
	word32 a2_387
	word32 a3_388
	word32 a4_389
	word32 t1_384
	word32 a0_385
	word32 a1_386
	word32 ra_92 = memset(ra, fp + -432<i32>, 0<32>, 64<i32>, out t1_384, out a0_385, out a1_386, out a2_387, out a3_388, out a4_389, out a5_390)
	word32 a7_396
	word32 a3_393
	word32 a5_394
	word32 a6_395
	word32 a1_391
	word32 a2_392
	word32 a4_100
	memcpy(fp + -432<i32>, s1_26, s3_28, out a1_391, out a2_392, out a3_393, out a4_100, out a5_394, out a6_395, out a7_396)
l2301FFA6:
	word32 a5_120 = Mem119[a4_100:word32]
	a4_100 = a4_100 ^ 0x36363636<32>
	Mem124[a5_120 + 0x1000<32>:word32] = a4_100
	branch a5_120 + 4<32> != fp + -368<i32> l2301FFA6
l2301FFB4:
	word32 a5_138
	word32 s4_408
	word32 s1_405
	word32 s2_406
	word32 s3_407
	wpa_MD5Update(ra_92, fp + -432<i32>, 64<i32>, wpa_MD5Init(fp + -368<i32>), dwLoc0234, dwLoc0208, dwLoc01B8, dwLoc0128, out s1_405, out a5_138, out s2_406, out s3_407, out s4_408)
	word32 s2_170
	word32 s4_412
	word32 s3_411
	word32 a5_410
	word32 s1_409
	wpa_MD5Update(ra_92, a0, a1, a5_138, dwLoc0234, dwLoc0208, dwLoc01B8, dwLoc0128, out s1_409, out a5_410, out s2_170, out s3_411, out s4_412)
	word32 s1_192
	word32 s2_193
	word32 s3_194
	word32 a5_419
	word32 a3_417
	word32 a4_418
	word32 a1_415
	word32 a2_416
	word32 a0_414
	word32 t1_413
	word32 ra_212 = memset(wpa_MD5Final(ra_92, s2_170, dwLoc0228, dwLoc01D8, dwLoc0148, out s1_192, out s2_193, out s3_194), fp + -432<i32>, 0<32>, 64<i32>, out t1_413, out a0_414, out a1_415, out a2_416, out a3_417, out a4_418, out a5_419)
	word32 a7_425
	word32 a4_423
	word32 a6_424
	word32 a2_421
	word32 a3_422
	word32 a1_420
	word32 a5_219
	memcpy(fp + -432<i32>, s1_192, s3_194, out a1_420, out a2_421, out a3_422, out a4_423, out a5_219, out a6_424, out a7_425)
l2301FFF6:
	word32 s0_235 = Mem234[a5_219:word32]
	a5_219 = a5_219 ^ 0x5C5C5C5C<32>
	Mem239[s0_235 + 0x1000<32>:word32] = a5_219
	branch s0_235 + 4<32> != s2_193 l2301FFF6
l23020004:
	word32 a5_253
	word32 s4_260
	word32 s2_427
	word32 s3_428
	word32 s1_426
	wpa_MD5Update(ra_212, fp + -432<i32>, 64<i32>, wpa_MD5Init(s0_235 + 4<32>), dwLoc0234, dwLoc0208, dwLoc01B8, dwLoc0128, out s1_426, out a5_253, out s2_427, out s3_428, out s4_260)
	word32 s1_429
	word32 a5_430
	word32 s2_431
	word32 s3_432
	word32 s4_433
	word32 s1_434
	word32 s2_435
	word32 s3_436
	wpa_MD5Final(ra_212, wpa_MD5Update(ra_212, s4_260, 0x10<32>, a5_253, dwLoc0234, dwLoc0208, dwLoc01B8, dwLoc0128, out s1_429, out a5_430, out s2_431, out s3_432, out s4_433), dwLoc0228, dwLoc01D8, dwLoc0148, out s1_434, out s2_435, out s3_436)
	return
Bl_hmac_md5_exit:


word32 Bl_hmac_sha1(word32 ra, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ComputeEAPOL_MIC
//      Bl_PRF
//      Bl_F
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
Bl_hmac_sha1_entry:
l2302004E:
	word32 s2_36 = a3
	word32 s1_38 = a4
	branch a4 <= 64<i32> l230200AC
l23020092:
	Bl_SHA1Init(fp + -364<i32>)
	word32 a1_417
	word32 a2_418
	word32 s3_419
	Bl_SHA1Update(fp + -364<i32>, a3, a4, dwLoc98, out a1_417, out a2_418, out s2_36, out s3_419)
	word32 s1_420
	ra = Bl_SHA1Final(ra, fp + -364<i32>, s2_36, out s1_420)
	s1_38 = 0x14<32>
l230200AC:
	word32 t1_404
	word32 a4_409
	word32 a5_410
	word32 a0_405
	word32 a1_406
	word32 a2_407
	word32 a3_408
	word32 ra_91 = memset(ra, fp + -448<i32>, 0<32>, 64<i32>, out t1_404, out a0_405, out a1_406, out a2_407, out a3_408, out a4_409, out a5_410)
	word32 a4_413
	word32 a5_414
	word32 a6_415
	word32 a7_416
	word32 a1_411
	word32 a2_412
	word32 a3_104
	memcpy(fp + -448<i32>, s2_36, s1_38, out a1_411, out a2_412, out a3_104, out a4_413, out a5_414, out a6_415, out a7_416)
l230200D2:
	word32 a5_119 = Mem118[a3_104:word32]
	Mem123[a5_119 + 0x1000<32>:word32] = a3_104 ^ 0x36363636<32>
	word32 a3_124 = Mem123[a5_119 + 4<32>:int32]
	Mem126[a5_119 + 0x1004<32>:word32] = a3_124 ^ 0x36363636<32>
	a3_104 = a3_124 ^ 0x36363636<32>
	branch a5_119 + 8<32> != fp + -384<i32> l230200D2
l230200EA:
	Bl_SHA1Init(fp + -364<i32>)
	word32 s3_421
	word32 a2_136
	word32 a1_144
	word32 s2_142
	Bl_SHA1Update(fp + -364<i32>, fp + -448<i32>, 64<i32>, dwLoc98, out a1_144, out a2_136, out s2_142, out s3_421)
	word32 s3_154 = 0<32>
l230200FE:
	branch s3_154 < a2 l2302019E
l2302019E:
	Bl_SHA1Update(fp + -364<i32>, a1_144, a2_136, dwLoc98, out a1_144, out a2_136, out s2_142, out s3_154)
l23020102:
	word32 s1_197
	word32 a2_425
	word32 a3_426
	word32 a4_427
	word32 a5_428
	word32 t1_422
	word32 a0_423
	word32 a1_424
	word32 ra_210 = memset(Bl_SHA1Final(ra_91, fp + -364<i32>, fp + -384<i32>, out s1_197), fp + -448<i32>, 0<32>, 64<i32>, out t1_422, out a0_423, out a1_424, out a2_425, out a3_426, out a4_427, out a5_428)
	word32 a6_433
	word32 a7_434
	word32 a1_429
	word32 a2_430
	word32 a3_431
	word32 a5_432
	word32 a4_217
	memcpy(fp + -448<i32>, s2_142, s1_197, out a1_429, out a2_430, out a3_431, out a4_217, out a5_432, out a6_433, out a7_434)
l23020128:
	word32 s0_234 = Mem233[a4_217:word32]
	Mem238[s0_234 + 0x1000<32>:word32] = a4_217 ^ 0x5C5C5C5C<32>
	word32 a4_239 = Mem238[s0_234 + 4<32>:int32]
	Mem241[s0_234 + 0x1004<32>:word32] = a4_239 ^ 0x5C5C5C5C<32>
	a4_217 = a4_239 ^ 0x5C5C5C5C<32>
	branch s0_234 + 8<32> != fp + -384<i32> l23020128
l23020140:
	Bl_SHA1Init(fp + -364<i32>)
	word32 s2_437
	word32 s2_441
	word32 s3_442
	word32 s3_438
	word32 a1_439
	word32 a2_440
	word32 a1_435
	word32 a2_436
	word32 s0_274 = Bl_SHA1Update(fp + -364<i32>, Bl_SHA1Update(fp + -364<i32>, fp + -448<i32>, 64<i32>, dwLoc98, out a1_435, out a2_436, out s2_437, out s3_438), 0x14<32>, dwLoc98, out a1_439, out a2_440, out s2_441, out s3_442)
	word32 s1_443
	Bl_SHA1Final(ra_210, fp + -364<i32>, s0_274, out s1_443)
	word32 a1_444
	word32 a6_448
	word32 a4_447
	word32 a7_449
	word32 a2_445
	word32 a3_446
	word32 a5_317
	memcpy(a5, s0_274, a6, out a1_444, out a2_445, out a3_446, out a4_447, out a5_317, out a6_448, out a7_449)
	return a5_317
Bl_hmac_sha1_exit:


word32 Bl_PRF(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 dwArg34, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      KeyMgmt_DerivePTK
//      GenerateGTK_internal
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31] Stack +0034:[0..31]
// LiveOut: ra s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
Bl_PRF_entry:
l230201B6:
	word32 a5_116
	word32 s0_140 = a3
	word32 t1_267
	word32 a0_268
	word32 a1_269
	word32 a2_270
	word32 a3_271
	word32 a4_272
	word32 a5_273
	word32 ra_53 = memset(ra, fp + -168<i32>, 0<32>, 120<i32>, out t1_267, out a0_268, out a1_269, out a2_270, out a3_271, out a4_272, out a5_273)
	branch a2 == 0<32> l23020260
l23020260:
	word32 a1_274
	word32 a2_275
	word32 a3_276
	word32 a4_277
	word32 a6_278
	word32 a7_279
	memcpy(fp + -168<i32>, a4, a5, out a1_274, out a2_275, out a3_276, out a4_277, out a5_116, out a6_278, out a7_279)
l230201F4:
	word32 a1_280
	word32 a2_281
	word32 a3_282
	word32 a4_283
	word32 a5_284
	word32 a6_285
	word32 a7_286
	memcpy(fp + -168<i32>, a2, a3, out a1_280, out a2_281, out a3_282, out a4_283, out a5_284, out a6_285, out a7_286)
	Mem96[fp + -48<i32> + a3 + 3976<i32>:byte] = 0<8>
	word32 a1_287
	word32 a2_288
	word32 a3_289
	word32 a4_290
	word32 a6_291
	word32 a7_292
	memcpy(fp + -168<i32> + (a3 + 1<32>), a4, a5, out a1_287, out a2_288, out a3_289, out a4_290, out a5_116, out a6_291, out a7_292)
	s0_140 = a3 + 1<32> + a5
l23020218:
	0<32> = dwArg34
	Mem122[fp + -48<i32> + a5_116 + 3976<i32>:byte] = 0<8>
	word32 s6_121 = a7 + 19<i32> ^ 0x14<32>
	word32 s7_123 = 0<32>
	word32 s5_124 = 0xFFFFFFEC<32>
l23020238:
	word32 a5_131 = s5_124 + 0<32> + a7
	branch s5_124 < s6_121 l2302026E
l2302026E:
	word32 s0_135 = CONVERT(SLICE(a5_131, byte, 0), byte, int32)
	branch CONVERT(SLICE(a5_131, byte, 0), byte, int32) <= 0x14<32> l23020276
l23020274:
	s0_135 = 0x14<32>
l23020276:
	word32 s0_139 = s0_135 << 24<i32>
	word32 a5_165 = Bl_hmac_sha1(ra_53, 1<32>, a0, a1, a6 + s7_123, s0_139 >> 24<i32>)
	0<32> = dwArg34
	word32 a5_180 = a5_165 + 0xFFFFFFFF<32> + (fp + -48<i32>)
	Mem185[a5_180 + 3976<i32>:byte] = SLICE(CONVERT(Mem176[a5_180 + -120<i32>:byte], byte, word32) + 1<32>, byte, 0)
	s0_140 = s0_139 >> 24<i32>
	s7_123 = s7_123 + (s0_139 >> 24<i32>)
	s5_124 = s5_124 + 1<32>
l23020246:
	s0Out = s0_140
	s1Out = a7
	s4Out = a6
	return ra_53
Bl_PRF_exit:


word32 wpa_MD5Transform(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 dwArg3C, word32 dwArgB8, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wpa_MD5Update
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +003C:[0..31] Stack +00B8:[0..31] Stack +0148:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
wpa_MD5Transform_entry:
l230202A6:
	word32 s8_31 = Mem27[a1:int32]
	word32 s9_32 = Mem27[a0 + 8<i32>:int32]
	word32 s10_33 = Mem27[a0 + 12<i32>:int32]
	word32 a6_36 = Mem27[a0 + 4<i32>:int32]
	word32 a5_44 = ((s9_32 ^ s10_33) & a6_36 ^ s10_33) + (Mem27[a0:int32] + (s8_31 + 0xD76AA478<32>))
	word32 a5_51 = (a5_44 >>u 25<i32> | a5_44 << 7<u32>) + a6_36
	word32 a1_42 = Mem27[s1 + 4<i32>:word32]
	word32 a3_57 = ((a6_36 ^ s9_32) & a5_51 ^ s9_32) + ((s1 + 0xE8C7B756<32>) + s10_33)
	word32 t3_55 = Mem27[a1_42 + 8<i32>:int32]
	word32 a3_64 = (a3_57 >>u 20<i32> | a3_57 << 0xC<u32>) + a5_51
	word32 a2_69 = ((a6_36 ^ a5_51) & a3_64 ^ a6_36) + ((t3_55 + 0x242070DB<32>) + s9_32)
	word32 s3_70 = Mem27[a1_42 + 12<i32>:int32]
	word32 a2_78 = (a2_69 << 17<i32> | a2_69 >>u 0xF<u32>) + a3_64
	word32 a4_83 = ((a5_51 ^ a3_64) & a2_78 ^ a5_51) + ((s3_70 + 0xC1BDCEEE<32>) + a6_36)
	word32 t5_84 = Mem27[a1_42 + 16<i32>:int32]
	word32 a4_91 = (a4_83 << 22<i32> | a4_83 >>u 0xA<u32>) + a2_78
	word32 a5_96 = ((a3_64 ^ a2_78) & a4_91 ^ a3_64) + ((t5_84 + 0xF57C0FAF<32>) + a5_51)
	word32 s5_97 = Mem27[a1_42 + 20<i32>:int32]
	word32 a5_104 = (a5_96 >>u 25<i32> | a5_96 << 7<u32>) + a4_91
	word32 a3_109 = ((a2_78 ^ a4_91) & a5_104 ^ a2_78) + ((s5_97 + 0x4787C62A<32>) + a3_64)
	word32 t0_110 = Mem27[a1_42 + 24<i32>:int32]
	word32 a3_117 = (a3_109 >>u 20<i32> | a3_109 << 0xC<u32>) + a5_104
	word32 a2_122 = ((a4_91 ^ a5_104) & a3_117 ^ a4_91) + ((t0_110 + 0xA8304613<32>) + a2_78)
	word32 s7_123 = Mem27[a1_42 + 28<i32>:int32]
	word32 a2_130 = (a2_122 << 17<i32> | a2_122 >>u 0xF<u32>) + a3_117
	word32 a4_135 = ((a5_104 ^ a3_117) & a2_130 ^ a5_104) + ((s7_123 + 0xFD469501<32>) + a4_91)
	word32 a4_143 = (a4_135 << 22<i32> | a4_135 >>u 0xA<u32>) + a2_130
	word32 a0_136 = Mem27[s0 + 32<i32>:word32]
	word32 a5_148 = ((a3_117 ^ a2_130) & a4_143 ^ a3_117) + ((s0 + 0x698098D8<32>) + a5_104)
	word32 t1_149 = Mem27[a0_136 + 36<i32>:int32]
	word32 a5_156 = (a5_148 >>u 25<i32> | a5_148 << 7<u32>) + a4_143
	word32 a3_161 = ((a2_130 ^ a4_143) & a5_156 ^ a2_130) + ((t1_149 + 0x8B44F7AF<32>) + a3_117)
	word32 s2_162 = Mem27[a0_136 + 40<i32>:int32]
	word32 a3_169 = (a3_161 >>u 20<i32> | a3_161 << 0xC<u32>) + a5_156
	word32 a2_174 = ((a4_143 ^ a5_156) & a3_169 ^ a4_143) + ((s2_162 + 0xF5FFFBB1<32>) + a2_130)
	word32 t4_175 = Mem27[a0_136 + 44<i32>:int32]
	word32 a2_182 = (a2_174 << 17<i32> | a2_174 >>u 0xF<u32>) + a3_169
	word32 a4_187 = ((a5_156 ^ a3_169) & a2_182 ^ a5_156) + ((t4_175 + 0x895CD7BE<32>) + a4_143)
	word32 s4_188 = Mem27[a0_136 + 48<i32>:int32]
	word32 a4_195 = (a4_187 << 22<i32> | a4_187 >>u 0xA<u32>) + a2_182
	word32 a5_200 = ((a3_169 ^ a2_182) & a4_195 ^ a3_169) + ((s4_188 + 0x6B901122<32>) + a5_156)
	word32 t6_201 = Mem27[a0_136 + 52<i32>:int32]
	word32 a5_208 = (a5_200 >>u 25<i32> | a5_200 << 7<u32>) + a4_195
	word32 a3_213 = ((a2_182 ^ a4_195) & a5_208 ^ a2_182) + ((t6_201 + 0xFD987193<32>) + a3_169)
	word32 s6_214 = Mem27[a0_136 + 56<i32>:int32]
	word32 a3_221 = (a3_213 >>u 20<i32> | a3_213 << 0xC<u32>) + a5_208
	word32 a2_226 = ((a4_195 ^ a5_208) & a3_221 ^ a4_195) + ((s6_214 + 0xA679438E<32>) + a2_182)
	word32 t2_227 = Mem27[a0_136 + 60<i32>:int32]
	word32 a2_234 = (a2_226 << 17<i32> | a2_226 >>u 0xF<u32>) + a3_221
	word32 a4_239 = ((a5_208 ^ a3_221) & a2_234 ^ a5_208) + ((t2_227 + 0x49B40821<32>) + a4_195)
	word32 a4_245 = (a4_239 << 22<i32> | a4_239 >>u 0xA<u32>) + a2_234
	word32 a5_251 = ((a2_234 ^ a4_245) & a3_221 ^ a2_234) + ((s1 + 0xF61E2562<32>) + a5_208)
	word32 a5_257 = (a5_251 >>u 27<i32> | a5_251 << 5<u32>) + a4_245
	word32 a3_263 = ((a4_245 ^ a5_257) & a2_234 ^ a4_245) + ((t0_110 + 0xC040B340<32>) + a3_221)
	word32 a3_269 = (a3_263 >>u 23<i32> | a3_263 << 9<u32>) + a5_257
	word32 a2_275 = ((a5_257 ^ a3_269) & a4_245 ^ a5_257) + ((t4_175 + 0x265E5A51<32>) + a2_234)
	word32 a2_281 = (a2_275 >>u 18<i32> | a2_275 << 0xE<u32>) + a3_269
	word32 a4_287 = ((a3_269 ^ a2_281) & a5_257 ^ a3_269) + ((s8_31 + 0xE9B6C7AA<32>) + a4_245)
	word32 a4_293 = (a4_287 << 20<i32> | a4_287 >>u 0xC<u32>) + a2_281
	word32 a5_299 = ((a2_281 ^ a4_293) & a3_269 ^ a2_281) + ((s5_97 + 0xD62F105D<32>) + a5_257)
	word32 a5_305 = (a5_299 >>u 27<i32> | a5_299 << 5<u32>) + a4_293
	word32 a3_311 = ((a4_293 ^ a5_305) & a2_281 ^ a4_293) + ((s2_162 + 0x2441453<32>) + a3_269)
	word32 a3_317 = (a3_311 >>u 23<i32> | a3_311 << 9<u32>) + a5_305
	word32 a2_323 = ((a5_305 ^ a3_317) & a4_293 ^ a5_305) + ((t2_227 + 0xD8A1E681<32>) + a2_281)
	word32 a2_329 = (a2_323 >>u 18<i32> | a2_323 << 0xE<u32>) + a3_317
	word32 a4_335 = ((a3_317 ^ a2_329) & a5_305 ^ a3_317) + ((t5_84 + 0xE7D3FBC8<32>) + a4_293)
	word32 a4_341 = (a4_335 << 20<i32> | a4_335 >>u 0xC<u32>) + a2_329
	word32 a5_347 = ((a2_329 ^ a4_341) & a3_317 ^ a2_329) + ((t1_149 + 0x21E1CDE6<32>) + a5_305)
	word32 a5_353 = (a5_347 >>u 27<i32> | a5_347 << 5<u32>) + a4_341
	word32 a3_359 = ((a4_341 ^ a5_353) & a2_329 ^ a4_341) + ((s6_214 + 0xC33707D6<32>) + a3_317)
	word32 a3_365 = (a3_359 >>u 23<i32> | a3_359 << 9<u32>) + a5_353
	word32 a2_371 = ((a5_353 ^ a3_365) & a4_341 ^ a5_353) + ((s3_70 + 0xF4D50D87<32>) + a2_329)
	word32 a2_377 = (a2_371 >>u 18<i32> | a2_371 << 0xE<u32>) + a3_365
	word32 a4_383 = ((a3_365 ^ a2_377) & a5_353 ^ a3_365) + ((s0 + 0x455A14ED<32>) + a4_341)
	word32 a4_389 = (a4_383 << 20<i32> | a4_383 >>u 0xC<u32>) + a2_377
	word32 a5_395 = ((a2_377 ^ a4_389) & a3_365 ^ a2_377) + ((t6_201 + 0xA9E3E905<32>) + a5_353)
	word32 a5_401 = (a5_395 >>u 27<i32> | a5_395 << 5<u32>) + a4_389
	word32 a3_407 = ((a4_389 ^ a5_401) & a2_377 ^ a4_389) + ((t3_55 + 0xFCEFA3F8<32>) + a3_365)
	word32 a3_413 = (a3_407 >>u 23<i32> | a3_407 << 9<u32>) + a5_401
	word32 a1_419 = ((a5_401 ^ a3_413) & a4_389 ^ a5_401) + (a2_377 + (s7_123 + 0x676F02D9<32>))
	word32 a1_424 = (a1_419 >>u 18<i32> | a1_419 << 0xE<u32>) + a3_413
	word32 a2_426 = a3_413 ^ a1_424
	word32 a4_431 = (a5_401 & a2_426 ^ a3_413) + ((s4_188 + 0x8D2A4C8A<32>) + a4_389)
	word32 a4_437 = (a4_431 << 20<i32> | a4_431 >>u 0xC<u32>) + a1_424
	word32 a5_441 = a5_401 + (s5_97 + 0xFFFA3942<32>) + (a2_426 ^ a4_437)
	word32 a5_448 = (a5_441 >>u 28<i32> | a5_441 << 4<u32>) + a4_437
	word32 a3_452 = (a1_424 ^ a4_437 ^ a5_448) + ((s0 + 0x8771F681<32>) + a3_413)
	word32 a3_459 = (a3_452 >>u 21<i32> | a3_452 << 0xB<u32>) + a5_448
	word32 a1_463 = (a4_437 ^ a5_448 ^ a3_459) + ((t4_175 + 0x6D9D6122<32>) + a1_424)
	word32 a1_470 = (a1_463 >>u 16<i32> | a1_463 << 0x10<u32>) + a3_459
	word32 a4_474 = (a5_448 ^ a3_459 ^ a1_470) + ((s6_214 + 0xFDE5380C<32>) + a4_437)
	word32 a4_481 = (a4_474 << 23<i32> | a4_474 >>u 9<u32>) + a1_470
	word32 a5_485 = (a3_459 ^ a1_470 ^ a4_481) + ((s1 + 0xA4BEEA44<32>) + a5_448)
	word32 a5_492 = (a5_485 >>u 28<i32> | a5_485 << 4<u32>) + a4_481
	word32 a2_496 = (a1_470 ^ a4_481 ^ a5_492) + (a3_459 + (t5_84 + 0x4BDECFA9<32>))
	word32 a2_503 = (a2_496 >>u 21<i32> | a2_496 << 0xB<u32>) + a5_492
	word32 a3_507 = (a4_481 ^ a5_492 ^ a2_503) + (a1_470 + (s7_123 + 0xF6BB4B60<32>))
	word32 a3_514 = (a3_507 >>u 16<i32> | a3_507 << 0x10<u32>) + a2_503
	word32 a4_518 = (a5_492 ^ a2_503 ^ a3_514) + ((s2_162 + 0xBEBFBC70<32>) + a4_481)
	word32 a4_525 = (a4_518 << 23<i32> | a4_518 >>u 9<u32>) + a3_514
	word32 a1_529 = (a2_503 ^ a3_514 ^ a4_525) + (a5_492 + (t6_201 + 0x289B7EC6<32>))
	word32 a1_536 = (a1_529 >>u 28<i32> | a1_529 << 4<u32>) + a4_525
	word32 a5_540 = (a3_514 ^ a4_525 ^ a1_536) + (a2_503 + (s8_31 + 0xEAA127FA<32>))
	word32 a5_547 = (a5_540 >>u 21<i32> | a5_540 << 0xB<u32>) + a1_536
	word32 a3_551 = (a4_525 ^ a1_536 ^ a5_547) + ((s3_70 + 0xD4EF3085<32>) + a3_514)
	word32 a3_558 = (a3_551 >>u 16<i32> | a3_551 << 0x10<u32>) + a5_547
	word32 a2_562 = (a1_536 ^ a5_547 ^ a3_558) + (a4_525 + (t0_110 + 0x4881D05<32>))
	word32 a2_569 = (a2_562 << 23<i32> | a2_562 >>u 9<u32>) + a3_558
	word32 a4_573 = (a5_547 ^ a3_558 ^ a2_569) + (a1_536 + (t1_149 + 0xD9D4D039<32>))
	word32 a4_580 = (a4_573 >>u 28<i32> | a4_573 << 4<u32>) + a2_569
	word32 a1_584 = (a3_558 ^ a2_569 ^ a4_580) + (a5_547 + (s4_188 + 0xE6DB99E5<32>))
	word32 a1_591 = (a1_584 >>u 21<i32> | a1_584 << 0xB<u32>) + a4_580
	word32 a3_595 = (a2_569 ^ a4_580 ^ a1_591) + ((t2_227 + 0x1FA27CF8<32>) + a3_558)
	word32 a3_602 = (a3_595 >>u 16<i32> | a3_595 << 0x10<u32>) + a1_591
	word32 a5_606 = (a4_580 ^ a1_591 ^ a3_602) + (a2_569 + (t3_55 + 0xC4AC5665<32>))
	word32 a5_613 = (a5_606 << 23<i32> | a5_606 >>u 9<u32>) + a3_602
	word32 a4_618 = ((~a1_591 | a5_613) ^ a3_602) + ((s8_31 + 0xF4292244<32>) + a4_580)
	word32 a4_625 = (a4_618 >>u 26<i32> | a4_618 << 6<u32>) + a5_613
	word32 a1_630 = ((~a3_602 | a4_625) ^ a5_613) + ((s7_123 + 0x432AFF97<32>) + a1_591)
	word32 a1_637 = (a1_630 >>u 22<i32> | a1_630 << 0xA<u32>) + a4_625
	word32 a3_642 = ((~a5_613 | a1_637) ^ a4_625) + ((s6_214 + 0xAB9423A7<32>) + a3_602)
	word32 a3_649 = (a3_642 >>u 17<i32> | a3_642 << 0xF<u32>) + a1_637
	word32 a2_654 = ((~a4_625 | a3_649) ^ a1_637) + (a5_613 + (s5_97 + 0xFC93A039<32>))
	word32 a2_661 = (a2_654 << 21<i32> | a2_654 >>u 0xB<u32>) + a3_649
	word32 a5_666 = ((~a1_637 | a2_661) ^ a3_649) + (a4_625 + (s4_188 + 0x655B59C3<32>))
	word32 a5_673 = (a5_666 >>u 26<i32> | a5_666 << 6<u32>) + a2_661
	word32 a4_678 = ((~a3_649 | a5_673) ^ a2_661) + (a1_637 + (s3_70 + 0x8F0CCC92<32>))
	word32 a4_685 = (a4_678 >>u 22<i32> | a4_678 << 0xA<u32>) + a5_673
	word32 s2_686 = s2_162 + 0xFFEFF47D<32> + a3_649
	word32 a3_690 = ((~a2_661 | a4_685) ^ a5_673) + s2_686
	word32 a3_697 = (a3_690 >>u 17<i32> | a3_690 << 0xF<u32>) + a4_685
	word32 s1_698 = s1 + 0x85845DD1<32> + a2_661
	word32 a2_702 = ((~a5_673 | a3_697) ^ a4_685) + s1_698
	word32 a2_709 = (a2_702 << 21<i32> | a2_702 >>u 0xB<u32>) + a3_697
	word32 s0_714 = ((~a4_685 | a2_709) ^ a3_697) + (a5_673 + (s0 + 0x6FA87E4F<32>))
	word32 s0_721 = (s0_714 >>u 26<i32> | s0_714 << 6<u32>) + a2_709
	word32 t2_726 = ((~a3_697 | s0_721) ^ a2_709) + (a4_685 + (t2_227 + 0xFE2CE6E0<32>))
	word32 t2_733 = (t2_726 >>u 0x16<u32> | t2_726 << 0xA<u32>) + s0_721
	word32 a1_738 = ((~a2_709 | t2_733) ^ s0_721) + (a3_697 + (t0_110 + 0xA3014314<32>))
	word32 a1_745 = (a1_738 >>u 17<i32> | a1_738 << 0xF<u32>) + t2_733
	word32 a2_750 = ((~s0_721 | a1_745) ^ t2_733) + ((t6_201 + 0x4E0811A1<32>) + a2_709)
	word32 a2_757 = (a2_750 << 21<i32> | a2_750 >>u 0xB<u32>) + a1_745
	word32 a5_762 = ((~t2_733 | a2_757) ^ a1_745) + (s0_721 + (t5_84 + 0xF7537E82<32>))
	word32 a5_769 = (a5_762 >>u 26<i32> | a5_762 << 6<u32>) + a2_757
	word32 a4_774 = ((~a1_745 | a5_769) ^ a2_757) + (t2_733 + (t4_175 + 0xBD3AF235<32>))
	word32 a4_781 = (a4_774 >>u 22<i32> | a4_774 << 0xA<u32>) + a5_769
	Mem801[a0:word32] = a5_769 + Mem27[a0:int32]
	word32 a3_786 = ((~a2_757 | a4_781) ^ a5_769) + (a1_745 + (t3_55 + 0x2AD7D2BB<32>))
	Mem808[a0 + 8<i32>:word32] = s9_32 + ((a3_786 >>u 17<i32> | a3_786 << 0xF<u32>) + a4_781)
	Mem809[a0 + 12<i32>:word32] = s10_33 + a4_781
	0<32> = dwArg0148
	0<32> = dwArg3C
	Mem819[a0 + 4<i32>:word32] = dwArgB8
l23020B58_thunk_memset:
	word32 t1_860
	word32 a0_861
	word32 a1_862
	word32 a2_863
	word32 a3_864
	word32 a4_865
	word32 a5_866
	word32 ra_830 = memset(ra, a0_136, 0<32>, 64<i32>, out t1_860, out a0_861, out a1_862, out a2_863, out a3_864, out a4_865, out a5_866)
	s0Out = dwLoc04
	s1Out = s1_698
	s2Out = s2_686
	s3Out = s3_70
	s4Out = dwArg98
	return ra_830
wpa_MD5Transform_exit:


