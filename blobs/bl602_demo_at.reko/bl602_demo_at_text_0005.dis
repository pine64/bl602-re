word32 bt_get_name()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_mesh_proxy_adv_start
//      read_name
//      ble_get_device_name
//      ble_start_advertise
// MayUse: 
// LiveOut: a0
// Trashed: a0
// Preserved: sp
bt_get_name_entry:
l2305032A:
	return 0x4200DE18<32>
bt_get_name_exit:


word32 bt_id_create(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_setup_id_addr
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_id_create_entry:
l23050334:
	word32 s1_131
	word32 s3_115 = a0
	word32 s0_17 = a1
	branch a0 != 0<32> l2305035A
l2305035A:
	word32 a5_279
	word32 a1_278
	branch memcmp(a0, fp + -40<i32>, 7<32>, out a1_278, out a2, out a3, out a4, out a5_279) == 0<32> l23050346
l2305036E:
	branch CONVERT(Mem22[a0:byte], byte, word32) != 1<32> l23050388
l23050378:
	branch (CONVERT(Mem22[a0 + 6<i32>:byte], byte, word32) & 192<i32>) == 192<i32> l23050398
l23050398:
	word32 a0_35
	word32 s1_297
	s0_17 = id_find(a0, out s1_297, out a0_35, out a2, out a3, out a4, out s3_115)
	s1_131 = -69<i32>
	branch a0_35 < 0<32> l23050346
l230503A6:
l23050388:
	word32 a5_284
	word32 a7_285
	word32 s2_286
	word32 s4_288
	word32 s3_287
	word32 s6_290
	word32 s5_289
	word32 s7_291
	word32 a2_283
	word32 a1_282
	word32 a0_281
	word32 s1_280
	word32 s8_292
	word32 s9_293
	word32 s10_294
	word32 s11_295
	word32 t4_296
	ra = printf(ra, 0x230BB10C<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_280, out a0_281, out a1_282, out a2_283, out a3, out a4, out a5_284, out a7_285, out s2_286, out s3_287, out s4_288, out s5_289, out s6_290, out s7_291, out s8_292, out s9_293, out s10_294, out s11_295, out t4_296)
	s1_131 = 0xFFFFFFEA<32>
l23050346:
	s1_131 = 0xFFFFFFEA<32>
	branch s0_17 == 0<32> l230503A8
l230503A8:
	word32 s2_84 = CONVERT(Mem83[0x4200DD67<32>:byte], byte, word32)
	s1_131 = 0xFFFFFFF4<32>
	branch s2_84 == 1<32> l2305034A
l230503BC:
	Mem88[0x4200DD67<32>:byte] = SLICE(s2_84 + 1<i32>, byte, 0)
	branch s2_84 != 0<32> l230503E0
l230503CA:
	branch atomic_test_bit(0x4200DDCC<32>, 1<32>, out a2) != 0<32> l230503E0
l230503D8:
	word32 s8_277
	word32 s4_276
	word32 a5_275
	word32 a4_274
	word32 a3_273
	word32 a1_272
	word32 a0_271
	atomic_or(0x4200DDCC<32>, 8<32>, a3, a4, mstatus, out a0_271, out a1_272, out a2, out a3_273, out a4_274, out a5_275, out s4_276, out s8_277)
l230503E0:
	id_create.isra.25(s2_84, s3_115, a2)
l2305034A:
	0<32> = dwArg0128
	a0Out = s1_131
	a3Out = a3
	a4Out = a4
	return ra
bt_id_create_exit:


word32 bt_setup_id_addr(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      init_work
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_setup_id_addr_entry:
l230503EA:
l230503EE_thunk_bt_id_create:
	word32 a0_11
	word32 a3_14
	word32 a4_15
	word32 ra_18 = bt_id_create(ra, 0<32>, 0<32>, a2, a3, a4, mstatus, dwArg40, dwArg44, dwArg68, dwArg8C, dwArg0128, out a0_11, out a3_14, out a4_15)
	a0Out = a0_11
	a3Out = a3_14
	a4Out = a4_15
	return ra_18
bt_setup_id_addr_exit:


void init_work(word32 ra, word32 s0, word32 s2, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
init_work_entry:
	word16 wLoc12_2389 = SLICE(dwLoc14, word16, 16)
l230503F2:
	word32 dwLoc1C_1521 = s0
	word16 wLoc1A_2234 = SLICE(s0, word16, 16)
	word32 a0_13
	word32 a4_106
	word32 a3_105
	word32 s1_1003
	word32 s2_1004
	word32 mstatus_1000
	word32 ra_1001 = bl_onchiphci_interface_init(ra, s0, mstatus, dwLoc30, dwLoc2C, dwArgC8, dwArg0108, out s1_1003, out a0_13, out a3_105, out a4_106, out s2_1004, out mstatus_1000)
	word32 s0_1018 = a0_13
	branch a0_13 != 0<32> l23050590
l23050406:
	word32 a5_37 = Mem11[Mem11[0x4200DE14<32>:int32] + 8<i32>:word32]
	word32 a5_107 = a5_37 & 1<32>
	branch (a5_37 & 1<32>) != 0<32> l2305045C
l2305041C:
	word32 a3_47
	word32 a5_49
	word32 s0_2709
	word32 s11_2718
	word32 s7_2714
	word32 s8_2715
	word32 s4_2712
	word32 a2_2710
	word32 s3_2711
	word32 s6_2713
	word32 s9_2716
	word32 s10_2717
	word32 a0_44
	word32 a1_45
	word32 a4_101
	ra_1001 = bt_hci_cmd_send_sync(ra_1001, a0_13, 0xFFFC03<32>, 0<32>, a3_105, a4_106, a5_37 & 1<32>, s5, mstatus_1000, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2709, out s1_1003, out a0_44, out a1_45, out a2_2710, out a3_47, out a4_101, out a5_49, out s2_1004, out s3_2711, out s4_2712, out s5, out s6_2713, out s7_2714, out s8_2715, out s9_2716, out s10_2717, out s11_2718, out mstatus_1000)
	s0_1018 = a0_44
	branch a0_44 != 0<32> l23050590
l23050430:
	branch CONVERT(Mem11[Mem11[a5_49 + 8<i32>:word32]:byte], byte, word32) != 0<32> l23050456
l2305043A:
	Mem80[0x4200F484<32>:word32] = 0<32>
	word32 a0_81 = atomic_get(s1_1003 + 108<i32>)
	word32 s8_2730
	word32 a3_2728
	word32 s4_2729
	atomic_set(s1_1003, a0_81 & 13<i32>, a3_47, a4_101, mstatus_1000, out a0_44, out a3_2728, out a4_101, out s4_2729, out s8_2730)
	a1_45 = a0_81 & 13<i32>
l23050456:
	word32 s3_2724
	word32 s4_2725
	word32 a1_2721
	word32 s1_2719
	word32 a0_2720
	word32 a2_2722
	word32 s2_2723
	word32 s6_2726
	word32 s8_2727
	ra_1001 = net_buf_unref(ra_1001, s1_1003, a0_44, a1_45, a4_101, mstatus_1000, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_1018, out s1_2719, out a0_2720, out a1_2721, out a2_2722, out a3_105, out a4_106, out a5_107, out s2_2723, out s3_2724, out s4_2725, out s5, out s6_2726, out s8_2727, out mstatus_1000)
l2305045C:
	word32 a0_140
	word32 a1_141
	word32 s10_2707
	word32 s6_2703
	word32 s7_2704
	word32 s8_2705
	word32 s9_2706
	word32 s3_2701
	word32 s4_2702
	word32 a5_2700
	word32 a4_2699
	word32 s0_2696
	word32 s11_2708
	word32 a2_2697
	word32 a3_2698
	ra_1001 = bt_hci_cmd_send_sync(ra_1001, s0_1018, 0x1000003<32>, 0<32>, a3_105, a4_106, a5_107, s5, mstatus_1000, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2696, out s1_1003, out a0_140, out a1_141, out a2_2697, out a3_2698, out a4_2699, out a5_2700, out s2_1004, out s3_2701, out s4_2702, out s5, out s6_2703, out s7_2704, out s8_2705, out s9_2706, out s10_2707, out s11_2708, out mstatus_1000)
	s0_1018 = a0_140
	branch a0_140 != 0<32> l23050590
l23050470:
	word32 a4_175
	word32 a1_178
	word32 a3_2732
	word32 a6_2734
	word32 a2_2731
	word32 a5_2733
	word32 a7_2735
	memcpy(s1_1003 + 24<i32>, a1_141 + 1<32>, 8<32>, out a1_178, out a2_2731, out a3_2732, out a4_175, out a5_2733, out a6_2734, out a7_2735)
	word32 a3_192
	word32 a4_193
	word32 a5_194
	word32 mstatus_197
	word32 s0_199
	word32 s2_201
	word32 s5_204
	word32 a0_217
	word32 a1_218
	word32 a5_222
	word32 s11_2755
	word32 s10_2754
	word32 a1_2738
	word32 a0_2737
	word32 a2_2739
	word32 s3_2740
	word32 s8_2743
	word32 s0_2744
	word32 s4_2741
	word32 s6_2742
	word32 a4_2747
	word32 a3_2746
	word32 a2_2745
	word32 s3_2748
	word32 s4_2749
	word32 s6_2750
	word32 s7_2751
	word32 s8_2752
	word32 s9_2753
	word32 s1_2736
	ra_1001 = bt_hci_cmd_send_sync(net_buf_unref(ra_1001, s1_1003, s1_1003 + 24<i32>, a1_178, a4_175, mstatus_1000, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_199, out s1_2736, out a0_2737, out a1_2738, out a2_2739, out a3_192, out a4_193, out a5_194, out s2_201, out s3_2740, out s4_2741, out s5_204, out s6_2742, out s8_2743, out mstatus_197), s0_199, s2_201 + 1<i32>, 0<32>, a3_192, a4_193, a5_194, s5_204, mstatus_197, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2744, out s1_1003, out a0_217, out a1_218, out a2_2745, out a3_2746, out a4_2747, out a5_222, out s2_1004, out s3_2748, out s4_2749, out s5, out s6_2750, out s7_2751, out s8_2752, out s9_2753, out s10_2754, out s11_2755, out mstatus_1000)
	s0_1018 = a0_217
	branch a0_217 != 0<32> l23050590
l23050498:
	word32 a0_248 = Mem139[a5_222 + 8<i32>:word32]
	Mem250[s1_1003 + 16<i32>:byte] = SLICE(CONVERT(Mem139[a5_222 + 1<i32>:byte], byte, word32), byte, 0)
	Mem255[s1_1003 + 18<i32>:word16] = SLICE(CONVERT(Mem250[a5_222 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem250[a5_222 + 2<i32>:byte], byte, word32), word16, 0)
	Mem257[s1_1003 + 17<i32>:byte] = SLICE(CONVERT(Mem255[a5_222 + 4<i32>:byte], byte, word32), byte, 0)
	Mem262[s1_1003 + 20<i32>:word16] = SLICE(CONVERT(Mem257[a5_222 + 8<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem257[a5_222 + 7<i32>:byte], byte, word32), word16, 0)
	word32 a4_263 = CONVERT(Mem262[a5_222 + 5<i32>:byte], byte, word32)
	Mem267[s1_1003 + 22<i32>:word16] = SLICE(CONVERT(Mem262[a5_222 + 6<i32>:byte], byte, word32) << 8<i32> | a4_263, word16, 0)
	word32 s1_279
	word32 s2_280
	word32 a1_2757
	word32 a2_2758
	word32 s3_2759
	word32 s6_2761
	word32 s8_2762
	word32 s4_2760
	word32 a0_2756
	word32 s0_278
	word32 s5_283
	word32 a5_273
	word32 mstatus_276
	word32 a4_272
	word32 a3_271
	word32 ra_277 = net_buf_unref(ra_1001, s1_1003, a0_248, a1_218, a4_263, mstatus_1000, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_278, out s1_279, out a0_2756, out a1_2757, out a2_2758, out a3_271, out a4_272, out a5_273, out s2_280, out s3_2759, out s4_2760, out s5_283, out s6_2761, out s8_2762, out mstatus_276)
	word32 a2_2763
	branch atomic_test_bit(s1_279 + 108<i32>, 3<32>, out a2_2763) != 0<32> l23050550
l230504EC:
	word32 a0_301
	word32 s10_2789
	word32 s11_2790
	word32 s0_2777
	word32 a1_2778
	word32 a2_2779
	word32 a3_2780
	word32 a4_2781
	word32 a5_2782
	word32 s3_2783
	word32 s4_2784
	word32 s6_2785
	word32 s8_2787
	word32 s9_2788
	word32 s7_2786
	ra_1001 = bt_hci_cmd_send_sync(ra_277, s0_278, s2_280 + 9<i32>, 0<32>, a3_271, a4_272, a5_273, s5_283, mstatus_276, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2777, out s1_1003, out a0_301, out a1_2778, out a2_2779, out a3_2780, out a4_2781, out a5_2782, out s2_1004, out s3_2783, out s4_2784, out s5, out s6_2785, out s7_2786, out s8_2787, out s9_2788, out s10_2789, out s11_2790, out mstatus_1000)
	s0_1018 = a0_301
	branch a0_301 != 0<32> l23050590
l230504FC:
	dwLoc28 = 0<32>
	word32 a2_2791
	word32 a5_2793
	word32 a3_2792
	word32 a1_343
	word32 a4_342
	word32 a0_339 = memcmp(a0_301 + 1<32>, fp + -32<i32>, 6<32>, out a1_343, out a2_2791, out a3_2792, out a4_342, out a5_2793)
	dwLoc1C_1521 = SEQ(wLoc1A_2234, 0<16>) (alias)
	branch a0_339 == 0<32> l2305054A
l23050514:
	word16 wLoc14_1627 = SLICE(CONVERT(Mem336[Mem336[a4_342:word32] + 4<i32>:uint16], uint16, word32), word16, 0)
	dwLoc24 = a4_342
	word32 a5_2805
	word32 a2_2803
	word32 a3_2804
	a0_339 = memcmp(a0_301 + 1<32>, fp + -24<i32>, 6<32>, out a1_343, out a2_2803, out a3_2804, out a4_342, out a5_2805)
	dwLoc14 = SEQ(wLoc12_2389, wLoc14_1627) (alias)
	branch a0_339 == 0<32> l2305054A
l23050534:
	word32 a3_2807
	word32 a5_2808
	word32 a6_2809
	word32 a7_2810
	word32 a2_2806
	memcpy(s1_1003 + 1<i32>, a0_301 + 1<32>, 6<32>, out a1_343, out a2_2806, out a3_2807, out a4_342, out a5_2808, out a6_2809, out a7_2810)
	Mem376[s1_1003:byte] = 0<8>
	Mem377[s1_1003 + 7<i32>:byte] = 1<8>
	a0_339 = s1_1003 + 1<i32>
l2305054A:
	word32 s1_2794
	word32 a0_2795
	word32 a1_2796
	word32 a2_2797
	word32 s2_2798
	word32 s3_2799
	word32 s4_2800
	word32 s6_2801
	word32 s8_2802
	ra_277 = net_buf_unref(ra_1001, s1_1003, a0_339, a1_343, a4_342, mstatus_1000, dwLoc30, dwLoc2C, 0<32>, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_278, out s1_2794, out a0_2795, out a1_2796, out a2_2797, out a3_271, out a4_272, out a5_273, out s2_2798, out s3_2799, out s4_2800, out s5_283, out s6_2801, out s8_2802, out mstatus_276)
l23050550:
	word32 a0_425
	word32 a1_426
	word32 s8_2773
	word32 s9_2774
	word32 s10_2775
	word32 s11_2776
	word32 s7_2772
	word32 s6_2771
	word32 s0_2764
	word32 a2_2765
	word32 a3_2766
	word32 a4_2767
	word32 a5_2768
	word32 s3_2769
	word32 s4_2770
	ra_1001 = bt_hci_cmd_send_sync(ra_277, s0_278, 0x1000002<32>, 0<32>, a3_271, a4_272, a5_273, s5_283, mstatus_276, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2764, out s1_1003, out a0_425, out a1_426, out a2_2765, out a3_2766, out a4_2767, out a5_2768, out s2_1004, out s3_2769, out s4_2770, out s5, out s6_2771, out s7_2772, out s8_2773, out s9_2774, out s10_2775, out s11_2776, out mstatus_1000)
	s0_1018 = a0_425
	branch a0_425 != 0<32> l23050590
l23050560:
	word32 a4_460
	word32 a1_463
	word32 a2_2811
	word32 a3_2812
	word32 a5_2813
	word32 a6_2814
	word32 a7_2815
	memcpy(s1_1003 + 32<i32>, a1_426 + 1<32>, 64<i32>, out a1_463, out a2_2811, out a3_2812, out a4_460, out a5_2813, out a6_2814, out a7_2815)
	word32 a3_477
	word32 a4_478
	word32 s0_484
	word32 s1_485
	word32 s5_489
	word32 s3_2821
	word32 s4_2822
	word32 s6_2823
	word32 s8_2824
	word32 a0_2816
	word32 a1_2817
	word32 a2_2818
	word32 a5_2819
	word32 s2_2820
	word32 ra_483 = net_buf_unref(ra_1001, s1_1003, s1_1003 + 32<i32>, a1_463, a4_460, mstatus_1000, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_484, out s1_485, out a0_2816, out a1_2817, out a2_2818, out a3_477, out a4_478, out a5_2819, out s2_2820, out s3_2821, out s4_2822, out s5_489, out s6_2823, out s8_2824, out mstatus_1000)
	word32 a5_499 = CONVERT(Mem424[s1_485 + 28<i32>:byte], byte, word32)
	branch (a5_499 & 64<i32>) != 0<32> l230505AA
l230505AA:
	word32 a0_505
	word32 a1_506
	word32 s11_2837
	word32 s0_2825
	word32 a2_2826
	word32 a3_2827
	word32 a4_2828
	word32 a5_2829
	word32 s3_2830
	word32 s4_2831
	word32 s6_2832
	word32 s7_2833
	word32 s9_2835
	word32 s10_2836
	word32 s8_2834
	ra_1001 = bt_hci_cmd_send_sync(ra_483, s0_484, 0x2000003<32>, 0<32>, a3_477, a4_478, a5_499 & 64<i32>, s5_489, mstatus_1000, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2825, out s1_1003, out a0_505, out a1_506, out a2_2826, out a3_2827, out a4_2828, out a5_2829, out s2_1004, out s3_2830, out s4_2831, out s5, out s6_2832, out s7_2833, out s8_2834, out s9_2835, out s10_2836, out s11_2837, out mstatus_1000)
	s0_1018 = a0_505
	branch a0_505 != 0<32> l23050590
l230505BC:
	word32 a4_540
	word32 a1_543
	word32 a6_2857
	word32 a7_2858
	word32 a3_2855
	word32 a5_2856
	word32 a2_2854
	memcpy(s1_1003 + 112<i32>, a1_506 + 1<32>, 8<32>, out a1_543, out a2_2854, out a3_2855, out a4_540, out a5_2856, out a6_2857, out a7_2858)
	word32 a3_557
	word32 a4_558
	word32 a5_559
	word32 mstatus_562
	word32 s0_564
	word32 s2_566
	word32 s5_569
	word32 s8_2875
	word32 s9_2876
	word32 s10_2877
	word32 s11_2878
	word32 s7_2874
	word32 s6_2873
	word32 s1_2859
	word32 a1_2861
	word32 a2_2862
	word32 s3_2863
	word32 s4_2864
	word32 s6_2865
	word32 s8_2866
	word32 s0_2867
	word32 a2_2868
	word32 a3_2869
	word32 s3_2871
	word32 s4_2872
	word32 a5_2870
	word32 a0_2860
	word32 a0_582
	word32 a1_583
	word32 a4_586
	ra_1001 = bt_hci_cmd_send_sync(net_buf_unref(ra_1001, s1_1003, s1_1003 + 112<i32>, a1_543, a4_540, mstatus_1000, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_564, out s1_2859, out a0_2860, out a1_2861, out a2_2862, out a3_557, out a4_558, out a5_559, out s2_566, out s3_2863, out s4_2864, out s5_569, out s6_2865, out s8_2866, out mstatus_562), s0_564, s2_566 + 2<i32>, 0<32>, a3_557, a4_558, a5_559, s5_569, mstatus_562, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2867, out s1_1003, out a0_582, out a1_583, out a2_2868, out a3_2869, out a4_586, out a5_2870, out s2_1004, out s3_2871, out s4_2872, out s5, out s6_2873, out s7_2874, out s8_2875, out s9_2876, out s10_2877, out s11_2878, out mstatus_1000)
	s0_1018 = a0_582
	branch a0_582 != 0<32> l23050590
l230505E2:
	word32 a3_615 = CONVERT(Mem424[a4_586 + 1<i32>:byte], byte, word32)
	word32 a5_617 = CONVERT(Mem424[a4_586 + 2<i32>:byte], byte, word32) << 8<i32> | a3_615
	Mem618[s1_1003 + 128<i32>:word16] = SLICE(a5_617, word16, 0)
	branch a5_617 == 0<32> l23050606
l230505F8:
	word32 a2_619 = CONVERT(Mem618[a4_586 + 3<i32>:byte], byte, word32)
	word32 a3_2888
	word32 a5_2889
	word32 s2_2890
	word32 s3_2891
	word32 s4_2892
	word32 s5_2893
	word32 s6_2894
	word32 s8_2896
	word32 s7_2895
	ra_1001 = k_sem_init(ra_1001, a0_582, s1_1003 + 132<i32>, a2_619, a2_619, a3_615, a4_586, a5_617, mstatus_1000, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgB8, dwArgF8, out s1_1003, out a0_582, out a1_583, out a3_2888, out a4_586, out a5_2889, out s2_2890, out s3_2891, out s4_2892, out s5_2893, out s6_2894, out s7_2895, out s8_2896)
l23050606:
	word32 a5_2882
	word32 s2_2883
	word32 s3_2884
	word32 s6_2886
	word32 s8_2887
	word32 s4_2885
	word32 a0_2879
	word32 a1_2880
	word32 a2_2881
	word32 a4_659
	word32 a3_658
	ra_1001 = net_buf_unref(ra_1001, s1_1003, a0_582, a1_583, a4_586, mstatus_1000, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_1018, out s1_1003, out a0_2879, out a1_2880, out a2_2881, out a3_658, out a4_659, out a5_2882, out s2_2883, out s3_2884, out s4_2885, out s5, out s6_2886, out s8_2887, out mstatus_1000)
	word32 a5_680 = CONVERT(Mem618[s1_1003 + 28<i32>:byte], byte, word32)
	branch (a5_680 & 32<i32>) == 0<32> l230507EE
l230507EE:
	word32 a3_687
	word32 a4_688
	word32 a1_2898
	word32 a5_2899
	word32 s3_2900
	word32 s6_2902
	word32 s8_2903
	word32 s4_2901
	word32 s0_2897
	ra_1001 = bt_hci_cmd_create(ra_1001, 2<32>, a3_658, a4_659, a5_680 & 32<i32>, mstatus_1000, ra, dwArg78, dwArgB8, dwArgD8, out s0_2897, out s1_1003, out a1_2898, out a3_687, out a4_688, out a5_2899, out s2_1004, out s3_2900, out s4_2901, out s5, out s6_2902, out s8_2903, out mstatus_1000)
	branch true l23050804
l23050804:
	word32 a5_2957
	word32 a1_2956
	word32 a0_712 = net_buf_simple_add(0xFFFC75<32>, 2<32>, a4_688, out a1_2956, out a5_2957)
	Mem716[a0_712:byte] = 1<8>
	Mem717[a0_712 + 1<i32>:byte] = 0<8>
	word32 a0_721
	word32 s11_2969
	word32 s0_2958
	word32 a1_2959
	word32 a2_2960
	word32 a5_2961
	word32 s3_2962
	word32 s4_2963
	word32 s6_2964
	word32 s7_2965
	word32 s9_2967
	word32 s10_2968
	word32 s8_2966
	ra_1001 = bt_hci_cmd_send_sync(ra_1001, 0xFFFC6D<32>, s2_1004 + -915<i32>, 0xFFFC6D<32>, a3_687, a4_688, 1<32>, s5, mstatus_1000, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2958, out s1_1003, out a0_721, out a1_2959, out a2_2960, out a3_658, out a4_659, out a5_2961, out s2_1004, out s3_2962, out s4_2963, out s5, out s6_2964, out s7_2965, out s8_2966, out s9_2967, out s10_2968, out s11_2969, out mstatus_1000)
	s0_1018 = a0_721
	branch a0_721 == 0<32> l23050618
l23050828:
l23050618:
	word32 a5_753 = CONVERT(Mem752[s1_1003 + 60<i32>:byte], byte, word32)
	branch (a5_753 & 8<32>) == 0<32> l23050674
l23050620:
	word32 a0_766
	word32 a1_767
	word32 a5_771
	word32 s9_2913
	word32 s10_2914
	word32 s11_2915
	word32 s0_2904
	word32 a2_2905
	word32 a3_2906
	word32 a4_2907
	word32 s3_2908
	word32 s4_2909
	word32 s7_2911
	word32 s8_2912
	word32 s6_2910
	ra_1001 = bt_hci_cmd_send_sync(ra_1001, s0_1018, 0x200001C<32>, 0<32>, a3_658, a4_659, a5_753 & 8<32>, s5, mstatus_1000, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2904, out s1_1003, out a0_766, out a1_767, out a2_2905, out a3_2906, out a4_2907, out a5_771, out s2_1004, out s3_2908, out s4_2909, out s5, out s6_2910, out s7_2911, out s8_2912, out s9_2913, out s10_2914, out s11_2915, out mstatus_1000)
	s0_1018 = a0_766
	branch a0_766 != 0<32> l23050590
l23050630:
	word32 a0_797 = Mem752[a5_771 + 8<i32>:word32]
	word32 a4_808 = CONVERT(Mem752[a5_771 + 4<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem752[a5_771 + 2<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem752[a5_771 + 1<i32>:byte], byte, word32)) | CONVERT(Mem752[a5_771 + 3<i32>:byte], byte, word32) << 16<i32>)
	word32 a2_811 = CONVERT(Mem752[a5_771 + 5<i32>:byte], byte, word32) | CONVERT(Mem752[a5_771 + 6<i32>:byte], byte, word32) << 8<i32>
	word32 a3_812 = CONVERT(Mem752[a5_771 + 7<i32>:byte], byte, word32)
	word32 a5_813 = CONVERT(Mem752[a5_771 + 8<i32>:byte], byte, word32)
	Mem814[a4_808 + 120<i32>:word32] = s1_1003
	Mem819[(a5_813 << 24<i32> | (a3_812 << 16<i32> | a2_811)) + 124<i32>:word32] = s1_1003
	word32 a1_2917
	word32 a2_2918
	word32 a5_2919
	word32 s2_2920
	word32 s3_2921
	word32 s4_2922
	word32 s6_2923
	word32 s8_2924
	word32 a0_2916
	ra_1001 = net_buf_unref(ra_1001, s1_1003, a0_797, a1_767, a4_808, mstatus_1000, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_1018, out s1_1003, out a0_2916, out a1_2917, out a2_2918, out a3_658, out a4_659, out a5_2919, out s2_2920, out s3_2921, out s4_2922, out s5, out s6_2923, out s8_2924, out mstatus_1000)
l23050674:
	word32 a5_847 = CONVERT(Mem846[s1_1003 + 112<i32>:byte], byte, word32)
	word32 a5_848 = a5_847 & 64<i32>
	branch (a5_847 & 64<i32>) == 0<32> l230506A2
l2305067E:
	word32 a0_860
	word32 a1_861
	word32 a4_864
	word32 a5_865
	word32 s10_2945
	word32 s11_2946
	word32 s0_2936
	word32 a2_2937
	word32 a3_2938
	word32 s3_2939
	word32 s4_2940
	word32 s6_2941
	word32 s8_2943
	word32 s9_2944
	word32 s7_2942
	ra_1001 = bt_hci_cmd_send_sync(ra_1001, s0_1018, 0x200002A<32>, 0<32>, a3_658, a4_659, a5_847 & 64<i32>, s5, mstatus_1000, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2936, out s1_1003, out a0_860, out a1_861, out a2_2937, out a3_2938, out a4_864, out a5_865, out s2_1004, out s3_2939, out s4_2940, out s5, out s6_2941, out s7_2942, out s8_2943, out s9_2944, out s10_2945, out s11_2946, out mstatus_1000)
	s0_1018 = a0_860
	branch a0_860 != 0<32> l23050590
l23050692:
	word32 a0_891 = Mem846[a5_865 + 8<i32>:word32]
	Mem893[s1_1003 + 144<i32>:byte] = SLICE(CONVERT(Mem846[a5_865 + 1<i32>:byte], byte, word32), byte, 0)
	word32 s4_2953
	word32 s6_2954
	word32 s8_2955
	word32 s3_2952
	word32 a1_2949
	word32 a2_2950
	word32 s2_2951
	word32 s1_2947
	word32 a0_2948
	ra_1001 = net_buf_unref(ra_1001, s1_1003, a0_891, a1_861, a4_864, mstatus_1000, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_1018, out s1_2947, out a0_2948, out a1_2949, out a2_2950, out a3_658, out a4_659, out a5_848, out s2_2951, out s3_2952, out s4_2953, out s5, out s6_2954, out s8_2955, out mstatus_1000)
l230506A2:
	word32 a0_932
	word32 a1_933
	word32 a4_936
	word32 a5_937
	word32 s4_2929
	word32 s6_2930
	word32 s7_2931
	word32 s9_2933
	word32 s10_2934
	word32 s11_2935
	word32 s8_2932
	word32 s0_2925
	word32 a3_2927
	word32 s3_2928
	word32 a2_2926
	ra_1001 = bt_hci_cmd_send_sync(ra_1001, s0_1018, 0x200000F<32>, 0<32>, a3_658, a4_659, a5_848, s5, mstatus_1000, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2925, out s1_1003, out a0_932, out a1_933, out a2_2926, out a3_2927, out a4_936, out a5_937, out s2_1004, out s3_2928, out s4_2929, out s5, out s6_2930, out s7_2931, out s8_2932, out s9_2933, out s10_2934, out s11_2935, out mstatus_1000)
	s0_1018 = a0_932
	branch a0_932 != 0<32> l23050590
l230506B6:
	word32 a0_963 = Mem931[a5_937 + 8<i32>:word32]
	Mem965[s1_1003 + 146<i32>:byte] = SLICE(CONVERT(Mem931[a5_937 + 1<i32>:byte], byte, word32), byte, 0)
	word32 a3_969
	word32 a4_970
	word32 a5_971
	word32 mstatus_974
	word32 s2_978
	word32 a4_996
	word32 s8_2987
	word32 s6_2986
	word32 s4_2985
	word32 s0_2970
	word32 s1_2971
	word32 a1_2973
	word32 a2_2974
	word32 s3_2975
	word32 s4_2976
	word32 s5_2977
	word32 s6_2978
	word32 s8_2979
	word32 s0_2980
	word32 a1_2981
	word32 a5_2983
	word32 s3_2984
	word32 a3_2982
	word32 a0_2972
	ra_1001 = bt_hci_cmd_create(net_buf_unref(ra_1001, s1_1003, a0_963, a1_933, a4_936, mstatus_1000, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_2970, out s1_2971, out a0_2972, out a1_2973, out a2_2974, out a3_969, out a4_970, out a5_971, out s2_978, out s3_2975, out s4_2976, out s5_2977, out s6_2978, out s8_2979, out mstatus_974), 8<32>, a3_969, a4_970, a5_971, mstatus_974, ra, dwArg78, dwArgB8, dwArgD8, out s0_2980, out s1_1003, out a1_2981, out a3_2982, out a4_996, out a5_2983, out s2_1004, out s3_2984, out s4_2985, out s5, out s6_2986, out s8_2987, out mstatus_1000)
	branch s2_978 == 1<32> l230507FE
l230507FE:
	s0_1018 = -55<i32>
l230506D6:
	word32 a5_2989
	word32 a1_2988
	word32 a0_1021 = net_buf_simple_add(s2_978 + 9<32>, 8<32>, a4_996, out a1_2988, out a5_2989)
	word32 a4_1024 = CONVERT(Mem965[s1_1003 + 112<i32>:byte], byte, word32)
	word32 a3_1026 = 514<i32>
	branch (a4_1024 & 64<i32>) != 0<32> l230506F0
l230506EE:
	a3_1026 = 3<32>
l230506F0:
	word32 a0_1032 = a3_1026 | 44<i32>
	branch (a4_1024 & 2<i32>) != 0<32> l230506FE
l230506FA:
	a0_1032 = a3_1026 | 12<i32>
l230506FE:
	branch (a4_1024 & 1<32>) == 0<32> l23050706
l23050702:
	a0_1032 = a0_1032 | 16<i32>
l23050706:
	word32 a4_1044 = CONVERT(Mem965[s1_1003 + 66<i32>:byte], byte, word32)
	branch (a4_1044 & 6<32>) != 6<32> l23050716
l23050712:
	a0_1032 = a0_1032 | 384<i32>
l23050716:
	word32 a0_1085
	word32 s10_3000
	word32 s11_3001
	word32 s7_2997
	word32 s8_2998
	word32 s9_2999
	word32 s6_2996
	word32 s4_2995
	word32 s3_2994
	word32 a5_2993
	word32 a2_2992
	word32 a1_2991
	word32 s0_2990
	word32 a4_1089
	word32 a3_1088
	ra_1001 = bt_hci_cmd_send_sync(ra_1001, s2_978 + 1<i32>, 0x2000001<32>, s2_978 + 1<i32>, 6<32>, a4_1044 & 6<32>, sys_put_le64(a0_1032, 0<32>, a0_1021), s5, mstatus_1000, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_2990, out s1_1003, out a0_1085, out a1_2991, out a2_2992, out a3_1088, out a4_1089, out a5_2993, out s2_1004, out s3_2994, out s4_2995, out s5, out s6_2996, out s7_2997, out s8_2998, out s9_2999, out s10_3000, out s11_3001, out mstatus_1000)
	s0_1018 = a0_1085
	branch a0_1085 != 0<32> l23050590
l2305072E:
	word32 a5_1115 = CONVERT(Mem965[s1_1003 + 28<i32>:byte], byte, word32)
	word32 a5_1116 = a5_1115 & 32<i32>
	branch (a5_1115 & 32<i32>) != 0<32> l23050786
l23050738:
	a5_1116 = CONVERT(Mem965[s1_1003 + 128<i32>:uint16], uint16, word32)
	branch a5_1116 != 0<32> l23050786
l2305073E:
	word32 s9_3019
	word32 s10_3020
	word32 s11_3021
	word32 s6_3016
	word32 s7_3017
	word32 s8_3018
	word32 s0_3010
	word32 a2_3011
	word32 a3_3012
	word32 s3_3014
	word32 s4_3015
	word32 a5_3013
	word32 a0_1122
	word32 a1_1123
	word32 a4_1126
	ra_1001 = bt_hci_cmd_send_sync(ra_1001, a0_1085, 0x1000005<32>, 0<32>, a3_1088, a4_1089, a5_1116, s5, mstatus_1000, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_3010, out s1_1003, out a0_1122, out a1_1123, out a2_3011, out a3_3012, out a4_1126, out a5_3013, out s2_1004, out s3_3014, out s4_3015, out s5, out s6_3016, out s7_3017, out s8_3018, out s9_3019, out s10_3020, out s11_3021, out mstatus_1000)
	s0_1018 = a0_1122
	branch a0_1122 != 0<32> l23050590
l23050750:
	branch CONVERT(Mem965[s1_1003 + 128<i32>:uint16], uint16, word32) != 0<32> l23050780
l23050756:
	word32 a3_1157 = CONVERT(Mem965[a4_1126 + 1<i32>:byte], byte, word32)
	Mem1160[s1_1003 + 128<i32>:word16] = SLICE(CONVERT(Mem965[a4_1126 + 2<i32>:byte], byte, word32) << 8<i32> | a3_1157, word16, 0)
	word32 a5_1162 = CONVERT(Mem1160[a4_1126 + 4<i32>:byte], byte, word32)
	word32 a2_1164 = CONVERT(Mem1160[a4_1126 + 5<i32>:byte], byte, word32) << 8<i32> | a5_1162
	word32 s6_3039
	word32 s7_3040
	word32 s8_3041
	word32 s5_3038
	word32 s2_3035
	word32 s3_3036
	word32 s4_3037
	word32 a3_3033
	word32 a5_3034
	ra_1001 = k_sem_init(ra_1001, a0_1122, s1_1003 + 132<i32>, a2_1164, a2_1164, a3_1157, a4_1126, a5_1162, mstatus_1000, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgB8, dwArgF8, out s1_1003, out a0_1122, out a1_1123, out a3_3033, out a4_1126, out a5_3034, out s2_3035, out s3_3036, out s4_3037, out s5_3038, out s6_3039, out s7_3040, out s8_3041)
l23050780:
	word32 s8_3032
	word32 s4_3029
	word32 s5_3030
	word32 s6_3031
	word32 s2_3027
	word32 s3_3028
	word32 a0_3024
	word32 a1_3025
	word32 a2_3026
	word32 s1_3023
	word32 s0_3022
	ra_1001 = net_buf_unref(ra_1001, s1_1003, a0_1122, a1_1123, a4_1126, mstatus_1000, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_3022, out s1_3023, out a0_3024, out a1_3025, out a2_3026, out a3_1088, out a4_1089, out a5_1116, out s2_3027, out s3_3028, out s4_3029, out s5_3030, out s6_3031, out s8_3032, out mstatus_1000)
l23050786:
	word32 a3_1236
	word32 a4_1237
	word32 s0_3002
	word32 a5_3004
	word32 s2_3005
	word32 s3_3006
	word32 s4_3007
	word32 s6_3008
	word32 s8_3009
	word32 a1_3003
	ra_1001 = bt_hci_cmd_create(ra_1001, 8<32>, a3_1088, a4_1089, a5_1116, mstatus_1000, ra, dwArg78, dwArgB8, dwArgD8, out s0_3002, out s1_1003, out a1_3003, out a3_1236, out a4_1237, out a5_3004, out s2_3005, out s3_3006, out s4_3007, out s5, out s6_3008, out s8_3009, out mstatus_1000)
	s2_1004 = 0xFFFC01<32>
	s0_1018 = -55<i32>
	branch false l23050590
l2305079C:
	word32 a1_1270
	word32 a0_1269
	word32 a1_3042
	word32 a5_3043
	word32 a0_1262 = net_buf_simple_add(0xFFFC09<32>, 8<32>, a4_1237, out a1_3042, out a5_3043)
	branch (CONVERT(Mem1233[s1_1003 + 112<i32>:byte], byte, word32) & 1<32>) == 0<32> l2305082A
l2305082A:
	a0_1269 = Mem1233[0x230BB460<32>:int32]
	a1_1270 = Mem1233[0x230BB464<32>:int32]
l230507AE:
	a0_1269 = Mem1233[0x230BB468<32>:int32]
	a1_1270 = Mem1233[0x230BB46C<32>:int32]
l230507BA:
	word32 a0_1293
	word32 a2_1295
	word32 s9_3068
	word32 s10_3069
	word32 s11_3070
	word32 s6_3065
	word32 s7_3066
	word32 s8_3067
	word32 s3_3063
	word32 s4_3064
	word32 a1_3061
	word32 a5_3062
	word32 s0_3060
	word32 a4_1297
	word32 a3_1296
	ra_1001 = bt_hci_cmd_send_sync(ra_1001, -55<i32>, 0xFFFC01<32>, 0xFFFC01<32>, a3_1236, a4_1237, sys_put_le64(a0_1269, a1_1270, a0_1262), s5, mstatus_1000, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_3060, out s1_1003, out a0_1293, out a1_3061, out a2_1295, out a3_1296, out a4_1297, out a5_3062, out s2_1004, out s3_3063, out s4_3064, out s5, out s6_3065, out s7_3066, out s8_3067, out s9_3068, out s10_3069, out s11_3070, out mstatus_1000)
	s0_1018 = a0_1293
	branch a0_1293 != 0<32> l23050590
l230507D2:
	branch CONVERT(Mem1233[s1_1003 + 7<i32>:byte], byte, word32) != 0<32> l23050838
l230507D8:
	word32 a0_1324
	ra_1001 = bt_setup_id_addr(ra_1001, a2_1295, a3_1296, a4_1297, mstatus_1000, dwArg10, dwArg14, dwArg38, dwArg5C, dwArgF8, out a0_1324, out a3_1296, out a4_1297)
	s0_1018 = a0_1324
	branch a0_1324 == 0<32> l23050838
l23050838:
	word32 a3_1362
	word32 a4_1363
	word32 s3_1373
	word32 a0_1387
	ra_1001 = bt_conn_init(ra_1001, s0_1018, a3_1296, a4_1297, mstatus_1000, dwLoc30, dwLoc2C, s2, dwLoc1C_1521, dwLoc18, dwLoc0C, dwLoc08, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0138, out s1_1003, out a0_1387, out a3_1362, out a4_1363, out s2_1004, out s3_1373, out s5, out mstatus_1000)
	s0_1018 = a0_1387
	branch a0_1387 != 0<32> l23050590
l23050842:
	ra_1001 = bt_finalize_init(ra_1001, a0_1387, a3_1362, a4_1363, s2_1004, s3_1373, mstatus_1000, dwLoc30, dwLoc2C, dwLoc28, dwLoc24, s2, dwLoc1C_1521, dwLoc18, dwLoc14, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_1018, out s1_1003, out s2_1004, out s5, out mstatus_1000)
l230507E0:
	word32 t4_3059
	word32 s9_3056
	word32 s10_3057
	word32 s11_3058
	word32 s8_3055
	word32 s4_3052
	word32 s6_3053
	word32 s7_3054
	word32 a5_3049
	word32 a7_3050
	word32 s3_3051
	word32 a4_3048
	word32 a1_3045
	word32 a2_3046
	word32 a3_3047
	word32 a0_3044
	ra_1001 = printf(ra_1001, 0x230BB498<32>, a3_1296, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_1003, out a0_3044, out a1_3045, out a2_3046, out a3_3047, out a4_3048, out a5_3049, out a7_3050, out s2_1004, out s3_3051, out s4_3052, out s5, out s6_3053, out s7_3054, out s8_3055, out s9_3056, out s10_3057, out s11_3058, out t4_3059)
l23050582:
	word32 a3_2841
	word32 a4_2842
	word32 a5_2843
	word32 s3_2845
	word32 s4_2846
	word32 s6_2847
	word32 s7_2848
	word32 s8_2849
	word32 s9_2850
	word32 s10_2851
	word32 s11_2852
	word32 t4_2853
	word32 a7_2844
	word32 a2_2840
	word32 a0_2838
	word32 a1_2839
	ra_1001 = printf(ra_483, 0x230BB470<32>, a3_477, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_1003, out a0_2838, out a1_2839, out a2_2840, out a3_2841, out a4_2842, out a5_2843, out a7_2844, out s2_1004, out s3_2845, out s4_2846, out s5, out s6_2847, out s7_2848, out s8_2849, out s9_2850, out s10_2851, out s11_2852, out t4_2853)
	s0_1018 = 0xFFFFFFED<32>
l23050590:
	word32 a5_1470 = Mem1468[0x4200F480<32>:int32]
	branch a5_1470 == 0<32> l2305059E
l2305059A:
	word32 a7_1506
	word32 s10_1507
	word32 s11_1508
	word32 s6_1509
	word32 s7_1510
	word32 s9_1511
	word32 t4_1512
	word32 t5_1513
	word32 t6_1514
	call a5_1470 (retsize: 0;)
		uses: a0:s0_1471,a7:a7_1506,mstatus:mstatus_1479,ra:ra_1473,s0:s0_1471,s1:s1_1475,s10:s10_1507,s11:s11_1508,s2:s2_1477,s5:s5_1481,s6:s6_1509,s7:s7_1510,s9:s9_1511,Stack +0000:dwLoc30,Stack +0004:dwLoc2C,Stack +0008:dwLoc28_2495,Stack +000C:dwLoc24_2534,Stack +0018:dwLoc18,Stack +001C:dwLoc14_2540,Stack +0020:dwLoc10,Stack +0024:dwLoc0C,Stack +0028:dwLoc08,Stack +002C:dwLoc04,Stack +0030:dwArg00,Stack +0034:dwArg04,Stack +0038:dwArg08,Stack +003C:dwArg0C,Stack +0040:dwArg10,Stack +0044:dwArg14,Stack +0048:dwArg18,Stack +004C:dwArg1C,Stack +0054:dwArg24,Stack +0058:dwArg28,Stack +005C:dwArg2C,Stack +0060:dwArg30,Stack +0064:dwArg34,Stack +0068:dwArg38,Stack +006C:dwArg3C,Stack +0070:dwArg40,Stack +0074:dwArg44,Stack +0078:dwArg48,Stack +007C:dwArg4C,Stack +0084:dwArg54,Stack +0088:dwArg58,Stack +008C:dwArg5C,Stack +0098:dwArg68,Stack +00A4:dwArg74,Stack +00A8:dwArg78,Stack +00AC:dwArg7C,Stack +00B8:dwArg88,Stack +00BC:dwArg8C,Stack +00C8:dwArg98,Stack +00D8:dwArgA8,Stack +00E4:dwArgB4,Stack +00E8:dwArgB8,Stack +00F8:dwArgC8,Stack +0108:dwArgD8,Stack +0118:dwArgE8,Stack +0128:dwArgF8,Stack +0138:dwArg0108,Stack +0148:dwArg0118,Stack +0158:dwArg0128,Stack +0168:dwArg0138,Stack +0178:dwArg0148,t4:t4_1512,t5:t5_1513,t6:t6_1514
		defs: a7:a7_1506,s10:s10_1507,s11:s11_1508,s6:s6_1509,s7:s7_1510,s9:s9_1511,t4:t4_1512,t5:t5_1513,t6:t6_1514
l2305059E:
	0<32> = dwArg0128
	return
init_work_exit:


word32 bt_addr_le_is_bonded(word32 a0, word32 a1, word32 dwArg28, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      disconnected_cb
//      bt_gatt_connected
//      bt_gatt_disconnected
// MayUse:  a0:[0..31] a1:[0..31] Stack +0028:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: sp
bt_addr_le_is_bonded_entry:
l23050848:
	word32 a0_17
	word32 a0_8
	word32 a3_11
	word32 a4_12
	word32 a5_13
	word32 s2_15
	word32 a2_41
	word32 s1_14 = bt_keys_find_addr(a0, a1, dwArg28, out a0_8, out a2_41, out a3_11, out a4_12, out a5_13, out s2_15)
	branch a0_8 == 0<32> l23050860
l23050860:
	a0_17 = 0<32>
l23050852:
	a0_17 = CONVERT(CONVERT(Mem5[a0_8 + 10<i32>:uint16], uint16, word32) != 0<32>, bool, word32)
l2305085A:
	a0Out = a0_17
	a3Out = a3_11
	a4Out = a4_12
	a5Out = a5_13
	s2Out = s2_15
	return s1_14
bt_addr_le_is_bonded_exit:


word32 bt_le_adv_start_internal(word32 ra, word32 s0, word32 a0, word32 a3, word32 a5, word32 s2, word32 s5, word32 s7, word32 s8, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0164, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_le_adv_start
// MayUse:  a0:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] s7:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0164:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s0 s1 s2 s3 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_le_adv_start_internal_entry:
l23050864:
	word32 s2_10 = a0
	word32 s7_1411 = a1
	word32 a1_116 = 1<32>
	word16 wLoc3A_1153 = SLICE(s8, word16, 16)
	word24 nLoc3B_1160 = SLICE(s8, word24, 8)
	word32 s6_1409 = a3
	word32 s9_1426 = a4
	word32 s5_1406 = a5
	word32 a2_1499
	branch atomic_test_bit(0x4200DDCC<32>, 1<32>, out a2_1499) == 0<32> l230508B2
l230508A0:
	word32 s0_204 = 0x4200DD60<32>
	word32 a0_49 = CONVERT(Mem35[a0:byte], byte, word32)
	branch a0_49 <u CONVERT(Mem35[0x4200DD67<32>:byte], byte, word32) l230508D0
l230508D0:
	dwLoc4C = 0<32>
	word32 a2_1500
	word32 a5_1502
	word32 a3_1501
	branch memcmp(a0_49 + 0x4200DD67<32>, fp + -72<i32>, 7<32>, out a1_116, out a2_1500, out a3_1501, out a4, out a5_1502) == 0<32> l230508B0
l230508EC:
	word32 a5_65 = CONVERT(Mem57[a0 + 1<i32>:byte], byte, word32)
	s3 = 0x4200DDCC<32>
	branch (a5_65 & 1<i32>) != 0<32> l23050914
l230508FE:
	branch CONVERT(Mem57[0x4200DD70<32>:byte], byte, word32) >u 8<32> l23050914
l23050908:
	a4 = 159<i32>
	branch CONVERT(Mem57[a0 + 2<i32>:uint16], uint16, word32) <=u 159<i32> l230508B0
l23050914:
	a4 = CONVERT(Mem57[0x4200DDF3<32>:byte], byte, word32)
	branch a4 != 0<32> l2305092A
l2305091A:
	a4 = a5_65 & 64<i32>
	branch (a5_65 & 64<i32>) != 0<32> l230508B0
l23050920:
	a4 = CONVERT(SLICE(a5_65, byte, 0), byte, int32)
	branch a4 < 0<32> l230508B0
l2305092A:
	branch (a5_65 & 0x10<32>) != 0<32> l23050932
l2305092E:
	branch a5 != 0<32> l2305094A
l23050932:
	a4 = CONVERT(Mem57[a0 + 2<i32>:uint16], uint16, word32)
	word32 a5_90 = CONVERT(Mem57[a0 + 4<i32>:uint16], uint16, word32)
	branch a5_90 <u a4 l230508B0
l2305093E:
	branch a4 <=u 0x1F<32> l230508B0
l23050944:
	a4 = 0x4000000<32>
	branch a5_90 >u 0x4000000<32> l230508B0
l2305094A:
	word32 a2_1503
	word32 a0_99 = atomic_test_bit(0x4200DDCC<32>, 6<32>, out a2_1503)
	a1_116 = 6<32>
	word32 s1_102 = a0_99
	branch a0_99 != 0<32> l23050B1C
l23050B1C:
l23050958:
	word32 a0_1505
	word32 a2_1506
	word32 a4_1507
	word32 t1_1504
	word32 a5_1508
	word32 a3_118
	word32 ra_121 = memset(ra, fp + -64<i32>, 0<32>, 0xF<32>, out t1_1504, out a0_1505, out a1_116, out a2_1506, out a3_118, out a4_1507, out a5_1508)
	word32 a4_130 = CONVERT(Mem57[0x4200DD68<32>:byte], byte, word32)
	word32 dwLoc40_674 = SEQ(SLICE(CONVERT(Mem131[a0 + 4<i32>:uint16], uint16, word32), word16, 0), SLICE(CONVERT(Mem57[a0 + 2<i32>:uint16], uint16, word32), word16, 0))
	branch a4_130 == CONVERT(Mem136[a0:byte], byte, word32) l23050994
l2305098A:
	word32 a2_1510
	word32 a4_1511
	word32 a0_1509
	word32 s8_1514
	word32 a5_1512
	word32 s4_1513
	s1_102 = atomic_and(0x4200DD60<32>, 0xEFFFFFFF<32>, a3_118, a4_130, mstatus, out a0_1509, out a1_116, out a2_1510, out a3_118, out a4_1511, out a5_1512, out s4_1513, out s8_1514)
l23050994:
	word32 a5_158 = CONVERT(Mem136[a0 + 1<i32>:byte], byte, word32)
	a4 = CONVERT(SLICE(a5_158, byte, 0), byte, int32)
	branch (a5_158 & 64<i32>) == 0<32> l230509F2
l230509F2:
	branch a4 < 0<32> l230509AC
l230509F8:
l230509A4:
	branch a4 < 0<32> l230509AC
l230509AA:
l230509AC:
l230509B0:
	word32 dwLoc3C_1151
	word32 a5_238
	word32 s4_173 = CONVERT(Mem172[a0:byte], byte, word32)
	Mem177[0x4200DD68<32>:byte] = SLICE(s4_173, byte, 0)
	word32 a5_178 = CONVERT(Mem177[a0 + 1<i32>:byte], byte, word32)
	word32 s10_179 = a5_178 & 1<i32>
	branch (a5_178 & 1<i32>) == 0<32> l23050ABA
l23050ABA:
	branch (a5_178 & 4<32>) != 0<32> l23050ACC
l23050ACC:
	a4 = CONVERT(Mem177[s4_173 + 0x4200DD67<32>:byte], byte, word32)
	branch a4 != 1<32> l23050AEA
l23050AE0:
	word32 a0_211
	word32 a5_1545
	word32 s10_1547
	word32 s1_1544
	word32 s8_1546
	word32 s11_1548
	ra_121 = set_random_address(ra_121, s1_102, s4_173 + 0x4200DD68<32>, mstatus, dwLoc40_674, s8, s2, s0, dwLoc28, dwLoc1C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg24, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_204, out s1_1544, out a0_211, out a1_116, out a3_118, out a4, out a5_1545, out s2_10, out s3, out s4_173, out s5_1406, out s6_1409, out s7_1411, out s8_1546, out s9_1426, out s10_1547, out s11_1548, out mstatus)
	s1_102 = a0_211
l23050AEA:
	nLoc3B_1160 = SEQ(wLoc3A_1153, SLICE(CONVERT(Mem177[s0_204 + (s4_173 + 7<32>):byte], byte, word32), byte, 0)) (alias)
	branch s1_102 == 0<32> l23050ABE
l23050AFC:
l23050ABE:
	a5_238 = 2<32>
	branch s6_1409 != 0<32> l23050AC6
l23050AC4:
	a5_238 = 3<32>
l23050AC6:
	dwLoc3C_1151 = SEQ(nLoc3B_1160, SLICE(a5_238, byte, 0)) (alias)
l230509C4:
	a4 = CONVERT(Mem177[s4_173 + 0x4200DD67<32>:byte], byte, word32)
	branch a4 == 1<32> l230509FE
l230509FE:
	word32 a0_273
	word32 a5_1541
	word32 s1_1540
	word32 s8_1542
	word32 s11_1543
	ra_121 = set_random_address(ra_121, s1_102, s4_173 + 0x4200DD68<32>, mstatus, dwLoc40_674, s8, s2, s0, dwLoc28, dwLoc1C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg24, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_204, out s1_1540, out a0_273, out a1_116, out a3_118, out a4, out a5_1541, out s2_10, out s3, out s4_173, out s5_1406, out s6_1409, out s7_1411, out s8_1542, out s9_1426, out s10_179, out s11_1543, out mstatus)
	branch a0_273 == 0<32> l230509D8
l23050A0A:
l230509D8:
	a5_238 = CONVERT(Mem177[s4_173 + 7<32> + s0_204:byte], byte, word32)
	byte bLoc3B_786 = SLICE(a5_238, byte, 0)
	word24 nLoc3B_1154 = SEQ(wLoc3A_1153, bLoc3B_786)
	branch s5_1406 != 0<32> l23050A0C
l23050A0C:
	branch (CONVERT(Mem298[s2_10 + 1<i32>:byte], byte, word32) & 0x10<32>) == 0<32> l23050A16
l23050A14:
	s10_179 = 4<32>
l23050A16:
	word32 a5_1539
	a3_118 = bt_addr_le_copy(fp + -58<i32>, s5_1406, out a4, out a5_1539)
	word32 a5_330 = CONVERT(Mem315[s0_204 + 112<i32>:byte], byte, word32)
	byte bLoc3C_787 = SLICE(s10_179, byte, 0)
	a5_238 = a5_330 & 64<i32>
	dwLoc3C_1151 = SEQ(wLoc3A_1153, bLoc3B_786, bLoc3C_787) (alias)
	branch (a5_330 & 64<i32>) == 0<32> l23050A44
l23050A2E:
	word32 a5_333 = CONVERT(Mem315[s2_10 + 1<i32>:byte], byte, word32)
	a5_238 = a5_333 & 32<i32>
	branch (a5_333 & 32<i32>) == 0<32> l23050A44
l23050A38:
	word32 a5_335 = CONVERT(bLoc3B_786, byte, word32)
	a5_238 = a5_335 | 2<i32>
	dwLoc3C_1151 = SEQ(wLoc3A_1153, SLICE(a5_335 | 2<i32>, byte, 0), bLoc3C_787) (alias)
l230509EC:
	dwLoc3C_1151 = SEQ(nLoc3B_1154, 0<8>) (alias)
l23050A44:
	word32 s4_385
	word32 a3_1517
	word32 s0_1515
	word32 s1_1516
	word32 s8_1519
	word32 a5_1518
	word32 ra_380 = bt_hci_cmd_create(ra_121, 0xF<32>, a3_118, a4, a5_238, mstatus, s7, dwArg58, dwArg98, dwArgB8, out s0_1515, out s1_1516, out a1_116, out a3_1517, out a4, out a5_1518, out s2_10, out s3, out s4_385, out s5_1406, out s6_1409, out s8_1519, out mstatus)
	branch false l230508B2
l23050A5A:
	word32 a3_404
	word32 a4_405
	word32 a5_406
	word32 a1_1520
	word32 a2_1521
	net_buf_simple_add_mem(0x200000E<32>, fp + -64<i32>, 0xF<32>, a4, out a1_1520, out a2_1521, out a3_404, out a4_405, out a5_406)
	word32 a0_418
	word32 s4_434
	word32 s8_438
	word32 a2_1524
	word32 s10_1525
	word32 s0_1522
	word32 s11_1526
	word32 s1_1523
	word32 a5_423
	word32 a3_421
	word32 ra_427 = bt_hci_cmd_send_sync(ra_380, 0x2000006<32>, s4_385 + 6<i32>, 0x2000006<32>, a3_404, a4_405, a5_406, s5_1406, mstatus, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg18, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_1522, out s1_1523, out a0_418, out a1_116, out a2_1524, out a3_421, out a4, out a5_423, out s2_10, out s3, out s4_434, out s5_1406, out s6_1409, out s7_1411, out s8_438, out s9_1426, out s10_1525, out s11_1526, out mstatus)
	word32 s1_447 = a0_418
	branch a0_418 != 0<32> l230508B2
l23050A76:
	branch s5_1406 == 0<32> l23050AFE
l23050AFE:
	word32 a4_448 = CONVERT(Mem371[s2_10 + 1<i32>:byte], byte, word32)
	word32 a0_484
	ra_427 = le_adv_update(ra_427, s9_1426, a4_448 & 1<32>, a4_448 >>u 3<u32> & 1<32>, s4_434, s6_1409, s7_1411, s8_438, mstatus, dwLoc50, 0<32>, dwLoc48, dwLoc28, dwLoc1C, dwLoc18, dwLoc14, dwLoc08, dwLoc04, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArg0164, out a0_484, out a3_421, out a4, out a5_423, out mstatus)
	s1_447 = a0_484
	branch a0_484 == 0<32> l23050A7A
l23050B1A:
l23050A7A:
	word32 a0_495
	word32 a3_498
	word32 s0_505
	word32 a5_1528
	word32 s1_1527
	word32 s4_1529
	set_advertise_enable(ra_427, s1_447, a3_421, a4, a5_423, mstatus, dwLoc40_674, dwLoc3C_1151, s2, s0, dwLoc28, dwLoc1C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg24, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_505, out s1_1527, out a0_495, out a3_498, out a4, out a5_1528, out s2_10, out s3, out s4_1529, out s5_1406, out s6_1409, out s7_1411, out mstatus)
	branch a0_495 != 0<32> l230508B2
l23050A86:
	word32 a3_534
	word32 a4_535
	word32 a5_1531
	word32 a1_1530
	word32 s4_1532
	atomic_set_bit_to(s0_505, 9<32>, (CONVERT(Mem371[s2_10 + 1<i32>:byte], byte, word32) >>u 1<i32> ^ 1<i32>) & 1<32>, a3_498, a4, mstatus, out a1_1530, out a3_534, out a4_535, out a5_1531, out s4_1532)
	word32 a3_549
	word32 a4_550
	word32 a5_1534
	word32 s4_1535
	word32 a1_1533
	atomic_set_bit_to(s0_505, 7<32>, CONVERT(Mem371[s2_10 + 1<i32>:byte], byte, word32) >>u 3<i32> & 1<32>, a3_534, a4_535, mstatus, out a1_1533, out a3_549, out a4_550, out a5_1534, out s4_1535)
	word32 a3_1536
	word32 a5_1537
	word32 s4_1538
	atomic_set_bit_to(s0_505, 8<32>, CONVERT(Mem371[s2_10 + 1<i32>:byte], byte, word32) & 1<32>, a3_549, a4_550, mstatus, out a1_116, out a3_1536, out a4, out a5_1537, out s4_1538)
l230508B0:
l230508B2:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = dwLoc4C
	a1Out = a1_116
	a3Out = s2
	a4Out = a4
	s2Out = s2_10
	s3Out = s3
	s5Out = s5_1406
	s6Out = s6_1409
	s7Out = s7_1411
	s8Out = dwArg0148
	s9Out = s9_1426
	mstatusOut = mstatus
	return dwLoc08
bt_le_adv_start_internal_exit:


word32 set_adv_channel_map(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_set_adv_channel
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
set_adv_channel_map_entry:
l23050B22:
	branch (a0 + -1<i32> & 255<i32>) >u 6<32> l23050B3C
l23050B3C:
	return 0xFFFFFFFF<32>
l23050B30:
	Mem9[0x4200FC3C<32>:byte] = SLICE(a0, byte, 0)
	return 0<32>
set_adv_channel_map_exit:


void bt_get_local_public_address(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blemesh_init
//      ble_read_local_address
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_get_local_public_address_entry:
l23050B40:
	word32 a4_27
	word32 a5_28
	bt_addr_le_copy(a0, 0x4200DD60<32>, out a4_27, out a5_28)
	return
bt_get_local_public_address_exit:


void bt_get_local_ramdon_address(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_read_local_address
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_get_local_ramdon_address_entry:
l23050B58:
	word32 a4_27
	word32 a5_28
	bt_addr_le_copy(a0, 0x4200DD69<32>, out a4_27, out a5_28)
	return
bt_get_local_ramdon_address_exit:


word32 bt_le_adv_start(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 s5, word32 s7, word32 s8, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0164, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      adv_thread
//      bt_mesh_proxy_adv_start
//      ble_start_advertise
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] s7:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0164:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s0 s1 s2 s3 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_le_adv_start_entry:
l23050B70:
	word32 a5_5 = CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32)
	branch (a5_5 & 0x10<32>) != 0<32> l23050B7C
l23050B7C:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFEA<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	mstatusOut = mstatus
	return ra
l23050B78:
l23050B78_thunk_bt_le_adv_start_internal:
	word32 a0_16
	word32 a1_17
	word32 a3_19
	word32 s0_22
	word32 s1_23
	word32 s2_24
	word32 s5_26
	word32 s6_27
	word32 s7_28
	word32 s8_29
	word32 s9_30
	word32 a4_34
	word32 s3_36
	word32 mstatus_38
	word32 ra_21 = bt_le_adv_start_internal(ra, s0, a0, a3, a5_5 & 0x10<32>, s2, s5, s7, s8, mstatus, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg010C, dwArg0164, out s0_22, out s1_23, out a0_16, out a1_17, out a3_19, out a4_34, out s2_24, out s3_36, out s5_26, out s6_27, out s7_28, out s8_29, out s9_30, out mstatus_38)
	s0Out = s0_22
	s1Out = s1_23
	a0Out = a0_16
	a1Out = a1_17
	a3Out = a3_19
	a4Out = a4_34
	s2Out = s2_24
	s3Out = s3_36
	s5Out = s5_26
	s6Out = s6_27
	s7Out = s7_28
	s8Out = s8_29
	s9Out = s9_30
	mstatusOut = mstatus_38
	return ra_21
bt_le_adv_start_exit:


word32 bt_le_adv_stop(word32 ra, word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      adv_thread
//      bt_mesh_proxy_adv_stop
//      bt_conn_disconnect
//      ble_stop_advertise
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_le_adv_stop_entry:
l23050B80:
	word32 s1_102
	word32 a0_228
	word32 a1_229
	word32 a2_230
	word32 a4_155
	word32 a3_153
	word32 a5_157
	word32 s4_181
	word32 s8_192
	word32 s1_23 = atomic_and(0x4200DDCC<32>, -513<i32>, a3, a4, mstatus, out a0_228, out a1_229, out a2_230, out a3_153, out a4_155, out a5_157, out s4_181, out s8_192)
	word32 a2_231
	branch atomic_test_bit(0x4200DDCC<32>, 6<32>, out a2_231) != 0<32> l23050BB2
l23050BB2:
	word32 a0_33
	word32 s0_43
	word32 s1_232
	ra = set_advertise_enable(ra, s1_23, a3_153, a4_155, a5_157, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg64, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_43, out s1_232, out a0_33, out a3_153, out a4_155, out a5_157, out s2, out s3, out s4_181, out s5, out s6, out s7, out mstatus)
	s1_102 = a0_33
	branch a0_33 != 0<32> l23050BA6
l23050BBC:
	word32 a2_233
	branch atomic_test_bit(s0_43, 0xA<32>, out a2_233) == 0<32> l23050BA4
l23050BC6:
	word32 a2_71
	branch atomic_test_bit(s0_43, 0xC<32>, out a2_71) == 0<32> l23050BA4
l23050BD0:
	word32 a0_234
	word32 a1_235
	word32 s11_236
	ra = le_set_private_addr.isra.19(ra, a2_71, mstatus, dwLoc10, s0, dwLoc08, dwArg04, dwArg18, dwArg24, dwArg28, dwArg2C, dwArg44, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_102, out a0_234, out a1_235, out a3_153, out a4_155, out a5_157, out s2, out s3, out s4_181, out s5, out s6, out s7, out s8_192, out s9, out s11_236, out mstatus)
l23050BA4:
	s1_102 = 0<32>
l23050BA6:
	s1Out = s1_102
	a0Out = s1_102
	a3Out = a3_153
	a4Out = a4_155
	a5Out = a5_157
	s2Out = s2
	s3Out = s3
	s4Out = s4_181
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8_192
	s9Out = s9
	mstatusOut = mstatus
	return ra
bt_le_adv_stop_exit:


word32 bt_le_scan_start(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_mesh_scan_enable
//      ble_start_scan
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s1 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_le_scan_start_entry:
l23050BD6:
	word32 s3_162 = 0x4200DD60<32>
	word32 s1_108 = a0
	word32 a1_150 = 1<32>
	word32 s0_107 = 0xFFFFFFF5<32>
	word32 a2_415
	branch atomic_test_bit(0x4200DDCC<32>, 1<32>, out a2_415) == 0<32> l23050C88
l23050BFE:
	a4 = CONVERT(Mem23[a0:byte], byte, word32)
	s0_107 = 0xFFFFFFEA<32>
	branch a4 >u 1<32> l23050C88
l23050C0A:
	word32 a5_31 = CONVERT(Mem23[a0 + 1<i32>:byte], byte, word32)
	a4 = a5_31 & -4<i32>
	branch (a5_31 & -4<i32>) != 0<32> l23050C88
l23050C14:
	a4 = CONVERT(Mem23[0x4200DDF3<32>:byte], byte, word32)
	s2 = 0x4200DDCC<32>
	branch a4 != 0<32> l23050C26
l23050C22:
	branch (a5_31 & 2<32>) != 0<32> l23050C88
l23050C26:
	word32 a2_39 = CONVERT(Mem23[a0 + 2<i32>:uint16], uint16, word32)
	word32 a4_43 = a2_39 + -4<i32> << 16<i32>
	a4 = a4_43 >>u 16<i32>
	s0_107 = 0xFFFFFFEA<32>
	branch a4_43 >>u 16<i32> >u 0x3FFFFFC<32> l23050C88
l23050C3C:
	a3 = CONVERT(Mem23[a0 + 4<i32>:uint16], uint16, word32)
	word32 a4_48 = a3 + -4<i32> << 16<i32>
	a4 = a4_48 >>u 16<i32>
	branch a4_48 >>u 16<i32> >u 0x3FFFFFC<32> l23050C88
l23050C4C:
	branch a2_39 <u a3 l23050C88
l23050C50:
	word32 a0_57
	word32 a5_62
	word32 s8_418
	word32 s4_417
	word32 a2_416
	s1_108 = atomic_or(0xFFF800<32>, 0xFFF800<32>, a3, a4_48 >>u 16<i32>, mstatus, out a0_57, out a1_150, out a2_416, out a3, out a4, out a5_62, out s4_417, out s8_418)
	s0_107 = -69<i32>
	branch (a0_57 & 0xFFF800<32>) != 0<32> l23050C88
l23050C68:
	word32 a2_419
	branch atomic_test_bit(0x4200DDCC<32>, 0xA<32>, out a2_419) == 0<32> l23050C9A
l23050C72:
	word32 a0_78
	word32 s0_432
	word32 a1_433
	word32 a5_434
	word32 s4_435
	word32 s8_436
	word32 s9_437
	ra = set_le_scan_enable(ra, a3, a4, a5_62, 0x4200DD60<32>, mstatus, dwLoc20, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg18, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_432, out s1_108, out a0_78, out a1_433, out a3, out a4, out a5_434, out s2, out s3_162, out s4_435, out s5, out s6, out s7, out s8_436, out s9_437, out s11, out mstatus)
	s0_107 = a0_78
	branch a0_78 == 0<32> l23050C9A
l23050C9A:
	word32 a3_122
	word32 a4_123
	word32 s4_427
	word32 a5_426
	word32 a4_425
	word32 a3_424
	word32 a1_423
	word32 s4_422
	word32 a5_421
	word32 a1_420
	word32 s1_140 = atomic_set_bit_to(s0_107, 0xE<32>, CONVERT(Mem23[atomic_set_bit_to(s0_107, 0xD<32>, CONVERT(Mem23[s1_108 + 1<i32>:byte], byte, word32) & 1<32>, a3, a4, mstatus, out a1_420, out a3_122, out a4_123, out a5_421, out s4_422) + 1<i32>:byte], byte, word32) >>u 1<i32> & 1<32>, a3_122, a4_123, mstatus, out a1_423, out a3_424, out a4_425, out a5_426, out s4_427)
	word32 a5_429
	word32 s8_430
	word32 s9_431
	word32 a0_149
	word32 s4_163
	word32 s0_428
	ra = start_le_scan(ra, s0_107, CONVERT(Mem23[s1_140:byte], byte, word32), CONVERT(Mem23[s1_140 + 2<i32>:uint16], uint16, word32), CONVERT(Mem23[s1_140 + 4<i32>:uint16], uint16, word32), s2, mstatus, s4, s2, s0, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, dwArg4C, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_428, out s1_108, out a0_149, out a1_150, out a3, out a4, out a5_429, out s2, out s3_162, out s4_163, out s5, out s6, out s7, out s8_430, out s9_431, out s11, out mstatus)
	s0_107 = a0_149
	branch a0_149 != 0<32> l23050C7C
l23050CCC:
	Mem180[0x4200F484<32>:word32] = s4_163
l23050C7C:
	word32 a0_438
	word32 a2_439
	word32 a5_440
	word32 s4_441
	word32 s8_442
	s1_108 = atomic_and(s0_107, 0xFF0007FF<32>, a3, a4, mstatus, out a0_438, out a1_150, out a2_439, out a3, out a4, out a5_440, out s4_441, out s8_442)
l23050C88:
	s1Out = s1_108
	a0Out = s0_107
	a1Out = a1_150
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3_162
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s11Out = s11
	mstatusOut = mstatus
	return ra
bt_le_scan_start_exit:


word32 bt_le_scan_stop(word32 ra, word32 s0, word32 a3, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_mesh_scan_disable
//      ble_stop_scan
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_le_scan_stop_entry:
l23050CD6:
	word32 a0_14
	word32 a3_17
	word32 a4_18
	word32 s4_21
	word32 s8_22
	word32 a1_159
	word32 a2_160
	word32 a5_161
	word32 s1_20 = atomic_and(s0, 0xFF0007FF<32>, a3, a4, mstatus, out a0_14, out a1_159, out a2_160, out a3_17, out a4_18, out a5_161, out s4_21, out s8_22)
	branch a0_14 << 0x14<u32> >= 0<32> l23050D06
l23050D06:
	s1Out = s1_20
	a0Out = -69<i32>
	a3Out = a3_17
	a4Out = a4_18
	s2Out = s2
	s3Out = s3
	s4Out = s4_21
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8_22
	s9Out = s9
	mstatusOut = mstatus
	return ra
l23050CF4:
	Mem30[0x4200F484<32>:word32] = 0<32>
l23050D02_thunk_bt_le_scan_update:
	word32 a0_35
	word32 a3_38
	word32 a4_39
	word32 mstatus_43
	word32 s1_45
	word32 s2_48
	word32 s3_49
	word32 s4_50
	word32 s5_51
	word32 s6_52
	word32 s7_53
	word32 s8_54
	word32 s9_55
	word32 s0_162
	word32 a5_163
	word32 ra_44 = bt_le_scan_update(ra, s0, a3_17, a4_18, 0x4200F000<32>, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg54, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s0_162, out s1_45, out a0_35, out a3_38, out a4_39, out a5_163, out s2_48, out s3_49, out s4_50, out s5_51, out s6_52, out s7_53, out s8_54, out s9_55, out mstatus_43)
	s1Out = s1_45
	a0Out = a0_35
	a3Out = a3_38
	a4Out = a4_39
	s2Out = s2_48
	s3Out = s3_49
	s4Out = s4_50
	s5Out = s5_51
	s6Out = s6_52
	s7Out = s7_53
	s8Out = s8_54
	s9Out = s9_55
	mstatusOut = mstatus_43
	return ra_44
bt_le_scan_stop_exit:


word32 bt_set_tx_pwr(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_set_tx_pwr
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_set_tx_pwr_entry:
l23050D10:
	branch (a0 & 255<i32>) >u 0x14<32> l23050D68
l23050D68:
	a0Out = 0x12<32>
	a3Out = a3
	return ra
l23050D1A:
	word32 a3_21
	word32 a4_22
	word32 a5_23
	word32 a4_35
	word32 mstatus_39
	word32 s1_42
	word32 s5_46
	word32 t1_226
	word32 a0_227
	word32 a1_228
	word32 a2_229
	word32 s0_230
	word32 a1_231
	word32 a5_232
	word32 s2_233
	word32 s3_234
	word32 s4_235
	word32 s6_236
	word32 s8_237
	word32 a3_156
	word32 ra_170 = bt_hci_cmd_create(memset(ra, fp + 0xFFFFFFEC<32>, 0<32>, 1<32>, out t1_226, out a0_227, out a1_228, out a2_229, out a3_21, out a4_22, out a5_23), 1<32>, a3_21, a4_22, a5_23, mstatus, dwArg74, dwArg88, dwArgC8, dwArgE8, out s0_230, out s1_42, out a1_231, out a3_156, out a4_35, out a5_232, out s2_233, out s3_234, out s4_235, out s5_46, out s6_236, out s8_237, out mstatus_39)
	word32 a0_147 = -55<i32>
	branch false l23050D5E
l23050D46:
	word32 a3_64
	word32 a4_65
	word32 a5_66
	word32 a1_238
	word32 a2_239
	net_buf_simple_add_mem(0xFFFFC69<32>, fp + 0xFFFFFFEC<32>, 1<32>, a4_35, out a1_238, out a2_239, out a3_64, out a4_65, out a5_66)
	word32 s0_240
	word32 s1_241
	word32 a1_242
	word32 a2_243
	word32 a4_244
	word32 a5_245
	word32 s2_246
	word32 s3_247
	word32 s4_248
	word32 s5_249
	word32 s6_250
	word32 s7_251
	word32 s8_252
	word32 s9_253
	word32 s10_254
	word32 s11_255
	word32 mstatus_256
	ra_170 = bt_hci_cmd_send_sync(ra_170, 0xFFFFC61<32>, s1_42 + -927<i32>, 0xFFFFC61<32>, a3_64, a4_65, a5_66, s5_46, mstatus_39, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg48, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_240, out s1_241, out a0_147, out a1_242, out a2_243, out a3_156, out a4_244, out a5_245, out s2_246, out s3_247, out s4_248, out s5_249, out s6_250, out s7_251, out s8_252, out s9_253, out s10_254, out s11_255, out mstatus_256)
l23050D5E:
	a0Out = a0_147
	a3Out = a3_156
	return ra_170
bt_set_tx_pwr_exit:


word32 bt_buf_get_rx_avail_cnt(word32 a3, word32 a4, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_onchiphci_rx_packet_handler
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
bt_buf_get_rx_avail_cnt_entry:
l23050D6C:
	word32 a3_16
	word32 a4_17
	word32 a0_14 = k_queue_get_cnt(0x4200EF3C<32>, a3, a4, mstatus, out a3_16, out a4_17)
	word32 a5_19 = CONVERT(Mem10[0x4200EF4A<32>:uint16], uint16, word32)
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_19
	return a0_14 + a5_19
bt_buf_get_rx_avail_cnt_exit:


word32 bt_buf_get_rx(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArgA4, word32 dwArgB8, word32 dwArgF8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      net_buf_unref
//      bl_onchiphci_rx_packet_handler
//      bt_buf_get_cmd_complete
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +00A4:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut: a1 a2 a3 a4 mstatus ra s1 s2 s4 s5
// Trashed: a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_buf_get_rx_entry:
l23050D90:
	word32 a0_20
	word32 a3_23
	word32 a4_24
	word32 a5_25
	word32 mstatus_28
	word32 s1_31
	word32 s2_32
	word32 s4_34
	word32 s5_35
	word32 s8_104
	word32 s6_103
	word32 s3_102
	word32 s0_101
	word32 a1_21
	word32 ra_29 = net_buf_alloc_fixed(ra, a1, a3, a4, a5, s5, mstatus, dwArgA4, dwArgB8, dwArgF8, dwArg0118, out s0_101, out s1_31, out a0_20, out a1_21, out a3_23, out a4_24, out a5_25, out s2_32, out s3_102, out s4_34, out s5_35, out s6_103, out s8_104, out mstatus_28)
	branch a0_20 == 0<32> l23050DB6
l23050DAA:
	a1_21 = net_buf_simple_reserve(1<32>, a5_25)
	Mem50[a0_20 + 20<i32>:byte] = SLICE(s1_31, byte, 0)
l23050DB6:
	s1Out = s1_31
	a1Out = a1_21
	a2Out = dwArg10
	a3Out = a3_23
	a4Out = a4_24
	s2Out = s2_32
	s4Out = s4_34
	s5Out = s5_35
	mstatusOut = mstatus_28
	return ra_29
bt_buf_get_rx_exit:


word32 bt_buf_get_cmd_complete(word32 ra, word32 a1, word32 a3, word32 a4, word32 s5, word32 mstatus, word32 dwArgA4, word32 dwArgB8, word32 dwArgF8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_onchiphci_rx_packet_handler
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +00A4:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a2 a3 a4 mstatus ra s0 s1 s2 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_buf_get_cmd_complete_entry:
l23050DC2:
	word32 a2_125
	word32 a4_126
	word32 a5_127
	irq_lock(a4, mstatus, out a2_125, out a4_126, out a5_127)
	word32 s0_18 = Mem9[0x4200DE04<32>:int32]
	Mem19[0x4200DE04<32>:word32] = 0<32>
	word32 a4_22
	word32 a5_23
	word32 a3_21 = irq_unlock(a3, mstatus, out a4_22, out a5_23)
	branch s0_18 != 0<32> l23050DF2
l23050DF2:
	Mem27[s0_18 + 20<i32>:byte] = 1<8>
	Mem28[s0_18 + 12<i32>:word16] = 0<16>
	word32 a1_31 = net_buf_simple_reserve(1<32>, 1<32>)
	s0Out = <invalid>
	s1Out = s1
	a0Out = s0_18
	a1Out = a1_31
	a2Out = dwArg44
	a3Out = a3_21
	a4Out = a4_22
	s2Out = s2
	s4Out = s4
	s5Out = s5
	mstatusOut = mstatus
	return ra
l23050DE6:
l23050DEE_thunk_bt_buf_get_rx:
	word32 a1_42
	word32 a2_43
	word32 a3_44
	word32 a4_45
	word32 mstatus_49
	word32 s1_51
	word32 s2_52
	word32 s4_54
	word32 s5_55
	word32 ra_50 = bt_buf_get_rx(ra, a1, a3_21, a4_22, a5_23, s5, mstatus, dwArgA4, dwArgB8, dwArgF8, dwArg0118, out s1_51, out a1_42, out a2_43, out a3_44, out a4_45, out s2_52, out s4_54, out s5_55, out mstatus_49)
	s0Out = <invalid>
	s1Out = s1_51
	a0Out = 1<32>
	a1Out = a1_42
	a2Out = a2_43
	a3Out = a3_44
	a4Out = a4_45
	s2Out = s2_52
	s4Out = s4_54
	s5Out = s5_55
	mstatusOut = mstatus_49
	return ra_50
bt_buf_get_cmd_complete_exit:


word32 bt_pub_key_gen(word32 ra, word32 a0, word32 a3, word32 s5, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_mesh_pb_gatt_close
//      bt_smp_init
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_pub_key_gen_entry:
l23050E10:
	word32 a5_140
	word32 a4_139
	word32 a3_138
	word32 s1_141
	word32 s2_108
	branch (CONVERT(Mem12[0x4200DDA2<32>:byte], byte, word32) & 6<32>) == 6<32> l23050E4C
l23050E4C:
	branch Mem12[0x4200F478<32>:int32] == 0<32> l23050E72
l23050E72:
	Mem22[a0:word32] = 0x4200F478<32>
l23050E5E:
	word32 a0_24 = Mem12[a3:word32]
l23050E60:
	branch a3 == 6<32> l23050E74
l23050E66:
	word32 a5_29 = Mem12[0xA<32>:word32]
	branch true l23050E6E
l23050E6E:
l23050E6A:
	Mem32[a0_24 + 4<i32>:word32] = a5_29
l23050E74:
	word32 a0_43
	word32 a2_368
	word32 s8_370
	word32 a1_367
	word32 s4_369
	s1_141 = atomic_or(0x4200DDCC<32>, 32<i32>, a3, 6<32>, mstatus, out a0_43, out a1_367, out a2_368, out a3_138, out a4_139, out a5_140, out s4_369, out s8_370)
	s2_108 = 0<32>
	branch (a0_43 & 32<i32>) != 0<32> l23050E3E
l23050E8A:
	word32 s4_374
	word32 a3_60
	word32 a4_61
	word32 a5_62
	word32 a0_371
	word32 a2_373
	word32 a1_372
	word32 s8_375
	atomic_and(0x4200DDCC<32>, 0xFFFFFFEF<32>, a3_138, a4_139, mstatus, out a0_371, out a1_372, out a2_373, out a3_60, out a4_61, out a5_62, out s4_374, out s8_375)
	word32 a0_79
	word32 s0_89
	word32 a1_376
	word32 a2_377
	word32 s2_378
	word32 s4_379
	word32 s6_380
	word32 s7_381
	word32 s8_382
	word32 s9_383
	word32 s10_384
	word32 s11_385
	ra = bt_hci_cmd_send_sync(ra, 0x4200DDCC<32>, 0x2000025<32>, 0<32>, a3_60, a4_61, a5_62, s5, mstatus, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg44, dwArg58, dwArg64, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s0_89, out s1_141, out a0_79, out a1_376, out a2_377, out a3_138, out a4_139, out a5_140, out s2_378, out s3, out s4_379, out s5, out s6_380, out s7_381, out s8_382, out s9_383, out s10_384, out s11_385, out mstatus)
	s2_108 = a0_79
	branch a0_79 == 0<32> l23050E3E
l23050EA4:
	word32 a3_116
	word32 a4_117
	word32 s1_386
	word32 a0_387
	word32 a1_388
	word32 a2_389
	word32 a5_390
	word32 a7_391
	word32 s4_392
	word32 s6_393
	word32 s7_394
	word32 s8_395
	word32 s9_396
	word32 s10_397
	word32 s11_398
	word32 t4_399
	ra = printf(ra, 0x230BB1FC<32>, a3_138, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_386, out a0_387, out a1_388, out a2_389, out a3_116, out a4_117, out a5_390, out a7_391, out s2_108, out s3, out s4_392, out s5, out s6_393, out s7_394, out s8_395, out s9_396, out s10_397, out s11_398, out t4_399)
	word32 a0_400
	word32 a1_401
	word32 a2_402
	word32 s4_403
	word32 s8_404
	s1_141 = atomic_and(s0_89, -33<i32>, a3_116, a4_117, mstatus, out a0_400, out a1_401, out a2_402, out a3_138, out a4_139, out a5_140, out s4_403, out s8_404)
	Mem145[s1_141:word32] = 0<32>
l23050E2E:
	word32 a0_354
	word32 a2_356
	word32 a1_355
	word32 a7_357
	word32 s2_358
	word32 s4_359
	word32 s6_360
	word32 s7_361
	word32 s8_362
	word32 s9_363
	word32 s10_364
	word32 s11_365
	word32 t4_366
	ra = printf(ra, 0x230BB1D8<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_141, out a0_354, out a1_355, out a2_356, out a3_138, out a4_139, out a5_140, out a7_357, out s2_358, out s3, out s4_359, out s5, out s6_360, out s7_361, out s8_362, out s9_363, out s10_364, out s11_365, out t4_366)
	s2_108 = -35<i32>
l23050E3E:
	0<32> = dwArg38
	s1Out = s1_141
	a0Out = s2_108
	a3Out = a3_138
	a4Out = a4_139
	a5Out = a5_140
	s2Out = s2_108
	s3Out = s3
	s5Out = s5
	mstatusOut = mstatus
	return ra
bt_pub_key_gen_exit:


word32 bt_pub_key_get(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prov_pub_key
//      send_pub_key
//      smp_init
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a5 t3
// Preserved: sp
bt_pub_key_get_entry:
l23050EC0:
	word32 a5_12 = 0<32>
	word32 a2_27
	branch atomic_test_bit(0x4200DDCC<32>, 4<32>, out a2_27) == 0<32> l23050EDE
l23050ED6:
	a5_12 = 0x420167E4<32>
l23050EDE:
	a5Out = a5_12
	return a5_12
bt_pub_key_get_exit:


void bt_dh_key_gen(word32 ra, word32 s1, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pub_key_ready
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_dh_key_gen_entry:
l23050EE6:
	word32 s0_8 = Mem5[a5:word32]
	branch a5 == 0<32> l23050F10
l23050F10:
	word32 a2_233
	branch atomic_test_bit(0x4200DDCC<32>, 5<32>, out a2_233) != 0<32> l23050EFE
l23050F26:
	word32 a2_234
	branch atomic_test_bit(0x4200DDCC<32>, 4<32>, out a2_234) == 0<32> l23050F00
l23050F34:
	Mem34[s0_8:word32] = a1
	word32 a4_44
	word32 mstatus_48
	word32 s0_50
	word32 s2_52
	word32 s3_53
	word32 s5_55
	word32 s8_241
	word32 s6_240
	word32 s4_239
	word32 a5_238
	word32 a3_237
	word32 a1_236
	word32 s1_235
	word32 ra_49 = bt_hci_cmd_create(ra, 64<i32>, a3, a4, -49<i32>, mstatus, dwArg74, dwArg88, dwArgC8, dwArgE8, out s0_50, out s1_235, out a1_236, out a3_237, out a4_44, out a5_238, out s2_52, out s3_53, out s4_239, out s5_55, out s6_240, out s8_241, out mstatus_48)
	branch true l23050F54
l23050F54:
	word32 a4_73
	word32 a5_74
	word32 a3_78
	word32 a7_247
	word32 a6_246
	word32 a2_245
	word32 a1_244
	word32 a5_243
	word32 a1_242
	memcpy(net_buf_simple_add(0x200002E<32>, 64<i32>, a4_44, out a1_242, out a5_243), s2_52, 64<i32>, out a1_244, out a2_245, out a3_78, out a4_73, out a5_74, out a6_246, out a7_247)
	word32 a0_89
	word32 s0_99
	word32 s1_248
	word32 a1_249
	word32 a2_250
	word32 a3_251
	word32 a4_252
	word32 a5_253
	word32 s2_254
	word32 s3_255
	word32 s4_256
	word32 s5_257
	word32 s6_258
	word32 s7_259
	word32 s8_260
	word32 s9_261
	word32 s10_262
	word32 s11_263
	word32 mstatus_264
	bt_hci_cmd_send_sync(ra_49, s0_50, s3_53 + 38<i32>, 0x2000026<32>, a3_78, a4_73, a5_74, s5_55, mstatus_48, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg48, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_99, out s1_248, out a0_89, out a1_249, out a2_250, out a3_251, out a4_252, out a5_253, out s2_254, out s3_255, out s4_256, out s5_257, out s6_258, out s7_259, out s8_260, out s9_261, out s10_262, out s11_263, out mstatus_264)
	branch a0_89 == 0<32> l23050F00
l23050F78:
	Mem119[s0_99:word32] = 0<32>
l23050F4A:
	Mem120[s0_50:word32] = 0<32>
l23050EFE:
l23050F00:
	return
bt_dh_key_gen_exit:


void sys_slist_remove(word32 a1, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __l2cap_lookup_ident
//      l2cap_remove_rx_cid
//      bt_l2cap_chan_remove
// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a2
// Preserved: sp
sys_slist_remove_entry:
l23050F7E:
	word32 a2_5 = Mem0[a5:word32]
	branch a1 != 0<32> l23050F92
l23050F92:
	Mem7[a5:word32] = a1
	word32 a0_8 = Mem7[a5 + 4<i32>:word32]
	branch a5 != a2_5 l23050F8C
l23050F9A:
	Mem9[a1 + 4<i32>:word32] = a0_8
l23050F82:
	word32 a0_11 = Mem0[a4 + 4<i32>:word32]
	Mem12[a5:word32] = a0_11
	branch a4 != a2_5 l23050F8C
l23050F8A:
	Mem13[a5 + 4<i32>:word32] = a0_11
l23050F8C:
	Mem15[a2_5:word32] = 0<32>
	return
sys_slist_remove_exit:


word32 net_buf_frags_len(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_le_send
//      l2cap_chan_le_send_sdu
//      l2cap_chan_le_recv_seg
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
net_buf_frags_len_entry:
l23050F9E:
	word32 a5_4 = a0
	word32 a0_10 = 0<32>
l23050FA2:
	branch a5_4 != 0<32> l23050FA6
l23050FA6:
	a4 = CONVERT(Mem0[a5_4 + 12<i32>:uint16], uint16, word32)
	a5_4 = Mem0[a5_4:word32]
	a0_10 = a0_10 + a4
l23050FA4:
	a4Out = a4
	a5Out = a5_4
	return a0_10
net_buf_frags_len_exit:


word32 get_ident(ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_le_param_update
//      l2cap_chan_send_credits.isra.10
//      l2cap_le_conn_req
//      bt_l2cap_chan_disconnect
// MayUse: 
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
get_ident_entry:
l23050FB0:
	word32 a4_10 = CONVERT(Mem0[0x4200F48C<32>:byte], byte, word32) + 1<32> & 255<i32>
	branch a4_10 == 0<32> l23050FCE
l23050FCE:
	a4_10 = 1<32>
l23050FC4:
	Mem12[0x4200F48C<32>:byte] = SLICE(a4_10, byte, 0)
	word32 a0_13 = CONVERT(Mem12[0x4200F48C<32>:byte], byte, word32)
	a4Out = a4_10
	a5Out = 0x4200F48C<32>
	return a0_13
get_ident_exit:


void __l2cap_lookup_ident(word32 s0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] s0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: s0 sp
__l2cap_lookup_ident_entry:
l23050FD2:
	branch s0 == 0<32> l23050FFA
l23050FDC:
	word32 s0_11 = s0 + 0xFFFFFFF8<32>
	word32 a5_10 = 0<32>
l23050FE0:
	branch s0_11 == 0<32> l23050FFA
l23050FE2:
	word32 a4_13 = CONVERT(Mem7[s0_11 + 60<i32>:byte], byte, word32)
	branch a4_13 != a1 l23051004
l23051004:
	word32 s0_15 = Mem7[a4_13 + 8<i32>:word32]
	branch a4_13 == 0<32> l23051012
l23051012:
l23051008:
	a5_10 = s0_15 + 8<i32>
	s0_11 = a4_13 + -8<i32>
l23050FEA:
	branch a2 == 0<32> l23050FFA
l23050FEC:
	sys_slist_remove(a5_10, a4_13, a5_10)
l23050FFA:
	return
__l2cap_lookup_ident_exit:


void l2cap_server_lookup_psm(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
l2cap_server_lookup_psm_entry:
l23051016:
	word32 a5_11 = Mem0[0x4200F490<32>:int32]
l2305101E:
	branch a5_11 == 0<32> l23051024
l23051020:
	word32 a5_7 = a5_11 + 0xFFFFFFF8<32>
	branch a5_7 != 0<32> l23051028
l23051028:
	branch CONVERT(Mem0[a5_7:uint16], uint16, word32) == a0 l23051024
l23051030:
	a5_11 = Mem0[a5_7 + 8<i32>:word32]
l23051024:
	return
l2cap_server_lookup_psm_exit:


void l2cap_remove_rx_cid(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: s0 sp
l2cap_remove_rx_cid_entry:
l23051034:
	branch CONVERT(SLICE(a1 + -64<i32>, word16, 0), word16, word32) >u 63<i32> l2305106C
l2305104C:
	branch true l2305106C
l23051050:
	word32 s0_15 = 0xFFFFFFF8<32>
	word32 a5_16 = 0<32>
l23051054:
	branch s0_15 == 0<32> l2305106C
l23051056:
	word32 a4_19 = CONVERT(Mem10[s0_15 + 64<i32>:uint16], uint16, word32)
	word32 a2_20 = s0_15 + 8<i32>
	branch a4_19 != a1 l23051076
l23051076:
	word32 s0_22 = Mem10[s0_15 + 8<i32>:word32]
	branch s0_22 == 0<32> l2305106C
l2305107A:
	s0_15 = s0_22 + 0xFFFFFFF8<32>
	a5_16 = a2_20
l23051062:
	sys_slist_remove(a5_16, a4_19, a5_16)
l2305106C:
	return
l2cap_remove_rx_cid_exit:


void l2cap_chan_sdu_sent(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: sp
l2cap_chan_sdu_sent_entry:
l23051080:
	word32 a1_5 = Mem0[a5 + 4<i32>:word32]
	word32 t1_6 = Mem0[a5 + 20<i32>:int32]
	branch t1_6 == 0<32> l2305108E
l2305108E:
	return
l2305108A:
	call t1_6 (retsize: 0;)
		uses: a0:a1_5,a5:a5
	return
l2cap_chan_sdu_sent_exit:


void l2cap_alloc_frag(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: sp
l2cap_alloc_frag_entry:
l23051090:
	word32 a1_5 = Mem0[a5 + 4<i32>:word32]
	call Mem0[a5 + 12<i32>:int32] (retsize: 0;)
		uses: a0:a1_5,a1:a1_5,a5:a5
	return
l2cap_alloc_frag_exit:


void l2cap_connected()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
l2cap_connected_entry:
l2305109A:
	return
l2cap_connected_exit:


void l2cap_chan_destroy(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
l2cap_chan_destroy_entry:
l2305109C:
	word32 ra_106
	word32 a0_16
	word32 a1_24
	word32 s6_338
	word32 s4_336
	word32 s2_334
	word32 a2_332
	word32 s8_339
	word32 s5_337
	word32 s3_335
	word32 a5_333
	word32 a4_101
	word32 a3_100
	word32 s1_21 = k_delayed_work_cancel(a0 + 0x10<32>, a3, a4, mstatus, dwArg24, dwArg28, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_16, out a1_24, out a2_332, out a3_100, out a4_101, out a5_333, out s2_334, out s3_335, out s4_336, out s5_337, out s6_338, out s8_339)
	word32 s0_107 = Mem12[a0_16 + 116<i32>:word32]
	ra_106 = ra
	branch a0_16 == 0<32> l230510B8
l230510B0:
	word32 s8_350
	word32 s5_348
	word32 s3_346
	word32 a5_344
	word32 a1_342
	word32 s1_340
	word32 s6_349
	word32 s4_347
	word32 s2_345
	word32 a2_343
	word32 a0_341
	ra_106 = net_buf_unref(ra, s1_21, a0_16, a1_24, a4_101, mstatus, dwLoc10, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_107, out s1_340, out a0_341, out a1_342, out a2_343, out a3_100, out a4_101, out a5_344, out s2_345, out s3_346, out s4_347, out s5_348, out s6_349, out s8_350, out mstatus)
	Mem64[s0_107 + 116<i32>:word32] = 0<32>
l230510B8:
	word32 s1_108 = s0_107 + 104<i32>
l230510BC:
	word32 a0_77
	word32 a1_78
	word32 a2_385
	word32 a5_386
	word32 s2_387
	word32 s3_388
	word32 s4_389
	word32 s8_390
	word32 a4_129
	word32 a3_130
	word32 s1_85 = net_buf_get(ra_106, s0_107, s1_108, 0<32>, a3_100, a4_101, mstatus, dwArg28, dwArgD8, dwArg0118, out a0_77, out a1_78, out a2_385, out a3_130, out a4_129, out a5_386, out s2_387, out s3_388, out s4_389, out s8_390)
	branch a0_77 != 0<32> l230510EE
l230510EE:
	word32 s3_356
	word32 a5_354
	word32 a1_352
	word32 s5_358
	word32 s6_359
	word32 s8_360
	word32 s4_357
	word32 s2_355
	word32 a2_353
	word32 a0_351
	ra_106 = net_buf_unref(ra_106, s1_85, a0_77, a1_78, a4_129, mstatus, dwLoc10, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_107, out s1_108, out a0_351, out a1_352, out a2_353, out a3_100, out a4_101, out a5_354, out s2_355, out s3_356, out s4_357, out s5_358, out s6_359, out s8_360, out mstatus)
l230510C6:
	word32 s1_122 = s0_107 + 140<i32>
l230510CA:
	word32 a0_133
	word32 a1_134
	word32 a4_137
	word32 a2_391
	word32 a3_392
	word32 a5_393
	word32 s2_394
	word32 s3_395
	word32 s4_396
	word32 s8_397
	word32 s1_141 = net_buf_get(ra_106, s0_107, s1_122, 0<32>, a3_130, a4_129, mstatus, dwArg28, dwArgD8, dwArg0118, out a0_133, out a1_134, out a2_391, out a3_392, out a4_137, out a5_393, out s2_394, out s3_395, out s4_396, out s8_397)
	branch a0_133 != 0<32> l230510F4
l230510F4:
	word32 a2_363
	word32 a5_364
	word32 s2_365
	word32 s3_366
	word32 a1_362
	word32 a0_361
	word32 s4_367
	word32 s5_368
	word32 s6_369
	word32 s8_370
	ra_106 = net_buf_unref(ra_106, s1_141, a0_133, a1_134, a4_137, mstatus, dwLoc10, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_107, out s1_122, out a0_361, out a1_362, out a2_363, out a3_130, out a4_129, out a5_364, out s2_365, out s3_366, out s4_367, out s5_368, out s6_369, out s8_370, out mstatus)
l230510D4:
	branch a0_133 == 0<32> l230510E4
l230510D8:
	word32 s0_189
	word32 s1_371
	word32 a0_372
	word32 a1_373
	word32 a2_374
	word32 a3_375
	word32 a4_376
	word32 a5_377
	word32 s2_378
	word32 s3_379
	word32 s4_380
	word32 s5_381
	word32 s6_382
	word32 s8_383
	word32 mstatus_384
	net_buf_unref(ra_106, s1_141, a0_133, a1_134, a4_137, mstatus, dwLoc10, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_189, out s1_371, out a0_372, out a1_373, out a2_374, out a3_375, out a4_376, out a5_377, out s2_378, out s3_379, out s4_380, out s5_381, out s6_382, out s8_383, out mstatus_384)
	Mem204[s0_189 + 120<i32>:word32] = 0<32>
	Mem205[s0_189 + 124<i32>:word16] = 0<16>
l230510E4:
	return
l2cap_chan_destroy_exit:


void l2cap_chan_tx_init(word32 ra, word32 a0, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
l2cap_chan_tx_init_entry:
l230510FA:
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 a3_29
	word32 a4_30
	word32 a5_31
	word32 t1_82
	word32 a0_83
	word32 a1_84
	word32 a2_85
	word32 s1_86
	word32 a0_87
	word32 a1_88
	word32 s2_89
	word32 s3_90
	word32 s4_91
	word32 s5_92
	word32 s6_93
	word32 s7_94
	word32 s8_95
	word32 ra_41 = k_sem_init(memset(ra, a0 + 84<i32>, 0<32>, 0x14<32>, out t1_82, out a0_83, out a1_84, out a2_85, out a3_16, out a4_17, out a5_18), a0, a0 + 92<i32>, 0<32>, 0xFFFFFFFF<32>, a3_16, a4_17, a5_18, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgD8, dwArg0118, out s1_86, out a0_87, out a1_88, out a3_29, out a4_30, out a5_31, out s2_89, out s3_90, out s4_91, out s5_92, out s6_93, out s7_94, out s8_95)
l23051126_thunk_k_queue_init:
	word32 a3_96
	word32 a4_97
	word32 a5_98
	word32 s2_99
	word32 s3_100
	k_queue_init(ra_41, 0x14<32>, a3_29, a4_30, a5_31, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out a3_96, out a4_97, out a5_98, out s2_99, out s3_100)
	return
l2cap_chan_tx_init_exit:


void l2cap_chan_rx_init(word32 ra, word32 s0, word32 a0, word32 mstatus, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, word32 dwArgE8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
l2cap_chan_rx_init_entry:
l2305112A:
	branch CONVERT(Mem0[a0 + 66<i32>:uint16], uint16, word32) != 0<32> l23051138
l23051130:
	Mem7[a0 + 66<i32>:word16] = 0xF5<16>
l23051138:
	word32 a5_10 = CONVERT(Mem9[a0 + 70<i32>:uint16], uint16, word32)
	word32 a4_11 = CONVERT(Mem9[a0 + 66<i32>:uint16], uint16, word32)
	branch a5_10 != 0<32> l23051158
l23051142:
	word32 a5_14
	a0 = Mem9[a5_10 + 4<i32>:word32]
	branch Mem9[a5_10 + 12<i32>:word32] == 0<32> l23051178
l23051178:
	a5_14 = 9<32>
l23051148:
	a5_14 = a4_11 + 246<i32> ^ 247<i32>
l23051154:
	Mem20[a0 + 70<i32>:word16] = SLICE(a5_14, word16, 0)
l23051158:
	word32 a5_24 = a4_11
	branch a4_11 <=u 245<i32> l23051166
l23051162:
	a5_24 = 245<i32>
l23051166:
	word32 a5_27 = a5_24 + 2<32>
	Mem30[a0 + 68<i32>:word16] = SLICE(a5_27, word16, 0)
	word32 a0_33 = a0 + 72<i32>
l23051174_thunk_k_sem_init:
	word32 s7_125
	word32 s5_123
	word32 s4_122
	word32 s8_126
	word32 s6_124
	word32 a4_118
	word32 a5_119
	word32 s3_121
	word32 s2_120
	word32 s1_114
	word32 a0_115
	word32 a3_117
	word32 a1_116
	k_sem_init(ra, s0, a0_33, 0<32>, 0xFFFFFFFF<32>, 245<i32>, a4_11, a5_27, mstatus, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, dwArgE8, dwArg0128, out s1_114, out a0_115, out a1_116, out a3_117, out a4_118, out a5_119, out s2_120, out s3_121, out s4_122, out s5_123, out s6_124, out s7_125, out s8_126)
	return
l2cap_chan_rx_init_exit:


void l2cap_accept(word32 ra, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
l2cap_accept_entry:
l2305117C:
	word32 a4_10
	word32 a4_6 = Mem0[a3:word32]
	branch a3 == 0<32> l230511AC
l230511AC:
	a4_10 = 0<32>
l2305118C:
	branch Mem0[a4_6 + 152<i32>:int32] == 0<32> l230511C8
l230511C8:
	a4_10 = 1<32>
l230511AE:
	word32 a4_13 = a4_10 + 152<i32>
	Mem19[0x4200DE8C<32>:word32] = a4_13 + 0x42016824<32>
	Mem22[a4_13 + 0x42016824<32>:word32] = a1
	return
l23051192:
	word32 s11_137
	word32 s10_136
	word32 s9_135
	word32 s8_134
	word32 s7_133
	word32 s6_132
	word32 s5_131
	word32 s4_130
	word32 s3_129
	word32 s2_128
	word32 a7_127
	word32 a5_126
	word32 a4_125
	word32 a3_124
	word32 a2_123
	word32 a1_122
	word32 a0_121
	word32 s1_120
	word32 t4_138
	printf(ra, 0x230BB6AC<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_120, out a0_121, out a1_122, out a2_123, out a3_124, out a4_125, out a5_126, out a7_127, out s2_128, out s3_129, out s4_130, out s5_131, out s6_132, out s7_133, out s8_134, out s9_135, out s10_136, out s11_137, out t4_138)
	return
l2cap_accept_exit:


word32 l2cap_create_le_sig_pdu.isra.7(word32 ra, word32 a3, word32 a4, word32 a5, word32 s2, word32 s5, word32 mstatus, word32 dwArg08, word32 dwArg30, word32 dwArg34, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg9C, word32 dwArgC8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_le_param_update
//      l2cap_chan_send_credits.isra.10
//      l2cap_le_conn_req
//      l2cap_send_reject
//      bt_l2cap_chan_disconnect
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
l2cap_create_le_sig_pdu.isra.7_entry:
l230511CC:
	word32 a1_130
	word32 a5_133
	word32 mstatus_34
	word32 s1_166
	word32 a1_167
	word32 a2_168
	word32 s6_169
	word32 s11_170
	word32 a4_132
	word32 a3_131
	word32 s0_137
	word32 s2_140
	word32 s3_141
	word32 s5_142
	word32 s7_144
	word32 s9_145
	word32 ra_136 = bt_conn_create_pdu_timeout(ra, 0<32>, 2000<i32>, a3, a4, a5, s5, mstatus, s2, dwArg30, dwArg34, dwArg58, dwArg74, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s0_137, out s1_166, out a1_167, out a2_168, out a3_131, out a4_132, out s2_140, out s3_141, out s5_142, out s6_169, out s7_144, out s9_145, out s11_170, out mstatus_34)
	word32 s1_56 = 0<32>
	branch false l2305120C
l2305120C:
	word32 a0_59 = net_buf_simple_add(8<32>, 4<32>, a4_132, out a1_130, out a5_133)
	Mem62[a0_59 + 2<i32>:byte] = SLICE(s0_137, byte, 0)
	Mem64[a0_59:byte] = SLICE(s2_140, byte, 0)
	Mem65[a0_59 + 1<i32>:byte] = SLICE(s3_141, byte, 0)
	Mem66[a0_59 + 3<i32>:byte] = SLICE(s0_137 >>u 8<i32>, byte, 0)
	s0_137 = s0_137 >>u 8<i32>
l230511EE:
	word32 a0_171
	word32 a2_172
	word32 a7_173
	word32 s4_174
	word32 s6_175
	word32 s8_176
	word32 s10_177
	word32 s11_178
	word32 t4_179
	ra_136 = printf(ra_136, 0x230BB728<32>, a3_131, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_56, out a0_171, out a1_130, out a2_172, out a3_131, out a4_132, out a5_133, out a7_173, out s2_140, out s3_141, out s4_174, out s5_142, out s6_175, out s7_144, out s8_176, out s9_145, out s10_177, out s11_178, out t4_179)
l230511FC:
	s0Out = s0_137
	s1Out = s1_56
	a0Out = s1_56
	a1Out = a1_130
	a3Out = a3_131
	a4Out = a4_132
	a5Out = a5_133
	s2Out = s2_140
	s3Out = s3_141
	s4Out = dwArg04
	s5Out = s5_142
	s7Out = s7_144
	s9Out = s9_145
	mstatusOut = mstatus_34
	return ra_136
l2cap_create_le_sig_pdu.isra.7_exit:


void l2cap_chan_tx_give_credits(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg74, word32 dwArg8C, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
l2cap_chan_tx_give_credits_entry:
l23051228:
	word32 s0_14 = a0
	word32 s1_15 = 0xFFFFFFF<32>
	word32 s2_16 = a0 + 92<i32>
l2305123C:
	branch CONVERT(SLICE(a1 + 0xFFFFFFFF<32>, word16, 0), word16, word32) != s1_15 l23051270
l23051270:
	word32 s11_257
	word32 s10_256
	word32 s9_255
	word32 s8_254
	word32 s7_253
	word32 s6_252
	word32 s5_251
	word32 s4_250
	word32 s3_249
	word32 a2_248
	word32 a0_247
	ra = k_sem_give(ra, s2_16, a3, a4, a5, mstatus, dwLoc0C, dwLoc08, dwArg40, dwArg44, s1, dwArg74, dwArg8C, dwArgE8, dwArg0128, dwArg0168, out s0_14, out s1_15, out a0_247, out a1, out a2_248, out a3, out a4, out a5, out s2_16, out s3_249, out s4_250, out s5_251, out s6_252, out s7_253, out s8_254, out s9_255, out s10_256, out s11_257)
l23051246:
	word32 a0_64
	word32 a5_69
	word32 s4_262
	word32 s8_263
	word32 a4_261
	word32 a3_260
	word32 a2_259
	word32 a1_258
	word32 s1_70 = atomic_or(s0_14, 1<32>, a3, a4, mstatus, out a0_64, out a1_258, out a2_259, out a3_260, out a4_261, out a5_69, out s4_262, out s8_263)
	branch (a0_64 & 1<32>) == 0<32> l2305127C
l23051256:
	word32 s0_76 = Mem75[a5_69 + 4<i32>:word32]
	word32 t1_77 = Mem75[a5_69 + 24<i32>:int32]
	branch t1_77 == 0<32> l2305127C
l2305127C:
	return
l23051260:
	word32 a5_99
	word32 t1_100
	word32 mstatus_106
	word32 a4_107
	word32 a3_108
	word32 a7_109
	word32 s3_110
	word32 s5_111
	word32 s6_112
	word32 t0_113
	word32 t4_114
	word32 t5_115
	word32 t6_116
	word32 tp_117
	word32 s10_118
	word32 s11_119
	word32 s7_120
	word32 s9_121
	call t1_77 (retsize: 0;)
		uses: a0:s0_76,a1:s1_70,a3:a3_108,a4:a4_107,a5:a5_99,a6:dwArg28,a7:a7_109,mstatus:mstatus_106,ra:ra_26,s0:s0_76,s1:s1_70,s10:s10_118,s11:s11_119,s2:s2_22,s3:s3_110,s4:dwArg04,s5:s5_111,s6:s6_112,s7:s7_120,s8:dwLoc1C,s9:s9_121,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +0040:dwArg40,Stack +0044:dwArg44,Stack +0074:dwArg74,Stack +008C:dwArg8C,Stack +00E8:dwArgE8,Stack +0128:dwArg0128,Stack +0168:dwArg0168,Stack +FFFFFFE4:dwLoc1C,Stack +FFFFFFF4:dwLoc0C,Stack +FFFFFFF8:dwLoc08,t0:t0_113,t1:t1_100,t3:dwArg00,t4:t4_114,t5:t5_115,t6:t6_116,tp:tp_117
		defs: a3:a3_108,a4:a4_107,a5:a5_99,a7:a7_109,mstatus:mstatus_106,s10:s10_118,s11:s11_119,s3:s3_110,s5:s5_111,s6:s6_112,s7:s7_120,s9:s9_121,t0:t0_113,t1:t1_100,t4:t4_114,t5:t5_115,t6:t6_116,tp:tp_117
	return
l2cap_chan_tx_give_credits_exit:


void l2cap_disconnected()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
l2cap_disconnected_entry:
l23051288:
	return
l2cap_disconnected_exit:


word32 bt_l2cap_chan_remove(word32 a1, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_rtx_timeout
//      bt_l2cap_encrypt_change
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
bt_l2cap_chan_remove_entry:
l2305128A:
	branch a5 == 0<32> l23051294
l2305128E:
	a5 = a5 + 0xFFFFFFF8<32>
	a4 = 0<32>
l23051292:
	branch a5 != 0<32> l23051296
l23051296:
	word32 a2_9 = a5 + 8<i32>
	branch a5 != a1 l230512A8
l230512A8:
	a5 = Mem0[a5 + 8<i32>:word32]
	branch a5 == 0<32> l23051294
l230512AC:
	a5 = a5 + 0xFFFFFFF8<32>
	a4 = a2_9
l2305129E:
l230512A4_thunk_sys_slist_remove:
	sys_slist_remove(a4, a4, a5)
	a5Out = a5
	return a4
l23051294:
	a5Out = a5
	return a4
bt_l2cap_chan_remove_exit:


word32 bt_l2cap_chan_del(word32 ra, word32 a4, word32 a5, word32 mstatus, word32 dwArg34, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_rtx_timeout
//      bt_l2cap_disconnected
//      bt_l2cap_encrypt_change
// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 sp
bt_l2cap_chan_del_entry:
l230512B2:
	word32 a0_11 = Mem7[a5:word32]
	word32 s0_10 = a0_11
	branch a5 == 0<32> l230512CA
l230512BE:
	a0_11 = Mem7[a5 + 4<i32>:word32]
	a5 = Mem7[a5 + 4<i32>:word32]
	branch a5 == 0<32> l230512C6
l230512C4:
	word32 a6_85
	word32 a1_83
	word32 a7_86
	word32 s3_89
	word32 s4_90
	word32 s6_92
	word32 s8_93
	word32 t0_94
	word32 t1_95
	word32 t3_96
	word32 t4_97
	word32 t5_98
	word32 t6_99
	word32 tp_100
	call a5 (retsize: 0;)
		uses: a1:a1_83,a3:a3_84,a4:a4,a5:a5_12,a6:a6_85,a7:a7_86,mstatus:mstatus,ra:ra,s0:a0_9,s1:s1_87,s2:s2_88,s3:s3_89,s4:s4_90,s5:s5_91,s6:s6_92,s8:s8_93,t0:t0_94,t1:t1_95,t3:t3_96,t4:t4_97,t5:t5_98,t6:t6_99,tp:tp_100
		defs: a0:a0_16,a1:a1_83,a3:a3_84,a5:a5_17,a6:a6_85,a7:a7_86,ra:ra_15,s0:s0_14,s1:s1_87,s2:s2_88,s3:s3_89,s4:s4_90,s5:s5_91,s6:s6_92,s8:s8_93,t0:t0_94,t1:t1_95,t3:t3_96,t4:t4_97,t5:t5_98,t6:t6_99,tp:tp_100
l230512C6:
	Mem20[s0_10:word32] = 0<32>
l230512CA:
	word32 s0_24 = Mem23[a5 + 12<i32>:word32]
	Mem25[s0_24 + 56<i32>:byte] = 0<8>
	Mem26[s0_24 + 58<i32>:word16] = 0<16>
	branch a5 == 0<32> l230512DA
l230512D6:
	word32 a1_103
	word32 a6_105
	word32 a7_106
	word32 s3_109
	word32 s4_110
	word32 s6_112
	word32 s8_113
	word32 t0_114
	word32 t1_115
	word32 t3_116
	word32 t4_117
	word32 t5_118
	word32 t6_119
	word32 tp_120
	call a5 (retsize: 0;)
		uses: a0:s0_24,a1:a1_103,a3:a3_104,a4:a4,a5:a5_21,a6:a6_105,a7:a7_106,mstatus:mstatus,ra:ra_28,s0:s0_24,s1:s1_107,s2:s2_108,s3:s3_109,s4:s4_110,s5:s5_111,s6:s6_112,s8:s8_113,t0:t0_114,t1:t1_115,t3:t3_116,t4:t4_117,t5:t5_118,t6:t6_119,tp:tp_120
		defs: a0:a0_35,a1:a1_103,a3:a3_104,a5:a5_36,a6:a6_105,a7:a7_106,s1:s1_107,s2:s2_108,s3:s3_109,s4:s4_110,s5:s5_111,s6:s6_112,s8:s8_113,t0:t0_114,t1:t1_115,t3:t3_116,t4:t4_117,t5:t5_118,t6:t6_119,tp:tp_120
l230512DA:
	word32 s0_40 = Mem26[a5 + 32<i32>:word32]
	branch a5 == 0<32> l230512EC
l230512EC:
	a0Out = a0_11
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s5Out = s5
	return s1
l230512DE:
l230512E8_thunk_k_delayed_work_del_timer:
	word32 a0_57
	word32 a3_60
	word32 a4_61
	word32 a5_62
	word32 s2_66
	word32 s5_69
	word32 s6_259
	word32 s8_260
	word32 a2_256
	word32 s3_257
	word32 s4_258
	word32 s1_65 = k_delayed_work_del_timer(s0_40 + 16<i32>, a4, a5, mstatus, dwArg34, dwArgA8, dwArgB8, dwArgE8, dwArg0128, out a0_57, out a2_256, out a3_60, out a4_61, out a5_62, out s2_66, out s3_257, out s4_258, out s5_69, out s6_259, out s8_260)
	a0Out = a0_57
	a3Out = a3_60
	a4Out = a4_61
	a5Out = a5_62
	s2Out = s2_66
	s5Out = s5_69
	return s1_65
bt_l2cap_chan_del_exit:


void l2cap_rtx_timeout(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg18, word32 dwArg34, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
l2cap_rtx_timeout_entry:
l230512F4:
	word32 a5_18
	word32 s1_90
	word32 a0_91
	word32 a1_92
	word32 a2_93
	word32 a3_94
	word32 a4_95
	word32 a7_96
	word32 s2_97
	word32 s3_98
	word32 s4_99
	word32 s5_100
	word32 s6_101
	word32 s7_102
	word32 s8_103
	word32 s9_104
	word32 s10_105
	word32 s11_106
	word32 t4_107
	word32 ra_25 = printf(ra, 0x230BB940<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_90, out a0_91, out a1_92, out a2_93, out a3_94, out a4_95, out a5_18, out a7_96, out s2_97, out s3_98, out s4_99, out s5_100, out s6_101, out s7_102, out s8_103, out s9_104, out s10_105, out s11_106, out t4_107)
	word32 a5_45
	word32 a4_44 = bt_l2cap_chan_remove(a0 + -16<i32>, a5_18, out a5_45)
l23051324_thunk_bt_l2cap_chan_del:
	word32 a0_108
	word32 a3_109
	word32 a4_110
	word32 a5_111
	word32 s2_112
	word32 s5_113
	bt_l2cap_chan_del(ra_25, a4_44, a5_45, mstatus, dwArg34, dwArgA8, dwArgB8, dwArgE8, dwArg0128, out a0_108, out a3_109, out a4_110, out a5_111, out s2_112, out s5_113)
	return
l2cap_rtx_timeout_exit:


word32 bt_l2cap_disconnected(word32 ra, word32 s0, word32 a4, word32 a5, word32 mstatus, word32 dwArg24, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      conn_update_timeout
// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0024:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_l2cap_disconnected_entry:
l23051328:
	branch a5 == 0<32> l23051358
l2305132C:
	branch a5 == 0xFFFFFFF8<32> l23051358
l23051358:
	a3Out = a3
	a4Out = a4
	return s1
l23051332:
	word32 a5_12 = Mem11[s0:word32]
	branch s0 == 0<32> l2305133E
l2305133C:
	s0 = s0 + 0xFFFFFFF8<32>
l2305133E:
	word32 a3_23
	word32 s5_152
	word32 s2_151
	word32 a0_150
	word32 s1_28 = bt_l2cap_chan_del(ra, a4, a5_12, mstatus, dwArg24, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_150, out a3_23, out a4, out a5_12, out s2_151, out s5_152)
	branch s0 == 0<32> l23051350
l23051350:
	a3Out = a3_23
	a4Out = a4
	return s1_28
bt_l2cap_disconnected_exit:
l23051344:
	branch a5_12 == 0<32> l2305134A
l23051348:
	a5_12 = a5_12 + 0xFFFFFFF8<32>
l2305134A:
	s0 = a5_12


word32 bt_l2cap_create_pdu_timeout(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg94, word32 dwArg9C, word32 dwArgA8, word32 dwArgE8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_create_pdu.isra.7
//      bt_att_create_pdu
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a2 a3 a4 mstatus ra s1 s11 s2 s3 s5 s6
// Trashed: a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_l2cap_create_pdu_timeout_entry:
l2305135A:
l2305135C_thunk_bt_conn_create_pdu_timeout:
	word32 a3_15
	word32 a4_16
	word32 mstatus_20
	word32 s1_23
	word32 s2_24
	word32 s3_25
	word32 s5_27
	word32 s6_28
	word32 a2_37
	word32 s11_39
	word32 s0_61
	word32 a1_62
	word32 s7_63
	word32 s9_64
	word32 ra_21 = bt_conn_create_pdu_timeout(ra, a0, a2, a3, a4, a5, s5, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg94, dwArg9C, dwArgA8, dwArgE8, dwArg0108, out s0_61, out s1_23, out a1_62, out a2_37, out a3_15, out a4_16, out s2_24, out s3_25, out s5_27, out s6_28, out s7_63, out s9_64, out s11_39, out mstatus_20)
	s1Out = s1_23
	a2Out = a2_37
	a3Out = a3_15
	a4Out = a4_16
	s2Out = s2_24
	s3Out = s3_25
	s5Out = s5_27
	s6Out = s6_28
	s11Out = s11_39
	mstatusOut = mstatus_20
	return ra_21
bt_l2cap_create_pdu_timeout_exit:


word32 bt_l2cap_send_cb(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg74, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_l2cap_send
//      l2cap_chan_le_send
//      smp_send.isra.9
//      smp_error
//      bt_smp_start_security
//      att_send
//      bt_att_encrypt_change
//      att_indicate
//      att_mtu_req
//      send_err_rsp.part.7
//      att_read_group_req
//      att_read_mult_req
//      att_read_req
//      att_read_type_req
//      att_find_type_req
//      att_find_info_req
//      att_signed_write_cmd
//      bt_att_req_send
// MayUse:  a0:[0..31] a1:[0..7] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_l2cap_send_cb_entry:
l23051360:
	word32 a4_27
	word32 a0_25 = net_buf_simple_push(4<32>, a5, out a4_27)
	word32 a5_29 = CONVERT(Mem23[a2 + 12<i32>:uint16], uint16, word32)
	Mem30[a0_25 + 2<i32>:byte] = SLICE(a1, byte, 0)
	word32 a5_33 = a5_29 + 0xFFFFFFFC<32> << 16<i32>
	Mem35[a0_25:byte] = SLICE(a5_33 >>u 16<i32>, byte, 0)
	Mem37[a0_25 + 1<i32>:byte] = SLICE(a5_33 >>u 24<i32>, byte, 0)
	Mem38[a0_25 + 3<i32>:byte] = SLICE(a1 >>u 8<i32>, byte, 0)
l230513B0_thunk_bt_conn_send_cb:
	word32 a0_50
	word32 a1_51
	word32 a3_53
	word32 a4_54
	word32 a5_55
	word32 s0_59
	word32 s1_60
	word32 s10_61
	word32 s11_62
	word32 s2_63
	word32 s3_64
	word32 s4_65
	word32 s5_66
	word32 s6_67
	word32 s7_68
	word32 s8_69
	word32 s9_70
	word32 mstatus_78
	word32 ra_58 = bt_conn_send_cb(ra, dwArgA4, a0, a2, a3, a4_27, a4_27, mstatus, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg54, dwArg58, s1, dwArg74, dwArg7C, dwArg88, dwArg8C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_59, out s1_60, out a0_50, out a1_51, out a3_53, out a4_54, out a5_55, out s2_63, out s3_64, out s4_65, out s5_66, out s6_67, out s7_68, out s8_69, out s9_70, out s10_61, out s11_62, out mstatus_78)
	s0Out = s0_59
	s1Out = s1_60
	a0Out = a0_50
	a1Out = a1_51
	a3Out = a3_53
	a4Out = a4_54
	a5Out = a5_55
	s2Out = s2_63
	s3Out = s3_64
	s4Out = s4_65
	s5Out = s5_66
	s6Out = s6_67
	s7Out = s7_68
	s8Out = s8_69
	s9Out = s9_70
	s10Out = s10_61
	s11Out = s11_62
	mstatusOut = mstatus_78
	return ra_58
bt_l2cap_send_cb_exit:


word32 bt_l2cap_send(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg74, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_le_param_update
//      l2cap_chan_send_credits.isra.10
//      l2cap_le_conn_req
//      l2cap_send_reject
//      l2cap_chan_le_send
//      bt_l2cap_chan_disconnect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a1 a3 a4 a5 mstatus ra s0 s1 s2 s3 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_l2cap_send_entry:
l230513B4:
l230513B8_thunk_bt_l2cap_send_cb:
	word32 a1_14
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 mstatus_21
	word32 s0_23
	word32 s1_24
	word32 s2_27
	word32 s3_28
	word32 s5_30
	word32 s6_31
	word32 s7_32
	word32 s9_34
	word32 a0_79
	word32 s4_80
	word32 s8_81
	word32 s10_82
	word32 s11_83
	word32 ra_22 = bt_l2cap_send_cb(ra, s1, a0, a1, a2, 0<32>, a5, mstatus, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg54, dwArg58, dwArg74, dwArg7C, dwArg88, dwArg8C, dwArgA4, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_23, out s1_24, out a0_79, out a1_14, out a3_16, out a4_17, out a5_18, out s2_27, out s3_28, out s4_80, out s5_30, out s6_31, out s7_32, out s8_81, out s9_34, out s10_82, out s11_83, out mstatus_21)
	s0Out = s0_23
	s1Out = s1_24
	a1Out = a1_14
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_18
	s2Out = s2_27
	s3Out = s3_28
	s5Out = s5_30
	s6Out = s6_31
	s7Out = s7_32
	s9Out = s9_34
	mstatusOut = mstatus_21
	return ra_22
bt_l2cap_send_exit:


word32 l2cap_chan_send_credits.isra.10(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg6C, word32 dwArg74, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0100, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_le_recv_seg
//      l2cap_rx_process
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a1 a4 mstatus ra s1 s2 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
l2cap_chan_send_credits.isra.10_entry:
l230513BC:
	word32 s0_17 = CONVERT(Mem15[a0 + 70<i32>:uint16], uint16, word32)
	word32 s2_18 = a0
	branch a1 >=u s0_17 l230513D6
l230513D4:
	s0_17 = a1
l230513D6:
	word32 s1_25 = CONVERT(SLICE(s0_17, word16, 0), word16, word32)
	word32 s3_26 = 0xFFFFFFF<32>
	word32 s4_28 = a0 + 72<i32>
	ra_36 = ra
l230513E4:
	word32 ra_36
	branch CONVERT(SLICE(s1_25 + 0xFFFFFFFF<32>, word16, 0), word16, word32) != s3_26 l2305143C
l2305143C:
	word32 s11_347
	word32 s9_345
	word32 s10_346
	word32 s7_343
	word32 s8_344
	word32 a2_341
	word32 s6_342
	word32 a0_339
	word32 a1_340
	word32 s0_338
	ra_36 = k_sem_give(ra_36, s4_28, a3, a4, a5, mstatus, s0, dwLoc18, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArgD8, dwArg0118, dwArg0158, out s0_338, out s1_25, out a0_339, out a1_340, out a2_341, out a3, out a4, out a5, out s2_18, out s3_26, out s4_28, out s5, out s6_342, out s7_343, out s8_344, out s9_345, out s10_346, out s11_347)
l230513EE:
	word32 a4_72
	word32 a5_73
	get_ident(out a4_72, out a5_73)
	word32 a0_81
	word32 a1_82
	word32 a4_85
	word32 mstatus_89
	word32 s0_91
	word32 s1_92
	word32 s2_95
	word32 s7_100
	word32 s9_102
	word32 s4_351
	word32 s5_352
	word32 a5_349
	word32 s3_350
	word32 a3_348
	word32 ra_90 = l2cap_create_le_sig_pdu.isra.7(ra_36, a3, a4_72, a5_73, s2_18, s5, mstatus, dwLoc28, dwArg00, dwArg04, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg6C, dwArg98, dwArgB8, out s0_91, out s1_92, out a0_81, out a1_82, out a3_348, out a4_85, out a5_349, out s2_95, out s3_350, out s4_351, out s5_352, out s7_100, out s9_102, out mstatus_89)
	branch a0_81 == 0<32> l23051444
l23051444:
	0<32> = dwArg0128
	s1Out = s1_92
	a1Out = a1_82
	a4Out = a4_85
	s2Out = s2_95
	s7Out = s7_100
	s9Out = s9_102
	mstatusOut = mstatus_89
	return ra_90
l23051400:
	word32 a1_353
	word32 a5_354
	word32 a0_120 = net_buf_simple_add(a0_81 + 8<32>, 4<32>, a4_85, out a1_353, out a5_354)
	word32 a5_123 = CONVERT(Mem119[s2_95 + 64<i32>:uint16], uint16, word32)
	Mem124[a0_120 + 2<i32>:byte] = SLICE(s0_91, byte, 0)
	Mem126[a0_120:byte] = SLICE(a5_123, byte, 0)
	Mem128[a0_120 + 1<i32>:byte] = SLICE(a5_123 >>u 8<i32>, byte, 0)
	Mem129[a0_120 + 3<i32>:byte] = SLICE(s0_91 >>u 8<i32>, byte, 0)
	word32 a0_132 = Mem129[s2_95:int32]
	0<32> = dwArg0128
l23051438_thunk_bt_l2cap_send:
	word32 a1_140
	word32 a4_143
	word32 mstatus_147
	word32 s1_150
	word32 s2_153
	word32 s7_158
	word32 s9_160
	word32 s5_359
	word32 s6_360
	word32 a5_357
	word32 s3_358
	word32 s0_355
	word32 a3_356
	word32 ra_148 = bt_l2cap_send(ra_90, s1_92, a0_132, 5<32>, dwArg0100, a5_123 >>u 8<i32>, mstatus_89, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, a0_81, dwArg58, dwArg74, dwArg7C, dwArg88, dwArg8C, dwArgA4, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_355, out s1_150, out a1_140, out a3_356, out a4_143, out a5_357, out s2_153, out s3_358, out s5_359, out s6_360, out s7_158, out s9_160, out mstatus_147)
	s1Out = s1_150
	a1Out = a1_140
	a4Out = a4_143
	s2Out = s2_153
	s7Out = s7_158
	s9Out = s9_160
	mstatusOut = mstatus_147
	return ra_148
l2cap_chan_send_credits.isra.10_exit:


word32 l2cap_le_conn_req(word32 ra, word32 a0, word32 a3, word32 s2, word32 s5, word32 mstatus, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_l2cap_encrypt_change
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a5 mstatus ra s1 s2 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
l2cap_le_conn_req_entry:
l23051454:
	word32 a0_136
	word32 a4_11
	word32 a5_12
	Mem14[a0 + 60<i32>:byte] = SLICE(get_ident(out a4_11, out a5_12), byte, 0)
	word32 a0_21
	word32 a4_25
	word32 s0_31
	word32 a1_212
	word32 s3_213
	word32 s4_214
	word32 s7_215
	word32 s9_216
	word32 a3_110
	word32 a5_112
	word32 mstatus_115
	word32 s1_118
	word32 s2_121
	word32 s5_124
	word32 ra_116 = l2cap_create_le_sig_pdu.isra.7(ra, a3, a4_11, a5_12, s2, s5, mstatus, dwLoc18, dwArg10, dwArg14, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg7C, dwArgA8, dwArgC8, out s0_31, out s1_118, out a0_21, out a1_212, out a3_110, out a4_25, out a5_112, out s2_121, out s3_213, out s4_214, out s5_124, out s7_215, out s9_216, out mstatus_115)
	branch a0_21 == 0<32> l230514E4
l230514E4:
	a0_136 = 0xFFFFFFF4<32>
l23051470:
	word32 a1_217
	word32 a5_218
	word32 a0_55 = net_buf_simple_add(a0_21 + 8<32>, 0xA<32>, a4_25, out a1_217, out a5_218)
	word32 a5_58 = CONVERT(Mem54[s0_31 + 58<i32>:uint16], uint16, word32)
	Mem61[a0_55:byte] = SLICE(a5_58, byte, 0)
	Mem63[a0_55 + 1<i32>:byte] = SLICE(a5_58 >>u 8<i32>, byte, 0)
	word32 a5_64 = CONVERT(Mem63[s0_31 + 64<i32>:uint16], uint16, word32)
	Mem65[a0_55 + 2<i32>:byte] = SLICE(a5_64, byte, 0)
	Mem67[a0_55 + 3<i32>:byte] = SLICE(a5_64 >>u 8<i32>, byte, 0)
	word32 a5_68 = CONVERT(Mem67[s0_31 + 66<i32>:uint16], uint16, word32)
	Mem69[a0_55 + 4<i32>:byte] = SLICE(a5_68, byte, 0)
	Mem71[a0_55 + 5<i32>:byte] = SLICE(a5_68 >>u 8<i32>, byte, 0)
	word32 a5_72 = CONVERT(Mem71[s0_31 + 68<i32>:uint16], uint16, word32)
	Mem73[a0_55 + 6<i32>:byte] = SLICE(a5_72, byte, 0)
	Mem75[a0_55 + 7<i32>:byte] = SLICE(a5_72 >>u 8<i32>, byte, 0)
	word32 a5_76 = CONVERT(Mem75[s0_31 + 70<i32>:uint16], uint16, word32)
	Mem77[a0_55 + 8<i32>:byte] = SLICE(a5_76, byte, 0)
	Mem79[a0_55 + 9<i32>:byte] = SLICE(a5_76 >>u 8<i32>, byte, 0)
	word32 a0_81
	word32 a5_85
	word32 s1_87
	word32 a1_219
	word32 a2_220
	word32 a3_221
	word32 a4_222
	word32 s2_223
	word32 s3_224
	word32 s4_225
	word32 s5_226
	word32 s6_227
	word32 s8_228
	k_delayed_work_submit(0x9FFFC40<32>, a3_110, a4_25, mstatus_115, dwLoc1C, dwLoc18, dwArg04, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s1_87, out a0_81, out a1_219, out a2_220, out a3_221, out a4_222, out a5_85, out s2_223, out s3_224, out s4_225, out s5_226, out s6_227, out s8_228)
	word32 s0_229
	word32 a1_230
	word32 a4_231
	word32 s3_232
	word32 s6_233
	word32 s7_234
	word32 s9_235
	ra_116 = bt_l2cap_send(ra_116, s1_87, a0_81, 5<32>, a0_21, a5_85, mstatus_115, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_229, out s1_118, out a1_230, out a3_110, out a4_231, out a5_112, out s2_121, out s3_232, out s5_124, out s6_233, out s7_234, out s9_235, out mstatus_115)
	a0_136 = 0<32>
l230514DC:
	s1Out = s1_118
	a0Out = a0_136
	a3Out = a3_110
	a5Out = a5_112
	s2Out = s2_121
	s5Out = s5_124
	mstatusOut = mstatus_115
	return ra_116
l2cap_le_conn_req_exit:


word32 bt_l2cap_encrypt_change(word32 ra, word32 a1, word32 a3, word32 a5, word32 s5, word32 mstatus, word32 dwArg38, ptr32 & s1Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_encrypt_key_refresh_complete
//      hci_encrypt_change
// MayUse:  a1:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0038:[0..31]
// LiveOut: mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_l2cap_encrypt_change_entry:
l230514E8:
	word32 a0_102 = Mem0[a5 + 64<i32>:word32]
	branch a5 != 0<32> l23051534
l23051534:
	word32 sp_101 = fp + 0xFFFFFFF0<32>
	word32 s1_105 = a1
	word32 s0_134 = a5 + -8<i32>
	word32 s2_106 = 1<32>
l2305151E:
	branch s0_134 != 0<32> l230514EE
l230514EE:
	word32 a5_21 = CONVERT(Mem14[s0_134 + 56<i32>:byte], byte, word32)
	branch a5_21 != s2_106 l2305150C
l230514F6:
	a5_21 = CONVERT(Mem14[s0_134 + 60<i32>:byte], byte, word32)
	branch a5_21 != 0<32> l2305150C
l230514FC:
	branch s1_105 == 0<32> l2305152C
l2305152C:
	ra = l2cap_le_conn_req(ra, s0_134, a3, s2_106, s5, mstatus, Mem14[sp_101 + 4<i32>:word32], Mem14[sp_101 + 16<i32>:word32], Mem14[sp_101 + 20<i32>:word32], Mem14[sp_101 + 32<i32>:word32], Mem14[sp_101 + 36<i32>:word32], Mem14[sp_101 + 40<i32>:word32], Mem14[sp_101 + 48<i32>:word32], Mem14[sp_101 + 52<i32>:word32], Mem14[sp_101 + 56<i32>:word32], Mem14[sp_101 + 84<i32>:word32], Mem14[sp_101 + 88<i32>:word32], Mem14[sp_101 + 92<i32>:word32], Mem14[sp_101 + 104<i32>:word32], Mem14[sp_101 + 120<i32>:word32], Mem14[sp_101 + 124<i32>:word32], Mem14[sp_101 + 132<i32>:word32], Mem14[sp_101 + 136<i32>:word32], Mem14[sp_101 + 152<i32>:word32], Mem14[sp_101 + 168<i32>:word32], Mem14[sp_101 + 184<i32>:word32], Mem14[sp_101 + 200<i32>:word32], Mem14[sp_101 + 216<i32>:word32], Mem14[sp_101 + 232<i32>:word32], Mem14[sp_101 + 248<i32>:word32], Mem14[sp_101 + 264<i32>:word32], Mem14[sp_101 + 280<i32>:word32], Mem14[sp_101 + 296<i32>:word32], Mem14[sp_101 + 312<i32>:word32], out s1_105, out a0_102, out a3, out a5_21, out s2_106, out s5, out mstatus)
l230514FE:
	word32 a5_67
	word32 a4_312
	s1_105 = bt_l2cap_chan_del(ra, bt_l2cap_chan_remove(Mem14[a0_102:word32], a5_21, out a5_67), a5_67, mstatus, Mem14[sp_101 + 52<i32>:word32], Mem14[sp_101 + 168<i32>:word32], Mem14[sp_101 + 184<i32>:word32], Mem14[sp_101 + 232<i32>:word32], Mem14[sp_101 + 296<i32>:word32], out a0_102, out a3, out a4_312, out a5_21, out s2_106, out s5)
l2305150C:
	word32 a3_113
	word32 mstatus_112
	word32 s5_111
	word32 s0_104 = Mem14[a5_21 + 4<i32>:word32]
	word32 a5_94 = Mem14[a5_21 + 8<i32>:word32]
	branch a5_94 == 0<32> l23051518
l23051512:
	word32 a2_109
	word32 tp_110
	word32 a4_114
	word32 a6_115
	word32 a7_116
	word32 s10_117
	word32 s11_118
	word32 s3_119
	word32 s4_120
	word32 s6_121
	word32 s7_122
	word32 s8_123
	word32 s9_124
	word32 t0_125
	word32 t1_126
	word32 t3_127
	word32 t4_128
	word32 t5_129
	word32 t6_130
	call a5_94 (retsize: 0;)
		uses: a0:s0_93,a1:s1_95,a2:a2_109,a3:a3_113,a4:a4_114,a5:a5_94,a6:a6_115,a7:a7_116,mstatus:mstatus_112,ra:ra_99,s0:s0_93,s1:s1_95,s10:s10_117,s11:s11_118,s2:s2_98,s3:s3_119,s4:s4_120,s5:s5_111,s6:s6_121,s7:s7_122,s8:s8_123,s9:s9_124,t0:t0_125,t1:t1_126,t3:t3_127,t4:t4_128,t5:t5_129,t6:t6_130,tp:tp_110
		defs: a0:a0_102,a2:a2_109,a3:a3_113,a4:a4_114,a6:a6_115,a7:a7_116,mstatus:mstatus_112,ra:ra_107,s0:s0_104,s1:s1_105,s10:s10_117,s11:s11_118,s2:s2_106,s3:s3_119,s4:s4_120,s5:s5_111,s6:s6_121,s7:s7_122,s8:s8_123,s9:s9_124,sp:sp_101,t0:t0_125,t1:t1_126,t3:t3_127,t4:t4_128,t5:t5_129,t6:t6_130,tp:tp_110
	s5 = s5_111
	mstatus = mstatus_112
	a3 = a3_113
l23051518:
	word32 s0_133 = Mem14[s0_104 + 8<i32>:word32]
	branch s0_133 == 0<32> l23051520
l2305151C:
	s0_134 = s0_133 + 0xFFFFFFF8<32>
l23051520:
	0<32> = dwArg38
	s1Out = s1_105
	mstatusOut = mstatus
	return ra
l230514EC:
	s1Out = s1
	mstatusOut = mstatus
	return ra
bt_l2cap_encrypt_change_exit:


void l2cap_send_reject(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_recv
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
l2cap_send_reject_entry:
l23051548:
	word32 a0_30
	word32 a4_34
	word32 mstatus_38
	word32 s0_40
	word32 s3_45
	word32 s4_46
	word32 s5_47
	word32 s1_238
	word32 a1_239
	word32 a3_240
	word32 a5_241
	word32 s2_242
	word32 s7_243
	word32 s9_244
	word32 ra_39 = l2cap_create_le_sig_pdu.isra.7(ra, a3, a4, a5, s2, a0, mstatus, s2, dwArg10, dwArg14, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, dwArg7C, dwArgA8, dwArgC8, out s0_40, out s1_238, out a0_30, out a1_239, out a3_240, out a4_34, out a5_241, out s2_242, out s3_45, out s4_46, out s5_47, out s7_243, out s9_244, out mstatus_38)
	branch a0_30 == 0<32> l230515AC
l230515AC:
	return
l2305156C:
	word32 a1_245
	word32 a5_110
	word32 a0_71 = net_buf_simple_add(a0_30 + 8<i32>, 2<32>, a4_34, out a1_245, out a5_110)
	Mem74[a0_71:byte] = SLICE(s0_40, byte, 0)
	Mem76[a0_71 + 1<i32>:byte] = SLICE(s0_40 >>u 8<i32>, byte, 0)
	branch s3_45 == 0<32> l23051592
l23051588:
	word32 a1_246
	word32 a2_247
	word32 a3_248
	word32 a4_249
	net_buf_simple_add_mem(a0_30 + 8<i32>, s3_45, s4_46, a4_34, out a1_246, out a2_247, out a3_248, out a4_249, out a5_110)
l23051592:
l230515A8_thunk_bt_l2cap_send:
	word32 s0_250
	word32 s1_251
	word32 a1_252
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 s2_256
	word32 s3_257
	word32 s5_258
	word32 s6_259
	word32 s7_260
	word32 s9_261
	word32 mstatus_262
	bt_l2cap_send(ra_39, a0_30, s5_47, 5<32>, a0_30, a5_110, mstatus_38, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg54, dwArg58, dwArg74, dwArg7C, dwArg88, dwArg8C, dwArgA4, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_250, out s1_251, out a1_252, out a3_253, out a4_254, out a5_255, out s2_256, out s3_257, out s5_258, out s6_259, out s7_260, out s9_261, out mstatus_262)
	return
l2cap_send_reject_exit:


word32 l2cap_chan_le_send(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_le_send_sdu
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s0 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
l2cap_chan_le_send_entry:
l230515BE:
	word32 s3_288
	word32 s6_113 = a0 + 92<i32>
	word32 a0_33
	word32 s3_43
	word32 a5_1003
	word32 s4_1004
	word32 s8_1005
	word32 s1_1002
	word32 s2_109
	word32 a4_101
	word32 a1_200
	word32 a3_100
	word32 s0_175 = k_sem_take(a0 + 92<i32>, 0<32>, a2, a3, a4, a5, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_1002, out a0_33, out a1_200, out a3_100, out a4_101, out a5_1003, out s2_109, out s3_43, out s4_1004, out s8_1005)
	branch a0_33 != 0<32> l23051740
l23051740:
	s3_288 = 0xFFFFFFF5<32>
l230515E6:
	word32 s1_132
	a4_101 = CONVERT(Mem26[s2_109 + 88<i32>:uint16], uint16, word32)
	branch a4_101 <u CONVERT(Mem26[s0_175 + 12<i32>:uint16], uint16, word32) + s3_43 l23051646
l230515F4:
	word32 a5_56 = s3_43 + 9<i32> << 16<i32>
	branch net_buf_simple_headroom(a4_101) <u a5_56 >>u 16<i32> l23051646
l2305160A:
	s0_175 = Mem26[a5_56 >>u 16<i32>:word32]
	branch a5_56 >>u 16<i32> != 0<32> l23051646
l23051646:
	word32 a5_63
	net_buf_pool_get(CONVERT(Mem26[s0_175 + 6<i32>:byte], byte, word32), out a5_63)
	word32 a0_71
	word32 a3_74
	word32 a4_75
	word32 a5_76
	word32 s5_86
	word32 s4_1008
	word32 s1_1006
	word32 s6_1009
	word32 a1_1007
	word32 s8_1010
	word32 s3_110
	word32 s0_107
	ra = net_buf_alloc_fixed(ra, 0<32>, a3_100, a4_101, a5_63, s5, mstatus, dwArg94, dwArgA8, dwArgE8, dwArg0108, out s0_107, out s1_1006, out a0_71, out a1_1007, out a3_74, out a4_75, out a5_76, out s2_109, out s3_110, out s4_1008, out s5_86, out s6_1009, out s8_1010, out mstatus)
	branch a0_71 == 0<32> l230516CE
l230516CE:
	word32 s1_1020
	word32 a2_1021
	word32 s9_1023
	word32 s7_1022
	word32 s11_1024
	ra = bt_conn_create_pdu_timeout(ra, a0_71, 0xFFFFFFFF<32>, a3_74, a4_75, a5_76, s5_86, mstatus, s2, dwArg30, dwArg34, dwArg58, dwArg74, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s0_107, out s1_1020, out a1_200, out a2_1021, out a3_100, out a4_101, out s2_109, out s3_110, out s5, out s6_113, out s7_1022, out s9_1023, out s11_1024, out mstatus)
	branch a0_71 != 0<32> l23051660
l230516DA:
l23051658:
	net_buf_simple_reserve(9<32>, a5_76)
l23051660:
	s1_132 = a0_71
	branch s3_110 == 0<32> l2305167A
l23051668:
	word32 a5_139
	word32 a4_1025
	word32 a5_1027
	word32 a4_1026
	net_buf_simple_add_le16(a0_71 + 8<i32>, CONVERT(SLICE(net_buf_frags_len(s0_107, out a4_1025, out a5_139), word16, 0), word16, word32), a5_139, out a4_1026, out a5_1027)
l2305167A:
	word32 a0_159
	word32 a4_150
	word32 a0_149 = net_buf_simple_tailroom(a0_71 + 8<i32>, out a4_150)
	word32 a5_158 = CONVERT(Mem26[s2_109 + 88<i32>:uint16], uint16, word32) - s3_110
	branch a0_149 >=u a5_158 l230516DC
l230516DC:
	a0_159 = a5_158 << 0x10<u32>
l2305168C:
	a0_159 = net_buf_simple_tailroom(a0_71 + 8<i32>, out a4_150) << 16<i32>
l23051694:
	word32 a1_168 = CONVERT(Mem26[s0_107 + 12<i32>:uint16], uint16, word32)
	word32 a0_170 = a0_159 >>u 16<i32>
	branch a0_170 >=u a1_168 l230516A0
l2305169E:
	a1_168 = a0_170
l230516A0:
	word32 s4_173 = a1_168 << 0x10<u32>
	s0_175 = Mem26[a1_168 + 8<i32>:word32]
	word32 a2_1047
	word32 a5_1049
	word32 a3_1048
	word32 a1_1046
	net_buf_simple_add_mem(a0_71 + 8<i32>, a1_168, s4_173 >>u 0x10<u32>, a4_150, out a1_1046, out a2_1047, out a3_1048, out a4_101, out a5_1049)
	word32 a5_1050
	net_buf_simple_pull(s0_175 + 8<i32>, s4_173 >>u 0x10<u32>, out a1_200, out a5_1050)
l2305160E:
	branch s3_43 == 0<32> l23051624
l23051612:
	word32 a5_205
	word32 a4_1011
	a1_200 = net_buf_simple_push_le16(CONVERT(SLICE(net_buf_frags_len(s0_175, out a4_1011, out a5_205), word16, 0), word16, word32), a5_205, out a4_101)
l23051624:
	net_buf_ref(s0_175)
	s1_132 = s0_175
	branch s0_175 != 0<32> l230516BC
l230516BC:
	word32 a0_222 = Mem26[s2_109:int32]
	branch a0_222 != 0<32> l230516E2
l230516E2:
	word32 a3_276
	word32 a4_277
	word32 a5_235
	word32 a1_228 = CONVERT(Mem26[s2_109 + 84<i32>:uint16], uint16, word32)
	branch s0_175 == s1_132 l230516F8
l230516F2:
	a5_235 = CONVERT(Mem26[s0_175 + 12<i32>:uint16], uint16, word32)
	branch a5_235 != 0<32> l23051738
l230516F8:
	a5_235 = Mem26[Mem26[s2_109 + 4<i32>:int32] + 20<i32>:word32]
	branch a5_235 == 0<32> l23051738
l23051738:
	word32 s1_1029
	word32 s9_1032
	word32 a5_1030
	word32 s7_1031
	word32 s0_1028
	ra = bt_l2cap_send(ra, s1_132, a0_222, a1_228, s1_132, a5_235, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, s1, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_1028, out s1_1029, out a1_200, out a3_276, out a4_277, out a5_1030, out s2_109, out s3_288, out s5, out s6_113, out s7_1031, out s9_1032, out mstatus)
l23051700:
	word32 s11_1042
	word32 s10_1041
	word32 s8_1039
	word32 s9_1040
	word32 s7_1038
	word32 s0_1033
	word32 s1_1034
	word32 a0_1035
	word32 a5_1036
	word32 s4_1037
	ra = bt_l2cap_send_cb(ra, s1_132, a0_222, a1_228, s1_132, 0x23051080<32>, a5_235, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, s1, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_1033, out s1_1034, out a0_1035, out a1_200, out a3_276, out a4_277, out a5_1036, out s2_109, out s3_288, out s4_1037, out s5, out s6_113, out s7_1038, out s8_1039, out s9_1040, out s10_1041, out s11_1042, out mstatus)
l23051710:
	word32 a2_1051
	branch k_sem_count_get(s6_113, a3_276, a4_277, mstatus, out a2_1051, out a3_100, out a4_101) != 0<32> l23051630
l2305171A:
	word32 s0_346 = s2_109 + 52<i32>
	word32 a2_351
	word32 s4_356
	word32 a5_1044
	word32 s8_1045
	word32 a0_1043
	word32 s1_355 = atomic_and(s0_346, 0xFFFFFFFE<32>, a3_100, a4_101, mstatus, out a0_1043, out a1_200, out a2_351, out a3_100, out a4_101, out a5_1044, out s4_356, out s8_1045)
	word32 a5_361 = Mem26[Mem26[s2_109 + 4<i32>:int32] + 24<i32>:word32]
	branch a5_361 == 0<32> l23051630
l23051730:
	word32 a7_388
	word32 t0_389
	word32 t1_390
	word32 t4_391
	word32 t5_392
	word32 t6_393
	word32 s10_394
	word32 s11_395
	word32 s7_396
	word32 s9_397
	call a5_361 (retsize: 0;)
		uses: a0:s2_345,a1:s0_346,a2:a2_351,a3:a3_352,a4:a4_353,a5:a5_361,a7:a7_388,mstatus:mstatus_337,ra:ra_365,s0:s0_346,s1:s1_355,s10:s10_394,s11:s11_395,s2:s2_345,s3:s3_364,s4:s4_356,s5:s5_366,s6:s6_335,s7:s7_396,s9:s9_397,Stack +0014:dwLoc0C,Stack +0028:dwArg08,Stack +0030:dwArg10,Stack +0034:dwArg14,Stack +0040:dwArg20,Stack +0044:dwArg24,Stack +0048:dwArg28,Stack +0050:dwArg30,Stack +0054:dwArg34,Stack +0058:dwArg38,Stack +0074:dwArg54,Stack +0078:dwArg58,Stack +007C:dwArg5C,Stack +0094:dwArg74,Stack +0098:dwArg78,Stack +009C:dwArg7C,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +00B4:dwArg94,Stack +00B8:dwArg98,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00E8:dwArgC8,Stack +00F8:dwArgD8,Stack +0108:dwArgE8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,Stack +0138:dwArg0118,Stack +0148:dwArg0128,Stack +0158:dwArg0138,Stack +0178:dwArg0158,t0:t0_389,t1:t1_390,t4:t4_391,t5:t5_392,t6:t6_393
		defs: a1:a1_373,a3:a3_386,a4:a4_381,a7:a7_388,mstatus:mstatus_387,ra:ra_375,s10:s10_394,s11:s11_395,s2:s2_372,s3:s3_374,s5:s5_378,s6:s6_369,s7:s7_396,s9:s9_397,t0:t0_389,t1:t1_390,t4:t4_391,t5:t5_392,t6:t6_393
l230516C2:
	word32 s4_1018
	word32 s1_1013
	word32 a2_1015
	word32 a0_1014
	word32 s8_1019
	word32 s3_1017
	word32 a5_1016
	word32 s0_1012
	ra = net_buf_unref(ra, s1_132, s0_175, a1_200, a4_101, mstatus, s6, s4, s2, dwArg08, dwArg58, s3, dwArg78, dwArg84, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_1012, out s1_1013, out a0_1014, out a1_200, out a2_1015, out a3_100, out a4_101, out a5_1016, out s2_109, out s3_1017, out s4_1018, out s5, out s6_113, out s8_1019, out mstatus)
	s3_288 = -54<i32>
l2305162E:
	s3_288 = 0xFFFFFFF4<32>
l23051630:
	0<32> = dwArgA8
	s0Out = s1
	a0Out = s3_288
	a1Out = a1_200
	a3Out = a3_100
	a4Out = a4_101
	s2Out = s2_109
	s3Out = s3_288
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6_113
	mstatusOut = mstatus
	return ra
l2cap_chan_le_send_exit:


void l2cap_chan_le_send_sdu(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 s2, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..15] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
l2cap_chan_le_send_sdu_entry:
l23051744:
	word16 wLoc22_261 = SLICE(a2, word16, 0)
	word32 a1_146 = Mem15[s0:word32]
	word32 a5_26 = CONVERT(wLoc22_261, word16, word32)
	word32 s2_109 = a0
	word32 s3_110 = a1_146
	word32 a4_574
	word32 a5_575
	word32 s4_111 = a5_26 + net_buf_frags_len(s0, out a4_574, out a5_575)
	branch CONVERT(Mem22[a0 + 86<i32>:uint16], uint16, word32) < s4_111 l230517AC
l23051776:
	word32 s0_152
	word32 a4_102 = CONVERT(Mem22[s0 + 12<i32>:uint16], uint16, word32)
	s0_152 = s0
	branch a4_102 != 0<32> l23051782
l2305177C:
	s0_152 = Mem22[a4_102:word32]
	branch a4_102 == 0<32> l23051782
l23051780:
	s0_152 = a4_102
l23051782:
	word32 ra_107
	word32 s1_108
	ra_107 = ra
	branch a5_26 != 0<32> l230517C2
l23051784:
	word32 a0_54
	ra_107 = l2cap_chan_le_send(ra, -36<i32>, a0, 2<32>, a3, a4_102, a5_26, a0, a1_146, s4_111, s5, s6, mstatus, dwLoc28, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg4C, dwArg54, dwArg58, ra, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s0_152, out a0_54, out a1_146, out a3, out a4_102, out s2_109, out s3_110, out s4_111, out s5, out s6, out mstatus)
	s1_108 = a0_54
	branch a0_54 >= 0<32> l230517BE
l230517BE:
	wLoc22_261 = SLICE(a0_54, word16, 0)
l230517C2:
	s1_108 = 0<32>
l230517C4:
	branch CONVERT(wLoc22_261, word16, word32) < s4_111 l230517D4
l230517D4:
	word32 a5_103 = CONVERT(Mem87[s0_152 + 12<i32>:uint16], uint16, word32)
	branch a5_103 != 0<32> l230517E4
l230517DA:
	ra_107 = net_buf_frag_del(ra_107, s0_152, s1_108, 0<32>, a4_102, a5_103, mstatus, dwLoc18, dwArg38, dwArg58, ra, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s1_108, out a3, out a4_102, out a5_103, out s2_109, out s3_110, out s4_111, out s5, out s6, out mstatus)
l230517E4:
	word32 a0_145
	ra_107 = l2cap_chan_le_send(ra_107, s1_108, s2_109, 0<32>, a3, a4_102, a5_103, s2_109, s3_110, s4_111, s5, s6, mstatus, dwLoc28, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg4C, dwArg54, dwArg58, ra, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s0_152, out a0_145, out a1_146, out a3, out a4_102, out s2_109, out s3_110, out s4_111, out s5, out s6, out mstatus)
	s1_108 = a0_145
	branch a0_145 < 0<32> l23051794
l230517F4:
	wLoc22_261 = SLICE(CONVERT(wLoc22_261, word16, word32) + a0_145, word16, 0)
l230517CC:
	word32 s0_583
	word32 s1_584
	word32 a2_587
	word32 s6_595
	word32 s8_596
	word32 mstatus_597
	word32 s5_594
	word32 a5_590
	word32 s3_592
	word32 s4_593
	word32 s2_591
	word32 a3_588
	word32 a4_589
	word32 a0_585
	word32 a1_586
	net_buf_unref(ra_107, s1_108, s0_152, a1_146, a4_102, mstatus, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_583, out s1_584, out a0_585, out a1_586, out a2_587, out a3_588, out a4_589, out a5_590, out s2_591, out s3_592, out s4_593, out s5_594, out s6_595, out s8_596, out mstatus_597)
l23051794:
	branch s1_108 != 0xFFFFFFF5<32> l230517A8
l2305179A:
	word32 a2_577
	word32 a3_578
	word32 a5_580
	word32 a6_581
	word32 a1_576
	word32 a4_579
	word32 a7_582
	memcpy(s0_152 + 20<i32>, fp + -34<i32>, 2<32>, out a1_576, out a2_577, out a3_578, out a4_579, out a5_580, out a6_581, out a7_582)
l230517A8:
	Mem230[s3_110:word32] = s0_152
l230517AC:
	0<32> = dwArg0128
	return
l2cap_chan_le_send_sdu_exit:


word32 bt_l2cap_le_lookup_tx_cid(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_ident_sent
//      att_req_sent
//      att_rsp_sent
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
bt_l2cap_le_lookup_tx_cid_entry:
l23051800:
	word32 a0_11 = Mem0[a0 + 64<i32>:word32]
l23051802:
	branch a0_11 == 0<32> l23051808
l23051804:
	a0_11 = a0_11 + 0xFFFFFFF8<32>
	branch a0_11 != 0<32> l2305180A
l2305180A:
	branch CONVERT(Mem0[a0_11 + 84<i32>:uint16], uint16, word32) == a1 l23051808
l23051812:
	a0_11 = Mem0[a0_11 + 8<i32>:word32]
l23051808:
	return a0_11
bt_l2cap_le_lookup_tx_cid_exit:


word32 bt_l2cap_le_lookup_rx_cid(word32 a0, word32 a1, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_add
//      bt_l2cap_recv
//      smp_chan_get
//      att_chan_get
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
bt_l2cap_le_lookup_rx_cid_entry:
l23051816:
	word32 a0_11 = Mem0[a0 + 64<i32>:word32]
l23051818:
	branch a0_11 == 0<32> l2305181E
l2305181A:
	a0_11 = a0_11 + 0xFFFFFFF8<32>
	branch a0_11 != 0<32> l23051820
l23051820:
	a5 = CONVERT(Mem0[a0_11 + 64<i32>:uint16], uint16, word32)
	branch a5 == a1 l2305181E
l23051828:
	a0_11 = Mem0[a0_11 + 8<i32>:word32]
l2305181E:
	a5Out = a5
	return a0_11
bt_l2cap_le_lookup_rx_cid_exit:


word32 l2cap_chan_add(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg74, word32 dwArg78, word32 dwArg9C, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_l2cap_connected
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
l2cap_chan_add_entry:
l2305182C:
	word32 a3_152
	word32 a5_126
	word32 a4_127
	word32 s2_103
	word32 s1_128
	branch a1 == 0<32> l23051848
l23051842:
	branch CONVERT(Mem15[a1 + 64<i32>:uint16], uint16, word32) != 0<32> l23051860
l23051848:
	word32 s1_23 = 64<i32>
l23051850:
	branch a1 == 0<32> l230518D4
l23051852:
	word32 a5_376
	branch bt_l2cap_le_lookup_rx_cid(a0, s1_23, out a5_376) != 0<32> l230518D4
l230518D4:
	s1_23 = CONVERT(SLICE(s1_23 + 1<32>, word16, 0), word16, word32)
	branch s1_23 != 128<i32> l23051850
l230518DE:
	word32 s1_377
	word32 a7_381
	word32 a0_378
	word32 a1_379
	word32 s3_382
	word32 a2_380
	word32 s6_385
	word32 s8_387
	word32 s7_386
	word32 t4_391
	word32 s5_384
	word32 s4_383
	word32 s10_389
	word32 s11_390
	word32 s9_388
	ra = printf(ra, 0x230BB6D8<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_377, out a0_378, out a1_379, out a2_380, out a3_152, out a4_127, out a5_126, out a7_381, out s2_103, out s3_382, out s4_383, out s5_384, out s6_385, out s7_386, out s8_387, out s9_388, out s10_389, out s11_390, out t4_391)
	s1_128 = 0<32>
l2305185C:
	Mem76[a1 + 64<i32>:word16] = SLICE(s1_23, word16, 0)
l23051860:
	word32 a0_371
	word32 a4_372
	word32 s3_104
	word32 s5_375
	word32 a5_373
	word32 s4_374
	k_delayed_work_init(ra, a1, a1 + 16<i32>, a3, a4, mstatus, dwArg74, dwArgA8, dwArgC8, dwArg0108, out a0_371, out a3_152, out a4_372, out a5_373, out s2_103, out s3_104, out s4_374, out s5_375)
	Mem110[a1 + 8<i32>:word32] = 0<32>
	word32 a4_111 = Mem110[s2_103 + 68<i32>:int32]
	branch a4_111 != 0<32> l230518EE
l230518EE:
	Mem113[a1 + 8<i32>:word32] = a4_111
	Mem114[s2_103 + 68<i32>:word32] = a1 + 8<i32>
l2305187E:
	Mem115[s2_103 + 68<i32>:word32] = a1 + 8<i32>
	Mem116[s2_103 + 64<i32>:word32] = a1 + 8<i32>
l23051886:
	word32 a5_119 = CONVERT(Mem118[a1 + 64<i32>:uint16], uint16, word32)
	Mem121[a1:word32] = s2_103
	Mem123[a1 + 12<i32>:word32] = s3_104
	word32 a5_125 = a5_119 + -64<i32> << 16<i32>
	a5_126 = a5_125 >>u 16<i32>
	a4_127 = 63<i32>
	s1_128 = 1<32>
	branch a5_125 >>u 16<i32> >u 63<i32> l230518C2
l230518A4:
	word32 a3_137
	word32 a4_138
	word32 a5_139
	k_work_init(a1 + 128<i32>, a3_152, 63<i32>, mstatus, out a3_137, out a4_138, out a5_139)
	word32 s3_392
	s1_128 = k_queue_init(ra, 0x14<32>, a3_137, a4_138, a5_139, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out a3_152, out a4_127, out a5_126, out s2_103, out s3_392)
	Mem163[a1 + 56<i32>:byte] = SLICE(s1_128, byte, 0)
l230518C2:
	s0Out = s1
	s1Out = s1_128
	a0Out = s1_128
	a3Out = a3_152
	a4Out = a4_127
	a5Out = a5_126
	s2Out = s2_103
	return ra
l2cap_chan_add_exit:


void bt_l2cap_connected(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bt_l2cap_connected_entry:
l230518F6:
	word32 sp_105 = fp + 0xFFFFFFE0<32>
	word32 s2_129 = a0
	word32 s0_159 = 0x4200EF84<32>
	word32 s1_121 = 0x4200EFA8<32>
l23051912:
	branch s0_159 <u s1_121 l23051922
l23051922:
	word32 a4_146
	word32 mstatus_145
	word32 a3_144
	word32 a5_141
	word32 a0_33
	word32 a5_38
	word32 a1_39
	word32 a2_40
	word32 a7_187
	word32 s10_188
	word32 s11_189
	word32 s3_190
	word32 s5_191
	word32 s6_192
	word32 s7_193
	word32 s9_194
	word32 t0_195
	word32 t4_196
	word32 tp_197
	word32 s0_111
	call a5 (retsize: 0;)
		uses: a0:s2_25,a1:sp_23 + 12<i32>,a2:a2_40,a3:a3_47,a4:a4_49,a5:a5_38,a7:a7_187,mstatus:mstatus_48,ra:ra_27,s0:Mem21[a5_20 + 4<i32>:word32],s1:s1_19,s10:s10_188,s11:s11_189,s2:s2_25,s3:s3_190,s5:s5_191,s6:s6_192,s7:s7_193,s9:s9_194,t0:t0_195,t4:t4_196,tp:tp_197
		defs: a0:a0_33,a1:a1_39,a2:a2_40,a5:a5_38,a7:a7_187,ra:ra_32,s0:s0_29,s1:s1_30,s10:s10_188,s11:s11_189,s2:s2_31,s3:s3_190,s5:s5_191,s6:s6_192,s7:s7_193,s9:s9_194,sp:sp_28,t0:t0_195,t4:t4_196,tp:tp_197
	a5 = a5_38
	branch a0_33 < 0<32> l2305196A
l2305192E:
	word32 a5_42 = CONVERT(Mem21[s0_111:uint16], uint16, word32)
	Mem45[a1_39 + 64<i32>:word16] = SLICE(a5_42, word16, 0)
	Mem46[a1_39 + 84<i32>:word16] = SLICE(a5_42, word16, 0)
	word32 a0_50
	word32 a5_55
	word32 s1_60
	word32 a4_113
	word32 a3_114
	ra = l2cap_chan_add(ra, s2_129, a1_39, a3, a4, s2_129, mstatus, Mem46[sp_105 + 8<i32>:word32], Mem46[sp_105 + 80<i32>:word32], Mem46[sp_105 + 84<i32>:word32], Mem46[sp_105 + 116<i32>:word32], Mem46[sp_105 + 120<i32>:word32], Mem46[sp_105 + 156<i32>:word32], Mem46[sp_105 + 168<i32>:word32], Mem46[sp_105 + 200<i32>:word32], Mem46[sp_105 + 232<i32>:word32], Mem46[sp_105 + 264<i32>:word32], Mem46[sp_105 + 296<i32>:word32], out s0_111, out s1_60, out a0_50, out a3_114, out a4_113, out a5_55, out s2_129)
	branch a0_50 == 0<32> l23051916
l23051946:
	word32 a4_93
	word32 mstatus_92
	word32 a3_91
	word32 a0_76 = Mem46[a5_55 + 4<i32>:word32]
	word32 a5_77 = Mem46[a5_55:word32]
	branch a5_77 == 0<32> l23051950
l2305194E:
	word32 a5_88
	word32 a1_89
	word32 a2_90
	word32 a7_94
	word32 s10_95
	word32 s11_96
	word32 s3_97
	word32 s5_98
	word32 s6_99
	word32 s7_100
	word32 s9_101
	word32 t0_102
	word32 t4_103
	word32 tp_104
	call a5_77 (retsize: 0;)
		uses: a0:a0_76,a1:a1_89,a2:a2_90,a3:a3_91,a4:a4_93,a5:a5_88,a7:a7_94,mstatus:mstatus_92,ra:ra_58,s0:s0_59,s1:s1_60,s10:s10_95,s11:s11_96,s2:s2_63,s3:s3_97,s5:s5_98,s6:s6_99,s7:s7_100,s9:s9_101,t0:t0_102,t4:t4_103,tp:tp_104
		defs: a1:a1_89,a2:a2_90,a3:a3_91,a4:a4_93,a5:a5_88,a7:a7_94,mstatus:mstatus_92,ra:ra_82,s0:s0_79,s10:s10_95,s11:s11_96,s2:s2_81,s3:s3_97,s5:s5_98,s6:s6_99,s7:s7_100,s9:s9_101,sp:sp_78,t0:t0_102,t4:t4_103,tp:tp_104
	mstatus = mstatus_92
	a4_113 = a4_93
	a3_114 = a3_91
l23051950:
	word32 a5_120
	word32 s8_296
	word32 a0_292
	word32 a1_293
	word32 a2_294
	word32 s4_295
	s1_121 = atomic_or(s0_111, 1<32>, a3_114, a4_113, mstatus, out a0_292, out a1_293, out a2_294, out a3, out a4, out a5_120, out s4_295, out s8_296)
	word32 a0_126 = Mem46[a5_120 + 4<i32>:word32]
	a5 = Mem46[a5_120 + 24<i32>:word32]
	branch a5 == 0<32> l2305196A
l23051964:
	word32 a2_143
	word32 a7_147
	word32 s10_148
	word32 s11_149
	word32 s3_150
	word32 s5_151
	word32 s6_152
	word32 s7_153
	word32 s9_154
	word32 t0_155
	word32 t4_156
	word32 tp_157
	call a5 (retsize: 0;)
		uses: a0:a0_126,a1:a0_126 + 52<i32>,a2:a2_143,a3:a3_144,a4:a4_146,a5:a5_141,a7:a7_147,mstatus:mstatus_145,ra:ra_130,s0:s0_111,s1:s1_121,s10:s10_148,s11:s11_149,s2:s2_129,s3:s3_150,s5:s5_151,s6:s6_152,s7:s7_153,s9:s9_154,t0:t0_155,t4:t4_156,tp:tp_157
		defs: a2:a2_143,a3:a3_144,a4:a4_146,a5:a5_141,a7:a7_147,mstatus:mstatus_145,ra:ra_135,s0:s0_132,s1:s1_133,s10:s10_148,s11:s11_149,s2:s2_134,s3:s3_150,s5:s5_151,s6:s6_152,s7:s7_153,s9:s9_154,sp:sp_131,t0:t0_155,t4:t4_156,tp:tp_157
	a5 = a5_141
	a3 = a3_144
	mstatus = mstatus_145
	a4 = a4_146
l2305196A:
	s0_159 = s0_111 + 0xC<32>
l23051916:
	return
bt_l2cap_connected_exit:


word32 bt_l2cap_recv(word32 ra, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgAC, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_recv
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_l2cap_recv_entry:
l2305196E:
	word32 a4_117
	word32 a1_114
	word32 s1_120
	word32 ra_119
	word32 s0_15 = a1
	branch CONVERT(Mem11[a1 + 12<i32>:uint16], uint16, word32) >u 3<32> l230519A0
l230519A0:
	word32 a5_307
	word32 a4_306
	word32 a1_305
	word32 a0_20 = net_buf_simple_pull_mem(a1 + 8<i32>, 4<32>, out a1_305, out a4_306, out a5_307)
	word32 s1_28 = CONVERT(Mem11[a0_20 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem11[a0_20 + 2<i32>:byte], byte, word32)
	word32 a5_308
	word32 a0_30 = bt_l2cap_le_lookup_rx_cid(a0, s1_28, out a5_308)
	branch a0_30 != 0<32> l230519D4
l230519D4:
	word32 a5_36 = CONVERT(Mem11[a0_30 + 64<i32>:uint16], uint16, word32) + -64<i32> << 16<i32>
	branch a5_36 >>u 16<i32> >u 63<i32> l23051A0A
l23051A0A:
	word32 s10_214
	word32 s11_215
	word32 s7_216
	word32 s9_217
	call Mem11[(a5_36 >>u 16<i32>) + 16<i32>:word32] (retsize: 0;)
		uses: a0:Mem11[(a5_36 >>u 16<i32>) + 4<i32>:word32],a1:a1,a3:a3,mstatus:mstatus,ra:ra,s0:a1,s1:s1_28,s10:s10_214,s11:s11_215,s2:a0_30,s7:s7_216,s9:s9_217,Stack +0008:dwLoc08,Stack +0014:dwArg04,Stack +0020:dwArg10,Stack +0024:dwArg14,Stack +0028:dwArg18,Stack +0048:dwArg38,Stack +0070:dwArg60,Stack +0074:dwArg64,Stack +0094:dwArg84,Stack +0098:dwArg88,Stack +00BC:dwArgAC,Stack +00E8:dwArgD8,Stack +0108:dwArgF8,Stack +0128:dwArg0118,Stack +0148:dwArg0138,Stack +0168:dwArg0158,Stack +0188:dwArg0178
		defs: a1:a1_47,a4:a4_46,ra:ra_43,s0:s0_42,s1:s1_44,s10:s10_214,s11:s11_215,s7:s7_216,s9:s9_217
l230519E8:
	word32 a3_60
	word32 a4_61
	word32 s2_66
	word32 a0_352
	word32 a1_353
	word32 a5_354
	word32 s3_355
	word32 s4_356
	word32 s5_357
	word32 s6_358
	word32 s8_359
	net_buf_put(ra, a1, a0_30 + 140<i32>, a1, 63<i32>, net_buf_ref(a1), mstatus, dwArgD8, dwArg0118, dwArg0158, out a0_352, out a1_353, out a3_60, out a4_61, out a5_354, out s2_66, out s3_355, out s4_356, out s5_357, out s6_358, out s8_359)
	0<32> = dwArg38
l23051A06_thunk_k_work_submit:
	word32 a3_87
	word32 a4_88
	word32 s1_360
	word32 a0_361
	word32 a1_362
	word32 a5_363
	word32 s2_364
	word32 s3_365
	word32 s4_366
	word32 s5_367
	word32 s6_368
	word32 s8_369
	s0Out = k_work_submit(s2_66 + 128<i32>, a3_60, a4_61, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_360, out a0_361, out a1_362, out a3_87, out a4_88, out a5_363, out s2_364, out s3_365, out s4_366, out s5_367, out s6_368, out s8_369)
	a3Out = a3_87
	a4Out = a4_88
	mstatusOut = mstatus
	return ra
l230519C4:
	word32 a0_336
	word32 a2_337
	word32 a3_338
	word32 a5_339
	word32 a7_340
	word32 s2_341
	word32 s3_342
	word32 s4_343
	word32 s5_344
	word32 s6_345
	word32 s7_346
	word32 s8_347
	word32 s9_348
	word32 s10_349
	word32 s11_350
	word32 t4_351
	ra_119 = printf(ra, 0x230BB684<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_120, out a0_336, out a1_114, out a2_337, out a3_338, out a4_117, out a5_339, out a7_340, out s2_341, out s3_342, out s4_343, out s5_344, out s6_345, out s7_346, out s8_347, out s9_348, out s10_349, out s11_350, out t4_351)
l23051984:
	word32 s8_320
	word32 s7_319
	word32 s6_318
	word32 s5_317
	word32 s4_316
	word32 s3_315
	word32 s2_314
	word32 a7_313
	word32 a5_312
	word32 a3_311
	word32 a2_310
	word32 a0_309
	word32 s9_321
	word32 s10_322
	word32 s11_323
	word32 t4_324
	ra_119 = printf(ra, 0x230BB664<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_120, out a0_309, out a1_114, out a2_310, out a3_311, out a4_117, out a5_312, out a7_313, out s2_314, out s3_315, out s4_316, out s5_317, out s6_318, out s7_319, out s8_320, out s9_321, out s10_322, out s11_323, out t4_324)
l23051990:
	0<32> = dwArg38
l2305199C_thunk_net_buf_unref:
	word32 a3_173
	word32 a4_174
	word32 mstatus_178
	word32 s0_180
	word32 s1_325
	word32 a0_326
	word32 a1_327
	word32 a2_328
	word32 a5_329
	word32 s2_330
	word32 s3_331
	word32 s4_332
	word32 s5_333
	word32 s6_334
	word32 s8_335
	word32 ra_179 = net_buf_unref(ra_119, s1_120, s0_15, a1_114, a4_117, mstatus, dwArg00, dwArg04, dwArg08, dwArg28, dwArg78, dwArg84, dwArg98, dwArgA4, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out s0_180, out s1_325, out a0_326, out a1_327, out a2_328, out a3_173, out a4_174, out a5_329, out s2_330, out s3_331, out s4_332, out s5_333, out s6_334, out s8_335, out mstatus_178)
	s0Out = s0_180
	a3Out = a3_173
	a4Out = a4_174
	mstatusOut = mstatus_178
	return ra_179
bt_l2cap_recv_exit:


word32 bt_l2cap_update_conn_param(word32 ra, word32 s1, word32 a3, word32 s2, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_le_param_update
//      le_conn_update_complete
// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a3 a4 mstatus s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_l2cap_update_conn_param_entry:
l23051A14:
	word32 a4_15
	word32 a5_16
	get_ident(out a4_15, out a5_16)
	word32 a0_24
	word32 s1_35
	word32 a1_181
	word32 a5_182
	word32 s2_183
	word32 s3_184
	word32 s4_185
	word32 s5_186
	word32 s7_187
	word32 s9_188
	word32 a3_155
	word32 a4_156
	word32 mstatus_160
	word32 s0_162
	word32 ra_33 = l2cap_create_le_sig_pdu.isra.7(ra, a3, a4_15, a5_16, s2, s5, mstatus, dwLoc18, dwArg10, dwArg14, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, dwArg7C, dwArgA8, dwArgC8, out s0_162, out s1_35, out a0_24, out a1_181, out a3_155, out a4_156, out a5_182, out s2_183, out s3_184, out s4_185, out s5_186, out s7_187, out s9_188, out mstatus_160)
	branch a0_24 == 0<32> l23051A8A
l23051A8A:
l23051A30:
	word32 a1_189
	word32 a5_190
	word32 a0_58 = net_buf_simple_add(a0_24 + 8<32>, 8<32>, a4_156, out a1_189, out a5_190)
	word32 a5_61 = CONVERT(Mem57[s0_162:uint16], uint16, word32)
	Mem64[a0_58:byte] = SLICE(a5_61, byte, 0)
	Mem66[a0_58 + 1<i32>:byte] = SLICE(a5_61 >>u 8<i32>, byte, 0)
	word32 a5_67 = CONVERT(Mem66[s0_162 + 2<i32>:uint16], uint16, word32)
	Mem68[a0_58 + 2<i32>:byte] = SLICE(a5_67, byte, 0)
	Mem70[a0_58 + 3<i32>:byte] = SLICE(a5_67 >>u 8<i32>, byte, 0)
	word32 a5_71 = CONVERT(Mem70[s0_162 + 4<i32>:uint16], uint16, word32)
	Mem72[a0_58 + 4<i32>:byte] = SLICE(a5_71, byte, 0)
	Mem74[a0_58 + 5<i32>:byte] = SLICE(a5_71 >>u 8<i32>, byte, 0)
	word32 a5_75 = CONVERT(Mem74[s0_162 + 6<i32>:uint16], uint16, word32)
	Mem76[a0_58 + 6<i32>:byte] = SLICE(a5_75, byte, 0)
	Mem78[a0_58 + 7<i32>:byte] = SLICE(a5_75 >>u 8<i32>, byte, 0)
	word32 s1_191
	word32 a1_192
	word32 a5_193
	word32 s2_194
	word32 s3_195
	word32 s5_196
	word32 s6_197
	word32 s7_198
	word32 s9_199
	bt_l2cap_send(ra_33, s1_35, s1_35, 5<32>, a0_24, a5_75 >>u 8<i32>, mstatus_160, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, s1, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_162, out s1_191, out a1_192, out a3_155, out a4_156, out a5_193, out s2_194, out s3_195, out s5_196, out s6_197, out s7_198, out s9_199, out mstatus_160)
l23051A80:
	a3Out = a3_155
	a4Out = a4_156
	mstatusOut = mstatus_160
	return s0_162
bt_l2cap_update_conn_param_exit:


void bt_l2cap_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_init
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
bt_l2cap_init_entry:
l23051A8E:
	return
bt_l2cap_init_exit:


word32 bt_l2cap_chan_disconnect(word32 ra, word32 a3, word32 a5, word32 s2, word32 s5, word32 mstatus, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_chan_le_recv_seg
//      l2cap_rx_process
// MayUse:  a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a1 a4 mstatus ra s1 s2 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_l2cap_chan_disconnect_entry:
l23051A90:
	word32 a0_5 = Mem0[a5:word32]
	branch a5 == 0<32> l23051B02
l23051B02:
	s1Out = s1
	a1Out = a1
	a4Out = a4
	s2Out = s2
	s7Out = s7
	s9Out = s9
	mstatusOut = mstatus
	return ra
l23051A94:
	word32 a4_14
	word32 a5_15
	Mem17[a0_5 + 60<i32>:byte] = SLICE(get_ident(out a4_14, out a5_15), byte, 0)
	word32 a0_24
	word32 a3_27
	word32 s0_34
	word32 a5_255
	word32 s3_256
	word32 s4_257
	word32 s5_258
	word32 a1_174
	word32 a4_101
	word32 mstatus_105
	word32 s1_108
	word32 s2_111
	word32 s7_116
	word32 s9_118
	word32 ra_106 = l2cap_create_le_sig_pdu.isra.7(ra, a3, a4_14, a5_15, s2, s5, mstatus, dwLoc18, dwArg10, dwArg14, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg7C, dwArgA8, dwArgC8, out s0_34, out s1_108, out a0_24, out a1_174, out a3_27, out a4_101, out a5_255, out s2_111, out s3_256, out s4_257, out s5_258, out s7_116, out s9_118, out mstatus_105)
	branch a0_24 == 0<32> l23051AFA
l23051AB4:
	word32 a1_259
	word32 a5_260
	word32 a0_58 = net_buf_simple_add(a0_24 + 8<i32>, 4<32>, a4_101, out a1_259, out a5_260)
	word32 a5_61 = CONVERT(Mem57[s0_34 + 64<i32>:uint16], uint16, word32)
	Mem63[a0_58:byte] = SLICE(a5_61, byte, 0)
	Mem65[a0_58 + 1<i32>:byte] = SLICE(a5_61 >>u 8<i32>, byte, 0)
	word32 a5_66 = CONVERT(Mem65[s0_34 + 84<i32>:uint16], uint16, word32)
	Mem67[a0_58 + 2<i32>:byte] = SLICE(a5_66, byte, 0)
	Mem69[a0_58 + 3<i32>:byte] = SLICE(a5_66 >>u 8<i32>, byte, 0)
	word32 a0_71
	word32 a5_75
	word32 s1_77
	word32 a1_261
	word32 a2_262
	word32 a3_263
	word32 a4_264
	word32 s2_265
	word32 s3_266
	word32 s4_267
	word32 s5_268
	word32 s6_269
	word32 s8_270
	k_delayed_work_submit(2000<i32>, a3_27, a4_101, mstatus_105, dwLoc1C, dwLoc18, dwArg04, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s1_77, out a0_71, out a1_261, out a2_262, out a3_263, out a4_264, out a5_75, out s2_265, out s3_266, out s4_267, out s5_268, out s6_269, out s8_270)
	word32 s0_107
	word32 a3_271
	word32 a5_272
	word32 s3_273
	word32 s5_274
	word32 s6_275
	ra_106 = bt_l2cap_send(ra_106, s1_77, a0_71, 5<32>, a0_24, a5_75, mstatus_105, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_107, out s1_108, out a1_174, out a3_271, out a4_101, out a5_272, out s2_111, out s3_273, out s5_274, out s6_275, out s7_116, out s9_118, out mstatus_105)
	Mem127[s0_107 + 56<i32>:byte] = 4<8>
l23051AFA:
	s1Out = s1_108
	a1Out = a1_174
	a4Out = a4_101
	s2Out = s2_111
	s7Out = s7_116
	s9Out = s9_118
	mstatusOut = mstatus_105
	return ra_106
bt_l2cap_chan_disconnect_exit:


word32 l2cap_chan_le_recv_seg(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      l2cap_rx_process
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a1 a4 mstatus ra s1 s2 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
l2cap_chan_le_recv_seg_entry:
l23051B08:
	word32 a0_29
	word32 s3_15 = Mem13[a0 + 120<i32>:int32]
	word32 a5_593
	word32 a4_592
	word32 a0_21 = net_buf_frags_len(s3_15, out a4_592, out a5_593)
	a0_29 = a0_21
	branch CONVERT(SLICE(a0_21, word16, 0), word16, word32) == 0<32> l23051B3E
l23051B30:
	word32 a2_595
	word32 a5_597
	word32 a1_594
	word32 a4_596
	word32 a7_599
	word32 a6_598
	memcpy(fp + -34<i32>, s3_15 + 20<i32>, 2<32>, out a1_594, out a2_595, out a3, out a4_596, out a5_597, out a6_598, out a7_599)
	a0_29 = fp + -34<i32>
l23051B3E:
	word32 a1_149
	word32 a4_135
	word32 s1_125
	word32 s2_126
	word32 s7_147
	word32 a0_332
	branch CONVERT(Mem20[a0 + 124<i32>:uint16], uint16, word32) >= SLICE(a0_21, word16, 0) + Mem20[a1 + 12<i32>:uint16] l23051B70
l23051B70:
	word32 a0_59 = a0_29 + 0x14<32>
	word32 a7_606
	word32 a6_605
	word32 a5_604
	word32 a4_603
	word32 a3_602
	word32 a1_600
	word32 a2_601
	memcpy(a0_59, fp + -34<i32>, 2<32>, out a1_600, out a2_601, out a3_602, out a4_603, out a5_604, out a6_605, out a7_606)
	word32 a0_82
	word32 s3_93
	word32 s5_95
	ra = net_buf_append_bytes(ra, a0_59, CONVERT(Mem60[a1 + 12<i32>:uint16], uint16, word32), Mem60[a1 + 8<i32>:int32], 0<32>, 0x23051090<32>, Mem60[a0_59 + 120<i32>:word32], dwArgF8, out s1_125, out a0_82, out a1_149, out a3, out s2_126, out s3_93, out s5_95, out s7_147)
	branch CONVERT(Mem60[s2_126 + 12<i32>:uint16], uint16, word32) == CONVERT(SLICE(a0_82, word16, 0), word16, word32) l23051BB8
l23051BB8:
	word32 s0_110 = Mem60[s1_125 + 120<i32>:word32]
	word32 a4_113
	word32 a5_607
	word32 a0_112 = net_buf_frags_len(s1_125, out a4_113, out a5_607)
	word32 a5_115 = CONVERT(Mem60[s0_110 + 124<i32>:uint16], uint16, word32)
	branch a0_112 >=u a5_115 l23051C1A
l23051C1A:
	word32 a4_158
	word32 mstatus_162
	word32 a1_155
	word32 ra_163
	word32 s1_165
	word32 s0_116 = Mem60[a5_115 + 4<i32>:word32]
	Mem117[s0_116 + 120<i32>:word32] = 0<32>
	Mem118[s0_116 + 124<i32>:word16] = 0<16>
	word32 sp_123
	word32 s0_124
	word32 a0_129
	word32 a5_131
	word32 a3_136
	word32 s5_145
	word32 s10_414
	word32 s11_415
	call Mem118[a5_115 + 16<i32>:word32] (retsize: 0;)
		uses: a0:s0_116,a1:s1_91,a3:a3_136,mstatus:mstatus,ra:ra_106,s0:s0_116,s1:s1_91,s10:s10_414,s11:s11_415,s2:1<32>,s3:s3_93,s9:s9_416,Stack +0000:dwLoc30,Stack +0004:dwLoc2C,Stack +0008:dwLoc28,Stack +0020:dwLoc10,Stack +0024:dwLoc0C,Stack +0028:dwLoc08,Stack +0030:dwArg00,Stack +0034:dwArg04,Stack +0038:dwArg08,Stack +0040:dwArg10,Stack +0044:dwArg14,Stack +0048:dwArg18,Stack +004C:dwArg1C,Stack +0054:dwArg24,Stack +0058:dwArg28,Stack +005C:dwArg2C,Stack +0068:dwArg38,Stack +006C:dwArg3C,Stack +0070:dwArg40,Stack +0074:dwArg44,Stack +0078:dwArg48,Stack +007C:dwArg4C,Stack +0084:dwArg54,Stack +0088:dwArg58,Stack +0098:dwArg68,Stack +00A4:dwArg74,Stack +00A8:dwArg78,Stack +00B8:dwArg88,Stack +00BC:dwArg8C,Stack +00C8:dwArg98,Stack +00D8:dwArgA8,Stack +00E8:dwArgB8,Stack +00F8:dwArgC8,Stack +0100:dwArgD0,Stack +0108:dwArgD8,Stack +0118:dwArgE8,Stack +0128:dwArgF8,Stack +0138:dwArg0108,Stack +0148:dwArg0118,Stack +0158:dwArg0128
		defs: a0:a0_129,a3:a3_136,a4:a4_135,a5:a5_131,ra:ra_127,s0:s0_124,s1:s1_125,s10:s10_414,s11:s11_415,s2:s2_126,s5:s5_145,s7:s7_147,s9:s9_416,sp:sp_123
	a1_149 = a0_129
	branch a0_129 >= 0<32> l23051C58
l23051C58:
	word32 s2_626
	ra_163 = l2cap_chan_send_credits.isra.10(ra, s0_124, s0_124, s2_126, a3_136, a4_135, a5_131, s5_145, mstatus, Mem118[sp_123:word32], Mem118[sp_123 + 4<i32>:word32], Mem118[sp_123 + 32<i32>:word32], Mem118[sp_123 + 36<i32>:word32], Mem118[sp_123 + 40<i32>:word32], Mem118[sp_123 + 48<i32>:word32], Mem118[sp_123 + 52<i32>:word32], Mem118[sp_123 + 64<i32>:word32], Mem118[sp_123 + 68<i32>:word32], Mem118[sp_123 + 72<i32>:word32], Mem118[sp_123 + 76<i32>:word32], Mem118[sp_123 + 88<i32>:word32], Mem118[sp_123 + 108<i32>:word32], Mem118[sp_123 + 116<i32>:word32], Mem118[sp_123 + 124<i32>:word32], Mem118[sp_123 + 136<i32>:word32], Mem118[sp_123 + 140<i32>:word32], Mem118[sp_123 + 152<i32>:word32], Mem118[sp_123 + 164<i32>:word32], Mem118[sp_123 + 168<i32>:word32], Mem118[sp_123 + 184<i32>:word32], Mem118[sp_123 + 200<i32>:word32], Mem118[sp_123 + 216<i32>:word32], Mem118[sp_123 + 232<i32>:word32], Mem118[sp_123 + 248<i32>:word32], Mem118[sp_123 + 256<i32>:word32], Mem118[sp_123 + 264<i32>:word32], Mem118[sp_123 + 280<i32>:word32], Mem118[sp_123 + 296<i32>:word32], Mem118[sp_123 + 312<i32>:word32], Mem118[sp_123 + 328<i32>:word32], Mem118[sp_123 + 344<i32>:word32], out s1_165, out a1_155, out a4_158, out s2_626, out s7_147, out s9, out mstatus_162)
l23051C36:
	branch a0_129 == -68<i32> l23051B62
l23051C3E:
	word32 a5_187
	word32 a3_191
	word32 s2_198
	word32 s5_201
	word32 s1_627
	word32 a0_628
	word32 a1_629
	word32 a2_630
	word32 a4_631
	word32 a7_632
	word32 s3_633
	word32 s4_634
	word32 s6_635
	word32 s7_636
	word32 s8_637
	word32 s9_638
	word32 s10_639
	word32 s11_640
	word32 t4_641
	word32 s2_642
	ra_163 = bt_l2cap_chan_disconnect(printf(ra, 0x230B7874<32>, a3_136, Mem118[sp_123 + 8<i32>:word32], Mem118[sp_123 + 40<i32>:word32], Mem118[sp_123 + 112<i32>:word32], Mem118[sp_123 + 116<i32>:word32], Mem118[sp_123 + 152<i32>:word32], Mem118[sp_123 + 188<i32>:word32], out s1_627, out a0_628, out a1_629, out a2_630, out a3_191, out a4_631, out a5_187, out a7_632, out s2_198, out s3_633, out s4_634, out s5_201, out s6_635, out s7_636, out s8_637, out s9_638, out s10_639, out s11_640, out t4_641), a3_191, a5_187, s2_198, s5_201, mstatus, Mem118[sp_123 + 4<i32>:word32], Mem118[sp_123 + 16<i32>:word32], Mem118[sp_123 + 20<i32>:word32], Mem118[sp_123 + 32<i32>:word32], Mem118[sp_123 + 36<i32>:word32], Mem118[sp_123 + 40<i32>:word32], Mem118[sp_123 + 48<i32>:word32], Mem118[sp_123 + 52<i32>:word32], Mem118[sp_123 + 56<i32>:word32], Mem118[sp_123 + 84<i32>:word32], Mem118[sp_123 + 88<i32>:word32], Mem118[sp_123 + 92<i32>:word32], Mem118[sp_123 + 104<i32>:word32], Mem118[sp_123 + 120<i32>:word32], Mem118[sp_123 + 124<i32>:word32], Mem118[sp_123 + 132<i32>:word32], Mem118[sp_123 + 136<i32>:word32], Mem118[sp_123 + 152<i32>:word32], Mem118[sp_123 + 168<i32>:word32], Mem118[sp_123 + 184<i32>:word32], Mem118[sp_123 + 200<i32>:word32], Mem118[sp_123 + 216<i32>:word32], Mem118[sp_123 + 232<i32>:word32], Mem118[sp_123 + 248<i32>:word32], Mem118[sp_123 + 264<i32>:word32], Mem118[sp_123 + 280<i32>:word32], Mem118[sp_123 + 296<i32>:word32], Mem118[sp_123 + 312<i32>:word32], out s1_165, out a1_155, out a4_158, out s2_642, out s7_147, out s9, out mstatus_162)
l23051C50:
	word32 s0_643
	word32 a0_644
	word32 a2_645
	word32 a3_646
	word32 a5_647
	word32 s3_648
	word32 s4_649
	word32 s5_650
	word32 s6_651
	word32 s8_652
	ra = net_buf_unref(ra_163, s1_165, s1_165, a1_155, a4_158, mstatus_162, Mem118[sp_123:word32], Mem118[sp_123 + 4<i32>:word32], Mem118[sp_123 + 8<i32>:word32], Mem118[sp_123 + 40<i32>:word32], Mem118[sp_123 + 120<i32>:word32], Mem118[sp_123 + 132<i32>:word32], Mem118[sp_123 + 152<i32>:word32], Mem118[sp_123 + 164<i32>:word32], Mem118[sp_123 + 184<i32>:word32], Mem118[sp_123 + 216<i32>:word32], Mem118[sp_123 + 232<i32>:word32], Mem118[sp_123 + 248<i32>:word32], Mem118[sp_123 + 280<i32>:word32], Mem118[sp_123 + 312<i32>:word32], Mem118[sp_123 + 344<i32>:word32], Mem118[sp_123 + 376<i32>:word32], out s0_643, out s1_125, out a0_644, out a1_149, out a2_645, out a3_646, out a4_135, out a5_647, out s2_126, out s3_648, out s4_649, out s5_650, out s6_651, out s8_652, out mstatus)
l23051BC8:
	word32 a3_275
	word32 a2_623
	branch k_sem_count_get(s0_110 + 72<i32>, a3, a4_113, mstatus, out a2_623, out a3_275, out a4_135) != 0<32> l23051B62
l23051BD4:
	a4_135 = CONVERT(Mem60[s0_110 + 70<i32>:uint16], uint16, word32)
	branch a4_135 != 1<32> l23051B62
l23051BE0:
	word32 a5_624
	word32 a4_282
	word32 a0_281 = net_buf_frags_len(s2_126, out a4_282, out a5_624)
	word32 a1_284 = CONVERT(Mem60[s0_110 + 68<i32>:uint16], uint16, word32)
	s1_125 = CONVERT(Mem60[s0_110 + 124<i32>:uint16], uint16, word32) + a1_284 + 0xFFFFFFFF<32> - a0_281 >>u a1_284
	word32 a2_625
	word32 a3_293
	a1_149 = CONVERT(SLICE(s1_125 - k_sem_count_get(s0_110 + 72<i32>, a3_275, a4_282, mstatus, out a2_625, out a3_293, out a4_135), word16, 0), word16, word32)
	word32 a5_300 = CONVERT(SLICE(a1_149, word16, 0), word16, int32)
	branch a5_300 <= 0<32> l23051B62
l23051C12:
	ra = l2cap_chan_send_credits.isra.10(ra, s0_110, s0_110, a1_149, a3_293, a4_135, a5_300, s5_95, mstatus, dwLoc30, dwLoc2C, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg3C, dwArg44, dwArg4C, dwArg58, s3, dwArg68, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s1_125, out a1_149, out a4_135, out s2_126, out s7_147, out s9, out mstatus)
l23051BAE:
	a0_332 = 0x230BB710<32>
l23051B50:
	a0_332 = 0x230BB6F8<32>
l23051B58:
	word32 a5_343
	word32 a3_347
	word32 s2_354
	word32 s5_357
	word32 t4_622
	word32 s11_621
	word32 s10_620
	word32 s9_619
	word32 s8_618
	word32 s7_617
	word32 s6_616
	word32 s4_615
	word32 s3_614
	word32 a7_613
	word32 a4_612
	word32 a2_611
	word32 a1_610
	word32 a0_609
	word32 s1_608
	ra = bt_l2cap_chan_disconnect(printf(ra, a0_332, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_608, out a0_609, out a1_610, out a2_611, out a3_347, out a4_612, out a5_343, out a7_613, out s2_354, out s3_614, out s4_615, out s5_357, out s6_616, out s7_617, out s8_618, out s9_619, out s10_620, out s11_621, out t4_622), a3_347, a5_343, s2_354, s5_357, mstatus, dwLoc2C, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg4C, dwArg54, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_125, out a1_149, out a4_135, out s2_126, out s7_147, out s9, out mstatus)
l23051B62:
	0<32> = dwArg0128
	s1Out = s1_125
	a1Out = a1_149
	a4Out = a4_135
	s2Out = s2_126
	s7Out = s7_147
	s9Out = s9
	mstatusOut = mstatus
	return ra
l2cap_chan_le_recv_seg_exit:


void l2cap_rx_process(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s5, word32 s6, word32 s8, word32 s10, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA0, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
l2cap_rx_process_entry:
l23051C62:
	word32 s0_30 = a0 + -128<i32>
	word32 s3_31 = a0 + 12<i32>
	word32 s5_101 = -68<i32>
	word32 s6_102 = 0x230B8000<32>
	word32 s7_103 = 0x230BC000<32>
	word32 s9_104 = 0x230BC000<32>
	ra_324 = ra
l23051C9E:
	word32 ra_324
	word32 a0_48
	word32 a2_50
	word32 a3_51
	word32 a4_52
	word32 a5_53
	word32 s4_59
	word32 s2_627
	word32 s3_628
	word32 s8_629
	word32 a1_626
	net_buf_get(ra_324, s0_30, s3_31, 0<32>, a3, a4, mstatus, dwArg08, dwArgB8, dwArgF8, out a0_48, out a1_626, out a2_50, out a3_51, out a4_52, out a5_53, out s2_627, out s3_628, out s4_59, out s8_629)
	word32 sp_105 = fp - 48<i32>
	branch a0_48 != 0<32> l23051CC6
l23051CC6:
	word32 a4_141
	word32 mstatus_145
	word32 a1_134
	word32 s1_107
	word32 ra_115
	word32 s2_116
	word32 a3_172
	word32 s5_182
	word32 s2_179
	word32 ra_175
	word32 a5_168
	word32 a0_197
	word32 mstatus_126
	word32 a4_125
	word32 a0_71
	word32 a3_74
	word32 s1_79
	word32 s2_80
	word32 s3_81
	word32 s4_82
	word32 s8_83
	word32 a1_623
	word32 a4_624
	word32 a5_625
	word32 s0_78 = k_sem_take(s4_59, 0<32>, a2_50, a3_51, a4_52, a5_53, mstatus, s0, ra, dwArgD8, dwArg0118, out s1_79, out a0_71, out a1_623, out a3_74, out a4_624, out a5_625, out s2_80, out s3_81, out s4_82, out s8_83)
	branch a0_71 == 0<32> l23051CE6
l23051CE6:
	word32 a5_86 = Mem47[s1_79 + -8<i32>:int32]
	branch a5_86 == 0<32> l23051CF6
l23051CF6:
	word32 a4_91
	word32 a2_631
	word32 a5_632
	word32 a1_630
	word32 a0_88 = net_buf_simple_pull_le16(a5_86, out a1_630, out a2_631, out a4_91, out a5_632)
	a0_197 = s8_83 + -1676<i32>
	branch CONVERT(Mem47[s1_79 + -62<i32>:uint16], uint16, word32) <u a0_88 l23051CD4
l23051D0C:
	word32 a5_97 = Mem47[a4_91 + 12<i32>:word32]
	branch a4_91 == 0<32> l23051D2A
l23051D2A:
	word32 s0_106
	word32 s5_110
	word32 s6_111
	word32 a0_118
	word32 a5_124
	word32 a3_127
	word32 s11_368
	call Mem47[a5_97 + 16<i32>:word32] (retsize: 0;)
		uses: a0:s0_78,a1:s2_80,a3:a3_127,a4:a4_125,mstatus:mstatus_126,ra:ra_42,s0:s0_78,s1:s1_79,s10:a0_88,s11:s11_368,s2:s2_80,s3:s3_81,s4:s4_82,s5:s5_101,s6:s6_102,s7:s7_103,s8:s8_83,s9:s9_104
		defs: a0:a0_118,a3:a3_127,a4:a4_125,a5:a5_124,mstatus:mstatus_126,ra:ra_115,s0:s0_106,s1:s1_107,s11:s11_368,s2:s2_116,s5:s5_110,s6:s6_111,s7:s7_112,s9:s9_114,sp:sp_105
	a1_134 = a0_118
	branch a0_118 == 0<32> l23051D44
l23051D44:
	ra_115 = l2cap_chan_send_credits.isra.10(ra_115, s0_106, s0_106, 1<32>, a3_127, a4_125, a5_124, s5_110, mstatus_126, Mem47[sp_105:word32], Mem47[sp_105 + 4<i32>:word32], Mem47[sp_105 + 32<i32>:word32], Mem47[sp_105 + 36<i32>:word32], Mem47[sp_105 + 40<i32>:word32], Mem47[sp_105 + 48<i32>:word32], Mem47[sp_105 + 52<i32>:word32], Mem47[sp_105 + 64<i32>:word32], Mem47[sp_105 + 68<i32>:word32], Mem47[sp_105 + 72<i32>:word32], Mem47[sp_105 + 76<i32>:word32], Mem47[sp_105 + 88<i32>:word32], Mem47[sp_105 + 108<i32>:word32], Mem47[sp_105 + 116<i32>:word32], Mem47[sp_105 + 124<i32>:word32], Mem47[sp_105 + 136<i32>:word32], Mem47[sp_105 + 140<i32>:word32], Mem47[sp_105 + 152<i32>:word32], Mem47[sp_105 + 164<i32>:word32], Mem47[sp_105 + 168<i32>:word32], Mem47[sp_105 + 184<i32>:word32], Mem47[sp_105 + 200<i32>:word32], Mem47[sp_105 + 216<i32>:word32], Mem47[sp_105 + 232<i32>:word32], Mem47[sp_105 + 248<i32>:word32], Mem47[sp_105 + 256<i32>:word32], Mem47[sp_105 + 264<i32>:word32], Mem47[sp_105 + 280<i32>:word32], Mem47[sp_105 + 296<i32>:word32], Mem47[sp_105 + 312<i32>:word32], Mem47[sp_105 + 328<i32>:word32], Mem47[sp_105 + 344<i32>:word32], out s1_107, out a1_134, out a4_141, out s2_116, out s7_103, out s9_104, out mstatus_145)
l23051D36:
	mstatus_145 = mstatus_126
	a4_141 = a4_125
	branch a0_118 == s5_110 l23051CDE
l23051D3A:
	word32 s11_669
	word32 s7_665
	word32 s3_662
	word32 a1_658
	word32 t4_670
	word32 s8_666
	word32 s9_667
	word32 s10_668
	word32 s4_663
	word32 s6_664
	word32 a2_659
	word32 a4_660
	word32 a7_661
	word32 s1_656
	word32 a0_657
	ra_175 = printf(ra_115, s6_111 + -1932<i32>, a3_127, Mem47[sp_105 + 8<i32>:word32], Mem47[sp_105 + 40<i32>:word32], Mem47[sp_105 + 112<i32>:word32], Mem47[sp_105 + 116<i32>:word32], Mem47[sp_105 + 152<i32>:word32], Mem47[sp_105 + 188<i32>:word32], out s1_656, out a0_657, out a1_658, out a2_659, out a3_172, out a4_660, out a5_168, out a7_661, out s2_179, out s3_662, out s4_663, out s5_182, out s6_664, out s7_665, out s8_666, out s9_667, out s10_668, out s11_669, out t4_670)
	mstatus = mstatus_126
l23051D14:
	word32 a0_190
	call a4_91 (retsize: 0;)
		uses: a5:a5_97
		defs: a0:a0_190
	Mem195[s1_79 + 4088<i32>:word32] = a0_190
	branch a0_190 != 0<32> l23051D24
l23051D24:
	Mem196[s1_79 + 4092<i32>:word16] = SLICE(a0_88, word16, 0)
l23051D1E:
	a0_197 = s7_103 + -1652<i32>
l23051CEC:
	ra_115 = l2cap_chan_le_recv_seg(ra_324, s0_78, s0_78, s2_80, a3_74, s2_80, s3_81, mstatus, s10, s8, s6, s2, s0, dwLoc18, dwLoc14, dwLoc0C, dwLoc08, dwLoc04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg44, dwArg48, s5, s3, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA0, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1_107, out a1_134, out a4_141, out s2_116, out s7_103, out s9_104, out mstatus_145)
l23051CD0:
	a0_197 = s9_104 + -1708<i32>
l23051CD4:
	word32 s11_654
	word32 s7_650
	word32 a7_646
	word32 a1_643
	word32 t4_655
	word32 s8_651
	word32 s9_652
	word32 s10_653
	word32 s3_647
	word32 s4_648
	word32 s6_649
	word32 a2_644
	word32 a4_645
	word32 s1_641
	word32 a0_642
	ra_175 = printf(ra_324, a0_197, a3_74, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_641, out a0_642, out a1_643, out a2_644, out a3_172, out a4_645, out a5_168, out a7_646, out s2_179, out s3_647, out s4_648, out s5_182, out s6_649, out s7_650, out s8_651, out s9_652, out s10_653, out s11_654, out t4_655)
l23051CD8:
	ra_115 = bt_l2cap_chan_disconnect(ra_175, a3_172, a5_168, s2_179, s5_182, mstatus, Mem276[sp_105 + 4<i32>:word32], Mem276[sp_105 + 16<i32>:word32], Mem276[sp_105 + 20<i32>:word32], Mem276[sp_105 + 32<i32>:word32], Mem276[sp_105 + 36<i32>:word32], Mem276[sp_105 + 40<i32>:word32], Mem276[sp_105 + 48<i32>:word32], Mem276[sp_105 + 52<i32>:word32], Mem276[sp_105 + 56<i32>:word32], Mem276[sp_105 + 84<i32>:word32], Mem276[sp_105 + 88<i32>:word32], Mem276[sp_105 + 92<i32>:word32], Mem276[sp_105 + 104<i32>:word32], Mem276[sp_105 + 120<i32>:word32], Mem276[sp_105 + 124<i32>:word32], Mem276[sp_105 + 132<i32>:word32], Mem276[sp_105 + 136<i32>:word32], Mem276[sp_105 + 152<i32>:word32], Mem276[sp_105 + 168<i32>:word32], Mem276[sp_105 + 184<i32>:word32], Mem276[sp_105 + 200<i32>:word32], Mem276[sp_105 + 216<i32>:word32], Mem276[sp_105 + 232<i32>:word32], Mem276[sp_105 + 248<i32>:word32], Mem276[sp_105 + 264<i32>:word32], Mem276[sp_105 + 280<i32>:word32], Mem276[sp_105 + 296<i32>:word32], Mem276[sp_105 + 312<i32>:word32], out s1_107, out a1_134, out a4_141, out s2_116, out s7_103, out s9_104, out mstatus_145)
l23051CDE:
	word32 s4_639
	word32 a1_635
	word32 s8_640
	word32 a2_636
	word32 a5_637
	word32 s2_638
	word32 s1_633
	word32 a0_634
	ra_324 = net_buf_unref(ra_115, s1_107, s2_116, a1_134, a4_141, mstatus_145, Mem314[sp_105:word32], Mem314[sp_105 + 4<i32>:word32], Mem314[sp_105 + 8<i32>:word32], Mem314[sp_105 + 40<i32>:word32], Mem314[sp_105 + 120<i32>:word32], Mem314[sp_105 + 132<i32>:word32], Mem314[sp_105 + 152<i32>:word32], Mem314[sp_105 + 164<i32>:word32], Mem314[sp_105 + 184<i32>:word32], Mem314[sp_105 + 216<i32>:word32], Mem314[sp_105 + 232<i32>:word32], Mem314[sp_105 + 248<i32>:word32], Mem314[sp_105 + 280<i32>:word32], Mem314[sp_105 + 312<i32>:word32], Mem314[sp_105 + 344<i32>:word32], Mem314[sp_105 + 376<i32>:word32], out s0_30, out s1_633, out a0_634, out a1_635, out a2_636, out a3, out a4, out a5_637, out s2_638, out s3_31, out s4_639, out s5_101, out s6_102, out s8_640, out mstatus)
l23051CAA:
	0<32> = dwArg0128
	0<32> = dwArg1C
	return
l2cap_rx_process_exit:


void l2cap_recv(word32 ra, word32 a1, word32 a3, word32 s5, word32 s8, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg20, word32 dwArg24, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
l2cap_recv_entry:
l23051D4E:
	word32 a0_114
	branch CONVERT(Mem25[a1 + 12<i32>:uint16], uint16, word32) >u 3<32> l23051D7E
l23051D7E:
	word32 a1_286
	word32 a4_287
	word32 a5_288
	word32 a0_34 = net_buf_simple_pull_mem(a1 + 8<i32>, 4<32>, out a1_286, out a4_287, out a5_288)
	branch (CONVERT(Mem25[a0_34 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem25[a0_34 + 2<i32>:byte], byte, word32)) == CONVERT(Mem25[a1 + 12<i32>:uint16], uint16, word32) l23051DCC
l23051DCC:
	branch CONVERT(Mem25[a0_34 + 1<i32>:byte], byte, word32) != 0<32> l23051DDC
l23051DDC:
	branch (CONVERT(Mem25[a0_34:byte], byte, word32) + -1<i32> & 255<i32>) >u 0x15<32> l230522F4
l230522F4:
	word32 a5_52
	word32 s1_60
	word32 s2_63
	word32 a0_327
	word32 a1_328
	word32 a2_329
	word32 a3_330
	word32 a4_331
	word32 a7_332
	word32 s3_333
	word32 s4_334
	word32 s5_335
	word32 s6_336
	word32 s7_337
	word32 s8_338
	word32 s9_339
	word32 s10_340
	word32 s11_341
	word32 t4_342
	word32 ra_59 = printf(ra, 0x230BB920<32>, 0x15<32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_60, out a0_327, out a1_328, out a2_329, out a3_330, out a4_331, out a5_52, out a7_332, out s2_63, out s3_333, out s4_334, out s5_335, out s6_336, out s7_337, out s8_338, out s9_339, out s10_340, out s11_341, out t4_342)
	word32 a0_77 = Mem25[s2_63:int32]
l2305211C:
	l2cap_send_reject(ra_59, s1_60, a0_77, 0<32>, 0<32>, a5_52, s2_63, mstatus, dwLoc40, s8, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg24, dwArg2C, dwArg38, dwArg3C, ra, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108)
l23051DEE:
l23051DD2:
	a0_114 = 0x230BB798<32>
l23051DA2:
	word32 a3_293
	word32 a2_292
	word32 a1_291
	word32 a0_290
	word32 s1_289
	word32 a4_294
	word32 a5_295
	word32 a7_296
	word32 s2_297
	word32 s3_298
	word32 s4_299
	word32 s5_300
	word32 s6_301
	word32 s7_302
	word32 s8_303
	word32 s9_304
	word32 s10_305
	word32 s11_306
	word32 t4_307
	printf(ra, 0x230BB774<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_289, out a0_290, out a1_291, out a2_292, out a3_293, out a4_294, out a5_295, out a7_296, out s2_297, out s3_298, out s4_299, out s5_300, out s6_301, out s7_302, out s8_303, out s9_304, out s10_305, out s11_306, out t4_307)
l23051D70:
	a0_114 = 0x230BB754<32>
l23051D78:
	word32 s1_308
	word32 a0_309
	word32 a1_310
	word32 a2_311
	word32 a3_312
	word32 a4_313
	word32 a5_314
	word32 a7_315
	word32 s2_316
	word32 s3_317
	word32 s4_318
	word32 s5_319
	word32 s6_320
	word32 s7_321
	word32 s8_322
	word32 s9_323
	word32 s10_324
	word32 s11_325
	word32 t4_326
	printf(ra, a0_114, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_308, out a0_309, out a1_310, out a2_311, out a3_312, out a4_313, out a5_314, out a7_315, out s2_316, out s3_317, out s4_318, out s5_319, out s6_320, out s7_321, out s8_322, out s9_323, out s10_324, out s11_325, out t4_326)
l23051DB0:
	return
l2cap_recv_exit:


word32 uuid_to_uuid128(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_uuid_cmp
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: s0 sp
uuid_to_uuid128_entry:
l23052310:
	word32 a4_9 = CONVERT(Mem7[a0:byte], byte, word32)
	branch a4_9 == 1<32> l23052354
l23052354:
	word32 a4_18
	word32 a1_129
	word32 a2_130
	word32 a3_131
	word32 a5_132
	word32 a7_133
	memcpy(a1, 0x230BB9D0<32>, 0x11<32>, out a1_129, out a2_130, out a3_131, out a4_18, out a5_132, out a6, out a7_133)
	Mem33[a1 + 13<i32>:byte] = SLICE(a4_18, byte, 0)
	Mem37[a1 + 15<i32>:byte] = SLICE(a4_18 >>u 16<i32>, byte, 0)
	Mem39[a1 + 14<i32>:byte] = SLICE(CONVERT(SLICE(a4_18, word16, 0), word16, word32) >>u 8<i32>, byte, 0)
	Mem40[a1 + 16<i32>:byte] = SLICE(a4_18 >>u 24<i32>, byte, 0)
l23052324:
	branch a4_9 == 0<32> l23052334
l23052334:
	word32 a1_134
	word32 a2_135
	word32 a3_136
	word32 a4_137
	word32 a5_138
	word32 a7_139
	memcpy(a1, 0x230BB9D0<32>, 0x11<32>, out a1_134, out a2_135, out a3_136, out a4_137, out a5_138, out a6, out a7_139)
	word32 a4_58 = CONVERT(Mem7[a0 + 2<i32>:uint16], uint16, word32)
	Mem59[a1 + 13<i32>:byte] = SLICE(a4_58, byte, 0)
	Mem61[a1 + 14<i32>:byte] = SLICE(a4_58 >>u 8<i32>, byte, 0)
l23052326:
	branch a4_9 == 2<32> l23052384
l23052384:
l23052390_thunk_memcpy:
	word32 a6_75
	word32 a1_140
	word32 a2_141
	word32 a3_142
	word32 a4_143
	word32 a5_144
	word32 a7_145
	memcpy(a1, a0, 0x11<32>, out a1_140, out a2_141, out a3_142, out a4_143, out a5_144, out a6_75, out a7_145)
	return a6_75
l2305232C:
	return a6
uuid_to_uuid128_exit:


word32 bt_uuid_cmp(word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_foreach_attr
//      bt_gatt_service_register
//      bt_gatt_notify_cb
//      bt_gatt_indicate
//      gatt_read_type_rsp
//      read_included_uuid_cb
//      gatt_find_info_rsp
//      read_group_cb
//      read_type_cb
//      find_type_cb
//      att_read_group_req
//      att_find_type_req
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_uuid_cmp_entry:
l23052394:
	word32 a5_14
	word32 a3_13
	word32 a1_16
	word32 a0_21
	word32 a1_25
	word32 a0_26
	word32 a4_11 = CONVERT(Mem7[a1:byte], byte, word32)
	branch a4_11 == CONVERT(Mem7[a0:byte], byte, word32) l230523C6
l230523C6:
	word32 a0_15
	a3_13 = 1<32>
	a5_14 = a0
	branch a4_11 == 1<32> l230523F4
l230523F4:
	a0_15 = Mem7[a0 + 4<i32>:word32]
	a1_16 = Mem7[a0 + 4<i32>:word32]
l230523CE:
	branch a4_11 == 0<32> l230523E2
l230523E2:
	a0_15 = CONVERT(Mem7[a0 + 2<i32>:uint16], uint16, word32)
	a5_14 = CONVERT(Mem7[a1 + 2<i32>:uint16], uint16, word32)
	a1_16 = a1
l230523EA:
	a0_21 = a0_15 - a5_14
l230523D0:
	a3_13 = 2<32>
	a0_21 = 0xFFFFFFEA<32>
	a1_16 = a1
	branch a4_11 != 2<32> l230523EC
l230523D8:
	a1_25 = a1 + 1<32>
	a0_26 = a0 + 1<i32>
l230523A8:
	uuid_to_uuid128(a0, fp + -56<i32>)
	a6 = uuid_to_uuid128(a1, fp + -36<i32>)
	a1_25 = fp + -35<i32>
	a0_26 = fp + -55<i32>
l230523C0:
	a0_21 = memcmp(a0_26, a1_25, 0x10<32>, out a1_16, out a2, out a3_13, out a4_11, out a5_14)
l230523EC:
	a0Out = a0_21
	a1Out = a1_16
	a2Out = a2
	a3Out = a3_13
	a4Out = a4_11
	a5Out = a5_14
	a6Out = a6
	s8Out = dwArgD4
	return a1
bt_uuid_cmp_exit:


word32 bt_uuid_create(word32 a0, word32 a1, word32 a2, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      find_type_cb
//      att_read_group_req
//      att_read_type_req
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_uuid_create_entry:
l230523FA:
	word32 a3_16
	word32 a5_46
	branch a2 == 4<32> l2305242A
l2305242A:
	Mem7[a0:byte] = 1<8>
	word32 a3_14 = CONVERT(Mem7[a1 + 1<i32>:byte], byte, word32)
	Mem19[((CONVERT(Mem7[a1 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem7[a1 + 2<i32>:byte], byte, word32)) << 16<i32> | (CONVERT(Mem7[a1:byte], byte, word32) | a3_14 << 8<i32>)) + 4<i32>:word32] = a0
	a3_16 = a3_14 << 8<i32>
l23052400:
	a3_16 = a2
	branch a2 == 0x10<32> l23052450
l23052450:
	Mem26[a0:byte] = 2<8>
	word32 a3_33
	word32 a7_114
	word32 a5_112
	word32 a6_113
	word32 a2_110
	word32 a4_111
	word32 a1_109
	memcpy(a0 + 1<32>, a1, a2, out a1_109, out a2_110, out a3_33, out a4_111, out a5_112, out a6_113, out a7_114)
	a3Out = a3_33
	return 1<32>
l23052408:
	a5_46 = 0<32>
	branch a2 != 2<32> l23052426
l23052410:
	Mem47[a0:byte] = 0<8>
	Mem52[a0 + 2<i32>:word16] = SLICE(CONVERT(Mem47[a1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem47[a1:byte], byte, word32), word16, 0)
l23052424:
	a5_46 = 1<32>
l23052426:
	a3Out = a3_16
	return a5_46
bt_uuid_create_exit:


word32 bt_uuid_to_str(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg08, word32 dwArg34, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0128, ptr32 & s1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      discover_func
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0034:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_uuid_to_str_entry:
l2305246A:
	word32 a3_166
	word32 ra_170
	word32 a5_13 = CONVERT(Mem11[a0:byte], byte, word32)
	word32 s1_17 = a1
	branch a5_13 == 1<32> l230524B6
l230524B6:
l23052484:
	branch a5_13 == 0<32> l23052496
l23052496:
l2305249A:
	word32 s0_352
	word32 a0_353
	word32 a1_354
	word32 a2_355
	word32 a4_356
	word32 a5_357
	word32 a7_358
	word32 s2_359
	word32 s3_360
	word32 s4_361
	word32 s5_362
	word32 s6_363
	word32 s7_364
	word32 s8_365
	word32 s9_366
	word32 s10_367
	word32 s11_368
	ra_170 = snprintf(ra, a1, a2, 0x230BB9C8<32>, dwLoc18, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C, out s0_352, out s1_17, out a0_353, out a1_354, out a2_355, out a3_166, out a4_356, out a5_357, out a7_358, out s2_359, out s3_360, out s4_361, out s5_362, out s6_363, out s7_364, out s8_365, out s9_366, out s10_367, out s11_368)
l23052486:
	branch a5_13 == 2<32> l230524BA
l230524BA:
	word32 a2_288
	word32 a1_287
	word32 a3_289
	word32 a4_290
	word32 a5_291
	word32 a6_292
	word32 a7_293
	memcpy(fp + -32<i32>, a0 + 1<i32>, 2<32>, out a1_287, out a2_288, out a3_289, out a4_290, out a5_291, out a6_292, out a7_293)
	word32 a1_294
	word32 a2_295
	word32 a3_296
	word32 a4_297
	word32 a5_298
	word32 a6_299
	word32 a7_300
	memcpy(fp + -24<i32>, a0 + 3<i32>, 4<32>, out a1_294, out a2_295, out a3_296, out a4_297, out a5_298, out a6_299, out a7_300)
	word32 a1_301
	word32 a2_302
	word32 a3_303
	word32 a4_304
	word32 a5_305
	word32 a6_306
	word32 a7_307
	memcpy(fp + -30<i32>, a0 + 7<i32>, 2<32>, out a1_301, out a2_302, out a3_303, out a4_304, out a5_305, out a6_306, out a7_307)
	word32 a1_308
	word32 a2_309
	word32 a3_310
	word32 a4_311
	word32 a5_312
	word32 a6_313
	word32 a7_314
	memcpy(fp + -28<i32>, a0 + 9<i32>, 2<32>, out a1_308, out a2_309, out a3_310, out a4_311, out a5_312, out a6_313, out a7_314)
	word32 a1_315
	word32 a2_316
	word32 a3_317
	word32 a4_318
	word32 a5_319
	word32 a6_320
	word32 a7_321
	memcpy(fp + -26<i32>, a0 + 11<i32>, 2<32>, out a1_315, out a2_316, out a3_317, out a4_318, out a5_319, out a6_320, out a7_321)
	word32 a1_322
	word32 a2_323
	word32 a3_324
	word32 a4_325
	word32 a5_326
	word32 a6_327
	word32 a7_328
	memcpy(fp + -20<i32>, a0 + 13<i32>, 4<32>, out a1_322, out a2_323, out a3_324, out a4_325, out a5_326, out a6_327, out a7_328)
	word32 s0_329
	word32 a0_330
	word32 a1_331
	word32 a2_332
	word32 a4_333
	word32 a5_334
	word32 a7_335
	word32 s2_336
	word32 s3_337
	word32 s4_338
	word32 s5_339
	word32 s6_340
	word32 s7_341
	word32 s8_342
	word32 s9_343
	word32 s10_344
	word32 s11_345
	ra_170 = snprintf(ra, a1, a2, 0x230BB9B0<32>, dwLoc18, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C, out s0_329, out s1_17, out a0_330, out a1_331, out a2_332, out a3_166, out a4_333, out a5_334, out a7_335, out s2_336, out s3_337, out s4_338, out s5_339, out s6_340, out s7_341, out s8_342, out s9_343, out s10_344, out s11_345)
l2305248C:
	word32 t1_346
	word32 a0_347
	word32 a1_348
	word32 a2_349
	word32 a4_350
	word32 a5_351
	ra_170 = memset(ra, a1, 0<32>, a2, out t1_346, out a0_347, out a1_348, out a2_349, out a3_166, out a4_350, out a5_351)
l230524AA:
	0<32> = dwArg0128
	s1Out = s1_17
	a3Out = a3_166
	return ra_170
bt_uuid_to_str_exit:


word32 sys_memcpy_swap(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_sign_buf
//      smp_f4
//      smp_f5
//      smp_f6
//      smp_g2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a5
// Preserved: sp
sys_memcpy_swap_entry:
l2305252E:
	word32 a1_10 = a1 + (a2 + -1<i32>)
	word32 a2_8 = a2 + a0
l23052536:
	a1_10 = a1_10 + 0xFFFFFFFF<32>
	word32 a5_12 = CONVERT(Mem11[a1_10 + 1<i32>:byte], byte, word32)
	a0 = a0 + 1<32>
	Mem15[a0 + 4095<i32>:byte] = SLICE(a5_12, byte, 0)
	branch a2_8 != a0 l23052536
l23052546:
	return a5_12
sys_memcpy_swap_exit:


word32 sys_mem_swap(word32 a0, word32 a1, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_sign_buf
//      smp_f4
//      smp_f5
//      smp_f6
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a1 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
sys_mem_swap_entry:
l23052548:
	word32 a5_16 = a0 + a1
	word32 a1_7 = (a1 >>u 1<i32>) + a0
l23052550:
	word32 a4_12 = CONVERT(Mem9[a0:byte], byte, word32)
	a0 = a0 + 1<32>
	Mem14[a0 + 4095<i32>:byte] = SLICE(CONVERT(Mem9[a5_16 + -1<i32>:byte], byte, word32), byte, 0)
	Mem15[a5_16 + 4095<i32>:byte] = SLICE(a4_12, byte, 0)
	a5_16 = a5_16 + 0xFFFFFFFF<32>
	branch a0 != a1_7 l23052550
l23052568:
	a4Out = a4_12
	a5Out = a5_16
	return a1_7
sys_mem_swap_exit:


word32 get_io_capa(word32 a3, word32 a4, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_auth.isra.0
//      sec_level_reachable.isra.1
//      get_pair_method
//      smp_security_request
//      smp_pairing_req
//      bt_smp_start_security
// MayUse:  a3:[0..31] a4:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a3 a5
// Preserved: sp
get_io_capa_entry:
l2305256A:
	word32 a0_16 = 3<32>
	branch Mem0[0x42026610<32>:int32] == 0<32> l230525AE
l23052576:
	word32 a5_10 = Mem0[a4:word32]
	branch a4 == 0<32> l23052590
l2305257A:
	a5_10 = Mem0[a3 + 4<i32>:word32]
	branch a3 == 0<32> l23052590
l23052590:
	a3 = CONVERT(Mem0[0x4200F4A0<32>:byte], byte, word32)
	branch a3 == 0<32> l230525A2
l2305259A:
	branch a4 == 0<32> l230525A2
l2305259C:
	a5_10 = Mem0[a3 + 8<i32>:word32]
	a0_16 = 1<32>
	branch a3 != 0<32> l230525AE
l2305257E:
	a5_10 = Mem0[a3 + 8<i32>:word32]
	a0_16 = 4<32>
	branch a3 != 0<32> l230525AE
l23052584:
	a3 = CONVERT(Mem0[0x4200F4A0<32>:byte], byte, word32)
	branch a3 != 0<32> l230525A2
l230525A2:
	a0_16 = 2<32>
	branch Mem0[a5_10 + 4<i32>:word32] != 0<32> l230525AE
l230525A8:
	a0_16 = 3<32>
	branch a4 == 0<32> l230525AE
l230525AC:
	a0_16 = 0<32>
l230525AE:
	a3Out = a3
	return a0_16
l2305258E:
	a3Out = a3
	return 4<32>
get_io_capa_exit:


word32 smp_chan_get(word32 ra, word32 a0, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_request_ltk
//      bt_smp_auth_passkey_entry
//      bt_smp_start_security
//      bt_smp_update_keys
//      ble_auth_pairing_confirm
//      ble_auth_passkey_confirm
//      ble_auth_cancel
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a4 a5 ra s1 s2 s3 s4 s5
// Trashed: a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
smp_chan_get_entry:
l230525B0:
	word32 a5_11
	branch bt_l2cap_le_lookup_rx_cid(a0, 6<32>, out a5_11) != 0<32> l230525CC
l230525C0:
	word32 a0_100
	word32 a1_101
	word32 a2_102
	word32 a7_103
	word32 s6_104
	word32 s7_105
	word32 s8_106
	word32 s9_107
	word32 s10_108
	word32 s11_109
	word32 t4_110
	ra = printf(ra, 0x230BBE1C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_100, out a1_101, out a2_102, out a3, out a4, out a5_11, out a7_103, out s2, out s3, out s4, out s5, out s6_104, out s7_105, out s8_106, out s9_107, out s10_108, out s11_109, out t4_110)
l230525CC:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5_11
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return ra
smp_chan_get_exit:


word32 atomic_set_bit(word32 s0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_complete
//      display_passkey
//      smp_timeout
//      smp_ident_info
//      smp_encrypt_info
//      legacy_request_tk
//      smp_create_pdu.isra.7
//      smp_dhkey_check
//      smp_master_ident
//      smp_init
//      smp_security_request
//      smp_pairing_req
//      bt_smp_dhkey_ready
//      bt_smp_encrypt_change
//      legacy_pairing_confirm
//      smp_pairing_confirm
//      smp_pairing_rsp
//      smp_ident_addr_info
//      smp_public_key
//      bt_smp_pkey_ready
//      smp_pairing_random
//      bt_smp_request_ltk
//      bt_smp_auth_passkey_entry
//      bt_smp_start_security
//      ble_auth_pairing_confirm
//      ble_auth_passkey_confirm
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3
// Preserved: sp
atomic_set_bit_entry:
l230525D6:
	word32 a1_5 = 1<32> << a1
l230525DC_thunk_atomic_or:
	word32 a0_10
	word32 a2_12
	word32 a3_13
	word32 a4_14
	word32 a5_15
	word32 s4_17
	word32 a1_26
	word32 s8_27
	word32 s1_16 = atomic_or(s0, a1_5, a3, a4, mstatus, out a0_10, out a1_26, out a2_12, out a3_13, out a4_14, out a5_15, out s4_17, out s8_27)
	a0Out = a0_10
	a2Out = a2_12
	a3Out = a3_13
	a4Out = a4_14
	a5Out = a5_15
	s4Out = s4_17
	return s1_16
atomic_set_bit_exit:


word32 atomic_test_bit(word32 a0, word32 a1, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_complete
//      update_keys_check
//      smp_pairing_failed
//      smp_timeout
//      smp_ident_info
//      smp_encrypt_info
//      get_pair_method
//      smp_create_pdu.isra.7
//      smp_dhkey_check
//      bt_smp_distribute_keys
//      smp_signing_info
//      smp_master_ident
//      smp_security_request
//      smp_pairing_req
//      bt_smp_dhkey_ready
//      bt_smp_recv
//      bt_smp_encrypt_change
//      legacy_pairing_confirm
//      smp_pairing_confirm
//      smp_pairing_rsp
//      smp_ident_addr_info
//      bt_smp_pkey_ready
//      smp_pairing_random
//      bt_smp_request_ltk
//      bt_smp_auth_passkey_entry
//      bt_smp_start_security
//      bt_smp_update_keys
//      ble_auth_pairing_confirm
//      ble_auth_passkey_confirm
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a2
// Trashed: a0 a2 t3
// Preserved: sp
atomic_test_bit_entry:
l230525E0:
	word32 a0_13 = atomic_get(a0) >> a1 & 1<32>
	a2Out = dwArg44
	return a0_13
atomic_test_bit_exit:


word32 smp_reset(word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_complete
//      bt_smp_connected
//      bt_smp_encrypt_change
//      bt_smp_request_ltk
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 a5 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_reset_entry:
l230525F8:
	word32 a3_21
	word32 a4_22
	word32 s5_32
	word32 s6_151
	word32 s8_152
	word32 s3_149
	word32 s4_150
	word32 a5_147
	word32 s2_148
	word32 a1_145
	word32 a2_146
	word32 a0_144
	word32 s1_24 = k_delayed_work_cancel(Mem11[s1:word32] + 388<i32>, a3, a4, mstatus, dwArg24, dwArg28, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_144, out a1_145, out a2_146, out a3_21, out a4_22, out a5_147, out s2_148, out s3_149, out s4_150, out s5_32, out s6_151, out s8_152)
	Mem43[a0 + 160<i32>:byte] = 0<8>
	word32 a3_47
	word32 a4_48
	word32 s4_154
	word32 a0_153
	word32 s8_155
	atomic_set(s1_24, 0<32>, a3_21, a4_22, mstatus, out a0_153, out a3_47, out a4_48, out s4_154, out s8_155)
	word32 a3_58
	word32 a0_156
	word32 a4_157
	word32 s4_158
	word32 s8_159
	atomic_set(s1_24, 0<32>, a3_47, a4_48, mstatus, out a0_156, out a3_58, out a4_157, out s4_158, out s8_159)
	word32 a5_65 = CONVERT(Mem43[s1_24 + 9<i32>:byte], byte, word32)
	word32 a4_66 = CONVERT(Mem43[s1_24 + 10<i32>:byte], byte, word32)
	branch a4_66 == a5_65 l23052638
l23052634:
	Mem67[s1_24 + 10<i32>:byte] = SLICE(a5_65, byte, 0)
l23052638:
	word32 a1_71 = 0xB<32>
	branch CONVERT(Mem69[s1_24 + 3<i32>:byte], byte, word32) == 0<32> l23052642
l23052640:
	a1_71 = 1<32>
l23052642:
	0<32> = dwArg38
l2305264E_thunk_atomic_set_bit:
	word32 a3_93
	word32 a4_94
	word32 a5_95
	word32 a0_160
	word32 a2_161
	word32 s4_162
	atomic_set_bit(s0, a1_71, a3_58, a4_66, mstatus, out a0_160, out a2_161, out a3_93, out a4_94, out a5_95, out s4_162)
	a4Out = a4_94
	a5Out = a5_95
	s5Out = s5_32
	return a3_93
smp_reset_exit:


word32 smp_pairing_complete(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_failed
//      smp_timeout
//      smp_signing_info
//      smp_master_ident
//      smp_error
//      bt_smp_encrypt_change
//      smp_ident_sent
//      smp_ident_addr_info
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 a5 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 sp
smp_pairing_complete_entry:
l23052652:
	word32 a1_52
	word32 a5_50
	word32 a0_27
	word32 s0_13 = a0
	word32 s2_14 = 0x42026000<32>
	branch a1 != 0<32> l2305268C
l2305268C:
	word32 a1_18 = a1 + 0xFFFFFFFF<32> & 255<i32>
	s1 = 8<32>
	branch a1_18 >u 0xD<32> l230526A8
l2305269A:
	s1 = CONVERT(Mem11[a1_18 + 0x230BBABC<32>:byte], byte, word32)
l230526A8:
	word32 a2_206
	a0_27 = atomic_test_bit(a0 + 156<i32>, 2<32>, out a2_206)
	branch a0_27 != 0<32> l230526B8
l230526B0:
	s0_13 = Mem11[a0_27:word32]
	ra = bt_conn_security_changed(ra, a0_27, s1, dwArg18, dwArg28, out s1, out a0_27, out a3, out a4, out s2_14)
l230526B8:
	word32 a5_49 = Mem11[s2_14 + 1552<i32>:int32]
	branch a5_49 == 0<32> l2305267C
l230526BE:
	a5_50 = Mem11[a5_49 + 28<i32>:word32]
	branch a5_50 == 0<32> l2305267C
l230526C2:
	a1_52 = s1
l23052668:
	word32 a2_205
	a0_27 = atomic_test_bit(a0 + 156<i32>, 0xC<32>, out a2_205)
	word32 a5_57 = Mem11[0x42026610<32>:int32]
	branch a5_57 == 0<32> l2305267C
l23052674:
	a5_50 = Mem11[a5_57 + 24<i32>:word32]
	a1_52 = CONVERT(a0_27 != 0<32>, bool, word32)
	branch a5_50 != 0<32> l230526C4
l230526C4:
	call a5_50 (retsize: 0;)
		uses: a0:a0_60,a1:a1_69,a3:a3_84,a4:a4_82,mstatus:mstatus,ra:ra_66,s0:Mem11[a0_60:word32],s1:s1_68,s2:s2_65,Stack +0028:dwArg18,Stack +0038:dwArg28
		defs: a3:a3_84,a4:a4_82,s0:s0_73,s1:s1_76
l2305267C:
	0<32> = dwArg38
l23052688_thunk_smp_reset:
	word32 a4_113
	word32 a5_114
	word32 s5_121
	word32 a3_112 = smp_reset(s0, s1, s0_13, a3, a4, mstatus, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_113, out a5_114, out s5_121)
	a4Out = a4_113
	a5Out = a5_114
	s5Out = s5_121
	return a3_112
smp_pairing_complete_exit:


word32 bt_smp_aes_cmac(word32 ra, word32 a0, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_sign_buf
//      smp_f4
//      smp_f5
//      smp_f6
//      smp_g2
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 sp
bt_smp_aes_cmac_entry:
l230526CA:
	word32 a5_104
	word32 a0_22
	word32 a5_23
	word32 s1_31
	word32 s2_32
	word32 a2_161
	word32 s8_162
	word32 a4_126
	word32 a3_124
	word32 a1_120
	word32 s3_132
	word32 s4_134
	word32 s5_136
	word32 ra_30 = tc_cmac_setup(ra, fp + -280<i32>, a0, fp + -192<i32>, dwLocE8, out s1_31, out a0_22, out a1_120, out a2_161, out a3_124, out a4_126, out a5_23, out s2_32, out s3_132, out s4_134, out s5_136, out s8_162)
	branch a0_22 == 0<32> l23052706
l230526EE:
	word32 a0_47
	word32 s0_50
	word32 s1_163
	word32 a2_164
	word32 a5_165
	word32 s2_166
	word32 s8_167
	word32 ra_61 = tc_cmac_update(ra_30, fp + -280<i32>, s1_31, s2_32, a4_126, a5_23, out s0_50, out s1_163, out a0_47, out a1_120, out a2_164, out a3_124, out a4_126, out a5_165, out s2_166, out s3_132, out s4_134, out s5_136, out s8_167)
	branch a0_47 == 0<32> l23052706
l230526FA:
	a5_104 = 0<32>
	word32 a2_168
	word32 s8_169
	branch tc_cmac_final(ra_61, s0_50, fp + -280<i32>, out a1_120, out a2_168, out a3_124, out a4_126, out s3_132, out s4_134, out s5_136, out s8_169) != 0<32> l23052708
l23052706:
	a5_104 = 0xFFFFFFFB<32>
l23052708:
	a1Out = a1_120
	a3Out = a3_124
	a4Out = a4_126
	a5Out = a5_104
	s3Out = s3_132
	s4Out = s4_134
	s5Out = s5_136
	return a5_104
bt_smp_aes_cmac_exit:


word32 smp_sign_buf(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg6C, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_sign_verify
//      bt_smp_sign
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +006C:[0..31]
// LiveOut: a0 a1 a3 a5 ra s0 s11 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_sign_buf_entry:
l2305271E:
	word32 a1_106
	word32 a5_104
	word32 a4_205
	word32 a5_206
	sys_mem_swap(a1, a2 + 4<i32>, out a4_205, out a5_206)
	sys_memcpy_swap(fp + -64<i32>, a0, 0x10<32>)
	word32 a3_53
	word32 a1_207
	word32 a4_208
	word32 a5_209
	word32 s3_210
	word32 s4_211
	word32 s5_212
	word32 a0_50 = bt_smp_aes_cmac(ra, fp + -64<i32>, out a1_207, out a3_53, out a4_208, out a5_209, out s3_210, out s4_211, out s5_212)
	word32 s1_14 = a1 + a2
	word32 s2_130 = a1
	word32 s3_131 = a0_50
	branch a0_50 == 0<32> l23052792
l23052792:
	word32 a4_213
	word32 a5_214
	sys_mem_swap(fp + -48<i32>, 0x10<32>, out a4_213, out a5_214)
	word32 a1_215
	word32 a2_216
	word32 a3_217
	word32 a4_218
	word32 a5_219
	word32 a6_220
	word32 a7_221
	memcpy(fp + -44<i32>, fp + -68<i32>, 4<32>, out a1_215, out a2_216, out a3_217, out a4_218, out a5_219, out a6_220, out a7_221)
	word32 a4_222
	word32 a5_223
	sys_mem_swap(a1, a2 + 4<i32>, out a4_222, out a5_223)
	word32 a2_224
	word32 a3_225
	word32 a4_226
	word32 a6_227
	word32 a7_228
	memcpy(s1_14, fp + -44<i32>, 0xC<32>, out a1_106, out a2_224, out a3_225, out a4_226, out a5_104, out a6_227, out a7_228)
l23052776:
	word32 s1_229
	word32 a0_230
	word32 a2_231
	word32 a3_232
	word32 a4_233
	word32 a7_234
	word32 s4_235
	word32 s5_236
	word32 s7_237
	word32 s8_238
	word32 s9_239
	word32 s10_240
	word32 t4_241
	printf(ra, 0x230BBEE0<32>, a3_53, dwLoc48, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C, out s1_229, out a0_230, out a1_106, out a2_231, out a3_232, out a4_233, out a5_104, out a7_234, out s2_130, out s3_131, out s4_235, out s5_236, out s6, out s7_237, out s8_238, out s9_239, out s10_240, out s11, out t4_241)
l23052782:
	s0Out = a2 + 4<i32>
	a0Out = s3_131
	a1Out = a1_106
	a3Out = s2
	a5Out = a5_104
	s2Out = s2_130
	s3Out = s3_131
	s6Out = s6
	s11Out = s11
	return dwLoc08
smp_sign_buf_exit:


word32 smp_f4(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_send_pairing_confirm
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] ra:[0..31]
// LiveOut: a1 a4 a5 s1 s2
// Trashed: a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_f4_entry:
l230527B8:
	sys_memcpy_swap(fp + -84<i32>, a0, 32<i32>)
	sys_memcpy_swap(fp + -52<i32>, a1, 32<i32>)
	sys_memcpy_swap(fp + -100<i32>, a2, 0x10<32>)
	word32 s5_123
	word32 s4_122
	word32 s3_121
	word32 a3_120
	word32 a4_102
	word32 a1_49
	word32 a5_103
	branch bt_smp_aes_cmac(ra, fp + -100<i32>, out a1_49, out a3_120, out a4_102, out a5_103, out s3_121, out s4_122, out s5_123) != 0<32> l2305280C
l23052804:
	a1_49 = sys_mem_swap(a4, 0x10<32>, out a4_102, out a5_103)
l2305280C:
	a1Out = a1_49
	a4Out = a4_102
	a5Out = a5_103
	s2Out = a1
	return a4
smp_f4_exit:


word32 sc_smp_check_confirm(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_random
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
sc_smp_check_confirm_entry:
l2305281A:
	word32 a5_5 = CONVERT(Mem0[a0 + 160<i32>:byte], byte, word32)
	branch a5_5 >u 5<32> l23052834
l23052834:
	return 8<32>
l23052824:
	word32 a5_13 = Mem0[(a5_5 << 2<i32>) + 0x230BB9E4<32>:word32]
	word32 a0_16
	call a5_13 (retsize: 0;)
		uses: a0:a0,a4:0x230BB9E4<32>,a5:a5_13
		defs: a0:a0_16
	return a0_16
sc_smp_check_confirm_exit:


void smp_f5(word32 ra, word32 a0, word32 a1, word32 a2, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a6:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s2 sp
smp_f5_entry:
l23052896:
	word32 a1_247
	word32 a0_246
	word32 t1_245
	word32 a2_248
	word32 a3_249
	word32 a4_250
	word32 a5_251
	word32 ra_45 = memset(ra, fp + -104<i32>, 0<32>, 53<i32>, out t1_245, out a0_246, out a1_247, out a2_248, out a3_249, out a4_250, out a5_251)
	sys_memcpy_swap(fp + -136<i32>, a0, 32<i32>)
	word32 s4_78
	word32 s5_79
	word32 a1_252
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 s3_256
	branch bt_smp_aes_cmac(ra_45, 0x230BBDCC<32>, out a1_252, out a3_253, out a4_254, out a5_255, out s3_256, out s4_78, out s5_79) != 0<32> l23052984
l23052908:
	sys_memcpy_swap(fp + -99<i32>, a1, 0x10<32>)
	sys_memcpy_swap(fp + -83<i32>, a2, 0x10<32>)
	sys_memcpy_swap(fp + -66<i32>, s5_79 + 1<i32>, 6<32>)
	sys_memcpy_swap(fp + -59<i32>, s4_78 + 1<i32>, 6<32>)
	word32 s3_133
	word32 a1_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	word32 s4_261
	word32 s5_262
	branch bt_smp_aes_cmac(ra_45, fp + -152<i32>, out a1_257, out a3_258, out a4_259, out a5_260, out s3_133, out s4_261, out s5_262) != 0<32> l23052984
l2305295E:
	word32 a4_263
	word32 a5_264
	sys_mem_swap(s3_133, 0x10<32>, out a4_263, out a5_264)
	word32 a1_265
	word32 a3_266
	word32 a4_267
	word32 a5_268
	word32 s3_269
	word32 s4_270
	word32 s5_271
	branch bt_smp_aes_cmac(ra_45, fp + -152<i32>, out a1_265, out a3_266, out a4_267, out a5_268, out s3_269, out s4_270, out s5_271) != 0<32> l23052984
l2305297C:
	word32 a4_272
	word32 a5_273
	sys_mem_swap(a6, 0x10<32>, out a4_272, out a5_273)
l23052984:
	return
smp_f5_exit:


void smp_f6(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_f6_entry:
l2305299C:
	sys_memcpy_swap(fp + -84<i32>, a1, 0x10<32>)
	sys_memcpy_swap(fp + -68<i32>, a2, 0x10<32>)
	sys_memcpy_swap(fp + -52<i32>, a3, 0x10<32>)
	word32 a5_55 = sys_memcpy_swap(fp + -36<i32>, a4, 3<32>)
	word32 a6_69
	word32 a7_200
	word32 a5_199
	word32 a4_198
	word32 a3_197
	word32 a2_196
	word32 a1_195
	memcpy(fp + -32<i32>, a5_55 + 1<i32>, 6<32>, out a1_195, out a2_196, out a3_197, out a4_198, out a5_199, out a6_69, out a7_200)
	sys_memcpy_swap(fp + -32<i32>, a5_55 + 1<i32>, 6<32>)
	0<32> = dwLoc78
	word32 a7_207
	word32 a6_206
	word32 a5_205
	word32 a4_204
	word32 a3_203
	word32 a2_202
	word32 a1_201
	memcpy(fp + -25<i32>, a6_69 + 1<i32>, 6<32>, out a1_201, out a2_202, out a3_203, out a4_204, out a5_205, out a6_206, out a7_207)
	sys_memcpy_swap(fp + -25<i32>, a6_69 + 1<i32>, 6<32>)
	sys_memcpy_swap(fp + -100<i32>, a0, 0x10<32>)
	word32 a1_208
	word32 a3_209
	word32 a4_210
	word32 a5_211
	word32 s3_212
	word32 s4_213
	word32 s5_214
	branch bt_smp_aes_cmac(ra, fp + -100<i32>, out a1_208, out a3_209, out a4_210, out a5_211, out s3_212, out s4_213, out s5_214) != 0<32> l23052A4A
l23052A42:
	word32 a4_215
	word32 a5_216
	sys_mem_swap(a7, 0x10<32>, out a4_215, out a5_216)
l23052A4A:
	return
smp_f6_exit:


void smp_g2(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_g2_entry:
l23052A58:
	sys_memcpy_swap(fp + -96<i32>, a0, 32<i32>)
	sys_memcpy_swap(fp + -64<i32>, a1, 32<i32>)
	sys_memcpy_swap(fp + -32<i32>, a3, 0x10<32>)
	sys_memcpy_swap(fp + -112<i32>, a2, 0x10<32>)
	word32 s3_151
	word32 a5_150
	word32 a4_149
	word32 a3_148
	word32 a1_147
	word32 s4_152
	word32 s5_153
	branch bt_smp_aes_cmac(ra, fp + -112<i32>, out a1_147, out a3_148, out a4_149, out a5_150, out s3_151, out s4_152, out s5_153) != 0<32> l23052AE6
l23052AAA:
	word32 a3_82
	word32 a1_154
	word32 a2_155
	word32 a4_156
	word32 a5_157
	word32 a6_158
	word32 a7_159
	memcpy(a4, fp + -100<i32>, 4<32>, out a1_154, out a2_155, out a3_82, out a4_156, out a5_157, out a6_158, out a7_159)
	Mem106[(a3_82 >>u 0x18<u32> | a3_82 << 0x18<u32> | a3_82 >>u 8<u32> & 0xFFFFF00<32> | a3_82 << 8<i32> & 0xFF0000<32>) & 0xF4240<32>:word32] = Mem21[a3_82:word32]
l23052AE6:
	return
smp_g2_exit:


word32 atomic_test_and_clear_bit(word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_failed
//      bt_smp_dhkey_ready
//      bt_smp_recv
//      bt_smp_auth_passkey_entry
//      ble_auth_pairing_confirm
//      ble_auth_passkey_confirm
//      ble_auth_cancel
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3
// Preserved: s0 sp
atomic_test_and_clear_bit_entry:
l23052AF4:
	word32 s0_8 = 1<32> << a1
	word32 a0_19
	word32 a1_20
	word32 a3_22
	word32 a4_23
	word32 a5_24
	word32 s4_26
	word32 a2_43
	word32 s8_44
	word32 s1_25 = atomic_and(s0_8, ~s0_8, a3, a4, mstatus, out a0_19, out a1_20, out a2_43, out a3_22, out a4_23, out a5_24, out s4_26, out s8_44)
	a0Out = CONVERT((a0_19 & s0_8) != 0<32>, bool, word32)
	a1Out = a1_20
	a3Out = a3_22
	a4Out = a4_23
	a5Out = a5_24
	s4Out = s4_26
	return s1_25
atomic_test_and_clear_bit_exit:


void display_passkey(word32 ra, word32 a0, word32 a2, word32 mstatus, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s1 s2 s4 s8 t3 tp
// Preserved: s0 sp
display_passkey_entry:
l23052B1E:
	word32 a0_17
	word32 a3_20
	word32 s4_104
	word32 a5_103
	word32 a4_102
	word32 a1_101
	word32 s8_105
	bt_rand(a0 + 368<i32>, 4<32>, a2, out a0_17, out a1_101, out a3_20, out a4_102, out a5_103, out s4_104, out s8_105)
	branch a0_17 != 0<32> l23052B78
l23052B38:
	word32 a5_29 = Mem15[a0 + 368<i32>:int32]
	Mem34[a0 + 372<i32>:byte] = 0<8>
	Mem36[a0 + 368<i32>:word32] = a5_29 & 0xF4240<32>
	word32 a5_37 = Mem36[0x42026610<32>:int32]
	branch a5_37 == 0<32> l23052B78
l23052B5C:
	branch Mem36[a5_37:word32] == 0<32> l23052B78
l23052B60:
	word32 a0_42
	word32 a2_44
	word32 a3_106
	word32 a4_107
	word32 a5_108
	word32 s4_109
	word32 s1_48 = atomic_set_bit(a0, 0xA<32>, a3_20, 0xF4240<32>, mstatus, out a0_42, out a2_44, out a3_106, out a4_107, out a5_108, out s4_109)
	word32 a5_55 = Mem36[Mem36[0x42026610<32>:int32]:word32]
	call a5_55 (retsize: 0;)
		uses: a0:a0_42,a1:Mem36[a0 + 368<i32>:int32],a2:a2_44,a5:a5_55,mstatus:mstatus,ra:ra,s0:Mem36[a0_42:word32],s1:s1_48,s2:0x42026000<32>
l23052B78:
	0<32> = dwArg38
	return
display_passkey_exit:


word32 update_keys_check(word32 ra, word32 s0, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      smp_pairing_rsp
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 s1 t3 tp
// Preserved: a6 a7 mstatus ra s0 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t0 t1 t4 t5 t6
update_keys_check_entry:
l23052B86:
	word32 s1_11 = Mem9[s0:word32]
	branch Mem9[s0 + 156<i32>:int32] != 0<32> l23052BA8
l23052B98:
	word32 a0_19
	word32 s4_309
	word32 mstatus_311
	word32 s5_310
	word32 a3_306
	word32 s2_307
	word32 s3_308
	bt_keys_get_addr(ra, s0, CONVERT(Mem9[s0 + 8<i32>:byte], byte, word32), s0 + 112<i32>, s2, s3, s4, mstatus, dwLoc10, s0, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0, out s1_11, out a0_19, out a3_306, out a4, out s2_307, out s3_308, out s4_309, out s5_310, out mstatus_311)
	Mem48[s0 + 156<i32>:word32] = a0_19
l23052BA8:
	word32 a0_144
	word32 a3_152 = Mem50[s0 + 156<i32>:int32]
	branch a3_152 != 0<32> l23052BBA
l23052BBA:
	a4 = CONVERT(Mem50[a3_152 + 10<i32>:uint16], uint16, word32)
	branch (a4 & 36<i32>) == 0<32> l23052BAE
l23052BC4:
	word32 a2_55 = CONVERT(Mem50[s1_11 + 165<i32>:byte], byte, word32)
	word32 a5_56 = CONVERT(Mem50[s1_11 + 172<i32>:byte], byte, word32)
	branch a2_55 >=u a5_56 l23052BD2
l23052BD0:
	a5_56 = a2_55
l23052BD2:
	a3_152 = CONVERT(Mem50[a3_152 + 8<i32>:byte], byte, word32)
	branch (a5_56 & 255<i32>) >=u a3_152 l23052BE2
l23052BE2:
	a4 = a4 & 32<i32>
	branch (a4 & 32<i32>) != 0<32> l23052BFE
l23052BFE:
	word32 a2_312
	branch atomic_test_bit(s1_11 + 156<i32>, 5<32>, out a2_312) != 0<32> l23052BE8
l23052C0A:
l23052BE8:
	branch (CONVERT(Mem50[Mem50[s0 + 156<i32>:int32] + 9<i32>:byte], byte, word32) & 1<32>) == 0<32> l23052BAE
l23052BF4:
	a0_144 = CONVERT(CONVERT(Mem50[s1_11 + 160<i32>:byte], byte, word32) != 0<32>, bool, word32)
l23052BDE:
	a0_144 = 0<32>
l23052BAE:
	a0_144 = 1<32>
l23052BB0:
	a3Out = a3_152
	a4Out = a4
	return a0_144
update_keys_check_exit:


void smp_pairing_failed(word32 ra, word32 s1, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus sp
smp_pairing_failed_entry:
l23052C0C:
	word32 a5_117
	word32 a3_28
	word32 a4_29
	word32 t4_324
	word32 s11_323
	word32 s10_322
	word32 s9_321
	word32 s8_320
	word32 s7_319
	word32 s6_318
	word32 s5_317
	word32 s4_316
	word32 a2_313
	word32 a5_314
	word32 a7_315
	word32 a1_312
	word32 a0_311
	word32 s1_310
	word32 s2_122
	word32 s3_123
	word32 ra_121 = printf(ra, 0x230BBE7C<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_310, out a0_311, out a1_312, out a2_313, out a3_28, out a4_29, out a5_314, out a7_315, out s2_122, out s3_123, out s4_316, out s5_317, out s6_318, out s7_319, out s8_320, out s9_321, out s10_322, out s11_323, out t4_324)
	word32 s0_119 = a0
	word32 a0_49
	word32 a5_325
	word32 a1_50
	word32 s4_124
	word32 a4_100
	word32 a3_127
	word32 s1_112 = atomic_test_and_clear_bit(9<32>, a3_28, a4_29, mstatus, out a0_49, out a1_50, out a3_127, out a4_100, out a5_325, out s4_124)
	branch a0_49 == 0<32> l23052C7A
l23052C7A:
	word32 a0_61
	s1_112 = atomic_test_and_clear_bit(0xA<32>, a3_127, a4_100, mstatus, out a0_61, out a1_50, out a3_127, out a4_100, out a5_117, out s4_124)
	branch a0_61 != 0<32> l23052C40
l23052C84:
l23052C40:
	a5_117 = Mem13[0x42026610<32>:int32]
	branch a5_117 != 0<32> l23052C86
l23052C86:
	a5_117 = Mem13[a5_117 + 16<i32>:word32]
	branch a5_117 == 0<32> l23052C4A
l23052C8A:
	call a5_117 (retsize: 0;)
		uses: a0:s3_36,a1:a1_81,a3:a3_82,mstatus:mstatus,ra:ra_31,s0:a0,s1:s1_78,s2:s2_35,s3:s3_36,Stack +0028:dwArg08,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0098:dwArg78,Stack +00BC:dwArg9C
		defs: a3:a3_99,a4:a4_100,a5:a5_93,mstatus:mstatus_110,ra:ra_88,s0:s0_86,s1:s1_87,s2:s2_89,s3:s3_90,s4:s4_96
l23052C4A:
	word32 a2_326
	branch atomic_test_bit(s1_112, 2<32>, out a2_326) == 0<32> l23052C60
l23052C54:
	s0_119 = Mem13[a5_117:word32]
	word32 a0_120 = Mem13[a5_117 + 156<i32>:int32]
	branch a0_120 == 0<32> l23052C60
l23052C5C:
	ra_121 = bt_keys_clear(ra_121, s0_119, s1_112, a0_120, a3_127, s2_122, s3_123, s4_124, mstatus, dwLoc20, dwLoc1C, s2, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg58, s1, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out a3_127, out a4_100)
l23052C60:
	word32 a5_328
	word32 s5_329
	word32 a4_327
	smp_pairing_complete(ra_121, s0_119, s1_112, s0_119, CONVERT(Mem13[s2_122:byte], byte, word32), a3_127, a4_100, mstatus, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArgB8, dwArgF8, out a4_327, out a5_328, out s5_329)
	return
smp_pairing_failed_exit:


void smp_timeout(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg54, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_timeout_entry:
l23052C90:
	word32 s1_28
	word32 s2_31
	word32 s3_32
	word32 s4_33
	word32 s10_169
	word32 s9_168
	word32 s8_167
	word32 s7_166
	word32 s6_165
	word32 s5_164
	word32 a7_163
	word32 a0_159
	word32 a1_160
	word32 a2_161
	word32 a5_162
	word32 s11_170
	word32 t4_171
	word32 a4_25
	word32 a3_24
	word32 ra_27 = printf(ra, 0x230BBEF8<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_28, out a0_159, out a1_160, out a2_161, out a3_24, out a4_25, out a5_162, out a7_163, out s2_31, out s3_32, out s4_33, out s5_164, out s6_165, out s7_166, out s8_167, out s9_168, out s10_169, out s11_170, out t4_171)
	word32 a2_172
	branch atomic_test_bit(s1_28, 2<32>, out a2_172) == 0<32> l23052CC8
l23052CBA:
	word32 a0_47 = Mem16[Mem16[a0 + -388<i32>:int32] + 156<i32>:int32]
	branch a0_47 == 0<32> l23052CC8
l23052CC4:
	ra_27 = bt_keys_clear(ra_27, a0, s1_28, a0_47, a3_24, s2_31, s3_32, s4_33, mstatus, s2, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg54, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out a3_24, out a4_25)
l23052CC8:
	word32 a3_68
	word32 a4_69
	word32 a0_173
	word32 a2_174
	word32 a5_175
	word32 s4_176
	word32 s1_71 = atomic_set_bit(a0, 4<32>, a3_24, a4_25, mstatus, out a0_173, out a2_174, out a3_68, out a4_69, out a5_175, out s4_176)
	0<32> = dwArg38
l23052CDE_thunk_smp_pairing_complete:
	word32 a4_177
	word32 a5_178
	word32 s5_179
	smp_pairing_complete(ra_27, s0, s1_71, s2_31, 8<32>, a3_68, a4_69, mstatus, dwArg18, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_177, out a5_178, out s5_179)
	return
smp_timeout_exit:


void smp_ident_info(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_ident_info_entry:
l23052CE2:
	word32 s0_22 = a0
	word32 a2_251
	branch atomic_test_bit(a0 + 156<i32>, 0xC<32>, out a2_251) == 0<32> l23052D42
l23052CFC:
	s0_22 = Mem17[a5:word32]
	word32 a0_29
	word32 s1_36
	word32 s2_37
	word32 a3_258
	word32 s3_259
	word32 s4_260
	word32 s5_261
	word32 ra_45 = bt_keys_get_type(ra, s0_22, 2<32>, CONVERT(Mem17[a5 + 8<i32>:byte], byte, word32), a5 + 112<i32>, Mem17[a1 + 8<i32>:int32], mstatus, s2, s0, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_36, out a0_29, out a3_258, out s2_37, out s3_259, out s4_260, out s5_261, out mstatus)
	branch a0_29 != 0<32> l23052D36
l23052D36:
	word32 a1_262
	word32 a2_263
	word32 a5_264
	word32 a6_265
	word32 a7_266
	memcpy(a0_29 + 38<i32>, s2_37, 0x10<32>, out a1_262, out a2_263, out a3, out a4, out a5_264, out a6_265, out a7_266)
l23052D42:
	word32 a0_252
	word32 a2_253
	word32 a3_254
	word32 a4_255
	word32 a5_256
	word32 s4_257
	atomic_set_bit(s0_22, 9<32>, a3, a4, mstatus, out a0_252, out a2_253, out a3_254, out a4_255, out a5_256, out s4_257)
l23052D14:
	word32 a3_96
	word32 s0_267
	word32 s1_268
	word32 a0_269
	word32 a1_270
	word32 a2_271
	word32 a3_272
	word32 a4_273
	word32 a5_274
	word32 a7_275
	word32 s2_276
	word32 s3_277
	word32 s4_278
	word32 s5_279
	word32 s6_280
	word32 s7_281
	word32 s8_282
	word32 s9_283
	word32 s10_284
	word32 s11_285
	word32 t4_286
	printf(bt_addr_le_str_real(ra_45, s1_36, dwLoc08, dwArg24, dwArg40, dwArg44, dwArg68, dwArg8C, dwArg0118, out s0_267, out a3_96), 0x230BBE60<32>, a3_96, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_268, out a0_269, out a1_270, out a2_271, out a3_272, out a4_273, out a5_274, out a7_275, out s2_276, out s3_277, out s4_278, out s5_279, out s6_280, out s7_281, out s8_282, out s9_283, out s10_284, out s11_285, out t4_286)
l23052D2A:
	0<32> = dwArg38
	return
smp_ident_info_exit:


void smp_encrypt_info(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_encrypt_info_entry:
l23052D50:
	word32 s0_22 = a0
	word32 a2_251
	branch atomic_test_bit(a0 + 156<i32>, 0xC<32>, out a2_251) == 0<32> l23052DAE
l23052D6A:
	s0_22 = Mem17[a5:word32]
	word32 a0_29
	word32 s1_36
	word32 s2_37
	word32 a3_258
	word32 s3_259
	word32 s4_260
	word32 s5_261
	word32 ra_45 = bt_keys_get_type(ra, s0_22, 4<32>, CONVERT(Mem17[a5 + 8<i32>:byte], byte, word32), a5 + 112<i32>, Mem17[a1 + 8<i32>:int32], mstatus, s2, s0, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_36, out a0_29, out a3_258, out s2_37, out s3_259, out s4_260, out s5_261, out mstatus)
	branch a0_29 != 0<32> l23052DA4
l23052DA4:
	word32 a1_262
	word32 a2_263
	word32 a5_264
	word32 a6_265
	word32 a7_266
	memcpy(a0_29 + 0x16<32>, s2_37, 0x10<32>, out a1_262, out a2_263, out a3, out a4, out a5_264, out a6_265, out a7_266)
l23052DAE:
	word32 a0_252
	word32 a2_253
	word32 a3_254
	word32 a4_255
	word32 a5_256
	word32 s4_257
	atomic_set_bit(s0_22, 7<32>, a3, a4, mstatus, out a0_252, out a2_253, out a3_254, out a4_255, out a5_256, out s4_257)
l23052D82:
	word32 a3_96
	word32 s0_267
	word32 s1_268
	word32 a0_269
	word32 a1_270
	word32 a2_271
	word32 a3_272
	word32 a4_273
	word32 a5_274
	word32 a7_275
	word32 s2_276
	word32 s3_277
	word32 s4_278
	word32 s5_279
	word32 s6_280
	word32 s7_281
	word32 s8_282
	word32 s9_283
	word32 s10_284
	word32 s11_285
	word32 t4_286
	printf(bt_addr_le_str_real(ra_45, s1_36, dwLoc08, dwArg24, dwArg40, dwArg44, dwArg68, dwArg8C, dwArg0118, out s0_267, out a3_96), 0x230BBE60<32>, a3_96, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_268, out a0_269, out a1_270, out a2_271, out a3_272, out a4_273, out a5_274, out a7_275, out s2_276, out s3_277, out s4_278, out s5_279, out s6_280, out s7_281, out s8_282, out s9_283, out s10_284, out s11_285, out t4_286)
l23052D98:
	0<32> = dwArg38
	return
smp_encrypt_info_exit:


word32 legacy_request_tk(word32 ra, word32 s1, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgC4, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      smp_pairing_rsp
// MayUse:  mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00C4:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s2 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
legacy_request_tk_entry:
l23052DBC:
	word32 a4_104
	word32 a1_111
	word32 a0_12 = Mem11[s1:word32]
	word32 a0_16
	word32 a2_18
	word32 a5_378
	word32 a4_377
	word32 a3_103
	word32 s2_116
	bt_keys_find_addr(CONVERT(Mem11[s1 + 8<i32>:byte], byte, word32), s1 + 112<i32>, dwArg18, out a0_16, out a2_18, out a3_103, out a4_377, out a5_378, out s2_116)
	word32 s0_13 = a0_12
	word32 a5_25 = CONVERT(Mem11[a0_12 + 160<i32>:byte], byte, word32)
	branch a0_16 == 0<32> l23052DF6
l23052DDC:
	branch (CONVERT(Mem11[a0_16 + 9<i32>:byte], byte, word32) & 1<32>) == 0<32> l23052DF6
l23052DE4:
	branch a5_25 != 0<32> l23052DF6
l23052DF6:
	a4_104 = 1<32>
	a1_111 = a5_25
	branch a5_25 == 1<32> l23052E74
l23052E74:
	word32 a0_394
	word32 a2_395
	word32 a3_396
	word32 a4_397
	word32 a5_398
	word32 s4_399
	word32 s1_43 = atomic_set_bit(a0_12, 9<32>, a3_103, 1<32>, mstatus, out a0_394, out a2_395, out a3_396, out a4_397, out a5_398, out s4_399)
	word32 a5_51 = Mem11[Mem11[0x42026610<32>:int32] + 4<i32>:word32]
	word32 s6_227
	word32 s3_225
	word32 s11_224
	word32 s10_223
	word32 a7_222
	word32 s7_228
	word32 s9_229
	word32 t0_230
	word32 t4_231
	call a5_51 (retsize: 0;)
		uses: a0:s1_43,a5:a5_51,a7:a7_222,mstatus:mstatus,ra:ra,s0:a0_12,s1:s1_43,s10:s10_223,s11:s11_224,s2:s2_23,s3:s3_225,s5:s5_226,s6:s6_227,s7:s7_228,s9:s9_229,Stack +0028:dwArg08,Stack +0038:dwArg18,Stack +0064:dwArg44,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0098:dwArg78,Stack +00BC:dwArg9C,Stack +00E4:dwArgC4,t0:t0_230,t4:t4_231
		defs: a3:a3_69,a4:a4_63,a7:a7_222,mstatus:mstatus_71,ra:ra_57,s0:s0_56,s10:s10_223,s11:s11_224,s2:s2_59,s3:s3_225,s5:s5_226,s6:s6_227,s7:s7_228,s9:s9_229,t0:t0_230,t4:t4_231
l23052DFE:
	branch a5_25 == 0<32> l23052E66
l23052E00:
	branch a5_25 != 2<32> l23052E8E
l23052E8E:
	word32 s1_400
	word32 a0_401
	word32 a1_402
	word32 a2_403
	word32 a5_404
	word32 a7_405
	word32 s3_406
	word32 s4_407
	word32 s6_408
	word32 s7_409
	word32 s8_410
	word32 s9_411
	word32 s10_412
	word32 s11_413
	word32 t4_414
	ra = printf(ra, 0x230BBDAC<32>, a3_103, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_400, out a0_401, out a1_402, out a2_403, out a3_103, out a4_104, out a5_404, out a7_405, out s2_116, out s3_406, out s4_407, out s5, out s6_408, out s7_409, out s8_410, out s9_411, out s10_412, out s11_413, out t4_414)
l23052E06:
	word32 a0_100
	word32 a1_415
	word32 a5_416
	word32 s4_417
	word32 s8_418
	bt_rand(fp + 0xFFFFFFEC<32>, 4<32>, a2_18, out a0_100, out a1_415, out a3_103, out a4_104, out a5_416, out s4_417, out s8_418)
	a1_111 = 8<32>
	branch a0_100 != 0<32> l23052E66
l23052E12:
	s2_116 = 0x42026000<32>
	word32 a5_118 = Mem117[0x42026610<32>:int32]
	branch a5_118 == 0<32> l23052E46
l23052E2C:
	a5_118 = Mem117[a5_118:word32]
	branch a5_118 == 0<32> l23052E46
l23052E30:
	word32 a0_419
	word32 a2_420
	word32 a3_421
	word32 a4_422
	word32 a5_423
	word32 s4_424
	word32 s1_128 = atomic_set_bit(a0_12, 0xA<32>, a3_103, 0xF4240<32>, mstatus, out a0_419, out a2_420, out a3_421, out a4_422, out a5_423, out s4_424)
	word32 a5_135 = Mem117[Mem117[0x42026610<32>:int32]:word32]
	word32 a7_153
	word32 s10_154
	word32 s11_155
	word32 s3_156
	word32 s6_158
	word32 s7_159
	word32 s9_160
	word32 t0_161
	word32 t4_162
	call a5_135 (retsize: 0;)
		uses: a0:s1_128,a2:dwArg44,a5:a5_135,a7:a7_153,mstatus:mstatus,ra:ra,s0:a0_12,s1:s1_128,s10:s10_154,s11:s11_155,s2:0x42026000<32>,s3:s3_156,s5:s5_157,s6:s6_158,s7:s7_159,s9:s9_160,Stack +0028:dwArg08,Stack +0038:dwArg18,Stack +0064:dwArg44,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0098:dwArg78,Stack +00BC:dwArg9C,Stack +00E4:dwArgC4,t0:t0_161,t4:t4_162
		defs: a3:a3_150,a5:a5_143,a7:a7_153,mstatus:mstatus_152,ra:ra_138,s0:s0_137,s10:s10_154,s11:s11_155,s2:s2_140,s3:s3_156,s5:s5_157,s6:s6_158,s7:s7_159,s9:s9_160,t0:t0_161,t4:t4_162
l23052E46:
	Mem169[s0_13 + 223<i32>:byte] = SLICE(a5_118, byte, 0)
	word32 a4_167 = a5_118 << 0x10<u32>
	word32 a5_171 = a5_118 >>u 16<i32>
	Mem173[s0_13 + 225<i32>:byte] = SLICE(a5_171, byte, 0)
	Mem175[s0_13 + 224<i32>:byte] = SLICE(a4_167 >>u 24<i32>, byte, 0)
	Mem176[s0_13 + 226<i32>:byte] = SLICE(a5_171 >>u 8<i32>, byte, 0)
	a4_104 = a4_167 >>u 24<i32>
l23052E64:
	a1_111 = 0<32>
l23052DE6:
	word32 s1_379
	word32 a2_382
	word32 a1_381
	word32 a5_383
	word32 a7_384
	word32 a0_380
	word32 s6_387
	word32 s4_386
	word32 s7_388
	word32 s8_389
	word32 s3_385
	word32 s9_390
	word32 s10_391
	word32 s11_392
	word32 t4_393
	ra = printf(ra, 0x230BBD7C<32>, a3_103, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_379, out a0_380, out a1_381, out a2_382, out a3_103, out a4_104, out a5_383, out a7_384, out s2_116, out s3_385, out s4_386, out s5, out s6_387, out s7_388, out s8_389, out s9_390, out s10_391, out s11_392, out t4_393)
l23052DF2:
	a1_111 = 8<32>
l23052E66:
	s0Out = s0_13
	a0Out = a1_111
	a3Out = a3_103
	a4Out = a4_104
	s2Out = s2_116
	s5Out = s5
	mstatusOut = mstatus
	return ra
legacy_request_tk_exit:


void bt_smp_disconnected(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_smp_disconnected_entry:
l23052E9C:
	word32 a0_13 = Mem11[a5:word32]
	word32 a1_328
	word32 a0_327
	word32 a5_330
	word32 s6_332
	word32 a2_329
	word32 s5_331
	word32 s8_333
	word32 a4_24
	word32 s2_110
	word32 s3_113
	word32 s4_116
	word32 a3_121
	word32 s1_26 = k_delayed_work_cancel(a0_13 + 388<i32>, a3, a4, mstatus, dwArg24, dwArg28, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_327, out a1_328, out a2_329, out a3_121, out a4_24, out a5_330, out s2_110, out s3_113, out s4_116, out s5_331, out s6_332, out s8_333)
	word32 a5_43 = Mem11[a0_13 + 404<i32>:int32]
	branch a5_43 == 0<32> l23052EC4
l23052EBE:
	word32 a0_334
	word32 s5_336
	word32 s8_338
	word32 a2_335
	word32 s6_337
	s1_26 = k_delayed_work_del_timer(s2_110, a4_24, a5_43, mstatus, dwArg24, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_334, out a2_335, out a3_121, out a4_24, out a5_43, out s2_110, out s3_113, out s4_116, out s5_336, out s6_337, out s8_338)
l23052EC4:
	word32 s0_69 = Mem11[a5_43 + 32<i32>:word32]
	branch a5_43 == 0<32> l23052ED0
l23052EC8:
	word32 a2_340
	word32 a5_342
	word32 a4_341
	word32 a0_339
	word32 s6_344
	word32 s5_343
	word32 s8_345
	s1_26 = k_delayed_work_del_timer(s0_69 + 16<i32>, a4_24, a5_43, mstatus, dwArg24, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_339, out a2_340, out a3_121, out a4_341, out a5_342, out s2_110, out s3_113, out s4_116, out s5_343, out s6_344, out s8_345)
l23052ED0:
	branch s1_26 == 0<32> l23052EE6
l23052ED2:
	branch CONVERT(Mem11[s1_26 + 10<i32>:uint16], uint16, word32) == 0<32> l23052EE0
l23052ED8:
	branch (CONVERT(Mem11[s1_26 + 9<i32>:byte], byte, word32) & 2<32>) == 0<32> l23052EE6
l23052EE0:
	word32 a3_346
	word32 a4_347
	ra = bt_keys_clear(ra, s0_69, s1_26, s1_26, a3_121, s2_110, s3_113, s4_116, mstatus, s2, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg54, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out a3_346, out a4_347)
l23052EE6:
	0<32> = dwArg38
l23052EF8_thunk_memset:
	word32 a5_354
	word32 a2_351
	word32 a3_352
	word32 a4_353
	word32 a0_349
	word32 a1_350
	word32 t1_348
	memset(ra, s0_69, 0<32>, 424<i32>, out t1_348, out a0_349, out a1_350, out a2_351, out a3_352, out a4_353, out a5_354)
	return
bt_smp_disconnected_exit:


void bt_smp_connected(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg84, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0084:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_smp_connected_entry:
l23052EFC:
	word32 a3_19
	word32 a4_20
	word32 a0_69
	word32 a5_70
	word32 s2_71
	word32 s3_72
	word32 s4_73
	word32 s5_74
	word32 s1_23 = k_delayed_work_init(ra, a0, a0 + 388<i32>, a3, a4, mstatus, dwArg84, dwArgB8, dwArgD8, dwArg0118, out a0_69, out a3_19, out a4_20, out a5_70, out s2_71, out s3_72, out s4_73, out s5_74)
l23052F1C_thunk_smp_reset:
	word32 a4_75
	word32 a5_76
	word32 s5_77
	smp_reset(s0, s1_23, a0, a3_19, a4_20, mstatus, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_75, out a5_76, out s5_77)
	return
bt_smp_connected_exit:


word32 get_auth.isra.0(word32 a0, word32 a1, word32 a3, word32 a4, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      bt_smp_start_security
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
get_auth.isra.0_entry:
l23052F20:
	word32 s0_16 = a1 & 15<i32>
	branch CONVERT(Mem0[0x4200F4A0<32>:byte], byte, word32) != 0<32> l23052F3C
l23052F38:
	s0_16 = a1 & 7<i32>
l23052F3C:
	word32 a5_31
	word32 a3_24
	branch get_io_capa(a3, a4, out a3_24) == 3<32> l23052F54
l23052F46:
	a3_24 = CONVERT(Mem12[a0:byte], byte, word32)
	a5_31 = s0_16 | 4<i32>
	branch a3_24 >u 2<32> l23052F58
l23052F54:
	a5_31 = s0_16 & 11<i32>
l23052F58:
	word32 a4_37 = CONVERT(Mem12[0x4200EC3D<32>:byte], byte, word32)
	word32 a0_39 = a5_31 & 254<i32>
	branch a4_37 == 0<32> l23052F6A
l23052F66:
	a0_39 = a5_31 | 1<i32>
l23052F6A:
	a0Out = a0_39
	a3Out = a3_24
	a4Out = a4_37
	a5Out = a5_31
	return a0
get_auth.isra.0_exit:


word32 sec_level_reachable.isra.1(word32 a0, word32 a3, word32 a4, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_start_security
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a3 a4 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
sec_level_reachable.isra.1_entry:
l23052F74:
	word32 a0_26
	branch a0 == 3<32> l23052FC2
l23052FC2:
	word32 a5_18 = 1<32>
	branch get_io_capa(a3, a4, out a3) != a0 l23052FE4
l23052FCC:
	a4 = Mem9[0x42026610<32>:int32]
	a5_18 = 0<32>
	branch a4 == 0<32> l23052FE4
l23052FD8:
	a4 = Mem9[a4 + 12<i32>:word32]
	branch a4 == 0<32> l23052FE4
l23052FDC:
	a5_18 = CONVERT(Mem9[0x4200F498<32>:byte], byte, word32)
l23052FE4:
	a0_26 = a5_18 & 1<i32>
l23052F84:
	a0_26 = CONVERT(a0 != 0<32>, bool, word32)
	branch a0 <=u 3<32> l23052FE8
l23052F8C:
	a0_26 = 0<32>
	branch a0 != 4<32> l23052FE8
l23052F94:
	word32 a0_35
	branch get_io_capa(a3, a4, out a3) != 3<32> l23052FB6
l23052F9C:
	word32 a5_34 = Mem9[0x42026610<32>:int32]
	a0_35 = 0<32>
	branch a5_34 == 0<32> l23052FBE
l23052FA8:
	branch Mem9[a5_34 + 12<i32>:word32] == 0<32> l23052FBE
l23052FAC:
	branch CONVERT(Mem9[0x4200F498<32>:byte], byte, word32) == 0<32> l23052FBE
l23052FB6:
	a0_35 = CONVERT(Mem9[0x4200F4A0<32>:byte], byte, word32)
l23052FBE:
	a0_26 = a0_35 & 1<32>
l23052FE8:
	a0Out = a0_26
	a3Out = a3
	a4Out = a4
	return 3<32>
sec_level_reachable.isra.1_exit:


void bt_smp_accept(word32 ra, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bt_smp_accept_entry:
l23052FF2:
	word32 a4_10
	word32 a4_6 = Mem0[a3:word32]
	branch a3 == 0<32> l23053022
l23053022:
	a4_10 = 0<32>
l23053002:
	branch Mem0[a4_6 + 424<i32>:int32] == 0<32> l2305303E
l2305303E:
	a4_10 = 1<32>
l23053024:
	word32 a4_13 = a4_10 + 424<i32>
	Mem19[0x4200DEA8<32>:word32] = a4_13 + 0x42016954<32>
	Mem22[a4_13 + 0x42016954<32>:word32] = a1
	return
l23053008:
	word32 s11_137
	word32 s10_136
	word32 s9_135
	word32 s8_134
	word32 s7_133
	word32 s6_132
	word32 s5_131
	word32 s4_130
	word32 s3_129
	word32 s2_128
	word32 a7_127
	word32 a5_126
	word32 a4_125
	word32 a3_124
	word32 a2_123
	word32 a1_122
	word32 a0_121
	word32 s1_120
	word32 t4_138
	printf(ra, 0x230BBACC<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_120, out a0_121, out a1_122, out a2_123, out a3_124, out a4_125, out a5_126, out a7_127, out s2_128, out s3_129, out s4_130, out s5_131, out s6_132, out s7_133, out s8_134, out s9_135, out s10_136, out s11_137, out t4_138)
	return
bt_smp_accept_exit:


word32 smp_keys_check.part.5(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_start_security
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5 tp
// Preserved: a1 a6 s0 s1 s2 s3 s4 s8 sp t3
smp_keys_check.part.5_entry:
l23053042:
	word32 s0_12 = a0
	branch Mem9[a0 + 156<i32>:int32] != 0<32> l2305307A
l23053052:
	word32 a0_17
	word32 s1_25
	word32 s4_116
	word32 s3_115
	word32 s2_114
	word32 a5_113
	s0_12 = bt_keys_find(32<i32>, CONVERT(Mem9[a0 + 8<i32>:byte], byte, word32), a0 + 112<i32>, out s1_25, out a0_17, out a3, out a4, out a5_113, out s2_114, out s3_115, out s4_116)
	Mem31[s0_12 + 156<i32>:word32] = a0_17
	branch a0_17 != 0<32> l2305307A
l2305306A:
	word32 a0_35
	word32 a5_118
	word32 s1_117
	word32 s2_119
	word32 s3_120
	word32 s4_121
	s0_12 = bt_keys_find(4<32>, CONVERT(Mem31[s0_12 + 8<i32>:byte], byte, word32), s1_25, out s1_117, out a0_35, out a3, out a4, out a5_118, out s2_119, out s3_120, out s4_121)
	Mem49[s0_12 + 156<i32>:word32] = a0_35
l2305307A:
	word32 a5_52 = Mem51[s0_12 + 156<i32>:int32]
	word32 a0_53 = 0<32>
	branch a5_52 == 0<32> l2305309E
l23053082:
	word32 a4_54 = CONVERT(Mem51[a5_52 + 10<i32>:uint16], uint16, word32)
	a4 = a4_54 & 36<i32>
	branch (a4_54 & 36<i32>) == 0<32> l2305309E
l2305308C:
	a3 = CONVERT(Mem51[s0_12 + 10<i32>:byte], byte, word32)
	a4 = 2<32>
	a0_53 = 1<32>
	branch a3 <=u 2<32> l2305309E
l23053098:
	a0_53 = CONVERT(Mem51[a5_52 + 9<i32>:byte], byte, word32) & 1<32>
l2305309E:
	a3Out = a3
	a4Out = a4
	a5Out = a5_52
	return a0_53
smp_keys_check.part.5_exit:


word32 get_pair_method(word32 a0, word32 a1, word32 a3, word32 a4, word32 dwArg38, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      smp_pairing_rsp
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] Stack +0038:[0..31]
// LiveOut: a0 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 t3 tp
// Preserved: s0 sp
get_pair_method_entry:
l230530A8:
	word32 a2_104
	word32 a0_18 = atomic_test_bit(a0 + 156<i32>, 5<32>, out a2_104)
	branch a0_18 != 0<32> l2305310C
l2305310C:
	word32 a4_21 = CONVERT(Mem17[a0 + 164<i32>:byte], byte, word32)
	word32 a3_22 = CONVERT(Mem17[a0 + 171<i32>:byte], byte, word32)
	branch (a4_21 & a3_22 & 8<32>) == 0<32> l2305312C
l2305311C:
	a0_18 = 5<32>
	branch ((CONVERT(Mem17[a0 + 163<i32>:byte], byte, word32) | CONVERT(Mem17[a0 + 170<i32>:byte], byte, word32)) & 1<32>) != 0<32> l23053100
l2305312C:
	a0_18 = 0<32>
	branch a1 >u 4<32> l23053100
l23053134:
	word32 a0_35 = a4_21 | a3_22
	a0_18 = a0_35 & 4<32>
	branch (a0_35 & 4<32>) == 0<32> l23053100
l2305313C:
	word32 a3_106
	a0_18 = CONVERT(Mem17[get_io_capa(a3_22, a4_21, out a3_106) + (a1 + 0x230BBCF5<32>):byte], byte, word32)
l230530C2:
	s2 = 4<32>
	branch a1 >u 4<32> l23053100
l230530C8:
	word32 a0_51 = CONVERT(Mem17[a0 + 164<i32>:byte], byte, word32) | CONVERT(Mem17[a0 + 171<i32>:byte], byte, word32)
	a0_18 = a0_51 & 4<32>
	branch (a0_51 & 4<32>) == 0<32> l23053100
l230530D6:
	word32 a3_105
	a0_18 = CONVERT(Mem17[get_io_capa(a3, a4, out a3_105) + (a1 + 0x230BBCD9<32>):byte], byte, word32)
	branch a0_18 != 4<32> l23053100
l230530F4:
	a0_18 = CONVERT(CONVERT(Mem17[a1 + 0x230BBCDC<32>:byte], byte, word32) <u 1<i32>, bool, word32) + 1<32>
l23053100:
	0<32> = dwArg38
	s2Out = s2
	return a0_18
get_pair_method_exit:


word32 smp_create_pdu.isra.7(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg84, word32 dwArg8C, word32 dwArg98, word32 dwArgD8, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sc_smp_send_dhkey_check
//      smp_send_pairing_random
//      sc_send_public_key
//      send_pairing_rsp
//      bt_smp_distribute_keys
//      smp_error
//      smp_send_pairing_confirm
//      legacy_pairing_confirm
//      bt_smp_start_security
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0084:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_create_pdu.isra.7_entry:
l23053158:
	word32 a2_21 = 0<32>
	word32 a2_163
	branch atomic_test_bit(a0 + 156<i32>, 4<32>, out a2_163) != 0<32> l2305317A
l23053174:
	a2_21 = 0x7000530<32>
l2305317A:
	word32 a5_131
	word32 mstatus_47
	word32 s2_53
	word32 s3_54
	word32 s5_56
	word32 a2_164
	word32 s6_165
	word32 s11_166
	word32 s1_136
	word32 a4_130
	word32 a3_129
	word32 ra_48 = bt_l2cap_create_pdu_timeout(ra, 0<32>, a2_21, a3, a4, a5, s5, mstatus, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg84, dwArg8C, dwArg98, dwArgD8, dwArgF8, out s1_136, out a2_164, out a3_129, out a4_130, out s2_53, out s3_54, out s5_56, out s6_165, out s11_166, out mstatus_47)
	branch false l2305319C
l2305319C:
	word32 a1_167
	Mem74[net_buf_simple_add(8<32>, 1<32>, a4_130, out a1_167, out a5_131):byte] = SLICE(s2_53, byte, 0)
l23053186:
	word32 a2_169
	word32 a0_168
	word32 s4_170
	s1_136 = atomic_set_bit(0<32>, 4<32>, a3_129, a4_130, mstatus_47, out a0_168, out a2_169, out a3_129, out a4_130, out a5_131, out s4_170)
l2305318E:
	0<32> = dwArg38
	s1Out = s1_136
	a0Out = 0<32>
	a2Out = dwArg10
	a3Out = a3_129
	a4Out = a4_130
	a5Out = a5_131
	s2Out = s2_53
	s3Out = s3_54
	s5Out = s5_56
	mstatusOut = mstatus_47
	return ra_48
smp_create_pdu.isra.7_exit:


word32 smp_send.isra.9(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg64, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sc_smp_send_dhkey_check
//      smp_send_pairing_random
//      sc_send_public_key
//      send_pairing_rsp
//      bt_smp_distribute_keys
//      smp_send_pairing_confirm
//      legacy_pairing_confirm
//      bt_smp_start_security
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_send.isra.9_entry:
l230531AA:
	word32 a3_23
	word32 a4_24
	word32 mstatus_28
	word32 s0_117
	word32 s1_118
	word32 a0_119
	word32 a1_120
	word32 a5_121
	word32 s2_122
	word32 s3_123
	word32 s4_124
	word32 s5_125
	word32 s6_126
	word32 s7_127
	word32 s8_128
	word32 s9_129
	word32 s10_130
	word32 s11_131
	word32 ra_29 = bt_l2cap_send_cb(ra, s1, Mem7[a0:word32], 6<32>, a1, a2, a5, mstatus, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg44, dwArg48, dwArg64, dwArg6C, dwArg78, dwArg7C, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s0_117, out s1_118, out a0_119, out a1_120, out a3_23, out a4_24, out a5_121, out s2_122, out s3_123, out s4_124, out s5_125, out s6_126, out s7_127, out s8_128, out s9_129, out s10_130, out s11_131, out mstatus_28)
l230531D0_thunk_k_delayed_work_submit:
	word32 a3_57
	word32 a4_58
	word32 a5_59
	word32 s1_61
	word32 s2_62
	word32 s3_63
	word32 s5_71
	word32 a0_132
	word32 a1_133
	word32 a2_134
	word32 s4_135
	word32 s6_136
	word32 s8_137
	s0Out = k_delayed_work_submit(0x7000530<32>, a3_23, a4_24, mstatus_28, dwArg04, dwArg08, dwArg24, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, out s1_61, out a0_132, out a1_133, out a2_134, out a3_57, out a4_58, out a5_59, out s2_62, out s3_63, out s4_135, out s5_71, out s6_136, out s8_137)
	s1Out = s1_61
	a3Out = a3_57
	a4Out = a4_58
	a5Out = a5_59
	s2Out = s2_62
	s3Out = s3_63
	s5Out = s5_71
	mstatusOut = mstatus_28
	return ra_29
smp_send.isra.9_exit:


void sc_smp_send_dhkey_check(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
sc_smp_send_dhkey_check_entry:
l230531D4:
	word32 a0_22
	word32 a4_26
	word32 mstatus_30
	word32 s1_32
	word32 s2_35
	word32 a2_174
	word32 a3_175
	word32 a5_176
	word32 s3_177
	word32 s5_178
	word32 ra_31 = smp_create_pdu.isra.7(ra, a0, a3, a4, a5, s5, mstatus, dwArg28, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1_32, out a0_22, out a2_174, out a3_175, out a4_26, out a5_176, out s2_35, out s3_177, out s5_178, out mstatus_30)
	branch a0_22 == 0<32> l23053214
l23053214:
l230531EA:
	word32 a5_60
	word32 a1_179
	word32 a5_180
	word32 a1_181
	word32 a2_182
	word32 a3_183
	word32 a4_184
	word32 a6_185
	word32 a7_186
	memcpy(net_buf_simple_add(a0_22 + 8<32>, 0x10<32>, a4_26, out a1_179, out a5_180), s2_35, 0x10<32>, out a1_181, out a2_182, out a3_183, out a4_184, out a5_60, out a6_185, out a7_186)
	word32 s0_187
	word32 s1_188
	word32 a3_189
	word32 a4_190
	word32 a5_191
	word32 s2_192
	word32 s3_193
	word32 s5_194
	word32 mstatus_195
	smp_send.isra.9(ra_31, s1_32, s1_32, a0_22, 0<32>, a5_60, mstatus_30, s0, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_187, out s1_188, out a3_189, out a4_190, out a5_191, out s2_192, out s3_193, out s5_194, out mstatus_195)
l23053208:
	0<32> = dwArg38
	return
sc_smp_send_dhkey_check_exit:


word32 compute_and_send_master_dhcheck(word32 ra, word32 s1, word32 a0, word32 s2, word32 s3, word32 dwArgD4, word32 dwArgF0, word32 dwArgF4, word32 dwArg0118, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_dhkey_ready
//      ble_auth_passkey_confirm
// MayUse:  a0:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +00D4:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3
// Preserved: sp
compute_and_send_master_dhcheck_entry:
l23053218:
	word32 a0_19
	word32 a3_22
	word32 t1_95
	word32 a1_96
	word32 a2_97
	word32 a4_98
	word32 a5_99
	word32 ra_25 = memset(ra, fp + -48<i32>, 0<32>, 0x10<32>, out t1_95, out a0_19, out a1_96, out a2_97, out a3_22, out a4_98, out a5_99)
	word32 a5_28 = CONVERT(Mem18[a0 + 160<i32>:byte], byte, word32)
	branch a5_28 >u 5<32> l23053280
l23053280:
l230532BE:
	s0Out = a0
	s1Out = s1
	a0Out = 8<32>
	a3Out = a3_22
	a4Out = 5<32>
	s2Out = s2
	return ra_25
l2305323A:
	word32 a5_41 = Mem18[(a5_28 << 2<i32>) + 0x230BB9FC<32>:word32]
	word32 s0_43
	word32 a0_45
	word32 ra_47
	word32 s1_48
	word32 s2_49
	word32 a4_52
	word32 a3_57
	call a5_41 (retsize: 0;)
		uses: a0:a0_19,a4:0x230BB9FC<32>,a5:a5_41,ra:ra_25,s0:a0,s1:s1,s2:s2,s3:s3,Stack +0114:dwArgD4,Stack +0130:dwArgF0,Stack +0134:dwArgF4,Stack +0158:dwArg0118,Stack +0178:dwArg0138
		defs: a0:a0_45,a3:a3_57,a4:a4_52,ra:ra_47,s0:s0_43,s1:s1_48,s2:s2_49
	s0Out = s0_43
	s1Out = s1_48
	a0Out = a0_45
	a3Out = a3_57
	a4Out = a4_52
	s2Out = s2_49
	return ra_47
compute_and_send_master_dhcheck_exit:


word32 compute_and_check_and_send_slave_dhcheck(word32 ra, word32 s1, word32 a0, word32 s2, word32 s3, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_dhkey_check
//      bt_smp_dhkey_ready
//      ble_auth_passkey_confirm
// MayUse:  a0:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 t0 t1 t3
// Preserved: sp
compute_and_check_and_send_slave_dhcheck_entry:
l230532CC:
	word32 a0_19
	word32 t1_88
	word32 a1_89
	word32 a2_90
	word32 a3_91
	word32 a4_92
	word32 a5_93
	word32 ra_25 = memset(ra, fp + -48<i32>, 0<32>, 0x10<32>, out t1_88, out a0_19, out a1_89, out a2_90, out a3_91, out a4_92, out a5_93)
	word32 a5_28 = CONVERT(Mem18[a0 + 160<i32>:byte], byte, word32)
	branch a5_28 >u 5<32> l23053334
l23053334:
l230533BE:
	s0Out = a0
	s1Out = dwLoc4C
	a0Out = dwLoc4C
	a3Out = s2
	a4Out = 5<32>
	s2Out = s2
	return dwLoc08
l230532EE:
	word32 a5_42 = Mem18[(a5_28 << 2<i32>) + 0x230BBA14<32>:word32]
	word32 s0_44
	word32 a0_46
	word32 ra_48
	word32 s1_49
	word32 s2_50
	word32 a4_53
	word32 a3_54
	call a5_42 (retsize: 0;)
		uses: a0:a0_19,a4:0x230BBA14<32>,a5:a5_42,ra:ra_25,s0:a0,s1:s1,s2:s2,s3:s3,Stack +0004:dwLoc4C,Stack +0048:dwLoc08,Stack +0178:dwArg0128
		defs: a0:a0_46,a3:a3_54,a4:a4_53,ra:ra_48,s0:s0_44,s1:s1_49,s2:s2_50
	s0Out = s0_44
	s1Out = s1_49
	a0Out = a0_46
	a3Out = a3_54
	a4Out = a4_53
	s2Out = s2_50
	return ra_48
compute_and_check_and_send_slave_dhcheck_exit:


void smp_dhkey_check(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
smp_dhkey_check_entry:
l230533D8:
	word32 a0_13 = Mem11[a5:word32]
	word32 s2_16 = Mem11[a1 + 8<i32>:int32]
	word32 s1_17 = CONVERT(Mem11[a5 + 3<i32>:byte], byte, word32)
	branch s1_17 != 0<32> l230534B8
l230534B8:
	branch s1_17 != 1<32> l230534EA
l230534BE:
	word32 s4_258
	word32 a5_257
	word32 a3_255
	word32 a4_256
	word32 a2_254
	word32 a0_252
	word32 a1_253
	word32 s8_259
	word32 s1_32 = atomic_and(a0_13, 0xF7FFFFFF<32>, a3, a4, mstatus, out a0_252, out a1_253, out a2_254, out a3_255, out a4_256, out a5_257, out s4_258, out s8_259)
	word32 a4_39
	word32 a3_44
	word32 a1_260
	word32 a2_261
	word32 a5_262
	word32 a6_263
	word32 a7_264
	memcpy(a0_13 + 335<i32>, s2_16, 0x10<32>, out a1_260, out a2_261, out a3_44, out a4_39, out a5_262, out a6_263, out a7_264)
	word32 a2_265
	branch atomic_test_bit(s1_32, 7<32>, out a2_265) == 0<32> l230534EE
l230534EE:
	word32 a2_266
	branch atomic_test_bit(s1_32, 9<32>, out a2_266) != 0<32> l230534E2
l230534F8:
	word32 s0_273
	word32 s1_274
	word32 a0_275
	word32 a3_276
	word32 a4_277
	word32 s2_278
	compute_and_check_and_send_slave_dhcheck(ra, s1_32, a0_13, s2_16, s3, dwArgD8, out s0_273, out s1_274, out a0_275, out a3_276, out a4_277, out s2_278)
l230534E2:
	word32 a0_267
	word32 a2_268
	word32 a3_269
	word32 a4_270
	word32 a5_271
	word32 s4_272
	atomic_set_bit(a0_13, 8<32>, a3_44, a4_39, mstatus, out a0_267, out a2_268, out a3_269, out a4_270, out a5_271, out s4_272)
l230534EA:
l230533F0:
	word32 a1_101
	word32 a3_103
	word32 a4_250
	word32 a5_251
	word32 a2_249
	word32 a0_248
	word32 t1_247
	word32 ra_106 = memset(ra, fp + -32<i32>, 0<32>, 0x10<32>, out t1_247, out a0_248, out a1_101, out a2_249, out a3_103, out a4_250, out a5_251)
	word32 a5_109 = CONVERT(Mem11[a0_13 + 160<i32>:byte], byte, word32)
	branch a5_109 >u 5<32> l23053446
l23053446:
l230534A6:
	return
l23053404:
	word32 a5_128 = Mem11[(a5_109 << 2<i32>) + 0x230BBA2C<32>:word32]
	word32 a2_137
	word32 s4_142
	word32 s8_143
	word32 t3_144
	word32 a7_145
	word32 a6_146
	word32 t1_147
	word32 t4_148
	word32 t5_149
	word32 t6_150
	call a5_128 (retsize: 0;)
		uses: a1:a1_101,a2:a2_137,a3:a3_103,a4:0x230BBA2C<32>,a5:a5_128,a6:a6_146,a7:a7_145,mstatus:mstatus,ra:ra_106,s0:a0_13,s1:s1_17,s2:s2_16,s3:s3,s4:s4_142,s8:s8_143,Stack +0004:dwLoc4C,Stack +0048:dwLoc08,Stack +0128:dwArgD8,t1:t1_147,t3:t3_144,t4:t4_148,t5:t5_149,t6:t6_150
		defs: a2:a2_137,a6:a6_146,a7:a7_145,s4:s4_142,s8:s8_143,t1:t1_147,t3:t3_144,t4:t4_148,t5:t5_149,t6:t6_150
	return
smp_dhkey_check_exit:


void smp_send_pairing_random(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_confirm
//      smp_pairing_random
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_send_pairing_random_entry:
l23053502:
	word32 a0_18
	word32 a4_22
	word32 mstatus_26
	word32 s1_28
	word32 a2_168
	word32 a3_169
	word32 a5_170
	word32 s2_171
	word32 s3_172
	word32 s5_173
	word32 ra_27 = smp_create_pdu.isra.7(ra, a0, a3, a4, a5, s5, mstatus, dwArg28, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1_28, out a0_18, out a2_168, out a3_169, out a4_22, out a5_170, out s2_171, out s3_172, out s5_173, out mstatus_26)
	branch a0_18 == 0<32> l2305353E
l2305353E:
l23053514:
	word32 a5_56
	word32 a1_174
	word32 a5_175
	word32 a1_176
	word32 a2_177
	word32 a3_178
	word32 a4_179
	word32 a6_180
	word32 a7_181
	memcpy(net_buf_simple_add(a0_18 + 8<32>, 0x10<32>, a4_22, out a1_174, out a5_175), s1_28 + 191<i32>, 0x10<32>, out a1_176, out a2_177, out a3_178, out a4_179, out a5_56, out a6_180, out a7_181)
	word32 s0_182
	word32 s1_183
	word32 a3_184
	word32 a4_185
	word32 a5_186
	word32 s2_187
	word32 s3_188
	word32 s5_189
	word32 mstatus_190
	smp_send.isra.9(ra_27, s1_28, s1_28, a0_18, 0<32>, a5_56, mstatus_26, s0, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_182, out s1_183, out a3_184, out a4_185, out a5_186, out s2_187, out s3_188, out s5_189, out mstatus_190)
l23053534:
	return
smp_send_pairing_random_exit:


word32 sc_send_public_key(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_rsp
//      smp_public_key
//      bt_smp_pkey_ready
//      ble_auth_pairing_confirm
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sc_send_public_key_entry:
l23053542:
	word32 a0_123
	word32 a0_22
	word32 a2_202
	word32 a5_203
	word32 a4_172
	word32 a3_171
	word32 mstatus_102
	word32 s1_105
	word32 s2_108
	word32 s3_109
	word32 s5_111
	word32 ra_103 = smp_create_pdu.isra.7(ra, a0, a3, a4, a5, s5, mstatus, dwArg18, dwArg20, dwArg24, dwArg48, s3, ra, dwArg78, dwArgB8, dwArgD8, out s1_105, out a0_22, out a2_202, out a3_171, out a4_172, out a5_203, out s2_108, out s3_109, out s5_111, out mstatus_102)
	branch a0_22 == 0<32> l230535A4
l230535A4:
	a0_123 = 8<32>
l23053558:
	word32 a1_56
	word32 a5_204
	word32 a0_55 = net_buf_simple_add(a0_22 + 8<32>, 64<i32>, a4_172, out a1_56, out a5_204)
	word32 a1_64
	word32 a2_205
	word32 a3_206
	word32 a4_207
	word32 a5_208
	word32 a6_209
	word32 a7_210
	memcpy(a0_55, a1_56, 32<i32>, out a1_64, out a2_205, out a3_206, out a4_207, out a5_208, out a6_209, out a7_210)
	word32 a5_79
	word32 a1_211
	word32 a2_212
	word32 a3_213
	word32 a4_214
	word32 a6_215
	word32 a7_216
	memcpy(a0_55 + 32<i32>, a1_64 + 32<i32>, 32<i32>, out a1_211, out a2_212, out a3_213, out a4_214, out a5_79, out a6_215, out a7_216)
	word32 a5_217
	ra_103 = smp_send.isra.9(ra_103, a0_22, s2_108, a0_22, 0<32>, a5_79, mstatus_102, dwLoc1C, s2, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg44, dwArg4C, dwArg58, dwArg5C, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0, out s1_105, out a3_171, out a4_172, out a5_217, out s2_108, out s3_109, out s5_111, out mstatus_102)
	a0_123 = 0<32>
l23053596:
	s0Out = s0
	s1Out = s1_105
	a0Out = a0_123
	a3Out = a3_171
	a4Out = a4_172
	s2Out = s2_108
	s3Out = s3_109
	s5Out = s5_111
	mstatusOut = mstatus_102
	return ra_103
sc_send_public_key_exit:


word32 send_pairing_rsp(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      ble_auth_pairing_confirm
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
send_pairing_rsp_entry:
l230535A8:
	word32 a0_100
	word32 a0_18
	word32 s1_28
	word32 a2_173
	word32 a5_174
	word32 s3_175
	word32 s5_176
	word32 a3_144
	word32 a4_145
	word32 mstatus_149
	word32 s2_154
	word32 ra_150 = smp_create_pdu.isra.7(ra, a0, a3, a4, a5, s5, mstatus, dwArg28, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1_28, out a0_18, out a2_173, out a3_144, out a4_145, out a5_174, out s2_154, out s3_175, out s5_176, out mstatus_149)
	branch a0_18 == 0<32> l230535E4
l230535E4:
	a0_100 = 8<32>
l230535BA:
	word32 a5_56
	word32 a1_177
	word32 a5_178
	word32 a1_179
	word32 a2_180
	word32 a3_181
	word32 a4_182
	word32 a6_183
	word32 a7_184
	memcpy(net_buf_simple_add(a0_18 + 8<32>, 6<32>, a4_145, out a1_177, out a5_178), s1_28 + 169<i32>, 6<32>, out a1_179, out a2_180, out a3_181, out a4_182, out a5_56, out a6_183, out a7_184)
	word32 s0_185
	word32 s1_186
	word32 a5_187
	word32 s3_188
	word32 s5_189
	ra_150 = smp_send.isra.9(ra_150, s1_28, s1_28, a0_18, 0<32>, a5_56, mstatus_149, s0, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_185, out s1_186, out a3_144, out a4_145, out a5_187, out s2_154, out s3_188, out s5_189, out mstatus_149)
	a0_100 = 0<32>
l230535DA:
	a0Out = a0_100
	a3Out = a3_144
	a4Out = a4_145
	s2Out = s2_154
	mstatusOut = mstatus_149
	return ra_150
send_pairing_rsp_exit:


word32 bt_smp_distribute_keys(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 s3, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_signing_info
//      smp_master_ident
//      bt_smp_encrypt_change
//      smp_ident_addr_info
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_distribute_keys_entry:
l230535E8:
	word32 a0_347
	word32 s1_237
	word32 a0_20 = Mem17[a0:word32]
	word32 s0_134 = a0
	branch Mem17[a0_20 + 156<i32>:int32] != 0<32> l2305362E
l2305362E:
	s1_237 = s1
	word32 a2_26
	branch atomic_test_bit(a0 + 156<i32>, 5<32>, out a2_26) != 0<32> l2305366A
l2305363C:
	word32 a5_28 = CONVERT(Mem17[a0 + 384<i32>:byte], byte, word32)
	a5 = a5_28 & 1<32>
	s1_237 = s1
	branch (a5_28 & 1<32>) == 0<32> l2305366A
l23053644:
	word32 a0_313
	s0_134 = Mem17[a5_28 & 1<32>:word32]
	word32 a3_37
	word32 a4_38
	word32 a5_39
	word32 s4_883
	word32 s8_884
	word32 a0_881
	word32 a1_882
	bt_rand(fp + -60<i32>, 0x1A<32>, a2_26, out a0_881, out a1_882, out a3_37, out a4_38, out a5_39, out s4_883, out s8_884)
	word32 a0_48
	word32 a4_52
	word32 s1_58
	word32 s5_889
	word32 a5_886
	word32 s2_887
	word32 s3_888
	word32 a2_885
	word32 a3_158
	word32 ra_110 = smp_create_pdu.isra.7(ra, s0_134, a3_37, a4_38, a5_39, s5, mstatus, dwLoc08, dwArg00, dwArg04, dwArg28, dwArg44, dwArg4C, s1, dwArg98, dwArgB8, out s1_58, out a0_48, out a2_885, out a3_158, out a4_52, out a5_886, out s2_887, out s3_888, out s5_889, out mstatus)
	branch a0_48 != 0<32> l2305368C
l2305368C:
	word32 a1_890
	word32 a5_891
	word32 a0_79 = net_buf_simple_add(a0_48 + 8<32>, 0x10<32>, a4_52, out a1_890, out a5_891)
	word32 a5_896
	word32 a6_897
	word32 a7_898
	word32 a4_895
	word32 a1_892
	word32 a2_893
	word32 a3_894
	memcpy(a0_79, fp + -60<i32>, CONVERT(Mem17[s1_58 + 8<i32>:byte], byte, word32), out a1_892, out a2_893, out a3_894, out a4_895, out a5_896, out a6_897, out a7_898)
	word32 a0_98 = CONVERT(Mem17[s1_58 + 8<i32>:byte], byte, word32)
	word32 a5_109 = 0xF<32>
	branch a0_98 >u 0xF<32> l230536B6
l230536AA:
	word32 a4_939
	word32 a3_938
	word32 a2_937
	word32 a1_936
	word32 a0_935
	word32 t1_934
	ra_110 = memset(ra_110, a0_98 + a0_79, 0<32>, 0x10<32> - a0_98, out t1_934, out a0_935, out a1_936, out a2_937, out a3_938, out a4_939, out a5_109)
l230536B6:
	word32 a3_127
	word32 a4_128
	word32 a5_129
	word32 mstatus_132
	word32 s5_141
	word32 a0_155
	word32 a4_159
	word32 s1_165
	word32 s5_933
	word32 s3_932
	word32 s2_931
	word32 a5_930
	word32 a2_929
	word32 s2_927
	word32 s3_928
	word32 s1_926
	ra_110 = smp_create_pdu.isra.7(smp_send.isra.9(ra_110, s1_58, s0_134, a0_48, 0<32>, a5_109, mstatus, dwLoc3C, dwLoc38, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg2C, dwArg38, dwArg3C, dwArg48, s3, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_134, out s1_926, out a3_127, out a4_128, out a5_129, out s2_927, out s3_928, out s5_141, out mstatus_132), s0_134, a3_127, a4_128, a5_129, s5_141, mstatus_132, dwLoc08, dwArg00, dwArg04, dwArg28, dwArg44, dwArg4C, s1, dwArg98, dwArgB8, out s1_165, out a0_155, out a2_929, out a3_158, out a4_159, out a5_930, out s2_931, out s3_932, out s5_933, out mstatus)
	branch a0_155 != 0<32> l230536D6
l230536D6:
	word32 a5_952
	word32 a1_951
	word32 a0_186 = net_buf_simple_add(a0_155 + 8<32>, 0xA<32>, a4_159, out a1_951, out a5_952)
	word32 a6_958
	word32 a7_959
	word32 a5_957
	word32 a4_956
	word32 a3_955
	word32 a2_954
	word32 a1_953
	memcpy(a0_186 + 2<32>, fp + -44<i32>, 8<32>, out a1_953, out a2_954, out a3_955, out a4_956, out a5_957, out a6_958, out a7_959)
	word32 a5_210
	word32 a1_960
	word32 a2_961
	word32 a3_962
	word32 a4_963
	word32 a6_964
	word32 a7_965
	memcpy(a0_186, fp + -36<i32>, 2<32>, out a1_960, out a2_961, out a3_962, out a4_963, out a5_210, out a6_964, out a7_965)
	word32 s3_241
	word32 s2_966
	ra = smp_send.isra.9(ra_110, s1_165, s0_134, a0_155, 0x23054164<32>, a5_210, mstatus, dwLoc3C, dwLoc38, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg2C, dwArg38, dwArg3C, dwArg48, s3, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_134, out s1_237, out a3, out a4, out a5, out s2_966, out s3_241, out s5, out mstatus)
	word32 a2_967
	branch atomic_test_bit(s3_241, 0xC<32>, out a2_967) == 0<32> l2305366A
l2305370E:
	bt_keys_add_type(s1_237, 1<32>)
	word32 a1_982
	word32 a2_983
	word32 a3_984
	word32 a4_985
	word32 a5_986
	word32 a6_987
	word32 a7_988
	memcpy(s1_237 + 110<i32>, fp + -60<i32>, 0x10<32>, out a1_982, out a2_983, out a3_984, out a4_985, out a5_986, out a6_987, out a7_988)
	word32 a1_989
	word32 a2_990
	word32 a3_991
	word32 a4_992
	word32 a5_993
	word32 a6_994
	word32 a7_995
	memcpy(s1_237 + 100<i32>, fp + -44<i32>, 8<32>, out a1_989, out a2_990, out a3_991, out a4_992, out a5_993, out a6_994, out a7_995)
	word32 a1_996
	word32 a2_997
	word32 a6_998
	word32 a7_999
	memcpy(s1_237 + 108<i32>, fp + -36<i32>, 2<32>, out a1_996, out a2_997, out a3, out a4, out a5, out a6_998, out a7_999)
l230536CC:
	a0_313 = 0x230BBB38<32>
l2305365E:
	a0_313 = 0x230BBB0C<32>
l23053666:
	word32 a0_968
	word32 a1_969
	word32 a2_970
	word32 a7_971
	word32 s2_972
	word32 s3_973
	word32 s4_974
	word32 s6_975
	word32 s7_976
	word32 s8_977
	word32 s9_978
	word32 s10_979
	word32 s11_980
	word32 t4_981
	ra = printf(ra_110, a0_313, a3_158, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_237, out a0_968, out a1_969, out a2_970, out a3, out a4, out a5, out a7_971, out s2_972, out s3_973, out s4_974, out s5, out s6_975, out s7_976, out s8_977, out s9_978, out s10_979, out s11_980, out t4_981)
l2305366A:
	word32 a0_346 = CONVERT(Mem17[s0_134 + 384<i32>:byte], byte, word32)
	a0_347 = a0_346 & 4<32>
	branch (a0_346 & 4<32>) == 0<32> l2305361C
l23053672:
	word32 a0_361
	word32 a2_363
	word32 a3_364
	word32 a4_365
	word32 s2_374
	word32 s3_375
	word32 s1_899
	word32 a5_900
	word32 s5_901
	word32 ra_370 = smp_create_pdu.isra.7(ra, s0_134, a3, a4, a5, s5, mstatus, dwLoc08, dwArg00, dwArg04, dwArg28, dwArg44, dwArg4C, s1, dwArg98, dwArgB8, out s1_899, out a0_361, out a2_363, out a3_364, out a4_365, out a5_900, out s2_374, out s3_375, out s5_901, out mstatus)
	branch a0_361 != 0<32> l2305373C
l2305373C:
	word32 s4_404
	word32 s8_908
	word32 a3_906
	word32 a4_907
	word32 a0_904
	word32 a1_905
	word32 a1_902
	word32 a5_903
	word32 a5_402
	word32 s1_403 = bt_rand(net_buf_simple_add(a0_361 + 8<32>, 0x10<32>, a4_365, out a1_902, out a5_903), 0x10<32>, a2_363, out a0_904, out a1_905, out a3_906, out a4_907, out a5_402, out s4_404, out s8_908)
	word32 a2_909
	branch atomic_test_bit(s3_375, 0xC<32>, out a2_909) == 0<32> l2305376E
l23053756:
	bt_keys_add_type(s2_374, 8<32>)
	word32 a7_950
	word32 a6_949
	word32 a4_948
	word32 a3_947
	word32 a2_946
	word32 a1_945
	memcpy(s2_374 + 60<i32>, s4_404, 0x10<32>, out a1_945, out a2_946, out a3_947, out a4_948, out a5_402, out a6_949, out a7_950)
	Mem433[s2_374 + 76<i32>:word32] = 0<32>
l2305376E:
	word32 s5_944
	word32 s3_943
	word32 s2_942
	word32 a5_941
	word32 s0_940
	ra = smp_send.isra.9(ra_370, s1_403, s0_134, s1_403, 0x23053DAC<32>, a5_402, mstatus, dwLoc3C, dwLoc38, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg2C, dwArg38, dwArg3C, dwArg48, s3, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_940, out s1_237, out a3, out a4, out a5_941, out s2_942, out s3_943, out s5_944, out mstatus)
	a0_347 = 0<32>
l2305367E:
	word32 t4_925
	word32 s11_924
	word32 s10_923
	word32 s8_921
	word32 s9_922
	word32 s6_919
	word32 s7_920
	word32 s5_918
	word32 s3_916
	word32 s4_917
	word32 a7_914
	word32 s2_915
	word32 a2_912
	word32 a5_913
	word32 a0_910
	word32 a1_911
	ra = printf(ra_370, 0x230BBB64<32>, a3_364, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_237, out a0_910, out a1_911, out a2_912, out a3, out a4, out a5_913, out a7_914, out s2_915, out s3_916, out s4_917, out s5_918, out s6_919, out s7_920, out s8_921, out s9_922, out s10_923, out s11_924, out t4_925)
l23053604:
	word32 a3_503
	word32 t4_880
	word32 s9_877
	word32 s10_878
	word32 s11_879
	word32 s6_874
	word32 s7_875
	word32 s8_876
	word32 s3_871
	word32 s4_872
	word32 s5_873
	word32 a5_868
	word32 a7_869
	word32 s2_870
	word32 a0_865
	word32 a1_866
	word32 a2_867
	word32 s0_864
	ra = printf(bt_addr_le_str_real(ra, a0_20 + 112<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_864, out a3_503), 0x230BBAF4<32>, a3_503, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_237, out a0_865, out a1_866, out a2_867, out a3, out a4, out a5_868, out a7_869, out s2_870, out s3_871, out s4_872, out s5_873, out s6_874, out s7_875, out s8_876, out s9_877, out s10_878, out s11_879, out t4_880)
l2305361A:
	a0_347 = 8<32>
l2305361C:
	s0Out = dwArg0158
	s1Out = s1_237
	a0Out = a0_347
	a3Out = a3
	a4Out = a4
	mstatusOut = mstatus
	return ra
bt_smp_distribute_keys_exit:


void smp_signing_info(word32 ra, word32 s1, word32 a0, word32 a3, word32 s2, word32 s3, word32 s5, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_signing_info_entry:
l23053782:
	word32 s1_108
	word32 s0_120 = a0
	s1_108 = s1
	word32 a2_399
	branch atomic_test_bit(Mem13[s1:word32] + 156<i32>, 0xC<32>, out a2_399) == 0<32> l230537E6
l230537A0:
	word32 a0_30
	word32 s2_38
	word32 a3_400
	word32 s4_401
	ra = bt_keys_get_type(ra, a0, 0x10<32>, CONVERT(Mem13[s1 + 8<i32>:byte], byte, word32), s1 + 112<i32>, s1 + 112<i32>, mstatus, dwLoc20, dwLoc1C, s2, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1_108, out a0_30, out a3_400, out s2_38, out s3, out s4_401, out s5, out mstatus)
	branch a0_30 != 0<32> l230537DA
l230537DA:
	word32 a1_402
	word32 a2_403
	word32 a4_404
	word32 a5_405
	word32 a6_406
	word32 a7_407
	memcpy(a0_30 + 80<i32>, s3, 0x10<32>, out a1_402, out a2_403, out a3, out a4_404, out a5_405, out a6_406, out a7_407)
l230537E6:
	word32 a5_76 = CONVERT(Mem13[a0 + 385<i32>:byte], byte, word32)
	Mem78[a0 + 385<i32>:byte] = SLICE(a5_76 & 251<i32>, byte, 0)
	word32 a4_103 = CONVERT(Mem78[s1_108 + 3<i32>:byte], byte, word32)
	word32 a5_81 = a5_76 & 251<i32> | a4_103
	branch a5_81 == 0<32> l23053804
l23053804:
	word32 a0_91
	ra = bt_smp_distribute_keys(ra, s1_108, a0, a3, a4_103, a5_81, s3, s5, mstatus, dwLoc20, dwLoc1C, s2, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_120, out s1_108, out a0_91, out a3, out a4_103, out mstatus)
	branch a0_91 == 0<32> l230537FA
l2305380C:
l230537FA:
	branch CONVERT(Mem78[s0_120 + 384<i32>:uint16], uint16, word32) == 0<32> l2305380E
l2305380E:
	word32 a4_428
	word32 a5_429
	word32 s5_430
	smp_pairing_complete(ra, s0_120, s1_108, s0_120, 0<32>, a3, a4_103, mstatus, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArgB8, dwArgF8, out a4_428, out a5_429, out s5_430)
l23053800:
l230537B6:
	word32 a3_158
	word32 s0_408
	word32 s1_409
	word32 a0_410
	word32 a1_411
	word32 a2_412
	word32 a3_413
	word32 a4_414
	word32 a5_415
	word32 a7_416
	word32 s2_417
	word32 s3_418
	word32 s4_419
	word32 s5_420
	word32 s6_421
	word32 s7_422
	word32 s8_423
	word32 s9_424
	word32 s10_425
	word32 s11_426
	word32 t4_427
	printf(bt_addr_le_str_real(ra, s2_38, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_408, out a3_158), 0x230BBE60<32>, a3_158, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_409, out a0_410, out a1_411, out a2_412, out a3_413, out a4_414, out a5_415, out a7_416, out s2_417, out s3_418, out s4_419, out s5_420, out s6_421, out s7_422, out s8_423, out s9_424, out s10_425, out s11_426, out t4_427)
l230537CC:
	return
smp_signing_info_exit:


void smp_master_ident(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_master_ident_entry:
l23053818:
	word32 s1_118
	word32 s0_150 = a0
	s1_118 = s1
	word32 a2_542
	branch atomic_test_bit(Mem15[s1:word32] + 156<i32>, 0xC<32>, out a2_542) == 0<32> l23053898
l23053838:
	word32 a0_32
	word32 s4_42
	word32 a3_543
	word32 s2_544
	ra = bt_keys_get_type(ra, a0, 4<32>, CONVERT(Mem15[s1 + 8<i32>:byte], byte, word32), s1 + 112<i32>, a1, mstatus, dwLoc20, s4, s2, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1_118, out a0_32, out a3_543, out s2_544, out s3, out s4_42, out s5, out mstatus)
	branch a0_32 != 0<32> l23053876
l23053876:
	word32 a1_545
	word32 a3_547
	word32 a2_546
	word32 a5_549
	word32 a4_548
	word32 a7_551
	word32 a6_550
	memcpy(a0_32 + 0x14<32>, s3, 2<32>, out a1_545, out a2_546, out a3_547, out a4_548, out a5_549, out a6_550, out a7_551)
	word32 a2_553
	word32 a1_552
	word32 a6_556
	word32 a5_555
	word32 a4_554
	word32 a7_557
	memcpy(a0_32 + 12<i32>, s3 + 2<i32>, 8<32>, out a1_552, out a2_553, out a3, out a4_554, out a5_555, out a6_556, out a7_557)
	Mem95[a0 + 385<i32>:byte] = SLICE(CONVERT(Mem15[a0 + 385<i32>:byte], byte, word32) & 0xFFFFFFFE<32>, byte, 0)
l23053898:
	word32 a5_98 = CONVERT(Mem97[a0 + 385<i32>:byte], byte, word32)
	word32 a1_102 = 8<32>
	word32 a4_100 = a5_98 & 2<i32>
	branch (a5_98 & 2<i32>) != 0<32> l230538AA
l230538A4:
	branch (a5_98 & 4<32>) == 0<32> l230538B2
l230538A8:
	a1_102 = 0xA<32>
l230538AA:
	word32 a0_578
	word32 a2_579
	word32 a5_580
	word32 s4_581
	s1_118 = atomic_set_bit(a0, a1_102, a3, a5_98 & 2<i32>, mstatus, out a0_578, out a2_579, out a3, out a4_100, out a5_580, out s4_581)
l230538B2:
	branch CONVERT(Mem97[s1_118 + 3<i32>:byte], byte, word32) == 0<32> l230538C2
l230538C2:
	word32 a5_128 = CONVERT(Mem97[a0 + 385<i32>:byte], byte, word32)
	branch a5_128 != 0<32> l230538B8
l230538C8:
	word32 a0_146
	ra = bt_smp_distribute_keys(ra, s1_118, a0, a3, a4_100, a5_128, s3, s5, mstatus, dwLoc20, s4, s2, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_150, out s1_118, out a0_146, out a3, out a4_100, out mstatus)
	branch a0_146 == 0<32> l230538B8
l230538D0:
l230538B8:
	branch CONVERT(Mem97[s0_150 + 384<i32>:uint16], uint16, word32) == 0<32> l230538D2
l230538D2:
	word32 a4_582
	word32 a5_583
	word32 s5_584
	smp_pairing_complete(ra, s0_150, s1_118, s0_150, 0<32>, a3, a4_100, mstatus, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArgB8, dwArgF8, out a4_582, out a5_583, out s5_584)
l230538BE:
l23053850:
	word32 a3_213
	word32 s10_575
	word32 s9_574
	word32 s1_559
	word32 s0_558
	word32 a1_561
	word32 a0_560
	word32 a3_563
	word32 a2_562
	word32 a7_566
	word32 a5_565
	word32 s4_569
	word32 a4_564
	word32 s3_568
	word32 s2_567
	word32 s5_570
	word32 s7_572
	word32 s8_573
	word32 s6_571
	word32 s11_576
	word32 t4_577
	printf(bt_addr_le_str_real(ra, s4_42, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_558, out a3_213), 0x230BBE60<32>, a3_213, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_559, out a0_560, out a1_561, out a2_562, out a3_563, out a4_564, out a5_565, out a7_566, out s2_567, out s3_568, out s4_569, out s5_570, out s6_571, out s7_572, out s8_573, out s9_574, out s10_575, out s11_576, out t4_577)
l23053866:
	return
smp_master_ident_exit:


word32 smp_init(word32 ra, word32 a0, word32 mstatus, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_req
//      bt_smp_start_security
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 a5 ra s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
smp_init_entry:
l230538DC:
	word32 a2_18
	word32 t1_152
	word32 a0_153
	word32 a1_154
	word32 a3_155
	word32 a4_156
	word32 a5_157
	word32 ra_119 = memset(ra, a0 + 152<i32>, 0<32>, 236<i32>, out t1_152, out a0_153, out a1_154, out a2_18, out a3_155, out a4_156, out a5_157)
	word32 a0_27
	word32 a1_158
	word32 s4_159
	word32 s8_160
	word32 a4_113
	word32 a3_112
	word32 a5_114
	word32 s1_120 = bt_rand(a0 + 191<i32>, 0x10<32>, a2_18, out a0_27, out a1_158, out a3_112, out a4_113, out a5_114, out s4_159, out s8_160)
	word32 s0_38 = 8<32>
	branch a0_27 != 0<32> l2305392A
l23053904:
	word32 a3_46
	word32 a4_47
	word32 a0_161
	word32 a2_162
	word32 a5_163
	word32 s4_164
	atomic_set_bit(a0_27, 5<32>, a3_112, a4_113, mstatus, out a0_161, out a2_162, out a3_46, out a4_47, out a5_163, out s4_164)
	word32 a5_165
	Mem59[0x4200F49C<32>:word32] = bt_pub_key_get(out a5_165)
	s0_38 = a0_27
	word32 a0_166
	word32 a1_167
	word32 s4_168
	word32 s6_169
	word32 s7_170
	word32 s8_171
	ra_119 = k_sem_init(ra_119, a0_27, 0x42026614<32>, 0<32>, 1<32>, a3_46, a4_47, 0x4200F000<32>, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgD8, dwArg0118, out s1_120, out a0_166, out a1_167, out a3_112, out a4_113, out a5_114, out s2, out s3, out s4_168, out s5, out s6_169, out s7_170, out s8_171)
l2305392A:
	s1Out = s1_120
	a0Out = s0_38
	a3Out = a3_112
	a4Out = a4_113
	a5Out = a5_114
	s2Out = s2
	s3Out = s3
	s5Out = s5
	return ra_119
smp_init_exit:


word32 smp_send_pairing_req(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_security_request
//      bt_smp_start_security
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_send_pairing_req_entry:
l23053936:
	word32 s1_478
	word32 a5_479
	word32 s4_480
	word32 s5_481
	word32 s3_130
	word32 s2_129
	word32 a4_115
	word32 a3_114
	word32 ra_107 = smp_chan_get(ra, a0, a3, dwLoc08, dwArg40, dwArg44, s1, dwArg8C, out s1_478, out a3_114, out a4_115, out a5_479, out s2_129, out s3_130, out s4_480, out s5_481)
	word32 s1_282 = -57<i32>
	branch a0 == 0<32> l23053970
l23053952:
	word32 s0_105 = a0
	s1_282 = 0xFFFFFFFB<32>
	word32 a2_482
	branch atomic_test_bit(a0 + 156<i32>, 4<32>, out a2_482) != 0<32> l23053970
l23053964:
	word32 a2_483
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_483) == 0<32> l23053984
l23053984:
	word32 a2_484
	branch atomic_test_bit(a0 + 156<i32>, 1<32>, out a2_484) != 0<32> l2305396E
l2305398E:
	word32 a0_63
	s1_282 = sec_level_reachable.isra.1(CONVERT(Mem17[s3_130 + 10<i32>:byte], byte, word32), a3_114, a4_115, out a0_63, out a3_114, out a4_115)
	branch a0_63 == 0<32> l23053970
l2305399A:
	branch Mem17[s3_130 + 156<i32>:int32] == 0<32> l230539B0
l230539B0:
	word32 a0_75
	word32 s4_515
	word32 s5_516
	ra_107 = bt_keys_get_addr(ra_107, a0, CONVERT(Mem17[s3_130 + 8<i32>:byte], byte, word32), s3_130 + 112<i32>, s2_129, s3_130, a0 + 156<i32>, mstatus, dwLoc20, s4, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_105, out s1_282, out a0_75, out a3_114, out a4_115, out s2_129, out s3_130, out s4_515, out s5_516, out mstatus)
	Mem104[s3_130 + 156<i32>:word32] = a0_75
	branch a0_75 != 0<32> l230539A0
l230539C4:
l230539A0:
	word32 a0_111
	word32 a5_116
	word32 s5_131
	word32 s1_485
	ra_107 = smp_init(ra_107, s0_105, mstatus, s2, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgB8, dwArgF8, out s1_485, out a0_111, out a3_114, out a4_115, out a5_116, out s2_129, out s3_130, out s5_131)
	branch a0_111 == 0<32> l230539C6
l230539C6:
	word32 a0_139
	word32 s1_486
	word32 a2_487
	word32 a5_488
	word32 s5_489
	ra_107 = smp_create_pdu.isra.7(ra_107, s0_105, a3_114, a4_115, a5_116, s5_131, mstatus, dwArg18, dwArg20, dwArg24, dwArg48, s3, ra, dwArg78, dwArgB8, dwArgD8, out s1_486, out a0_139, out a2_487, out a3_114, out a4_115, out a5_488, out s2_129, out s3_130, out s5_489, out mstatus)
	branch a0_139 == 0<32> l230539AA
l230539D2:
	word32 a1_490
	word32 a5_491
	word32 a0_170 = net_buf_simple_add(a0_139 + 8<32>, 6<32>, a4_115, out a1_490, out a5_491)
	word32 a0_176
	word32 a3_178
	word32 a4_179
	word32 a5_492
	word32 s1_181 = get_auth.isra.0(s3_130 + 10<i32>, 9<32>, a3_114, a4_115, out a0_176, out a3_178, out a4_179, out a5_492)
	Mem183[a0_170 + 2<i32>:byte] = SLICE(a0_176, byte, 0)
	word32 a3_493
	word32 a0_184 = get_io_capa(a3_178, a4_179, out a3_493)
	word32 a5_188 = CONVERT(Mem183[0x4200F498<32>:byte], byte, word32)
	Mem189[a0_170:byte] = SLICE(a0_184, byte, 0)
	Mem191[a0_170 + 1<i32>:byte] = SLICE(a5_188, byte, 0)
	Mem193[a0_170 + 3<i32>:byte] = 0x10<8>
	Mem195[a0_170 + 4<i32>:byte] = 5<8>
	Mem197[a0_170 + 5<i32>:byte] = 7<8>
	Mem199[s0_105 + 384<i32>:word16] = 0x705<16>
	Mem201[s0_105 + 161<i32>:byte] = 1<8>
	word32 a5_205
	word32 a1_494
	word32 a2_495
	word32 a3_496
	word32 a4_497
	word32 a6_498
	word32 a7_499
	memcpy(s0_105 + 162<i32>, a0_170, 6<32>, out a1_494, out a2_495, out a3_496, out a4_497, out a5_205, out a6_498, out a7_499)
	word32 a3_223
	word32 a4_224
	word32 s0_230
	word32 s1_500
	word32 a5_501
	word32 s5_502
	ra_107 = smp_send.isra.9(ra_107, s1_181, s0_105, a0_139, 0<32>, a5_205, mstatus, s4, s2, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg44, dwArg4C, dwArg58, dwArg5C, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_230, out s1_500, out a3_223, out a4_224, out a5_501, out s2_129, out s3_130, out s5_502, out mstatus)
	word32 a3_255
	word32 a4_256
	word32 a0_503
	word32 a2_504
	word32 a5_505
	word32 s4_506
	atomic_set_bit(s0_230 + 152<i32>, 2<32>, a3_223, a4_224, mstatus, out a0_503, out a2_504, out a3_255, out a4_256, out a5_505, out s4_506)
	word32 a3_267
	word32 a4_268
	word32 a0_507
	word32 a2_508
	word32 a5_509
	word32 s4_510
	atomic_set_bit(s0_230 + 152<i32>, 0xB<32>, a3_255, a4_256, mstatus, out a0_507, out a2_508, out a3_267, out a4_268, out a5_509, out s4_510)
	word32 a0_511
	word32 a2_512
	word32 a5_513
	word32 s4_514
	s1_282 = atomic_set_bit(s0_230 + 152<i32>, 3<32>, a3_267, a4_268, mstatus, out a0_511, out a2_512, out a3_114, out a4_115, out a5_513, out s4_514)
l230539AA:
	s1_282 = -55<i32>
l2305396E:
	s1_282 = 0xFFFFFFF0<32>
l23053970:
	s0Out = s1
	s1Out = s1_282
	a0Out = s1_282
	a3Out = a3_114
	a4Out = a4_115
	s2Out = s2_129
	s3Out = s3_130
	mstatusOut = mstatus
	return ra_107
smp_send_pairing_req_exit:


void smp_security_request(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_security_request_entry:
l23053A52:
	word32 s2_18 = Mem13[a1 + 8<i32>:int32]
	word32 s1_101 = a0 + 156<i32>
	word32 a2_615
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_615) == 0<32> l23053A76
l23053A76:
	word32 a2_616
	branch atomic_test_bit(a0 + 156<i32>, 1<32>, out a2_616) != 0<32> l23053A72
l23053A80:
	word32 a5_30 = CONVERT(Mem13[s2_18:byte], byte, word32)
	word32 a4_148 = CONVERT(Mem13[0x4200F4A0<32>:byte], byte, word32)
	word32 s2_172 = a5_30 & 7<i32>
	branch a4_148 == 0<32> l23053A96
l23053A92:
	s2_172 = a5_30 & 15<i32>
l23053A96:
	word32 a3_121
	word32 a4_122
	word32 mstatus_126
	word32 s0_128
	word32 a1_147
	word32 ra_168
	word32 s0_182
	word32 a5_36 = Mem13[s0 + 156<i32>:int32]
	branch a5_36 == 0<32> l23053ABA
l23053ABA:
	word32 a0_41
	word32 a5_617
	s0_182 = bt_keys_find(32<i32>, CONVERT(Mem13[s0 + 8<i32>:byte], byte, word32), s0 + 112<i32>, out s1_101, out a0_41, out a3, out a4_148, out a5_617, out s2_172, out s3, out s4)
	Mem55[s0_182 + 156<i32>:word32] = a0_41
	branch a0_41 != 0<32> l23053AE2
l23053AD2:
	word32 a0_59
	word32 a5_635
	s0_182 = bt_keys_find(4<32>, CONVERT(Mem55[s0_182 + 8<i32>:byte], byte, word32), s3, out s1_101, out a0_59, out a3, out a4_148, out a5_635, out s2_172, out s3, out s4)
	Mem73[s0_182 + 156<i32>:word32] = a0_59
l23053A9C:
	s0_182 = s0
	s0_182 = s0
	ra_168 = ra
	branch (CONVERT(Mem13[a5_36 + 10<i32>:uint16], uint16, word32) & 36<i32>) != 0<32> l23053AE2
l23053AE2:
	word32 a1_78 = Mem77[s0_182 + 156<i32>:int32]
	ra_168 = ra
	branch a1_78 == 0<32> l23053AA6
l23053AE8:
	word32 a5_107 = s2_172 & 4<i32>
	branch a5_107 == 0<32> l23053B10
l23053AEE:
	word32 a5_82 = CONVERT(Mem77[a1_78 + 9<i32>:byte], byte, word32)
	a5_107 = a5_82 & 1<32>
	branch (a5_82 & 1<32>) != 0<32> l23053B10
l23053B10:
	s2_172 = s2_172 & 8<i32>
	branch s2_172 == 0<32> l23053B22
l23053B18:
	word32 a5_88 = CONVERT(Mem77[a1_78 + 10<i32>:uint16], uint16, word32)
	a5_107 = a5_88 & 32<i32>
	ra_168 = ra
	branch (a5_88 & 32<i32>) == 0<32> l23053AA6
l23053B22:
	word32 a0_118
	word32 s3_637
	word32 s2_636
	bt_conn_le_start_encryption(ra, s1_101, a1_78 + 22<i32>, CONVERT(Mem77[a1_78 + 8<i32>:byte], byte, word32), a5_107, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_128, out a0_118, out a3_121, out a4_122, out s2_636, out s3_637, out mstatus_126)
	a1_147 = 1<32>
	branch a0_118 >= 0<32> l23053AB2
l23053AF6:
	ra_168 = ra
	branch get_io_capa(a3, a4_148, out a3) != 3<32> l23053AA6
l23053B00:
	word32 s11_633
	word32 t4_634
	word32 s7_629
	word32 s8_630
	word32 s9_631
	word32 s10_632
	word32 s5_627
	word32 s6_628
	word32 a5_625
	word32 a7_626
	word32 a2_623
	word32 a4_624
	word32 a0_621
	word32 a1_622
	ra_168 = printf(ra, 0x230BBEAC<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_101, out a0_621, out a1_622, out a2_623, out a3, out a4_624, out a5_625, out a7_626, out s2_172, out s3, out s4, out s5_627, out s6_628, out s7_629, out s8_630, out s9_631, out s10_632, out s11_633, out t4_634)
l23053AA6:
	word32 a0_201
	word32 s2_619
	word32 s3_620
	word32 s1_618
	smp_send_pairing_req(ra_168, s0_182, s1_101, s0_182, a3, s2_172, s3, s4, mstatus, dwLoc20, dwLoc1C, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_128, out s1_618, out a0_201, out a3_121, out a4_122, out s2_619, out s3_620, out mstatus_126)
	branch a0_201 < 0<32> l23053B3C
l23053B3C:
l23053AB0:
	a1_147 = 0xE<32>
l23053AB2:
	word32 a4_641
	word32 a5_642
	word32 s4_643
	word32 a0_638
	word32 a2_639
	word32 a3_640
	atomic_set_bit(s0_128, a1_147, a3_121, a4_122, mstatus_126, out a0_638, out a2_639, out a3_640, out a4_641, out a5_642, out s4_643)
l23053A72:
l23053B3E:
	return
smp_security_request_exit:


void smp_pairing_req(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s4, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_pairing_req_entry:
l23053B4C:
	branch (CONVERT(Mem15[s1 + 3<i32>:byte], byte, word32) + 0xFFFFFFF9<32> & 255<i32>) <=u 9<32> l23053B80
l23053B80:
	word32 ra_260
	word32 s1_101
	word32 s3_121 = Mem15[a0:int32]
	word32 s0_23 = a0
	ra_260 = ra
	s1_101 = s1
	branch Mem15[s3_121 + 156<i32>:int32] == 0<32> l23053C88
l23053C88:
	word32 a0_28
	word32 a3_1161
	word32 s4_1164
	word32 s2_1163
	word32 a4_1162
	ra_260 = bt_keys_get_addr(ra, a0, CONVERT(Mem15[s3_121 + 8<i32>:byte], byte, word32), s3_121 + 112<i32>, s2, s3_121, s4, mstatus, dwLoc20, s4, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_23, out s1_101, out a0_28, out a3_1161, out a4_1162, out s2_1163, out s3_121, out s4_1164, out s5, out mstatus)
	Mem57[s3_121 + 156<i32>:word32] = a0_28
	branch a0_28 != 0<32> l23053B8E
l23053C9C:
l23053B8E:
	word32 a2_1165
	branch atomic_test_bit(s0_23 + 156<i32>, 0xE<32>, out a2_1165) == 0<32> l23053CA0
l23053CA0:
	word32 a0_71
	word32 a5_1168
	word32 a3_1166
	word32 s2_1169
	word32 a4_1167
	ra_260 = smp_init(ra_260, s0_23, mstatus, s2, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgB8, dwArgF8, out s1_101, out a0_71, out a3_1166, out a4_1167, out a5_1168, out s2_1169, out s3_121, out s5)
	branch a0_71 == 0<32> l23053B9E
l23053CAA:
l23053B9E:
	Mem100[s0_23 + 161<i32>:byte] = 1<8>
	word32 a4_105
	word32 a3_110
	word32 a7_1174
	word32 a6_1173
	word32 a5_1172
	word32 a1_1170
	word32 a2_1171
	memcpy(s0_23 + 162<i32>, s1_101, 6<32>, out a1_1170, out a2_1171, out a3_110, out a4_105, out a5_1172, out a6_1173, out a7_1174)
	Mem119[s0_23 + 168<i32>:byte] = 2<8>
	word32 a0_124
	word32 a3_126
	word32 a5_1175
	word32 a4_127
	word32 s1_129 = get_auth.isra.0(s3_121 + 10<i32>, CONVERT(Mem119[s1_101 + 2<i32>:byte], byte, word32), a3_110, a4_105, out a0_124, out a3_126, out a4_127, out a5_1175)
	Mem131[s0_23 + 171<i32>:byte] = SLICE(a0_124, byte, 0)
	word32 a3_135
	word32 a0_133 = get_io_capa(a3_126, a4_127, out a3_135)
	word32 a5_137 = CONVERT(Mem131[0x4200F498<32>:byte], byte, word32)
	Mem138[s0_23 + 169<i32>:byte] = SLICE(a0_133, byte, 0)
	Mem140[s0_23 + 170<i32>:byte] = SLICE(a5_137, byte, 0)
	Mem142[s0_23 + 172<i32>:byte] = 0x10<8>
	Mem145[s0_23 + 173<i32>:byte] = SLICE(CONVERT(Mem142[s1_129 + 4<i32>:byte], byte, word32) & 7<32>, byte, 0)
	Mem148[s0_23 + 174<i32>:byte] = SLICE(CONVERT(Mem145[s1_129 + 5<i32>:byte], byte, word32) & 5<32>, byte, 0)
	branch (a0_124 & 8<i32>) == 0<32> l23053C22
l23053BFE:
	branch (CONVERT(Mem148[s1_129 + 2<i32>:byte], byte, word32) & 8<32>) == 0<32> l23053C22
l23053C06:
	word32 a5_1178
	word32 s4_1179
	word32 a2_1177
	word32 a0_1176
	s1_129 = atomic_set_bit(s0_23, 5<32>, a3_135, a4_127, mstatus, out a0_1176, out a2_1177, out a3_135, out a4_127, out a5_1178, out s4_1179)
	Mem167[s0_23 + 173<i32>:byte] = SLICE(CONVERT(Mem148[s0_23 + 173<i32>:byte], byte, word32) & 6<32>, byte, 0)
	Mem170[s0_23 + 174<i32>:byte] = SLICE(CONVERT(Mem167[s0_23 + 174<i32>:byte], byte, word32) & 4<32>, byte, 0)
l23053C22:
	branch (CONVERT(Mem172[s0_23 + 171<i32>:byte], byte, word32) & 32<i32>) == 0<32> l23053C3E
l23053C2C:
	branch (CONVERT(Mem172[s1_129 + 2<i32>:byte], byte, word32) & 32<i32>) == 0<32> l23053C3E
l23053C36:
	word32 a0_1180
	word32 a5_1182
	word32 a2_1181
	word32 s4_1183
	s1_129 = atomic_set_bit(s0_23, 0x13<32>, a3_135, a4_127, mstatus, out a0_1180, out a2_1181, out a3_135, out a4_127, out a5_1182, out s4_1183)
l23053C3E:
	Mem197[s0_23 + 384<i32>:byte] = SLICE(CONVERT(Mem172[s0_23 + 174<i32>:byte], byte, word32), byte, 0)
	Mem199[s0_23 + 385<i32>:byte] = SLICE(CONVERT(Mem197[s0_23 + 173<i32>:byte], byte, word32), byte, 0)
	branch (CONVERT(Mem199[s0_23 + 171<i32>:byte], byte, word32) & 1<32>) == 0<32> l23053C66
l23053C56:
	branch (CONVERT(Mem199[s1_129 + 2<i32>:byte], byte, word32) & 1<32>) == 0<32> l23053C66
l23053C5E:
	word32 a0_1187
	word32 a2_1188
	word32 a5_1189
	word32 s4_1190
	atomic_set_bit(s0_23, 0xC<32>, a3_135, a4_127, mstatus, out a0_1187, out a2_1188, out a3_135, out a4_127, out a5_1189, out s4_1190)
l23053C66:
	word32 a3_231
	word32 a4_232
	word32 s4_235
	word32 s2_254
	word32 a0_1184
	word32 a2_1185
	word32 a5_1186
	Mem255[s0_23 + 160<i32>:byte] = SLICE(get_pair_method(s0_23, CONVERT(Mem199[atomic_set_bit(s0_23, 3<32>, a3_135, a4_127, mstatus, out a0_1184, out a2_1185, out a3_231, out a4_232, out a5_1186, out s4_235):byte], byte, word32), a3_231, a4_232, dwArg18, out s2_254), byte, 0)
	word32 a4_268
	word32 a3_267
	branch update_keys_check(ra_260, s0_23, s2_254, s3_121, s4_235, mstatus, dwLoc20, s4, s2, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out a3_267, out a4_268) != 0<32> l23053CB0
l23053CB0:
	word32 a2_1191
	word32 a0_275 = atomic_test_bit(s2_254, 5<32>, out a2_1191)
	word32 a5_278 = CONVERT(Mem255[s0_23 + 160<i32>:byte], byte, word32)
	branch a0_275 != 0<32> l23053D18
l23053D18:
	a3_267 = CONVERT(Mem255[s3_121 + 10<i32>:byte], byte, word32)
	a4_268 = 4<32>
	branch a3_267 != 4<32> l23053D5A
l23053D5A:
	branch a5_278 != 0<32> l23053D3C
l23053D5C:
	word32 a2_1205
	branch atomic_test_bit(s2_254, 0xE<32>, out a2_1205) != 0<32> l23053D3C
l23053D66:
	word32 a5_288 = Mem255[0x42026610<32>:int32]
	branch a5_288 == 0<32> l23053D3C
l23053D70:
	branch Mem255[a5_288 + 20<i32>:word32] == 0<32> l23053D3C
l23053D74:
l23053D22:
	branch a5_278 == 0<32> l23053C84
l23053D24:
	word32 a4_290 = CONVERT(Mem255[s0_23 + 172<i32>:byte], byte, word32)
	word32 a5_291 = CONVERT(Mem255[s0_23 + 165<i32>:byte], byte, word32)
	branch a4_290 >=u a5_291 l23053D32
l23053D30:
	a5_291 = a4_290
l23053D32:
	a4_268 = 0x10<32>
	branch (a5_291 & 255<i32>) != 0x10<32> l23053B6C
l23053D3C:
	word32 a3_308
	word32 a4_309
	word32 a5_310
	word32 a0_1197
	word32 a2_1198
	word32 s4_1199
	atomic_set_bit(s0_23, 0xC<32>, a3_267, a4_268, mstatus, out a0_1197, out a2_1198, out a3_308, out a4_309, out a5_310, out s4_1199)
l23053D56_thunk_send_pairing_rsp:
	word32 a4_1202
	word32 a3_1201
	word32 a0_1200
	word32 s2_1203
	word32 mstatus_1204
	send_pairing_rsp(ra_260, s1, s0_23, a3_308, a4_309, a5_310, s5, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out a0_1200, out a3_1201, out a4_1202, out s2_1203, out mstatus_1204)
	return
l23053CC0:
	branch a5_278 != 0<32> l23053CEE
l23053CC2:
	word32 a2_1192
	branch atomic_test_bit(s2_254, 0xE<32>, out a2_1192) != 0<32> l23053CEE
l23053CCC:
	a5_278 = Mem255[0x42026610<32>:int32]
	branch a5_278 == 0<32> l23053CEE
l23053CD6:
	a5_278 = Mem255[a5_278 + 20<i32>:word32]
	branch a5_278 == 0<32> l23053CEE
l23053CEE:
	word32 a0_383
	word32 a3_386
	word32 a4_387
	word32 mstatus_391
	word32 s2_396
	word32 ra_392 = send_pairing_rsp(ra_260, s0_23, s0_23, a3_267, a4_268, a5_278, s5, mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg58, dwArg5C, s3, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out a0_383, out a3_386, out a4_387, out s2_396, out mstatus_391)
	branch a0_383 != 0<32> l23053B6E
l23053CFA:
	word32 a3_1208
	word32 a2_1207
	word32 a0_1206
	word32 a4_1209
	word32 a5_1210
	word32 s4_1211
	word32 s1_420 = atomic_set_bit(s0_23, 3<32>, a3_386, a4_387, mstatus_391, out a0_1206, out a2_1207, out a3_1208, out a4_1209, out a5_1210, out s4_1211)
l23053D14_thunk_legacy_request_tk:
	word32 s0_1212
	word32 a0_1213
	word32 s5_1217
	word32 s2_1216
	word32 a3_1214
	word32 a4_1215
	word32 mstatus_1218
	legacy_request_tk(ra_392, s1_420, s2_396, mstatus_391, dwArg08, dwArg18, dwArg44, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgC4, out s0_1212, out a0_1213, out a3_1214, out a4_1215, out s2_1216, out s5_1217, out mstatus_1218)
	return
l23053CDA:
	word32 a0_465
	word32 s4_472
	word32 a5_1196
	word32 a2_1193
	word32 a4_1195
	word32 a3_1194
	word32 s1_471 = atomic_set_bit(s0_23, 9<32>, a3_267, a4_268, mstatus, out a0_465, out a2_1193, out a3_1194, out a4_1195, out a5_1196, out s4_472)
	word32 a5_479 = Mem255[Mem255[0x42026610<32>:int32] + 20<i32>:word32]
	word32 a3_498
	word32 a7_500
	word32 t0_501
	word32 t1_502
	word32 t4_503
	word32 t5_504
	word32 t6_505
	word32 tp_506
	word32 s10_507
	word32 s11_508
	word32 s6_510
	word32 s7_511
	word32 s9_512
	call a5_479 (retsize: 0;)
		uses: a0:a0_465,a3:a3_498,a5:a5_479,a7:a7_500,mstatus:mstatus_68,ra:ra_260,s0:Mem255[a0_465:word32],s1:s1_471,s10:s10_507,s11:s11_508,s2:s2_254,s3:0x42026000<32>,s4:s4_472,s5:s5_334,s6:s6_510,s7:s7_511,s9:s9_512,Stack +0000:dwLoc20,Stack +0010:dwLoc10,Stack +0014:dwLoc0C,Stack +0018:dwLoc08,Stack +001C:dwLoc04,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0028:dwArg08,Stack +002C:dwArg0C,Stack +0030:dwArg10,Stack +0034:dwArg14,Stack +0038:dwArg18,Stack +003C:dwArg1C,Stack +0040:dwArg20,Stack +0044:dwArg24,Stack +0048:dwArg28,Stack +004C:dwArg2C,Stack +0050:dwArg30,Stack +0054:dwArg34,Stack +0058:dwArg38,Stack +005C:dwArg3C,Stack +0064:dwArg44,Stack +0068:dwArg48,Stack +006C:dwArg4C,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0078:dwArg58,Stack +007C:dwArg5C,Stack +0098:dwArg78,Stack +009C:dwArg7C,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +00B8:dwArg98,Stack +00BC:dwArg9C,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00E4:dwArgC4,Stack +00E8:dwArgC8,Stack +00F8:dwArgD8,Stack +0108:dwArgE8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,Stack +0138:dwArg0118,Stack +0148:dwArg0128,Stack +0158:dwArg0138,t0:t0_501,t1:t1_502,t4:t4_503,t5:t5_504,t6:t6_505,tp:tp_506
		defs: a3:a3_498,a7:a7_500,s10:s10_507,s11:s11_508,s6:s6_510,s7:s7_511,s9:s9_512,t0:t0_501,t1:t1_502,t4:t4_503,t5:t5_504,t6:t6_505,tp:tp_506
l23053C84:
l23053B6C:
l23053B6E:
	return
smp_pairing_req_exit:


void smp_check_complete.part.16(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_sign_info_sent
//      smp_ident_sent
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_check_complete.part.16_entry:
l23053D76:
	word32 a0_12 = bt_l2cap_le_lookup_tx_cid(a0, 6<32>)
	word32 a4_14 = CONVERT(Mem10[a0_12 + 384<i32>:byte], byte, word32)
	Mem17[a0_12 + 384<i32>:byte] = SLICE(~a1 & a4_14, byte, 0)
	branch CONVERT(Mem17[a0_12 + 384<i32>:uint16], uint16, word32) != 0<32> l23053DA4
l23053DA4:
	return
l23053D98:
l23053DA0_thunk_smp_pairing_complete:
	word32 a4_101
	word32 a5_102
	word32 s5_103
	smp_pairing_complete(ra, s0, s1, a0_12, 0<32>, a3, a4_14, mstatus, dwArg18, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_101, out a5_102, out s5_103)
	return
smp_check_complete.part.16_exit:


void smp_sign_info_sent(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_sign_info_sent_entry:
l23053DAC:
	branch CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) != 1<32> l23053DBC
l23053DBC:
	return
l23053DB6:
l23053DB8_thunk_smp_check_complete.part.16:
	smp_check_complete.part.16(ra, s0, s1, a0, 4<32>, a3, mstatus, dwArg18, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118)
	return
smp_sign_info_sent_exit:


void le_sc_oob_config_set.isra.3.constprop.19(word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
le_sc_oob_config_set.isra.3.constprop.19_entry:
l23053DBE:
	word32 a5_11
	word32 a0_5 = Mem0[a5:word32]
	word32 a3_6 = CONVERT(Mem0[a0_5 + 163<i32>:byte], byte, word32)
	word32 a4_7 = CONVERT(Mem0[a0_5 + 170<i32>:byte], byte, word32)
	branch CONVERT(Mem0[a5 + 3<i32>:byte], byte, word32) != 0<32> l23053DE0
l23053DE0:
	a5_11 = (a4_7 & 1<32>) << 1<u32>
	branch (a3_6 & 1<32>) == 0<32> l23053DEC
l23053DEC:
	a5_11 = 3<32>
	branch (a4_7 & 1<32>) == 0<32> l23053DE6
l23053DF0:
	a5_11 = 1<32>
l23053DD2:
	a5_11 = (a4_7 & 1<32>) + 1<i32>
	branch (a3_6 & 1<32>) != 0<32> l23053DE6
l23053DD8:
	a5_11 = 3<32>
	branch (a4_7 & 1<32>) == 0<32> l23053DE6
l23053DDC:
	a5_11 = 0<32>
l23053DE6:
	Mem20[a1:byte] = SLICE(a5_11, byte, 0)
	return
le_sc_oob_config_set.isra.3.constprop.19_exit:


word32 smp_error(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg5C, word32 dwArg64, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_dhkey_ready
//      bt_smp_recv
//      bt_smp_pkey_ready
//      bt_smp_auth_passkey_entry
//      bt_smp_update_keys
//      ble_auth_passkey_confirm
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s1 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_error_entry:
l23053DF4:
	word32 s0_11 = a0
	word32 a4_21
	word32 a5_22
	word32 s5_29
	word32 a0_41
	word32 a2_190
	word32 a5_191
	word32 s2_192
	word32 a3_160
	word32 a4_161
	word32 mstatus_165
	word32 s1_168
	word32 s3_172
	word32 s5_100
	word32 ra_166 = smp_create_pdu.isra.7(ra, a0, smp_pairing_complete(ra, a0, a1, a0, a1, a3, a4, mstatus, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArgB8, dwArgF8, out a4_21, out a5_22, out s5_29), a4_21, a5_22, s5_29, mstatus, dwArg18, dwArg20, dwArg24, dwArg48, dwArg64, ra, dwArg78, dwArgB8, dwArgD8, out s1_168, out a0_41, out a2_190, out a3_160, out a4_161, out a5_191, out s2_192, out s3_172, out s5_100, out mstatus_165)
	branch a0_41 == 0<32> l23053E38
l23053E38:
l23053E0E:
	word32 a5_76
	word32 a1_193
	word32 a0_74 = net_buf_simple_add(a0_41 + 8<32>, 1<32>, a4_161, out a1_193, out a5_76)
	Mem77[a0_74:byte] = SLICE(s1_168, byte, 0)
	word32 a0_194
	word32 a1_195
	word32 a5_196
	word32 s2_197
	word32 s4_198
	word32 s6_199
	word32 s7_200
	word32 s8_201
	word32 s9_202
	word32 s10_203
	word32 s11_204
	ra_166 = bt_l2cap_send_cb(ra_166, s1_168, a0_74, 6<32>, a0_41, 0<32>, a5_76, mstatus_165, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, s1, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_11, out s1_168, out a0_194, out a1_195, out a3_160, out a4_161, out a5_196, out s2_197, out s3_172, out s4_198, out s5_100, out s6_199, out s7_200, out s8_201, out s9_202, out s10_203, out s11_204, out mstatus_165)
l23053E2E:
	s0Out = s0_11
	s1Out = s1_168
	a3Out = a3_160
	a4Out = a4_161
	s3Out = s3_172
	s5Out = s5_100
	mstatusOut = mstatus_165
	return ra_166
smp_error_exit:


void bt_smp_dhkey_ready(word32 ra, word32 a0, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg5C, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_dhkey_ready_entry:
l23053E3E:
	word32 s1_34
	word32 a0_23
	word32 s4_465
	word32 a1_463
	word32 a5_464
	word32 a4_100
	word32 a3_113
	atomic_test_and_clear_bit(7<32>, a3, a4, mstatus, out a0_23, out a1_463, out a3_113, out a4_100, out a5_464, out s4_465)
	branch a0_23 != 0<32> l23053E74
l23053E74:
	s1_34 = 0<32>
l23053E64:
	word32 a0_37
	word32 s4_468
	word32 a5_467
	word32 a1_466
	atomic_test_and_clear_bit(7<32>, a3_113, a4_100, mstatus, out a0_37, out a1_466, out a3_113, out a4_100, out a5_467, out s4_468)
	branch a0_37 == 0<32> l23053EFC
l23053E70:
	s1_34 = 1<32>
l23053E76:
	word32 s1_104 = s1_34 + 424<i32>
	word32 a1_128 = 0xB<32>
	word32 s2_108 = s1_104 + 0x42016954<32>
	branch a0 == 0<32> l23053EE4
l23053E88:
	word32 a4_60
	word32 a3_65
	word32 a1_469
	word32 a2_470
	word32 a5_471
	word32 a6_472
	word32 a7_473
	memcpy(s1_104 + 0x42016A83<32>, a0, 32<i32>, out a1_469, out a2_470, out a3_65, out a4_60, out a5_471, out a6_472, out a7_473)
	word32 a2_474
	branch atomic_test_bit(s1_104 + 0x420169F0<32>, 9<32>, out a2_474) != 0<32> l23053EB6
l23053EAA:
	word32 a2_475
	branch atomic_test_bit(s1_104 + 0x420169F0<32>, 0xF<32>, out a2_475) == 0<32> l23053EC8
l23053EC8:
	word32 a2_476
	branch atomic_test_bit(s1_104 + 0x420169F0<32>, 8<32>, out a2_476) == 0<32> l23053EFC
l23053ED0:
	word32 a0_110
	branch CONVERT(Mem19[Mem19[s1_104 + 0x42016954<32>:int32] + 3<i32>:byte], byte, word32) != 0<32> l23053EF6
l23053EF6:
	word32 s0_490
	ra = compute_and_check_and_send_slave_dhcheck(ra, s1_104 + 156<i32>, s1_104 + 0x42016954<32>, s1_104 + 0x42016954<32>, a0, dwArg0108, out s0_490, out s1_104, out a0_110, out a3_113, out a4_100, out s2_108)
l23053EDC:
	word32 s0_491
	ra = compute_and_send_master_dhcheck(ra, s1_104 + 156<i32>, s1_104 + 0x42016954<32>, s1_104 + 0x42016954<32>, a0, dwArgB4, dwArgD0, dwArgD4, dwArgF8, dwArg0118, out s0_491, out s1_104, out a0_110, out a3_113, out a4_100, out s2_108)
l23053EE0:
	a1_128 = a0_110
	branch a0_110 == 0<32> l23053EFC
l23053EFC:
	return
l23053EE4:
l23053EF2_thunk_smp_error:
	word32 s1_484
	word32 s0_483
	word32 a4_486
	word32 a3_485
	word32 s5_488
	word32 s3_487
	word32 mstatus_489
	smp_error(ra, s1_104, s2_108, a1_128, a3_113, a4_100, mstatus, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, dwArg54, dwArg5C, s3, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_483, out s1_484, out a3_485, out a4_486, out s3_487, out s5_488, out mstatus_489)
	return
l23053EB6:
l23053EC4_thunk_atomic_set_bit:
	word32 a0_477
	word32 a2_478
	word32 a4_480
	word32 s4_482
	word32 a3_479
	word32 a5_481
	atomic_set_bit(s1_104 + 0x420169F0<32>, 8<32>, a3_65, a4_60, mstatus, out a0_477, out a2_478, out a3_479, out a4_480, out a5_481, out s4_482)
	return
bt_smp_dhkey_ready_exit:


void bt_smp_recv(word32 ra, word32 a0, word32 a1, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_recv_entry:
l23053F0A:
	word32 sp_169 = fp + 0xFFFFFFE0<32>
	branch CONVERT(Mem13[a1 + 12<i32>:uint16], uint16, word32) != 0<32> l23053F38
l23053F38:
	word32 a4_23
	word32 a1_333
	word32 a5_334
	word32 a0_21 = net_buf_simple_pull_mem(a1 + 8<i32>, 1<32>, out a1_333, out a4_23, out a5_334)
	word32 a2_335
	word32 a0_28 = atomic_test_bit(a0 + 156<i32>, 4<32>, out a2_335)
	word32 s0_159 = a0
	word32 a1_31 = CONVERT(Mem13[a0_21:byte], byte, word32)
	branch a0_28 == 0<32> l23053F66
l23053F66:
	word32 a3_110
	word32 a4_127
	word32 a1_101
	word32 ra_113
	word32 s1_114
	branch a1_31 >u 0xD<32> l23053F7E
l23053F6C:
	branch Mem13[(a1_31 << 3<u32>) + 0x230BBD0C<32>:word32] != 0<32> l23053F94
l23053F94:
	word32 a0_41
	word32 a3_44
	word32 a1_390
	word32 a4_391
	word32 a5_392
	word32 s4_393
	word32 s1_47 = atomic_test_and_clear_bit(a1_31, a3, a4_23, mstatus, out a0_41, out a1_390, out a3_44, out a4_391, out a5_392, out s4_393)
	word32 a2_51 = CONVERT(Mem13[a0_21:byte], byte, word32)
	branch a0_41 != 0<32> l23053FBE
l23053FBE:
	word32 a5_55 = CONVERT(Mem13[s1_47 + (a2_51 << 3<u32>) + 4<i32>:byte], byte, word32)
	branch a5_55 == CONVERT(Mem13[a1 + 12<i32>:uint16], uint16, word32) l23053FE0
l23053FE0:
	word32 a0_67
	word32 t1_271
	word32 t5_272
	word32 t6_273
	word32 tp_274
	call a5_55 (retsize: 0;)
		uses: a0:a0,a1:a1,a3:a3_44,mstatus:mstatus,ra:ra,s0:a0,s1:Mem13[a5_55:word32],s2:a1,s3:a0_21,Stack +0028:dwArg08,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0098:dwArg78,Stack +00BC:dwArg9C,t1:t1_271,t5:t5_272,t6:t6_273,tp:tp_274
		defs: a0:a0_67,a3:a3_75,a4:a4_73,mstatus:mstatus_74,ra:ra_60,s0:s0_61,s1:s1_62,sp:sp_59,t1:t1_271,t5:t5_272,t6:t6_273,tp:tp_274
	a1_101 = a0_67
	branch a0_67 == 0<32> l23053F28
l23053FEC:
l23053FD0:
	word32 a0_417
	word32 a1_418
	word32 a2_419
	word32 a5_420
	word32 a7_421
	word32 s2_422
	word32 s3_423
	word32 s4_424
	word32 s5_425
	word32 s6_426
	word32 s7_427
	word32 s8_428
	word32 s9_429
	word32 s10_430
	word32 s11_431
	word32 t4_432
	ra_113 = printf(ra, 0x230BBC20<32>, a3_44, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_114, out a0_417, out a1_418, out a2_419, out a3_110, out a4_127, out a5_420, out a7_421, out s2_422, out s3_423, out s4_424, out s5_425, out s6_426, out s7_427, out s8_428, out s9_429, out s10_430, out s11_431, out t4_432)
	a1_101 = 0xA<32>
l23053FA2:
	word32 s3_118
	word32 a0_394
	word32 a1_395
	word32 a2_396
	word32 a4_397
	word32 a5_398
	word32 a7_399
	word32 s2_400
	word32 s4_401
	word32 s5_402
	word32 s6_403
	word32 s7_404
	word32 s8_405
	word32 s9_406
	word32 s10_407
	word32 s11_408
	word32 t4_409
	ra_113 = printf(ra, 0x230BBC00<32>, a3_44, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_114, out a0_394, out a1_395, out a2_396, out a3_110, out a4_397, out a5_398, out a7_399, out s2_400, out s3_118, out s4_401, out s5_402, out s6_403, out s7_404, out s8_405, out s9_406, out s10_407, out s11_408, out t4_409)
	a4_127 = CONVERT(Mem13[s3_118:byte], byte, word32)
	a1_101 = 8<32>
	branch a4_127 == 5<32> l23053F28
l23053FBC:
l23053F7E:
	word32 a0_374
	word32 a1_375
	word32 a2_376
	word32 a5_377
	word32 a7_378
	word32 s2_379
	word32 s3_380
	word32 s4_381
	word32 s5_382
	word32 s6_383
	word32 s7_384
	word32 s8_385
	word32 s9_386
	word32 s10_387
	word32 s11_388
	word32 t4_389
	ra_113 = printf(ra, 0x230BBBE4<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_114, out a0_374, out a1_375, out a2_376, out a3_110, out a4_127, out a5_377, out a7_378, out s2_379, out s3_380, out s4_381, out s5_382, out s6_383, out s7_384, out s8_385, out s9_386, out s10_387, out s11_388, out t4_389)
	a1_101 = 7<32>
l23053F8C:
	word32 s0_410
	word32 s1_411
	word32 a3_412
	word32 a4_413
	word32 s3_414
	word32 s5_415
	word32 mstatus_416
	smp_error(ra_113, s1_114, s0_159, a1_101, a3_110, a4_127, mstatus, Mem13[sp_169 + 4<i32>:word32], Mem13[sp_169 + 8<i32>:word32], Mem13[sp_169 + 16<i32>:word32], Mem13[sp_169 + 20<i32>:word32], Mem13[sp_169 + 24<i32>:word32], Mem13[sp_169 + 32<i32>:word32], Mem13[sp_169 + 36<i32>:word32], Mem13[sp_169 + 40<i32>:word32], Mem13[sp_169 + 52<i32>:word32], Mem13[sp_169 + 56<i32>:word32], Mem13[sp_169 + 72<i32>:word32], Mem13[sp_169 + 84<i32>:word32], Mem13[sp_169 + 92<i32>:word32], Mem13[sp_169 + 100<i32>:word32], Mem13[sp_169 + 120<i32>:word32], Mem13[sp_169 + 132<i32>:word32], Mem13[sp_169 + 136<i32>:word32], Mem13[sp_169 + 152<i32>:word32], Mem13[sp_169 + 168<i32>:word32], Mem13[sp_169 + 184<i32>:word32], Mem13[sp_169 + 200<i32>:word32], Mem13[sp_169 + 216<i32>:word32], Mem13[sp_169 + 232<i32>:word32], Mem13[sp_169 + 248<i32>:word32], Mem13[sp_169 + 264<i32>:word32], Mem13[sp_169 + 280<i32>:word32], Mem13[sp_169 + 296<i32>:word32], Mem13[sp_169 + 312<i32>:word32], out s0_410, out s1_411, out a3_412, out a4_413, out s3_414, out s5_415, out mstatus_416)
l23053F58:
	word32 s1_355
	word32 a0_356
	word32 a1_357
	word32 a2_358
	word32 a3_359
	word32 a4_360
	word32 a5_361
	word32 a7_362
	word32 s2_363
	word32 s3_364
	word32 s4_365
	word32 s5_366
	word32 s6_367
	word32 s7_368
	word32 s8_369
	word32 s9_370
	word32 s10_371
	word32 s11_372
	word32 t4_373
	printf(ra, 0x230BBBB0<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_355, out a0_356, out a1_357, out a2_358, out a3_359, out a4_360, out a5_361, out a7_362, out s2_363, out s3_364, out s4_365, out s5_366, out s6_367, out s7_368, out s8_369, out s9_370, out s10_371, out s11_372, out t4_373)
l23053F1C:
	word32 s3_345
	word32 s4_346
	word32 s5_347
	word32 a5_342
	word32 a7_343
	word32 s2_344
	word32 a2_339
	word32 a3_340
	word32 a4_341
	word32 s1_336
	word32 a0_337
	word32 a1_338
	word32 s6_348
	word32 s7_349
	word32 s8_350
	word32 s9_351
	word32 s10_352
	word32 s11_353
	word32 t4_354
	printf(ra, 0x230BBB90<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_336, out a0_337, out a1_338, out a2_339, out a3_340, out a4_341, out a5_342, out a7_343, out s2_344, out s3_345, out s4_346, out s5_347, out s6_348, out s7_349, out s8_350, out s9_351, out s10_352, out s11_353, out t4_354)
l23053F28:
	return
bt_smp_recv_exit:


void bt_smp_encrypt_change(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s5, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_encrypt_change_entry:
l23053FEE:
	word32 s2_19 = Mem13[a0:int32]
	word32 a4_29
	word32 a0_553
	word32 a2_555
	word32 a1_554
	word32 a5_556
	word32 s8_558
	word32 s4_557
	word32 a3_106
	word32 s1_31 = atomic_and(a0, 0xFFFFFFFD<32>, a3, a4, mstatus, out a0_553, out a1_554, out a2_555, out a3_106, out a4_29, out a5_556, out s4_557, out s8_558)
	branch a1 != 0<32> l230540BE
l23054012:
	branch CONVERT(Mem13[s2_19 + 11<i32>:byte], byte, word32) == 0<32> l230540BE
l23054018:
	word32 a2_559
	branch atomic_test_bit(s1_31, 3<32>, out a2_559) != 0<32> l23054034
l23054034:
	word32 a2_560
	branch atomic_test_bit(s1_31, 5<32>, out a2_560) == 0<32> l23054066
l2305403E:
	branch (CONVERT(Mem13[a0 + 384<i32>:byte], byte, word32) & 8<32>) == 0<32> l23054056
l23054046:
	branch (CONVERT(Mem13[a0 + 385<i32>:byte], byte, word32) & 8<32>) == 0<32> l23054056
l2305404E:
	word32 a0_564
	word32 a5_567
	word32 s4_568
	word32 a4_566
	word32 a2_565
	atomic_set_bit(a0, 0x10<32>, a3_106, a4_29, mstatus, out a0_564, out a2_565, out a3_106, out a4_566, out a5_567, out s4_568)
l23054056:
	Mem68[a0 + 384<i32>:word16] = SLICE(CONVERT(Mem13[a0 + 384<i32>:uint16], uint16, word32) & 0xFF0007F7<32>, word16, 0)
l23054066:
	word32 a5_71 = CONVERT(Mem70[a0 + 385<i32>:byte], byte, word32)
	word32 a1_72 = 6<32>
	word32 a4_105 = a5_71 & 1<i32>
	branch (a5_71 & 1<i32>) != 0<32> l23054080
l23054072:
	a4_105 = a5_71 & 2<i32>
	a1_72 = 8<32>
	branch (a5_71 & 2<i32>) != 0<32> l23054080
l2305407A:
	branch (a5_71 & 4<32>) == 0<32> l23054088
l2305407E:
	a1_72 = 0xA<32>
l23054080:
	word32 a0_569
	word32 s4_572
	word32 a2_570
	word32 a5_571
	atomic_set_bit(a0, a1_72, a3_106, a4_105, mstatus, out a0_569, out a2_570, out a3_106, out a4_105, out a5_571, out s4_572)
l23054088:
	word32 a3_110
	word32 a4_111
	word32 a5_575
	word32 s4_576
	word32 a2_574
	word32 a0_573
	word32 s1_113 = atomic_set_bit(a0, 2<32>, a3_106, a4_105, mstatus, out a0_573, out a2_574, out a3_110, out a4_111, out a5_575, out s4_576)
	word32 a5_123 = CONVERT(Mem70[s2_19 + 3<i32>:byte], byte, word32)
	branch a5_123 != 0<32> l2305409C
l23054096:
	a5_123 = CONVERT(Mem70[a0 + 385<i32>:byte], byte, word32)
	branch a5_123 != 0<32> l230540BE
l2305409C:
	word32 a0_154
	word32 s0_158
	word32 a3_165
	word32 a4_166
	word32 mstatus_169
	word32 s1_171
	word32 ra_170 = bt_smp_distribute_keys(ra, s1_113, a0, a3_110, a4_111, a5_123, a1, s5, mstatus, dwLoc20, dwLoc1C, s2, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_158, out s1_171, out a0_154, out a3_165, out a4_166, out mstatus_169)
	branch a0_154 != 0<32> l230540BE
l230540A4:
	branch CONVERT(Mem70[s0_158 + 384<i32>:uint16], uint16, word32) != 0<32> l230540BE
l230540BE:
	return
l230540AA:
l230540BA_thunk_smp_pairing_complete:
	word32 a4_577
	word32 a5_578
	word32 s5_579
	smp_pairing_complete(ra_170, s0_158, s1_171, s0_158, 0<32>, a3_165, a4_166, mstatus_169, dwArg18, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_577, out a5_578, out s5_579)
	return
l23054022:
l23054030_thunk_smp_reset:
	word32 a4_561
	word32 a5_562
	word32 s5_563
	smp_reset(a0, s1_31, a0, a3_106, a4_29, mstatus, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a4_561, out a5_562, out s5_563)
	return
bt_smp_encrypt_change_exit:


word32 smp_send_pairing_confirm(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_confirm
//      bt_smp_auth_passkey_entry
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_send_pairing_confirm_entry:
l230540CC:
	word32 a0_154
	word32 a5_13 = CONVERT(Mem11[a0 + 160<i32>:byte], byte, word32)
	word32 a4_14 = 2<32>
	branch a5_13 >u 2<32> l230540E6
l230540E6:
	a4_14 = 3<32>
	branch a5_13 == 3<32> l230540E2
l230540E0:
	branch a5_13 != 0<32> l230540FA
l230540FA:
	a3 = CONVERT(Mem11[a0 + 372<i32>:byte], byte, word32)
l230540E2:
l23054110:
	word32 a2_380
	word32 s2_382
	word32 a5_381
	word32 s5_384
	word32 s3_383
	word32 a0_46
	ra = smp_create_pdu.isra.7(ra, a0, a3, a4_14, a5_13, s5, mstatus, dwArg28, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1, out a0_46, out a2_380, out a3, out a4_14, out a5_381, out s2_382, out s3_383, out s5_384, out mstatus)
	a0_154 = 8<32>
	branch a0_46 == 0<32> l230540EE
l23054120:
	word32 a1_385
	word32 a5_386
	word32 a0_78 = net_buf_simple_add(a0_46 + 8<i32>, 0x10<32>, a4_14, out a1_385, out a5_386)
	word32 a0_83 = Mem11[0x4200F49C<32>:int32]
	word32 a1_88
	word32 a4_91
	word32 a5_92
	word32 s2_97
	word32 s1_96 = smp_f4(ra, a0_83, s1 + 239<i32>, s1 + 191<i32>, a0_78, out a1_88, out a4_91, out a5_92, out s2_97)
	branch a0_83 == 0<32> l2305414C
l2305414C:
	word32 a3_116
	word32 a4_117
	word32 s0_123
	word32 s1_387
	word32 a5_388
	word32 s2_389
	word32 s3_390
	word32 s5_391
	ra = smp_send.isra.9(ra, s1_96, s1_96, s2_97, 0<32>, a5_92, mstatus, s0, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_123, out s1_387, out a3_116, out a4_117, out a5_388, out s2_389, out s3_390, out s5_391, out mstatus)
	word32 a0_392
	word32 a1_393
	word32 a2_394
	word32 a5_395
	word32 s4_396
	word32 s8_397
	s1 = atomic_and(s0_123, 0xFFFFFFFE<32>, a3_116, a4_117, mstatus, out a0_392, out a1_393, out a2_394, out a3, out a4_14, out a5_395, out s4_396, out s8_397)
	a0_154 = 0<32>
l23054144:
	word32 s0_398
	word32 a0_399
	word32 a1_400
	word32 a2_401
	word32 a5_402
	word32 s2_403
	word32 s3_404
	word32 s4_405
	word32 s5_406
	word32 s6_407
	word32 s8_408
	ra = net_buf_unref(ra, s1_96, s2_97, a1_88, a4_91, mstatus, s2, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_398, out s1, out a0_399, out a1_400, out a2_401, out a3, out a4_14, out a5_402, out s2_403, out s3_404, out s4_405, out s5_406, out s6_407, out s8_408, out mstatus)
l230540EC:
	a0_154 = 8<32>
l230540EE:
	0<32> = dwArg38
	s1Out = s1
	a0Out = a0_154
	a3Out = a3
	a4Out = a4_14
	mstatusOut = mstatus
	return ra
smp_send_pairing_confirm_exit:


void smp_ident_sent(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_ident_sent_entry:
l23054164:
	branch CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) != 1<32> l23054174
l23054174:
	return
l2305416E:
l23054170_thunk_smp_check_complete.part.16:
	smp_check_complete.part.16(ra, s0, s1, a0, 1<32>, a3, mstatus, dwArg18, dwArg24, dwArg28, dwArg38, dwArg98, dwArgA8, dwArgD8, dwArg0118)
	return
smp_ident_sent_exit:


word32 smp_c1(word32 ra, word32 a0, word32 a1, word32 a2, word32 a6, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      legacy_pairing_confirm
//      smp_pairing_random
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a6:[0..31] ra:[0..31]
// LiveOut: a0 a1 a4 a5 ra s0 s1 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
smp_c1_entry:
l23054176:
	word32 a3_41
	word32 a1_270
	word32 a2_271
	word32 a4_272
	word32 a5_273
	word32 a6_274
	word32 a7_275
	memcpy(fp + -62<i32>, a2, 7<32>, out a1_270, out a2_271, out a3_41, out a4_272, out a5_273, out a6_274, out a7_275)
	word32 a1_276
	word32 a2_277
	word32 a3_278
	word32 a4_279
	word32 a5_280
	word32 a6_281
	word32 a7_282
	memcpy(fp + -55<i32>, a3_41, 7<32>, out a1_276, out a2_277, out a3_278, out a4_279, out a5_280, out a6_281, out a7_282)
	word32 a3_66 = 0<32>
l230541BE:
	Mem81[a6 + a3_66:byte] = SLICE(CONVERT(Mem74[a1 + a3_66:byte], byte, word32) ^ CONVERT(Mem74[(fp + -64<i32>) + a3_66:byte], byte, word32), byte, 0)
	a3_66 = a3_66 + 1<32>
	branch a3_66 != 0x10<32> l230541BE
l230541DE:
	word32 s1_98
	word32 s2_99
	word32 s5_111
	word32 s4_100
	word32 s3_110
	word32 s0_185
	word32 a4_180
	word32 a5_181
	word32 a0_176
	word32 a1_177
	word32 ra_109 = bt_encrypt_le(ra, a0, out s0_185, out s1_98, out a0_176, out a1_177, out a4_180, out a5_181, out s2_99, out s3_110, out s4_100, out s5_111)
	branch a0_176 != 0<32> l23054224
l230541EA:
	word32 a1_283
	word32 a2_284
	word32 a3_285
	word32 a4_286
	word32 a5_287
	word32 a6_288
	word32 a7_289
	memcpy(fp + -48<i32>, s3_110 + 1<i32>, 6<32>, out a1_283, out a2_284, out a3_285, out a4_286, out a5_287, out a6_288, out a7_289)
	word32 a1_290
	word32 a2_291
	word32 a3_292
	word32 a4_293
	word32 a5_294
	word32 a6_295
	word32 a7_296
	memcpy(fp + -42<i32>, s2_99 + 1<i32>, 6<32>, out a1_290, out a2_291, out a3_292, out a4_293, out a5_294, out a6_295, out a7_296)
	word32 t1_297
	word32 a0_298
	word32 a1_299
	word32 a2_300
	word32 a3_301
	word32 a4_302
	word32 a5_303
	word32 ra_154 = memset(ra_109, fp + -36<i32>, 0<32>, 4<32>, out t1_297, out a0_298, out a1_299, out a2_300, out a3_301, out a4_302, out a5_303)
	word32 a5_157 = fp + -48<i32>
	word32 a4_159 = s0_185
l23054216:
	branch s0_185 + 16<i32> != a4_159 l23054234
l23054234:
	a4_159 = a4_159 + 1<32>
	Mem169[a4_159 + 4095<i32>:byte] = SLICE(CONVERT(Mem163[a4_159 + -1<i32>:byte], byte, word32) ^ CONVERT(Mem163[a5_157:byte], byte, word32), byte, 0)
	a5_157 = a5_157 + 1<32>
l2305421A:
	word32 s1_304
	word32 s2_305
	bt_encrypt_le(ra_154, s1_98, out s0_185, out s1_304, out a0_176, out a1_177, out a4_180, out a5_181, out s2_305, out s3_110, out s4_100, out s5_111)
l23054224:
	s0Out = s0_185
	s1Out = dwLoc4C
	a0Out = a0_176
	a1Out = a1_177
	a4Out = a4_180
	a5Out = a5_181
	s3Out = s3_110
	s4Out = s4_100
	s5Out = s5_111
	return dwLoc08
smp_c1_exit:


word32 legacy_send_pairing_confirm(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      legacy_pairing_confirm
//      smp_pairing_rsp
//      ble_auth_pairing_confirm
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
legacy_send_pairing_confirm_entry:
l23054248:
	word32 a0_131
	word32 a0_21
	word32 a2_275
	word32 s2_276
	word32 s3_277
	word32 s5_278
	word32 a4_125
	word32 a3_124
	word32 a5_126
	word32 mstatus_141
	word32 s1_127
	word32 ra_142 = smp_create_pdu.isra.7(ra, a0, a3, a4, a5, s5, mstatus, dwArg28, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1_127, out a0_21, out a2_275, out a3_124, out a4_125, out a5_126, out s2_276, out s3_277, out s5_278, out mstatus_141)
	branch a0_21 == 0<32> l23054290
l23054260:
	word32 a0_62
	word32 a1_63
	word32 a4_66
	word32 a5_67
	word32 s0_72
	word32 s1_73
	word32 a1_279
	word32 a5_280
	word32 s3_281
	word32 s4_282
	word32 s5_283
	word32 ra_71 = smp_c1(ra_142, a0 + 223<i32>, a0 + 191<i32>, a0 + 161<i32>, net_buf_simple_add(a0_21 + 8<32>, 0x10<32>, a4_125, out a1_279, out a5_280), out s0_72, out s1_73, out a0_62, out a1_63, out a4_66, out a5_67, out s3_281, out s4_282, out s5_283)
	branch a0_62 == 0<32> l23054294
l23054294:
	word32 a3_93
	word32 a4_94
	word32 s0_100
	word32 s1_294
	word32 a5_295
	word32 s2_296
	word32 s3_297
	word32 s5_298
	ra_142 = smp_send.isra.9(ra_71, s1_73, s0_72, s1_73, 0<32>, a5_67, mstatus_141, s0, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_100, out s1_294, out a3_93, out a4_94, out a5_295, out s2_296, out s3_297, out s5_298, out mstatus_141)
	word32 a0_299
	word32 a1_300
	word32 a2_301
	word32 s4_302
	word32 s8_303
	s1_127 = atomic_and(s0_100, 0xFFFFFFFE<32>, a3_93, a4_94, mstatus_141, out a0_299, out a1_300, out a2_301, out a3_124, out a4_125, out a5_126, out s4_302, out s8_303)
	a0_131 = 0<32>
l2305428A:
	word32 s0_284
	word32 a0_285
	word32 a1_286
	word32 a2_287
	word32 s2_288
	word32 s3_289
	word32 s4_290
	word32 s5_291
	word32 s6_292
	word32 s8_293
	ra_142 = net_buf_unref(ra_71, s1_73, s1_73, a1_63, a4_66, mstatus_141, s2, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_284, out s1_127, out a0_285, out a1_286, out a2_287, out a3_124, out a4_125, out a5_126, out s2_288, out s3_289, out s4_290, out s5_291, out s6_292, out s8_293, out mstatus_141)
l23054290:
	a0_131 = 8<32>
l230542AA:
	0<32> = dwArg38
	s1Out = s1_127
	a0Out = a0_131
	a3Out = a3_124
	a4Out = a4_125
	a5Out = a5_126
	mstatusOut = mstatus_141
	return ra_142
legacy_send_pairing_confirm_exit:


word32 legacy_pairing_confirm(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_pairing_confirm
//      bt_smp_auth_passkey_entry
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
legacy_pairing_confirm_entry:
l230542B6:
	word32 a0_11 = Mem9[a5:word32]
	word32 a1_13 = 3<32>
	branch CONVERT(Mem9[a5 + 3<i32>:byte], byte, word32) == 0<32> l230542DA
l230542CA:
	word32 a2_224
	branch atomic_test_bit(a0_11 + 156<i32>, 9<32>, out a2_224) != 0<32> l230542F0
l230542F0:
	word32 a3_29
	word32 a4_30
	word32 a5_31
	word32 a0_225
	word32 a2_226
	word32 s4_227
	s1Out = atomic_set_bit(a0_11, 0<32>, a3, a4, mstatus, out a0_225, out a2_226, out a3_29, out a4_30, out a5_31, out s4_227)
	a0Out = 0<32>
	a3Out = a3_29
	a4Out = a4_30
	a5Out = a5_31
	mstatusOut = mstatus
	return ra
l230542D8:
	a1_13 = 4<32>
l230542DA:
	word32 a3_51
	word32 a4_52
	word32 a5_53
	word32 a0_221
	word32 a2_222
	word32 s4_223
	atomic_set_bit(a0_11, a1_13, a3, a4, mstatus, out a0_221, out a2_222, out a3_51, out a4_52, out a5_53, out s4_223)
l230542EC_thunk_legacy_send_pairing_confirm:
	word32 a0_70
	word32 a3_73
	word32 a4_74
	word32 a5_75
	word32 mstatus_78
	word32 s1_80
	word32 ra_79 = legacy_send_pairing_confirm(ra, s0, a0_11, a3_51, a4_52, a5_53, s2, s5, mstatus, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s1_80, out a0_70, out a3_73, out a4_74, out a5_75, out mstatus_78)
	s1Out = s1_80
	a0Out = a0_70
	a3Out = a3_73
	a4Out = a4_74
	a5Out = a5_75
	mstatusOut = mstatus_78
	return ra_79
legacy_pairing_confirm_exit:


void smp_pairing_confirm(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
smp_pairing_confirm_entry:
l23054304:
	word32 s2_13 = Mem11[a1 + 8<i32>:int32]
	word32 s8_368
	word32 s4_367
	word32 a5_366
	word32 a4_365
	word32 a3_364
	word32 a2_363
	word32 a1_362
	word32 a0_361
	word32 s1_28 = atomic_and(a0, -1025<i32>, a3, a4, mstatus, out a0_361, out a1_362, out a2_363, out a3_364, out a4_365, out a5_366, out s4_367, out s8_368)
	word32 a4_35
	word32 a5_36
	word32 a3_40
	word32 a7_372
	word32 a6_371
	word32 a2_370
	word32 a1_369
	memcpy(a0 + 175<i32>, s2_13, 0x10<32>, out a1_369, out a2_370, out a3_40, out a4_35, out a5_36, out a6_371, out a7_372)
	word32 s0_48 = Mem11[a5_36:word32]
	word32 a5_49 = CONVERT(Mem11[a5_36 + 3<i32>:byte], byte, word32)
	branch a5_49 != 0<32> l23054350
l23054350:
	word32 a2_373
	branch atomic_test_bit(s1_28, 5<32>, out a2_373) != 0<32> l2305436A
l2305436A:
	word32 a5_55 = CONVERT(Mem11[s0_48 + 160<i32>:byte], byte, word32)
	word32 a4_56 = 1<32>
	branch a5_55 == 1<32> l23054394
l23054394:
	word32 a2_383
	branch atomic_test_bit(s1_28, 9<32>, out a2_383) == 0<32> l2305437A
l2305439E:
	word32 a0_394
	word32 a2_395
	word32 a3_396
	word32 a4_397
	word32 a5_398
	word32 s4_399
	atomic_set_bit(s0_48, 0<32>, a3_40, 1<32>, mstatus, out a0_394, out a2_395, out a3_396, out a4_397, out a5_398, out s4_399)
l23054374:
	a4_56 = 2<32>
	branch a5_55 != 2<32> l230543B4
l230543B4:
l230543A8:
	0<32> = dwArg38
	return
l2305437A:
	word32 a3_92
	word32 a0_384
	word32 a2_385
	word32 a4_386
	word32 a5_387
	word32 s4_388
	atomic_set_bit(s0_48, 4<32>, a3_40, a4_56, mstatus, out a0_384, out a2_385, out a3_92, out a4_386, out a5_387, out s4_388)
	0<32> = dwArg38
l23054390_thunk_smp_send_pairing_confirm:
	word32 s1_389
	word32 a0_390
	word32 a3_391
	word32 a4_392
	word32 mstatus_393
	smp_send_pairing_confirm(ra, s0, s0_48, a3_92, s2_13, s5, mstatus, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s1_389, out a0_390, out a3_391, out a4_392, out mstatus_393)
	return
l2305435A:
	0<32> = dwArg38
l23054366_thunk_legacy_pairing_confirm:
	word32 s1_377
	word32 a0_378
	word32 a3_379
	word32 a4_380
	word32 a5_381
	word32 mstatus_382
	legacy_pairing_confirm(ra, s0, a3_40, a4_35, a5_49, s2_13, s5, mstatus, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s1_377, out a0_378, out a3_379, out a4_380, out a5_381, out mstatus_382)
	return
l23054336:
	word32 a3_178
	word32 a4_179
	word32 a5_180
	word32 a0_374
	word32 a2_375
	word32 s4_376
	atomic_set_bit(s0_48, 4<32>, a3_40, a4_35, mstatus, out a0_374, out a2_375, out a3_178, out a4_179, out a5_180, out s4_376)
	0<32> = dwArg38
l2305434C_thunk_smp_send_pairing_random:
	smp_send_pairing_random(ra, s0, s0_48, a3_178, a4_179, a5_180, s5, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138)
	return
smp_pairing_confirm_exit:


void smp_pairing_rsp(word32 ra, word32 s1, word32 a0, word32 s2, word32 s4, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
smp_pairing_rsp_entry:
l230543B8:
	branch (CONVERT(Mem13[s1 + 3<i32>:byte], byte, word32) + 0xFFFFFFF9<32> & 255<i32>) <=u 9<32> l230543E8
l230543E8:
	word32 s1_105
	word32 s3_183 = Mem13[a0:int32]
	Mem25[a0 + 384<i32>:byte] = SLICE(CONVERT(Mem13[a0 + 384<i32>:byte], byte, word32) & CONVERT(Mem13[s1 + 4<i32>:byte], byte, word32), byte, 0)
	Mem31[a0 + 385<i32>:byte] = SLICE(CONVERT(Mem25[a0 + 385<i32>:byte], byte, word32) & CONVERT(Mem25[s1 + 5<i32>:byte], byte, word32), byte, 0)
	Mem33[a0 + 168<i32>:byte] = 2<8>
	word32 a7_1076
	word32 a6_1075
	word32 a5_1074
	word32 a2_1073
	word32 a1_1072
	word32 a4_103
	word32 a3_102
	memcpy(a0 + 169<i32>, s1, 6<32>, out a1_1072, out a2_1073, out a3_102, out a4_103, out a5_1074, out a6_1075, out a7_1076)
	s1_105 = s1
	branch (CONVERT(Mem33[s1 + 2<i32>:byte], byte, word32) & 8<32>) == 0<32> l23054436
l23054424:
	s1_105 = s1
	branch (CONVERT(Mem33[a0 + 164<i32>:byte], byte, word32) & 8<32>) == 0<32> l23054436
l2305442C:
	word32 a0_1077
	word32 a2_1078
	word32 a5_1079
	s1_105 = atomic_set_bit(a0, 5<32>, a3_102, a4_103, mstatus, out a0_1077, out a2_1078, out a3_102, out a4_103, out a5_1079, out s4)
l23054436:
	branch (CONVERT(Mem33[s1_105 + 2<i32>:byte], byte, word32) & 32<i32>) == 0<32> l23054454
l23054440:
	branch (CONVERT(Mem33[a0 + 164<i32>:byte], byte, word32) & 32<i32>) == 0<32> l23054454
l2305444A:
	word32 a2_1081
	word32 a5_1082
	word32 a0_1080
	s1_105 = atomic_set_bit(a0, 0x13<32>, a3_102, a4_103, mstatus, out a0_1080, out a2_1081, out a3_102, out a4_103, out a5_1082, out s4)
l23054454:
	branch (CONVERT(Mem33[s1_105 + 2<i32>:byte], byte, word32) & 1<32>) == 0<32> l2305446E
l2305445C:
	branch (CONVERT(Mem33[a0 + 164<i32>:byte], byte, word32) & 1<32>) == 0<32> l2305446E
l23054464:
	word32 a0_1084
	word32 a5_1086
	word32 a2_1085
	s1_105 = atomic_set_bit(a0, 0xC<32>, a3_102, a4_103, mstatus, out a0_1084, out a2_1085, out a3_102, out a4_103, out a5_1086, out s4)
l2305446E:
	word32 s2_128
	Mem129[a0 + 160<i32>:byte] = SLICE(get_pair_method(a0, CONVERT(Mem33[s1_105:byte], byte, word32), a3_102, a4_103, dwArg18, out s2_128), byte, 0)
	word32 a4_1083
	word32 a3_145
	branch update_keys_check(ra, a0, s2_128, s3_183, s4, mstatus, dwLoc20, dwLoc1C, s2, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out a3_145, out a4_1083) != 0<32> l23054488
l23054488:
	word32 a2_1087
	word32 a0_154 = atomic_test_bit(a0 + 156<i32>, 5<32>, out a2_1087)
	word32 a4_157 = CONVERT(Mem129[a0 + 160<i32>:byte], byte, word32)
	branch a0_154 != 0<32> l23054506
l23054506:
	a3_145 = CONVERT(Mem129[s3_183 + 10<i32>:byte], byte, word32)
	branch a3_145 != 4<32> l2305452A
l23054510:
	branch a4_157 == 0<32> l23054484
l23054512:
	word32 a3_161 = CONVERT(Mem129[a0 + 165<i32>:byte], byte, word32)
	word32 a5_162 = CONVERT(Mem129[a0 + 172<i32>:byte], byte, word32)
	branch a3_161 >=u a5_162 l23054520
l2305451E:
	a5_162 = a3_161
l23054520:
	a3_145 = 0x10<32>
	branch (a5_162 & 255<i32>) != 0x10<32> l230543D6
l2305452A:
	Mem173[a0 + 384<i32>:word16] = SLICE(CONVERT(Mem129[a0 + 384<i32>:uint16], uint16, word32) & 1540<i32>, word16, 0)
	branch a4_157 != 0<32> l23054550
l23054538:
	word32 a2_1093
	branch atomic_test_bit(a0 + 156<i32>, 0xE<32>, out a2_1093) == 0<32> l23054550
l23054542:
	s3_183 = 0x42026000<32>
	word32 a5_184 = Mem173[0x42026610<32>:int32]
	branch a5_184 == 0<32> l23054550
l2305454C:
	branch Mem173[a5_184 + 20<i32>:word32] != 0<32> l230544B6
l23054550:
	branch Mem173[0x4200F49C<32>:int32] != 0<32> l23054566
l23054566:
	word32 a3_202
	word32 a4_203
	word32 a5_1096
	word32 s4_1097
	word32 a0_1094
	word32 a2_1095
	atomic_set_bit(a0, 0xC<32>, a3_145, a4_157, mstatus, out a0_1094, out a2_1095, out a3_202, out a4_203, out a5_1096, out s4_1097)
	word32 a3_215
	word32 a4_216
	word32 a5_217
	word32 a0_1098
	word32 a2_1100
	word32 s4_1101
	word32 a1_1099
	word32 s8_1102
	word32 s1_218 = atomic_and(a0, 0xFF0007FF<32>, a3_202, a4_203, mstatus, out a0_1098, out a1_1099, out a2_1100, out a3_215, out a4_216, out a5_217, out s4_1101, out s8_1102)
l2305458C_thunk_sc_send_public_key:
	word32 s0_1109
	word32 s1_1110
	word32 a0_1111
	word32 a3_1112
	word32 a4_1113
	word32 s2_1114
	word32 s3_1115
	word32 mstatus_1117
	word32 s5_1116
	sc_send_public_key(ra, s1_218, a0, a3_215, a4_216, a5_217, a0 + 156<i32>, s3_183, s5, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_1109, out s1_1110, out a0_1111, out a3_1112, out a4_1113, out s2_1114, out s3_1115, out s5_1116, out mstatus_1117)
	return
l2305455A:
	word32 a4_1106
	word32 a5_1107
	word32 a2_1104
	word32 a3_1105
	word32 a0_1103
	word32 s4_1108
	atomic_set_bit(a0, 6<32>, a3_145, a4_157, mstatus, out a0_1103, out a2_1104, out a3_1105, out a4_1106, out a5_1107, out s4_1108)
l2305449C:
	branch a4_157 != 0<32> l230544CA
l2305449E:
	word32 a2_1088
	branch atomic_test_bit(a0 + 156<i32>, 0xE<32>, out a2_1088) == 0<32> l230544CA
l230544A8:
	word32 a5_294 = Mem129[0x42026610<32>:int32]
	branch a5_294 == 0<32> l230544CA
l230544B2:
	branch Mem129[a5_294 + 20<i32>:word32] == 0<32> l230544CA
l230544CA:
	word32 a0_304
	word32 a3_307
	word32 a4_308
	word32 mstatus_312
	word32 s0_314
	word32 s2_318
	word32 s5_321
	word32 ra_313 = legacy_request_tk(ra, a4_157, a0 + 156<i32>, mstatus, s2, dwLoc08, dwArg24, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgA4, out s0_314, out a0_304, out a3_307, out a4_308, out s2_318, out s5_321, out mstatus_312)
	branch a0_304 != 0<32> l230543D8
l230544D6:
	word32 a2_1118
	branch atomic_test_bit(s2_318, 9<32>, out a2_1118) != 0<32> l230544FC
l230544FC:
	word32 a2_1120
	word32 a3_1121
	word32 a4_1122
	word32 a0_1119
	word32 s4_1124
	word32 a5_1123
	atomic_set_bit(s0_314, 0<32>, a3_307, a4_308, mstatus_312, out a0_1119, out a2_1120, out a3_1121, out a4_1122, out a5_1123, out s4_1124)
l230544E0:
	word32 a3_353
	word32 a4_354
	word32 a5_355
	word32 a0_1125
	word32 s4_1127
	word32 a2_1126
	atomic_set_bit(s0_314, 3<32>, a3_307, a4_308, mstatus_312, out a0_1125, out a2_1126, out a3_353, out a4_354, out a5_355, out s4_1127)
l230544F8_thunk_legacy_send_pairing_confirm:
	word32 a3_1130
	word32 a0_1129
	word32 s1_1128
	word32 mstatus_1133
	word32 a4_1131
	word32 a5_1132
	legacy_send_pairing_confirm(ra_313, s0_314, s0_314, a3_353, a4_354, a5_355, s2_318, s5_321, mstatus_312, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg78, dwArg7C, dwArg84, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s1_1128, out a0_1129, out a3_1130, out a4_1131, out a5_1132, out mstatus_1133)
	return
l230544B6:
	word32 a0_404
	word32 s4_411
	word32 a3_1090
	word32 a4_1091
	word32 a2_1089
	word32 a5_1092
	word32 s1_410 = atomic_set_bit(a0, 9<32>, a3_145, a4_157, mstatus, out a0_404, out a2_1089, out a3_1090, out a4_1091, out a5_1092, out s4_411)
	word32 a5_418 = Mem415[Mem415[0x42026610<32>:int32] + 20<i32>:word32]
	word32 a3_437
	word32 a7_438
	word32 t0_439
	word32 t1_440
	word32 t4_441
	word32 t5_442
	word32 t6_443
	word32 tp_445
	word32 s10_447
	word32 s11_448
	word32 s6_449
	word32 s7_450
	word32 s9_451
	word32 gp_452
	word32 t2_453
	call a5_418 (retsize: 0;)
		uses: a0:a0_404,a3:a3_437,a5:a5_418,a7:a7_438,gp:gp_452,mstatus:mstatus,ra:ra,s0:Mem415[a0_404:word32],s1:s1_410,s10:s10_447,s11:s11_448,s2:a0 + 156<i32>,s3:0x42026000<32>,s4:s4_411,s5:s5,s6:s6_449,s7:s7_450,s9:s9_451,Stack +0000:dwLoc20,Stack +0004:dwLoc1C,Stack +0014:dwLoc0C,Stack +0018:dwLoc08,Stack +001C:dwLoc04,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0030:dwArg10,Stack +0034:dwArg14,Stack +0038:dwArg18,Stack +003C:dwArg1C,Stack +0040:dwArg20,Stack +0044:dwArg24,Stack +0048:dwArg28,Stack +0050:dwArg30,Stack +0054:dwArg34,Stack +0058:dwArg38,Stack +0064:dwArg44,Stack +0068:dwArg48,Stack +006C:dwArg4C,Stack +0074:dwArg54,Stack +0078:dwArg58,Stack +007C:dwArg5C,Stack +0094:dwArg74,Stack +0098:dwArg78,Stack +009C:dwArg7C,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +00B4:dwArg94,Stack +00B8:dwArg98,Stack +00C4:dwArgA4,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00E8:dwArgC8,Stack +00F8:dwArgD8,Stack +0108:dwArgE8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,Stack +0138:dwArg0118,Stack +0148:dwArg0128,Stack +0158:dwArg0138,Stack +0168:dwArg0148,Stack +0188:dwArg0168,t0:t0_439,t1:t1_440,t2:t2_453,t4:t4_441,t5:t5_442,t6:t6_443,tp:tp_445
		defs: a3:a3_437,a7:a7_438,gp:gp_452,s10:s10_447,s11:s11_448,s6:s6_449,s7:s7_450,s9:s9_451,t0:t0_439,t1:t1_440,t2:t2_453,t4:t4_441,t5:t5_442,t6:t6_443,tp:tp_445
l23054484:
l230543D6:
l230543D8:
	return
smp_pairing_rsp_exit:


void smp_ident_addr_info(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_ident_addr_info_entry:
l23054590:
	word32 s2_17 = Mem15[a1 + 8<i32>:int32]
	word32 s1_178 = a0
	branch CONVERT(Mem15[s2_17:byte], byte, word32) == 0<32> l230545F8
l230545AC:
	branch (CONVERT(Mem15[s2_17 + 6<i32>:byte], byte, word32) & 192<i32>) == 192<i32> l230545F8
l230545F8:
	word32 a2_819
	branch atomic_test_bit(a0 + 156<i32>, 0xC<32>, out a2_819) == 0<32> l2305469C
l23054604:
	word32 a0_42
	word32 s4_52
	word32 mstatus_57
	word32 s5_861
	word32 s1_859
	word32 s3_860
	word32 s2_147
	word32 a3_129
	word32 ra_144 = bt_keys_get_type(ra, s0, 2<32>, CONVERT(Mem15[s0 + 8<i32>:byte], byte, word32), s0 + 112<i32>, s2_17, mstatus, dwLoc20, s4, s2, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1_859, out a0_42, out a3_129, out s2_147, out s3_860, out s4_52, out s5_861, out mstatus_57)
	word32 s3_148 = a0_42
	branch a0_42 != 0<32> l23054630
l23054630:
	word32 a1_72 = s0 + 119<i32>
	branch CONVERT(Mem15[s0 + 3<i32>:byte], byte, word32) != 0<32> l2305463E
l2305463A:
	a1_72 = s0 + 126<i32>
l2305463E:
	branch CONVERT(Mem15[a1_72:byte], byte, word32) != 1<32> l23054696
l23054648:
	branch (CONVERT(Mem15[a1_72 + 6<i32>:byte], byte, word32) & 192<i32>) != 64<i32> l23054696
l23054658:
	word32 a6_890
	word32 a7_891
	word32 a4_888
	word32 a5_889
	word32 a1_886
	word32 a2_887
	memcpy(a0_42 + 54<i32>, a1_72 + 1<32>, 6<32>, out a1_886, out a2_887, out a3_129, out a4_888, out a5_889, out a6_890, out a7_891)
	branch CONVERT(Mem15[s0 + 112<i32>:byte], byte, word32) == 0<32> l23054696
l2305466A:
	branch (CONVERT(Mem15[s0 + 118<i32>:byte], byte, word32) & 192<i32>) == 192<i32> l23054696
l2305467A:
	word32 a6_897
	word32 a7_898
	word32 a4_895
	word32 a5_896
	word32 a2_893
	word32 a3_894
	word32 a1_892
	memcpy(a0_42 + 1<i32>, s2_147, 7<32>, out a1_892, out a2_893, out a3_894, out a4_895, out a5_896, out a6_897, out a7_898)
	word32 a7_904
	word32 a5_902
	word32 a6_903
	word32 a1_899
	word32 a2_900
	word32 a4_901
	memcpy(s4_52, s2_147, 7<32>, out a1_899, out a2_900, out a3_129, out a4_901, out a5_902, out a6_903, out a7_904)
	ra_144 = bt_conn_identity_resolved(ra_144, s0, out s0, out s2_147, out s3_148)
l23054696:
	ra = bt_id_add(ra_144, s0, a3_129, s2_147, s3_148, mstatus_57, dwLoc20, s4, s2, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg48, dwArg58, s1, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0, out s1_178, out a3, out s3, out s5, out mstatus)
l2305469C:
	word32 a5_195 = CONVERT(Mem15[s1_178 + 385<i32>:byte], byte, word32)
	Mem197[s1_178 + 385<i32>:byte] = SLICE(a5_195 & -3<i32>, byte, 0)
	word32 a4_196 = a5_195 & -3<i32>
	branch (a5_195 & 4<32>) == 0<32> l230546B6
l230546AC:
	word32 a5_884
	word32 s4_885
	word32 a0_882
	word32 a2_883
	s1_178 = atomic_set_bit(s0, 0xA<32>, a3, a5_195 & -3<i32>, mstatus, out a0_882, out a2_883, out a3, out a4_196, out a5_884, out s4_885)
l230546B6:
	branch CONVERT(Mem197[s0 + 3<i32>:byte], byte, word32) == 0<32> l230546C6
l230546C6:
	word32 a5_220 = CONVERT(Mem197[s1_178 + 385<i32>:byte], byte, word32)
	branch a5_220 != 0<32> l230546BC
l230546CC:
	word32 a0_236
	ra = bt_smp_distribute_keys(ra, s1_178, s1_178, a3, a4_196, a5_220, s3, s5, mstatus, dwLoc20, s4, s2, dwLoc10, dwLoc0C, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0, out s1_178, out a0_236, out a3, out a4_196, out mstatus)
	branch a0_236 == 0<32> l230546BC
l230546D4:
l230546BC:
	branch CONVERT(Mem197[s1_178 + 384<i32>:uint16], uint16, word32) == 0<32> l230546D6
l230546D6:
	word32 s5_907
	word32 a4_905
	word32 a5_906
	smp_pairing_complete(ra, s0, s1_178, s1_178, 0<32>, a3, a4_196, mstatus, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg78, dwArg88, dwArgB8, dwArgF8, out a4_905, out a5_906, out s5_907)
l230546C2:
l23054618:
	word32 a3_303
	word32 s11_880
	word32 t4_881
	word32 s9_878
	word32 s10_879
	word32 s7_876
	word32 s8_877
	word32 s5_874
	word32 s6_875
	word32 s3_872
	word32 s4_873
	word32 a7_870
	word32 s2_871
	word32 a4_868
	word32 a5_869
	word32 a2_866
	word32 a3_867
	word32 a0_864
	word32 a1_865
	word32 s0_862
	word32 s1_863
	printf(bt_addr_le_str_real(ra_144, s4_52, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_862, out a3_303), 0x230BBE60<32>, a3_303, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_863, out a0_864, out a1_865, out a2_866, out a3_867, out a4_868, out a5_869, out a7_870, out s2_871, out s3_872, out s4_873, out s5_874, out s6_875, out s7_876, out s8_877, out s9_878, out s10_879, out s11_880, out t4_881)
l230545BC:
	word32 a3_355
	word32 s0_361
	word32 a3_406
	word32 s10_856
	word32 s11_857
	word32 t4_858
	word32 s7_853
	word32 s8_854
	word32 s9_855
	word32 s5_851
	word32 s6_852
	word32 s4_850
	word32 s1_820
	word32 a0_821
	word32 a1_822
	word32 a3_824
	word32 a2_823
	word32 a5_826
	word32 a4_825
	word32 s2_828
	word32 a7_827
	word32 s4_830
	word32 s3_829
	word32 s7_833
	word32 s5_831
	word32 s6_832
	word32 s10_836
	word32 s9_835
	word32 s8_834
	word32 s11_837
	word32 t4_838
	word32 s0_839
	word32 a0_841
	word32 a1_842
	word32 s1_840
	word32 a4_845
	word32 a3_844
	word32 a2_843
	word32 a5_846
	word32 s2_848
	word32 s3_849
	word32 a7_847
	printf(bt_addr_le_str_real(printf(bt_addr_le_str_real(ra, s2_17, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_361, out a3_355), 0x230BBE3C<32>, a3_355, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_820, out a0_821, out a1_822, out a2_823, out a3_824, out a4_825, out a5_826, out a7_827, out s2_828, out s3_829, out s4_830, out s5_831, out s6_832, out s7_833, out s8_834, out s9_835, out s10_836, out s11_837, out t4_838), s0_361 + 112<i32>, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_839, out a3_406), 0x230BBE54<32>, a3_406, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_840, out a0_841, out a1_842, out a2_843, out a3_844, out a4_845, out a5_846, out a7_847, out s2_848, out s3_849, out s4_850, out s5_851, out s6_852, out s7_853, out s8_854, out s9_855, out s10_856, out s11_857, out t4_858)
l230545E8:
	return
smp_ident_addr_info_exit:


word32 smp_public_key_slave.part.15(word32 ra, word32 s0, word32 a0, ptr32 & a0Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_public_key
//      bt_smp_pkey_ready
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 a4 ra
// Trashed: a0 a4 a5 ra s0
// Preserved: sp
smp_public_key_slave.part.15_entry:
l230546E0:
	word32 a5_5 = CONVERT(Mem0[a0 + 160<i32>:byte], byte, word32)
	branch a5_5 >u 5<32> l23054780
l23054780:
	a0Out = 8<32>
	a4Out = 5<32>
	return ra
l230546EA:
	word32 a5_13 = Mem0[(a5_5 << 2<i32>) + 0x230BBA44<32>:word32]
	word32 a0_22
	word32 a4_23
	word32 ra_25
	call a5_13 (retsize: 0;)
		uses: a0:a0,a4:0x230BBA44<32>,a5:a5_13,ra:ra,s0:a0,Stack +0004:s0,Stack +0084:ra
		defs: a0:a0_22,a4:a4_23,ra:ra_25
	a0Out = a0_22
	a4Out = a4_23
	return ra_25
smp_public_key_slave.part.15_exit:


void smp_public_key(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
smp_public_key_entry:
l23054786:
	word32 s1_106
	word32 a1_419
	word32 a2_420
	word32 a3_421
	word32 a4_422
	word32 a5_423
	word32 a6_424
	word32 a7_425
	memcpy(a0 + 239<i32>, s1, 32<i32>, out a1_419, out a2_420, out a3_421, out a4_422, out a5_423, out a6_424, out a7_425)
	word32 a1_426
	word32 a2_427
	word32 a3_428
	word32 a4_429
	word32 a5_430
	word32 a6_431
	word32 a7_432
	memcpy(a0 + 271<i32>, s1 + 32<i32>, 32<i32>, out a1_426, out a2_427, out a3_428, out a4_429, out a5_430, out a6_431, out a7_432)
	word32 s2_128 = a0 + 239<i32>
	word32 a1_433
	word32 a2_434
	word32 a5_108
	word32 a4_110
	word32 a3_177
	word32 a0_112 = memcmp(a0 + 239<i32>, 0x230BBDDC<32>, 64<i32>, out a1_433, out a2_434, out a3_177, out a4_110, out a5_108)
	s1_106 = s1
	branch a0_112 == 0<32> l230547E0
l230547E0:
	word32 s4_68
	word32 a2_435
	word32 a5_436
	s1_106 = atomic_set_bit(a0, 0xD<32>, a3_177, a4_110, mstatus, out a0_112, out a2_435, out a3_177, out a4_110, out a5_436, out s4_68)
	word32 s0_71 = Mem11[s1_106:word32]
	branch Mem11[s1_106 + 156<i32>:int32] != 0<32> l23054802
l230547F2:
	word32 s0_450
	word32 s4_451
	ra = bt_keys_get_addr(ra, s0_71, CONVERT(Mem11[s1_106 + 8<i32>:byte], byte, word32), s1_106 + 112<i32>, a0 + 239<i32>, s3, s4_68, mstatus, dwLoc20, dwLoc1C, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_450, out s1_106, out a0_112, out a3_177, out a4_110, out s2_128, out s3, out s4_451, out s5, out mstatus)
	Mem105[s1_106 + 156<i32>:word32] = a0_112
l23054802:
	a5_108 = Mem107[s1_106 + 156<i32>:int32]
	branch a5_108 == 0<32> l230547C8
l23054808:
	word32 a4_109 = CONVERT(Mem107[a5_108 + 10<i32>:uint16], uint16, word32)
	a4_110 = a4_109 & 36<i32>
	branch (a4_109 & 36<i32>) == 0<32> l230547C8
l23054812:
	word32 a5_111 = CONVERT(Mem107[a5_108 + 9<i32>:byte], byte, word32)
	a0_112 = 3<32>
	a5_108 = a5_111 & 2<32>
	branch (a5_111 & 2<32>) == 0<32> l230547C8
l230547C8:
	word32 s0_116 = Mem115[a5_108:word32]
	branch CONVERT(Mem115[a5_108 + 3<i32>:byte], byte, word32) == 0<32> l23054828
l23054828:
	word32 a5_118 = CONVERT(Mem115[s0_116 + 160<i32>:byte], byte, word32)
	branch a5_118 >u 5<32> l230548AC
l230548AC:
l23054832:
	word32 a5_125 = Mem115[(a5_118 << 2<i32>) + 0x230BBA5C<32>:word32]
	word32 tp_162
	word32 s10_163
	word32 s11_164
	word32 s5_165
	word32 s6_166
	word32 s7_167
	word32 s9_168
	call a5_125 (retsize: 0;)
		uses: a0:a0_131,a4:0x230BBA5C<32>,a5:a5_125,mstatus:mstatus_133,ra:ra_126,s0:s0_116,s1:s1_130,s10:s10_163,s11:s11_164,s2:s2_128,s3:s3_135,s5:s5_165,s6:s6_166,s7:s7_167,s9:s9_168,Stack +0000:dwLoc20,Stack +0004:dwLoc1C,Stack +0010:dwLoc10,Stack +0014:dwLoc0C,Stack +0018:dwLoc08,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0028:dwArg08,Stack +002C:dwArg0C,Stack +0034:dwArg14,Stack +0044:dwArg24,Stack +0048:dwArg28,Stack +004C:dwArg2C,Stack +0058:dwArg38,Stack +005C:dwArg3C,Stack +0068:dwArg48,Stack +0074:dwArg54,Stack +0078:dwArg58,Stack +0098:dwArg78,Stack +00A8:dwArg88,Stack +00B8:dwArg98,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00E8:dwArgC8,Stack +00F8:dwArgD8,Stack +0108:dwArgE8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,tp:tp_162
		defs: s10:s10_163,s11:s11_164,s5:s5_165,s6:s6_166,s7:s7_167,s9:s9_168,tp:tp_162
	return
l230547D0:
	word32 a5_170 = Mem115[0x4200F49C<32>:int32]
	branch a5_170 != 0<32> l230548F2
l230548F2:
	word32 a0_179
	word32 s0_207
	word32 s1_437
	word32 a3_438
	word32 a4_439
	word32 s2_440
	word32 s3_441
	word32 s5_442
	word32 mstatus_443
	word32 ra_188 = sc_send_public_key(ra, s1_106, s0_116, a3_177, a4_110, a5_170, s2_128, s3, s5, mstatus, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg54, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_207, out s1_437, out a0_179, out a3_438, out a4_439, out s2_440, out s3_441, out s5_442, out mstatus_443)
	branch a0_179 != 0<32> l2305481C
l230548FC:
	word32 a0_452
	word32 a4_453
	smp_public_key_slave.part.15(ra_188, s0_207, s0_207, out a0_452, out a4_453)
l230547DC:
l2305485E:
	word32 a0_444
	word32 a2_445
	word32 a3_446
	word32 a4_447
	word32 a5_448
	word32 s4_449
	atomic_set_bit(s0_116, 6<32>, a3_177, a4_110, mstatus, out a0_444, out a2_445, out a3_446, out a4_447, out a5_448, out s4_449)
l2305481C:
	return
smp_public_key_exit:


void bt_smp_pkey_ready(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg5C, word32 dwArg64, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_pkey_ready_entry:
l23054904:
	Mem5[0x4200F49C<32>:word32] = a0
	branch a0 != 0<32> l2305491A
l2305491A:
	word32 a5_26
	word32 s0_29
	word32 s10_736
	word32 s11_737
	word32 s8_734
	word32 s9_735
	word32 s6_732
	word32 s7_733
	word32 s2_730
	word32 s4_731
	word32 a1_728
	word32 a2_729
	word32 s1_726
	word32 a0_727
	word32 s3_106
	word32 s5_108
	word32 a4_131
	word32 a3_130
	word32 ra_100 = k_sem_give(ra, 0x42026614<32>, a3, a4, 0x4200F000<32>, mstatus, dwArg04, dwArg08, dwArg50, dwArg54, dwArg78, dwArg84, dwArg9C, dwArgF8, dwArg0138, dwArg0178, out s0_29, out s1_726, out a0_727, out a1_728, out a2_729, out a3_130, out a4_131, out a5_26, out s2_730, out s3_106, out s4_731, out s5_108, out s6_732, out s7_733, out s8_734, out s9_735, out s10_736, out s11_737)
	word32 s1_133 = s0_29 + -1708<i32>
	word32 a2_738
	branch atomic_test_bit(s0_29 + -1552<i32>, 6<32>, out a2_738) == 0<32> l23054966
l2305494A:
	word32 s1_57 = Mem17[a5_26:word32]
	word32 a5_58 = CONVERT(Mem17[a5_26 + 3<i32>:byte], byte, word32)
	branch a5_58 == 0<32> l230549B8
l230549B8:
	word32 a0_60
	word32 s1_70
	word32 s2_759
	word32 s0_101
	word32 a4_125
	word32 a3_126
	ra_100 = sc_send_public_key(ra_100, s1_57, s0_29 + -1708<i32>, a3_130, a4_131, a5_58, s0_29, s3_106, s5_108, mstatus, s2, s0, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_101, out s1_70, out a0_60, out a3_126, out a4_125, out s2_759, out s3_106, out s5_108, out mstatus)
	branch a0_60 != 0<32> l230549D0
l230549D0:
	word32 s1_770
	ra_100 = smp_error(ra_100, s1_70, s0_101 + -1708<i32>, a0_60, a3_126, a4_125, mstatus, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg38, dwArg44, dwArg4C, dwArg54, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_101, out s1_770, out a3_126, out a4_125, out s3_106, out s5_108, out mstatus)
l230549C4:
	word32 a0_771
	word32 a2_772
	word32 a5_773
	word32 s4_774
	s1_133 = atomic_set_bit(s0_101, 0xC<32>, a3_126, a4_125, mstatus, out a0_771, out a2_772, out a3_130, out a4_131, out a5_773, out s4_774)
l23054952:
	word32 s2_151
	word32 s0_166
	word32 a0_138
	ra_100 = sc_send_public_key(ra_100, s1_57, s0_29 + -1708<i32>, a3_130, a4_131, a5_58, s0_29, s3_106, s5_108, mstatus, s2, s0, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_166, out s1_133, out a0_138, out a3_130, out a4_131, out s2_151, out s3_106, out s5_108, out mstatus)
	branch a0_138 == 0<32> l230549AC
l230549AC:
	ra_100 = smp_public_key_slave.part.15(ra_100, s0_166, s0_166 + -1708<i32>, out a0_138, out a4_131)
	branch a0_138 == 0<32> l23054966
l230549B6:
l2305495C:
	word32 s0_760
	ra_100 = smp_error(ra_100, s1_133, s2_151 + -1708<i32>, a0_138, a3_130, a4_131, mstatus, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg38, dwArg44, dwArg4C, dwArg54, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_760, out s1_133, out a3_130, out a4_131, out s3_106, out s5_108, out mstatus)
l23054966:
	word32 a2_758
	branch atomic_test_bit(s1_133 + 580<i32>, 6<32>, out a2_758) == 0<32> l230549FC
l23054972:
	word32 a5_224 = CONVERT(Mem17[Mem17[s1_133 + 424<i32>:int32] + 3<i32>:byte], byte, word32)
	branch a5_224 != 0<32> l230549DA
l230549DA:
	word32 a3_240
	word32 mstatus_245
	word32 s1_247
	word32 s2_250
	word32 s0_265
	word32 s5_762
	word32 s3_761
	word32 a0_237
	word32 a4_241
	word32 ra_246 = sc_send_public_key(ra_100, s1_133, 0x42016AFC<32>, a3_130, a4_131, a5_224, 0x42016AFC<32>, s3_106, s5_108, mstatus, s2, s0, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_265, out s1_247, out a0_237, out a3_240, out a4_241, out s2_250, out s3_761, out s5_762, out mstatus_245)
	branch a0_237 != 0<32> l230549EA
l230549E0:
	ra_246 = smp_public_key_slave.part.15(ra_246, s0_265, s0_265 + -1284<i32>, out a0_237, out a4_241)
	branch a0_237 == 0<32> l230549FC
l230549FC:
	0<32> = dwArg38
	return
l230549EA:
	0<32> = dwArg38
l230549F8_thunk_smp_error:
	word32 s0_775
	word32 s1_776
	word32 a3_777
	word32 a4_778
	word32 s3_779
	word32 s5_780
	word32 mstatus_781
	smp_error(ra_246, s1_247, s2_250, a0_237, a3_240, a4_241, mstatus_245, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, dwArg54, dwArg5C, dwArg64, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_775, out s1_776, out a3_777, out a4_778, out s3_779, out s5_780, out mstatus_781)
	return
l23054988:
	word32 a0_322
	word32 s1_332
	word32 s0_350
	word32 s5_765
	word32 s3_764
	word32 s2_763
	word32 mstatus_330
	word32 a4_326
	word32 a3_325
	word32 ra_331 = sc_send_public_key(ra_100, s1_133, 0x42016AFC<32>, a3_130, a4_131, a5_224, 0x42016AFC<32>, s3_106, s5_108, mstatus, s2, s0, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_350, out s1_332, out a0_322, out a3_325, out a4_326, out s2_763, out s3_764, out s5_765, out mstatus_330)
	branch a0_322 == 0<32> l23054998
l23054990:
	word32 s1_767
	word32 s0_766
	word32 s3_768
	word32 s5_769
	smp_error(ra_331, s1_332, s0_350 + -1284<i32>, a0_322, a3_325, a4_326, mstatus_330, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg38, dwArg44, dwArg4C, dwArg54, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_766, out s1_767, out a3_325, out a4_326, out s3_768, out s5_769, out mstatus_330)
l23054998:
	0<32> = dwArg38
l230549A8_thunk_atomic_set_bit:
	word32 a0_782
	word32 a2_783
	word32 a3_784
	word32 a4_785
	word32 a5_786
	word32 s4_787
	atomic_set_bit(s0, 0xC<32>, a3_325, a4_326, mstatus_330, out a0_782, out a2_783, out a3_784, out a4_785, out a5_786, out s4_787)
	return
l2305490E:
l23054916_thunk_printf:
	word32 t4_757
	word32 s11_756
	word32 s10_755
	word32 s9_754
	word32 s8_753
	word32 s7_752
	word32 s6_751
	word32 s5_750
	word32 s4_749
	word32 s3_748
	word32 s2_747
	word32 a7_746
	word32 a5_745
	word32 a4_744
	word32 a3_743
	word32 a2_742
	word32 a1_741
	word32 a0_740
	word32 s1_739
	printf(ra, 0x230B9934<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_739, out a0_740, out a1_741, out a2_742, out a3_743, out a4_744, out a5_745, out a7_746, out s2_747, out s3_748, out s4_749, out s5_750, out s6_751, out s7_752, out s8_753, out s9_754, out s10_755, out s11_756, out t4_757)
	return
bt_smp_pkey_ready_exit:


void smp_pairing_random(word32 ra, word32 s1, word32 a0, word32 a1, word32 s4, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF0, word32 dwArgF4, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
smp_pairing_random_entry:
l23054A08:
	word32 a1_661
	word32 a2_662
	word32 a3_663
	word32 a4_664
	word32 a5_665
	word32 a6_666
	word32 a7_667
	memcpy(a0 + 207<i32>, Mem19[a1 + 8<i32>:word32], 0x10<32>, out a1_661, out a2_662, out a3_663, out a4_664, out a5_665, out a6_666, out a7_667)
	word32 a2_668
	word32 a0_43 = atomic_test_bit(a0 + 156<i32>, 5<32>, out a2_668)
	word32 s4_46 = Mem19[a0:int32]
	branch a0_43 != 0<32> l23054B36
l23054B36:
	branch CONVERT(Mem19[s4_46 + 3<i32>:byte], byte, word32) != 0<32> l23054BEC
l23054BEC:
	word32 a5_48 = CONVERT(Mem19[a0 + 160<i32>:byte], byte, word32)
	branch a5_48 >u 5<32> l23054A60
l23054BF6:
	word32 a5_54 = Mem19[(a5_48 << 2<i32>) + 0x230BBA8C<32>:word32]
	word32 t2_469
	word32 gp_468
	word32 s10_471
	word32 s11_472
	word32 s7_473
	word32 s9_474
	call a5_54 (retsize: 0;)
		uses: a0:a0_43,a1:5<32>,a4:0x230BBA8C<32>,a5:a5_54,gp:gp_468,mstatus:mstatus,ra:ra,s0:a0,s1:s1,s10:s10_471,s11:s11_472,s2:a0 + 156<i32>,s3:a0 + 207<i32>,s4:s4_46,s5:s5,s6:s6,s7:s7_473,s9:s9_474,Stack +0008:dwLoc38,Stack +0020:dwLoc20,Stack +0024:dwLoc1C,Stack +0028:dwLoc18,Stack +0030:dwLoc10,Stack +0034:dwLoc0C,Stack +0038:dwLoc08,Stack +0040:dwArg00,Stack +0044:dwArg04,Stack +0048:dwArg08,Stack +0054:dwArg14,Stack +0058:dwArg18,Stack +005C:dwArg1C,Stack +0068:dwArg28,Stack +006C:dwArg2C,Stack +0070:dwArg30,Stack +0074:dwArg34,Stack +0078:dwArg38,Stack +007C:dwArg3C,Stack +0084:dwArg44,Stack +0088:dwArg48,Stack +008C:dwArg4C,Stack +00A8:dwArg68,Stack +00B8:dwArg78,Stack +00BC:dwArg7C,Stack +00C8:dwArg88,Stack +00D8:dwArg98,Stack +00E8:dwArgA8,Stack +00F8:dwArgB8,Stack +0108:dwArgC8,Stack +0114:dwArgD4,Stack +0118:dwArgD8,Stack +0128:dwArgE8,Stack +0130:dwArgF0,Stack +0134:dwArgF4,Stack +0138:dwArgF8,Stack +0148:dwArg0108,Stack +0158:dwArg0118,Stack +0178:dwArg0138,Stack +0198:dwArg0158,Stack +01B8:dwArg0178,Stack +01D8:dwArg0198,t2:t2_469
		defs: gp:gp_468,s10:s10_471,s11:s11_472,s7:s7_473,s9:s9_474,t2:t2_469
	return
l23054B3C:
	word32 a0_81 = sc_smp_check_confirm(a0)
	branch a0_81 != 0<32> l23054A62
l23054B48:
	word32 a5_85 = CONVERT(Mem19[a0 + 160<i32>:byte], byte, word32)
	branch a5_85 >u 5<32> l23054A60
l23054B52:
	word32 a5_91 = Mem19[(a5_85 << 2<i32>) + 0x230BBA74<32>:word32]
	word32 gp_475
	word32 t2_476
	word32 s10_478
	word32 s11_479
	word32 s7_480
	word32 s9_481
	call a5_91 (retsize: 0;)
		uses: a0:a0_81,a1:5<32>,a4:0x230BBA74<32>,a5:a5_91,gp:gp_475,mstatus:mstatus,ra:ra,s0:a0,s1:a0_81,s10:s10_478,s11:s11_479,s2:a0 + 156<i32>,s3:a0 + 207<i32>,s4:s4_46,s5:s5,s6:s6,s7:s7_480,s9:s9_481,Stack +0008:dwLoc38,Stack +0020:dwLoc20,Stack +0024:dwLoc1C,Stack +0028:dwLoc18,Stack +0030:dwLoc10,Stack +0034:dwLoc0C,Stack +0038:dwLoc08,Stack +0040:dwArg00,Stack +0044:dwArg04,Stack +0048:dwArg08,Stack +0054:dwArg14,Stack +0058:dwArg18,Stack +005C:dwArg1C,Stack +0068:dwArg28,Stack +006C:dwArg2C,Stack +0070:dwArg30,Stack +0074:dwArg34,Stack +0078:dwArg38,Stack +007C:dwArg3C,Stack +0084:dwArg44,Stack +0088:dwArg48,Stack +008C:dwArg4C,Stack +00A8:dwArg68,Stack +00B8:dwArg78,Stack +00BC:dwArg7C,Stack +00C8:dwArg88,Stack +00D8:dwArg98,Stack +00E8:dwArgA8,Stack +00F8:dwArgB8,Stack +0108:dwArgC8,Stack +0114:dwArgD4,Stack +0118:dwArgD8,Stack +0128:dwArgE8,Stack +0130:dwArgF0,Stack +0134:dwArgF4,Stack +0138:dwArgF8,Stack +0148:dwArg0108,Stack +0158:dwArg0118,Stack +0178:dwArg0138,Stack +0198:dwArg0158,Stack +01B8:dwArg0178,Stack +01D8:dwArg0198,t2:t2_476
		defs: gp:gp_475,s10:s10_478,s11:s11_479,s7:s7_480,s9:s9_481,t2:t2_476
	return
l23054A3E:
	word32 a0_125
	word32 s0_135
	word32 s3_138
	word32 s4_139
	word32 s5_140
	word32 s1_669
	word32 a1_670
	word32 a4_671
	word32 a5_672
	word32 ra_134 = smp_c1(ra, a0 + 223<i32>, a0 + 207<i32>, a0 + 161<i32>, fp + -48<i32>, out s0_135, out s1_669, out a0_125, out a1_670, out a4_671, out a5_672, out s3_138, out s4_139, out s5_140)
	branch a0_125 == 0<32> l23054A78
l23054A78:
	word32 a1_673
	word32 a2_674
	word32 a3_675
	word32 a4_676
	word32 a5_677
	branch memcmp(s0_135 + 175<i32>, fp + -48<i32>, 0x10<32>, out a1_673, out a2_674, out a3_675, out a4_676, out a5_677) != 0<32> l23054A62
l23054A88:
	branch CONVERT(Mem19[s4_139 + 3<i32>:byte], byte, word32) != 0<32> l23054AFE
l23054AFE:
	word32 a1_678
	word32 a2_679
	word32 a3_680
	word32 a4_681
	word32 a5_682
	word32 a6_683
	word32 a7_684
	memcpy(fp + -48<i32>, s3_138, 8<32>, out a1_678, out a2_679, out a3_680, out a4_681, out a5_682, out a6_683, out a7_684)
	word32 a1_685
	word32 a2_686
	word32 a3_687
	word32 a4_688
	word32 a5_689
	word32 a6_690
	word32 a7_691
	memcpy(fp + -40<i32>, s0_135 + 191<i32>, 8<32>, out a1_685, out a2_686, out a3_687, out a4_688, out a5_689, out a6_690, out a7_691)
	word32 a0_197
	word32 s0_206
	word32 s5_220
	word32 s1_692
	word32 a1_693
	word32 a4_694
	word32 a5_695
	word32 s2_696
	word32 s3_697
	word32 s4_698
	word32 ra_218 = bt_encrypt_le(ra_134, s5_140, out s0_206, out s1_692, out a0_197, out a1_693, out a4_694, out a5_695, out s2_696, out s3_697, out s4_698, out s5_220)
	branch a0_197 != 0<32> l23054A60
l23054B1C:
	word32 a4_225
	word32 a3_230
	word32 a1_736
	word32 a2_737
	word32 a5_738
	word32 a6_739
	word32 a7_740
	memcpy(s5_220, fp + -48<i32>, 0x10<32>, out a1_736, out a2_737, out a3_230, out a4_225, out a5_738, out a6_739, out a7_740)
	word32 a3_244
	word32 a4_245
	word32 a5_246
	word32 a0_741
	word32 a2_742
	word32 s4_743
	atomic_set_bit(s0_206, 1<32>, a3_230, a4_225, mstatus, out a0_741, out a2_742, out a3_244, out a4_245, out a5_246, out s4_743)
	smp_send_pairing_random(ra_218, s0_206, s0_206, a3_244, a4_245, a5_246, s5_220, mstatus, s6, s4, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg44, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8)
l23054BD2:
l23054A94:
	word32 a1_699
	word32 a2_700
	word32 a3_701
	word32 a4_702
	word32 a5_703
	word32 a6_704
	word32 a7_705
	memcpy(fp + -48<i32>, s0_135 + 191<i32>, 8<32>, out a1_699, out a2_700, out a3_701, out a4_702, out a5_703, out a6_704, out a7_705)
	word32 a1_706
	word32 a2_707
	word32 a3_708
	word32 a4_709
	word32 a5_710
	word32 a6_711
	word32 a7_712
	memcpy(fp + -40<i32>, s3_138, 8<32>, out a1_706, out a2_707, out a3_708, out a4_709, out a5_710, out a6_711, out a7_712)
	word32 a0_315
	word32 s0_324
	word32 s1_325
	word32 a1_713
	word32 a4_714
	word32 a5_715
	word32 s2_716
	word32 s3_717
	word32 s4_718
	word32 s5_719
	word32 ra_336 = bt_encrypt_le(ra_134, s5_140, out s0_324, out s1_325, out a0_315, out a1_713, out a4_714, out a5_715, out s2_716, out s3_717, out s4_718, out s5_719)
	branch a0_315 != 0<32> l23054A60
l23054AB2:
	word32 t1_720
	word32 a0_721
	word32 a1_722
	word32 a2_723
	word32 a3_724
	word32 a4_725
	word32 a5_726
	word32 t1_727
	word32 a0_728
	word32 a1_729
	word32 a2_730
	word32 a3_731
	word32 a4_732
	word32 a5_733
	word32 ra_361 = memset(memset(ra_336, fp + -60<i32>, 0<32>, 2<32>, out t1_720, out a0_721, out a1_722, out a2_723, out a3_724, out a4_725, out a5_726), fp + -56<i32>, 0<32>, 8<32>, out t1_727, out a0_728, out a1_729, out a2_730, out a3_731, out a4_732, out a5_733)
	word32 a5_364 = CONVERT(Mem19[s0_324 + 165<i32>:byte], byte, word32)
	word32 a4_365 = CONVERT(Mem19[s0_324 + 172<i32>:byte], byte, word32)
	branch a5_364 >=u a4_365 l23054AD4
l23054AD2:
	a4_365 = a5_364
l23054AD4:
	word32 a0_380
	word32 a3_383
	word32 a4_384
	word32 mstatus_388
	word32 s0_390
	word32 s2_734
	word32 s3_735
	word32 ra_389 = bt_conn_le_start_encryption(ra_361, s1_325, fp + -48<i32>, a4_365 & 255<i32>, a5_364, mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_390, out a0_380, out a3_383, out a4_384, out s2_734, out s3_735, out mstatus_388)
	branch a0_380 == 0<32> l23054AF4
l23054AF4:
	word32 a0_744
	word32 a2_745
	word32 a3_746
	word32 a4_747
	word32 a5_748
	word32 s4_749
	atomic_set_bit(s0_390, 1<32>, a3_383, a4_384, mstatus_388, out a0_744, out a2_745, out a3_746, out a4_747, out a5_748, out s4_749)
l23054AE6:
	word32 s1_750
	word32 a0_751
	word32 a1_752
	word32 a2_753
	word32 a3_754
	word32 a4_755
	word32 a5_756
	word32 a7_757
	word32 s2_758
	word32 s3_759
	word32 s4_760
	word32 s5_761
	word32 s6_762
	word32 s7_763
	word32 s8_764
	word32 s9_765
	word32 s10_766
	word32 s11_767
	word32 t4_768
	printf(ra_389, 0x230BBE8C<32>, a3_383, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_750, out a0_751, out a1_752, out a2_753, out a3_754, out a4_755, out a5_756, out a7_757, out s2_758, out s3_759, out s4_760, out s5_761, out s6_762, out s7_763, out s8_764, out s9_765, out s10_766, out s11_767, out t4_768)
l23054A60:
l23054A62:
	0<32> = dwArg0198
	return
smp_pairing_random_exit:


word32 bt_smp_request_ltk(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArgA8, word32 dwArgB4, word32 dwArgE8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      le_ltk_request
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_request_ltk_entry:
l23054CF0:
	word32 s0_217
	word16 wLoc2A_381 = SLICE(a3, word16, 0)
	word32 s5_659
	word32 s4_658
	word32 s3_657
	word32 s1_105
	word32 s2_220
	word32 a5_200
	word32 a4_109
	word32 a3_127
	word32 ra_168 = smp_chan_get(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_105, out a3_127, out a4_109, out a5_200, out s2_220, out s3_657, out s4_658, out s5_659)
	branch a0 == 0<32> l23054E6E
l23054D10:
	word32 a3_232
	word32 a4_227
	word32 a5_45 = CONVERT(wLoc2A_381, word16, word32)
	word32 s0_107 = a0
	branch a5_45 != 0<32> l23054D76
l23054D18:
	s0_107 = dwArgB4
	branch (a5_45 | a4_109) != 0<32> l23054D76
l23054D20:
	word32 a2_660
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_660) == 0<32> l23054D76
l23054D2E:
	word32 a2_661
	branch atomic_test_bit(a0 + 156<i32>, 1<32>, out a2_661) == 0<32> l23054D76
l23054D76:
	branch Mem23[s1_105 + 156<i32>:int32] != 0<32> l23054DA4
l23054D7C:
	word32 a0_68
	word32 s3_78
	word32 a5_672
	word32 s4_673
	s0_107 = bt_keys_find(32<i32>, CONVERT(Mem23[s1_105 + 8<i32>:byte], byte, word32), s1_105 + 112<i32>, out s1_105, out a0_68, out a3_127, out a4_109, out a5_672, out s2_220, out s3_78, out s4_673)
	Mem82[s1_105 + 156<i32>:word32] = a0_68
	branch a0_68 != 0<32> l23054DA4
l23054D94:
	word32 a0_86
	word32 s4_676
	word32 a5_674
	word32 s3_675
	s0_107 = bt_keys_find(1<32>, CONVERT(Mem82[s1_105 + 8<i32>:byte], byte, word32), s3_78, out s1_105, out a0_86, out a3_127, out a4_109, out a5_674, out s2_220, out s3_675, out s4_676)
	Mem100[s1_105 + 156<i32>:word32] = a0_86
l23054DA4:
	word32 a5_104 = CONVERT(wLoc2A_381, word16, word32)
	word32 a0_106 = Mem103[s1_105 + 156<i32>:int32]
	branch a5_104 != 0<32> l23054DF8
l23054DAE:
	s0_107 = dwArgB4
	branch (a5_104 | a4_109) != 0<32> l23054DF8
l23054DF8:
	branch a0_106 == 0<32> l23054E54
l23054DB6:
	branch a0_106 == 0<32> l23054E54
l23054DB8:
	branch (CONVERT(Mem103[a0_106 + 10<i32>:uint16], uint16, word32) & 32<i32>) == 0<32> l23054DFA
l23054DFA:
	branch (CONVERT(Mem103[a0_106 + 10<i32>:uint16], uint16, word32) & 1<32>) == 0<32> l23054E54
l23054E02:
	word32 a2_688
	word32 a5_689
	word32 a1_687
	branch memcmp(a0_106 + 100<i32>, fp + -40<i32>, 8<32>, out a1_687, out a2_688, out a3_127, out a4_109, out a5_689) != 0<32> l23054E54
l23054E10:
	word32 a5_692
	word32 a2_691
	word32 a1_690
	branch memcmp(Mem103[s1_105 + 156<i32>:int32] + 108<i32>, fp + -42<i32>, 2<32>, out a1_690, out a2_691, out a3_127, out a4_109, out a5_692) != 0<32> l23054E54
l23054E54:
	word32 a2_677
	word32 a0_150 = atomic_test_bit(s0_107 + 156<i32>, 0xE<32>, out a2_677)
	branch a0_150 == 0<32> l23054E68
l23054E60:
	s0_107 = Mem103[a0_150:word32]
	word32 s2_708
	word32 a0_707
	ra_168 = bt_conn_security_changed(ra_168, a0_150, 2<32>, dwLoc08, dwArg08, out s1_105, out a0_707, out a3_127, out a4_109, out s2_708)
l23054E68:
	word32 s5_706
	a3_127 = smp_reset(s0_107, s1_105, s0_107, a3_127, a4_109, mstatus, dwLoc0C, dwLoc08, dwArg08, dwArg68, dwArg78, dwArgA8, dwArgE8, out a4_109, out a5_200, out s5_706)
l23054E6E:
	s0_217 = 0<32>
l23054E24:
	word32 a1_218 = Mem103[s1_105 + 156<i32>:int32]
	word32 s1_224 = CONVERT(Mem103[a1_218 + 8<i32>:byte], byte, word32)
	word32 a5_695
	word32 a2_694
	word32 a1_693
	word32 a7_697
	word32 a6_696
	memcpy(s2_220, a1_218 + 110<i32>, s1_224, out a1_693, out a2_694, out a3_232, out a4_227, out a5_695, out a6_696, out a7_697)
	branch s1_224 >u 0xF<32> l23054E4C
l23054E3E:
	word32 t1_698
	word32 a0_699
	word32 a5_702
	word32 a1_700
	word32 a2_701
	ra_168 = memset(ra_168, s2_220 + s1_224, 0<32>, 0x10<32> - s1_224, out t1_698, out a0_699, out a1_700, out a2_701, out a3_232, out a4_227, out a5_702)
l23054E4C:
l23054DC2:
	word32 s1_257 = CONVERT(Mem103[a0_106 + 8<i32>:byte], byte, word32)
	word32 a2_679
	word32 a1_678
	word32 a5_680
	word32 a6_681
	word32 a7_682
	memcpy(s2_220, a0_106 + 22<i32>, s1_257, out a1_678, out a2_679, out a3_127, out a4_109, out a5_680, out a6_681, out a7_682)
	a5_200 = 0xF<32>
	s0_217 = 1<32>
	branch s1_257 >u 0xF<32> l23054DE8
l23054DDA:
	word32 a0_684
	word32 a1_685
	word32 t1_683
	word32 a2_686
	ra_168 = memset(ra_168, s2_220 + s1_257, 0<32>, 0x10<32> - s1_257, out t1_683, out a0_684, out a1_685, out a2_686, out a3_127, out a4_109, out a5_200)
l23054D38:
	word32 a5_289 = CONVERT(Mem23[dwArgB4 + 165<i32>:byte], byte, word32)
	word32 s1_290 = CONVERT(Mem23[dwArgB4 + 172<i32>:byte], byte, word32)
	branch a5_289 >=u s1_290 l23054D46
l23054D44:
	s1_290 = a5_289
l23054D46:
	word32 s1_293 = s1_290 & 255<i32>
	word32 a5_664
	word32 a7_666
	word32 a6_665
	word32 a1_662
	word32 a2_663
	memcpy(s2_220, dwArgB4 + 223<i32>, s1_293, out a1_662, out a2_663, out a3_232, out a4_227, out a5_664, out a6_665, out a7_666)
	branch s1_293 >u 0xF<32> l23054D6A
l23054D5C:
	word32 a5_671
	word32 a1_669
	word32 a2_670
	word32 t1_667
	word32 a0_668
	ra_168 = memset(ra_168, s2_220 + s1_293, 0<32>, 0x10<32> - s1_293, out t1_667, out a0_668, out a1_669, out a2_670, out a3_232, out a4_227, out a5_671)
l23054D6A:
l23054D6E:
	word32 a0_703
	word32 s4_705
	word32 a2_704
	atomic_set_bit(s0_107, 1<32>, a3_232, a4_227, mstatus, out a0_703, out a2_704, out a3_127, out a4_109, out a5_200, out s4_705)
	s0_217 = 1<32>
l23054DE8:
	0<32> = dwArg0128
	a0Out = s0_217
	a3Out = a3_127
	a4Out = a4_109
	a5Out = a5_200
	return ra_168
bt_smp_request_ltk_exit:


word32 bt_smp_sign_verify(word32 ra, word32 a0, word32 a1, word32 s2, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg9C, word32 dwArg0108, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_signed_write_cmd
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +009C:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 ra s0 s11 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_sign_verify_entry:
l23054E72:
	word32 s6_106
	word32 s3_166
	word32 s2_165
	word32 s11_105
	word32 s0_110
	word32 ra_161
	word32 a4_118
	word32 a0_115
	word32 a3_117
	word32 a1_344
	word32 a2_345
	word32 a3_346
	word32 a4_347
	word32 a5_348
	word32 a6_349
	word32 a7_350
	memcpy(fp + 0xFFFFFFE4<32>, Mem11[a1 + 8<i32>:word32] + (CONVERT(Mem11[a1 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>), 0xC<32>, out a1_344, out a2_345, out a3_346, out a4_347, out a5_348, out a6_349, out a7_350)
	word32 a0_39
	word32 a5_44
	word32 s2_48
	word32 s1_351
	word32 a3_352
	word32 a4_353
	word32 s3_354
	word32 s4_355
	bt_keys_find(0x10<32>, CONVERT(Mem11[a0 + 8<i32>:byte], byte, word32), a0 + 112<i32>, out s1_351, out a0_39, out a3_352, out a4_353, out a5_44, out s2_48, out s3_354, out s4_355)
	branch a0_39 != 0<32> l23054EC6
l23054EC6:
	word32 a0_53 = Mem11[a5_44 + 96<i32>:word32]
	word32 s0_55 = Mem11[a0_53 + 8<i32>:word32]
	word32 a1_65
	word32 a2_356
	word32 a3_357
	word32 a4_358
	word32 a5_359
	word32 a6_360
	word32 a7_361
	memcpy(a0_53 + (CONVERT(Mem56[s0_55 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>), fp + 0xFFFFFFE0<32>, 4<32>, out a1_65, out a2_356, out a3_357, out a4_358, out a5_359, out a6_360, out a7_361)
	word32 a1_81
	word32 s0_89
	word32 a0_103
	word32 a3_362
	word32 a5_363
	ra_161 = smp_sign_buf(ra, a0_53 + 80<i32>, a1_65, CONVERT(SLICE(CONVERT(Mem56[s0_55 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>, word16, 0), word16, word32), dwArg00, dwArg04, dwArg28, dwArg4C, out s0_89, out a0_103, out a1_81, out a3_362, out a5_363, out s2_165, out s3_166, out s6_106, out s11_105)
	branch a0_103 == 0<32> l23054F0C
l23054F0C:
	s0_110 = Mem56[a1_81 + 8<i32>:word32]
	word32 a5_116
	word32 a1_377
	word32 a2_378
	a0_115 = memcmp(fp + 0xFFFFFFE4<32>, a1_81 + (CONVERT(Mem56[s0_89 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>), 0xC<32>, out a1_377, out a2_378, out a3_117, out a4_118, out a5_116)
	branch a0_115 == 0<32> l23054F3A
l23054F3A:
	Mem123[a5_116 + 0x61<32>:word32] = Mem56[a5_116 + 96<i32>:word32]
l23054F20:
	word32 a3_128
	word32 s1_392
	word32 a0_393
	word32 a1_394
	word32 a2_395
	word32 a5_396
	word32 a7_397
	word32 s4_398
	word32 s5_399
	word32 s7_400
	word32 s8_401
	word32 s9_402
	word32 s10_403
	word32 t4_404
	ra_161 = printf(bt_addr_le_str_real(ra_161, s2_165, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_110, out a3_128), 0x230BBCB0<32>, a3_128, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_392, out a0_393, out a1_394, out a2_395, out a3_117, out a4_118, out a5_396, out a7_397, out s2_165, out s3_166, out s4_398, out s5_399, out s6_106, out s7_400, out s8_401, out s9_402, out s10_403, out s11_105, out t4_404)
	a0_115 = -77<i32>
l23054EF4:
	word32 a3_180
	word32 s1_379
	word32 a0_380
	word32 a1_381
	word32 a2_382
	word32 a5_383
	word32 a7_384
	word32 s4_385
	word32 s5_386
	word32 s7_387
	word32 s8_388
	word32 s9_389
	word32 s10_390
	word32 t4_391
	ra_161 = printf(bt_addr_le_str_real(ra_161, s2_165, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_110, out a3_180), 0x230BBC8C<32>, a3_180, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_379, out a0_380, out a1_381, out a2_382, out a3_117, out a4_118, out a5_383, out a7_384, out s2_165, out s3_166, out s4_385, out s5_386, out s6_106, out s7_387, out s8_388, out s9_389, out s10_390, out s11_105, out t4_391)
	a0_115 = 0xFFFFFFFB<32>
l23054EA4:
	word32 a3_232
	word32 s1_364
	word32 a0_365
	word32 a1_366
	word32 a2_367
	word32 a5_368
	word32 a7_369
	word32 s4_370
	word32 s5_371
	word32 s7_372
	word32 s8_373
	word32 s9_374
	word32 s10_375
	word32 t4_376
	ra_161 = printf(bt_addr_le_str_real(ra, s2_48, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_110, out a3_232), 0x230BBC68<32>, a3_232, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_364, out a0_365, out a1_366, out a2_367, out a3_117, out a4_118, out a5_368, out a7_369, out s2_165, out s3_166, out s4_370, out s5_371, out s6_106, out s7_372, out s8_373, out s9_374, out s10_375, out s11_105, out t4_376)
	a0_115 = 0xFFFFFFFE<32>
l23054EBA:
	s0Out = s0_110
	a0Out = a0_115
	a3Out = a3_117
	a4Out = a4_118
	s2Out = s2_165
	s3Out = s3_166
	s6Out = s6_106
	s11Out = s11_105
	return ra_161
bt_smp_sign_verify_exit:


word32 bt_smp_sign(word32 ra, word32 a0, word32 s2, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg9C, word32 dwArg0108, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_send
// MayUse:  a0:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +009C:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a5 ra s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_sign_entry:
l23054F42:
	word32 s2_138
	word32 s0_107
	word32 ra_134
	word32 a5_127
	word32 a0_148
	word32 a3_131
	word32 a0_19
	word32 a4_23
	word32 s1_27
	word32 s2_28
	word32 a3_265
	word32 a5_266
	word32 s3_267
	word32 s4_268
	bt_keys_find(8<32>, CONVERT(Mem11[a0 + 8<i32>:byte], byte, word32), a0 + 112<i32>, out s1_27, out a0_19, out a3_265, out a4_23, out a5_266, out s2_28, out s3_267, out s4_268)
	branch a0_19 != 0<32> l23054F82
l23054F82:
	word32 a5_38
	word32 a1_269
	word32 a0_36 = net_buf_simple_add(s1_27 + 8<i32>, 0xC<32>, a4_23, out a1_269, out a5_38)
	word32 s1_40 = Mem11[a0_36 + 8<i32>:word32]
	word32 s0_39 = Mem11[a5_38 + 76<i32>:word32]
	word32 a1_50
	word32 a2_270
	word32 a3_271
	word32 a4_272
	word32 a5_273
	word32 a6_274
	word32 a7_275
	memcpy(a0_36 + (CONVERT(Mem42[s1_40 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>), fp + 0xFFFFFFEC<32>, 4<32>, out a1_50, out a2_270, out a3_271, out a4_272, out a5_273, out a6_274, out a7_275)
	word32 a5_70
	word32 s0_276
	word32 a1_277
	word32 s3_278
	word32 s6_279
	word32 s11_280
	ra_134 = smp_sign_buf(ra, s0_39 + 60<i32>, a1_50, CONVERT(SLICE(CONVERT(Mem42[s1_40 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFF4<32>, word16, 0), word16, word32), dwArg00, dwArg04, dwArg28, dwArg4C, out s0_276, out a0_148, out a1_277, out a3_131, out a5_70, out s2_138, out s3_278, out s6_279, out s11_280)
	branch a0_148 == 0<32> l23054FD2
l23054FD2:
	s0_107 = Mem42[a5_70 + 76<i32>:word32]
	Mem96[a5_70 + 0x4D<32>:word32] = s0_107
	a5_127 = a5_70 + 1<32>
l23054FBA:
	word32 a3_101
	word32 s1_297
	word32 a0_298
	word32 a1_299
	word32 a2_300
	word32 a4_301
	word32 a7_302
	word32 s3_303
	word32 s4_304
	word32 s5_305
	word32 s6_306
	word32 s7_307
	word32 s8_308
	word32 s9_309
	word32 s10_310
	word32 s11_311
	word32 t4_312
	ra_134 = printf(bt_addr_le_str_real(ra_134, s2_138, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_107, out a3_101), 0x230BBC8C<32>, a3_101, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_297, out a0_298, out a1_299, out a2_300, out a3_131, out a4_301, out a5_127, out a7_302, out s2_138, out s3_303, out s4_304, out s5_305, out s6_306, out s7_307, out s8_308, out s9_309, out s10_310, out s11_311, out t4_312)
	a0_148 = 0xFFFFFFFB<32>
l23054F60:
	word32 a3_153
	word32 s1_281
	word32 a0_282
	word32 a1_283
	word32 a2_284
	word32 a4_285
	word32 a7_286
	word32 s3_287
	word32 s4_288
	word32 s5_289
	word32 s6_290
	word32 s7_291
	word32 s8_292
	word32 s9_293
	word32 s10_294
	word32 s11_295
	word32 t4_296
	ra_134 = printf(bt_addr_le_str_real(ra, s2_28, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_107, out a3_153), 0x230BBC44<32>, a3_153, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_281, out a0_282, out a1_283, out a2_284, out a3_131, out a4_285, out a5_127, out a7_286, out s2_138, out s3_287, out s4_288, out s5_289, out s6_290, out s7_291, out s8_292, out s9_293, out s10_294, out s11_295, out t4_296)
	a0_148 = 0xFFFFFFFE<32>
l23054F76:
	s0Out = s0_107
	a0Out = a0_148
	a3Out = a3_131
	a5Out = a5_127
	s2Out = s2_138
	return ra_134
bt_smp_sign_exit:


void bt_smp_auth_passkey_entry(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_auth_passkey
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_auth_passkey_entry_entry:
l23054FDA:
	word32 a3_21
	word32 a4_22
	word32 s3_29
	word32 s5_31
	word32 s4_539
	word32 s2_538
	word32 a5_537
	word32 s1_536
	word32 ra_24 = smp_chan_get(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_536, out a3_21, out a4_22, out a5_537, out s2_538, out s3_29, out s4_539, out s5_31)
	branch a0 != 0<32> l23055000
l23055000:
	word32 a0_44
	word32 a3_47
	word32 a5_49
	word32 s4_542
	word32 a4_541
	word32 a1_540
	atomic_test_and_clear_bit(9<32>, a3_21, a4_22, mstatus, out a0_44, out a1_540, out a3_47, out a4_541, out a5_49, out s4_542)
	branch a0_44 == 0<32> l23054FEE
l23055010:
	word32 a2_543
	branch atomic_test_bit(a0 + 156<i32>, 5<32>, out a2_543) != 0<32> l2305505C
l2305505C:
	word32 a3_103
	word32 a4_104
	word32 mstatus_108
	word32 ra_109
	word32 s1_110
	word32 a1_128
	word32 s0_60 = Mem13[a5_49:word32]
	Mem61[s0_60 + 368<i32>:word32] = s3_29
	branch CONVERT(Mem61[a5_49 + 3<i32>:byte], byte, word32) != 0<32> l23055088
l23055088:
	word32 a2_564
	branch atomic_test_bit(a0 + 156<i32>, 0<32>, out a2_564) == 0<32> l23054FF0
l23055094:
	word32 a0_70
	ra_109 = smp_send_pairing_confirm(ra_24, s0_60, s0_60, a3_47, a0 + 156<i32>, s5_31, mstatus, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg54, dwArg58, ra, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s1_110, out a0_70, out a3_103, out a4_104, out mstatus_108)
	a1_128 = 4<32>
	branch a0_70 == 0<32> l2305507E
l2305509E:
l23055068:
	word32 a0_100
	ra_109 = smp_send_pairing_confirm(ra_24, s0_60, s0_60, a3_47, a0 + 156<i32>, s5_31, mstatus, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg54, dwArg58, ra, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s1_110, out a0_100, out a3_103, out a4_104, out mstatus_108)
	branch a0_100 == 0<32> l2305507C
l2305507C:
	a1_128 = 3<32>
l2305507E:
	word32 a2_573
	word32 a0_572
	word32 a4_575
	word32 a3_574
	word32 s4_577
	word32 a5_576
	atomic_set_bit(s0_60, a1_128, a3_103, a4_104, mstatus_108, out a0_572, out a2_573, out a3_574, out a4_575, out a5_576, out s4_577)
l23055070:
	word32 s0_565
	word32 s1_566
	word32 a3_567
	word32 a4_568
	word32 s5_570
	word32 mstatus_571
	word32 s3_569
	smp_error(ra_109, s1_110, s0_60, 1<32>, a3_103, a4_104, mstatus_108, dwLoc2C, dwLoc28, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg24, dwArg2C, dwArg34, dwArg48, dwArg54, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_565, out s1_566, out a3_567, out a4_568, out s3_569, out s5_570, out mstatus_571)
l23055078:
l2305501C:
	word32 a4_189
	word32 a3_194
	word32 a7_548
	word32 a6_547
	word32 a5_546
	word32 a2_545
	word32 a1_544
	memcpy(a0 + 223<i32>, fp + -36<i32>, 4<32>, out a1_544, out a2_545, out a3_194, out a4_189, out a5_546, out a6_547, out a7_548)
	word32 a0_204
	word32 a3_207
	word32 a4_208
	word32 a5_209
	word32 s4_550
	word32 a1_549
	atomic_test_and_clear_bit(0<32>, a3_194, a4_189, mstatus, out a0_204, out a1_549, out a3_207, out a4_208, out a5_209, out s4_550)
	branch a0_204 == 0<32> l23054FF0
l23055034:
	word32 a0_215
	word32 a3_218
	word32 a4_219
	word32 a5_220
	word32 mstatus_224
	word32 s1_226
	word32 ra_225 = legacy_pairing_confirm(ra_24, a0, a3_207, a4_208, a5_209, a0 + 156<i32>, s5_31, mstatus, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg48, dwArg4C, s3_29, dwArg58, ra, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s1_226, out a0_215, out a3_218, out a4_219, out a5_220, out mstatus_224)
	branch a0_215 == 0<32> l23055046
l23055046:
	word32 s0_245 = Mem188[a5_220:word32]
	word32 a1_247 = 3<32>
	branch CONVERT(Mem188[a5_220 + 3<i32>:byte], byte, word32) == 0<32> l23055056
l23055054:
	a1_247 = 4<32>
l23055056:
	word32 a2_559
	word32 a3_560
	word32 a4_561
	word32 a5_562
	word32 s4_563
	word32 a0_558
	atomic_set_bit(s0_245, a1_247, a3_218, a4_219, mstatus_224, out a0_558, out a2_559, out a3_560, out a4_561, out a5_562, out s4_563)
l2305503C:
	word32 mstatus_557
	word32 s5_556
	word32 s3_555
	word32 a4_554
	word32 a3_553
	word32 s1_552
	word32 s0_551
	smp_error(ra_225, s1_226, a0, 1<32>, a3_218, a4_219, mstatus_224, dwLoc2C, dwLoc28, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg24, dwArg2C, dwArg34, dwArg48, s3_29, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_551, out s1_552, out a3_553, out a4_554, out s3_555, out s5_556, out mstatus_557)
l23054FEE:
l23054FF0:
	0<32> = dwArg0128
	return
bt_smp_auth_passkey_entry_exit:


void bt_smp_auth_passkey_confirm(word32 ra, word32 s0, word32 a0, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE0, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_auth_passkey_confirm
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_smp_auth_passkey_confirm_entry:
l230550A0:
	word32 a3_17
	word32 a4_18
	word32 s3_25
	word32 s5_336
	word32 s4_335
	word32 s2_334
	word32 a5_333
	word32 s1_332
	word32 ra_20 = smp_chan_get(ra, a0, a3, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_332, out a3_17, out a4_18, out a5_333, out s2_334, out s3_25, out s4_335, out s5_336)
	branch a0 != 0<32> l230550C0
l230550C0:
	word32 a0_40
	word32 a3_43
	word32 a4_44
	word32 a5_45
	word32 s4_338
	word32 a1_337
	word32 s1_46 = atomic_test_and_clear_bit(9<32>, a3_17, a4_18, mstatus, out a0_40, out a1_337, out a3_43, out a4_44, out a5_45, out s4_338)
	branch a0_40 == 0<32> l230550B0
l230550D0:
	word32 a2_339
	branch atomic_test_bit(s1_46, 7<32>, out a2_339) == 0<32> l230550E6
l230550E6:
	word32 a2_346
	word32 a0_57 = atomic_test_bit(s1_46, 0xF<32>, out a2_346)
	branch a0_57 != 0<32> l230550DE
l230550F8:
	word32 a2_347
	branch atomic_test_bit(s1_46, 8<32>, out a2_347) == 0<32> l230550B2
l230550FE:
	word32 a3_108
	word32 a4_107
	word32 ra_105
	word32 s1_104
	word32 s0_102
	word32 a0_100
	word32 s0_66 = Mem11[a5_45:word32]
	branch CONVERT(Mem11[a5_45 + 3<i32>:byte], byte, word32) != 0<32> l23055118
l23055118:
	word32 s2_356
	ra_105 = compute_and_check_and_send_slave_dhcheck(ra_20, s1_46, s0_66, a0_57, s3_25, dwArg0118, out s0_102, out s1_104, out a0_100, out a3_108, out a4_107, out s2_356)
l23055108:
	word32 s2_348
	ra_105 = compute_and_send_master_dhcheck(ra_20, s1_46, s0_66, a0_57, s3_25, dwArgC4, dwArgE0, dwArgE4, dwArg0108, dwArg0128, out s0_102, out s1_104, out a0_100, out a3_108, out a4_107, out s2_348)
l2305510C:
	branch a0_100 == 0<32> l230550B2
l23055110:
	word32 mstatus_355
	word32 s5_354
	word32 s3_353
	word32 a4_352
	word32 a3_351
	word32 s1_350
	word32 s0_349
	smp_error(ra_105, s1_104, s0_102, a0_100, a3_108, a4_107, mstatus, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg38, dwArg44, dwArg4C, dwArg54, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_349, out s1_350, out a3_351, out a4_352, out s3_353, out s5_354, out mstatus_355)
l230550DA:
l230550DE:
	word32 s4_345
	word32 a5_344
	word32 a4_343
	word32 a3_342
	word32 a2_341
	word32 a0_340
	atomic_set_bit(a0, 8<32>, a3_43, a4_44, mstatus, out a0_340, out a2_341, out a3_342, out a4_343, out a5_344, out s4_345)
l230550B0:
l230550B2:
	0<32> = dwArg38
	return
bt_smp_auth_passkey_confirm_exit:


void bt_smp_auth_cancel(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_auth_cancel
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bt_smp_auth_cancel_entry:
l2305511E:
	word32 a3_13
	word32 a4_14
	word32 s5_172
	word32 s3_170
	word32 s4_171
	word32 a5_168
	word32 s2_169
	word32 s1_167
	word32 ra_16 = smp_chan_get(ra, a0, a3, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_167, out a3_13, out a4_14, out a5_168, out s2_169, out s3_170, out s4_171, out s5_172)
	branch a0 != 0<32> l23055134
l23055134:
	word32 a0_35
	word32 a3_38
	word32 s4_176
	word32 a4_174
	word32 a5_175
	word32 a1_173
	atomic_test_and_clear_bit(9<32>, a3_13, a4_14, mstatus, out a0_35, out a1_173, out a3_38, out a4_174, out a5_175, out s4_176)
	branch a0_35 == 0<32> l2305512A
l23055142:
	word32 a5_45 = CONVERT(Mem7[a0 + 160<i32>:byte], byte, word32)
	branch a5_45 >u 5<32> l23055176
l23055176:
l2305514C:
	word32 a5_52 = Mem7[(a5_45 << 2<i32>) + 0x230BBAA4<32>:word32]
	call a5_52 (retsize: 0;)
		uses: a0:a0_35,a3:a3_38,a4:0x230BBAA4<32>,a5:a5_52,mstatus:mstatus,ra:ra_16,s0:a0,Stack +0018:dwArg08,Stack +0020:dwArg10,Stack +0060:dwArg50,Stack +0064:dwArg54,Stack +0088:dwArg78,Stack +00AC:dwArg9C
	return
l2305512A:
l2305512C:
	return
bt_smp_auth_cancel_exit:


void bt_smp_auth_pairing_confirm(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_auth_pairing_confirm
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_smp_auth_pairing_confirm_entry:
l2305517A:
	word32 a3_18
	word32 a4_19
	word32 s2_25
	word32 s3_26
	word32 s5_28
	word32 s4_400
	word32 a5_399
	word32 s1_398
	word32 ra_21 = smp_chan_get(ra, a0, a3, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_398, out a3_18, out a4_19, out a5_399, out s2_25, out s3_26, out s4_400, out s5_28)
	branch a0 != 0<32> l2305519C
l2305519C:
	word32 a0_41
	word32 a3_44
	word32 a4_45
	word32 s4_403
	word32 a5_402
	word32 a1_401
	word32 s1_47 = atomic_test_and_clear_bit(9<32>, a3_18, a4_19, mstatus, out a0_41, out a1_401, out a3_44, out a4_45, out a5_402, out s4_403)
	branch a0_41 == 0<32> l2305518C
l230551AC:
	branch CONVERT(Mem11[s2_25 + 3<i32>:byte], byte, word32) != 0<32> l230551F8
l230551F8:
	word32 a2_432
	branch atomic_test_bit(s1_47, 5<32>, out a2_432) != 0<32> l23055212
l23055212:
	word32 a3_63
	word32 a4_64
	word32 a5_65
	word32 a0_441
	word32 a2_442
	word32 s4_443
	atomic_set_bit(a0, 0xC<32>, a3_44, a4_45, mstatus, out a0_441, out a2_442, out a3_63, out a4_64, out a5_65, out s4_443)
	word32 a0_71
	word32 a3_444
	word32 a4_445
	word32 s2_446
	word32 mstatus_447
	send_pairing_rsp(ra_21, a0, a0, a3_63, a4_64, a5_65, s5_28, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg6C, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out a0_71, out a3_444, out a4_445, out s2_446, out mstatus_447)
	branch a0_71 == 0<32> l2305518E
l23055224:
l23055202:
	word32 a3_106
	word32 a4_107
	word32 a5_108
	word32 a0_433
	word32 a2_434
	word32 s4_435
	atomic_set_bit(a0, 3<32>, a3_44, a4_45, mstatus, out a0_433, out a2_434, out a3_106, out a4_107, out a5_108, out s4_435)
	word32 a0_436
	word32 a3_437
	word32 a4_438
	word32 s2_439
	word32 mstatus_440
	send_pairing_rsp(ra_21, a0, a0, a3_106, a4_107, a5_108, s5_28, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg6C, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out a0_436, out a3_437, out a4_438, out s2_439, out mstatus_440)
l230551B6:
	word32 a2_404
	branch atomic_test_bit(s1_47, 5<32>, out a2_404) != 0<32> l230551D0
l230551D0:
	branch Mem11[0x4200F49C<32>:int32] != 0<32> l230551E6
l230551E6:
	word32 a3_152
	word32 a4_153
	word32 a5_154
	word32 a0_420
	word32 a2_421
	word32 s4_422
	word32 s0_423
	word32 s1_424
	word32 a0_425
	word32 a3_426
	word32 a4_427
	word32 s2_428
	word32 s3_429
	word32 s5_430
	word32 mstatus_431
	sc_send_public_key(ra_21, atomic_set_bit(a0, 0xC<32>, a3_44, a4_45, mstatus, out a0_420, out a2_421, out a3_152, out a4_153, out a5_154, out s4_422), a0, a3_152, a4_153, a5_154, s2_25, s3_26, s5_28, mstatus, s2, s0, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_423, out s1_424, out a0_425, out a3_426, out a4_427, out s2_428, out s3_429, out s5_430, out mstatus_431)
l230551DA:
	word32 a3_416
	word32 a2_415
	word32 a0_414
	word32 a4_417
	word32 a5_418
	word32 s4_419
	atomic_set_bit(a0, 6<32>, a3_44, a4_45, mstatus, out a0_414, out a2_415, out a3_416, out a4_417, out a5_418, out s4_419)
l230551BC:
	word32 a3_207
	word32 a4_208
	word32 a5_209
	word32 s4_407
	word32 a2_406
	word32 a0_405
	atomic_set_bit(a0, 3<32>, a3_44, a4_45, mstatus, out a0_405, out a2_406, out a3_207, out a4_208, out a5_209, out s4_407)
	word32 mstatus_413
	word32 a5_412
	word32 a4_411
	word32 a3_410
	word32 a0_409
	word32 s1_408
	legacy_send_pairing_confirm(ra_21, a0, a0, a3_207, a4_208, a5_209, s2_25, s5_28, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg6C, ra, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0158, out s1_408, out a0_409, out a3_410, out a4_411, out a5_412, out mstatus_413)
l230551CC:
l2305518C:
l2305518E:
	0<32> = dwArg38
	return
bt_smp_auth_pairing_confirm_exit:


word32 bt_smp_start_security(word32 ra, word32 s0, word32 a0, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_set_security
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_start_security_entry:
l23055228:
	word32 a4_162
	word32 s1_101
	word32 a3_107
	word32 a4_108
	word32 s0_362
	word32 a5_17 = CONVERT(Mem15[a0 + 3<i32>:byte], byte, word32)
	word32 s0_18 = a0
	branch a5_17 == 0<32> l23055248
l23055248:
	word32 s1_27
	word32 s4_32
	word32 a5_823
	word32 s3_824
	word32 s5_825
	ra = smp_chan_get(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_27, out a3, out a4_162, out a5_823, out s2, out s3_824, out s4_32, out s5_825)
	s3 = a0
	branch a0 != 0<32> l23055266
l23055266:
	word32 a2_830
	branch atomic_test_bit(a0 + 4<i32>, 0xB<32>, out a2_830) == 0<32> l23055286
l23055286:
	word32 a5_50
	branch smp_keys_check.part.5(a0, out a3, out a4_162, out a5_50) == 0<32> l23055272
l2305528E:
	s2 = a0 + 156<i32>
	word32 a2_842
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_842) == 0<32> l230552A0
l230552A0:
	word32 a2_843
	branch atomic_test_bit(a0 + 156<i32>, 1<32>, out a2_843) != 0<32> l2305529C
l230552AA:
	word32 a1_65 = Mem15[a0 + 156<i32>:int32]
	word32 a0_72
	ra = bt_conn_le_start_encryption(ra, s1_27, a1_65 + 22<i32>, CONVERT(Mem15[a1_65 + 8<i32>:byte], byte, word32), a5_50, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg44, dwArg48, dwArg4C, dwArg58, s3, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_362, out a0_72, out a3, out a4_162, out s2, out s3, out mstatus)
	s1_101 = a0_72
	branch a0_72 != 0<32> l23055254
l230552C6:
	word32 a0_844
	word32 a2_845
	word32 a5_846
	word32 s4_847
	atomic_set_bit(s0_362, 0xB<32>, a3, a4_162, mstatus, out a0_844, out a2_845, out a3_107, out a4_108, out a5_846, out s4_847)
l23055272:
	0<32> = dwArg0128
l23055282_thunk_smp_send_pairing_req:
	word32 a0_133
	word32 a3_136
	word32 a4_137
	word32 s0_142
	word32 s1_143
	word32 s2_146
	word32 s3_147
	word32 mstatus_158
	word32 ra_141 = smp_send_pairing_req(ra, dwArgE4, s1_27, a0, a3, s2, a0, s4_32, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg58, s3, dwArg74, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_142, out s1_143, out a0_133, out a3_136, out a4_137, out s2_146, out s3_147, out mstatus_158)
	s0Out = s0_142
	s1Out = s1_143
	a0Out = a0_133
	a3Out = a3_136
	a4Out = a4_137
	s2Out = s2_146
	s3Out = s3_147
	mstatusOut = mstatus_158
	return ra_141
l2305523E:
	a4_162 = 1<32>
	branch a5_17 == 1<32> l230552DA
l230552DA:
	word32 s4_175
	word32 s1_826
	word32 a5_827
	word32 s2_828
	word32 s5_829
	ra = smp_chan_get(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_826, out a3, out a4_162, out a5_827, out s2_828, out s3, out s4_175, out s5_829)
	s2 = a0
	branch a0 == 0<32> l23055250
l23055250:
	s1_101 = -57<i32>
l230552E2:
	s3 = a0 + 156<i32>
	s1_101 = 0xFFFFFFFB<32>
	word32 a2_831
	branch atomic_test_bit(a0 + 156<i32>, 4<32>, out a2_831) != 0<32> l23055254
l230552F2:
	word32 a2_832
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_832) != 0<32> l2305529C
l230552FC:
	word32 a2_833
	branch atomic_test_bit(a0 + 156<i32>, 1<32>, out a2_833) != 0<32> l2305529C
l2305529C:
	s1_101 = 0xFFFFFFF0<32>
l23055306:
	word32 a0_205
	sec_level_reachable.isra.1(CONVERT(Mem15[a0 + 10<i32>:byte], byte, word32), a3, a4_162, out a0_205, out a3, out a4_162)
	branch a0_205 == 0<32> l2305533A
l2305533A:
	word32 a2_834
	branch atomic_test_bit(a0 + 4<i32>, 0xB<32>, out a2_834) != 0<32> l23055244
l23055348:
	word32 a5_872
	branch smp_keys_check.part.5(a0, out a3, out a4_162, out a5_872) != 0<32> l23055310
l23055350:
l23055310:
	branch Mem15[a0 + 156<i32>:int32] != 0<32> l2305532A
l23055316:
	word32 a0_236
	word32 s4_836
	word32 s5_837
	ra = bt_keys_get_addr(ra, a0, CONVERT(Mem15[a0 + 8<i32>:byte], byte, word32), a0 + 112<i32>, a0, a0 + 156<i32>, s4_175, mstatus, dwLoc30, dwLoc2C, dwLoc28, s4, s2, s0, dwLoc18, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s0_18, out s1_101, out a0_236, out a3, out a4_162, out s2, out s3, out s4_836, out s5_837, out mstatus)
	Mem265[s0_18 + 156<i32>:word32] = a0_236
	branch a0_236 == 0<32> l23055254
l2305532A:
	word32 a0_272
	word32 a5_277
	word32 s5_292
	word32 s1_835
	ra = smp_init(ra, s2, mstatus, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgA8, dwArgE8, out s1_835, out a0_272, out a3, out a4_162, out a5_277, out s2, out s3, out s5_292)
	branch a0_272 == 0<32> l23055352
l23055352:
	word32 a0_300
	word32 s1_838
	word32 a2_839
	word32 a5_840
	word32 s5_841
	ra = smp_create_pdu.isra.7(ra, s2, a3, a4_162, a5_277, s5_292, mstatus, dwArg08, dwArg10, dwArg14, dwArg38, dwArg54, s3, dwArg68, dwArgA8, dwArgC8, out s1_838, out a0_300, out a2_839, out a3, out a4_162, out a5_840, out s2, out s3, out s5_841, out mstatus)
	branch a0_300 == 0<32> l23055334
l2305535E:
	word32 a1_848
	word32 a5_849
	word32 a0_332 = net_buf_simple_add(a0_300 + 8<32>, 1<32>, a4_162, out a1_848, out a5_849)
	word32 a0_339
	word32 a5_343
	word32 a3_850
	word32 a4_851
	word32 s1_344 = get_auth.isra.0(s0_18 + 10<i32>, 9<32>, a3, a4_162, out a0_339, out a3_850, out a4_851, out a5_343)
	Mem347[a0_332:byte] = SLICE(a0_339, byte, 0)
	word32 a3_355
	word32 a4_356
	word32 s1_852
	word32 a0_853
	word32 a1_854
	word32 a5_855
	word32 s4_856
	word32 s5_857
	word32 s6_858
	word32 s7_859
	word32 s8_860
	word32 s9_861
	word32 s10_862
	word32 s11_863
	ra = bt_l2cap_send_cb(ra, s1_344, s0_18, 6<32>, a0_300, 0<32>, a5_343, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg44, dwArg4C, dwArg58, s3, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_362, out s1_852, out a0_853, out a1_854, out a3_355, out a4_356, out a5_855, out s2, out s3, out s4_856, out s5_857, out s6_858, out s7_859, out s8_860, out s9_861, out s10_862, out s11_863, out mstatus)
	word32 a0_864
	word32 a2_865
	word32 a5_866
	word32 s4_867
	atomic_set_bit(s0_362, 0xE<32>, a3_355, a4_356, mstatus, out a0_864, out a2_865, out a3_107, out a4_108, out a5_866, out s4_867)
l230552D4:
	word32 a0_868
	word32 a2_869
	word32 a5_870
	word32 s4_871
	s1_101 = atomic_set_bit(s0_362, 1<32>, a3_107, a4_108, mstatus, out a0_868, out a2_869, out a3, out a4_162, out a5_870, out s4_871)
l23055334:
	s1_101 = -55<i32>
l23055244:
	s1_101 = 0xFFFFFFEA<32>
l23055254:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_101
	a0Out = s1_101
	a3Out = a3
	a4Out = a4_162
	s2Out = s2
	s3Out = s3
	mstatusOut = mstatus
	return ra
bt_smp_start_security_exit:


word32 bt_smp_update_keys(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 s2, word32 s3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & a3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_encrypt_key_refresh_complete
//      hci_encrypt_change
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a3 mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_update_keys_entry:
l23055396:
	word32 s0_15 = a0
	word32 s3_28
	word32 s4_29
	word32 a4_552
	word32 a5_553
	word32 s5_555
	word32 s2_554
	word32 s1_551
	word32 a3_128
	word32 ra_23 = smp_chan_get(ra, a0, a3, dwLoc08, dwArg40, dwArg44, s1, dwArg8C, out s1_551, out a3_128, out a4_552, out a5_553, out s2_554, out s3_28, out s4_29, out s5_555)
	branch a0 == 0<32> l230554C6
l230553AC:
	word32 a2_556
	branch atomic_test_bit(a0 + 156<i32>, 3<32>, out a2_556) == 0<32> l230554C6
l230553BE:
	word32 a0_45 = Mem13[a0 + 156<i32>:int32]
	branch a0_45 == 0<32> l230553C6
l230553C4:
	word32 a3_561
	word32 a4_562
	ra_23 = bt_keys_clear(ra_23, a0, a0, a0_45, a3_128, a0 + 156<i32>, s3_28, s4_29, mstatus, dwLoc20, dwLoc1C, s2, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg58, s1, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out a3_561, out a4_562)
l230553C6:
	word32 a0_66
	word32 s1_75
	word32 s2_76
	word32 s3_77
	word32 s5_560
	word32 a3_557
	word32 s4_559
	word32 a4_558
	ra_23 = bt_keys_get_addr(ra_23, a0, CONVERT(Mem13[a0 + 8<i32>:byte], byte, word32), a0 + 112<i32>, a0 + 156<i32>, a0 + 112<i32>, s4_29, mstatus, dwLoc20, dwLoc1C, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s0_15, out s1_75, out a0_66, out a3_557, out a4_558, out s2_76, out s3_77, out s4_559, out s5_560, out mstatus)
	Mem95[s0_15 + 156<i32>:word32] = a0_66
	branch a0_66 != 0<32> l23055400
l23055400:
	word32 a2_563
	branch atomic_test_bit(s2_76, 0xD<32>, out a2_563) == 0<32> l2305541A
l2305540A:
	word32 a4_101 = Mem95[s0_15 + 156<i32>:int32]
	Mem104[a4_101 + 9<i32>:byte] = SLICE(CONVERT(Mem95[a4_101 + 9<i32>:byte], byte, word32) | 2<i32>, byte, 0)
l2305541A:
	word32 a5_116
	word32 a3_107 = Mem106[s0_15 + 156<i32>:int32]
	word32 a2_109 = CONVERT(Mem106[s1_75 + 160<i32>:byte], byte, word32)
	word32 a5_111 = CONVERT(Mem106[a3_107 + 9<i32>:byte], byte, word32)
	branch a2_109 >u 5<32> l230554BC
l2305542C:
	branch (1<32> << a2_109 & 46<i32>) == 0<32> l230554BC
l230554BC:
	a5_116 = a5_111 & 0xFFFFFFFE<32>
l23055438:
	a5_116 = a5_111 | 1<i32>
l2305543C:
	Mem121[a3_107 + 9<i32>:byte] = SLICE(a5_116, byte, 0)
	word32 a4_124 = CONVERT(Mem121[s1_75 + 172<i32>:byte], byte, word32)
	word32 a5_125 = CONVERT(Mem121[s1_75 + 165<i32>:byte], byte, word32)
	a3_128 = Mem121[s0_15 + 156<i32>:int32]
	branch a4_124 >=u a5_125 l23055452
l23055450:
	a5_125 = a4_124
l23055452:
	Mem132[a3_128 + 8<i32>:byte] = SLICE(a5_125, byte, 0)
	word32 a2_585
	word32 a0_139 = atomic_test_bit(s2_76, 5<32>, out a2_585)
	word32 a5_143 = Mem132[s0_15 + 156<i32>:int32]
	word32 a4_144 = CONVERT(Mem132[a5_143 + 9<i32>:byte], byte, word32)
	branch a0_139 == 0<32> l230554C0
l230554C0:
	Mem146[a5_143 + 9<i32>:byte] = SLICE(a4_144 & 0xFFFFFFEF<32>, byte, 0)
l23055468:
	Mem148[a5_143 + 9<i32>:byte] = SLICE(a4_144 | 16<i32>, byte, 0)
	word32 a2_586
	branch atomic_test_bit(s2_76, 0xC<32>, out a2_586) == 0<32> l230554C6
l230554C6:
	s0Out = s0_15
	a3Out = a3_128
	mstatusOut = mstatus
	return ra_23
l2305547A:
	bt_keys_add_type(Mem148[s0_15 + 156<i32>:int32], 32<i32>)
	word32 a1_587
	word32 a4_590
	word32 a5_591
	word32 a3_589
	word32 a2_588
	word32 a7_593
	word32 a6_592
	memcpy(Mem148[s0_15 + 156<i32>:int32] + 0x16<32>, s1_75 + 223<i32>, 0x10<32>, out a1_587, out a2_588, out a3_589, out a4_590, out a5_591, out a6_592, out a7_593)
	word32 t1_594
	word32 a3_598
	word32 a0_595
	word32 a1_596
	word32 a4_599
	word32 a2_597
	word32 a5_600
	word32 ra_202 = memset(ra_23, Mem148[s0_15 + 156<i32>:int32] + 0xC<32>, 0<32>, 8<32>, out t1_594, out a0_595, out a1_596, out a2_597, out a3_598, out a4_599, out a5_600)
	word32 a0_205 = Mem148[s0_15 + 156<i32>:int32]
l230554B8_thunk_memset:
	word32 a3_218
	word32 t1_601
	word32 a1_603
	word32 a0_602
	word32 a4_605
	word32 a5_606
	word32 a2_604
	word32 ra_221 = memset(ra_202, a0_205 + 0x14<32>, 0<32>, 2<32>, out t1_601, out a0_602, out a1_603, out a2_604, out a3_218, out a4_605, out a5_606)
	s0Out = s0_15
	a3Out = a3_218
	mstatusOut = mstatus
	return ra_221
l230553D8:
	word32 a3_228
	word32 a3_258
	word32 a4_259
	word32 s1_262
	word32 s10_578
	word32 s11_579
	word32 s9_577
	word32 s8_576
	word32 t4_580
	word32 s4_572
	word32 s5_573
	word32 s7_575
	word32 s6_574
	word32 a5_568
	word32 a7_569
	word32 s3_571
	word32 s2_570
	word32 s0_564
	word32 a0_565
	word32 a2_567
	word32 a1_566
	word32 ra_261 = printf(bt_addr_le_str_real(ra_23, s3_77, s2, dwArg14, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0108, out s0_564, out a3_228), 0x230BBE60<32>, a3_228, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_262, out a0_565, out a1_566, out a2_567, out a3_258, out a4_259, out a5_568, out a7_569, out s2_570, out s3_571, out s4_572, out s5_573, out s6_574, out s7_575, out s8_576, out s9_577, out s10_578, out s11_579, out t4_580)
l230553FC_thunk_smp_error:
	word32 a3_286
	word32 mstatus_291
	word32 s0_293
	word32 a4_582
	word32 s3_583
	word32 s1_581
	word32 s5_584
	word32 ra_292 = smp_error(ra_261, s1_262, s1_262, 8<32>, a3_258, a4_259, mstatus, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, dwArg54, dwArg5C, s3, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_293, out s1_581, out a3_286, out a4_582, out s3_583, out s5_584, out mstatus_291)
	s0Out = s0_293
	a3Out = a3_286
	mstatusOut = mstatus_291
	return ra_292
bt_smp_update_keys_exit:


word32 bt_smp_init(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_init
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_smp_init_entry:
l230554D4:
	word32 a3_18
	word32 s5_33
	word32 s1_115
	word32 a0_116
	word32 a1_117
	word32 a4_118
	word32 a5_119
	word32 s2_120
	word32 s3_121
	word32 s4_122
	word32 s6_123
	word32 s7_124
	word32 s8_125
	word32 ra_30 = k_sem_init(ra, s0, 0x42026614<32>, 0<32>, 1<32>, a3, a4, a5, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgD8, dwArg0118, out s1_115, out a0_116, out a1_117, out a3_18, out a4_118, out a5_119, out s2_120, out s3_121, out s4_122, out s5_33, out s6_123, out s7_124, out s8_125)
	Mem47[0x4200F4A0<32>:byte] = SLICE(CONVERT((CONVERT(Mem9[0x4200DDA2<32>:byte], byte, word32) & 6<32>) <u 0xFFFFFFF9<32>, bool, word32), byte, 0)
	word32 a3_51
	word32 a4_52
	word32 s1_54
	word32 mstatus_62
	word32 s3_66
	word32 s5_67
	word32 a0_126
	word32 a5_127
	word32 s2_128
	word32 ra_63 = bt_pub_key_gen(ra_30, 0x4200EC40<32>, a3_18, s5_33, mstatus, dwArg08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg48, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s1_54, out a0_126, out a3_51, out a4_52, out a5_127, out s2_128, out s3_66, out s5_67, out mstatus_62)
	s1Out = s1_54
	a0Out = 0<32>
	a3Out = a3_51
	a4Out = a4_52
	s3Out = s3_66
	s5Out = s5_67
	mstatusOut = mstatus_62
	return ra_63
bt_smp_init_exit:


word32 bt_keys_find_addr.part.2(word32 a0, word32 a1, word32 dwArg38, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_security_changed
//      bt_keys_find_addr
// MayUse:  a0:[0..31] a1:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
bt_keys_find_addr.part.2_entry:
l23055514:
	word32 a5_29
	word32 a0_41
	word32 a0_21
	branch CONVERT(Mem5[0x42016CA4<32>:byte], byte, word32) == a0 l2305554C
l2305554C:
	word32 a1_113
	word32 a2_114
	word32 a5_115
	a0_21 = memcmp(0x42016CA5<32>, a1, 7<32>, out a1_113, out a2_114, out a3, out a4, out a5_115)
	branch a0_21 != 0<32> l23055532
l23055532:
	a5_29 = CONVERT(Mem13[0x42016D28<32>:byte], byte, word32)
	branch a5_29 != a0 l23055564
l2305553A:
	word32 a1_111
	word32 a2_112
	branch memcmp(0x42016D29<32>, a1, 7<32>, out a1_111, out a2_112, out a3, out a4, out a5_29) != 0<32> l23055564
l23055564:
	a0_41 = 0<32>
l23055548:
	a0_21 = 1<32>
l23055558:
	a5_29 = 132<i32>
	a0_41 = a0_21 + 0x42016D28<32>
l23055566:
	0<32> = dwArg38
	a0Out = a0_41
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_29
	s2Out = a1
	return a0
bt_keys_find_addr.part.2_exit:


word32 bt_keys_find.part.1(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_keys_find
//      bt_keys_get_type
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
bt_keys_find.part.1_entry:
l23055572:
	word32 a0_101
	word32 a0_35
	word32 a5_116 = CONVERT(Mem15[0x42016CAE<32>:uint16], uint16, word32) & a0
	branch a5_116 == 0<32> l230555AE
l23055598:
	a5_116 = CONVERT(Mem15[0x42016CA4<32>:byte], byte, word32)
	branch a5_116 != a1 l230555AE
l230555A0:
	word32 a2_140
	word32 a1_139
	branch memcmp(0x42016CA5<32>, a2, 7<32>, out a1_139, out a2_140, out a3, out a4, out a5_116) == 0<32> l230555E2
l230555E2:
	a0_35 = 0<32>
l230555AE:
	branch (CONVERT(Mem15[0x42016D32<32>:uint16], uint16, word32) & a0) == 0<32> l230555E6
l230555B8:
	a5_116 = CONVERT(Mem15[0x42016D28<32>:byte], byte, word32)
	branch a5_116 != a1 l230555E6
l230555C0:
	word32 a1_141
	word32 a2_142
	branch memcmp(0x42016D29<32>, a2, 7<32>, out a1_141, out a2_142, out a3, out a4, out a5_116) != 0<32> l230555E6
l230555E6:
	a0_101 = 0<32>
l230555CE:
	a0_35 = 132<i32>
l230555D2:
	a0_101 = a0_35 + 0x42016CA4<32>
l230555D4:
	s1Out = a2
	a0Out = a0_101
	a3Out = a3
	a4Out = a4
	a5Out = a5_116
	s2Out = a1
	s3Out = a0
	s4Out = dwArg04
	return 0x42016CA4<32>
bt_keys_find.part.1_exit:


word32 bt_keys_get_addr(word32 ra, word32 s0, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      update_keys_check
//      smp_pairing_req
//      smp_public_key
//      bt_smp_start_security
//      bt_smp_update_keys
//      bt_keys_get_type
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_keys_get_addr_entry:
l230555EA:
	word32 a3_152
	word32 a4_153
	word32 s2_156
	word32 s2_33
	word32 s3_130 = a0
	word32 s4_131 = a1
	word32 s1_126 = 0x42016CA4<32>
	branch CONVERT(Mem5[0x42016CA4<32>:byte], byte, word32) != a0 l23055620
l23055614:
	word32 a2_584
	word32 a1_583
	word32 a5_585
	branch memcmp(0x42016CA5<32>, a1, 7<32>, out a1_583, out a2_584, out a3_152, out a4_153, out a5_585) == 0<32> l23055704
l23055704:
	s2_33 = 0<32>
l23055620:
	word32 s0_161 = 0<32>
	word32 a2_579
	word32 a1_578
	word32 a3_580
	word32 a4_581
	word32 a5_582
	branch memcmp(0x42016CA5<32>, fp + -48<i32>, 7<32>, out a1_578, out a2_579, out a3_580, out a4_581, out a5_582) == 0<32> l23055642
l23055638:
	s0_161 = CONVERT(CONVERT(Mem41[0x42016CAC<32>:byte], byte, word32) != 0<32>, bool, word32) << 1<i32>
l23055642:
	branch CONVERT(Mem41[0x42016D28<32>:byte], byte, word32) != a0 l23055658
l2305564A:
	word32 a1_586
	word32 a2_587
	word32 a5_588
	branch memcmp(0x42016D29<32>, a1, 7<32>, out a1_586, out a2_587, out a3_152, out a4_153, out a5_588) == 0<32> l2305571A
l2305571A:
	s2_33 = 132<i32>
l23055706:
	s2_156 = s2_33 + 0x42016CA4<32>
l23055658:
	branch s0_161 != 2<32> l230556CA
l2305565E:
	word32 dwLoc2C_397 = SEQ(bLoc29, 0<8>, 0<16>)
	word32 a1_594
	word32 a2_595
	word32 a3_596
	word32 a4_597
	word32 a5_598
	branch memcmp(0x42016D29<32>, fp + -48<i32>, 7<32>, out a1_594, out a2_595, out a3_596, out a4_597, out a5_598) == 0<32> l23055720
l23055676:
	branch CONVERT(Mem84[0x42016D30<32>:byte], byte, word32) == 0<32> l23055720
l23055720:
	s0_161 = 1<32>
l2305567C:
	word32 s0_95 = 0x42016D28<32>
	branch Mem84[0x42016DA8<32>:int32] <u Mem84[0x42016D24<32>:int32] l2305568E
l2305568C:
	s0_95 = 0x42016CA4<32>
l2305568E:
	word32 s2_100 = s0_95 + 1<i32>
	word32 s0_125
	word32 s2_129
	word32 a0_599
	word32 a3_600
	ra = bt_unpair(ra, s0_95, 0x42016CA4<32>, CONVERT(Mem84[s0_95:byte], byte, word32), s2_100, s2_100, a1, mstatus, dwLoc2C_397, dwLoc28, s4, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg44, dwArg48, dwArg4C, dwArg58, s3, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_125, out s1_126, out a0_599, out a3_600, out s2_129, out s3_130, out s4_131, out s5, out mstatus)
	s2_156 = 0<32>
	word32 a1_601
	word32 a2_602
	word32 a5_603
	branch memcmp(s2_129, fp + -40<i32>, 7<32>, out a1_601, out a2_602, out a3_152, out a4_153, out a5_603) != 0<32> l23055708
l230556B4:
	s0_161 = (s0_125 - s1_126 >> 2<i32>) + 0x3E0F83E1<32>
	branch s0_161 >u 1<32> l23055708
l230556CA:
	word32 s0_165 = s0_161 + 132<i32>
	s2_156 = s1_126 + s0_165
	Mem177[s2_156:byte] = SLICE(s3_130, byte, 0)
	word32 a5_180
	word32 a1_589
	word32 a2_590
	word32 a4_591
	word32 a6_592
	word32 a7_593
	memcpy(s1_126 + (s0_165 + 1<32>), s4_131, 7<32>, out a1_589, out a2_590, out a3_152, out a4_591, out a5_180, out a6_592, out a7_593)
	a4_153 = Mem177[a5_180:word32]
	Mem195[a5_180 + 1<32>:word32] = a4_153
	Mem196[s2_156 + 128<i32>:word32] = a5_180 + 1<32>
	Mem198[0x4200F4A8<32>:word32] = s2_156
l23055708:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_126
	a0Out = s2_156
	a3Out = a3_152
	a4Out = a4_153
	s2Out = s2_156
	s3Out = s3_130
	s4Out = s4_131
	s5Out = s5
	mstatusOut = mstatus
	return ra
bt_keys_get_addr_exit:


word32 bt_keys_foreach(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg00, word32 dwArg04, word32 dwArg28, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_id_del
//      enh_conn_complete
//      bt_keys_clear_all
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31]
// LiveOut: ra s0 s1 s2 s4
// Trashed: a0 a1 a2 a5 a6 ra s0 s1 s2 s4 s8 t1 t3
// Preserved: sp
bt_keys_foreach_entry:
l23055724:
	word32 s2_26 = a0
	word32 s0_18 = a1
	word32 s1_19 = 0x42016CA4<32>
	branch (CONVERT(Mem14[0x42016CAE<32>:uint16], uint16, word32) & a0) == 0<32> l23055754
l23055748:
	word32 sp_25
	word32 t1_34
	call a1 (retsize: 0;)
		uses: a0:0x42016CA4<32>,a1:a2,a2:a2,ra:ra,s0:a1,s1:0x42016CA4<32>,s2:a0,Stack +0084:a2,t1:t1_34
		defs: ra:ra_30,s0:s0_28,s1:s1_29,s2:s2_26,sp:sp_25,t1:t1_34
	a2 = Mem24[sp_25 + 132<i32>:word32]
l23055754:
	branch (CONVERT(Mem41[s1_19 + 142<i32>:uint16], uint16, word32) & s2_26) == 0<32> l23055772
l23055772:
	s0Out = s0_18
	s1Out = s1_19
	s2Out = s2_26
	s4Out = dwArg04
	return ra
l2305575E:
	word32 s2_63
	word32 s0_65
	word32 s1_66
	word32 ra_67
	word32 t1_71
	word32 s4_75
	call s0_18 (retsize: 0;)
		uses: a0:s1_40 + 132<i32>,a1:a2_58,a2:a2_58,a6:dwArg28,ra:ra_61,s0:s0_51,s1:s1_40,s2:s2_43,s4:dwArg04,s8:dwLoc1C,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +FFFFFFE4:dwLoc1C,t1:t1_71,t3:dwArg00
		defs: ra:ra_67,s0:s0_65,s1:s1_66,s2:s2_63,s4:s4_75,t1:t1_71
	s0Out = s0_65
	s1Out = s1_66
	s2Out = s2_63
	s4Out = s4_75
	return ra_67
bt_keys_foreach_exit:


word32 bt_keys_find(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_keys_check.part.5
//      smp_security_request
//      bt_smp_request_ltk
//      bt_smp_sign_verify
//      bt_smp_sign
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
bt_keys_find_entry:
l2305577E:
l2305577E_thunk_bt_keys_find.part.1:
	word32 a0_6
	word32 a5_8
	word32 s1_11
	word32 s2_12
	word32 s3_13
	word32 s4_14
	word32 a3_18
	word32 a4_19
	word32 s0_10 = bt_keys_find.part.1(a0, a1, a2, out s1_11, out a0_6, out a3_18, out a4_19, out a5_8, out s2_12, out s3_13, out s4_14)
	s1Out = s1_11
	a0Out = a0_6
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_8
	s2Out = s2_12
	s3Out = s3_13
	s4Out = s4_14
	return s0_10
bt_keys_find_exit:


word32 bt_keys_get_type(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      smp_ident_info
//      smp_encrypt_info
//      smp_signing_info
//      smp_master_ident
//      smp_ident_addr_info
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_keys_get_type_entry:
l23055782:
	word32 a4_154
	word32 a5_155
	word32 a3_110
	word32 a0_108
	word32 s1_118
	word32 s2_123
	word32 s3_124
	word32 s4_125
	word32 s0_22 = bt_keys_find.part.1(a0, a1, a2, out s1_118, out a0_108, out a3_110, out a4_154, out a5_155, out s2_123, out s3_124, out s4_125)
	branch a0_108 != 0<32> l230557AC
l23055798:
	word32 s0_43
	word32 a4_156
	ra = bt_keys_get_addr(ra, s0_22, s1_118, s2_123, s2_123, s3_124, s4_125, mstatus, s2, s0, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_43, out s1_118, out a0_108, out a3_110, out a4_156, out s2_123, out s3_124, out s4_125, out s5, out mstatus)
	branch a0_108 == 0<32> l230557AC
l230557A2:
	Mem66[a0_108 + 10<i32>:word16] = SLICE(s0_43 | CONVERT(Mem11[a0_108 + 10<i32>:uint16], uint16, word32), word16, 0)
l230557AC:
	0<32> = dwArg38
	s1Out = s1_118
	a0Out = a0_108
	a3Out = a3_110
	s2Out = s2_123
	s3Out = s3_124
	s4Out = s4_125
	s5Out = s5
	mstatusOut = mstatus
	return ra
bt_keys_get_type_exit:


word32 bt_keys_find_irk(word32 ra, word32 a0, word32 a1, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_lookup_id_addr
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a0 ra s0 s1 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bt_keys_find_irk_entry:
l230557B8:
	branch CONVERT(Mem0[a1:byte], byte, word32) == 1<32> l230557C6
l230557C6:
	branch (CONVERT(Mem0[a1 + 6<i32>:byte], byte, word32) & 192<i32>) != 64<i32> l230557C2
l230557D6:
	word32 a0_151
	word32 a0_153
	word32 s1_100 = a1
	word32 s2_117 = a0
	word32 s0_115 = 0x42016CA4<32>
	branch (CONVERT(Mem22[0x42016CAE<32>:uint16], uint16, word32) & 2<32>) == 0<32> l23055812
l230557FA:
	branch CONVERT(Mem22[0x42016CA4<32>:byte], byte, word32) != a0 l23055812
l23055802:
	word32 a5_404
	word32 a4_403
	word32 a2_401
	word32 a3_402
	word32 a1_400
	branch memcmp(a1 + 1<i32>, 0x42016CDA<32>, 6<32>, out a1_400, out a2_401, out a3_402, out a4_403, out a5_404) == 0<32> l2305583A
l2305583A:
	a0_153 = 0<32>
l23055812:
	branch (CONVERT(Mem22[0x42016D32<32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305583E
l2305581A:
	branch CONVERT(Mem22[0x42016D28<32>:byte], byte, word32) != a0 l2305583E
l23055822:
	word32 a5_409
	word32 a4_408
	word32 a3_407
	word32 a1_405
	word32 a2_406
	branch memcmp(a1 + 1<i32>, 0x42016D5E<32>, 6<32>, out a1_405, out a2_406, out a3_407, out a4_408, out a5_409) != 0<32> l2305583E
l2305583E:
	branch (CONVERT(Mem22[0x42016CAE<32>:uint16], uint16, word32) & 2<32>) == 0<32> l2305585E
l23055846:
	branch CONVERT(Mem22[0x42016CA4<32>:byte], byte, word32) != a0 l2305585E
l2305584E:
	word32 a0_68
	ra = bt_rpa_irk_matches(ra, 0x42016CCA<32>, a1 + 1<i32>, out s0_115, out s1_100, out a0_68, out s2_117, out s3, out s5)
	branch a0_68 != 0<32> l23055892
l23055892:
	s1_100 = 0<32>
l2305585E:
	branch (CONVERT(Mem22[s0_115 + 142<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l23055882
l23055866:
	branch CONVERT(Mem22[s0_115 + 132<i32>:byte], byte, word32) != s2_117 l23055882
l2305586E:
	word32 a0_105
	word32 s1_410
	ra = bt_rpa_irk_matches(ra, s0_115 + 170<i32>, s1_100 + 1<i32>, out s0_115, out s1_410, out a0_105, out s2_117, out s3, out s5)
	s1_100 = 132<i32>
	branch a0_105 != 0<32> l23055894
l23055894:
	word32 a7_417
	word32 a6_416
	word32 a4_414
	word32 a5_415
	word32 a3_413
	word32 a2_412
	word32 a1_411
	memcpy(s1_100 + 54<i32> + s0_115, s3, 6<32>, out a1_411, out a2_412, out a3_413, out a4_414, out a5_415, out a6_416, out a7_417)
	a0_151 = s0_115 + s1_100
l23055882:
	a0_151 = 0<32>
l23055832:
	a0_153 = 132<i32>
l23055836:
	a0_151 = a0_153 + 0x42016CA4<32>
l23055884:
	s0Out = s0_115
	s1Out = s1_100
	a0Out = a0_151
	s2Out = s2_117
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s8Out = dwLoc1C
	return ra
l230557C2:
	s0Out = s0
	s1Out = s1
	a0Out = 0<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	return ra
bt_keys_find_irk_exit:


word32 bt_keys_find_addr(word32 a0, word32 a1, word32 dwArg38, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_unpair
//      bt_addr_le_is_bonded
//      legacy_request_tk
// MayUse:  a0:[0..31] a1:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: sp
bt_keys_find_addr_entry:
l230558A8:
l230558A8_thunk_bt_keys_find_addr.part.2:
	word32 a0_6
	word32 a2_8
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 s2_13
	word32 s1_12 = bt_keys_find_addr.part.2(a0, a1, dwArg38, out a0_6, out a2_8, out a3_9, out a4_10, out a5_11, out s2_13)
	a0Out = a0_6
	a2Out = a2_8
	a3Out = a3_9
	a4Out = a4_10
	a5Out = a5_11
	s2Out = s2_13
	return s1_12
bt_keys_find_addr_exit:


void bt_keys_add_type(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_smp_distribute_keys
//      bt_smp_update_keys
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a1 a5
// Preserved: sp
bt_keys_add_type_entry:
l230558AC:
	Mem8[a0 + 10<i32>:word16] = SLICE(a1 | CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32), word16, 0)
	return
bt_keys_add_type_exit:


word32 bt_keys_clear(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_unpair
//      smp_pairing_failed
//      smp_timeout
//      bt_smp_disconnected
//      bt_smp_update_keys
//      keys_clear_id
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: a6 a7 mstatus s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t3 t4 t5 t6 tp
bt_keys_clear_entry:
l230558B8:
	word32 s0_10 = a0
	branch (CONVERT(Mem7[a0 + 10<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l230558CC
l230558C8:
	ra = bt_id_del(ra, s1, a3, s2, s3, s4, mstatus, dwLoc10, s0, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_10)
l230558CC:
l230558DA_thunk_memset:
	word32 a3_60
	word32 a4_61
	word32 t1_137
	word32 a0_138
	word32 a1_139
	word32 a2_140
	word32 a5_141
	word32 ra_63 = memset(ra, s0_10, 0<32>, 132<i32>, out t1_137, out a0_138, out a1_139, out a2_140, out a3_60, out a4_61, out a5_141)
	a3Out = a3_60
	a4Out = a4_61
	return ra_63
bt_keys_clear_exit:


void keys_clear_id(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
keys_clear_id_entry:
l230558DE:
	branch CONVERT(Mem0[a1:byte], byte, word32) != CONVERT(Mem0[a0:byte], byte, word32) l230558EE
l230558EE:
	return
l230558EA:
l230558EA_thunk_bt_keys_clear:
	word32 a3_68
	word32 a4_69
	bt_keys_clear(ra, s0, s1, a0, a3, s2, s3, s4, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out a3_68, out a4_69)
	return
keys_clear_id_exit:


word32 bt_keys_clear_all(word32 ra, word32 dwArg08, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_unpair
// MayUse:  ra:[0..31] Stack +0008:[0..31]
// LiveOut: ra s0 s1 s2
// Trashed: a0 a1 a2 a5 a6 ra s0 s1 s2 s4 s8 t1 t3
// Preserved: sp
bt_keys_clear_all_entry:
l230558F0:
	word32 s0_15
	word32 s1_16
	word32 s2_17
	word32 s4_36
	word32 ra_23 = bt_keys_foreach(ra, 63<i32>, 0x230558DE<32>, fp + 0xFFFFFFEF<32>, dwLoc20, dwLoc1C, dwArg08, out s0_15, out s1_16, out s2_17, out s4_36)
	s0Out = s0_15
	s1Out = s1_16
	s2Out = s2_17
	return ra_23
bt_keys_clear_all_exit:


word32 bt_keys_update_usage(word32 a0, word32 a1, word32 dwArg28, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_security_changed
// MayUse:  a0:[0..31] a1:[0..31] Stack +0028:[0..31]
// LiveOut: a0 a3 a4 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: sp
bt_keys_update_usage_entry:
l23055912:
	word32 a0_8
	word32 s2_15
	word32 a2_45
	word32 a5_46
	word32 a3_11
	word32 a4_12
	word32 s1_14 = bt_keys_find_addr.part.2(a0, a1, dwArg28, out a0_8, out a2_45, out a3_11, out a4_12, out a5_46, out s2_15)
	branch a0_8 == 0<32> l2305593E
l2305591C:
	word32 a5_18 = Mem5[a4_12:word32]
	branch a4_12 == a0_8 l2305593E
l2305592A:
	a3_11 = Mem5[a4_12:word32]
	Mem21[a0_8:word32] = a5_18
	Mem23[a4_12 + 1<32>:word32] = a3_11
	Mem24[a0_8 + 128<i32>:word32] = a4_12 + 1<32>
	a4_12 = a4_12 + 1<32>
l2305593E:
	a0Out = a0_8
	a3Out = a3_11
	a4Out = a4_12
	s2Out = s2_15
	return s1_14
bt_keys_update_usage_exit:


word32 bt_settings_encode_key(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 dwArg18, word32 dwArg44, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_connected
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: ra s11
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
bt_settings_encode_key_entry:
l23055944:
	word32 s11_110
	word32 ra_106
	word32 t3_14 = CONVERT(Mem5[a3 + 1<i32>:byte], byte, word32)
	branch a4 == 0<32> l23055986
l23055986:
	word32 s0_123
	word32 s1_124
	word32 a0_125
	word32 a1_126
	word32 a2_127
	word32 a3_128
	word32 a4_129
	word32 a5_130
	word32 a7_131
	word32 s2_132
	word32 s3_133
	word32 s4_134
	word32 s5_135
	word32 s6_136
	word32 s7_137
	word32 s8_138
	word32 s9_139
	word32 s10_140
	ra_106 = snprintf(ra, a0, a1, 0x230BBF2C<32>, dwLoc08, dwArg18, dwArg44, t3_14, dwArg64, dwArg88, dwArgAC, out s0_123, out s1_124, out a0_125, out a1_126, out a2_127, out a3_128, out a4_129, out a5_130, out a7_131, out s2_132, out s3_133, out s4_134, out s5_135, out s6_136, out s7_137, out s8_138, out s9_139, out s10_140, out s11_110)
l2305596A:
	word32 s0_141
	word32 s1_142
	word32 a0_143
	word32 a1_144
	word32 a2_145
	word32 a3_146
	word32 a4_147
	word32 a5_148
	word32 a7_149
	word32 s2_150
	word32 s3_151
	word32 s4_152
	word32 s5_153
	word32 s6_154
	word32 s7_155
	word32 s8_156
	word32 s9_157
	word32 s10_158
	ra_106 = snprintf(ra, a0, a1, 0x230BBF08<32>, dwLoc08, dwArg18, dwArg44, t3_14, a4, dwArg88, dwArgAC, out s0_141, out s1_142, out a0_143, out a1_144, out a2_145, out a3_146, out a4_147, out a5_148, out a7_149, out s2_150, out s3_151, out s4_152, out s5_153, out s6_154, out s7_155, out s8_156, out s9_157, out s10_158, out s11_110)
l23055980:
	s11Out = s11_110
	return ra_106
bt_settings_encode_key_exit:


void notify_func(word32 ra, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
notify_func_entry:
l2305599C:
	branch CONVERT(Mem7[a1 + 40<i32>:uint16], uint16, word32) != 0<32> l230559C4
l230559C4:
	word32 s1_101
	word32 a0_102
	word32 a1_103
	word32 a2_104
	word32 a3_105
	word32 a4_106
	word32 a5_107
	word32 a7_108
	word32 s2_109
	word32 s3_110
	word32 s4_111
	word32 s5_112
	word32 s6_113
	word32 s7_114
	word32 s8_115
	word32 s9_116
	word32 s10_117
	word32 s11_118
	word32 t4_119
	printf(ra, 0x230BC9F4<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_101, out a0_102, out a1_103, out a2_104, out a3_105, out a4_106, out a5_107, out a7_108, out s2_109, out s3_110, out s4_111, out s5_112, out s6_113, out s7_114, out s8_115, out s9_116, out s10_117, out s11_118, out t4_119)
l230559A8:
	word32 s1_120
	word32 a0_121
	word32 a1_122
	word32 a2_123
	word32 a3_124
	word32 a4_125
	word32 a5_126
	word32 a7_127
	word32 s2_128
	word32 s3_129
	word32 s4_130
	word32 s5_131
	word32 s6_132
	word32 s7_133
	word32 s8_134
	word32 s9_135
	word32 s10_136
	word32 s11_137
	word32 t4_138
	printf(ra, 0x230BC9E4<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_120, out a0_121, out a1_122, out a2_123, out a3_124, out a4_125, out a5_126, out a7_127, out s2_128, out s3_129, out s4_130, out s5_131, out s6_132, out s7_133, out s8_134, out s9_135, out s10_136, out s11_137, out t4_138)
	Mem63[a1 + 36<i32>:word16] = 0<16>
l230559BC:
	return
notify_func_exit:


void le_param_updated(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
le_param_updated_entry:
l230559D6:
l230559DE_thunk_printf:
	word32 s1_36
	word32 a0_37
	word32 a1_38
	word32 a2_39
	word32 a3_40
	word32 a4_41
	word32 a5_42
	word32 a7_43
	word32 s2_44
	word32 s3_45
	word32 s4_46
	word32 s5_47
	word32 s6_48
	word32 s7_49
	word32 s8_50
	word32 s9_51
	word32 s10_52
	word32 s11_53
	word32 t4_54
	printf(ra, 0x230BC9B0<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_36, out a0_37, out a1_38, out a2_39, out a3_40, out a4_41, out a5_42, out a7_43, out s2_44, out s3_45, out s4_46, out s5_47, out s6_48, out s7_49, out s8_50, out s9_51, out s10_52, out s11_53, out t4_54)
	return
le_param_updated_exit:


void ble_set_tx_pwr(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_set_tx_pwr_entry:
l230559E2:
	word32 a0_113
	branch a2 == 2<32> l230559FA
l230559FA:
	word32 a3_15
	word32 a0_221
	word32 a1_222
	word32 a4_223
	word32 s8_224
	get_uint8_from_string(s0, a3 + 4<i32>, fp + 0xFFFFFFEF<32>, out a0_221, out a1_222, out a3_15, out a4_223, out s8_224)
	word32 a0_24 = CONVERT(bLoc11, byte, word32)
	branch a0_24 <=u 0x14<32> l23055A26
l23055A26:
	word32 a0_30
	ra = bt_set_tx_pwr(ra, s1, CONVERT(SLICE(a0_24, byte, 0), byte, int32), mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg28, dwArg34, dwArg38, dwArg3C, dwArg54, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out a0_30, out a3)
	branch a0_30 == 0<32> l23055A40
l23055A40:
	a0_113 = 0x230BC500<32>
l23055A32:
	word32 s1_244
	word32 a0_245
	word32 a1_246
	word32 a2_247
	word32 a3_248
	word32 a4_249
	word32 a5_250
	word32 a7_251
	word32 s2_252
	word32 s3_253
	word32 s4_254
	word32 s5_255
	word32 s6_256
	word32 s7_257
	word32 s8_258
	word32 s9_259
	word32 s10_260
	word32 s11_261
	word32 t4_262
	printf(ra, 0x230BC4D0<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_244, out a0_245, out a1_246, out a2_247, out a3_248, out a4_249, out a5_250, out a7_251, out s2_252, out s3_253, out s4_254, out s5_255, out s6_256, out s7_257, out s8_258, out s9_259, out s10_260, out s11_261, out t4_262)
l23055A10:
	word32 s1_225
	word32 a0_226
	word32 a1_227
	word32 a2_228
	word32 a3_229
	word32 a4_230
	word32 a5_231
	word32 a7_232
	word32 s2_233
	word32 s3_234
	word32 s4_235
	word32 s5_236
	word32 s6_237
	word32 s7_238
	word32 s8_239
	word32 s9_240
	word32 s10_241
	word32 s11_242
	word32 t4_243
	printf(ra, 0x230BC48C<32>, a3_15, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_225, out a0_226, out a1_227, out a2_228, out a3_229, out a4_230, out a5_231, out a7_232, out s2_233, out s3_234, out s4_235, out s5_236, out s6_237, out s7_238, out s8_239, out s9_240, out s10_241, out s11_242, out t4_243)
l230559EC:
	a0_113 = 0x230B67B4<32>
l230559F4:
	word32 s1_263
	word32 a0_264
	word32 a1_265
	word32 a2_266
	word32 a3_267
	word32 a4_268
	word32 a5_269
	word32 a7_270
	word32 s2_271
	word32 s3_272
	word32 s4_273
	word32 s5_274
	word32 s6_275
	word32 s7_276
	word32 s8_277
	word32 s9_278
	word32 s10_279
	word32 s11_280
	word32 t4_281
	printf(ra, a0_113, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_263, out a0_264, out a1_265, out a2_266, out a3_267, out a4_268, out a5_269, out a7_270, out s2_271, out s3_272, out s4_273, out s5_274, out s6_275, out s7_276, out s8_277, out s9_278, out s10_279, out s11_280, out t4_281)
l23055A20:
	return
ble_set_tx_pwr_exit:


void ble_unsubscribe(word32 ra, word32 s1, word32 a3, word32 s2, word32 s3, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg6C, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgBC, word32 dwArgC4, word32 dwArgD8, word32 dwArgE0, word32 dwArgE4, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C4:[0..31] Stack +00D8:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_unsubscribe_entry:
l23055A4A:
	word32 a0_51
	word32 a0_5 = Mem0[0x4200F4B0<32>:int32]
	branch a0_5 != 0<32> l23055A60
l23055A60:
	branch CONVERT(Mem0[0x42017040<32>:uint16], uint16, word32) != 0<32> l23055A78
l23055A78:
	dwArg74 = ra
	word32 a0_19
	word32 s0_209
	word32 s1_210
	word32 a5_211
	word32 s2_212
	word32 s3_213
	word32 s4_214
	word32 s5_215
	word32 s6_216
	word32 mstatus_217
	ra = bt_gatt_unsubscribe(ra, s1, a0_5, 0x4201701C<32>, a3, s2, s3, s6, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg20, dwArg24, dwArg28, dwArg38, dwArg58, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC4, dwArgD8, dwArgE0, dwArgE4, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s0_209, out s1_210, out a0_19, out a3, out a5_211, out s2_212, out s3_213, out s4_214, out s5_215, out s6_216, out mstatus_217)
	branch a0_19 == 0<32> l23055A98
l23055A98:
	a0_51 = 0x230BC724<32>
l23055A88:
l23055A94_thunk_printf:
	word32 s1_218
	word32 a0_219
	word32 a1_220
	word32 a2_221
	word32 a3_222
	word32 a4_223
	word32 a5_224
	word32 a7_225
	word32 s2_226
	word32 s3_227
	word32 s4_228
	word32 s5_229
	word32 s6_230
	word32 s7_231
	word32 s8_232
	word32 s9_233
	word32 s10_234
	word32 s11_235
	word32 t4_236
	printf(ra, 0x230BC704<32>, a3, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_218, out a0_219, out a1_220, out a2_221, out a3_222, out a4_223, out a5_224, out a7_225, out s2_226, out s3_227, out s4_228, out s5_229, out s6_230, out s7_231, out s8_232, out s9_233, out s10_234, out s11_235, out t4_236)
	return
l23055A6E:
	a0_51 = 0x230BC6EC<32>
l23055A54:
	a0_51 = 0x230B9228<32>
l23055A5C:
l23055A5C_thunk_printf:
	word32 s1_190
	word32 a0_191
	word32 a1_192
	word32 a2_193
	word32 a3_194
	word32 a4_195
	word32 a5_196
	word32 a7_197
	word32 s2_198
	word32 s3_199
	word32 s4_200
	word32 s5_201
	word32 s6_202
	word32 s7_203
	word32 s8_204
	word32 s9_205
	word32 s10_206
	word32 s11_207
	word32 t4_208
	printf(ra, a0_51, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_190, out a0_191, out a1_192, out a2_193, out a3_194, out a4_195, out a5_196, out a7_197, out s2_198, out s3_199, out s4_200, out s5_201, out s6_202, out s7_203, out s8_204, out s9_205, out s10_206, out s11_207, out t4_208)
	return
ble_unsubscribe_exit:


void write_func(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
write_func_entry:
l23055AA6:
	word32 s1_54
	word32 a0_55
	word32 a1_56
	word32 a2_57
	word32 a3_58
	word32 a4_59
	word32 a5_60
	word32 a7_61
	word32 s2_62
	word32 s3_63
	word32 s4_64
	word32 s5_65
	word32 s6_66
	word32 s7_67
	word32 s8_68
	word32 s9_69
	word32 s10_70
	word32 s11_71
	word32 t4_72
	word32 ra_17 = printf(ra, 0x230BCC94<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_54, out a0_55, out a1_56, out a2_57, out a3_58, out a4_59, out a5_60, out a7_61, out s2_62, out s3_63, out s4_64, out s5_65, out s6_66, out s7_67, out s8_68, out s9_69, out s10_70, out s11_71, out t4_72)
l23055AC8_thunk_memset:
	word32 t1_73
	word32 a0_74
	word32 a1_75
	word32 a2_76
	word32 a3_77
	word32 a4_78
	word32 a5_79
	memset(ra_17, 0x42017050<32>, 0<32>, 40<i32>, out t1_73, out a0_74, out a1_75, out a2_76, out a3_77, out a4_78, out a5_79)
	return
write_func_exit:


void ble_exchange_mtu(word32 ra, word32 s0, word32 s1, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB0, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B0:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_exchange_mtu_entry:
l23055ACC:
	word32 a0_49
	word32 a0_5 = Mem0[0x4200F4B0<32>:int32]
	branch a0_5 != 0<32> l23055AE2
l23055AE2:
	Mem14[0x23055B3A<32>:word32] = 0x42016DD8<32>
	dwArg74 = ra
	word32 a0_18
	ra = bt_gatt_exchange_mtu(ra, s0, s1, a0_5, mstatus, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg48, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB0, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out a0_18, out a3)
	branch a0_18 == 0<32> l23055B14
l23055B14:
	a0_49 = 0x230BC1F8<32>
l23055B04:
l23055B10_thunk_printf:
	word32 s1_215
	word32 a0_216
	word32 a1_217
	word32 a2_218
	word32 a3_219
	word32 a4_220
	word32 a5_221
	word32 a7_222
	word32 s2_223
	word32 s3_224
	word32 s4_225
	word32 s5_226
	word32 s6_227
	word32 s7_228
	word32 s8_229
	word32 s9_230
	word32 s10_231
	word32 s11_232
	word32 t4_233
	printf(ra, 0x230BC1DC<32>, a3, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_215, out a0_216, out a1_217, out a2_218, out a3_219, out a4_220, out a5_221, out a7_222, out s2_223, out s3_224, out s4_225, out s5_226, out s6_227, out s7_228, out s8_229, out s9_230, out s10_231, out s11_232, out t4_233)
	return
l23055AD6:
	a0_49 = 0x230B9228<32>
l23055ADE:
l23055ADE_thunk_printf:
	word32 s1_196
	word32 a0_197
	word32 a1_198
	word32 a2_199
	word32 a3_200
	word32 a4_201
	word32 a5_202
	word32 a7_203
	word32 s2_204
	word32 s3_205
	word32 s4_206
	word32 s5_207
	word32 s6_208
	word32 s7_209
	word32 s8_210
	word32 s9_211
	word32 s10_212
	word32 s11_213
	word32 t4_214
	printf(ra, a0_49, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_196, out a0_197, out a1_198, out a2_199, out a3_200, out a4_201, out a5_202, out a7_203, out s2_204, out s3_205, out s4_206, out s5_207, out s6_208, out s7_209, out s8_210, out s9_211, out s10_212, out s11_213, out t4_214)
	return
ble_exchange_mtu_exit:


void exchange_func(word32 ra, word32 a0, word32 a1, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg70, word32 dwArg74, word32 dwArg7C, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
exchange_func_entry:
l23055B22:
	branch a1 == 0<32> l23055B4A
l23055B4A:
l23055B28:
l23055B30:
	word32 a3_22
	word32 a0_116
	word32 a4_117
	word32 s2_118
	word32 s3_119
	word32 s4_120
	word32 s10_121
	word32 s11_122
	word32 ra_26 = bt_gatt_get_mtu(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out a0_116, out a3_22, out a4_117, out s2_118, out s3_119, out s4_120, out s10_121, out s11_122)
l23055B46_thunk_printf:
	word32 s6_109
	word32 s5_108
	word32 s4_107
	word32 s3_106
	word32 s2_105
	word32 a7_104
	word32 a5_103
	word32 a4_102
	word32 a3_101
	word32 a2_100
	word32 a1_99
	word32 a0_98
	word32 s1_97
	word32 s7_110
	word32 s8_111
	word32 s9_112
	word32 s10_113
	word32 s11_114
	word32 t4_115
	printf(ra_26, 0x230BC974<32>, a3_22, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_97, out a0_98, out a1_99, out a2_100, out a3_101, out a4_102, out a5_103, out a7_104, out s2_105, out s3_106, out s4_107, out s5_108, out s6_109, out s7_110, out s8_111, out s9_112, out s10_113, out s11_114, out t4_115)
	return
exchange_func_exit:


void ble_auth_pairing_confirm(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ble_auth_pairing_confirm_entry:
l23055B54:
	word32 a0_5 = Mem0[0x4200F4B0<32>:int32]
	branch a0_5 != 0<32> l23055B6A
l23055B6A:
l23055B6A_thunk_bt_conn_auth_pairing_confirm:
	bt_conn_auth_pairing_confirm(a0_5)
	return
l23055B5E:
l23055B66_thunk_printf:
	word32 s1_81
	word32 a0_82
	word32 a1_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a7_88
	word32 s2_89
	word32 s3_90
	word32 s4_91
	word32 s5_92
	word32 s6_93
	word32 s7_94
	word32 s8_95
	word32 s9_96
	word32 s10_97
	word32 s11_98
	word32 t4_99
	printf(ra, 0x230B9228<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_81, out a0_82, out a1_83, out a2_84, out a3_85, out a4_86, out a5_87, out a7_88, out s2_89, out s3_90, out s4_91, out s5_92, out s6_93, out s7_94, out s8_95, out s9_96, out s10_97, out s11_98, out t4_99)
	return
ble_auth_pairing_confirm_exit:


void ble_auth_passkey_confirm(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ble_auth_passkey_confirm_entry:
l23055B6E:
	word32 a0_5 = Mem0[0x4200F4B0<32>:int32]
	branch a0_5 != 0<32> l23055B84
l23055B84:
l23055B84_thunk_bt_conn_auth_passkey_confirm:
	bt_conn_auth_passkey_confirm(a0_5)
	return
l23055B78:
l23055B80_thunk_printf:
	word32 s1_81
	word32 a0_82
	word32 a1_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a7_88
	word32 s2_89
	word32 s3_90
	word32 s4_91
	word32 s5_92
	word32 s6_93
	word32 s7_94
	word32 s8_95
	word32 s9_96
	word32 s10_97
	word32 s11_98
	word32 t4_99
	printf(ra, 0x230B9228<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_81, out a0_82, out a1_83, out a2_84, out a3_85, out a4_86, out a5_87, out a7_88, out s2_89, out s3_90, out s4_91, out s5_92, out s6_93, out s7_94, out s8_95, out s9_96, out s10_97, out s11_98, out t4_99)
	return
ble_auth_passkey_confirm_exit:


void ble_auth_cancel(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ble_auth_cancel_entry:
l23055B88:
	word32 a0_5 = Mem0[0x4200F4B0<32>:int32]
	branch a0_5 != 0<32> l23055B9E
l23055B9E:
l23055B9E_thunk_bt_conn_auth_cancel:
	bt_conn_auth_cancel(a0_5)
	return
l23055B92:
l23055B9A_thunk_printf:
	word32 s1_81
	word32 a0_82
	word32 a1_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a7_88
	word32 s2_89
	word32 s3_90
	word32 s4_91
	word32 s5_92
	word32 s6_93
	word32 s7_94
	word32 s8_95
	word32 s9_96
	word32 s10_97
	word32 s11_98
	word32 t4_99
	printf(ra, 0x230B9228<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_81, out a0_82, out a1_83, out a2_84, out a3_85, out a4_86, out a5_87, out a7_88, out s2_89, out s3_90, out s4_91, out s5_92, out s6_93, out s7_94, out s8_95, out s9_96, out s10_97, out s11_98, out t4_99)
	return
ble_auth_cancel_exit:


void ble_auth(word32 ra, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ble_auth_entry:
l23055BA2:
	word32 a0_13
	word32 a3_9
	branch bt_conn_auth_cb_register(0x4200DED0<32>, out a3_9) == 0<32> l23055BC4
l23055BC4:
	a0_13 = 0x230BC03C<32>
l23055BB4:
	a0_13 = 0x230BC010<32>
l23055BBC:
l23055BC0_thunk_printf:
	word32 a4_64
	word32 a5_65
	word32 a3_63
	word32 a2_62
	word32 a1_61
	word32 a0_60
	word32 s1_59
	word32 a7_66
	word32 s2_67
	word32 s3_68
	word32 s4_69
	word32 s5_70
	word32 s6_71
	word32 s7_72
	word32 s8_73
	word32 s9_74
	word32 s10_75
	word32 s11_76
	word32 t4_77
	printf(ra, a0_13, a3_9, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_59, out a0_60, out a1_61, out a2_62, out a3_63, out a4_64, out a5_65, out a7_66, out s2_67, out s3_68, out s4_69, out s5_70, out s6_71, out s7_72, out s8_73, out s9_74, out s10_75, out s11_76, out t4_77)
	return
ble_auth_exit:


void ble_security(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_security_entry:
l23055BCE:
	word32 a0_100
	byte bLoc11_137 = SLICE(s0, byte, 24)
	branch Mem5[0x4200F4B0<32>:int32] != 0<32> l23055BF2
l23055BF2:
	branch a2 != 2<32> l23055C08
l23055BFC:
	word32 a4_270
	word32 s8_271
	word32 a1_269
	get_uint8_from_string(0x4200F4B0<32>, a3 + 4<i32>, fp + 0xFFFFFFEF<32>, out a0, out a1_269, out a3, out a4_270, out s8_271)
l23055C08:
	word32 a0_44
	word32 mstatus_268
	word32 s3_267
	word32 s2_266
	word32 a4_265
	word32 s1_264
	ra = bt_conn_set_security(ra, Mem11[a0:word32], a0, CONVERT(bLoc11_137, byte, word32), a3, s2, s3, mstatus, dwLoc20, dwLoc1C, dwLoc18, s0, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1_264, out a0_44, out a3, out a4_265, out s2_266, out s3_267, out mstatus_268)
	branch a0_44 == 0<32> l23055C2A
l23055C2A:
	a0_100 = 0x230BC360<32>
l23055C16:
	word32 s1_272
	word32 a0_273
	word32 a1_274
	word32 a2_275
	word32 a3_276
	word32 a4_277
	word32 a5_278
	word32 a7_279
	word32 s2_280
	word32 s3_281
	word32 s4_282
	word32 s5_283
	word32 s6_284
	word32 s7_285
	word32 s8_286
	word32 s9_287
	word32 s10_288
	word32 s11_289
	word32 t4_290
	printf(ra, 0x230BC338<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_272, out a0_273, out a1_274, out a2_275, out a3_276, out a4_277, out a5_278, out a7_279, out s2_280, out s3_281, out s4_282, out s5_283, out s6_284, out s7_285, out s8_286, out s9_287, out s10_288, out s11_289, out t4_290)
l23055BE4:
	a0_100 = 0x230BC2F8<32>
l23055BEC:
	word32 s1_291
	word32 a0_292
	word32 a1_293
	word32 a2_294
	word32 a3_295
	word32 a4_296
	word32 a5_297
	word32 a7_298
	word32 s2_299
	word32 s3_300
	word32 s4_301
	word32 s5_302
	word32 s6_303
	word32 s7_304
	word32 s8_305
	word32 s9_306
	word32 s10_307
	word32 s11_308
	word32 t4_309
	printf(ra, a0_100, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_291, out a0_292, out a1_293, out a2_294, out a3_295, out a4_296, out a5_297, out a7_298, out s2_299, out s3_300, out s4_301, out s5_302, out s6_303, out s7_304, out s8_305, out s9_306, out s10_307, out s11_308, out t4_309)
l23055C22:
	return
ble_security_exit:


void ble_select_conn(word32 ra, word32 s0, word32 a2, word32 a3, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_select_conn_entry:
l23055C34:
	word32 a0_92
	branch a2 == 3<32> l23055C58
l23055C58:
	word32 s8_229
	word32 a4_228
	word32 a3_227
	word32 a1_226
	word32 a0_225
	get_uint8_from_string(s0, a3 + 4<i32>, fp + -24<i32>, out a0_225, out a1_226, out a3_227, out a4_228, out s8_229)
	word32 s3_234
	word32 s2_233
	word32 a3_232
	word32 a0_231
	word32 s1_230
	get_bytearray_from_string(fp + -32<i32>, 6<32>, dwArgF8, out s1_230, out a0_231, out a3_232, out s2_233, out s3_234)
	reverse_bytearray(fp + -32<i32>, fp + -23<i32>, 6<32>)
	word32 a0_61
	word32 a4_73
	word32 s8_241
	word32 s5_240
	word32 s4_239
	word32 s3_238
	word32 s2_237
	word32 a2_236
	word32 s1_235
	bt_conn_lookup_addr_le(0<32>, fp + -24<i32>, mstatus, out s1_235, out a0_61, out a2_236, out a3, out a4_73, out s2_237, out s3_238, out s4_239, out s5_240, out s8_241)
	word32 s1_77 = a0_61
	branch a0_61 != 0<32> l23055C94
l23055C94:
	branch Mem15[0x4200F4B0<32>:int32] == 0<32> l23055CA6
l23055CA2:
	word32 a3_261
	word32 a4_262
	word32 a5_263
	s1_77 = bt_conn_unref(0x4200F4B0<32>, a3, a4_73, mstatus, out a3_261, out a4_262, out a5_263)
l23055CA6:
	Mem90[s1_77:word32] = 0x4200F4B0<32>
l23055C8A:
	a0_92 = 0x230BC380<32>
l23055C42:
	a0_92 = 0x230B67B4<32>
l23055C4A:
	word32 a1_244
	word32 a2_245
	word32 a0_243
	word32 s1_242
	word32 a3_246
	word32 a4_247
	word32 a5_248
	word32 a7_249
	word32 s2_250
	word32 s3_251
	word32 s4_252
	word32 s5_253
	word32 s6_254
	word32 s7_255
	word32 s8_256
	word32 s9_257
	word32 s10_258
	word32 s11_259
	word32 t4_260
	printf(ra, a0_92, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_242, out a0_243, out a1_244, out a2_245, out a3_246, out a4_247, out a5_248, out a7_249, out s2_250, out s3_251, out s4_252, out s5_253, out s6_254, out s7_255, out s8_256, out s9_257, out s10_258, out s11_259, out t4_260)
l23055C4E:
	return
ble_select_conn_exit:


void ble_disconnect(word32 ra, word32 s0, word32 a2, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_disconnect_entry:
l23055CAA:
	word32 a0_152
	word32 dwLoc18_224
	byte bLoc21_193 = SLICE(s0, byte, 24)
	branch a2 == 3<32> l23055CD0
l23055CD0:
	word32 s8_314
	word32 a4_313
	word32 a3_312
	word32 a1_311
	word32 a0_310
	get_uint8_from_string(s0, a3 + 4<i32>, fp + -33<i32>, out a0_310, out a1_311, out a3_312, out a4_313, out s8_314)
	word32 s1_315
	word32 a0_316
	word32 a3_317
	word32 s2_318
	word32 s3_319
	get_bytearray_from_string(fp + -32<i32>, 6<32>, dwArgE8, out s1_315, out a0_316, out a3_317, out s2_318, out s3_319)
	reverse_bytearray(fp + -32<i32>, fp + -23<i32>, 6<32>)
	word32 a0_63
	word32 s1_67
	word32 s2_68
	word32 s3_69
	word32 a2_320
	word32 a4_321
	word32 s4_322
	word32 s5_323
	word32 s8_324
	bt_conn_lookup_addr_le(0<32>, fp + -24<i32>, mstatus, out s1_67, out a0_63, out a2_320, out a3, out a4_321, out s2_68, out s3_69, out s4_322, out s5_323, out s8_324)
	dwLoc18_224 = SEQ(nLoc17, SLICE(CONVERT(bLoc21_193, byte, word32), byte, 0)) (alias)
	branch a0_63 != 0<32> l23055D16
l23055D16:
	word32 a0_111
	word32 a0_81
	word32 s0_90
	word32 a3_93
	word32 mstatus_95
	word32 s1_325
	word32 a4_326
	word32 a5_327
	word32 s2_328
	word32 s3_329
	word32 s4_330
	word32 s5_331
	word32 ra_96 = bt_conn_disconnect(ra, a0_63, s1_67, a0_63, 0x13<32>, a3, s2_68, s3_69, mstatus, dwLoc40, dwLoc3C, dwLoc38, dwLoc34, dwLoc30, dwLoc2C, dwLoc28, s0, dwLoc1C, dwLoc18_224, dwLoc14, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg34, dwArg38, dwArg3C, a3, dwArg48, dwArg4C, dwArg54, dwArg58, ra, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_90, out s1_325, out a0_81, out a3_93, out a4_326, out a5_327, out s2_328, out s3_329, out s4_330, out s5_331, out mstatus_95)
	branch a0_81 == 0<32> l23055D32
l23055D32:
	a0_111 = 0x230BC174<32>
l23055D1E:
	a0_111 = 0x230BC15C<32>
l23055D26:
	word32 a3_124
	word32 a4_125
	word32 s1_351
	word32 a0_352
	word32 a1_353
	word32 a2_354
	word32 a5_355
	word32 a7_356
	word32 s2_357
	word32 s3_358
	word32 s4_359
	word32 s5_360
	word32 s6_361
	word32 s7_362
	word32 s8_363
	word32 s9_364
	word32 s10_365
	word32 s11_366
	word32 t4_367
	printf(ra_96, a0_111, a3_93, dwLoc38, dwLoc18_224, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_351, out a0_352, out a1_353, out a2_354, out a3_124, out a4_125, out a5_355, out a7_356, out s2_357, out s3_358, out s4_359, out s5_360, out s6_361, out s7_362, out s8_363, out s9_364, out s10_365, out s11_366, out t4_367)
	word32 a3_368
	word32 a4_369
	word32 a5_370
	bt_conn_unref(s0_90, a3_124, a4_125, mstatus_95, out a3_368, out a4_369, out a5_370)
l23055D0C:
	a0_152 = 0x230B9228<32>
l23055CBC:
	a0_152 = 0x230B67B4<32>
l23055CC4:
	word32 s1_332
	word32 a0_333
	word32 a1_334
	word32 a2_335
	word32 a3_336
	word32 a4_337
	word32 a5_338
	word32 a7_339
	word32 s2_340
	word32 s3_341
	word32 s4_342
	word32 s5_343
	word32 s6_344
	word32 s7_345
	word32 s8_346
	word32 s9_347
	word32 s10_348
	word32 s11_349
	word32 t4_350
	printf(ra, a0_152, a3, dwLoc38, dwLoc18_224, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_332, out a0_333, out a1_334, out a2_335, out a3_336, out a4_337, out a5_338, out a7_339, out s2_340, out s3_341, out s4_342, out s5_343, out s6_344, out s7_345, out s8_346, out s9_347, out s10_348, out s11_349, out t4_350)
l23055CC8:
	return
ble_disconnect_exit:


void ble_connect(word32 ra, word32 s0, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_connect_entry:
l23055D3C:
	word32 a0_155
	word24 nLoc1F_255 = SLICE(s2, word24, 8)
	word32 a4_301
	word32 a5_302
	word32 a1_299
	word32 a2_300
	word32 t1_297
	word32 a0_298
	word32 a3_126
	word32 ra_133 = memset(ra, fp + -40<i32>, 0<32>, 6<32>, out t1_297, out a0_298, out a1_299, out a2_300, out a3_126, out a4_301, out a5_302)
	branch a2 == 3<32> l23055D88
l23055D88:
	word32 s8_307
	word32 a4_306
	word32 a3_305
	word32 a0_303
	word32 a1_304
	get_uint8_from_string(a3, a3 + 4<i32>, fp + -41<i32>, out a0_303, out a1_304, out a3_305, out a4_306, out s8_307)
	word32 s3_311
	word32 s2_310
	word32 a0_309
	word32 s1_308
	word32 a3_60
	word32 s0_65 = get_bytearray_from_string(fp + -40<i32>, 6<32>, dwArgF8, out s1_308, out a0_309, out a3_60, out s2_310, out s3_311)
	word32 s2_103 = 0x230BC000<32>
	word32 dwLoc2C_224 = SEQ(0xFF<8>, nLoc2C)
	word32 dwLoc20_256 = SEQ(nLoc1F_255, 0xFF<8>)
l23055DB0:
	s0_65 = s0_65 + 1<32>
	word32 s1_100
	word32 t4_327
	word32 s11_326
	word32 s10_325
	word32 s9_324
	word32 s8_323
	word32 s7_322
	word32 s6_321
	word32 s5_320
	word32 s4_319
	word32 s3_318
	word32 a7_317
	word32 a5_316
	word32 a4_315
	word32 a2_314
	word32 a1_313
	word32 a0_312
	ra_133 = printf(ra_133, s2_103 + 196<i32>, a3_60, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_100, out a0_312, out a1_313, out a2_314, out a3_60, out a4_315, out a5_316, out a7_317, out s2_103, out s3_318, out s4_319, out s5_320, out s6_321, out s7_322, out s8_323, out s9_324, out s10_325, out s11_326, out t4_327)
	branch s0_65 != s1_100 l23055DB0
l23055DC8:
	reverse_bytearray(fp + -40<i32>, fp + -31<i32>, 6<32>)
	word32 a0_123
	ra_133 = bt_conn_create_le(ra_133, s0_65, s1_100, fp + -32<i32>, fp + -24<i32>, s2_103, mstatus, dwLoc30, dwLoc2C_224, dwLoc28, a4, dwLoc20_256, s0, dwLoc18, dwLoc14, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out a0_123, out a3_126)
	branch a0_123 != 0<32> l23055DE8
l23055DE8:
	a0_155 = 0x230BC0EC<32>
l23055DDE:
	a0_155 = 0x230BC0D8<32>
l23055D70:
	a0_155 = 0x230B67B4<32>
l23055D78:
	word32 a3_332
	word32 a2_331
	word32 a1_330
	word32 a0_329
	word32 s1_328
	word32 a4_333
	word32 a5_334
	word32 a7_335
	word32 s2_336
	word32 s3_337
	word32 s4_338
	word32 s5_339
	word32 s6_340
	word32 s7_341
	word32 s8_342
	word32 s9_343
	word32 s10_344
	word32 s11_345
	word32 t4_346
	printf(ra_133, a0_155, a3_126, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_328, out a0_329, out a1_330, out a2_331, out a3_332, out a4_333, out a5_334, out a7_335, out s2_336, out s3_337, out s4_338, out s5_339, out s6_340, out s7_341, out s8_342, out s9_343, out s10_344, out s11_345, out t4_346)
	0<32> = dwArg0128
	return
ble_connect_exit:


void ble_stop_advertise(word32 ra, word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg70, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_stop_advertise_entry:
l23055DF2:
	word32 a0_39
	word32 a3_12
	word32 a0_37
	word32 s5_121
	word32 s1_115
	word32 a4_116
	word32 a5_117
	word32 s2_118
	word32 s3_119
	word32 s4_120
	word32 s6_122
	word32 s7_123
	word32 s8_124
	word32 s9_125
	word32 mstatus_126
	word32 ra_18 = bt_le_adv_stop(ra, s0, a3, a4, mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg54, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s1_115, out a0_37, out a3_12, out a4_116, out a5_117, out s2_118, out s3_119, out s4_120, out s5_121, out s6_122, out s7_123, out s8_124, out s9_125, out mstatus_126)
	branch a0_37 == 0<32> l23055E0C
l23055E0C:
	a0_39 = 0x230BC638<32>
l23055DFC:
	a0_39 = 0x230BC618<32>
l23055E04:
l23055E08_thunk_printf:
	word32 s1_127
	word32 a0_128
	word32 a1_129
	word32 a2_130
	word32 a3_131
	word32 a4_132
	word32 a5_133
	word32 a7_134
	word32 s2_135
	word32 s3_136
	word32 s4_137
	word32 s5_138
	word32 s6_139
	word32 s7_140
	word32 s8_141
	word32 s9_142
	word32 s10_143
	word32 s11_144
	word32 t4_145
	printf(ra_18, a0_39, a3_12, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_127, out a0_128, out a1_129, out a2_130, out a3_131, out a4_132, out a5_133, out a7_134, out s2_135, out s3_136, out s4_137, out s5_138, out s6_139, out s7_140, out s8_141, out s9_142, out s10_143, out s11_144, out t4_145)
	return
ble_stop_advertise_exit:


void ble_get_device_name(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ble_get_device_name_entry:
l23055E16:
	branch bt_get_name() == 0<32> l23055E32
l23055E32:
l23055E3E_thunk_printf:
	word32 s1_110
	word32 a0_111
	word32 a1_112
	word32 a2_113
	word32 a3_114
	word32 a4_115
	word32 a5_116
	word32 a7_117
	word32 s2_118
	word32 s3_119
	word32 s4_120
	word32 s5_121
	word32 s6_122
	word32 s7_123
	word32 s8_124
	word32 s9_125
	word32 s10_126
	word32 s11_127
	word32 t4_128
	printf(ra, 0x230BC278<32>, a3, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_110, out a0_111, out a1_112, out a2_113, out a3_114, out a4_115, out a5_116, out a7_117, out s2_118, out s3_119, out s4_120, out s5_121, out s6_122, out s7_123, out s8_124, out s9_125, out s10_126, out s11_127, out t4_128)
	return
l23055E20:
l23055E2E_thunk_printf:
	word32 s1_91
	word32 a0_92
	word32 a1_93
	word32 a2_94
	word32 a3_95
	word32 a4_96
	word32 a5_97
	word32 a7_98
	word32 s2_99
	word32 s3_100
	word32 s4_101
	word32 s5_102
	word32 s6_103
	word32 s7_104
	word32 s8_105
	word32 s9_106
	word32 s10_107
	word32 s11_108
	word32 t4_109
	printf(ra, 0x230BC264<32>, a3, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_91, out a0_92, out a1_93, out a2_94, out a3_95, out a4_96, out a5_97, out a7_98, out s2_99, out s3_100, out s4_101, out s5_102, out s6_103, out s7_104, out s8_105, out s9_106, out s10_107, out s11_108, out t4_109)
	return
ble_get_device_name_exit:


void ble_start_advertise(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArg0124)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[16..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +0124:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_start_advertise_entry:
l23055E42:
	word32 a0_127
	byte bLoc2A_385 = SLICE(s4, byte, 16)
	byte bLoc29_395 = SLICE(s4, byte, 24)
	branch (a2 + -3<i32> & 0xFFFFFFFD<32>) == 0<32> l23055E66
l23055E66:
	word16 wLoc28_527
	word32 a5_72
	word32 a3_32
	word32 a1_655
	word32 a0_654
	word32 a4_656
	word32 s8_657
	word32 s0_37 = get_uint8_from_string(s0, a3 + 4<i32>, fp + -42<i32>, out a0_654, out a1_655, out a3_32, out a4_656, out s8_657)
	word32 s2_56
	word32 t4_674
	word32 s10_672
	word32 s11_673
	word32 s8_670
	word32 s9_671
	word32 s7_669
	word32 s6_668
	word32 s5_667
	word32 s4_666
	word32 s3_665
	word32 a7_664
	word32 a1_660
	word32 a2_661
	word32 a4_662
	word32 a5_663
	word32 s1_658
	word32 a0_659
	ra = printf(ra, 0x230BC52C<32>, a3_32, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_658, out a0_659, out a1_660, out a2_661, out a3, out a4_662, out a5_663, out a7_664, out s2_56, out s3_665, out s4_666, out s5_667, out s6_668, out s7_669, out s8_670, out s9_671, out s10_672, out s11_673, out t4_674)
	word32 a5_66 = CONVERT(bLoc2A_385, byte, word32)
	branch a5_66 != 0<32> l23055F7A
l23055F7A:
	branch a5_66 != 1<32> l23055F84
l23055F84:
	branch a5_66 != 2<32> l23055F90
l23055F90:
	a0_127 = 0x230BC53C<32>
l23055F8A:
	wLoc28_527 = 0<16> (alias)
l23055F80:
	a5_72 = 8<32>
l23055EA2:
	a5_72 = 0xB<32>
l23055EA4:
	wLoc28_527 = SEQ(SLICE(a5_72, byte, 0), 0<8>) (alias)
l23055EA8:
	word32 a3_87
	word32 a0_771
	word32 a1_772
	word32 a4_773
	word32 s8_774
	get_uint8_from_string(s0_37, s2_56 + 8<i32>, fp + -41<i32>, out a0_771, out a1_772, out a3_87, out a4_773, out s8_774)
	word32 s3_115
	word32 s10_785
	word32 s11_786
	word32 t4_787
	word32 a7_781
	word32 s4_782
	word32 s6_783
	word32 s9_784
	word32 a0_776
	word32 a1_777
	word32 a2_778
	word32 a4_779
	word32 a5_780
	word32 s1_775
	word32 s2_114
	word32 s7_119
	word32 s5_117
	word32 s8_120
	ra = printf(ra, 0x230BC550<32>, a3_87, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_775, out a0_776, out a1_777, out a2_778, out a3, out a4_779, out a5_780, out a7_781, out s2_114, out s3_115, out s4_782, out s5_117, out s6_783, out s7_119, out s8_120, out s9_784, out s10_785, out s11_786, out t4_787)
	word32 a5_124 = CONVERT(bLoc29_395, byte, word32)
	branch a5_124 >u 2<32> l23055FC4
l23055FC4:
	a0_127 = 0x230BC55C<32>
l23055ECE:
	word32 a5_135
	word32 dwLoc34_467
	word32 s1_128 = 0x4200E000<32>
	word32 s0_129 = 0x4200DEC0<32>
	branch a5_124 != 0<32> l23055F9A
l23055F9A:
	branch a5_124 != 1<32> l23055FB2
l23055FB2:
	Mem134[0x4200DEC0<32>:word16] = 0x101<16>
	a5_135 = fp + -44<i32>
l23055FA0:
	Mem139[0x4200DEC0<32>:word16] = 0x101<16>
	a5_135 = fp + -48<i32>
l23055ED8:
	Mem144[0x4200DEC0<32>:word16] = 0x101<16>
	a5_135 = fp + -52<i32>
	dwLoc34_467 = SEQ(nLoc33, 6<8>) (alias)
l23055EE8:
	word32 dwLoc28_531
	Mem148[a5_135 + 4<i32>:word32] = 0x4200DEC0<32>
	word32 a0_149 = bt_get_name()
	word32 a3_737
	word32 a4_738
	word32 a5_739
	word32 a1_735
	word32 a2_736
	word32 a0_151 = strlen(a0_149, out a1_735, out a2_736, out a3_737, out a4_738, out a5_739)
	Mem158[0x4200DEC8<32>:byte] = 9<8>
	Mem159[0x4200DEC9<32>:byte] = SLICE(a0_151, byte, 0)
	Mem160[0x4200DECC<32>:word32] = a0_149
	branch s3_115 != 5<32> l23055F3E
l23055F08:
	word32 a3_184
	word32 a2_681
	word32 a4_682
	word32 a5_683
	word32 a2_676
	word32 a3_677
	word32 a4_678
	word32 a5_679
	word32 a0_680
	word32 a0_675
	s0_129 = get_uint16_from_string(get_uint16_from_string(0x4200DEC0<32>, s2_114 + 12<i32>, fp + -38<i32>, out a0_675, out a2_676, out a3_677, out a4_678, out a5_679), s2_114 + 16<i32>, fp + -36<i32>, out a0_680, out a2_681, out a3_184, out a4_682, out a5_683)
	word32 a3_202
	word32 s9_712
	word32 s10_713
	word32 s11_714
	word32 t4_715
	word32 s4_710
	word32 s6_711
	word32 a3_705
	word32 a4_706
	word32 a5_707
	word32 a7_708
	word32 s3_709
	word32 s11_700
	word32 t4_701
	word32 a0_702
	word32 a1_703
	word32 a2_704
	word32 s7_696
	word32 s8_697
	word32 s9_698
	word32 s10_699
	word32 s2_691
	word32 s3_692
	word32 s4_693
	word32 s5_694
	word32 s6_695
	word32 a1_686
	word32 a2_687
	word32 a4_688
	word32 a5_689
	word32 a7_690
	word32 s1_684
	word32 a0_685
	ra = printf(printf(ra, 0x230BC570<32>, a3_184, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_684, out a0_685, out a1_686, out a2_687, out a3_202, out a4_688, out a5_689, out a7_690, out s2_691, out s3_692, out s4_693, out s5_694, out s6_695, out s7_696, out s8_697, out s9_698, out s10_699, out s11_700, out t4_701), 0x230BC584<32>, a3_202, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_128, out a0_702, out a1_703, out a2_704, out a3_705, out a4_706, out a5_707, out a7_708, out s2_114, out s3_709, out s4_710, out s5_117, out s6_711, out s7_119, out s8_120, out s9_712, out s10_713, out s11_714, out t4_715)
	dwLoc28_531 = SEQ(0xA0<16>, wLoc28_527) (alias)
l23055F3E:
	word32 a3_249
	branch CONVERT(bLoc2A_385, byte, word32) >u 1<32> l23055FCE
l23055FCE:
	a3_249 = 0<32>
l23055F48:
	a3_249 = s1_128 + -320<i32>
l23055F4E:
	word32 a0_282
	word32 s6_766
	word32 s7_767
	word32 s8_768
	word32 s9_769
	word32 mstatus_770
	word32 s3_764
	word32 s5_765
	word32 a4_762
	word32 s2_763
	word32 s0_759
	word32 s1_760
	word32 a1_761
	ra = bt_le_adv_start(ra, s0_129, fp + -40<i32>, a3_249, s2_114, s5_117, s7_119, s8_120, mstatus, dwLoc3C, dwLoc38, dwLoc34_467, dwLoc28_531, dwLoc1C, dwLoc18, dwLoc14, dwLoc08, dwLoc04, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArg0124, out s0_759, out s1_760, out a0_282, out a1_761, out a3, out a4_762, out s2_763, out s3_764, out s5_765, out s6_766, out s7_767, out s8_768, out s9_769, out mstatus_770)
	branch a0_282 == 0<32> l23055FD4
l23055FD4:
	a0_127 = 0x230BC5C0<32>
l23055F5C:
	word32 s10_732
	word32 s11_733
	word32 t4_734
	word32 s5_727
	word32 s6_728
	word32 s7_729
	word32 s8_730
	word32 s9_731
	word32 a5_722
	word32 a7_723
	word32 s2_724
	word32 s3_725
	word32 s4_726
	word32 a0_717
	word32 a1_718
	word32 a2_719
	word32 a3_720
	word32 a4_721
	word32 s1_716
	printf(ra, 0x230BC598<32>, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_716, out a0_717, out a1_718, out a2_719, out a3_720, out a4_721, out a5_722, out a7_723, out s2_724, out s3_725, out s4_726, out s5_727, out s6_728, out s7_729, out s8_730, out s9_731, out s10_732, out s11_733, out t4_734)
l23055E58:
	a0_127 = 0x230B67B4<32>
l23055E60:
	word32 s11_757
	word32 t4_758
	word32 s6_752
	word32 s7_753
	word32 s8_754
	word32 s9_755
	word32 s10_756
	word32 a7_747
	word32 s2_748
	word32 s3_749
	word32 s4_750
	word32 s5_751
	word32 a1_742
	word32 a2_743
	word32 a3_744
	word32 a4_745
	word32 a5_746
	word32 s1_740
	word32 a0_741
	printf(ra, a0_127, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_740, out a0_741, out a1_742, out a2_743, out a3_744, out a4_745, out a5_746, out a7_747, out s2_748, out s3_749, out s4_750, out s5_751, out s6_752, out s7_753, out s8_754, out s9_755, out s10_756, out s11_757, out t4_758)
l23055F6A:
	return
ble_start_advertise_exit:


void ble_set_adv_channel(word32 ra, word32 s0, word32 a2, word32 a3, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
ble_set_adv_channel_entry:
l23055FDE:
	word32 a0_31
	branch a2 == 2<32> l23056000
l23056000:
	word32 a1_87
	word32 a0_86
	word32 a4_88
	word32 s8_89
	get_uint8_from_string(s0, a3 + 4<i32>, fp + 0xFFFFFFEF<32>, out a0_86, out a1_87, out a3, out a4_88, out s8_89)
	branch set_adv_channel_map(7<32>) != 0<32> l23056020
l23056020:
	a0_31 = 0x230BC3BC<32>
l23056016:
	a0_31 = 0x230BC3A0<32>
l23055FEE:
	a0_31 = 0x230B67B4<32>
l23055FF6:
	word32 s1_90
	word32 a0_91
	word32 a1_92
	word32 a2_93
	word32 a3_94
	word32 a4_95
	word32 a5_96
	word32 a7_97
	word32 s2_98
	word32 s3_99
	word32 s4_100
	word32 s5_101
	word32 s6_102
	word32 s7_103
	word32 s8_104
	word32 s9_105
	word32 s10_106
	word32 s11_107
	word32 t4_108
	printf(ra, a0_31, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_90, out a0_91, out a1_92, out a2_93, out a3_94, out a4_95, out a5_96, out a7_97, out s2_98, out s3_99, out s4_100, out s5_101, out s6_102, out s7_103, out s8_104, out s9_105, out s10_106, out s11_107, out t4_108)
	return
ble_set_adv_channel_exit:


void ble_stop_scan(word32 ra, word32 s0, word32 a3, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg70, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_stop_scan_entry:
l2305602A:
	word32 a0_12
	word32 a3_15
	word32 s6_170
	word32 s5_169
	word32 s4_168
	word32 s3_167
	word32 s2_166
	word32 a4_165
	word32 s1_164
	word32 s7_171
	word32 s8_172
	word32 s9_173
	word32 mstatus_174
	word32 ra_25 = bt_le_scan_stop(ra, s0, a3, a4, s2, s3, mstatus, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg44, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s1_164, out a0_12, out a3_15, out a4_165, out s2_166, out s3_167, out s4_168, out s5_169, out s6_170, out s7_171, out s8_172, out s9_173, out mstatus_174)
	branch a0_12 == 0<32> l23056046
l23056046:
l23056052_thunk_printf:
	word32 s1_194
	word32 a0_195
	word32 a1_196
	word32 a2_197
	word32 a3_198
	word32 a4_199
	word32 a5_200
	word32 a7_201
	word32 s2_202
	word32 s3_203
	word32 s4_204
	word32 s5_205
	word32 s6_206
	word32 s7_207
	word32 s8_208
	word32 s9_209
	word32 s10_210
	word32 s11_211
	word32 t4_212
	printf(ra_25, 0x230BC674<32>, a3_15, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_194, out a0_195, out a1_196, out a2_197, out a3_198, out a4_199, out a5_200, out a7_201, out s2_202, out s3_203, out s4_204, out s5_205, out s6_206, out s7_207, out s8_208, out s9_209, out s10_210, out s11_211, out t4_212)
	return
l23056034:
l23056042_thunk_printf:
	word32 s1_175
	word32 a0_176
	word32 a1_177
	word32 a2_178
	word32 a3_179
	word32 a4_180
	word32 a5_181
	word32 a7_182
	word32 s2_183
	word32 s3_184
	word32 s4_185
	word32 s5_186
	word32 s6_187
	word32 s7_188
	word32 s8_189
	word32 s9_190
	word32 s10_191
	word32 s11_192
	word32 t4_193
	printf(ra_25, 0x230BC650<32>, a3_15, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_175, out a0_176, out a1_177, out a2_178, out a3_179, out a4_180, out a5_181, out a7_182, out s2_183, out s3_184, out s4_185, out s5_186, out s6_187, out s7_188, out s8_189, out s9_190, out s10_191, out s11_192, out t4_193)
	return
ble_stop_scan_exit:


void ble_disable(word32 ra, word32 s0, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg70, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_disable_entry:
l23056056:
	word32 a0_38
	word32 a0_9
	word32 a3_14
	word32 ra_19 = bt_disable(ra, s0, a4, mstatus, dwLoc08, dwArg08, dwArg14, dwArg40, dwArg44, dwArg48, dwArg50, dwArg54, dwArg68, ra, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, out a0_9, out a3_14)
	branch a0_9 == 0<32> l23056070
l23056070:
	a0_38 = 0x230BC140<32>
l23056060:
	a0_38 = 0x230BC104<32>
l23056068:
l2305606C_thunk_printf:
	word32 a5_121
	word32 s1_115
	word32 a0_116
	word32 a1_117
	word32 a2_118
	word32 a3_119
	word32 a4_120
	word32 a7_122
	word32 s2_123
	word32 s3_124
	word32 s4_125
	word32 s5_126
	word32 s6_127
	word32 s7_128
	word32 s8_129
	word32 s9_130
	word32 s10_131
	word32 s11_132
	word32 t4_133
	printf(ra_19, a0_38, a3_14, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_115, out a0_116, out a1_117, out a2_118, out a3_119, out a4_120, out a5_121, out a7_122, out s2_123, out s3_124, out s4_125, out s5_126, out s6_127, out s7_128, out s8_129, out s9_130, out s10_131, out s11_132, out t4_133)
	return
ble_disable_exit:


void discover_func(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
discover_func_entry:
l2305607A:
	branch a1 != 0<32> l230560AC
l230560AC:
	word32 a5_13 = CONVERT(Mem9[a2 + 40<i32>:byte], byte, word32)
	branch a5_13 == 2<32> l230561D4
l230561D4:
	word32 s1_31
	word32 s2_868
	word32 a7_867
	word32 a5_866
	word32 a4_865
	word32 a3_864
	word32 a2_863
	word32 a1_862
	word32 a3_859
	word32 s1_860
	word32 a0_861
	word32 s3_869
	word32 s4_870
	word32 s5_871
	word32 s6_872
	word32 s7_873
	word32 s8_874
	word32 s9_875
	word32 s10_876
	word32 s11_877
	word32 t4_878
	printf(bt_uuid_to_str(ra, a0, fp + -56<i32>, 37<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s1_31, out a3_859), 0x230BC914<32>, CONVERT(Mem9[s1_31 + 4<i32>:uint16], uint16, word32), dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_860, out a0_861, out a1_862, out a2_863, out a3_864, out a4_865, out a5_866, out a7_867, out s2_868, out s3_869, out s4_870, out s5_871, out s6_872, out s7_873, out s8_874, out s9_875, out s10_876, out s11_877, out t4_878)
l230560B8:
	branch a5_13 <u 2<32> l230560E2
l230560E2:
	word32 s1_91
	word32 a3_879
	word32 s1_880
	word32 a0_881
	word32 a1_882
	word32 a2_883
	word32 a3_884
	word32 a4_885
	word32 a5_886
	word32 a7_887
	word32 s2_888
	word32 s3_889
	word32 s4_890
	word32 s5_891
	word32 s6_892
	word32 s7_893
	word32 s8_894
	word32 s9_895
	word32 s10_896
	word32 s11_897
	word32 t4_898
	printf(bt_uuid_to_str(ra, a0, fp + -56<i32>, 37<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s1_91, out a3_879), 0x230BC824<32>, CONVERT(Mem9[s1_91 + 4<i32>:uint16], uint16, word32), dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_880, out a0_881, out a1_882, out a2_883, out a3_884, out a4_885, out a5_886, out a7_887, out s2_888, out s3_889, out s4_890, out s5_891, out s6_892, out s7_893, out s8_894, out s9_895, out s10_896, out s11_897, out t4_898)
l230560BC:
	branch a5_13 == 3<32> l2305610A
l2305610A:
	word32 s1_151
	word32 a3_180
	word32 s1_184
	word32 a3_899
	word32 a0_900
	word32 a1_901
	word32 a2_902
	word32 a4_903
	word32 a5_904
	word32 a7_905
	word32 s2_906
	word32 s3_907
	word32 s4_908
	word32 s5_909
	word32 s6_910
	word32 s7_911
	word32 s8_912
	word32 s9_913
	word32 s10_914
	word32 s11_915
	word32 t4_916
	word32 ra_183 = printf(bt_uuid_to_str(ra, a0, fp + -56<i32>, 37<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s1_151, out a3_899), 0x230BC858<32>, CONVERT(Mem9[s1_151 + 4<i32>:uint16], uint16, word32), dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_184, out a0_900, out a1_901, out a2_902, out a3_180, out a4_903, out a5_904, out a7_905, out s2_906, out s3_907, out s4_908, out s5_909, out s6_910, out s7_911, out s8_912, out s9_913, out s10_914, out s11_915, out t4_916)
	word32 s0_198 = CONVERT(Mem9[s1_184 + 6<i32>:byte], byte, word32)
	word32 s1_917
	word32 a0_918
	word32 a1_919
	word32 a2_920
	word32 a4_921
	word32 a5_922
	word32 a7_923
	word32 s2_924
	word32 s3_925
	word32 s4_926
	word32 s5_927
	word32 s6_928
	word32 s7_929
	word32 s8_930
	word32 s9_931
	word32 s10_932
	word32 s11_933
	word32 t4_934
	word32 a3_205
	word32 ra_208 = printf(ra_183, 0x230BC898<32>, a3_180, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_917, out a0_918, out a1_919, out a2_920, out a3_205, out a4_921, out a5_922, out a7_923, out s2_924, out s3_925, out s4_926, out s5_927, out s6_928, out s7_929, out s8_930, out s9_931, out s10_932, out s11_933, out t4_934)
	branch (s0_198 & 1<i32>) == 0<32> l23056150
l23056144:
	word32 s1_955
	word32 a0_956
	word32 a1_957
	word32 a2_958
	word32 a4_959
	word32 a5_960
	word32 a7_961
	word32 s2_962
	word32 s3_963
	word32 s4_964
	word32 s5_965
	word32 s6_966
	word32 s7_967
	word32 s8_968
	word32 s9_969
	word32 s10_970
	word32 s11_971
	word32 t4_972
	ra_208 = printf(ra_208, 0x230BC8A8<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_955, out a0_956, out a1_957, out a2_958, out a3_205, out a4_959, out a5_960, out a7_961, out s2_962, out s3_963, out s4_964, out s5_965, out s6_966, out s7_967, out s8_968, out s9_969, out s10_970, out s11_971, out t4_972)
l23056150:
	branch (s0_198 & 2<i32>) == 0<32> l23056162
l23056156:
	word32 s1_973
	word32 a0_974
	word32 a1_975
	word32 a2_976
	word32 a4_977
	word32 a5_978
	word32 a7_979
	word32 s2_980
	word32 s3_981
	word32 s4_982
	word32 s5_983
	word32 s6_984
	word32 s7_985
	word32 s8_986
	word32 s9_987
	word32 s10_988
	word32 s11_989
	word32 t4_990
	ra_208 = printf(ra_208, 0x230BC8B4<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_973, out a0_974, out a1_975, out a2_976, out a3_205, out a4_977, out a5_978, out a7_979, out s2_980, out s3_981, out s4_982, out s5_983, out s6_984, out s7_985, out s8_986, out s9_987, out s10_988, out s11_989, out t4_990)
l23056162:
	branch (s0_198 & 8<i32>) == 0<32> l23056174
l23056168:
	word32 s1_991
	word32 a0_992
	word32 a1_993
	word32 a2_994
	word32 a4_995
	word32 a5_996
	word32 a7_997
	word32 s2_998
	word32 s3_999
	word32 s4_1000
	word32 s5_1001
	word32 s6_1002
	word32 s7_1003
	word32 s8_1004
	word32 s9_1005
	word32 s10_1006
	word32 s11_1007
	word32 t4_1008
	ra_208 = printf(ra_208, 0x230BC8C0<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_991, out a0_992, out a1_993, out a2_994, out a3_205, out a4_995, out a5_996, out a7_997, out s2_998, out s3_999, out s4_1000, out s5_1001, out s6_1002, out s7_1003, out s8_1004, out s9_1005, out s10_1006, out s11_1007, out t4_1008)
l23056174:
	branch (s0_198 & 4<i32>) == 0<32> l23056186
l2305617A:
	word32 s1_1009
	word32 a0_1010
	word32 a1_1011
	word32 a2_1012
	word32 a4_1013
	word32 a5_1014
	word32 a7_1015
	word32 s2_1016
	word32 s3_1017
	word32 s4_1018
	word32 s5_1019
	word32 s6_1020
	word32 s7_1021
	word32 s8_1022
	word32 s9_1023
	word32 s10_1024
	word32 s11_1025
	word32 t4_1026
	ra_208 = printf(ra_208, 0x230BC8CC<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_1009, out a0_1010, out a1_1011, out a2_1012, out a3_205, out a4_1013, out a5_1014, out a7_1015, out s2_1016, out s3_1017, out s4_1018, out s5_1019, out s6_1020, out s7_1021, out s8_1022, out s9_1023, out s10_1024, out s11_1025, out t4_1026)
l23056186:
	branch (s0_198 & 16<i32>) == 0<32> l23056198
l2305618C:
	word32 s1_1027
	word32 a0_1028
	word32 a1_1029
	word32 a2_1030
	word32 a4_1031
	word32 a5_1032
	word32 a7_1033
	word32 s2_1034
	word32 s3_1035
	word32 s4_1036
	word32 s5_1037
	word32 s6_1038
	word32 s7_1039
	word32 s8_1040
	word32 s9_1041
	word32 s10_1042
	word32 s11_1043
	word32 t4_1044
	ra_208 = printf(ra_208, 0x230BC8E0<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_1027, out a0_1028, out a1_1029, out a2_1030, out a3_205, out a4_1031, out a5_1032, out a7_1033, out s2_1034, out s3_1035, out s4_1036, out s5_1037, out s6_1038, out s7_1039, out s8_1040, out s9_1041, out s10_1042, out s11_1043, out t4_1044)
l23056198:
	branch (s0_198 & 32<i32>) == 0<32> l230561AA
l2305619E:
	word32 s1_1045
	word32 a0_1046
	word32 a1_1047
	word32 a2_1048
	word32 a4_1049
	word32 a5_1050
	word32 a7_1051
	word32 s2_1052
	word32 s3_1053
	word32 s4_1054
	word32 s5_1055
	word32 s6_1056
	word32 s7_1057
	word32 s8_1058
	word32 s9_1059
	word32 s10_1060
	word32 s11_1061
	word32 t4_1062
	ra_208 = printf(ra_208, 0x230BC8EC<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_1045, out a0_1046, out a1_1047, out a2_1048, out a3_205, out a4_1049, out a5_1050, out a7_1051, out s2_1052, out s3_1053, out s4_1054, out s5_1055, out s6_1056, out s7_1057, out s8_1058, out s9_1059, out s10_1060, out s11_1061, out t4_1062)
l230561AA:
	branch (s0_198 & 64<i32>) == 0<32> l230561BC
l230561B0:
	word32 s1_1063
	word32 a0_1064
	word32 a1_1065
	word32 a2_1066
	word32 a4_1067
	word32 a5_1068
	word32 a7_1069
	word32 s2_1070
	word32 s3_1071
	word32 s4_1072
	word32 s5_1073
	word32 s6_1074
	word32 s7_1075
	word32 s8_1076
	word32 s9_1077
	word32 s10_1078
	word32 s11_1079
	word32 t4_1080
	ra_208 = printf(ra_208, 0x230BC8F8<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_1063, out a0_1064, out a1_1065, out a2_1066, out a3_205, out a4_1067, out a5_1068, out a7_1069, out s2_1070, out s3_1071, out s4_1072, out s5_1073, out s6_1074, out s7_1075, out s8_1076, out s9_1077, out s10_1078, out s11_1079, out t4_1080)
l230561BC:
	branch CONVERT(SLICE(s0_198, byte, 0), byte, int32) >= 0<32> l230560A0
l230561C6:
	word32 s1_1081
	word32 a0_1082
	word32 a1_1083
	word32 a2_1084
	word32 a3_1085
	word32 a4_1086
	word32 a5_1087
	word32 a7_1088
	word32 s2_1089
	word32 s3_1090
	word32 s4_1091
	word32 s5_1092
	word32 s6_1093
	word32 s7_1094
	word32 s8_1095
	word32 s9_1096
	word32 s10_1097
	word32 s11_1098
	word32 t4_1099
	printf(ra_208, 0x230BC904<32>, a3_205, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_1081, out a0_1082, out a1_1083, out a2_1084, out a3_1085, out a4_1086, out a5_1087, out a7_1088, out s2_1089, out s3_1090, out s4_1091, out s5_1092, out s6_1093, out s7_1094, out s8_1095, out s9_1096, out s10_1097, out s11_1098, out t4_1099)
l230560C2:
	word32 a3_465
	word32 s1_935
	word32 s1_936
	word32 a0_937
	word32 a1_938
	word32 a2_939
	word32 a3_940
	word32 a4_941
	word32 a5_942
	word32 a7_943
	word32 s2_944
	word32 s3_945
	word32 s4_946
	word32 s5_947
	word32 s6_948
	word32 s7_949
	word32 s8_950
	word32 s9_951
	word32 s10_952
	word32 s11_953
	word32 t4_954
	printf(bt_uuid_to_str(ra, a0, fp + -56<i32>, 37<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s1_935, out a3_465), 0x230BC944<32>, a3_465, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_936, out a0_937, out a1_938, out a2_939, out a3_940, out a4_941, out a5_942, out a7_943, out s2_944, out s3_945, out s4_946, out s5_947, out s6_948, out s7_949, out s8_950, out s9_951, out s10_952, out s11_953, out t4_954)
l23056106:
l23056086:
	word32 s1_529
	word32 a2_855
	word32 a3_856
	word32 a4_857
	word32 a5_858
	word32 s9_848
	word32 s10_849
	word32 s11_850
	word32 t4_851
	word32 t1_852
	word32 a0_853
	word32 a1_854
	word32 s2_841
	word32 s3_842
	word32 s4_843
	word32 s5_844
	word32 s6_845
	word32 s7_846
	word32 s8_847
	word32 a0_834
	word32 a1_835
	word32 a2_836
	word32 a3_837
	word32 a4_838
	word32 a5_839
	word32 a7_840
	memset(printf(ra, 0x230BC810<32>, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_529, out a0_834, out a1_835, out a2_836, out a3_837, out a4_838, out a5_839, out a7_840, out s2_841, out s3_842, out s4_843, out s5_844, out s6_845, out s7_846, out s8_847, out s9_848, out s10_849, out s11_850, out t4_851), s1_529, 0<32>, 44<i32>, out t1_852, out a0_853, out a1_854, out a2_855, out a3_856, out a4_857, out a5_858)
l230560A0:
	return
discover_func_exit:


void ble_set_data_len(word32 ra, word32 s1, word32 a2, word32 a3, word32 s2, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_set_data_len_entry:
l230561FE:
	word32 a0_107
	branch a2 == 3<32> l23056218
l23056218:
	word32 s0_11 = Mem7[3<32>:word32]
	branch true l2305622E
l2305622E:
	word32 a3_19
	word32 a3_34
	word32 a4_35
	word32 a5_36
	word32 a0_227
	word32 a2_228
	word32 a4_229
	word32 a5_230
	word32 a0_231
	word32 a2_232
	get_uint16_from_string(get_uint16_from_string(s0_11, a3 + 4<i32>, fp + -20<i32>, out a0_227, out a2_228, out a3_19, out a4_229, out a5_230), a3_19 + 8<i32>, fp + -18<i32>, out a0_231, out a2_232, out a3_34, out a4_35, out a5_36)
	word32 a0_50
	word32 s0_233
	word32 mstatus_234
	ra = bt_le_set_data_len(ra, s1, a3_34, a4_35, a5_36, s2, s3, mstatus, dwLoc2C, dwLoc28, dwLoc18, dwArg08, dwArg20, dwArg24, dwArg30, dwArg44, dwArg48, a3, dwArg58, ra, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s0_233, out a0_50, out a3, out mstatus_234)
	branch a0_50 == 0<32> l2305626E
l2305626E:
	a0_107 = 0x230BC408<32>
l2305625A:
	word32 s1_254
	word32 a0_255
	word32 a1_256
	word32 a2_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	word32 a7_261
	word32 s2_262
	word32 s3_263
	word32 s4_264
	word32 s5_265
	word32 s6_266
	word32 s7_267
	word32 s8_268
	word32 s9_269
	word32 s10_270
	word32 s11_271
	word32 t4_272
	printf(ra, 0x230BC3D8<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_254, out a0_255, out a1_256, out a2_257, out a3_258, out a4_259, out a5_260, out a7_261, out s2_262, out s3_263, out s4_264, out s5_265, out s6_266, out s7_267, out s8_268, out s9_269, out s10_270, out s11_271, out t4_272)
l23056224:
	a0_107 = 0x230B9228<32>
l2305620A:
	a0_107 = 0x230B67B4<32>
l23056212:
	word32 s1_235
	word32 a0_236
	word32 a1_237
	word32 a2_238
	word32 a3_239
	word32 a4_240
	word32 a5_241
	word32 a7_242
	word32 s2_243
	word32 s3_244
	word32 s4_245
	word32 s5_246
	word32 s6_247
	word32 s7_248
	word32 s8_249
	word32 s9_250
	word32 s10_251
	word32 s11_252
	word32 t4_253
	printf(ra, a0_107, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_235, out a0_236, out a1_237, out a2_238, out a3_239, out a4_240, out a5_241, out a7_242, out s2_243, out s3_244, out s4_245, out s5_246, out s6_247, out s7_248, out s8_249, out s9_250, out s10_251, out s11_252, out t4_253)
l23056266:
	return
ble_set_data_len_exit:


void ble_subscribe(word32 ra, word32 s1, word32 a2, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg3C, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +003C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_subscribe_entry:
l23056278:
	word32 a0_101
	branch a2 == 4<32> l2305628A
l2305628A:
	branch true l230562B8
l230562B8:
	word32 a0_282
	word32 a2_283
	word32 a3_284
	word32 a4_285
	word32 a5_286
	word32 s0_32 = get_uint16_from_string(a3, a3 + 4<i32>, 0x42017042<32>, out a0_282, out a2_283, out a3_284, out a4_285, out a5_286)
	word32 a0_287
	word32 a2_288
	word32 a3_289
	word32 a4_290
	word32 a5_291
	word32 s0_46 = get_uint16_from_string(s0_32, s0_32 + 8<i32>, 0x42017040<32>, out a0_287, out a2_288, out a3_289, out a4_290, out a5_291)
	word32 a0_52
	word32 a2_292
	word32 a3_293
	word32 a4_294
	word32 a5_295
	get_uint16_from_string(s0_46, s0_46 + 12<i32>, 0x42017044<32>, out a0_52, out a2_292, out a3_293, out a4_294, out a5_295)
	Mem68[0x4201703C<32>:word32] = 0x2305599C<32>
	word32 a0_70
	ra = bt_gatt_subscribe(ra, a0_52, 0x4201701C<32>, mstatus, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg14, dwArg18, dwArg1C, dwArg3C, s1, dwArg88, out a0_70, out a3)
	branch a0_70 == 0<32> l23056318
l23056318:
	a0_101 = 0x230BC6B0<32>
l23056300:
l23056314_thunk_printf:
	word32 s1_296
	word32 a0_297
	word32 a1_298
	word32 a2_299
	word32 a3_300
	word32 a4_301
	word32 a5_302
	word32 a7_303
	word32 s2_304
	word32 s3_305
	word32 s4_306
	word32 s5_307
	word32 s6_308
	word32 s7_309
	word32 s8_310
	word32 s9_311
	word32 s10_312
	word32 s11_313
	word32 t4_314
	printf(ra, 0x230BC694<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_296, out a0_297, out a1_298, out a2_299, out a3_300, out a4_301, out a5_302, out a7_303, out s2_304, out s3_305, out s4_306, out s5_307, out s6_308, out s7_309, out s8_310, out s9_311, out s10_312, out s11_313, out t4_314)
	return
l230562A2:
	a0_101 = 0x230B9228<32>
l230562AA:
l2305627E:
	a0_101 = 0x230B67B4<32>
l23056286:
l23056286_thunk_printf:
	word32 s1_263
	word32 a0_264
	word32 a1_265
	word32 a2_266
	word32 a3_267
	word32 a4_268
	word32 a5_269
	word32 a7_270
	word32 s2_271
	word32 s3_272
	word32 s4_273
	word32 s5_274
	word32 s6_275
	word32 s7_276
	word32 s8_277
	word32 s9_278
	word32 s10_279
	word32 s11_280
	word32 t4_281
	printf(ra, a0_101, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_263, out a0_264, out a1_265, out a2_266, out a3_267, out a4_268, out a5_269, out a7_270, out s2_271, out s3_272, out s4_273, out s5_274, out s6_275, out s7_276, out s8_277, out s9_278, out s10_279, out s11_280, out t4_281)
	return
ble_subscribe_exit:


void ble_write(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 s2, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg58, word32 dwArg5C, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA0, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_write_entry:
l23056322:
	word32 a0_147
	branch a2 == 5<32> l23056334
l23056334:
	branch Mem0[0x4200F4B0<32>:int32] != 0<32> l2305636C
l2305636C:
	branch Mem22[0x42017068<32>:word32] == 0<32> l23056386
l23056386:
	word32 a0_398
	word32 a2_399
	word32 a3_400
	word32 a4_401
	word32 a5_402
	word32 s0_40 = get_uint16_from_string(0x42017050<32>, a3 + 4<i32>, 0x4201706C<32>, out a0_398, out a2_399, out a3_400, out a4_401, out a5_402)
	word32 a0_403
	word32 a2_404
	word32 a3_405
	word32 a4_406
	word32 a5_407
	word32 s0_54 = get_uint16_from_string(s0_40, a3 + 8<i32>, s0_40 + 30<i32>, out a0_403, out a2_404, out a3_405, out a4_406, out a5_407)
	word32 a0_408
	word32 a2_409
	word32 a3_410
	word32 a4_411
	word32 a5_412
	word32 s3_72 = CONVERT(Mem22[get_uint16_from_string(s0_54, a3 + 12<i32>, s0_54 + 36<i32>, out a0_408, out a2_409, out a3_410, out a4_411, out a5_412) + 36<i32>:uint16], uint16, word32)
	branch s3_72 <=u 512<i32> l230563BC
l230563B8:
	s3_72 = 512<i32>
l230563BC:
	word32 a3_88
	word32 s1_94
	word32 s2_95
	word32 s3_96
	word32 a0_413
	word32 s0_93 = get_bytearray_from_string(0x42016DF4<32>, CONVERT(SLICE(s3_72, word16, 0), word16, word32), dwArg0108, out s1_94, out a0_413, out a3_88, out s2_95, out s3_96)
	word32 a0_106 = Mem22[0x4200F4B0<32>:int32]
	Mem110[s0_93 + 32<i32>:word32] = 0x42016DF4<32>
	Mem111[s0_93 + 36<i32>:word16] = SLICE(s3_96, word16, 0)
	Mem112[0x23055ABE<32>:word32] = s0_93
	word32 a0_116
	ra = bt_gatt_write(ra, s1_94, a0_106, s2_95 + 80<i32>, a3_88, s2_95, s3_96, mstatus, dwLoc20, s4, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA0, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0128, out a0_116, out a3)
	branch a0_116 == 0<32> l23056414
l23056414:
	a0_147 = 0x230BC764<32>
l230563F8:
l23056410_thunk_printf:
	word32 s1_414
	word32 a0_415
	word32 a1_416
	word32 a2_417
	word32 a3_418
	word32 a4_419
	word32 a5_420
	word32 a7_421
	word32 s2_422
	word32 s3_423
	word32 s4_424
	word32 s5_425
	word32 s6_426
	word32 s7_427
	word32 s8_428
	word32 s9_429
	word32 s10_430
	word32 s11_431
	word32 t4_432
	printf(ra, 0x230BC74C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_414, out a0_415, out a1_416, out a2_417, out a3_418, out a4_419, out a5_420, out a7_421, out s2_422, out s3_423, out s4_424, out s5_425, out s6_426, out s7_427, out s8_428, out s9_429, out s10_430, out s11_431, out t4_432)
	return
l2305637C:
	a0_147 = 0x230BC73C<32>
l23056352:
	a0_147 = 0x230B9228<32>
l2305635A:
l23056328:
	a0_147 = 0x230B67B4<32>
l23056330:
l23056330_thunk_printf:
	word32 s2_387
	word32 a7_386
	word32 a5_385
	word32 a4_384
	word32 a3_383
	word32 a2_382
	word32 a1_381
	word32 a0_380
	word32 s1_379
	word32 s3_388
	word32 s4_389
	word32 s5_390
	word32 s6_391
	word32 s7_392
	word32 s8_393
	word32 s9_394
	word32 s10_395
	word32 s11_396
	word32 t4_397
	printf(ra, a0_147, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_379, out a0_380, out a1_381, out a2_382, out a3_383, out a4_384, out a5_385, out a7_386, out s2_387, out s3_388, out s4_389, out s5_390, out s6_391, out s7_392, out s8_393, out s9_394, out s10_395, out s11_396, out t4_397)
	return
ble_write_exit:


void ble_read(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg58, word32 dwArg5C, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA0, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_read_entry:
l2305641E:
	word32 a0_121
	branch a2 == 3<32> l23056430
l23056430:
	word32 s0_9 = Mem7[3<32>:word32]
	branch true l2305645E
l2305645E:
	word32 a0_38
	word32 a2_40
	word32 a3_41
	word32 a0_288
	word32 a2_289
	word32 a3_290
	word32 a4_291
	word32 a5_292
	word32 a4_293
	word32 a5_294
	get_uint16_from_string(get_uint16_from_string(s0_9, a3 + 4<i32>, 0x42017014<32>, out a0_288, out a2_289, out a3_290, out a4_291, out a5_292), a3 + 8<i32>, 0x42017016<32>, out a0_38, out a2_40, out a3_41, out a4_293, out a5_294)
	Mem53[0x230564D6<32>:word32] = 0x42016FF4<32>
	Mem56[0x1D<32>:word32] = 0x42016FF4<32>
	word32 a0_58
	word32 s0_295
	word32 s1_296
	word32 s2_297
	word32 s3_298
	word32 mstatus_299
	ra = bt_gatt_read(ra, 0x42016FF4<32>, a0_38, a2_40, a3_41, a3, 0x42017000<32>, mstatus, dwLoc20, dwLoc1C, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA0, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0128, out s0_295, out s1_296, out a0_58, out a3, out s2_297, out s3_298, out mstatus_299)
	branch a0_58 == 0<32> l230564B4
l230564B4:
	a0_121 = 0x230BC2B0<32>
l2305649C:
l230564B0_thunk_printf:
	word32 s1_300
	word32 a0_301
	word32 a1_302
	word32 a2_303
	word32 a3_304
	word32 a4_305
	word32 a5_306
	word32 a7_307
	word32 s2_308
	word32 s3_309
	word32 s4_310
	word32 s5_311
	word32 s6_312
	word32 s7_313
	word32 s8_314
	word32 s9_315
	word32 s10_316
	word32 s11_317
	word32 t4_318
	printf(ra, 0x230BC298<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_300, out a0_301, out a1_302, out a2_303, out a3_304, out a4_305, out a5_306, out a7_307, out s2_308, out s3_309, out s4_310, out s5_311, out s6_312, out s7_313, out s8_314, out s9_315, out s10_316, out s11_317, out t4_318)
	return
l23056448:
	a0_121 = 0x230B9228<32>
l23056450:
l23056424:
	a0_121 = 0x230B67B4<32>
l2305642C:
l2305642C_thunk_printf:
	word32 s1_269
	word32 a0_270
	word32 a1_271
	word32 a2_272
	word32 a3_273
	word32 a4_274
	word32 a5_275
	word32 a7_276
	word32 s2_277
	word32 s3_278
	word32 s4_279
	word32 s5_280
	word32 s6_281
	word32 s7_282
	word32 s8_283
	word32 s9_284
	word32 s10_285
	word32 s11_286
	word32 t4_287
	printf(ra, a0_121, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_269, out a0_270, out a1_271, out a2_272, out a3_273, out a4_274, out a5_275, out a7_276, out s2_277, out s3_278, out s4_279, out s5_280, out s6_281, out s7_282, out s8_283, out s9_284, out s10_285, out s11_286, out t4_287)
	return
ble_read_exit:


void read_func(word32 ra, word32 s1, word32 a3, word32 dwArg30, word32 dwArg34, word32 dwArg7C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
read_func_entry:
l230564BE:
	word32 s1_34
	word32 s9_277
	word32 s10_278
	word32 s11_279
	word32 t4_280
	word32 s8_276
	word32 s7_275
	word32 s6_274
	word32 s5_273
	word32 s4_272
	word32 a7_271
	word32 a5_270
	word32 a4_269
	word32 a2_267
	word32 a3_268
	word32 a0_265
	word32 a1_266
	word32 t1_281
	word32 a0_282
	word32 a1_283
	word32 a2_284
	word32 a3_285
	word32 a4_286
	word32 a5_287
	word32 s2_108
	word32 s3_131
	word32 ra_115 = memset(printf(ra, 0x230BCA14<32>, a3, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_34, out a0_265, out a1_266, out a2_267, out a3_268, out a4_269, out a5_270, out a7_271, out s2_108, out s3_131, out s4_272, out s5_273, out s6_274, out s7_275, out s8_276, out s9_277, out s10_278, out s11_279, out t4_280), fp + -56<i32>, 0<32>, 0xF<32>, out t1_281, out a0_282, out a1_283, out a2_284, out a3_285, out a4_286, out a5_287)
	branch CONVERT(SLICE(s1_34 + -1<i32>, word16, 0), word16, word32) <=u 0x15<32> l2305651C
l2305651C:
	word32 a3_71
	word32 a1_288
	word32 a2_289
	word32 a4_290
	word32 a5_291
	word32 a6_292
	word32 a7_293
	memcpy(fp + -56<i32>, s2_108, s1_34, out a1_288, out a2_289, out a3_71, out a4_290, out a5_291, out a6_292, out a7_293)
	word32 a0_294
	word32 a1_295
	word32 a2_296
	word32 a4_297
	word32 a5_298
	word32 a7_299
	word32 s4_300
	word32 s5_301
	word32 s6_302
	word32 s7_303
	word32 s8_304
	word32 s9_305
	word32 s10_306
	word32 s11_307
	word32 t4_308
	word32 s1_107
	word32 a3_116
	ra_115 = printf(ra_115, 0x230BCA38<32>, a3_71, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_107, out a0_294, out a1_295, out a2_296, out a3_116, out a4_297, out a5_298, out a7_299, out s2_108, out s3_131, out s4_300, out s5_301, out s6_302, out s7_303, out s8_304, out s9_305, out s10_306, out s11_307, out t4_308)
	word32 s0_104 = 0<32>
	word32 s4_105 = 0x230BD000<32>
l2305653A:
	branch s0_104 >= s1_107 l230564F8
l2305653E:
	s0_104 = s0_104 + 1<32>
	word32 a0_316
	word32 a1_317
	word32 a2_318
	word32 a4_319
	word32 a5_320
	word32 a7_321
	word32 s5_322
	word32 s6_323
	word32 s7_324
	word32 s8_325
	word32 s9_326
	word32 s10_327
	word32 s11_328
	word32 t4_329
	ra_115 = printf(ra_115, s4_105 + -1460<i32>, a3_116, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_107, out a0_316, out a1_317, out a2_318, out a3_116, out a4_319, out a5_320, out a7_321, out s2_108, out s3_131, out s4_105, out s5_322, out s6_323, out s7_324, out s8_325, out s9_326, out s10_327, out s11_328, out t4_329)
l230564F8:
	branch s2_108 != 0<32> l2305650C
l230564FE:
	word32 t1_309
	word32 a0_310
	word32 a1_311
	word32 a2_312
	word32 a3_313
	word32 a4_314
	word32 a5_315
	memset(ra_115, s3_131, 0<32>, 40<i32>, out t1_309, out a0_310, out a1_311, out a2_312, out a3_313, out a4_314, out a5_315)
l2305650C:
	return
read_func_exit:


void data_cb(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
data_cb_entry:
l23056552:
	branch CONVERT(Mem0[a0:byte], byte, word32) >u 0xFFFFFFF7<32> l23056584
l23056584:
	return
l2305655E:
	word32 a2_12 = CONVERT(Mem11[a0 + 1<i32>:byte], byte, word32)
	branch a2_12 <=u 0x1D<32> l23056570
l2305656E:
	a2_12 = 0x1D<32>
l23056570:
	word32 a1_68
	word32 a2_69
	word32 a3_70
	word32 a4_71
	word32 a5_72
	word32 a6_73
	word32 a7_74
	memcpy(a1, a1, a2_12 & 255<i32>, out a1_68, out a2_69, out a3_70, out a4_71, out a5_72, out a6_73, out a7_74)
	return
data_cb_exit:


void ble_discover(word32 ra, word32 s0, word32 a2, word32 a3, word32 s4, word32 dwArg00, word32 dwArg04, word32 dwArg40, word32 dwArg44, word32 dwArg4C, word32 dwArg68, word32 dwArg8C, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] ra:[0..31] s0:[0..31] s4:[24..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ble_discover_entry:
l23056588:
	word32 a0_155
	byte bLoc21_227 = SLICE(s4, byte, 24)
	branch a2 == 5<32> l230565AC
l230565AC:
	branch Mem17[0x4200F4B0<32>:int32] != 0<32> l230565C4
l230565C4:
	Mem27[0x23056096<32>:word32] = 0x42016DAC<32>
	Mem33[0x42016DCC<32>:word16] = 1<16>
	Mem34[0x42016DD2<32>:word16] = 0xFFFF<16>
	word32 a1_356
	word32 a4_357
	word32 s8_358
	word32 a0_355
	get_uint8_from_string(s0, a3 + 4<i32>, fp + -33<i32>, out a0_355, out a1_356, out a3, out a4_357, out s8_358)
	word32 a5_48 = CONVERT(bLoc21_227, byte, word32)
	branch a5_48 != 0<32> l23056668
l23056668:
	branch a5_48 != 1<32> l23056672
l23056672:
	branch a5_48 == 2<32> l2305666C
l23056678:
	branch a5_48 == 3<32> l2305666C
l2305667E:
	branch a5_48 == 4<32> l2305666C
l23056684:
	a0_155 = 0x230BC190<32>
l2305666C:
	Mem57[0x42016DD4<32>:byte] = SLICE(a5_48, byte, 0)
l230565FA:
	Mem58[0x42016DD4<32>:byte] = 0<8>
l230565FE:
	word32 a3_393
	word32 a4_394
	word32 a5_395
	word32 a0_391
	word32 a2_392
	word32 s0_74 = get_uint16_from_string(0x42016DAC<32>, a3 + 8<i32>, 0x4200F4B6<32>, out a0_391, out a2_392, out a3_393, out a4_394, out a5_395)
	word32 s2_80 = 0x4200F4B4<32>
	branch CONVERT(Mem78[0x4200F4B6<32>:uint16], uint16, word32) != 0<32> l2305661E
l2305661C:
	s2_80 = 0<32>
l2305661E:
	Mem87[s0_74 + 24<i32>:word32] = s2_80
	word32 a4_381
	word32 a5_382
	word32 a0_378
	word32 a2_379
	word32 a3_380
	word32 s0_96 = get_uint16_from_string(s0_74, a3 + 12<i32>, s0_74 + 32<i32>, out a0_378, out a2_379, out a3_380, out a4_381, out a5_382)
	word32 a3_105
	word32 a2_384
	word32 a4_385
	word32 a5_386
	word32 a0_383
	get_uint16_from_string(s0_96, a3 + 16<i32>, s0_96 + 38<i32>, out a0_383, out a2_384, out a3_105, out a4_385, out a5_386)
	word32 a0_129
	word32 s3_390
	word32 s0_387
	word32 s1_388
	word32 s2_389
	ra = bt_gatt_discover(ra, 0x42017000<32>, Mem87[0x4200F4B0<32>:int32], 0x42016DAC<32>, a3_105, s2_80, 0x4200F4B4<32>, dwArg00, dwArg04, dwArg4C, dwArgA4, dwArgC0, dwArgC4, dwArgE8, dwArg0108, out s0_387, out s1_388, out a0_129, out a3, out s2_389, out s3_390)
	branch a0_129 == 0<32> l2305668E
l2305668E:
	a0_155 = 0x230BC1C8<32>
l2305664A:
	word32 a7_403
	word32 a5_402
	word32 s5_407
	word32 s4_406
	word32 s3_405
	word32 s8_410
	word32 s6_408
	word32 s7_409
	word32 s10_412
	word32 s11_413
	word32 s9_411
	word32 s2_404
	word32 a2_399
	word32 a3_400
	word32 a4_401
	word32 s1_396
	word32 a0_397
	word32 a1_398
	word32 t4_414
	printf(ra, 0x230BC1AC<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_396, out a0_397, out a1_398, out a2_399, out a3_400, out a4_401, out a5_402, out a7_403, out s2_404, out s3_405, out s4_406, out s5_407, out s6_408, out s7_409, out s8_410, out s9_411, out s10_412, out s11_413, out t4_414)
l230565BA:
	a0_155 = 0x230B9228<32>
l2305659E:
	a0_155 = 0x230B67B4<32>
l230565A6:
	word32 s10_375
	word32 s11_376
	word32 t4_377
	word32 s7_372
	word32 s8_373
	word32 s9_374
	word32 s6_371
	word32 s5_370
	word32 s4_369
	word32 s3_368
	word32 s2_367
	word32 a7_366
	word32 a1_361
	word32 a2_362
	word32 a3_363
	word32 a4_364
	word32 a5_365
	word32 s1_359
	word32 a0_360
	printf(ra, a0_155, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_359, out a0_360, out a1_361, out a2_362, out a3_363, out a4_364, out a5_365, out a7_366, out s2_367, out s3_368, out s4_369, out s5_370, out s6_371, out s7_372, out s8_373, out s9_374, out s10_375, out s11_376, out t4_377)
l23056656:
	0<32> = dwArg0128
	return
ble_discover_exit:


void ble_auth_passkey(word32 ra, word32 a0, word32 a2, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: s0 sp
ble_auth_passkey_entry:
l23056698:
	word32 a0_42
	branch a2 == 2<32> l230566AA
l230566AA:
	dwArg74 = ra
	branch true l230566CC
l230566CC:
	word32 a1_182
	word32 a2_183
	word32 a4_184
	word32 a5_185
	word32 a0_14 = atoi(a0, out a1_182, out a2_183, out a3, out a4_184, out a5_185)
	branch a0_14 <=u 0xF423F<32> l230566EA
l230566EA:
l230566F2_thunk_bt_conn_auth_passkey_entry:
	bt_conn_auth_passkey_entry(a0_14)
	return
l230566E0:
	a0_42 = 0x230BC064<32>
l230566BC:
	a0_42 = 0x230B9228<32>
l230566C4:
l2305669E:
	a0_42 = 0x230B67B4<32>
l230566A6:
l230566A6_thunk_printf:
	word32 s1_163
	word32 a0_164
	word32 a1_165
	word32 a2_166
	word32 a3_167
	word32 a4_168
	word32 a5_169
	word32 a7_170
	word32 s2_171
	word32 s3_172
	word32 s4_173
	word32 s5_174
	word32 s6_175
	word32 s7_176
	word32 s8_177
	word32 s9_178
	word32 s10_179
	word32 s11_180
	word32 t4_181
	printf(ra, a0_42, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_163, out a0_164, out a1_165, out a2_166, out a3_167, out a4_168, out a5_169, out a7_170, out s2_171, out s3_172, out s4_173, out s5_174, out s6_175, out s7_176, out s8_177, out s9_178, out s10_179, out s11_180, out t4_181)
	return
ble_auth_passkey_exit:


void ble_conn_update(word32 ra, word32 s1, word32 a2, word32 a3, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_conn_update_entry:
l230566F6:
	word32 a0_105
	branch a2 == 5<32> l23056710
l23056710:
	word32 a0_241
	word32 a2_242
	word32 a3_243
	word32 a4_244
	word32 a5_245
	word32 s0_22 = get_uint16_from_string(a3, a3 + 4<i32>, fp + 0xFFFFFFE8<32>, out a0_241, out a2_242, out a3_243, out a4_244, out a5_245)
	word32 a0_246
	word32 a2_247
	word32 a3_248
	word32 a4_249
	word32 a5_250
	word32 s0_36 = get_uint16_from_string(s0_22, s0_22 + 8<i32>, fp + 0xFFFFFFEA<32>, out a0_246, out a2_247, out a3_248, out a4_249, out a5_250)
	word32 a0_251
	word32 a2_252
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 s0_50 = get_uint16_from_string(s0_36, s0_36 + 12<i32>, fp + 0xFFFFFFEC<32>, out a0_251, out a2_252, out a3_253, out a4_254, out a5_255)
	word32 a3_59
	word32 a0_256
	word32 a2_257
	word32 a4_258
	word32 a5_259
	get_uint16_from_string(s0_50, s0_50 + 16<i32>, fp + 0xFFFFFFEE<32>, out a0_256, out a2_257, out a3_59, out a4_258, out a5_259)
	word32 a0_87
	ra = bt_conn_le_param_update(ra, s1, Mem7[0x4200F4B0<32>:int32], fp + 0xFFFFFFE8<32>, a3_59, s3, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg58, dwArg5C, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out a0_87, out a3)
	branch a0_87 == 0<32> l23056764
l23056764:
	a0_105 = 0x230BC0AC<32>
l23056750:
	word32 s1_260
	word32 a0_261
	word32 a1_262
	word32 a2_263
	word32 a3_264
	word32 a4_265
	word32 a5_266
	word32 a7_267
	word32 s2_268
	word32 s3_269
	word32 s4_270
	word32 s5_271
	word32 s6_272
	word32 s7_273
	word32 s8_274
	word32 s9_275
	word32 s10_276
	word32 s11_277
	word32 t4_278
	printf(ra, 0x230BC08C<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_260, out a0_261, out a1_262, out a2_263, out a3_264, out a4_265, out a5_266, out a7_267, out s2_268, out s3_269, out s4_270, out s5_271, out s6_272, out s7_273, out s8_274, out s9_275, out s10_276, out s11_277, out t4_278)
l23056702:
	a0_105 = 0x230B67B4<32>
l2305670A:
	word32 s1_279
	word32 a0_280
	word32 a1_281
	word32 a2_282
	word32 a3_283
	word32 a4_284
	word32 a5_285
	word32 a7_286
	word32 s2_287
	word32 s3_288
	word32 s4_289
	word32 s5_290
	word32 s6_291
	word32 s7_292
	word32 s8_293
	word32 s9_294
	word32 s10_295
	word32 s11_296
	word32 t4_297
	printf(ra, a0_105, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_279, out a0_280, out a1_281, out a2_282, out a3_283, out a4_284, out a5_285, out a7_286, out s2_287, out s3_288, out s4_289, out s5_290, out s6_291, out s7_292, out s8_293, out s9_294, out s10_295, out s11_296, out t4_297)
l2305675C:
	return
ble_conn_update_exit:


void ble_unpair(word32 ra, word32 s0, word32 a2, word32 a3, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_unpair_entry:
l2305676E:
	word32 a0_89
	branch a2 == 3<32> l2305678A
l2305678A:
	word32 a0_189
	word32 a1_190
	word32 a3_191
	word32 a4_192
	word32 s8_193
	get_uint8_from_string(s0, a3 + 4<i32>, fp + -24<i32>, out a0_189, out a1_190, out a3_191, out a4_192, out s8_193)
	word32 s1_38
	word32 s2_39
	word32 a0_194
	word32 a3_195
	word32 s3_196
	word32 s0_37 = get_bytearray_from_string(fp + -32<i32>, 6<32>, dwArgF8, out s1_38, out a0_194, out a3_195, out s2_39, out s3_196)
	reverse_bytearray(fp + -32<i32>, fp + -23<i32>, 6<32>)
	word32 a0_59
	word32 s0_197
	word32 s1_198
	word32 s2_199
	word32 s3_200
	word32 s4_201
	word32 s5_202
	word32 mstatus_203
	ra = bt_unpair(ra, s0_37, s1_38, 0<32>, fp + -24<i32>, s2_39, s4, mstatus, dwLoc2C, dwLoc28, dwLoc24, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_197, out s1_198, out a0_59, out a3, out s2_199, out s3_200, out s4_201, out s5_202, out mstatus_203)
	branch a0_59 == 0<32> l230567C4
l230567C4:
	a0_89 = 0x230BC6D4<32>
l230567BA:
	a0_89 = 0x230BC6C0<32>
l23056778:
	a0_89 = 0x230B67B4<32>
l23056780:
	word32 s1_204
	word32 a0_205
	word32 a1_206
	word32 a2_207
	word32 a3_208
	word32 a4_209
	word32 a5_210
	word32 a7_211
	word32 s2_212
	word32 s3_213
	word32 s4_214
	word32 s5_215
	word32 s6_216
	word32 s7_217
	word32 s8_218
	word32 s9_219
	word32 s10_220
	word32 s11_221
	word32 t4_222
	printf(ra, a0_89, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_204, out a0_205, out a1_206, out a2_207, out a3_208, out a4_209, out a5_210, out a7_211, out s2_212, out s3_213, out s4_214, out s5_215, out s6_216, out s7_217, out s8_218, out s9_219, out s10_220, out s11_221, out t4_222)
	return
ble_unpair_exit:


void ble_start_scan(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 s2, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_start_scan_entry:
l230567CE:
	word32 a0_106
	branch a2 == 5<32> l230567E8
l230567E8:
	word32 a0_247
	word32 a1_248
	word32 a3_249
	word32 a4_250
	word32 s8_251
	word32 s0_22 = get_uint8_from_string(a3, a3 + 4<i32>, fp + 0xFFFFFFE8<32>, out a0_247, out a1_248, out a3_249, out a4_250, out s8_251)
	word32 a0_252
	word32 a1_253
	word32 a3_254
	word32 a4_255
	word32 s8_256
	word32 s0_36 = get_uint8_from_string(s0_22, s0_22 + 8<i32>, fp + 0xFFFFFFE9<32>, out a0_252, out a1_253, out a3_254, out a4_255, out s8_256)
	word32 a0_257
	word32 a2_258
	word32 a3_259
	word32 a4_260
	word32 a5_261
	word32 s0_50 = get_uint16_from_string(s0_36, s0_36 + 12<i32>, fp + 0xFFFFFFEA<32>, out a0_257, out a2_258, out a3_259, out a4_260, out a5_261)
	word32 a0_75
	word32 a0_262
	word32 a2_263
	word32 a3_264
	word32 a4_265
	word32 a5_266
	word32 s1_267
	word32 a1_268
	word32 a4_269
	word32 s2_270
	word32 s3_271
	word32 s4_272
	word32 s5_273
	word32 s6_274
	word32 s7_275
	word32 s11_276
	word32 mstatus_277
	ra = bt_le_scan_start(ra, get_uint16_from_string(s0_50, s0_50 + 16<i32>, fp + 0xFFFFFFEC<32>, out a0_262, out a2_263, out a3_264, out a4_265, out a5_266), s1, fp + 0xFFFFFFE8<32>, s2, s4, mstatus, dwLoc20, dwLoc1C, dwLoc18, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_267, out a0_75, out a1_268, out a3, out a4_269, out s2_270, out s3_271, out s4_272, out s5_273, out s6_274, out s7_275, out s11_276, out mstatus_277)
	branch a0_75 == 0<32> l2305683C
l2305683C:
	a0_106 = 0x230BC5FC<32>
l23056828:
	word32 s1_278
	word32 a0_279
	word32 a1_280
	word32 a2_281
	word32 a3_282
	word32 a4_283
	word32 a5_284
	word32 a7_285
	word32 s2_286
	word32 s3_287
	word32 s4_288
	word32 s5_289
	word32 s6_290
	word32 s7_291
	word32 s8_292
	word32 s9_293
	word32 s10_294
	word32 s11_295
	word32 t4_296
	printf(ra, 0x230BC5D8<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_278, out a0_279, out a1_280, out a2_281, out a3_282, out a4_283, out a5_284, out a7_285, out s2_286, out s3_287, out s4_288, out s5_289, out s6_290, out s7_291, out s8_292, out s9_293, out s10_294, out s11_295, out t4_296)
l230567DA:
	a0_106 = 0x230B67B4<32>
l230567E2:
	word32 s1_297
	word32 a0_298
	word32 a1_299
	word32 a2_300
	word32 a3_301
	word32 a4_302
	word32 a5_303
	word32 a7_304
	word32 s2_305
	word32 s3_306
	word32 s4_307
	word32 s5_308
	word32 s6_309
	word32 s7_310
	word32 s8_311
	word32 s9_312
	word32 s10_313
	word32 s11_314
	word32 t4_315
	printf(ra, a0_106, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_297, out a0_298, out a1_299, out a2_300, out a3_301, out a4_302, out a5_303, out a7_304, out s2_305, out s3_306, out s4_307, out s5_308, out s6_309, out s7_310, out s8_311, out s9_312, out s10_313, out s11_314, out t4_315)
l23056834:
	return
ble_start_scan_exit:


void ble_set_device_name(word32 ra, word32 s0, word32 s1, word32 a0, word32 s4, word32 s6, word32 s7, word32 s8, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg70, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
ble_set_device_name_entry:
l23056846:
	word32 a5_239
	word32 a4_238
	word32 a3_237
	word32 a2_236
	word32 a1_235
	word32 a0_12 = strlen(a0, out a1_235, out a2_236, out a3_237, out a4_238, out a5_239)
	branch a0_12 == 0<32> l23056886
l23056856:
	word32 a2_245
	word32 a3_246
	word32 a4_247
	word32 a5_248
	word32 a1_244
	a0_12 = strlen(a0_12, out a1_244, out a2_245, out a3_246, out a4_247, out a5_248)
	branch a0_12 >u 0x1D<32> l23056886
l23056886:
	word32 a3_30
	word32 a5_243
	word32 a4_242
	word32 a2_241
	word32 a1_240
	strlen(a0_12, out a1_240, out a2_241, out a3_30, out a4_242, out a5_243)
l2305689C_thunk_printf:
	word32 s1_272
	word32 a0_273
	word32 a1_274
	word32 a2_275
	word32 a3_276
	word32 a4_277
	word32 a5_278
	word32 a7_279
	word32 s2_280
	word32 s3_281
	word32 s4_282
	word32 s5_283
	word32 s6_284
	word32 s7_285
	word32 s8_286
	word32 s9_287
	word32 s10_288
	word32 s11_289
	word32 t4_290
	printf(ra, 0x230BC478<32>, a3_30, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_272, out a0_273, out a1_274, out a2_275, out a3_276, out a4_277, out a5_278, out a7_279, out s2_280, out s3_281, out s4_282, out s5_283, out s6_284, out s7_285, out s8_286, out s9_287, out s10_288, out s11_289, out t4_290)
	return
l23056862:
	word32 a0_103
	word32 a0_72
	word32 a3_75
	word32 s0_249
	word32 s1_250
	word32 s3_251
	word32 mstatus_252
	word32 ra_85 = bt_set_name(ra, s1, a0_12, s4, s6, s7, s8, mstatus, dwLoc10, s0, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg2C, dwArg38, dwArg44, dwArg48, dwArg4C, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_249, out s1_250, out a0_72, out a3_75, out s3_251, out mstatus_252)
	branch a0_72 == 0<32> l2305687C
l2305687C:
	a0_103 = 0x230BC454<32>
l2305686A:
	a0_103 = 0x230BC438<32>
l23056872:
l23056878_thunk_printf:
	word32 s1_253
	word32 a0_254
	word32 a1_255
	word32 a2_256
	word32 a3_257
	word32 a4_258
	word32 a5_259
	word32 a7_260
	word32 s2_261
	word32 s3_262
	word32 s4_263
	word32 s5_264
	word32 s6_265
	word32 s7_266
	word32 s8_267
	word32 s9_268
	word32 s10_269
	word32 s11_270
	word32 t4_271
	printf(ra_85, a0_103, a3_75, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_253, out a0_254, out a1_255, out a2_256, out a3_257, out a4_258, out a5_259, out a7_260, out s2_261, out s3_262, out s4_263, out s5_264, out s6_265, out s7_266, out s8_267, out s9_268, out s10_269, out s11_270, out t4_271)
	return
ble_set_device_name_exit:


void ble_init(word32 ra, word32 a3, word32 a4, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
ble_init_entry:
l230568A0:
	word32 a0_20
	branch CONVERT(Mem5[0x4200F4AC<32>:byte], byte, word32) == 0<32> l230568C6
l230568C6:
	Mem14[0x4200F4B0<32>:word32] = 0<32>
	bt_conn_cb_register(0x4200DEF0<32>, a4)
	Mem19[0x4200F4AC<32>:byte] = 1<8>
	a0_20 = 0x230B64A0<32>
l230568B4:
	a0_20 = 0x230B6478<32>
l230568BC:
l230568C2_thunk_printf:
	word32 a7_77
	word32 a5_76
	word32 a4_75
	word32 a3_74
	word32 a2_73
	word32 a1_72
	word32 a0_71
	word32 s1_70
	word32 s2_78
	word32 s3_79
	word32 s4_80
	word32 s5_81
	word32 s6_82
	word32 s7_83
	word32 s8_84
	word32 s9_85
	word32 s10_86
	word32 s11_87
	word32 t4_88
	printf(ra, a0_20, a3, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_70, out a0_71, out a1_72, out a2_73, out a3_74, out a4_75, out a5_76, out a7_77, out s2_78, out s3_79, out s4_80, out s5_81, out s6_82, out s7_83, out s8_84, out s9_85, out s10_86, out s11_87, out t4_88)
	return
ble_init_exit:


word32 bt_addr_le_to_str.constprop.14(word32 ra, word32 a0, word32 a1, word32 dwArg08, word32 dwArg34, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      device_found
//      ble_read_local_address
//      connected
//      disconnected
//      security_changed
//      auth_passkey_display
//      auth_passkey_entry
//      auth_passkey_confirm
//      auth_cancel
//      auth_pairing_confirm
//      auth_pairing_complete
//      auth_pairing_failed
//      identity_resolved
//      ble_get_all_conn_info
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0034:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 ra s0 s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bt_addr_le_to_str.constprop.14_entry:
l230568EA:
	word32 a1_20
	word32 a3_13 = CONVERT(Mem11[a0:byte], byte, word32)
	word32 s2_17 = a1
	word32 s1_18 = fp + -28<i32>
	branch a3_13 == 1<32> l2305696A
l2305696A:
	a1_20 = 0x230BAA00<32>
l23056904:
	branch a3_13 == 0<32> l23056924
l23056924:
	a1_20 = 0x230BA9F8<32>
l23056906:
	branch a3_13 == 2<32> l23056974
l23056974:
	a1_20 = 0x230BAA08<32>
l2305690C:
	branch a3_13 == 3<32> l2305697E
l2305697E:
	a1_20 = 0x230BAA14<32>
l2305692C:
	word32 a4_186
	word32 a5_187
	strcpy(fp + -28<i32>, a1_20, out a4_186, out a5_187)
l23056912:
	word32 s9_167
	word32 s10_168
	word32 s7_165
	word32 s8_166
	word32 s5_163
	word32 s6_164
	word32 s3_161
	word32 s4_162
	word32 a5_159
	word32 a7_160
	word32 a3_157
	word32 a4_158
	word32 a1_155
	word32 a2_156
	word32 s0_153
	word32 a0_154
	word32 s11_169
	ra = snprintf(ra, fp + -28<i32>, 0xA<32>, 0x230BAA20<32>, dwLoc18, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C, out s0_153, out s1_18, out a0_154, out a1_155, out a2_156, out a3_157, out a4_158, out a5_159, out a7_160, out s2_17, out s3_161, out s4_162, out s5_163, out s6_164, out s7_165, out s8_166, out s9_167, out s10_168, out s11_169)
l23056932:
	word32 a3_88
	word32 s1_94
	word32 s3_98
	word32 s0_170
	word32 a0_171
	word32 a1_172
	word32 a2_173
	word32 a4_174
	word32 a5_175
	word32 a7_176
	word32 s2_177
	word32 s4_178
	word32 s5_179
	word32 s6_180
	word32 s7_181
	word32 s8_182
	word32 s9_183
	word32 s10_184
	word32 s11_185
	word32 ra_92 = snprintf(ra, s2_17, 0x1E<32>, 0x230BAA28<32>, dwLoc18, dwArg08, dwArg34, s1_18, dwArg54, dwArg78, dwArg9C, out s0_170, out s1_94, out a0_171, out a1_172, out a2_173, out a3_88, out a4_174, out a5_175, out a7_176, out s2_177, out s3_98, out s4_178, out s5_179, out s6_180, out s7_181, out s8_182, out s9_183, out s10_184, out s11_185)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_94
	a3Out = a3_88
	s3Out = s3_98
	return ra_92
bt_addr_le_to_str.constprop.14_exit:


void device_found(word32 ra, word32 s2, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg5C, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +005C:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
device_found_entry:
l23056988:
	word32 a3_26
	word32 s2_40
	word32 s1_73
	word32 t1_142
	word32 a0_143
	word32 a1_144
	word32 a2_145
	word32 a4_146
	word32 a5_147
	word32 s0_148
	word32 a3_149
	word32 s3_150
	word32 s1_151
	word32 a0_152
	word32 a1_153
	word32 a2_154
	word32 a3_155
	word32 a4_156
	word32 a5_157
	word32 a7_158
	word32 s2_159
	word32 s3_160
	word32 s4_161
	word32 s5_162
	word32 s6_163
	word32 s7_164
	word32 s8_165
	word32 s9_166
	word32 s10_167
	word32 s11_168
	word32 t4_169
	printf(bt_addr_le_to_str.constprop.14(bt_data_parse(memset(ra, fp + -48<i32>, 0<32>, 0x1E<32>, out t1_142, out a0_143, out a1_144, out a2_145, out a3_26, out a4_146, out a5_147), a3_26, 0x23056552<32>, fp + -48<i32>, a3_26, dwArgC8, out s2_40), s2_40, fp + -80<i32>, dwLoc58, dwLoc2C, dwLoc10, dwLoc0C, dwArg18, dwArg3C, dwArgC8, out s0_148, out s1_73, out a3_149, out s3_150), 0x230BC7C4<32>, s1_73, dwLoc58, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_151, out a0_152, out a1_153, out a2_154, out a3_155, out a4_156, out a5_157, out a7_158, out s2_159, out s3_160, out s4_161, out s5_162, out s6_163, out s7_164, out s8_165, out s9_166, out s10_167, out s11_168, out t4_169)
	return
device_found_exit:


void ble_read_local_address(word32 ra, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_read_local_address_entry:
l230569DE:
	bt_get_local_public_address(fp + -64<i32>)
	word32 a3_26
	word32 s0_155
	word32 s1_156
	word32 s3_157
	word32 s1_158
	word32 a0_159
	word32 a1_160
	word32 a2_161
	word32 a3_162
	word32 a4_163
	word32 a5_164
	word32 a7_165
	word32 s2_166
	word32 s3_167
	word32 s4_168
	word32 s5_169
	word32 s6_170
	word32 s7_171
	word32 s8_172
	word32 s9_173
	word32 s10_174
	word32 s11_175
	word32 t4_176
	word32 ra_59 = printf(bt_addr_le_to_str.constprop.14(ra, fp + -64<i32>, fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_155, out s1_156, out a3_26, out s3_157), 0x230BC2C0<32>, a3_26, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_158, out a0_159, out a1_160, out a2_161, out a3_162, out a4_163, out a5_164, out a7_165, out s2_166, out s3_167, out s4_168, out s5_169, out s6_170, out s7_171, out s8_172, out s9_173, out s10_174, out s11_175, out t4_176)
	bt_get_local_ramdon_address(fp + -56<i32>)
	word32 a3_93
	word32 s0_177
	word32 s1_178
	word32 s3_179
	word32 s1_180
	word32 a0_181
	word32 a1_182
	word32 a2_183
	word32 a3_184
	word32 a4_185
	word32 a5_186
	word32 a7_187
	word32 s2_188
	word32 s3_189
	word32 s4_190
	word32 s5_191
	word32 s6_192
	word32 s7_193
	word32 s8_194
	word32 s9_195
	word32 s10_196
	word32 s11_197
	word32 t4_198
	printf(bt_addr_le_to_str.constprop.14(ra_59, fp + -56<i32>, fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_177, out s1_178, out a3_93, out s3_179), 0x230BC2DC<32>, a3_93, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_180, out a0_181, out a1_182, out a2_183, out a3_184, out a4_185, out a5_186, out a7_187, out s2_188, out s3_189, out s4_190, out s5_191, out s6_192, out s7_193, out s8_194, out s9_195, out s10_196, out s11_197, out t4_198)
	return
ble_read_local_address_exit:


void connected(word32 ra, word32 a0, word32 a1, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
connected_entry:
l23056A20:
	word32 a3_17
	word32 s0_23
	word32 s3_139
	word32 s1_138
	word32 ra_22 = bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_23, out s1_138, out a3_17, out s3_139)
	branch a1 == 0<32> l23056A4E
l23056A4E:
	word32 a4_49
	word32 s1_140
	word32 a0_141
	word32 a1_142
	word32 a2_143
	word32 a3_144
	word32 a5_145
	word32 a7_146
	word32 s2_147
	word32 s3_148
	word32 s4_149
	word32 s5_150
	word32 s6_151
	word32 s7_152
	word32 s8_153
	word32 s9_154
	word32 s10_155
	word32 s11_156
	word32 t4_157
	printf(ra_22, 0x230BC7B0<32>, a3_17, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_140, out a0_141, out a1_142, out a2_143, out a3_144, out a4_49, out a5_145, out a7_146, out s2_147, out s3_148, out s4_149, out s5_150, out s6_151, out s7_152, out s8_153, out s9_154, out s10_155, out s11_156, out t4_157)
	word32 a5_66 = Mem9[a4_49:word32]
	branch a4_49 != 0<32> l23056A46
l23056A66:
	Mem67[s0_23:word32] = a5_66
l23056A3A:
	word32 s1_158
	word32 a0_159
	word32 a1_160
	word32 a2_161
	word32 a3_162
	word32 a4_163
	word32 a5_164
	word32 a7_165
	word32 s2_166
	word32 s3_167
	word32 s4_168
	word32 s5_169
	word32 s6_170
	word32 s7_171
	word32 s8_172
	word32 s9_173
	word32 s10_174
	word32 s11_175
	word32 t4_176
	printf(ra_22, 0x230BC790<32>, a3_17, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_158, out a0_159, out a1_160, out a2_161, out a3_162, out a4_163, out a5_164, out a7_165, out s2_166, out s3_167, out s4_168, out s5_169, out s6_170, out s7_171, out s8_172, out s9_173, out s10_174, out s11_175, out t4_176)
l23056A46:
	return
connected_exit:


void disconnected(word32 ra, word32 a0, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
disconnected_entry:
l23056A6A:
	word32 a3_17
	word32 s0_23
	word32 a4_49
	word32 t4_133
	word32 s11_132
	word32 s10_131
	word32 s9_130
	word32 s8_129
	word32 s7_128
	word32 s6_127
	word32 s5_126
	word32 s4_125
	word32 s3_124
	word32 s2_123
	word32 a7_122
	word32 a5_121
	word32 a3_120
	word32 a2_119
	word32 a1_118
	word32 a0_117
	word32 s1_116
	word32 s3_115
	word32 s1_114
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_23, out s1_114, out a3_17, out s3_115), 0x230BC7F0<32>, a3_17, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_116, out a0_117, out a1_118, out a2_119, out a3_120, out a4_49, out a5_121, out a7_122, out s2_123, out s3_124, out s4_125, out s5_126, out s6_127, out s7_128, out s8_129, out s9_130, out s10_131, out s11_132, out t4_133)
	word32 a5_66 = Mem9[a4_49:word32]
	branch a4_49 != s0_23 l23056AA0
l23056A9C:
	Mem67[a5_66:word32] = 0<32>
l23056AA0:
	return
disconnected_exit:


void security_changed(word32 ra, word32 a0, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
security_changed_entry:
l23056AA8:
	word32 a3_14
	word32 s0_78
	word32 s1_79
	word32 s3_80
	word32 s1_81
	word32 a0_82
	word32 a1_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a7_88
	word32 s2_89
	word32 s3_90
	word32 s4_91
	word32 s5_92
	word32 s6_93
	word32 s7_94
	word32 s8_95
	word32 s9_96
	word32 s10_97
	word32 s11_98
	word32 t4_99
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_78, out s1_79, out a3_14, out s3_80), 0x230BCA5C<32>, a3_14, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_81, out a0_82, out a1_83, out a2_84, out a3_85, out a4_86, out a5_87, out a7_88, out s2_89, out s3_90, out s4_91, out s5_92, out s6_93, out s7_94, out s8_95, out s9_96, out s10_97, out s11_98, out t4_99)
	return
security_changed_exit:


void auth_passkey_display(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_passkey_display_entry:
l23056ACE:
	word32 a3_16
	word32 s0_82
	word32 s1_83
	word32 s3_84
	word32 s1_85
	word32 a0_86
	word32 a1_87
	word32 a2_88
	word32 a3_89
	word32 a4_90
	word32 a5_91
	word32 a7_92
	word32 s2_93
	word32 s3_94
	word32 s4_95
	word32 s5_96
	word32 s6_97
	word32 s7_98
	word32 s8_99
	word32 s9_100
	word32 s10_101
	word32 s11_102
	word32 t4_103
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_82, out s1_83, out a3_16, out s3_84), 0x230BBFE0<32>, a3_16, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_85, out a0_86, out a1_87, out a2_88, out a3_89, out a4_90, out a5_91, out a7_92, out s2_93, out s3_94, out s4_95, out s5_96, out s6_97, out s7_98, out s8_99, out s9_100, out s10_101, out s11_102, out t4_103)
	return
auth_passkey_display_exit:


void auth_passkey_entry(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_passkey_entry_entry:
l23056AF6:
	word32 a3_12
	word32 s0_75
	word32 s1_76
	word32 s3_77
	word32 s1_78
	word32 a0_79
	word32 a1_80
	word32 a2_81
	word32 a3_82
	word32 a4_83
	word32 a5_84
	word32 a7_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s5_89
	word32 s6_90
	word32 s7_91
	word32 s8_92
	word32 s9_93
	word32 s10_94
	word32 s11_95
	word32 t4_96
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_75, out s1_76, out a3_12, out s3_77), 0x230BBFF8<32>, a3_12, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_78, out a0_79, out a1_80, out a2_81, out a3_82, out a4_83, out a5_84, out a7_85, out s2_86, out s3_87, out s4_88, out s5_89, out s6_90, out s7_91, out s8_92, out s9_93, out s10_94, out s11_95, out t4_96)
	return
auth_passkey_entry_exit:


void auth_passkey_confirm(word32 ra, word32 a0, word32 dwArg10, word32 dwArg14, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_passkey_confirm_entry:
l23056B18:
	word32 a3_14
	word32 s0_78
	word32 s1_79
	word32 s3_80
	word32 s1_81
	word32 a0_82
	word32 a1_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a7_88
	word32 s2_89
	word32 s3_90
	word32 s4_91
	word32 s5_92
	word32 s6_93
	word32 s7_94
	word32 s8_95
	word32 s9_96
	word32 s10_97
	word32 s11_98
	word32 t4_99
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc38, dwLoc0C, dwArg10, dwArg14, dwArg38, ra, dwArgE8, out s0_78, out s1_79, out a3_14, out s3_80), 0x230BBFC0<32>, a3_14, dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_81, out a0_82, out a1_83, out a2_84, out a3_85, out a4_86, out a5_87, out a7_88, out s2_89, out s3_90, out s4_91, out s5_92, out s6_93, out s7_94, out s8_95, out s9_96, out s10_97, out s11_98, out t4_99)
	return
auth_passkey_confirm_exit:


void auth_cancel(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_cancel_entry:
l23056B3E:
	word32 a3_12
	word32 s0_75
	word32 s1_76
	word32 s3_77
	word32 s1_78
	word32 a0_79
	word32 a1_80
	word32 a2_81
	word32 a3_82
	word32 a4_83
	word32 a5_84
	word32 a7_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s5_89
	word32 s6_90
	word32 s7_91
	word32 s8_92
	word32 s9_93
	word32 s10_94
	word32 s11_95
	word32 t4_96
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_75, out s1_76, out a3_12, out s3_77), 0x230BBF50<32>, a3_12, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_78, out a0_79, out a1_80, out a2_81, out a3_82, out a4_83, out a5_84, out a7_85, out s2_86, out s3_87, out s4_88, out s5_89, out s6_90, out s7_91, out s8_92, out s9_93, out s10_94, out s11_95, out t4_96)
	return
auth_cancel_exit:


void auth_pairing_confirm(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_pairing_confirm_entry:
l23056B60:
	word32 a3_12
	word32 s0_75
	word32 s1_76
	word32 s3_77
	word32 s1_78
	word32 a0_79
	word32 a1_80
	word32 a2_81
	word32 a3_82
	word32 a4_83
	word32 a5_84
	word32 a7_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s5_89
	word32 s6_90
	word32 s7_91
	word32 s8_92
	word32 s9_93
	word32 s10_94
	word32 s11_95
	word32 t4_96
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_75, out s1_76, out a3_12, out s3_77), 0x230BBF88<32>, a3_12, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_78, out a0_79, out a1_80, out a2_81, out a3_82, out a4_83, out a5_84, out a7_85, out s2_86, out s3_87, out s4_88, out s5_89, out s6_90, out s7_91, out s8_92, out s9_93, out s10_94, out s11_95, out t4_96)
	return
auth_pairing_confirm_exit:


void auth_pairing_complete(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_pairing_complete_entry:
l23056B82:
	word32 a3_16
	word32 s0_22
	word32 s1_100
	word32 s3_101
	word32 ra_21 = bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_22, out s1_100, out a3_16, out s3_101)
	branch s0_22 != 0<32> l23056BB4
l23056BB4:
l23056B96:
l23056B9E:
	word32 a4_107
	word32 a3_106
	word32 a2_105
	word32 a1_104
	word32 a0_103
	word32 s1_102
	word32 a5_108
	word32 a7_109
	word32 s2_110
	word32 s3_111
	word32 s4_112
	word32 s5_113
	word32 s6_114
	word32 s7_115
	word32 s8_116
	word32 s9_117
	word32 s10_118
	word32 s11_119
	word32 t4_120
	printf(ra_21, 0x230BBF78<32>, a3_16, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_102, out a0_103, out a1_104, out a2_105, out a3_106, out a4_107, out a5_108, out a7_109, out s2_110, out s3_111, out s4_112, out s5_113, out s6_114, out s7_115, out s8_116, out s9_117, out s10_118, out s11_119, out t4_120)
	return
auth_pairing_complete_exit:


void auth_pairing_failed(word32 ra, word32 a0, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
auth_pairing_failed_entry:
l23056BBE:
	word32 a3_12
	word32 s0_75
	word32 s1_76
	word32 s3_77
	word32 s1_78
	word32 a0_79
	word32 a1_80
	word32 a2_81
	word32 a3_82
	word32 a4_83
	word32 a5_84
	word32 a7_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s5_89
	word32 s6_90
	word32 s7_91
	word32 s8_92
	word32 s9_93
	word32 s10_94
	word32 s11_95
	word32 t4_96
	printf(bt_addr_le_to_str.constprop.14(ra, bt_conn_get_dst(a0), fp + -48<i32>, dwLoc28, dwArg04, dwArg20, dwArg24, dwArg48, dwArg6C, dwArgF8, out s0_75, out s1_76, out a3_12, out s3_77), 0x230BBFA4<32>, a3_12, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_78, out a0_79, out a1_80, out a2_81, out a3_82, out a4_83, out a5_84, out a7_85, out s2_86, out s3_87, out s4_88, out s5_89, out s6_90, out s7_91, out s8_92, out s9_93, out s10_94, out s11_95, out t4_96)
	return
auth_pairing_failed_exit:


void identity_resolved(word32 ra, word32 a2, word32 dwArg00, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg4C, word32 dwArg6C, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +006C:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
identity_resolved_entry:
l23056BE0:
	word32 s0_22
	word32 a3_43
	word32 s1_110
	word32 a3_111
	word32 s3_112
	word32 s0_113
	word32 s1_114
	word32 s3_115
	word32 s1_116
	word32 a0_117
	word32 a1_118
	word32 a2_119
	word32 a3_120
	word32 a4_121
	word32 a5_122
	word32 a7_123
	word32 s2_124
	word32 s3_125
	word32 s4_126
	word32 s5_127
	word32 s6_128
	word32 s7_129
	word32 s8_130
	word32 s9_131
	word32 s10_132
	word32 s11_133
	word32 t4_134
	printf(bt_addr_le_to_str.constprop.14(bt_addr_le_to_str.constprop.14(ra, a2, fp + -80<i32>, dwLoc48, dwLoc1C, dwArg00, dwArg04, dwArg28, dwArg4C, dwArgD8, out s0_22, out s1_110, out a3_111, out s3_112), s0_22, fp + -48<i32>, dwLoc48, dwLoc1C, dwArg00, dwArg04, dwArg28, dwArg4C, dwArgD8, out s0_113, out s1_114, out a3_43, out s3_115), 0x230BC990<32>, a3_43, dwLoc48, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C, out s1_116, out a0_117, out a1_118, out a2_119, out a3_120, out a4_121, out a5_122, out a7_123, out s2_124, out s3_125, out s4_126, out s5_127, out s6_128, out s7_129, out s8_130, out s9_131, out s10_132, out s11_133, out t4_134)
	return
identity_resolved_exit:


void ble_get_all_conn_info(word32 ra, word32 dwArg18, word32 dwArg1C, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +00A8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
ble_get_all_conn_info_entry:
l23056C10:
	word32 ra_68
	word32 a3_26
	word32 a0_24 = bt_conn_get_remote_dev_info(fp + -88<i32>, out a3_26)
	ra_68 = ra
	branch a0_24 <= 0<32> l23056C3E
l23056C28:
	word32 a3_35
	word32 s0_274
	word32 s1_275
	word32 s3_276
	word32 s1_277
	word32 a0_278
	word32 a1_279
	word32 a2_280
	word32 a4_281
	word32 a5_282
	word32 a7_283
	word32 s2_284
	word32 s3_285
	word32 s4_286
	word32 s5_287
	word32 s6_288
	word32 s7_289
	word32 s8_290
	word32 s9_291
	word32 s10_292
	word32 s11_293
	word32 t4_294
	ra_68 = printf(bt_addr_le_to_str.constprop.14(ra, a0_24, fp + -120<i32>, dwLoc78, dwLoc4C, dwLoc30, dwLoc2C, dwLoc08, dwArg1C, dwArgA8, out s0_274, out s1_275, out a3_35, out s3_276), 0x230BC20C<32>, a3_35, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_277, out a0_278, out a1_279, out a2_280, out a3_26, out a4_281, out a5_282, out a7_283, out s2_284, out s3_285, out s4_286, out s5_287, out s6_288, out s7_289, out s8_290, out s9_291, out s10_292, out s11_293, out t4_294)
l23056C3E:
	word32 s9_270
	word32 s8_269
	word32 s7_268
	word32 s6_267
	word32 s5_266
	word32 s4_265
	word32 a7_263
	word32 s3_264
	word32 a4_261
	word32 a5_262
	word32 a2_259
	word32 a3_260
	word32 a0_257
	word32 a1_258
	word32 s1_256
	word32 s10_271
	word32 s11_272
	word32 t4_273
	word32 s2_102
	word32 ra_123 = printf(ra_68, 0x230BC22C<32>, a3_26, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_256, out a0_257, out a1_258, out a2_259, out a3_260, out a4_261, out a5_262, out a7_263, out s2_102, out s3_264, out s4_265, out s5_266, out s6_267, out s7_268, out s8_269, out s9_270, out s10_271, out s11_272, out t4_273)
	word32 s0_112 = fp + -88<i32>
	word32 s1_113 = 0<32>
l23056C54:
	word32 s0_116 = s0_112 + 0x1C<32>
	branch s1_113 < s2_102 l23056C68
l23056C68:
	word32 a3_127
	word32 s3_138
	word32 s1_161
	word32 s1_295
	word32 a0_296
	word32 a1_297
	word32 a2_298
	word32 a3_299
	word32 a4_300
	word32 a5_301
	word32 a7_302
	word32 s3_303
	word32 s4_304
	word32 s5_305
	word32 s6_306
	word32 s7_307
	word32 s8_308
	word32 s9_309
	word32 s10_310
	word32 s11_311
	word32 t4_312
	ra_123 = printf(bt_addr_le_to_str.constprop.14(ra_123, Mem14[s0_116 + -12<i32>:int32], fp + -120<i32>, dwLoc78, dwLoc4C, dwLoc30, dwLoc2C, dwLoc08, dwArg1C, dwArgA8, out s0_112, out s1_295, out a3_127, out s3_138), s3_138 + 592<i32>, a3_127, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_161, out a0_296, out a1_297, out a2_298, out a3_299, out a4_300, out a5_301, out a7_302, out s2_102, out s3_303, out s4_304, out s5_305, out s6_306, out s7_307, out s8_308, out s9_309, out s10_310, out s11_311, out t4_312)
	s1_113 = s1_161 + 1<32>
l23056C5A:
	return
ble_get_all_conn_info_exit:


void ble_write_without_rsp(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 s2, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB0, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[16..31] s1:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B0:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ble_write_without_rsp_entry:
l23056C82:
	word32 a0_162
	uint16 wLoc12_203 = SLICE(s0, uint16, 16)
	byte bLoc15_210 = SLICE(s2, byte, 24)
	branch a2 == 5<32> l23056CAA
l23056CAA:
	branch Mem11[0x4200F4B0<32>:int32] != 0<32> l23056CC2
l23056CC2:
	word32 a5_353
	word32 a4_352
	word32 a3_351
	word32 a2_350
	word32 a0_349
	word32 a5_348
	word32 a4_347
	word32 a3_346
	word32 a2_345
	word32 a0_339
	word32 a1_340
	word32 a3_341
	word32 a4_342
	word32 s8_343
	word32 a0_344
	get_uint16_from_string(get_uint16_from_string(get_uint8_from_string(0x4200F4B0<32>, a3 + 4<i32>, fp + 0xFFFFFFEB<32>, out a0_339, out a1_340, out a3_341, out a4_342, out s8_343), a3 + 8<i32>, fp + 0xFFFFFFEC<32>, out a0_344, out a2_345, out a3_346, out a4_347, out a5_348), a3 + 12<i32>, fp + 0xFFFFFFEE<32>, out a0_349, out a2_350, out a3_351, out a4_352, out a5_353)
	word32 a2_61 = CONVERT(wLoc12_203, uint16, word32)
	branch a2_61 <=u 512<i32> l23056CF6
l23056CF2:
	a2_61 = 512<i32>
l23056CF6:
	word32 a0_73
	word32 s3_84
	word32 s1_373
	word32 a3_374
	word32 s2_375
	get_bytearray_from_string(0x42016DF4<32>, CONVERT(SLICE(a2_61, word16, 0), word16, word32), dwArg0108, out s1_373, out a0_73, out a3_374, out s2_375, out s3_84)
	word32 a3_112
	word32 s1_376
	word32 a0_377
	word32 a1_378
	word32 a2_379
	word32 a3_380
	word32 a4_381
	word32 a5_382
	word32 a7_383
	word32 s2_384
	word32 s3_385
	word32 s4_386
	word32 s5_387
	word32 s6_388
	word32 s7_389
	word32 s8_390
	word32 s9_391
	word32 s10_392
	word32 s11_393
	word32 t4_394
	printf(bt_gatt_write_without_response_cb(ra, a0_73, CONVERT(SLICE(a2_61, word16, 0), word16, word32), CONVERT(bLoc15_210, byte, word32), s3_84, s5, s6, mstatus, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg2C, dwArg48, dwArg4C, dwArg54, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB0, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out a3_112), 0x230BC774<32>, a3_112, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_376, out a0_377, out a1_378, out a2_379, out a3_380, out a4_381, out a5_382, out a7_383, out s2_384, out s3_385, out s4_386, out s5_387, out s6_388, out s7_389, out s8_390, out s9_391, out s10_392, out s11_393, out t4_394)
l23056CB8:
	a0_162 = 0x230B9228<32>
l23056C92:
	a0_162 = 0x230B67B4<32>
l23056C9A:
	word32 a3_358
	word32 a4_359
	word32 a5_360
	word32 a2_357
	word32 a1_356
	word32 a0_355
	word32 s1_354
	word32 a7_361
	word32 s2_362
	word32 s3_363
	word32 s4_364
	word32 s5_365
	word32 s6_366
	word32 s7_367
	word32 s8_368
	word32 s9_369
	word32 s10_370
	word32 s11_371
	word32 t4_372
	printf(ra, a0_162, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_354, out a0_355, out a1_356, out a2_357, out a3_358, out a4_359, out a5_360, out a7_361, out s2_362, out s3_363, out s4_364, out s5_365, out s6_366, out s7_367, out s8_368, out s9_369, out s10_370, out s11_371, out t4_372)
l23056C9E:
	return
ble_write_without_rsp_exit:


void ble_cli_register()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_enable_cb
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
ble_cli_register_entry:
l23056D38:
	return
ble_cli_register_exit:


void ble_tp_recv()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
ble_tp_recv_entry:
l23056D3C:
	return
ble_tp_recv_exit:


void ble_tp_disconnected(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ble_tp_disconnected_entry:
l23056D40:
	word32 s1_45
	word32 a0_46
	word32 a1_47
	word32 a2_48
	word32 a3_49
	word32 a4_50
	word32 a5_51
	word32 a7_52
	word32 s2_53
	word32 s3_54
	word32 s4_55
	word32 s5_56
	word32 s6_57
	word32 s7_58
	word32 s8_59
	word32 s9_60
	word32 s10_61
	word32 s11_62
	word32 t4_63
	printf(ra, 0x230ABB4C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_45, out a0_46, out a1_47, out a2_48, out a3_49, out a4_50, out a5_51, out a7_52, out s2_53, out s3_54, out s4_55, out s5_56, out s6_57, out s7_58, out s8_59, out s9_60, out s10_61, out s11_62, out t4_63)
	Mem35[0x42026640<32>:word32] = 0<32>
	return
ble_tp_disconnected_exit:


void ble_tp_connected(word32 ra, word32 s0, word32 s1, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB0, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B0:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
ble_tp_connected_entry:
l23056D66:
	word32 ra_110
	word32 s1_111
	word32 a5_18
	word32 a3_22
	word32 a4_23
	word32 s1_26
	word32 s2_29
	word32 s3_30
	word32 t4_359
	word32 s11_358
	word32 s10_357
	word32 s9_356
	word32 s8_355
	word32 s7_354
	word32 s6_353
	word32 s5_352
	word32 a0_347
	word32 a1_348
	word32 a2_349
	word32 a7_350
	word32 s4_351
	word32 ra_25 = printf(ra, 0x230ABB4C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_26, out a0_347, out a1_348, out a2_349, out a3_22, out a4_23, out a5_18, out a7_350, out s2_29, out s3_30, out s4_351, out s5_352, out s6_353, out s7_354, out s8_355, out s9_356, out s10_357, out s11_358, out t4_359)
	Mem44[0x42026640<32>:word32] = s1_26
	word32 a0_46
	word32 a3_49
	word32 mstatus_54
	word32 s0_56
	word32 ra_55 = bt_le_set_data_len(ra_25, s1_26, a3_22, a4_23, a5_18, s2_29, s3_30, mstatus, s0, dwLoc08, dwArg08, dwArg28, dwArg40, dwArg44, dwArg50, dwArg64, dwArg68, ra, dwArg78, dwArg84, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, out s0_56, out a0_46, out a3_49, out mstatus_54)
	branch a0_46 != 0<32> l23056DE0
l23056DE0:
	word32 a3_363
	word32 a2_362
	word32 a1_361
	word32 a0_360
	word32 a4_364
	word32 a5_365
	word32 a7_366
	word32 s2_367
	word32 s3_368
	word32 s4_369
	word32 s5_370
	word32 s6_371
	word32 s7_372
	word32 s8_373
	word32 s9_374
	word32 s10_375
	word32 s11_376
	word32 t4_377
	ra_110 = printf(ra_55, 0x230BCD70<32>, a3_49, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_111, out a0_360, out a1_361, out a2_362, out a3_363, out a4_364, out a5_365, out a7_366, out s2_367, out s3_368, out s4_369, out s5_370, out s6_371, out s7_372, out s8_373, out s9_374, out s10_375, out s11_376, out t4_377)
l23056D9E:
	word32 a0_378
	word32 a1_379
	word32 a2_380
	word32 a3_381
	word32 a4_382
	word32 a5_383
	word32 a7_384
	word32 s2_385
	word32 s3_386
	word32 s4_387
	word32 s5_388
	word32 s6_389
	word32 s7_390
	word32 s8_391
	word32 s9_392
	word32 s10_393
	word32 s11_394
	word32 t4_395
	ra_110 = printf(ra_55, 0x230BCD4C<32>, a3_49, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_111, out a0_378, out a1_379, out a2_380, out a3_381, out a4_382, out a5_383, out a7_384, out s2_385, out s3_386, out s4_387, out s5_388, out s6_389, out s7_390, out s8_391, out s9_392, out s10_393, out s11_394, out t4_395)
l23056DAA:
	word32 a0_126 = Mem44[s0_56 + 1600<i32>:int32]
	Mem132[0x23056E8E<32>:word32] = 0x42026620<32>
	word32 a0_137
	word32 a3_138
	word32 ra_146 = bt_gatt_exchange_mtu(ra_110, s0_56, s1_111, a0_126, mstatus_54, dwLoc10, s0, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg48, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB0, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out a0_137, out a3_138)
	branch a0_137 != 0<32> l23056DF0
l23056DF0:
l23056E00_thunk_printf:
	word32 s1_415
	word32 a0_416
	word32 a1_417
	word32 a2_418
	word32 a3_419
	word32 a4_420
	word32 a5_421
	word32 a7_422
	word32 s2_423
	word32 s3_424
	word32 s4_425
	word32 s5_426
	word32 s6_427
	word32 s7_428
	word32 s8_429
	word32 s9_430
	word32 s10_431
	word32 s11_432
	word32 t4_433
	printf(ra_146, 0x230BCDC0<32>, a3_138, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_415, out a0_416, out a1_417, out a2_418, out a3_419, out a4_420, out a5_421, out a7_422, out s2_423, out s3_424, out s4_425, out s5_426, out s6_427, out s7_428, out s8_429, out s9_430, out s10_431, out s11_432, out t4_433)
	return
l23056DCC:
l23056DDC_thunk_printf:
	word32 s1_396
	word32 a0_397
	word32 a1_398
	word32 a2_399
	word32 a3_400
	word32 a4_401
	word32 a5_402
	word32 a7_403
	word32 s2_404
	word32 s3_405
	word32 s4_406
	word32 s5_407
	word32 s6_408
	word32 s7_409
	word32 s8_410
	word32 s9_411
	word32 s10_412
	word32 s11_413
	word32 t4_414
	printf(ra_146, 0x230BCD9C<32>, a3_138, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_396, out a0_397, out a1_398, out a2_399, out a3_400, out a4_401, out a5_402, out a7_403, out s2_404, out s3_405, out s4_406, out s5_407, out s6_408, out s7_409, out s8_410, out s9_411, out s10_412, out s11_413, out t4_414)
	return
ble_tp_connected_exit:


void ble_tp_ccc_cfg_changed(word32 ra, word32 s1, word32 a1, word32 a3, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArg28, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg98, word32 dwArgAC, word32 dwArgBC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00AC:[0..31] Stack +00BC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ble_tp_ccc_cfg_changed_entry:
l23056E04:
	branch a1 != 1<32> l23056E5A
l23056E5A:
	word32 a5_17
	word32 a3_21
	word32 a4_22
	word32 a0_189
	word32 s1_188
	word32 a1_190
	word32 a2_191
	word32 a7_192
	word32 s2_193
	word32 s3_194
	word32 s4_195
	word32 s5_196
	word32 s6_197
	word32 s7_198
	word32 s8_199
	word32 s9_200
	word32 s10_201
	word32 s11_202
	word32 t4_203
	printf(ra, 0x230BCD2C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_188, out a0_189, out a1_190, out a2_191, out a3_21, out a4_22, out a5_17, out a7_192, out s2_193, out s3_194, out s4_195, out s5_196, out s6_197, out s7_198, out s8_199, out s9_200, out s10_201, out s11_202, out t4_203)
	word32 a0_38 = Mem9[0x4202663C<32>:int32]
l23056E72_thunk_vTaskDelete:
	word32 a0_228
	word32 a3_229
	word32 a4_230
	word32 a5_231
	word32 s2_232
	vTaskDelete(a0_38, dwArg10, a3_21, a4_22, a5_17, mstatus, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a0_228, out a3_229, out a4_230, out a5_231, out s2_232)
	return
l23056E16:
	word32 a0_101
	word32 a0_68
	word32 a3_71
	word32 s1_76
	word32 a2_204
	word32 a4_205
	word32 a5_206
	word32 s2_207
	word32 s3_208
	word32 ra_86 = xTaskCreate(ra, a1, 256<i32>, 0<32>, 0xF<32>, 0x4202663C<32>, s3, mstatus, dwArg00, dwArg04, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s1_76, out a0_68, out a2_204, out a3_71, out a4_205, out a5_206, out s2_207, out s3_208)
	branch a0_68 != s1_76 l23056E50
l23056E50:
	a0_101 = 0x230BCD08<32>
l23056E3C:
	a0_101 = 0x230BCCE0<32>
l23056E44:
l23056E4C_thunk_printf:
	word32 s1_209
	word32 a0_210
	word32 a1_211
	word32 a2_212
	word32 a3_213
	word32 a4_214
	word32 a5_215
	word32 a7_216
	word32 s2_217
	word32 s3_218
	word32 s4_219
	word32 s5_220
	word32 s6_221
	word32 s7_222
	word32 s8_223
	word32 s9_224
	word32 s10_225
	word32 s11_226
	word32 t4_227
	printf(ra_86, a0_101, a3_71, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_209, out a0_210, out a1_211, out a2_212, out a3_213, out a4_214, out a5_215, out a7_216, out s2_217, out s3_218, out s4_219, out s5_220, out s6_221, out s7_222, out s8_223, out s9_224, out s10_225, out s11_226, out t4_227)
	return
ble_tp_ccc_cfg_changed_exit:


void ble_tp_tx_mtu_size(word32 ra, word32 a1, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg8C, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ble_tp_tx_mtu_size_entry:
l23056E76:
	word32 a0_40
	branch a1 != 0<32> l23056EA2
l23056EA2:
	a0_40 = 0x230BCE1C<32>
l23056E78:
	word32 a0_13
	word32 s10_92
	word32 s4_91
	word32 s3_90
	word32 s2_89
	word32 a4_88
	word32 s11_93
	ra = bt_gatt_get_mtu(ra, Mem0[0x42026640<32>:int32], a3, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out a0_13, out a3, out a4_88, out s2_89, out s3_90, out s4_91, out s10_92, out s11_93)
	Mem36[0x4200FC6C<32>:word32] = a0_13
	dwArg74 = ra
	a0_40 = 0x230BCDEC<32>
l23056E9E:
l23056E9E_thunk_printf:
	word32 s1_94
	word32 a0_95
	word32 a1_96
	word32 a2_97
	word32 a3_98
	word32 a4_99
	word32 a5_100
	word32 a7_101
	word32 s2_102
	word32 s3_103
	word32 s4_104
	word32 s5_105
	word32 s6_106
	word32 s7_107
	word32 s8_108
	word32 s9_109
	word32 s10_110
	word32 s11_111
	word32 t4_112
	printf(ra, a0_40, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_94, out a0_95, out a1_96, out a2_97, out a3_98, out a4_99, out a5_100, out a7_101, out s2_102, out s3_103, out s4_104, out s5_105, out s6_106, out s7_107, out s8_108, out s9_109, out s10_110, out s11_111, out t4_112)
	return
ble_tp_tx_mtu_size_exit:


void ble_tp_notify_task(word32 ra, word32 s0, word32 s4, word32 s11, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s11:[0..31] s4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
ble_tp_notify_task_exit:
ble_tp_notify_task_entry:
l23056EAC:
	word32 a5_179
	word32 a4_178
	word32 a3_177
	word32 a2_176
	word32 a1_175
	word32 a0_174
	word32 t1_173
	word32 ra_27 = memset(ra, fp + -268<i32>, 0<32>, 236<i32>, out t1_173, out a0_174, out a1_175, out a2_176, out a3_177, out a4_178, out a5_179)
	word32 s5_39 = 0x42026000<32>
	word32 s4_40 = 0x4200F000<32>
	word32 s1_41 = 0x4200DFBC<32>
	word32 dwLoc010C_149 = SEQ(nLoc010B, 9<8>)
l23056F04:
	word32 s2_47 = Mem44[s5_39 + 1600<i32>:int32]
	word32 a2_56
	word32 a4_58
	word32 s10_197
	word32 s9_196
	word32 s8_195
	word32 s7_194
	word32 s6_193
	word32 s3_192
	word32 s2_191
	word32 a5_190
	word32 a4_189
	word32 a3_188
	word32 a1_187
	word32 a0_186
	word32 s0_185
	word32 a5_184
	word32 a3_183
	word32 a1_182
	word32 a0_181
	word32 t1_180
	ra_27 = bt_gatt_notify_cb(memset(ra_27, fp + -300<i32>, 0<32>, 0x18<32>, out t1_180, out a0_181, out a1_182, out a2_56, out a3_183, out a4_58, out a5_184), CONVERT(SLICE(Mem44[s4_40 + -916<i32>:int32] + 0xFFFFFFFD<32>, word16, 0), word16, word32), s2_47, a2_56, a4_58, s2_47, s11, mstatus, dwLoc0130, s1_41, dwLoc0128, dwLoc0124, dwLoc011C, dwLoc0118, dwLoc0114, dwLoc0110, dwLoc010C_149, dwLoc0108, dwLoc0104, dwLocEC, dwLocE8, dwLocE4, dwLocD8, dwLocC8, dwLocC4, dwLocB8, dwLocA8, dwLoc98, dwLoc90, dwLoc88, dwLoc78, dwLoc68, dwLoc58, dwLoc48, dwLoc38, s4, s0, out s0_185, out s1_41, out a0_186, out a1_187, out a3_188, out a4_189, out a5_190, out s2_191, out s3_192, out s4_40, out s5_39, out s6_193, out s7_194, out s8_195, out s9_196, out s10_197, out s11, out mstatus)


void ble_tp_init(word32 ra, word32 s0, word32 a3, word32 a4, word32 s4, word32 s5, word32 s6, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg70, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_enable_cb
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s11:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ble_tp_init_entry:
l23056F2E:
	bt_conn_cb_register(0x4200E00C<32>, a4)
l23056F4A_thunk_bt_gatt_service_register:
	word32 s0_76
	word32 s1_77
	word32 a3_78
	word32 s5_79
	word32 mstatus_80
	bt_gatt_service_register(ra, s0, a3, a4, s4, s5, s6, s11, mstatus, dwArg04, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg48, dwArg68, dwArg70, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0128, out s0_76, out s1_77, out a3_78, out s5_79, out mstatus_80)
	return
ble_tp_init_exit:


word32 polling_events.constprop.1(word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg010C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_poll
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +010C:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s1 s7
// Trashed: a0 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 tp
// Preserved: sp
polling_events.constprop.1_entry:
l23056F4E:
	word32 s9_170 = a0
	word32 s0_168 = 0<32>
	word32 s2_102 = 1<32>
	a3_121 = a3
l23056F84:
	word32 a3_121
	branch s0_168 < a5 l23056FAA
l23056FAA:
	word32 a4_343
	word32 a5_344
	word32 a2_133
	irq_lock(a4, mstatus, out a2_133, out a4_343, out a5_344)
	word32 a4_62 = Mem48[s9_170 + 12<i32>:int32] >>u 8<i32> & 0xF<32>
	branch a4_62 == 2<32> l23057004
l23057004:
	word32 a4_345
	branch k_sem_count_get(Mem48[s9_170 + 16<i32>:int32], a3_121, a4_62, mstatus, out a2_133, out a3_121, out a4_345) == 0<32> l23056FCE
l2305700E:
	a2_133 = 3<32>
l23056FBC:
	branch a4_62 == 3<32> l2305703A
l2305703A:
	word32 a5_347
	word32 a4_346
	branch k_queue_is_empty(Mem48[s9_170 + 16<i32>:int32], a3_121, a4_62, mstatus, out a2_133, out a3_121, out a4_346, out a5_347) != 0<32> l23056FCE
l23057044:
	a2_133 = 4<32>
l23056FC0:
	branch a4_62 != 1<32> l23056FCE
l23056FC4:
	a2_133 = 2<32>
	branch Mem48[Mem48[s9_170 + 16<i32>:int32] + 8<i32>:word32] != 0<32> l23057010
l23057010:
	word32 a3_86 = Mem48[s9_170 + 12<i32>:int32]
	Mem87[s9_170 + 8<i32>:word32] = 0<32>
	Mem98[s9_170 + 12<i32>:word32] = (a3_86 >>u 0xC<u32> & 0xF<32> | a2_133) << 12<i32> | a3_86 & 0xF0FFFFFF<32>
	s2_102 = 0<32>
	a3_121 = a3_86 & 0xF0FFFFFF<32>
l23056FCE:
	branch a2 == 0<32> l2305702E
l23056FD2:
	branch s2_102 == 0<32> l2305702E
l23056FD6:
	word32 a4_107 = Mem48[s9_170 + 12<i32>:int32] >>u 8<i32> & 0xF<32>
	branch a4_107 == 2<32> l23057048
l23056FE2:
	branch a4_107 == 3<32> l23057048
l23057048:
	word32 a3_118 = Mem48[s9_170 + 16<i32>:int32]
	Mem120[s9_170:word32] = a3_118 + 4<i32>
	a3_121 = Mem120[a3_118 + 12<i32>:word32]
	Mem122[s9_170 + 4<i32>:word32] = a3_118 + 4<i32>
	word32 a4_126 = s0_168 + 0x14<32> + a0
	Mem127[a4_126:word32] = a3_118 + 4<i32>
	Mem128[a4_126 + 8<i32>:word32] = a3_121
l23056FE6:
	branch a4_107 != 1<32> l23057064
l23056FEA:
	Mem132[s9_170:word32] = Mem48[s9_170 + 16<i32>:int32]
	a3_121 = Mem132[a2_133 + 4<i32>:word32]
	Mem135[s9_170 + 4<i32>:word32] = a2_133
	word32 a4_136 = s0_168 + 0x14<32> + a0
	Mem137[a4_136:word32] = a2_133
	Mem138[a4_136 + 4<i32>:word32] = a3_121
l23057064:
	Mem140[s9_170 + 8<i32>:word32] = 0<32>
	Mem147[a3:word32] = Mem140[a3:int32] + 1<32>
l2305702E:
	a3_121 = irq_unlock(a3_121, mstatus, out a4, out a5)
	s0_168 = s0_168 + 1<32>
	s9_170 = s9_170 + 0x14<32>
l23056F8A:
	0<32> = dwArg010C
	s1Out = dwLoc4C
	a0Out = s2_102
	a2Out = dwArg01A8
	a3Out = s2
	a4Out = a4
	a5Out = a5
	s7Out = 3<32>
	return dwLoc08
polling_events.constprop.1_exit:


word32 k_poll_event_init(word32 a1, word32 a2, word32 a3, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_prepare_events
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
k_poll_event_init_entry:
l23057074:
	word32 a0_7 = Mem0[(a1 & 0xF<32>) + 12<i32>:word32]
	Mem22[a0_7 + 8<i32>:word32] = 0<32>
	Mem23[(((a1 & 0xF<32> & 0xFF0000FF<32> | (a1 & 0xF<32>) << 8<u32>) & 0xEFFFFFFF<32> | (a2 & 1<32>) << 16<i32>) & 0x10FFFFFF<32>) + 12<i32>:word32] = a0_7
	Mem25[a3 + 16<i32>:word32] = a0_7
	a5Out = 0xEFFFFFFF<32>
	return 0xFF0000FF<32>
k_poll_event_init_exit:


word32 k_poll(word32 ra, word32 s0, word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArgD8, word32 dwArgDC, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hci_tx_thread
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 ra s0 s1 s3 s4 s7 s8
// Trashed: a0 a2 a3 a4 a5 a6 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 tp
// Preserved: a1 sp
k_poll_entry:
l230570A2:
	word32 a0_30
	word32 a2_31
	word32 a5_34
	word32 a4_33
	word32 s1_108
	word32 s7_251
	word32 a3_135
	word32 ra_235 = polling_events.constprop.1(a0, a2, fp + -36<i32>, a4, a5, mstatus, dwArgDC, out s1_108, out a0_30, out a2_31, out a3_135, out a4_33, out a5_34, out s7_251)
	branch a0_30 == 0<32> l230570E0
l230570C4:
	word32 a4_59
	word32 a5_60
	word32 s1_63
	word32 a3_276
	word32 a0_274
	word32 a1_275
	word32 s2_277
	word32 s4_279
	word32 s3_278
	word32 s8_280
	word32 a2_282
	word32 a0_281
	word32 a5_283
	ra_235 = polling_events.constprop.1(k_sem_take(0x42026644<32>, s1_108, a2_31, a3_135, a4_33, a5_34, mstatus, s0, ra, dwArgD8, dwArg0118, out s1_63, out a0_274, out a1_275, out a3_276, out a4_59, out a5_60, out s2_277, out s3_278, out s4_279, out s8_280), s1_63, fp + -36<i32>, a4_59, a5_60, mstatus, dwArgDC, out s1_108, out a0_281, out a2_282, out a3_135, out a4_33, out a5_283, out s7_251)
l230570E0:
	word32 a2_272
	word32 a5_273
	word32 a4_101
	irq_lock(a4_33, mstatus, out a2_272, out a4_101, out a5_273)
	word32 a5_109 = s1_108 + 0x14<32>
l230570F6:
	branch s1_108 >= 0<32> l23057114
l23057114:
	Mem119[Mem117[a5_109 + 12<i32>:word32] + 8<i32>:word32] = 0<32>
	word32 a5_120 = a5_109 >>u 8<i32>
	branch (a5_120 & 0xF<32>) == 2<32> l2305712A
l23057122:
	branch (a5_120 & 0xF<32>) == 3<32> l2305712A
l23057126:
	branch (a5_120 & 0xF<32>) != 1<32> l23057134
l2305712A:
	Mem131[a5_120 & 0xF<32>:word32] = a4_101
	Mem133[a4_101 + 4<i32>:word32] = a5_120 & 0xF<32>
l23057134:
	word32 a4_141
	word32 a5_284
	a3_135 = irq_unlock(a3_135, mstatus, out a4_141, out a5_284)
	word32 a2_285
	irq_lock(a4_141, mstatus, out a2_285, out a4_101, out a5_109)
	s1_108 = s1_108 + 0xFFFFFFFF<32>
l230570FA:
	word32 a4_157
	word32 a5_158
	word32 a3_156 = irq_unlock(a3_135, mstatus, out a4_157, out a5_158)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_108
	a0Out = 0<32>
	a3Out = a3_156
	a4Out = a4_157
	a5Out = a5_158
	s3Out = 2<32>
	s4Out = dwArg78
	s7Out = s7_251
	s8Out = s5
	return ra_235
k_poll_exit:


void k_poll_signal_raise(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg74, word32 dwArg8C, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
k_poll_signal_raise_entry:
l23057142:
	word32 a4_18
	word32 a2_136
	word32 a5_137
	irq_lock(a4, mstatus, out a2_136, out a4_18, out a5_137)
	Mem22[9<32>:word32] = a0
	word32 s0_23 = Mem22[1<32>:word32]
	Mem24[a1 + 12<i32>:word32] = s0_23
	branch s0_23 != 1<32> l23057170
l23057170:
	Mem30[a4_18:word32] = a3
	Mem33[a3 + 4<i32>:word32] = a4_18
	word32 a5_34 = Mem33[a4_18 + 12<i32>:word32]
	Mem36[a5_34 + 8<i32>:word32] = 0<32>
	Mem38[(a4_18 | 0x2000000<32>) + 12<i32>:word32] = a5_34
	word32 s0_138
	word32 s1_139
	word32 a0_140
	word32 a1_141
	word32 a2_142
	word32 a4_143
	word32 a5_144
	word32 s2_145
	word32 s3_146
	word32 s4_147
	word32 s5_148
	word32 s6_149
	word32 s7_150
	word32 s8_151
	word32 s9_152
	word32 s10_153
	word32 s11_154
	k_sem_give(ra, 0x42026644<32>, 0x2000000<32>, a4_18 | 0x2000000<32>, a5_34, mstatus, dwLoc0C, dwLoc08, dwArg40, dwArg44, s1, dwArg74, dwArg8C, dwArgE8, dwArg0128, dwArg0168, out s0_138, out s1_139, out a0_140, out a1_141, out a2_142, out a3, out a4_143, out a5_144, out s2_145, out s3_146, out s4_147, out s5_148, out s6_149, out s7_150, out s8_151, out s9_152, out s10_153, out s11_154)
l23057160:
	word32 a4_155
	word32 a5_156
	irq_unlock(a3, mstatus, out a4_155, out a5_156)
	return
k_poll_signal_raise_exit:


word32 bt_rpa_irk_matches(word32 ra, word32 a0, word32 a1, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_keys_find_irk
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a0 ra s0 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bt_rpa_irk_matches_entry:
l23057198:
	word32 a0_112
	word32 a3_142
	word32 a2_141
	word32 a1_140
	word32 a4_143
	word32 a5_144
	word32 a6_145
	word32 a7_146
	memcpy(fp + -32<i32>, a1 + 3<32>, 3<32>, out a1_140, out a2_141, out a3_142, out a4_143, out a5_144, out a6_145, out a7_146)
	word32 a0_45
	word32 s0_54
	word32 s1_55
	word32 s2_56
	word32 s3_67
	word32 s5_68
	word32 t1_147
	word32 a0_148
	word32 a1_149
	word32 a2_150
	word32 a3_151
	word32 a4_152
	word32 a5_153
	word32 a1_154
	word32 a4_155
	word32 a5_156
	word32 s4_157
	word32 ra_66 = bt_encrypt_le(memset(ra, fp + -29<i32>, 0<32>, 0xD<32>, out t1_147, out a0_148, out a1_149, out a2_150, out a3_151, out a4_152, out a5_153), a0, out s0_54, out s1_55, out a0_45, out a1_154, out a4_155, out a5_156, out s2_56, out s3_67, out s4_157, out s5_68)
	branch a0_45 != 0<32> l230571E8
l230571E8:
	a0_112 = 0<32>
l230571C6:
	word32 a1_158
	word32 a2_159
	word32 a3_160
	word32 a4_161
	word32 a5_162
	word32 a6_163
	word32 a7_164
	memcpy(fp + -36<i32>, fp + -32<i32>, 3<32>, out a1_158, out a2_159, out a3_160, out a4_161, out a5_162, out a6_163, out a7_164)
	word32 a1_165
	word32 a2_166
	word32 a3_167
	word32 a4_168
	word32 a5_169
	a0_112 = CONVERT(memcmp(s0_54, fp + -36<i32>, 3<32>, out a1_165, out a2_166, out a3_167, out a4_168, out a5_169) <u 1<i32>, bool, word32)
l230571DE:
	s0Out = dwArgE4
	s1Out = s1_55
	a0Out = a0_112
	s2Out = s2_56
	s3Out = s3_67
	s5Out = s5_68
	return ra_66
bt_rpa_irk_matches_exit:


word32 u8_to_dec(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_connected
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
u8_to_dec_entry:
l230571EC:
	word32 a3_10 = 4<32>
	word32 a5_15 = 0<32>
	word32 a4_12 = 100<i32>
l230571F8:
	branch a1 == 0<32> l23057202
l230571FA:
	a3_10 = a3_10 + 0xFFFFFFFF<32>
	branch a3_10 != 0<32> l23057206
l23057206:
	word32 a6_13 = a2 >>u a4_12
	branch a2 >=u a4_12 l23057214
l2305720E:
	branch a4_12 == 1<32> l23057214
l23057212:
	branch a5_15 == 0<32> l2305722A
l23057214:
	Mem24[a0:byte] = SLICE(a6_13 + 48<i32>, byte, 0)
	a1 = a1 + 0xFFFFFFFF<32> & 255<i32>
	a0 = a0 + 1<32>
	a5_15 = a5_15 + 1<32> & 255<i32>
l2305722A:
	a2 = a2 & a4_12
	a4_12 = a4_12 >>u 0xA<32>
l230571FE:
	Mem37[a0:byte] = 0<8>
l23057202:
	return a3_10
u8_to_dec_exit:


void add_round_key(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_aes_encrypt
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a1 a4 a5
// Preserved: sp
add_round_key_entry:
l23057234:
	Mem9[a0:byte] = SLICE(CONVERT(Mem0[a1 + 3<i32>:byte], byte, word32) ^ CONVERT(Mem0[a0:byte], byte, word32), byte, 0)
	word32 a5_12 = CONVERT(Mem9[a1 + 2<i32>:uint16], uint16, word32) ^ CONVERT(Mem9[a0 + 1<i32>:byte], byte, word32)
	Mem13[a0 + 1<i32>:byte] = SLICE(a5_12, byte, 0)
	word32 a5_17 = a5_12 >>u 8<i32> ^ CONVERT(Mem13[a0 + 2<i32>:byte], byte, word32)
	Mem18[a0 + 2<i32>:byte] = SLICE(a5_17, byte, 0)
	word32 a1_19 = Mem18[a5_17:word32]
	Mem22[a0 + 3<i32>:byte] = SLICE(a5_17 ^ CONVERT(Mem18[a0 + 3<i32>:byte], byte, word32), byte, 0)
	Mem26[a0 + 4<i32>:byte] = SLICE(CONVERT(Mem22[a1_19 + 7<i32>:byte], byte, word32) ^ CONVERT(Mem22[a0 + 4<i32>:byte], byte, word32), byte, 0)
	word32 a5_29 = CONVERT(Mem26[a1_19 + 6<i32>:uint16], uint16, word32) ^ CONVERT(Mem26[a0 + 5<i32>:byte], byte, word32)
	Mem30[a0 + 5<i32>:byte] = SLICE(a5_29, byte, 0)
	word32 a5_34 = a5_29 >>u 8<i32> ^ CONVERT(Mem30[a0 + 6<i32>:byte], byte, word32)
	Mem35[a0 + 6<i32>:byte] = SLICE(a5_34, byte, 0)
	word32 a1_36 = Mem35[a5_34 + 4<i32>:word32]
	Mem39[a0 + 7<i32>:byte] = SLICE(a5_34 ^ CONVERT(Mem35[a0 + 7<i32>:byte], byte, word32), byte, 0)
	Mem43[a0 + 8<i32>:byte] = SLICE(CONVERT(Mem39[a1_36 + 11<i32>:byte], byte, word32) ^ CONVERT(Mem39[a0 + 8<i32>:byte], byte, word32), byte, 0)
	word32 a5_46 = CONVERT(Mem43[a1_36 + 10<i32>:uint16], uint16, word32) ^ CONVERT(Mem43[a0 + 9<i32>:byte], byte, word32)
	Mem47[a0 + 9<i32>:byte] = SLICE(a5_46, byte, 0)
	word32 a5_51 = a5_46 >>u 8<i32> ^ CONVERT(Mem47[a0 + 10<i32>:byte], byte, word32)
	Mem52[a0 + 10<i32>:byte] = SLICE(a5_51, byte, 0)
	word32 a1_53 = Mem52[a5_51 + 8<i32>:word32]
	Mem56[a0 + 11<i32>:byte] = SLICE(a5_51 ^ CONVERT(Mem52[a0 + 11<i32>:byte], byte, word32), byte, 0)
	Mem60[a0 + 12<i32>:byte] = SLICE(CONVERT(Mem56[a1_53 + 15<i32>:byte], byte, word32) ^ CONVERT(Mem56[a0 + 12<i32>:byte], byte, word32), byte, 0)
	word32 a5_63 = CONVERT(Mem60[a1_53 + 14<i32>:uint16], uint16, word32) ^ CONVERT(Mem60[a0 + 13<i32>:byte], byte, word32)
	Mem64[a0 + 13<i32>:byte] = SLICE(a5_63, byte, 0)
	word32 a5_68 = a5_63 >>u 8<i32> ^ CONVERT(Mem64[a0 + 14<i32>:byte], byte, word32)
	Mem69[a0 + 14<i32>:byte] = SLICE(a5_68, byte, 0)
	Mem73[a0 + 15<i32>:byte] = SLICE(a5_68 ^ CONVERT(Mem69[a0 + 15<i32>:byte], byte, word32), byte, 0)
	return
add_round_key_exit:


void shift_rows(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_aes_encrypt
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
shift_rows_entry:
l2305730E:
	word32 a3_76
	word32 a4_77
	word32 a5_78
	_copy(a0, 0x10<32>, fp + 0xFFFFFFE0<32>, 0x10<32>, out a3_76, out a4_77, out a5_78)
	return
shift_rows_exit:


word32 mult_row_column(word32 a0, word32 a1, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_aes_encrypt
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: s0 s1 s2 s3 s4
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
mult_row_column_entry:
l230573A2:
	Mem34[a0:byte] = SLICE(_double_byte(CONVERT(Mem5[a1:byte], byte, word32)) ^ ((CONVERT(Mem18[a1 + 1<i32>:byte], byte, word32) ^ CONVERT(Mem18[a1 + 2<i32>:byte], byte, word32)) ^ CONVERT(Mem18[a1 + 3<i32>:byte], byte, word32)) ^ _double_byte(CONVERT(Mem18[a1 + 1<i32>:byte], byte, word32)), byte, 0)
	Mem51[a0 + 1<i32>:byte] = SLICE(_double_byte(CONVERT(Mem34[a1 + 1<i32>:byte], byte, word32)) ^ ((CONVERT(Mem34[a1:byte], byte, word32) ^ CONVERT(Mem34[a1 + 2<i32>:byte], byte, word32)) ^ CONVERT(Mem34[a1 + 3<i32>:byte], byte, word32)) ^ _double_byte(CONVERT(Mem34[a1 + 2<i32>:byte], byte, word32)), byte, 0)
	word32 s1_53 = CONVERT(Mem51[a1 + 1<i32>:byte], byte, word32)
	word32 s2_54 = CONVERT(Mem51[a1:byte], byte, word32)
	word32 a0_55 = _double_byte(CONVERT(Mem51[a1 + 2<i32>:byte], byte, word32))
	word32 a0_61 = _double_byte(CONVERT(Mem51[a1 + 3<i32>:byte], byte, word32))
	word32 s2_65 = s2_54 ^ s1_53 ^ CONVERT(Mem51[a1 + 3<i32>:byte], byte, word32)
	Mem68[a0 + 2<i32>:byte] = SLICE(a0_55 ^ s2_65 ^ a0_61, byte, 0)
	word32 s1_78 = CONVERT(Mem68[a1:byte], byte, word32) ^ CONVERT(Mem68[a1 + 1<i32>:byte], byte, word32) ^ CONVERT(Mem68[a1 + 2<i32>:byte], byte, word32) ^ _double_byte(CONVERT(Mem68[a1:byte], byte, word32))
	Mem87[a0 + 3<i32>:byte] = SLICE(_double_byte(CONVERT(Mem68[a1 + 3<i32>:byte], byte, word32)) ^ s1_78 & 255<i32>, byte, 0)
	s1Out = s1_78 & 255<i32>
	s2Out = s2_65
	s3Out = a0
	s4Out = dwArg04
	return a1
mult_row_column_exit:


word32 tc_aes128_set_encrypt_key(word32 a0, word32 a1, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_cmac_setup
//      bt_encrypt_le
//      bt_encrypt_be
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a3 a4 s0 s1 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
tc_aes128_set_encrypt_key_entry:
l23057476:
	word32 a5_180
	word32 a6_181
	word32 a7_182
	word32 a2_179
	word32 a4_137
	word32 a1_132
	word32 a3_134
	memcpy(fp + -60<i32>, 0x230BCE48<32>, 44<i32>, out a1_132, out a2_179, out a3_134, out a4_137, out a5_180, out a6_181, out a7_182)
	word32 a0_103 = 0<32>
	branch a0 == 0<32> l23057546
l23057498:
	branch a1 == 0<32> l23057546
l2305749A:
	word32 a1_32 = a1
	word32 a4_35 = a0
l230574A4:
	a1_32 = a1_32 + 4<32>
	word32 a3_48 = CONVERT(Mem37[a1_32 + -2<i32>:byte], byte, word32)
	a4_35 = a4_35 + 4<32>
	word32 a5_50 = CONVERT(Mem37[a1_32:byte], byte, word32) << 24<i32> | CONVERT(Mem37[a1_32 + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem37[a1_32 + -1<i32>:byte], byte, word32) | a3_48 << 8<i32>
	Mem51[a4_35 + 4092<i32>:word32] = a5_50
	a3_134 = a3_48 << 8<i32>
	branch a1 + 16<i32> != a1_32 l230574A4
l230574CC:
	a1_132 = 4<32>
l230574DA:
	a4_137 = a1_132 & 3<i32>
	branch a4_137 != 0<32> l23057536
l230574E2:
	word32 a5_64 = a5_50 >>u 24<i32> | a5_50 << 8<u32>
	a4_137 = CONVERT(Mem60[(a5_64 >>u 0x10<u32> & 255<i32>) + 0x230BCE74<32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem60[(a5_64 >>u 0x18<u32>) + 0x230BCE74<32>:byte], byte, word32) << 24<i32> | CONVERT(Mem60[(a5_64 & 255<i32>) + 0x230BCE74<32>:byte], byte, word32)) | CONVERT(Mem60[(a5_64 >>u 8<u32> & 255<i32>) + 0x230BCE74<32>:byte], byte, word32) << 8<i32>
	a3_134 = fp + -16<i32>
	a5_50 = Mem60[(a1_132 & -4<i32>) + (fp + -16<i32>) + -44<i32>:int32] ^ a4_137
l23057536:
	a5_50 = a5_50 ^ a4_137
	Mem100[a5_50 + 12<i32>:word32] = Mem60[a4_137:word32] + 4<32>
	a1_132 = a1_132 + 1<32>
	branch a1_132 != 44<i32> l230574DA
l23057544:
	a0_103 = 1<32>
l23057546:
	s1Out = a0
	a0Out = a0_103
	a1Out = a1_132
	a3Out = a3_134
	a4Out = a4_137
	s4Out = dwArgF4
	s8Out = dwArgD4
	return a1
tc_aes128_set_encrypt_key_exit:


word32 tc_aes_encrypt(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_cmac_setup
//      tc_cmac_update
//      tc_cmac_final
//      bt_encrypt_le
//      bt_encrypt_be
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tc_aes_encrypt_entry:
l23057550:
	branch a0 == 0<32> l23057640
l23057556:
	branch a1 == 0<32> l23057640
l2305755A:
	branch a2 == 0<32> l23057640
l23057640:
	s0Out = s0
	s1Out = s1
	a0Out = 0<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = 0<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	return ra
l2305755E:
	word32 a5_350
	word32 a4_349
	word32 a3_348
	_copy(fp + -64<i32>, 0x10<32>, a1, 0x10<32>, out a3_348, out a4_349, out a5_350)
	add_round_key(fp + -64<i32>, a2)
	word32 s5_157 = a2 + 16<i32>
	word32 s3_134 = fp + -48<i32>
	word32 s4_135 = 0x230BCE74<32>
l2305759A:
	word32 a5_56 = fp + -64<i32>
l2305759E:
	a5_56 = a5_56 + 1<32>
	Mem64[a5_56 + 4095<i32>:byte] = SLICE(CONVERT(Mem58[CONVERT(Mem58[a5_56:byte], byte, word32) + s4_135:byte], byte, word32), byte, 0)
	branch a5_56 != s3_134 l2305759E
l230575B2:
	shift_rows(fp + -64<i32>)
	word32 s3_353
	word32 s2_352
	word32 s4_354
	word32 s1_351
	mult_row_column(s3_134, fp + -64<i32>, out s1_351, out s2_352, out s3_353, out s4_354)
	word32 s1_355
	word32 s2_356
	word32 s3_357
	word32 s4_358
	mult_row_column(fp + -44<i32>, fp + -60<i32>, out s1_355, out s2_356, out s3_357, out s4_358)
	word32 s1_359
	word32 s2_360
	word32 s3_361
	word32 s4_362
	mult_row_column(fp + -40<i32>, fp + -56<i32>, out s1_359, out s2_360, out s3_361, out s4_362)
	word32 s2_133
	word32 s1_132
	word32 s0_131 = mult_row_column(fp + -36<i32>, fp + -52<i32>, out s1_132, out s2_133, out s3_134, out s4_135)
	word32 a3_363
	word32 a4_364
	word32 a5_365
	_copy(fp + -64<i32>, 0x10<32>, s3_134, 0x10<32>, out a3_363, out a4_364, out a5_365)
	add_round_key(fp + -64<i32>, s5_157)
	s5_157 = s5_157 + 0x10<32>
	branch s5_157 != s0_131 l2305759A
l230575F2:
	s1_132 = s1_132 + 1<32>
	Mem171[s1_132 + 4095<i32>:byte] = SLICE(CONVERT(Mem165[CONVERT(Mem165[s1_132:byte], byte, word32) + s4_135:byte], byte, word32), byte, 0)
	branch s3_134 != s1_132 l230575F2
l23057606:
	shift_rows(fp + -64<i32>)
	add_round_key(fp + -64<i32>, s0_131)
	word32 a3_366
	word32 a4_367
	word32 a5_368
	_copy(s2_133, 0x10<32>, fp + -64<i32>, 0x10<32>, out a3_366, out a4_367, out a5_368)
	word32 a1_221
	word32 a3_223
	word32 a4_224
	word32 a2_369
	word32 a5_370
	word32 ra_226 = _set(ra, fp + -64<i32>, 0<32>, 0x10<32>, out a1_221, out a2_369, out a3_223, out a4_224, out a5_370)
	s0Out = dwArg0158
	s1Out = s1_132
	a0Out = 1<32>
	a1Out = a1_221
	a3Out = a3_223
	a4Out = a4_224
	a5Out = 1<32>
	s2Out = s2_133
	s3Out = s3_134
	s4Out = dwArgF4
	s5Out = s5_157
	s8Out = dwArgD4
	return ra_226
tc_aes_encrypt_exit:


void att_prepare_write_req()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
att_prepare_write_req_entry:
l23057644:
	return
att_prepare_write_req_exit:


word32 att_op_get_type(word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_cb.isra.3
//      bt_att_create_pdu
//      bt_att_recv
// MayUse:  a0:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
att_op_get_type_entry:
l23057648:
	word32 a0_11
	word32 a4_10 = 0xE<32>
	branch a0 == 0xE<32> l23057682
l23057650:
	branch a0 >u 0xE<32> l230576AE
l230576AE:
	a4_10 = 0x17<32>
	a0_11 = 2<32>
	branch a0 == 0x17<32> l23057684
l230576B6:
	branch a0 >u 0x17<32> l230576EA
l230576EA:
	a4_10 = 0x1D<32>
	a0_11 = 5<32>
	branch a0 == 0x1D<32> l23057684
l230576F2:
	branch a0 >u 0x1D<32> l23057718
l23057718:
	a4_10 = 82<i32>
	a0_11 = 0<32>
	branch a0 == 82<i32> l23057684
l23057722:
	a4_10 = 210<i32>
	branch a0 == 210<i32> l23057684
l2305772A:
	a4_10 = 0x1E<32>
	a0_11 = 4<32>
l230576F6:
	a4_10 = 0x19<32>
	a0_11 = 2<32>
	branch a0 == 0x19<32> l23057684
l230576FE:
	a0_11 = 1<32>
	branch a0 <u 0x19<32> l23057684
l23057704:
	a4_10 = 0x1B<32>
	a0_11 = 3<32>
l23057708:
	branch a0 == a4_10 l23057684
l230576BA:
	a4_10 = 0x11<32>
	branch a0 == 0x11<32> l23057684
l230576C0:
	branch a0 >u 0x11<32> l230576D4
l230576D4:
	a4_10 = 0x13<32>
	a0_11 = 2<32>
	branch a0 == 0x13<32> l23057684
l230576DC:
	a0_11 = 1<32>
	branch a0 <u 0x13<32> l23057684
l230576E2:
	a4_10 = 0x16<32>
	branch a0 != 0x16<32> l2305770C
l230576E8:
	a4Out = 0x16<32>
	return 1<32>
l230576C4:
	a4_10 = 0xF<32>
	branch a0 == 0xF<32> l23057684
l230576CA:
	a4_10 = 0x10<32>
	branch a0 != 0x10<32> l2305770C
l230576D2:
	a4Out = 0x10<32>
	return 1<32>
l23057654:
	a4_10 = 7<32>
	a0_11 = 2<32>
	branch a0 == 7<32> l23057684
l2305765C:
	branch a0 >u 7<32> l23057686
l23057686:
	a4_10 = 0xA<32>
	a0_11 = 1<32>
	branch a0 == 0xA<32> l23057684
l2305768E:
	branch a0 >u 0xA<32> l230576A2
l230576A2:
	a4_10 = 0xC<32>
	a0_11 = 1<32>
	branch a0 == 0xC<32> l23057684
l230576AA:
	a4Out = 0xC<32>
	return 2<32>
l23057692:
	a4_10 = 8<32>
	branch a0 == 8<32> l23057684
l23057698:
	a4_10 = 9<32>
	branch a0 != 9<32> l2305770C
l230576A0:
	a4Out = 9<32>
	return 2<32>
l23057660:
	a4_10 = 3<32>
	branch a0 == 3<32> l23057684
l23057666:
	branch a0 >u 3<32> l2305767A
l2305767A:
	a4_10 = 5<32>
	a0_11 = 2<32>
	branch a0 == 5<32> l23057684
l23057682:
	a0_11 = 1<32>
l2305766A:
	a4_10 = 1<32>
	branch a0 == 1<32> l23057684
l23057670:
	a4_10 = 2<32>
	branch a0 != 2<32> l2305770C
l2305770C:
	a0_11 = 6<32>
	branch (a0 & 64<i32>) == 0<32> l23057684
l23057684:
	a4Out = a4_10
	return a0_11
l23057714:
	a4Out = a4_10
	return 0<32>
l23057678:
	a4Out = 2<32>
	return 1<32>
att_op_get_type_exit:


word32 att_req_destroy(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_reset
//      bt_att_encrypt_change
//      bt_att_req_cancel
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: a6 a7 mstatus s0 s1 s2 s3 s4 s5 s6 s8 sp t3 t4 t5 t6 tp
att_req_destroy_entry:
l23057730:
	word32 a0_10 = Mem7[a0 + 16<i32>:word32]
	branch a0_10 == 0<32> l23057740
l2305773C:
	word32 s0_178
	word32 a0_179
	word32 a2_180
	word32 a3_181
	word32 s2_182
	word32 s3_183
	word32 s4_184
	word32 s5_185
	word32 s6_186
	word32 s8_187
	ra = net_buf_unref(ra, s1, a0_10, a1, a4, mstatus, dwLoc10, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_178, out s1, out a0_179, out a1, out a2_180, out a3_181, out a4, out a5, out s2_182, out s3_183, out s4_184, out s5_185, out s6_186, out s8_187, out mstatus)
l23057740:
	word32 s0_43 = Mem7[a5 + 8<i32>:word32]
	branch a5 == 0<32> l23057748
l23057744:
	word32 a6_62
	word32 a7_63
	word32 s2_64
	word32 s3_65
	word32 s4_66
	word32 s5_67
	word32 s6_68
	word32 s8_69
	word32 t3_72
	word32 t4_73
	word32 t5_74
	word32 t6_75
	word32 tp_76
	call a5 (retsize: 0;)
		uses: a0:s0_43,a1:a1_47,a4:a4_49,a5:a5_40,a6:a6_62,a7:a7_63,mstatus:mstatus_48,ra:ra_45,s0:s0_43,s1:s1_46,s2:s2_64,s3:s3_65,s4:s4_66,s5:s5_67,s6:s6_68,s8:s8_69,Stack +0000:dwLoc10,Stack +0008:dwLoc08,Stack +0028:dwArg18,Stack +0078:dwArg68,Stack +0098:dwArg88,Stack +00A4:dwArg94,Stack +00B8:dwArgA8,Stack +00D8:dwArgC8,Stack +00E8:dwArgD8,Stack +00F8:dwArgE8,Stack +0118:dwArg0108,Stack +0138:dwArg0128,Stack +0158:dwArg0148,Stack +0178:dwArg0168,t3:t3_72,t4:t4_73,t5:t5_74,t6:t6_75,tp:tp_76
		defs: a6:a6_62,a7:a7_63,ra:ra_53,s0:s0_52,s2:s2_64,s3:s3_65,s4:s4_66,s5:s5_67,s6:s6_68,s8:s8_69,t3:t3_72,t4:t4_73,t5:t5_74,t6:t6_75,tp:tp_76
l23057748:
l23057754_thunk_memset:
	word32 a0_87
	word32 a1_88
	word32 a2_89
	word32 a3_90
	word32 a4_91
	word32 a5_92
	word32 t1_188
	word32 ra_93 = memset(ra, s0_43, 0<32>, 0x18<32>, out t1_188, out a0_87, out a1_88, out a2_89, out a3_90, out a4_91, out a5_92)
	a0Out = a0_87
	a1Out = a1_88
	a2Out = a2_89
	a3Out = a3_90
	a4Out = a4_91
	a5Out = a5_92
	return ra_93
att_req_destroy_exit:


void att_notify(word32 ra, word32 s0, word32 a5, word32 s6, word32 mstatus, word32 dwArg44)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s6:[0..31] Stack +0044:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_notify_entry:
l23057758:
	word32 a1_14
	word32 a2_64
	word32 a4_65
	word32 a5_66
	word32 s0_67
	word32 s1_68
	word32 a3_69
	word32 mstatus_70
	bt_gatt_notification(ra, s0, s0, net_buf_simple_pull_le16(a5, out a1_14, out a2_64, out a4_65, out a5_66), dwArg44, CONVERT(Mem11[a1_14 + 12<i32>:uint16], uint16, word32), s6, mstatus, out s0_67, out s1_68, out a3_69, out mstatus_70)
	return
att_notify_exit:


word32 bt_gatt_foreach_attr(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s11, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_read_group_req
//      att_read_mult_req
//      att_read_req
//      att_read_type_req
//      att_find_type_req
//      att_find_info_req
//      att_signed_write_cmd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s11:[0..31]
// LiveOut: a0 a1 a2 a4 a5 ra s0 s1 s11 s2 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
bt_gatt_foreach_attr_entry:
l23057784:
l2305778E_thunk_bt_gatt_foreach_attr_type:
	word32 a0_14
	word32 a1_15
	word32 a2_16
	word32 a4_18
	word32 a5_19
	word32 s0_23
	word32 s1_24
	word32 s11_26
	word32 s2_27
	word32 s4_29
	word32 s5_30
	word32 a3_52
	word32 s3_53
	word32 s6_54
	word32 s7_55
	word32 s8_56
	word32 s9_57
	word32 s10_58
	word32 ra_22 = bt_gatt_foreach_attr_type(ra, a0, a1, 0<32>, 0<32>, 0<32>, a2, a3, s11, out s0_23, out s1_24, out a0_14, out a1_15, out a2_16, out a3_52, out a4_18, out a5_19, out s2_27, out s3_53, out s4_29, out s5_30, out s6_54, out s7_55, out s8_56, out s9_57, out s10_58, out s11_26)
	s0Out = s0_23
	s1Out = s1_24
	a0Out = a0_14
	a1Out = a1_15
	a2Out = a2_16
	a4Out = a4_18
	a5Out = a5_19
	s2Out = s2_27
	s4Out = s4_29
	s5Out = s5_30
	s11Out = s11_26
	return ra_22
bt_gatt_foreach_attr_exit:


void read_group_cb(word32 ra, word32 a0, word32 a1, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
read_group_cb_entry:
l23057792:
	word32 s3_17 = Mem15[a1:int32]
	word32 s4_25 = Mem15[s3_17:int32]
	word32 a2_314
	word32 a5_317
	word32 s8_319
	word32 a6_318
	word32 a3_315
	word32 a4_316
	word32 a1_29
	word32 a0_28
	bt_uuid_cmp(Mem15[a0:word32], fp + -40<i32>, out a0_28, out a1_29, out a2_314, out a3_315, out a4_316, out a5_317, out a6_318, out s8_319)
	word32 s2_128 = 0x3000000<32>
	branch a0_28 == 0<32> l2305780E
l230577C4:
	word32 s1_44 = Mem27[a0_28:word32]
	word32 a5_53
	word32 a3_326
	word32 s8_329
	word32 a4_327
	word32 a6_328
	word32 a2_325
	bt_uuid_cmp(a0_28, fp + -36<i32>, out a0_28, out a1_29, out a2_325, out a3_326, out a4_327, out a5_53, out a6_328, out s8_329)
	s2_128 = 0x2FFF801<32>
	branch a0_28 == 0<32> l2305780E
l2305780E:
	word32 s1_69 = Mem66[a0_28:word32]
	word32 a0_70
	word32 a5_74
	word32 a2_78
	word32 a1_320
	word32 a6_323
	word32 s8_324
	word32 a3_321
	word32 a4_322
	word32 s0_75 = bt_uuid_cmp(a0_28, a1_29, out a0_70, out a1_320, out a2_78, out a3_321, out a4_322, out a5_74, out a6_323, out s8_324)
	branch a0_70 == 0<32> l23057820
l23057820:
	word32 s0_87 = Mem66[a0_70 + 8<i32>:word32]
	word32 a4_88 = CONVERT(Mem66[a5_74:byte], byte, word32)
	branch a4_88 == 0<32> l2305783C
l2305782A:
	branch CONVERT(Mem66[s3_17 + 86<i32>:uint16] - Mem66[a0_70 + 12<i32>:uint16], uint16, uint16) >= a4_88 l2305783C
l2305783C:
	word32 a5_331
	word32 a1_330
	word32 a0_97 = net_buf_simple_add(a0_70 + 8<32>, 4<32>, a4_88, out a1_330, out a5_331)
	Mem101[a0_97 + 16<i32>:word32] = s0_87
	word32 a5_103 = CONVERT(Mem101[s1_69 + 16<i32>:uint16], uint16, word32)
	Mem107[a0_97:byte] = SLICE(a5_103 & 255<i32>, byte, 0)
	Mem108[a0_97 + 1<i32>:byte] = SLICE(a5_103 >>u 8<i32>, byte, 0)
	Mem113[a4_88 + 3<i32>:byte] = SLICE(a5_103 >>u 8<i32>, byte, 0)
	Mem114[a4_88 + 2<i32>:byte] = SLICE(a5_103 & 255<i32>, byte, 0)
	word32 a5_119 = CONVERT(Mem114[a4_88 + 12<i32>:uint16], uint16, word32)
	word32 a0_141
	word32 a3_143
	call Mem114[s1_69 + 4<i32>:int32] (retsize: 0;)
		uses: a0:s4_25,a1:s1_69,a2:a2_78 + a5_119,a3:CONVERT(SLICE(CONVERT(Mem114[s3_17 + 86<i32>:uint16], uint16, word32) - a5_119, word16, 0), word16, word32),a4:0<32>,a5:a5_119,ra:ra,s0:Mem114[a4_88 + 8<i32>:word32],s1:s1_69,s2:s2_128,s3:s3_17,s4:s4_25
		defs: a0:a0_141,a3:a3_143
	branch a0_141 < 0<32> l23057838
l23057888:
	word32 a4_159 = CONVERT(Mem114[a3_143:byte], byte, word32)
	branch a4_159 != 0<32> l230578A2
l230578A2:
	branch a4_159 == a0_141 + 4<i32> l23057898
l230578A6:
	Mem163[a4_159 + 12<i32>:word16] = SLICE(CONVERT(Mem114[a4_159 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFFC<32>, word16, 0)
l23057894:
	Mem164[a3_143:byte] = SLICE(a0_141 + 4<i32>, byte, 0)
l23057898:
	word32 a1_332
	word32 a5_333
	net_buf_simple_add(a0_141 + 8<32>, a0_141, a4_159, out a1_332, out a5_333)
l23057838:
l23057818:
	Mem175[s0_75 + 16<i32>:word32] = 0<32>
l2305781C:
l230577DA:
	branch a5_53 == 0<32> l230577FE
l230577E0:
	word32 a4_181 = CONVERT(Mem48[s1_44 + 16<i32>:uint16], uint16, word32)
	branch (CONVERT(Mem48[a5_53 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem48[a5_53 + 2<i32>:byte], byte, word32)) >=u a4_181 l230577FE
l230577F4:
	Mem184[a5_53 + 2<i32>:byte] = SLICE(a4_181, byte, 0)
	Mem186[a5_53 + 3<i32>:byte] = SLICE(a4_181 >>u 8<i32>, byte, 0)
l230577FE:
	0<32> = dwArg0128
	return
read_group_cb_exit:


void read_type_cb(word32 ra, word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
read_type_cb_entry:
l230578B4:
	word32 s3_17 = Mem15[a1:int32]
	word32 s4_23 = Mem15[s3_17:int32]
	word32 a0_25
	word32 a2_219
	word32 a3_220
	word32 a1_218
	word32 a5_222
	word32 a6_223
	word32 a4_221
	word32 s8_224
	word32 s0_30 = bt_uuid_cmp(Mem15[a0:word32], Mem15[a1 + 4<i32>:word32], out a0_25, out a1_218, out a2_219, out a3_220, out a4_221, out a5_222, out a6_223, out s8_224)
	branch a0_25 != 0<32> l230578FA
l230578DA:
	word32 a2_45
	word32 a4_46
	word32 a5_47
	word32 a0_44 = bt_gatt_check_perm(s4_23, a0, 0x15<32>, out a2_45, out a4_46, out a5_47)
	Mem51[s0_30 + 20<i32>:byte] = SLICE(a0_44, byte, 0)
	branch a0_44 == 0<32> l2305790C
l2305790C:
	word32 s0_53 = Mem51[a0_44 + 8<i32>:word32]
	word32 a1_225
	word32 a5_226
	word32 a0_56 = net_buf_simple_add(a0_44 + 8<32>, 2<32>, a4_46, out a1_225, out a5_226)
	Mem59[a0_56 + 16<i32>:word32] = s0_53
	word32 a5_60 = CONVERT(Mem59[a0 + 16<i32>:uint16], uint16, word32)
	Mem62[a0_56:byte] = SLICE(a5_60, byte, 0)
	Mem64[a0_56 + 1<i32>:byte] = SLICE(a5_60 >>u 8<i32>, byte, 0)
	word32 a5_68 = CONVERT(Mem64[a4_46 + 12<i32>:uint16], uint16, word32)
	word32 s0_77
	word32 a0_84
	word32 a3_91
	word32 tp_98
	call Mem64[a0 + 4<i32>:int32] (retsize: 0;)
		uses: a0:s4_23,a1:a0,a2:a2_45 + a5_68,a3:CONVERT(SLICE(CONVERT(Mem64[s3_17 + 86<i32>:uint16], uint16, word32) - a5_68, word16, 0), word16, word32),a4:0<32>,a5:a5_68,ra:ra,s0:Mem64[a4_46 + 8<i32>:word32],s1:a0_44,s2:a0,s3:s3_17,s4:s4_23,tp:tp_98
		defs: a0:a0_84,a3:a3_91,s0:s0_77,tp:tp_98
	branch a0_84 >= 0<32> l23057968
l23057968:
	word32 a4_102 = CONVERT(Mem64[a3_91:byte], byte, word32)
	branch a4_102 != 0<32> l23057998
l23057998:
	branch a4_102 == a0_84 + 2<i32> l23057978
l2305799C:
	Mem106[a4_102 + 12<i32>:word16] = SLICE(CONVERT(Mem64[a4_102 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFFE<32>, word16, 0)
l23057974:
	Mem107[a3_91:byte] = SLICE(a0_84 + 2<i32>, byte, 0)
l23057978:
	word32 a5_228
	word32 a1_227
	net_buf_simple_add(a0_84 + 8<32>, a0_84, a4_102, out a1_227, out a5_228)
l2305794C:
	word32 a0_127 = 0xE<32>
	branch a0_84 >u 1<i32> l23057962
l2305795A:
	a0_127 = 0<32> - a0_84 & 255<i32>
l23057962:
	Mem132[s0_77 + 20<i32>:byte] = SLICE(a0_127, byte, 0)
l230578EC:
	word32 s0_133 = Mem51[a5_47 + 12<i32>:word32]
	branch CONVERT(Mem51[a5_47:byte], byte, word32) == 0<32> l230578FA
l230578F4:
	Mem135[s0_133 + 20<i32>:byte] = 0<8>
l230578FA:
	return
read_type_cb_exit:


void find_type_cb(word32 ra, word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
find_type_cb_entry:
l230579AA:
	word32 s3_17 = Mem15[a1:int32]
	word32 s4_25 = Mem15[s3_17:int32]
	word32 a0_28
	word32 a6_384
	word32 s8_385
	word32 a1_379
	word32 a2_380
	word32 a3_381
	word32 a5_383
	word32 a4_382
	word32 s0_103 = bt_uuid_cmp(Mem15[a0:word32], fp + -96<i32>, out a0_28, out a1_379, out a2_380, out a3_381, out a4_382, out a5_383, out a6_384, out s8_385)
	branch a0_28 == 0<32> l23057A72
l230579DC:
	word32 s1_44 = Mem27[a0_28:word32]
	word32 a0_49
	word32 a4_52
	word32 a5_53
	word32 a6_389
	word32 s8_390
	word32 a1_386
	word32 a3_388
	word32 a2_387
	bt_uuid_cmp(a0_28, fp + -92<i32>, out a0_49, out a1_386, out a2_387, out a3_388, out a4_52, out a5_53, out a6_389, out s8_390)
	branch a0_49 == 0<32> l23057A26
l23057A26:
	word32 s0_65 = Mem48[a4_52 + 4<i32>:word32]
	word32 a5_69 = CONVERT(Mem48[s3_17 + 86<i32>:uint16] - Mem48[a4_52 + 12<i32>:uint16], uint16, uint16)
	branch a5_69 <=u 3<32> l23057A16
l23057A3A:
	word32 s1_71 = Mem48[a5_69 + 4<i32>:word32]
	word32 sp_77
	word32 s1_79
	word32 ra_81
	word32 a0_85
	word32 s10_253
	word32 s11_254
	word32 s6_255
	word32 s7_256
	call a5_69 (retsize: 0;)
		uses: a0:s4_25,a1:s1_71,a2:fp + -88<i32>,a3:0x10<32>,a4:0<32>,ra:ra,s0:s0_65,s1:s1_71,s10:s10_253,s11:s11_254,s2:0x2FFF800<32>,s3:s3_17,s4:s4_25,s6:s6_255,s7:s7_256
		defs: a0:a0_85,ra:ra_81,s0:s0_78,s1:s1_79,s10:s10_253,s11:s11_254,s6:s6_255,s7:s7_256,sp:sp_77
	branch a0_85 < 0<32> l23057A72
l23057A4E:
	word32 a4_108
	word32 a0_105
	word32 a2_102 = CONVERT(Mem48[s0_103 + 16<i32>:byte], byte, word32)
	s0_103 = Mem48[a0_85 + 12<i32>:word32]
	branch a2_102 == a0_85 l23057ACC
l23057ACC:
	word32 a5_394
	word32 a1_391
	word32 a3_393
	word32 a2_392
	a0_105 = memcmp(a0_85, sp_77 + 8<i32>, a2_102, out a1_391, out a2_392, out a3_393, out a4_108, out a5_394)
l23057A58:
	word32 a0_184
	word32 a3_114
	branch bt_uuid_create(sp_77 + 44<i32>, a0_85, a2_102, out a3_114) != 0<32> l23057A78
l23057A78:
	branch bt_uuid_create(sp_77 + 24<i32>, sp_77 + 8<i32>, a0_85 & 255<i32>, out a3_114) != 0<32> l23057A92
l23057A92:
	word32 a6_399
	word32 s8_400
	word32 a1_395
	word32 a2_396
	word32 a5_398
	word32 a3_397
	s0_103 = bt_uuid_cmp(sp_77 + 44<i32>, sp_77 + 24<i32>, out a0_105, out a1_395, out a2_396, out a3_397, out a4_108, out a5_398, out a6_399, out s8_400)
l23057A9A:
	branch a0_105 != 0<32> l23057A72
l23057A9C:
	word32 s0_164 = Mem48[a0_105 + 4<i32>:word32]
	Mem165[s0_164 + 17<i32>:byte] = 0<8>
	word32 a1_420
	word32 a5_421
	word32 a0_169 = net_buf_simple_add(a0_105 + 8<32>, 4<32>, a4_108, out a1_420, out a5_421)
	Mem172[a0_169 + 8<i32>:word32] = s0_164
	word32 a5_174 = CONVERT(Mem172[s1_79 + 16<i32>:uint16], uint16, word32)
	Mem177[a0_169:byte] = SLICE(a5_174 & 255<i32>, byte, 0)
	Mem178[a0_169 + 1<i32>:byte] = SLICE(a5_174 >>u 8<i32>, byte, 0)
	Mem180[a4_108 + 2<i32>:byte] = SLICE(a5_174 & 255<i32>, byte, 0)
	Mem181[a4_108 + 3<i32>:byte] = SLICE(a5_174 >>u 8<i32>, byte, 0)
l23057A86:
	a0_184 = 0x230BD0EC<32>
l23057A62:
	a0_184 = 0x230BD0C8<32>
l23057A6E:
	word32 a5_407
	word32 a7_408
	word32 a4_406
	word32 a3_405
	word32 a2_404
	word32 s1_401
	word32 a1_403
	word32 a0_402
	word32 s2_409
	word32 s3_410
	word32 s4_411
	word32 s5_412
	word32 s6_413
	word32 s7_414
	word32 s8_415
	word32 s9_416
	word32 s10_417
	word32 s11_418
	word32 t4_419
	printf(ra_81, a0_184, a3_114, Mem48[sp_77 + 8<i32>:word32], Mem48[sp_77 + 40<i32>:word32], Mem48[sp_77 + 112<i32>:word32], Mem48[sp_77 + 116<i32>:word32], Mem48[sp_77 + 152<i32>:word32], Mem48[sp_77 + 188<i32>:word32], out s1_401, out a0_402, out a1_403, out a2_404, out a3_405, out a4_406, out a5_407, out a7_408, out s2_409, out s3_410, out s4_411, out s5_412, out s6_413, out s7_414, out s8_415, out s9_416, out s10_417, out s11_418, out t4_419)
l23057A72:
	Mem218[s0_103 + 8<i32>:word32] = 0<32>
l23057AC8:
l230579F2:
	branch a5_53 == 0<32> l23057A16
l230579F8:
	word32 a4_224 = CONVERT(Mem48[s1_44 + 16<i32>:uint16], uint16, word32)
	branch (CONVERT(Mem48[a5_53 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem48[a5_53 + 2<i32>:byte], byte, word32)) >=u a4_224 l23057A16
l23057A0C:
	Mem227[a5_53 + 2<i32>:byte] = SLICE(a4_224, byte, 0)
	Mem229[a5_53 + 3<i32>:byte] = SLICE(a4_224 >>u 8<i32>, byte, 0)
l23057A16:
	return
find_type_cb_exit:


void find_info_cb(word32 a0, word32 a4, word32 a5, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
find_info_cb_entry:
l23057AD4:
	word32 a1_13 = Mem11[a5 + 8<i32>:word32]
	branch a5 != 0<32> l23057B06
l23057AEA:
	word32 a5_24
	word32 a1_180
	word32 a0_22 = net_buf_simple_add(a0 + 8<32>, 1<32>, a4, out a1_180, out a5_24)
	Mem25[a0_22 + 8<i32>:word32] = a1_13
	word32 a5_28 = CONVERT(CONVERT(Mem25[a5_24:byte], byte, word32) != 0<32>, bool, word32)
	Mem30[a0_22:byte] = SLICE(a5_28 + 1<32>, byte, 0)
	a5 = a5_28 + 1<32>
l23057B06:
	word32 a5_35 = CONVERT(Mem32[a5:byte], byte, word32)
	branch a5_35 == 1<32> l23057B60
l23057B60:
	word32 s1_36 = Mem32[a5_35:word32]
	branch CONVERT(Mem32[a5_35:byte], byte, word32) != 0<32> l23057BAA
l23057B6A:
	word32 s0_39 = Mem32[4<32>:word32]
	word32 a5_190
	word32 a1_189
	word32 a0_42 = net_buf_simple_add(8<32>, 4<32>, 1<32>, out a1_189, out a5_190)
	Mem45[a0_42 + 12<i32>:word32] = s0_39
	word32 a5_46 = CONVERT(Mem45[s1_36 + 16<i32>:uint16], uint16, word32)
	Mem47[a0_42:byte] = SLICE(a5_46, byte, 0)
	Mem49[a0_42 + 1<i32>:byte] = SLICE(a5_46 >>u 8<i32>, byte, 0)
	word32 a5_52 = CONVERT(Mem49[(a5_46 >>u 8<i32>) + 2<i32>:uint16], uint16, word32)
	Mem53[3<32>:byte] = SLICE(a5_52, byte, 0)
	Mem55[4<32>:byte] = SLICE(a5_52 >>u 8<i32>, byte, 0)
l23057B12:
	branch a5_35 != 2<32> l23057BAA
l23057B1A:
	word32 s1_64 = Mem32[2<32>:word32]
	word32 a4_66 = CONVERT(Mem32[2<32>:byte], byte, word32)
	branch a4_66 != a5_35 l23057BAA
l23057B26:
	word32 s0_67 = Mem32[4<32>:word32]
	word32 a1_71
	word32 a5_181
	word32 a0_70 = net_buf_simple_add(8<32>, 0x12<32>, a4_66, out a1_71, out a5_181)
	Mem73[a0_70 + 12<i32>:word32] = s0_67
	word32 a5_74 = CONVERT(Mem73[s1_64 + 16<i32>:uint16], uint16, word32)
	Mem76[a0_70:byte] = SLICE(a5_74, byte, 0)
	Mem78[a0_70 + 1<i32>:byte] = SLICE(a5_74 >>u 8<i32>, byte, 0)
	word32 a7_188
	word32 a5_186
	word32 a6_187
	word32 a4_185
	word32 a3_184
	word32 a2_183
	word32 a1_182
	memcpy(a0_70 + 2<32>, a1_71 + 1<32>, 0x10<32>, out a1_182, out a2_183, out a3_184, out a4_185, out a5_186, out a6_187, out a7_188)
l23057BA6:
l23057BAA:
	0<32> = dwArg38
	return
find_info_cb_exit:


void bt_att_connected(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg84, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: s0 sp
bt_att_connected_entry:
l23057BB6:
	word32 a3_19
	word32 a4_20
	word32 a5_67
	word32 s2_68
	word32 s3_69
	k_queue_init(ra, 0x14<32>, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out a3_19, out a4_20, out a5_67, out s2_68, out s3_69)
	Mem32[a0 + 86<i32>:word16] = 0x17<16>
	Mem33[a0 + 66<i32>:word16] = 0x17<16>
	word32 a0_70
	word32 a3_71
	word32 a4_72
	word32 a5_73
	word32 s2_74
	word32 s3_75
	word32 s4_76
	word32 s5_77
	k_delayed_work_init(ra, a0, a0 + 168<i32>, a3_19, a4_20, mstatus, dwArg84, dwArgB8, dwArgD8, dwArg0118, out a0_70, out a3_71, out a4_72, out a5_73, out s2_74, out s3_75, out s4_76, out s5_77)
	Mem52[a0 + 160<i32>:word32] = 0<32>
	Mem53[a0 + 164<i32>:word32] = 0<32>
	return
bt_att_connected_exit:


word32 att_cb.isra.3(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_send
//      bt_att_encrypt_change
//      bt_att_req_send
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a4 a5
// Preserved: sp
att_cb.isra.3_entry:
l23057BF2:
	word32 a0_15
	word32 a4_32
	word32 a0_12 = att_op_get_type(CONVERT(Mem5[a0:byte], byte, word32), out a4_32) + 0xFFFFFFFF<32> & 255<i32>
	word32 a5_13 = 4<32>
	branch a0_12 >u 4<32> l23057C1E
l23057C1E:
	a0_15 = 0x23058128<32>
l23057C0A:
	a5_13 = 0x230BCF74<32>
	a0_15 = Mem5[(a0_12 << 2<i32>) + 0x230BCF74<32>:word32]
l23057C18:
	a5Out = a5_13
	return a0_15
att_cb.isra.3_exit:


word32 att_send(word32 ra, word32 s0, word32 s1, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0100, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_rsp_sent
//      bt_att_send
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_send_entry:
l23057C28:
	word32 s2_133 = a0
	word32 a5_119 = 210<i32>
	branch CONVERT(Mem13[a5:byte], byte, word32) != 210<i32> l23057C54
l23057C48:
	dwArg54 = a2
	word32 a3_28
	word32 s0_34
	ra = bt_smp_sign(ra, a0, a0, dwLoc30, dwLoc2C, dwLoc28, s0, dwLoc08, dwArg00, dwArg04, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg48, dwArg4C, dwArg6C, dwArgD8, out s0_34, out a0, out a3_28, out a5_119, out s2_133)
	s1 = a0
	branch a0 != 0<32> l23057C78
l23057C78:
	word32 a1_60
	word32 a4_63
	word32 s1_66
	word32 s10_67
	word32 s11_68
	word32 s7_74
	word32 s9_76
	word32 a1_82
	word32 a3_84
	word32 a4_85
	word32 a5_86
	word32 mstatus_89
	word32 s1_92
	word32 s2_93
	word32 s3_94
	word32 s4_95
	word32 s5_96
	word32 s6_97
	word32 s8_98
	word32 s2_331
	word32 s3_332
	word32 a5_329
	word32 a7_330
	word32 a2_327
	word32 a3_328
	word32 a0_326
	word32 s4_333
	word32 s5_334
	word32 s6_335
	word32 s8_336
	word32 t4_337
	word32 s0_338
	word32 a0_339
	word32 a2_340
	word32 ra_90 = net_buf_unref(printf(ra, 0x230BCFEC<32>, a3_28, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_66, out a0_326, out a1_60, out a2_327, out a3_328, out a4_63, out a5_329, out a7_330, out s2_331, out s3_332, out s4_333, out s5_334, out s6_335, out s7_74, out s8_336, out s9_76, out s10_67, out s11_68, out t4_337), s1_66, s0_34, a1_60, a4_63, mstatus, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, a2, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_338, out s1_92, out a0_339, out a1_82, out a2_340, out a3_84, out a4_85, out a5_86, out s2_93, out s3_94, out s4_95, out s5_96, out s6_97, out s8_98, out mstatus_89)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_92
	a0Out = s1_92
	a1Out = a1_82
	a3Out = a3_84
	a4Out = a4_85
	a5Out = a5_86
	s2Out = s2_93
	s3Out = s3_94
	s4Out = s4_95
	s5Out = s5_96
	s6Out = s6_97
	s7Out = s7_74
	s8Out = s8_98
	s9Out = s9_76
	s10Out = s10_67
	s11Out = s11_68
	mstatusOut = mstatus_89
	return ra_90
l23057C54:
	word32 a2_112 = a2
	branch a2 != 0<32> l23057C5E
l23057C56:
	a2_112 = att_cb.isra.3(a0, out a5_119)
l23057C5E:
	0<32> = dwArg0128
l23057C74_thunk_bt_l2cap_send_cb:
	word32 a0_146
	word32 a1_147
	word32 a3_149
	word32 a4_150
	word32 a5_151
	word32 mstatus_154
	word32 s0_156
	word32 s1_157
	word32 s10_158
	word32 s11_159
	word32 s2_160
	word32 s3_161
	word32 s4_162
	word32 s5_163
	word32 s6_164
	word32 s7_165
	word32 s8_166
	word32 s9_167
	word32 ra_155 = bt_l2cap_send_cb(ra, s1, s2_133, 4<32>, dwArg0100, a2_112, a5_119, mstatus, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, dwArg54, dwArg58, dwArg74, dwArg7C, dwArg88, dwArg8C, dwArgA4, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_156, out s1_157, out a0_146, out a1_147, out a3_149, out a4_150, out a5_151, out s2_160, out s3_161, out s4_162, out s5_163, out s6_164, out s7_165, out s8_166, out s9_167, out s10_158, out s11_159, out mstatus_154)
	s0Out = s0_156
	s1Out = s1_157
	a0Out = a0_146
	a1Out = a1_147
	a3Out = a3_149
	a4Out = a4_150
	a5Out = a5_151
	s2Out = s2_160
	s3Out = s3_161
	s4Out = s4_162
	s5Out = s5_163
	s6Out = s6_164
	s7Out = s7_165
	s8Out = s8_166
	s9Out = s9_167
	s10Out = s10_158
	s11Out = s11_159
	mstatusOut = mstatus_154
	return ra_155
att_send_exit:


void att_send_req(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg64, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_att_encrypt_change
//      bt_att_req_send
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_send_req_entry:
l23057C9A:
	Mem12[a0 + 156<i32>:word32] = a1
	word32 a0_22
	word32 a1_23
	word32 a4_26
	word32 a5_27
	word32 s1_30
	word32 a3_221
	word32 s2_222
	word32 s3_223
	word32 s4_224
	word32 s8_225
	k_sem_take(a0 + 204<i32>, 0<32>, a2, a3, a4, a5, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_30, out a0_22, out a1_23, out a3_221, out a4_26, out a5_27, out s2_222, out s3_223, out s4_224, out s8_225)
	word32 s0_37 = Mem12[a1_23 + 16<i32>:word32]
	branch a0_22 >= 0<32> l23057CD0
l23057CD0:
	word32 a0_40 = net_buf_simple_headroom(a4_26)
	Mem42[s0_37 + 12<i32>:word16] = SLICE(a0_40, word16, 0)
	Mem45[Mem42[a0_40 + 16<i32>:word32] + 14<i32>:word16] = SLICE(CONVERT(Mem42[a1_23 + 12<i32>:uint16], uint16, word32), word16, 0)
	word32 s1_46 = Mem45[s1_30:word32]
	net_buf_ref(a0_40)
	word32 a5_54
	word32 a0_60
	word32 a1_61
	word32 a4_64
	word32 mstatus_68
	word32 s0_239
	word32 s1_240
	word32 a3_241
	word32 a5_242
	word32 s2_243
	word32 s3_244
	word32 s4_245
	word32 s5_246
	word32 s6_247
	word32 s7_248
	word32 s8_249
	word32 s9_250
	word32 s10_251
	word32 s11_252
	word32 ra_69 = bt_l2cap_send_cb(ra, s1_46, s1_46, 4<32>, a0_40, att_cb.isra.3(a0_40, out a5_54), a5_54, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, s1, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_239, out s1_240, out a0_60, out a1_61, out a3_241, out a4_64, out a5_242, out s2_243, out s3_244, out s4_245, out s5_246, out s6_247, out s7_248, out s8_249, out s9_250, out s10_251, out s11_252, out mstatus_68)
	branch a0_60 == 0<32> l23057CC4
l23057D0C:
	word32 s0_101
	word32 s1_253
	word32 a0_254
	word32 a1_255
	word32 a2_256
	word32 a3_257
	word32 a4_258
	word32 a5_259
	word32 s2_260
	word32 s3_261
	word32 s4_262
	word32 s5_263
	word32 s6_264
	word32 s8_265
	word32 mstatus_266
	net_buf_unref(ra_69, a0_60, a0_60, a1_61, a4_64, mstatus_68, dwLoc20, dwLoc1C, dwLoc18, dwArg08, dwArg58, a0_40, dwArg78, dwArg84, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_101, out s1_253, out a0_254, out a1_255, out a2_256, out a3_257, out a4_258, out a5_259, out s2_260, out s3_261, out s4_262, out s5_263, out s6_264, out s8_265, out mstatus_266)
	Mem116[s0_101 + 16<i32>:word32] = 0<32>
l23057CBA:
	word32 s1_226
	word32 a0_227
	word32 a1_228
	word32 a2_229
	word32 a3_230
	word32 a4_231
	word32 a5_232
	word32 s2_233
	word32 s3_234
	word32 s4_235
	word32 s5_236
	word32 s6_237
	word32 s8_238
	k_queue_append(s1_30 + 216<i32>, a4_26, a5_27, mstatus, dwLoc1C, dwArg64, dwArgD8, dwArg0118, dwArg0158, out s1_226, out a0_227, out a1_228, out a2_229, out a3_230, out a4_231, out a5_232, out s2_233, out s3_234, out s4_235, out s5_236, out s6_237, out s8_238)
l23057CC4:
	return
att_send_req_exit:


word32 att_handle_rsp(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_confirm
//      att_error_rsp
//      att_mtu_rsp
//      att_reset
//      bt_att_encrypt_change
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 mstatus ra s0 s11
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_rsp_entry:
l23057D18:
	word32 a1_33
	word32 a5_469
	word32 s5_471
	word32 s6_472
	word32 s8_473
	word32 s4_470
	word32 a4_468
	word32 s3_36
	word32 s2_31
	word32 a0_25
	word32 a3_104
	word32 a2_103
	word32 s1_145 = k_delayed_work_cancel(a0 + 168<i32>, a3, a4, mstatus, dwArg14, dwArg18, dwArg88, dwArg98, dwArgC8, dwArg0108, out a0_25, out a1_33, out a2_103, out a3_104, out a4_468, out a5_469, out s2_31, out s3_36, out s4_470, out s5_471, out s6_472, out s8_473)
	word32 s0_132 = a0
	word32 a5_105 = Mem16[a0 + 156<i32>:int32]
	branch a5_105 != 0<32> l23057D74
l23057D74:
	branch a5_105 != 0x42017240<32> l23057D86
l23057D86:
	branch a0_25 == 0<32> l23057D96
l23057D8A:
	word32 s5_494
	word32 s6_495
	word32 s8_496
	word32 a4_491
	word32 a5_492
	word32 s4_493
	word32 a1_488
	word32 a2_489
	word32 a3_490
	ra = net_buf_unref(ra, s1_145, a0_25, a1_33, 0x42017240<32>, mstatus, dwLoc20, dwLoc1C, s2, dwArg08, dwArg58, s3, dwArg78, dwArg84, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_132, out s1_145, out a0_25, out a1_488, out a2_489, out a3_490, out a4_491, out a5_492, out s2_31, out s3_36, out s4_493, out s5_494, out s6_495, out s8_496, out mstatus)
	Mem77[Mem16[s0_132 + 156<i32>:int32] + 16<i32>:word32] = 0<32>
l23057D96:
	word32 a5_80 = Mem79[s0_132 + 156<i32>:int32]
	word32 a6_85 = Mem79[a5_80 + 4<i32>:int32]
	Mem86[a5_80 + 4<i32>:word32] = 0<32>
	word32 s0_88 = Mem86[a0_25:word32]
	word32 sp_95
	word32 a1_102
	word32 a4_106
	word32 s10_270
	word32 s7_272
	word32 s9_273
	call a6_85 (retsize: 0;)
		uses: a0:a0_87,a1:s1_90,a2:s2_83,a3:s3_81,a4:Mem86[s0_88 + 156<i32>:int32],a5:a5_80,mstatus:mstatus_93,ra:ra_92,s0:s0_88,s1:s1_90,s10:s10_270,s11:s11_271,s2:s2_83,s3:s3_81,s7:s7_272,s9:s9_273,Stack +0000:dwLoc20,Stack +0004:dwLoc1C,Stack +0028:dwArg08,Stack +0034:dwArg14,Stack +0038:dwArg18,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0078:dwArg58,Stack +0098:dwArg78,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +00B8:dwArg98,Stack +00BC:dwArg9C,Stack +00D8:dwArgB8,Stack +00E8:dwArgC8,Stack +00F8:dwArgD8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,Stack +0138:dwArg0118,Stack +0158:dwArg0138,Stack +0178:dwArg0158
		defs: a1:a1_102,a2:a2_103,a3:a3_104,a4:a4_106,a5:a5_105,mstatus:mstatus_111,ra:ra_101,s0:s0_96,s1:s1_98,s10:s10_270,s11:s11_271,s7:s7_272,s9:s9_273,sp:sp_95
	word32 a0_122 = Mem86[a5_105 + 4<i32>:word32]
	branch a5_105 != 0<32> l23057D80
l23057DB8:
	word32 a1_498
	word32 a4_499
	word32 a0_497
	ra = att_req_destroy(ra, s0_132, s1_145, a0_122, a1_102, a4_106, a5_105, mstatus, Mem86[sp_95 + 24<i32>:word32], Mem86[sp_95 + 104<i32>:word32], Mem86[sp_95 + 136<i32>:word32], Mem86[sp_95 + 148<i32>:word32], Mem86[sp_95 + 168<i32>:word32], Mem86[sp_95 + 200<i32>:word32], Mem86[sp_95 + 216<i32>:word32], Mem86[sp_95 + 232<i32>:word32], Mem86[sp_95 + 264<i32>:word32], Mem86[sp_95 + 296<i32>:word32], Mem86[sp_95 + 328<i32>:word32], Mem86[sp_95 + 360<i32>:word32], out a0_497, out a1_498, out a2_103, out a3_104, out a4_499, out a5_105)
l23057D80:
	Mem133[s0_132 + 156<i32>:word32] = 0<32>
l23057D3A:
	word32 t4_487
	word32 s8_484
	word32 s9_485
	word32 s10_486
	word32 s4_480
	word32 s5_481
	word32 s6_482
	word32 s7_483
	word32 s3_479
	word32 a1_475
	word32 a7_477
	word32 s2_478
	word32 a4_476
	word32 a0_474
	ra = printf(ra, 0x230BCFD0<32>, a3_104, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_145, out a0_474, out a1_475, out a2_103, out a3_104, out a4_476, out a5_105, out a7_477, out s2_478, out s3_479, out s4_480, out s5_481, out s6_482, out s7_483, out s8_484, out s9_485, out s10_486, out s11, out t4_487)
l23057D46:
	branch Mem159[s0_132 + 160<i32>:int32] == 0<32> l23057D64
l23057D4C:
	word32 a1_163 = Mem159[a5_105:word32]
	word32 a4_164 = Mem159[s0_132 + 164<i32>:int32]
	Mem165[s0_132 + 160<i32>:word32] = a5_105
	branch a1_163 != a4_164 l23057D5E
l23057D5A:
	Mem166[s0_132 + 164<i32>:word32] = a5_105
l23057D5E:
	att_send_req(ra, s1_145, s0_132, a1_163, a2_103, a3_104, a4_164, a5_105, mstatus, s2, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg54, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138)
l23057D64:
	s0Out = s0_132
	a0Out = 0<32>
	s11Out = s11
	mstatusOut = mstatus
	return ra
att_handle_rsp_exit:


void att_handle_find_info_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_handle_find_type_rsp
//      att_handle_read_type_rsp
//      att_handle_read_rsp
//      att_handle_read_blob_rsp
//      att_handle_read_mult_rsp
//      att_handle_read_group_rsp
//      att_handle_write_rsp
//      att_handle_prepare_write_rsp
//      att_handle_exec_write_rsp
//      att_confirm
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_find_info_rsp_entry:
l23057DBE:
l23057DC6_thunk_att_handle_rsp:
	word32 s0_71
	word32 a0_72
	word32 s11_73
	word32 mstatus_74
	att_handle_rsp(ra, s1, a0, 0<32>, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s0_71, out a0_72, out s11_73, out mstatus_74)
	return
att_handle_find_info_rsp_exit:


void att_handle_find_type_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_find_type_rsp_entry:
l23057DCA:
l23057DCA_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_find_type_rsp_exit:


void att_handle_read_type_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_read_type_rsp_entry:
l23057DCE:
l23057DCE_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_read_type_rsp_exit:


void att_handle_read_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_read_rsp_entry:
l23057DD2:
l23057DD2_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_read_rsp_exit:


void att_handle_read_blob_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_read_blob_rsp_entry:
l23057DD6:
l23057DD6_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_read_blob_rsp_exit:


void att_handle_read_mult_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_read_mult_rsp_entry:
l23057DDA:
l23057DDA_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_read_mult_rsp_exit:


void att_handle_read_group_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_read_group_rsp_entry:
l23057DDE:
l23057DDE_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_read_group_rsp_exit:


void att_handle_write_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_write_rsp_entry:
l23057DE2:
l23057DE2_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_write_rsp_exit:


void att_handle_prepare_write_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_prepare_write_rsp_entry:
l23057DE6:
l23057DE6_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_prepare_write_rsp_exit:


void att_handle_exec_write_rsp(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_handle_exec_write_rsp_entry:
l23057DEA:
l23057DEA_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_handle_exec_write_rsp_exit:


void att_confirm(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_confirm_entry:
l23057DEE:
l23057DEE_thunk_att_handle_find_info_rsp:
	att_handle_find_info_rsp(ra, s1, a0, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158)
	return
att_confirm_exit:


void att_error_rsp(word32 ra, word32 s0, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_error_rsp_entry:
l23057DF2:
	word32 a3_120
	word32 a5_9 = Mem7[a0 + 156<i32>:int32]
	word32 s0_10 = a0
	branch a5_9 == 0<32> l23057E94
l23057E00:
	a4 = 0x42017240<32>
	branch a5_9 == 0x42017240<32> l23057E94
l23057E94:
	a3_120 = 0xE<32>
l23057E0C:
	word32 a5_14 = Mem7[0x42017250<32>:word32]
	branch false l23057E24
l23057E12:
	a4 = Mem7[a3 + 16<i32>:word32]
	Mem21[a3 + CONVERT(Mem7[a5_14 + 12<i32>:uint16], uint16, word32) + 8<i32>:word32] = a4
	Mem23[a4 + 12<i32>:word16] = SLICE(CONVERT(Mem21[a5_14 + 14<i32>:uint16], uint16, word32), word16, 0)
l23057E24:
	a3_120 = CONVERT(Mem25[a2 + 3<i32>:byte], byte, word32)
	branch CONVERT(Mem25[Mem25[a0 + 156<i32>:int32] + 20<i32>:byte], byte, word32) != 0<32> l23057E80
l23057E32:
	word32 a1_36
	s0_10 = Mem25[a0:word32]
	branch a3_120 == 5<32> l23057E68
l23057E68:
	word32 a5_33 = CONVERT(Mem25[a0 + 9<i32>:byte], byte, word32)
	branch a5_33 <=u 1<32> l23057E4A
l23057E72:
	branch a5_33 == 2<32> l23057E90
l23057E90:
	a1_36 = 3<32>
l23057E78:
	a4 = 3<32>
	a1_36 = 4<32>
	branch a5_33 == 3<32> l23057E4C
l23057E3A:
	branch a3_120 != 0xF<32> l23057E80
l23057E40:
	a4 = CONVERT(Mem25[a0 + 9<i32>:byte], byte, word32)
	branch a4 >u 1<32> l23057E80
l23057E4A:
	a1_36 = 2<32>
l23057E4C:
	word32 a0_69
	ra = bt_conn_set_security(ra, s0_10, a0, a1_36, a3_120, s2, s3, mstatus, dwLoc20, dwLoc1C, dwLoc18, s0, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1, out a0_69, out a3_120, out a4, out s2, out s3, out mstatus)
	branch a0_69 != 0<32> l23057E80
l23057E80:
l23057E8C_thunk_att_handle_rsp:
	word32 s11_428
	word32 mstatus_429
	word32 a0_427
	word32 s0_426
	att_handle_rsp(ra, s1, s0_10, a3_120, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s0_426, out a0_427, out s11_428, out mstatus_429)
	return
l23057E56:
	Mem158[Mem48[s0_10 + 156<i32>:int32] + 20<i32>:byte] = 1<8>
	return
att_error_rsp_exit:


void bt_att_accept(word32 ra, word32 s1, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg8C, word32 dwArg9C, word32 dwArgC8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
bt_att_accept_entry:
l23057E98:
	word32 s0_21
	word32 a0_20
	word32 a4_16 = Mem14[a3:word32]
	branch a3 == 0<32> l23057EDA
l23057EDA:
	a0_20 = 0x42017078<32>
	s0_21 = 0<32>
l23057EB6:
	branch Mem14[a4_16 + 228<i32>:int32] == 0<32> l23057F1A
l23057F1A:
	a0_20 = 0x4201715C<32>
	s0_21 = 1<32>
l23057EE0:
	word32 a3_32
	word32 a4_33
	word32 t1_194
	word32 a0_195
	word32 a1_196
	word32 a2_197
	word32 a5_198
	word32 ra_35 = memset(ra, a0_20, 0<32>, 228<i32>, out t1_194, out a0_195, out a1_196, out a2_197, out a3_32, out a4_33, out a5_198)
	word32 s0_40 = s0_21 + 228<i32>
	Mem48[s0_40 + 0x4201707C<32>:word32] = 0x4200E034<32>
	word32 s2_61
	word32 s3_62
	word32 s1_199
	word32 a0_200
	word32 a1_201
	word32 a3_202
	word32 a4_203
	word32 a5_204
	word32 s4_205
	word32 s5_206
	word32 s6_207
	word32 s7_208
	word32 s8_209
	k_sem_init(ra_35, s0_40 + 204<i32>, s0_40 + 0x42017144<32>, 0xA<32>, 0xA<32>, a3_32, a4_33, 0x4200E034<32>, mstatus, dwLoc08, dwArg40, dwArg44, s1, dwArg8C, dwArgC8, dwArg0108, out s1_199, out a0_200, out a1_201, out a3_202, out a4_203, out a5_204, out s2_61, out s3_62, out s4_205, out s5_206, out s6_207, out s7_208, out s8_209)
	Mem78[s3_62:word32] = s2_61
l23057EBC:
	word32 s1_175
	word32 a0_176
	word32 a1_177
	word32 a2_178
	word32 a3_179
	word32 a4_180
	word32 a5_181
	word32 a7_182
	word32 s2_183
	word32 s3_184
	word32 s4_185
	word32 s5_186
	word32 s6_187
	word32 s7_188
	word32 s8_189
	word32 s9_190
	word32 s10_191
	word32 s11_192
	word32 t4_193
	printf(ra, 0x230BD02C<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_175, out a0_176, out a1_177, out a2_178, out a3_179, out a4_180, out a5_181, out a7_182, out s2_183, out s3_184, out s4_185, out s5_186, out s6_187, out s7_188, out s8_189, out s9_190, out s10_191, out s11_192, out t4_193)
l23057ECC:
	return
bt_att_accept_exit:


void att_mtu_rsp(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_mtu_rsp_entry:
l23057F22:
	branch a0 == 0<32> l23057F66
l23057F66:
	return
l23057F28:
	word32 a3_23
	word32 a1_8 = Mem0[a1 + 8<i32>:word32]
	word32 a5_12 = CONVERT(Mem0[a1_8 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem0[a1_8:byte], byte, word32)
	branch a5_12 >u 0x16<32> l23057F46
l23057F46:
	word32 a3_15 = a5_12
	branch a5_12 <=u 247<i32> l23057F54
l23057F50:
	a3_15 = 247<i32>
l23057F54:
	Mem19[a0 + 66<i32>:word16] = SLICE(a3_15, word16, 0)
	Mem20[a0 + 86<i32>:word16] = SLICE(a3_15, word16, 0)
	a3_23 = 0<32>
l23057F3C:
	a3_23 = 4<32>
l23057F42:
l23057F42_thunk_att_handle_rsp:
	word32 s11_211
	word32 a0_210
	word32 mstatus_212
	word32 s0_209
	att_handle_rsp(ra, s1, a0, a3_23, a0, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s0_209, out a0_210, out s11_211, out mstatus_212)
	return
att_mtu_rsp_exit:


word32 att_reset(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_att_disconnected
//      att_timeout
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a0 mstatus ra s0 s11
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_reset_entry:
l23057F68:
	word32 sp_136 = fp + 0xFFFFFFF0<32>
	word32 s1_14 = a0 + 216<i32>
	ra_118 = ra
l23057F78:
	word32 ra_118
	word32 a0_23
	word32 a1_24
	word32 a3_26
	word32 a4_27
	word32 s1_32
	word32 s8_574
	word32 s3_572
	word32 a5_570
	word32 s2_571
	word32 s4_573
	word32 a2_569
	word32 s0_31 = k_queue_get(s1_14, 0<32>, a3, a4, mstatus, s0, ra, dwArgE8, dwArg0128, out s1_32, out a0_23, out a1_24, out a2_569, out a3_26, out a4_27, out a5_570, out s2_571, out s3_572, out s4_573, out s8_574)
	branch a0_23 != 0<32> l23057FBC
l23057FBC:
	word32 s8_555
	word32 s5_553
	word32 s3_551
	word32 a5_549
	word32 a1_547
	word32 s0_545
	word32 a0_546
	word32 s2_550
	word32 a2_548
	word32 s4_552
	word32 s6_554
	ra_118 = net_buf_unref(ra_118, s1_32, a0_23, a1_24, a4_27, mstatus, s2, s0, dwLoc08, dwArg18, dwArg68, ra, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_545, out s1_14, out a0_546, out a1_547, out a2_548, out a3, out a4, out a5_549, out s2_550, out s3_551, out s4_552, out s5_553, out s6_554, out s8_555, out mstatus)
l23057F82:
	word32 s4_559
	word32 a1_557
	word32 a2_558
	word32 s8_560
	word32 a0_556
	word32 a3_75
	word32 a5_100
	word32 a4_148
	atomic_or(s0_31, 4<32>, a3_26, a4_27, mstatus, out a0_556, out a1_557, out a2_558, out a3_75, out a4_148, out a5_100, out s4_559, out s8_560)
	word32 s2_105 = s0_31 + 204<i32>
l23057F92:
	word32 s1_104
	word32 s9_567
	word32 s6_564
	word32 a2_561
	word32 s10_568
	word32 s8_566
	word32 s7_565
	word32 s5_563
	word32 s4_562
	word32 a1_143
	word32 s0_103
	word32 s3_106
	word32 s11_120
	word32 a0_180
	ra_118 = k_sem_give(ra_118, s2_105, a3_75, a4_148, a5_100, mstatus, dwArg04, dwArg08, dwArg50, dwArg54, dwArg78, dwArg84, dwArg9C, dwArgF8, dwArg0138, dwArg0178, out s0_103, out s1_104, out a0_180, out a1_143, out a2_561, out a3_75, out a4_148, out a5_100, out s2_105, out s3_106, out s4_562, out s5_563, out s6_564, out s7_565, out s8_566, out s9_567, out s10_568, out s11_120)
	branch s1_104 != 0<32> l23057F92
l23057F9C:
	word32 s1_123 = Mem11[s0_103 + 160<i32>:int32]
	branch s1_123 != 0<32> l23057FC2
l23057FC2:
	s2_105 = Mem11[s1_123:int32]
l23057FC6:
	word32 mstatus_149
	s1_123 = Mem11[a5_100 + 4<i32>:word32]
	branch a5_100 == 0<32> l23057FD6
l23057FCA:
	call a5_100 (retsize: 0;)
		uses: a0:0<32>,a1:0xE<32>,a2:0<32>,a3:0<32>,a4:s1_127,mstatus:mstatus_149,ra:ra_134,s0:s0_133,s1:s1_127,s2:s2_135,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0050:dwArg50,Stack +0054:dwArg54,Stack +0068:dwArg68,Stack +0078:dwArg78,Stack +0084:dwArg84,Stack +0088:dwArg88,Stack +0094:dwArg94,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,Stack +0128:dwArg0128,Stack +0138:dwArg0138,Stack +0148:dwArg0148,Stack +0168:dwArg0168,Stack +0178:dwArg0178,Stack +FFFFFFF8:dwLoc08
		defs: a1:a1_143,a4:a4_148,a5:a5_144,mstatus:mstatus_149,ra:ra_140,s0:s0_138,s1:s1_139,s11:s11_164,s2:s2_141,s3:s3_152,sp:sp_137
	mstatus = mstatus_149
l23057FD6:
	word32 a3_576
	word32 a2_575
	ra_118 = att_req_destroy(ra_118, s0_103, s1_123, s1_123, a1_143, a4_148, a5_100, mstatus, Mem11[sp_136 + 24<i32>:word32], Mem11[sp_136 + 104<i32>:word32], Mem11[sp_136 + 136<i32>:word32], Mem11[sp_136 + 148<i32>:word32], Mem11[sp_136 + 168<i32>:word32], Mem11[sp_136 + 200<i32>:word32], Mem11[sp_136 + 216<i32>:word32], Mem11[sp_136 + 232<i32>:word32], Mem11[sp_136 + 264<i32>:word32], Mem11[sp_136 + 296<i32>:word32], Mem11[sp_136 + 328<i32>:word32], Mem11[sp_136 + 360<i32>:word32], out a0_180, out a1_143, out a2_575, out a3_576, out a4_148, out a5_100)
	branch s2_105 == 0<32> l23057FA2
l23057FE0:
	s2_105 = Mem11[s2_105:int32]
l23057FA2:
	word32 a5_194 = Mem11[s0_103 + 156<i32>:int32]
	Mem195[s0_103 + 160<i32>:word32] = 0<32>
	Mem196[s0_103 + 164<i32>:word32] = 0<32>
	branch a5_194 != 0<32> l23057FE8
l23057FE8:
	0<32> = dwArg38
l23057FFA_thunk_att_handle_rsp:
	word32 a0_214
	word32 mstatus_222
	word32 s0_224
	word32 s11_227
	word32 ra_223 = att_handle_rsp(ra_118, s1_123, s0_103, 0xE<32>, a4_148, s2_105, s3_106, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s0_224, out a0_214, out s11_227, out mstatus_222)
	s0Out = s0_224
	a0Out = a0_214
	s11Out = s11_227
	mstatusOut = mstatus_222
	return ra_223
l23057FB0:
	0<32> = dwArg38
	s0Out = s0
	a0Out = a0_180
	s11Out = s11_120
	mstatusOut = mstatus
	return ra_118
att_reset_exit:


void bt_att_disconnected(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bt_att_disconnected_entry:
l23057FFE:
	word32 a0_14
	word32 mstatus_22
	word32 s11_27
	word32 s0_53
	word32 s0_304
	word32 a4_102
	word32 a3_103
	word32 ra_112 = bt_gatt_disconnected(att_reset(ra, a0, a0, a3, a4, s2, mstatus, dwLoc10, s0, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg40, dwArg44, dwArg48, dwArg58, dwArg68, ra, dwArg78, dwArg84, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, out s0_304, out a0_14, out s11_27, out mstatus_22), a0_14, s11_27, dwLoc08, out s0_53, out a3_103, out a4_102)
	word32 a5_72 = Mem7[s0_53 + 184<i32>:int32]
	branch a5_72 == 0<32> l2305801E
l23058016:
	word32 s8_313
	word32 s6_312
	word32 s5_311
	word32 s4_310
	word32 s2_308
	word32 s3_309
	word32 a2_306
	word32 a5_307
	word32 a0_305
	k_delayed_work_del_timer(s0_53 + 168<i32>, a4_102, a5_72, mstatus_22, dwArg24, dwArg98, dwArgA8, dwArgD8, dwArg0118, out a0_305, out a2_306, out a3_103, out a4_102, out a5_307, out s2_308, out s3_309, out s4_310, out s5_311, out s6_312, out s8_313)
l2305801E:
	word32 a5_98 = Mem7[s0_53 + 216<i32>:int32]
	branch a5_98 == 0<32> l23058030
l23058024:
	word32 s1_314
	word32 a5_315
	word32 s2_316
	word32 s3_317
	word32 s4_318
	word32 s5_319
	word32 s6_320
	word32 s7_321
	word32 s8_322
	word32 s9_323
	ra_112 = k_queue_free(ra_112, s0_53 + 216<i32>, a3_103, a4_102, a5_98, mstatus_22, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, dwArg0138, dwArg0178, out s1_314, out a3_103, out a4_102, out a5_315, out s2_316, out s3_317, out s4_318, out s5_319, out s6_320, out s7_321, out s8_322, out s9_323)
	Mem129[s0_53 + 216<i32>:word32] = 0<32>
l23058030:
	branch Mem131[s0_53 + 204<i32>:int32] == 0<32> l23058044
l23058044:
	return
l23058036:
l23058040_thunk_k_sem_delete:
	word32 s1_324
	word32 a1_325
	word32 a3_326
	word32 a4_327
	word32 s2_328
	word32 s3_329
	word32 s5_330
	word32 s6_331
	word32 s7_332
	word32 s9_333
	word32 s10_334
	word32 s11_335
	k_sem_delete(ra_112, s0_53 + 204<i32>, a3_103, a4_102, mstatus_22, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, dwArg0148, dwArg0188, out s1_324, out a1_325, out a3_326, out a4_327, out s2_328, out s3_329, out s5_330, out s6_331, out s7_332, out s9_333, out s10_334, out s11_335)
	return
bt_att_disconnected_exit:


void att_timeout(word32 ra, word32 s0, word32 a0, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
att_timeout_entry:
l2305804C:
	word32 a3_18
	word32 a4_19
	word32 s2_25
	word32 s0_47
	word32 s11_50
	word32 s0_76
	word32 s1_137
	word32 a0_138
	word32 a1_139
	word32 a2_140
	word32 a5_141
	word32 a7_142
	word32 s3_143
	word32 s4_144
	word32 s5_145
	word32 s6_146
	word32 s7_147
	word32 s8_148
	word32 s9_149
	word32 s10_150
	word32 s11_151
	word32 t4_152
	word32 a0_153
	word32 mstatus_154
	word32 a3_155
	word32 a4_156
	bt_gatt_disconnected(att_reset(printf(ra, 0x230BD01C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_137, out a0_138, out a1_139, out a2_140, out a3_18, out a4_19, out a5_141, out a7_142, out s2_25, out s3_143, out s4_144, out s5_145, out s6_146, out s7_147, out s8_148, out s9_149, out s10_150, out s11_151, out t4_152), a0, a0 + -168<i32>, a3_18, a4_19, s2_25, mstatus, dwLoc10, s0, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg28, dwArg2C, dwArg34, dwArg40, dwArg44, dwArg48, dwArg58, dwArg68, ra, dwArg78, dwArg84, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, out s0_47, out a0_153, out s11_50, out mstatus_154), Mem11[s0_47 + -168<i32>:int32], s11_50, dwLoc08, out s0_76, out a3_155, out a4_156)
	Mem96[s0_76 + 3928<i32>:word32] = 0<32>
	return
att_timeout_exit:


void bt_att_encrypt_change(word32 ra, word32 s1, word32 a0, word32 a1, word32 a4, word32 s2, word32 s3, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_att_encrypt_change_entry:
l2305807C:
	branch a1 == 0<32> l23058088
l23058088:
	word32 a2_19
	word32 a3_20
	word32 s0_26
	word32 s1_27
	word32 ra_25 = bt_gatt_encrypt_change(ra, s11, out s0_26, out s1_27, out a2_19, out a3_20)
	word32 a4_44 = CONVERT(Mem12[s1_27 + 9<i32>:byte], byte, word32)
	branch a4_44 == 1<32> l23058118
l230580A6:
	word32 a5_46 = Mem12[s0_26 + 156<i32>:int32]
	branch a5_46 == 0<32> l23058118
l230580AC:
	word32 a5_47 = CONVERT(Mem12[a5_46 + 20<i32>:byte], byte, word32)
	branch a5_47 == 0<32> l23058118
l230580B2:
	word32 a3_55
	word32 a5_57
	word32 s1_60
	word32 a1_361
	word32 a4_362
	word32 s2_363
	word32 s3_364
	word32 s4_365
	word32 s8_366
	word32 a0_52
	k_sem_take(s0_26 + 204<i32>, 0xFFFFFFFF<32>, a2_19, a3_20, a4_44, a5_47, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_60, out a0_52, out a1_361, out a3_55, out a4_362, out a5_57, out s2_363, out s3_364, out s4_365, out s8_366)
	word32 s0_67 = Mem12[a5_57:word32]
	branch CONVERT(Mem12[a5_57 + 13<i32>:byte], byte, word32) != 4<32> l230580F4
l230580CA:
	a0_52 = atomic_get(s0_67 + 152<i32>) >> 2<i32> & 1<32>
	branch a0_52 == 0<32> l230580F4
l230580F4:
	word32 a5_86
	word32 s0_105
	word32 s1_367
	word32 a0_368
	word32 a1_369
	word32 a3_370
	word32 a4_371
	word32 a5_372
	word32 s2_373
	word32 s3_374
	word32 s4_375
	word32 s5_376
	word32 s6_377
	word32 s7_378
	word32 s8_379
	word32 s9_380
	word32 s10_381
	word32 s11_382
	word32 mstatus_383
	bt_l2cap_send_cb(ra_25, s1_60, s1_60, 4<32>, Mem12[a0_52 + 8<i32>:word32], att_cb.isra.3(a0_52, out a5_86), a5_86, mstatus, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, s1, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_105, out s1_367, out a0_368, out a1_369, out a3_370, out a4_371, out a5_372, out s2_373, out s3_374, out s4_375, out s5_376, out s6_377, out s7_378, out s8_379, out s9_380, out s10_381, out s11_382, out mstatus_383)
	Mem125[Mem82[s0_105 + 156<i32>:int32] + 16<i32>:word32] = 0<32>
l23058118:
	return
l230580D8:
	word32 a5_136
	word32 a3_140
	word32 a4_141
	word32 s2_147
	word32 s1_384
	word32 a0_385
	word32 a1_386
	word32 a2_387
	word32 a7_388
	word32 s3_389
	word32 s4_390
	word32 s5_391
	word32 s6_392
	word32 s7_393
	word32 s8_394
	word32 s9_395
	word32 s10_396
	word32 s11_397
	word32 t4_398
	word32 ra_143 = printf(ra_25, 0x230BD07C<32>, a3_55, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_384, out a0_385, out a1_386, out a2_387, out a3_140, out a4_141, out a5_136, out a7_388, out s2_147, out s3_389, out s4_390, out s5_391, out s6_392, out s7_393, out s8_394, out s9_395, out s10_396, out s11_397, out t4_398)
l230580F0_thunk_k_sem_give:
	word32 s0_399
	word32 s1_400
	word32 a0_401
	word32 a1_402
	word32 a2_403
	word32 a3_404
	word32 a4_405
	word32 a5_406
	word32 s2_407
	word32 s3_408
	word32 s4_409
	word32 s5_410
	word32 s6_411
	word32 s7_412
	word32 s8_413
	word32 s9_414
	word32 s10_415
	word32 s11_416
	k_sem_give(ra_143, s2_147, a3_140, a4_141, a5_136, mstatus, dwArg14, dwArg18, dwArg60, dwArg64, dwArg88, dwArg94, dwArgAC, dwArg0108, dwArg0148, dwArg0188, out s0_399, out s1_400, out a0_401, out a1_402, out a2_403, out a3_404, out a4_405, out a5_406, out s2_407, out s3_408, out s4_409, out s5_410, out s6_411, out s7_412, out s8_413, out s9_414, out s10_415, out s11_416)
	return
l2305807E:
l23058084_thunk_att_handle_rsp:
	word32 s0_417
	word32 a0_418
	word32 s11_419
	word32 mstatus_420
	att_handle_rsp(ra, s1, a0, 5<32>, a4, s2, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg50, dwArg54, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0158, out s0_417, out a0_418, out s11_419, out mstatus_420)
	return
bt_att_encrypt_change_exit:


void att_exec_write_req()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
att_exec_write_req_entry:
l23058124:
	return
att_exec_write_req_exit:


void att_pdu_sent(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg4C, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_req_sent
//      att_cfm_sent
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_pdu_sent_entry:
l23058128:
	word32 s2_20 = bt_l2cap_le_lookup_tx_cid(a0, 4<32>) + 216<i32>
	ra_25 = ra
l23058142:
	word32 ra_25
	word32 a0_31
	word32 a3_34
	word32 a4_35
	word32 s3_41
	word32 s8_315
	word32 s2_313
	word32 a2_312
	word32 a1_311
	word32 s4_314
	word32 a5_36
	word32 s1_39 = net_buf_get(ra_25, s0, s2_20, 0<32>, a3, a4, mstatus, dwArg08, dwArgB8, dwArgF8, out a0_31, out a1_311, out a2_312, out a3_34, out a4_35, out a5_36, out s2_313, out s3_41, out s4_314, out s8_315)
	branch a0_31 != 0<32> l23058162
l23058162:
	word32 s0_52 = Mem30[s1_39 + 156<i32>:int32]
	branch s0_52 == 0<32> l23058186
l23058168:
	s0_52 = Mem30[a5_36 + 16<i32>:word32]
	branch a5_36 != a0_31 l23058186
l2305816E:
	Mem58[s0_52 + 12<i32>:word16] = SLICE(net_buf_simple_headroom(a4_35), word16, 0)
	a5_36 = CONVERT(Mem58[a0_31 + 12<i32>:uint16], uint16, word32)
	Mem60[s0_52 + 14<i32>:word16] = SLICE(a5_36, word16, 0)
l23058186:
	word32 a0_72
	word32 s11_345
	word32 s10_344
	word32 s9_343
	word32 s8_342
	word32 s7_341
	word32 s6_340
	word32 s5_339
	word32 s4_338
	word32 s3_337
	word32 a1_335
	word32 a5_336
	word32 s1_334
	ra_25 = att_send(ra_25, s0_52, s1_39, s3_41, 0<32>, a5_36, mstatus, dwLoc30, dwLoc2C, dwLoc14, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg4C, dwArg58, s3, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0, out s1_334, out a0_72, out a1_335, out a3, out a4, out a5_336, out s2_20, out s3_337, out s4_338, out s5_339, out s6_340, out s7_341, out s8_342, out s9_343, out s10_344, out s11_345, out mstatus)
	branch a0_72 != 0<32> l23058142
l23058192:
	0<32> = dwArg0128
	return
l2305814E:
	0<32> = dwArg0128
l2305815E_thunk_k_sem_give:
	word32 a0_318
	word32 s1_317
	word32 s11_333
	word32 s9_331
	word32 s10_332
	word32 s7_329
	word32 s8_330
	word32 s5_327
	word32 s6_328
	word32 s3_325
	word32 s4_326
	word32 a5_323
	word32 s2_324
	word32 a3_321
	word32 a4_322
	word32 a1_319
	word32 a2_320
	word32 s0_316
	k_sem_give(ra_25, s1_39 + 204<i32>, a3_34, a4_35, a5_36, mstatus, dwArg14, dwArg18, s1, ra, dwArg88, dwArg94, dwArgAC, dwArg0108, dwArg0148, dwArg0188, out s0_316, out s1_317, out a0_318, out a1_319, out a2_320, out a3_321, out a4_322, out a5_323, out s2_324, out s3_325, out s4_326, out s5_327, out s6_328, out s7_329, out s8_330, out s9_331, out s10_332, out s11_333)
	return
att_pdu_sent_exit:


word32 att_chan_get(word32 ra, word32 a0, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_get_mtu
//      bt_att_create_pdu
//      bt_att_send
//      bt_att_req_send
//      bt_att_req_cancel
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
att_chan_get_entry:
l230581A0:
	word32 a1_102
	word32 a5_105
	word32 s0_14
	word32 a0_20
	word32 a4_104 = CONVERT(Mem7[a0 + 13<i32>:byte], byte, word32)
	branch a4_104 == 4<32> l230581C0
l230581C0:
	word32 a0_12 = bt_l2cap_le_lookup_rx_cid(a0, 4<32>, out a5_105)
	a1_102 = 4<32>
	s0_14 = a0_12
	branch a0_12 != 0<32> l230581E0
l230581E0:
	branch (atomic_get(a0_12 + 152<i32>) >> 2<i32> & 1<32>) == 0<32> l230581D6
l230581EE:
	a0_20 = 0x230BCFA8<32>
l230581CA:
	word32 a0_154
	word32 a2_155
	word32 a7_156
	word32 t4_157
	ra = printf(ra, 0x230BCF88<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_154, out a1_102, out a2_155, out a3, out a4_104, out a5_105, out a7_156, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4_157)
l230581B0:
	a0_20 = 0x230B9228<32>
l230581B8:
	word32 a0_158
	word32 a2_159
	word32 a7_160
	word32 t4_161
	ra = printf(ra, a0_20, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_158, out a1_102, out a2_159, out a3, out a4_104, out a5_105, out a7_160, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4_161)
	s0_14 = 0<32>
l230581D6:
	s1Out = s1
	a0Out = s0_14
	a1Out = a1_102
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_104
	a5Out = a5_105
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
att_chan_get_exit:


void att_req_sent(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg4C, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_req_sent_entry:
l230581F8:
	word32 s1_30 = a1
	word32 s0_14 = a0
	branch Mem12[bt_l2cap_le_lookup_tx_cid(a0, 4<32>) + 156<i32>:int32] == 0<32> l2305821E
l23058210:
	word32 s8_170
	word32 s6_169
	word32 s5_168
	word32 s4_167
	word32 s2_166
	word32 a5_165
	word32 a2_164
	word32 a1_163
	word32 a0_162
	s0_14 = k_delayed_work_submit(0x7000530<32>, a3, a4, mstatus, s0, dwLoc08, dwArg14, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s1_30, out a0_162, out a1_163, out a2_164, out a3, out a4, out a5_165, out s2_166, out s3, out s4_167, out s5_168, out s6_169, out s8_170)
l2305821E:
l2305822A_thunk_att_pdu_sent:
	att_pdu_sent(ra, s0, s1_30, s0_14, a3, a4, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg4C, dwArg58, ra, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0188)
	return
att_req_sent_exit:


void att_cfm_sent(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg4C, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_rsp_sent
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_cfm_sent_entry:
l2305822E:
	bt_l2cap_le_lookup_tx_cid(a0, 4<32>)
l2305824C_thunk_att_pdu_sent:
	att_pdu_sent(ra, s0, a1, a0, a3, a4, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg4C, dwArg58, ra, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0188)
	return
att_cfm_sent_exit:


void att_rsp_sent(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg4C, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_rsp_sent_entry:
l23058250:
l23058250_thunk_att_cfm_sent:
	att_cfm_sent(ra, s0, a0, a1, a3, a4, s3, mstatus, dwArg00, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg4C, dwArg58, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0188)
	return
att_rsp_sent_exit:


void write_cb(word32 ra, word32 a0, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 tp
// Preserved: s0 sp
write_cb_entry:
l23058254:
	word32 s0_11 = Mem7[a0:word32]
	word32 a5_103
	word32 a2_101
	word32 a4_102
	word32 a0_17 = bt_gatt_check_perm(a0, a0, 42<i32>, out a2_101, out a4_102, out a5_103)
	Mem24[s0_11 + 20<i32>:byte] = SLICE(a0_17, byte, 0)
	branch a0_17 != 0<32> l230582C4
l23058276:
	word32 a5_51
	word32 s0_37
	word32 a0_40
	word32 a6_45
	call Mem24[a0 + 8<i32>:int32] (retsize: 0;)
		uses: a0:a0_17,a1:a0,a3:CONVERT(Mem24[s0_11 + 16<i32>:uint16], uint16, word32),a4:CONVERT(Mem24[s0_11 + 18<i32>:uint16], uint16, word32),a5:CONVERT(CONVERT(Mem24[s0_11 + 8<i32>:byte], byte, word32) <u 1<i32>, bool, word32) << 1<i32>,a6:a6_45,ra:ra,s0:Mem24[a0_17:word32],s1:a0_17,s2:a0
		defs: a0:a0_40,a6:a6_45,s0:s0_37
	branch a0_40 < 0<32> l230582AA
l230582AA:
	a5_51 = 0xE<32>
	branch a0_40 >u 1<i32> l230582C0
l230582B8:
	a5_51 = 0<32> - a0_40 & 255<i32>
l2305829A:
	branch a0_40 != CONVERT(Mem24[s0_37 + 16<i32>:uint16], uint16, word32) l230582D2
l230582D2:
	a5_51 = 0xE<32>
l230582C0:
	Mem58[s0_37 + 20<i32>:byte] = SLICE(a5_51, byte, 0)
l230582A2:
	Mem59[s0_37 + 20<i32>:byte] = 0<8>
l230582C4:
	0<32> = dwArg38
	return
write_cb_exit:


void read_cb(word32 ra, word32 a0, word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
read_cb_entry:
l230582D6:
	word32 s4_17 = Mem15[a1:int32]
	word32 a1_20 = Mem15[a0 + 8<i32>:word32]
	word32 s3_21 = Mem15[s4_17:int32]
	word32 a1_140
	word32 a5_141
	Mem29[net_buf_simple_add(a0 + 8<32>, 0<32>, a4, out a1_140, out a5_141) + 12<i32>:word32] = a1_20
	Mem30[a1_20 + 16<i32>:byte] = 0<8>
	word32 a2_35
	word32 a4_36
	word32 a5_142
	word32 a0_34 = bt_gatt_check_perm(s3_21, a0, 0x15<32>, out a2_35, out a4_36, out a5_142)
	Mem41[a1_20 + 16<i32>:byte] = SLICE(a0_34, byte, 0)
	branch a0_34 != 0<32> l23058356
l23058312:
	word32 s0_43 = Mem41[a4_36 + 8<i32>:word32]
	word32 a5_46 = CONVERT(Mem41[a4_36 + 12<i32>:uint16], uint16, word32)
	word32 s0_58
	word32 a0_64
	word32 a4_66
	call Mem41[a0 + 4<i32>:int32] (retsize: 0;)
		uses: a0:s3_21,a1:a0,a2:a2_35 + a5_46,a3:CONVERT(SLICE(CONVERT(Mem41[s4_17 + 86<i32>:uint16], uint16, word32) - a5_46, word16, 0), word16, word32),a4:CONVERT(Mem41[s0_43 + 4<i32>:uint16], uint16, word32),a5:a5_46,ra:ra,s0:s0_43,s1:a0_34,s2:a0,s3:s3_21,s4:s4_17
		defs: a0:a0_64,a4:a4_66,s0:s0_58
	branch a0_64 >= 0<32> l23058368
l23058368:
	word32 a5_144
	word32 a1_143
	net_buf_simple_add(a0_64 + 8<32>, a0_64, a4_66, out a1_143, out a5_144)
l2305833C:
	word32 a0_82 = 0xE<32>
	branch a0_64 >u 1<i32> l23058352
l2305834A:
	a0_82 = 0<32> - a0_64 & 255<i32>
l23058352:
	Mem87[s0_58 + 16<i32>:byte] = SLICE(a0_82, byte, 0)
l23058356:
	return
read_cb_exit:


word32 bt_att_create_pdu(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg9C, word32 dwArgC8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gatt_notify
//      gatt_indicate
//      bt_gatt_exchange_mtu
//      gatt_read_type_rsp
//      bt_gatt_read
//      bt_gatt_write_without_response_cb
//      bt_gatt_write
//      gatt_prepare_write_rsp
//      bt_gatt_unsubscribe
//      att_indicate
//      att_mtu_req
//      send_err_rsp.part.7
//      att_read_group_req
//      att_read_mult_req
//      att_read_req
//      att_read_type_req
//      att_find_type_req
//      att_find_info_req
//      att_signed_write_cmd
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s11 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_att_create_pdu_entry:
l23058374:
	word32 a0_20
	word32 a1_269
	word32 s4_270
	word32 s7_271
	word32 s8_272
	word32 s9_273
	word32 s10_274
	word32 s5_124
	word32 s6_125
	word32 s2_121
	word32 s3_122
	word32 s11_120
	word32 s1_118
	word32 a4_115
	word32 a5_104
	word32 a2_113
	word32 a3_114
	word32 ra_117 = att_chan_get(ra, a0, a3, dwLoc08, dwArg40, dwArg44, s1, dwArg8C, out s1_118, out a0_20, out a1_269, out a2_113, out a3_114, out a4_115, out a5_104, out s2_121, out s3_122, out s4_270, out s5_124, out s6_125, out s7_271, out s8_272, out s9_273, out s10_274, out s11_120)
	word32 s0_155 = a0_20
	branch a0_20 == 0<32> l230583A2
l23058388:
	branch CONVERT(Mem13[a0_20 + 86<i32>:uint16], uint16, word32) >=u a2 + 1<32> l230583AE
l230583AE:
	word32 a2_48
	word32 a4_44
	word32 a0_43 = att_op_get_type(s1_118, out a4_44)
	word32 a5_46 = 2<32>
	branch a0_43 == 2<32> l230583C2
l230583BA:
	a5_46 = 4<32>
	a2_48 = 0xFFFFFFFF<32>
	branch a0_43 != 4<32> l230583C8
l230583C2:
	a2_48 = 0x7000530<32>
l230583C8:
	ra_117 = bt_l2cap_create_pdu_timeout(ra_117, 0<32>, a2_48, a3_114, a4_44, a5_46, s5_124, mstatus, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg74, dwArg7C, dwArg88, dwArgC8, dwArgE8, out s1_118, out a2_113, out a3_114, out a4_115, out s2_121, out s3_122, out s5_124, out s6_125, out s11_120, out mstatus)
	s0_155 = 0<32>
	branch false l230583E4
l230583E4:
	word32 a1_284
	Mem105[net_buf_simple_add(8<32>, 1<32>, a4_115, out a1_284, out a5_104):byte] = SLICE(s1_118, byte, 0)
l230583D4:
	word32 a0_285
	word32 a1_286
	word32 a7_287
	word32 s4_288
	word32 s7_289
	word32 s8_290
	word32 s9_291
	word32 s10_292
	word32 t4_293
	ra_117 = printf(ra_117, 0x230BB728<32>, a3_114, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_118, out a0_285, out a1_286, out a2_113, out a3_114, out a4_115, out a5_104, out a7_287, out s2_121, out s3_122, out s4_288, out s5_124, out s6_125, out s7_289, out s8_290, out s9_291, out s10_292, out s11_120, out t4_293)
l23058394:
	word32 a0_275
	word32 a1_276
	word32 a7_277
	word32 s4_278
	word32 s7_279
	word32 s8_280
	word32 s9_281
	word32 s10_282
	word32 t4_283
	ra_117 = printf(ra_117, 0x230BD054<32>, a3_114, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_118, out a0_275, out a1_276, out a2_113, out a3_114, out a4_115, out a5_104, out a7_277, out s2_121, out s3_122, out s4_278, out s5_124, out s6_125, out s7_279, out s8_280, out s9_281, out s10_282, out s11_120, out t4_283)
	s0_155 = 0<32>
l230583A2:
	s0Out = s0_155
	s1Out = s1_118
	a0Out = s0_155
	a2Out = a2_113
	a3Out = a3_114
	a4Out = a4_115
	a5Out = a5_104
	s2Out = s2_121
	s3Out = s3_122
	s4Out = dwArg04
	s5Out = s5_124
	s6Out = s6_125
	s11Out = s11_120
	mstatusOut = mstatus
	return ra_117
bt_att_create_pdu_exit:


void att_indicate(word32 ra, word32 s0, word32 a5, word32 s6, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_indicate_entry:
l230583F2:
	word32 s0_28
	word32 s1_29
	word32 a3_36
	word32 mstatus_52
	word32 a5_61
	word32 s0_64
	word32 s1_65
	word32 a0_79
	word32 mstatus_81
	word32 a1_188
	word32 a2_189
	word32 a4_190
	word32 a5_191
	word32 a2_192
	word32 a3_193
	word32 a4_194
	word32 s2_195
	word32 s3_196
	word32 s4_197
	word32 s5_198
	word32 s6_199
	word32 s11_200
	word32 ra_63 = bt_att_create_pdu(bt_gatt_notification(ra, s0, s0, net_buf_simple_pull_le16(a5, out a1_188, out a2_189, out a4_190, out a5_191), dwArg44, CONVERT(Mem11[Mem11[dwArg44 + 8<i32>:word32] + 12<i32>:uint16], uint16, word32), s6, mstatus, out s0_28, out s1_29, out a3_36, out mstatus_52), s1_29, s0_28, 0<32>, a3_36, mstatus_52, dwLoc18, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, dwArg68, ra, dwArg7C, dwArgA8, dwArgC8, out s0_64, out s1_65, out a0_79, out a2_192, out a3_193, out a4_194, out a5_61, out s2_195, out s3_196, out s4_197, out s5_198, out s6_199, out s11_200, out mstatus_81)
	branch a0_79 == 0<32> l23058434
l23058420:
	word32 s0_201
	word32 s1_202
	word32 a0_203
	word32 a1_204
	word32 a3_205
	word32 a4_206
	word32 a5_207
	word32 s2_208
	word32 s3_209
	word32 s4_210
	word32 s5_211
	word32 s6_212
	word32 s7_213
	word32 s8_214
	word32 s9_215
	word32 s10_216
	word32 s11_217
	word32 mstatus_218
	bt_l2cap_send_cb(ra_63, s1_65, s0_64, 4<32>, a0_79, 0x2305822E<32>, a5_61, mstatus_81, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, dwArg68, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_201, out s1_202, out a0_203, out a1_204, out a3_205, out a4_206, out a5_207, out s2_208, out s3_209, out s4_210, out s5_211, out s6_212, out s7_213, out s8_214, out s9_215, out s10_216, out s11_217, out mstatus_218)
l23058434:
	return
att_indicate_exit:


void att_mtu_req(word32 ra, word32 s1, word32 a0, word32 a3, word32 a5, word32 s2, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_mtu_req_entry:
l2305843E:
	branch (CONVERT(Mem11[a5 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem11[a5:byte], byte, word32)) <=u 0x16<32> l230584C0
l230584C0:
l2305845C:
	word32 a4_31
	word32 s1_36
	word32 s2_39
	word32 a0_50
	word32 mstatus_52
	word32 s11_230
	word32 s6_229
	word32 s5_228
	word32 s4_227
	word32 s3_226
	word32 a5_225
	word32 a3_224
	word32 a2_223
	word32 s0_222
	word32 ra_34 = bt_att_create_pdu(ra, a0, Mem11[a0:int32], 2<32>, a3, mstatus, s2, dwArg10, dwArg14, dwArg20, dwArg24, dwArg30, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, s1, ra, dwArg7C, dwArgA8, dwArgC8, out s0_222, out s1_36, out a0_50, out a2_223, out a3_224, out a4_31, out a5_225, out s2_39, out s3_226, out s4_227, out s5_228, out s6_229, out s11_230, out mstatus_52)
	branch a0_50 == 0<32> l230584B4
l23058472:
	word32 a5_232
	word32 a1_231
	word32 a0_62 = net_buf_simple_add(a0_50 + 8<i32>, 2<32>, a4_31, out a1_231, out a5_232)
	Mem68[a0_62:byte] = 0xF7<8>
	Mem69[a0_62 + 1<i32>:byte] = 0<8>
	word32 s0_84
	word32 s1_85
	word32 s5_241
	word32 s6_242
	word32 s7_243
	word32 s4_240
	word32 s3_239
	word32 s2_238
	word32 a5_237
	word32 a4_236
	word32 a3_235
	word32 a1_234
	word32 a0_233
	word32 s8_244
	word32 s9_245
	word32 s10_246
	word32 s11_247
	word32 mstatus_248
	bt_l2cap_send_cb(ra_34, s1_36, s2_39, 4<32>, a0_50, 0x23058250<32>, 0xFFFFFFF7<32>, mstatus_52, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg5C, s1, ra, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, out s0_84, out s1_85, out a0_233, out a1_234, out a3_235, out a4_236, out a5_237, out s2_238, out s3_239, out s4_240, out s5_241, out s6_242, out s7_243, out s8_244, out s9_245, out s10_246, out s11_247, out mstatus_248)
	word32 a5_104 = s0_84
	branch s0_84 <=u 247<i32> l230584AA
l230584A6:
	a5_104 = 247<i32>
l230584AA:
	Mem108[s1_85 + 66<i32>:word16] = SLICE(a5_104, word16, 0)
	Mem109[s1_85 + 86<i32>:word16] = SLICE(a5_104, word16, 0)
l230584B4:
	return
att_mtu_req_exit:


void send_err_rsp.part.7(word32 ra, word32 a0, word32 a3, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg6C, word32 dwArg74, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0100, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_att_recv
//      att_read_group_req
//      att_read_mult_req
//      att_read_req
//      att_read_type_req
//      att_find_type_req
//      att_find_info_req
//      att_signed_write_cmd
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
send_err_rsp.part.7_entry:
l230584C4:
	word32 a4_28
	word32 s0_32
	word32 s1_33
	word32 s2_36
	word32 s3_37
	word32 a0_47
	word32 mstatus_49
	word32 a2_185
	word32 a3_186
	word32 a5_187
	word32 s4_188
	word32 s5_189
	word32 s6_190
	word32 s11_191
	word32 ra_31 = bt_att_create_pdu(ra, a0, a0, 4<32>, a3, mstatus, dwLoc28, dwArg00, dwArg04, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, s3, dwArg6C, dwArg98, dwArgB8, out s0_32, out s1_33, out a0_47, out a2_185, out a3_186, out a4_28, out a5_187, out s2_36, out s3_37, out s4_188, out s5_189, out s6_190, out s11_191, out mstatus_49)
	branch a0_47 == 0<32> l23058520
l23058520:
	0<32> = dwArg0128
	return
l230584E2:
	word32 a5_65
	word32 a1_192
	word32 a0_63 = net_buf_simple_add(a0_47 + 8<32>, 4<32>, a4_28, out a1_192, out a5_65)
	Mem66[a0_63 + 1<i32>:byte] = SLICE(s0_32, byte, 0)
	Mem68[a0_63:byte] = SLICE(s3_37, byte, 0)
	Mem69[a0_63 + 2<i32>:byte] = SLICE(s0_32 >>u 8<i32>, byte, 0)
	Mem70[a0_63 + 3<i32>:byte] = SLICE(s2_36, byte, 0)
	0<32> = dwArg0128
l2305851C_thunk_bt_l2cap_send_cb:
	word32 s0_193
	word32 s1_194
	word32 a0_195
	word32 a1_196
	word32 a3_197
	word32 a4_198
	word32 a5_199
	word32 s2_200
	word32 s3_201
	word32 s4_202
	word32 s5_203
	word32 s6_204
	word32 s7_205
	word32 s8_206
	word32 s9_207
	word32 s10_208
	word32 s11_209
	word32 mstatus_210
	bt_l2cap_send_cb(ra_31, s1_33, s1_33, 4<32>, dwArg0100, 0x23058250<32>, a5_65, mstatus_49, dwArg30, dwArg34, dwArg40, dwArg44, dwArg48, a0_47, dwArg58, dwArg74, dwArg7C, dwArg88, dwArg8C, dwArgA4, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_193, out s1_194, out a0_195, out a1_196, out a3_197, out a4_198, out a5_199, out s2_200, out s3_201, out s4_202, out s5_203, out s6_204, out s7_205, out s8_206, out s9_207, out s10_208, out s11_209, out mstatus_210)
	return
send_err_rsp.part.7_exit:


void bt_att_recv(word32 ra, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_att_recv_entry:
l2305852E:
	word32 sp_161 = fp + -48<i32>
	branch CONVERT(Mem15[a1 + 12<i32>:uint16], uint16, word32) != 0<32> l23058560
l23058560:
	word32 a1_328
	word32 a5_330
	word32 a4_329
	word32 a0_23 = net_buf_simple_pull_mem(a1 + 8<i32>, 1<32>, out a1_328, out a4_329, out a5_330)
	word32 a2_27 = CONVERT(Mem15[a0_23:byte], byte, word32)
	word32 a4_29 = 0x230BD110<32>
	word32 a5_31 = 0<32>
	word32 s0_139 = 0x230BD110<32>
l23058584:
	word32 a3_113
	word32 ra_124
	word32 s3_129
	word32 s4_130
	branch CONVERT(Mem15[a4_29:byte], byte, word32) != a2_27 l230585C4
l230585C4:
	a5_31 = a5_31 + 1<32>
	a4_29 = a4_29 + 8<32>
	branch a5_31 != 0x1C<32> l23058584
l230585CC:
	word32 s1_366
	word32 a0_367
	word32 a1_368
	word32 a2_369
	word32 a3_370
	word32 a4_371
	word32 a5_372
	word32 a7_373
	word32 s2_374
	word32 s5_375
	word32 s6_376
	word32 s7_377
	word32 s8_378
	word32 s9_379
	word32 s10_380
	word32 s11_381
	word32 t4_382
	ra_124 = printf(ra, 0x230BD0AC<32>, 0x1C<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_366, out a0_367, out a1_368, out a2_369, out a3_370, out a4_371, out a5_372, out a7_373, out s2_374, out s3_129, out s4_130, out s5_375, out s6_376, out s7_377, out s8_378, out s9_379, out s10_380, out s11_381, out t4_382)
	word32 a1_69 = CONVERT(Mem15[s3_129:byte], byte, word32)
	word32 a4_383
	branch att_op_get_type(a1_69, out a4_383) == 0<32> l2305854E
l230585EA:
	a3_113 = 6<32>
	branch a1_69 == 0<32> l2305854E
l2305858C:
	word32 s1_125
	word32 s1_77 = a5_31 << 3<u32>
	branch CONVERT(Mem15[a1 + 12<i32>:uint16], uint16, word32) >=u CONVERT(Mem15[s1_77 + 0x230BD111<32>:byte], byte, word32) l230585FA
l230585FA:
	word32 a0_97
	word32 a6_248
	word32 t1_249
	word32 t5_250
	word32 t6_251
	call Mem15[s1_77 + 0x230BD114<32>:word32] (retsize: 0;)
		uses: a0:a0,a1:a1,a3:a0_97,a6:a6_248,mstatus:mstatus,ra:ra,s0:0x230BD110<32>,s1:s1_77,s2:a1,s3:a0_23,s4:a0,Stack +0008:dwLoc28,Stack +0028:dwLoc08,Stack +0064:dwArg34,Stack +0070:dwArg40,Stack +0074:dwArg44,Stack +0098:dwArg68,Stack +00BC:dwArg8C,t1:t1_249,t5:t5_250,t6:t6_251
		defs: a0:a0_97,a6:a6_248,ra:ra_89,s0:s0_90,s1:s1_91,s3:s3_93,s4:s4_94,sp:sp_88,t1:t1_249,t5:t5_250,t6:t6_251
	a3_113 = a0_97
l230585A0:
	word32 a1_351
	word32 a0_350
	word32 a2_352
	word32 a3_353
	word32 a4_354
	word32 a5_355
	word32 a7_356
	word32 s2_357
	word32 s5_358
	word32 s6_359
	word32 s7_360
	word32 s8_361
	word32 s9_362
	word32 s10_363
	word32 s11_364
	word32 t4_365
	ra_124 = printf(ra, 0x230BBC20<32>, 0x1C<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_125, out a0_350, out a1_351, out a2_352, out a3_353, out a4_354, out a5_355, out a7_356, out s2_357, out s3_129, out s4_130, out s5_358, out s6_359, out s7_360, out s8_361, out s9_362, out s10_363, out s11_364, out t4_365)
	a3_113 = 4<32>
l230585AE:
	branch CONVERT(Mem15[s0_139 + s1_125 + 2<i32>:byte], byte, word32) != 1<32> l2305854E
l230585BA:
	branch a3_113 == 0<32> l2305854E
l230585BC:
	branch CONVERT(Mem15[s3_129:byte], byte, word32) == 0<32> l2305854E
l230585C2:
l230585EE:
	send_err_rsp.part.7(ra_124, Mem150[s4_130:int32], a3_113, s3_129, mstatus, Mem150[sp_161:word32], Mem150[sp_161 + 4<i32>:word32], Mem150[sp_161 + 16<i32>:word32], Mem150[sp_161 + 20<i32>:word32], Mem150[sp_161 + 32<i32>:word32], Mem150[sp_161 + 36<i32>:word32], Mem150[sp_161 + 40<i32>:word32], Mem150[sp_161 + 48<i32>:word32], Mem150[sp_161 + 52<i32>:word32], Mem150[sp_161 + 64<i32>:word32], Mem150[sp_161 + 68<i32>:word32], Mem150[sp_161 + 72<i32>:word32], Mem150[sp_161 + 76<i32>:word32], Mem150[sp_161 + 88<i32>:word32], Mem150[sp_161 + 108<i32>:word32], Mem150[sp_161 + 116<i32>:word32], Mem150[sp_161 + 124<i32>:word32], Mem150[sp_161 + 136<i32>:word32], Mem150[sp_161 + 140<i32>:word32], Mem150[sp_161 + 152<i32>:word32], Mem150[sp_161 + 164<i32>:word32], Mem150[sp_161 + 168<i32>:word32], Mem150[sp_161 + 184<i32>:word32], Mem150[sp_161 + 200<i32>:word32], Mem150[sp_161 + 216<i32>:word32], Mem150[sp_161 + 232<i32>:word32], Mem150[sp_161 + 248<i32>:word32], Mem150[sp_161 + 256<i32>:word32], Mem150[sp_161 + 264<i32>:word32], Mem150[sp_161 + 280<i32>:word32], Mem150[sp_161 + 296<i32>:word32], Mem150[sp_161 + 312<i32>:word32], Mem150[sp_161 + 328<i32>:word32], Mem150[sp_161 + 344<i32>:word32])
l23058542:
	word32 s11_348
	word32 t4_349
	word32 s7_344
	word32 s9_346
	word32 s10_347
	word32 s8_345
	word32 s3_340
	word32 s5_342
	word32 s6_343
	word32 s4_341
	word32 a4_336
	word32 a7_338
	word32 s2_339
	word32 a5_337
	word32 a0_332
	word32 a2_334
	word32 a3_335
	word32 a1_333
	word32 s1_331
	printf(ra, 0x230BD08C<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_331, out a0_332, out a1_333, out a2_334, out a3_335, out a4_336, out a5_337, out a7_338, out s2_339, out s3_340, out s4_341, out s5_342, out s6_343, out s7_344, out s8_345, out s9_346, out s10_347, out s11_348, out t4_349)
l2305854E:
	0<32> = dwArg0128
	return
bt_att_recv_exit:


void att_read_group_req(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_group_req_entry:
l23058606:
	word32 a2_22 = CONVERT(Mem17[a1 + 12<i32>:byte], byte, word32) + 0xFFFFFFFC<32> & 255<i32>
	branch a2_22 == 2<32> l2305862E
l23058626:
	branch a2_22 != 0x10<32> l230586F2
l2305862E:
	word32 s5_30 = Mem17[a0:int32]
	word32 a1_658
	word32 a4_659
	word32 a5_660
	word32 a0_37 = net_buf_simple_pull_mem(a1 + 8<i32>, 4<32>, out a1_658, out a4_659, out a5_660)
	word32 s0_45 = CONVERT(Mem36[a0_37 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem36[a0_37:byte], byte, word32)
	word32 s2_52 = CONVERT(Mem36[a0_37 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem36[a0_37 + 2<i32>:byte], byte, word32)
	word32 a3_661
	branch bt_uuid_create(fp + -72<i32>, a0_37 + 4<i32>, a2_22, out a3_661) == 0<32> l230586F2
l23058670:
	word32 a3_113
	word32 dwLoc50_385
	word32 dwLoc4C_390
	branch s0_45 == 0<32> l23058708
l23058672:
	branch s2_52 == 0<32> l23058706
l23058706:
l23058676:
	branch s2_52 <u s0_45 l23058708
l23058708:
	a3_113 = 1<32>
l2305867A:
	word32 a0_76
	word32 s8_668
	word32 a6_667
	word32 a5_666
	word32 a4_665
	word32 a3_664
	word32 a1_662
	word32 a2_663
	bt_uuid_cmp(fp + -72<i32>, fp + -80<i32>, out a0_76, out a1_662, out a2_663, out a3_664, out a4_665, out a5_666, out a6_667, out s8_668)
	word32 s1_184 = 0x3000000<32>
	dwLoc50_385 = SEQ(0xF800<16>, bLoc4F, 0<8>) (alias)
	branch a0_76 != 0<32> l23058718
l23058718:
	word32 a0_97
	word32 s8_675
	word32 a4_672
	word32 a6_674
	word32 a5_673
	word32 a3_671
	word32 a2_670
	word32 a1_669
	bt_uuid_cmp(fp + -72<i32>, fp + -76<i32>, out a0_97, out a1_669, out a2_670, out a3_671, out a4_672, out a5_673, out a6_674, out s8_675)
	s1_184 = 0x2FFF801<32>
	dwLoc4C_390 = SEQ(0xF801<16>, bLoc4B, 0<8>) (alias)
	branch a0_97 == 0<32> l23058692
l2305872E:
	a3_113 = 0x10<32>
l2305870A:
	send_err_rsp.part.7(ra, s5_30, a3_113, a0, mstatus, dwLoc60, dwLoc5C, dwLoc50_385, dwLoc4C_390, dwLoc40, s4, s2, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwLoc08, dwArg0C, dwArg14, dwArg1C, dwArg28, dwArg2C, dwArg38, s3, s1, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA0, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8)
l23058692:
	word32 a3_175
	word32 a4_189
	word32 s0_193
	word32 s11_196
	word32 s2_197
	word32 a0_208
	word32 mstatus_210
	word32 s4_687
	word32 s6_689
	word32 s5_688
	word32 a3_684
	word32 s3_686
	word32 a5_685
	word32 a5_681
	word32 a2_683
	word32 s1_682
	word32 a1_678
	word32 a4_680
	word32 a2_679
	word32 a0_677
	word32 t1_676
	word32 ra_192 = bt_att_create_pdu(memset(ra, fp + -52<i32>, 0<32>, 0x14<32>, out t1_676, out a0_677, out a1_678, out a2_679, out a3_175, out a4_680, out a5_681), s1_184, Mem165[a0:int32], 1<32>, a3_175, mstatus, dwLoc58, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg2C, dwArg3C, dwArg68, dwArg88, out s0_193, out s1_682, out a0_208, out a2_683, out a3_684, out a4_189, out a5_685, out s2_197, out s3_686, out s4_687, out s5_688, out s6_689, out s11_196, out mstatus_210)
	branch a0_208 == 0<32> l230586F2
l230586B0:
	word32 a1_690
	word32 a5_691
	Mem226[net_buf_simple_add(a0_208 + 8<32>, 1<32>, a4_189, out a1_690, out a5_691):byte] = 0<8>
	word32 a1_233
	word32 a2_234
	word32 a4_236
	word32 a5_237
	word32 s5_248
	word32 s4_696
	word32 s11_697
	word32 s1_693
	word32 s2_695
	word32 a0_694
	word32 s0_692
	word32 ra_240 = bt_gatt_foreach_attr(ra_192, s0_193, s2_197, 0x23057792<32>, fp + -52<i32>, s11_196, out s0_692, out s1_693, out a0_694, out a1_233, out a2_234, out a4_236, out a5_237, out s2_695, out s4_696, out s5_248, out s11_697)
	word32 s1_261 = CONVERT(Mem231[a5_237:byte], byte, word32)
	branch s1_261 != 0<32> l23058732
l23058732:
	word32 s11_714
	word32 mstatus_715
	word32 s8_711
	word32 s10_713
	word32 s9_712
	word32 s5_708
	word32 s7_710
	word32 s6_709
	word32 s2_705
	word32 s4_707
	word32 s3_706
	word32 a3_702
	word32 a5_704
	word32 a4_703
	word32 s1_699
	word32 a1_701
	word32 a0_700
	word32 s0_698
	bt_l2cap_send_cb(ra_240, s1_261, s5_248, 4<32>, a2_234, 0x23058250<32>, a5_237, mstatus_210, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc18, dwLoc0C, dwLoc08, dwArg14, dwArg1C, dwArg28, dwArg2C, s3, s1, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s0_698, out s1_699, out a0_700, out a1_701, out a3_702, out a4_703, out a5_704, out s2_705, out s3_706, out s4_707, out s5_708, out s6_709, out s7_710, out s8_711, out s9_712, out s10_713, out s11_714, out mstatus_715)
l23058714:
l230586E0:
	word32 mstatus_306
	word32 s3_311
	word32 s5_313
	word32 s6_726
	word32 s8_727
	word32 a5_723
	word32 s4_725
	word32 s2_724
	word32 a2_720
	word32 a4_722
	word32 a3_721
	word32 s1_717
	word32 a1_719
	word32 a0_718
	word32 s0_716
	send_err_rsp.part.7(net_buf_unref(ra_240, s1_261, a2_234, a1_233, a4_236, mstatus_210, dwLoc60, dwLoc5C, dwLoc58, s2, dwArg18, a2_22, a0_208, s3, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0118, out s0_716, out s1_717, out a0_718, out a1_719, out a2_720, out a3_721, out a4_722, out a5_723, out s2_724, out s3_311, out s4_725, out s5_313, out s6_726, out s8_727, out mstatus_306), s5_313, 0xA<32>, s3_311, mstatus_306, dwLoc60, dwLoc5C, dwLoc50_385, dwLoc4C_390, dwLoc40, s4, s2, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwLoc08, dwArg0C, dwArg14, dwArg1C, dwArg28, dwArg2C, a0_208, s3, s1, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA0, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8)
l230586F2:
	return
att_read_group_req_exit:


void att_read_mult_req(word32 ra, word32 s0, word32 s1, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_mult_req_entry:
l23058746:
	word32 a3_28
	word32 s1_46
	word32 a0_60
	word32 mstatus_62
	word32 s6_396
	word32 s5_395
	word32 s4_394
	word32 s3_393
	word32 a5_392
	word32 a4_391
	word32 a3_390
	word32 a5_389
	word32 a4_388
	word32 a2_387
	word32 a1_386
	word32 a0_385
	word32 t1_384
	word32 s2_106
	word32 s11_105
	word32 s0_102
	word32 a2_188
	word32 ra_101 = bt_att_create_pdu(memset(ra, fp + -52<i32>, 0<32>, 0x14<32>, out t1_384, out a0_385, out a1_386, out a2_387, out a3_28, out a4_388, out a5_389), Mem17[s0:word32], s0, 0<32>, a3_28, mstatus, dwLoc38, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, ra, dwArg88, dwArgA8, out s0_102, out s1_46, out a0_60, out a2_188, out a3_390, out a4_391, out a5_392, out s2_106, out s3_393, out s4_394, out s5_395, out s6_396, out s11_105, out mstatus_62)
	branch a0_60 == 0<32> l230587E4
l230587E4:
l23058774:
	word32 s1_103 = 1<32>
	word32 s5_109 = 0x23058000<32>
l23058780:
	word32 a5_75 = CONVERT(Mem74[s2_106 + 12<i32>:uint16], uint16, word32)
	branch s1_103 <u a5_75 l2305879E
l2305879E:
	word32 a2_398
	word32 a1_397
	word32 a4_399
	word32 a5_400
	word32 a0_79 = net_buf_simple_pull_le16(a5_75, out a1_397, out a2_398, out a4_399, out a5_400)
	byte bLoc24_255 = SLICE(s1_103, byte, 0)
	word32 a0_93
	word32 a1_94
	word32 a4_97
	word32 a5_401
	word32 s4_402
	ra_101 = bt_gatt_foreach_attr(ra_101, a0_79, a0_79, s5_109 + 726<i32>, fp + -52<i32>, s11_105, out s0_102, out s1_103, out a0_93, out a1_94, out a2_188, out a4_97, out a5_401, out s2_106, out s4_402, out s5_109, out s11_105)
	branch CONVERT(bLoc24_255, byte, word32) == 0<32> l23058780
l230587BC:
	word32 mstatus_131
	word32 s0_133
	word32 s3_136
	word32 s1_421
	word32 a0_422
	word32 a1_423
	word32 a2_424
	word32 a3_425
	word32 a4_426
	word32 a5_427
	word32 s2_428
	word32 s4_429
	word32 s5_430
	word32 s6_431
	word32 s8_432
	send_err_rsp.part.7(net_buf_unref(ra_101, s1_103, a0_93, a1_94, a4_97, mstatus_62, dwLoc40, dwLoc3C, dwLoc38, dwLoc18, dwArg38, s1_46, s1, dwArg64, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s0_133, out s1_421, out a0_422, out a1_423, out a2_424, out a3_425, out a4_426, out a5_427, out s2_428, out s3_136, out s4_429, out s5_430, out s6_431, out s8_432, out mstatus_131), s0_133, CONVERT(bLoc24_255, byte, word32), s3_136, mstatus_131, dwLoc40, dwLoc3C, dwLoc30, s4, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg2C, dwArg34, dwArg3C, a0_60, dwArg4C, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118)
l23058788:
	word32 s0_403
	word32 s1_404
	word32 a0_405
	word32 a1_406
	word32 a3_407
	word32 a4_408
	word32 a5_409
	word32 s2_410
	word32 s3_411
	word32 s4_412
	word32 s5_413
	word32 s6_414
	word32 s7_415
	word32 s8_416
	word32 s9_417
	word32 s10_418
	word32 s11_419
	word32 mstatus_420
	bt_l2cap_send_cb(ra_101, s1_103, s0_102, 4<32>, a2_188, 0x23058250<32>, a5_75, mstatus_62, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg3C, a0_60, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_403, out s1_404, out a0_405, out a1_406, out a3_407, out a4_408, out a5_409, out s2_410, out s3_411, out s4_412, out s5_413, out s6_414, out s7_415, out s8_416, out s9_417, out s10_418, out s11_419, out mstatus_420)
l230587D0:
l230587D2:
	return
att_read_mult_req_exit:


void att_read_rsp(word32 ra, word32 s1, word32 a3, word32 s4, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_read_blob_req
//      att_read_req
// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s6:[16..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_rsp_entry:
l230587E8:
	word16 wLoc2E_268 = SLICE(s6, word16, 16)
	branch bt_gatt_change_aware() == 0<32> l2305886A
l23058812:
	branch a3 == 0<32> l2305886A
l23058818:
	word32 a3_41
	word32 s0_58
	word32 s11_61
	word32 s2_62
	word32 s3_63
	word32 s5_65
	word32 a0_73
	word32 mstatus_75
	word32 t1_321
	word32 a0_322
	word32 a1_323
	word32 a2_324
	word32 a4_325
	word32 a5_326
	word32 s1_327
	word32 a2_328
	word32 a3_329
	word32 a4_330
	word32 a5_331
	word32 s4_332
	word32 s6_333
	word32 ra_57 = bt_att_create_pdu(memset(ra, fp + -52<i32>, 0<32>, 0x14<32>, out t1_321, out a0_322, out a1_323, out a2_324, out a3_41, out a4_325, out a5_326), s1, s1, 0<32>, a3_41, mstatus, dwLoc38, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, ra, dwArg88, dwArgA8, out s0_58, out s1_327, out a0_73, out a2_328, out a3_329, out a4_330, out a5_331, out s2_62, out s3_63, out s4_332, out s5_65, out s6_333, out s11_61, out mstatus_75)
	branch a0_73 == 0<32> l23058894
l23058894:
l23058830:
	byte bLoc24_249 = SLICE(s0_58, byte, 0)
	word32 a1_91
	word32 a2_92
	word32 a4_94
	word32 a5_95
	word32 s1_100
	word32 s0_334
	word32 a0_335
	word32 s2_336
	word32 s4_337
	word32 s5_338
	word32 s11_339
	word32 ra_98 = bt_gatt_foreach_attr(ra_57, s2_62, s2_62, 0x230582D6<32>, fp + -52<i32>, s11_61, out s0_334, out s1_100, out a0_335, out a1_91, out a2_92, out a4_94, out a5_95, out s2_336, out s4_337, out s5_338, out s11_339)
	word32 dwLoc30_269 = SEQ(wLoc2E_268, SLICE(s5_65, word16, 0))
	branch CONVERT(bLoc24_249, byte, word32) == 0<32> l23058880
l23058880:
	word32 s0_352
	word32 s1_353
	word32 a0_354
	word32 a1_355
	word32 a3_356
	word32 a4_357
	word32 a5_358
	word32 s2_359
	word32 s3_360
	word32 s4_361
	word32 s5_362
	word32 s6_363
	word32 s7_364
	word32 s8_365
	word32 s9_366
	word32 s10_367
	word32 s11_368
	word32 mstatus_369
	bt_l2cap_send_cb(ra_98, s1_100, s1_100, 4<32>, a2_92, 0x23058250<32>, a5_95, mstatus_75, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg3C, a0_73, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_352, out s1_353, out a0_354, out a1_355, out a3_356, out a4_357, out a5_358, out s2_359, out s3_360, out s4_361, out s5_362, out s6_363, out s7_364, out s8_365, out s9_366, out s10_367, out s11_368, out mstatus_369)
l23058854:
	word32 mstatus_162
	word32 s1_165
	word32 s3_167
	word32 s0_340
	word32 a0_341
	word32 a1_342
	word32 a2_343
	word32 a3_344
	word32 a4_345
	word32 a5_346
	word32 s2_347
	word32 s4_348
	word32 s5_349
	word32 s6_350
	word32 s8_351
	send_err_rsp.part.7(net_buf_unref(ra_98, s1_100, a2_92, a1_91, a4_94, mstatus_75, dwLoc40, dwLoc3C, dwLoc38, dwLoc18, dwArg38, s3_63, s1, dwArg64, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s0_340, out s1_165, out a0_341, out a1_342, out a2_343, out a3_344, out a4_345, out a5_346, out s2_347, out s3_167, out s4_348, out s5_349, out s6_350, out s8_351, out mstatus_162), s1_165, CONVERT(bLoc24_249, byte, word32), s3_167, mstatus_162, dwLoc40, dwLoc3C, dwLoc30_269, s4, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg2C, dwArg34, dwArg3C, a0_73, dwArg4C, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118)
l2305886A:
	0<32> = dwArg0198
	return
att_read_rsp_exit:


void att_read_blob_req(word32 ra, word32 s1, word32 a5, word32 s4, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_blob_req_entry:
l23058898:
	word32 a3_14 = CONVERT(Mem0[a5:byte], byte, word32) | CONVERT(Mem0[a5 + 1<i32>:byte], byte, word32) << 8<i32>
l230588B6_thunk_att_read_rsp:
	att_read_rsp(ra, s1, a3_14, s4, s6, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0198)
	return
att_read_blob_req_exit:


void att_read_req(word32 ra, word32 s1, word32 a5, word32 s4, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_req_entry:
l230588BA:
	word32 a3_12 = CONVERT(Mem0[a5:byte], byte, word32) | CONVERT(Mem0[a5 + 1<i32>:byte], byte, word32) << 8<i32>
l230588CE_thunk_att_read_rsp:
	att_read_rsp(ra, s1, a3_12, s4, s6, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0198)
	return
att_read_req_exit:


void att_read_type_req(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_read_type_req_entry:
l230588D2:
	word32 a2_22 = CONVERT(Mem17[a1 + 12<i32>:byte], byte, word32) + 0xFFFFFFFC<32> & 255<i32>
	branch a2_22 == 2<32> l230588FA
l230588F2:
	branch a2_22 != 0x10<32> l23058962
l230588FA:
	word32 s4_213 = Mem17[a0:int32]
	word32 a1_494
	word32 a4_495
	word32 a5_496
	word32 a0_37 = net_buf_simple_pull_mem(a1 + 8<i32>, 4<32>, out a1_494, out a4_495, out a5_496)
	word32 s0_45 = CONVERT(Mem36[a0_37 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem36[a0_37:byte], byte, word32)
	word32 s2_52 = CONVERT(Mem36[a0_37 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem36[a0_37 + 2<i32>:byte], byte, word32)
	word32 s3_212 = a0
	word32 a3_497
	branch bt_uuid_create(fp + -76<i32>, a0_37 + 4<i32>, a2_22, out a3_497) == 0<32> l23058962
l2305893C:
	word32 a3_224
	branch s0_45 == 0<32> l23058978
l2305893E:
	branch s2_52 == 0<32> l23058976
l23058976:
l23058942:
	branch s2_52 <u s0_45 l23058978
l23058978:
	a3_224 = 1<32>
l23058946:
	word32 a3_78
	word32 a4_92
	word32 s0_96
	word32 s11_99
	word32 s2_100
	word32 s3_101
	word32 a0_111
	word32 mstatus_113
	word32 s5_509
	word32 s6_510
	word32 a5_507
	word32 s4_508
	word32 a2_505
	word32 a3_506
	word32 a5_503
	word32 s1_504
	word32 a2_501
	word32 a4_502
	word32 a1_500
	word32 t1_498
	word32 a0_499
	word32 ra_95 = bt_att_create_pdu(memset(ra, fp + -56<i32>, 0<32>, 0x18<32>, out t1_498, out a0_499, out a1_500, out a2_501, out a3_78, out a4_502, out a5_503), 0xE<32>, Mem36[a0:int32], 1<32>, a3_78, mstatus, dwLoc58, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg2C, dwArg3C, dwArg68, dwArg88, out s0_96, out s1_504, out a0_111, out a2_505, out a3_506, out a4_92, out a5_507, out s2_100, out s3_101, out s4_508, out s5_509, out s6_510, out s11_99, out mstatus_113)
	branch a0_111 != 0<32> l23058988
l23058988:
	word32 a5_512
	word32 a1_511
	word32 a0_123 = net_buf_simple_add(a0_111 + 8<32>, 1<32>, a4_92, out a1_511, out a5_512)
	Mem128[a0_123:byte] = 0<8>
	dwLoc4C = s3_101
	dwArg38 = a0_123
	word32 a1_136
	word32 a2_137
	word32 a4_139
	word32 a5_140
	word32 s4_150
	word32 s5_517
	word32 s11_518
	word32 a0_515
	word32 s2_516
	word32 s1_514
	word32 s0_513
	word32 ra_143 = bt_gatt_foreach_attr(ra_95, s0_96, s2_100, 0x230578B4<32>, fp + -56<i32>, s11_99, out s0_513, out s1_514, out a0_515, out a1_136, out a2_137, out a4_139, out a5_140, out s2_516, out s4_150, out s5_517, out s11_518)
	branch false l230589C6
l230589C6:
	word32 mstatus_536
	word32 s10_534
	word32 s11_535
	word32 s8_532
	word32 s9_533
	word32 s6_530
	word32 s7_531
	word32 s4_528
	word32 s5_529
	word32 s2_526
	word32 s3_527
	word32 a3_523
	word32 a5_525
	word32 a4_524
	word32 s1_520
	word32 a1_522
	word32 a0_521
	word32 s0_519
	bt_l2cap_send_cb(ra_143, 0xA<32>, s4_150, 4<32>, a2_137, 0x23058250<32>, a5_140, mstatus_113, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc18, dwLoc0C, dwLoc08, dwArg14, dwArg1C, dwArg28, dwArg2C, s3, s1, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s0_519, out s1_520, out a0_521, out a1_522, out a3_523, out a4_524, out a5_525, out s2_526, out s3_527, out s4_528, out s5_529, out s6_530, out s7_531, out s8_532, out s9_533, out s10_534, out s11_535, out mstatus_536)
l230589BA:
	word32 s8_548
	word32 s6_547
	word32 s5_546
	word32 s2_545
	word32 a3_542
	word32 a5_544
	word32 a4_543
	word32 a1_540
	word32 a2_541
	word32 s1_538
	word32 a0_539
	word32 s0_537
	ra = net_buf_unref(ra_143, 0xA<32>, a2_137, a1_136, a4_139, mstatus_113, dwLoc60, dwLoc5C, dwLoc58, s2, dwArg18, a2_22, a0_123, s3, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0118, out s0_537, out s1_538, out a0_539, out a1_540, out a2_541, out a3_542, out a4_543, out a5_544, out s2_545, out s3_212, out s4_213, out s5_546, out s6_547, out s8_548, out mstatus)
	a3_224 = 0xA<32>
l2305897A:
	send_err_rsp.part.7(ra, s4_213, a3_224, s3_212, mstatus, dwLoc60, dwLoc5C, dwLoc50, dwLoc4C, dwLoc40, s4, s2, dwLoc30, dwLoc2C, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwLoc08, dwArg0C, dwArg14, dwArg1C, dwArg28, dwArg2C, dwArg38, s3, s1, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA0, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8)
l23058962:
	return
att_read_type_req_exit:


void att_find_type_req(word32 ra, word32 s1, word32 a0, word32 a1, word32 s4, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_find_type_req_entry:
l230589DA:
	word32 a3_219
	word32 a0_222
	word32 dwLoc3C_339
	word32 s2_23 = Mem19[a0:int32]
	word32 a4_505
	word32 a5_506
	word32 a1_504
	word32 a0_27 = net_buf_simple_pull_mem(a1 + 8<i32>, 6<32>, out a1_504, out a4_505, out a5_506)
	word32 s3_207 = a0
	word32 s0_34 = CONVERT(Mem19[a0_27 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem19[a0_27:byte], byte, word32)
	branch s0_34 == 0<32> l23058A54
l23058A0C:
	word32 s1_38 = CONVERT(Mem19[a0_27 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem19[a0_27 + 2<i32>:byte], byte, word32)
	branch s1_38 == 0<32> l23058A52
l23058A52:
l23058A1A:
	branch s1_38 <u s0_34 l23058A54
l23058A54:
	a3_219 = 1<32>
l23058A1E:
	word16 wLoc3A_299 = SLICE(CONVERT(Mem19[a0_27 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem19[a0_27 + 4<i32>:byte], byte, word32), word16, 0)
	word32 a0_54
	word32 s8_513
	word32 a3_509
	word32 a4_510
	word32 a5_511
	word32 a6_512
	word32 a1_507
	word32 a2_508
	bt_uuid_cmp(fp + -60<i32>, fp + -56<i32>, out a0_54, out a1_507, out a2_508, out a3_509, out a4_510, out a5_511, out a6_512, out s8_513)
	word32 dwLoc38_318 = SEQ(0xF800<16>, bLoc37, 0<8>)
	dwLoc3C_339 = SEQ(wLoc3A_299, bLoc3B, 0<8>) (alias)
	branch a0_54 == 0<32> l23058A78
l23058A78:
	word32 a3_78
	word32 s0_95
	word32 s1_96
	word32 s11_98
	word32 s3_100
	word32 a0_110
	word32 mstatus_112
	word32 s6_527
	word32 s2_524
	word32 s4_525
	word32 s5_526
	word32 a3_521
	word32 a4_522
	word32 a5_523
	word32 a4_518
	word32 a5_519
	word32 a2_520
	word32 a1_516
	word32 a2_517
	word32 t1_514
	word32 a0_515
	word32 ra_94 = bt_att_create_pdu(memset(ra, fp + -52<i32>, 0<32>, 0x14<32>, out t1_514, out a0_515, out a1_516, out a2_517, out a3_78, out a4_518, out a5_519), s1_38, Mem53[a0:int32], 0<32>, a3_78, mstatus, dwLoc38_318, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, ra, dwArg88, dwArgA8, out s0_95, out s1_96, out a0_110, out a2_520, out a3_521, out a4_522, out a5_523, out s2_524, out s3_100, out s4_525, out s5_526, out s6_527, out s11_98, out mstatus_112)
	branch a0_110 == 0<32> l23058A62
l23058A9A:
	dwArg48 = 0<32>
	word32 a1_131
	word32 a2_132
	word32 a4_134
	word32 a5_135
	word32 s1_140
	word32 s4_145
	word32 s2_530
	word32 s5_531
	word32 s11_532
	word32 s0_528
	word32 a0_529
	word32 ra_138 = bt_gatt_foreach_attr(ra_94, s0_95, s1_96, 0x230579AA<32>, fp + -52<i32>, s11_98, out s0_528, out s1_140, out a0_529, out a1_131, out a2_132, out a4_134, out a5_135, out s2_530, out s4_145, out s5_531, out s11_532)
	branch false l23058AD8
l23058AD8:
	word32 s10_548
	word32 s11_549
	word32 mstatus_550
	word32 s7_545
	word32 s8_546
	word32 s9_547
	word32 s4_542
	word32 s5_543
	word32 s6_544
	word32 a5_539
	word32 s2_540
	word32 s3_541
	word32 a1_536
	word32 a3_537
	word32 a4_538
	word32 s0_533
	word32 s1_534
	word32 a0_535
	bt_l2cap_send_cb(ra_138, s1_140, s4_145, 4<32>, a2_132, 0x23058250<32>, a5_135, mstatus_112, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg3C, 0<32>, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_533, out s1_534, out a0_535, out a1_536, out a3_537, out a4_538, out a5_539, out s2_540, out s3_541, out s4_542, out s5_543, out s6_544, out s7_545, out s8_546, out s9_547, out s10_548, out s11_549, out mstatus_550)
l23058AC6:
	word32 s4_208
	word32 s5_560
	word32 s6_561
	word32 s8_562
	word32 a4_557
	word32 a5_558
	word32 s2_559
	word32 a1_554
	word32 a2_555
	word32 a3_556
	word32 s0_551
	word32 s1_552
	word32 a0_553
	ra = net_buf_unref(ra_138, s1_140, a2_132, a1_131, a4_134, mstatus_112, dwLoc40, dwLoc3C_339, a0_110, dwLoc18, dwArg38, s3_100, s1, dwArg64, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s0_551, out s1_552, out a0_553, out a1_554, out a2_555, out a3_556, out a4_557, out a5_558, out s2_559, out s3_207, out s4_208, out s5_560, out s6_561, out s8_562, out mstatus)
	a3_219 = 0xA<32>
	a0_222 = s4_208
l23058A4E:
	a3_219 = 0xA<32>
l23058A56:
	a0_222 = s2_23
l23058A5C:
	send_err_rsp.part.7(ra, a0_222, a3_219, s3_207, mstatus, dwLoc40, dwLoc3C_339, s6, s4, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg2C, dwArg34, dwArg3C, dwArg48, dwArg4C, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118)
l23058A62:
	0<32> = dwArg0198
	return
att_find_type_req_exit:


void att_find_info_req(word32 ra, word32 s0, word32 a0, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_find_info_req_entry:
l23058AEC:
	word32 a3_171
	word32 s3_159
	word32 s2_158 = Mem13[a0:int32]
	word32 s0_21 = CONVERT(Mem13[a5 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem13[a5:byte], byte, word32)
	branch s0_21 == 0<32> l23058B4C
l23058B0C:
	word32 s1_25 = CONVERT(Mem13[a5 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem13[a5 + 2<i32>:byte], byte, word32)
	branch s1_25 == 0<32> l23058B4A
l23058B4A:
l23058B1A:
	branch s1_25 <u s0_21 l23058B4C
l23058B4C:
	a3_171 = 1<32>
	s3_159 = s3
l23058B1E:
	word32 a3_35
	word32 s0_52
	word32 s1_53
	word32 s11_55
	word32 s3_57
	word32 a0_67
	word32 mstatus_69
	word32 s5_425
	word32 s6_426
	word32 s2_423
	word32 s4_424
	word32 a4_421
	word32 a5_422
	word32 a2_419
	word32 a3_420
	word32 a4_417
	word32 a5_418
	word32 a1_415
	word32 a2_416
	word32 t1_413
	word32 a0_414
	word32 ra_51 = bt_att_create_pdu(memset(ra, fp + -48<i32>, 0<32>, 0x10<32>, out t1_413, out a0_414, out a1_415, out a2_416, out a3_35, out a4_417, out a5_418), s1_25, s2_158, 0<32>, a3_35, mstatus, dwLoc28, dwArg00, dwArg04, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg44, dwArg48, dwArg4C, dwArg58, s3, dwArg6C, dwArg98, dwArgB8, out s0_52, out s1_53, out a0_67, out a2_419, out a3_420, out a4_421, out a5_422, out s2_423, out s3_57, out s4_424, out s5_425, out s6_426, out s11_55, out mstatus_69)
	branch a0_67 != 0<32> l23058B5C
l23058B5C:
	dwLoc30 = s3_57
	word32 a1_83
	word32 a2_84
	word32 a4_86
	word32 a5_87
	word32 s1_92
	word32 s2_95
	word32 s11_431
	word32 s4_429
	word32 s5_430
	word32 s0_427
	word32 a0_428
	word32 ra_90 = bt_gatt_foreach_attr(ra_51, s0_52, s1_53, 0x23057AD4<32>, fp + -48<i32>, s11_55, out s0_427, out s1_92, out a0_428, out a1_83, out a2_84, out a4_86, out a5_87, out s2_95, out s4_429, out s5_430, out s11_431)
	branch a5_87 != 0<32> l23058B80
l23058B80:
	word32 s11_448
	word32 mstatus_449
	word32 s9_446
	word32 s10_447
	word32 s7_444
	word32 s8_445
	word32 s5_442
	word32 s6_443
	word32 s3_440
	word32 s4_441
	word32 s2_439
	word32 a4_437
	word32 a5_438
	word32 a1_435
	word32 a3_436
	word32 s1_433
	word32 a0_434
	word32 s0_432
	bt_l2cap_send_cb(ra_90, s1_92, s2_95, 4<32>, a2_84, 0x23058250<32>, a5_87, mstatus_69, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg24, dwArg28, dwArg44, dwArg4C, dwArg58, s3, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_432, out s1_433, out a0_434, out a1_435, out a3_436, out a4_437, out a5_438, out s2_439, out s3_440, out s4_441, out s5_442, out s6_443, out s7_444, out s8_445, out s9_446, out s10_447, out s11_448, out mstatus_449)
l23058B76:
	word32 s0_450
	word32 s1_451
	word32 a0_452
	word32 a1_453
	word32 a2_454
	word32 a3_455
	word32 a4_456
	word32 a5_457
	word32 s4_458
	word32 s5_459
	word32 s6_460
	word32 s8_461
	ra = net_buf_unref(ra_90, s1_92, a2_84, a1_83, a4_86, mstatus_69, s3_57, dwLoc2C, dwLoc28, dwLoc08, dwArg48, dwArg54, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_450, out s1_451, out a0_452, out a1_453, out a2_454, out a3_455, out a4_456, out a5_457, out s2_158, out s3_159, out s4_458, out s5_459, out s6_460, out s8_461, out mstatus)
	a3_171 = 0xA<32>
l23058B4E:
	send_err_rsp.part.7(ra, s2_158, a3_171, s3_159, mstatus, dwLoc30, dwLoc2C, s2, s0, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg28, dwArg3C, dwArg44, dwArg4C, dwArg58, s3, dwArg68, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128)
l23058B58:
l23058B3A:
	0<32> = dwArg0128
	return
att_find_info_req_exit:


void att_write_rsp.constprop.10(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 s6, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      att_write_req
//      att_write_cmd
//      att_signed_write_cmd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s11:[0..31] s4:[0..31] s6:[8..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_write_rsp.constprop.10_entry:
l23058B94:
	word32 s2_63 = a1
	word24 nLoc2F_319 = SLICE(s6, word24, 8)
	word32 s1_24 = a0
	word32 s3_28 = a3
	word32 s5_30 = a4
	branch bt_gatt_change_aware() == 0<32> l23058C18
l23058BBE:
	branch a3 == 0<32> l23058C18
l23058BC4:
	word32 a3_42
	word32 a5_416
	word32 a4_415
	word32 a2_414
	word32 a1_413
	word32 a0_412
	word32 t1_411
	word32 ra_101 = memset(ra, fp + -56<i32>, 0<32>, 0x18<32>, out t1_411, out a0_412, out a1_413, out a2_414, out a3_42, out a4_415, out a5_416)
	branch a2 != 0<32> l23058C08
l23058C08:
	word32 a0_74
	word32 s0_451
	word32 a2_452
	word32 a3_453
	word32 a4_454
	word32 a5_455
	word32 s4_456
	word32 s6_457
	ra_101 = bt_att_create_pdu(ra_101, a0, a0, 0<32>, a3_42, mstatus, dwLoc38, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg48, dwArg4C, ra, dwArg88, dwArgA8, out s0_451, out s1_24, out a0_74, out a2_452, out a3_453, out a4_454, out a5_455, out s2_63, out s3_28, out s4_456, out s5_30, out s6_457, out s11, out mstatus)
	dwArg44 = a0_74
	branch a0_74 != 0<32> l23058BD2
l23058BD2:
	word32 a0_104
	word32 a1_105
	word32 a4_108
	word32 a5_109
	word32 s1_114
	word32 s4_119
	word32 s0_417
	word32 a2_418
	word32 s2_419
	word32 s5_420
	word32 s11_421
	word32 ra_112 = bt_gatt_foreach_attr(ra_101, s3_28, s3_28, 0x23058254<32>, fp + -56<i32>, s11, out s0_417, out s1_114, out a0_104, out a1_105, out a2_418, out a4_108, out a5_109, out s2_419, out s4_119, out s5_420, out s11_421)
	word32 dwLoc30_320 = SEQ(nLoc2F_319, SLICE(s2_63, byte, 0))
	branch false l23058C48
l23058C48:
	branch dwArg44 == 0<32> l23058C04
l23058C4C:
	word32 s0_433
	word32 s1_434
	word32 a0_435
	word32 a1_436
	word32 a3_437
	word32 a4_438
	word32 a5_439
	word32 s2_440
	word32 s3_441
	word32 s4_442
	word32 s5_443
	word32 s6_444
	word32 s7_445
	word32 s8_446
	word32 s9_447
	word32 s10_448
	word32 s11_449
	word32 mstatus_450
	bt_l2cap_send_cb(ra_112, s1_114, s1_114, 4<32>, dwArg44, 0x23058250<32>, a5_109, mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg14, dwArg18, dwArg34, dwArg3C, s5_30, dwArg4C, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s0_433, out s1_434, out a0_435, out a1_436, out a3_437, out a4_438, out a5_439, out s2_440, out s3_441, out s4_442, out s5_443, out s6_444, out s7_445, out s8_446, out s9_447, out s10_448, out s11_449, out mstatus_450)
l23058C00:
	branch s4_119 != 0<32> l23058C2E
l23058C2E:
	word32 mstatus_177
	word32 s1_180
	word32 s2_181
	word32 s3_182
	word32 s0_422
	word32 a0_423
	word32 a1_424
	word32 a2_425
	word32 a3_426
	word32 a4_427
	word32 a5_428
	word32 s4_429
	word32 s5_430
	word32 s6_431
	word32 s8_432
	word32 ra_178 = net_buf_unref(ra_112, s1_114, a0_104, a1_105, a4_108, mstatus, dwLoc40, s1_24, dwLoc38, dwLoc18, dwArg38, dwArg44, s1, dwArg64, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s0_422, out s1_180, out a0_423, out a1_424, out a2_425, out a3_426, out a4_427, out a5_428, out s2_181, out s3_182, out s4_429, out s5_430, out s6_431, out s8_432, out mstatus_177)
	branch s2_181 == 0<32> l23058C04
l23058C38:
	send_err_rsp.part.7(ra_178, s1_180, 1<32>, s3_182, mstatus_177, dwLoc40, s1_24, dwLoc30_320, s4, dwLoc20, dwLoc1C, dwLoc18, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg2C, dwArg34, dwArg3C, s5_30, dwArg4C, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118)
l23058C04:
l23058C18:
	0<32> = dwArg0198
	return
att_write_rsp.constprop.10_exit:


void att_write_req(word32 ra, word32 s0, word32 s1, word32 a1, word32 a5, word32 s4, word32 s6, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s11:[0..31] s4:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_write_req_entry:
l23058C60:
	word32 a4_16
	word32 a1_95
	word32 a2_96
	word32 a5_97
	word32 a0_13 = net_buf_simple_pull_le16(a5, out a1_95, out a2_96, out a4_16, out a5_97)
l23058C88_thunk_att_write_rsp.constprop.10:
	att_write_rsp.constprop.10(ra, s1, s0, 0x12<32>, 0x13<32>, a0_13, a4_16, s4, s6, s11, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, a1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0198)
	return
att_write_req_exit:


void att_write_cmd(word32 ra, word32 s0, word32 s1, word32 a1, word32 a5, word32 s4, word32 s6, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s11:[0..31] s4:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_write_cmd_entry:
l23058C8C:
	word32 a4_16
	word32 a1_95
	word32 a2_96
	word32 a5_97
	word32 a0_13 = net_buf_simple_pull_le16(a5, out a1_95, out a2_96, out a4_16, out a5_97)
l23058CB4_thunk_att_write_rsp.constprop.10:
	att_write_rsp.constprop.10(ra, s1, s0, 0<32>, 0<32>, a0_13, a4_16, s4, s6, s11, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, a1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0198)
	return
att_write_cmd_exit:


void att_signed_write_cmd(word32 ra, word32 s1, word32 a0, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
att_signed_write_cmd_entry:
l23058CB8:
	word32 a1_15 = Mem13[a5 + 8<i32>:word32]
	word32 s3_17 = Mem13[a0:int32]
	word32 a4_220
	net_buf_simple_push(1<32>, a5, out a4_220)
	word32 a0_32
	word32 a3_35
	word32 a4_36
	word32 s0_41
	word32 s11_44
	word32 s2_45
	word32 s3_46
	word32 s6_49
	word32 ra_40 = bt_smp_sign_verify(ra, s3_17, a1_15, a1_15 + 8<i32>, dwLoc20, dwLoc1C, s2, dwLoc0C, dwArg08, dwArg10, dwArg14, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg58, dwArg5C, dwArg7C, dwArgE8, out s0_41, out a0_32, out a3_35, out a4_36, out s2_45, out s3_46, out s6_49, out s11_44)
	branch a0_32 != 0<32> l23058D22
l23058D22:
	word32 s1_221
	word32 a0_222
	word32 a1_223
	word32 a2_224
	word32 a3_225
	word32 a4_226
	word32 a5_227
	word32 a7_228
	word32 s2_229
	word32 s3_230
	word32 s4_231
	word32 s5_232
	word32 s6_233
	word32 s7_234
	word32 s8_235
	word32 s9_236
	word32 s10_237
	word32 s11_238
	word32 t4_239
	printf(ra_40, 0x230BD004<32>, a3_35, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_221, out a0_222, out a1_223, out a2_224, out a3_225, out a4_226, out a5_227, out a7_228, out s2_229, out s3_230, out s4_231, out s5_232, out s6_233, out s7_234, out s8_235, out s9_236, out s10_237, out s11_238, out t4_239)
	return
l23058CEE:
	word32 a1_240
	word32 a5_241
	net_buf_simple_pull(s2_45, 1<32>, out a1_240, out a5_241)
	word32 a1_242
	word32 a5_243
	net_buf_simple_pull(s2_45, 2<32>, out a1_242, out a5_243)
	word32 s1_104 = Mem13[a4_36 + 8<i32>:word32]
l23058D1E_thunk_att_write_rsp.constprop.10:
	att_write_rsp.constprop.10(ra_40, s1_104, s3_46, 0<32>, 0<32>, s0_41, a4_36, dwArg04, s6_49, s11_44, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, s3, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC0, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0198)
	return
att_signed_write_cmd_exit:


word32 bt_att_init(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_conn_init
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
bt_att_init_entry:
l23058D3E:
l23058D3E_thunk_bt_gatt_init:
	word32 a3_11
	word32 a4_12
	word32 a5_13
	word32 a0_32
	word32 s2_33
	word32 s5_34
	word32 s0_14 = bt_gatt_init(ra, a3, a4, mstatus, dwArg34, dwArg94, dwArgC8, dwArgE8, dwArg0128, out a0_32, out a3_11, out a4_12, out a5_13, out s2_33, out s5_34)
	a3Out = a3_11
	a4Out = a4_12
	a5Out = a5_13
	return s0_14
bt_att_init_exit:


word32 bt_att_get_mtu(word32 ra, word32 a0, word32 a3, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_get_mtu
//      gatt_read_rsp
//      bt_gatt_write
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a2 a3 a4 ra s1 s10 s11 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bt_att_get_mtu_entry:
l23058D42:
	word32 a0_30
	word32 a4_10
	word32 a0_12
	word32 a3_13
	word32 s1_16
	word32 s10_17
	word32 s11_18
	word32 s2_19
	word32 s3_20
	word32 s4_21
	word32 s9_82
	word32 s8_81
	word32 s7_80
	word32 s6_79
	word32 s5_78
	word32 a5_77
	word32 a2_76
	word32 a1_75
	word32 ra_15 = att_chan_get(ra, a0, a3, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_16, out a0_12, out a1_75, out a2_76, out a3_13, out a4_10, out a5_77, out s2_19, out s3_20, out s4_21, out s5_78, out s6_79, out s7_80, out s8_81, out s9_82, out s10_17, out s11_18)
	branch a0_12 == 0<32> l23058D56
l23058D56:
	a0_30 = 0<32>
l23058D4C:
	a0_30 = CONVERT(Mem5[a0_12 + 86<i32>:uint16], uint16, word32)
l23058D50:
	s1Out = s1_16
	a0Out = a0_30
	a2Out = dwArg10
	a3Out = a3_13
	a4Out = a4_10
	s2Out = s2_19
	s3Out = s3_20
	s4Out = s4_21
	s10Out = s10_17
	s11Out = s11_18
	return ra_15
bt_att_get_mtu_exit:


word32 bt_att_send(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gatt_notify
//      bt_gatt_exchange_mtu
//      bt_gatt_write_without_response_cb
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_att_send_entry:
l23058D5A:
	word32 a1_110
	word32 a3_112
	word32 a4_113
	word32 s1_118
	word32 s2_119
	word32 s3_120
	word32 s4_121
	word32 s5_122
	word32 s6_123
	word32 s8_124
	word32 s0_107
	word32 s0_19 = a1
	word32 a1_22
	word32 a4_24
	word32 a0_26
	word32 a3_27
	word32 s1_30
	word32 s8_345
	word32 s6_344
	word32 s5_343
	word32 s4_342
	word32 a2_341
	word32 s2_33
	word32 s3_34
	word32 a5_25
	word32 s9_136
	word32 s7_135
	word32 s11_134
	word32 s10_133
	word32 ra_132 = att_chan_get(ra, a0, a3, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_30, out a0_26, out a1_22, out a2_341, out a3_27, out a4_24, out a5_25, out s2_33, out s3_34, out s4_342, out s5_343, out s6_344, out s7_135, out s8_345, out s9_136, out s10_133, out s11_134)
	branch a0_26 != 0<32> l23058D90
l23058D90:
	word32 s1_45 = a0_26
	branch s2_33 != 0<32> l23058DB6
l23058D96:
	word32 a0_50
	word32 a4_54
	word32 a1_351
	word32 a3_352
	word32 s4_353
	word32 s8_354
	s0_19 = k_sem_take(a0_26 + 204<i32>, 0<32>, dwArg74, a3_27, a4_24, a5_25, mstatus, s0, ra, dwArgD8, dwArg0118, out s1_45, out a0_50, out a1_351, out a3_352, out a4_54, out a5_25, out s2_33, out s3_34, out s4_353, out s8_354)
	branch a0_50 >= 0<32> l23058DB6
l23058DB6:
	word32 a0_78
	word32 a5_83
	word32 s0_350
	ra_132 = att_send(ra_132, s0_19, s1_45, s3_34, s2_33, a5_25, mstatus, dwLoc30, dwLoc2C, dwLoc14, dwLoc10, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg4C, dwArg58, s3, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD0, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_350, out s1_118, out a0_78, out a1_110, out a3_112, out a4_113, out a5_83, out s2_119, out s3_120, out s4_121, out s5_122, out s6_123, out s7_135, out s8_124, out s9_136, out s10_133, out s11_134, out mstatus)
	s0_107 = a0_78
	branch a0_78 == 0<32> l23058D80
l23058DC4:
	branch s2_119 != 0<32> l23058D80
l23058DC8:
	word32 a0_358
	word32 a2_359
	word32 a5_360
	ra_132 = k_sem_give(ra_132, s1_118 + 204<i32>, a3_112, a4_113, a5_83, mstatus, s0, dwLoc18, dwArg30, dwArg34, dwArg58, ra, dwArg7C, dwArgD8, dwArg0118, dwArg0158, out s0_107, out s1_118, out a0_358, out a1_110, out a2_359, out a3_112, out a4_113, out a5_360, out s2_119, out s3_120, out s4_121, out s5_122, out s6_123, out s7_135, out s8_124, out s9_136, out s10_133, out s11_134)
l23058DA8:
	word32 a0_355
	word32 a2_356
	word32 a5_357
	k_queue_append(s1_45 + 216<i32>, a4_54, a5_25, mstatus, dwLoc2C, a3_27, dwArgC8, dwArg0108, dwArg0148, out s1_118, out a0_355, out a1_110, out a2_356, out a3_112, out a4_113, out a5_357, out s2_119, out s3_120, out s4_121, out s5_122, out s6_123, out s8_124)
	s0_107 = 0<32>
l23058D76:
	word32 a2_348
	word32 a0_347
	word32 s0_346
	word32 a5_349
	ra_132 = net_buf_unref(ra_132, s1_30, a1, a1_22, a4_24, mstatus, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg48, a3, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s0_346, out s1_118, out a0_347, out a1_110, out a2_348, out a3_112, out a4_113, out a5_349, out s2_119, out s3_120, out s4_121, out s5_122, out s6_123, out s8_124, out mstatus)
	s0_107 = -57<i32>
l23058D80:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_118
	a0Out = s0_107
	a1Out = a1_110
	a3Out = a3_112
	a4Out = a4_113
	s2Out = s2_119
	s3Out = s3_120
	s4Out = s4_121
	s5Out = s5_122
	s6Out = s6_123
	s7Out = s7_135
	s8Out = s8_124
	s9Out = s9_136
	s10Out = s10_133
	s11Out = s11_134
	mstatusOut = mstatus
	return ra_132
bt_att_send_exit:


void bt_att_req_send(word32 ra, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_exchange_mtu
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_att_req_send_entry:
l23058DD2:
	word32 a1_10
	word32 a4_12
	word32 a5_13
	word32 a0_14
	word32 a3_15
	word32 s1_18
	word32 s10_248
	word32 s11_249
	word32 s9_247
	word32 s7_245
	word32 s8_246
	word32 s6_244
	word32 s5_243
	word32 s4_242
	word32 s3_241
	word32 s2_240
	word32 a2_239
	word32 ra_17 = att_chan_get(ra, a0, a3, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_18, out a0_14, out a1_10, out a2_239, out a3_15, out a4_12, out a5_13, out s2_240, out s3_241, out s4_242, out s5_243, out s6_244, out s7_245, out s8_246, out s9_247, out s10_248, out s11_249)
	branch a0_14 != 0<32> l23058DF6
l23058DF6:
	word32 a4_33 = Mem7[a0_14 + 156<i32>:int32]
	branch a4_33 == 0<32> l23058E1A
l23058E1A:
l23058E1E_thunk_att_send_req:
	att_send_req(ra_17, s1_18, a0_14, a1_10, dwArg44, a3_15, a4_33, a5_13, mstatus, dwArg08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg28, dwArg34, dwArg38, dwArg54, dwArg58, dwArg5C, a1, dwArg74, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0158)
	return
l23058DFC:
	Mem66[a1_10:word32] = 0<32>
	word32 a4_67 = Mem66[a0_14 + 164<i32>:int32]
	branch a4_67 != 0<32> l23058E12
l23058E12:
	Mem68[a1_10:word32] = a4_67
	Mem69[a0_14 + 164<i32>:word32] = a1_10
l23058E06:
	Mem70[a0_14 + 164<i32>:word32] = a1_10
	Mem71[a0_14 + 160<i32>:word32] = a1_10
l23058E0E:
l23058DE0:
	word32 a1_75
	word32 mstatus_263
	word32 s8_262
	word32 s6_261
	word32 s5_260
	word32 s4_259
	word32 s2_257
	word32 s3_258
	word32 a4_255
	word32 a5_256
	word32 a3_254
	word32 a2_253
	word32 a0_252
	word32 s1_251
	word32 s0_250
	net_buf_unref(ra_17, s1_18, a0_14, Mem7[a0_14 + 16<i32>:word32], a4_12, mstatus, dwLoc20, dwLoc1C, dwLoc18, dwArg08, dwArg58, a1, dwArg78, dwArg84, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_250, out s1_251, out a0_252, out a1_75, out a2_253, out a3_254, out a4_255, out a5_256, out s2_257, out s3_258, out s4_259, out s5_260, out s6_261, out s8_262, out mstatus_263)
	Mem101[a1_75 + 16<i32>:word32] = 0<32>
l23058DF0:
	return
bt_att_req_send_exit:


word32 bt_att_req_cancel(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg9C, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bt_gatt_unsubscribe
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 ra s1 s3 s4 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: s0 sp
bt_att_req_cancel_entry:
l23058E22:
	branch a0 == 0<32> l23058E98
l23058E24:
	branch a1 == 0<32> l23058E98
l23058E98:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	s6Out = s6
	s7Out = s7
	s8Out = s8
	return ra
l23058E26:
	word32 s0_10 = a1
	word32 a1_12
	word32 a0_16
	word32 a3_17
	word32 s1_20
	word32 s3_24
	word32 s4_25
	word32 s6_27
	word32 s7_28
	word32 s8_29
	word32 s11_278
	word32 s5_275
	word32 s9_276
	word32 s10_277
	word32 s2_274
	word32 a5_273
	word32 a2_272
	word32 a4_14
	word32 ra_19 = att_chan_get(ra, a0, a3, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_20, out a0_16, out a1_12, out a2_272, out a3_17, out a4_14, out a5_273, out s2_274, out s3_24, out s4_25, out s5_275, out s6_27, out s7_28, out s8_29, out s9_276, out s10_277, out s11_278)
	branch a0_16 == 0<32> l23058E90
l23058E90:
	s1Out = s1_20
	a3Out = a3_17
	a4Out = a4_14
	s3Out = s3_24
	s4Out = s4_25
	s6Out = s6_27
	s7Out = s7_28
	s8Out = s8_29
	return ra_19
l23058E34:
	word32 a5_38
	branch Mem9[a0_16 + 156<i32>:int32] != a1 l23058E54
l23058E54:
	a5_38 = Mem9[a0_16 + 160<i32>:int32]
	a4_14 = 0<32>
l23058E5A:
	branch a5_38 == 0<32> l23058E48
l23058E5C:
	branch a1 != a5_38 l23058E8A
l23058E8A:
	a4_14 = a5_38
	a5_38 = Mem9[a5_38:word32]
l23058E60:
	s0_10 = Mem9[a5_38:word32]
	branch a4_14 != 0<32> l23058E7A
l23058E7A:
	Mem47[a5_38:word32] = a4_14
	a5_38 = Mem47[a0_16 + 164<i32>:int32]
	branch s0_10 != a5_38 l23058E74
l23058E84:
	Mem50[a0_16 + 164<i32>:word32] = a4_14
l23058E64:
	a4_14 = Mem9[a0_16 + 164<i32>:int32]
	Mem52[a0_16 + 160<i32>:word32] = a5_38
	branch s0_10 != a4_14 l23058E74
l23058E70:
	Mem53[a0_16 + 164<i32>:word32] = a5_38
l23058E74:
	Mem55[s0_10:word32] = 0<32>
l23058E3C:
	Mem58[a0_16 + 156<i32>:word32] = 0x42017240<32>
	a5_38 = 0x42017240<32>
l23058E48:
l23058E50_thunk_att_req_destroy:
	word32 a3_88
	word32 a4_89
	word32 a5_282
	word32 a0_279
	word32 a1_280
	word32 a2_281
	word32 ra_91 = att_req_destroy(ra_19, s0, s1_20, s0_10, a1_12, a4_14, a5_38, mstatus, dwArg18, dwArg68, dwArg88, dwArg94, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out a0_279, out a1_280, out a2_281, out a3_88, out a4_89, out a5_282)
	s1Out = s1_20
	a3Out = a3_88
	a4Out = a4_89
	s3Out = s3_24
	s4Out = s4_25
	s6Out = s6_27
	s7Out = s7_28
	s8Out = s8_29
	return ra_91
bt_att_req_cancel_exit:


word32 fdt32_ld(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_by_offset_
//      fdt_get_string
//      fdt_get_name
//      fdt_get_property_namelen_
//      fdt_getprop
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_ld_entry:
l23058E9A:
	word32 a4_10 = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32)
	word32 a5_12 = CONVERT(Mem0[a0:byte], byte, word32) << 24<i32> | CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) << 16<i32> | a4_10
	word32 a0_14 = CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) << 8<i32> | a5_12
	a4Out = a4_10
	a5Out = a5_12
	return a0_14
fdt32_ld_exit:


word32 nextprop_.part.0(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg18, word32 dwArg58, word32 dwArg78, word32 dwArg0128, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_first_property_offset
//      fdt_next_property_offset
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 a5 ra s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
nextprop_.part.0_entry:
l23058EB8:
	word32 s2_17 = a0
	word32 s0_19 = a1
l23058ED0:
	word32 a0_33
	word32 a4_36
	word32 a5_37
	word32 s1_41
	word32 s3_43
	word32 s4_44
	ra = fdt_next_tag(ra, s2_17, s0_19, fp + -36<i32>, s5, s6, dwLoc30, dwLoc2C, dwLoc08, dwArg18, dwArg58, dwArg78, out s0_19, out s1_41, out a0_33, out a4_36, out a5_37, out s2_17, out s3_43, out s4_44, out s5, out s6)
	branch a0_33 == s3_43 l23058EF0
l23058EDC:
	branch a0_33 != s4_44 l23058EEA
l23058EEA:
	branch a0_33 == s1_41 l23058ED0
l23058EEE:
	s0_19 = 0xFFFFFFFF<32>
l23058EE2:
	branch s0_19 < 0<32> l23058EF0
l23058EE6:
	s0_19 = 0xFFFFFFF5<32>
l23058EF0:
	0<32> = dwArg0128
	a0Out = s0_19
	a4Out = a4_36
	a5Out = a5_37
	s2Out = s2_17
	s3Out = s3_43
	s5Out = s5
	s6Out = s6
	return ra
nextprop_.part.0_exit:


word32 fdt_get_property_by_offset_(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg18, word32 dwArg38, word32 dwArg58, word32 dwArg78, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_namelen_
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0078:[0..31]
// LiveOut: a0 a4 a5 ra s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: s0 sp
fdt_get_property_by_offset__entry:
l23058F02:
	word32 s0_42
	word32 s0_27
	word32 s1_28
	word32 s2_29
	word32 s3_30
	word32 s5_32
	word32 s6_33
	word32 a0_20
	word32 a5_24
	word32 a4_23
	word32 ra_26 = fdt_check_prop_offset_(ra, a0, a1, s5, s6, dwLoc08, dwArg18, dwArg58, dwArg78, out s0_27, out s1_28, out a0_20, out a4_23, out a5_24, out s2_29, out s3_30, out s5_32, out s6_33)
	branch a0_20 >= 0<32> l23058F2C
l23058F2C:
	s0_42 = s0_27 + (fdt32_ld(s0_27 + 8<i32>, out a4_23, out a5_24) + s2_29)
	branch s1_28 == 0<32> l23058F1E
l23058F3A:
	a0_20 = fdt32_ld(s0_42 + 4<i32>, out a4_23, out a5_24)
l23058F18:
	s0_42 = 0<32>
	branch s1_28 == 0<32> l23058F1E
l23058F1C:
	Mem50[a0_20:word32] = s1_28
l23058F1E:
	0<32> = dwArg38
	a0Out = s0_42
	a4Out = a4_23
	a5Out = a5_24
	s2Out = s2_29
	s3Out = s3_30
	s5Out = s5_32
	s6Out = s6_33
	return ra_26
fdt_get_property_by_offset__exit:


word32 fdt_get_string(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_namelen_
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
fdt_get_string_entry:
l23058F44:
	word32 s0_68
	word32 a4_198
	word32 a5_199
	word32 a0_23 = fdt32_ld(a0 + 0xC<32>, out a4_198, out a5_199)
	word32 s1_173 = a1
	word32 s3_182 = a0_23
	word32 a5_164
	word32 a0_28 = fdt_ro_probe_(a0, out a5_164)
	branch a0_28 != 0<32> l23059004
l23058F66:
	s3_182 = a0_23 + a1
	word32 a4_200
	word32 a0_34 = fdt32_ld(a0 + 4<i32>, out a4_200, out a5_164)
	branch s3_182 >=u a0_34 l23059010
l23058F74:
	s2 = a0_34 - s3_182
	word32 a4_201
	word32 a5_202
	word32 a0_39 = fdt32_ld(a0, out a4_201, out a5_202)
	a5_164 = 0xD00DFEED<32>
	branch a0_39 != 0xD00DFEED<32> l23058FD6
l23058FD6:
	a5_164 = 0x2FF20112<32>
	branch a0_39 != 0x2FF20112<32> l23059002
l23059002:
	a0_28 = 0xFFFFFFF3<32>
l23058FE2:
	branch a1 >= 0<32> l23059010
l23058FE6:
	word32 a4_206
	branch a1 <u 0<32> - fdt32_ld(a0 + 32<i32>, out a4_206, out a5_164) l23059010
l23058FF6:
	s1_173 = 0<32> - a1
	branch s1_173 >=u s2 l23058FB0
l23058FFE:
	s2 = s1_173
l23058F8A:
	branch a1 < 0<32> l23059010
l23058F8E:
	word32 a4_203
	word32 a5_204
	branch fdt32_ld(a0 + 20<i32>, out a4_203, out a5_204) <=u 0x10<32> l23058FB0
l23058F9C:
	word32 a4_205
	word32 a0_60 = fdt32_ld(a0 + 32<i32>, out a4_205, out a5_164)
	branch a1 >=u a0_60 l23059010
l23059010:
	a0_28 = 0xFFFFFFFC<32>
l23058FA8:
	word32 a0_64 = a0_60 - a1
	branch a0_64 >=u s2 l23058FB0
l23058FAE:
	s2 = a0_64
l23058FB0:
	s0_68 = a0 + s3_182
	word32 a0_81 = memchr(s0_68, 0<32>, s2, out a3, out a5_164)
	branch a0_81 == 0<32> l23059014
l23059014:
	a0_28 = 0xFFFFFFF8<32>
l23059004:
	s0_68 = 0<32>
	branch a2 == 0<32> l23058FC4
l23058FBE:
	a0_28 = a0_81 - s0_68
	branch a2 != 0<32> l2305900A
l2305900A:
	Mem91[a2:word32] = a0_28
l23058FC4:
	s1Out = s1_173
	a0Out = s0_68
	a3Out = a3
	a5Out = a5_164
	s2Out = s2
	s3Out = s3_182
	s4Out = dwArg04
	return s1
fdt_get_string_exit:


word32 fdt_get_name(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 s5, word32 s6, word32 dwArg08, word32 dwArg48, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_subnode_offset_namelen
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0048:[0..31]
// LiveOut: a0 a5 ra s0 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_get_name_entry:
l23059018:
	word32 s0_58
	word32 a4_195
	word32 a5_196
	word32 s3_165 = fdt32_ld(a0 + 8<32>, out a4_195, out a5_196)
	word32 s2_164 = a2
	word32 a5_147
	word32 a0_26 = fdt_ro_probe_(a0, out a5_147)
	branch a0_26 != 0<32> l23059078
l23059038:
	word32 s0_41
	word32 s1_42
	word32 a4_197
	ra = fdt_check_node_offset_(ra, a0, a1, s5, s6, s2, dwArg08, dwArg48, s1, out s0_41, out s1_42, out a0_26, out a4_197, out a5_147, out s2_164, out s3_165, out s5, out s6)
	branch a0_26 < 0<32> l23059078
l23059042:
	word32 s0_56 = s0_41 + s3_165 + s1_42
	a5_147 = 0xF<32>
	s0_58 = s0_56 + 4<32>
	word32 a4_198
	word32 a5_199
	branch fdt32_ld(s1_42 + 20<i32>, out a4_198, out a5_199) >u 0xF<32> l23059066
l23059056:
	word32 a0_61 = strrchr(s0_56 + 4<32>, 47<i32>, out a5_147)
	branch a0_61 == 0<32> l23059076
l23059076:
	a0_26 = 0xFFFFFFF5<32>
l23059078:
	s0_58 = 0<32>
	branch s2_164 != 0<32> l23059070
l23059062:
	s0_58 = a0_61 + 1<i32>
l23059066:
	branch s2_164 == 0<32> l2305907E
l2305906A:
	word32 a1_200
	word32 a2_201
	word32 a3_202
	word32 a4_203
	a0_26 = strlen(s0_58, out a1_200, out a2_201, out a3_202, out a4_203, out a5_147)
l23059070:
	Mem86[s2_164:word32] = a0_26
l2305907E:
	s0Out = s0_58
	a0Out = s0_58
	a5Out = a5_147
	s2Out = s2_164
	s3Out = s3_165
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	return ra
fdt_get_name_exit:


word32 fdt_subnode_offset_namelen(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s6, word32 dwArg08, word32 dwArg38, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_subnode_offset
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_subnode_offset_namelen_entry:
l2305908E:
	word32 a5_108
	word32 a0_26 = fdt_ro_probe_(a0, out a5_108)
	word32 s3_114 = a0
	word32 s2_113 = a3
	word32 s0_122 = a0_26
	branch a0_26 != 0<32> l23059116
l230590AC:
	s5 = 1<32>
	s0_122 = a1
l230590B4:
	branch s0_122 < 0<32> l23059112
l23059112:
	branch a5_108 < 0<32> l230590BE
l230590BA:
	branch a5_108 >= 0<32> l230590C2
l230590C2:
	branch a5_108 != s5 l23059106
l230590C6:
	word32 a0_49
	word32 a5_52
	word32 s4_58
	ra = fdt_get_name(ra, s1, s3_114, s0_122, fp + -36<i32>, s2_113, s5, s6, dwLoc38, dwArg08, out s0_122, out a0_49, out a5_52, out s2_113, out s3_114, out s4_58, out s5, out s6)
	branch a0_49 == 0<32> l23059106
l230590D4:
	branch a5_52 < s2_113 l23059106
l230590DA:
	word32 a1_247
	word32 a2_248
	word32 a3_249
	word32 a4_250
	word32 a5_251
	branch memcmp(a0_49, s4_58, s2_113, out a1_247, out a2_248, out a3_249, out a4_250, out a5_251) != 0<32> l23059106
l230590E4:
	s1 = a0_49 + s2_113
	a5_108 = CONVERT(Mem32[s1:byte], byte, word32)
	branch a5_108 == 0<32> l23059116
l230590EC:
	word32 a3_252
	word32 a5_253
	branch memchr(s4_58, 64<i32>, s2_113, out a3_252, out a5_253) != 0<32> l23059106
l230590FA:
	a5_108 = 64<i32>
	branch CONVERT(Mem32[s1:byte], byte, word32) == 64<i32> l23059116
l23059106:
	word32 a0_121
	ra = fdt_next_node(ra, s0_122, s3_114, s0_122, s5, s6, s2, dwLoc08, dwArg38, dwArgE8, out s1, out a0_121, out a5_108, out s2_113, out s3_114, out s5, out s6)
	s0_122 = a0_121
l230590BE:
	s0_122 = 0xFFFFFFFF<32>
l23059116:
	s0Out = dwArg0158
	s1Out = s1
	a0Out = s0_122
	a5Out = a5_108
	s2Out = s2_113
	s3Out = s3_114
	s4Out = dwArgF4
	s5Out = s5
	s6Out = s6
	return ra
fdt_subnode_offset_namelen_exit:


word32 fdt_subnode_offset(word32 ra, word32 s1, word32 a0, word32 a2, word32 s2, word32 s6, word32 dwArg08, word32 dwArg38, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
//      tc_fdt_wifi_module
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      hal_board_cfg
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_subnode_offset_entry:
l2305912A:
	word32 a1_19
	word32 a2_69
	word32 a3_70
	word32 a4_71
	word32 a5_72
	word32 a0_15 = strlen(a2, out a1_19, out a2_69, out a3_70, out a4_71, out a5_72)
l2305914A_thunk_fdt_subnode_offset_namelen:
	word32 a5_33
	word32 s0_35
	word32 s2_36
	word32 s3_37
	word32 s4_38
	word32 a0_42
	word32 s5_43
	word32 s1_48
	word32 s6_49
	word32 ra_47 = fdt_subnode_offset_namelen(ra, s1, a0, a1_19, a0_15, s2, s6, dwArg08, dwArg38, dwArgE8, out s0_35, out s1_48, out a0_42, out a5_33, out s2_36, out s3_37, out s4_38, out s5_43, out s6_49)
	s0Out = s0_35
	s1Out = s1_48
	a0Out = a0_42
	a5Out = a5_33
	s2Out = s2_36
	s3Out = s3_37
	s4Out = s4_38
	s5Out = s5_43
	s6Out = s6_49
	return ra_47
fdt_subnode_offset_exit:


word32 fdt_first_property_offset(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg18, word32 dwArg58, word32 dwArg78, word32 dwArg0128, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_namelen_
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 a5 ra s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_first_property_offset_entry:
l2305914E:
	word32 a0_13
	word32 a4_16
	word32 a5_17
	word32 s0_20
	word32 s2_22
	word32 s3_23
	word32 s5_25
	word32 s6_26
	word32 s1_88
	word32 ra_19 = fdt_check_node_offset_(ra, a0, a1, s5, s6, dwLoc08, dwArg18, dwArg58, dwArg78, out s0_20, out s1_88, out a0_13, out a4_16, out a5_17, out s2_22, out s3_23, out s5_25, out s6_26)
	branch a0_13 < 0<32> l2305916A
l2305916A:
	a0Out = a0_13
	a4Out = a4_16
	a5Out = a5_17
	s2Out = s2_22
	s3Out = s3_23
	s5Out = s5_25
	s6Out = s6_26
	return ra_19
l2305915C:
l23059166_thunk_nextprop_.part.0:
	word32 a0_38
	word32 a4_41
	word32 a5_42
	word32 s2_47
	word32 s3_48
	word32 s5_50
	word32 s6_51
	word32 ra_44 = nextprop_.part.0(ra_19, s0_20, a0_13, s5_25, s6_26, dwArg18, dwArg58, dwArg78, dwArg0128, out a0_38, out a4_41, out a5_42, out s2_47, out s3_48, out s5_50, out s6_51)
	a0Out = a0_38
	a4Out = a4_41
	a5Out = a5_42
	s2Out = s2_47
	s3Out = s3_48
	s5Out = s5_50
	s6Out = s6_51
	return ra_44
fdt_first_property_offset_exit:


word32 fdt_next_property_offset(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg18, word32 dwArg58, word32 dwArg78, word32 dwArg0128, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_namelen_
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 a5 ra s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_next_property_offset_entry:
l23059172:
	word32 a0_13
	word32 a4_16
	word32 a5_17
	word32 s0_20
	word32 s2_22
	word32 s3_23
	word32 s5_25
	word32 s6_26
	word32 s1_88
	word32 ra_19 = fdt_check_prop_offset_(ra, a0, a1, s5, s6, dwLoc08, dwArg18, dwArg58, dwArg78, out s0_20, out s1_88, out a0_13, out a4_16, out a5_17, out s2_22, out s3_23, out s5_25, out s6_26)
	branch a0_13 < 0<32> l2305918E
l2305918E:
	a0Out = a0_13
	a4Out = a4_16
	a5Out = a5_17
	s2Out = s2_22
	s3Out = s3_23
	s5Out = s5_25
	s6Out = s6_26
	return ra_19
l23059180:
l2305918A_thunk_nextprop_.part.0:
	word32 a0_38
	word32 a4_41
	word32 a5_42
	word32 s2_47
	word32 s3_48
	word32 s5_50
	word32 s6_51
	word32 ra_44 = nextprop_.part.0(ra_19, s0_20, a0_13, s5_25, s6_26, dwArg18, dwArg58, dwArg78, dwArg0128, out a0_38, out a4_41, out a5_42, out s2_47, out s3_48, out s5_50, out s6_51)
	a0Out = a0_38
	a4Out = a4_41
	a5Out = a5_42
	s2Out = s2_47
	s3Out = s3_48
	s5Out = s5_50
	s6Out = s6_51
	return ra_44
fdt_next_property_offset_exit:


word32 fdt_get_property_namelen_(word32 ra, word32 a0, word32 a1, word32 a2, word32 a5, word32 dwArg08, word32 dwArg28, word32 dwArg48, word32 dwArgF8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_getprop
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 ra s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_get_property_namelen__entry:
l23059196:
	word32 a0_120
	word32 s6_132
	word32 s2_128
	word32 s3_129
	word32 s5_131
	word32 a4_107
	word32 a5_105
	word32 ra_126 = fdt_first_property_offset(ra, a0, a1, a5, a2, dwLoc18, dwArg28, dwArg48, dwArgF8, out a0_120, out a4_107, out a5_105, out s2_128, out s3_129, out s5_131, out s6_132)
l230591B6:
	word32 s1_137
	word32 s0_139 = a0_120
	branch a0_120 >= 0<32> l230591C8
l230591C8:
	word32 a0_60
	ra_126 = fdt_get_property_by_offset_(ra_126, s3_129, a0_120, s5_131, s6_132, dwLoc18, dwArg08, dwArg28, dwArg48, out a0_60, out a4_107, out a5_105, out s2_128, out s3_129, out s5_131, out s6_132)
	branch a0_60 == 0<32> l23059220
l23059220:
	s0_139 = 0xFFFFFFF3<32>
l230591D6:
	word32 a0_85
	word32 a5_88
	word32 s4_93
	word32 a4_261
	word32 a5_262
	word32 s0_90 = fdt_get_string(s3_129, fdt32_ld(a0_60 + 8<32>, out a4_261, out a5_262), fp + -36<i32>, out s1_137, out a0_85, out a3, out a5_88, out s2_128, out s3_129, out s4_93)
	branch a0_85 != 0<32> l230591F2
l230591F2:
	branch s4_93 != a5_88 l230591E8
l230591F8:
	word32 a1_263
	word32 a2_264
	branch memcmp(a0_85, s6_132, s4_93, out a1_263, out a2_264, out a3, out a4_107, out a5_105) != 0<32> l230591E8
l23059202:
	branch s5_131 == 0<32> l2305920A
l23059206:
	Mem110[s5_131:word32] = s0_90
l230591E8:
	ra_126 = fdt_next_property_offset(ra_126, s3_129, s0_90, s5_131, s6_132, dwLoc18, dwArg28, dwArg48, dwArgF8, out a0_120, out a4_107, out a5_105, out s2_128, out s3_129, out s5_131, out s6_132)
l230591BC:
	s1_137 = 0<32>
	branch s2_128 == 0<32> l2305920A
l230591C2:
	Mem140[s2_128:word32] = s0_139
l2305920A:
	0<32> = dwArg0128
	s1Out = s1_137
	a0Out = s1_137
	a3Out = a3
	a4Out = a4_107
	a5Out = a5_105
	s2Out = s2_128
	s3Out = s3_129
	s5Out = s5_131
	s6Out = s6_132
	return ra_126
fdt_get_property_namelen__exit:


word32 fdt_getprop_namelen(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg08, word32 dwArg28, word32 dwArgD8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_getprop
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_getprop_namelen_entry:
l23059224:
	word32 a0_15
	word32 a3_18
	word32 s1_25
	word32 s2_26
	word32 s3_27
	word32 s5_29
	word32 s6_30
	word32 a4_19
	word32 a5_20
	word32 ra_23 = fdt_get_property_namelen_(ra, a0, a1, a2, fp + 0xFFFFFFEC<32>, dwLoc18, dwArg08, dwArg28, dwArgD8, dwArg0108, out s1_25, out a0_15, out a3_18, out a4_19, out a5_20, out s2_26, out s3_27, out s5_29, out s6_30)
	word32 s0_35 = a0_15
	branch a0_15 == 0<32> l2305925E
l23059238:
	a5_20 = 0xF<32>
	word32 a5_123
	branch fdt32_ld(s1_25 + 20<i32>, out a4_19, out a5_123) >u 0xF<32> l2305926A
l23059246:
	a5_20 = 3<32>
	branch false l2305926A
l2305924E:
	a5_20 = 7<32>
	word32 a5_124
	branch fdt32_ld(a0_15 + 4<i32>, out a4_19, out a5_124) <=u 7<32> l2305926A
l2305926A:
	s0_35 = a0_15 + 0xC<32>
l2305925C:
	s0_35 = a0_15 + 0x10<32>
l2305925E:
	s0Out = s0_35
	s1Out = s1_25
	a0Out = s0_35
	a1Out = a1_16
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_20
	s2Out = s2_26
	s3Out = s3_27
	s4Out = dwArg04
	s5Out = s5_29
	s6Out = s6_30
	s8Out = dwLoc1C
	return ra_23
fdt_getprop_namelen_exit:


word32 fdt_getprop(word32 ra, word32 a0, word32 a2, word32 dwArg08, word32 dwArg28, word32 dwArg44, word32 dwArgD8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_stringlist_count
//      fdt_stringlist_get
//      tc_fdt_wifi_module
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      hal_board_cfg
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_getprop_entry:
l2305926E:
	word32 a1_21
	word32 a2_76
	word32 a3_77
	word32 a4_78
	word32 a5_79
	strlen(a2, out a1_21, out a2_76, out a3_77, out a4_78, out a5_79)
l23059292_thunk_fdt_getprop_namelen:
	word32 a1_31
	word32 a3_33
	word32 a4_34
	word32 a5_35
	word32 s0_39
	word32 s1_40
	word32 s2_41
	word32 s3_42
	word32 s4_43
	word32 s5_44
	word32 s6_45
	word32 s8_46
	word32 a0_50
	word32 ra_38 = fdt_getprop_namelen(ra, a0, a1_21, dwArg44, dwArg08, dwArg28, dwArgD8, dwArg0108, out s0_39, out s1_40, out a0_50, out a1_31, out a3_33, out a4_34, out a5_35, out s2_41, out s3_42, out s4_43, out s5_44, out s6_45, out s8_46)
	s0Out = s0_39
	s1Out = s1_40
	a0Out = a0_50
	a1Out = a1_31
	a3Out = a3_33
	a4Out = a4_34
	a5Out = a5_35
	s2Out = s2_41
	s3Out = s3_42
	s4Out = s4_43
	s5Out = s5_44
	s6Out = s6_45
	s8Out = s8_46
	return ra_38
fdt_getprop_exit:


word32 fdt_stringlist_count(word32 ra, word32 a0, word32 a2, word32 s2, word32 dwArg08, word32 dwArg24, word32 dwArgB8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_fdt_wifi_module
//      vfs_uart_init
//      hal_board_cfg
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_stringlist_count_entry:
l23059296:
	word32 a0_15
	word32 s3_27
	word32 s5_29
	word32 s6_30
	word32 s8_126
	word32 a5_124
	word32 s4_125
	word32 a3_122
	word32 a4_123
	word32 a1_121
	word32 s0_24
	word32 s1_100
	word32 s2_101
	word32 ra_23 = fdt_getprop(ra, a0, a2, s2, dwArg08, dwArg24, dwArgB8, dwArgE8, out s0_24, out s1_100, out a0_15, out a1_121, out a3_122, out a4_123, out a5_124, out s2_101, out s3_27, out s4_125, out s5_29, out s6_30, out s8_126)
	branch a0_15 == 0<32> l230592B6
l230592AA:
	s2_101 = a0_15 + s0_24
	s1_100 = a0_15
	s0_24 = 0<32>
l230592B2:
	branch s1_100 <u s2_101 l230592C4
l230592C4:
	word32 a1_127
	word32 a3_128
	word32 a4_129
	word32 a5_130
	s1_100 = s1_100 + (strnlen(s1_100, s2_101 - s1_100, out a1_127, out a3_128, out a4_129, out a5_130) + 1<32>)
	branch s2_101 <u s1_100 l230592DC
l230592DC:
	s0_24 = 0xFFFFFFF1<32>
l230592D8:
	s0_24 = s0_24 + 1<32>
l230592B6:
	s0Out = s0_24
	s1Out = s1_100
	a0Out = s0_24
	s2Out = s2_101
	s3Out = s3_27
	s4Out = dwArg04
	s5Out = s5_29
	s6Out = s6_30
	s8Out = dwLoc1C
	return ra_23
fdt_stringlist_count_exit:


word32 fdt_stringlist_get(word32 ra, word32 a0, word32 a2, word32 dwArg14, word32 dwArgA8, word32 dwArgD8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_fdt_wifi_module
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      hal_board_cfg
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
fdt_stringlist_get_entry:
l230592E0:
	word32 a0_21
	word32 s1_31
	word32 s4_34
	word32 s5_35
	word32 s6_36
	word32 s8_37
	word32 s0_190
	word32 a5_133
	word32 a4_129
	word32 a3_125
	word32 a1_121
	word32 s2_150
	word32 s3_153
	word32 ra_29 = fdt_getprop(ra, a0, a2, dwLoc28, dwLoc08, dwArg14, dwArgA8, dwArgD8, out s0_190, out s1_31, out a0_21, out a1_121, out a3_125, out a4_129, out a5_133, out s2_150, out s3_153, out s4_34, out s5_35, out s6_36, out s8_37)
	word32 s0_41 = a0_21
	branch a0_21 != 0<32> l23059314
l23059314:
	s2_150 = s2_150 + a0_21
l23059318:
	branch s0_41 <u s2_150 l23059322
l23059322:
	word32 a5_191
	word32 a0_48 = strnlen(s0_41, s2_150 - s0_41, out a1_121, out a3_125, out a4_129, out a5_191)
	a5_133 = a0_48 + 1<i32> + s0_41
	branch s2_150 >=u a5_133 l23059340
l23059340:
	branch s3_153 != 0<32> l2305934A
l2305934A:
	s3_153 = s3_153 + 0xFFFFFFFF<32>
	s0_41 = a5_133
l23059344:
	branch s1_31 == 0<32> l23059304
l23059346:
	Mem61[a0_48:word32] = s1_31
l23059338:
	a5_133 = 0xFFFFFFF1<32>
	branch s1_31 == 0<32> l230592FC
l2305931C:
	branch s1_31 == 0<32> l230592FC
l2305931E:
	a5_133 = 0xFFFFFFFF<32>
l2305933C:
	Mem66[a5_133:word32] = s1_31
l230592FA:
	branch s1_31 != 0<32> l23059300
l23059300:
	Mem68[a5_133:word32] = s1_31
l230592FC:
	s0_41 = 0<32>
l23059304:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_31
	a0Out = s0_41
	a1Out = a1_121
	a2Out = dwArg0100
	a3Out = a3_125
	a4Out = a4_129
	a5Out = a5_133
	s2Out = s2_150
	s3Out = s3_153
	s4Out = s4_34
	s5Out = s5_35
	s6Out = s6_36
	s8Out = s8_37
	return ra_29
fdt_stringlist_get_exit:


void blfdt(word32 ra, word32 s1, word32 s2, word32 s4, word32 s6, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg50, word32 dwArg54, word32 dwArg5C, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
blfdt_entry:
l23059350:
	word32 a3_12
	word32 s1_18
	word32 s2_21
	word32 s7_26
	word32 s9_28
	word32 ra_17 = tc_fdt_wifi(ra, s1, s2, s4, s6, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_18, out a3_12, out s2_21, out s7_26, out s9_28)
l2305935C_thunk_tc_blfdtdump:
	tc_blfdtdump(ra_17, s1_18, a3_12, s2_21, s7_26, s9_28, dwArg10, dwArg14, dwArg18, dwArg5C)
	return
blfdt_exit:


void blfdt_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
blfdt_cli_init_entry:
l2305935E:
	return
blfdt_cli_init_exit:


word32 fdt32_ld(word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_ro_probe_
//      fdt_offset_ptr
// MayUse:  a0:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_ld_entry:
l23059362:
	word32 a4_10 = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32)
	word32 a0_14 = CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) << 8<i32> | ((CONVERT(Mem0[a0:byte], byte, word32) << 24<i32> | CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) << 16<i32>) | a4_10)
	a4Out = a4_10
	return a0_14
fdt32_ld_exit:


word32 fdt_ro_probe_(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_string
//      fdt_get_name
//      fdt_subnode_offset_namelen
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
fdt_ro_probe__entry:
l23059380:
	word32 a5_17
	word32 a4_51
	word32 a0_10 = fdt32_ld(a0, out a4_51)
	branch a0_10 != 0xD00DFEED<32> l230593C4
l230593C4:
	a5_17 = 0xFFFFFFF7<32>
	branch a0_10 != 0x2FF20112<32> l230593BA
l230593D2:
	a5_17 = 0<32>
	word32 a4_54
	branch fdt32_ld(a0 + 36<i32>, out a4_54) != 0<32> l230593BA
l230593DE:
	a5_17 = 0xFFFFFFF9<32>
l23059398:
	a5_17 = 0xFFFFFFF6<32>
	word32 a4_52
	branch fdt32_ld(a0 + 20<i32>, out a4_52) <=u 1<32> l230593BA
l230593A8:
	a5_17 = 0<32>
	word32 a4_53
	branch fdt32_ld(a0 + 24<i32>, out a4_53) <=u 0x11<32> l230593BA
l230593B8:
	a5_17 = 0xFFFFFFF6<32>
l230593BA:
	a5Out = a5_17
	return a5_17
fdt_ro_probe__exit:


word32 fdt_offset_ptr(word32 a0, word32 a1, word32 a2, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_next_tag
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 a5 s2 s3 s4
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
fdt_offset_ptr_entry:
l230593E2:
	word32 a4_24
	word32 s2_26 = fdt32_ld(a0 + 8<32>, out a4_24) + a1
	word32 a5_27 = 0<32>
	branch s2_26 <u a1 l23059446
l23059406:
	word32 s4_28 = s2_26 + a2
	a5_27 = 0<32>
	branch s4_28 <u s2_26 l23059446
l23059410:
	a5_27 = 0<32>
	branch fdt32_ld(a0 + 4<i32>, out a4_24) <u s4_28 l23059446
l2305941E:
	branch fdt32_ld(a0 + 20<i32>, out a4_24) <=u 0x10<32> l23059442
l2305942C:
	word32 s1_40 = a2 + a1
	a5_27 = 0<32>
	branch s1_40 <u a1 l23059446
l23059434:
	a5_27 = 0<32>
	branch fdt32_ld(a0 + 36<i32>, out a4_24) <u s1_40 l23059446
l23059442:
	a5_27 = a0 + s2_26
l23059446:
	a2Out = dwArg48
	a4Out = a4_24
	a5Out = a5_27
	s2Out = s2_26
	s3Out = a1
	s4Out = dwArg04
	return a5_27
fdt_offset_ptr_exit:


word32 fdt_next_tag(word32 ra, word32 a0, word32 a1, word32 a2, word32 s5, word32 s6, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg48, word32 dwArg88, word32 dwArgA8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_first_property_offset
//      fdt_check_node_offset_
//      fdt_check_prop_offset_
//      fdt_next_node
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a4 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_next_tag_entry:
l23059458:
	Mem23[0xFFFFFFF8<32>:word32] = a2
	word32 a2_30
	word32 s2_36
	word32 s3_37
	word32 s4_38
	word32 a5_122
	word32 a4_120
	branch fdt_offset_ptr(a0, a1, 4<32>, out a2_30, out a4_120, out a5_122, out s2_36, out s3_37, out s4_38) != 0<32> l23059480
l23059480:
	word32 a0_41 = Mem23[a5_122:word32]
	Mem55[s2_36:word32] = 0xFFFFFFF5<32>
	word32 s1_53 = a5_122 << 0x18<u32> | a5_122 >>u 0x18<u32> | (a5_122 >>u 8<u32> & 255<i32>) << 16<i32> | (a5_122 >>u 16<i32> & 255<i32>) << 8<i32>
	a4_120 = 8<32>
	a5_122 = s1_53 + -1<i32>
	branch s1_53 >u 0xFFFFFFF7<32> l2305947C
l230594B6:
	word32 a5_62 = Mem55[(s1_53 + -1<i32> << 2<i32>) + 0x230BD1F8<32>:word32]
	word32 s2_64
	word32 s3_65
	word32 s4_66
	word32 ra_67
	word32 s0_68
	word32 s1_69
	word32 s5_70
	word32 s6_71
	word32 a5_72
	word32 a0_74
	word32 a4_76
	call a5_62 (retsize: 0;)
		uses: a0:a0_41,a1:a1,a2:a2_30,a4:0x230BD1F8<32>,a5:a5_62,ra:ra,s0:s4_38 + 4<i32>,s1:s1_53,s2:s2_36,s3:s3_37,s4:s4_38,s5:s5,s6:s6,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0048:dwArg28,Stack +0068:dwArg48,Stack +00A8:dwArg88,Stack +00C8:dwArgA8
		defs: a0:a0_74,a4:a4_76,a5:a5_72,ra:ra_67,s0:s0_68,s1:s1_69,s2:s2_64,s3:s3_65,s4:s4_66,s5:s5_70,s6:s6_71
	s0Out = s0_68
	s1Out = s1_69
	a0Out = a0_74
	a4Out = a4_76
	a5Out = a5_72
	s2Out = s2_64
	s3Out = s3_65
	s4Out = s4_66
	s5Out = s5_70
	s6Out = s6_71
	return ra_67
l2305947C:
l230594F4:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = 9<32>
	a0Out = 9<32>
	a4Out = a4_120
	a5Out = a5_122
	s2Out = s2_36
	s3Out = s3_37
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	return ra
fdt_next_tag_exit:


word32 fdt_check_node_offset_(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg08, word32 dwArg28, word32 dwArg68, word32 dwArg88, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_name
//      fdt_first_property_offset
//      fdt_next_node
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0088:[0..31]
// LiveOut: a0 a4 a5 ra s0 s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_check_node_offset__entry:
l23059566:
	word32 a0_13
	branch a1 >= 0<32> l23059578
l23059578:
	a5 = a1 & 3<i32>
	branch (a1 & 3<i32>) != 0<32> l23059570
l2305957E:
	word32 a5_102
	word32 s4_103
	ra = fdt_next_tag(ra, a0, a1, fp + 0xFFFFFFEC<32>, s5, s6, dwLoc20, dwLoc1C, dwArg08, dwArg28, dwArg68, dwArg88, out s0, out s1, out a0_13, out a4, out a5_102, out s2, out s3, out s4_103, out s5, out s6)
	a5 = 1<32>
	branch a0_13 != 1<32> l23059570
l2305958A:
l23059570:
	a0_13 = 0xFFFFFFFC<32>
l23059572:
	s0Out = s0
	s1Out = s1
	a0Out = a0_13
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return ra
fdt_check_node_offset__exit:


word32 fdt_check_prop_offset_(word32 ra, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg08, word32 dwArg28, word32 dwArg68, word32 dwArg88, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_get_property_by_offset_
//      fdt_next_property_offset
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0088:[0..31]
// LiveOut: a0 a4 a5 ra s0 s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_check_prop_offset__entry:
l2305958E:
	word32 a0_13
	branch a1 >= 0<32> l230595A0
l230595A0:
	a5 = a1 & 3<i32>
	branch (a1 & 3<i32>) != 0<32> l23059598
l230595A6:
	word32 a5_102
	word32 s4_103
	ra = fdt_next_tag(ra, a0, a1, fp + 0xFFFFFFEC<32>, s5, s6, dwLoc20, dwLoc1C, dwArg08, dwArg28, dwArg68, dwArg88, out s0, out s1, out a0_13, out a4, out a5_102, out s2, out s3, out s4_103, out s5, out s6)
	a5 = 3<32>
	branch a0_13 != 3<32> l23059598
l230595B2:
l23059598:
	a0_13 = 0xFFFFFFFC<32>
l2305959A:
	s0Out = s0
	s1Out = s1
	a0Out = a0_13
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	return ra
fdt_check_prop_offset__exit:


word32 fdt_next_node(word32 ra, word32 s0, word32 a0, word32 a1, word32 s5, word32 s6, word32 dwArg18, word32 dwArg38, word32 dwArg78, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fdt_subnode_offset_namelen
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a5 ra s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
fdt_next_node_entry:
l230595B6:
	word32 a5_164
	word32 s3_174
	word32 s5_176
	word32 s1_170
	word32 s2_100 = a0
	branch a1 >= 0<32> l230595F8
l230595F8:
	word32 a0_25
	word32 s0_187
	word32 a4_188
	ra = fdt_check_node_offset_(ra, a0, a1, s5, s6, dwLoc28, dwLoc08, dwArg38, s5, out s0_187, out s1_170, out a0_25, out a4_188, out a5_164, out s2_100, out s3_174, out s5_176, out s6)
	s0 = a0_25
	branch a0_25 >= 0<32> l230595D0
l230595D0:
	s5_176 = 1<32>
l230595D6:
	word32 a0_58
	word32 s4_69
	word32 a4_189
	ra = fdt_next_tag(ra, s2_100, s0, fp + -36<i32>, s5_176, s6, dwLoc30, dwLoc2C, dwLoc08, dwArg18, s5, dwArg78, out s0, out s1_170, out a0_58, out a4_189, out a5_164, out s2_100, out s3_174, out s4_69, out s5_176, out s6)
	branch a0_58 == s3_174 l23059618
l23059618:
	branch s1_170 == 0<32> l230595D6
l2305961A:
	s1_170 = Mem48[a5_164:word32]
	Mem77[a5_164 + 0xFFFFFFFF<32>:word32] = s1_170
	a5_164 = a5_164 + 0xFFFFFFFF<32>
	branch a5_164 >= 0xFFFFFFFF<32> l230595D6
l23059624:
l230595E6:
	branch a0_58 == s4_69 l23059628
l23059628:
	branch s0 >= 0<32> l23059636
l2305962E:
	a5_164 = 0xFFFFFFF8<32>
	branch s0 != 0xFFFFFFF8<32> l23059604
l23059634:
	branch s1_170 != 0<32> l23059604
l23059636:
	s0 = 0xFFFFFFFF<32>
l230595EA:
	branch a0_58 != s5_176 l230595D6
l230595EE:
	branch s1_170 == 0<32> l23059604
l230595F0:
	s1_170 = Mem48[a5_164:word32]
	Mem84[a5_164 + 1<32>:word32] = s1_170
	a5_164 = a5_164 + 1<32>
l23059604:
	0<32> = dwArg0128
	s1Out = s1_170
	a0Out = s0
	a5Out = a5_164
	s2Out = s2_100
	s3Out = s3_174
	s5Out = s5_176
	s6Out = s6
	return ra
fdt_next_node_exit:


word32 fdt32_to_cpu(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utilfdt_print_data
//      tc_blfdtdump
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_to_cpu_entry:
l2305963A:
	return (a0 >>u 16<i32> & 255<i32>) << 8<i32> | ((a0 << 0x18<u32> | a0 >>u 0x18<u32>) | (a0 >>u 8<u32> & 255<i32>) << 16<i32>)
fdt32_to_cpu_exit:


word32 fdt64_to_cpu(word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_blfdtdump
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a3
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
fdt64_to_cpu_entry:
l2305965C:
	word32 a3_12 = a0 << 0x18<u32> | (a0 >>u 8<u32> & 255<i32>) << 16<i32> | (a0 >>u 0x10<u32> & 255<i32>) << 8<i32>
	a1Out = a3_12 | a0 >>u 0x18<u32>
	a3Out = a3_12
	return (a1 >>u 8<u32> & 255<i32>) << 16<i32> | (a1 >>u 0x18<u32> | a1 << 0x18<u32>) | (a1 >>u 0x10<u32> & 255<i32>) << 8<i32>
fdt64_to_cpu_exit:


word32 fdt32_ld(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_blfdtdump
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_ld_entry:
l230596A4:
	return CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) << 8<i32> | ((CONVERT(Mem0[a0:byte], byte, word32) << 24<i32> | CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) << 16<i32>) | CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32))
fdt32_ld_exit:


word32 util_is_printable_string(word32 a0, word32 a1, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utilfdt_print_data
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
util_is_printable_string_entry:
l230596C2:
	word32 a5_29
	branch a1 == 0<32> l2305970E
l230596C4:
	word32 a1_5 = a1 + a0
	a5_29 = 0<32>
	branch CONVERT(Mem0[a1_5 + -1<i32>:byte], byte, word32) != 0<32> l230596DC
l230596CE:
	a3 = 0x230CB5B1<32>
l230596D6:
	branch a0 <u a1_5 l230596EA
l230596EA:
	word32 a5_13 = a0
l230596EC:
	word32 a4_16 = CONVERT(Mem0[a5_13:byte], byte, word32)
	branch a4_16 == 0<32> l230596FE
l230596F2:
	branch (CONVERT(Mem0[a4_16 + 0x230CB5B1<32>:byte], byte, word32) & 151<i32>) != 0<32> l230596E0
l230596E0:
	a5_13 = a5_13 + 1<32>
	branch a1_5 != a5_13 l230596EC
l230596E6:
	a5_13 = a1_5
l230596FE:
	branch CONVERT(Mem0[a5_13:byte], byte, word32) != 0<32> l2305970E
l23059704:
	branch a0 == a5_13 l2305970E
l2305970E:
	a5_29 = 0<32>
l23059708:
	a0 = a5_13 + 1<i32>
l230596DA:
	a5_29 = 1<32>
l230596DC:
	a3Out = a3
	return a5_29
util_is_printable_string_exit:


word32 utilfdt_print_data(word32 ra, word32 a0, word32 a1, word32 s2, word32 dwArg08, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgBC, ptr32 & s0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_blfdtdump
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00BC:[0..31]
// LiveOut: a3 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
utilfdt_print_data_entry:
l23059712:
	branch a1 == 0<32> l23059844
l23059844:
	s0Out = s0
	a3Out = a3
	return ra
l23059716:
	word32 a3_28
	branch util_is_printable_string(a0, a1, out a3_28) == 0<32> l2305976A
l2305976A:
	word32 a0_106
	word32 a3_114
	word32 ra_117
	branch (a1 & 3<i32>) != 0<32> l230597E0
l230597E0:
	word32 s1_545
	word32 a0_546
	word32 a1_547
	word32 a2_548
	word32 a4_549
	word32 a5_550
	word32 a7_551
	word32 s2_552
	word32 s3_553
	word32 s4_554
	word32 s5_555
	word32 s6_556
	word32 s7_557
	word32 s8_558
	word32 s9_559
	word32 s10_560
	word32 s11_561
	word32 t4_562
	ra_117 = printf(ra, 0x230BE820<32>, a3_28, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_545, out a0_546, out a1_547, out a2_548, out a3_114, out a4_549, out a5_550, out a7_551, out s2_552, out s3_553, out s4_554, out s5_555, out s6_556, out s7_557, out s8_558, out s9_559, out s10_560, out s11_561, out t4_562)
	word32 s2_104 = 0<32>
	word32 s5_57 = a1 + -1<i32>
	word32 s6_60 = 0x230BF000<32>
l23059806:
	branch s2_104 < a1 l23059814
l23059814:
	branch s2_104 < s5_57 l23059824
l23059822:
l23059824:
	word32 s2_94
	word32 s1_598
	word32 a0_599
	word32 a1_600
	word32 a2_601
	word32 a4_602
	word32 a5_603
	word32 a7_604
	word32 s3_605
	word32 s4_606
	word32 s7_607
	word32 s8_608
	word32 s9_609
	word32 s10_610
	word32 s11_611
	word32 t4_612
	ra_117 = printf(ra_117, s6_60 + -2008<i32>, a3_114, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_598, out a0_599, out a1_600, out a2_601, out a3_114, out a4_602, out a5_603, out a7_604, out s2_94, out s3_605, out s4_606, out s5_57, out s6_60, out s7_607, out s8_608, out s9_609, out s10_610, out s11_611, out t4_612)
	s2_104 = s2_94 + 1<32>
l2305980A:
	a0_106 = 0x230B3954<32>
l23059770:
	word32 s1_563
	word32 a1_564
	word32 a2_565
	word32 a4_566
	word32 a5_567
	word32 a7_568
	word32 s2_569
	word32 s3_570
	word32 s4_571
	word32 s5_572
	word32 s6_573
	word32 s7_574
	word32 s8_575
	word32 s9_576
	word32 s10_577
	word32 s11_578
	word32 t4_579
	word32 a0_109
	ra_117 = printf(ra, 0x230BE80C<32>, a3_28, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_563, out a0_109, out a1_564, out a2_565, out a3_114, out a4_566, out a5_567, out a7_568, out s2_569, out s3_570, out s4_571, out s5_572, out s6_573, out s7_574, out s8_575, out s9_576, out s10_577, out s11_578, out t4_579)
	word32 s2_135 = 0<32>
	word32 s6_138 = 0x230BF000<32>
	word32 s5_139 = (a1 ^ 4<32>) + -1<i32>
l2305979C:
	branch s2_135 < (a1 ^ 4<32>) l230597BE
l230597BE:
	fdt32_to_cpu(a0_109)
	branch s2_135 < s5_139 l230597D4
l230597D2:
l230597D4:
	word32 s2_177
	word32 s1_613
	word32 a1_614
	word32 a2_615
	word32 a4_616
	word32 a5_617
	word32 a7_618
	word32 s3_619
	word32 s4_620
	word32 s7_621
	word32 s8_622
	word32 s9_623
	word32 s10_624
	word32 s11_625
	word32 t4_626
	ra_117 = printf(ra_117, s6_138 + -2028<i32>, a3_114, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_613, out a0_109, out a1_614, out a2_615, out a3_114, out a4_616, out a5_617, out a7_618, out s2_177, out s3_619, out s4_620, out s5_139, out s6_138, out s7_621, out s8_622, out s9_623, out s10_624, out s11_625, out t4_626)
	s2_135 = s2_177 + 1<32>
l230597A0:
	a0_106 = 0x230C892C<32>
l230597A8:
	0<32> = dwArgA8
l230597BA_thunk_printf:
	word32 a3_208
	word32 s1_580
	word32 a0_581
	word32 a1_582
	word32 a2_583
	word32 a4_584
	word32 a5_585
	word32 a7_586
	word32 s2_587
	word32 s3_588
	word32 s4_589
	word32 s5_590
	word32 s6_591
	word32 s7_592
	word32 s8_593
	word32 s9_594
	word32 s10_595
	word32 s11_596
	word32 t4_597
	word32 ra_211 = printf(ra_117, a0_106, a3_114, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_580, out a0_581, out a1_582, out a2_583, out a3_208, out a4_584, out a5_585, out a7_586, out s2_587, out s3_588, out s4_589, out s5_590, out s6_591, out s7_592, out s8_593, out s9_594, out s10_595, out s11_596, out t4_597)
	s0Out = s1
	a3Out = a3_208
	return ra_211
l23059732:
	word32 s1_236
	word32 s10_504
	word32 s11_505
	word32 t4_506
	word32 s5_499
	word32 s8_502
	word32 s9_503
	word32 s6_500
	word32 s7_501
	word32 a5_494
	word32 s3_497
	word32 s4_498
	word32 a7_495
	word32 s2_496
	word32 a2_492
	word32 a4_493
	word32 a0_490
	word32 a1_491
	word32 a3_232
	word32 ra_235 = printf(ra, 0x230BE7FC<32>, a3_28, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_236, out a0_490, out a1_491, out a2_492, out a3_232, out a4_493, out a5_494, out a7_495, out s2_496, out s3_497, out s4_498, out s5_499, out s6_500, out s7_501, out s8_502, out s9_503, out s10_504, out s11_505, out t4_506)
	word32 s3_249 = 0x230BF000<32>
	word32 s0_250 = a1 + s1_236
l23059748:
	word32 s1_269
	word32 s2_272
	word32 t4_540
	word32 s11_539
	word32 s10_538
	word32 s9_537
	word32 s8_536
	word32 s7_535
	word32 s6_534
	word32 a5_529
	word32 s4_532
	word32 s5_533
	word32 a7_530
	word32 s3_531
	word32 a0_524
	word32 a3_527
	word32 a4_528
	word32 a1_525
	word32 a2_526
	word32 ra_268 = printf(ra_235, s3_249 + -2048<i32>, a3_232, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_269, out a0_524, out a1_525, out a2_526, out a3_527, out a4_528, out a5_529, out a7_530, out s2_272, out s3_531, out s4_532, out s5_533, out s6_534, out s7_535, out s8_536, out s9_537, out s10_538, out s11_539, out t4_540)
	word32 a1_541
	word32 a2_542
	word32 a4_543
	word32 a5_544
	word32 a3_284
	branch s1_269 + (strlen(s1_269, out a1_541, out a2_542, out a3_284, out a4_543, out a5_544) + 1<32>) >=u s0_250 l23059830
l23059830:
	0<32> = dwArgA8
	s0Out = s1
	a3Out = a3_284
	return ra_268
utilfdt_print_data_exit:
l23059760:
	word32 s8_519
	word32 s11_522
	word32 t4_523
	word32 s9_520
	word32 s10_521
	word32 s2_514
	word32 s6_517
	word32 s7_518
	word32 s4_515
	word32 s5_516
	word32 a1_509
	word32 a5_512
	word32 a7_513
	word32 a2_510
	word32 a4_511
	word32 s1_507
	word32 a0_508
	ra_235 = printf(ra_268, s2_272 + -2040<i32>, a3_284, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_507, out a0_508, out a1_509, out a2_510, out a3_232, out a4_511, out a5_512, out a7_513, out s2_514, out s3_249, out s4_515, out s5_516, out s6_517, out s7_518, out s8_519, out s9_520, out s10_521, out s11_522, out t4_523)


void tc_blfdtdump(word32 ra, word32 s1, word32 a3, word32 s2, word32 s7, word32 s9, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg5C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blfdt
// MayUse:  a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s7:[0..31] s9:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +005C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
tc_blfdtdump_entry:
l23059846:
	word32 s0_126 = 0x230BD54C<32>
	word32 s2_1084 = 0x230BE7FB<32>
	word32 s6_1085 = 3<32>
	word32 s4_1086 = 0xD00DFEED<32>
	word32 s7_1087 = 39<i32>
	word32 s9_1091 = 0x230BD000<32>
	word32 s5_1088 = 0x11<32>
l2305988E:
	word32 a2_44 = s2_1084 - s0_126
	branch s6_1085 < a2_44 l23059A30
l23059A30:
	word32 a5_1620
	word32 a0_57 = memchr(s0_126, 208<i32>, a2_44 + 0xFFFFFFFC<32>, out a3, out a5_1620)
	branch a0_57 != 0<32> l23059A50
l23059A50:
	branch fdt32_ld(a0_57) != s4_1086 l23059AAC
l23059A58:
	word32 s3_63 = s2_1084 - a0_57
	branch s7_1087 >=u s3_63 l23059A9C
l23059A60:
	branch s5_1088 <u fdt32_ld(a0_57 + 20<i32>) l23059A9C
l23059A6C:
	branch s5_1088 <u fdt32_ld(a0_57 + 24<i32>) l23059A9C
l23059A78:
	branch fdt32_ld(a0_57 + 4<i32>) >=u s3_63 l23059A9C
l23059A84:
	branch fdt32_ld(a0_57 + 8<i32>) >=u s3_63 l23059A9C
l23059A90:
	branch fdt32_ld(a0_57 + 12<i32>) <u s3_63 l230598A2
l23059A9C:
	word32 a7_1765
	word32 s8_1767
	word32 s11_1769
	word32 t4_1770
	word32 s10_1768
	word32 s3_1766
	word32 s1_1759
	word32 a0_1760
	word32 a1_1761
	word32 a2_1762
	word32 a4_1763
	word32 a5_1764
	ra = printf(ra, s9_1091 + 656<i32>, a3, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1759, out a0_1760, out a1_1761, out a2_1762, out a3, out a4_1763, out a5_1764, out a7_1765, out s2_1084, out s3_1766, out s4_1086, out s5_1088, out s6_1085, out s7_1087, out s8_1767, out s9_1091, out s10_1768, out s11_1769, out t4_1770)
l23059AAC:
	s0_126 = a0_57 + 1<32>
l23059896:
	branch s0_126 == 0<32> l23059A40
l2305989A:
	branch a2_44 <=u 39<i32> l23059A40
l23059A40:
	branch Mem33[0x4200F560<32>:int32] != 0<32> l23059AB0
l23059AB0:
	word32 a5_1707
	xTaskGetTickCountFromISR(out a5_1707)
l23059A4A:
	word32 a5_1708
	xTaskGetTickCount(out a5_1708)
l23059AB4:
	word32 a3_156
	word32 t4_1743
	word32 s10_1741
	word32 s8_1739
	word32 s6_1737
	word32 s4_1735
	word32 s2_1733
	word32 a3_1729
	word32 s5_1718
	word32 s11_1742
	word32 s9_1740
	word32 s7_1738
	word32 s5_1736
	word32 s3_1734
	word32 a4_1730
	word32 a7_1732
	word32 a5_1731
	word32 s9_1722
	word32 s10_1723
	word32 s11_1724
	word32 s1_1725
	word32 a0_1726
	word32 a1_1727
	word32 a2_1728
	word32 s6_1719
	word32 s8_1721
	word32 s7_1720
	word32 a1_1711
	word32 a2_1712
	word32 a4_1713
	word32 a5_1714
	word32 s2_1715
	word32 s3_1716
	word32 s4_1717
	word32 a0_1710
	word32 s1_1709
	printf(bl_printk(ra, 0x230BD2C8<32>, 0x230BD2B8<32>, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1709, out a0_1710, out a1_1711, out a2_1712, out a3_156, out a4_1713, out a5_1714, out s2_1715, out s3_1716, out s4_1717, out s5_1718, out s6_1719, out s7_1720, out s8_1721, out s9_1722, out s10_1723, out s11_1724), 0x230BD2FC<32>, a3_156, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1725, out a0_1726, out a1_1727, out a2_1728, out a3_1729, out a4_1730, out a5_1731, out a7_1732, out s2_1733, out s3_1734, out s4_1735, out s5_1736, out s6_1737, out s7_1738, out s8_1739, out s9_1740, out s10_1741, out s11_1742, out t4_1743)
l230598A2:
	word32 s1_1621
	word32 a0_1622
	word32 a7_1628
	word32 a5_1627
	word32 s6_1633
	word32 s3_1630
	word32 s2_1629
	word32 t4_1639
	word32 a1_1623
	word32 a2_1624
	word32 a3_1625
	word32 a4_1626
	word32 s4_1631
	word32 s5_1632
	word32 s11_1638
	word32 s8_1635
	word32 s10_1637
	word32 s7_1634
	word32 s9_1636
	word32 ra_220 = printf(ra, 0x230BD30C<32>, a3, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1621, out a0_1622, out a1_1623, out a2_1624, out a3_1625, out a4_1626, out a5_1627, out a7_1628, out s2_1629, out s3_1630, out s4_1631, out s5_1632, out s6_1633, out s7_1634, out s8_1635, out s9_1636, out s10_1637, out s11_1638, out t4_1639)
	branch Mem33[0x4200F560<32>:int32] == 0<32> l23059B0A
l23059B0A:
	word32 a5_1640
	xTaskGetTickCount(out a5_1640)
l230598C8:
	word32 a5_1641
	xTaskGetTickCountFromISR(out a5_1641)
l230598CC:
	word32 a0_255
	word32 a3_258
	word32 s5_1831
	word32 s7_1833
	word32 s8_1834
	word32 s11_1837
	word32 s10_1836
	word32 s9_1835
	word32 s6_1832
	word32 a4_1826
	word32 a5_1827
	word32 s2_1828
	word32 s3_1829
	word32 s4_1830
	word32 a1_1824
	word32 a2_1825
	word32 s1_1823
	word32 ra_261 = bl_printk(ra_220, 0x230BD33C<32>, 0x230BD2B8<32>, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1823, out a0_255, out a1_1824, out a2_1825, out a3_258, out a4_1826, out a5_1827, out s2_1828, out s3_1829, out s4_1830, out s5_1831, out s6_1832, out s7_1833, out s8_1834, out s9_1835, out s10_1836, out s11_1837)
	word32 a0_297 = fdt32_to_cpu(fdt32_to_cpu(fdt32_to_cpu(fdt32_to_cpu(fdt32_to_cpu(a0_255)))))
	word32 a0_303
	word32 a3_308
	word32 s10_1852
	word32 s11_1853
	word32 t4_1854
	word32 s2_1844
	word32 s4_1846
	word32 s5_1847
	word32 s8_1850
	word32 s9_1851
	word32 s7_1849
	word32 s6_1848
	word32 s3_1845
	word32 a1_1839
	word32 a2_1840
	word32 a4_1841
	word32 a5_1842
	word32 a7_1843
	word32 s1_1838
	word32 ra_311 = printf(ra_261, 0x230BD35C<32>, a3_258, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1838, out a0_303, out a1_1839, out a2_1840, out a3_308, out a4_1841, out a5_1842, out a7_1843, out s2_1844, out s3_1845, out s4_1846, out s5_1847, out s6_1848, out s7_1849, out s8_1850, out s9_1851, out s10_1852, out s11_1853, out t4_1854)
	fdt32_to_cpu(a0_303)
	word32 a3_337
	word32 a3_363
	word32 a3_388
	word32 a3_413
	word32 a3_438
	word32 a0_458
	word32 a3_463
	word32 t4_1961
	word32 s11_1960
	word32 s10_1959
	word32 s9_1958
	word32 s8_1957
	word32 s7_1956
	word32 s6_1955
	word32 s5_1954
	word32 s4_1953
	word32 s3_1952
	word32 s2_1951
	word32 a7_1950
	word32 a5_1949
	word32 a4_1948
	word32 a2_1947
	word32 a1_1946
	word32 s1_1945
	word32 t4_1944
	word32 s11_1943
	word32 s10_1942
	word32 s9_1941
	word32 s8_1940
	word32 s7_1939
	word32 s6_1938
	word32 s5_1937
	word32 s4_1936
	word32 a4_1931
	word32 a5_1932
	word32 a7_1933
	word32 s2_1934
	word32 s3_1935
	word32 s9_1923
	word32 s11_1925
	word32 t4_1926
	word32 a1_1929
	word32 a2_1930
	word32 a0_1928
	word32 s1_1927
	word32 s10_1924
	word32 s4_1918
	word32 s5_1919
	word32 s6_1920
	word32 s7_1921
	word32 s8_1922
	word32 a0_1910
	word32 a2_1912
	word32 a4_1913
	word32 s2_1916
	word32 s3_1917
	word32 a7_1915
	word32 a5_1914
	word32 a1_1911
	word32 s9_1905
	word32 s10_1906
	word32 s11_1907
	word32 t4_1908
	word32 s1_1909
	word32 s7_1903
	word32 s8_1904
	word32 s2_1898
	word32 s3_1899
	word32 s4_1900
	word32 s5_1901
	word32 s6_1902
	word32 t4_1890
	word32 a0_1892
	word32 a1_1893
	word32 a5_1896
	word32 a7_1897
	word32 a4_1895
	word32 a2_1894
	word32 s1_1891
	word32 s7_1885
	word32 s8_1886
	word32 s9_1887
	word32 s10_1888
	word32 s11_1889
	word32 a4_1877
	word32 a7_1879
	word32 s2_1880
	word32 s5_1883
	word32 s6_1884
	word32 s4_1882
	word32 s3_1881
	word32 a5_1878
	word32 t4_1872
	word32 s1_1873
	word32 a0_1874
	word32 a1_1875
	word32 a2_1876
	word32 s4_1864
	word32 s6_1866
	word32 s7_1867
	word32 s10_1870
	word32 s11_1871
	word32 s9_1869
	word32 s8_1868
	word32 s5_1865
	word32 a4_1859
	word32 a5_1860
	word32 a7_1861
	word32 s2_1862
	word32 s3_1863
	word32 a1_1857
	word32 a2_1858
	word32 s1_1855
	word32 a0_1856
	word32 ra_466 = printf(printf(printf(printf(printf(printf(ra_311, 0x230BD368<32>, a3_308, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1855, out a0_1856, out a1_1857, out a2_1858, out a3_337, out a4_1859, out a5_1860, out a7_1861, out s2_1862, out s3_1863, out s4_1864, out s5_1865, out s6_1866, out s7_1867, out s8_1868, out s9_1869, out s10_1870, out s11_1871, out t4_1872), 0x230BD37C<32>, a3_337, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1873, out a0_1874, out a1_1875, out a2_1876, out a3_363, out a4_1877, out a5_1878, out a7_1879, out s2_1880, out s3_1881, out s4_1882, out s5_1883, out s6_1884, out s7_1885, out s8_1886, out s9_1887, out s10_1888, out s11_1889, out t4_1890), 0x230BD39C<32>, a3_363, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1891, out a0_1892, out a1_1893, out a2_1894, out a3_388, out a4_1895, out a5_1896, out a7_1897, out s2_1898, out s3_1899, out s4_1900, out s5_1901, out s6_1902, out s7_1903, out s8_1904, out s9_1905, out s10_1906, out s11_1907, out t4_1908), 0x230BD3B8<32>, a3_388, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1909, out a0_1910, out a1_1911, out a2_1912, out a3_413, out a4_1913, out a5_1914, out a7_1915, out s2_1916, out s3_1917, out s4_1918, out s5_1919, out s6_1920, out s7_1921, out s8_1922, out s9_1923, out s10_1924, out s11_1925, out t4_1926), 0x230BD3D4<32>, a3_413, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1927, out a0_1928, out a1_1929, out a2_1930, out a3_438, out a4_1931, out a5_1932, out a7_1933, out s2_1934, out s3_1935, out s4_1936, out s5_1937, out s6_1938, out s7_1939, out s8_1940, out s9_1941, out s10_1942, out s11_1943, out t4_1944), 0x230BD3F0<32>, a3_438, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1945, out a0_458, out a1_1946, out a2_1947, out a3_463, out a4_1948, out a5_1949, out a7_1950, out s2_1951, out s3_1952, out s4_1953, out s5_1954, out s6_1955, out s7_1956, out s8_1957, out s9_1958, out s10_1959, out s11_1960, out t4_1961)
	word32 s0_1100 = Mem300[a0_458 + 24<i32>:word32]
	fdt32_to_cpu(a0_458)
	word32 a0_487
	word32 s4_501
	word32 t4_1977
	word32 s11_1976
	word32 s10_1975
	word32 s9_1974
	word32 s7_1972
	word32 s8_1973
	word32 s5_1970
	word32 s6_1971
	word32 s2_1968
	word32 s3_1969
	word32 a5_1966
	word32 a7_1967
	word32 a2_1964
	word32 a4_1965
	word32 s1_1962
	word32 a1_1963
	word32 a3_492
	word32 ra_495 = printf(ra_466, 0x230BD404<32>, a3_463, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1962, out a0_487, out a1_1963, out a2_1964, out a3_492, out a4_1965, out a5_1966, out a7_1967, out s2_1968, out s3_1969, out s4_501, out s5_1970, out s6_1971, out s7_1972, out s8_1973, out s9_1974, out s10_1975, out s11_1976, out t4_1977)
	branch s4_501 <=u 1<32> l230599E4
l2305999C:
	s0_1100 = Mem300[a0_487 + 28<i32>:word32]
	fdt32_to_cpu(a0_487)
	word32 a0_517
	word32 s4_531
	word32 s3_1664
	word32 s9_1669
	word32 s10_1670
	word32 s11_1671
	word32 t4_1672
	word32 s5_1665
	word32 s8_1668
	word32 s7_1667
	word32 s6_1666
	word32 a4_1660
	word32 a5_1661
	word32 a7_1662
	word32 s2_1663
	word32 a2_1659
	word32 a1_1658
	word32 s1_1657
	ra_495 = printf(ra_495, 0x230BD420<32>, a3_492, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1657, out a0_517, out a1_1658, out a2_1659, out a3_492, out a4_1660, out a5_1661, out a7_1662, out s2_1663, out s3_1664, out s4_531, out s5_1665, out s6_1666, out s7_1667, out s8_1668, out s9_1669, out s10_1670, out s11_1671, out t4_1672)
	branch s4_531 == 2<32> l230599E4
l230599B6:
	s0_1100 = Mem300[a0_517 + 32<i32>:word32]
	fdt32_to_cpu(a0_517)
	word32 a0_547
	word32 s4_561
	word32 s9_1685
	word32 a4_1676
	word32 a5_1677
	word32 s10_1686
	word32 t4_1688
	word32 s11_1687
	word32 s5_1681
	word32 s6_1682
	word32 s7_1683
	word32 s8_1684
	word32 a7_1678
	word32 s3_1680
	word32 s2_1679
	word32 s1_1673
	word32 a1_1674
	word32 a2_1675
	ra_495 = printf(ra_495, 0x230BD43C<32>, a3_492, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1673, out a0_547, out a1_1674, out a2_1675, out a3_492, out a4_1676, out a5_1677, out a7_1678, out s2_1679, out s3_1680, out s4_561, out s5_1681, out s6_1682, out s7_1683, out s8_1684, out s9_1685, out s10_1686, out s11_1687, out t4_1688)
	branch s4_561 <=u 0x10<32> l230599E4
l230599D0:
	s0_1100 = Mem300[a0_547 + 36<i32>:word32]
	fdt32_to_cpu(a0_547)
	word32 s2_1696
	word32 s6_1700
	word32 s7_1701
	word32 s8_1702
	word32 s9_1703
	word32 s10_1704
	word32 s11_1705
	word32 t4_1706
	word32 s3_1697
	word32 s5_1699
	word32 s4_1698
	word32 s1_1689
	word32 a0_1690
	word32 a1_1691
	word32 a2_1692
	word32 a4_1693
	word32 a5_1694
	word32 a7_1695
	ra_495 = printf(ra_495, 0x230BD458<32>, a3_492, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1689, out a0_1690, out a1_1691, out a2_1692, out a3_492, out a4_1693, out a5_1694, out a7_1695, out s2_1696, out s3_1697, out s4_1698, out s5_1699, out s6_1700, out s7_1701, out s8_1702, out s9_1703, out s10_1704, out s11_1705, out t4_1706)
l230599E4:
	word32 s10_1654
	word32 s11_1655
	word32 a4_1644
	word32 a3_1643
	word32 s3_1647
	word32 a7_1646
	word32 a5_1645
	word32 s6_1650
	word32 t4_1656
	word32 s7_1651
	word32 s8_1652
	word32 s9_1653
	word32 s1_1642
	word32 s4_1648
	word32 s5_1649
	word32 a0_1062
	word32 a1_1065
	word32 a2_1066
	word32 s2_1011
	word32 ra_1014 = printf(ra_495, 0x230C6900<32>, a3_492, a0_297, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1642, out a0_1062, out a1_1065, out a2_1066, out a3_1643, out a4_1644, out a5_1645, out a7_1646, out s2_1011, out s3_1647, out s4_1648, out s5_1649, out s6_1650, out s7_1651, out s8_1652, out s9_1653, out s10_1654, out s11_1655, out t4_1656)
	word32 s3_1059 = 0x230BD000<32>
l230599F6:
	word32 s1_634 = Mem631[a1_1065 + 4<i32>:word32]
	word32 a3_1758
	word32 a1_637
	fdt64_to_cpu(a0_1062, a1_1065, out a1_637, out a3_1758)
	word32 a1_647
	word32 a3_1015
	branch (a2_1066 | fdt64_to_cpu(Mem643[s1_634 + 8<32>:int32], Mem643[s1_634 + 0xC<32>:int32], out a1_647, out a3_1015) | (a1_647 | a3_1015)) == 0<32> l23059C94
l23059C94:
	word32 a5_661 = 0xFFFFFFFC<32> - s0_1100
	word32 s7_1003 = 0x230BD280<32>
l23059B76:
	word32 a0_676 = fdt32_to_cpu(Mem673[s2_1011:int32])
	branch a0_676 != 9<32> l23059B10
l23059B10:
	branch a0_676 >u 9<32> l23059B2A
l23059B1C:
	branch s7_1003 != 0<32> l23059B2A
l23059B28:
l23059B2A:
	word32 s1_1009
	word32 a3_704
	word32 s1_708
	word32 s11_710
	word32 s2_711
	word32 s4_713
	word32 s6_715
	word32 s8_717
	word32 s10_1800
	word32 t4_1801
	word32 a2_1792
	word32 a5_1794
	word32 a7_1795
	word32 s7_1798
	word32 s9_1799
	word32 s5_1797
	word32 s3_1796
	word32 a4_1793
	word32 a0_1790
	word32 a1_1791
	word32 ra_707 = printf(ra_1014, 0x230BD490<32>, s7_1003, a5_661, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_708, out a0_1790, out a1_1791, out a2_1792, out a3_704, out a4_1793, out a5_1794, out a7_1795, out s2_711, out s3_1796, out s4_713, out s5_1797, out s6_715, out s7_1798, out s8_717, out s9_1799, out s10_1800, out s11_710, out t4_1801)
	branch s8_717 != 1<32> l23059B8C
l23059B8C:
	word32 a0_930
	branch s8_717 != 2<32> l23059BAA
l23059BAA:
	branch s8_717 != 4<32> l23059BC4
l23059BC4:
	branch s8_717 == 3<32> l23059C12
l23059C12:
	word32 a0_729 = fdt32_to_cpu(Mem673[s2_711 + 4<i32>:int32])
	word32 a3_741 = s0_1100 + (s11_710 + fdt32_to_cpu(Mem673[s2_711 + 8<i32>:int32]))
	branch s4_713 >u 0xF<32> l23059C42
l23059C36:
	branch a0_729 <= 7<32> l23059C42
l23059C3C:
l23059C42:
	word32 a3_757
	word32 s1_2012
	word32 a3_783
	word32 s2_817
	word32 s8_823
	word32 s9_824
	word32 a3_832
	word32 a1_2014
	word32 a0_2013
	word32 a4_2016
	word32 a2_2015
	word32 a5_2017
	word32 a7_2018
	word32 s2_2019
	word32 s3_2020
	word32 s4_2021
	word32 s5_2022
	word32 s6_2023
	word32 s7_2024
	word32 s8_2025
	word32 s9_2026
	word32 s10_2027
	word32 s11_2028
	word32 t4_2029
	word32 s1_2030
	word32 a0_2031
	word32 a1_2032
	word32 a2_2033
	word32 a4_2034
	word32 a5_2035
	word32 a7_2036
	word32 s2_2037
	word32 s3_2038
	word32 s4_2039
	word32 s5_2040
	word32 s6_2041
	word32 s7_2042
	word32 s8_2043
	word32 s9_2044
	word32 s10_2045
	word32 s11_2046
	word32 t4_2047
	word32 s1_2048
	word32 a0_2049
	word32 a1_2050
	word32 a2_2051
	word32 a3_2052
	word32 a4_2053
	word32 a5_2054
	word32 a7_2055
	word32 s3_2056
	word32 s4_2057
	word32 s5_2058
	word32 s6_2059
	word32 s7_2060
	word32 s10_2061
	word32 s11_2062
	word32 t4_2063
	word32 a0_2064
	word32 a1_2065
	word32 a2_2066
	word32 a4_2067
	word32 a5_2068
	word32 a7_2069
	word32 s2_2070
	word32 s3_2071
	word32 s4_2072
	word32 s5_2073
	word32 s6_2074
	word32 s8_2075
	word32 s9_2076
	word32 s10_2077
	word32 s11_2078
	word32 t4_2079
	ra_1014 = printf(utilfdt_print_data(printf(printf(printf(ra_707, 0x230BD504<32>, a3_741, a5_661, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_2012, out a0_2013, out a1_2014, out a2_2015, out a3_757, out a4_2016, out a5_2017, out a7_2018, out s2_2019, out s3_2020, out s4_2021, out s5_2022, out s6_2023, out s7_2024, out s8_2025, out s9_2026, out s10_2027, out s11_2028, out t4_2029), 0x230BD51C<32>, a3_757, a5_661, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_2030, out a0_2031, out a1_2032, out a2_2033, out a3_783, out a4_2034, out a5_2035, out a7_2036, out s2_2037, out s3_2038, out s4_2039, out s5_2040, out s6_2041, out s7_2042, out s8_2043, out s9_2044, out s10_2045, out s11_2046, out t4_2047), 0x230BD530<32>, a3_783, a5_661, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_2048, out a0_2049, out a1_2050, out a2_2051, out a3_2052, out a4_2053, out a5_2054, out a7_2055, out s2_817, out s3_2056, out s4_2057, out s5_2058, out s6_2059, out s7_2060, out s8_823, out s9_824, out s10_2061, out s11_2062, out t4_2063), s8_823, s9_824, s2_817, a5_661, s2, dwLoc10, dwLoc0C, dwArg10, dwArg14, dwArg18, s9, s7, s1, dwArg5C, out s0_1100, out a3_832), 0x230BD364<32>, a3_832, a5_661, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1009, out a0_2064, out a1_2065, out a2_2066, out a3_1015, out a4_2067, out a5_2068, out a7_2069, out s2_2070, out s3_2071, out s4_2072, out s5_2073, out s6_2074, out s7_1003, out s8_2075, out s9_2076, out s10_2077, out s11_2078, out t4_2079)
l23059BCA:
	branch Mem673[0x563<32>:int32] == 0<32> l23059C0C
l23059C0C:
	word32 a5_1994
	xTaskGetTickCount(out a5_1994)
l23059BD2:
	word32 a5_1995
	xTaskGetTickCountFromISR(out a5_1995)
l23059BD6:
	word32 s1_1996
	word32 a0_1997
	word32 a1_1998
	word32 a2_1999
	word32 a4_2000
	word32 a5_2001
	word32 s2_2002
	word32 s3_2003
	word32 s4_2004
	word32 s6_2006
	word32 s5_2005
	word32 s8_2008
	word32 s7_2007
	word32 s10_2010
	word32 s9_2009
	word32 s11_2011
	ra_1014 = bl_printk(ra_707, 0x230BD4D4<32>, s6_715 + 696<i32>, a5_661, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1996, out a0_1997, out a1_1998, out a2_1999, out a3_1015, out a4_2000, out a5_2001, out s2_2002, out s3_2003, out s4_2004, out s5_2005, out s6_2006, out s7_2007, out s8_2008, out s9_2009, out s10_2010, out s11_2011)
l23059BB4:
	a0_930 = 0x230BD4C4<32>
l23059B92:
	a0_930 = 0x230BD4BC<32>
l23059BA4:
	word32 s4_1986
	word32 s5_1987
	word32 s6_1988
	word32 s8_1989
	word32 s9_1990
	word32 s11_1992
	word32 s10_1991
	word32 t4_1993
	word32 s3_1985
	word32 s2_1984
	word32 a7_1983
	word32 a5_1982
	word32 a4_1981
	word32 a2_1980
	word32 a1_1979
	word32 a0_1978
	ra_1014 = printf(ra_707, a0_930, a3_704, a5_661, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1009, out a0_1978, out a1_1979, out a2_1980, out a3_1015, out a4_1981, out a5_1982, out a7_1983, out s2_1984, out s3_1985, out s4_1986, out s5_1987, out s6_1988, out s7_1003, out s8_1989, out s9_1990, out s10_1991, out s11_1992, out t4_1993)
l23059B42:
	word32 a4_1805
	word32 a5_1806
	word32 a1_1802
	word32 a2_1803
	word32 a3_1804
	strlen(s1_708, out a1_1802, out a2_1803, out a3_1804, out a4_1805, out a5_1806)
	branch CONVERT(Mem673[s2_711 + 4<i32>:byte], byte, word32) != 0<32> l23059B5A
l23059B58:
l23059B5A:
	word32 s8_1004
	word32 s6_1818
	word32 s10_1820
	word32 s11_1821
	word32 t4_1822
	word32 s9_1819
	word32 a7_1813
	word32 s2_1814
	word32 s3_1815
	word32 s4_1816
	word32 s5_1817
	word32 s1_1807
	word32 a0_1808
	word32 a4_1811
	word32 a5_1812
	word32 a2_1810
	word32 a1_1809
	ra_1014 = printf(ra_707, 0x230BD4B0<32>, s1_708, a5_661, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1807, out a0_1808, out a1_1809, out a2_1810, out a3_1015, out a4_1811, out a5_1812, out a7_1813, out s2_1814, out s3_1815, out s4_1816, out s5_1817, out s6_1818, out s7_1003, out s8_1004, out s9_1819, out s10_1820, out s11_1821, out t4_1822)
	s1_1009 = s8_1004
l23059B74:
	s2_1011 = s1_1009
l23059B8A:
l23059BFC:
	word32 s1_1771
	word32 a1_1773
	word32 a3_1775
	word32 a5_1777
	word32 s10_1787
	word32 s11_1788
	word32 t4_1789
	word32 s2_1779
	word32 s4_1781
	word32 s5_1782
	word32 s8_1785
	word32 s9_1786
	word32 s7_1784
	word32 s6_1783
	word32 s3_1780
	word32 a7_1778
	word32 a4_1776
	word32 a2_1774
	word32 a0_1772
	printf(ra_1014, 0x230BD538<32>, a3_1015, a5_661, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1771, out a0_1772, out a1_1773, out a2_1774, out a3_1775, out a4_1776, out a5_1777, out a7_1778, out s2_1779, out s3_1780, out s4_1781, out s5_1782, out s6_1783, out s7_1784, out s8_1785, out s9_1786, out s10_1787, out s11_1788, out t4_1789)
l23059AEC:
	return
tc_blfdtdump_exit:
l23059A26:
	word32 a3_1745
	word32 s6_1751
	word32 s7_1752
	word32 s8_1753
	word32 s9_1754
	word32 s10_1755
	word32 s11_1756
	word32 t4_1757
	word32 a4_1746
	word32 s4_1749
	word32 s5_1750
	word32 a7_1748
	word32 a5_1747
	word32 s1_1744
	ra_1014 = printf(ra_1014, s3_1059 + 1140<i32>, a3_1015, a1_637, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1744, out a0_1062, out a1_1065, out a2_1066, out a3_1745, out a4_1746, out a5_1747, out a7_1748, out s2_1011, out s3_1059, out s4_1749, out s5_1750, out s6_1751, out s7_1752, out s8_1753, out s9_1754, out s10_1755, out s11_1756, out t4_1757)


word32 tc_fdt_wifi_module(word32 ra, word32 s1, word32 s2, word32 s4, word32 s6, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_fdt_wifi
// MayUse:  ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] s6:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s11 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 sp
tc_fdt_wifi_module_entry:
l23059CBA:
	word32 a3_1573
	word32 a0_1595
	word32 a0_1020
	word32 a3_1018
	word32 a0_34
	word32 s0_43
	word32 s1_44
	word32 s2_45
	word32 s6_49
	word32 s3_2963
	word32 a5_2962
	word32 s4_2964
	word32 s5_2965
	word32 ra_1034 = fdt_subnode_offset(ra, s1, 0x230BD54C<32>, 0x230BE868<32>, s2, s6, dwLoc0138, dwLoc0108, dwLoc58, out s0_43, out s1_44, out a0_34, out a5_2962, out s2_45, out s3_2963, out s4_2964, out s5_2965, out s6_49)
	branch a0_34 > 0<32> l23059D40
l23059D40:
	word32 a0_59
	word32 s3_2967
	word32 a5_2966
	word32 s5_2969
	word32 s4_2968
	word32 s0_177
	word32 s2_163
	word32 s1_160
	word32 s6_167
	word32 ra_159 = fdt_subnode_offset(ra_1034, s1_44, s0_43 + 1356<i32>, 0x230BE8A0<32>, s2_45, s6_49, dwLoc0138, dwLoc0108, dwLoc58, out s0_177, out s1_160, out a0_59, out a5_2966, out s2_163, out s3_2967, out s4_2968, out s5_2969, out s6_167)
	branch a0_59 <= 0<32> l23059DCA
l23059D5A:
	word32 a0_84
	word32 s1_2976
	word32 a1_2977
	word32 s3_2982
	word32 s4_2983
	word32 s2_2981
	word32 a5_2980
	word32 a3_2978
	word32 a4_2979
	word32 s8_2986
	word32 s6_2985
	word32 s5_2984
	ra_1034 = fdt_getprop(ra_159, s0_177 + 1356<i32>, 0x230BE8A8<32>, dwLoc0138, dwLoc0118, dwLocFC, dwLoc68, dwLoc38, out s0_177, out s1_2976, out a0_84, out a1_2977, out a3_2978, out a4_2979, out a5_2980, out s2_2981, out s3_2982, out s4_2983, out s5_2984, out s6_2985, out s8_2986)
	word32 a5_107 = Mem33[0x4200F560<32>:int32]
	branch a0_84 == 0<32> l2305A148
l2305A148:
	branch a5_107 == 0<32> l2305A16A
l2305A16A:
	word32 a5_3003
	xTaskGetTickCount(out a5_3003)
l2305A14A:
	word32 a5_3004
	xTaskGetTickCountFromISR(out a5_3004)
l2305A14E:
	a3_1018 = 0x230BE870<32>
	a0_1020 = 0x230BE8E8<32>
l23059D7E:
	branch a5_107 == 0<32> l2305A142
l2305A142:
	word32 a5_2987
	xTaskGetTickCount(out a5_2987)
l23059D82:
	word32 a5_2988
	xTaskGetTickCountFromISR(out a5_2988)
l23059D86:
	word32 a5_2994
	word32 s5_2997
	word32 s8_2999
	word32 a0_2989
	word32 a2_2991
	word32 a1_2990
	word32 s4_2996
	word32 s7_2998
	word32 s3_2995
	word32 a4_2993
	word32 s10_3001
	word32 a3_2992
	word32 s9_3000
	word32 s11_3002
	ra_159 = bl_printk(ra_1034, 0x230BE8B8<32>, 0x230BE870<32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_160, out a0_2989, out a1_2990, out a2_2991, out a3_2992, out a4_2993, out a5_2994, out s2_163, out s3_2995, out s4_2996, out s5_2997, out s6_167, out s7_2998, out s8_2999, out s9_3000, out s10_3001, out s11_3002)
l23059DCA:
	word32 a0_186
	word32 a5_2972
	word32 s5_2975
	word32 s4_2974
	word32 s3_2973
	word32 s0_195
	word32 s2_197
	word32 s1_196
	word32 s6_201
	word32 ra_194 = fdt_subnode_offset(ra_159, s1_160, s0_177 + 1356<i32>, 0x230BE910<32>, s2_163, s6_167, dwLoc0138, dwLoc0108, dwLoc58, out s0_195, out s1_196, out a0_186, out a5_2972, out s2_197, out s3_2973, out s4_2974, out s5_2975, out s6_201)
	branch a0_186 <= 0<32> l23059EAA
l23059DE2:
	word32 a0_212
	word32 a4_216
	word32 s4_3035
	word32 s1_3029
	word32 a5_3032
	word32 a1_3030
	word32 s2_3033
	word32 a3_3031
	word32 s0_3028
	word32 s3_3034
	word32 s8_3038
	word32 s6_3037
	word32 s5_3036
	ra_1034 = fdt_getprop(ra_194, s0_195 + 1356<i32>, 0x230BE914<32>, dwLoc0138, dwLoc0118, dwLocFC, dwLoc68, dwLoc38, out s0_3028, out s1_3029, out a0_212, out a1_3030, out a3_3031, out a4_216, out a5_3032, out s2_3033, out s3_3034, out s4_3035, out s5_3036, out s6_3037, out s8_3038)
	branch a4_216 != 6<32> l2305A176
l2305A176:
	branch Mem33[0x4200F560<32>:int32] == 0<32> l2305A19C
l2305A19C:
	word32 a5_3114
	xTaskGetTickCount(out a5_3114)
l2305A17C:
	word32 a5_3115
	xTaskGetTickCountFromISR(out a5_3115)
l2305A180:
	a3_1018 = 0x230BE870<32>
	a0_1020 = 0x230BE950<32>
l23059E08:
	word32 a1_3039
	word32 a2_3040
	word32 a3_3041
	word32 a4_3042
	word32 a6_3044
	word32 a5_3043
	word32 a7_3045
	memcpy(fp + -304<i32>, a0_212, 6<32>, out a1_3039, out a2_3040, out a3_3041, out a4_3042, out a5_3043, out a6_3044, out a7_3045)
	branch Mem33[0x4200F560<32>:int32] == 0<32> l2305A170
l2305A170:
	word32 a5_3046
	xTaskGetTickCount(out a5_3046)
l23059E18:
	word32 a5_3047
	xTaskGetTickCountFromISR(out a5_3047)
l23059E1C:
	word32 s5_298
	word32 s6_299
	word32 s0_319
	word32 a0_340
	word32 a4_344
	word32 s4_353
	word32 s9_3107
	word32 a3_3109
	word32 s3_3111
	word32 s8_3113
	word32 s5_3112
	word32 a5_3110
	word32 a1_3108
	word32 s8_3106
	word32 s5_3103
	word32 s6_3104
	word32 s7_3105
	word32 a3_3097
	word32 a5_3099
	word32 s2_3100
	word32 s3_3101
	word32 s4_3102
	word32 a4_3098
	word32 s3_3089
	word32 s4_3090
	word32 s7_3091
	word32 s8_3092
	word32 s10_3094
	word32 s11_3095
	word32 s1_3096
	word32 s9_3093
	word32 a1_3083
	word32 a2_3084
	word32 a3_3085
	word32 a4_3086
	word32 s2_3088
	word32 a5_3087
	word32 s1_3081
	word32 a0_3082
	ra_194 = fdt_getprop(log_buf_out(bl_printk(ra_1034, 0x230BE924<32>, 0x230BE870<32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_3081, out a0_3082, out a1_3083, out a2_3084, out a3_3085, out a4_3086, out a5_3087, out s2_3088, out s3_3089, out s4_3090, out s5_298, out s6_299, out s7_3091, out s8_3092, out s9_3093, out s10_3094, out s11_3095), fp + -304<i32>, 6<32>, 0<32>, s5_298, s6_299, dwLoc012C, dwLoc0120, dwLoc011C, dwLoc0110, dwLocE8, dwLocD4, dwLocC4, dwLoc34, out s0_319, out s1_3096, out a3_3097, out a4_3098, out a5_3099, out s2_3100, out s3_3101, out s4_3102, out s5_3103, out s6_3104, out s7_3105, out s8_3106, out s9_3107), s0_319 + 1356<i32>, 0x230BE944<32>, dwLoc0138, dwLoc0118, dwLocFC, dwLoc68, dwLoc38, out s0_195, out s1_196, out a0_340, out a1_3108, out a3_3109, out a4_344, out a5_3110, out s2_197, out s3_3111, out s4_353, out s5_3112, out s6_201, out s8_3113)
	branch a4_344 != 6<32> l23059EAA
l23059E6A:
	word32 a6_3053
	word32 a5_3052
	word32 a4_3051
	word32 a3_3050
	word32 a2_3049
	word32 a1_3048
	word32 a7_3054
	memcpy(fp + -304<i32>, a0_340, 6<32>, out a1_3048, out a2_3049, out a3_3050, out a4_3051, out a5_3052, out a6_3053, out a7_3054)
	branch Mem33[s4_353 + 1376<i32>:int32] == 0<32> l2305A1A2
l2305A1A2:
	word32 a5_3055
	xTaskGetTickCount(out a5_3055)
l23059E7A:
	word32 a5_3056
	xTaskGetTickCountFromISR(out a5_3056)
l23059E7E:
	word32 s5_410
	word32 s6_411
	word32 a0_3058
	word32 a1_3059
	word32 a2_3060
	word32 a4_3062
	word32 s4_3066
	word32 s8_3068
	word32 s11_3071
	word32 s9_3069
	word32 s10_3070
	word32 a4_3073
	word32 s9_3080
	word32 s7_3078
	word32 s8_3079
	word32 s5_3077
	word32 s4_3076
	word32 s3_3075
	word32 a5_3074
	word32 a3_3072
	word32 s1_3057
	word32 a3_3061
	word32 a5_3063
	word32 s3_3065
	word32 s2_3064
	word32 s7_3067
	ra_194 = log_buf_out(bl_printk(ra_194, 0x230BE978<32>, s1_196 + -1936<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_3057, out a0_3058, out a1_3059, out a2_3060, out a3_3061, out a4_3062, out a5_3063, out s2_3064, out s3_3065, out s4_3066, out s5_410, out s6_411, out s7_3067, out s8_3068, out s9_3069, out s10_3070, out s11_3071), fp + -304<i32>, 6<32>, 0<32>, s5_410, s6_411, dwLoc012C, dwLoc0120, dwLoc011C, dwLoc0110, dwLocE8, dwLocD4, dwLocC4, dwLoc34, out s0_195, out s1_196, out a3_3072, out a4_3073, out a5_3074, out s2_197, out s3_3075, out s4_3076, out s5_3077, out s6_201, out s7_3078, out s8_3079, out s9_3080)
l23059EAA:
	word32 a0_459
	word32 s0_468
	word32 s1_3021
	word32 s2_3023
	word32 a5_3022
	word32 s4_3025
	word32 s3_3024
	word32 s5_3026
	word32 s6_3027
	ra_1034 = fdt_subnode_offset(ra_194, s1_196, s0_195 + 1356<i32>, 0x230BE998<32>, s2_197, s6_201, dwLoc0138, dwLoc0108, dwLoc58, out s0_468, out s1_3021, out a0_459, out a5_3022, out s2_3023, out s3_3024, out s4_3025, out s5_3026, out s6_3027)
	branch a0_459 <= 0<32> l2305A27C
l2305A27C:
	branch Mem33[0x4200F560<32>:int32] == 0<32> l2305A290
l2305A290:
	word32 a5_3124
	xTaskGetTickCount(out a5_3124)
l2305A286:
	word32 a5_3125
	xTaskGetTickCountFromISR(out a5_3125)
l2305A28A:
l23059EC2:
	word32 a0_491
	word32 s8_3121
	word32 s5_3119
	word32 s6_3120
	word32 s4_3118
	word32 s1_3116
	word32 s3_3117
	word32 s0_500
	word32 s2_1780
	ra_1034 = fdt_stringlist_count(ra_1034, s0_468 + 1356<i32>, 0x230BE99C<32>, 0x230BF000<32>, dwLoc0138, dwLoc011C, dwLoc88, dwLoc58, out s0_500, out s1_3116, out a0_491, out s2_1780, out s3_3117, out s4_3118, out s5_3119, out s6_3120, out s8_3121)
	branch a0_491 <= 0<32> l2305A1AE
l2305A1AE:
	branch Mem33[0x4200F560<32>:int32] == 0<32> l2305A1DC
l2305A1DC:
	word32 a5_3493
	xTaskGetTickCount(out a5_3493)
l2305A1B8:
	word32 a5_3494
	xTaskGetTickCountFromISR(out a5_3494)
l2305A1BC:
l2305A1C0:
	a3_1018 = 0x230BE870<32>
	a0_1020 = 0x230BE9DC<32>
l23059EDA:
	word32 s7_1781 = 0x230BF000<32>
	word32 s9_1782 = 0x230BF000<32>
l23059EEC:
	word32 a5_551
	word32 s6_561
	word32 a1_3127
	word32 a2_3128
	word32 a3_3129
	word32 a4_3130
	word32 s5_3132
	word32 s8_3133
	word32 s3_3131
	word32 a0_3126
	word32 s1_556
	word32 s4_559
	ra_1034 = fdt_stringlist_get(ra_1034, s0_500 + 1356<i32>, s2_1780 + -1636<i32>, dwLoc012C, dwLoc98, dwLoc68, s4, out s0_500, out s1_556, out a0_3126, out a1_3127, out a2_3128, out a3_3129, out a4_3130, out a5_551, out s2_1780, out s3_3131, out s4_559, out s5_3132, out s6_561, out s8_3133)
	branch a5_551 <= 0<32> l23059F2E
l23059F06:
	branch Mem33[s6_561 + 1376<i32>:int32] == 0<32> l2305A1A8
l2305A1A8:
	word32 a5_3122
	xTaskGetTickCount(out a5_3122)
l23059F0E:
	word32 a5_3123
	xTaskGetTickCountFromISR(out a5_3123)
l23059F12:
	word32 a3_3145
	word32 a5_3147
	word32 s5_3149
	word32 s11_3153
	word32 s10_3152
	word32 s8_3151
	word32 s6_3150
	word32 s3_3148
	word32 a4_3146
	word32 a2_3144
	word32 a0_3142
	word32 a1_3143
	ra_1034 = bl_printk(ra_1034, s9_1782 + -1628<i32>, s7_1781 + -1936<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_556, out a0_3142, out a1_3143, out a2_3144, out a3_3145, out a4_3146, out a5_3147, out s2_1780, out s3_3148, out s4_559, out s5_3149, out s6_3150, out s7_1781, out s8_3151, out s9_1782, out s10_3152, out s11_3153)
l23059F2E:
	branch s4_559 != s1_556 + 1<32> l23059EEC
l23059F34:
	word32 a0_627
	word32 s3_3135
	word32 s5_3137
	word32 s6_3138
	word32 s8_3139
	word32 s4_3136
	word32 s1_3134
	word32 s0_636
	word32 s2_1783
	ra_1034 = fdt_stringlist_count(ra_1034, s0_500 + 1356<i32>, 0x230BE9FC<32>, 0x230BF000<32>, dwLoc0138, dwLoc011C, dwLoc88, dwLoc58, out s0_636, out s1_3134, out a0_627, out s2_1783, out s3_3135, out s4_3136, out s5_3137, out s6_3138, out s8_3139)
	branch a0_627 <= 0<32> l2305A1E8
l2305A1E8:
	branch Mem33[0x4200F560<32>:int32] == 0<32> l2305A216
l2305A216:
	word32 a5_3491
	xTaskGetTickCount(out a5_3491)
l2305A1F2:
	word32 a5_3492
	xTaskGetTickCountFromISR(out a5_3492)
l2305A1F6:
	a3_1018 = 0x230BE870<32>
	a0_1020 = 0x230BEA38<32>
l23059F4C:
	word32 s7_1784 = 0x230BF000<32>
	word32 s9_1785 = 0x230BF000<32>
l23059F5E:
	word32 a5_685
	word32 s6_695
	word32 s3_3159
	word32 s5_3160
	word32 s8_3161
	word32 a3_3157
	word32 a4_3158
	word32 a2_3156
	word32 a0_3154
	word32 a1_3155
	word32 s1_690
	word32 s4_693
	ra_1034 = fdt_stringlist_get(ra_1034, s0_636 + 1356<i32>, s2_1783 + -1540<i32>, dwLoc012C, dwLoc98, dwLoc68, s4, out s0_636, out s1_690, out a0_3154, out a1_3155, out a2_3156, out a3_3157, out a4_3158, out a5_685, out s2_1783, out s3_3159, out s4_693, out s5_3160, out s6_695, out s8_3161)
	branch a5_685 <= 0<32> l23059FA0
l23059F78:
	branch Mem33[s6_695 + 1376<i32>:int32] == 0<32> l2305A1E2
l2305A1E2:
	word32 a5_3140
	xTaskGetTickCount(out a5_3140)
l23059F80:
	word32 a5_3141
	xTaskGetTickCountFromISR(out a5_3141)
l23059F84:
	word32 s3_3183
	word32 s6_3185
	word32 s10_3187
	word32 s11_3188
	word32 s8_3186
	word32 s5_3184
	word32 a5_3182
	word32 a2_3179
	word32 a3_3180
	word32 a4_3181
	word32 a0_3177
	word32 a1_3178
	ra_1034 = bl_printk(ra_1034, s9_1785 + -1536<i32>, s7_1784 + -1936<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_690, out a0_3177, out a1_3178, out a2_3179, out a3_3180, out a4_3181, out a5_3182, out s2_1783, out s3_3183, out s4_693, out s5_3184, out s6_3185, out s7_1784, out s8_3186, out s9_1785, out s10_3187, out s11_3188)
l23059FA0:
	branch s4_693 != s1_690 + 1<32> l23059F5E
l23059FA6:
	word32 a0_762
	word32 s0_771
	word32 a4_3165
	word32 a5_3166
	word32 s2_3167
	word32 s3_3168
	word32 s5_3170
	word32 s6_3171
	word32 s8_3172
	word32 s4_3169
	word32 s1_3162
	word32 a3_3164
	word32 a1_3163
	ra_1034 = fdt_getprop(ra_1034, s0_636 + 1356<i32>, 0x230BEA58<32>, dwLoc0138, dwLoc0118, dwLocFC, dwLoc68, dwLoc38, out s0_771, out s1_3162, out a0_762, out a1_3163, out a3_3164, out a4_3165, out a5_3166, out s2_3167, out s3_3168, out s4_3169, out s5_3170, out s6_3171, out s8_3172)
	word32 a5_785 = Mem33[0x4200F560<32>:int32]
	branch a0_762 == 0<32> l2305A222
l2305A222:
	branch a5_785 == 0<32> l2305A244
l2305A244:
	word32 a5_3489
	xTaskGetTickCount(out a5_3489)
l2305A224:
	word32 a5_3490
	xTaskGetTickCountFromISR(out a5_3490)
l2305A228:
	a3_1018 = 0x230BE870<32>
	a0_1020 = 0x230BEAA0<32>
l23059FCC:
	branch a5_785 == 0<32> l2305A21C
l2305A21C:
	word32 a5_3173
	xTaskGetTickCount(out a5_3173)
l23059FD0:
	word32 a5_3174
	xTaskGetTickCountFromISR(out a5_3174)
l23059FD4:
	word32 s7_1786 = 0x230BF000<32>
	word32 s2_840
	word32 a0_855
	word32 s1_865
	word32 s2_866
	word32 s7_3253
	word32 s9_3255
	word32 s11_3257
	word32 s8_3262
	word32 s6_3261
	word32 s5_3260
	word32 s4_3259
	word32 s3_3258
	word32 s10_3256
	word32 s8_3254
	word32 s6_3252
	word32 s3_3249
	word32 s4_3250
	word32 s5_3251
	word32 a0_3243
	word32 a2_3245
	word32 a3_3246
	word32 a4_3247
	word32 a5_3248
	word32 a1_3244
	word32 s1_3242
	word32 s0_864
	ra_1034 = fdt_stringlist_count(bl_printk(ra_1034, 0x230BEA64<32>, 0x230BE870<32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_3242, out a0_3243, out a1_3244, out a2_3245, out a3_3246, out a4_3247, out a5_3248, out s2_840, out s3_3249, out s4_3250, out s5_3251, out s6_3252, out s7_3253, out s8_3254, out s9_3255, out s10_3256, out s11_3257), s0_771 + 1356<i32>, 0x230BEA8C<32>, s2_840, dwLoc0138, dwLoc011C, dwLoc88, dwLoc58, out s0_864, out s1_865, out a0_855, out s2_866, out s3_3258, out s4_3259, out s5_3260, out s6_3261, out s8_3262)
	branch a0_855 <= 0<32> l2305A250
l2305A250:
	branch Mem33[s2_866 + 1376<i32>:int32] == 0<32> l2305A276
l2305A276:
	word32 a5_3240
	xTaskGetTickCount(out a5_3240)
l2305A256:
	word32 a5_3241
	xTaskGetTickCountFromISR(out a5_3241)
l2305A25A:
	a3_1018 = s1_865 + -1936<i32>
	a0_1020 = 0x230BEB0C<32>
l2305A030:
	word32 s9_1788 = 0x230BF000<32>
l2305A034:
	word32 a5_909
	word32 a3_3203
	word32 a4_3204
	word32 s3_3205
	word32 s4_3206
	word32 s5_3207
	word32 a0_3200
	word32 a2_3202
	word32 a1_3201
	word32 s6_919
	word32 s8_920
	word32 s2_915
	word32 s1_914
	ra_1034 = fdt_stringlist_get(ra_1034, s0_864 + 1356<i32>, s7_1786 + -1396<i32>, dwLoc012C, dwLoc98, dwLoc68, s4, out s0_864, out s1_914, out a0_3200, out a1_3201, out a2_3202, out a3_3203, out a4_3204, out a5_909, out s2_915, out s3_3205, out s4_3206, out s5_3207, out s6_919, out s8_920)
	branch a5_909 <= 0<32> l2305A076
l2305A04E:
	branch Mem33[s2_915 + 1376<i32>:int32] == 0<32> l2305A24A
l2305A24A:
	word32 a5_3175
	xTaskGetTickCount(out a5_3175)
l2305A056:
	word32 a5_3176
	xTaskGetTickCountFromISR(out a5_3176)
l2305A05A:
	word32 s5_3197
	word32 s10_3198
	word32 s11_3199
	word32 s3_3195
	word32 s4_3196
	word32 a5_3194
	word32 a3_3192
	word32 a4_3193
	word32 a2_3191
	word32 a1_3190
	word32 a0_3189
	ra_1034 = bl_printk(ra_1034, s9_1788 + -1336<i32>, s1_914 + -1936<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_914, out a0_3189, out a1_3190, out a2_3191, out a3_3192, out a4_3193, out a5_3194, out s2_915, out s3_3195, out s4_3196, out s5_3197, out s6_919, out s7_1786, out s8_920, out s9_1788, out s10_3198, out s11_3199)
l2305A076:
	word32 s6_972 = s6_919 + 1<32>
	branch s8_920 != s6_972 l2305A034
l2305A07C:
	word32 a0_986
	word32 s0_995
	word32 s1_996
	word32 s2_997
	word32 s5_3211
	word32 s6_3212
	word32 a5_3208
	word32 s3_3209
	word32 s4_3210
	ra_1034 = fdt_subnode_offset(ra_1034, s1_914, s0_864 + 1356<i32>, 0x230BEB38<32>, s2_915, s6_972, dwLoc0138, dwLoc0108, dwLoc58, out s0_995, out s1_996, out a0_986, out a5_3208, out s2_997, out s3_3209, out s4_3210, out s5_3211, out s6_3212)
	branch a0_986 <= 0<32> l2305A504
l2305A504:
	branch Mem33[s2_997 + 1376<i32>:int32] == 0<32> l2305A52C
l2305A52C:
	word32 a5_3487
	xTaskGetTickCount(out a5_3487)
l2305A50A:
	word32 a5_3488
	xTaskGetTickCountFromISR(out a5_3488)
l2305A50E:
	a3_1018 = s1_996 + -1936<i32>
	a0_1020 = 0x230BED20<32>
l2305A094:
	word32 a0_1026
	word32 a4_1030
	word32 s1_1036
	word32 s2_1037
	word32 s8_3221
	word32 s6_3220
	word32 s3_3217
	word32 s4_3218
	word32 s5_3219
	word32 s0_3213
	word32 a1_3214
	word32 a3_3215
	word32 a5_3216
	ra_1034 = fdt_getprop(ra_1034, s0_995 + 1356<i32>, 0x230BEB40<32>, dwLoc0138, dwLoc0118, dwLocFC, dwLoc68, dwLoc38, out s0_3213, out s1_1036, out a0_1026, out a1_3214, out a3_3215, out a4_1030, out a5_3216, out s2_1037, out s3_3217, out s4_3218, out s5_3219, out s6_3220, out s8_3221)
	branch a4_1030 != 0x14<32> l2305A29C
l2305A29C:
	branch Mem33[s2_1037 + 1376<i32>:int32] == 0<32> l2305A2C2
l2305A2C2:
	word32 a5_3373
	xTaskGetTickCount(out a5_3373)
l2305A2A2:
	word32 a5_3374
	xTaskGetTickCountFromISR(out a5_3374)
l2305A2A6:
	a3_1018 = s1_1036 + -1936<i32>
	a0_1020 = 0x230BEB70<32>
l2305A0B2:
	word32 a7_3228
	word32 a6_3227
	word32 a3_3224
	word32 a4_3225
	word32 a5_3226
	word32 a2_3223
	word32 a1_3222
	memcpy(fp + -304<i32>, a0_1026, 0x14<32>, out a1_3222, out a2_3223, out a3_3224, out a4_3225, out a5_3226, out a6_3227, out a7_3228)
	branch Mem33[s2_1037 + 1376<i32>:int32] == 0<32> l2305A296
l2305A296:
	word32 a5_3229
	xTaskGetTickCount(out a5_3229)
l2305A0C2:
	word32 a5_3230
	xTaskGetTickCountFromISR(out a5_3230)
l2305A0C6:
	word32 s5_1110
	word32 s6_1111
	word32 s0_1131
	word32 a0_1152
	word32 a4_1156
	word32 s1_1162
	word32 s2_1163
	word32 a0_3291
	word32 a2_3293
	word32 a4_3295
	word32 s8_3325
	word32 a3_3319
	word32 s3_3321
	word32 s4_3322
	word32 s5_3323
	word32 s6_3324
	word32 a5_3320
	word32 s4_3311
	word32 s5_3312
	word32 s6_3313
	word32 s7_3314
	word32 s9_3316
	word32 s0_3317
	word32 a1_3318
	word32 s8_3315
	word32 s1_3305
	word32 a3_3306
	word32 a4_3307
	word32 a5_3308
	word32 s3_3310
	word32 s2_3309
	word32 s10_3303
	word32 s11_3304
	word32 s9_3302
	word32 s7_3300
	word32 s8_3301
	word32 s4_3299
	word32 s3_3298
	word32 s2_3297
	word32 a5_3296
	word32 a3_3294
	word32 a1_3292
	word32 s1_3290
	word32 ra_1160 = fdt_getprop(log_buf_out(bl_printk(ra_1034, 0x230BEB48<32>, s1_1036 + -1936<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_3290, out a0_3291, out a1_3292, out a2_3293, out a3_3294, out a4_3295, out a5_3296, out s2_3297, out s3_3298, out s4_3299, out s5_1110, out s6_1111, out s7_3300, out s8_3301, out s9_3302, out s10_3303, out s11_3304), fp + -304<i32>, 0x14<32>, 0<32>, s5_1110, s6_1111, dwLoc012C, dwLoc0120, dwLoc011C, dwLoc0110, dwLocE8, dwLocD4, dwLocC4, dwLoc34, out s0_1131, out s1_3305, out a3_3306, out a4_3307, out a5_3308, out s2_3309, out s3_3310, out s4_3311, out s5_3312, out s6_3313, out s7_3314, out s8_3315, out s9_3316), s0_1131 + 1356<i32>, 0x230BEB64<32>, dwLoc0138, dwLoc0118, dwLocFC, dwLoc68, dwLoc38, out s0_3317, out s1_1162, out a0_1152, out a1_3318, out a3_3319, out a4_1156, out a5_3320, out s2_1163, out s3_3321, out s4_3322, out s5_3323, out s6_3324, out s8_3325)
	branch a4_1156 == 256<i32> l2305A2C8
l2305A2C8:
	word32 a4_3234
	word32 a5_3235
	word32 a6_3236
	word32 a7_3237
	word32 a2_3232
	word32 a3_3233
	word32 a1_3231
	memcpy(fp + -304<i32>, a0_1152, 256<i32>, out a1_3231, out a2_3232, out a3_3233, out a4_3234, out a5_3235, out a6_3236, out a7_3237)
	branch Mem33[s2_1163 + 1376<i32>:int32] == 0<32> l2305A350
l2305A350:
	word32 a5_3279
	xTaskGetTickCount(out a5_3279)
l2305A2D8:
	word32 a5_3280
	xTaskGetTickCountFromISR(out a5_3280)
l2305A2DC:
	word32 s5_1222
	word32 s6_1223
	word32 s0_1243
	word32 a0_1264
	word32 a4_1268
	word32 s1_1274
	word32 s2_1275
	word32 a5_3367
	word32 s4_3369
	word32 s6_3371
	word32 s8_3372
	word32 s5_3370
	word32 s3_3368
	word32 a3_3366
	word32 s9_3363
	word32 s0_3364
	word32 a1_3365
	word32 s3_3357
	word32 s5_3359
	word32 s6_3360
	word32 s7_3361
	word32 s8_3362
	word32 s4_3358
	word32 s9_3349
	word32 s10_3350
	word32 s11_3351
	word32 s1_3352
	word32 a4_3354
	word32 a5_3355
	word32 s2_3356
	word32 a3_3353
	word32 a5_3343
	word32 s2_3344
	word32 s3_3345
	word32 s4_3346
	word32 s8_3348
	word32 s7_3347
	word32 a3_3341
	word32 a4_3342
	word32 a2_3340
	word32 a0_3338
	word32 a1_3339
	word32 s1_3337
	ra_1034 = fdt_getprop(log_buf_out(bl_printk(ra_1160, 0x230BEB90<32>, s1_1162 + -1936<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_3337, out a0_3338, out a1_3339, out a2_3340, out a3_3341, out a4_3342, out a5_3343, out s2_3344, out s3_3345, out s4_3346, out s5_1222, out s6_1223, out s7_3347, out s8_3348, out s9_3349, out s10_3350, out s11_3351), fp + -304<i32>, 256<i32>, 0<32>, s5_1222, s6_1223, dwLoc012C, dwLoc0120, dwLoc011C, dwLoc0110, dwLocE8, dwLocD4, dwLocC4, dwLoc34, out s0_1243, out s1_3352, out a3_3353, out a4_3354, out a5_3355, out s2_3356, out s3_3357, out s4_3358, out s5_3359, out s6_3360, out s7_3361, out s8_3362, out s9_3363), s0_1243 + 1356<i32>, 0x230BEBB4<32>, dwLoc0138, dwLoc0118, dwLocFC, dwLoc68, dwLoc38, out s0_3364, out s1_1274, out a0_1264, out a1_3365, out a3_3366, out a4_1268, out a5_3367, out s2_1275, out s3_3368, out s4_3369, out s5_3370, out s6_3371, out s8_3372)
	branch a4_1268 == 60<i32> l2305A35C
l2305A35C:
	word32 a7_3287
	word32 a1_3281
	word32 a3_3283
	word32 a4_3284
	word32 a5_3285
	word32 a6_3286
	word32 a2_3282
	memcpy(fp + -304<i32>, a0_1264, 60<i32>, out a1_3281, out a2_3282, out a3_3283, out a4_3284, out a5_3285, out a6_3286, out a7_3287)
	branch Mem33[s2_1275 + 1376<i32>:int32] == 0<32> l2305A3E4
l2305A3E4:
	word32 a5_3326
	xTaskGetTickCount(out a5_3326)
l2305A36C:
	word32 a5_3327
	xTaskGetTickCountFromISR(out a5_3327)
l2305A370:
	word32 s5_1334
	word32 s6_1335
	word32 s0_1355
	word32 a0_1376
	word32 a4_1380
	word32 s1_1386
	word32 s2_1387
	word32 s2_3405
	word32 s4_3407
	word32 s6_3409
	word32 s5_3419
	word32 s6_3420
	word32 s8_3421
	word32 s3_3417
	word32 s4_3418
	word32 a5_3416
	word32 a1_3414
	word32 a3_3415
	word32 s0_3413
	word32 s9_3412
	word32 s8_3411
	word32 s7_3410
	word32 s5_3408
	word32 s3_3406
	word32 a5_3404
	word32 s1_3401
	word32 a3_3402
	word32 a4_3403
	word32 s4_3395
	word32 s8_3397
	word32 s9_3398
	word32 s10_3399
	word32 s11_3400
	word32 s7_3396
	word32 a0_3387
	word32 a1_3388
	word32 a2_3389
	word32 a3_3390
	word32 a5_3392
	word32 s2_3393
	word32 s3_3394
	word32 a4_3391
	word32 s1_3386
	ra_1034 = fdt_getprop(log_buf_out(bl_printk(ra_1034, 0x230BEBFC<32>, s1_1274 + -1936<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_3386, out a0_3387, out a1_3388, out a2_3389, out a3_3390, out a4_3391, out a5_3392, out s2_3393, out s3_3394, out s4_3395, out s5_1334, out s6_1335, out s7_3396, out s8_3397, out s9_3398, out s10_3399, out s11_3400), fp + -304<i32>, 60<i32>, 0<32>, s5_1334, s6_1335, dwLoc012C, dwLoc0120, dwLoc011C, dwLoc0110, dwLocE8, dwLocD4, dwLocC4, dwLoc34, out s0_1355, out s1_3401, out a3_3402, out a4_3403, out a5_3404, out s2_3405, out s3_3406, out s4_3407, out s5_3408, out s6_3409, out s7_3410, out s8_3411, out s9_3412), s0_1355 + 1356<i32>, 0x230BEC28<32>, dwLoc0138, dwLoc0118, dwLocFC, dwLoc68, dwLoc38, out s0_3413, out s1_1386, out a0_1376, out a1_3414, out a3_3415, out a4_1380, out a5_3416, out s2_1387, out s3_3417, out s4_3418, out s5_3419, out s6_3420, out s8_3421)
	branch a4_1380 == 56<i32> l2305A3F0
l2305A3F0:
	word32 a2_3329
	word32 a4_3331
	word32 a6_3333
	word32 a7_3334
	word32 a5_3332
	word32 a3_3330
	word32 a1_3328
	memcpy(fp + -304<i32>, a0_1376, 56<i32>, out a1_3328, out a2_3329, out a3_3330, out a4_3331, out a5_3332, out a6_3333, out a7_3334)
	branch Mem33[s2_1387 + 1376<i32>:int32] == 0<32> l2305A478
l2305A478:
	word32 a5_3375
	xTaskGetTickCount(out a5_3375)
l2305A400:
	word32 a5_3376
	xTaskGetTickCountFromISR(out a5_3376)
l2305A404:
	word32 s5_1446
	word32 s6_1447
	word32 s0_1467
	word32 a0_1488
	word32 a4_1492
	word32 s1_1498
	word32 s2_1499
	word32 s8_3459
	word32 s6_3458
	word32 s5_3457
	word32 a3_3453
	word32 s3_3455
	word32 s4_3456
	word32 a5_3454
	word32 a1_3452
	word32 s0_3451
	word32 s9_3450
	word32 s8_3449
	word32 s7_3448
	word32 s6_3447
	word32 s5_3446
	word32 s3_3444
	word32 s4_3445
	word32 s2_3443
	word32 a5_3442
	word32 s1_3439
	word32 a3_3440
	word32 a4_3441
	word32 s4_3433
	word32 s8_3435
	word32 s9_3436
	word32 s10_3437
	word32 s11_3438
	word32 s7_3434
	word32 a0_3425
	word32 a1_3426
	word32 a2_3427
	word32 a3_3428
	word32 a5_3430
	word32 s2_3431
	word32 s3_3432
	word32 a4_3429
	word32 s1_3424
	ra_1034 = fdt_getprop(log_buf_out(bl_printk(ra_1034, 0x230BEC6C<32>, s1_1386 + -1936<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_3424, out a0_3425, out a1_3426, out a2_3427, out a3_3428, out a4_3429, out a5_3430, out s2_3431, out s3_3432, out s4_3433, out s5_1446, out s6_1447, out s7_3434, out s8_3435, out s9_3436, out s10_3437, out s11_3438), fp + -304<i32>, 56<i32>, 0<32>, s5_1446, s6_1447, dwLoc012C, dwLoc0120, dwLoc011C, dwLoc0110, dwLocE8, dwLocD4, dwLocC4, dwLoc34, out s0_1467, out s1_3439, out a3_3440, out a4_3441, out a5_3442, out s2_3443, out s3_3444, out s4_3445, out s5_3446, out s6_3447, out s7_3448, out s8_3449, out s9_3450), s0_1467 + 1356<i32>, 0x230BEC98<32>, dwLoc0138, dwLoc0118, dwLocFC, dwLoc68, dwLoc38, out s0_3451, out s1_1498, out a0_1488, out a1_3452, out a3_3453, out a4_1492, out a5_3454, out s2_1499, out s3_3455, out s4_3456, out s5_3457, out s6_3458, out s8_3459)
	branch a4_1492 == 4<32> l2305A484
l2305A484:
	word32 a5_3381
	word32 a6_3382
	word32 a7_3383
	word32 a3_3379
	word32 a4_3380
	word32 a2_3378
	word32 a1_3377
	memcpy(fp + -304<i32>, a0_1488, 4<32>, out a1_3377, out a2_3378, out a3_3379, out a4_3380, out a5_3381, out a6_3382, out a7_3383)
	branch Mem33[s2_1499 + 1376<i32>:int32] == 0<32> l2305A4F8
l2305A4F8:
	word32 a5_3422
	xTaskGetTickCount(out a5_3422)
l2305A492:
	word32 a5_3423
	xTaskGetTickCountFromISR(out a5_3423)
l2305A496:
	word32 s5_1558
	word32 s6_1559
	word32 s7_3484
	word32 s9_3486
	word32 s8_3485
	word32 s6_3483
	word32 s5_3482
	word32 s4_3481
	word32 s3_3480
	word32 s2_3479
	word32 a5_3478
	word32 a4_3477
	word32 s1_3476
	word32 s0_3475
	word32 s11_3474
	word32 s10_3473
	word32 s4_3469
	word32 s8_3471
	word32 s9_3472
	word32 s7_3470
	word32 s3_3468
	word32 s2_3467
	word32 a5_3466
	word32 a4_3465
	word32 a3_3464
	word32 a2_3463
	word32 a1_3462
	word32 s1_3460
	word32 a0_3461
	log_buf_out(bl_printk(ra_1034, 0x230BECD4<32>, s1_1498 + -1936<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_3460, out a0_3461, out a1_3462, out a2_3463, out a3_3464, out a4_3465, out a5_3466, out s2_3467, out s3_3468, out s4_3469, out s5_1558, out s6_1559, out s7_3470, out s8_3471, out s9_3472, out s10_3473, out s11_3474), fp + -304<i32>, 4<32>, 0<32>, s5_1558, s6_1559, dwLoc012C, dwLoc0120, dwLoc011C, dwLoc0110, dwLocE8, dwLocD4, dwLocC4, dwLoc34, out s0_3475, out s1_3476, out a3_1573, out a4_3477, out a5_3478, out s2_3479, out s3_3480, out s4_3481, out s5_3482, out s6_3483, out s7_3484, out s8_3485, out s9_3486)
	a0_1595 = 0<32>
l2305A450:
	branch Mem33[s2_1499 + 1376<i32>:int32] == 0<32> l2305A4FE
l2305A4FE:
	word32 a5_3384
	xTaskGetTickCount(out a5_3384)
l2305A456:
	word32 a5_3385
	xTaskGetTickCountFromISR(out a5_3385)
l2305A45A:
	a3_1018 = s1_1498 + -1936<i32>
	a0_1020 = 0x230BECF8<32>
l2305A3BE:
	branch Mem33[s2_1387 + 1376<i32>:int32] == 0<32> l2305A47E
l2305A47E:
	word32 a5_3335
	xTaskGetTickCount(out a5_3335)
l2305A3C4:
	word32 a5_3336
	xTaskGetTickCountFromISR(out a5_3336)
l2305A3C8:
	a3_1018 = s1_1386 + -1936<i32>
	a0_1020 = 0x230BECA4<32>
l2305A32A:
	branch Mem33[s2_1275 + 1376<i32>:int32] == 0<32> l2305A3EA
l2305A3EA:
	word32 a5_3288
	xTaskGetTickCount(out a5_3288)
l2305A330:
	word32 a5_3289
	xTaskGetTickCountFromISR(out a5_3289)
l2305A334:
	a3_1018 = s1_1274 + -1936<i32>
	a0_1020 = 0x230BEC3C<32>
l2305A112:
	branch Mem33[s2_1163 + 1376<i32>:int32] == 0<32> l2305A356
l2305A356:
	word32 a5_3238
	xTaskGetTickCount(out a5_3238)
l2305A11A:
	word32 a5_3239
	xTaskGetTickCountFromISR(out a5_3239)
l2305A11E:
	word32 s6_3273
	word32 s7_3274
	word32 s8_3275
	word32 s9_3276
	word32 s11_3278
	word32 s10_3277
	word32 a4_3267
	word32 a5_3268
	word32 s2_3269
	word32 s3_3270
	word32 s5_3272
	word32 s4_3271
	word32 a1_3265
	word32 a2_3266
	word32 a0_3264
	word32 s1_3263
	bl_printk(ra_1160, 0x230BEBC8<32>, s1_1162 + -1936<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_3263, out a0_3264, out a1_3265, out a2_3266, out a3_1573, out a4_3267, out a5_3268, out s2_3269, out s3_3270, out s4_3271, out s5_3272, out s6_3273, out s7_3274, out s8_3275, out s9_3276, out s10_3277, out s11_3278)
l23059D08:
	branch Mem33[0x4200F560<32>:int32] == 0<32> l23059D3A
l23059D3A:
	word32 a5_2970
	xTaskGetTickCount(out a5_2970)
l23059D12:
	word32 a5_2971
	xTaskGetTickCountFromISR(out a5_2971)
l23059D16:
	a3_1018 = 0x230BE870<32>
	a0_1020 = 0x230BE880<32>
l23059D34:
	word32 a0_3006
	word32 a1_3007
	word32 s2_3011
	word32 a4_3009
	word32 a2_3008
	word32 s1_3005
	word32 s8_3017
	word32 s6_3015
	word32 s5_3014
	word32 s4_3013
	word32 a5_3010
	word32 s3_3012
	word32 s11_3020
	word32 s7_3016
	word32 s9_3018
	word32 s10_3019
	bl_printk(ra_1034, a0_1020, a3_1018, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_3005, out a0_3006, out a1_3007, out a2_3008, out a3_1573, out a4_3009, out a5_3010, out s2_3011, out s3_3012, out s4_3013, out s5_3014, out s6_3015, out s7_3016, out s8_3017, out s9_3018, out s10_3019, out s11_3020)
l2305A13E:
	a0_1595 = 0xFFFFFFFF<32>
l2305A4C4:
	a3Out = a3_1573
	return a0_1595
tc_fdt_wifi_module_exit:


word32 tc_fdt_wifi(word32 ra, word32 s1, word32 s2, word32 s4, word32 s6, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blfdt
// MayUse:  ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 ra s1 s2 s7 s9
// Trashed: a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tc_fdt_wifi_entry:
l2305A532:
	word32 a0_30
	word32 a3_15
	branch tc_fdt_wifi_module(ra, s1, s2, s4, s6, out a3_15) == 0<32> l2305A556
l2305A556:
	a0_30 = 0x230BE84C<32>
l2305A540:
	a0_30 = 0x230BE830<32>
l2305A548:
	word32 a1_93
	word32 a2_94
	word32 a3_43
	word32 s1_47
	word32 s2_50
	word32 s7_55
	word32 s9_57
	word32 a0_92
	word32 a4_95
	word32 a5_96
	word32 a7_97
	word32 s3_98
	word32 s4_99
	word32 s5_100
	word32 s6_101
	word32 s8_102
	word32 s10_103
	word32 s11_104
	word32 t4_105
	word32 ra_46 = printf(ra, a0_30, a3_15, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_47, out a0_92, out a1_93, out a2_94, out a3_43, out a4_95, out a5_96, out a7_97, out s2_50, out s3_98, out s4_99, out s5_100, out s6_101, out s7_55, out s8_102, out s9_57, out s10_103, out s11_104, out t4_105)
	s1Out = s1_47
	a3Out = a3_43
	s2Out = s2_50
	s7Out = s7_55
	s9Out = s9_57
	return ra_46
tc_fdt_wifi_exit:


void cmd_blog_info_dump(word32 ra, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5
// Preserved: a6 sp
cmd_blog_info_dump_entry:
l2305A560:
	word32 a3_32
	word32 a3_49
	word32 a3_77
	word32 s3_113
	word32 a2_642
	word32 a4_643
	word32 s3_652
	word32 a4_649
	word32 a1_641
	word32 a0_646
	word32 a1_647
	word32 s2_651
	word32 a2_648
	word32 a5_650
	word32 a5_644
	word32 s1_645
	word32 a0_640
	word32 t1_639
	word32 s4_653
	word32 s5_654
	word32 s6_655
	word32 s7_656
	word32 s8_657
	word32 s9_658
	word32 s10_659
	word32 s11_660
	word32 s1_661
	word32 a0_662
	word32 a1_663
	word32 a2_664
	word32 a4_665
	word32 a5_666
	word32 s2_667
	word32 s3_668
	word32 s4_669
	word32 s5_670
	word32 s6_671
	word32 s7_672
	word32 s8_673
	word32 s9_674
	word32 s10_675
	word32 s11_676
	word32 s1_677
	word32 a1_678
	word32 a2_679
	word32 a3_680
	word32 a4_681
	word32 a5_682
	word32 s2_683
	word32 s4_684
	word32 s5_685
	word32 s6_686
	word32 s7_687
	word32 s8_688
	word32 s9_689
	word32 s10_690
	word32 s11_691
	word32 a0_102
	word32 ra_108 = bl_printk(bl_printk(bl_printk(memset(ra, fp + -176<i32>, 0<32>, 128<i32>, out t1_639, out a0_640, out a1_641, out a2_642, out a3_32, out a4_643, out a5_644), 0x230BEDA4<32>, a3_32, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_645, out a0_646, out a1_647, out a2_648, out a3_49, out a4_649, out a5_650, out s2_651, out s3_652, out s4_653, out s5_654, out s6_655, out s7_656, out s8_657, out s9_658, out s10_659, out s11_660), 0x230BEDBC<32>, a3_49, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_661, out a0_662, out a1_663, out a2_664, out a3_77, out a4_665, out a5_666, out s2_667, out s3_668, out s4_669, out s5_670, out s6_671, out s7_672, out s8_673, out s9_674, out s10_675, out s11_676), 0x230BEDD4<32>, a3_77, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_677, out a0_102, out a1_678, out a2_679, out a3_680, out a4_681, out a5_682, out s2_683, out s3_113, out s4_684, out s5_685, out s6_686, out s7_687, out s8_688, out s9_689, out s10_690, out s11_691)
	word32 s0_122 = 0x230CC1DC<32>
	word32 s3_123 = s3_113 + 604<i32>
	word32 s8_124 = 128<i32>
	word32 s7_125 = 0x230BF000<32>
l2305A5F0:
	branch s0_122 >=u s3_123 l2305A60A
l2305A5F4:
	word32 a1_137
	word32 a2_692
	word32 a4_693
	word32 a5_694
	word32 a3_134
	branch s8_124 >=u strlen(a0_102, out a1_137, out a2_692, out a3_134, out a4_693, out a5_694) l2305A624
l2305A624:
	word32 s0_142
	branch CONVERT(bLocB0, byte, word32) == 0<32> l2305A648
l2305A62A:
	s0_142 = Mem28[a1_137 + 4<i32>:word32]
	word32 a1_722
	word32 a2_723
	word32 a3_724
	word32 a4_725
	word32 a5_726
	a0_102 = strcmp(fp + -176<i32>, a1_137, out a1_722, out a2_723, out a3_724, out a4_725, out a5_726)
	branch a0_102 != 0<32> l2305A638
l2305A638:
	word32 a1_727
	word32 a2_728
	word32 a3_729
	word32 a4_730
	word32 a5_731
	word32 t1_732
	word32 a0_733
	word32 a1_734
	word32 a2_735
	word32 a4_736
	word32 a5_737
	ra_108 = memset(ra_108, fp + -176<i32>, 0<32>, strlen(fp + -176<i32>, out a1_727, out a2_728, out a3_729, out a4_730, out a5_731), out t1_732, out a0_733, out a1_734, out a2_735, out a3_134, out a4_736, out a5_737)
l2305A648:
	word32 a0_187
	word32 s4_199
	word32 s1_712
	word32 a2_713
	word32 a3_714
	word32 a4_715
	word32 a5_716
	word32 s2_717
	word32 s5_718
	word32 s9_719
	word32 s10_720
	word32 s11_721
	word32 a1_188
	word32 s6_201
	ra_108 = bl_printk(ra_108, s7_125 + -512<i32>, a3_134, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_712, out a0_187, out a1_188, out a2_713, out a3_714, out a4_715, out a5_716, out s2_717, out s3_123, out s4_199, out s5_718, out s6_201, out s7_125, out s8_124, out s9_719, out s10_720, out s11_721)
	branch CONVERT(bLocB0, byte, word32) != 0<32> l2305A682
l2305A682:
	s0_142 = Mem28[a0_187 + 4<i32>:word32]
	word32 a2_738
	word32 a3_739
	word32 a4_740
	word32 a5_741
	a0_102 = strcmp(a0_187, fp + -176<i32>, out a1_188, out a2_738, out a3_739, out a4_740, out a5_741)
	branch a0_102 == 0<32> l2305A634
l2305A68C:
l2305A65E:
	s0_142 = Mem28[a1_188 + 4<i32>:word32]
	a0_102 = fp + -176<i32>
	word32 s1_225 = s4_199 + 604<i32>
	word32 a4_742
	word32 a5_743
	word32 a1_226 = strcpy(fp + -176<i32>, a1_188, out a4_742, out a5_743)
l2305A66A:
	branch s1_225 >=u s6_201 l2305A634
l2305A66E:
	s0_142 = Mem28[a1_226 + 4<i32>:word32]
	word32 a3_240
	word32 a5_242
	word32 a1_744
	word32 a4_745
	a0_102 = strstr(ra_108, a0_102, a1_226, out a1_744, out a3_240, out a4_745, out a5_242)
	word32 s1_247 = Mem28[a5_242 + 4<i32>:word32]
	a1_226 = a0_102
	branch a0_102 == a5_242 l2305A68E
l2305A68E:
	word32 a2_746
	word32 a3_747
	word32 a4_748
	word32 a5_749
	word32 s4_750
	word32 s5_751
	word32 s10_752
	word32 s11_753
	word32 s2_268
	word32 s9_275
	ra_108 = bl_printk(ra_108, s7_125 + -512<i32>, a3_240, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_247, out a0_102, out a1_226, out a2_746, out a3_747, out a4_748, out a5_749, out s2_268, out s3_123, out s4_750, out s5_751, out s6_201, out s7_125, out s8_124, out s9_275, out s10_752, out s11_753)
l2305A6A0:
	branch s2_268 >=u s9_275 l2305A67E
l2305A6A4:
	s1_247 = Mem28[a1_226 + 4<i32>:word32]
	word32 a3_288
	word32 a1_754
	word32 a4_755
	word32 a5_756
	a0_102 = strstr(ra_108, Mem28[s2_268 + 4<i32>:int32], a1_226, out a1_754, out a3_288, out a4_755, out a5_756)
	a1_226 = a0_102
	branch a0_102 != Mem28[s2_268 + 4<i32>:int32] l2305A6C8
l2305A6B8:
	word32 a2_757
	word32 a3_758
	word32 a4_759
	word32 a5_760
	word32 s4_761
	word32 s5_762
	word32 s10_763
	word32 s11_764
	ra_108 = bl_printk(ra_108, s7_125 + -512<i32>, a3_288, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_247, out a0_102, out a1_226, out a2_757, out a3_758, out a4_759, out a5_760, out s2_268, out s3_123, out s4_761, out s5_762, out s6_201, out s7_125, out s8_124, out s9_275, out s10_763, out s11_764)
l2305A6C8:
	s2_268 = s2_268 + 8<32>
l2305A67E:
	s1_225 = s1_247 + 8<32>
l2305A634:
	s0_122 = s0_142 + 8<32>
l2305A5FE:
	word32 s1_695
	word32 a0_696
	word32 a1_697
	word32 a2_698
	word32 a3_699
	word32 a4_700
	word32 a5_701
	word32 s2_702
	word32 s3_703
	word32 s4_704
	word32 s5_705
	word32 s6_706
	word32 s7_707
	word32 s8_708
	word32 s9_709
	word32 s10_710
	word32 s11_711
	bl_printk(ra_108, 0x230BEDEC<32>, a3_134, dwLocA8, dwLoc88, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s1_695, out a0_696, out a1_697, out a2_698, out a3_699, out a4_700, out a5_701, out s2_702, out s3_703, out s4_704, out s5_705, out s6_706, out s7_707, out s8_708, out s9_709, out s10_710, out s11_711)
l2305A60A:
	return
cmd_blog_info_dump_exit:


word32 blog_strcpy.part.0(word32 a0, word32 a1, word32 a2, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blog_hexdump_out
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a3 a4 a5 a6
// Preserved: sp
blog_strcpy.part.0_entry:
l2305A6CC:
	word32 a5_16 = a2
	word32 a0_6 = a0 - a2
l2305A6D4:
	word32 a4_10 = CONVERT(Mem9[a5_16:byte], byte, word32)
	branch a4_10 != 0<32> l2305A6E0
l2305A6E0:
	branch a5_16 + a0_6 >u 255<i32> l2305A6DA
l2305A6E8:
	a1 = a1 + 1<32>
	Mem17[a1 + 4095<i32>:byte] = SLICE(a4_10, byte, 0)
	a5_16 = a5_16 + 1<32>
l2305A6DA:
	a3Out = 255<i32>
	return a5_16 - a2
blog_strcpy.part.0_exit:


void cmd_blog_set_level(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 s2, word32 dwArg08, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 tp
// Preserved: sp
cmd_blog_set_level_entry:
l2305A6F2:
	word32 a3_249
	word32 ra_252
	branch a2 == 3<32> l2305A734
l2305A734:
	word32 s3_101
	word32 a0_222
	word32 a3_108
	word32 a2_529
	word32 a1_528
	word32 a3_530
	word32 a4_531
	word32 a5_532
	word32 a0_27 = strcmp(a0, 0x230BEE24<32>, out a1_528, out a2_529, out a3_530, out a4_531, out a5_532)
	branch a0_27 == 0<32> l2305A7C2
l2305A7C2:
	s3_101 = 0<32>
l2305A746:
	word32 a4_569
	word32 a5_570
	word32 a1_566
	word32 a3_568
	word32 a2_567
	word32 a0_40 = strcmp(a0_27, 0x230BEE28<32>, out a1_566, out a2_567, out a3_568, out a4_569, out a5_570)
	s3_101 = 1<32>
	branch a0_40 == 0<32> l2305A7C4
l2305A758:
	word32 a4_578
	word32 a5_579
	word32 a1_575
	word32 a3_577
	word32 a2_576
	word32 a0_53 = strcmp(a0_40, 0x230C5050<32>, out a1_575, out a2_576, out a3_577, out a4_578, out a5_579)
	s3_101 = 2<32>
	branch a0_53 == 0<32> l2305A7C4
l2305A76A:
	word32 a5_584
	word32 a2_581
	word32 a4_583
	word32 a3_582
	word32 a1_580
	word32 a0_66 = strcmp(a0_53, 0x230BEE30<32>, out a1_580, out a2_581, out a3_582, out a4_583, out a5_584)
	s3_101 = 3<32>
	branch a0_66 == 0<32> l2305A7C4
l2305A77C:
	word32 a3_587
	word32 a4_588
	word32 a5_589
	word32 a2_586
	word32 a1_585
	word32 a0_79 = strcmp(a0_66, 0x230C45D8<32>, out a1_585, out a2_586, out a3_587, out a4_588, out a5_589)
	s3_101 = 4<32>
	branch a0_79 == 0<32> l2305A7C4
l2305A78E:
	word32 a4_593
	word32 a5_594
	word32 a1_590
	word32 a3_592
	word32 a2_591
	word32 a0_92 = strcmp(a0_79, 0x230BEE38<32>, out a1_590, out a2_591, out a3_592, out a4_593, out a5_594)
	s3_101 = 5<32>
	branch a0_92 == 0<32> l2305A7C4
l2305A7A0:
	s3_101 = 6<32>
	word32 a2_596
	word32 a5_598
	word32 a4_597
	word32 a1_595
	branch strcmp(a0_92, 0x230BEE40<32>, out a1_595, out a2_596, out a3_108, out a4_597, out a5_598) == 0<32> l2305A7C4
l2305A7C4:
	word32 a3_572
	word32 a5_574
	word32 a4_573
	word32 a2_571
	word32 a1_123
	word32 a0_119 = strlen(s0, out a1_123, out a2_571, out a3_572, out a4_573, out a5_574)
	word32 a5_125 = 0<32>
	word32 a4_126 = 0<32>
	a3_108 = 46<i32>
l2305A7D4:
	branch a4_126 < a0_119 l2305A7F2
l2305A7F2:
	branch CONVERT(Mem19[s0 + a4_126:byte], byte, word32) != 46<i32> l2305A800
l2305A7FE:
	a5_125 = a5_125 + 1<32>
l2305A800:
	a4_126 = a4_126 + 1<32>
l2305A7D8:
	word32 s2_142
	word32 s0_141
	branch a5_125 == 0<32> l2305A804
l2305A804:
	s0_141 = 0x230CC25C<32>
	s2_142 = 0x230CC1DC<32>
l2305A7DA:
	branch a5_125 == 1<32> l2305A82E
l2305A82E:
	s0_141 = 0x230CC2DC<32>
	s2_142 = 0x230CC25C<32>
l2305A7E0:
	branch a5_125 == 2<32> l2305A840
l2305A840:
	s0_141 = 0x230CC2DC<32>
	s2_142 = 0x230CC2DC<32>
l2305A814:
	word32 s0_157 = (s0_141 - s2_142 >> 3<i32>) + 0xFFFFFFFF<32>
	word32 s6_158 = 0<32>
l2305A81E:
	branch s0_157 >= s6_158 l2305A852
l2305A852:
	word32 s5_164 = s6_158 + s0_157
	word32 s4_168 = (s5_164 >> 1<u32> << 3<u32>) + s2_142
	word32 a2_615
	word32 a4_616
	word32 a5_617
	word32 a0_170 = strcmp(Mem19[s4_168 + 4<i32>:int32], a1_123, out a1_123, out a2_615, out a3_108, out a4_616, out a5_617)
	branch a0_170 >= 0<32> l2305A872
l2305A872:
	branch a0_170 == 0<32> l2305A87A
l2305A87A:
	Mem183[Mem19[s4_168:int32]:byte] = SLICE(s3_101, byte, 0)
	0<32> = dwArgA8
l2305A8A8_thunk_bl_printk:
	word32 s1_618
	word32 a0_619
	word32 a1_620
	word32 a2_621
	word32 a3_622
	word32 a4_623
	word32 a5_624
	word32 s2_625
	word32 s3_626
	word32 s4_627
	word32 s5_628
	word32 s6_629
	word32 s7_630
	word32 s8_631
	word32 s9_632
	word32 s10_633
	word32 s11_634
	bl_printk(ra, 0x230BEEB8<32>, a3_108, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_618, out a0_619, out a1_620, out a2_621, out a3_622, out a4_623, out a5_624, out s2_625, out s3_626, out s4_627, out s5_628, out s6_629, out s7_630, out s8_631, out s9_632, out s10_633, out s11_634)
	return
l2305A874:
	s0_157 = (s5_164 >> 1<u32>) + -1<i32>
l2305A86C:
	s6_158 = (s5_164 >> 1<u32>) + 1<i32>
l2305A824:
	a0_222 = 0x230BEE9C<32>
l2305A7E6:
	a0_222 = 0x230BEE68<32>
l2305A7B2:
	a0_222 = 0x230BEE48<32>
l2305A7BC:
	word32 s5_608
	word32 s2_605
	word32 a1_601
	word32 a4_603
	word32 a0_600
	word32 a5_604
	word32 a2_602
	word32 s1_599
	word32 s6_609
	word32 s4_607
	word32 s3_606
	word32 s7_610
	word32 s8_611
	word32 s9_612
	word32 s10_613
	word32 s11_614
	ra_252 = bl_printk(ra, a0_222, a3_108, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_599, out a0_600, out a1_601, out a2_602, out a3_249, out a4_603, out a5_604, out s2_605, out s3_606, out s4_607, out s5_608, out s6_609, out s7_610, out s8_611, out s9_612, out s10_613, out s11_614)
l2305A70A:
	word32 a5_538
	word32 a0_534
	word32 s3_540
	word32 s2_539
	word32 a2_536
	word32 a1_535
	word32 s1_533
	word32 s11_548
	word32 s8_545
	word32 s10_547
	word32 s9_546
	word32 s5_542
	word32 s7_544
	word32 s6_543
	word32 s4_541
	word32 a4_537
	ra_252 = bl_printk(ra, 0x230BEE14<32>, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_533, out a0_534, out a1_535, out a2_536, out a3_249, out a4_537, out a5_538, out s2_539, out s3_540, out s4_541, out s5_542, out s6_543, out s7_544, out s8_545, out s9_546, out s10_547, out s11_548)
l2305A716:
	0<32> = dwArgA8
l2305A730_thunk_bl_printk:
	word32 s9_563
	word32 s11_565
	word32 s10_564
	word32 s6_560
	word32 s8_562
	word32 s7_561
	word32 s3_557
	word32 s5_559
	word32 s4_558
	word32 a4_554
	word32 s2_556
	word32 a5_555
	word32 a1_551
	word32 a3_553
	word32 a2_552
	word32 a0_550
	word32 s1_549
	bl_printk(ra_252, 0x230BEE88<32>, a3_249, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_549, out a0_550, out a1_551, out a2_552, out a3_553, out a4_554, out a5_555, out s2_556, out s3_557, out s4_558, out s5_559, out s6_560, out s7_561, out s8_562, out s9_563, out s10_564, out s11_565)
	return
cmd_blog_set_level_exit:


word32 blog_port_output(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, ptr32 & a0Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blog_hexdump_out
// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 ra s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
blog_port_output_entry:
l2305A8AC:
l2305A8B6_thunk_bl_printk:
	word32 a0_12
	word32 s6_26
	word32 s7_27
	word32 s1_41
	word32 a1_42
	word32 a2_43
	word32 a3_44
	word32 a4_45
	word32 a5_46
	word32 s2_47
	word32 s3_48
	word32 s4_49
	word32 s5_50
	word32 s8_51
	word32 s9_52
	word32 s10_53
	word32 s11_54
	word32 ra_18 = bl_printk(ra, 0x230BED9C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_41, out a0_12, out a1_42, out a2_43, out a3_44, out a4_45, out a5_46, out s2_47, out s3_48, out s4_49, out s5_50, out s6_26, out s7_27, out s8_51, out s9_52, out s10_53, out s11_54)
	a0Out = a0_12
	s6Out = s6_26
	s7Out = s7_27
	return ra_18
blog_port_output_exit:


word32 blog_hexdump_out(word32 ra, word32 s1, word32 a0, word32 a3, word32 s2, word32 s9, word32 s10, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg5C, word32 dwArg6C, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      write_data
//      __ble_bytes_send
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +005C:[0..31] Stack +006C:[0..31]
// LiveOut: a0 a3 ra s0 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
blog_hexdump_out_entry:
l2305A8BA:
	word32 s6_330 = a3
	word32 s0_337 = 0<32>
	word32 s7_331 = 0x42017000<32>
	a0_315 = a0
l2305A8EC:
	word32 a0_315
	branch s0_337 <u s6_330 l2305A90E
l2305A90E:
	word32 s7_75
	word32 s8_76
	word32 a1_681
	word32 a3_683
	word32 a7_686
	word32 s4_689
	word32 s1_680
	word32 a4_684
	word32 s2_687
	word32 s5_690
	word32 s10_691
	word32 s3_688
	word32 a5_685
	word32 a2_682
	word32 a0_58
	word32 s11_135
	word32 s0_132
	word32 s6_100
	word32 s9_115
	word32 ra_123 = snprintf(ra, s7_331 + 600<i32>, 256<i32>, 0x230BED44<32>, s10, dwLoc28, dwArg04, dwArg20, a0, s1, dwArg6C, out s0_132, out s1_680, out a0_58, out a1_681, out a2_682, out a3_683, out a4_684, out a5_685, out a7_686, out s2_687, out s3_688, out s4_689, out s5_690, out s6_100, out s7_75, out s8_76, out s9_115, out s10_691, out s11_135)
	branch a0_58 <=u 256<i32> l2305A938
l2305A934:
	a0_58 = 256<i32>
l2305A938:
	word32 s10_134 = CONVERT(SLICE(a0_58, word16, 0), word16, word32)
	word32 s3_137 = s0_132
	word32 s5_139 = s0_132
	word32 s4_138 = 0<32>
	word32 s1_133 = CONVERT(SLICE(s8_76, word16, 0), word16, word32)
	word32 s2_136 = s7_75 + 600<i32>
l2305A950:
	branch CONVERT(SLICE(s4_138, word16, 0), word16, word32) <u s1_133 l2305A9DC
l2305A9DC:
	branch s5_139 >= s6_100 l2305AA2E
l2305AA2E:
	word32 a4_705
	word32 a5_706
	word32 a3_704
	word32 a2_703
	strncpy(fp + -72<i32>, 0x230BED60<32>, 8<32>, out a2_703, out a3_704, out a4_705, out a5_706)
l2305A9E0:
	word32 a2_709
	word32 a7_713
	word32 s7_714
	word32 s8_715
	word32 a5_712
	word32 a3_710
	word32 a4_711
	word32 a1_708
	word32 a0_707
	ra_123 = snprintf(ra_123, fp + -72<i32>, 8<32>, 0x230BED58<32>, s10, dwLoc28, dwArg04, dwArg20, a0, s1, dwArg6C, out s0_132, out s1_133, out a0_707, out a1_708, out a2_709, out a3_710, out a4_711, out a5_712, out a7_713, out s2_136, out s3_137, out s4_138, out s5_139, out s6_100, out s7_714, out s8_715, out s9_115, out s10_134, out s11_135)
l2305A9F8:
	word32 a3_729
	word32 s10_161 = s10_134 + blog_strcpy.part.0(s10_134, s2_136 + s10_134, fp + -72<i32>, out a3_729)
	s4_138 = s4_138 + 1<32>
	s10_134 = CONVERT(SLICE(s10_161, word16, 0), word16, word32)
	branch (s4_138 & 7<i32>) != 0<32> l2305AA2A
l2305AA14:
	word32 a3_716
	s10_134 = CONVERT(SLICE(CONVERT(SLICE(s10_161, word16, 0), word16, word32) + blog_strcpy.part.0(CONVERT(SLICE(s10_161, word16, 0), word16, word32), s2_136 + CONVERT(SLICE(s10_161, word16, 0), word16, word32), s11_135 + -684<i32>, out a3_716), word16, 0), word16, word32)
l2305AA2A:
	s5_139 = s5_139 + 1<32>
l2305A95A:
	word32 a3_692
	word32 s4_196 = CONVERT(SLICE(blog_strcpy.part.0(s10_134, s2_136 + s10_134, 0x230BED64<32>, out a3_692) + s10_134, word16, 0), word16, word32)
	word32 s5_197 = 94<i32>
	word32 a4_198 = 0x230BF000<32>
l2305A97E:
	branch CONVERT(SLICE(s3_137 - s0_132, word16, 0), word16, word32) <u s1_133 l2305AA40
l2305AA40:
	branch s3_137 >= s6_100 l2305AA7C
l2305AA44:
	branch s5_197 >=u CONVERT(Mem39[s9_115 + s3_137:byte], byte, word32) + -32<i32> l2305AA58
l2305AA54:
l2305AA58:
	word32 s4_237
	word32 s7_724
	word32 s8_725
	word32 s10_726
	word32 s11_727
	word32 a7_723
	word32 a5_722
	word32 a4_721
	word32 a3_720
	word32 a2_719
	word32 a1_718
	word32 a0_717
	ra_123 = snprintf(ra_123, fp + -72<i32>, 8<32>, a4_198 + -664<i32>, s10, dwLoc28, dwArg04, dwArg20, a0, s1, dwArg6C, out s0_132, out s1_133, out a0_717, out a1_718, out a2_719, out a3_720, out a4_721, out a5_722, out a7_723, out s2_136, out s3_137, out s4_237, out s5_197, out s6_100, out s7_724, out s8_725, out s9_115, out s10_726, out s11_727)
	word32 a3_728
	s4_196 = CONVERT(SLICE(s4_237 + blog_strcpy.part.0(s4_237, s2_136 + s4_237, fp + -72<i32>, out a3_728), word16, 0), word16, word32)
	a4_198 = 0x230BF000<32>
l2305AA7C:
	s3_137 = s3_137 + 1<32>
l2305A98A:
	word32 a1_693
	word32 a5_697
	word32 a4_696
	word32 a2_694
	word32 a3_695
	branch strlen(0x230C6900<32>, out a1_693, out a2_694, out a3_695, out a4_696, out a5_697) + s4_196 <=u 256<i32> l2305A9B6
l2305A9A0:
	word32 a4_701
	word32 a5_702
	word32 a3_700
	word32 a1_698
	word32 a2_699
	s4_196 = CONVERT(SLICE(256<i32> - strlen(0x230C6900<32>, out a1_698, out a2_699, out a3_700, out a4_701, out a5_702), word16, 0), word16, word32)
l2305A9B6:
	word32 a3_294
	blog_strcpy.part.0(s4_196, s2_136 + s4_196, 0x230C6900<32>, out a3_294)
	ra = blog_port_output(ra_123, a3_294, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out a0_315, out s6_330, out s7_331)
	s0_337 = CONVERT(SLICE(s0_132 + s1_133, word16, 0), word16, word32)
l2305A8F0:
	s0Out = s0_337
	a0Out = a0_315
	a3Out = dwArg08
	s5Out = s4
	return dwArg68
blog_hexdump_out_exit:


word32 blog_init(word32 ra, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
blog_init_entry:
l2305AA80:
	word32 a2_15
	word32 s11_157
	word32 s8_154
	word32 s9_155
	word32 s10_156
	word32 s5_151
	word32 s6_152
	word32 s7_153
	word32 s2_148
	word32 s3_149
	word32 s4_150
	word32 a3_145
	word32 a4_146
	word32 a5_147
	word32 s1_142
	word32 a0_143
	word32 a1_144
	word32 ra_19 = bl_printk(ra, 0x230BED6C<32>, 2<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_142, out a0_143, out a1_144, out a2_15, out a3_145, out a4_146, out a5_147, out s2_148, out s3_149, out s4_150, out s5_151, out s6_152, out s7_153, out s8_154, out s9_155, out s10_156, out s11_157)
	word32 a5_35 = 0x230CC1DC<32>
l2305AAA8:
	branch a5_35 <u 0x230CC25C<32> l2305AADE
l2305AADE:
	a5_35 = Mem41[a2_15:word32] + 8<32>
	Mem45[a2_15:byte] = 2<8>
l2305AAAC:
	word32 a5_48 = 0x230CC25C<32>
l2305AABE:
	branch a5_48 <u 0x230CC2DC<32> l2305AAE8
l2305AAE8:
	a5_48 = Mem54[a2_15:word32] + 8<32>
	Mem58[a2_15:byte] = 2<8>
l2305AAC2:
	word32 a5_61 = 0x230CC2DC<32>
l2305AAD4:
	branch a5_61 <u 0x230CC2DC<32> l2305AAF2
l2305AAF2:
	a5_61 = Mem67[a2_15:word32] + 8<32>
	Mem71[a2_15:byte] = 2<8>
l2305AAD8:
	return ra_19
blog_init_exit:


void ota_dump_cmd(word32 ra, word32 a3, word32 s6, word32 dwArg0C, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] s6:[0..31] Stack +000C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
ota_dump_cmd_entry:
l2305AAFC:
l2305AAFC_thunk_hal_boot2_dump:
	hal_boot2_dump(ra, a3, s6, dwArg0C, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0118)
	return
ota_dump_cmd_exit:


void ota_tcp_cmd.part.0(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg48)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] s4:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0048:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
ota_tcp_cmd.part.0_entry:
l2305AB00:
	word32 a0_1284
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 a0_31 = Mem29[a0 + 4<i32>:word32]
	word32 stackArg120 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg312 = <invalid>
	word32 stackArg328 = <invalid>
	word32 a4_1700
	word32 a3_1699
	word32 a0_1697
	word32 a2_1698
	lwip_gethostbyname(ra, s0, a0, a3, mstatus, stackArg120, stackArg184, stackArg248, stackArg264, stackArg312, stackArg328, out a0_1697, out a2_1698, out a3_1699, out a4_1700)
	branch a0_31 != 0<32> l2305AB82
l2305AB82:
	word32 a0_41
	word32 a3_44
	word32 s0_1708
	word32 s5_1710
	word32 s6_1711
	word32 s2_1709
	word32 ra_57 = bl_mtd_open(ra, 0x230BEF20<32>, a3, a4, a5, s3, mstatus, dwLoc0140, dwLoc013C, dwLoc0110, dwLoc010C, dwLocE8, dwLocC4, dwLoc9C, dwLoc88, dwLoc48, s8, s0, out s0_1708, out a0_41, out a3_44, out s2_1709, out s5_1710, out s6_1711)
	branch a0_41 == 0<32> l2305ABA0
l2305ABA0:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg52 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg296 = <invalid>
	word32 stackArg312 = <invalid>
	word32 stackArg328 = <invalid>
	word32 stackArg360 = <invalid>
	word32 a3_1727
	word32 s2_1728
	word32 s5_1729
	lwip_socket(ra, a1, a2, a3, mstatus, stackArg52, stackArg88, stackArg104, stackArg152, stackArg168, stackArg216, stackArg232, stackArg248, stackArg264, stackArg296, stackArg312, stackArg328, stackArg360, out a3_1727, out s2_1728, out s5_1729)
	branch true l2305ABC4
l2305ABC4:
	word32 a2_1195
	word32 a5_1192
	word32 a5_1757
	word32 a4_1756
	word32 a2_1754
	word32 a3_1755
	word32 a1_1753
	word32 t1_1751
	word32 a0_1752
	word32 ra_81 = memset(ra_57, fp + -324<i32>, 0<32>, 0x10<32>, out t1_1751, out a0_1752, out a1_1753, out a2_1754, out a3_1755, out a4_1756, out a5_1757)
	word32 a5_89
	lwip_htons(0xFFFD05<32>, out a5_89)
	word32 a5_94 = Mem91[Mem91[a5_89:word32]:word32]
	word32 a3_100
	word32 a4_101
	word32 a5_102
	word32 a0_114
	word32 a3_117
	word32 a2_1758
	word32 s8_1768
	word32 s1_1759
	word32 s4_1767
	word32 a1_1760
	word32 a2_1761
	word32 s2_1765
	word32 s3_1766
	word32 a6_1764
	word32 a4_1762
	word32 a5_1763
	pvPortMalloc(ra_81, ip4addr_ntoa(out a2_1758, out a3_100, out a4_101, out a5_102), 512<i32>, a3_100, a4_101, a5_102, mstatus, dwLoc0110, dwLoc010C, dwLocC4, s4, dwArg28, out s1_1759, out a0_114, out a1_1760, out a2_1761, out a3_117, out a4_1762, out a5_1763, out a6_1764, out s2_1765, out s3_1766, out s4_1767, out s8_1768)
	hal_boot2_get_active_partition()
	word32 a3_139
	word32 a3_164
	word32 s10_1802
	word32 s11_1803
	word32 t4_1804
	word32 a4_1791
	word32 s9_1801
	word32 a5_1792
	word32 s8_1800
	word32 a7_1793
	word32 s2_1794
	word32 s6_1798
	word32 s7_1799
	word32 s5_1797
	word32 s3_1795
	word32 s4_1796
	word32 s6_1780
	word32 a2_1790
	word32 s7_1781
	word32 a1_1789
	word32 s8_1782
	word32 s9_1783
	word32 s1_1787
	word32 a0_1788
	word32 t4_1786
	word32 s10_1784
	word32 s11_1785
	word32 s1_1769
	word32 s5_1779
	word32 a0_1770
	word32 s4_1778
	word32 a1_1771
	word32 a2_1772
	word32 s2_1776
	word32 s3_1777
	word32 a7_1775
	word32 a4_1773
	word32 a5_1774
	word32 ra_167 = printf(printf(ra_81, 0x230BEF5C<32>, a3_117, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1769, out a0_1770, out a1_1771, out a2_1772, out a3_139, out a4_1773, out a5_1774, out a7_1775, out s2_1776, out s3_1777, out s4_1778, out s5_1779, out s6_1780, out s7_1781, out s8_1782, out s9_1783, out s10_1784, out s11_1785, out t4_1786), 0x230BEF84<32>, a3_139, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1787, out a0_1788, out a1_1789, out a2_1790, out a3_164, out a4_1791, out a5_1792, out a7_1793, out s2_1794, out s3_1795, out s4_1796, out s5_1797, out s6_1798, out s7_1799, out s8_1800, out s9_1801, out s10_1802, out s11_1803, out t4_1804)
	hal_boot2_get_active_entries(a0, a1)
	word32 s0_1051 = a0_114
	branch true l2305AC3E
l2305AC3E:
	word32 a3_201
	word32 a3_227
	word32 a3_252
	word32 s3_1877
	word32 s2_1876
	word32 a7_1875
	word32 a5_1874
	word32 a4_1873
	word32 a2_1872
	word32 a1_1871
	word32 a0_1870
	word32 s1_1869
	word32 t4_1868
	word32 s11_1867
	word32 s10_1866
	word32 s7_1863
	word32 s8_1864
	word32 s9_1865
	word32 s5_1861
	word32 s6_1862
	word32 s4_1860
	word32 s3_1859
	word32 s2_1858
	word32 a7_1857
	word32 a5_1856
	word32 a4_1855
	word32 s10_1848
	word32 s11_1849
	word32 a1_1853
	word32 a2_1854
	word32 a0_1852
	word32 t4_1850
	word32 s1_1851
	word32 s3_1841
	word32 s4_1842
	word32 s8_1846
	word32 s9_1847
	word32 s7_1845
	word32 s5_1843
	word32 s6_1844
	word32 s2_1840
	word32 a7_1839
	word32 a5_1838
	word32 a1_1835
	word32 a2_1836
	word32 a4_1837
	word32 a0_1834
	word32 s1_1833
	word32 s4_1878
	word32 s5_1879
	word32 s6_1880
	word32 s7_1881
	word32 s8_1882
	word32 s9_1883
	word32 s10_1884
	word32 s11_1885
	word32 t4_1886
	word32 ra_255 = printf(printf(printf(ra_167, 0x230BEFC8<32>, fp + -64<i32>, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1833, out a0_1834, out a1_1835, out a2_1836, out a3_201, out a4_1837, out a5_1838, out a7_1839, out s2_1840, out s3_1841, out s4_1842, out s5_1843, out s6_1844, out s7_1845, out s8_1846, out s9_1847, out s10_1848, out s11_1849, out t4_1850), 0x230BEFF0<32>, a3_201, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1851, out a0_1852, out a1_1853, out a2_1854, out a3_227, out a4_1855, out a5_1856, out a7_1857, out s2_1858, out s3_1859, out s4_1860, out s5_1861, out s6_1862, out s7_1863, out s8_1864, out s9_1865, out s10_1866, out s11_1867, out t4_1868), 0x230BF028<32>, a3_227, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1869, out a0_1870, out a1_1871, out a2_1872, out a3_252, out a4_1873, out a5_1874, out a7_1875, out s2_1876, out s3_1877, out s4_1878, out s5_1879, out s6_1880, out s7_1881, out s8_1882, out s9_1883, out s10_1884, out s11_1885, out t4_1886)
	0<32> = dwLoc010C
	bl_mtd_erase_all(ra, a1)
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 a3_276
	word32 a3_301
	word32 s1_1887
	word32 a0_1888
	word32 a1_1889
	word32 a2_1890
	word32 a4_1891
	word32 a5_1892
	word32 a7_1893
	word32 s2_1894
	word32 s3_1895
	word32 s4_1896
	word32 s5_1897
	word32 s6_1898
	word32 s7_1899
	word32 s8_1900
	word32 s9_1901
	word32 s10_1902
	word32 s11_1903
	word32 t4_1904
	word32 s1_1905
	word32 a0_1906
	word32 a1_1907
	word32 a2_1908
	word32 a4_1909
	word32 a5_1910
	word32 a7_1911
	word32 s2_1912
	word32 s3_1913
	word32 s5_1914
	word32 s6_1915
	word32 s7_1916
	word32 s8_1917
	word32 s9_1918
	word32 s10_1919
	word32 s11_1920
	word32 t4_1921
	word32 s4_1072
	word32 ra_304 = printf(printf(ra_255, 0x230BF054<32>, a3_252, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1887, out a0_1888, out a1_1889, out a2_1890, out a3_276, out a4_1891, out a5_1892, out a7_1893, out s2_1894, out s3_1895, out s4_1896, out s5_1897, out s6_1898, out s7_1899, out s8_1900, out s9_1901, out s10_1902, out s11_1903, out t4_1904), 0x230BF05C<32>, a3_276, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1905, out a0_1906, out a1_1907, out a2_1908, out a3_301, out a4_1909, out a5_1910, out a7_1911, out s2_1912, out s3_1913, out s4_1072, out s5_1914, out s6_1915, out s7_1916, out s8_1917, out s9_1918, out s10_1919, out s11_1920, out t4_1921)
	word32 stackArg52 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg200 = <invalid>
	word32 a0_1926
	word32 a3_1927
	lwip_connect(a0, a1, mstatus, stackArg52, stackArg72, stackArg136, stackArg200, out a0_1926, out a3_1927)
	s0_1051 = dwLocEC
	branch s4_1072 == 0<32> l2305ACCA
l2305ACCA:
	utils_sha256_init(ra, a0)
	utils_sha256_starts(a0)
	word32 t1_1959
	word32 a0_1960
	word32 a1_1961
	word32 a2_1962
	word32 a4_1963
	word32 a5_1964
	word32 a3_1063
	word32 ra_1066 = memset(ra_304, fp + -308<i32>, 0<32>, 32<i32>, out t1_1959, out a0_1960, out a1_1961, out a2_1962, out a3_1063, out a4_1963, out a5_1964)
l2305ACF6:
	word32 a2_1114
	word32 a5_1111
	lwip_read(a0, a2)
	branch s4_1072 >= 0<32> l2305AD38
l2305AD38:
	branch s4_1072 != 0<32> l2305AD4C
l2305AD4C:
	word32 a4_366
	word32 s1_369
	word32 s10_370
	word32 s11_371
	word32 s2_372
	word32 s3_373
	word32 s9_379
	word32 a0_2024
	word32 a1_2025
	word32 a2_2026
	word32 a5_2027
	word32 a7_2028
	word32 s5_2029
	word32 s6_2030
	word32 s7_2031
	word32 s8_2032
	word32 t4_2033
	ra_1066 = printf(ra_1066, 0x230BF0EC<32>, a3_1063, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_369, out a0_2024, out a1_2025, out a2_2026, out a3_1063, out a4_366, out a5_2027, out a7_2028, out s2_372, out s3_373, out s4_1072, out s5_2029, out s6_2030, out s7_2031, out s8_2032, out s9_379, out s10_370, out s11_371, out t4_2033)
	word32 s9_382 = s9_379 + s11_371
	branch s2_372 != 0<32> l2305AEC6
l2305AEC6:
	s0_1051 = dwLoc8C
	branch a4_366 == s1_369 l2305AEE8
l2305AECC:
	branch s9_382 <=u 511<i32> l2305ACF6
l2305AED4:
	branch s9_382 == s10_370 l2305AEE8
l2305AEE8:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 s1_406
	word32 s2_409
	word32 s5_412
	word32 s9_416
	word32 a0_2265
	word32 a1_2266
	word32 a2_2267
	word32 a3_2268
	word32 a4_2269
	word32 a5_2270
	word32 a7_2271
	word32 s3_2272
	word32 s4_2273
	word32 s6_2274
	word32 s7_2275
	word32 s8_2276
	word32 s10_2277
	word32 s11_2278
	word32 t4_2279
	word32 ra_405 = printf(ra_1066, 0x230BF244<32>, dwLoc8C, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_406, out a0_2265, out a1_2266, out a2_2267, out a3_2268, out a4_2269, out a5_2270, out a7_2271, out s2_409, out s3_2272, out s4_2273, out s5_412, out s6_2274, out s7_2275, out s8_2276, out s9_416, out s10_2277, out s11_2278, out t4_2279)
	word32 stackArg72 = <invalid>
	word32 stackArg168 = <invalid>
	word32 a3_2282
	word32 a5_2283
	word32 a7_2284
	utils_sha256_update(t1, a1, a2, a3, a5, a7, stackArg72, stackArg168, out a3_2282, out a5_2283, out a7_2284)
	0<32> = dwLoc010C
	word32 a5_430
	word32 s1_434
	word32 s0_2285
	word32 a0_2286
	word32 a1_2287
	word32 a4_2288
	word32 s2_2289
	word32 s3_2290
	word32 s5_2291
	word32 s7_2292
	word32 s6_444
	ra_1066 = bl_mtd_write(ra_405, s1_406, s5_412, s9_416, dwLoc8C, s2_409, dwLoc0140, dwLoc013C, dwLoc0118, dwLocF4, out s0_2285, out s1_434, out a0_2286, out a1_2287, out a3_1063, out a4_2288, out a5_430, out s2_2289, out s3_2290, out s4_1072, out s5_2291, out s6_444, out s7_2292)
	s0_1051 = dwLoc6C
	branch s1_434 != a5_430 l2305ACF6
l2305AF1C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg40 = <invalid>
	word32 stackArg136 = <invalid>
	utils_sha256_finish(t1, a2, a5, a7, stackArg40, stackArg136)
	word32 a0_2295
	word32 a1_2296
	word32 a2_2297
	word32 a4_2298
	word32 a5_2299
	word32 s4_2300
	word32 s8_2301
	puts(0x230BF264<32>, out a0_2295, out a1_2296, out a2_2297, out a4_2298, out a5_2299, out s4_2300, out s8_2301)
l2305AF34:
	word32 s11_492
	word32 s9_500
	word32 s1_2302
	word32 a0_2303
	word32 a1_2304
	word32 a2_2305
	word32 a4_2306
	word32 a5_2307
	word32 a7_2308
	word32 s2_2309
	word32 s3_2310
	word32 s4_2311
	word32 s5_2312
	word32 s7_2313
	word32 s8_2314
	word32 s10_2315
	word32 t4_2316
	ra_1066 = printf(ra_1066, s6_444 + 1116<i32>, a3_1063, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2302, out a0_2303, out a1_2304, out a2_2305, out a3_1063, out a4_2306, out a5_2307, out a7_2308, out s2_2309, out s3_2310, out s4_2311, out s5_2312, out s6_444, out s7_2313, out s8_2314, out s9_500, out s10_2315, out s11_492, out t4_2316)
	branch s9_500 != s11_492 l2305AF34
l2305AF4A:
	word32 a0_2317
	word32 a1_2318
	word32 a2_2319
	word32 a4_2320
	word32 a5_2321
	word32 s4_2322
	word32 s8_2323
	puts(0x230BF284<32>, out a0_2317, out a1_2318, out a2_2319, out a4_2320, out a5_2321, out s4_2322, out s8_2323)
l2305AF5C:
	word32 s11_539
	word32 s3_541
	word32 s9_547
	word32 s1_2324
	word32 a0_2325
	word32 a1_2326
	word32 a2_2327
	word32 a4_2328
	word32 a5_2329
	word32 a7_2330
	word32 s2_2331
	word32 s4_2332
	word32 s5_2333
	word32 s7_2334
	word32 s8_2335
	word32 s10_2336
	word32 t4_2337
	ra_1066 = printf(ra_1066, s6_444 + 1116<i32>, a3_1063, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2324, out a0_2325, out a1_2326, out a2_2327, out a3_1063, out a4_2328, out a5_2329, out a7_2330, out s2_2331, out s3_541, out s4_2332, out s5_2333, out s6_444, out s7_2334, out s8_2335, out s9_547, out s10_2336, out s11_539, out t4_2337)
	branch s9_547 != s11_539 l2305AF5C
l2305AF72:
	word32 a0_2338
	word32 a1_2339
	word32 a2_2340
	word32 a4_2341
	word32 a5_2342
	word32 s4_2343
	word32 s8_2344
	puts(s3_541 + -1792<i32>, out a0_2338, out a1_2339, out a2_2340, out a4_2341, out a5_2342, out s4_2343, out s8_2344)
	word32 a3_566
	word32 a1_2345
	word32 a2_2346
	word32 a4_2347
	word32 a5_2348
	branch memcmp(fp + -276<i32>, fp + -308<i32>, 32<i32>, out a1_2345, out a2_2346, out a3_566, out a4_2347, out a5_2348) == 0<32> l2305AF96
l2305AF96:
	word32 a3_577
	word32 a3_603
	word32 s1_2366
	word32 a0_2367
	word32 a1_2368
	word32 a2_2369
	word32 a4_2370
	word32 a5_2371
	word32 a7_2372
	word32 s2_2373
	word32 s3_2374
	word32 s4_2375
	word32 s5_2376
	word32 s6_2377
	word32 s7_2378
	word32 s8_2379
	word32 s9_2380
	word32 s10_2381
	word32 s11_2382
	word32 t4_2383
	word32 s1_2384
	word32 a0_2385
	word32 a1_2386
	word32 a2_2387
	word32 a4_2388
	word32 a5_2389
	word32 a7_2390
	word32 s2_2391
	word32 s3_2392
	word32 s4_2393
	word32 s5_2394
	word32 s6_2395
	word32 s7_2396
	word32 s8_2397
	word32 s9_2398
	word32 s10_2399
	word32 s11_2400
	word32 t4_2401
	word32 ra_606 = printf(printf(ra_1066, 0x230BF2C8<32>, a3_566, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2366, out a0_2367, out a1_2368, out a2_2369, out a3_577, out a4_2370, out a5_2371, out a7_2372, out s2_2373, out s3_2374, out s4_2375, out s5_2376, out s6_2377, out s7_2378, out s8_2379, out s9_2380, out s10_2381, out s11_2382, out t4_2383), 0x230BF2F4<32>, a3_577, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2384, out a0_2385, out a1_2386, out a2_2387, out a3_603, out a4_2388, out a5_2389, out a7_2390, out s2_2391, out s3_2392, out s4_2393, out s5_2394, out s6_2395, out s7_2396, out s8_2397, out s9_2398, out s10_2399, out s11_2400, out t4_2401)
	hal_boot2_update_ptable(a0)
	word32 s1_2402
	word32 a0_2403
	word32 a1_2404
	word32 a2_2405
	word32 a4_2406
	word32 a5_2407
	word32 a7_2408
	word32 s2_2409
	word32 s3_2410
	word32 s5_2411
	word32 s6_2412
	word32 s7_2413
	word32 s8_2414
	word32 s9_2415
	word32 s10_2416
	word32 s11_2417
	word32 t4_2418
	ra_1066 = printf(ra_606, 0x230BF32C<32>, a3_603, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2402, out a0_2403, out a1_2404, out a2_2405, out a3_1063, out a4_2406, out a5_2407, out a7_2408, out s2_2409, out s3_2410, out s4_1072, out s5_2411, out s6_2412, out s7_2413, out s8_2414, out s9_2415, out s10_2416, out s11_2417, out t4_2418)
	hal_reboot(mstatus)
	s0_1051 = dwLocEC
l2305AF88:
	word32 s1_2349
	word32 a0_2350
	word32 a1_2351
	word32 a3_2352
	word32 a4_2353
	word32 a7_2354
	word32 s2_2355
	word32 s3_2356
	word32 s4_2357
	word32 s5_2358
	word32 s6_2359
	word32 s7_2360
	word32 s8_2361
	word32 s9_2362
	word32 s10_2363
	word32 s11_2364
	word32 t4_2365
	printf(ra_1066, 0x230BF2A4<32>, a3_566, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2349, out a0_2350, out a1_2351, out a2_1114, out a3_2352, out a4_2353, out a5_1111, out a7_2354, out s2_2355, out s3_2356, out s4_2357, out s5_2358, out s6_2359, out s7_2360, out s8_2361, out s9_2362, out s10_2363, out s11_2364, out t4_2365)
l2305AED8:
	word32 s1_2246
	word32 a0_2247
	word32 a1_2248
	word32 a2_2249
	word32 a3_2250
	word32 a4_2251
	word32 a5_2252
	word32 a7_2253
	word32 s2_2254
	word32 s3_2255
	word32 s4_2256
	word32 s5_2257
	word32 s6_2258
	word32 s7_2259
	word32 s8_2260
	word32 s9_2261
	word32 s10_2262
	word32 s11_2263
	word32 t4_2264
	printf(ra_1066, 0x230BF104<32>, a3_1063, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2246, out a0_2247, out a1_2248, out a2_2249, out a3_2250, out a4_2251, out a5_2252, out a7_2253, out s2_2254, out s3_2255, out s4_2256, out s5_2257, out s6_2258, out s7_2259, out s8_2260, out s9_2261, out s10_2262, out s11_2263, out t4_2264)
l2305AEE6:
l2305AD62:
	branch s9_382 <=u 511<i32> l2305ACF6
l2305AD6A:
	branch s9_382 == s10_370 l2305AD7E
l2305AD7E:
	word32 a1_2053
	word32 a2_2054
	word32 a3_2055
	word32 a4_2056
	word32 a5_2057
	word32 a6_2058
	word32 a7_2059
	memcpy(fp + -244<i32>, s0_1051, 0x10<32>, out a1_2053, out a2_2054, out a3_2055, out a4_2056, out a5_2057, out a6_2058, out a7_2059)
	word32 a0_2060
	word32 a1_2061
	word32 a2_2062
	word32 a4_2063
	word32 a5_2064
	word32 s4_2065
	word32 s8_2066
	puts(0x230BF134<32>, out a0_2060, out a1_2061, out a2_2062, out a4_2063, out a5_2064, out s4_2065, out s8_2066)
	word32 a0_2067
	word32 a1_2068
	word32 a2_2069
	word32 a4_2070
	word32 a5_2071
	word32 s4_2072
	word32 s8_2073
	puts(fp + -244<i32>, out a0_2067, out a1_2068, out a2_2069, out a4_2070, out a5_2071, out s4_2072, out s8_2073)
	word32 a0_2074
	word32 a1_2075
	word32 a2_2076
	word32 a4_2077
	word32 a5_2078
	word32 s4_2079
	word32 s8_2080
	puts(s3_373 + -1792<i32>, out a0_2074, out a1_2075, out a2_2076, out a4_2077, out a5_2078, out s4_2079, out s8_2080)
	word32 a1_2081
	word32 a2_2082
	word32 a3_2083
	word32 a4_2084
	word32 a5_2085
	word32 a6_2086
	word32 a7_2087
	memcpy(fp + -244<i32>, s0_1051 + 16<i32>, 4<32>, out a1_2081, out a2_2082, out a3_2083, out a4_2084, out a5_2085, out a6_2086, out a7_2087)
	word32 a0_2088
	word32 a1_2089
	word32 a2_2090
	word32 a4_2091
	word32 a5_2092
	word32 s4_2093
	word32 s8_2094
	puts(0x230BF154<32>, out a0_2088, out a1_2089, out a2_2090, out a4_2091, out a5_2092, out s4_2093, out s8_2094)
	word32 a0_2095
	word32 a1_2096
	word32 a2_2097
	word32 a4_2098
	word32 a5_2099
	word32 s4_2100
	word32 s8_2101
	puts(fp + -244<i32>, out a0_2095, out a1_2096, out a2_2097, out a4_2098, out a5_2099, out s4_2100, out s8_2101)
	word32 s8_796
	word32 a0_2102
	word32 a1_2103
	word32 a2_2104
	word32 a4_2105
	word32 a5_2106
	word32 s4_2107
	puts(s3_373 + -1792<i32>, out a0_2102, out a1_2103, out a2_2104, out a4_2105, out a5_2106, out s4_2107, out s8_796)
	word32 a1_2108
	word32 a3_2109
	word32 a4_2110
	word32 a5_2111
	strstr(ra_1066, fp + -244<i32>, s8_796 + -256<i32>, out a1_2108, out a3_2109, out a4_2110, out a5_2111)
	word32 a3_819
	word32 a1_2112
	word32 a2_2113
	word32 a4_2114
	word32 a5_2115
	word32 a6_2116
	word32 a7_2117
	memcpy(fp + -328<i32>, s0_1051 + 20<i32>, 4<32>, out a1_2112, out a2_2113, out a3_819, out a4_2114, out a5_2115, out a6_2116, out a7_2117)
	word32 s3_843
	word32 s1_2118
	word32 a0_2119
	word32 a1_2120
	word32 a2_2121
	word32 a3_2122
	word32 a4_2123
	word32 a5_2124
	word32 a7_2125
	word32 s2_2126
	word32 s4_2127
	word32 s5_2128
	word32 s7_2129
	word32 s8_2130
	word32 s9_2131
	word32 s10_2132
	word32 s11_2133
	word32 t4_2134
	word32 s6_1012
	word32 ra_1004 = printf(ra_1066, 0x230BF174<32>, a3_819, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2118, out a0_2119, out a1_2120, out a2_2121, out a3_2122, out a4_2123, out a5_2124, out a7_2125, out s2_2126, out s3_843, out s4_2127, out s5_2128, out s6_1012, out s7_2129, out s8_2130, out s9_2131, out s10_2132, out s11_2133, out t4_2134)
	word32 a1_2135
	word32 a2_2136
	word32 a3_2137
	word32 a4_2138
	word32 a5_2139
	word32 a6_2140
	word32 a7_2141
	memcpy(fp + -244<i32>, dwLocEC + 32<i32>, 0x10<32>, out a1_2135, out a2_2136, out a3_2137, out a4_2138, out a5_2139, out a6_2140, out a7_2141)
	word32 a0_2142
	word32 a1_2143
	word32 a2_2144
	word32 a4_2145
	word32 a5_2146
	word32 s4_2147
	word32 s8_2148
	puts(0x230BF1B0<32>, out a0_2142, out a1_2143, out a2_2144, out a4_2145, out a5_2146, out s4_2147, out s8_2148)
	word32 a0_2149
	word32 a1_2150
	word32 a2_2151
	word32 a4_2152
	word32 a5_2153
	word32 s4_2154
	word32 s8_2155
	puts(fp + -244<i32>, out a0_2149, out a1_2150, out a2_2151, out a4_2152, out a5_2153, out s4_2154, out s8_2155)
	word32 a0_2156
	word32 a1_2157
	word32 a2_2158
	word32 a4_2159
	word32 a5_2160
	word32 s4_2161
	word32 s8_2162
	puts(s3_843 + -1792<i32>, out a0_2156, out a1_2157, out a2_2158, out a4_2159, out a5_2160, out s4_2161, out s8_2162)
	word32 a1_2163
	word32 a2_2164
	word32 a3_2165
	word32 a4_2166
	word32 a5_2167
	word32 a6_2168
	word32 a7_2169
	memcpy(fp + -244<i32>, dwLocEC + 48<i32>, 0x10<32>, out a1_2163, out a2_2164, out a3_2165, out a4_2166, out a5_2167, out a6_2168, out a7_2169)
	word32 a0_2170
	word32 a1_2171
	word32 a2_2172
	word32 a4_2173
	word32 a5_2174
	word32 s4_2175
	word32 s8_2176
	puts(0x230BF1D0<32>, out a0_2170, out a1_2171, out a2_2172, out a4_2173, out a5_2174, out s4_2175, out s8_2176)
	word32 a0_2177
	word32 a1_2178
	word32 a2_2179
	word32 a4_2180
	word32 a5_2181
	word32 s4_2182
	word32 s8_2183
	puts(fp + -244<i32>, out a0_2177, out a1_2178, out a2_2179, out a4_2180, out a5_2181, out s4_2182, out s8_2183)
	word32 a0_2184
	word32 a1_2185
	word32 a2_2186
	word32 a4_2187
	word32 a5_2188
	word32 s4_2189
	word32 s8_2190
	puts(s3_843 + -1792<i32>, out a0_2184, out a1_2185, out a2_2186, out a4_2187, out a5_2188, out s4_2189, out s8_2190)
	word32 a1_2191
	word32 a2_2192
	word32 a4_2193
	word32 a5_2194
	word32 a6_2195
	word32 a7_2196
	word32 a3_1001
	memcpy(fp + -244<i32>, dwLocEC + 64<i32>, 32<i32>, out a1_2191, out a2_2192, out a3_1001, out a4_2193, out a5_2194, out a6_2195, out a7_2196)
	word32 a0_2197
	word32 a1_2198
	word32 a2_2199
	word32 a4_2200
	word32 a5_2201
	word32 s4_2202
	word32 s8_2203
	puts(0x230BF1F0<32>, out a0_2197, out a1_2198, out a2_2199, out a4_2200, out a5_2201, out s4_2202, out s8_2203)
l2305AE6E:
	word32 s10_1006
	word32 s11_1007
	word32 s2_1008
	word32 s3_1009
	word32 s9_1015
	word32 s1_2204
	word32 a0_2205
	word32 a1_2206
	word32 a2_2207
	word32 a4_2208
	word32 a5_2209
	word32 a7_2210
	word32 s4_2211
	word32 s5_2212
	word32 s7_2213
	word32 s8_2214
	word32 t4_2215
	ra_1004 = printf(ra_1004, s6_1012 + 1116<i32>, a3_1001, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2204, out a0_2205, out a1_2206, out a2_2207, out a3_1001, out a4_2208, out a5_2209, out a7_2210, out s2_1008, out s3_1009, out s4_2211, out s5_2212, out s6_1012, out s7_2213, out s8_2214, out s9_1015, out s10_1006, out s11_1007, out t4_2215)
	branch s2_1008 != s10_1006 l2305AE6E
l2305AE86:
	word32 a0_2216
	word32 a1_2217
	word32 a2_2218
	word32 a4_2219
	word32 a5_2220
	word32 s4_2221
	word32 s8_2222
	puts(s3_1009 + -1792<i32>, out a0_2216, out a1_2217, out a2_2218, out a4_2219, out a5_2220, out s4_2221, out s8_2222)
	word32 a3_1037
	word32 a1_2223
	word32 a2_2224
	word32 a4_2225
	word32 a5_2226
	word32 a6_2227
	word32 a7_2228
	memcpy(fp + -276<i32>, s9_1015, 32<i32>, out a1_2223, out a2_2224, out a3_1037, out a4_2225, out a5_2226, out a6_2227, out a7_2228)
	branch s11_1007 != 0<32> l2305AEAE
l2305AEA6:
l2305AEAE:
	s0_1051 = dwLocEC
	word32 s1_2229
	word32 a0_2230
	word32 a1_2231
	word32 a2_2232
	word32 a4_2233
	word32 a5_2234
	word32 a7_2235
	word32 s2_2236
	word32 s3_2237
	word32 s5_2238
	word32 s6_2239
	word32 s7_2240
	word32 s8_2241
	word32 s9_2242
	word32 s10_2243
	word32 s11_2244
	word32 t4_2245
	ra_1066 = printf(ra_1004, 0x230BF20C<32>, a3_1037, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2229, out a0_2230, out a1_2231, out a2_2232, out a3_1063, out a4_2233, out a5_2234, out a7_2235, out s2_2236, out s3_2237, out s4_1072, out s5_2238, out s6_2239, out s7_2240, out s8_2241, out s9_2242, out s10_2243, out s11_2244, out t4_2245)
l2305AD6E:
	word32 s1_2034
	word32 a0_2035
	word32 a1_2036
	word32 a2_2037
	word32 a3_2038
	word32 a4_2039
	word32 a5_2040
	word32 a7_2041
	word32 s2_2042
	word32 s3_2043
	word32 s4_2044
	word32 s5_2045
	word32 s6_2046
	word32 s7_2047
	word32 s8_2048
	word32 s9_2049
	word32 s10_2050
	word32 s11_2051
	word32 t4_2052
	printf(ra_1066, 0x230BF104<32>, a3_1063, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2034, out a0_2035, out a1_2036, out a2_2037, out a3_2038, out a4_2039, out a5_2040, out a7_2041, out s2_2042, out s3_2043, out s4_2044, out s5_2045, out s6_2046, out s7_2047, out s8_2048, out s9_2049, out s10_2050, out s11_2051, out t4_2052)
l2305AD7C:
l2305AD3C:
	word32 s1_2007
	word32 a0_2008
	word32 a1_2009
	word32 a3_2010
	word32 a4_2011
	word32 a7_2012
	word32 s2_2013
	word32 s3_2014
	word32 s4_2015
	word32 s5_2016
	word32 s6_2017
	word32 s7_2018
	word32 s8_2019
	word32 s9_2020
	word32 s10_2021
	word32 s11_2022
	word32 t4_2023
	printf(ra_1066, 0x230BF0A4<32>, a3_1063, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_2007, out a0_2008, out a1_2009, out a2_1114, out a3_2010, out a4_2011, out a5_1111, out a7_2012, out s2_2013, out s3_2014, out s4_2015, out s5_2016, out s6_2017, out s7_2018, out s8_2019, out s9_2020, out s10_2021, out s11_2022, out t4_2023)
l2305AD0E:
	word32 s1_1965
	word32 a0_1966
	word32 a1_1967
	word32 a3_1968
	word32 a4_1969
	word32 a7_1970
	word32 s2_1971
	word32 s3_1972
	word32 s4_1973
	word32 s5_1974
	word32 s6_1975
	word32 s7_1976
	word32 s8_1977
	word32 s9_1978
	word32 s10_1979
	word32 s11_1980
	word32 t4_1981
	printf(ra_1066, 0x230BF08C<32>, a3_1063, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1965, out a0_1966, out a1_1967, out a2_1114, out a3_1968, out a4_1969, out a5_1111, out a7_1970, out s2_1971, out s3_1972, out s4_1973, out s5_1974, out s6_1975, out s7_1976, out s8_1977, out s9_1978, out s10_1979, out s11_1980, out t4_1981)
l2305AD24:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg72 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg296 = <invalid>
	word32 stackArg328 = <invalid>
	word32 a2_1991
	word32 a3_1992
	word32 a4_1993
	word32 a5_1994
	word32 s3_1995
	lwip_close(ra, a0, a2, mstatus, stackArg72, stackArg120, stackArg136, stackArg184, stackArg200, stackArg216, stackArg264, stackArg296, stackArg328, out a2_1991, out a3_1992, out a4_1993, out a5_1994, out s3_1995)
	word32 s0_1996
	word32 s1_1997
	word32 a0_1998
	word32 a1_1999
	word32 a2_2000
	word32 a3_2001
	word32 a4_2002
	word32 a5_2003
	word32 a6_2004
	word32 s4_2005
	word32 t3_2006
	vPortFree(s0_1051, a2_1114, a5_1111, mstatus, dwArg08, dwArg48, out s0_1996, out s1_1997, out a0_1998, out a1_1999, out a2_2000, out a3_2001, out a4_2002, out a5_2003, out a6_2004, out s4_2005, out t3_2006)
	utils_sha256_free(a0)
l2305ACB6:
	word32 s1_1928
	word32 a0_1929
	word32 a1_1930
	word32 a3_1931
	word32 a4_1932
	word32 a7_1933
	word32 s2_1934
	word32 s3_1935
	word32 s4_1936
	word32 s5_1937
	word32 s6_1938
	word32 s7_1939
	word32 s8_1940
	word32 s9_1941
	word32 s10_1942
	word32 s11_1943
	word32 t4_1944
	printf(ra_304, 0x230BF078<32>, a3_301, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1928, out a0_1929, out a1_1930, out a2_1195, out a3_1931, out a4_1932, out a5_1192, out a7_1933, out s2_1934, out s3_1935, out s4_1936, out s5_1937, out s6_1938, out s7_1939, out s8_1940, out s9_1941, out s10_1942, out s11_1943, out t4_1944)
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg72 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg296 = <invalid>
	word32 stackArg328 = <invalid>
	word32 a2_1954
	word32 a3_1955
	word32 a4_1956
	word32 a5_1957
	word32 s3_1958
	lwip_close(ra, a0, a2, mstatus, stackArg72, stackArg120, stackArg136, stackArg184, stackArg200, stackArg216, stackArg264, stackArg296, stackArg328, out a2_1954, out a3_1955, out a4_1956, out a5_1957, out s3_1958)
l2305AC2A:
	word32 s4_1813
	word32 s5_1814
	word32 s6_1815
	word32 s7_1816
	word32 s11_1820
	word32 t4_1821
	word32 s10_1819
	word32 s8_1817
	word32 s9_1818
	word32 s3_1812
	word32 s2_1811
	word32 s1_1805
	word32 a4_1809
	word32 a7_1810
	word32 a3_1808
	word32 a0_1806
	word32 a1_1807
	printf(ra_167, 0x230BEFA4<32>, a3_164, a5_94, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1805, out a0_1806, out a1_1807, out a2_1195, out a3_1808, out a4_1809, out a5_1192, out a7_1810, out s2_1811, out s3_1812, out s4_1813, out s5_1814, out s6_1815, out s7_1816, out s8_1817, out s9_1818, out s10_1819, out s11_1820, out t4_1821)
l2305AC36:
	word32 a0_1824
	word32 a1_1825
	word32 a2_1826
	word32 a3_1827
	word32 s4_1831
	word32 t3_1832
	word32 a6_1830
	word32 a4_1828
	word32 a5_1829
	word32 s1_1823
	word32 s0_1822
	vPortFree(s0_1051, a2_1195, a5_1192, mstatus, dwArg08, dwArg48, out s0_1822, out s1_1823, out a0_1824, out a1_1825, out a2_1826, out a3_1827, out a4_1828, out a5_1829, out a6_1830, out s4_1831, out t3_1832)
l2305ABB0:
	word32 s11_1747
	word32 t4_1748
	word32 a5_1736
	word32 s10_1746
	word32 a7_1737
	word32 s9_1745
	word32 s2_1738
	word32 s3_1739
	word32 s7_1743
	word32 s8_1744
	word32 s6_1742
	word32 s4_1740
	word32 s5_1741
	word32 a4_1735
	word32 a3_1734
	word32 a1_1732
	word32 a2_1733
	word32 a0_1731
	word32 s1_1730
	printf(ra_57, 0x230BEF48<32>, a3_44, dwLoc0148, dwLoc0128, dwLocE0, dwLocDC, dwLocB8, dwLoc94, out s1_1730, out a0_1731, out a1_1732, out a2_1733, out a3_1734, out a4_1735, out a5_1736, out a7_1737, out s2_1738, out s3_1739, out s4_1740, out s5_1741, out s6_1742, out s7_1743, out s8_1744, out s9_1745, out s10_1746, out s11_1747, out t4_1748)
l2305ABBC:
	0<32> = dwLoc010C
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg328 = <invalid>
	word32 stackArg392 = <invalid>
	bl_mtd_close(a0, a2, a5, mstatus, stackArg328, stackArg392)
l2305AB96:
	a0_1284 = 0x230BEF24<32>
l2305AB3E:
	a0_1284 = 0x230BEF08<32>
l2305AB46:
	word32 a4_1704
	word32 a1_1702
	word32 a5_1705
	word32 a2_1703
	word32 s4_1706
	word32 s8_1707
	word32 a0_1701
	puts(a0_1284, out a0_1701, out a1_1702, out a2_1703, out a4_1704, out a5_1705, out s4_1706, out s8_1707)
l2305AB4A:
	return
ota_tcp_cmd.part.0_exit:


void ota_tcp_cmd(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s3, word32 s4, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg48, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] s4:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ota_tcp_cmd_entry:
l2305AFCC:
	branch a2 == 2<32> l2305AFE0
l2305AFE0:
l2305AFE2_thunk_ota_tcp_cmd.part.0:
	ota_tcp_cmd.part.0(ra, s0, a3, a3, a4, 2<32>, s3, s4, s8, mstatus, dwArg08, dwArg28, dwArg48)
	return
l2305AFD2:
	word32 a3_32 = Mem0[a1:word32]
l2305AFDC_thunk_printf:
	word32 s1_107
	word32 a0_108
	word32 a1_109
	word32 a2_110
	word32 a3_111
	word32 a4_112
	word32 a5_113
	word32 a7_114
	word32 s2_115
	word32 s3_116
	word32 s4_117
	word32 s5_118
	word32 s6_119
	word32 s7_120
	word32 s8_121
	word32 s9_122
	word32 s10_123
	word32 s11_124
	word32 t4_125
	printf(ra, 0x230BF344<32>, a3_32, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_107, out a0_108, out a1_109, out a2_110, out a3_111, out a4_112, out a5_113, out a7_114, out s2_115, out s3_116, out s4_117, out s5_118, out s6_119, out s7_120, out s8_121, out s9_122, out s10_123, out s11_124, out t4_125)
	return
ota_tcp_cmd_exit:


void bl_sys_ota_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
bl_sys_ota_cli_init_entry:
l2305AFE6:
	return
bl_sys_ota_cli_init_exit:


void wifiprov_ccc_cfg_changed()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
wifiprov_ccc_cfg_changed_entry:
l2305AFEA:
	return
wifiprov_ccc_cfg_changed_exit:


void __bl_ble_sync_task(word32 ra, word32 s0, word32 a0, word32 a5, word32 s4, word32 s8, word32 s10, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s4:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 sp
__bl_ble_sync_task_entry:
l2305AFEC:
	cJSON_InitHooks(0x230CBA8C<32>, a5)
	word32 a0_40
	word32 ra_141 = pro_trans_init(ra, a0 + 0xFFFEF0<32>, 0x230CBA94<32>, mstatus, dwLoc0108, s8, out a0_40)
	Mem57[a0 + 1036<i32>:word32] = a0_40
	Mem58[a0 + 1566<i32>:byte] = 1<8>
	word32 a0_64
	word32 s3_485
	word32 a5_483
	word32 a3_481
	word32 s4_486
	word32 s2_484
	word32 s1_479
	word32 a2_480
	word32 a4_482
	word32 s0_67 = xQueueGenericCreateStatic(1<32>, 0<32>, 0<32>, a0 + 4<i32>, 3<32>, mstatus, s4, out s1_479, out a0_64, out a2_480, out a3_481, out a4_482, out a5_483, out s2_484, out s3_485, out s4_486)
	Mem78[a0_64:word32] = s0_67
	word32 a0_84
	word32 s4_491
	word32 s2_489
	word32 s1_487
	word32 s3_490
	word32 a5_488
	word32 a4_116
	word32 a3_117
	word32 a2_144
	word32 s0_107 = xQueueGenericCreateStatic(2<32>, 260<i32>, s0_67 + 256<i32>, s0_67 + 176<i32>, 0<32>, mstatus, s4, out s1_487, out a0_84, out a2_144, out a3_117, out a4_116, out a5_488, out s2_489, out s3_490, out s4_491)
	Mem98[s0_107 + 172<i32>:word32] = a0_84
	word32 s2_100 = 0x2000000<32>
l2305B08A:
	word32 a5_109 = CONVERT(Mem98[s0_107 + 1568<i32>:byte], byte, word32)
	branch a5_109 == 0<32> l2305B0CC
l2305B0CC:
	word32 a0_118
	word32 a3_121
	word32 s4_497
	word32 a5_495
	word32 a2_493
	word32 s8_498
	word32 s3_496
	word32 a4_494
	word32 a1_492
	word32 s1_127
	s0_107 = xQueueReceive(Mem98[s0_107 + 172<i32>:int32], fp + -308<i32>, s2_100 + 1808<i32>, a3_117, a4_116, a5_109, mstatus, dwLoc0138, dwLoc011C, dwLoc9C, s8, dwArg18, out s1_127, out a0_118, out a1_492, out a2_493, out a3_121, out a4_494, out a5_495, out s2_100, out s3_496, out s4_497, out s8_498)
	branch a0_118 != 1<32> l2305B13E
l2305B13E:
	a2_144 = pro_trans_reset(ra_141, Mem98[s0_107 + 1036<i32>:int32], 1<32>, mstatus, dwLoc0140, dwLoc0138, dwLocF0, dwLocEC, dwLocC8, dwLocA4, dwArg08, dwArg48, out a3_117, out a4_116)
l2305B0E0:
	word32 a0_153 = Mem98[s0_107 + 1668<i32>:int32]
	branch a0_153 == 0<32> l2305B0F2
l2305B0E6:
	word32 a0_154
	word32 s11_508
	word32 a4_505
	word32 s4_507
	word32 s3_506
	word32 a3_504
	ra_141 = bt_gatt_get_mtu(ra_141, a0_153, a3_121, dwLoc0138, dwLocF0, dwLocEC, dwLocC8, dwLocA4, out a0_154, out a3_504, out a4_505, out s2_100, out s3_506, out s4_507, out s10, out s11_508)
	s1_127 = CONVERT(SLICE(a0_154 + 0xFFFFFFFD<32>, word16, 0), word16, word32)
l2305B0F2:
	word32 a0_192
	word32 s4_196
	word32 s8_197
	word32 s3_206
	word32 s5_217
	word32 s6_218
	ra_141 = pro_trans_read(ra_141, s1_127, Mem98[s0_107 + 1036<i32>:int32], fp + -308<i32>, dwLoc34, s1_127, s2_100, s10, mstatus, dwLoc0130, dwLoc012C, dwLoc0120, dwLoc011C, dwLoc0110, dwLoc010C, dwLoc0108, dwLoc0104, dwLocF8, dwLocD4, dwLocC4, dwLoc58, dwLoc38, s4, dwArg08, out s0_107, out a0_192, out a2_144, out a3_117, out a4_116, out s2_100, out s3_206, out s4_196, out s5_217, out s6_218, out s8_197, out s10, out mstatus)
	branch a0_192 == 0<32> l2305B08A
l2305B104:
	a4_116 = CONVERT(Mem98[s3_206 + 1616<i32>:byte], byte, word32)
	branch a4_116 >u 2<32> l2305B08A
l2305B10E:
	a4_116 = CONVERT(Mem98[s4_196 + 1617<i32>:byte], byte, word32)
	branch a4_116 >u 2<32> l2305B08A
l2305B116:
	branch Mem98[s5_217 + 1376<i32>:int32] == 0<32> l2305B138
l2305B138:
	word32 a5_509
	xTaskGetTickCount(out a5_509)
l2305B11C:
	word32 a5_510
	xTaskGetTickCountFromISR(out a5_510)
l2305B120:
	word32 s8_520
	word32 s6_518
	word32 s5_517
	word32 a5_514
	word32 s1_511
	word32 s11_522
	word32 s9_521
	word32 s7_519
	word32 s4_516
	word32 s3_515
	word32 a1_513
	word32 a0_512
	ra_141 = bl_printk(ra_141, s8_197 + 996<i32>, s6_218 + 980<i32>, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_511, out a0_512, out a1_513, out a2_144, out a3_117, out a4_116, out a5_514, out s2_100, out s3_515, out s4_516, out s5_517, out s6_518, out s7_519, out s8_520, out s9_521, out s10, out s11_522)
l2305B090:
	Mem264[s0_107 + 1566<i32>:byte] = 0<8>
	word32 a5_502
	word32 a3_500
	word32 s2_503
	word32 a4_501
	word32 a0_499
	vTaskDelete(Mem264[s0_107 + 0xFFFEE8<32>:int32], a2_144, a3_117, a4_116, 0x1000000<32>, mstatus, s4, s0, dwArg28, dwArg38, out a0_499, out a3_500, out a4_501, out a5_502, out s2_503)
	return
__bl_ble_sync_task_exit:


void scan_complete_cb(word32 a0, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
scan_complete_cb_entry:
l2305B148:
	Mem14[a4 + 1567<i32>:byte] = 0<8>
	word32 a5_16 = CONVERT(Mem14[a4 + 0x1FFF900<32>:byte], byte, word32)
	branch a5_16 >u 49<i32> l2305B19A
l2305B170:
	word32 a5_28
	word32 a1_82
	word32 a2_83
	word32 a3_84
	word32 a4_85
	word32 a6_86
	word32 a7_87
	memcpy(a5_16 + 0xFFFFD0<32> + a4, a0, 48<i32>, out a1_82, out a2_83, out a3_84, out a4_85, out a5_28, out a6_86, out a7_87)
	Mem44[a5_28 + 0x2000900<32>:byte] = SLICE(CONVERT(Mem14[a5_28 + 0x1FFF900<32>:byte], byte, word32) + 1<32>, byte, 0)
l2305B19A:
	return
scan_complete_cb_exit:


void __recv_event(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArgD4, word32 dwArgF0, word32 dwArgF4, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +00D4:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
__recv_event_entry:
l2305B1A4:
	word32 a1_54
	word32 s1_6 = 0x42026000<32>
	a1_54 = a1
	branch CONVERT(Mem5[0x42026650<32>:byte], byte, word32) >u 2<32> l2305B212
l2305B1CE:
	a1_54 = a1
	branch CONVERT(Mem24[0x42026651<32>:byte], byte, word32) >u 2<32> l2305B212
l2305B1DA:
	branch Mem24[0x4200F560<32>:int32] == 0<32> l2305B234
l2305B234:
	word32 a5_400
	xTaskGetTickCount(out a5_400)
l2305B1E4:
	word32 a5_401
	xTaskGetTickCountFromISR(out a5_401)
l2305B1E8:
	word32 s11_418
	word32 s7_414
	word32 s10_417
	word32 s8_415
	word32 s9_416
	word32 a2_410
	word32 s6_413
	word32 a4_411
	word32 a5_412
	ra = bl_printk(ra, 0x230BF450<32>, 0x230BF3D4<32>, 0<32>, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_6, out a0, out a1_54, out a2_410, out a3, out a4_411, out a5_412, out s2, out s3, out s4, out s5, out s6_413, out s7_414, out s8_415, out s9_416, out s10_417, out s11_418)
l2305B212:
	word32 a4_75 = CONVERT(Mem24[a1:byte], byte, word32)
	branch a4_75 != 1<32> l2305B29E
l2305B29E:
	branch a4_75 != 0<32> l2305B264
l2305B2A0:
	word32 s0_77 = Mem24[5<32>:word32]
	branch true l2305B230
l2305B2AA:
	word32 a5_84 = Mem24[0x230BF3A0<32>:word32]
	word32 a3_105
	word32 a0_107
	word32 a7_111
	word32 s10_112
	word32 s11_113
	word32 s6_114
	word32 s7_115
	word32 s9_116
	word32 t0_117
	word32 t4_118
	word32 t1_226
	word32 t5_227
	word32 t6_228
	call a5_84 (retsize: 0;)
		uses: a0:a0_107,a1:a1_91,a3:a3_105,a4:0x230BF3A8<32>,a5:a5_84,a7:a7_111,ra:ra_86,s0:s0_77,s1:s1_85,s10:s10_112,s11:s11_113,s2:s2_87,s3:s3_88,s4:s4_89,s5:s5_90,s6:s6_114,s7:s7_115,s9:s9_116,Stack +0028:dwLoc18,Stack +0070:dwArg30,Stack +0074:dwArg34,Stack +00BC:dwArg7C,Stack +0114:dwArgD4,Stack +0130:dwArgF0,Stack +0134:dwArgF4,Stack +0158:dwArg0118,Stack +0178:dwArg0138,Stack +0198:dwArg0158,Stack +01B8:dwArg0178,t0:t0_117,t1:t1_226,t4:t4_118,t5:t5_227,t6:t6_228
		defs: a0:a0_107,a3:a3_105,a7:a7_111,s10:s10_112,s11:s11_113,s6:s6_114,s7:s7_115,s9:s9_116,t0:t0_117,t1:t1_226,t4:t4_118,t5:t5_227,t6:t6_228
	return
l2305B21C:
	word32 a2_132
	word32 a0_143
	word32 a1_131
	branch a3 == 2<32> l2305B23A
l2305B23A:
	word32 a0_130
	word32 a5_405
	word32 a3_403
	word32 a4_404
	word32 t1_402
	memset(ra, a0 + 1569<i32>, 0<32>, 32<i32>, out t1_402, out a0_130, out a1_131, out a2_132, out a3_403, out a4_404, out a5_405)
	Mem140[a0_130 + 1601<i32>:byte] = 0<8>
	a0_143 = a0_130 + 1569<i32>
l2305B224:
	branch a3 == 3<32> l2305B27A
l2305B27A:
	word32 a0_150
	word32 a5_409
	word32 a3_407
	word32 a4_408
	word32 t1_406
	memset(ra, a0 + 1602<i32>, 0<32>, 64<i32>, out t1_406, out a0_150, out a1_131, out a2_132, out a3_407, out a4_408, out a5_409)
	a0_143 = a0_150 + 1602<i32>
l2305B260:
	word32 a4_422
	word32 a7_425
	word32 a5_423
	word32 a6_424
	word32 a3_421
	word32 a1_419
	word32 a2_420
	memcpy(a0_143, a1_131, a2_132, out a1_419, out a2_420, out a3_421, out a4_422, out a5_423, out a6_424, out a7_425)
l2305B264:
l2305B22A:
	branch a3 == a4_75 l2305B266
l2305B230:
l2305B266:
	return
__recv_event_exit:


void wifi_state_get_cb(word32 a0, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
wifi_state_get_cb_entry:
l2305B624:
	word32 s0_7 = Mem6[0x4200F4BC<32>:int32]
	word32 a4_14
	word32 a5_15
	word32 a1_67
	word32 a2_68
	word32 a3_69
	word32 a6_70
	word32 a7_71
	memcpy(s0_7 + 84<i32>, a0, 88<i32>, out a1_67, out a2_68, out a3_69, out a4_14, out a5_15, out a6_70, out a7_71)
l2305B64E_thunk_xQueueGenericSend:
	word32 s1_72
	word32 a0_73
	word32 a1_74
	word32 a2_75
	word32 a3_76
	word32 a4_77
	word32 a5_78
	word32 a7_79
	word32 s2_80
	word32 s3_81
	word32 s4_82
	word32 s5_83
	word32 s6_84
	word32 s8_85
	xQueueGenericSend(s0_7 + 84<i32>, 0<32>, 0<32>, a4_14, a5_15, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_72, out a0_73, out a1_74, out a2_75, out a3_76, out a4_77, out a5_78, out a7_79, out s2_80, out s3_81, out s4_82, out s5_83, out s6_84, out s8_85)
	return
wifi_state_get_cb_exit:


void write_data(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 s2, word32 s6, word32 mstatus, word32 dwArg2C, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg74, word32 dwArg8C, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s6:[0..31] Stack +002C:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
write_data_entry:
l2305B652:
	word32 a3_13 = CONVERT(Mem10[0x42026650<32>:byte], byte, word32)
	Mem29[Mem5[0x4200F4BC<32>:int32] + 1668<i32>:word32] = a0
	word32 s0_12 = a3
	word32 s5_147 = a2
	branch a3_13 >u 2<32> l2305B696
l2305B688:
	branch CONVERT(Mem29[0x42026651<32>:byte], byte, word32) <=u 2<32> l2305B6D2
l2305B6D2:
	branch Mem29[0x4200F560<32>:int32] == 0<32> l2305B758
l2305B758:
	word32 a5_342
	xTaskGetTickCount(out a5_342)
l2305B6DE:
	word32 a5_343
	xTaskGetTickCountFromISR(out a5_343)
l2305B6E2:
	word32 s3_71
	word32 s4_72
	word32 s6_74
	word32 s7_75
	word32 s10_355
	word32 s11_356
	word32 s2_352
	word32 s9_354
	word32 s8_353
	word32 a3_349
	word32 a5_351
	word32 a4_350
	word32 s1_346
	word32 a2_348
	word32 a1_347
	word32 ra_66 = bl_printk(ra, 0x230BF650<32>, 0x230BF3D4<32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_346, out a0, out a1_347, out a2_348, out a3_349, out a4_350, out a5_351, out s2_352, out s3_71, out s4_72, out s5_147, out s6_74, out s7_75, out s8_353, out s9_354, out s10_355, out s11_356)
	branch CONVERT(Mem29[s4_72 + 1616<i32>:byte], byte, word32) >u 2<32> l2305B696
l2305B714:
	branch CONVERT(Mem29[s7_75 + 1617<i32>:byte], byte, word32) >u 2<32> l2305B696
l2305B71C:
	branch Mem29[s6_74 + 1376<i32>:int32] == 0<32> l2305B75E
l2305B75E:
	word32 a5_344
	xTaskGetTickCount(out a5_344)
l2305B722:
	word32 a5_345
	xTaskGetTickCountFromISR(out a5_345)
l2305B726:
	word32 s1_113
	word32 s10_114
	word32 s2_116
	word32 s9_123
	word32 a3_370
	word32 s11_369
	word32 s8_368
	word32 s7_367
	word32 s5_365
	word32 s6_366
	word32 s3_363
	word32 s4_364
	word32 a4_361
	word32 a5_362
	word32 a2_359
	word32 a3_360
	word32 a0_357
	word32 a1_358
	blog_hexdump_out(bl_printk(ra_66, 0x230BF678<32>, s3_71 + 980<i32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_113, out a0_357, out a1_358, out a2_359, out a3_360, out a4_361, out a5_362, out s2_116, out s3_363, out s4_364, out s5_365, out s6_366, out s7_367, out s8_368, out s9_123, out s10_114, out s11_369), s1_113, s2_116 + 968<i32>, a3, s2_116, s9_123, s10_114, dwLoc2C, s2, s0, dwLoc10, dwArg2C, dwArg3C, out s0_12, out a0, out a3_370, out s5_147)
l2305B696:
	Mem163[a0 + 1032<i32>:word32] = s0_12
	word32 a4_165
	word32 a5_166
	word32 a7_327
	word32 a2_324
	word32 a6_326
	word32 a3_325
	word32 a1_323
	memcpy(a0 + 776<i32>, s5_147, s0_12, out a1_323, out a2_324, out a3_325, out a4_165, out a5_166, out a6_326, out a7_327)
	word32 s6_340
	word32 s8_341
	word32 s5_339
	word32 s2_336
	word32 s4_338
	word32 s3_337
	word32 a4_333
	word32 a7_335
	word32 a5_334
	word32 a1_330
	word32 a3_332
	word32 a2_331
	word32 a0_329
	word32 s1_328
	xQueueGenericSend(Mem163[a5_166 + 172<i32>:int32], a5_166 + 776<i32>, 0<32>, a4_165, a5_166, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_328, out a0_329, out a1_330, out a2_331, out a3_332, out a4_333, out a5_334, out a7_335, out s2_336, out s3_337, out s4_338, out s5_339, out s6_340, out s8_341)
	0<32> = dwArg0128
	return
write_data_exit:


void __ble_bytes_send(word32 ra, word32 a1, word32 a2, word32 a5, word32 s2, word32 s4, word32 dwArg00, word32 dwArg08, word32 dwArg3C, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] ra:[0..31] s2:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +003C:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
__ble_bytes_send_entry:
l2305B764:
	branch Mem20[a5 + 1668<i32>:int32] == 0<32> l2305B7D4
l2305B788:
	branch a2 >u 255<i32> l2305B7D4
l2305B792:
	word32 a5_32
	word32 a3_333
	word32 a2_332
	word32 a1_331
	word32 a6_335
	word32 a7_336
	word32 a4_334
	memcpy(a5 + 1052<i32>, a1, a2, out a1_331, out a2_332, out a3_333, out a4_334, out a5_32, out a6_335, out a7_336)
	word32 a3_149 = CONVERT(Mem20[0x42026650<32>:byte], byte, word32)
	Mem49[a5_32 + 1564<i32>:word16] = SLICE(CONVERT(SLICE(a2, word16, 0), word16, word32), word16, 0)
	branch a3_149 >u 2<32> l2305B7C6
l2305B7BA:
	branch CONVERT(Mem49[0x42026651<32>:byte], byte, word32) <=u 2<32> l2305B7E8
l2305B7E8:
	branch Mem49[0x4200F560<32>:int32] == 0<32> l2305B86C
l2305B86C:
	word32 a5_356
	xTaskGetTickCount(out a5_356)
l2305B7F4:
	word32 a5_357
	xTaskGetTickCountFromISR(out a5_357)
l2305B7F8:
	word32 s1_84
	word32 s2_87
	word32 s5_90
	word32 s6_91
	word32 a0_375
	word32 a1_376
	word32 a2_377
	word32 a4_378
	word32 a5_379
	word32 s3_380
	word32 s4_381
	word32 s7_382
	word32 s8_383
	word32 s9_384
	word32 s10_385
	word32 s11_386
	ra = bl_printk(ra, 0x230BF414<32>, 0x230BF3D4<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_84, out a0_375, out a1_376, out a2_377, out a3_149, out a4_378, out a5_379, out s2_87, out s3_380, out s4_381, out s5_90, out s6_91, out s7_382, out s8_383, out s9_384, out s10_385, out s11_386)
	branch CONVERT(Mem49[s2_87 + 1616<i32>:byte], byte, word32) >u 2<32> l2305B7C6
l2305B828:
	branch CONVERT(Mem49[s6_91 + 1617<i32>:byte], byte, word32) >u 2<32> l2305B7C6
l2305B830:
	branch Mem49[s5_90 + 1376<i32>:int32] == 0<32> l2305B872
l2305B872:
	word32 a5_358
	xTaskGetTickCount(out a5_358)
l2305B836:
	word32 a5_359
	xTaskGetTickCountFromISR(out a5_359)
l2305B83A:
	word32 s1_129
	word32 s10_130
	word32 s2_132
	word32 s4_134
	word32 s9_139
	word32 a0_360
	word32 a1_361
	word32 a2_362
	word32 a3_363
	word32 a4_364
	word32 a5_365
	word32 s3_366
	word32 s5_367
	word32 s6_368
	word32 s7_369
	word32 s8_370
	word32 s11_371
	word32 s0_372
	word32 a0_373
	word32 s5_374
	ra = blog_hexdump_out(bl_printk(ra, 0x230BF678<32>, s1_84 + 980<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_129, out a0_360, out a1_361, out a2_362, out a3_363, out a4_364, out a5_365, out s2_132, out s3_366, out s4_134, out s5_367, out s6_368, out s7_369, out s8_370, out s9_139, out s10_130, out s11_371), s1_129, s1_129 + 968<i32>, s4_134, s2_132, s9_139, s10_130, s4, dwLoc10, dwLoc0C, dwArg00, dwArg3C, dwArg4C, out s0_372, out a0_373, out a3_149, out s5_374)
l2305B7C6:
	word32 s11_354
	word32 t4_355
	word32 s10_353
	word32 s9_352
	word32 s8_351
	word32 s7_350
	word32 s6_349
	word32 s5_348
	word32 s4_347
	word32 s3_346
	word32 s2_345
	word32 a7_344
	word32 a4_342
	word32 a5_343
	word32 a2_340
	word32 a3_341
	word32 a0_338
	word32 a1_339
	word32 s1_337
	printf(ra, 0x230C6900<32>, a3_149, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_337, out a0_338, out a1_339, out a2_340, out a3_341, out a4_342, out a5_343, out a7_344, out s2_345, out s3_346, out s4_347, out s5_348, out s6_349, out s7_350, out s8_351, out s9_352, out s10_353, out s11_354, out t4_355)
l2305B7D4:
	0<32> = dwArgA8
	return
__ble_bytes_send_exit:


void blsync_disconnected(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
blsync_disconnected_entry:
l2305B878:
	word32 s1_43
	word32 a0_44
	word32 a1_45
	word32 a2_46
	word32 a3_47
	word32 a4_48
	word32 a5_49
	word32 a7_50
	word32 s2_51
	word32 s3_52
	word32 s4_53
	word32 s5_54
	word32 s6_55
	word32 s7_56
	word32 s8_57
	word32 s9_58
	word32 s10_59
	word32 s11_60
	word32 t4_61
	printf(ra, 0x230BF5CC<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_43, out a0_44, out a1_45, out a2_46, out a3_47, out a4_48, out a5_49, out a7_50, out s2_51, out s3_52, out s4_53, out s5_54, out s6_55, out s7_56, out s8_57, out s9_58, out s10_59, out s11_60, out t4_61)
	Mem33[0x4200F4B8<32>:word32] = 0<32>
	return
blsync_disconnected_exit:


void blsync_exchange_func(word32 ra, word32 a1, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
blsync_exchange_func_entry:
l2305B896:
	branch a1 == 0<32> l2305B8AC
l2305B8AC:
l2305B898:
l2305B8A0:
l2305B8A8_thunk_printf:
	word32 a3_55
	word32 a4_56
	word32 a2_54
	word32 a1_53
	word32 a0_52
	word32 s1_51
	word32 a5_57
	word32 a7_58
	word32 s2_59
	word32 s3_60
	word32 s4_61
	word32 s5_62
	word32 s6_63
	word32 s7_64
	word32 s8_65
	word32 s9_66
	word32 s10_67
	word32 s11_68
	word32 t4_69
	printf(ra, 0x230BF5EC<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_51, out a0_52, out a1_53, out a2_54, out a3_55, out a4_56, out a5_57, out a7_58, out s2_59, out s3_60, out s4_61, out s5_62, out s6_63, out s7_64, out s8_65, out s9_66, out s10_67, out s11_68, out t4_69)
	return
blsync_exchange_func_exit:


void read_data(word32 ra, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg74, word32 dwArg78, word32 dwArg9C, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
read_data_entry:
l2305B8B6:
	branch CONVERT(Mem19[Mem5[0x4200F4BC<32>:int32] + 1564<i32>:uint16], uint16, word32) == 0<32> l2305B970
l2305B970:
l2305B8D4:
	word32 a4_25 = CONVERT(Mem19[0x42026650<32>:byte], byte, word32)
	word32 a5_26 = 2<32>
	branch a4_25 >u 2<32> l2305B932
l2305B8F0:
	a4_25 = CONVERT(Mem19[0x42026651<32>:byte], byte, word32)
	branch a4_25 >u 2<32> l2305B932
l2305B8FC:
	branch Mem19[0x4200F560<32>:int32] == 0<32> l2305B96A
l2305B96A:
	word32 a5_243
	xTaskGetTickCount(out a5_243)
l2305B906:
	word32 a5_244
	xTaskGetTickCountFromISR(out a5_244)
l2305B90A:
	word32 s1_245
	word32 a0_246
	word32 a1_247
	word32 a2_248
	word32 a3_249
	word32 s2_250
	word32 s3_251
	word32 s4_252
	word32 s5_253
	word32 s6_254
	word32 s7_255
	word32 s8_256
	word32 s9_257
	word32 s10_258
	word32 s11_259
	bl_printk(ra, 0x230BF5FC<32>, 0x230BF3D4<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_245, out a0_246, out a1_247, out a2_248, out a3_249, out a4_25, out a5_26, out s2_250, out s3_251, out s4_252, out s5_253, out s6_254, out s7_255, out s8_256, out s9_257, out s10_258, out s11_259)
l2305B932:
	word32 s3_101
	word32 s4_102
	word32 s5_103
	word32 a5_95 = pro_trans_ack(Mem19[a5_26 + 1036<i32>:int32], a4_25, a5_26, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s3_101, out s4_102, out s5_103)
	Mem136[bt_gatt_attr_read(s3_101, s4_102, s5_103, a5_95 + 1052<i32>, CONVERT(Mem19[a5_95 + 1564<i32>:uint16], uint16, word32)) + 1564<i32>:word16] = 0<16>
l2305B958:
	return
read_data_exit:


void blsync_connected(word32 ra, word32 s0, word32 s1, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB0, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B0:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
blsync_connected_entry:
l2305B974:
	word32 ra_111
	word32 s1_112
	word32 a0_103
	word32 a5_18
	word32 a3_22
	word32 a4_23
	word32 s1_26
	word32 s2_29
	word32 s3_30
	word32 t4_360
	word32 s11_359
	word32 s10_358
	word32 s9_357
	word32 s8_356
	word32 s7_355
	word32 s6_354
	word32 s5_353
	word32 a0_348
	word32 a1_349
	word32 a2_350
	word32 a7_351
	word32 s4_352
	word32 ra_25 = printf(ra, 0x230ABB4C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_26, out a0_348, out a1_349, out a2_350, out a3_22, out a4_23, out a5_18, out a7_351, out s2_29, out s3_30, out s4_352, out s5_353, out s6_354, out s7_355, out s8_356, out s9_357, out s10_358, out s11_359, out t4_360)
	Mem44[0x4200F4B8<32>:word32] = s1_26
	word32 a0_46
	word32 a3_49
	word32 mstatus_54
	word32 s0_361
	word32 ra_55 = bt_le_set_data_len(ra_25, s1_26, a3_22, a4_23, a5_18, s2_29, s3_30, mstatus, s0, dwLoc08, dwArg08, dwArg28, dwArg40, dwArg44, dwArg50, dwArg64, dwArg68, ra, dwArg78, dwArg84, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, out s0_361, out a0_46, out a3_49, out mstatus_54)
	branch a0_46 != 0<32> l2305B9F0
l2305B9F0:
	word32 a3_364
	word32 a2_363
	word32 a1_362
	word32 a4_365
	word32 a5_366
	word32 a7_367
	word32 s2_368
	word32 s3_369
	word32 s4_370
	word32 s5_371
	word32 s6_372
	word32 s7_373
	word32 s8_374
	word32 s9_375
	word32 s10_376
	word32 s11_377
	word32 t4_378
	ra_111 = printf(ra_55, 0x230BF568<32>, a3_49, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_112, out a0_103, out a1_362, out a2_363, out a3_364, out a4_365, out a5_366, out a7_367, out s2_368, out s3_369, out s4_370, out s5_371, out s6_372, out s7_373, out s8_374, out s9_375, out s10_376, out s11_377, out t4_378)
l2305B9B0:
	word32 a1_379
	word32 a2_380
	word32 a3_381
	word32 a4_382
	word32 a5_383
	word32 a7_384
	word32 s2_385
	word32 s3_386
	word32 s4_387
	word32 s5_388
	word32 s6_389
	word32 s7_390
	word32 s8_391
	word32 s9_392
	word32 s10_393
	word32 s11_394
	word32 t4_395
	ra_111 = printf(ra_55, 0x230BF54C<32>, a3_49, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_112, out a0_103, out a1_379, out a2_380, out a3_381, out a4_382, out a5_383, out a7_384, out s2_385, out s3_386, out s4_387, out s5_388, out s6_389, out s7_390, out s8_391, out s9_392, out s10_393, out s11_394, out t4_395)
l2305B9BC:
	word32 s0_127 = Mem44[a0_103:word32]
	Mem133[0x2305B8AE<32>:word32] = 0x42026654<32>
	word32 a0_138
	word32 a3_139
	word32 ra_147 = bt_gatt_exchange_mtu(ra_111, s0_127, s1_112, a0_103, mstatus_54, dwLoc10, s0, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg48, dwArg50, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB0, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out a0_138, out a3_139)
	branch a0_138 != 0<32> l2305BA00
l2305BA00:
l2305BA10_thunk_printf:
	word32 s1_415
	word32 a0_416
	word32 a1_417
	word32 a2_418
	word32 a3_419
	word32 a4_420
	word32 a5_421
	word32 a7_422
	word32 s2_423
	word32 s3_424
	word32 s4_425
	word32 s5_426
	word32 s6_427
	word32 s7_428
	word32 s8_429
	word32 s9_430
	word32 s10_431
	word32 s11_432
	word32 t4_433
	printf(ra_147, 0x230BF5A8<32>, a3_139, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_415, out a0_416, out a1_417, out a2_418, out a3_419, out a4_420, out a5_421, out a7_422, out s2_423, out s3_424, out s4_425, out s5_426, out s6_427, out s7_428, out s8_429, out s9_430, out s10_431, out s11_432, out t4_433)
	return
l2305B9DC:
l2305B9EC_thunk_printf:
	word32 s1_396
	word32 a0_397
	word32 a1_398
	word32 a2_399
	word32 a3_400
	word32 a4_401
	word32 a5_402
	word32 a7_403
	word32 s2_404
	word32 s3_405
	word32 s4_406
	word32 s5_407
	word32 s6_408
	word32 s7_409
	word32 s8_410
	word32 s9_411
	word32 s10_412
	word32 s11_413
	word32 t4_414
	printf(ra_147, 0x230BF58C<32>, a3_139, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_396, out a0_397, out a1_398, out a2_399, out a3_400, out a4_401, out a5_402, out a7_403, out s2_404, out s3_405, out s4_406, out s5_407, out s6_408, out s7_409, out s8_410, out s9_411, out s10_412, out s11_413, out t4_414)
	return
blsync_connected_exit:


word32 bl_ble_sync_start(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 s4, word32 s5, word32 s6, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blsync_ble_start
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s11:[0..31] s2:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut: mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_ble_sync_start_entry:
l2305BA14:
	branch a0 == 0<32> l2305BA24
l2305BA20:
	branch a1 != 0<32> l2305BA84
l2305BA84:
	word32 a3_26
	word32 a2_335
	word32 a0_333
	word32 t1_332
	word32 a5_336
	word32 a1_334
	word32 a4_27
	word32 ra_29 = memset(ra, a0, 0<32>, 0x1FFF908<32>, out t1_332, out a0_333, out a1_334, out a2_335, out a3_26, out a4_27, out a5_336)
	Mem33[0x4200F4BC<32>:word32] = a0
	word32 a5_36 = Mem33[a4_27:word32]
	Mem37[a0 + 1048<i32>:word32] = a1
	Mem38[a0 + 1040<i32>:word32] = a2
	Mem39[a0 + 1044<i32>:word32] = a3_26
	Mem40[a0 + 1566<i32>:word16] = 0<16>
	Mem41[a0 + 1568<i32>:byte] = 0<8>
	branch a4_27 != 0<32> l2305BAD0
l2305BAC0:
	Mem45[1<32>:word32] = a5_36
	bt_conn_cb_register(0x4200E0EC<32>, 1<32>)
	a4_27 = 1<32>
l2305BAD0:
	word32 sp_87 = <invalid>
	word32 s0_75
	word32 a0_106
	word32 s0_110
	word32 s1_111
	word32 s1_356
	word32 a3_357
	word32 s5_358
	word32 tp_359
	word32 t0_360
	word32 a2_361
	word32 a3_362
	word32 a4_363
	word32 a5_364
	word32 s2_365
	word32 s3_366
	word32 s6_367
	word32 s7_368
	ra = xTaskCreateStatic(bt_gatt_service_register(ra_29, a0, a3_26, a4_27, s4, s5, s6, s11, mstatus, dwLoc1C, dwLoc0C, dwLoc08, dwLoc04, dwArg08, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg28, dwArg48, dwArg50, dwArg58, s1, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArg0108, out s0_75, out s1_356, out a3_357, out s5_358, out mstatus), 0x2305AFEC<32>, 0x230BF548<32>, 512<i32>, s0_75, 0xA<32>, s0_75 + 1672<i32>, s0_75 + 0xFFFE88<32>, mstatus, Mem64[sp_87 + 4<i32>:word32], Mem64[sp_87 + 36<i32>:word32], Mem64[sp_87 + 232<i32>:word32], Mem64[sp_87 + 436<i32>:word32], out tp_359, out t0_360, out s0_110, out s1_111, out a0_106, out a2_361, out a3_362, out a4_363, out a5_364, out s2_365, out s3_366, out s6_367, out s7_368)
	Mem129[s0_110 + s1_111 + 3816<i32>:word32] = a0_106
l2305BA24:
	branch CONVERT(Mem11[0x42026650<32>:byte], byte, word32) >u 2<32> l2305BA72
l2305BA34:
	branch CONVERT(Mem11[0x42026651<32>:byte], byte, word32) >u 2<32> l2305BA72
l2305BA40:
	branch Mem11[0x4200F560<32>:int32] == 0<32> l2305BA7E
l2305BA7E:
	word32 a5_337
	xTaskGetTickCount(out a5_337)
l2305BA4A:
	word32 a5_338
	xTaskGetTickCountFromISR(out a5_338)
l2305BA4E:
	word32 a5_345
	word32 s2_346
	word32 s3_347
	word32 s4_348
	word32 s5_349
	word32 s6_350
	word32 s7_351
	word32 s8_352
	word32 s9_353
	word32 s10_354
	word32 s1_339
	word32 a0_340
	word32 a2_342
	word32 a3_343
	word32 a4_344
	word32 a1_341
	word32 s11_355
	ra = bl_printk(ra, 0x230BF51C<32>, 0x230BF3D4<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_339, out a0_340, out a1_341, out a2_342, out a3_343, out a4_344, out a5_345, out s2_346, out s3_347, out s4_348, out s5_349, out s6_350, out s7_351, out s8_352, out s9_353, out s10_354, out s11_355)
l2305BA72:
	mstatusOut = mstatus
	return ra
bl_ble_sync_start_exit:


word32 bl_ble_sync_stop(word32 s1, word32 a0, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      app_delayed_action_bleadvstop
// MayUse:  a0:[0..31] mstatus:[0..31] s1:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bl_ble_sync_stop_entry:
l2305BB0E:
	branch a0 == 0<32> l2305BB92
l2305BB92:
	a2Out = a2
	a5Out = a5
	return 0xFFFFFFFF<32>
l2305BB10:
	word32 a5_121
	word32 s3_282
	word32 s5_283
	word32 s2_281
	word32 a5_280
	word32 a3_100
	word32 a2_20
	bt_gatt_service_unregister(a0, s1, 0x230BF644<32>, s2, mstatus, dwArg38, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out a2_20, out a3_100, out a5_280, out s2_281, out s3_282, out s5_283)
	Mem41[a0 + 1568<i32>:byte] = 1<8>
	word32 a5_284
	word32 a0_42 = xTaskGetCurrentTaskHandle(out a5_284)
	word32 s0_104 = a0
	word32 a4_101 = 0x1000000<32>
	word32 a5_102 = Mem41[Mem41[0x4200F4BC<32>:int32] + 0xFFFEE8<32>:int32]
	word32 s2_106 = 1<32>
	branch a5_102 != a0_42 l2305BB7E
l2305BB7E:
	a5_121 = CONVERT(Mem41[a5_102 + 1567<i32>:byte], byte, word32)
	branch a5_121 == s2_106 l2305BB78
l2305BB88:
	a5_121 = CONVERT(Mem41[s0_104 + 1566<i32>:byte], byte, word32)
	branch a5_121 == s2_106 l2305BB78
l2305BB78:
	word32 s4_298
	word32 s1_294
	word32 s3_297
	word32 a0_295
	word32 a1_296
	s0_104 = vTaskDelay(0xA<32>, a2_20, a3_100, a4_101, a5_121, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_294, out a0_295, out a1_296, out a2_20, out a3_100, out a4_101, out a5_102, out s2_106, out s3_297, out s4_298)
l2305BB90:
l2305BB4C:
	word32 a5_89 = CONVERT(Mem41[a5_102 + 1567<i32>:byte], byte, word32)
	branch a5_89 == s2_106 l2305BB70
l2305BB70:
	word32 a0_286
	word32 s4_289
	word32 a1_287
	word32 s3_288
	word32 s1_285
	s0_104 = vTaskDelay(0xA<32>, a2_20, a3_100, a4_101, a5_89, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_285, out a0_286, out a1_287, out a2_20, out a3_100, out a4_101, out a5_102, out s2_106, out s3_288, out s4_289)
l2305BB56:
	word32 a0_290
	word32 s2_293
	word32 a3_291
	word32 a4_292
	vTaskDelete(Mem41[s0_104 + 0xFFFEE8<32>:int32], a2_20, a3_100, a4_101, a5_89, mstatus, dwArg0118, dwArg0128, dwArg0158, dwArg0168, out a0_290, out a3_291, out a4_292, out a5_121, out s2_293)
l2305BB62:
	0<32> = dwArg38
	a2Out = dwArg10
	a5Out = a5_121
	return 0<32>
bl_ble_sync_stop_exit:


word32 __malloc(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg60, word32 dwArg64, word32 dwArg7C, word32 dwArg88, word32 dwArgAC, word32 dwArg0128, word32 dwArg0168, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __protocol_send
//      pro_trans_read
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a2 a3 a4 a5 ra s1 s10 s11 s2 s3 s4 s5 s6
// Trashed: a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
__malloc_entry:
l2305BB96:
	word32 a0_14
	word32 a1_153
	word32 a2_154
	word32 a6_155
	word32 s8_156
	word32 s1_117
	word32 a4_110
	word32 a5_111
	word32 a3_109
	word32 s2_122
	word32 s3_123
	word32 s4_124
	pvPortMalloc(ra, s1, a0, a3, a4, a5, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_117, out a0_14, out a1_153, out a2_154, out a3_109, out a4_110, out a5_111, out a6_155, out s2_122, out s3_123, out s4_124, out s8_156)
	branch a0_14 == 0<32> l2305BBEE
l2305BBA4:
	a4_110 = CONVERT(Mem7[0x42026650<32>:byte], byte, word32)
	a5_111 = 2<32>
	branch a4_110 >u 2<32> l2305BBEE
l2305BBB2:
	a4_110 = CONVERT(Mem7[0x42026670<32>:byte], byte, word32)
	branch a4_110 >u 2<32> l2305BBEE
l2305BBBE:
	branch Mem7[0x4200F560<32>:int32] == 0<32> l2305BBF8
l2305BBF8:
	word32 a5_157
	xTaskGetTickCount(out a5_157)
l2305BBC8:
	word32 a5_158
	xTaskGetTickCountFromISR(out a5_158)
l2305BBCC:
	word32 a0_159
	word32 a1_160
	word32 a2_161
	word32 s7_162
	word32 s8_163
	word32 s9_164
	ra = bl_printk(ra, 0x230BF6C0<32>, 0x230BF6B4<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_117, out a0_159, out a1_160, out a2_161, out a3_109, out a4_110, out a5_111, out s2_122, out s3_123, out s4_124, out s5, out s6, out s7_162, out s8_163, out s9_164, out s10, out s11)
l2305BBEE:
	s1Out = s1_117
	a2Out = dwArg10
	a3Out = a3_109
	a4Out = a4_110
	a5Out = a5_111
	s2Out = s2_122
	s3Out = s3_123
	s4Out = s4_124
	s5Out = s5
	s6Out = s6
	s10Out = s10
	s11Out = s11
	return ra
__malloc_exit:


word32 __free(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __protocol_send
//      pro_trans_read
//      pro_trans_reset
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: a7 ra s10 s11 s2 s3 s5 s6 s7 s8 s9 sp t0 t4
__free_entry:
l2305BBFE:
	branch a0 == 0<32> l2305BC52
l2305BC08:
	a5 = 2<32>
	branch CONVERT(Mem7[0x42026650<32>:byte], byte, word32) >u 2<32> l2305BC52
l2305BC16:
	branch CONVERT(Mem7[0x42026670<32>:byte], byte, word32) >u 2<32> l2305BC52
l2305BC22:
	branch Mem7[0x4200F560<32>:int32] == 0<32> l2305BC5E
l2305BC5E:
	word32 a5_136
	xTaskGetTickCount(out a5_136)
l2305BC2C:
	word32 a5_137
	xTaskGetTickCountFromISR(out a5_137)
l2305BC30:
	word32 s1_143
	word32 a0_144
	word32 a1_145
	word32 a2_146
	word32 a3_147
	word32 a4_148
	word32 s2_149
	word32 s3_150
	word32 s4_151
	word32 s5_152
	word32 s6_153
	word32 s7_154
	word32 s8_155
	word32 s9_156
	word32 s10_157
	word32 s11_158
	bl_printk(ra, 0x230BF694<32>, 0x230BF6B4<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_143, out a0_144, out a1_145, out a2_146, out a3_147, out a4_148, out a5, out s2_149, out s3_150, out s4_151, out s5_152, out s6_153, out s7_154, out s8_155, out s9_156, out s10_157, out s11_158)
l2305BC52:
l2305BC5A_thunk_vPortFree:
	word32 a3_70
	word32 a4_71
	word32 a5_72
	word32 s1_73
	word32 a0_75
	word32 s0_78
	word32 a1_138
	word32 a2_139
	word32 a6_140
	word32 s4_141
	word32 t3_142
	vPortFree(a0, dwArg10, a5, mstatus, dwArg0158, dwArg0198, out s0_78, out s1_73, out a0_75, out a1_138, out a2_139, out a3_70, out a4_71, out a5_72, out a6_140, out s4_141, out t3_142)
	s1Out = s1_73
	a0Out = a0_75
	a3Out = a3_70
	a4Out = a4_71
	a5Out = a5_72
	return s0_78
__free_exit:


word32 __clear_dev(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pro_trans_read
//      pro_trans_reset
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
__clear_dev_entry:
l2305BC64:
	Mem10[a0 + 56<i32>:word32] = 0<32>
	word32 a0_14
	word32 a3_17
	word32 a4_18
	word32 a5_19
	word32 s1_22
	Mem27[__free(ra, Mem10[a0 + 36<i32>:word32], a5, mstatus, dwArg00, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, dwArg0148, dwArg0188, out s1_22, out a0_14, out a3_17, out a4_18, out a5_19) + 36<i32>:word32] = 0<32>
	a0Out = a0_14
	a2Out = dwArg10
	a3Out = a3_17
	a4Out = a4_18
	a5Out = a5_19
	return s1_22
__clear_dev_exit:


word32 __protocol_send(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg1C, word32 dwArg28, word32 dwArgC8, word32 dwArg0108, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pro_trans_read
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a5 mstatus ra s10 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
__protocol_send_entry:
l2305BC82:
	word32 sp_160 = fp + -96<i32>
	byte bLoc44_376 = 0<8>
	branch a2 == 0<32> l2305BCBA
l2305BCB4:
	bLoc44_376 = 8<8>
l2305BCBA:
	word32 a0_49 = CONVERT(Mem46[a0 + 60<i32>:uint16], uint16, word32)
	word32 s1_567
	word32 a3_568
	word32 a4_569
	word32 s5_570
	word32 a5_335
	word32 s11_270
	word32 s10_173
	word32 s4_146
	word32 a2_157
	word32 s3_151
	word32 s6_108
	word32 s2_111
	word32 ra_148 = __malloc(ra, s1, a0_49, a3, a4, CONVERT(bLoc44_376, byte, word32) & 0xF<32> | 16<i32>, mstatus, s10, dwLoc30, dwLoc2C, dwArg00, dwArg04, dwArg1C, dwArg28, ra, dwArgC8, dwArg0108, out s1_567, out a2_157, out a3_568, out a4_569, out a5_335, out s2_111, out s3_151, out s4_146, out s5_570, out s6_108, out s10_173, out s11_270)
	word32 s8_100 = a0_49
	branch a0_49 == 0<32> l2305BDEA
l2305BCD8:
	s10_173 = 0<32>
	word32 s1_314 = s4_146 & 255<i32>
	s6_108 = a0_49 + 6<i32>
	s2_111 = 1<32>
	word32 s7_116 = a0_49 + 4<i32>
l2305BCF4:
	word32 s9_113
	word32 s5_109
	word32 a7_110
	Mem95[sp_160 + 27<i32>:byte] = 4<8>
	word32 a7_97 = CONVERT(Mem95[s11_270 + 60<i32>:uint16], uint16, word32)
	branch s10_173 == 0<32> l2305BE0A
l2305BE0A:
	0<32> = Mem95[sp_160 + 228<i32>:word32]
	Mem101[s8_100 + 4<i32>:byte] = SLICE(s1_314, byte, 0)
	Mem103[s8_100 + 5<i32>:byte] = 4<8>
	Mem105[sp_160 + 27<i32>:byte] = 6<8>
	Mem112[Mem105[s11_270:int32] + 16<i32>:byte] = SLICE(s2_111, byte, 0)
	s5_109 = s6_108
	a7_110 = CONVERT(SLICE(a7_97 + 0xFFFFFFFA<32>, word16, 0), word16, int32)
	s9_113 = 6<32>
l2305BD02:
	s5_109 = s7_116
	a7_110 = CONVERT(SLICE(a7_97 + 0xFFFFFFFC<32>, word16, 0), word16, int32)
	s9_113 = 4<32>
l2305BD0E:
	word32 a5_122 = CONVERT(Mem121[sp_160 + 27<i32>:byte], byte, word32)
	Mem128[sp_160 + 27<i32>:byte] = SLICE(a5_122 + 1<32>, byte, 0)
	word32 s4_161
	word32 s11_162
	word32 s0_164
	word32 s1_165
	word32 s5_168
	word32 s7_170
	word32 s9_172
	word32 a0_177
	word32 t1_417
	word32 t5_418
	word32 t6_419
	word32 a5_178
	call Mem128[a5_122 + 5<32>:int32] (retsize: 0;)
		uses: a0:Mem128[Mem128[a5_122 + 0x15<32>:word32] + 24<i32>:word32],a1:1<32>,a2:a2_157,a3:s5_142 + 1<i32>,a4:sp_94 + 27<i32>,a5:a5_122 + 1<32> + s10_98,a6:s1_99 - s10_98 & 255<i32>,a7:CONVERT(SLICE(a7_125 + 0xFFFFFFFF<32>, word16, 0), word16, int32),mstatus:mstatus_159,ra:ra_148,s0:Mem128[sp_94 + 228<i32>:word32],s1:s1_99,s10:s10_98,s11:s11_96,s2:s2_111,s3:s3_151,s4:s4_146,s5:s5_142,s6:s6_108,s7:s7_116,s8:s8_100,s9:s9_155,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +001C:dwArg1C,Stack +0028:dwArg28,Stack +00C8:dwArgC8,Stack +0108:dwArg0108,Stack +FFFFFFD0:dwLoc30,Stack +FFFFFFD4:dwLoc2C,t1:t1_417,t5:t5_418,t6:t6_419,tp:Mem128[sp_94 + 132<i32>:word32]
		defs: a0:a0_177,a5:a5_178,mstatus:mstatus_186,ra:ra_163,s0:s0_164,s1:s1_165,s10:s10_173,s11:s11_162,s2:s2_166,s4:s4_161,s5:s5_168,s6:s6_169,s7:s7_170,s8:s8_171,s9:s9_172,sp:sp_160,t1:t1_417,t5:t5_418,t6:t6_419
	Mem189[Mem128[s11_162:int32] + 16<i32>:byte] = 0<8>
	s3_151 = a0_177
	branch a0_177 < 0<32> l2305BDE4
l2305BD54:
	word32 a3_194
	s10_173 = CONVERT(SLICE(s10_173 + (a0_177 & 255<i32>), word16, 0), word16, word32)
	branch s10_173 <u s4_161 l2305BE30
l2305BE30:
	a3_194 = 0<32>
l2305BD64:
	branch s4_161 != s10_173 l2305BE34
l2305BE34:
	s3_151 = 0xFFFFFFFE<32>
l2305BD68:
	Mem199[sp_160 + 30<i32>:word16] = SLICE(CONVERT(Mem189[sp_160 + 30<i32>:uint16], uint16, word32) | 0xF8000000<32>, word16, 0)
	a3_194 = 1<32>
l2305BD76:
	branch (a0_177 & 255<i32>) >=u s4_161 l2305BD86
l2305BD7A:
	Mem207[sp_160 + 28<i32>:byte] = SLICE(CONVERT(Mem204[sp_160 + 28<i32>:byte], byte, word32) | 2<i32>, byte, 0)
l2305BD86:
	Mem216[sp_160 + 132<i32>:word32] = a3_194
	word32 a5_218
	word32 a3_222
	word32 a7_579
	word32 a1_575
	word32 a2_576
	word32 a4_577
	word32 a6_578
	memcpy(s8_100, sp_160 + 28<i32>, 2<32>, out a1_575, out a2_576, out a3_222, out a4_577, out a5_218, out a6_578, out a7_579)
	word32 a4_230 = CONVERT(Mem216[sp_160 + 30<i32>:uint16], uint16, word32)
	Mem233[s8_100 + 2<i32>:byte] = SLICE(a4_230, byte, 0)
	Mem235[s8_100 + 3<i32>:byte] = SLICE(a4_230 >>u 8<i32>, byte, 0)
	word32 s9_240 = CONVERT(Mem235[sp_160 + 27<i32>:byte], byte, word32) + 0xFFFFFFFF<32> - s9_172
	Mem243[s5_168:byte] = SLICE(s9_240, byte, 0)
	word32 a4_248 = Mem243[Mem243[s11_162 + 164<i32>:int32]:word32]
	word32 s0_272
	word32 a3_282
	word32 a5_286
	word32 a2_287
	word32 t1_295
	word32 t5_296
	word32 t6_297
	call a4_248 (retsize: 0;)
		uses: a0:0<32>,a1:s8_171,a2:CONVERT(Mem243[sp_160 + 27<i32>:byte], byte, word32),a3:a3_222,a4:a4_248,a5:a5_218,mstatus:mstatus_186,ra:ra_163,s0:s0_164,s1:s1_165,s10:s10_193,s11:s11_162,s2:s2_166,s3:a0_177,s4:s4_161,s5:s5_168,s6:s6_169,s7:s7_170,s8:s8_171,s9:s9_240,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +001C:dwArg1C,Stack +0028:dwArg28,Stack +00C8:dwArgC8,Stack +0108:dwArg0108,Stack +FFFFFFD0:dwLoc30,Stack +FFFFFFD4:dwLoc2C,t1:t1_295,t5:t5_296,t6:t6_297
		defs: a2:a2_287,a3:a3_282,a5:a5_286,mstatus:mstatus_294,ra:ra_271,s0:s0_272,s10:s10_281,s11:s11_270,s6:s6_277,s7:s7_278,sp:sp_268,t1:t1_295,t5:t5_296,t6:t6_297
	word32 a0_299 = Mem243[s11_270 + 80<i32>:int32]
	Mem302[sp_160 + 29<i32>:byte] = SLICE(CONVERT(Mem243[sp_160 + 29<i32>:byte], byte, word32) + 1<32>, byte, 0)
	word32 a4_303 = CONVERT(Mem302[sp_160 + 30<i32>:uint16], uint16, word32)
	Mem305[sp_160 + 30<i32>:word16] = SLICE(a4_303 + 1<32>, word16, 0)
	word32 a0_306
	word32 a3_309
	word32 a1_580
	word32 a2_581
	word32 a4_582
	xQueueSemaphoreTake(a0_299, s0_272, a2_287, a3_282, a4_303 + 1<32>, a5_286, mstatus, Mem305[sp_160 + 8<i32>:word32], Mem305[sp_160 + 36<i32>:word32], Mem305[sp_160 + 164<i32>:word32], Mem305[sp_160 + 280<i32>:word32], Mem305[sp_160 + 344<i32>:word32], out s1_314, out a0_306, out a1_580, out a2_581, out a3_309, out a4_582, out a5_178, out s2_111, out s3_151, out s4_146, out s8_100)
	branch a0_306 != s2_111 l2305BE38
l2305BE38:
	s3_151 = 0xFFFFFFFC<32>
l2305BDE0:
	a2_157 = Mem305[sp_160 + 164<i32>:word32]
	branch a3_309 == 0<32> l2305BCF4
l2305BDE4:
	word32 a3_573
	word32 a4_574
	word32 a0_572
	word32 s1_571
	__free(ra_148, s8_100, a5_178, mstatus, Mem329[sp_160 + 16<i32>:word32], Mem329[sp_160 + 24<i32>:word32], Mem329[sp_160 + 96<i32>:word32], Mem329[sp_160 + 100<i32>:word32], Mem329[sp_160 + 136<i32>:word32], Mem329[sp_160 + 172<i32>:word32], Mem329[sp_160 + 344<i32>:word32], Mem329[sp_160 + 408<i32>:word32], out s1_571, out a0_572, out a3_573, out a4_574, out a5_335)
l2305BDEA:
	a0Out = s3_151
	a5Out = a5_335
	s2Out = s2_111
	s3Out = s3_151
	s5Out = s4
	s6Out = s6_108
	s10Out = s10_173
	mstatusOut = mstatus
	return dwArg68
__protocol_send_exit:


word32 pro_trans_read(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 s10, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg6C, word32 dwArg7C, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __bl_ble_sync_task
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..15] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s0 s10 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pro_trans_read_entry:
l2305BE3C:
	word32 sp_188 = fp + -64<i32>
	word32 s2_14 = 0xFFFFFFFE<32>
	branch a0 == 0<32> l2305BF08
l2305BE4C:
	s2_14 = 0xFFFFFFFE<32>
	branch a1 == 0<32> l2305BF08
l2305BE52:
	Mem20[a0 + 60<i32>:word16] = SLICE(a3, word16, 0)
	word32 a4_26
	word32 a2_935
	word32 a5_936
	word32 a6_937
	word32 a7_938
	word32 a1_934
	word32 a3_104
	memcpy(fp + -52<i32>, a1, 2<32>, out a1_934, out a2_935, out a3_104, out a4_26, out a5_936, out a6_937, out a7_938)
	s0 = a0
	word32 a0_114 = fp + -52<i32>
	branch (CONVERT(bLoc34, byte, word32) & 1<32>) == 0<32> l2305BF1E
l2305BE6A:
	s3 = CONVERT(bLoc33, byte, word32)
	word32 a5_42 = CONVERT(Mem20[a0 + 32<i32>:byte], byte, word32)
	branch a5_42 == s3 l2305BE84
l2305BE76:
	a0_114 = xTaskGetTickCount(out a5_42)
	Mem45[a0_114 + 72<i32>:word32] = a0
	Mem46[a0 + 76<i32>:word32] = 0<32>
	Mem47[a0 + 32<i32>:byte] = SLICE(s3, byte, 0)
l2305BE84:
	s0 = Mem49[a4_26 + 76<i32>:word32]
	branch (a5_42 | a4_26) == 0<32> l2305BF1E
l2305BE8C:
	word32 a5_55
	word32 a0_54 = xTaskGetTickCount(out a5_55)
	word32 a4_58 = a0_54 - a4_26
	word32 a5_435 = 0<32> - a5_55
	s0 = Mem49[a5_55 + 76<i32>:word32]
	a0_114 = a5_435 - CONVERT(a0_54 <u a4_58, bool, word32)
	branch a0_114 > 0<32> l2305BEB4
l2305BEA8:
	branch a0_114 != 0<32> l2305BF1E
l2305BEAA:
	a5_435 = 0x2000710<32>
	branch a4_58 <=u 0x2000710<32> l2305BF1E
l2305BF1E:
	word32 s1_108
	word32 a5_106
	word32 a4_105 = CONVERT(Mem66[a1 + 2<i32>:byte], byte, word32)
	word32 a2_103 = a2 + -4<i32>
	s3 = CONVERT(bLoc34, byte, word32) >>u 4<u32> & 3<i32>
	word32 s2_131 = CONVERT(Mem74[a1 + 4<i32>:byte], byte, word32)
	branch (CONVERT(Mem66[a1 + 3<i32>:byte], byte, word32) << 8<i32> | a4_105) << 17<i32> != 0<32> l2305BFE6
l2305BFE6:
	a5_106 = s2_131 + 1<i32>
	s1_108 = a1 + 5<32>
	branch a2 + -4<i32> != s2_131 + 1<i32> l2305BF62
l2305BFF0:
	Mem85[s2_131 + 17<i32>:byte] = 0<8>
l2305BF46:
	Mem91[s0 + 58<i32>:word16] = SLICE(CONVERT(Mem74[a1 + 5<i32>:byte], byte, word32) << 8<i32> | s2_131, word16, 0)
	s2_131 = CONVERT(Mem91[a1 + 6<32>:byte], byte, word32)
	s1_108 = a1 + 7<32>
	a5_106 = s2_131 + 3<i32>
	branch a2 + -4<i32> == s2_131 + 3<i32> l2305BF66
l2305BF66:
	word32 s0_94 = Mem91[s2_131 + 39<i32>:word32]
	branch s2_131 == 3<32> l2305BF70
l2305BF6A:
	word32 a0_959
	s1_108 = __clear_dev(ra, s0_94, s2_131 + 3<i32>, mstatus, dwLoc40, dwLoc38, dwArg10, dwArg14, dwArg38, ra, dwArg0108, dwArg0148, out a0_959, out a2_103, out a3_104, out a4_105, out a5_106)
l2305BF70:
	a0_114 = CONVERT(Mem91[s0_94 + 58<i32>:uint16], uint16, word32)
	branch a0_114 != 0<32> l2305BFAC
l2305BFAC:
	word32 s11_962
	word32 s4_961
	word32 a3_960
	ra = __malloc(ra, s1_108, a0_114, a3_104, a4_105, a5_106, mstatus, s2, dwLoc10, dwLoc0C, dwArg20, dwArg24, dwArg3C, dwArg48, dwArg6C, dwArgE8, dwArg0128, out s1_108, out a2_103, out a3_960, out a4_105, out a5_106, out s2_131, out s3, out s4_961, out s5, out s6, out s10, out s11_962)
	Mem147[a0_114 + 36<i32>:word32] = s0_94
	branch a0_114 != 0<32> l2305BF76
l2305BF76:
	Mem152[a5_106 + 16<i32>:byte] = 1<8>
l2305BF7E:
	word32 s0_162 = Mem157[a2_103 + 36<i32>:word32]
	word32 a3_196
	word32 a7_204
	word32 t0_205
	word32 t1_206
	word32 t4_207
	word32 t5_208
	word32 t6_209
	word32 tp_211
	word32 s11_213
	word32 s7_216
	word32 s9_217
	word32 s0_191
	word32 a5_198
	call Mem157[a5_106:int32] (retsize: 0;)
		uses: a0:Mem157[Mem157[a5_164 + 20<i32>:word32] + 24<i32>:word32],a1:s3_180,a2:fp + -53<i32>,a3:CONVERT(Mem157[s0_162 + 56<i32>:uint16], uint16, word32) + a2_159,a4:fp + -54<i32>,a5:s1_173,a6:s2_167,a7:a7_204,mstatus:mstatus,ra:ra_184,s0:s0_162,s1:s1_173,s10:s10_212,s11:s11_213,s2:s2_167,s3:s3_180,s5:s5_214,s6:s6_215,s7:s7_216,s9:s9_217,Stack +0000:dwLoc40,Stack +0008:dwLoc38,Stack +000C:bLoc34,Stack +000D:bLoc33,Stack +0028:dwLoc18,Stack +0030:dwLoc10,Stack +0034:dwLoc0C,Stack +0050:dwArg10,Stack +0054:dwArg14,Stack +0060:dwArg20,Stack +0064:dwArg24,Stack +0070:dwArg30,Stack +0074:dwArg34,Stack +0078:dwArg38,Stack +007C:dwArg3C,Stack +0088:dwArg48,Stack +00AC:dwArg6C,Stack +00BC:dwArg7C,Stack +0128:dwArgE8,Stack +0148:dwArg0108,Stack +0168:dwArg0128,Stack +0188:dwArg0148,t0:t0_205,t1:t1_206,t4:t4_207,t5:t5_208,t6:t6_209,tp:tp_211
		defs: a0:a0_194,a3:a3_196,a5:a5_198,a7:a7_204,mstatus:mstatus_210,ra:ra_190,s0:s0_191,s1:s1_192,s10:s10_212,s11:s11_213,s3:s3_193,s5:s5_214,s6:s6_215,s7:s7_216,s9:s9_217,sp:sp_188,t0:t0_205,t1:t1_206,t4:t4_207,t5:t5_208,t6:t6_209,tp:tp_211
	s2_14 = a0_114
	branch a0_114 == 0<32> l2305BFF8
l2305BFF8:
	word32 a4_222 = CONVERT(Mem157[sp_188 + 12<i32>:byte], byte, word32)
	word32 a5_224 = CONVERT(SLICE(CONVERT(Mem157[s0_191 + 56<i32>:uint16], uint16, word32) + CONVERT(Mem157[sp_188 + 10<i32>:byte], byte, word32), word16, 0), word16, word32)
	Mem225[s0_191 + 56<i32>:word16] = SLICE(a5_224, word16, 0)
	branch (a4_222 & 2<32>) == 0<32> l2305C01A
l2305C012:
	a4_105 = CONVERT(Mem225[sp_188 + 14<i32>:int16], int16, int32)
	branch a4_105 >= 0<32> l2305BFB6
l2305C01A:
	branch CONVERT(Mem225[s0_191 + 58<i32>:uint16], uint16, word32) == a5_224 l2305C02A
l2305C02A:
	word32 a4_233 = CONVERT(Mem225[sp_188 + 11<i32>:byte], byte, word32)
	Mem234[sp_188 + 140<i32>:word32] = a5_224
	word32 a5_235 = Mem234[s0_191 + 164<i32>:int32]
	Mem236[sp_188 + 136<i32>:word32] = a4_233
	s0_191 = Mem236[a4_233 + 36<i32>:word32]
	Mem239[sp_188 + 16<i32>:byte] = SLICE(s3, byte, 0)
	Mem240[sp_188 + 12<i32>:word32] = a4_233
	a5_198 = Mem240[a5_235 + 4<i32>:word32]
	branch a5_198 == 0<32> l2305BFA4
l2305C042:
	word32 a2_248
	word32 a3_249
	word32 s2_254
	word32 a5_969
	word32 s4_970
	word32 s11_971
	ra = __malloc(ra, s1_108, 256<i32>, a3_196, a4_233, a5_198, mstatus, Mem240[sp_188 + 24<i32>:word32], Mem240[sp_188 + 48<i32>:word32], Mem240[sp_188 + 52<i32>:word32], Mem240[sp_188 + 96<i32>:word32], Mem240[sp_188 + 100<i32>:word32], Mem240[sp_188 + 124<i32>:word32], Mem240[sp_188 + 136<i32>:word32], Mem240[sp_188 + 172<i32>:word32], Mem240[sp_188 + 296<i32>:word32], Mem240[sp_188 + 360<i32>:word32], out s1_108, out a2_248, out a3_249, out a4_105, out a5_969, out s2_254, out s3, out s4_970, out s5, out s6, out s10, out s11_971)
	Mem270[0x140<32>:word32] = s0_191
	a0_114 = 256<i32>
	branch false l2305BFB4
l2305BFB4:
	s2_14 = 0xFFFFFFFD<32>
l2305C04E:
	word32 a5_275 = Mem270[Mem270[s0_191 + 164<i32>:int32] + 4<i32>:word32]
	word32 a0_282
	word32 a4_291
	word32 a7_292
	word32 t0_293
	word32 t1_294
	word32 t4_295
	word32 t5_296
	word32 t6_297
	word32 tp_299
	word32 s11_301
	word32 s7_304
	word32 s9_305
	call a5_275 (retsize: 0;)
		uses: a0:Mem270[s0_237 + 168<i32>:int32],a1:sp_188 + 16<i32>,a2:a2_248,a3:a3_249,a4:a4_291,a5:a5_275,a7:a7_292,mstatus:mstatus_210,ra:ra_261,s0:s0_237,s1:s1_253,s10:s10_300,s11:s11_301,s2:s2_254,s3:s3_255,s5:s5_302,s6:s6_303,s7:s7_304,s9:s9_305,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0030:dwArg30,Stack +0034:dwArg34,Stack +0038:dwArg38,Stack +003C:dwArg3C,Stack +0048:dwArg48,Stack +006C:dwArg6C,Stack +007C:dwArg7C,Stack +00E8:dwArgE8,Stack +0108:dwArg0108,Stack +0128:dwArg0128,Stack +0148:dwArg0148,Stack +FFFFFFC0:dwLoc40,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:bLoc34,Stack +FFFFFFCD:bLoc33,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF0:dwLoc10,Stack +FFFFFFF4:dwLoc0C,t0:t0_293,t1:t1_294,t4:t4_295,t5:t5_296,t6:t6_297,tp:tp_299
		defs: a0:a0_282,a4:a4_291,a5:a5_286,a7:a7_292,mstatus:mstatus_298,ra:ra_278,s0:s0_279,s10:s10_300,s11:s11_301,s3:s3_281,s5:s5_302,s6:s6_303,s7:s7_304,s9:s9_305,sp:sp_276,t0:t0_293,t1:t1_294,t4:t4_295,t5:t5_296,t6:t6_297,tp:tp_299
	s2_14 = a0_282
l2305C022:
	word32 a5_968
	word32 a3_967
	word32 a2_966
	s1_108 = __clear_dev(ra, s0_191, a5_224, mstatus, Mem225[sp_188:word32], Mem225[sp_188 + 8<i32>:word32], Mem225[sp_188 + 80<i32>:word32], Mem225[sp_188 + 84<i32>:word32], Mem225[sp_188 + 120<i32>:word32], Mem225[sp_188 + 156<i32>:word32], Mem225[sp_188 + 328<i32>:word32], Mem225[sp_188 + 392<i32>:word32], out a0_114, out a2_966, out a3_967, out a4_105, out a5_968)
l2305BFA4:
	word32 a2_963
	word32 a3_964
	word32 a5_965
	s1_108 = __clear_dev(ra, s0_191, a5_198, mstatus, Mem325[sp_188:word32], Mem325[sp_188 + 8<i32>:word32], Mem325[sp_188 + 80<i32>:word32], Mem325[sp_188 + 84<i32>:word32], Mem325[sp_188 + 120<i32>:word32], Mem325[sp_188 + 156<i32>:word32], Mem325[sp_188 + 328<i32>:word32], Mem325[sp_188 + 392<i32>:word32], out a0_114, out a2_963, out a3_964, out a4_105, out a5_965)
l2305BF62:
	s2_14 = 0xFFFFFFFE<32>
l2305BFB6:
	word32 a5_346 = CONVERT(Mem341[sp_188 + 12<i32>:byte], byte, word32) >>u 3<i32> & 1<32>
	branch a5_346 != 0<32> l2305BFD6
l2305BFC0:
	ra = __protocol_send(ra, s1_108, Mem341[a4_105 + 64<i32>:word32], 1<32>, s2_14 & 255<i32>, a4_105, s10, mstatus, Mem341[sp_188:word32], Mem341[sp_188 + 4<i32>:word32], Mem341[sp_188 + 28<i32>:word32], Mem341[sp_188 + 40<i32>:word32], Mem341[sp_188 + 200<i32>:word32], Mem341[sp_188 + 264<i32>:word32], out a0_114, out a5_346, out s2_14, out s3, out s5, out s6, out s10, out mstatus)
l2305BFD6:
	Mem414[Mem341[a0_114 + 64<i32>:word32] + 62<i32>:word16] = 0<16>
	word32 a5_947
	word32 a0_946
	word32 s1_945
	s0 = __free(ra, a0_114, a5_346, mstatus, Mem414[sp_188 + 16<i32>:word32], Mem414[sp_188 + 24<i32>:word32], Mem414[sp_188 + 96<i32>:word32], Mem414[sp_188 + 100<i32>:word32], Mem414[sp_188 + 136<i32>:word32], Mem414[sp_188 + 172<i32>:word32], Mem414[sp_188 + 344<i32>:word32], Mem414[sp_188 + 408<i32>:word32], out s1_945, out a0_946, out a3, out a4, out a5_947)
	Mem431[s0 + 64<i32>:word32] = 0<32>
l2305BEB4:
	word32 a2_940
	word32 a4_941
	word32 a5_942
	word32 a0_939
	__clear_dev(ra, s0, a5_435, mstatus, dwLoc40, dwLoc38, dwArg10, dwArg14, dwArg38, ra, dwArg0108, dwArg0148, out a0_939, out a2_940, out a3, out a4_941, out a5_942)
	a4 = CONVERT(Mem49[0x42026650<32>:byte], byte, word32)
	s2_14 = 0xFFFFFFFC<32>
	branch a4 >u 2<32> l2305BF08
l2305BECA:
	a4 = CONVERT(Mem49[0x42026670<32>:byte], byte, word32)
	branch a4 >u 2<32> l2305BF08
l2305BED6:
	branch Mem49[0x4200F560<32>:int32] == 0<32> l2305BF18
l2305BF18:
	word32 a5_943
	xTaskGetTickCount(out a5_943)
l2305BEE0:
	word32 a5_944
	xTaskGetTickCountFromISR(out a5_944)
l2305BEE4:
	word32 a0_949
	word32 a1_950
	word32 a2_951
	word32 s4_954
	word32 s7_955
	word32 s8_956
	word32 s9_957
	word32 s11_958
	word32 s2_953
	word32 a5_952
	word32 s1_948
	ra = bl_printk(ra, 0x230BF6E0<32>, 0x230BF6B4<32>, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_948, out a0_949, out a1_950, out a2_951, out a3, out a4, out a5_952, out s2_953, out s3, out s4_954, out s5, out s6, out s7_955, out s8_956, out s9_957, out s10, out s11_958)
	s2_14 = 0xFFFFFFFC<32>
l2305BF08:
	s0Out = s0
	a0Out = s2_14
	a2Out = dwArg0138
	a3Out = a3
	a4Out = a4
	s2Out = s2_14
	s3Out = s3
	s4Out = dwArgF4
	s5Out = s5
	s6Out = s6
	s8Out = dwArgD4
	s10Out = s10
	mstatusOut = mstatus
	return ra
pro_trans_read_exit:


word32 pro_trans_ack(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_data
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a5 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pro_trans_ack_entry:
l2305C060:
	word32 a0_14
	word32 s3_25
	word32 s4_26
	word32 s5_27
	word32 s8_87
	word32 s6_86
	word32 s2_85
	word32 a7_84
	word32 a5_83
	word32 a4_82
	word32 a3_81
	word32 a2_80
	word32 a1_79
	word32 s1_78
	xQueueGenericSend(Mem5[a0 + 80<i32>:word32], 0<32>, 0<32>, a4, a5, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_78, out a0_14, out a1_79, out a2_80, out a3_81, out a4_82, out a5_83, out a7_84, out s2_85, out s3_25, out s4_26, out s5_27, out s6_86, out s8_87)
	branch a0_14 == 1<32> l2305C07E
l2305C07E:
l2305C076:
l2305C078:
	s3Out = s3_25
	s4Out = s4_26
	s5Out = s5_27
	return 1<32>
pro_trans_ack_exit:


void pro_trans_layer_ack_read(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
pro_trans_layer_ack_read_entry:
l2305C082:
	branch a0 == 0<32> l2305C0BA
l2305C0BA:
l2305C084:
	branch a1 == 0<32> l2305C0BC
l2305C0BC:
	return
l2305C088:
	branch a2 >u 256<i32> l2305C0AE
l2305C09A:
	word32 a0_19 = Mem15[320<i32>:word32]
	branch false l2305C0AE
l2305C0A0:
	word32 a7_117
	word32 a6_116
	word32 a5_115
	word32 a4_114
	word32 a3_113
	word32 a2_112
	word32 a1_111
	memcpy(256<i32>, a1, a2, out a1_111, out a2_112, out a3_113, out a4_114, out a5_115, out a6_116, out a7_117)
	Mem37[a0_19 + 62<i32>:word16] = SLICE(a2, word16, 0)
l2305C0AE:
	return
pro_trans_layer_ack_read_exit:


word32 pro_trans_init(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg38, word32 dwArg0118, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __bl_ble_sync_task
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0118:[0..31]
// LiveOut: a0 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
pro_trans_init_entry:
l2305C0C0:
	word32 t1_74
	word32 a0_75
	word32 a1_76
	word32 a2_77
	word32 a3_78
	word32 a4_79
	word32 a5_80
	word32 ra_26 = memset(ra, a0, 0<32>, 176<i32>, out t1_74, out a0_75, out a1_76, out a2_77, out a3_78, out a4_79, out a5_80)
	word32 s1_34 = pro_encrypt_init(a0 + 4<i32>, a0 + 4<i32>)
	Mem36[a0 + 4<i32>:word32] = a0
	Mem37[a0 + 164<i32>:word32] = a1
	Mem38[a0 + 168<i32>:word32] = s1_34
	word32 a0_45
	word32 s1_81
	word32 a2_82
	word32 a3_83
	word32 a4_84
	word32 a5_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s0_48 = xQueueGenericCreateStatic(1<32>, 0<32>, 0<32>, a0 + 84<i32>, 3<32>, mstatus, dwArg0118, out s1_81, out a0_45, out a2_82, out a3_83, out a4_84, out a5_85, out s2_86, out s3_87, out s4_88)
	Mem59[a0_45 + 80<i32>:word32] = s0_48
	0<32> = dwArg38
	a0Out = s0_48
	return ra_26
pro_trans_init_exit:


word32 pro_trans_reset(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0148, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __bl_ble_sync_task
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a2 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: sp
pro_trans_reset_entry:
l2305C10C:
l2305C10C_thunk___clear_dev:
	word32 a2_10
	word32 a3_11
	word32 a4_12
	word32 a0_29
	word32 a5_30
	__clear_dev(ra, a0, a5, mstatus, dwArg00, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, dwArg0148, dwArg0188, out a0_29, out a2_10, out a3_11, out a4_12, out a5_30)
	a3Out = a3_11
	a4Out = a4_12
	return a2_10
pro_trans_reset_exit:


void __pack_encrypt_read(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31]
// LiveOut:
// Trashed: a0 a1 a3 a4 a5 a6 a7 t1
// Preserved: sp
__pack_encrypt_read_entry:
l2305C110:
	word32 a4_11
	word32 a6_13
	branch CONVERT(Mem0[a0 + 16<i32>:byte], byte, word32) == 0<32> l2305C13A
l2305C13A:
	a4_11 = a5 + 1<i32>
	a6_13 = a6 + 0xFFFFFFFF<32>
l2305C11A:
	a4_11 = a5 + 9<i32>
	a6_13 = a6 + 0xFFFFFFF7<32>
l2305C120:
	word32 a5_18 = CONVERT(a1 != 0<32>, bool, word32)
	Mem20[a0 + 12<i32>:byte] = SLICE(a5_18, byte, 0)
	call Mem20[a5_18:int32] (retsize: 0;)
		uses: a0:Mem20[Mem20[a5_18:word32] + 4<i32>:word32],a1:a3,a3:a4,a4:a4_30,a5:a6_27 & 255<i32>,a6:a6_27
	return
__pack_encrypt_read_exit:


void __pack_encrypt_write(word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..15]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
__pack_encrypt_write_entry:
l2305C142:
	word32 a7_20
	Mem4[a3:byte] = 0<8>
	word32 a7_11 = CONVERT(SLICE(a7, word16, 0), word16, word32)
	branch CONVERT(Mem4[a0 + 16<i32>:byte], byte, word32) == 0<32> l2305C1A6
l2305C1A6:
	Mem22[a4:byte] = SLICE(CONVERT(Mem4[a4:byte], byte, word32) + 1<32>, byte, 0)
	a7_20 = a7_11 + 0xFFFFFFFF<32>
l2305C15A:
	Mem23[a3 + 1<i32>:byte] = 0<8>
	Mem24[a3 + 2<i32>:byte] = 0<8>
	Mem25[a3 + 3<i32>:byte] = 0<8>
	Mem26[a3 + 4<i32>:byte] = 0<8>
	Mem27[a3 + 5<i32>:byte] = 0<8>
	Mem28[a3 + 6<i32>:byte] = 0<8>
	Mem29[a3 + 7<i32>:byte] = 0<8>
	Mem30[a3 + 8<i32>:byte] = 0<8>
	Mem35[a4:byte] = SLICE(CONVERT(Mem30[a4:byte], byte, word32) + 9<32>, byte, 0)
	a7_20 = a7_11 + 0xFFFFFFF7<32>
l2305C18A:
	Mem38[a0 + 12<i32>:byte] = 1<8>
	call Mem38[5<32>:int32] (retsize: 0;)
		uses: a0:Mem38[Mem38[1<32>:word32] + 4<i32>:word32],a2:a4,a3:a2,a4:a5,a5:a6,a6:CONVERT(SLICE(a7_40, word16, 0), word16, int32),a7:a7_40
	return
__pack_encrypt_write_exit:


word32 pro_encrypt_init(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pro_trans_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: s1
// Trashed: a1 a2 a5 s1 tp
// Preserved: a0 s0 sp
pro_encrypt_init_entry:
l2305C1B8:
	pro_payload_init(a0 + 4<i32>, a0 + 4<i32>)
	Mem19[a0 + 4<i32>:word32] = a0
	Mem20[a1 + 24<i32>:word32] = a0
	Mem21[0x230CBAB0<32>:word32] = a0
	return a1
pro_encrypt_init_exit:


void __payload_write(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..7] a4:[0..31] a5:[0..31] a6:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
__payload_write_entry:
l2305C1E6:
	branch a6 < 0<32> l2305C270
l2305C270:
	return
l2305C1EA:
	word32 a5_53
	word32 a6_21 = CONVERT(SLICE(a6, word16, 0), word16, word32)
	branch CONVERT(Mem11[a0 + 8<i32>:byte], byte, word32) != 0<32> l2305C242
l2305C242:
	word32 a6_23 = a6_21 + 0xFFFFFFFE<32> << 16<i32>
	word32 a6_24 = a6_23 >> 0x10<u32>
	branch a5 >= a6_23 >> 0x10<u32> l2305C250
l2305C24E:
	a6_24 = a5
l2305C250:
	word32 s0_28 = a6_24 & 255<i32>
	Mem30[a1:byte] = SLICE(s0_28, byte, 0)
	Mem33[a1 + 1<i32>:byte] = SLICE(a3, byte, 0)
	word32 a1_181
	word32 a2_182
	word32 a3_183
	word32 a4_184
	word32 a5_185
	word32 a6_186
	word32 a7_187
	memcpy(a1 + 2<i32>, a4, s0_28, out a1_181, out a2_182, out a3_183, out a4_184, out a5_185, out a6_186, out a7_187)
	a5_53 = CONVERT(Mem33[a2:byte], byte, word32) + 2<32> + s0_28
l2305C204:
	word32 a6_55 = a6_21 + 0xFFFFFFFF<32> << 16<i32>
	word32 a6_56 = a6_55 >> 0x10<u32>
	branch a5 >= a6_55 >> 0x10<u32> l2305C212
l2305C210:
	a6_56 = a5
l2305C212:
	branch (a6_56 & 255<i32>) != 4<32> l2305C238
l2305C21E:
	Mem64[a1:byte] = SLICE(a3, byte, 0)
	word32 a7_180
	word32 a6_179
	word32 a5_178
	word32 a4_177
	word32 a3_176
	word32 a2_175
	word32 a1_174
	memcpy(a1 + 1<i32>, a4, 4<32>, out a1_174, out a2_175, out a3_176, out a4_177, out a5_178, out a6_179, out a7_180)
	a5_53 = CONVERT(Mem64[a2:byte], byte, word32) + 5<32>
l2305C232:
	Mem86[a2:byte] = SLICE(a5_53, byte, 0)
l2305C238:
	return
__payload_write_exit:


void __payload_read(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
__payload_read_entry:
l2305C274:
	word32 a2_21
	word32 a1_18
	branch CONVERT(Mem5[a0 + 8<i32>:byte], byte, word32) != 0<32> l2305C2AC
l2305C2AC:
	branch a5 + 0xFFFFFFFE<32> != CONVERT(Mem5[a4:byte], byte, word32) l2305C2A6
l2305C2B8:
	Mem16[a3:byte] = SLICE(a5 + 0xFFFFFFFE<32>, byte, 0)
	Mem20[a2:byte] = SLICE(CONVERT(Mem16[a4 + 1<i32>:byte], byte, word32), byte, 0)
	a1_18 = a4 + 2<i32>
	a2_21 = CONVERT(Mem20[a3:byte], byte, word32)
l2305C280:
	branch a5 != 5<32> l2305C2A6
l2305C288:
	Mem25[a3:byte] = 4<8>
	Mem28[a2:byte] = SLICE(CONVERT(Mem25[a4:byte], byte, word32), byte, 0)
	a1_18 = a4 + 1<i32>
	a2_21 = CONVERT(Mem28[a3:byte], byte, word32)
l2305C29E:
	word32 a1_78
	word32 a2_79
	word32 a3_80
	word32 a4_81
	word32 a5_82
	word32 a6_83
	word32 a7_84
	memcpy(a1, a1_18, a2_21, out a1_78, out a2_79, out a3_80, out a4_81, out a5_82, out a6_83, out a7_84)
l2305C2A6:
	return
__payload_read_exit:


void pro_payload_init(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pro_encrypt_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
pro_payload_init_entry:
l2305C2CE:
	Mem6[0x230CBAA4<32>:word32] = a0
	Mem8[a1 + 4<i32>:word32] = a0
	return
pro_payload_init_exit:


void cmd_sys_time_now(word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0014:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s4 s8 t1 t3 t4 t5 tp
// Preserved: sp
cmd_sys_time_now_entry:
l2305C2DC:
	word32 a5_14
	word32 a1_16
	word32 a4_17
	word32 a0_60
	word32 a2_61
	word32 s4_62
	word32 s8_63
	puts(0x230BF728<32>, out a0_60, out a1_16, out a2_61, out a4_17, out a5_14, out s4_62, out s8_63)
	word32 a0_23 = bl_sys_time_get(fp + -48<i32>, a4_17, a5_14)
	0<32> = dwArg14
	word32 a1_64
	word32 a3_65
	word32 a4_66
	word32 a5_67
	utils_time_date_from_epoch(__udivdi3(a0_23, a1_16, 1000<i32>, 0<32>, out a1_64, out a3_65, out a4_66, out a5_67), fp + -36<i32>)
	return
cmd_sys_time_now_exit:


void bl_sys_time_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
bl_sys_time_cli_init_entry:
l2305C312:
	return
bl_sys_time_cli_init_exit:


void bl_sys_time_update(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sntp_recv
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 s1 tp
// Preserved: s0 sp
bl_sys_time_update_entry:
l2305C316:
	word32 a5_32
	Mem18[xTaskGetTickCount(out a5_32):word32] = 0x4200F4E0<32>
	Mem19[0x4200F4E4<32>:word32] = 0<32>
	Mem21[0x4200F4C8<32>:word32] = a0
	Mem24[0x4200F4CC<32>:word32] = a1
	return
bl_sys_time_update_exit:


word32 bl_sys_time_get(word32 a0, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_sys_time_now
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
bl_sys_time_get_entry:
l2305C34A:
	word32 a0_16
	branch (a5 | a4) == 0<32> l2305C396
l2305C396:
	a0_16 = 0xFFFFFFFF<32>
l2305C362:
	word32 a5_54
	word32 a0_19 = xTaskGetTickCount(out a5_54)
	word32 a5_24 = a0_19 - Mem14[0x4200F4E0<32>:int32]
	word32 a4_27 = a4 + a5_24
	Mem31[a4_27:word32] = a0
	Mem32[CONVERT(a4_27 <u a5_24, bool, word32) + ((a5_24 >> 0x1F<u32>) + a0_19) + 4<i32>:word32] = a0
	a0_16 = 0<32>
l2305C38C:
	return a0_16
bl_sys_time_get_exit:


word32 bl_sys_time_sync_state(word32 a0, word32 a4, word32 mstatus, word32 dwArg38, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskIncrementTick
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a2 a3 a4 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 t3 tp
// Preserved: s0 sp
bl_sys_time_sync_state_entry:
l2305C39A:
	branch Mem0[0x4200F4D8<32>:int32] == 0<32> l2305C3F8
l2305C3F8:
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s2Out = s2
	return 0xFFFFFFFF<32>
l2305C3A4:
	word32 a5_98
	word32 a4_21 = vTaskEnterCritical(a4, mstatus, out a5_98)
	word32 a5_99
	word32 a0_22 = xTaskGetTickCount(out a5_99)
	word32 a3_28
	word32 a0_25 = bl_rtc_get_timestamp_ms(a4_21, out a3_28)
	word32 a4_100
	word32 a5_101
	vTaskExitCritical(a3_28, mstatus, out a4_100, out a5_101)
	word32 a5_40 = Mem15[0x4200F4D4<32>:int32]
	word32 a0_42 = 0<32>
	word32 a3_43 = a0_22 - a5_40
	word32 a4_44 = a0_25 - Mem15[0x4200F4D0<32>:int32]
	branch a3_43 >=u a4_44 l2305C3EC
l2305C3E2:
	Mem47[a5_40 - a0_22 + a4_44:word32] = a0
	a0_42 = 1<32>
l2305C3EC:
	0<32> = dwArg38
	a2Out = dwArg10
	a3Out = a3_43
	a4Out = a4_44
	s2Out = a0_22
	return a0_42
bl_sys_time_sync_state_exit:


word32 parse_hex4(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      parse_value
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
parse_hex4_entry:
l2305C3FC:
	word32 a4_14
	word32 a3_5 = CONVERT(Mem0[a0:byte], byte, word32)
	word32 a5_15 = a3_5 + -48<i32>
	branch (a3_5 + -48<i32> & 255<i32>) <=u 9<32> l2305C420
l2305C40E:
	branch (a3_5 + -65<i32> & 255<i32>) >u 5<32> l2305C466
l2305C466:
	a4_14 = 0<32>
	branch (a3_5 + -97<i32> & 255<i32>) >u 5<32> l2305C462
l2305C474:
	a5_15 = a3_5 + -87<i32>
l2305C41C:
	a5_15 = a3_5 + -55<i32>
l2305C420:
	word32 a5_35
	word32 a3_19 = CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32)
	word32 a5_22 = a5_15 << 4<i32>
	branch (a3_19 + -48<i32> & 255<i32>) >u 9<32> l2305C47A
l2305C47A:
	word32 a3_31
	branch (a3_19 + -65<i32> & 255<i32>) >u 5<32> l2305C490
l2305C490:
	a4_14 = 0<32>
	branch (a3_19 + -97<i32> & 255<i32>) >u 5<32> l2305C462
l2305C49E:
	a3_31 = a3_19 + -87<i32>
l2305C488:
	a3_31 = a3_19 + -55<i32>
l2305C48C:
	a5_35 = a5_22 + a3_31
l2305C434:
	a5_35 = a5_22 + (a3_19 + -48<i32>)
l2305C436:
	word32 a5_57
	word32 a3_41 = CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32)
	word32 a5_44 = a5_35 << 4<i32>
	branch (a3_41 + -48<i32> & 255<i32>) >u 9<32> l2305C4A4
l2305C4A4:
	word32 a3_53
	branch (a3_41 + -65<i32> & 255<i32>) >u 5<32> l2305C4BA
l2305C4BA:
	a4_14 = 0<32>
	branch (a3_41 + -97<i32> & 255<i32>) >u 5<32> l2305C462
l2305C4C8:
	a3_53 = a3_41 + -87<i32>
l2305C4B2:
	a3_53 = a3_41 + -55<i32>
l2305C4B6:
	a5_57 = a5_44 + a3_53
l2305C44A:
	a5_57 = a5_44 + (a3_41 + -48<i32>)
l2305C44C:
	word32 a0_63 = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32)
	word32 a5_66 = a5_57 << 4<i32>
	word32 a4_67 = a0_63 + -48<i32>
	branch (a0_63 + -48<i32> & 255<i32>) >u 9<32> l2305C4CE
l2305C4CE:
	branch (a0_63 + -65<i32> & 255<i32>) >u 5<32> l2305C4E2
l2305C4E2:
	a4_14 = 0<32>
	branch (a0_63 + -97<i32> & 255<i32>) >u 5<32> l2305C462
l2305C4F0:
	a4_67 = a0_63 + -87<i32>
l2305C4DC:
	a4_67 = a0_63 + -55<i32>
l2305C460:
	a4_14 = a4_67 + a5_66
l2305C462:
	return a4_14
parse_hex4_exit:


word32 parse_string(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s11, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      parse_value
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +010C:[0..31]
// LiveOut: a0 a5 ra s0 s1 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 tp
// Preserved: sp
parse_string_entry:
l2305C4F6:
	word32 a5_101
	word32 s9_110
	branch CONVERT(Mem29[a1:byte], byte, word32) != 34<i32> l2305C542
l2305C542:
	Mem34[0x4200F4E8<32>:word32] = a1
	a5_101 = 0x4200F000<32>
	s9_110 = 0<32>
l2305C51E:
	word32 a5_303 = a1 + 1<i32>
	word32 a4_38 = 0<32>
l2305C52E:
	word32 a3_43 = CONVERT(Mem29[a5_303:byte], byte, word32)
	a4_38 = a4_38 + 1<32>
	branch a3_43 == 34<i32> l2305C570
l2305C538:
	branch a3_43 == 0<32> l2305C570
l2305C570:
	word32 a5_49 = Mem29[0x4200ECA8<32>:int32]
	word32 sp_85
	word32 a0_105
	word32 a7_109
	word32 s10_125
	call a5_49 (retsize: 0;)
		uses: a0:a4_45,a1:a1,a5:a5_49,a7:a7_109,ra:ra,s0:s0,s1:s1,s10:a1 + 1<i32>,s11:s11,s2:s2,s3:s3,s4:s4,s5:s5,s6:s6,s7:s7,s8:s8,s9:s9,Stack +0004:a0
		defs: a0:a0_105,a5:a5_101,a7:a7_109,s10:s10_97,s11:s11_98,s2:s2_89,s3:s3_90,s5:s5_92,s6:s6_93,s7:s7_94,sp:sp_85
	dwLoc4C = a0
	s9_110 = a0_105
	branch a0_105 == 0<32> l2305C54C
l2305C582:
	s11 = a0_105
	s5 = 92<i32>
	s6 = 110<i32>
	s7 = 117<i32>
	s2 = 0xF2FFF800<32>
	s3 = 0x230CBAAC<32>
l2305C5B2:
	word32 a4_127 = CONVERT(Mem126[s10_125:byte], byte, word32)
	branch a4_127 == 34<i32> l2305C5C0
l2305C5BE:
	branch a4_127 != 0<32> l2305C5E2
l2305C5E2:
	word32 a2_129 = s10_125 + 1<i32>
	branch a4_127 == 92<i32> l2305C5F4
l2305C5F4:
	word32 a5_133
	word32 a4_131 = CONVERT(Mem126[s10_125 + 1<i32>:byte], byte, word32)
	branch a4_131 == 110<i32> l2305C642
l2305C642:
	a5_133 = 0xA<32>
l2305C5FC:
	branch a4_131 >u 110<i32> l2305C61A
l2305C61A:
	branch a4_131 == 116<i32> l2305C64C
l2305C64C:
	a5_133 = 9<32>
l2305C644:
	Mem139[s11:byte] = SLICE(a5_133, byte, 0)
l2305C622:
	branch a4_131 == 117<i32> l2305C650
l2305C650:
	word32 a0_142 = parse_hex4(s10_125 + 2<i32>)
	word32 a7_150 = a0_142
	a2_129 = s10_125 + 5<i32>
	branch a0_142 <=u 0xF2000001<32> l2305C63A
l2305C666:
	branch a0_142 == 0<32> l2305C63A
l2305C668:
	word32 a5_162
	word32 a4_158
	word32 a1_157
	word32 a0_160
	branch a0_142 >u 0xF2FFF401<32> l2305C6C2
l2305C6C2:
	branch a0_142 >u 127<i32> l2305C6E8
l2305C6E8:
	branch a0_142 <=u 2047<i32> l2305C710
l2305C710:
	a1_157 = s11 + 2<i32>
	a4_158 = 2<32>
l2305C6F0:
	branch a0_142 >=u 0x10000000<32> l2305C6AA
l2305C6F4:
	a0_160 = s11 + 3<i32>
	a4_158 = 3<32>
l2305C6CA:
	a5_162 = s11 + 1<i32>
	a4_158 = 1<32>
l2305C670:
	branch CONVERT(Mem126[s10_125 + 6<i32>:byte], byte, word32) != 92<i32> l2305C63A
l2305C678:
	branch CONVERT(Mem126[s10_125 + 7<i32>:byte], byte, word32) != 117<i32> l2305C63A
l2305C680:
	Mem167[sp_85 + 132<i32>:word32] = a0_142
	word32 a0_169 = parse_hex4(s10_125 + 8<i32>)
	a2_129 = s10_125 + 11<i32>
	branch a0_169 >u 0xF2000001<32> l2305C63A
l2305C696:
	a2_129 = Mem167[sp_85 + 40<i32>:word32]
	a7_150 = (a0_142 << 0xA<u32> & 0xFFC00<32> | a0_169 & 1023<i32>) + 0x10000000<32>
l2305C6AA:
	Mem188[s11 + 3<i32>:byte] = SLICE(a7_150 & 63<i32> | -128<i32>, byte, 0)
	a0_160 = s11 + 3<i32>
	a7_150 = a7_150 >>u 6<u32>
	a4_158 = 4<32>
l2305C6FA:
	Mem197[a0_160 + 4095<i32>:byte] = SLICE(a7_150 & 63<i32> | -128<i32>, byte, 0)
	a1_157 = a0_160 + -1<i32>
	a7_150 = a7_150 >>u 6<u32>
l2305C716:
	Mem204[a1_157 + 4095<i32>:byte] = SLICE(a7_150 & 63<i32> | -128<i32>, byte, 0)
	a5_162 = a1_157 + -1<i32>
	a7_150 = a7_150 >>u 6<u32>
l2305C6D0:
	Mem222[a5_162 + 4095<i32>:byte] = SLICE(a7_150 | CONVERT(Mem215[a4_158 + 0x230CBAAC<32>:byte], byte, word32), byte, 0)
	s11 = a5_162 + (a4_158 + 0xFFFFFFFF<32>)
l2305C626:
	branch a4_131 != 114<i32> l2305C614
l2305C62E:
	a4_131 = 0xD<32>
l2305C600:
	word32 a4_227
	word32 a1_226 = s11 + 1<i32>
	branch a4_131 == 98<i32> l2305C632
l2305C632:
	a4_227 = 8<32>
l2305C60C:
	branch a4_131 == 102<i32> l2305C63E
l2305C63E:
	a4_227 = 0xC<32>
l2305C634:
	Mem232[s11:byte] = SLICE(a4_227, byte, 0)
	s11 = a1_226
l2305C614:
	Mem237[s11:byte] = SLICE(a4_131, byte, 0)
l2305C648:
	s11 = s11 + 1<32>
l2305C63A:
	a2_129 = a2_129 + 1<32>
l2305C5EA:
	Mem250[s11:byte] = SLICE(a4_127, byte, 0)
	s11 = s11 + 1<32>
l2305C5F0:
	s10_125 = a2_129
l2305C5C0:
	Mem255[s11:byte] = 0<8>
	word32 a4_257 = CONVERT(Mem255[s10_125:byte], byte, word32)
	branch a4_257 != 34<i32> l2305C5D2
l2305C5D0:
	s10_125 = s10_125 + 1<32>
l2305C5D2:
	Mem279[0x32<32>:word32] = a0_105
	Mem282[0x10<32>:word32] = a4_257
	a5_101 = 4<32>
	s9_110 = s10_125
l2305C54C:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = s9_110
	a5Out = a5_101
	s2Out = s2
	s3Out = s3
	s4Out = dwArg0168
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArg0148
	s9Out = s9_110
	s11Out = s11
	return dwLoc08
parse_string_exit:
l2305C53A:
	branch a3_43 == 92<i32> l2305C56C
l2305C56C:
	a5_303 = a5_303 + 2<32>
l2305C53E:
	a5_303 = a5_303 + 1<32>


word32 skip(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      parse_value
//      cJSON_Parse
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a4 a5
// Preserved: sp
skip_entry:
l2305C72C:
l2305C72E:
	branch a0 == 0<32> l2305C73E
l2305C730:
	a5 = CONVERT(Mem0[a0:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	branch a5 <=u 0x1F<32> l2305C740
l2305C740:
	a0 = a0 + 1<32>
l2305C73E:
	a5Out = a5
	return a0
skip_exit:


word32 cJSON_New_Item(word32 ra, word32 s0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      parse_value
//      cJSON_Parse
//      cJSON_CreateNumber
//      cJSON_CreateString
//      cJSON_CreateObject
// MayUse:  ra:[0..31] s0:[0..31]
// LiveOut: a5 ra
// Trashed: a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
cJSON_New_Item_entry:
l2305C744:
	word32 a5_5 = Mem0[0x4200ECA8<32>:int32]
	word32 a0_16
	word32 a5_13
	word32 ra_15
	call a5_5 (retsize: 0;)
		uses: a0:40<i32>,a5:a5_5,ra:ra,s0:s0,Stack +0004:s0,Stack +0084:ra
		defs: a0:a0_16,a5:a5_13,ra:ra_15
	branch a0_16 == 0<32> l2305C766
l2305C75C:
	word32 t1_56
	word32 a0_57
	word32 a1_58
	word32 a2_59
	word32 a3_60
	word32 a4_61
	ra_15 = memset(ra_15, a0_16, 0<32>, 40<i32>, out t1_56, out a0_57, out a1_58, out a2_59, out a3_60, out a4_61, out a5_13)
l2305C766:
	a5Out = a5_13
	return ra_15
cJSON_New_Item_exit:


word32 ensure(word32 ra, word32 a0, word32 a1, word32 a4, word32 a5, word32 s3, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_number
//      print_string_ptr
//      print_array.isra.4
//      print_object.isra.3
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s3:[0..31]
// LiveOut: a0 a1 a4 a5 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
ensure_entry:
l2305C770:
	word32 s2_102 = 0<32>
	branch a0 == 0<32> l2305C7E6
l2305C780:
	s2_102 = Mem13[a0:int32]
	branch s2_102 == 0<32> l2305C7E6
l2305C788:
	word32 a0_20 = Mem13[a4 + 4<i32>:word32]
	a1 = a1 + a5
	branch a4 < a1 l2305C796
l2305C796:
	word32 s0_25 = a1 + -1<i32> | a1 + -1<i32> >> 1<u32>
	word32 s0_27 = s0_25 | s0_25 >> 2<u32>
	word32 s0_29 = s0_27 | s0_27 >> 4<u32>
	word32 s0_31 = s0_29 | s0_29 >> 8<u32>
	word32 s0_33 = s0_31 | s0_31 >> 0x10<u32>
	word32 a5_35 = Mem13[0x4200ECA8<32>:int32]
	word32 ra_41
	word32 s0_42
	word32 a0_45
	word32 a4_47
	word32 a1_48
	word32 a2_53
	word32 a7_145
	word32 a3_146
	word32 t0_147
	word32 t1_148
	word32 t4_149
	word32 t5_150
	word32 t6_151
	call a5_35 (retsize: 0;)
		uses: a0:s0_33 + 1<32>,a1:s0_27 >> 4<u32>,a3:a3_146,a4:a4,a5:a5_35,a7:a7_145,ra:ra,s0:s0_33 + 1<32>,s1:a0_20,s2:s2_16,s3:s3,t0:t0_147,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151
		defs: a0:a0_45,a1:a1_48,a2:a2_53,a3:a3_146,a4:a4_47,a7:a7_145,ra:ra_41,s0:s0_42,t0:t0_147,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151
	word32 s1_56 = Mem13[a1_48:word32]
	branch a0_45 != 0<32> l2305C7F6
l2305C7F6:
	word32 a4_59
	word32 a1_62
	word32 a2_211
	word32 a3_212
	word32 a5_213
	word32 a6_214
	word32 a7_215
	memcpy(a0_45, a1_48, a2_53, out a1_62, out a2_211, out a3_212, out a4_59, out a5_213, out a6_214, out a7_215)
	word32 a5_72 = Mem13[0x4200ECA4<32>:int32]
	word32 a7_89
	word32 a3_90
	word32 t0_91
	word32 t1_92
	word32 t4_93
	word32 t5_94
	word32 t6_95
	call a5_72 (retsize: 0;)
		uses: a0:a0_45,a1:a1_62,a3:a3_90,a4:a4_59,a5:a5_72,a7:a7_89,ra:ra_41,s0:s0_42,s1:Mem13[a0_45:word32],s2:a0_45,s3:0x4200ECA4<32>,t0:t0_91,t1:t1_92,t4:t4_93,t5:t5_94,t6:t6_95
		defs: a1:a1_83,a3:a3_90,a4:a4_82,a5:a5_81,a7:a7_89,ra:ra_76,s0:s0_77,s2:s2_75,s3:s3_79,t0:t0_91,t1:t1_92,t4:t4_93,t5:t5_94,t6:t6_95
	s1 = Mem13[a5 + 8<i32>:word32]
	Mem97[s0 + 4<i32>:word32] = s1
	Mem98[s1:word32] = s2_102
l2305C7D6:
	word32 a5_99 = Mem13[0x4200ECA4<32>:int32]
	word32 a7_116
	word32 a3_117
	word32 t0_118
	word32 t1_119
	word32 t4_120
	word32 t5_121
	word32 t6_122
	call a5_99 (retsize: 0;)
		uses: a0:a1_48,a1:a1_48,a3:a3_117,a4:a4_47,a5:a5_99,a7:a7_116,ra:ra_41,s0:s0_42,s1:s1_56,s2:a0_45,s3:0x4200ECA4<32>,t0:t0_118,t1:t1_119,t4:t4_120,t5:t5_121,t6:t6_122
		defs: a1:a1_110,a3:a3_117,a4:a4_109,a5:a5_108,a7:a7_116,ra:ra_103,s0:s0_104,s1:s1_105,s2:s2_102,s3:s3_106,t0:t0_118,t1:t1_119,t4:t4_120,t5:t5_121,t6:t6_122
	Mem123[s1 + 4<i32>:word32] = 0<32>
	Mem124[s1:word32] = 0<32>
l2305C792:
	s2_102 = s2_102 + a5
l2305C7E6:
	s0Out = s0
	s1Out = s1
	a0Out = s2_102
	a1Out = a1
	a4Out = a4
	a5Out = a5
	s2Out = s2_102
	s3Out = s3
	s4Out = dwArg04
	s8Out = dwLoc1C
	return ra
ensure_exit:


word32 cJSON_strdup(word32 ra, word32 s0, word32 a0, word32 dwArg44, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cJSON_AddItemToObject
//      cJSON_CreateString
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a4 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
cJSON_strdup_entry:
l2305C80E:
	word32 a1_87
	word32 a2_88
	word32 a3_89
	word32 a4_90
	word32 a5_91
	word32 a0_10 = strlen(a0, out a1_87, out a2_88, out a3_89, out a4_90, out a5_91)
	word32 a5_17 = Mem9[0x4200ECA8<32>:int32]
	word32 a0_24
	word32 a1_31
	word32 a4_30
	word32 a5_25
	call a5_17 (retsize: 0;)
		uses: a0:a0_10 + 1<i32>,a2:a0_10 + 1<i32>,a5:a5_17,ra:ra,s0:s0,Stack +0004:a0_10 + 1<i32>
		defs: a0:a0_24,a1:a1_31,a4:a4_30,a5:a5_25
	word32 s0_32 = a0_24
	branch a0_24 == 0<32> l2305C838
l2305C830:
	word32 a1_92
	word32 a2_93
	word32 a3_94
	word32 a6_95
	word32 a7_96
	memcpy(a0_24, a1_31, dwArg44, out a1_92, out a2_93, out a3_94, out a4_30, out a5_25, out a6_95, out a7_96)
	s0_32 = a0
l2305C838:
	a0Out = s0_32
	a4Out = a4_30
	a5Out = a5_25
	return s0_32
cJSON_strdup_exit:


word32 update(word32 a0, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_array.isra.4
//      print_object.isra.3
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: s0 sp
update_entry:
l2305C842:
	word32 s0_12 = 0<32>
	branch a0 == 0<32> l2305C85E
l2305C84C:
	s0_12 = 0<32>
	branch a4 == 0<32> l2305C85E
l2305C852:
	word32 a1_43
	word32 a2_44
	word32 a3_45
	s0_12 = strlen(a4, out a1_43, out a2_44, out a3_45, out a4, out a5)
l2305C85E:
	a4Out = a4
	a5Out = a5
	return s0_12
update_exit:


void print_number(word32 ra, word32 s1, word32 a0, word32 a1, word32 fflags, word32 frm)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
print_number_entry:
l2305C868:
	word32 s3_17 = Mem15[a0 + 28<i32>:int32]
	word32 s2_18 = Mem15[a0 + 24<i32>:int32]
	word32 sp_117 = fp + 0xFFFFFFE0<32>
	word32 a1_29
	word32 a4_31
	word32 a5_32
	branch __eqdf2(s2_18, s3_17, 0<32>, 0<32>, fflags, frm, out a1_29, out a4_31, out a5_32) != 0<32> l2305C8CA
l2305C8CA:
	word32 a1_42
	word32 a1_48
	word32 a7_654
	word32 a1_113
	word32 a5_140
	word32 a4_141
	branch __ledf2(__subdf3(ra, __floatsidf(Mem15[a0 + 20<i32>:int32], out a1_42), a1_42, s2_18, s3_17, fflags, frm, out a1_48), fabs(a1_48), Mem15[0x230BF7C0<32>:int32], Mem15[0x230BF7C4<32>:int32], fflags, frm, out a1_113, out a4_141, out a5_140, out a7_654) > 0<32> l2305C950
l2305C8F2:
	word32 a7_666
	branch __ledf2(s2_18, s3_17, Mem15[0x230BF7C8<32>:int32], Mem15[0x230BF7CC<32>:int32], fflags, frm, out a1_113, out a4_141, out a5_140, out a7_666) > 0<32> l2305C950
l2305C90A:
	branch __gedf2(s2_18, s3_17, Mem15[0x230BF7D0<32>:int32], Mem15[0x230BF7D4<32>:int32], fflags, frm, out a1_113, out a4_141, out a5_140) < 0<32> l2305C950
l2305C950:
	word32 s1_121
	word32 ra_120
	word32 s3_123
	word32 s2_122
	word32 a0_124
	branch a1 == 0<32> l2305C9B4
l2305C9B4:
	word32 a5_106 = Mem15[0x4200ECA8<32>:int32]
	word32 s9_496
	word32 s5_493
	word32 s6_494
	word32 s7_495
	word32 s10_491
	word32 s11_492
	call a5_106 (retsize: 0;)
		uses: a0:64<i32>,a1:a1_113,a5:a5_106,fflags:fflags,frm:frm,ra:ra,s0:a1,s1:0x230BF000<32>,s10:s10_491,s11:s11_492,s2:s2_18,s3:s3_17,s4:a0,s5:s5_493,s6:s6_494,s7:s7_495,s9:s9_496
		defs: a0:a0_124,fflags:fflags_133,frm:frm_132,ra:ra_120,s1:s1_121,s10:s10_491,s11:s11_492,s2:s2_122,s3:s3_123,s5:s5_493,s6:s6_494,s7:s7_495,s9:s9_496,sp:sp_117
l2305C952:
	word32 s0_693
	word32 s4_697
	word32 a5_696
	word32 a4_695
	word32 s8_698
	word32 a1_694
	ra_120 = ensure(ra, a1, 64<i32>, a4_141, a5_140, s3_17, out s0_693, out s1_121, out a0_124, out a1_694, out a4_695, out a5_696, out s2_122, out s3_123, out s4_697, out s8_698)
l2305C95C:
	branch a0_124 == 0<32> l2305C8AA
l2305C960:
	word32 a1_270
	word32 a1_182
	word32 a1_186
	word32 a4_700
	word32 a1_699
	word32 a5_701
	word32 a7_702
	branch __ledf2(__subdf3(ra_120, floor(ra_120, s2_122, s3_123, fflags, frm, out a1_182), a1_182, s2_122, s3_123, fflags, frm, out a1_186), fabs(a1_186), Mem15[s1_121 + 1984<i32>:int32], Mem15[s1_121 + 1988<i32>:int32], fflags, frm, out a1_699, out a4_700, out a5_701, out a7_702) > 0<32> l2305C9C4
l2305C984:
	word32 a1_707
	word32 a4_708
	word32 a5_709
	word32 a7_710
	branch __ledf2(s2_122, fabs(s3_123), Mem15[0x230BF7D8<32>:int32], Mem15[0x230BF7DC<32>:int32], fflags, frm, out a1_707, out a4_708, out a5_709, out a7_710) >= 0<32> l2305C9C4
l2305C9C4:
	word32 a1_703
	word32 a4_704
	word32 a5_705
	word32 a7_706
	branch __ledf2(s2_122, fabs(s3_123), Mem15[0x230BF7E0<32>:int32], Mem15[0x230BF7E4<32>:int32], fflags, frm, out a1_703, out a4_704, out a5_705, out a7_706) >= 0<32> l2305C9EE
l2305C9EE:
	word32 a1_711
	word32 a4_712
	word32 a5_713
	branch __gedf2(s2_122, fabs(s3_123), Mem15[0x230BF7E8<32>:int32], Mem15[0x230BF7EC<32>:int32], fflags, frm, out a1_711, out a4_712, out a5_713) > 0<32> l2305C9E0
l2305CA0A:
	a1_270 = 0x230BF7FC<32>
l2305C9E0:
	a1_270 = 0x230BF7F8<32>
l2305C9A0:
	a1_270 = 0x230BF7F0<32>
l2305C9AC:
	word32 s0_714
	word32 s1_715
	word32 a0_716
	word32 a1_717
	word32 a2_718
	word32 a4_719
	word32 a5_720
	word32 s2_721
	word32 s3_722
	word32 s4_723
	word32 s5_724
	word32 s6_725
	word32 s7_726
	word32 s8_727
	word32 s9_728
	word32 s10_729
	word32 s11_730
	sprintf(ra_120, a0_124, a1_270, Mem15[sp_117 + 24<i32>:word32], Mem15[sp_117 + 56<i32>:word32], Mem15[sp_117 + 100<i32>:word32], Mem15[sp_117 + 128<i32>:word32], Mem15[sp_117 + 132<i32>:word32], Mem15[sp_117 + 168<i32>:word32], Mem15[sp_117 + 204<i32>:word32], out s0_714, out s1_715, out a0_716, out a1_717, out a2_718, out a4_719, out a5_720, out s2_721, out s3_722, out s4_723, out s5_724, out s6_725, out s7_726, out s8_727, out s9_728, out s10_729, out s11_730)
l2305C922:
	word32 ra_324
	word32 a0_328
	branch a1 == 0<32> l2305C942
l2305C942:
	word32 a5_319 = Mem15[0x4200ECA8<32>:int32]
	word32 s10_345
	word32 s11_346
	word32 s5_347
	word32 s6_348
	word32 s7_349
	word32 s9_350
	call a5_319 (retsize: 0;)
		uses: a0:0x15<32>,a1:a1_93,a5:a5_319,fflags:fflags,frm:frm,ra:ra,s0:a1,s1:0x230BF000<32>,s10:s10_345,s11:s11_346,s2:s2_18,s3:s3_17,s4:a0,s5:s5_347,s6:s6_348,s7:s7_349,s9:s9_350
		defs: a0:a0_328,ra:ra_324,s10:s10_345,s11:s11_346,s5:s5_347,s6:s6_348,s7:s7_349,s9:s9_350,sp:sp_321
l2305C924:
	word32 a4_670
	word32 s4_674
	word32 s8_675
	word32 a5_671
	word32 s2_672
	word32 s3_673
	word32 a1_669
	word32 s1_668
	word32 s0_667
	ra_324 = ensure(ra, a1, 0x15<32>, a4_141, a5_140, s3_17, out s0_667, out s1_668, out a0_328, out a1_669, out a4_670, out a5_671, out s2_672, out s3_673, out s4_674, out s8_675)
l2305C92C:
	branch a0_328 == 0<32> l2305C8AA
l2305C930:
	word32 s6_687
	word32 s7_688
	word32 s9_690
	word32 s10_691
	word32 s11_692
	word32 s5_686
	word32 s8_689
	word32 a0_678
	word32 s4_685
	word32 s3_684
	word32 a5_682
	word32 s2_683
	word32 a1_679
	word32 a2_680
	word32 a4_681
	word32 s1_677
	word32 s0_676
	sprintf(ra_324, a0_328, 0x230C7894<32>, Mem15[sp_117 + 24<i32>:word32], Mem15[sp_117 + 56<i32>:word32], Mem15[sp_117 + 100<i32>:word32], Mem15[sp_117 + 128<i32>:word32], Mem15[sp_117 + 132<i32>:word32], Mem15[sp_117 + 168<i32>:word32], Mem15[sp_117 + 204<i32>:word32], out s0_676, out s1_677, out a0_678, out a1_679, out a2_680, out a4_681, out a5_682, out s2_683, out s3_684, out s4_685, out s5_686, out s6_687, out s7_688, out s8_689, out s9_690, out s10_691, out s11_692)
l2305C890:
	word32 a0_416
	branch a1 == 0<32> l2305C8BC
l2305C8BC:
	word32 a5_407 = Mem15[0x4200ECA8<32>:int32]
	word32 s10_433
	word32 s11_434
	word32 s5_435
	word32 s6_436
	word32 s7_437
	word32 s9_438
	call a5_407 (retsize: 0;)
		uses: a0:2<32>,a1:a1_29,a5:a5_407,fflags:fflags,frm:frm,ra:ra,s0:a1,s1:s1,s10:s10_433,s11:s11_434,s2:s2_18,s3:s3_17,s4:a0,s5:s5_435,s6:s6_436,s7:s7_437,s9:s9_438
		defs: a0:a0_416,s10:s10_433,s11:s11_434,s5:s5_435,s6:s6_436,s7:s7_437,s9:s9_438
l2305C892:
	word32 s4_662
	word32 s8_663
	word32 s3_661
	word32 s2_660
	word32 a4_658
	word32 a5_659
	word32 s0_655
	word32 s1_656
	word32 a1_657
	ensure(ra, a1, 2<32>, a4_31, a5_32, s3_17, out s0_655, out s1_656, out a0_416, out a1_657, out a4_658, out a5_659, out s2_660, out s3_661, out s4_662, out s8_663)
l2305C89A:
	branch a0_416 == 0<32> l2305C8AA
l2305C89E:
	word32 a4_664
	word32 a5_665
	strcpy(a0_416, 0x230AA38C<32>, out a4_664, out a5_665)
l2305C8AA:
	return
print_number_exit:


word32 print_string_ptr(word32 ra, word32 a0, word32 a1, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s10, word32 dwArg1C, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_object.isra.3
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s10:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +001C:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a4 a5 a6 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
print_string_ptr_entry:
l2305CA18:
	word32 sp_3 = fp + -48<i32>
	word32 s0_14 = a0
	word32 a4_100 = 0<32>
l2305CA40:
	word32 a5_226 = CONVERT(Mem32[s0_14:byte], byte, word32)
	branch a5_226 != 0<32> l2305CA7C
l2305CA7C:
	word32 a2_41 = 1<32>
	branch (a5_226 + -1<i32> & 255<i32>) <=u 0x1E<32> l2305CA96
l2305CA8A:
	branch a5_226 == 34<i32> l2305CA96
l2305CA8E:
	a2_41 = CONVERT(a5_226 <u -93<i32>, bool, word32)
l2305CA96:
	a4_100 = a4_100 | a2_41
	s0_14 = s0_14 + 1<32>
l2305CA46:
	word32 ra_113
	word32 s3_116
	word32 s2_104
	word32 a1_108
	word32 a4_110
	word32 s1_123
	word32 a5_111
	word32 s0_125
	branch a4_100 != 0<32> l2305CAAA
l2305CAAA:
	branch a0 != 0<32> l2305CB18
l2305CB18:
	word32 s3_236 = a0
	word32 s0_232 = 0<32>
	s5 = 0x230C0000<32>
	s6 = 0x1F<32>
l2305CAF8:
	word32 s4_60 = CONVERT(Mem32[s3_236:byte], byte, word32)
	branch s4_60 == 0<32> l2305CB24
l2305CB24:
	word32 a0_101
	word32 a1_62 = s0_232 + 3<i32>
	branch a1 == 0<32> l2305CB6A
l2305CB6A:
	word32 a5_65 = Mem32[0x4200ECA8<32>:int32]
	call a5_65 (retsize: 0;)
		uses: a0:a1_62,a1:a1_62,a5:a5_65,ra:ra,s0:s0_61,s1:a1,s10:s10,s11:s11_481,s2:a0,s3:s3_58,s4:s4_60,s5:0x230C0000<32>,s6:0x1F<32>,s7:s7,s8:s8,s9:s9
		defs: a0:a0_81,a1:a1_80,a4:a4_91,a5:a5_92,ra:ra_82,s10:s10_90,s11:s11_481,s2:s2_79,s3:s3_83,s5:s5_85,s6:s6_86,s7:s7_87,s9:s9_89,sp:sp_76
l2305CB2A:
	word32 s4_827
	word32 s8_828
	word32 s0_825
	word32 s1_826
	ra_113 = ensure(ra, a1, a1_62, a4_100, a5_226, s3_236, out s0_825, out s1_826, out a0_101, out a1_108, out a4_110, out a5_111, out s2_104, out s3_116, out s4_827, out s8_828)
l2305CB30:
	s1_123 = a0_101
	branch a0_101 == 0<32> l2305CAC8
l2305CB34:
	Mem126[a0_101:byte] = 0x22<8>
	s0_125 = a0_101 + 1<i32>
	s6 = 0x1F<32>
	s3_116 = 92<i32>
	s5 = 0xC<32>
	s7 = 102<i32>
	word32 s8_131 = 0x230C0000<32>
	word32 s4_132 = 34<i32>
	s9 = 0xD<32>
	s10 = 114<i32>
l2305CB5A:
	word32 a5_137 = CONVERT(Mem136[s2_104:byte], byte, word32)
	branch a5_137 != 0<32> l2305CB78
l2305CB78:
	word32 a0_139 = s0_125 + 1<i32>
	s2_104 = s2_104 + 1<32>
	branch s6 >=u a5_137 l2305CB92
l2305CB82:
	branch a5_137 == s4_132 l2305CB92
l2305CB86:
	branch a5_137 == s3_116 l2305CB92
l2305CB92:
	Mem146[s0_125:byte] = SLICE(s3_116, byte, 0)
	word32 a2_148 = CONVERT(Mem146[s2_104 + -1<i32>:byte], byte, word32)
	branch a2_148 == s5 l2305CBEC
l2305CBEC:
	Mem154[s0_125 + 1<i32>:byte] = SLICE(s7, byte, 0)
	a0_139 = s0_125 + 2<i32>
l2305CB9E:
	branch s5 <u a2_148 l2305CBC2
l2305CBC2:
	branch a2_148 == s4_132 l2305CBE2
l2305CBE2:
	Mem157[s0_125 + 1<i32>:byte] = SLICE(s4_132, byte, 0)
	a0_139 = s0_125 + 2<i32>
l2305CBC6:
	branch a2_148 == s3_116 l2305CBD8
l2305CBD8:
	Mem159[s0_125 + 1<i32>:byte] = SLICE(s3_116, byte, 0)
	a0_139 = s0_125 + 2<i32>
l2305CBCA:
	branch a2_148 != s9 l2305CC0A
l2305CBCE:
	Mem165[s0_125 + 1<i32>:byte] = SLICE(s10, byte, 0)
	a0_139 = s0_125 + 2<i32>
l2305CBA2:
	word32 a5_168
	branch a2_148 == 9<32> l2305CC00
l2305CC00:
	a0_139 = s0_125 + 2<i32>
	a5_168 = 116<i32>
l2305CBA8:
	branch a2_148 == 0xA<32> l2305CBF6
l2305CBF6:
	a0_139 = s0_125 + 2<i32>
	a5_168 = 110<i32>
l2305CBAE:
	branch a2_148 != 8<32> l2305CC0A
l2305CC0A:
	word32 s0_194
	word32 a0_829
	word32 a2_830
	word32 a5_831
	ra_113 = sprintf(ra_113, a0_139, s8_131 + -2036<i32>, Mem146[sp_3 + 24<i32>:word32], Mem146[sp_3 + 56<i32>:word32], Mem146[sp_3 + 100<i32>:word32], Mem146[sp_3 + 128<i32>:word32], Mem146[sp_3 + 132<i32>:word32], Mem146[sp_3 + 168<i32>:word32], Mem146[sp_3 + 204<i32>:word32], out s0_194, out s1_123, out a0_829, out a1_108, out a2_830, out a4_110, out a5_831, out s2_104, out s3_116, out s4_132, out s5, out s6, out s7, out s8_131, out s9, out s10, out s11)
	a0_139 = s0_194 + 6<i32>
l2305CBB4:
	a0_139 = s0_125 + 2<i32>
	a5_168 = 98<i32>
l2305CBBC:
	Mem214[s0_125 + 1<i32>:byte] = SLICE(a5_168, byte, 0)
l2305CB8A:
	Mem215[s0_125:byte] = SLICE(a5_137, byte, 0)
l2305CB8E:
	s0_125 = a0_139
l2305CB60:
	Mem220[s0_125:byte] = 0x22<8>
	a5_111 = 34<i32>
l2305CB00:
	word32 a3_824
	word32 a2_823
	word32 a1_822
	branch strchr(0x230BF804<32>, s4_60, out a1_822, out a2_823, out a3_824, out a4_100, out a5_226) != 0<32> l2305CAF4
l2305CAF4:
	s0_232 = s0_232 + 2<32>
l2305CB0C:
	branch s4_60 <=u 0x1F<32> l2305CB14
l2305CB14:
	s0_232 = s0_232 + 6<32>
l2305CB10:
	s0_232 = s0_232 + 1<32>
l2305CAF6:
	s3_236 = s3_236 + 1<32>
l2305CAAE:
	word32 a0_267
	branch a1 == 0<32> l2305CAE6
l2305CAE6:
	word32 a5_240 = Mem32[0x4200ECA8<32>:int32]
	call a5_240 (retsize: 0;)
		uses: a0:3<32>,a1:0x1E<32>,a5:a5_240,ra:ra,s0:s0_36,s1:a1,s10:s10,s11:s11_290,s2:a0,s3:s3,s4:s4,s5:s5,s6:s6,s7:s7,s8:s8,s9:s9
		defs: a0:a0_267,a1:a1_266,a4:a4_277,a5:a5_278,ra:ra_268,s10:s10_276,s11:s11_290,s2:s2_265,s3:s3_269,s5:s5_271,s6:s6_272,s7:s7_273,s9:s9_275
l2305CAB0:
	word32 s4_820
	word32 s8_821
	word32 s1_819
	word32 s0_818
	ra_113 = ensure(ra, a1, 3<32>, a4_100, a5_226, s3, out s0_818, out s1_819, out a0_267, out a1_108, out a4_110, out a5_111, out s2_104, out s3_116, out s4_820, out s8_821)
l2305CAB8:
	s1_123 = a0_267
	branch a0_267 == 0<32> l2305CAC8
l2305CABC:
	a1_108 = strcpy(a0_267, 0x230BF800<32>, out a4_110, out a5_111)
l2305CA48:
	word32 a0_331
	word32 s3_321 = s0_14 - a0
	branch a1 == 0<32> l2305CA9C
l2305CA9C:
	word32 a5_324 = Mem32[0x4200ECA8<32>:int32]
	call a5_324 (retsize: 0;)
		uses: a0:s3_321 + 3<i32>,a1:s3_321 + 3<i32>,a5:a5_324,ra:ra,s0:s0_36,s1:a1,s10:s10,s11:s11_354,s2:a0,s3:s3_321,s4:s4,s5:s5,s6:s6,s7:s7,s8:s8,s9:s9
		defs: a0:a0_331,a1:a1_330,a4:a4_341,a5:a5_342,ra:ra_332,s10:s10_340,s11:s11_354,s2:s2_329,s3:s3_333,s5:s5_335,s6:s6_336,s7:s7_337,s9:s9_339
l2305CA52:
	word32 s0_814
	word32 s1_815
	word32 s4_816
	word32 s8_817
	ra_113 = ensure(ra, a1, s3_321 + 3<i32>, a4_100, a5_226, s3_321, out s0_814, out s1_815, out a0_331, out a1_108, out a4_110, out a5_111, out s2_104, out s3_116, out s4_816, out s8_817)
l2305CA58:
	s1_123 = a0_331
	branch a0_331 == 0<32> l2305CAC8
l2305CA5C:
	Mem381[a0_331:byte] = 0x22<8>
	word32 s0_379 = a0_331 + 1<i32>
	s0_125 = s0_379 + s3_116
	a1_108 = strcpy(s0_379, s2_104, out a4_110, out a5_111)
	Mem390[s0_125:byte] = 0x22<8>
l2305CA76:
	Mem392[s0_125 + 1<i32>:byte] = 0<8>
l2305CAC8:
	0<32> = dwArg0128
	0<32> = dwArg1C
	s1Out = s1_123
	a0Out = s1_123
	a1Out = a1_108
	a4Out = a4_110
	a5Out = a5_111
	a6Out = dwArg98
	s2Out = s2_104
	s3Out = s3_116
	s4Out = dwArg78
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra_113
print_string_ptr_exit:


word32 cJSON_strcasecmp(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cJSON_GetObjectItem
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
cJSON_strcasecmp_entry:
l2305CC18:
	word32 a5_35 = CONVERT(a1 != 0<32>, bool, word32)
	branch a0 == 0<32> l2305CC62
l2305CC1E:
	a5_35 = 1<32>
	branch a1 == 0<32> l2305CC62
l2305CC22:
l2305CC2C:
	a3 = CONVERT(Mem0[a0:byte], byte, word32)
	word32 a5_16 = a3
	branch (CONVERT(Mem0[a3 + 0x230CB5B1<32>:byte], byte, word32) & 3<32>) != 1<32> l2305CC44
l2305CC40:
	a5_16 = a3 + 32<i32>
l2305CC44:
	a4 = CONVERT(Mem0[a1:byte], byte, word32)
	branch (CONVERT(Mem0[a4 + 0x230CB5B1<32>:byte], byte, word32) & 3<i32>) != 1<32> l2305CC5C
l2305CC58:
	a4 = a4 + 32<i32>
l2305CC5C:
	branch a5_16 == a4 l2305CC66
l2305CC66:
	branch a3 == 0<32> l2305CC6E
l2305CC6E:
	a5_35 = 0<32>
l2305CC68:
	a0 = a0 + 1<32>
	a1 = a1 + 1<32>
l2305CC60:
	a5_35 = a5_16 - a4
l2305CC62:
	a3Out = a3
	a4Out = a4
	return a5_35
cJSON_strcasecmp_exit:


word32 parse_value(word32 ra, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s11, word32 fflags, word32 frm, word32 dwArgBC, word32 dwArgCC, word32 dwArg010C, word32 dwArg0148, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      parse_value
//      cJSON_Parse
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +00BC:[0..31] Stack +00CC:[0..31] Stack +010C:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a5 ra s0 s1 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
parse_value_entry:
l2305CC72:
	branch a1 != 0<32> l2305CC78
l2305CC78:
	word32 a5_101
	word32 a0_414
	word32 s0_180 = a1
	word32 a3_1409
	word32 a5_1411
	word32 a4_1410
	branch strncmp(a1, 0x230BF7B0<32>, 4<32>, out a3_1409, out a4_1410, out a5_1411) != 0<32> l2305CCB4
l2305CCB4:
	word32 a3_1412
	word32 a4_1413
	branch strncmp(a1, 0x230B3194<32>, 5<32>, out a3_1412, out a4_1413, out a5_101) != 0<32> l2305CCEC
l2305CCEC:
	word32 a3_1414
	word32 a4_1415
	word32 a5_1416
	branch strncmp(a1, 0x230B318C<32>, 4<32>, out a3_1414, out a4_1415, out a5_1416) != 0<32> l2305CD06
l2305CD06:
	word32 a5_76 = CONVERT(Mem37[a1:byte], byte, word32)
	branch a5_76 != 34<i32> l2305CD36
l2305CD36:
	word32 s5_419
	word32 s4_418
	branch a5_76 == 45<i32> l2305CD5A
l2305CD5A:
	s4_418 = Mem37[0x230BF798<32>:int32]
	s5_419 = Mem37[0x230BF79C<32>:int32]
	s0_180 = a1 + 1<32>
l2305CD3E:
	branch (a5_76 + -48<i32> & 255<i32>) >u 9<32> l2305CF06
l2305CF06:
	word32 a4_283
	branch a5_76 != 91<i32> l2305CF96
l2305CF96:
	branch a5_76 != 123<i32> l2305CF8C
l2305CF9E:
	Mem89[0x12<32>:word32] = a0
	word32 a5_1447
	word32 a0_92 = skip(a1 + 1<i32>, out a5_1447)
	a5_101 = 125<i32>
	s0_180 = a0_92
	branch CONVERT(Mem89[a0_92:byte], byte, word32) == 125<i32> l2305CF28
l2305CFB8:
	word32 ra_102 = cJSON_New_Item(ra, a0_92, out a5_101)
	Mem105[a0_92 + 8<i32>:word32] = a0
	s2 = a0_92
	branch a0_92 == 0<32> l2305CF50
l2305CFC2:
	word32 a0_113
	word32 s4_122
	word32 s8_123
	word32 s1_1450
	word32 a5_1451
	word32 a5_1448
	word32 s0_1449
	word32 ra_119 = parse_string(ra_102, a0_92, a0, a0_92, skip(a0_92, out a5_1448), a0_92, s3, s4, s5, s6, s7, s8, s9, s11, dwArgBC, out s0_1449, out s1_1450, out a0_113, out a5_1451, out s2, out s3, out s4_122, out s5, out s6, out s7, out s8_123, out s9, out s11)
	word32 a0_138 = skip(a0_113, out a5_101)
	branch a0_138 == 0<32> l2305CF50
l2305CFD6:
	word32 a5_140 = Mem105[s2 + 16<i32>:int32]
	Mem141[s2 + 16<i32>:word32] = 0<32>
	Mem142[s2 + 32<i32>:word32] = a5_140
	branch CONVERT(Mem142[a0_138:byte], byte, word32) == 58<i32> l2305CFF8
l2305CFF8:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg188 = <invalid>
	word32 stackArg204 = <invalid>
	word32 stackArg328 = <invalid>
	word32 stackArg360 = <invalid>
	word32 a0_153
	word32 s4_1460
	word32 s0_1457
	word32 a5_1459
	word32 s1_1458
	word32 a5_1452
	word32 s8_164
	word32 ra_157 = parse_value(ra_119, s2, skip(a0_138 + 1<32>, out a5_1452), s2, s3, s4_122, s5, s6, s7, s8_123, s9, s11, fflags, frm, stackArg188, stackArg204, dwArgBC, stackArg328, stackArg360, out s0_1457, out s1_1458, out a0_153, out a5_1459, out s2, out s3, out s4_1460, out s5, out s6, out s7, out s8_164, out s9, out s11)
	word32 a0_178 = skip(a0_153, out a5_101)
	s0_180 = a0_178
	branch a0_178 == 0<32> l2305CF50
l2305D00C:
	s3 = 44<i32>
	word32 s4_182 = 58<i32>
l2305D014:
	word32 fflags_907
	word32 frm_906
	a5_101 = CONVERT(Mem184[s0_180:byte], byte, word32)
	branch a5_101 == s3 l2305D022
l2305D022:
	word32 ra_193 = cJSON_New_Item(ra_157, s0_180, out a5_101)
	branch a0_178 == 0<32> l2305CF50
l2305D02C:
	Mem199[s2:word32] = a0_178
	Mem200[a0_178 + 4<i32>:word32] = s2
	word32 a0_215
	word32 s4_224
	word32 s8_225
	word32 s0_1469
	word32 a5_1471
	word32 s1_1470
	word32 a5_1468
	word32 ra_221 = parse_string(ra_193, s0_180, a0_178, a0_178, skip(s0_180 + 1<i32>, out a5_1468), s2, s3, s4_182, s5, s6, s7, s8_164, s9, s11, dwArgBC, out s0_1469, out s1_1470, out a0_215, out a5_1471, out s2, out s3, out s4_224, out s5, out s6, out s7, out s8_225, out s9, out s11)
	a0_138 = skip(a0_215, out a5_101)
	branch a0_138 == 0<32> l2305CF50
l2305D04C:
	word32 s1_242 = Mem200[a5_101 + 16<i32>:word32]
	Mem243[s1_242 + 16<i32>:word32] = 0<32>
	Mem244[a5_101 + 32<i32>:word32] = s1_242
	branch CONVERT(Mem244[a0_138:byte], byte, word32) != s4_224 l2305CFEE
l2305D05C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg204 = <invalid>
	word32 stackArg328 = <invalid>
	word32 stackArg360 = <invalid>
	word32 a0_254
	word32 s1_256
	word32 a5_1477
	word32 s2_1478
	word32 s0_1476
	word32 a5_1472
	ra_157 = parse_value(ra_221, s1_242, skip(a0_138 + 1<32>, out a5_1472), s2, s3, s4_224, s5, s6, s7, s8_225, s9, s11, fflags_907, frm_906, dwArgBC, stackArg204, dwArgBC, stackArg328, stackArg360, out s0_1476, out s1_256, out a0_254, out a5_1477, out s2_1478, out s3, out s4_182, out s5, out s6, out s7, out s8_164, out s9, out s11)
	a0_178 = skip(a0_254, out a5_101)
	s0_180 = a0_178
	s2 = s1_256
	frm_906 = frm_915
	fflags_907 = fflags_916
	branch a0_178 != 0<32> l2305D014
l2305D072:
l2305D01C:
	a4_283 = 125<i32>
l2305CFEE:
	Mem286[0x4200F4E8<32>:word32] = a0_138
	a5_101 = 0x4200F000<32>
l2305CF0E:
	Mem288[0x11<32>:word32] = a0
	word32 a5_1437
	word32 a0_291 = skip(a1 + 1<i32>, out a5_1437)
	a5_101 = 93<i32>
	s0_180 = a0_291
	branch CONVERT(Mem288[a0_291:byte], byte, word32) != 93<i32> l2305CF2E
l2305CF2E:
	word32 ra_301 = cJSON_New_Item(ra, a0_291, out a5_101)
	Mem304[a0_291 + 8<i32>:word32] = a0
	s2 = a0_291
	branch a0_291 == 0<32> l2305CF50
l2305CF38:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg188 = <invalid>
	word32 stackArg204 = <invalid>
	word32 stackArg328 = <invalid>
	word32 stackArg360 = <invalid>
	word32 a0_314
	word32 s1_1444
	word32 a5_1438
	word32 a5_1445
	word32 s3_1446
	word32 s0_1443
	word32 s4_321
	word32 s8_325
	word32 ra_318 = parse_value(ra_301, a0_291, skip(a0_291, out a5_1438), a0_291, s3, s4, s5, s6, s7, s8, s9, s11, fflags, frm, stackArg188, stackArg204, dwArgBC, stackArg328, stackArg360, out s0_1443, out s1_1444, out a0_314, out a5_1445, out s2, out s3_1446, out s4_321, out s5, out s6, out s7, out s8_325, out s9, out s11)
	word32 a0_339 = skip(a0_314, out a5_101)
	s0_180 = a0_339
	s3 = 44<i32>
	branch a0_339 != 0<32> l2305CF7C
l2305CF7C:
	word32 fflags_922
	word32 frm_921
	a5_101 = CONVERT(Mem344[s0_180:byte], byte, word32)
	branch a5_101 == s3 l2305CF54
l2305CF54:
	word32 ra_353 = cJSON_New_Item(ra_318, s0_180, out a5_101)
	branch a0_339 == 0<32> l2305CF50
l2305CF5C:
	Mem359[s2:word32] = a0_339
	Mem360[a0_339 + 4<i32>:word32] = s2
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg204 = <invalid>
	word32 stackArg328 = <invalid>
	word32 stackArg360 = <invalid>
	word32 a0_378
	word32 s1_380
	word32 a5_1461
	word32 s0_1465
	word32 s2_1467
	word32 a5_1466
	ra_318 = parse_value(ra_353, a0_339, skip(s0_180 + 1<i32>, out a5_1461), s2, s3, s4_321, s5, s6, s7, s8_325, s9, s11, fflags_922, frm_921, dwArgBC, stackArg204, dwArgBC, stackArg328, stackArg360, out s0_1465, out s1_380, out a0_378, out a5_1466, out s2_1467, out s3, out s4_321, out s5, out s6, out s7, out s8_325, out s9, out s11)
	a0_339 = skip(a0_378, out a5_101)
	s0_180 = a0_339
	s2 = s1_380
	fflags_922 = fflags_931
	frm_921 = frm_930
	branch a0_339 == 0<32> l2305CF50
l2305CF84:
	a4_283 = 93<i32>
l2305CF88:
	branch a5_101 == a4_283 l2305CF28
l2305CF8C:
	Mem413[0x4200F4E8<32>:word32] = s0_180
	a5_101 = 0x4200F000<32>
l2305CF50:
	a0_414 = 0<32>
l2305CF28:
	a0_414 = s0_180 + 1<i32>
l2305CD4C:
	s4_418 = Mem37[0x230BF7A0<32>:int32]
	s5_419 = Mem37[0x230BF7A4<32>:int32]
l2305CD68:
	branch CONVERT(Mem37[s0_180:byte], byte, word32) != 48<i32> l2305CD76
l2305CD74:
	s0_180 = s0_180 + 1<32>
l2305CD76:
	word32 ra_445
	word32 s10_429 = 0<32>
	s11 = 0<32>
	ra_445 = ra
	branch (CONVERT(Mem37[s0_180:byte], byte, word32) + -49<i32> & 255<i32>) >u 8<32> l2305CDD4
l2305CD8C:
	word32 s2_434 = Mem37[0x230BF7A8<32>:int32]
	word32 s3_435 = Mem37[0x230BF7AC<32>:int32]
	ra_445 = ra
l2305CD9A:
	word32 a0_448
	word32 a1_449
	word32 a3_451
	word32 s0_466
	word32 s6_472
	word32 s9_1420
	word32 s7_1418
	word32 s8_1419
	word32 s1_1417
	ra_445 = __muldf3(ra_445, s10_429, s11, s2_434, s3_435, fflags, frm, out s0_466, out s1_1417, out a0_448, out a1_449, out a3_451, out s2_434, out s3_435, out s4_418, out s5_419, out s6_472, out s7_1418, out s8_1419, out s9_1420, out fflags, out frm)
	dwLoc4C = a0_448
	s0_180 = a1_449
	word32 a1_483
	word32 a1_489
	s10_429 = __adddf3(ra_445, __floatsidf(CONVERT(Mem478[s0_466:byte], byte, word32) + -48<i32>, out a1_483), a1_483, ra, a3_451, fflags, frm, out a1_489)
	s11 = a1_489
	branch s6_472 >=u (CONVERT(Mem480[a1_449:byte], byte, word32) + -48<i32> & 255<i32>) l2305CD9A
l2305CDD4:
	branch CONVERT(Mem503[s0_180:byte], byte, word32) != 46<i32> l2305CE5C
l2305CDE4:
	branch (CONVERT(Mem503[s0_180 + 1<i32>:byte], byte, word32) + -48<i32> & 255<i32>) >u 9<32> l2305CE5C
l2305CDF6:
	word32 s8_513 = Mem503[0x230BF7A8<32>:int32]
	word32 s9_514 = Mem503[0x230BF7AC<32>:int32]
l2305CE10:
	word32 a0_530
	word32 a1_531
	word32 a3_533
	word32 s0_548
	word32 s2_550
	word32 s3_551
	word32 s6_554
	word32 s7_555
	word32 s1_1421
	ra_445 = __muldf3(ra_445, s10_429, s11, s8_513, s9_514, fflags, frm, out s0_548, out s1_1421, out a0_530, out a1_531, out a3_533, out s2_550, out s3_551, out s4_418, out s5_419, out s6_554, out s7_555, out s8_513, out s9_514, out fflags, out frm)
	word32 a1_565
	word32 a1_571
	s10_429 = __adddf3(ra_445, __floatsidf(CONVERT(Mem560[s0_548:byte], byte, word32) + -48<i32>, out a1_565), a1_565, ra, a3_533, fflags, frm, out a1_571)
	word32 a1_1422
	__subdf3(ra_445, s6_554, s7_555, s2_550, s3_551, fflags, frm, out a1_1422)
	dwLoc4C = a0_530
	s0_180 = a1_531
	s11 = a1_571
	branch (CONVERT(Mem562[a1_531:byte], byte, word32) + -48<i32> & 255<i32>) <=u 9<32> l2305CE10
l2305CE5C:
	branch (CONVERT(Mem602[s0_180:byte], byte, word32) & 223<i32>) != 69<i32> l2305CF00
l2305CF00:
l2305CE6C:
	word32 s0_611
	word32 a5_608 = CONVERT(Mem602[s0_180 + 1<i32>:byte], byte, word32)
	branch a5_608 != 43<i32> l2305CE7E
l2305CE7E:
	branch a5_608 != 45<i32> l2305CEFC
l2305CEFC:
	s0_611 = s0_180 + 1<32>
l2305CE86:
	s0_611 = s0_180 + 2<32>
l2305CE78:
	s0_611 = s0_180 + 2<32>
l2305CE7A:
l2305CE8A:
l2305CE9A:
	branch (CONVERT(Mem602[s0_611:byte], byte, word32) + -48<i32> & 255<i32>) <=u 9<32> l2305CE92
l2305CE92:
	s0_611 = s0_611 + 1<32>
l2305CEAA:
	word32 a0_688
	word32 a1_689
	word32 fflags_703
	word32 frm_704
	word32 s2_708
	word32 s3_709
	word32 s6_712
	word32 s7_713
	word32 s4_1426
	word32 s5_1427
	word32 s9_1429
	word32 s8_1428
	word32 s1_1424
	word32 a3_1425
	word32 s0_1423
	word32 ra_705 = __muldf3(ra_445, s10_429, s11, s4_418, s5_419, fflags, frm, out s0_1423, out s1_1424, out a0_688, out a1_689, out a3_1425, out s2_708, out s3_709, out s4_1426, out s5_1427, out s6_712, out s7_713, out s8_1428, out s9_1429, out fflags_703, out frm_704)
	word32 a1_720
	word32 a1_726
	word32 fflags_746
	word32 frm_747
	word32 a1_760
	word32 a0_765
	word32 a1_766
	word32 fflags_780
	word32 frm_781
	word32 s0_783
	word32 s1_784
	word32 s8_1432
	word32 a3_1430
	word32 s4_1431
	word32 ra_782 = __muldf3(ra_705, a0_688, a1_689, pow(ra_705, Mem602[0x230BF7A8<32>:int32], Mem602[0x230BF7AC<32>:int32], __adddf3(ra_705, __floatsidf(s2_708 + s3_709, out a1_720), a1_720, s6_712, s7_713, fflags_703, frm_704, out a1_726), a1_726, fflags_703, frm_704, out a1_760, out fflags_746, out frm_747), a1_760, fflags_746, frm_747, out s0_783, out s1_784, out a0_765, out a1_766, out a3_1430, out s2, out s3, out s4_1431, out s5, out s6, out s7, out s8_1432, out s9, out fflags_780, out frm_781)
	Mem793[a0_765 + 24<i32>:word32] = s1_784
	Mem794[a1_766 + 28<i32>:word32] = s1_784
	word32 a5_1436
	word32 a1_1433
	word32 a4_1435
	word32 a3_1434
	Mem803[__fixdfsi(ra_782, a0_765, a1_766, fflags_780, frm_781, out a1_1433, out a3_1434, out a4_1435, out a5_1436) + 20<i32>:word32] = s1_784
	Mem804[0xF<32>:word32] = s1_784
	a5_101 = 3<32>
	a0_414 = s0_783
l2305CD12:
	0<32> = dwArg010C
l2305CD32_thunk_parse_string:
	word32 a0_821
	word32 a5_825
	word32 s0_828
	word32 s1_829
	word32 s4_830
	word32 s8_831
	word32 s9_832
	word32 s11_839
	word32 s2_840
	word32 s3_841
	word32 s5_842
	word32 s6_843
	word32 s7_844
	word32 ra_827 = parse_string(dwLoc08, dwArgCC, dwLoc4C, dwLoc4C, a1, s2, s3, dwArg0168, s5, s6, s7, dwArg0148, s9, s11, dwArg010C, out s0_828, out s1_829, out a0_821, out a5_825, out s2_840, out s3_841, out s4_830, out s5_842, out s6_843, out s7_844, out s8_831, out s9_832, out s11_839)
	s0Out = s0_828
	s1Out = s1_829
	a0Out = a0_821
	a5Out = a5_825
	s2Out = s2_840
	s3Out = s3_841
	s4Out = s4_830
	s5Out = s5_842
	s6Out = s6_843
	s7Out = s7_844
	s8Out = s8_831
	s9Out = s9_832
	s11Out = s11_839
	return ra_827
l2305CCFE:
	Mem846[0xD<32>:word32] = a0
	Mem847[0x15<32>:word32] = a0
	a5_101 = 1<32>
l2305CCC6:
	Mem848[a0 + 12<i32>:word32] = 0<32>
	a0_414 = a1 + 5<i32>
l2305CCAA:
	Mem851[0xE<32>:word32] = a0
	a5_101 = 2<32>
l2305CCAE:
	a0_414 = a1 + 4<i32>
l2305CCCE:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = a0_414
	a5Out = a5_101
	s2Out = s2
	s3Out = s3
	s4Out = dwArg0168
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArg0148
	s9Out = s9
	s11Out = s11
	return dwLoc08
l2305CC74:
	s0Out = s0
	s1Out = s1
	a0Out = 0<32>
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s11Out = s11
	return ra
parse_value_exit:


void print_array.isra.4(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s4, word32 s7, word32 s8, word32 s9, word32 s10, word32 s11, word32 dwArg010C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s4:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +010C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
print_array.isra.4_entry:
l2305D074:
	word32 a0_30 = Mem29[s0:word32]
	word32 s3_38 = 0<32>
l2305D09C:
	branch s0 != 0<32> l2305D0DC
l2305D0DC:
	s3_38 = s3_38 + 1<32>
	s0 = Mem29[s0:word32]
l2305D09E:
	branch s3_38 != 0<32> l2305D0F0
l2305D0F0:
	branch a3 == 0<32> l2305D18C
l2305D18C:
	word32 a2_47 = s3_38 << 2<u32>
	word32 sp_63
	word32 s2_65
	word32 s6_68
	word32 ra_69
	word32 a0_77
	word32 a5_85
	word32 s3_130
	word32 s5_131
	word32 s11_140
	call Mem29[0x4200ECA8<32>:int32] (retsize: 0;)
		uses: a0:a2_47,a1:a1,a2:a2_47,a3:a3,a4:a4,a5:a5_85,ra:ra,s0:s0_39,s1:0x4200F000<32>,s10:s10,s11:s11,s2:a0_30,s3:s3_40,s4:s4,s5:a2,s6:a1,s7:s7,s8:s8,s9:s9,Stack +0084:a2_47
		defs: a0:a0_77,a5:a5_85,ra:ra_69,s11:s11_76,s2:s2_65,s3:s3_66,s5:s5_67,s6:s6_68,sp:sp_63
	word32 s4_135 = a0_77
	branch a0_77 == 0<32> l2305D0BC
l2305D1A6:
	word32 t1_1000
	word32 a4_1001
	word32 a5_109
	word32 a0_141
	word32 a1_123
	word32 a2_124
	word32 a3_125
	word32 ra_117 = memset(ra_69, a0_77, 0<32>, Mem50[sp_63 + 132<i32>:word32], out t1_1000, out a0_141, out a1_123, out a2_124, out a3_125, out a4_1001, out a5_109)
	word32 s10_90 = CONVERT(s5_131 != 0<32>, bool, word32)
	word32 s7_100 = a0_77
	word32 s8_101 = Mem50[s2_65:int32]
	word32 s9_102 = a0_77
	word32 s2_103 = 0<32>
	word32 s0_104 = 5<32>
	word32 s6_105 = s6_68 + 1<32>
	word32 s10_106 = s10_90 + 2<32>
l2305D1C2:
	branch s8_101 == 0<32> l2305D21A
l2305D21A:
	branch s2_103 != 0<32> l2305D1CA
l2305D21E:
	word32 a5_149
	word32 a4_150
	call a5_109 (retsize: 0;)
		uses: a0:s0_112,a1:a1_123,a2:a2_124,a3:a3_125,a4:a4_150,a5:a5_149,ra:ra_117,s0:s0_112,s1:Mem110[a5_109:word32],s10:s10_90 + 2<32>,s11:s11_76,s2:s2_108,s3:s3_66,s4:a0_77,s5:s5_67,s6:s6_68 + 1<32>,s7:a0_77,s8:s8_107,s9:s9_120
		defs: a0:a0_141,a1:a1_142,a2:a2_143,a3:a3_144,a4:a4_150,a5:a5_149,ra:ra_133,s10:s10_139,s11:s11_140,s2:s2_129,s3:s3_130,s4:s4_135,s5:s5_131,s6:s6_132,s7:s7_136,s8:s8_137,s9:s9_138
	word32 s0_152 = a0_141
	branch a0_141 == 0<32> l2305D1CA
l2305D228:
	Mem154[a0_141:byte] = 0x5B<8>
	Mem156[a0_141 + 1<i32>:byte] = 0<8>
	word32 s1_155 = a0_141 + 1<i32>
	word32 s9_157 = s3_130 + -1<i32>
	word32 s10_158 = 44<i32>
	word32 s11_159 = 32<i32>
	word32 s8_160 = 0x4200F000<32>
l2305D248:
	word32 a4_1007
	word32 a5_1008
	word32 a1_1004
	word32 a2_1005
	word32 a3_1006
	word32 a0_164 = strlen(Mem162[s7_100:int32], out a1_1004, out a2_1005, out a3_1006, out a4_1007, out a5_1008)
	word32 a1_178
	word32 a2_179
	word32 a3_180
	word32 a4_1009
	word32 a5_1010
	word32 a7_1012
	word32 a6_1011
	memcpy(s1_155, Mem162[s7_100:int32], a0_164, out a1_178, out a2_179, out a3_180, out a4_1009, out a5_1010, out a6_1011, out a7_1012)
	word32 s1_188 = s1_155 + a0_164
	branch s9_157 == s2_103 l2305D272
l2305D264:
	Mem192[s1_188:byte] = SLICE(s10_158, byte, 0)
	branch s5_131 != 0<32> l2305D29E
l2305D29E:
	Mem195[s1_188 + 1<i32>:byte] = SLICE(s11_159, byte, 0)
	s1_188 = s1_188 + 2<32>
l2305D26C:
	s1_188 = s1_188 + 1<32>
l2305D26E:
	Mem199[s1_188:byte] = 0<8>
l2305D272:
	word32 s6_203 = s8_160 + -860<i32>
	word32 s6_248
	word32 a1_258
	word32 a2_259
	word32 a3_260
	word32 a5_265
	word32 a4_266
	call Mem206[s6_203:int32] (retsize: 0;)
		uses: a0:Mem206[s7_161:int32],a1:a1_178,a2:a2_179,a3:a3_180,a4:a4_266,a5:a5_265,ra:ra_221,s0:s0_224,s1:s1_213,s10:s10_191,s11:s11_194,s2:s2_190 + 1<32>,s3:s3_216,s4:s4_227,s5:s5_193,s6:s6_203,s7:s7_161 + 4<32>,s8:s8_202,s9:s9_189
		defs: a1:a1_258,a2:a2_259,a3:a3_260,a4:a4_266,a5:a5_265,ra:ra_249,s0:s0_250,s1:s1_244,s10:s10_255,s11:s11_256,s2:s2_245,s3:s3_246,s4:s4_251,s5:s5_247,s6:s6_248,s7:s7_252,s8:s8_253,s9:s9_254
	branch s3_130 != s2_103 l2305D248
l2305D288:
	word32 s1_275
	word32 a4_297
	call Mem206[s6_248:int32] (retsize: 0;)
		uses: a0:s4_251,a1:a1_258,a2:a2_259,a3:a3_260,a4:a4_297,a5:93<i32>,ra:ra_249,s0:s0_250,s1:s1_244,s10:s10_255,s11:s11_256,s2:s2_245,s3:s3_246,s4:s4_251,s5:s5_247,s6:s6_248,s7:s7_252,s8:s8_253,s9:s9_254
		defs: a4:a4_297,s1:s1_275
	Mem304[s1_275:byte] = 0x5D<8>
	Mem305[s1_275 + 1<i32>:byte] = 0<8>
l2305D1C6:
	branch s2_103 == 0<32> l2305D1F6
l2305D1F6:
	word32 a4_1002
	ra_117 = print_value(ra_117, s8_101, 0<32>, Mem110[sp_63 + 16<i32>:word32], out s0_104, out a0_141, out a2_124, out a3_125, out a4_1002, out a5_109)
	Mem317[s9_102:word32] = a0_141
	a1_123 = s6_68 + 1<32>
	branch a0_141 == 0<32> l2305D216
l2305D216:
	s2_103 = 1<32>
l2305D206:
	word32 a4_1003
	a0_141 = strlen(a0_141, out a1_123, out a2_124, out a3_125, out a4_1003, out a5_109)
	s0_104 = s0_104 + (s10_90 + 2<32>) + a0_141
l2305D20E:
	s8_101 = Mem317[s8_101:int32]
	s9_102 = s9_102 + 4<32>
l2305D1CA:
	word32 s0_332 = 0<32>
	word32 s1_333 = 0x4200F000<32>
l2305D1D0:
	branch a0_141 == 0<32> l2305D1E0
l2305D1DA:
	word32 a5_378
	word32 a4_379
	call Mem110[s1_333 + -860<i32>:int32] (retsize: 0;)
		uses: a1:a1_352,a2:a2_353,a3:a3_354,a4:a4_379,a5:a5_378,ra:ra_345,s0:s0_334,s1:s1_339,s10:s10_350,s11:s11_351,s2:s2_341,s3:s3_342,s4:s4_346,s5:s5_343,s6:s6_344,s7:s7_347,s8:s8_348,s9:s9_349
		defs: a0:a0_370,a1:a1_371,a2:a2_372,a3:a3_373,a4:a4_379,a5:a5_378,ra:ra_362,s0:s0_363,s1:s1_357,s10:s10_368,s11:s11_369,s2:s2_358,s3:s3_359,s4:s4_364,s5:s5_360,s6:s6_361,s7:s7_365,s8:s8_366,s9:s9_367
l2305D1E0:
	s0_332 = s0_332 + 1<32>
	branch s3_130 != s0_332 l2305D1D0
l2305D1E6:
	word32 a5_390 = Mem110[0x4200ECA4<32>:int32]
	word32 a4_431
	call a5_390 (retsize: 0;)
		uses: a0:s4_391,a1:a1_404,a2:a2_405,a3:a3_406,a4:a4_431,a5:a5_390,ra:ra_398,s0:0<32>,s1:s1_394,s10:s10_402,s11:s11_403,s2:s2_395,s3:s3_387,s4:s4_391,s5:s5_396,s6:s6_397,s7:s7_399,s8:s8_400,s9:s9_401
		defs: a4:a4_431
l2305D0F2:
	word32 a0_444
	word32 s2_447
	word32 a5_981
	word32 s3_982
	word32 s8_984
	word32 s4_983
	word32 s1_979
	word32 a1_980
	word32 s0_978
	word32 a4_453
	word32 ra_456 = ensure(ra, a3, 1<32>, a4, a5, s3_38, out s0_978, out s1_979, out a0_444, out a1_980, out a4_453, out a5_981, out s2_447, out s3_982, out s4_983, out s8_984)
	branch a0_444 == 0<32> l2305D0BC
l2305D100:
	Mem466[a0_444:byte] = 0x5B<8>
	word32 s3_468 = CONVERT(a2 != 0<32>, bool, word32)
	word32 s1_467 = Mem466[99<i32>:word32]
	Mem471[0x64<32>:word32] = s1_467
	word32 s3_469 = s3_468 + 1<32>
	word32 a5_470 = 0x5C<32>
	word32 s2_472 = Mem471[s2_447:int32]
l2305D126:
	branch s2_472 != 0<32> l2305D146
l2305D146:
	word32 a4_490
	word32 s0_985
	word32 a0_986
	word32 a2_987
	word32 a3_988
	word32 a5_989
	ra_456 = print_value(ra_456, s2_472, s1_467, s10, out s0_985, out a0_986, out a2_987, out a3_988, out a4_490, out a5_989)
	word32 a5_990
	Mem502[update(s1_467, a4_490, out a4_453, out a5_990) + 8<i32>:word32] = s1_467
	a5_470 = Mem502[s2_472:int32]
	branch a5_470 == 0<32> l2305D186
l2305D15E:
	word32 a0_508
	word32 s8_513
	word32 s0_1013
	word32 s1_1014
	word32 a1_1015
	word32 a5_1016
	word32 s4_1017
	ra_456 = ensure(ra_456, s1_467, s3_468 + 2<32>, a4_453, a5_470, s3_469, out s0_1013, out s1_1014, out a0_508, out a1_1015, out a4_453, out a5_1016, out s2_472, out s3_469, out s4_1017, out s8_513)
	branch a0_508 == 0<32> l2305D0BC
l2305D168:
	Mem529[a0_508:byte] = SLICE(s8_513, byte, 0)
	word32 a5_530 = a0_508 + 1<i32>
	branch a2 == 0<32> l2305D17C
l2305D174:
	Mem533[a0_508 + 1<i32>:byte] = 0x20<8>
	a5_530 = a0_508 + 2<i32>
l2305D17C:
	Mem535[a5_530:byte] = 0<8>
	s1_467 = Mem535[a5_530 + 8<i32>:word32]
	a5_470 = a5_530 + s3_469
	Mem539[a5_470 + 8<i32>:word32] = s1_467
l2305D186:
	s2_472 = Mem542[s2_472:int32]
l2305D12A:
	word32 a0_551
	word32 a5_995
	word32 s8_999
	word32 s2_996
	word32 s4_998
	word32 s3_997
	word32 a1_993
	word32 a4_994
	word32 s0_991
	word32 s1_992
	ensure(ra_456, s1_467, 2<32>, a4_453, a5_470, s3_469, out s0_991, out s1_992, out a0_551, out a1_993, out a4_994, out a5_995, out s2_996, out s3_997, out s4_998, out s8_999)
	branch a0_551 == 0<32> l2305D0BC
l2305D134:
	Mem573[a0_551:byte] = 0x5D<8>
	Mem574[a0_551 + 1<i32>:byte] = 0<8>
l2305D0A2:
	word32 a0_595
	branch a3 == 0<32> l2305D0E2
l2305D0E2:
	word32 a5_578 = Mem29[0x4200ECA8<32>:int32]
	call a5_578 (retsize: 0;)
		uses: a0:3<32>,a1:a1,a2:a2,a3:a3,a4:a4,a5:a5_578,ra:ra,s0:s0_39,s1:a3,s10:s10,s11:s11,s2:a0_30,s3:s3_40,s4:s4,s5:a2,s6:a1,s7:s7,s8:s8,s9:s9
		defs: a0:a0_595
l2305D0A4:
	word32 s0_967
	word32 a5_971
	word32 s2_972
	word32 s3_973
	word32 s4_974
	word32 s8_975
	word32 s1_968
	word32 a4_970
	word32 a1_969
	ensure(ra, a3, 3<32>, a4, a5, s3_38, out s0_967, out s1_968, out a0_595, out a1_969, out a4_970, out a5_971, out s2_972, out s3_973, out s4_974, out s8_975)
l2305D0AC:
	branch a0_595 == 0<32> l2305D0BC
l2305D0B0:
	word32 a4_976
	word32 a5_977
	strcpy(a0_595, 0x230BF7B8<32>, out a4_976, out a5_977)
l2305D0BC:
	0<32> = dwArg010C
	return
print_array.isra.4_exit:


word32 print_value(word32 ra, word32 a0, word32 a3, word32 dwArg10, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_array.isra.4
//      print_object.isra.3
//      cJSON_Print
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0
// Trashed: a0 a2 a3 a4 a5 ra s0
// Preserved: sp
print_value_entry:
l2305D2A6:
	word32 s0_26 = a0
	branch a0 == 0<32> l2305D2E4
l2305D2B0:
	a5 = CONVERT(Mem7[a0 + 12<i32>:byte], byte, word32)
	a4 = 6<32>
	branch a3 == 0<32> l2305D336
l2305D336:
	branch a5 >u 6<32> l2305D396
l2305D33A:
	word32 a5_17 = Mem7[(a5 << 2<i32>) + 0x230BF77C<32>:word32]
	word32 s0_19
	word32 ra_20
	word32 a0_21
	word32 a5_22
	word32 a4_23
	word32 a3_24
	word32 a2_25
	call a5_17 (retsize: 0;)
		uses: a0:a0,a3:a3,a4:0x230BF77C<32>,a5:a5_17,ra:ra,s0:a0,Stack +0020:dwArg10
		defs: a0:a0_21,a2:a2_25,a3:a3_24,a4:a4_23,a5:a5_22,ra:ra_20,s0:s0_19
	s0Out = s0_19
	a0Out = a0_21
	a2Out = a2_25
	a3Out = a3_24
	a4Out = a4_23
	a5Out = a5_22
	return ra_20
l2305D2B8:
	branch a5 >u 6<32> l2305D396
l2305D396:
	s0_26 = 0<32>
l2305D2E4:
	s0Out = s0
	a0Out = s0_26
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return ra
l2305D2BC:
	word32 a5_40 = Mem7[(a5 << 2<i32>) + 0x230BF760<32>:word32]
	word32 s0_42
	word32 ra_43
	word32 a0_44
	word32 a5_45
	word32 a4_46
	word32 a3_47
	word32 a2_48
	call a5_40 (retsize: 0;)
		uses: a0:a0,a3:a3,a4:0x230BF760<32>,a5:a5_40,ra:ra,s0:a0,Stack +0020:dwArg10
		defs: a0:a0_44,a2:a2_48,a3:a3_47,a4:a4_46,a5:a5_45,ra:ra_43,s0:s0_42
	s0Out = s0_42
	a0Out = a0_44
	a2Out = a2_48
	a3Out = a3_47
	a4Out = a4_46
	a5Out = a5_45
	return ra_43
print_value_exit:


void print_object.isra.3(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 s8, word32 s9, word32 s10, word32 s11, word32 dwArg84, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0084:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
print_object.isra.3_entry:
l2305D39A:
	word32 a0_31 = Mem29[a5:word32]
	word32 s5_39 = 0<32>
l2305D3C2:
	branch a5 != 0<32> l2305D3E2
l2305D3E2:
	s5_39 = s5_39 + 1<32>
	a5 = Mem29[a5:word32]
l2305D3C4:
	branch s5_39 != 0<32> l2305D458
l2305D458:
	branch a3 == 0<32> l2305D5B6
l2305D5B6:
	word32 a5_48 = Mem29[0x4200ECA8<32>:int32]
	word32 s8_49 = s5_39 << 2<u32>
	word32 sp_63
	word32 s0_64
	word32 s1_65
	word32 s5_67
	word32 s6_68
	word32 ra_69
	word32 s3_70
	word32 s4_71
	word32 s7_72
	word32 s8_73
	word32 s9_74
	word32 s10_75
	word32 s11_76
	word32 a0_77
	word32 a1_79
	word32 a2_80
	word32 a3_81
	word32 a4_87
	word32 tp_1399
	call a5_48 (retsize: 0;)
		uses: a0:s8_49,a1:a1,a2:a2,a3:a3,a4:a4_87,a5:a5_48,ra:ra,s0:a2,s1:a1,s10:s10,s11:s11,s2:a3,s3:0x4200ECA8<32>,s4:0x4200F000<32>,s5:s5_41,s6:a0_31,s7:s7,s8:s8_49,s9:s9,Stack +0010:dwLoc50,Stack +00E4:dwArg84,Stack +0128:dwArgC8,tp:tp_1399
		defs: a0:a0_77,a1:a1_79,a2:a2_80,a3:a3_81,a4:a4_87,ra:ra_69,s0:s0_64,s1:s1_65,s10:s10_75,s11:s11_76,s3:s3_70,s4:s4_71,s5:s5_67,s6:s6_68,s7:s7_72,s8:s8_73,s9:s9_74,sp:sp_63,tp:tp_1399
	Mem89[sp_63 + 8<i32>:word32] = s4_71 + -856<i32>
	branch a0_77 == 0<32> l2305D3DE
l2305D5D6:
	word32 a5_763
	word32 a5_91 = Mem89[s3_70:int32]
	word32 sp_93
	word32 a0_107
	word32 a4_117
	word32 tp_1403
	word32 s0_246
	word32 s1_185
	word32 s6_753
	word32 ra_754
	word32 s3_100
	word32 s7_102
	word32 s9_104
	word32 s10_105
	word32 s11_106
	word32 a1_109
	word32 a2_110
	word32 a3_111
	word32 s2_1342
	word32 s5_1343
	word32 s8_103
	call a5_91 (retsize: 0;)
		uses: a0:s8_73,a1:a1_79,a2:a2_80,a3:a3_81,a4:a4_117,a5:a5_91,ra:ra_69,s0:s0_64,s1:s1_65,s10:s10_75,s11:s11_76,s2:a0_77,s3:s3_70,s4:s4_71,s5:s5_67,s6:s6_68,s7:s7_72,s8:s8_73,s9:s9_74,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_1403
		defs: a0:a0_107,a1:a1_109,a2:a2_110,a3:a3_111,a4:a4_117,ra:ra_99,s0:s0_94,s1:s1_95,s10:s10_105,s11:s11_106,s2:s2_96,s3:s3_100,s5:s5_97,s6:s6_98,s7:s7_102,s8:s8_103,s9:s9_104,sp:sp_93,tp:tp_1403
	word32 s4_118 = a0_107
	branch a0_107 != 0<32> l2305D5F0
l2305D5F0:
	word32 s11_1352
	word32 s9_1350
	word32 a2_2151
	word32 a0_2149
	word32 a4_2153
	word32 a5_2154
	word32 t1_2155
	word32 a5_2156
	word32 a3_2152
	word32 a1_2150
	word32 t1_2148
	word32 a4_138
	word32 a0_1335
	word32 a1_135
	word32 a2_1354
	word32 a3_1355
	word32 ra_1345 = memset(memset(ra_754, s2_1342, 0<32>, s8_103, out t1_2148, out a0_2149, out a1_2150, out a2_2151, out a3_2152, out a4_2153, out a5_2154), a0_107, 0<32>, s8_103, out t1_2155, out a0_1335, out a1_135, out a2_1354, out a3_1355, out a4_138, out a5_2156)
	Mem144[sp_93 + 132<i32>:word32] = s1_185 + 1<i32>
	word32 s10_1351 = Mem144[s6_753:int32]
	branch s0_246 == 0<32> l2305D66A
l2305D66A:
	s11_1352 = 7<32>
	s9_1350 = 0<32>
l2305D610:
	s11_1352 = s1_185 + 8<i32>
	s9_1350 = s1_185 + 3<i32>
l2305D618:
	Mem158[sp_93 + 4<i32>:word32] = a0_107
	Mem160[sp_93 + 136<i32>:word32] = s9_1350 + 2<i32>
	word32 s7_1348 = a0_107
	word32 s6_1344 = s2_1342
	word32 a6_156 = s2_1342
	word32 s3_1310 = 0<32>
l2305D628:
	branch s10_1351 != 0<32> l2305D670
l2305D670:
	word32 a0_163 = Mem162[s10_1351 + 32<i32>:int32]
	Mem167[sp_93 + 12<i32>:word32] = a6_156
	word32 a5_180
	word32 a6_181
	word32 s10_186
	word32 a0_203
	word32 a4_2164
	word32 s9_2165
	word32 ra_183 = print_string_ptr(ra_1345, a0_163, 0<32>, s3_1310, s4_118, s5_1343, s6_1344, s7_1348, s8_103, s9_1350, s10_1351, Mem167[sp_93 + 28<i32>:word32], Mem167[sp_93 + 296<i32>:word32], out s1_185, out a0_203, out a1_135, out a4_2164, out a5_180, out a6_181, out s2_1342, out s3_1310, out s4_118, out s5_1343, out s6_1344, out s7_1348, out s9_2165, out s10_186, out s11_1352)
	Mem207[a0_203:word32] = a5_180
	word32 s0_2166
	word32 a5_214
	ra_1345 = print_value(ra_183, s10_186, 0<32>, Mem207[sp_93 + 16<i32>:word32], out s0_2166, out a0_1335, out a2_1354, out a3_1355, out a4_138, out a5_214)
	s8_103 = Mem207[sp_93 + 8<i32>:word32]
	Mem219[a6_181:word32] = a0_1335
	s9_1350 = a0_203
	branch a0_203 == 0<32> l2305D6C4
l2305D698:
	branch a0_1335 == 0<32> l2305D6C4
l2305D6C4:
	s3_1310 = 1<32>
l2305D69A:
	Mem221[sp_93 + 140<i32>:word32] = a6_181
	word32 a3_2169
	word32 a4_2170
	word32 a5_2171
	word32 a1_2167
	word32 a2_2168
	Mem228[sp_93 + 12<i32>:word32] = strlen(a0_1335, out a1_2167, out a2_2168, out a3_2169, out a4_2170, out a5_2171)
	word32 a5_233
	a0_1335 = strlen(a0_203, out a1_135, out a2_1354, out a3_1355, out a4_138, out a5_233)
	a5_214 = a5_233 + s11_1352 + a3_1355
	s4_118 = Mem228[sp_93 + 228<i32>:word32]
	s8_103 = Mem228[sp_93 + 164<i32>:word32]
	s11_1352 = a5_214 + a0_1335
l2305D6B6:
	s0_246 = Mem244[sp_93 + 228<i32>:word32]
	s10_1351 = Mem244[s10_186:int32]
	Mem256[sp_93 + 4<i32>:word32] = a5_214 + 4<32>
	a6_156 = a6_181 + 4<32>
l2305D62C:
	branch s3_1310 == 0<32> l2305D6C8
l2305D6C8:
	word32 a4_313
	word32 tp_317
	word32 s0_290
	word32 sp_289
	word32 s1_291
	call a4_138 (retsize: 0;)
		uses: a0:s11_258,a1:a1_277,a2:a2_281,a3:a3_285,a4:a4_313,a5:Mem162[a4_263:word32],a6:Mem162[sp_93 + 228<i32>:word32],ra:ra_168,s0:s0_268,s1:s1_270,s10:s10_161,s11:s11_258,s2:s2_274,s3:s3_169,s4:s4_170,s5:s5_171,s6:s6_172,s7:s7_173,s8:s8_174,s9:s9_175,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_317
		defs: a0:a0_303,a1:a1_305,a2:a2_306,a3:a3_307,a4:a4_313,ra:ra_295,s0:s0_290,s1:s1_291,s11:s11_302,s2:s2_292,s3:s3_296,s4:s4_297,s5:s5_293,s6:s6_294,s7:s7_298,s8:s8_299,s9:s9_300,sp:sp_289,tp:tp_317
	s10_1351 = a0_1335
	branch a0_1335 == 0<32> l2305D630
l2305D6D4:
	Mem320[a0_1335:byte] = 0x7B<8>
	word32 s9_321 = a0_1335 + 1<i32>
	branch s0_290 == 0<32> l2305D6EC
l2305D6E2:
	Mem324[a0_1335 + 1<i32>:byte] = 0xA<8>
	s9_321 = a0_1335 + 2<i32>
l2305D6EC:
	Mem328[s9_321:byte] = 0<8>
	Mem331[sp_289 + 4<i32>:word32] = s5_1343 + -1<i32>
	word32 a5_1326 = s5_1343 + -1<i32>
	word32 s8_329 = 0<32>
l2305D6F8:
	branch s0_290 == 0<32> l2305D712
l2305D6FA:
	word32 a3_333 = 0<32>
l2305D706:
	word32 a2_339 = s9_321 + a3_333
	branch a3_333 < a5_1326 l2305D6FE
l2305D6FE:
	Mem342[a2_339:byte] = 9<8>
	a5_1326 = 9<32>
	a3_333 = a3_333 + 1<32>
l2305D710:
	s9_321 = a2_339
l2305D712:
	word32 a2_2173
	word32 a1_2172
	word32 a3_2174
	word32 a4_2175
	word32 a5_2176
	word32 a0_351 = strlen(Mem348[s7_1348:int32], out a1_2172, out a2_2173, out a3_2174, out a4_2175, out a5_2176)
	word32 a3_2179
	word32 a4_2180
	word32 a5_2181
	word32 a6_2182
	word32 a7_2183
	word32 a1_2177
	word32 a2_2178
	memcpy(s9_321, Mem348[s7_1348:int32], a0_351, out a1_2177, out a2_2178, out a3_2179, out a4_2180, out a5_2181, out a6_2182, out a7_2183)
	word32 a0_376 = s9_321 + a0_351
	Mem378[a0_376:byte] = 0x3A<8>
	word32 s9_379 = a0_376 + 1<i32>
	branch s0_290 == 0<32> l2305D744
l2305D73A:
	Mem384[a0_376 + 1<i32>:byte] = 9<8>
	s9_379 = a0_376 + 2<i32>
l2305D744:
	word32 a4_2184
	word32 a5_2185
	strcpy(s9_379, Mem389[s6_1344:int32], out a4_2184, out a5_2185)
	word32 a3_398
	word32 a5_400
	word32 a1_401
	word32 a4_2187
	word32 a2_2186
	word32 a0_397 = strlen(Mem389[s6_1344:int32], out a1_401, out a2_2186, out a3_398, out a4_2187, out a5_400)
	word32 s0_406 = Mem389[sp_289 + 228<i32>:word32]
	word32 s9_407 = s9_379 + a0_397
	branch a5_400 == s8_329 l2305D768
l2305D75E:
	Mem413[s9_407:byte] = 0x2C<8>
	s9_407 = s9_407 + 1<32>
l2305D768:
	branch s0_406 == 0<32> l2305D772
l2305D76A:
	Mem418[s9_407:byte] = 0xA<8>
	s9_407 = s9_407 + 1<32>
l2305D772:
	Mem423[s9_407:byte] = 0<8>
	word32 a2_428 = Mem423[0x4200ECA4<32>:int32]
	word32 s0_485
	word32 s1_486
	word32 s2_487
	word32 s5_488
	word32 s6_489
	word32 ra_490
	word32 s3_491
	word32 s4_492
	word32 s7_493
	word32 s8_494
	word32 s9_495
	word32 s10_496
	word32 s11_497
	word32 a5_499
	word32 a1_500
	word32 a3_502
	call a2_428 (retsize: 0;)
		uses: a0:Mem423[s7_347:int32],a1:a1_401,a2:a2_428,a3:a3_398,a4:a4_540,a5:0x4200F000<32>,ra:ra_459,s0:s0_406,s1:s1_439,s10:s10_477,s11:0x4200ECA4<32>,s2:s2_445,s3:s3_465,s4:s4_471,s5:s5_451,s6:s6_388,s7:s7_347 + 4<32>,s8:s8_411 + 1<32>,s9:s9_422,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_544
		defs: a1:a1_500,a3:a3_502,a5:a5_499,ra:ra_490,s0:s0_485,s1:s1_486,s10:s10_496,s11:s11_497,s2:s2_487,s3:s3_491,s4:s4_492,s5:s5_488,s6:s6_489,s7:s7_493,s8:s8_494,s9:s9_495
	word32 a2_514 = Mem423[s11_497:int32]
	word32 s11_529
	word32 a1_532
	word32 a3_534
	word32 a4_540
	word32 tp_544
	call a2_514 (retsize: 0;)
		uses: a0:Mem423[s6_489:int32],a1:a1_500,a2:a2_514,a3:a3_502,a4:a4_540,a5:a5_499,ra:ra_490,s0:s0_485,s1:s1_486,s10:s10_496,s11:s11_497,s2:s2_487,s3:s3_491,s4:s4_492,s5:s5_488,s6:s6_489 + 4<32>,s7:s7_493,s8:s8_494,s9:s9_495,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_544
		defs: a1:a1_532,a3:a3_534,a4:a4_540,a5:a5_531,ra:ra_522,s0:s0_517,s1:s1_518,s10:s10_528,s11:s11_529,s2:s2_519,s3:s3_523,s4:s4_524,s5:s5_520,s6:s6_521,s7:s7_525,s8:s8_526,s9:s9_527,sp:sp_516,tp:tp_544
	branch s5_1343 != s8_329 l2305D6F8
l2305D79C:
	word32 a2_545 = Mem423[s11_529:int32]
	word32 s0_548
	word32 s1_549
	word32 s2_550
	word32 s5_551
	word32 s6_552
	word32 ra_553
	word32 s3_554
	word32 s4_555
	word32 s7_556
	word32 s8_557
	word32 s9_558
	word32 s10_559
	word32 s11_560
	word32 a5_562
	word32 a1_563
	word32 a2_564
	call a2_545 (retsize: 0;)
		uses: a0:s4_524,a1:a1_532,a2:a2_545,a3:a3_534,a4:a4_602,a5:a5_531,ra:ra_522,s0:s0_517,s1:s1_518,s10:s10_528,s11:s11_529,s2:s2_519,s3:s3_523,s4:s4_524,s5:s5_520,s6:s6_521,s7:s7_525,s8:s8_526,s9:s9_527,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_606
		defs: a1:a1_563,a2:a2_564,a5:a5_562,ra:ra_553,s0:s0_548,s1:s1_549,s10:s10_559,s11:s11_560,s2:s2_550,s3:s3_554,s4:s4_555,s5:s5_551,s6:s6_552,s7:s7_556,s8:s8_557,s9:s9_558
	word32 a3_576 = Mem423[s11_560:int32]
	word32 s0_579
	word32 a4_602
	word32 tp_606
	word32 s3_585
	word32 s1_580
	word32 s9_589
	call a3_576 (retsize: 0;)
		uses: a0:s2_550,a1:a1_563,a2:a2_564,a3:a3_576,a4:a4_602,a5:a5_562,ra:ra_553,s0:s0_548,s1:s1_549,s10:s10_559,s11:s11_560,s2:s2_550,s3:s3_554,s4:s4_555,s5:s5_551,s6:s6_552,s7:s7_556,s8:s8_557,s9:s9_558,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_606
		defs: a4:a4_602,s0:s0_579,s1:s1_580,s3:s3_585,s9:s9_589,tp:tp_606
	branch s0_579 != 0<32> l2305D7C8
l2305D7C8:
	branch s3_585 < s1_580 l2305D7BE
l2305D7BE:
	Mem613[s9_589 + s3_585:byte] = 9<8>
	s3_585 = s3_585 + 1<32>
l2305D7CC:
	branch s1_580 >= 0<32> l2305D7D2
l2305D7D0:
	s1_580 = 0<32>
l2305D7D2:
	s9_589 = s9_589 + s1_580
l2305D7B0:
	Mem621[s9_589:byte] = 0x7D<8>
	Mem622[s9_589 + 1<i32>:byte] = 0<8>
l2305D630:
	word32 s0_623 = 0<32>
	word32 s1_624 = 0x4200F000<32>
l2305D636:
	branch a0_1335 == 0<32> l2305D644
l2305D63E:
	word32 a5_629 = Mem162[s1_624 + -860<i32>:int32]
	word32 a4_670
	word32 tp_674
	call a5_629 (retsize: 0;)
		uses: a1:a1_642,a2:a2_643,a3:a3_644,a4:a4_670,a5:a5_629,ra:ra_634,s0:s0_630,s1:s1_628,s10:s10_640,s11:s11_641,s2:s2_631,s3:s3_635,s4:s4_636,s5:s5_632,s6:s6_633,s7:s7_637,s8:s8_638,s9:s9_639,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_674
		defs: a0:a0_660,a1:a1_662,a2:a2_663,a3:a3_664,a4:a4_670,ra:ra_652,s0:s0_647,s1:s1_648,s10:s10_658,s11:s11_659,s2:s2_649,s3:s3_653,s4:s4_654,s5:s5_650,s6:s6_651,s7:s7_655,s8:s8_656,s9:s9_657,tp:tp_674
l2305D644:
	word32 a5_677 = Mem162[a0_1335:word32]
	branch a0_1335 == 0<32> l2305D652
l2305D64C:
	word32 a5_679 = Mem162[s1_624 + -860<i32>:int32]
	word32 a4_720
	word32 tp_724
	call a5_679 (retsize: 0;)
		uses: a1:a1_692,a2:a2_693,a3:a3_694,a4:a4_720,a5:a5_679,ra:ra_684,s0:s0_680,s1:s1_678,s10:s10_690,s11:s11_691,s2:s2_681,s3:s3_685,s4:s4_686,s5:s5_682,s6:s6_683,s7:s7_687,s8:s8_688,s9:s9_689,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_724
		defs: a0:a0_710,a1:a1_712,a2:a2_713,a3:a3_714,a4:a4_720,a5:a5_711,ra:ra_702,s0:s0_697,s1:s1_698,s10:s10_708,s11:s11_709,s2:s2_699,s3:s3_703,s4:s4_704,s5:s5_700,s6:s6_701,s7:s7_705,s8:s8_706,s9:s9_707,tp:tp_724
l2305D652:
	s0_623 = s0_623 + 4<32>
	branch s8_103 != s0_623 l2305D636
l2305D658:
	word32 a4_772
	word32 tp_776
	call a5_677 (retsize: 0;)
		uses: a0:s4_732,a1:a1_744,a2:a2_745,a3:a3_746,a4:a4_772,a5:a5_729,ra:ra_738,s0:Mem162[a5_729:word32],s1:s1_734,s10:s10_742,s11:s11_743,s2:s2_735,s3:s3_739,s4:s4_732,s5:s5_736,s6:s6_737,s7:s7_740,s8:s8_727,s9:s9_741,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_776
		defs: a1:a1_764,a2:a2_765,a3:a3_766,a4:a4_772,a5:a5_763,ra:ra_754,s1:s1_750,s10:s10_760,s11:s11_761,s2:s2_751,s3:s3_755,s4:s4_756,s5:s5_752,s6:s6_753,s7:s7_757,s8:s8_758,s9:s9_759,tp:tp_776
	s0_246 = Mem162[a5_763:word32]
l2305D5E2:
	a5_763 = Mem89[0x4200ECA4<32>:int32]
l2305D5EA:
	word32 a4_823
	word32 tp_827
	call a5_763 (retsize: 0;)
		uses: a0:s2_780,a1:a1_795,a2:a2_796,a3:a3_797,a4:a4_823,a5:a5_782,ra:ra_787,s0:s0_783,s1:s1_784,s10:s10_793,s11:s11_794,s2:s2_780,s3:s3_788,s4:s4_789,s5:s5_785,s6:s6_786,s7:s7_790,s8:s8_791,s9:s9_792,Stack +0084:dwArg84,Stack +00C8:dwArgC8,Stack +FFFFFFB0:dwLoc50,tp:tp_827
		defs: a4:a4_823,tp:tp_827
l2305D45C:
	word32 s3_828 = CONVERT(a2 != 0<32>, bool, word32)
	word32 a0_835
	word32 s8_2147
	word32 a1_2145
	word32 a5_2146
	word32 s0_1075
	word32 s2_1056
	word32 s3_1068
	word32 s4_1057
	word32 s1_1067
	word32 a4_1089
	word32 ra_1065 = ensure(ra, a3, s3_828 + 2<32>, a4, a5, s3_828 + 1<32>, out s0_1075, out s1_1067, out a0_835, out a1_2145, out a4_1089, out a5_2146, out s2_1056, out s3_1068, out s4_1057, out s8_2147)
	branch a0_835 == 0<32> l2305D3DE
l2305D472:
	Mem857[a0_835:byte] = 0x7B<8>
	word32 a5_858 = a0_835 + 1<i32>
	branch s0_1075 == 0<32> l2305D48A
l2305D480:
	Mem861[a0_835 + 1<i32>:byte] = 0xA<8>
	a4_1089 = 0xA<32>
	a5_858 = a0_835 + 2<i32>
l2305D48A:
	Mem863[a5_858:byte] = 0<8>
	word32 a5_1092 = Mem863[s2_1056 + 8<i32>:int32] + s3_1068
	Mem871[s2_1056 + 8<i32>:word32] = a5_1092
	word32 s5_867 = s1_1067 + 1<i32>
	word32 s7_868 = 58<i32>
	word32 s11_1096 = Mem871[a0_31:int32]
	word32 s8_1058 = CONVERT(s0_1075 != 0<32>, bool, word32)
	word32 s6_876 = 9<32>
	word32 s9_877 = 44<i32>
	word32 s10_878 = 0xA<32>
l2305D4B0:
	branch s11_1096 != 0<32> l2305D4DE
l2305D4DE:
	branch s0_1075 == 0<32> l2305D4FC
l2305D4E0:
	word32 a0_889
	word32 a4_2202
	word32 a5_2203
	word32 s0_2199
	word32 s1_2200
	word32 a1_2201
	ra_1065 = ensure(ra_1065, s2_1056, s5_867, a4_1089, a5_1092, s3_1068, out s0_2199, out s1_2200, out a0_889, out a1_2201, out a4_2202, out a5_2203, out s2_1056, out s3_1068, out s4_1057, out s8_1058)
	branch a0_889 == 0<32> l2305D3DE
l2305D4EC:
	word32 a5_910 = 0<32>
l2305D4EE:
	branch a5_910 < s5_867 l2305D58A
l2305D58A:
	Mem916[a0_889 + a5_910:byte] = SLICE(s6_876, byte, 0)
	a5_910 = a5_910 + 1<32>
l2305D4F2:
	Mem923[s2_1056 + 8<i32>:word32] = Mem919[s2_1056 + 8<i32>:int32] + s5_867
l2305D4FC:
	word32 a4_958
	word32 s11_966
	word32 s2_967
	word32 s3_968
	word32 a5_2191
	word32 a6_2192
	word32 s4_2193
	word32 a0_2189
	word32 a1_2190
	word32 s1_2188
	word32 ra_962 = print_string_ptr(ra_1065, Mem926[s11_1096 + 32<i32>:int32], s2_1056, s3_1068, s4_1057, s5_867, s6_876, s7_868, s8_1058, s9_877, s10_878, s8, dwArgC8, out s1_2188, out a0_2189, out a1_2190, out a4_958, out a5_2191, out a6_2192, out s2_967, out s3_968, out s4_2193, out s5_867, out s6_876, out s7_868, out s9_877, out s10_878, out s11_966)
	word32 a4_988
	word32 a5_989
	Mem990[s2_967 + 8<i32>:word32] = update(s2_967, a4_958, out a4_988, out a5_989)
	word32 a0_993
	word32 s2_996
	word32 s8_998
	word32 s0_1006
	word32 s3_1008
	word32 a1_2195
	word32 a5_2197
	word32 s4_2198
	word32 a4_2196
	word32 s1_2194
	word32 ra_1005 = ensure(ra_962, s2_967, s3_968, a4_988, a5_989, s3_968, out s0_1006, out s1_2194, out a0_993, out a1_2195, out a4_2196, out a5_2197, out s2_996, out s3_1008, out s4_2198, out s8_998)
	branch a0_993 == 0<32> l2305D3DE
l2305D51C:
	Mem1014[a0_993:byte] = SLICE(s7_868, byte, 0)
	branch s0_1006 == 0<32> l2305D526
l2305D522:
	Mem1015[a0_993 + 1<i32>:byte] = SLICE(s6_876, byte, 0)
l2305D526:
	Mem1024[s2_996 + 8<i32>:word32] = Mem1017[s2_996 + 8<i32>:int32] + s3_1008
	word32 a4_1033
	word32 a3_2207
	word32 a5_2208
	word32 a0_2205
	word32 a2_2206
	word32 s0_2204
	word32 ra_1036 = print_value(ra_1005, s11_966, s2_996, dwLoc50, out s0_2204, out a0_2205, out a2_2206, out a3_2207, out a4_1033, out a5_2208)
	word32 a4_1043
	word32 a5_2209
	Mem1045[s2_996 + 8<i32>:word32] = update(s2_996, a4_1033, out a4_1043, out a5_2209)
	word32 a5_1050 = CONVERT(Mem1045[s11_966:int32] != 0<32>, bool, word32) + s8_998
	word32 a5_1063
	word32 a1_2211
	word32 s0_2210
	word32 a4_2212
	word32 a0_1053
	ra_1065 = ensure(ra_1036, s2_996, a5_1050 + 1<i32>, a4_1043, a5_1050, s3_1008, out s0_2210, out s1_1067, out a0_1053, out a1_2211, out a4_2212, out a5_1063, out s2_1056, out s3_1068, out s4_1057, out s8_1058)
	branch a0_1053 == 0<32> l2305D3DE
l2305D560:
	s0_1075 = dwArg84
	branch Mem1052[s11_966:int32] == 0<32> l2305D56E
l2305D568:
	Mem1077[a0_1053:byte] = SLICE(s9_877, byte, 0)
	a0_1053 = a0_1053 + 1<32>
l2305D56E:
	branch dwArg84 == 0<32> l2305D576
l2305D570:
	Mem1083[a0_1053:byte] = SLICE(s10_878, byte, 0)
	a0_1053 = a0_1053 + 1<32>
l2305D576:
	Mem1086[a0_1053:byte] = 0<8>
	a4_1089 = Mem1086[s2_1056 + 8<i32>:int32]
	a5_1092 = a5_1063 + a4_1089
	Mem1093[s2_1056 + 8<i32>:word32] = a5_1092
	s11_1096 = Mem1093[s11_966:int32]
l2305D4B4:
	word32 a1_1097 = 2<32>
	branch s0_1075 == 0<32> l2305D4BC
l2305D4B8:
	a1_1097 = s1_1067 + 2<i32>
l2305D4BC:
	word32 s0_1122
	word32 s1_1123
	word32 a1_2157
	word32 a5_2159
	word32 s2_2160
	word32 s3_2161
	word32 s4_2162
	word32 a4_2158
	word32 s8_2163
	word32 a0_1109
	ensure(ra_1065, s2_1056, a1_1097, a4_1089, a5_1092, s3_1068, out s0_1122, out s1_1123, out a0_1109, out a1_2157, out a4_2158, out a5_2159, out s2_2160, out s3_2161, out s4_2162, out s8_2163)
	branch a0_1109 == 0<32> l2305D3DE
l2305D4C4:
	branch s0_1122 != 0<32> l2305D5B0
l2305D5B0:
	word32 a5_1130 = 0<32>
l2305D5A0:
	branch a5_1130 < s1_1123 l2305D596
l2305D596:
	Mem1137[a0_1109 + a5_1130:byte] = 9<8>
	a5_1130 = a5_1130 + 1<32>
l2305D5A4:
	word32 s4_1139 = s1_1123
	branch s1_1123 >= 0<32> l2305D5AC
l2305D5AA:
	s4_1139 = 0<32>
l2305D5AC:
	a0_1109 = a0_1109 + s4_1139
l2305D4C8:
	Mem1146[a0_1109:byte] = 0x7D<8>
	Mem1147[a0_1109 + 1<i32>:byte] = 0<8>
l2305D3C8:
	word32 s1_1182
	word32 s0_1181
	word32 a0_1194
	branch a3 == 0<32> l2305D3E8
l2305D3E8:
	word32 a5_1155 = Mem29[0x4200ECA8<32>:int32]
	branch a2 == 0<32> l2305D3F8
l2305D3F4:
l2305D3F8:
	word32 tp_1208
	call a5_1155 (retsize: 0;)
		uses: a1:a1,a2:a2,a3:a3,a4:a4,a5:a5_1155,ra:ra,s0:a2,s1:a1,s10:s10,s11:s11,s2:a3,s3:s3,s4:s4,s5:s5_41,s6:a0_31,s7:s7,s8:s8,s9:s9,Stack +0010:dwLoc50,Stack +00E4:dwArg84,Stack +0128:dwArgC8,tp:tp_1208
		defs: a0:a0_1194,s0:s0_1181,s1:s1_1182,tp:tp_1208
l2305D3CC:
	word32 a1_1209 = 3<32>
	branch a2 == 0<32> l2305D3D4
l2305D3D0:
	a1_1209 = a1 + 4<i32>
l2305D3D4:
	word32 s8_2144
	word32 a1_2138
	word32 s2_2141
	word32 a4_2139
	word32 s3_2142
	word32 s4_2143
	word32 a5_2140
	ensure(ra, a3, a1_1209, a4, a5, s3, out s0_1181, out s1_1182, out a0_1194, out a1_2138, out a4_2139, out a5_2140, out s2_2141, out s3_2142, out s4_2143, out s8_2144)
l2305D3DA:
	branch a0_1194 != 0<32> l2305D3FC
l2305D3FC:
	Mem1242[a0_1194:byte] = 0x7B<8>
	word32 a5_1243 = a0_1194 + 1<i32>
	branch s0_1181 == 0<32> l2305D424
l2305D40A:
	Mem1246[a0_1194 + 1<i32>:byte] = 0xA<8>
	a5_1243 = a0_1194 + 2<i32>
	word32 s1_1250 = s1_1182 + 0xFFFFFFFF<32>
	word32 a3_1251 = 0xFFFFFFFE<32> - a0_1194
l2305D41C:
	branch a5_1243 + a3_1251 < s1_1250 l2305D450
l2305D450:
	a5_1243 = a5_1243 + 1<32>
	Mem1259[a5_1243 + 4095<i32>:byte] = 9<8>
l2305D424:
	Mem1262[a5_1243:byte] = 0x7D<8>
	Mem1263[a5_1243 + 1<i32>:byte] = 0<8>
l2305D3DE:
l2305D430:
	return
print_object.isra.3_exit:


void cJSON_InitHooks(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __bl_ble_sync_task
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
cJSON_InitHooks_entry:
l2305D7D6:
	branch a0 != 0<32> l2305D7FC
l2305D7FC:
	branch a5 != 0<32> l2305D808
l2305D800:
	a5 = 0x2307BEFC<32>
l2305D808:
	Mem15[a5:word32] = 0x4200ECA8<32>
	branch a5 == 0<32> l2305D7F2
l2305D7E8:
	Mem19[0x2307BEFC<32>:word32] = 0x4200ECA8<32>
l2305D7F2:
	a5 = 0x2307BEF4<32>
l2305D80E:
	Mem26[a5:word32] = 0x4200ECA4<32>
	return
cJSON_InitHooks_exit:


word32 cJSON_Delete(word32 ra, word32 a0, word32 a5, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cJSON_Delete
//      cJSON_Parse
//      base_station_info
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a0 a5 ra s1 s2 s3
// Trashed: a0 a2 a5 a6 ra s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
cJSON_Delete_entry:
l2305D812:
	word32 s0_101 = a0
	word32 s2_102 = 0x4200F000<32>
l2305D824:
	word32 a5_112
	branch s0_101 != 0<32> l2305D834
l2305D834:
	word32 a5_65
	word32 s3_21 = Mem13[Mem13[a5 + 12<i32>:word32]:int32]
	word32 a5_24 = a5 & 256<i32>
	branch a5_24 != 0<32> l2305D84C
l2305D844:
	branch a0 != 0<32> l2305D866
l2305D866:
	word32 a5_41
	word32 s1_158
	ra = cJSON_Delete(ra, a0, a5_41 & 256<i32>, out s1_158, out a0, out a5_41, out s2_102, out s3_21)
	a5_24 = a5_41 & 256<i32>
	branch (a5_41 & 256<i32>) == 0<32> l2305D848
l2305D870:
l2305D848:
	word32 s0_46 = Mem13[a0 + 16<i32>:word32]
	branch a0 != 0<32> l2305D872
l2305D872:
	call a5_24 (retsize: 0;)
		uses: a0:a0_44,a5:a5_65,ra:ra_50,s0:s0_46,s1:Mem13[a5_47:word32],s2:s2_49,s3:s3_51
		defs: a0:a0_59,a5:a5_65,ra:ra_56,s2:s2_55,s3:s3_58
	a5_24 = a5_65
l2305D84C:
	word32 a5_89
	word32 s0_68 = Mem13[a5_24 + 12<i32>:word32]
	word32 a5_69 = a5_24 & 512<i32>
	branch a5_69 != 0<32> l2305D85C
l2305D854:
	s0_68 = Mem13[a0 + 32<i32>:word32]
	branch a0 == 0<32> l2305D85C
l2305D858:
	call a5_69 (retsize: 0;)
		uses: a0:a0_70,a5:a5_89,ra:ra_74,s0:s0_71,s1:Mem13[a5_69:word32],s2:s2_73,s3:s3_75
		defs: a5:a5_89,ra:ra_80,s0:s0_78,s2:s2_79,s3:s3_82
	a5_69 = a5_89
l2305D85C:
	call a5_69 (retsize: 0;)
		uses: a0:s0_93,a5:a5_112,ra:ra_98,s0:s3_95,s1:Mem13[a5_90:word32],s2:s2_97,s3:s3_95
		defs: a0:a0_106,a5:a5_112,ra:ra_103,s0:s0_101,s1:s1_104,s2:s2_102,s3:s3_105
	a5 = a5_112
l2305D826:
	s1Out = s1
	a0Out = a0
	a5Out = a5
	s2Out = s2_102
	s3Out = s3
	return ra
cJSON_Delete_exit:


word32 cJSON_ParseWithOpts(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s11, word32 fflags, word32 frm, word32 dwArg9C, word32 dwArgAC, word32 dwArgEC, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cJSON_Parse
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s0:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00EC:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cJSON_ParseWithOpts_entry:
l2305D878:
	word32 a5_244
	word32 ra_107 = cJSON_New_Item(ra, s0, out a5_244)
	Mem32[0x4200F4E8<32>:word32] = 0<32>
	word32 s0_115 = a0
	branch a0 == 0<32> l2305D8BA
l2305D8A0:
	word32 a0_48
	word32 a5_53
	word32 s3_64
	word32 s4_65
	word32 s11_253
	word32 s9_252
	word32 s8_251
	word32 s7_250
	word32 s6_249
	word32 s5_248
	word32 s2_247
	word32 s1_246
	word32 a5_245
	ra_107 = parse_value(ra_107, a0, skip(a0, out a5_245), 0x4200F4E8<32>, a1, a2, s5, s6, s7, s8, s9, s11, fflags, frm, dwArg9C, dwArgAC, dwArgEC, dwArg0128, dwArg0148, out s0_115, out s1_246, out a0_48, out a5_53, out s2_247, out s3_64, out s4_65, out s5_248, out s6_249, out s7_250, out s8_251, out s9_252, out s11_253)
	word32 s1_79 = a0_48
	branch a0_48 != 0<32> l2305D8CC
l2305D8CC:
	branch s4_65 == 0<32> l2305D8E8
l2305D8D0:
	word32 a5_259
	word32 a0_81 = skip(a0_48, out a5_259)
	word32 a5_83 = CONVERT(Mem32[a0_81:byte], byte, word32)
	s1_79 = a0_81
	branch a5_83 == 0<32> l2305D8E8
l2305D8E8:
	branch s3_64 == 0<32> l2305D8BA
l2305D8EC:
	Mem87[s3_64:word32] = s1_79
l2305D8DC:
	word32 s1_95
	word32 s2_96
	word32 s3_262
	word32 a5_261
	word32 a0_260
	ra_107 = cJSON_Delete(ra_107, s0_115, a5_83, out s1_95, out a0_260, out a5_261, out s2_96, out s3_262)
	Mem101[s2_96:word32] = s1_95
l2305D8B2:
	word32 s3_258
	word32 s2_257
	word32 a5_256
	word32 a0_255
	word32 s1_254
	ra_107 = cJSON_Delete(ra_107, s0_115, a5_53, out s1_254, out a0_255, out a5_256, out s2_257, out s3_258)
l2305D8B8:
	s0_115 = 0<32>
l2305D8BA:
	s0Out = s1
	a0Out = s0_115
	return ra_107
cJSON_ParseWithOpts_exit:


word32 cJSON_Parse(word32 ra, word32 s0, word32 a0, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 s11, word32 fflags, word32 frm, word32 dwArg9C, word32 dwArgAC, word32 dwArgEC, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      base_station_info
// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s0:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00EC:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cJSON_Parse_entry:
l2305D8F2:
l2305D8F6_thunk_cJSON_ParseWithOpts:
	word32 s0_24
	word32 a0_33
	word32 ra_23 = cJSON_ParseWithOpts(ra, s0, a0, 0<32>, 0<32>, s5, s6, s7, s8, s9, s11, fflags, frm, dwArg9C, dwArgAC, dwArgEC, dwArg0128, dwArg0148, out s0_24, out a0_33)
	s0Out = s0_24
	a0Out = a0_33
	return ra_23
cJSON_Parse_exit:


void cJSON_Print(word32 ra, word32 a0, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra s0
// Preserved: sp
cJSON_Print_entry:
l2305D8FA:
l2305D900_thunk_print_value:
	word32 s0_17
	word32 a0_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	print_value(ra, a0, 0<32>, dwArg10, out s0_17, out a0_18, out a2_19, out a3_20, out a4_21, out a5_22)
	return
cJSON_Print_exit:


word32 cJSON_GetObjectItem(word32 s0, word32 a1, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      base_station_info
// MayUse:  a1:[0..31] s0:[0..31]
// LiveOut: a0 a2 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 tp
// Preserved: s0 sp
cJSON_GetObjectItem_entry:
l2305D904:
	word32 a0_10 = Mem9[s0 + 8<i32>:word32]
l2305D910:
	branch s0 == 0<32> l2305D91C
l2305D912:
	s0 = Mem9[a0_10 + 32<i32>:word32]
	a0_10 = cJSON_strcasecmp(a0_10, a1, out a3, out a4)
	branch a0_10 != 0<32> l2305D928
l2305D928:
	s0 = Mem9[s0:word32]
l2305D91C:
	a0Out = s0
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	return a1
cJSON_GetObjectItem_exit:


void cJSON_AddItemToArray(word32 a1, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cJSON_AddItemToObject
// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 a5 sp
cJSON_AddItemToArray_entry:
l2305D92C:
	branch a1 == 0<32> l2305D940
l2305D92E:
	word32 a0_6 = Mem0[a5 + 8<i32>:word32]
	branch a5 != 0<32> l2305D938
l2305D938:
	word32 a5_9 = Mem0[a4:word32]
	branch a4 != 0<32> l2305D936
l2305D936:
l2305D93C:
	Mem12[a1:word32] = a5_9
	Mem13[a5_9 + 4<i32>:word32] = a1
l2305D940:
	return
l2305D932:
	Mem14[a1 + 8<i32>:word32] = a0_6
	return
cJSON_AddItemToArray_exit:


void cJSON_AddItemToObject(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg34, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s8 sp t0 t1 t3 t4 t5 t6 tp
cJSON_AddItemToObject_entry:
l2305D942:
	branch a2 == 0<32> l2305D97C
l2305D97C:
	return
l2305D944:
	word32 a2_9 = Mem6[a0 + 32<i32>:word32]
	word32 s0_16 = a2_9
	word32 s2_18 = a1
	branch a0 == 0<32> l2305D962
l2305D958:
	word32 a5_20 = Mem15[0x4200ECA4<32>:int32]
	word32 tp_30
	word32 a4_31
	word32 a3_67
	word32 a6_68
	word32 a7_69
	word32 s8_70
	word32 t0_71
	word32 t1_72
	word32 t3_73
	word32 t4_74
	word32 t5_75
	word32 t6_76
	call a5_20 (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2_9,a3:a3_67,a4:a4_31,a5:a5_20,a6:a6_68,a7:a7_69,ra:ra,s0:a2_9,s1:a0,s2:a1,s8:s8_70,t0:t0_71,t1:t1_72,t3:t3_73,t4:t4_74,t5:t5_75,t6:t6_76,tp:tp_30
		defs: a3:a3_67,a4:a4_31,a6:a6_68,a7:a7_69,ra:ra_27,s0:s0_25,s2:s2_26,s8:s8_70,t0:t0_71,t1:t1_72,t3:t3_73,t4:t4_74,t5:t5_75,t6:t6_76,tp:tp_30
l2305D962:
	word32 a4_41
	word32 a5_42
	word32 a0_54
	word32 s0_46 = cJSON_strdup(ra, s0_16, s2_18, dwArg34, out a0_54, out a4_41, out a5_42)
	Mem55[a0_54 + 32<i32>:word32] = s0_46
	0<32> = dwArg38
l2305D978_thunk_cJSON_AddItemToArray:
	cJSON_AddItemToArray(s0_46, a4_41, a5_42)
	return
cJSON_AddItemToObject_exit:


void cJSON_CreateNumber(word32 ra, word32 s0, word32 a0, word32 a1, word32 fflags, word32 frm, word32 dwArg58)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s0:[0..31] Stack +0058:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 ra s2 s3 t0 t1 tp
// Preserved: a0 s0 sp
cJSON_CreateNumber_entry:
l2305D97E:
	word32 a5_71
	word32 ra_21 = cJSON_New_Item(ra, s0, out a5_71)
	branch a0 == 0<32> l2305D9AA
l2305D994:
	Mem26[0xF<32>:word32] = a0
	Mem27[a0 + 24<i32>:word32] = a0
	Mem28[a0 + 28<i32>:word32] = a1
	word32 a5_75
	word32 a4_74
	word32 a3_73
	word32 a1_72
	Mem40[__fixdfsi(ra_21, a0, a1, fflags, frm, out a1_72, out a3_73, out a4_74, out a5_75) + 20<i32>:word32] = a0
l2305D9AA:
	0<32> = dwArg58
	return
cJSON_CreateNumber_exit:


void cJSON_CreateString(word32 ra, word32 s0, word32 a0, word32 dwArg34)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] Stack +0034:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
cJSON_CreateString_entry:
l2305D9B8:
	word32 a5_81
	word32 ra_17 = cJSON_New_Item(ra, s0, out a5_81)
	branch a0 == 0<32> l2305D9D6
l2305D9CA:
	Mem22[0x10<32>:word32] = a0
	word32 a0_40
	word32 a4_82
	word32 a5_83
	Mem41[a0_40 + 16<i32>:word32] = cJSON_strdup(ra_17, a0, a0, dwArg34, out a0_40, out a4_82, out a5_83)
l2305D9D6:
	return
cJSON_CreateString_exit:


void cJSON_CreateObject(word32 ra, word32 s0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
cJSON_CreateObject_entry:
l2305D9E2:
	word32 a5_32
	cJSON_New_Item(ra, s0, out a5_32)
	branch a0 == 0<32> l2305D9F0
l2305D9EC:
	Mem17[0x12<32>:word32] = a0
l2305D9F0:
	return
cJSON_CreateObject_exit:


word32 cli_command_get(word32 a0, word32 a1, word32 a3, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      proc_onecmd
//      help_cmd
//      aos_cli_input_direct
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a2 a4 a5
// Preserved: sp
cli_command_get_entry:
l2305D9F6:
	word32 a5_28 = 0xFFFFFFFF<32>
	branch a0 < 0<32> l2305DA24
l2305D9FC:
	a5_28 = 0xFFFFFFFF<32>
	a4 = Mem0[a3 + 44<i32>:word32]
	a2 = a3 + 8<i32>
	branch a0 >=u a3 + 8<i32> l2305DA24
l2305DA10:
	branch a0 >=u a3 l2305DA28
l2305DA28:
	branch a1 == 0<32> l2305DA2E
l2305DA2A:
	Mem13[a1:word32] = 0<32>
l2305DA2E:
	a4 = Mem15[0x2B<32>:word32]
l2305DA14:
	branch a1 == 0<32> l2305DA1A
l2305DA16:
	Mem22[1<32>:word32] = a1
l2305DA1A:
	a4 = Mem26[0x14<32>:word32]
	a5_28 = a0 + 0x18<32>
l2305DA24:
	a2Out = a2
	a4Out = a4
	a5Out = a5_28
	return a5_28
cli_command_get_exit:


void exit_cmd()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
exit_cmd_entry:
l2305DA3A:
	Mem5[0x4200F4F0<32>:word32] = 1<32>
	return
exit_cmd_exit:


void cb_idnoe(word32 ra, word32 a1, word32 a3, word32 a5, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a5:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
cb_idnoe_entry:
l2305DA46:
	word32 a0_7 = Mem5[a5:word32]
	branch a5 != 0<32> l2305DA6E
l2305DA4E:
	Mem9[1<32>:word32] = a0_7
	word32 a3_20
	word32 s1_174
	word32 a0_175
	word32 a2_176
	word32 s10_171
	word32 s11_172
	word32 t4_173
	word32 s7_168
	word32 s8_169
	word32 s9_170
	word32 s4_165
	word32 s5_166
	word32 s6_167
	word32 a7_162
	word32 s2_163
	word32 s3_164
	word32 a2_159
	word32 a4_160
	word32 a5_161
	word32 s1_156
	word32 a0_157
	word32 a1_158
	word32 a3_177
	word32 a4_178
	word32 a5_179
	word32 a7_180
	word32 s2_181
	word32 s3_182
	word32 s4_183
	word32 s5_184
	word32 s6_185
	word32 s7_186
	word32 s8_187
	word32 s9_188
	word32 s10_189
	word32 s11_190
	word32 t4_191
	ra = printf(printf(ra, 0x230BF868<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_156, out a0_157, out a1_158, out a2_159, out a3_20, out a4_160, out a5_161, out a7_162, out s2_163, out s3_164, out s4_165, out s5_166, out s6_167, out s7_168, out s8_169, out s9_170, out s10_171, out s11_172, out t4_173), 0x230BF888<32>, a3_20, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_174, out a0_175, out a1, out a2_176, out a3_177, out a4_178, out a5_179, out a7_180, out s2_181, out s3_182, out s4_183, out s5_184, out s6_185, out s7_186, out s8_187, out s9_188, out s10_189, out s11_190, out t4_191)
l2305DA6E:
	word32 a5_64 = CONVERT(Mem63[a1 + 16<i32>:byte], byte, word32)
	branch (a5_64 + -1<i32> & 255<i32>) <=u 1<32> l2305DA8E
l2305DA82:
	branch a5_64 == 3<32> l2305DA8E
l2305DA8C:
l2305DA8E:
	word32 a3_78
	branch a5_64 == 1<32> l2305DAC0
l2305DAC0:
	a3_78 = 0x230BF84C<32>
l2305DA96:
	branch a5_64 == 2<32> l2305DACA
l2305DACA:
	a3_78 = 0x230BF858<32>
l2305DA9C:
	branch a5_64 == 3<32> l2305DAD4
l2305DAD4:
	a3_78 = 0x230BF840<32>
l2305DAA2:
	a3_78 = 0x230B332C<32>
l2305DAAA:
	word32 s1_192
	word32 a0_193
	word32 a1_194
	word32 a2_195
	word32 a3_196
	word32 a4_197
	word32 a5_198
	word32 a7_199
	word32 s2_200
	word32 s3_201
	word32 s4_202
	word32 s5_203
	word32 s6_204
	word32 s7_205
	word32 s8_206
	word32 s9_207
	word32 s10_208
	word32 s11_209
	word32 t4_210
	printf(ra, 0x230BF8E0<32>, a3_78, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_192, out a0_193, out a1_194, out a2_195, out a3_196, out a4_197, out a5_198, out a7_199, out s2_200, out s3_201, out s4_202, out s5_203, out s6_204, out s7_205, out s8_206, out s9_207, out s10_208, out s11_209, out t4_210)
	return
cb_idnoe_exit:


void ota_cmd(word32 ra, word32 s1, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
ota_cmd_entry:
l2305DADE:
l2305DAF2_thunk_aos_task_new:
	aos_task_new(ra, s1, 0x2305DAF6<32>, 0<32>, 0x1000000<32>, a4, a5, s4, mstatus, dwArg04, dwArg20, dwArg24, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
ota_cmd_exit:


void tftp_ota_thread(word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
tftp_ota_thread_entry:
l2305DAF6:
l2305DAF8_thunk_aos_task_exit:
	aos_task_exit(a2, a3, a4, a5, mstatus, dwArg0128, dwArg0138, dwArg0168, dwArg0178)
	return
tftp_ota_thread_exit:


void cat_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg50, word32 dwArg54, word32 dwArg64, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cat_cmd_entry:
l2305DAFC:
	branch a2 == 2<32> l2305DB18
l2305DB0C:
	word32 a1_290
	word32 s1_289
	word32 a2_291
	word32 a3_292
	word32 a4_293
	word32 a5_294
	word32 a7_295
	word32 s3_296
	word32 s4_297
	word32 s5_298
	word32 s6_299
	word32 s7_300
	word32 s8_301
	word32 s9_302
	word32 s10_303
	word32 s11_304
	word32 t4_305
	ra = printf(ra, 0x230BF814<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_289, out a0, out a1_290, out a2_291, out a3_292, out a4_293, out a5_294, out a7_295, out s2, out s3_296, out s4_297, out s5_298, out s6_299, out s7_300, out s8_301, out s9_302, out s10_303, out s11_304, out t4_305)
l2305DB18:
	word32 a0_49
	word32 mstatus_73
	word32 s6_288
	word32 s3_287
	word32 s2_286
	word32 a5_285
	word32 s1_283
	word32 s0_282
	word32 a2_284
	word32 a4_108
	word32 a3_122
	word32 ra_107 = aos_open(ra, a0, s2, mstatus, dwLoc1C, dwArg64, s1, dwArgD8, dwArg0118, dwArg0158, out s0_282, out s1_283, out a0_49, out a2_284, out a3_122, out a4_108, out a5_285, out s2_286, out s3_287, out s6_288, out mstatus_73)
	word32 s0_105 = a0_49
	branch a0_49 < 0<32> l2305DB4A
l2305DB4A:
	word32 s1_306
	word32 a0_307
	word32 a1_308
	word32 a2_309
	word32 a3_310
	word32 a4_311
	word32 a5_312
	word32 a7_313
	word32 s2_314
	word32 s3_315
	word32 s4_316
	word32 s5_317
	word32 s6_318
	word32 s7_319
	word32 s8_320
	word32 s9_321
	word32 s10_322
	word32 s11_323
	word32 t4_324
	printf(ra_107, 0x230BF82C<32>, a3_122, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_306, out a0_307, out a1_308, out a2_309, out a3_310, out a4_311, out a5_312, out a7_313, out s2_314, out s3_315, out s4_316, out s5_317, out s6_318, out s7_319, out s8_320, out s9_321, out s10_322, out s11_323, out t4_324)
l2305DB26:
	word32 s1_101 = 0x230BF000<32>
l2305DB2A:
	word32 a0_110
	word32 a1_362
	word32 ra_118 = aos_read(ra_107, s0_105, fp + 0xFFFFFFEF<32>, a4_108, dwLoc20, dwArg24, out s0_105, out a0_110, out a1_362)
	branch a0_110 != 1<32> l2305DB62
l2305DB62:
	word32 a2_127
	word32 a3_128
	word32 a4_129
	word32 s2_135
	word32 s1_325
	word32 a0_326
	word32 a1_327
	word32 a5_328
	word32 a7_329
	word32 s3_330
	word32 s4_331
	word32 s5_332
	word32 s6_333
	word32 s7_334
	word32 s8_335
	word32 s9_336
	word32 s10_337
	word32 s11_338
	word32 t4_339
	word32 a2_340
	word32 a4_341
	word32 a5_342
	word32 s2_343
	word32 s3_344
	word32 s6_345
	aos_close(printf(ra_118, 0x230C6900<32>, a3_122, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_325, out a0_326, out a1_327, out a2_127, out a3_128, out a4_129, out a5_328, out a7_329, out s2_135, out s3_330, out s4_331, out s5_332, out s6_333, out s7_334, out s8_335, out s9_336, out s10_337, out s11_338, out t4_339), s0_105, a2_127, a3_128, a4_129, s2_135, mstatus_73, dwArg18, out a2_340, out a4_341, out a5_342, out s2_343, out s3_344, out s6_345)
l2305DB58:
	return
cat_cmd_exit:
l2305DB3C:
	word32 a0_346
	word32 a1_347
	word32 a2_348
	word32 a5_349
	word32 a7_350
	word32 s2_351
	word32 s3_352
	word32 s4_353
	word32 s5_354
	word32 s6_355
	word32 s7_356
	word32 s8_357
	word32 s9_358
	word32 s10_359
	word32 s11_360
	word32 t4_361
	ra_107 = printf(ra_118, s1_101 + -664<i32>, a3_122, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_101, out a0_346, out a1_347, out a2_348, out a3_122, out a4_108, out a5_349, out a7_350, out s2_351, out s3_352, out s4_353, out s5_354, out s6_355, out s7_356, out s8_357, out s9_358, out s10_359, out s11_360, out t4_361)


void hexdump_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg50, word32 dwArg54, word32 dwArg5C, word32 dwArg64, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
hexdump_cmd_entry:
l2305DB76:
	branch a2 == 2<32> l2305DB92
l2305DB86:
	word32 s1_294
	word32 a1_295
	word32 a2_296
	word32 a3_297
	word32 a4_298
	word32 a5_299
	word32 a7_300
	word32 s3_301
	word32 s4_302
	word32 s5_303
	word32 s6_304
	word32 s7_305
	word32 s8_306
	word32 s9_307
	word32 s10_308
	word32 s11_309
	word32 t4_310
	ra = printf(ra, 0x230BF814<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_294, out a0, out a1_295, out a2_296, out a3_297, out a4_298, out a5_299, out a7_300, out s2, out s3_301, out s4_302, out s5_303, out s6_304, out s7_305, out s8_306, out s9_307, out s10_308, out s11_309, out t4_310)
l2305DB92:
	word32 a0_49
	word32 a3_57
	word32 mstatus_73
	word32 s0_286
	word32 s1_287
	word32 a2_288
	word32 a4_289
	word32 a5_290
	word32 s2_291
	word32 s3_292
	word32 s6_293
	word32 ra_74 = aos_open(ra, a0, s2, mstatus, dwLoc1C, dwArg64, s1, dwArgD8, dwArg0118, dwArg0158, out s0_286, out s1_287, out a0_49, out a2_288, out a3_57, out a4_289, out a5_290, out s2_291, out s3_292, out s6_293, out mstatus_73)
	branch a0_49 >= 0<32> l2305DBB8
l2305DBB8:
	word32 a4_83
	word32 a3_94
	word32 a1_109
	word32 a3_111
	word32 s1_115
	word32 s10_116
	word32 a2_132
	word32 a3_133
	word32 a4_134
	word32 s0_139
	word32 s2_143
	word32 t1_311
	word32 a0_312
	word32 a1_313
	word32 a2_314
	word32 a3_315
	word32 a5_316
	word32 s0_317
	word32 a0_318
	word32 a2_319
	word32 a4_320
	word32 a0_321
	word32 a2_322
	word32 a4_323
	word32 a5_324
	word32 a7_325
	word32 s2_326
	word32 s3_327
	word32 s4_328
	word32 s5_329
	word32 s6_330
	word32 s7_331
	word32 s8_332
	word32 s9_333
	word32 s11_334
	word32 t4_335
	word32 a2_336
	word32 a4_337
	word32 a5_338
	word32 s2_339
	word32 s3_340
	word32 s6_341
	aos_close(utils_hexdump(printf(aos_ioctl(memset(ra_74, fp + 0xFFFFFFE8<32>, 0<32>, 8<32>, out t1_311, out a0_312, out a1_313, out a2_314, out a3_315, out a4_83, out a5_316), a0_49, 1<32>, fp + 0xFFFFFFE8<32>, a4_83, dwLoc20, dwArg24, out s0_317, out a0_318, out a2_319, out a3_94, out a4_320), 0x230BFAC0<32>, a3_94, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_115, out a0_321, out a1_109, out a2_322, out a3_111, out a4_323, out a5_324, out a7_325, out s2_326, out s3_327, out s4_328, out s5_329, out s6_330, out s7_331, out s8_332, out s9_333, out s10_116, out s11_334, out t4_335), s1_115, a1_109, a3_111, s10_116, dwArg10, dwArg14, dwArg5C, dwArg0178, out s0_139, out a2_132, out a3_133, out a4_134, out s2_143), s0_139, a2_132, a3_133, a4_134, s2_143, mstatus_73, dwArg18, out a2_336, out a4_337, out a5_338, out s2_339, out s3_340, out s6_341)
l2305DBA0:
	word32 s1_342
	word32 a0_343
	word32 a1_344
	word32 a2_345
	word32 a3_346
	word32 a4_347
	word32 a5_348
	word32 a7_349
	word32 s2_350
	word32 s3_351
	word32 s4_352
	word32 s5_353
	word32 s6_354
	word32 s7_355
	word32 s8_356
	word32 s9_357
	word32 s10_358
	word32 s11_359
	word32 t4_360
	printf(ra_74, 0x230BF82C<32>, a3_57, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_342, out a0_343, out a1_344, out a2_345, out a3_346, out a4_347, out a5_348, out a7_349, out s2_350, out s3_351, out s4_352, out s5_353, out s6_354, out s7_355, out s8_356, out s9_357, out s10_358, out s11_359, out t4_360)
l2305DBAE:
	return
hexdump_cmd_exit:


word32 aos_cli_init(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArg0128, word32 dwArg0168, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
aos_cli_init_entry:
l2305DBEE:
	word32 a0_16
	word32 s3_26
	word32 s4_100
	word32 s2_99
	word32 a5_98
	word32 a4_97
	word32 a3_96
	word32 s1_95
	Mem31[a0_16:word32] = aos_malloc(ra, s1, 580<i32>, a3, a4, a5, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_95, out a0_16, out a3_96, out a4_97, out a5_98, out s2_99, out s3_26, out s4_100)
	branch a0_16 == 0<32> l2305DC46
l2305DC0A:
	word32 a4_39
	word32 t1_101
	word32 a0_102
	word32 a1_103
	word32 a2_104
	word32 a3_105
	word32 a5_106
	ra = memset(ra, a0_16, 0<32>, 580<i32>, out t1_101, out a0_102, out a1_103, out a2_104, out a3_105, out a4_39, out a5_106)
	Mem50[0x230CBB30<32>:word32] = a4_39
	Mem55[a4_39 + 4<i32>:word32] = 0<32>
	Mem56[0xAAAAAC6F<32>:word32] = a4_39
	Mem57[0xAAAAAC73<32>:word32] = a4_39
	Mem59[1<32>:word32] = a4_39
l2305DC46:
	s3Out = s3_26
	return ra
aos_cli_init_exit:


word32 aos_cli_event_cb_read_get()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut: a0
// Trashed: a0
// Preserved: sp
aos_cli_event_cb_read_get_entry:
l2305DC50:
	return 0x2305EE6C<32>
aos_cli_event_cb_read_get_exit:


word32 cli_putstr(word32 ra, word32 a0, word32 dwArg24, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ps_cmd
//      aos_cli_printf
// MayUse:  a0:[0..31] ra:[0..31] Stack +0024:[0..31]
// LiveOut: a1 a2 a3 a4 a5 s1 s2 s3 s4 s8 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
cli_putstr_entry:
l2305DC5A:
	word32 a3_17
	word32 a2_104
	word32 a1_20
	word32 a4_18
	word32 a5_19
	word32 a0_16 = strlen(a0, out a1_20, out a2_104, out a3_17, out a4_18, out a5_19)
	word32 s0_23 = 0<32>
l2305DC74:
	branch s0_23 < a0_16 l2305DC88
l2305DC88:
	word32 a0_36
	word32 s0_40
	ra = aos_write(ra, Mem13[0x4200F4F8<32>:int32], a0 + s0_23, a4_18, dwLoc20, dwArg24, out t1, out s0_40, out a0_36, out a1_20, out a4_18, out a5_19)
	branch a0_36 < 0<32> l2305DC78
l2305DC9C:
	s0_23 = s0_40 + a0_36
l2305DC78:
	s1Out = a0_16
	a1Out = a1_20
	a2Out = dwArg48
	a3Out = a3_17
	a4Out = a4_18
	a5Out = a5_19
	s2Out = a0
	s3Out = 0x4200F000<32>
	s4Out = dwArg04
	s8Out = dwLoc1C
	return t1
cli_putstr_exit:


void ps_cmd(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 s5, word32 s7, word32 s9, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg68, word32 dwArg7C, word32 dwArg8C, word32 dwArgA8, word32 dwArgB8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0188, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s7:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: sp
ps_cmd_entry:
l2305DCA0:
	word32 a0_17
	word32 s3_27
	word32 s1_213
	word32 a1_214
	word32 a2_215
	word32 a3_216
	word32 a4_217
	word32 a5_218
	word32 a6_219
	word32 s2_220
	word32 s4_221
	word32 s8_222
	pvPortMalloc(ra, s1, 1536<i32>, a3, a4, a5, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_213, out a0_17, out a1_214, out a2_215, out a3_216, out a4_217, out a5_218, out a6_219, out s2_220, out s3_27, out s4_221, out s8_222)
	branch a0_17 == 0<32> l2305DD22
l2305DD22:
	0<32> = dwArg38
	return
l2305DCB4:
	word32 a4_223
	word32 a5_224
	strcpy(a0_17, 0x230BFD2C<32>, out a4_223, out a5_224)
	word32 a1_225
	word32 a2_226
	word32 a3_227
	word32 a4_228
	word32 a5_229
	word32 s0_49 = a0_17 + strlen(a0_17, out a1_225, out a2_226, out a3_227, out a4_228, out a5_229)
	word32 a1_230
	word32 a2_231
	word32 a3_232
	word32 a4_233
	word32 a5_234
	word32 a0_57 = strlen(0x230BFD2C<32>, out a1_230, out a2_231, out a3_232, out a4_233, out a5_234) - s0_49
l2305DCDC:
	branch s0_49 + a0_57 <= 0xC<32> l2305DD16
l2305DD16:
	Mem65[s0_49:byte] = 0x20<8>
	s0_49 = s0_49 + 1<32>
	Mem67[s0_49:byte] = 0<8>
l2305DCE4:
	word32 a4_235
	word32 a5_236
	strcpy(s0_49, 0x230BFD34<32>, out a4_235, out a5_236)
	word32 a3_76
	word32 a4_77
	word32 a5_117
	word32 s1_121
	word32 a1_237
	word32 a2_238
	word32 a5_239
	word32 a1_240
	word32 a2_241
	word32 a3_242
	word32 a4_243
	word32 s2_244
	word32 s3_245
	word32 s4_246
	word32 s8_247
	cli_putstr(ra, vTaskList(ra, a0_17, strlen(0x230BFD34<32>, out a1_237, out a2_238, out a3_76, out a4_77, out a5_239) + s0_49, a3_76, a4_77, s3_27, s5, s7, s9, mstatus, dwLoc08, dwArg00, dwArg04, dwArg24, dwArg68, dwArg8C, dwArgA8, dwArgB8, dwArgF8, dwArg0118, dwArg0138, dwArg0148, dwArg0188), dwArg14, out s1_121, out a1_240, out a2_241, out a3_242, out a4_243, out a5_117, out s2_244, out s3_245, out s4_246, out s8_247)
	0<32> = dwArg38
l2305DD12_thunk_vPortFree:
	word32 s0_248
	word32 s1_249
	word32 a0_250
	word32 a1_251
	word32 a2_252
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 a6_256
	word32 s4_257
	word32 t3_258
	vPortFree(s1_121, dwArg10, a5_117, mstatus, dwArg0158, dwArg0198, out s0_248, out s1_249, out a0_250, out a1_251, out a2_252, out a3_253, out a4_254, out a5_255, out a6_256, out s4_257, out t3_258)
	return
ps_cmd_exit:


word32 aos_cli_printf(word32 ra, word32 a0, ptr32 & t1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      proc_onecmd
//      ls_cmd
//      uptime_cmd
//      reset_cmd
//      poweroff_cmd
//      reboot_cmd
//      version_cmd
//      devname_cmd
//      echo_cmd
//      mmem_cmd
//      pmem_cmd
//      help_cmd
//      aos_cli_input_direct
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a1 a2 a3 a4 a5 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: ra s0 s1 sp
aos_cli_printf_entry:
l2305DD2E:
	word32 a0_186
	word32 a1_187
	word32 a2_188
	word32 a3_189
	word32 a4_190
	word32 a5_191
	word32 t1_103
	word32 ra_35 = memset(ra, fp + -304<i32>, 0<32>, 256<i32>, out t1_103, out a0_186, out a1_187, out a2_188, out a3_189, out a4_190, out a5_191)
	word32 a0_40 = 0<32>
	branch CONVERT(Mem28[0x4200F4F5<32>:byte], byte, word32) == 0<32> l2305DD88
l2305DD72:
	word32 a4_194
	word32 a5_195
	strcpy(fp + -304<i32>, 0x42017458<32>, out a4_194, out a5_195)
	word32 a1_196
	word32 a2_197
	word32 a3_198
	word32 a4_199
	word32 a5_200
	a0_40 = strlen(0x42017458<32>, out a1_196, out a2_197, out a3_198, out a4_199, out a5_200)
l2305DD88:
	word32 a0_65
	word32 a7_68
	word32 s10_72
	word32 s11_73
	word32 s6_77
	word32 s7_78
	word32 s9_80
	word32 t0_81
	word32 t4_83
	word32 s5_87
	word32 s0_192
	word32 s1_193
	word32 s4_101
	word32 s3_100
	word32 s2_155
	word32 a5_149
	word32 a3_147
	word32 a4_148
	word32 a1_145
	word32 a2_146
	word32 s8_102
	word32 ra_69 = vsnprintf(ra_35, a0_40 + (fp + -304<i32>), 256<i32> - a0_40, a0, fp + -28<i32>, dwLocE8, dwLocC8, dwLoc9C, dwLoc80, dwLoc7C, dwLoc58, dwLoc34, out t0_81, out s0_192, out s1_193, out a0_65, out a1_145, out a2_146, out a3_147, out a4_148, out a5_149, out a7_68, out s2_155, out s3_100, out s4_101, out s5_87, out s6_77, out s7_78, out s8_102, out s9_80, out s10_72, out s11_73, out t4_83)
	branch a0_65 <= 0<32> l2305DDA6
l2305DDA0:
	word32 s1_201
	t1_103 = cli_putstr(ra_69, fp + -304<i32>, dwLoc011C, out s1_201, out a1_145, out a2_146, out a3_147, out a4_148, out a5_149, out s2_155, out s3_100, out s4_101, out s8_102)
l2305DDA6:
	t1Out = t1_103
	a1Out = a1_145
	a2Out = a2_146
	a3Out = a3_147
	a4Out = a4_148
	a5Out = a5_149
	a7Out = a7_68
	s2Out = s2_155
	s3Out = s3_100
	s4Out = s4_101
	s5Out = s5_87
	s6Out = s6_77
	s7Out = s7_78
	s8Out = s8_102
	s9Out = s9_80
	s10Out = s10_72
	s11Out = s11_73
	t4Out = t4_83
	return t0_81
aos_cli_printf_exit:


word32 proc_onecmd(word32 ra, word32 a0, word32 a3, word32 s3, word32 s6, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_cli_input_direct
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 tp
// Preserved: sp
proc_onecmd_entry:
l2305DDB8:
	branch a0 <= 0<32> l2305DEA0
l2305DEA0:
	s0Out = s0
	a0Out = 0<32>
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
l2305DDBC:
	word32 s2_212 = a0
	branch Mem25[Mem7[0x4200F4EC<32>:int32] + 4<i32>:word32] != 0<32> l2305DDF0
l2305DDE4:
	word32 s11_613
	word32 t4_614
	word32 s4_606
	word32 s5_607
	word32 s6_608
	word32 s9_611
	word32 s10_612
	word32 s7_609
	word32 s8_610
	word32 a1_599
	word32 a2_600
	word32 a3_601
	word32 a7_604
	word32 s3_605
	word32 a4_602
	word32 a5_603
	word32 s1_598
	ra = printf(ra, 0x230C6900<32>, a3, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_598, out a0, out a1_599, out a2_600, out a3_601, out a4_602, out a5_603, out a7_604, out s2_212, out s3_605, out s4_606, out s5_607, out s6_608, out s7_609, out s8_610, out s9_611, out s10_612, out s11_613, out t4_614)
l2305DDF0:
	word32 s1_58 = Mem25[a0:word32]
	word32 a4_597
	word32 a1_595
	word32 a2_596
	word32 a5_101
	word32 a3_108
	word32 a0_65 = strchr(a0, 46<i32>, out a1_595, out a2_596, out a3_108, out a4_597, out a5_101)
	word32 s5_215 = 0<32>
	word32 s6_216 = Mem25[s1_58:int32]
	branch a0_65 == 0<32> l2305DE06
l2305DE02:
	s5_215 = a0_65 - s6_216
l2305DE06:
	word32 s3_213 = 0<32>
	word32 s4_267 = 0<32>
l2305DE0A:
	word32 a0_240
	word32 a5_79 = a5_101 + 8<32>
	branch s3_213 >=u a5_79 l2305DE1A
l2305DE14:
	branch s4_267 <u a5_79 l2305DE1E
l2305DE1E:
	word32 a2_615
	word32 a4_616
	word32 a0_86 = cli_command_get(s3_213, 0<32>, a3_108, out a2_615, out a4_616, out a5_101)
	word32 a0_91 = Mem25[a0_86:word32]
	branch a0_91 == 0<32> l2305DE3C
l2305DE2C:
	word32 a4_109
	word32 a0_106
	branch s5_215 == 0<32> l2305DE40
l2305DE40:
	word32 a2_618
	word32 a1_617
	a0_106 = strcmp(a0_91, s6_216, out a1_617, out a2_618, out a3_108, out a4_109, out a5_101)
l2305DE30:
	a0_106 = strncmp(a0_91, s6_216, s5_215, out a3_108, out a4_109, out a5_101)
l2305DE38:
	branch a0_106 == 0<32> l2305DEA4
l2305DEA4:
	word32 a0_132
	word32 a5_137
	word32 s1_140
	word32 s2_141
	word32 s3_142
	word32 s4_143
	word32 a4_620
	word32 a3_619
	aos_malloc(ra, s1_58, 512<i32>, a3_108, a4_109, a5_101, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_140, out a0_132, out a3_619, out a4_620, out a5_137, out s2_141, out s3_142, out s4_143)
	Mem148[s3_142 + 312<i32>:word32] = a0_132
	word32 a0_149 = Mem148[a5_137 + 312<i32>:int32]
	branch a0_149 != 0<32> l2305DE48
l2305DE48:
	word32 a4_156
	word32 sp_170
	word32 t2_197
	call Mem148[a0_86 + 8<i32>:int32] (retsize: 0;)
		uses: a0:Mem148[a4_156 + 312<i32>:int32],a1:512<i32>,a2:s2_141,a3:s1_140,a4:a4_231,a5:a5_232,a6:a6_233,a7:a7_209,mstatus:mstatus_198,ra:memset(ra_301, a0_149, 0<32>, 512<i32>, out t1_621, out a0_622, out a1_623, out a2_624, out a3_625, out a4_156, out a5_626),s0:Mem148[a4_156:word32],s1:s1_140,s10:s10_210,s11:s11_211,s2:s2_141,s3:s3_142,s4:s4_143,s5:s5_294,s6:s6_70,s7:a0_86,s8:s8_218,s9:s9_219,Stack +0028:dwLoc08,Stack +0040:dwArg10,Stack +0044:dwArg14,Stack +0070:dwArg40,Stack +0074:dwArg44,Stack +0098:dwArg68,Stack +00BC:dwArg8C,Stack +0138:dwArg0108,Stack +0178:dwArg0148,t0:t0_220,t1:t1_221,t2:t2_197,t3:t3_237,t4:t4_223,tp:tp_238
		defs: mstatus:mstatus_198,ra:ra_176,sp:sp_170,t2:t2_197
	word32 s7_631
	word32 a2_205
	word32 a5_208
	word32 a7_209
	word32 s10_210
	word32 s11_211
	word32 s8_218
	word32 s9_219
	word32 t1_221
	word32 t4_223
	word32 s4_630
	word32 a4_629
	word32 a3_628
	word32 a1_627
	word32 t0_220 = aos_cli_printf(ra, 0x230C6978<32>, out t1_221, out a1_627, out a2_205, out a3_628, out a4_629, out a5_208, out a7_209, out s2_212, out s3_213, out s4_630, out s5_215, out s6_216, out s7_631, out s8_218, out s9_219, out s10_210, out s11_211, out t4_223)
	word32 a4_231
	word32 a5_232
	word32 a6_233
	word32 t3_237
	word32 s1_632
	word32 a0_633
	word32 a2_634
	word32 tp_238 = aos_free(Mem148[a5_208 + 312<i32>:int32], a2_205, a5_208, mstatus, Mem148[sp_170 + 344<i32>:word32], Mem148[sp_170 + 408<i32>:word32], out s1_632, out a0_633, out a2_634, out a3_108, out a4_231, out a5_232, out a6_233, out t3_237)
	Mem241[a5_232 + 312<i32>:word32] = 0<32>
	a0_240 = 0<32>
l2305DEBC:
	word32 a2_637
	word32 a4_638
	word32 a7_640
	word32 a5_639
	word32 t1_635
	word32 a1_636
	word32 s10_645
	word32 s9_644
	word32 t4_647
	word32 s4_641
	word32 s11_646
	word32 s7_642
	word32 s8_643
	aos_cli_printf(ra, 0x230BFD0C<32>, out t1_635, out a1_636, out a2_637, out a3_108, out a4_638, out a5_639, out a7_640, out s2_212, out s3_213, out s4_641, out s5_215, out s6_216, out s7_642, out s8_643, out s9_644, out s10_645, out s11_646, out t4_647)
l2305DE3A:
	s4_267 = s4_267 + 1<32>
l2305DE3C:
	s3_213 = s3_213 + 1<32>
l2305DE1A:
	a0_240 = 1<32>
l2305DE8A:
	0<32> = dwArg0128
	s0Out = dwArgE4
	a0Out = a0_240
	a3Out = a3_108
	s2Out = s2_212
	s3Out = s3_213
	s4Out = dwArg78
	s5Out = s5_215
	s6Out = s6_216
	s8Out = s5
	mstatusOut = mstatus
	return ra
proc_onecmd_exit:


void ls_cmd(word32 ra, word32 a2, word32 a3, word32 a4, word32 a5, word32 s7, word32 mstatus, word32 dwArg38, word32 dwArg78, word32 dwArg98, word32 dwArgB8, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ls_cmd_entry:
l2305DECA:
	word32 a2_127
	word32 a5_130
	word32 a5_118
	word32 a0_122
	word32 a0_33
	word32 s1_41
	word32 s2_42
	word32 a2_987
	word32 a3_988
	word32 a5_990
	word32 a6_991
	word32 s3_992
	word32 s4_993
	word32 s8_994
	word32 a1_986
	word32 a4_989
	pvPortMalloc(ra, a2, 88<i32>, a3, a4, a5, mstatus, dwLoc80, dwLoc7C, dwLoc34, dwArg78, dwArgB8, out s1_41, out a0_33, out a1_986, out a2_987, out a3_988, out a4_989, out a5_990, out a6_991, out s2_42, out s3_992, out s4_993, out s8_994)
	word32 s0_156 = a0_33
	word32 a5_1008
	word32 a4_1007
	word32 a2_1005
	word32 a1_1004
	word32 a0_1003
	word32 a5_1001
	word32 a4_1000
	word32 a3_999
	word32 a1_997
	word32 a0_996
	word32 t1_995
	word32 a3_1006
	word32 t1_1002
	word32 a2_998
	word32 ra_71 = memset(memset(ra, 0x230A5004<32>, 0<32>, 88<i32>, out t1_995, out a0_996, out a1_997, out a2_998, out a3_999, out a4_1000, out a5_1001), fp + -176<i32>, 0<32>, 128<i32>, out t1_1002, out a0_1003, out a1_1004, out a2_1005, out a3_1006, out a4_1007, out a5_1008)
	branch s1_41 != 2<32> l2305E0F0
l2305E0F0:
	a5_118 = 1<32>
	branch s1_41 == 1<32> l2305E0D2
l2305E0F6:
	a0_122 = 0x230BF814<32>
l2305DF14:
	word32 a0_263
	word32 s2_234
	word32 ra_261
	word32 a0_195
	word32 a3_169
	word32 ra_175
	word32 a2_83
	word32 a3_84
	word32 a4_85
	word32 a5_87
	word32 a1_1009
	branch strcmp(Mem29[s2_42 + 4<i32>:int32], 0x230BFAE8<32>, out a1_1009, out a2_83, out a3_84, out a4_85, out a5_87) != 0<32> l2305DFCA
l2305DFCA:
	word32 a3_104
	word32 a4_105
	word32 a2_107
	word32 a5_1016
	word32 a5_1014
	word32 a2_1011
	word32 a3_1012
	word32 a1_1015
	word32 a4_1013
	word32 a1_1010
	word32 a0_102 = memcmp(Mem29[s2_42 + 4<i32>:int32], 0x230BFB48<32>, strlen(0x230BFB48<32>, out a1_1010, out a2_1011, out a3_1012, out a4_1013, out a5_1014), out a1_1015, out a2_107, out a3_104, out a4_105, out a5_1016)
	word32 a5_108 = Mem29[s2_42 + 4<i32>:int32]
	branch a0_102 != 0<32> l2305E0C2
l2305E0C2:
	word32 a4_1115
	word32 a2_1113
	word32 a3_1114
	word32 a1_1112
	branch strcmp(a5_108, 0x230C69D0<32>, out a1_1112, out a2_1113, out a3_1114, out a4_1115, out a5_118) != 0<32> l2305E0E2
l2305E0E2:
	a0_122 = 0x230BFB68<32>
l2305E0EA:
	word32 s10_1098
	word32 t4_1100
	word32 s11_1099
	word32 s9_1097
	word32 s8_1096
	word32 s7_1095
	word32 s4_1092
	word32 s6_1094
	word32 s5_1093
	word32 s3_1091
	word32 s2_1090
	word32 a7_1089
	word32 a1_1086
	word32 a4_1088
	word32 a3_1087
	word32 t1_1085
	aos_cli_printf(ra_71, a0_122, out t1_1085, out a1_1086, out a2_127, out a3_1087, out a4_1088, out a5_130, out a7_1089, out s2_1090, out s3_1091, out s4_1092, out s5_1093, out s6_1094, out s7_1095, out s8_1096, out s9_1097, out s10_1098, out s11_1099, out t4_1100)
l2305E0D2:
	s0_156 = inode_forearch_name(ra_71, 0x2305DA46<32>, fp + -180<i32>, a5_118, out a2_127, out a5_130)
l2305DFEE:
	word32 a0_192
	ra_175 = aos_opendir(ra_71, a5_108, a2_107, a3_104, a4_105, a5_108, s2_42, mstatus, dwLocBC, 0<32>, dwLoc38, dwArg38, dwArg78, dwArgB8, out s0_156, out a0_192, out a3_169, out mstatus)
	branch a0_192 == 0<32> l2305E0B8
l2305E0B8:
	a0_195 = 0x230BFB50<32>
l2305DFF8:
	word32 a3_203
	word32 s11_1132
	word32 s10_1131
	word32 s9_1130
	word32 s8_1129
	word32 s7_1128
	word32 s6_1127
	word32 s5_1126
	word32 s4_1125
	word32 s3_1124
	word32 s2_1123
	word32 a7_1122
	word32 a5_1121
	word32 a2_1119
	word32 a4_1120
	word32 a0_1117
	word32 a1_1118
	word32 s1_1116
	word32 t4_1133
	word32 s1_1134
	word32 a0_1135
	word32 a1_1136
	word32 a2_1137
	word32 a3_1138
	word32 a4_1139
	word32 a5_1140
	word32 a7_1141
	word32 s4_1142
	word32 s5_1143
	word32 s6_1144
	word32 s7_1145
	word32 s8_1146
	word32 s9_1147
	word32 s10_1148
	word32 s11_1149
	word32 t4_1150
	word32 s3_235
	word32 ra_230 = printf(printf(ra_175, 0x230BF868<32>, a3_169, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1116, out a0_1117, out a1_1118, out a2_1119, out a3_203, out a4_1120, out a5_1121, out a7_1122, out s2_1123, out s3_1124, out s4_1125, out s5_1126, out s6_1127, out s7_1128, out s8_1129, out s9_1130, out s10_1131, out s11_1132, out t4_1133), 0x230BF888<32>, a3_203, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1134, out a0_1135, out a1_1136, out a2_1137, out a3_1138, out a4_1139, out a5_1140, out a7_1141, out s2_234, out s3_235, out s4_1142, out s5_1143, out s6_1144, out s7_1145, out s8_1146, out s9_1147, out s10_1148, out s11_1149, out t4_1150)
	word32 s4_244 = 0x230C7000<32>
l2305E020:
	word32 a0_253
	ra_261 = aos_readdir(ra_230, s3_235, dwLocC0, dwLoc7C, out a0_253)
	branch a0_253 == 0<32> l2305E0B4
l2305E0B4:
	a0_263 = s3_235
l2305E02A:
	word32 s4_296
	word32 s5_297
	word32 t1_1151
	word32 a0_1152
	word32 a1_1153
	word32 a2_1154
	word32 a3_1155
	word32 a4_1156
	word32 a5_1157
	word32 s0_1158
	word32 s1_1159
	word32 a0_1160
	word32 a1_1161
	word32 a2_1162
	word32 a3_1163
	word32 a4_1164
	word32 a5_1165
	word32 a7_1166
	word32 s2_1167
	word32 s3_1168
	word32 s6_1169
	word32 s7_1170
	word32 s8_1171
	word32 s9_1172
	word32 s10_1173
	word32 s11_1174
	word32 ra_289 = snprintf(memset(ra_261, fp + -176<i32>, 0<32>, 128<i32>, out t1_1151, out a0_1152, out a1_1153, out a2_1154, out a3_1155, out a4_1156, out a5_1157), fp + -176<i32>, 127<i32>, s4_244 + -1672<i32>, dwLocA8, dwLoc88, dwLoc5C, dwLoc40, 0<32>, dwLoc18, s7, out s0_1158, out s1_1159, out a0_1160, out a1_1161, out a2_1162, out a3_1163, out a4_1164, out a5_1165, out a7_1166, out s2_1167, out s3_1168, out s4_296, out s5_297, out s6_1169, out s7_1170, out s8_1171, out s9_1172, out s10_1173, out s11_1174)
	word32 a1_1175
	word32 a2_1176
	word32 a3_1177
	word32 a4_1178
	word32 a5_1179
	branch CONVERT(Mem252[strlen(fp + -176<i32>, out a1_1175, out a2_1176, out a3_1177, out a4_1178, out a5_1179) + (fp + -48<i32>) + -129<i32>:byte], byte, word32) == s5_297 l2305E068
l2305E05A:
	word32 a1_1204
	word32 a2_1205
	word32 a3_1206
	word32 a4_1207
	word32 a5_1208
	Mem324[strlen(fp + -176<i32>, out a1_1204, out a2_1205, out a3_1206, out a4_1207, out a5_1208) + (fp + -48<i32>) + 3968<i32>:byte] = SLICE(s5_297, byte, 0)
l2305E068:
	word32 a2_354
	word32 a3_355
	word32 a4_356
	word32 a5_357
	word32 s2_364
	word32 s7_369
	word32 a0_379
	word32 a3_388
	word32 a5_390
	word32 s6_396
	word32 a1_1180
	word32 a2_1181
	word32 a3_1182
	word32 a4_1183
	word32 a5_1184
	word32 a1_1185
	word32 a2_1186
	word32 a3_1187
	word32 a4_1188
	word32 a5_1189
	word32 s0_1190
	word32 s1_1191
	word32 a0_1192
	word32 a1_1193
	word32 a7_1194
	word32 s3_1195
	word32 s4_1196
	word32 s5_1197
	word32 s6_1198
	word32 s8_1199
	word32 s9_1200
	word32 s10_1201
	word32 s11_1202
	word32 s5_1203
	ra_230 = aos_stat(snprintf(ra_289, fp + -176<i32> + strlen(fp + -176<i32>, out a1_1180, out a2_1181, out a3_1182, out a4_1183, out a5_1184), 127<i32> - strlen(fp + -176<i32>, out a1_1185, out a2_1186, out a3_1187, out a4_1188, out a5_1189), s4_296 + -1672<i32>, dwLocA8, dwLoc88, dwLoc5C, dwLoc40, 0<32>, dwLoc18, s7, out s0_1190, out s1_1191, out a0_1192, out a1_1193, out a2_354, out a3_355, out a4_356, out a5_357, out a7_1194, out s2_364, out s3_1195, out s4_1196, out s5_1197, out s6_1198, out s7_369, out s8_1199, out s9_1200, out s10_1201, out s11_1202), fp + -176<i32>, a2_354, a3_355, a4_356, a5_357, s2_364, mstatus, dwLocBC, 0<32>, dwLoc38, dwArg38, dwArg78, dwArgB8, out a0_379, out a3_388, out a5_390, out s2_234, out s3_235, out s4_244, out s5_1203, out s6_396, out mstatus)
	branch a0_379 != 0<32> l2305E020
l2305E098:
	word32 a0_409 = s7_369 + -1284<i32>
	branch a5_390 << 0x11<u32> < 0<32> l2305E0AE
l2305E0AA:
	a0_409 = s6_396 + -1256<i32>
l2305E0AE:
	word32 s1_1209
	word32 a0_1210
	word32 a1_1211
	word32 a2_1212
	word32 a3_1213
	word32 a4_1214
	word32 a5_1215
	word32 a7_1216
	word32 s5_1217
	word32 s6_1218
	word32 s7_1219
	word32 s8_1220
	word32 s9_1221
	word32 s10_1222
	word32 s11_1223
	word32 t4_1224
	ra_230 = printf(ra_230, a0_409, a3_388, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1209, out a0_1210, out a1_1211, out a2_1212, out a3_1213, out a4_1214, out a5_1215, out a7_1216, out s2_234, out s3_235, out s4_244, out s5_1217, out s6_1218, out s7_1219, out s8_1220, out s9_1221, out s10_1222, out s11_1223, out t4_1224)
l2305DF26:
	word32 a0_464
	ra_175 = aos_opendir(ra_71, 0x230BFAE8<32>, a2_83, a3_84, a4_85, a5_87, s2_42, mstatus, dwLocBC, 0<32>, dwLoc38, dwArg38, dwArg78, dwArgB8, out s0_156, out a0_464, out a3_169, out mstatus)
	branch a0_464 == 0<32> l2305DFBC
l2305DFBC:
	a0_195 = 0x230BFB30<32>
l2305DFC4:
	word32 s1_1225
	word32 a0_1226
	word32 a1_1227
	word32 a3_1228
	word32 a4_1229
	word32 a7_1230
	word32 s2_1231
	word32 s3_1232
	word32 s4_1233
	word32 s5_1234
	word32 s6_1235
	word32 s7_1236
	word32 s8_1237
	word32 s9_1238
	word32 s10_1239
	word32 s11_1240
	word32 t4_1241
	printf(ra_175, a0_195, a3_169, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1225, out a0_1226, out a1_1227, out a2_127, out a3_1228, out a4_1229, out a5_130, out a7_1230, out s2_1231, out s3_1232, out s4_1233, out s5_1234, out s6_1235, out s7_1236, out s8_1237, out s9_1238, out s10_1239, out s11_1240, out t4_1241)
l2305DF32:
	word32 a2_1038
	word32 a4_1040
	word32 a7_1042
	word32 s4_1044
	word32 s6_1046
	word32 s9_1049
	word32 a3_502
	word32 a0_1036
	word32 t4_1034
	word32 s10_1032
	word32 s8_1030
	word32 s6_1028
	word32 s4_1026
	word32 s2_1024
	word32 a5_1022
	word32 a4_1021
	word32 a2_1020
	word32 a1_1019
	word32 a0_1018
	word32 s1_1017
	word32 t4_1052
	word32 s11_1051
	word32 s10_1050
	word32 s8_1048
	word32 s7_1047
	word32 s5_1045
	word32 s3_1043
	word32 a5_1041
	word32 a3_1039
	word32 a1_1037
	word32 s1_1035
	word32 s11_1033
	word32 s9_1031
	word32 s7_1029
	word32 s5_1027
	word32 s3_1025
	word32 a7_1023
	word32 ra_529 = printf(printf(ra_175, 0x230BF868<32>, a3_169, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1017, out a0_1018, out a1_1019, out a2_1020, out a3_502, out a4_1021, out a5_1022, out a7_1023, out s2_1024, out s3_1025, out s4_1026, out s5_1027, out s6_1028, out s7_1029, out s8_1030, out s9_1031, out s10_1032, out s11_1033, out t4_1034), 0x230BF888<32>, a3_502, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1035, out a0_1036, out a1_1037, out a2_1038, out a3_1039, out a4_1040, out a5_1041, out a7_1042, out s2_234, out s3_1043, out s4_1044, out s5_1045, out s6_1046, out s7_1047, out s8_1048, out s9_1049, out s10_1050, out s11_1051, out t4_1052)
	word32 s4_543 = 0x230C0000<32>
l2305DF56:
	word32 a0_551
	ra_261 = aos_readdir(ra_529, s2_234, dwLocC0, dwLoc7C, out a0_551)
	branch a0_551 == 0<32> l2305DF98
l2305DF98:
	a0_263 = s2_234
l2305DF9A:
	s0_156 = aos_closedir(ra_261, a0_263, s2_234, mstatus, dwLoc7C, out a2_127, out a5_130)
l2305DF9E:
	word32 t3_1111
	word32 a6_1109
	word32 s4_1110
	word32 a5_1108
	word32 a4_1107
	word32 a3_1106
	word32 a2_1105
	word32 a1_1104
	word32 a0_1103
	word32 s1_1102
	word32 s0_1101
	vPortFree(s0_156, a2_127, a5_130, mstatus, dwArg98, dwArgD8, out s0_1101, out s1_1102, out a0_1103, out a1_1104, out a2_1105, out a3_1106, out a4_1107, out a5_1108, out a6_1109, out s4_1110, out t3_1111)
	return
ls_cmd_exit:
l2305DF5E:
	word32 a2_637
	word32 a3_638
	word32 a4_639
	word32 a5_640
	word32 s2_647
	word32 a0_660
	word32 a3_669
	word32 a5_671
	word32 s3_675
	word32 s5_676
	word32 s10_1065
	word32 s6_1067
	word32 s11_1066
	word32 s9_1064
	word32 s8_1063
	word32 s7_1062
	word32 s4_1059
	word32 s6_1061
	word32 s5_1060
	word32 s3_1058
	word32 a7_1057
	word32 a1_1056
	word32 a0_1055
	word32 s1_1054
	word32 s0_1053
	ra_529 = aos_stat(snprintf(ra_261, fp + -176<i32>, 127<i32>, s4_543 + -1296<i32>, dwLocA8, dwLoc88, dwLoc5C, dwLoc40, 0<32>, dwLoc18, s7, out s0_1053, out s1_1054, out a0_1055, out a1_1056, out a2_637, out a3_638, out a4_639, out a5_640, out a7_1057, out s2_647, out s3_1058, out s4_1059, out s5_1060, out s6_1061, out s7_1062, out s8_1063, out s9_1064, out s10_1065, out s11_1066), fp + -176<i32>, a2_637, a3_638, a4_639, a5_640, s2_647, mstatus, dwLocBC, 0<32>, dwLoc38, dwArg38, dwArg78, dwArgB8, out a0_660, out a3_669, out a5_671, out s2_234, out s3_675, out s4_543, out s5_676, out s6_1067, out mstatus)
	branch a0_660 != 0<32> l2305DF56
l2305DF7C:
	word32 a0_690 = s5_676 + -1284<i32>
	branch a5_671 << 0x11<u32> < 0<32> l2305DF92
l2305DF8E:
	a0_690 = s3_675 + -1256<i32>
l2305DF92:
	word32 t4_1084
	word32 s11_1083
	word32 s8_1080
	word32 s10_1082
	word32 s9_1081
	word32 s7_1079
	word32 s6_1078
	word32 s5_1077
	word32 a5_1074
	word32 s3_1076
	word32 a7_1075
	word32 a4_1073
	word32 a3_1072
	word32 a2_1071
	word32 a1_1070
	word32 a0_1069
	word32 s1_1068
	ra_529 = printf(ra_529, a0_690, a3_669, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_1068, out a0_1069, out a1_1070, out a2_1071, out a3_1072, out a4_1073, out a5_1074, out a7_1075, out s2_234, out s3_1076, out s4_543, out s5_1077, out s6_1078, out s7_1079, out s8_1080, out s9_1081, out s10_1082, out s11_1083, out t4_1084)


void uptime_cmd(word32 ra, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
uptime_cmd_entry:
l2305E100:
	word32 a0_15
	word32 a1_16
	word32 a2_211
	word32 a4_212
	word32 a5_213
	aos_now_ms(a3, out a0_15, out a1_16, out a2_211, out a4_212, out a5_213)
	word32 t1_214
	word32 a1_215
	word32 a2_216
	word32 a3_217
	word32 a4_218
	word32 a5_219
	word32 a7_220
	word32 s2_221
	word32 s3_222
	word32 s4_223
	word32 s5_224
	word32 s6_225
	word32 s7_226
	word32 s8_227
	word32 s9_228
	word32 s10_229
	word32 s11_230
	word32 t4_231
	aos_cli_printf(ra, 0x230BFEF8<32>, out t1_214, out a1_215, out a2_216, out a3_217, out a4_218, out a5_219, out a7_220, out s2_221, out s3_222, out s4_223, out s5_224, out s6_225, out s7_226, out s8_227, out s9_228, out s10_229, out s11_230, out t4_231)
	word32 a1_56
	word32 a5_232
	__moddi3(__divdi3(a0_15, a1_16, 0xEFFFA60<32>, 0<32>, out a1_56, out a5_232), a1_56, 60<i32>, 0<32>)
	word32 a1_85
	word32 a5_233
	__moddi3(__divdi3(a0_15, a1_16, 0x36EE80<32>, 0<32>, out a1_85, out a5_233), a1_85, 0x18<32>, 0<32>)
	word32 a1_234
	word32 a5_235
	__divdi3(a0_15, a1_16, 0x5265C00<32>, 0<32>, out a1_234, out a5_235)
	word32 a1_133
	word32 a5_236
	__moddi3(__divdi3(a0_15, a1_16, 1000<i32>, 0<32>, out a1_133, out a5_236), a1_133, 60<i32>, 0<32>)
	word32 t1_237
	word32 a1_238
	word32 a2_239
	word32 a3_240
	word32 a4_241
	word32 a5_242
	word32 a7_243
	word32 s2_244
	word32 s3_245
	word32 s4_246
	word32 s5_247
	word32 s6_248
	word32 s7_249
	word32 s8_250
	word32 s9_251
	word32 s10_252
	word32 s11_253
	word32 t4_254
	aos_cli_printf(ra, 0x230BFF10<32>, out t1_237, out a1_238, out a2_239, out a3_240, out a4_241, out a5_242, out a7_243, out s2_244, out s3_245, out s4_246, out s5_247, out s6_248, out s7_249, out s8_250, out s9_251, out s10_252, out s11_253, out t4_254)
	return
uptime_cmd_exit:


void reset_cmd(word32 ra, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
reset_cmd_exit:
reset_cmd_entry:
l2305E1B8:
	word32 t1_35
	word32 a1_36
	word32 a2_37
	word32 a3_38
	word32 a4_39
	word32 a5_40
	word32 a7_41
	word32 s2_42
	word32 s3_43
	word32 s4_44
	word32 s5_45
	word32 s6_46
	word32 s7_47
	word32 s8_48
	word32 s9_49
	word32 s10_50
	word32 s11_51
	word32 t4_52
	aos_cli_printf(ra, 0x230BFDA8<32>, out t1_35, out a1_36, out a2_37, out a3_38, out a4_39, out a5_40, out a7_41, out s2_42, out s3_43, out s4_44, out s5_45, out s6_46, out s7_47, out s8_48, out s9_49, out s10_50, out s11_51, out t4_52)
l2305E1CC_thunk_hal_sys_reset:
	hal_sys_reset(mstatus)


void poweroff_cmd(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
poweroff_cmd_entry:
l2305E1D0:
	word32 t1_34
	word32 a1_35
	word32 a2_36
	word32 a3_37
	word32 a4_38
	word32 a5_39
	word32 a7_40
	word32 s2_41
	word32 s3_42
	word32 s4_43
	word32 s5_44
	word32 s6_45
	word32 s7_46
	word32 s8_47
	word32 s9_48
	word32 s10_49
	word32 s11_50
	word32 t4_51
	aos_cli_printf(ra, 0x230BFD00<32>, out t1_34, out a1_35, out a2_36, out a3_37, out a4_38, out a5_39, out a7_40, out s2_41, out s3_42, out s4_43, out s5_44, out s6_45, out s7_46, out s8_47, out s9_48, out s10_49, out s11_50, out t4_51)
l2305E1E4_thunk_hal_poweroff:
	hal_poweroff()
	return
poweroff_cmd_exit:


void reboot_cmd(word32 ra, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
reboot_cmd_exit:
reboot_cmd_entry:
l2305E1E8:
	word32 t1_35
	word32 a1_36
	word32 a2_37
	word32 a3_38
	word32 a4_39
	word32 a5_40
	word32 a7_41
	word32 s2_42
	word32 s3_43
	word32 s4_44
	word32 s5_45
	word32 s6_46
	word32 s7_47
	word32 s8_48
	word32 s9_49
	word32 s10_50
	word32 s11_51
	word32 t4_52
	aos_cli_printf(ra, 0x230BFD9C<32>, out t1_35, out a1_36, out a2_37, out a3_38, out a4_39, out a5_40, out a7_41, out s2_42, out s3_43, out s4_44, out s5_45, out s6_46, out s7_47, out s8_48, out s9_49, out s10_50, out s11_51, out t4_52)
l2305E1FC_thunk_hal_reboot:
	hal_reboot(mstatus)


void version_cmd(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
version_cmd_entry:
l2305E200:
	word32 a7_233
	word32 s2_234
	word32 a4_231
	word32 a5_232
	word32 a2_229
	word32 a3_230
	word32 t1_227
	word32 a1_228
	word32 s3_235
	word32 s4_236
	word32 s5_237
	word32 s6_238
	word32 s7_239
	word32 s8_240
	word32 s9_241
	word32 s10_242
	word32 s11_243
	word32 t4_244
	aos_cli_printf(ra, 0x230BFF50<32>, out t1_227, out a1_228, out a2_229, out a3_230, out a4_231, out a5_232, out a7_233, out s2_234, out s3_235, out s4_236, out s5_237, out s6_238, out s7_239, out s8_240, out s9_241, out s10_242, out s11_243, out t4_244)
	word32 t1_245
	word32 a1_246
	word32 a2_247
	word32 a3_248
	word32 a4_249
	word32 a5_250
	word32 a7_251
	word32 s2_252
	word32 s3_253
	word32 s4_254
	word32 s5_255
	word32 s6_256
	word32 s7_257
	word32 s8_258
	word32 s9_259
	word32 s10_260
	word32 s11_261
	word32 t4_262
	aos_cli_printf(ra, 0x230A97E4<32>, out t1_245, out a1_246, out a2_247, out a3_248, out a4_249, out a5_250, out a7_251, out s2_252, out s3_253, out s4_254, out s5_255, out s6_256, out s7_257, out s8_258, out s9_259, out s10_260, out s11_261, out t4_262)
	word32 a4_68
	word32 t1_263
	word32 a1_264
	word32 a2_265
	word32 a3_266
	word32 a5_267
	word32 a7_268
	word32 s2_269
	word32 s3_270
	word32 s4_271
	word32 s5_272
	word32 s6_273
	word32 s7_274
	word32 s8_275
	word32 s9_276
	word32 s10_277
	word32 s11_278
	word32 t4_279
	aos_cli_printf(ra, 0x230C6900<32>, out t1_263, out a1_264, out a2_265, out a3_266, out a4_68, out a5_267, out a7_268, out s2_269, out s3_270, out s4_271, out s5_272, out s6_273, out s7_274, out s8_275, out s9_276, out s10_277, out s11_278, out t4_279)
	word32 a0_90 = bl_chip_memory_ram(fp + -72<i32>, fp + -56<i32>, fp + -40<i32>, a4_68, dwLoc18)
	branch a0_90 == 0<32> l2305E25E
l2305E25E:
	word32 t1_280
	word32 a1_281
	word32 a2_282
	word32 a3_283
	word32 a4_284
	word32 a7_285
	word32 s2_286
	word32 s3_287
	word32 s4_288
	word32 s5_289
	word32 s6_290
	word32 s7_291
	word32 s8_292
	word32 s9_293
	word32 s10_294
	word32 s11_295
	word32 t4_296
	word32 a5_107
	aos_cli_printf(ra, 0x230BFF80<32>, out t1_280, out a1_281, out a2_282, out a3_283, out a4_284, out a5_107, out a7_285, out s2_286, out s3_287, out s4_288, out s5_289, out s6_290, out s7_291, out s8_292, out s9_293, out s10_294, out s11_295, out t4_296)
	word32 s0_129 = a0_90
	word32 s2_125 = 0x230C0000<32>
l2305E274:
	branch s0_129 >= a5_107 l2305E240
l2305E27A:
	word32 t1_315
	word32 a1_316
	word32 a2_317
	word32 a3_318
	word32 a4_319
	word32 a7_320
	word32 s3_321
	word32 s4_322
	word32 s5_323
	word32 s6_324
	word32 s7_325
	word32 s8_326
	word32 s9_327
	word32 s10_328
	word32 s11_329
	word32 t4_330
	aos_cli_printf(ra, s2_125 + -92<i32>, out t1_315, out a1_316, out a2_317, out a3_318, out a4_319, out a5_107, out a7_320, out s2_125, out s3_321, out s4_322, out s5_323, out s6_324, out s7_325, out s8_326, out s9_327, out s10_328, out s11_329, out t4_330)
	s0_129 = s0_129 + 1<32>
l2305E240:
	xPortGetFreeHeapSize()
	word32 t1_297
	word32 a1_298
	word32 a2_299
	word32 a3_300
	word32 a4_301
	word32 a5_302
	word32 a7_303
	word32 s2_304
	word32 s3_305
	word32 s4_306
	word32 s5_307
	word32 s6_308
	word32 s7_309
	word32 s8_310
	word32 s9_311
	word32 s10_312
	word32 s11_313
	word32 t4_314
	aos_cli_printf(ra, 0x230BFF68<32>, out t1_297, out a1_298, out a2_299, out a3_300, out a4_301, out a5_302, out a7_303, out s2_304, out s3_305, out s4_306, out s5_307, out s6_308, out s7_309, out s8_310, out s9_311, out s10_312, out s11_313, out t4_314)
	return
version_cmd_exit:


void devname_cmd(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
devname_cmd_entry:
l2305E2A2:
l2305E2B2_thunk_aos_cli_printf:
	word32 t1_30
	word32 a1_31
	word32 a2_32
	word32 a3_33
	word32 a4_34
	word32 a5_35
	word32 a7_36
	word32 s2_37
	word32 s3_38
	word32 s4_39
	word32 s5_40
	word32 s6_41
	word32 s7_42
	word32 s8_43
	word32 s9_44
	word32 s10_45
	word32 s11_46
	word32 t4_47
	aos_cli_printf(ra, 0x230BF9DC<32>, out t1_30, out a1_31, out a2_32, out a3_33, out a4_34, out a5_35, out a7_36, out s2_37, out s3_38, out s4_39, out s5_40, out s6_41, out s7_42, out s8_43, out s9_44, out s10_45, out s11_46, out t4_47)
	return
devname_cmd_exit:


void echo_cmd(word32 ra, word32 a0, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 tp
// Preserved: s0 sp
echo_cmd_entry:
l2305E2B6:
	branch a2 != 1<32> l2305E2F6
l2305E2F6:
	word32 a2_215
	word32 a4_217
	word32 a3_216
	word32 a1_214
	word32 a5_218
	word32 a0_17 = strcmp(a0, 0x230B3CF0<32>, out a1_214, out a2_215, out a3_216, out a4_217, out a5_218)
	branch a0_17 != 0<32> l2305E32A
l2305E32A:
	word32 a1_237
	word32 a2_238
	word32 a3_239
	word32 a4_240
	word32 a5_241
	branch strcmp(a0_17, 0x230B3D20<32>, out a1_237, out a2_238, out a3_239, out a4_240, out a5_241) != 0<32> l2305E320
l2305E33A:
	word32 t1_260
	word32 a1_261
	word32 a2_262
	word32 a3_263
	word32 a4_264
	word32 a5_265
	word32 a7_266
	word32 s2_267
	word32 s3_268
	word32 s4_269
	word32 s5_270
	word32 s6_271
	word32 s7_272
	word32 s8_273
	word32 s9_274
	word32 s10_275
	word32 s11_276
	word32 t4_277
	aos_cli_printf(ra, 0x230BFA40<32>, out t1_260, out a1_261, out a2_262, out a3_263, out a4_264, out a5_265, out a7_266, out s2_267, out s3_268, out s4_269, out s5_270, out s6_271, out s7_272, out s8_273, out s9_274, out s10_275, out s11_276, out t4_277)
	Mem64[5<32>:word32] = Mem9[0x4200F4EC<32>:int32]
l2305E308:
	word32 t1_242
	word32 a1_243
	word32 a2_244
	word32 a3_245
	word32 a4_246
	word32 a5_247
	word32 a7_248
	word32 s2_249
	word32 s3_250
	word32 s4_251
	word32 s5_252
	word32 s6_253
	word32 s7_254
	word32 s8_255
	word32 s9_256
	word32 s10_257
	word32 s11_258
	word32 t4_259
	aos_cli_printf(ra, 0x230BFA30<32>, out t1_242, out a1_243, out a2_244, out a3_245, out a4_246, out a5_247, out a7_248, out s2_249, out s3_250, out s4_251, out s5_252, out s6_253, out s7_254, out s8_255, out s9_256, out s10_257, out s11_258, out t4_259)
	Mem91[Mem9[0x4200F4EC<32>:int32] + 4<i32>:word32] = 0<32>
l2305E320:
	return
l2305E2C4:
	branch Mem9[Mem9[0x4200F4EC<32>:int32] + 4<i32>:word32] != 0<32> l2305E2EC
l2305E2EC:
l2305E2D0:
l2305E2D8:
l2305E2E8_thunk_aos_cli_printf:
	word32 t1_219
	word32 a1_220
	word32 a2_221
	word32 a3_222
	word32 a4_223
	word32 a5_224
	word32 a7_225
	word32 s2_226
	word32 s3_227
	word32 s4_228
	word32 s5_229
	word32 s6_230
	word32 s7_231
	word32 s8_232
	word32 s9_233
	word32 s10_234
	word32 s11_235
	word32 t4_236
	aos_cli_printf(ra, 0x230BFA04<32>, out t1_219, out a1_220, out a2_221, out a3_222, out a4_223, out a5_224, out a7_225, out s2_226, out s3_227, out s4_228, out s5_229, out s6_230, out s7_231, out s8_232, out s9_233, out s10_234, out s11_235, out t4_236)
	return
echo_cmd_exit:


void mmem_cmd(word32 ra, word32 a0, word32 a2, word32 a3, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
mmem_cmd_entry:
l2305E352:
	word32 s0_58
	word32 s1_16
	branch a2 == 3<32> l2305E3B6
l2305E3B6:
	s1_16 = 4<32>
l2305E364:
	branch a2 == 4<32> l2305E376
l2305E376:
	word32 a4_238
	word32 a3_237
	word32 a2_236
	word32 a1_235
	word32 a5_239
	s1_16 = strtol(a0, 0<32>, 0<32>, out a1_235, out a2_236, out a3_237, out a4_238, out a5_239)
l2305E382:
	word32 a1_244
	word32 a2_245
	word32 a3_246
	word32 a4_247
	word32 a5_248
	s0_58 = strtol(Mem11[a3 + 8<i32>:int32], 0<32>, 0<32>, out a1_244, out a2_245, out a3_246, out a4_247, out a5_248)
l2305E36A:
	branch a2 != 2<32> l2305E3A0
l2305E370:
	s0_58 = 0<32>
	s1_16 = 4<32>
l2305E390:
	word32 a2_69
	word32 a1_240
	word32 a3_241
	word32 a4_242
	word32 a5_243
	word32 a0_67 = strtol(Mem11[a3 + 4<i32>:int32], 0<32>, 0<32>, out a1_240, out a2_69, out a3_241, out a4_242, out a5_243)
	branch a0_67 != 0<32> l2305E3BA
l2305E3BA:
	branch s1_16 == 1<32> l2305E3CE
l2305E3CE:
	Mem89[a0_67:byte] = SLICE(s0_58 & 255<i32>, byte, 0)
l2305E3C0:
	branch s1_16 == 2<32> l2305E3FC
l2305E3FC:
	Mem97[a0_67:word16] = SLICE(CONVERT(SLICE(s0_58, word16, 0), word16, word32), word16, 0)
l2305E3C6:
	Mem104[s0_58:word32] = Mem11[a2_69:word32]
l2305E3E6:
	0<32> = dwArg38
l2305E3F8_thunk_aos_cli_printf:
	word32 t1_267
	word32 a1_268
	word32 a2_269
	word32 a3_270
	word32 a4_271
	word32 a5_272
	word32 a7_273
	word32 s2_274
	word32 s3_275
	word32 s4_276
	word32 s5_277
	word32 s6_278
	word32 s7_279
	word32 s8_280
	word32 s9_281
	word32 s10_282
	word32 s11_283
	word32 t4_284
	aos_cli_printf(ra, 0x230BFC0C<32>, out t1_267, out a1_268, out a2_269, out a3_270, out a4_271, out a5_272, out a7_273, out s2_274, out s3_275, out s4_276, out s5_277, out s6_278, out s7_279, out s8_280, out s9_281, out s10_282, out s11_283, out t4_284)
	return
l2305E3A0:
	0<32> = dwArg38
l2305E3B2_thunk_aos_cli_printf:
	word32 t1_249
	word32 a1_250
	word32 a2_251
	word32 a3_252
	word32 a4_253
	word32 a5_254
	word32 a7_255
	word32 s2_256
	word32 s3_257
	word32 s4_258
	word32 s5_259
	word32 s6_260
	word32 s7_261
	word32 s8_262
	word32 s9_263
	word32 s10_264
	word32 s11_265
	word32 t4_266
	aos_cli_printf(ra, 0x230BFB84<32>, out t1_249, out a1_250, out a2_251, out a3_252, out a4_253, out a5_254, out a7_255, out s2_256, out s3_257, out s4_258, out s5_259, out s6_260, out s7_261, out s8_262, out s9_263, out s10_264, out s11_265, out t4_266)
	return
mmem_cmd_exit:


void pmem_cmd(word32 ra, word32 a0, word32 a2, word32 a3, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s8 sp
pmem_cmd_entry:
l2305E416:
	word32 s1_437
	word32 s2_108
	word32 a5_104
	branch a2 == 3<32> l2305E4AE
l2305E4AE:
	s2_108 = 4<32>
l2305E436:
	branch a2 == 4<32> l2305E486
l2305E486:
	word32 a1_795
	word32 a5_799
	word32 a2_796
	word32 a3_797
	word32 a4_798
	s2_108 = strtol(a0, 0<32>, 0<32>, out a1_795, out a2_796, out a3_797, out a4_798, out a5_799)
l2305E492:
	word32 a3_806
	word32 a4_807
	word32 a5_808
	word32 a2_805
	word32 a1_804
	word32 a0_56 = strtol(Mem24[a3 + 8<i32>:int32], 0<32>, 0<32>, out a1_804, out a2_805, out a3_806, out a4_807, out a5_808)
	s1_437 = a0_56
	branch a0_56 <= 1024<i32> l2305E448
l2305E4A8:
	s1_437 = 1024<i32>
l2305E43C:
	a5_104 = 2<32>
	s2_108 = 4<32>
	s1_437 = 0x10<32>
	branch a2 != 2<32> l2305E456
l2305E448:
	word32 a3_802
	word32 a4_803
	word32 a1_800
	word32 a2_801
	strtol(Mem24[a3 + 4<i32>:int32], fp + -52<i32>, 0<32>, out a1_800, out a2_801, out a3_802, out a4_803, out a5_104)
l2305E456:
	branch a5_104 == 0<32> l2305E462
l2305E45A:
	branch a5_104 != Mem24[a3 + 4<i32>:int32] l2305E4B2
l2305E4B2:
	branch s2_108 == 1<32> l2305E536
l2305E536:
	word32 s2_111 = 0<32>
	word32 s5_112 = 0x230C0000<32>
	word32 s6_113 = 0x230C0000<32>
l2305E530:
	branch s2_111 < s1_437 l2305E500
l2305E500:
	branch (s2_111 & 15<i32>) != 0<32> l2305E516
l2305E50C:
	word32 t1_883
	word32 a1_884
	word32 a2_885
	word32 a3_886
	word32 a4_887
	word32 a5_888
	word32 a7_889
	word32 s2_890
	word32 s3_891
	word32 s4_892
	word32 s5_893
	word32 s7_894
	word32 s8_895
	word32 s9_896
	word32 s10_897
	word32 s11_898
	word32 t4_899
	aos_cli_printf(ra, s5_112 + -800<i32>, out t1_883, out a1_884, out a2_885, out a3_886, out a4_887, out a5_888, out a7_889, out s2_890, out s3_891, out s4_892, out s5_893, out s6_113, out s7_894, out s8_895, out s9_896, out s10_897, out s11_898, out t4_899)
l2305E516:
	word32 s3_165
	word32 s7_169
	word32 s8_170
	word32 t1_871
	word32 a1_872
	word32 a2_873
	word32 a3_874
	word32 a4_875
	word32 a5_876
	word32 a7_877
	word32 s4_878
	word32 s9_879
	word32 s10_880
	word32 s11_881
	word32 t4_882
	word32 s2_164
	aos_cli_printf(ra, s6_113 + -792<i32>, out t1_871, out a1_872, out a2_873, out a3_874, out a4_875, out a5_876, out a7_877, out s2_164, out s3_165, out s4_878, out s5_112, out s6_113, out s7_169, out s8_170, out s9_879, out s10_880, out s11_881, out t4_882)
	branch s3_165 != s7_169 l2305E52E
l2305E526:
	word32 t1_929
	word32 a1_930
	word32 a2_931
	word32 a3_932
	word32 a4_933
	word32 a5_934
	word32 a7_935
	word32 s3_936
	word32 s4_937
	word32 s7_938
	word32 s8_939
	word32 s9_940
	word32 s10_941
	word32 s11_942
	word32 t4_943
	aos_cli_printf(ra, s8_170 + -1792<i32>, out t1_929, out a1_930, out a2_931, out a3_932, out a4_933, out a5_934, out a7_935, out s2_164, out s3_936, out s4_937, out s5_112, out s6_113, out s7_938, out s8_939, out s9_940, out s10_941, out s11_942, out t4_943)
l2305E52E:
	s2_111 = s2_164 + 1<32>
l2305E534:
l2305E4B8:
	branch s2_108 == 2<32> l2305E57C
l2305E57C:
	word32 s2_203 = 0<32>
	word32 s4_204 = 0x230C0000<32>
	word32 s5_205 = 0x230C0000<32>
l2305E576:
	branch s2_203 < s1_437 l2305E548
l2305E548:
	branch (s2_203 & 7<i32>) != 0<32> l2305E55A
l2305E550:
	word32 t1_912
	word32 a1_913
	word32 a2_914
	word32 a3_915
	word32 a4_916
	word32 a5_917
	word32 a7_918
	word32 s2_919
	word32 s3_920
	word32 s4_921
	word32 s6_922
	word32 s7_923
	word32 s8_924
	word32 s9_925
	word32 s10_926
	word32 s11_927
	word32 t4_928
	aos_cli_printf(ra, s4_204 + -800<i32>, out t1_912, out a1_913, out a2_914, out a3_915, out a4_916, out a5_917, out a7_918, out s2_919, out s3_920, out s4_921, out s5_205, out s6_922, out s7_923, out s8_924, out s9_925, out s10_926, out s11_927, out t4_928)
l2305E55A:
	word32 s3_257
	word32 s6_260
	word32 s7_261
	word32 t1_900
	word32 a1_901
	word32 a2_902
	word32 a3_903
	word32 a4_904
	word32 a5_905
	word32 a7_906
	word32 s8_907
	word32 s9_908
	word32 s10_909
	word32 s11_910
	word32 t4_911
	word32 s2_256
	aos_cli_printf(ra, s5_205 + -784<i32>, out t1_900, out a1_901, out a2_902, out a3_903, out a4_904, out a5_905, out a7_906, out s2_256, out s3_257, out s4_204, out s5_205, out s6_260, out s7_261, out s8_907, out s9_908, out s10_909, out s11_910, out t4_911)
	branch s3_257 != s6_260 l2305E574
l2305E56C:
	word32 t1_944
	word32 a1_945
	word32 a2_946
	word32 a3_947
	word32 a4_948
	word32 a5_949
	word32 a7_950
	word32 s3_951
	word32 s6_952
	word32 s7_953
	word32 s8_954
	word32 s9_955
	word32 s10_956
	word32 s11_957
	word32 t4_958
	aos_cli_printf(ra, s7_261 + -1792<i32>, out t1_944, out a1_945, out a2_946, out a3_947, out a4_948, out a5_949, out a7_950, out s2_256, out s3_951, out s4_204, out s5_205, out s6_952, out s7_953, out s8_954, out s9_955, out s10_956, out s11_957, out t4_958)
l2305E574:
	s2_203 = s2_256 + 1<32>
l2305E57A:
l2305E4BE:
	word32 s2_294 = 0<32>
	word32 s4_295 = 0x230C0000<32>
	word32 s5_296 = 0x230C0000<32>
l2305E4CE:
	branch s2_294 >= s1_437 l2305E46E
l2305E4D2:
	branch (s2_294 & 3<i32>) != 0<32> l2305E4E4
l2305E4DA:
	word32 t1_839
	word32 a1_840
	word32 a2_841
	word32 a3_842
	word32 a4_843
	word32 a5_844
	word32 a7_845
	word32 s2_846
	word32 s3_847
	word32 s4_848
	word32 s6_849
	word32 s7_850
	word32 s8_851
	word32 s9_852
	word32 s10_853
	word32 s11_854
	word32 t4_855
	aos_cli_printf(ra, s4_295 + -800<i32>, out t1_839, out a1_840, out a2_841, out a3_842, out a4_843, out a5_844, out a7_845, out s2_846, out s3_847, out s4_848, out s5_296, out s6_849, out s7_850, out s8_851, out s9_852, out s10_853, out s11_854, out t4_855)
l2305E4E4:
	word32 s3_349
	word32 s6_352
	word32 s7_353
	word32 t1_827
	word32 a3_830
	word32 a1_828
	word32 a2_829
	word32 a5_832
	word32 a7_833
	word32 a4_831
	word32 s9_835
	word32 s10_836
	word32 s8_834
	word32 s11_837
	word32 t4_838
	word32 s2_348
	aos_cli_printf(ra, s5_296 + -776<i32>, out t1_827, out a1_828, out a2_829, out a3_830, out a4_831, out a5_832, out a7_833, out s2_348, out s3_349, out s4_295, out s5_296, out s6_352, out s7_353, out s8_834, out s9_835, out s10_836, out s11_837, out t4_838)
	branch s3_349 != s6_352 l2305E4FC
l2305E4F4:
	word32 t1_856
	word32 a1_857
	word32 a2_858
	word32 a3_859
	word32 a4_860
	word32 a5_861
	word32 a7_862
	word32 s3_863
	word32 s6_864
	word32 s7_865
	word32 s8_866
	word32 s9_867
	word32 s10_868
	word32 s11_869
	word32 t4_870
	aos_cli_printf(ra, s7_353 + -1792<i32>, out t1_856, out a1_857, out a2_858, out a3_859, out a4_860, out a5_861, out a7_862, out s2_348, out s3_863, out s4_295, out s5_296, out s6_864, out s7_865, out s8_866, out s9_867, out s10_868, out s11_869, out t4_870)
l2305E4FC:
	s2_294 = s2_348 + 1<32>
l2305E462:
	word32 s6_820
	word32 s3_817
	word32 s4_818
	word32 s7_821
	word32 s11_825
	word32 t4_826
	word32 s5_819
	word32 s10_824
	word32 s9_823
	word32 s8_822
	word32 s2_816
	word32 a4_813
	word32 a5_814
	word32 a7_815
	word32 a1_810
	word32 a2_811
	word32 a3_812
	word32 t1_809
	aos_cli_printf(ra, 0x230BFC44<32>, out t1_809, out a1_810, out a2_811, out a3_812, out a4_813, out a5_814, out a7_815, out s2_816, out s3_817, out s4_818, out s5_819, out s6_820, out s7_821, out s8_822, out s9_823, out s10_824, out s11_825, out t4_826)
l2305E46E:
	0<32> = dwArg0198
	return
pmem_cmd_exit:


void help_cmd(word32 ra, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +00A8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
help_cmd_entry:
l2305E58E:
	word32 s5_410
	word32 s6_411
	word32 a4_404
	word32 a2_402
	word32 s2_407
	word32 a5_405
	word32 t1_400
	word32 a1_401
	word32 a3_403
	word32 s4_409
	word32 a7_406
	word32 s3_408
	word32 t4_417
	word32 s10_415
	word32 s8_413
	word32 s7_412
	word32 s9_414
	word32 s11_416
	aos_cli_printf(ra, 0x230BFA50<32>, out t1_400, out a1_401, out a2_402, out a3_403, out a4_404, out a5_405, out a7_406, out s2_407, out s3_408, out s4_409, out s5_410, out s6_411, out s7_412, out s8_413, out s9_414, out s10_415, out s11_416, out t4_417)
	word32 s7_428
	word32 s6_427
	word32 s5_426
	word32 s8_429
	word32 s10_431
	word32 s4_425
	word32 s9_430
	word32 s11_432
	word32 t4_433
	word32 a5_421
	word32 a3_419
	word32 t1_418
	word32 a4_420
	word32 s3_424
	word32 a7_422
	word32 s2_423
	word32 a1_249
	word32 a2_252
	aos_cli_printf(ra, 0x230BFA6C<32>, out t1_418, out a1_249, out a2_252, out a3_419, out a4_420, out a5_421, out a7_422, out s2_423, out s3_424, out s4_425, out s5_426, out s6_427, out s7_428, out s8_429, out s9_430, out s10_431, out s11_432, out t4_433)
	word32 s4_101 = 0x230CC050<32>
	word32 s5_102 = 0x230C0000<32>
l2305E5DE:
	word32 s0_112 = Mem21[a1_249:word32]
	branch a1_249 == 0<32> l2305E5F0
l2305E5E2:
	s0_112 = Mem21[a2_252 + 4<i32>:word32]
	branch a2_252 != 0<32> l2305E5E8
l2305E5E6:
l2305E5E8:
	word32 s7_442
	word32 t1_434
	word32 a7_438
	word32 a5_437
	word32 s2_439
	word32 s6_441
	word32 s3_440
	word32 a3_435
	word32 a4_436
	word32 s8_443
	word32 s9_444
	word32 s10_445
	word32 s11_446
	word32 t4_447
	aos_cli_printf(ra, s5_102 + -1380<i32>, out t1_434, out a1_249, out a2_252, out a3_435, out a4_436, out a5_437, out a7_438, out s2_439, out s3_440, out s4_101, out s5_102, out s6_441, out s7_442, out s8_443, out s9_444, out s10_445, out s11_446, out t4_447)
l2305E5F0:
	branch s0_112 + 0xC<32> != s4_101 l2305E5DE
l2305E5F6:
	word32 t1_448
	word32 a1_449
	word32 a2_450
	word32 a3_451
	word32 a4_452
	word32 a5_453
	word32 a7_454
	word32 s2_455
	word32 s3_456
	word32 s4_457
	word32 s5_458
	word32 s6_459
	word32 s7_460
	word32 s8_461
	word32 s9_462
	word32 s10_463
	word32 s11_464
	word32 t4_465
	aos_cli_printf(ra, 0x230C6900<32>, out t1_448, out a1_449, out a2_450, out a3_451, out a4_452, out a5_453, out a7_454, out s2_455, out s3_456, out s4_457, out s5_458, out s6_459, out s7_460, out s8_461, out s9_462, out s10_463, out s11_464, out t4_465)
	word32 t1_466
	word32 a1_467
	word32 a2_468
	word32 a4_469
	word32 a7_470
	word32 s2_471
	word32 s4_472
	word32 s5_473
	word32 s6_474
	word32 s7_475
	word32 s8_476
	word32 s9_477
	word32 s10_478
	word32 s11_479
	word32 t4_480
	word32 a5_150
	word32 a3_148
	word32 s3_155
	aos_cli_printf(ra, 0x230BFAA8<32>, out t1_466, out a1_467, out a2_468, out a3_148, out a4_469, out a5_150, out a7_470, out s2_471, out s3_155, out s4_472, out s5_473, out s6_474, out s7_475, out s8_476, out s9_477, out s10_478, out s11_479, out t4_480)
	word32 s2_167 = 0x10<32>
	word32 s0_168 = 0<32>
	word32 s6_170 = 0x230C0000<32>
l2305E622:
	word32 a5_177 = a5_150 + 8<32>
	branch s0_168 >=u a5_177 l2305E634
l2305E62E:
	branch s2_167 <u a5_177 l2305E648
l2305E648:
	word32 a2_186
	word32 a4_481
	word32 a0_184 = cli_command_get(s0_168, 0<32>, a3_148, out a2_186, out a4_481, out a5_150)
	branch a0_184 <u 0x230CBF90<32> l2305E658
l2305E654:
	branch a0_184 <u s3_155 l2305E66C
l2305E658:
	branch true l2305E66C
l2305E65C:
	branch a2_186 != 0<32> l2305E662
l2305E660:
l2305E662:
	word32 s2_214
	word32 t1_482
	word32 a1_483
	word32 a2_484
	word32 a4_485
	word32 a7_486
	word32 s4_487
	word32 s5_488
	word32 s7_489
	word32 s8_490
	word32 s9_491
	word32 s10_492
	word32 s11_493
	word32 t4_494
	aos_cli_printf(ra, s6_170 + -1380<i32>, out t1_482, out a1_483, out a2_484, out a3_148, out a4_485, out a5_150, out a7_486, out s2_214, out s3_155, out s4_487, out s5_488, out s6_170, out s7_489, out s8_490, out s9_491, out s10_492, out s11_493, out t4_494)
	s2_167 = s2_214 + 1<32>
l2305E66C:
	s0_168 = s0_168 + 1<32>
l2305E634:
	0<32> = dwArgA8
	return
help_cmd_exit:


word32 cli_getchar(word32 ra, word32 a0, word32 dwArg34, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_cli_input_direct
// MayUse:  a0:[0..31] ra:[0..31] Stack +0034:[0..31]
// LiveOut: a0 ra s0 s1 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s4 s8 t0 t1 t3 tp
// Preserved: sp
cli_getchar_entry:
l2305E670:
	word32 a0_39
	word32 a5_82
	word32 a4_81
	word32 a3_80
	word32 a2_79
	word32 a1_78
	word32 a0_77
	word32 t1_76
	word32 ra_20 = memset(ra, fp + -76<i32>, 0<32>, 60<i32>, out t1_76, out a0_77, out a1_78, out a2_79, out a3_80, out a4_81, out a5_82)
	word32 a0_29
	word32 s4_32
	word32 s8_33
	word32 a2_83
	word32 a4_84
	word32 a5_85
	word32 s0_30 = hal_uart_recv_II(fp + -76<i32>, a0, 1<32>, fp + -80<i32>, dwArg34, out a0_29, out a2_83, out a4_84, out a5_85, out s4_32, out s8_33)
	word32 dwLoc4C_57 = SEQ(nLoc4B, 0<8>)
	branch a0_29 != 0<32> l2305E6AA
l2305E6AA:
	a0_39 = 0<32>
l2305E69A:
	0<32> = dwLoc0C
	a0_39 = CONVERT(a0_29 <u 0xFFFFFFFE<32>, bool, word32)
l2305E6A2:
	s0Out = s0_30
	s1Out = dwLoc4C_57
	a0Out = a0_39
	s4Out = s4_32
	s8Out = s8_33
	return ra_20
cli_getchar_exit:


word32 cli_main_input(word32 ra, word32 s0, word32 a0, word32 a5, word32 s6, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg1C, word32 dwArg28, word32 dwArg4C, word32 dwArg54, word32 dwArg74, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      console_cb_read
//      aos_cli_input_direct
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..7] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 mstatus ra s1 s10 s2 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s5 sp
cli_main_input_entry:
l2305E6AE:
	word32 s6_110
	word32 a0_1252
	word32 s9_113 = Mem8[0x4200F4EC<32>:int32]
	byte bLoc50_1465 = SLICE(s10, byte, 0)
	branch s9_113 == 0x38<32> l2305E7BC
l2305E7BC:
	a0_1252 = 0x230BF8F4<32>
l2305E6DA:
	word32 s7_111 = a0
	word32 s1_103 = 0x4200F4EC<32>
	word32 s4_108 = 0<32>
	word32 s8_112 = 0x230C7000<32>
	s6_110 = s6
l2305E6E6:
	word32 s0_54
	branch s7_111 == 0<32> l2305EC0A
l2305EC0A:
	ra = cli_getchar(ra, fp + -80<i32>, s0, out s0_54, out s1_103, out a0, out s4_108, out s8_112)
	branch a0 == 1<32> l2305E6FE
l2305EC16:
l2305E6EA:
	s0_54 = dwArg74
	branch s4_108 >= a5 l2305EBEC
l2305E6F0:
	s4_108 = s4_108 + 1<32>
	bLoc50_1465 = SLICE(CONVERT(Mem46[s7_111 + s4_108:byte], byte, word32), byte, 0)
l2305E6FE:
	word32 a4_72 = CONVERT(bLoc50_1465, byte, word32)
	branch a4_72 == 0xA<32> l2305E70E
l2305E708:
	branch a4_72 != 0xD<32> l2305E7CA
l2305E7CA:
	a5 = 0x4200F000<32>
	a0 = 0x1B<32>
	s2 = 0x4200F4F4<32>
	branch a4_72 != 0x1B<32> l2305E7F2
l2305E7F2:
	branch CONVERT(Mem71[0x4200F4F4<32>:int8], int8, int32) == 0<32> l2305EA70
l2305EA70:
	Mem84[Mem71[s9_113 + 52<i32>:int32] + s0_54:byte] = SLICE(a4_72, byte, 0)
	word32 a3_413 = 8<32>
	branch a4_72 == 8<32> l2305EA88
l2305EA80:
	a3_413 = 127<i32>
	branch a4_72 != 127<i32> l2305EAB0
l2305EAB0:
	branch a4_72 != 9<32> l2305EBAA
l2305EBAA:
	s1_103 = Mem84[9<32>:word32]
	word32 a3_89 = Mem84[0xD<32>:word32]
	branch a3_89 != 0<32> l2305EBBE
l2305EBB0:
	word32 a1_3104
	word32 s11_3111
	word32 t4_3112
	word32 a3_3106
	word32 a4_3107
	word32 a7_3108
	word32 s3_3109
	word32 s5_3110
	word32 a2_3105
	ra = printf(ra, 0x230BED68<32>, a3_89, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0, out a1_3104, out a2_3105, out a3_3106, out a4_3107, out a5, out a7_3108, out s2, out s3_3109, out s4_108, out s5_3110, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_3111, out t4_3112)
l2305EBBE:
	word32 a4_118 = Mem84[s9_113 + 52<i32>:int32]
	Mem121[s9_113 + 52<i32>:word32] = a4_118 + 1<32>
	branch a4_118 <=u 0xFFFFFF02<32> l2305E6E6
l2305EBD0:
	word32 t1_3113
	word32 s4_3122
	word32 s11_3129
	word32 t4_3130
	word32 s6_3124
	word32 s7_3125
	word32 s8_3126
	word32 s9_3127
	word32 s10_3128
	word32 s5_3123
	word32 s2_3120
	word32 s3_3121
	word32 a2_3115
	word32 a3_3116
	word32 a4_3117
	word32 a5_3118
	word32 a7_3119
	word32 a1_3114
	aos_cli_printf(ra, 0x230BF95C<32>, out t1_3113, out a1_3114, out a2_3115, out a3_3116, out a4_3117, out a5_3118, out a7_3119, out s2_3120, out s3_3121, out s4_3122, out s5_3123, out s6_3124, out s7_3125, out s8_3126, out s9_3127, out s10_3128, out s11_3129, out t4_3130)
	word32 s9_165
	word32 s5_3140
	word32 t1_3131
	word32 s8_3142
	word32 s11_3143
	word32 t4_3144
	word32 s7_3141
	word32 s3_3138
	word32 s4_3139
	word32 a2_3133
	word32 a3_3134
	word32 a4_3135
	word32 a5_3136
	word32 a7_3137
	word32 a1_3132
	aos_cli_printf(ra, 0x230BF950<32>, out t1_3131, out a1_3132, out a2_3133, out a3_3134, out a4_3135, out a5_3136, out a7_3137, out s2, out s3_3138, out s4_3139, out s5_3140, out s6_110, out s7_3141, out s8_3142, out s9_165, out s10, out s11_3143, out t4_3144)
	Mem171[s9_165 + 52<i32>:word32] = 0<32>
l2305EAB6:
	Mem178[Mem84[s9_113 + 52<i32>:int32] + s0_54:byte] = 0<8>
	word32 a2_3034
	word32 s11_3043
	word32 t4_3044
	word32 s10_3042
	word32 s6_3040
	word32 s7_3041
	word32 a1_3033
	word32 t1_3032
	word32 a7_3036
	word32 a5_3035
	word32 s2_3037
	word32 s4_3038
	word32 s5_3039
	word32 s8_194
	word32 a3_1331
	word32 a4_1335
	word32 s9_1340
	word32 s3_1352
	aos_cli_printf(ra, s8_112 + -1792<i32>, out t1_3032, out a1_3033, out a2_3034, out a3_1331, out a4_1335, out a5_3035, out a7_3036, out s2_3037, out s3_1352, out s4_3038, out s5_3039, out s6_3040, out s7_3041, out s8_194, out s9_1340, out s10_3042, out s11_3043, out t4_3044)
	word32 s2_1344 = 0<32>
	word32 s6_1337 = 0<32>
	word32 s5_203 = 0<32>
	word32 s10_1346 = 1<32>
	word32 s11_1348 = 2<32>
l2305EAD4:
	s1_103 = Mem207[a3_1331:word32]
	word32 a4_211 = a4_1335 + 8<32>
	branch s5_203 >=u a4_211 l2305EAE4
l2305EADE:
	a3_1331 = Mem207[a4_211 + 48<i32>:word32]
	branch s6_1337 <u a4_211 l2305EB4C
l2305EB4C:
	word32 a5_3086
	word32 a2_3085
	cli_command_get(s5_203, 0<32>, a3_1331, out a2_3085, out a4_1335, out a5_3086)
	branch true l2305EB84
l2305EB5A:
	word32 a5_3087
	branch strncmp(s0_54, 0<32>, Mem223[s9_1340 + 52<i32>:int32], out a3_1331, out a4_1335, out a5_3087) != 0<32> l2305EB82
l2305EB66:
	s2_1344 = s2_1344 + 1<32>
	a4_1335 = Mem223[dwArg54:word32]
	branch s2_1344 == s10_1346 l2305EB98
l2305EB98:
	s3_1352 = dwArg54
l2305EB70:
	branch s2_1344 != s11_1348 l2305EB88
l2305EB88:
	word32 s7_3102
	word32 t4_3103
	word32 a2_3098
	word32 a5_3099
	word32 s4_3101
	word32 a7_3100
	word32 a1_3097
	word32 t1_3096
	aos_cli_printf(ra, 0x230BF94C<32>, out t1_3096, out a1_3097, out a2_3098, out a3_1331, out a4_1335, out a5_3099, out a7_3100, out s2_1344, out s3_1352, out s4_3101, out s5_203, out s6_1337, out s7_3102, out s8_194, out s9_1340, out s10_1346, out s11_1348, out t4_3103)
l2305EB74:
	word32 a5_3091
	word32 s4_3093
	word32 s7_3094
	word32 t4_3095
	word32 a7_3092
	word32 a2_3090
	word32 t1_3088
	word32 a1_3089
	aos_cli_printf(ra, 0x230BF944<32>, out t1_3088, out a1_3089, out a2_3090, out a3_1331, out a4_1335, out a5_3091, out a7_3092, out s2_1344, out s3_1352, out s4_3093, out s5_203, out s6_1337, out s7_3094, out s8_194, out s9_1340, out s10_1346, out s11_1348, out t4_3095)
l2305EB82:
	s6_1337 = s6_1337 + 1<32>
l2305EB84:
	s5_203 = s5_203 + 1<32>
l2305EAE4:
	branch s2_1344 != 1<32> l2305EB9C
l2305EB9C:
	branch s2_1344 <= 1<32> l2305EB34
l2305EBA0:
	word32 s10_3082
	word32 s11_3083
	word32 t4_3084
	word32 a2_3069
	word32 s8_3080
	word32 s9_3081
	word32 a4_3071
	word32 s4_3076
	word32 s5_3077
	word32 s7_3079
	word32 s6_3078
	word32 a5_3072
	word32 a7_3073
	word32 s3_3075
	word32 s2_3074
	word32 a3_3070
	word32 a1_3068
	word32 t1_3067
	aos_cli_printf(ra, s8_194 + -1792<i32>, out t1_3067, out a1_3068, out a2_3069, out a3_3070, out a4_3071, out a5_3072, out a7_3073, out s2_3074, out s3_3075, out s4_3076, out s5_3077, out s6_3078, out s7_3079, out s8_3080, out s9_3081, out s10_3082, out s11_3083, out t4_3084)
l2305EAEA:
	branch s3_1352 == 0<32> l2305EB34
l2305EAEE:
	word32 a1_3045
	word32 a2_3046
	word32 a3_3047
	word32 a5_3049
	word32 a4_3048
	word32 a0_334 = strlen(s3_1352, out a1_3045, out a2_3046, out a3_3047, out a4_3048, out a5_3049)
	branch a0_334 >u 255<i32> l2305EB34
l2305EAFC:
	word32 a4_343 = Mem207[s9_1340 + 52<i32>:int32]
	word32 s2_344 = a0_334 - a4_343
	word32 a7_3056
	word32 a5_3054
	word32 a6_3055
	word32 a1_3050
	word32 a2_3051
	word32 a4_3053
	word32 a3_3052
	memcpy(s0_54 + a4_343, s3_1352 + a4_343, s2_344, out a1_3050, out a2_3051, out a3_3052, out a4_3053, out a5_3054, out a6_3055, out a7_3056)
	word32 s2_363 = s2_344 + Mem207[s9_1340 + 52<i32>:int32]
	Mem365[s9_1340 + 52<i32>:word32] = s2_363 + 1<i32>
	Mem368[s2_363 + s0_54:byte] = 0x20<8>
	Mem371[Mem368[s9_1340 + 52<i32>:int32] + s0_54:byte] = 0<8>
l2305EB34:
	word32 a2_3059
	word32 a3_3060
	word32 a4_3061
	word32 s3_3063
	word32 s5_3064
	word32 s11_3065
	word32 t4_3066
	word32 a7_3062
	word32 t1_3057
	word32 a1_3058
	aos_cli_printf(ra, 0x230BF954<32>, out t1_3057, out a1_3058, out a2_3059, out a3_3060, out a4_3061, out a5, out a7_3062, out s2, out s3_3063, out s4_108, out s5_3064, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_3065, out t4_3066)
	a0 = a0_379
l2305EA88:
	word32 a4_403 = Mem84[s9_113 + 52<i32>:int32]
	branch a4_403 == 0<32> l2305E6E6
l2305EA90:
	Mem405[s9_113 + 52<i32>:word32] = a4_403 + 0xFFFFFFFF<32>
	s1_103 = Mem405[a4_403 + 0xFFFFFFFF<32>:word32]
	branch Mem405[a4_403 + 3<32>:word32] != 0<32> l2305E6E6
l2305EA9E:
	word32 a1_3023
	word32 a7_3027
	word32 s3_3028
	word32 a2_3024
	word32 a3_3025
	word32 s11_3030
	word32 s5_3029
	word32 t4_3031
	word32 a4_3026
	ra = printf(ra, 0x230BF93C<32>, a3_413, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0, out a1_3023, out a2_3024, out a3_3025, out a4_3026, out a5, out a7_3027, out s2, out s3_3028, out s4_108, out s5_3029, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_3030, out t4_3031)
l2305E7FA:
	word32 a0_632
	word32 a3_628
	word32 a1_439 = CONVERT(Mem71[0x4200ECAC<32>:int8], int8, int32)
	branch a1_439 >= 0<32> l2305E858
l2305E858:
	branch CONVERT(Mem71[0x4200ECAD<32>:int8], int8, int32) >= 0<32> l2305E894
l2305E868:
	word32 a2_444 = CONVERT(SLICE(a4_72, byte, 0), byte, int32)
	Mem445[0x4200ECAD<32>:byte] = SLICE(a2_444, byte, 0)
	branch a2_444 != 116<i32> l2305E894
l2305E87A:
	Mem449[0x42017458<32>:byte] = 0x1B<8>
	Mem450[0x42017459<32>:byte] = SLICE(a1_439, byte, 0)
	Mem453[0x4200F4F5<32>:byte] = 2<8>
l2305E894:
	word32 a2_456 = CONVERT(Mem455[0x4200ECAD<32>:int8], int8, int32)
	a0 = a2_456 & 255<i32>
	branch ((a2_456 & 255<i32>) + -65<i32> & 255<i32>) <=u 1<32> l2305E914
l2305E914:
	word32 a3_464
	word32 a4_492
	branch a2_456 != 65<i32> l2305E9B4
l2305E9B4:
	a3_464 = Mem455[a2_456 + 316<i32>:int32]
	word32 a4_465 = a3_464
l2305E9C0:
	branch CONVERT(Mem455[a2_456 + a4_465 + 324<i32>:byte], byte, word32) != 0<32> l2305EA04
l2305EA04:
	a4_465 = a4_465 + 1<32> | 256<i32>
l2305E9CA:
	branch a3_464 == a4_465 l2305E9E2
l2305E9CE:
l2305E9D2:
	word32 a4_477 = a4_465 + 1<32>
	a4_465 = a4_477 | 256<i32>
	branch CONVERT(Mem455[a2_456 + (a4_477 | 256<i32>) + 324<i32>:byte], byte, word32) == 0<32> l2305E9D2
l2305E9E2:
	Mem486[a2_456 + 316<i32>:word32] = a4_465
	a4_492 = s0_54
l2305E9EC:
	word32 a1_497 = CONVERT(Mem496[a2_456 + a3_464 + 324<i32>:byte], byte, word32)
	branch a1_497 == 0<32> l2305E950
l2305E9F6:
	a4_492 = a4_492 + 1<32>
	Mem501[a4_492 + 4095<i32>:byte] = SLICE(a1_497, byte, 0)
	a3_464 = a3_464 + 1<32> | 256<i32>
l2305E91C:
	a3_464 = Mem455[(a2_456 & 255<i32>) + 316<i32>:int32]
	word32 a4_507 = a3_464 + 255<i32>
l2305E92A:
	word32 a4_510 = a4_507 | 256<i32>
	branch CONVERT(Mem455[(a2_456 & 255<i32>) + a4_510 + 324<i32>:byte], byte, word32) != 0<32> l2305E984
l2305E984:
	branch a3_464 == a4_510 l2305E93C
l2305E988:
l2305E98C:
	word32 a4_518 = a4_510 + 255<i32>
	a4_510 = a4_518 | 256<i32>
	branch CONVERT(Mem455[(a2_456 & 255<i32>) + (a4_518 | 256<i32>) + 324<i32>:byte], byte, word32) != 0<32> l2305E98C
l2305E99E:
	a4_510 = (a4_518 | 256<i32>) + 1<32> | 256<i32>
l2305E938:
	branch a3_464 != a4_510 l2305E97E
l2305E97E:
	a4_507 = a4_510 + 255<i32>
l2305E93C:
	Mem530[(a2_456 & 255<i32>) + 316<i32>:word32] = a4_510
	a4_492 = s0_54
l2305E946:
	word32 a2_540 = CONVERT(Mem539[(a2_456 & 255<i32>) + a3_464 + 324<i32>:byte], byte, word32)
	branch a2_540 != 0<32> l2305E9A6
l2305E9A6:
	a4_492 = a4_492 + 1<32>
	Mem544[a4_492 + 4095<i32>:byte] = SLICE(a2_540, byte, 0)
	a3_464 = a3_464 + 1<32> | 256<i32>
l2305E950:
	Mem549[a4_492:byte] = 0<8>
	word32 a0_3008
	word32 s5_3016
	word32 a2_3010
	word32 a1_3009
	word32 a3_3011
	word32 a4_3012
	word32 a5_3013
	word32 a7_3014
	word32 s3_3015
	word32 s11_3017
	word32 t4_3018
	ra = printf(ra, 0x230BF910<32>, a3_464, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0_3008, out a1_3009, out a2_3010, out a3_3011, out a4_3012, out a5_3013, out a7_3014, out s2, out s3_3015, out s4_108, out s5_3016, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_3017, out t4_3018)
	word32 a3_3021
	word32 a1_3019
	word32 a2_3020
	word32 a4_3022
	a0 = strlen(s0_54, out a1_3019, out a2_3020, out a3_3021, out a4_3022, out a5)
	Mem606[s9_113 + 52<i32>:word32] = a0
	Mem607[0x42017458<32>:byte] = 0<8>
	Mem609[0x4200F4F5<32>:byte] = 0<8>
l2305E8AA:
	word32 s5_613 = 0x42017458<32>
	word32 s3_614 = 0x4200F4F5<32>
	branch a2_456 == 116<i32> l2305EA0C
l2305EA0C:
	word32 a3_615 = CONVERT(Mem455[0x4200F4F5<32>:byte], byte, word32)
	branch a3_615 <=u 63<i32> l2305EA32
l2305EA32:
	Mem621[a3_615 + 0x42017458<32>:byte] = SLICE(a4_72, byte, 0)
	word32 a2_619 = a3_615 + 1<i32> & 255<i32>
	Mem622[0x4200F4F5<32>:byte] = SLICE(a2_619, byte, 0)
	branch a4_72 != 109<i32> l2305E6E6
l2305EA4E:
	s1_103 = Mem622[a4_72:word32]
	Mem626[a2_619 + 0x42017458<32>:byte] = 0<8>
	word32 a4_627 = Mem626[a4_72 + 4<i32>:word32]
	Mem629[0x4200F4F5<32>:byte] = SLICE(a3_615 + 2<32>, byte, 0)
	a3_628 = a3_615 + 2<32>
	branch a4_627 != 0<32> l2305E852
l2305EA62:
	a0_632 = 0x230C6978<32>
l2305EA18:
	Mem635[0x42017458<32>:byte] = 0<8>
	Mem636[0x4200F4F5<32>:byte] = 0<8>
	Mem638[0x4200F4F4<32>:byte] = 0<8>
	word32 s11_3006
	word32 s5_3005
	word32 a1_2999
	word32 a4_3002
	word32 a3_3001
	word32 a2_3000
	word32 a7_3003
	word32 s3_3004
	word32 t4_3007
	ra = printf(ra, 0x230BF918<32>, a3_615, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0, out a1_2999, out a2_3000, out a3_3001, out a4_3002, out a5, out a7_3003, out s2, out s3_3004, out s4_108, out s5_3005, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_3006, out t4_3007)
l2305E8C2:
	Mem665[Mem455[s9_113 + 52<i32>:int32] + s0_54:byte] = 0x1B<8>
	word32 a4_666 = Mem665[s9_113 + 52<i32>:int32]
	Mem668[s9_113 + 52<i32>:word32] = a4_666 + 1<32>
	Mem671[a4_666 + 1<32> + s0_54:byte] = SLICE(a1_439, byte, 0)
	word32 a4_672 = Mem671[s9_113 + 52<i32>:int32]
	Mem674[s9_113 + 52<i32>:word32] = a4_672 + 1<32>
	Mem676[a4_672 + 1<32> + s0_54:byte] = SLICE(a2_456 & 255<i32>, byte, 0)
	word32 a4_677 = Mem676[s9_113 + 52<i32>:int32]
	Mem679[s9_113 + 52<i32>:word32] = a4_677 + 1<32>
	s1_103 = Mem679[a4_677 + 1<32>:word32]
	branch Mem679[a4_677 + 5<32>:word32] != 0<32> l2305E90A
l2305E8FE:
	word32 t4_2998
	word32 a2_2993
	word32 a1_2992
	word32 s11_2997
	word32 a4_2995
	word32 a3_2994
	word32 a7_2996
	ra = printf(ra, 0x230BF908<32>, 0x1B<32>, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0, out a1_2992, out a2_2993, out a3_2994, out a4_2995, out a5, out a7_2996, out s2, out s3_614, out s4_108, out s5_613, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_2997, out t4_2998)
l2305E90A:
	Mem707[s5_613:byte] = 0<8>
	Mem709[s3_614:byte] = 0<8>
l2305E80A:
	word32 a1_711 = CONVERT(SLICE(a4_72, byte, 0), byte, int32)
	Mem712[0x4200ECAC<32>:byte] = SLICE(a1_711, byte, 0)
	branch a1_711 == 91<i32> l2305E6E6
l2305E81C:
	Mem716[Mem712[s9_113 + 52<i32>:int32] + s0_54:byte] = 0x1B<8>
	word32 a3_717 = Mem716[s9_113 + 52<i32>:int32]
	Mem719[s9_113 + 52<i32>:word32] = a3_717 + 1<32>
	a3_628 = a3_717 + 1<32> + s0_54
	Mem721[a3_628:byte] = SLICE(a4_72, byte, 0)
	word32 a4_722 = Mem721[s9_113 + 52<i32>:int32]
	Mem724[s9_113 + 52<i32>:word32] = a4_722 + 1<32>
	s1_103 = Mem724[a4_722 + 1<32>:word32]
	branch Mem724[a4_722 + 5<32>:word32] != 0<32> l2305E852
l2305E846:
	a0_632 = 0x230BF904<32>
l2305E84E:
	word32 a4_2986
	word32 a3_2985
	word32 a1_2983
	word32 a2_2984
	word32 a7_2987
	word32 s3_2988
	word32 s5_2989
	word32 s11_2990
	word32 t4_2991
	ra = printf(ra, a0_632, a3_628, dwLoc68, s6, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_103, out a0, out a1_2983, out a2_2984, out a3_2985, out a4_2986, out a5, out a7_2987, out s2, out s3_2988, out s4_108, out s5_2989, out s6_110, out s7_111, out s8_112, out s9_113, out s10, out s11_2990, out t4_2991)
l2305E852:
	Mem758[s2:byte] = 0<8>
l2305E7D8:
	Mem761[0x4200F4F4<32>:byte] = 1<8>
	Mem763[0x4200FCAC<32>:byte] = 0xFF<8>
	Mem765[0x4200FCAD<32>:byte] = 0xFF<8>
l2305E70E:
	word32 s2_779 = Mem71[s1_103:int32]
	Mem782[s0_54 + Mem71[s9_113 + 52<i32>:int32]:byte] = 0<8>
	Mem784[s9_113 + 52<i32>:word32] = 0<32>
	word32 a5_2870
	word32 a3_2868
	word32 a2_2867
	word32 a1_2866
	word32 a4_2869
	branch strlen(s2_779 + 56<i32>, out a1_2866, out a2_2867, out a3_2868, out a4_2869, out a5_2870) != 0<32> l2305EC18
l2305EC18:
	word32 s6_815
	word32 a2_826
	word32 a1_827
	word32 s3_792 = Mem784[s1_103:int32]
	word32 a5_798
	word32 a2_2973
	word32 a3_2974
	word32 a4_2975
	word32 a1_2972
	word32 a0_795 = strlen(s3_792 + 56<i32>, out a1_2972, out a2_2973, out a3_2974, out a4_2975, out a5_798)
	word32 s0_804 = Mem784[a5_798 + 320<i32>:int32]
	Mem807[a5_798 + 316<i32>:word32] = s0_804
	word32 s0_808 = s0_804 + (a0_795 + 1<i32>)
	word32 s4_806 = 256<i32> - s0_804
	word32 a0_809 = s0_804 + 324<i32> + a5_798
	word32 s0_810 = s0_808 + 0xFFFFFFFF<32>
	branch s4_806 < a0_795 + 1<i32> l2305EC88
l2305EC88:
	s0_810 = s0_808 + 0xFFFFFFFF<32> | 256<i32>
	s6_815 = CONVERT(Mem807[a5_798 + s0_810 + 324<i32>:byte], byte, word32)
	word32 a4_2981
	word32 a2_2979
	word32 a3_2980
	word32 a5_2982
	strncpy(a0_809, s3_792 + 56<i32>, s4_806, out a2_2979, out a3_2980, out a4_2981, out a5_2982)
	a2_826 = a0_795 + 1<i32> - s4_806
	a1_827 = s3_792 + 56<i32> + s4_806
	a0_809 = a0_809 + 324<i32>
l2305EC4A:
	s6_815 = CONVERT(Mem807[a5_798 + (s0_808 + 0xFFFFFFFF<32>) + 324<i32>:byte], byte, word32)
	a2_826 = a0_795 + 1<i32>
	a1_827 = s3_792 + 56<i32>
l2305EC54:
	word32 a4_836
	word32 a5_2978
	word32 a3_2977
	word32 a2_2976
	strncpy(a0_809, a1_827, a2_826, out a2_2976, out a3_2977, out a4_836, out a5_2978)
	word32 s0_846 = s0_810 + 1<32>
	Mem852[a4_836 + 320<i32>:word32] = s0_846 | 256<i32>
	word32 s0_848 = s0_846 | 256<i32>
	branch s6_815 == 0<32> l2305E72E
l2305EC70:
	word32 a5_856 = a4_836 + s0_848
	branch CONVERT(Mem857[a5_856 + 324<i32>:byte], byte, word32) == 0<32> l2305E72E
l2305EC7C:
	Mem860[a5_856 + 324<i32>:byte] = 0<8>
	s0_848 = s0_848 + 1<32> | 256<i32>
l2305E72E:
	word32 a2_2881
	word32 a1_2886
	word32 a1_2873
	word32 t1_2871
	word32 a0_2872
	word32 a0_2879
	word32 a2_2874
	word32 a3_2882
	word32 t1_2878
	word32 a5_2877
	word32 a4_2876
	word32 a1_2880
	word32 a3_2875
	word32 a5_2890
	word32 a2_2887
	word32 a5_2884
	word32 t1_2885
	word32 a4_2889
	word32 a3_2888
	word32 a4_2883
	word32 a0_1013
	ra = memset(memset(memset(ra, 0x42017358<32>, 0<32>, 256<i32>, out t1_2871, out a0_2872, out a1_2873, out a2_2874, out a3_2875, out a4_2876, out a5_2877), fp + -80<i32>, 0<32>, 0x10<32>, out t1_2878, out a0_2879, out a1_2880, out a2_2881, out a3_2882, out a4_2883, out a5_2884), fp + -84<i32>, 0<32>, 4<32>, out t1_2885, out a0_1013, out a1_2886, out a2_2887, out a3_2888, out a4_2889, out a5_2890)
	word32 a5_1028 = 0<32>
	word32 s11_1048 = fp + -80<i32>
	word32 s8_1044 = 0<32>
	word32 s6_1123 = 32<i32>
l2305E77A:
	word32 a7_1002
	word32 a3_943
	word32 s0_924 = s2_779 + 56<i32> + a5_1028
	word32 a3_926 = CONVERT(Mem925[s0_924:byte], byte, word32)
	branch a3_926 == 32<i32> l2305EE2E
l2305EE2E:
	branch a5_1028 == 0<32> l2305EE48
l2305EE30:
	a7_1002 = s2_779 + 56<i32> + (a5_1028 + -1<i32>)
	a3_926 = CONVERT(Mem925[a7_1002:byte], byte, word32)
	branch a3_926 != 92<i32> l2305EE48
l2305EE40:
	word32 a3_933 = CONVERT(bLoc54, byte, word32)
	a3_926 = a3_933 & 1<32>
	branch (a3_933 & 1<32>) != 0<32> l2305EDC0
l2305EE48:
	branch (a3_926 & 3<32>) != 1<32> l2305ED18
l2305EE50:
	a3_943 = CONVERT(bLoc54, byte, word32) & 0xFFFFFFFE<32>
l2305E786:
	branch a3_926 >u 32<i32> l2305ECAA
l2305ECAA:
	branch a3_926 == 34<i32> l2305EDA6
l2305EDA6:
	branch a5_1028 == 0<32> l2305EDDE
l2305EDA8:
	a7_1002 = s2_779 + 56<i32> + (a5_1028 + -1<i32>)
	a3_926 = CONVERT(Mem925[a7_1002:byte], byte, word32)
	branch a3_926 != 92<i32> l2305EDDE
l2305EDB8:
	word32 a3_948 = CONVERT(bLoc54, byte, word32)
	a3_926 = a3_948 & 1<32>
	branch (a3_948 & 1<32>) == 0<32> l2305EDDE
l2305EDDE:
	word32 a3_954 = a3_926 & 3<32>
	branch a3_954 == 1<32> l2305ED18
l2305EDE6:
	branch a3_954 == 2<32> l2305EE5E
l2305EDEA:
	branch a3_954 != 0<32> l2305EE1A
l2305EE1A:
	branch a3_954 != 3<32> l2305ED18
l2305EE1E:
	a3_943 = CONVERT(bLoc54, byte, word32) & 0xFFFFFFFC<32>
l2305EE24:
	Mem968[s0_924:byte] = 0<8>
	bLoc54 = SLICE(a3_943, byte, 0)
l2305EDEC:
	word32 a2_972 = Mem925[s11_1048:int32]
	Mem977[s11_1048:word32] = a2_972 + 1<i32>
	Mem990[a5_1028 + 1<i32> + (s2_779 + 56<i32>):word32] = ((s8_1044 << 4<u32>) + a2_972 << 2<i32>) + 0x42017358<32>
	bLoc54 = SLICE(CONVERT(bLoc54, byte, word32) & 0xFFFFFFFC<32> | 3<i32>, byte, 0)
l2305ECB2:
	branch a3_926 != 59<i32> l2305E78E
l2305ECB6:
	word32 a3_992 = CONVERT(bLoc54, byte, word32)
	branch a5_1028 == 0<32> l2305ECD2
l2305ECBC:
	a7_1002 = s2_779 + 56<i32> + (a5_1028 + -1<i32>)
	branch CONVERT(Mem925[a7_1002:byte], byte, word32) != 92<i32> l2305ECD2
l2305ECCC:
	branch (a3_992 & 1<i32>) != 0<32> l2305EDC0
l2305EDC0:
	word32 a6_1020
	word32 a2_2967
	word32 a3_2963
	word32 a2_2962
	word32 a1_2961
	word32 a4_2964
	word32 a3_2968
	word32 a4_2969
	word32 a1_2966
	word32 a5_2965
	word32 a5_2970
	word32 a7_2971
	memcpy(a7_1002, s6, strlen(s0_924, out a1_2961, out a2_2962, out a3_2963, out a4_2964, out a5_2965) + 1<i32>, out a1_2966, out a2_2967, out a3_2968, out a4_2969, out a5_2970, out a6_1020, out a7_2971)
	a0_1013 = a7_1002
	a5_1028 = a6_1020
l2305ECD2:
	branch (a3_992 & 2<32>) != 0<32> l2305EE5E
l2305ECD8:
	branch (a3_992 & 2<32> & 3<32>) != 1<32> l2305ED18
l2305ECE0:
	Mem1040[s0_924:byte] = 0<8>
	bLoc54 = SLICE(CONVERT(bLoc54, byte, word32) & 0xFFFFFFFE<32>, byte, 0)
	branch Mem1040[s11_1048:int32] == 0<32> l2305ED18
l2305ECF4:
	s8_1044 = s8_1044 + 1<32>
	branch s8_1044 > 3<32> l2305ED18
l2305ECFA:
	s11_1048 = (s8_1044 << 2<u32>) + (fp + -80<i32>)
l2305E78A:
	branch a3_926 == 0<32> l2305ED04
l2305ED04:
	word32 a3_1049 = CONVERT(bLoc54, byte, word32)
	branch (a3_1049 & 2<i32>) != 0<32> l2305EE5E
l2305ED10:
	bLoc54 = SLICE(a3_1049 | 4<i32>, byte, 0)
l2305E78E:
	word32 a3_1055 = CONVERT(bLoc54, byte, word32)
	branch (a3_1055 & 1<i32>) != 0<32> l2305ED18
l2305E79A:
	word32 a2_1058 = Mem925[s11_1048:int32]
	Mem1062[s11_1048:word32] = a2_1058 + 1<i32>
	Mem1070[s0_924:word32] = ((s8_1044 << 4<u32>) + a2_1058 << 2<i32>) + 0x42017358<32>
	bLoc54 = SLICE(a3_1055 | 1<i32>, byte, 0)
l2305ED18:
	word32 a3_1073 = CONVERT(bLoc54, byte, word32)
	branch (a3_1073 & 4<i32>) != 0<32> l2305ED3A
l2305ED22:
	a5_1028 = a5_1028 + 1<32>
	branch a5_1028 > 255<i32> l2305ED3A
l2305ED2C:
	branch s8_1044 > 3<32> l2305ED3A
l2305ED30:
	branch Mem1072[s11_1048:int32] <= 0xF<32> l2305E77A
l2305ED3A:
	word32 a3_1098 = a3_1073 & 2<32>
	branch (a3_1073 & 2<32>) != 0<32> l2305EE5E
l2305ED40:
	word32 s3_1111 = 0<32>
l2305ED4C:
	word32 s2_1137
	word32 s3_1138
	word32 s4_1139
	word32 s5_1140
	word32 s8_1142
	word32 s0_2891
	ra = proc_onecmd(ra, a0_1013, a3_1098, s3_1111, s6_1123, mstatus, 0<32>, 0<32>, dwLoc30, dwLoc2C, dwLoc08, dwArg1C, dwArg98, dwArgB8, dwArgD8, out s0_2891, out a0_1013, out a3_1098, out s2_1137, out s3_1138, out s4_1139, out s5_1140, out s6_1123, out s8_1142, out mstatus)
	s3_1111 = s3_1138 | a0_1013
	branch s8_1142 < s4_1139 l2305ED68
l2305ED5E:
	branch s4_1139 != s5_1140 l2305ED4C
l2305ED68:
	branch s3_1111 != 1<32> l2305EE58
l2305EE58:
	branch s3_1111 != 2<32> l2305ED80
l2305EE5E:
	word32 s2_2950
	word32 s4_2952
	word32 a5_2948
	word32 a4_2947
	word32 s5_2953
	word32 s6_2954
	word32 a7_2949
	word32 a2_2945
	word32 t1_2943
	word32 s11_2959
	word32 a3_2946
	word32 s3_2951
	word32 s9_2957
	word32 a1_2944
	word32 s8_2956
	word32 s7_2955
	word32 s10_2958
	word32 t4_2960
	aos_cli_printf(ra, 0x230BF998<32>, out t1_2943, out a1_2944, out a2_2945, out a3_2946, out a4_2947, out a5_2948, out a7_2949, out s2_2950, out s3_2951, out s4_2952, out s5_2953, out s6_2954, out s7_2955, out s8_2956, out s9_2957, out s10_2958, out s11_2959, out t4_2960)
l2305ED6E:
	branch s2_1137 == 0<32> l2305ED80
l2305ED72:
	word32 t1_2892
	word32 a1_2893
	word32 s10_2907
	word32 s9_2906
	word32 s5_2902
	word32 s6_2903
	word32 a7_2898
	word32 s7_2904
	word32 s3_2900
	word32 a5_2897
	word32 s2_2899
	word32 s8_2905
	word32 a2_2894
	word32 a3_2895
	word32 a4_2896
	word32 s4_2901
	word32 s11_2908
	word32 t4_2909
	aos_cli_printf(ra, 0x230BF97C<32>, out t1_2892, out a1_2893, out a2_2894, out a3_2895, out a4_2896, out a5_2897, out a7_2898, out s2_2899, out s3_2900, out s4_2901, out s5_2902, out s6_2903, out s7_2904, out s8_2905, out s9_2906, out s10_2907, out s11_2908, out t4_2909)
l2305ED80:
	word32 s5_2920
	word32 s7_2922
	word32 s6_2921
	word32 a5_2915
	word32 t1_2910
	word32 a1_2911
	word32 a3_2913
	word32 s2_2917
	word32 a7_2916
	word32 s3_2918
	word32 t4_2927
	word32 a4_2914
	word32 s4_2919
	word32 s10_2925
	word32 a2_2912
	word32 s9_2924
	word32 s8_2923
	word32 s11_2926
	aos_cli_printf(ra, 0x230C6900<32>, out t1_2910, out a1_2911, out a2_2912, out a3_2913, out a4_2914, out a5_2915, out a7_2916, out s2_2917, out s3_2918, out s4_2919, out s5_2920, out s6_2921, out s7_2922, out s8_2923, out s9_2924, out s10_2925, out s11_2926, out t4_2927)
	Mem1248[0x42017458<32>:byte] = 0<8>
	Mem1251[0x4200F4F5<32>:byte] = 0<8>
	a0_1252 = 0x230BF950<32>
l2305E7C4:
	word32 s7_2938
	word32 t1_2928
	word32 a3_2931
	word32 a2_2930
	word32 a1_2929
	word32 a4_2932
	word32 a7_2934
	word32 s5_2937
	word32 s3_2935
	word32 s4_2936
	word32 a5_2933
	word32 t4_2942
	word32 s11_2941
	word32 s9_2940
	word32 s8_2939
	aos_cli_printf(ra, a0_1252, out t1_2928, out a1_2929, out a2_2930, out a3_2931, out a4_2932, out a5_2933, out a7_2934, out s2, out s3_2935, out s4_2936, out s5_2937, out s6_110, out s7_2938, out s8_2939, out s9_2940, out s10, out s11_2941, out t4_2942)
l2305EBEC:
	s1Out = dwLoc64
	a0Out = a0
	s2Out = s2
	s6Out = s6_110
	s10Out = s10
	mstatusOut = mstatus
	return dwLoc24
cli_main_input_exit:


void console_cb_read(word32 ra, word32 a0, word32 a3, word32 a4, word32 s6, word32 s10, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArg2C, word32 dwArg34, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg98, word32 dwArg9C, word32 dwArgB8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
console_cb_read_entry:
l2305EE6C:
	word32 a0_13
	word32 s0_17
	word32 a1_152
	word32 ra_21 = aos_read(ra, a0, fp + 0xFFFFFFE0<32>, a4, dwLoc20, dwArg24, out s0_17, out a0_13, out a1_152)
	branch a0_13 <= 0<32> l2305EE96
l2305EE80:
	branch a0_13 > 0x10<32> l2305EE9E
l2305EE9E:
	word32 s1_153
	word32 a0_154
	word32 a1_155
	word32 a2_156
	word32 a3_157
	word32 a4_158
	word32 a5_159
	word32 a7_160
	word32 s2_161
	word32 s3_162
	word32 s4_163
	word32 s5_164
	word32 s6_165
	word32 s7_166
	word32 s8_167
	word32 s9_168
	word32 s10_169
	word32 s11_170
	word32 t4_171
	printf(ra_21, 0x230BF9A8<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_153, out a0_154, out a1_155, out a2_156, out a3_157, out a4_158, out a5_159, out a7_160, out s2_161, out s3_162, out s4_163, out s5_164, out s6_165, out s7_166, out s8_167, out s9_168, out s10_169, out s11_170, out t4_171)
l2305EE88:
	Mem51[0x4200F4F8<32>:word32] = s0_17
	word32 s1_172
	word32 a0_173
	word32 s2_174
	word32 s6_175
	word32 s10_176
	word32 mstatus_177
	cli_main_input(ra_21, s0_17, fp + 0xFFFFFFE0<32>, 0x4200F000<32>, s6, s10, mstatus, dwLoc20, dwLoc1C, dwLoc04, dwArg08, dwArg2C, dwArg34, dwArg54, dwArg78, dwArg98, dwArgB8, out s1_172, out a0_173, out s2_174, out s6_175, out s10_176, out mstatus_177)
l2305EE96:
	return
console_cb_read_exit:


word32 aos_cli_input_direct(word32 ra, word32 s0, word32 a0, word32 a5, word32 s6, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg1C, word32 dwArg28, word32 dwArg4C, word32 dwArg54, word32 dwArg74, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      app_delayed_action_bleadv
//      app_delayed_action_bleadvstop
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 mstatus ra s1 s10 s2 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aos_cli_input_direct_entry:
l2305EEAC:
l2305EEAC_thunk_cli_main_input:
	word32 a0_11
	word32 s1_21
	word32 s10_22
	word32 s2_24
	word32 s6_27
	word32 mstatus_36
	word32 ra_19 = cli_main_input(ra, s0, a0, a5, s6, s10, mstatus, dwArg00, dwArg04, dwArg1C, dwArg28, dwArg4C, dwArg54, dwArg74, dwArg98, dwArgB8, dwArgD8, out s1_21, out a0_11, out s2_24, out s6_27, out s10_22, out mstatus_36)
	s1Out = s1_21
	a0Out = a0_11
	s2Out = s2_24
	s6Out = s6_27
	s10Out = s10_22
	mstatusOut = mstatus_36
	return ra_19
aos_cli_input_direct_exit:


void get_dns_request(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 s5, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..15] mstatus:[0..31] ra:[0..31] s4:[0..31] s5:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
get_dns_request_entry:
	uint16 wLoc4C = SLICE(dwLoc4C, uint16, 0)
l2305EEB0:
	Mem22[a0 + 264<i32>:word32] = a1
	Mem24[a0 + 268<i32>:word32] = a3
	Mem26[a0 + 272<i32>:word16] = SLICE(a4, word16, 0)
	word32 a4_101 = CONVERT(Mem26[a2 + 8<i32>:uint16], uint16, word32)
	word32 s1_117 = a2
	branch a4_101 <=u 0xB<32> l2305EF4E
l2305EEDC:
	word32 s1_43
	word32 s8_759
	word32 a3_753
	word32 a5_755
	word32 a4_754
	word32 s2_756
	word32 s4_758
	word32 s3_757
	word32 a0_750
	word32 a2_752
	word32 a1_751
	word32 s0_39 = pbuf_copy_partial(a2, fp + -76<i32>, 0xC<32>, 0<32>, out s1_43, out a0_750, out a1_751, out a2_752, out a3_753, out a4_754, out a5_755, out s2_756, out s3_757, out s4_758, out s8_759)
	word32 a5_760
	Mem59[s0_39 + 256<i32>:word16] = SLICE(lwip_htons(CONVERT(wLoc4C, uint16, word32), out a5_760), word16, 0)
	word32 a5_761
	Mem63[s0_39 + 258<i32>:word16] = SLICE(lwip_htons(CONVERT(wLoc48, uint16, word32), out a5_761), word16, 0)
	word32 a2_64 = CONVERT(Mem63[s1_43 + 8<i32>:uint16], uint16, word32)
	branch a2_64 <=u 255<i32> l2305EF10
l2305EF0C:
	a2_64 = 255<i32>
l2305EF10:
	word32 a4_765
	word32 s2_767
	word32 a5_766
	word32 s3_768
	word32 s8_769
	word32 a0_762
	word32 a2_764
	word32 a1_763
	word32 s0_80 = pbuf_copy_partial(s1_43, s0_39, CONVERT(SLICE(a2_64, word16, 0), word16, word32), 0xC<32>, out s1_117, out a0_762, out a1_763, out a2_764, out a3, out a4_765, out a5_766, out s2_767, out s3_768, out s4, out s8_769)
	word32 a5_102
	branch utils_dns_domain_get(s0_80, s0_80, fp + -80<i32>, out a4_101, out a5_102) != 0<32> l2305EF4E
l2305EF2C:
	0<32> = dwArg94
	branch a5_102 <= 0<32> l2305EF46
l2305EF32:
	a5_102 = a5_102 + 0xFFFFFFFF<32>
	a3 = CONVERT(Mem76[s0_80 + (a5_102 + 0xFFFFFFFF<32>):byte], byte, word32)
	a4_101 = 46<i32>
	branch a3 != 46<i32> l2305EF46
l2305EF44:
l2305EF46:
	0<32> = dwArg94
	Mem116[a5_102 + s0_80:byte] = 0<8>
l2305EF4E:
	word32 s0_137
	word32 a3_141
	word32 a4_142
	word32 s1_144
	word32 mstatus_158
	word32 a0_163
	word32 s0_168
	word32 mstatus_179
	word32 s5_747
	word32 s8_749
	word32 s6_748
	word32 s2_744
	word32 s4_746
	word32 s3_745
	word32 a4_741
	word32 a7_743
	word32 a5_742
	word32 s1_737
	word32 a1_738
	word32 a3_740
	word32 a2_739
	word32 s5_734
	word32 s8_736
	word32 s6_735
	word32 s4_733
	word32 s3_732
	word32 s2_731
	word32 a7_730
	word32 a0_726
	word32 a1_727
	word32 a5_729
	word32 a2_728
	word32 ra_180 = pbuf_alloc(pbuf_free(ra, s1_117, a3, a4_101, s4, mstatus, dwArgD8, out s0_137, out s1_144, out a0_726, out a1_727, out a2_728, out a3_141, out a4_142, out a5_729, out a7_730, out s2_731, out s3_732, out s4_733, out s5_734, out s6_735, out s8_736, out mstatus_158), s0_137, s1_144, 182<i32>, 512<i32>, 640<i32>, a3_141, a4_142, mstatus_158, dwLoc4C, dwLoc0C, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_168, out s1_737, out a0_163, out a1_738, out a2_739, out a3_740, out a4_741, out a5_742, out a7_743, out s2_744, out s3_745, out s4_746, out s5_747, out s6_748, out s8_749, out mstatus_179)
	branch a0_163 == 0<32> l2305F0AE
l2305EF6A:
	word32 a0_771
	word32 a2_773
	word32 a1_772
	word32 a3_774
	word32 a5_776
	word32 a4_775
	word32 t1_770
	word32 ra_198 = memset(ra_180, fp + -64<i32>, 0<32>, 0xC<32>, out t1_770, out a0_771, out a1_772, out a2_773, out a3_774, out a4_775, out a5_776)
	word32 a5_777
	lwip_htons(CONVERT(Mem134[s0_168 + 256<i32>:uint16], uint16, word32), out a5_777)
	word32 a5_778
	lwip_htons(0x8000180<32>, out a5_778)
	word32 a5_779
	lwip_htons(1<32>, out a5_779)
	word32 a5_780
	lwip_htons(1<32>, out a5_780)
	word32 a5_781
	lwip_htons(0<32>, out a5_781)
	word32 a5_782
	lwip_htons(0<32>, out a5_782)
	word32 s8_786
	word32 a3_783
	word32 s4_785
	word32 a4_784
	word32 s3_245
	word32 s2_244
	word32 s1_235
	word32 s0_234 = pbuf_take(a0_163, fp + -64<i32>, 0xC<32>, out s1_235, out a3_783, out a4_784, out s2_244, out s3_245, out s4_785, out s8_786)
l2305EFCA:
	word32 s3_253 = s3_245 + 1<32>
	word32 s4_255 = 0<32>
	s3_256 = s3_253
l2305EFD0:
	word32 s3_256
	word32 a5_258 = CONVERT(Mem227[s3_256:byte], byte, word32)
	branch a5_258 != 46<i32> l2305F0C2
l2305F0C2:
	branch a5_258 == 0<32> l2305EFD8
l2305F0C6:
	s4_255 = s4_255 + 1<32> & 255<i32>
	s3_256 = s3_256 + 1<32>
l2305EFD8:
	pbuf_put_at(s0_234, s1_235, s2_244, s4_255)
	word32 s4_320
	word32 a4_788
	word32 a3_787
	word32 s2_789
	word32 s8_790
	s0_234 = pbuf_take_at(s1_235, s3_253, CONVERT(SLICE(s3_256 - s3_253, word16, 0), word16, word32), CONVERT(SLICE(s2_244 + 1<i32>, word16, 0), word16, word32), dwArgD8, out s1_235, out a3_787, out a4_788, out s2_789, out s3_245, out s4_320, out s8_790)
	s2_244 = CONVERT(SLICE((s4_320 >>u 0x10<u32>) + 1<i32>, word16, 0), word16, word32)
	branch CONVERT(Mem227[s3_245:byte], byte, word32) != 0<32> l2305EFCA
l2305F014:
	pbuf_put_at(s0_234, s1_235, s2_244, 0<32>)
	word32 a5_791
	lwip_htons(1<32>, out a5_791)
	word32 a5_792
	lwip_htons(1<32>, out a5_792)
	word32 a5_793
	lwip_htons(0xC00000C<32>, out a5_793)
	word32 a5_794
	lwip_htons(1<32>, out a5_794)
	word32 a5_795
	lwip_htons(1<32>, out a5_795)
	word32 a5_796
	lwip_htons(0<32>, out a5_796)
	word32 a3_797
	word32 a4_798
	word32 a5_799
	word32 a0_364 = lwip_htonl(0x3C0004<32>, out a3_797, out a4_798, out a5_799)
	word32 a4_801
	word32 a5_802
	word32 a3_800
	lwip_htonl(0xC0A8A901<32>, out a3_800, out a4_801, out a5_802)
	word32 s3_386
	word32 a3_389
	word32 a4_390
	word32 s1_392
	word32 s2_395
	word32 s4_401
	word32 s8_803
	word32 s0_385 = pbuf_take_at(s1_235, fp + -52<i32>, 0x14<32>, CONVERT(SLICE((s4_320 >>u 0x10<u32>) + 2<i32>, word16, 0), word16, word32), dwArgD8, out s1_392, out a3_389, out a4_390, out s2_395, out s3_386, out s4_401, out s8_803)
	word32 a1_822
	word32 a2_823
	word32 a0_821
	word32 a4_825
	word32 a5_826
	word32 a3_824
	word32 s2_828
	word32 s3_829
	word32 a7_827
	word32 s5_831
	word32 s6_832
	word32 s4_830
	word32 mstatus_834
	word32 s8_833
	word32 s1_417
	word32 mstatus_423
	word32 s4_427
	word32 a3_444
	word32 a4_445
	word32 mstatus_449
	word32 s1_452
	word32 s4_455
	word32 s9_818
	word32 s1_820
	word32 s0_819
	word32 a2_815
	word32 s5_817
	word32 s3_816
	word32 s8_812
	word32 a0_814
	word32 s0_813
	word32 s3_809
	word32 s6_811
	word32 s5_810
	word32 a5_807
	word32 s2_808
	word32 a2_804
	word32 a4_806
	word32 a3_805
	pbuf_free(udp_sendto(pbuf_realloc(ra_198, s0_385, s1_392, CONVERT(SLICE(s4_401 + 22<i32>, word16, 0), word16, word32), a3_389, a4_390, s2_395, s3_386, s4_401, mstatus_179, a0_364, s5, dwArg78, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArg0118, out s1_417, out a2_804, out a3_805, out a4_806, out a5_807, out s2_808, out s3_809, out s4_427, out s5_810, out s6_811, out s8_812, out mstatus_423), Mem379[s0_385 + 264<i32>:int32], s1_417, Mem379[s0_385 + 268<i32>:int32], CONVERT(Mem379[s0_385 + 272<i32>:uint16], uint16, word32), s4_427, mstatus_423, a0_364, dwLoc28, dwLoc08, dwArg28, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgD8, out s0_813, out s1_452, out a0_814, out a2_815, out a3_444, out a4_445, out s3_816, out s4_455, out s5_817, out s9_818, out mstatus_449), s1_452, a3_444, a4_445, s4_455, mstatus_449, dwArgD8, out s0_819, out s1_820, out a0_821, out a1_822, out a2_823, out a3_824, out a4_825, out a5_826, out a7_827, out s2_828, out s3_829, out s4_830, out s5_831, out s6_832, out s8_833, out mstatus_834)
l2305F0AE:
	return
get_dns_request_exit:


word32 dns_server_init(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArg0128, word32 dwArg0168, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateGlobalGuard_AP
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 t0 t1 t3 tp
// Preserved: s0 s2 s3 s4 s8 sp
dns_server_init_entry:
l2305F0D0:
	word32 a4_15
	word32 s1_17
	word32 a5_142
	word32 a3_141
	word32 ra_20 = udp_new(ra, s1, a3, a4, mstatus, out s1_17, out a3_141, out a4_15, out a5_142)
	branch a0 == 0<32> l2305F12C
l2305F12C:
	a4Out = a4_15
	return ra_20
l2305F0DE:
	word32 s0_31 = a0
	word32 a4_33
	word32 a5_35
	word32 a3_34
	branch udp_bind(a0, 0x230CBADC<32>, 53<i32>, out a3_34, out a4_33, out a5_35) != 0<32> l2305F11E
l2305F0F2:
	word32 a0_40
	word32 s1_143
	word32 a1_144
	word32 a2_145
	word32 a4_146
	word32 a5_147
	word32 a6_148
	word32 s2_149
	word32 s3_150
	word32 s4_151
	word32 s8_152
	s0_31 = pvPortMalloc(ra_20, s1_17, 276<i32>, a3_34, a4_33, a5_35, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_143, out a0_40, out a1_144, out a2_145, out a3_34, out a4_146, out a5_147, out a6_148, out s2_149, out s3_150, out s4_151, out s8_152)
	branch a0_40 == 0<32> l2305F11E
l2305F11E:
l2305F128_thunk_udp_remove:
	word32 a4_70
	word32 a0_159
	word32 a2_160
	word32 a3_161
	word32 a5_162
	udp_remove(s0_31, a3_34, mstatus, out a0_159, out a2_160, out a3_161, out a4_70, out a5_162)
	a4Out = a4_70
	return ra_20
l2305F0FE:
	word32 a4_80
	word32 t1_153
	word32 a0_154
	word32 a1_155
	word32 a2_156
	word32 a3_157
	word32 a5_158
	word32 ra_82 = memset(ra_20, a0_40, 0<32>, 4<32>, out t1_153, out a0_154, out a1_155, out a2_156, out a3_157, out a4_80, out a5_158)
l2305F11A_thunk_udp_recv:
	udp_recv(s0_31, 0x2305EEB0<32>, a0_40)
	a4Out = a4_80
	return ra_82
dns_server_init_exit:


word32 easyflash_init(word32 ra, word32 s0, word32 s1, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: ra s10
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
easyflash_init_entry:
l2305F136:
	word32 a0_83
	word32 a0_19
	word32 a1_20
	word32 a3_22
	word32 ra_27 = ef_port_init(ra, s0, a3, a4, a5, s2, s3, mstatus, dwLoc10, dwLoc0C, dwArg18, dwArg20, dwArg24, dwArg3C, dwArg48, dwArg64, ra, dwArg78, dwArgB8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out a0_19, out a1_20, out a3_22)
	branch a0_19 != 0<32> l2305F184
l2305F150:
	word32 a0_52
	ra_27 = ef_env_init(ra_27, a0_19, a1_20, mstatus, 0<32>, dwLoc08, dwLoc04, dwArg08, dwArg18, dwArg38, dwArg40, dwArg44, dwArg48, dwArg58, s1, dwArg88, dwArg8C, dwArg98, dwArgD8, out a0_52, out a3_22)
	branch a0_52 != 0<32> l2305F184
l2305F184:
	a0_83 = 0x230BFFF4<32>
l2305F15C:
	a0_83 = 0x230BFFCC<32>
l2305F168:
	word32 a3_99
	word32 s10_129
	word32 a5_219
	word32 s2_220
	word32 a2_217
	word32 a4_218
	word32 a0_215
	word32 a1_216
	word32 s1_214
	word32 s3_221
	word32 s4_222
	word32 s5_223
	word32 s6_224
	word32 s7_225
	word32 s9_226
	word32 s10_227
	word32 s11_228
	word32 s1_229
	word32 a0_230
	word32 a1_231
	word32 a2_232
	word32 a3_233
	word32 a4_234
	word32 a5_235
	word32 s2_236
	word32 s3_237
	word32 s4_238
	word32 s5_239
	word32 s6_240
	word32 s7_241
	word32 s9_242
	word32 s11_243
	word32 ra_127 = ef_log_info(ef_log_info(ra_27, a0_83, a3_22, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_214, out a0_215, out a1_216, out a2_217, out a3_99, out a4_218, out a5_219, out s2_220, out s3_221, out s4_222, out s5_223, out s6_224, out s7_225, out s9_226, out s10_227, out s11_228), 0x230C0018<32>, a3_99, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_229, out a0_230, out a1_231, out a2_232, out a3_233, out a4_234, out a5_235, out s2_236, out s3_237, out s4_238, out s5_239, out s6_240, out s7_241, out s9_242, out s10_129, out s11_243)
	s10Out = s10_129
	return ra_127
easyflash_init_exit:


word32 get_status(word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_env
//      read_sector_meta_data
//      del_env
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a3 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
get_status_entry:
l2305F192:
	word32 a1_13 = a1 + 0xFFFFFFFF<32>
l2305F196:
	word32 a5_7 = a1_13 + -1<i32>
	branch a5_7 != 0xFFFFFFFF<32> l2305F1A2
l2305F1A2:
	a3 = CONVERT(Mem0[a0 + a5_7:byte], byte, word32)
	branch a3 == 0<32> l2305F19E
l2305F1AC:
	a1_13 = a5_7
l2305F19E:
	a1Out = a1_13
	a3Out = a3
	a5Out = a5_7
	return a1_13
get_status_exit:


word32 update_sector_cache(word32 a0, word32 a1, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      update_sec_status
//      format_sector.constprop.16
//      read_sector_meta_data
//      move_env
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
update_sector_cache_entry:
l2305F1B0:
	word32 a2_13 = 0x42017588<32>
	word32 a3_30 = 4<32>
	word32 a4_22 = 0<32>
	word32 a5_44 = 0x42017588<32>
l2305F1C8:
	word32 a7_15 = Mem0[a2_13:int32]
	branch a0 >=u a1 l2305F1FE
l2305F1D0:
	branch a1 >=u a0 + 0x1000000<32> l2305F1FE
l2305F1FE:
	branch a0 != a7_15 l2305F1EA
l2305F202:
	word32 a4_23 = a4_22 << 3<i32>
	Mem28[0xFFFFFFFF<32>:word32] = a4_23 + 0x42017588<32>
	a4Out = 0xFFFFFFFF<32>
	a5Out = a4_23 + 0x42017588<32>
	return a3_30
l2305F1D4:
	branch a0 != a7_15 l2305F1E0
l2305F1E0:
	branch a7_15 != 0xFFFFFFFF<32> l2305F1EA
l2305F1E4:
	branch a3_30 != 4<32> l2305F1EA
l2305F1E8:
	a3_30 = a4_22
l2305F1EA:
	a4_22 = a4_22 + 1<32>
	a2_13 = a2_13 + 8<32>
	branch a4_22 != 4<32> l2305F1C8
l2305F1F2:
	branch a3_30 == a4_22 l2305F1DE
l2305F1F6:
	a3_30 = a3_30 << 3<i32>
	Mem46[a0:word32] = a3_30 + 0x42017588<32>
	a5_44 = a3_30 + 0x42017588<32>
l2305F1D8:
	a4_22 = a4_22 << 3<i32>
	a5_44 = a4_22 + 0x42017588<32>
l2305F1DC:
	Mem53[a1 + 4<i32>:word32] = a5_44
l2305F1DE:
	a4Out = a4_22
	a5Out = a5_44
	return a3_30
update_sector_cache_exit:


word32 get_next_sector_addr(word32 a5, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sector_iterator
//      env_iterator
// MayUse:  a5:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
get_next_sector_addr_entry:
l2305F20C:
	word32 a0_15
	word32 a0_5 = Mem0[a5 + 4<i32>:word32]
	word32 a4_18 = Mem0[0x4200F504<32>:int32]
	branch a5 == 0xFFFFFFFF<32> l2305F236
l2305F236:
	a0_15 = a4_18
l2305F21C:
	word32 a0_11
	word32 a0_10 = Mem0[a0_5 + 12<i32>:word32]
	branch a0_10 != 0xFFFFFFFF<32> l2305F232
l2305F232:
	a0_11 = a0_10 << 12<i32>
l2305F222:
	a0_11 = 0x1000000<32>
l2305F224:
	a0_15 = a0_11 + a5
	a5 = 0x8000000<32>
	a4_18 = a4_18 + 0x8000000<32>
	branch a0_15 <u a4_18 + 0x8000000<32> l2305F238
l2305F238:
	a3Out = <invalid>
	a4Out = a4_18
	a5Out = a5
	return a0_15
l2305F22E:
	a3Out = <invalid>
	a4Out = a4_18 + 0x8000000<32>
	a5Out = 0x8000000<32>
	return 0xFFFFFFFF<32>
get_next_sector_addr_exit:


void gc_check_cb(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
gc_check_cb_entry:
l2305F23A:
	word32 a5_5 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_5 == 0<32> l2305F246
l2305F240:
	Mem8[a5_5 + 1<32>:word32] = Mem0[a5_5:word32]
l2305F246:
	return
gc_check_cb_exit:


word32 update_env_cache(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      find_env
//      del_env
//      move_env
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: s0 sp
update_env_cache_entry:
l2305F24A:
	word32 a4_146
	word32 a5_147
	word32 a2_145
	word32 a0_15 = ef_calc_crc32(0<32>, a0, a1, out a2_145, out a4_146, out a5_147)
	word32 a2_23 = 0x420174F0<32>
	word32 a7_101 = 0xFFFFFFF<32>
	word32 a6_25 = 0x10<32>
	word32 a1_119 = 0x10<32>
	word32 a3_122 = 0<32>
	word32 a5_129 = 0x420174F0<32>
l2305F278:
	word32 a4_125 = CONVERT(Mem32[a2_23:uint16], uint16, word32)
	branch a2 == 0xFFFFFFFF<32> l2305F2D0
l2305F2D0:
	branch a4_125 != a0_15 >>u 16<i32> l2305F2B8
l2305F2D4:
	a3_122 = a3_122 << 3<i32>
	Mem41[a2 + 4<i32>:word32] = a3_122 + 0x420174F0<32>
	a5_129 = a3_122 + 0x420174F0<32>
l2305F280:
	branch a4_125 != a0_15 >>u 16<i32> l2305F292
l2305F292:
	a2_23 = Mem32[a4_125 + 4<i32>:word32]
	branch a4_125 != 0xFFFFFFFF<32> l2305F2A0
l2305F2A0:
	word32 a4_43 = CONVERT(Mem32[a2_23 + 2<i32>:uint16], uint16, word32)
	branch a4_43 == 0<32> l2305F2AC
l2305F2A6:
	Mem45[a2_23 + 2<i32>:word16] = SLICE(a4_43 + 0xFFFFFFFF<32>, word16, 0)
l2305F2AC:
	a4_125 = CONVERT(Mem47[a2_23 + 2<i32>:uint16], uint16, word32)
	branch a4_125 >=u a7_101 l2305F2B8
l2305F2B4:
	a7_101 = a4_125
	a6_25 = a3_122
l2305F298:
	branch a1_119 != 0x10<32> l2305F2B8
l2305F29C:
	a1_119 = a3_122
l2305F2B8:
	a3_122 = a3_122 + 1<32>
	a2_23 = a2_23 + 8<32>
	branch a3_122 != 0x10<32> l2305F278
l2305F2C0:
	branch a1_119 == a3_122 l2305F2E0
l2305F2E0:
	branch a6_25 == a1_119 l2305F28A
l2305F2E4:
	a5_129 = (a6_25 << 3<i32>) + 0x420174F0<32>
l2305F2C4:
	a1_119 = a1_119 << 3<i32>
	a5_129 = a1_119 + 0x420174F0<32>
l2305F2C8:
	Mem78[a2 + 4<i32>:word32] = a5_129
	Mem82[a5_129:word16] = SLICE(a0_15 >>u 16<i32>, word16, 0)
l2305F2DA:
	Mem84[a5_129 + 2<i32>:word16] = 0<16>
l2305F284:
	a3_122 = a3_122 << 3<i32>
	Mem87[a2 + 4<i32>:word32] = a3_122 + 0x420174F0<32>
	a5_129 = a3_122 + 0x420174F0<32>
l2305F28A:
	a3Out = a3_122
	a4Out = a4_125
	a5Out = a5_129
	return a1_119
update_env_cache_exit:


void find_env_cb(word32 a0, word32 a1, word32 a2, word32 dwArg44)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0044:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t1 t3
// Preserved: sp
find_env_cb_entry:
l2305F2EA:
	word32 a1_23
	word32 a4_95
	word32 a5_96
	word32 a2_93
	word32 a3_94
	branch dwArg44 == strlen(a1, out a1_23, out a2_93, out a3_94, out a4_95, out a5_96) l2305F31A
l2305F31A:
	branch CONVERT(Mem18[a0 + 1<i32>:byte], byte, word32) == 0<32> l2305F30A
l2305F320:
	branch CONVERT(Mem18[a0:byte], byte, word32) != 2<32> l2305F30A
l2305F32A:
	word32 a3_97
	word32 a4_98
	word32 a5_99
	branch strncmp(a0 + 16<i32>, a1_23, dwArg44, out a3_97, out a4_98, out a5_99) != 0<32> l2305F30A
l2305F334:
	Mem42[a2:byte] = 1<8>
l2305F30A:
l2305F30C:
	return
find_env_cb_exit:


void sector_statistics_cb(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
sector_statistics_cb_entry:
l2305F33C:
	branch CONVERT(Mem0[a0:byte], byte, word32) == 0<32> l2305F352
l2305F342:
	word32 a5_6 = CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32)
	branch a5_6 != 1<32> l2305F356
l2305F356:
	branch a5_6 != 2<32> l2305F352
l2305F35C:
	Mem11[a5_6 + 1<32>:word32] = Mem0[a5_6:word32]
l2305F34C:
	Mem14[a5_6 + 1<32>:word32] = Mem0[a5_6:word32]
l2305F352:
	return
sector_statistics_cb_exit:


void alloc_env_cb(word32 a0, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
alloc_env_cb_entry:
l2305F364:
	branch CONVERT(Mem0[a0:byte], byte, word32) == 0<32> l2305F390
l2305F36A:
	word32 a0_7 = Mem0[a3 + 16<i32>:word32]
	branch a4 >=u a3 l2305F394
l2305F372:
	word32 a4_10 = CONVERT(Mem0[a0_7 + 2<i32>:byte], byte, word32)
	branch a4_10 == 1<32> l2305F38C
l2305F37C:
	branch a4_10 != 2<32> l2305F394
l2305F382:
	a4_10 = CONVERT(Mem0[0x4200F508<32>:byte], byte, word32)
	branch a4_10 != 0<32> l2305F394
l2305F394:
l2305F38C:
	Mem21[a4_10:word32] = a2
l2305F390:
	return
alloc_env_cb_exit:


word32 write_status(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg28, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_env
//      update_sec_status
//      del_env
//      move_env
//      check_and_recovery_env_cb
//      do_gc
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s10 s11 s2 s3 s4 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
write_status_entry:
l2305F398:
	branch a3 <u a2 l2305F3CE
l2305F3CE:
	branch a1 != 0<32> l2305F3FC
l2305F3FC:
	word32 a3_25
	word32 t1_171
	word32 a0_172
	word32 a1_173
	word32 a2_174
	word32 a4_175
	word32 a5_176
	word32 ra_28 = memset(ra, a1, 255<i32>, (a2 << 3<i32>) + 0xFFFFFFFF<32> >>u 3<i32>, out t1_171, out a0_172, out a1_173, out a2_174, out a3_25, out a4_175, out a5_176)
	word32 a1_34 = a1 + (a3_25 + 0xFFFFFFFF<32>)
	Mem35[a1_34:byte] = 0<8>
	word32 a0_38 = a0 + (a3_25 + 0xFFFFFFFF<32>)
l2305F42A_thunk_ef_port_write:
	word32 a0_42
	word32 a1_43
	word32 a3_45
	word32 a4_46
	word32 a5_47
	word32 s0_51
	word32 s1_52
	word32 s10_53
	word32 s11_54
	word32 s2_55
	word32 s3_56
	word32 s4_57
	word32 s6_59
	word32 s7_60
	word32 s5_187
	word32 ra_50 = ef_port_write(ra_28, a0, a0_38, a1_34, 1<32>, s2, dwArg00, dwArg04, dwArg28, dwArg4C, out s0_51, out s1_52, out a0_42, out a1_43, out a3_45, out a4_46, out a5_47, out s2_55, out s3_56, out s4_57, out s5_187, out s6_59, out s7_60, out s10_53, out s11_54)
	s0Out = s0_51
	s1Out = s1_52
	a0Out = a0_42
	a1Out = a1_43
	a3Out = a3_45
	a4Out = a4_46
	a5Out = a5_47
	s2Out = s2_55
	s3Out = s3_56
	s4Out = s4_57
	s6Out = s6_59
	s7Out = s7_60
	s10Out = s10_53
	s11Out = s11_54
	return ra_50
write_status_exit:
l2305F3D2:
	word32 s1_177
	word32 a0_178
	word32 a1_179
	word32 a3_180
	word32 a4_181
	word32 s2_182
	word32 s3_183
	word32 s4_184
	word32 s5_185
	word32 s6_186
	ef_log_debug(ra, 0x230C0664<32>, 0x230C06D0<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_177, out a0_178, out a1_179, out a3_180, out a4_181, out s2_182, out s3_183, out s4_184, out s5_185, out s6_186)
l2305F3FA:
l2305F3A4:
	word32 s1_161
	word32 a0_162
	word32 a1_163
	word32 a3_164
	word32 a4_165
	word32 s2_166
	word32 s3_167
	word32 s4_168
	word32 s5_169
	word32 s6_170
	ef_log_debug(ra, 0x230C0664<32>, 0x230C0648<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_161, out a0_162, out a1_163, out a3_164, out a4_165, out s2_166, out s3_167, out s4_168, out s5_169, out s6_170)
l2305F3CC:


word32 read_env(word32 ra, word32 a0, word32 s2, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg5C, word32 dwArg84, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_sector_meta_data
//      env_iterator
//      find_env
//      do_gc
// MayUse:  a0:[0..31] ra:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +005C:[0..31] Stack +0084:[0..31]
// LiveOut: a3 a4 a5 ra s0 s10 s11 s2 s3 s4 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
read_env_entry:
l2305F42E:
	word32 a5_104
	word32 a4_365
	word32 a1_363
	word32 a3_364
	word32 a0_362
	word32 ra_103 = ef_port_read(ra, Mem15[a0 + 80<i32>:word32], fp + -92<i32>, 0x1C<32>, out a0_362, out a1_363, out a3_364, out a4_365)
	word32 a3_32
	word32 a5_34
	word32 a1_366
	word32 a0_30 = get_status(fp + -92<i32>, 6<32>, out a1_366, out a3_32, out a5_34)
	Mem38[a0:byte] = SLICE(a0_30 & 255<i32>, byte, 0)
	Mem39[a5_34 + 8<i32>:word32] = a0
	word32 s0_17 = a0
	word32 a0_36 = a0_30 & 255<i32>
	word32 s2_191 = a5_34 + -20<i32>
	word32 a4_101 = 0x7FFFFEC<32>
	branch a5_34 <=u 0xF8000000<32> l2305F4B2
l2305F4B2:
	a5_104 = a5_34 + 0xFF000013<32>
	a4_101 = 0x7000012<32>
	branch a5_34 >u 0xF8000001<32> l2305F54C
l2305F54C:
	word32 s1_47 = 0<32>
	word32 s4_48 = 0<32>
l2305F516:
	branch s1_47 <u a5_34 + -20<i32> l2305F4EA
l2305F4EA:
	s3 = 32<i32>
	branch s1_47 + 32<i32> <u a5_34 + -20<i32> l2305F4FA
l2305F4F6:
	s3 = a5_34 + -20<i32> - s1_47
l2305F4FA:
	s0_17 = Mem39[a0_36 + 80<i32>:word32]
	word32 a0_392
	word32 a1_393
	word32 a3_394
	word32 a4_395
	ra_103 = ef_port_read(ra_103, a0_36 + 0x14<32> + s1_47, fp + -64<i32>, s3, out a0_392, out a1_393, out a3_394, out a4_395)
	word32 a2_396
	a0_36 = ef_calc_crc32(s4_48, fp + -64<i32>, s3, out a2_396, out a4_101, out a5_104)
	s4_48 = a0_36
	s1_47 = s1_47 + s3
l2305F51A:
	s4 = dwArg84
	branch a5_104 != dwArg84 l2305F49C
l2305F520:
	s0_17 = Mem39[s1_47 + 80<i32>:word32]
	Mem94[s0_17 + 1<i32>:byte] = 1<8>
	word32 s1_93 = s1_47 + 0x1C<32>
	a5_104 = CONVERT(bLoc48, byte, word32)
	word32 a0_389
	word32 a1_390
	word32 a3_391
	ra_103 = ef_port_read(ra_103, s1_93, s0_17 + 16<i32>, CONVERT(bLoc48, byte, word32), out a0_389, out a1_390, out a3_391, out a4_101)
	Mem108[s1_93 + a5_104 + 84<i32>:word32] = s0_17
	Mem109[a4_101 + 12<i32>:word32] = s0_17
	Mem110[s0_17 + 2<i32>:byte] = SLICE(a5_104, byte, 0)
l2305F4C0:
	word32 s1_379
	word32 a0_380
	word32 a1_381
	word32 a3_382
	word32 a4_383
	word32 s2_384
	word32 s3_385
	word32 s4_386
	word32 s5_387
	word32 s6_388
	ef_log_debug(ra_103, 0x230C0664<32>, 0x230AA38C<32>, dwLoc58, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_379, out a0_380, out a1_381, out a3_382, out a4_383, out s2_384, out s3_385, out s4_386, out s5_387, out s6_388)
l2305F4E8:
l2305F468:
	Mem143[0x24<32>:word32] = a0
	a5_104 = 5<32>
	branch (a0_30 & 255<i32>) == 5<32> l2305F49C
l2305F472:
	Mem151[Mem143[a3_32 + 80<i32>:word32]:byte] = 5<8>
	word32 a1_368
	word32 a0_152
	word32 s2_163
	word32 s1_367
	word32 a3_369
	word32 a4_370
	word32 s4_372
	word32 s3_371
	word32 s5_373
	word32 s6_374
	word32 s1_375
	word32 a0_376
	word32 a1_377
	word32 a3_378
	ra_103 = write_status(ef_log_debug(ra_103, 0x230C05E8<32>, a3_32, dwLoc58, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_367, out a0_152, out a1_368, out a3_369, out a4_370, out s2_163, out s3_371, out s4_372, out s5_373, out s6_374), a0_152, fp + -92<i32>, 6<32>, 5<32>, s2_163, dwLoc60, dwLoc5C, dwLoc58, s2, dwLoc14, dwLoc10, dwLoc0C, dwArg18, dwArg3C, out s0_17, out s1_375, out a0_376, out a1_377, out a3_378, out a4_101, out a5_104, out s2_191, out s3, out s4, out s6, out s7, out s10, out s11)
l2305F49C:
	Mem207[s0_17 + 1<i32>:byte] = 0<8>
l2305F4A2:
	s0Out = s0_17
	a3Out = dwArg08
	a4Out = a4_101
	a5Out = a5_104
	s2Out = s2_191
	s3Out = s3
	s4Out = s4
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	return ra_103
read_env_exit:


word32 update_sec_status(word32 ra, word32 a0, word32 a1, word32 a2, word32 s2, word32 dwArg08, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      move_env
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31]
// LiveOut: a0 a1 a3 a4 ra s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
update_sec_status_entry:
l2305F552:
	word32 s2_106
	word32 a4_13 = CONVERT(Mem11[a0 + 1<i32>:byte], byte, word32)
	branch a4_13 != 1<32> l2305F584
l2305F584:
	s2_106 = 0<32>
	branch a4_13 != 2<32> l2305F576
l2305F58C:
	word32 a0_18 = Mem11[0x12<32>:word32]
	a4_13 = 91<i32>
	s1 = a2
	branch true l2305F59E
l2305F598:
	branch 2<32> - a1 >u 91<i32> l2305F5C0
l2305F5C0:
	branch a2 == 0<32> l2305F576
l2305F5C2:
	Mem24[a2:byte] = 0<8>
l2305F59E:
	word32 a0_34
	word32 s0_197
	word32 a1_198
	word32 a3_199
	word32 a4_200
	word32 a5_201
	word32 s2_202
	word32 s4_203
	word32 s7_204
	word32 s10_205
	word32 s11_206
	ra = write_status(ra, a0_18, fp + 0xFFFFFFEC<32>, 4<32>, 3<32>, 0<32>, dwLoc20, dwLoc1C, s2, dwArg08, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg7C, out s0_197, out s1, out a0_34, out a1_198, out a3_199, out a4_200, out a5_201, out s2_202, out s3, out s4_203, out s6, out s7_204, out s10_205, out s11_206)
	s2_106 = a0_34
	a1 = a0_34 + 0x1000000<32>
	word32 a5_207
	a3 = update_sector_cache(a0_34, a0_34 + 0x1000000<32>, out a4_13, out a5_207)
	branch s1 == 0<32> l2305F576
l2305F5B8:
	Mem74[s1:byte] = 1<8>
l2305F568:
	word32 a0_79
	word32 s0_190
	word32 a5_191
	word32 s2_192
	word32 s4_193
	word32 s7_194
	word32 s10_195
	word32 s11_196
	ra = write_status(ra, Mem11[a0 + 4<i32>:word32], fp + 0xFFFFFFEC<32>, 4<32>, 2<32>, s2, dwLoc20, dwLoc1C, s2, dwArg08, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg7C, out s0_190, out s1, out a0_79, out a1, out a3, out a4_13, out a5_191, out s2_192, out s3, out s4_193, out s6, out s7_194, out s10_195, out s11_196)
	s2_106 = a0_79
l2305F576:
	s1Out = s1
	a0Out = s2_106
	a1Out = a1
	a3Out = a3
	a4Out = a4_13
	s2Out = s2_106
	s3Out = s3
	s6Out = s6
	return ra
update_sec_status_exit:


word32 format_sector.constprop.16(word32 ra, word32 a0, word32 s2, word32 dwArg1C, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg58, word32 dwArg68, word32 dwArg7C, word32 dwArg8C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      check_sec_hdr_cb
//      do_gc
//      ef_env_set_default
// MayUse:  a0:[0..31] ra:[0..31] s2:[0..31] Stack +001C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +008C:[0..31]
// LiveOut: a0 a1 a3 a4 ra s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
format_sector.constprop.16_entry:
l2305F5C8:
	branch a0 << 0x14<u32> == 0<32> l2305F600
l2305F600:
	word32 a0_14
	word32 a1_15
	word32 a4_102
	word32 ra_184 = ef_port_erase(ra, a0, 0x1000000<32>, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out a0_14, out a1_15, out a4_102)
	word32 s1_112 = a0_14
	branch a0_14 != 0<32> l2305F660
l2305F60C:
	word32 a0_69
	word32 s0_78
	word32 t1_235
	word32 a0_236
	word32 a1_237
	word32 a2_238
	word32 a3_239
	word32 a4_240
	word32 a5_241
	word32 t1_242
	word32 a0_243
	word32 a1_244
	word32 a2_245
	word32 a3_246
	word32 a4_247
	word32 a5_248
	word32 t1_249
	word32 a0_250
	word32 a1_251
	word32 a2_252
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 s1_256
	word32 a1_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	word32 s6_261
	word32 s7_262
	word32 s10_263
	word32 s11_264
	ra_184 = ef_port_write(memset(memset(memset(ra_184, fp + -36<i32>, 255<i32>, 0x14<32>, out t1_235, out a0_236, out a1_237, out a2_238, out a3_239, out a4_240, out a5_241), fp + -36<i32>, 255<i32>, 3<32>, out t1_242, out a0_243, out a1_244, out a2_245, out a3_246, out a4_247, out a5_248), fp + -33<i32>, 255<i32>, 3<32>, out t1_249, out a0_250, out a1_251, out a2_252, out a3_253, out a4_254, out a5_255), a0_14, a0, fp + -36<i32>, 0x14<32>, s2, dwLoc30, dwLoc2C, dwLoc08, dwArg1C, out s0_78, out s1_256, out a0_69, out a1_257, out a3_258, out a4_259, out a5_260, out s2, out s3, out s4, out s5, out s6_261, out s7_262, out s10_263, out s11_264)
	s1_112 = a0_69
	a1_15 = s0_78 + 0x1000000<32>
	word32 a5_265
	a3 = update_sector_cache(s0_78, s0_78 + 0x1000000<32>, out a4_102, out a5_265)
l2305F660:
	s1Out = s1_112
	a0Out = s1_112
	a1Out = a1_15
	a3Out = a3
	a4Out = a4_102
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return ra_184
format_sector.constprop.16_exit:
l2305F5D6:
	word32 s1_225
	word32 a0_226
	word32 a1_227
	word32 a3_228
	word32 a4_229
	word32 s2_230
	word32 s3_231
	word32 s4_232
	word32 s5_233
	word32 s6_234
	ef_log_debug(ra, 0x230C0664<32>, 0x230C04F8<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_225, out a0_226, out a1_227, out a3_228, out a4_229, out s2_230, out s3_231, out s4_232, out s5_233, out s6_234)
l2305F5FE:


void check_sec_hdr_cb(word32 ra, word32 a0, word32 a3, word32 dwArg0C, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg48, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg6C, word32 dwArg7C, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
check_sec_hdr_cb_entry:
l2305F66C:
	branch CONVERT(Mem0[a0:byte], byte, word32) != 0<32> l2305F6A4
l2305F6A4:
	return
l2305F672:
	word32 a0_21
	word32 a5_26
	word32 s2_32
	word32 s1_150
	word32 a1_151
	word32 a2_152
	word32 a3_153
	word32 a4_154
	word32 s3_155
	word32 s4_156
	word32 s5_157
	word32 s6_158
	word32 s7_159
	word32 s9_160
	word32 s10_161
	word32 s11_162
	word32 ra_28 = ef_log_info(ra, 0x230C01B4<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_150, out a0_21, out a1_151, out a2_152, out a3_153, out a4_154, out a5_26, out s2_32, out s3_155, out s4_156, out s5_157, out s6_158, out s7_159, out s9_160, out s10_161, out s11_162)
	Mem45[a5_26 + 1<32>:word32] = Mem13[a5_26:word32]
	word32 s1_163
	word32 a0_164
	word32 a1_165
	word32 a3_166
	word32 a4_167
	word32 s2_168
	word32 s3_169
	word32 s4_170
	word32 s5_171
	format_sector.constprop.16(ra_28, a0_21, s2_32, dwArg0C, dwArg20, dwArg24, dwArg30, dwArg34, dwArg48, dwArg58, dwArg6C, dwArg7C, out s1_163, out a0_164, out a1_165, out a3_166, out a4_167, out s2_168, out s3_169, out s4_170, out s5_171)
	return
check_sec_hdr_cb_exit:


void print_env_cb(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 s5, word32 dwArg20, word32 dwArg24, word32 dwArg6C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s5:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +006C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
print_env_cb_entry:
l2305F6A8:
	branch CONVERT(Mem21[a0 + 1<i32>:byte], byte, word32) == 0<32> l2305F77C
l2305F6C4:
	word32 a0_25 = Mem21[a4 + 8<i32>:word32]
	Mem29[a5 + a4:word32] = Mem21[a5:word32]
	branch CONVERT(Mem29[a0_25:byte], byte, word32) != 2<32> l2305F77C
l2305F6D6:
	word32 a4_42
	word32 s7_414
	word32 s6_413
	word32 s2_411
	word32 s3_412
	word32 a5_410
	word32 a1_409
	word32 s1_408
	word32 s4_161
	word32 a3_117
	word32 a0_148
	word32 ra_115 = ef_print(ra, 0x230C05C8<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_408, out a0_148, out a1_409, out a3_117, out a4_42, out a5_410, out s2_411, out s3_412, out s4_161, out s6_413, out s7_414)
	word32 a5_142 = 0xFFFF8B<32>
	branch a4_42 >u 0xFFFF8B<32> l2305F760
l2305F6F8:
	word32 s3_160 = 2<32>
	word32 s5_180 = 0<32>
	word32 s6_163 = 94<i32>
	word32 s7_146 = 0x230BF000<32>
l2305F704:
	word32 s1_156 = 0<32>
l2305F706:
	branch s1_156 <u a5_142 l2305F718
l2305F718:
	word32 s2_159 = 32<i32>
	branch s1_156 + 32<i32> <u a5_142 l2305F728
l2305F724:
	s2_159 = a5_142 - s1_156
l2305F728:
	word32 a1_436
	word32 a4_437
	ra_115 = ef_port_read(ra_115, a0_148 + s1_156, fp + -80<i32>, s2_159, out a0_148, out a1_436, out a3_117, out a4_437)
	a5_142 = 0<32>
	branch s5_180 == 0<32> l2305F75A
l2305F75A:
	branch s2_159 != a5_142 l2305F74A
l2305F74A:
	branch s6_163 <u CONVERT(Mem29[(fp + -80<i32>) + a5_142:byte], byte, word32) + 0xFFFFFFE0<32> l2305F760
l2305F760:
	word32 s6_423
	word32 s4_422
	word32 s3_421
	word32 a5_419
	word32 s2_420
	word32 a4_418
	word32 a1_417
	word32 s1_415
	word32 a0_416
	word32 s7_424
	ra_115 = ef_print(ra_115, 0x230C05D0<32>, a3_117, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_415, out a0_416, out a1_417, out a3_117, out a4_418, out a5_419, out s2_420, out s3_421, out s4_422, out s6_423, out s7_424)
l2305F758:
	a5_142 = a5_142 + 1<32>
l2305F75E:
l2305F73A:
	word32 a1_438
	word32 a4_439
	ra_115 = ef_print(ra_115, s7_146 + -612<i32>, a3_117, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_156, out a0_148, out a1_438, out a3_117, out a4_439, out a5_142, out s2_159, out s3_160, out s4_161, out s6_163, out s7_146)
	s5_180 = s5_162
l2305F746:
	s1_156 = s1_156 + s2_159
l2305F70C:
	a5_142 = 1<32>
	s5_180 = s4_161
	branch s3_160 == 1<32> l2305F770
l2305F770:
	word32 s4_433
	word32 s7_435
	word32 s1_425
	word32 a5_430
	word32 a3_428
	word32 s2_431
	word32 a0_426
	word32 s6_434
	word32 a4_429
	word32 s3_432
	word32 a1_427
	ef_print(ra_115, 0x230C6900<32>, a3_117, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_425, out a0_426, out a1_427, out a3_428, out a4_429, out a5_430, out s2_431, out s3_432, out s4_433, out s6_434, out s7_435)
l2305F77C:
	return
print_env_cb_exit:
l2305F714:
	s3_160 = 1<32>


word32 get_next_env_addr(word32 ra, word32 a0, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_sector_meta_data
//      env_iterator
//      do_gc
// MayUse:  a0:[0..31] ra:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a5 ra s0 s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
get_next_env_addr_entry:
l2305F794:
	word32 a4_5 = CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32)
	branch a4_5 != 1<32> l2305F7A2
l2305F7A2:
	a1 = Mem0[a4_5 + 80<i32>:word32]
	word32 a0_9 = Mem0[5<32>:word32]
	branch a4_5 != 0xFFFFFFFF<32> l2305F7B2
l2305F7B2:
	branch a4_5 >u 0x1000001<32> l2305F79E
l2305F7BA:
	word32 s0_30 = a4_5 + 1<i32>
	branch CONVERT(Mem28[a1 + 1<i32>:byte], byte, word32) == 0<32> l2305F7DA
l2305F7D6:
	a1 = Mem28[a4_5 + 9<i32>:word32]
	s0_30 = a4_5 + 1<i32> + a4_5
l2305F7DA:
	word32 a2_41 = 0x42017588<32>
	word32 a1_298 = s0_30 & 0xFF000000<32>
	word32 a4_46 = 0<32>
l2305F7F8:
	word32 a0_105
	word32 s1_113
	branch a1_298 != Mem28[a2_41:int32] l2305F836
l2305F836:
	a4_46 = a4_46 + 1<32>
	a2_41 = a2_41 + 8<32>
	branch a4_46 != 4<32> l2305F7F8
l2305F83E:
l2305F800:
	s1_113 = s0_30
	branch s0_30 != Mem28[(a4_46 << 3<i32>) + 0x4201758C<32>:word32] l2305F840
l2305F840:
	s1_113 = s0_30
	s2 = 0xFFFFE5<32>
l2305F898:
	branch s1_113 <u 0xFFFFED<32> l2305F850
l2305F850:
	word32 a3_392
	word32 a0_391
	word32 a4_393
	ra = ef_port_read(ra, s1_113, fp + -64<i32>, 32<i32>, out a0_391, out a1_298, out a3_392, out a4_393)
	word32 a4_107 = fp + -64<i32>
	a0_105 = s1_113 + -8<i32>
	word32 a2_87 = s1_113 + 20<i32>
l2305F866:
	branch a0_105 == 0xFFFFE5<32> l2305F896
l2305F86A:
	branch (CONVERT(Mem28[a4_107 + 1<i32>:byte], byte, word32) << 8<i32>) + CONVERT(Mem28[a4_107:byte], byte, word32) + (CONVERT(Mem28[a4_107 + 2<i32>:byte], byte, word32) << 16<i32>) + (CONVERT(Mem28[a4_107 + 3<i32>:byte], byte, word32) << 24<i32>) != 0x3034564B<32> l2305F88E
l2305F88A:
	branch a0_105 >=u s0_30 l2305F80E
l2305F88E:
	a0_105 = a0_105 + 1<32>
	a4_107 = a4_107 + 1<32>
	branch a2_87 != a0_105 l2305F866
l2305F896:
	s1_113 = s1_113 + 0x1C<32>
l2305F89C:
l2305F80C:
	a0_105 = 0xFFFFFFFF<32>
l2305F80E:
	word32 a4_129 = Mem28[a0_9 + 4<i32>:int32]
	word32 a5_131 = a4_129 + 0x1000000<32>
	branch a4_129 + 0x1000000<32> <u a0_105 l2305F820
l2305F81A:
	a5_131 = Mem28[a1 + 8<i32>:int32]
	branch a5_131 != 0<32> l2305F822
l2305F820:
	a0_105 = 0xFFFFFFFF<32>
l2305F822:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_113
	a0Out = a0_105
	a1Out = a1_298
	a5Out = a5_131
	s2Out = s2
	s3Out = a0_9
	s5Out = a1
	return ra
l2305F7AC:
	s0Out = s0
	s1Out = s1
	a0Out = 0x15<32>
	a1Out = a1
	a5Out = 1<32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	return ra
l2305F79E:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFFF<32>
	a1Out = a1
	a5Out = 1<32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	return ra
get_next_env_addr_exit:


word32 read_sector_meta_data(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 dwArgD8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sector_iterator
//      env_iterator
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
read_sector_meta_data_entry:
l2305F89E:
	branch a0 << 0x14<u32> == 0<32> l2305F8E6
l2305F8E6:
	word32 a5_277
	word32 s1_173
	word32 a4_39
	word32 a0_698
	word32 a1_101
	word32 a3_275
	word32 ra_107 = ef_port_read(ra, a0, fp + -188<i32>, 0x14<32>, out a0_698, out a1_101, out a3_275, out a4_39)
	Mem44[a1 + 4<i32>:word32] = a0
	Mem45[a4_39 + 8<i32>:word32] = a1
	word32 s0_156 = a1
	word32 s4_198 = a2
	branch a4_39 == 0x30344645<32> l2305F92E
l2305F92E:
	Mem50[0x30344651<32>:word32] = a1
	Mem51[a1:byte] = 1<8>
	word32 a3_710
	word32 a5_711
	word32 a1_709
	word32 a0_53 = get_status(fp + -188<i32>, 4<32>, out a1_709, out a3_710, out a5_711)
	Mem59[a1 + 1<i32>:byte] = SLICE(a0_53 & 255<i32>, byte, 0)
	Mem67[a1 + 2<i32>:byte] = SLICE(get_status(fp + -185<i32>, 4<32>, out a1_101, out a3_275, out a5_277), byte, 0)
	s3 = 1<32>
	branch a2 != 0<32> l2305F95E
l2305F95E:
	Mem69[a1 + 16<i32>:word32] = 0<32>
	Mem70[a0 + 40<i32>:word32] = a1
	branch (a0_53 & 255<i32>) != 1<32> l2305F974
l2305F974:
	a5_277 = 2<32>
	branch (a0_53 & 255<i32>) != 2<32> l2305F95A
l2305F97A:
	word32 a5_74 = 0<32>
l2305F98A:
	a3_275 = Mem70[a1_101:word32]
	branch a0 != a1_101 l2305F9A6
l2305F9A6:
	a5_74 = a5_74 + 1<32>
	branch a5_74 != 4<32> l2305F98A
l2305F9AE:
	Mem88[0xFFFFFC<32>:word32] = a1
l2305F9BC:
	byte bLoc87_391 = SLICE(dwLoc88, byte, 8)
	byte bLoc88_392 = SLICE(dwLoc88, byte, 0)
	word32 s2_110
	word32 s1_728
	word32 s0_727
	word32 s3_729
	word32 s5_730
	word32 a5_105
	word32 a0_100
	ra_107 = get_next_env_addr(ra_107, s0_156, dwArgD8, out s0_727, out s1_728, out a0_100, out a1_101, out a5_105, out s2_110, out s3_729, out s5_730)
	branch a0_100 != s2_110 l2305F9CE
l2305F9CE:
	word32 a3_123
	word32 a4_124
	word32 s0_129
	word32 s3_132
	word32 s10_716
	word32 a5_712
	word32 s2_713
	word32 s6_715
	word32 s4_714
	word32 ra_128 = read_env(ra_107, fp + -136<i32>, s2_110, dwLocB0, dwLocAC, dwLocA8, dwLoc88, dwLoc84, s0, dwLoc3C, out s0_129, out a3_123, out a4_124, out a5_712, out s2_713, out s3_132, out s4_714, out s6_715, out s7, out s10_716, out s11)
	word32 a5_147 = CONVERT(bLoc87_391, byte, word32)
	branch a5_147 != 0<32> l2305FA40
l2305F9DA:
	word32 a5_148 = CONVERT(bLoc88_392, byte, word32)
	a5_147 = a5_148 & 251<i32>
	branch (a5_148 & 251<i32>) == s3_132 l2305FA40
l2305FA40:
	s0_156 = Mem118[a5_147 + 16<i32>:word32]
	Mem160[a4_124 + a3_123 + 20<i32>:word32] = s0_156
	Mem161[a5_147 - a3_123 + 16<i32>:word32] = s0_156
	ra_107 = dwLoc1C
l2305F9E6:
	word32 a4_719
	word32 s2_720
	word32 a3_718
	word32 a2_717
	word32 s9_725
	word32 s10_726
	word32 s6_724
	word32 s3_721
	word32 s4_722
	word32 s5_723
	ra_107 = ef_log_info(ra_128, 0x230C0618<32>, a3_123, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_173, out a0_100, out a1_101, out a2_717, out a3_718, out a4_719, out a5_105, out s2_720, out s3_721, out s4_722, out s5_723, out s6_724, out s7, out s9_725, out s10_726, out s11)
	Mem187[s0_129 + 16<i32>:word32] = 0<32>
l2305F9CA:
	s1_173 = 0<32>
l2305F9F8:
	word32 s2_192 = Mem190[Mem190[a5_105 + 4<i32>:word32] + 20<i32>:int32]
	s5 = a5_105 + 0x1000000<32>
	s3 = s2_192
	word32 s6_197 = 0<32>
	s4_198 = a5_105 + 0x1000020<32>
l2305FA12:
	branch s3 <u s5 l2305FA50
l2305FA50:
	s7 = s3 + 32<i32>
	word32 s8_203 = 32<i32>
	branch s7 <u s5 l2305FA60
l2305FA5C:
	s8_203 = s4_198 - s7
l2305FA60:
	word32 a3_732
	word32 a4_733
	ra_107 = ef_port_read(ra_107, s3, fp + -168<i32>, s8_203, out a0_100, out a1_101, out a3_732, out a4_733)
	word32 a5_222 = 0<32>
l2305FA6C:
	branch s8_203 != a5_222 l2305FA74
l2305FA74:
	word32 a4_229 = CONVERT(Mem190[fp + -168<i32> + a5_222:byte], byte, word32)
	branch s6_197 == 255<i32> l2305FA88
l2305FA80:
	branch a4_229 != 255<i32> l2305FA88
l2305FA84:
	s2_192 = s3 + a5_222
l2305FA88:
	a5_222 = a5_222 + 1<32>
	s6_197 = a4_229
l2305FA70:
	s3 = s7
l2305FA16:
	branch s6_197 == 255<i32> l2305FA20
l2305FA1E:
	s2_192 = s5
l2305FA20:
	word32 s0_254 = Mem190[a0_100 + 4<i32>:word32]
	branch s2_192 == 255<i32> l2305FA38
l2305FA28:
	Mem262[s0_254 + 20<i32>:word32] = s2_192
	Mem264[s0_254 + 16<i32>:word32] = a0_100 + 0x1000000<32> - s2_192
l2305FA38:
	s0_156 = Mem271[a1_101 + 20<i32>:word32]
	word32 a4_731
	a3_275 = update_sector_cache(a0_100, a1_101, out a4_731, out a5_277)
l2305F990:
	a5_277 = Mem70[(a5_74 << 3<i32>) + 0x4201758C<32>:word32]
	Mem289[a5_277 + 20<i32>:word32] = a1
	Mem290[a1 + 16<i32>:word32] = a0 + 0x1000000<32> - a5_277
l2305F96C:
	Mem293[0xFFFFFC<32>:word32] = a1
	a5_277 = 0xFFFFEC<32>
l2305F95A:
	s1_173 = 0<32>
l2305F908:
	Mem296[a1:byte] = 0<8>
	Mem297[0xB<32>:word32] = a1
	a5_277 = 0xFFFFFFFF<32>
	s1_173 = 7<32>
l2305F912:
	word32 s10_314 = Mem303[dwArg0118 + 12<i32>:word32]
	word32 s6_315 = Mem303[dwArg0118 + 44<i32>:word32]
	s0Out = s0_156
	s1Out = s1_173
	a0Out = dwArgD8
	a1Out = a1_101
	a3Out = a3_275
	a4Out = dwArgB8
	a5Out = a5_277
	s2Out = dwArg98
	s3Out = s3
	s4Out = s4_198
	s5Out = s5
	s6Out = s6_315
	s7Out = s7
	s10Out = s10_314
	s11Out = s11
	return ra_107
read_sector_meta_data_exit:
l2305F8BC:
	word32 a0_700
	word32 s3_705
	word32 s4_706
	word32 s2_704
	word32 s5_707
	word32 s1_699
	word32 a1_701
	word32 a3_702
	word32 a4_703
	word32 s6_708
	ef_log_debug(ra, 0x230C0664<32>, 0x230C04F8<32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_699, out a0_700, out a1_701, out a3_702, out a4_703, out s2_704, out s3_705, out s4_706, out s5_707, out s6_708)
l2305F8E4:


word32 sector_iterator(word32 ra, word32 a0, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      alloc_env
//      gc_collect
//      ef_load_env
// MayUse:  a0:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sector_iterator_entry:
l2305FA8E:
	Mem35[3<32>:word32] = a0
	word32 sp_141 = fp + -48<i32>
	word32 s6_106 = a5
	word32 a5_134 = 0xFFFFFFFF<32>
	word32 s0_123 = a0
	word32 s1_127 = a1
	word32 s5_105 = a3
	word32 s3_103 = a4
	word32 s7_107 = 0xFFFFFFFF<32>
l2305FAB4:
	word32 a4_156
	word32 a3_155
	word32 a0_152 = get_next_sector_addr(a5_134, out a3_155, out a4_156, out a5_134)
	word32 s2_150 = a0_152
	branch a0_152 != s7_107 l2305FAD6
l2305FAD6:
	word32 a0_291
	word32 s10_292
	word32 s11_293
	word32 s4_104
	word32 s2_102
	word32 a3_136
	word32 a4_138
	ra = read_sector_meta_data(ra, s0_123, a0_152, s0_123, 0<32>, Mem35[sp_141 + 216<i32>:word32], Mem35[sp_141 + 280<i32>:word32], out s0_123, out s1_127, out a0_291, out a1, out a3_136, out a4_138, out a5_134, out s2_102, out s3_103, out s4_104, out s5_105, out s6_106, out s7_107, out s10_292, out s11_293)
	branch s1_127 == 0<32> l2305FAE8
l2305FAE0:
	a5_134 = CONVERT(Mem35[s0_123 + 1<i32>:byte], byte, word32)
	branch a5_134 != s1_127 l2305FAB4
l2305FAE8:
	branch s6_106 == 0<32> l2305FAF6
l2305FAEC:
	word32 a1_295
	word32 s10_296
	word32 s11_297
	word32 a0_294
	ra = read_sector_meta_data(ra, s0_123, s2_102, s0_123, 1<32>, Mem35[sp_141 + 216<i32>:word32], Mem35[sp_141 + 280<i32>:word32], out s0_123, out s1_127, out a0_294, out a1_295, out a3_136, out a4_138, out a5_134, out s2_102, out s3_103, out s4_104, out s5_105, out s6_106, out s7_107, out s10_296, out s11_297)
l2305FAF6:
	word32 a7_161
	word32 s10_162
	word32 s11_163
	word32 s9_164
	word32 t0_165
	word32 t1_166
	word32 t4_167
	word32 t5_168
	word32 t6_169
	call s3_103 (retsize: 0;)
		uses: a0:s0_123,a1:s4_120,a2:s5_117,a3:a3_136,a4:a4_138,a5:a5_134,a7:a7_161,ra:ra_132,s0:s0_123,s1:s1_127,s10:s10_162,s11:s11_163,s2:s2_133,s3:s3_125,s4:s4_120,s5:s5_117,s6:s6_129,s7:s7_130,s9:s9_164,t0:t0_165,t1:t1_166,t4:t4_167,t5:t5_168,t6:t6_169
		defs: a0:a0_152,a1:a1_153,a3:a3_155,a4:a4_156,a5:a5_151,a7:a7_161,ra:ra_149,s0:s0_142,s1:s1_143,s10:s10_162,s11:s11_163,s2:s2_150,s3:s3_144,s5:s5_146,s6:s6_147,s7:s7_148,s9:s9_164,sp:sp_141,t0:t0_165,t1:t1_166,t4:t4_167,t5:t5_168,t6:t6_169
	branch a0_152 == 0<32> l2305FAB4
l2305FB00:
l2305FAC0:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_127
	a0Out = a0_152
	a1Out = a1
	a3Out = a3_155
	a4Out = a4_156
	a5Out = a5_134
	s2Out = s2_150
	s3Out = s3_103
	s4Out = dwArg78
	s5Out = s5_105
	s6Out = s6_106
	return ra
sector_iterator_exit:


word32 alloc_env(word32 ra, word32 a0, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      new_env
//      move_env
// MayUse:  a0:[0..31] ra:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
alloc_env_entry:
l2305FB02:
	word32 s0_278
	word32 s4_279
	word32 a5_31
	word32 s5_121
	word32 s3_119
	word32 s2_118
	word32 s1_115
	word32 a4_111
	word32 a3_110
	word32 a1_108
	word32 a0_107
	word32 s6_122
	word32 ra_106 = sector_iterator(ra, a0, dwArgF8, out s0_278, out s1_115, out a0_107, out a1_108, out a3_110, out a4_111, out a5_31, out s2_118, out s3_119, out s4_279, out s5_121, out s6_122)
	branch a5_31 == 0<32> l2305FB46
l2305FB30:
	word32 s0_280
	word32 s4_281
	ra_106 = sector_iterator(ra_106, s2_118, dwArgF8, out s0_280, out s1_115, out a0_107, out a1_108, out a3_110, out a4_111, out a5_31, out s2_118, out s3_119, out s4_281, out s5_121, out s6_122)
l2305FB46:
	branch a5_31 == 0<32> l2305FB7C
l2305FB4A:
	a4_111 = 0xFFFFFFFF<32>
	branch a3_110 != 0xFFFFFFFF<32> l2305FB7C
l2305FB52:
	branch a5_31 >u 1<32> l2305FB66
l2305FB58:
	branch CONVERT(Mem25[0x4200F508<32>:byte], byte, word32) == 0<32> l2305FB8A
l2305FB8A:
	word32 s4_285
	ra_106 = ef_log_debug(ra_106, 0x230C00C8<32>, a3_110, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_115, out a0_107, out a1_108, out a3_110, out a4_111, out s2_118, out s3_119, out s4_285, out s5_121, out s6_122)
	Mem129[0x4200F508<32>:byte] = SLICE(s1_115, byte, 0)
l2305FB66:
	word32 s0_282
	word32 a5_283
	word32 s4_284
	ra_106 = sector_iterator(ra_106, s2_118, dwArgF8, out s0_282, out s1_115, out a0_107, out a1_108, out a3_110, out a4_111, out a5_283, out s2_118, out s3_119, out s4_284, out s5_121, out s6_122)
l2305FB7C:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_115
	a0Out = a0_107
	a1Out = a1_108
	a3Out = a3_110
	a4Out = a4_111
	s2Out = s2_118
	s3Out = s3_119
	s4Out = dwArg14
	s5Out = s5_121
	s6Out = s6_122
	return ra_106
alloc_env_exit:


word32 gc_collect(word32 ra, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgF8, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      new_env
//      check_and_recovery_gc_cb
//      ef_set_env
//      ef_load_env
// MayUse:  ra:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31]
// LiveOut: a4 ra s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
gc_collect_entry:
l2305FBA8:
	word32 a3_17
	word32 s0_157
	word32 s1_158
	word32 a0_159
	word32 a1_160
	word32 a4_161
	word32 a5_162
	word32 s2_163
	word32 s3_164
	word32 s4_165
	word32 s5_166
	word32 s6_167
	word32 a0_168
	word32 a1_169
	word32 a3_170
	word32 s3_171
	word32 s5_172
	word32 s6_173
	word32 a4_130
	word32 s1_135
	word32 s2_138
	word32 s4_140
	word32 ra_133 = ef_log_debug(sector_iterator(ra, fp + -40<i32>, dwArgF8, out s0_157, out s1_158, out a0_159, out a1_160, out a3_17, out a4_161, out a5_162, out s2_163, out s3_164, out s4_165, out s5_166, out s6_167), 0x230C0510<32>, a3_17, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_135, out a0_168, out a1_169, out a3_170, out a4_130, out s2_138, out s3_171, out s4_140, out s5_172, out s6_173)
	branch a4_130 >u 1<32> l2305FBFE
l2305FBE8:
	word32 s0_174
	word32 a0_175
	word32 a1_176
	word32 a3_177
	word32 a5_178
	word32 s3_179
	word32 s5_180
	word32 s6_181
	ra_133 = sector_iterator(ra_133, fp + -40<i32>, dwArgF8, out s0_174, out s1_135, out a0_175, out a1_176, out a3_177, out a4_130, out a5_178, out s2_138, out s3_179, out s4_140, out s5_180, out s6_181)
l2305FBFE:
	Mem112[0x4200F508<32>:byte] = 0<8>
	s1Out = s1_135
	a4Out = a4_130
	s2Out = s2_138
	s4Out = s4_140
	return ra_133
gc_collect_exit:


word32 new_env(word32 ra, word32 a0, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg7C, word32 dwArg88, word32 dwArgAC, word32 dwArgE8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      create_env_blob
//      ef_set_env
// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a3 a4 ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
new_env_entry:
l2305FC0C:
	word32 s0_23
	word32 a3_106
	word32 a1_104
	word32 a0_103
	word32 a4_107
	word32 s1_113
	word32 s2_116
	word32 s3_117
	word32 s4_118
	word32 s5_119
	word32 s6_120
	word32 ra_111 = alloc_env(ra, a0, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgE8, dwArg0118, out s0_23, out s1_113, out a0_103, out a1_104, out a3_106, out a4_107, out s2_116, out s3_117, out s4_118, out s5_119, out s6_120)
	branch a0_103 != 0xFFFFFFFF<32> l2305FC52
l2305FC22:
	branch CONVERT(Mem9[0x4200F508<32>:byte], byte, word32) == 0<32> l2305FC52
l2305FC2C:
	word32 s1_83
	word32 s1_192
	word32 a0_193
	word32 a1_194
	word32 a3_195
	word32 a4_196
	word32 s2_197
	word32 s3_198
	word32 s4_199
	word32 s5_200
	word32 s6_201
	word32 a4_202
	word32 s2_203
	word32 s4_204
	word32 s0_205
	ra_111 = alloc_env(gc_collect(ef_log_debug(ra_111, 0x230C0578<32>, s0_23, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_192, out a0_193, out a1_194, out a3_195, out a4_196, out s2_197, out s3_198, out s4_199, out s5_200, out s6_201), dwArg30, dwArg34, dwArg58, dwArg7C, dwArgE8, out s1_83, out a4_202, out s2_203, out s4_204), s1_83, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgE8, dwArg0118, out s0_205, out s1_113, out a0_103, out a1_104, out a3_106, out a4_107, out s2_116, out s3_117, out s4_118, out s5_119, out s6_120)
l2305FC52:
	s1Out = s1_113
	a0Out = a0_103
	a1Out = a1_104
	a3Out = a3_106
	a4Out = a4_107
	s2Out = s2_116
	s3Out = s3_117
	s4Out = s4_118
	s5Out = s5_119
	s6Out = s6_120
	return ra_111
new_env_exit:


void check_and_recovery_gc_cb(word32 ra, word32 a0, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
check_and_recovery_gc_cb_entry:
l2305FC5C:
	branch CONVERT(Mem0[a0:byte], byte, word32) == 0<32> l2305FC86
l2305FC62:
	branch CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) != 3<32> l2305FC86
l2305FC86:
	return
l2305FC6C:
	Mem14[0x4200F508<32>:byte] = 1<8>
	word32 s4_138
	word32 s2_137
	word32 a4_136
	word32 s1_135
	gc_collect(ra, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgE8, out s1_135, out a4_136, out s2_137, out s4_138)
	return
check_and_recovery_gc_cb_exit:


word32 env_iterator(word32 ra, word32 a0, word32 s2, word32 s4, word32 dwArg1C, word32 dwArg98, word32 dwArgD8, word32 dwArg0158, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      find_env
//      move_env
//      ef_load_env
//      psm_dump_cmd
// MayUse:  a0:[0..31] ra:[0..31] s2:[0..31] s4:[0..31] Stack +001C:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +0158:[0..31]
// LiveOut: a3 a4 a5 ra s0 s10 s11 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
env_iterator_entry:
l2305FC8A:
	word32 a5_32 = 0xFFFFFFFF<32>
	word32 s0_20 = a0
	word32 s2_142 = a1
	word32 s3_143 = a2
	word32 s1_28 = 0xFFFFFFFF<32>
	word32 s5_145 = 1<32>
l2305FCAA:
	word32 a4_135
	word32 a5_136
	word32 a3_134
	word32 a0_33 = get_next_sector_addr(a5_32, out a3_134, out a4_135, out a5_136)
	branch a0_33 == s1_28 l2305FCEC
l2305FCB4:
	word32 a0_43
	word32 a1_297
	word32 a3_298
	word32 a4_299
	word32 s4_300
	word32 s6_301
	word32 s7_302
	ra = read_sector_meta_data(ra, s0_20, a0_33, fp + -56<i32>, 0<32>, dwArg98, dwArgD8, out s0_20, out s1_28, out a0_43, out a1_297, out a3_298, out a4_299, out a5_32, out s2_142, out s3_143, out s4_300, out s5_145, out s6_301, out s7_302, out s10, out s11)
	branch a0_43 != 0<32> l2305FCAA
l2305FCBE:
	a5_32 = CONVERT(bLoc37, byte, word32) + 0xFFFFFFFE<32> & 255<i32>
	branch s5_145 <u a5_32 l2305FCAA
l2305FCCC:
	Mem74[s1_28 + 80<i32>:word32] = s0_20
l2305FCCE:
	word32 a0_81
	word32 a1_311
	ra = get_next_env_addr(ra, fp + -56<i32>, dwArg0158, out s0_20, out s1_28, out a0_81, out a1_311, out a5_32, out s2_142, out s3_143, out s5_145)
	Mem99[a0_81 + 80<i32>:word32] = s0_20
	branch a0_81 == s1_28 l2305FCAA
l2305FCDC:
	word32 s0_110
	word32 s2_112
	word32 s4_114
	word32 a0_131
	call s4_114 (retsize: 0;)
		uses: a0:s0_110,ra:read_env(ra_88, s0_89, s2_91, dwLoc30, s4, s2, dwLoc08, dwLoc04, dwArg1C, 0xFFFFFFFF<32>, out s0_110, out a3_303, out a4_304, out a5_305, out s2_112, out s3_306, out s4_114, out s6_307, out s7_308, out s10_309, out s11_310),s2:s2_112,Stack +0010:dwLoc30,Stack +0014:s4,Stack +0018:s2,Stack +0038:dwLoc08,Stack +003C:dwLoc04,Stack +005C:dwArg1C,Stack +0084:0xFFFFFFFF<32>
		defs: a0:a0_131,a3:a3_134,a4:a4_135,a5:a5_136,ra:ra_139,s10:s10_149,s11:s11_150,s2:s2_142,s3:s3_143,s5:s5_145
	branch a0_131 == 0<32> l2305FCCE
l2305FCEC:
	s0Out = dwArg0158
	a3Out = a3_134
	a4Out = a4_135
	a5Out = a5_136
	s2Out = s2_142
	s3Out = s3_143
	s5Out = s5_145
	s10Out = s10
	s11Out = s11
	return ra
env_iterator_exit:


word32 find_env(word32 ra, word32 a0, word32 a1, word32 dwArg14, word32 dwArg28, word32 dwArg68, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      del_env
//      ef_get_env_blob
//      ef_set_env
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a4 a5 ra s0 s1 s10 s11 s2 s3 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s5 sp
find_env_entry:
l2305FCFE:
	word32 a2_342
	word32 a4_344
	word32 a5_345
	word32 a3_343
	word32 a1_341
	word32 a0_28 = strlen(a0, out a1_341, out a2_342, out a3_343, out a4_344, out a5_345)
	word32 a2_346
	word32 a5_348
	word32 a4_347
	word32 a0_39 = ef_calc_crc32(0<32>, a0, a0_28, out a2_346, out a4_347, out a5_348)
	word32 s4_44 = 0x420174F0<32>
	word32 s0_46 = 0<32>
l2305FD3E:
	word32 a5_105
	word32 a4_104
	word32 s10_119
	word32 s2_109
	word32 s11_120
	word32 s3_110
	word32 s0_129
	word32 a0_52 = Mem23[s4_44 + 4<i32>:int32]
	branch a0_52 == 0xFFFFFFFF<32> l2305FDB2
l2305FD46:
	branch CONVERT(Mem23[s4_44:uint16], uint16, word32) != a0_39 >>u 0x10<u32> l2305FDB2
l2305FD4E:
	word32 a1_350
	word32 a3_351
	word32 a4_352
	word32 a0_349
	ra = ef_port_read(ra, a0_52 + 0x1C<32>, fp + -112<i32>, 64<i32>, out a0_349, out a1_350, out a3_351, out a4_352)
	word32 a4_76
	word32 a3_353
	word32 a5_354
	branch strncmp(a0, fp + -112<i32>, a0_28, out a3_353, out a4_76, out a5_354) != 0<32> l2305FDB2
l2305FDB2:
	s0_46 = s0_46 + 1<32>
	s4_44 = s4_44 + 8<32>
	branch s0_46 != 0x10<32> l2305FD3E
l2305FDBA:
	word32 s5_112
	word32 s0_360
	word32 a3_361
	env_iterator(ra, a1, a0, s4_44, dwLoc54, dwArg28, dwArg68, dwArgE8, out s0_360, out a3_361, out a4_104, out a5_105, out s2_109, out s3_110, out s5_112, out s10_119, out s11_120)
	s0_129 = 0<32>
	branch true l2305FD98
l2305FDD6:
	word32 a3_362
	update_env_cache(s2_109, s5_112, Mem99[s3_110 + 80<i32>:int32], out a3_362, out a4_104, out a5_105)
l2305FD66:
	word32 a5_144 = Mem23[a4_76 + 4<i32>:word32]
	Mem145[a1 + 80<i32>:word32] = a4_76
	word32 s0_143 = s0_46 << 3<i32>
	word32 a4_146 = CONVERT(Mem145[a5_144 + 2<i32>:uint16], uint16, word32)
	word32 a5_149 = 0xFFFFFFF<32>
	branch a4_146 >u 0xFFFFFEE<32> l2305FD8A
l2305FD82:
	a5_149 = CONVERT(SLICE(a4_146 + 16<i32>, word16, 0), word16, word32)
l2305FD8A:
	Mem159[s0_143 + 0x420174F2<32>:word16] = SLICE(a5_149, word16, 0)
	word32 s7_359
	word32 a3_356
	word32 s4_357
	word32 s6_358
	word32 s0_355
	read_env(ra, a1, a0, dwLoc60, dwLoc5C, dwLoc58, dwLoc38, dwLoc34, dwLoc14, dwArg14, out s0_355, out a3_356, out a4_104, out a5_105, out s2_109, out s3_110, out s4_357, out s6_358, out s7_359, out s10_119, out s11_120)
	s0_129 = 1<32>
l2305FD98:
	s0Out = s0_129
	s1Out = dwLoc64
	a0Out = s0_129
	a4Out = a4_104
	a5Out = a5_105
	s2Out = s2_109
	s3Out = s3_110
	s9Out = dwArg18
	s10Out = s10_119
	s11Out = s11_120
	return dwArgE8
find_env_exit:


word32 del_env(word32 ra, word32 a0, word32 a1, word32 a2, word32 s3, word32 dwArg08, word32 dwArg0C, word32 dwArg58, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      move_env
//      ef_del_env
//      ef_set_env
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0058:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
del_env_entry:
l2305FDE4:
	word32 a3_138
	word32 ra_159
	word32 s0_160
	word32 s3_104
	word32 s2_103
	word32 s4_105
	word32 s1_118
	branch a1 != 0<32> l2305FE04
l2305FDF6:
	word32 s3_35
	word32 s10_420
	word32 s11_421
	word32 s2_418
	word32 s9_419
	word32 a4_416
	word32 a5_417
	word32 s1_415
	ra = find_env(ra, a0, fp + -120<i32>, dwLoc7C, dwLoc68, dwLoc28, dwArg58, out s0_160, out s1_415, out a0, out a4_416, out a5_417, out s2_418, out s3_35, out s9_419, out s10_420, out s11_421)
	branch a0 == 0<32> l2305FE54
l2305FE54:
	word32 a0_423
	word32 s1_422
	word32 a4_425
	word32 a1_424
	word32 s5_426
	word32 s6_427
	ra_159 = ef_log_debug(ra, 0x230C0274<32>, s3_35, dwLoc88, dwLoc68, dwLoc20, dwLoc1C, dwArg08, s3, out s1_422, out a0_423, out a1_424, out a3_138, out a4_425, out s2_103, out s3_104, out s4_105, out s5_426, out s6_427)
	s1_118 = 4<32>
l2305FE00:
l2305FE04:
	word32 a5_117
	branch a2 != 0<32> l2305FE80
l2305FE80:
	word32 a0_90
	word32 s1_428
	word32 a1_429
	word32 a4_430
	word32 a5_431
	word32 s6_432
	word32 s7_433
	word32 s11_435
	word32 s10_434
	ra_159 = write_status(ra, a0, fp + -128<i32>, 6<32>, 4<32>, 0x4200F50B<32>, dwLoc90, dwLoc8C, dwLoc88, dwLoc68, dwLoc44, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s0_160, out s1_428, out a0_90, out a1_429, out a3_138, out a4_430, out a5_431, out s2_103, out s3_104, out s4_105, out s6_432, out s7_433, out s10_434, out s11_435)
	a5_117 = CONVERT(Mem81[s2_103:byte], byte, word32)
	s1_118 = a0_90
	branch a5_117 != 0<32> l2305FEA8
l2305FE92:
	branch a0_90 != 0<32> l2305FEA8
l2305FE94:
	word32 a0_121
	word32 a1_120
	branch s3_104 == 0<32> l2305FEAE
l2305FEAE:
	a1_120 = CONVERT(Mem81[s0_160 + 2<i32>:byte], byte, word32)
	a0_121 = s0_160 + 16<i32>
l2305FE98:
	word32 a1_458
	word32 a2_459
	word32 a3_460
	word32 a4_461
	word32 a5_462
	a1_120 = strlen(s3_104, out a1_458, out a2_459, out a3_460, out a4_461, out a5_462)
	a0_121 = s3_104
l2305FEA4:
	word32 a4_463
	update_env_cache(a0_121, a1_120, 0xFFFFFFFF<32>, out a3_138, out a4_463, out a5_117)
l2305FEA8:
	Mem147[s2_103:byte] = 0<8>
l2305FE10:
	word32 a0_151
	word32 s1_436
	word32 a1_437
	word32 a4_438
	word32 a5_439
	word32 s6_440
	word32 s7_441
	word32 s10_442
	word32 s11_443
	ra_159 = write_status(ra, a0, fp + -128<i32>, 6<32>, 3<32>, 0x4200F50B<32>, dwLoc90, dwLoc8C, dwLoc88, dwLoc68, dwLoc44, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s0_160, out s1_436, out a0_151, out a1_437, out a3_138, out a4_438, out a5_439, out s2_103, out s3_104, out s4_105, out s6_440, out s7_441, out s10_442, out s11_443)
	Mem180[s2_103:byte] = 1<8>
	a5_117 = 1<32>
	s1_118 = a0_151
l2305FE22:
	branch s1_118 != 0<32> l2305FE70
l2305FE24:
	word32 s0_190 = a5_117 & 0xFF000000<32>
	word32 a0_444
	word32 a1_445
	word32 a3_446
	word32 a4_447
	ra_159 = ef_port_read(ra_159, s0_190 + 3<32>, fp + -128<i32>, 3<32>, out a0_444, out a1_445, out a3_446, out a4_447)
	s0_160 = s0_190 + 3<32>
	word32 a1_448
	word32 a5_449
	branch get_status(fp + -128<i32>, 4<32>, out a1_448, out a3_138, out a5_449) != 1<32> l2305FE70
l2305FE44:
	word32 a0_220
	word32 s1_450
	word32 a1_451
	word32 a4_452
	word32 a5_453
	word32 s6_454
	word32 s7_455
	word32 s10_456
	word32 s11_457
	ra_159 = write_status(ra_159, s0_190 + 3<32>, fp + -128<i32>, 4<32>, 2<32>, s2_103, dwLoc90, dwLoc8C, dwLoc88, dwLoc68, dwLoc44, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, out s0_160, out s1_450, out a0_220, out a1_451, out a3_138, out a4_452, out a5_453, out s2_103, out s3_104, out s4_105, out s6_454, out s7_455, out s10_456, out s11_457)
	s1_118 = a0_220
l2305FE70:
	s0Out = s0_160
	s1Out = s1_118
	a0Out = s1_118
	a3Out = a3_138
	a4Out = dwLoc70
	s2Out = s2_103
	s3Out = s3_104
	s4Out = s4_105
	return ra_159
del_env_exit:


word32 move_env(word32 ra, word32 s0, word32 a0, word32 s2, word32 s3, word32 s6, word32 dwArg08, word32 dwArg38, word32 dwArg68, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      check_and_recovery_env_cb
//      do_gc
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0068:[0..31]
// LiveOut: a0 a3 ra s0 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
move_env_entry:
	word24 nLocE8_466 = SLICE(dwLocE8, word24, 0)
l2305FEBA:
	branch CONVERT(Mem21[a0:byte], byte, word32) != 2<32> l2305FEE4
l2305FEDA:
	word32 a3_640
	word32 a4_641
	word32 s2_642
	word32 s4_644
	word32 s3_643
	word32 s0_637
	word32 a0_639
	word32 s1_638
	ra = del_env(ra, 0<32>, a0, 0<32>, s3, dwLocE8, dwLocE4, dwLoc98, out s0_637, out s1_638, out a0_639, out a3_640, out a4_641, out s2_642, out s3_643, out s4_644)
l2305FEE4:
	word32 a0_65
	word32 s5_635
	word32 s6_636
	word32 s3_634
	word32 s1_631
	word32 a4_633
	word32 a1_632
	word32 s2_136
	word32 s4_404
	word32 a3_392
	word32 s0_134
	word32 ra_145 = alloc_env(ra, fp + -228<i32>, dwLocB0, dwLocAC, s6, dwLoc64, dwArg08, dwArg38, out s0_134, out s1_631, out a0_65, out a1_632, out a3_392, out a4_633, out s2_136, out s3_634, out s4_404, out s5_635, out s6_636)
	branch a0_65 == 0xFFFFFFFF<32> l2305FFBC
l2305FEF6:
	word32 s3_137
	branch CONVERT(Mem21[0x4200F509<32>:byte], byte, word32) == 0<32> l2305FF3C
l2305FF04:
	word32 a5_668
	word32 a0_663
	word32 a4_667
	word32 a1_664
	word32 a3_666
	word32 a2_665
	word32 t1_662
	word32 ra_107 = memset(ra_145, fp + -204<i32>, 0<32>, 65<i32>, out t1_662, out a0_663, out a1_664, out a2_665, out a3_666, out a4_667, out a5_668)
	word32 a4_671
	word32 a5_672
	word32 a2_669
	word32 a3_670
	strncpy(fp + -204<i32>, s0_134 + 16<i32>, CONVERT(Mem21[s0_134 + 2<i32>:byte], byte, word32), out a2_669, out a3_670, out a4_671, out a5_672)
	word32 s11_678
	word32 a5_675
	word32 s10_677
	word32 s5_676
	word32 a3_673
	word32 a4_674
	ra_145 = env_iterator(ra_107, fp + -136<i32>, s2_136, s4_404, dwLocD4, dwLoc58, dwLoc18, dwArg68, out s0_134, out a3_673, out a4_674, out a5_675, out s2_136, out s3_137, out s5_676, out s10_677, out s11_678)
	dwLocE8 = CONVERT(nLocE8_466, word24, uint32) (alias)
	branch false l2305FFB2
l2305FF3C:
	word32 s2_172
	word32 s1_181
	word32 s3_212
	word32 s4_657
	word32 s6_658
	word32 s7_659
	word32 s11_661
	word32 s10_660
	word32 s0_651
	word32 s2_656
	word32 a1_652
	word32 a3_653
	word32 a5_655
	word32 a4_654
	word32 a0_645
	word32 s6_650
	word32 a1_646
	word32 a3_647
	word32 s3_649
	word32 a4_648
	word32 a0_198
	word32 s1_208
	word32 ra_206 = write_status(update_sec_status(ra_145, fp + -228<i32>, Mem159[s0_134 + 8<i32>:int32], 0<32>, s2_136, dwLocE8, dwLocC4, dwLocC0, dwLocBC, dwLoc98, dwLoc74, out s1_181, out a0_645, out a1_646, out a3_647, out a4_648, out s2_172, out s3_649, out s6_650), s1_181, fp + -204<i32>, 6<32>, 1<32>, s2_172, dwLocF0, dwLocEC, dwLocE8, dwLocC8, dwLocA4, dwLocA0, dwLoc9C, dwLoc78, dwLoc54, out s0_651, out s1_208, out a0_198, out a1_652, out a3_653, out a4_654, out a5_655, out s2_656, out s3_212, out s4_657, out s6_658, out s7_659, out s10_660, out s11_661)
	word32 s3_225 = s3_212 + 0xFFFFFFF8<32>
	word32 s2_226 = 0<32>
	word32 s7_228 = s1_208 + 8<i32>
l2305FF60:
	branch s2_226 <u s3_225 l2305FFD4
l2305FFD4:
	word32 s5_232 = 32<i32>
	branch s2_226 + 32<i32> <u s3_225 l2305FFE4
l2305FFE0:
	s5_232 = s3_225 - s2_226
l2305FFE4:
	word32 s2_276
	word32 s5_279
	word32 s11_720
	word32 s6_718
	word32 s10_719
	word32 a5_716
	word32 s4_717
	word32 a3_714
	word32 a4_715
	word32 s0_712
	word32 a1_713
	word32 a3_710
	word32 a4_711
	word32 a0_708
	word32 a1_709
	ra_206 = ef_port_write(ef_port_read(ra_206, a0_198 + 8<32> + s2_226, fp + -136<i32>, s5_232, out a0_708, out a1_709, out a3_710, out a4_711), s1_208, s7_228 + s2_226, fp + -136<i32>, s5_232, s2_226, dwLocF0, dwLocEC, dwLocC8, dwLocA4, out s0_712, out s1_208, out a0_198, out a1_713, out a3_714, out a4_715, out a5_716, out s2_276, out s3_225, out s4_717, out s5_279, out s6_718, out s7_228, out s10_719, out s11_720)
	s2_226 = s2_276 + s5_279
l2305FF64:
	word32 a1_297
	word32 s1_306
	word32 s6_313
	word32 s11_694
	word32 s7_692
	word32 s10_693
	word32 s3_690
	word32 s4_691
	word32 a5_688
	word32 s2_689
	word32 a3_686
	word32 a4_687
	word32 s0_684
	word32 a0_685
	word32 ra_304 = write_status(ra_206, s1_208, fp + -204<i32>, 6<32>, 2<32>, s2_226, dwLocF0, dwLocEC, dwLocE8, dwLocC8, dwLocA4, dwLocA0, dwLoc9C, dwLoc78, dwLoc54, out s0_684, out s1_306, out a0_685, out a1_297, out a3_686, out a4_687, out a5_688, out s2_689, out s3_690, out s4_691, out s6_313, out s7_692, out s10_693, out s11_694)
	word32 s0_323 = Mem159[a1_297 + 12<i32>:word32]
	word32 a5_696
	word32 a4_695
	update_sector_cache(s1_306 & 0xFF000000<32>, a1_297 + 0x1C<32> + CONVERT(Mem159[s0_323 + 2<i32>:byte], byte, word32) + s1_306, out a4_695, out a5_696)
	word32 a5_346
	word32 a4_698
	word32 a3_697
	update_env_cache(s6_313, CONVERT(Mem159[s0_323 + 2<i32>:byte], byte, word32), s1_306, out a3_697, out a4_698, out a5_346)
	s0_134 = Mem159[a5_346 + 80<i32>:word32]
	word32 s5_706
	word32 s6_707
	word32 s2_704
	word32 s4_705
	word32 a3_702
	word32 a4_703
	word32 a0_700
	word32 a1_701
	word32 s1_699
	ra_145 = ef_log_debug(ra_304, 0x230C0548<32>, CONVERT(Mem159[s0_134 + 2<i32>:byte], byte, word32), dwLocE8, dwLocC8, s2, s0, dwLoc58, dwLoc34, out s1_699, out a0_700, out a1_701, out a3_702, out a4_703, out s2_704, out s3_137, out s4_705, out s5_706, out s6_707)
l2305FFB2:
	word32 s2_682
	word32 s3_683
	word32 a0_680
	word32 a4_681
	word32 s1_679
	ra_145 = del_env(ra_145, 0<32>, s0_134, 1<32>, s3_137, dwLocE8, dwLocE4, dwLoc98, out s0_134, out s1_679, out a0_680, out a3_392, out a4_681, out s2_682, out s3_683, out s4_404)
l2305FFBC:
	s0Out = s0_134
	a0Out = s4_404
	a3Out = a3_392
	s3Out = dwLoc28
	return ra_145
move_env_exit:


void check_and_recovery_env_cb(word32 ra, word32 a0, word32 a3, word32 s2, word32 dwArg08, word32 dwArg18, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
check_and_recovery_env_cb_entry:
l23060004:
	word32 a5_13 = CONVERT(Mem9[a0:byte], byte, word32)
	branch CONVERT(Mem9[a0 + 1<i32>:byte], byte, word32) == 0<32> l23060078
l23060018:
	branch a5_13 != 3<32> l23060078
l23060078:
	branch a5_13 != 1<32> l23060054
l23060080:
	word32 s0_311
	word32 s1_312
	word32 a0_313
	word32 a1_314
	word32 a3_315
	word32 a4_316
	word32 a5_317
	word32 s2_318
	word32 s3_319
	word32 s4_320
	word32 s6_321
	word32 s7_322
	word32 s10_323
	word32 s11_324
	write_status(ra, a0, fp + 0xFFFFFFE8<32>, 6<32>, 5<32>, s2, dwLoc20, dwLoc1C, dwLoc18, dwArg08, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg7C, out s0_311, out s1_312, out a0_313, out a1_314, out a3_315, out a4_316, out a5_317, out s2_318, out s3_319, out s4_320, out s6_321, out s7_322, out s10_323, out s11_324)
l2306001E:
	word32 s2_72
	word32 s3_73
	word32 s6_76
	word32 a0_84
	word32 a3_87
	word32 s3_290
	word32 s0_289
	word32 s11_288
	word32 s10_287
	word32 s9_286
	word32 s7_285
	word32 s5_284
	word32 s4_283
	word32 a5_282
	word32 a4_281
	word32 a3_280
	word32 a2_279
	word32 a1_278
	word32 a0_277
	word32 s1_276
	word32 ra_93 = move_env(ef_log_info(ra, 0x230C00F8<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_276, out a0_277, out a1_278, out a2_279, out a3_280, out a4_281, out a5_282, out s2_72, out s3_73, out s4_283, out s5_284, out s6_76, out s7_285, out s9_286, out s10_287, out s11_288), a0, a0, s2_72, s3_73, s6_76, dwLoc18, dwArg18, dwArg48, out s0_289, out a0_84, out a3_87, out s3_290)
	branch a0_84 != 0<32> l23060060
l23060060:
	word32 a1_293
	word32 a3_294
	word32 a4_295
	word32 s2_296
	word32 a0_292
	word32 s1_291
	word32 s3_297
	word32 s4_298
	word32 s5_299
	word32 s6_300
	ef_log_debug(ra_93, 0x230C0164<32>, a3_87, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_291, out a0_292, out a1_293, out a3_294, out a4_295, out s2_296, out s3_297, out s4_298, out s5_299, out s6_300)
l2306003E:
	word32 s1_301
	word32 a0_302
	word32 a1_303
	word32 a3_304
	word32 a4_305
	word32 s2_306
	word32 s3_307
	word32 s4_308
	word32 s5_309
	word32 s6_310
	ef_log_debug(ra_93, 0x230C0144<32>, a3_87, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_301, out a0_302, out a1_303, out a3_304, out a4_305, out s2_306, out s3_307, out s4_308, out s5_309, out s6_310)
l23060054:
	return
check_and_recovery_env_cb_exit:


void do_gc(word32 ra, word32 s0, word32 a0, word32 s2, word32 s4, word32 dwArg04, word32 dwArg0C, word32 dwArg18, word32 dwArg1C, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
do_gc_entry:
	byte bLoc78_269 = SLICE(dwLoc78, byte, 0)
l23060090:
	branch CONVERT(Mem0[a0:byte], byte, word32) == 0<32> l2306014E
l23060096:
	branch (CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) + 0xFFFFFFFE<32> & 255<i32>) >u 1<32> l2306014E
l2306014E:
	return
l230600A6:
	word32 s11_431
	word32 s10_430
	word32 s7_429
	word32 s6_428
	word32 s4_427
	word32 s3_426
	word32 s2_425
	word32 a5_424
	word32 a4_423
	word32 a3_422
	word32 a1_421
	word32 a0_420
	word32 s1_419
	word32 s0_131
	word32 ra_130 = write_status(ra, Mem23[a0 + 4<i32>:word32] + 3<32>, fp + -124<i32>, 4<32>, 3<32>, s2, dwLoc80, dwLoc7C, dwLoc78, dwLoc58, dwLoc34, dwLoc30, dwLoc2C, dwLoc08, dwArg1C, out s0_131, out s1_419, out a0_420, out a1_421, out a3_422, out a4_423, out a5_424, out s2_425, out s3_426, out s4_427, out s6_428, out s7_429, out s10_430, out s11_431)
l230600D4:
	word32 dwLoc78_272
	byte bLoc77_268 = SLICE(nLoc77_474, byte, 0)
	word32 a0_69
	word32 s1_78
	word32 s2_79
	word32 s0_457
	word32 a1_458
	word32 a5_459
	word32 s3_460
	word32 s5_461
	word32 ra_76 = get_next_env_addr(ra_130, s0_131, dwArg0118, out s0_457, out s1_78, out a0_69, out a1_458, out a5_459, out s2_79, out s3_460, out s5_461)
	branch a0_69 != s1_78 l23060114
l23060114:
	word32 s2_100
	word32 s3_101
	word32 s6_109
	word32 s4_435
	word32 s7_436
	word32 s10_437
	word32 s11_438
	word32 a5_434
	word32 a4_433
	word32 a3_432
	ra_130 = read_env(ra_76, fp + -120<i32>, s2_79, dwLoc70, dwLoc6C, dwLoc68, s2, s0, dwLoc24, dwArg04, out s0_131, out a3_432, out a4_433, out a5_434, out s2_100, out s3_101, out s4_435, out s6_109, out s7_436, out s10_437, out s11_438)
	dwLoc78 = nLoc77_474 (alias)
	nLoc77_474 = dwLoc78
	branch CONVERT(bLoc77_268, byte, word32) == 0<32> l230600D4
l23060120:
	dwLoc78_272 = SEQ(nLoc77_474, bLoc78_473) (alias)
	word16 wLoc78_278 = SLICE(dwLoc78_272, word16, 0)
	byte bLoc77_317 = SLICE(wLoc78_278, byte, 8)
	bLoc78_269 = bLoc78_473 (alias)
	bLoc78_269 = SLICE(wLoc78_278, byte, 0) (alias)
	word16 wLoc76_323 = SLICE(dwLoc78_272, word16, 16)
	dwLoc78 = nLoc77_474 (alias)
	branch s2_100 <u (CONVERT(bLoc78_473, byte, word32) + 0xFFFFFFFE<32> & 255<i32>) l230600D4
l2306012E:
	word32 a0_121
	word32 s3_136
	word32 a3_462
	ra_130 = move_env(ra_130, s0_131, fp + -120<i32>, s2_100, s3_101, s6_109, dwLoc78_272, s2, dwLoc18, out s0_131, out a0_121, out a3_462, out s3_136)
	dwLoc78 = SEQ(wLoc76_323, bLoc78_473) (alias)
	bLoc78_473 = bLoc78_269
	branch a0_121 == 0<32> l230600D4
l23060136:
	word32 s1_463
	word32 a0_464
	word32 a1_465
	word32 a3_466
	word32 a4_467
	word32 s2_468
	word32 s3_469
	word32 s4_470
	word32 s5_471
	word32 s6_472
	ra_130 = ef_log_debug(ra_130, s3_136 + 656<i32>, CONVERT(bLoc78_473, byte, word32), SEQ(bLoc78_473, bLoc78_473, wLoc78_278), dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_463, out a0_464, out a1_465, out a3_466, out a4_467, out s2_468, out s3_469, out s4_470, out s5_471, out s6_472)
	dwLoc78 = SEQ(SEQ(bLoc78_473, bLoc78_473), bLoc77_317) (alias)
l230600E2:
	word32 a3_188
	word32 s1_439
	word32 a0_440
	word32 a1_441
	word32 a4_442
	word32 s2_443
	word32 s3_444
	word32 s4_445
	word32 s5_446
	word32 s1_447
	word32 a0_448
	word32 a1_449
	word32 a3_450
	word32 a4_451
	word32 s2_452
	word32 s3_453
	word32 s4_454
	word32 s5_455
	word32 s6_456
	ef_log_debug(format_sector.constprop.16(ra_76, a0_69, s2_79, dwLoc64, dwLoc50, s4, dwLoc40, dwLoc3C, dwLoc28, dwLoc18, dwLoc04, dwArg0C, out s1_439, out a0_440, out a1_441, out a3_188, out a4_442, out s2_443, out s3_444, out s4_445, out s5_446), 0x230C02C0<32>, a3_188, dwLoc78_272, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_447, out a0_448, out a1_449, out a3_450, out a4_451, out s2_452, out s3_453, out s4_454, out s5_455, out s6_456)
	return
do_gc_exit:


word32 create_env_blob(word32 ra, word32 s1, word32 a1, word32 a3, word32 s2, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg6C, word32 dwArg7C, word32 dwArgA8, word32 dwArgD8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_set_env
//      ef_env_set_default
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[8..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a1 a3 a4 ra s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
create_env_blob_entry:
l23060152:
	word32 a3_116
	word32 a4_106
	word32 a1_104
	word32 ra_102
	word32 s1_119
	word32 s3_122
	word32 s6_124
	word32 s0_132
	word32 a0_18 = Mem17[s1 + 20<i32>:word32]
	word32 dwLoc40_512 = CONVERT(nLoc40, word24, uint32)
	word24 nLoc27_493 = SLICE(s2, word24, 8)
	word32 s4_100 = a0_18
	word32 s2_103 = a1
	byte bLoc3D_526 = SLICE(dwLoc40_512, byte, 24)
	word32 a3_29
	word32 a5_624
	word32 a4_623
	word32 a1_621
	word32 a2_622
	branch strlen(a1, out a1_621, out a2_622, out a3_29, out a4_623, out a5_624) <=u 64<i32> l230601A4
l230601A4:
	word32 a5_631
	word32 a4_630
	word32 a2_628
	word32 a3_629
	word32 a1_627
	word32 a0_626
	word32 t1_625
	ra_102 = memset(ra, fp + -60<i32>, 255<i32>, 0x1C<32>, out t1_625, out a0_626, out a1_627, out a2_628, out a3_629, out a4_630, out a5_631)
	word32 a3_52
	word32 a5_635
	word32 a4_634
	word32 a2_633
	word32 a1_632
	word32 a0_51 = strlen(a1, out a1_632, out a2_633, out a3_52, out a4_634, out a5_635)
	byte bLoc28_481 = SLICE(a0_51, byte, 0)
	word32 a1_60 = a3 + 28<i32> + (a0_51 & 255<i32>)
	word32 dwLoc28_494 = SEQ(nLoc27_493, bLoc28_481)
	branch a1_60 <=u 0xFFFFEC<32> l230601EA
l230601EA:
	a1_104 = a1_60
	branch s1 != 0xFFFFFFFF<32> l230601FE
l230601F0:
	word32 a0_67
	word32 s5_82
	word32 s1_654
	ra_102 = new_env(ra_102, a0_18, dwLoc28_494, dwLoc10, dwLoc0C, dwArg18, dwArg20, dwArg24, dwArg3C, dwArg48, dwArg6C, dwArgA8, dwArgD8, out s1_654, out a0_67, out a1_104, out a3_116, out a4_106, out s2_103, out s3_122, out s4_100, out s5_82, out s6_124)
	s1_119 = a0_67
	s0_132 = 6<32>
	branch a0_67 == s5_82 l23060190
l230601FE:
	word32 a0_105
	ra_102 = update_sec_status(ra_102, s4_100, a1_104, fp + -61<i32>, s2_103, a1_60, dwLoc14, dwLoc10, dwLoc0C, dwArg18, dwArg3C, out s1_119, out a0_105, out a1_104, out a3_116, out a4_106, out s2_103, out s3_122, out s6_124)
	s0_132 = a0_105
	branch a0_105 != 0<32> l23060190
l2306020E:
	word32 a2_145
	word32 a2_655
	word32 a4_656
	word32 a5_657
	word32 a4_658
	word32 a5_659
	word32 a2_660
	word32 a4_661
	word32 a5_662
	ef_calc_crc32(ef_calc_crc32(ef_calc_crc32(a0_105, fp + -40<i32>, 8<32>, out a2_655, out a4_656, out a5_657), s2_103, CONVERT(bLoc28_481, byte, word32), out a2_145, out a4_658, out a5_659), s3_122, a2_145, out a2_660, out a4_661, out a5_662)
	word32 a0_161
	word32 s0_663
	word32 a5_664
	word32 s4_665
	word32 s7_666
	word32 s10_667
	word32 s11_668
	ra_102 = write_status(ra_102, s1_119, fp + -60<i32>, 6<32>, 1<32>, s2_103, dwLoc40_512, dwLoc3C, a1_60, dwLoc18, dwArg0C, dwArg10, dwArg14, dwArg38, ra, out s0_663, out s1_119, out a0_161, out a1_104, out a3_116, out a4_106, out a5_664, out s2_103, out s3_122, out s4_665, out s6_124, out s7_666, out s10_667, out s11_668)
	s0_132 = a0_161
	branch a0_161 != 0<32> l23060190
l2306023E:
	word32 a0_192
	word32 s0_669
	word32 a5_670
	word32 s4_671
	word32 s5_672
	word32 s7_673
	word32 s10_674
	word32 s11_675
	ra_102 = ef_port_write(ra_102, s1_119, s1_119 + 8<i32>, fp + -52<i32>, 0x14<32>, s2_103, dwLoc40_512, dwLoc3C, dwLoc18, dwArg0C, out s0_669, out s1_119, out a0_192, out a1_104, out a3_116, out a4_106, out a5_670, out s2_103, out s3_122, out s4_671, out s5_672, out s6_124, out s7_673, out s10_674, out s11_675)
	s0_132 = a0_192
	branch a0_192 != 0<32> l23060190
l2306024E:
	word32 a0_236
	word32 a1_237
	word32 s4_251
	word32 t1_676
	word32 a0_677
	word32 a1_678
	word32 a2_679
	word32 a3_680
	word32 a4_681
	word32 a5_682
	word32 s0_683
	word32 a3_684
	word32 a4_685
	word32 a5_686
	word32 s5_687
	word32 s7_688
	word32 s10_689
	word32 s11_690
	ra_102 = ef_port_write(memset(ra_102, fp + -64<i32>, 255<i32>, 1<32>, out t1_676, out a0_677, out a1_678, out a2_679, out a3_680, out a4_681, out a5_682), s1_119, s1_119 + 28<i32>, s2_103, CONVERT(bLoc28_481, byte, word32), s2_103, dwLoc40_512, dwLoc3C, dwLoc18, dwArg0C, out s0_683, out s1_119, out a0_236, out a1_237, out a3_684, out a4_685, out a5_686, out s2_103, out s3_122, out s4_251, out s5_687, out s6_124, out s7_688, out s10_689, out s11_690)
	s0_132 = a0_236
	branch CONVERT(bLoc3D_526, byte, word32) != 0<32> l23060286
l23060272:
	word32 a4_692
	word32 a5_693
	update_sector_cache(Mem156[s4_251 + 4<i32>:int32], a1_237 + 0x1C<32> + CONVERT(bLoc28_481, byte, word32) + s1_119, out a4_692, out a5_693)
l23060286:
	word32 a5_691
	a1_104 = update_env_cache(s2_103, CONVERT(bLoc28_481, byte, word32), s1_119, out a3_116, out a4_106, out a5_691)
	branch a0_236 != 0<32> l23060190
l23060296:
	word32 a0_318
	word32 t1_694
	word32 a0_695
	word32 a1_696
	word32 a2_697
	word32 a3_698
	word32 a4_699
	word32 a5_700
	word32 s0_701
	word32 a5_702
	word32 s4_703
	word32 s5_704
	word32 s7_705
	word32 s10_706
	word32 s11_707
	ra_102 = ef_port_write(memset(ra_102, fp + -64<i32>, 255<i32>, 1<32>, out t1_694, out a0_695, out a1_696, out a2_697, out a3_698, out a4_699, out a5_700), s1_119, CONVERT(bLoc28_481, byte, word32) + 0x1C<32> + s1_119, s3_122, s2_103, s2_103, dwLoc40_512, dwLoc3C, dwLoc18, dwArg0C, out s0_701, out s1_119, out a0_318, out a1_104, out a3_116, out a4_106, out a5_702, out s2_103, out s3_122, out s4_703, out s5_704, out s6_124, out s7_705, out s10_706, out s11_707)
	s0_132 = a0_318
	branch a0_318 != 0<32> l23060190
l230602BC:
	word32 a0_350
	word32 s0_708
	word32 a5_709
	word32 s4_710
	word32 s7_711
	word32 s10_712
	word32 s11_713
	ra_102 = write_status(ra_102, s1_119, fp + -60<i32>, 6<32>, 2<32>, s2_103, dwLoc40_512, dwLoc3C, a1_60, dwLoc18, dwArg0C, dwArg10, dwArg14, dwArg38, ra, out s0_708, out s1_119, out a0_350, out a1_104, out a3_116, out a4_106, out a5_709, out s2_103, out s3_122, out s4_710, out s6_124, out s7_711, out s10_712, out s11_713)
	s0_132 = a0_350
	branch a0_350 != 0<32> l23060190
l230602CE:
	branch CONVERT(bLoc3D_526, byte, word32) == 0<32> l23060190
l230602D6:
	word32 a0_714
	word32 a4_715
	word32 s4_716
	word32 s5_717
	ra_102 = ef_log_debug(ra_102, 0x230C024C<32>, a3_116, a1_60, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_119, out a0_714, out a1_104, out a3_116, out a4_715, out s2_103, out s3_122, out s4_716, out s5_717, out s6_124)
	Mem408[0x4200F508<32>:byte] = 1<8>
	a4_106 = 1<32>
l230601DA:
	word32 a5_647
	word32 a2_646
	word32 a0_645
	word32 s4_648
	word32 s5_649
	word32 s7_650
	word32 s9_651
	word32 s10_652
	word32 s11_653
	ra_102 = ef_log_info(ra_102, 0x230C0228<32>, a3_52, a1_60, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_119, out a0_645, out a1_104, out a2_646, out a3_116, out a4_106, out a5_647, out s2_103, out s3_122, out s4_648, out s5_649, out s6_124, out s7_650, out s9_651, out s10_652, out s11_653)
	s0_132 = 6<32>
l2306017E:
	word32 s11_644
	word32 s10_643
	word32 s9_642
	word32 s7_641
	word32 s5_640
	word32 s4_639
	word32 a5_638
	word32 a2_637
	word32 a0_636
	ra_102 = ef_log_info(ra, 0x230C01F8<32>, a3_29, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_119, out a0_636, out a1_104, out a2_637, out a3_116, out a4_106, out a5_638, out s2_103, out s3_122, out s4_639, out s5_640, out s6_124, out s7_641, out s9_642, out s10_643, out s11_644)
	s0_132 = 4<32>
l23060190:
	s1Out = s1_119
	a0Out = s0_132
	a1Out = a1_104
	a3Out = a3_116
	a4Out = a4_106
	s2Out = s2_103
	s3Out = s3_122
	s6Out = s6_124
	return ra_102
create_env_blob_exit:


word32 ef_get_env_blob(word32 ra, word32 a0, word32 a1, word32 a3, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg58, word32 dwArg88, word32 dwArgC8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_cb_wifi_event
//      ef_get_env
//      psm_test_cmd
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0058:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 ra s0 s1 s10 s11 s2 s3 s4 s5 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_get_env_blob_entry:
l230602FA:
	word32 s0_119
	word32 s10_203
	word32 s1_120
	word32 ra_104
	word32 s11_204
	word32 s2_121
	word32 s5_124
	word32 s4_123
	word32 s3_122
	word32 s9_212
	branch CONVERT(Mem0[0x4200F50A<32>:byte], byte, word32) != 0<32> l2306032E
l2306032E:
	word32 a0_159
	branch a0 == 0<32> l23060336
l23060334:
	branch a1 != 0<32> l23060374
l23060374:
	word32 a3_26
	word32 a4_27
	word32 a2_30
	word32 a1_420
	word32 a5_421
	branch strlen(a0, out a1_420, out a2_30, out a3_26, out a4_27, out a5_421) <=u 64<i32> l230603C6
l230603C6:
	word32 a0_50
	word32 a5_55
	word32 s1_60
	word32 s2_63
	word32 s3_64
	word32 s0_432
	word32 s2_429
	word32 s3_430
	word32 s4_431
	word32 a1_426
	word32 a3_427
	word32 a4_428
	word32 s1_424
	word32 a0_425
	word32 a4_102
	ra_104 = find_env(ra, ef_port_env_lock(a2_30, a3_26, a4_27, mstatus, dwLoc88, dwLoc6C, dwArg14, dwArg88, dwArgC8, out s1_424, out a0_425, out a1_426, out a3_427, out a4_428, out s2_429, out s3_430, out s4_431), fp + -120<i32>, dwLoc7C, dwLoc68, dwLoc28, dwArg58, out s0_432, out s1_60, out a0_50, out a4_102, out a5_55, out s2_63, out s3_64, out s9_212, out s10_203, out s11_204)
	branch a0_50 == 0<32> l230603EE
l230603D4:
	branch s2_63 == 0<32> l230603DE
l230603DA:
	Mem79[s2_63:word32] = a5_55
l230603DE:
	word32 s0_81 = s3_64
	branch a5_55 >=u s3_64 l230603E6
l230603E4:
	s0_81 = a5_55
l230603E6:
	word32 a0_451
	word32 a1_452
	word32 a3_453
	ra_104 = ef_port_read(ra_104, a0_50, s1_60, s0_81, out a0_451, out a1_452, out a3_453, out a4_102)
l230603EE:
	word32 a3_449
	word32 a4_450
	s0_119 = ef_port_env_unlock(a4_102, mstatus, dwLoc88, dwLoc6C, dwArg14, dwArg88, dwArgC8, dwArg0108, out s1_120, out a3_449, out a4_450, out s2_121, out s3_122, out s4_123, out s5_124)
l23060384:
	branch Mem16[0x4200F560<32>:int32] == 0<32> l230603C0
l230603C0:
	word32 a5_433
	xTaskGetTickCount(out a5_433)
l2306038E:
	word32 a5_434
	xTaskGetTickCountFromISR(out a5_434)
l23060392:
	word32 a2_445
	word32 a1_444
	word32 a3_446
	word32 a4_447
	word32 a5_448
	strlen(a0, out a1_444, out a2_445, out a3_446, out a4_447, out a5_448)
	a0_159 = 0x230C0414<32>
l23060336:
	branch Mem16[0x4200F560<32>:int32] == 0<32> l2306036E
l2306036E:
	word32 a5_422
	xTaskGetTickCount(out a5_422)
l23060340:
	word32 a5_423
	xTaskGetTickCountFromISR(out a5_423)
l23060344:
	a0_159 = 0x230C03E4<32>
l23060366:
	word32 a2_437
	word32 a0_435
	word32 a1_436
	word32 a4_439
	word32 a5_440
	word32 s8_443
	word32 a3_438
	word32 s6_441
	word32 s7_442
	ra_104 = bl_printk(ra, a0_159, 0x230C03C8<32>, dwLoc88, dwLoc68, dwLoc20, dwLoc1C, dwArg08, s3, out s1_120, out a0_435, out a1_436, out a2_437, out a3_438, out a4_439, out a5_440, out s2_121, out s3_122, out s4_123, out s5_124, out s6_441, out s7_442, out s8_443, out s9_212, out s10_203, out s11_204)
	s0_119 = 8<32>
l23060310:
	word32 a0_412
	word32 a1_413
	word32 a4_416
	word32 a2_414
	word32 a3_415
	word32 s6_418
	word32 s7_419
	word32 a5_417
	ra_104 = ef_log_info(ra, 0x230C043C<32>, a3, dwLoc88, dwLoc68, dwLoc20, dwLoc1C, dwArg08, s3, out s1_120, out a0_412, out a1_413, out a2_414, out a3_415, out a4_416, out a5_417, out s2_121, out s3_122, out s4_123, out s5_124, out s6_418, out s7_419, out s9_212, out s10_203, out s11_204)
	s0_119 = 0<32>
l2306031E:
	s0Out = s0_119
	s1Out = s1_120
	a0Out = dwLoc8C
	s2Out = s2_121
	s3Out = s3_122
	s4Out = s4_123
	s5Out = s5_124
	s9Out = s9_212
	s10Out = s10_203
	s11Out = s11_204
	return ra_104
ef_get_env_blob_exit:


